push fsubr cmpsl and lods outsl stos add cmp (bad) nop lock loopne sbb push out fistpll iret mov cs jl add ss insb in std fnstsw mov sub rex.WRXB push and and pop divl mov mov xor pop rex.R sub cmp (bad) sar or xchg pop mov adc (bad) and addr32 xchg jo mov loopne (bad) test sahf pop std cmpl jb sbb mov imul (bad) mov (bad) insl mov (bad) lahf mov (bad) sub (bad) xor lods or subl sarl jbe cmp xchg push cmc cmp and jns xor or push fsubs mov lret (bad) or cwtl imul (bad) out test (bad) stos stc add xor adc (bad) xlat rol insb add mov xlat stc sbb xchg stc cmpsb and add mov xchg movsl (bad) imul (bad) and (bad) sub cmp rex.WRB rex.RXB (bad) mov cld pop push cmp rorb rex xchg rex.RXB rex.RB (bad) fiadd retq pop rex.X retq sbb adc mov jmpq callq leaveq (bad) hlt mov jae test adc (bad) loopne rex.X add mov mov clc (bad) or imul pushq nop sti rex.R mov (bad) rex mov mov loop repnz push jnp jmpq scas mov xor jl leaveq jmp (bad) mov lahf hlt rex.RXB lods fdivrs push std scas mov adc pop add ds (bad) mov sub int3 mov shll adc sbb test mov rex.WR (bad) xchg jp mov sti retq xchg mov (bad) (bad) (bad) (bad) (bad) lods rclb rcr rex.XB (bad) jo movabs clc sub or rorl or jnp jle or rcrb and add add movslq jge rex.WB add fwait (bad) int mov mov add or cld (bad) lods andb lods mov jle retq mov rex.WX mov in rcrb movabs out rcrb push mov adc stos lods (bad) xchg adc push and rex.X push mov and movsl (bad) sbb sub out xor outsl int mov outsl roll cld xchg (bad) (bad) std loopne xchg rex.WRXB add add (bad) cli xor fisub fwait push push hlt mov mov mov pushfq mov outsb xor movslq xor sahf push ja movabs mov (bad) xchg jne imul (bad) callq cld outsl xchg in mov ja jo rex.X imul jae imul push mov test movsl jno sbb jno ja push pop jnp pushq mov add jno mov enterq rex.RXB rcll jo add rex.WR sbb (bad) push mov jb movsb test add sbb adc (bad) jb rex.W rex.WX jl jnp (bad) popfq callq jnp jb xor jmp cmp mov xor (bad) rex.WR jo mov outsl rex.R roll mov xchg jb (bad) jl pushq xor sbb in xchg push test cwtl adc jle jne hlt xchg fs je iret adc fidivr insl cmp decl ror imul mov js (bad) scas rcll repnz test push test add ja xchg (bad) movabs cmp loop scas add mov adc scas jb ja jne enterq mov pushq (bad) xchg rex.X add push js xor and mov sub rex.RX rex.RXB lock mov mov cltd insb xchg add in or retq xor (bad) fsubrl xchg rex.XB (bad) (bad) jp popfq cmp repz jmp mov test sahf (bad) (bad) jno rex.WX and rex.WRXB subl or pop jg incl repnz adc lods (bad) xor or sub (bad) or pop adc rex.W imul popfq sti fs adc (bad) loopne mov jb (bad) (bad) test sbb jl mov mov rex.RX cmp push pop cmp lods adc in (bad) jo imul (bad) ds fcmovu add pop cmp sahf fcoml adc callq cmp xrelease pop icebp (bad) xchg rex.WRB test lock adc sbb xchg add cmp mov leaveq mov (bad) faddl pop mov sbb sti loopne mov js xchg es outsb clc imul (bad) decb cmp (bad) icebp (bad) repz rcrl rex.WX rex.XB mov imul rex.R sub mov mov xor (bad) (bad) std or add add (bad) rex.WRX xchg sub mov vcvtss2si sahf (bad) push fwait mov adc rex.WRXB mov xchg mov pop (bad) sbb add rex.WRXB mov in xchg out iret (bad) mov rex.WX repnz xor pushq sub cmp addr32 adcl and rcl adc test scas sbb or add repz cs sbb in stos cli push rex iret mov xchg jle (bad) sbb sbb addr32 jle adc loopne js movsb int jnp sbb xchg (bad) xchg xor jrcxz jmp (bad) xor mov scas (bad) (bad) (bad) cld or (bad) (bad) (bad) repz ficoml sti (bad) pop fistpll rex.WRX jbe jne mov or movsb sub or cmpsl pop xor movsb mov test (bad) lods out jo mov xchg out jrcxz movabs int3 stos rolb callq jne or inc sub add cmp neg sbb mov rcl add jmpq pmullw add shl jb bnd mov (bad) fisubrl insb lahf sbb (bad) sbb rorl (bad) mov jne (bad) cmp pop stos mov data16 (bad) fistp imul mov rex.RXB xor mov xorl (bad) (bad) cld cmp jns (bad) (bad) (bad) (bad) jmpq rex.R (bad) (bad) mov fcomip sbb test sarb test idivb enterq add (bad) (bad) repnz push (bad) push (bad) jl mov (bad) adc add fnsave (bad) int ss mov cmp and mov fadd in push (bad) push shr cmp rex.WXB mov (bad) add and jmpq jmpq outsl vpmullw outsb or adc jns push lods cltd ds pop push and xorl and in rclb xchg lret or stos fs push (bad) rex.WXB sbb jno iret xor jno cmc fs xor popq sarl sbb xchg fmuls pushq clc sub seto rex.WX (bad) out (bad) (bad) (bad) (bad) std or pushfq loope (bad) (bad) std xchg cmp or rex.X hlt rex.R icebp movsl rex.WXB repnz test mov add or movabs lret pop sub xchg mov (bad) nop mov movabs xchg pushq icebp pop movabs callq add rex.WR fstpt test callq (bad) fsubrl mov je add retq in mulb xchg adc push (bad) jmp mov pop push xchg cwtl cmpb or callq iret xorl gs movsl adc movabs (bad) loopne push dec pushq gs and rcr popfq cmp xchg add push sti nop mov mov pop hlt out cltd mov cmc xchg mov xlat xchg fcompl (bad) (bad) mov and jne cmp addl (bad) (bad) insb mov xor pop pop pop cmp cmp (bad) cmc (bad) (bad) (bad) (bad) in mov mov mov outsb lods xchg adc in sbbb pushq xchg (bad) movsl xorl pop cmp lahf add repz ss jne mov jmpq pushq jmpq mov jmpq jne clc clc movb cmc cmc stc cmc test jmpq jne setle rol xor rex.W lock ror jmpq je sar push shrd mov rcr stc rol sub bswap lea jmpq ja jmpq mov mov bswap movsbl jmpq callq jmpq not jmpq jo add (bad) loope (bad) pushfq rex.W sbb mov (bad) fstpl iret out mov add mov and mov lret sub adc (bad) xchg outsb pushq (bad) popfq rex.WXB repz clc sbb mov jbe mov stc rex.WXB jmp (bad) (bad) sti xor in (bad) (bad) (bad) (bad) sbb (bad) sbb sar mov mov sar (bad) add adc (bad) mov cmp add mov icebp (bad) lea ljmp movslq gs or leaveq pop push (bad) (bad) xchg movabs fpatan push stc addr32 push or adc test cltd mov adc imul loope sub ds add je callq flds mov xlat (bad) sbb fmuls (bad) int3 cmp pop (bad) movabs (bad) rex.WRX lods in xlat mov out ss (bad) in fdivs and jle enterq movsb (bad) sub add leaveq mov (bad) add (bad) (bad) (bad) sti mov in adc (bad) (bad) (bad) sahf rex.WRX rex.WR (bad) mov adc (bad) rex.WB jmpq (bad) mov imul movsl js jmp movsb (bad) gs in xchg add lock mov insl cmp lock xor int movsl xor rcll or xor add bt cmc jmpq callq cmc btc add lea mov clc jle cmp cmpb jmpq repz rex.XB sub push mov xchg stc pushfq cmp (bad) adc test add outsl push xchg adc add sbb rcrb xchg rex stc (bad) jle rol and mov (bad) jno cld stos or cmc mull (bad) fwait adc rex.WR js (bad) (bad) (bad) and (bad) (bad) sti mov (bad) (bad) (bad) (bad) popfq jmp mov in repnz sub (bad) (bad) std out imul loope jno (bad) (bad) pop in in mov lea xor jge retq cmpsl (bad) add pop rex.WX in add add or (bad) cmp rex.X mov repz lret addr32 test pushq cltd mov add in stos and rex.WXB out add stc add movzbl sbb mov cmc stc stc cmpb jmpq cmpsl rcrl add lea add sbb (bad) rcrl add sub and sbb xlat rcrl add xor out sbb imul add rcrl add sbb push xor (bad) rcrb add sbb (bad) xor (bad) rcrb add xor (bad) rcrb add xor (bad) rcrb add mov sbb rex.RXB add xor push rcrb add addr32 mov sbb rcrb add sbb (bad) xor ja sbb callq xor xchg sbb or sbb loopne sbb xchg rcrb add lea lock cmpsl rcrb add lea add sbb add add (bad) movabs cmp jmpq jne or xor add and mov rol add jmpq jmpq bt jmpq callq clc stc cmp jmpq jmpq and (bad) stos mov sbb (bad) push sarl (bad) hlt xchg (bad) or sbb mull xchg (bad) add (bad) mov ja rorl movslq adc jbe (bad) je jg out lock adc (bad) pop out repnz sahf nop or add pushfq mov sub (bad) mov push cmp rex.RXB (bad) sahf mov adc (bad) in xchg rex.R xchg (bad) movsl pop mov and stos nop xor (bad) (bad) (bad) sti int3 cli or (bad) mov stos addr32 test xor rex.X ss add push (bad) stc rex.R cs rex.X sarl negb sbb mov movabs (bad) mov pop nop add add mov icebp pop jae (bad) je sub rol shrd bt push setl dec bsf mov sub sub movsbw bswap lea jmpq callq not rcl bsr add movabs movzbw shl mov test cmpb jmpq cmp jmpq add jmpq cld and (bad) or jae mov stos int3 imul and cmpl (bad) in mov movslq mov jnp (bad) pushq adc mov (bad) push divl add ja push cmpsl movslq leaveq (bad) in mov and (bad) rex.WRX int xor movabs rcll (bad) mov insb adc rex.WXB out repnz mov lock (bad) (bad) (bad) pushq jne xor rex.WXB sti fnstcw fcmovnu xchg (bad) pop lret rex.RB int (bad) push cmp int lods rex.R add std jbe fcmovnb pushq jnp cmp lret rex rex.WR in fnstcw adc add cld push jmpq mov mov retq sar bts jmpq (bad) adc cmp xchg fisttpl movabs mov push cmp xchg cld lahf scas rex.RX rex.WRX cmp pop (bad) cmpsb rex.XB cmp int push out mov popfq sbb sbb and cmp jge xor test (bad) or (bad) (bad) (bad) xchg jle movsb cmp lods xchg test popfq (bad) cmc fmuls jmpq (bad) (bad) (bad) (bad) callq rex.W (bad) (bad) callq fisttpl pushq (bad) (bad) repnz rorb mov out adc test sysenter lods xor cmp push jb nop cld movsb mov add cmpl add (bad) test fs pop insl jo mov cmp mov (bad) (bad) in xchg lret jmpq sbb sub (bad) or out (bad) (bad) out (bad) addl int (bad) adc (bad) int3 jp (bad) (bad) (bad) out xchg retq jp cmpsl test sahf (bad) (bad) pop xor out jno imul test (bad) mov outsb imul in cmc or mov xor (bad) mov (bad) (bad) lahf movabs (bad) fistp (bad) push mov pop mov repnz xor movabs mov (bad) (bad) push or sub lods lock (bad) (bad) (bad) (bad) clc mov std je insl pushfq icebp cli imul xchg jbe sub mov adc (bad) (bad) (bad) cli or repnz (bad) je (bad) (bad) (bad) sti mov xchg cmp cwtl and xor rex.X xchg mov (bad) (bad) (bad) std or cld repnz jle rex.RX (bad) (bad) decb pop ds (bad) mov lret jns andl and (bad) subb push vmovmskps mov movslq add add or xchg movabs stc sahf xor lods mov rolb adcl mov mov cmc mov mov rorb add jge rex.WRB insl popfq add (bad) notb mov lret cmc adc mov mov or mov popfq mov in or cltd push pop adc cmp (bad) xchg add push (bad) rex.RXB mov jbe (bad) sbb retq fstpt ficomp add (bad) and jo in mov rex.R (bad) cmp popfq out fsubr or (bad) (bad) std or cmp (bad) (bad) std xchg add vrsqrtps xor add add jp lret cli (bad) sub test enterq jne shrb rex.WRXB pop cmp cmp (bad) movabs xor xor and sbb and test pop (bad) (bad) test nop je (bad) ds mov idiv adc bswap bsf shld add mov jmpq add rex.RXB gs outsl fs gs outsb fs gs fwait rex.W (bad) repnz (bad) lock out cwtl cmp fdivr cmp mov mov adc fidivl outsb fimull negb xlat fcmovb sub ds mov sub sbb jo pushq test (bad) (bad) cld or rcr pop (bad) (bad) (bad) (bad) repnz cltd insb rex int3 jmpq faddp int adc mov repnz and rcrb fsubl cmp or jno mov (bad) add pop and add fdivl cmpb ss movabs and jnp test (bad) jae cltd iret or rcll rex.RXB stc movabs pop pmaxub adc rex (bad) cmp cmp stc xor jmpq jmpq rep mov bswap not pop jmpq mov movslq cmp hlt (bad) mov movabs xchg movabs nop mov jno (bad) popfq xorl sbb pop ss jbe pop jle add scas pop pop add jno pushq mov mov rex.XB test jge lods movabs roll rex.RX (bad) (bad) sti popfq push adc gs (bad) (bad) incb rex.RX or bnd xchg imul fs pop stos mov pushq add pop xor push or in jp movabs (bad) jp sbb jns mov test hlt push add js jmpq mov stc test test jmpq pop and shl roll fucom or pushq mov sub and mov (bad) mov (bad) mov add test rex.WRXB add jmp cld in orb insl sbb xchg movabs (bad) (bad) sti hlt fistp in insb jp sub jrcxz adc pcmpgtw push or mov roll (bad) jbe div fwait cmpsl sar (bad) (bad) push xchg in sbb (bad) add xor mov callq xchg data16 (bad) cmp xor vmovdqu int3 or mov cmp mov (bad) push insl or in sbb push or rcl xor jnp jmp mov stc (bad) addr32 jne clc cmp clc bt movb test test jmpq scas (bad) enterq xchg imul sub sbb enterq jle movb sbb mov cs sbb mov pop out mov (bad) movabs or sar div add rex.B pop mov sahf std pushfq out rex.B or cs lret rex.WXB rex.W add (bad) sti add jno (bad) (bad) incb pop (bad) clc out (bad) mov hlt outsb gs jmp cmpsb (bad) (bad) (bad) incl rex.RX movsb sti (bad) xor out jrcxz idiv sti (bad) mov hlt lods std (bad) loop fs rex.WRX rex.WX fs mov scas gs jo rex.XB jnp pop mov cli ja adc bt stc mov jmpq or jae and cld jg xchg std in xor jns pushfq rex.RXB js cmpsl rex.WRB (bad) (bad) in mov xchg (bad) jne rex.RX enterq and scas (bad) fcmovb adc mov sbb pop mov (bad) push rex.R (bad) rex.WX (bad) pop (bad) repz add es jl test (bad) (bad) cli fwait scas lods shrb (bad) (bad) std test rex.WB xchg jg mov (bad) xorl out (bad) (bad) sahf rex.WR rex.WRXB mov jmpq loope movsb xchg xchg push add add add loop repnz jle (bad) cmp rex.RXB popfq adc sbb fisubrl add jnp movslq rex.WR rex.RX cltd scas popfq rorb mov sti xchg stos push (bad) je cmp bt sub jmpq pushq rex push in loopne jnp sub lea je retq out sub test fwait push lahf iret sbb ss (bad) rex.RB xor ja xor and adc jb shr cmpl pop xchg mov rex.RX cld add movslq rex.WX icebp popfq out imul movslq fisttpll and lret sarb in cmp movsb jge sbb (bad) movslq (bad) (bad) sti movsl jp test (bad) (bad) (bad) decb sub xor scas adc add add jl lret jne iret mov movabs sbbl (bad) mov mov sub mov rclb movabs nop (bad) fmull (bad) xchg mov xor jmpq bnd sahf (bad) addr32 xchg xlat setnp mov andl adc (bad) (bad) (bad) mov gs (bad) mov pop insl rclb out and mov fcoml jns cmpl retq xor lods sbb fcoms iret jmp std jns (bad) cmpsl rex.WX stc test setle rcr (bad) adcl sbb (bad) (bad) sti xor (bad) (bad) (bad) (bad) (bad) jl and rex.XB push scas roll (bad) lcall (bad) in shlb rex movsb sti pushq lods xchg stc jmpq sarb or xchg movsl sarb out xchg loop push or cmp rex.W pop mov std ja mov jmpq jmpq add rex.RXB gs imul add jl jg jae add jno mov mov imul xorl rex.R (bad) fsubp out cmpsl adc and nop rex.WXB fbstp cmpsl mov push ficoml mov stos xchg add or pop movabs (bad) movsl pop mulb (bad) push out add mov jo cltd sbb (bad) (bad) xchg and mov out xor addr32 mov rex.R out test (bad) (bad) jmpq push (bad) or xor retq sub cmp rex.X and mov xchg (bad) rex.WXB add rex.XB jle sbb scas stos adc and mov cmpsl xor xlat hlt movsl (bad) add adc repz adc xchg mov lock mull imul leaveq sub out adc xchg and movabs mov jb (bad) rex.WRB mov xchg scas sbb out movabs out (bad) mov lret pop push rex or cmpsb xor imul rex.WXB sbb imul jge adc roll sbb mov out fmuls sbb xor push jmpq sar fwait add adc or (bad) cmp movabs rex lret insb mov (bad) lret jmpq jp (bad) (bad) decb (bad) (bad) (bad) (bad) mov or rex.RXB rcl mov push repz test es xchg mov cmp (bad) (bad) xor in sbb jns or je outsb sti xor lods mov out (bad) mov decl sbb sub movslq pop lea and fwait rex.XB test and cmp xchg shr mov outsl pop cmpl repz in movabs (bad) (bad) nop jl repz fimul xlat int3 cs mov rex.WB sbb lret std pop push mov int3 insb sub (bad) (bad) cli imul in (bad) (bad) (bad) (bad) std loope scas cmp (bad) rex.W xchg (bad) and clc (bad) cs pushq ds and or cmp data16 sbb sub (bad) data16 test (bad) (bad) (bad) (bad) (bad) inc (bad) xor rex push push repnz rex.WRX (bad) loope mov rcr mov rcrb rex.RXB out xchg rex jns in cmpsb (bad) sti push rex.WXB xor xchg rex.WRX mov pop lock or mov add rex.WB pop or mov xor or mov push jo retq shl sub out push push xchg callq jp and jl jnp adc rex.RX (bad) (bad) xchg add or outsl pop adc (bad) add lods pushq (bad) enterq mov (bad) fidivrl jb cmp ja (bad) (bad) sti shll sub (bad) (bad) (bad) stos popfq fdiv rex.RXB add push (bad) xchg mov add add scas rex.W scas mov mov movsb push xchg enterq pushfq sbb jmp pop adc mov loopne repz enterq pushq retq jmpq pop (bad) nop xchg (bad) in jle mov add rex.RX (bad) adc ds rex.WRX jmp mov outsl rex.RXB fldenv retq cmp loope movabs xchg jb sub addr32 not mov mov rex.WRXB and out xor loope (bad) mov rex.RB jnp fild movabs sbb rorl rex.XB cld jo xor (bad) repnz mov fwait test (bad) (bad) cli cmpsb jae or (bad) (bad) (bad) std (bad) mov rcr lret adc mov mull stos mov add mov iret lcall sbb stos jo and enterq mov mov xor jne sub (bad) (bad) (bad) dec rex.XB mov int3 stc sahf mov sub cmp shll faddp sub insb int3 jrcxz pop in rex.WRB outsl or sub rex.WRB add jrcxz clc pop adc (bad) jo es movsb push mov add lea pop adc cmpsb (bad) movabs jp xor jnp outsl rex.WRX cmpsl sbb adc (bad) (bad) scas movabs mov rex.RXB xorb sub xchg scas movsb jbe movsl adcb and orl mov and (bad) xchg std cmp lret pushq clc int3 pop loopne (bad) (bad) sti jnp add cs (bad) (bad) (bad) jnp pop rex.WB movsl (bad) out loopne (bad) cmpsl mov adc imul (bad) (bad) (bad) sti addr32 (bad) leaveq adc xchg (bad) cmp mov add sbb mov shrb icebp pushfq in xor add pop (bad) jle (bad) mov notb lods mov add fdivrl add (bad) rex.X outsb pop repnz (bad) movslq (bad) jno in (bad) mov xlat repz rex.WRX cmp (bad) mov (bad) retq rex.RXB adc adc add mov jle stos nop test loopne xor jmp or (bad) cs jle (bad) mov xor ds retq jmp add sub mov (bad) mov rex.XB mov rcrl imul cmpsl roll push cmpsb (bad) (bad) (bad) cld push adc (bad) (bad) incl je mov iret data16 movsb ds ja fistp push pushfq iret pushq es add out test sub cmp and sub (bad) imul mov jge xor add add popfq add stc pop (bad) sbb sbb (bad) sbb mov adc (bad) jns xchg cmp bt cmp sub cmc cmp clc pushq test cmp cmp bt cmp jmpq jae sbb mov add mov add mov jmpq jmpq jmpq add sub stc stc add test clc test clc mov inc cmc mov stc jmpq jmpq cmp jg insb rclb iret cld in scas sbb (bad) loop rex.R rex.W (bad) rex.WR sbb (bad) fs lahf movslq movabs imul lahf pop ja pop outsl js mov jbe insl mov nop stos scas (bad) mov movabs sbb add js mov popfq rex.WB xor mov xchg xchg cmpl repz mov movslq (bad) (bad) (bad) decb (bad) (bad) (bad) pushq cwtl mov scas sub jle addr32 (bad) xchg cld out mov jne enterq lret in loope cmc rex.RXB adc push imul sub (bad) push push fisub xlat std loop jnp adc test mov (bad) adc in in decl test add stc jmpq jmpq setb pop jmpq add clc mov cmp cmc test jmpq jne ror xor not sbb bt mov rcl setp clc stc add (bad) lock neg sar mov cmp clc test cmc test jmpq test neg cmc jmpq je cmp clc add clc cmp jmpq jmpq jne and mov not shrd bswap xor sub shrd data16 (bad) mov cmp clc bt sub jmpq jmpq jmpq callq jmpq jmpq pushq jmpq (bad) adc movabs (bad) ss fimull lods jg rex.WRB xchg mov out lret xchg rex.RX (bad) jbe callq add sub out cmpsl mov pushq cqto pushfq rex.X mov mov iret cltd scas (bad) insb addr32 and cmc (bad) rex.RXB push cmp in retq clc add push jle and xchg rex.WXB out int movabs and int test mov in (bad) (bad) sti insl push and lahf (bad) (bad) (bad) (bad) push mov jmp icebp neg mov nop repz (bad) (bad) callq xchg scas (bad) push adc stc push sbb nop decl xlat jns xor jbe xchg fnstsw loopne (bad) cmp cmp (bad) push cmp shll sti in mov (bad) movsb xor (bad) add callq and add cmp adc dec mov test clc cmpb jmpq push shl callq callq retq rex.WRXB mov out pushfq rex.WXB icebp out movsl sti jmpq pop xchg sahf (bad) push xchg out (bad) je adc (bad) adc lods (bad) jmp jb xchg (bad) (bad) (bad) std rex.XB xchg or xchg jae rex.WXB rex (bad) rex.WRXB in xor (bad) jge stc xchg or (bad) (bad) sti add (bad) icebp rex.X (bad) (bad) std jmp loopne out add (bad) jno cmp push or cli insb clc lret sbb fisubrl mov sbb (bad) pushfq retq jp and add in cmp rex.R rex.WR enterq jb cmp pop movabs (bad) pop pushfq jo mov sbb js int3 scas (bad) (bad) (bad) push rex.X mov jmpq rex.WX adc sub sub (bad) in fdivl data16 (bad) add (bad) cwtl (bad) mov and cmp pop rex.WB mov add pop rcrl (bad) mov jo jne bt bsr movsbw shr mov cmc cmc cmc cmc add test clc cmp movzwl shr mov jmpq add rex.WR movslq rex.B insb outsl movslq jmpq jne mov neg bsf mov not sar mov cmc stc cmp jmpq jmpq jne bsr stc bt mov mov test cmc or ja je xchg movsbw not lea movsbw xchg lea xchg movzwl mov movzbq mov jmpq jb cmc cmp jmpq jmpq rolb adc loope cmpsl or (bad) cmp mov je cld stos (bad) ror pushq mov cmp mov (bad) icebp callq pop int (bad) (bad) push scas add xorl in (bad) test xor (bad) stos int3 jae cmpb in xor adc rex.WRXB sbb fist repz rex.WRX fdivl (bad) (bad) (bad) sti push xchg iret cltd movabs clc cld cmc pop or rex jle rex.RXB (bad) (bad) pop (bad) (bad) (bad) (bad) mov rex.RX fnsave or mov sahf outsl (bad) add (bad) sub xchg pop leaveq cmpsb mov add rex.RX pop rex.B mov ja js or add nop mov or (bad) jg in or movabs (bad) repnz jle loopne loop add lea mov fs test pop pushfq sarl rex clc jl (bad) shrl imul outsl fs retq es cli mov (bad) xchg mov adc add cmp cmp (bad) (bad) (bad) jmpq (bad) (bad) (bad) callq jbe rex.W or (bad) and (bad) pushq movsl movabs cltd push xchg cmp adc test imul add shll (bad) jns mov and stc (bad) push movabs rex.RX mov mov out jl push test mov sbb js (bad) jae sarb xchg and lcall (bad) sbb js sarb mov mov (bad) xchg (bad) pop (bad) cmp mov (bad) iret outsb sub mov or test movzbl or sub sete movzbw not bswap mov jmpq rex.WXB jno iret cmpsl xlat test mov (bad) push jae xor jmp cmpsl pop jns (bad) sti jmpq rex.WRX leaveq hlt jmp popfq jnp sub (bad) (bad) jns test sbb loope mov mov rex add adc (bad) xchg test sbb (bad) (bad) callq xchg imul outsl shrl fbstp cmpsl mov sub retq (bad) imul (bad) movsb lahf int movslq test cmp out rex.WRB rorb mov or cli xor retq add jmpq jae rol neg bts cmc mov movabs shrd sbb and mov bswap movsbw mov cmc jmpq jmpq add rex.RXB gs gs imul rex.X es jge push test cli (bad) cltd rex.B bsf xlat jno or or pop (bad) lret xor icebp adc (bad) mov rex.RB pop addb jne or and retq and xor or jle pop lret mov (bad) (bad) (bad) sti mov (bad) (bad) (bad) (bad) cmpsb rex.WRX adc cmpsl xlat sub fcmovu jnp cmp xchg (bad) mov movabs in stc mov movabs xor (bad) (bad) jnp xchg sub pushq add add outsb ds (bad) push mov (bad) xchg callq pushq pop (bad) cmp (bad) cmpsb mov imul movabs rcrb movabs adc jne movhps je sub mov mov jmpq je lea mov lea bswap jmpq bt add clc not mov bt test and cmc clc add jmpq outsb movabs lea cmp xor movslq ja (bad) (bad) in add and sub (bad) (bad) hlt sarl jmp repnz divb in sub movups clc (bad) (bad) es icebp (bad) (bad) (bad) (bad) std lods mov rex.W cmp retq jnp (bad) mov test jo je pop (bad) (bad) (bad) dec adc cld fstcw (bad) lea cli lock mov xchg sbb and pushfq mov sti mov jp jnp movabs mov add clc sub xchg enterq add imul cmc clc add jmpq jmpq stos jmpq jmpq jne shl stc mov test cmp cmp sub xor mov test bt clc sub cmc pushq stc jmpq jmpq jmpq cmp test add jmpq imul jrcxz,pt int3 or adc xor loopne xchg test (bad) mov fisubr (bad) test idiv (bad) rorb (bad) jle callq sbb mov rex.B (bad) (bad) cmpsl xchg rex.RB rex.WXB test movslq retq cld vpaddq imulb (bad) repnz (bad) (bad) cli adc (bad) je (bad) rex.WRXB push fwait test push imul fnsave xor add lea or add movabs lea sbb (bad) cld jb rex.RXB out cmp cmp (bad) divl (bad) outsb scas and sarl adc insl retq sbb callq testb fwait imul mov (bad) ja adc cmp (bad) mov lods xchg (bad) push pop (bad) (bad) sub rex.XB add stc pop jbe lea movabs lcall adc jno cli cli pushfq andl (bad) std repz (bad) jb out adc or in jo movabs movabs test (bad) or push adc xchg cmc sub sub xor sub pushfq rex.WB and stc mov movabs rex.XB mov adc mov subl cmc cmc sub add inc mov bt add inc mov cmp test jmpq dec cmc bt stc clc not stc jmpq jae jmpq pop rex.WRXB mov movabs js ljmp icebp in sbb loopne rex.R sbb jmp mov out (bad) mov cmp movsl mov xor mov mov idivl sub (bad) pop (bad) sar (bad) (bad) stos pop or mov xor cli xor test adc movabs xor push callq int jmpq cmc cmc rcr (bad) lret sysexit mov scas (bad) mov (bad) (bad) cwtl movabs jne (bad) rex.WRB int loop add add sbb xor xor movl fdivrs cmp rex.WXB rex.B notl pop adc push (bad) mov (bad) jne (bad) (bad) pop jmp jne mov repnz callq repnz negl test jl mov xchg cld pushfq rex.XB xchg cmovnp xlat imul fdivs xor rex.W pushq (bad) mov fs rex.RXB jp rcrl ss in cwtl jmpq mov lret xor (bad) adc sbb cmp cmpsl lods mov rex.W (bad) xor leaveq outsb movl (bad) (bad) (bad) sti jb pushq (bad) cld pop popfq movsb insl rex.WB imull sbb push cmp jns (bad) popfq xchg adc or (bad) cmp pop repnz or imulb push scas cltd push (bad) out (bad) add pushq xor (bad) fimul cmpsb rex.WR mov adc xchg jp push popfq loop sarb or idivb nop out lret mov sarl rex.W or mov out (bad) adc (bad) sbb lock sbb push push clc movsl (bad) (bad) (bad) callq icebp cld jg addr32 rex.WB repz xor negb jg loop sbb (bad) push shrl add pushq (bad) clc xchg xchg and xchg jb jrcxz jg shrl xor cmpsb mov cwtl shrl or lret sbb enterq lock sub (bad) xor pop (bad) (bad) lea in nop cmp xor sub add add mov sub (bad) push ss jle sbb jns roll push sbb cltd and iret (bad) ficom xor rcrl jo rex.RXB mov jbe sahf or xchg (bad) mov jae scas add rol imulb push fwait mov rol int3 push hlt mov test (bad) mov xor jg pop jnp adcb push je jno subb lret mov lods cmp and xchg mov adc insb push cmp test adc shl bts xor bswap movzbl movzbw mov neg bt add and (bad) lock (bad) lock test cmc test jmpq (bad) lods leaveq scas fucomip jae (bad) cmp xchg cmp sbb rex.RB movabs (bad) rex.WX rex.WX movsb (bad) mov movabs sbb (bad) movsb and test and out xlat jl adc jae nop adc and out mov or test rex.WRXB rex.XB rex.W (bad) test imul ja (bad) xchg mov xchg movslq jns stos (bad) (bad) (bad) sti jbe insb (bad) pop (bad) (bad) (bad) (bad) (bad) sbb ljmp fistpl outsb (bad) rex.WB rex.WX cwtl sbb (bad) (bad) jmpq (bad) rex.W fstl push lock nop retq mov pushq mov and mov in iret movabs movabs xchg push (bad) add add mov sbb mov (bad) cs test cmp add test clc bt cmp test jmpq jmpq rcl mov cmp add test setne cmc mov stc cmc test jmpq cmpb jmpq jmpq clc imul cmp add jmpq jmpq loope jg jmpq mov hlt sub sub (bad) jne outsb add leaveq pushfq (bad) sbb lock cli jrcxz sbb sbb ds pcmpeqb (bad) rex.WB xchg rex.RB rex.RXB lea pop xor jrcxz or rex.RXB pop cmp ja cmc out cmp and (bad) (bad) sti loope push mov (bad) (bad) (bad) dec popfq jae mov rex.WRX (bad) gs cmp pop pop pop mov or cmp jno callq rex.RXB fcmovnu sbb adc in fnstcw (bad) rex.RXB negb cmc sub in loope mov iret sahf mov add add ds adc nop out nop (bad) out ja cmpsl sbb cmp rex.RB stc imul xor xor cmc or mov add and insl or mov xchg jns ffreep movabs rex.WRXB adc cld in (bad) test sbb in cs test imul jae push (bad) movslq mov rex.RXB movabs xor cld (bad) loope lret popfq mov (bad) cmp (bad) movsl stc fcomip add (bad) add movabs stos (bad) pop (bad) (bad) (bad) (bad) sbb mov mov (bad) rex.X pushq imul fimull xor or push add (bad) xlat jle (bad) (bad) (bad) dec push hlt jp insb adc lock out jp or mov xor and cmp mov in adc negb shlb xor push imul sub mov rex.W mov sbb fadd jmpq jmpq ja rcl ror rol inc sub shr xor xor lea add cmc mov cmp and inc or mov cmc stc cmc repnz jmpq cmp addr32 out (bad) or movabs cmpsl movb push cmpl mov rex.RX icebp xchg rex.WRB cmc icebp jmpq mov rex.WX rex.RX lock xchg rex.RX cmpsl sbb or mulb or mov in mov xlat xchg test mov nop rex.WR (bad) (bad) sti xor movslq (bad) (bad) (bad) (bad) sbb mov add stc rex.WXB jae mov imul or push push pop add pop (bad) (bad) (bad) (bad) (bad) cld (bad) cmp mul pushfq mov (bad) push mov in and (bad) jae (bad) fidiv (bad) sbb movabs mov je cmp pushfq in test movabs stc cmp jmpq jmpq callq lea or movsbl add clc mov cmc cmp cmp cmc cmpb jmpq jne jmpq test cmc test jmpq jmpq lea not pop jmpq jmpq jmpq pop sub (bad) or xchg and movsb adc andb add add sbb clc (bad) test (bad) fcomp and rorb rolb ror lret sub adc push sbb movsb sbb jbe stos leaveq fs rex.B test mov punpckhwd (bad) (bad) cld mov (bad) (bad) pushq dec popq sbb adc rex.R sarl push and (bad) jno loope push rex.RB rex.B rex.XB icebp push sub (bad) rex.RB outsb ud1 add add rex.W mov jno insb std xchg js cmp (bad) rolb test cmp sarb sbb repnz add xchg mov je pop int3 stos jg rex.W jb jg cmpsl mov sbb (bad) enterq (bad) pushfq add add clc cmc movzwl adc test mov jmpq iret cwtl (bad) retq mov sub ror jg jo mov sbb insb rex.RXB fwait mov lods push movsl xchg mov push push mov (bad) test popfq mov push movabs (bad) (bad) jbe (bad) outsl mov ja pop (bad) lahf adc cmpsb cltd fwait adc (bad) cwtl or sub mov stos fcomip iret cmp movq lea pop jmp cmpsl (bad) xchg (bad) std (bad) test pop pop sbb xchg nop sub (bad) (bad) out mov outsl xchg out ds (bad) sbb or lods xchg xlat cmp lahf (bad) add cmp xorb pushq xor (bad) pop rex.WRX xchg and pushfq loope retq push jae (bad) cwtl pop xlat int3 (bad) lods cmpsl pushfq rex.RX xor outsl addl cmpsl fnstenv (bad) mov mov xlat nop adc adc cmpsl int3 or (bad) or stc jae (bad) jrcxz mov movabs mov es int sbb mov and (bad) (bad) xlat mov sbb faddl pop rorl cmp sbb (bad) stc (bad) (bad) jrcxz iret cs (bad) xchg faddl mov js add xchg outsl push jge movabs stos sbb add xor sbb mov jmp sbb (bad) jnp rorb movslq xchg (bad) negq lods mov cli imul pushfq stos mov cmpsl cmp test ds xchg outsl and jmp (bad) nop sbb jns ds rex.RX (bad) (bad) scas xlat popfq in xor (bad) adc sub jnp outsl mov xchg (bad) xor in sbb (bad) mov mov mov pushfq adc (bad) mov rex.B (bad) (bad) jg lret jns (bad) popfq push and mov jne scas sbb cli pop js in add mov jb loopne and rex.RB lea rcrb (bad) xchg or (bad) mov (bad) sub xchg pop shrl mov insl jrcxz (bad) mov xchg movsl sbb jb add fcmovb xchg cmp mov mov cmc sbb int (bad) pop pop outsl mov (bad) je int3 adc std adc (bad) xchg repz (bad) mov retq mov adc sub adc xchg jne sub mov (bad) jo cs pop rex.WX mov sbb adc rol cmp pop rcrb mov rorl cmpsl jae out jge sarb adc rcll mov mov fcmovnu retq rex.W fisubrl push mul repz xchg mov xchg (bad) out push pushfq mov shrb out xchg cld (bad) sub mov mov pop retq or iret (bad) adc pop (bad) and mov retq xchg repnz cmpsl movabs movabs xor imul out outsl cmp rcll movsl fsubs nop sub stc jmp movabs nop adcb (bad) sarl test movsl rex.WRXB (bad) xchg (bad) jle fiaddl mov lret sarl pushq (bad) movslq int jae rex xlat fsubrp popfq popfq push cmp jae popfq scas in xchg mov rex.WXB cmp (bad) retq cmp rex.WRXB rex.WX xchg or ja adc mov (bad) iret icebp xchg (bad) cmpsb sbb iretw rex.RB xchg xor jle jle imul (bad) mov negl or (bad) cmovnp mov mov mov sub outsl and test sbb ja (bad) sub icebp mov mov movabs xchg or cmp movabs fstl shlb mov callq xchg jrcxz lahf mov nop scas retq xchg frstor sub add sbb fwait mov std (bad) xchg (bad) frstor jl sub push sbbl adc sar (bad) pop push rex.WRB mov orl in (bad) cmpsb (bad) (bad) adc imul (bad) ffree xchg repz sub ja pop jb jmp rex rex.WRXB jb adc outsl (bad) mov mov cmpsl xlat (bad) (bad) outsl out xor lods pmulhuw cwtl mov scas (bad) ja stos int scas mov mov scas movabs outsl mov cmpsl addr32 rex.WRX rex.WRX mov (bad) xchg sbb rex.RXB and mov loop cltd in int xchg imul orl (bad) rex.WRX sbb mov mov xor xor (bad) outsl mov cwtl xchg (bad) (bad) fwait test jb test adc cmpsl mov cmp mov push sbb rcr xlat xchg (bad) test mov cmp jae (bad) repz mov insl ja xchg cld (bad) jmp shll fxch sahf clc rex.RXB rex.RXB and cli mov push lods jae test xchg out (bad) mov out scas imul cmpsl jno std (bad) pop outsl adc jae rex.WRB (bad) adc sbb xchg ja cltd nop cmp retq mov (bad) push sbb adc rex.RXB or fstpl push shrl rorb (bad) jmp fisubrl cmp jrcxz mov adc (bad) cmpsb pop loope xchg cmp stos fmul mov push xchg cmpsb mov adc mov rorl xor outsl (bad) adc outsl sbb scas and test sbb (bad) hlt xchg (bad) add cmpsb pop imul adc or ss test (bad) movsb sbb mov xchg sbb rcrl mov in fsubrs mov pushq enterq (bad) mov fldcw jg cs (bad) test mov lret loope retq cmpb xchg mov std mov (bad) (bad) cmp ror lods (bad) mov jg xchg mov xchg fidivrl adc mov add sbb xlat (bad) in xor mov mov (bad) mov jmp fsubs mov pushfq sbb (bad) mov shll fcoml xchg pop bt incl lea jno xor xor fcmovne cmp pop and seta mov scas adc jbe cmp sbbl fiaddl rex cmp (bad) leaveq mov pop jbe sub sti or xor jge (bad) mov adc lods jo mov pushfq imul (bad) xor popfq lret lret in add pop or cmp mov xchg rex.WXB adc adc repz out sbb mov sbb or fldenv (bad) (bad) jns iret jrcxz jle lret rex.WXB retq or xor (bad) xor je cmpsb lea lret lea data16 xchg ja xchg or mov data16 ror (bad) xchg cmp jle scas repnz and negl loopne (bad) (bad) (bad) outsl xor loop popfq sbb (bad) test pushq cmpsb mov (bad) fisttpll rex.XB divl xlat (bad) xchg push loop insl xchg add negl retq (bad) lea es mov repnz sbb lea fs sbb sbb cmp mov jbe movabs or lret movabs mov outsl jne ds (bad) and scas xchg xor jb mov shrl and testl (bad) mov jl xchg rex.RX lods (bad) rex.WRXB xchg or sub adc stc pop out iret cld pop or fisttp mov rex.RXB sahf loope mov pushfq pop ja loopne rex.X sahf xlat test sbb push (bad) mov lret xchg pop mov mov pushq movl insl or mov xchg or pop pushfq (bad) adc mov xor or push test sub orb push test fstl int3 mov mov (bad) movabs pop mov in scas push or ja pop (bad) scas pushq (bad) (bad) sahf adc mov setae in pop sbbl movabs pop cld push rclb (bad) (bad) imul xchg (bad) sub xchg sbb scas (bad) cmp xchg (bad) push loope rex.WB sti adc sti movabs (bad) add xchg outsl cmp int3 adc (bad) subl cli (bad) push mov hlt fimul pop rex.WX (bad) mov insl fsubrs or (bad) fsubrl movabs push xchg mov mov mov mov ficom repnz sub push pmullw adc negb sahf movsb mov cwtl adc sub mov mov rex.RXB sbb jg adc cltd test pop pop cmp fmuls and and add fidiv mov pop mov adc adc pushfq (bad) popfq (bad) loopne jbe (bad) loope jnp xchg push cld outsl leaveq mov sahf add mov cmp (bad) and xchg adc mov adc mov lret pushfq xlat and std or push rex.RXB mov sbb sbb outsb add mov (bad) out fist mov (bad) pop fs std sbb mov mov scas fisubrl enterq popfq mov cmp xchg outsl movabs xchg int3 (bad) loopne test (bad) push or mov retq rex cli rex.WR xlat pop rex.WRB mov mov rex.XB xchg sti (bad) (bad) rex.RXB jg mov cltd jno jg (bad) jae add mov gs add mov adc mov jmp adc pop retq pop adc stos sbb fnop xchg jbe (bad) rex.B xchg int3 leaveq enterq mov ds xorps jmpq jge mov (bad) scas rolb sahf mov outsl pushq push (bad) imul rex.WRX rex.RXB nop sbb popfq fcmovbe rex.WRB xor (bad) imul mov outsl pop jne xor (bad) mov nop (bad) icebp sahf jrcxz loope mov test push cmpsl sbb mov or repnz (bad) push cmpsl add int3 mov xchg mov outsl push jns xchg jnp sti adc adc testl sbb mov cmp imull cmp shll or (bad) or pushq adc jmpq xchg sbb jno rex.R rolb push (bad) sahf mov rcrb (bad) jg gs push jl rex.WR rex.RX mov jbe shr (bad) adc xchg ficomp outsl or (bad) add imul sar rex.WRXB ficom rep (bad) mull xchg (bad) movabs (bad) jrcxz rex.WXB lods (bad) (bad) imul (bad) (bad) movsb pop iret jle lea mov imul movslq and mov push jl add sahf mov adc mov fst cmp (bad) cmp adc push (bad) mov pop xchg shlb shll or pop jg cmp stos lods (bad) push popfq ds jle push fucomp loop adc cmpsb lret rex.RXB (bad) test fisubr out repnz mov add leaveq mov mov pushfq cmpsb faddp movsl retq retq mov cmpsb lret out (bad) push in lea mov xor movsb pop nop add add (bad) (bad) pop xlat push out test cmpsl mov or gs adc (bad) mov lea xor orl sbb and push and adc mov xchg (bad) cmpsb je xchg int3 pop rex.WRXB rex.WRX jae adc mov mov movabs movabs (bad) in movl rex.WRB lods cs popq jg test jbe jle scas pop and add out (bad) or scas lock (bad) fiaddl movslq out rex xchg mov (bad) xchg push rex.WRXB sti mov cltd cltd pop roll fstpt fadd retq test sub rorb mov jmpq fstpt pushfq mov mov pop out rex.RXB adc mov jno int fistp fildl adc cs orl out adc and ds (bad) movaps insl adc mov sub repz mov mov xor (bad) rex.R out outsl repnz fs movabs (bad) sbb imul outsl (bad) fcoms lea in jo ror or xchg mov roll lret sub pop and or scas popfq rex.X jnp (bad) sarl movslq incl sbb popfq ja xchg or cmp rolb scas sub movb rex.R xor cmp (bad) (bad) (bad) in rolb mov mov and rorl or (bad) (bad) mov sbb mov cmpsl xchg sbb movsl xor xor (bad) pushq mov xchg mov rcll mov popfq outsl mov (bad) sar test addr32 rex.WR rex.RX pop sub jno (bad) insb (bad) and data16 jne imull sub ja mov mov (bad) movabs insb cmova scas jne jge xor (bad) push loope or (bad) outsl repz jge push xchg outsl (bad) mov sub std callq subl mov xchg jge movsl outsl mov faddl mov mov lahf rcl mov fwait repz sub (bad) xchg or cmp or (bad) in cs fstpt (bad) sahf shrl lahf mov rex.WRX lods test js pop fmuls jbe mov (bad) adc and (bad) jmpq xchg gs push xlat xor lret jno mov sub je xor out ss nop push scas (bad) mov jmp lods adc outsl lret (bad) fstpt rex.WRXB cmp adc sbb cmpsb xlat jb sub (bad) mov pop lods je test addr32 jns xchg outsl loope cwtl fnstsw rex.WRB add mov movabs add push push lret (bad) negb sbb mov imul fsubl addr32 cltd scas sbb jg adc mov push push (bad) add mov adc jle divl rolb xchg rex.WXB cwtl mov mov adc or rex.WR lret sbb (bad) (bad) mov (bad) adc lahf rcrl stc lods jns (bad) sub outsl jmp enterq rex.WXB xchg jg movslq je mov sti out push mov fldcw (bad) lret xchg fwait jrcxz and rex.WRXB sub (bad) mov in decb jrcxz sub push jle jb outsl movabs mov imul lahf rcll xlat fild lods (bad) popfq fisttpll stos add adc rex.WB mov jrcxz in mull mov add cli lahf xchg rcl in mov xor mov mov jae rex.W (bad) pop sahf (bad) (bad) test jg and (bad) (bad) (bad) xchg (bad) (bad) fnstenv mov rex.RX adc test callq (bad) movabs mov adc in rex.WXB rex.RXB fimul jg (bad) in stc (bad) data16 repz sarl rex.WRXB in js mov pop movslq movabs out insb frstor sbb fistp mov (bad) add (bad) mov insb cmp test mov fmull cmp mov push cmpsl jg (bad) sarb movabs rex.WRXB or fiaddl cwtl iret (bad) retq popfq lret outsl (bad) retq lret rorb (bad) lods push (bad) mov js jmpq cmp adc sub mov xchg rorl (bad) push comiss outsl fbld outsb outsl out or (bad) stos xcrypt-ecb cmpsl (bad) lahf add pop fidivrl (bad) fnop insl lahf mov rex.RB movabs movabs xchg pushfq pushq pop rcl sbb rcll jns sub lret or mov lahf adc (bad) ja or xor fwait lahf (bad) pop cmp mov outsb sti jge out jmp movabs ss (bad) rex.X movsb movabs jg cld push cmp and (bad) rcrl mov sub in fcoml rclb or mov jge push or lea test cmp fsubp popfq and repz imul mov test movsl jg cmp or xchg push xor xor (bad) (bad) xor (bad) rex.W test lret sub vpmaxub push mov rex.RB xchg insl movl (bad) xor outsl adc pop vmovupd (bad) (bad) mov ja add add (bad) pushfq adc (bad) push pushfq jmp (bad) scas xchg (bad) iret (bad) rex.RXB out cmpsb (bad) rex.RX pop mov mov iret push mov outsl js mov mov (bad) jg add (bad) jge xor lahf insl stc add push push data16 mov mov cmpsl mov shrb xchg rcrl mov push xchg outsl push lods xorl adc je rex.WXB cmpl cwtl fstps xchg (bad) sub mov mov sbb (bad) sarl (bad) (bad) sbb add out (bad) add pushfq stos mov ja and rex.WX pop mov jns mov pop mov mov repnz test sahf sbb mov (bad) rex.WRB scas mov (bad) movslq (bad) leaveq mov or fidiv jrcxz mov (bad) lea retq xchg mov mov (bad) or adc mov mov popfq (bad) (bad) nop ficompl sbb mov or pushfq (bad) movabs retq fistl fimull jmp adc rorb (bad) in (bad) out repnz (bad) and fdivs mov mov add mov push mov adc lea (bad) out xchg stos sub (bad) pop mov shrb cmc mov repz mov pop pushq (bad) mov add jle lahf lock clc push (bad) (bad) pushfq sbb jg mov fistp (bad) loop data16 adc mov imul cmpl cmp outsl test repz scas mov adcb rex.RX rex.WX rex.WRXB fst sbb maxps mov adc out cmpsb sahf lahf cmpsl imul in mov (bad) rex.WRXB stos fstp lahf xchg adc fwait popfq jp packsswb cmpsl lahf jns mov or adc (bad) pop push push cltd rex.B ss stc jmpq int3 mov mov (bad) lahf (bad) jge (bad) mov lahf jl adc (bad) mov mov mov (bad) sbb push or and xchg (bad) subl add rcll lods cmc loopne mov rcl sub or xchg stos jle and rex.X movabs rcrl out rex.RXB adc sbb ja pop rex.WRXB test rex.RXB cs stos (bad) int mov rcll movsl rcr (bad) xchg (bad) outsl xor pushfq (bad) xlat mov adc push push mov mov stos rex.RXB scas mov fild rex.WRXB popfq (bad) or movl or jbe movslq or movabs (bad) (bad) push repz imul jg pop jp cmp sub pop mov mov pushfq xchg lods negb (bad) outsl fwait cld mov rex.WRB shrb outsl mov (bad) mov and addl jg sub vmwrite loop push cmpsl in movabs or xchg (bad) scas adc sahf sbb lock (bad) fwait adc sub adc rex.X adc repz or fcmovnu add test int3 or (bad) shrb xchg mov mov sahf int sub nop int (bad) rex.WRX sbb (bad) (bad) out xlat rorb in mov xchg push scas sbb xchg out jl inc adc mov (bad) adc jae fcoml shrb (bad) cmpsl outsl rex.RB movabs cwtl mov mov (bad) pushfq mov movabs in adc rcrl mov rex.WRB (bad) (bad) rcrb or movabs mov sub out movabs rex.RB lods mov xchg subl rex.WXB push rex lret ss lahf (bad) repnz pop fldenv out outsl rorb mov fnstcw (bad) lods out mov cwtl xabort (bad) fucom decb add sbb sahf movabs (bad) (bad) (bad) rex.WRXB mov enterq incl or rex.WRB rex.WRXB orl lea fistpll test mov mov (bad) mov mov (bad) (bad) and xor add add movabs scas leaveq outsl mov add and gs out outsl mov (bad) jge and popq std fbstp and xchg cmp mov jp rex.WXB movabs mov (bad) scas outsb imul fsubl mov iret (bad) mov xchg mov subl lahf sbb shrb mov xor xchg push mov xor (bad) lods add shl adc mov out (bad) adc pushfq sahf outsl rex.X popfq leaveq fwait rcll jmpq outsl push lods test xchg jnp or mov add lea cmpsb fimul mov fwait xchg jnp jg fwait (bad) (bad) (bad) (bad) outsl out mov cs cld je mov outsl (bad) test data16 mov rex.R xor adc (bad) ss loope retq (bad) lretq jae jnp mov sbb xchg (bad) (bad) mov js (bad) xchg lods jg movsb rex.RB rex.RX rorl cmp jbe add and cmpsl outsl xchg jmp and (bad) jnp loop push sbb outsl rex.XB out shll (bad) fisub out kmovb or (bad) rex.W (bad) (bad) jb (bad) mov sub (bad) add orl sub repz outsl (bad) (bad) mov xchg std and (bad) repz out xchg movl (bad) mov pop lea insl adc rex.WR xchg adc (bad) or popfq jno loop mov pop mov mov jo ss sub rex adc mov rex.WRX or mov movabs sub psadbw xchg push mov or and sbb outsl (bad) out xchg mov sub cmp popfq and lret xlat mov outsl (bad) push rcrb mov xchg (bad) movsb adc add popfq out sbb rex.W and pop rex.WXB rex.WX push push scas (bad) int and nopl data16 mov scas and shll (bad) rex.WRB (bad) mov scas (bad) adc (bad) fdivs negl xchg test mov outsl xchg mov jg mov (bad) mov outsl and lret add adc xlat rol cmp rex.XB addr32 movabs xchg xchg lret mov mov (bad) (bad) (bad) sarb outsl ud1 iret jne (bad) (bad) cli popfq adc jne xor lods rex.WRX jne cwtl mov add cwtl adc (bad) rex.WRB rex.RB jg movabs jb (bad) (bad) or scas (bad) jg movq mov popfq (bad) cmpsl (bad) xlat push mov (bad) sub (bad) movsl mov (bad) movsl (bad) cmpsb cltd movabs frstor (bad) mov cltd rex.WRX popfq push mov nop fcomps gs or (bad) xchg lret fwait repz (bad) mov and (bad) out push cmpl mov rex.RXB iret cmp cmpsl cmpsl sub test (bad) rex.WRB xchg cmp mov addr32 (bad) jo outsl lret leaveq sbb fldl repnz (bad) jae fbstp imul idiv (bad) (bad) not out mov stc pop (bad) sbb callq cmpsb fstpl (bad) push xchg (bad) (bad) test pop jne xchg outsl jle nop adc scas mov (bad) rex.RB out movabs retq mov sbb (bad) sti subb test ja movsb xchg iret js out xor fstl mov (bad) sti cmpsl sbb jg mov adc enterq cld mov or and (bad) cmpsb adc mov and sti repz xchg (bad) fdivrs adc flds pushfq mov sbb mov rex.WRB leaveq stos movsl outsb sbb rcll mov clc jg xchg xor cmpsl loope (bad) rclb (bad) int sbb jmp sub fs js mov pushfq adc rex.RXB loope (bad) (bad) pextrw (bad) xchg je cmp (bad) loope icebp (bad) jle push cwtl adc (bad) mov (bad) rex.WR mov (bad) pop movabs (bad) (bad) xchg shll push mov imul mov sbb mov ja out mov xor pop (bad) rex.WRX jmp movabs mov or (bad) cmp nop iret retq cld cmp callq adc jg mov (bad) mov lret mov pop xchg xor (bad) lea (bad) cmp xchg test data16 mov cltd adc test stos cmp rex.WX (bad) mov cmpsl (bad) and mov insl push xchg sub imul adc (bad) xor fmull and or iret push scas (bad) xlat rcl add lea rex outsb pushfq mov xchg mov movabs (bad) adc cld (bad) adc mov sarl (bad) pop (bad) (bad) in hlt mov test mov movabs fsubl lea or xchg getsec sub add (bad) (bad) in rclb cld negl push (bad) subl and push rex.WRB data16 outsl rex.RX push insl rcrl loop clc mov jbe retq std pop (bad) xchg xchg jmpq in mulb xchg out cmc idivl pop cmpsl xchg ja (bad) cltd jge xchg in adc je add (bad) pop pop movabs adc xor loope cmp xor rex.WX (bad) std pop (bad) sub out mov sub scas stc fisub push int xchg in nop pop rorb (bad) sbb (bad) jbe movabs jnp lods (bad) jle sti lods xchg sbb xchg ja popfq lea (bad) repz xor pop xchg mov sbb cmp enterq fildll cmp xchg cmp lret cmp iret iret (bad) (bad) retq int mov jge xlat insl lea sbb xchg mov (bad) (bad) fnop (bad) mov (bad) outsl fwait popfq jp lea pop xchg loope fstps and mov push adc push (bad) rex.W (bad) mov nop xchg outsl (bad) adcq sub or (bad) cmp (bad) imul mov rex.RB insl std fimul cmpsb int mov fnstcw cwtl push rex.WRXB xchg paddusw shl (bad) xchg xor enterq jmpq or pop (bad) xlat rex.WXB ss or jae lea add (bad) lahf cmpl jl sub movabs sbb ja notb or (bad) iret test outsb js mov sbb xchg cmp fisttp lods and xlat lret fcmovbe cs addr32 (bad) shll pop mov hlt (bad) (bad) and leaveq mov (bad) mov or or add rex.RXB (bad) incl mov rol jrcxz pop (bad) cmpl mov notl mov jbe (bad) add adc (bad) lret sbb int add int rex.B hlt in or (bad) in (bad) pop mov xor adc and mov sahf rex.RXB rex sub mov retq or sub rex.WXB iret popq es adc pushq (bad) shrl cmpsl outsl clc xor ds ja cmp rex.WRXB (bad) pop xchg xchg (bad) scas insb test (bad) xchg pop in xchg (bad) lea (bad) fnop psrlq (bad) mov (bad) jp iret movsb mov mov mov and (bad) rclb es out imul xchg mov (bad) push pushq adc in or movsb add pushq xlat or push shr movabs fdiv sbb mov jno rex.WRXB rorl (bad) iret cwtl push adc jmp (bad) and retq sub mov fnstcw fstpl push sbb stc out pop rex.RXB stc mov movabs rex.WB ds (bad) mov xchg es push (bad) (bad) popfq or add (bad) xchg cmc outsl ja sahf mov pop add mov hlt fmuls (bad) xchg (bad) testb xchg or cmp adc xlat (bad) rcrl cli mov movsl (bad) or movsb pushq mov retq mov rorl outsl mov jbe mov sub mov jmp pop es movsl mov xchg add mulb (bad) lods pop fiaddl cs movsl std jmpq add adc and lods retq pop sbbb cwtl enterq xchg and (bad) movabs xchg nop je (bad) test rex.R rcr pushq add std adc (bad) (bad) or js test or (bad) divl out mov fs (bad) cmp add add cmp mov sub movabs mov rex.WX fwait push movsb push (bad) fisttp outsl (bad) jbe rex.W imulb outsl mov movabs jrcxz xchg rex.WR mov fstpl rex.RXB xor push out out outsl scas mov mov fwait mov pushfq std fs sub jns (bad) stos outsl int jrcxz (bad) mov std rolb jnp fwait out adc movslq mov cmp mov cltd movabs in xchg cld stos movabs jo lahf sbbl mov mov leaveq cwtl rcrl scas sub xchg mull mov (bad) loope jb sub xor (bad) push popfq sbb nop (bad) cmp adc xchg mov insb mov (bad) jl scas lea loopne lahf lods xor lret movabs test rex.WRB mov lods mov (bad) imul (bad) adc cltd add (bad) pop (bad) jmpq and subl (bad) rex.WXB sar pop movabs cmc (bad) loopne mov rex.RXB rex.RXB mov pop movabs jrcxz rex.WB mov jmp nop rex.WX (bad) rex.W mov loope xchg jae mov cmp movabs xchg mov jne xorl jg mov (bad) ficompl mov shlb rorl mov cmp mov rex.RX pop adc add mov (bad) (bad) jno test ja mov sub jg jns adc je sbb adc cltd adc jrcxz xchg xlat xchg (bad) xchg mov imul movslq insl pop rex.WRX mov sahf adc mov (bad) xchg loopne (bad) rex.RXB fldl cmp mov repz pop adcl xchg cmc mov mov andb rex.RXB lahf pop scas xchg movslq mov ja scas cmpsl jne mov std out sbb pop shr outsl and test and mull adc or clc (bad) dec jmp mov rclb movsb xchg je rcl pop (bad) icebp seta xlat sbb mov xorl (bad) cmpsb nop imul gs jmp xchg push pop (bad) movsb (bad) rex.X je rex.WRXB imul pop insl (bad) sti mov (bad) xchg out fistpll jbe push movsb jno loope cld int3 (bad) imull push (bad) (bad) pop (bad) mov jb mov (bad) lock (bad) imul repz mov xor xchg jbe or shlb mov mov jb repz out icebp (bad) sahf jg (bad) (bad) hlt cmpsl mov (bad) in mov adc (bad) (bad) lock sahf fbstp imul stos mov mov sahf outsl mov mov mov xchg (bad) neg jmpq (bad) out xchg (bad) cmpsb shrb (bad) mov cltd rex.R jbe (bad) outsl (bad) movsb jae lods decb sarl stc int3 jns add adc adc and add movabs jl (bad) add mov stc test shll mov sti lret xchg xchg loop push std pop scas cmp (bad) gs adc rex pop mov (bad) mov jrcxz pushfq rex.RB je jmp sahf mov (bad) sti adcl sub xchg (bad) xlat in pushfq jge shrb std scas xchg xchg rex.RXB (bad) orl adc cmp shrb push xlat outsl jb pushfq sub sub xchg (bad) adc pop movsb rex.WRXB in fcomps rcrb callq (bad) mov mov pushfq sbb fidivrl xchg (bad) mov outsl add rex.W cmp xchg (bad) rclb jmp add sbb jle pop mov repnz pushq mov jg mov fwait je sub sbb idiv cmpsl mov (bad) lret pop and xor (bad) lods rex.R js mov pop pushfq (bad) rex.RX loope jp adc rex.RX rex.W rcr mov or loop mov mov rex.WRXB movabs outsl out rex.WXB jnp xchg fsubrs mov xchg clc xchg pop (bad) cmpsb jg mov nop (bad) sub mov loopne and mov xor cmpsl (bad) outsl test xchg mov mov mov mov cltd (bad) (bad) (bad) (bad) xchg rex.WX pop imul addr32 and mov outsl rex.R stos (bad) outsl mov nop or iret sub push nop sub push test (bad) pop std and lret xchg out pop (bad) push movabs jne xchg cmp (bad) (bad) cmpsb pop sbb fabs rex.WRB xchg (bad) pop push mov std std mov push adc or gs or push and fs lea (bad) addl mov jno (bad) cmpsl xchg outsl mov imul rex.WRB clc (bad) pop sbb scas rcrb icebp add push (bad) mov lods shll (bad) lahf sub xor and mov orl jrcxz rex.RXB movslq nop mov sbb fdivp (bad) or rex.WRXB pop cmp jmp movabs pop add mov push shrb jge movq pop xor jne rcrb fidivl out cmp lods jle loop cmp (bad) mov push pop mov cmp xor (bad) (bad) or iret rex.RX subl and (bad) jle rex.WRXB mov mov (bad) mov jle adc (bad) (bad) sbb nop (bad) adc adc mov jg jp lea xchg (bad) add rex rex.WRB rex.XB (bad) loop sahf pop rex.R mov mov and rex.RXB (bad) push jg (bad) (bad) xor rex.WX popfq pop lahf lea lret mov (bad) iret insl xchg add pop movsb addr32 sbb sbb movsl (bad) jbe mov (bad) xchg sahf adcl fcmovbe mov rcr loope outsl pop mov out (bad) movslq test adc retq (bad) add mov (bad) rex rex.WR xlat mov push push fstpl mov lods cwtl enterq iret rex.WX movq cmp out lea xchg xlat add xchg jnp mov out repnz or (bad) (bad) pushfq (bad) push pop xchg jbe and add (bad) cltd lahf xchg jnp mov (bad) mov (bad) out cmp mov jg mov jg popfq clc scas rex.R push rex.RXB je xor retq (bad) sti xlat (bad) (bad) outsl xlat callq nop (bad) fimull xor (bad) outsb stc ficomp (bad) push (bad) outsl xchg xchg xlat cmpsl movsb mov pop scas mov mov push jg pop jbe popfq rex.WR xlat rex.B gs adc out sub and out faddp stos sbb mov jg (bad) fiaddl jge (bad) je jmp subw andl cwtl rorl mov pop pushfq push (bad) retq fs xchg nop cltd mov nop push xchg xchg mov insb sahf cmp loopne (bad) popfq test outsl mov retq (bad) loop mov sbb (bad) js lea nop xchg lcall cli push pop mov mov and callq lods rorl loop pop jmpq fstl jno mov push sub xchg cwtl cmp rex.WXB adc mov mov rex.R cmpsl jl (bad) nop movsl xchg outsl adc (bad) and xor in rex.WRX callq lret pop negl push jle (bad) cwtl lret and rcrl push or add mov addl test xchg subl icebp (bad) pushq adc sbb clc fisub rex.WX movabs jne add cmp rex.WRXB int3 cmp cmp mov sarb cmc lods rex.B xorl xor sbb cmpsb movslq (bad) mov jg insl xchg rolb (bad) js mov cmp outsl mov leaveq adc xchg je xchg lea insb outsl loope div lock data16 (bad) rex.WRX (bad) rex.W pop pop repnz pop pushfq in xchg jmp rex.WRB (bad) imull pop xchg sti addr32 sbb in jg out push cltd lret add sbb pop sub (bad) test (bad) lea (bad) mov cs repnz mov (bad) out hlt adc stos xchg mov cwtl lods (bad) clc fcmovu and data16 rex.XB (bad) (bad) out (bad) jae imul sbb jge scas mov loopne leaveq (bad) cmp fildll xchg unpckhps sbb mov and pop jbe mov pop and test jmp std xchg jmp stos cwtl (bad) pop (bad) xchg jg rcl out lods jbe clc xchg sbb xchg pushq unpckhps and (bad) cmp pop xchg rex.WR rex.RXB mov addr32 rex.WRB mov sbb cltd mov jge pop xchg push xchg mov divl mov gs mov xchg xor rex.RXB pop pop (bad) out (bad) pop orl (bad) jg (bad) xlat xchg (bad) orl xchg sbb mov pop xchg jo jmp mov fcoms enterq fisub gs (bad) scas movsb test mov rolb shll cmpsb (bad) icebp mov iret (bad) sarl xchg push jbe movsb pop iret adcl rex.WRXB outsl pushq push jge loope mov movabs imul pop rex.XB sbb test movabs lods enterq (bad) mov lahf sbb rorb retq ficomp pop push xchg (bad) jo mov (bad) pop sbb ja scas jmp jbe mov adc movsl fcom rex.WR orl pushfq loope adc fisub shrl (bad) rex movsb adc mov movabs (bad) hlt mov std (bad) pop xchg jmp cmp mov imul jle cld sbb pop (bad) pushfq add mov lea xchg pop jrcxz adc outsl pop scas lods rex.WRB jge jno rex.WRB outsl xchg (bad) cmp insl push mov cmp (bad) fbld lods rex.RXB rex.W cs rex.W cwtl mov mov ja lea ja insb sbb (bad) mov (bad) fisubrl cs (bad) xor (bad) popfq fisubr pop jne (bad) (bad) jg pushfq push fsts mov (bad) outsl (bad) rex.WXB or (bad) outsl jge push and rex.WB sbb (bad) jb loope retq es notl cmp mov (bad) xchg rex.WRXB int xchg mov and (bad) loop push jmpq mov jnp mov jrcxz (bad) insl rex.R subb (bad) (bad) movsb pushq cmp xchg mov xor sub rex.WRXB data16 sub add or or mov movabs outsb sbb rex.RXB out push xchg loop mov rex.WX jae rex.X sbb cmpsb lods movabs push xchg outsl out mov adc movsb fwait mov mov retq je (bad) fwait jge cs por xlat fildll mov pushfq cmp es mov (bad) xchg or movsb or pop mov xor fwait sub mov rex.B mov cmp mov jg adc fwait push insb test sbb push rex.WX loop cvtps2pd int3 (bad) fildll movabs sti xchg repz fcmovnbe and jp mov and rex.WRXB mov std rex.WRXB and (bad) lret movslq (bad) test cmc (bad) jle (bad) sarb std sbb repz pop jge scas sbb iret stos mov (bad) sub pushfq rex.WX (bad) loopne (bad) rorl in (bad) je pop imul add sar and or retq mov xchg leaveq or (bad) xchg stos (bad) roll pushq sub lods retq imul jno rex.W xor sahf adc pop ja movsb rex.XB (bad) xlat xchg and stos xchg (bad) xchg iretq mov jmpq (bad) (bad) cmp lahf pop lret cmpsl in (bad) (bad) push add rex.RXB nop fnstsw je scas jbe mov mov (bad) sarl mov add in rol xchg jrcxz mov sti (bad) pop sub int repnz icebp sub mov mov adc lods adc mov (bad) cs insl adc stos fisub in (bad) and (bad) (bad) test vpunpckldq repz mov (bad) popq lea lea xchg stos pop (bad) sbb iret pop (bad) sbb mov clc repz mov (bad) fnstsw mov adc xchg rex.WB fidivrl xchg push adc shll or mov (bad) movsl rex.RXB (bad) bswap repz outsl retq cmpsl (bad) add stc pop gs nop pushq xor ficom xchg jg mov scas cmpsl (bad) lahf popfq xlat (bad) cmpsb (bad) stos cmpsl sub mov adc pop out mov add leaveq movabs rex.RX xor (bad) cmpsl sub fstp cmpl cld lods movabs mov mov cmp movabs jbe lret mov or insl sbb sahf pop or cli xchg jrcxz loopne xchg mov cmp sbb jge pushq mov rex.WRXB notb cmpsb or xor mov scas rclb cmc movabs sbb test xchg sbb imul sbb push fistl (bad) (bad) xchg push fidivrl cmc xchg adc (bad) pop (bad) xor push rex.WX pop or mov sbb retq mov xchg rex.R mov pushq test sub xor xlat (bad) imul hlt shrb movabs push rex.WR pop ljmp rex.W push (bad) (bad) (bad) std rex.WRB popfq cmp js rex pop movabs mov mov int3 stos testl rex.R or push rorl push xchg fcompl popfq cmpsl and push (bad) rex.WR repz or push xchg pop lea xor and (bad) mov rex.R fcoml ss insl jnp xorl (bad) mov sbb fimul movabs push mov mov pop add sti jmp xor xchg adc cld popq (bad) sub not xchg adc push nop movabs xlat std in xlat rex (bad) mov jmp pop lea xchg rex.XB lret test push mov (bad) push roll popq pop sarl mov gs (bad) rex.B sub sub repz xchg incb rex.WRXB sbb mov pop idivb cmp xchg neg pushq push jbe hlt mov push push enterq push xchg (bad) iret adc xchg movsb pop jrcxz movb cltd roll jmp (bad) movl jp jns shll pop in cmp out mov pop lea (bad) shll (bad) leaveq xor add (bad) jbe ja clc callq out cmp mov (bad) xchg movabs (bad) mov outsl (bad) pushq stc rex.WRXB rol repz repnz ficom adc scas btc (bad) jns in mov ficomp movslq int fadd lahf test negb (bad) mov (bad) iret iret push stos mov cmp (bad) mov movl fstpt fisttp (bad) mov test retq and (bad) scas mov sbb fsubp or lock sti (bad) cli (bad) and xlat pop test mov cltd (bad) stc ficomp push (bad) cmp (bad) mov (bad) sub add xchg int cmp hlt push scas fidiv hlt jmpq pop in jne add (bad) stos push mov rcr rex.RB cmp (bad) cli lea addb fimull hlt push sbb sub rex.WRXB rcrb mov adc jle and cli int3 or jg jle (bad) mov mov (bad) rex.RX and stc sub or xchg pushq cli jrcxz cwtl sub stos mov sub (bad) cld sub rex.X push rex.RX xchg rex.WXB jg outsl stos mov rex.WB mov ffree or xchg outsl or (bad) insb xchg sbb lret rex.WXB idiv fiadd mov adc notb (bad) idivl rex.RX fistp push rex.WRXB movabs rex.RXB rolb (bad) (bad) ds xchg cltd mov mov scas scas jg mov mov mov retq shrb (bad) rex.WRXB ror (bad) paddq sbb mov cltd iret mov pushfq push adc repnz test and callq (bad) push scas jg and mov test outsb adc in and and lret mov int xchg rex.RX fidivr and ja cltd cs (bad) stos cltd adcl lahf outsl sub adc (bad) rex.WXB cmp jbe mov rex.W cwtl cltd push mov xchg nop add sbb lods add cs ss or rex.WRX (bad) fnsave fistp in out mov out stc sbb add jmp roll mov mov pushq pop (bad) orl sti (bad) test mov (bad) push (bad) (bad) push xor lods mov pushfq sbb (bad) sti sub scas out (bad) rex.RX std (bad) iret mov sub (bad) fsubrl (bad) (bad) rolb out (bad) jge lret push or (bad) and jne hlt rcll clc movl lret xlat (bad) subb (bad) sbb mov or sub fstpl nop or add mov mov or mov (bad) (bad) mov rex.R (bad) iret adc and in scas add lret sub mov xchg adc (bad) add push and repz (bad) push (bad) mov cwtl scas je mov adc push stos sub mov cltd fimull push lret xchg or sbb outsl jae sbb push cmp test je jnp (bad) push callq rcrb rex.WRXB xor sbb cltd rex.W cmpsl sub sub or in rex.WX stos or ds jle loope fisub pop loope pushfq mov pop or (bad) retq (bad) jle cwtl movabs scas jbe in rcrl movabs cld jb pop pop sahf pushfq callq (bad) xchg in (bad) push cmpsl sahf mov or or sub jae (bad) frstor int movsb fstpl (bad) xchg rex.RX (bad) adc shll xcrypt-ctr cmpsl sahf sbb mov (bad) push fistpll xor pop rol mov stos mov xchg (bad) stos sbb lea xor mov (bad) jb xchg outsl callq fldt pushq mov ds or (bad) addr32 mov xchg (bad) sbb xchg (bad) add lods (bad) xor mov mov repnz rex.WX (bad) out mov (bad) (bad) movabs mov and xchg rorb adc popfq cli cmp (bad) adc orl pop (bad) xchg in (bad) cld fcoml fist push (bad) repz (bad) xor pop sub xchg imul jnp pop outsl push test (bad) fwait cmpsl incb imul pop (bad) mov fwait sbb (bad) xchg mov mov mov sbb push sbb mov stos or mov rex.WR pushfq or xchg outsl and pop cmp pop fisub jae lea mov in (bad) cltd mov pop fisubrl fcoms sub int3 mov (bad) mov or (bad) (bad) (bad) cmp xchg (bad) outsl shrb movabs ficoml xor mov scas jp (bad) (bad) (bad) cs (bad) mov loope (bad) callq push mov mov (bad) pop pop enterq cmpsl loop jge shrl mov es cmp int adc fistp jl callq movsl xor pop rclb outsl mov mov sub jnp mov push js (bad) stc xchg hlt fisubl out mov adc out (bad) pushq shl rex.XB lea lret push push jle popfq sahf enterq mov popfq jl adc outsl adc rex.WB jmpq mov jnp mov rex.WRX je lret mov (bad) andb pop stos rex.WB mov cs add out mov mov mov rex.W mov imul in (bad) lea mov fdivrl sub mov mov sub mov xor cmpsl cmpsl imul notl retq (bad) xlat adc jns retq orl pop cli pushq sahf xlat mov stc ficom stos adc shl pop scas xchg xchg (bad) movsb pop nop or pop xchg mov (bad) mov (bad) mov (bad) sbb add leaveq cmp mov mov jle icebp mov vpacksswb loope xchg xchg xchg je test (bad) sub xchg xlat int pop (bad) jrcxz (bad) mov roll pop repnz jmpq cld rcrb in or imul rcll retq out (bad) xchg lods fidiv rcll lahf (bad) rclb and imul retq xchg xchg test mov xchg (bad) (bad) sub lahf fldt subl or (bad) callq (bad) pushfq rex.WRB mov pop add shr test movsl js mov mov movsl xor rex.XB callq out push loop pushq cltd fidivr rex.RX sbb ja rex.WRX (bad) repnz sub (bad) fimul out rex.X xchg addr32 mov xchg jae and clc loope xchg sub xchg cmp lret ror (bad) rex.WRXB setb cmp rex.WR (bad) repnz lret mov xlat or outsl (bad) rclb scas adc xchg rex.RX and (bad) in out rex.RXB pushq xchg (bad) and gs push pop in lods (bad) cmp fdivl (bad) xchg pinsrw callq (bad) adc mov xchg test jp popq mov fxch faddl xchg rex.WRXB sbb movabs sti (bad) out (bad) sub xchg out sar (bad) mov xor in sbb mov rex.WRXB (bad) mov jg sbb xchg mov addr32 outsl fwait (bad) retq fnstenv mov lret mov out rorl loop rex.WRXB fwait mov add xor (bad) retq xchg mov or fisubrl rex.WR mov retq rex.WXB xchg mov xchg mov jrcxz xchg rclb (bad) (bad) xchg lods rex.W mov jae iret push fcmovnu cmp je outsl mulb test out (bad) outsl (bad) or xchg rex.WRB xchg mov mov cwtl xchg rex.WRXB adc xor movabs add repz sbb in out mov int movsb xchg xchg insb jp (bad) jge (bad) jmp push mov ja out (bad) jle inc xchg sbb rex pop enterq jne add mov xor cmp mov movabs stos int xchg (bad) pop fidivl mov rex.WB fucomp nop sbb fdivrs and popfq je lods orl jp in fdivrl and mov lods (bad) xchg nop (bad) (bad) lock insb sti rex.WB sahf out outsl js sahf or pop rex.RX mov xor xlat lods imul or xchg (bad) subb (bad) xlat cmp (bad) sub cmp mov lret xchg pop mov and fnsave xlat std pop repnz rex.WX xchg adc pop je cltd mov mov adc fsubs (bad) fwait pushfq scas in sub (bad) xchg callq (bad) in xlat rex.WRXB mov mov jge imul rex.WRB pushfq push mov shrl icebp in lock mov mov xor fcompl sbb repz movsl rex.WRXB pop lret push insl cmpsb movabs (bad) (bad) popfq xchg outsl pop pop (bad) lret insl (bad) xor outsl fdivp repz popq pop imul push outsl movsb push mov clc (bad) push test cmp fisubl xchg lret sbb callq push cmp sbb mov fnop add mov out std movabs (bad) (bad) mov pop mov jmpq or es adc (bad) or fnop push pop pop rex.WB rex.RXB sub adc or xchg mov imul test lea add mov (bad) js loop outsl rex.R (bad) jae jrcxz cs cmpsl (bad) sub rex.RXB repnz (bad) cli retq nop (bad) fiadd (bad) mov iret loope jg mov pop pop (bad) jbe jne popfq imul xlat (bad) mov scas jo sbb divb sarb fcoml (bad) jge leaveq outsl sbbl pop loopne xchg jb pop lret mov fcmovnbe and cmp xorl pop shlb (bad) pop clc mov adc sbb rcrb (bad) rex.WRXB lock ds push cwtl mov xlat and iret (bad) mov mov stc xor movabs cwtl mov sub fs cltq (bad) decl xlat adc lret stos imul (bad) rex.WXB (bad) pop cmp xchg jg sub lea hlt mov xchg loopne vshufps mov popfq fiadd (bad) xor and imul adc mov xor add fbld rex.WB loope lahf (bad) pop (bad) (bad) cmp imul add xchg rex.WRX adc sbb loop outsl stos pop rcll icebp (bad) mov scas cmc mov and xchg (bad) adc sahf sbb jg in (bad) or (bad) test jne adc pushq test cmc rex.WRX adc outsl mov rex.WXB (bad) insb or rex.WB loopel and xor rex.WRB pop incb and (bad) cmp rorl (bad) (bad) cmp movabs std jae (bad) out pop lock in lahf out sbb fsubrs fcmove clc addl cmpsl add (bad) rclb and scas sbb mov (bad) outsl jge js jo pushfq cwtl imul lret cli (bad) mov adc (bad) rolb jrcxz mov test repnz cmp mov sbb xlat sahf sbb jbe popfq lods gs adc pop rex.WRXB cltd (bad) (bad) out (bad) fbstp sbb and rdtsc js (bad) adc xchg movsl sub mov rex.RX idivb push rorb (bad) out mov (bad) (bad) mov lods loop fiadd addr32 or jmp (bad) adc js fucomp stos mov (bad) lahf nop maskmovq xchg mov and jmpq or rex.RXB jno cltd and ficoml mov fisttpl subb or test jne pushfq insb or outsl pop pushq mov xor rex.WR (bad) pop clc cltd mov xchg ror mov vcvtsi2sdl in xchg xchg (bad) repnz mov flds xchg punpcklbw and sbbl xchg jrcxz and (bad) pop push rcll jmpq (bad) fs jp cmp push (bad) fcmovne (bad) cs mov out mov cmpsb repnz test test fbstp xchg outsl mull setp push adc xchg pop ficompl mov or xchg (bad) pop sahf retq shll xor fucom or and and push (bad) (bad) popfq rex.W cmp rex.X pushq jb jo sbbl pop sti or lea sbb (bad) movslq jnp jl sub cmpsl subl jb imul adcl (bad) sarl callq jae add jno lea sub shrl mov sbb xchg leaveq outsl or int3 (bad) mov mov (bad) mov mov js cli (bad) scas jbe rex.WXB jrcxz je or pop mov add jo or jle lods jmp jrcxz (bad) xchg out scas (bad) mov cwtl sub xchg jrcxz cmp pop mov lock (bad) pushq and loopne pop rex.WXB or add repz ficompl out jnp outsl pop (bad) pop (bad) jno (bad) cmpsl fstp (bad) xlat push rex.X pop jmpq ja repz jg retq adc rex sbb outsl rex.XB retq (bad) xchg test adc mov mov rcl jno lret out sbb sub (bad) rex.WRX mov cwtl (bad) (bad) cmp xchg rcrb (bad) add fsts cmp out mov frstor (bad) imull mull fisubrl mov xchg (bad) (bad) jmpq sub cmpb mov movslq xchg retq or push outsl and iret lods in rcll jge sbb add rex.RXB and movsb xlat gs (bad) mov sbb jrcxz xor lods xor shll imul mov mov sub loopne sub (bad) xchg in jl insb loopne push xor or and (bad) xchg sbb stos adc movabs push xchg fdivs (bad) (bad) add (bad) adc mov adc sub mov lods lods jmp cmpsb xchg nop push lods movsb sbb pushq sahf mov fistpl std movb cld sbb xchg mov lods mov xchg es jp cmp (bad) mov movabs je xchg rex.RXB mov stos rex.RXB jmp rex.RX push (bad) movabs or (bad) pop cwtl in mov (bad) nop adc rcrb rex.R mov cmpsl js test pushfq add sti jne add (bad) jnp xchg outsl movabs (bad) mov rex.X (bad) test enterq jg push rex.WXB xchg adc movabs mov es rex.RXB (bad) (bad) xor es adc sahf mov rcl (bad) push (bad) mov cmp and mov leaveq scas retq rex.WRXB popfq jbe mov (bad) divb (bad) (bad) (bad) outsb xchg mov push roll fs loop xchg (bad) fnstsw push or stc jmpq mov mov (bad) rex.WRXB xor lret stos or notl add sub clc insb mov adc (bad) xor in rex.X cwtl add jrcxz pop xlat leaveq (bad) add cmp jmp adcl pop xlat scas lods jb mov mov mov cmpsl retq (bad) fs rex.X jmp mov sbb addr32 cltd scas adc movabs adc outsl jp (bad) rex.XB lret mov subl mov pushfq mov sbb iret sub adc (bad) (bad) or pop mov (bad) (bad) add (bad) push xor or rcrb movabs in adc sub shll sbb xchg (bad) xchg pushq (bad) (bad) or mov xchg cmpsl in (bad) jbe push mov mov rol add xor cmpsl in adc and rorb sbb es notl xor rex.WB callq addr32 jg rorl lahf xchg pop fdivrl jae outsb loopne mov out or addr32 movsl mov (bad) je or cmc pop (bad) (bad) xchg fcmovnb xchg ds loope xchg mov std rcr pop rex.B pop adc pop rex.R je add sub cltd (bad) jrcxz fldcw sub jns cmp cld mov pushq sbb roll leaveq (bad) addr32 scas sti xchg scas xor pop (bad) cmp retq rex.WRB jg adc rex.WR lock xor fidivr (bad) cmpsl outsl jbe cmp movabs or (bad) mov (bad) fisubr pushq (bad) and test and sub cmpsb lock xchg nop xor leaveq or add retq pop add (bad) in adc jno adc push xchg rcr (bad) add movabs xchg push fisub lahf (bad) stc xchg cmp jns divl enterq pop cmp out movsl sub mov rex.W adc (bad) mov outsl (bad) lahf push shll pop mov repnz xchg or pushq mov xchg cmpsl fidivrl (bad) mov (bad) cmc shrb imul adc (bad) mov xchg or retq lahf ja stc orl (bad) lods scas adc mov movsl movabs push jmp xlat or or adc xor out or adc fidivr xlat pop push (bad) push fiadd add mov pop (bad) xlat shrb mov icebp sahf jg,pn jns (bad) jnp (bad) enterq or movabs fisttpll xor (bad) rcrb xchg adc sahf jbe jno (bad) mov out movabs or movsb es movabs mov jb lock jo outsl rex.WXB popfq adc xchg xchg fimull int fisttpll (bad) out pop mov pop test xchg movslq outsl pop (bad) insl test mov (bad) mov (bad) mov int3 sub test (bad) es rex.WRXB xor popfq rex in adc sub cmpsb and (bad) repz je or push mov xchg lods jle cltd (bad) adc pop out iret and jne fisub (bad) and fstp xchg rorl loope retq cmp out push cltd lea nop rex.WRXB jg (bad) in sahf lods idivb mov jp movslq mov out sahf scas je mov sahf lahf stc shll cltd add adc (bad) push push mov loopne adc pushq jle fucomip rex.WRX sub rex.WRX (bad) (bad) ja lret rex.WRXB jbe cmp rep xchg push outsl sbb mov rex rex.WX xchg iret js fwait mov fldl ja (bad) sub mov movslq stos (bad) loopne jmpq add (bad) cs rex.B (bad) rex.WRXB repz pop xchg mov fdivs xchg (bad) mov rex.WRXB sub fisttpll pop mov pop icebp adc rex.WRB mov rex.WB scas movabs jne xchg (bad) std mov retq adc leaveq adc jg lods data16 xchg rex.RXB (bad) fist jmpq adc rex.WRB rcl lea mov jmpq bswap jge in (bad) (bad) (bad) mov ds xchg mov (bad) xor cmpsl pop hlt pushq rex.W adc nop rex pop hlt xchg jmp cltd add sbb cmc mov (bad) pop test xchg jnp (bad) insl (bad) mov int3 jbe sub sbbl fisttp mov xchg mov mov mov insl xlat xor xor xchg xlat (bad) out cld fbld jns movslq rex.XB mov sub scas rex.WRX jge fs xchg jmp xor retq (bad) (bad) rex.WX (bad) test movsl nop cld (bad) sbb xchg pushfq rcl xorl rex.WRX rex lods sub lret mov fldl (bad) lea adc scas mov mov xchg adc push jrcxz xchg cld pop (bad) adc movsb push movsb in mov push (bad) push sarb fildll jmp popfq jrcxz mov adc rex.WB rex.WR (bad) (bad) sub (bad) (bad) mov mov mov cmc lahf nop scas lea (bad) data16 mov (bad) pop mov in cwtl (bad) jae je cltd fimull jg rex.XB pop xlat roll (bad) jmp push in (bad) fsubr icebp jno xor sbbl mov movabs test mov mov jae jg jrcxz test neg mov mov int3 (bad) cmp out jnp repz rex.WRX enterq sub jp (bad) mov movabs (bad) mov movsb add pop (bad) jbe or gs sbb pop rex.WB fxam loope leaveq fdivl ds lock pop scas rcll sbb lods movabs xchg movabs test cmpsb fwait jns xchg mov push xor (bad) popfq stos outsl fwait push lods xor mov orb (bad) cmp cltd cmp (bad) mov or repnz sub loopne,pn mov jmpq xchg lock (bad) (bad) jbe ja,pt (bad) mov movabs (bad) push xor cmpsl (bad) push js movslq negb sbb mov fmul imul xchg cld xchg or (bad) xchg rex.WXB rex.WRB xchg loop test jo (bad) (bad) xlat vaddsd jbe pop push outsl callq and rex.WXB jmpq fmul rex.WRXB mov loopne (bad) out sub fsubr (bad) lret push icebp (bad) sbbb (bad) outsb cmpsb fidivr sub gs movabs pop sbb sbb pop mov lret ficomp (bad) mov or sub sahf (bad) mov loope mov jle enterq xor (bad) (bad) mov popq or pop xlat lea retq andb pushfq push lods (bad) mov (bad) out ficompl ja xor retq mov or lods xrelease adc out add xchg shrb (bad) mov test rex.RXB in iret iret (bad) sbb cwtl loop movabs xchg mov rex.WRX addr32 jne xor movabs mov movsb (bad) xchg ficomp sub pop std push je sbb leaveq xchg loop adc sub xchg out ss xchg (bad) scas mov enterw ss sar jrcxz iret fisub (bad) in cmp negl fcoml cmp rex.WRX (bad) (bad) rex.WRX mov out pushq cmpxchg xchg fdivrl (bad) nop adc xor xlat (bad) jmp popfq jrcxz mov sub repnz rex.WRXB je stos (bad) sub int3 and cmp addr32 icebp int3 faddl loopne fwait jbe cwtl mov (bad) addr32 and (bad) xor (bad) rol jmpq xchg xchg outsl xchg (bad) jl lods sbb push xor scas (bad) cmp fstpl (bad) (bad) cmp test retq sub test mov (bad) mov stos mov mov and push out (bad) es xchg rex.WRB out mov pop (bad) (bad) stos (bad) imul sub loopne (bad) je adc rclb rcll outsl movabs xchg fsubrs lock jg (bad) xchg callq (bad) stc subb and xlat fmuls xor movsb push cmc (bad) cmc nop neg nop xchg fwait xchg sbb callq loop (bad) rex.X adc mov sahf (bad) rex.WB movsl sahf out (bad) adc enterq repnz out cltd or icebp outsl (bad) (bad) in xchg movntq rex.WR pop faddp (bad) pop in xchg rcl ja (bad) rex.WRXB adc iret (bad) (bad) sbb rex.XB rex.W (bad) jbe fwait (bad) adc outsl (bad) mov push and (bad) faddl negb fsubrl int mov rex.WB adc xor insl outsl test sub mov sbb sbb sti (bad) xor (bad) retq sub lret lret mov mov pop popfq or xor sbb test outsl add lods cs imul int3 add pop pop movabs rex.WRX rex.WXB jle mov mov loopne rex.WRXB mov jmpq cmp in sub (bad) mov fwait xchg (bad) hlt (bad) rcr mov std sbb mov test cmpsb loop not loope fisubl fs jge sarb adc (bad) std jbe sbb rex.WRX rex pop (bad) rex.W pushq nop sbb (bad) pop retq movslq stos xor fucom jp cs jp icebp insl rex.RX xchg (bad) pop loop (bad) (bad) lea rex.WRB or xor pop jmpq in sbb sub xchg rex.WRXB adc add imul (bad) mov mov sub cmp sub sbb jrcxz movabs (bad) loopne lock or out mov xchg adc (bad) rex.WRX xlat (bad) cmpsb cmpsl and mov add jo (bad) mov mov outsl jp outsb sub or jo enterq cwtl mov sbb sbb jle rex.WRX jbe xchg sbb out (bad) (bad) mov and xor mov retq cmp and nop movsl adc hlt (bad) (bad) in in scas and data16 (bad) test ficomp pushq movsl in retq mov retq xchg pop outsb cld pop or or pop cmc (bad) rex.XB xor outsl hlt stc lret (bad) scas ktestw vpmacssdql or movabs mov shlb data16 popfq (bad) orl add push outsb (bad) rex.WRXB in ds andl outsb and paddw lret ja bnd sbb xor sbb sub loopne cli fidivl adc mov stc and jbe fstps push mov jns test lods mov addr32 (bad) cmp fsubs (bad) (bad) jle jbe movabs sti jl mov (bad) ja sbb pushfq add rex.WRXB pop cli and adc xor sub push (bad) loop pop jrcxz outsl pop (bad) mov (bad) add mov cmc mov xor push adc fwait in jp (bad) enterq pushfq js sub push je xchg scas and sarl adc imul or loop enterq push loopne rex.WX rex.W mov pop ds scas shrl out movsb (bad) jmpq or jnp sub sarb jrcxz or or (bad) (bad) push rex.RX in shll fdivrl fsubp hlt mov fcmovnbe mov iret je (bad) mov add sbb jbe mov adc rcl mov (bad) mov jmpq cmp mov clc adc fiaddl xchg rex.RB stos mov rex.X sbb mov push or int adc (bad) push int3 cmp sbb rex (bad) cmp add xchg (bad) (bad) or xchg mov in retq jnp and (bad) (bad) (bad) mull add push jmpq out sbb in and lret (bad) outsb (bad) repz pushq mov ja xlat (bad) mov xchg mov int (bad) fdivrl jg adc xchg (bad) out icebp xchg sbb mov lock push xchg push xchg push ja mov fs jmp shll sahf pop xchg rex.RX mov retq (bad) scas and movabs xor rex.RXB mov (bad) movabs hlt mov mov xchg movsl xchg push cmp and cld jne data16 jb (bad) jae cmc rex.WRXB fsubrl (bad) xor insb mov jg and imul sbbl pop stos test or push cs push (bad) xchg push jle rex.WRX jne jns mov sub (bad) sub repz cltd (bad) adc outsl jne or retq mov sub xor jae lock (bad) and mov rex.WRB (bad) fstpl sbb ja movb sub rex.WXB jge shlq loopne jge mov cltd fcoml (bad) movsb jle cmovg sarl push pop nop rorb pop mov xchg lea (bad) sub pop mov rex.WR cwtl push stc sbb pop out (bad) (bad) cmc xchg out mov in gs sbb std rex.R ds rex.RX mov retq scas (bad) fidivrl mov rex.WRXB mov and jl mov push (bad) fstl lea adcl xlat (bad) pop mov in test mov jbe (bad) push sbb jne xchg lock retq rex.R mov (bad) imul addl mov and test rex.X mov (bad) xchg (bad) es rex.WRXB (bad) out (bad) jmp xchg je and xchg loope out jg jmp and pushfq (bad) es (bad) (bad) push je mov outsb shlb (bad) sahf and lods negb outsl xchg xchg (bad) and orl ja (bad) sub pop adc movabs or (bad) pop jge xchg orb jae jge leaveq jnp movabs mov xchg xor insb mov pushfq jnp (bad) pushq adc cltd sbb xchg cs xchg (bad) icebp xor sub insl xlat add (bad) cmp outsl movsb sub (bad) push sbb ja rex.WB (bad) fisttpll push shll (bad) mov and or xchg and mov fmull (bad) lock scas fidivrl sub mov loope push xor xchg jbe jg orb xchg push rex.WRXB sbb outsl xor lock repz fcompl (bad) jl (bad) jmpq unpcklps (bad) and mov sbb leaveq repnz jmpq jle xchg lahf pop sti pop jmpq add xchg mov loopne fiadd outsb pushq (bad) mov mov (bad) rex.WRXB (bad) mov xchg jle outsb outsb cmpl mov (bad) (bad) (bad) rolb xchg (bad) adc (bad) mov sub xchg subl fstl xchg mov xchg mov pop pop outsb je mov rex.RB adc scas jp stc rcrb lea mov xchg rorl cmpsl (bad) je sub mov insb rex.WRB push and rcrl jbe add push sti data16 jrcxz or mov out sub sti add xchg jg pop test mov ja adc (bad) jbe xor leaveq sbb adc test mov mov (bad) and (bad) imul xchg lods jb js cmpsb xchg push popfq rcrb mov lods rex.WRB (bad) insb rex.RXB retq repnz mov jp out pushq and xor (bad) xlat (bad) mov mov sti (bad) mov jbe scas and push (bad) imul add cmc xor (bad) sub (bad) sub addps xchg xor pop pop push rex.WRB rex.WRX xor jrcxz cmpsb (bad) fistpl nop pop int3 (bad) (bad) fnstsw cmp adc lea sti sti (bad) sub jmp (bad) mov rex.X mov xchg sarl push shr cltd cmp sbb mov in movsb jmpw je scas callq jle movabs mov mov (bad) sbb xlat sub xchg movabs movslq fnop sub add (bad) xor rex.B rex.W imul add sbb (bad) cmpsl mov cwtl rorl cmp (bad) je rex.WRX mov mov (bad) sti movsl jae and fcom icebp xchg and mov or (bad) pop callq jne mov xchg nop rex.B fnstenv mov and loopne (bad) insl jrcxz hlt movabs sbb adc sti ja or (bad) shr pop stc rex.WB pop (bad) ja (bad) rex.WX ss fidivl mov cmp scas pop loopne (bad) rex.WRXB rex.WRXB push xchg nop mov nop mov stos xchg in add fidivrl sub test notl fbstp psubw fildl (bad) (bad) cld adc xchg (bad) pop (bad) jns ficoml sub cmp and (bad) add add retq (bad) and shrb (bad) ss xchg cmpsb (bad) rex.R rex.XB frstor idiv lods outsl addr32 push outsl ss cwtl lods (bad) (bad) ficompl test mov icebp push xchg sahf (bad) ja cmp sti (bad) sbb (bad) xlat (bad) rex.WRXB xor xchg out sub (bad) sub mov fcomps out jg adcl mov (bad) push xchg mov sbb mov cld rex.X fisttpll sbb mov cli xor and jae rex.WRB scas mov sbb outsl rcr rex.RB xchg jns (bad) (bad) scas lret mov popq sub callq loopne adc int3 addr32 pop rcrl xor rex.X xor and mov data16 (bad) stos test fistl add cmpsl rorb fildll adc test lret imul int3 sahf rcl (bad) xchg rex.RXB (bad) jmp sti in lret jmpq flds add mov xor ja xor int3 mov lods cmpsb stc cmp xchg cli (bad) (bad) data16 mov pop lret test fstps int (bad) roll insl xor sub (bad) lods sahf nop sbb sub pushq sbb (bad) or in (bad) mov fnstsw lock pop or rex.WRXB pop lea jg sbb rex.RX rex.WRX jrcxz (bad) int mov push rex.RXB xacquire mov jns lret scas sahf pop and insl es jle pop sbb lods rex.X sbb sbbl jg rex.WXB lahf jge (bad) pop popfq frstor sbb movsl xchg mov pop sub push imul loop (bad) mov lea pop movsl and scas xchg movabs sbb out scas (bad) pop insl stos frstor adc outsb rcr push push scas push (bad) callq mov ss movabs (bad) pushfq mov std rex.RX cmp (bad) movsl lea fisttpll xlat mov mov (bad) sbb cs xchg rex.WRXB xchg (bad) shlb imulb add (bad) jrcxz mov lods sub adc (bad) out rex.B cmp fidivr (bad) mov xchg insb xchg movabs and lods movabs rex.RXB pushq jbe (bad) outsl lret jb in or rex.WRX xor xchg out (bad) mov add mov mov jge rex.WX retq jno lret scas popfq fildll nop sbb or movsl mov sbb test push cmpxchg adc fisub xor adc xchg mov fiadd xchg popfq pop movsb pop and retq jnp (bad) retq push (bad) (bad) (bad) test (bad) sub cli movsb (bad) or test mov fcomps mov rex.WRB rex.WRB lods fwait lock rex.WRXB leaveq fcoml and rex.X fistpll push jp rex.X sahf (bad) js cmp (bad) je fstp lahf xchg movslq xor pushq push mov mov movslq rex.WX xchg lods and ja movabs rex.WX lret sahf sub mov fsub xchg fiaddl imul (bad) fisttpl loopne mov cwtl je lret sbb (bad) or sbb push pushfq rex.WRXB fidivl mov sub rorl (bad) jmpq cmp (bad) (bad) neg mov (bad) rex.WRXB scas imul jns rep imul movabs int sbb test adc outsl jns adc fimul sbb and xchg rcrl xorb fucomp cmpsb out (bad) mov (bad) lea (bad) xchg retq imul mov fbld jbe push pop jb pop out mov test cmp addl or je (bad) push lahf rex.WRB retq cmpsl mov sub mov xchg scas sbb retq add mov callq pop (bad) cmp pushq xor mov loop rex.RB fs xchg xlat outsl scas pop hlt mov mov test repnz rex.XB pushq insl sub mov mov fwait (bad) cmpsl (bad) mov mov xor (bad) popfq pcmpeqb rex.WXB mov mov xchg lret jne rex.RXB lahf mov jrcxz xchg mov fdivl mov jmp xchg mov int jmp push loope (bad) and orl data16 xlat pop (bad) pop (bad) in lods fwait movabs sbb jns mov xor xlat sub sarl (bad) imul (bad) (bad) (bad) popfq scas out rcrb or ds (bad) adc out out lahf xor jrcxz out jne or xor mov (bad) pop jmp rex.WB in shlb in sbb lea xor adc sar lret rclb sub rcrb and cmpsl adc or mov movabs mov scas in mov adc movsb rex.WB (bad) jrcxz push (bad) fbld cmp lods (bad) xor stos es or adc sub cmp jmpq imul (bad) test lock (bad) (bad) stos mov adc scas mov (bad) fidivr (bad) mov fiadd movabs pushq mov pushfq jae or and outsl lods callq rex.WRB (bad) js out cwtl xchg movsb stc rex.WX pop insl xor int sahf push rcll xchg jnp imul out data16 ss popfq rex.RX sub mov fstl pop cmp (bad) lock (bad) cmp or (bad) leaveq jge or (bad) (bad) data16 data16 data16 imul (bad) jbe cltd sbb insb (bad) pop push sub lahf jb imul mov mov pop fwait es adc (bad) mov je or xorl pop or inc mov pushfq rex.RB rex.WX (bad) cmp test rex.WB fcoml scas int (bad) sub scas xchg (bad) mov mov push (bad) cld cmc (bad) (bad) movl idivb (bad) xchg stos mov jne xchg outsl mov rex.WRXB lea rex.RXB or mov (bad) jb sub cmp (bad) push movsb pop cmc mov jno mov push fiadd xorb int3 xor mov adc mov in fimul add iret mov pushq vpsraw repz rcll out sahf adc mov lea add (bad) test xor rex.WXB (bad) out cmc es (bad) outsl sarb movabs mov andb sub sbb sbb sub movl iret cmpsl pop xlat int3 mov lahf and xchg (bad) (bad) bt and jo std (bad) (bad) (bad) jo fisttp cmpsl jmpq xchg push and mov or mov roll xchg movlps jmp out xor pushq and sbb push and (bad) mov jle in mov push mov in jns lea callw push mov cmp adc (bad) mov xor cmp loop icebp jns movslq cmp or and leaveq jle icebp nop outsb stc (bad) in mov (bad) or out sarl rex.WRX (bad) or pop sbb rex.W (bad) mov mov xchg mov rex.WB pop jg jmp movabs mov sub cmpsl (bad) scas mov sar xor test or (bad) icebp out gs xchg (bad) mov and xchg sub mov in insb mov ficoml (bad) pop (bad) (bad) cli push cltd push mov adc xor fcmovnu mov out sbb fbstp fidivl mov rcrl pop rex.RXB fldt (bad) jnp movsb xor (bad) push jmp shrl mov xor pop sub add jb mov packssdw (bad) cmp sbb mov jg sbb fwait mov outsb push sbb mov cmp adc ds (bad) mov xchg rex.WRXB xchg sub stc stc vfrczsd je cmp movabs rex.WRXB cmpsb sub and out rex.XB icebp repz nop (bad) loope repz fsubrs lods sub fbld jg callq rex.RB lea add outsl mov sbb test jle mov xchg cltd rex.RX rolb test jae test es mov push outsl mov cmp (bad) or cli (bad) xchg add or pushq sti (bad) rex.WRB jrcxz mov adc outsl lock or mov (bad) (bad) je pushfq fldl test jp lea and movabs adc stos mov (bad) xor rex.WRB jne mov roll (bad) sbb (bad) rorb fmuls mov retq out adc retq adc in mov scas lea add xor mov cmp mov xor rex.WX mov sbb in xchg or or (bad) mov xchg shll mov add mov lea (bad) retq je shrl adc (bad) jl rex sub jle repz (bad) or test mov pop in in rex rex.WRB push sub fistl mov data16 mov adc test callq add (bad) (bad) jo pop int cmp add push stos sarb rex.XB xor pushfq movsb popfq fistl cmpsb rcl fisub jmp scas mulb or jns subl retq rex.WRB cmpsb mov notb subl je cmp adc mov sbb lods scas imul ss mov (bad) lret retq adc (bad) add ds lea rex.WRXB xlat jmp pushfq rcll int3 jg or (bad) jl (bad) (bad) adc (bad) jrcxz imulb lcall out xor imul jb movabs pop rex.XB retq add rex.RXB rex sbb pop sbb xor add or leaveq sbb pop fiaddl xor lahf mov xchg xchg scas scas fsubrl or xchg xor fnsave push imul mov out (bad) data16 std jle push out (bad) cltd sbb cltd (bad) (bad) movsl (bad) movabs mov insb fcomip test (bad) xor movabs add out push and popfq jg or sahf sbb mov xor rex.X mov in xor mov cs rex.WB mov rcll (bad) (bad) sbb mov xlat mov psubsw jl xor sub movslq leaveq and mov orw cmpsl outsl mov in fiadd (bad) movabs roll imul (bad) mov sub sbb mov sbb pop int test lahf test insb or rex.R mov lea add imul ja fmull icebp xchg cltd movabs and adc push cmc rex.RXB xchg lea and loope je cltd rex.RXB rol cmp jg (bad) movabs mov iret rorl xchg (bad) ds mov and cmp mov rex.XB mov sbb adc mov lods mov repz stc rex.RXB sbb outsb xor adc (bad) mov add test sbb lret cli adc (bad) rex.WB sti repz rex.RX (bad) or mov rolb mov rex.B xlat cltd imull pop rcrb pop (bad) (bad) test clc (bad) (bad) lret (bad) mov loopne mov in repz stos imul and xor and lods pop (bad) outsl xchg mov in pop cmp pushq or adc push jmpq movabs insl hlt sub xorl add test (bad) (bad) ud1 mov pushfq rex.X xchg fcoml rex.WR cmpsl pushfq adc int3 mov cmpl mov retq test in imul pop insl sti nop sbbb sub mov sahf fstps (bad) es adc sbb push outsl mov rex.B mov rex.X (bad) nop shl stos imul outsl pop cmp adc rex.X (bad) cmp lods (bad) scas mov jge lahf (bad) popfq sbb mov push cmpsl push sub loop (bad) sbb movsb sbb in sbb sub clc mov rex.WR fdivl mov mov rcrl push xchg negl retq push (bad) xlat sahf pop (bad) (bad) loop std ffree rex.WRB rex.RX jne mov and rex.WRB cmpsb callq mov movabs notl (bad) jl retq js mov jg jnp mov mov outsl popfq adc (bad) push xchg (bad) rex.WXB xor test add sbb and lea cli out jge (bad) js (bad) xchg pushfq imul mov xchg rex.WXB test xchg fwait pop (bad) fildl data16 jne insb ja stc adc lods movslq or mov mov mov rex.WRXB jl icebp (bad) mov insl sbb add je std push jg or lcall out fld js sbbl int or add lods (bad) iret out pop (bad) xchg addl adc (bad) mov fist adc gs notl xchg adc (bad) xchg xchg lret scas rex.WB add cli xchg pop lea (bad) jne (bad) jnp sub jg (bad) mov jrcxz (bad) mov jmpq cmpsl (bad) sub shlb cmpsl sub cld in (bad) testb add rex.WX (bad) faddl (bad) (bad) cmp rex.R rex.X fdivrs (bad) sub (bad) je loope out movabs sahf add fnstenv mov mov pop (bad) (bad) rex.X std fldl sbb nop je mov jbe jbe mov lret mov (bad) js mov (bad) pop mov es jg cmpsl stos pop adc (bad) mov cmp pushq jns mov mov (bad) sbb (bad) (bad) in test mov jg and scas xchg rex.R rex.WRXB mov mov rorl (bad) sbb fadd push js cmp rol xchg mov add popfq push cwtl je cmp mov xor sbb insb adc fcoml (bad) cmpsb (bad) jmp addr32 pop shrd sbb lods or jle xorl imul (bad) in mov sbb cltd xchg mov mov (bad) lods push mov nop rex.X push adc test stc mov xrelease (bad) mov js jle fcompl push mov pushq adc (bad) fstl mul lret (bad) rex.R or or fwait mov push mov rex.WR xchg or movslq jle add mov icebp sub test je mov mov pushfq mov lods pop sbb xchg rex.RB mov popfq cltd mov xchg sub pop mov xchg cltd add cltd jmpq add add or loop leaveq (bad) stos fistpll cwtl fimul pop mov rex.RXB fnstcw (bad) (bad) sub xor sti sub and push and add rex.RX cmpsl jrcxz mov and mov push (bad) rex.WRB ss rex.WR jp cmp outsb pop pop mov push xor (bad) or in outsb stos push xchg scas jge add push fcoms sub mov xchg adc outsb fwait (bad) and (bad) (bad) mov movabs in mov rex.XB mov mov nop xor loopne xor push add int3 outsl movabs xchg sbb pop nop loope test pushq sbb outsl xchg sub pop push sub enterq decb mov pushq (bad) pop outsl rex.R stos xor loope cmp xchg (bad) out in xlat or mov mov jbe rex.WRXB sbb retq retq (bad) pushfq stos mov xchg cwtl hlt rex.WRB iret jge std xchg popfq sub lahf shrb or cmp (bad) movabs repz sub (bad) jb sub je (bad) stc jno sarl mov mov and callq repnz adc (bad) sub sub cmpsl mov rcrb rex.X cld (bad) rex.WRXB outsl (bad) (bad) (bad) xchg lods stc fadd es cmp out xor nop sub lock (bad) pop je rex.RX cs jo pop shr pop in stos mulb int3 icebp rex.X movabs sbb mov xchg loope sbb scas or rcr xor mov rex.WRB outsb movabs ficoml adc sbbb adc sbb push fisubrl movsb xor or xchg jle leaveq repz cmp fwait (bad) xor sbb rcll xchg mov repz (bad) rex.W and cmpsb xor sub rex.WRXB lret loope scas lods fldenv rcr xchg xlat outsl out adc icebp rex.WRB add lea push cmpsl rex.WXB rex.WB sbb (bad) ficompl mov clc rex.X fcmove (bad) test outsb (bad) pushq cmp rex.WRX rex.WR sub sbb push (bad) std cwtl push rex rex.WRX mov lea sbb sbb adc outsl xor push sbb push cmpsb rex.W cltd (bad) rex.X sbb pop scas (bad) and rex.WX rex.WRX push sbb cmc (bad) xchg mov pop data16 mov sub cmpsl hlt mov not ja add rex.WB sti fadd shlb lahf (bad) outsl stc mov sahf or loope adc jo mov mov mov lret rex.WR rex.WRXB rex.WR rex cmpsb push jrcxz and mov fisttp pushq shlb notl jmpq (bad) (bad) (bad) (bad) sbb mov xchg xor rex.B outsl or mov xlat cltd sbb mov jno callq or mov jge (bad) xor mov rex.RX adc orps mov notl or mov rex.WR mov (bad) mov and pushfq pop addr32 pop (bad) cmp rex.WX mov (bad) (bad) out fnop and mov popfq sub jmp leaveq (bad) incb in cmc fimull adc (bad) jg rex.WB movsl mov rex.WXB iret cld addr32 push sbb stos popfq rex.B enterq in rex add push cwtl xor mov (bad) lret (bad) cmp (bad) jg adc push movabs and test xchg sti (bad) mov nop mov xlat in mov lods in repz lahf movd out lea int mov (bad) push pop xor (bad) rex.RXB ss rex.WX rex.WB (bad) imulb push mov popfq je xchg xchg (bad) (bad) rclb cli cmpsb xchg jbe repz repz (bad) sub mov pop cltd cmc mov cmpsb movabs mov mov (bad) stc (bad) rex.R imul std push hlt sub lea (bad) cmp jae cmp nopl leaveq (bad) jmp hlt hlt outsl mov callq fcoml push (bad) jg (bad) lock out (bad) (bad) ja (bad) pause rcrb jbe (bad) je cli jle jmpq or cmp mov fnstsw xchg rex.B fsubl leaveq outsl data16 xchg jrcxz (bad) sub xlat push xlat mov (bad) xchg mov or push xchg sti (bad) jne rex.X rex.X testb pop xchg scas (bad) mov stc test ja xor push xchg jg insb xchg decb enterq xor jnp mov outsl loopne pop cltd addr32 (bad) mov (bad) mov mov (bad) jnp mov (bad) and loop xchg and std fisttpl xchg ficom mov pop pop push movsb scas rclb push add mov rex.WB nop addb xlat jae xchg pop movsl and push pop (bad) andl mov movsl (bad) adc in ja sub pop xchg (bad) lahf jo test ficoml add add xlat rcrl iret push enterq and rex.WRXB or fs sbb (bad) cmpsb sub cwtl movsl (bad) push mov sbb mov jge push rex.WXB clc xor or rex.WXB mov callq fstp or adc test or (bad) (bad) jmp add (bad) xor (bad) mov mov fiaddl (bad) cmp pop mov outsb (bad) decl (bad) pop sub xchg rclb enterq imul rex.WRXB sahf (bad) je lret data16 xchg xor vmovaps cmp cli cmp sbb sub sub pop movsb (bad) mov out xchg (bad) xor lahf sub btr xchg shl sbb (bad) push outsl jp shll rcll mov lret sbb rclb pop xchg pop (bad) mov (bad) movabs mov scas fidiv (bad) sbb fwait in mov sub and outsl retq sbbb xchg ficoml push mov (bad) insl xchg cmpsb push jg sbb enterq mov sti or or repz rex.RB setne xchg sub mov (bad) out xchg mov (bad) cmc (bad) mov fucompp sahf movsb adc incb fwait mov rex.XB test jle (bad) mov (bad) outsl cmpsb mov rex.WXB test (bad) fwait adc cmpsb jg data16 (bad) pop mov repz loope mov scas jno (bad) mov lock loop in imul cmp cmp jne cmpsb fldt (bad) rex.XB xchg (bad) jne repz mov ficompl or jl (bad) mov jl sbb cmp sbb insb add pop mov (bad) fdivrs (bad) jbe adc sti gs mull in movabs pop enterq rex.WB fstpl loopne (bad) mov rex.RXB (bad) rex.XB mov int (bad) xor jmpq mov enterq mov repz sahf fnstsw rex.WRXB rex.WB lea (bad) mov adc mov rex.RXB push cmp mov lret cmp ja mov lret rcr popfq movabs and push out xor movsl cs cmc or adc lock (bad) fcmovb js icebp mov fisubl (bad) jae adc js push (bad) insb cmp rorb mov (bad) popfq loop rcrb es mov data16 xchg pop rex.WRX or popfq xor mov lea rex.WR jbe xor (bad) push pushq in add xchg sbb pushfq loop (bad) ficom movsl xchg adc nop out mov fsts (bad) rcrb (bad) retq rex.R insl rex.RX movsb cmpsb cmpsl movsl outsl rex.WXB or scas jrcxz mov test imul xchg addr32 cmpl iret xor pushq (bad) (bad) push or test jrcxz mov rex.WRX pop adc repz outsb xchg rex.WRXB (bad) lods fwait scas rex.WRXB (bad) sbbl in mov (bad) out adc scas imul movsl jge cli sbb lods rex.WRB cs es lods or pushq (bad) sub mov pushq mov sbb push cmp (bad) mov xor in jns (bad) xor (bad) iret mov and xlat xchg repnz jge loop jrcxz push xchg test mov popfq insl lret jg rex.RXB js sub mov (bad) xor outsl loope rex.W jo lahf movabs cli rex.WX cmpsl rolb cmp jmpq xchg cmpb xchg int3 jb jg (bad) (bad) mov sub cmpsl movslq sub pop pop (bad) fnstenv mov imulb in wbinvd sarb je (bad) (bad) rex.WRB cltd imul test (bad) insl rcr jno jne enterq jne subl (bad) push int adc push movl shrb or push mov (bad) mov fwait pop push outsl rex.W imul (bad) push cmpsb mov subl mov adc jnp cmp pop mov xor lret cwtl and cmp in (bad) (bad) int jl mov mov (bad) por in rex.W (bad) fild movabs cmp lret mov lock jge pop nop (bad) pop je rex.WRXB (bad) and or (bad) adcl popfq jl xchg rex.RX in (bad) outsl loop sbb xchg mov (bad) adc or fcmovu shrl out add pushq xor movb decl mov out in out xchg mov (bad) rex.RX gs and pop loop or fiaddl pop lahf mov divl xchg rcl iret xchg outsl out xchg xchg (bad) mov repnz test xor cmp mov scas cmp pushq out lret mov adc test (bad) xchg outsl repz int mov fucomp (bad) jb (bad) test movl xchg lret data16 (bad) movabs mov cmp andl andb stos jno (bad) enterq adc repz xchg mov imul sub rex.WRX rex (bad) sbb imul xchg sub and mov mov rex.WRX mov (bad) mov rex.WRXB outsl adc (bad) movslq int3 jne and vorps xchg and (bad) cltd negl insb add leaveq jno je out sbb rex.WRB xchg sbbl mov lods xorl or fldcw xchg enterq jnp rcrl rex.RX pushfq rex.WRXB sbb (bad) out (bad) imull movsl lea pop in (bad) mov mul jrcxz outsl div rcrl in xchg jbe popfq cmp js xchg out mov add roll movabs popfq cltd addr32 bnd cmc rex.WX repz lret (bad) scas imul sub stc push cmp imul rex.WR xor mov outsl callq jmp mov xchg test and subl add jns leaveq jbe insb lea adc cmp lods adc and idivb flds or fmull rex.WRX iret mov mov cli cmpsb xorl (bad) loope jrcxz frstor xchg scas mov mov mov test sbb push and movslq iret cmp mov (bad) clc (bad) clc sbb (bad) xor iret ja mov adc mov popfq mov (bad) jbe cmp mov xor (bad) lahf fsub (bad) shr rex pop in int3 (bad) adc adc xchg andnps movabs mov outsl sarl (bad) imul cmpsl sbb fstl mov jns cli cmp pop (bad) (bad) pushfq push jne retq int3 (bad) rex.WXB addr32 or (bad) adc (bad) test rex.XB fsubl xchg lods mov (bad) iret loope sbb (bad) (bad) std mov sbb or and push in adc jne (bad) (bad) cpuid lret push mov insb (bad) or mov fwait movabs scas sahf mov (bad) jae (bad) outsl mov cli pop jbe sub mov (bad) lahf sbb cmp fistp xlat xchg push (bad) (bad) fs jns fildll pop jl push (bad) rcl insb je cmp in or rex.RB cmp xor jbe add or cmp incl fcmovb add int3 outsb gs lahf fisttpl sub xor adc fistpl push pop (bad) and movabs stos rex.WXB xor (bad) scas mov pcmpeqb or mov push (bad) cmpsl mov lret and mov lods lods mov fisub mov lret lods jns rex.WRXB lods add ficompl jge scas fcomps test pop cmp outsb jge mov mov (bad) jge (bad) mov imulb cmpps mov adc (bad) sbb and in xor imul out popfq imul mov fsts rex.RX stc scas (bad) jne ss mov cwtl jp mov sbb gs movsl (bad) (bad) andb (bad) xchg xchg jg sub rex.WB cmp sbb (bad) jmp (bad) movslq (bad) cmp xlat in jo xchg sti cmpsb int xchg sub sbb lahf and xchg xor sub xor (bad) and sub movabs (bad) adc push or out pop mov (bad) and jge and mov loope xchg clc imul push mov rex.WXB in and mov (bad) and mov mov mov cld (bad) xor (bad) adc sub fstp pavgb mov pushq cmp rex.XB rex.RXB (bad) sahf jg rcrb or imul pop ficoml sbb (bad) pop int3 adc pop push (bad) xchg outsl (bad) add mov cmp cmpsl fstl sbb mov movsb (bad) jae (bad) xlat mov callq retq mov mov ss sub mov fidiv add (bad) mov and (bad) mov push rcrl outsl mov stos out je push stos adc mov mov (bad) jns movabs (bad) addr32 adc test std repnz (bad) movsl mov retq sub mov mov (bad) pushq cmp adc or mov scas cmp (bad) mov xor (bad) or enterq or fcmove out (bad) minps std mov sbb or rex.WX pop in movabs mov imul mov orb (bad) outsl mov sbb cmpsb mov mov fwait lock mull mov icebp (bad) mov and cmp std jg and movslq (bad) sub adc cmp fidiv cwtl loop xchg mov stc lahf jge (bad) sub sub lock repnz mov fisubl (bad) cmpsl outsl hlt lret or int3 pop mov and std sub scas and fwait jg pop pop rolb and shl xchg adc (bad) (bad) rclb movabs rex.X mov push lods iret sub stos mov out lods pop mov lea (bad) repnz out (bad) mov push mov xchg pop cmp rex.WRX cli pop nop mov stos in push add out cs or rol icebp ror (bad) or fstp pop movabs scas jmp (bad) rex.WRB xchg adc imul leaveq outsl (bad) mov stos out fimul movabs orl mov (bad) (bad) cmp jne int3 fstps sbb fs jbe rcrq mov scas (bad) rex.X rex.WR scas xchg mov imul retq bt pop (bad) xor cmc (bad) outsb xor adc (bad) adc (bad) cld sub (bad) fcmovu or mov adc or rex.B mov rex.RX ficoml rex.X rex.WRXB sbb xchg mov adcb pop mov (bad) pushq data16 push shlb xor and cmp mov (bad) insb and add stos push and fwait sub or mov mov fnstcw (bad) rex.RX jmp stos adc adc (bad) (bad) stos mov adc (bad) div rex.XB and mov cmp out sub sbb push jle mov push loopne xchg repz (bad) (bad) imul mov xorb mov (bad) mov movabs outsb (bad) rex.WXB adc sbb sbb fstl out sbb shld xchg test insl rex.WRB xchg cmovne rex.WR xchg xor cmp cmpsl (bad) lea cs mov in sbb sahf jrcxz xchg popfq data16 in mov pushq mov rcll mov pop xchg or (bad) push sub rex.WRX mov in movsb imul (bad) pushq add pushq outsl push (bad) jns xchg rex mov mov xor in (bad) callq or jo mov (bad) out divl push sahf jne outsl sub or cmp imul jnp int3 sbb push rex.WB rex.WRX add or stc add lahf js lods gs push cld out (bad) jae nop ja rex.WR (bad) rex.R cmp rex.B cli popfq jge (bad) rex.WR jp (bad) rcr xlat cmp xchg add rex.WB sub adc enterq icebp sbb pop xchg mov movsb mov movl fdivs popfq mov push fwait mov fisubl or movsl mov cmp mov xchg in rex.WXB cmpsl clc (bad) mov xor push or insb (bad) push pop rcl je add movsb xchg adc jmpq rol roll jns mov adc mov shrl add imul sahf repz popfq rex.WX (bad) cmp xchg imul mov or xchg xor movabs popfq mov sahf mov jo mov mov mov retq popq sti fbstp mov mov out mov mov xchg sub (bad) out cmp xchg pushfq (bad) incb rex.R (bad) or stc push or int xchg mov jg stos je cmp cmp mov sub leaveq (bad) in and pop (bad) mov int cltd rex.W sahf or (bad) rolb sti mov sub (bad) decl rex.W rex.WRXB repz (bad) and xchg mov je (bad) fwait adc nop mov rex.RX (bad) rex.XB repnz (bad) push xchg int3 outsl lock jmp shll cmp jp out retq cmp mov out mov jbe xchg pop (bad) jno mov imul jge out xchg xchg mov mov pop sbb mov addr32 cmp pushq jle outsl xchg hlt pop or cmp lea jae adc es xor or rex.WRX jbe lock pop xchg mov stos je enterq pushfq imul adc jno scas cmpsl stos mov pop (bad) xchg jle fs jle (bad) sbb lods and (bad) cltd xchg xor (bad) (bad) cmpxchg8b (bad) (bad) pushfq jg cmp mov jmpq ja (bad) stos movslq ror mov mov adc pushq lods mov pushq (bad) mov (bad) rex.WR jnp (bad) (bad) mov out movslq mov pop out mov xchg add cli ja scas push lret fldenv and push sub xchg mov es push incb mov outsl xor rex.B xor nop insb gs movabs and out adc lret sbb adc lahf rex.R (bad) or sbb push (bad) (bad) or (bad) gs pop adc add (bad) jl loopne fnstsw xchg out sti lret stos sbb push test or rex push icebp (bad) adc xor (bad) ss enterq movsl push (bad) lods rorl mov js lret cmpsb mov adc rclb fistl mov rex.X mov movabs xor mov flds (bad) (bad) nop mov (bad) jbe sub repz rex.RX out (bad) mov xchg mov outsl and mov clc lea jrcxz out mov or lods mov (bad) cmc xor ljmp movsb out rcr adc (bad) shl jne and lahf enterq pop xor jae (bad) jmpq movabs retq (bad) repz setle rex.WB rex.RX outsb frstor mov outsl (bad) xchg (bad) pushq fnstsw nop ja push fsubr shrl fildl je std movsb scas sbb add xchg or pop or insl testb add mov push jle mul outsl or (bad) mov rex.WXB je pop sub or scas sub mov sub data16 (bad) pop sub out mov cmp push enterq rcll mov mov xor nop mov out jbe fdivrl jrcxz mov pushfq loop (bad) repnz xchg jbe data16 decl es repz push fstl ss (bad) repz adc cmpsl xchg cli mov xchg (bad) sahf mov nop sbb (bad) or cmp and jge jle popfq jmp shrl decb outsl cli pop rex.RX sbb rex.B test add (bad) sub movabs fisttpl fist mov rex.B fs (bad) jno rex.WX (bad) xchg movabs sbb rorl or mov mov cmp jmpq xlat cmc setne movsb ss (bad) mov subl push (bad) xchg movabs xchg mov cmp jge or fild cmpsb adc retq push cmpsl jno ss movabs in stos std xor test lret retq fld (bad) jmp and xchg fisttpll ficomp fs or in xchg (bad) and mov push cmpsl scas fdivrs jne imul outsl add mov sbb cmp lods cmpsl (bad) xchg (bad) push rex.XB (bad) (bad) std mov fbstp (bad) popfq xchg scas (bad) insl adc popfq jmp push enterq xlat in insl and mov pop cmp or fcmovnbe jg std adc rex.X rex movabs fxch (bad) and jnp pushq mov addps mov jl xor or fldl2e scas movsb pop andl jnp sbb xchg nop adc ss rex.X xor lock in hlt push push outsl jo sahf xor movslq (bad) retq rcrl (bad) psubsw movsb loopne sbbb jo xor in xor (bad) cltd cwtl out add (bad) fistp adc xchg cli pop push mov scas icebp outsl in shl ficom movslq stos rorl adc jns fildl imul ja xor mov stos (bad) xchg fwait stc mov rex.R outsb lret jns (bad) gs sbb cmp (bad) movabs shrl movabs adc push scas mov mov xchg rex retq sbb out xchg jp lcall in add (bad) cmp ds (bad) (bad) fildll and addr32 mov shrl (bad) iret cmp fild out clts scas (bad) (bad) movabs (bad) int3 mov (bad) lret xchg or add cmpsb mov and movabs (bad) lods (bad) lods (bad) cmp std test movb sbb (bad) test or add sub repz sub sub es mov jno xchg enterq mov rex.WB rcll pop xchg sbb hlt jrcxz (bad) jrcxz (bad) cmpsb (bad) pop jnp test mov fstpl mov sbb (bad) mull and xor mov je out sub mov pushfq xor (bad) fdivr out (bad) movabs std lods leaveq xchg or push or rex.XB xchg cmp sub and pop in (bad) jbe rex.WXB cmc (bad) vfmadd231ps adc ficoml jae mov cli xchg mov and sbb or or jmp rex.R jae sbb (bad) sub (bad) rex.WX ss pop movabs (bad) lfs (bad) rex.WRXB fmul loopne pop xchg (bad) cmc jae xchg mov (bad) xlat pushq outsb cli pop (bad) cmp fwait rex.RXB gs movsb mov (bad) sbb sub adc or hlt jrcxz out mov outsl fadd orl (bad) lods mov fbstp shrl sbb movsb rex.WRX scas lock lock cmp (bad) cmp movsb and out and mov (bad) jb xchg (bad) xor (bad) outsl pop adc adc test (bad) hlt jp and fstl pop (bad) fnstsw lret (bad) add sbbl (bad) mov test in mov fwait rex.WRXB cmpsl mov mov fdivs enterq jae repz push (bad) (bad) jb add or (bad) loop (bad) movabs and mov push mov fistpl adc cmp popq iret (bad) imul loopne xchg iret cli xchg pop mov cmp fcoms movabs nop sbb int test mov or movslq xchg (bad) lahf popfq popfq rex.WX push lock sti (bad) movb adc repz or sar (bad) scas push fidiv rex.WRXB xchg (bad) rex.WXB (bad) sub cmpb mov sub xchg (bad) icebp xchg lods mov adc rex.WB es mov sar (bad) imul mov xchg adc xor (bad) movabs jns (bad) sub shrb cmp stc frstor (bad) (bad) lret loop orl movabs rex.WXB or callq hlt xchg mov mov pop sub or and lea xlat jmpq fnstenv pushfq push and rex.WRB out xchg adc mov movsb rex.WB or rex.WRXB repz pushfq imul xchg rex.WRXB (bad) in mov mov jnp jae mov xchg xchg mov jg (bad) (bad) (bad) insb mov mov xor cmc insw mov (bad) sbb add clc repz lahf jae and (bad) xlat fist (bad) rex.RX in loopne (bad) (bad) ss loop jg push callq (bad) adc mov jno ja cwtl (bad) sub xchg adc retq mov lret addb icebp or mov sti (bad) pop (bad) rex.B mov shr fbstp (bad) outsl (bad) (bad) mov jne loope and xchg sub fimul leaveq enterq (bad) lret div cmp xchg add adc rex.RXB (bad) fisubl xlat (bad) adc addr32 (bad) xchg mov sbb mov push stos jg add fnop pop (bad) ds mov xlat mov (bad) jo xchg (bad) mov mov jmp scas and rex.X gs (bad) cmpl cmp cli sub enterq mov cmp leaveq rex.WRX repz or (bad) push mov (bad) (bad) lods push out fs int3 cltd mov push mov (bad) dec rex.X ja mov (bad) xchg (bad) lea xor push rex.WX adc movabs mov mov lods sti mov xchg push imul fbld sti sbb adcb xor cmp loope pop std out fidivrl in retq out jge or jnp mov xchg scas jmpq xor retq rolb mov addr32 outsl loop add pushfq and int3 cmpsb or icebp or and or movabs jno fisttpl adc sti cmp pushfq pushq test (bad) insl (bad) nop mov push mov xchg mov mov (bad) rex (bad) adc xchg movb je fwait (bad) imul jl xchg scas idivb push (bad) loop movsl loopne enterq rex.WRB add mov xor ja mov stc xchg vunpcklps mov mov repz es pushfq sahf cmp div jg test jl hlt mov mov push rex (bad) sti (bad) hlt mov mov lret mov clc cmpl clc or and pop (bad) (bad) adc xor out rex.WX stos (bad) xlat or rex.WRXB cmp mov (bad) mov rex.XB lock sbb and pushq sahf (bad) in stos pop (bad) mov flds mov icebp (bad) divb mov (bad) adc fs (bad) mov (bad) lret enterq imul mov mov rex.WR gs cmovo adc rex add bswap mov out (bad) xchg sti mov popfq fs adc (bad) int3 lahf (bad) imul pop (bad) (bad) xor leaveq outsl jmp sub rex.WRB (bad) and roll adc imul loop jns pxor jge pop mov std rex.WRB es test imul test lods imul (bad) sbb jbe test outsl jns retq xchg jg mov fucomp cmp sti fcmovnbe rex.WRB mov cmp jle jge (bad) cmpsl (bad) (bad) xor bswap mov rex.WRX (bad) xor add iret int fs (bad) cli mov out loope rex.W xor jno (bad) xcrypt-cbc cmpsl push lret (bad) xchg rorl push sbb mov test sti sub mov shll outsl pop cmp xor ss rex.WRX (bad) add ds imul mov adc mov sub cmp jg and mov es movabs mov lods loope sub sub outsl fwait cmpsb mov jo and mov imul cltd mov (bad) std cli xchg lods retq mov pop sub int3 (bad) mov cmc xor mov mov fidivr rex.WX xchg repz xor (bad) adc (bad) sub lea add rex sbb xor (bad) xlat lods and scas mov insl jle push xchg (bad) (bad) lea test pop xlat out xchg sahf lret rex.WXB mov lret stc mov popfq or outsb or (bad) xlat invd insl push (bad) (bad) cs movabs rex.XB cmp rex.RB stos iret cld rex.W pushfq rex.RXB jl (bad) out (bad) xlat (bad) push xchg sti mov push out rcl je pop push rex.X (bad) xchg (bad) sub mov rex.WRXB xchg movabs jle movabs stc xchg test jg mov xor jrcxz test movabs movups (bad) lods pop lock enterq cli sub (bad) loop and cmp jl loopne out (bad) (bad) mov (bad) xchg (bad) (bad) pop sbbq sbbl data16 jle (bad) mov roll fisttpl cli test mov rex.WB lock sub test xchg add mov push ja (bad) (bad) xlat mov mov xor addl pop mov (bad) or cld retq cmp jns ficoml sbb xlat mov sti mov neg mov outsl mov out rex.WB (bad) test lods jb movabs mov jnp push repz jnp xchg mov push cwtl sbb sahf notl jg jg outsl pushq (bad) push jg (bad) mov scas sub stc jg decb lret mov mov adc sarl sar mov (bad) (bad) jrcxz sbb adc es rex.WR lret pop (bad) adc popfq jno xchg jrcxz cwtl movabs pop or sub cmpsb fwait pop pop or xchg mov lods push xlat (bad) or (bad) and out adc pushq hlt out add mov mov mov out sub rex.X add rex.WB repz (bad) out and jno scas (bad) adc nop mov adc and lock mov pop (bad) mov movsb xor mov rex.RX cmp xchg (bad) adc outsl mov (bad) mov cmp vmovdqa cmpsl test mov add (bad) int3 gs (bad) xchg (bad) sub pop add (bad) callq mov mov popfq xchg sbb sub rex.WB sbb adc sbb and sub (bad) in or es rex.WRB and and (bad) movabs callq mov nop (bad) pop stos shlb rex.WRXB (bad) mov push or std lods popfq sbb (bad) adc mov je rex.WRX cmp xchg cmpsb (bad) out loop add (bad) std rex.WXB rex xor push cmc repnz outsl fiaddl or mov xlat xchg andl iret stc notb rex.WX int3 fwait outsl fsubrs fcomip rex.RXB (bad) mov (bad) rcll mov jl xchg ja vpsubb popfq rex.WRB clc (bad) gs sub jg (bad) mov test or test push jrcxz in sbbl mov in and cmpsb and adcl (bad) jno test sub add xchg xlat adc (bad) mov gs pop mov xchg mov (bad) out mov imulb and xchg rcl mov sbbl flds out movslq mov (bad) and xchg outsl add movsl (bad) cmp cwtl jge fwait xchg and rex.WR lock mov mov (bad) fnstsw shl cmp mov fstp jbe pop test mov adc int out nop rex.WRXB mul test iret (bad) (bad) sub retq movabs mov callq xchg add out sub and (bad) sbb loopne adc and xor adc sbb mull stc cli out test xchg (bad) outsl cwtl or (bad) sbb retq jnp imul (bad) movsl mov xchg mov in movabs jp cmp pushfq jrcxz xchg (bad) and loopne cmp rex.WXB or xchg sub nop and lret (bad) fidivrl lea sbb leaveq add pop xor mov and insb cmpsl stc lods cmp cltd (bad) pop adcl imul and add rex.W xchg (bad) jae xchg pop or (bad) (bad) ja mov mov jge rex.RXB ss jbe rex.WRB mov fisubl (bad) xor pop or decl pop fidivl lret (bad) mov fmull (bad) pop add test mov outsl cmp fwait adc fisubrl loope (bad) retq add sub (bad) outsb jmpq xor out cmp cmp fisttpl push repz rex.WRXB punpcklbw (bad) rclb mov mov rex.B xchg out sub add xor xor (bad) (bad) std rex.RB mov add xchg fnsave jbe leavew lea mov pop xchg outsl movabs rorl (bad) es mov pop leaveq movabs roll jno movslq mov mov std sar jae lock xchg (bad) or jp mov mov or jg fisttpl mov sbb iret out scas adc pop rex.WX (bad) adc xchg nop (bad) js mov imul loop rolb lea sahf stos pop and adc or (bad) rex.WX imul sub mov rex.RXB ss adc xlat mov hlt xor sub push cmpsl pop test andl (bad) xchg push mov sti and (bad) mov rex.WR xchg rex.RXB mov lods jge (bad) and sbb cltd or mov fimul rex.WRXB enterq vmovhps xor and pop jbe or andl push outsl lods jns int3 add cmp mov (bad) stos cmovle jae push xlat mov xchg cmp pop xchg cmpsb lock addr32 pushq int movabs jbe sar sbb lods fs hlt rex.WX mov jp (bad) jno rex.WX out rorb ss mov out adc pop mov xor cld rcrl (bad) test or jl (bad) js mov lret je (bad) out sti mov insl xchg je or adc rex.WRB xor cmp pop (bad) ja pop (bad) and ja scas or (bad) mov rex.X (bad) cmpsb fisttpll popfq jmpq in in jno and test or stos or (bad) cmp mov sbb xchg lahf mov rex.WX cltd jne int3 mov scas lea rex.WRX (bad) repnz (bad) (bad) jg lret test (bad) push (bad) imul pop sub rex.RXB cmp jp mov adc jae shrl ds jle push mov imul scas add (bad) je (bad) rclb test (bad) jno stos (bad) (bad) and outsb cmc xor fcmove rex.WRXB in rex.X mov adc (bad) mov mov scas lea (bad) xchg lret ss add cmc or jae mov or mov jmpq outsl rex.WB fldcw int3 and jge jne jo cli (bad) nop and xchg movsb rex.XB push rex.WB sub sbb push movabs mov mov cmp push push (bad) (bad) cmp lahf cmpsl rex.WRXB repz out fadds ds (bad) jg leaveq loope rex.W rex.W rex.WB push imul (bad) sbb insl add (bad) jle sbb mov mov test mov rex.R xchg fldl pop addr32 rex.XB cmc and add test fs mov test rex.WRX andl pop jmpq (bad) incb mov jae (bad) and (bad) mov mov scas jg lods (bad) int (bad) out (bad) mov or pop gs (bad) pop jg rex or (bad) sbb jrcxz and fwait xlat (bad) xchg (bad) mov cmp (bad) xchg push movslq cmpb nop fwait cmpsb push mov sbb mov push scas add enterq sbb rex.WR xchg add or movsb cli movabs (bad) pushq (bad) rex.WR rex.WRX add callq pushq or mov add sub cmpsb notb popfq scas xchg hlt (bad) lahf pop add rex.WRX or out sbb xchg adc rex.WRX jne (bad) enterq outsl callq je scas fstpt xor mov sub cmp add rex.RXB mov rex.RX mov (bad) push ficompl pop xchg push mov insl shrb es int shlb pushfq sahf sub (bad) (bad) push sbb mov jno xchg adc repnz pop in sahf adc not sahf push (bad) rex.WR mov push mov insl cmpsb cmpsb shrb out idivl xchg mov mov idivb xchg outsl test add jb js mov or movabs (bad) mov mov rorl psubb rex.WX outsl pop sbb (bad) mov jno not xchg retq outsb adcl mov pushfq sbb xor mov fisttpl es mov rex.XB rex.WRB (bad) mov movabs (bad) jno out rex.RX pushfq xchg (bad) sarl jle (bad) sahf xchg scas fmull sti lsl shlb pop cmpsb mov (bad) stos pushq movabs (bad) int cmp (bad) (bad) jrcxz subb hlt rex.R jne rex sbb jae ror js (bad) andl in rex.WXB xchg lret shr (bad) pop xlat ud1 callq mov (bad) ss (bad) jae xchg (bad) mov push mov int3 (bad) pop lahf mov mov xchg jle jae mov jl jnp sbb mulb mov sbb xchg and (bad) fiadd frstor repz mov (bad) repz pushq mov and mov js addr32 out movslq pop xchg in cmp (bad) cwtl outsl jbe sarl xor (bad) or sub adc in (bad) cli (bad) movl mov in and adc (bad) (bad) imul fisub jg jmp fwait sbb (bad) mov push mov sbb (bad) adc mov cmpsl mov rex mov cmp (bad) insb mov std cmc out mov movabs (bad) cmpsl outsl mov adc fmull add xor or scas sub (bad) add lea (bad) xor mov faddp jmp int add je leaveq or movsb or or xor outsl cmp mul rex.WRXB rex.RXB mov rex.RXB cmp ja xchg (bad) pushfq xlat jl int3 (bad) int stos mov subl adc cmp cld jmpq sub rex.WR xchg repz mov leaveq outsl (bad) test xchg cli push mov (bad) out (bad) mov imul jnp and outsl rex.WX jmpq cmp cmpsl retq out int (bad) insb cmp mov rcr mov jnp mov std mov (bad) fcomps repnz (bad) add mov (bad) sbb rex.X lods jne xlat sub (bad) (bad) rex.WX xchg test shrl pop rcrl fs adc outsb pop cmp (bad) jo popfq (bad) (bad) outsl pmuludq test and lea sbb rcr cltd nop jmp mov add push lret xchg retq nop cmc sbb xchg mov movabs movabs sarl mov cmpsl mov cmpsb stc sub mov (bad) pushq fcomps test cmpsl adc jo callq xor ss rex.W (bad) xchg mov pushfq xor loop or (bad) setge nop mov cmp outsl ja mov (bad) sub rex.RX push rex.RB adc int3 outsl and in adc pop mov mov callq mov pop mov cmpsb (bad) pop (bad) mov mov mov (bad) cli ss mov (bad) and rcll jmpq (bad) hlt (bad) in cmp (bad) cmpsb xchg outsl push (bad) mov sahf adc fcomps jge mov cs jo (bad) (bad) sub subl je mov fucomip xchg xor jbe adc (bad) test cmp mov mov mov repz mov pop mov rex.WXB stc and rex.RXB rclb lea sarb lret fistl xchg je mov xor loopne scas pushq xor rex.RXB mulb sbb or sbb (bad) retq rcrl cmovbe ficoml xchg movabs cmp (bad) adc xor add sbb push pop incb iret pushq int3 movslq mov or xchg cltd lret outsl fwait jrcxz xchg scas mov leaveq lahf retq lea mov push adc test outsl ficompl cltd mov (bad) rcll shll mov (bad) adc mov fildl xchg adc cmpsb std pop lods jae sub rex.XB xor scas mov mov (bad) xchg mov (bad) jmp (bad) sbb or stc sbb imul mov push and cwtl pushq xor int (bad) test rex.RX mov mov push test insb in imul (bad) rex cmp pushq mov rex.R insb jmp pcmpeqb xchg (bad) cli cli sahf nop and sbb pop mov sub loope clc xchg jbe (bad) andl in mov addl mov lods rex.R out je sbb rorb cmpsl jge mov or mov and (bad) mov fisubrl add rex.R (bad) xchg outsl hlt (bad) mov insl je and jns (bad) rex.XB or retq outsl cs outsl sbb xchg mov leaveq cwtl je jae iret jg popfq (bad) imul sbb adc or lret mov (bad) divl (bad) jne cmp sbb setbe and decl xchg movsl iret insl sbb xor mov (bad) (bad) sar cld xchg mov xchg xchg jmpq mov test xchg hlt mov mov (bad) rex.XB movabs rex.RX cltd outsl jmp (bad) mov sub (bad) sbb mov mov std ficoml nop pop je sub cwtl repnz lods rex.R adc push std jno (bad) fist movabs jne cs mov xor movsl shlb mov test stos enterq add jle (bad) movabs (bad) (bad) mov (bad) lods repnz (bad) and imull mov (bad) (bad) mov sahf popfq cmpsl out xchg push loope pop fisttp pop mov (bad) fnop mov xchg jae (bad) push mov cld mov loope xor mov sbb gs (bad) sub cmp outsl data16 mov in (bad) mov sub adc jo lret adc out cmp (bad) sbb out iret movabs jg cmp movsl mov lea stc mov add adc repnz (bad) (bad) rex.WRXB rex.WRX in pop cmpsb fist movabs (bad) iret pop ja mov mov fmuls xchg (bad) mov pushq mov clc rorl (bad) sti adc fbstp (bad) int3 (bad) xlat jg rex.WXB fidivr xchg mov xchg outsb (bad) lock pop xor (bad) sahf in pop in rclb hlt (bad) test pop cmp (bad) jg cmp setno pslld ficoml push and mov mov stos (bad) (bad) movslq mov xchg cmp mov mov (bad) or (bad) xor push pop xchg rcr pushq rex.WRXB (bad) mov cmp (bad) movslq addl es outsl scas adc adc ds xor xchg jmp adc test or jbe movabs and cmpsl lret repnz rex.WX sti (bad) and icebp jl xchg (bad) repnz (bad) out retq repz push or xlat (bad) (bad) cli rdmsr std rcrl cmp (bad) jno ss (bad) sub or in rex.WRXB (bad) retq fucom lahf (bad) enterq rex.WXB (bad) movslq retq sbb sti cltd xchg pop jge (bad) fisubrl xchg adc fucom xchg mov vzeroall jae sub (bad) test (bad) divl fnsave test (bad) rex.WRB movabs lea (bad) mov xor cmp xchg and rex.W adc lret mov nop cmp mov (bad) adc mov (bad) mov insl xchg cltd fidivrl imul mov rclb (bad) pop retq adc (bad) (bad) out sbb add sub or sub outsb movabs mov rex.WRX xchg adc stc mov xchg (bad) and (bad) test retq sbb int3 mov cld xchg (bad) push jb outsb mov (bad) (bad) rex.WRXB pushfq rorl cld sti sahf xchg jne rex.X fs fldenv mov push xchg (bad) jge rex.WRB (bad) mov fstpl imul test rex lods lods iret push push fwait outsl add mov xchg rex.WB pop cmp jmp jbe sbb sbb (bad) jns lods enterq pop mov lods je setl xchg xchg out rolb sbbl mov mov xchg pop movabs rex.WRXB test jno (bad) leaveq sbb add pop xchg (bad) test add movsl push in or xor jl mov xchg (bad) sbb adc (bad) sbb cmp cli (bad) (bad) fiaddl shll ss mov enterq jmp fs popfq fwait add cmpsl lock jne adc mov rex.WRXB callq (bad) rex.RXB jge mov fdivs decb je shll push mov retq add mulb cmp (bad) mov jmp iret movabs rcrl (bad) mov clc xchg cmp rex.XB jmp lret mov pop fisttpll and nopl sti or mov roll mov sbb mov fstp (bad) stc (bad) mov adc cld sbb rex.WX loop mov mov fiaddl cli mov rcrl popfq (bad) jle (bad) stc sbb rex.WRXB xor xchg jnp out rex.RXB jae (bad) mov mov mov leavew rex.WRXB out mov stos mov retq cwtl es pushq pop pop (bad) mov sbb popfq jrcxz lahf sub out cmp xchg cmpsb (bad) (bad) mov movabs sbb (bad) (bad) mov (bad) scas out in sbb jbe test jae in (bad) (bad) pmullw sbb lahf test jno ds imul jrcxz mov scas out mov imul xor sbb xchg mov push (bad) movabs sti pop movsl lret fldt addr32 rclb (bad) scas mov mov pop jns (bad) push ror (bad) retq adc sti add icebp (bad) rex jl addr32 fisubr retq cmp jl adc mov (bad) cmp repnz and cmpsl out (bad) repz xchg jge mov mov stos or xchg jo insb rex.RX mov gs stos mov lods rex.WB xchg ja rex.B pushq rcll mov or subb test sub mov clc cs (bad) rex.RX movsb imul outsb (bad) adc mov ror in jne (bad) loopne sbb icebp pop jmp rex.RXB jrcxz retq std retq xchg mov rex.W xchg pop (bad) xlat mov (bad) test jbe cltd pop jmp push xchg scas adc jnp mov clc push (bad) pop xchg shl or add (bad) lock rex rex.R fmulp jo pop fwait in sbb mov loope insl sub outsl loop fidiv mov cmpsl push mov lods addr32 (bad) outsl sbb and or sub mov ja cmp or lcall or scas or outsl mov (bad) push fidivl cmp fst rex.B (bad) shll pop sbb (bad) xchg xchg jae ja add xchg rex je sahf fucomp mov (bad) pop rcrb cmp pop idiv mov retq push mov mov sub test scas rex.WB (bad) leaveq jbe and iret mov lahf callq rorl shlb (bad) fisubrl (bad) lea andl pushq mov fiaddl or (bad) xorl jno xlat or add adc xor (bad) and jne pop nop cmp and mov js jrcxz nop push (bad) mov jl and sti adc rex.R rex.XB and sub xchg sbb sti jge (bad) ds (bad) nop push pop (bad) mov adc fisttpl (bad) xchg andl adc sti cmc mov lods jge sub and mov mov (bad) sbb push xor sub decb (bad) outsl roll fadd adc callq test xchg movsb rex.XB pushq cwtl in sub (bad) jg rex.WXB xchg sahf rex.WR xchg rex.WRB mov pushq cs mov fimul sarl int (bad) jno rex.WRXB rex.WRXB notb fstpt xchg cmp or movabs jae lock cmp (bad) xchg jo mov (bad) pop outsb jp lret or movsb adc mov movabs (bad) pop and lahf (bad) lahf cmpl push je and lahf sbb test and (bad) cmpl int3 jrcxz cmpsl pop rex.XB fwait xchg ss (bad) xchg (bad) repz fnstsw insb add pop loopne,pt jmp enterq (bad) sub jrcxz mov clc sub outsl pop jnp pop gs xchg and (bad) xchg sbb popfq (bad) push mov fiadd (bad) xchg mov andl jns and rex.WB outsl mov int jmp rex.RXB es adc (bad) repz add outsl xchg cmp pushq sahf add stos xchg pop mov jbe outsl movabs pop (bad) sarb jg cmp push (bad) repz mov (bad) xchg movsl pushq adc xchg mov fcoml lahf xlat mov mov lret jge lock (bad) mov loop movsl test sub mov mov xchg outsb and pop data16 cld cld je stc push nop loope mov (bad) (bad) mov (bad) adc (bad) adc pushq sub jle xor (bad) mov mov jns jnp adc nop addl shrb fiaddl pop xchg nop pop imul jp test fbld sbbb rex.RXB mov cmp (bad) sub int3 pop cmp jge (bad) scas and jp mov adc xor test adc add cmpsl stc (bad) stos mov rex.WXB pop in (bad) fwait orl sbb test xchg fdivs sub sub out popfq sbb sar rex.X decl mov (bad) movb rolb add clc xor lods cmp pushq cli (bad) (bad) mov out data16 (bad) push sub cmpsl (bad) shr movsl pop movsl es mov (bad) (bad) (bad) mov retq mov mov push test (bad) mov sub and mov jmp cmpsl lahf cmp (bad) mov (bad) (bad) rex.WRXB data16 pushq (bad) or insl (bad) stos (bad) add jmpq lea (bad) je xorl xor mov movabs mov xchg push lea pop rcrl pushfq adc mov pop int jge push push (bad) adc mov xchg nop (bad) repz ja enterq imull pushq xchg and push outsl rex.RX jb,pt sbb loop mov movabs pop jne out imul mov mov sub xor (bad) push xor scas lods rex.R rex.WRX jg fldenv xlat xchg lods rcr mov cmp xlat add (bad) je scas mov xchg pushq leaveq lods test mov movabs adc je xchg adc pop rex.WX rex.WR (bad) or fwait adc rex.XB gs leaveq outsl pushq loope sbb xchg retq xchg xchg outsl test lret movabs gs lahf mov rex.WX insb cmp (bad) rex.WRXB rex.WXB mov cmp movabs imul mov sti outsl repz rex.WB (bad) fisttpll subl sub cmpsl lods lahf jrcxz adc vminps enterq popfq adc push scas add (bad) popfq js fnstsw js rcrb cmp or (bad) xchg mov lods xchg fcmovbe jb (bad) xchg mov data16 sub int3 outsl xchg jo push adc and out imul repz shrl (bad) movabs popfq mov (bad) mov std add and sbb out sub mov out vsubps sub (bad) (bad) (bad) mov scas xchg (bad) sarb test scas or pop xlat xchg mov sahf mov adc pop std and (bad) cltd xor jmpq (bad) int mov and repz int fucomi add movslq fs mov xchg enterq lea rex.R xor rex.X mov int rex.WR (bad) movsb mov je test test stos adcl incl lea (bad) rex.WRX out mov jae and je xchg adc sbb adcb jbe loope (bad) mov retq (bad) or sub mov mov imul xchg out (bad) rex.WXB mov in jns push fimul out xor (bad) rex xor data16 pushfq stos shll (bad) scas jge sbb push imul rcll fimul xor ja pcmpgtw adc (bad) (bad) sbb movabs lods out loope xlat push outsl movsb add pop add xor mov cmpsb movabs rex rex.R insl add scas (bad) jbe mov pop pushfq mov scas rorb decb mov mov not sub testl movabs push xchg adc cli minps (bad) jne rex.WRX cmc fwait jg ficompl loop ss lret cmp outsb cmp (bad) add sarb (bad) stos rex.WR mov (bad) movsb sahf mov xor in fneni(8087 or fsubrs popfq int3 lock movabs add mov add pushfq sbb and test (bad) movabs outsl sarb sub mov scas lods (bad) xchg rex.WRX (bad) (bad) push sbb jno imul xchg pop fmull retq push mov xchg push pop shll or jl lret outsb sbb (bad) cs movsb (bad) (bad) or push outsb int xchg sti nop sub push leaveq pop mov retq (bad) loope xchg ja sbbl xchg (bad) outsl decl lea cmp (bad) scas rex.WRXB and std lea rcrl jl xchg out add (bad) add movabs (bad) lods loopne sbb push callq mov (bad) (bad) pushfq (bad) adc xchg popfq stc int3 outsl mov xchg add adcb cmpsb scas and cmpsl lret jmp rex.XB (bad) pushfq (bad) (bad) lods push jg xchg (bad) (bad) pop cld outsl xchg pushfq mov leaveq xchg xchg repz outsl (bad) pushfq mov (bad) test add rex.WB ficomp iret cmpsl (bad) outsl fmull sbb add movl mov sbb retq mov or sbbl mov xchg sbb (bad) cwtl jne and and adc push (bad) (bad) data16 movslq outsl mov rex.WRXB out xlat movabs sub in in adc (bad) cmp imul pushq sbb xchg xor cmp stos sub jrcxz negb (bad) fnsave fcompl movl rex.RXB or (bad) jae sbb adc mov rex.R rex.WX retq fbstp cld loop rex.XB rex.X (bad) xor xor mov out (bad) (bad) pushfq out rcll mov add mov mov jbe pop (bad) (bad) imul sysenter je cltd (bad) (bad) fiadd std sti int3 mov adc push cmpsl xor and sahf (bad) push (bad) pushq loop rex.RXB popfq xor mov int3 retq xchg scas outsl rex.W rex.W repnz lea (bad) or popfq pop retq rex.WRB (bad) hlt out or test xor and sub xor xchg or outsl adc xor or movabs outsl jo (bad) mov rex.RX rcll mov rex.XB sbb cld jl lret (bad) xchg imul fldenv cmpsl ja pop (bad) jmp mov and xor or lret popfq mov (bad) adc mov lock pop sub fwait (bad) stc rex.WRXB loope jbe rorb lods movsb push std sub int rex.WB rex.RB out pop nop adc mov adc sahf test outsl cmp xchg (bad) int rcll fsts push push (bad) rorl mov (bad) btr in (bad) scas (bad) (bad) xchg (bad) sub sub jl add mov jp rex.WB rex.WRXB pop sub cmp sub (bad) xor cmpsl fisubrl (bad) rex.RX pop retq mov (bad) adc std xchg mov cltd mov xchg sub xchg mov lea addr32 (bad) push scas data16 mov xchg jo imul pushfq (bad) mov fmull jg retq sub mov (bad) pop sti imul (bad) pop rex.WB (bad) xor push sbb jb (bad) sub mov add mov mov sub rex.R lods (bad) rex.XB retq sbb test mov pushq jae xchg push add fstps rcrb jno retq retq jb fisubrl mov rex.W data16 or xchg sahf rorl repnz cld scas xchg (bad) jbe loope and (bad) loope and lods lods lret push outsl cmpsl (bad) push xchg sarb cmp and pushq (bad) add js movsb push (bad) out (bad) int xor imull sbb lahf repnz test and fwait jg sub mov sub xchg mov and cwtl (bad) imul fisubl mov mov jae (bad) fwait mov mov rex.B mov fimul (bad) pushfq fsubrl out push ss rex.R iret xchg or adc pop mov (bad) push rex lret xchg rex.RXB pop push rcrb std movsb xor jno lods sbb (bad) (bad) sub test (bad) jno jl and pop pop imul adc mov sbbl push popfq frstor popfq je (bad) (bad) rcll mov icebp lea cmp pushq cmpsb js adc jmp cmp leaveq or fstpl xchg vorpd pop pushq repz test loop (bad) sub lods or (bad) mov add and (bad) ja int (bad) in mov fsubrl sbb movsb (bad) rex.WR (bad) mov sbb (bad) addr32 pop lea outsb shrb jle cwtl lahf (bad) (bad) ss fcompl adc or shr test rex.RXB xchg outsb ja out movabs (bad) cmp mov (bad) out outsb sti cmc xchg mov mov xchg mov movslq iret cld loope xchg xchg fwait (bad) rcrl sbb nop fsubrs retq pop cli cltd lea push xchg (bad) (bad) in repz xchg cmp pushq sbb test rex.RX rex.WRXB jo std sahf je mov mov (bad) sub add rex.RX xlat callq (bad) mov adc (bad) and movabs sbb jge,pn fmull retq movabs (bad) add sub (bad) pop and (bad) stc roll (bad) movsb sbb fadds (bad) or adc (bad) rex.WRXB fstl add je add push rex.WRXB cmp ficoml or (bad) (bad) add (bad) rex.W cmc pop rex.WX ss loopne enterq adc popfq (bad) outsl or movabs movabs or mov lret rex.X pavgb jmp or fcomps push (bad) stos (bad) mov jp (bad) gs pop (bad) pop test rex.WR xor mov mov fnstsw pop mov fnstcw std lods jbe xchg enterq rex.WXB hlt (bad) sub outsl sbb sahf addl sub cmp sbb (bad) movabs adc out (bad) pushq (bad) loope sbb fisttpll lods stc fwait in enterq clc xchg loop lods adc (bad) fidivrl retq notl fistp jl add cmc push std xchg mov xchg mov pushfq cmp shrl int3 xchg nop ficoml sahf push test rex.WRXB fsubl popfq mov out (bad) or fisttp or mov setg or loopne and push rex.WRX push outsl cmpsb (bad) add mov cmp (bad) (bad) cmpsl rex.WX xchg xchg fs jne mov mov cmp xchg mov jl pop jl test rex.X pop loop (bad) leaveq sub (bad) pushq rex.RXB add sub push rex.WB mov mov jrcxz mov or xchg sub movabs imul insb cmp mov cmp je or rex.RB repz or adc lar (bad) lahf fs (bad) vmovntps loop rex.B movslq test mov loop je loope cmpsl (bad) (bad) jbe (bad) xor jns loope movabs fwait pop imul sbb (bad) and (bad) rex.RX loope test xlat adc pavgw je cmp xor mov shlb mov int3 and leaveq (bad) jrcxz fisubrl rex.WB sbb outsb add rex.WRXB in pop xlat in (bad) sub addr32 in jae callq pop xchg xchg mov xchg (bad) xor shl int (bad) (bad) cs sbb xchg or lods cmpsl ficompl scas loope loope cmp xchg fild rclb mov test rex.WRXB je (bad) mov (bad) loopne not fldt pop and (bad) mov (bad) adcb and xor and or xchg cmp mov mov jns fs movabs (bad) xchg mov rex.RX addr32 and movabs movb (bad) out xchg loopne mov ficomp adc mov adc (bad) xor (bad) adc mov (bad) scas pop repz adc (bad) mov lret adcb add es pop adc loope push pushq loope and xchg (bad) mov (bad) outsl shrl adc movsb xor bswap mov pop pushq (bad) cmpsl pop xor and mov sbb rex loope mov pop test (bad) and sbb popfq sbb (bad) outsb cmp std jbe,pn add popfq mov xchg fildll (bad) in jle (bad) in sahf xchg cld xchg sbb (bad) pushfq (bad) pop xchg jrcxz pushq fisubr repz xchg (bad) cwtl clc cmp mov (bad) and and and pop (bad) cmpsl (bad) shr hlt mov outsl cmp jmpq callq mov pop retq retq rex.XB (bad) sti insl xchg jge add xchg jle imul idiv (bad) (bad) loopne (bad) sahf gs xlat xchg fmuls loop cmpsl (bad) push seto xchg je mov adc pop ficoml and and xchg pop pop and int sbb lods pop (bad) mov push (bad) (bad) xchg sbb decb sub (bad) xor (bad) popfq pop movsb push sti rex.WXB mov movabs mov mov in sub insl xchg jne test mov and lahf rex (bad) xchg pushq out (bad) mov outsl push int3 xchg or push pop lret iret push mov outsl es pushfq in lods imul gs pop mov jg lret (bad) sahf (bad) mov outsl in mov fwait loopne sahf pop movsb lods sti (bad) (bad) sbb enterq out and rcl xor (bad) jle add rclb xor pop ficom mov jl mov jae idivb fidivl xlat sti cli data16 insl (bad) popfq or (bad) cmc rex.WRXB pushq mov fbstp xchg movabs xchg mov push or xchg sbb (bad) (bad) outsl and rex.X (bad) lea adc sbbb leaveq adc (bad) insl (bad) jns and insb callq pop push and adc or out (bad) xor jbe sbb sbb jnp (bad) scas xchg in jg xchg mov rorb sbb ficom sahf ljmp scas cld outsl (bad) hlt ja insl rex.RXB xor sahf pop push sub mov lahf (bad) rex.WB (bad) rex data16 roll xchg and jp (bad) mov mull movabs (bad) (bad) lahf je (bad) cwtl rclb shll retq (bad) lret enterq push jnp lahf (bad) xchg (bad) shrb movslq rex.XB xchg icebp (bad) rex.WX adc cmc jl push sahf mov pop in (bad) mov sub sub icebp (bad) rorl movabs lea push loop test pop pushq pop mov leaveq xchg ficompl jae imul (bad) mov xchg and lret rex.RB xor cmp push rcr popfq movsb jnp lea fimul and iret adc mov js (bad) cmc cmp adc (bad) push (bad) xor int3 (bad) cmp mov mov (bad) (bad) mov xchg pushfq ja pop sub movabs fidivr je xor (bad) mov cs xchg xchg ja mov (bad) mov outsb mov pop rcrb rex.WRXB (bad) xorb divb and xor mov pushq push mov xchg jno ficoml rex.WXB fiaddl (bad) cmc (bad) stos mov pop adc (bad) loope (bad) fstl (bad) lret cmp stc pop rex.WRB (bad) mov cmp sbb (bad) testb xor fldenv mov fldcw sbb pop push sub xchg (bad) xchg jrcxz add (bad) (bad) push mov (bad) push lock cmp fcmovnb rex.X mov add int sub loop movabs mov mov xchg int3 cmp loope (bad) xchg fstl or mov (bad) mov popq (bad) ffreep imul add mov (bad) repz ffreep fistpl lods cld mov in (bad) (bad) outsl iret mov jl mov cmpl imul fildll in cmpsb lea cmp and mov pop (bad) xchg cmp fsts rex.RX lods xchg rex.W out jne rex.R mov stos push pop and stos cmpsl adc (bad) rex.WB idivl loopne adc cltd (bad) (bad) popfq out lea (bad) cmp jge rex.WR rex.WRX adc adc (bad) xchg mov jg outsl sbb (bad) (bad) rorb (bad) movabs (bad) movabs rex.WR (bad) in jo (bad) je (bad) and mov in imul rex.RX pop ja repz cmp mov stos imul sbb hlt (bad) adc repz mov sbb jnp repz std mov vmovhpd addl push fs mov sbb and (bad) iret cmp (bad) xchg jle jmp add (bad) jno scas xchg pushfq (bad) movsb rex add sbb sarl lods int stc jnp adc test adc or (bad) (bad) xor and rex.X outsl loop xchg jmp (bad) leaveq movabs rex.RXB xlat xchg (bad) fucomip (bad) sbb (bad) leaveq outsl in (bad) sbbl (bad) mov iret cmp push (bad) mov callq (bad) mov adc int3 outsl iret adc jmpq adc in rex.RX mov lahf (bad) test mov and and rex.RX cmp mov iret cmc addr32 fimul insl mov out addr32 mull rex.W lods or (bad) (bad) outsl fwait test mov (bad) stc outsb xor sbb or (bad) (bad) (bad) xchg and ss jg rorl mov (bad) (bad) (bad) jae (bad) mov (bad) xchg (bad) lock fsubl mov (bad) cmp test js and pop mov js or retq mov mov or out (bad) out movabs (bad) mov rex.B or pop rex.W push or stos sbb sbb xchg iret fwait adc add test cmpsl pop fnstcw jo mov lods movabs add xor add shlb mov rsqrtps fbld (bad) jmp (bad) gs (bad) repnz in fdivrs insb loope test sbb lods mov iret cmp adc mov outsl (bad) cmp int3 lea xchg lea mov (bad) jp movl leaveq rex.RXB (bad) (bad) fstpl and andb je (bad) ds jne xchg jl pushfq rcr rcll je std repz xchg (bad) or rex.WR clc push addl scas jne or stos (bad) rex.WRB rex.WB mov rcrb out mov rex.WRX pop add (bad) xchg (bad) (bad) movabs jl rex.RXB xchg ficomp jmp jle push ja rex.XB push (bad) callq (bad) testb nop rcrl (bad) jnp rex.WRX mov out jmp mov jge loop pop (bad) scas (bad) rex.WRB lock rex.RXB pop gs insl jge xor mov int (bad) mov rex.RX (bad) shrl loope add (bad) nop scas xchg xor push jrcxz (bad) rex.R lods rex.XB cmp cmpl in pop (bad) leaveq lret fcoml jmp pushq flds (bad) xchg or sub (bad) pop or rcrl movsb cmc ja jae out rex.WRX cmp stc (bad) (bad) mov cwtl rcll mov push (bad) lret (bad) xchg jmp or xchg popfq cltd xchg (bad) (bad) stos movslq pushfq and adc sbb rex.WRXB test pushfq mov push add (bad) sub mov (bad) jle push int xchg sbb cltd jmp pushfq stc sarl scas sbb subb jne gs (bad) mov push xor jge and push fcoml jae iret jbe rex.W or ror pop callq scas test (bad) mov mov (bad) (bad) mov mov xchg mov outsb cmp int xchg (bad) jnp gs jrcxz adc js jrcxz rex mov sahf xchg insl mov (bad) jmp (bad) popfq adc pop xchg std push xchg fsts or sbb add frstor xlat jnp sbb sahf xor (bad) cld out adc jae test push xchg iret repz rex.WRXB mov ficompl retq (bad) cltd push xlat jnp (bad) jns ja cwtl (bad) imull rcll or mov xlat retq mov mov pop rex.WRX mov rex.WXB es movsl mulb (bad) (bad) mov fcomps (bad) movabs rex.RXB repz jno rex.RB cmpsb push imul mov mov push test (bad) popfq add adc (bad) (bad) mov jno mov and fsubp data16 and fadd push in icebp (bad) mov repnz in out cltd add or (bad) mov and andl andl movabs mov movabs push ds adc mov mov or cmp fdivrs mov or lret lahf sub (bad) (bad) movsl fsubr (bad) cwtl data16 out (bad) outsb test rex.WRX in scas movabs pushq (bad) sbb xchg adc andl xchg mov xchg (bad) (bad) jne lods (bad) rex.X mov mov popfq mov jmp sbb push jle faddl sbb addr32 xchg (bad) gs jmpq hlt pushfq pushfq pop movsb mov (bad) sub xchg pushfq cmpsl movslq mov fisttp cwtl cmpsl jg test mov pushq jg xchg xlat (bad) (bad) pop sbb adc fldl mov fnstsw (bad) (bad) popfq or (bad) cmp (bad) mov rcl (bad) nop rcrb jbe frstor xchg movabs movabs jmp mov (bad) cli adc sahf mov fistpll mov (bad) (bad) xlat mov jge xlat jae xlat (bad) jns mov fwait pushfq movabs xor (bad) and sbb mov rolb (bad) fwait in cmp cmpsl (bad) movabs rol mov test pop xchg lea adc and movsb lgs fisubrl lods shl or jae push or rex.WRXB movsb pop rex.WRXB addr32 data16 or insb movabs pop movabs mull xchg mov xlat xchg (bad) in sbb xor outsl hlt jae (bad) cmpsl pop scas outsl enterq pop imul mov mov (bad) in rex.WB out rex.RXB mov retq mov xor rex.WX and insb (bad) (bad) pop pop lret xor (bad) (bad) xchg std movabs and scas xlat ja pop popfq movntps mov (bad) pop rorl sahf sti xchg rex.WRX (bad) mov test mov mov push jle (bad) sub pop rcll jmp addw add lret or mov push sahf (bad) rex.WX jnp decl add add xlat sub out addl mov sub nop popfq jbe and in addr32 push rex.WB out mov (bad) (bad) mov adc mov scas mov addl and (bad) ja leaveq out or mov lods xchg jg jns mov orl mov mov and sbb mov xchg jno popfq xchg mov fisubl movsb cmp jp lret rex.WB cli ja rex.WRX movsl sub callq pushq cmc sub pop (bad) mov (bad) rex.RX xchg cltd int rex.WRX ja leaveq jae pushq xchg sub pop (bad) xchg (bad) (bad) outsl je iret mov test enterq outsl mov xchg test stos mov faddp add rex.WR xchg push pop setne rex.W rex.XB xchg retq in sti sub and scas pop xchg rcr insl push cmpsl and xor (bad) movabs and xrelease mov int3 (bad) xchg sbb mov rex.RXB gs sahf jbe sub cmp (bad) (bad) jmp mov xor sub fmulp scas (bad) add cmpsl (bad) xlat xchg pushfq rex.WRXB pop jb rcll or (bad) es and fcomps movabs (bad) mov lods (bad) and (bad) pop xchg xchg mov lea movabs int3 outsl pushfq cmc sti rex.WRXB mov sub adc popfq jnp fsts addr32 xchg push or mov sti rex cmpsb mov mov rex.WRB xchg cmp or mov pushq (bad) popfq mov ja (bad) (bad) outsb fldenv or (bad) rex.WRXB (bad) push shll rex.RXB repz pop push fsubs out add fisttpll icebp pop fisubrl lock (bad) xchg fsubl (bad) loope test (bad) mov jg fimul out jrcxz cmpl mov andb mov (bad) lea data16 jb sub or mov jae pop or cmp xchg loop leaveq sub test fwait xchg clc idiv (bad) xchg movsb rex.WRX (bad) xchg xchg (bad) xor (bad) movabs pminub (bad) movabs ficompl test movslq rex.RXB sbb rex.WR callq (bad) xchg sbb imul mov fs pushfq jmp fisub mov fcoms rex.WRB popfq mov rex.WR xchg (bad) not mov rex.WRB xor xor xchg (bad) fidivrl and and sbb (bad) mov in (bad) (bad) lret and rex.WRX mov pop (bad) popfq rex.WR pop lea cmp mov outsl xchg pop and mov ds rex.WRX scas pop xor (bad) retq ja jne cmc jnp xchg xchg in xor mov xchg add add or xor insl mov outsl hlt cmp fnsave movabs and fwait pushq (bad) in movslq (bad) rex.WRXB jne outsl xchg pop mov fbstp xor xchg jnp (bad) rex.W jo (bad) xchg divl stos mov xor rex.WXB pop test sti lods and loope rcrb rex.RXB add (bad) mov fnop mov and cli or xor (bad) xchg (bad) pop mov jb cmp xlat (bad) sti jbe (bad) push rex.WXB rex.WR fwait outsb insb movabs (bad) jge retq (bad) (bad) (bad) cmp push mov xchg adc xchg xchg cwtl mov push and and (bad) nop sub popfq (bad) xchg xchg rolb cli xor xor mov (bad) mov (bad) jrcxz iret xlat rcll or rex mov xlat sahf mov pushfq rex.WRXB pop lea pushq mov jmpq movsl mov push loopne mov retq retq (bad) xchg adc push mov data16 jmpq test xchg jg movabs int3 mov add jnp mov mov movsl xchg lock mov jae movslq cmp mov xchg outsl jle jne mov int3 mov div (bad) (bad) ja sub xchg add retq jbe (bad) imul add int3 addr32 adc mov xchg push loopne cld sar (bad) (bad) mov (bad) pop sbb (bad) add mov test push push stos xlat rex.WRXB je mov (bad) orl and mov (bad) (bad) fwait popq mov pop (bad) insb xor int3 xchg push mov pushfq adc pop mov movabs jo addr32 cwtl adc decl pushq cmc iret mov (bad) rex.WR xchg lahf jmp jrcxz fisubl (bad) cmp sbb pop shll cmpsl sub mov rex.WX pop pushfq rex.WR scas xchg jge rex.XB (bad) add mov mov xor lock xchg xchg (bad) cmpsl xchg rex.WX int mov out sbb outsl pop jbe js mov and sbb (bad) (bad) (bad) movabs adc and xor (bad) or fcmovnbe sub and adc cmp scas rex.RX or mov stc add (bad) (bad) movabs pop push (bad) and and pand (bad) xor push rex.WB rex.RB rex.XB and mov xchg (bad) mov (bad) jrcxz add mov ss (bad) mov and xchg outsl (bad) mov (bad) movabs pop jno (bad) rcr pop gs (bad) ss rex.WR push stc jmp and pop and mov xor xchg sbb and movabs or (bad) shrl or ds (bad) mov sahf xchg in movsb addr32 (bad) popfq push sub (bad) (bad) stos in scas movsb pop fisttpll mov loopne push (bad) xchg mov fmuls jno lods sbb je cmpsb fistp jmp mov sahf rex pushq gs adc adc cltd (bad) (bad) mov or fnstenv mov jae mov outsb jmpq lahf mov movabs movabs jrcxz (bad) cmpsb pop mov (bad) pushq es sbbl in xlat (bad) or cmp push cmpsl xchg movabs gs mov sbb (bad) (bad) pushq (bad) (bad) ja (bad) xchg mov pop (bad) stos xchg (bad) (bad) mov ds stc movslq rcll xchg (bad) xor mov mov test mov xchg lret movabs (bad) lea cmp divb rex.WRXB add outsl (bad) pop (bad) (bad) leaveq adc cmpsb sbb fnop loope (bad) xor lea mov and jo hlt mov movabs add add xchg or (bad) enterq (bad) imul sbbl adc (bad) movabs cmp adc cmpsb callq add sbb scas bnd pushq (bad) (bad) shlb (bad) mov je (bad) std mov mov mov jo sub out sbb hlt outsl rclb cmp sti rex.RX cwtl xchg cmpsb adc rex.WRXB mov movsl jmpq (bad) je (bad) adc mov and xchg mov mov mov es fstps xchg popfq repz lods icebp gs jae jl rex.WRX sbb jbe sub rcll fimull cmpsl xor and stc popfq repnz pop mov jne push or fwait mov pushq rex.WR sbb fcoml int3 sbb gs outsl int pop fs popfq sub xchg rcrb mov mov cmpsb sahf adc cvttps2pi cld fisubr adc jae pushfq je in repz (bad) leaveq cli (bad) pushq or mov mov (bad) (bad) and pop lahf adc (bad) jne std pop jrcxz pop mov adc scas add or (bad) (bad) xchg lods movabs shrl mov mov retq push sbb mov (bad) pop mov xchg in or adc test (bad) (bad) mov adc adc insb ror pushq add scas jno (bad) and xchg adc loop divb push (bad) fbstp mov rex.XB fstps jrcxz rex.RXB mov xchg pop cld movabs mov (bad) sbbl lea (bad) jne retq jmp mov jge stc out (bad) mov xchg fildl (bad) (bad) jrcxz xor sub loopne movabs mov (bad) rcr fnstenv jo (bad) ds xchg (bad) adcb test clc out imul push (bad) and push xor xor add ja cmp (bad) adc sbb scas sub or xor (bad) pushfq cmpsb in in movsb jl sub repz xchg jo imul and jo cmp int3 xlat and and fsts sub loopne out test lods (bad) sub jns stc sbb imul pop mov (bad) lret sbb cld rex.WRX lock (bad) fs outsl in adc (bad) pop pushfq pushfq outsb movsb pop sti push mov rex.B pop pop ja (bad) adc xchg mov out jg sahf mov mov pop pop insl mov cmc (bad) (bad) in (bad) rex.WXB rorb out and (bad) pushfq jno mov loope (bad) loop push (bad) mov (bad) sub add xchg or (bad) icebp cmp jl xchg rex.RB pushq mov ds mov rex xchg lret lret and repz mov in mov xchg (bad) ficompl mov gs jrcxz (bad) (bad) pop test push mov jmp popfq je out (bad) rex.W rex ds or (bad) fcomps xlat (bad) (bad) mov test repz cmpsl jg pushq mov leaveq xchg (bad) mov cmp enterq mov movabs fidiv out jae jg sub pop enterq out (bad) (bad) in repnz sbb imul shrb (bad) stos xor xor cmpsl and (bad) xchg orb and fstl mov outsl (bad) cmp insl lahf xchg (bad) (bad) pop clc scas cmp sub pop mov mov repz and rex.R cli test (bad) sahf mov adc (bad) sahf pop cmpsb (bad) movabs fldl fdivs add add xor mov (bad) outsb cwtl nop sar hlt shl outsl mov mov stos and loop loop pop and xchg sbb (bad) and (bad) imul (bad) (bad) int sub addr32 mov xchg movabs loopne rex.WRXB pushq xlat pop mov stos sub sub push adc rex xor fstpl pop rcr xchg sub divb retq push xor jne pop in cmp mov fidivr mov sarb mov pushfq adcl rex.WRB cld (bad) movslq pushfq (bad) sbb adcb addr32 mov cmc imul mov imul push fiadd sbb mov (bad) cmp pop sub (bad) jrcxz and cmp movsb rex.B je fisubl mov cltd (bad) movabs out rex.RB cld mov xchg enterq js (bad) sbb (bad) scas fsubrl popfq cltd push (bad) pop xor sbb xlat or insl (bad) jae data16 (bad) cmpsl mov and (bad) or mov (bad) pushfq insl sahf cltd data16 jg test pushq sbb or mov sahf pop xlat xchg (bad) fwait rex.XB scas jp adc rex movslq cld movsl in push push sbb xchg orl cmpsb rex.WB adc outsl (bad) jne pushfq subl mov cwtl pushq (bad) es test loop loopne jbe sub xchg leaveq mov push (bad) mov cld (bad) leaveq fsubl lea (bad) popfq sar or pop paddusw sub add test pushfq addl loopne je (bad) xchg lret fs add (bad) cmp (bad) loope or ja sahf and pop pushfq (bad) fsubl cmc cli mov sub (bad) rex.WRB rex.WR addr32 rex.WX std pop (bad) and loop mov leaveq xchg int3 fisttp cwtl fnsave mov adc cmp pushfq insl pushq (bad) sub mov nop adc pushfq outsl mov movb nop gs or idivl pop mov pop rex imul and fistpll adc lahf (bad) insb jnp (bad) insl insb rex.WRXB mov stos (bad) nop jle fadd rex.WRXB (bad) nop sub (bad) rex.WRB fwait lret xchg out jmp fistp ror adc jp adc fistpll xor adc sub jle fildll lea imul (bad) (bad) rex.RX (bad) xchg mov mov mov and gs nop jmpq rex.B lea (bad) lcall xchg add stc xor add jbe (bad) enterq jbe mov repnz xchg rex.WB pop cmpsb sbb scas (bad) cltd (bad) ja movabs rex.RX mov jmp and ficoml push mov mov (bad) fdiv push jp push loopne pop push mov (bad) rex.RXB mov stos mov rex.WRB data16 (bad) ja insl sbb leaveq outsl movsl mov lahf movsb test sbb loop adc pushq mov mov cmpsb movsb movabs mov movnti jrcxz mov rex.WR out leaveq rex.W test mov int3 pop enterq (bad) nop (bad) xchg enterq xchg mov roll sub pop mov (bad) stos sbb fsubrs out jmp rolb (bad) (bad) (bad) cmp std push in repnz sub int rcrb lret retq imul in lahf std sahf (bad) jmpq addr32 mov (bad) lods (bad) mov mov jl (bad) or in movsb adc mov or cmp (bad) push outsl lret mov rex.WRXB fwait popfq sbb rex.W (bad) (bad) popfq (bad) outsl cmpsb mov pop sahf mov jae (bad) xchg add lahf movsb and (bad) xor frstor rex.XB rex.WRX and mov fs mov (bad) adc or lahf push outsl mov (bad) sbb and loop adc nop xorl and leaveq (bad) in andl jmpq (bad) sarb cmpsb adc sar sbb mov jl cli (bad) fsubs jp mov (bad) (bad) sub clc and jno lock (bad) sti js jo shrb outsl pop out add clc imul (bad) std sbb rex sbb mov jmpq mov jg mov leaveq xor fiaddl (bad) rex.RXB sub pop mov movabs cmp and and (bad) mov jns loopne movabs pushq fwait cld lea popfq hlt lret insb xor or push xchg mov outsb xlat int3 divb cmp adc (bad) fnsave rcl xchg pop fs rex.B and ja push (bad) div xor int insl mov fstpl xchg loop sbb xor rex.WRX sbb xchg xor rex.B lea retq retq negb (bad) (bad) (bad) popfq cmpsl pop shrb rex.X mov test mov (bad) pop rcll cmp mov and mov xchg int ss callq xchg xlat xor xchg (bad) pop es pop add push outsl sub rex.XB (bad) pushfq loop mov movabs lea cmpsl mov adc xor or stos mov adc (bad) and pop outsl jmp lret fnstenv imul outsl (bad) mov mov rcrb ds sahf rex.X (bad) and (bad) (bad) lea stos int3 adc (bad) outsb mov mov nop (bad) rex.XB cmpsb pop jo iret shrl (bad) int pop (bad) (bad) cmp cmpsl int3 orl xorw movabs (bad) shll pushq fwait and rex.RB (bad) movsl popfq mov push sbb (bad) adc xlat pop rolb gs sbb mov repz mov loopne xchg psubusw adc pop and pop or sahf (bad) outsl (bad) pop out imul rex.RXB cs es sbb test cmpsl or lahf pop xchg scas cs es shrb loopne (bad) fldt lcall sbb loope je mov jg (bad) rex.WRX scas push cmp loopne xlat movsb lret fs xor (bad) (bad) (bad) fmull mov mov mov scas jge xchg mov callq add (bad) std (bad) stos js outsl lock out std xlat and rex.RXB std rex.WR pop jl or cld sbb test or (bad) push pop jns outsl sub sarb cmp rex.RXB test xchg xor movslq popfq (bad) incl xchg fisub mov mov adc push add test andl mov (bad) lret (bad) movslq decb xchg mov rorb pushq pushq xchg movslq out fildll lea (bad) mov adc outsl cltd insl and (bad) xlat loope xchg callq mov (bad) adc imul scas and movsb je rex.X fcompl lods xchg loope fst lods (bad) adc cwtl and mov adc and pop sahf rex.XB (bad) rex.WRXB mov mov mov andl pop imul sub lret insl push push movabs stc fs sbb xchg mov push pop cmp cmp mov sbb (bad) retq rex.WX mov out callq iret or adc rex.X rex.XB rol test movabs movabs xor pushq sti lock lods mov je (bad) or lea (bad) jne movabs scas mov fmul jns mov push (bad) faddl mov xchg movabs fndisi(8087 adc sahf push ficom (bad) in (bad) (bad) lea fwait pop (bad) pushfq movsb jrcxz cmpl pop lret mov pop pop movabs and (bad) and mov (bad) (bad) pop cmp rol mov mov in pop (bad) cmp mov (bad) (bad) lods rorl jb rex.WRX pop mov cmpsb xchg (bad) lods (bad) and jbe pop adc xchg mov (bad) rex.WXB stos movabs xchg (bad) sbb jge rex.RXB outsb (bad) addb mov push mov lods lahf rex.WRB insl in fdivrl repz std jbe ficompl adc xchg (bad) nop adc js pop unpcklps out cltd (bad) adc repz xchg leaveq iret jo jmp jg mov (bad) xor xchg adc mov and popfq and stos or stos adc push lods pushq (bad) outsl cli stos cwtl xchg xorl jle fidivrl cld outsb enterq sbbb outsl cmp lods mov jae adc xlat lahf xor mov rex.X movabs jb or add test (bad) jno pop cwtl lock (bad) outsl imul (bad) out pop movabs cmp sbb insl test or (bad) mov nop jle fwait xor sahf sti sbb jbe fiaddl (bad) (bad) cmp (bad) imul jae mov xchg andps cmpsl push movabs sbb jo push jrcxz xchg (bad) and (bad) xor sbb xchg je xlat (bad) jle (bad) (bad) cmp mov add (bad) ss add callq ss mov lahf (bad) pushq (bad) scas fwait xchg lods xchg lods lret iret nop out or fimul loop (bad) lahf rex.WB rex.W addr32 addr32 fwait xlat (bad) mov movabs (bad) int outsl mov xchg retq cmc cmc mov or and jp lahf or sahf mov pushq or mov jrcxz shrl rex.XB adc (bad) paddsw sti test cmp fidivr movabs sub lahf mov ds addr32 mov sbb fldenv mov fcom pmullw or and sub lret (bad) mov xorl (bad) (bad) xor fistpl jle mov (bad) mov ja stc subb lret (bad) xchg xchg add sbb (bad) xchg adc xchg jg (bad) outsl mov loop push in xchg pop rex.XB rex.RX mov sub sbb mov test nop ss (bad) add fisubl xchg enterq (bad) add idivl insb cli loopne loop cmpl movsb mov in fiadd (bad) lahf mov rex.R push rex.RX mov (bad) lret (bad) (bad) fnop out (bad) in js xchg (bad) pushfq mov xchg movsb xchg xor testl mov (bad) fbstp (bad) sbb movabs (bad) rex.WRXB fidivl mov sub cwtl cs pop movabs (bad) cs loope xchg push fiaddl nop mov retq icebp push (bad) xor add nop jrcxz xchg rex.W push lods and xchg adc fnstcw (bad) mov (bad) test push jge movabs (bad) cmp (bad) fisttpl push movsl push rex.WXB mov test (bad) mov jno push shrb mov notb std mov adc pop leaveq retq pop pop jge rcr xchg xchg rex.RXB retq test mov pushq and jle rex.WXB rex.WB xchg push mov lret (bad) (bad) hlt (bad) icebp addr32 cmc (bad) stc jmpq in sbb retq pop mov add (bad) mov pop (bad) mov add fwait (bad) add hlt loope ja rex.WRXB es mov rolb rex.XB (bad) fidivrl (bad) mov adc (bad) cmp ja xchg mov add test mov push (bad) (bad) out rex.RB mov (bad) (bad) cmpsl push cli insb outsl mov mov (bad) in movabs sbb loopne mov pop lods mov push push rex.B (bad) shrl lahf adc push rex.RXB rex.WRXB push xor jbe (bad) jl jmpq or xchg mov std rex.XB mov jp decl (bad) and sahf movsl rcl pop cwtl pop outsl mov (bad) push sbbl out adc (bad) adc retq pushq callq inc movsb pop nop sub (bad) outsl mov xchg sbb (bad) sahf clc insb xor sbb scas fidiv mov mov rcrb mov lret lret lea cltd or add subl jrcxz jg (bad) xor (bad) popfq lret fistl mov (bad) fmul jmpq (bad) sbb mov xor std retq fwait mov subl (bad) jmpq paddb leaveq or lods jmpq sti (bad) imul (bad) adc fild fldl xchg mov (bad) (bad) rex.WXB add or xchg add int xlat rcll push jb mov (bad) and jne mov pop and (bad) notl cmpsl or outsl (bad) and jbe (bad) rex.WRXB rex.WRXB lock (bad) xor mov xchg (bad) fidivr jmpq stc mov iret rex sub jrcxz mov lret pop retq mov pop loop rex.RXB (bad) lahf hlt pop jmp adc repnz xchg int xchg jge (bad) push jle xchg xchg nop rex.WR fisttpll jg mov adc rex.RB roll cmpsb out stos and xchg sub (bad) (bad) jg (bad) mov mov sub pushfq mov add outsl cmp adc scas callq (bad) sbb (bad) mov fimull int sub mov mov imul mov cmpsl js or rex.RX (bad) mov mov lret (bad) xor callq int adc loop pop rex.W fsub cmp xchg mov pop retq rex.WRB rex.RX adc enterq pop (bad) xor in xlat stc add or rclb rex.WX push sub pop mov xor jmpq push add rex mov jne popfq pop cmpsl retq out ds outsl (bad) scas movabs push orl mov sahf rex.WRX pop pushq iret xor imul lea cmovo xchg xchg rex.XB lahf (bad) rcr xchg (bad) lahf push mov jb imul jo out (bad) psrld (bad) repz or add cmpsb enterq rex.X fld xchg pop sti xchg (bad) fidivrl jbe enterq test iret (bad) rex.WX mov cli enterq xchg (bad) and pop jmp clc (bad) mov lahf (bad) movsl ss outsb or jmp mov rex.RXB rex.RX out fnsave mov jnp lods xchg mov sub and pop push in jns (bad) xchg mov pop adcb adc cmp xchg movabs (bad) (bad) add adcl (bad) push sub cmp mov (bad) mov clc (bad) adc lea ljmp pushfq rex.WRX movnti sbb sbb and jb (bad) jg movabs lea fwait sbb (bad) cmp add jge sbb (bad) and loopne add (bad) mov (bad) mov loope fimul mov movsl rex.WR movabs (bad) lahf cmp lods sbb in jrcxz mov repnz add xchg push nop sbb out fs mov andb test xlat mov lahf sub cwtl jrcxz mov mov xor (bad) ficom movsb (bad) adc rex.WRX and lods (bad) jbe bndldx and fistpll mov psubb (bad) outsl fucom out movb fsubrl rcr js movsl mov test insb fisttp mov xchg movabs retq sahf (bad) mov lcall sti (bad) xchg (bad) or push mov mov rex.XB iret jg (bad) leaveq (bad) xchg sub jo int3 push fsubp movabs pop divb mov pop xchg (bad) test adc mov test rex.X rex.RXB (bad) xor mov (bad) xchg xchg jrcxz push mov push cmp fldl mov loop enterq jge addr32 (bad) sub sub cmp cmp mov or rcrl mov push (bad) (bad) add jbe add cs mov (bad) push (bad) in mov js stc mov push iret (bad) mov cmp mov (bad) push jge loopne cmp (bad) sti (bad) sub add lret (bad) sbb sbb xlat jle mov cmp mov sahf addl xchg xchg movabs je outsl stos test rex.WB scas adc xchg sti mov jg orl mov (bad) ja (bad) xchg fimull lea mov (bad) rcrb insb (bad) mov sarl adc mov stos adc pop xchg add insl xlat ds jmp fucomp push ja lods sub adc (bad) (bad) hlt sahf insb outsl rex.WRXB lock data16 movabs mov mov rex.WRB pop fistpll xchg (bad) popfq (bad) fidivrl lahf js xchg leaveq sti sbb (bad) mov mov pushq leaveq div sub mov xchg adc (bad) iret xchg pop sbb jle cld xlat cmpsb (bad) cmp (bad) rex.WB mov fwait rcrl int jno (bad) jmpq jb lods fsubrs out jmpq fucomi test movabs jge ja jrcxz add cmp mov xchg outsl insl mov (bad) (bad) cld scas jge mov xchg adc cmp repz (bad) rex.WRB sbb push pushq fwait (bad) fnstenv cmp xor imul rclb in and jp add std jne callq (bad) shld sahf mov shr adcl fnclex retq jnp rex.W xchg outsl test rex.B stos jb mov xchg xchg addb lahf and shrb adc rex.WRB mov insb jg rcrb or pop sahf lods ja (bad) lea (bad) xchg xchg sub rex.X fidivr and xor jl shrb (bad) lret add xor divb (bad) mov (bad) pushq pop add jl or push adc jrcxz negl (bad) jbe rcl repnz cmpsb mov jbe (bad) jl std adc xchg (bad) int jl jle mov sbb and subl stos pushfq stos nop xorb lahf mov movsl sub int data16 (bad) (bad) jmpq outsb (bad) mov ss xor pushfq movsl insb fadds rex.WB jrcxz movabs cmpsl (bad) pop rex.RB push add rex.R (bad) jo sbb mov fsubrl xor (bad) (bad) outsl std stos (bad) lea hlt (bad) push rex.X rex.WRXB cmp fnstenv movl (bad) rex.RXB rclb xchg push mov lea mov mov jo push outsl rex.WR pop jbe or mov lock and add shr (bad) (bad) mov xor xor (bad) pushq rex.WXB or mov movabs pop mov push in mov (bad) (bad) sbb and lods xchg lods decb sub scas mov mov pushq std popq in or (bad) sbb xor movabs adc sbb jge sub popfq xchg (bad) loope rex.WRB mov (bad) mov (bad) in (bad) add gs sti (bad) (bad) mov mov jrcxz adc (bad) mov cmc jl or jmp mov add ficoml pop andl out jmpq add mov ror and outsl pop jp int test in mov (bad) mov fcomip rclb sub ss xchg sub (bad) hlt popq fisttpll sbb and rex.WX rex.RXB ss (bad) leaveq (bad) or (bad) outsl stos xchg outsl or imul mov push enterq jno (bad) xchg out add fdivp es (bad) jle movsb or xchg mov int3 add adc mov shrl (bad) pop xor (bad) std sahf (bad) outsl rex.WRXB rex.WB mov lret (bad) cld rex.WR mulb (bad) mov pop xlat loope stos outsl notl (bad) (bad) mull sub push idiv cmp mov popfq and lret mov (bad) imul pushq cmpsl pop ja push movaps gs mov jno (bad) add (bad) repnz (bad) fcoms outsl jg out ficompl movsl sub xlat stos sbb jl xor push xchg (bad) in in rex.X mov pop roll imul addr32 xchg lea loop mov std mov sar xlat and cmp cpuid add pushfq andl packsswb testl push jecxz xchg outsl push out mov ss mov ja lods cmpsl (bad) outsb fmull sbb mov leaveq movabs fimul mov jg (bad) std fsts es (bad) rex.X in (bad) adc outsl lea sub mov ds or cmp mov or (bad) (bad) (bad) movabs xor (bad) xor jno or adc std pop pushq pop jmp lret mov iret rex.XB cmp movabs add callq repnz loop xchg mov rex.WB (bad) int push cmp xchg sbb iret loop (bad) mov sub test lea (bad) movslq pushq (bad) xlat push fcomps mov add mov ja (bad) popfq sbb mov add xchg push (bad) sbb retq (bad) pop insl (bad) jrcxz mov movabs pushq retq (bad) (bad) xor in mov pop mov in enterq lods outsb adc xor sarl push jne (bad) iret push xchg lahf sti (bad) xchg (bad) cltd mov xlat xor mov xchg or (bad) jbe xchg (bad) sbb pop mov movabs sbb xchg (bad) cwtl mov rex.WRXB mov add pop pushq callq clc (bad) enterq fwait mov or js fildl (bad) lods faddl adc xchg ss test (bad) (bad) sarb or (bad) outsl in mov jbe retq movabs jns rex.XB div xchg xlat outsl hlt (bad) push xor loop int3 andl outsb xchg (bad) jg cmp pop lea pop scas pop sub mov push jrcxz add test cli mov jns lock fnstcw rex.RB in or leaveq cmpsl rex.WB iret imul (bad) out lods test and and cmpsb orl mov roll add (bad) cld push (bad) shrb jb test mov sbb (bad) (bad) jmpq jno add cli (bad) cmp addr32 push pop jbe retq mul xchg lock jp movabs xchg shll rex.X sar push imul adc rex.RB pop je sahf movabs add shrl je jb xchg or xchg (bad) adcl insl out insb xchg mov imul fsubl gs fs mov (bad) sbb imul (bad) jle push pop pop xor jo out (bad) cwtl or jle (bad) pop jne pop cmpsl add mov movabs ficom (bad) adc outsb (bad) mov push (bad) xchg adc (bad) ficoml stos push lods clc jb testb add (bad) sahf clc (bad) sbb mov loop shll mov (bad) sbb movsb loope add mov rcrl adc cwtl je mov cltd movnti adc rex.B stos and xchg int3 cmpsl rex.X mov scas (bad) jg out mov test out fstl iret xor mov (bad) test xchg (bad) mov adc lahf (bad) jmp xor outsl adcb lret xchg mov outsl mov mov test (bad) iret rex.WX movsb mov retq mov mov rex.WX and fistl mull rolb pushfq rex.WRX (bad) sub cwtl (bad) (bad) adc xchg mov scas (bad) mov mov mov adc imul mov mov insl movabs cmpsl movabs jnp jp add mov fs (bad) or orl add cmpsl pop lahf mov mov loop (bad) xchg sbb sti jmpq jmp test sbb in or mov fwait sub sbb in (bad) mov sarb stos fwait (bad) sbb push retq xchg movabs negl (bad) fwait lret (bad) rex.WR push mov or (bad) mov cwtl (bad) mov add sub ds adc rex.R sahf rex.RX (bad) sbb sub xchg lock mov jmp cltd (bad) sti jnp add and mov out mov sbb adc and mov jmp test movsb (bad) pop int3 outsl (bad) and mov cmp mull xor int (bad) (bad) xchg (bad) rol push rex xchg jb lea (bad) movabs xchg xor shll pop movabs stos sbb (bad) add out mov (bad) in or push popfq xchg lea cmp (bad) xchg sbb movb (bad) loop and mov xor rex.X xchg mov movabs mov es pushfq xchg fisubr (bad) pop ja fisttpl fwait (bad) push test xchg xor cltd shl xchg test imul jrcxz add rex.WRXB (bad) sbb out out or mov jg loopne adc xchg in movabs cmpb sbb (bad) rex.WRX xchg nop mov jl rol (bad) test sarl jb mov add test movabs stos test mov idivb fcoms lods enterq fldcw test lret mov ror mov adc iret xorl xchg cmc pushfq fildl mov xor retq pop repnz shrw fnstenv adc xchg enterq cmp addl pop sti pushfq cmpsb rex.WR pop (bad) lret xchg jg mov rex.X rcll shl out cld push mov xor rex.W rex.RX rex.WRX in rolb mov (bad) movsl xchg out add xor cli xchg lret rex.RXB xchg cwtl push sti jge push rcrb (bad) imull mov (bad) xchg sarl jo stos (bad) (bad) jp pop int movsb or push test or and rex.WXB rex.RXB es mov (bad) sbb xor roll js jne push or adc subl (bad) or sub mov pushq pop cltd (bad) mov mov jo xchg jmpq (bad) (bad) stos shll pushfq pop jno jrcxz lods (bad) xchg fisubl add pop (bad) out rcrl mov and rex.B loope sahf jg cld xlat rex rex.B cmp cmp (bad) rex.WR sahf data16 sbb mov retq popfq jae iret pushfq jae iret xchg jae iret (bad) jae iret cltd jae iret cwtl jae rorb (bad) sub xchg adc xor pop sbb (bad) ficomp (bad) add xchg rex.RXB fnstenv jnp (bad) rex.WRX sahf mov adc fwait rclb xchg rex cmp rex.RXB cmp rex.WRXB scas (bad) xlat rex.WRX push pop sub mov loope ja pop (bad) out and mov cmp add leaveq mov rex.WRXB (bad) push pop rex.WRB test add adc mov (bad) mov cwtl movabs mov lahf adc (bad) pop scas jge icebp sbb sahf andl fimull pop movsl xchg divl imul loop (bad) xlat xlat shl (bad) push frstor imul pop in movsl xchg mov insl mov (bad) pop (bad) jns hlt mov rex.WRXB fiadd jbe (bad) or (bad) mov (bad) (bad) adc loope outsl adc adc mov and sub jmp iret movsb pop mov fdivrs mov (bad) cmpsl mov xchg sbb mov and (bad) rol sub (bad) outsl mov pushq rex.WXB pop outsl mov roll stc jmp (bad) cmp rolb or popfq push pushfq in mov in mov lret fistp xchg ja (bad) ficoml (bad) je (bad) xor mov mov in xchg (bad) (bad) sub fist (bad) iret lret cmp mov xlat mov xor rex.WRB rex.W and mov mov scas insl fmulp vpmullw setns jb add retq callq (bad) fisttpll jo sti sub push (bad) mov mov sbb mov iret sbb sbb retq mov cli mov (bad) mov adc xchg testl or (bad) sar out divl stos mov (bad) movsb (bad) sbb scas roll mov ffree xchg mov out rex.WRX out lods xchg out nop cmpsb imul push mov jg (bad) xor rex.WRX in mov (bad) xor (bad) movabs jae jne (bad) xor xor vpcmpgtw movabs rex.R fstpl mov rex.RXB rex.X jbe xchg xchg lock outsl fldt retq sahf sbb hlt jg xchg pop (bad) movabs rcrb pop jbe (bad) (bad) insl xchg jp mov (bad) (bad) stc (bad) cld mov sub sbb xchg jp xchg sahf callq mov xor outsb movabs cmpsb adc shlb sbb cli pushfq sbb mov cltd (bad) lods rex.RXB nop idivl shr lahf and pop mov (bad) mov mov lret stos test mull xchg (bad) shll mov adc sbbl movsb rex.WRXB not popfq pop mov rex.XB (bad) movsb fisub rex.WB adc movabs rex.WXB mov cmp rex.W add rex.RB pop iret add adcl xchg jne pop mov pop rex.WRB sbb int neg (bad) adc (bad) (bad) (bad) (bad) fdivrp (bad) push (bad) movsb pop lods in xchg test xchg cli (bad) je xor movsl cwtl (bad) nop stc cwtl rex.XB jne xor mov (bad) or test rex.WRB rex.WRXB xor rex.XB mov jmpq callq test out int push and (bad) (bad) push movabs mov stc (bad) (bad) jae andl xchg (bad) cmp or adc scas xor insl fmuls add add jno or (bad) ror lea mov retq retq test out sbb or movsl int push fcmove rex.XB ror insl (bad) mov mov movsb push xchg rex.X cmc push movsb outsl adc xchg int3 mov pop rex.B rex lods callq in sbb mov cli rcll adc (bad) xchg push movsl std push lret jae rcr outsl lret lret cmp in pop cwtl std out movsl mov lret fidivrl xchg xchg mov mov ja or iret and sahf adc and movabs stc (bad) jp push pushq add mov jle movslq rex.RB xor out and adc rex.WRXB adc movsb adc movsl mov (bad) mov sub xchg rex.WRXB stos sub rex.RXB xchg (bad) mov jmpq mov ljmp cmpsb sub movsb (bad) jp xor int lret rcll sub rex.WXB jrcxz mov xchg movsl (bad) fistpll (bad) mov mov callq lret adc push (bad) loopne xchg and rex.WRXB xchg or (bad) rex.XB (bad) lods lods cli js pop rex.RXB mov int3 sahf and pop xchg (bad) add (bad) mov or callq xor add std push leaveq cmp adc mov in insl rex.WRX rex.XB mov data16 jo cld rex.WRXB (bad) imul addr32 add pop mov (bad) mov rex.XB (bad) push movsl pop mov leaveq movsb ds in sub push (bad) fistp fldln2 sub adc outsb lods jl jbe (bad) and mov adc jrcxz leaveq idivl shlb orl mov pop xchg out stos jrcxz mov leaveq mov cmp mov rsm leaveq mov scas xchg push mov pushfq pop (bad) (bad) movabs rex.XB mov test loop stos mov or jp push pop addr32 rex.WR enterq (bad) cltd xchg fmuls int retq jns mov imull pushq jp rex.RXB (bad) iret (bad) jge pushq push push push insl rex.WX push sub test (bad) lock cmpsl (bad) adc (bad) jae ficomp rex.WRB test fsub lahf pop and je add rcll xchg cmp int3 lahf and cmp lea in (bad) notl mov xor mov sbbl push jge add cmp test push (bad) scas (bad) mov rex.RX jmp cmpsl cltd mov or outsl movabs movsb push in cwtl fiadd je movabs sbb outsb scas (bad) pop xchg nop sbb outsl push (bad) test lret lcall imul fwait xchg cmpsl (bad) pushfq rex.WRXB (bad) (bad) (bad) in mov pop mov push movabs push rcll in rex.X pop fnsave rex.WRX jnp scas push repz rex.WRB (bad) xchg lods mov fdivrl sbb pop ficompl fbld mov cld (bad) out lock mov mov iret popfq fwait (bad) scas (bad) adc jae xchg and xchg or xchg iret sub lock rex.WRXB rex.WRXB enterq rcl adc cltd pcmpeqd sahf leaveq xchg gs pop lock rex.WR outsb jbe xor mov rex.B test mov xlat xchg sub pushq sbb mov rclb pushq int3 jg out sbb retq (bad) roll iret adc stc fcmovu hlt or pop mov cmp (bad) cmpsl xchg scas jg rex.WRXB mov movl je xchg rex.W rex.WX cmpsb out (bad) jp push rex.W (bad) rcrb cmpb jo cmpsb add or (bad) mov wbinvd cmpsb nop je xchg sub adc mov (bad) push jrcxz (bad) xchg lods (bad) fldz test pop lret movsl xchg cmc push mov xchg (bad) cltd (bad) cli mov (bad) push add (bad) nop fdivrs gs pop callq cltd mov repnz (bad) mov xchg jl sbb movsl sbb fidiv stc (bad) (bad) nop out push sbb (bad) (bad) mov and (bad) in (bad) mov movabs (bad) mov pushfq repz scas fsubr mov cli mov jns shll (bad) or cmp addl jnp movslq mov (bad) movabs subb sahf cltd (bad) mov (bad) repz pop sub adc repnz rex.R and or xchg imul jmp insl (bad) sbb or js (bad) (bad) xchg sub jmp in shl (bad) ds cmpsb (bad) movabs ja hlt (bad) jmp xchg (bad) sbb out lahf (bad) testb fs sbb add (bad) mov in jge (bad) lahf jmpq lret (bad) fidivl (bad) (bad) ds test (bad) push xchg xor and pop insb jg fidivl insl sub cmp adc cmpsl adc retq ficoml sbb mov adc shr retq cmp jg in cli pop iret mov rex.WRXB (bad) scas mov fstpt and fucomip adc xchg fwait insb mov jmp rcll rex.WR shlb roll and (bad) jrcxz ficoml (bad) (bad) insl xchg fsubl fild xchg (bad) rex.WRB mov adc cmc in cmp jmp sub hlt rex.W add loopne adc mov mov sbb xlat rex.WRXB lea imul mov add jge rex.X sahf jnp mov adc stos xlat and jmp pop insl or xor sbb xchg (bad) sub xlat rex retq xor and mov (bad) loop pushq xlat cmp mov stos mov cmc rex.WR out sbb andb (bad) loop sbb or roll cltd (bad) nop pop (bad) int or callq mov stc fs lods add test mov (bad) sub lods fildll rex.RB pushfq push rex.RX rex mov xor (bad) lret mov and add rex.R rex.WR mov cmpsb (bad) lods rex.WXB imul ds nop jmp lahf mov (bad) adc stc adc cmp sbb jp jle (bad) (bad) sub adc outsb (bad) jl cmp jmpq scas xchg callq in adc (bad) je pop cmpsb (bad) loopne pushq fistpll jns fsubl xchg (bad) sbb mov iret mov and (bad) lret mov fdivr mov out popfq sbb push imul fcompl (bad) movsb or xchg xlat pandn xchg iret xchg cmpsl imul sarl adc paddb cli movsl adc mov repz shlb (bad) push stos or jmp push enterq mov (bad) cmp xchg cwtl add sub int (bad) flds fcmovb xchg imul jp in cmp mov popfq (bad) cmp scas (bad) jmpq cli jrcxz jbe (bad) data16 adcl xchg sbb int or xchg (bad) ds mov sarb (bad) data16 mov (bad) movabs mov retq sub mov std cmpsl mov adc fild (bad) push add xor frstor sti (bad) out add outsl cs pop (bad) xor jbe mov cwtl rcl cld mov (bad) cwtl out movl (bad) lods jrcxz (bad) stos sbb nop push (bad) shr test loopel iret (bad) jg sarl sbb lea adcl mov rorb test xlat fwait (bad) xchg jge rex.W mov je int3 xlat jge or clc cltd fsubs rex.WRB movabs enterq jb es (bad) pop repnz xchg rex.RX (bad) cs jrcxz xor out jg out mov (bad) scas and or and out add mulb cltd adc (bad) (bad) mov lods (bad) fnsave cmp and loopne lods outsb mov jrcxz jmpq adc outsb mov sbb mov nop rex or sbb xchg (bad) rcll (bad) jne fbld (bad) mov (bad) xchg sarb scas adc pop movabs jmpq xchg sahf fldpi push sti mov pushq rex.X mov sub fsubr xchg mov jmpq or rex.RXB xchg (bad) movabs stos roll cwtl jbe int3 pushfq xor fdivrs (bad) cwtl sahf cmp jmpq cltd mov sti enterq in mov rcl callq push sbb adc cwtl rex.WRB push xchg rcll lahf (bad) (bad) push rex.RB mov sahf xchg (bad) popfq rex.WXB mov jbe jmp fstl (bad) jbe ss xchg xlat mov mov mov fcmovnbe (bad) fisttpll (bad) pop or push lret fs (bad) mov mov pushfq ficoml mov xor jnp sbb rex.WRXB rex.RX fnstsw xchg sets jae movabs popfq (bad) (bad) outsb (bad) xor sbb xlat sahf xchg (bad) scas (bad) adc add cwtl (bad) fwait jae xchg nop jno xlat popfq sbb (bad) test rex.WRX xlat pop lock data16 movsb (bad) in mov pop rex.WX xchg test rcll jnp adc test mov iret fnstcw test mov push cmpsl loope imul xchg mov (bad) (bad) (bad) addr32 sub rex.WRB outsl pop mov mov (bad) push movsl sub movslq lea retq and (bad) or movsl and hlt cmovge cmp (bad) or cld iret (bad) xchg rex.X cmp enterq mov (bad) fnsave or jo sbb adc (bad) mov iret (bad) addr32 out (bad) push or mov mov mov sub hlt (bad) icebp rex.WXB and lahf xchg pop (bad) je add divb je movabs hlt (bad) pop rex.WR xchg cld push mov movabs (bad) mov adc rcrl stc sub add fcoml mov push xchg mov adc mov ss xchg int push (bad) mov shll jb mov divl scas cltd fidivrl icebp callq xchg retq (bad) xchg imul ja stos jmp cli out iret xchg movabs sbb rex.WRX mov pushq stc sbb sub mov and adc pop jbe push mov pop (bad) test mov jae (bad) pop (bad) sti clc pop xchg sub sahf (bad) adc pop stos rex.WRX mov rex.WRXB rex.WRXB movabs sub rex.WRB rex.WR mov js movslq jno rex.RXB (bad) movsb mov pop jrcxz (bad) in jmp sbb nop (bad) fistl (bad) (bad) cld add rex.WRB jne or in (bad) shrl cmc (bad) mov adc mov lods mov mov rex.WRXB sti (bad) mov iret movsb xchg sub sbb jne insb (bad) ss xchg push rex.X xor jrcxz push sbb nop (bad) movsb rex.W xorb mull (bad) (bad) xlat adc cltd add jg pushfq (bad) push adc test cmp mov mov pop fldz mov cmp and sub add pop loopne out adc jo (bad) (bad) xor xchg xchg mov (bad) push xchg jno je mov jmpq xorl xchg (bad) cmpsl leaveq fdivl mov out (bad) jae rex.R out out jbe or xlat pop imul rolb (bad) out gs (bad) mov pop or cmp fistpll adcl pushq (bad) leaveq rex.RXB jno repz pop (bad) and (bad) mov jrcxz incb (bad) shll mov add xchg je repnz cmpsb pop mov push (bad) mov mov (bad) test sarb sub adc (bad) sub (bad) sarb sub cwtl cmpsl lods imul cltd xorb mov jg pushfq jl rex.WRXB rex.XB (bad) lods fucomip rorl add mov loop rex mov lods jnp add jp roll rex.WR (bad) jge (bad) sbb add vmulps mov fucomip xchg jnp mov (bad) loopne cld cmpsb rex.WRB rex.WX cli mov lea pop rcrb loope subb rex.RXB insb adc lea push xchg loope jmpq (bad) rex.XB (bad) lea js sub jmp jg mov outsl rcll jnp lret loope mov (bad) xchg pushq rex.R mov rex.WRX int rcrl (bad) mov andl scas (bad) mov rex.RX rex.R xchg nop sbb in (bad) adc pop mov xchg mov fildl adc and mov lea movslq cmp mov push rex.WRXB shlb xchg jno jne ds pushfq jae (bad) cmpsl jrcxz outsl cld mov vorps push xchg movabs xchg lods hlt xchg xor (bad) andnps and rex.RX sub push sub (bad) rex.B fisubrl adc rex.WXB rex.WRX shrb movabs leaveq mov out xor rcrl xchg push jg je jo fidivrl orb sub lods (bad) sub loop movsb popfq and adc adc adc outsl fnstsw loope mov pop cmpsb jno adc out mov rex.WR pushq sbb popfq jg pop ja jg in sub rex.RX (bad) xchg scas rex.RB lods (bad) push (bad) xchg ficomp (bad) xchg sub rex.WRXB rex.RX sub cmpsb cmp (bad) (bad) nop in rex.WRB mov stc xchg in scas jle rorb scas out rex.X cltd pop outsb (bad) (bad) or jb xchg lret (bad) outsl xor cmp jrcxz sbb movsb fisttpll (bad) leaveq cmp (bad) mov mov rex.RX rcl cmp callq sti adc jrcxz sarb jmpq sub pop je mov or lods outsb sub (bad) add mov add pop decl (bad) scas (bad) mov xchg mov (bad) jge vpmacssdd mov shrl scas pop xchg nop stos cmpsb fstl scas xchg lret jge mov (bad) adc pop movabs lods and pop rex.WRXB sub (bad) sub addr32 xchg xchg ja repz (bad) (bad) repz rex.WRX add sub outsl iret addr32 pop out (bad) lea xchg imul shrb cmpsb retq xchg (bad) mov scas outsl (bad) fcmovu cmpsl jbe pushfq adc loop (bad) xlat ds (bad) fild cmp (bad) jo sbb sti (bad) cwtl incl xchg jmpq sbb mov loop fstl ficompl (bad) push outsl negl movsb insl sub cld pop test adc in or mov cmpsb add cmpsl pushfq push mov jno jbe rcll fidiv (bad) addr32 rcll fisttpl xor callq (bad) je lock clc xchg (bad) adc pop mov mov lret popfq pushfq sub adc xorl cltd in lea rex.B popfq mov sbbl pop out sub rex repz push sub ds mul pushq mov enterq not jae ficompl jns rex.WXB xorl ja mov pop (bad) mov mov mov rex.W movabs jne fwait jbe adc (bad) fcompl sub xor xchg rex.RX jnp (bad) push cmc stos rex.RXB rex.WR cmp movabs pop pushfq ja push in in pop cwtl mov mov (bad) fsts xchg (bad) mov mov jbe movabs fstl addl nop mov rex.WRB sub mov cs xchg xor jo sbb mov mov (bad) mov pop fcompl push (bad) fucomi stos or mov mov cmp enterq pop shll fbstp mov mov mov jmpq fist jle pop rex.RXB stc pmullw int (bad) cltd cli pop (bad) push ja xchg push mov (bad) mov (bad) mov pop or (bad) sbb rex.RXB rex insb mov lahf cmp jb adc pushq rex.WX (bad) sidt adc jg in xchg sub (bad) rex.WRX fs movslq xchg shlb (bad) (bad) sbb xchg jmp lods (bad) rex.WRX cmp xchg test movsb movabs mov push push rex.W scas sub jl int3 xchg iret mov rex.WX lretq xchg repz mov and je xor insb sahf sub sub rex.W testb mov rex.WRB jle stc rex.RB fwait es clc jo (bad) retq (bad) idiv (bad) jle insl lahf and (bad) (bad) sysenter xchg movabs pop mov rex.WXB sub mov (bad) fidiv rex.XB (bad) jno cmc hlt jnp ds movabs (bad) fistp rex.WRXB mov imul insl pop add enterq roll push out (bad) movabs ja jbe cmpsw in insb test mov jg movabs jae (bad) rorl sarl (bad) pop lret (bad) mov fmuls mov fcomps cmp sarb rex pushfq insb sub (bad) retq and adc jmpq sti sarb adc fnstcw retq fcoms fnop sub push (bad) test or test xchg loop rex.WX rex.RX (bad) jle movabs or pop (bad) xchg mov (bad) mov xchg (bad) testl retq xchg fwait (bad) imul mov repz std (bad) scas fild lea fwait jbe lahf out (bad) outsl (bad) pop and in (bad) xchg scas lea (bad) (bad) cmc movabs jae in divb (bad) (bad) mov jnp sbb (bad) and mov and mov mov add sar sub (bad) (bad) ss fsub sbb adc mov movsl lock (bad) movabs sub sbb xchg mov adc (bad) (bad) (bad) jae pop movsl lret cld add adc (bad) lea jmpq xchg rex.WRX adcl (bad) add (bad) sbb callq movb cmp pop in pop (bad) xchg repnz (bad) mov rex.WXB (bad) jae leaveq frstor (bad) test insb pushfq cmp jg rex.R adc (bad) rex mov (bad) scas cmpsl push add jb sub fisub mov popfq fcmovbe xlat mov insb std xor (bad) decl add imul stc fidiv jns mov (bad) cld callq movsb pop jg adc out sub jnp (bad) mov pushfq (bad) rex.X mov adc (bad) sbb sub test jmp jmpq push loope sub ds sub cmpsl add cmp (bad) lret (bad) adc (bad) and mov xchg (bad) mov nop rex.XB and mov xchg (bad) iret or shrb stos scas mov xlat lods pushfq int jg jnp (bad) (bad) rcrl push (bad) xchg cli (bad) mov lock (bad) (bad) and adc rex.B notb (bad) push packssdw (bad) mov (bad) pushq xlat (bad) xlat sbb jg mov or rex.RXB mov xchg callq es sub jmpq shll int xchg cmp lods fcompp out int jnp push jo addr32 xchg movsb pop loopne cmp rex.WRXB mov pop sti jrcxz mov mov rex.WRXB cmp jae popfq maxps (bad) add sbbl mov and int out sbb sar lea popfq and or rex.WR notb imul js pop xor fsts test jae notl rex.WRB rex.WRB mov lods mov xchg (bad) mov mov rex.WB rex.WX addl cmp rex.XB xchg fadds xchg xchg rex.WRXB jnp jb jbe xchg (bad) jmp mov shlb push test test and ja fdivrl (bad) lods std (bad) popfq (bad) testl mov mov iret xchg push (bad) movabs loope (bad) push cmpsb adcl cmpl sbbl es push lsl cltd ds adc divl sti sbbl mov mov loope addr32 pushfq (bad) pop adc je fsubl int3 pop (bad) imul mov sbb lahf xchg add mov popfq (bad) popfq mov repz (bad) popfq sti xor cmc (bad) adc xlat (bad) push icebp rex.RB jmpq enterq pop xor push mov mov cmp push or add pushfq pushq (bad) imul sbb jg out (bad) adc xor jmp rex.B gs adc ljmp mov rex.WRX rcrl imul jns stc pushfq cmp lea movsb scas xchg (bad) movsl std pop adcl (bad) mov fs push fimul adc test xchg repz xchg cmp adc rex.WB nop outsl retq lret xchg (bad) test or mov xor sbb sub push lea loop or cli jmp jbe push xchg (bad) in sbb jbe iret adcl sahf jo (bad) adc ja cld rex.RXB es or popfq mov test callq mov sahf and xchg test push movsb faddl xchg sub rex.WRXB jae sahf add and je mov xchg mov mov pop xchg xchg repz xorb mov popq (bad) (bad) xchg rex.WB pushfq je cli xor (bad) sbb movabs int xor insl rex.RXB sbb cvtpi2ps pushq (bad) push addr32 (bad) (bad) sbb rcrl loopne insb (bad) lret cmpsb rex.B je sahf fs addr32 (bad) (bad) (bad) xchg fmuls jae out (bad) sub xor pop test (bad) int3 adc outsl mov xchg mov movsb jg loope cmpsb adc ficompl adc (bad) scas loope fisttpll cmpsl (bad) xchg xchg or mov sub push jne or mov xchg mov lret add fcmovu push sub sbb out (bad) mov xabort and scas int xchg lret (bad) mov lret sahf shll push push xchg cmpsl iret fs jp (bad) pop (bad) fldenv fimull (bad) (bad) rex.B xor (bad) movabs push test pop xchg mov cld adc mov (bad) sbb rex.RX insl rcrl jbe popfq push rolb cs rex.WRB scas rex.WRX jge fidivl ja (bad) xchg jne insb pop test popfq xchg rex.WRXB fnstenv mov fdiv mov jle cmpl mov (bad) xchg (bad) (bad) (bad) sbb adc (bad) xchg fstl rex.WB fstpl sub repnz stos pop fisub movsl mov lea int add sbb rex.RX jns mov (bad) and jns lea data16 (bad) int mov fldcw out mov rorl lea std (bad) (bad) (bad) imul sbb pushq or pushq pop gs loop fcoml jg (bad) mov pop sahf js (bad) (bad) es jrcxz cmp rex.RX mov pop insl sbb xchg loope rcll or cld int3 jae ficompl (bad) (bad) xchg in xchg sbb jg jae out and mov mov or stos test (bad) jne rex.XB and in stc (bad) mov xchg lret (bad) (bad) jns outsb mov retq (bad) in mov loope outsl (bad) sbb mov out (bad) callq adc out mov jnp (bad) frstor or fisttp lret pop xchg ror adc jmp jp sahf mov movabs leaveq fsubrs cmp lea lea jnp push (bad) iret rex.X or (bad) push outsl (bad) pushq mov xchg stos je rcll (bad) cs lods lea rex.WRB cs sub rex.W (bad) nopl sub sbb imul push adc mov adc jle mov in movslq mov sub retq mov jb and or mov cmpsl xor (bad) xchg out popfq (bad) (bad) outsl (bad) cltd adc cwtl out mov (bad) nop rex.WRXB sub pop sbb loopne push xchg pop xchg icebp pop jmpq jbe sub movsb rex.WRX adcb insb in std test xchg clc mov push cmpsb enterq outsl sub rex.WRB rorb add lahf pmaddwd fidiv popfq movsl xchg sub (bad) xor cmp in cmpl mov xchg (bad) rex.WRX test jg int rex.W shrl mov adc push mov (bad) xchg outsl xchg data16 adc cmp add rex.RB repz in xor loope orl sbb sbb out nop (bad) mov sub xor test cli or cld fisubl xchg retq cmpsb ss jne pushq add jmp stc adc shr fcompl push xchg sbb popfq flds lods scas (bad) mov lret fwait sahf (bad) pop adc pop adc scas cld rex.WR ror or jmp cld test sub (bad) rcrl fwait shld (bad) popfq rex.WRXB or leaveq add (bad) or out scas fdivr xor adc rex.RXB jrcxz (bad) popfq cmp rcrb (bad) add lea movslq adc adc push roll (bad) data16 fdivs mov mov sbb (bad) or (bad) lods lret pcmpeqb jl mov es cmc sub imul enterq (bad) addl in cmp mov rex.B lea (bad) scas (bad) fcoms add rol sbb xchg (bad) rex.WXB sbb xchg movb xchg movsb xor (bad) cmp add sub add add rex.B mov mov rex.RX mov cld add push rex.RXB (bad) adc test (bad) mov scas and rex.RB push and mov fcoml xchg xor fisubl (bad) sub (bad) out sbb rex.X rex.RX (bad) or push iret xchg push (bad) adc rex.RXB mov adc (bad) mov mov jae rex.XB mov (bad) pushfq rex.RXB mov add sub mov sub movabs mov xchg xlat add (bad) push sbb pop loope rex.WRX paddusb rex.RXB cmp (bad) (bad) (bad) rex.RX orb mov fidivrl fisubr jmp pop adc push mov in faddl nop movslq sbb xchg cmc andb mov rex.WX mov jae pop or cmp xlat sub rex.WRB rex.RXB (bad) pushq test (bad) insl ja mov (bad) xchg rex.RXB or callq jl jnp movslq (bad) jbe shll movsb iret movabs push (bad) rex.RX lea push rex.WR (bad) decl mov rclb mov out sub outsb ficom scas movabs pushq cmp rex.B pop js nop xlat push sbb mov jp movabs adc adc push sahf push hlt ja (bad) jle cmpsl sub mov negl enterq add insb outsb sahf (bad) movabs pushq cmpsb mov cmp pushfq ss (bad) mov rex.WXB jo outsl enterq adc (bad) popfq (bad) sub pop adc popfq (bad) cltd (bad) outsl test mov orl movsb lods fsts ficompl insb sub or push cmpsl rcrl cmp xchg (bad) scas mov (bad) sub or cmp sbb shrb shrl lock lock mov push (bad) rex.RXB out icebp xor mov cmp rex.RXB loope mov mov (bad) cmp popfq hlt cmp lock mov pop scas movsb (bad) mov mov test (bad) or jmp cmpsl fcomp lea xor rex.WB or (bad) rex.WB xchg or (bad) imulb rex.RXB rcr (bad) mov movabs (bad) mov sub out adc xor mov (bad) mov (bad) mov jmp or rex.RXB scas (bad) mov data16 cmp outsl mov rcrb fisttp jnp or rex.WRXB test jb data16 xchg (bad) iret sub or (bad) rcl xchg mov rex.WRB rex popfq fcoms rex.WRXB (bad) movslq out adc adc in icebp (bad) es pop rex.WX lahf (bad) xor jnp push sarb (bad) (bad) sbb scas (bad) mov xchg rex.RB fcmovbe lods add cmp addr32 imul mov mov movsb sbb jle pop xchg cmpsb rex.RXB (bad) fwait (bad) (bad) movsb (bad) scas jnp fimul rex.WRX mov cmpsl movslq jrcxz pop mov (bad) movabs sti popfq (bad) (bad) loop iret cmp rex.WRX rorb rcrl ja and sub movabs cmp lods imul cmpsl and fimull movsb addr32 add jl (bad) jbe test (bad) xor (bad) push (bad) sti (bad) stos rex.WRB sub mov test movabs adc jge ja rex.WXB test movsl nop clc out (bad) push jno pushq mov popfq (bad) (bad) and movabs outsl adc push adc cmpsl fmull movsb mov stc mov imul (bad) stos fs sti fcmovu mov add rex (bad) loope fstpl jrcxz shl pop push (bad) outsl mov ficompl xchg loopne movabs cwtl out adc rex.WB add cmp cli rex.RXB fst xchg fwait sub mov fisttpl test (bad) add mov (bad) lea sub (bad) int jl push mov xchg xchg insl out cmp (bad) incl xor push (bad) pushfq rex.XB rex.W mov pop mov (bad) lret loopne adc push in (bad) test (bad) (bad) jge (bad) pop callq js (bad) divl lret add repnz stc (bad) stos (bad) jle adc lea test repz lret lock cltd sbb jns or iret hlt push (bad) (bad) sahf in jo xchg (bad) xchg push add (bad) mov or sarl rex.WX rex.WRXB popfq sub (bad) pop push xchg xchg jbe nop lret mov or push xchg (bad) loop loop test adc adc int3 jno imul insb sti (bad) test push scas mov sub subl (bad) rex.RXB (bad) cmp xchg fstl mov mov cmp sbb int3 (bad) (bad) (bad) add (bad) paddsw sbb fistp jle or jl mov rcll jge int and mov lahf sti sbb mov (bad) (bad) xchg rex callq push sbb insb add xlat jg (bad) movq sbb (bad) retq lea loope (bad) icebp jl xchg sbb rex.B jmpq cmp in scas xchg (bad) xchg pop out sbb push xor (bad) xchg outsl rex.XB xchg mov retq int out jl test movabs jno or and pushq fisttpll and adc movabs jno lahf fs (bad) std mov jg fcoml pop iret mov and push and sti pop int3 rex.WB adc xor mov xchg loop enterq sub movslq pop xlat (bad) (bad) sbbl xchg push (bad) mov (bad) mov gs adc cmpsl (bad) cwtl stos and vcvtsi2ssl adc int movabs lock (bad) adc rex.W (bad) out lods sbb xor rex.WR jne (bad) retq cwtl (bad) xor rex.WB push add jne adc (bad) gs scas lret jbe mov (bad) adc (bad) je rex.WX cs xchg rex.X (bad) rex rex.RX (bad) callq insl rex.X repnz (bad) popq rex.WRB shrl mov insb mov es (bad) sti xlat sbb outsb addr32 and jnp stc rex.WB outsl adc in incb adc lret (bad) negb lea andl or popfq sub (bad) rex.WR (bad) adc ficomp movabs xchg xor scas fwait test scas je mov fucomip (bad) mov test out insb jmpq movabs movabs (bad) rex.RX jrcxz (bad) jle pop jl mov and push rex.RX (bad) (bad) or mov or adc movslq push lods push and mov lods (bad) jp sbb leaveq popfq rex.RB pop fucomi sbb lahf or lret test rcr rex.RXB rorb cwtl and jbe add and mov outsb int movabs pop or in rex.R mov pop popfq fcmovne or callq scas movabs jp add xlat pop mov add data16 pushq adc sahf (bad) (bad) adc movsl and (bad) (bad) xchg fisub popfq mov (bad) (bad) (bad) movsl (bad) test xchg stos push test lods insb (bad) fwait rex.WR xchg push test fstl or xor fisubrl outsb test (bad) stc pushq mov fisubrl rex.RX movsl rorl adc rcll or movabs push movabs rorl fisttpll cld addr32 rex.RX xchg test push lods rex.WRB stc hlt mov xor jns mov mov xlat movsl pop retq lea shll or lret fcmovbe (bad) mov faddp test lret (bad) sahf push xchg lahf jo (bad) mov jg cmp xchg mov jl rcrl mov (bad) jrcxz int3 pop out scas in stc (bad) and leaveq mov imul xlat sahf and mov stos rex.WRB iret push pop (bad) rex.RX fwait mov cmp (bad) iret pop mov rex.RXB sub push xlat (bad) jmp cmp jrcxz lea mov orb loope rex.R rex.WB movsl (bad) mov mov callq add push sub (bad) movabs cmp xchg or adc js or addl movabs push outsb mov jrcxz or outsl and lret (bad) retq (bad) jle mov pop add lea nop (bad) push rex.WB adc and xchg (bad) (bad) mov fcoms movsb rex jrcxz movabs rex.WRB nop mov push xlat (bad) mov movsl outsl pushfq movsb pushfq (bad) test imul movabs rex.R mov sub hlt rex.WR sbb fcoms xchg outsl (bad) fbld (bad) cli sti (bad) sbb fcoms mov icebp pushq pop mov iret xchg jg mov scas cltd pop (bad) movabs adc mov lret (bad) or mov iret rex.WX mov sbb and rex.WB add lods movsl in jmp xchg mov xchg (bad) (bad) mov mov and jb fdivl std mov out shrb js outsl (bad) lods movabs mov test cli rex fsubs (bad) and outsl xor movabs hlt rex.WRXB loop hlt insl mov rex.RB retq repz rex.WRXB adc xor and add (bad) lret (bad) scas adc mov xchg cmp adc imul jmp sub mov push mov rex.WR xchg in popfq jmpq add ficompl int pop cmp popfq fwait rcrl sbb pop imul add add adc imul imul pushq pushq push shrb fidivl stos (bad) (bad) cmpl std ds movsl xor stos out cmpsl sbb (bad) sbb je (bad) leaveq shll fistpl pop fsubl or (bad) adc mov retq pop add mov ja and adc (bad) or jb fildl sbb (bad) or (bad) outsl lock cltd pop andl jle sbb pushfq rorb pop outsl stc cmp sbb sarl notq enterq (bad) movabs mov insb pop stos and or rex.WR jbe rex.B int (bad) or pushfq popfq and rex.WRXB rex data16 (bad) out ficoml jrcxz lret xor callq jrcxz and sarb mov jge and lret sub xchg (bad) mov outsl cmpsb fucomp movsb sbb pop sarb (bad) cmp pop rex.WX jno xlat rclb rex.W mov mov lahf cmp pushfq or je mov (bad) movslq (bad) add (bad) rex.WRB ds mov mov leaveq pop cld movsb outsl add nop jne (bad) xchg add rex.WRXB jrcxz sbb cmp or gs (bad) stc (bad) stos (bad) sub imul shrl cmove sarb test (bad) retq (bad) movsb movslq (bad) fidivr test shr cmp fadds rex.WRXB in lret xor rex.WRX leaveq adc mov mov sub stos and mov jo (bad) rex rex.WX rex.WRXB data16 stc scas std outsl iret mov push (bad) rex pop cli outsl incb xchg pop sub sbb (bad) mov mov cli xchg adc adc ficom (bad) jbe jle cmp jrcxz (bad) sub rex.RXB movabs rex.B and xchg shlb enterq xor out (bad) in rol cmp sbbl out (bad) (bad) rcl out fisttp xor cli mov xor pop lret mov (bad) jae int3 (bad) rex.X in cmp rex.X lea outsb pushq (bad) mov data16 (bad) repz pushq and mov pop int mov jo add outsl cmp xchg xchg std add decl fnstcw rolb in xor (bad) fcompl sbb in cmp xchg movslq (bad) movabs rex.RXB rex.XB add addb xor addl movslq jge shrb outsb (bad) rcll sub insl and lahf out cmpsl jrcxz jg mov xchg nop (bad) adc sbb or roll pop sbb fstpl test rcll (bad) outsl rex.WRX rcl cmp pop rex.WR jmp rex.WRX pop jge out (bad) (bad) xlat movsl lea xchg out pop (bad) (bad) addr32 mull (bad) push fildll cmpsl mov pop (bad) js (bad) movabs pop xchg (bad) scas movsl push lahf ror push scas adc (bad) lahf sbb sub xor (bad) pop jo rex.WB je scas push cmp in pop add cmpsb jbe jno (bad) jbe xlat popfq movabs mov paddusb mov sbb mov (bad) push jo mov loop xchg shld callq loop jbe pop movabs retq (bad) (bad) cmp data16 mov or lea cwtl adc pushfq rex.WRX ja cmpsl test jbe je addr32 imul rex.X ss (bad) rep cmp callq (bad) cmp scas cltd incb adc adc fwait sahf imul xchg xchg mov lods lock retq fnsave cmp sub jne (bad) pop fisubr jmp fwait sub (bad) (bad) lods in (bad) fsub sbb jrcxz out fs (bad) out cmp fidiv outsb rex and xor rex.WRB test scas imul add add push test in lods sti or outsb in sbb push sbb pop scas (bad) je mov adc rex.WRX rex rex.RB andb (bad) sbb or outsl jrcxz adc es mov mov mov lea xlat outsl pushq xchg (bad) or stos sbb or mov (bad) jmpq and xchg adc jmp add (bad) xor rex.W leaveq (bad) jo in mov int3 mov push (bad) mov (bad) mov fmull mov add orl rolb xor or in mov cwtl movabs callq (bad) shl out mov jrcxz int lods xchg cltd faddl add xchg (bad) or lea sbb mov scas jmpq rex.X scas jmpq rex.X xor outsl xchg out (bad) decb fld and (bad) (bad) jo sub mov addb add retq sbb fildll pop (bad) mov loope (bad) mov pop lahf xchg (bad) xchg and sub ds fisttpll divb ja sub mov (bad) (bad) leaveq outsl rcrl (bad) retq cwtl insb cmpsb retq scas leaveq xchg rorb int jo popq (bad) xor and push sti jae sarb scas mov test out int sahf idivl insb pushfq sarl mov pop xor popfq insb loop loop mov sar (bad) rex.WRB outsw div rex.WRXB mov movslq and push movslq fwait outsb (bad) sbb mov movabs xor jrcxz jns mov sub sbb loopne mov mov pop in (bad) out mov xchg sub pop sahf (bad) je loopne ja push outsl lret xchg jbe outsl mov addr32 rex.RXB jbe sub xor sahf jg (bad) add pushfq mov push fwait (bad) mov xchg ss mov vminsd pushq int3 in xor jno xlat pushfq movsb push (bad) nop cmpsl xchg jg adc pop sbb (bad) (bad) rex.W jge data16 adc cld (bad) (bad) cld pushq mov xchg repnz rex.WB rex.WRB rex.WX (bad) xchg jbe mov push (bad) sarl mov xor insl lret sbb jne cmc rex.WR rex.RB and rex.WRB pop pushfq adc sahf outsl retq fidivrl ficomp jnp mov movsb (bad) xchg xor hlt adc lret sub rex.R (bad) sbb ja rex.RB (bad) callq jg scas (bad) jb fldcw and mov (bad) (bad) sahf (bad) lea (bad) xchg jrcxz adc (bad) push je sub mov popfq insl xchg lea jo (bad) mov jge jnp sbb and sbb xchg sbb mov (bad) sarb mov (bad) sarb scas (bad) in xor xchg cwtl outsl pop pop shlb cmp cmp push push sbb cs fdecstp rex.WX add pmaxsw sbb sub pushfq (bad) mov xor fmull add out mov (bad) loopne repz push xchg outsb imulb nop or and mov push out xor (bad) sti mov sbb popfq iret xchg rex.WX fwait outsl jp mov xlat xchg xchg outsl mov (bad) jg je (bad) enterq adc or (bad) gs pushfq (bad) adc addb fstl lret jno jno mov (bad) je sbb rex.RX out (bad) and rex.RXB push (bad) xor ja jg (bad) adc int3 insb push xchg jge popfq push sbb movabs mov out adc sarl mov jg xchg mov rex.WR es push movabs std enterq push pop sub es jnp adc rex.WRB pushq je mov (bad) movabs flds in and pop mov (bad) loopne mov push xchg in (bad) jrcxz outsl mov xchg or je mov (bad) ficom xor cltd stos enterq sbb addr32 (bad) fmulp sub scas mov mov pop int iretw rex.WRB mov (bad) in gs lret shl rclb movsl callq lods fs rclb xchg adc pop mov add je mov incl jrcxz test xchg pop stos pushq mov mov mul test cld pushq mov cltd sbb sbb jle fnop test fcompl sub pop lret cmp fildl cli rex.RXB mov rex.B pop lods int3 add loopne fbstp or cmpsl push incb out rex.W jno add push outsl (bad) retq rex.RXB mov xchg xchg nop lret mov retq jg scas out std (bad) (bad) mov or sub movabs repz sbb loopne push (bad) adc (bad) loopne hlt stos rcl callq sahf xor jrcxz adc rex.WRXB mov (bad) fwait (bad) (bad) outsl (bad) (bad) (bad) mov stc mov pushq (bad) jrcxz in pop rex.WRX xchg es int (bad) sbb adc mov pop xor sahf je nop xchg loopne jl rex.WRB mov xor sbb xchg (bad) outsl cmpsb and sbb mov mov xlat lahf pop rol pop xor repz rex.WRB loope mov (bad) cmpsb xchg fisttp outsl xchg rex.XB (bad) fdivrl popfq je nop sub rcrl (bad) pop adc lea rex.RXB insl movabs rex.WB and outsb rex.WX xchg pop lahf sub iret int3 int3 jae xor add cmp ja sub (bad) mov stos jmp (bad) std or ror pop repz in xlat imul mov rcl shrb out cltd push mov cmc fld jle jp loopne mov movsb pop rex.R rex.WB cmc ja mov retq out (bad) loop lock movsl push enterq movslq (bad) lahf rex.WRXB (bad) lmsw (bad) xchg jbe scas adc jo callq jnp and xor mov hlt rolb notl lods nop xchg push rex.W stc (bad) out sub nop test lret mov jge xchg (bad) jmp rex.WB test pop clc rex.WRXB jae (bad) mov (bad) in cwtl rex mov and rex.WRXB movslq movsb (bad) movsl retq mov mov (bad) (bad) (bad) shrl cs cmc (bad) push outsl or rex.WXB and mov (bad) insl rorl and or pushfq retq add xchg lea je imul mov push pop insb movsb push andl cmp in push outsl test add mov sahf (bad) (bad) push jmp in sub adc (bad) (bad) mov icebp movabs and mov sbb (bad) sub std add sbb je or sub adc mov or mov pop rex.XB icebp out jg cmp push mov xor xchg scas xor xor (bad) rclb lret push callq leaveq in mov and mov jg movsb sub rex.WR jo lods fnstsw xor insb (bad) jbe (bad) push (bad) int (bad) gs xchg outsb rex.WX scas loop (bad) and xchg rolb push imul cmp hlt cmp xchg iret xor cmpsl sbb scas (bad) xor push retq (bad) rex.W rcrb add mov sbb (bad) mov sbb jb js sahf xlat (bad) pop adc (bad) movsl mov out adc test (bad) movsl cmpsb and sbb (bad) (bad) jle out and int movabs idivb adc adc cmp mov pushfq xchg movsl push xchg adc (bad) addr32 jae rex.RX push sahf mov pop cwtl ja adc movabs rex.WRXB jrcxz stos (bad) jns add (bad) pop fcomip movsl rex.W (bad) cwtl rex.RX (bad) jno js mov (bad) sahf loope pushfq stc rex.WRXB fldt test or jrcxz mov (bad) gs sbb fist jne nop cli mulb mov mov (bad) mov mov rex.WRXB mov xchg rex.WXB rex.RXB rex.RXB pushfq push cmpsb fucomp push mov pop mov fdivs ja scas in xchg addr32 (bad) jg xchg cmp xchg xchg orl movabs sbb je xchg std stos lods addr32 pushq jge lret orl xchg jrcxz cld (bad) test insl adc jb xchg mov pop mov data16 mov nop (bad) or (bad) (bad) fild (bad) jnp lods rcl outsl rex.WRXB xchg enterq adc adc (bad) sbb (bad) mov pop idivb sbb xor jl ficomp cmc rex.WX jae (bad) rcrl xor callq pop fildl cmc (bad) (bad) push and (bad) lea cwtl fstp (bad) adcl push cmc mov retq and (bad) leaveq mov pop outsb outsl or out sub xchg nop (bad) gs rex.WRB mov sub xchg pushq outsl jmp (bad) rex.WR rex.WB push nop sbb pop sahf mov sub lock (bad) jbe scas sbb jmp addr32 pop mov movslq nop mov mov mov cmp jmp test lahf rex.WB (bad) (bad) out adc stos jrcxz cltd lock pushfq movabs (bad) callq adc lods fstpl mov (bad) (bad) mov jmp adc int outsl sbb xor repnz mov mov jnp cmp (bad) sti rex.WB add (bad) lea fnsave test xchg cmp jno fcmovu cltd mov iret jrcxz (bad) retq xor xor pop rex.RB (bad) (bad) mov sahf adc gs movslq mov out pushq sahf sub push sbb xchg and movslq scas out (bad) rex.RX (bad) lods sbb xchg (bad) cmp jb fmull (bad) rex.WB adc sub xor (bad) xchg (bad) cmp mov cmpsb mov xor rclb loopne out test adc cmp mov out je and rex.WXB (bad) outsl mov cmc xchg clc (bad) int lea rex.WRX test out lea xchg (bad) test hlt movabs mov pop lods jrcxz push jne rex.WX rex.WRB (bad) pop push stos (bad) rex.WXB xchg mov insl xchg outsl mov (bad) cs cmp sbb (bad) gs jle rex.WX icebp (bad) in cmp xchg adc movaps (bad) mov xchg jrcxz stc adc (bad) loopne push or loop and add lea sbbb (bad) mov jg faddp (bad) (bad) and xchg mov push je and (bad) decb push (bad) jb jns incb cwtl (bad) (bad) data16 add fldl movabs scas sub (bad) mov push mov and (bad) rex.XB rex.R pop fwait (bad) lcall (bad) gs in sub (bad) cmp nop jg stc (bad) loope mov pop (bad) rex.WRB mov jmp out nop pop xchg push xchg (bad) lea xchg (bad) subl adc scas or jg,pt (bad) outsl adc rex.RXB mov adc add adc xchg insl xchg addr32 jmp mov (bad) xchg pushfq mov rex.WRXB ds and movsb gs cmp ds mov (bad) fwait push movabs in or xchg cld (bad) jne sbbl addr32 jg,pt xchg clc fiadd xchg mov rex.WX imul (bad) addr32 mov or (bad) (bad) push pop movabs addl add xchg adc (bad) jg xchg add mov (bad) movslq and int3 sub (bad) xchg jg subl (bad) mov pop (bad) (bad) fnsave adc inc mov rex.WRB rex.W fldenv xorl mov adcl mov imul push in (bad) rex.RXB rex.RXB mov add (bad) (bad) ss sarb shll rex.WB pop cwtl movabs movsb rex.WRX in jmp (bad) orb rex.RXB (bad) cmc mov pop movsl mov add jge mov sbb (bad) (bad) cld jge lea (bad) add mov (bad) jrcxz popfq xlat lahf lret fcmovnb gs rcr jbe rorb mov out sub (bad) adc fwait movabs (bad) xchg pop stc mov cwtl xchg lret xchg mov add push lods je fsts pop (bad) fucom test stos xchg (bad) pop test scas (bad) (bad) rex.WRX movabs mov callq int (bad) jae adc push shll rorb jae mov fidiv rex.WRB mov pop pushq ficom retq rex.RX test mov hlt mov (bad) pop cmp (bad) push ficom xchg rex.WXB xchg jbe (bad) mov cwtl insb mov mov (bad) int3 mov stc pop sarb (bad) xor xchg jnp rex.WRB rorl (bad) add mov mov outsl push (bad) cmpb adc fildl (bad) lahf scas jle movsl sub lea rex.RB pop (bad) insl pop (bad) (bad) (bad) xchg sub or push (bad) cwtl movabs jge mov cmp or je fimul pop fcmovbe repz scas rex.WRXB sub mov xchg jrcxz jno stc jne lods mov retq cld movabs lret (bad) pop (bad) popfq mov iret xchg cmp adc loop in (bad) rcr or int3 rclb (bad) neg mov fst ja xorb retq pop movsl lea mov xlat adcb loop fcomi xchg adc and mov rex.WR ja fild lods adc movsb lea ds je repz sub xchg adc ja outsl scas hlt ss cmp mov movabs out movabs rex.X or mov cmpsb lahf cmp sub mov xchg jmp pop mov loop data16 shrl mov jae (bad) add jle popfq rcrl pop jbe sahf movsb mov xchg lret cmpsb std (bad) rex.X cmp jge imul fcomp add (bad) pop jle xchg imul out mov pop mov callq int and lods add loop insb shlb xor (bad) jg xchg pushfq icebp mov and xor xchg (bad) cmc and rex.WX orl pushfq (bad) xor rex.WRB sub pop movslq push movabs mov stos je xchg jge mov (bad) rorl rex.WRXB adc pop rex.WRXB jg (bad) mov push (bad) push and (bad) in rex.WRB (bad) mov cmpsb (bad) jbe (bad) (bad) mov (bad) rex.RB subl stc je js cmp mov insl divl sysret (bad) mov and or (bad) fmull jb xchg sub movabs (bad) (bad) (bad) fsubrs rex.WR or imul rcrb (bad) rex.WX data16 in (bad) (bad) int3 xchg movabs rex.WRX cmp int3 push sub shr or in xchg xchg data16 sti xor iretq (bad) xchg movabs nop sub orl xchg xchg test (bad) repz jg (bad) cmp mov (bad) and or test sti cld (bad) push outsl sub xor or addr32 jmp adc xchg iret (bad) insb outsl or ror jmpq mov sarl rex.WRXB rex.X (bad) rex.XB adc icebp (bad) pushq push (bad) rex.RX xor mov xchg scas mov ficompl test iret or test rex.WX fs movabs movslq (bad) outsb sahf loope ds out in push mov or mov rex.XB or or pop xor and (bad) mov rex.WXB (bad) out xchg xchg jo cmpsl loope rex.W sahf sahf cmp sbb xlat js jnp or and (bad) cmpsb loope or jnp adc sbb (bad) cmpsb xchg callq psrlq xchg pop lahf sub int sub out ja out add (bad) loop out cmp out jbe adc repz mov xchg fidivrl movsl fildl (bad) fs rex.WRB and mov (bad) adc xchg rex.RB or es xchg jae outsl fimull movslq rex.WRX cmp cltd rcll (bad) jo (bad) xor (bad) (bad) push rex.B pop (bad) cmp push mov leaveq movabs rex.R sti (bad) gs rex.X (bad) ds rcrl mov sar ja (bad) int xchg (bad) ja mov cmp movabs (bad) enterq cmp rex.X mov callq push rex jl lahf mov jle loop fisubrl (bad) loopne jrcxz xor (bad) shlb cs and (bad) sbb xchg cld rex.RXB rex.XB callq mov lea rorl movabs xlat push sti iret outsl jl sub mov iret subl mov jbe (bad) (bad) or fistp movabs rex.RX jae outsb es ficomp (bad) outsl loop adc (bad) stos cmc (bad) and xchg out rex.B mov sub xchg xchg test xchg jnp rex.WRX rex.WRXB jp notl pop nop pop (bad) sbb push rex.X jo rex int3 lret (bad) mov test sbb (bad) shll (bad) (bad) pop leaveq jns jae sbb rorb in xchg sub out outsl jae mov je mov pop lahf rorl frstor rex.WX shlb push iret std cmp jl shrb out push js sbb (bad) fwait rcrl je (bad) cmp jge fstpt sarb rex.WB je (bad) mov rex.WRB enterq (bad) adc mov mov adc (bad) (bad) jl adc movabs addl mov fcoml add jbe outsb jle (bad) or push in std or data16 (bad) cmpsl adc fiaddl rex.RB adc cmp sbb jae (bad) pop movl xor (bad) sti in gs or (bad) imul mov ja cwtl jmp outsb xchg pop (bad) gs fcoml lahf xchg xor rex.R mov xchg push lret movsl cs mov (bad) (bad) push cmpsl (bad) (bad) adc fldcw jmpq and repz outsl pushq leaveq and xor out and jbe mov xchg rex.WRB adc add mov std sahf cmp and jrcxz es mov xchg addr32 fwait enterq roll rex.X iret pushq jle xchg pop movsl stc (bad) jge jrcxz xchg gs sub rex.WRX sahf in (bad) stos (bad) movsb fistpl or mov jno (bad) jmpq adc rex.WRB fwait (bad) lods pop jb jne pop jnp lret lea iret (bad) movsl mov imul xchg xchg iret xchg xchg (bad) (bad) bswap iret cmp insb iret (bad) rex.RX (bad) loop rex.RX mov adc movabs jno sub xchg rex.WRB in cmp sbb xchg jmp (bad) mov mov test xchg sbb pop scas iret (bad) int (bad) scas (bad) lret and sub shl jno adc (bad) movabs rex.WRXB adc jns mov xchg in lock clc jns movsl xchg retq loope (bad) (bad) mov sbb movabs sub je pushfq rex.WR (bad) leaveq jle rcrb stos test sub outsl cmp sub test out retq jae (bad) rex.WX (bad) out add push mov (bad) cmp mov jno std jbe rex.WB sub pushfq mov movabs shll rex.WRB lods rex.WX rex.WRX (bad) xor (bad) xchg xchg stos push (bad) rex.WRXB fisub rex.XB add shrb shll cmp rex sbbl and push fsubrs (bad) sub xchg (bad) adc (bad) cmp test xchg (bad) fs mov out (bad) push mov (bad) jrcxz (bad) (bad) cmc rex.WB mov or movsl pushq (bad) fnstsw ficompl mov (bad) in rex.R sbb push pop sbb pop jbe xor mov adc add in xchg fmuls push addb (bad) add xlat outsl fdivl adc or cmp movabs xor stos mov (bad) and push cmp outsb ss je fwait adc (bad) fiadd fucom adc mov xchg xchg (bad) adc movsb movsb pop lods in xchg lods cltd push and sahf sub mov push stc jo xchg lret outsl imul and icebp sbb xchg xchg xor (bad) scas cmpsb and fs (bad) int xchg scas mov mov xchg pop and insb cmp (bad) movsb xor rex.WRXB jg mov sub ficom rex.RB leaveq lock sub movabs pop jae pop loopne sarq (bad) movabs jmp pcmpeqb lods sub (bad) push xchg push (bad) sbb (bad) cwtl pushfq jb es cmpsb jns jo rcrb (bad) mov outsl test stos fimul jnp xor mov lock rsqrtps cmp mov mov mov leaveq jne cmp cli push push mov rex.WRXB nop jb xchg or xor je sbb mov sbb pushq mov lods repnz cwtl fisttp rex.WB (bad) mov (bad) xchg pop je iret cld ja pushq imul (bad) mov popfq imull sbb (bad) sub (bad) jo sub adc jle and stos rex.B cs retq in or test add test push movsl (bad) xor (bad) pop xor xchg outsb scas or (bad) (bad) (bad) xchg fistpl adc and sbb xchg xchg mov callq mov sub xchg push data16 mov (bad) in mov mov (bad) mov (bad) movabs (bad) xlat (bad) std ss xchg movabs test xchg sbb rex.WRX mov rex.WX jmpq (bad) adc xchg rex.WRXB sbb cli rex.RX and add (bad) fwait rex.RXB mov xchg ds outsl or xchg sub fildl cmp jg jbe (bad) (bad) rex.RXB outsl cwtl (bad) jge loopne jg negl (bad) (bad) mov rex.XB cwtl add jp cmpsl (bad) xlat or out repz fs test mov cmp scas jo iret mov int3 fcmovnbe add jmpq (bad) (bad) hlt movsl push mov (bad) popfq mov je (bad) pop (bad) fsubs sbb xchg (bad) stos pop jb test (bad) jae add test jrcxz xchg jle (bad) xchg nop (bad) ficomp fstpl in adc pop lods adc or iret jo (bad) ficoml xor mov retq shll and icebp in xlat in sahf lods ss faddp xchg popfq ja mov cld push fstpl imul sub mov cli pop cltd push (bad) rex.WB cmpsl (bad) pop lods pop test (bad) (bad) (bad) push push xchg (bad) std mov fsubrs cltd std sbb repz in rex.R lahf (bad) fstl sub (bad) fcomps jrcxz xchg mov vcomisd ss cld decl retq xchg je sub xor mov nop and and (bad) (bad) xchg jg sahf leaveq and jbe,pn (bad) sbb movsb in movslq mov (bad) push fist cltd imul fisubr cmpsl retq rex rex.WB (bad) lods jb and pop push (bad) jo out sbb mov xchg mov movb rex.WX sbb mov movslq jno mov pop (bad) push mov jo (bad) sbb rex.WXB mov nop pushfq xor pop mov fcmovb retq lret (bad) mov sbb (bad) (bad) (bad) sbb xlat cmp or (bad) sbbl idiv nop imul xchg notb (bad) jne in icebp insb jp int lock or xchg in fwait cwtl add and mov sbb pop orl add xorl and (bad) rex.WRX data16 jl xchg (bad) out test sub push shrb stos insl addr32 push (bad) and (bad) cwtl data16 repz or sahf jb fistl (bad) cmpsl adc cltd insl jge lahf (bad) in xlat xor (bad) andl outsl mov jno fidivr adc mov loope test cmc popfq (bad) ffree jbe (bad) rex.WRX rex.WRXB sub add xchg sbb cwtl (bad) mov in mov je fnstcw (bad) flds mov mov mov cltd sar sbb (bad) xchg (bad) push and xchg pop in pushfq fxch push adc rex.WRXB ficomp pushq lahf rorb adc rex.B rex.WRX lea fwait mov add sbb loopne cmp vcmpps rex.RX pushq frstor loope pushfq pop pavgw scas fcomi rex.XB add ffree lea test std ficompl mull add xchg lea movsb cmpsl insb and clc mov cmpsl jbe add fdiv mov add (bad) (bad) scas (bad) cmp loope ja retq cld push jg adc (bad) (bad) sets popq divl jle movabs (bad) outsl (bad) retq and pop movsl mov je jbe (bad) fild sarl movabs js (bad) jrcxz,pt lods push cmpsb imul mov callq sbbl mov push cli xchg pop rex.RXB es test push iret mov fisttpll retq insb mov (bad) (bad) imul movsb retq (bad) mov rex.WRB adc sbb (bad) (bad) push scas sbb cwtl repz (bad) mov (bad) scas sahf jrcxz fstl mov je mov mov outsl adc mov mul mov (bad) js jmp (bad) loopne xchg xorl rex.XB cs cmpsl mov (bad) mov mov pop sub or outsl cmpsb adc rex.WR xchg inc jrcxz fisubr cld pushfq insb jp scas adc or and movsb mov insl (bad) callq adc (bad) shrl mov test cmc lahf cmp movsb push iret cltd or (bad) movsl shlb (bad) mov pushq clc sbbl fcomps sbb mov (bad) (bad) lea (bad) mov xor mov nop sahf rex.WRXB adc movabs ss xchg data16 fstl fsubs xchg lret xlat sarb sbb mov cmpsl pop in add (bad) mov sbb (bad) jrcxz add lret cmpsl xchg callq fdivl test test jbe xchg or adc adc test sahf callq mov jg mov xchg lods rex.WRXB movabs xchg pminsw or int sub sub sbb stos or (bad) (bad) callq adcb mov (bad) (bad) adc cld mov (bad) je pop sub movabs xor sbb (bad) movl mov (bad) or (bad) xchg jbe test jmp sbb adc or mov test fadds mov xchg cmpsb xchg out push (bad) in loop repz (bad) xorb cmpsb mov jrcxz xchg mov mov (bad) add nop (bad) jbe (bad) (bad) (bad) mov xchg fcomps jmpq fcomps adc movswl sub adc cmp (bad) rex.W sbb outsl addr32 mov xchg pushq loope (bad) (bad) xchg (bad) mov movabs push xor scas ja xchg hlt sub xor cltd (bad) outsl pop out add retq mov ss clc adc mov and add jae or cmpsl fs mov cmp cmp es add mov lret test cmp lahf push rex.WB mov rex.WX sbb sbb or incl je xor cmp kmovb lea fwait sub sbb and xchg cmp lret (bad) (bad) scas xchg xchg jmp rex.WRB (bad) callq adc (bad) xor pushq adc movabs inc add fldl out sahf pop imul pop sti sbb jle adc rex.WRXB jg cltd xchg xor cmp loope outsl xchg test test pushq loope fidivr (bad) rex.RXB add jb mov outsl mov jne enterq cli mov and rex.WRXB je scas sarl adc and rex.WRB sahf cmp push mov in or jle jrcxz sub pushfq rex.WRXB gs jnp xchg cltd (bad) cmpsb xchg rcrl (bad) xor lods pop jmp cmp mov jle add (bad) or mov rex.WXB stos mov xchg ja (bad) nop outsl (bad) xchg mov xchg adc (bad) sub xchg and xchg test xchg mov frstor out and sub rex.RXB (bad) cmpsl test sti mov scas es mov (bad) sub ds mov sub mov cld rex.RX (bad) and cltd imul mov cs or pop (bad) jrcxz stos cltd jl (bad) shr outsl stos (bad) mov outsb divl roll xchg hlt (bad) mov imul in (bad) outsb mov mov pushq add mov push xchg (bad) push push mov addr32 stos push xchg adc and (bad) (bad) (bad) mov xchg outsl rex.WRXB hlt lgs cmpsb (bad) int adc lsl outsl sub rorb loop cwtl cld xchg xlat cmp shl int outsl mov mov lods mov cmp mov rol mov adc (bad) xchg (bad) sub repz and xlat addr32 rorl js sbb (bad) movabs repz cmp movabs (bad) mov sahf rex.WB mov lods sbb sbb cmp mov mov push or (bad) xchg cmpsl pop adc mov or cli mov (bad) (bad) cmp (bad) int3 outsl movabs rcrl sub mov push mov rex.WRXB fiaddl rex.WB and xchg fidiv sbb mov mov push sub mov pop loope retq ror pop callq rex.WRX sbb cmp xchg fistpl iret xchg mov mov movsl popfq (bad) xchg adcl adcl add scas push rex.XB popfq jno jmpq retq mov movsl subl movsb sarb rex.RB mov retq mov cmp fidivr xchg push cmc jae pop or scas in mov xlat adc (bad) leaveq test mov jge xchg pushq lea cwtl (bad) xor mov jbe cmpsl (bad) mov (bad) xor mov (bad) push fmul adc jmp nop mov pop mov stc push (bad) (bad) adc (bad) pushfq popfq adc xchg rorl pop lret sub fimul (bad) jmpq xchg nop (bad) xchg jns cmp mov xchg mov movabs or lcall retq xchg xor ds xchg and mov (bad) sub (bad) (bad) cmc cmp xchg add add movabs (bad) (bad) ds jmp push xlat jmpq sbb jbe xchg adc iret movb vmovhps sbb iret popfq jle (bad) sub loopne,pn jg pop (bad) xchg mov jge rcrl rex.RX xor lods jmp shlb pop mov mov (bad) (bad) out hlt adc push pop lods rex.WRB mov jmp icebp sahf mov stc sub outsb in pop stc rex.WRB push out (bad) imul pop adc es and scas stos rex.WRX (bad) add stos (bad) (bad) cwtl cltd mov rex.WR fwait add movslq cld std push (bad) (bad) mov rex.WRX (bad) mov (bad) or fwait (bad) mov pop mov push loopne stc pushfq fbstp loopne je (bad) outsl xor push add fnstsw sub js sbb mul (bad) shl mov xchg fistpl (bad) (bad) (bad) mov push sub in lods mov jg (bad) and xchg jmp add or pop mov (bad) (bad) mov nop pop insb iret pop sub jnp jae lea pop jg test jbe (bad) add insb int mov fsubrs test (bad) lods cld cmp push in adc (bad) mov xchg jbe or mov xchg or mov and sbb je rex.WRX rex.WRXB leaveq enterq and (bad) movabs (bad) mov jge jb jbe xchg sbb xchg in movsb movabs repz pop (bad) (bad) sbb stos mov jnp xchg rex.R nop and jg mov jle mov hlt push (bad) adc xchg mov mov sti fmuls int3 add out pop mov nop enterq mov xchg ds sub xor loope pop rex.RXB movabs adc pushfq adc rcrb cmpsl (bad) pop (bad) add outsl movsl clc adc nop (bad) mov (bad) cltd pushq gs (bad) xchg enterq scas mov (bad) sub sbb xor lea (bad) cli nop sub or and and cmp mov xor xchg sub rolb (bad) (bad) push (bad) hlt jg in mov int3 xchg xlat jmp adc (bad) (bad) scas jb xchg fadds lahf jl pushq (bad) test xchg cld loope push icebp (bad) rex.WRXB nop (bad) (bad) pop movsb test nop sbb or xchg fistpl adc pop mov movsb mov jnp sbb (bad) (bad) in (bad) sti or cmp loope (bad) (bad) (bad) rex.WX rex.RXB (bad) rex.RXB cmp xchg jrcxz decl in bnd (bad) push sbb insl movabs mov repz (bad) outsl data16 loope rex.WRB (bad) rcll jmp xchg xchg (bad) addb (bad) sub shrb mov rex.WRB outsb (bad) or jnp movabs jg (bad) jbe (bad) (bad) and fidiv cltd xchg nop pop (bad) (bad) movsb push (bad) cmpsb mov (bad) stos (bad) shr (bad) lods pop sbb cwtl sbb jrcxz lcall mov xchg jg jp jg xchg int3 sub rex.WR cltd jne fldl jbe (bad) sub movabs mov cmpsb test jle movabs hlt jnp scas movslq or sahf in cs push mov lahf jae cmpsb scas and (bad) sub retq xlat loopne xor shlb rex.WRB sub xor outsb sbb (bad) mov loopne adc mov (bad) iret nop rex.WRB rex.WRB cs cltd pushq jno jne nop outsl add (bad) mov sbb mov mov push lea jbe sub sti gs inc cltd (bad) (bad) gs and or addr32 andl shlb (bad) test stos add pushfq enterq (bad) out addr32 push or mov cld push (bad) rex.XB adc lahf (bad) pop xor xchg mov outsl fs xchg mov push rex.WRB adc or sbbl xchg loope int3 outsl (bad) imul and jge or (bad) xchg and adc (bad) xchg pop retq jo xor add (bad) mov mov pop pop jrcxz mov push out scas (bad) mov outsl scas iret mov std je rex.XB fsubrl lods xchg (bad) rcll (bad) mov sbb rex.WX xor stos xchg and xchg cmpl or outsl lret push test xchg js fldcw xchg out adc or xchg rex.X xchg movabs mov pushq shrl jbe andl sbb rex adc rclb jns xor pop pushq out (bad) fwait and pop retq (bad) pop popfq adcl pop nop sub icebp movabs std jg rcll (bad) xor cmpsl adc (bad) test jmpq nop rex.RX rex.X cmpl pop lret (bad) push pushq push (bad) rex.W (bad) lock (bad) retq sub cmp or and shrb std sub paddb xchg (bad) sub rex.WRX scas push rorl xchg and pop loopne and cli xchg pop loope in add add scas (bad) jle nop mov sub lods (bad) (bad) in movabs lods rex.X xor sahf mov pushq (bad) pushfq jnp (bad) jbe adc mov xchg hlt jg in adc cmpsl lret in mov repz (bad) and and lods push (bad) mov mov ds xchg movsb push in cmp adc repz out fidivl jbe rex.X jnp jrcxz (bad) (bad) and insb cmp fsubrp adc sub (bad) (bad) jle (bad) mov and mov cmp (bad) imulb (bad) rex.W mov xor callq outsl xor (bad) (bad) mov (bad) lock (bad) cld xor rcrb sub es mov sbb repz jg fmull and cmpsl lea cltd mov jnp (bad) jg rex.WRXB (bad) sub (bad) pop rclb pop adc mov cmpsl rex.WRB icebp repz callq retq movsb loope xor sub (bad) cld jg jno sbb or loopne mov leaveq enterq pop adc add (bad) jbe rex.WRB rex.R movsl mov sub ds jmpq and xchg (bad) (bad) xlat mov movslq and push jb (bad) fcoms jmp (bad) ficom int3 movslq sbb ficom adc and sbb (bad) ds data16 loopne jrcxz in fdivs push (bad) lea movabs xchg xchg (bad) adc cmp (bad) pushq cmp cwtl cmp pushq (bad) sbb movabs in mov (bad) jrcxz js stos jp rex.B jb mov repnz or not fidivl jrcxz push xchg xchg or mov mul pushq (bad) movabs xchg pushq push mov mov subl clc xchg jmp xor pop sub sarb cld sbb sub jl pushfq (bad) xor (bad) xchg pushfq rex.WXB icebp repz subps pushfq mov xchg movabs rex.WRXB hlt rcl add sub (bad) jmp lea (bad) sbb (bad) mov mov shrl or sbb xor lahf xlat gs gs lock sahf cmpsl xlat adc movabs cmpsl cli mov (bad) fstpl out or xchg (bad) scas (bad) mov in fwait add cwtl mov insl cmp and cmpsl sbb out (bad) (bad) jo (bad) retq in nop mov adc rex.WXB (bad) cld pushq (bad) adc fwait pushq cmp lret jmp push add (bad) fsubs pop (bad) callq xor jns stc mov (bad) movslq mov (bad) (bad) cltd test shl or rex.RXB (bad) jg xor xchg fsubl mov xor (bad) adc fcoms shr mov or xchg sbb movabs add fadds mov sbb adcl lods fdivr mov fwait fs rex.R jbe addl lea mov mov xchg or fs push push (bad) (bad) rex.WXB (bad) push xchg rclb lods repz jg scas outsl jmp sahf cmpsb fstl cmpsb rolb movsl (bad) pmaddwd xchg popfq pop pop mov or pop imul retq movslq (bad) es (bad) mov fcmovb cmpsl adc iret and rex.WRXB imulb mov add lahf movabs pop test fsts ficompl xchg add pop fstpl adcl mov pop gs sbb fmull mov mov xchg loope in pop pop iret test lods lret mov std and and cmpsl jrcxz cld mov and (bad) mov out xchg rcrb nop xor movsb push rclb cld movabs test pushq cmp mov psubb adc in cli fidiv std mov (bad) sub cwtl xor repz (bad) (bad) mov pop (bad) jnp xchg sti pcmpeqb callq (bad) loope pop add (bad) (bad) pop cwtl callq imul fimull (bad) pop lret mov retq add fwait callq pop sbb mov adc jns mov cltd mov rex.WRX adc xchg rex.WXB outsl in or xchg iret add (bad) divb fnstsw rex.RB (bad) adc sti fistl subl pop (bad) adc movsb (bad) scas mov loop jrcxz lahf jbe (bad) jl (bad) (bad) pop cmpsl sbbl imul add mov rorl rclb xchg movslq movabs (bad) out mov push sbb or (bad) (bad) cwtl int3 xlat lods je jg jge mov (bad) cli xchg (bad) adc cmp jmp xchg (bad) mov pop sti xchg or movsl fstpl fistp (bad) fs roll xchg pop ficom rex.WRX xchg lea rex.XB test and push and imul loop sub (bad) push movsb jmpq sbb sbb sbb jno fnsave (bad) add and mov mov in (bad) movabs mov mov movabs push jrcxz rex.WR rex.RB mov popfq mov ja xlat lahf adc jo mov (bad) ja negl out (bad) (bad) push (bad) jae push mov orl (bad) outsb (bad) cli rex.WX loope hlt (bad) jle test pop sbb adc in ss fisubr adc (bad) push rcr (bad) iret fldl xchg or neg rex.WB (bad) rex.WRX cmc jbe xor rex.XB fs jg pop and fdivr rorl jbe add cli movsb in (bad) rcl retq or mov xlat mov lahf stc test mov mov (bad) jae mov and add rex.RB and (bad) (bad) push rex.X cmp movsb (bad) (bad) pushq sti rex.WB jrcxz mov (bad) rex.W pop cmp fisubrl (bad) lods xchg hlt rex.WX repz (bad) xorl cmp adc movsl (bad) (bad) scas and add rex.X sbb sub xchg and je or (bad) (bad) xor jle (bad) xor pushfq fcmovbe movsl (bad) sbb fidivr jle or adc rex.RXB lods mov movslq pop data16 nop or (bad) ficoml xchg movsb rex.R mov cmpsb retq fisttpll fstpt fldl (bad) fstpt (bad) xor mov in fcoms (bad) test loopne (bad) or xchg pop negl jb pushfq pop jp iret rex.WXB jge or jg and enterq sub adc (bad) or jbe sahf rcll push ror rex lahf (bad) ficompl xchg (bad) (bad) mov (bad) jmp adc xchg stc insb xor mov leaveq xor imul pop loopne insb mov (bad) push adc test rex.RX (bad) add movabs (bad) neg scas repz (bad) in add outsb adc xchg (bad) mov and scas mov xor ja jns rorl cmp pushq xchg stc leaveq rex.RXB retq out sti push xorl enterq xchg push (bad) rex.R callq outsb mov (bad) adc xchg out rex.R sub pushq cwtl and add jmp mov (bad) xchg lods (bad) lods imul rex.WB mov loopne push push (bad) push pop rclb imul fs imull mov or cmp stos rex.WRXB xor adc sti xchg add adc loopne pop fisubr push and rclb popfq (bad) fsubp ficomp mov pop (bad) and xor (bad) xchg push (bad) rex.WRXB mov popq popfq je mov imulb je,pn (bad) xchg xchg cli adc hlt pop adc xorb mov (bad) (bad) movq mov in rcr add iret (bad) outsl notb lahf rex.B cmp jrcxz pop movabs pushq es outsl pushfq jo mov sbbl jns cwtl cmp fisttpll xchg test xchg rex.W ds (bad) push xor rex.WRXB mulb (bad) and mov mov rex.RXB rex.WRX ds xchg jb,pt xchg mov (bad) push loop adc (bad) je cmp xchg xor jl adc or pop (bad) cmc add (bad) ja sub (bad) (bad) int3 movsb cmp (bad) lea out out xor je sbb outsb mov lahf retq jo xlat xchg je (bad) fidivl pop rex.WRB rex.WR movslq add jmpq (bad) and outsl sahf jnp jbe movsl movzwl and rex.WR (bad) pop and xchg cmpsb (bad) sub rex.WXB data16 in jbe (bad) (bad) outsl (bad) imul addr32 pushq pop push orl (bad) pop lea faddl (bad) mov out mov fwait (bad) mov fildl icebp cwtl jmp xchg lods shr mov mov sbb sub scas mov jmpq rex.WB (bad) vmwrite insl movsb cltd callw push ss (bad) (bad) adcl xchg add (bad) pushq xchg popfq lahf jg (bad) test (bad) sbb (bad) jl lahf push cmp mov jbe out mov shrl xor test rex.RB cmp mov fwait rorl (bad) (bad) je rex.RB loope (bad) pushfq add xchg jne cltd sub cwtl cmpsb (bad) pop or in orl mov rex.B retq repnz movb test and (bad) or jrcxz cmp (bad) mov xchg lods rex.X (bad) sahf mov jmpq lahf xchg push and mov pop and lahf mov jo mov data16 xlat xchg rex sub cmp outsl push rex.RXB xor xchg (bad) sti mov and xchg jo rex.RB sub repz (bad) lret adc xor sbb mov pop (bad) xchg mov mov divl shll int mov rex.RX iret addr32 jnp faddl std jmpq (bad) xor (bad) movsb fsubrl adc lods cmp loop (bad) cmp fidivr lods (bad) sti movabs lods pop sarl mov rex.WR (bad) (bad) fldenv xchg xchg xchg lahf rex rex.RXB (bad) mov mov mov stos xchg shll (bad) (bad) sbb movsl pushfq mov xlat fstps cmp out mov (bad) (bad) add (bad) pop sahf cmp (bad) js cli cmpl jmp rex.X jae movabs loop jge enterq (bad) cwtl xchg ficom adc and jge popfq mov repz roll adc cmc (bad) mov (bad) jle orb sbb hlt mov je rex.R scas ds rex.WR adc cmp xchg xor cmp and mov (bad) mov (bad) adc pop (bad) lsl rex.X (bad) movabs fwait jo rex.W ss jae mov jo sub push xlat xchg movslq (bad) (bad) fs sub and xchg repnz pushq cli fstps (bad) pushfq mov nop jg mov and jrcxz mov int mov vshufpd pop (bad) jnp (bad) cmp (bad) stos add mov xor push loope notb rcrl xchg mov xchg add outsl mov xchg int subl maskmovq ss pop rex.RX (bad) scas test (bad) out push xchg js cmp xor and test mov sti lock sub mov pop cmp adc mov sbb jg (bad) int sbb gs fdiv fstl mov subl add and mov mov imul (bad) mov add popfq adc sbb rcrl push data16 pop push cwtl mov in and negb fdivs mov ds in loopne ds test idiv and sub push (bad) int scas (bad) sub movsb test mov movsb adc test (bad) (bad) lret mov out cltd retq movb movsl (bad) mov xor iret rex.X push (bad) jno mov pop xchg outsl and mov mov nop mov jns rex.WRX adc retq xchg outsl leaveq (bad) testl cmpsl xchg (bad) outsl mov insl stos (bad) (bad) mov (bad) cmp outsl (bad) pushq cmpsl mov movabs mov (bad) cld (bad) jle (bad) xchg pop pop ficomp outsb enterq pop lods jrcxz fcoml repz hlt jp callq sbb rex.X mov fnstcw sub xor add mov xchg iret (bad) movabs sbb lahf (bad) outsl rex.WX rex.WX ds xor test sbb pop jle rex.WR pop cltd loope (bad) je mull xchg cmp lods leaveq mov pushfq fwait rex.RXB (bad) ficompl xor lods add (bad) (bad) sbb (bad) push sub mov push fiadd rex.WXB outsl and outsb lods out (bad) xchg xchg xchg fmuls or testb callq cltd movabs (bad) fs xchg push imul mov cld mov rdpmc push (bad) or rex.WB (bad) stc fstl stos jnp push scas and jl cmp movabs mov adc adc in (bad) rex.X lea pop sbb movabs sbb movabs add sbb (bad) (bad) xchg xchg mov sarl push xchg (bad) cs repnz mov sti scas xor push mov pushq xchg outsl stos hlt lea and fisubl iret (bad) repnz scas rcl add shll ja outsl pushq push push rex.XB xor adc icebp std pop adc xor mov (bad) cwtl sbb test mov subl or stos fildll int3 xchg mov xor sub push or (bad) movabs rex.RXB stos add movabs add xor loopne mov jae rex.R es rcrb (bad) xchg mov rex.WB ja pushfq ficoml rcrb pop loope mov leaveq sub outsb rclb mov nop sahf mov (bad) rcl adcb popfq adc xor rcll fstl (bad) rex.W pop (bad) sbb popfq cwtd add imull bswap sahf sub adc xchg fdivs or scas push retq (bad) and rex.WRB fistpll xchg mov rex.WRXB (bad) jg mov lea sbb mov lock retq fisubr movsl push mov xor cmp (bad) jnp sbb jle jrcxz mov cmpsl add out (bad) ja (bad) adc mov xchg movl rex.R jbe add sbb adc ja in cmpb fwait fwait jo rep test (bad) sbb (bad) xchg (bad) nop fiaddl movsb je xchg in (bad) pushfq sbb or adcl shrl (bad) callq mov jnp mov mov (bad) mov hlt cmp adc (bad) test pushq (bad) rex.RX sbb and int sbb lock rex.WRX push rex.WX movabs (bad) cmpsb (bad) push js jle jge iret test sbb popfq (bad) adc sbb jg mov and (bad) pop (bad) (bad) jle lods fldl rex.WRXB jns mov sahf cmp (bad) mov adc push stos rex sbb or xchg xor pop pop adc (bad) mov or sbb sbb mov adc ficomp mov cmp and jl shrl mov mov sub jae mov jmp sbb cmp mov mov (bad) mov test mov pop int fisttpll (bad) pushq pushq or xlat nop rex.WB jne test mov fxch add rcrl loop (bad) or mov lea rex.WRB xchg jg (bad) out sub add lods (bad) adc sbb and sahf mul rcrb movabs sahf in rex.WRB lods or mov or pop xchg cltd iret (bad) xor fwait xor lods rex.WRXB clc xor jl xor in (bad) jge xor fisttp fadds mov (bad) or rex.WX mov outsl (bad) sbb test enterq rex.R sti pushfq (bad) fnstsw mov (bad) fnstsw xor xchg or and out (bad) jg rex.RB (bad) xchg push stc mov rex.RB fisub push stc mov sub ja outsl mov (bad) xchg rex.WX xchg xor callq mov (bad) in movabs and (bad) imul mov (bad) or mov stos or retq (bad) loop mov clc movabs (bad) adc imul (bad) (bad) ja jmp pop mov mov rcrl xor push stc sub and mov scas xchg (bad) in add cmp rex test fnstenv mov (bad) rex.WRXB pop and mov es (bad) xor leaveq rcll movabs pop je nop fmuls lods (bad) rex.WRXB mov (bad) add mov fs rex.WX xchg mov pop hlt int3 mov mov jmp sub (bad) add (bad) or jnp repz push loopne adc (bad) mov adc rex.WB outsl retq sub sbb sbb jg int3 xchg outsl mov xchg xchg insb iret movslq mov imul sbb (bad) jne (bad) in (bad) jle (bad) (bad) mov or adc jl movabs pushq or and adc (bad) lret rex.WR jrcxz xchg (bad) mov lock (bad) scas pop movabs fs (bad) mov cmp add sahf icebp sbb imul xchg (bad) mov mov sbb icebp repz sub cmpsl mov (bad) push int loope xchg test (bad) loopne jl jmp fisttpll cld xchg jb rex rex.WRB pop (bad) jnp cmc cmc pushq (bad) mov test push sbb test test jrcxz push in mov mov sbbl rex.WRB (bad) jb or jnp ds mov es shl xchg mov add rex.RB jp sti and cmpsl xchg js outsl lods movb lods (bad) (bad) rex.WB jmp rex.WXB nop xchg (bad) mov shl sub (bad) (bad) and mov out adc xchg add fdivl stos in movsl mov pop mov pop ficom movl or (bad) xlat loope cmpsb mov out lea add push mov mov nop pop (bad) popfq sub pushfq rorl mov sbb (bad) rex.XB xchg (bad) mov (bad) stos (bad) or enterq cmp mov repnz jne rex.RX shrb (bad) scas jne adc pushq (bad) mov (bad) outsb in (bad) out jbe movabs mov cltd icebp nop outsl xchg movsl cmp leaveq mov in rex.WR mov test (bad) mov sbb leaveq sub test cmp mov (bad) cmpsl and add jne rex.WRXB sub mov mov mov mov nop incl (bad) add xchg mov pop jnp (bad) (bad) mov or (bad) add fist (bad) mov sub clc jbe mov jle xchg add jnp xor push je shrb in and gs (bad) stos outsl mov or add or in add movsl sub xchg movswl loop pop (bad) xor rex.R cwtl rex.XB xchg or rorb and cs xchg loope jb (bad) sub sbb rex.WRX mov xchg pop out (bad) rex.WRX cmpsb int3 mov mov mov mov es sahf (bad) (bad) pop cltd (bad) sbb (bad) mov rep pop jae rex.RX cmp stos cmpsl popfq (bad) sub imul lods pop mov xlat fimul cltd in test (bad) xorb (bad) mov cmp rclb scas (bad) pop xchg xchg stos pushq retq pop push jg xchg scas mov rex.WRB cmpl xchg sub (bad) fstp (bad) sbb movabs leaveq rex.RXB or pushfq (bad) sahf (bad) nop mov xchg outsl repnz xor hlt retq lea (bad) (bad) callq in roll int flds rex.XB fucom enterq mov (bad) add (bad) rorb xchg (bad) cli adc and mov addr32 popq (bad) (bad) xchg pop je jne adc stc xor clc add adc sub or mov lret push rex.X repz lods movsb rex.WRXB xor ja int3 or sbbl and jnp mov stc (bad) mov mov xor rcrl je xchg rolb callq mov test negl movabs sub icebp std xorl pushq or (bad) int mov movsb cmpsb mov rex.RXB (bad) ss pushq lret add lret jbe (bad) (bad) pushq (bad) xchg lea (bad) (bad) xchg xlat xchg adc out mov (bad) xchg xchg sub movabs mov mov (bad) imul jbe push (bad) adc sbb xchg xor mov mov lret imul xor mov in lret pop fwait pop pop gs lock out stos rex.WRB cld cwtl outsl jns mov movsb rex.WRX addr32 jge cmp mov mov rex.XB rex.RB (bad) xor outsb outsl lcall mov std retq jg pop fimul rex.WX rex.RX (bad) mov and adc shl (bad) (bad) outsl (bad) add je (bad) nopl mov sub (bad) fisttp jbe ds stc and xchg ficom movsl (bad) pop movsl xlat nop mov (bad) mov (bad) rex.WX or lret push outsl lret xor fstpl xlat iret mov adc sti adc (bad) stos fs jmpq out pop mov fisubrl cmpsl popfq (bad) decb xchg (bad) (bad) and rex.WRX adc fnsave fcoms push push mov pop (bad) (bad) pop lods loopne mov xchg push jmpq (bad) rex.WRXB jmpq rex.WXB cmpsl lock movabs adc (bad) mov xchg rcrl mov in xor mov (bad) sub cmpl frstor cs cmp rex.WX mov loope loop negb rex.RX testl (bad) xor and (bad) (bad) fistpll pop rorl loop xchg movabs outsl (bad) movsl js test jbe xchg (bad) jge jnp cmp mov stc ficoml loopne iret mov retq mov sahf ficom cmp ss cmc test in std ficoml movabs in jle icebp rcrb mov movsb je (bad) rex.WR int3 mov sarb (bad) mov xchg pop sahf jmpq mov pushq push adc outsl (bad) cmp in xchg movl scas rex.WX rex.WXB add (bad) rex.WB xorb (bad) fwait rcrl and mov sbb out leaveq or xor (bad) mov int3 lea pop neg int rex.RX decl faddl scas mov push jae cli (bad) xlat mov jmp shrb rex.WB rex.RXB lahf imul shl or movabs or js (bad) (bad) pop (bad) sbb jnp mov and push (bad) cld xchg je rcrl fstpt (bad) repz jne leaveq and and ficompl movabs mov cmp xor (bad) sub mov (bad) mov push outsl sub gs cmc mov mov movabs mov repnz cli add fdivrs and sbb rex movabs sbb (bad) rex.X movabs rcrb outsl rcrl (bad) scas cmpsl jnp mov push and (bad) or (bad) (bad) rorb xchg (bad) scas or (bad) pushq (bad) pop sbbl pop and mov xchg mov sub ja sbb sbb fwait (bad) push pop mov rex.WRX fbld (bad) mov sub in sbb stos movabs rex.WB jno fldt enterq xchg push enterq jmpq fcmovnbe (bad) mov or rex.WRX (bad) out psubb pop rex.WRB pop iret and (bad) cld pushq retq movsb outsl ror (bad) (bad) cwtl mov fwait je sub movslq xchg (bad) jno mov mov fnstsw fisttpll adc shl (bad) (bad) xchg fsubrs fiadd add (bad) int sahf callq (bad) imulb lret fst pop jbe imul fiaddl push sbb push sbb (bad) (bad) rex.WRXB ss or popfq fsubr popfq shr adc (bad) xor stc (bad) and sbb sti nop cmpsb movabs (bad) icebp jnp (bad) jnp push gs sti rex.WX sbb xchg test cld rex.RXB sbb cmpsl std rex.WRB (bad) xchg adc mov mul xor rex.WRB add rcl sbb push push popfq out test movsl fwait jg (bad) out stc mov (bad) (bad) fdivs rex.RB xchg scas out (bad) adc outsl hlt rex.WR lret (bad) adc (bad) (bad) sbb sbb roll lods sbb mov int data16 (bad) cwtl mov pushfq fist sbb insl push (bad) mov pop xor movslq jbe add mov mov xchg fsts fwait sub xchg adc fmull or ljmp subl lock pop jns mov movabs xchg loopne shlb dec (bad) jbe (bad) lahf rex.R sti (bad) (bad) mov rcrb in rex.W (bad) callq mov sbb cmp lods pop add mov rcrl movabs rclb shl xchg fisttp rex.WRXB mov cmp push jge repnz rex.RXB (bad) (bad) callq rex.WX mov rex.WRXB sub movsb mov and pop rex.WRXB jle lret jmp and orl adc or mov (bad) in scas sbb jg (bad) pop mov pop pop mov xchg (bad) ljmp rcll rolb loopne rorl and (bad) clc loop (bad) (bad) jnp mov fwait outsl outsl xor fs imul mov movsb sub jb sub sbb mov (bad) rex.WXB loopne (bad) jge jrcxz mov (bad) cmp shrl mov xchg rex.WX adc outsl jb pop sbb iret lock mov lret pop outsl mov addl sbb (bad) add shrb js loopne mov loope push pushq push (bad) (bad) sub mov jrcxz rclb lods insl or cmp (bad) callq and cmc fwait addl jne mov movslq imul loope enterq (bad) cmp rex.WRX (bad) pushfq adc xchg jp sti or je orb fmull fisttpl xlat mov cmp mov (bad) mov sbb mov or (bad) jne rex.WX pop jnp fimul sbb int3 popq mov rex.WB repz or test jns cmc js (bad) mov fstpl or (bad) mov jae (bad) pop jl mov jle mov sbb mov pushq sbb adc cli xor jae mov rex.X repz xchg cmp mov je or mov push mov (bad) or rex.WRX ds cwtl test (bad) (bad) or (bad) mov pushq int3 sub mov sbb in mov jl mov jnp nop fisubrl mov retq or rex.W lea test (bad) ficompl xchg rcll mov (bad) cmp (bad) or (bad) pop imul scas rex.WB (bad) xlat adc jmp test (bad) callq je (bad) mulb rex.RX sbb (bad) pop outsl pop rex repnz (bad) out mov rex.R mov rex.RXB adc (bad) lea icebp jne callq mov rex.WRX cmpsl rex.XB (bad) sarb movabs movabs jo fisub cmpsl stos imul in std sub jmpq retq shrl sbb shl mov in fisubr outsl (bad) cmc movabs (bad) mov imul jb ficomp movsb adc icebp (bad) xchg lret (bad) and loop (bad) mov cmc or (bad) mov sbb fild (bad) sbb jbe lock jae sbb rex.W pushq mov jrcxz fimul push xchg outsl scas mov jg rorl (bad) cli xchg sahf loop pop fimull je outsl scas xor cmp rex.WXB ds and xor int mov repz cmp negb adc subl push int or mov sarb xchg rcll jno jg (bad) cld sub add (bad) sbb scas out adc xchg in mov rex.WRB rex.XB xlat lret in (bad) mov lret sbb insl xchg loop scas (bad) pop lret sbb mov shrb or mov cmc and cwtl fisub xlat lahf xchg (bad) push loopne (bad) movsl push jne (bad) push test xchg mov rex.XB cli jmpq or not mov retq push xor and pop stos iret fs sbb jge pushfq (bad) xchg pop (bad) outsl mov (bad) movabs fldl sahf nop mov loope in jl fnsave pushq popfq in rcl movslq mov jp (bad) mov xchg callq mov lret iret adc movsl cmp mov sti jl scas xchg or (bad) mov (bad) or and rex.X retq mov sidt and rex.X xchg add int add imul rex.RX sub pop (bad) xor (bad) push rcr rex.WR pop cwtl lea outsl rex.XB (bad) xchg mov jne mov pop jrcxz xchg (bad) out jmp jmp movsb outsb pop adc out add callq sbb adc pushq ficoml adc lods mov (bad) lret stos (bad) pushq xchg rex.WRXB scas jnp movsl fistl roll enterq xchg cmp jrcxz adcl sub adc insb xor mov mov out or mov xchg xchg cmpsl mov popfq xchg mov xchg rex.RX (bad) int3 mov ss test (bad) add xchg (bad) cmpsb jrcxz out (bad) imul sarb mov rcrb lods push outsb (bad) jmpq movabs outsl adc out insl or pushq stos outsl or add adc (bad) jmpq roll in out xlat push adc stos (bad) (bad) iret (bad) imul add pop (bad) scas xorb lahf pop rex.WRB rex.WB xlat mov add sub pop (bad) xchg mov sar mov mov jnp rex.RB shlb test jle rex.W lret repz and jmpq pop mov mov in cmovle rex.RX (bad) je and mov imul (bad) pop fnstcw or lret mov sahf pop and imul mov mov mov fneni(8087 sbb hlt lret (bad) (bad) add out (bad) out fstpl rcrb hlt (bad) sbb cmp mov xchg cltd pop fisubl roll (bad) adc (bad) pmaddwd bnd mov mov xor add pop nop cmp jl sub sti mov sub mov mov (bad) xchg xor or xor push je xchg adc lret mov mov xor rex.XB (bad) mov adc jnp mov sbb (bad) mov mov cmpsb xchg test movabs jnp (bad) adc hlt (bad) mov push (bad) loopne test fidivl push (bad) in (bad) ja (bad) (bad) xor (bad) mov rex.X es (bad) (bad) mov (bad) jp callq test pop mov jbe add push scas lahf mov retq (bad) adc mov mov sub adc mov loopne lahf jmp (bad) mov push xchg divl xchg xlat add (bad) jmpq incb fs (bad) xchg sub out lock out jrcxz rex.RXB sbb xor (bad) fldcw fwait add mov xchg rcrl mov out xor lret (bad) xchg push xchg callq (bad) sbbb sahf lret mov gs (bad) cld cmp pop mov fisubl ss (bad) fsubs sarl mov push sub fnstsw cli cmp outsl rolb xchg pop mov mov loop sbb rex.RB (bad) adc jo sub popfq (bad) cmpsb movabs jrcxz sub mov mov mov neg rex.RX sbb fistp pop mov (bad) (bad) and fst xor push js fidivl pop and (bad) (bad) js (bad) xchg jmp int3 jrcxz xchg fsubl loop (bad) pushfq pop jge jle cmpsl cmpsl cmp mov (bad) push sbb (bad) icebp jrcxz movsb xchg cld mov int3 jbe rcll insl outsl (bad) ss sub mov or int std pushq (bad) (bad) out xor (bad) mov stos idivb rex.XB popfq leaveq push rex.RB rex.WRB es shrl gs or mov popq cmp repz (bad) adc loope fsts add test movabs rex.RXB addr32 test loop jle rex.RX mov (bad) mov mov mov (bad) jge movsl fistpll (bad) (bad) mov push lret add push movslq outsl movabs test sbb js pop sub cmp rcrb mov adc add lret pop stos cmp adc sti mov push xchg in stos gs loop iret in push cmp in nop wrmsr test (bad) (bad) int3 popfq (bad) movsl pushq sti scas jle lret xor outsl sbb callq (bad) or orl or or mov add leaveq push (bad) pop lock out cmp packsswb rex.WB fwait push sub imul cli lods xchg xchg fisubrl movabs or pop xchg pushfq cli imul pushq fsub fcom jb sbb in jmpq sti and sbb pop shl mov (bad) jmpq fldenv sub jrcxz pushq movsl js sbb xchg lods imul cwtl cmpsb or idiv out xchg (bad) lahf retq lea (bad) mov mulb jl fldl mov je mov xor lods in add retq mov xchg loope outsb pushq xor rex.RXB (bad) retq movabs jle cmp jo mov jo mov (bad) xchg sbb ja xchg lods nop and out cli popfq xchg (bad) in pushfq out jmpq fsubs out or mov (bad) xor rex.WRXB rex.XB and icebp xor and add adc insb (bad) mov cmp and mov pushfq adc icebp pushfq cli out (bad) sub adcl (bad) mov pandn push test fidiv (bad) (bad) and ds rex.RX sub rdtsc xchg jo jbe outsl movabs (bad) loope imul sub mov adc push add mov ja outsl out (bad) mov add xor adc ja pushfq jl ficoml orb jmp repnz jb jrcxz rex.WRX jmp (bad) retw mov shll adc fnop push xchg sub mov and xchg repnz jnp rex.WR (bad) rex.WRXB xchg popfq je jge jnp (bad) jg (bad) addr32 rex.X fcomps rex.WR adc loopne mov mov lods jb (bad) rcrl pop movabs retq rex.WR rex.RB pop mov jbe test fiadd mov mov (bad) sbb iret rex.RX (bad) movabs (bad) outsl jbe insb cmp push enterq and jbe rex.X cmpsl shll (bad) in (bad) out (bad) popfq jge mov and push outsb or iret jae adc (bad) (bad) push sbb and test iret iret fisttpll xchg xor pop outsl fistpl ficoml pushfq sub cli or adc fmulp pop jns and pop (bad) jo (bad) pop icebp pop lea mov rex.WR jmpq push lahf mov mov movsb xchg add pushfq jno rcll sbbl insb incl imul fwait mov (bad) loope lods sub jl insb je add lcall retq and mov out mov mov lods stos mov jl jbe je (bad) (bad) pushfq xor outsl repnz cld adc jns lahf shrl xchg in (bad) mov stos xchg sti scas sbb cmpxchg in int out sahf add std hlt (bad) jrcxz xchg jge xchg sub xchg rex.WR mov cmp xchg jge cmpsb jl popfq cmpsl retq mov (bad) xor xchg cmp outsl add sub fimull (bad) mov xlat insb setbe (bad) (bad) movabs xor (bad) sub (bad) mov outsl cmpsb mov pop and add pushq (bad) pushq lods vmovntps cmp nop stos jge mov pushfq pop bndstx rex.R xchg jbe (bad) (bad) jge add and xchg mov rex.WX popfq rex.WRXB lock (bad) out lods adc adc pop xchg (bad) or scas icebp mov or rex.WRXB mov adc mov mov je (bad) mov gs push test ss sub xchg mov (bad) insl push vpcmpeqd mov imul insb (bad) in cmp jae (bad) (bad) cli (bad) xchg (bad) mov outsl clc in clc enterq js jmpq cmpl adc rex.RXB sub sbb retq or mov xchg mov xor mov jns sbb insb scas jbe (bad) rex.WRB in (bad) xchg xchg rex.WR fcompl sbb shrb rex.B xchg jbe xchg test rex.RX rex.WRB rex.WB xchg lahf or mov xchg lods sbb orb pop out fsubs xchg xlat fs mov sbb pop ja jmpq out in sahf frstor xchg (bad) xor adc movabs rep mov cmpsl cmpsl outsb sbb (bad) ds sbb (bad) xchg clc test sbb adc cltd fsin (bad) jns rex.RXB pushq or loopne jae popfq out (bad) callq loop xchg xchg sahf lret rex jmp mov sahf out stc xchg rex.WRXB fisubr and mov lea adc sub mov (bad) sub pop cli addr32 or and sbb imul inc mov (bad) (bad) enterq jae mov fmull (bad) or mov sub cmp and and lods out add out xorl std jecxz leaveq (bad) sbb xlat mov mov jmp mov xchg fldl2e repz cmpb lahf retq rex.RB (bad) cmp out lret test (bad) gs (bad) mov mov movsb xchg jrcxz movsb jge cmpsb xchg pop mov outsb mov stos fsubrl (bad) pop jne fisttpl out (bad) jo xor (bad) retq rex.WB or sahf retq jno adc (bad) xor lods mov mov pop xchg sbb movabs (bad) jnp retq outsb (bad) loope push mov sub movabs out rex.WRX repz mov movabs mov movabs push (bad) rex.WX outsl or xchg mov js rex.WRX imul or push outsl (bad) and xlat stos mov sub fcoms mov fisub pushfq add pop fidivrl sub iret mov orb lret cltd sub jg mov loopne movsl (bad) mov (bad) xchg or jle jmp int3 imul and (bad) xchg out data16 add enterq mov mov sbb mov adc or mov mov rex.RXB xlat adc (bad) stc cmpsb lods jrcxz andl fs pop popfq (bad) movslq jrcxz (bad) mov and jb mov rex.WB scas callq rclb (bad) outsl fimul out std or rex.X rex.WR gs movabs xor (bad) (bad) pop mov sbb lret ds std data16 and adc (bad) repz sub jnp mulb rex.W out or cmp mov sub (bad) shl out rex.RXB repz movabs mov hlt loopne shrb mov mov out and or div (bad) repz jl mov xchg jae insl js (bad) syscall (bad) fnop mov clc adc jg sub mov retq rex.R mov movabs decl outsl iret mov sahf and rex.WX (bad) push enterq pop and icebp mov rex.RX jg mov xchg jg (bad) shrb (bad) mov (bad) pushq (bad) (bad) adc mov mov stos pushfq pop fs outsl cmp (bad) add jnp adc pushfq fwait sbb mov fcoml and xchg (bad) loopne mov (bad) pop xchg add push rex out rcrb rcl sti (bad) mov andl pop sbb test out fs retq lret loop repz (bad) mov (bad) pop fisubl (bad) (bad) retq rex.WRX (bad) adc lahf jp jns popfq xchg jbe retq rex.WB lea sbb xor mov pop add pushq fwait xchg jae xchg jns (bad) push rex.XB data16 popfq xlat cwtl hlt sahf imul rcrl retq in test rex.WRXB ror rex rclb xor jrcxz rcll loope (bad) ficompl and (bad) push rorl jmp orl (bad) (bad) or popfq imul incl lods movsb (bad) (bad) rex.W rex.RB (bad) add pop test repnz nop jp iret xchg (bad) adc (bad) rex.WRX fs jbe mov (bad) (bad) adc sub lods (bad) or lcall sub jmpq xchg fisub (bad) mov jp divl adc rex.RB adc (bad) sahf ja pushq xchg (bad) gs (bad) mov jrcxz in rorb xchg xor cmc clc pop adc (bad) imul mov scas pushq movsl or (bad) rcrl movslq jmp rex.RX mov mov push adc xchg lea rex.WRB repnz xchg (bad) movsb rex.RXB sbb mov (bad) mov sahf xchg rcrl pushq xchg stos movsb mov popfq movsl subl (bad) xchg mov xchg movabs (bad) cld push (bad) mov or (bad) (bad) xor je push mov xlat pop push adc outsb jnp mov std xor mov (bad) sahf (bad) lahf (bad) cmp lea (bad) sbb lea cmpl cmpl adc xchg test add push (bad) xor mov (bad) (bad) xchg iret jrcxz (bad) loop xchg rex.WXB leaveq mov fs xchg and rex.WRXB (bad) out sbb pushfq jne (bad) mov (bad) callq stc push sbb xchg rex.W jrcxz mov rex.WRX rex.XB pop repnz outsl nop sbb sbbb (bad) xlat cmpsl (bad) rex.WR jmp (bad) cmc cmp jns mull movabs movabs fsubrs (bad) lea gs loopne (bad) add lea fsubl mov pushfq fstpl xchg (bad) in pushq imul mov mov cmc or (bad) pop sbb movabs (bad) ja (bad) je retq movsb mov pop popfq sti mov retq mov cmpsb push mov xlat mov or mov fisubrl pop xchg repnz fidiv rex.XB rex.WX and outsl mov or ss (bad) sti or mov sub fsts xchg movsb pop adc pop fmull (bad) (bad) xor nop or stos pushfq iret jae cltd cmpsl iret jbe (bad) (bad) imul stc fisub testl cmp (bad) movsb scas or pop sahf pushfq in jns in jbe retq mov push (bad) (bad) roll xchg xchg sbb mov outsl xchg rex.X mov setge or xchg (bad) xor movabs or mov (bad) add je cmp movsb rolb jne and or mov lret iret xor addl mov xchg xchg je (bad) pop xchg xlat mov je or pop enterq pushfq outsl add shr (bad) cmc mov or outsb mov pop (bad) (bad) mov mov mov push pop xor jrcxz (bad) je jmpq jl mov rcrl fbstp in (bad) mov ja rex.W or (bad) (bad) jmp fisub pop mov (bad) xchg (bad) xchg retq mov test jbe mov xor (bad) repz movsb xchg xor rex.X xor xchg jge rex.WRB rex.XB cmp rex (bad) rex.WXB rex.R sub fmul test xchg (bad) scas rcrl (bad) (bad) stos pushfq js cltd pushq movabs jrcxz int (bad) pushq and ficomp pop cmpsb test cwtl xor push push ja js mov rex.XB movsb ds mov sub mov mov stc mov pushq nop rex.RX jmp xor mov sbb clc test rex.B in lods (bad) jnp lea push movsb pop in nop outsl mov stc jrcxz out retq cld data16 test xor push pop scas rex.B fnstenv jg mov xchg adc (bad) rex.WRX pop int3 outsl fldenv xlat fidivl xchg sbb or mov (bad) (bad) mov (bad) rcrl (bad) mov sub je xchg mov iret and (bad) rex.WXB fidivl pop (bad) or (bad) sbb subl adc movabs rex.WR (bad) (bad) sahf sub mov or rcrl imul mov pop sub movsb lret add loop test push stc jno lahf sbb (bad) pop js xchg jrcxz sub rex.WX cs cmp (bad) sub mov or sub jae (bad) callq lret pop out sbb rex.XB (bad) rex.WRB push add and push xor mov and int3 (bad) xor jbe int3 negl iret jbe outsl xor (bad) mov mov mov mov rex.RX rex.WX cwtl sub fisub (bad) lods jb (bad) mov sbb xchg fwait adc xchg rex.WXB (bad) insl xchg sub nop scas sub push ror enterq movabs (bad) lods (bad) mov sub xchg adc pop fdiv gs fsts imul xchg and outsb xor int3 jne jmpq mov add pop je mov jrcxz sahf sub adc (bad) sbb je adc jle mov xchg mov divl (bad) mov cltd pop cwtl fldt cmp (bad) pop sbb lods addb fcompl cmp jge (bad) mov mov mov mov xchg adc test mov add lea out pop mov push (bad) (bad) pop mov or cltd xor (bad) adc retq xor js or mov in (bad) fldt (bad) jno adc pop (bad) test outsl and xor xchg (bad) rex.X data16 movabs fistp adc xor adc fs loopne repz fidivr xor in cli fldt in (bad) jmpq in int push ficomp mov push scas lahf add and (bad) pop clc (bad) rex.WX xlat (bad) adc ds fmulp insb push rcrl idivb sahf ss movabs leaveq outsl and int imul (bad) xor xor (bad) imul lahf jge xchg (bad) (bad) mov push gs mov sahf addr32 mov rex.RX mov mov jle mov xchg jrcxz fnstsw jno rex.WB and lret (bad) cwtl jle xchg sti orl mov jbe jno ss cmp adcl xor adc jb (bad) push pop (bad) and je xchg es jb lahf mov (bad) and push (bad) sub test sbb adc jg (bad) scas cmc push cmpsb pop jrcxz std adc pop mov xchg (bad) sbb int (bad) cmpsl fisubr fcmovbe sbb xchg subl xlat jnp movabs out xor (bad) adcl cwtl popfq sbb xchg (bad) nop pop add mov callq or gs callq or (bad) (bad) (bad) (bad) nop pop sbb (bad) (bad) rex.RX mov adc adc adc in or (bad) sbb stc xchg insl sbb sbb or xchg sub mov adc ficom fwait adc rex.RB incl (bad) je lea mov jbe xchg (bad) lret cli (bad) and jnp (bad) cwtl adc jbe mov iret mov clc fadd pushfq and push and (bad) mov rcrl jmp pushq movabs xchg retq imul pop (bad) imulb out adc js (bad) or (bad) xor sbb pop cwtl (bad) (bad) sub mov fwait iret (bad) rex.WXB or test (bad) (bad) shrb (bad) rex.RB test rex.WR jmpq cs pop repnz mov outsl lahf xor (bad) mov mov retq mov xor rex.W lret adc nop mov movsl cwtl fs cwtl mov enterq sarl retq cmp xor in cmpsl pop scas retq jge (bad) rex.RX icebp pushq cmpsl xchg jmp pushfq movsb mov (bad) lea (bad) je outsl (bad) (bad) out xchg lock in iret (bad) mov cmp fwait mov jg mov mov loopne rcrl movabs add sbb jns callq mov mov xchg sbb cmp lods je test mov adc xor mov cmp scas jbe mov xchg movabs mov ja mov (bad) jle adc retq mov and ja je outsl enterq mov int3 add ja (bad) outsl popfq rex.B ds pop (bad) mov outsl and mov fcmovnb (bad) sub andl and mov mov push (bad) je movslq sti callq jns (bad) (bad) in (bad) cmp shrb repnz xchg popfq mov push (bad) pushfq sbb (bad) (bad) and imul mov (bad) (bad) sub rex.WXB fstpl int mov retq xor push nop sbb lahf callq (bad) in rorb add (bad) (bad) jb xor es mov sti imull or outsl outsb sahf mov sarb cmp nop sbb (bad) xor mov (bad) cmpsb repz jbe (bad) mov xchg test cmp fiaddl shrb or sti hlt (bad) sub mov mov retq scas insl lods and sub (bad) sbb lea out test shrd or pop mov sbb mov mov ss fwait pop loopne (bad) (bad) test jrcxz adc and xlat mov rorb js (bad) (bad) jle adc js jl jae insl jae in frstor mov movabs lea and jae rex.R repz scas ds shlb cmp pop (bad) fild sbb lret jnp pop rorb enterq adc insb jae pop jbe imul or jmp rcll jae gs sbb pop xor nop (bad) lea and adc mov lods jmp (bad) fsubrs jns fnstcw (bad) and movabs pop fnstenv jno rex.W (bad) cld gs push imul insb cmp rex.B mov (bad) sbb xlat cwtl pop adc rex.XB imul (bad) hlt and pushq orb adc rclb xor rex.WRXB (bad) adc pop (bad) cld iret sbb add iret movabs callq adc cwtl adc (bad) jg ficompl adc movslq xchg xchg fmul pop sbb sbb pushq (bad) xchg mov sti enterq cmp std cmp out pop movsl icebp adc shr or loop (bad) pushq cmp repz (bad) mov pushq (bad) fxch rex.WRB pop rex.R rex.W rcr or xor test (bad) xchg xchg sbb xor sub jmpq repz (bad) imul mov lret rex.XB xchg (bad) pop nop xchg jmp callq xchg xor adc xchg adcl movsb sahf movabs fldenv lods (bad) pushq mov repz lods cwtl andl pop sub rcr pop sub (bad) lock hlt out (bad) nop fcmovnu or sbb mov mov rcl mov pop sub xor imul mov rex.WRXB push push stc jbe add outsl cli sarb movslq in lea movabs scas jmp js pop lea mov and je mov lods mov jno out xlat int (bad) rex.RX sarw rex.W mul movsl jb (bad) mov sbb lods (bad) cmc xor or fidiv pop adc mov movabs data16 cmp xchg fcmovu leaveq jno xchg cld sub jae (bad) faddp cwtl adc rex.WRXB rex.WXB pop cs outsl xlat callq mov or jmp lret jae loope xchg movsb outsb sti mov cwtl ficompl cmp and jo cmpb ja cmp ja (bad) cmp pop movsb addr32 clc mov mov retq mov add mov sub rex.WRB popfq rex.RX push xor add adc jo divb sbb out rex.WB divb stos enterq xor enterq sbb rex.WRXB popq push (bad) cmp nop fisttpll mov xor (bad) out in movabs mov in jrcxz adc adc push adc cmp mov mov data16 mov data16 js (bad) (bad) psrlq (bad) mov movsb mov cmc mov rex.WRXB xchg movabs pushq sbbb movabs movabs cmp lea jp rex.WRXB (bad) movabs idivb mov mov (bad) stos mov xor pop (bad) and mov fisttpl rcll lea jmp int3 (bad) sub out pop mov insb rex.WRXB or mov mov pop je iret and xchg sti fsubl fwait xchg (bad) and mov imul sbb jle pushq (bad) leaveq add (bad) pop jnp mov mov sbb lahf lods jmp (bad) (bad) adc xchg outsl (bad) (bad) add (bad) xchg test jo sub lret (bad) gs gs stos movsl cmp (bad) pushq xchg movb nop xor push pop lret or rcll jmp movabs fwait add mov iret or mov adc rex.X mov mov jp add jo (bad) (bad) push pushfq (bad) mov loop movabs mov fstl outsb pushq jbe mov mov movslq nop sbb push scas imul xor mov in mov insb mov (bad) mov mov add lahf outsl rex.X mov (bad) je mov sarl mov cmpsl (bad) pop cmp mov (bad) xchg outsl lods sub (bad) push (bad) mov or subl ss cmp adc and pushq rcrl or movabs xchg mov je pop mov rex.B xchg jbe pushq cld jns rex.WRXB mov stos jbe jne (bad) stc stos fwait (bad) rex.WRXB (bad) xor shlb mov in sbb cmpsq jb repnz (bad) xchg movabs jmp iret (bad) pop lods xchg in test xlat rex.WR sbb jmp mov (bad) fnsave pop js jno mov pop sub or (bad) (bad) rex.WB mov xor lahf add lret not sbb jrcxz adc in cld (bad) mov (bad) cmpsb (bad) ficompl mov jmp xchg popfq fiadd pop insb icebp fidiv mov rex.WRB pop outsl out xlat subl mov pop jg mov (bad) jmp popfq add xchg movslq jmp pop addl and lea adc std adcb add push (bad) cmp (bad) outsl cmc ss jrcxz (bad) mov add and (bad) jae mov cmp ja sahf sub rex.WXB insl (bad) push jrcxz outsl mov (bad) mov (bad) loop faddl nop jnp xchg (bad) std movabs mov sbb cltd xchg rex.WRB orl (bad) rex.WXB (bad) pop cmpsl outsl rex.R fwait xchg rex.W mov cmp (bad) pop mov loope pop je and movabs int rol add rcrl sub rex.WXB mov and fidivrl xchg clc xchg sahf (bad) loop jmpq sahf ficoml push jrcxz sbb pop cwtl (bad) cmp js adc mov (bad) (bad) lods add jge addr32 (bad) xchg xchg xlat mov (bad) cmpsb mov (bad) jl (bad) xchg (bad) adc xor xchg push add jrcxz sbb rex.WXB lahf lea (bad) jb sbbb movabs rex.WRB rex.WRXB sbb push and jb and (bad) xlat je es xchg (bad) push fimul jae jbe xchg mov mov sahf mov scas mov cmc pop (bad) lock push xchg rex.WX xchg rex.XB mov movabs mov mov movsb (bad) mov mov xchg pushfq mov rcll scas xchg cltd (bad) xchg nop clc std (bad) jbe cmc fcoms fidivr addr32 cmp es push (bad) (bad) mov fisubr (bad) and mov adc mov test rex.RB test sbb push xchg unpcklps rex.WB mov cltd ficom (bad) test xchg cwtl xchg gs mov mov stos leaveq mov sub mov std xlat shll in rol or sub rex.RXB rex.WXB (bad) (bad) outsb outsl (bad) mov rex.WB ds movabs sub jnp (bad) es rex.R lods cmp fsubrl int faddl fsts lret imul rex.WRX mov jle lret pop in xchg sbb stos rex jbe insl (bad) (bad) pop jb cwtl (bad) enterq xchg jno rcrl outsb sbb jbe xchg (bad) adc pushfq (bad) xchg sbb mov push cwtl outsl icebp roll stos test (bad) rex.WRB insl idiv or xchg sbb in (bad) push sub (bad) decb lret adc outsb hlt (bad) cmc mov cmp mov (bad) lock and outsl lret mov pop popfq pminub retq sbb mov mov mov pop add or (bad) push jge callq or sbbb scas retq (bad) (bad) movsb sbb cmp jp adc pop rex.RXB pop sbb fmull cmp stos shr cmc rex.WRXB jrcxz pop and sbbl add rex.RXB sbb cmovle or rclb (bad) xchg (bad) rex.WRX mov xchg outsb mov jg jno movabs mov lock mov cwtl push xchg (bad) (bad) (bad) (bad) fidivrl mov or (bad) xchg mov icebp add mov rcrl or push out stos (bad) (bad) (bad) add repnz cmp add shrb in pinsrw xchg movsb jp jmpq xchg (bad) mov (bad) (bad) mov sarb mov imull imul (bad) rex.WX clc sti outsb push stos adc sub sub or fld mov cld add mov sub es and insb xchg rcll xlat int pushq loope stos movabs rex.WRB lock movabs mov sti or sbb push lods std mov iret add pushq movabs (bad) lea cwtl (bad) xor es rex.WX insb mov pop loop (bad) rex.RX movabs (bad) fisub pushfq retq std gs out (bad) nop (bad) stos nop mov outsl (bad) out (bad) (bad) adc pushfq ja rex.RB rex.WXB fnstsw or xchg movslq pop (bad) jae cli js rcl xchg or mov add jmp (bad) mov xchg cwtl (bad) hlt rorl (bad) mov jae cs outsb sub (bad) mov loope pop add or sub fwait stos xor sbb add orb adc movsb (bad) (bad) jl mov mov (bad) mov movabs pushfq fcompl (bad) (bad) hlt rex.R fstl bsf in rorl data16 push adc xchg jbe (bad) imulb clc sub sti mov out pop xlat pop rex.RB rex.WRX cmpsl js movabs (bad) adc nop rcrb jrcxz data16 fistp rex.RX pushq negb adcl rcl out iret mov mov sti add and faddl (bad) lods movabs mov mov xchg loope rex.WXB mov insl sub or jp popfq sbb (bad) sub in add imul push mull callq cmp out (bad) push outsl (bad) (bad) movsl rex.WRB insl xlat loopne rcrl cltd xchg (bad) outsl or rex.R and lcall decb pop test fcoml roll fidivrl (bad) (bad) clc adc mov fidivr mov rex.X cltd push popfq adc xchg (bad) jrcxz (bad) sbb incw popq hlt jbe sar mov mov jge (bad) lock rex.RXB movsb (bad) xchg (bad) jmp (bad) callq xorl mov adcl mov sbb pop mov (bad) pop addl (bad) movabs jg and lret movabs imul pop sarl xor in (bad) lock test mov mov mov movabs (bad) sbb (bad) (bad) jo lahf mov jbe xchg jb mov cmp callq pushq (bad) xchg movslq (bad) (bad) rcll (bad) pushq movsl out adc lods xchg jge rex push (bad) incl fiaddl stc movsl mov and scas push fsts roll adc (bad) pushq mov rex.RXB retq xchg mov xchg (bad) rex.WRXB repnz lret fistpll test rex.WRXB pop jge rex.RXB mov rex.WRX mov cmp xlat mov add and (bad) cmc rex.X rex.WX int3 sbb out xchg test (bad) cmp mov xchg out pushq rex.WX test cmp jp (bad) (bad) pop outsl (bad) lahf out xchg pop sub ja cmp pop popfq loope (bad) fidivl mov mov fcmovbe mov rex rex.WXB cmpsl mov (bad) adc sbb nop movslq jl (bad) sysexit push add rex.B addr32 sub mov mov push jne mul rex.WRB repz jge or (bad) xor imul rex.WXB popfq lods ja xchg (bad) outsl rcrl stos ds movabs adc (bad) push xlat fimul push ja loopne jnp adc fst mov (bad) stos (bad) rex.WX rex.WB fisubl retq mov xor insb (bad) imull xchg mov fldl jrcxz and add mov fmuls es push xor (bad) notb lret outsb outsb mov orl mov orb rolb loope movabs lea movl fdivs addl repz out or test jbe scas mov movabs leaveq jo cmp pop mov add mov push (bad) std mov mov faddl out cmp xchg mov fmull movabs or xor sbb (bad) mov fcoms (bad) (bad) incl lahf sbb pop xor push fwait lods (bad) xorl mov rex.WRXB mov adc clc sbb repz sti fldcw rorl mov sbb rex.RXB xchg scas lahf xchg jrcxz (bad) test cmpsb mov (bad) pop shld outsl cmpb (bad) mov fnstsw rorb movabs sub mov jnp test imul rex.WRXB and scas insl (bad) scas mov (bad) scas mov lahf rex.WRXB xlat sub repz shrb fisttpll add (bad) fisttpll xchg sub (bad) mov xchg sbb mov cmpsl xor pop (bad) rex.WRX out or mov mov add (bad) ss (bad) sbb mov pushq std iret mov pushq (bad) adc fnstcw (bad) enterq out mov mov or jae sti and mov sbb sbb (bad) insl in mov mov mov push mov rex.RXB jg mov (bad) orb mov (bad) xchg adc or rclb add rex.R pop lret mov pop mov mov (bad) movb rex.R mov mov mov xor mov (bad) repz sti hlt imul xchg (bad) popfq movsl roll (bad) mov leaveq xlat fisttpll push or mov sub mov rex.B movsb sub mov adc movabs fildll scas movabs mov or cmp out (bad) mov rex.R xor cmovo fnstcw mov adc add (bad) (bad) (bad) mov stos sti faddl stc fcompp mov outsb (bad) (bad) mov pop cli rex.RXB sub jae pushq out cmp out sub jg pop cli cmp push (bad) lods jmp insl pushq fist jae,pt jnp xor mov (bad) (bad) push adc scas sub add std out mov xchg fistpll xchg jne jbe (bad) xor fisttpll mov fist mov imull (bad) mov mov push push mov mov fldl jg (bad) por mov movslq std pop mov pop sahf lea (bad) (bad) push imul mov or mov add cmpsl mov sti push xlat mov repz (bad) (bad) mov sub (bad) mov scas imul mov xchg mov pop fsubl nop ja push mov adc adc cmp (bad) (bad) xor ja incl addr32 (bad) mov mov pand mov shrl mov lahf xchg movzwl mov (bad) imul fdivl movswl jae (bad) mov jg adc stos mov (bad) and (bad) mov jg adc sbb decl (bad) (bad) mov jg adc idivl (bad) add xor jb xchg adc sarl (bad) and push leaveq rex.RXB jrcxz (bad) (bad) decl and mov adc xchg jb movsl and push (bad) push frstor addr32 je pop sbb (bad) lret pushfq mov (bad) imul packssdw and outsb mov retq rcrl jg out pop lret mov lahf mov lods (bad) (bad) mov xchg jg,pn imul js (bad) mov (bad) mov movslq rex.WRB fildll (bad) rex.WRXB movb rex.WB pop je (bad) insb mov cmpsl add mov pushq lods sub (bad) xchg stos outsl mov movabs mov scas ss rex.WRXB mov and sbb out xchg ficoml mov je (bad) jg (bad) rcrl (bad) rclb test adc movabs fcomi shrl ja lea (bad) mov adc fnop out divl xchg fwait outsb xchg mov fstp mov mov movslq repz or mov rex.WRXB sbb (bad) rex.XB (bad) sbb jg mov outsl leaveq xorb (bad) iret mov xchg je adc jb cmpsb loopne xchg loop movslq test je (bad) movsb mov adc adc mov in xlat (bad) insl je pop adc sti in and sub (bad) (bad) xor xchg outsl jg (bad) jp mull icebp xor out sbb jnp (bad) mov adc (bad) adcl push add xchg xchg sub retq (bad) hlt xor (bad) (bad) fcomi mov mov mov enterq (bad) lods cmp or (bad) jns sbb rcrl mov shlb mov imul stos imul mov mov or mov (bad) rcpps (bad) jb lahf or mov add (bad) mov add (bad) mov mov ja retq (bad) cmp mov mov (bad) (bad) mov fisttp cmp mov (bad) xor cld mov int3 (bad) scas cli nop fcoml adc mov ss cli cmpsb push movabs fnstsw je pop icebp and sbb fs lock jb rex.WXB xchg mov in (bad) fadd jb or jrcxz sub mov or movsl mov jae sbb jne out mov rcll loopne es pop push mov xlat sub mov (bad) mov (bad) xchg mov mov mov jp je cs xchg mov retq sbb int xor mov int3 mov (bad) rex.WRB rcrb xorl mov int leaveq mov sub lret pxor jb xchg adc lea jo mov or lret lods cmp (bad) jno mov mov rex.WRXB repz lret packssdw sub repz scas test stos (bad) adc fs adcl jns scas or rex.WRXB mov (bad) ja sub jo (bad) (bad) jmp mov out subb fldl jge mov lahf notl jne movabs movsb pop mov xchg xchg xchg repz cmp in push callq or out and out nop sbb (bad) (bad) mov mov mov gs cld xchg or sub mov mov (bad) mov (bad) int mov subl add (bad) out shlb xor xchg pop (bad) (bad) xor in jmp pminsw pop fisubl lods je (bad) lahf xchg cmpsb xchg adc xor cmpsl (bad) enterq rex.WR fiadd (bad) xchg in imul jns xchg sbbl cli sbb fidivr and loopne and mov xchg shrb (bad) (bad) and sbb xchg pop mov scas rex.WX jrcxz addl xsaveopt cmp movabs loope mov insl cmp adc push lods callq data16 (bad) and out outsl xor mov rex.WRX movslq cmp adc or add icebp pop popfq adc mov push (bad) jb mov (bad) xor jmp cltd xor shrl xlat vpavgw lret div (bad) pushq movsb mov in (bad) xchg sub fisttp push rorl mov pop outsl fwait lea (bad) loopne iret jae adc jb cmp mov (bad) adc (bad) (bad) xchg adc mov or add in std push xchg xchg mov pop sbb cmp ss cmp rex.B test ficompl test (bad) rcll in retq xchg popfq sti lret out adc mov mov test je pop fwait leaveq mov jmp cs imul jmpq (bad) enterq rex.RX (bad) fcoms (bad) mov mov (bad) jrcxz sub xchg rex.WR cmpsl div (bad) cmpsl or cmp movslq add cmpsb mov rex stos mov jle adc xchg lea (bad) push popfq mov mov outsl cld fsubrs (bad) sub cli (bad) rex.RXB sub stos mov cltd adc outsl pushq jg hlt mov add (bad) std mov rex.WRXB mov int3 outsl leaveq add mov (bad) add and mov rex.WRX data16 loope xor (bad) jrcxz (bad) xchg movswl xchg (bad) mov cltd rorb jle xor je xlat cltd callq (bad) jle jno nop jbe imul sbb mov popfq lret outsl repnz mov push (bad) in xor (bad) sub (bad) scas (bad) out cmpsb (bad) or (bad) and jo pushfq pop retq outsl rclb jmp lods push rex.WRXB sahf (bad) rclb mov mov rex.X addr32 jbe and imul cwtl rex.W ss sbb mov mov mov pushfq outsl xor nop stos rex.X bswap movabs jmp test jg je xchg and xor cmp push lret rcll add cltd cltd (bad) (bad) mov (bad) cmpsb (bad) jrcxz scas cmc add jg cli xchg fisttpl sbb fs sub mov xor (bad) je adc hlt mov pop iret add jmp pop movsb roll push or (bad) lock xor mov xchg sub xchg int3 and cmp lods sub rex cmp mov and push movslq rex.WX cwtl xor (bad) (bad) xchg rex.WR mulb popfq fisubr imul rex.XB mov lods jb hlt pushfq (bad) imulb jb rex.W (bad) xchg fistl sbb in fistpll jp lods mov mov fcmovnbe mov loope pop ss and (bad) rex.WRXB and int3 fistp fninit adc cld pushq xchg push push mov push scas pushq repnz gs xchg (bad) jbe mov jb or cltd (bad) adc xchg repz (bad) add (bad) (bad) mov adc rex.WX (bad) retq movabs outsl add sub (bad) pop or add jle pushq jl mov rol or xchg pop nop or xor adc (bad) adc jbe test mov (bad) testl xchg rex.RXB (bad) xor imul int3 stos out jae retq add mov fbld push mov scas rex.RXB lea cmpb stos neg jmp je and lods rex.WRXB idiv rex.R xchg movsb rex.WXB or push lret jnp out popfq popfq nop sub pop sub cmp fisubl fs pop mov and mov rex.WXB rex.R and rex.RB push pop int test (bad) (bad) lods adc (bad) (bad) pushq callq je jrcxz (bad) cmp lret mov sbb fimull mov icebp leavew (bad) iret (bad) popfq (bad) mov cltd insb pushfq jl (bad) (bad) enterq movabs in sahf cmpsb retq mov nop mov xchg es outsl mov or (bad) fwait jae iret movsb xchg fldl sahf fidivr (bad) int3 pop and stos rex.WX pushfq lret iret add rclb pushq xchg (bad) pop (bad) js and (bad) mov outsl rex.W mov in mov (bad) ficompl sti xor (bad) (bad) cmc repz setle fnop (bad) push movabs (bad) out in fwait jp nop scas rcl test shlb xor (bad) xchg movsb pop loope lahf sbb rex.WB adc sub (bad) mov xchg xchg (bad) pop pushfq rex.WB xchg push mov jo (bad) (bad) (bad) (bad) (bad) pop adc rex.R pop sbb xchg (bad) enterq mov mov (bad) mov lcall rex.R test enterq (bad) (bad) subps rcrl rolb movabs out xor mov stos mov and rcr fsts mov (bad) int (bad) rex.RB fimul shl rol add mov add cwtl cmpsb pop pop (bad) loope fsts or insl or fcmovb sarl cli rex.WRB or (bad) add or (bad) cmpsb sbb mov rex.WRB sub (bad) mov mov cmpsl rorq adc xchg xchg adc js fucomp xchg adc retq jmp iret mov xchg sbb repz xlat test (bad) (bad) fnsave lahf or rex.XB sbb mov sub test movsb rclb lret pushfq and mov rex.B rex.WRB rex.X xchg pop je movsl es cmp out in and roll test (bad) test cltd mov lahf in mov fbld int xorl mov ljmp cs jb rex.RX lahf and sub insl xor push jbe out xor sahf xchg (bad) mov cmc fdivrp (bad) (bad) jbe lret add sahf notl repz std jg (bad) xchg mov scas (bad) nop lahf mov add (bad) out retq hlt xchg sub (bad) rex.RXB fisubr mov jbe incb mov lahf rex.XB rex.RX cltd pop (bad) xor mov rex.RB mov (bad) rcrb xchg rex.WRXB xchg sub (bad) mov pushfq mov rex.WX sub out pushfq lods hlt test gs jne (bad) xchg pand (bad) je pushq fnstcw stos callq fsubrs outsb movabs movabs xchg movabs jp pushfq jae (bad) cmpl (bad) test xchg add (bad) rex.WXB hlt rcrl pop add movabs add imul add add callq rex.RX xchg xchg and addl adc xchg jrcxz fcmovnbe fdivrp (bad) jg (bad) rex.WRX rex.RX (bad) stos stc push cltd in and mov mov rcrb rex.WRB mov (bad) icebp movabs xchg ja (bad) xchg jae (bad) add rex insb mov mov add sarl cmpsl jrcxz (bad) (bad) rex fwait push popfq pop fs in addr32 stos xchg xchg test sub nop mov push pop pop outsl popfq pushq fdivs (bad) lret (bad) (bad) repz repz pop (bad) ss je (bad) sti repnz (bad) jle adc in xlat (bad) gs jae pop sub int sub pop fwait in out (bad) mov cmp sbb xchg (bad) scas imul outsl (bad) cltd mov fadds and xlat (bad) movsb (bad) mov push rex.WB rex xchg jbe mov mov movsb insl mov adc (bad) mov rex.RXB adcl mov xor jbe mov loop (bad) outsl sbb imul ds jno (bad) popfq sbb sahf outsl fwait scas adc xor ficomp mov sub xor fnstenv adc imul cmpsb xor retq mov fisubrl cld fstpl (bad) pop rorb xor xchg sbb or movsl xor mov (bad) pop (bad) scas rex.WR rex.WX sbb xchg (bad) int (bad) movsl fisttpll (bad) pushq lahf es (bad) add adc mov adc rex.RXB pop lret test pop or andl outsl xchg ja (bad) je movsb jnp mov sbb icebp mov sub shrb push outsl retq (bad) lret in (bad) mov cmc gs rcrb (bad) int or movabs lods rex (bad) popfq int3 outsl (bad) in mov sbb jle pop (bad) xor (bad) mov push jmp std push mov hlt or push movabs shrl fs mov sahf (bad) sbb push mov rcr outsb and cmpsb rex.WRX rex.B shr repnz enterq sahf je sbb flds mov mov movsb popq push or or rolb rex.W outsl insl sub cmp pop xchg outsl cmp mov test (bad) xchg pushfq (bad) int3 jg std adc (bad) cld mov outsl in pop pop (bad) fwait jrcxz fisttp (bad) flds fs outsl pop mov xchg xchg test xchg jrcxz ds popfq mov and rex.RX push pushfq push stos adc (bad) xchg cmp rex.WRX or movabs or xorl imul sbb xchg mov and rex neg retq outsb mov pop xchg outsb outsl xlat fstpt sub jmp lret (bad) and rex.WRXB xlat icebp lods xor scas sub xor (bad) addl movsl mov sbb (bad) rex.WRXB not repz adc mov in shll ds sahf jns repz fistl xchg pop mul (bad) (bad) dec xlat (bad) (bad) mov ffree (bad) xchg mov movabs (bad) rex.WRXB sbb cwtl lahf mov cmpsb xrelease sub xchg outsl sub mov mov add adc (bad) rex.RXB pop mov and mov (bad) jne xchg hlt cmp fnstsw adc mov rex.R mov enterq xchg es rol xor movslq cmpsl andl xor mov (bad) cmpsb test mov (bad) pop insl cmp rex.WX in pop adc xlat scas cs cltd ficom mov mov and xor xchg movabs cmpl negb xchg mov mov mov (bad) andl stc std cmpsb mov xchg cmp (bad) scas mov push mov mov jl rex.WRX cmp movslq mov scas xlat mov cwtl test mov and mov mov outsl hlt int3 int rclb mov sbb lret or (bad) in in xlat xchg mov xchg stc (bad) adc xchg (bad) mov and push push adcb nop mov jmp mov and (bad) (bad) popfq jrcxz test cltd cmc movsb fcmovbe (bad) je movabs mov jg repz mov xor fisubr jnp fdivr mov add adc (bad) rex.WXB jno cwtl je mov mov rex.WRXB push leaveq pushq loope imul rol rex.R rex.WRB fwait iret fcmovnbe (bad) add xchg push je (bad) stos addr32 popfq jno retq je js iret rex.WRXB scas sub jge rex.XB (bad) lock ficoml lods jbe jbe pop out (bad) lods (bad) (bad) pop je movabs xchg cld rex.RX rex.WRB mov popfq test leaveq movabs (bad) enterq (bad) adc (bad) xchg je rex.W jge sbb in rcll fidivr (bad) (bad) js adc lea je scas sbb (bad) (bad) jae mov adc sbb adc cld ja xchg fmull mov sti fmuls xchg imul rex.WRXB xchg mov adc jl (bad) rex.RX jb adc and sbb es (bad) sbb fs jrcxz movsb xchg (bad) test pop data16 jmp je (bad) out fisubr jrcxz iret mov lret (bad) push push sbbl insl adc clc outsb rex.WXB test xchg popfq pop sbb mov movabs (bad) shll jno push add adc xchg xor lea mov punpckldq (bad) xchg sbb jg adc sub je retq jbe (bad) pop movabs callq rex.WRB rex.WXB (bad) cmpsb (bad) add es scas lea sbb bswap outsl mov cmpsl adcl mov shrl lea divl (bad) cltd mov rex.XB (bad) (bad) xor add rex.WX mov mov fisubr mov int pop rex.WB adc or (bad) mov push lea xlat int3 jae add (bad) and rex.WR mov xor or outsl jle jmp jmpq je xchg rcll adc sbb retq jmp std mov imul xchg outsl cmp jg rex.WB ja notb (bad) rex.WB ds mov jmpq adc sub (bad) rex.XB cwtl imul mov rcl icebp push jrcxz (bad) outsl mov mov roll lods sbb lahf mov and mov pushq mov int mov movabs adc roll fcom cli rex.WX jne (bad) adc (bad) (bad) sti jp js setno xchg mov mov push jl (bad) xchg adc xor insl jg rex.WRB push (bad) mov mov sub xor rex.WB cld out sbb xchg mov and (bad) (bad) mov mov adc xor (bad) xchg mov int3 (bad) cmp es outsl sbb adc (bad) pop push mov and shrl test fisub mov lahf pop mul adc jae xchg (bad) cmpsb stos adc sbb imul (bad) (bad) xor int adc and roll pop movslq jo (bad) xor retq mov mov sbb rcrl add sub popfq loope xchg pushfq mov imull mov int mov cld rex.WB scas or fnstcw stc xchg jbe rolb js cmpsl jle xchg scas and imul mov scas sbb shll xchg scas xchg mov cs (bad) xor out lret movabs movabs enterq jne xor or sbb movsl push lret adc movabs insl mov rex.R adc sbb and ds repz (bad) pop add int3 loop mov jnp and mov xor (bad) rcrb and rex.B sbb ja cmp (bad) rex.WX int3 mov jbe adc rex.RXB (bad) pop sub (bad) cld movabs (bad) push loopne jg div or lea (bad) pop (bad) cmp fwait (bad) popfq out je lret fs insl add in repz stos mov rex.WRXB (bad) out mov adc mov in add or sub jb (bad) (bad) roll (bad) jmp sbb pushq (bad) cwtl repz shrb data16 xchg (bad) out (bad) rex.W repz xchg (bad) fwait (bad) (bad) jmp push fstl pop xor (bad) (bad) popfq rclb xchg shll rex.RXB rex.WXB rex.WRX gs enterq mov mov sahf xchg (bad) addr32 (bad) iret fstl sub in add lahf lret (bad) mov cmpsl jg sbb rex.RX cmpsl loopne xchg sbb adc xchg lret shrb popfq pushq rex.W (bad) jrcxz jno (bad) popfq mov gs cmpl mov popq or xchg adc pop movsb mov sub xchg rorl (bad) pop sbb xchg fisubrl movsb xchg stos rex.WX fsubp and xor rex.WRXB adc xor pop (bad) pop push xchg enterq je cmp out cmp out xor movsl movabs jnp mov pop and jns stos (bad) push jbe sbb rolb (bad) rex.WRX rex.R out (bad) jbe pop xchg stos jrcxz (bad) pop iret fmull js (bad) cmp movabs mov int (bad) push gs vsubss callq out (bad) rex.X adc jmp or xchg cmp jg xchg es adc jne mov or pushq (bad) sbb clc cltd outsl cmp adc jns cmp and mov pop clc push sub (bad) rex.WRX mov (bad) pop (bad) (bad) mov retq insb stc outsl or xchg (bad) mov int3 ss jle or outsl callq adc sarl sub rex.B xlat adc retq mov jmp nop sbb (bad) lret (bad) mov rex.XB rex.B mov (bad) flds mov add nop (bad) pop loop mov pop push in jl lret rex.RB lea jno sti shll jrcxz xchg mov and mov repz in xlat orl jrcxz repnz imul mov loopne mov retq out retq js lock js movabs mov insb imul xchg addr32 or (bad) xor mov jge push scas mov jbe or popfq cmc cmp pop int xlat push rex.RX pop sub pushq and push xchg sbb imul pop and out lods fbstp xlat callq (bad) sbb (bad) cmpsl sbb xchg jmpq sbb xchg cmpsl fimul xchg incl (bad) jle rex.RX (bad) pop mov fwait sub sahf cltd (bad) repz cltd xchg outsl stos mov (bad) jbe mov (bad) or rex (bad) xchg pop and rex.RB sahf fidivl imul mov (bad) rex.WXB jle sub sbb pop movslq (bad) adc mov out mov (bad) (bad) add mov shlb jmpq frstor jbe pushq sbb outsl adc mov out sahf enterq jae cmp (bad) testb mov enterq (bad) jg (bad) cltd pop (bad) (bad) mov rex.WRX jg sbb jg imul (bad) retq int mov je (bad) mov retq loopne std test retq lret (bad) sbb xchg or stc (bad) retq jo fisubr cli sbb out xchg jle test movabs mov mov rex.X (bad) (bad) rex.RXB sub (bad) in sbb scas sub xor adc rex.WB push mov (bad) (bad) xor cmp movabs rcll cmp and mov lret jbe lret (bad) or in lods sub sub callq rex.WX cmp pop (bad) fldt movabs rorb nop mov (bad) (bad) fstpl callq cmp (bad) mov jge xchg (bad) (bad) jg stos andl jo jmp addl xchg and mov adc test pop xchg xor jbe popfq jnp pushq xor sub hlt outsl mov clc or cwtl pop fdivrs xchg test xchg cltd (bad) pop cwtl adc and addr32 mov sub xlat mov fidiv rex.R fnstsw mov push xchg cmp ficompl xorb mov and loopne jmp data16 cli xchg and loopne (bad) lahf out or rorl orl xchg test sub rex.WXB add (bad) mov pop push mov lods lahf pushq and test out (bad) scas rex.RX rex.R sahf scas (bad) mov loop jae push xchg push sub xchg push xchg and cmp (bad) adc rcrl je movabs (bad) in cwtl sub mov mov jmp xlat movsl jns scas outsl movslq pushfq es (bad) in sbb and xor or mov lahf mov xor add incl xchg in sbb (bad) jno in fs sets mov sub ffree mov scas mov mov (bad) sbb sbbl xchg xchg adc cs rcl mov movabs xor xchg (bad) mov sahf (bad) (bad) adc cmp mov add cmp pop fsubs sbb and stos (bad) (bad) mov sarl (bad) push mov mov mov or fidivl (bad) (bad) adc pushq mov rclb cltd cmp (bad) xchg mov cmp xchg sbb mov lret cmp loopne mov add jmp jnp jl sub cmp jp add rex.WX pop xchg movslq stc mov (bad) movsb es mov (bad) pop rex.W rex.WXB repz sub lret push js adc (bad) pop mov push ss cld sub adc decb sahf rex.R ss pop cmp outsl (bad) rex.RXB jns int3 fst (bad) (bad) (bad) out (bad) rex.R lahf rex.R mov jno jae sbb insl (bad) add es es pop rex.XB sahf mov outsl jg (bad) shlb mov (bad) repz cmpsl pushfq xlat imul in jns sub (bad) push rex.B int iret movabs rex.RXB pop pushq jge (bad) sahf stc test mov and js scas movabs cli and lods (bad) out (bad) mov jnp out mov xor cs mov adc mov jbe (bad) xor fdivl mov fldenv push and outsl sub rex.WRB test lods sbb pop test (bad) and jae cs pop adc xor (bad) rex.RX addr32 (bad) sbb (bad) mull xchg jmpq mov xlat (bad) (bad) push (bad) (bad) jo add rex.WRX addr32 fstpl (bad) out jns (bad) and ficompl (bad) lret cs (bad) mov xchg movabs (bad) fadds sub mov lret cmp mov pushq adc pushfq movabs (bad) (bad) xchg jp (bad) mov or or (bad) mov jae rex.WX movabs insl pop shlb xor retq sbb (bad) repz cmpsl (bad) addl xor mov mov cmpb ds cmpsb fwait xlat jp lahf pop adc mov or stc adc repz out (bad) mov icebp mov mov fsubrs int3 movabs popfq subl pop mov push loopne jp outsl jns rex.RXB lock cmpsl pop mov imul mov addr32 sbb cmp ds lods ficom jo mov fisub pop push (bad) (bad) push movabs fwait jp (bad) (bad) mov cmpsb lock jnp rex.WRXB xor push cli fcmovu test cld movabs (bad) mov (bad) retq movabs xor (bad) jb outsl (bad) jb ss rolb push mov fadds (bad) addr32 sub fwait sti mov xchg push mov movabs mov jl sbb ds (bad) push (bad) jl (bad) fdivp repz jns cmp outsl jrcxz sti retq sarl shll xor (bad) jle jne rex.WXB movabs retq cmp add add lea rex.WB pop add mov cltd je mov out mov rex.X shrl rex.RX out or je fidivr jne (bad) (bad) xorl mov adc (bad) (bad) (bad) in jl movsl jbe xchg movabs or sub xor rex.WRXB int outsl loop cltd fmull movabs pop vmwrite jbe xor and sti pop hlt jge pop rex.W cs (bad) jge test xlat (bad) xchg jrcxz xchg (bad) sbb xchg mov leaveq cmp adc (bad) (bad) (bad) xchg mov or std xor xor xor mov add vrsqrtss loop jbe (bad) nop push shrb (bad) out loopne sbb (bad) hlt fimul insl (bad) (bad) add (bad) cmp hlt test ss jle rex.XB movl test mov insb xchg outsl mov push jrcxz (bad) xchg pop or add or ror fnstsw jno cmp fidivr pop or (bad) scas hlt push (bad) pop outsl jp adc nop and rex.WB lahf rex.WXB jp ss (bad) sbb cmp rex.WRX negl push lret mov sbb (bad) xchg rex.X or jne adc xchg and pushq cmpsl outsl cmpsl xchg xchg out mov (bad) xchg cmpsl rcll push rex.RX sbb cmp xchg (bad) xor jmp mov repz mov jg out cli rex.WRB jo (bad) pushq sbb xchg cld (bad) jrcxz xchg and fiadd rorb mov xchg fistp sti jg or push mov (bad) (bad) jb (bad) mov fs enterq ja rex.XB divb mov shl mov and pop sub sbb (bad) jrcxz fs (bad) xor xchg pop lods pushq sbb (bad) adc fbld in jg ficoml (bad) cmp rex.WR scas xor (bad) jg pop in cs xchg (bad) (bad) movabs in (bad) scas pop (bad) fwait jle xor mov cmp rex.RX sub push sub lea rex.XB sahf gs pop (bad) jmp pop fdivrp or test mov pop (bad) push (bad) (bad) loopne jge mov clc (bad) subb push mov iret mov lods loop imul (bad) push ficomp outsl pop mov rex.B repz lock fs sub movsl xchg ss (bad) mov roll (bad) add (bad) mov mov stos addb mov push pop rex.XB jle nop push icebp nop sbb rex.X xchg mov or sbbl callq (bad) (bad) push or and (bad) rex.X and (bad) sbb sahf sti (bad) (bad) scas jmpq mov popq jb,pt sub mov rex.WR (bad) mov jp jrcxz addl ficomp jne in xchg callq iret jge (bad) pop in xchg jrcxz xor (bad) jb sarb (bad) mov xchg mov rex.RXB fcomp mov stos rep stc lods out (bad) (bad) (bad) (bad) shrb or (bad) loope addr32 (bad) push adcl xchg fwait (bad) adc jmpq push (bad) mov cld jnp xor add in in std jle fdivrl callq sub xor mov or mov lret int out add mov out push lret leaveq cli jrcxz adcl mov test sub cmc or fstl sub popfq adc setge test mov adc lods int3 addl pushfq rex.RXB fldl rex.XB (bad) (bad) (bad) xchg lock sbb (bad) xchg and ss jne in sbb movabs rcll pop sub scas lahf (bad) rex.WRXB xchg lods loope test int3 rclb mov movabs sahf pop cmpsb (bad) sub leaveq data16 movabs in xchg mov scas (bad) sub out push (bad) movsb push or rex.XB (bad) repz (bad) mov lret sbb xchg push shl add negl (bad) xchg mov jnp (bad) add (bad) (bad) lahf (bad) pop (bad) lahf jbe jp (bad) mov rex xchg mov js nop sub adcl mov (bad) (bad) mov mov pop lret sub rex.X rex.WR xchg (bad) mov pop rex.RB push pushfq movsb (bad) (bad) nop out jle sahf and sahf and cmp and add xchg xchg xchg stc (bad) ficomp addr32 pushfq sahf adc loop jne and cmp pop (bad) popfq sbb stc pop sbb in imul movabs int pushfq rex.RX mov int cwtl mov test mov adc (bad) jns rcll (bad) xor jb pop imul loopne xchg movabs orl cmpsl (bad) sbb fs xchg mov push enterq mov cwtl mov (bad) mov movabs push outsl add rex.RB movabs addl loope xor cmp mov out (bad) out fistp (bad) (bad) mov jg imul mov outsl in xor movabs mov sahf jbe hlt (bad) shrb mov mov in shlb (bad) cmp sti sbb (bad) sub outsl rcrl xor or push (bad) ja jno lgs mov int3 (bad) xchg (bad) mov xchg (bad) rex.RB pop cmp (bad) loop rex.RX jg jrcxz mov stc (bad) lods xchg clc rex.WRB sbb mov rex.W rex.XB repz rcr stos mov cmp xor or mov movslq movabs lea xchg (bad) fisttp in jge or and (bad) mov mov cmp es repz push jne cmp sbb (bad) rcll movabs add gs sub or mov mov xor cmp add (bad) mov roll jmpq mov repz jno insl mov movsl cmpsb sbb cli add jbe or fldl sbb mov mov pushfq outsl mov or mov (bad) lret in add (bad) xlat jg or movabs jrcxz or cmp (bad) movsb pop nop fcom add pushq mov mov rcrl out out (bad) (bad) rex.RXB and mov add mov movsl (bad) fildl jnp pop sahf jb pop outsl stos xchg (bad) add cmpsb cmpsl (bad) (bad) pop in ljmp adc cli (bad) push adc sbb out mov or (bad) sti pushfq lret push rex.WRB rex.R es (bad) pop cmpsb pushq int je mov loop mov sar push scas xor xchg xchg movsb paddsw mov mov (bad) cltd orl (bad) fildl jg rex.WB (bad) shr movsb rex.WRXB jg xor std nop lret imul sbb xor xchg jmpq add jno mov popq adc xchg (bad) lret cmpsl rcll addr32 es mov (bad) mov jl fcomip movabs push (bad) cmp xchg lahf in (bad) sub out out mov mov mov (bad) out lret callq out movabs (bad) pushq (bad) xchg sahf mov mov (bad) (bad) add xchg pop int (bad) (bad) mov add (bad) mov cmp add xor rex.WR add rex.WB movzwl movabs fdivl jle out mov and scas and pop adc add or xor out xchg fisttp mov (bad) jrcxz add movabs xchg mov fstps lods sub mov mov and add pop insb out mov lea test push add lods rex.WXB pop jbe push xor cmp jne pop (bad) pop pop fs xchg mov setno (bad) jo mov retq xchg lods jb je cmp test xchg cmpsb in xchg jne lea (bad) sbb (bad) xor jnp cmc clc (bad) cmp nop sbb (bad) (bad) retq (bad) xchg mov push or rex.WX mov and mov adc fcmovbe jo adc rex.WRX or popfq mov sbb scas popfq jmp (bad) mov xchg ficom xchg fwait add insb or pop std xchg and test fldl jmp (bad) cwtl (bad) (bad) retq jno lods je cmpsl lret (bad) (bad) cmp out lret cmp (bad) scas mov movabs and outsl (bad) sbb sub sub xlat insl rex.RX movabs cmpsl (bad) out cmpsl rcll enterq jl pop mov adc xchg sbb cmpsl adc mov lea (bad) and mov rex.WX jp movabs movabs push jg mov cmp (bad) mov xor (bad) rex.WRXB rex.WRXB rex.RXB xor ficompl pushq rcrl adc jmp adcl fstps mov movabs rcll (bad) (bad) je pop ja pushfq mov outsl ficomp sar int mov movl rex.WXB push in faddl orl int icebp push shrl pushfq rex.WXB lret sub rcrb (bad) adc push (bad) int pop rex.XB in retq xor adc pop (bad) lret fwait rcr pop mov iret gs movslq sahf popfq xlat (bad) popfq insb sub mov mov insl fdivp rex.WRB orb (bad) xorl cwtl lea (bad) mov retq or mov xlat ss pop mov pushq (bad) xor (bad) nop outsb retq xchg cmp pushq int xchg outsl xchg pushq (bad) pop (bad) or add sub sub xchg (bad) cmp fs and out lock (bad) mov jmp rex.RB pavgb xchg mov rex.B adc (bad) jb (bad) outsl or gs fwait pushq out (bad) (bad) (bad) mov rex.W mov jno sub pop cltd jnp cld mov cmpsb mov jmp out pop mov xchg int fsubr rex hlt cmovnp incb lods out mov mov rex.WRX and (bad) xchg adc outsl popq ja xchg pop sti cwtl and cmp (bad) pushq (bad) movsl jmp (bad) int retq (bad) in rex.R jrcxz ja (bad) (bad) sub retq adc mov ficomp push out loopne (bad) (bad) xorl movslq js rex.WXB stos mov sub scas (bad) jg fbstp (bad) mov mov test (bad) iret adc cld fwait icebp jg rcll push addb ffreep (bad) mov mov rcr add fdivs adc out (bad) xlat cmpsb lods retq outsl push (bad) iret (bad) data16 or cmc clc jmp fwait cli (bad) xchg (bad) jb xchg mov rex.WRB stos xor loope decb jle fdivrs mov movsb pop sbb adc cltd jmp mov pop jnp xchg mov (bad) stos stc cwtl sbb pop ja xchg push or data16 xchg ficoml imul lahf je xchg cmpsl rex.RXB rclb and adc mov xchg and cwtl and cmp mov rex.W inc rclb pop (bad) movsb pop xor xchg adc movabs (bad) callq xchg cltd cmpsl mov mov jbe (bad) mov sahf ja jmpq xor fiaddl fidivrl cmpsl out xchg jrcxz fisub jmpq cwtl mov jg fsubrl jmpq loopne icebp es xchg mov jmpq (bad) fwait push jnp mov stos add notl adc xchg mov add sysret jae test adc out scas mov cld jmp rex.WRXB stos sbb shrb cmpsl adc movsb sub outsl mov and test sahf mov xchg in cmpsl push adc retq (bad) int adc push mov (bad) or lret movzwl adc xchg nop je (bad) xchg imul cld xorl popfq sti mov jge lods loop rex.WX xlat loop mov mov or rex xlat es sarl cli pop xor jge retq (bad) out xor xor cmpsl add add (bad) lods jnp (bad) fisttpll sahf lret jg rcrl cli jrcxz (bad) mov (bad) (bad) mov (bad) (bad) adc roll xchg jbe (bad) rex.W repz or xchg (bad) repz jb shll cmpsl (bad) pushw rex.RX push (bad) pop enterq (bad) mov (bad) cmp cmp sbb (bad) test roll je push cmpsl rex.RX pop adc fnop outsl sub jae mov sbb and fidivr cmc xchg icebp and lea fcmovne xchg popfq adc (bad) pop decb (bad) cwtl push mov (bad) std mov movslq jmp (bad) imul shrl cmpsl mov xchg or rex.W pop (bad) adc (bad) xchg sti rex.RB out xchg fist (bad) (bad) out sub callq xor or cmp test rex.RB shlb xor jg rex.WRXB fwait cmpsl fild shl mov repnz jrcxz movsl shrb (bad) cltd notb jnp mov (bad) enterq leaveq (bad) retq xlat sub ja cltd ja test ficom rex.X rex.WXB jb cmpsb add (bad) mov ss mov outsb out or cmpsl rex.WRX in jge pop pop outsl rex.WRXB jrcxz flds callq sbb rcll rcrb movabs movabs outsl sbb fadds nop xchg sti jo and nop sbb jmpq movabs and add jb std rex.RXB add pop jge pushfq movslq xor rcr pop in negl or hlt sbb pop jne jns enterq nop pop out test (bad) callq rolb rex.WRXB iret adc adc movsl (bad) lock cmp mov adc outsb (bad) (bad) in xchg xchg xchg (bad) scas out add push (bad) push or mov (bad) in mov loopne int3 cmp adc jl pop xchg push leaveq rex.R cmp rex.WXB cmp mov xchg push loope in rex.R lods xchg (bad) and fs (bad) xchg mov jle in (bad) cmc push mov adc rex rex.WRX xchg xorl pop sub (bad) cld movslq sbb mov retq mov mov mov add rex.WR sahf push (bad) xchg and test test cmp push stc movabs (bad) jbe (bad) lock addr32 xlat (bad) fsts add loopne rex.WRXB lret add icebp shlb xchg cmpsb dec movabs and sub xlat mov lods imul test or outsl mov mov (bad) jmp mull (bad) js or mov cmpsb xchg (bad) or cli push sahf jns cltd outsl mov ss sub xchg lock add sub sarb (bad) adc (bad) and sbbl (bad) imul (bad) jrcxz push cmpsb stos sbb mov lahf pop sti mov and mov in mov outsl jb in mov mov push lea sbb mov faddl pushfq jge imul (bad) jle ja xchg add xchg mov (bad) (bad) rcl in sbb (bad) or or sahf xchg sbb nop mov (bad) movabs lret movabs rex.RXB shlb xchg jp (bad) xchg fidivr data16 in jns lock rex.RX std mov and mov mov mov retq pushfq jrcxz add cmpsl xor data16 (bad) adc repz (bad) orl and push mov out sete rex.WB clc xchg (bad) adc popfq pushq sbb loop sarb mov mov push mov xchg callq pop (bad) sub push sub adc scas mov push cmc or imul shlb rex.RX pushq negb mov add rex.RXB andw pushfq sub pop mov (bad) lea (bad) jge adc outsl test mov (bad) test fistpll loopne jns in pushfq xlat lods clc (bad) mov (bad) jbe mov jnp xor rcr stos adc (bad) hlt rolb (bad) je jmp jrcxz cwtl and cmp rex.WRXB (bad) (bad) ss movabs push rex.WRB mov es ds fwait rex.RX mov loopne sub es loopne (bad) lret sbb cs adc divl retq orb lret cmp popq mov fwait jg (bad) xchg mov and mov add (bad) fsubl jrcxz xlat mov xchg mov and lahf jp je cltd jbe rex.R jle rex.RX sbb lret lahf leaveq addr32 int3 jbe xlat rex.WB jbe sub enterq cmpsb (bad) hlt mov mov stos xchg sti jns xlat lahf and xchg movabs movabs jae lods std xchg (bad) outsb mov rex.RX insb adc (bad) push test cli mov cmp jbe rex.RX and (bad) mov rex.WRX rex.WXB mov (bad) xchg mov js rclb push sbb je mov xchg in adc rex.WR out (bad) push lea shll (bad) add add (bad) in add mov (bad) fsubrl (bad) and or (bad) repnz push je push push (bad) outsl and jl mov test (bad) mov or or stc cmpsb mov xchg repz cmpsb popfq pop jle pop (bad) out mov add add xchg rex push jbe push (bad) mov shrl rex.WB push scas retq leaveq lods addb frstor fisubr xchg loope xor scas (bad) pop andl push (bad) pushq mull int insl jp movslq sub mov xorl or adc pop mov movabs sub add nop (bad) (bad) sub fiaddl add scas (bad) sbb je or cmc (bad) out and adcl (bad) or xchg fsubrl fcomi sbb jne (bad) push (bad) stos rex.X cmpsb (bad) loope (bad) stos cli (bad) rex.WX (bad) lods int3 divb jrcxz mov cltd fs pop psubsw test cmpsl adc (bad) in or sub xchg and in mov ror lods xlat loop loop pushfq (bad) sub rex.XB mov (bad) (bad) (bad) fistpll xlat sub rorb or (bad) (bad) insb rex.X repnz mov pop gs enterq lock enterq rex.WRXB push lahf addr32 sbb loope and cld rex.WXB and mov adcl movabs xchg movsb lods shlb cwtl (bad) (bad) jbe pop jle push (bad) ja je movl sub bswap int3 iret rex.WRB es movabs xchg nop xchg pop fstpl sbbl rex.WRXB cmpsb or sub movabs (bad) lods xlat movslq (bad) or scas rorl mov cmpsl cwtl flds push iret push adcl icebp retq testb rorl sti ds xchg movsb fstps (bad) rex.WRX xor cltd movabs rclb pop xlat fisub adc (bad) pop loop lahf (bad) or rex.WR jg std in cltd jns movabs lret fsts mov mov mov rex.W iret cmpsb hlt lahf jrcxz unpcklps mov shll (bad) push (bad) ja sbb sti data16 cld rex.WRX (bad) (bad) mov (bad) sub cmpsb lods (bad) rex.X (bad) (bad) mov (bad) rex.RXB xchg rex.RX (bad) sub sbb (bad) stc (bad) (bad) sahf xor (bad) sti jp loop cld mov rex.B jrcxz movabs (bad) (bad) pop push rex.WR push xor mov movabs pop mov mov (bad) (bad) int3 rex.WR pminub push rex.B shl movsl (bad) out pop (bad) loopne jns es sub (bad) sub rclb (bad) pop rcrl (bad) (bad) adc rcll (bad) stos (bad) imul push (bad) movsl out fcmovnu movsb or xchg imul lea pop pop mov mov add xor jnp or adc test xchg sub pop fisubl imul push rex.RXB cltd xlat xor and clc in rclb test je add (bad) xor (bad) repz add sbbl sarb add iret adc rcll (bad) fdiv sbb mov (bad) jne (bad) cmc jo fs xchg rex mov rex.WX out cmpsb pop stos lods jmpq xlat test callq cwtl cmp xchg (bad) lret or movabs rex.R lret fldcw movabs (bad) adc and sbb mov adc mov xchg sub adc xchg sti popfq sub mov movabs cs jmp pop sti (bad) mov cwtl mov adc fldl rex.WR (bad) jrcxz std (bad) (bad) rex.WX out pop pop sahf (bad) (bad) pop (bad) ss fs (bad) jbe xlat pop rex.RXB js dec (bad) sub rex.X out jl mov or sub add (bad) mov (bad) imul sub cld rex.WRX fdivp xchg insl xchg mov out pop push sbb push mov fmulp mov ftst sub rex.XB outsl lods lods cmpl adc rex.RX mov testb fdivrp fimul mov sbb addr32 (bad) jmpq js icebp xchg adc cmpsl jg out jbe mov rorb xchg pushq jmp clc ss roll popfq pop (bad) hlt ja scas in (bad) imul rex.WRB mov mov test xchg out rcrl sub mov pop add repnz (bad) int3 jg cmpsb movabs xchg (bad) fsubs (bad) jmp outsb lret push callq push push test lock cmp rex.RXB fnop rex.XB pushq clc loope jns mov rex.XB mov mov mov jns (bad) divl sub and xor sbb scas jmp cmp mov or sbb movsb push scas pop push jle lret xor mov (bad) lret or rex.WXB add mov out ds fistpll je data16 mov jg fisub (bad) mov push lods sub rex.XB js rex.RX out or nop sbb test sahf sub xor push (bad) popfq fstl cmpsl lret jmp mov jne pushq mov in cmc (bad) movabs mov repnz (bad) sub jle retq mov cmp sub andl (bad) loope rex.WXB push stc (bad) rex.XB (bad) movslq pushfq rex.RX xor scas in xchg sti sbb retq xor iret mov out xor xor mov push adc leaveq mov clc fist xchg jns imul and xor jmpq xchg (bad) xchg xchg (bad) mov mov rex.WRB push (bad) jle movq rex.WRB fisub rex.WRB out pushq push push movabs xchg in outsl rex.W push out (bad) and test mov adc hlt or fsubl callq (bad) hlt pop shrl (bad) (bad) (bad) mov rex.R add xchg rex.WRXB (bad) cmpsb repnz add (bad) or jmp (bad) xchg rex.WR repnz rolb mov and pop (bad) stos mov gs mov out outsl (bad) sti fnstsw (bad) (bad) leaveq jno lea mov shll cmp (bad) or lods mov rex.RX cmpsl mov mov out rex.WR adc jns (bad) jnp rex.WRX shrb jb roll (bad) popfq repz iret (bad) push rex.WRX pushfq mov and adc in test fcom cs or rex.WRX pxor je mov sub (bad) or sti jnp (bad) jb (bad) mov xor xor mov mov (bad) xor movslq adc test (bad) (bad) (bad) jns (bad) jmpq add xchg (bad) (bad) xor rex.RXB jae mov movslq jnp pop pop stc xor adc out mov xchg (bad) sub ds (bad) popq (bad) adc mov xlat repz (bad) pushfq loopne jns jno stos or loope sub cld imul pushfq psllq (bad) (bad) (bad) (bad) jmpq pop pushq out cmp xlat sub subl fwait scas (bad) cmp stos xlat sahf rex.RX je insl (bad) sti (bad) sbb mov (bad) rex.WRX mov sub enterq fs icebp icebp jle iret pop outsl mov rex.WX lahf test std out nop adc fidivl mov (bad) or or mov xchg fdivrl lahf mov loopne xchg iret cld pop fstl cmp or (bad) fnsave xor and pop push iret fdivrp mov int cwtl fisttpll adc shlb (bad) movsb fsubp testl cmpsb int3 movsb movsl (bad) lods rex.RX (bad) addr32 jrcxz mov enterq icebp rex.RB movabs (bad) lods (bad) sahf outsb (bad) loope xor sub stos (bad) mov retq (bad) movsb or out jmpq (bad) jne push and jae (bad) jnp sbbl ja rex.WRXB in xchg pushq (bad) sti int adc pop pop pushq out andnps (bad) add jmp sub rex.WR pushq mov test pop fwait mov sbb fwait (bad) pop jns cmp xor pop and adcl xor pop js,pt movsl xchg movq cmp rcrl xchg mov stos or (bad) cmpsl (bad) nop and gs mov pop jmp (bad) pop out pushq and shl mov xlat iret or rex.WRX (bad) gs and jrcxz xor mov mov xor adc sbb (bad) cmp xchg (bad) movsl rex.RX mov icebp jae pop shrb mov mov cmp xchg rcrl (bad) mov (bad) fstl fcomp (bad) mov cmp mov (bad) imul sbb addr32 (bad) or xor vcvtdq2pd scas (bad) testl jrcxz push mov fs jle xchg pop (bad) pop sarl loope je jg jle pop js mov mov xor mov lret xchg add cli fcoms ficoml mov sbb xlat push out xchg sub std test rcrl iret (bad) lret (bad) (bad) lods xchg mov je popfq mov sub int (bad) (bad) shlb mov movabs cmc (bad) lret xor jnp (bad) test (bad) jo cmpsl or es fsubl cmp (bad) (bad) mov adc mov (bad) imul cmp (bad) out lret (bad) or jmp (bad) (bad) (bad) ja movsl xchg (bad) out (bad) push or mov sarl jg nop xlat mov jo add sub nop (bad) rorl sbb (bad) callq movabs mov shrb (bad) mov imul sbb jge cmpsl in cmp repz mov (bad) (bad) imul test adc fidivr ds subl (bad) shll rcrb fs mov pop sbb xchg sub (bad) lret jrcxz rcl scas jnp rex.XB jmp (bad) fimul outsb cmp popfq mov sub (bad) retq pushfq mov rcr add test mov (bad) jo rex.WRXB addl fstpl add rcl es fcomp (bad) scas (bad) in popfq mov (bad) xor pop fisttpll fcoms add rex.WRXB xchg mov sub or jae mov (bad) jl js (bad) adc add outsb sbb mov movabs mov push cmp ja add (bad) popfq popfq xchg jne fsubs xchg in js cmp or (bad) jl ja xchg (bad) sbb lock (bad) bswap neg adc xor in cmp jle xchg adc fsubs sbb rex.WRXB movabs pop out sbb gs or xchg sbb loopne xor rex.RB fwait xor scas adc in fs (bad) cmp imul xchg or or outsb xlat shrl rex.WRXB lods (bad) rex.RXB data16 shrl cmpsl (bad) and push pop shrl fnstenv add jmp scas adc movabs (bad) jg in add mov (bad) (bad) (bad) cld fwait mov adc clc lea je in rex.WRXB movabs push fildll (bad) rcrb sub fistp sub xchg sti xor (bad) fcmovb pop add retq add pop (bad) out mov (bad) and mov mov adc xor mov pxor outsl adc xlat mov and rex.XB ficomp negl xchg out repnz pushfq xchg incb popq or mov (bad) outsl fwait addr32 pop (bad) (bad) (bad) xor xchg sar push mov cmp shrl pop push stos sbb addr32 or xor adc cwtl (bad) movsb rex.RXB lock (bad) sarl rex.WRXB mov data16 jge (bad) cmc push ds insb cmp mov pop pushq (bad) pop rclb rex.RXB pop movsl gs or fstl or sahf (bad) add (bad) cmpsb and mov rex.RXB sahf lea popfq and pop addl out (bad) movsl (bad) imul mov icebp mov or gs jmpq iret push rex.WR cld cld sahf in out (bad) mov loop jbe rorb push hlt mov (bad) (bad) mov adc lods mov rcrl fimul push (bad) rex.WR flds std sbbl sbb (bad) cmc nop fisub (bad) add jno push mov fmuls sub rex.WRXB (bad) add mov fidiv mov popfq imul rex.WRXB push icebp jae pushq sub mov (bad) xchg (bad) es scas xchg (bad) movsl rex.WRXB fsubp pand (bad) push shll (bad) stos lods adc movabs insl jnp js and out cwtl jge sbb lea (bad) hlt gs (bad) pop leaveq (bad) jnp (bad) xchg ja push jno sub std adc stc rex.WRXB ficoml (bad) (bad) rex.WX cmc rex.WXB mov mov push xchg xchg fild sbb stos add xchg rcll in mov mov (bad) xchg (bad) fbstp (bad) lret jnp pop (bad) icebp mov sub cmpsb (bad) pmulhw jnp (bad) (bad) xchg (bad) mov adc jp (bad) mov jl rex.WRXB sahf insb rex.WXB cs mov (bad) adc (bad) rex.R or lcall mov outsb (bad) pop push rol (bad) (bad) je pop mov pop sahf lods push cmp in cld mov and (bad) xor jo xor and lods repz sub test (bad) cld out rex.XB out jg adc (bad) je outsb pushq mov (bad) rcl pushq xchg xchg push (bad) (bad) cmp fwait rex.WRXB pop int3 (bad) and jo pushq adc mov xorl (bad) pushq (bad) mov jo pushq mov (bad) stos (bad) mov lea (bad) sarb fstpl xor xorb movabs mov std scas fild rex.RXB stos in fsubl ja (bad) movabs mov fist (bad) sbb sub push out loope rex.WRXB (bad) mov mov mov (bad) rex.WRX retq push data16 xchg mov (bad) faddl cwtl adc rex.WRB insl or retq xor and (bad) movabs (bad) jmp in nop cmpsl sbb mov adc and loope fidiv xchg in fstp (bad) sti repz fldt xor pop mov pushfq and pushq push (bad) (bad) pop mov ja (bad) cmp mov jrcxz (bad) scas rex.WB clc nop outsl xchg (bad) (bad) movb mov (bad) jno xchg pop js (bad) push (bad) shrb out push rex.RB cld pop xchg mov jno (bad) rex.WRB jl rclb mov std (bad) out (bad) jae or pop jne push imul and retq cltd subb out push mov add leaveq mov adc sub movslq decl sti mov outsl repnz jae push (bad) pop jno divb (bad) jrcxz gs pop (bad) cmpsl and pop sarl pop xchg loope mov cli std and lods push enterq (bad) mov outsl fwait add sbb outsl xchg mov rex.WRXB mov outsl lods (bad) mov cmp push mov cmpsl fs rorb (bad) adc stos int xchg adc jg lahf (bad) (bad) cmpsb cmpxchg (bad) (bad) movsb mov add rex.RX xchg mov or pop xchg xchg movslq mov repnz (bad) retq (bad) nop mov fidivr adc pop (bad) pop xchg nop push (bad) (bad) cmp fcmovnbe mov mov (bad) jp (bad) test test outsb lods out mulb pop loopne out add lret movsb (bad) pop xor xchg and mov cmpsl (bad) sti fidivrl sub mov (bad) (bad) xchg shlb insl pop cmp movsb xchg lea pop (bad) and pop fstl cmp retq xchg sub mov jae insl sub icebp xor retq mov rex.R nop jnp je (bad) mov imul sub fstpt lock movslq jbe jrcxz jle pop retq sbb sahf test (bad) (bad) (bad) mov rex.WXB addr32 setg jo fsubs lret sub clc mov jge sahf loopne rex.RX cli jmp (bad) out or jae in xlat add cs (bad) sahf movabs or add cli add (bad) mov (bad) (bad) (bad) or xchg rex.WR sub sub movsb jno adc scas xchg jge (bad) or (bad) xchg fimul (bad) cmc out pushq sbb insb addr32 (bad) xchg sbb mov pop jnp mov fcmovbe sbb popfq adc mov sar pushfq or addr32 jo add push (bad) jne (bad) stos mov add cmpsl xlat adcl mov jns nop and (bad) (bad) xor gs movabs mov mov mov test jb push (bad) rex.WR mov stc (bad) adc lods adc jo cltd xor jrcxz (bad) imul sub (bad) jnp or sarb repz (bad) rex.WX data16 xor xchg mov test out fs sub es cmp (bad) fcmovu and in stos add lret lea (bad) jl rex.WRB sahf gs sti rex.WR insb movabs mov out jmpq nop rex.WR loope (bad) or fs cmp int3 pop popfq rex.WR xchg ss mov (bad) (bad) push data16 pushq cltd jno xor jne out lods icebp adc mov stos adc cltd sbb or lods fdivrs movslq mov xchg xchg sbb jns (bad) cmpl ficoml imul cmp mov (bad) and mov cmp pushfq push cmp ffreep push sbb mov movsb movslq ss and lock (bad) mov iret and push mov mov or jl fwait lock repnz or loopne add jmpq (bad) addb mov add rex.WRB push and rex.RX rex.RX cmpsb in push stc (bad) cmpsb sbb (bad) add jne mov mov jrcxz loope pxor outsb xchg enterq (bad) sbb xchg rex.WRX pop pop fadd (bad) mov (bad) mov xchg lea pushfq popfq jmpq add test add stc xor (bad) lret sbb scas (bad) jl and imul (bad) and loop (bad) jp sbb out push (bad) shlb pushfq (bad) (bad) testb rex.RXB rorl or (bad) iret fimul or out jbe sbb sub or pop data16 mov jl (bad) and jnp ja adc subl cld data16 movslq rex.XB rex retq (bad) xchg mov stos pushq (bad) (bad) cltd sbb (bad) xor jno repz xor mov orl (bad) cs lret jbe lea (bad) xchg addr32 sbb (bad) ficompl data16 lahf mov int3 jg sbb pop (bad) adc data16 shrl mov xor rex.RB scas je test xchg or sbb mov jle (bad) (bad) (bad) mov lock rex ss mov mull in ds fwait (bad) ss and cmpsb xor cli fdivrs rex.WRXB notl lahf subl push hlt xlat (bad) jle fcomp pop fiaddl out adc movabs cmpsl cltd xchg jg in std movl pushq mov mov movabs adc mov insb (bad) orb pop (bad) rcr (bad) outsl xchg sub rcr mov or in rex.WRX (bad) imul lods lock (bad) adc and xchg (bad) movsl ds mov rex.RXB mov sbb stos insl rex.W data16 mov cmp push add testl cld nop lahf xor idivb sbb and add mov movslq or push xchg xchg xchg mov jb jbe mov flds ja (bad) cld loop fstl lods leavew sub movabs mov jnp rol mov mov xchg (bad) callq pop out jbe popfq (bad) xchg shrl mov rex.WXB cmp pop adc sub or roll ss (bad) (bad) (bad) sub jnp and xlat pop movabs movsl rex.WRXB jg push lahf (bad) (bad) stc pop xchg push (bad) mov pop cmpsl (bad) mov (bad) lods mov mov xchg mov addr32 (bad) mov (bad) and xchg rex.WRXB fnsave imul int mov imul rex.WXB xchg fsubrs fsubrl xchg pop movslq movsb push not hlt fisubl cmp (bad) jbe push pop lea rex mov outsb jne lret xlat (bad) shrl test pop xchg popfq fisub add mov jnp cmpsl sub mov pop xor rex.WRXB pop or ficomp outsl (bad) fisubrl lea test pop enterq rex.RX addr32 cmpsl pop mov test (bad) push (bad) movsb movslq adc (bad) (bad) sub out rex.RXB sbb sub and jmp jnp xlat sti roll test pop mov (bad) popfq xchg xor push scas rex.RX imul jp (bad) mov (bad) retq mov mov rex.WXB add and rex.RX sti pop jg lahf (bad) std xchg rex.W mov mov and retq (bad) adcl rex.WRXB retq loop scas push std pop fdivp push addr32 movabs sahf fisubr (bad) (bad) lock lea pop fstl (bad) pushfq jmp (bad) xchg jmp (bad) (bad) jmp (bad) cltd jmp (bad) cwtl jmp rex.WRXB cs (bad) fnsave rex.WRXB (bad) mov lahf sbb mov xlat sub rex.WRXB (bad) xchg mov fistpl add negb or (bad) outsl xchg mov movslq (bad) pop rex.WRB push test sbb adc adc mov addr32 adc (bad) mov sbb (bad) rex.WRXB rex.WRX rex.RXB mov rex.WX xchg sub divl jmp mov pop mov sti cltd adc callq (bad) (bad) or ficomp cmpsl (bad) and pop jmpq xor (bad) lods and mov xlat fwait jbe mov add or xor mov rex.RB or push jle pop in rex (bad) sahf lea (bad) insl sbb cwtl and lea mov outsl mov sub int fistpll xchg add jnp test mov mov movabs outsb rex.RXB mov or lret mov and lea jbe rex.WRB add sub (bad) callq (bad) xchg movslq rex.RXB iret (bad) std jrcxz sbb mov (bad) in pop fisub or xorl faddl or xor xorl faddl sbbl (bad) xchg mov (bad) in mov iret out xchg rex.WRXB movabs xrelease out cmp sbb mov jrcxz fild mov fcmove cmp ficoml (bad) cmp lfs sbb xor fcmove (bad) cmp fiaddl (bad) cmp ds xchg ficompl (bad) leaveq fnsave jge mov push (bad) mov and (bad) cmpb sbb mov rex.WRXB stos xchg cmova fldl (bad) movabs jae xchg rex.WXB mov movslq pop cmpb sbb mov (bad) out jmp ja jg (bad) fistpll (bad) xchg lea (bad) movsl and xlat fwait mov xchg cmc pop je adc or (bad) fidivr imul push test add (bad) fmull test in ja jno pop setno addr32 jae and jmp insl adc outsl rex.WRXB (bad) movslq (bad) imul pop adc movslq mov ds add movsl popfq int3 shrl push rex.RXB xor out lret fstpt (bad) rex.RX (bad) cmp insl rex.R cs jmp ljmp out mov outsl (bad) data16 movslq rex.WR sbb or push insb outsb and adc ds mov movabs pop xor sbb jno std mov adc (bad) jg mov lret callq mov or mov outsb mov (bad) mov rex.RXB ds movsl movabs loop (bad) add xchg cli push repz fs mov retq ficoml pushq mov icebp mov je mov adc pop in jge cmpsb (bad) add je add scas sbb mov pop gs fwait movsb rex.X xor or sub (bad) ficoml (bad) mov shlb rex.WRB imul fisubl or in outsl lea (bad) cld push jg (bad) xchg (bad) in rex.RXB in rex.WX and pop lods jb outsb add movabs mov push rex.RX (bad) std sarb loopne movsb jmpq (bad) rcr jp rex.WRXB enterq sub cmp and or repz notl jmpq (bad) loop or sub mov adc xchg lret (bad) adc rex.WB movslq sub repz outsl xor pop xchg callq sbb in (bad) rex.RXB pop callq rex.RXB fist and sbb xchg jno (bad) repnz sub imul cltd iret rex.WB (bad) xorb shr pop or (bad) in (bad) rex.X fbld jp adc icebp (bad) fs stc (bad) mov and fcmovu rex.WRXB jge loope test outsl cmp push rcrl fdivp (bad) in sti rex.WRB add enterq icebp mov and movsl adc in (bad) sti stc (bad) (bad) cltd rex.WB rex.WX jl shrl adc (bad) (bad) adc mov push (bad) cmp (bad) xor je adc xlat mov (bad) rex.B rex.WRB pushq sysret fnstsw fs movabs or mov mov sub repz push rex.WR xor mov adc fnsave loopne fsubs retq sub (bad) retq (bad) or cmpsl cmp scas mov push xlat jo mov iret cmpsl add repz mov loopne sbb xlat push movsb outsl loope add adc and cmp xchg ficompl (bad) mov divl xor (bad) jge repz popfq imul xlat lea fisub in xchg push lret mov xchg outsl hlt jnp (bad) xchg sub or sbb push sbb cmc repz fsubr (bad) cwtl fdivl es xor (bad) cwtl or adc xchg sbb hlt push jle (bad) (bad) jge pop xor add lea (bad) mov fs addl sbb lahf fcmove rex.WR rex.XB jb mov int cld (bad) sbb adc sub (bad) (bad) pop out jno lea xchg (bad) unpckhps lods cld push lods jle cmc sahf pushfq cmp fs xchg rcrb mulb mov xchg jmp jmpq nop (bad) cld push adcb xorl addr32 add jns or (bad) hlt in (bad) fistp pushq lods fiaddl pop xor xor testl and xchg out (bad) fildll rex.RXB je shll data16 fsts (bad) rex.RXB (bad) mov (bad) pushq lea sub (bad) xchg mov (bad) cmpsl or sahf (bad) lahf xchg adc pushfq cmp push pushfq pop jns xlat add movabs jno rorl mov (bad) (bad) scas sbb xor mov adc mov out sub add retq xor sbb (bad) (bad) xor addr32 jg rex.WRX rex.RXB repz and ja fisubl cmp fldl iret (bad) (bad) push ds xlat (bad) out mov out xchg int3 rex.RX sbb out xchg cmp pushq (bad) xor pop xchg (bad) (bad) int outsl idivb popfq jl sbb std fidivl sarl add (bad) int cmp popfq jbe (bad) je (bad) repz jmpq cltd cmp (bad) outsl xor (bad) or adc jl scas in lahf add (bad) hlt insb fsts fs ss out mov rex.RX int rex.XB mov (bad) addr32 clc addr32 cmp rorl (bad) push cld movabs addr32 mov (bad) jg sbbb notl in rex.RXB callq mull out (bad) rex.WRX flds xor (bad) jne in (bad) mov orl xor cltd addr32 js (bad) cmc pushq rorl pop (bad) scas test fiaddl ds pop adc pop (bad) cmpsl mov mov pop rorl pop (bad) jle outsl out xor and (bad) adc jmp xchg (bad) stos fimull test xchg ja pop sti (bad) (bad) mov jae and lret (bad) jbe sub (bad) rex.WRB scas adc (bad) callq insl rorl and mov outsl jp scas push jp pop leaveq sarb stc cmp (bad) (bad) (bad) jne push loop (bad) stos addl sarl mov jne (bad) cmp (bad) (bad) (bad) loopne (bad) es fwait js outsl movabs sbb hlt sub rex.R jrcxz rex.B out rex.RB (bad) (bad) sbb (bad) leaveq or movabs xchg rex.RXB (bad) cmp adc push (bad) loopne (bad) xor out rex.RXB or (bad) cmp fadds cmpsl pop mov push (bad) and mov fdiv (bad) (bad) pop mov (bad) mov leaveq mov mov pop out add mov iret sbb lret loop mov shll (bad) (bad) jae jmp rorl lods cmovs callq mov sbb outsb fs shll rex.WRX push and (bad) jle rex.RB ss push shlb cmp stos push std cmp sub adc push fmuls fs lahf xor mov jns mov jb rex.RB rex.WB icebp xrelease and out or or add scas (bad) (bad) sub xlat (bad) pop push pop pushq repnz (bad) cmc in jp adc data16 movabs push int rex.WX loopne pushq (bad) mov adc rex.XB out pop or or xlat int incb jae sub xchg rol jne xlat pop sub jns pop sbb sahf (bad) je,pt popfq nop sbb jmp adc pushfq xchg enterq push lahf or or mov popfq rex.WRXB mov add jp and jns scas (bad) lock sahf movsl fildll rex.WXB push jg mov and cmp rcl sahf cmp ficomp rex.WR pushq (bad) test (bad) cs fmul sbb cmp (bad) sub xchg xor and adc rex.XB sarq fsqrt (bad) (bad) (bad) or and rex.B sbb (bad) xchg sub cwtl mov (bad) mov add cwtl push fsubs or mov xchg mov (bad) ss leaveq mov shlq mov decl mov cmc fisub rex.B cli cmp rcr mov or test adc scas (bad) repnz (bad) fcomp jbe sbbl rex.WX cmp push jno jmpq and (bad) mov xchg movsb fidiv (bad) mulb (bad) fstpl (bad) and xchg rex.WRB adc xor repz push (bad) fdivr fnstsw add pop (bad) and (bad) mov scas jns add (bad) adc add or (bad) out xor negl mov jg rcll retq cmpsl pop (bad) loop rep orl dec pushfq (bad) mov lret lea imul callq and (bad) mov or mov (bad) (bad) cmp jrcxz leaveq stc rex.RX addr32 cmp rex.WRX sbb mov rex.WRX (bad) sbb lea nop add rex.WB (bad) (bad) sbb lods (bad) (bad) sbb and insb mov xor imul (bad) cmp leaveq push gs fildl retq adcl mov (bad) fisubr sub sbb mov addr32 imul xchg (bad) mov (bad) pushfq adc divb movabs xchg in fildl adc cmp scas loop movabs xor stos push (bad) cmpsl xchg xchg (bad) adc (bad) (bad) gs pop (bad) out fnop jnp mov (bad) mov cltd movslq (bad) lods jmp test add jbe stos xor adc xor cmpsb xor (bad) scas nop scas je mov adc (bad) push outsb enterq std fcoms fsubrp orb stos xchg and rex movabs add lea cmp rex.RB sbb pop lret sub sar mov out movabs mov pop test mov mov mov imul jno rolb popq or fidivr add (bad) loopne rex.RX mov (bad) psubd cltd push xchg rex.RB mov insb (bad) push (bad) xchg out (bad) rex.WRB rcll xchg rex add lahf loop cmp xchg lods repz test mov sbb push xchg (bad) mov lods mov xchg retq test lods (bad) hlt test rex.W mov in std (bad) in loope jmpq rex.RXB cmp (bad) cmpsl shlb xor jbe,pt pop (bad) jmpq cmovl (bad) cld mov mov or out pop or cld rex.WB pop out cs adc rex.WRB addr32 sti lea sar mov (bad) and jmp idivl cmp (bad) movsb xchg retq mov adc (bad) adc mov cmp repz or sub test mov scas jmp lods sub (bad) mov jg (bad) push push loop (bad) test xchg jns sub rex.RXB (bad) out add sti scas xor rex.WRX rex.RX or xorl push (bad) cmpsb mov push xchg rex.RB push mov (bad) xlat test mov mov int3 cmc or push movsl movslq cmp (bad) addr32 adc add and and xchg xchg cmpsl xlat ja add jae (bad) lods rex.XB xor movslq repnz ja mov cmpsl xor sar out movslq push jp data16 mov pop or rex.RX adcl data16 lret (bad) (bad) test (bad) mov pushfq in loop xchg (bad) (bad) cwtl (bad) movabs fsubs test xchg mov jo (bad) lret lods jg leaveq rep xchg push push movsb xor mov rex.RXB and test je cmpsb sbb (bad) es test sahf cltd (bad) mov lahf or mov ds jns lods popfq sahf sub rex.WRB scas fwait (bad) xchg jb mov adc movabs mov gs movsb stos lods (bad) mov movabs or cmp mov cld enterq std rcl mov movabs repz (bad) sbb jo ss xlat fs rex.X (bad) out add negb xchg (bad) movsb rex.RX or jge sub fcmovb xor pop notw xlat (bad) pushfq push ds cltd lods jo out iret sub (bad) jb rex.RX (bad) movl mov cmpb pop adc sbb mov xchg rex.WR mov mov adc cmp pop lcall mov (bad) mov lock movsb push sti pop xor out icebp add adc rex.WRXB rex.RX sbb adc jo cwtl adc and mov sahf jrcxz loope xchg (bad) pushfq (bad) xchg xchg (bad) loopne outsl in xchg rex.R sahf loop insl cltd adc mov movsb and cmp lea xchg (bad) movabs cltd movsb int3 mov lahf cmpsb ss repz in sub sbb rex.WXB mov xchg (bad) mov repnz imul xor outsb fst sarb lods mov xchg xchg push pushfq or popfq mov data16 pushfq out sbb adc mov movabs (bad) fstp push int movsl jg mov sub and sbb lods jmpq stc jmp sub lahf shl (bad) popfq mov mov cmp rex.XB jno sbb test mov (bad) mov mov (bad) movabs outsb mov mov fsubrp adc fdivrs (bad) and loope lcall rex.WRXB (bad) mov shll pop cli (bad) sub mov xchg sbb hlt jg mov rex.RXB (bad) jae (bad) lock cwtl (bad) xchg jmp movabs outsl int pop sarb sbb pop mov shld jae jnp (bad) outsl mov add xchg jne pop add rex.XB popfq adc sub (bad) sub rex.WB mov (bad) xchg rex.WXB pop idivl jge (bad) out rex.RXB cs sbb mov jns rex.WB movslq xchg loope std out xchg scas pushq mov (bad) sub mov jg pushfq adc add es (bad) in sbbl pop sbb cmpsb rex.RXB int3 lret mov cltd rex.X (bad) xor rex.X cmpsb jns or imul out in xchg (bad) (bad) (bad) adc iret (bad) or mov jb (bad) (bad) mov movabs mov repz pop repnz xchg pop rex.WR shll sahf sbb sub movsb movabs and movsb or mov ss mov fwait xchg pop movabs ficompl movabs (bad) xlat loop cwtl fisubl pushq (bad) movsb (bad) cltd mov cwtl mov out mov sbb es mov mov mov sti rcr nop pop add out adc mov or int cmp pop cld cltd mov ja in xchg icebp xlat jae mov mov decb es movsb rex.WX sbb or stos (bad) xchg (bad) imul xchg jmp adc (bad) lea jrcxz fisubl mov (bad) sub pop loopne mov leaveq repz movslq test (bad) lods (bad) (bad) mov or iret and or (bad) adc and xor lods stc es sub cmpb (bad) pop jle sbb loopne jp lods and lea mov and mov rex.R in es and (bad) mov jae lea xor leaveq scas (bad) (bad) outsb xchg movabs enterq decl mov scas jmp rcl sahf callq repnz mov (bad) sbb and xchg or mov (bad) pop stos and mov cld (bad) cmp cwtl fcompl push (bad) movslq pop mov lahf test shl fcmovnbe xchg pop push imul push xlat pop xchg mov pop (bad) jmp pop fsubl (bad) lock xlat jg adc fwait add xlat mov adc pop pop add xchg xchg lahf (bad) sub movabs (bad) mov push fsubrp jno pop rex.RXB pop xor or pushq movabs fwait movabs (bad) out sub (bad) lahf xlat orb repz jmp xchg pushq movabs mov fcoml (bad) mov (bad) out iret sub (bad) jbe rex.WRB pop pushfq scas or rex.WRXB cmc (bad) sti add ror stos pop adc cmp out jp mov imul lods repz lahf repz pop xor lahf ss and (bad) gs jmp xchg (bad) push cmp scas pop and (bad) movabs xchg (bad) scas test pushq jp (bad) fucomi pushq addl lcall lahf jae sbb or movabs adc (bad) int jns lret xchg retq adc cmp (bad) addl mov rex.WRXB sub xchg icebp or pop shlb rex.R (bad) mov movabs adc adc sahf mov outsl adc sub xchg (bad) loope (bad) pop jrcxz retq lret (bad) fdivs xchg cmp scas xchg jrcxz cmpsl ja ss rex.WRB jae (bad) movabs mov (bad) xchg xor xchg xchg xchg xchg (bad) callq jrcxz sbb (bad) or movslq or sub (bad) adc mov cld xlat rex.RXB movsb test (bad) xor mov hlt rorb ja in (bad) and sub iret in nop mov rex.RXB xchg pushq mov add sbb adc xor mov rex.WRB mov (bad) sbb nop jbe mov movslq xchg (bad) ja (bad) (bad) (bad) mov int3 cmpsl test jrcxz movsl push (bad) add iret mov or scas mov rex rex.WXB rex.XB int3 mov out cmpsb mov mov (bad) (bad) movabs callq sub mov xchg jg shlb jno (bad) xchg jb lea cld push subb xlat outsl movabs xchg stc (bad) xlat pushq (bad) mov jle cmc insl callq push xchg xor rex.RXB rex.W mov nop ds test xchg enterq je in xor adc lahf (bad) (bad) add int (bad) adc repz rex.WXB rex.RXB and sub (bad) jbe pushq (bad) rex.WB jo add xchg leaveq jnp xchg fwait sub pop gs incb addl jmp rex.WXB movsl outsl js pushfq jnp (bad) stc fcompl (bad) out test popfq cmpb movsb xchg (bad) rex.WRB rex.WRB (bad) xchg (bad) pop jge popfq fwait (bad) mov mov xor (bad) (bad) adc push neg lret lods pop pop xchg sub push vandnps in lods jl jg ja ds pop cmpsb mov insl (bad) (bad) retq std (bad) mov repnz (bad) mov xchg push pop movabs mov (bad) sbb jmp gs cmp xchg cmp xlat jbe movslq stos adc cwtl jae iret xchg (bad) (bad) push (bad) mov jne sub mov (bad) mov cs push jae ja retq movsl mov (bad) stos lods (bad) adc rclb fstpt adc rex pop movabs (bad) xlat insl nop mov jae popfq or sub fsts jmpq xlat rex.WRB xlat mov retq jns rex.RXB int3 (bad) xchg mov fsubrp xchg (bad) (bad) (bad) rex.WX jrcxz mov lahf xor rex.WXB sbb sub jbe pop jmp mov xchg rex.RX pushq shrl push lods cmp retq mov (bad) scas (bad) repz in xchg mov pop fimull (bad) xlat insb pop mov (bad) cwtl cld rcrl hlt jbe adc pushfq rex.RXB hlt andl rcl repnz (bad) mov insl in movabs pop fcomps jg xchg int3 addl push mov movabs ds mov mov xchg mov (bad) mov mov imul adc xchg mov fnop mov rex.B rol sub xlat push (bad) mov stos xor idivl xchg (bad) sbb (bad) rex stos nop mov rex.XB (bad) mov clc mov mov (bad) and out lods mov and addr32 rex.XB rex.WXB (bad) mov xlat and add nop sbb mov push rorl setnp (bad) mov push xlat test mov divl xlat (bad) pop and push in rex.R mov add xchg jae popq movsb rex.WRB add imull andl sbb fidivr scas movslq (bad) push mov jge scas sbb rex.WRX mov jbe (bad) adc rex.RXB outsl cmp repz jns sbb popfq rex.WRXB cmovg int lret or ffree pop rex.WRXB rex.XB add fnstsw rex.WRXB jg cmp (bad) rorl sub lods add sbb mov push mov sti cmpsb pushq (bad) jmp test push xor mov sub pushfq rex.WXB sbb (bad) stos mov and add fistpll scas out pop adc xor rex.WXB mov adc lea ja stos (bad) (bad) xchg movsb fcmovnbe fwait movsl test (bad) movabs setl mov xchg xchg fdivr jg movsb fdivrp add andl mov je xlat xchg mov pop jmp (bad) sbb (bad) push (bad) xchg rex.WX jbe xchg jl rex.WRXB adcb mov xchg or and xchg xlat pushq test lods jns (bad) pop (bad) ds pop (bad) mov movabs fistpl xchg rex.WXB jge or addr32 rex.WRX and mov jg iret push int push mov scas cli pop xchg (bad) push jl out pop rcrq jmp std add movsb mov mov jrcxz push mov xchg xchg mov xchg out iret mov rex.XB test fiadd lret cld mov movabs xchg int (bad) scas (bad) (bad) cmpsl sbbl iret mov imul adc xchg jge mov mov vsubss adc lea (bad) (bad) mov movabs rex.XB mov xlat xchg mov (bad) (bad) jne cmpsb retq nop (bad) pop xchg neg retq or lods cmp scas pop push stos jl lea jmp pop movl (bad) push es mov xchg int mov pushfq (bad) fild movb leaveq pushfq rex.WRXB sarl mov andl sbb sub fistpl mov sti push mov mov cmpsb pushfq pushq test rex.XB push mov xchg mov (bad) out fs mov mov pushq fs jbe or ds sub cmp adc loop sete popfq test leaveq mov rex.XB cmp sbb and push retq fisubrl xchg lock mov mov adc fcmovnbe xlat lret movabs xchg lret (bad) (bad) mov jp leaveq jne mov mov (bad) adc iret push cmpsb rex.RXB rex.B cmc retq mov ficompl jrcxz imul iret rex.WXB test (bad) int (bad) int xor pop ror (bad) imul in hlt cmp lea cli movabs cmp or fmul cmpsl (bad) ss push mov fs jge divb rclb mov mov (bad) movsl (bad) xchg lret rcrb push sbb pop (bad) xchg or mov leaveq mov mov (bad) out jp enterq nop (bad) rex.B sub and rcl or in pop cmpsb cmp (bad) mov rex.RXB lock jl (bad) add fldl mov test rcll hlt jae movabs push pop (bad) outsl es rex.WRXB push (bad) (bad) (bad) pop mov mov in (bad) (bad) (bad) xor xor ss or mov fcmovbe xchg jle push jae in pop xchg mov rex.WRXB iret mov (bad) addr32 mov sub mov push fnstcw fidivrl (bad) pushq jl mov sub mov (bad) test cmp ss (bad) lcall movabs xor sub xchg (bad) sub movabs (bad) rex.WXB jo rex.RB add and xor (bad) in xchg and jae fnstsw sbb pop cltd jns cmpsl movsb xchg loope adc xchg xchg rex.RXB pushq fcmovnu imul jnp mov (bad) mov (bad) rorl test mov data16 jg fnstsw xchg ja cmp lods (bad) movabs cltd (bad) test ss sub mov (bad) and fidivrl ficompl xchg movabs retq or fnsave pop sbb mov in scas xchg out repz mov in sub rex.X cmp mov lret (bad) mov iret (bad) or pop mov push pop rex.RX push mov incb rex rex.WR sub mov adc add (bad) rex.WB jo out out mov mov mov jns add mov in std push movsl rex.WRXB insl (bad) lods sub mov vmread mov push mov or mov cmp push jl mov test xor push movabs cmp sbb push mov js pop int push sub mov (bad) scas mov sbb mov cmp xchg rex mov outsl jae mov or hlt add stc sbb jmp int pop (bad) xchg (bad) imul rex.W callq add (bad) or and jnp rcrl pop out sub fdivs mov rex.WRXB or push (bad) (bad) fidivrl out pop jge mov lret mov insl (bad) mov lea rex.WXB rex.WX pop (bad) (bad) mov (bad) push (bad) rex.RX add push rolq (bad) iret (bad) xor in iret sarl xchg cmp xor xor (bad) xorl retq (bad) (bad) fucomip stos js (bad) add cmc hlt (bad) jrcxz mov sbb add mov movslq orl add xchg retq jnp sbb out ljmp jrcxz mov shlb movslq leaveq (bad) (bad) movabs mov mov mov stc sbb mov mov lahf cs or or mov movabs in mov adc rorb out sti stos sbb fistpll out pop (bad) mov pop cmp or out sub push xchg (bad) fnstcw push rex.RX ss (bad) sub jg or mov xlat in mov rex.WRB mov (bad) callq sbb lret int3 (bad) movb (bad) stos add cmpsb jg mov (bad) (bad) fs (bad) in pop and outsl sub loopne cmp fcompl (bad) rex.WB mov fwait rex popfq pop mov (bad) cmp push (bad) fsubrs add xor cmp mov scas rex.WRB mov (bad) test (bad) fdivrs (bad) (bad) jg je jg sti or stos (bad) or add (bad) gs outsl or out (bad) cld fnop jmp data16 and and imul (bad) xor jmp movsb (bad) movabs pushfq rcr (bad) (bad) adc loope xchg movslq fcoml xchg (bad) jne mov rorb lods xchg (bad) mov pushfq callq (bad) jbe movabs movsb pop mov and lods in jb (bad) xchg fwait jno (bad) cltd push jrcxz je add rex.WB sub and sahf mov fs and fs push xchg pop pop xor loopne pushfq add fnop adc movabs outsl movabs mov stos add iret outsl cltd xor add xlat (bad) jg rcr (bad) jge int (bad) jge lock and test cld mov jmp mov outsl (bad) movabs mov sarb (bad) loope decb rex.WR in mov (bad) push xchg (bad) sub (bad) (bad) lods rex.WRB rex.W sub xchg mov xchg roll in pop (bad) outsl jno cltd sub insb rex.RX and cmpsb std rex.RX (bad) outsb or sbb and int3 push shl outsl retq test adc xchg xchg lahf jae mov sbb fisttpl cmc push and rex.WX gs lret (bad) lret pop outsl lahf data16 xor imul iret adc rex.W add clc mov pushq rex.WRB pop in push xchg out in and rex.R test (bad) pushq (bad) push int (bad) (bad) orl (bad) enterq cs (bad) adc incb (bad) (bad) jo stos shlb scas xchg pop loope push cmp mov cmp movsl sbb leaveq (bad) insb gs cmpsb push test (bad) movabs enterq jne xchg lahf je or xor mov add movslq push sti (bad) push out sub or xchg adc sbb mov rex.X fwait (bad) clc push push out fstpt imull rex.RB imul cmp (bad) fsubrl (bad) loope mov jnp movsb jmp jne mov sbb (bad) fistl cmpl jae cld std fdiv mov pop push xchg (bad) (bad) pop retq (bad) retq (bad) (bad) mov repnz jg push retq nop adc cltd xchg cmpsb sahf loope xchg callq loopne jle mov jg clc (bad) mov pop loop out out stos (bad) sahf jmp add pop sbbl cmpsb jg cmp mov pmulhrw and cmp add (bad) rex.WRB mov outsl adc inc mov xchg xchg adc mov (bad) push jl repnz push pop mov or lods mov cmpsb test lea lret pop out je imul iret jrcxz xchg (bad) callq mov repz or test enterq outsl rex.W fisttpll xor lret and rex.X rex.WRX fs out adc (bad) xchg (bad) mov mov jg cmpsl nop (bad) sub cltd data16 xor rex.W mov movsb adc insl je (bad) outsl int3 cmpsb jbe sbbl (bad) nop lods mov out scas sbb mov cwtl cmpsl shr (bad) fimull push movabs rex.RXB rex.XB mov (bad) push and (bad) or (bad) movsb adc mov jbe popfq push pop fcmovbe fcomps lods data16 test pop stos pop jbe xchg jo push (bad) pushq mov (bad) sub ltr push pushq (bad) mov xor (bad) add fistp xchg sbb insb (bad) (bad) decb std cld jrcxz (bad) clc push adc xchg outsl add sti cwtl or mov adc or insl adcl movl mov pop je or retq mov (bad) sahf jbe test mov sub rex.WRB mov or sub xchg adc xchg adc callq je push cld outsl retq (bad) fwait sbbl enterq and or out callq adcb (bad) xchg (bad) pushq mov xchg iret mov leaveq xchg callq jg outsl mov cld xor insb jrcxz cmpsb rolb pushq out data16 adcl xchg scas fcmovnbe sub decl cltd mov fcmovu imul sahf jmp xchg test loope push xchg nop adc jg (bad) jo loop clc (bad) rex.X rex.WRX xor fsubrl jrcxz xchg rcl test (bad) mov (bad) sbb adc pop adc sbb lea xchg leaveq or xchg jns (bad) (bad) rex.WB enterq adc sarl (bad) push leaveq (bad) jg sub movabs rex.B iret pushq add callq (bad) rex.WX lahf adc lea sti fs retq pop js cmp cmpsb (bad) rorl mov sahf and addl jrcxz outsl loop incl lea mov sarb pop jmp cqto push mov leaveq or iret (bad) stos or sahf mov lea sbb mov je or and (bad) lods pop retq add push mov xchg (bad) mov cld mov jrcxz xchg xchg (bad) popfq outsl movabs push loopne fidiv (bad) sarb (bad) cmpsb stos rex.WB cmpsl mov mov xlat mov sbbl cltd outsl pop mov (bad) rex.WRX rex.RX popfq add sti mov out icebp (bad) mov test xchg jg xchg shl lods jns add (bad) outsl in mov push nop or and sub insl cmc xchg jne cltd jbe jbe cld push xchg stos lods xor movsl movabs (bad) fldcw (bad) lods iret xchg out push mov fisubr rex.WRB pop ds mov adcw (bad) rex sbb (bad) xchg cmc rol and (bad) test mov (bad) mov pushq (bad) mov loopne popfq adc and sti cmpxchg (bad) ficom xlat test insb pop (bad) (bad) movsl mov outsl movsl mov mov jl test (bad) xchg xlat outsl rcrb sub (bad) adc fidivrl outsl (bad) mov int3 (bad) (bad) addr32 outsl rex.WRXB ss (bad) jp push out rcl lods loopne (bad) clc pushq cmpsl xor mov retq (bad) jmp fstpl sbb (bad) int mov idivb (bad) mov mov add pop lods cvtpi2ps sub popfq xor xchg (bad) (bad) movsb rex xor mov je retq rex.X sbb push popfq es rex.WRXB int xchg (bad) mov test (bad) xchg in (bad) jnp repz (bad) pop (bad) mov xchg fmul jg jg xchg (bad) xchg je xchg and sub xlat and pop push jns (bad) pop xor add gs sbb (bad) pushq repz xchg (bad) xlat (bad) movabs add xchg lea mov sub (bad) mov (bad) mov mov rex.W (bad) (bad) movabs (bad) or (bad) sbb fwait scas pop xchg adc pop (bad) mov mov (bad) mov (bad) (bad) push (bad) repz rcrb fidivl cwtl (bad) out xchg (bad) iret pop sar jne jge rex.XB lea jmpq mov cmpsl outsl insl or push fdivs fsubs mov (bad) mov cltd rex.WXB xchg ja (bad) subb jrcxz or jo in repz outsl (bad) lea test and xchg adc (bad) outsl push jnp pop pop adc (bad) push xlat adc rex.WRXB (bad) xchg rex.WR rex.WR movabs jg retq add rex.XB stos (bad) cmpsb fwait repz sub shll iret jge int (bad) jge (bad) out xor sub sti mov icebp adc iret (bad) cli (bad) xor pop fidivr int3 jne mov sarl iret in adc outsb scas rex.WRXB loopne push outsl (bad) mov mov sub imulb (bad) pushfq push adc xor sbb std rcrb mov xchg and (bad) xor jg pop iret outsb fisubr xchg mov gs mov rcrq cmp mov ja rex.WRB nop outsl jo mov xchg adc fbld js icebp pop out add mov mov jno lods (bad) fdivl and cmc jbe mov jg push (bad) (bad) (bad) or int3 sub push rex.RX rex.R jbe fsub sub movslq (bad) (bad) pop sar out mov shl push add and (bad) sti (bad) mov imul add sub adc (bad) rex.X cs lahf mov push nop cmpsl and cmp movslq rex.W mov (bad) (bad) sub jmpq out in enterq negl rex.X stc (bad) rex.XB cltd hlt ja rex.W popfq sbb rex.WRB incl (bad) xor (bad) push lret loop orl cmpsb (bad) sbb scas fdivr std mov mov fistpl sub rex.RB lret or jle in cli adc outsb cld sti (bad) js scas (bad) (bad) movabs adc (bad) xor fs adc (bad) push xchg adc jg sub nop sbb mov movabs cli sub popfq add (bad) adc cwtl mov jno rcrb iret adcl xchg rclb sti xchg jnp test (bad) jno xchg (bad) fldcw cmc fidivrl (bad) fild cwtl mov xchg imul (bad) (bad) outsl retq jb nop (bad) sub repz push gs in (bad) lret push or fdivrp push or jmp mov int sub (bad) int (bad) adcl xor (bad) xlat rcrb add iret rex.WRB jnp (bad) or out pop rex.WX sbb clc and sbb lods imul rorl (bad) fsub push xchg or pushfq add ficoml mov mov mov fiaddl loope iret (bad) rorl mov movslq test rex.XB jnp mov outsl (bad) jmp (bad) movabs loopne xchg orl (bad) (bad) jne outsl add sbb in (bad) addr32 mov xchg outsl ja xor mov push mov outsb pop (bad) jmp lahf fisttpll (bad) repz mov enterq rex.WXB fs lahf xchg mov or and add adc rex.WX adc lea mov repz sub adc callq mov movabs pop pushq in mov cmpsb sbb mov outsl sub je js rex.WXB xlat mov cmpsb or (bad) add or je (bad) pop or ss jmp (bad) ss mov fiaddl sti xor xchg jne es sbb lret sub retq movabs jp cmp (bad) stos orl cmp scas popfq scas mov mov in test sbb pushq xor imul push or xchg (bad) jb rcrb lret movsb push nop (bad) lret (bad) or adc (bad) jl and rex divb lret (bad) (bad) sbb pushfq outsl and nop adc (bad) test adc cld (bad) jmp adc fimull out mov and and test lret pushq fdivl mov adc or js outsl or (bad) test setae (bad) mov push loopne fistpll rcll lahf je add lock (bad) shrl cvtps2pi pop mov mov cmp rex.WRB cmpsl fldcw and rex je rcll pushq sub lea push callq adc mov xchg in loope in (bad) int (bad) rex.B jbe test rex cld out (bad) (bad) cmc jbe div mov jmp rex.WRB popfq xchg sub (bad) xlat sub outsl int mov sqrtps ja jge movabs rex.WRXB rex.WRB (bad) jb mov jrcxz orl sbb (bad) xchg adc (bad) loop xchg lods mov sub rcrb xor (bad) (bad) pushfq mov cmpsl cs pop cmpsl rex.RXB (bad) or test je mov leaveq (bad) jbe stc mov mov jmpq xor and mov sti fdivrp mov (bad) std es rex.WB lahf (bad) sub cmpsb pushfq xchg pop jg rex.WXB cmp and test nop mov mov in xchg rorl ss sahf (bad) xchg (bad) stc jo or cld loopne cmp jl (bad) sub mov movabs adc insl pop mov or pop mov fdivrs mov cmc (bad) jae ja jbe sub loope mov (bad) test xchg lahf cmp mov mov (bad) scas (bad) je cld adc (bad) outsl pop js lock div xor pop movabs jrcxz outsl stos (bad) (bad) lea pop and mov fwait (bad) jae sbb jl rorl cltd mov lea add mov mov insb jrcxz movsl nop sub sub or lret (bad) rex.WB cs and add (bad) rex.WR mov mov mov rex.WB adc orl sbb adc xor shrl rex.WXB fcomps mov xchg popfq (bad) jno fstl mov jg imul mov add xchg adc cmpl movsb push fdivrl mov imul sbb scas movabs div jge jrcxz rex.XB sbbl jnp lea xchg leaveq push fsubs retq clc (bad) rex.WR xchg pushq xchg sbb test xchg jrcxz sbb movsb pop jmpq mov (bad) sbbl outsl fcompp (bad) cltd outsl xchg pop (bad) je (bad) add sahf (bad) popfq loop stos jbe (bad) or orl andb sbb pop mov jle outsl movabs scas es mov (bad) shlb mov push (bad) fs jae outsl lods pop (bad) (bad) cltd (bad) movabs pop xor (bad) (bad) mov add rex rorl mov jo push xchg (bad) outsl sti xchg and in (bad) je pop adc std (bad) xlat (bad) push rex.WXB mov jns cmp xor (bad) xchg rorb jmp movsl sahf jo xor callq xchg xchg movabs rorb rcll jmp rex.X rex.RX lret mull rex.WB mov jge (bad) int fwait roll movsb sti jle loope xchg add jge out stos fsubrs rex.RXB rcrl jg sub or mov rorl rex.W sbb es ja pop mov jge add es (bad) hlt jnp sbb stos add xchg pop cmp rex.RX rex.RX mov xor sub (bad) nop and xchg movabs imulb (bad) mov xchg (bad) outsb fwait (bad) sbb fbstp and pop nop mov mov je adc in icebp xchg hlt jno jo bnd mov out lahf cli pop in (bad) cmp fwait rex.RXB cs xchg rcll adc adc (bad) (bad) xchg (bad) jrcxz (bad) fsubl (bad) jrcxz je mov fcmovbe xchg in jl retq add sahf push (bad) movsb cmpsl jrcxz fcmovnu vpmacsswd callq (bad) hlt push sub int3 cltd scas pop jnp movabs (bad) (bad) mov cmpsl xlat and sub int (bad) cmpsl hlt sub xchg rex.RXB (bad) std sahf (bad) pop scas je orl roll and or jbe and adc stos mov jb xor xchg add test and rex.WRB mov mov (bad) xlat test nop rorb xor pop lods push (bad) cmp xor mov scas retq in push in pushq (bad) rex.WX jae sarb orl int3 popfq (bad) mov or xlat out je mov rcrb sbb push movabs in (bad) cmp xchg jrcxz lods jb movabs pop data16 loope movabs outsl mov mov xlat sahf std xlat mov adcl xchg enterq test push cmpsl sub xchg (bad) mov cmp stc (bad) pop or cli mov (bad) sbb rex.XB or roll fsub (bad) (bad) setp popfq retq fwait pushfq pop cmp lahf jmpq xchg ja rex.WRXB cwtl pushfq pushq mov push jnp sti test movslq rex.WRX xchg int3 popfq hlt sbb shll fcoml mov popfq mov xchg imul (bad) (bad) sbb sbb (bad) cmpsb shll push and (bad) sub cmpsb neg clc jbe rex.WX fwait outsl or (bad) (bad) rex.WRB mov sbb (bad) mov sahf rex.W xor or xchg xor mov mov pushq out xor or xchg (bad) scas rex.WXB repnz pop jbe fldt outsl push movsb rex.RB add add rex.WR and rex.RXB gs mov xchg mov fstps jg mov jnp int mov (bad) mov or (bad) jnp test adc rcr or rex.WRB lods push pop subl jnp rex.WRXB out mov push sbb (bad) (bad) enterq (bad) mov xchg (bad) mov ja sarl (bad) addr32 (bad) fisub jo xrelease sbb rex.WRB (bad) jno sbb js (bad) mov movabs loope (bad) pop jbe rcrb or jnp cmp in add je fidiv rex.XB stos pushq (bad) iret cld rex.WRXB roll jmp insb (bad) mov cltd test rex.WRX test fs (bad) jne rex.RXB push rcll pop xor scas and mov (bad) cs in jae cmp nop cmp or mov cltd scas xlat (bad) pop adc repz lea pop (bad) pop test cmpsb jle sbb fisttp rcrb outsl (bad) mov xchg test popq mov rex.WX adc fsub cmpsl (bad) jae fisub cmpsl pushq nop cltd vdivps repnz stc cmp movabs jge stc jne or (bad) cmpb xchg pop pushfq cwtl popfq pop sti enterq mov xor fcomps movsl xor (bad) jns xor (bad) (bad) js test imul orl out adc loope pop ficom push cld mov (bad) pushfq gs (bad) mov (bad) xchg loope ja and lods sbb jnp je rex.WRX shrl and sti lahf decl xchg fldl2e or jg lret rex.WRXB (bad) movsb pop cmc addb data16 pop ds pop movsl ja pop xchg ficom push xlat (bad) fndisi(8087 xorb push decl (bad) pushq lret stos adc callq adc (bad) xchg mov test ja xchg out mov jbe (bad) jle adcb sbb sahf push fcompl mov adc fstpl outsw pushfq sahf sti lods mov push sahf pushq push mov lahf jbe gs push jns cmp movabs rex.WRB rolb or pop (bad) mov mov in xchg rex.W movabs cltd movabs sub in enterq imul rorb sub cmp gs shll push xchg add mov xchg push (bad) negl sbb mov outsl (bad) xor pop xchg in jne sbb lahf pop jne rex.XB rex.RXB ds (bad) negb shl add add xchg test (bad) cmpsl loope (bad) adc cld push mov (bad) jb outsl loopne xchg fiaddl lahf rcll rorl mov push and retq rorb not pushfq outsl (bad) cld rorl xchg mov rcll andl lret cmp push ds or xlat adc add xchg fmuls rex.X outsl movabs in mov cmp loop cmp ss and sub (bad) mov (bad) shll rex.R ss (bad) (bad) xchg out (bad) notl adc js jmp fnstsw icebp out (bad) xchg cmpsl sbb mov mov (bad) movb mov fnstsw mov (bad) mov mov outsl ss stos (bad) notl mov fcomip cmp (bad) rex.XB sbb (bad) push pop (bad) insl (bad) jbe retq xchg push outsl negl xchg (bad) rex.RX mov out adc cld outsl (bad) repz rex.WX icebp sub jno ds xchg insl gs (bad) jno outsl or (bad) jae mov in rex.RX rex.WRXB (bad) loope xchg xchg mov nop sbb adc sti movslq loop adc and stc xchg pushq fistl fldcw xlat rex.W adc sahf and push push sbb pop test pmuludq or cmp shll mov jrcxz push xchg fimull or lea adc mov push (bad) (bad) insb fwait sub (bad) lock movabs mov fbld movsl cmpl xchg movslq fs retq lods fbld jmpq mov rcrl (bad) pop mov add or xchg outsl lret (bad) xchg mov lahf jbe (bad) (bad) or (bad) int3 ds (bad) jno sub or (bad) xor push xlat shrb out fwait (bad) movabs outsl or rex.RX je pop imulb jmp leaveq lret repz fs xor jne (bad) xchg outsl pop (bad) pushq and gs (bad) lea in mov cld popfq data16 fs cmp or (bad) test in jno adc pushfq rex.WRXB xor psubusb xor callq (bad) xchg enterq lea clts cmc (bad) icebp stos cmpsl xor in xchg int (bad) rex.WX (bad) jrcxz,pt cmp lods jmpq movsb jbe pop outsl retq pop cmpsb or test jbe out jmp sub (bad) (bad) mov sbb or cwtl xor in xor test push mov in cli jge jnp sbb repnz cmpsb mov (bad) test xchg std movsb pop in addr32 xchg sti mov mov fcmovbe pop frstpm(287 rex.WRB rex.RB pushq outsl mov retq or fdivs outsl rex.X and pop (bad) lahf mov nop retq jns enterq sub sbbl mov (bad) imul in pop je movabs add imul jrcxz mov pop loop iret test mov (bad) sub (bad) (bad) (bad) (bad) lea (bad) xchg xchg mov jge movabs jnp (bad) mov xchg jmp jmpq mov jmp lea sbb (bad) lods jl test notl rorl out movsb nop rclb mov (bad) pop fs xchg xchg push pop sahf fsubrp fimul test lahf xchg loope shl (bad) es sbb lock sbb jnp cwtl jg mov movsl stos sti xchg nop je pop test loop cwtl lahf cmpsb jrcxz (bad) xchg jle scas (bad) cltd or mov je or xchg sahf outsl outsb icebp jbe int3 lea nop sbb outsl not nop sub (bad) cltd jno int xchg fidivl mov and cmp (bad) adc rex.R pop (bad) jle stos or addr32 add rex.RXB jmp xchg xchg out idivb je loop push jg fwait (bad) xchg scas mov mov jns mov pushq jle pop sub (bad) stos rex.WRX rex.WR gs test fsts adc (bad) cwtl (bad) (bad) notl jbe rex.RX stos rex.RXB movsb push ficompl jg rex.WXB (bad) adc lea (bad) xor (bad) jle pop mov jb fdivs fidivrl js (bad) fist mov cmp jnp stos cli (bad) js rex.WRB sbb cwtl (bad) (bad) mov js scas jo stos pop fwait incl mov and (bad) xchg jae fcoms imul xchg sarb xchg (bad) (bad) (bad) movslq cli (bad) fdivr (bad) outsl (bad) mov push cmpsl (bad) and (bad) pop (bad) scas pushq loope stos test (bad) nop xor jbe lret pop ja (bad) fimul push scas add mov fmull pop fs xor fmull pop (bad) adc jo (bad) mov mov mov scas nop imul rex.XB rex.W ss insl add rex.WRXB (bad) callq rex.XB setge outsb sti pushq shl (bad) sub in (bad) and mov jmp xchg (bad) jrcxz popq movsb (bad) mov movabs (bad) adcb xchg or (bad) xor test pop shrl sub mov loop popfq in xchg rex.RXB insl mov ficom in (bad) rex.WRX movslq xor rex.XB mov sbb jmp (bad) xchg mov scas scas mov (bad) stos icebp xchg xor rex.R (bad) loope popfq xor (bad) sbb loope (bad) pop loope gs fwait (bad) pushq xchg pushfq (bad) sbb cmpsl xlat cld mov (bad) (bad) (bad) xor rex.RXB ficomp (bad) xchg push sbb ja mov in (bad) xchg mov jl mov sahf loope pop (bad) jle rex.WRXB rex.WRB mov retq push (bad) push pop (bad) outsl ja rcll push jle jge (bad) in fidivl pop fsubrl mov ficompl sti mov cmpsl xlat rex.B cwtl xor fmuls push fisubrl fs (bad) add xor (bad) movabs sbb pop mov mov (bad) outsl sbb addr32 xchg test mov (bad) (bad) pushfq xorl pop lret lods push jge pop rex.WRXB cmp es xlat pop (bad) (bad) (bad) shl out (bad) pop adc movslq push shr and mov or int3 mul push (bad) mov (bad) (bad) test mov jo rex.WB xor pop rex.RX adc xchg push xlat (bad) (bad) (bad) mov lods rex.WB mov loopne je cli movabs shll add mov outsl (bad) xchg cmp xchg imul jge xchg stos outsl rex.RB repnz xor add mov jl xchg rcrl pop addr32 add rolb jnp loope and jno pop rcl (bad) xchg (bad) pushq (bad) loope retq (bad) cwtl push sub movabs rex scas adc outsl scas fwait clc mov ficompl jrcxz sbb sbb cmpsb pushq movabs outsl pop or xchg shlb ror stos fidiv rex.X sbb rex.XB lahf rex.WB mov mov sub add cmc or add xchg fcmovne in lock fidiv outsl sub jae (bad) cmpl or stos sub int mov rex.WRXB ficoml (bad) xchg fidivr (bad) fidiv movabs xchg (bad) je sbb ficom pop (bad) movabs jg leaveq rex.WRX rex.WRXB sub sbb pushq (bad) nop movabs adc pushq xchg xchg fldl stc lahf lret callq callq mov fs add mov mov (bad) (bad) or rex.W mov xchg movabs (bad) movabs fstpl xor (bad) movabs je adc (bad) popfq cmp (bad) fcomps (bad) adc push stc xor (bad) pop stos out mov mov rex.WRB mov or rex.WRXB lret rex.WRX xor jp cmpsb (bad) insl jrcxz sarl (bad) out or (bad) adc leaveq adc notb movabs add or xchg (bad) fbstp (bad) (bad) nop jne (bad) outsl and (bad) lods push (bad) xchg pushq sbb xor (bad) loope mov adcl (bad) stc sub (bad) (bad) push mov xchg mov stos (bad) mov push callq (bad) (bad) (bad) stc jns mov addr32 sub xchg rex.WR rex.R and mov rex.WRXB movabs repz nop popfq adc movabs pop ja and jae cmpb (bad) mov add cmpsb (bad) cmpsb fistpl rex.RXB rcll push sti xchg insl jbe xchg shr retq (bad) shlb lahf rex.WRX mov mov add (bad) push rolb shll mov loop jmpq je lea iret mov mov rex.RXB mov in clc movsb adc (bad) cld int3 test rex.WRXB rex.RXB cmp (bad) push (bad) or pop (bad) mov ja pushq (bad) (bad) jg (bad) cmp xchg adc fdivp (bad) mov vshufps pop (bad) cmp rex.WRXB rex.RXB rex.WR (bad) movabs adc jno pop fstl sub (bad) fistpll sub (bad) leaveq cmp (bad) scas in or xor add rex.RX or mov mov loope rex.XB xchg push sub mov push loopne jmp mov add rex.WR push adc mov gs fwait pop mov (bad) mov rex.WX xchg pushfq movsb gs adc push sbb movabs es (bad) mov sbb lea xor (bad) jp outsb xchg scas outsl rex.WR pop pop pushq xor and xor and (bad) xor (bad) sbb rorb rex.WB xchg sbb in nop mov mov pushq sti fisttp xchg (bad) mov outsl je mov lea pop rorl popfw fisub sbb and (bad) (bad) rex.X rex.WX rex.W (bad) rex.WX (bad) xor push (bad) and hlt scas push or push retq xor mov mov xor lret (bad) sbb and rex.WRX popfq rex.XB (bad) mov sub rex.R rex.XB pop or (bad) mov sbb rex.RX (bad) push imull or (bad) repz jns mov pushq push push push (bad) rcrl or (bad) rex.W ds rex.WRB lock cmp out mov mov pushq movabs or nop and add rcrb (bad) push cmp movabs cmp (bad) push jno jmpq sbb data16 fstpl and jmp out in lret rex.RX rex.B jp adc lock (bad) (bad) or (bad) pop stos mov cmp cmp add mov adc pop (bad) lret and stos in push xchg rex.RX gs rex.WRXB pop movabs xor push in push and xor and xlat (bad) (bad) jnp rex.XB jg in je (bad) mov (bad) pushfq and (bad) stos xchg cmp insl mov out stos mov or (bad) pushq cmp fdivl callq fsubrs add jno mov (bad) outsb xchg and in push shll stos fsubl sub cmp movabs cmc (bad) mov jrcxz xchg repnz (bad) movsl rclb (bad) or cmp xchg xchg rex sahf and fs push jg jmp retq and push rex.W sti mov (bad) pushq js xchg adc cmc mov test sbb adc jmp xchg outsl (bad) addr32 addr32 pop xchg mov (bad) addr32 je cmpsl xchg adc sbb movabs jle rex.WRXB sbb fidiv (bad) mov scas rex.B xor mov sbb jrcxz adcb cmpsb loopne sbb xchg nop movslq cmpsl ficomp out rex.WRX stos shl lock xchg jae mov mov mov fcoml (bad) (bad) jmp repz cmpsb mov jbe (bad) rex.WR xchg fisubl cmpsl adc lret xchg xchg mov hlt jbe rex.WRX mov mov popfq movsl xchg sbb rex.WB mov mov out cmp jbe cmp test out mov push subl (bad) xor int3 add (bad) mov sarb enterq fdivl mov fmull jbe add nop sbb jne imul mov mov adc pop jl loop or movslq mov enterq xlat scas add pop push in cwtl out popq xchg adc (bad) fadds (bad) (bad) sbb in xchg (bad) fldl xchg and fs mov (bad) mov mov mov (bad) sbb sbb mov add sbb xchg adc scas xchg rcll add xchg mov xor fisttpll fs jmpq cwtl jne mov rex.WB sbb jbe sub adc cmp cmpsl loope (bad) lahf xchg stos adc sub jrcxz rex.RXB (bad) movl rex.WR je mov (bad) mov nop sub cmpsl (bad) jno incb xor adc add es orb push adc sti (bad) js pop cmc jae jg gs rex.RXB push push jbe add scas fadd ficomp shll add pop outsl mov nop (bad) sarb cmpsl pop movslq (bad) rex.X data16 mov movabs adc jg sub imul xchg mov (bad) jg mov fidivl or mov and mov mov rex.WRB (bad) sbb xchg retq pop (bad) pushfq rex.W xchg (bad) adc rex.X repnz pop popfq sahf iret (bad) fisub lret jrcxz xor xor pop cmpsb movsl shr ja xchg jae std (bad) mov push je iret (bad) loopne xchg test mov test stos sub lock (bad) jmp lods retq push (bad) rex.WRXB fisubr out cli push mov sbb and outsl mov sub in rcl (bad) add shll (bad) and callq pop jbe shrl mov push pushq cmpsb xor (bad) xchg xchg and retq rex.WXB sbb add mov sarl xchg out (bad) ffreep and or sarl xor rex.RXB jnp sbb sahf or sbb cld loope cmp retq push ja sar mov in es and fimul rex.WRXB or xchg adc xor pushfq lahf (bad) scas xor jrcxz rex.RX sub jo fisubrl pop movsb loopne jg rex.WX push (bad) test pop imul (bad) (bad) mov popfq push jl leaveq (bad) mov push cmpsl rcrl movabs adc jne sub jg push adc (bad) (bad) test xchg pop sbb sub add cmpsb mov pop cltd scas cmc mov out and scas loop pushq push sbb adc xor cmp (bad) (bad) (bad) pop outsl rex.WRX int3 ja push lea rex.RX decl cmp xchg fucomi push push adc lea iret pop sub xchg pop lods outsl xor pop je rex.RB add callq mov (bad) sbb (bad) mov cs add lahf mov lods and mov rex.WXB lock gs add sub jmp je movabs shr cs mov mov sub test stc scas subb out xchg scas and xor pop lods push cltd pop (bad) mov xor mov mov lahf mov xchg js cmp in stos sbb lret sarb cwtl outsl xchg adcl je mov hlt pop sahf icebp (bad) (bad) fiaddl insl pop and imul (bad) xlat movsl xchg imul cltd pop (bad) fisttpll (bad) mov (bad) int3 cmp jbe repz cmp pushq out out mov xlat jmp mov push int3 fidiv (bad) pushfq sub and stc push adc rex.WR ja or pushq imul jbe mov rclb imul mov rorl cmp je hlt xchg fwait pushfq add test es push lea xlat (bad) rcll pop movabs nop out hlt (bad) jbe xchg add cwtl shlb mov (bad) sub (bad) pop loop cmpsb icebp xchg and imul adc sarb rolb mov (bad) mov cmpsl jno rex.X retq icebp fimull (bad) and rcll sub xor xchg xchg or (bad) adc lods rcr jrcxz test movslq ficompl lahf jmp stc retq xchg jbe (bad) and frstor (bad) iret cmp jb rex.WRB adcl (bad) clc (bad) (bad) sbb mov xchg xchg adc or or outsb mov repnz retq hlt rex.WRB adc jmp scas cmp cli sub (bad) jg xchg and (bad) xchg (bad) pushq pushfq mov sub js fidiv xor mov rex.WXB mov rol (bad) add adc (bad) fsts xchg je pushq fmulp rex.RB pop movabs adc and cwtl mov push cmp mov xchg mov rcrl fisubrl cs xchg or sub sbb rex xor or nop mov push popfq repnz fwait push (bad) enterq jg and je cmp paddusw int3 mov jo xchg lret outsb (bad) mov mov push fidivr xchg rex.RXB xchg rex.W mov or rex.WR or sbb jnp xchg test cmpsl or addr32 (bad) (bad) rex.WXB repz (bad) mov mov test or (bad) popfq stos pop xchg outsl rex.WRX pop xchg jp (bad) scas xchg sbbl jg scas add pop out xchg mov mov cltd xchg mov or rex.WRXB mov loope mov (bad) xchg mov push push jbe std sbbl stc mov cqto sbb add ss repnz or adc jae add adc shl rcll cltd xchg movsb ja cmp mov rex.WR movl pop fist push rcrl push add sbb fnstenv pop (bad) iret mov movsb pop ss (bad) mov lods mov rex.X repz pop out loopne (bad) add or rex rex.RX mov js mov or (bad) xor xchg lods (bad) rex.RX or js rex.R jmp and jp (bad) rclb test pop or pop push sti js and xchg hlt rex.WRXB retq mov decb je shrb rex.R (bad) lods or sbb mov xchg ficoml (bad) (bad) mov movabs mov shrl push fimull (bad) enterq mov shrl (bad) xchg rcr faddp and xchg pop bnd movabs iret xchg std jbe repnz lods frstor xor cmpsb movabs sub mov xor cmp add mov faddl mov xchg ljmp lods (bad) xchg mov rex.WRB popfq add and jnp (bad) cmp repz jno push or (bad) xor scas jl (bad) data16 push repnz lret iret (bad) lret sahf (bad) jle iret pop rex.WRXB rex.WRB loope lret movabs add mov enterq rclb cmp xor (bad) iret (bad) rex.WRXB out lret jge lods (bad) mov cmpsb bsr adc rex add rex.WRXB jg pushq xor and and (bad) insl xchg retq push xor jo fwait (bad) outsl test iret lret addr32 push or sub pushfq or (bad) incl ja ss mov (bad) (bad) xor mov in (bad) jne (bad) (bad) jo sub xorb sub mov rolb sbb (bad) mov iret imul or popfq shr cmp je neg xor movslq or movabs or loope (bad) jno sahf and mov mov sahf shl (bad) xchg mov push mov loopne lret (bad) insb rex.WRB rex.WR enterq cwtl sub jo xlat mov sub scas pop pop sarl lods rex.RX pop in (bad) fidivr (bad) lods push and push mov pop test retq and (bad) mov mov mov xchg adc movabs push fnstcw pop pop rex.WRB sbb pop clc xchg add andl or jg adcl repnz fidiv popfq rcrb (bad) (bad) mov cmp adc stos sti cmc je callq cmp pop popfq cmpsl (bad) mov jno (bad) cwtl (bad) repnz fwait test (bad) test mov (bad) jne (bad) or xor outsb sbb fsubrp rorq (bad) rcrl cmp pop and insl (bad) xor outsb or pinsrw out (bad) pushfq mov iret insl xlat xchg rex.RX fadds rex.WX adc imul movsb scas pop pop xlat jmp mov jbe mov xlat retq lret in (bad) (bad) mov and (bad) rex.WRB adc and mov xchg (bad) (bad) xchg addr32 (bad) clc pop (bad) lods sbb mov pushfq test js (bad) (bad) xchg rex.WRXB outsw jg adc (bad) je je jno repnz (bad) jmpq rex.R add adc outsl icebp or rex.R xchg je xchg ds (bad) movabs not or rorl (bad) mov in mov lods fs cmc popq or jbe int int (bad) mov mov test jno mov (bad) push fisubl stos rex.RXB add popfq adc cmpsl (bad) (bad) (bad) movsb (bad) jne or mov sub (bad) push sub fstpl (bad) cwtl movabs or xchg mov fstpl (bad) cli cwtl jns jg xchg push adc (bad) fcoms (bad) sbb rcr xchg or jmp lods cmp (bad) fadds test (bad) rex.R int add xchg (bad) lret (bad) movsl (bad) lods mov xchg (bad) lea push jnp movabs jge cld (bad) (bad) (bad) adc (bad) pushfq (bad) sbb xchg sarb push notl mov movabs (bad) (bad) decb rcl out rex.WB leaveq adc repnz out jrcxz rex.X outsl xchg (bad) xor (bad) repz mov movslq push mov (bad) lods mov fcoms (bad) outsl or je rol jmp and jnp lock pop adc in mov loopne loop jb rex.WR xchg mov lret in mov imul (bad) cli or jmp fstl (bad) xchg xchg pop xchg int int3 lea jmpq and (bad) rex.RXB movabs (bad) (bad) scas cmp lods nop pop xchg cltd mov cli rex.XB adcl xchg or movabs outsl jp mov cmpsl outsl sub jg cmp add outsl outsl mov movabs jbe pop mov add lock leaveq insb sahf mov outsl xchg mov xlat in adc add add (bad) outsl lods lahf sbb xchg jl es test (bad) cmp mulb movsb sti jrcxz in stos adc xchg je js or (bad) xchg adc mov mov cltd (bad) scas xor (bad) xchg (bad) pop add cmp (bad) xchg adc push sti (bad) loop ja (bad) add rcll pushq sahf fcmovu mov mov mov lods pop (bad) lret xlat movabs lods mov hlt negl (bad) (bad) push push xchg outsl (bad) (bad) (bad) cmpsl sbb loope (bad) xchg outsl pop (bad) clc int3 (bad) adc add iret outsb xlat xlat jmp push fs rex.RXB jbe pop sub mov adc movslq mov insl pushq clc jle (bad) movabs (bad) adc pop cltd push fisttp outsl cltd cmp xlat fisubrl lea (bad) fcmovb outsl mov add sbb or pushfq lods push lahf fiaddl gs (bad) push test out rcll (bad) pop mov out rex.WRX in shr xchg sbb loopne (bad) fadd mov jnp cli test fwait mov lret rex.WRXB orb sub adc pop mov xchg and lcall pushq xchg cmpsl (bad) je rex.X and stos adc ror outsl icebp rex.WB pop mov mov add xlat (bad) cmpsb adcl leaveq jo cmp pop jg xchg (bad) scas outsl sub (bad) mov mov mov (bad) (bad) (bad) mov ficoml rex.RXB (bad) nop stos (bad) mov imul cmp xchg scas retq jnp cwtl mov xchg jbe adc (bad) xchg mov rex.RXB lahf jbe int sqrtps rex.X mov (bad) mov popfq cltd (bad) mov outsl push rex.WRB cli out cmp in (bad) (bad) (bad) movsl jge adc fcoms (bad) addr32 xor movabs fwait iret rcll adc fidivr fsubs rex.RXB fs rcll xchg (bad) ja (bad) cmpsl pop rex.RXB (bad) mov xchg jbe (bad) adc and test stos mov cltd or mov test outsb (bad) pop or mov std (bad) mov rcrl test (bad) (bad) faddp jrcxz mov (bad) (bad) push in (bad) mov jbe mov xchg mov mov mov xchg jmpq push (bad) js xor mov repz in negl out jne fistpll cmp and mov sub (bad) rex.WRB fbld jno (bad) lahf xor pop (bad) movabs mov callq shl mov sub (bad) mov setbe mov adc xchg (bad) or ffree xchg sub insl (bad) (bad) cmp (bad) int3 testl mov rex.XB xor push jmpq cmpsl (bad) divl or jle pop fsubl mov cmp incb out outsl push fldl lahf mov cmp mov (bad) (bad) jbe (bad) push out fyl2x or insl sub cmp popfq fsts retq imul xor (bad) roll outsb push scas add mov rex.XB mov xchg lahf mov imul in (bad) out push fbstp rex.RXB addr32 (bad) addr32 leaveq movslq (bad) mov jle (bad) sbb (bad) stos lock cwtl movslq mov in jg in (bad) mov pop fsubr (bad) or (bad) jg pop pushfq jle xchg mov rex.RXB rex.WX out and es adc mov cmpsl (bad) mov push and adc jmpq movabs xchg xor pop adc mov xchg mov addr32 (bad) mov push xor jne and cmp out iret std fdivrs jae imul sets lods push add sub or test clc movabs xchg movabs rex.WRXB (bad) out xchg in test out mov negl es add mov xchg leaveq movslq es sbb mov mov (bad) mul retq movsb rex or mov xor xchg sub mov mov sub lahf rex.B addr32 cmc pop (bad) iret push (bad) push push jge fldl adcb xor and outsl out xor mov jo (bad) icebp sub push loope out (bad) mov (bad) mov divb insl mov mov (bad) and add (bad) push xor out scas mov sahf and jge scas outsl add pushq (bad) movabs repz pop retq fnop mov jrcxz jnp (bad) rex.WR cmpsb xor movabs xor adc push idivl clc (bad) stc xchg callq (bad) gs mov sbb insl fbld (bad) insl lret mov mov incb fistpl cmp orb xchg jrcxz sti in (bad) (bad) (bad) mov lods mov mov xchg iret xchg push pop je stos xchg (bad) movslq and xchg sahf rex.WRXB fidiv fs (bad) movabs loop (bad) add imul iret sahf mov out (bad) movabs xor sahf rcrl and (bad) pop mov out pop jbe rex.RXB jp adc push sahf mulb addl jbe mov repz stc adc sbb lret fimull in rex.RXB xchg out jge sbb mov xor xchg movsl (bad) ja cmpsl outsl (bad) jo pop repz fnstsw mov xchg (bad) mov out (bad) xlat mov (bad) neg mov shll ss ja xor cmp push pavgw or sub cmpl xchg fwait (bad) xlat movabs jnp sbb test (bad) movabs repz pop xchg push addr32 (bad) push xchg fistp out xchg not mov (bad) retq fdivrs xchg rex.X addr32 mov xor (bad) (bad) rex.RXB leaveq outsl idivb pop xchg add jbe (bad) insl push imull (bad) test mov jnp pushfq sbb pushq push fisubrl fild ja scas mov mov test std mov lods push push movsb in pushq jmp add fsts outsl sbbl je out rex.RXB xchg enterq jmp (bad) out cmpl clc popfq adc add adc imul jbe cmp sub out leaveq scas (bad) adc or fsubl (bad) movabs mov std jle xchg jg adc rex.WXB rex.WRXB fistp xor fwait xchg (bad) pushfq callq loop adcl fstl (bad) pushfq mov (bad) (bad) and outsl (bad) rcll rex.WB cmpsb enterq jmp (bad) xchg add movabs push insb mov pop pop (bad) (bad) (bad) pop sbbl rex.RX sti ja and mov (bad) cmp mov fstl rex.X movabs scas xchg int3 mov xor movb (bad) mov mov xor fild xchg cmp jmp outsl rex.W sbbl out and jo xchg rex.WB rex.WRXB xchg retq cmp mov mov add outsl movabs roll lods mov std mov add mov fidivrl int3 orl cwtl and notl push cwtl int3 outsl and mov xor push test movslq sbb xchg xor out adcl (bad) sub jnp adc push (bad) (bad) insl xchg imul cmpsl (bad) mov (bad) loope pop lea (bad) pop nop jbe rex.WRXB fcmove fmull push test mov xchg (bad) xchg (bad) jmpq push or scas and sbb fiadd mov pushfq add cmpsl movabs mov mov push rex.RB lods movabs push rex.RX xchg lea je in movl loop rex.WRB outsl icebp adc jno pop int3 int3 rex.X rex.WRX mov int (bad) imul (bad) add jmpq xor jo rex.WRXB loope pop cmp roll (bad) mov cwtl rex.WX divb pushq sub ficompl test (bad) jp (bad) cmp sbb out jns int (bad) xchg push rex.WX pop push (bad) pop lea jno xchg jns mov sbb add sbb mov adc mov jmpq mov test js adc in lahf mov pushq jb fsubl retq (bad) pop mov int sub pop mov movabs (bad) (bad) cld stos movabs rex rex.RB fucom and movabs jle and (bad) (bad) (bad) (bad) cld add (bad) scas (bad) (bad) (bad) (bad) out (bad) pushfq mov xchg movabs (bad) movslq pushq imul mov add add and mov lock jo add (bad) leaveq leaveq (bad) repz jae fist pop cmc mov adc xor cmpsb sarb xor vrcpss in pop (bad) sbb (bad) xchg mov addr32 (bad) int3 adc or xor jl sar xchg int (bad) (bad) push push rex.W stc out add test xor mov push adc out lahf int and jo and rex.WRXB rex.WRXB lret mov (bad) (bad) (bad) push rex.WX cmp sti mov repnz (bad) jnp (bad) (bad) std rex.WX or test int mov insb jb adc jbe pop movabs lock test xchg add adc movabs (bad) mov mov (bad) xchg xor and mov jmpq sub add movsl int3 pop adcl ds and imul sbb sti fimul sub movsl lret mov jmpq (bad) rex.X (bad) scas (bad) (bad) pushq lock popfq add jmpq movslq push in mov (bad) (bad) add add add shr (bad) out and or (bad) (bad) cld sqrtps (bad) (bad) clc popq pop (bad) xor lret (bad) int nop pushfq (bad) loope add add rcr push movslq or pop (bad) mov or or test (bad) (bad) rorb adc je fisttp cmp movb (bad) or movslq rex.RX (bad) adc cmc pop mov movsbw movzbl pop jle ja jmpq jne cmc stc jmpq jmpq jmpq test bt stc test jmpq rex.B rex.R push xor cs insb add jrcxz mov (bad) orb rex.WX mov sahf rex.WXB jg cmp repz rcl adc xor mov (bad) je sub jns (bad) push add std rex.WRX ds add nop mov (bad) (bad) (bad) (bad) (bad) jno cmpsl cwtl adc lods mov cmp xor add test (bad) ror (bad) xchg fld adc adc (bad) lods add movslq jmp popfq stc int and (bad) (bad) adc jle mov mov xchg cld lea lods add adc bswap cmp sub stc mov mov shr add setg mov jmpq jmpq jmpq jmpq push (bad) mov adc sti cmp mov jmpq mov sarl movslq cmc (bad) xor and jl in add rcl sub (bad) movabs rex.WRB repz nop pop pop mov jle icebp or mov movslq xchg (bad) (bad) (bad) sti and cmpsb (bad) (bad) (bad) (bad) decb push test fwait or callq xchg and fsts in (bad) in pop fmuls clc in movsb sub jo sub (bad) rcl ds shrb mov (bad) mov pushq adc (bad) mov (bad) (bad) (bad) (bad) clc in xor leaveq jmpq imul rex fmull and (bad) imull (bad) push in pop pushq cmp and push (bad) adc sub mov (bad) adcb mov xchg testb repnz jmpq mov jmpq jb jmpq pop (bad) data16 (bad) sahf lock cmpsb mov (bad) callq lret cli or adc (bad) add or iret cmc sarb and or xor pushq movabs jge sbb in (bad) cmpsb add mov (bad) (bad) (bad) sub fstl adc adc retq rex.RXB (bad) fwait in pop sub (bad) (bad) (bad) sti or (bad) (bad) (bad) std divb rex.WR cmp (bad) jb cmp (bad) xchg xchg notb repz (bad) lock jmpq retq repz sub retq testl sbb adc or lods xchg sti cmp adc lods mov sub imul sub (bad) xchg push insb and movabs adc jmpq callq jmpq cmp bt cmc pushq cmp clc bt cmc cmp jmpq jmpq jmpq jb cmc jmpq movabs rex.WRB pop out mov jrcxz push (bad) rex.WX (bad) xchg sub cwtl callq xchg repz xcrypt-cbc cmpsl xchg rex.WB imul pop pushq (bad) stc cmp xor std hlt in fcoml jle xor rex.WRX loope cmp rex.WRX push mov test cmp jmp stos xchg outsb push (bad) or mov (bad) sti es add rex.X (bad) (bad) decb xchg or int3 cmp lea cmp add adc rolb jae xchg out fimull (bad) (bad) (bad) push pop pop sbb push rex.WRXB es (bad) leaveq add cltd jp rex.RB sahf mov (bad) mov pushq lret rex.X rex.RB ds rex.WX mov imul addr32 rex.WRB test (bad) xchg xchg and nop retq repnz (bad) (bad) sti sbb mov adc add (bad) mov cmpsl loope mov xchg mov jae lea sub and (bad) sub rep push xchg (bad) mov cmp mov (bad) je fwait sbb jle test (bad) push test (bad) (bad) decl add adc xor mov jno pop leaveq (bad) je in sbb mov (bad) retq push rex.WRB callq data16 pop or lock mov loop andb cltd lahf add xor jb jne cmp (bad) cwtl addl subl add fisttpl retq cmc bsr btr mov clc clc bt mov cmc cmc cmc clc sub cmp repnz jb jne sub shr sub mov mov cmc sub bts mov cmc stc jmpq (bad) roll adc mov je (bad) popfq mov (bad) cmc mov pop xchg icebp xchg out sahf sbb cwtl sarb and and mov push adc (bad) movabs jb jnp rex.RB pop rex.X jbe (bad) mov adc jmpq lret ja pushfq rex.WX fwait lods (bad) cmc rcll cld push fwait lahf shll idivb add (bad) sti jb (bad) es pop cltd icebp pushq xor xchg pushq (bad) pop sbb or push push (bad) (bad) (bad) (bad) (bad) fistl repnz jle sbb mov notb push rex.WXB movslq sahf mov xor cs rex.R cld sahf mov rex jnp ss popfq int (bad) cltd in sbb cmp pop push (bad) outsl lret scas jns enterq sbbl jge sub xorl movabs (bad) lret imul and add jnp incl mov (bad) sub (bad) mov cmp sarb pop jp mov stos fstpl sub ffreep in pop mov cmp repnz ds jl sahf movsl rex.W out icebp out int not (bad) jns jno jb pop rex.WXB (bad) (bad) cli fs ss (bad) (bad) (bad) std lea xor mov pop retq push mov test and sub fnsave (bad) (bad) sahf jne sub push add rex.W movslq js out (bad) (bad) xor and leaveq jo xchg fs bnd pop adc addl (bad) cs pop xorl lea rex.X mov lock xor (bad) ss xchg (bad) mov pop rex.RB (bad) mov std pushq fstps test retq repz (bad) int3 movabs jno jb xchg mov (bad) mov stos add cmp xchg (bad) movsb (bad) mov add add jl lret (bad) movabs movsl mov pop (bad) or enterq pop loop adc ds xchg (bad) add je xor (bad) adc jbe xor cmp jae (bad) rex.WRXB fcomp (bad) jne sahf hlt sub pop gs rex.WRXB cmp mov sub push jg movzwl adc sub jb cwtl vmwrite add shll ja xchg (bad) (bad) retq icebp xchg int mov mov pop xor cmp add jne add jmpq mov not mov jmpq jmpq sahf jle popfq mov (bad) rcll xchg mov iret xchg (bad) cwtl mov xchg add mov mov mov (bad) (bad) rclb stos sub mov movabs lods test jg (bad) mov out fwait (bad) in or lods cmpsl (bad) and sub sbb adc (bad) (bad) mov mov (bad) add out cmp in (bad) push (bad) mov fwait jg mov jmp addr32 push xchg mov xchg mov fmulp jrcxz out pushfq (bad) div stc lock adc (bad) (bad) cltd scas add (bad) push mov mov loopne sahf add mov insl cmpsl sahf lods cmp mov push pushfq retq stc rex.XB (bad) scas push mov outsl (bad) test movabs xlat jnp sahf rex (bad) xchg cwtl push iret mov jrcxz mov popfq repz xchg rex.W mov (bad) xchg (bad) loop xchg xor jmpq repz stc clc out xchg div hlt lret repnz lock out in in jrcxz jmpq in xchg (bad) (bad) fcmovu fcoms sub rcl xchg (bad) (bad) int retq lret fwait mov (bad) mov addr32 out sub sbb xchg outsb mull mov cmp fnstsw cmp jnp xlat loope lods (bad) xchg (bad) pop cmp int rex.X (bad) adc mov rex.WRXB fcoml jae test sub pop (bad) stos (bad) (bad) retq ds (bad) cld (bad) xchg rex.RB jmpq lods ja (bad) mov data16 loope movsl push xchg imul mov cli fldt fwait (bad) adc sub jae in mov xchg imul mov outsl jae in ja pop fwait (bad) adc rex.XB rex.WRXB in (bad) cmpsb xor add jae in fbld fadd mov lahf jae in xchg out (bad) jg orl cmpsb outsl fwait ja fdivrs mov (bad) jae in fbld fmul mov cmpsl jae in mov jg xchg fmuls stos mov ja rex.WRXB (bad) cmpsb (bad) (bad) jg (bad) cmp fisttp (bad) rex.WRXB jae in mov sbbl mov (bad) je lahf loope movslq lahf ds cmc jmp xchg (bad) (bad) xlat jrcxz (bad) pop jae incb jae icebp xor repz repz sahf mov sarb callq popfq adc pushfq pop mov xchg ds mov rex.WXB or addr32 lock cwtl idiv sar sbbb cmp scas sti (bad) cli icebp clc jrcxz divb (bad) jrcxz rex.WRX stos in (bad) push sar pop (bad) sar (bad) jrcxz clc xchg and rcr movabs (bad) lock cmpsb rex.WB cli icebp test in jg (bad) (bad) (bad) rex.WRXB jp lret mov adc (bad) (bad) sub cld div xchg xlat lret xchg decb (bad) out rex.WRXB fmull mov out jrcxz scas movsl cld mov scas cmpsb shrl movabs xchg xchg lret (bad) (bad) pushfq sbb mov xchg lahf movabs xchg hlt (bad) bnd lret sub sub jb rex.WRXB fadds fimull leaveq int mov (bad) xchg std (bad) repz fistp lock (bad) add incl (bad) xchg cmpsl sbbb pop subl (bad) fisttp jae in cmpsl cmpsb (bad) flds rex.WRXB jae in jmpq fsubr mov mov (bad) out ja (bad) rex.RXB (bad) jo rex.WRXB imul iret sub leaveq scas xchg jge test adc (bad) fldenv sbb or (bad) jg (bad) xchg mov rex.XB or iret cmpsl jg (bad) mov outsb popfq enterq rex.WRXB jle (bad) xchg out sbb inc pop nop xchg (bad) mov (bad) (bad) (bad) or cmp xchg xchg and adc stos push adc rcll mov add out mov xor divb retq mov xchg out xchg or fcoml xor xchg data16 (bad) jb (bad) in adc mov (bad) sbb in lock ja jbe xchg push fsubs sbb adc ja sti fstl add loope (bad) fdivrl jns jl stos insl mov adc mov mov pop push sti gs je rex.XB pushq or pop (bad) xchg cmp cmp xchg movslq sbb push iret sarb or movsb stos (bad) sub xchg jp movabs outsl cmp ds retq cmp (bad) xchg rex.WRX adc xlat (bad) mov rex.R xor and (bad) icebp sub or notl (bad) and sahf xchg movabs pop addr32 movsb rex or lea pushq pop mov xchg mov rex.RXB mov or xlat cmp (bad) lret xor je lods movabs rex.WB pop (bad) jge sahf (bad) adc addr32 xchg (bad) jle push and or push fisttp rcll outsb add xchg and subl mov pop movsb scas (bad) adc insb (bad) lret sahf loope int3 sti lea addr32 mov cltd and ror pop cmp (bad) mov mov loop jae,pt repz xchg flds lret in xchg stos mov (bad) (bad) in movabs scas xchg push or sbb xchg (bad) rex.W pop movswl jl cmp fstpl xchg rex.R lods out fwait rex.WRB cmp and sbb jge out sub rol xchg sub mov pushfq movabs xchg xchg xor pop loop outsl pop xchg addl (bad) mov mov mov xor fildl push rex.WRB rex.WRXB xchg rex.X xchg sub mov sbb int3 ss lods movabs lock (bad) jp (bad) (bad) and test (bad) cmp (bad) notl lahf (bad) mov imul xchg mov (bad) jg shrb mov push rex.RXB mov pushfq movabs (bad) mov sahf sub jns data16 fisubrl (bad) lods xchg (bad) (bad) leaveq xchg lods (bad) (bad) cwtl (bad) xchg (bad) roll lods int addb out (bad) cmpsl adc push rex.WRXB xchg adc idivl mov (bad) (bad) push xlat mov ja xlat cltd cmpsb mov (bad) int3 rex.WRXB rex.RXB (bad) mov in out cmpsb scas fwait (bad) cmp adc iret mov addr32 (bad) xchg rex.WRXB jae sub mov fdivs rex.WRXB in repz mov (bad) adc fcoms mov mov outsl (bad) rex.WRXB jae in fwait (bad) mov (bad) retq mov in sti cmpsb mov (bad) mov jae in (bad) (bad) xchg sub mov pop (bad) (bad) pushfq rex.WRXB lea xchg cmp fdivrs push jae in std cmpsb mov popfq mov jae out rex.WRXB in add fsubs rex.WRXB jae in and fcom mov leaveq jae (bad) push es int3 (bad) fisubr xlat stos rcll (bad) mov in sbb pushq cmpl cmpsb test mov adc in jnp xchg (bad) (bad) push mov xchg sbb xchg rex.WRXB jae in pop movabs jae in fisub (bad) xchg data16 cmpsb adc rex.WRB rex.WRXB in sub cmpsb (bad) fwait insl adc lret (bad) (bad) mov stos fwait push adc cli rex.WRXB adc jne retq in add movabs adc xchg mov gs out mov data16 fwait lods adc pop rex.WRXB jae in cmp fdivrl mov jns insl (bad) cmpsb test rex.WRXB jae sti hlt adc mov sub xchg rex.WRXB (bad) in imul adc push rex.WRXB jae in xor fcomp mov andb movabs and jae pushq jae loopne jle (bad) orb fsubrs insl outsb movabs rex.WRXB (bad) fadds movabs rex.WRXB fmuls insl rex.WX rex.WRXB jb add adc loopne pop (bad) fdivrs jnp adc loopne insb (bad) fcoms movabs mov insl pop movabs mov rex.WRXB xor jae loopne add orb shll (bad) (bad) (bad) adc lea int3 mov (bad) xchg (bad) (bad) mov iret retq mov mov mov mov mov leavew adc (bad) push fldl fistl (bad) adc xchg jg cwtl scas cltd imul (bad) xlat push xchg (bad) (bad) pushfq jg sbb jmp pop sbb cmpb out in sbb sahf cmp lahf cli lret (bad) lock jle pop xchg pushq xchg rex.WRXB (bad) insl ja mov fsubrp (bad) pushfq std idiv mov int3 es repz rcll outsl scas mov pop xchg mov out iret imul (bad) fnop out jrcxz mov xchg pushq jae test iret scas mov out jp pop mov retq (bad) icebp and mov (bad) bnd sarl rex.WRXB (bad) cli in repnz cmp push jno (bad) mov and icebp (bad) ja mov cli insl f2xm1 or (bad) (bad) (bad) out outsb mov (bad) mov lret movsl fcmovu insl mov out andl (bad) rex.B rex.WRB outsb popfq xchg sahf fucomp mov (bad) (bad) icebp lods adc (bad) fcompl lret add (bad) out sbb in in or rex.RB int clc ja mov insl fsubrl in (bad) cmp push jmp iret push sti clc push (bad) (bad) (bad) int3 fmulp mov xchg add out or sub cli mov out fildl cltd (bad) sar cmc fldt fsubrs rex.W adc rex.WRX cwtl (bad) (bad) mov callq mov jmp fstp (bad) lret notb cwtl xchg (bad) movsb std lock clc mov cmpl sbb (bad) push (bad) and mov xchg (bad) fcmovu movsl lret retq (bad) or add repz ja nop and (bad) or repnz and adcl movsl int (bad) jle adc xchg sar callq out lret xchg int mov xchg push cli mov mov fwait mov lea rolb xchg mov mov (bad) incb leaveq mov rex.RX pop cli (bad) sub xchg scas mov pop out (bad) repz stos fstp sub out cmp repnz fs sbbb (bad) mov sub xlat out jmp mov lock mov xorl pop xchg orl sbb adcl rex.XB repnz test mov rorl stos (bad) or cmpsl mov (bad) std out lret mov repz and (bad) fnstenv add retq mov scas (bad) iret gs mov adcl vcvttps2dq imul (bad) adc sbb and iret lahf sbb lret clc add and (bad) mov mov mov fnstsw mov xchg shll rex.WRB test fucompp mov adcl repz and lret (bad) out rex.RX (bad) or jo lea xchg (bad) lock repnz sete in scas jmp lcall pop retq jmp lods mov sar lods es iret pop or cmpsb in (bad) outsb jmp (bad) mov sti jnp (bad) and cli repz sub cmp (bad) icebp cmpsb (bad) outsl nop (bad) cld and divb rex.RX sub xchg xchg test push in mov and (bad) (bad) (bad) pop ffree in mov xchg out rex.X mov (bad) shr jrcxz rex.WR iret (bad) shr orl pop (bad) callq fisubr (bad) xor pushq in leaveq hlt mov (bad) lods or lret mov rclb fstpl pop pop mov fnstcw fcmovne (bad) cmc lods pushq mov in jl mov fsubr mov (bad) jrcxz or cmp push sub (bad) rcrl jmp mov sub lret adc lret mov lret lock in mov fwait sbb fmulp std in mov cli repz (bad) (bad) mov (bad) sub repz retq xchg xorb pop mov lock hlt in rex.RB lock rex.XB mov push cli iret sarq lock mov test cmp jrcxz (bad) (bad) adc mov (bad) fldcw cmpsl mov leaveq idiv shl mov hlt mov in out push insl cmc iret mov hlt (bad) adc cmp (bad) (bad) div rex.WX popq jo addr32 decl (bad) fbld fmul mov jg xchg xchg rex.WB mov push movabs (bad) jb cmp xor and xchg pop xor cmc lret rclb (bad) mov out mov adc outsl sti cmpb movabs xor std xchg nop jp in ja pushq and sahf (bad) rex.WRB mov out rex.WRXB cmp mov add add int (bad) movabs (bad) and (bad) and repnz sbb rex.B test pop cltd rcll and jmp imul mov (bad) ja cwtd loope jne cwtl mov sbb xchg mov idivl (bad) sub adc (bad) cwtl fidivr movslq mov (bad) cmp test pushq sbb (bad) and imul repz xchg adc (bad) je leaveq mov repnz mov cmp lock push push repz (bad) cld jrcxz cwtl jl,pn test rex.W ja sbb xchg out adc pushq sarl mov fwait mov mov push clc fstl cmp lret push cs rex enterq push je mov jge mov ficom push (bad) cmp mov movabs (bad) xor sub cs or jno mov xchg xor mov sbb loopne xchg (bad) or xor sahf fistl int lods lret test jp push mov push mov stos xchg jge rex.WRX adc loop mov sub sbb jp push xchg or cld (bad) pushfq xor cmp jmpq (bad) rex.WXB addr32 xchg (bad) out out cmp setno jp (bad) int3 cmpsl xchg in leaveq fisubrl add (bad) and rex.RB xchg jrcxz xchg jnp xorb lahf pop cld xchg movsb iret sbb (bad) in imul cmovl pushq pop lock lret cmp and xchg fdivs mov jl outsl cwtl jno sbb (bad) faddl or (bad) jle cmpsl cwtl rex.RXB sbb push add sbb push sub (bad) jb rex.RX push rex.X push addr32 insb and (bad) or xchg xchg add pushfq insl repnz jmp (bad) rex.X adc push movsl sbb (bad) rex.WXB xor movsl sahf (bad) jae (bad) popfq push xchg stos xchg lea callq sub out and cwtl sti retq clc test lahf xchg and push jo (bad) int3 rex.XB xor xor sbb xchg andb (bad) jae or test shld jmp icebp xchg addr32 xor adc rex.WXB push mov (bad) in or pop xchg fild and loope pushfq data16 and scas jmpq fsubs or xchg adc fistp cmp mov out xchg mov xchg or xor notl rcl (bad) sahf adc and scas xorl (bad) (bad) in int pop rcrb out xchg or (bad) (bad) pop (bad) insl rex.RB xchg rex.WRX lea test sbb adc enterq rex.WRB rex.WB (bad) cld jge jl hlt callq sbb xchg out (bad) adc rex.B addl cmp movabs (bad) mov and rex.WRB (bad) xchg mov imulb je push jp cmp in mov (bad) push lea loopne movabs rex.WB imul callq rex.WXB outsb jo (bad) xchg jge pop (bad) setg popfq xchg retq sub sbb rex.WRB cmp jge mov (bad) (bad) xchg movabs (bad) adc add and sub xor and in (bad) pop and jle xchg movabs (bad) (bad) xor (bad) sub jne xchg repnz push (bad) (bad) cmp notb cld mov fistpll cmp jge rex.WXB add xchg jecxz fldt rex.WRB fsub mov xchg or (bad) test or jb rcll adc gs imul sahf rex.RB (bad) fistl mov shrb push gs or sub movabs add add shll jnp fstps ja sub rex.WXB lret ss xchg xor int3 gs test push cmp sbb and in rex.WRB int rolb and test mov add xor mov cli (bad) icebp (bad) outsb rcrb xchg (bad) pop adc pop xchg sub movabs sbb iret or (bad) rex.WRB mov mov cwtl movabs or sahf add cmp std (bad) pop movslq cmp addb xor retq lahf jo jmpq rex.RXB lods jl and add add movabs (bad) lods and jns pop jg (bad) xor mov jmpq cmp subl pop mov out fmuls cmpsb movsl rex.RXB or movb fcmovnu fadd jge xchg (bad) mov in cwtl xchg es (bad) vpshlq xor mov push (bad) xchg repnz cwtl xlat cltd fwait sub rex.WRXB nop or xchg jae (bad) (bad) cli (bad) pop mov or xchg (bad) jo fisttpl callq (bad) outsl rex.RXB (bad) ja (bad) sahf adc sbb clc negl fwait xchg movsb (bad) jle add shlb loop ja fcomps (bad) insb (bad) mov pushfq lea sub jbe sbb stos pushq xchg data16 (bad) retq cmc sub stc ja in lock sub movsb xchg int3 xor in cmp (bad) (bad) xchg jne (bad) (bad) mov leaveq sti xchg je mov mov xchg (bad) icebp test cmp rex.RB rex.WXB adcb pop imul cltd xchg (bad) jns in fucomp in adc and sub movabs lods sbb rex.WXB fwait and xchg rex.X rex.WRXB ds (bad) rex.WXB cmpsb mov incl cld cmp outsb pop (bad) retq or add rex.RB sub lret mov cmp push jbe cwtl fimul sub cmp out js rclb (bad) and push or xchg xor push pop mov (bad) push xchg divb xchg sbb (bad) mov xchg test pop ficompl mov callq mov int fstps (bad) cld cli lods lea xor fisttp out mov lods xchg jns jno add cwtl repz mov push push adc (bad) outsb out rcll lea jne pop xchg rex.WRB int testl fnsave or (bad) sub xchg add fisub push std rex.W (bad) fs or fdivrp lret ss adc sbb fstpt xchg pop jo rex.WR (bad) sub xchg add or cmp popfq rcr cmp fldt rex.RB lock rex.XB cwtl mov xchg and loopne in mov (bad) xchg and rex.WX mov sbb xchg scas cmp es jmpq mov sti in test cld xor rex.X rex.WR rex incl fwait adc and cs pop icebp mov xchg cmp xchg rex xchg xchg fwait (bad) fisubl xchg std mov rex rex.RX xchg repnz jp in mov (bad) clc pop sub xchg (bad) cmc xchg outsl or cmpsb rex xchg cmp pop je lods mov jb adc shrl xchg rex.WR ss pop push (bad) (bad) (bad) jne lea sub xchg (bad) xor rex.WB mov (bad) outsl hlt jb (bad) xchg out push cld (bad) cmc ds xchg shrl in sub sbb (bad) or ficompl mov lods xor xor xchg data16 repnz xchg (bad) lahf xchg rorb (bad) xchg rex.RXB pushq rclb xchg sti cmpsb movsb xchg xchg callq je cmc mov leaveq xchg enterq pop hlt out xchg push pushq pop xchg sbb jae int3 and loope cwtl xor retq decl mov sahf pushfq jnp sbb push fnstenv stos cwtl rclb (bad) shl xchg or rex.XB imul hlt (bad) xor (bad) rex.X movsb movabs (bad) mov loope negb in pushq movslq xchg adc in mov mov cmp fcmovnbe mov rex.RB loopne xchg orl fwait rex.RX fiadd pop fwait out fistl jle (bad) stos xchg rcll xchg xchg rex.B rex (bad) (bad) out and in (bad) movabs adc xor cld jg xchg fistl movsb in rcl jae jno out lock xchg (bad) out es rex.WB imul addr32 callq (bad) cmp movabs rex.XB xchg out movabs xchg or in int3 xchg cmp retq movsl shlb nop jb mov (bad) movabs (bad) add (bad) mov cmp xor cmpsb sarl sbb (bad) add mov sbb cmp jo jmpq jns xchg lods (bad) or xchg (bad) pushq in xor cs ss xchg jbe retq mov mov adc andl xor test push xlat push rex.XB (bad) jnp mov or xchg xchg xor test jno stos and rex.WRB (bad) repz rex.RXB or xchg (bad) outsb (bad) jmpq xchg gs mov jle jbe xchg rex.X xchg movabs gs or out sahf xchg iret insb rex.R cmpsb imul cmc roll jae nop (bad) sbb movabs insb rex.B rsm out xchg sub (bad) lock push shrb int mov mov xchg sbbl mov mov ja fs jle xchg (bad) push jnp sub rex.WX or push mov rex.RX (bad) mov or xchg (bad) add movslq cmp test ficomp jne (bad) movsb lret icebp mov sbb (bad) fwait xchg mov pop xchg xor sbb mov (bad) cld movabs sub jo fisttpl movslq cmp mov gs addr32 and sub out out rex.RXB xor int (bad) sahf movabs pop jae cld xchg sbb mov sbb mov gs adc and cmpsb (bad) mov xchg repnz and gs and sar xchg cwtl sub pop or rex add mov jmp repnz sub push xchg jae mov or jno pop sahf rex.R sub repnz (bad) sbb (bad) rex.RXB mov mov sub push jns or sbb mov lret xor imul sub sahf pop jns outsl ficompl xchg movabs pop in imul mov nop in rex.WR xchg iret cmp xchg jne insl cmp sub mov (bad) (bad) pop add psubusw (bad) cmc xchg cwtl and lods rex.RX mov callq pop lea sbb jrcxz lret (bad) (bad) mov shll sub jne rex.WRXB fxrstor rex.X pop cmp test in jrcxz repnz (bad) in pop xchg sahf je rcrl rex.B xor rex.WRXB rex.WX pop in insl sbb fadds je pop jnp rex.RX mov cmpsb mov (bad) push push cmpsl repnz fsubl xchg mov test xchg insl js and (bad) rex.WB xchg sub pop iret (bad) vcvttss2si xchg pop push (bad) jnp movabs (bad) test pushfq (bad) fistp xchg jl out test xchg std shrb adc rcrb (bad) push movabs mov pushfq rex.WXB (bad) mov movabs (bad) addl xchg in out rex.B rorb push pop add cmp sbbl (bad) shll xchg mov rex.RX mov outsl rex.WX mov push in cltd or xchg or lret (bad) outsb mov (bad) movabs (bad) sub xor and jl (bad) (bad) notb addl lret movabs icebp int3 insl (bad) nop or sub push sub out xchg pop (bad) callq (bad) fwait movsb (bad) sub push movabs xchg sbb cwtl (bad) (bad) roll jmp mov sbb in or (bad) add sub lahf add fwait add cmp and rex.X stos pop rex.WXB (bad) mov xchg cmp jbe fstpl or and and (bad) adc (bad) (bad) test ja in xchg testl (bad) jl (bad) xor loopne iret jp add leaveq pop ja push ds (bad) jg sahf jbe xchg jg add sahf movslq adc xchg rex.WB in xor cmpsb rex.WR (bad) (bad) es movsb cwtl retq xchg jmpq (bad) rex.RXB cmp addl movslq callq and (bad) xchg xchg jnp sbb ja rex.WRB xchg (bad) xor jo xchg retq ds mov sub fild jnp sti mov pop ja (bad) jae retq pop pop cmp xchg (bad) nop test xchg xor mov out jae (bad) cli and (bad) xor adc (bad) andb push xchg and sarl (bad) idivb sbb movabs mov leaveq mov scas add xor and in sub cli or sar fwait jmpq pop add mov cmp (bad) mov loopne enterq movabs add xchg lret outsb scas jno fstl loopne xchg imul movabs sub sarb pop mov or rex in outsl mov add pop fwait int3 mul pop (bad) mov mov jno rex.WR mov adc pushfq rex.WRXB stc xchg lahf pop (bad) (bad) repnz fcomps repz rex.B ss rcll mov jle sahf xchg xchg lods rex.R iret sbb movsb mov out jae imul movsb adc lahf iret pushq xchg xchg sarb cmp (bad) lahf mov popfq retq loope stos xchg (bad) shll outsl lret push (bad) sub mov xchg stc imull or shlb test nop rex.WR rex.XB mov pushfq lret xor jb fcomp orl lock jmp cld xorl pop retq (bad) (bad) rex.X xchg xchg xor mov rex.WB (bad) sti sub in adc (bad) xchg (bad) nop iret mov nop faddl xor insl (bad) in ja lods cld jno fistp divl (bad) rex.WX (bad) jmp leaveq cwtl xchg rex.WXB movsb mov repz (bad) sahf hlt movslq js pop js pushq negl scas push std mov (bad) pop rex.WRB cld jrcxz ror mov scas insb rcr mov cwtl std (bad) stc retw pop movabs cld out movabs fwait cltd adc rex.WRXB div scas mov mov je (bad) (bad) stc (bad) cld cli jrcxz jp rorl (bad) cmp imul push (bad) rol (bad) push lods rex.WB (bad) (bad) shrb fildl push jrcxz and (bad) xchg outsl xchg int icebp (bad) in cmp xlat rex.WRB std xlat (bad) iret out (bad) (bad) scas mov sahf insb jrcxz repnz mov xchg lret (bad) in add mov loopne xor iret sub imul jrcxz mov fstpl add rex.WRXB rex.RXB sahf xor (bad) and add cmp cmp jmpq dec clc jmpq pop addr32 and or mov pop fnstsw rex.W and test (bad) jne add lahf rex.R jl jrcxz sub jnp or rorb ss outsb mov pop cwtl (bad) movabs loop fcmovne add jae xchg mulb add xlat jbe (bad) mov callq adc js jb sbb js sub xchg (bad) retq mov or shrl mov (bad) (bad) (bad) cli fist or push (bad) (bad) (bad) std enterq lods and rclb push fildl (bad) jmpq mov retq sbb (bad) stos sub std pop or (bad) cmpsb repnz rorl cmp adcl cmp push adc roll or ds (bad) (bad) rolb xor mov mov sub cmp sbb xor insl push mov lret or pushfq neg sarb in retq pop add and (bad) stos cs (bad) hlt mov cmp mov test (bad) fldt adc (bad) movabs (bad) cld and cmp sub (bad) push cmpsl mov or sti (bad) jmp enterq (bad) (bad) std pop repnz jo mov (bad) cmp xor pop lock (bad) int3 movabs and (bad) mov xor rex.WRX jae outsb or in (bad) cmpsl or rclb sbb rex.WRX mov lahf mov (bad) mov shlb movabs xchg mulps cmpb pushq movsl (bad) jrcxz repnz mov (bad) or rex.WRX sbb (bad) push (bad) jp (bad) xor jnp cli cwtl (bad) push enterq or ja mov push xorl sbb add pop sbb loop adc insb sbb xlat fstpt mov test cs or roll rex.WB clc adc mov sub add idiv (bad) (bad) (bad) (bad) and cmpsb push mov sbb jns es xchg callq cmpsl sbb pop imul movabs retq fimull sbb rclb in retq lods mov xchg (bad) (bad) (bad) cld movslq push cmp (bad) (bad) (bad) decl orl lret rex.WRX out sbb or (bad) movabs jne add add outsl add fnstcw xchg mov (bad) xlat bnd jmp xchg and cmp stc sarw cmp addr32 outsl (bad) lea rex.W rex.WX js je jo (bad) retq (bad) mov bt cmp movsbw bswap not jmpq jmpq stc cmc stc stc repnz jmpq mov (bad) jg outsb push (bad) and and fisubrl (bad) subb sbb (bad) push scas push mov fldl jle rex.WRX (bad) test repnz movabs mov test popq sub mov sbb add movsl xor insl popfq cmp rex mov int mov xor movabs lods xor gs fwait movsl gs stos (bad) sub imul add mov pushq fs pop pop (bad) test sub mov (bad) mov fwait (bad) (bad) (bad) (bad) (bad) sub cmpsb cmp xor rex.RXB repz rex.WR rex.RXB (bad) jp rcll outsb xchg mov enterq lods repz lahf xchg (bad) mov test xchg mov movabs (bad) jnp jne neg mov xor sub stc btr shl xor mov jmpq pushq enterq xor push fistpl (bad) sar cmpxchg xor fldt pop rex.WRXB and pop add mov fidivl movabs (bad) outsl cld sbb cs xchg sar scas and mov pop stos pop stos pop jbe xchg (bad) adc jg mov sbb clc retq int pop out rex.WRB add mov rex.WRX (bad) sti lahf rex.RB (bad) decb mov and repnz insb add add or pop jrcxz movabs callq scas rex adc callq xor sub rex.RB test movsb movsb test (bad) jb push (bad) sub out xchg imul and imul or xchg jno mov push cmpb lret movsb rex.RB fwait cmp cmp xchg ficoml rex.WR rex.WRB sbb xor test and pop out repnz (bad) (bad) sti lea (bad) (bad) (bad) jbe imul jo mov xor (bad) rex.RXB (bad) mov lea jrcxz addr32 jge stos sbbl out push stos adc imul mov xchg (bad) (bad) mov push (bad) movabs or (bad) (bad) (bad) std cwtl jmpq mov mov rex.WXB std lret add stos mov callq cmp xchg out xor movabs loopne loopne test (bad) outsl rex.X (bad) pop cmp scas in jrcxz shrd rclb loop (bad) rcl mov jbe xchg rex.WB es scas sbb push rex.WRXB jmp fldl rex.XB rex.WRXB repz cmp mov rex.RX imul jb retq mov (bad) cmp fidivl mov jl sbb (bad) (bad) sti scas loope gs (bad) (bad) (bad) cltd (bad) sub rex.XB add xchg pushq cwtl adc jl cwtl jnp rex.X jns cltd adc or and js jl popfq int movabs push (bad) rex.WX mov enterq mov stc jb outsl rex.WRX add sub loope mov nop scas xchg rex.WRB fnstenv (bad) mov (bad) cmp jnp jp in sbb pop clc pop rex.RX mov fwait (bad) adc sub jge mov sub add and rex.RB xchg jb cltd out loopne js movsb sti xchg rex.X stc push push mov rorb icebp loopne (bad) stos sub sbb loope or outsl mov adc lea cmp xor push or fisubl jbe mov (bad) xchg cwtl stc je enterq lock sbb and movsl mov mov mov scas (bad) (bad) (bad) sti lock or sbb (bad) (bad) (bad) fnstcw popfq out (bad) (bad) (bad) pushq jg xchg rex.R add add pop jl (bad) (bad) push mov jnp cmp xchg movabs push jbe std lahf mov (bad) rcll fidiv lret mov fadd repnz enterq cmp sub shr add jns stos out mov rex.X xor stos movabs nop scas (bad) (bad) mov jne enterq mov sbb or xor iret imul loop xchg (bad) popfq and (bad) es cmp (bad) (bad) (bad) (bad) sti (bad) orb (bad) adc mov (bad) xor imul lea sbb mov mov in retq jrcxz mov cli cwtl xchg and jg xor jrcxz rex.WX int xor (bad) (bad) decl addl jne sub sbb cmp stos (bad) (bad) and xor sarb adc pop (bad) or cmp movsb lret rex.RB rex sub xchg rex.WB push jle cs int sbb cwtl push cmp xchg rex.XB retq popfq rex.RX enterq rex.X movabs iret repz or sahf rex.XB mov scas or xchg je or out cmp cmp fwait shld movabs (bad) mov (bad) stc pop cmc rex.RXB shrl (bad) (bad) (bad) sti test in rex.RX (bad) (bad) (bad) outsb jl mov lods movsl adcb (bad) (bad) out mov xchg cmp (bad) fs repnz jg lret pushq pop or pop sbb sub movsb xchg mov fldl jae mov mov movslq rex.WRB pushq sbb push cmp add push xor out mov lret in jmpq lea bswap movzbw pop setbe not jmpq xchg pop jp int3 stc xchg (bad) sbb std movsl (bad) out test enterq add or lret sub in pop adc in add jl retq (bad) jae or in mov and xor movabs or xor jrcxz imul push xchg je sub sbb movl cmpsl int3 addb lahf enterq mov (bad) (bad) sti (bad) test lea lock (bad) adc out out sub out xchg rex.WXB int fcmovu mov lret (bad) (bad) (bad) (bad) mov scas cld rex.WB movabs stos sti push jrcxz (bad) xor cltd mov xor sarl rex.WRXB cmp stos addl movabs fidivr test test clc add jmpq je bt clc stc add cmc test clc cmc cmp jmpq jmpq lea seta pop jmpq je bsr push movzbw mov and cmp or bsf sub movsbw movzbw not lea jmpq jmpq jge add sub add mov callq sbb shrb or push jmp imul (bad) lea mov (bad) lods pop andl sti and icebp mov pmuludq adc jnp stos (bad) iret add callq (bad) es xchg xchg shr rex.RXB lods mov pushq imul (bad) (bad) (bad) sti lret push jmp (bad) (bad) (bad) mov mov xor rex.WRX (bad) push mov pop clc lret add add xor retq stc movabs mov push xor fldcw out rex.WR cmp sbb fidiv mov loop repnz jrcxz mulb add cmp fiadd je mov xchg (bad) or xchg and fmul stos addr32 mov jne or repz rex.RB rex.WRXB out (bad) out or mov cmc pop push sti mov xchg mov add rex.WXB xchg cld loopne push (bad) (bad) cmp fmull out imul adc and xchg (bad) nop jge movabs (bad) (bad) sti std pushq (bad) (bad) (bad) (bad) (bad) (bad) loopne pop xchg xorb (bad) mov int add add out pop (bad) repnz in (bad) jns shl and addr32 nop pop cmp mov add (bad) cmpsb (bad) cmpsb xchg (bad) cmp cmp add (bad) callq stos rex.RB (bad) mov int3 fsubr cltd mov (bad) xor add test add jmpq jbe xchg add btr mov bt add add bt shrd or shl mov rol xor shl add rol sbb movl rcl ror mov btr mov test bt stc clc cmp jmpq jge xchg leaveq divb pushq in rex.XB xor adc enterq adc (bad) in loope cmpsl adc push adc movsb xor (bad) or add mov and movsl test rex.WX mulb mov push ficom sbb out jmp icebp icebp movabs (bad) (bad) int and out push int jns sub retq add add (bad) in (bad) xchg add in jns add repnz fisubl and mov mov (bad) mov mov rex.WRB (bad) (bad) std (bad) rex.WRX test add add mov (bad) (bad) mov out rex lret fcmovb test mov sarb shlb sub sti xchg (bad) (bad) rcll (bad) push std mov int fstpt add rclb add add sub (bad) addb add xor (bad) addb add and add in sbb add add fnstenv ja (bad) adc fldt pop push test jnp or movabs pop imul popq xlat movabs rex.WR pushq pop pop test int3 jp push sub cmpsb cmp mov (bad) cmp sbb rex.WB gs sti sbb callq std repnz sbb (bad) rolb and jmp loope push xor rex.WR (bad) (bad) (bad) cld xor es lcall sbb and jg cmovg push and rex.WRXB leaveq (bad) sti pop add add imul enterq xor (bad) add xor xor sbb pop icebp xchg add and jae test jne mov and (bad) or add rex.WXB mov iret movabs sahf lods sbbb movabs rex.WRB xchg rex.RXB je out stos (bad) pop xchg addl subl mov mov cmp sbb sahf jp mov add test pushq scas int3 pop ja minps cmp (bad) ss rex.RXB lods std (bad) or (bad) xorl (bad) je mov in jl pushfq callq test callq and cld (bad) or adc (bad) (bad) (bad) (bad) lock mov add add in icebp out (bad) xor cmp movslq scas (bad) (bad) add fdivs mov jno imul pop ss scas lret popfq add (bad) push cli (bad) push sbb repz rex.WXB out (bad) pop stos subl pushq incb add add pop add add lods mov and or (bad) mov (bad) retq mov mov sbb fsubrl mov pop push cwtl clc sub shrl insb adc rex.WR xor push (bad) add pop sbb or push (bad) fisubr push cmpps add (bad) in out adc (bad) jo jae outsl add int clc in lock lret movabs push test fwait in (bad) (bad) (bad) sti (bad) push int3 jrcxz (bad) (bad) (bad) decb (bad) cmp loopne cmp (bad) stc cwtl movabs (bad) (bad) dec stos stos pushfq rolb movsb mov adc movslq sbb cmp mov xchg ja sbb mov pop sub sub add scas int3 (bad) pushq mov rcrb insb enterq pop add jmpq cmp cmp jmpq jmpq jne jo lea bts setno sub rcl cmc inc mov inc test (bad) lock add (bad) lock lock clc test jmpq mov jmpq sbb stos sbb and push jnp add adc push mov cmpsl sbb push andl rex.RB rex.WRXB lods rex.WB rex.X pop test out rex.X and movabs (bad) mov sbb outsl imul or (bad) (bad) cld xchg iret or mov not jnp jle mov (bad) andb jbe add add push fisub rex.WRX movabs stc rex.WX cltd cmpsb mov adc cmp cmc (bad) retq jmpq (bad) (bad) push mov movsl mov rex.RB sub rex.RXB mov rolb xchg cmpsb cmp iret insl fild (bad) or or lret or (bad) mov nop rex.B cmp and movsb pop (bad) lret scas loop mov pushq (bad) hlt jbe jns frstor xor rex.RB insl cmp mov (bad) mov (bad) (bad) lock jge xchg divb cmpsb rex.XB repz (bad) (bad) (bad) (bad) sti (bad) lret repnz (bad) (bad) incb mov (bad) and ficom xlat sarb add add lret rex.WRXB mov (bad) icebp jmpq mov xchg in rex gs rex.WB sub movsl mov push rex.XB adcl gs sarl stos add test leaveq add movsbl add mov movsbl mov mov bt test add bt cmp jmpq cmc bt mov stc mov clc mov setg ror mov rcr xor mov bswap push adc mov jmpq adc jmpq inc jmpq retq mov pop xchg iret cmp insl outsb lret imul mov add outsl mov push or cmp sbb pop popq jmp jnp mov pop (bad) jnp cs movslq pop movabs adcb mov fidivl (bad) stos cld ds sub mov movsb movabs repnz (bad) (bad) cli loop (bad) stos mov (bad) (bad) std lret mov stc stc jno out mov roll sbb fsub cltd enterq (bad) pushq (bad) (bad) dec cltd clc jae subl (bad) test add mov loope clc (bad) fistpll outsb rex.WRX cli jne movsb rcrl push add xchg pop test repnz cmpb movslq mov mov (bad) imull pushq jmpq jae jmpq lea mov movsbw mov bswap pop mov xchg mov bswap bswap mov mov jmpq test test jmpq jmpq jnp pushq jmpq jb jne jo movb clc cmp cmp test jmpq lea jmpq xor test or movabs sti in lret out sbb rex.RB or xor stc cmc loopne (bad) mov (bad) mov jmpq or stc add popfq sub movabs cmp lahf jbe (bad) cltd mov rex.B cs stos rex.X (bad) jp sbb xor (bad) mov rex.R (bad) (bad) decb cmpsb loop adc std fstpl neg mov jno enterq fidiv cwtl (bad) (bad) ds and and mov mov rex.WR insl lret xor xchg add xchg xchg jne sarb push lock push (bad) mov adc xchg sti out fsts shll rex.WX jmp js test clc push adc retq insl fidivr (bad) pushfq jmpq rcr mov xchg or js (bad) mov movabs fwait sbb pause cmpsl add (bad) (bad) mov mov enterq fimull (bad) (bad) stos push xchg cmpsb sbb faddl sahf cld hlt sub sahf rex.W push xchg and rex.RXB (bad) pop push test (bad) stos cmpsl xorb adc lahf push rex.R adc (bad) (bad) cld add (bad) (bad) in js fstpl (bad) push icebp (bad) (bad) or (bad) rex.WB or adc insb jne js mov retq rex.WRXB add clc pop add vpsubq rex.XB sub (bad) jl adc rex.WRX lahf mov stc rol mov (bad) xlat je mov and (bad) xchg fwait xchg lret rcrb std (bad) rcll callq popfq (bad) xchg pop pop jno fsts icebp pop notl retq (bad) xor rex adcb ds (bad) xchg xchg pop scas and (bad) rex.WRB and adc fwait movsb xchg retq xchg sub pop mov popfq retq sarb addr32 movabs jle rex.WXB (bad) in jo fnclex cmp push sub jnp lret (bad) rcl insb add and xlat leaveq sbb rex.WX out clc and push push xchg repz jmp addr32 sub pushq fwait sbb pushfq jae cli push pop fistp pop jo sbbl movabs mov push (bad) mov fildll (bad) adc pop jrcxz imul mov jge xchg loopne rex.WR xchg cmp test sub (bad) push add rex.WX (bad) out jae pop rex.WXB cwtl hlt jo fidivr mov add rex.WB sahf rex.WRB fwait xor jns out pushq cmc cwtl jmp outsb icebp rex.WRXB cli insb fstl gs fistp es (bad) xchg movslq fnstsw je xchg xor add in mov fmulp add (bad) rex.RXB ss ds rex.RX sahf pushfq cmp movslq idivl cmp (bad) (bad) mov gs add divl hlt retq and out mov xchg iret fsubp out xchg (bad) mov loope xchg push mov or xchg mov cmp rex.R outsl lahf stos rcll movsb sbb mov jb test stos pop xchg sub cmp in mov pinsrw movabs data16 (bad) xchg mov sub and cmp jbe push int3 cmpsl adc lods (bad) in (bad) rex.WRXB in push in xlat leaveq add fdivrl retq jrcxz mov xchg (bad) mov xchg xor mov pushq lret xchg xchg ss cmp fstpl (bad) cltd jp or test add out shr hlt xchg cwtl rex.WRX mov sahf fnop retq (bad) addl xchg data16 loope mov lahf xchg (bad) std movabs rex.W add mov movabs stc (bad) xlat fwait xor mov pushq mov popfq movsl cs rex.R jae jle xchg (bad) xorl rex.X xchg xor sbb hlt sbb sahf cltd (bad) mov rex.R stos xchg ror in xchg movsb (bad) addr32 (bad) jo jbe mov gs (bad) (bad) xchg clc movabs mov retq cmp js jbe cwtl xchg mov xchg rex.B popq lods sub jmp xchg stos mov mov (bad) repz xor and out (bad) loope loop xlat nop fmuls sub ja mov lods scas pushfq fidiv mov pop xchg pushfq xchg cmp mov popq jle pop jge outsb std jp and (bad) xchg jmpq out xchg callq test sub nop fwait (bad) jge pop sahf lret jrcxz mov (bad) mov gs push and notl outsl fwait stos (bad) sahf (bad) es (bad) xor std push cmp xchg mov fcom (bad) fs cmpsb adc addr32 (bad) or jmpq (bad) mov (bad) cmp scas xlat sarl or mov outsb mov rex.X lret ja add xchg pop fwait in enterq lods lret push or pop sbb fcoml jle push cs rex.X sbb mov fild rex.XB cs rex.WRXB xchg jbe cmp xchg xchg (bad) jne xor rex.WB sahf (bad) mov pop (bad) nop add es sahf push add push rex.WR sub sub xor or hlt mov push jno sub in fldenv and pop cs repnz out retq jp mov add xchg adc test xchg xor rex.W xchg addr32 xor xchg fwait xchg cmc jb (bad) and out xchg gs rex.B xchg mov jge sbb jg rex.X test pop (bad) mov rcrl pushfq pushq pop xchg std or (bad) cmp cmpsb xchg gs data16 sti outsb pushq scas cmp pushq (bad) ror pop (bad) and rex.RXB add cmp xchg repz lods int3 pushfq jno add (bad) and stos jmp or jns (bad) adc andl fidivl pop pushq pop in testb xor in (bad) xor adc (bad) xchg fcomps repnz push push adc xlat retq xchg add xor (bad) in (bad) es loop retq mov xchg add nop movabs out fmuls jo sub adc mov and push lock js int3 xchg data16 xchg (bad) mov jmp sub or mov xchg jno mov mov movsb jg (bad) and or adc pop fs rex.WR out fist test jnp sahf mov je (bad) lret rex.WB repz pop rex.WR scas mov ss imul and (bad) orl rex.WX imul xor subl fs enterq jle outsl mov (bad) or movabs add xchg mov mov cwtl sbb pop icebp callq out rex.X push fstl (bad) shlb mov (bad) xchg pop rex.WRXB callq push jmpq hlt rex.XB stc nop insb movsb fwait (bad) (bad) out gs or mull nop notl cwtl add jb rex.R ss xchg std (bad) repz scas xchg in lock pop xchg lahf loope rex.X and cmp sbb fdivr xor in push movabs (bad) xor xchg callq adc movabs mov mov xchg or hlt xchg mov test retq (bad) insl mov xchg popfq (bad) mov js std mov pushfq jb (bad) adc movabs (bad) jnp or test sti mov (bad) rex.W sub mov push pop and sbbl sbb retq mov (bad) (bad) popfq (bad) (bad) rex.RX icebp sub (bad) mov jb fucom mov (bad) in add fnstenv cmpsb xchg rex.RX repz cmc rex.WX loop pushq push ds (bad) imul pop lods pop (bad) faddl xor rex.RXB xor fld pushq je fimul adc sub cli xchg rex.R insl negl (bad) shrb retq rorl outsb (bad) mov nop movsb rex xchg xor insl repz sti outsl xchg (bad) jo addb jle jrcxz xchg mov icebp (bad) xchg out mov int (bad) sub sbb cmc or cld callq or push add rex.RX jmp jmpq cld sub and out mov int fnstenv icebp jg jb jno jp sub (bad) mov clc cmpsb cli xchg (bad) (bad) jmpq (bad) xchg sbb movabs orl pushfq and int ds xor or pushq jge orb rex.WXB xchg mov (bad) push cmp in xor add fildll xchg xchg je mov leaveq loop jl and xchg xchg and fisub sub (bad) adc jns rex.WR or push pushq jmp xchg cmp imul mov (bad) xchg int push fistl xchg pop out cmpsb rex.WRX (bad) add out (bad) in mov cmpxchg ficomp fisttp xchg xchg repz popfq movabs rex.X mov sub cmp xchg loopne fisttpll movslq and fbstp mov rex cmpb es mov decb cmp movabs out adc mov jle pushq fistpll mov rex.WRX cwtl cmp xchg sahf (bad) lahf sub mov mov mov jnp pop (bad) lods xchg imul mov push jae in cmpsb xlat sub out (bad) fsubs mov sahf ja loop (bad) jg sub (bad) mov or jg xchg sub sbb out emms negl (bad) rex.WRX (bad) lahf mov loopne cwtl std (bad) repz lret mov cld pop jrcxz rex.WX sahf (bad) stos iret scas (bad) rex.WXB adc lret mov cli fucomip cld int mov sahf cmpsl cmp and shll (bad) sub scas pop lahf add lods lret (bad) mov mov (bad) rex.XB mov pop pushfq and ficompl cmpsl movzbl mov popfq mov cmpsl pop enterq pop jnp mov imul push (bad) pushfq sahf cmpsb out pushfq ficompl mov rex.RB andl int imul (bad) xchg sbb rcl fnop roll xchg repnz jmp repz repz push mov rcl popfq jne (bad) out popfq pop xor test (bad) cmc xchg and ja xchg cli add xchg in in jg sbb sbb retq lock lods int3 mov fdivs sar (bad) and icebp or iret rex.RXB ficom push fcomip iret xchg xchg out lods xchg lods (bad) std mov in mov icebp mov rex.RXB rex.WRXB int (bad) sbb mov orl out out rex.RXB xor fcomip out or cmpsb repz lsl and cmp or scas sub mov repz sub (bad) cmp icebp (bad) mov xchg out div (bad) repz stc xlat popfq out iret lahf movsl repnz sub (bad) sub (bad) pushfq mov out popfq testl xchg rol rex.WRB icebp lods mov cli setno std ss or ja cld jrcxz ds int3 cli xor fisub xor ja out not lret rcr dec cld outsl cs std pushq ss clc (bad) pop icebp (bad) (bad) lret divl (bad) sub iret mov sbb mov mov rex.RXB xchg rex.WX out mov and adc (bad) xchg shr cmc mov (bad) (bad) iret sbb mov sbb rex bnd scas jae out (bad) or xchg movabs jmpq iret cmp add cwtl rex.RB mov repz popfq sub rclb (bad) ror or int lock retq fidivr loop (bad) test pop faddp fidivl jmp mov sub iret xchg jg mov (bad) fmuls sbb addr32 push jg xor std ja mov outsb scas lret popfq ja (bad) xchg cltd cwtl (bad) xchg xchg xchg jmp xchg xchg nop xchg xchg mov fwait (bad) xchg addl mov mov scas lods lods movabs mov xlat (bad) (bad) ficoml (bad) (bad) sub xchg rcl (bad) (bad) int retq lret enterq (bad) fcmovnb xchg rol (bad) std cld repz xchg stc clc out div hlt lret repnz icebp lock (bad) adcl sti loop loopne (bad) mov rex.WRX shrd movabs repnz push fldcw mov xchg mov adc sbb repz (bad) or rex.RXB sti rclb out int test cmp (bad) mov xor mov xor add fsubrp cwtl add (bad) leaveq repz stc cmp repnz sbb sub repz movabs (bad) rex.WRXB mov test in mov retq mull push rex.RX int cli add cmp (bad) sbb jmpq xchg enterq int mov mov fmul test mov xchg mov hlt (bad) cmp add in cmc (bad) mov mov rex.XB mov out outsl shrb data16 (bad) fldt scas sbb loope push add cli cld add out (bad) decb mov icebp (bad) xor ja cltd frstor fstpl xchg mov addr32 lock cli cli retq xchg movabs mov (bad) mov xor fmul sub add (bad) mov pop push cli adc lods fmull retq (bad) (bad) enterq cmc out jb repz mov (bad) lahf add xlat sbb repz iret or mov (bad) jmp repnz test rex jne loopne fucom js xor (bad) icebp out stos (bad) mov jmpq add add rex.WRX sub rol mov sub (bad) add pop fstl sbb repnz cmp jno mov xchg sub xchg idivl xor mov (bad) outsb test push repnz in rorl mov notl xlat iret cmc xor (bad) insl and divl lret xlat mov or in add imulb (bad) lods xchg cmpsb sub jb mov repnz xchg lahf cmc (bad) rex.W outsb mov (bad) rex.WRB imull divb icebp fisubrl jmp (bad) jge and movabs push rex.RX rex.WXB sbb (bad) fcomp movsl andl xchg xchg in mov lea jae out rex.RXB rex.WB adc adc xchg fwait in (bad) cmpsb sbbl mov rex.RXB rex.WR mov mov out (bad) in in rex.WXB jnp fistp mov jnp mov xchg leaveq (bad) jae imul (bad) xchg rex.R sub addr32 xchg adc mov popfq push popfq mov clc mov repnz rcrb gs hlt (bad) popfq callq (bad) out stc fisubrl jns mov out xor (bad) data16 mov xchg cmp jae sti adc (bad) nop mov (bad) adc (bad) insl or and pushfq in rex.XB mov (bad) sbb pushfq xchg sbb outsl insl movabs or fmull mov push xor pop test scas lods mov pop jrcxz cmpsb clc popfq (bad) mov cmp (bad) outsb mov popfq mov lahf iret mov rex.WRX xlat mov popfq repz mov mov rex.X out jne sahf popfq int sahf push test mov rex.WRXB (bad) mov adc js out rcrl cmp add nop xchg (bad) (bad) sbb sbb movhps adc (bad) (bad) or or incl add add (bad) ds cmp (bad) ss xor (bad) cs sub (bad) es and push pop pop pop push pop xchg pop pop rex.WRXB push push stos push xchg push push rex.RXB rex.WRX rex.WRB rex.WR rex.XB rex.WX rex.WB rex.W rex.RX rex.RB rex.R rex.X rex.B rex jge jae xchg jns outsl jbe je jb jno outsb insl insb movslq imul (bad) mov retq add rex.WRB cmp rex.WRX mov cmp retq fdiv repnz cmpsb cli jrcxz (bad) sar cmc rex.B movsb xor push pushfq ds mov lret pushq idiv in icebp rorb fs or (bad) mov out cmpl jp mov retq out sbb imull outsl mov xor mulb cli addr32 (bad) clc sbb cmc mov icebp jbe cli add rex.WB add icebp std jge cmp pop jp test (bad) std (bad) (bad) mov ds mov bswap repnz scas cli jle rex cmc mov stc xchg rex.WRX ds sub rex.RB mull (bad) add cmpsl mov shlb (bad) mov rex.X cmc in int je cmpsl sbb retq or (bad) (bad) ds mov nop xor stos scas jnp movsb in and mov fldenv rex.WRB lret xchg jmpq std (bad) adc scas (bad) int retq (bad) (bad) jg int mov (bad) repz in jno jl mov fstpt xchg repnz ror fimul (bad) (bad) cmpsb out imulb add repz in cmpsb movsb rex.W push add xor or shr or rex cli adc mov and (bad) and push movsb ss (bad) (bad) and pop repnz (bad) pop rex.RB outsb xor scas (bad) lock sbbl jg xor sti xchg mov movabs mov mov (bad) sti pop out (bad) rex.RX mul setbe (bad) rorb mov mov movabs mov ror out shrl mov adc mov push lods pop fldenv xchg pop (bad) jne mov sbb in mov xchg movabs iret in pushfq sbb mov mov out dec sbb cmpsl fsubp (bad) mov cmp (bad) add add lahf mov (bad) and out (bad) rex.WRXB jae in lahf cmpsb cmpsl fwait mov fadds cli vpmacsww test xchg (bad) std sub pop jne fsubs addr32 rex.WXB rex.WRXB jae in (bad) cmpsb rex.XB fwait rex.RXB stos mov (bad) push lods xchg (bad) cmp mov (bad) jae in (bad) cmpsb sbb mov out (bad) rex.WRXB adc fwait jrcxz fsub mov repz in iret (bad) (bad) xlat fwait cmpsl adc jg (bad) packuswb rex.RXB (bad) cmpsb (bad) fwait out fadd mov ja std push cmpsb lcall mov iret jae in andl mov (bad) jae in xlat cmpsb xchg rex.WRXB (bad) rex.WRXB xlat in mov ficoml xchg outsl jp xchg movq cmpsl xorb xchg lock add sbb mov (bad) clc (bad) cmpsb xlat in pushq decb and push xchg sub or xchg lret mov sbb lret lock (bad) imul mov mov adc movabs in mov and in sbb mov (bad) in lret fs ficompl ds cmpsl sub clc insb test mov (bad) xchg rex.RX and cld in or mov add (bad) in xchg pop (bad) sbb or cmp cli xchg movabs xchg sub fldcw (bad) in cmp std outsl mov adc mov xchg and push clc montmul cmpsb movl push xchg cld mov scas (bad) repnz xchg jns lret xchg cmpsl repz add or pop pop sbb cli cmp mov xchg leaveq in jg cld (bad) (bad) addl cmc lahf add rex.WXB out lret mov rex.WRB pushq (bad) fdivrl lret jrcxz pushq or mov mov cli xchg std (bad) jno rex.WRX (bad) (bad) fwait mov out gs in fcoml leaveq (bad) rex in icebp stc movabs out in or cli and fistpl jg xchg scas adc outsb in shlb shll mov mov jg lret mov and stos pushq cli jg sahf out jrcxz lock (bad) movabs jmpq fld int xchg out prefetcht2 xchg (bad) cmp ds xchg jge mov out mov rex.WRXB jg in scas cmc add rex.XB in mov and std xor sub adc rex.WRX addr32 sbb cmp outsl fcoms xchg rex.X cwtl (bad) outsl xor int3 and enterq in and fadds fdivrl movabs out lock jg (bad) xchg imul rex.WRX test xor (bad) fdivrl mov and pop fcmovbe lret iret sti cmpsl adc mov fiadd fstpl enterq fsubl fcomps enterq maxps iret int3 jmp adc leaveq rex.WRXB (bad) (bad) callq (bad) ds rcll insb jge xchg jmp sbb mov jg scas (bad) (bad) fildl insl rol lods ja imul xchg (bad) mov xchg fmuls (bad) (bad) (bad) xchg adc cmp mov iret xchg push lahf out fcmovu sbb mov fst mov xchg xlat xchg pop outsb xchg (bad) rclb add mov rex.WRXB ror jmp xor lock mov (bad) int3 iret (bad) mov (bad) rex.WRX adc lods jg imul xchg fldpi rex.RXB fdivrl xchg lods (bad) mov shl sbb mov xchg repz xlat rex.WRXB mov sbb jg lret mov sbb sbb cmpl jle jo notl stos jo rex.WRXB (bad) add xchg fstpl rex.RXB out addr32 (bad) incb xor shld lock fildll xchg leaveq (bad) (bad) mov ja xrelease (bad) xchg lods cmpsl fidivl jle fcompp jmp adc (bad) (bad) pop mov std addr32 int3 (bad) xchg rex.RB jno rcrl (bad) lret and xchg adc lcall movsl (bad) mov pushfq jmp loope (bad) sbb fadd cltd fimul idivl ss xchg fdivr imul rep callq (bad) pop scas lret in jnp push (bad) icebp pop (bad) mov xchg enterq out cld fisub lock (bad) xor adcl ja rex.WR pop (bad) xor jge,pt movsl rex.WRXB mov (bad) jno pop sub (bad) stc ds shrl xchg xlat sbb push (bad) jmp mov pushfq in outsl fisubrl movsb jg cmpsl push pop pop (bad) rex.RXB adc (bad) leaveq sbb and jns sub and int3 rex.WRXB mov (bad) lret ffreep xchg xchg repnz lahf int3 (bad) iret movabs cmpsl leaveq rex.RXB add (bad) int3 mov fimul outsb int (bad) sahf push (bad) lahf lahf mov imul outsb push cld xchg adc mov mov rcl fwait (bad) psubusw xlat lahf popfq adc mov fincstp mov scas mov xchg xchg add scas mov cmp test test cli xchg lret mov lahf (bad) mov lea enterq movabs iret repnz clc mov retq add mov (bad) scas sub cmp fbstp repz (bad) out repz sbb out cli mov andl pop fst mov jg repz mov cmp int3 fstpl mov (bad) and and (bad) mov fsubrs adc xchg fcomps loop mov cmpsl mov mov callq mov ficomp mov (bad) (bad) ds mov mov rex.WRX addr32 test in sbb rex.WRX movsl pop movslq je leaveq xor and movslq int cs xor movslq (bad) (bad) orl (bad) fmulp cwtl (bad) out mov (bad) lods xchg mov movabs cs cs (bad) pop fsubp or outsb pop rex.XB stc and adc test jp and lock mov (bad) mov pop jns cmpsb int3 shl or stos repnz test (bad) mov and pop (bad) (bad) fcmove fsubs (bad) out enterq rex.RXB rex.WB outsl jmp and hlt loop fwait cmpsl fistpll pop in (bad) or out mov sbb sarl (bad) mov mov retq push pop enterq sub (bad) and rex.RX fwait (bad) (bad) and jmpq rex.WRXB repnz std and movd sbb (bad) stc test pop mov movabs repnz rep rex.WB mov retq jb outsb in movabs pop out retq (bad) and movsb xorb xor cmp cld lret iret repnz out mov add nop mov adc repz stos fmul lret jmpq js mov jbe (bad) mov out rex.B (bad) lret lods (bad) pushfq (bad) mov (bad) mov test in sbbl rex.RXB pushfq adc fcomip (bad) (bad) fdivr add rex.XB out vpxor fwait (bad) int fstl icebp lea fwait mov mov cli sub pop jmpq lahf mov lods (bad) jrcxz mov xor (bad) add mov sbb (bad) shl rex.RXB in or out sbb iret in pop sub fnstenv (bad) movabs scas lret cmpl movslq adc rex.XB test pmullw add rex.WRX rex.WRXB lock (bad) (bad) es test cmp (bad) mov sbb mov add jno icebp jp xchg cmc cmp divl retq mov add sahf cmc sbb pop or and (bad) mov iret or (bad) rex.RB jge jrcxz (bad) movabs or out mov int3 rex.WXB gs or scas subl in fs push (bad) xor add xchg out mov mov xlat sahf mov in cmc (bad) fmulp out or rcl pop cli xchg and retq (bad) movabs rorb loope ror in jg (bad) sub loope xchg orl rex.RX mov faddp lret rex.WX in sub subl idivb xlat sub (bad) xchg out ficoml cs fisubl jbe or xlat mov (bad) push add mov cli cs (bad) movabs movabs jbe (bad) adc fsubrp mov fmull cld add cmp pop mov hlt xor (bad) cmpsl sub (bad) (bad) fadd or in movabs mov fdivr (bad) mov rex.R rex.XB repnz rex.WB mov xorl and (bad) cmc (bad) (bad) rex.WR test shl fstpl (bad) xor and add xor mov sub rex.WRXB (bad) (bad) faddp (bad) mov loope push int imul rex.RB imul mov jge shlb rcll (bad) outsl rex.WXB sbb rcl repnz jrcxz push rcl in cli mov cmp add cmp mov (bad) (bad) in enterq or mov in rex.RXB xchg cmc mov flds popfq es in jno add push ja movsl and (bad) stos adc lret callq cmpsb mov mov imul mov fdiv test sub (bad) (bad) fldl outsl fsts mov mov int mov mov movabs leaveq rex rex.WRXB or rex.RX mov sbb sarb scas pop (bad) in fisttp rex.XB jae push test (bad) stc xchg sub std add cld mov rorl out fbstp es or xchg push (bad) lea loope mov mov (bad) rex.WXB in (bad) movabs flds sub pop (bad) movsl xchg cli cmp out imulb jg int3 (bad) rex.W xor divb cld mov (bad) loop pop (bad) add stc ss std insb test ja test cmpsb cmp xchg push jb xor or stc es in mov ffreep ds out jrcxz out ficoml push push out insb xchg pushfq sar fild (bad) xor (bad) fs clc and rex.W rex.WX imulb movabs loop cmp sub mov stc rex.WXB and in rex.WRXB sarb sub xor mov mov and xchg cmp fist rex.WRXB fisubrl push test fisubr (bad) outsb mov (bad) and xchg ror retq or test cli jle jg iret jnp jrcxz add in xor cmpsl (bad) movabs add mov (bad) retq add out or (bad) int mov scas add pushfq int3 adc retq rex.RX movabs retq xor shrl xor repz jno or rcll out test jmpq jne (bad) rex.RB or (bad) and and shr adc mov xchg in add (bad) (bad) cld sarl fildl icebp pop cmp rcrl subl adc movabs or sbb lahf push jae and hlt jns and repz mov xchg push repz loope (bad) outsl push pushq (bad) jno rex.WRX jns (bad) test (bad) scas decb or mov movsl mulb cmp out rep (bad) or gs retq mov mov (bad) jg rep cmpsb xchg cmp (bad) (bad) rcr (bad) in rex.WXB rex.B (bad) cld hlt sub shll sbb in add fdivrs pop hlt (bad) (bad) mov xchg mov and adc fidivr faddl lret (bad) fwait (bad) callq ss hlt or (bad) fdivrs ds (bad) out jrcxz (bad) mov mov test jb movslq mov or mov retq movabs sbbl (bad) jae in (bad) cmpsb out (bad) adc scas mov push (bad) in push movsb rex.WXB (bad) cmpsb cmpsl fwait (bad) adc cld (bad) (bad) rex.WRXB jge xchg fsubr mov addr32 std (bad) cmpsb push fwait (bad) adc (bad) mov lahf jae out pop xchg jg adc (bad) mov mov (bad) out outsl xchg jg adc adc xlat mov push rex.WRXB (bad) cmpsb out xlat adc mov addr32 cmovg in out xlat fwait xchg mov rex.WRXB out in iret cmpsb xchg push (bad) decl jae in xlat cmpsb jg (bad) adc imul fdivs (bad) jae in (bad) out mov mov outsl cltd push (bad) in fbld fmuls (bad) (bad) (bad) rex.WRXB in shll xchg mov fbstp in lahf cmpsb jg pop fstps lahf jno push outsl popfq std rex.RXB (bad) fwait notl fdivs push (bad) (bad) rex.WRXB lahf in (bad) cmpsb (bad) pop lods cmpsl sahf mov xlat out sbb mov mov cld stos paddsb jp scas fisttp lea jb movq mov xchg (bad) rclb imul xcrypt-ecb cmpsl (bad) mov mov scas add push mov fwait insb sub lahf stos or lods mov mov std xor or stos cmp movsl movsb (bad) movabs mov fwait movabs pop movabs int3 (bad) (bad) xchg lods cmp cmpsl (bad) mov in std out xchg ficoml lahf sbb fdivp retq std movsb xchg test lahf fwait loope sahf xchg add bnd sub lahf xchg xchg repnz imul retq xchg xchg shrl (bad) imul xchg and addr32 cs scas imul xorl mov jo rex.RXB mov movsb and push divb cwtl pop in (bad) jle retq mov (bad) rex.WRX mov push (bad) (bad) fldl2e pushfq movabs pop xchg movabs iret rex.WRX hlt jrcxz and (bad) sahf (bad) sbb out lahf fdivl jns xchg adc icebp cmp mov push pop rex adc push incb mov (bad) (bad) rex.WRX std mov lods (bad) pop pop cmp stos fbstp (bad) lret test rex.B lock mov (bad) in icebp movd add iret sbb (bad) retq fsubrl (bad) orl mov pop (bad) jmpq retq insl jns test adc scas rex.WR sahf jp cld (bad) mov cmp and loopne mov fstl push rcrl (bad) div cmp xchg cmp mov fnstcw out rex.WRX out shrb pushq iret testb push add jrcxz xor testb out out sub outsb mov out lret stos mov mov int in add vmwrite fistl outsb lahf jae add addl xor scas rex.RXB mov add cmp pmullw (bad) subl mov rorb sahf scas (bad) lods repnz test fisubrl xor in mov (bad) rex.R shl adc repz jg insb cmpsb cmp in (bad) jg (bad) fildll or (bad) (bad) stos pushfq fiadd cmpsl adc out mov push add in and (bad) adc stos (bad) sbb xor scas and jnp rex.X imul and xor jb rex mov cmp and sahf cli mov sbb mov add roll movsl fcmovnbe callq rcl sbb mov xchg clc iret mov or callq mov lods xchg (bad) mov xchg xchg jb rex.WRB rdpmc mov sbb imull movabs std jl vmovdqa mov orl clc (bad) push sub (bad) and and xor sbb or shl cmp int3 mov jo in (bad) and ss rolb fisttpl scas shlb sub adcl imul rcrl out cmp mov mov jp mov cmpsl out dec jmpq ror fiadd fsubr divb not (bad) rex.WX addr32 xchg fcmovnbe adc jg enterq imul cmp adc mov cmpsl cmc xchg mov sub lock movslq (bad) mov mov ss mov (bad) xor stos (bad) shrb xchg (bad) rcl leaveq jmp rcl insb sahf loop mov rex.WRB jmpq movsb loopne xchg or (bad) xlat (bad) mov int3 jnp xchg fmul mov (bad) and pop shrb (bad) sarb jnp (bad) fild mov shrl lock cwtl (bad) loop retq movsl scas jg (bad) cld mov repz in adc xchg fucom test callq (bad) repz std iret retq fstpt pushq sbb pop rex.WRXB rcr rex.WRX push fwait (bad) jrcxz sub imul mov callq (bad) mov sub out mov movabs mov ds clc (bad) jrcxz mov adc mov mov ja mov xacquire (bad) and push (bad) add (bad) addr32 out rex.WRB pushfq es mov insl rex.WB adc in xchg int movabs (bad) adc add lods cwtl add stc cmpsb xchg movabs xbeginq rcll jae stos insb (bad) rex.WXB (bad) in retq lods scas (bad) mov mov (bad) pop or sub xchg jb test mull (bad) (bad) xor movslq test rex.RXB fstl (bad) scas leaveq negb int3 add rex.WXB rex.WRXB cmp rex.WXB repnz xor fsubrp (bad) sarb (bad) mov cmp xchg xchg jmpq fstpl movsl (bad) and rol loop scas mov or out add (bad) rex.RXB mov enterq movabs retq iret clc leaveq or rex.WR jbe (bad) or lahf or jae xor (bad) and (bad) sbb leaveq rex.XB imul pop xchg xchg mov mov and (bad) lret mov or out (bad) fsubrl fcmovnb int3 mov repnz xor mov jne,pt push loope mov in cmp lods mov test (bad) (bad) rex.WRXB mov sbb test (bad) rex.RX sub sti xchg xchg scas lods test sub jg mov fdivp xlat sarb cli rex.R stc sub andl (bad) mov movsl pop out add jg sub xchg cmpl imul lret mov fdivl out sti rcrl movabs (bad) int3 add xchg jg fsubrs negb adc cld (bad) movslq fimull xchg sbb mov and fwait jne cltd rolb int3 sbb (bad) mov imul push popfq shrb mov xor lods cmpl adc sub push nop out callq mov mov lods mov jmpq sub (bad) (bad) add fnstsw rex rex.RB jge rex.RXB cs mov sbb sbbl xor xchg idivb int3 scas xchg mov xor sar pushfq int3 out or rex.RX nop sub clc faddl jne push rex.WB ja cmpl rcrb adc add (bad) int3 mov pushq or lahf jns (bad) out xchg mov fidivrl iret rex.WRXB stos mov add mov (bad) in mov (bad) (bad) jns mov jg add xchg xchg (bad) (bad) negl mov jge movsl cmpsl xlat (bad) xchg jl ja (bad) sbb push (bad) (bad) loope mov (bad) ja xlat cmp pop ja mov (bad) loope mov adc xor cmpsl fbstp rex.XB mov (bad) rex.WRXB (bad) (bad) scas rex.RXB fwait push adc rex.RXB push rex.RXB rex.XB std cmovl jg vphaddwq and es (bad) mov sub cmpsl cmovge (bad) rex.XB jrcxz lods (bad) cmpsb xlat sub enterq lods scas mov sub rex.WRXB subb loopne fwait movabs lea (bad) (bad) mov fcom shlb xchg cmp nop insb and movabs addb xchg xchg add mov or fwait adc (bad) and adc mov (bad) mov fwait xlat sbb popfq stc sbb mov sbb sbb add retq pop xchg in mov xchg rex.R (bad) jp xchg or mov xchg adc fdivl xor adc (bad) ds iret scas out orl callq push scas xchg mov rex.RXB mov (bad) mov jns and jg sti xor iret iret rex.W rex.RX subl rcl (bad) mov add lahf int3 (bad) mov icebp out scas lahf (bad) sbb adc (bad) out pop (bad) jo out (bad) addl fstpl add popfq or cmp insl fimull lretw js out mov orl mov jl int cld rex.RB and enterq subl mov outsl mov fucomp out xchg movabs sub cmp adc sub jg faddl movabs (bad) fiadd mov mov (bad) out jbe test (bad) scas test pop sahf test rex.WRXB scas mov lock sahf mov iret shrb xchg fsub add sbb fildll jrcxz,pt iret jge lahf sbb stos pop jmpq (bad) movabs jrcxz add sbb xor rex.B test push xchg mov (bad) stc popfq sti cmp ds (bad) lahf jbe pushq cmp movsl lret fwait insb jae pop xor rex.RB fwait adc sub fwait pop or out out ja (bad) fnstcw add (bad) cli mov rex.RXB mov mov rex.RX (bad) (bad) mov xchg mov mov sbb (bad) sti xor idivb mov mov sbb or data16 jmpq sbb and out sbb adc out rorl push or rex.RXB cmp sbb iret mov add mov jb xor callq fldcw int leaveq adc mov mov subb sbb or rex.WRX xchg (bad) rex.RXB jmpq cmp out cmp mov adcl jg (bad) (bad) mov pop cli mov lods add rorb (bad) mov (bad) (bad) xor add jae mov fimull fimul mov fisubrl rex.XB mov (bad) mov sub (bad) mov xchg mov rex mov adc fimul fisubl outsb loopne fcoms xchg rex mov fimul sti adc (bad) mov stos (bad) (bad) rex.X out add xor fiadd insl mov sti adc (bad) mov mov out mov and add test mov sahf and mov push out rex.WRB mov (bad) fiadd insl mov sti adc (bad) mov mov rex.R repz xchg xchg cmp ficom jno jbe mov cmp pop stos xchg xchg rex.WB data16 mov adc sti (bad) adc sarb clc sub es xchg (bad) iret xchg sub (bad) and mov sti adc sarb jge (bad) sti adc sarb insl mov sti adc sarb mov or mov mov sti rex.X fidiv mov cwtl outsb mov mov sub (bad) loopne jae jge xchg (bad) push sahf fidivrl cmpsb push xchg push shrb adc loopne and mov sti rex.X mov insb jrcxz adc mov push outsb rex.WRB mov shrb (bad) sti rex.X mov pop jp mov cli xchg sub scas jle jl adc sbb (bad) divb push cmc rex.WR out lock jrcxz scas test (bad) (bad) insb jrcxz out mov xor fbld (bad) push mov outsb (bad) data16 and (bad) fcmove (bad) gs insl rex rex mov data16 pop insl mov loopne jnp mov pop insl mov retq add mov jrcxz push (bad) mov sahf mov mov mov cmc sub (bad) (bad) adc out xchg jp jl xchg rex.B xchg adc jl xchg rex.R jp mov mov (bad) mov repz (bad) mov pop imul rex.WRXB insl mov sti adc sarb imul sub leaveq mov test xchg adc jl xchg xchg stc mov rex.WRB data16 fisubrl (bad) sti adc lret clc (bad) adc cs cmp (bad) push test lods and sub insl mov sti adc sarb sbb icebp mov (bad) repnz xchg adc mov fisubl mov mov and insl mov fsubs loope xchg mov lret mov mov orw mov sti adc jle mov mov cmp (bad) sub add mov xchg in in jns add (bad) mov cmp and (bad) test popfq sub (bad) (bad) or iret rex.WB rex.WRXB (bad) addl xchg fcmovbe es sub (bad) je (bad) jae sbb repz mov mov rex.WXB push mov or imull clc scas (bad) (bad) cmc push (bad) (bad) (bad) es mov mov out rex.WX (bad) insb xlat cmp rex.WRB in sbb mov (bad) outsl xor mov adc lock jrcxz cmp loop xchg (bad) (bad) mov data16 (bad) (bad) or fwait retq lock int rex.R addr32 movslq mulb xor sbb cmpsl rex.WRB and xchg (bad) mov mov out addr32 mov stc mov es outsb jmp subl (bad) mov (bad) cmp rcrb testl lods mov or (bad) and xor rex.WX outsb (bad) sar rcrl stos movabs (bad) mov mov cmpsb (bad) xchg stos cmpsl mov (bad) rex.RXB push lods mov push lahf cmpsb fldl mov (bad) cmpsl pop shrl push rex cli (bad) (bad) movslq mov cmpsl pop fisubrl std xor lea fidivr rex.XB xor jbe repnz rex.RB (bad) cwtl int fstpl cmc mov jrcxz ror loope mov scas shrb loopne (bad) lea std cmc rex.WRB loopne and movabs adc (bad) mov clc adc sub (bad) and int3 rex.RX (bad) rcll int xchg leaveq fs rex.WXB test mov mov std lods scas (bad) cwtl callq fidiv cmp jno mov bswap rex.RXB flds imul addps rex.R jne idivl movsl (bad) xchg cmp mov out and cmpsl int3 push mov xchg sub xchg jnp mov mov and rex.RXB xchg in ja (bad) (bad) in scas mov vcvttss2si sbb and push test mov add movabs sti add mov int3 rex.WXB or xchg stos leaveq (bad) (bad) popfq out cld mov imul repz clc lahf (bad) mov push mov xchg int3 lods add jp seto (bad) fisub mov xchg movabs jne mov frstor sbb adc xrelease and (bad) (bad) addl in (bad) (bad) xchg xchg rex.R and ljmp mov nop xchg fiadd or xor ror ror (bad) sub test (bad) insl mov rex.XB rex.WRB sahf jnp or mov mov mov rcll xchg movsl fldl ss pop iret out (bad) lret sarl xor movslq mov fdivl sar fwait (bad) loope (bad) mov jns adc rex.WRXB jp fs (bad) int stos adc mov lret mov (bad) sbb jnp movabs (bad) rex.W jmp movsl (bad) and jnp imul jbe decb callq ds movsl adc (bad) pop and fmull sti mov roll scas movsl ds repnz (bad) outsb lock scas repz test lods test popfq in cld and pop xchg adc and in ja (bad) xchg (bad) jb imul xchg cmp rex.X movslq cmpsl in jg (bad) xor rex.WRXB gs sub cmp cwtl mov (bad) (bad) jbe retq repz mov xchg xlat (bad) (bad) sub rex.WRXB (bad) movsl fsubrs mov pushfq add sbb mov insb (bad) or mov movabs lods divl sti in mov nop scas mov jg (bad) lods in lods cmp pop repnz rcll movabs push (bad) lahf push or in cmp hlt mov ds shl movabs (bad) mov cmp int xchg in cld push (bad) and stc rex.WRXB jge stos cmp rex.WRX (bad) repnz or mul mov int3 in xor mov sbb rex.WRB rcl mov addr32 or push mov xor cs sti xor cmp jl (bad) (bad) test (bad) rex.WRX (bad) out xor (bad) mov in sbbl mov cmpl pop rex mulb mov movabs sbb retq (bad) (bad) mov pop xor movabs or add in pop pushq (bad) data16 mov (bad) enterq rex.WRX movabs lods mov ss (bad) or xlat (bad) scas lahf xor jmpq out (bad) mulb sub cmp (bad) stc outsl pushq movslq adc xor fxtract (bad) shrb movabs sub mov jae mov mov iret jmpq test jae test cmpsl insb out icebp mov adc mov in lods jge stos push or lahf push sub (bad) rex.XB in rorl movabs (bad) cld cli push test popq fdivs imulb rex jg (bad) lret jle movb fist mov fwait push out enterq mov jl (bad) cmp xchg retq rclb test imul cmp mov xchg callq faddl lods mov or (bad) rorl (bad) out push sarl and out add (bad) fldenv (bad) or rex.RXB lock cmp rex.RB jo xor mov fimul mov xchg sahf pop rex.RXB push data16 and stos xor iret test cmp addr32 xchg rex.WB sub push cmp jbe pop sub icebp sub mov scas mov sbb (bad) rclb lahf es popfq cs rex.WRB imul clc (bad) test rclb addr32 (bad) movslq hlt icebp pushq (bad) (bad) cmp mov test (bad) xchg movabs xchg fs (bad) cmp cmpsl (bad) xchg retq mov mov sub or movabs movabs push sbb mov test es lahf sub or cmc push and hlt ror push (bad) xor jbe sahf mov out stc jmpq js cmp ficoml mov jrcxz fsub xor (bad) sbb fxch mov faddl add sahf outsl movslq (bad) (bad) mov (bad) stc (bad) sti add (bad) movabs orl xor rex.WRB (bad) xor int3 in scas jge lret rex sbb callq cli rex.RXB pushq mov adc (bad) scas cmp (bad) data16 xchg and xor mov mov cmp out sub xor mov retq fcmovnb mov xchg out clc and lahf subb push xchg rex.WRXB rex.WRB (bad) jle jle movabs push or (bad) movabs mov retq adc pop rex.WB or xchg xchg mov fild xor xor sub jp (bad) jrcxz lahf mov movabs (bad) callq (bad) iret test jg rcl rex.XB jrcxz or cmp mov imul movslq adc (bad) out outsl (bad) fcomps movabs (bad) or xchg rcl faddp xchg mov xorl push addr32 out icebp std mov and callq sbb pop ds (bad) fiaddl (bad) rex.RB jp add mov cs or xlat shll mov jmpq loope (bad) in pop popfq cmpsl lods (bad) scas fnsave fsubp movabs fisubrl scas jnp cmpsl movslq add jb notl sar insb (bad) or mov (bad) pop mov mov faddl lahf jp movabs mov repz movsl adc gs mov outsb (bad) repnz (bad) stc sub pushq xchg lods rol push cmpsl rcr movabs sub jle lock icebp (bad) (bad) and mov (bad) (bad) test cwtl mov rcrl mov push idivl push loopne (bad) jp jrcxz adc jg push stc mov fsts adc clc jb (bad) mov shrl xor and rex.WRXB in cmp sbb (bad) xchg push ds mov lret (bad) (bad) mov (bad) sarl out cmpsl retq or push int scas sub jg int3 int loopne int3 sub cmpsl loop fiadd mov mov and movsl int3 insb imul js or jnp and icebp or (bad) (bad) (bad) cmc lods fisubrl mov xor insb sub (bad) cld mov js fildll or sbb rex.R mov mov test (bad) (bad) leaveq adc cmp rex.R cmpb int test movabs sbb (bad) cli movabs outsl mov out mov callq or lods xor push loopne (bad) ror mov vpxor mov hlt (bad) icebp jp jg fld rex.WRXB cli leaveq (bad) jp fidivr jbe test addl fs jne jmpq and fidivrl rex.X addr32 rex.WRX add rex.WRB imul retq mov mov sti add mov mov xchg rex.XB retq and sbb (bad) lods and cmp sub test scas xor mov mov or (bad) mov (bad) lods xchg test iret mov pushq and mov (bad) xor or movabs ss in xchg repnz and mov jp rex.B enterq insl mov (bad) movabs sti insl in callq pushq (bad) (bad) repz (bad) xchg iret in sub mov push (bad) scas add adc or xchg int fisubl fisub out (bad) movabs test push mov xchg int3 add movabs jb cli sbb outsl cmp shr rex.RB jg fsubrl int rcl mov cmpsl mov (bad) rolb (bad) xor idivb fs mov cmp sbb xchg cs (bad) loopne (bad) rolb (bad) or mov cmc rex.WR fcomps cmpb (bad) cwtl xchg cltd xchg xchg (bad) xchg xchg jmp xchg popfq xchg mov nop (bad) rex.RB cltd (bad) (bad) xor fwait xchg adc xchg mov sahf xor xor je imul cmp imul lea mov iret rex.WXB fwait mov (bad) mov (bad) jnp loopne jmp xchg fstl pop lea (bad) jge (bad) rorl lods mov iret in (bad) insl mov (bad) push lea (bad) jne test add movsl mov iret in gs (bad) pop lea (bad) jns mov or (bad) lea (bad) imul mov iret icebp (bad) jno adc lea (bad) (bad) mov (bad) pop lea (bad) jle mov (bad) (bad) (bad) rex.WRX (bad) outsb mov (bad) push lea (bad) jbe xchg (bad) (bad) (bad) rex.RX (bad) mov sbb (bad) pop lea (bad) jp mov or (bad) rex.WX (bad) pushq xchg rcll rclb push lea (bad) jb (bad) roll retq lea (bad) (bad) mov pop outsl sahf push (bad) or repz retq rex.WR rex.WRB retq sub mov retq insb rex.WRB retq adc mov retq push rex.WRB retq xor mov retq je mov retq add mov retq rex.R rex.WRB retq and mov retq fs retq sbb fadd mov mov rex.WRB retq js mov retq or enterq rex.W rex.WRB retq sub callq rex.WRB retq adc rol mov mov mov lock jo mov retq add rol fiaddl mov retq and loopne mov mov mov (bad) cmpsl (bad) out (bad) iret iret (bad) scas mov (bad) lahf (bad) fbstp mov repz jrcxz pushfq sbb sbb fmul pop (bad) mov jl loopne cmp test lea (bad) xchg mov (bad) xchg lea (bad) xchg mov (bad) xchg xchg mov (bad) xchg lea jne loope (bad) mov mov fwait xchg adc xchg rex.WRXB data16 rex.WRXB (bad) fcoms loopne cmp pushfq rorl mov test jae loopne fwait (bad) fadds sbb rex.WXB addl in mov jae sti mov (bad) jg xchg jne (bad) sbb pushfq lahf and movabs fidivrl in adc cmpsl xchg rcrl idivl (bad) mov icebp push fsts adc lods out mov push fistl retq out movabs push (bad) callq enterq movabs sbb cltd add cmpsb or mov xchg fcoms xchg mov (bad) mov mov shll mov iret sbb cmp pop (bad) jl jne sahf and xchg xchg imulb xchg xchg movslq gs adc sbb (bad) pop rex.W jae adc mov sub jmp test pop jg callq cli divl xchg jae lea jp ss ficompl xchg fwait pushfq adc popfq rorl rcrl addr32 lods comiss sar ds mov (bad) jrcxz out popfq (bad) shll (bad) adc push div (bad) (bad) xchg and sbb mov (bad) xchg in (bad) mov pop xchg xchg add xchg xlat sahf or (bad) xchg jno pushfq (bad) xchg (bad) xchg outsl adc xchg out cmp jbe or xchg add (bad) pop movabs or sti loope,pn mov xchg js (bad) and xrelease rex.WXB xchg mov cmc iret out es xchg fisub adc rex.XB test rex.X repnz sub movslq rex.WR sbb dec mov hlt xchg repz std (bad) rex.WXB cli xchg adc rex.RX cltd out cld xchg movabs mov movsb roll (bad) rex.WX out clc cmp mov (bad) sbb xchg cmp rex.XB lret xchg ljmp rex.R nop cmp jl (bad) lods (bad) fildl ficoml rex.WB (bad) movabs (bad) rex.B (bad) jae xchg rex.WRXB rex.RXB movslq xchg mov (bad) or and add popfq scas (bad) xchg setp sub xchg jbe cs lock xchg sub mov movabs cltd xchg out rex.R cmp xchg (bad) sbb subb xchg cltd cmp add push cwtl fbld xchg (bad) xchg or xchg jle xchg xchg cmc loopne movabs (bad) jns lahf (bad) hlt add (bad) xlat fwait (bad) cmpsl cli sbb jle insl jb or test (bad) xchg sbb pop rex.RX xchg cli (bad) jbe lea and jnp (bad) rex.X std (bad) mov mov imul sub mov (bad) mov movsl jrcxz cmp pushfq cmp rex.W xchg push push xor rex.WR cmc jbe fdivrl icebp movabs rex.RB in mov sarl pushfq lods xchg shrb xor nop mov ficomp and mov sub lock xchg rex.XB add (bad) push xchg sar (bad) rex.RX xlat rex.RXB and rex.W pushfq mov rex.RXB fistl and (bad) jb sub add jne xchg jrcxz,pn fmuls xor insl add sbb pop in xchg lea add (bad) pop push xchg jae add or xor add nop addr32 sbb (bad) pop cltd notb push clc cli (bad) cwtl out test hlt icebp jmpq ja rex.WR (bad) xchg rex data16 adc scas sub fwait outsl cmp xlat loope rex.WRX ds pop xchg (bad) lahf int rex loop jns xchg cmp rex.X sub iret rex.RB (bad) sub pushfq ja in fisub adc (bad) ja icebp scas out xchg neg imul test stc cmp rex.WRB lock int callq xchg xchg and mov (bad) lret and sub mov cmc sub xchg cmp pop scas push rex.RXB (bad) xor loope xchg repz insl cld sbb cmc (bad) xchg or popfq ss in xchg movabs mov add and (bad) jge mov in test rex.WRB jp jo sti mov rex.XB sbb jge outsb pop sub rex.X icebp sbb adcb and (bad) mov cmpsb (bad) lock (bad) out xchg nop (bad) push movsb cltd stc fistl cli adc xor pop out mov lret mov jge (bad) xchg jno xchg rex.W sbb rcll (bad) mov mov rex.RXB not xchg rex.R rex.WRX stc xchg rex cwtl movsb (bad) test ja ss add sub sub adc or sub cmp mov test xchg rex.W mov rex.B and xchg rex.RX (bad) (bad) xchg (bad) push popfq test retq xchg lock and pop (bad) rex vpshufhw (bad) lret (bad) pop (bad) xchg lcall xchg callq (bad) xor cwtl sbbb (bad) rcr movsb sbb iret pushfq test nop lahf pushfq xchg mov outsl mov xchg (bad) cmp (bad) js xchg movsb xlat out enterq pop xchg or mov scas cmp sub mov rex.WX xchg push iret pop (bad) adc jno xchg xor jb or nop jge rex.W rex.WX cmp and xchg or adc xchg stc iret rex.WRX lods xchg xchg pop and cmp or xchg sahf callq xor addl sbb (bad) fistl gs scas in cld mov add (bad) int3 data16 xchg mov test in rex.R push xchg cmp test add sahf loope cld push pushq incl and add xchg movabs outsl cli xchg and push add or sahf loopne (bad) (bad) jrcxz cmc mov cmp xchg mov or xor outsb pushfq sarb jae (bad) xchg xchg lahf popfq xchg xchg outsl scas clc jg mov out out cwtl add adc je fist lods (bad) movabs rcr and and add adc rex.RXB addr32 rex.B sahf (bad) sub and ja test (bad) xchg mov cld cmpsl mov mov mov out xchg push mov xchg test (bad) int3 cmpsl rolb mov test (bad) pushfq (bad) jl fbld sub lahf cwtl cmpb push (bad) movsb push loopne rex.WRXB lock add adc addr32 xchg pop je push xchg (bad) rex.RXB rex.WRB shlb jrcxz fbld xchg fstl fist xchg fisttpl push mov adc and (bad) xchg iret cld xchg mov xlat (bad) callq test movsb rex.RX mov movsl iret jmp rclb popfq xchg xchg fstl iret iret (bad) (bad) loope int3 push out (bad) jo rex.WRXB vmread push xlat mov xlat popq xlat (bad) mov lock (bad) jg and rcll xchg (bad) (bad) movsl or iret rex.WRB adcb ror push rcll pop lea rex.WRXB movabs sub xchg int3 jge (bad) xchg jge mov insl mov lock imul add sbb add xchg out xchg (bad) (bad) xchg xchg int3 xchg rex.WRB xchg leaveq xchg cmp add sub (bad) movsl incb mov mov mov packuswb out pushfq (bad) adc pushfq xchg cmova fs mov adc loope lret sahf callq mov (bad) negl add adc ja lahf and notb sahf (bad) add xchg mov mov fucomip mov mov add adc xchg rex.X imull pop jg xor mov adc (bad) loop xlat xchg mov movslq (bad) insl cmp mov mov lock xchg sti add data16 jb movabs lahf mov xchg movslq cld ror sub sub push and out xchg (bad) jg movabs shrb add (bad) adc xchg mov (bad) xchg loopne cmpsl xchg fmuls jg (bad) negl cld cli xchg pop sbb jns mov mov xchg fbld add xchg or xlat (bad) (bad) (bad) (bad) out xchg popfq fcompl sbb sbb xchg (bad) sahf imul jp (bad) xchg scas mov jmpq xchg rex.WRXB leaveq jns or test (bad) sahf pushq test idivl sahf xor pushfq xchg adc jnp jae xchg fnstenv movabs enterq adc (bad) xchg jae and xchg fcomp (bad) addr32 (bad) fwait callq xor hlt sub pop xchg mov (bad) jnp xchg in mov (bad) cmpsl xlat (bad) (bad) mov (bad) cwtl ficom fstpl cmc fmull scas or (bad) (bad) xchg pop xor sarb ja fwait xchg popq rolb fild (bad) stos jp sbb xlat xchg mov loop repnz push (bad) in xlat movslq xchg stos jg mov movsb mov fist out mov (bad) pop xor (bad) jnp rolb lret movabs fistpll sti movabs (bad) adc mov lret rex.XB xchg mov rclb rex.RXB or repz loopne mov fsubl xchg mov fwait (bad) jmpq xchg movsl js xorb rex.RB (bad) xor xchg add adc (bad) cmp (bad) ds sbb mov cmp imul xchg rex.RXB xchg add imul cmp (bad) xchg xchg add rex.XB popfq add (bad) (bad) and xchg mov cwtl xchg mov rex.WR sbb xchg xor and fxch loopne mov psrlw sbb lret xchg fdiv loopne in adc imul pushq jp fdivs push out sbb mov and adcb movabs stos fidivr (bad) mov xchg out fdivrs retq (bad) ja (bad) xchg xchg (bad) outsb movabs xchg jbe mov (bad) cmp push xchg sahf (bad) pushq cmp (bad) xchg pop adc rex.RXB rex.RX test cmpsl popq xchg imull push lods (bad) xchg xchg or sbb test (bad) add ja or pop in movslq adc sahf rex.WB rcrb in fisub movabs pushfq fldt nop outsl loopne movsl cwtl iret test (bad) fmuls repz jmpq (bad) iret mov lahf cwtl jrcxz or push (bad) in callq int shl shlb (bad) cmp rex.RB rex.WR xchg jg xchg sahf (bad) mov pushq mov test jge rex.RXB xchg mov psubq pushfq ja mov jl mov pop rex.WXB jae fwait pop xchg xchg jmp scas shlb rex.RXB cwtl data16 mov fsubs xchg xchg xchg test mov add and rex.WRXB and lods jl jne sbb add sbb xor (bad) pushq pop data16 and rex.RXB movsl (bad) lods (bad) xor push xchg or xor loopne mov rex.WX mov jmpq rex.RB ja xorl sub callq shll mov (bad) and xlat leaveq enterq adc pop nop retq insl xlat adc xor push xchg insb movsb mov out pushfq sub (bad) add cwtl fildll (bad) xor push leaveq (bad) sahf es jne (bad) jle ja cwtl fildl (bad) mov ja (bad) mov sbb loop and outsl pushfq popfq out loope jl push push xchg (bad) movabs lods xchg fwait (bad) mov (bad) (bad) (bad) (bad) pop fsubr pand pop out xchg add (bad) push (bad) xchg jge mov pop and lock outsl rex bnd push in xchg es xchg cmpsl (bad) (bad) rex.WX sahf loop adc rex.RXB rex.W mov (bad) fdivrl cmp scas lahf pushq (bad) rex.WR push mov movabs jbe imul fsts cwtl sbb xor shlb rclb (bad) hlt rex.WR pop fcmovne pop sub rex.XB fcoms mov imul and out clc mov fs cmp repz jge or push lret jne (bad) (bad) out cmpsl pushfq add mov jae cs xchg fs popfq pop mov (bad) (bad) add xchg lea jg xchg xchg sti mov mov in (bad) movabs xchg sbb adc xchg (bad) addr32 (bad) xchg je or sahf mov mov pop int xchg std adc xchg movsb (bad) sti stos mov lcall sub xchg (bad) pop mov mov cld xchg (bad) ja andb (bad) rex.WRX push rex.WXB sbb shlb vpmacsdql pushq pop test or loopne pop ror int3 out lahf ja pushfq (bad) sub xchg comiss cmp test retq (bad) xor mov test popfq xchg fdiv insb xchg adc pushfq mov jl ljmp sbb lahf rex.RB xchg xchg movabs mov adc cmpsb shrl imul pop cmp adc mov out (bad) imull ss xchg enterq add mov ja xchg add jg fsubs outsb sti rex.XB rex.WRB imul retq jp pop or sub mov (bad) and cmp int3 rex.X (bad) lret or rolb rex.WRB sbb std popfq xor mov int3 (bad) xchg test push sub out xchg cmp (bad) test adc gs and jge jno push xchg rex.B rex.WRB sbb add xchg rex.WXB jo,pt sub mov xchg rex.W sbb jg xchg pop and cmp mov (bad) xchg es mov rex.RXB rorb jne cmp test movabs pushfq repz push push lea xchg rex.RXB mov xchg xchg data16 xlat or pop xchg lods (bad) adc rex.RX sub (bad) fs (bad) testb repnz pop mov xchg mov rex.R fs fdiv mov mov shlb loopne pushq out rex.RB scas in ss jmp movsb sbb sbb or jno fstpl test cmpsl imul (bad) (bad) pushfq xchg (bad) adc outsl xchg div jp xchg push cwtl in (bad) (bad) (bad) fisubr rex.R mov push rex.RXB stos xchg pop mov sub xchg test pushfq pop out popfq sti push pop xlat rex.X rex.WX pop add rex.WB rex.XB jns xchg int3 (bad) insb mov xchg mov rex.WRXB xchg iret pop sub xchg sub movsb nop (bad) in mov and in xchg lret xchg movslq add mov adc (bad) in insb outsb div adc push xchg sbb sahf ja add (bad) (bad) cmpl (bad) (bad) repnz (bad) xchg out jg sub pop movabs pop mov movabs out xchg or rex.WR outsl (bad) mov mov int3 sbb (bad) xchg (bad) (bad) cmp push movsb in fldt mov mov jmpq fcompl outsl retw std rex.RX xchg cmp ja rex.XB rex fwait pop xchg subl rcll pop cwtl sub movabs scas rolb mov or ds cs sub xchg sahf fdivl jnp negl mov pop mov sbb sets jnp xor (bad) xchg (bad) lods add sahf push (bad) sbb push xor pushq xchg sbb mov jmpq fdivr jne (bad) adcl cltd sbb mov fsts mov cs xchg fwait or rol pushq fistl callq callq adcl pop xor in rex.WRB xchg xchg rex.XB xchg push (bad) mov rex.R in loope popfq fidivr xlat (bad) rex.RXB xchg outsb mov sub pop data16 out xchg outsb roll xor rex.W nop rolb (bad) bswap jnp jae sbb xlat rex.XB leaveq xchg js cmp (bad) pushfq cmp adc xchg andb addr32 add (bad) ss xlat (bad) movsb adc rex.B int3 pop rolb rex.WRXB add sbb cmpsl xchg (bad) add sti xlat enterq xchg or fcoml ficom enterq xchg jmpq add xlat push push pop push rex.B stos rex.WB rex retq lahf hlt rex.WRX xchg popfq xchg (bad) sub std jrcxz xchg (bad) addr32 xchg cmpsl (bad) lock rclb xchg (bad) mov sbb add xchg movabs fldt xchg and divl (bad) popfq xchg adc xchg or rex.WRXB xchg out jbe jae in jno xchg js rex.WR fistl test cmp (bad) divb jmp xor cmp movabs imul lret xchg cmpsl je scas (bad) fdivrp sbb xor lods out adc (bad) ja mov xchg movsb mov test xchg xchg jbe testl or lahf jg add adc out sbb retq jbe mov icebp xlat xchg mov xchg jae rex.RXB ja jno and mov decl (bad) adc xchg movslq cmpsl pop and xor pop pushfq es (bad) mov (bad) xchg xchg adc rex.WRX rex.WB (bad) cltd mov rex.RB sahf xchg mov leaveq clc jge (bad) shll test xchg jb mov mov adc movsb out std xchg add addr32 cmp xchg pop jmpq stc addb sub jbe rex.WX mov pushfq xchg cmpl rex.WRXB or (bad) jrcxz mov sub xchg cmp adc lahf jl test mov mov icebp icebp xchg (bad) adcl movabs (bad) out (bad) xlat mulb xchg retq mov sahf hlt and test xchg (bad) rex.RB movabs cmp (bad) xlat mov sti xchg js (bad) fistp shll jmpq adc xchg add rex.WRX xlat mov rex.XB (bad) pushq cmp jmp mov pop (bad) xchg mov mov in movabs stos out popfq test cmpsl rex.R push xchg loopne pushfq test (bad) add add iret movabs pop mov scas cmc (bad) in (bad) and add sbb (bad) (bad) add outsl xchg cld push enterq (bad) pushq sbb mov jbe rex.X (bad) xchg xchg cmp int xchg mov jge (bad) jne push cwtl xchg sub mov jbe sahf sub (bad) movabs pop fmull jge lahf mov push movabs (bad) sub ja out sahf ds or xchg (bad) sbb mov xchg ss scas mov xchg add imull xchg loopne xchg (bad) or movabs xor add decl test in sahf pop jns mov push rex.WR sti out xchg rex.WRXB (bad) test (bad) addr32 cmpsb add hlt (bad) rex.RX sbb jae pop xchg xor jle xchg sbb mov or xchg iret in pop and cmpsb outsl xchg (bad) add (bad) sub mov std (bad) callq mov (bad) push (bad) rolb movabs fwait in cmp cmp int3 out jno push sbb in xchg fidivr add (bad) scas adcb and xchg (bad) sbb addr32 adc jns pop pushfq test (bad) movsb pushfq (bad) int3 (bad) sub (bad) test scas xchg mov add in cmpsl sti mov xchg jo es icebp push xor fistpl (bad) xchg movabs fwait insb mov movabs rex.WRXB cmp (bad) (bad) pushfq (bad) push xchg ss rex.WRXB xchg cmp callq out sahf pushq add fdivrl sub test jrcxz or addr32 or punpckhbw rex.RB rex.X sti sbb pop lret sti leaveq mov (bad) (bad) sahf pop movslq insb rex.XB jle ja rex.WR retq rex imul fcoml mov callq divl movabs xlat je (bad) pop xlat jns (bad) (bad) rex.WRB xchg xor enterq push and rex.X cmp data16 notb pop es pop push jg flds test divb mov adc (bad) nop xchg jg fadd (bad) push jmp xchg cmc rcll xchg movabs add movsl (bad) push (bad) movabs test xlat in push hlt xchg sbb addr32 add xchg jne (bad) jns jbe pop movsl scas xorl imul shrl (bad) sub (bad) jae sti add cmp es or cmp push sbb sahf adc (bad) fbstp (bad) repnz push addr32 cmp or addr32 adc (bad) es xchg movslq add cmp imul std (bad) lret and xchg pushfq test cmp push xchg jge gs test pop pop jrcxz mov pop xchg rol hlt xchg xchg xor xchg or xchg xorl xchg xchg movabs data16 pushfq callq xchg rex.WR xchg cmp xchg mov xchg iretq xchg rex.WR iret xchg xchg cmpsb rex.XB pushq xchg orl sub jo xchg fistpl sub nop imul xlat mov data16 lock sub xchg xor fiadd and scas (bad) xchg xchg addr32 and jmp cmp sbb test callq mov (bad) jbe cmp mov sub xchg ficomp (bad) cmpsl sub cmp xchg cmp adc (bad) callq pop js pop scas pop jae sbb out sub callq mov cmp pop popfq (bad) pushq fwait mov jle cmpsb jg (bad) jrcxz (bad) mov (bad) jo jg fldenv mov mov (bad) out or mov rex.RB fnstenv (bad) adc cmc (bad) cmp mov (bad) xchg pushq pushfq xchg or outsl loopne (bad) xlat pushfq (bad) xchg sti sahf xchg mov xchg movabs imul and fs mov mov xchg (bad) cli xchg or idivl xchg fildl out movslq test (bad) shl xchg fnsave rolb retq (bad) (bad) sub xchg in in jmpq sahf cmp sbb add adc callq iret sbb (bad) xchg or push jae xchg jbe xchg (bad) mov fsubs push imul imul jl sahf (bad) jmp sahf pop loope notl push xor sahf outsb push push fs cmpsl rex.XB pop and pop (bad) mov pop pop xchg ja std xchg in enterq lret adc iret sbb loop (bad) leaveq pushq shrl jmp push xchg movabs push (bad) (bad) test xchg (bad) scas jmp popfq mov pop stos xchg out cli lea rex.WRB push sbb cmp jno rex.RX rex.XB movsl pop (bad) jbe push xchg cli mov cltd loopne fucom sbb (bad) add adc rex.WXB fistl movabs rcr xlat sub push xchg fwait and jb mov in out xchg lret sti cmp xor xor or jne (bad) rex cmp xchg iret nop mov ja xlat jmpq jo (bad) xor sbb hlt or rex.RXB (bad) jno rex.X ja imul lahf jg (bad) cmpsb (bad) mov sub jne (bad) (bad) add leaveq cmpsl icebp mov xchg (bad) cwtl (bad) movabs test ja mov pop xor rex.WRXB ja addr32 lods jne xor movabs add scas mov adc xchg std (bad) xchg xchg (bad) subb in (bad) movsl fistp cmp movabs (bad) sbb adc iret loop in mov (bad) ja outsl fsubl shufps stc mov mov addb adc sbb xor sti mov adcl (bad) (bad) xchg (bad) fs pop (bad) jnp pop mov push jg push mov scas imulb jp (bad) pushq rex.WB pop mov movsl mov (bad) sti sub (bad) stos xchg xchg xchg lcall out lahf popq rex.RXB rex.WRXB mov fist sahf (bad) pop cmp mov (bad) shrd mov mov push xlat xchg jge jae push cwtl mov xlat cmpsl rex.WRX rex.WRXB rex (bad) push test lods (bad) sti xchg fnop xchg add mov jnp adcb cwtl mov movabs repz sub jg iret xchg (bad) mov (bad) fisubr jae xlat movabs rex.WXB outsb jle (bad) ja (bad) iret sahf lret out xchg negl xchg xchg movabs sub rex.RXB sub adc sahf rex movslq stos xchg cmpsl add jl push or xor gs xchg pop mov js mov sbb (bad) rex.WRXB jrcxz lret (bad) hlt (bad) retq mov sti xchg out (bad) out (bad) xchg bnd rex.RXB xchg (bad) hlt push xchg rex.WRXB cwtl xchg outsl jno rex.WXB pushq push mov lea mov outsb pushq punpckldq (bad) jb sbb jae rex.WB rex.WRXB popfq push fs jnp pop iret xchg enterq (bad) fldcw sbb push in or (bad) rex.WB sbbb lods mov cmp pop sub leaveq xchg mov cmpsl xchg loopne mov xchg out psrlq in (bad) stc (bad) lret mov iret cltd out out outsl idivl rex.WXB addr32 and xchg (bad) xchg out (bad) xor std out rcll (bad) xchg or mov (bad) mov (bad) rex.B rex.RX mov xchg ja popfq (bad) xchg cmpsl xchg scas jrcxz xchg mov xlat xchg js push scas push movabs mov sbb rorb or (bad) pcmpgtd pop xchg cltd sbb ss fwait cmp and (bad) (bad) (bad) sbb fidivl (bad) mov clc jno rex.R rex.WRXB mov xchg lret xchg pop mov (bad) jmpq adc sahf fcoms jne lods (bad) xchg add (bad) loope repz sub and pushfq add adc sbb ja xor or add xor or popfq cli xchg cld movabs rex.RXB in gs divl push mov (bad) xchg cmp decl jbe movsb es fucomip (bad) pop xchg and xchg push add xor cs je xlat movabs add out in xchg rex.RB (bad) pop stos rex.WR rex.WXB mov retq (bad) (bad) jns cmp cmp (bad) adc mov fisub sbb xor sbb adc push insl (bad) jbe xchg pop cltd push callq lods and and push add pop rex.W sahf pop rex.XB (bad) rcll retq jnp pushq movsb cmp shl mov test retq int3 (bad) (bad) negb xchg (bad) (bad) (bad) jle jno sbb icebp or fsubrp mov jae adcl (bad) jmpq cmpsb (bad) nop xchg mov clc fst (bad) rex.WXB xchg or (bad) jrcxz add outsl loop xchg cmp (bad) sbb out add xchg pop out push mov xchg sti retq (bad) mov in movabs pop test push xchg rex.WB jmp fcmovnbe loop (bad) fnstcw (bad) outsb xchg movabs fwait (bad) notl xchg in lods adc sub ja mov popfq add xor sbb (bad) outsl lcall xchg sbbb repnz rex.WRX pop (bad) pop mov or adc sbb cmp scas cvtpi2ps cwtl pop add mov push outsl xchg add and mov push mov mov (bad) cmp pop sbb xor (bad) movsl sbb fwait sbb insb pushq (bad) movsb push add nop jne and jl (bad) cmp fwait add (bad) xchg (bad) movsb sbb xchg (bad) and jge xchg lods rex.XB loope mov test in fwait mov imul (bad) addb (bad) or xchg mov or jne test sbb pushq nop out adc or adc out rex.WXB jbe xchg mov addr32 rex.WRXB (bad) xchg imul movsb in push loopne xchg rex.WRB subb xor (bad) xchg sbb movabs rex rex.WRB outsl ja push and xchg sub (bad) cwtl in fcomps pop rex.X js in (bad) lahf jb rex.R rex.WR (bad) xchg ss or jmpq int3 scas jnp cltd cmp push andl add (bad) fldenv xchg repz rex.XB lret adc xchg sbb in scas xchg adc mov popfq mov xchg push pushfq rex.XB xor add fisub sarl (bad) test pushfq adc movabs cmc lret xchg cli (bad) (bad) and cmp xchg xchg add rex.RXB sub and (bad) movsb (bad) jae ds (bad) and or xchg sti mov int test rolb cli jle pop loop xchg sti pop fisubr xchg lret (bad) (bad) (bad) (bad) flds or jge (bad) lahf stc jmp movabs xchg xchg rex.X push push jle sbb outsl pop retq (bad) sahf pop cmpsb je (bad) xchg (bad) fstpt rex.RXB (bad) (bad) (bad) jbe popfq adc (bad) xlat je test retq (bad) addr32 xchg and and and lret mov (bad) cmp sub loope sbb mov insl (bad) pushq movsb xchg (bad) sub lods and js xchg leaveq in loopne jns cmp es sbb rex.XB rex.RXB in mov nop push rex.B xchg out (bad) movabs (bad) iret add icebp rex.B xchg mov popfq fcomps fistpl (bad) jle pushq sub clc out cmpsl (bad) sub (bad) push mov xchg lock sbb cmp out popfq (bad) and mov sub pushq shr fdivs (bad) scas stos movabs rex.WRB adc rex.WRXB xchg incb pop xchg cmpl cli outsb jrcxz xchg cmc imul rex.RB rex.WB jp xchg stc rex.XB stos movabs (bad) push jnp rex.WRX gs xchg jns jb adc sbb lods or es insl xchg (bad) rex.XB cltd (bad) mov divl adc stos movq or pushq sub out add xchg lods mov fnstsw popfq pop xchg xchg mov mov out xchg jrcxz cmc jmpq xchg sbb movabs retq stos in lods mov movsb (bad) (bad) xlat jnp xchg rex.WRX gs or (bad) cmp xchg sub cld cwtl cmp mov repz add xchg mov cltd xchg loopne repnz cmpsl rex.WR xchg rex.RXB stos (bad) pop (bad) lahf leaveq sahf test clc xchg cmpsl fisttpl xchg fisttpl (bad) es test nop xchg subb pop cmpsb loope add (bad) rex xchg sub jp icebp lahf int (bad) lret (bad) fist lret (bad) (bad) movabs add (bad) (bad) int3 loope mov in pushfq add (bad) hlt jmpq xchg lahf rex.RXB xor push cmp mov xchg rex.W pop sahf fimull in rex.WRXB and push mov sbbl sub push cmpsb or xchg jg scas (bad) adc sub in xchg add push scas mov mov movslq xchg fsubrl or stos xchg or push pop adc mov sbb (bad) xchg xchg push (bad) jno push (bad) int3 xchg sub xor movsl xchg callq (bad) push rex sahf mov lret sub and out ss mov lea rorl (bad) pushfq fnstsw rex.WRXB (bad) rex.WX pop pushq sub xchg imul je stos cmp movabs leaveq test mov and enterq rex.WRXB xchg icebp outsl add xchg push loop (bad) addr32 push cmpsl mov mov jnp push sarb and xor xchg repz (bad) leaveq sub xor lods xchg pop cmp adc rcll in (bad) jnp callq (bad) cs rex.XB rex.RB xchg enterq (bad) and movabs callq or pop rcrl mov loope clc stos sahf lret jmpq retq rex.R rex.XB adc (bad) loop xchg cmc xchg rorb nop rex.WRXB sti (bad) xchg cld ds and or xchg rex.WR in mov jge test imul leaveq ja loop xchg (bad) mov mov rex.XB sbb fdivl mov xchg (bad) int (bad) xor xor xchg cmp rex.WX je xchg pushfq icebp fcmovb fisttpll mov mov mov push rcrl in (bad) (bad) xchg rex.WRX imul pushfq clc es fildll or pop or adc xchg add sti or xor repnz (bad) mov js test adc rex.WRX sti xchg or sbb xchg (bad) lods cmp (bad) add movsl jns (bad) fucomi pop scas jrcxz cmp add (bad) mov mov fisub (bad) movabs (bad) bswap and xchg xchg cmpsb (bad) fsubrl and rex.WR sbb lret movabs cs repz fimul out add cmp fwait mov lret (bad) fisubl xchg loop push sahf rex.W rex.WRX rex.RX rex.WX rex.B movabs xchg jae jne sahf hlt fs xchg fidivr xchg cli sarb (bad) icebp (bad) xchg mov subl cltd (bad) mov cld cs out shrl in (bad) stos jnp test (bad) repz movabs sub out (bad) sti pop xorl retq xchg xchg (bad) insb fisub movabs (bad) and pop push pushfq sbb sub xchg jne rex.WR fild xchg outsb lret xchg (bad) pop insl adcb cmp xchg pushfq sbb xchg stos retq mov xchg movsb (bad) test xchg xchg (bad) add loop (bad) in mov clc sub jrcxz cwtl pop mov ds mov int lahf push adc (bad) xchg and cmp sahf adc cmp xor xor rolb (bad) xchg pop sbbl sub test xchg xchg cld cltd shr jmp (bad) xchg repnz rex.WRX movslq fisubl (bad) test pushfq fwait (bad) fcmovnbe cmp cmp cmp (bad) shrb loopne movabs jmpq test xchg sbb xchg rex.WRXB add adc rex.WRX and cmp test rex.WB adc push (bad) sub movsl cmp xchg decb out sbb xchg jb cmp cs outsw imul movsb jl jnp stc add jns (bad) adcb add (bad) (bad) xor test test mov xchg mov insl movabs andl notl fiadd or mov outsb iret js stos xchg (bad) test mov fistp (bad) iret xor cmp jle (bad) jae pushq rex.WX xchg sbb es (bad) rorl sub rex fwait cld xchg fsub sahf (bad) stos mov jnp jo pop movabs jg jrcxz lock (bad) sub pushfq jl jp movsb adc rex.R (bad) ja rolb mov loopne in ja fisubrl (bad) jnp sarb sbb add mov rex.WRX push rex.R (bad) sub xchg imul movabs and add sahf (bad) cs pop (bad) jrcxz addr32 xor scas mov rex.WRXB add xchg and pop pushq cmpl adc lret add int adc and xor sahf push rex.WRX stos mov retq jns jbe popfq sub outsl imul pushq xor pushfq mov shrb or int3 outsl gs movsl insl sub sbbb fs (bad) pop mov popfq (bad) clc pushfq and sahf or notb icebp (bad) xchg xchg int lret sbb xchg sti cmp jle (bad) rex.RXB fadds jae fwait mov pop (bad) pop lcall lret cmc mov push xchg (bad) push sbb jns mov stos add mov rex.WX ds lods rex.B out (bad) (bad) out nop xchg jl pop xorl imul (bad) retq (bad) test lret mov mov push decb mov movslq push leaveq imul (bad) xchg push or stc fiaddl movabs mov stos xchg mov rex.R xchg or add pushq (bad) xchg and jp sub mov out movabs rex pop add cwtl cs sub mov scas sahf lock mov jl out xor sbbl xor nop ficoml shr pop movabs in jl pop sub adc sbb xchg or xchg rex.R xor sub jns xchg scas movabs fildl mov pushfq fcomps pmullw xchg xor jno (bad) (bad) and outsl addr32 fwait jno xchg mov cmpsl lea movsl pop in imull (bad) add (bad) sbb xchg pop push xor outsl jrcxz int (bad) (bad) adc jle addr32 jae pop ds xor mov push jmpq ficom (bad) cmp scas cmp (bad) fwait xor (bad) (bad) sbb (bad) (bad) xor rex.WXB (bad) jl je and xchg in xchg rex.RX rex.WRX push rorl rex.R test stc fbstp fdivr mov rex.WRB push add (bad) mov (bad) xchg outsb lods adc test movabs lock lret (bad) insb xchg (bad) cmpsb (bad) jle xor add ja rex.B movsl adc sbb movabs lahf xchg sahf std mov xchg addr32 sbb icebp xchg cmpsb jne push (bad) (bad) or add int3 mov nop adc (bad) movabs sahf rcrl push outsl test fcompl (bad) fnstsw or popfq sbb in or fbstp jp movslq out or movslq cmp movabs rcr ss xchg rex.WR mov gs retq insl movabs (bad) leaveq sahf scas cmp xor push movabs mov pushfq sti sbb out jle lahf push in imul rex.WB sub (bad) (bad) jns popfq and mov mov rcrb (bad) mov addr32 stc out movsb pop retq sbb movslq nop (bad) sahf ja xchg lods shlb rex.WRXB rex.RB sbbl add imul subb (bad) in jae imul (bad) (bad) cmpsl lret xchg push xchg push movsb es mov mov in sbb fisttpl xchg sti outsl cli sahf stos out adc sbb lea xchg rex.X addr32 out push stc jno ljmp adc (bad) insl xor (bad) rex.RX mov sbb (bad) fwait rex.WX and or movabs je pop shr jg addr32 pop adc or cwtl pop xchg rex.R in (bad) xlat adc insl xor (bad) sbb xchg (bad) and (bad) in pop xlat mov mov (bad) xchg cmc add (bad) movslq retq movabs int cmc sub rex.RB xchg mov (bad) cmc fsub xchg imul xor sbb rex.RB cmp xchg outsl add int3 mov xchg sahf fwait sar (bad) fdivrl movabs rolb (bad) jmp movabs add out xchg xor rex.WR xor cld (bad) xchg xchg mov mov mov xchg ja pop repnz (bad) sbb push pop sub mov movslq xchg and fcoml mov (bad) mov mov push or xchg rex.WRXB (bad) pop outsb xor sbb jne (bad) lods sub loope fstl add cmp rex.RXB jnp je fbstp lods pop xchg push in pop mov out rex.RX or push rex.WB pop push push loope loope in xchg test pop (bad) movabs enterq ss (bad) movabs or nop sti push std loopne addr32 (bad) sbb sahf out (bad) fist test lret pushq jg sahf xor sbb sahf and outsl cli mov movslq xchg fwait cmp (bad) (bad) callq xchg es fwait sbb test or or xchg faddl rex.B mov ja adc xor cmpsl movsb stc rex.XB xchg adc sbb adc gs cmp imull jne pushfq rex.X sbb cltd or fildl sbb sarb (bad) add add fcmovnu jo xchg outsb rex.WX cmp (bad) addr32 repz ss test cmp push cmp (bad) pavgw xchg sti in mov (bad) ffreep sahf subb pop addr32 jno cmc adc xchg xchg (bad) insl ljmp fldt pop fbstp sbb cwtl sub xchg adc jno mov jo cld xchg (bad) repnz sub or imul push iret lods fidiv mov or xchg jmpq and or (bad) xchg add adc fiaddl (bad) or (bad) addr32 loope movabs mov xchg pop jmp xorl ficoml movslq mov stos hlt (bad) xchg mov scas outsb mov xchg test pushfq stc and (bad) mov sub xchg add movsl xchg (bad) loope sub cmp and stos loop ja (bad) (bad) xlat mov push in add gs ja rex.RXB fldenv xchg rorb xor pushq sub rex.WXB jb fs push or adc movslq js pushq push rex.RX push adc rex mov pushq sahf (bad) (bad) push xchg mov xchg cmc scas outsb movabs xchg insb xor lods jo rex.WRB (bad) mov rex.RB rex.B icebp in xchg imul add xchg (bad) lods scas insl test adc pushfq sbb mov sar mov and or xchg mov out out retq (bad) xchg xchg cmp adc xchg test fmul (bad) movabs or xor jrcxz fwait movsb xor in xchg in (bad) sbb push mov je (bad) jrcxz xchg sub cs gs jp (bad) mov divl std xchg shll adc (bad) sbbl movsb stc and leaveq fwait lret cmp xchg je int3 (bad) mov movslq adc (bad) mov add outsb (bad) jno rol and xchg rex.WRX adc xor xchg jo xor (bad) rex.WRXB (bad) clc rolb push pop sbb sub (bad) xchg sbb adc mov loop xchg cmp rex.WRX pushfq in or (bad) rex.WRB repz pop movabs (bad) xor loope stos xor (bad) pop (bad) adc xchg sbb rex.WR data16 rclb (bad) xlat jg xchg sarl rcll xchg std loop lock and xchg sbb repz xchg xor (bad) (bad) pop cmp xchg rolb mov (bad) mov mov (bad) sub (bad) stos push iret imull in cmp (bad) xchg imul cmp cmpsl xchg retq rex.WXB rcrl mov add rex.WXB jno or rex.X addr32 adc subb fistpll sahf mov xor mull xchg push jmp int3 xchg cltd adc rex.RB and mov mov sahf (bad) or mov test pushfq xchg xor ss mov (bad) xchg retq (bad) pop lahf fucom (bad) incb push xor cwtl or (bad) test xor (bad) cmp mov xchg pop xor rex.WR xor (bad) (bad) fbld cwtl fstps xchg or pop (bad) cmpsl movabs adcl xchg jns and cld mov hlt (bad) (bad) outsl ja in push lret jge ss test xchg pushfq movsb pushfq lahf scas push in addr32 movabs and insl sbb cmp (bad) add pop ja outsl (bad) and rex.WRXB jnp (bad) mov adc add (bad) rex.WXB shrl adc (bad) jmp jbe rex.RX ss movslq xor (bad) fcompl pop xchg icebp pop cld outsb testl jb cmp jnp xchg rex.XB mov int (bad) seta mov stc sub lret rex.WX mov movabs icebp (bad) mov cmc (bad) ficompl test movabs (bad) in lods adc xchg or ss push xchg sbb sbb pop insb jns xchg rex.X sahf pop mov mov sbbl out cmpsb (bad) (bad) (bad) fucomi repz sti or movslq xchg mov std xchg loopne movabs loope jnp imul cmc iret int xchg xor jrcxz hlt mov (bad) and ja or xor sub rex.RX rex.WRX out rex.WRXB sub and push pushq rex.X jbe mov xchg rex.WR (bad) int3 xor push ja jns pop (bad) xchg rcrb int (bad) je (bad) adcl and (bad) push xchg stos clc sub (bad) (bad) lods cwtl shrl movsb (bad) and int (bad) mov iret push add sahf nop js rex.WRXB mov cmpsb jns (bad) xchg or or popfq pop or xchg xchg fildll mov or (bad) rclb push rex repz nop movsb (bad) mov enterq mov imul adc rex.X fs xchg mov xlat push mov jle xchg and jbe and (bad) int3 mov leaveq insl fcomps or fnsave mov mov seta jae add mov jns push ja icebp push xchg (bad) (bad) (bad) adc (bad) (bad) fimul fdivrs sahf xchg testl stos (bad) xchg lea scas movabs and rclb shrl pushfq or lret (bad) stc outsb hlt fnstsw lahf (bad) xchg ja shl jb lock cmc loope enterq fistpll (bad) cmpb in lods xchg jnp sbb cmp shr mov sti xchg test xchg outsb (bad) cmpsl pop (bad) cmpsb sbb xlat (bad) push shr fist (bad) rex.WXB imul test xchg (bad) hlt movabs xchg loopne mov lahf sub sbb rex.X (bad) push mov callq test or lret callq jmpq movsb es mov in xchg mov int3 cmp xchg js sub push mov (bad) fisttpll clc fsts ja rex.B fwait or pop (bad) outsb (bad) rex.WXB rex.RX (bad) in je popq rex.WX xchg jbe jae rex.WRXB lea (bad) movslq gs add stos (bad) xchg movabs push xor rex.WB or xor test stos xchg enterq insb or sahf (bad) add add stos mov enterq xchg mov stc xchg (bad) repnz add (bad) mov retq rcl sahf sarl cmp movabs (bad) mov mov pop xchg (bad) xchg stos loop fistp jp and movslq sbb xor or mov xchg (bad) mov mov xchg out sbb and (bad) movabs lret (bad) iret (bad) mov xlat cmp (bad) scas sahf movabs (bad) out xchg mov insb movabs sub imul jle fs rex.R rex rex.WX push cwtl xchg outsb test rex.RXB movslq je xor rex.RB nop pushq lods xchg loop (bad) or xchg or pop xor add fistl xchg adc xor cmp mov xchg jns sbb sub (bad) lahf mov xchg std jge pushq sbb outsl pushfq test mov jg popfq jno rex.RB es xchg xor lea mov pop loope push cmp adc nop push (bad) cmpsb iret cmp out mov mov jo or sub xor add sbb (bad) jge mov (bad) push sub cmovnp mov mov xchg mov (bad) fbld (bad) test xchg (bad) mov mov (bad) mov mov xlat mov out in jbe (bad) nop xor movabs test (bad) xchg xchg mov add cwtl pop rex.WRB jge,pt xlat imull jrcxz push add xchg je pop out movabs or or loope (bad) xchg mov cltd leaveq xchg sbb rex.W (bad) mov xchg cmp or js addr32 andq outsl out rex.XB xorl movabs pushfq jb push iret mov (bad) xchg xchg cmpsl rex.X and orl mov test (bad) fidiv jbe (bad) xchg fistl in (bad) out pop cltd xchg fildll test in jrcxz hlt es rex.WXB rex.WRXB lret (bad) rex.B and pop pop rex.XB or jge mov jmpq and mov stc (bad) cmc mov (bad) jg movabs (bad) xchg (bad) lahf sahf jrcxz popfq mov rex.R sarb out out (bad) xchg (bad) xchg mov xchg mov jrcxz out divl xchg pushq mov (bad) fwait (bad) outsl (bad) sbb xor rex.WX frstor mov rex.RXB rex.WB pushfq pop (bad) fs cmp sbb xchg gs rex.WR jb jnp movabs push cmp adc mov js and mov xchg rex.WB xor sbb cmp cld es xchg and lret outsl hlt out movabs scas outsb lods xchg ds movabs data16 out stc hlt xor (bad) xchg mov jne pop (bad) pushfq lods retq nop jrcxz cmc add imul cld xchg or xchg xor sbb xchg xchg and ficomp (bad) ja and movabs (bad) in rex.WRB xchg scas xchg movabs mov rex.WRX mov sbb (bad) xor xchg cmpsb movslq xor rclb movabs xchg sub mov movabs (bad) insb xchg callq lahf mov cwtl stos mov mov sub retq sbb std jns xchg (bad) jne and sbbl mov fs xchg mov adc and sub mov xchg xchg (bad) rcrb addr32 (bad) xchg rorl and xchg pop cmp push xchg mov xor add (bad) jo insb xchg jb xor cmpsb mov pop (bad) testb add xchg fdivs es pop pop xchg popfq fwait adc cmp xchg rex.XB lret test rcrl push sub fistp cmpsb adc xchg and adc sahf (bad) shrb jae push xchg mov and fildll jl xchg cs jge (bad) lock xchg xchg rex.RX jbe pop sbb pop (bad) add add xor mov push outsl xchg cmpsb xorl ja jge (bad) adc imul test pushfq (bad) fcomps push ds xor outsl cmp cwtl (bad) add adc xlat sarl xchg in in testl jp xchg pop outsb rex.WRB pop push lahf lahf incl pop (bad) mov iret fs shrb pop mov (bad) ljmp (bad) sbb (bad) out movabs add rex.WRB sbb imul cwtl movabs jnp (bad) xchg sub and cmp or mov mov cmp xchg adc add xor xchg cmp and adc mov stc popfq add (bad) jo xchg scas imul mov movsl stos mov xchg repz (bad) mov mov xchg cs callq xchg imulb sahf xchg addb jg pop (bad) mov (bad) (bad) fisubr mov fstps test push xchg (bad) imul xchg or movabs repnz insl outsl in lea movb pop sbb clc cmpsl cwtl and xchg and jle xchg lock add mov xchg fsts xchg pop sahf xor roll shll cmp adc xchg xchg mov xor (bad) mov lret add in xchg or xchg cmp cmp sar mov (bad) jp fwait xchg (bad) jmpq and sbbl nop (bad) test ficoml callq rex.XB cmc mov rex out cmp sbb adc loopne xchg mov adc xchg rex.WX lods xor adc div xchg sbb lret (bad) sbb in idivb pushfq jmpq xchg jmp movabs fildl cwtl pushfq (bad) (bad) rolb icebp in es (bad) repz jb lea pop cmc cmp (bad) xor jg in mov (bad) cmpsl xor add in shlb rex.RXB sub adc add adc xchg mov fisub lock rex.RXB (bad) icebp loop push mov (bad) shr jle mov outsl rex.WR clc and jp or insl leaveq pushq (bad) or (bad) (bad) mov std jnp jge scas loopne rex (bad) (bad) xchg xorl add and xchg icebp out fsubr jb in adc (bad) scas shll push xchg (bad) xor (bad) mov lods cmpsl sub rep jmp movabs rcll lods or rex.WRB or (bad) test fucomip out out mulb fdivp sub (bad) jne rex.XB rex.WRB (bad) in mov mov in (bad) xchg mov gs iret movabs rcl (bad) test repz xchg std mov rex.WB movsl mov push mov je rex.WR rorb pop int3 rol stc adc callq hlt add movabs outsl (bad) xor (bad) rex.X or rex.WR sub and pushfq rex.RXB iret and xor cmp pop cmp icebp cmp xchg jg movabs iret rex.RXB (bad) jg decb push jae pushq std shrl cli retq hlt enterq pop jo int3 iret movabs je movslq lea jnp jb loope (bad) out std lock repz mov (bad) or jne mov scas (bad) cmc jns xlat test rex movabs xchg jno rex.R xor (bad) lods jge adc cmp sbb (bad) sub lret cmp cmp fimull sbb pop int3 (bad) loop rex.RXB iret (bad) mov (bad) jge loop sti fs movabs rex.WRX (bad) xor xor cmp mov subb (bad) out stos mov repnz and pushq mov jb rex.B mov retq mov ja enterq fdecstp pushq fmul cwtl int int3 stos leaveq and (bad) (bad) imul cld cltd stc mov push (bad) inc (bad) adc or mov negl (bad) pop (bad) icebp in stc rex.RB enterq in test fnsave xchg (bad) rex.W loope add mov movabs insb imulb andl cmp movabs movsl rol or (bad) sbb cmp (bad) (bad) retq xlat int and (bad) rex.WRXB xorl cmp jno imul add movabs repnz (bad) push jb retq vpshuflw rex.RXB pushfq and out xchg (bad) out rex.RB mov cmp adc rex.X sub mov or scas mov (bad) retq in hlt xor stos rex.WRXB lahf lret mov (bad) flds or rex.RB rex.WRXB int3 sub xor int3 mov in js jbe push mov xchg imul jrcxz scas xchg in out xor clc ja shll std adc pushq je out xorb sub rex.WR add xchg xorl (bad) sbb out std cmp iret jae adc push (bad) pop mov rorb mov mov and mov retq rex.WR (bad) test es rcrl (bad) movslq (bad) jno pop jg repz (bad) std xlat mov out (bad) cmp and rex.RB (bad) mov gs mov repnz (bad) std and in cli and stc faddl in add mov (bad) jne (bad) fdivl cwtl rex.WRX mov xchg test fcomps (bad) int cmp adc movslq iret or push jmpq and push movsl movabs sarl sub mov movl xor (bad) movsl adc (bad) ja rex.X cmc popfq rex.W (bad) xor sbb mov vpextrw movabs cltd shlb cmpsl fistp adc outsb sub insl popfq mov test pop sub icebp out mov cwtl cmpsl (bad) xor pushfq (bad) mov fistpll sti leaveq xchg imull mov movabs rex.RXB rex.RXB addr32 xlat setno mov iret fild and out (bad) xchg (bad) pop ja movsl imul sbb lahf xchg sbb nop or rex.WRXB cmpsl push mov lea neg (bad) mov (bad) adc xlat xor scas sub mov rex.B loope (bad) mov mov lock jg jl mov jmp add pop movl jge mov movsb push mov addr32 adc (bad) mov (bad) cmp (bad) push addr32 orl cmpsl shrl mov rcrl adc mov andl mov hlt neg movslq cmp mov callq mov subl cmp cmpsl mov mov (bad) fcomip xchg mov cmovg sahf nop in sub or (bad) (bad) popfq fstpl (bad) adc (bad) out (bad) ja movabs scas mov cmpsl fnstcw (bad) mov mov xchg lea mov (bad) out mov xchg scas mov (bad) sub jge mov cvtdq2ps add (bad) cmpsl clc (bad) rcpps (bad) mov mov (bad) adc rex.WRXB xchg mov out xorl (bad) sti push mov movslq (bad) mov cmpsl (bad) mov xchg adc loope rex.XB addr32 mov lahf (bad) enterq stc xchg (bad) add imul (bad) cmp lods mov mov (bad) notl mov lods in mov (bad) jmp lahf lods sub outsb rex.WXB mov stos (bad) movq xlat stos adc ficoml add xchg test jle test test test cmpsl insl mov iret scas callq js retq adc xchg fbld adc mov mov callq cmpsl mov add fsubs idivl movq fwait rcrl sbb movabs (bad) stos (bad) adc jmp (bad) cmpsl rex.RXB sahf popfw lret out mov jbe movabs pop xchg pop test push out (bad) (bad) (bad) (bad) cmp out push (bad) roll fistpll movl outsb out (bad) mov (bad) int3 pop jle in nop adc push icebp lods pop testb (bad) (bad) out lea mov push adc iret retq pop popfq mov mov (bad) mov movd (bad) mov (bad) maxps push test iret mov sahf mov mov roll (bad) fidivl fistpll cmpsl (bad) movabs xor callq (bad) jrcxz push scas (bad) (bad) fsubl popq mov rex.WRXB (bad) mov xchg jae movabs rex.RX rex.RXB imul iret rex.RXB cmp (bad) rex.WX cmpsl add ja and pushfq mull jge or jmpw adc rex.WRX xchg mov pop cmpl movl (bad) sbb (bad) movslq rex.RXB lods (bad) (bad) (bad) rex.RXB mov ja addb cs mov (bad) mulb (bad) pop iret cmp outsb xlat nop push cmpsl rex.WR xchg (bad) xchg mov mov (bad) (bad) rex.WB fisttpl (bad) insl out mov sub outsb mov cmp outsl sti outsl rex.XB cs rex.WRXB cmovg sbb sbbb retq mov pop sub fistl adc scas rex.WX lods imulb movsl ficom (bad) in mov mov sti insb sub push pop (bad) xor std xchg popfq mov xchg pop lock push pop rex.XB rex.WRXB mov sub (bad) (bad) pop (bad) test (bad) mov outsl xchg (bad) (bad) (bad) iret mov adc (bad) cmp sbb rex.WRXB (bad) lahf xchg jg (bad) mov (bad) mov cmc (bad) jg mov fwait ja (bad) add (bad) mov jnp rex.RXB xorl sub scas lret sub rex.RX out scas callq (bad) (bad) mov xchg rex.XB (bad) rex.W cli cmpsl es roll or jg (bad) mov adc rex.WR jg cs iret add xchg rex.RB rex.WRXB cmpsl scas xchg cs insl (bad) xchg jb push sub (bad) fsubp jbe idivl or rex.WRB sbb adc scas adc (bad) and (bad) jle (bad) movabs rex.RXB data16 (bad) ja popq (bad) mov rex.WRXB ja rex.RXB out mov jmp (bad) repz jmp xchg xchg mov rex.RXB cs popfq pop pop and mov out (bad) (bad) add repz mov cwtl (bad) lods xchg out test lret fsubrp mov fs mov and xchg (bad) int notl mov jmp xchg mov add or jns xchg jg mov mov andl (bad) xor (bad) mov add jle jrcxz (bad) xor (bad) or movabs and adc in test sahf mov cmp movabs (bad) or ja rex.RXB push pop out jmp movabs lea xlat sahf mov loope jns mov (bad) (bad) or fsubrs jmpq xchg iret (bad) cmpsl (bad) (bad) jmp retq xchg mov xchg xlat in sahf icebp mov (bad) jno scas (bad) sub repz xchg lea ja xchg push jmp (bad) mov adc (bad) or (bad) jae scas pop out test xchg ja rex.RXB xchg (bad) out negl callq rex.WRXB pop jg lods cltd cmpsl mov rex.WRX or mov sti sbb mov jle xlat or (bad) xor mov mov test rex.WX loopne lods mov xchg repz sahf out xor movabs out (bad) repz push (bad) movabs mov (bad) mov (bad) mov pushq rex.WRB xchg mov fbld nop rex.RXB push xchg xchg mull (bad) (bad) (bad) (bad) or xchg cmp xlat pop cltd xor xor or mov jmp repz pop stos retq xchg xchg fwait test rex.RXB cmpl lea decl movslq mov scas adc sub out pop xlat rex.R cmp stos lods jmp xchg pop lahf jnp (bad) cmpsl orl rex.B rex.WXB rex.RB popq imull mov xchg (bad) (bad) mov jmp xchg cmp mov (bad) sbb jl in mov add int3 (bad) repz sbb pop mov lea mov pop jrcxz sbb iret (bad) jrcxz jg (bad) or push sbb incl repz (bad) rex.XB movntq push scas (bad) sete xchg xchg adc scas mov fisttp cs xchg push (bad) mov (bad) mov sub xchg push jg lods rex.WRB movslq cmp and sbb fstpl rex.RXB fist lods xchg xchg (bad) movabs movabs movsl xchg sbbb lods jrcxz xchg jnp jg mov movabs xchg sbb je sbb mov bt xchg rcrl out xor outsl rex.WXB in (bad) (bad) rex repz std rex.RXB rex.XB out jle fwait jge pinsrw xchg or movabs pushfq (bad) or add mov jb std jle lea cmpsl cmpsl repz (bad) repz push or xchg xchg adc xchg rex.WRXB xchg ja xchg addr32 ja rex.RXB push (bad) (bad) out negl push sub mov mov lods cmp scas pushfq btr rorb xchg cmp stos sub xchg (bad) outsb xchg xlat iret jl (bad) std push mov jg xchg pushq (bad) mov mov xchg mov xchg or ja rex.RXB push popfq es pop (bad) adc mov cmp (bad) (bad) xchg rex.B (bad) xchg cs push pop (bad) xchg movabs mov cmpl (bad) xlat xchg cmp xchg rex or fdiv jb adc lods mov cltd nop (bad) mov sti mov xchg xor (bad) mov stos rex.XB int sub bswap mov rex.B (bad) mov pop cmp in mov xchg rex.RXB ucomiss xchg retq cwtl xchg rclb cmpl jrcxz xchg repz and jmp imull test cmp xchg rorl incl (bad) rex.RB pushfq mov (bad) rcll in fwait jp movabs pop (bad) mov cmpsb scas xchg fnop fisttpll mov (bad) out not (bad) xor loope shll fstpl movabs mov push addr32 adc (bad) (bad) (bad) in scas mov jbe imul xlat popq cmp or sti mov mov cmpsl rex.X xlat xchg sub outsb in callq add shr mov (bad) mov mov mov (bad) je rex.RXB rex.RXB repz outsb (bad) int3 mov (bad) jrcxz data16 mull (bad) mov or mov sub and mov movabs addr32 adc rep rex jns mov lea leaveq movabs mov test sbb mov (bad) pop cmpsb rex.X callq pop lods xchg xchg rex.RXB (bad) repz rcrb popfq adc adc mov out mov roll xchg rex.WRB movabs int cmpsl hlt es mov xchg mov or scas out sbb mov (bad) xchg (bad) jmp xchg mov mov xlat or sar cmpsl jmp sbb mov int jle mull mov data16 (bad) pop cmp pushfq jmp popfq adc out int mov jg iret and xchg xchg int test (bad) sahf std mov sysret (bad) movabs int3 rex.WRXB rex.RXB movabs mov fwait (bad) cmpsl fmuls fcmovnu (bad) mov jmp movabs rex.WXB or or jg push mov scas xchg mov mov in outsl or (bad) movabs fstps movslq xchg sbb lea lea jae test cmp lods mov retq xchg xor in outsl xor int3 xchg orl retq xchg imul (bad) addr32 scas nop idivl sahf mov fwait jae fwait adcl cmp cmp movsl (bad) xor (bad) xchg sub cmpl lods imul jnp xrelease sti ror push (bad) retq (bad) xchg sub xchg sub and mov rex.RXB mov (bad) (bad) (bad) imul fwait je mov btc (bad) xchg add cmpsb cmp fisubr (bad) xor repz xchg rex.XB fwait push sahf jmp rex.WXB and lods add pushfq and (bad) jmp pop xchg (bad) je rex.RXB or addr32 in add retq adc xchg sahf cmp repz xor xchg xor push out push cwtl cmp xlat jmp pop xchg lahf rex.WXB retq sbb add es lods cwtl rex.WRXB addr32 popfq mov iret jae add jmp outsb sahf mov andps or pop (bad) in or lods loopne rex.WRXB retq sbb or mov nop ja rex.RXB push addr32 xchg negl psubusb movabs lahf retq mov xchg sub imul push xlat push test push (bad) (bad) jb pop (bad) rex.WR pop rex.XB xchg xchg push mov rex.XB mov sahf mov (bad) and cmpsl (bad) addr32 push pushfq rex.WR jmp jge pushq jg jmp repz jg xchg sahf and (bad) callq xorps out xchg andl (bad) rdmsr mov (bad) xlat retq (bad) push or sti cmp test (bad) rex.XB xor cmpsl rex.WB push cs mov jno test cmpsb jp ja fwait sub (bad) fistl (bad) or sarb xchg callq rex.RB jno xchg mov sbb pop (bad) jmp pop mov fsubrs jrcxz jg repz xchg jae push rex.WX mov es rex.RXB fwait outsb sahf xchg cmpsl cmp mov rex.XB push rex.B scas rex mov mov ja adc adc xchg out add fstpl out popfq rex.RXB rex.B jle rex.R retq jo imul jae imul rcrl jl cmpsl xchg xchg mov mov subl divl out mov jmp stos xchg rex.WRXB movslq xor stos xchg xchg es shrb (bad) rep stos addr32 jp jbe lods pushfq jmp jns (bad) mov rex.X jge xor (bad) out mov retq (bad) or sub repz movabs out (bad) je xchg sbb (bad) shl repz xchg cmp push frstor rex.WXB fdivl (bad) fnstsw and fwait fwait (bad) (bad) adc or pushfq imul (bad) add (bad) jae xchg jrcxz xchg xchg adc mov adc insl jmp xchg mov fisttp rex.XB scas mov (bad) scas movabs mov scas mov scas xchg (bad) mov fucomi mov cmpsl jae (bad) (bad) (bad) mov mov jg jrcxz cltd xor cmpsl jl (bad) in xchg ja (bad) jnp (bad) jmp xchg (bad) fldt cmp sahf test retq movabs (bad) jg xchg mov (bad) (bad) iret push xchg fwait jae jae (bad) movabs (bad) scas movslq rex.RXB rex.WRXB cmp fistp jg xchg fldt add retq mov cltd xchg or mov imul add movslq jg cmp rex.WRB cmp cmpb rex.RXB (bad) iret jrcxz cs jg,pt sahf out in pop (bad) cltd lods mov mov jmp push xchg adc jrcxz xchg rcrl movsb xchg push add sahf push and (bad) xchg fstpt cmpsl xchg cwtl lods movslq sahf xchg cmpsl (bad) jmp lods push test nop mov mov cwtl mov out in pop stos ja and (bad) rex.WRB rex.RXB xchg (bad) (bad) jg (bad) cltd sahf movabs ja imul xchg (bad) xchg (bad) int3 movslq sbb mov push or xchg xchg mov decb fwait xchg cmp nop shll leaveq jmp xchg (bad) ds xchg or fistp (bad) movslq movslq add or mov lret imul (bad) push rex.RXB xchg mov cmpsl sbb mov callq jg movabs push imull (bad) mov scas rcrl adc retq jg movabs (bad) in xchg repz mov jrcxz push xlat pushfq repz mov sahf fistpl int ja rex.RXB movslq out scas jae popq sahf push sub shrl loope movslq cmpsl subl jmp scas test jae (bad) (bad) xchg test add repz push xchg (bad) iret js or xor and notl jns stc xorl jae adc lahf imul jmpq xchg hlt (bad) cmpsl rex.RXB repz (bad) (bad) mov (bad) sahf callq addl (bad) (bad) rex.WRXB cmpsl mov (bad) mov (bad) lods mov outsb movq mov rex.RXB out or mov rex.WXB mov mov fsubrl xchg fisttpll (bad) jmp xchg repz test jg lods sub enterq pop xchg iret cmp iret leaveq cmpsl xchg add ja cmpsl test jo cli mov mov addr32 ja test mov lahf cmp (bad) stos (bad) outsb xchg adc cmp jg popfq xor addr32 xchg xchg adc in cmp imul add xchg cmp iret (bad) xchg mov xlat movabs jmp scas std out cmp scas adc xlat rcrl xchg jo mov xchg xchg je adc imul sti jrcxz ss or xchg pushq (bad) cmpsb icebp int scas fimull (bad) iret xchg rex.XB sub and (bad) jle out add sbb xchg rcll fnsave add mov loope sub shll nop mov (bad) push movabs rolb movabs (bad) cmp lahf in push (bad) jg (bad) xchg jge cmp xchg iret sti testl movsb repz adc xchg (bad) movabs mov (bad) divb xchg mov stos mov mov fiaddl sub enterq imul (bad) mov and sub sahf sub rex.WRX (bad) push (bad) outsb (bad) rcll mov (bad) lea or (bad) je xchg pop gs fwait (bad) repz cmp iret (bad) sub mov mov pop hlt outsb mov xchg (bad) cmp retq push sub scas int3 (bad) movabs or mov xchg rorb rex.WRXB movabs or lea xchg jg rex.WRX (bad) movabs cmp ja (bad) xchg (bad) (bad) mov lret addl rex.RX mov add mov test (bad) xchg mov xor xor pushfq add push retq pushfq jmp adcl (bad) xorl movabs (bad) or cmpsl out fcomps fcmovnbe jmp push xchg imul (bad) pop fwait xchg outsl xlat xchg movslq ds mov xor jae sahf adc xchg iret mov (bad) bnd or cmp push movabs (bad) rolb scas pop imul mov or mov rol addl cmp jnp sbb xchg repz movabs rex.XB push imul scas (bad) movabs or jae jmp xchg push xchg (bad) out jg push es mov (bad) (bad) nop shrl sahf lods adcb xlat mov (bad) negl push jg lret rex.WB rex.X mov adc rex.RXB roll mov (bad) mov cwtl mov cltd xor out (bad) xor push mov (bad) movabs (bad) std mov add (bad) (bad) pushq repz (bad) adc pop outsb mov jne (bad) sub xchg jg jns faddl mov mov xlat or (bad) adc (bad) in adc xor rex.XB jg,pt xchg (bad) in (bad) mov mov add mov retq cltd (bad) push rcr jg (bad) (bad) rex.WRXB (bad) (bad) rex.WRB rsm (bad) jbe scas repz (bad) sti mov or clc fistpl (bad) jns and push (bad) lret jle and mov push orl movabs add mov add rex.WXB retq jmp cmpsl addl mov mov rex.RXB not sbb jle xchg xlat jmp push xchg add add sarl lahf adc (bad) (bad) (bad) callq lret mov push cld movslq xlat stos (bad) adcb in (bad) imul lret (bad) sbb movsb (bad) fwait rex.WRB sbb mov stos (bad) faddl (bad) or (bad) mov xchg sbb lods pushfq movabs testl cmpsl mov scas jrcxz or imul jne xchg imul jmp retq rex.RXB rex.XB rex.WRXB jg xchg rep and mov clc notl out sbbl cmp xchg (bad) sub xchg cld jae push jmpq fldcw mov mov in add cld (bad) ja pop mov adc cmp mov int3 movabs in and stc test (bad) xchg ja or (bad) xchg (bad) xchg jrcxz xchg mov movabs cmp rex.WXB rex.WXB (bad) mov subl xchg mov xchg repz xchg mov sahf sub icebp (bad) add mov adc fwait cld hlt push std sbb xchg shl mov rcll mov sub cmpsl or rex.XB pop jae fisubl rorb xchg pop (bad) lcall jrcxz xchg pop mov movabs js mov jmp jnp scas fucom movslq xchg jge rex.WRX jae sbb sahf mov movsb bndstx out jnp xchg mov nop mov cmpsl jmpq orb (bad) push (bad) rex.RXB xchg jp jae xorl (bad) int std callq (bad) idivl jg outsb jg outsb (bad) (bad) (bad) rex.WRXB adc roll mov (bad) (bad) cld xchg pop mov jge scas rorl (bad) push pushfq jmp mov (bad) xchg jmp or xor rex.XB push and mov pop mov pop mov (bad) cwtl outsl and xor shl xchg xchg sub rex.RXB repz cwtl sahf xor (bad) not ficoml rex.WRXB adc (bad) in flds (bad) jbe (bad) xlat xchg (bad) imul xlat movabs (bad) jmp pop add xchg lods int (bad) (bad) mov mov or jg scas rex.RXB mov repz repz mov cmpsl (bad) sahf adc mov jae xor xchg jae (bad) repz adc push sahf out rex.WB notb rex.WX jle rex.X fisttp mov lahf cwtl mov test mov and lret mov int3 (bad) xchg cwtl mov pop nop xchg lahf addl xchg mov fs lahf mov out pop jg stc pop stos iret mov (bad) jo (bad) and mov (bad) outsb rcrl rcrl rex.XB idiv out ds xchg pushfq movabs (bad) xlat sti mov (bad) fwait cld rex.XB adc mov mov lea (bad) (bad) pop fnstenv (bad) movabs jmp movslq jne cmpsl rolb mov test mov (bad) sbb jnp mov jmp cltd retq jnp fwait subl pop (bad) cmp inc test rex.XB gs xchg jnp sub (bad) subl cmp outsl gs fistl imul (bad) cli in (bad) (bad) add (bad) mov (bad) (bad) mov xlat callq movslq rolb out (bad) jmpq int3 (bad) mov test or xlat cmp mov sbb ja rex.WRX mov cmp push sub stos lods rex.WRXB pop sub mov fnstenv mov cltd sub xlat push ss out std ja rex.RXB lods (bad) adc scas lods jge xchg fwait std adc jrcxz xchg and xlat mov lods adc jg (bad) mov gs movsl push int fwait out cmp movslq jrcxz insl jle mov enterq (bad) ficom ja stos lret neg xchg xchg xlat jbe (bad) cli (bad) mov cli pushq negl jae xor cwtl lahf rex.WB mov scas sub rex.XB add mov or mov nop mov xchg fwait adc fist mov (bad) jb (bad) rorb insb jg in loope xchg hlt adc xlat std jle xchg scas lea (bad) insl sti outsl or mov or fnstsw push adc clc jmp and mov mov cli (bad) rex.WR (bad) (bad) cmp mov sub mov sbbl sub push cmp xchg rex.WR fldl push mov andl (bad) in xor sbb mov xchg scas test adc addl xor push rex.WB jne jg stos jg fldcw lods sub mov push ror push (bad) (bad) (bad) mov xlat fimull lods xchg cmpsb gs jnp mov fsubs push jrcxz cmc xchg push ja std enterq scas mov xchg test mov outsl iret sti mov xchg xchg jp test jae insl mov mov sub out xchg (bad) xchg push mov enterq cmpxchg8b mov mov jg,pn outsl rex.WRX neg in mov (bad) mov out mov clc mov nop int3 cs movabs jmp (bad) (bad) sub xchg movl and (bad) (bad) mov movabs popfq (bad) cwtl rcrl xchg outsb iret xchg adc xor repz or cmpsl movl scas fs in rcll nop in addr32 retq jb rex.RX jo cltd or pop rex.XB sub iret jg leaveq xchg fwait jb (bad) addb or outsb mov adc sbb lahf fwait out push incb sbb sbb pop xchg cmp (bad) xchg movd jg int xchg (bad) lods lahf (bad) test pop mov mov jae scas push movabs mov mov (bad) rex.WRXB movabs loop xchg mov mov jge xchg sub repz out jmp pop xchg mov jmp orl and adc nop iret xchg xchg (bad) mov lea rex.XB push add (bad) notl push add retq mov sbb jns (bad) ffreep movabs xchg rcrb or leaveq (bad) (bad) (bad) mov rcrl mov sbbl out rex.WXB xchg in jns mov mov ja jg push mov int3 rex.RXB (bad) mov cmp jle add lods addr32 cmpsl xchg repz andl lret xchg add fwait cmp (bad) repz pop (bad) popfq lahf mov jge rex.WR xchg (bad) paddq mov mov mov jmp cmpsb xchg mov cmp xchg lahf adc mov mov (bad) scas (bad) scas sahf (bad) add repz testl mov cmp (bad) jmp rex.R rex.WXB mov retq cmpsb movslq enterq push pop lret (bad) sbbb (bad) ror cmp rorb sub xchg mov andl mov push or mov sub sahf adc out in or (bad) or lea movslq adc iret mov rex.WXB ja repz (bad) retq add xchg addr32 xchg jae (bad) lods (bad) movsb cltd loope mov mov rex.WXB xchg (bad) mov xchg jae or adc mov add sarl (bad) mov movabs (bad) js jg (bad) in mov sbb (bad) sti (bad) fisttp jae jmp xchg mov jmp movslq (bad) lret adcl rex.XB sahf sarl imul cmpsl pop (bad) cmpsl xchg xor loopne or out (bad) mov std xor xchg rex.WXB movabs (bad) (bad) cmp (bad) out imul imul mov jg mov mov scas clc cmpsl rex.WRXB idivl iret mov xor mov jg (bad) fildll (bad) pushq out mov std add rex.WRB rex.RX cmp adcw out pop cmpsl mov (bad) int3 xchg xchg cmp (bad) xchg jle (bad) out pmuludq shll (bad) leaveq (bad) scas jno orl xor js mov (bad) ja adcl (bad) mov lret fsubr lea std cmp out (bad) insl rex.WRXB adc sahf scas (bad) pop jge pop rex.WRXB xchg mov stos repz ja retq mov xchg (bad) test rex.RXB mov push imul rex.WXB sbb (bad) cmp mov mov movabs rolb xor fwait add xchg xor out sbb ja (bad) push sbb (bad) int in pop movabs sarl fimull jrcxz (bad) repz sahf movabs (bad) and (bad) loopne xchg (bad) mov rex.RXB fcoml push sub out mov (bad) mov stos movabs retq pop (bad) mov jnp retq (bad) rex.WRB fwait jg std rorl xchg mov leaveq mov movb jmp lea rex.WRX rcrb scas in xchg rex.X and lods movsb (bad) (bad) (bad) mov jmp mov rcrb xchg sti mov (bad) (bad) (bad) sarb mov pop or xstore-rng cmpsl (bad) mov sbb repz and mov in stos repz movabs adc push jg cvtps2pd push push fnsave (bad) mov mov movabs shrl mov mov flds movl adc (bad) sti mov outsb jg cmp jge movsl test (bad) notl adc cld fstl (bad) out psubb stc mov rex.RX gs mov xchg push fwait repz jmp imul popq lahf or sbb xor retq mov mov rex.WB pop (bad) (bad) (bad) jg outsb jg rex.WRX push (bad) (bad) mov xchg cltd (bad) cmpsl lea js jg push sub mov xor sub mov xchg push mov pop (bad) pushfq mov lahf (bad) stos mov retq je xchg (bad) rex.WRX mov xchg sbbl xchg or (bad) pushfq (bad) pop jl mov rex.XB (bad) addl sbb (bad) sti mov leaveq and jo mov push xor xchg nop (bad) (bad) in out xlat retq jbe jg jae push jns dec jp lahf shrb sub pop xor fucom (bad) pop adc xor and rex.RXB cmp fwait sbbb orl ss xchg orl add outsl xchg mov and (bad) pop adc pop jg (bad) pcmpeqd lea mov sahf push jmp fwait (bad) cmp (bad) repz rex.WB xchg xor add faddl stos (bad) (bad) mov icebp (bad) cmp (bad) xor xor (bad) jge sub in rex.WRB cs add xchg lods (bad) pushfq mov lods xchg jge sti push mov iret xchg movabs sahf rcrb fnsave mov sbb fisubl mov jae sbb fwait push jrcxz repz (bad) lods push repz repz outsb rex.XB cmpsb fwait xchg mov add rex.WXB adc xchg lahf cli or adcl fist movsl mov push (bad) xchg (bad) jo movabs mov adc pushq outsl (bad) (bad) (bad) push rex.RXB mov loop imul pop fcompl cvtps2pd scas xchg jg (bad) mov test movsl add rex.R lcall cmp rex.RXB mov sub sub rorb es mov fistpll mov mov xchg cmp xchg mov xchg (bad) loope rex.RB fwait cmpl retq sub xchg xchg lods lahf sahf data16 repz fwait movabs repz and (bad) push cli scas mov xchg fistp (bad) add or pop fildll sahf mov (bad) push pop add decb divl and mov xchg int3 (bad) xchg jmp push xchg imul mov test movslq mov mov jge test or imul cltd ja leaveq pop mov movslq (bad) sub out mov jnp xchg and mov xor mov mov sahf mov (bad) (bad) mov push pushfq (bad) pop sahf xchg jl lods rex.WB xchg (bad) rcr mov lea xchg ljmp xchg rex pop callq rex.WB mov adc (bad) test cmpsb jnp mov ficompl in jrcxz pop test cmp test xchg cmpsb push mov sbbl cmpsl cmpb (bad) iret or (bad) pop (bad) rex.WR (bad) cmp and sub xchg addr32 and jge icebp mov cmpsb rex.WXB rex.RXB jnp scas fnstcw (bad) sub mov lea xchg push mov xchg test subl mov mov out fsubrs es pop mov loop (bad) (bad) stc out (bad) cmp retq sbb and pop adc test out fisubl push xchg mov js xor out xor sub rex.RXB fmull fwait mov outsb xchg or orl pushfq mov (bad) mov (bad) or and adc (bad) scas sti (bad) push (bad) xchg mov pushfq jmp lea rex.WRX rcrb repz (bad) xchg (bad) cltd mov jrcxz sbb subl out pushfq ja mov xorl orl (bad) xor pushq add sbbl rorb cmpsl jmp sub (bad) (bad) xor (bad) cmp adc adc ds lea (bad) lods (bad) xchg mov ja mov and push (bad) out mov lahf add nop orl jmp xchg jg repz jae cmc mov lret sbb pop rex.WRXB leaveq push (bad) orl ja jmp outsb fistp pop xchg mov in adc mov pushfq jrcxz jmp cld mov mov cld movabs rcrl repz retq lahf ja test nop add (bad) xchg pop jle or xlat (bad) rex.WXB outsb mov mov jmpq push jae in rex.WXB gs in (bad) mov or mov rex.W sub (bad) xchg in subl xchg xchg (bad) xchg xchg (bad) notl mov out cwtl scas xchg movabs (bad) add sahf xlat out lea rep jmp cmpsb and addr32 xchg out scas (bad) cmpsl rex.WRXB adc sahf scas sti or push lods (bad) pop mov xchg outsb jg adc in (bad) setns pop (bad) rcpps in (bad) cmpsb int3 fwait xchg mov sbb pop jo (bad) movl stos jg (bad) test popfq rcll (bad) xor xchg sahf (bad) scas fwait xchg (bad) sti mov flds movabs xchg or rex.RXB cmp fmuls rex.RXB jo mov out push jp callq mov rex.XB sbb mov cmpsl xor int lret mov jp out fiadd (bad) sti mov rex.WRXB fwait out enterq adc mov (bad) jae (bad) stos xchg push xor mov movsl retq jg jg or adc (bad) (bad) repz mov mov imul sbb push (bad) mov iret xchg pop sub fnsave jge xchg lea mov lret sbb jrcxz mov lret retq mov movl or jrcxz rex movslq (bad) fiadd lahf adc incb iret scas rex.XB iret lahf rex xchg xchg out (bad) mov jbe pushq lods fistl sub mov cli movabs or outsb adcl (bad) mov push scas jg jge scas mov push iret pop (bad) adc xchg scas sahf and rex.WRXB lods xchg jge jbe mov mov idivl jg (bad) mov adc mov retq jae (bad) cli out jns push (bad) (bad) (bad) (bad) hlt fs mov adc pop jbe mov mov lods pop (bad) scas mov mov movntps cmc add (bad) xor add xlat mov xchg mov adc rex.WRXB xrelease adc scas sti xor addr32 imul cmp mov cmp jge rex.WRXB fwait mov mov (bad) lods (bad) (bad) mov int xor ffreep imul or fisttp (bad) (bad) sub xchg jge lahf add push in rex.X sti jle push jg rex.WRXB (bad) js addps andnps repz push out (bad) jp in outsl push add sbb adc mov popq xor mov xchg adc (bad) jg jge stos jge push (bad) sarb or cmpxchg jg xchg or stos scas jge jnp,pt xorb data16 outsb jge xor sbb jge imul mov (bad) or (bad) fistl jmpq fcoms (bad) push (bad) push enterq movabs sbb push (bad) xor jrcxz (bad) lods pop jge mov in (bad) cmpsb (bad) fwait push cmp cmpsl (bad) mov add jg addl fdivrl xchg cmp scas (bad) sbb enterq rex.X scas outsl xchg (bad) iret xchg and sub cmp cld xor xchg orps rex.RXB jns (bad) mov in fcmovu cmp mov retq mov (bad) fwait sti xlat imul sbb scas mov jle cmp mov (bad) outsb jg fnstcw cmpl imul movslq push lcall cmp cmp (bad) (bad) mov pop push mov mov movl cltd (bad) (bad) mov loope adc sbb adc cmpsl rex.RXB xor add mov cmp insl xchg (bad) (bad) int (bad) fldcw push cmpsl (bad) adc popfq cmpsb iret cs rex.RXB pop roll jge and outsl xchg mov mov sbb cmp std pop (bad) rex.WXB jbe stos retq stos mov (bad) lahf xchg rex.WRB retq lahf (bad) (bad) mov rex.WRXB xchg lret fsubs adc xchg jrcxz (bad) scas movabs jmp mov pop lea sub mov cmpsl mov or andl and fisttp bts mov or mov (bad) int mov mov sub pop xlat sub push rex.RB rex.WXB mov (bad) xchg mov (bad) lock xchg xchg cmp (bad) mov popfq (bad) (bad) jnp sub push int mov sbb jrcxz cmpsb push sarl jne (bad) sbb jne xchg (bad) pushfq (bad) mov (bad) (bad) rex.WRXB adc push adc adc std movabs xchg mov (bad) cmpsl (bad) jge xlat or (bad) xor mov fwait cltd flds mov mov sbb (bad) mov popfq adc in ja (bad) addr32 out sub out mov jb and jo jnp push decl loope xchg rex.WRXB cmp repz (bad) sahf mov sub mov rex.WRX jmpq movsl sarl movabs xchg mov (bad) sub xlat sub xlat or push xchg out sub jrcxz jrcxz pop xchg fwait shrl jrcxz xchg (bad) idivl add jmp (bad) xchg (bad) movsl pushq or popq mov idivl outsb (bad) push out cvttps2pi fildl jle rex.WB movsl mov (bad) mov mov and (bad) movabs and mov fimul xlat sbb (bad) movabs leaveq (bad) mul sbb xchg and test test movabs cmp rex.WRXB stos out jg fdecstp leaveq rex.WXB (bad) sahf push lods (bad) mov jno int3 xchg cwtl je in fsubl (bad) gs pushfq jmp mov rex.WRX lahf (bad) xlat sub jbe xchg jmp push xchg imul movabs xchg (bad) popq mov jnp insl jg xlat (bad) pushfq pop cmp movabs (bad) (bad) xchg pop cmp repz mov push mov mov pop fild out (bad) popfq lea repz divl mov in scas xchg pop (bad) popfq mov addr32 (bad) mov out jle movabs xchg and (bad) lcall jge in push nop rex.WRXB scas mov in scas pxor fadds rex.WRXB lcall mov rex.RXB leaveq jae out dec fsubl adc (bad) movabs stos xchg movabs lea addl jg ja (bad) xlat xor adc mov shll mov xchg fdivrs mov xchg xchg mov rex.RX xchg mov rex.WRXB (bad) ds lret (bad) jne jmpq (bad) test mov cmp and fstl test movabs enterq push xchg std xchg (bad) rex.WRXB cmpsl scas sub pop iret cltd mov mov loope (bad) adcl xchg xor fstl jp pop addb mov push or mov jo sub adc or lea push scas retq cmp loopne xchg sub movabs push sbb imull out jnp xchg mov repz (bad) mov rex.RXB (bad) (bad) add addr32 add cmp movslq cs adc cmp and (bad) sub pushfq int3 movabs xor out mov pushq (bad) xchg (bad) sbb int3 (bad) (bad) cmc fwait (bad) adc add jnp scas pop fwait push adc sub rex.WRXB jae in (bad) cmpsb test addr32 mov or in (bad) cmpsb out fwait vpsubusb mov xchg jp in pop rex.RB (bad) sub bsf (bad) stc rex.WRXB jae in mov fxch mov and pop xor (bad) adcl mov (bad) jmp pushfq xchg mov divb mov (bad) mov insl int jge rex.WRB fwait pop adc or jae in iret cmpsb mov mov cmpsl out loopne or mov (bad) sub jmpq popq cmpsb xor mov pop imul adc and jae in repz (bad) fwait cmpsl adc std out mov adc in rex.WRXB (bad) fwait xor adc fisttp jae out out jg cmp mov jge (bad) scas rex.WXB fwait ja enterq lahf (bad) (bad) scas rex.WRXB push insl out jge (bad) stos cmpsb cmp mov mov std (bad) (bad) sub mov push jge rex.WRB push fwait xor fdivr mov std jae in test adc psubusw mov cmovnp in pop cmpsb sub mov mov cmpsb movabs movq in stos cmpsb sub mov (bad) in cmpsl cmpsb jg pop lahf push (bad) imul mov jmpq cmpsb fstpl mov push jae rex.RXB sub sbb rex.WRXB jae in cmpsl lahf rex.WXB imul mov pushq fistpl shll sti push clc adc (bad) xor jg (bad) push addr32 popfq (bad) mov testl (bad) push addl push pop (bad) idivl mov adc lods iret xor (bad) lcall sahf insb sbb (bad) jmp callq outsl (bad) rex.WRXB jae in lret cmpsb rcrl sub jp lods (bad) iret decl leaveq xchg rex.WRXB jae in push cmpsb rex.XB fwait jno fsubs (bad) out add (bad) push cmpl (bad) jnp shll imul (bad) xchg rex.W in (bad) stos fnsave movslq rex.X sahf rorl (bad) mov (bad) (bad) iret pop retq rcll sbbl xchg jae in xchg cmpsb (bad) fwait xchg adc mov jae in jmp xchg fwait movabs xchg jae in xchg cmpsb push test mov xchg adc xor (bad) lods (bad) mov jg sub sti cltd xchg cmpsb (bad) adc pop lock (bad) lcall lods rcrl xlat in decl add xorl xchg mov mov (bad) mov sub or xchg loope rex.WXB repz jb (bad) lock (bad) push xlat seta (bad) mov fcoml movabs sar sub push cmp cmp movsb mov adcl movabs jne rcll cmc jno pop movsl test popfq jl ficompl jp cmpsb sub xchg and (bad) xchg (bad) out nop rex.WR push or mov orl pop jbe out xchg ffreep callq and push notl xchg pushq sti xchg (bad) cmp (bad) cwtl or (bad) rex.WRXB out sbb cmpsl sahf add test push cmp (bad) xchg rex.XB pop jnp sbb adc lahf add mov xchg or sub cld (bad) sbb cs and test (bad) push je cmpsl shrl rcrb addr32 pop jo or or and lahf lahf mov out loopne sti jno or xor sub jb cmp xchg retq scas out xchg outsb add pop mov jno xchg in sub fsts lret fstl movabs jne stc rex.WRX nop popfq enterq sahf cs jns fistl (bad) add (bad) loop lods xchg xchg adc mov (bad) retq cld mov cmpsl cmpb cmp movslq lods xor mov (bad) lret pushfq sbb jae mov rex.RXB test mov jg (bad) mov std mov movd jb rex.WB sbbb insb pop (bad) lcall imul adc pushfq mov mov out sub cmpsl out repz xchg jge xchg popfq and div xlat xchg popfq int3 int fbstp xlat ja xchg in (bad) xchg jnp lock rex.WRXB xchg (bad) pop (bad) xchg jo int3 fist (bad) pop push xchg adc and sub sbb (bad) add xchg sub rex.RB mov pop jle rex.WRX fldt add imul movabs xchg ja xor push jae pop imul push sbb retq rex.X xchg cwtl mov (bad) in and rex.RB rex.WR iret xchg je addr32 (bad) sub ja xor data16 pop adc mov pop cltd xchg mov out xchg sub mov in (bad) pushfq std test ja pop movabs (bad) or lea mov jne xchg (bad) xchg or (bad) adc callq (bad) lock xchg push pop cwtl (bad) cmp enterq popq sub and sbb rex.B rcl pop insl mov mov add sub out shl (bad) cli loop icebp popfq xchg scas (bad) mov cmp or and xchg movslq cli out xchg pop cmp mov pop std mov retq cld pushfq xor adc jmp int cmp pop pop mov and rex.RX sbb sti test mov mov xchg test cmp rex.WRB fdivr (bad) (bad) push adc rex.WX xor xchg fcoml mov add in xchg push loopne int pop add cmpsl (bad) fdivrl sub add cmp push mov rex.XB rex.RX and xchg pushq movabs test pop push popfq test mov xlat mov (bad) xchg retq (bad) sbb and rclb and loope,pt test retq sub mov xchg rorl xchg sub notl xchg mov xchg movabs movl (bad) jo adc jno sahf imul push rex.X jge xchg sub sub test pushq add mov sub sbb (bad) out (bad) movslq movslq xor fdivrl rex.XB fidiv es xchg xor jmp mov or and rex.RB sbb cli cmp mov mov rex.W xchg (bad) sbb pop retq scas xlat (bad) (bad) ds add push icebp (bad) pushq or scas (bad) out add ds fsubs jp jge cmc sar xchg cmpsb xchg xchg in xchg adc out sbb data16 fstl (bad) cwtl sbb sti mov cmp loop mov xchg jne leaveq (bad) jnp cmp xchg stos mov cmc push (bad) fs mov addr32 movabs sti rex.X mov rex.WXB es jnp pushq push leaveq rcl movabs and and (bad) clc mov lea xchg xor fs add add rclb cwtl mov mov mov mov mov adc add push cmp mov sub fcompl cmp jp cmp add in int3 pop pushq outsl movsl add rcr mov jnp (bad) movsb loope lahf or push xchg cmp jle lock pushq add imul or mov xchg and mov and sbb cmp pushq mov (bad) rcll pop in movabs imul rex.RXB sbb (bad) out cmpsl mov int3 xchg mov (bad) ss xchg test lret cmc push rcll rex.WRXB repz rclb fwait out mov adc or sub (bad) stc mov imul add or out test movabs jo adc ja jne imul lret pop (bad) mov (bad) repz retq or sahf xchg fiadd rex.WXB sbb jp in add push xchg xor xchg jmpq rex.WR xchg test pop pop (bad) pushfq sub (bad) lcall int or movabs sub sti xchg pop mov loopne gs jnp jno xor movsb addr32 pop in sti (bad) (bad) (bad) fstpt jb xchg xchg scas mov lret fwait sub mov and iret std popfq xchg rex.X rex.WR loop add mov pushq mov cwtl or push add xchg jb xorl mov iret movsl xchg jns xchg nop mov (bad) out mov or (bad) rex.WX ss lods movabs pushq xchg or (bad) xchg sahf add mov lahf mov div jge rcrl or jae movsb sbb stos (bad) and rex.W (bad) mov rex.R xchg sub cmp mov cmp push sub (bad) mov mov (bad) jmp (bad) xor enterq xor sbb (bad) cmpsl outsl lahf (bad) sahf cmp cmp add cmp andl adc fidivr push (bad) sub rex.XB in jnp ja (bad) jge mov retq xlat (bad) repnz lock insb xchg push mov imul adc mov cltd xchg (bad) out cmp push popfq and jmpq xchg xchg loopne callq mov and push jle xchg adc cld sbb (bad) xor fistpll rclb (bad) rex.RXB adc rex.B xchg add push jo (bad) mov xchg rex.WRX mov sahf (bad) sarl (bad) outsb rex.RX fcomi xchg sbb loop cltd iret mov or (bad) pop hlt rex.X and xor xchg imul pushq movabs add (bad) xchg push (bad) vxorps shll js leaveq xchg adc mov or xchg fnop xor shl (bad) xchg and (bad) xor loop callq lods orb mov jae rex.RX push cs xchg fild xor iret xchg jnp outsl pop iret add and xchg lods sbb jg xlat scas out cwtl sbb xchg sbb cs xor stos (bad) outsb (bad) xchg shll mov std xchg repnz movabs pushfq rex.B je (bad) or xchg pushq fmuls movabs lea xchg mov xchg sahf jb test push pxor cmp mov movabs adc jmp lods ds imul js mull cwtl push push (bad) adc (bad) cs xchg and rex.WX xchg xchg cmp cmp (bad) xchg nop leaveq imul sub jno lods shlb jl jbe (bad) rex.RX fwait imul push test imul in xor mov out cltd cmp sbb int3 pushfq outsl rex.WXB mov or in fmull movabs jle rex.WX sahf pop mov (bad) std xchg mov rex.R mov sbb xchg sti fwait cltd stc repnz lods mov jge repz mov pop cs xchg mov (bad) je xor int icebp fistpl xchg sti jg adc cmpsb cs xor lea xchg mov out rex.WRB xchg pop out jmpq in pushfq retq mov jg movabs pop imul push pushfq stos mov cmc out adcl xchg or xor cwtl pop sbb mov (bad) add nop jns and cwtl push jno xor xchg jo sarb mov sahf rex.WX adc adc (bad) lea (bad) and movabs rex.WR xchg rex.WX clc xchg rex.RX rcll (bad) (bad) (bad) xchg (bad) sbbb jnp clc xchg outsl mov test xor fwait xlat adc cmpsb mov insb xchg int3 and movslq sbb sahf and ficoml test (bad) insb jrcxz movslq cmp cmc out out pop add fnstsw (bad) sbb (bad) outsb movabs pop rex.WRB rolb adc movslq cwtl pushq xchg js mov sahf sbb xor (bad) jg (bad) ss xchg int xchg je rex.WR xchg loope xchg xchg sbb xchg js div (bad) cmpsl (bad) pop nop fwait cmp add cmpsl xchg je imul clc in (bad) (bad) xchg fisttpl rex.WRX sbb mov sbb push pop jae pop rex.WX xchg (bad) or jp cmpb ds js clc (bad) (bad) in mov mov cmp (bad) stos (bad) in lret xchg xchg xor or out test add movabs fwait cmp fcomps mov movsb xchg xchg outsb xor or (bad) addr32 sti cmc xchg mov cwtl cmp hlt adc jb (bad) pop test xchg pushq pop or cmpsl (bad) (bad) xor mov icebp leaveq pushq lods lea jbe (bad) rcrl push push adcb jmpq sbb fwait rex.WB mov xchg (bad) (bad) xor cwtl jnp mov cmc xchg cmpsb movb add fnstsw sbb push sahf xchg lea idivl imul mov scas xchg (bad) (bad) push rex.R rex sahf jmpq es xchg andl in mov mov jge pop xchg hlt rex.WXB (bad) xlat rex.W movsl mov insb (bad) rex.WB or pop xchg and and cwtl cmp xchg movsb (bad) adc lret pop faddl or xchg cmp or sbb xchg and xchg lret fwait lods ficompl sahf rex.WR mov xchg leaveq (bad) (bad) push rex.RB pop xor push (bad) xor out (bad) (bad) pop out movabs push fstpt xchg jmp rex.RXB jrcxz push (bad) nop push push (bad) out add xlat (bad) mov xchg insl jnp rex.R out pop jno xchg add out out xchg xchg fistpll and push push fsubrl add sti in pop test pop mov push xchg cmp cmpsl mov mov cld cwtl pop fcomps xor rex.RXB sub insb xchg ficomp mov xchg pushq out rclb sbb sbbb movabs add (bad) pushq cmp mov je cmpsl rex.WB push movsl mov sub ja xchg or adc jg test or xor (bad) pop cmp cwtl rex.X xchg mov mov add and mov in xchg fdivs lea and jmpq xchg jg imul and mov push test xor cmp and or or stos xlat cmp rex.WRX rex.W repnz xchg ds movabs or enterq push lock jmp xchg pop mov test lahf lods loope mov rol cmp jb rolb movslq stos xlat out rex.WR rex.RX cs rex.X sub sti jle sahf (bad) scas sbb xchg jmpq ja rex.RB pop data16 sbb mov std lahf xchg cld popfq jnp (bad) (bad) div (bad) or xchg shrb ja out jne (bad) sub mov (bad) mov (bad) scas int3 mov scas sti rex.WRB mov pushq lea adc add cwtl xor mov lods leaveq mov (bad) push (bad) movsb cwtl (bad) sahf movabs lret (bad) fisubr cmp push (bad) out lods pop sarb xchg outsl mov sti pushq test test sbb pop mov mov nop (bad) and cli sbb cmp pop out (bad) (bad) and add adc outsl lock test pushq xchg (bad) adc cmp push xor xchg movabs xchg outsl in sahf es imulb sub cwtl rex.RX (bad) and pop scas movabs mov mov or sbb pop movabs (bad) sbb lods rolb xchg xchg adc cltd jle (bad) js loop xchg mov je jbe push out xchg (bad) cmpsl (bad) insb fldcw xchg cmp pushq rex.WRX mov (bad) out (bad) repnz loope add cmpsb adc xchg rex.WB addr32 push (bad) (bad) in xchg xchg movabs jne ss lahf rdtsc jrcxz xchg cld stc jmp (bad) addl loop enterq pushq cld imul adc xchg jg cmp lods or mov repz add cwtl sbb mov (bad) pop clc lahf xchg (bad) movsl or (bad) pop jg xchg (bad) loopne sub fcompl nop adc jp push out jl ja fwait mov mov push hlt and sahf shll (bad) or adc pop (bad) sub hlt imul cwtl mov jmpq mov (bad) xchg jns jg sbb test sahf out (bad) sbb adc outsl shlb sbb imul sub adcl cli xchg cmc retq mov mov out cwtl jge (bad) in (bad) xchg cmp mov jae mov repnz test pushq xchg outsl pop (bad) pop (bad) shlb add xor ja jne xchg (bad) rex.WX mov pushfq in shrb sbb (bad) mov mov rex.WXB lret test mov insl (bad) movabs sbb (bad) mov fimul jne or rex.WB sbb jae pushfq xchg addr32 (bad) xchg repnz adc mov repz std mov divl movsl insb clc xchg movabs mov xchg addl xchg jns (bad) (bad) xchg movslq jno lret push (bad) sub (bad) add and movabs std rex.X popfq sub lahf out mov loopne xchg movslq fs out adc lahf jae pushfq fwait pop cmp out maskmovq jnp xlat ja outsb movl outsl (bad) sbb or (bad) mov in (bad) jne and xchg rex.RXB rex.WRXB sahf lods mov pop mov (bad) or pushq push sub pushfq (bad) lret rex.R rex.WR cmpsb rex.B je cltd xchg push out rex.W xchg (bad) scas rex.RB ffreep rorl (bad) xchg clc movl (bad) out ja sub jmpq pop (bad) mov pop xchg callq xchg faddl test adc jo cwtl jmp sahf xchg xchg (bad) pop sbbl cwtl sbb sbb and xor jnp shl pop pop push (bad) or push (bad) movabs (bad) mov (bad) out lahf test (bad) jb insb pop add push adc rex.XB and mov popfq (bad) dec xchg mov lods icebp add lret pushq in sti movabs xchg movabs rex.X gs pop or ja sbb sbb insb std (bad) decl pop lret sahf (bad) (bad) es mov out jbe xchg lretq pop out cltd repz sub out callq retq mov (bad) mov clc sti movsl mov sbb push pop lock jg (bad) xchg iret rex.WXB rex.RX cmpsb retq jmpq movl retw rcrb (bad) punpckhbw xchg sub and fimull fcoms and movabs sahf addr32 xlat lock scas nop rex.W cmpsb pushq fistl (bad) xchg pop rex.WRXB jae fstl (bad) sahf mov (bad) mov addb xchg xchg test xchg (bad) jns push shlb adc test rex.XB xor test push movsb jmpq nop sub cmp jge jrcxz pushq adc int3 (bad) mov xchg xchg stos popfq adc xchg (bad) subb add (bad) mov idivb jrcxz xchg (bad) movsb outsl unpcklps (bad) push (bad) retq sbb (bad) nop (bad) mov sbb mov pushfq (bad) hlt (bad) (bad) test cwtl xor (bad) (bad) subb xor rex.X xchg insb (bad) mov cmp (bad) in mov frstor pushfq rex add rex.W out sbb (bad) xor xchg sub or xchg test jno mov (bad) sbb jg xchg sub push (bad) and scas xchg (bad) (bad) stos xor mov adc xlat adc xchg in rex.RX rex.XB gs (bad) cmpsb xchg and cld (bad) pop add (bad) andb cs jl imul xchg mov std rex.WRX push jmp int3 pushq xor adc xchg (bad) or (bad) mov stos mov (bad) jno insb sub out (bad) mov imul mov rex.X xchg jmpq xchg retq stc xchg mov adcl mov lods add (bad) add (bad) pop (bad) ja mov sbb mov xor lods adc test and and fwait xchg in movsl fisubrl pop (bad) rex.RXB (bad) mov rcr (bad) jmpq in sbb test test (bad) (bad) (bad) (bad) xchg movsl and pop push movslq rex.WR js rolb cmp fcoml (bad) mov jp (bad) push stos shll or and rdmsr xor cmp or add add (bad) mov (bad) (bad) sub jge sub (bad) xor callq pop xchg iret pushq xchg jle outsb inc imul movslq sbb outsb rex.X (bad) jmpq insl lcall and mov mov pushfq fidiv test shll bts push bsr and mov inc sub movsbw lea movsbl mov lea jmpq jmpq jmpq sbb (bad) callq adc sbb cmp icebp (bad) adc xchg rex.RXB mov sub pop pop cwtl xchg rex.WR jle push data16 (bad) pushq imul mov adc jne movabs pop pop (bad) xchg lods lret mov icebp sti xchg add sub out xchg or rex xlat xchg neg add cmp iret andl gs (bad) (bad) decb (bad) (bad) (bad) pushq sbb test pop movslq icebp push adc cmc mov mov rcll xchg stos in xor jle lret pop push out xchg repnz (bad) addr32 popfq (bad) or rex.RB mov pushq add lock mov jmpq jmpq xchg enterq fwait (bad) push push add lock gs cli xchg push pop (bad) (bad) icebp test rex.WX sti xchg callq iret mov (bad) sub xor repnz leaveq nop lret (bad) xchg sbb movabs (bad) cmpsb movabs hlt or or cli out or nop sub xchg xor out movabs rex.WRXB ficom add add mov hlt jb push retq mov rex.XB (bad) outsl and mov jl push and movabs cs or sub insl (bad) cmp (bad) mov sbb cli add je jmpq je clc stc test test cmp jmpq mov lea jmpq (bad) rex.XB mov jmp rcll xorl hlt push pop test mov sbb (bad) sub xchg jbe cmp add add (bad) rex.RB retq imul (bad) xchg stos push je xchg push or rex.WRXB rex.WXB movabs rex.WX sahf cmp (bad) cmpb pop push adc xchg adc imul in sar (bad) (bad) sti decl (bad) rex.XB lock (bad) (bad) (bad) callq mov push add lock test (bad) rex.WB add pushq imul clc pop nop rex (bad) test and sub push ds callq popfq ss mov stos add xchg xchg add insb xor retq mov mov (bad) rex.WRX incl jmpq jmpq out adcb sub sti jrcxz movabs rex.WX test flds scas clc jmp sub leaveq out cmpl adc sbb cmp xor or adc out rex.WRXB mov adc (bad) (bad) sar cwtl rex.WRXB jrcxz (bad) pop movsb add rex.B mov cli rex.RB sub or (bad) (bad) (bad) (bad) (bad) mov push cs adc push (bad) stc xchg rex.WB and add add loop push rex.RX fs rex.WXB orl mov xorl iret out mov gs (bad) iret popfq cltd add pop adc (bad) retq rex.XB (bad) xchg jg mov xchg (bad) lock mov mov and loope sub cmc cmp cmp jmpq add addl rcrl std adc (bad) pop mov sbb jns (bad) mov xor testb or test (bad) jp cmc stc je lahf rex.WXB and rex.WB sbb in (bad) sub jl rex.W addr32 jne imul in enterq loop mov loop pushq movabs mulb sub and hlt (bad) (bad) (bad) (bad) (bad) sti sbb (bad) (bad) incb ja cmp sub mov or mov (bad) (bad) (bad) incl test and xchg sbb add and jrcxz hlt rex.WRXB rex.WRB movabs xchg notb stos mov roll or ja (bad) push (bad) rolb sbb mov or xor cs insb add adc cld decl test retq verr movsb loopne xor sbb neg not mov cmc xor dec neg add not sete setns jmpq setp lods jmpq bt popfw jmpq ja neg sub shl rol not ror add clc cmc mov (bad) lock cmc bt stc bt repnz jmpq mov dec mov mov jmpq (bad) xchg clc sub and mov cbtw (bad) mov xor in add fwait sub fcoml mov push mov stos movl lock (bad) cmc xchg popfq mov out sub push rex (bad) cmp (bad) (bad) std lods leaveq fiaddl rorl cmc test insl add std xchg cmp add (bad) (bad) push rex.W jbe xchg pop mov pushfq push (bad) jns mov or movslq (bad) mov callq rex.RX cld add rex.X jne div lods xchg cli or (bad) mov add add cmc jmpq callq (bad) pop rex.WRX and jne push rex.X xchg pushq pop sub (bad) cmc xchg rex.WR icebp cmpsb sbb in (bad) fbld rcrl int sahf add shr rol cmc (bad) divl mov lods lea or out sub imull rex.RX push sbb pop (bad) (bad) (bad) cld sbb (bad) (bad) incl icebp movabs ds add hlt mov fsubrs rex.WB stc rex.WB rex.WB sahf lods sbb movsb push ja (bad) (bad) jae (bad) shld out rex mov ffreep rex.WRXB push and add add add repz jb xor mov hlt (bad) loopne jb mov (bad) cmp xlat je fildll nop mov nop sbb jmpq shll (bad) mov sahf mov mov jmpq jmpq jne test test movb cmp stc bt test jmpq clc xor jmpq lods jmpq cmc jmpq jmpq xor cmp cmp mov cmc cmp push btr or adc sar mov clc clc test sub jmpq mov cmc test jmpq jb cmp cmc cmp cmpb jmpq jmpq jmpq movsl push xchg (bad) sti leaveq cmpsl xlat rex.R hlt (bad) in insl sets rex.RX iret stc movabs jmp out xchg pop pop movabs icebp out mov mov jbe jnp (bad) mov loopne outsl rex.X jb xchg sbb (bad) sahf cmp rex.RXB js xchg mov pushq (bad) cmpsb sbb es sub (bad) (bad) std or xor retq (bad) (bad) fnstsw (bad) xchg mov (bad) (bad) std rex.WB mov fwait xor add je out (bad) rex.WR addr32 and es xchg add sbb (bad) mull push sarl mov xchg xchg out (bad) (bad) cmp sarb (bad) mov pop insl xchg (bad) push repnz pop xchg mov (bad) stos nop stc loopne movhps mov jge rcl or sbb push rex.WRX (bad) in incb or or insb jne push jl pop (bad) sarl or fnstsw (bad) jmpq (bad) push (bad) rex.RXB xchg fs movslq adc pop jb adc cli pushfq sbb ds movsl lea xor outsb (bad) xchg in shrb mov xchg mov out (bad) mov mov adc (bad) mov adc movsl mulb ja mov or (bad) or push cmp sub loopne mov std xchg idiv pushfq adc add jo push sbb retq jno xor mov sahf outsl (bad) add imul and adc fs xchg imul (bad) cld nop rex.W jge (bad) (bad) (bad) jns push in sub (bad) cmc popfq cmpsl mov (bad) sbb mov mov cli stc movsb add je outsw rex.RXB fadds xchg mov or jno fisubl add and movsb lretq insl test xchg rex.B outsl jge test fadds negl jae callq fidiv notb cmp rex.B or pop or (bad) jle jg mov mov jne bt stc test bt movb test test jmpq insb out callq jbe loopne lods iret xor movslq xchg pushfq or mov push (bad) pushfq xchg (bad) data16 (bad) xor rex.WR rex.WR pop mov (bad) (bad) adc ss callq xchg (bad) xchg xchg push and lea xor mov adc and pushfq sub scas and leaveq jmpq add mov imul (bad) (bad) (bad) sti rex.WRB rex.W decb int3 mov xor pop clc shrl not mov (bad) dec cmp xor rex.WRX insb out xchg pushfq (bad) add loop pushfq xchg cli (bad) add mov push (bad) mov fnstsw mov gs out movaps fs test add mov retq movabs (bad) popfw jmpq movabs jrcxz clc sbb xchg out sbb std callq xor sbb xor (bad) and cs jae and pop fmull hlt outsl (bad) clc pop xchg fchs xchg mov retq or lret popfq rex.RB (bad) sub mov xor cld (bad) loopne inc push rex.WRB movsl (bad) imul add pop fs (bad) (bad) sti loope rex.XB (bad) (bad) (bad) dec (bad) and jne enterq ss addr32 mov adc add add xor (bad) sbb xchg mov sbb rex.B fistpll fdivrs mov push xchg scas mov rex.RB rex.RXB xchg add cmp in xchg mov mov jae stc cmc add jmpq jmpq jmpq jmpq jmpq jmpq push push xor xor fs insb add hlt jmpq clc test clc xor cmc cmc jmpq mov retq callq rcr stc lea cmc add sbb rcr bsf mov test cmc cmpb jmpq jne ror neg mov movzbw neg not clc sub lea bsr mov cmp test cmp sub stc stc pushq stc clc cmp jmpq jmpq ror jge not jmpq clc jmpq add rex.RXB gs movslq imul imul movslq (bad) add jmpq jmpq callq jmpq push lock std std test xchg pushq mov retq je pop (bad) int (bad) jge outsl xchg pushfq mov (bad) (bad) ss popfq scas sub jge or jno rex.WRX rex.WR and (bad) pop pop retq out sub test out fstl add std (bad) rex.RX in xchg (bad) cmpsl test in (bad) insl mov or (bad) leaveq adc jmp sbb rex.RX add jmpq shr cmp mov sar bt add add (bad) mull stos sti add bt mov clc shr cmc cmp jmpq and retq ja push cmc push rex.WRX and xchg sub (bad) (bad) xor (bad) (bad) in cmp mov (bad) ja or add push rex.RX mov (bad) xchg mov sub mov add push sbb in imull jl (bad) add xor movabs rex.RXB sub xor push cli movsb rclb imul (bad) (bad) sti (bad) js movabs sbb movsb (bad) lods mov (bad) rex.WB cwtl cwtl rex.WRX (bad) (bad) incl imul cmp or je fistp sbb rex.WRXB mov rex.WX rex loopne pushfq mov out notl xchg jo rex.WRXB es nop negl lret shl xchg mov and add je or bswap bts mov or shl or mov add bts xor mov test stc test jmpq jmpq in xor xor pop (bad) nop pop push clc movabs addr32 (bad) cli fisttp (bad) (bad) (bad) (bad) cmp (bad) mov xor rcrb mov adc or cwtl add in test or mov mov test enterq rolb loope (bad) xchg scas mov es jmpq (bad) std std sub sbb pop cmp add mov loope scas (bad) mul repz pop (bad) stos (bad) xlat data16 add pop (bad) sub rex.WR sub sub pop lret mov jae insb pushq retq repz retq add movsl stos verw hlt (bad) add cmc repnz jmpq ja jmpq stc jmpq sub int3 (bad) (bad) xchg adc pop pop pushfq sbb pop push xor jae lret and outsl add mov mov rorb jne xchg mov test movabs mov fdivrl add pop adc movzwl add in (bad) (bad) (bad) cli mov retq push (bad) (bad) (bad) std movabs je mov (bad) subl (bad) or push sub int3 (bad) xor sbb mov repnz pop rex jg test push jae xchg mov rex ss add rex.X cli fwait lods roll cmp cmp fnstcw jl or test (bad) retq xor rex.WX xchg mov (bad) mov sbb insl ja imul shrb test data16 in or sub fildl xor retq (bad) loopne add and imul mov loope ja jnp stos (bad) jrcxz push lock (bad) jae adc (bad) (bad) (bad) sti shrb (bad) (bad) test gs fisttpl fisubl outsb mov and (bad) callq and iret out repz xchg in outsb push mov and nop cmpsb adc jle jge or in rolb (bad) mov jnp push cmp or loopne movabs pop test (bad) insb jl test cld sub test and movsl xchg or imulb rex.WX jmpq sbb test repnz out test cmp push lods and mov mov icebp (bad) cmp rex.B es xor cmp std adc sub xor mov jno mov movsl (bad) (bad) hlt rex.WB push rex.WRX xchg (bad) add sbb jmpq test or sbb jb fstps push clc pop rex.R mov cmpsl xor movabs (bad) sti mov jl out (bad) (bad) (bad) (bad) jb rex.R (bad) jne frstpm(287 in loope jns or (bad) push add (bad) xor (bad) sub push cmp xor push retq add int lock and (bad) lock std popfq rol xchg stc fisttp lock (bad) mov cmpsl (bad) (bad) adc sbbl rex.WXB add jae jne leaveq sub pop ss xchg hlt jmpq cmc (bad) mov jb notb (bad) rex.WR je adc or retq fcomps xchg and scas rex.RXB or mov movabs and movabs xor pushq and stc rcrb lret jl (bad) (bad) (bad) cli out add add (bad) (bad) (bad) std xlat rex rex.WX lret out rex.XB adc sti rol (bad) (bad) (bad) mov cwtl mov or (bad) (bad) (bad) (bad) mov push or movd (bad) xchg repz out ror (bad) fcoml and mov push retq out rex.WRX (bad) cwtl in lock (bad) test mov mov (bad) sarb test stc btr not push setne rol mov sub ror setns sub setae lea jmpq jmpq adc retq sub mov retw test test add mov in fdivl (bad) adc add mov rex.WRX xchg sub xchg push mov (bad) sbb shll xor jbe (bad) (bad) rex.WXB sbb movabs sub rex.WB fisubrl jp (bad) scas xor (bad) (bad) std xchg gs movabs jp pop enterq or rex.WXB push (bad) (bad) outsl sub add pop (bad) push (bad) lock loope (bad) outsb shrl mov or and in jns sub push test rex.R add test push pop and (bad) mov add pop mov sar movsb adc retq stos iret cmp cltd mov xlat fidiv mov (bad) insb push movslq jle cmpsb fwait xchg adc (bad) mov roll rex.XB movsl (bad) loop imul xchg jl and retq sbb outsb test in lods mov ss jno hlt ss (bad) (bad) (bad) (bad) cld callq (bad) (bad) (bad) std rcll jmp xchg shll adc sarl pop cmc fmuls rex.W loop and rex.WRX ficoml rex.WX repz (bad) xor ds rex.WR incb push xchg imul jle (bad) or jne pushq (bad) (bad) xchg test (bad) jae mov push cmp lret insl rex.XB movslq addr32 mov outsb (bad) adc insl (bad) rex.R lret stos movslq (bad) (bad) inc loope (bad) or cwtl incb int3 (bad) mov fistp rex.WRB rex.W jg or add adc push sub fmulp imul mov add std ss wbinvd mov rolb test mov (bad) pushq and test nop sub rex.R add mov roll mov enterq sahf jmpq outsl stos (bad) xor jmp mov and stos rex.W jne or push stos fsubrp mov pop icebp callq imul rorl push xchg sbb cmpsl rol lock xchg cmpsl rex.WRX mov out jae ja mov (bad) mov jge out repnz lea xchg add cs lods xor (bad) or jle jae mov movsb cltd jnp (bad) rex.WRX test movabs mov and jp sub in mov add add push xchg sbb push jp xor js fldl push repz sbb fistpll out (bad) mov clc (bad) rex gs jb movsl fiaddl movabs jb insl outsl (bad) add cwtl cli callq mov leaveq sub xchg stc cmp jmpq sti ds sbb loop xor rex.WR scas rex.WX rex sbb mov rcrl or adc cmpsb rcrb (bad) jmpq stos sbb mov fcmovnb jnp (bad) pop jbe shlb test int3 mov ss mov (bad) (bad) add pushq sti fldt and push (bad) (bad) (bad) inc imul and lahf (bad) or adc xlat (bad) (bad) adc mov (bad) mov punpckldq push or nop push or jp add add rex.WX (bad) (bad) mov jp xchg mov or sbb (bad) test test cmc (bad) scas xchg cld sub or xor insb enterq (bad) mov leaveq fdivp out xchg mov clc clc cmp cmp repnz jmpq ja dec dec add bt inc neg add dec adc (bad) repz xchg not (bad) repz or sub mov jmpq clc stc imul cmc bt add jmpq xor mov push rex.RB push jbe fisubrl cltd negl mov callq adc pushq xchg rex.WX add adc cmp sarb rex.X scas add rex.RB sub push nopl mov enterq jbe add lret insb mov jae test xchg sub sar (bad) sti test cmp (bad) (bad) (bad) (bad) outsb add jrcxz cwtl (bad) cmp cs sahf sar (bad) (bad) (bad) in stc xchg mov scas adc xchg mov (bad) stos adc mov (bad) ja repnz sti (bad) xor pushfq lods sarb sub fwait xor and rex.RX jl scas popfq rolb rex.WB pop fsubs lret rex.WXB lret lods leaveq bt stc sub cmp cmc stc clc cmp jmpq mov lea lea pop xchg movsbl bswap mov lea xchg not not mov not lea jmpq jae jmpq jns insl xchg sbb or push jae pop cwtl and rex.WXB stos rex.XB rex.XB (bad) pop cmp jg loope imul (bad) add sbb (bad) (bad) mov rex.WX rex.WRXB enterq shrl int add cmpl rex divl mov pop jmp and mov (bad) (bad) (bad) sti decl movsb (bad) (bad) (bad) (bad) callq rex.WB (bad) lret sbb in add add pushq (bad) cmpl cwtl jp jae out (bad) int3 mov pop cltd mov loope xchg lods enterq insb jp cltd mov adc xchg cld jae jns popfq lea hlt cs mov int3 out and ja test in movzbl push xchg mov rcl rcl sub jmpq jae and shl clc neg mov rcl shr add mov mov mov jmpq rex.RX sbb mov repnz xchg outsb mov (bad) icebp clc movabs nop rex.WR rex.R ja (bad) in (bad) fldt (bad) sub (bad) push pop int (bad) xchg mov add test mov xchg rex.WXB loopne rex.W cli rex.WB sub sbb pop insl xor stos enterq out stc fmul (bad) (bad) (bad) sti mov jl cmp (bad) (bad) popfq jrcxz popfq popfq or sub add add insl xchg test mov sub cmc add (bad) (bad) xor sub and (bad) movabs stos mov loope rex in (bad) repnz (bad) sahf hlt movsb (bad) pop xchg mov add (bad) int rex.RB cmp xchg cmp inc fadds mov stc inc sub btr neg add add lea cmc mov sets ror shr shl mov cmp clc clc bt repnz jmpq movb cmp clc test jmpq sub data16 testb rcr rol mov clc jmpq jp jae jmpq jne cmp add rcr mov clc jmpq jne clc cmc stc movb cmp jmpq xchg movzbw mov jmpq jne xadd ror inc bsr mov btr sub sbb sar mov jmpq jmpq jo jae bt clc mov jmpq add mov out or insb (bad) testl fisttp sbb (bad) movabs xor (bad) enterq insb pop xor jns lock rolb movabs scas add sbb cs xchg add or or loopne (bad) add movabs xor in (bad) mov lods sub adc (bad) adc (bad) (bad) std or adc (bad) (bad) std and cltd test add add mov rex.B push imul in pop rex.B rex.X sub adc out out callq sbb movabs adc mov or push add rex.WRX adc ja in icebp movslq mov iret scas rex add shlb imul test mov pop lods sub xchg jg enterq div test movslq pushq xor rex.WRXB scas mov xchg sti movsb sub addr32 (bad) cmp loop pushfq xchg adc sarb addr32 sbb je cld insl cs (bad) scas xchg jo or negb (bad) iret rex.WX enterq str xchg (bad) add jno jmpq (bad) mov out mov (bad) negl outsl add fsubp fisubrl (bad) rex.W clc fidivr xor rex.X sbb in fxch repz and (bad) lock cmp add sbb add add lahf lock (bad) retq mov loopne and cltd fidiv cmp pop es add hlt fldt xlat mov test mov pop es jge mov mov (bad) (bad) (bad) (bad) movabs or fcoml retq add add and xchg xchg shr push repnz movabs and (bad) (bad) (bad) mov (bad) out (bad) mov jmp mov sbb retq (bad) cmp cld iret mov shl (bad) cmp in ljmp retq jg rex.RX sahf rex.W push test fcmove cli out movabs xor pop (bad) and loop cld out (bad) (bad) mov nop sbb (bad) sbb (bad) sti in data16 insl cld jle lret cwtl pop jnp rex.WXB fldl push mov xchg test js in (bad) (bad) (bad) cld outsb cltd out mov (bad) (bad) callq mov movabs movsl jle jo adc adc std mov rcr xchg popfq mov leaveq add fstl pop movsl popfq leaveq or mov rex.X pushq add push xor xchg cmp rex.RB cmp xor sbb mov add in jne mov xchg enterq rex.RX cmp xor repz retq push sbb xchg ja (bad) cmp je mov rcrl (bad) cs mov jmp enterq cmp mov rex.RB (bad) sub outsl xchg adc mov cwtl dec (bad) or mov ds sbbb jmpq pop clc in nop in xchg and notb rex.RX imul (bad) cmp or jns adc mov cmp (bad) rex.X (bad) mov std jne and (bad) (bad) (bad) sti pop insl jg cmp (bad) (bad) pop jp fdivr rex.WRXB rolb movsl scas mov and (bad) (bad) (bad) fldcw repz cmp jmp popfq add jno jl int ss push (bad) (bad) lret cmpsl (bad) pop je and mov push pop (bad) callq rcr mov (bad) mov pop xor (bad) shrb pop add mov cmp bt sub test jmpq jne (bad) icebp add not lea sub test shrd mov cmc sub test test pushq stc cmp jmpq repnz jmpq callq jmpq je mov or lea push shl neg (bad) icebp add bts mov bsf sub setns sets lea jmpq jmpq jmpq stos jmpq rex.XB (bad) div loop (bad) mov (bad) mov sbb mov lea shrb int3 xchg rex.WX jl mov loop loope outsl (bad) adc add push pmulhuw push cmp rex.RB fiadd rex.X xor xchg jmpq cmp rex.R xchg (bad) sub in fcmovb icebp or sub adc stos and orl test (bad) imul sti ss hlt rex.B (bad) (bad) (bad) (bad) mov rex.RXB cmp pop adc (bad) (bad) lcall (bad) (bad) loopne rex (bad) imul (bad) adc (bad) cs and stc sub or (bad) stos or push xlat mov cld pop ss out hlt xchg (bad) jbe mov (bad) (bad) repnz bswap movsbl mov jmpq jmpq bt cmc clc rol stc neg jmpq je jmpq test jmpq neg add bsr test rcl sub jmpq jne bt movb clc cmp cmp cmc test jmpq jne jrcxz in lods xchg iret jmpq loop or imul in cld loope cmp lock (bad) sbb ljmp add rex.WRB mov lock push rex.B sub xor (bad) adc shrl addr32 lods popfq sbb in (bad) xchg sub jno leaveq (bad) add xlat rex.B (bad) ficom lods push mov std push rex.WXB (bad) xchg cmp idiv (bad) (bad) cld mov (bad) (bad) pushq imul mov hlt add mov repz (bad) rorl and xchg add add js (bad) not add pop xchg (bad) je rex rex.RXB int rex.WXB jle sub or stos shll movsl cwtl add sahf cmc jmp jae outsb movsb mov rex rex.W (bad) mov (bad) (bad) pushq adc movsl nop (bad) pop adc xlat cmp add stos retq jae loop fdivs xlat or mov jno shufps jmpq adc mov (bad) mov mov cs mov clc cltd movabs and rex.RXB jrcxz sbb rex.RXB jne mov xchg sub jp jo sbb xor xor outsl (bad) mov addr32 stos (bad) (bad) mov mov sub add data16 nop loop push rex.WRX adc mull xor or push test repnz pushfq rex.R (bad) or rex.X std (bad) rex.WRX add mov mov or scas sahf leavew cmpsb mov out push rcr sbb adc rex.RXB jle (bad) adc (bad) mov pushq stc int3 mov (bad) in cmp jmpq cmp jmpq movzbw mov jmpq jmpq mov bswap lea jmpq movsl cmp (bad) ja adc sub retq cld rex.RB mov cmc cmpsl sbb (bad) repz sti rex.WX (bad) mov retq pop out test jl add out test (bad) insl mov movabs pushq imul iret jrcxz rex.X push scas pop in adc jae outsl (bad) int3 movb sbb pushfq cmp (bad) (bad) (bad) sti sbb rex.WXB (bad) (bad) (bad) incb stos jnp xchg xchg lret add jae fist (bad) incl es lock xor nop retq movabs or movabs stc push (bad) jge jbe,pn mov cmc vpsubusb imul movabs (bad) mov clc or jmpq jne jmpq stos jmpq jp outsb (bad) js sarl (bad) pushq lods popfq roll and cmp push pop retq jbe sbb js mov pushfq cmpsl js fwait mov callq adc (bad) mov push mov (bad) jns mov or adc pop mov pop xorl test lret repz jg std insb sbb sbb (bad) (bad) (bad) cld adc xchg mov (bad) (bad) (bad) (bad) std out rex.RX jnp (bad) jb xor xor sbb lret pop (bad) and lods and cmc rex.X rex test (bad) mov (bad) mov add add and (bad) mov (bad) jle jnp cmp lods enterq mov xor fisubl rex.R cli xor adc and sub (bad) ds fldl2t jp (bad) je not shr push bsr cmc mov jmpq lahf rex.WRX sub mov jnp add cmp mov xor lods pslld xchg or adc (bad) leaveq flds cld lods and xchg lret xchg pop js mov and popfq movabs or scas and mov or add sti movabs mov jne fsts xor loopne (bad) (bad) (bad) decb (bad) (bad) (bad) pushq (bad) cmp sub retq jns (bad) jle or jno rex.RB jp add adc fisttp data16 (bad) in lods fbstp scas xor js xchg cli pushfq (bad) (bad) lahf xchg cmp pop ljmp rex mov ficompl mov sub mov movabs (bad) cmp xchg jne xor push rex rcrl sub mov (bad) adc jrcxz loop mov in (bad) hlt stos test sti (bad) adc and sbb sub rex.WRXB and in xchg rex.XB adc vpsrlw add rex.XB (bad) (bad) cs rex.RXB rex.X and and (bad) (bad) (bad) sti movsl jne ficom mov popfq cmc out add add js jb outsb mov (bad) adc outsb ja adc sub push je or shlb xchg insl shrb adc adc stos test mov fcompl test rex.WR rex.RXB gs outsl outsl outsb push gs imul add xchg cld (bad) jmpq test movabs or (bad) (bad) push adc outsl pop test movabs es jb xchg (bad) (bad) in or subb push or jge movslq lret movslq (bad) cmp std cmc insl loopne sti jp adc adc insl insl xchg in add xchg fstpl jno cmpsb iret jmpq cmp js fwait std rcll and scas repnz (bad) rex.X in rex.B rex.R (bad) (bad) (bad) std (bad) rex.WRB add or fidivrl jp cmpsb sar push in pop fmull or stos sarb sub pop movabs xchg rex.WRB rex.X rex.WR fcomi mov cs movb test jmpq data16 flds rex.WR add xchg mov (bad) jb sub cmp pushfq enterq loopne jbe (bad) enterq adc test mov (bad) lods je shlb add sarb jbe popfq sbb cmp mov xchg cmpl or xor (bad) (bad) decb (bad) (bad) (bad) pushq jg xor in mov lahf adc (bad) fldl sub (bad) sbb out movsb and xor and pop enterq scas int stos loop xor sarb data16 movsb (bad) adc int add add mov sub cltd idivl pushq leaveq jp ffree adc lock rex.RXB fnstsw sbb (bad) (bad) int3 cmpsl (bad) (bad) adc fstl jle movsl rex.B sahf data16 test sahf or rex.WX icebp test pop test ljmp cmc test mov idivb outsb pop test cwtl rcr mov repnz (bad) test (bad) mov mov (bad) outsb pop adc rex.W mov xor movabs xchg add (bad) sbb cmp jbe add movabs pop sbb (bad) (bad) sti gs ja (bad) (bad) decb and loope mov rex.X mov sbb dec mov rex.WX xchg adc rcr jo (bad) push or jmpq cmpsb (bad) adc xchg imull mov sti scas mov or hlt sbb retq mov mov fst popfq cwtl (bad) jmpq add rex.XB rex.WB imul add or insb cmp pushq test lock out sarb xchg (bad) and (bad) retq (bad) cmc xor nop xchg rex.WR stc insl (bad) adc xor sbb insl or adc outsb pop xchg add push fidiv add and ja bnd xchg repz jmp mov xor (bad) (bad) (bad) cld cs repnz (bad) (bad) (bad) callq enterq rex.RX out rcrb jae cmp jns adc mov std add add or (bad) imul orl (bad) mov movabs rex.RX rex.RB pop (bad) cmp out mulq and and mov (bad) fidivr cmp (bad) verw xor jmpq fstpt mov sahf cmp scas rex.RB cmp mov lods adc pushq (bad) rex.RB icebp sahf rex.WR sbb scas rex.XB xor xchg xor in add mov test xor cmp (bad) (bad) std (bad) icebp jne jl jae andl or (bad) mov mov xchg and (bad) lahf mov out out (bad) mov sub in imul mov rex.X imulb jno jb,pt ds test fsubl mov jl jg orl repz subl (bad) (bad) cmp addr32 iret or test push mov add adc rex.RXB or jp xorb jb test add sbb js pop xchg loop icebp cmp movl rex cmp (bad) fcmovbe (bad) mul rex.WXB push mov retq stos jp rex.RXB rex.R out test in mov (bad) xor add xor mov loop xor sbb jb mov mov sbb pop repz (bad) jp (bad) xor rex.WRX in insl leaveq mov (bad) loopne movslq mov fldenv stos jrcxz mov rcl bswap mov cmc mov cmc cmp clc sub stc repnz jp jne xadd shl setge xchg mov bswap shr stc sub cmp mov jmpq imul or sub jl mov push jg jrcxz sub and xchg pop or pop sbb cltd pop cmpsl and (bad) sahf rex.W xchg sarb enterq or push xor add mov (bad) cli rcrb retq adc (bad) push (bad) loopne jle in (bad) (bad) (bad) callq (bad) sti cli jns jle and pop movabs mov or out jl std rex.RX or movabs push stc rol mov loop (bad) loope (bad) es not cmc mov bsf movzbw bts shrd mov test xor clc stc cmc clc repnz jmpq (bad) and fadds pop (bad) lret mov jo scas rex.R imul or out xor (bad) scas loop icebp (bad) icebp mov ss (bad) scas lret add cltd rex.WR movabs cmp or (bad) sbb lcall pop pop mov addr32 (bad) xor fidiv (bad) (bad) out mov (bad) lea loopne jl rcr movslq (bad) xchg subb xor sub jg sbb (bad) and sbb (bad) xchg (bad) (bad) (bad) sti jmpq (bad) (bad) (bad) (bad) rclb retq adc xchg (bad) push mov add jbe add add (bad) cld sub and enterq repnz mov or movslq xlat mov out rex.WRX lahf cs pop cli cld push clc scas sub adc imul and mov loop test jle sti (bad) add add add out sbb add add in xchg sbb jl (bad) add sbb mov add add sbb cld int3 sbb adc add add add add add mov sbb int3 sbb add lret enterq divps add sbb je sbb rex.RB sbb sahf in add add add jns add add add clc (bad) add add add sbb add add push sbb add add add add add pop sarl cltd loop lea (bad) (bad) cltd cli sub adc mov in or pushfq rex.R xchg es cmc or repnz (bad) (bad) or (bad) xor imul (bad) test fs sbb lods pushfq sub (bad) fmul add (bad) add (bad) (bad) cli (bad) jbe (bad) (bad) std lods movabs faddl data16 test (bad) xor jb sbb (bad) (bad) (bad) in retq xor xchg hlt in xchg movabs test jae xor xchg ja movabs sub mov jns xchg push divl and out xchg mov (bad) in add add jno verw or add decl xchg sub (bad) lock xor xor sar mov xor dec bt jmpq adc jmpq ja mov shl add setno setg jmpq jmpq jmpq imul sbb rex.WRX mov jae jb xor push (bad) mov mov movabs in leaveq ficoml pop cmpsb xchg rex.XB test xchg xchg cmp movsl mov jns es shr movabs sub mov (bad) negl leaveq fsubs idivl (bad) mov xchg loopne and (bad) es jrcxz (bad) (bad) cli jmpq (bad) (bad) (bad) std rol sub sub ljmp rex.RX jno or cvtdq2ps movsl xchg or repnz pop xor (bad) (bad) (bad) incl test (bad) hlt fcompp jge shr in adc cltd int imul or movabs out (bad) cmp add sbb sbb mov out std enterq cmpsb add adc sahf jmpq (bad) or sub (bad) add (bad) pushfq rex.RX jo jb jbe in xchg fmul imulb xchg rex mov sub rex ds ss jae movabs jnp xor rex.RB jmp stos cmp movslq jae fbld rex.WRB sahf sti popfq (bad) add lahf (bad) jno and faddl lahf (bad) xor fcos (bad) (bad) sti leaveq movabs loopne (bad) push (bad) jl (bad) sbb mov jle mov mov lea add add (bad) cmp push pop cmp lret mov jrcxz (bad) (bad) outsb insb rcll (bad) movabs xor sub outsb lret cmpsl sbb add sti std pushfq rol out xor mov callq je not stc push lea sub xor mov rcl bswap sub mov not lea jmpq push push push push xor cs insb add add addr32 mov rex.RXB fimull jmpq test (bad) mov scas jns jl outsl add popfq sbb jne mov insb mov mov fs rcll mov imul adc int3 mov sub and xchg mull mov (bad) xchg (bad) (bad) ljmp enterq and jae mov push cmp stos mov hlt push (bad) push shlb std (bad) sub imulb or cmp lock add adc ja cmp sarl (bad) and adc in lret shlb lods jmp mov add add data16 repz cmp cmpb jmpq jmpq jmpq (bad) notl rex.WB add cmp gs retq ss (bad) cmc lock jne (bad) fidiv jne movups mov es movabs outsl jge movabs adc movabs sbb (bad) sub pop movsl in rex.RXB data16 xor rex.WRB cmp out sbb (bad) mov andnps iret test (bad) mov outsl enterq adc (bad) xchg rex.W push sub xchg lods movsl jl xor or icebp pop add movabs movabs scas xchg xor hlt rex.WB (bad) cltd (bad) out sbb sbb jrcxz retq movsl and sbb test ds outsl or cmp out retq cwtl mov scas (bad) loopne movabs fcomip pop xor mov jo scas add rex.X test jl mov sarb cmpsl repz cs ds (bad) int3 xchg jg jno (bad) (bad) and (bad) (bad) imul rex.WXB cmpl (bad) callq repnz (bad) (bad) (bad) decb push clc sbb mov and gs pop ds adc stos and outsb or imul jne jle vhaddps cmp (bad) sub fsubrs movsb out rex.W rex.X fdivl sbb popq mov adc (bad) jmp movsb std push test fs flds xchg and fisttp rex.WRXB or jb movsl lea movsl mov sub mov xor rex.RXB js jge sub sub xchg (bad) push loop cli sub (bad) sbb sbb fnsave cwtl rol (bad) cmpsl stos sbb rex.RX (bad) lahf outsl mov movsb cld (bad) xor faddl callq rex.WX and enterq rex.WXB cmc mov ss rex.WX lods lret sbb adc cmp (bad) decb (bad) (bad) (bad) ljmp push in xchg (bad) adc push jmpq xchg adc xchg rex.WRXB rex.WR test rex.WB mov es add mov insl jbe pop std repnz mov rex loop leaveq cmpsb or and (bad) rex.WRB pop or sti push jg push rex.X (bad) jmp jl (bad) movslq rex.WRB rex.X xchg or (bad) sub loop rex.X rex.R rex.WXB sbb cli bswap sbb (bad) pop es icebp push xchg rex.WRB jnp xchg xor rex.RXB mov (bad) std jne pop pop fcoms (bad) (bad) (bad) decb or (bad) (bad) fwait mov in pop or rclb fisttp xor or movabs (bad) cmp push fwait mov or loope and je je add cmpsb test add testl (bad) test (bad) movsb xor xor movabs ja out xchg (bad) mov mov xchg xchg (bad) in jno (bad) cmp (bad) in decl test lea add movsl jmpq neg push shl shl inc mov inc neg clc sub mov mov movzbl lea jmpq callq or test add neg mov test cmpb jmpq push rex.W rex.RB rex.WR xor cs insb add xchg push cmp xchg shrb xchg jrcxz cmpsl loope sub clc jmp int add fwait jl sbb fwait rex.WX (bad) sbb popq insl ja cwtl add or (bad) cmp mov xor mov popfq rex.XB test retq rex.RX add xor add test sbb movabs cmpsl mov leaveq ficoml adc (bad) (bad) (bad) lods add clc imull fidivrl cmp mov cmpl roll add add js xor leaveq cmp pushfq mov (bad) jge jbe mov rex.W fsubrp (bad) (bad) mov fcmovnb lods (bad) or mov in pop jmpq (bad) sti decl stos out adc (bad) lock cmpsb enterq std out fdiv (bad) rcrb shlb loopne (bad) jmp popfq mov rex.X jle cld movsb enterq rex.RB rex push adc cmc mov add mov fcomps out (bad) (bad) (bad) incb jg,pt fwait ja sbb sbb movl rex (bad) (bad) std out jl repnz add rex.RB (bad) in adc rex.X (bad) sti pop cmp in adc ficoml (bad) mov (bad) cmp and test (bad) out loop in clc add jmpq jne mov bt rcl bt xor movsbw setbe mov jmpq or rex.WR shll (bad) clc movabs (bad) push (bad) mov imul shl in (bad) and (bad) mov rex.RB mov or rex.WRX adc jns cs popfq int jbe lods xchg lret (bad) push clc frstor rex.WX repnz push push cmp xchg test rex.RXB (bad) (bad) pop jg and adc rex.R mov scas pushq test or fsts (bad) (bad) (bad) cld pop imulb sbb (bad) (bad) decl out mov lods rex.X fs mov int3 (bad) gs shrb sbb mov mov jl (bad) jl (bad) test out sub stos jae (bad) adc jb xchg jle cmp repnz rex.B rex.X (bad) jge test (bad) or (bad) mov lock cmpsl fdivl jae outsb rex.WRB out add fadds (bad) pushq sub std jrcxz xor stos (bad) and xchg shrb jge or xchg jbe push add and mov (bad) sti mov rex.X fwait cmpsb imul int3 jrcxz (bad) (bad) (bad) std or punpcklwd push std lret shrl (bad) jne movsl xchg (bad) sub jrcxz (bad) (bad) decb jge rex.WRX pop add add or movabs movsl cmp (bad) jbe rex.RXB rex.XB fimull mov add (bad) pop test rex.WB jb addr32 cmp (bad) (bad) jl mov icebp xor (bad) cmp cld xchg or sub lret sets outsb ja xlat in fisttp (bad) jnp xchg retq (bad) lret mov and (bad) (bad) mov sbb (bad) mov mov rex.RX add loope shll mov iret and jnp (bad) lock or cli mov popfq or (bad) sti adc (bad) (bad) (bad) std (bad) pop mov mov (bad) xor rex.WXB fisttpl (bad) (bad) jmpq (bad) (bad) xchg rex test (bad) pop movabs or mov callq xchg xchg test xor mov sub movsl or xchg add addr32 (bad) icebp sbb fistpll bt pushq cmc jmpq jmpq callq not shr add setne mov bt clc cmpb jmpq je mov jmpq je clc cmc bt cmc add stc cmp jmpq jnp jne movsbw shr bt xor bt lea sub mov cmp rol test add test mov test cmp cmc test jmpq jmpq stc sub stc jmpq pushq jmpq btr push sbb movzbw neg cmp push inc clc sub ror push and push sub and inc shrd mov bt test jg je mov shrd mov rcr btr sar btr add and shrd mov bt test jmpq fcmovb mov xchg mov and adc adc cmp addr32 rcll (bad) xor callq add mov or (bad) add mov lods shlb clc cmpl cli mov mull sub rex.RB jg adc (bad) in lock int3 hlt in add sbb xchg lret push or xlat sub (bad) (bad) cld jg cmpsl sbb jmpq lret std (bad) xchg sbb mov mov rex.WX (bad) shlb xlat cld test cmp xor add jno rex.B (bad) add and xchg sti add add sbb addr32 cmp shl mov retq ljmp movabs pop hlt xor rex.RB in stc movsb enterq lods mov sub test (bad) jge mov repz pop xchg (bad) jmpq pop movzbw not pop movsbw not bswap pop jmpq callq mov test add add rol shrd lea mov cmp test cmpb jmpq sbb xlat stos xor (bad) lods (bad) retq imul rex.RX cmpsb rex.X mov (bad) xor fmul insb cmp adc fisttp or (bad) or subl div fnop or jno sbb pushq sahf pushq imul xchg cltd mov mov (bad) outsl adc enterq mov (bad) retq (bad) lret and sti push xchg retq (bad) (bad) (bad) (bad) (bad) (bad) cmp push and push divb rex.WX test gs outsb jrcxz out sbb movslq (bad) movabs (bad) (bad) ljmp hlt cltd xor lods rol movsb sbb rex.WRX stos out jl movsb clc or sti cltd or test test add rcl adc sub adc cmp jp test cltd int3 movslq jmpq data16 (bad) ss pushq data16 (bad) sbb out (bad) mov mov (bad) or out and (bad) xchg push or jge and rcll (bad) es rex.RB pop or and xor rex.WX and pop mov (bad) pushq xchg (bad) repnz or (bad) xor (bad) (bad) sti cmpsl xchg (bad) (bad) nop (bad) sbb xchg mov (bad) mov addr32 stos and adc jrcxz jg mov fwait mov lret and mov jg sub fwait punpcklwd imul jle jle mov lahf (bad) (bad) mov (bad) (bad) sbb (bad) sub negb rex.WRB adc (bad) shlb add test add jno mov mov mov not not not setno lea jmpq callq jl adc jmpq jne ror sub sbb add bswap movzbq mov cmc sete add xor (bad) lock rol add shr pop verw mul adc movabs pop xor push jno sbb shl ficoml sbb insb (bad) fiadd lock rex.RXB (bad) outsl push lods rex.RB rex.WRXB (bad) mov sub mov idiv (bad) popfq (bad) and lods push movabs adc rex.RX (bad) (bad) cmp adc mov jae pop movabs pushq nop mov rex.WXB callq pop (bad) imul fild xor stos scas mov xchg or std imul mov je std (bad) rex.WRX xor add add or jp fucomp mov rex.WRX lahf loopne movabs sub (bad) mov ficoml (bad) movsl (bad) mov imul jle (bad) (bad) mov jg rex.X ds xchg rorl xor flds (bad) pop push mov testl pop jl xchg lret sub sub xchg rex.WXB rex.WRXB movntps mov rorb (bad) sbb xor movslq (bad) ja std mov pop sbb rex.RX test mov rex.RX shrl adc icebp sbb mov popfq adcb (bad) fidiv xchg push shlb (bad) int mov rcll xor adc loopne jrcxz cld scas push retq mov cmpsb fldl (bad) (bad) decb (bad) (bad) (bad) decl cmp fs callq xor cmp mov fdivl and jle std cwtl in lods jo (bad) out mov rolb add cwtl iret add pop out rex.WRX (bad) pop xor xchg mov (bad) rex.WR sub push mov push add btr bsr mov neg inc sub sub mov sub mov rol sub jmpq sub sbb fs push stc add hlt mov leaveq int fwait rex.RXB fcmovnu fwait rex.RB push (bad) and pushq or jp fnstenv and (bad) sub pop xchg callq (bad) fistpl loope loope loop leaveq rcrb rex.RXB lods (bad) sub (bad) (bad) (bad) stos rex mov xchg int3 jmp rex.RXB movabs jrcxz sub pop int3 lods mull push cmp (bad) jo xor (bad) clc jns fwait mov push str in shr mov andl jmp cmp jmpq rex.W pop lods loopne shll rex.RXB (bad) ja and xlat and nop rex.XB mov mov sbb (bad) outsl lods lret and (bad) (bad) rex.WB enterq rex.X ss and mov xor int3 cs rex.WRX mov or mov pop cmp int xor rex.WRB je (bad) lods and rex.RXB (bad) (bad) rex.RB (bad) (bad) sti (bad) jo shll (bad) (bad) (bad) imul mov sti mov (bad) (bad) (bad) jmp mov jns sub (bad) (bad) mov mov rex.B (bad) mov add mov pushq rex.WB insb (bad) adc rex.R lods push clc fidivrl sbb cli or push xchg retq and rol adc (bad) mov xchg js adc (bad) and (bad) add fsubp nop gs rex.WRB (bad) je mov rex.WRX jg (bad) jae (bad) loopne callq outsl adc rex.WRX cmpl cmc (bad) cmc cli xchg sti jmp rex.RXB retq (bad) (bad) cld sbb sbb cmp (bad) (bad) incl rex add mov cmp out ss callq lods (bad) (bad) pop (bad) xchg pop add xchg jg add add pop scas add leaveq cmc xchg mov jp lahf rex.RXB sub sbb data16 pushq rex rex.W mov (bad) xchg (bad) (bad) mov mov js jmpq rex.WRXB pop mov mov jae jmpq std shrd cwtl and mov xor (bad) rex.WRB adc (bad) or ss jge jns xchg xor in (bad) ffreep stc test rex.RX push ss xchg add pushq jnp in fdivs incl retq rolb retq ja test and (bad) (bad) cli mov xor sub (bad) (bad) std mov nop pushq cmp (bad) xor sbb movabs (bad) rex.W pushfq mov and adc lods scas push loope mov add add mov pop xchg add fimull cwtl mov cmp jae xor rex.B mov repnz mov xchg ja (bad) (bad) stos in nop (bad) jl loopne stos pop rex.RB jno mov rorl addr32 std callq xor mov (bad) lods movslq mov and (bad) mov (bad) jle es stos (bad) fs (bad) in popfq shll rex.WRB in lods in insl (bad) rcr and xor sti cltd mov rex.WX (bad) mov pushq and (bad) movabs movabs adc cs adc mov mov (bad) mov and (bad) push ss sbb std (bad) sub push rolb pop lret leaveq movslq (bad) movslq adc in rex.RB mov movsbq bswap pop retq (bad) adc jge rex.R ss fidiv cmp pushq adc sbb (bad) mov fcompl jno pop test (bad) rex.W mov rex.RX js jmpq stos mov rorb (bad) mov xor jg (bad) test mov repz (bad) sub (bad) cmp xlat xor scas in (bad) (bad) mov pushfq rex.WX imull in rex.WRB repz imul mov outsb test jno lretq jns (bad) rex.RXB (bad) (bad) sti xchg mov outsl js mov (bad) xor stos adc cmp (bad) fistpll (bad) (bad) out (bad) jge scas test cs mov push movzwl (bad) scas shrb push cs (bad) (bad) or rex.RB scas sbb and loopne rex.RX mov scas jrcxz jnp mov std roll icebp pop jae js jne jmpq mov cmp sbb sub bt sub bt mov jmpq pushq jmpq fwait je rex.X stc cmpsb xchg in rcrb loopne mov cmp scas fcoml and mov cmp shrb jb scas mov rex.WRXB xor xor movabs loopne cld vpsubsw loope jns rex.WB sub adc (bad) (bad) sti xor add (bad) (bad) (bad) (bad) sbb rcrb rex.RXB scas rex scas add outsl (bad) (bad) loopne ss xor test lock insl (bad) mov (bad) lcall (bad) (bad) (bad) mov mov out rex.XB rex.RB movabs leaveq xchg imull xchg movslq enterq xchg adc mov cmp mov (bad) cmpsb (bad) sub adcb and bt bt stc jmpq pushfq mov addl clc fwait (bad) sbb push loop test fcmovnu xorl popfq clc imul std fistp and jle rex.WRXB rex.X stc cmp pop lret retq shr fmuls fwait pop (bad) add (bad) xor adc and cs fnstsw mov (bad) (bad) int wbinvd sub lock test sub (bad) in sub add sub pop lret (bad) lret mov mov rex.B lret rex.WRXB movsb rex.WRB imul mov push in xchg js or pop xor sub mov ljmp (bad) int3 ss (bad) mov std push test (bad) outsb icebp (bad) (bad) rex.R lea rex.R rex.RXB sub or xchg and in adc and sarl and (bad) rex sti cmpsl xchg fdivrl push cmp jns mov add cmp (bad) insl mov movabs repnz callq popq addl rex xchg (bad) in xchg in jae test stc clc jae int3 sbb cmpl fsubrs sbb mov (bad) (bad) decb push rex.X adc rex.WX or (bad) rcll (bad) jmpq sub popfq ja xchg add cmpsl adc adc pushfq ds cli mov pop pause jge jns push rex.WRXB or (bad) cmp sbb rex.WXB pushq add je gs imul ja pop xchg (bad) cwtl cltd sbb lods mov sti sarl mov jg (bad) movsb add adc jg (bad) mov scas out jno imul mov mov mov (bad) (bad) stc ficom fimull (bad) pop mov rex.RX xchg cltd (bad) xchg mov stos mov (bad) mov outsb add mov mov mov stc scas (bad) iret fisttp (bad) sbb (bad) (bad) stos xchg mov (bad) (bad) rex.RXB lea (bad) adc lods (bad) (bad) scas (bad) jg cli mov ja xor loopne cld cmpsl (bad) (bad) mov jg mov (bad) jrcxz xchg jae mov (bad) jg (bad) jrcxz push (bad) xchg mov (bad) (bad) jmpq mov mov (bad) xlat test (bad) sbb cmovo ja mov xchg pop xchg pop mov (bad) stos mov xchg xor (bad) lods push xchg (bad) sarl lock movabs out fistpll mov jp orl xchg sahf (bad) (bad) xlat add (bad) int out (bad) jg adc popq cmpsl (bad) stc (bad) xchg iret jg (bad) pop (bad) xchg lahf xchg pop rcrl mov scas (bad) mov jae (bad) jg mov fsts fs jg mov fsubrs push mov (bad) (bad) ja xchg out jbe (bad) lret ss mov rex pop cmpl pop sub rex.WRX xchg xchg jg (bad) and adc ficomp jg popq xchg (bad) stos xchg (bad) cli mov mov adc mov mov (bad) mov mov cmpsl (bad) std (bad) mov notl xchg sar xchg rex.WR callq popq or (bad) mov cld mov ficomp jg (bad) fs repz mov xchg mov sbb mov mov xchg rex.XB (bad) push jg adc clc outsb insl (bad) popq xchg xchg icebp test movsb scas movabs cli lock outsl mov sub mov int lods (bad) mov xchg (bad) xchg repnz pushfq ja clc mov push mov (bad) mov pop jmp popq (bad) popq xchg xchg and std mov jrcxz movabs std ja (bad) (bad) incl sbb mov sub (bad) rex.RXB cltd (bad) lea mov xor (bad) sub cmpsl (bad) lods in (bad) jrcxz (bad) push lea stc jns fbld pop callq mov xchg mov iret mov mov (bad) xlat (bad) cli push xchg jmp mov mov mov movabs lods cltd mov lahf packuswb insl (bad) popq xchg mov or push mov or jle rex.RXB mov insl shr push mov loop imul lods mov xchg rex.WXB cmp loope and (bad) stc xchg and (bad) lods in xchg sbb jg callq mov xchg mov stos cltd xlat mov and xor test sbb mov (bad) adc (bad) adc mov or push mov or (bad) mov or incb mov (bad) test ja mov or mov or and (bad) or addr32 cmpsb out and out cmpsl mov jg (bad) movabs push (bad) (bad) (bad) jg (bad) rex.WR out add (bad) outsl xchg adc xchg jrcxz jg pop xchg jrcxz mov sub (bad) paddsw rex.WRXB lods jg mov pop popq rex.WRXB mov (bad) mov mov sub mov lahf jg popq xchg mov mov cmpl addr32 xchg jbe mov xchg mov adc lea (bad) (bad) cmpsb (bad) xchg rex.WRXB (bad) (bad) mov (bad) (bad) ja sbb repz repnz repz cltd (bad) rclb (bad) std stos xchg cmp test cmp scas stc mov jge out sti (bad) (bad) (bad) (bad) xor or cmp sbb int sbb nop mov (bad) lods loope mov jg pop push xchg jg lea mov (bad) sahf retq xchg outsb mov dec scas mov xlat mov cmp shl cmp shll rex add (bad) mov pushq addr32 (bad) outsl fisubr xchg out lods mov xchg retq jo (bad) adc (bad) stc xlat xchg sarl (bad) notb xchg jrcxz or shll fwait xchg mov stos (bad) cmpsl mov mov lods (bad) addr32 xchg cs scas xchg mov xchg out jae popq cld xchg rex.XB xchg push xchg (bad) rex.WRXB (bad) decl rex.RXB sub pop mov sub mov add orl fsubs cld mov lods popq xchg mov and (bad) mov and mov (bad) and (bad) push pushq mov (bad) loopne push mov ja (bad) (bad) mov jle mov xchg adcb (bad) cmpsl (bad) (bad) fildl xchg repz lea outsl rex.RX push or (bad) std mov rex.WR xchg (bad) (bad) stc (bad) mov rex.RXB addr32 xlat add (bad) rex.X rex.WRXB cmpsb rex.WX lea ss add popfq (bad) mov je jae (bad) lods fcoms (bad) cmp (bad) (bad) ds (bad) lods (bad) (bad) xchg pushfq (bad) lods mov xchg sbb iret (bad) cmpsl stc rex.RB (bad) jg (bad) (bad) (bad) xchg out (bad) mov outsb xlat (bad) data16 (bad) std mov rex.X cmpsl mov mov mov adc sub mov or jl jmp mov jae (bad) cld push mov xchg iret xor outsl ss pushfq (bad) mov xchg mov test scas xlat mov cmp stc or mov and (bad) lods mov jg jg lods push xchg mov (bad) cltd (bad) (bad) xchg out (bad) jg adc insl xor xchg ja outsb insb lahf xor mov int pushfq cltd (bad) mov xchg lods mov push mov (bad) cmpsl imul jg (bad) outsb xchg imul lods (bad) xchg sti out xlat pushq (bad) ja mov pop scas stos xchg mov retq rcll (bad) pop mov popfq sahf pop jae (bad) (bad) mov and pop mov cwtl pop rex.WXB add sti (bad) jns lods sub (bad) sti stc xchg pop jg (bad) push add (bad) pop xchg int jae mov xchg movabs jle jg clc lahf xchg adc (bad) lods retq xchg pop mov nop retq xchg (bad) (bad) pop mov cs scas mov test rex.XB mov shll popq jg (bad) adc sub incb xchg fxch mov scas ja stos mov (bad) std mov xor test fisub jg (bad) test xchg mov mov scas popfq (bad) mov pushq mov out incb xchg scas fldt (bad) mov (bad) ja mov mov xchg jmp xor mov mov stc xchg mov xchg (bad) cmpsl jmp mov (bad) sbb lods (bad) and pop mov test mov (bad) loopne xlat imul imul (bad) mov sbb adc ficomp jg (bad) mov cmpsl (bad) push xchg stc fimul fcomps xchg repz iret rex repz popq (bad) iret fdiv scas jmp mov lret and clc mov rex.RX pop xchg sub fmuls mov iret (bad) sub ja mov (bad) int3 xor repz rex.WXB (bad) xor mov (bad) cmpsb (bad) (bad) (bad) xlat push xchg pop jg (bad) sarl cmpsl xchg (bad) idivl pop pushfq (bad) rex.WRXB (bad) xor lods ss (bad) mov (bad) mov mov cmpsl mov xchg mov scas shr imul (bad) (bad) xchg pop mov int3 (bad) lahf or mov sti retq and scas mov lret mov notl pop mov mulb (bad) sub (bad) sbb mov mov jg (bad) xor adc out mov mov movabs (bad) cli fwait cmp xchg rex.XB xchg xlat (bad) inc mov xchg mov (bad) jg (bad) (bad) out mov add mov fisttpl pop mov retq sub shrl xchg mov add mov lahf rex.RB lods cmp (bad) std mov cld ss repz scas incb test xlat mov scas std mov push jmp xchg popq lret ss mov mov repnz (bad) (bad) xchg out xor jnp (bad) lods enterq mov or mov shl movabs subl cli jae xchg mov mov data16 (bad) fsubl (bad) addr32 add (bad) stos out iret (bad) adc sbb stos mov xchg (bad) rex.WRX (bad) lods (bad) xchg add jg jnp sbb (bad) jg (bad) xchg adc mov popq mov xchg sbb mov xchg sub addr32 out (bad) scas sbb (bad) mov adc mov (bad) adc out fisttp mov adc xchg rex.XB xchg xchg cld ja orb stc (bad) mov stc movabs mov mov (bad) imul (bad) sti (bad) scas mov int3 addr32 iret in mov or xchg push orl mov xchg or push callq out sub jg mov (bad) mov out mov xchg mov xchg mov (bad) ficomp mov xchg sbb out pop jg callq xchg lahf xchg (bad) xor (bad) encls (bad) jg (bad) stc cmp (bad) jnp xchg pop xchg jle xchg xchg scas (bad) mov jmp cmp (bad) (bad) push rex.WRB cmpsl ss push rex.WRB ja (bad) xor (bad) mov adc xlat xor jbe (bad) lods out cmp ljmp xlat xor xchg (bad) iret mov mov (bad) lods push mov jb (bad) scas std (bad) mov es rex.X mov (bad) xchg rex.WR orl mov xchg mov xchg xchg jmp cmp lods jae imul (bad) and pop (bad) fistpll (bad) pop add popq out mov xchg iret (bad) xchg (bad) pop xlat mov pop xchg xor rex.RXB rex.R (bad) push (bad) (bad) mov insl rex.WXB push mov pop mov movabs mov push xchg je addl push mov shrb or (bad) jmp mov adc xchg mov cld mov pop mov rex.X rex.WX scas mov (bad) xlat mov (bad) sti push xchg or mov sbb rex.RB (bad) test mov mov hlt sub mov mov test out push iretw jg pop mov ja mov jp repz adc jg movabs cld rex.WXB movslq jb xchg std xchg mov out cmpsb jg mov jae popq push mov cli (bad) xchg sti mov test outsb scas jae (bad) lods adc or movntq rex.XB insb and push xchg scas iret mov jg popq pop mov movslq xor popq loope (bad) cmp xchg (bad) xchg ja shrb pop (bad) mov scas rex.RXB (bad) xchg xchg and sub jg lods rex.RX (bad) mov pop sarb xchg xlat addr32 lea fistl fs sarl xchg mov (bad) pop add xchg jnp lret cltd (bad) insb xchg out xchg cmpsl (bad) jmpq movslq mov xchg add mov jg (bad) in xchg out push push mov xchg sub xchg repnz movabs int stos clc mov jnp mov repz (bad) (bad) movslq movsb mov cmp stos ja (bad) push add xchg jae popq lret scas (bad) mov mov jmp (bad) mov fwait mov (bad) and (bad) mov mov mov (bad) mov mov movl (bad) data16 (bad) (bad) rex.RXB lods rex.R push roll (bad) cwtl stc scas (bad) and push (bad) rex.WRXB xchg (bad) sub xchg jg popq int mov (bad) (bad) sarl mov xchg (bad) jg (bad) fildl jg mov sbb cmp scas (bad) or jg rex.WRB xchg sbb (bad) jne xchg imul outsb xchg out pop xchg sbb push ja scas lods (bad) (bad) jno scas stos lods je mov xchg mov push xchg mov (bad) mov jg (bad) cmpsb xchg out (bad) jg (bad) xchg lahf mov mov xchg outsl rex.WRXB xchg movsb neg xchg out rolb iret mov push jg (bad) icebp xchg repz xchg iret jo repz mov rcll sbb addb out mov xchg xor xchg imul adc mov jg (bad) (bad) xchg sub ja (bad) testl cmp jmp rex.RXB or sbb out mov xchg mov jg mov (bad) mov jg (bad) cld xchg pop sarl in xchg addr32 jnp xchg stos rex.WRXB fxch mov xlat popq push xchg xor vpmacswd sub mov iret (bad) (bad) (bad) mov int xchg jmp jbe sub addr32 lea mov retq (bad) movabs mov add jg mov mov pushq xchg repz pop mov xchg jnp decb stc scas (bad) mov or cs fstpt cmpsl retq xlat (bad) jge rorl cmpsl (bad) mov mov or lods es movabs incb mov xor mov cwtl cltd rorl jg (bad) jg or lods rcll mov out or (bad) (bad) mov xchg mov pop (bad) push mov or push mov jle mov rex.WRXB (bad) ds out and (bad) sub (bad) dec cld lahf (bad) mov (bad) mov (bad) movabs xchg fild mov lock mov xchg (bad) (bad) iret out push (bad) sti (bad) mov xchg mov sub mov in (bad) fwait pop scas jg mov stos mov xchg shrl (bad) (bad) (bad) out jg (bad) lret xchg jrcxz jg mov jmpq jb xchg sti scas jge cltd pop xchg repz sbb (bad) sti jns (bad) jg mov ss insl xchg mov mov mov insl sub (bad) (bad) imul pushfq (bad) rex.WRB lret rex.XB mov out mov pop xchg rex.WXB (bad) (bad) (bad) jmp add (bad) std adc mov jg pop cltd int cmpsl lods (bad) mov jrcxz fwait mov mov mov push mov xchg sbb xchg mov sbb add add sbbl sub js adc mov (bad) gs xchg jg jnp mov (bad) mov rorl sub mov xchg mov xchg lahf iret jno jl out addb lods imull int scas add cli mov int3 movl jg prefetcht0 mov add mov test xchg mov stos outsl add rex.WRXB imul scas retq mov (bad) (bad) (bad) xchg jae mov (bad) (bad) mov mov jnp add cmp rex.WRXB std fisttp rex.B push mov sbb mov (bad) cmp pop out mov sbb mov imul xor jg (bad) push (bad) xor lods xchg iret movslq fidivr mov scas fucomip scas mov and stos insl (bad) popq mov xchg mov mov xchg sub stos (bad) (bad) mov (bad) (bad) mov mov jg (bad) add push cmpsl (bad) cltd sahf es stc rex xchg mov movsb xchg mov and (bad) movslq mov and mov imull rex.WRXB (bad) (bad) mov (bad) adc femms push xchg push mov xchg pop sub jmp rex.WRXB and xchg adc (bad) (bad) (bad) imul add scas or (bad) fwait movabs pop (bad) outsl cmp pop (bad) (bad) ja ja mov jae (bad) xchg (bad) push (bad) sub fisttpl retq xchg mov add xchg push jno push mov or imul rex.X xchg (bad) rex.WXB mov mov (bad) ljmp sub (bad) mov (bad) (bad) stos (bad) (bad) add outsl mov xor std lret mov xor jle (bad) mov (bad) (bad) repnz (bad) ljmp mov retq imul (bad) jg push mov add imul mov rex.RB lahf out mov sbb or imul (bad) xlat rcrb (bad) (bad) movabs mov push jmp outsl mov stos xchg iret rex.RX (bad) or mov rex.B sub retq (bad) mov ja mov mov repz (bad) movabs (bad) mov (bad) jmp mov (bad) xlat mov xchg (bad) jg (bad) pop jl stc and jae (bad) jg stos mov rex.WRXB imul jge (bad) mov (bad) mov mov mov push xchg mov mov jno stos xchg mov lret (bad) (bad) out cmp lahf jg mov insb add (bad) pop jp stos rex.WRXB pushq rex.WXB std mov jrcxz xchg add int lret sti clc retq mov push movsb (bad) xchg mov pushfq imul fist movabs orb adc (bad) mov xchg je (bad) (bad) (bad) xchg mov mov mov jg cmp (bad) jmp test imul scas (bad) mov repz outsb xchg xlat (bad) jae jmp (bad) and rex.WRXB addb rex.WXB adc fwait stos mov rex.XB xchg mov push mov stos imul data16 lods and mov mov in iret iret sti pop mov mov out (bad) cmpsl popq (bad) (bad) cmp xchg jg (bad) mov mov push (bad) (bad) mov xchg out mov scas stos (bad) mov out mov xchg iret rex.WRXB repnz push pop out scas test mov (bad) or (bad) (bad) pop (bad) notl out test mov xchg ja xchg sbb jle scas xchg push mov or imul jmpq js (bad) mov (bad) jmp imul dec mov xchg jrcxz rex.WRXB (bad) (bad) adc (bad) rex.WRXB xchg and mov sahf (bad) (bad) mov (bad) mov (bad) cmpsl test mov popq rorb add mov (bad) (bad) insb (bad) stos (bad) jnp movslq in (bad) mov xchg jg pop (bad) mov xchg lahf xchg jp xchg iret jg cltd (bad) cli (bad) stos scas retq mov (bad) lahf mov cmp sti (bad) or cmp lea mov pop insl (bad) iret out mov jmp (bad) (bad) ja (bad) mov repnz xlat (bad) mov jrcxz mov lock xchg mov fldt rex.WRX mov in (bad) push xchg (bad) mov scas rex.WRXB mov jrcxz iret popfq (bad) jo jmp mov pushfq out scas (bad) ja cmp mov mov out (bad) xchg add push mov iret mov jmp cmovl add jg mov push popq fisttp lret repz mov mov (bad) cmp (bad) (bad) cli fcoml stc insl (bad) jg mov (bad) hlt push (bad) jns push mov mov iret sbb (bad) adc mov add sbb pop (bad) xlat sbb js (bad) gs (bad) (bad) jo mov sahf paddb rclb mov lods mov test mov dec jae mov mov and push fsubrs pop mov mov insl sub adc fwait stos ss mov icebp mov xchg mov ja mov imul jmp popq push mov add rex.WR sub lock jg xchg mov divb jg lret mov push and mov rex.RB pop xchg adc add (bad) (bad) subl sbb out mov xchg lret (bad) addr32 sub rex.WXB mov data16 cmpsl pushfq (bad) xor lret nop (bad) push add imul movslq iret jmp push mov std rex.WXB popq mov xchg (bad) fistl subb add (bad) mov cmp notl (bad) cmp rex.WRXB jge (bad) mov orl popq callq (bad) sub (bad) mov xor std addr32 add mov push mov (bad) mov mov sbb add (bad) (bad) xchg out ds stos mov int retq xchg jg mov (bad) (bad) lods mov mov and push sar cmp (bad) push mov mov stc cmp mov push movsb adc roll (bad) sbb fdivrs jmp (bad) icebp adc adc repz rcr ss add (bad) lods jns (bad) sarl cmp clc mov outsb push jnp (bad) xor in outsl cmp xchg rex.XB (bad) jge xchg push xchg repnz popq xchg vpmacswd test xchg xchg xchg pushfq cmp xor imul (bad) xchg movabs mov stc movsb xchg mov (bad) jrcxz xchg cs cmp xorps (bad) sub rex.X xchg movabs xchg mov (bad) movabs (bad) (bad) xchg mov (bad) popq sub jg (bad) pop xchg stc rex.WXB rex.RXB mov (bad) (bad) mov jrcxz ja xchg (bad) (bad) mov add (bad) xor (bad) es jg (bad) lret (bad) xchg mov (bad) pop movabs (bad) rex.WRXB stc sbb adc (bad) or xchg jrcxz (bad) mov adc push xchg cmp xchg pop jg (bad) xor xchg stos xchg mov and and jmp add (bad) mov mov mov int3 (bad) fisub (bad) or lods cs xchg jg jp xchg test xchg pop xchg sub iret imul int3 pop (bad) mov jmp pop pushfq rex.WRX (bad) (bad) mov xchg sarl push stos xchg mov in jbe (bad) rex.RXB lods loopne rex.WRXB pop push xchg and (bad) push movabs pop xchg outsl stc xchg mov push (bad) lret jb mov jg (bad) xor (bad) mov vpmacswd sub mov (bad) (bad) mov cmp xchg (bad) jg pop push xor jae (bad) lods icebp xchg out jg sahf movb xchg xchg sub mull jg mov rex.WR pop (bad) mov and sbb pop stc (bad) (bad) mov stc mov xchg movabs sti sbb stc movslq rex.RXB jnp (bad) mov insl rex.WB rex.RXB jg xor out mov iret pop mov (bad) cmpsl stc mov jae (bad) (bad) and mov (bad) xlat (bad) push push xchg (bad) mov mov sbb (bad) (bad) (bad) lods (bad) xchg scas (bad) (bad) mov mov repnz rex.WR (bad) adc movabs (bad) xchg cmpsl xchg lea mov movabs mov (bad) ss xchg fcomip mov xchg mov cltd (bad) out xchg out outsl cmpsl popq stos xchg rex.WRXB jp and pushfq (bad) and popq imul (bad) outsb xchg xlat (bad) (bad) mov jg xchg xchg (bad) and pop js popq mov add xchg mov or imul push xchg sbb stos sub popq xchg xchg jb (bad) (bad) (bad) mov add (bad) rex.WRXB (bad) push int3 mov mov mov add (bad) pop cmp xchg outsl xchg (bad) je mov xchg pushq (bad) mov xchg mov mov sarb or lods xor mov mov push jmp rex.RXB (bad) (bad) movabs xchg and mov insl cltd (bad) popfq fistl (bad) cwtl xchg rex.WXB xchg insl (bad) (bad) nop popfq push (bad) xlat jg popq mov iret add (bad) lods adc add (bad) (bad) andb (bad) (bad) lods fist sbb xchg (bad) mov mov adcb push xchg cmpl cwtl xor insl xchg sarl jg xchg pop adc mov push xchg fcomi mov jg (bad) xor paddq mov jg (bad) clc add out xor rex.WX sbb rex.WRB (bad) rclb pop stos xchg (bad) xchg (bad) (bad) mov jno (bad) out cmpsl popq fs ja xchg xlat iret jg jae (bad) lods adc sarl or movabs out jrcxz popq (bad) xchg repz xchg retq xchg (bad) (bad) fiadd sbb mov (bad) rex.WRXB (bad) loopne (bad) cmp scas mov fwait pushq cmp push (bad) xlat (bad) scas stos xchg pop (bad) xlat stos mov xchg repz (bad) push sti sbb repz xchg (bad) xchg lods (bad) mov jmp mov (bad) (bad) mov xchg loope movslq test or popq sub or xchg (bad) jg (bad) (bad) xchg nop (bad) and jg push mov orl jnp (bad) (bad) mov cmpb sub (bad) pop push xchg xchg (bad) jge xchg rex.WRXB (bad) mov sti outsb xor ja (bad) sbb (bad) jg adc ja mov mov movl stos (bad) out xchg rex jno (bad) cmp jmpq test mov movsb (bad) fistpll rex.WRXB stc adc stos xchg imul stc cmpsl mov xchg stc pop scas adc mov insb int scas movslq scas push mov or imul ffreep iret fbstp (bad) movsw rdpmc mov mov add sti (bad) add rex.WX jg mov sub mov stos xchg sti xchg mov mov insl lret cmp push rorb mov or mov mov mov int3 out sub iret lea mov (bad) rol stos (bad) jbe or stc fisttpl retq or jg mov mov shrd jp sbb rclb mov iretw retq (bad) stos mov ja out mov sti (bad) or sahf (bad) jmp fwait mov shr jmp fisttp stc decb mov data16 xor insl nop cmpl stos xchg sub (bad) repz retq push mov xchg cmpsl mov callq mov and lock (bad) xchg xor jmp retq out movsl stos leaveq (bad) xlat (bad) or mov (bad) mov in mov (bad) jmpq (bad) adc scas fwait mov (bad) adc cmp xor sbb (bad) iret xchg add retq mov adc mov lret and add rex.WXB mov (bad) add stc scas (bad) mov xchg (bad) sarl cmp mov (bad) fs sahf (bad) jmp (bad) mov jmp (bad) (bad) movabs sbb rex.RXB mov jmp (bad) sbb (bad) (bad) popfq (bad) insb add (bad) or movabs rep popq mov jmp (bad) int3 and mov jl (bad) xlat popq (bad) movabs sbb shr pushfq (bad) jns xchg mov mov jg iret mov xchg movabs xor jmp (bad) jo jmp (bad) jl shr imul sbb popq insl (bad) jg add mov jrcxz xor stc xlat mov xchg lods push pushfq cmpsl addr32 jmp jg mov push mov jmp out xor (bad) rex.RX mov xchg mov lock clc out adc mov rex.WXB (bad) ss jne (bad) subl leaveq pop xchg (bad) mov jg xchg (bad) mov (bad) stos xchg imul (bad) testl (bad) (bad) add and xor mov xchg out pop jg jmpq xchg jrcxz data16 (bad) imul (bad) mov or (bad) push mov jnp (bad) xor xchg subl (bad) jg xor (bad) adc mov (bad) mov xchg push movabs movsl rcl rex.RX jmp xlat sub jbe rex.WRXB rex.RXB jmp mov mov jmp push iret jle lahf sub sbb rex.WRXB (bad) xor lods push xchg imul (bad) jg (bad) stos sub lods xchg xchg mov (bad) pushfq mov sar lahf mov sub mov mov icebp sub add (bad) (bad) mov jmp (bad) stc notl or scas jg (bad) xor (bad) ss std xchg xchg stc ja adc adc outsb adc in mov (bad) (bad) (bad) cmp (bad) idivb movabs jmpq lret xor cmp xor sub cltd rex.RX push sub pop cmp test rorl addr32 jno lret xor rol (bad) sarl std (bad) xchg int3 cmpsb in cmp fsubl rex.WX pop rex.WRXB rcrl mov mov (bad) (bad) cld push pop and cmp (bad) (bad) (bad) cmp stc cmc xor fcmovnb icebp rex.WRXB add add push in insl fistpl mov (bad) hlt std fmuls xor cmp fstps mov add out adc clc cwtl cmp sub mov nop andl xchg sarb out (bad) (bad) jo pop mov and mov retq mov rex.RX imul test jp fcmove out (bad) in add sub push push (bad) mov sbb fcoms (bad) popfq rex.X jrcxz sbb add loopne sub sar (bad) out test mov rolb (bad) jae and testl sub rex.WX xlat mov adc (bad) (bad) cld (bad) movabs loop rex.WR xchg (bad) divl lods sbb jb idiv movabs and ficomp imul stc (bad) out enterq cmp mov testb pop jns push shrb repz sub cld sub out xchg rclb (bad) cmpsb (bad) fbstp pop std movabs pop (bad) xchg mov scas mov loopne mov jb push out xchg int3 movsl (bad) mov es and push verr mov rol xor movsbw mov jmpq callq jmpq clc add jmpq mov rex.XB push sti sbb sbb ds and test or (bad) fs insl push adc jmp sti add or rex.WB popfq lods rex.WR shrb or cmp (bad) sbb push nop (bad) data16 and movabs push scas out callq mov jmpq cld js cmpsl mov xchg jl (bad) (bad) (bad) std or loopne (bad) (bad) (bad) std lock outsb mov data16 mov add add or xor and jrcxz sti scas mov cmp insb xor scas mov (bad) mov sub push cwtl jns (bad) movabs and mov (bad) rex.RX pop push hlt movabs mov sub (bad) pcmpeqw add bt cmp jmpq cmp (bad) xchg rex.RX pop pop jl in test and (bad) push xchg (bad) sub mov ja (bad) idivl sbb (bad) mov div adc pushq xor jo (bad) jg cltd mov rcr rex.R int sbb (bad) jle and sar (bad) (bad) cld not mov (bad) jmpq or jmpq movsb adc adc push jg cmp adc xchg (bad) rex.W cs mov (bad) (bad) jge jle jl mov or (bad) xor xlat jmpq stc scas loop ffreep add (bad) push loopne (bad) and (bad) jmpq (bad) rex.WRB push rol or xchg mov out loopne sahf test sbb push xchg rex.WB iret callq loopne cmp out mov stos addr32 sbb jmp movslq rex.WX adc repz xchg cli out adc jl movl rex.RX xchg int xchg movsb rex.WX retq rex.RXB push push test leaveq push loope mov adc lea loopne (bad) xchg (bad) ja xor retq (bad) (bad) (bad) cld test (bad) mov ljmp fs mov out adc gs jl rex.W fistl in fwait (bad) callq mov es jnp loopne andb sbb lods loopne xchg jp rex.XB rex.WXB mov (bad) sbb or rex.WRX add add and pushq jl xchg pop fimull (bad) sub pop sub rex.WXB mov lods mov sub mov neg mov movabs push je cmpsl mov sub pop jge xor ja shlb mov xor outsl jo rex.WX xchg rex.WXB ds xor sub cmp test (bad) push (bad) (bad) addr32 mov (bad) in jmpq movabs (bad) std rex.XB ds outsl rex.WRB negl movabs jae (bad) (bad) std (bad) or cmpsl xchg (bad) (bad) (bad) incl rex.RB rex.RX or sbb mov add pop (bad) or (bad) packssdw (bad) imul fnop rex.RXB cmp imul xlat jl rex.WRB mov sub xchg movabs jb pop add insb pushq sub jae jne jmpq mov jmpq jne bt jmpq test jmpq jmpq callq test cmc or jmpq jmpq je test test bt cmp jmpq jmpq cmpl sub rcll (bad) jno xchg and pop iret jmpq icebp in sub rorl or outsl pop xchg gs shr fisub rex.RB retq push cltd lea icebp or and mov sub cmc xlat mov (bad) (bad) (bad) sti push js int3 addr32 fdivs push rex.WRB jne sub out pushfq and pop mov and add popfq xchg retq mov (bad) (bad) dec (bad) (bad) jl in lods lahf lods add test mov jl add add sub outsl adc jnp fidiv pop and lods rcrb jbe (bad) jno xor rex.RX jge xchg (bad) test xor stc or test mov sub xchg nop cwtl rex.WR rex.RB addr32 jae shll xchg in fdivr faddp add enterq mov divps int (bad) xchg mov rex.W movabs repnz fisubrl jo cmp and pushq sub cwtl cmp push outsl or int3 mov jmp retq mov pop ficompl movslq (bad) (bad) fisttpl sbb mov insl (bad) (bad) (bad) std js xorl int3 xlat (bad) rex.WRXB js and rex.RXB sbb (bad) clc rex.WR (bad) cltd add std or add or mov push and sub rex.WR cmp (bad) push retq cmp sbbl insl (bad) xchg je fnop mov cmp in lock andl pushq in mov jo fmuls scas mov sub clc clc xchg clc test test sub jmpq add rex.RXB gs outsl fs imul add movabs xor jmpq icebp mov cmp jrcxz (bad) mov pushq (bad) or add (bad) or push push mov cmc add (bad) not mov xor rex.X rex.WRXB xor xchg (bad) stc jle jnp (bad) cmp jge fimull jo mov lods adc cmp rex.WXB movabs shrb rex.RB repnz push rex.WX (bad) (bad) (bad) sti (bad) stc push idivb or test mov and rex.WR or add (bad) decl (bad) sti flds pop (bad) rex.WX rclb adc pop je (bad) jbe xchg jbe scas mov jbe (bad) xchg (bad) mov pushq test rex.RX sbb jnp rex.RXB mov add test movabs cmp jmpq stc cmp clc xor jmpq jmpq sub or xor gs (bad) in cmpsb rex.WX stos pop jl outsl pop or lahf sti jmpq xor (bad) mov (bad) mov xor jmp cmc cli mov (bad) test jae in fucom mov (bad) jmp roll xchg repz out pop (bad) rex.W (bad) (bad) (bad) (bad) (bad) (bad) add in ss mov (bad) in (bad) in mov cmc jp jo (bad) outsl movsl sub (bad) negl rex.RX jmp add add jg cmpsb adc xchg mov rcll sub rex.WR sbb (bad) jnp xchg mov pop rex.XB rex.R cmp pushfq movabs cmc sbb or mov (bad) scas (bad) mov movsb (bad) pop out pushfq insl (bad) int3 jno outsb (bad) push xor imul movabs sarl imul int loop jmpq adc mov adc mov mov jne add and ja add or mov int3 (bad) mov stc (bad) movabs sarb scas jae jle (bad) (bad) cld adc add (bad) (bad) (bad) (bad) stc scas or (bad) hlt lock movabs xchg (bad) stc je sar (bad) cmp (bad) add rex.WRX add add fistp adc rex.R or in es adc test and lret rex.WR rex.RX pop movabs add cmp sbb (bad) sub leaveq movabs cmpsb (bad) (bad) cs lods rex.RXB sub pop jge xchg std cmc movabs push icebp xchg rex.WRXB jl or mov movsb push jrcxz (bad) push vunpcklps add fs xchg scas mov test cmp xor mov cmp retq in cmpsl movabs adc ja add negl jnp xchg in and push rex.R mov (bad) (bad) cld adc (bad) (bad) (bad) stc fiadd xor add add add jns sub mov jg outsl cmp mov mov in xchg rex.WRX (bad) or adc adc rex.WXB rex.RXB xchg rex.WX sub jmpq ds jns add mov xor out pop je lods rcrb cmp pop adc ror lea lods addl sbb pushfq sbb adc rolb jle mov cmp iret scas and cli lahf icebp pushq pop lods movsb sbb or xchg add js adc (bad) sub adc fisubrl sub int add cmpsb rex.WB lods mov in rex notl test (bad) (bad) decb (bad) (bad) (bad) pushq divps out rex.B (bad) test pop add mov xchg callq sub sbbl in ficom mov mov rex.R (bad) lods movabs clc movsb sbbl sbb iret (bad) notb sar retq shl add btc sets sub mov bt clc jmpq (bad) push xchg fnstsw retq (bad) or sub mov mov rex.XB sub cmpsl rex.XB rex.WRB jle nop adc imul not jns (bad) rex lods test jg insl not mov pushq js nop adc sub std in jge or jle movsl int mov out rex.R add push (bad) and or shl lret xchg mov pop or (bad) ja jno pop lods jnp (bad) sub pushq push cmpsl xor xor (bad) (bad) ss (bad) xchg (bad) mov and (bad) loope loopne xchg mov or jl cmp lods add sub leaveq rex.X (bad) in jo sbb mov (bad) push rex.RXB in sahf pop (bad) stos std out fisttp (bad) (bad) (bad) std xchg (bad) test or out mov rex.WRX or stc in push and rex.WRX nop std rex scas add mov divb xor rex.B (bad) (bad) decb (bad) (bad) (bad) pushq mov cmpsl and callq rep lret fwait cld cld mov and sbb test (bad) (bad) add (bad) movabs mov movabs push je out rex.WX and cmpsl leaveq sarl rex.WB add lods iret (bad) mov xor and stos sbb (bad) iret mov xchg pushfq rex.WX or or jno clc or ja fldcw (bad) add rex.RX addr32 jae callq (bad) outsb rex.WRXB rex.R (bad) jle rex.RX add callq (bad) cmpsl sbb iret (bad) (bad) (bad) clc xchg shrb stos mov xchg (bad) (bad) decb pop xchg add add add or sbb js leaveq shrl sbb xor sbb jno (bad) (bad) (bad) pop rex.XB mov mov (bad) fnstcw push fisubrl xchg cwtl lea cmp scas mov and rex.XB or xlat pushq xor or (bad) cmc clc shl seta jmpq mov sbb add neg bsr mov rol bsf xor add stc movl dec mov cmp test cmc test cmp jmpq mov jmpq callq movsbw mov mov not mov xchg lea setno jle pop movzbl bswap mov lea mov lea mov mov retq jmpq push popfq cmp callq fildll sbb popfq rex.RB rex.RX test cmp xor lods xlat add jns test (bad) cltd stc nop movabs mov loopne rex.RB push out popfq iret rcrl pushfq fmull fisttpll retq out fidivrl adc adc shlb stos (bad) rex.RX mov fisubl (bad) mov jp push (bad) xor lods (bad) (bad) (bad) (bad) sti es mov sbb (bad) (bad) decb (bad) jno stos pop (bad) callq mov lock (bad) (bad) decl mov cld mov sbb xor rolb outsb pop rex.B jno xchg jg adc rex.WB rex.W or cwtl int jp (bad) mov mov sub (bad) outsl rex.X ss jmp pop jbe shl sub test cmc mov add mov mov bsf data16 mull fimul add shld bsf shr dec test bsr mov clc btr add bswap mov jmpq movzbw mov pop mov jmpq je stc test jmpq bts mov cmc sub clc stc clc pushq test cmc bt bt cmp jmpq jne jmpq je shr ror add push shld mov shld mov jmpq mov mov (bad) mov pop jle sub (bad) add leaveq add add or pop and lea andl outsl xor lret scas fwait mov roll and add jrcxz movsl mov mov pop adc mov (bad) mov enterq xchg xor rex.WR jrcxz retq (bad) sti push and mov (bad) cmp sub outsl rex.WXB cs sbb lods mov adc lret (bad) mov movabs add pop push (bad) (bad) (bad) decl add xchg (bad) lret gs push cmp cld iret ss (bad) cmp lods mov clc lods rorl repnz movsb adcl (bad) (bad) (bad) xor push pop mov sbb lods int3 xchg mov mov cmp jmp callq jmpq repnz nop jle pop icebp (bad) sti movabs (bad) notl xchg (bad) repz xchg xor (bad) rex.B imul mov add jbe mov stos sbb push or stc xchg nop orl out add rex (bad) xchg jns pushfq jns sub rex.WR adc rex.WB leaveq cmpsl mov (bad) mov mov (bad) (bad) (bad) sti mov lret mov rex.WRXB rex.WX callq repz (bad) xor mov rex.WRX (bad) (bad) and stc lahf rex.RXB rex.W xor or je repz pop push lock mov or sbb std xchg popq sub mov out sbbb push or hlt mov rex.WR shll pop and lahf rex.W or fdivr (bad) (bad) decl pop xchg xchg outsl xchg movabs repnz int rcl mov gs (bad) or pop adc xchg rex.WR in addr32 mov rcrb je and addr32 adc fiaddl cmp sarb (bad) cmp addr32 movabs hlt mov add push rex.W imul je outsl outsb add enterq in sbb movsb adc mov rcl mov rex.R (bad) stc cmc in sarl leaveq (bad) cmc shlb (bad) sbb mov (bad) lods pushq sbb (bad) cli (bad) retq sub stos jmpq repz addl cmpsl roll add add adc cmp (bad) jg (bad) add cmpsb retq callq mov lea (bad) shr fmull rex.B pop jnp (bad) lret xorb push mov (bad) iret sub icebp in push (bad) mov stos sub adc sub xchg in adc xchg movzbl insl popfq xchg rex.X push test sahf nop xchg pop mov and xlat or adc cmp adc push icebp lock jl adc ror stos jp adc adc jg repz clc fistpll xchg cltd jl or (bad) and rex.RB pushq (bad) mov bnd adc add add adc jg idivl push pop jle adc stos and jge adc jge rex.WXB adcb (bad) xchg mov movabs cmp jg (bad) test mov and lret ds or movabs pop add movsb in mov ja (bad) retq or insb jae pushq rex.WRX subl sub rex.WX retq cmpsl mov cli lahf lods (bad) lock xchg or repz add test sub xor jl rex.WR rex.WRXB movsl (bad) pop adc ror addr32 sbb or rex jns sbb test sbb callq out rex.RX je lcall jo jmpq mov fwait (bad) pop movabs fstps (bad) or imul rex.RX xchg es insb mov jrcxz test rex.RXB cmp or mov lods shl mov loop jp mov jbe addr32 adc sbb js rex.R fistpl cs pop mov jmpq and cmp (bad) adc insl mov cmp mov cmp in int sub cmpsb cmp jae rex.WXB sub fwait lea xor ss rex.WXB xchg (bad) addl xchg cmp lock vmovlps sbb pop movsb sbb test cmp fcompl cmp cmp cmpsb cmp movabs shr cmp nop sarb (bad) (bad) pushq insl rex.X mov mov lahf xor rex.WRXB loope (bad) (bad) (bad) (bad) cmp push fwait (bad) xor (bad) (bad) mov mov (bad) es std outsb imul (bad) scas mov ss push jle and mulb rex.XB cmp mov xchg movabs (bad) jmpq sbb and cmpb jmpq jmpq mov jmpq jmpq cmc stc cmc bt xor jmpq callq jmpq jge jne bsf bsr mov clc clc clc add bt bt movzwl and sbb inc mov stc stc jmpq stc add cmc mov cmp clc test jmpq push ja rex.WXB and callq and pop mov (bad) int3 (bad) xchg add jb mov xor (bad) or (bad) (bad) std out movsb and add add add mov movabs mov std fistl leaveq insb xlat (bad) imul push sub test rex.RX rex.WR adc mov or mov fcomps gs test rex.WRB loop adc rex.WRB rex.WRXB shr (bad) rex.RB clc cmp jmpq ja setns mov pop xchg movzbl bswap pop mov not movzbl jmpq sbb and or add (bad) adc movslq mov decl loopne and pop cmp fdivrs or out hlt add sar rex.WX loop fidivl rex.WX adc movabs fs xlat sbb mov insl xchg (bad) fidivrl clc pushq (bad) (bad) (bad) loope test test shlb cmp (bad) cmc adc adc add repnz jmpq cmp lods lods xchg sub rex pushfq add add rex.WRB mov rcll mov in rex.WB out xchg mov xor xchg jg xor cmp rex.X mov fnstcw (bad) in jle movabs je cmp sub bt cmp jmpq cmc movzwl shld shr mov test jmpq mov jmpq jne sar xadd bswap mov adc rol shr adc sub xor bsf mov bt sub cmp jmpq jmpq fisttp and (bad) cltd mov retq mov lods (bad) fsub cwtl sbb and cmp jrcxz mov add rex.X rex.WRB stos cld push cwtl add jae imul cmpsb jmp in pop jle lods lret (bad) xchg retq adc sbb enterq xchg (bad) jmp in sbb loop jo push in (bad) (bad) (bad) std or xor (bad) and pushfq add vpacksswb hlt rex.WRB adc jbe (bad) fmuls mov cmp xlat cmc and lahf (bad) (bad) (bad) ljmp (bad) icebp xor mov repnz (bad) (bad) jmpq int3 (bad) xor test jne rex.WRX mov movabs movabs rex.RB lea or push out movabs jno fdivrs rex.R xor outsl iret pop jns shlb in pop cli xor stos jmp adc push push loopne mov mov pop ror (bad) clc (bad) or test movsl rex.XB movslq sub xchg rex.X rex.WXB outsb in cmp (bad) enterq movabs (bad) and sub push loop cli lock rcl or (bad) cld (bad) sub (bad) (bad) incl imul rex.XB (bad) rex.WX ja adc mov sub in mov (bad) xlat (bad) or fdivrl movabs jl sub mov loope (bad) hlt jmp pop cwtl add add rex.W popfq lret sub jns outsl and mov rex.WRXB pop cli rol xorl ds (bad) stc fisttp lcall cmp sub pop cs rex.X rex.RX push cmc and (bad) sub and cld and xchg gs sub adc (bad) xor mov pushq rex.W cmp icebp dec bnd add mov rex.R lods leaveq add mov sbb rex.RXB sub rex.WRXB or (bad) ja add gs (bad) (bad) sti retq pushq (bad) lods es rolb and enterq adc pop out mov in mov fwait roll data16 cld hlt movabs jns xlat mov xor cltd mov mov pop mov add add in sahf jp int ds outsb adc stos adc sub lea (bad) repnz jp jae adc subl pop jae movsl xchg adc rex.X or xchg jmpq jne xor mov cmc jmpq dec clc clc not stc stc clc bt rol bt bt test cmc neg jmpq sub bt bt clc cmc cmp jmpq push rex.RB push rex.WB rex.WRXB rex.WRX cs insb add or add jmpq addb fs sub lret in fdivr int mov add or add mov (bad) mov add mov push addl lret (bad) rex.R repz sbb xor sbb (bad) adc gs mov fsub add outsl mov jne (bad) in mov rex.RX cmc cmpl outsb (bad) jns xchg sub (bad) (bad) (bad) cld or adc (bad) (bad) (bad) (bad) (bad) cmc in jbe jmpq add add jne ss (bad) in out js stc jmp out lock movabs (bad) cmp hlt sbb adc mov int3 gs xchg mov or rex.WX outsb and rex.R mov (bad) loopne add loop add idivb ja pop test repz rex.WXB (bad) fcomi out leaveq hlt jmp push (bad) cmp callq rex.XB or leaveq mov sub cmpsb adc (bad) mov movsl subl pushq sbb loop fcmove and xchg test insb xchg xchg (bad) int (bad) movabs pop xchg or mov movabs (bad) sti xchg test (bad) (bad) jnp fnop icebp pop xor in mov (bad) (bad) (bad) sti mov vpsubq sbb (bad) add rex.WRX movslq pop int3 gs jo (bad) enterq (bad) sub sbb mov jb rex.WX imul mov mov rex.RX sub stos sarl stos mov ds vpmullw stc repnz (bad) pop mov ss data16 (bad) (bad) sarb lods xor xor adc jb mov out mov (bad) hlt jae (bad) mov fild repz rex.WX rex pop add cmpsl pop adc rex.RXB sahf (bad) mov (bad) imul fisttp fndisi(8087 rex.XB clc (bad) (bad) or (bad) (bad) mov jp in movabs test (bad) (bad) (bad) pop gs cmp loop unpcklps fnstsw rex.X (bad) out int cmp mov nop sti xchg scas cmp loopne mov cmp mov sub cmpsb mov rex.WRX add loopne movabs rex.R rex sbb clc xor jmpq cmp jmpq test jmpq cmp sub test bt pushq cmc bt cmc cmc cmp jmpq cmp jmpq xchg xlat or es movabs rcrl fisubl rex.W xor mov xor insb sahf (bad) hlt lock xor rdtsc movslq scas xchg and (bad) xor mov pop fadds repnz cs shlb mov (bad) rolq movabs push or mov jb add (bad) (bad) (bad) sti and (bad) (bad) decb (bad) (bad) xor sti sub sub cmc pushq (bad) decl push ds test insl rex mulb mov mov decl sqrtps xchg add pop gs xor mov or push out (bad) adc xchg add test push add sar btr mov jmpq jne jmpq clc pushq cmp jmpq jmpq shlb sub fldl movabs (bad) cli bswap xchg imul stc (bad) rex.XB cmpb (bad) loop mov iret rex.X (bad) pop lods ja xor jmp (bad) lods mov fistl xchg (bad) loopne lahf mov cld (bad) jb adcb out sub add cmpsl adc (bad) mov xchg adc mov sub (bad) (bad) cli mov (bad) (bad) (bad) std movsl mov pushfq push lret mov scas (bad) mov mov (bad) movabs rex.WB cmc push mov mov (bad) lock (bad) stos paddusw imul or imul iret mov movsl enterw mov lret mov imul sbb xor rex.W fistpll add je outsl fs imul add jl (bad) and pop mov lods rex.WB push (bad) mov xchg (bad) (bad) int mov xchg jne mov pop rex.X cmpsb sub sub out loopne rex.RX xchg or pop (bad) xchg add (bad) outsb addl pop jmpq mov (bad) mov and movslq sub (bad) (bad) and sbb movsb fstps (bad) flds retq sbb (bad) mov xor (bad) (bad) xor xchg rcrl je fnstcw rex.WRXB (bad) in leaveq pop retq cwtl (bad) (bad) (bad) incb push jbe adc out (bad) (bad) (bad) decb (bad) (bad) (bad) ljmp (bad) outsb (bad) movabs loope jmpq in xlat rex.R xor stc movabs jo xchg addl (bad) add jbe pushq add xor rex.RX fucom adc out and cmp lahf std sub xor mov fidivrl lods (bad) (bad) push and out jmp int3 adc fs test popfq push cmp nop (bad) jo mov insl std (bad) lock adc hlt push loope sbbb es cli (bad) push outsb mov push adc out pop mov mov int sti lahf mov or insl cld add test loop and add mov (bad) (bad) sti (bad) pop (bad) movslq (bad) (bad) (bad) (bad) mov loope hlt and add add mov rex.WR scas add mov adc or stc outsb jae push adc cmp outsl rex.B add adc cmp jno movabs adc cmp push mov mov rex.WX mov fisttp (bad) and fisttp jmp bswap btr mov clc cmpb jmpq jb clc cmp cmpb jmpq cmp bt stc add bt jmpq je test lea mov push cmp mov mov bt sub not jmpq mov callq out mov loopne (bad) (bad) test ss (bad) mov (bad) pop adc jmpq js je mov addr32 lahf jb rex.XB int3 sbb outsb sbb movabs sbb pop rex.WB jbe push xor mov cmp (bad) stos jmp xor adc repnz repnz retq jg retq (bad) (bad) (bad) sti mov (bad) (bad) (bad) (bad) cmpsl xor ja repz test (bad) rex.XB stos mov add add (bad) (bad) pop in lods xchg clc retq (bad) (bad) div adc cmc (bad) fimul imul rex.B pushfq movabs mov mov pop clc mov cmp xchg add add rex.WXB scas cmc xchg test cmc add stc clc jmpq (bad) out adc stos adcl int mov movslq sub or (bad) cmp cmpsb out fsubrs jg adc cli out test je xchg test (bad) sarb lock insl int (bad) or mov xchg (bad) je shll push mov test push callq push adc loopne adc rex.WXB sbb icebp adc rex gs xor (bad) (bad) sti rex.W cmp jbe (bad) (bad) (bad) sub movl xor lahf shlb mov (bad) (bad) ljmp xchg pop insl or sub mul pop cmp sbb test cmp repnz insb or xchg cmpsb push stc shrb nop rex.R push cmp and outsl and (bad) cs rex.WRB rex.RX rex.WB jmpq or je je bswap mov add btr sbb bswap sub not add rcr sub shr movsbw test bswap shrd mov clc bsr shrd add or add ror xor cmp mov stc cmp clc bt shr bt cmp jmpq inc bt stc xor jmpq clc bt movb cmp bt test jmpq jmpq sbb mov stc bt cmp jmpq test jmpq add (bad) and sbb sub mov retq and out iret (bad) movabs std stc fistpll (bad) push rex.WXB mov adc xchg icebp fild js leaveq (bad) rex.RXB (bad) (bad) jno xchg cmp push movabs add (bad) (bad) (bad) sti sahf int fwait movabs xor (bad) add rcr mov in roll decl cmp int3 rclb push stc jle mov push pop jo xchg movabs add add or test repz addr32 int adc jge (bad) jrcxz fmuls ja test (bad) pop jp rcrl movsb mov jno imul (bad) fwait mov mov rex.WRXB cld (bad) (bad) jmpq jmpq xorb ror out retq add sub jb (bad) gs cmp pushfq callq (bad) in mov rex.R push jg sub cmp mov lret jmp outsl loop (bad) push (bad) mull rex.X cld sub (bad) add add or loopne mov rex.RB mov (bad) mov andb mov lods adc repnz cli xchg ja retq (bad) mov scas ds xlat outsl rex sti and fidiv mov jmpq or idivb xadd push ja lock lock in hlt out (bad) or xlat mov push rex.X or jmp cmpl cmp cmpsl adc mov (bad) jno jp sbb jmpq (bad) flds cmp rex.WRB rex.B (bad) (bad) hlt out retq nop rex scas sarb lods cmp std and loope fist sub xchg imulb orl jo (bad) pop out (bad) (bad) (bad) sti rex.WB out (bad) (bad) (bad) (bad) xor push sahf add mov rolb (bad) (bad) (bad) pushq (bad) mov scas or jrcxz incb push pop (bad) mov push xlat adc mov repnz test jbe (bad) jl jrcxz mov iret data16 sub loopne ja jmpq jmpq sub jmpq or cli push sub mov rex.WRB jne mov (bad) fiadd sbb mov push fisttp int3 movabs mov iret cltd cmpsb sbb mov sbb sbb mov adc es (bad) insb mov cs lret por mov js (bad) (bad) (bad) cld rex.RXB sub add (bad) (bad) pushq (bad) rol rex mov mov out movsb movb (bad) jne add mov xor fistpl roll add pop cmp pop je sub mov mov cmp jns fmul rex iret movsl or jno out jrcxz rex.WRX (bad) cmp xchg mov rolb add add add jmpq js cmp mov cwtl add scas xchg scas jle sbb add int3 fs (bad) sub lods out rex.RX imulb (bad) jp rex.XB add outsb or loop cmp scas add (bad) enterq xor stc jmpq xor movabs sbb (bad) (bad) shrb (bad) xchg (bad) ficoml and movsb push (bad) push rex.RXB ss lretq mov sub ja (bad) (bad) sti xchg (bad) js sub mov and cli (bad) (bad) (bad) (bad) jge stos insl mov (bad) pop mov cmpsb and addb je stos fiadd (bad) (bad) (bad) incl lods rclb fildl movslq sbb push cmpl sbb leaveq push (bad) (bad) outsl or cld cmp and (bad) negb test btc jae sbb mov pop sub int3 stos fistpl rex.WRXB (bad) sbb mov xor lock cmp adc (bad) enterq (bad) movabs xchg sub in xor (bad) xchg mov mov (bad) adc adc retq push rex sbb sbb jns jne rex.WR movabs movsl jmpq push pop push sub movabs xor (bad) (bad) (bad) cld xchg mov movabs cmp jns xchg vmovsldup (bad) jge cmpsl fsubl xchg std sub or fildl (bad) (bad) add xor pushfq mov (bad) sbb pushfq ds xchg add je (bad) mov jp (bad) sbb (bad) push xchg test sbb mov (bad) cmc test xor stc test bt add jmpq jmpq jne gs xor fs insb add jae pop int3 idivb insb xchg leaveq sti hlt in fidivl mov mov in insb adc (bad) adc fadd push outsl (bad) pushq (bad) xor data16 sbb (bad) sbb xor retq repz pushq test adcb and and jmp jge adc retq rex.WR rex loop sahf psllq imull or jmpq enterq scas add cmpsb (bad) pop rex (bad) (bad) (bad) cld adc out mov (bad) (bad) (bad) cld xor jnp cmp test add add (bad) fdivs ljmp rex.XB xchg push cmp (bad) movabs outsl push repnz insl sbb movabs mov (bad) fdivrs (bad) rex.WRXB cwtl sti jb movq push (bad) (bad) cld imul (bad) xchg (bad) xchg xor movabs sbb mov es repz stos out xlat cmp sub loop insl pop (bad) fcmovb mov jmpq movabs xor (bad) push in leaveq ss pop rex.XB mov xlat ja fwait adc js jo clc (bad) shrb es cs mov jnp imul and mov (bad) (bad) (bad) (bad) sti movsl je or (bad) (bad) (bad) decb pop jb (bad) (bad) mov rex.W (bad) fild add or inc jae lahf mov add sbb jae and rorb and xchg lock rex.WB lods int3 movabs mov push (bad) addr32 jmpq jmpq jmpq movslq rex.X lret rex.WRX rex.RB stos movsb xlat jne movabs cmp mov rex.W rex.X xchg add test or fwait nop rex.RXB fwait (bad) iret js jmpq callq negb xor push mov std jb out and add cmp lret out rex.WRB rex.X (bad) insb leaveq mov stos add lea jno out (bad) (bad) sti mov jbe (bad) (bad) (bad) (bad) (bad) lahf cmp push push xchg loopne xchg cld sub xchg xchg (bad) movabs rcl rex.RXB pop (bad) jb add (bad) jbe lods (bad) in jle subl clc mov or add ja or and (bad) adc mov add jae sbb scas mov jrcxz xor cli cwtl ss jno adc sub test std loop jb or callq repz retq jns xchg subl fbstp movb test xchg jle xor fnstcw insb or (bad) (bad) pushq mov cltd (bad) mov rex.WX cmpsl mov mov jae push (bad) pop mov imul pushfq in and movsl iret jp jae mov hlt repz or (bad) mov (bad) mov (bad) mov push (bad) rex.WB rex.RB sarb add movzbw lea jmpq jne test movb stc clc test jmpq jmpq callq jmpq movb stc test jmpq callq jmpq jle (bad) rcl sub add xor and (bad) rex.WRXB in mov adc rcl in rol stos sbb retq int jl loop add jl xor or rex.WRX pushfq jmp push faddl add cltd mov (bad) (bad) popfq int icebp (bad) in (bad) jb sub jrcxz mov js (bad) jns mov lar jl pushfq rex.RB and cmpsl add (bad) (bad) (bad) sti and cmp (bad) decb jae ss mov iret rcll (bad) (bad) decl rex.WXB pop add adc push cmc enterq jne xchg rex.WX movsl leaveq mov mull (bad) or enterq mov stos and lock add std mov pop adc retq jmpq xchg movzwl flds (bad) scas sbb scas (bad) in (bad) mov rex.X rex.WX andb mov (bad) (bad) adc test (bad) (bad) imul test imul ss cli rex.WXB fisttpll lret retq xchg fstps mov callq xchg rex.WR fild lock jge jbe mov (bad) (bad) (bad) sti int mov pushfq (bad) (bad) (bad) (bad) mov clc cmpsb fnstsw rex.WXB cmc je rex.WRB add or add add cli out xor cmp cmp (bad) mov or jle and rex.WRX mov rex.XB push stc cmp rex.RB rex.WRXB fidivrl lods mov pop (bad) stos mov mov and sub dec bt movsbw add sar adc cmc mov sar clc test shl mov jmpq (bad) shr adc jbe pop jle and stc or js xor nop jp cmpsb push (bad) pushfq movslq pop adc pop mov pop addl rex.R imul leaveq mov jrcxz rex.WX in jl test xor jp sahf repnz cmp (bad) (bad) sti xchg in pop movabs in je jo int and mov imul mov adc pop xchg cmp xor cmp jle jb stos xlat mov (bad) (bad) (bad) ljmp insl adc test cwtl imul push scas rex lret jb mov sub rex.X (bad) xor or mov jae rex.B jnp pop mov pop ja stos (bad) jmpq callq jmpq jmpq jmpq jmpq jle callq movzbw mov jmpq pushfq add push cmp js sub fsincos (bad) xchg (bad) (bad) movabs fisubrl gs (bad) out rcll jae retq pop or (bad) imul out add sbb (bad) xor test insb pop movabs (bad) (bad) push or adc (bad) lock or mov add (bad) test sti pop rcrb push mov push nop pslld loopne (bad) xor mov pushq movabs jg adc movabs mov (bad) (bad) (bad) mov movabs fcmove lea xlat cltd mov adc cmpsl stos mov lea test in clc push rex.RXB or int3 mov movabs imul loopne fwait pop idivb cwtl xor push xchg enterq and lods mov pop (bad) push lret imul es cmp xor jge cmp add insl pop pop jge rex.WRXB (bad) test xorl mov mov movabs xchg mov rex.RX adc rex.XB xor push (bad) rex.RXB mov (bad) (bad) decb sub sbb push popfq callq addr32 rex.XB jrcxz rex.RB and (bad) mov lret pop fisttpll xchg enterq sbb hlt pop callq pushq push movsl mov rex.WR (bad) xor outsl sub (bad) in sbb (bad) adc fistpl out (bad) movabs shll pop addb jne jmpq jmpq mov roll popfq imul repnz imul (bad) rex.W pop rex.WRX mov ja push cmp scas and stos lret sbb fistp jmp rex.WB test jbe and fcom addr32 (bad) es in sarl lods add popfq leaveq sti cmp rcll rex.WXB add (bad) faddl (bad) sbbl out mov mov add cmp jmpq (bad) or pop in jrcxz outsl (bad) hlt shr mov insl mov sti gs rex.WX (bad) (bad) (bad) decb add movsl fdivl xchg add test (bad) dec in mov cltd rex.WX or test adc sbb or or push pushfq mov sub (bad) mov or xchg mov popfq add mov xchg xchg cwtl cmp icebp pop or retq sar imulb (bad) enterq add bswap mov lea jmpq cmpb jmpq test test repnz jmpq (bad) sub mov scas mov jrcxz nop (bad) iret rcll movslq jnp sahf hlt out int3 repnz jb or rex.RB cs adc pop cmc (bad) test add enterq out sbb and sbb or push jmpq adc in rex.B pop sub jb jne in jno (bad) imul sti lahf cmp (bad) (bad) (bad) decb push mov add add or imul mov add xchg ljmp mov jrcxz cmp jle ja mov lods or retq adc (bad) push (bad) leaveq movsb movsb lret shrl xor sbb cmpsb sahf add xchg retq dec clc bt not jmpq push lock std std xchg insb in mov retq jp push ss int3 (bad) insl (bad) (bad) xor (bad) rex.WRXB ss mov ja in pushq pop (bad) pop pop lret add loope and sbb scas int rcl mov xchg rex.RX icebp retq in xchg (bad) (bad) lods add js pushq mov jmp sbb rex.WR pop (bad) out sbb mov xchg sub rex.RXB or gs std jns (bad) mov (bad) adc and repnz out cmp fdivl (bad) rex.XB jae lahf in mov xor or (bad) rorl (bad) (bad) (bad) cld rex.RB ja popfq adc scas (bad) (bad) (bad) (bad) movsb jo mov pop push mov add jp cmc pop adc imul lock idivb insb (bad) (bad) psraw push xor push (bad) (bad) jmp lret repz jbe cltd jnp mov rex.WRXB movabs sbb xor (bad) mov rex.RX rorb imul repnz (bad) mov cmp rcrb xchg (bad) mov stos adc retq movabs mov xchg rex.WR xchg sub insb cmp (bad) or stc xchg xor jno xchg movabs (bad) (bad) (bad) sti mov imul pushfq mov (bad) cmp cld (bad) outsl shll xchg (bad) (bad) out rex.WX pushq loop xor (bad) decb (bad) lods mov add add outsb or movabs xchg movsb ja (bad) xchg sbb out cli push jbe clc pop (bad) sbb and ds add and pushfq rex rex mov lahf (bad) push push xchg sub sahf xchg mov pop test cmp mov (bad) cltd stc pop push ss lret scas xchg cmc out movabs lea pop bswap mov xchg xchg pop not movzbw pop retq add add add add (bad) movslq add add add or add or add rorb add push sbb lock adc add xor add addb nop add lock xor add rex add add add add add add add add add add push sbb sub add add sbb pop push sbb push sbb test add outsb jae (bad) insb insb add fs gs rex.XB jne je jb gs push je imul gs movslq jb add outsl js rex.R insb add jb imul add insb outsl (bad) fs gs rex.XB jne je jb gs push je imul movslq outsl js pop insb insb add or or mov pshufw adc mov adc rex.RXB and pushfq cmc jno cli test sub out (bad) pop popfq sbb stos test addr32 je rex.RXB xchg rex.B push out imul loop xchg add (bad) fiaddl mov and or (bad) jno rex.RB rex.WRB jne (bad) sar (bad) fwait adc (bad) stc test fadds out cmpsb rex.RX (bad) in cld (bad) movabs repz int fcmovu nop test and mov pop (bad) (bad) out iret scas insl imul cmpb pop rex.X (bad) iret (bad) scas cltd jg pop mov and pop mov movabs sbb movabs ss hlt pop jle popfq or pop in mov mov pop (bad) popfq and xor xchg pushfq (bad) fsts pop mov fisttpll cmpsl (bad) retq sbb sub rex.W (bad) out mov jae xchg out xor sarl (bad) push leaveq iret add cwtl (bad) rex.R xchg pop cmpsb and xchg add movabs or pop mov int rex.RB pop (bad) jb movsl test rex.RXB scas sbb rex xor rex.WRB and (bad) retq cmp jmp cmp cli (bad) fs (bad) (bad) repnz and mov rex.WXB mov xor (bad) or (bad) mov in clc (bad) or rex.RB rex.WRB stos (bad) and (bad) mov (bad) mov movabs rex.W fisttpl andb mov enterq mov pop mov rex.WR mul sbb mov jne (bad) (bad) leaveq gs mov sbb rex.WRXB rex.W stos mov lahf sarl pushq (bad) xchg in stc sbb rolb jns cmp movups adc push jae adc cs adc xchg sub sbb sub (bad) mov fldenv lfs rcrb (bad) cmpsl sbb mov and xchg (bad) jle and lret shrb mov lods in pop jmp (bad) (bad) sub sbb notb lret rcrb adc jl sbb sub sub fsubrl or pop xor sbb (bad) hlt sub lods pop mov rex.RXB pop push out xor je outsl sbb (bad) xor jp rex.R pushfq pop (bad) test jb cmpsb (bad) or (bad) pushfq scas mov or xor rex.R pushfq shr mov outsl clc rex.XB adc mov shl jb pop insb or pushq push xor pop xchg subl sbb (bad) neg movabs xor cmpsl movabs xor mov addb insb rcrb add add cs movabs (bad) sbb sbb xchg rex.R ds sub pop sbb pushfq xor notl jrcxz imul sarl rex.WXB iret mov (bad) addr32 (bad) lret and imul xchg int3 sub mov jg lods xor add add and test jbe addl fsub test xchg insl repz int sar sub fldt cmp adc lea xchg pop lods push mov out mov mov fcoml test pop rex.WR jnp sub xlat lret jg sbb jne pushq xor push mov sbb (bad) icebp jg rex.XB (bad) fisubrl movabs (bad) ds mov mov lods nop imul jbe jp sbb callq cmp mov push scas sub nop (bad) xlat lea out mov xchg and jmp cmpsb (bad) fiadd lods loopne sbb pop mov outsl rex.WRXB sub and mov xchg mov or imul (bad) loop cmp push rcl (bad) fstl adc out sbb data16 jmpq rex.X rex.WRX cmpsl xor (bad) cwtl (bad) (bad) xchg outsl outsb fstps roll jge xchg repnz lea jg imul adc cwtl xor (bad) (bad) movabs pushq rex.XB xchg mov scas lods jns,pt adc shl loopne lret add fadds jmpq sbb loope pushq out addr32 cs lods (bad) mov pop (bad) out mov loop xor push sub rex.WRB mov mov ja out push je mov (bad) retq decb (bad) cmp (bad) test jns fsubrs pop (bad) rex.WX (bad) pop ja (bad) (bad) loopne stos adc pop cmc (bad) jno push mov ss jle lods jns lock (bad) fimul test (bad) (bad) callq (bad) imul rex.RB cmpsl or jg iret mov hlt adc rex.RX and xchg cli insb xlat imull ror cmp imul callq mov sub retq mov cmp xchg or or (bad) rex.WRB data16 out adc and push adc out nop fiadd test mov (bad) sub rex.X pushq test (bad) xchg cmpsl jo push mov (bad) sarb xor lahf xchg mov mov adc adc xor mov shll (bad) xchg sub jnp mov shll cmc cmpsb lea je in fisttp rex.XB cmp movsl jl test incb mov mov retq or callq xchg clc rex.X fs insl (bad) mov std xor sbb (bad) or out (bad) jbe rex.WXB (bad) sti and cmp hlt scas fstps lret (bad) cmovle std xlat fdivs retq ficom sbb movsb cmp or andb cmp lock and outsl add or out pop movabs and test xor jae out (bad) insl xchg addr32 jo lods xchg (bad) sbb ds scas in insb shlb gs (bad) rex.WRXB rex.XB cmp and jns mov stos (bad) (bad) mov es icebp (bad) jno (bad) xchg stos in sub ss movsl jns and mov std (bad) adc je xor scas jrcxz sub add pop (bad) xchg pushq (bad) mov jmp cwtl es push mov insl (bad) cld jmpq rex.WB (bad) pop xrelease xchg xor movsl xor adc (bad) in sbb (bad) repz xchg addr32 (bad) enterq scas and sub lea movsb fldcw push and repz leaveq mov add cs rcll scas cmp or (bad) push cli fmuls rol jg rex.X and fdivrl xchg rorl jne mov rorb (bad) ss mov or mov pop jl lea or (bad) insb xchg adc (bad) cmp xor cmp pushq testb repnz (bad) rex.W (bad) out or int3 (bad) cmp loop rorb addr32 mov outsl subl int rex.W mov (bad) sub jnp jne and cmp sub rex.RXB (bad) (bad) fwait mov int mov shrb cmp cli retq rex.WRB fwait mov icebp (bad) (bad) mov xchg xorl (bad) push (bad) mov (bad) mov (bad) mov lea cmp scas and or jo cmpq cmpl xor scas jae (bad) xchg lods xor in jp int3 (bad) cli xor rol adc movabs mov jns jp (bad) jmpq pop repz pushfq pushq adc (bad) divl sbb outsl xchg cmp (bad) jmpq rcrl or fildl jbe (bad) lret jne sub rex.R rex.X test sub (bad) insl cmp cmp fldenv jo sub out jae push out cltd js cmc adc stos nop (bad) sti (bad) add xchg (bad) rex.WRB push shll je pop xchg data16 jnp sub es mov sarl imul xlat scas (bad) rcrl (bad) stos jns (bad) rex.WRB or stos icebp orb cltd xchg testl rex.WRX ss std (bad) out and sbb shrb movabs cmc fstpt (bad) mov xchg and sti pushfq test sbb pop add add rex.RB sti out in sub cli sbbl movslq clc cmp lea sub mov and js xchg sbb ja adc (bad) sub mov jo add add or adc mov pop mov insl (bad) (bad) cmpsl rex.WRX js ror or jae add mov add or mov enterq jno gs (bad) jne jb in or cmpsb adc cltd push test test movsl movsl pop jno movsl xchg pushq out rex.WRB rorb (bad) push adc xor mov scas retq pushq fisttpll movsb (bad) rex.WB adc mov (bad) mov add adc test lea (bad) add scas adc jo lock rex.RB es icebp in test sbb scas int subb movabs fs pop sarb (bad) outsl xchg jg ss jo in movabs std rex.WRXB rex.RXB rcll (bad) (bad) sub rex.B lret lock rex.WXB cmp loope fs sbb and jo pop int (bad) subl jo xchg xchg insb addr32 (bad) clc mov scas cs in nop fsubr loope test rex.RX lods xor and adc or mov (bad) add imul cs insb add add add mov (bad) rex.XB clc and nop or cmp cwtl rorb (bad) (bad) or or pop rex.WXB rex.WRX xorl rex.RX cmp stos sar adc sarl xchg insb or or add pop movabs jno xor add rex.WX fwait test xor (bad) loope test xor pushfq icebp addb lret mov sub rol mov out (bad) (bad) (bad) (bad) sti lods push sti rex.B (bad) (bad) (bad) (bad) xchg mov add rex.WRB adc mov pushq inc (bad) movslq add add adc clc cld out js mov and mov leaveq jae (bad) lret and scas mov test (bad) (bad) jo sub (bad) (bad) sbb movabs adc mov subl add (bad) retq lea sub bt btc mov test bsf jmpq jne test bt test cmp movb stc cmp jmpq sbb mov lret lahf rex.RXB addr32 and mov rex.WX jae push lods int xor pop push jge (bad) or adc je std lods mov pop cmpb out rex jno jg add movsb ja rex.WRXB fistpll rex.WRB or mov movabs (bad) movabs ds mov (bad) (bad) (bad) (bad) sub rex.X adc sahf mull movabs sub out test std enterq adc movabs cs mov rex.XB fstp rex.WRB rex.RX es loope addr32 mov (bad) mov jnp mov outsl shr adc jmpq jns (bad) mov push (bad) (bad) rclb outsl pop or jo movsl cmp fiadd pushfq push mov adcl test pushfq (bad) leaveq stos std (bad) movabs cmp rex.WXB mov (bad) xchg sbb int loopne (bad) push movslq (bad) sub pushq rex.WRX jp frstor pop enterq pushq icebp fld enterq push add repz shll outsl xchg fdivr (bad) (bad) decb addl add ja rorl push or fidivrl lods iret cmp movabs rex.WRB incb mov (bad) push (bad) mov es insl int and lods mov jge adc push hlt rclb pop and test rex.WRX retq adc (bad) jge insb xchg (bad) xor rex.R fs xchg (bad) out xor jge or jmp shr and movabs movsb mov adc rex add sub rex.WXB scas rclb movl add nop (bad) push (bad) (bad) push add add or sbb and fs out enterq pop out sarb cs jb jrcxz jbe pop out mov cmp cmp in (bad) cmc cmp (bad) rex.X stos ja rex.WXB and cmpsl sub mov xchg test sbb movabs test mov test and stc add jmpq je btr shld lea push cmc xadd mov not rol sub setns lea jmpq jmpq rex.X and rex jmp mov xchg rex.WX lock cmp iret add test pop sar pop mov push mov hlt repz (bad) mov imul lea and (bad) (bad) cmp lret in mov rex.WRXB cld xchg lret rex.RX xorw sub (bad) (bad) (bad) cld push xlat movabs pop rex cs fs sbb add adc rex.WRXB adc movslq (bad) adc add (bad) jl pop in jo mov sbb iret sbb rex.WR negb add es and vrcpss adc pop xlat xchg addr32 cmp rex.W cmpsl ss cmc movabs repz (bad) jmp mov jae (bad) sub (bad) jmpq fimul int3 stc add iret test mov cmp jle cmp rex.WX (bad) cmp sbb scas and (bad) movsl xchg adc push cltd and shlb rorl data16 pop lods sub and xchg out stc ds cmpsq cmpsl xchg movsl test or cld cltd movabs push (bad) (bad) (bad) pushq leaveq in fisub jnp adc mov hlt xor cmp mov mov (bad) sbb pop xlat lods mov in cmp add add sub and (bad) (bad) int rex mov out xchg mov xor pushfq rol scas shrb insb int3 popfq add (bad) rex.X cwtl idivl lahf (bad) mov leaveq lahf (bad) jne lret xchg mov cmp mov jae adc (bad) add xchg btr mov test mov stc cmp sub jmpq test cmc cmc movb jmpq je cmc test or jmpq movslq (bad) outsb callq jp iret or movslq or rex.WRX jle sbb (bad) out rclb xchg lea and (bad) cs adc movslq or mov or mov mov (bad) jb pop push mov pop es (bad) (bad) (bad) std (bad) (bad) push hlt iret jnp and add add mov jnp rex.WR rolb cmpsb mov mov mov nop rex.RX loope fdivs add outsb and sub (bad) (bad) xor (bad) push add pop add cmp cmp xchg notb in (bad) lock jae (bad) mov (bad) jne jrcxz test jns push cmpsl stos (bad) jmp sbb stc (bad) clc lods rex.WB mov sbb sarl sub and (bad) xchg mov (bad) xorl addl dec neg (bad) hlt sub shl cmp jmpq mov jmpq rex.W lock mov (bad) pop pushq push fimul movabs xchg rex.WR popfq cmp cmp mov imul xlat sub data16 mov jp or cmpb sbb mov lods jnp and add pop (bad) (bad) (bad) (bad) sti rex.RXB xor pop (bad) (bad) (bad) (bad) xor cmp insb in retq and ja pop mov rex.WRB lods adc jg rex.WR (bad) or (bad) xchg rex.RXB fadd lret add rex.X rex.R add pushq sub sub rex.XB movsb lret lock (bad) mov cmp mov icebp shrb clc movabs and xor xor jne mov sbb rex.RB jmpq jmpq inc test mov clc cmc add cmp jmpq mov mov jmpq jmpq push movslq xor cs insb add xor jmpq adc cmp test iret lret fwait in (bad) repnz rex.RXB sti mov scas es sbb in push std repnz (bad) movabs out fcoms (bad) or jle xor xchg mov outsl xchg lret idivl cmpl fdivrl or cwtl cld rex.WRX sar rex.WXB (bad) jnp xchg mov mov (bad) jl fidivrl or (bad) (bad) sti out insb push (bad) (bad) (bad) (bad) (bad) rclb (bad) push andb xor bsf mov add add leaveq stos sbb mov sub mov sbb scas adc jno pop sub pushfq stc push (bad) sbb repz cld sahf std rclb cs sbb fcmovnb cltd stos iret (bad) mov ja stos push (bad) jmpq jne not movzbl lea mov jmpq cmp jmpq ja stc stc stc imul jmpq cmp jmpq not lea jmpq jmpq je movzbw bsf shr ror push movzbw stc mov btc sub mov movzbw jmpq jmpq inc test xor jge inc stc xor clc shr jmpq not jmpq pushq or mov xchg imul int3 out xlat jae jns stos jrcxz rex.WX int3 movb jp jle mov (bad) ss fs cmp xchg hlt movsb sbb (bad) mov (bad) rorl (bad) scas add (bad) popfq sub (bad) mov mov ficomp jns xor (bad) sti (bad) mov addr32 (bad) (bad) (bad) (bad) lods (bad) (bad) pop in rex.B mov dec movsl (bad) (bad) mov movabs insb xchg xchg mov movabs mov rex.B repnz (bad) psrad sti out jnp xorl add out mov outsb (bad) pop or sti mov (bad) sub (bad) xor cmpsl sbb sub (bad) loopne rex.WB fsubrl sbb mull pop jmpq sbb push or cmp add mov movsb and mov subl push or sub lock fdivrl jge lea rex.WR (bad) mov imulb push rex.X mov sub jne rex.WRXB out xor sub jb cmpsl mov loopne sub nop stc cmp (bad) test (bad) mov (bad) (bad) sbb repz lahf mov jle push (bad) xlat mov (bad) cmp clc sahf mov add (bad) xor out movabs fldcw (bad) (bad) (bad) incl movslq je movabs popfq (bad) jmp push (bad) mov int rex imul retq scas pop sub cwtl (bad) out pop clc insl (bad) mov xor ds sub xchg rex.WXB (bad) mov rex.WX sbb cld and mov pushq icebp cmp mov (bad) retq cmp lock jbe cwtl sbb add jmpq div mov cli repz push jae cmp (bad) test repnz rex.WRXB imul add mov sahf movabs sbb (bad) jbe lret mov outsl (bad) (bad) (bad) sti (bad) add (bad) (bad) (bad) sub push cltd adc js lock sti xchg scas movsl and rex.WR (bad) adc (bad) outsb sahf retq (bad) (bad) (bad) (bad) decl insb add mov pop repnz adc (bad) sub rol test cmp mulb (bad) adc imul out xlat retq test (bad) js jae rex.RXB sbb rex.XB add mov pop (bad) ds rcll jg test rex.WRXB cmpsl rex.B adc jne push scas int rex.W test mov xor xchg rex.XB push mov mov (bad) mov xor jns sbb mov rex.RB rex.WXB ss lock popfq std (bad) mov popfq xchg mov (bad) outsl movabs mov scas (bad) push cmp (bad) cs (bad) (bad) decb (bad) (bad) (bad) incl adc insl vcvttpd2dq stc cmp shl rex.WXB idivb outsl jle mov in cmp and imul ja rolb js pop sti mov xor xchg test and or insb push xor ss jnp pop imul (bad) scas rex.WRX jbe lods fwait (bad) (bad) movsl rex.R je cs lods push add int and (bad) rex.R movabs (bad) mov fwait (bad) es or movabs jl cmp and jnp mov nop cmc (bad) mov (bad) je in rex.WB mov rex.RX sbb (bad) (bad) (bad) decb (bad) (bad) (bad) (bad) mov or repnz cmp (bad) jmp inc (bad) and add mov cwtl in rex.X out (bad) fimull cmpsl pop movhps and imul cli movsl lret or jo pop int3 jns (bad) (bad) cmp mov int sbb push out stc cmp pushfq (bad) (bad) xchg jge (bad) add mov jl sbb adc cwtl mov and rex add add (bad) insb sub pop (bad) and ror scas sarl loop leaveq movslq repnz xor xor rex.WR push sti or cmp cltd mov (bad) rclb mov faddl sub sub xchg (bad) in or mov xchg push ss pushq xchg (bad) jg and push pop mov sti imul fidivr (bad) nop (bad) lock hlt push hlt fisubr pushq sub popfq add sbb pushq sbb cwtl pushfq stos cmp (bad) (bad) (bad) test (bad) fsave sub fs test test xor lods sbb xor (bad) loopne rex xchg cltd xchg je mov xchg test (bad) cmp mov sbb xor (bad) pop or pop test push lods push sub (bad) (bad) sbb (bad) (bad) (bad) decb or pop sti int3 jo xlat rcrl or mov rex push (bad) xchg (bad) pop in pop pushfq push mov push cli out rex.RB std movabs jp sbbb scas jmpq clc cmp push add pushq sub (bad) mov sub xchg movsb add in hlt push rex.XB jg (bad) xchg negl cs rcr retq repz jnp es imul xchg rex.WRXB mov scas mov nop (bad) (bad) (bad) incb rex.XB jge rex.RX jns sbb popfq rex.R rex.RB retq push cmp and cmpsb movsb notl xor adc (bad) out (bad) (bad) (bad) std leaveq mov (bad) add add sub add push and shrl pop rex sbb movabs mov sbb push pop cli lret (bad) add mov (bad) sub and xchg (bad) mov jle repz jne cmc bsr sar mov clc sub btc shld shl sar mov stc jmpq jne movzbw bsr mov bt clc test cmp jl ja movsbl pop setge pop movsbw bswap pop movzbw pop jo mov movsbl not pop retq neg mov add clc cmc lods add jne (bad) movsb jmpq add mov stos sbb cmpsl callq mov lods sti xchg add fcmovbe (bad) out push mov cwtl xor mov scas and imul push rex.WR jle fwait or imul and jns or adc adc je cld test jmpq loopne out add mov xchg test mov pushq rex.W data16 or negl sub cmp jl outsl jo (bad) jle xchg jl mov std cltd and cwtl mov cmp jl outsl sbbl cmp jl out jns addr32 rex.WX cmc mov scas sub or rex.WRXB (bad) icebp test mov jge push nop stos xchg sbb gs jp outsl sti test add adc retq cmpl adcb cmp add sbb xchg (bad) icebp pop mov out jns clc outsl and cmp (bad) pop xchg lret stc retq pushq mov (bad) fadds (bad) (bad) clc mov pop xor pop clc (bad) mov xchg movl rex.XB (bad) (bad) cli rex.RXB cmp (bad) add subb ror lods mov add pop mov out (bad) (bad) sti xchg mov rex.WRX (bad) (bad) std (bad) mov rex.XB popfq (bad) push hlt (bad) (bad) rex.RX cmp pop punpckhdq movabs (bad) (bad) (bad) (bad) stos mov (bad) (bad) (bad) jmpq push or xchg vpsubsw addb (bad) int adc xor rep sub add mov push cmpsl mov rex sti mov sub stos lret testb (bad) (bad) mov jle hlt (bad) jmp cmp cli int (bad) in mov div and cmp and (bad) jle,pn scas pop test sbb in ficom rex.WR out fnstenv lods sar (bad) (bad) xchg mov rex sub push sub rex.RB es add rex.WR fidivl adc (bad) shlb std negl (bad) incb (bad) (bad) pushq rex.WRXB (bad) (bad) (bad) cld sbb (bad) (bad) incl sti (bad) data16 addr32 pushfq adc xlat iret std xchg add cmp (bad) and (bad) sub add (bad) in and cli cmp cmp jle rcl add add jg in cmpsb jo mov cmp or xchg (bad) rex.RB mov stc push outsl int3 push add (bad) mov xlat sub and (bad) cmpl jns push std lea and mov rex.RB lock cli stos adc push xor in rcr ds (bad) cmp (bad) rex.WRXB in repnz iret cltd push movabs adc in jne cld (bad) mov (bad) repz sub (bad) in mov jo cmp addl jp pop rcrb (bad) enterq rex.WX addr32 (bad) (bad) (bad) sti mov xchg mov test mov pop mov or stos mov sarb (bad) rex.WR mov (bad) rex.WRX test sub (bad) imulb pop repz (bad) jl (bad) adc sbb iret (bad) testl test pop lock js add (bad) cmp mov and movabs (bad) subl sbb push insl or rex.RX adc nop std sahf hlt pop jl mov pop imul mov mov and and mov lods lahf rex.WRX (bad) jnp scas (bad) shrl retq test pop sub jno mov cmpsb pop rex.WXB mov icebp jbe and test or mov sbbl xchg adc andl scas rex.WB lret jmp (bad) and leaveq icebp (bad) fwait jmpq and or enterq clc and or rex.WRXB rorl (bad) cld rex.WB (bad) out (bad) (bad) (bad) ljmp lret stos mov (bad) popfq (bad) (bad) adc sti rex.WX lea jnp add add ja shrb in (bad) mov (bad) insl mull pushq stc xchg lahf mov mov cld outsb rex.W (bad) insl mov mov test mov add (bad) ljmp fmull or rex.WXB rex.WX adc (bad) (bad) jmpq jmpq jmpq je bt add jmpq callq jae jae cmc xor jmpq outsb out (bad) (bad) pushfq cmpsb enterq xor push (bad) rex.RXB int3 pop cmp test test and mov jge mov scas sbb mov (bad) xchg jnp (bad) (bad) fmuls es (bad) push fldt mov insl jg or xor loope test xchg int3 outsb insb lea (bad) (bad) sti xor sub (bad) sbb mov sbb sub (bad) imul jnp push cli popq add (bad) sti jb movabs rex.WRXB divb sbb insl rex.WXB add xor or rex (bad) (bad) (bad) dec or jg outsb push sbb xor icebp (bad) scas (bad) movsl movsb and pushq rex.WRB push loop lret rolb jp sub push adc or sub in mov add int lahf mov sbb lea jmpq mov jb (bad) jp push (bad) icebp jle (bad) jmpq pushq (bad) add jp (bad) or rex.R repz (bad) (bad) movabs in cmpsb popfq (bad) cli (bad) loope jno pop cmc (bad) cmp (bad) add jae insb (bad) test insb in adc mov mov pop xor sub or push fcoms (bad) (bad) (bad) std or push fdivr (bad) (bad) std mov (bad) loope movabs stos (bad) cmpsb adc cmp xchg sbb add add mov (bad) adc rex.B pop push (bad) rex.B adc scas adc (bad) jmp sub lods rex.WRXB cs pop mov (bad) (bad) out roll xor adc rex.WR cltd mov (bad) add callq decb pop fidiv mov xchg (bad) xchg (bad) rex.WR rex.WXB test sbb fimul test lret cmp test retq (bad) jrcxz xchg or icebp repz adc movabs lods xchg rex.WB ja jrcxz fadds cli cld push xor movslq mov cs rex.WRXB rex.WB (bad) pushq stos std cld enterq pop cmp sub (bad) (bad) cld adc (bad) (bad) (bad) (bad) decb rex.XB mov rex.RX add add jle (bad) sarb pop jl rex.WR ds (bad) adc data16 xchg retq add (bad) jp pop cmc jmpq (bad) push cmp mov shrb adc sbb jae cmp cmp jmpq dec cmp cmc clc cmp not lea jns bswap not jmpq je cmp adc shr jmpq bsf and mov bt test stc and stc clc add jmpq rex.RXB and (bad) mov xchg jno clc (bad) cmc fimul shr outsb add sbb mov mov add adc xchg insl adc mov (bad) and (bad) sub leaveq or add not adc xchg rex.WXB nop rex.WB push adc stc (bad) mov cmp mov (bad) sub mov xchg ja sbb cmp movabs mov out stos (bad) (bad) (bad) (bad) popfq pop cmp jg test lods mov fcmovnb mov add add ror sahf rex.W (bad) mov xor xor retq pushfq mov jrcxz jo add sarl (bad) rex.B rex.RB repnz mov (bad) mov mov xchg cld mov shr in add rex.WRXB movabs cmpsb mov sbb cmpsb (bad) sub (bad) jb sub ja sbb pop pop addr32 insb add div jmpq ds hlt jmp rex.WRB cs and xchg mov mov pop (bad) jb vaddps (bad) sti ffree xor (bad) cld rex.WR (bad) (bad) pushq out sub mov or xlat sbb rorb mov loope bnd sub mov (bad) pushfq cld cmp (bad) (bad) fisubr add (bad) rex.R pushq add jnp loop sbb int cmp icebp stc movabs loopne adc cmp rex.RB and mov push xchg and add cld (bad) pop (bad) pop rex.WX mov adc incl xchg (bad) (bad) mov (bad) jrcxz vrcpps lods and retq mov xchg jrcxz rex.RXB mov mov out sub pop stc jmpq cmp mov mov pop xor imul (bad) (bad) sti mov (bad) (bad) (bad) (bad) popfq int movabs movsb enterq and nop retq (bad) movsb (bad) adc mov lret add xchg add add or ja loopne fdivrp pop rex.B retq xchg mov mov addl xchg jle (bad) icebp jae imul sub jb out rex.WXB mov mov cs sti mov jmpq bt mov jmpq sets btr shr mov bt stc test sub jmpq push push rex.RB rex.RB rex.WRX cs insb add lret stc test cmp push loope xlat (bad) stos rex.WRB gs (bad) std jmpq add lods sbb jmpq xchg adc test push rex.WX jg xor in enterq jg cmpsl cmc jmpq rorb loop rex.X imul movslq rex.WXB rex.W jrcxz (bad) push movsb int3 (bad) add or xchg clc rex.WX jp pop add sbb (bad) pop xchg (bad) (bad) std jle stos (bad) (bad) add add addr32 negl lock mov movsb mov rcrl or sti callq xchg in cmp jle xchg (bad) or test movabs rex.RXB (bad) fwait movsb leaveq add sbb mov (bad) test sbb add sbb mov sar mov cmc test stc repnz jmpq jne jmpq jmpq std cmp or rorl mov popfq mov (bad) insl rex.W (bad) cmp mov rcll je maxps out leaveq cld mov adc (bad) addr32 jg cltd rex.X enterq imul mov leaveq (bad) jae (bad) adc pxor (bad) (bad) (bad) callq jg (bad) int3 cmpsl cltd jle movabs movsb fidivl (bad) sbb jg int movsl sahf (bad) test and (bad) clc cwtl sbb (bad) or ds xchg vcvtps2dq sbb loopne fcmovb cld sub in movabs int add jns fcmove pop cmc mov clc lret (bad) push rex.WR (bad) retq int cmp cmc and (bad) (bad) (bad) (bad) jne jne mov stc rex.WB rex.WXB movabs jmpq pop add lret adc popfq mov roll rex.WRXB retq negl insb mov (bad) (bad) cmpsl sbb int3 lock sahf cmc (bad) test rex.WR shl cmp ljmp adc icebp out xchg xchg and ja and fcmove js jo (bad) mov (bad) (bad) sti out mov (bad) xor (bad) (bad) (bad) xlat repnz addl rorb retq (bad) in (bad) rex.WRX and (bad) enterq add leaveq movslq mov (bad) roll add rex.WRX sub scas push cmpsl mov sbb int3 cltd stc adc cmp movabs rex.WR pushq rcrb or rex.WB loop cmc loopne sbb xchg cld or jne mov lea cs test sub rex.WRB or adc (bad) (bad) ss fwait or (bad) mov add callq mov pop ds xlat lods fsubrl and stos add fwait stos jge or add stos xor (bad) pushfq add xchg insl (bad) (bad) xchg (bad) js (bad) jl leaveq outsb rex.B hlt rex.W andb jnp adc outsl std loope in popfq icebp rcll callq mov (bad) sub outsl stos mov mov movabs xchg add mov pushq rol mov jmpq jge cs notl sbb or imul imul callq (bad) jae jne rcr test btr mov cmp bt cmp add clc cmp movzwl or neg shl mov stc test stc add cmp jmpq xsavec add jae xor or (bad) add or nop rex.B pushq hlt xchg sub popfq fcoms (bad) subb test rex.RX (bad) outsb push (bad) cltd mov mov gs mov xlat and mov shlb js xor iret pop add (bad) rex.RXB cmp rex.WR mov mov movsl (bad) adc fwait mov addr32 rex.X pop neg jnp sub retq int lahf (bad) (bad) mov sbbb (bad) mov fidivrl (bad) (bad) (bad) decb (bad) (bad) (bad) (bad) mov (bad) mov sub hlt jno pushq jmpq sarb xchg rex.XB rex.RX mov push cmp mov cmp or add rex.WB pop push mov (bad) hlt in pop adc in shrb ss and xor xchg stos movabs xchg popfq cmp (bad) cwtl sarb lock cmpsb mov stos or rex.WX cmp or sub (bad) or insl (bad) fadds in mov lock pushfq jrcxz fmull adc jmp fimull push cmp movabs add outsl (bad) (bad) (bad) std or mov (bad) (bad) (bad) std repz sub rcll fcoml add mov or movabs xor data16 andl retq pop sbb add add or and rclb add int mov jae ss movsb (bad) rex.WXB es jp and (bad) add cli fwait sub sbb (bad) sub add (bad) adc js pushfq rex.WXB (bad) fildl (bad) pop nop adc (bad) in fwait add jmpq rex.RB loope jb rex.WX cmp and js,pt (bad) rex.R rex.WRX jne es mov ds iret popfq out rex.WXB rex.RB and mov adc mov sar (bad) sti push pop fcmovnb jne (bad) (bad) (bad) cmp rorb rex.WRB stos jmp (bad) dec push orl insl xchg mov inc cmp fisubr iret repz insl sub popfq ss imul mov pcmpgtd mov mov (bad) (bad) mulb (bad) (bad) lret pop or outsb (bad) xchg or jmp mov (bad) add incl sti cli add xchg (bad) scas cld jmpq (bad) add mov jb mov mov loopne (bad) mov movabs cld scas add lods (bad) push mov scas push scas or (bad) rex.RXB lret (bad) leaveq (bad) mov (bad) movabs lret out (bad) (bad) (bad) std mov sbb cltd xchg sub enterq gs (bad) test cld jg cld rex.WX (bad) adc sbb (bad) (bad) or jns (bad) mov jmpq mov rex.WRXB (bad) cmp pop push cltd mov pop stos sbb push (bad) (bad) (bad) callq sbb ds in mov and or push sub jl push divl xchg adcb rep and adc data16 jns test or lret pop push hlt movabs add adc (bad) add (bad) rex.WRXB sub stc cmc cmc cmp jmpq mov movzbq mov lea pop retq callq neg sbb add add shr mov jbe cmc cmpb jmpq cmp jmpq jmpq jb clc clc cmpb jmpq sub stc pushq jmpq lret rex test sbb lret (bad) sti shrl movsb int rcrb sbb (bad) rex.W xor xchg shrb mov xor sub rex.X test (bad) xchg int (bad) pop cmc fist mov mov pop enterq lret push push or enterq pop cli cs mov in adc sub push shr rex.WR repnz in repnz jmpq stc fcmovnb xor (bad) (bad) std (bad) rex.WRB fldenv add add mov neg fs (bad) jbe (bad) movabs push sbb xor out mov callq mov (bad) stos jge sbb mov movabs jle (bad) in cltd xor out pop cmp sbb (bad) cmp fidivr (bad) movsl (bad) je nop adc mov adc js out (bad) mov iret retq test rclb add movsl (bad) int3 pop push test cmpsl or cmp (bad) (bad) sbb test or add mov (bad) (bad) cld cmp (bad) (bad) jmpq shrb pop mov rex.WX iret stc andb hlt fistp adc adc clc outsb (bad) push movabs rex.XB popfq pop add add insl sub cmp cli rol repz and loopne jp xor sub (bad) addr32 jns or lahf test (bad) push rex.WB (bad) (bad) xor cmc mov xchg or xchg rex.RB (bad) enterq out cltd rex.WX mov rex.WR (bad) jns (bad) mov mov fdivrs adc jns movsb mov lret sub movsb mov rcll mov pop rex.B xchg rex.WX sbb mov pushq imul fwait jnp (bad) int3 push or add rex.WRB pushfq rex.WRXB (bad) (bad) sti out cld xor (bad) (bad) (bad) (bad) rclb cmpsl pop rex.RXB jle xchg add add push push xor rex.WB mov push jmpq jnp jns or lods test cltd add (bad) mov in xchg mov xchg idivl (bad) jb xchg (bad) test callq sbb callq jmpq mov mov cmp or fdivl in movsb sbb xchg testb (bad) js in cmpsl mov stc cli test and ja mov mov xchg mov rex.WRXB cmp fadd xor or mov jge rex.RB sbbl lods rex.WRX adcl sti int3 movabs fsubl fnop sub movabs outsl addr32 pop movabs add add and and mov movabs (bad) or in mov rex.RXB std pushfq (bad) rex.WR je loop retq pop enterq sbb push shll imul sbb cld pop or rex.RXB pop mov xor lea xchg jmp (bad) imulb add leaveq stc (bad) rcll jo jl,pn push mov (bad) loopne ds pop (bad) popfq (bad) pop adc xor xchg scas push jg xor adc mov mov (bad) (bad) callq insb xchg xchg test jl push hlt adc sbb jg cmp mov cmpsb insb (bad) je cmc stos cmpsb leaveq fidivl je (bad) adc fwait cmp mov sbb xchg mov imul roll mov in (bad) (bad) add sbb cli in enterq (bad) (bad) sbb push xchg test pop xchg push push stos rex.WXB (bad) sbb fadds push jge (bad) rorl sub ror (bad) lods adc movabs xchg (bad) mov adc jmp in (bad) (bad) (bad) std mov xor movabs imul rex.WRB jp in (bad) imul and shlb rex.B fild add add in (bad) rcr jrcxz xor jb and scas cmc rex.WRXB xor push cmp lret (bad) add insl data16 fisttpl outsl clc push adc cltd mov test mov cwtl lock rex.WRX (bad) jmpq lock sbb or rex repnz mov rex.WR (bad) (bad) rcr xchg sbb cmpsl mov mov or hlt cmpsb (bad) jae pop cmpb addb ror push or pushfq or (bad) mov push rex.RB mov (bad) push push jnp cmpl or jmpq loop loope out mov jbe cmc movslq sbb es fisubrl leaveq outsl jae rex.WRXB rex.WRXB rex.RX in cmp lret (bad) (bad) std or add rex.WB std (bad) repnz mov jl add add or lret cli mov (bad) cmp pushq (bad) (bad) pop retq xchg ja loop xor xchg (bad) out jmpq add imul jno jo (bad) callq je fidivr sub mov add (bad) movabs cltd jno cmp (bad) mov not bswap jmpq adc jmpq pushq jmpq movabs xchg rex.B and (bad) (bad) enterq in fadds idivb cmpsb (bad) pop sbb (bad) lret lods mov jb (bad) (bad) jb int rex.XB sti scas rex.W movsb mov rex.WXB rex.WX ficompl rex.WX jae jrcxz (bad) fs mov repnz cltd (bad) mov jl test lock retq adc sbbb rex.WRXB addr32 (bad) mov (bad) (bad) negb add jmpq or add sbb pushfq xor std callq fisubr pop mov pop xchg add callq paddd (bad) cmp int cmp adc in cld mov outsl cmp pop lock mov (bad) pop fstl xor jrcxz (bad) sahf cmp js out movabs rex.RX xchg lret xchg rex.X addr32 mov cmp stc clc add test jmpq ja dec test rcl neg sub or bswap clc mov add and adc shr data16 (bad) or (bad) loopne out (bad) jmpq and lock sub movsb and cmp xchg lea adc adc movabs adc mov mov rex.RB or out sbb jo cmpsb in jns sub out shr scas lea and (bad) enterq rex.WRB loop mov lock adc imul sub jg jp xchg repz adc (bad) (bad) ds (bad) (bad) (bad) sti iret mov (bad) (bad) mov cmp rex.WRB scas test mov add (bad) and addr32 (bad) imul lahf jmpq fldt jp lods pop ss cmp mov insb adc rex.WX rorb push jmpq pop jns movsl mov fwait (bad) pop push icebp jmpq pushq jmpq jmpq dec stc stc jmpq (bad) (bad) mov sub icebp cmp in (bad) clc sti lock bnd icebp mov rex.WXB rex.RXB (bad) leaveq out movsl adc add add (bad) sbb (bad) jnp xor xchg rex.XB movabs (bad) jb pushq mov add add movabs mov mov pop sub (bad) (bad) (bad) cld or test (bad) (bad) (bad) (bad) (bad) cmc movabs rex.WRXB rex rex.WX add add add and lahf (bad) mov jge mov fcomi insb and push fbstp stos mov sbb rex.WB in adc jo (bad) xor jp mov (bad) xchg lcall mov test sbb nop sub (bad) xor jrcxz add jle cmp jne in insb or (bad) add (bad) or xor fmull pop sahf rex.WB and int3 out and and xor cmpsl and test fild rex.RB retq and (bad) rex.B in xor cs and push sar (bad) gs adc mov je out mov ficompl xchg mov mov xchg jg xchg jrcxz loope (bad) (bad) (bad) sti xchg mov (bad) (bad) (bad) jge in mov (bad) xor outsl adc es (bad) (bad) (bad) std push pop scas cli jrcxz rex.RXB cli rex xor gs stos rol lret (bad) (bad) xchg clc jrcxz fwait add fs lods mov callq sub adc mov popfq enterq sub cmc bt bt pushq clc cmp jmpq jmpq fdivr (bad) (bad) enterq mov push mov movabs xchg rex.WXB gs xchg jrcxz fisttpll (bad) cmp (bad) insb adc es jp (bad) jns rex.WB mov repnz cmc movabs andl cmc loopne (bad) (bad) (bad) cld rex (bad) (bad) idiv (bad) (bad) ljmp ror in cmp mov out cmp loope sbb xchg mov adcl jmpq add mov xchg mov iret sti imul and rex.RB push mov jo mulb jns adc mov mov xchg jrcxz cs fidiv and push out shll (bad) callq ja std incl data16 decl orl add notl bsf or mov bsr mov sub not mov clc bt cmp sub test cmp repnz jmpq or push or sub push je stos push xor movabs xchg push roll cmp sahf cld pop (bad) push sarl sbb add cli push rex.R and pop test pop test jmp or xor sar clc xchg cmp rex.WRXB cwtl mov adc subl jae (bad) mov rex.WR (bad) push cmpsb movsl (bad) (bad) (bad) (bad) fwait sub in xchg testl movsb adc add add sub movabs pushq (bad) shll xor in pushq rex.WX fs mov xchg jne xchg leaveq enterq fisttpll sub insb jne out or cmpsb (bad) rex.WXB (bad) imul xchg push sbb push rex.WRB out fstl lock xchg outsb movabs movzwl sub xor mov jne ffree adc sbb iret movsl pop test insl rex.WRX mov imul movabs rex.WRB rex.B jo stos xchg lods cmpsb xor lea (bad) sti rex.X (bad) or (bad) (bad) (bad) (bad) sub insb lods sub adc sub jp or (bad) (bad) (bad) ljmp and (bad) xorb insb push loopne imul fdivp push repnz stos scas mov mov xchg add pop xor loop jg or rex.RXB mov movabs add jmpq rex.WR jne cmp loopne pop mov test stos sbb mov mov rex.RX lea jmpq (bad) (bad) (bad) ror jb (bad) repnz (bad) mov imul or test cmp rex.WRXB adc stc (bad) and movabs outsb fs movabs mov xchg popfq jmpq pushq rex.RXB jne (bad) (bad) (bad) sti lahf rex.R or (bad) (bad) (bad) decb pop mov and pop mov js add add or and fs mov (bad) lahf test and sbb retq mov xchg jl cmpsl mov sbb jmpq push pop jle clc xchg mov pop pop movabs mov sti stos xor cwtl in cmp (bad) rex.WX sbb add icebp cmpsb sbb test jl (bad) callq xchg outsl add nop cmp and in sub sub nop js mov decb enterq cli add fstpt jb jb add and rex.WXB cmp mov xor imul sti insl jrcxz out (bad) (bad) (bad) (bad) push (bad) scas in (bad) (bad) xor bnd xchg pushq fwait loopne ds mov (bad) (bad) (bad) (bad) cmp (bad) cwtl callq sbb test insb adc shrb (bad) incl (bad) mov nop lods cld lahf in sbb and ja (bad) (bad) mov (bad) fs test iret sbbl sahf test jne rex.WB lret and sbb mov frstor sti lods scas rex pop xchg loopne movabs cmp mov mov movabs (bad) mov cmp rex.R test xchg xchg cmp lock rex.WXB cs incl jl shlb mov xchg sub xchg fistl fs rex.RX lods rex.WRX xor mov push mov ja xchg shrb xor (bad) (bad) (bad) sti cwtl in and (bad) (bad) (bad) incb mov mov (bad) movsb retq test cmp lcall add add loopne jle movabs mov sbb add repz adc movsb mov or (bad) lahf pushq out sub rex.R mov sbb je clc test cmp cmp jmpq adc (bad) cs mov lret xchg rex.WXB loop lods sbb movsb test sub rex.WRX rex.X sub sar mov outsl pop pushq pop pop test ds in outsl rcl mov xchg mov test loopne out mov or sbb lret je (bad) cwtl hlt mov loopne insl (bad) icebp int jge test sub adc cld rex.RXB fstl sub (bad) (bad) pushq or movsl imul (bad) out std scas movabs mov add rex.RXB rex.RB rex.RX out jmp jae sbb jg jnp or xchg imul jno rex.WXB (bad) jbe sar and imul vaddps jrcxz scas add test movzwl sbb mov jmpq add push insb gs jmpq jmpq jmpq mov adc imul leaveq cmpsl adc xchg (bad) xchg cmp (bad) (bad) pop (bad) enterq (bad) push sbbl pop mov xchg insl (bad) cmp lods stos mov mov jl xchg sti cmc cltd loope icebp (bad) cld rex.RX cmp mov idivl sbbl decb (bad) (bad) (bad) pushq movabs xchg (bad) mov rex.RXB cmp not loopne pushfq sub cmpsl test cmp or sbb adc test xor outsl mov (bad) (bad) rex.RB (bad) scas sbb movsl (bad) or pop mov rex.RB push add imul outsb adc xor (bad) xor (bad) lret adc (bad) decl in movabs rex.WRXB cmp or xor sbb out cli xlat rorb cmp and lret fnstcw icebp jrcxz rex.B (bad) rclb add cld lret lahf mov movabs std mov loopne adc in sbb sti sub in fcmovne movabs pop push xor stc xchg jnp mov std mov mov (bad) (bad) (bad) std jb jg fdivr (bad) (bad) callq fiadd jno adc pushq rex bnd (bad) pop rex.W (bad) (bad) mov fs jge jp push (bad) mov (bad) insb nop mov sub (bad) (bad) push add clc mov cmpsb scas (bad) (bad) cmpsl jne sub bswap sub lea bts rcl movzbw mov ror bt rol add setno cmp ror mov jmpq jmp adc outsb rex.WB rex.WRB jg mov (bad) sub cmp movabs fimul imul movabs sbb outsb rex.WRX push mov callq mov (bad) or mov pop cmp rex.X out mov in fstpl bswap test nop test pop sub cld rex.RX (bad) push sbb (bad) (bad) ljmp push adc mov xor (bad) xchg sub (bad) imul pop (bad) loop xchg mov add out mov gs sbb jbe fadd push add add or adc retq outsl mov (bad) iret test (bad) xor push (bad) movsl xor mov imul jne mov rcrl rex.W push (bad) mov lods pushfq stos mov cwtl movabs sbb lods jmpq scas xchg (bad) sub rex.RXB sbb rorb mov jns xchg mov sub rex.W cwtl rex.WB in or repnz push adc loope (bad) jle jge jmpq ja or push rex.W repnz (bad) ss std rex.X rex.WRB rex.WRB fwait mov mov ds test insl loope xor clc or (bad) (bad) (bad) cli mov push mov std fwait or rorb and shrl jb and mov addr32 icebp lahf popfq cmpsb jge mov jo sub pop repnz (bad) jrcxz jg in mov pushq (bad) (bad) lcall subl cmpsl mov sbb jne sbb (bad) sub stos and lods lea mov mov movsl push ds insb (bad) cmp lods (bad) adc roll add and enterq movabs insb outsb mov movsl (bad) rex.WXB retq rex.WR sbb int3 movb xchg rex.RB mov jg jno push rex.WRXB pop ss pop mov (bad) adc lods mov fdivrs (bad) mov (bad) stos adc rclb mov jl adc (bad) rex lret sbb scas rex.WXB es cmp jno js (bad) pop xchg mov add sti and (bad) (bad) decb loop retq iret stos mov (bad) (bad) decl lahf adc outsl rcll or xor mov hlt out cs jge movsb cmc (bad) fnstcw adc adc test rex.RX xlat rex.R fcoms mov cmp lahf mov jne sarb sbb jmpq jmpq jmpq cs out (bad) jnp cmp movabs sti add or xchg (bad) mov push sbb xchg (bad) stos rex.WB cs repnz out sarb push sub (bad) (bad) and xchg mov or rex.RB mov (bad) std shlb xor xorl xchg mov lret mov or movabs insb js rex.W (bad) (bad) sti lods jp xchg mov mov push js jo lods rcll add adc push push xchg int3 fnsave rex.WRX cmpsl jrcxz rex.RB jne add retq out fist sub fnstcw push jo pop std fidiv lret sahf mov stos mov and pop and mov sub cmp and mov (bad) lret cmc (bad) movabs jbe jbe ds mov movslq (bad) pop jle lods add xor mov movsl push rex.X movabs (bad) lock cmp (bad) cmp movabs (bad) (bad) (bad) decb (bad) (bad) (bad) pushq test rex.B mov movabs sub jnp outsb jae mov icebp rex.WX (bad) leaveq jo rex.RXB es (bad) cmp cwtl cmc fwait mov decl pop lret scas mov movabs movabs scas xlat jle rol cmp packsswb jmpq xor push fisttp lods enterq mov std pop adc lea lods (bad) mov (bad) sar jmpq movsb loopne shrd lea clc sub and btc sar mov and dec shrd mov sar sub and shr adc bt btr dec mov cmp clc bt jmpq add rex.XB (bad) je rex.RB jbe jb outsb insl outsb je insb outsl movslq cs cmpsb pushq cmpsb mov (bad) rex.WRX sbb enterq je jo nop adc cmc cmp or jle test adc mov iret or cmpsb out fdivrs jg push lods (bad) xorl loope jmp rex.XB (bad) sbb and retq mull (bad) mov rex (bad) (bad) (bad) cld push (bad) test (bad) callq gs jnp movsb in or (bad) nop add and pop (bad) sar pushq mov cmp out (bad) shl rex.WRX jns push jae (bad) test mov rex.XB movsl not pop jmpq fwait (bad) es decl (bad) mov mov notl jge int xchg rex.WRX lods stc mov xchg sbb (bad) jmpq je jmpq jmpq ja not sub lea movzbl add clc clc mov not sbb dec mov bt repnz jmpq lea jmpq adc shrb add cmpl xor rex cld cld lods adc adc and out ss cmp mov sub pushfq jle sbb mov sbb andl test and rex.RX jle pop ss icebp out jnp fstps sbb cs xchg mov (bad) sti adc (bad) (bad) (bad) (bad) adc mov sbb lret xchg cs ja movabs xchg xchg sbb add (bad) repnz scas xorb cltd mov data16 jbe subl mov xchg mov mov scas or gs lock push outsl pop add jns ds movabs lret add sahf int movsb leaveq add rex.XB adc rex.RXB movl mov push cmp sbb in (bad) sub cmpl out (bad) lock movabs (bad) xchg (bad) xchg fisttpll movabs lea pop and cmp rex.RXB (bad) (bad) cld adc (bad) (bad) (bad) stc loope mov and sahf (bad) add add jns addr32 int xchg pushq pushq sarl rcrl add rex mov lock pop icebp rex.WB xchg imul sbb rex.WX mov sbb xchg and (bad) rex.WB pop notl mov scas test subl pushq cmp test jmpq jmpq sub test cmc pushq bt clc jmpq jmpq rex.WX ds cmp gs (bad) cmp and (bad) rex.XB test (bad) xor rex.RX lahf sti lea add jl,pn (bad) loop jne jo jne mov fidivr xchg xor jae mov rex.WXB iret (bad) (bad) roll mov mov movsl gs int3 movslq mov mov (bad) std or (bad) (bad) (bad) std pop sub jmpq mov (bad) scas sub mov fmuls add mov lahf mov (bad) (bad) sti addr32 mov sub gs (bad) test and rex.RXB (bad) push repz test (bad) adc mov mov rex.WX mov rex.RXB test test jmpq inc bt clc clc neg cmc stc jmpq bt test jmpq clc sub andl out push jno movabs jo (bad) js fucomip push (bad) push in add jno mov and outsb jmpq (bad) fldt cmp rex.R (bad) sbb xchg sub movsb shr in mov rex.RX sbb movabs xor rex.X leaveq and pop (bad) (bad) rcl xchg and rex.WB cmpsl mov sbb (bad) sti jge (bad) (bad) (bad) (bad) (bad) addr32 add cmp mov lahf rol (bad) (bad) test (bad) (bad) (bad) jmpq or push cltd movsl (bad) push repnz and movabs or test and jns test jne lea mov sti mov sub mov (bad) sbb lahf stos callq (bad) pushq rex movups add jle callq (bad) and cmpsb xlat mov xchg ds sbb out retq (bad) xchg rex.X mov movabs scas addr32 cwtl (bad) pop pop lods sahf add scas mov testb (bad) jo lock movabs (bad) (bad) sti and rex.WRXB lahf (bad) (bad) (bad) decb pushq lret shll sbb mov pop xacquire mov (bad) (bad) decl push jle mov mulb and (bad) scas mov jmp (bad) add scas mov (bad) push adc addr32 (bad) js in rex.W fnstsw jae sbb rex.RXB rex.R xor cs insb add jne sti (bad) stc stc or jmpq jo ja mov rol jmpq jmpq push or or je in in (bad) ss in add (bad) mov mov (bad) mov push mov push push (bad) lods in lea pop mov pushq callq (bad) incb xor shrl sub fnop pushq xor cmp rex.WRB rex.RXB mov (bad) (bad) (bad) std (bad) pop rorb add add (bad) and adc sti (bad) lock add outsb (bad) xchg mov jne mov jne mov rex.WRB push (bad) leaveq pop (bad) cmc pop std test in adc sbb mov add add sbb decl test (bad) not sar test sets mov jmpq jne test add bt cmc test add jmpq add sahf cmpsl sbb rex.RX jb push adc (bad) clc stc fisttp callq fiadd push (bad) cltd (bad) movsl push push jle in cmp rex.WRX (bad) icebp sbb xchg rex.R mov rex.RB fcomps or mov push (bad) rcll rex.X test stos iret cld xor cld divb js jbe,pn out outsb lret sub cmpsl mov pop mov rclb (bad) (bad) sti pushq test sub push int rex.WB adc xchg mov or outsl adc (bad) (bad) (bad) callq (bad) fwait (bad) mov ja lods loope push cmp mov pushq push rex.B rex.RXB rex.WXB movslq or xchg mov and rex.R xchg scas sahf movabs mov mov mov (bad) (bad) sti lcall pop stc cmpsb adc test sub push outsb (bad) xchg rex.WRX xor prefetchnta rex.WB retq rex.XB sub addr32 fdivrs test push xor ja pop xchg cmpb sub lahf mov insl jne fidivrl (bad) (bad) (bad) sti stos movb (bad) (bad) (bad) (bad) xchg cli adc mov rex.WRB cmc or cmp mov (bad) jnp xrelease (bad) mov stc or mov insb (bad) int3 pop mov lret push jrcxz adc adc sti pop xor ljmp (bad) (bad) hlt testb add (bad) xchg mov rex.WB jno (bad) int cs rex insb pushq adc jrcxz (bad) mov stos (bad) js mov lret out mov push retq lret mov lods jge (bad) mov mov jg jae lea jmpq jne sar bt cmp inc xor inc mov cmc mov shr add sbb mov cmp jl test jmpq jo mov pushq ja clc cld cld sub sti negl leaveq sbb jmpq cwtl cmpsl (bad) out lods adc jb jmpq push mov notb xchg push or adc out callq out sbb cld (bad) jbe pop push mov (bad) sub icebp rex.WRX rex.RXB shrq push orl sti lret fstl (bad) (bad) (bad) mov fnsave xchg (bad) pop pushq cmp cmp ja sub sub rex.WB rex.WRX mov (bad) xchg addr32 mov cwtl add add roll cld xchg push or gs (bad) jp mov cmp jae mulb adc lret mov xor mov test callq hlt add pop mov sbb mov mov push (bad) mov mov add jmpq jne bt bts sbb clc mov clc cmc stc add stc stc movzwl not bsr mov bt jmpq gs (bad) rex.WB rex.RB xlat adc in shrb lret xor loopne xchg in repz xchg mov nop pop xchg adc jb cmp (bad) xor imul rex.WB sub rex.W fidivrl sti sub mov (bad) and idivl mov sub (bad) int3 mov test cmp retq push not rex.RXB rex.WRXB mov fiaddl xor rex.WRXB mov (bad) (bad) (bad) (bad) sti xchg (bad) (bad) mov (bad) (bad) incb je addr32 (bad) pop adc mov xchg sub sbb add add sbb jbe popfq or rex.XB jns sub in adc mov imul cmpsl subl (bad) out sbb lock outsl or adc outsl rex.XB xor sbb (bad) push jle (bad) cmp rex.WRXB cmpsb rex.R rex.WRB and rorb cmpsb retq rex.W iret sarl in rcrl cmp (bad) rex.WXB lods sbb jmp xchg outsl or sbb adc lret mov loop cmp (bad) xor jne fs mov push es outsl jae mov pop (bad) lret pop outsl movabs xor in (bad) adc rex.XB callq xchg (bad) pop jp rex.RX sbb rex.WRX pop (bad) jbe rcl (bad) (bad) (bad) sti and add (bad) decb pop mov mov rex.WB pop xchg iret pop cs decl mov rex.R cmp cmp sub mov xchg rex.WX mov (bad) cmp stos mov loope pushfq mov mov mov sbb sbb adc or out add (bad) mov scas popfq mov push xchg mov stos rex.RX or xchg (bad) cwtl enterq rex.WRB popq push (bad) movslq callq imul cmp (bad) cmp xchg cmp xchg stos and sbb mov cmp popfq cs add (bad) movabs (bad) push rex.WRX pop movabs ficompl push repz shlb (bad) (bad) (bad) sti jbe xor (bad) (bad) pop jo or cs xor stos rex cs (bad) (bad) (bad) fbstp sbbl mov addr32 pop test rex.RX faddp andl push cmp sub rex.X rex.WB push (bad) push xor or mov in mov mov inc std ds push (bad) xchg leaveq cli xlat sbb (bad) lods rex.WX pushq (bad) xchg insl xchg (bad) adc out mov (bad) iret andl mov (bad) mov (bad) (bad) (bad) and rex.WRXB nop sbb fimull mov rex.RXB or sbb jrcxz nop rex.WXB (bad) (bad) (bad) std out pop rex.W add add rex.RX addb rex.XB (bad) xchg sbb mov xlat jle neg (bad) int retq rex.WB or jo and mov rorl rcrb mov sbb rex.X xlat hlt cmp sti cmp mov imul cmp addr32 sub (bad) mov rex.WX callq out jle (bad) lahf test fstl and sub xchg loopne (bad) or sbb fdivrl adc rex.WRB data16 (bad) (bad) sti xor (bad) (bad) (bad) (bad) (bad) add sarb adcl pop and push pop scas rorb jge sub lretw jge rex.R jmpq mov repz pushfq int3 xchg nop cs add (bad) (bad) push jns rex.WX (bad) movabs xor or (bad) mov pushfq xchg test mov sub hlt movabs xchg subb add push (bad) mov mov mov mov (bad) xor out mov xor push xchg xchg rex.W gs add jp movsl fadds jrcxz sbb or push push je fwait rclb in mov rex.R jmp cwtl push sub adc pop lods (bad) rex.WB (bad) cli mov (bad) (bad) (bad) std test xchg add xchg movabs mov (bad) rex.W rex.RB std insl xchg enterq cmp (bad) adc push mov rex.WB jno add xlat lods jmp push sahf movsl nop repz iret (bad) rex.WR adc (bad) repnz push movsb cs out rolb (bad) scas ss (bad) imul rex.RX cs or xor addr32 in xor hlt add xchg rex.WX rex.WX xor mov mov cmp bt cmpb jmpq adc rex.WX sub bnd js pushq imulb mov (bad) add mov sbb or out rex.WRXB (bad) out or rex.WRX nop (bad) test incb (bad) xorb mov (bad) add cmp pop jrcxz or jle rex.WB rex.WRB adc retq data16 je xchg fcomip pop lods (bad) (bad) (bad) sti movsl pop in adc (bad) (bad) decb xchg sbb outsb sub and mov mov outsl jno fimull add add (bad) mov sub or test retq cltd mov fistl (bad) mov icebp and and cmpsb mov and add (bad) (bad) repnz test sahf retq rex.R pushq movslq std xchg jae jmpq jmpq je and sbb movzbw cmp push ror shl rol mov inc cmp rol cmc sub movsbw jmpq data16 vmulps imul rclb sub repz btc mov and repnz cmp cmp mov pop test xorl retq clc xchg mov and and xchg jg pushq cmp adc jl mov scas (bad) xchg ds (bad) (bad) (bad) cli jmpq (bad) (bad) (bad) std rcl or and mov add adc icebp cli icebp rcrb mov (bad) nop unpckhps insl (bad) xchg rex.WB fwait rex.WRXB (bad) sbb pandn mov outsl rex.XB (bad) add (bad) (bad) (bad) (bad) (bad) (bad) sahf rex.R lock cmp outsl leaveq mov mov cmp sub movabs mov xchg (bad) cmp sbb cmp outsb (bad) rex.B fs lock lea sti pushfq int3 mov mov jmpq ja rcl clc sub bt neg jmpq ja push jle xchg jg xlat jo mov fwait rex.WXB imul xchg cld mov pop xor test mov (bad) pop xchg rex.XB int3 jns (bad) or xor mov pop mov addr32 (bad) imul (bad) addr32 (bad) cli adc pandn or jne (bad) retq loope xor rex.WRB cmp push lock loop (bad) cmp sub jp cld xor and sti (bad) mov (bad) sti xchg test (bad) (bad) incb stos movsb xchg lret add add jmp cld rex.XB fdivrs mov retq stos or or (bad) and xor rex.WRB rol sbb outsb cld cmp adc add rex.XB mov (bad) fmuls out mov and retq repz rorl repz cmp jmpq mov and loopne sahf fstpl mov scas mov rex.WB xor adc jrcxz xchg hlt outsb imul (bad) pop mov movabs vmovaps xchg js cmp stos adc loop xchg (bad) mov cli ss xchg ficoml cmp push pop (bad) rex.RB repnz push and adc xlat rex.W xor mov mov lock cltd (bad) insl (bad) (bad) (bad) (bad) fidivrl popfq fs xor int movslq rex.WRB add add pop cmp out retq adc (bad) xchg cmpsb sub js (bad) sub vpunpckhdq rex jge (bad) add lret shrl fidivl (bad) (bad) rex.RB sarl sub mov rcr loope je seta mov movzbw movzbw bswap mov setae jmpq jmpq movabs jge adc lods test push cmp pop mov fisttp and rex add mov addb add (bad) stc sbb push es xor hlt mov pop mov (bad) andl insl (bad) movabs cmc jae xchg (bad) sbb cmp sub add (bad) (bad) (bad) cld adc addr32 (bad) (bad) (bad) (bad) std cmp add sbb enterq cmpsb mov and jg xor add add mov mov in sbb test push cmp fdivrl sahf test ss imul negb or (bad) jbe stc cmp movsl mov or retq cmp (bad) (bad) callq bt bswap mov cmc test stc bt shl jmpq sahf and icebp or mov out pop push rex.X xchg (bad) mov (bad) mov mov sahf (bad) outsb cmovge rex (bad) rex.RB fs in jo outsl rex.WRB cld rex.WR insb sbb and push cmp js mov fs pushq ja lods iret fnstenv (bad) cmpb out xor sbb fisub (bad) (bad) sti adc (bad) (bad) std stc jns (bad) imul mov pop sahf (bad) cmp xchg test xor xor (bad) (bad) (bad) callq xor rex.RB mov movl in lods decl xchg mov sbb fidiv movabs (bad) popfq int jne outsb addr32 xorl push retq outsb pop (bad) mov (bad) xor nop jbe sub jae or mov (bad) (bad) (bad) in xchg push stos rex.WXB fwait adc and (bad) cld or nop cmc out add xor je and sti fisub int jle (bad) add test add rex sbb jg or mov mov ficomp rex.WRX (bad) (bad) (bad) sti mov mov (bad) (bad) (bad) (bad) ja clc pop cld out movsb rolb outsb push test movslq std out rex.WX rep retq jno ss pop out jae scas sub (bad) sbb (bad) (bad) (bad) (bad) cli lods cmc or roll and (bad) fistp jmp (bad) (bad) sti mov (bad) rex.WR pushq rcll lahf int xchg sti lret movabs movslq and (bad) imul push mov (bad) mov adc cwtl movsb rex.WXB xchg rex.WB mov pop jg jnp fcmovnbe add jno cwtl sbb cmpsb (bad) mov xchg mov push test fcompp add cli bswap movabs ss movslq xchg rcll scas adc out (bad) out loop rex.RXB xchg mov lret pushfq rcrb (bad) (bad) (bad) movabs pop rex.R xchg psubsb jo (bad) (bad) (bad) jo xchg (bad) outsl cmp pushq (bad) sbb lods jbe xchg movabs movslq add or or imul mov sbb fs cmpsl cmpsl cmp mov rex.WXB sub fsincos (bad) lahf loopne add rex.WRX cmp cli lea xchg insl xchg fsubr mov sub (bad) pop (bad) add xor and mov (bad) insl mov sub or (bad) mov stos fdivl div and cmpsl or jae mov (bad) rclb es adc (bad) rex.WR (bad) insl retq je flds and (bad) pop int (bad) scas add push sub popfq xor je mov add sbb sub mov ss (bad) (bad) cld mov cli nop movsl (bad) (bad) (bad) lcall insb adc (bad) jbe movabs pushq fcmovb xchg mov adc push rex imul movabs (bad) in cwtl (bad) repnz sarl sub mov fwait rex.WRXB icebp pop adc popfq mov vpsubsb mov cmpl mov vandps flds pop test mov retq mov pushfq mov clc faddl int3 movabs fwait lret and pushfq rex.RXB mov mov push pop (bad) add xor stos mov loope rex.WXB mov not retq or in jle (bad) (bad) (bad) cld push mov (bad) (bad) (bad) cmp jo lahf (bad) sbb sti and movl ficoml adc jbe rex.WRX xchg divb rolb lods rolb cmp movsb sbb add add jne pushq movsl int3 repnz (bad) sbb rex.WRB push mov lods cld sahf xor lea movslq test pushq jb xor repz (bad) (bad) mov jne movabs (bad) (bad) jns cld bt test sub cmp bt pushq test cmp cmp jmpq rex.WRXB add jge rorl mov (bad) stos (bad) mov mov gs (bad) lods test sbb (bad) jns test xor xchg jmp push andl (bad) jne xor shl movabs pop (bad) cmp popfq (bad) and test pushfq or (bad) (bad) sti cmp movabs pushq pushq jne and jbe negb cmpsb movabs mov (bad) (bad) (bad) roll (bad) mov add add push sub jg sub adc push add sub xor repnz (bad) (bad) rorb pop add (bad) cmp mov or (bad) jbe add jl adc xchg mov scas xchg decb scas mov (bad) mov and jmpq cmc add cmp cmp mov bt jmpq mov fcmovb mov add (bad) jl mov (bad) or movabs shrl xchg adc retq cmp mov jb fisub test (bad) cmc mov (bad) rex.WX nop and (bad) (bad) sti outsb lea (bad) mov pop cmp or (bad) (bad) xchg (bad) rex.RB and xchg cmc and data16 mov rex.XB rex.X sub pop cmc (bad) (bad) (bad) (bad) movabs movabs adc add add and outsb adc loopne (bad) mov mov cld xchg push or pushq cmp push cmp jge popfq roll and pop cmp movslq or xor mov enterq lods add repz xchg jno sarl mov loopne pop mov out outsb push out icebp movabs adc outsl cli int rex.RB movabs loopne add sbb xchg insl jne nop leaveq sbb xchg cltd or cmp sbb (bad) in adc addr32 (bad) out fs (bad) jnp xor (bad) lods rex.WR (bad) fidivr mov test rex.XB mov (bad) mov mov add (bad) je stc cltd (bad) (bad) (bad) sti push adc push (bad) (bad) (bad) (bad) (bad) push pushw stos loopne lahf rex.WRX cmp xorb (bad) (bad) (bad) mov adc or xchg pushq test loop cli (bad) out cs adc mov iret mov jo es adc insl std test (bad) and (bad) mov leaveq ficom (bad) and mov nop rcrb (bad) sbb iret (bad) xor cli negl int (bad) jg jge movabs icebp sub bnd loope or imul shrb fsubr jrcxz rex.WRB cs (bad) shl fcmovu mov movabs (bad) retq test mov sub fcmovnbe xchg movabs xor (bad) (bad) sti jp repnz xchg (bad) (bad) (bad) (bad) movslq hlt adc rex.WR sar (bad) (bad) jmpq (bad) sbb ja sbb popfq (bad) push subl test retq jge rex.RB in (bad) mov mov (bad) mov xor rex.RX callq fist retq test pop add lea mov mov mov bswap xchg sete mov bswap jmpq clc jae es loopne sbb mulb (bad) (bad) lock pushfq rex.WR xchg jrcxz shl std repnz sbb in sbb pop xlat shlb fistpll movslq scas movabs movsb out mov xchg shrb rex.WXB push fistl (bad) sahf addr32 rex.RB mov or xor in cmc callq adc or or mov mov mov nop rex.XB push repz rex.RX xchg fsubrl (bad) sti sbb (bad) (bad) (bad) imul (bad) sbb mov jmp xlat rex.W lock fnstcw xor movabs popfq mov fcomi mov mov rex.WRX mov movslq enterq scas mov cwtl mov and js out rex.WR mov int3 (bad) enterq in (bad) add cli int movabs adc push or xchg imul cwtl sbb xchg mov push mov (bad) lahf (bad) test pushq mov sbb cmp mov imul xchg cmpsl test retq movabs adc pop fsubrl lods xchg (bad) (bad) (bad) cld pop rex.RX rex.WRB (bad) (bad) incl rex.WX leaveq cmpsl (bad) (bad) icebp sahf (bad) xor loope rex.B lahf in rex.RXB rex.XB pop movabs add add (bad) shrl rex fs xlat (bad) mov (bad) unpcklps sub jo loopne xchg mov pop xlat jo rex.B iret hlt push pop rex sbb js jb mov cmp adc (bad) pop or sbb mov js add mov mov addr32 and adc fsubr xchg fld stos add out adc (bad) mov cmp pushfq mov callq jns jne push rex.XB js mov (bad) pop (bad) subl outsl push sbb icebp (bad) (bad) addr32 jbe (bad) mov lock (bad) (bad) cld (bad) incb es (bad) (bad) ljmp and callq push test and in adc sar cmp and rex mov mov ds repz (bad) andl loope iret (bad) push or (bad) (bad) js xchg (bad) in or adc out xlat xchg (bad) mov cli (bad) push sbb out (bad) push sub or movabs stc int fisubrl iret sarl push sub adc add std in sbb mov loop js out rex.WR jg mov or mov (bad) mov notb test (bad) add callq rol sub btc bsr mov mov and shr add sbb rcl add sbb mov stc cmp cmc stc test jmpq sbb adc leaveq cld retq icebp (bad) adc adc or mov lret int and xchg rex.WX (bad) mov jns lods mov cmp outsl pushq mov stos (bad) (bad) (bad) std out push loopne fs xor ds mov jns cmpsl xor mov xchg insl mov (bad) std leaveq xchg push enterq add sub out jns (bad) adc es ficoml retq cmp fdivrl jbe xchg lahf iret (bad) rex.RB (bad) mulb lods lods (bad) (bad) and xchg sub in rex.R rex.WRX push rex.WB cs insb add and (bad) lea cltd rex.B mov and (bad) loop movabs pop xchg cmp mov pop gs mov mov nop lsl lahf cltd cmp mov jl movsl gs test movsb test lea jae mov (bad) callq (bad) loope retq cmpsb (bad) fbstp jl and sub retq add add or mov fisttpl add mov std xchg mov js movabs loopne xchg sub in ss rclb adc shrl lret rex.WX pop mov xor andl jmpq adc jno cmp stos (bad) cmp and mov ss sub add xor (bad) jle scas (bad) lods leaveq add cmpsl rex.XB sub or fmuls push (bad) sarb (bad) rex.WRB rex.RX push mov add ja imul (bad) mov jns (bad) adc (bad) (bad) sti (bad) jge insl (bad) (bad) (bad) (bad) incb cmpsl add (bad) pop mov jp add add add or loope jge rex.XB rex.WRB rex.WRXB lcall ja mov or int3 pop (bad) cmp loopne fcmovb negl repz push sub and push es (bad) outsl rex.X rcrb rex.WX test test adc (bad) mov (bad) (bad) leaveq add push (bad) mov scas push jne (bad) sbb stc retq loopne out fstl imul outsb adc jl scas rex.WR outsb int3 hlt rex.WX xor outsl lret pushq add sub mov (bad) (bad) cld xchg cld xchg test jg xor rex.WRX mov (bad) fildll pushq out xor push movsb xchg enterq mov loopne test insb xchg jg lock mov in add add sub jns sbb jns movsl jno movabs mov xchg cmp xor cmp sbb (bad) (bad) jge mov mov cs cs loopne (bad) mov rcr imul add test (bad) decl movabs cli test test jmpq add rex.RXB gs outsl fs imul js add (bad) (bad) not add shl mov cmp cmc test jmpq jmpq addr32 addr32 roll push je rex.R rex.W insb (bad) out loope xchg test jnp rex.XB rex.RXB psubusw sub in movsl pop mulb pushq jmpq js xor cli cwtl cmpsb stos xchg scas (bad) fmull stc xor (bad) fidiv rex.WX addr32 jne movslq (bad) shll popfq subl and cwtl rex.WXB xchg rex.RX int stos movabs jmpq rex.XB mov stc outsl es (bad) (bad) cli movabs mov (bad) jbe pushq or (bad) sti scas fist test (bad) test (bad) (bad) (bad) jmpq sbb cmp andl jne movsl mov pop (bad) lea lret lods cmp pushq sbb (bad) jb rcr jge (bad) mov jmp sbb xchg (bad) sbb std (bad) callq jmpq sub jmpq seto jmpq cmp movsb sbb out mov adc (bad) (bad) (bad) or fstpt imul cmpb (bad) mov pop add add outsl pop sub or cmpl scas (bad) adc (bad) and xchg sahf jmpq sub fbstp ds add cmpsl negl rex.W xor outsb int3 scas push (bad) retq and adc mov andl jge leaveq (bad) (bad) (bad) (bad) xchg jl jns (bad) (bad) (bad) ljmp hlt sbb ss movabs jl mov pushfq xchg mov mov cmp cmpsb xchg out rex.WRX (bad) movsb lret rex.WX leaveq pop rex.X rex.WRXB orl jnp sarb mov or cmovs cmp adc (bad) int3 (bad) add lret movsb (bad) lock mov out clc ja mov (bad) lock stos iret xchg cmp (bad) or fsubp fidivl loop (bad) jmp adc hlt cmpsb (bad) cmp ja mov outsb adc sbb cmp fcoml js xor cmc and push mov or rex.RB xchg rex.WXB cmc movabs and in fmull imul lods addr32 ds (bad) push out (bad) pop mov add sbb (bad) (bad) cmp loope (bad) test sahf xor push lock repz movabs stos movsl callq test in out lahf out pop push hlt es cli lahf enterq (bad) enterq rex.RXB rex.WX (bad) sbb mov movabs jnp stos pop mov sub in nop loop rex lods mov jns (bad) rex.WXB fcmovnb adc js mov loope (bad) (bad) sti cwtl ss movabs or (bad) (bad) hlt negb jne push xchg add add add stos push cmp insb addr32 or rex.R popfq mov cmp pop popfq mov add xchg mov cmovp (bad) and add jns mov (bad) fs (bad) jno jo jbe test (bad) xchg mov ds rolb mov pop or fwait sub xchg hlt pop adc xchg incb add (bad) icebp xchg rex.XB fs pop (bad) ja or outsb add mov or sub and jae fcomps out rex.WX stos xchg (bad) rex.WB fistp retq xor retq mov cmp rex.X sbb or hlt enterq (bad) (bad) sti (bad) loope repz (bad) (bad) (bad) mov jmp outsb fisttp hlt rex.WX imul sbb sbb add add ficoml pop (bad) cmpsb lea sub xor (bad) (bad) pop push mov rex.RB mov lahf mov rclb cltd mov (bad) (bad) out scas jg add push rex.RX outsb ja jnp (bad) mov (bad) jp xchg mov mov imul xchg xchg enterq sbb (bad) cmc (bad) stos rex.WR enterq (bad) adc pushfq (bad) in cmc mov rex.RB cmp pop jg push sti (bad) and cmp fidivl (bad) push push imul jge jl pop pushq or mov mov and jg out pop ja (bad) pop mov or rex.RXB and sub cmp (bad) (bad) (bad) cld rex.WX cmp (bad) (bad) ljmp fisttpll jo fcompl movsb (bad) (bad) add add or and je rex sbb jle mov ljmp rcrb addb addl shl mov and rex.R pop lock adcl jno mov xlat leaveq loopne fwait jmpq ja jmpq sbb pop xor cld (bad) xor adc xor push mov xchg iret add movabs push popfq sbb scas and insl adc pop in fldl movabs hlt clc jae je push es repz fbstp ss mov out (bad) (bad) (bad) (bad) std cs jno add add cs (bad) sbb addr32 jmp pop (bad) rex.WX adc xor stos retq push rex.X nop repnz xchg ss pop sti mov mov xor cmp test (bad) sub xor xchg movabs cmp (bad) xlat (bad) jmpq jg insl jmpq out rol mov and test lods push rex.X lea and (bad) callq rex.WR sub (bad) jle shrb adc mov jrcxz je or fstl mov out iret movsb xchg cmp fstpl cmp (bad) sti jns fild xor (bad) (bad) (bad) (bad) pushq nop retq cmp je or add imul add mov xlat sbb (bad) retq mov xchg stc jb es cmpsl jp (bad) (bad) dec mov sahf rex.RXB clc insl rex cmpsb cs rex.WB pop rolb rclb int3 popfq scas mov movabs jbe (bad) jno rex.R add (bad) mov fnstcw (bad) test retq add rcl cmp add movzbw not mov bt jmpq out mov (bad) cmp (bad) cld stos rex.RX (bad) mov (bad) mov mov fmuls mov or nop jae adc hlt lods xor rcrb (bad) or stos cmpsb (bad) (bad) push repnz sub (bad) cmp cli out jnp loopne hlt repnz movabs (bad) sti xchg adc shlb (bad) (bad) incb (bad) (bad) mov mov jne test loopne push cmp ds (bad) (bad) xor jle xchg fcomps mov xor insb imul mov hlt push cmp add add add jns imul int fwait lret cmp lahf movsl test rex.W rol mov xchg lods hlt movabs lahf add jp in push (bad) leaveq movsb xor (bad) loopne push lock mov fcmovu insb pop xor rol fildl add cmc mov cmc cmpb jmpq je bsr bsf btc not push btr or btr mov add mov add sub setne lea je callq inc stc add shl add mov cmc cmp stc cmc cmpb jmpq jbe ds (bad) mov xchg mov lahf xchg push rex.XB lret ss jl (bad) mov fnsave add lea rex.RX sbb outsl (bad) imul ss push fs loop sub add test rol ffreep mov sahf popfq pop ds rex repz rex.WB out addr32 clc in std push jb (bad) push callq (bad) (bad) push mov movabs xor lret cmp cli rex.WR jae rex.RX int rex.WR sub (bad) jne (bad) (bad) sti rex.X rex.WRXB in (bad) (bad) (bad) (bad) sub callq (bad) ljmp mov lea cmpsl (bad) sub movabs sub rex.W data16 roll mov mov jb jae mov (bad) jnp sahf push (bad) insl add cwtl rcll fistpl jns js test (bad) or and adc in pop (bad) rex.WX out xchg rex.RX lods (bad) (bad) movabs mov movabs xchg mov lock test and mov jg cmp push cmp popq in mov cmp xor int lret pop push mov (bad) movsb sbb (bad) xor mov (bad) (bad) (bad) sti and mov (bad) (bad) (bad) (bad) decb sub sbb lods test push rex.WRB (bad) (bad) (bad) decl rorl incb mulb in subl (bad) jnp sub (bad) sub mov xor (bad) je (bad) fs in jp repnz vcvtpd2dq mov fnsave cs inc cld movsb adc insb add std testb xor pushq jle outsl pop imul es in adc push xchg hlt xchg xor rex.WR in or and mov stos jl rex.WXB fcomip out jrcxz fcoml sbb pushq lock xor (bad) (bad) (bad) decb (bad) (bad) (bad) jmpq mul int3 or movabs sub mov rex.RXB lret cmp iret imul sbb (bad) rex.WX cmp retq ffree (bad) in rorb sub mov js push or add (bad) adc xchg mov xlat or jle insl jo,pt mov fnop andps jae sub adc flds in add jrcxz cs mov add test cmpb xor outsb and (bad) cmpsl jg (bad) std ljmp movabs add mov mov movabs or imul sti jno (bad) ficompl (bad) (bad) (bad) pop js mov stc rex.R xor mov ds (bad) (bad) pop gs (bad) (bad) (bad) fiaddl lods out rex.W rex.WXB jge lret es int andl rol mov jns and (bad) xchg (bad) pop decb pop callq sub (bad) cmp jge sarl fsubp js (bad) rex.W rex.X pop imul std mov (bad) push xchg fs sbb (bad) cmp xchg rex.WB in rex.WRX repnz fbld cmpl jg cwtl es movb (bad) retq (bad) leaveq jmpq scas int3 and jp mov and rex.X repz xor sti iret sub xor (bad) (bad) (bad) mov mov out loopne xchg enterq out leaveq add add addr32 pop mov mov push add (bad) div mov mov adc cltd (bad) sub add mov sbb sbb (bad) push adc rcll (bad) add in sbb std xor jle test add cli cmpsl jne adc lock retq (bad) cmc jmp sbb mov fsubp rex.RB rex.RB rex.RX test outsl imul add mov (bad) add pop jnp sub sbb ficom add cld in jmpq sbb movabs in (bad) (bad) cmp mov rex.WX pushfq push jmp pop out rex.RX loopne stos pop out rorl cmp rex.XB callq push (bad) rex.WRXB mov lods mov stos iret jne jrcxz mov scas jmpq mov mov (bad) (bad) (bad) pushq xchg mov cli movabs (bad) or sbb xchg mov cmp stc pop add test fbstp (bad) xchg mov test add loopne rex.WB jp mov xor lahf leaveq or cli mov test sbb and mov (bad) (bad) jmpq je cmc cmp cmp sub bt cmc cmp jmpq je cmc cmp jmpq cmc mov test bt cmc bt test jmpq jrcxz or rcrl (bad) mov sti and imul push (bad) xchg jno cmc lahf mov cmp pop (bad) xor cmpb jb pushq pop imul (bad) addr32 test popfq push cmp push in jne pop xorb pop popfq mov movabs mov adc (bad) jae rex.WR repz and movabs (bad) or leaveq sbb adc xchg repnz popfq cmp jns test jae ror cmpsl and rex.RXB pop (bad) sbb lea add ss add push test push std idivl (bad) outsl scas sub nop out lret mov rex.WB (bad) adc rex.RX pushfq cmpsl fmull xchg mov out add cwtl (bad) xchg jg ficompl (bad) cmc (bad) rolb add sahf xchg add movsb xor repnz clts rolb (bad) (bad) (bad) cld (bad) lahf int3 xchg cmpsb (bad) (bad) (bad) (bad) idiv jo cmc insl or rex.W imul fdivl sub xchg (bad) or mov cmp leaveq (bad) (bad) out outsl (bad) rcr sbb xchg (bad) repz cltd cmpsl lods adc add cli mov mov scas mov retq (bad) jnp retq (bad) xor add add movabs (bad) pushq (bad) xchg mov (bad) pop jp or fdivrs insb adc cltd (bad) (bad) push cmp xor xchg jmp js rex.XB xchg mov adc jge rex.WRB mov loop xor jmpq adc cltd movsb sbb pop xor xor sbb enterq lods add loopne cwtl pushq cmp jg (bad) stc bnd pushfq fist test jle and sbb imul js outsb insb test imul rex.WRX in pop rex.WRXB mov nop jo (bad) sbbl mov rex.XB enterq add decb xchg rex.XB xor (bad) (bad) sti rcll (bad) (bad) (bad) (bad) (bad) stos xchg sbb xchg addl fnstcw rcrb adc add add mov sarb fwait scas ja sub loop lahf mov (bad) mov rex.XB cmp cmp add or fbstp icebp xchg rex.RX mov pushq jmpq je clc bt ror shr push bswap mov or movsbw sub jmpq (bad) (bad) add mov (bad) mov xlat adc cmpb movslq test xor cld (bad) (bad) or rclb shrl rex.WXB and (bad) sub jp or js mov test lret nopl lods adc jl callq leaveq insb pop mov clc mov (bad) rex.WB rex.WR pop (bad) (bad) (bad) cld add mov js (bad) (bad) (bad) in xor sbb adc or add add add insb sub mov leaveq lods sahf rex.W or sub (bad) repnz int3 pop adc pop rex.XB (bad) rorl sub (bad) jl fild movabs addb jae cmc movzbl shr cmc mov stc clc and mov mov rcl shl bsr sbb mov cmp bt sub stc cmc clc repnz js jne cmp sbb shl data16 (bad) or lock sub bswap lea mov cmc bt bt bt sub clc pushq test cmp jmpq (bad) jle sbb cld movabs adc addr32 movslq test pop popfq mov jmpq adcl rex.RB rex.WB pop mov push or iret mov (bad) repz jns xor sbb mov sub push hlt xchg andl sarb (bad) (bad) (bad) sti nop jns movsb xchg (bad) (bad) (bad) (bad) jns fistl cmp sub sub jne (bad) sub sti pop push hlt (bad) (bad) repnz rorl cmpsl (bad) (bad) (bad) dec rex.WX or xchg test movaps xchg jmpq push or pop int mov shlb (bad) mov xchg lret sbb jae sbb dec scas mov mov sub jrcxz (bad) mov (bad) retq int or cmc mov scas iret scas fwait (bad) cmp jns cmp movabs lods test (bad) (bad) imul jle stos lret fmuls jge add rex.WR sarb (bad) (bad) sti in fwait mov (bad) (bad) (bad) ficoml idiv jno rolb cld mov add insl cld movabs movabs adc or fs mov and (bad) mov icebp add add sub iret imul (bad) mov fdivl (bad) jb out jge data16 mov add scas xchg xorl jg cmc insb adc rex.WXB mov hlt push sub (bad) je sbb sub adc stos (bad) (bad) push xchg push xor cmp jb roll add mov sub or mov (bad) test leaveq mov jl sbb (bad) es mov outsl sbb movsb push or insl outsl or in (bad) jmpq or lock (bad) and xor cld rex.RB mov sub (bad) (bad) incl rex.WRX fs mov pushfq andl xor std icebp pushfq int3 (bad) cmpsl add add outsb (bad) (bad) lea add cmp fcmovne lret stc xlat sbb (bad) xor out cli cltd add or xchg jbe mov adcl adc jno push add mov (bad) rex.WB mov out xor test stc add bt test jmpq jae jmpq (bad) clflush stos int rex.WXB out rex.WRXB sbb jg mov cmpunordps rol sbb and imul test mov movswl add in rex.WXB stc mov xor mov in sbb mull mov andb popfq repnz (bad) (bad) cld sbb idivb add xchg (bad) mov gs jae mov fcom lcall out cld (bad) hlt movabs mov (bad) popfq retq jne (bad) movabs add add rex.WRXB in outsb int3 lahf fsts fcoml or jg pop out (bad) loope mull add sbb fidivrl callq lret sbb and cld mov callq add jmpq jmpq jmpq je test jmpq adc mov cmc cmp cmp jmpq jmpq jmpq xor loop hlt mov movabs (bad) movslq (bad) (bad) loopne in mov fsubp out mov pushfq or and movabs push out jmp scas sbb test enterq stc idivb xchg ffreep stos rex.WRB lea (bad) add (bad) (bad) cli (bad) (bad) cmp (bad) std (bad) idivl (bad) push jnp jae jnp rex.WRB xchg mov in mov mov rex.WXB sub shl addl cwtl (bad) xor add es mov stc mov jge retq sahf add cs clc push clc insl adc mov vpmaxub rex.RX rex.WRX test jnp (bad) adc fwait add mov (bad) rex.WX in or mov (bad) rex.X es rex.B ficom or (bad) icebp (bad) sti movabs add mov (bad) mov jmpq (bad) adc repnz lods pushq mov retq mov jrcxz lret lods add ja stc out rex.WR pmulhw jl adc sub (bad) cmp cmp and (bad) sti sarb (bad) (bad) (bad) mov jbe rex.WRXB rex sti (bad) cmp mov add add cld (bad) out in xchg pushq addr32 xchg pop roll clc mov pushq movslq jae ds (bad) xchg rex.WRX callq or push sub outsb (bad) adc stos jmpq mov (bad) mov add je bt bt cmp cmc cmp retq jmpq jne ror mov bt bt cmc add bt stc movzwl inc bswap ror mov jmpq jne cmc movb cmp jmpq jne inc shld mov shl cmp sub sar mov test sub cmc jmpq rex.RB adc outsb shrl std fldl rex.RB or sbb enterq retq push sub add lret sahf push cmp stc add js jl out adc jle mov cmp fwait (bad) and or (bad) retq adc and cmpxchg out movabs or gs sahf cwtl and or (bad) push cld xchg cmp popfq xchg (bad) int3 adc loop and cmp pop sbb (bad) (bad) sti loop fwait gs (bad) (bad) dec (bad) insb and js jae xor add int3 add je add add rex.WXB xchg icebp (bad) mov lret jns (bad) mov add rex.R adc pushq rex.RB repnz xchg mov in in jg jne xchg adcl jb rclb in fwait sub xor test jmpq callq pop leaveq jbe (bad) mov in rex.RB sbb push xor (bad) jne rex.WRXB leaveq std cltd pop cmp (bad) hlt or (bad) adc movabs and loop fbld cmp movabs nop sub pop rex and shrb xlat stos (bad) notl std (bad) jae rex.RXB lock (bad) (bad) jmpq jg jl pop hlt cli rex.WRXB and movsb cmp insl sbb (bad) push mul nop cmpsl mov movabs xchg add or mov mov out or jmpq test jmpq rex.WRX movsl (bad) add mov adc jmp (bad) cltd enterq and out fiaddl movsb fildl xor and iret lods mov (bad) rcr rex.WR imul loope ror lods (bad) (bad) movslq pop rex.XB fs lods cmpsl or jnp lock push and scas fs fld adc ficom sti lock (bad) fnstcw rex adc push (bad) jae in nop (bad) add test movabs rex.XB in in and rex.X rex.RXB sub in retq add scas fist rex.WX jnp,pn add add (bad) (bad) cmp shlb (bad) adc (bad) fild sub mov cld mov or (bad) (bad) rex.WR pop or add jmp (bad) add mov es cmc jrcxz push xor shrb add retq cwtl imul rex.WRX enterq and hlt jmpq pop or cmp clc cld (bad) (bad) movabs xchg scas rex.RXB mov rex.WB cmp fisubrl cmp sbb ja rex.WR jl movabs push xchg (bad) cmpsl cvttps2pi xchg push mov test add rex.WRB mov (bad) stc in mov mov icebp out (bad) or rex.WRX popfq (bad) movsl (bad) cmc xchg nop movabs push (bad) adc (bad) or adc (bad) jle (bad) (bad) sti cmp (bad) (bad) (bad) (bad) es fist xlat (bad) rex.WRXB adc fdivrs xchg (bad) (bad) jmpq xor lods outsl mov adcl js movabs jns mov and sti pop sti xor test jmp or mov out je ja xchg sub jnp jbe cmp mov mov push test gs out cld cmc mov rex.WRX (bad) scas movl (bad) cmp out xchg lods (bad) adc (bad) outsl movslq fsubrs adc gs retq push fadd pop repnz out popq mov lahf jnp mov fist sti jo imull (bad) pop cmpsl in pop (bad) sbb rolb (bad) add or xchg leaveq jbe (bad) cs rex.WRB cs jrcxz cmp mov jb lock pop (bad) jnp mov cmp (bad) incl rex.WRXB jmpq std (bad) ss cs lock or movabs xor popfq mov xchg cmpsb rex.W and (bad) pop enterq (bad) mov sbb pop stos ja push add bswap and mov cmp clc sub jmpq fisubl sub cmp (bad) int3 cmc rex.WRB mov popfq mov pushq add add mov rolb in add mov rex.WRX cmp rex.XB xor jns mov sbb jl or movsl cltd (bad) xchg rcl mov cmc rex.RXB shrb nop cmpsb test shrb and js (bad) sub (bad) pop sbb cmp (bad) fs (bad) (bad) (bad) and cmp mov cld cwtl mov or (bad) (bad) (bad) jmpq rclb (bad) jmp (bad) (bad) cmc mov rex.R callq adc test (bad) callq adc leaveq pop (bad) stos mov out cmp xor (bad) mov icebp jg rex.WXB sub push bts rol not stc push cmp shld xadd push bswap push sub bts mov movsbw dec shl mov not mov bt or jmpq movslq pop pushq cltd cmc out insb pushq fstps gs rex.RX test rex.WRXB pop sub and movsb in sub rex push std xchg lods cmp cmp lahf cmp movsl rcr lods (bad) roll xchg cmpsb rex.B mov (bad) sti jle jle xchg add push sbb (bad) (bad) sti (bad) sahf rol jb (bad) (bad) std callq (bad) pushq jrcxz icebp jo sub xlat lcall (bad) jmp shlb jle (bad) pop xchg in out cwtl clc and lock xchg divb (bad) add mov (bad) (bad) (bad) (bad) (bad) jmpq int3 scas add jmp insl pushq (bad) sarb cmp sarb lret pop cmp pop stc mov movabs icebp stos lret jl jge sbb xor insl lret jne sbb jmpq add jo pushq getsec int enterq sub cmpsl sbb mov lret (bad) jae outsl mov adc xor (bad) pop outsl push in lods and add pop and rex.WRX (bad) push xchg xchg pop popfq add lret xchg (bad) add pop (bad) cmc fstl rex.WX mov (bad) andb (bad) jnp cmp int3 jl,pt rol lods sub enterq lods xor sub (bad) (bad) sti fs pop cvttps2pi (bad) (bad) decb rex.RB stos cli cmp cli cs cmp stc idiv (bad) (bad) dec rex.XB mov outsb lret (bad) je pop (bad) mov rex.WXB idivb mov or imul stc rex.W imul outsl leaveq pop adc (bad) mov mov hlt xor or add (bad) ljmp or and jmp pop jge xor sub and rcl adc retq in roll jrcxz and mov (bad) (bad) enterq fwait lcall lods mov mov ficoml cmc movabs xchg fcmovb int3 fs xor xchg in xor gs sbb out test test sbb mov xchg cli jmpq pop (bad) (bad) test pushfq sbb pop (bad) and sahf xchg mov and (bad) (bad) decb (bad) (bad) (bad) pushq rex.WRXB sahf jrcxz xchg and or xor (bad) std xchg imul fs fstpt (bad) xor pop rex.XB (bad) jle xlat std lods adc sub mov jg mov repz or (bad) mov adc push mov mov push andl cmc repz rex.RB stc pop pop add pop xor sarl rcrl mov fdivrs ja movsb jg (bad) cli insb mov rol sahf xor xchg std pop or rex.W xchg mov (bad) incl shrl xor outsl jns icebp adc lahf and mov movsl (bad) xchg movsl in jnp adc pushfq rex.RB rex out fist insb xchg adc (bad) mov add mov ja adc lahf add rex.WX pushq cmp jg lret scas mov cmp mov push rex.RX cmp xchg mov jo mov sub mov repz mov sarb repnz mov push rex.WRX mov mov ljmp movsl int fcmovnbe fdivrl lret movabs add (bad) movabs clc pop xor (bad) xchg mov movslq push fistl and xchg rex.WB cld mov je int3 adc mov mov gs (bad) (bad) cld rex.R repz xchg xchg (bad) (bad) decb and sarb jb adc pushq jae rex.WX fadds add add mov mov lods xor add jg (bad) int3 pushq pop loop rol cli push (bad) xchg (bad) sub mov pop xor push pushq jmpq jmpq (bad) or (bad) fisttpll (bad) mov xchg int sbb out sbb jl or jae movabs (bad) callq insl shrb movsl (bad) repz (bad) callq sbb sbb outsl mov adc rex.W rex.RX test xlat mov mov (bad) jne decl retq sbb (bad) add movsl jb icebp test (bad) (bad) decb in (bad) (bad) fwait push xchg add add or (bad) or and fs movsb outsb mov mov rex.WRB rex.WR out sarb xchg orl cltd movabs sahf jno sbb mov push (bad) add push incl imul jne jge cmpsl movl out or add movsb iret pop jle lock adc xlat (bad) ss jbe iret imul test xchg adc pop jl sub enterq add jrcxz pop rex.WRXB sbb rex.WXB (bad) (bad) cmc ficom adc repnz jmp jb (bad) (bad) (bad) cld sbb pop ficompl (bad) (bad) incl mov (bad) nop jae pushfq loope cmp xor stos rex.RB ja or insb (bad) xorl add add je rex.WR rex.WX mov mov mov rex.WXB add test xor rex.RXB pop adc xchg mov sbb imul xchg mov sub stc int3 mov clc in rex mov stc cmc clc repnz jmpq jmpq jmpq add xchg xchg (bad) callq enterq mov rex.RXB and mov jae mov rcrb sub cli test sub cli sub cwtl movabs icebp fnsave std out cmp mov in jrcxz fildll mov push addl jb sub lea mov sbb gs xor mov in (bad) (bad) (bad) sti lret ja sub (bad) (bad) (bad) (bad) mov push loope xor rex.WRXB cmp rex.RB icebp cmp (bad) mov cmp (bad) or rex.WXB mov lods mov sub add add or test cwtl xor out or or pop xlat push icebp (bad) mov push or pop rex.WX cwtl mov rex.RXB push movabs stc pop jae xchg clc cmc sub jmpq je cmp cmp jmpq pushq jmpq ja jmpq loope loope rex cltd rex.WRB rol (bad) loop es pop cmpsl and (bad) repz (bad) divb mov outsb (bad) pop ss push or pushq adc mov fcmovnu mov mov (bad) adc xor clc (bad) gs ja ja xor rex.WXB pop xchg fs push test (bad) jae adc (bad) xchg mov jbe mov cmp rex.WX mov mov push (bad) xchg jb loope jle pop movabs (bad) sti lahf icebp int jg (bad) (bad) decb (bad) out mov (bad) jo add add or mov (bad) jmp mov or in mov mov sbb xchg adc mov fisttpll mov or or mov mov cli mov callq and shlb mov lea jmpq rex.WRXB pop test or push push add mov jge (bad) add xor ficomp or mov rex.RB mov (bad) loop (bad) nop pop pop xor in frstor out lods (bad) (bad) cltd clc in insl jle cmp mov jle xor outsl (bad) add rex.RX cmp insl mov lret ficom xchg or (bad) (bad) (bad) sti movsb xchg push mov decb movslq sub or pop xchg xchg retq out (bad) stos fdivrl add add mov mov adc and pop test sbb mov mov retq scas push (bad) pop xor in xchg movabs out (bad) and pop movsl sarl sub rex.R jne mov sti (bad) ja pushq jmpq cmp jmpq jl xor rex.RX jg rex (bad) test adc movsb enterq or jle sbb imul jb popfq stos lret mov xchg in mov iret mov sub rex.WXB cli repz lahf push cltd (bad) addr32 and push pop rex.WRXB pop rex.WRXB shr sbb or (bad) lods (bad) add rclb (bad) (bad) cld (bad) mov (bad) (bad) decl clc rex (bad) scas (bad) fdivr callq xlat mov (bad) mov hlt mov sbb mov xchg (bad) fiaddl add add icebp rex.WB test rex.WB jno (bad) pop xchg sbb enterq (bad) and cmpsb add lret mov sbb sbb (bad) xlat mov mov cld insb std punpckhwd callq movsl rex.WRXB stos adc mov push and cmp movabs jo or jmpq xor lods and adc cmc adc int mov rex.WRXB adc data16 jbe es sbb (bad) cmpsl iret jne cltd push and mov jl jae adc rex.W testb retq fwait mov lahf icebp and adc (bad) (bad) sti mov jmp (bad) (bad) (bad) (bad) (bad) fwait cltd mov insb pushq mov repnz repnz add add sbb scas cmp pop pushfq mov (bad) sub out xor lahf mov adc in jne mov rex.X mov sbb mov loop sbb mov js rex.WRXB std addr32 push mov sub bts bswap add bts lea mov inc clc sbb mov clc repnz jg jne test cmc test movb cmp test jmpq stc movb cmp test jmpq clc rol cmp clc cmp neg jmpq jae mov jmpq (bad) push jle add (bad) push xor xchg adc rcl mull (bad) sub jrcxz in int fwait loope jo (bad) fsubr fildl jno adcl movsb rex.B enterq cmp sbb rex.WRB lea add sbb mov mov sbb sti sub (bad) fisttp sbb (bad) (bad) (bad) sti sub test add (bad) (bad) (bad) adc lahf push subl mov jmp stos sbb (bad) (bad) callq jae or out rcll lahf sbb and rex.WR rex.WRXB sub sub xor pop nop mov cmp callq (bad) (bad) jb xchg sbb rex.WRX gs adc rorl clc cmc stc jmpq outsb test rex.WB cs cmpsl testb mov (bad) cmc icebp (bad) retq int out xorl xchg rex.WX (bad) adc sub gs (bad) push push (bad) rex lcall adc loope (bad) rex.X sub rex.B outsb clc (bad) in (bad) mov jbe out jrcxz mov sub (bad) out std push (bad) (bad) (bad) (bad) sti ds pop stos mov (bad) (bad) (bad) (bad) popfq pop gs xchg sar test (bad) negl (bad) adc (bad) (bad) cli jae xor (bad) (bad) push (bad) (bad) cwtl xchg adc mov pushq sub ja (bad) jge lods fwait rex.RX add in repz rex.RXB int sbb (bad) ud2 gs stos mov decl (bad) (bad) adc add mov cmc jmpq (bad) sbb int fsts sbb sti and jae cmp (bad) adc cmp xchg pushq (bad) mov std xchg add cmpsl (bad) (bad) and sub out pop push jmp or (bad) mov int ja pop xor (bad) enterq test mov xchg pushq movabs mov movabs es repnz mov (bad) (bad) imul (bad) rex.WR mov add mov rex.WRXB (bad) jp lock (bad) sahf xor mov cmp mov mov negb (bad) xor rex.WRX or int repz sbb pushfq mov out ja repnz jmpq (bad) movsb (bad) rex.X adc xchg mov mov jbe rex movslq movsl fadds push orl fcom mov loope clc insb enterq add cltd pop andl or mov rex.WRXB (bad) fistp movabs sbb mov movabs jns sti (bad) (bad) (bad) decb (bad) sbb rex.XB sub mov xlat cli push cmp outsb mov xor (bad) push (bad) (bad) jmp (bad) or mov (bad) jbe fisttpll andl sbb or jno rex.RXB (bad) jno rex push loopne mulb std xor imul xlat mov xor adc mov pop sub cli rex.WB rcll adc sub jb sbb jle cmpsb ss xchg push (bad) callq stc test jmpq enterq (bad) add shll rex.RX test lahf mov push pushfq mov movsl xchg add rex.WX adc outsl mov rex.WRX cmp jl push mov rcr (bad) xor mov (bad) enterq (bad) xlat lods (bad) incl adc mov fsubs fsubp jnp xlat and (bad) in enterq in rex.WRX or sti rex.RXB (bad) (bad) (bad) decb or popfq xchg repz repz mov loopne (bad) (bad) dec jl orb rex.WXB andb jo sbb loope movslq in scas (bad) scas xorl insl std test push (bad) rex.B ds xchg fadd test (bad) pop (bad) mov add add imul jae adc jmpq fsub fcoms xchg negl and out out rex.WXB clc (bad) (bad) fisttp jae adc ffreep scas mov gs movabs cmc (bad) fwait in sub fwait lahf jmpq mov rex.RX cs (bad) out std mov and pop (bad) jmpq pop mov rex.RX rex.WRXB rex.WRX mov insb (bad) cmpsl clc rex.WR sti mov (bad) loop (bad) (bad) (bad) (bad) pushfq popfq mov pop xchg adc std loope mov add add add cwtl adc pushfq incl (bad) cli (bad) xchg jo add and add cmpsl (bad) pop lahf mov sub pushfq int repz movabs rex.B outsb ss xlat outsl stc pushq mov add cmc sub add fmuls pushq mov rclb push cli (bad) cmpsb (bad) sub (bad) pop mov fs int test cmp sarb (bad) rex.W (bad) in sbb jp rex.WR mov and sub jmpq sbb xor fwait and xor insb or pop push stos jo (bad) (bad) push negb int3 scas fucomi fnstsw ja,pt lret (bad) (bad) cld (bad) (bad) mov (bad) (bad) (bad) decl jb or movabs mov push jnp fisubr add or mov push sbb mov es xor jno sbb or loopne xchg enterq loope jb mov cmpb jmp or sub sub sbb add movsl (bad) mov add and jae adc shld mov inc shr sar stc mov setle dec mov cmp jns xor cmc bt bt stc repnz jmpq ja clc cmc stc imul stc cmc clc stc add jmpq adc jmpq (bad) xor xor (bad) insb xor cltd mov xor iret cld (bad) jl push mov ficoml loop (bad) mov mov (bad) fisttp test sub icebp pop rex.WRXB cmp loop jg rex.WRB adc mov out (bad) rex (bad) sub (bad) and and fs adc sub mov (bad) (bad) (bad) sti mov ss (bad) lahf (bad) rex.WRX mov (bad) (bad) fisttp rex.XB pop add lea add xor xchg (bad) (bad) clc rex.RX mov imul jmp jge jmp mov add xor int test out (bad) (bad) (bad) mov xchg callq cmc jrcxz adc (bad) scas rex.WB pop sub rolb jo leaveq imul lods addl xor callq mov (bad) (bad) sbb (bad) pop mov mov or addr32 fwait (bad) (bad) int3 (bad) cmpsb mov (bad) movabs fldl out adc jb rex.WRB jg adc add sarl (bad) and (bad) retq insl xor retq add clc popfq xchg negl cld add cmp imul (bad) lret scas (bad) out iret xchg adc xor sub rex.RXB (bad) insb (bad) mov scas push rex.WX orl loopne push fs push (bad) mov (bad) (bad) (bad) xor rex.WRX (bad) (bad) decb (bad) (bad) (bad) (bad) scas xchg lahf xor mov mov mov imul nop rex.WXB retq mov pop mov add push out in cltd negb add imul mov mov adc insb mov or mov loopne pop movsb mov (bad) jmpq shll rex movslq fisttpl pop rex.X push or rex.WR scas pop mov insl out out push enterq (bad) sbb and pop insl and jp cmp loope adc mov (bad) (bad) decb mov xchg test (bad) sbb adc pushq adc jmpq xor rex.RXB insb rex.X and shlb push mov xchg mov sub (bad) jrcxz pop rex.W (bad) (bad) xchg jl scas (bad) divb callq adc xchg (bad) cli xchg sbb jbe andl and cwtl mov jl loop rex.RX subb pop or rex.WRB push rex.WXB (bad) loope xchg rex.WX cs mov adc adc rex.X jbe (bad) outsb addr32 (bad) (bad) (bad) incl (bad) out (bad) movabs insl mov mov jno cltd negl jne rex.WRB addr32 popfq (bad) jmp cmp jle cltd cmpsl cli rex.WR lretw incl movsl add cmp mov mov xor jns lea or pop int (bad) imul or mov pop jg jnp rex.X movsb out test imul cli or loop insb lret pop rex.WRX incl movslq pop (bad) scas xchg add xor (bad) sub mov push cmp nop cmpsb shrb out xchg (bad) (bad) (bad) cli jbe xor xor stos mov rex.R rex.RX pop cmp in rex.W iret test mov fcmovne shrl test repz and es jle and (bad) punpcklbw bnd add mov or mov (bad) mov insb jae and xchg sti pop sti cwtl mov xchg xchg shrl cmpsl adc iret clc rex.RB rcrb gs loop mov rex.X rex.WX sbb rex.WXB cmp cld or jmp mov or (bad) sub adcl cmc clc test cmp jmpq jae dec shr mov stc add rcl test mov shld (bad) cmc add mov bt sub cmp stc stc repnz jae jne bt mov cmc shr sbb btc sub clc mov jmpq not movzwl mov lea movzbw mov lea jmpq jmpq test test mov bt cmp bt jmpq cld (bad) mov xchg pop int jnp fisubrl idiv cmp sbb (bad) xor rex.RXB jae rex.WX imul rex.X fs int3 or in xlat xor xchg sbb (bad) pop pop fs cmp xor repnz rex.WB pop pushq out jge pop (bad) xor mov int mov (bad) (bad) cld test (bad) lods (bad) (bad) (bad) (bad) ljmp jl jns or and roll xchg jns ds adc fstl add imul pushq rcrl rex.WXB xchg jae or (bad) jbe cmp adc rex.RXB rex.X sti push ss mov lret scas jrcxz mov lock adc or stc add jmpq mov sarb fwait (bad) fs pop test (bad) adc xlat hlt lret cmp rex.WRXB push pop cmp mov fisttp loopne cmp cs sti pop push mov (bad) pop test and movabs and cmpsb movabs mov fwait (bad) retq xchg pop jmpq sbb outsl pop lea (bad) push sub mov (bad) (bad) (bad) cld adc (bad) (bad) (bad) cli jmp rex.WRB rex.WB cmc fsts (bad) div sub rex.RX jmp and cmp shrb mov add add rcll cmpsl mov movabs jle je sub or xor test clc mov jb cmp stos int3 loop (bad) jb sbb (bad) (bad) imul callq pop (bad) push je scas movslq hlt pushq xchg rex.WXB icebp out test and outsb sahf cmc jmp pop cmp loopne rex.RB lret add mov (bad) loop shll movabs rex.WRB pop or rex.WRB cmp pop adc jp ljmp mov sub insl mov (bad) (bad) callq rex.XB movsb pop cmc enterq repz push movabs mov sub add add or jb (bad) rex.WRB (bad) jp movslq faddp adc callq mov fdivs sbb orl int add cmp movabs add mov callq xchg movabs pop test and rex.WR repz (bad) icebp data16 sub faddl jrcxz outsb adc rex.WRX cli xchg rcl add cmp insb leaveq (bad) mov fucom pushfq rex.WRXB movabs sbb stos lret jnp test std std movslq (bad) and mov je jns or (bad) mov sti pop rex.R (bad) incb es movabs xor (bad) (bad) (bad) inc mov jg cmp lods fs movabs jmp jrcxz xchg sbb rex.R and inc mov sub xchg rex.WX rex.WB cmp sbb (bad) jle lahf and or test imul xor pop push mov or rex.WR cmp sub hlt fdivr cmpxchg loop (bad) xor sti push lock rex.WX or test cli lahf (bad) rex.RXB cltd cmpsb push push mov (bad) xchg cs mov in movabs add jno (bad) (bad) (bad) sti and lock (bad) (bad) (bad) decb xor lods loope mov adc je jle mov mov rex.W and xchg rex.WB test fiadd jmpq (bad) lret fwait cld sub pushq lods pop (bad) (bad) (bad) (bad) cmp (bad) xchg mov and pop adc and push push clc mov mov in mov push in ja mov (bad) iret out add cmc test rcr mov cmc jmpq je jmpq cmp jmpq adc jle pushq rcr rex xorb jo push mov rex.WRXB jbe jp pop (bad) in mov in (bad) mov (bad) xchg push fidiv pop cld andl repz jmp mov add cltd cmp push rex.RXB sbbl push retq sub fistpll sub (bad) std enterq mov cmp rex.WXB or loop xchg scas notb mov lret es rex.RB shl rorl jno push (bad) loop subb jrcxz sti (bad) jne fnop (bad) (bad) (bad) callq jb (bad) cmp mov (bad) hlt fisubr movsb fbld pop adc pop and ja sub (bad) (bad) sahf not movsl and rorl xchg mov test cmp fwait mov mov adc rclb or or push (bad) loopne mov insb fs nop cmpsb sbb mov and add xchg int jno xlat adc jl or mov fnstsw cld xchg fwait ja lahf (bad) mov mov (bad) jg xlat (bad) mov (bad) lock sub pop (bad) out jmp mov stc (bad) lea pop mov (bad) cmp xchg and mov lea movabs decl rex.R or (bad) (bad) (bad) sti movsl jae xor (bad) (bad) decb add rex.WRX outsl xchg add add or mov (bad) rex.RX adc jns xchg lahf mov mov repz adc rcll jo cmp pop cmp (bad) jge and adc xchg or je stc add jmpq cld movsl (bad) (bad) jbe sbb icebp rex.XB mov out mov stos xor add cmp iret pushq add mov jo mov negl rex.RXB mov fwait jg clc fucomip mov movsb (bad) sbb (bad) addr32 cmpsb adc gs (bad) gs (bad) (bad) sti (bad) (bad) inc (bad) adc nop rex.RXB sbb rex.RXB ja shlb insb or sub shrb sub leaveq callq rex.WXB in lret or jae (bad) (bad) push mov add add iret sti lods iret (bad) (bad) mov loop leaveq sti xchg (bad) pushq mov mov mov enterq and mov lret cld xchg lods xorl xchg mov xchg adc mov (bad) fstpl loope fisttp mov adc movl and (bad) jmpq mov mov pop cli movabs jge xlat or rex.R sbb add jrcxz in pop mov pushq jp push xchg sbb push notb (bad) rex.RXB rex.RXB sbb pop rex.B push xor pop mov mov rex.RX rex.WRB imul or jne cmp test xchg mov sub retq lahf cld rex.WRXB rex.R mov (bad) (bad) cli fdiv movsl outsl (bad) (bad) (bad) (bad) std retq jmpq test mov icebp pop jg and pop adc pop movabs flds pop xor rex.RXB mov or rex.RB sbb pushfq mov movsl cld out jl (bad) lret sbb jnp xchg sbb mov xchg pop adc adc rex.WRXB mov adc retq add cmp stc or jmpq mov fisubl std (bad) jle pop adc mov adcl push xor nop (bad) mull sahf pop rex.X push sub rex.WR adc stc push hlt or sbb mov out lea cmp xor pushq jl jns (bad) (bad) icebp hlt mov lock callq rex sahf rex.RX mov (bad) adc sub or cmp fildll cmpsb movabs cmpl (bad) (bad) cld add push jbe (bad) (bad) (bad) (bad) (bad) xor mov sbb (bad) ja sub add add movabs fbstp imull and sbb rol hlt lahf mov iret movabs sub ficomp and repnz (bad) cwtl push sti sarb xchg outsb or test bt stc jp test xor jmpq mov jmpq sbb rorb pop movabs push cs (bad) lahf mov in rcll or fcmovbe retq mov (bad) lock pop lea rex.X js lock xchg scas rex.WR imul xchg loope jne insb js sub fmuls fstpl stos or lret (bad) (bad) (bad) cli cltd outsb test (bad) (bad) (bad) std (bad) stos iret decl (bad) push rex.B rex.WXB sti (bad) insl (bad) push pop movabs (bad) and movsl pop sub and (bad) test rex.WXB (bad) (bad) jmpq mov int jl scas (bad) mov xor scas (bad) rex.WX jne and (bad) (bad) insl or mov (bad) retq (bad) cltd (bad) fstl (bad) mov callq (bad) sub nop mov push fisttp sbb (bad) rex.WRX mov stc scas sub out cmpsb pop out in cli int rolb lods xchg sbb (bad) mov test jae int cmp movabs rcll int3 (bad) outsb movslq mov rex.RX mov fisttpl pop adc rex.XB mov xlat add pop mov or movabs mov shrb fidivrl (bad) (bad) sti sub (bad) decb cwtl xor xor fmuls push pop cmp cmpl mov (bad) jbe add sbb xchg pop cmpb cmc clc mov jae push xchg test sbb cmp fistpll (bad) nop jb outsb rex.B rex.X adc mov adc cmp jmpq js jmpq rex cli (bad) jmpq ja (bad) jrcxz fimull cli in mov movabs push pushfq sub mov push (bad) fs cmp callq jl (bad) hlt (bad) fxch adc and rex.WRB jns mov or out (bad) cmp fsubr addr32 cmp pushq push or cwtl imul loop sbb test (bad) (bad) cli jrcxz rex.RB movabs jrcxz (bad) insb movabs jge xor xchg icebp (bad) (bad) (bad) pushq cmp jrcxz (bad) movabs sti cmpsl int3 jmp sbb sbb jnp out lods (bad) cmp or pushq cwtl mov sub js (bad) test xchg mov (bad) test leaveq (bad) (bad) jmpq mov shr sahf (bad) decl test (bad) add inc push add xor test mov (bad) lock in and enterq or fsubrs lea jmpq jmpq clc cmc bt imul jmpq movabs mov (bad) iret (bad) cmp cli fiadd loop rex.RX outsb push mov lret pop pop mov (bad) (bad) lods movsl (bad) adc or rolb stos rex.RXB rex.B rex.RXB cwtl scas hlt fsubrl es cmp fcoml (bad) repnz push cmp sub out imul fdivrl xor scas (bad) nop xchg mov nop ja stc or (bad) cmpsl out out adc retq mulb mov (bad) int enterq push rex.X (bad) jo mov pop or (bad) (bad) decb (bad) (bad) (bad) ljmp jo lret fcmovnb pop rex.WXB mov (bad) sub lret stos scas rcrl test adc and movabs (bad) minps (bad) adc ficom pop (bad) iret repnz out (bad) fistpll gs sbb xchg add cmc (bad) dec and adc rorl cmp (bad) (bad) xchg retq cmp sar shl stos pushfq sub or imul xchg and adc rex.WR iret movabs (bad) mov xor rex.RXB int cmp jo xor in adc rex.WRXB fldl callq test sti fnsave or inc outsb (bad) insl test cmpsl stc jmp movsl adc iret adc add rex.RX callq add mov out lcall jne cwtl nop xorl push repnz ja mov xchg in add (bad) sbb and movsb in sub mov sbb add cmove loopne jg stos rex.RXB cmpsl fimul sbb mov jrcxz imul push scas push xor adc shl cmp xchg jo ficompl or addr32 sbb (bad) fist xor sub js stos adc vpcmpgtd rex.WR and (bad) cmp gs mov fdivrs (bad) cs (bad) jno xlat retq adc ror jns and sbb mov (bad) (bad) (bad) sti push out cmp jne (bad) (bad) incb insl or fwait std (bad) gs xchg movsb mov leaveq (bad) (bad) (bad) inc xor hlt incb rex.B rex.W test cmp lock cmp movabs add (bad) repnz fs (bad) int pushq mov gs adc add pop rex.B decl (bad) loope cltd (bad) cmc (bad) movabs xlat adc movabs jne xchg rex.X (bad) mov insb pop rex.WRX (bad) mov int3 xchg (bad) (bad) (bad) lahf jrcxz out cwtl jb (bad) in adc jbe mov xchg jno adc sarb sub (bad) movslq jnp mov rex.RX mov cmp and (bad) (bad) (bad) sti push js jp (bad) (bad) (bad) (bad) cmp rex.RX subl (bad) (bad) mov (bad) adc fs pop adc stc sahf cmp xchg clc (bad) sahf fs rex.RX pushq lea rex.R scas ljmp rex.WXB lret pop sub push xor hlt movabs push rex.R (bad) mov sbb lret push jmpq (bad) cld jmpq mov sbb adc (bad) mov mov and mov jns rex.XB push movabs cmpb mov rex.RXB enterq pmulhuw xchg stos ss mov xor fidivrl enterq pop xchg fs and add (bad) xchg mov sub (bad) (bad) (bad) sti pop mov (bad) (bad) incb adc xchg mov out movabs (bad) and mov (bad) rex.WX fimul fcompl lret shr mov (bad) (bad) mov mov pop (bad) addr32 mov jge stos add jmp jb pop rex.WX sbb pushq jmpq in mov rex.WRX mov jo add lss sti push data16 xchg mov mov sbb movslq push jmpq stos (bad) pop fcmovnbe andl (bad) rex.WXB (bad) jl xor movabs mov rex.WX test adc rex.R xor and movabs jmpq repz and mov (bad) fadds cmp mov (bad) fadds (bad) in xor mov fcomps (bad) test fucomip (bad) fs mov jae scas repz xchg rex.RXB insl pop sti pop clc xchg in xchg loope (bad) (bad) sti (bad) in jp (bad) (bad) (bad) (bad) (bad) jmpq mov stos (bad) adc cltd movsl adc add add imul jne stc sbb movsl fabs pop sbb xor in adc xchg mov scas mov (bad) mov rex.X cs (bad) scas mov sbb sbb sbb bnd sub movsl adc or mov push imul xchg test push xor je sbb rex.WB adc mov fmuls (bad) (bad) std mov mov (bad) gs sbb mov movsb sbb and sbb sub jle rorl mov add and icebp in (bad) (bad) (bad) (bad) std jge cli lahf cwtl (bad) (bad) (bad) (bad) fsubl add rex.RXB rex.B mov xor mov pop repnz fidiv imul (bad) sub loopne and (bad) int out ss mov (bad) mov sbb ja clc mov or or add not shr add cmp xchg or xchg mov jmpq jmpq jmpq adc lods mov stos int jno pop and mov cmovnp adc jrcxz fbstp (bad) cmp shrb lret rex.WX pop push out pop jl push mov movsb cltd movabs (bad) rex.RXB xchg mov sub xor or mov rex.WRX (bad) (bad) (bad) (bad) decb (bad) (bad) (bad) pushq or cmp push lock push or subl xor mov cmp xor jo xchg rex.WXB orl xor pop push add or out push retq sbb hlt adc xor push xchg fucomi movsl fisubrl shrb notb data16 xorb (bad) or mov mov sbb sub sub (bad) js mov adc jmpq and in out xchg jmpq jne cmp popq lods popq out stos fs subl sbbb pop sbb xchg (bad) (bad) mov pop cmp test scas rex.R rolb cli cld (bad) (bad) out sti add (bad) movslq sub (bad) rcr jno pushq addr32 retq idivl xor ss stos sub and lea retq jp (bad) (bad) sti movabs movabs cli pop and icebp data16 add add and add push imul es jno lret test adc jnp (bad) outsl (bad) (bad) push pop cmp movabs loop out andl sbb (bad) sub add jmpq mov sub (bad) and mulw (bad) mulb or jmp (bad) sub lret sbb cmpsl adc scas rex.RXB rex.WB cmpl movabs (bad) callq clc push fnclex (bad) insl xchg mov pcmpeqb movsb xchg test std fs shrl pop (bad) (bad) pushq (bad) (bad) std (bad) add rex.WB (bad) (bad) incl (bad) mov xchg jne xchg imul mov negl (bad) mov mov sub scas lock out jrcxz je fnstcw mov and (bad) pushq callq jmpq orl hlt jno fstpt popfq adc loope xchg ds add rex.WRX hlt ficoml sub clc icebp cmc icebp or xchg and jno and rex.WRX rex.W pushq (bad) pop sar hlt mov cltd push out test loopne mov loop xor mov test cld sahf pushfq fwait rcrl shr jge mov pop (bad) adc mov mov fldt fnop xor (bad) (bad) sti ss (bad) cmp (bad) int3 mov rex.R ficoml (bad) (bad) mov ds mov xlat adc push or (bad) (bad) (bad) (bad) out out fmull sub int mov cmc pop push mov pop fs mov stc mov loope jns pushfq ds xchg clc add sub rex.X rex.XB rex.RX test int iret pop and (bad) repnz or (bad) rex.X std fdivrs ljmp andb loope out rex.R cmp enterq xchg adc data16 loope std rex out add in adc adc int3 loop test and (bad) sbb mov add movsl pop movsl fmull icebp loope (bad) adc adc (bad) lahf test (bad) (bad) sti xchg popq cld cmp (bad) (bad) (bad) jl int3 push pop int shrl cmpsl enterq sbb stos test scas stos push xor enterq (bad) fcmovnbe cmp retq lret lahf sbb xchg cmp mov pushq push xchg fmull push (bad) adc add rex.WXB decb adc (bad) (bad) jmpq mov or mov mov xchg add mov xchg or mov sahf std in callq jns sbb vpcomud addr32 and jle es movabs adc mov add mov jle xchg (bad) xor mov stos stos lret xor xchg mov movabs jmp add mov (bad) sbb jno adc repz pop (bad) rorl jl (bad) xor xor mov adc push or rex.WRB mov int3 and or adc mov (bad) (bad) (bad) std (bad) push (bad) (bad) outsl add add or fidivl notl or add cmc sub cmp and je lret movsb cmp cmp pop mov icebp (bad) jmpq sti xchg fistpll jae sub xorb stos mov mov (bad) pop adc sahf rex.WXB scas xchg jns rex.XB cmp subb xchg (bad) movabs retq out xor jl repz sbb rex.RX fidivrl xchg ja enterq mov movabs scas rcrb push (bad) xchg or test js pop cmp (bad) sbb cmp mov or cmpsb rcrl leaveq push xor cwtl mov (bad) data16 movabs rex.WR add add or shrb xchg or rex.WRXB rex.X (bad) cld mov test jmp movsb punpckldq mov mov and (bad) rex.WB cli mov (bad) mov icebp jmpq lock lods repz xchg test lret ss jne (bad) leaveq and (bad) (bad) xchg imul mov imul mov cmp jnp outsb mov (bad) out xchg subb cmp jrcxz (bad) test ja jae (bad) xchg ss test rex sbb cmpsl (bad) fcomps nop jne xor jp (bad) (bad) sti cld hlt cwtl lret stos (bad) (bad) (bad) (bad) loopne cmp mov scas outsb cmc mov xchg std out add add pop (bad) je (bad) xlat add out xchg lret cmp imul mov mov (bad) (bad) outsb (bad) push sti popfq cld push (bad) xchg je rex.WRXB (bad) jge mov movabs es xor push sub jge jmpq test jmpq jo mov mov pop retq jae cmc xor jmpq cmp jmpq test test xor bt clc test or jmpq xor retq (bad) mov (bad) (bad) pop hlt (bad) data16 or jl test cmpsl (bad) cmpsl stc rex.WXB adcl adc xchg ds popfq mov and mov (bad) scas mov and outsb push mov rex.XB (bad) (bad) movabs xor (bad) scas add addr32 jns pop jle jbe (bad) pushq pop fsubrl xor add (bad) (bad) cld mov (bad) (bad) pushq cmp cmp imul add mov (bad) ja out pop sbb (bad) rex.WR add or (bad) (bad) (bad) push adc (bad) xchg mov movabs fisttp shr jnp mov mov push outsb lret mov in rex.RB movabs mov rex.W std ljmp jmpq mov cmc leaveq or movabs (bad) adc xchg adc clc icebp fdivs cs ja popfq jns mov mov and imull movabs pushq rex.WB mov (bad) movabs add movsl int cmpsl mov lods and mov jb adc mov gs or jne (bad) (bad) decb js nop rex.R rex.WXB stos adc cmp (bad) dec cmp clc addr32 pop xchg adcb test stos scas adc cmp gs mov subb in retq (bad) rex.RX leaveq pop (bad) fs pushq sub sahf cli in mov (bad) movabs pop add enterq pushfq ja andl pushq lock jp jle cs cmc rclb sub jmpq je add or or fwait (bad) adc (bad) scas addr32 test rex.WRX and xchg in test gs ss (bad) (bad) (bad) (bad) (bad) sti lods out xchg popfq (bad) (bad) (bad) (bad) xchg and pushfq lods jrcxz test push adc pop mov add add (bad) xor fwait and mov cmp (bad) outsl mov cli lret mov rex.WRX pop out mov (bad) shrb idiv lods lods sarl rex.WR insl imul xor push add cmc mov sub jno cli ljmp sub stos and adc (bad) (bad) push push jle ds in fimull movslq mov fcomi fwait xchg push test rex.WXB cld jmp loop jrcxz mov pop sub rex.WXB rex.RXB mov cmpsl sbb (bad) (bad) add jmpq (bad) xor or jg mov cmpsb xchg adc fs pextrw xor push or mov mov (bad) (bad) decb (bad) (bad) (bad) (bad) in sub xchg (bad) cmp rex.WR retq (bad) (bad) rex.RX rex.WRXB cwtl shrl (bad) sbb push push (bad) mov cmp add jno (bad) sbb loopne stos rex.RX (bad) lods fidivl (bad) rolb sarl adc jae movabs sbb repz mov push jp cmp xchg mov rex.WR or sarb jb and scas mov sub push icebp jmpq loope pop ja xor test hlt lret (bad) enterq jl scas sbb fstl pushfq adc in (bad) (bad) fldenv movabs in sbb scas lret adc and ss xchg mov rex.WRX jne leaveq push (bad) test adc push in (bad) (bad) (bad) cli mov (bad) (bad) (bad) std cmpsl xchg imul (bad) pop loopne jns adc (bad) pop mov cmp scas or mov movsl (bad) mov cld (bad) cmp xor mov (bad) (bad) (bad) (bad) fiaddl mov leaveq stc (bad) sahf insl or and sub sbb sbb (bad) and push pop and jnp movsl cmc jle or xchg lods loop mov sub (bad) mov shlb stos enterq and sar setno mov mov rcl sub xor push xor sets mov setg and sub shl jmpq add rex.WR movslq rex.RX gs cmp add rex.R ja adc scas repz jbe (bad) xchg clc rex.R rex.RB rex.XB mov (bad) mov icebp xchg jp rex.WX std rex.B xchg loope mov (bad) sbb pop adc movsb adc pushq jmpq mov and jg jrcxz (bad) loop mov cmc (bad) lret cwtl lahf pushfq cmp jbe out fcmovne negl pop (bad) (bad) push insl lahf sbb add (bad) pushq adc (bad) (bad) cld jg imul adc sbb rclb ds xchg mov lahf test rex.XB mov roll pushfq jg (bad) ja jnp rex.WRX mov (bad) xor movslq in mov repnz (bad) push stos (bad) (bad) (bad) sti sub (bad) (bad) (bad) (bad) (bad) rex.W mov jge rex.WRX rex mov lods mov adc and pop (bad) loop or pop pushq rex.X sbb xchg rex.W xor mov (bad) pop ds xor jge (bad) (bad) jmp iret test fcmovnb xchg mov test cmc (bad) (bad) (bad) callq jge (bad) cmp stc outsl adc int3 sbb xchg sbb mov repz pop leaveq pop or xor jb mov (bad) cs push rex.WXB mov insl popfq mov sub int3 sahf mov pop pop cmp add jnp rcll (bad) pushq xchg sub std xchg sbb scas sub in or cltd and push xor mov jl sub adc xchg repz adc add (bad) xor (bad) xchg movsl insb setge xchg sub ss pushfq cmp (bad) cld jg bnd pushq out movsl push shlb mov xchg lret mov adc or xor jo sub jb (bad) mov xor xchg or enterq mov lret push push rex.X add add adc ffree adc jne test (bad) cmpsw pushq cs xor sbb sub popfq lret or mov mov rex.WB lods mov sub stc bt cmc cmpb jmpq ja clc stc clc imul test add jmpq jmpq push rex.W rex.WR push rex.WB cs insb add add test stc clc mov cmc jmpq callq and shrd clc add ror mov bt stc bt stc cmpb jmpq stc jmpq movslq movabs callq rol cmpsb mulb mov sub in outsl and mov mov or (bad) push add adc or out xchg (bad) int3 adc sbb xchg lock leaveq or sub add mov scas (bad) (bad) (bad) (bad) cld xchg (bad) outsl lods mov (bad) (bad) (bad) jnp std jp movslq push mov xor xlat je adc (bad) mov outsl rex.X jbe mov movabs or fiadd sbb add movabs mov and (bad) retq mov (bad) jmpq imul sbb enterq neg mov (bad) mov sbb jmpq cmp cmp jmpq jb retq jae and mov cmp mov dec (bad) cmc mov jmpq bsr push rcr jmpq pushq jmpq jmpq rcr adc and in push mov nop cmp (bad) fwait imul and jmpq outsl testb stos lock add (bad) xor cmp icebp mov xchg cltd rcrb jbe sbb cmp jmp je pop mov out rcrl rex.WXB mov jbe rol adc outsb pushq cmp add (bad) mov mov (bad) (bad) (bad) (bad) sti (bad) mov (bad) (bad) (bad) mov sub xchg movslq pop sahf and lea loope sbb add add and push sbb (bad) ja xchg (bad) div pop rex.WR (bad) xor sbb mov js stc pop insl enterq pop sbb cmp pop divb and and mov xor jne test imul mov sbb push hlt (bad) sub repz xor out je rolb sti push rex.RXB pushq jrcxz sub rex.WXB repnz rex.RX ja push loope pushfq rolb and cmp (bad) cld cld lods or mov cmp jno (bad) nop mov xor push fcom fidiv fnstsw mov mov xlat xchg cs mov rex.RB sbb (bad) (bad) sti pop xchg pushq (bad) incb (bad) subb imul sti pushq (bad) (bad) callq xor (bad) mov pop (bad) (bad) repnz (bad) cmpsb scas (bad) loopne rex.RX cmc pop sub or mov jbe jp test pop sti add lret stos mov xor jae rex.WX rex.WRB sbb scas movabs sbb add (bad) xchg or mov movabs rex.RB rex.WRXB mov leaveq test sub gs pop push (bad) cmp je out add sub adc jo sbb sub (bad) (bad) int (bad) or sti pop rex.WRX and lahf rex.B cmpsl fild fidivrl add cmp (bad) (bad) sti lahf rex.X lock cmpsb (bad) (bad) (bad) decb insl mov sub divb cld add add or scas outsb rex.RB callq mov retq mov popfq add mov (bad) sub rex.WRXB cmp rex.RB cmc push (bad) pushfq in (bad) cmp int jne cmp bt movb test cmc clc test jmpq jmpq fwait (bad) test int (bad) imul rex.WRX lret and cwtl mov negl sbb jrcxz (bad) rex.X rex.RB pop (bad) xor movslq rex.RXB (bad) (bad) fs (bad) (bad) enterq push lods cld (bad) repz mov mov mov iret test lahf data16 xchg testb outsb rex.XB adc je (bad) mov scas (bad) ja fwait xlat mov pop cmp (bad) repz (bad) (bad) sti insb adc (bad) (bad) push shlb jmpq movabs sub mov movabs (bad) adc lods adc lods (bad) (bad) hlt xor rex.WRB mov jmpq (bad) push jl stos test lretw outsb fmull rex.R outsl adc punpcklbw push pushq (bad) jmpq movsb imul (bad) (bad) xor sub fsubrp (bad) scas movabs rex.WR out cmpsb rex.W rex.WX rex.XB repnz fmull sub xchg push (bad) rex.WRXB loope (bad) jnp in mov (bad) data16 out add cmp sbb cmp int3 leaveq cmpsl out out (bad) (bad) (bad) sti and data16 or test repz (bad) (bad) decl (bad) (bad) adc fstpt (bad) and mov cmp cmpsb (bad) (bad) cs xor minps sub or rex.RXB lcall rcll cmp mov add push cmpb jmpq cmc add test test jmpq jne sete lea xor btr mov and sar add setbe not mov not mov jmpq repnz adc mov rex.WRB (bad) adc mov and mov out xor movabs jge (bad) (bad) (bad) cmpl lahf sahf mov push pushq add jrcxz hlt in cwtl cmc rex.RXB cs push jns rex.WRB rcl (bad) scas cld add pop pop mov or in insb xchg pushq pushfq lock (bad) (bad) (bad) sti imul push (bad) (bad) (bad) (bad) push mov xor xor or (bad) adc iret mov pushfq rex.RB (bad) (bad) callq (bad) lea test test cli xchg and movsb out rex.WX lock mov scas in adc push ss rex.WXB (bad) repz add jne std repz (bad) retq subl jp in mov ss adc and test mov mov jmpq jmpq lock mov cmp movslq or adc test iret hlt rolb movabs adc or std pop jrcxz rex.WRXB bsf add mov std in mov in lods iret scas int callq test adc jno jrcxz adc out and (bad) (bad) std and pop gs (bad) (bad) incl (bad) addr32 pop clc fadds sbb ss (bad) (bad) pushq std adc (bad) mov cli xor mov pop (bad) jp adc rex.WRX scas lret cmp mov stc cli addr32 je cmc clc test cmp sub bt cmp jmpq mov mov mov rex.WB addr32 mov cld mov (bad) xchg lods xchg adc rorb rex.XB rol (bad) testl std (bad) pop hlt cs retq rex.RB xorb jbe sub and xor imul rex.X movabs std movabs add push sub rex.WRX out jns cld xchg (bad) imul xor and int pop inc scas loop push vmovq lock or mov rex mov sbb ja (bad) in pushq test xchg (bad) (bad) jmpq or sar rol sub mov seta jb lea jmpq cmp rex.WR fs rex.WXB rex.RXB roll ja movabs movsb push cwtl shrb mov xchg out test adc test add mov add xchg adcl int (bad) (bad) leaveq js (bad) out xlat (bad) (bad) (bad) (bad) mov sbbl js sub jmpq and div movabs and (bad) repz cmp cmc pushfq (bad) mov mov mov adcl xchg (bad) (bad) cld adc stc cmp (bad) (bad) (bad) stc movsl ss jg (bad) fwait push pop hlt xlat mov and jns jg jle xlat cmp jl mulb (bad) jo test pop cli sarl outsb movslq popfq mov cmp rex.WX mov (bad) repz test mov fidivrl insl (bad) imul jb (bad) (bad) jmpq (bad) pop pop gs sbb jno pushfq in push rex.B loope jp push cmp sbbb js jl cwtl sbb mov sub sub push or xchg sti rex.WRXB cs jrcxz or outsl or ds pushq add xchg (bad) push orl (bad) (bad) fbstp pop out fmuls xor pop notl (bad) (bad) ds (bad) (bad) sti mov (bad) (bad) (bad) (bad) test ficoml (bad) int sub (bad) cmc xchg xchg add xor mov add add sub pop (bad) xchg adc push cmc jmpq (bad) icebp out in mov xchg movabs mov (bad) sbb xchg iret mov jp xor out jns (bad) jp movslq mov cmp repz je stc cmc stc add stc cmp jmpq add add sti (bad) add add add out sbb add add in xchg sbb jl (bad) add sbb mov add add sbb cld int3 sbb adc add add add add add mov sbb int3 sbb add lret enterq divps add sbb je sbb rex.RB sbb sahf in add add add jns add add add clc (bad) add add add sbb add add push sbb add add add add add xchg div insb pop test (bad) xchg (bad) (bad) jbe scas or mov pop mov mov sub xor insl and push mov popfq lret mov or sbb rex.RX sahf xor xor (bad) cmp negl imulb pushq and push es push jne and (bad) (bad) add es (bad) xchg lods rex.RX subb xchg ficoml lret stos cltd ficompl (bad) movslq (bad) mov and pop xchg rex.WRXB rex.WX jg sub movsl lods add fiaddl adc mov mov fnstsw mov mov (bad) sub (bad) adc mov and (bad) fnstsw test jrcxz ja fnstsw xor rex.WR rex adc rex.WR pop lods loop roll nop mov xchg jmp xchg es cs movsl jno (bad) ja mov rex ja jbe rex.WRB mov movabs push (bad) in rex.R shrl cmp fsubrs (bad) adc lods jg test xor (bad) mov outsb test pop je imul sub push add or callq lea sbb roll data16 and cmpsb lret int (bad) sbb (bad) stos movabs hlt outsl xchg test in push pushq enterq scas fidivr push retq and jge adc sub mov fimul jle cmp rex.RB es add jrcxz sti cmp xor (bad) movsl push cld callq cld (bad) xor je nop out je (bad) mov jo outsl jbe xor (bad) xor jae mov rex.RX jg sbb sti xchg (bad) sbb shrl pop rex.WB cld pop mov pop rcr movabs add cmp fwait stos mov faddl rex.WRXB jl pop pushfq (bad) rex.WRX sub retw xor (bad) fldcw cmpsl cmpsb jno xchg cmp adc add jle pop (bad) fistpll pop mov push (bad) and jg retq cld rex.W out jle adc (bad) add stos xor (bad) xchg xlat and adc push pop ss xor movabs or push jbe jnp jmpq add mov sbb addr32 fwait rex (bad) rex.RB or cli (bad) or movslq rex.WR push out xchg cmp popfq sbb mov (bad) jl insb rex.WX stc imul repnz mov sbb pop mov pmaxub lret push pop (bad) (bad) stos movsl popfq add hlt (bad) leaveq hlt pop out data16 repnz jg shrb mov and rex.WRXB movabs (bad) or enterq test pop mov jg jmpq sbb fdivrl cs enterq (bad) mov out and sbb mov addr32 rex.RXB std mov stc (bad) fisttp and fdiv stc pop rex nop sbb adc jb and pop fcmovnu (bad) fucompp data16 xchg retq mov (bad) imul je (bad) mov sbb (bad) (bad) scas test xor push (bad) push imul in movabs and popfq add add rex.RX js pop movabs outsb in jae (bad) pop rex.WRXB (bad) xor mov mov movabs rex.WX lea and adc (bad) xchg jle adc mov ficoml sbb insb adc (bad) outsb fs jno or and or test outsl lahf scas xchg push loope (bad) or mov (bad) loopne push jne stos sti (bad) (bad) pop cmp nop in rcrb lret (bad) (bad) pop (bad) rorl (bad) rcl ds add test or rex.B cmp jl rex.X mov movsl pop mov (bad) popfq shrb fadds movsb mov mov (bad) jo mov rex.B mov xchg xorl xchg leaveq rex.RB cwtl xchg xchg movabs or gs stc or rex.WRXB (bad) pop xor fmul retq xorl rcrl (bad) jbe pushq mov (bad) mov fwait xchg in cld (bad) mov shrl hlt movsb pop pop es (bad) and fdivrs adcb and mov (bad) jge or pop sub pop movsl cmp xchg (bad) rex.RXB pushq mov out or imul jno add callq fs cltd push pop jp add (bad) push in rex.RX xor lea push mov lret xorb mov xor add sub sbb out (bad) mov jbe or mov xchg (bad) sti mov mov (bad) lods rex.WX (bad) icebp (bad) mov hlt insl mov rex.WRX jrcxz (bad) pop xchg (bad) imul and mov enterq rex.WRB mov (bad) movsb rex.WRB or kortestb adc mov pop pop (bad) loopne stos fsubl pop mov rex.RXB pushq (bad) ja (bad) popfq imul push push loope (bad) cmp mov mov movabs cmp xchg sbb rex.XB punpckhbw (bad) xchg (bad) flds mov rolb rcll mov int fdiv cmp and (bad) cmp xchg (bad) cmpsl xor (bad) (bad) lock rex.WR rex.X (bad) rex.WB callq rex.WRX xchg pop pop outsb movabs hlt pushfq mov divl lahf sub cs sub (bad) mov scas sbb jl cmp (bad) pop je push cmp cmpsl or rex.X xchg and (bad) lea rex.WRX jno testb pushq (bad) (bad) (bad) push (bad) movsl in (bad) or (bad) retq loope sub callq cltq rex.B stos pop lods repz lahf mov sbb add jns fdivrs adc cli (bad) mov ror imul cmc mov cltd rex.WRB sub sar and popfq sub enterq mov insb rex.WRX rex.R ja js fldl jns callq cltd cwtl mov mov loop sub fs insb jne in test je jl callq enterq int3 sub sbb mov test rex.WXB push (bad) cmp or fidivl negb loopne mov mov sub or push rex.RXB cmpsb repnz mov (bad) sbb movslq add cmpsb (bad) and iret rex.R sarb pop rcrb (bad) jbe sub jbe (bad) add sbb (bad) mov ja clc or mov (bad) hlt clc movsb mov pop xchg mov lea xor mov outsl adc mov imul imulb (bad) in int3 out (bad) movabs (bad) mov push mov mov fcmovnu test sbb cli jmp adc or sahf pop movabs gs mov or cmp fisub mov jns pop sbb sub mov in xorl rex.W mov (bad) fimull movabs xor (bad) or (bad) sub repz ss jae stc or pop stos decl movsb xchg stos cmc (bad) leaveq (bad) scas cmp rex.WRB jle addr32 fldt data16 and (bad) cmp outsb movsl jnp rex.X jge jbe adc in ds movslq mov and jge mov stos insb lods xor icebp add adc test sar pop add xor popfq fdivrl sub rex.RB rex.WRB (bad) jmpq fxam cs (bad) adc out push adc cmpsl fcoms mov lods rex.RX (bad) sbb cmp and (bad) cld sub not rex.WRB pop (bad) lahf pushfq or test mov sbb int3 cmovae (bad) push mov fistl pop rex.R ror push mov rex.RXB enterq sub retq out jno rolb add (bad) (bad) xor movl adc (bad) lret and repnz add (bad) fdivl retq and fwait movabs sbb in adcb imul lock or sub ficom adc cmp add divl xchg xor xchg sarl rex.WRX sub jae jno pop or (bad) sub (bad) rex.WRXB xor notb (bad) mov rex.RXB ss data16 add mov mov (bad) mov jbe adc callq (bad) (bad) jrcxz (bad) cltd mov movsl pcmpgtw or jmpq negb out adc js imul sub (bad) adc std rex.RXB push rex.XB cld cmpsl jnp (bad) sbb lea jne cmc rex.W lret mov stos pop xlat rex.WRXB out (bad) jns rex.WRX ss es mov (bad) (bad) sysenter fsubp in mov mov movabs xchg cli jmp retq adc (bad) in jo rolb (bad) orw imull (bad) (bad) out loop push std (bad) (bad) out xchg callq ja imul or push add (bad) and sub rex.RXB rex.W loopne,pn int3 (bad) push jge movabs addr32 ljmp rex.WXB adc retq (bad) add sti retq jnp cs fwait push xchg add sbb jae (bad) (bad) imul in loope cld data16 data16 ss push jge movsb add xor ds iret popfq sbb adc out xchg add cltd rex and (bad) decb cmp imul add cmp xorl (bad) jnp not cmp xor xchg insb mov (bad) jo rex.WRXB movabs movabs xor rcll cli rex.W stos (bad) or push popfq push out and sub rex.WRB (bad) (bad) jns (bad) fsubrl lret cld mov lret leaveq jge sti xor lods gs callq stos sbb sahf xchg movabs (bad) (bad) ror stc mov shll imul sbb movabs push add xor adc (bad) fwait add jnp jge jbe (bad) (bad) xchg es sti rex.RXB ja int3 jmpq sub icebp mov callq xchg (bad) cmc sbb in repz rex.W lret rex.WX add js add rex.RXB retq in xchg rex.RXB cli sub rex.XB imul rex cwtl (bad) fdivr cli and mov sbb rex.RXB int std rex.WRXB add rex.XB fstps mov and sbb in mov cmp or movsl or rex.R rex pop xor xor test movslq lods cmpsl hlt clc lea mov cs rex.WRXB or movsb sbbl (bad) fstpl stc cmp add add jmpq sbb (bad) adc xchg add xlat rex.WB loop lret cmp int cmpsb cwtl xchg (bad) pop sub outsb mov mov (bad) and and adc (bad) xor movabs lods and imul mov sub hlt or pop rex.W out sub mov (bad) incb push loop cmp xor outsl cwtl insl push (bad) sub pop in cmpsl sub sub and add xchg mov sub fstpt fisttp rex.WRX ds hlt fcmovnb xchg lock (bad) fcomps popfq pop cmp mov movabs movabs or repnz fnstenv push sbb (bad) int (bad) loope rex.WRX fs loopne cwtl mov (bad) int and and movabs fsub sub add xchg sar movabs cmp rol push jmp mov sub fidivrl rex.R out mov in out xor stos xchg in (bad) sbb cli mov adc cmp or pop (bad) movabs (bad) clc rex.R xchg jno (bad) jmpq sti xchg retq std retq jne in pop sahf std (bad) popfq lahf fdiv mov icebp lret sbb cltd ja add add jb xchg (bad) pop cmc mov mov xchg (bad) lret xchg int and (bad) (bad) loop pushq insl xchg and shlb jae and loop sti (bad) test xchg data16 stos fisubrl mov mov adc retq insl rex.XB ss sbb cmpsl cmp mov mov hlt pop out adc mov shr adc loopne movabs gs xchg adc jb leaveq lret stos sub xor lods movslq ja xchg mov fmull rex pushq xor scas (bad) (bad) (bad) (bad) (bad) sbb repnz mov fxch xchg sub (bad) imul pushfq subl sbb (bad) jrcxz mov addr32 rex.XB jmp mov mov shr insb adc or rex.WRXB sub mov (bad) test (bad) mov sbb movslq rex.RXB (bad) movslq repz pop xor push jne (bad) movsb rex.XB push and movabs (bad) imul sti jl or clc add rex.RB adc jae xor js cli xchg movabs mov scas xlat stos lret mov jle movabs mov mov (bad) sub lea jno retq rex.WRXB cli (bad) and repnz divl sbb (bad) (bad) (bad) std (bad) rex.WRX rex.WB add or notb rex.XB bnd std sahf xchg cld lret rorb (bad) sbbl int3 movslq and xchg faddp adc sub adc mov jmpq jmpq jmpq jbe movzbl jmpq jge std push mov lea clc jmpq mov pop movsl repz jge sbb adc enterq paddusw je mov iret lcall movabs jns cmpsb sbb (bad) jp jbe fs rdpmc data16 std xchg mov lods jge sbb mov push idivb (bad) (bad) sti (bad) jno (bad) and mov (bad) rex.R jl push sub movsl and adc (bad) cmp jmpq push cmp cltd xchg lock xor in mov sub push out stos test sub cwtl mov push rex.RXB mov cmp sbb fdivrl add add insl push xor sti scas mov cwtl mov jp out idivb movabs pcmpgtd jno cmp cmp lods negl adc or test pop outsb ljmp stc add stc mov clc test jmpq jmpq data16 repnz xor sti (bad) fwait sbb (bad) cmpsb rorb enterq or mov lret mov sbb or push or lea xchg addr32 or rolb ds xchg xchg test rex (bad) add cmpl cltd (bad) or (bad) sub xor sbb sub pop lock shrd rcrb xor sti subb je (bad) (bad) (bad) imul movabs add xchg stc sub xor jmpq xchg xorl rex.WX (bad) mov rex.WB add callq pop (bad) jns roll (bad) (bad) callq (bad) xchg ffree mov mov pop (bad) loopne adc (bad) pop (bad) (bad) jmpq fcmovbe mov cmc add test rex.WXB (bad) movabs neg test rex.W jle insb lea sub js repnz loopne (bad) adc in (bad) (bad) or movabs jmpq rex.RB test pop popfq mov jb lods loope jae (bad) movabs rcr lret rex.R jns adc (bad) adc (bad) (bad) (bad) sti movsl jb mov (bad) (bad) (bad) decb (bad) std scas fidiv cmp xchg retq or or mov mov jo pop cmp lcall jne (bad) rex.RXB cmp lret jge mov push (bad) sbb rcrl stos sbb xchg mov mov pop movabs out fisttpll xchg repnz scas sti repz or int3 jmp xor jb fs test loop out rcr add jmpq push rorb sahf adc movabs js pop test (bad) rex.WB add fimull lahf clc clc xor cmp xchg or jle (bad) rex.WB sub push movabs addl sar (bad) (bad) sti mov (bad) (bad) (bad) (bad) cmpsl mov fistpl mov jnp (bad) and iret cmpsb (bad) bnd jg stos jge movsb jmpq add and push pop (bad) fdiv cmpsb (bad) mov lret loope pushfq xchg jg jo jo rex.XB cmp cli (bad) movb mov xor shl mov lods sbb mov (bad) (bad) mov stc sub rcl bts add bsf lea mov jmpq stos jmpq cmp jmpq rex.RX fimull (bad) fbstp lret test adc lret lock fcoms ss (bad) cmp std rex.RX rex.RXB and int test pop lock sbb or rex.XB sbb hlt cmpl rex.R rex.WR or rex.WRX cmpsb jge push jg hlt jle (bad) (bad) (bad) cli (bad) fcomps (bad) (bad) std scas xorl fucomi or sarl xchg rex.WX jmpq rex mov (bad) add and movabs (bad) (bad) (bad) incl and in mov movsb std mov cmp xchg nopl or or and mov pop xor sbb fisttpl or mov (bad) loope fdivrs sbb (bad) incl jle shr lret notb (bad) xor adc rex.WRXB xchg shrb out fsubrl cmp (bad) (bad) pushfq movslq in cmpsb sbb add add adc in movabs rex.WRB enterq jne (bad) (bad) (bad) sti movabs xor jg ss rex.RX (bad) cld (bad) testl movsb add xor (bad) (bad) (bad) decb ss mov add add or adc mov rex.X cmc test fistpll pushq sbb or (bad) sti in jb mov push loop xor lret (bad) sti nop retq add jp xchg movabs (bad) jmpq jne cmc rcl sbb mov btc bts clc sub sub sbb lea shl btr mov stc sub cmc clc bt pushq test cmp jge ja mov dec not clc sub adc add setg adc sete mov rol ror sub add mov cmc repnz jmpq add push (bad) je imul jae add mov callq decl test (bad) add sub bt stc stc test cmp jmpq push rex.WRX ss pop adc shrb push rex.WB pop cmp sbbb lahf mov cmp sbb xchg xor add add pop retq lods cmpsb (bad) sbb sbb imul sbb shlb xchg movsb (bad) (bad) rex.WRX int mov lret sub (bad) (bad) (bad) cli mov push mov (bad) (bad) (bad) std mov cli and movabs cmp rex.WRB retq and int3 (bad) (bad) (bad) (bad) mov scas rex.RXB push icebp (bad) mov lea out xor (bad) ffree sub sbb (bad) rex.R fidiv cmp (bad) xchg mov and and sbb push lret movsb jnp addr32 sarb mov xchg xor (bad) movabs rex.WX rorb add cli fimul fiaddl mov (bad) ds movsb xchg addr32 sarl (bad) (bad) pushq rex.X lock and add push lret mov retq push rex.W leaveq jne mov cli out popfq rex.W loopne sub sti (bad) (bad) adc (bad) (bad) (bad) incb insb (bad) cwtl lret ror rclb rex.WB push scas adc ja je movabs rex.X adc decl int xor jns mov sub xchg or jge cmc jmp push sbb jrcxz mov rcl je ljmp (bad) xlat and movsb pop xor or addr32 rex.RB (bad) mov cmp cmp jmpq adc pushq int mov sarb repz add mov add pushq ss sbb movslq icebp std (bad) rex.RX xor jne shr mov getsec js mov xchg cli adc mov xchg xchg rex.W imul rcll rex.WRXB cli sbb pop sub cmp add or je enterq cmc rex.RXB fimul out and (bad) xchg (bad) (bad) (bad) sti jrcxz and std (bad) (bad) (bad) dec jb add xchg pop adc jb,pt or cmpsb add add rex.WR jmp mov insb pop int3 (bad) xchg cmp out jns (bad) jrcxz jle pop repz mov in mov rex.B (bad) xor repz movsb in mov cwtl fbstp xor int3 mov fs cmp jne test bt movb cmc jmpq popfq mov rex.XB lock loop fildl pop sub std fbld data16 jbe lods lret scas lods std rolb movabs jne rex.WR adc sbb add xchg std (bad) rex.RXB xchg jl rex loopne push (bad) mov stos mov in scas rex.WXB movabs (bad) (bad) sti or (bad) (bad) std repnz callq mov mov (bad) outsl addr32 (bad) (bad) push lods xchg jmp mov sbb movsl mov sbb cmp jle jle imull push add (bad) mov cmp test and (bad) sub push sbb loope js sarb test mov sbb testl (bad) decl fldenv enterq mov movzbw lea jmpq pushq jmpq jb cmp stc stc cmp jmpq je jmpq es or mov cmc xor stos leaveq div callq (bad) mov test callq or or adc (bad) rex.RB fwait lods mov push add push lahf sub sub cwtl rorl rex.RB jns or jae cwtl sti (bad) (bad) (bad) (bad) (bad) (bad) outsl (bad) push jmpq and pop sub pop fidiv clc and cwtl (bad) mov mov jno xlat sub pushfq rex.B in sbb rex addr32 adc or jle (bad) ss pop pushq mov scas mov mov (bad) mov mov sub loope (bad) mov cmpsl fs test out sbb mov stc xchg (bad) mov rex.R scas rcr rex.WR stc cltd insb enterq pushq shrb repz imul rex.RXB jne adc mov sti imul sub cli popfq mov jp add movslq add sub loop (bad) (bad) (bad) cld rex.XB sbb (bad) (bad) ljmp (bad) lods movabs sbbl lret add js and add rcr outsl cmp rex.RXB pop sbb std xchg rex.XB rex.WRX jns cmp rex.B cs xchg and cmp (bad) out push xor or push adc mov mov xor dec cmp setno cmp mov setb add stc stc mov cmp ror sub bsf mov inc or cmc mov bt sub movzbq push or adc mov inc shl sub adc sub bswap mov bswap lea movsbw bswap setle mov bswap mov bswap mov mov lea movzbq lea movsbw not bswap mov bswap bswap setg lea jmpq jmpq jno fwait jmpq and rex.R out mov retq xchg (bad) push pop and retq xchg scas (bad) outsl rex.WRX rex.WX rex.WX pop (bad) lret fbld mov rex.RX and div cltd xchg mov test shlb insb fs sbb mov mov leaveq pop movabs (bad) (bad) and mov add sbb jae shlb lahf in fdivr (bad) (bad) sti out xlat idivl (bad) (bad) (bad) (bad) rclb fcomps (bad) fs movabs in or rex.WRXB addr32 leaveq maxps adc rex.WRXB mov fwait cli jne mov gs xor or jl (bad) jrcxz retq hlt push sbb (bad) mov imul repnz sbb std pushfq xchg loope mov xchg (bad) mov pop retq fnsave (bad) add fstpt sbb (bad) sub popq (bad) (bad) lods retq cli cmp or xchg idiv lods sub movabs add adc add (bad) (bad) sti pop jne or (bad) (bad) (bad) incb (bad) or cmp adc mov ficompl (bad) add mov jmp sbb rex.WRXB lret jl pop or (bad) pop mov mov (bad) xor loope jmp (bad) icebp (bad) rex.WRX rex.RXB (bad) (bad) dec sub jg xchg imul cmpsb lods (bad) sbb pop (bad) mov rex.WXB insl outsl enterq xlat jb sahf mov std or cld sub xchg xor and mov pushq movsb rex.WRXB scas and jmp xchg adc rex.RXB retq clc or movsl int3 mov cli callq in fdivr xrelease movslq rorb lods nop cld rex movsl cld out adc ss xor rex.X mov test stc lods stos mov (bad) jbe (bad) (bad) std fiadd fild add add or es callq and xchg rex.X jrcxz (bad) (bad) sbb adc (bad) add rex.WRX retq sahf ljmp movabs hlt jrcxz callq xchg add (bad) testl xchg (bad) cli out xchg retq mov fsts or xchg sbb loop (bad) mov sub jp jrcxz rex.RXB fiaddl xchg in adc std lahf test rex.WB rex.R and lock lods fadd stos (bad) test jrcxz sbb fdivrl out (bad) jne xchg insl jge in sbb mov movsl and test or mov out sbb add scas fs lods cld jb jle callq movabs add jmpq movabs js xchg mov icebp pushfq out jle loope xor jmp (bad) adc movabs or or retq (bad) xor (bad) enterq in rex.WB jb rolb xor sub repnz retq push ja (bad) rex.WRX rex.RX rex.W (bad) rex.W rolb cmp (bad) xchg jns in (bad) adc add insb xchg mov retq in loopne fisubr push (bad) jle (bad) fidivl pop outsb mov add mov in and ja jp or test in (bad) int3 and mov (bad) test in jge test in movabs push push xchg test adc fisub mov callq push nop push or sbb (bad) sub mov cltd (bad) int3 (bad) addr32 (bad) enterq sub jp shlb iret movslq (bad) add jno xchg lret (bad) pushfq movslq loop imul (bad) mov mov outsb adc gs and or (bad) decl test out or (bad) rex.XB callq mov (bad) test stos fwait rorl (bad) fstpt std imul ljmp pop rex.WX idiv xchg (bad) (bad) mov popfq pop movslq sub ja xchg rex.WR push cmp rex.WRB sti insl rex insl lea adc sub scas leaveq stc sahf cmpsl loopne repz addl and (bad) fild stos lock rex.RX add push add mov push mov and (bad) (bad) sti mov push (bad) (bad) (bad) (bad) (bad) (bad) movabs negl icebp (bad) rcrb add (bad) mov rex.WRXB rex.WRX leaveq add int pop mov adc jnp sbb xor mov rex.W xor (bad) sbb (bad) mov mov outsb idivb imul cmp jae outsb nop rorl loop (bad) xchg adc or pop pop popfq adc jrcxz fiadd outsl pop xchg insb or lea in sub cltd mov rex.R jne (bad) mov (bad) sub mov add push adc rex.B movabs test sbb mov out (bad) sbb loopne repz mov (bad) (bad) je xchg push loop notl (bad) mov sbb jae mov popq insl (bad) pop repnz cmp (bad) movzwl scas loopne sub callq or stos retq rex.WB rex.RX add cltd callq mov decb (bad) (bad) (bad) (bad) jl sbb mov ss test (bad) fildll cmp xlat jb je or jne mov sub rorb cmp clc pop callq cmp xorl jbe js jo in (bad) cld es or mov rex.WB mov mov lods mov fmul imul sbb out movslq rex.WR rex.X or and push cli lock pop push cld cwtl (bad) adc (bad) cld (bad) mov sti push rex.W out rex.RB push or push jle rex.WR sbb xor f2xm1 fwait xchg xlat hlt (bad) cs pop or addr32 push pop js rex.WRX shr rex.RX (bad) (bad) decb and (bad) in iret in negl test mov stos mov fcoms mov (bad) sub (bad) retq (bad) jge xorb pop lahf rex.B rex.WB mov push rex.WR cmp (bad) sub (bad) (bad) pop clc mov rcrb sbb je jb xchg insb (bad) lret or pushq (bad) add (bad) lret pop cli jg rex.WX int3 adc scas hlt (bad) cmp sbb mov or jbe cmp mov pop jl or nop pushq decb out mov lahf shlb xchg data16 sbb rex.WRB sub or insb rex.WR xor mov test xor lods jno adc jns outsb pop rex.B fwait xchg mov pushq xor or (bad) js adc int3 data16 out mov jno (bad) or pushfq (bad) (bad) push cmp clc mov test sub jl rep lea not movsbw movzbl pop jmpq xchg icebp jrcxz ror xchg mov out jmp cmp (bad) sahf push pushq rex.WXB cmp rex.R (bad) loopne out out xchg rex.WRX push or (bad) pop cmp mov (bad) hlt rex.RB retq cmpsb xor jbe scas pop rex js rex.WB fwait mov sub movabs xor popfq cmp or (bad) (bad) sti rclb (bad) (bad) (bad) rolb mov imul repnz movl (bad) jp mov add jno mov mov xor flds std rex.RXB iret insb push out subl sahf mov in (bad) cld mov insb vpsraw notl (bad) mov jno movsbl not pop retq or test callq and out mov rex.R shrb ds push insb mov adc mov push (bad) sbb hlt mov pop (bad) in adc fistl (bad) out fxch test sar hlt fdivs int (bad) (bad) jle ror bnd cmp callq sahf test leaveq rex.B rex.RXB (bad) (bad) fwait stos xchg xchg pop mov (bad) (bad) (bad) cli mov adc (bad) (bad) (bad) (bad) std fwait and divl (bad) out xchg insb (bad) lods or mov (bad) (bad) rolb jno test pushq (bad) push cmp callq push rex.WRXB loope rex.B xchg rex.RX jg sub insl (bad) sti (bad) jns stc sarb mov cltd mov pop jne es movabs mov sbb ficompl jb stc bt cmp jmpq repz mov and cli stc cltd mov or sbb movabs imul cmpsl push cmp jg cmp int fild enterq jno or in cmp xchg rex.WRXB (bad) (bad) bnd lea sub stos pop mov lods callq mov test push adcl add pop jp test rex.WB (bad) cmp add and (bad) mov (bad) cmc mov add xchg sub jle iret out cltd push (bad) (bad) (bad) sti retq sub (bad) (bad) (bad) (bad) stos pop clc sti xor (bad) adc retq or add pushq sub xor rex.WRB cltd push adc movabs jge insl (bad) jmpq mov hlt (bad) sub lods addb (bad) mov sbb sub mov jne cmpsl xchg jmpq out mov out adc or cs or test mov pushq rex.RB xor pop jl cmp xor xchg mov loop movabs ss and and (bad) rex.RX rex.W or movabs mov fnstsw repnz fdivr (bad) (bad) (bad) fmull or (bad) rex.W addr32 (bad) adc xor cmc hlt jne xor rex.RB (bad) jl sbb (bad) jp jno push mov add jmpq fisubr insb push add outsl fs add xor scas popfq mov sub fidivrl lods cs test (bad) popfq movabs push insb adc rex.WB std cmp adc pushq movslq movabs rex.WB jno mov xchg add pop jns and movabs sarb sbb fiadd repnz adc pop notl (bad) ss adc shlb pop cmp js rex.WRXB mov (bad) (bad) (bad) (bad) sti callq adc callq fistl adc fadds jno (bad) xchg icebp (bad) subl sti mov (bad) xchg or loopne or fnstcw add add imul rex.WR retq add out cltd add (bad) xchg rex.X xor mov and and (bad) test cmpsb xchg and shll sbb scas fidivr cli callq fadd loopne rcl rol sub shld shr shl movzbl add rol bsf bts mov mov mov bt repnz jmpq callq jmpq jmpq cmp lea push lea fyl2x loopne retq movabs cs lods xor (bad) rclb addr32 rex.WX out rex.RXB pushq enterq cmpsb add fstpl jnp stos rex.W repnz orl rex.W je in (bad) es rex.RB insl (bad) fsubrs in adc jb stc loopne leaveq pop push xor out (bad) callq adc sbb repnz mov sub (bad) sti in xchg add xchg mul in and (bad) fsubrp faddp (bad) jle fwait rorb mov clc push xchg cmc mov mov in (bad) and add enterq (bad) nop adc and mov (bad) decb (bad) fnstenv cmp pop and cmp jl fadd movsl xor rex.B mov or pop pop (bad) shr (bad) (bad) lods test add pop addr32 decl (bad) cltd mov leaveq lods out rorl or push stc outsb jle cmp jo mov ja rex.WB bt cmp repnz jmpq loop cli mov adc (bad) sbb repz test jnp jl xlat or push bnd rex.WXB outsl rex.WXB int3 lahf jp rex.WB rex.WX add xor flds cmp outsl callq rex jge sub cs mov (bad) sub addr32 sahf jrcxz mov and add sbb pop mov mov sub (bad) (bad) (bad) (bad) sti push (bad) xor rex.RXB (bad) (bad) (bad) xor adc rex.WR (bad) (bad) pushq xor pop push or mov mov add add (bad) rex.WRB scas xchg enterq and pushq cmp (bad) addr32 lods (bad) mov adc rex.WX (bad) rex mov add add movabs shrb mov rol dec ror neg add mov jmpq ja bt stc bt imul cmc add jmpq jmpq jmpq jmpq jne jne jmpq jae jmpq push push push rex.WB cs rex.WR rex.WR rex.R (bad) decl mov sub sarb jb xchg lret (bad) pextrw cltd cmp xor out add (bad) (bad) rex.WXB movsb xchg in (bad) and (bad) mov icebp cmc (bad) or mov sbb movabs test rex.XB (bad) movslq insb push adc out in rex.WRB rcrl ja xor (bad) (bad) (bad) cld or xor (bad) cmc (bad) sbb rex.WX std add adc jmpq or (bad) xchg pop mov (bad) add add and pop and mov (bad) sbb in xor jmp (bad) (bad) loopl (bad) jmp mov andl mov (bad) adc mov and xchg add insb adc adc jb sbb mov rorl add sti and jmpq je shld shld push inc mov mov cmc rcl sar add sub movzbw movzbw lea jmpq jmpq sub shrd rcr shld data16 (bad) or jnp bswap mov dec setne mov test repnz jmpq ja bt cmc stc bt imul cmc jmpq jae lea rex.X mov xchg adc (bad) out and mov (bad) sarl retq mov sar cmc (bad) adc jno cmpsl pushfq cmpsl xchg maxps sahf add xor mov pop imul lods xor (bad) (bad) sti cmp rex xchg (bad) (bad) (bad) (bad) and or mov xor (bad) lock pop lea sbb pop lret (bad) imul hlt jbe cmc or popfq rex.B fs pop in jb cmp (bad) shrl popfq (bad) cmp movsl cmc and mov (bad) (bad) (bad) ljmp rex.XB jne cmc enterq retq xchg pushq (bad) scas add test (bad) (bad) xlat jns fadd movsl cwtl add movabs movabs xor jmp sbb sbb test std or fdivl shlb mov movsbw jmpq jl add stos adc out retq lret cmc ja jl movabs pop int cltd rex.RB lret adc std rex.WRXB scas mov imul jbe fmuls (bad) and stos stc lods callq leaveq imul (bad) js imul movsl mov (bad) rex.WXB rex.RXB xchg (bad) (bad) (bad) decb (bad) (bad) (bad) decl pop rex.WRXB xchg xchg lret (bad) jnp hlt outsl int3 push add xchg jno rex.WRB add rol (bad) (bad) push (bad) cmp jns jb and scas add mov movslq cmp xor movabs mov jl rex.RB lods pushq sub in pop sarl repnz rex.WRB rcl stc jmpq xor jrcxz pushfq and (bad) cld pop xchg ja cmp cmpsb js mov mov sahf mov cltd in (bad) movabs sub (bad) sub movabs cld lahf iret jmpq orl cwtl push or xorb xor pop (bad) jo pop mov (bad) (bad) decb (bad) (bad) (bad) incl xor (bad) ss insb (bad) mov sub add rex.RXB lods rex.WR sbb (bad) movslq jbe clc pop es int sbb pushfq mov add lahf mov setg add (bad) jno mull mov jle (bad) je callq add addr32 or outsl xchg and rorl mov (bad) jbe add jmpq movabs andl imul sti xchg jmpq loopne or adc rex.WB movabs jg xor insb adc adc adc xchg or ja jmpq jrcxz retq rex.WRXB (bad) cld lea sub (bad) (bad) sti out cmp (bad) (bad) fcoms out mov mov incl sub jo add add pop (bad) decb movabs sbb mov neg mov xor or rex.RX fwait (bad) ss mov mov test sub jmpq sbb (bad) mov add (bad) movsb cmc mov jae adc (bad) andl (bad) mov insl (bad) (bad) cmp xorb fcomip push and and (bad) retq adc sbb push sarl imul jne or (bad) cmp xor retq jl pop nop xchg sahf callq out and sbb lret in bnd data16 (bad) mov and rex.W mov push cmp stos mov xchg decb sub int3 lods pushq (bad) (bad) (bad) sti (bad) repnz rex.X (bad) (bad) inc xor mov jmpq jo and add add sub test imull or jno or stos (bad) (bad) pop sysenter (bad) sub rex.WXB pop (bad) cwtl cmpsl pushfq mov lret negl rex.XB jns nopl fdivl jg mov cmc (bad) hlt scas mov rex jne cmpsb xor lahf mov sti repnz jo (bad) xlat (bad) out iret repz and xchg sbb popq cs cmp outsl push xchg (bad) sub (bad) (bad) cmp pop sbb outsb stos (bad) or rex.WB scas push rex.R cmovae xchg clc callq pop scas ja mov xchg mov sub xor imul popfq cmp (bad) sti imul cmp pop jmp rex.X fisubl pop mov loope (bad) (bad) callq (bad) vmovups shll ja mov or rex.WXB int xchg shlb jae jrcxz xchg outsb (bad) add cmp ss testb int in mov mov xor lahf std ja jmpq jmpq jmpq je add stc bt push ror cmc mov clc test sub jmpq ja jmpq mov and push clc lea pop jg (bad) icebp test leaveq lock push xchg (bad) and stos and (bad) xchg ds mov or mov rex.W add cmc rex.XB ds or add jo pop mov add (bad) (bad) (bad) cli movabs mov out (bad) rex.RXB imul push and nop leaveq mov add pop sar lods data16 push nop mov jrcxz out retq rex.WB out leaveq (bad) adc jne test (bad) ljmp mov jb sbb jb pushfq movabs rex.WXB cmp xor fdivrs add cwtl or mov and in rex.RXB xor loop sbb cmc stc rol cmp stc neg jmpq test cmc stc add clc stc stc clc mov clc test jmpq (bad) sub xor imulb test add lea test fs cmp icebp rex.X xor mov (bad) (bad) adc (bad) out fstpl and xlat sub testl jl mov pop xor incl push enterq (bad) jae and (bad) (bad) (bad) sti adc rex.WRX rex.RB lock push rcll xchg jbe mov test ficomp (bad) xor std xlat loope (bad) cmpsl and adc fldt pushq push lret rex.WX fwait insb pop xchg hlt rex.X movabs sbb add sub sar (bad) (bad) sti adc (bad) mov popfq retq lcall (bad) (bad) stc insb sbbl repnz out mov sbb (bad) test mov adc gs lahf mov lods push clc mov cmp mov add stos jmpq callq not mov movzbl mov movzbw movzbl mov xchg setg pop movsbw mov bswap jmpq or in adc adc or in add sub popfq rex.RB rex.WRXB push xchg jb sub rex.RX push mov (bad) mov mov mov fadd int jne (bad) (bad) jae sbb ficom (bad) jo movsl enterq rex shrl (bad) (bad) add jae movsl add mov test ss xchg outsl add (bad) (bad) (bad) (bad) sti stc je jb (bad) (bad) (bad) (bad) loop cmp push mov sbb (bad) or sbb add (bad) stos vpunpckhqdq or rex.WRX pop ja sbb mov or iret pop pushq data16 scas iret movsl out mov gs xor cmpsb (bad) rex.WR mov adc adc pushq jmpq pushq jmpq (bad) xor jo icebp or adc std in (bad) or adc cmp mov jmpq and in mov xchg rex.WXB cmp lock (bad) xor rex.WR int jns lea pop movabs (bad) pushfq ror add fistpll adc fisubrl movabs rex.XB mov (bad) (bad) (bad) (bad) sub xchg test scas (bad) jrcxz and sub cmp jnp (bad) and test stc (bad) imul jmp (bad) and ja fisttpl (bad) (bad) mov adc lret (bad) addr32 pop and or push sub jns mov cld xor mov ds icebp stc pop (bad) mov push retq std movsb sub (bad) sarb sbb or sbb (bad) rex.W rex.W rolb rex.WX or jle mov jl mov rex.WRX (bad) cmpsb rolb sti (bad) (bad) fisubr add (bad) mov and or test mov outsl (bad) mov (bad) xor (bad) mov (bad) std loopne (bad) xchg adc add add repz (bad) out out (bad) xor or fcmove or std (bad) push rex.RX sbb fdivrl mov (bad) or rex.WXB loopne ja lret ss mov adc jbe int3 outsl in nop int3 (bad) sbb movsb loop jns retq push or outsl movabs add repz mov iret and jnp icebp (bad) (bad) outsb and sub jnp add mov out loopne cmc (bad) jg and fwait push jnp iret (bad) ja jrcxz int3 bnd iret clc (bad) mov iret rex.WX roll lahf iret repz imul adc mov lock js imul outsb mov loop jge iret fmull (bad) jmpq or jnp mov (bad) je mov xchg pop jbe push test out sarl pop lock scas roll or rorb push retq rex.WB xchg and outsb sub and rex.RX and std rcll jg sub jle lret xlat rex.WRXB jg rcr adc pop cld xchg jns mov cmp mov lods fsubl or jnp shrb out sbb adc in movabs cwtl xlat (bad) andb idiv addr32 andl ja (bad) in rex.X adc cmp sbb xchg rex es in orl push lret sub xchg rex.WX add jp movabs jl adc nop lahf xor add pushq and cmpsb jrcxz (bad) fsubrs cmpsb flds add fisub cmpsl jb andl pushfq int3 (bad) mov shrl (bad) (bad) fstpt out (bad) or rex.WX sahf (bad) cmp mov mov (bad) (bad) movl adc test pop xchg add (bad) out rex.RXB xor adc out (bad) jp fdivl and incl (bad) and rex.WRXB mov stos xor mov mov (bad) (bad) orl add mov xchg add rex.RXB sbb lret cmc xlat outsl cmp lret xor (bad) rex.WR repz fildl rex.W xchg adc cmp (bad) (bad) push pop mov in xor cmp lea retq (bad) cltd mov in lahf jnp sarl (bad) imul (bad) (bad) (bad) cld add or push (bad) (bad) (bad) (bad) in jo (bad) cmp fisttpl sub out push or and nop push stc (bad) mov mov (bad) cmp add or add test cmpsb (bad) push and lret sbb mov (bad) xor push sbb ljmp mov push testb es rex.WRX in cmp mov mov rex.WX decl rol add clc rcl add jmpq setp not mov mov jmpq jmpq adc jmpq dec stc clc bt cmp jmpq jne cmp mov clc cmc add bt cmp bt movzwl dec jg mov cmc jmpq stc not jmpq jae jmpq ja mov sub sub test add bts mov stc shr mov cmp clc repnz jmpq shlb mov rex.W loope icebp out cwtl pop push mov cmp loope decl lret (bad) mov or test mov mov (bad) or push rex.RB adc (bad) (bad) (bad) cmp mov or and test cmpsl add cmp movb or (bad) rex.WXB scas out pop (bad) (bad) (bad) std std rex.RX add add pop push jp cmpl (bad) loope js and pop leaveq cmpsb rorb sbb sub mov mulb (bad) js mov or xchg and mov in sbb and xlat mov xor (bad) icebp pop xchg (bad) movabs (bad) xchg mov enterq sbb cltd idiv xchg jno and sbb mov rex.WRX cli (bad) mov nop test rex.RXB jge (bad) jnp jno insb popfq test and sub cmpsl xchg test xchg jnp nop rex.XB lahf adc mov enterq adc adc movabs add mov jb pop push cld hlt movabs xchg insl (bad) jne (bad) (bad) incb enterq sub (bad) (bad) incl xabort je sbb and sub callq rex.X fnsave je jge (bad) mov xchg or scas mov outsl ja je sub adc xor cmp test sbb add imul add add add test out (bad) (bad) clc adc rol bsf push movzbl btc mov (bad) hlt (bad) btr rol dec sub seto not lea jmpq cld mov jbe cltd sbb mov or (bad) sub or (bad) cmpsb xchg or push (bad) adc push popfq rolb and rorb jbe fnstenv (bad) (bad) mov fs out (bad) leaveq rex.WR rex.RX mov adc (bad) rex.RXB retq int jo mov (bad) mov push (bad) test rolb sbb add data16 rex.X (bad) sarl jb jp (bad) add cltd sbb test gs sbb sub stc xchg and cmpl int (bad) rex jo jbe cmp or in (bad) (bad) xor hlt sub adc cmp mov fildll fldenv (bad) or jl mov mov jnp sti out rex.RX jg xchg je mov add and push sub pop push mov xchg (bad) (bad) je rex.X lods test adc (bad) jg loope in rorb fcmove (bad) mov rex.WX js add outsl xor mov hlt ja test movabs cmp popfq mov (bad) jmpq mov in btc cmp ror bts mov shr xor sub lea jmpq ja sar sub bswap xor add lea sbb rol shrd mov mov mov and rol mov cmp jge cmc clc repnz jmpq (bad) repz (bad) xchg test and sub int3 and adc xchg jp sub xor (bad) rex.WRX js cmp cld (bad) sub xchg mov out rex int3 (bad) mov and (bad) or sbb push clc cmp callq add fcmovnbe add (bad) jno lret (bad) fwait (bad) pushfq loop adc cmp add sbb fs fsubrs (bad) (bad) (bad) sti (bad) push xor (bad) imul (bad) test rex.WRB retq test (bad) (bad) jmp (bad) jge stc jrcxz rex.WRXB cwtl and std fisttpl and rex.WRB pop ss (bad) jg xchg mov xor and vaddps movslq test mov data16 xchg xor ja adc rcr dec and sub stc add stc inc mov sar mov test repnz jmpq pushq jmpq xchg setns xchg lods dec sete inc mov inc rcl dec xor jmpq add rex.XB (bad) je push (bad) insb gs add movabs (bad) fs adc and xlat (bad) fidivrl ss adc push xchg (bad) mov cmp cwtl inc adc (bad) cmp xchg movslq and jp sahf jp (bad) stos movsl fsubrs in fcos jrcxz retq pop mov jl adc outsl fldcw add sbb sbb sbb (bad) (bad) std (bad) cltd scas sub add add (bad) mov rcrl pushq pop pushq xchg pop or jmpq pop (bad) and cltd std stos xchg jle,pt sti push jge out stc or (bad) scas rcrl push push (bad) std (bad) (bad) jo ss mov jle sub pop sti (bad) std insl (bad) xor sub or outsb out rex.R rex.RX lods rex.RX pop mov hlt int3 sbb add push xchg rex.X xor cmp int3 cmp push (bad) out (bad) and sub sbb (bad) or xchg jrcxz leaveq jb insl push cmp in rex.RB popfq add jp outsb int3 cmpsb fcmove shr and rex.WX test sbb insl or jns xchg sbb push rex.WB ficomp (bad) sub (bad) add cmp scas (bad) and (bad) mov pushfq mov sub cmp insl jo xor (bad) (bad) (bad) lahf and rcr rorl or sbb es cmpsb int sti (bad) jns pextrw rex.WRXB xor mov cltd adc (bad) movsl (bad) rex.RX roll sarl out rex.XB outsl packuswb movsl mov ficomp pop mov xchg adc adc add btr shr setle mov rcl neg ror adc mov bswap mov bt test test xor cmp test test repnz jmpq leaveq (bad) and mov outsl lods cwtl pop cmpsb rex.WRX add rcll scas sbb rex.WRX jb js clc ss fiadd enterq (bad) sbb icebp sbbb mov xchg gs mov or int3 repnz jg lea pop sub or mov out (bad) mov sub or insl rex cld add (bad) (bad) sti jle (bad) shlb (bad) mov mov xrelease (bad) add lahf push (bad) (bad) (bad) jmpq lret xchg cmpsb sbb cmpl xor rex.WX cmp xchg int3 lock jrcxz shrb adc xacquire cwtl cmpsb stc push (bad) rex.B jle rex.WX std mov xchg adc fcmovne or retq shlb enterq lods add (bad) jmpq pop sub (bad) pop xor test pop xchg xchg rex.WXB push mov rex.RXB mov movsl (bad) jg rex.RB (bad) (bad) cmp adc mov (bad) adc xchg mov nop test cltd jmp (bad) adc out lahf std sub mov enterq xor (bad) push (bad) or and in or rex.WX es sub popfq test (bad) (bad) (bad) sti adc mov (bad) (bad) adc rex adc add add loopne ds (bad) loopne sbb iret icebp adc test mov pcmpeqd and (bad) (bad) (bad) in fstpt jl out jbe adc movabs test (bad) fistpl jae jbe in (bad) fdivs lock mov adc mov xchg cmpl pop ds int3 add xchg retq mov ss jrcxz pop cltd and pushq retq stos add not adc in rex.R jbe insb rex.WRXB es rex.WRXB or sub gs rex.WXB add jno mov adc fidivl jge xchg xchg movabs (bad) (bad) cli fbld (bad) (bad) std enterq pop int cmp movsb mov adc (bad) xor push fisttpl retq negb push (bad) push cld iret and jbe add mov rex.RX adc adc sub rdmsr mov test mov rex.WRB push icebp in rex (bad) movabs retq mov (bad) (bad) lcall cmp lret insl (bad) push and mov scas (bad) test xchg subb cmp lahf mov (bad) add rex.WRXB sub roll pop push cmp jns (bad) mov xchg xchg and addr32 jmpq pop and mov and jae iret mov mov xlat (bad) (bad) mov fisttpl sub movabs ds sbb je xchg shrb cs xor mov xchg xor mov xor movsl mov xor or addr32 push sbb or and (bad) addr32 pop sti cmp jle jne push xchg lea pop mov (bad) in retq mov outsb fidivl add cwtl (bad) (bad) cmp sbb (bad) pmulhw mov push (bad) (bad) (bad) decb (bad) (bad) (bad) decb punpcklbw (bad) rolb out push (bad) notl mov fldl jno rex.B mov mov or repnz xchg mov rex.WRXB or (bad) test adc add mov xchg imul (bad) pop mov rex.WRXB fdivr and and rex.RB enterq pushfq ficoml enterq cmpsl rex shll and cwtl cmc ljmp rex jbe xor rex.W xor sub shlb (bad) or push (bad) mov cmp retq mov cmp xor (bad) (bad) cld movswl jo (bad) (bad) (bad) decl lods pop push insl pop or movsb out rex.R (bad) pushfw sbb cmp sub add add sbb imul retq cmp sbb cmp sahf fstps (bad) fistpll (bad) (bad) xchg clc clc pushq cmp adc rex.WRX lret adc stos rol sbb (bad) mov xchg adcl addl add mov mov mov xor (bad) testb fldl2t out movabs rex.RX repz rex.RX rclb ja sub leaveq or mov stos test fwait rex.RXB cmp mov jae sti sbb (bad) or mov sub movsb push mov (bad) rex.XB (bad) jg xchg sahf rex jrcxz (bad) pushq sbb add lock iret decl adc lock loopne loopne (bad) (bad) (bad) sti movsl jae or (bad) (bad) decb jnp in cltd add add or pop sarl rclb (bad) sub jne movabs mov push cmp pushq xchg (bad) (bad) cmp sarb mov xchg imul data16 cmc (bad) xor jne mov (bad) mov rex.RB xchg jmpq mov cmp ja sub sti (bad) add cmpsb sbb fwait rex.WRB fadd xor jns pop jp hlt ss notb (bad) lret rex.RX jle hlt push test (bad) xchg lretw mov and sub jge pop pop adcl (bad) ja xchg rex.WX jb (bad) (bad) (bad) decb (bad) (bad) (bad) pushq xor mov sar xchg movabs repz jno mov jae or (bad) mov jns xor cmp lock retq add movabs int3 enterq mov (bad) jno fld cltd xor or cmp (bad) rex.WXB rex.RXB gs imul outsl outsb rex.WB outsw push imul and fdivl (bad) mov out popfq dec divb push push (bad) lss and fimul add rex.WX insb cs (bad) (bad) (bad) (bad) std stos jb sbb iret (bad) xchg push jl sbb movb mov (bad) (bad) out mov xchg fs cmp lock push add rex.WRB xchg ja or (bad) std insl mov (bad) (bad) dec lret js nop or (bad) ss (bad) xor jno fcmovnb push jg nop mov mov push lock test (bad) sub xchg movabs sub rex.RX jae jne bsr bt btr sub mov cmc add bt bt stc bt movzwl neg xor not data16 (bad) mov cmc stc stc add cmc mov test cmc cmp bt test jmpq in movsb add xchg sub pop rex.WX out add retq add (bad) xor shrl (bad) (bad) movslq int3 movabs (bad) jrcxz rex.W jmp and (bad) xor roll sbb mov fiadd jnp pop sub mov (bad) rex.WRXB (bad) sbb (bad) or or imul mov andl xchg xlat rcll in fstl rcr sub mov rex.WB cs (bad) (bad) (bad) std (bad) rex.WR add add or repnz sahf mov js rex.B iret mov movabs fidiv imul rex.W cs (bad) mov jb adc sbb jmpq jmpq cwtl rex.RXB xchg adc or sbb (bad) cmc test (bad) mov mov retq push sbbl movabs sub jo mov cmpsb sbb hlt loope pop adc rex.WRXB push add cltd add jle mov xor fs mov adc fnstenv sbb rex.WXB add (bad) xchg xchg imul (bad) (bad) sti mov (bad) out rex.RB (bad) (bad) (bad) cltd (bad) jnp mov mov repz sti sub pop push mov cwtl loop pop sbb pop mov callq xor rex.WXB sbb (bad) jb lret (bad) (bad) jnp in mov xor leaveq popfq xor fadds mov (bad) test rex.RX fwait (bad) and (bad) (bad) push cmp sarl (bad) repnz or jae jl mov (bad) xchg clc adc outsb (bad) rex.B mov (bad) lea cmp push push insb push (bad) xor in xchg add sub scas fdivrl (bad) pushq jl (bad) jmp std icebp (bad) mov mov lahf stos sub xchg (bad) cmp push pop cmp leaveq test rex.XB jg data16 insl pop xor mov fisubl rex.RX jo lods xor cmp movabs je (bad) fsubp (bad) (bad) (bad) cld outsl lock add (bad) (bad) lcall xor rex.WRXB xor jne jnp movabs add add sbb fucomip retq jmpq xor jmp xchg jge rex.RX add (bad) adc pop clc (bad) cltd fdivl push rcrb add insl sbb mov lahf lea (bad) mov pushfq es mov xchg imul bt add jmpq stc test cmp jmpq je rol xor movsbl push or xchg rol clc mov rcr rol sub movabs mov movzbw lea jmpq callq xor test bsr add bswap bswap mov stc cmpb jmpq jmpq shlb int3 (bad) xchg shld lret retq (bad) (bad) enterq mov fmul divl mov push xorl movsl adc in lret cli out (bad) mov clc or rcr add (bad) sub mov (bad) push (bad) loopne (bad) nop test sarl sub adc (bad) rex.WRXB (bad) (bad) (bad) cld cmp cltd popfq cwtl (bad) (bad) (bad) jmpq rex.RX add cmp rex.RXB cmp clc icebp adc in cs rex.RXB loope sahf xchg je sub mull movabs mov add add fidivl scas mov sbb test (bad) jrcxz or jae jnp rex.RXB pushq retq xchg out mov sbb add mov andb (bad) (bad) scas enterq jbe cmp xor in sbb xor inc clc cmc xor movsbw not movsbq pop movzbw movzbw jmpq jmpq xchg or (bad) lock scas cwtl scas sub lea lret adc add mov or pushfq pop fs test sub mov movslq fnstcw mov mov cwtl (bad) xor cwtl (bad) (bad) (bad) push popfq mov movabs rex.RX xchg ftst mov fwait andb movabs mov (bad) or (bad) pushq js rcll movsb callq xchg iret (bad) scas ds rex (bad) (bad) sti pushq (bad) (bad) (bad) (bad) push lods pop xor pop cmp (bad) rex.WRX lahf int3 mov callq mov rex.XB rex.XB cmp push mov out insl (bad) xor scas mov jge (bad) cmp (bad) add mov nop push ror pop (bad) adc iret data16 insb sarl in jge movslq push rex.WRX rex.RB xor cs insb add mov in sub decl test sar (bad) jmpq xor sub mov fndisi(8087 mov (bad) popfq xchg std (bad) mov stc cmc sbb insb jne mov cmpl push xor push (bad) movslq cs outsl jrcxz (bad) fistp jnp rex.R mov and jno (bad) (bad) std (bad) jbe insb rex.WR flds rex.WRX jmp cmp cmpsl rex.WRX cltd (bad) (bad) (bad) std mov mov mov adc mov add sbb retq scas xchg cld movabs fidiv xchg notb add insl loopne fwait mov callq lahf (bad) in in (bad) fwait repnz iret repz pop xor (bad) outsb retq mov pop cmpsb pop cmpl (bad) std xchg imull adc movabs rcr in (bad) rcrl mov (bad) jne andb jo fs enterq rex.WRXB xor insb or pushfq rex.WRXB sub fmull gs xchg push sub mov mov (bad) (bad) (bad) sti jp addl (bad) (bad) (bad) (bad) fs test mov ljmp mov sub (bad) (bad) jmpq std movabs mov sub cwtl (bad) add (bad) movabs (bad) ja lea imulb int (bad) jnp jae je lret jae xchg jrcxz sbb je jmpq bswap lea mov setl lea movsbw xchg jmpq cmp jmpq in pop and rex.WR rex.RXB (bad) movsb cwtl (bad) in adc mov jb (bad) mov or pop push mov out repz add jb rex.WRXB (bad) (bad) imul pop adcb xchg lahf push add rex.WB ds loope pop sub (bad) cmp insb or icebp in leaveq mov jge (bad) (bad) (bad) sti mov mov data16 (bad) (bad) (bad) movabs (bad) lods push out sbb and mov mov (bad) mov mov add add gs retq push and mov rcrb adc mull push mov mov shlb movabs cmp sub rolb jo cmp ss (bad) outsl (bad) jne mov mov movabs push jns rex.RX test and movabs negl cmpsl ffree or xchg callq sbb mull je push push xchg sbbl (bad) (bad) (bad) (bad) push rex.XB jbe add int std xchg ss fbld (bad) (bad) jle hlt retq and pop xor pushfq xchg rex.R (bad) (bad) (bad) adc jge testl fwait xchg jne add (bad) add push pop mov push imul add or loop movsl test xor movabs push xchg mov (bad) (bad) stos (bad) rex.WXB pushq (bad) jae rex.X jge,pt jle cmp rex.XB rex.RXB addb lret icebp repnz movabs cmpsb mov movabs movabs ficoml mov testl sub lahf sti loopne in adc xchg rex.WRX or loopne adc sub add gs rex.WXB mov movabs (bad) cli push std fdivl (bad) outsl mov (bad) in mov adc cmc lahf cmpsb rex.WX adc (bad) pushfq (bad) repnz or cld scas mov (bad) vdivps xchg mov cs (bad) in retq adc (bad) shrb ds jg cwtl mov je cli push lock sti sbb (bad) (bad) (bad) (bad) incb test jae jrcxz jp mulb mov or rex.WRX and sub (bad) jmp leaveq lods lock in sbb mov pushq (bad) ljmp rex.WRB add (bad) (bad) rex rex.X rex.R test lods rex.RB lret movsb mov sub stos xchg fs mov pop ds adc or pop rcrb gs (bad) and (bad) rcrb xchg shrb and (bad) push xchg rex.WB movsl xorb rex.XB jp jno shr xorl pop imul push xrelease or xor (bad) mov fcmovnu adc fstl scas (bad) mov (bad) jns rex (bad) (bad) push ja test push sub pop pop icebp mov cmp lret rex.XB fidivrl rex.WRB sub mov jp xor cli jge (bad) (bad) sti xchg (bad) callq (bad) (bad) jle (bad) (bad) stos (bad) add sbb imul fwait add (bad) (bad) (bad) (bad) cmpsb test lods (bad) mov push insb pop and (bad) mov sub rex.WR pop divb add or stos add stos repnz (bad) and cltd add nop (bad) mov movsb fsubrs push pop (bad) lret or repz add pushfq (bad) repnz (bad) sbb sbb sti jnp movabs movabs cmpsb scas (bad) push add rex.WRB sbb xchg mov sub jmp push (bad) mov add mov or lret (bad) (bad) (bad) sti lahf sbb rex.R (bad) (bad) decb jmp mov fisub test mov xor pop cwtl out cmp (bad) retq out rex.W movsl jrcxz cmc and xlat rex.WX cs push sti insb sbb xchg rex.RXB jbe (bad) rex.WB add rex.WRX adc rex.X xor push sbb rex.RXB jb test xor inc rex.WRXB cmp lods cmpl stos ror test xchg add mov movsl rex.WXB push jmpq in callq (bad) insb mov sbb cmp push scas int xorb (bad) jle rolb mov mov (bad) push lods push and cmpl sbb cwtl retq test adc (bad) (bad) xor fs lock insb jmp rex.WRB add xchg retq outsl sbb (bad) sti cmp lods jne (bad) (bad) (bad) (bad) and rex.WRX fiaddl xor sbb icebp (bad) clc cmp in mov lods test or imul xchg movabs cmp lea sub rex.X lock data16 enterq xchg ljmp fnstsw mov mov fnsave sbb jmpq or (bad) cli clc or mov outsb or cmp retq adc enterq adc (bad) or out fimul repnz and cmpsl out or decb fwait pop pop scas shrl rex.WRB push mov mov repz (bad) (bad) jno mov (bad) push xor js xchg sbb movabs (bad) js mov (bad) flds test mov insl (bad) pushfq js push rex.RB rclb (bad) (bad) (bad) sti cltd mov fwait movabs sti xor mov push out pushfq jg jge add add add rcrb lods mov jge mov and push cmp movabs subl rex.WX jne decb test scas rol repz cmp (bad) loopne sub and fisub pop or test pushq mov xchg rex.RX lea insb sub sbb lret or lret mov jle (bad) mov shrb (bad) jne mov outsb stc mov rex.W rex.WXB sahf movslq xchg int mov (bad) sbb jmpq xchg and clc adc mov out add repnz add cli (bad) rcr frstor or mov jl movabs (bad) (bad) sti (bad) jns js (bad) (bad) (bad) decb mov (bad) jp push orl leaveq iret repnz (bad) (bad) (bad) dec mov cmpsl cmc addb jp jl clc xlat (bad) mov loope sti rex.WX mov (bad) jno (bad) hlt cwtl mov sub (bad) or (bad) retq mov rex.WR mov rex.XB test ja jmpq jae cmc cmp jmpq mov mov seta movzbw xchg mov mov lea jmpq jmpq jmpq jmpq (bad) stos adc lret adc jmpq out mov mov rex.WB jg (bad) (bad) or jmp (bad) pop je add mov lea mov icebp cmp push pop popfq movsb (bad) test pop (bad) enterq movabs in rex.WR fwait in (bad) sbb rex cld negb (bad) (bad) (bad) (bad) sti fimull out or (bad) (bad) (bad) mov add movslq xchg (bad) rex.RXB retq cmovp test fsin jge jg lods fcoml (bad) jg fimull mov add add jbe (bad) sbb je loopne (bad) retq push (bad) (bad) xchg notl jge jne enterq mov xor rex.WRX data16 callq and mov test xlat cwtl int3 iret sbb mov adc imul imul xchg mov (bad) enterq xlat (bad) sarb lret (bad) in xchg jle (bad) outsb sub fimul (bad) and lea callq push (bad) mov clc mov push xchg (bad) insl xor mov adc rex.WRX sbb pop xchg sub mov sbb (bad) jg shrl mov (bad) jl pop in (bad) lret xchg leaveq enterq sbb pop mov cltd xchg mov negl ficompl movl cmpl xchg out sahf mov cli lahf lods rex.WR add (bad) leaveq maskmovq sbb (bad) imul mov cwtl or mov sbb fwait stos out fidivrl jrcxz sbb mov outsl sbb cmp mov xlat sub int3 and mov enterq gs (bad) sbb shrd lahf cwtl jrcxz (bad) (bad) push rex.B fwait (bad) (bad) pop xor idivl fisttpl movabs pushfq sahf ficom mov jrcxz add movb jg xchg lahf bnd cli pop xchg lods xchg popfq addr32 addl (bad) jae push pushfq icebp pop pop xchg add (bad) mov scas movhps cmpb rcrl mov or xor jmp std nop addb leaveq add adc ljmp (bad) jae outsb mov scas (bad) xchg lods iret or xchg (bad) pop jmp (bad) lahf outsl ds loopne xlat xchg push outsl xlat (bad) (bad) jl (bad) fs sahf movabs (bad) rol jae xchg mov xchg mov (bad) push add gs addr32 rex.RB (bad) jmp push mov (bad) (bad) mov outsl rclb ss (bad) or icebp pushfq (bad) cmpsb outsl movabs fwait adc mov adcl mov push sahf (bad) insl fneni(8087 lret outsl lods push pushq (bad) or (bad) orb and xlat push out pop xor push jo lret rex.WRX leaveq pushfq push mov mov cmpsl fsub es lea lcall or (bad) fdivrl fbld jmpq movsl pushfq jmp lods addr32 rex.WRB mov es rex.WRXB rex.WRX (bad) fimul lock int3 (bad) push xlat (bad) lahf push (bad) (bad) rolb xchg lods rex.WRXB iret cld pop movntps (bad) jbe adc fucomp xchg mov pushq pop mov sbb xlat (bad) xchg stos jl mov mov pop es scas cmp mov rex gs stc adcb xchg sbb pop mov and (bad) (bad) xlat (bad) (bad) xchg (bad) fiadd mov sub rex.WR xchg rex.RX retq movabs fs cltd stos jbe mov adc mov (bad) imul repz (bad) rex.WRX pop sbb imul popfq (bad) fisubr sahf rex.X (bad) mov test pop (bad) fdivr xchg test xchg psubq jrcxz (bad) mov retq movabs je rex.B fwait sbb sahf mov jge mov xchg movsb jrcxz adc ffree pop pop icebp stos mov cmp mov (bad) movsl (bad) mov je adc fimull fs mov rcr lods lea push (bad) stos pop (bad) rex.XB (bad) pop scas lea mov pop sbb mov mov xor (bad) fsts mov push and rex.RXB nop in rol and (bad) pop mov xlat fadds (bad) lret mov cmp xchg mov xor jle (bad) lods mov std (bad) xlat stc jmp scas and subl lahf pushfq mov jmp jns jg (bad) data16 (bad) sbb mov jle pop mov xchg rolb adc jo test iret (bad) pop je sbb repz push (bad) pop sbb cwtl and xlat movsb addr32 mov rcrb movsb xchg fwait sub xchg ja jbe xlat repz (bad) shrl test xchg xor lret mov xlat push xlat scas (bad) rex.WRXB ja cmpsb (bad) mov ja xchg leaveq jae (bad) (bad) in or mov (bad) in (bad) rex.RXB mov or fimul rex.WRX sub mov rex.RXB lods mov cltd pop push rex.RXB mov mov jb pop lea cmp repz clc (bad) xlat jmp and (bad) rcrb rclb mov xchg xchg mov jp xchg stc xchg out mov out imul lea sti rex.WRB add push lods xorl pop cs add pop pop xchg cmp imul (bad) or fdivrs (bad) xchg (bad) (bad) test rol add es rex.RX (bad) xlat jg nop adc (bad) sub rex.WRXB faddl (bad) (bad) outsl mov rex.WXB sbb (bad) jae rex.XB and (bad) negb xor movabs out xchg scas movabs leaveq outsl es and jne orl (bad) xlat nop (bad) (bad) (bad) (bad) xor (bad) (bad) (bad) pop xchg xchg jbe loopne (bad) movabs shrl jg push pop cltd rex.RXB pop and mov movabs xchg pop xchg mov rcl mov (bad) (bad) xor cmpb jle adc callq jle xchg fwait pushfq (bad) outsl or cwtl jg mov sub lahf push (bad) outsl movabs test (bad) or outsb lods cmpsl fmuls jbe cmp sbbl stos sbb mov rex.W cmpsl pop int3 movl push out sub cmpsl mov sbb mov rex.X mov jle je rex.WRB fldenv test xor mov pop popfq mov jo jae jns mov jmp sbb imul pop ds rex.WRXB mov xchg jbe rcrl (bad) lods notb adc add in mov add (bad) (bad) mulb (bad) (bad) outsl in lret or add (bad) psadbw ja sub out mov movsb out and (bad) popfq mov out (bad) adc xchg (bad) sbb mov sbbl adc lods (bad) out and push sbb (bad) adc nop sbb or add loopne xchg mov add or scas pushfq mov repz idiv idivb fmulp fisubl enterq in push push (bad) lret xlat mov iret mov mov (bad) rcr mov sub andl rcrb adc push pop repz mov orb adc fidivl out adc rex.XB cmp mov scas adc ja pop js push sbb and cmpsl scas in es int3 movq (bad) rex.WXB (bad) mov xor leaveq xchg (bad) (bad) mov notl rex.WX sahf (bad) mov or rex.WXB pushfq (bad) (bad) fs mov push mov lea decl push pop sbb (bad) xchg xchg cmp sahf je cmc jo (bad) sahf sbb jrcxz cli xchg cmp (bad) xor xlat mov (bad) pop sub lret lret hlt xchg ficom rex.WB xor rex.WR test or cmpsl xchg sti rex.WRXB hlt insb mov (bad) mov mov je (bad) sahf (bad) lods repz pop in cwtl mov (bad) xchg setl sbb (bad) mov (bad) fsts pushfq lret mov sbb gs (bad) movsl sub rol stos fcomp sahf (bad) sub (bad) pushfq jae cmp (bad) sbb adc sbb (bad) push int3 (bad) jrcxz mov xchg insl (bad) xchg sti ss retq addr32 loopne cld incl xlat fimull movabs repz je xchg rex.W rex.WRXB rex rex.RXB cld test add retq cmp stc lahf (bad) (bad) lock mov mov mov outsb popfq jae pop (bad) rex.WRB jbe mov rex.WB mov add mov insl jg jns cmp rex.WRXB out and xor mov in jg mov sub out imul stos pushq push cwtl movsl mov movsb cs pop (bad) movabs (bad) lock pushfq (bad) xchg (bad) rex.RB fcmovnb sahf rcrb push adc imul rex pop sub imul test lock out jno movabs ja pop pop jmp cltd scas pop cmpl mov retq push pop in cmovns pop cwtl jnp pop pushq adcl adc sahf fmulp movslq mov xchg scas fs xchg cli test leaveq (bad) push addl std nop mov cld fwait movsl jg or cmpsl cmp pop rex jp xchg (bad) (bad) imul add add (bad) jbe sbb (bad) pop pushq mov (bad) repz (bad) xor rex.WRXB cmp ja rex.WR adc callq clc xchg push cmpsl test sbb cmp lock mov lahf jnp std mov fmulp jge cmp (bad) rex.RXB sub or test jnp adc movabs scas jno (bad) sub idivl jnp sbb (bad) (bad) pop xchg shll xchg sub pop sbb (bad) sbb pushq (bad) pop adc movabs popfq lahf push imul movslq xchg (bad) (bad) adc gs sub (bad) jne (bad) fwait subl stos fimull sbb and ss xor insl pop outsl xchg fsubs adc (bad) ja (bad) pop push xchg rex.RX adc fwait xor (bad) mov (bad) mov pop pop (bad) mov (bad) and rex.RXB or push xchg rex.RXB fcompl sbb (bad) push sub lods push xchg cmp sub and jnp (bad) sahf rex.RB iret jge jrcxz rex.XB rex.WR mov (bad) xchg data16 imul cmp callq pop mov add xchg push mov mov cmpsb jns (bad) push fidiv jbe cmc lods scas xchg cwtl (bad) pop xchg pop and sub data16 adc in in push xchg xchg jns mov loopne xchg movabs lahf negl lea popfq es adc pop (bad) sbb rex.WB (bad) jbe movslq imul xor cmp not push jo imul (bad) jmp mov xchg mulb shrb (bad) push xchg rex.WR (bad) iret (bad) rex.WXB clc lret rex.RB lea stc pop (bad) pushfq and pop sahf pushq mov mov iret (bad) jle movabs rex.WXB xlat xchg mov mov lea pop mov sar jbe jl lret xchg mov mov scas (bad) hlt mov cmpsb jg adc mov sahf sbb iret retq (bad) in mov xchg xchg rex.WRB push rex.WRX (bad) push cmp pop cmp jbe,pt scas or (bad) adc add adc rex.WXB pop adc or jrcxz (bad) test adc mov or retq popfq rex.XB rex.RXB (bad) adc (bad) xchg cmpsl mov neg jbe lods xor mov (bad) repnz xchg mov jno cmpsl pop pushq push inc mov rex.RB push (bad) sbb cld jnp and (bad) rclb fstps ja and (bad) jp (bad) mov xchg xchg repnz adc rex.WRB jle rex.WXB stos xlat pop (bad) pop (bad) xor lahf retq push and (bad) rex.XB test (bad) (bad) rex.WRXB addr32 (bad) imulb cmpsl (bad) imull mov jbe mov int nop sbb cltd xchg xchg mov (bad) fimull and insl lods mov (bad) scas fcomps sub pop rex.WRXB fnstenv or cmp mov cmp jl int jge pop mov addr32 and cmp clc xlat (bad) xchg rex.WR push jmp addr32 mov fdivs xchg mov jo (bad) mov rclb mov rex.X rex.WB xor xchg rex.WRB push (bad) or xchg stc sbb popfw cmp je lea cltd (bad) push adc (bad) fmull cmp ror insb xor rclb mov shll (bad) fistpll movabs adc iret test adc xchg fdivrp stos movabs cld icebp adc cmp addr32 retq sbb lret adc xchg test adc pop or mov xchg xchg mov imul (bad) loope and and fldenv xchg mov hlt push sbb outsl cmc cmpsb movsl sti lret out push jg hlt mov pushq sahf loopne loopne scas movabs mov (bad) test movabs stos (bad) cmpxchg8b xchg pminsw sti int3 mov (bad) addr32 fnstsw stc fisubr rex.X pop (bad) xor (bad) xor (bad) sub insb cmpsl (bad) stos cmpsl mov cmp xor cltd sbb cmp xchg sub xchg pushq (bad) xchg push rex.WRB mov xchg cmp frstor (bad) lahf rex.WB gs sahf (bad) push cltd pop cmovno out jmp lods mov cmp ja lods (bad) xchg imul (bad) mov pushq addr32 (bad) gs rclb jge lock popfq fbstp xor cmpsl mov xchg mov outsb (bad) xchg cmp rex.XB es outsl (bad) sahf lods sub iret jl fstpt rex.WRXB add (bad) (bad) or cmpsl xchg sbb cmp rex.WB pop cmp sbb rex.WRB mov loopne (bad) jae push iret push xor (bad) sbb popfq or rex.WRXB in out sbb movsb adc cwtl ss cmp (bad) mov imul cld or xor mov add jae pushq xchg xchg decl fsubl jbe fimul mov push sahf jo fs je sahf (bad) and mov data16 mulps outsb (bad) mov rex.WRX jns xchg xchg xor rex.WRXB lock cwtl and (bad) (bad) gs add jns mov (bad) lfs mov rex.XB cwtl popfq push shrl jle rex.XB add je rex.WXB lea fs xchg (bad) (bad) mov loope (bad) or iret and cld andb xor movsl sub pop rex.WRB fldenv sbb rorl xchg (bad) fmull xchg and repnz rex.WRXB (bad) pop rex.RB rex.WX xchg test fisttpll jge cmp rclb lods or rex.WRXB rex.RX lret test stos lods rex.B xlat lahf pop push mov (bad) (bad) test and cmpsb cmc jbe xlat adc add pop (bad) xor ds (bad) std rex.W rex.WRB pop xchg rex.WRB leaveq fwait (bad) pop mov sti movabs rex.X iret mov js in movsb loop jp fs out icebp push scas sti pop movabs pop xor xchg mov sbb cmp fdivs (bad) mov adc sbb lea gs lods mov sbb int3 (bad) lret (bad) callq mov mov sbb test xchg xchg jle shl xchg in pop sbbl xchg pop pushq (bad) jb imul movabs pushq std es rex.WXB jns (bad) lods mov adc mov loopne movabs adc cltd jg (bad) imul rex.RB pop xor jnp and adc je (bad) pushfq (bad) (bad) mov imul jae pop or movabs cmc mov out sbb mov movsb cmp xchg pushq movabs rex.WB (bad) (bad) pop pop repnz adc or rex.RXB rex.WX jbe add adc mov movabs sbb nop rex.WRX jge add imul (bad) imull std cmpsb out fwait pop pop movsl imul ds retq mov (bad) xchg rex.WRX jne gs mov xor mov (bad) (bad) (bad) stos imul cmp mov rex.RB vpinsrw rex.B (bad) pop jo lret mov cmp xor (bad) lods nop xchg push (bad) rex.B fisubrl mov insb rex.B mov adc (bad) mov out stc (bad) mov xchg cmp sbb pop or nop (bad) xor adc subb mov lods mov sub jl mov mov (bad) imul (bad) pop xchg jp cmp add push xchg fimull mov cmp test (bad) stc push mov ficoml icebp mov mov (bad) adc adc rex.X (bad) sub rex.XB ja pop push in (bad) mov sahf fsubs rex.WB mov xchg push jg nop stos retq pop pushfq sbb movabs xlat sahf add jp in shl xor (bad) out movsb mov rex.XB out js rex.R jbe int3 mov jae cmp mov mov lahf outsb rex adc (bad) (bad) mov imul xchg (bad) push lods cmpsl pop xor (bad) (bad) sbb movsb push pushq pop rex.WRXB mov adc (bad) xchg mov xchg adc xchg xchg pop addr32 (bad) outsb repz jo mov popfq lea mov iret push adc sahf (bad) rex.R or mov (bad) lea imulb or (bad) rex.RXB xchg (bad) add and fsubs sar rex.WRB jae (bad) jb mov (bad) jbe lods int push sub (bad) pop adc sub mov fnsave addr32 (bad) pop mov ja (bad) mov insl push movl mov out (bad) jno movsl mov jns cmpsl pop mov (bad) iret (bad) pop mov nop jae callq pop push or or xor movsb fisubr xchg lret xchg ja jb imull test test sbb xor repnz xchg adc add mov mov ss sbb xchg pushq fcomps lahf rex.RX or (bad) and test (bad) gs adc xchg sar mov rclb xlat test mov ja (bad) cmpl cs std (bad) sbb test (bad) callq pop cld jmp fadds jne xor test sub or or adc stos xchg cld mov xlat js xchg (bad) (bad) cwtl out pop (bad) sub (bad) xor xchg xchg (bad) (bad) rex in shl gs or xor and jo andl jg xor pop and and loopne cmp rex.WRB testb jbe (bad) (bad) xchg outsl test mov rex.RXB xchg lea (bad) pop pushq sti ja adc nop lea sbb rcpps gs lcall movslq rolw or (bad) jmp rex.WR fwait xor mov jbe jp in lock (bad) imul (bad) mov lea xchg (bad) mov lock rex.WRXB in orb mov adc mov pushq mov jbe pop rex.XB (bad) cmc insb or cmovno and cld scas jg lret (bad) (bad) sbb jo xchg out pop (bad) subl mov mov rcr or xchg jmp jge add jrcxz (bad) (bad) rolb vorps jbe rex.WRX xchg sbb cltd iret sbb nop mov roll pop jno test mov add sbb adc insl (bad) mov mov fistpl cmp mov pop mov adc imul (bad) jb orb (bad) stos cmp mov mov mov int (bad) mov (bad) (bad) (bad) data16 movabs pop jmp (bad) add and js lods (bad) xlat scas rex.WRB addr32 prefetchwt1 imul int3 sbb (bad) push outsb mov and cmp (bad) int or rolb pushq sahf xlat mov rex.RXB rex.RB fs mov or test adc std jmp jo lret in rex.WRB mov or or sub add rex.WRXB addr32 xchg pushfq stc cmpsb loopne xor mov pop mov (bad) jnp incl push xchg subb std pushq fs (bad) mov (bad) mov mov jae add adc sub loop and lea clc cmpsb mov std rorl (bad) movabs fcoml (bad) fmull rex.WRB js iret sbb jg imul rex.RB jrcxz add fwait pop (bad) adcb rex.WRB fwait xchg sbb popfq mov sub mov (bad) pop movabs (bad) mov nop (bad) push int3 (bad) mov outsl xchg movslq (bad) rex.WX outsb (bad) adc (bad) insb (bad) jge mov pop add fistpll xor cmpsb iret sbb scas pop loope mov fnstcw jge jne add or sbb mov mov (bad) in rex.WRXB test mov popfq (bad) imull xchg jne (bad) jrcxz nop sarl pushq rex.WB retq cmpb imul rcrl rex.X (bad) push and pushfq push rex.WXB rex.WRX push or xchg (bad) add pushq (bad) cli lea mov adc adcl mov xchg ja out mov jrcxz (bad) mov rclb mov adc rcll es movsb fcompl jp sbb cmpsl notb push rex.XB rex.X mov movsl fwait sub pushq xchg scas repz ss add sqrtps or cmp rex.RXB (bad) (bad) push cld pop nop push mov out or notl xor and pushq xlat scas cltd in xchg mov (bad) in ss mov test imul popfq movslq lea (bad) push punpckhdq imul or iret cmpsb rex.RX lea rex.RXB cmpsl adc vmovaps (bad) mov and mov (bad) jae xchg pop xchg and mov (bad) add push shr test in movabs sahf xchg pushq rex rclb movabs iret int3 cmp (bad) push (bad) mov add sbb cmc (bad) clc xchg (bad) mov cwtl lods jbe mov rex.WRB fiaddl xchg mull (bad) rex.WRXB (bad) cld (bad) mov icebp shll sub mov sub in xchg sbb add sub rex.RB rex.WRB adc or js iret jae (bad) mov add rex.X (bad) in xchg test (bad) int add jl jns mov insl lret fucomp cwtl mov cmp and pop (bad) mov addr32 mov sub hlt iret callq gs sub jg or lock pop xor out rex.RB sar int rex.WRB movabs stc (bad) push mov mov pop (bad) (bad) xlat rex.X rex.RX xchg adc leaveq or pop data16 (bad) push rex.X adc pop pop js mov pop rex.WR xchg shlb (bad) and push lea jrcxz add sbb lret push cmp in int ja xor int jmp or (bad) add imul sub or mov cmp popfq mov lahf rex.XB (bad) data16 mov xchg jmp hlt push mov rex jb ljmp out push cmp mov leaveq rex.WR jp xor mov (bad) xlat (bad) xchg xor add cmp rex.WXB fdivl jg rex.WRB pop xchg imul cwtl pushfq out sub rex.RXB (bad) nop sbb lea orl popfq sbb pop sets movabs mov add (bad) insl (bad) stos mov (bad) (bad) fs lea sahf pop fistp int je (bad) std (bad) jo sbb rex.X nop adc (bad) sbb jne iret mov sbb cmc (bad) mov mov movsl cmpsl push jnp jmp sar jrcxz pop cmpsl mov (bad) jp fdivrp (bad) mov int rex.WB scas sar and sahf sar cli mov rcrb sub cli jge xor sbb pushfq xchg xchg adc push lods xchg int3 lea mov std enterq jmp fstps orl xchg lods movabs (bad) mov mov and (bad) rcl popfq jbe jle rex.B xchg stc cmpsb (bad) jae fstpt (bad) sti gs fistpl nop adc jge mov (bad) fcomps popfq xor cmp xor je ds cwtl mov sub outsb andl push rex.WRXB push mov xor rex.WRB rex.WRXB rex.RXB rex.WRXB rex.WRB rex.B repz mov xchg and xor cwtl xchg (bad) movsl mov scas xchg xchg xchg (bad) rex push cld repnz (bad) leaveq pop (bad) (bad) mov mov mov outsb mov and or mov fs lock fistpl add sbb and stos jo test mov (bad) sbb (bad) and stos push adc rcrb scas (bad) adc cli js jbe (bad) test pop (bad) lock or (bad) mov (bad) lea outsl insl sti shl cmpl (bad) loop jbe xchg mov test jmpq fisubl divb jo or pop xchg test imul (bad) mov lahf out or fs adc sbb hlt lods xchg mov adc scas movabs lock push outsb mov push cmp cmpsl xor (bad) ja push addr32 xchg ss outsb hlt hlt xchg lahf fs rex.WRXB mov xor in push push insb nop or xchg lahf rex rex.WRB insl icebp lea jns xlat rex.RXB cwtl rex.WRX (bad) rex.RXB pushq fimul scas jne ds rex.WR insl rex.WX rex.WX sub je cmp roll fcompl pushq pop add mov and mov rex.XB data16 xlat rcll movabs (bad) xchg pop in rex.WXB xchg outsl loop loop pushq movabs popfq pop sahf stc sbb adcl test pop sbb (bad) rex.X xchg push add outsl (bad) fwait sub or (bad) mov cmp sbb loop sahf push sar mov scas (bad) (bad) (bad) (bad) je in or (bad) jnp mov mov or push lea imul fimull pushq sbb rorl jrcxz mull and xor xchg adc notl xlat rolb out lcall lock and retq mov xchg addr32 (bad) mov adc loope adc and cmp enterq mov or (bad) (bad) add jne stos (bad) std cwtl pushq lock xor mov push test jle out jbe test cwtl xchg lea data16 adc xchg insl xchg in xchg movabs movabs jae or rex.WRXB xchg outsl jmp mov jbe iret mov add std movabs pop xchg or push in (bad) jns mov mov es (bad) out cmpsl inc and sbb mov mov sub sub (bad) cmpsl mov (bad) test nop (bad) rex.WRXB rex.WX sbb rex.WRB cmpsl pop pop pop (bad) pushq rex.WX mov rex.W mov (bad) xchg movdqa push xchg add xchg or xor jae movslq add xor cmpsb rex.WB sub fisttpll lahf (bad) cmp (bad) mov adc data16 or loope mov pop movsl gs rcrb or xchg test rex.RB es (bad) jp (bad) mov mov shrl (bad) xor rcll movabs mov pop xor (bad) fstpl jbe rex.WRXB (bad) rex.W cmp iret xchg xchg rolb rex adc and push xchg clc jmp cmp (bad) sti (bad) rex.RB repnz es xor roll rex.RB sbb imul pushfq (bad) jl (bad) lea or mov sub cmp popq (bad) or rex.WRX rex.WRX xchg push cmp scas jmpq (bad) sti (bad) jno adc jmp mov xchg or push outsl adc (bad) pop adc xor test loopne adc and rex.RX mov mov and sub std int3 sti loop rex.RB mov jb cmpsb sbb mov rex.WRXB rex gs mov movabs incl scas rorl jp in nop fisubr rex.X (bad) push cmp push rex.WXB lahf scas stos mov push sbb divb scas and mov cmp imul pushfq (bad) (bad) rex.B pushq rex.R sub pop insl iret rex.XB rex.WRB je push (bad) lea rex.WRXB movabs cli add (bad) adc pushq movslq (bad) rex.WRB pop (bad) jrcxz xchg pop shlb in test scas push mov (bad) outsl fwait ja data16 pushfq xchg cmpsb push xchg rex.WRXB rex.WX rex.WXB lods enterq jae (bad) sub sbb sub mov (bad) (bad) (bad) test and out jo xorl test xchg add fwait lahf xchg pushq (bad) lret jrcxz sbb (bad) in mov (bad) sahf cs (bad) xor negb movsb mov jp mov jae movsb cltd insb fimul popfq sbb nop lea in sbb movsl rex.WXB mov in xchg (bad) (bad) mov neg cmp or orl scas rex.WX notb pop xor pop adc mov xor (bad) pop movsl mov jb jbe rcl rorl lahf mov orw mov cltd imul sbb outsb hlt mov (bad) (bad) (bad) mov xchg (bad) mov (bad) fdivrs (bad) pushq (bad) callq sbb out repz (bad) movabs test je (bad) adc cmpsl ror cs add xchg cli sbbb sub mov add clc xchg rex.WRB rex.WR ds and cmpsl leaveq jnp rex.WB int int rex.B rex sub nop (bad) mov cltd int3 pop push rex add jge jl (bad) pushfq xor or insl popfq pushfq test xchg xchg (bad) jmp sub jle mov movsl out cltd add pushfq jnp (bad) fmull lret (bad) xchg mov (bad) out fiaddl xor mov popfq mov cwtl mov iret roll fnstsw pop imul cltd (bad) fcomps lods scas pop loop cmp iret (bad) leaveq idivl rex.WRB jbe imul rex.B je cli jne nop in divl jp pop sub mov add add xchg in in (bad) rex.WXB (bad) in jnp (bad) or retq (bad) je lea rcrl js (bad) in rex.WRXB je (bad) test mov pop (bad) mov xchg mov mov rex.RXB cmp je test xor (bad) pop rex.RXB add xorl in adc rex.WXB add jle nop adc cmp push stc fdivrl (bad) imul js mov (bad) decl and (bad) repz nop rex.WRB cmpsb push xchg and mov sbb cmp in insb rex.WB rex.WRXB push in stc (bad) jnp (bad) add out adc xchg jl lea rex.WRB fisttpl mov data16 (bad) mov mov fadd ja stos leaveq sbb ja rex.WXB sbb add jo fdivs rex.W outsl sbb mov mov (bad) (bad) movabs and std (bad) rex.WXB (bad) (bad) (bad) lret rex.WRB iret std leaveq ds xchg xchg sub (bad) icebp sbb xchg mull push sbbl xchg lcall jge (bad) pop insl pop cmpsb adcl mov stos sbb mov mov std fstl (bad) jne (bad) scas movabs xchg xchg stos add (bad) popfq (bad) (bad) out movslq rorl mov push sub (bad) (bad) push rex.WRB (bad) cmp es cltd pop push pop adc int3 shrl fild cmp rex.X lret rex.W pushfq ss push (bad) rex.R jp lret rex.RB xlat add popfq jns out push xchg adc (bad) repz lods rex.WB (bad) idivb (bad) pop lock add and sbb xchg sbb mov (bad) jrcxz jmpq jae rol push xchg fwait jp jno lock repz add and sahf and jp out sbb pop cmp xchg stc pushq std cmpsb lock icebp sbb lods nop mov shr mov (bad) stos retq push push jnp rcl or subl pushfq sahf cmp pop ficompl and jbe jge (bad) pushq ficom fcoms pop (bad) js jbe xchg or adc (bad) mov and fisubr push (bad) xchg adc cmp movabs xor (bad) push nop fs (bad) shl jge or iret movsl rex.WR decl sbb rex.WR rex.RX pushfq sahf pop cmpsb rex.WRX (bad) int3 xorl push sbb rex.RX scas rex.XB sbb fwait mov outsl rex.WRB in (bad) or (bad) out mov movsl sarl (bad) imul (bad) jl rex.WRB mov cld shrl adc xchg mov sahf sub movabs sub sub decb (bad) pop (bad) xor (bad) (bad) pop retq rex.WR movabs pushq mov push (bad) xchg cmp (bad) mov (bad) jne mov mov mov push lret rex.WX jns sub adc cwtl lret push xchg mov cmc mov mov rex.WX (bad) fidivrl xchg or xchg (bad) jrcxz push out or rex.WRXB jge xchg shrb callq sbbb sbb iret cld (bad) movslq xchg jo mov xor (bad) cltd or (bad) mov gs mov xchg (bad) mov decb xchg lods mov fucomi cmp cmp lods or sbb (bad) rex.WRB sub (bad) insb test and jbe xchg mov psllq xchg clc rcrl and push rex.WRB pop (bad) jnp not mov fcomps sub xchg addr32 or push pop mov or cmp (bad) mov lahf movsl mov mov int3 sbb adc cmp push pop mov or mov rex.WRB rex.WX mov addr32 jge outsl cmpsl enterq pop sub rex.WRXB lahf (bad) rex.X pop scas jb jae xor fld (bad) push lret in lea nop sbb jrcxz decl xor mov pushfq sub (bad) adc xor and mov (bad) stc mov ja test rex.WXB push (bad) mov xchg rex.RB mov lock movabs xchg (bad) fsubrs jmpq data16 jg jle int in js jne add mov sub sub lea (bad) in icebp cld jge sbb cli xchg stos add cwtl rex.XB mov paddq adc scas cmpsl sbb movabs rex.WX cmpsb (bad) mov out pushfq lahf jle shrb (bad) mov adc (bad) pop ror cmpsl jne lods xor push popfq stc rex.WR rex.RXB stos pushq pop xlat cmp pop push pushq imul data16 (bad) and rex.WRXB mov xor (bad) xchg (bad) out mov rex.RX mov mov xlat movzwl add jp (bad) rex.WRX mov rex.WRB (bad) pushfq rex.WRXB (bad) pop out stc jge or mov pop jns fisubr movslq mov sbb rex (bad) stc gs (bad) mov fmull js pop add js (bad) xchg sub cmpsb data16 rex.RX movslq scas out (bad) rex.R xchg movabs adc rex.WR xchg add add pop nop sbb out jne lahf mov rex.WRXB xlat jl mov je ja adc (bad) cld jo adc jae movabs pop jnp rcl mov rex.WRB (bad) xchg data16 fcomps divb add jg mov rcrl movabs ds sbb (bad) cmpsl (bad) (bad) repz rcrb mov (bad) out ss adc movabs in repz rex xchg add out add mov (bad) jns pop xchg jp cmp ss rorb subb xor ficom fs rclb int3 (bad) push cmpl test jns rex.XB xchg outsb push rex.WB or (bad) jno add (bad) xor movabs pop ficompl jbe jmpq (bad) rex.WR jle (bad) mov adc xlat popfq xchg movabs push sar rex.WRB rex.WRXB ds push movsb retq rex.WX mov (bad) scas or add push mov mov repz push mov xor (bad) iret rex.WR icebp popfq (bad) jbe rex.WXB push rclb mov (bad) (bad) movsb push adc xor rex.WRB out sbb add (bad) rex.WRB fcmovbe mov fstpt movsb gs jle pop rex.WX (bad) pop adc sbb cld adc callq loop jbe (bad) rex.WRB cmp (bad) and cli sarl or cmp rex.RX movslq (bad) sub sbb sahf addr32 lea lret pop rex.WRX (bad) lret notb rol rex.WR xchg gs jnp pop movabs ja (bad) ja sub rex.WR fwait sub mov (bad) (bad) cmpl jmp mov test (bad) or sahf sub movsl int nop xchg jne sbb rex.WB (bad) jge pushq movslq sbb rolb pop push rcr adcb mov pushq movsb xor (bad) add cwtl imul (bad) insb adc ja subl rorb sti xchg rex.RB leaveq retq (bad) pushfq rcll sub (bad) nop (bad) sub lahf fstps add pop and leaveq stos rex.WR cmp lret lea xchg int3 or rex.RXB rex.RXB or hlt stos movabs (bad) (bad) rex.WX push imul (bad) mov jo fucomi iret lea push xchg ror ficomp int adc (bad) or (bad) rcr (bad) punpckhdq lret mov mov mov sbb sbb lret push out or xor int3 enterq and outsb or jg rex.RB jbe add std cs rex.WRX xchg scas jle movabs jge jp (bad) rex jns int cmpsl mov insb sbb loop or push push clc movabs rex.RX add mov cmpsl (bad) sahf sub push sub and jl out or xchg add adc jns rex.RXB sbbl imul rex.WX sub insb xchg test mov rex.X pop adc cltd rex.RB cli retq shll ja sahf (bad) rex.WXB iret cmp push xchg sub (bad) (bad) cmpsb sbb sbbb xor rex.WR lret ds in stos mov push add adc (bad) cs mov fnstcw (bad) (bad) test (bad) mov cmpsb (bad) pop xor rex.X (bad) mov sbb int3 jne push retq adc push mov pop shrb jb testb outsb mov pop (bad) pushq xchg push xor std insl pushq stos repnz adc rex.WXB xor rex.WRX fwait pushq xchg rex.WXB loope repz (bad) jns mov pushq or jge mov rex.WB data16 nop imul and cmp stos cmp sbb sbb xor push movabs sub jg ficom cltd rcl xor sahf sbb sarl jge jbe iret cld stc stos loope loope scas pushfq push jbe rex.WXB and xchg lock addr32 js or xor iret jle adc jge std xchg push mov sub leaveq (bad) (bad) sub mov push cld adc pop (bad) mov rex.WXB jne lods fldl (bad) rex.WB imul sar not sbb callq or rex.WRXB push jp outsl rex.WRXB in mov je add (bad) int3 cmp mov rex.WRXB roll push and adc out jl jns mov rex.WB fwait (bad) rex.W rex.WRB rex.X rex.WR push mov mov mov out rex.WRXB xchg or loopne rex.RB stos push retq loopne and outsl lea rex.XB enterq fistp (bad) rex (bad) pushfq cld stc cli xchg sbb (bad) pop sbb pop lahf rex.WRXB jrcxz in xchg imul sub lea pop pushq fldenv gs xchg fisttpl pop addb (bad) retq rex.WX mov adc mov sahf ss adc jno rcrb rex.WRB rex.WRB or mov xor mov or push (bad) out cli push ja push adc hlt rex.W mov repz fldenv (bad) mov mov int movslq addr32 mov xor not and hlt fdiv rex.WRB rolb (bad) mov xchg rex.WRXB push insl adc jbe sub rex.X (bad) add pop push popfq jg gs ja (bad) rex.RX rex.X jns data16 jae push scas xchg and mov lods iret cmp or or mov add and (bad) adc test pop or add fldenv cld push xchg ja or fimul rex.RXB fnstcw push (bad) pop rex.WX rex.RX xor fmuls mov popfq (bad) pop (bad) stc rex.WR cwtl xchg nop sub jg sahf pop (bad) pop mov cmpsb mov pop jbe adc xchg xchg int es movabs stc rex.RX cmc (bad) (bad) ficomp jmp (bad) scas or mov xchg mov pop nop add push sbb mov orl and (bad) js (bad) mov cmp imul rex.WXB repnz (bad) scas (bad) cmpsl and fwait movsb repz rex.WRXB mov rex.RX nop push xchg (bad) rcll (bad) insl (bad) (bad) jrcxz fnstcw fiaddl rex.WR decl gs xor mov pop and (bad) mov ss xchg add push cmp lea jmpq xchg out jg rex push data16 pop shrl rex.WRB (bad) in sbb pop lock xchg andl (bad) (bad) sub xchg cmpsl jge imul jae hlt sbb or jns (bad) movabs jrcxz (bad) (bad) xorb add mov pop leaveq iret (bad) mov xor pop jmp (bad) sub movabs jae adc imul cmp insb js negl mov sti xchg jge jae rolb shll lahf (bad) lods insl mov sarl jne imul rex.WXB rcll (bad) iret ja sub (bad) (bad) int3 rex.WR fsts mov rex.RX add (bad) xchg pushq jrcxz sahf jle es mov test jmpq outsl xchg rex.WRB mov xor outsl stos cmpl mov or mov clc ja sub mov rex rex (bad) mov adc in mov xchg sbb in push (bad) adc ficomp outsl mov repz cmpl nop rex.WRXB adc rex.RXB shrl xor rex.WRXB adc shlb mov scas xor (bad) cmp sub sahf sub push rex.WRB callq (bad) jmpq (bad) fiadd (bad) jmp sahf shrb sbb (bad) rex.WX ja rex.WXB mov (bad) mov xchg xor (bad) adc stos movsb (bad) xchg cmpsb addl adc rclb and or add pop xchg cmpsl sbb mov retq push data16 imul popfq adc outsl mov icebp rex.B push insl mov imul xchg retq add data16 pushq adc (bad) lea sub test outsl imul sub (bad) in (bad) cmp movabs xchg rex.RX cltd and sti or rex.WRB mov repnz (bad) cld (bad) data16 pop xchg (bad) rex.WRB rex.RX rex.RXB mov loop popfw pushq jb mov pop and (bad) jg (bad) jnp rex.WRXB clc pop mov lea xor imul and rex.WB sahf shll lahf pop jnp (bad) and sbb rcrl sti mov addl xchg nop (bad) test cmp cli xchg addr32 out rclb repz (bad) push xchg lock (bad) jbe mov fstl xchg xchg sub mov cmp (bad) push mov (bad) push clc movsl mov pop out loop,pt rex.WRX jmp loopne xchg xor cmp xor lock movabs cmp lea jg cmp pushfq or xchg or ds rex.XB rex.WR cmpsb jbe cmc xor rex.RX (bad) ficoml pushfq pop mov push cwtl adc addr32 xchg ds pushq and mov (bad) callq cmp push or loope mov and adc or loope in xchg int3 (bad) rex.WX rex.WX movabs jle add cmpsl rol mov xchg cmovo iret rex.WXB mov (bad) sahf int mov adc rex.WX cmp pop jne callq xchg add leaveq rex.XB fwait int3 mov icebp cmc (bad) (bad) jge movslq adc fdiv (bad) cld jmp xor sub (bad) xchg outsl cmpsl jbe orb negb retq jno pop xchg movabs test rex.R faddp imul adc retq jo (bad) notl in xchg cmp jbe (bad) fnstcw (bad) mov sahf sbb jno mov mov retq (bad) mov sahf adc pop push push xor sub scas rex.WR mov ja (bad) decb movabs (bad) rex.WB (bad) mov testb icebp (bad) (bad) lret (bad) (bad) je push std addl (bad) movsl jmp xchg cmp rolb (bad) cmp pop (bad) mov push rex.RX (bad) (bad) xchg jbe sub pop push (bad) mov out jae mov std (bad) out cli (bad) or mov repz fistpll (bad) loop loop (bad) rex.R cmp (bad) sub sbb (bad) out nop out mov mov xchg jle (bad) cs xchg sahf xchg cwtl adc stos mov jnp sarl (bad) cmpsb add push (bad) mov cmp xchg imul rex.RX (bad) xchg sub fwait xchg cwtl jbe repnz imul add retq pop xor movslq adc fstpl push adc rex.WRXB sub jo sub xchg (bad) xchg xchg pop (bad) jg movabs jae outsl std enterq fnop xchg nop sbb lret push (bad) xor gs stos gs cmc add push shr loope in (bad) (bad) out sbb rex.RX clc rex.WRX adc ss rex.RXB std out xchg sbb sub (bad) cs or mov sbb jb (bad) std mov (bad) (bad) cwtl clc in (bad) cmp xacquire xchg mov jl jmpq lret push mov rex pushq rex.RXB push cltd rex.WRX xchg stc and movabs xchg xchg mov hlt add jl mov cltd xlat xor (bad) mov repz or rex.RB cmp (bad) testl rex.WRB pushfq mov pushq std fildll jp stc std callq sub mov (bad) data16 (bad) sbb (bad) adc pop adc ss (bad) (bad) (bad) jnp gs rex.R sahf pushfq cli xlat (bad) nop shl rex.WX mov rex.RXB cmp and movabs mov pushfq mov rclb popfq xor or sub pop cwtl data16 jbe and ss (bad) add (bad) jmp (bad) or jle cmp pop jae (bad) mov (bad) (bad) xchg testl lods rex.B (bad) push mov pop (bad) sbb test (bad) fild sub rex.WB addr32 mov icebp sub rex jge rex.WRB fldl fsubl jp repz xchg adc lcall movsl outsb push sbb (bad) mov sbb rolb popfq cmp in sahf pushfq (bad) imul xchg in (bad) ds pop pop mov (bad) push fwait subl add es mov sub iret loopne (bad) (bad) push (bad) in sub gs pop xchg (bad) xlat (bad) cli xor xor lea mov or rex.WXB xchg push pcmpeqw (bad) orl movsb stc jrcxz (bad) rex.WB (bad) add pushq fisub jg rex.WRXB (bad) and lahf mov mov sub (bad) mov int3 gs sti or pop (bad) cmpb jmp add mov imul jle add sbb cmp adc xor scas jbe movabs (bad) sub movsb xor mov (bad) jrcxz std (bad) sub roll mov cwtl xchg push mov push xor (bad) mov (bad) (bad) xchg test xchg pop (bad) (bad) mov repnz sub sbb hlt mov mov ds (bad) movabs (bad) sub mov test xchg xchg xchg movslq and xor adc subb rex.RX xchg out (bad) (bad) pop cwtl adc cmp (bad) movsb in jbe fsubs scas mov leaveq popq push xchg xchg mov movabs (bad) lock (bad) or xlat (bad) lods retq gs scas add mov mov mov pushq je rex.WX scas jnp jb add and rex.WR jae adc mov (bad) (bad) xor cwtl out mov add xchg rex.X jno sbb (bad) (bad) xor push cmp cmc sbb sub shrb add mov mov (bad) rex.XB or mov add data16 mov pop push cwtl stos cmp (bad) rex.WRB xchg xchg (bad) cmpsl divb in mov outsl or pushfq push out gs rex.WX data16 out pop rex.RX jmp lods adc jle add fadds and (bad) div mov nop adc shlb (bad) jo rex.WR iret imul (bad) movsl jg es mov rex.RXB push xchg out icebp jmp (bad) ds pop imul xchg cmp negb int xchg xchg adc mov and lss rex.WB fistp xor add adc (bad) jmpq ss sub or scas adc (bad) mov rex.WR stc sub mov rex.WB packssdw mov callq int3 pushq movb (bad) xor xchg mov push (bad) pop push sbb jb clc retq mov movabs retq xor mov adc sub sbb fstl repnz add stc lret je pop xlat (bad) xor rex.WRB jne (bad) rex.WX (bad) (bad) cmp lods cwtl scas hlt or cld rex.RB rex.RB sbb or jbe icebp and jb mov gs or retq movsb movabs xchg and cli jne xchg or test xchg rex.RX mov xchg mov cmpb (bad) (bad) lret add cmpsl es js (bad) jae (bad) xchg rorl adc sbb fwait addr32 insb (bad) stos stos (bad) cmp or in iret cmp xchg fcompl movabs mov rex.WX rex.WRXB xchg (bad) adcl pop (bad) xchg mov movsb xchg or and imul pop sbb xchg (bad) jmp rex.W outsb jrcxz xchg (bad) sarb cs push rcll cwtl mov (bad) mov rex js (bad) retq jae xchg test xchg sub adc out mov or and cwtl fdivl jl pop or es cmp and xor (bad) fiaddl or rex mov movsl sti ffree xchg fsts mov (bad) rex.WRB cmp sahf push or callq ror rex.WXB cmpsl (bad) cmc (bad) lret lahf (bad) ja mov int3 xchg mov mov mov cmpsb movabs (bad) mov pushfq retq add mov add sbb icebp (bad) test shrb mov callq popfq cmp pop xchg add push nop or sahf push mov loope cmp sub (bad) bnd xchg jrcxz loopne mov push xlat xchg push std not mov test enterq and rex.X and (bad) movslq (bad) lea sti divl and add repz sub sahf jae rex.XB popfq push cmp movabs scas (bad) pushfq lea sti mov rex.RX cwtl rex.WB mov vpunpcklwd push jo not mov cmpsl ja (bad) rex.WB add movslq sub xor push test cs or (bad) adc mov push sahf rex.XB retq xchg add (bad) jmp shr rex.WRX bnd mov mov cmpsl (bad) xchg (bad) lods (bad) (bad) sub sbbl rex.WR clc xlat adcb rex fs test retq mov rex.WX mov ljmp mov lods outsb lock rex.WRX xlat sbb jnp (bad) xor mov rex push mov xor addr32 pop loop sbb rex.WX pushq adc jns pop jb adc (bad) sbb xchg cmp jo xlat lret (bad) adc movabs sbb cli lods adc xchg neg pop fwait jl mov lods loope adc cmp push (bad) cltd pop cmp jmp lea nop or jae xchg xchg xor mov xchg popfq pop adcl movabs (bad) mov orl outsb (bad) mov jrcxz (bad) rex.WXB (bad) lock repnz (bad) loop (bad) retq fs mov lret adc jns shrl jge jmp mov push (bad) fs (bad) (bad) insl (bad) in or pop test repnz cmp mov sub (bad) movabs pop fldenv std negl mov mov jrcxz add add popfq rex.RX out int adc (bad) cmp sub stc (bad) sahf gs rex.WRB xrelease movabs push mov xchg jae (bad) (bad) imull in scas lret pop rex.X pop jge push (bad) cmp fildll xchg imul cld mov jns sbb (bad) mov addr32 test cmpsl mov movabs lret in jbe and (bad) enterq cli es rex in xchg mov jge push rex.WB hlt sahf fwait popfq mov (bad) jae xchg jo (bad) add (bad) lahf js nop in mov imul adc (bad) (bad) fnop (bad) (bad) rex.W mov rex.WRXB mov out icebp fildll in mov cmp xchg cltd and outsl lods popfq fmul xor retq (bad) push lock jge xchg jno lods mov or pop mov stos out callq (bad) sub hlt xor add pop (bad) shll lods mov (bad) (bad) xor pop rex.WRX adc push test cld movsb jmpq fwait xor or add mov scas (bad) jg lods pushq movabs cmp mov add jp mov add and push repz rex.X xchg mov pop jg jns jbe xor outsl sub lock iret or cltd out pop test std popfq xchg out cwtl push movabs mov add ds rcr out in rex.RXB ficom rex.WRXB pop adc sub callq sub pushfq loopne jb mov (bad) loop xchg repnz movabs (bad) xor cs pushq jo scas pop and retq cmp lret jne (bad) add (bad) out xlat xchg and (bad) pushfq add and push cld mov xchg (bad) ljmp movsb mov mov lea clc xor mov stos xchg out loope mov rex.WRX callq sub (bad) adc lea (bad) std sbb sub shrl cmp (bad) frstor xor mov or enterq push or movabs cmp add scas xchg push jo,pt or fs xchg (bad) nop adc loope xchg (bad) idivl fbld shrb sti in or insl jmp (bad) scas (bad) push push out xchg (bad) pop fcompl out xchg imul imul (bad) mov and mov lods add lcall xchg test (bad) rcrl sub mov rex.B sbb push (bad) mov out (bad) mov es mov or fnsave icebp xchg insl outsl cmpsb loopne adc xlat (bad) sub xor and fwait xor mov push nop (bad) rex.B xchg adc mov ja adc (bad) push mov jmp xor xor outsl je or sub ja xlat pop xchg rex.XB vpsrlw lahf cmc (bad) jnp xlat scas lock test outsb popfq ffree jns push nop jge loope cmpb sahf or mov (bad) mov gs adc xor and (bad) addr32 adc shll push xchg imul pop xchg fisttp scas mov (bad) and xor jle (bad) adc jbe (bad) js pop fidivl (bad) pop loopne iret ja mov xor divl rex.WB xor mov sbb rex.WRB mov (bad) rex.RB rex.R sub rex.XB (bad) sahf loopne insb pushfq (bad) xchg or mov xchg (bad) cmpsb ljmp xchg adc xchg movabs (bad) (bad) roll jmp mov rex.WRX (bad) jmp outsb sub adc xchg movabs or xor divb fldt lret test cs pop xchg (bad) adc xchg pop mov sbb mov fnstsw rex.WRB (bad) cwtl or pop icebp (bad) sti rex.WRX stc (bad) push mov leaveq cmovg shrl imul ds xor mov add repz xchg mov cmova mov rorb retq insb cmp sbb jae lahf ficom xchg pushfq sbb xchg mov (bad) out mov cmp cltd pop pushfq repz xchg mov (bad) sbb decb adc cmpsl adc xlat xor jo mov (bad) leaveq mov mov sub fsubl ja pushq fbstp movabs xchg (bad) icebp xor mov xor xlat xorl sbb jae (bad) divl xor rex.X mov (bad) shrl ja jge popfq xchg imul addr32 fistp iret xchg xor lret xchg xchg movslq outsl negl fisubr (bad) fnstcw out mov (bad) (bad) pop (bad) (bad) mov mov gs xchg sbb mov (bad) (bad) lret iret (bad) fsubr out adc sarb adc (bad) addr32 orl iret outsb (bad) rex.RXB jg int cmpsl xorl (bad) shrl mov rex.RXB fsubrs mov rorl mov mov addr32 lock sub rex.WRB lods int repnz xor mov cmp (bad) jg callq (bad) imul shrb movslq pop icebp rex.RXB insb out rex.RB popq outsl cmp (bad) (bad) cmp (bad) xchg mov movslq add fcomip or push (bad) xor repnz test mov out jg addr32 add mov addr32 (bad) jo and jo rex.RB rex.RXB (bad) sbb pop mov add xlat scas imul loope out add (bad) mov outsb (bad) mov (bad) (bad) (bad) sub xchg repnz incb sbbl int3 lahf movsb out lret (bad) (bad) mov add fild (bad) addr32 sub push rex.B shl (bad) (bad) sub (bad) repnz mov repnz mov cmpsl xor (bad) and hlt (bad) out test (bad) push scas (bad) fs mov (bad) out xor scas insb leaveq (bad) xchg push idivl xchg out (bad) (bad) decl out ja fild (bad) int3 cmpsl (bad) pop cmp push (bad) repz nop out sarb fdivl rorb mov or rex.WRXB stos (bad) (bad) addr32 scas jg outsb sarb addr32 (bad) (bad) xor loop addl mov (bad) cmp jp (bad) repnz mov ja repz out out pinsrw mov fs xchg push fbstp xchg loope xchg cmp mov adcb mov out sahf adc hlt or jg rex.W rcrb (bad) popq fisttpl cmp lret std mov shll mov xchg leaveq and insb popfq jo jbe and cmp pop ficom fstpl out pop cwtl in mov nop movlps int3 adc pop jbe add sub xor nop sbb jg cmp std nop adc (bad) rex.X imul mov (bad) adc loope (bad) jmp adc (bad) jbe xchg cltd shrl pop lods (bad) in fstl loop cmp adc jbe in int mov cmp (bad) sub xchg lods outsl mov imul mov outsl (bad) jo sub rcrb sub fbld cwtl retq lock leaveq cmp movslq movabs mov sbb cltd (bad) in sbb (bad) stc fbld xor sub jmp cmpsl or pop mov movabs mov popfq sahf sbb (bad) loope int stc mov nop jrcxz jmp movslq ror jrcxz mov xor iret out xchg (bad) (bad) movsb xlat maxps idiv and movabs pop rex.X sbb xchg mov cmp lret add lret jrcxz scas (bad) in fildl (bad) rex.XB pop (bad) outsl adc sub (bad) (bad) or push pop pop adc mov movslq rex.WRX popfq and fisub loop sahf jl cmp (bad) pop xchg out rcll jmpq sub xchg pop or rex.WX (bad) push mov int adc popfq clc jmpq cmc popfq insl movabs cmpsl rorl xorl mov (bad) pop cmp xchg push sysret or (bad) pop sub out rex.B insl pop sub cmpsb (bad) pushfq rex.WRX fidivr (bad) (bad) add popfq rorl movsb shl pop sub cwtl cmp (bad) (bad) xchg mov mov loope mov (bad) out (bad) sub xchg jge imul pushfq jmp or rex.RX pop mov fistl (bad) movabs sub lahf xchg jbe jrcxz scas jmp mov (bad) lcall rex.WRX loop jp movabs loope mov out data16 xchg pushq (bad) loopne mov in push movslq (bad) xchg cmp xchg ja lahf cmp rep mov xchg (bad) rex.WRXB xchg sub stos rol fldt pushfq xchg mov xor mov jg iret or sub (bad) ud1 pop movabs (bad) dec xor push xchg (bad) (bad) sti int3 gs retw (bad) add test adc cmc (bad) (bad) fistp es sub rex.X lods xchg add jle,pn cltd mov mov push cmc cmpb cmpsl or shll adc movslq callq pop retq std je in mov jno sub sahf cmp repz fsubrl (bad) jp addr32 repnz fwait (bad) js mov cs xor xor int cwtl movabs sbb in jge nop scas push lods cld (bad) cli and scas data16 xchg (bad) (bad) cmp mov int xchg (bad) mov mov pop lret addr32 sahf (bad) cmpsb gs (bad) iret add xchg mov test scas cmpl mov sub iret callq pushfq cld mov sub sbbl xchg popfq adc jge popq cmpsb jnp fildll insb test rex.WRXB jg adc sub xchg stos (bad) pop mov mov add sbb pop mov jg fisttp mov (bad) leaveq test loopne rex out or ja icebp xchg cmp cmp pushfq mov xchg pop outsb (bad) adc pop outsl jb loop xchg retq insb xchg andl cmp ja (bad) push pop out mov xchg rex.WXB (bad) add (bad) mov fnop add mov test (bad) lods jmp bswap shrb cmp movabs jle sbb mov lock xchg cmp (bad) (bad) (bad) rex.R cmpsb lahf int3 xchg rex.WRB cwtl shrl rex.RXB cmpsb xchg clc adc movslq popfq jle loope add (bad) stos movabs js xchg lea (bad) sub sahf push (bad) and cli hlt or movabs sbb mov and lods and (bad) in scas xlat xchg sbb xchg out movabs push cmpl sub push (bad) cmpsl imul (bad) (bad) rex.WRB cmpsl xchg (bad) fcoms retq mov mov adc or xchg test cmp xchg rex.WXB js mov (bad) mov mov mov repz sub movsb insb rex.WXB data16 rex.RB fwait and jl movabs jb enterq mov adc jl xchg (bad) push rex.WXB rex.WRB rex.X xchg movsl adc push rex.WXB xor push gs xchg xadd rcll adcl cmp lahf xlat and retq insb pop mov mov rcrl xchg test sbb xchg movabs push out mov sti xchg mov rcl jns movabs (bad) (bad) in jl xor xchg and fildll outsb xor (bad) mov movabs retq jle sub cmpsb mov xchg (bad) mov es int fsts test or sahf sbb xor fidivrl mov mov (bad) or adc (bad) cbtw rex.WR xchg js imul rex.W lock rex.RB lods sbb lock (bad) (bad) insb rex.WX movsb loope sbb pushfq out mov or (bad) rex.WXB (bad) cwtl pop mov out rclb int3 mov jmpq nop (bad) pop es xchg movabs orb mov loope (bad) js mov mov xchg mov popfq (bad) es jrcxz rex.WRX repz mov xor jns sub xchg movabs cwtl cli mov jmp movabs cmp xchg push int lret or xchg fdivl sbb jno sbb rex.RXB rex.W add push jle xlat or scas (bad) sbb (bad) pushq (bad) jmp mov (bad) mov add stos adc jg (bad) pop xorl gs mov or pushq pop xor pop (bad) fisubl cltd lea jmpq cmc vmovshdup rex.XB sbb (bad) mov xor insb pop xchg rcrl mov jno pop lret xor loopne hlt sub xor and mov (bad) repnz add andl mov (bad) jge (bad) pushfq cmp adcl cltd ds pushq (bad) (bad) movsb adc rex.RX adc mov (bad) push subl fidivr retq jne (bad) (bad) cmp int3 outsl xchg pushfq adc retq xchg (bad) pop repz sbb or pushq jae cltd xchg mov out or popfq xchg (bad) cltd cwtl (bad) xchg or rex.WB gs jmp push cltd xchg (bad) jo cmp in rex.WXB add (bad) mov mov insl rorb ja retq cmp enterq cmp movslq (bad) rol stc (bad) (bad) push rex cli sbb (bad) jo and mov test cltd enterq loopne (bad) sub mov mov xchg xchg je pushfq rex.WRXB shrd iret (bad) cmc pop (bad) xchg (bad) leaveq push (bad) rex.X add pop andl fs outsb ds rex.WRX xor cmpsl popfq pop or sub adcb rolb cmp mov sahf (bad) jo (bad) clc xchg adc mov xchg jne xchg mul sub jae (bad) cli imul cmp fs (bad) xchg (bad) pop je (bad) in pushq xchg movabs test xchg fs rex.WR jge push sbb rolb mov sub pop xor xchg rex.WXB jns mov divl mov (bad) push jge jg add jne cmp xchg mov sbb (bad) (bad) mov cmp add rex.WRX xor scas movabs enterq retw loopne js andnps jb mov fsubrs xor mov xchg cmp (bad) sub (bad) in jrcxz (bad) jae jle movsb rolb in pushfq lods cwtl sub int3 fstpl movl add pop or insl adc in mov and sub sbb mov test in xlat scas fist insl pop cltd js mov (bad) rex.WXB sub addr32 negl sti test xor rex.RB mov pushfq mov (bad) (bad) rex.WB test outsb popq mov (bad) mov (bad) add xor adc mov popfq lahf fwait repnz jl out rex.RB rex.WXB rex.WR mulb pop pop (bad) fcompl sbb subl rex.WRX (bad) jrcxz or jnp popfq (bad) mov jp (bad) pop adc (bad) cwtl xchg sub hlt nop sahf test ror (bad) add adc rex sbb jo shrb cmc (bad) mov test rex.B rex.RXB xchg (bad) xchg (bad) in fisubr and shlb je nop mov fbstp pop mov loopne mov sub in jrcxz jb bt rex.W add out or jge rcrb jle xor rorb (bad) sahf jmp (bad) jp adc (bad) rex.RX (bad) sub or (bad) sbb jge nop int3 sub pop cmp loop mov stos (bad) dec test push mov adc xchg fs pop mov adc nop (bad) ds xchg xchg pop add pop add push (bad) mov (bad) sub adc (bad) repz xor div mov (bad) imul xchg pop xchg add outsb xchg xchg sbb jb mov sbb (bad) fsubrs (bad) mov in ds enterq rex sub xlat sbb and (bad) jge lods jmp jmp movabs mov (bad) xchg (bad) mov jb mov push cmp gs iret lret leaveq xchg idiv lea fdivp rolb rex.X and shrb jp rex.W cwtl adc (bad) rex.RXB push (bad) iret loopne (bad) mov (bad) and sub push fisttpl cwtl (bad) mov gs rex.RXB sbb and jno mov out jrcxz adc cmp cltd (bad) (bad) rex.WR rex.XB (bad) xchg push cmc movabs (bad) add jge sub jle cmp xchg and jge loopne (bad) xchg vmaxps iret push (bad) add hlt rex.WRXB fs (bad) sahf mov push mov sbb sbb pop rex.WRXB jle xchg (bad) sub sub rex.WR cmp repz imul scas movsb pop xor fwait ds pop add mov jle sahf (bad) lcall or movabs subb xlat mov fwait subb mov cmpsb loopne movabs retq sub jle xchg (bad) jae rex.WRXB add sbb movabs or mov rex.WRB cmp retq xor pop xchg xor insl in mov or ficom and sahf pop xchg mov adc add (bad) movabs clc callq insb clc xor pushq sbb jmp pop sti shrb (bad) mov mov retq and (bad) iret adc xchg movabs nop lret rex.RXB or add clc jmp (bad) (bad) lahf mov (bad) (bad) jns rex.RXB ss xchg xchg cli (bad) gs pinsrw add pop sbb mov jg fmul adc mov xlat and mov popfq fstl pushfq (bad) cmp jrcxz adc push or xchg cmpsl clc push mov mov fucom mov or (bad) (bad) sbb cmp (bad) fcoml ficom orl (bad) xchg shll xor test shrb xchg movabs scas cmc rex.RXB xchg out jmpq (bad) cltd and xchg (bad) out loope xchg repnz or cmp adc int rex.R xor sti gs (bad) mov test enterq xchg fstps movabs adc xor rex.B (bad) retq pop idivl cmp jg pop add cmp fcmove outsl (bad) rex.RXB xchg (bad) popfq fidivr (bad) lods xor adc push gs add stc movslq mov mov xchg cmp jmp xchg (bad) xchg clc nop rex.RB xor incl fisubl xorl pushq (bad) (bad) pop insl mov stos movabs sarl lret and fistl mov (bad) xor push outsb (bad) push mov movsl mov andl pushq popfq cwtl mov (bad) ja mov xchg shl (bad) and movabs (bad) std xor jae mov cmp rex.WR rex.WB push and xchg mov xchg lret or xor rex.WX rex.WRXB roll or rex.WXB (bad) iret (bad) enterq xchg or add jg cmp xchg movabs imul (bad) pushq movslq (bad) (bad) push adc mov (bad) lods add xchg cwtl sub popfq mov cmpl mov (bad) xor add orl pushq push je add fwait (bad) lods sub rolb in movsb rex.WRXB (bad) mov shrb sbb rex.WRX xchg cmp icebp leaveq sub mov test add mov jmp (bad) std jo pushq sub movabs lret mov lea sub mov jg (bad) pushq sbb (bad) fwait pop vmaxsd (bad) rol (bad) sub nop adc (bad) es pop cmpsb test xchg je (bad) (bad) jmp lods push add pop jne pop nop adc (bad) pop lahf stos (bad) and sbb test fsubrl pop imul (bad) jbe (bad) lea mov (bad) nop (bad) (bad) icebp adc jmpq iret (bad) rex.W push xchg or jge (bad) jnp cmp loope jbe sar fisttp nop sbb mov (bad) faddl rcrb jns loope (bad) rex.R (bad) mov (bad) mov cwtl jnp or ss loopne mov fwait int (bad) (bad) scas nop adc lret rcll (bad) incl or jno loop out rex.RB pop sbb or mov repnz (bad) adc movsl outsl rcr jne push (bad) (bad) pushq mov jbe,pn (bad) (bad) rex.WRB sahf mov push es je (bad) adc js roll cmp pop nop adc cmp rex.RX fwait sbb test in jbe pop pushfq lods psrad add cwtl movsl add xchg out mov (bad) (bad) xchg in cmpsl xchg sub rorl mov es insl push xor data16 and movabs mov mov loope lret cltd xchg jmpq lret adc fcmovnu mov int3 pushfq lahf xor fs outsl movsb lret pop xchg jmpq in test (bad) imul insl (bad) xchg xchg lods out (bad) movsl jb in movslq getsec rex.WB lock mov (bad) sbb sbb xchg jg lods xor add movsb push (bad) je fwait pop and popfq adc stos xor (bad) (bad) vrsqrtps jae stos movslq (bad) xchg mov cmp rex.WRX rex.RX xchg insl pushq sub (bad) addr32 (bad) (bad) xchg movabs fbld (bad) or mov in divb ja (bad) fcomps cmc add cs mov xor pop stos mov (bad) push test xchg sti mov stos cmp lahf movsl add movabs jp (bad) rclb mov xchg shll mov pop jnp test orb xchg rolb sub fstp xchg mov outsb (bad) pop sbb xchg (bad) cmp and adcl push mov (bad) xor sbb (bad) jnp vpmulhw and cmp xchg lahf orl (bad) push movslq imul jae out (bad) (bad) (bad) push lretw rex.WRXB add iret cmp mov add in xchg callq (bad) cmp vunpckhpd mov rex.WXB out callq rolb (bad) xchg test in cs pop (bad) rex.WRB shrl mov (bad) in xchg subl psrlq rex.X loop js loopne (bad) icebp mov sti cmpsl rex.WB scas rclb mov (bad) xchg adc cmp add (bad) pop gs xlat rex cli xchg enterq fwait sarl xchg mov imul sar sub or xchg push (bad) add sub push addr32 outsb mov adc sbb rex.WRX seta (bad) fucom callq hlt cmp lret addr32 (bad) mov mov out ds jns or xchg jge (bad) nop jrcxz imul sbb (bad) fisttp or callq in mov and pop imull xchg add rex.RX pop loop mov scas add movabs (bad) (bad) in adc mov pop roll xor cwtl (bad) rex.RX jae,pn (bad) divl in xor and or popfq repnz mov sbb rex.XB leaveq xchg stos cmp (bad) out ss sbb xor push or xchg jae cwtl rex.WRXB stos adc ja (bad) rex.RB in xchg (bad) xchg xlat movslq mov and jnp jmpq xchg (bad) mov (bad) jns divl (bad) add fstps (bad) scas push mov out add loope sbb lret and (bad) movsb data16 and rex.WRB adc add sub xchg cld (bad) sbb cmp push insl sahf and callq in add or rex.RB in mov sahf verw fisub (bad) popfq (bad) popfq (bad) in add mull seta mov sub rex.RX push rex.RXB rex rclb cmc ss xchg out mov sahf rex.WRB in callq xlat sbb pop jle (bad) sbb xchg xchg rex.W push sarb cmpsb cs rex.WRX add jbe cmpsb mov jmp rex.XB rex.WRXB lahf lahf xchg adc lahf pop (bad) push data16 xlat and stos adc (bad) xchg mov movabs lea pop and xor rex.W cwtl add rex.X cltd xchg out nop loope fldcw mov imul out or mov pushfq sbb repz and rex.WB rex.XB add xchg (bad) jbe (bad) (bad) lods jne mov mov jnp sub sbb (bad) pop push (bad) xchg movabs and sub (bad) out mov (bad) jae cld mov sub lret push or jbe sbb fisttpll (bad) cwtl popfq sub pop rex.B (bad) movsl lea mov and in std cmp rex.RX mov xchg sub jrcxz mov adcl push shrl lock cmp xchg jrcxz shlb adc cltd mov addr32 sbb icebp fidivr mov loope push (bad) leaveq adc xor loop push test lret (bad) jge adc rolb jne sbb (bad) mov movslq out js ficoml imull jg add scas loope xchg fdivs xchg not push (bad) lret popfq rex.W rex.WR rex.WRXB xchg (bad) pop push xor sbb mov cmp (bad) in rolb pushfq (bad) movsb cmc push cs cmpsb (bad) or mov (bad) iret hlt xchg pop lock lahf (bad) (bad) shrb test cmp sub xchg or rex.RB (bad) (bad) jae in movslq shr cmpsb adc movsb sti jp xchg pop pop add subl ds jg imull clc sarl (bad) pop sbb jg jle sub cltd (bad) sbb sbb sbb pop iret cwtd xchg cwtl adc jg ja xchg callq mov xchg adc mov pop mov or data16 movabs notb (bad) mov add imull add xchg je adc in mov imulb rcr xchg out pop cwtl mov cs sbb loope pop icebp xchg int3 outsb add pushfq xchg jmpq fcoml movabs mov jo outsl lahf xchg jrcxz jp movabs imul jbe xchg mov ja rex.WRB callq add xchg xchg jmp rex.RXB rex.WRX (bad) (bad) xchg movslq sarb pop xchg pop out cmp rex.RB xor sbb not sub retq sahf lods xchg movabs mov out lret sbb fidivl or movsb lock sbb mov callq xchg callq sbb rcrb add rex.RX ljmp pop xchg or outsb cmpsb mov loopne mov roll out xchg rex.WXB mov cmp (bad) xchg movabs xchg pop ja mov xchg sbb (bad) rex.RXB data16 mov imul retq pop (bad) in cmp div (bad) lea rex.RX cmp xchg jae cltd cmpsl xchg es (bad) data16 lock lea push (bad) xor xlat rex.WX push xchg xor pop stos xor mov (bad) out (bad) sti jae adc jne mov shr ficompl je stos pop fsts sbb retq cld add lods xchg pushfq xor (bad) mov in sbb pop fidivl mov sub (bad) xchg or sahf xor and gs movsb (bad) (bad) adc lock pop adc pushq xchg callq lods add xchg sahf es pop popfq jbe (bad) rex mov ds addr32 idivl jge rex.WXB mull je (bad) xchg test retq popfq cmp movabs jno mov adc hlt jo test xchg pop out sub rol (bad) sbb mov fs mov adc jg out enterq and (bad) jae mov mov cltd sub sti not and orb out xchg mov push leaveq rex.WX int3 (bad) outsl cmp movabs pushfq fnstenv (bad) (bad) subl loope movabs fsts xor (bad) or fstl int3 pop jbe rex.X xchg lahf imul xchg rex.WX cmp lret in sbbl push add xorl (bad) (bad) xchg retq ds sbb int push xchg (bad) (bad) (bad) sub adc sbbl sbb push mov (bad) jae mov in jb mov cmp (bad) (bad) add sbb pop xchg (bad) scas mov (bad) mov cs xlat xchg movsb push (bad) sbbl movabs fsubrs out cmp adc shr jp divl sub cmp or add rorb (bad) push (bad) adc jrcxz or jns fiadd xchg adc (bad) in mov jmp mov jmpq ds mov mov xorb mul xchg sub cmpsl loope xchg xchg imul and xlat fmull cltd (bad) jo (bad) rex.B or and xchg jg test rex.R idivb cmp and xchg fadd jrcxz sbbl imul (bad) outsb jle add fadd jp jnp sarl movabs mov sub (bad) in sub sbb nop stos clc pop (bad) pushq and mov jae insb xor fild (bad) jg ds xor leaveq (bad) add add xor mov pop callq mov roll js mov rex.W sbb adc (bad) addr32 and mov callq popfq mov adc xchg fwait (bad) divl xchg sub int std rex.WRXB (bad) (bad) sbb xchg xchg (bad) ror xchg lret fisttpll scas jo and movabs jbe mov adc insb mov adc rex.WRB pushfq xchg imul (bad) (bad) (bad) or pop (bad) lret and xor pop frstor orl push in jge mov callq xchg imul pop xchg cmp cltd mov sub (bad) sti es mov xlat mov (bad) pop (bad) push (bad) push out xlat cltd mov test callq add cli leaveq addr32 std push xor rex.WRX cs pushq (bad) rex.WRXB (bad) push rex.WXB lea cmp rex.W pop push fsts vsubpd loopne pushfq fnstenv sahf or cli insb (bad) adc cmovo mov (bad) mov jmp sbb and (bad) jmp sahf movabs cmp sbbb lea imul sub mov cltd mov stos (bad) xchg enterq mov test rex.WRXB cli xchg std cmp adc sbb es outsl lock pop faddp movsb and xchg stos addr32 (bad) movsl mov out rex.WXB mov xchg sbb add xor cmp mov push mov (bad) data16 fstl sub or cmp test jo rex.WXB out (bad) movabs xchg mov sbb xchg and addb in sarb xchg (bad) test (bad) mov mov (bad) sub or mov add (bad) mov clc (bad) pop movabs lret in movslq jbe imul lahf rex (bad) rex.WR rex.WRB mov jmp jbe push cmp repz (bad) xor jne movsl sarl fwait push xor repnz or data16 sahf push mov fs pextrw sub (bad) rex.WRB push or jb add lock int (bad) lea and std xor fidiv test xor (bad) (bad) rex.RXB jb sub fwait adc mov rex.WXB jbe xor cmp loope xchg incl out add (bad) jnp xchg callq jbe push add callq repnz (bad) mov (bad) add and mov inc test shlb pushq add sub adc and outsb lea cmpsl fwait or lahf cld sar pop movsb jmpq fstl jb xchg mov (bad) pop leaveq mov sahf cmpsb cmp (bad) pushq callq adc xor sub cmpl insb pop imul sbbl rex.WR (bad) or add movsl and icebp (bad) (bad) stc push add lods cmp iret pop sbb (bad) rex.WXB rex.XB cmp loop jbe (bad) retq pop addr32 popfq scas sbb iret callq or adc xchg ja sub lea int out pushfq in (bad) xlat adc mov sub mov xlat jae,pn popfq es in (bad) adc (bad) jae xor rex.WB (bad) idivb insb (bad) xchg push or rcrb xchg rex.RXB jno push ja out and (bad) stos test jo int mov mov imul (bad) movabs or insb add xlat cltd outsb imul orl out insl cwtl or (bad) retq incb ja add ja jbe lret mov push cli jrcxz push mov mov jo addr32 pop cmp mov repz mov (bad) xchg rex.W jmpq cs mov jno pop xor cwtl push xchg mov mov fistpl retq jno ficompl sbb out jo cmp shrb (bad) mov loopne rex.WXB pop rex.X jl jne jp (bad) repnz cmp retq (bad) lea mov insb sahf mov (bad) sub movabs jmp rex.WRB mov gs (bad) jne sub lea jne xor push subl setge pop mov enterq pushq add mov jne iretw push fs mov (bad) jmp movabs sbb cld xor jae add cmpsl frstor adc pop xchg or jb mov mov callq push push xor fs xchg add sbb sbb movabs adc int or xchg imull imul xlat (bad) cmp clc rclb and imulb adc (bad) xlat in adc insl jbe mov jmp movabs or data16 rex.RB lods frstor fsubr out subl add fnstenv out (bad) (bad) sahf (bad) xor push sbb (bad) repz pop mov mov mov rex.WXB push jmp xchg (bad) and push sbb popfq jns movabs rex.XB (bad) sbb mov test cmpsb rex.WB ficom (bad) mov (bad) (bad) loopne sahf or xlat (bad) rex.RB (bad) (bad) lods and addr32 nop adc jmpq fs iret (bad) xchg rex.B cs xor (bad) xor push xchg lods popfq fidivr xor mov rex.B (bad) mov mov adc sahf ds add (bad) pop movabs cmp cmpsb cmp push xchg rclb insl cmp sti std sarl in rex.RXB movl movl (bad) (bad) (bad) in (bad) cwtl jbe subl stc xchg mov and rex.W and or fcmovbe cmp adc (bad) (bad) (bad) sub jmp out mov mov sbb nop rex.RX sahf sub mov sbb pop jae xchg sbb (bad) (bad) sbb adc addb pop cmp std cmpsl (bad) (bad) xchg (bad) lret lret mov (bad) lods loope mov mov stc sbb (bad) add rex.WXB xchg cmpsb rex.WX mov xchg ja xchg ss (bad) xor movabs (bad) jmpq (bad) push (bad) pop pop jg pop popfq fdivrs jns and mov insl cmp lret in int (bad) or (bad) mov xchg cmpsb insb fisubr xchg rex.X and push add divl idivl imul bndldx jnp rex.R rex (bad) (bad) rsqrtps xlat adc sub je sahf out loope jnp (bad) fs mov (bad) mov mov xor sbb (bad) sti lahf stos sbb leaveq rcl xchg and mov rex.W addl ficom pop add mov insb sub xchg and pop xchg fcoms sahf fcompl mov cmp (bad) (bad) (bad) (bad) cmc insl stos movabs cli sub mov (bad) push or notl rex.WRXB out sbb pushq jg (bad) xchg pop scas (bad) int3 sti rex.WRX or xchg and xchg orl data16 out (bad) pop (bad) cmc retq movabs and pop (bad) push jbe sbb add mov or sub push roll clc and fcmove (bad) rex.XB sbb adc test rex.WRB rcrl (bad) out sbb repz add xchg fwait mov popfq jo and mov enterq jrcxz pushq mov mov (bad) jns (bad) movsl sub rcrb (bad) outsb (bad) (bad) cmp adc decb mov stc sahf pop pop xchg (bad) mov pushq sub (bad) lods xor jge callq xor (bad) rorb (bad) lea mov (bad) rcrl sbbl sub fildll adc jrcxz xlat (bad) (bad) push ja xchg sti push (bad) push roll mov in rex.WRX fnstcw (bad) mov or mov adc xor sbb adc xlat fidiv xchg mov popfq rex.WRXB cmp cwtl (bad) data16 mov (bad) mov xchg popfq and jge (bad) xchg notl (bad) callq fsts mov and mov sti rcll rex.WRB xchg (bad) jbe std in imul rex.XB jae (bad) loope jnp sbb and xchg cmp in ficompl sub rcrw rcll (bad) add adcb mov repz int3 (bad) xchg sub mov xchg or in jmp mov (bad) cmpsl mull mov and movabs (bad) (bad) push mov xor mov test push or mov jmpq or cltd gs (bad) rep jbe rorb (bad) sub add xor push (bad) (bad) fbld mov (bad) ficoml rex.W (bad) adc (bad) (bad) xorl stos cli out in (bad) xchg and ja ds and rex.XB xor mov xor (bad) cmpsl (bad) xchg ja (bad) xchg or movabs rex.WRB xchg add and jbe add rex.RX (bad) mov pop retq xlat mov retq int3 je jbe or cmp push fmull xorl mov or int add or fwait jrcxz mov lods movabs adc mov cld (bad) add movabs data16 (bad) xchg decl (bad) pushfq (bad) rex.WRB stos xor add xor push or add (bad) mov jo (bad) sahf xlat cmc xchg pushfq (bad) sbb pslld (bad) out pushfq rex.R mov cmpsb adc or (bad) push insb rex.WRX mov out mov div int3 sbb out xlat nop sub lods lea js push or pop jl push mov pop (bad) (bad) cmp mov js and mov cwtl (bad) (bad) and sub xchg mov lret insb mov (bad) rex.XB movhps scas xchg lret test mov idivl insl (bad) (bad) xor rex.W mov pushq add shll pmulhw xchg fsubrl sbb (bad) loope mov and insl (bad) and insb mov xchg (bad) adc sti out mov movsb and stc adc (bad) push movabs (bad) add stos mov (bad) xor ss push jg js shl movslq movl fwait loope and (bad) movabs or shlb (bad) (bad) icebp rex and (bad) ficom sbb or (bad) ja or orb push mov mov imull addr32 movabs roll xlat fildl and sub rex.WRX xor push out sar mov outsb lea out and sbb stc ficoml push stos xlat push (bad) mov adc pop hlt or sub lods mov loope cli fs ja fist test (bad) xchg icebp cli movslq (bad) sub adc divb gs imul (bad) add (bad) xchg (bad) cmp (bad) (bad) xor xchg (bad) iret mov rex.WXB jle insl jl (bad) out cmpb pop pop leaveq pop (bad) rex.B (bad) (bad) mov (bad) sub addr32 xlat lea pop data16 or mov out cmp insb mov or pop rcll pop (bad) xchg jbe movabs xchg xchg sub xchg out std jge (bad) jo or iret or mov rex.RXB pop stos clc xchg retq gs popfq mov mov (bad) bnd (bad) mov (bad) (bad) (bad) int jns loopne mov out pop sahf add rex.WRXB nopl (bad) (bad) push jrcxz xor push or sub pop or cmp mov out fldl rcrb scas push (bad) fs cmpsb sub cmp and jmpq xlat adc out mov sbb cwtl jb jae (bad) clc hlt jno xchg xchg push (bad) sahf mov rex.X test mov sbb fsubl push mov notl or mov adc sub push (bad) (bad) (bad) in xchg xchg or xchg sbb (bad) fcomps in xchg rex.RB addr32 movabs push jp adc xor cmp cmp jl outsl adc vmread jmpq ja add (bad) pop rex.RB lock rclb cmc jne movabs sub movsb mov xchg fidivl or add shll (bad) fdivs mov outsb (bad) movabs fstl fistl outsl jbe stc popfq sbb xchg lods push shlb push (bad) rcrl fwait (bad) sbb mov iret (bad) sbb insb fisttpl (bad) xor rex.R mov and (bad) lock fmulp (bad) and cltd jle nop xlat cmp rex.WRXB (bad) sub (bad) rex.W (bad) retq xchg out shrb imul or mov jns mov int addr32 xchg cmpsl (bad) push shll rex.RX movsb mov es sbb rol (bad) cmpsl sar cwtl and fcoms jle add adc scas push (bad) add imul mov add addr32 sub push jrcxz es mov rex.RB fdivrp sub lahf imulb mov pop cmpsb iret nop movabs in hlt insb rcrb fnstenv adc sti scas mov popfq out jne lods (bad) jb fidivrl outsl sbb push add xchg cmpb popfq jae repz (bad) (bad) rcll or xchg add xor mov pop decb cmpsl jmpq (bad) mov int xlat test jnp icebp (bad) int push (bad) ja (bad) addb (bad) mov (bad) (bad) repz mov pop jb pop pushfq retq sbb xchg rex.WRB cwtl mov in mov fadds test (bad) lahf cmp and xchg rex.R mov rex.WRXB xchg and popfq test or pop loope cwtl cmp rolb (bad) xchg sub and rex.WRXB retq jmp fnstenv xchg (bad) lods decb retq movabs loope movsl cwtl test add ja sbb enterq int3 sahf pop sbb in js loope fdivs ror mov (bad) cwtl push icebp xchg sbb (bad) (bad) pop mov sti mov jbe and (bad) cmpsb loopne sahf cmp adc pop fnstsw sub mov fsts leaveq (bad) sub xchg or adc (bad) (bad) movabs pushfq rex.WB rex.WX rex.RB rex.R subps cmpsl (bad) or (bad) cli xchg and adc nop jmpq or sahf scas shr lods (bad) xchg pushq sbb jno roll (bad) mov rcll add andl (bad) xchg sbb out mov cmp (bad) xchg stos (bad) stc (bad) add xchg and popfq sbb popfq icebp jmpq pop (bad) add xchg sahf jmp test divl jo repz ja xchg sbb enterq (bad) jo (bad) mov rex.RB rex.RB outsl pop std sbb nop (bad) pushq rex.RXB adc out pushq (bad) xchg imul xor pop mov mov xchg push scas xlat cmp std lahf movabs in movabs mov rolb fiaddl adc pushq and rex.RX movabs mov jno fiadd (bad) jns pop adc test cwtl sub jge pop retq jbe pop add adc jo or xor sbb pushq or and cld mov cmpsl sub pushq icebp (bad) fwait rol rex.WRX jmp sub nop cmpsl add (bad) ficompl shrb test movabs lahf pop callq jmp vucomiss lahf jmp and sbb sbb imul popfq (bad) (bad) movabs movslq (bad) mov push pushfq rex.X rex.RB or in or shrb (bad) movl addr32 adc mov (bad) movsl pop (bad) rex js rcll cmp (bad) jo jne or rex.WRX mov imul sbb sbb stc ficompl jns or adc (bad) (bad) lea mov (bad) mov movslq faddp mov mov mov (bad) jp xchg rex.WRXB outsb xchg pushq mov jo pop sahf add out mov (bad) xchg rorl lret (bad) xorl stc mov adc xchg out callq jle mov sub loope xchg rex.B cs imul out cmp pushq (bad) lret cmp mov or callq fldenv imul add cmp sbb adc rex.XB xchg sarl in jnp xchg adc je xor loop (bad) lods rex.RB rcll sbb pop or out pop mov jb cmpsl xor fnstcw xchg rex.WX jbe (bad) mov test and cltd jno rcll imul push pushq movslq xlat mov imul nop (bad) mov mov sbb sbb mov (bad) pushq add xchg lea sub fsts jmpq adc hlt data16 imul xor mov xchg xchg test add sub add rex.RXB adc lock sbb push pop add rex.RXB (bad) (bad) xor xchg sub retq adc xchg mov mov out and mov pop (bad) mov std add stos push xchg add pushfq push (bad) imul nop add movsl sbb mov cmp push xchg movabs push idivl xor push cs mov cmp ja xchg pop stc (bad) push retq int3 jle add scas test ficomp xchg (bad) addr32 add xchg test add mov xchg and fwait in nop jrcxz mov iret pushfq pop (bad) (bad) mov rex.WR jno xchg adc push pushq xchg orb cltd gs (bad) mov (bad) sub (bad) mov pop jns cmc ss pop mull cld and movslq xchg mov movabs cmc insb movsb mov pushq fnop icebp jo cli imul loopne loop mov es sub (bad) cli pop adc fisub sbb popfq rex.WRX data16 stos add (bad) in fnsave mov and lock (bad) stos jg lret rex.WRX or add jge and sub retq ja,pn cwtl test movabs shrl clc jle xchg test (bad) pushq test (bad) mov ja jg mov cwtl sti js mov divl rcll in orb icebp adc adc or cmc push jne (bad) lea pop retq xchg rex.WRXB sub (bad) (bad) rex.R xchg mov (bad) repz out sti retq xchg (bad) or icebp cmp sahf pushq ja sbb sbb scas jo mov (bad) mov ja push xchg outsb or cmp fistp or pushfq cli sbb adc xlat test xor and push rex.R jns xchg js adc adc (bad) or xchg pop xor mov mov rex.RXB movsb scas es or lahf jae (bad) int (bad) test cmp xchg or (bad) jmpq (bad) rex.RB xchg mov (bad) (bad) jne xor fstpt or (bad) add addr32 jge (bad) in (bad) sbb rex.WX jp rcrl push sbb jo xchg pop jg stos rex.XB jmp push int3 mov jg xor rcl push xchg (bad) nop adc jb or sbb mov movsb (bad) cltd sahf clc lods cwtl fisubrl data16 and push sbb mov (bad) nop imul xchg out or push jbe push stc movabs ja xchg jnp jg sbb pushq rex.R mov retq out jmp outsl sbbb je lods rex sub mov scas sub mov sbb sbb fldenv jmp (bad) (bad) repnz and (bad) loope imul xchg cltd shrl jmpq cs xchg loope (bad) sahf or mov cmp or movsb sub pop push or leaveq xchg xchg adc (bad) rex.RX xchg pop leaveq sbb adc fnop jmp icebp sahf push and flds test xchg push xchg imul lea pushq lahf cmp repnz jmp andl lods jle rex.WRX or std movsl xchg xchg jrcxz (bad) retq mov out (bad) mov mov mov rorq stos lods adc popfq rex.WB xor jbe out rex repnz cwtl stos and sbb loop in fistl cmpsb rex.WX cli rex.WRB imul sub (bad) (bad) mov xchg (bad) fisub popfq or icebp clc sub nop cmp mov jg or mov inc scas (bad) mov lret mov xchg cld iret lahf mov rex.B popfq leaveq jbe je cmp repnz hlt jl sahf mov adcl outsl rex.RXB cli sbbl xchg sbb sbb fscale out mov sbb jns xchg (bad) jbe and or (bad) mov pop or cmc jbe sbb adc xlat callq lret pop mov cmp movabs (bad) xor sbb pushq cs sbb (bad) xor rex.WXB sbb adc out cmp and lods addl xor pop cltd (bad) in in std cmp xchg or jg push jns pop jge xchg shr loope imull mov cmp mov adc mov fdivr push push stos std enterq pop lret mov je mov rex.WRB (bad) iret jl xchg (bad) (bad) sub xlat push mov rex.W pushq add (bad) lahf xchg cmp ficoml xchg (bad) mov rex.XB out ds xchg (bad) negl (bad) or fisubr rclb es sbb sbb rex.WX (bad) stos (bad) pop sbb mov (bad) sub mov cwtl test (bad) or int3 in add jl jno or js cmp (bad) fwait test adc xchg sub (bad) or notl lock test ds rex.RXB xor jne sbbl (bad) push cmpsl mov mov incl xor (bad) pushfq mov push jp iret movsl sbb xchg fcompl lea adcl add jae sbb mov fwait or popfq mov push imul loop ss sahf xchg js jrcxz (bad) lock (bad) jmpq xchg insl sbb (bad) sbb pop xchg or enterq neg pop (bad) add (bad) xchg clc (bad) rclb push retq cltd and mov (bad) pop pushfq jmpq movabs outsl (bad) mov push or rex xor outsl out rex.XB iret rex.X fwait (bad) mov (bad) (bad) or (bad) mov rex jmpq cmovb jrcxz (bad) rex.RB cwtl sub cmp (bad) (bad) xchg (bad) in rex.WR ja or in lock (bad) xchg (bad) pop insl in or fiadd mov rex.WRX xor (bad) or pop (bad) test (bad) imul jns test rex.RB xchg out and mov xchg pushfw xchg (bad) add lret outsl xchg insb (bad) xchg mov jbe mov and jmp pop adcl divb sbb cwtl sbb rex.WXB jmpq (bad) test push stos movslq rex.WXB popfq pushfq es sbb xchg xchg mov add sahf and in (bad) (bad) (bad) pop sahf (bad) stos pushq (bad) mov cld (bad) stos retq movslq xchg jbe rex.RX sbb xchg mov or mov movsl rex.RB push pop insl xchg rex.WRX mov cmp cwtl negb negl xor mov (bad) (bad) (bad) xchg push fildl (bad) nop out (bad) movsl in stc push sahf callq mov add sbb fisubrl xchg in push jge nop and fwait addr32 out cmp xchg mov or hlt stos ffreep ja (bad) movabs (bad) rex.B (bad) sarb (bad) lahf sub mov rex.WX or (bad) pop cli pushfq lea and (bad) cwtl xor rex.WRXB cli (bad) in (bad) xchg movsb hlt adc int rex.XB test fisubrl out pop xchg test icebp fsubrp clc stc mov cmp es cmpsb loop sub (bad) js cmpb xlat cs jb mov pop adc (bad) (bad) rclb xchg nop xchg (bad) mov pop out push (bad) gs scas jbe sbb add push (bad) mov cld xchg pop rex.WRX and in xchg iret jge out cwtl (bad) xchg out and lods pop (bad) xchg lahf nop movabs adc scas lods jae jl stos and fisub jbe push jmp hlt rex.WRXB rclb out cmp mov loop (bad) (bad) sbb pushq adc in (bad) popfq rex.WRXB jmpq push fwait lods xchg notl mov push stos xor jg mov cmpsl enterq sbb xor push out jp cmp rex.XB loopne xchg (bad) (bad) lahf cmp xchg (bad) jo mov xchg decb add movabs and (bad) adc (bad) xchg jle xor mov cmpsb adc xor cmpsl pushfq rex.WXB leaveq cmp scas adc (bad) out pop (bad) out rex.WR cwtl lock stc and xchg xor push (bad) sub sub iret rex.R movabs push movabs scas movsl mov cwtl pop jl fmuls adc lock xchg movabs or mov (bad) (bad) lahf jmp cli add fs cmc mov jmpq pop addr32 cli or push adc push jge je lret sub rex xor mov (bad) gs mov in loopne rcrb jne pop mov sub iret pushq mov (bad) mov popq push movabs adc mov and jae shl push xor xchg pop (bad) push insb (bad) (bad) pop scas xchg mov loop fist jg xchg (bad) shlb (bad) jb insb mov or cmpsl adc movabs xlat sub xchg lods (bad) (bad) rex.W test retq (bad) lock movabs test stos pushfq cmp outsl (bad) xchg mov mov (bad) (bad) jne pop sub push and push sub ss xchg jno sar icebp fucomi test (bad) leaveq (bad) sbb cmpsl (bad) sahf xor out loope (bad) fisubl in movabs xlat retq lock mov adc mov movslq (bad) lret xchg rcr notb sbb (bad) imul (bad) xchg std rol and movslq (bad) negl jrcxz (bad) mov push sub or sub rcl pop ds fwait rex.WRX rex.W out mov repnz mov xchg jl cmp rex.R adc (bad) mov pop mov iret xchg imul (bad) rcrl sahf adc mov lfs mov lea (bad) stc rolb stos nop push (bad) jrcxz mov cwtl mov rcr out add (bad) and (bad) fimull scas (bad) adc lret mov mov cmp addl ljmp add fdivrs jg add sarl push sarl xchg (bad) pop mov (bad) imul fwait cli and (bad) xchg mov in mov vmovsd adc jge (bad) xchg xor sbb (bad) fcoml movabs cmp (bad) (bad) sub xor ficoml es nop sub outsb jbe mov sti gs rex.WRB add adc xor (bad) jnp sub pushq imul sub rex mov (bad) movsl (bad) loope mov pushfq fstpl test and pushq pop rex.WB not (bad) sbb scas lret sahf js cmp lahf stos (bad) out push ja rex.X (bad) sub (bad) cmp scas jl repnz xor cs mov sbb mov rex.R sti jle and jmp nop or and je jne mov cwtl pushfq rex.RXB sub cli in adc fucomp fild (bad) (bad) hlt es rex.WB jg out xchg (bad) nop or xchg mov test adc pop push stc cmp or rex.XB jbe std or fdivrs out hlt jnp (bad) lahf jge mov stos iret cmp rex.WX cmp mov (bad) push xor (bad) mov in (bad) (bad) pop pop (bad) imul sbb (bad) mov (bad) xor rex.WX sub jns mov xchg jae or addr32 test popfq loop cltd rex sahf (bad) pop add rex.WR xchg subl adc add jnp xchg mov loop mov ror cmp (bad) (bad) stos mov xchg jge xchg pop (bad) rex.WX rex.XB lea cltd xchg popfq loopne retq jns sub xchg (bad) out movabs push enterq pop rcrl mov out rex.B or cmp jge cmpsb or sbb sub repz xor int (bad) mov sbb test test adc mov or sbb mov fnstenv mov xchg (bad) outsb mov (bad) loop rex.WRX test test pop leaveq push nop (bad) orl out xchg rex.RX or mov sbb sub insb jae out ficomp sbb sbb or mov (bad) mov xchg (bad) and pushfq xchg xor cltd cmp ja push (bad) add sti jnp fistl fmul roll sub xor cltd (bad) (bad) fdivrl rorl sbb (bad) stc repnz callq (bad) xchg sbb mov pop (bad) lea sbb fsubrs scas lods xor (bad) movslq lods mov jns mov es fisubl stos sbb in (bad) adc (bad) and (bad) rex.WR jmp xchg cmp in data16 add lods xchg (bad) pushfq mov es cwtl or xchg movabs movabs mov sahf (bad) adc sub or fisubl jns test (bad) (bad) pop movabs (bad) gs cwtl mov push mov hlt mov sbb stc xchg rex.WB rex rex.W pushfq rex.X cmp rorl std rex.WB stos cltd sub push roll jg (bad) cmp xchg pop cld shlb adc lea leaveq mov icebp out (bad) (bad) cmc or xchg adc mov in rorb (bad) gs jnp test mov rex.XB jne jbe mov (bad) mov pushfq rex sbb jbe jns loope (bad) xor mov xchg xchg ror cmp xor fbld (bad) (bad) or popfq push out outsl (bad) rex.WRXB mov sbb (bad) sub cltd test (bad) neg in std sub imul (bad) mov stos (bad) and sahf rex icebp pop sti fwait sbb addr32 xlat adc jo cs mov push or scas cmp (bad) and jge xchg int3 (bad) sub or pop sbb fnstcw scas outsb out mov jnp test jge (bad) push push rcrb lahf xrelease adc rex.RXB pop adc pushfq mov imul push ds rex.B xchg sbb sub sbb pushq mov xchg insl ss add pop fsubr jp,pn loopne fldenv xchg movsb cmpsl push jns pop scas data16 icebp xchg notb mov fbstp sbb (bad) mov outsl and addr32 and movabs mov cmp xchg mov in mov lods addr32 (bad) sub fcompl rex.WXB movsl leaveq imul jo rex.R mov lea xchg divl pop loopne xchg cmp in sbb sub out xchg mov adc rex.WR enterq (bad) xchg bnd or cmp popfq (bad) movabs callq xchg (bad) sub scas pop (bad) jge callq enterq es sub rex.RX fbstp movsl (bad) cwtl rex.WX push (bad) pop (bad) mov fucomp sti rex.WRB lock cwtl xchg shl pop in (bad) sbb addr32 fnstsw js,pt cmp (bad) cmp pop gs lock scas adc sub xchg (bad) lret rcrl pop and out clc movsb sub fisubrl or rex.WRXB or stc and adc rcl mov rcll sub and cwtl jrcxz out sbb xor sarb jmp (bad) pop mov mov xor add mull xchg push or and (bad) rorb add loop lea (bad) data16 and pop (bad) push insb out push cs lods (bad) mov insl cwtl sahf sbb mov ds (bad) add movabs xchg (bad) outsl cmp pop iret stos mov (bad) xor rex.WRXB add push xchg rex.WRXB nop (bad) mov push jg movsl or rclb jno decl mov sbb or mov in (bad) jbe (bad) mov in mov xchg pushfq and or or cmpsb push push insb (bad) mov outsl cmp mov pop xchg (bad) xor fwait xchg inc cltd push stc (bad) mov (bad) fs fidiv (bad) adc clc sub cmp js jp rex.WRB cmp (bad) xchg sub add sahf and jnp (bad) notl cmc movslq mov xchg (bad) jge cmp imul cwtl lea sub mov xchg adc or shrb mov mov cld (bad) loop mov and pop outsl mov imul xchg add jge sub (bad) idiv cli repz mov (bad) enterq nop (bad) rex.RB out add jnp adc or xchg (bad) (bad) sub (bad) je movabs mov sbb in sar jle rex.RB lea shlb xchg or mov jg (bad) (bad) in and jl (bad) nop clc xchg enterq adc insb rclb cmp stos fstps xchg fmull (bad) (bad) add add mov (bad) je iret loopne sub jrcxz xchg rcrl enterq mov xchg mov jo rex.WRX movabs and jbe (bad) rex.RX fdivrs xor xchg cmp je loopne int3 mov cltd xchg adc movabs test add cmpsl movsl lea pushq stos cmp xor sbb sub leaveq push xchg push and rex.RXB js insb cmp es jno and and mov adc cmp (bad) xchg adc xadd and repz lahf loop xchg rex.W xlat sub pop (bad) popfq cmc in adc push popfq ja mov jmp mull (bad) in jmpq cli xor mov jrcxz adc insl add iret js xlat rex.WX outsb loope mov xor outsl jp jmpq sub rex.WXB xchg adc or xchg (bad) out test mov add xchg pop imull push sub jnp sbb mov imul pushfq notl (bad) pop mov out jg out repnz movabs addr32 pop mov sub xchg (bad) movslq cltd cli xchg cmp (bad) cmp out xchg (bad) sub imul sub add add movabs sub xchg fcoml xor pop xchg xor add rex.X pop rex.WRX xchg out hlt sub mov xor loope cmpsb out (bad) (bad) fisubr xchg push add jl movsb jne (bad) cmpsb scas xchg (bad) or lahf pushfq pushq mov (bad) push xchg rex.XB pop add jns xchg lea movsl (bad) (bad) sahf pop fnsave lock jge in push leaveq rcrb rex.WB pop (bad) jbe (bad) add rex.WX and rex.X xchg in (bad) lock cmp xchg and movslq (bad) ficom pop jmpq jbe std xchg xchg mov or mov icebp retq cmpsb jg testl pop movabs out (bad) (bad) repz rorl cmp (bad) or repnz cmp (bad) rex.WRB nop sbb mov pop adc sbb rex.X jp cmpsl repz xchg or (bad) insl int3 mov xchg pop xlat out pop movabs addr32 xchg mov neg mov stc xchg movsl add (bad) push fld int xchg out (bad) pop cwtl adc (bad) (bad) xchg add xchg mov pushfq lods xor or (bad) rex.RXB mov lods xchg (bad) test or or xchg adc mov shrl lret iret mov sub adc retq xchg xchg mov lea xchg xchg fwait out xchg callq ja add in (bad) sahf cmp mov (bad) (bad) pop (bad) jrcxz lea xlat flds sbb jl divl subl cmp (bad) outsb or xor and or retq cmp imulb cmp sbb jns in xchg mov cmc sbb in popfq cwtl shrl (bad) or cwtl (bad) (bad) sbb push fisttp nop pop (bad) pushfq int3 imull xchg pop add stos sahf jg xlat sbb addr32 push nop pop lret jb adc icebp stos (bad) cmpsl cld sahf clc (bad) movslq mov pushq add pop xchg xor rol pop incb (bad) mov pop (bad) nop xchg add pop sti mov adc pop (bad) rex.WX lock pop add (bad) int mov xor jnp cmp pop xchg out movsl scas xchg add rex.RX retq movabs not cltd xchg xor jge mov loope,pn pop rex.RB xchg push jo xchg icebp push xchg repz sub movabs sahf fnstsw rolb sahf rex.RXB rex.X xchg mov incb movabs icebp xchg push cmc leaveq movslq enterq rcrb in xchg fdivrl xor (bad) movabs fidivr mov iret rex push fwait adc shl (bad) fdivrs jns clc rex.WR jno (bad) mov pushq (bad) mov pushfq insb imul sub pop mov (bad) ja rex.WB (bad) sub mov repz callq sub pop add xchg mov push mov (bad) cli rex mov (bad) fcoms jne xchg movslq xchg pop and lods pop incb mov loopne (bad) fdivl jge adc cs xchg idivl imul movabs mov and xchg jmp int3 imul (bad) sub pushq adcl jmp or callq push (bad) add stc (bad) rex.WRXB jmp xor mov pushq sub or or xchg cmp jg pop cmp rex.WR lahf sbb js jge jno push loop test pop (bad) sti fsubrl nop adc xor adc rclb mull pushq movabs push push (bad) lret cmpsl xor xchg (bad) (bad) rex.B push rex.WRX or add xor xchg jo xchg scas scas lret fucomi add (bad) gs mov adc imul adc rex.WRXB rex.WR cltd fnsave (bad) mov pushfq lods lock movslq sub xchg int3 rex.WXB out int jbe mov clc nop and (bad) jnp push negb jo pushq rex.B movabs rex.WX jno and jp sub xchg mov cld (bad) jo adc and xchg (bad) scas lock and mov int3 rorb pop cmp (bad) scas or xchg xor (bad) (bad) lods test mov pop insl rorl callq jns push cmp and loopne rex.X lret lock jp out addl lret fwait (bad) rex.RX push (bad) cmp and add test negb (bad) xchg lahf rex rex.WRXB out (bad) jl (bad) or mov adc shrl fisubl xchg cmp sub inc sahf ss add rex.WRX xchg mov mov rex.WRXB fdivrs xchg (bad) push cmp (bad) retq cwtl xchg xchg cli rex.WRX mov in rex.X (bad) mov xor sbb xchg int in and xchg mov (bad) data16 movslq sahf test sbb mov sti rex.XB xchg sub add and mov push loopne cmp mov js cmp test enterq mov faddl mov ja pop rex.RXB mov rex.WRXB cmp sbb sub (bad) std stos xchg cli callq xor xchg sub (bad) pushfq xchg mull add ss rex.WB xchg cltd mov xchg callq js xchg sbb adc mov xchg movabs incb (bad) jo sub mov add movslq and xchg out mov xchg stos rex.WRXB outsl in loope lret pop xchg adc lret nop rex.X mov ja (bad) movsb sahf fbstp out mov xchg (bad) mov and in sahf cmp mov pushq cmp movsb cmpsl (bad) (bad) repnz jnp xchg xor cmp ja hlt rclb cmpsb (bad) cmp decb iret rex.RB xchg loopne jae mov (bad) rex.B xchg jnp and lods out sahf insb sbb cmp (bad) movsb sbb or rex.R mov adc test xor scas loop xchg mov lock cmp add xchg xor mov xchg push in jmp mov movabs jmpq cmp cwtl repnz and sbb std xchg xchg lods xor int insb insl leaveq ja fwait in rex.WRB mov (bad) jle nop jge in add push rex.R iret rex.WR vmovdqu pop or and (bad) (bad) jp (bad) movabs (bad) mov stos cltd and jrcxz notl xor and mov out xor cmp adc add cmp sub push mov xchg out repnz and xchg sbb (bad) cmp xchg shrl clc int jge jge xchg xor mov (bad) xchg lret xchg cli sbb ds xchg (bad) or adc xor movabs addl shr out xchg adc cmc retq sub xchg imul push push and cmpsl cmpsl sub sarl jne sub movabs fsts (bad) popfq stc mov in movabs mov (bad) lret xorl movabs jle (bad) xchg xchg lods mov (bad) xchg jb xchg stc (bad) add mov fildll fmull xchg (bad) movabs adc (bad) or sub push repnz pop mov jns mov jnp rex.WRX sahf movabs (bad) nop (bad) cmpsb jne leaveq jge sbb jl callq mov rex.WRB mov stos je (bad) mov push int mov fisub movabs fidiv ja fcmovu xchg (bad) adc (bad) sahf (bad) lock mov pop test test (bad) xor in stos (bad) jle adc (bad) outsl stos jno callq rcrb mov xchg xor or cmc cltd and mov mov rex.WR push xchg outsb (bad) cmpsl mov mov loop and nop xchg xlat jge push retq test pushfq (bad) add idivl jl rex.WB cltd mov cmp sarb sub push out sahf xchg jo (bad) loop push addr32 mov sub negb iret sbb sub mov rex.WXB adcl popq xlat (bad) negl jge pop mov jno out outsl pushfq scas rex.RXB adc sbb rex.WRXB rex.WXB mov es lret push movabs (bad) xor pop sbb add push scas mov xchg fwait mul loope (bad) (bad) and sbb rex.WR adc push (bad) add lret jmp mov rex.RX pop mov pop nop rex.WXB movabs in stos (bad) sub pushfq adc fnop xchg xlat cmp stc test fstpt imulb cmpl jns or test in lock (bad) cmp mov sbb pushq pop fs in bnd (bad) adc (bad) lods movslq mov lret loopne outsb (bad) sbbl lods add gs xchg ja and xchg in pop cmpsl (bad) cmpsb mov popfq xchg in rorl adc lock fimul mov pop movslq mov leaveq pushq and xchg and mov jne and insb test xchg rex.RB jns xchg xchg gs pushq jge ja push mov pop and or ds xor sbb fsts movslq mov movslq test fs push adc enterq jmpq mov (bad) gs jle fucomp sbb xchg test sarl jge xchg movsb cltd lock rex.WXB or cwtl pop and lods (bad) mov rex.WB rex.WRB fwait popfq xchg callq out jne iret or lss loop es lea (bad) jp in jns (bad) and push push insl sbb add (bad) xor xchg callq jp imull jae cmpsl popfq adc cltd stc out int rex.WRB movsl outsl rex.RXB (bad) push pushq pop int3 fcomp jno cmp (bad) (bad) dec jnp rex.WR pop (bad) cmpsl fdivs xchg shrl rex.X or rex.WR mov xchg rex.WB gs lahf sbb rclb cmpsb or xchg pop pop jl rex.WRXB xchg movabs sub lea mov mov imul mov movslq movsl loop icebp rex.XB test jno (bad) jbe ficoml fnop pop sbb movq xchg add push (bad) in xlat or or sbb sub ljmp and sti mov (bad) xchg (bad) rex.WRXB rex leaveq xchg sahf out in (bad) jns add or rclb clc loope cld jno callq sbb sbb movabs adc sbb mov xchg xchg ss jle xchg and rex.X jno sub (bad) icebp sarl rex.WXB popfw pushfq xor fdivrl fs cmp jl mov mov movsl mov loope,pt mov adc sub jmpq sub or (bad) jge or pushq imul xchg imul movabs int in push jae (bad) sub xor fwait in xchg add xchg (bad) cmp out ss xor add cmp mov xchg nop mov xchg repz jge sbb mov lock mov in and mov xchg (bad) (bad) movslq enterq xchg xchg xor pushq cmpsl bnd scas fsubs int or ds in out (bad) addr32 cmpsl xchg jmp pushq mov mov je cmpsl rcll (bad) stc mov xor xchg (bad) and pop cmp xchg rex.WB leaveq movsl int3 rex.WX (bad) popfq sti rex.W jp lahf fildl (bad) std jnp xchg pop xchg lret repnz xor movabs movslq stos popfq mov push lea mov out rex.RXB movabs je imul adc gs jge xor mov mov mov imul in rex.R (bad) cmp xchg sbb movabs out add pushq pop (bad) adc (bad) cmpsl xlat jbe pushq rcr or in (bad) mov int3 cli xchg xchg movabs xchg xor adc packsswb rex.WRX cmpsl callq xchg and rclb std out insl adc xor (bad) (bad) movsl pushfq cmp callq (bad) out (bad) cmpsl loopne shr jl cmp outsb sbb (bad) clc leaveq stos sbb test (bad) xor jno lock xlat pop add outsb cwtl sub repnz insl or or rex.WXB rex.W cmpsb add mov test fist lods cmpl (bad) (bad) xchg (bad) add jg xchg imul xchg out (bad) push lods cmp xchg rex.WB and mov mov test loopne iret push imull mov movslq lret rex.WXB rex.W mull (bad) jne jge fdivs mov lods xchg je jg loop (bad) movabs mov test adc jae scas mov xchg int pop (bad) add rex.WRX fwait mov imul push pop pop mov sub mov sbb lea push adc jl jge (bad) jns iret rex.X cltd xor nop (bad) and cmc (bad) out or mov cli sub jge lods jg xchg stc stos sahf adc callq mov (bad) fidivr sub sub xchg (bad) idiv rex.W cmc push movabs mov (bad) (bad) mov popfq or (bad) imul movabs (bad) mov (bad) rcrb nop or mov fwait pop fsubr fcoml add mov pop or push nop mov rex.WXB pop (bad) test jl gs mov movabs xchg retq lret pop pop xchg std and (bad) popfq jns (bad) xlat fstpl jmpq jae and xchg fwait cmpsb add push (bad) in cmp icebp xchg cwtl push xor rex.R rcll (bad) addr32 movabs out xchg (bad) test retq mov ficomp jne movabs pushfq and js lods xorb (bad) rex.WR idivl xchg cmpsb (bad) repnz (bad) pop (bad) (bad) pop xchg (bad) adc rcll loopne cld lods xchg sub gs xlat movsb test nop movsl and xchg lret rex.WXB pop push xchg std rex.RB cld fwait sti pop xchg repz fnstsw xchg sahf rcll mov test cmp test (bad) pop jge and push pushq roll jle pushfq sahf decl rex.RXB pop (bad) stos cmc retq mov xchg (bad) mov xchg xor iret lods movslq xchg loopne sub xchg push (bad) pushq pop pop retq mov fmull callq movabs (bad) sub ja andl pop jg psubsw mov out xchg push movsb (bad) mov nop jo callq lret movabs push enterq rex outsl mov lcall and out movabs jmp rex.R (bad) pop (bad) (bad) roll adc mov fistl jle (bad) mov rex.WRX rex.RXB rex.B popfq fnsave xchg or stos cmp cmpsl mov mov mulb mov mov cmp mov rex.WRB fwait imulb xchg mov cwtl rex.WB xchg mov out sub mov repnz mov jno cwtl rep pop mov (bad) xlat sub leaveq xor cmpsl sbb fimull cmp out cmp movabs mov (bad) callq leaveq (bad) xchg jo sarl (bad) (bad) (bad) mov mov xchg lea lock popfq enterq rex rex.RXB (bad) data16 lahf mov mov lods lahf add ds (bad) or cmpsl add in xlat (bad) movsb cmp loop mov mov cli rex.RX imul fnstsw (bad) (bad) nop adc rex.WRX xor add incl lods jnp (bad) xchg and and push loopne push rex.XB rorb lea fwait movsl adcb sahf xchg add and mov cwtl and cmp add lahf sub icebp nop sbb (bad) mov push pushfq cli (bad) xchg adc mov push ss push (bad) out adc jp pushfq lret or out out xchg xchg ds (bad) and jmpq stos subb rex.WRXB rex.XB rex.WRXB pop mov jo nop iret pop (bad) lods callq pushfq xlat add sbb scas xchg (bad) repnz retq or mov pushfq or sbb movsb fisttp push (bad) (bad) (bad) mull jbe push adc (bad) or stos (bad) fiaddl (bad) xor ljmp jns cmp lods movabs neg and xlat xchg pushq cwtl (bad) jo (bad) fdivl test xor push adc in (bad) adc xchg pushfq mull rex.R xchg scas jb or (bad) sti rex.RB sub adc (bad) xchg sub stos leaveq sub rex.X stc jl xchg jno cld pushq push mov (bad) enterq cmp (bad) jrcxz lahf fcompl mov xchg (bad) rex.RX addr32 rex.RB popfq ficom (bad) (bad) (bad) adc in cld loopne pushfq and scas pushq adc rcl jp movsb cmpsb jnp xchg or pushfw push lea movsb imul lahf mov mov rex.XB sahf mov (bad) (bad) adc fsubrs and jbe imulb push ljmp scas in xchg lods (bad) mov adcb jbe jnp retq adc repnz (bad) (bad) pop and or sahf jge sub rex.WXB rex.WX nop and jl jne js movsl in mov cli rex.WX (bad) movsb xchg mov fldl mov pop repz adc xchg sbb iret (bad) mov (bad) out cmpsb adc pushfq (bad) icebp ja adc xchg movabs xor add sbb sbb or out sub movsb ficom sbb lahf xchg mov imul movsb hlt and xchg jrcxz repnz insb ror xchg push js sarb pop sub jg cmpsb repnz and loop (bad) repz loop xchg rex.WR mov mov sahf lock and icebp and xchg retq hlt and adc cmpsl (bad) (bad) mov jo mov movabs cmpsl xor xchg pop or fwait jo xor (bad) addr32 jp insb (bad) push (bad) rex.RXB xchg mov sbb adc xchg jmp movsl jge mov sbb sub cli int fwait xor (bad) je adc fidiv (bad) fidivl mov rcrb out mov sbb test add stos jp xlat mulb jae sub fldt xchg cltd xor and (bad) movslq (bad) (bad) mov and out mov (bad) in xor sub mov es mov xor mov xchg and or icebp fstp cmpsl lret andl mov test xchg movabs in (bad) imul cmpsb ss (bad) xchg je rex.RB rex.WRXB retq cltd (bad) ficompl (bad) jns xor sub mov sysret fbstp mov jge test cld (bad) (bad) in xchg js mov and xchg movabs xchg adc nop imul mov jno (bad) in mov test cs mov xchg (bad) add scas sub sub sbb (bad) (bad) mov (bad) stc add sahf loope loop js (bad) (bad) in push clc addl data16 xor (bad) xchg out cmpb sti out (bad) sbb push add (bad) std adc mov jg xchg cmp xchg mov insb retq (bad) test cs cmp xchg jo push leaveq adc ja pushq in xchg mov imul pop cmp xchg jle addr32 pop (bad) sti cs rex.WXB xchg cwtl jno push xchg movabs js push (bad) jmp adc (bad) movabs cmp xchg xchg fnstcw cwtl clc out (bad) xchg xchg fs pushfq lods rex rex.R xor sub jae fwait scas ja (bad) cwtl pop rorl popfq rex.XB xchg loopne xlat mov pop cmp rex.RB xchg movabs xchg sub (bad) (bad) jl out xor cmp cs pushfq pushfq movabs jns callq jne retq xchg jl vpackuswb lods lret xchg roll ds imul lods movsl lahf (bad) xchg (bad) sahf mov sbb mov je sti test shrl pop or jrcxz mov rex.WR fist insb jae sub (bad) or xchg sbb mov sbb add rorb cmpsl or (bad) sti push rex.RB test rex.WRB xchg outsb addr32 xchg mov rcl and xchg lret (bad) xchg xchg push xor (bad) xchg sub jns and hlt (bad) cmp data16 imul (bad) xchg xor add iret adc lea orl sahf mov jrcxz fidiv popfq xchg ja xor movabs (bad) rex.X sub add rex rex.RXB (bad) mov jmp rex.RX sub rex.RB and nop mov (bad) (bad) adc jle rcll lahf lret pop xchg movabs sub lock sbb mov loop adc xchg (bad) imul mov and sub add (bad) xchg mov adcl cmp xlat leaveq or movabs rcr ss mov push in out movabs pushq jg in cmp pop add rex.R or (bad) enterq mov cmp sub lea (bad) push stc (bad) sbb (bad) push test ss movabs pushq sbb jl push lret xchg (bad) insl pop leaveq (bad) movsb xchg outsl jg mov jno xchg (bad) ds lret mov add cmpsl rex.X (bad) xchg (bad) imul sbb sahf cmp cmp movabs push adc xor outsl sahf std xchg insb push sbb sub mov cmp es mov out xchg cwtl out and (bad) (bad) jnp (bad) gs jg (bad) jmpq mov (bad) pop fstps fdivs cwtl movsl mov pushfq push or jmpq xchg adc mov mov sub lea and (bad) lods xor mov jnp push push addr32 (bad) rex.WXB rex.WXB push insb movslq push rolb (bad) mov sub xchg icebp xchg iret sbb int3 movsb xchg mull cwtl mov mov movslq and mov movabs pop mov rex.RX popfq in lgs xchg pushfq mov xchg (bad) (bad) jne (bad) jno rex.XB jns mov mov iret xchg cmc xchg push (bad) test cmp (bad) rex.RX cwtl cmc mov ja (bad) out sar pop sub jmp ss mov xchg in (bad) rex xchg lock rex.RB data16 je cmpsl retq rex.XB jle rex.WXB adc (bad) mov callq jnp movsb movabs mov iret push rex.WRX cmpsl mov pushq movabs sbb (bad) xchg std mov sbb cmp fist (bad) sbb fdivrs sub xchg sub pop xor adc rex.WRXB mov jl movabs outsl sti mulb repnz mov pop (bad) movabs jbe (bad) cwtl xchg mov movsb and in mov add es js (bad) gs xchg pop decb mov mov cmp (bad) rex.WX in in mov xor mov fidivl pop xor xchg add leaveq repnz cmovnp pushfq and xchg xor xlat shll loopne xchg (bad) leaveq mov (bad) rorl push sti (bad) (bad) outsl pushq cwtl (bad) in pushfq (bad) loope int3 loopne (bad) mov cmp clc sbb and pop lahf pushfq xchg jmp movabs enterq jge jle lahf xchg movslq popfq (bad) xchg rex.WRB xlat mov (bad) jbe xchg (bad) fisubrl and cltd fisub icebp pop jne (bad) scas mov movsb int3 rex.RX cmp xchg xor lods (bad) cltd jbe rcrb xchg mov xchg xchg mov cmp and (bad) pushfq (bad) stos stos clc (bad) outsl fsubl (bad) (bad) int (bad) xchg xchg xor xchg (bad) stc rcrl pop xchg mov (bad) xchg callq sub nop add jmpq adc and jmp nop in (bad) idivb mov rex.W insl hlt cwtl or (bad) mov loop fsqrt lods mov movabs mov pop movsb (bad) popq fstps sahf repz xor fldt xchg es packssdw stc adc sub out add je std mov adc rorl (bad) (bad) jbe fbstp fist callq lret xlat movslq push mov lahf cltd xor push mov movabs (bad) nop rex.R rex.XB push loop (bad) out loope pushfq insb mov sbb test sub adc mov retq jg xchg (bad) rex.X xchg jne (bad) (bad) mov and sahf (bad) nop sbb rex.WR add rex.RX (bad) push imul (bad) mov (bad) (bad) add push xchg cmpsl pushq popfq js or sbb loop sub mov in sti sbbl add adc ficomp pop lods rex.WR pushq pop nop jae xchg sbb (bad) xchg mov (bad) (bad) in mov popfq movsb (bad) mov xchg mov push jno xlat popfq (bad) std fisttpl sarl mov xchg (bad) movsl sub (bad) and rex.WRXB jmpq movabs decb rcll cmpsl xorl cmp mov xchg sub jbe rorl fisubr add rex.B (bad) jbe addb jnp push (bad) test (bad) (bad) out push mov imul std pushfq jg insb add jno and mov repnz jmp pop sub (bad) (bad) sub pop add (bad) rex.WXB fwait (bad) jmp jnp mov (bad) pushq xchg andl xchg retq mov movsl (bad) rex.XB loope (bad) cmp xor mov jno ja (bad) adc add insb sti (bad) cmpsl sahf sub (bad) jbe int3 pushfq leaveq sahf test xor jg ds mov cli jnp ds jmpq (bad) jo xor out push lods (bad) (bad) cs (bad) cmp data16 loop (bad) adc jae cltd gs rex.XB clc (bad) xor cld cmpsl nop pop iret fldl2e jno xchg cltd je xor mov int add (bad) rex.B mov jb sbbl rex.B fisubr xchg gs out sahf mov push (bad) jle push outsb (bad) xchg outsl sub mov fsubrp rol loopne rex.WRB repz mov mov imul lock (bad) loop push xchg mov lods cs stos retq movabs or cmp in (bad) (bad) mov movabs xor xchg sub loope add imul in fsubs jo xchg pushq movabs rclb xor subl (bad) sbb (bad) mov (bad) in out (bad) xchg jne rex.RXB clc add fist and mov and jge rex mov adc sub rolb mov push repnz adc add stos mov lea insl or outsl push out pushfq jmpq pop jb xlat lods xchg adc in rorl rex.WRXB jp cld push notl sub (bad) xchg in stc test in pushq or cmpsb pop xchg or adc xchg cli enterq jl cwtl xchg pop add out (bad) add mov cmp sub out fldenv in xchg push scas and sti jbe xchg cmpsl or xor adc lret mov pop cs cmp add pushfq scas fs (bad) mov nop rex.RXB rex.W repnz xlat cmp xchg and (bad) (bad) rorl lahf lods in sahf cltd repz cmpsb shlb cmpsl sahf rex.XB xchg rcrb xchg jp out (bad) sbb mov movslq sbb movabs xor cmp repz in and push fildl andl or mov sahf jg sbb (bad) cmp or xchg rex.WXB xchg movsl repnz scas mov xchg incb sub lret movabs xor adc stc pop loope addr32 jo cltd (bad) pop jl fsubs xchg (bad) int (bad) sub mov xchg (bad) lock and (bad) jb rex.RB fcmovnu enterq idiv jge addr32 jmpq rex.RX cmc jb xchg jnp jne sub fistl cmp mov xchg sub or jrcxz test cmp push cmp sbb mov xchg test xchg (bad) (bad) (bad) fwait (bad) xchg and mov sahf loop sub jnp or movsb outsl (bad) je xchg xchg sub lahf rex.R sbb mov or addr32 movabs (bad) push mov cmpsb xlat rex.WX (bad) add (bad) add rex cwtl add (bad) xchg cli jrcxz outsb mov cmp xor notb rex.RXB addr32 pop xchg movsl leaveq loope pushq cmpl sbb repnz movabs cli movabs and sti pushfq xchg sbb movsb cmpsl mov xchg rex.R rex.WRX mov mov (bad) repz lea mov sti decb popfq rex.R jne xchg mov sahf in out fs lret jrcxz fcmovb pop ja add out mov jge xor fidivrl add (bad) jp loopne mov adc stc loopne (bad) callq jge popfq mov je loopne (bad) (bad) (bad) mov decl cwtl mov jae (bad) pop rex.WX jg xor pop fdivrs rcrb and loope xchg cmpsb scas jbe mov cld int3 lock fisttpll pushfq (bad) xorl sbb sub rex.WR (bad) subb pop mov movabs jmp rex.RXB mov lock add rex.W adc scas rex.WB rex xchg (bad) xorb sbb add jge popfq callq js xchg pop (bad) loopne popfq int3 pop pop cmp (bad) mov sbb and mov xchg add outsb xchg cltd sbb xchg (bad) (bad) mov movsl (bad) sbb rex.RB push add loopne push xlat add sahf (bad) cmpsl mov rex.WRX sbb loope test pushq movsl rex.WRXB sub (bad) imul cmpsl scas rex.WRB rex.RB (bad) (bad) jg jge movabs setbe xchg (bad) movsb rex.WRXB (bad) (bad) add fbld test rex.WR rex.XB callq sub rex.X push test setg (bad) cmp rex.WR div adcb (bad) clc testl jl mov jne xchg cwtl adc and cli sbb (bad) jb jmp cwtd fsubl (bad) setne scas icebp cmpsb sub pop sub jbe test adc pushq pushfq ds (bad) movabs sahf xchg movabs cmp rex.R xor mov and rex.WRXB (bad) mov loopne pop loop vpsadbw jrcxz ficoml lea and xchg jbe rex.RB scas jl add rex.RX mov xchg (bad) popfq lahf rex.WRB gs (bad) push leaveq (bad) (bad) shr jne and stc out push or and xchg testb mov movsb (bad) jl jge mov fmull jmpq and push out (bad) or movabs rclb adc rex.WRX fs (bad) sbb lock test outsb xchg or gs addl (bad) mov (bad) push lods imul (bad) int3 lea add xor and fisub xchg mov cltd retq rex.B in mov xchg data16 imul adc mov push repnz adc mov (bad) repz (bad) insb jmpq rcr push xchg sbb mov ja rex.WRXB cltd imul adc xchg ds je (bad) cmpsb outsb (bad) (bad) jnp fimul xchg (bad) xor xor testb (bad) or leaveq (bad) mov (bad) (bad) pop (bad) xchg pushq mov movsl retq (bad) mov out sarl movabs (bad) in pop xchg movabs mov xor movsb insb rclb pop (bad) rex.X mov (bad) (bad) (bad) rex.WRB push jno ds sub je mov cmpsl (bad) in icebp nop adc cmovne loope (bad) (bad) jl fcmovb (bad) jo push js or add sub (bad) and int3 ds mov lods addr32 sub nop (bad) (bad) pop sbb imul adc andb mov and stos or imul je rex.X testb xor movsb sub (bad) test lea loopne repnz (bad) jbe sbb and test xor mov jnp mov cqto push int3 (bad) (bad) (bad) movabs cmp (bad) leaveq xchg xor cltd mov mov shld mov insl mov popfq dec fldt cltd ss (bad) (bad) xor mov mov lods (bad) outsl (bad) or (bad) mov scas xchg (bad) bnd maxps mov (bad) (bad) jae out (bad) mov xor (bad) test sbb stos cmp mov sub fisttp vmovntps (bad) and mov jg sar sbb or movabs wbinvd xor xchg (bad) std mov es sub xchg pop popfq insl retq (bad) ficom mov outsl (bad) pushq add rex.RXB rex.R (bad) in (bad) jg sbb xchg sub cs adc in sub push pushfq scas jnp and test popq push (bad) (bad) mov rex.WR (bad) add rex.RX mov mov sahf rex.WR xchg mov imull xor add faddl pop data16 fstpl and out mov cmp mov fstl xchg lret imulb xchg add xchg (bad) fadd xchg mov xorb sar int rex.WR adc pop clc sub in rcrl or mov xchg xchg xor (bad) test mov add sbb pop mov jge (bad) adc lea jae (bad) mov (bad) push test cmp ror nop or sbb or adc mov kmovb rex outsb (bad) repz jno in ja mov fisubr adc sbb (bad) cmpsl and (bad) (bad) mov and sub idiv pop xchg es (bad) rcrb (bad) sbb rex.W rex.WRX xchg sahf sub (bad) xchg and in mov rex.WX cmp or jrcxz insl test sbb in loop push retq mov (bad) xchg cmp pop je xchg xchg pushfq (bad) sbb (bad) push lret jp sti bndstx lea (bad) loopne sahf and int3 (bad) sbb mov nop rex.XB and movsl or jmpq and jmp sti jb lods xchg mov mov adc (bad) movslq xchg pop mov (bad) mov jg adc (bad) (bad) ja sbb xchg sbb movabs pop mov (bad) popfq movabs je push cmpsb mov or and sbbl (bad) mov mov addr32 fpatan outsl cmp xchg leaveq mov xchg pop out xchg (bad) xor cmp mov xchg mov rclb hlt fwait repz movabs mov and imul retq in (bad) or pop xchg out fwait cmp xchg sbb cmp lret xchg sbb adc xchg adc (bad) mov loope lock adc sbb movabs rex.X cltd xchg scas repz rex.RXB repnz enterq andl stos mov out pop jns pushfq test cmp lea sbbl out sub repnz fdivrs movslq retq xchg mov rex.WX retq rcrl mov mov popfq fs (bad) sub mov fs sub xchg jne movabs xchg (bad) popfq scas xchg lret mov rex.RX in cmpsl (bad) lretq or cmp cli (bad) rex.WRX lea stc (bad) (bad) imul movsb nop addl (bad) cmp cmp fidivl xchg and rex.X rex.WRX mov clc in sahf (bad) iret mov js and push pushfq (bad) imul ja rex.RXB test lret xchg or rex.WX nop mov (bad) (bad) jno scas (bad) (bad) movsb movabs cmc sahf cld (bad) sbb jge (bad) xchg push cmpsb fildll (bad) loop (bad) loopne sbb (bad) icebp (bad) adc pushfq stos xor rex.RB outsl imul andb in xchg jg nop out cwtl mov xor rex.WR out imul rex.WRXB xchg (bad) sub mov cmpb sahf (bad) mov cmpsb xchg movslq (bad) add jne add mov (bad) or stos idivl xchg rex.XB insl or xchg cld enterq jle sahf (bad) pushq mov pop insb nop xchg pop jno (bad) xor pushq data16 and fstl (bad) or xor fidiv xchg stos jrcxz xchg pop (bad) adc adc in (bad) sbb rex.RB lock (bad) iret adc sbb test int stc xchg adc push stos mov adc pop enterq (bad) xchg add sub push pushq cwtl cmpl cmp mov mov ficoml mov and mov cs mov or mov push (bad) adc adc push fwait mov mov popfq sub cmc outsb xchg lahf (bad) test xor (bad) pop xor divl sub add (bad) jne (bad) sbb movabs pop icebp xchg push sub sbb (bad) (bad) pushfq negl and fs mov or cmp loop out cmpsb loopne (bad) fild lret cmpsl movsl sti jbe mov sbb in movsl mov rcrl xchg xchg (bad) push jle and lods push scas popq out sub mov loope cmpsb in cs xchg mov (bad) (bad) (bad) (bad) cmp movabs cmp (bad) xchg xchg sub jne (bad) xchg hlt stos add stos adc sbb xchg jrcxz out sbb pop lea pop (bad) lret ror in (bad) lret xchg fidivr adc xchg sti xorb xchg mov xchg (bad) (bad) jp movabs ficoml test and rex.X mov nop lea in pushfq sub sbb mov xor movabs out std lahf xchg or sub mov cmpsl pop jno pop push clc xchg movabs fucomi pop xor outsl and lods push (bad) xchg (bad) fwait (bad) shll clc (bad) xchg in (bad) cld xchg movsl (bad) jl rex.WXB mov add int3 jo sbb fstl movsl xor addl jns xchg mov adc movabs sub nop cmc lea shll lahf sahf movabs lret mov ja cmp leaveq xchg mov test push (bad) je adc cmpsl xor xchg pushfq cwtl jrcxz hlt mov rex.RXB or (bad) xchg out rex in push (bad) add adc cmp insb xchg movabs xor test add adc or pop or mov lahf leaveq imul mov pop adcl sbb jle test xchg jmp rex.WXB mov (bad) sahf jp xchg adc (bad) push sbbl rex stos (bad) pop or mov cltd lods add xor adc fidivr xchg test rclb and pushfq rex.WRX adc (bad) pop xchg rex cmp xchg cmp shll push mov push movslq add and sbb clc xchg pop pop and mov rex.X rclb mov (bad) orl xor pushq add push and cld fsubl and mov loop jb pop icebp and cmp out fs lock add xchg mov rex.W xchg xchg repnz xchg cmp rex.RXB (bad) rex.WXB gs (bad) rcrl in pushq rex.X adc rex.WXB loope xchg jae or mov (bad) rex.B cmp push (bad) ficomp pop sub test (bad) insl cmp rcll scas pushq (bad) (bad) xchg xor cmpsl in retq jb sub sbb stc mov (bad) lods jo pop mov stos in (bad) mov in fs (bad) xor xchg rex.RX adc mov rcrl (bad) (bad) sub sbb rex.WRB cmc mov out (bad) jne mov stos nop sbb xor or repz scas enterq or cmpsb insb mov pushfq imul lret cmp (bad) sub push pushq pop out stos cmpsl (bad) sub mov lods fimul fistp push xchg pop (bad) mov sub xchg (bad) and xchg (bad) hlt fldt and jb fstl shr rex.WRXB xchg fdivr rex.WB sbb popq sarb adc (bad) sub imul scas movsl jae (bad) movabs (bad) (bad) xor out imul adc (bad) push cmpsb (bad) mov xchg (bad) xchg or (bad) stc fwait loop js sbbl out int cli jns and nop insl lea jg xchg jmp mov pop testl adc cmp (bad) sub mov pop adc push xorl test pop enterq sbb (bad) data16 or (bad) cltd mov jge (bad) cmp retq mov subl lea xor rex.WRX jle (bad) cwtl stc vmptrld callq mov xchg (bad) nop (bad) in imul mov adc shrb jle (bad) xchg cmp sbb rex.WRB (bad) jmp xchg (bad) jno xchg (bad) pop (bad) jp scas iret rex.W mov jge lods insb outsl pushq movsb mov popfq xor jns popfq rex.W pop push (bad) pop mov imul vmovapd adc mov rcrl rex.XB (bad) cld (bad) (bad) out (bad) sti loop repz sbb stos lock rex in xor scas sbb fisubrl nop add (bad) add lea xor xchg sarl (bad) cltd in or leaveq cmp adc (bad) rex.XB xchg pop or xchg sbb rex.WRB sahf cli movabs fsubl orl adc outsb test xchg jbe fsubrp rex.XB imul ljmp jg (bad) jo idivl fnsave pop or pushq repz nop mov jnp mov (bad) movabs (bad) (bad) jns lahf adc xor jge movslq rex.X data16 je sbb or sub cmp mov mov (bad) mov mov mov pop ds rex.B or xchg (bad) xchg (bad) in pop mov popfq xchg add rex.WRXB (bad) mov mov cs addr32 (bad) rex.WR and out xchg sub callq mov sti mov sahf mov sarl sub xchg fwait (bad) jae xchg retq xchg mov fild pop add cmp and pop rorb (bad) sub mov xchg rex.XB or pushfq cwtl in cmpl jno add cs fnsave clc (bad) pop jge movabs movsl lock (bad) movabs fidivl popfq or cmpsl mov mov (bad) data16 jge mov sahf pop sti mov jae (bad) (bad) icebp rex sub out push pop (bad) fcoml cmp stos cmp xchg add jg jmpq (bad) stc jle cmp pop mov movabs fs ds rex.WX lock jg mov xchg js shrl lahf xor (bad) rex.WRX std (bad) xchg sbb ja in subb (bad) (bad) pop lahf xchg adc hlt clc loopne (bad) out push shll test pop movslq es adc in and shl stos adc outsl test mov pop sbb insb xor jb addb pop push cmpsl push ss or andl mov movslq add xor (bad) (bad) movabs leaveq test rorb xchg jg (bad) push xor cwtl sub out shl mov add fdivrl (bad) xchg movsb lock rex.WRB sub stc cltd (bad) (bad) iret (bad) cwtl mov rcll outsl add xchg xlat loopne rex.WRX (bad) xchg mov mov test sbb cmc divl mov icebp cmp (bad) mov sarl add scas xchg rex.WRX insb push sub jno adc (bad) jae push xchg jge test jle (bad) mov outsl mov cltd loope adc movabs ja loope xchg (bad) sbb rex.WX adc xchg (bad) (bad) jae jg (bad) imul cmp mov addl rcll xchg rorb sahf or mov cmp xchg sti rex.R xchg imul cs xchg lret data16 sbb xchg rcl or rex.W enterq or sub rex.WRX movabs je mov imul jne xchg (bad) (bad) add push cs std (bad) sbb stos xchg jl jmpq decl adc xchg (bad) add rex.RB (bad) xor jb xchg js jmp mov or mov pop xchg lea mov pushq pop stc sbb (bad) fsubr (bad) (bad) and sbb cmpsl (bad) push mov xchg push retq rex.WR cmpsb loop mov (bad) cmp jnp test (bad) in ds lahf rex.WX fldt incl fwait adc loop xchg pop nop add cltd adc loop push out data16 rex.WXB xchg movsl nop xchg pop mov sahf (bad) xchg sbb stos mov xchg mov jmpq (bad) pop jbe mov (bad) mov loopne mov out pushfq xchg (bad) sub fstps retq mov jrcxz (bad) rolb (bad) (bad) test movabs sbb sub rex.WXB scas rex.WB int loopne or xor (bad) xlat sbb rex.WRX gs xlat pop rex.W mov popfq movabs jae xchg stos xchg mov (bad) (bad) out xchg rex.W popfq lret jb jnp sub and int3 nop add xor rex.RB lods jno cs add outsb loopne movabs ja std mov mov stos sbb mov pop idivb mov xchg movabs movabs frstor jne (bad) (bad) movslq pop adc movabs sbb outsb cs sbb cs rex.X rex.B cmp popfq cmc scas rex.WR std push mov adc (bad) movsb notl or mov and mov (bad) pop pushq int out or test and movabs rex.XB pushfq (bad) fwait (bad) sbb rex.WRB pop test cltd pushfq insb or mov sbb xlat leaveq cmpsl sbb mov push jne rcrb and sbb shl ds (bad) mov mov ja leaveq clc and gs loope adc and (bad) and cmpsl repnz (bad) xor xor pop test loopne mov cmp jmpq xlat xchg retq lahf (bad) adc jg xor jle xchg and add sar or mov (bad) stc push outsb movslq xor (bad) fbstp jae (bad) (bad) jo cmpsb repnz outsb popfq (bad) addr32 and lods (bad) icebp (bad) push (bad) jl xlat cmp sub adc rex.WXB rex.RXB in pop rex.RX shl scas retq (bad) loopne lahf lods adc je (bad) cmc and lods xchg lcall rex.RXB fisubr insb sub int mov pop rex.RX jl sub add addr32 rex.WR mov xlat sub jnp xlat mov (bad) adc (bad) movslq push xor mov cmc fldenv (bad) sub sub mov fwait cmp popfq (bad) fidivr (bad) rex.B xlat callq movabs adcl xor je imul es mov (bad) (bad) scas sub mov fs (bad) (bad) mov sbb (bad) pop fstpl out mov xchg and in cmpsl (bad) ja outsl xchg mov faddp xchg pop rex.RB repz rex.WRB callq jbe xchg iret mov sub mov fidivl ja or sub sbb mov icebp (bad) callq push mov jno xchg xor pushfq retq add jmpq es pop add rex.RXB xchg div insl (bad) pop scas xor jne (bad) cmp (bad) jns outsb fisttpl jg insb cli scas push sub (bad) (bad) or xor and int3 jle add insl rex.WR xchg addr32 icebp lods and adc jp adc jmp adc xor rex.RB stos rex.XB adc retq xchg mov mov nop adc std fsubrl jo mov push pushq loopne cwtl mov cmpsb rex.XB leaveq pop faddp pop cmpsl cmp pop jne cltd mov enterq xchg sub and test jg sub adcl (bad) ficom rex.XB rex.R test jns mov pushq (bad) push pop pop (bad) pop retq rex.B mov movsb iret mov jp (bad) (bad) pop or (bad) loop mov callq (bad) push mov clc mov sbbl xor push (bad) insb test in lret xlat rex.RX fidivr in rex.WRB add xchg or mov xchg xchg mov orl cld (bad) (bad) xchg mov movsb rex.WRX idiv rex.WRXB mov (bad) cmp sbb mov mov cmp cltd cmpsb fmull (bad) in mov outsl mov mov (bad) popq mov sbb insl pop xchg fdivrl je insb nop lock (bad) loopne rex.W fwait sbb loop callq (bad) cld pushfq notb sub outsl movabs stc std leaveq retq mov sbb jmp (bad) loope movabs outsl (bad) mov sbb xorb sbb xchg sbb int3 mov lea xchg xchg mov jmp sbb add (bad) negb out (bad) mov test cmp (bad) xlat xchg fist cmc mov add mov (bad) mov mov je outsl outsb movsb push out lods lcall mov mov rex.WRX rex.WRXB movabs (bad) adc ficom (bad) lods lahf loop scas (bad) xlat push jg enterq scas mov mov (bad) subl fidiv lods mov sbb pop sahf add scas (bad) xchg rex.RX xchg (bad) jrcxz cmp sub fimull (bad) in out mov rex.WXB jg mov outsb (bad) nop jg fisub or icebp rex.RXB sahf int rex.WRB repnz sbb jo test sbb or add int add mov setle (bad) jmpq ss (bad) xor cmpb (bad) jg outsl pushq cmpsl sub (bad) in lret mov jrcxz mov icebp (bad) in (bad) xchg jle sarl adc xchg callq nop sti iret cmpsb nop mov insl sub std rex.RB sub mov iret adc je nop movabs sub pop rex.XB test xorl rex.RXB es outsl enterq rex.R jl jae hlt scas mov sbb rex.WXB adc rex.RB sbbl pop jle cli scas mov mov pop enterq cli (bad) adc (bad) jbe cmpsl add fnstsw fs adcl in rex.WRXB (bad) test mov push outsl retq (bad) mov jmp scas or (bad) xlat mov fsubrp add xchg insb add and xchg pop orl (bad) (bad) callq cmp push (bad) sub mov xlat xchg (bad) adc clc jns mov jno mov int xor cmpsl lods (bad) rclb (bad) sub adc mov cmp scas jmpq stc (bad) cmpsb je movabs mov cmpsb mov mov int cmc mov xlat mov (bad) out cld rex.WRX pop (bad) ja (bad) (bad) mov faddp jg sbbl jrcxz rex.WRXB cmp outsl popfq mov je or (bad) jmp add rex imul sbb enterq xchg (bad) or fsubp movsl add add mov cmp rex.WXB xchg push adc push (bad) fnstcw fwait stc cmpsb sub xchg mov popfq jae outsb or cltd lret andl sbb and xchg adc sbb xchg mov mov pop imull and insl xor cmp pop (bad) enterq fistpl outsl fidivr lret and rex.RB rex.WR fldl (bad) cmpsl (bad) icebp rex.WXB xchg (bad) mov je fcoml xchg add (bad) cmp push cmp iret cmpsl add outsl rex.WRB rex.WR pop add push pop sti int3 sbb cmp mov retq cwtl cs (bad) mov js rex.RX rex.WRB (bad) mov imul mov int mov mov icebp (bad) (bad) (bad) movsb adc mov scas (bad) xchg (bad) loopne push insl rorl pop mov adc ja jno mov mov jb mov add loop rex.RXB inc cmpsl bsf mov lret int outsl adc outsl sbb enterq scas rex.RB mov ja movsl adc movsl sub xchg in movsb (bad) jge mov pop (bad) sub jge adc mov repz (bad) adc xchg movabs xchg (bad) rorl xchg xchg icebp add mov mov cmc sbb adc cld setge mov jne je jg and (bad) jae pushfq test setne stc xchg ficomp mov rcl mov (bad) (bad) mov es adc cs sbb and add pushfq fwait notb fcompl add stos (bad) andl pop callq or lret pushq js ds insl mov fidivl jle fwait outsl shl imul (bad) enterq (bad) push lea xchg rorb add mov (bad) jmp lahf mov add repz jmpq sahf mulb jnp sti (bad) cmp and jo (bad) mov and mov lods iret and cmpsl (bad) rex.WX scas jp xchg mov (bad) mov ss popfq je add and cli nop scas out cmpsl pop jrcxz int xchg adc add insb fildll xchg mov (bad) xchg mov pushq int cltd mov and popfq sub fisubr mov insl (bad) mov cmp sbb or outsb pop callq jmpq jbe imul pushfq fidiv add and mov (bad) sbb xchg (bad) in mov cmc jmpq sbb mov xchg (bad) pop je pushfq xlat imul (bad) nop fiaddl sti je mov xor rex (bad) and xchg (bad) xchg (bad) (bad) xchg mov movsl in sbbl rex.R (bad) sbb callq sahf movsb (bad) jmpq std out (bad) scas mov add mov (bad) (bad) in xchg pushq xlat (bad) (bad) (bad) retq in adc (bad) cmpsb xlat (bad) mov mov add movabs sub xchg mov adc xchg or (bad) (bad) push gs mov sub rex.WRB or fdivrs gs sahf outsb mov cmp int3 jns mov rex.WRXB and mov std (bad) fbstp rclb lahf pushfq jmpq and push imul stos push test fidivl rorl jae lods pop ja mov add or mov (bad) mov xor (bad) ds mov (bad) out (bad) cmp (bad) fwait cmp iret mov mov out je and (bad) (bad) rcll mov subl mov xchg nop bswap sahf add sub mov adc scas retq mov lahf stc add xchg cld mov jg rex.WXB mov (bad) hlt sahf or mov push mov fisubl (bad) (bad) imul andl push test jrcxz adc add mov cmpl mov jne (bad) xchg pop push jmpq push test push xchg (bad) pop xchg addl cwtl pop (bad) and mov jb jno mov rex.RX fwait jge fwait pushq pop icebp mov mov es vpsrlq mov scas lea (bad) jl pop pop jge movabs jrcxz xchg (bad) (bad) cwtl sahf cmpsl cmpsb or or lret cmpsb cwtl test lods push xorl (bad) testl mov insb cmpsb mov xchg cmpsb mov mov (bad) rex.RX movabs pop pop in outsl fstl xlat cmpsb xchg adc (bad) rex.WRXB rex.XB sub stos adc adc adc scas imul loop jbe (bad) (bad) (bad) xchg (bad) pushfq jrcxz iret and pop or mov fwait (bad) js fcoml xlat sbb (bad) fimul mov or mov cwtl (bad) lahf (bad) data16 (bad) rex.R fst (bad) xchg and adc fidiv mov sahf push rcll lock mov in (bad) rex.XB rex.R mov iret (bad) (bad) sub (bad) (bad) cmp nop jg stc (bad) loope mov pop rex.XB sbb jbe mov add out fiaddl and mov (bad) rex.WX jg ja outsl (bad) (bad) add (bad) add outsl std and cmp addr32 jmp movsb mov pop int xchg cmc xchg pushfq xchg pushfq rex.WRXB mov add cmp ds cmp add fadd (bad) movabs ds imul int (bad) (bad) pop (bad) insl sub mov xchg test mov pop add in enterq mov or mov (bad) (bad) cmp std (bad) pop cmpl mov subl mov (bad) fiaddl (bad) cmp mov add mov (bad) mov sbb mov (bad) push outsl insb (bad) fmull mov outsl sub (bad) xchg shrl cld faddp rex.WRB mov fstps mov movsl mov out rcll xlat xchg xlat andb mov int jmp (bad) rex.R stc jbe xor fisubr rol sahf jp adc pop (bad) mov nop adc stc (bad) pushfq rex.WRXB mov lret pop outsl in pop sbb cmp (bad) xchg or xorl popfq (bad) leaveq imul es (bad) mov rex.X push adc insl sahf lea loope jo lret lea jrcxz orb (bad) (bad) jae fisubl (bad) (bad) (bad) pushfq movabs mov (bad) lret (bad) jo sub xchg out movslq rol retq mov sbb (bad) nop and out int stos push mov or fstl mov cwtl fisub (bad) leaveq mov pop decb outsl (bad) ds mov or pop mov sbbl sbb xchg sub sbb lea xchg rex.R repz sbb test leaveq insl (bad) xchg pushq mov and fwait movabs mov in int3 rcrb popfq sti imul test scas outsb lods std (bad) pop or ficoml pop push mov (bad) sub mov (bad) xchg shlb jae test ljmp jae sahf xchg mov pop (bad) int3 jb rex.WRX mov jge cld (bad) and mov jae or rex.RXB and xchg sbb fidivrl es lahf loop ficomp (bad) cltd (bad) add (bad) retq (bad) por cmpsl insb xor movabs orb pop (bad) pop rex.RX rex.WRX movb movabs mov jbe rex.WRB sbb (bad) (bad) (bad) and lods push sub outsb fcmovbe xchg (bad) xchg sbb adc (bad) (bad) movabs popfq jle stos pop movsb xchg pop in pushq pushfq bswap pop mov out idiv xorl movabs callq rex.RXB scas (bad) adc mov sahf sub cmpsl pop sbb popfq mov rex.WR fldpi sbb out (bad) xchg data16 (bad) out outsb (bad) (bad) (bad) xchg adc hlt cmp std rex.RXB lock sbb jmp movabs lock rorb push repz mov mov (bad) ds (bad) cltd cli mov test (bad) (bad) xchg fisubr (bad) xchg xchg xchg je mov mov adc nopl (bad) out adc addr32 add rex.WRX (bad) mov outsb (bad) and mov (bad) xchg (bad) fwait leaveq ja rex.R movsb rex.WR jle imul mov mov push cmpsl insb outsl jle xchg (bad) xchg pop (bad) xor jne jmp (bad) rex.WRX and decl xchg nop outsl pushfq stc (bad) xchg (bad) scas fldl callq (bad) xor (bad) je setle pushfq (bad) (bad) movsl popfq movsl (bad) hlt js rex.XB fimul and addr32 je sbb mov rex.RXB push iret adc adc or jbe add adc add sub pop jnp push adc jnp or test (bad) (bad) rex.WB ds (bad) (bad) ss adc jl add lahf int3 adc cmpsl test ss lea rex.WX jne rex.XB mov (bad) addl mov xchg callq and (bad) movsb stos pushfq adcl cwtl lea jo stos sbbl insl outsl (bad) add and (bad) xchg rclb outsl (bad) mov mov jne push push mov pop fidivr fsubrp cmpsb lahf neg mov (bad) jns stos cmp popfw (bad) in jbe (bad) outsl or jg hlt pop rclb and rex.RX imull (bad) (bad) outsl test std rcrl leaveq movabs shr (bad) cmpsb (bad) lret nop sbb xor lahf adc mov add movsb callw std push ss ds (bad) xchg xchg faddl rex.XB push (bad) pushq (bad) popfq lahf jg add flds (bad) (bad) cmpsb lahf push jmp (bad) rcll mov add xchg xchg add mov je (bad) jb (bad) int rex.X fcompl loope rorl push movabs loope cmp es (bad) sub jbe mov insl mov addr32 sub fimul push or pushfq jb fisub cmp rex.WRXB gs jrcxz cmp (bad) mov xchg adcl (bad) sahf mov jmpq lea (bad) push mov push and cmpsb (bad) jo pop (bad) xor (bad) ja rex.RXB ja jmp movabs (bad) (bad) icebp xchg add sti jb rex.WX rex.X or pop cmp lahf jb (bad) (bad) sti gs lahf std pop mov mov jno or lret shl fbld outsb xchg divl fbld push pushq fbld xchg pop add pop adcl negl mov sahf xchg es sbb loope mov shll fwait (bad) or add mov xor movsb mov rex.WR and mov or rex.WRXB test stc jl fildll xchg (bad) xchg pop mov lods mov add sbb mov movslq stos test callq adc (bad) xchg popq adc (bad) (bad) in (bad) jl (bad) loop iret mov push mov add adc test mov lods mov adc fisttpll adc mov enterq scas loop xchg cld push adc sahf mov cli xlat rolb jge jns pop imul xor shrl mov pop adc xchg je jb mov popfq adc pop xor push stos outsl cmp sbb jbe mov or pop movabs and incb (bad) adc outsb xchg sahf cs xchg mov js incl (bad) scas (bad) xor rex.RX mov outsb repnz movabs fdivl sbb sahf mov (bad) rex.RX mov pop callq jg mov xchg lods nop lret jg push (bad) jmp cmpsl sub fcoms fcmovu lea push fidivl push and movslq loop outsl or mov in jmp mov jb sahf in test divl or (bad) mov adc sbb cltd xchg mov cmp jecxz ror nop stos mov mov sbb mov mov (bad) mov jne xchg stos xchg scas rex.WRB leaveq (bad) xchg mov (bad) mov xchg (bad) cmpsl (bad) adc mov xchg xchg mov (bad) rex.WRB (bad) cmp adc mov test mov (bad) jmp or cmpsl rex jle xor cmp mov sahf xchg cmp mov (bad) cmp test sub jae push fsts cmp (bad) mov testl imul fidivr fwait mov test push and adc mov movsl mov rex.WX sbb retq rex.RXB adc cmpl lret (bad) (bad) repz mov cmc (bad) in punpckhwd sub decl nop mov fiadd adc adc scas movsb jp leaveq (bad) (bad) (bad) (bad) mov out scas and fmuls outsl cmpsb lahf mov in cmp leaveq sbb rex.B xchg addl ficoml cmp or addl dec outsb (bad) pushfq cmp sbb jbe and callq push (bad) jo pop cmovs (bad) retq (bad) adc ficomp rex.W and pop cmp xchg (bad) xchg pushq sbb (bad) scas (bad) lods fcmovbe stos or (bad) out sub mov mov and pushq xchg jnp movabs outsl jmp (bad) (bad) iret lods jle movabs je sbb sbb pop pop rex.WX (bad) pushq lods insb (bad) mov sti mov lods pop leaveq insb jl xchg rex.RXB out or cmp not sbb xchg cwtl (bad) out insl mov callq sbb and out (bad) (bad) xchg xchg mov push mov mov (bad) ss cmpsb add roll xor (bad) movslq out std jns out (bad) imul mov (bad) test mov or pop rex.WRXB ds xchg adc jrcxz sub (bad) push repnz mov xchg pop pop hlt cltd cltd outsl imul int cmpsb (bad) leaveq movabs jrcxz pushfq push outsl jo xchg pushq movabs jle movsb pop xchg xchg sbb (bad) (bad) xchg xchg mov xchg xor sbb or cmp sarb adc mov lods flds mov mov retq xchg (bad) cli lcall (bad) flds (bad) adc scas fisubrl rex.WRXB (bad) or jg fmul outsl mov (bad) (bad) jb lret iret movsl lahf cmpsl cmp mov mov outsl movabs out stos xlat jnp rex.WXB mov or jnp push mov (bad) mov pop xor std retq (bad) loop sbb pop pop fidivrl push (bad) movabs sbb (bad) int3 xchg out (bad) insl jbe scas mov icebp (bad) sub mov or (bad) push (bad) (bad) mov lahf sti mov movslq (bad) (bad) xchg gs pop add jmp movsl rex.WX in jge (bad) incl stc int3 pop rex.WR fbstp outsb rex.WB adc push ds sbb push loope fidiv loope movsb cwtl mov xlat lahf mov xchg rex.RX pop (bad) mov outsb fmull pop mov mov nop movsb popfq loop rcll in je scas out add rex.WB (bad) sub (bad) int3 rcr mov mov (bad) mov mov pushq cwtl pop pushfq pop mov jbe test rex.WRX rex.WRX test and ficomp mul sub stc pop repz add and lret fisub retq jmpq loope (bad) rex.RXB rex.WRX out pushq popfq in sub rex.B movabs ficom cld sbb ja outsl mov push rex.WR pop sbb pop cwtl stos lods jae outsl lahf cmpsl nop (bad) and movabs (bad) mov (bad) mov rex.WB xchg xchg cwtl xchg (bad) out rex.RXB (bad) fcoms popfq (bad) sub fwait (bad) repz (bad) sbb push (bad) out outsl test jae mov addr32 mov pushfq and rex.XB ja mov (bad) adc (bad) or lods movslq sbb (bad) (bad) xlat pop (bad) jbe rex.R addr32 negl (bad) rex.WXB mov mov sarl jrcxz mov pushfq (bad) sbb (bad) cmp (bad) popfq sbbl je (bad) imul (bad) loopne or test xchg jmp leaveq movabs push leaveq pop es lahf (bad) xchg mov mov xchg push leaveq rcrb mov scas addr32 (bad) mov cmpsb scas sbb rclb adc jbe test pushq rex.R cmp xorl cltd mov fist sub jg in lret (bad) in loop fistp or rex.R ficom rex.RX rex out outsl (bad) lock iret push pushq push cmp mov (bad) jmp add cmp jmp push and fs testb (bad) fidivr mov (bad) fsub (bad) (bad) xor cmp rex.RX jl (bad) mov jo push test (bad) jrcxz (bad) (bad) (bad) jmp (bad) rex.XB push (bad) (bad) and je mov pop adc lods (bad) outsb retq sub pushq and frstor pop int (bad) xchg (bad) or or mov (bad) mov rex.W enterq fcomp movabs xor pop ficompl popfq scas outsl clc je cmc mov movabs sbb xchg movsb insb jne sbb cli push imul leaveq jnp add cld mov sarb pushq push (bad) mov jl xchg cli mov rex.X rex.WRXB insb lret (bad) out jb rex.WXB cmpsl rex.RX addr32 outsl imul add pushq lods or scas or xlat (bad) mov mov fiadd push rex.X (bad) jne lahf add rex.WB retq mov jnp or in cmp js scas lea adc (bad) movsb xchg jrcxz mov test in insl loop jb mov mov pop (bad) pop rorl sete push pop fwait callq and pop xchg and std outsl lods retq xchg xor (bad) rex.WR mov adc popfq mov sbb fnstenv test xchg xor adc xchg xor stos jg rolb rex.RB popfq in mov rex.WR sub cmp bswap mov fisttpll test movabs cs sub or movabs (bad) ds adc retq (bad) cmp imul sahf ficomp (bad) fisubl mov and mov jrcxz adc pop (bad) (bad) int xchg adc outsb xor out pop xlat (bad) and (bad) xchg scas je mov (bad) sbb xlat in add fwait adc xor lods (bad) xchg stos or movabs cltd (bad) mov rex.X adc pop rex.RXB cmp mov pop (bad) fdivrs mull adc rex.WXB (bad) rex.WXB or (bad) out js movsb roll add (bad) xor xchg (bad) and (bad) sub mov movabs stos xor outsl rex.R lret fwait (bad) movsb sub and push mov mov mov mov lea push retq sbb sub (bad) sahf subl xchg sbb rorl (bad) cltd add movabs xchg add cmp cmp jmp xchg movabs fwait out andl int adc sbb jnp add xchg rex.B pop mov fstl loope sbb lods (bad) jrcxz sub outsb negl mov in or rex.RXB (bad) adc pop movsb (bad) outsb fcmovnb mov (bad) in xchg (bad) jrcxz pop xchg xor outsl cltd testl jp sarb sbb in rex.WRXB mov add (bad) xchg popfq jrcxz paddb mov movsl (bad) rex.RB js xchg (bad) (bad) imul (bad) jmpq mov in rex.RXB ss pop outsl imul (bad) out test push xchg sbb pushfq (bad) cmpsl (bad) movabs (bad) pop mov rex.RXB rex.WXB imul je rex.W sub mov cmpsl xchg cli stos pop movsb adc mov rex.R xchg in xchg in outsb movabs mov sub cmp enterq jg rex.RXB sbb movabs (bad) (bad) add (bad) sbb adc rex.WRB out insl push sbb rex.WRX xor outsl mov mov outsb nop (bad) pop (bad) xorl pop sbb fnstsw lods xchg popfq shlb cmp (bad) mov in imul xlat push mov pop mov xchg add divb mov and sbbl (bad) iret (bad) mov (bad) rex.RX clc ficoml mov jmp xor shr (bad) cld pop (bad) mov rcr popfq pop (bad) outsl std add cltd popfq fist roll and (bad) movslq mov pushq sub lods rcl mov rex.R (bad) push sub sub retq adcl and adc fstps js push stos fmul mov pop xor or movsl movabs jb (bad) xchg jmp int3 ja jnp mov mov rex.XB es pop mov lahf ja out retq or xor xchg (bad) mov rcr xor (bad) rcrl fldt out jne insl leaveq je sbbl fimul fstpl pop jge xor cmp mov or cmc cld js mov add (bad) int sahf jae mov retq stos xchg jno jrcxz sbb adc xchg icebp pop jno test pop mov (bad) jns mov adc stc rex.R rex.RB xchg gs rex.WX (bad) movabs (bad) (bad) (bad) sahf loope pushfq cli rex.WRB int rex.WXB pop jrcxz cmpb (bad) (bad) (bad) and iret and cwtl adc mov iret pop jne xchg nop (bad) xchg xchg rcll imul fistpl sub test xchg fisubrl stc mov fstp (bad) push addr32 test xchg xchg (bad) jnp (bad) mov scas fild xchg popfq lods cli mov mov adc pop push rex.WRXB fistl out nop (bad) shll fucom jrcxz addr32 mov out or mov (bad) xor push cltd (bad) mov nop sub cmp lret (bad) (bad) (bad) pop movsb negb hlt (bad) (bad) mov adc xor (bad) adc jg rex.WX mov add (bad) hlt sbb out adc (bad) mov je lahf out mov jge xor lret mov outsb outsl mov mov pushq sub mov mov (bad) mov push nop sbb out mov jnp mov jne sbb (bad) scas adc movsl (bad) pop in lahf retq and mov (bad) adc cltd jmpq mov mov xor test fsub mov test fstps jrcxz testl jno je xchg sahf clc iret push pushq (bad) negb sbb shrb mov fistpl mov push insb (bad) jo mov scas cld cmp shl rex.WXB rex.RXB imul (bad) (bad) push fisubl mov mov rex.WRXB addl (bad) (bad) sub add pop enterq outsl loope out out (bad) push sbb rex.XB xor nop xchg je hlt push cmp xlat and lea mov sub add pop xchg mov mov (bad) xchg outsl pop jne xchg and sub cwtl add adc stc adc sub scas in mov loop adc push cmp add cmp mov jge (bad) test mov imul (bad) ss je cmc pop retq rex.WB rex.B xor sbbb push adc xlat outsl and xchg pop insb iret rex.XB or rcll scas jg (bad) jg mov rex.R pop (bad) push xchg rex.RB cltd rex.RXB (bad) pop movabs or insb fstpl (bad) mov outsl movabs in fwait mov lods js (bad) jmp (bad) in xchg std movabs jmpq stos ja sbb jmp hlt sbb in rex.B mov (bad) hlt xchg rex.WXB xchg (bad) not (bad) xchg rex.WRX cmp add add pushq and or cmpsb int3 (bad) xchg hlt push mov ss push push mov hlt movsb jo lock (bad) xchg cld pop loopne ficomp sbb mov sbb imul jrcxz and (bad) (bad) cmpl imul mov (bad) (bad) hlt push xchg out pushfq jmp je sub imul pop clc mov outsl stos lahf xor rcrl jbe ja scas xchg je jrcxz or jb (bad) enterq xlat (bad) in (bad) nop sbb lret cwtl shlb (bad) imul (bad) sbb in movslq fidivr or xlat shll rex.WB ss scas pop scas sbb jno retq lahf sbb loope outsb and mov (bad) nop sub in lea (bad) or (bad) movabs lock (bad) fildl leaveq lret jbe (bad) rex.WX sahf mov sbb hlt lods rex.WRX icebp pop hlt popfq rex.RX adc outsb jb lahf mov rex.WRXB fnstsw mov rex.WRXB rex.WXB rex.RXB and and xor rex.RX sub jns rclb add (bad) outsl xchg (bad) jns cwtl (bad) (bad) (bad) xchg repz outsl adc rex.WRB movsb rex.RB fisub sub (bad) ja jp jle sbb (bad) sub pop (bad) and and sub movsb gs rcrl fiaddl cltd pop or (bad) jae stc mov movsb jge mov xchg xor push (bad) adc sarl (bad) fisub out cltd nop imul cld ficomp push stc ss mov (bad) adc (bad) fsubrs (bad) ja xor je pushfq (bad) sbb cld pop xchg test (bad) loopne rex.WRXB xchg sahf fisub outsl divl pop (bad) adc rex.WRXB cli (bad) (bad) sbb cmp xchg mov scas and test ss mov mov popfq sbb xchg (bad) mov xor adc xlat lea rex.WB ds fcompl push xchg popfq and int3 pushfq and clc popfq xchg jrcxz rcll sar (bad) fwait mov and sar pop insl jmpq movsl imul jp jp (bad) sbb push mov fidiv sub add cwtl xchg add (bad) or movabs xchg (bad) (bad) in mov xchg xor sbb rex.WRX rex.RB addr32 jmpq retq cwtl jns out (bad) pushq cmp (bad) jbe sub or xchg je rex.WRB jno cs (bad) or loopne pushq callq test (bad) jo scas iret mov xor or (bad) mov adc rol or xchg outsl sbb sub jno or nop mov test sti rex.WRX jo callq cmp or push pushq jrcxz setnp rex.XB retq (bad) rex.RXB lret cld or sahf pop pop sub ds push mov push outsl (bad) adc int sbb nop fwait shrl (bad) (bad) adc lods mov xchg push lea and lret jnp jl int xor and cli xor push movsb es (bad) nop adc mov xor jnp jbe icebp insl sbb lock mov jg jrcxz std xchg in fwait (bad) (bad) movabs sbb fidiv mov (bad) fnstenv xchg rex.XB rex.RXB jmp push sub mov xchg shll out (bad) lods mov jbe (bad) (bad) fs jb (bad) cwtl (bad) es movabs xlat adc hlt stc in (bad) (bad) fcoml adc rex.WRB in rex.WRXB (bad) xchg je mov movabs fidiv in lea (bad) fistp popfq (bad) pop jne xchg stos (bad) push xchg push xlat ficomp and or sub in mov xchg sar je,pt adc test xchg repz cwtl sub adc and movl jmp mov jmp mov ss faddp in xchg int3 lret rcll xchg jne sub or mov sbb outsl int outsl (bad) stc rorb rex.RX (bad) jns and mov (bad) rex.WX loop cltd movsb cmp (bad) and jrcxz (bad) (bad) (bad) repz fldcw rex.RX adc cmpsl popfq (bad) cmpsb loope adc pop fimul je sub (bad) iret sarl (bad) sbb scas or (bad) mov xlat lahf rex.RB or (bad) jbe testb ss test lods xor mov sbb push mov xchg (bad) movslq movabs (bad) (bad) loope cltd jle retq imull stos cmpsl (bad) adc hlt sbb xchg (bad) adc xchg jns jno imul adc ja pop (bad) (bad) cmp push (bad) rex lea (bad) movslq sbbl mov movsb mov test sub in add add mov (bad) xchg jo push (bad) outsl pop outsl xchg in shr mov rex.WX outsl mov mov movabs (bad) addb popfq jrcxz (bad) mov xchg adc jle lods je xchg adc (bad) xchg pop (bad) jae out fidivl jmp lea (bad) jrcxz or mov sbb (bad) mov rex.W push pushq stc xchg xchg (bad) retq mov stos (bad) retq fidiv outsl ja loope imul mov jp mov rex.WXB xchg (bad) push outsl rex.WXB mov (bad) lea outsl pop imul (bad) imull (bad) sub sbb (bad) sbb and or pushq xlat out jp hlt mov mov test (bad) xchg iret sbb fisub (bad) and (bad) (bad) popfq movabs int push cmp retq mov movabs xchg je push (bad) (bad) iret (bad) jrcxz sub lret in movslq pop popfq mov (bad) or jbe mov (bad) rclb jbe rex.RX mov addr32 rex.WRB sbbl mov movabs mov mov jbe (bad) stos lods jg sbb (bad) (bad) xlat retq ds notb cmp adc jl mov mov mov jmp stc cmp mov xor (bad) out rex.WXB fisubr pushq (bad) mov jb (bad) (bad) repnz (bad) mov callq stos or (bad) cli jno (bad) rex.WXB fdivl mov rex.WRXB insl lret mov rex.RXB (bad) jne out ficompl int lfs mov adc (bad) jbe xchg jbe (bad) hlt (bad) adc (bad) bswap (bad) movabs pop jrcxz test mov xor mov rex.WRX (bad) (bad) je cmp push xchg sahf (bad) fnstcw fs xor repz mov push out cld or mov mov neg movabs fstpl rex mov movabs lahf (bad) imul loope pop mov xchg cmp mov test (bad) (bad) push insl mov xlat jp outsb (bad) movslq mov shll nop sbb lea pop mov pop and (bad) sbb and xchg sarb jg in rex.WB sbb jae lahf xor addl xchg lahf insb fldl jg out rcr mov pop jmp pop cmp ss out xchg in in mov clc adcl (bad) and mov and mov fnstsw sbb sbb stos out (bad) stc mov sub mov (bad) movabs (bad) adc jbe lahf enterq or cmp xchg (bad) lea lods cmpsb xchg jo mov cmpl fs cmp (bad) outsl rcrl cmpsl rex.WRB xchg cmpsb (bad) and xchg rex.RB fcmovu test sub jrcxz and push adc cmpsl movslq push mov (bad) pop leaveq jrcxz or adc xchg push outsl push jb fidivl add mov jmpq outsl fisubrl jge ds movsb (bad) sbb scas add sbb (bad) rex.WRXB lret (bad) hlt jnp shrl insl cltd jbe adc cmp outsl (bad) cmpsb enterq mov imul (bad) xchg sbb jnp mov loope stos negb mov rex.WX scas (bad) xchg jge jmpq add push (bad) outsl (bad) pushq add insb movslq (bad) and (bad) (bad) lock (bad) adc xchg mov rex.W out mov (bad) (bad) gs cmpsl cmp (bad) negl outsl pop xor mov fimull mov xchg sub jnp rclb or pop fucomi or rex.WB rex.WRXB jbe movsl jg or mov xchg jo mov mov jmpq ljmp rex jb push in mov push test xor xchg sub (bad) jrcxz cmp mov add jrcxz jne adc rex.WRXB (bad) (bad) rex.WR (bad) mov (bad) cwtl xchg lods movq or rex.XB rex.WB xor (bad) scas pushq (bad) mov xchg pop rex.WR mov int nop int mov cmpsl fisttpl add sub xor xor rex xlat ficoml mov fld xchg mov rorl (bad) xor movabs mov xchg (bad) je clc jo rex.WRXB addr32 or cmpsl cmp mov cmc xchg rex.RX outsl rex.WXB pop (bad) or in (bad) xchg in jmp add xchg cmpsb cwtl (bad) popfq je ds sbb nop outsl or movabs rex.WR test fsub lods (bad) adcb insb test (bad) xchg pop jrcxz pushq insl scas je (bad) cmpsl xor adc mov sbb cmovnp clc push fist (bad) rex.RX rex.RX rex.RB ss (bad) enterq incl (bad) push mov scas fsubrp outsl lock rex.WRX movabs rex.B stos gs (bad) (bad) xlat pop (bad) mov xor jbe fnstsw loop movsl mov and mov (bad) jrcxz mov (bad) mov mov mov ja xchg mov (bad) (bad) scas jg (bad) iret (bad) xor test push adc (bad) movsl rclb mov cmp jb repz ja (bad) and mov rex.WRXB xorl add push callq xor and (bad) stos jns xlat lock getsec imul xchg (bad) pmulhuw jmpq test xchg loop loop stc jmp lahf test cmpsb push xchg movsl lea pop mov movabs std sub mov xor xor sub push xchg iret cld cmpsl xchg (bad) pushfq pushq (bad) fidivr cmpsb jg sub ja movsb push rex.WR insl mov stos pop jns push sub xorl cmp xchg (bad) cmpsl jae movabs (bad) adc sti rex.RX fidivr es movabs or mov xchg sub jge (bad) pushq scas stos (bad) icebp notb sbb sub hlt xchg (bad) rex.WXB (bad) fisubr (bad) push scas rcrl (bad) outsl lea xchg and cli js push xor loopne sbb adc fdivrs (bad) mov div in sbb and lahf shrl lods mov je clc rex.WX mov out negl pop (bad) movsb fs sbb faddl hlt rex.R (bad) pop (bad) sub xchg sbb (bad) (bad) loope cltd fwait (bad) (bad) (bad) push je jbe mov ficomp and mov sbb pushq (bad) imul rorl shrl outsl sub outsl iret (bad) int3 (bad) fcmove rex.WR (bad) cwtl (bad) push loopne decl adc cltd xlat je mov pushfq ficoml or sub (bad) xor mov rex.WX push or rcrl mov jae lret rex.WR rex.WRX pushfq (bad) dec or cmp enterq in xchg rex.WX xor enterq (bad) ja (bad) push rex.RXB mov movabs out (bad) je adc ja and sti adc mov (bad) and (bad) mov mov (bad) mov mov movabs xlat mov pop (bad) lods xor add (bad) jne (bad) in sbbl adc mov cmc or mov jp mov cmp (bad) movsb ds cli frstor mov fdivr jno add or (bad) cwtl sbb rex.B rex.WX popfq xor rolb (bad) pop and cmp rex.WXB (bad) pop cmpl out jp cmp rex.WRX xchg lods sub adc int and (bad) sbb adc push lea (bad) iret (bad) mov add rex.RX pop sahf data16 or xchg jae loopne add lods jb cmp (bad) clc mov or sub add sbb movabs mov sub rex.WRB sub (bad) lods xlat test jb (bad) xchg mov or (bad) test (bad) (bad) xor xchg movabs fcoms clc jbe lea jl sub (bad) callq push (bad) rorb mov add xorl pop fucomi jrcxz sub test sbb jge rex.X adc (bad) je mov cmp mov (bad) imul cwtl lret xchg sub xchg insl je and sub fmuls xchg test and rex.WX test xchg rcr jp xchg cmpsb (bad) js push roll lods or std mov (bad) (bad) test adc jbe ds sbbl cltd adc mov or mov in jl push clc and insl lret pop rorb (bad) rcrl outsl test std retq (bad) movabs ficompl jrcxz (bad) rex scas or and and cld rex.WR push mov outsb in repnz data16 (bad) (bad) jmpq rex.WRX sub push imull mov xchg add clc mov hlt pop (bad) (bad) insb push rcrl mov adc rex.WB (bad) push xlat sbb (bad) push sub ficom repz (bad) xchg outsl fs (bad) lea rex.WRXB jrcxz (bad) xlat (bad) pop jg icebp mov jmp (bad) adc rcll pop movabs pop (bad) mov xchg outsl jmp cwtl xlat idivb rorl xchg mov (bad) mov jno icebp xchg (bad) lahf (bad) mov xchg mov repz (bad) xor rcrl rcrb roll cmp rex.WXB mov sbb cmp loopne pop xchg or ja (bad) stos (bad) adc xchg movslq pop jnp (bad) xlat in movsb push (bad) rcll add popfq outsl divb and lock sbb movabs mov lea sahf adc pop (bad) mov rex.X jbe (bad) jnp movabs sbb (bad) (bad) mov sub xor jg lods jmpq rex.B sti gs jg fwait lahf fsts callq or (bad) out mov push (bad) jg (bad) (bad) cli (bad) push lods rex.RXB fisub xchg or rex.WRB pop sbbb (bad) cltd (bad) je (bad) and out outsl jno (bad) sub add addl out pop rolb mov lahf pushfq mov imul outsb cmc jne (bad) rex.W pop shl ds rex.WRXB (bad) xlat rex.RXB xchg movabs adc fcompl sub sbb jnp sbb (bad) mov xchg data16 (bad) loopne movsb jle retq cwtl jno enterq movslq outsl jno maskmovq notl cmpsb loope ficomp out jmpq (bad) scas ja mov rex.WR rex.XB mov (bad) xchg push (bad) mov leaveq fisubr rclb outsl push mov int3 xchg sar add adc je loope push cmpsl adc outsl subl xchg add cmpsb stc pop mul mov jb mov cmpsb mov retq xchg push movslq in movabs jmp xchg gs add out lret (bad) mov jbe (bad) rex.RB cs rex.XB cltd (bad) rorl mov or in (bad) sub sub rcll hlt or and xor (bad) push insl loope (bad) loope mov repz xchg adc (bad) (bad) cld (bad) scas (bad) cs (bad) rex.WRX movsl jrcxz jbe jg pop loope ja xchg jo or jbe mov (bad) jne adc fdivl jnp mov lea vxorps xlat jnp int mov cmp mov (bad) xor movl (bad) fistl outsl por (bad) sbb (bad) stos shll pop jle pop int xor fsubrp mov jns sahf pop mov xchg pushfq (bad) rex.WRXB (bad) movsl (bad) adc adc cmp sbb (bad) out xchg je (bad) movabs sbb adc roll movsl popfq adc fcoml rex.WRXB lea adc xchg es jmpq mov cwtl (bad) divb rex.WR scas xchg jbe mov and rolb cmp or mov rex.WXB xchg (bad) add jae or (bad) push jns (bad) (bad) xor movabs stos (bad) mov and (bad) rex.X jo movabs xchg mov in add cmp pop cld out insl sbbl ds xchg (bad) outsl ja popfq add (bad) lahf add mov sub iret jo or (bad) (bad) jl mov xor pushq (bad) outsl mov pop push retq mov ror and sub and rex.WRX in (bad) rex.X cwtl jrcxz sub cmp sbb jrcxz (bad) jbe cltd (bad) cmpsb xchg sets pushfq jrcxz jo or sub (bad) movslq (bad) pop (bad) jle mov xchg (bad) outsl xlat jge mov (bad) (bad) xchg xchg push xchg ja (bad) nop outsl xchg xchg (bad) mov add shll fsubl repnz cli xchg xchg lods sub mov xchg out mov pop xchg (bad) (bad) pop (bad) fisubrl and loop jl sbbb (bad) jne (bad) retq mov (bad) jl fs (bad) jle (bad) sbbb rex.WRXB mov (bad) ja (bad) outsl imul (bad) mov xchg pushq pop inc sbb lods push (bad) add (bad) pushq (bad) movsb jns (bad) mov add outsl (bad) (bad) mov not push shll push je movslq cmpsl out jae (bad) setns (bad) (bad) xchg xchg xchg (bad) and push mov callq movabs jmpq lret xchg (bad) cli push rex.WX (bad) movabs xor adc js mov jnp rex.R adc fidivrl lea mov adc out add fimull and jg mov rex.WRB shrl icebp mov pushfq rex.W lods rex.RB idivl jnp lods fistpll cmp and jae sub cmp jns mov (bad) pushq scas insl stos and (bad) enterq and bsf or jb lods xor sbb adc add rex.WB jle jmp scas and (bad) rex.WRB fs sbbl jg outsl mov cwtl mov out pop or add outsl rex.RX mov (bad) test fdivp lret repz int in std mov or subps cmovg cli out out outsl (bad) (bad) (bad) mov out sbb (bad) mov adc es (bad) mov outsl jno cli push push sbb mull xor iret (bad) stos sub (bad) (bad) or push cltd (bad) adc and xlat and (bad) xchg testl jl loop outsb mov sbb xlat push out lahf jmpq jmpq xorb xor or and movabs xchg xor pop mov (bad) xchg movslq out ja or in sahf jno movslq pause imul sbb xchg (bad) sahf (bad) mov add adc (bad) jbe (bad) (bad) jge push ror rex.WRXB mov mov add push mov xor pop js pop mov jnp (bad) movsl mov lods cwtl rex.RXB xlat (bad) test fldcw gs xor xchg (bad) divb notb adc push mov (bad) scas movslq xchg stos insb jl and movabs sti rex.XB rex.WB cltd (bad) sbb movsl rex.X addr32 push (bad) pop imul adc xchg int jle xchg out scas retq (bad) std (bad) rex.WXB movabs rex.RXB jns xlat push add lock adc insl sti (bad) jmp (bad) rex.XB je es scas mov or pop xlat je,pn icebp stos and (bad) (bad) iret lahf (bad) iret mov rex.WB rex.WRX mov and (bad) out jne cmp sub imul xchg popq mulb (bad) (bad) sbb icebp sahf popfq pop fmuls fcmovb jl rex.RXB rex.X cmp rex.R mov outsl pushq sub jg int sub loope (bad) pushq out out ja sub mov repz xchg cmpl adc cld cmpsl push loop faddp (bad) iret mov insl lret sbb cld xchg adc (bad) cmp cld notl pop out add scas out mov fildll sbb (bad) cmp (bad) por mov movslq mov pop add mov (bad) roll (bad) mov push adc (bad) mov rex.RXB (bad) std (bad) mov jg adc pandn fsincos mov pop (bad) repz xchg sahf iret mov scas xchg mov scas push setnp mov xchg imul lea jne outsb rex.WXB retq movabs fisttpll outsl pop xchg rex.WRX ss xor js cmp (bad) (bad) mov ja (bad) jb scas decb movabs mov (bad) std (bad) (bad) lea jg (bad) test lahf mov mov mov imul mov repnz sub ss rex.WR xchg pop (bad) adc pop mov mov jb rex.WB (bad) sub (bad) pop (bad) push (bad) jg pushfq push jmpq sbb (bad) pop out (bad) sti rorl cmpsb add mov rex.RXB sbbl (bad) (bad) rex.WRXB lods xchg pop data16 or (bad) mov (bad) push sahf movsl xchg mov and push mov test iret mov imul icebp pop je add jbe (bad) popfq sub movsl mov (bad) rex.RX movabs shll rex.WRX vmovaps (bad) (bad) cli std jrcxz xlat test rex.WB jno cwtl loop cmp cli rex.RXB rex.WRXB push leaveq (bad) (bad) loope addr32 jns cmp mov movabs jrcxz add mov and sarl cmp sbb adc jnp cs and pop je mov adc imul cmp scas rex.WRB xchg cltd shll pop cmpl (bad) in rcll push or (bad) (bad) sub stos pop xlat lret movabs rex.WRB repz xchg ficompl fldt pop add cmp fwait pushq gs jmpq retq movsb push sub lret outsl jl xlat lods movsb pop and push sbb sarb fisttp sbb outsl mov lahf (bad) in fisubl add addr32 jrcxz (bad) iret rex.WRB (bad) lods cld push sub rex.WRXB sbb mov xchg add lret ds mov sub leaveq jnp adc sahf or rex.WX movabs xor pop sarl test outsl cmp xchg pop sbb imul jnp pop rex.RX pop sub mov (bad) pop adc xchg sbb cmp orl (bad) jrcxz repnz lahf xchg (bad) cmpsl mov icebp add shl int jne (bad) retq lahf (bad) (bad) movl mov cmpsb mov movsb (bad) mov xchg rex.W (bad) (bad) cld rex.W ror rex.B sub sahf enterq (bad) (bad) and xor cmp sub sahf lret (bad) cmpsb (bad) test adc mulb pushq adc jnp mov (bad) sbb ror push or sub xor sub mov jbe jle movsb jl or lea mov cmp or xchg addr32 fstl sysret repz (bad) sbb xchg jrcxz add fstl adc ja sbb lods pop rcll rex.WRX mov mov fwait out xor mov (bad) cs jo (bad) je outsl cmp pop (bad) mov (bad) xchg and mov add mov mov pop xchg rex.WRXB outsl nop fucomip (bad) cmp or (bad) sub jo jg adc (bad) sbb sbb sahf (bad) xchg imul xchg ficom pushfq rex.W loop mov stos jle (bad) in jae cwtl (bad) sbb and mov mov mov jg jg (bad) (bad) rex.RXB cmpl out shr xlat fldt (bad) sbb jmp imul (bad) cmpsb adc lar push mov mov push cmp ficompl cmpsl (bad) sbb rex.WRXB xchg rorl je mov (bad) xchg rex rex.WX movslq and (bad) adcl iret rex.XB fisub rex.RB ds mov xchg (bad) (bad) gs or mov cmpsb (bad) lahf popfq in mov sti hlt pop imul jbe in std mov rex.RB rex.XB add jmp rorb pop jmpq xchg iret rex.RXB sbb fsub xchg loope jle push popfq in imul adc idivl jno (bad) cld (bad) xchg xchg adc adc jne js rex.WRXB insb int (bad) cmpsl insl fstps mov outsl mov imul and mov es rex.WRXB rex.RX fwait jle vpcmpgtb (bad) mov adc cs cli movabs push sti push (bad) (bad) rex.B in mov pop in cld or mov add (bad) cwtl ss ja (bad) sbb movabs es xchg rcl add sub adc imul ja mov xor xor je lods outsl xor rex.X rex.RXB imul outsl adc rex.W jmpq push sub gs cli rex.WB mov xchg lret and loopne xor jge cwtl sbb mov popfw loope pop xchg pushfq (bad) mov jmp xchg adc xchg mov sub subb (bad) sub (bad) rex.WXB (bad) xchg (bad) (bad) cmc cmp sub outsl jae (bad) fwait push iret lahf testb mov (bad) xchg (bad) pop pop mov or xchg push (bad) mov (bad) imul sub push popfq (bad) mov xchg enterq xchg rorl out bswap outsl fsubrp (bad) mov cmp jmp sbbl lahf push rcrl pop or and adc fidivl mov sti mov adc mov and shll and pop (bad) xor fistp rex.WRXB lods outsb rex.WXB (bad) test mov callq xor (bad) outsl movabs (bad) mov rex.RX push test (bad) pop pop sub xchg adc sbb and pop movabs imul cmpsl (bad) (bad) (bad) (bad) (bad) mov es xchg enterq jae sub shr scas (bad) mov cmp sbb sub scas rex.WX add (bad) rex.XB callq frstpm(287 push rex sbbl paddq sbb mov out out and fstpt (bad) pop jmp (bad) cmpsl std test mov xchg or (bad) mov (bad) jb mov jge (bad) nop xchg xlat sub incb js and movabs mov iret mov iret stc or and fisub cltd mov movsl rex.RXB (bad) out and sbb adcb data16 rcrb adc popfq in imul (bad) xchg mul pop pushq out (bad) xlat rclb jmp shlb sahf mov rex.RX (bad) sub lods xchg rcrb lea xor cs retq rex.WRB pushq or mov sbbl (bad) (bad) nop push add out (bad) mov pushq xchg outsb addr32 test jmp rex.RXB rex.WXB or xchg movabs (bad) mov sbb sahf jb adc (bad) cmp (bad) mov pop roll pop (bad) data16 mov (bad) cs rcrl ldmxcsr add out pushq (bad) fldt sub sbb (bad) sbb or jnp sarb sbb in sahf nop adc data16 shll loop roll fwait xor rex.WR outsl fstpt test rcl movsb mov and xor lahf add mov lcall (bad) mov add mov repnz sub xchg in or lea jbe push (bad) int pop and xchg xchg (bad) sahf (bad) add rex.RB pushfq movsb cltd out lret sar loopne push shlb xor stos iret fldt lahf adc fisubl mov imul sbb jns (bad) sbb movsl sahf xchg (bad) mov cli movabs xor adc fsubl cmp sbb int mov pop mov pop or int3 pop popfq xor pop cs push out movabs (bad) cmc or jp nop sbb in sub (bad) loopne (bad) jle stos (bad) pushfq add lea or mov sbb mov pushq and xchg adc sbb add shrl nop orl (bad) (bad) cwtl (bad) sahf (bad) rcrl mov or xchg movabs nop mov orb jl iret xor jnp adc xchg shl jo mov cltd std cwtl ror push cmp mov sahf mov mov adc jnp (bad) xchg (bad) data16 (bad) in rex.RXB or jl movabs add test (bad) sub cmc xor iret and cmp rol (bad) (bad) sub add mov fnsave rcl movsb sub mov rcl ss add pushq scas outsl mov xor (bad) test rex.RB test fldl rex.X (bad) mov (bad) loop jae movabs mov mov xor and enterq xchg addr32 (bad) (bad) and or (bad) sub scas rex.XB xor (bad) xchg (bad) stos out movslq push (bad) mov jmp xchg (bad) sahf pop pop pop (bad) xchg stc nop negl gs cltd ss rex.WRXB jne mov out rex.WRXB sub pop adc es jrcxz (bad) mov rex.WRXB (bad) mov mov mov xchg sahf add adc mov or fcmovb xchg sbb loopne movabs xor xchg pushfq addr32 imul (bad) rex.RX lea jg adcb leaveq (bad) jp ficom lods (bad) mov (bad) retq fcmove push rex.XB scas or pop (bad) cs cmc rex.XB rex.WXB sbb outsl xchg (bad) xchg adc mov jns sub mov mov xchg (bad) mov mov outsl pop mov fsts jbe iret scas mov addps mov test leaveq addr32 xchg push callq cmp cmp adc loop mov or ds mov mov xchg adc outsl shrl lods mov and (bad) je repnz std rex.XB jae (bad) sbb movslq jg (bad) xchg sbb ficom callq outsb mov movabs es xchg push cmp fsubl and sti pop (bad) mov je mov mov rex.WR (bad) or loope cmp xchg outsl addl xchg pop out (bad) jne (bad) jns ja adcl xor xor and xchg (bad) (bad) ja je xchg ja pop movabs movabs rex.XB xor imul fwait sub rex.WRXB or (bad) ficoml fsubrs stos (bad) jrcxz mov (bad) mov (bad) loop xchg (bad) (bad) scas (bad) mov setae test fildll (bad) movb mov ficomp jp repz adc and or rex.RB jo movslq in pop lods rex.R movabs (bad) pop xchg (bad) rex.WB pop popfq pushq pop jmpq and repnz fcoms mov (bad) (bad) (bad) fwait movabs jae mov (bad) rex.B pop pop callq sti (bad) mov (bad) mov lret (bad) or (bad) mov (bad) xor int mov movabs std push xchg jbe push jne xchg out or jg rex.WX outsl mov (bad) adcl rex.RB outsl addb cmpsl movsb cwtl push push cltd xchg (bad) mov adc cmpsl adc in test jle adc out xchg xchg sbb (bad) fildll cmp fdivrs sub (bad) enterq jmpq jmp adc pop mov rcrl mov add stos adc (bad) cmpsl add adc adc insb sbb mov je mov add and adc adc loope sub rex.WRX repz rex.RB sbb xchg clc sub js sbb mov mov (bad) xor iret adc rex.X ficom mov (bad) cmpsb mov adc (bad) mov orb fwait and mov mov test (bad) sbb xlat xchg jb xchg (bad) pushfq mov fimull xor pop movabs (bad) xchg (bad) xchg mov out push mov rex.WX icebp rcrl (bad) jbe nop mov xchg out mov xchg rorb or xlat lock movabs pop movsb loopne pop stc or and fild push jmp and fwait stos or xchg rcrl adc mov jbe fcmove ja or rex.B (bad) callq (bad) xchg sar add jo jge loopne adc out cmpsb adc fcomps sub add pop mov sub (bad) pop rex.WR adc rex.XB jge jrcxz pop mov xchg xlat or push pushq xchg and rex.WRX (bad) or jo rep add loopne rex.WR fisub icebp rex.X cltd test pushq pushfq adc jno rex.WRB cmp xor push rcrl callq jae sub xchg xchg iret (bad) (bad) movsb cmpsw loope movsb outsb sti (bad) mov in (bad) pop xor pop and xor ja xor mov lea (bad) scas push gs jrcxz adc mov lret push movabs mov or rex.RXB es (bad) sub (bad) jns imul (bad) (bad) pop imul (bad) cmpsl shrb (bad) xchg leaveq outsl out (bad) je cmp sbb int3 repz adc sarb xlat sub (bad) sbb outsl loop negb xor movslq divb outsl mov rclb push (bad) mov imul gs and pop in mov mov ss jrcxz jmp (bad) or (bad) retq xor mov pop callq ja jg enterq adc (bad) jnp or (bad) sbb add jrcxz push (bad) mov mov sub scas je xchg fstps and and xchg jae or je or retq cwtl pop sbb (bad) adc fmul hlt cmp (bad) rex.R xchg push (bad) mov movabs add (bad) mov imul lea (bad) (bad) decl outsl mov cmp data16 in rorl (bad) rex.WX pop (bad) xchg scas pop pop (bad) mov lods adc mov lret pop cmpsl rol (bad) stc cmpsb (bad) (bad) frstor mov jno pop sbbl mov andl jg or sub fidivr pushfq push pushfq pop rex.X adc mov mov jg movsb sbb push decl (bad) xchg (bad) rcrb nop add mov clc scas ficompl pop jge std jae vpminsw out rcrl xchg int mov cmc ss sbb (bad) mov scas addl movabs rex.RXB sahf movabs jbe (bad) and xchg push rex.WRX mov push (bad) not xchg rex.WRX rex.XB jbe sub lret pop xchg out jp (bad) int3 (bad) mov xchg adc frstor int movabs and outsl cltd mov rex.R cmc jrcxz push lahf cmovne data16 popq and stos (bad) retq rex.R mov pushfq (bad) lea xorl pop mov (bad) insl (bad) or (bad) lret mov jbe xor imul (bad) lahf (bad) xchg cs (bad) shlq xchg rolb (bad) repnz cmp outsl outsl mov (bad) sbb (bad) gs xor push sub rex.RX (bad) scas (bad) (bad) fcmovnbe (bad) (bad) out std (bad) movsl movl xchg movabs addr32 int3 adc mov or callq xor jg clc (bad) movsb pop stc leaveq mov xchg outsb in (bad) mov and adc lods out xchg outsl repnz xchg testl adc (bad) jae mov add push sbb lods iret shlb (bad) callq mov mov xchg and cqto (bad) cld (bad) and decl xchg sub xchg mov xor mov (bad) mov push mov pop (bad) (bad) pushq (bad) cwtl imul push out mov jno xlat adc or add data16 callq jnp adc fisttpl mov ficompl jmp rex.WRXB mov xor stos mov add cmp or (bad) scas jge (bad) mov cmp (bad) and (bad) retq popfq add mov (bad) rex.WRX rex.WRB je outsl and (bad) fisubrl int3 pop pop hlt cmp xchg loope ss mov or xchg mov xor jrcxz jl iret in lods rex.RXB outsl adc rex.RB pop fldl pushq and cwtl rex.WRB pushfq rex.RX cld xrelease sub lods mov cmp mov jnp and mov stos xchg sub xchg and mov cltd lahf mov adc cli and xor jp xlat jrcxz movsl xchg jg retq out jmp mov (bad) (bad) addr32 imul jg sarl hlt popfq rolb xchg leaveq push add (bad) sbb fwait paddusw fs pop retq fucomip loop mov xlat mov or jae int3 or xor sbb hlt xchg sbb adc (bad) and rex loopne xchg pop lods sar movslq je mov mov add insb mov cmp xlat mov (bad) cmpsb rex.WRXB sub sahf outsl in (bad) and cmpsl rcrl (bad) or imulb mov jl maxps ja outsl jrcxz movsb or sbbl rex pop (bad) or cmp (bad) push adc (bad) sub scas xchg (bad) fisubrl mov jle (bad) data16 idivl mov jle pop fdivp je stc push mov pop cwtl push fildl shll retq in retq rex.WRB rex.RX pushfq mov cmpsl fwait (bad) in test out (bad) (bad) loope outsl (bad) and shl int3 sub cmpsb rex.WRXB rex.B fwait (bad) (bad) mov adc out ja (bad) push xorl xchg push rex.B mov (bad) cmc (bad) xchg mov push jb movabs rex.WXB rex.WRB rex.WXB adcl outsb and (bad) js mov add rex.WRXB lret xchg or (bad) outsb je sbb pushq or movsb mov nop adc sbb jo icebp (bad) rex.WRXB xchg movsb orl fnsave outsb repz (bad) mov cmp xor pop pop mov cmpsb xor jbe mov out fs test fucomi mov popfq mov rex.WRX shrl jge xchg adc (bad) fldcw jne or jbe mov cmp rex.WX xchg clc movslq sub cli pop fnstenv rcpps (bad) adc and xor jge mov popq fstps jbe (bad) mov add (bad) ja adc adc int3 (bad) pop stos mov and stos jno cmpsl rex.WX rex.WXB (bad) popfq or and cs rex.WXB pop mov xlat int3 mov orb adc imul sbb stos xchg fwait and xor mov mov loopne push sub andl gs movabs sub leaveq jno int rex.WX andb std (bad) mov or (bad) xor sbb (bad) retq (bad) loopne mov mov mov (bad) stos test (bad) sbb lock add leaveq sbb outsl rex.XB mov add (bad) push cmp push lods mov sub cltd mov sub pushq lea jmpq mov rex.W retq fdivs cmp mov outsl rex.RB rex.WRXB fmull callq and mov xchg retq (bad) repz mov (bad) pop and or mov mov or out push loope pop pop sub cli jne addr32 popfq jrcxz (bad) outsl lea (bad) ds rex.WXB rex.B repnz (bad) jrcxz and (bad) popfq add jg cmpsl pushq std jmp mov emms add clc (bad) (bad) bswap (bad) pop sti (bad) rclb jle rex.WXB out xchg jbe imul lock mov mov icebp and mov ficom adc sbb sbb push adcb cli cs xchg xchg xchg cltd outsl mov mov mov rex.WXB (bad) scas sub (bad) mov (bad) mov cmp (bad) add cmp andl push mov (bad) and je sarl fistp jg out xor push rex.RXB sub adc sbb cmp mov jg lret retq (bad) in out (bad) sub (bad) mov loop jnp leaveq (bad) mov roll sti and popfq mov sbb and out outsl rcl mov nop or pop je mov rex.RXB movsb jmpq data16 (bad) (bad) addr32 sub (bad) adc rex.RX xor movsb movabs cltd jmpq mov and xchg adc pop fdivrl mov and mov (bad) in mov xchg (bad) movsb mov mov cld push rex.WRXB push jns in sbb ds sahf (bad) adc movsb rex.XB (bad) retq outsl mov mov (bad) movabs rex.WRX cmp jae cli int (bad) retq (bad) fsts jg jrcxz pop int loopne imul jl movabs (bad) and push push (bad) adc (bad) fist (bad) push (bad) jae pop fldpi mov (bad) push adc or movabs adc mov push movslq fstl mov add xchg mov data16 jae push imul (bad) (bad) rex.WB lock cmp test (bad) ds adc sbb lahf sarl adc xchg or outsb (bad) and retq insl jne xor xchg mov sbb rex.R jp roll or ror cld (bad) adc enterq pavgw loopne roll jrcxz mov (bad) xchg mov or (bad) mov pushfq (bad) (bad) mov (bad) cmpsl fldt or mov nop rex.WX fwait (bad) xchg sbb mov pop sbb iret mov mov mov (bad) pop movslq xorl (bad) mov mov imul xchg (bad) sti movsb pushfq in mov ficomp jge adc xchg sbb mov and and xchg xlat mov stos adc cmc rex.W rex.WRX (bad) outsl in sub mov pop fwait xor lret stos or push lods rex.WXB xor (bad) xor xchg adc or xor fisttpll or jrcxz test sbb cmpsl mov adc mov (bad) lahf cmpsl (bad) fwait shll outsl mov insl mov test (bad) lahf xor push nop add pop rex.WRX in sahf jrcxz lods rorl out js rex.WXB xor and (bad) xchg in nop and mov adc stos (bad) jns imul xchg outsl (bad) jns roll mov outsb pop je cmp adc nop nop sub stos insl cs rex.RX rex.WR (bad) (bad) hlt pop mov lock mov push xchg stos fidivr (bad) stos fld adc leaveq mov (bad) je,pt (bad) mov movabs mov mov and mov std mov jbe (bad) lret jle sahf xor shrl sahf or (bad) sahf rex.XB cmpsl add lret push cmpl rex.RB xchg scas add and ja xchg (bad) fwait add (bad) push loopne rex.B shlb (bad) xlat cmc cmp (bad) cmp xchg (bad) or (bad) xlat lods xchg decl incb sbb rex.WRXB xchg xchg pop cmc sarl (bad) mov data16 movsb rex.RB mov (bad) (bad) push fwait cmp in mov add je sti xchg outsl sub (bad) xlat rcll imul scas rex.WRB (bad) (bad) pop cmpsb (bad) xchg (bad) nop (bad) and loop sarl int3 icebp (bad) mov or xchg insl sbbb sub mov push jg pop (bad) rex.WRXB (bad) mov in mov rcrl mov retq jne cmpsb (bad) and or test mov xchg rex.WRX xchg adc sub cwtl cmp jno scas int3 (bad) (bad) mov jrcxz sub xchg movabs jno in mov sahf add out rex.RX jnp cmp pop push jns cmp mov xor sti out push adc test add sub rex.RB (bad) test rex.RXB pop rex jne xchg movabs push cld test and add sbb and vcvtpd2dq sub mov pushq loope sti insb or xorl out (bad) sub jb pop int3 lock jge test sbb in stos and (bad) cmc xchg rex.WB xor mov out (bad) pushq pop clc xchg repnz mov ja and sahf cmp sbb xchg mov js in push ja xchg sahf rex.RX rcr mov jb popfq (bad) sub xchg repz (bad) mov (bad) sub (bad) movabs pop (bad) (bad) repnz sub mov sub push xchg out cmpsl out popfq (bad) cmpsb pushfq mov sub jno xchg sbb mov retq lock stos mov scas or (bad) mov rcll (bad) (bad) sbb movabs cmp cmp lods popfq mov stos pop lret xchg imul out cwtl mov ja rex.RB xchg xchg je push fistpll lahf out mov xchg jg rorb (bad) (bad) mov jg (bad) xchg jns pop (bad) jae pushfq leaveq adc (bad) and popq lahf mov rex.R (bad) (bad) ja cwtl xchg (bad) cmp push (bad) rex.XB movabs stos pop (bad) xlat xchg fdivp xchg adc scas adc xchg fwait addr32 xor or xchg xchg xchg jmp xchg nop mov orl test mov mov xchg mov mov xchg lods lods movabs mov ficom fnop iret (bad) xchg (bad) (bad) sub rcl (bad) (bad) mov int3 retq (bad) xchg fcmovnb rol xchg (bad) std cld repz stc clc out xchg div hlt lret repnz lock out in in jrcxz jmpq in sti loop loopne movabs repnz mov push cmp push (bad) mov xchg xor retq sub int3 movabs nop and rcl fiadd lea int cmpsl cmp pushfq (bad) fdivp mov out lret idiv jb or jg pushq rex.WRX bnd (bad) mov scas jrcxz sti (bad) out rex.X lock push stc scas xchg mov fdivrl (bad) lods stc std rex.R je pop push jb cmp lret pop mov xchg (bad) rex.R mov test mov add pushq enterq jo (bad) mov mov mov iret (bad) shll sbb (bad) add rolb sub stc push xchg pop imulb or imul (bad) in push (bad) clc jnp or cli (bad) mov decb retq imul cli (bad) sbb (bad) clc out movabs rex.RB xchg (bad) add movabs loopne mov stc cmp out bnd (bad) add xchg xchg scas nop scas mov push in mov scas mov mov decb push movsl xor fisubrl (bad) cld roll sar mov mov (bad) lods (bad) pop mov xchg xchg add sbb pop adc scas xor shrl cli and retq sub rex.WRX lret jmpq pop sbb cmpsb fucomp add out cli (bad) repz fstpl xchg xor sbb iret pop lods test outsl stos callq lahf in adc (bad) mov lahf or popfq (bad) jmpq rcrl cmp push rex.RXB push movabs mov sub jl imull test add mov adc fstps sbb repz pushq data16 sbb jnp rex.WRXB cmpsl mov sbb pop jmpq push mov push and (bad) mov jrcxz (bad) fcompl pop rex.XB rex.XB (bad) xchg lods cwtl mulb callq mov scas cmpsb rex.WB rex.WX (bad) cmpsl lahf rex.WB push gs sbb lahf lods mov (bad) jp lea or jns add (bad) stos and lods rcr pop jge rex.WRB add fdivl mov scas xchg xchg cmp faddl (bad) hlt cmp lods (bad) fidivrl mov jge lahf movb xchg cmp (bad) fstpl out mov in cmp xchg (bad) sbb cmc mov (bad) in jl mov test xor rex.RXB rex.WRXB repz xchg (bad) lea adc (bad) insl adc data16 cmpb (bad) mov popfq jae mov mov xchg xchg mov int popfq rex.WRXB sarb pop sbb gs mov sub (bad) popfq fstpl jbe rcrl sbbb adcl sahf sahf adc out (bad) lea nop (bad) (bad) (bad) sbb sbb movhps adc (bad) (bad) or or incl add add (bad) ds cmp (bad) ss xor (bad) cs sub (bad) es and push pop pop pop push xchg pop pop pop rex.WRXB push push stos xchg push push push rex.RXB rex.WRX rex.WRB rex.WR rex.XB rex.WX rex.WB rex.W rex.RX rex.RB rex.R xchg rex.X rex.B rex jge jae jp js jbe je xchg jb jo outsb insl insb movslq data16 fnstsw fmulp mov mov xchg lret (bad) leaveq or or jmpq repnz out in cs repz mov xchg out pushfq jg mov cmpsb rex.WRB movabs cli cld mov xlat adc jmpq rex.WRB (bad) or add xchg (bad) lret ja out not lret rcr (bad) mov out xlat sbb cli std rex.WX cs icebp xor fisubr xchg testl out xchg iret xchg movabs iret out fsts lret popfq retq cli out mov jmpq cli rex.WRX sbb mov (bad) add fidiv iret xchg xlat xchg fiadd movabs fbld (bad) jg lret cltd sar cmc pop and (bad) mov jle (bad) lahf sub (bad) (bad) (bad) cmp xor jp jg adcl clc fnsaves iret movsl lret fcmove lods lods mov sub (bad) fsub fcomip lret cmc (bad) div movsb cmp pop mov or adc icebp and xchg rex.RXB pop mov pop cmp mov out in jg lods cmp sub iret mov mov out shrb fnsave mov out (bad) push sub icebp leaveq rex.RXB sbb and jb (bad) idivb vdivps std (bad) adc jle out or push (bad) rex.WX rex.WB adc mov gs mov sbb cmp (bad) (bad) fistpl (bad) notb add je mov mov xchg (bad) sbb fdivrp (bad) sahf mov mov mov lock or xchg push jmpq adc movabs pop (bad) fidivr iret iret mov (bad) repz jno jl (bad) mov movabs int3 jb (bad) retq or cmp fcomip iret in movsb js movabs (bad) (bad) lret rcr push adc mov (bad) rex.RXB pushq sub rex.XB mov test mov sub lods outsb adc pushq adc mov enterq shll mov (bad) (bad) mov mov mov mov jl (bad) outsl mov scas mov mov mov xchg mov mov mov clc nop xchg xchg xchg insb mov mov rex.WRB sbb (bad) add sbb xchg mov out xchg pop cmp xchg xchg addl movabs stc or movabs rex.WRXB mov cmp (bad) jg mov xchg rex.WRXB mov fbstp in mull orl (bad) out outsl mov iret lahf mov popq (bad) xlat push lahf xchg movabs fdivs rex.WRXB in (bad) cmpsb xchg (bad) pop lahf jnp imul mov rex.WXB in jae ja pop adc (bad) mov stos jae in push cmpsb push fwait cmp fcomps mov or in xor fadds loop fcomp mov xlat jae in (bad) lahf outsl mov fmuls (bad) (bad) cmovg jae in jg pop scas imul mov pushq callq sub fadds rex.WRXB in fbld jle (bad) fnstcw rex.WRXB (bad) mov sbb scas (bad) pushq (bad) cltd pushfq sbb xchg xchg fiaddl popfq (bad) sbb scas mov (bad) mov cmpsl jge insb jge jnp (bad) mov out jp pushfq insb out pushfq (bad) (bad) (bad) mov (bad) cmp negl (bad) in pop pushfq in loope lret andl sbb mov (bad) (bad) in (bad) out cmpps enterq cli insb jbe adc mov lods push out pop push sub mov cltd xor mov jrcxz stos (bad) ds out or mov sbb ds sub mov (bad) mov out test lret (bad) (bad) mov pop int3 cs clc pushfq fdivl sbb retq mov jp cmp (bad) hlt xor cmp xor jb roll mov movabs (bad) (bad) (bad) cmp test xchg cmpsl and divb callq (bad) xchg (bad) rorl sahf lret movabs pop xchg (bad) (bad) fdivr (bad) lods (bad) pop mov sbb (bad) enterq rex.WXB cmp adc xorl jg nop lods (bad) adc mov xchg (bad) ss jbe cmpsb jrcxz xor or fwait push pop mov rex.XB sbb rex rex.RXB ds fsubl mov rex.W (bad) jg (bad) sbb (bad) movslq movabs int3 (bad) mov jne (bad) lock xchg es jge ja lods movslq divl imul adc sub icebp mov movsb (bad) mov (bad) mov loopne or popfq loopne xchg xor and std push or sbb cs jg fcmovb (bad) fstp rcll shll rex.RB rcl (bad) jbe pop and jp enterq cmpsb clc lahf xchg cwtl pop xchg jrcxz or rex.RXB xor (bad) notb shl es cmp shlb mov jle jg faddl lret (bad) insb fs jno (bad) sub in out or pushq cmp leaveq push loop sar mov iret clc lret mov out (bad) iret or imul pushq and mull sbb (bad) push mov add push cmp xchg in jg stc lock mov sar std and cli rex.RB mov shrb clc movsl mov js push (bad) lahf out (bad) jrcxz mov (bad) (bad) fildl std xchg (bad) sub xchg addr32 fnstenv jae mov or xchg subl jne cmp ja movl push cmp (bad) xchg mov data16 xchg ja rex.WRB icebp rex.WXB xchg and sahf cmpsl (bad) jbe pop loop xchg pop repz or xor push (bad) xor xchg movsb lea sub rex.WR stos sub movsl mov mov sbb sbb or es (bad) (bad) setge leaveq xor jmp cmp fs xor (bad) or (bad) (bad) (bad) scas (bad) mov or rex.RX xchg hlt mov faddp iret repz mov xchg imul or out test in fnstsw stc out cli mov movsl and xchg lods xchg mov mov addr32 movsb orps and popq loope pop movsl lahf mov (bad) (bad) imul out jg mov xor out (bad) xlat xor repz out jo xchg jge sbb mov sub xchg push pop (bad) repnz add negb repnz adc in jg js sahf movsl (bad) push xor mov fwait cmp movslq fist cmpsb push xchg jns jae jge (bad) (bad) mov mov mov imul jns cmp rex.RB and callq push lea xor out cmp vcvtsi2sd mov in repnz popfq adc (bad) shrb hlt rex.WB xor mov rex.RX or mov out out mov std rex.RXB (bad) sub mov int data16 int cs (bad) add lods test fs mov decb xor lahf movabs sti sbb fiadd cmpsl xor add int test mov (bad) rex.RX rex.WR rex.X popfq movsl cmp fnstenv cli (bad) mov pop idiv fwait adc mov retq mov mov js mov or lret fnsave fcoms mov rex.WXB mov sahf imul fisttp leaveq pop (bad) mov xchg lahf rex.WRB (bad) insl ja int3 mov (bad) pop sub pop rex.RXB mov roll jb mov mov int mov (bad) jbe jrcxz cmp adc push idivb outsb out mov sti add (bad) cmc fistpll adc subl jne jg int cmp push icebp rex.WRXB iret out retq addr32 cmp scas jne xchg divb add fbstp scas rex.RXB rex.WXB cmpsl add (bad) (bad) cmp movzwl adcb lahf (bad) push xchg cmpsl (bad) (bad) cmp jge je mov mov iret outsb (bad) (bad) mov sti (bad) (bad) sbb (bad) fbstp pop test addr32 or add rex.WXB mov shr or mov push xchg fsubrl in sbb testl pop fwait sahf xchg xchg cmpsb inc mov js (bad) movsl int cmpsl movabs mov xchg ja rex.RXB push xchg out cwtl notl rex.WRXB (bad) xrelease xchg xchg or mov push mov (bad) pop insb jrcxz (bad) in stos (bad) movabs scas rex.RXB rex.WX (bad) mov (bad) repz (bad) (bad) xchg out xchg sbb (bad) (bad) mov lods (bad) xlat pop jno popfq fsubs jg adcb cmp (bad) in jmp movabs sbb lahf (bad) ds (bad) push xchg mov and retq mov push rex.WRX js jmp xchg pushq mov (bad) fstpl fnstsw xchg xchg sub mov xchg xchg push pop lods nop xor (bad) sbb add fiaddl repz mov enterq xchg sub ja rex.RXB push popfq (bad) (bad) mov and nop fwait imul (bad) rex.WRB sub (bad) mov xor rex.R cmpsb pushq cmp div cwtl iret loopne sub or mov fwait ja jnp xchg (bad) xchg int3 (bad) (bad) or push (bad) mov retq lods mov jae xlat lret leaveq (bad) rex.WRB mull mov divl jb mov jg lods mov push xchg retq cwtl mov loopne lods and mov mov xor addr32 ja rex.B xchg loop xchg xchg (bad) popfq retq mov (bad) and pop addl (bad) nop in (bad) rex.X xchg int3 cmp fwait idivl cmp cmp (bad) in jg mov push xchg repz mov push pop xchg mov sbb jg xrelease fwait add ja rcl cmpsl lahf xor mov (bad) jmp out mov (bad) (bad) retq sbbl cmp push xchg iret xchg (bad) xchg mov fsubrs mov xchg fcmove jmp xchg (bad) jmp xchg mov (bad) push fnsave (bad) mov retq xchg fwait test jg mov xlat scas xchg stos mov iret outsl test lods (bad) in (bad) addr32 xchg xchg rex.RXB push adc lahf shrl mov push cmp cwtl iret cltd xchg or mov sbb adc mov xchg xchg adc jmp mov mov xchg ficompl faddl xlat ja rex.RXB push popfq (bad) out negl lods xchg (bad) lea mov in mov cmp push xchg mov pop adc test in and push push jmp mov add and xchg pop fcmovne jg,pt adc and or adc sbb stc or imul movslq mov or xchg in (bad) rex.WRXB mov or mov xor rex.RB iret mov lea jmp leaveq mov std pop lahf cmp sub (bad) jmp mov lret jg retq push iret fcmovnb rex.WRXB (bad) (bad) sub and xchg jl lods sub outsl mov movl push int or add por xchg repz sub retq lods or out cli cmp sub add notl popq cltd mov xchg pop jmp (bad) out or int mov sbb and out mov cs pushq xor or adc add pop scas mov (bad) and xchg int or (bad) stc fwait jg xchg (bad) rex.RB mov repz rolb mov movabs xchg cltd movabs (bad) or mov jae test rex.XB mov or iret repz mov (bad) std xchg addr32 push pop adc mov (bad) pop cli (bad) xchg outsl fwait (bad) mov jae nop popq popfq retq jmp fwait adc lods xchg stos add fldpi (bad) js (bad) mov loop pop in (bad) jae mull sub (bad) imul out addl (bad) jg cmp mov xchg stos xchg repz movabs pop sahf cld pop jg jrcxz roll xchg jg repz sti xlat (bad) (bad) xor xchg (bad) out int3 jrcxz cwtl int3 cltd jg ds cltd rex.R lods xlat fs (bad) in outsl mov mov rcl xchg xor mov push (bad) addr32 (bad) mov jg (bad) ja (bad) popfq int mov push mov out mov mov push (bad) (bad) shr rex.RX adc ficom jno cwtl xchg iret icebp fstl neg (bad) sub xchg xor (bad) sub movb xchg xchg mov pushq mov xlat mov xchg out mov incb je mov (bad) movabs (bad) mov and and rex.WRXB lock mov movabs cmp ss cmp rcl xchg push cmpsb pushq xchg sub cmc jmp retq (bad) pop xchg rex.RXB add mov cmpl jnp movabs xchg mov push xchg test scas lahf gs push ficompl pop (bad) jrcxz pushfq mov jmp lock retq xor cmp fwait xchg push xchg mov sbb cmpsb loopne pushfq sub mov pushfq (bad) xor jg push sub adc (bad) (bad) (bad) mov xor mov lods (bad) imul (bad) loopne sbb add int3 cltd orl mov pop mov xchg addr32 jrcxz jg fchs nop (bad) mov jae cmp rex.XB push ja jrcxz pop xchg jnp mov (bad) mov psrlq adc (bad) ja adcb popq cmpl xlat mov xlat xchg cmpsl ficoml jmp add xchg (bad) adcl xchg lea or adc rex.X scas mov and jg stc jrcxz (bad) out (bad) movabs (bad) xor and test retq imul xchg xchg (bad) (bad) or rolb out jmp stos movslq (bad) xlat push (bad) lea popfq adc retq jns mov rex.RX xchg movslq fs cmp and (bad) (bad) push rcr lods (bad) (bad) (bad) loop mov decl es mov xchg (bad) mov pushfq push xor jg (bad) mov push mov rex.RXB jnp mov cli iret xchg imul rex.XB vmovntps xchg cmp (bad) (bad) xlat (bad) std sub outsl jne cltd mov divl rex.WXB nop subl xchg mov push xchg cmp es push cmpsl fucomp addr32 (bad) ja lods pop sahf mov (bad) repz mov (bad) (bad) xlat retq xchg sub sub (bad) xstore-rng cmpsl rex.RXB (bad) jo (bad) movabs jrcxz sub cmp outsl and (bad) xlat (bad) scas repz rex.WRXB mov idivb sti rcll mov adc iret outsl mov scas xchg repz (bad) lods imul jg add xchg (bad) lods scas mov out xlat fidiv imul cmp movabs (bad) jrcxz (bad) (bad) mov retq xchg jrcxz and scas or (bad) iret push movabs (bad) cmpsl js (bad) movabs in retq pushq or mov (bad) movabs xchg or sbb rex.RXB mov mov jmp lods mov (bad) iret sbb jg xchg repz add lea stos rex.XB or xchg (bad) repnz push jns pop mov xchg (bad) jmp mov (bad) mov cmc rex.WRXB lret xchg pushq add mov iret push or mov xchg orl sar (bad) mov cmpsl movsl jbe and push fwait jg (bad) xchg std lods (bad) push fistp xor (bad) mov (bad) jmp cltd push (bad) pavgw mov fidiv nop lahf in xchg (bad) push xor lods (bad) out jnp (bad) xchg fistpl xchg nop and jg adc push lods jmp xor rex.WRB (bad) mov popfq movabs (bad) retq lea lahf mov xchg fisttpll rex.RXB jae mov rex.RX jne mov insb xchg rdmsr rex.RXB fistl orl sar and ficomp (bad) rex.XB rcll imul scas mov sahf icebp (bad) jg push xlat sub jrcxz xlat repz retq movabs (bad) rex.WRXB vpmacsww callq pop rex.XB add sbb lret movsl xlat jrcxz rex.W in fcomi mov pop push xlat pop lahf iret popfq mov sahf mov test xchg lods mov jne fwait (bad) fimul leaveq out mov push addr32 cwtl ja rex.RXB fwait sahf mov (bad) add rex.XB repz rcrl jg movabs movslq iret (bad) jae xchg je sahf jrcxz mov addr32 imulb retq jnp sbb or insb out or (bad) rex.WRXB (bad) xchg insl sahf in rex.RXB imul jrcxz pushfq retq xchg rex.WRXB cltd scas retq adc jmp nop sbb mov pop jge xchg (bad) xchg mov xchg mov fwait (bad) and sahf (bad) mov push cmp negl add rex.WRXB lahf adc push xchg movabs imul (bad) outsb adc rex.WRXB ficoml int cmpl mov repz mov sahf scas mov movslq iret nop xchg pop xchg xchg fistl rex.XB xorl (bad) cld mov cmpsb out sbb xchg nop mov fisubr xchg lea repz add cmp add retq sbb (bad) or ja rex.RXB sbb mov add xchg jnp add int3 xchg addl cmpsl callq sbb xchg push test (bad) mov (bad) mov (bad) out repz or lret (bad) (bad) repz jmp add mov nop xorl lahf rex.XB rex.WRXB (bad) pop xchg in sub in jnp xchg mov (bad) rorb (bad) xchg int outsl (bad) (bad) movslq xchg jae out adc mov (bad) (bad) cmpsl or mov xchg (bad) xchg xchg pop (bad) insl out xorl movsl int xor retq adc mov xchg mov movabs test cmp xlat jmp push xchg sbb (bad) xchg jg cld cmp jmp (bad) sbb mov pushq test iret jmp (bad) insl xchg add addr32 mov loop hlt (bad) jmp (bad) ja or xorl xchg add jnp add scas sahf xchg xor or int jnp out std push xchg adc out jmp lret xchg out xchg mov push mov fwait mov mov mov je jnp xchg rex.WRXB (bad) (bad) notl cli jmp xchg jae fistpl jmp add (bad) xlat jae (bad) mov (bad) fwait mov subl (bad) mov shrl push xchg out jrcxz out rex.R vaddss push jle mov sarl add and mov scas repz mov and xchg sub pushq (bad) (bad) lea (bad) mov jp (bad) pop xchg (bad) push add sbb add sbb iret mov jmp (bad) fcoms movsl pop lahf sahf mov ja rex.RXB imul (bad) popfq stos push push stc (bad) mov fwait jo popq or pop lea mov rex.RXB jmpq xlat add fucomi popfq jae push rex.XB jrcxz repz retq fsubl mov mov nop (bad) (bad) mov sub test sub and mov es fwait sbbl sub jne popfq mov popfq notl (bad) adc sub cmpl stos lahf pushq adc rex.WXB (bad) mov stc xlat vdivss retq jo movabs adc jnp pop jb mov mov movabs retq rex.RB mov jmp fsubp mov (bad) xchg jnp mov adc sti sahf sub jle mov outsl xlat xor loope sti shr sahf jmp (bad) idivb push rex.XB repz jns xlat test mov (bad) cmp push and (bad) xchg or adc movslq lock mov (bad) rorb prefetchw adc in (bad) mov sahf rorb notl fild negb or xchg (bad) jg push mov mov retq fwait xchg mov rex.WRX xchg cwtl adcb pop pop (bad) add shlb int (bad) jmpq sahf cmc rcrl pop add cs xchg jrcxz cmp cmp xor and fmuls jns jnp loope cmpsl (bad) (bad) data16 insl stc (bad) (bad) adc outsb (bad) sub lea xlat in (bad) movsl rclb add pop (bad) loope and rex.WRB rex.WRXB loopne (bad) add mov fwait in fsubrs sbb or jae in rex.RXB ja adc movabs adc sbb jae in jno bswap outsl (bad) repz movsl cmpsb int lret adc sbb jae in movsb insl mov fsubrs rex.WRXB jae in add adc rex.RXB mov push (bad) mov jno (bad) push (bad) je lahf ds icebp pop (bad) flds jne notb (bad) cmp sub idivl rex lea test (bad) rex.R (bad) nop std movabs mov jp xchg fldt rex.X sub xchg cltd sub sarl outsb sub xchg adc (bad) adcl loop (bad) addr32 xchg and xchg xchg mov adc movabs in (bad) pop pushfq (bad) jmpq (bad) outsb mov xchg rex.RX add cmp out cwtl xchg rex.WRXB (bad) loop vmovddup sbb cwtl shll xchg jb (bad) cmp cltd mov cmpsl xchg in rex.RXB rex.WXB or mov xchg in js lcall and clc sbb (bad) imul rex.RB sbb (bad) (bad) mov (bad) push sbb lret addr32 push and sbb (bad) jl scas mov sar rex.XB xor (bad) cmp movl int out mov mov lods jp repz adc xchg cmp mov jl push scas (bad) fstpl (bad) xchg nop jle sbb test cmp movabs test (bad) xchg mov (bad) fs mov xchg nop push rex (bad) jmp gs fwait stos cmp xchg rex.RX xor mov mov cmp jmp data16 jo movslq retq outsl xchg sbb add mov mov xchg clc push fnsave cwtl cwtl lods sub (bad) mov loop mov sbb out jl out cwtl jle rex.XB cmpsl rex.RXB out sub adc mov cmp or fcomi rex.RB pushfq (bad) jb,pn mov (bad) out push sbb xchg sub in (bad) xchg jae (bad) pop xchg jmp (bad) cwtl (bad) sbb test rex.WR movsb mov jbe movabs clc lock sbb or sahf mov (bad) jge movabs adc roll xor mov add imul rex.WXB xor sub test push outsl lods (bad) imul push out xchg pop in or std movabs pushfq mov rex.R loopne popfq loop rex.WB xchg adc sahf jns (bad) stc (bad) mov pop pop mov je rex.X orb (bad) xchg and cwtl sbb retq pop (bad) sbb push lret rex.WRB xchg mov (bad) flds cmp lock xchg iret sbb add xchg mull mov xor stos (bad) jp callq jl rex.WX pushq xor shl xchg jle sbb ds out jno mov rex rcrb xchg xchg retq (bad) pushfq cmp or mov jo sbb xlat lock (bad) sub test jne loope lahf int addr32 sbb ja pop (bad) add xor sahf pop mov mov (bad) mov (bad) rex.W or fcomi push (bad) xor (bad) out sahf and sbb xchg callq mov xorl sti addr32 mov (bad) int3 (bad) addr32 lea movabs and xchg (bad) jmp (bad) sub rex.WRB rex.R mov (bad) rex.W and or add scas xchg pop add sbb lahf out xchg leaveq lea xchg pushfq rex.R roll fstpt out cwtl mov addr32 or xchg sbb xchg ds mov cmp xchg sub xor jmp pop gs xchg movabs lea cltd xor xchg xor ja mov xor loop xchg rex.WX idivb (bad) (bad) retq push mov mov add rex.XB outsl sti mov xchg sub xchg jg sub (bad) (bad) movslq lahf xchg cmp mov rex.WRB lret (bad) rex.WR test (bad) lret adc rex.WRB test out xchg shl mov sbb (bad) mov or jno xor mov iret mov jne stos std and gs nop divb xchg rex.WRXB out or loop scas out xchg add je (bad) jge xchg mov sub loop test mov out xchg stos sahf rex.RB movabs out push ds xchg test in cmpsb pop test sti (bad) adc xchg rex.WRXB hlt xchg jo addr32 pop lret xor xadd movsb sahf adc cmp sub xchg xchg sahf xor test xor and push std xchg (bad) jae popfq sub pop lret (bad) (bad) cmc push (bad) in (bad) fisttpll pop rex.RXB outsl lock xchg push int sub cltd fcoml xchg and out xchg fild rex.R jp rex.RB (bad) pop pminub es cwtl cmp mov rex.WRXB loope (bad) xchg sti add in sbb addl ss ja sub mov xchg (bad) add adc fdivr sub lods (bad) sub add xchg mov sbbb (bad) mov sbb jge test or insb rex.X lock (bad) (bad) and enterq (bad) pop add lock popfq sahf imul and loopne rex.R push cmpsl ja ficom je xchg clc fisttpll xchg (bad) rex.WRX addr32 in xchg (bad) mov sbb faddp rclb icebp adc rex jnp cltd cwtl push mov adc test orb xchg (bad) ja or cmpsb rex.X mov nop mov lcall adcb movabs cld leaveq rex.RXB xchg mov xor mov mov sub cli jbe xor test rorl rex.XB jns push cltd pop rex.X sbb icebp (bad) push loopne nop test (bad) (bad) sbb rol xchg icebp test adc fnsave pushfq sbb (bad) add xchg lock rex.WRX scas sahf fimull mov (bad) mov imul (bad) jle xchg or fs xchg callq (bad) (bad) (bad) (bad) pop lea mul mov loopne sti xchg add rex.WX cmpsl (bad) xor cmp retq xor cwtl out out out fsts rex.WRXB repnz rex.WX rex rex.X xchg jle push rcll xlat sub (bad) in (bad) mov push or stos movabs fwait test or pop repnz xchg cmpsl (bad) fcmovnu cmp cmp push stc (bad) mov add sbb and test mov movabs es or lods mov sbb xchg mov mov (bad) fwait cmp xchg xchg and (bad) mov (bad) rex.WRX xchg (bad) repnz scas loopne mov add (bad) push cwtl outsl or cmp add (bad) mov insl std mov icebp rex.WX movsb data16 (bad) cwtl (bad) nop mov mov mov jl cmp jo fwait add loopne fs adc mov sub pushq nop xchg (bad) sbb xlat orb sbb lret sahf (bad) xor movabs and (bad) rex.XB or jg outsb mov (bad) pop (bad) rex.WX fwait retq int xchg jge out hlt rcll jrcxz add cmp jp sbb or or movl cwtl mov ss rex.R mov fnstcw (bad) addl add scas jp xor rex.WRXB add sub test jbe cmp jg stc (bad) cld sbbl xchg (bad) cmpsb lods cmc pop (bad) add xchg notl xor (bad) gs movabs rex.X rex.WRB repz rex.XB jmpq test cs out loop xchg insb fsts (bad) es icebp data16 cmc rex.RXB callq imul rex.WRB xchg add xor add gs sarl xchg in push add cmc movsl loop sbb adc pushfq mov out adc and imul repnz outsb xchg mov fnsave jo cwtl xchg jg jle rex.RXB std xchg cltd (bad) add fistp and fdivs mov (bad) (bad) (bad) or pop cmc cwtl sub es jg xchg sbb fmull jrcxz out xor (bad) or xor (bad) xchg fildl je fcompl xchg pop in cld mov out jb add mov xchg sub (bad) movslq mov pushfq pop test repnz decl add (bad) (bad) (bad) rex pushfq (bad) negl xor mul jbe mov repz xchg pop cs (bad) rex.WXB test movabs adc adc push mov movabs xor jge imul jle cli jb or xchg cld orb xchg xor xchg xchg adc rcrl pushq mov sbb xor xchg cld outsl in stos mov addl movabs adc mov ss xchg cs xor ror xchg jg push (bad) adc or xchg (bad) (bad) (bad) test outsl icebp xor loope int xchg (bad) mov icebp popfq pop push push cmc sahf jno rex.WRB xchg sahf (bad) popfq and pop mov sahf test insb push nop xchg push and movabs adc es xchg pop pop xor fstps and fstl outsw pop mov out cwtl mov xchg (bad) (bad) popq and cltd leaveq sub (bad) shrl sbb out or test lret movsb mov adc ds mov pop cli rex.RB icebp (bad) pop pushfq fwait movslq (bad) rex.RXB mov cmpl sbb mov or push jns rex.WX out lods movsl fiadd std xor jno nop xchg xor cltd xchg (bad) mov mov out mov pop jl pushfq out sub (bad) adc ficoml movabs mov sbb or popfq insb int3 xchg gs add push jg mov sti addr32 adc insl imul lock push subb imul mov cwtl rex.WRB sbb xlat (bad) rex test fstpt sub repnz sub xchg insb movabs jmpq jnp cwtl jg stos mov callq cwtl rex.WRXB (bad) xor pop or or andl mov movabs adc and shr or pop (bad) mov rex.RB out sahf loopne xchg out fnstenv (bad) stos push ds rex.WR (bad) callq or rcrb rex.WXB push negl mov int (bad) mov cmp (bad) add (bad) xlat mov (bad) pop cmp rex.RB (bad) (bad) (bad) imul (bad) mov cmpsl jmpq fwait push cmp jp outsl mov xor (bad) (bad) fwait xchg rex.RB sub pop lods mov data16 scas loope movsl jae adcl sahf stos maxps xor (bad) sahf jmp push int3 loope ja,pt iret jg int (bad) mov adc loop rex.RXB xchg decl sub xchg (bad) jns pushfq (bad) repz iret jg (bad) mov (bad) cwtl (bad) jmp (bad) in xchg cmpsb xchg sub mov mov mov lea add fsubr movl int3 cmp (bad) sti add jg repnz mov out fwait in xor int3 cltd cmpsl mov and (bad) (bad) push sbb adc iret (bad) lea ds xor out adc sub mov mov rex.W jg mov adc jnp jge test push mov push rex.WRX rex.WRXB jae in xchg mov fsubrs mov mov movl packuswb cmpsb test mov lahf (bad) adcb std mov lcall mov fist cmp cmpsb ja in fadds jnp rex.WRXB rex.WRXB jae (bad) cmp xchg out (bad) sahf je adc rcrl pushq enterq mov stc rex.XB jnp adc rorb mov rex.B xchg sahf (bad) (bad) out mov cmpl (bad) (bad) lahf rex.WRXB adc jg xchg fmuls jae in rex.XB rex.RXB fwait stos adc rex.WRXB and fsubrs mov adc lret mul adc lret mov (bad) jae in cmpsl cmpsb scas (bad) (bad) cmpsb jg pop lahf addr32 adc (bad) (bad) mov outsb (bad) loope cmpsl int (bad) and push loope outsl or or clc xchg sub adc repz xlat adc jp xchg (bad) or mov ja or (bad) pop outsb out sbb int3 retq loope pop (bad) shl xlat adc sbb (bad) fbld (bad) jmpq rex.WRXB mov mov mov mov (bad) repnz sbb sbb shr or and xchg mov rcr lret mov sub lahf shll cmp add (bad) lret (bad) fucomp notb rex.RXB (bad) ficoml sbb fucom pushq loop jo push (bad) repnz nop mov scas in sub rex.R outsl iret fstpt add push outsl (bad) cmp xchg in xlat leaveq int mov pop xchg clc out ja movl ficomp mov scas and movsb (bad) fstpl rcr xlat iret movabs iret imul loopne stc xchg out stc cmpsl mov xchg movabs (bad) push (bad) movabs jg popq (bad) (bad) sbb mov push mov popq cmpsl (bad) mov xchg mov mov push (bad) movabs mov (bad) fwait jg (bad) movabs mov jmp loope in (bad) int xor (bad) xlat (bad) xor xchg imul push mov xchg jo jg mov addr32 mov pop mov movabs scas (bad) (bad) jrcxz rex.RXB (bad) mov mov pop (bad) xchg (bad) out sbb (bad) mov mov jmp subl out (bad) jg xchg jnp data16 (bad) mov rex.W (bad) mov scas push rex.WRX lods lea mov lods adc mov push jg mov movabs mov mov jg (bad) fsubrs mov (bad) movslq jae mov fild xchg (bad) jnp mov sarb imul rorl rex.WRXB xchg xchg (bad) stos movabs (bad) jg imul (bad) cwtl stc movabs add (bad) (bad) xor mov cmpsl jg (bad) addr32 mov jg lods test (bad) jg jg (bad) xor (bad) jo jnp pop ss gs pop movslq (bad) stc outsb xchg movabs (bad) xchg fldl cmp push loop (bad) (bad) (bad) ja xchg cmp (bad) or imul cmpsl mov xchg xor (bad) imulb xchg fistpll (bad) out or jg jae (bad) lods adcl (bad) sub (bad) jg (bad) jmp movabs (bad) sbb xchg (bad) jg (bad) lret xchg out or add jg (bad) movabs jg (bad) pop xchg repz xchg pop (bad) mov mulb cmc jl (bad) (bad) lods (bad) xchg ja jg sub xchg rex.RXB (bad) (bad) test push xchg adc (bad) cs (bad) add (bad) rex.WB rex.WB movabs sub xchg jnp cmpsl (bad) mov outsl iret sbb (bad) repz std out insb enterq (bad) iret mov mov (bad) fiaddl sub rex.RXB callq mov rex.WRXB push in (bad) (bad) (bad) popq rclb rex.WRB popq out imul (bad) jl sti xor add (bad) rcll (bad) push xchg addr32 imul jmp fisttpl (bad) xchg mov movsb retq icebp jl rex.RXB lods outsb xchg lahf sarl jnp xchg scas xchg pushfq mov (bad) (bad) in xlat rex.RXB lods jle (bad) shll adc mov sti addr32 mov mov (bad) cmp add jbe add xchg sub (bad) cmp adc xchg mov imul jle mov outsl rex.WRB rex.WX (bad) (bad) (bad) mov clc jmpq jg (bad) loope (bad) rex.WRX lods or xor cmp sub jg (bad) xchg sarl xchg movabs (bad) popq (bad) ss out scas jg (bad) and mov (bad) (bad) mov repnz cltd mov stc pushq (bad) pushfq icebp or (bad) rex.WXB insb jmp xor lock (bad) stc retq jg (bad) xor xchg idivl (bad) push xchg out iret jg (bad) rex.RXB lahf xor (bad) rex.WRB rex.W stos (bad) (bad) mov in jmpq ficomp jg (bad) ss orl lods xor xchg mov in sub movabs shl mov (bad) leaveq (bad) iret cmpsl testl xchg push rex.X repz (bad) fcomip jae push (bad) sarb movslq fwait xchg mov stc or lea mov jg (bad) jl mov xlat (bad) jno (bad) mov jg (bad) movslq lods mov popq (bad) scas xor (bad) rex.WB imul sahf (bad) repz (bad) (bad) movabs stc (bad) xchg mov (bad) xorl (bad) (bad) stc add (bad) xor mov xchg cmp jg (bad) movabs jg (bad) rex.WR idivl xchg (bad) jg in (bad) iret (bad) jmp cmp lods adc (bad) pop xchg movslq (bad) (bad) jge xor sarl (bad) (bad) xor (bad) mov imul cmpsl mov sub roll xlat or ss adc flds mov mov xchg (bad) (bad) ja mov xor lods (bad) mov movabs cs imul xor jmp (bad) in iret jmp pop mov sti push or jg mov sub addr32 rex fist (bad) mov sub (bad) rolb xchg xor (bad) push in (bad) rex.RXB lods rex (bad) sarl mov xchg jg xlat adc rex.RX (bad) ja mov cmp mov and (bad) (bad) repz adc xlat (bad) movabs xchg out movabs jmpq (bad) and or xchg iret jg (bad) push lods xchg lahf xchg (bad) jmp lret negl mov add stos (bad) xchg and (bad) cltd pop (bad) rex.XB mov xchg jg jg add xchg xchg jg (bad) cmp xchg movslq gs movslq (bad) or (bad) rex.WRX lods rex.RB (bad) sarl jle xchg imul je xchg sti jg add lret insl (bad) popq jg xchg (bad) rex.RXB (bad) lods icebp xchg rex.XB stos fisubl sahf (bad) jo cli insl xchg cmpq (bad) cmp xchg rex.WRXB (bad) ja xchg (bad) jg push (bad) mov xchg in (bad) fistpll imul (bad) lods mov mov test cmp movslq add popq jg repz (bad) mov xchg sarl push stos xchg movl push (bad) rex.WX jg mov rex.WB pushq pushq sub add (bad) iret (bad) (bad) hlt mov movabs xchg xchg (bad) fs pushq mov rex.RB jg (bad) in xchg rex.RXB rex.W imulb (bad) cmpsb rex.B (bad) jg (bad) xlat add (bad) cli jae rex.RX cld mov movabs mov mov stc movsb xchg outsl xchg xlat (bad) (bad) (bad) stos retq jne rcl popq movabs cld cltd xchg outsb mov mov lods jae ja adc notb cmp rex.RXB lods je jrcxz jg cld stc cwtl (bad) repz (bad) (bad) out (bad) xchg retq xchg mov in testl cmpsl fidivrl xchg leaveq (bad) jg (bad) (bad) iret popq (bad) imul (bad) jae (bad) in jg popq fld fildl xchg jmp imul jbe sti jae xor rex.RXB flds fldcw (bad) and pushfq jg xchg movsb mov pushq xchg imul (bad) mov sahf (bad) adc add popq repz xchg sarl xchg mov or jg mov xlat mov jmp push or (bad) hlt push xchg mov (bad) adc (bad) movabs (bad) adc shrb pushq adc xlat popq imul out stos xchg or (bad) (bad) adc rex.RXB mov mov add adc adc xchg mov mov stos xlat mov orw mov repz fisttp xchg add mov lods jle lea idivl mov mov mov mov out xchg mov mov cmpsl push mov add (bad) movabs mov adc mov jg (bad) mov sti sbb cmpsl std adc (bad) adc (bad) imul (bad) jo jmp lods sahf (bad) movabs jae pushq (bad) xlat pop rex iret fldt lahf mov sub std stos mov lahf cltd rex.XB std (bad) mov cmpsb cwtl addr32 jnp jnp (bad) (bad) in mov jrcxz lret movabs (bad) xchg int lret xchg fisub (bad) mov (bad) xlat mov jp cmpsl out mov scas fwait add popq (bad) mov sar and jnp mov fidivrl mov push punpckldq (bad) outsl (bad) (bad) mov cli or mov (bad) lret popfq (bad) mov jmp (bad) stc push mov xor jae (bad) mov jmp mov rorl scas rcrb rclb retq shrl xlat int stos xchg mov iret lret addr32 mov int3 mov rex.X mov popq lret or movabs loop jmp out push mov add int iret lods mov cmpsl imul (bad) mov mov (bad) mov (bad) lods mov rex.X rex.RXB scas mov xchg pop push mov scas movslq popfq xor (bad) xchg (bad) (bad) mov popq stos xchg jg (bad) pop mov movabs (bad) jmp lea mov scas enterq mov jae icebp repnz iret sub insb iretw mov out fbstp iret cmpsl (bad) push mov in ljmp pop mov jrcxz sbb xchg xchg xchg xchg movabs jmp (bad) xchg (bad) int (bad) movabs mov mov in popq (bad) mov adc mov cmpl mov (bad) mov fwait lods mov xchg retq mov (bad) (bad) repz push mov notl (bad) sbb int (bad) and mov scas mov out insl stos stos (bad) (bad) (bad) pushfq and xchg and xchg push sub mov adc xchg mov (bad) int (bad) cld rol lods mov xchg lahf lods scas and mov adc adc test (bad) stos mov xchg sbb decl sbb add cmp mov mov or dec pop jmp rex.WRXB fdivrs jmp iret loope cltd retq (bad) mov lock mov (bad) jg mov scas movabs mov cmp mov xor jle stc jnp jae mov cmp fwait decb (bad) movabs js retq cld jnp fnstcw stc mov iret mov movslq fildll sub fiadd jle mov push mov xchg mov sub (bad) rex.WXB std mov xor mov xlat (bad) xlat data16 iretw lret (bad) stos mov rex.WRXB stos (bad) cwtl cs lret push mov or add stos xchg mov xchg rcl (bad) movslq and je mov sub lods out and movnti xchg (bad) jo (bad) popfq (bad) xchg sub lods jmp mov jrcxz (bad) imul out popq mov jmp (bad) int3 sub pop xchg xlat insl mov mov (bad) lods add movabs adc rex.WRXB xor movabs sbb cvtpi2ps fimul mov jge jrcxz jp (bad) mov test or mov xchg mov xlat js (bad) (bad) push pop (bad) xlat iret rex.RB (bad) lret jae fisttpll stos pushq add out (bad) xchg pop mov mov out jnp outsb sbb xchg sub rex.R pop xlat (bad) in fsub fstl (bad) gs sahf cmpsl or retq mov xchg leaveq out xchg push fbstp xor mov je rex.WX fs add mov lods xchg pop add ds sub adc jae sub nop (bad) add es (bad) (bad) jmpq js cld and and cmp cwtl jle clc mull jg testb int3 imul adc push jrcxz push stc mov sahf xlat in pop cmp (bad) (bad) movsl xchg adc sub scas sbb cwtl fnstenv adc shll (bad) jg loope loop ror (bad) movabs mov leaveq movabs (bad) (bad) callq outsb adc es xchg (bad) scas test jg push addr32 or or pop cmp cltd popfq xchg mov xchg movabs fldcw and rex.WR rex.XB outsb adc and jmp (bad) rex.WRX (bad) ja rex.XB lret cltd rex.WXB mov jle sbb add add add xchg xchg mov lret jbe rex.RXB mov (bad) sbb nop (bad) popfq sbb cmp xchg mov jle sbb adc stos jne xchg pushq callq jns movabs add xchg movsl cmp lods movsb dec scas (bad) mov movabs mov fwait xchg rex.RXB pop and (bad) push movsb mov xchg rex (bad) adc cwtl mov (bad) imul (bad) retq or nop ss cmc insl mov xchg lret jmpq cmp (bad) in rex.WR ja imul imul popfq mov data16 in xchg rex.XB xchg mov mov pushfq xor (bad) xor xchg cld xchg xchg rex.WR adc or icebp mov (bad) jl notb jge outsb pop test movabs mov mov sub jmp xchg pushq xchg rcl mov mov cld cmpsl popfq mov cli mov mov xchg (bad) or in push (bad) mov jmpq nop jp jg push xchg pushq sbb cli sub mov mov pop xor mov (bad) xchg fstl jl out (bad) rex.R (bad) xchg (bad) xchg hlt pushq cmp push fmull xchg incl xchg (bad) cmc fneni(8087 jb rex.WB popfq lods adcl cmpsl jnp rolb sbb (bad) and fwait and lret push or fcompl rex mov lods xchg sbb or movabs in cmp repnz loop xchg xchg (bad) pop cmc sub pop rcrl movabs insl movsl push or sub mov stos test cltd pop movsb (bad) fiadd movabs rex.WRXB sar xchg (bad) idivb sbb out or pushq lods mov cld cmp push fwait jge cwtl or rex.WR add fistp pop leaveq loop rex.RX ss push movabs sarl callq iret mov mov sysexit sbb push or (bad) cwtl lret jnp mov lahf repnz and cltd xchg jns jge movabs mov movslq sti callq (bad) push (bad) movabs pop rex.RX xchg or adc mov and push insb movsl repnz mov pop mov loop push sub (bad) (bad) nop pushfq hlt pop sub jno rcrl xchg out xchg (bad) sub and xchg (bad) xchg rex.WRX xor mov (bad) (bad) pop movabs je loop (bad) (bad) xchg sahf pop jo out (bad) movsl jnp push xchg add push test rex.WRXB xchg or mov (bad) cltd nop xchg jns push mov lahf es div jae and sahf cmp in pop pop lcall (bad) or stos (bad) (bad) xchg repz gs mov orl xor pop repnz movabs pop sar (bad) jp mov mov xchg (bad) and (bad) fild adcl notb pushfq adc pushq rex.WRXB retq sbb lods jl (bad) (bad) data16 xchg xchg in lret pop (bad) lret ja xor (bad) data16 out in sahf std stos add sbb jae lock cmp cmc movsl test rex.B xchg lods pop (bad) mov cmpsb test test (bad) (bad) rex.W cmp xchg and rex.WRX adc jp pop (bad) pop xor (bad) or jno (bad) mov and jne jb mov xchg callq xchg loop rex.WX test sub fwait ja xor (bad) mov (bad) pushfq int3 jnp outsb xchg lret stc pop enterq sub add movabs fiadd rex.WRX (bad) ss rex.WR int pop mov popfq or rex.R sub (bad) rex.WRXB xchg out pop fistp cltd and iret cmp lock xchg in jmp pushq je jno loope xchg sbb xchg xchg lret xchg insl xchg stos (bad) rex xchg fidivr rex.WR or cwtl rex.XB in xchg (bad) (bad) ja fsubl mov outsl xchg (bad) cmp jg popq pop loopne test mov pushq rex.WXB (bad) pop jmpq jp nop movabs push imul pop fidiv mov xor je xchg (bad) cld cmp movslq cwtl (bad) cmp and jg loope (bad) jnp mov shll (bad) (bad) jp enterq mov sti fistl fisub or xchg outsb pop rex.WB and rex rex.RX cwtl xor gs (bad) insw sub movabs loop push mov xchg icebp mov imul jrcxz xchg sub or (bad) data16 in mov jo (bad) callq stc (bad) (bad) (bad) (bad) xchg loopne (bad) pushq pushfq out (bad) adc (bad) push sub (bad) push mov rcr fwait sbbl jno ja xchg outsb int3 movslq cmp (bad) pop pop xor jg fmuls and (bad) add jo movsb push xchg retq (bad) adc outsb add iret nop cmp (bad) ja xchg in js (bad) imul stc push sahf xchg (bad) rcl enterq or adcl cmpsb notb (bad) sbb loopne (bad) cltd xchg (bad) sbb test rex.X es (bad) xor sti (bad) loopne stos scas mov add movsl jge ds cmpsl (bad) clc fimul adc xchg xlat ror in xchg jrcxz xchg sbb sti sahf fsubrs clc shl (bad) movsb callq xchg xor leaveq rex.B cld fwait rex.X stc cwtl out (bad) (bad) imul xchg jns insb xor mov sahf sbb xchg mov ja adc fcoml push (bad) cmc xchg add lret cmp mov mov (bad) add rex.WXB pop (bad) cmp jne imul xor rex.RXB (bad) cmpsl scas rex.WX add insb cmp sub int3 lretw pop and fs movabs and (bad) jbe push mov movabs rorb mov pop push (bad) sarb add jp ss cltd mov outsb insl jno test ds (bad) sbb push (bad) movabs (bad) cld (bad) loop cmp mov (bad) (bad) repnz lret movabs rex.WR push sbb xlat pop mov xchg add (bad) (bad) (bad) xor (bad) callq cmp rex.WXB cmp sub xchg mov sub hlt cwtl sahf xchg adc iret rex.WB (bad) sbb jb mov pop (bad) xchg sub (bad) pop pushfq cwtl in lea je imul rex.WRX (bad) jg scas rex.RXB xchg sub leaveq mov jl cs icebp rex.WRXB push stos rex.RB sahf int sbb (bad) (bad) jmp gs jae sub xchg mov xchg fsubrs fisttp nop sub movabs cltd mov ja jmp lahf xchg test leaveq or popq xchg jge ss insl nop xchg add fwait movabs mov pushfq movabs and xor jg cmc (bad) cld sub jo (bad) sbb movabs mov cqto cld mulb mov movabs (bad) rex.WR repnz jne cmp rex.WRB rex.X and (bad) mov movabs (bad) in or or add jb cmpsb stos sbb cmpsb xchg and cmpsb jrcxz xchg (bad) push out movabs add stos test xchg out jge in icebp js xchg mov mov movsl cmp stc movslq rex.WRX out outsl and sti rorl test (bad) (bad) jns rex.R adc or fisubl lret fidivrl cli xchg jo (bad) cmpsl rex.WXB mov cmc rex.RX movabs std insb xchg (bad) jne jg cmp or (bad) xor mov xor (bad) repz xchg mov push or mov xlat xchg pop rex.X jl (bad) imull xchg pushq pop (bad) mov ja and xor imul rex (bad) xchg test (bad) push jp (bad) xor sub mov and and (bad) xchg adc hlt mov or lahf xchg outsb lock jne pop ja movsb movl xchg movsl out (bad) mov andps pop imul outsb pop insb fildl pop gs imul xchg gs and (bad) pop icebp xor (bad) rex.WXB rex.B mov or cwtl test rex.WRXB insl xchg xchg scas sbb rex.W add mov test in pop fcoms int sahf (bad) mov xchg outsl imul push sub (bad) cvttps2pi clc xchg xchg cmpsl mov shll or repnz add leaveq (bad) int3 rex.WR rex.RXB xchg xlat rex.WR sbb jmpq mov xlat mov int3 xor xchg fist sahf xchg sbb (bad) (bad) movslq ja pushfq mov lahf shlb jge enterq push (bad) pushq mov sbb icebp rcl mul clc pushfq cld rex.W jrcxz fs loope xchg rex.RX cmp outsb es mov pop (bad) or (bad) mov xchg add xor add sahf mov sbb (bad) ds xor retq mov xchg repz mov sbb and (bad) mov pop fstps (bad) adcb (bad) add xchg stc test (bad) ja cwtl nop sbb rex.R push fdiv push pop xchg xor jnp leaveq xor lea (bad) xchg test xor sbb (bad) mov pop std pushq movsb cmpsl xor jge (bad) xchg movabs shl cwtl xchg stc mov scas cwtl cmp pop mov rex.WRXB fdivp mov mov cld in xchg movabs rclw icebp xor movslq incl repz lcall add xchg adc mov jmp mov mov jp in jns add push sub jl sarl cs fidivr pushfq rex.X sub clc mov (bad) jnp rex.XB out (bad) push (bad) icebp xchg pop (bad) cmp adc mov add mov xor jmpq jbe mov pop push addr32 loop xchg push and or adc ficom jp mov mov pop sub (bad) sahf (bad) sahf fdivl xchg (bad) mov iret (bad) (bad) fisubrl out xchg xchg vmwrite rex.WRB movabs ss loope jne adc lock movabs sahf jo popfq push rex.RX imull movslq mov cld rex.X popq movabs stos stos mov jae and (bad) and nop fdivrl mov enterq lret (bad) sub xchg push push add cmp xchg hlt (bad) mov addr32 out retq (bad) or mov decb jne xchg pop rex (bad) jno movslq add out mov rex.WRB lret gs cmp or jns adc mov jle jge lret xchg push sbb xor (bad) imul fsubrl (bad) cmp (bad) jg xchg out add movabs (bad) jne mov lahf std xor je cmp rex.WRXB xchg vcvtps2pd push mov nop push rex.WX mov add pop cmp xchg sahf jrcxz or pushfq push sbb pushq in jae push (bad) fild xchg or cwtd mov sub test jo repz rex xchg mov or repz xlat test mov rex.XB mov cmp push push lods pop sub cli xlat mov ja mov (bad) and (bad) ror stc fsts movabs (bad) (bad) mov xchg (bad) scas adc (bad) or (bad) jo cmp iret xchg out movabs addr32 mov xlat lods test in mov rex.XB cltd leaveq jo (bad) mov xchg negb jns cmpsl fstl lods jbe add mov outsl xchg xchg rclb (bad) jmp fsubrl jb nop sbbl in jae rclb xlat sahf rex.WB mov mov fdiv xchg fdiv (bad) (bad) xchg (bad) insb int push cwtl (bad) (bad) (bad) and pop callq jg lods push pop imul and mov pinsrw mov xchg xchg popfq (bad) mov (bad) je cmp xor jmp or stos idiv sbb xchg (bad) adc in test ja or cmp test pushq mov adc (bad) or in push (bad) mov xchg cli (bad) cs mov lea or (bad) adc sahf negb fidivrl sbb mov imul sahf (bad) sub push stc (bad) jmp iret rex.WXB fidivr rex.XB adc scas jg addr32 clc movsl fcoms rex.R (bad) (bad) xchg lahf cs or add push cmp xchg xchg rex.B icebp push (bad) lsl test (bad) cwtl int3 xor movabs ja outsl and lods mov rcr xchg (bad) lods cld adc (bad) mov rex.WR mov (bad) fucomip rex.B outsb jo mov (bad) or out (bad) xor mov (bad) (bad) jb data16 loopne xchg xchg adc jae mov rcll mov xchg rex.B xchg imul (bad) mov (bad) pop (bad) (bad) jbe out outsl sub rdtsc rex rex.WRX rex.WRXB xor cltd mov push je xchg mov movl cmpsb in stc push sub icebp callq inc jl lret cltd icebp push jl xchg fsubl (bad) (bad) adc hlt loop mov movabs lods mov (bad) enterq lea nop (bad) xchg test xchg iret leaveq adcl pushq stos pop iret mov mov sbb push xchg sbb xchg cld or sub pop loop cmc and test xchg cmp pop and lret xchg rex.X rex.WB adc jge popfq (bad) cld cmpsl (bad) outsb (bad) fstpl xchg (bad) xchg add or add nop cmpsb test xchg pop cld pop or cwtl fldcw rcrb pop rex.WXB rex.WRB and rex.X data16 jg jmp or popfq (bad) and add scas cld sub sahf test insb (bad) cwtl mov cmp adc clc rex.WRXB movsl sahf xchg and (bad) jo rex.RX mov jno xchg xchg pop add cld xchg cltd xchg insb and jb stos ss movabs cltd and (bad) xor leaveq (bad) mov (bad) movabs (bad) loopne js (bad) mov sti repz jle push xchg rex.WR pop (bad) pxor ja pushfq lock rcrl adcb xchg lods and adc sti fistl pop cmp rex.WXB imul ficom rex.WB xchg icebp mov xor ss pushfq scas (bad) insl cwtl mov rcll fwait xchg (bad) nop callq outsl xchg lret add xor (bad) (bad) fiadd or insb xchg clc mov imul es cmpsl jno movabs fisubl repz jnp rex.WR nop mov (bad) xor cltd cld (bad) leaveq movsb jns pushfq in sub fcoml cmp out push pushfq (bad) mov and sahf fistpll fwait pop xlat (bad) add (bad) test pop mov in push xchg out gs mov xchg (bad) xchg mov movabs rorl fsubl mov xchg adc xor (bad) or pushq pop leaveq (bad) (bad) add outsl jrcxz ss (bad) sahf (bad) xchg in (bad) mov sti and jrcxz adc movsb cmpsb sub stc (bad) (bad) leaveq xlat (bad) out in lret xchg adc retq mov xchg cmp (bad) sub xchg jrcxz imul jg movsl xchg mov movabs scas lret fwait or cli xlat std loop or xchg xchg cld rex.WXB jge pushq (bad) mov hlt rex.WX (bad) fdivrl out (bad) (bad) (bad) mov xor xor xchg or cwtl mov mov xchg insl jmpq int3 movabs int cwtl (bad) (bad) movabs (bad) imul xlat sub stos retq xchg jl mov mov (bad) (bad) test retq cmp gs clc push movabs mov js cli xchg fwait mov or int3 mov test (bad) cmpsb mov int (bad) and out or push loopne lahf or ja mov xchg lret push xchg xchg (bad) push cli insb jne test idivl stos xchg jbe cmpsb jg (bad) jmpq sub mov test add cmpl xchg fisttpl and (bad) adc imul mov repz pop mov clc jg add retq jbe mov sbb cwtl xchg xchg mov idivl mov jae cld xchg mov or sbb bnd pushfq jmp enterq notl and leaveq es sub sub xchg mov cmpsb rex.WRX scas adc sahf (bad) jle leaveq (bad) (bad) fwait push jmpq xchg loope rex.WRXB adc hlt push mov ds push mov cmp imul addl movslq jg xchg faddl (bad) pushfq xchg pop mov rex.WRX notl lock cwtl (bad) std movslq cmpsl jg (bad) rex.B test rorb jmpq rex.WRX mov mov sub adc (bad) sub xchg mov push jg rex.WRXB jle xchg mov cli imul outsl push lahf ds and repnz test mov fwait mov scas sbb pushq je and loope movsb jae mov sbb (bad) (bad) rex.B pushfq (bad) ja rex.RXB out cmpsl mov stos jp mov jrcxz movntq and xchg out loope movl js cmpsl jo cltd out push int cmc hlt fisubr test (bad) xchg xlat callq adcl data16 outsl xchg (bad) (bad) mov fdivr rorb cmpsb rex.W xchg mov xchg (bad) fs lods mov (bad) jo mov test adc leaveq movabs stos xchg mov push and xchg cmp sbb pop negl nop xchg xor test sbb addr32 pop pushq fstps scas (bad) ja test out rex.RX in cs mov cmp (bad) jnp xchg mov push add jns xchg jl (bad) je scas rex.WX cs scas add (bad) std jno sbb (bad) and xchg lahf and cld clc xchg movabs cld mov mov imul mov lahf mov out pushq sbb popfq mov cltd and mov gs callq adcl xchg rex fs lret sub cmp xchg adc fwait movabs lea and sub test movabs cmp xchg adc fisubrl popfq cmp ja data16 pushq fild jrcxz jne rex.X cmp cmp (bad) xchg xchg mov add sbbq in (bad) mov jbe xchg (bad) fidiv xchg gs nop pop (bad) rex.WRX cmpsb rex.RX xchg rex.WRB rex.WRX cwtl sub mov push (bad) mov psrad pop xchg idivl rex.WRX cwtl xor fisttpll cmp (bad) xorl pop loope (bad) (bad) scas mov movsb movabs divq pushq add movslq sahf fsub sbb shlb push neg frstor pop xchg outsb pop mov xchg fsubr and shr xchg sub stos sbb sub andl in (bad) fwait xchg iret mov sub (bad) movsb loop addr32 mov add iret and or fnstenv xchg stc rex.WRXB je (bad) sub std and jg mov insb xchg xor pop push or jb (bad) outsl jrcxz jmpq xchg (bad) iret pop sub mov sbb xchg rcrl xchg or nop cwtl outsb rex.WB (bad) sti (bad) ja pop setno mov adc sub push xchg mov repz cwtl jbe jrcxz pop mov xchg hlt movabs stos rex xchg (bad) xchg xchg mov retq cmpsl (bad) sbb pushq rex.RXB pop pushfq notl xchg mov rex.X movabs faddl (bad) mov rex.WXB (bad) mov (bad) sbb push mov lret repnz in and (bad) xchg movslq (bad) movsl (bad) ds pushfq stos sbb lret mov sub rex.R rol addr32 jrcxz xchg xor (bad) mov push clc xchg fwait mov iret scas in mov sub adc (bad) (bad) loop mov sbb cmc pop (bad) (bad) push (bad) out addb nop (bad) lret ja cmp retq movabs adc jb cmp clc mov jnp pushfq addr32 iret pushfq (bad) (bad) sub xchg fdivp test int3 mov lret pop jo xchg rex.R cmp xchg mov movsl mov adc sub add rex.B rex.RXB callq orl xchg sarl fbstp rex.R xchg movsl (bad) jge push mov iret rex.XB rex.RX push add sbb outsl push subb add popfq jnp mov mov imull pop pushfq add pop xlat lret adc clc outsb std (bad) pop add xchg jae cwtl mov notb in fstpt xchg or jno and xlat cmc sbb iret xlat js int lea nop insl movabs xchg (bad) fsts push xchg jns movabs sbb (bad) xchg (bad) movsb fimull push sbb jle sbb adc xchg (bad) ja gs fimul cmp rex.RXB (bad) cs rex.WX lahf out xchg sbb lret mov xchg scas clc std xlat jmpq rcll (bad) lods xor movsl fsubs sub add mov sub (bad) pop (bad) sti stos push jns pop imul fbstp test xchg rcll jle ror rex.W loop xchg push lods movslq add popq (bad) mov rex.RB pushfq rex.WRX cwtl jg (bad) loope xchg enterq scas in movabs cmp (bad) out stos icebp movsb or mov xor movabs and pop repnz xchg hlt movl movabs and adc (bad) movabs (bad) xchg andl in cmp mov pushq pop push rcll outsl lods sahf xor repnz repz xchg jl sar out mov lea subl jb rex.WXB (bad) xchg scas rex.WX (bad) not cmp loopne jmp (bad) (bad) sub mov cmpsb movb rex.R cmp scas (bad) test pushfq sbb movabs imul and test lret push fmull stc pushq xchg fdivrl pop (bad) pushfq retq decl movb in mov movabs lret add (bad) (bad) mov push lret decb sub push scas mov pushq rex.WRX adc movsl scas mov mov sbb pushq and (bad) lods cmp fcompl (bad) pop callq cmpsl repnz mov lods sub (bad) mov mov (bad) or gs xchg push scas test sub cmpsb jg pop movabs xchg sub movabs mov imul out lahf cs (bad) or mov nop test sub cltd pop rex.RB callq lock in and (bad) mov scas out icebp vmovdqu add scas mov lock movsl addr32 stos xchg (bad) cmpsb mov cmovno xchg mov clc (bad) mov ja pop fsubr fsubrl rex.WR enterq ds es jbe (bad) imul (bad) rex.WR adc addr32 int3 (bad) retq cwtl (bad) pushq sbb cmp jo movabs mul loope (bad) in rex.RX ds fstpl rex.WR xor sub andl test mov mov (bad) rcrl push pop jl and rcrb fsubs cmpsb repnz adc fsubrl in (bad) and cmp add imul (bad) rex.WR push stos pushq mov retq pushfq fwait push mov movabs lock or imul rex.XB cwtl imul ficoml outsl pop jbe xchg xchg mov cli xchg cltd movabs mov in xchg callq sbb rex.RXB xchg rex.R sbb (bad) push (bad) jae stos (bad) and sbb pop sbb or insl clc xchg es (bad) cmpsl (bad) adc cmp mov and push cltd add mov xchg or shlb rex.RX lods push sbb addr32 sahf sbb shll movabs rex.W stos or mulb lods add cmp popfq and es out divb (bad) sub mov rex.WR (bad) iret movabs mov jno in push lret rex.R sub mov xchg (bad) callq jns xchg xchg fcompl xchg fs movb (bad) and mov xchg sbb adc sbb movabs test or adc sub xor fildl xchg pop movsb std retq (bad) pop pop outsl (bad) xchg jmp xor stos outsb mov pop imul cwtl ja outsl (bad) rex.WXB sbb gs rcrl xor insl pop outsl (bad) movslq xchg xor xchg mov xchg mov repnz jg mulb movabs test (bad) movsl mov xchg popfq hlt and ffreep lret lods mov popq (bad) sub lahf (bad) jo loop xchg pushq fidivl fisttp adc jbe (bad) lods pop mov (bad) xor (bad) sahf cltd xchg xor fsubr xor fidiv xchg gs jmp and js,pn mov (bad) xchg adc pop jmp test gs xchg mov jmpq loope incb iret and cmpsl mov pushfq jle push movslq sbb xor lret (bad) cwtl xchg retq jge jbe push retq (bad) add mov jns xchg fcoml sahf rex.WB rex.WXB mov in and mov (bad) xchg (bad) pushfq clc outsl add nop movsl popfq adc xor (bad) leaveq rex.WRXB scas (bad) xchg rex (bad) cmp xchg test lock (bad) jne outsb jle mov cmpl (bad) je adcl push mov jnp xchg cli cmp pushq je (bad) fmuls cmc cltd test mov add sahf mov rex.WR out mov mov xchg mov ja repz fild movabs (bad) mov or cld xlat (bad) jo mov xchg rex.RX jbe xchg rex.XB loop xchg xor jle test icebp xchg (bad) mov iret stos cltd (bad) mov or (bad) out sbb jne mov (bad) sbb push jno jrcxz xchg (bad) (bad) lret mov xchg lods (bad) jmp (bad) (bad) mov nop push cs push add popq test rex.WRXB jg out test rex.WR sub xchg xor movabs (bad) pushfq jns rex.WXB (bad) rex.WRXB cmpsb adc (bad) mov push pushfq idivb (bad) rex.X mov scas adc scas loopne (bad) std xor xchg mov (bad) (bad) leaveq push (bad) mov mov xchg add movabs lods jo xchg (bad) (bad) test cmpsl hlt jmp xchg movabs out mov push xchg ds jns sti rex.WX xchg js (bad) icebp and rex.RB push movabs (bad) sub fmuls lods (bad) jb sbb fwait loopne ss es rex out mov xor jge xchg xor imul xchg insl popfq loop mov cmc (bad) rex.X fwait (bad) in hlt xchg loope rex.WR lret lods xchg fldt notb fsubrs xchg incl jmpq cmp xchg scas and iret mov mov pushq sahf pop or imul nop out mov mov push mov loop rorl (bad) xchg mov adc imul add xchg push repnz jp insb and fist ficoml jrcxz fist sbb add sahf test fldt scas clc (bad) xchg push rex push (bad) (bad) ficom pop in pushfq or iret pinsrw rolb sub pop mov mov xor nop cmpsb mov mov repnz xchg (bad) jle mov xchg mov jmp stos xchg jge (bad) xchg add mov cmp iret sbb (bad) fisttp xor adc (bad) sub add (bad) (bad) fmull and hlt xor (bad) rex xor movslq mov movabs pop rex.WX test in stos rex.WXB xchg mov or (bad) xchg xchg jmpq mov pop pop repz in mov cmp jmpq adc adc je xchg int xchg mov push pushfq cmc movabs sahf mov outsl rex.WR rex.WXB js fwait xchg xchg (bad) push sbb (bad) sahf movsl mov sbb nop rex.XB imul mov (bad) sbb mov xlat xor xor xlat rex.RX movslq retq pop repz mov rex.WB repnz movsb or ss mov add mov cmpsb xchg push xor pop xchg (bad) movabs cmp (bad) pop jno sub lods popfq rex hlt fisubr push mov (bad) mov scas push nop sub (bad) adc (bad) test xlat in out mov int3 rex.WRX notb and mov add pop cmpsb cltd or lods adc movhps movsl movabs xor and negl pop movabs adc stos mov callq insb add cmp (bad) jbe adc jl pop (bad) (bad) out rex.RXB rex.B jns stos jbe lock test mov (bad) test xchg jp mov add mov cmp movabs rex.WR loop xchg movabs mov (bad) add xchg jns (bad) or cs cmp outsl xchg (bad) pushq (bad) lret push rex.WRX in sahf sbb sub fucom movabs mov cmp mov gs rorb rex.B jns sbb je (bad) insb xchg mov xchg (bad) insb jg sbb pushq js cmc jrcxz in mov xor xchg mov mov rcr pushq jb jno stos hlt xchg sbb in mov (bad) lods jg cmpsb jns mov pop xor out cld adc (bad) jge xchg or hlt fisubr xchg fimull (bad) mov xchg xchg mov rex.WXB cmpl jne decl insl mov cmp nop adc pop or xchg sub fcmovnb rorb mov lock or repz fsubs out (bad) test rex.WX cltd out or (bad) mov rcr out in xchg jle shrl repz mov popfq xchg (bad) mov mov sahf mov xchg push cmp loop lock retq jge jmp pop xchg fsubs mov pushq jnp mov cltd adc enterq push rorl (bad) js xor jle cmpsb movabs (bad) xchg movsl rex.WRB xor (bad) (bad) icebp fiadd push movabs (bad) cwtl mov rex.B pushq rex.XB jp sti sub rex.RXB sahf cwtl add fnstenv xchg sub jnp xchg rex.RB (bad) loopne rex.X xchg outsb (bad) mov sbb rex sbb mov mov sub test or movabs insb gs mov adc (bad) xchg sbb popfq (bad) addr32 incl in btc out mov xchg xor popfq mov lahf leaveq rex.RX in mov loope (bad) outsb push mov xchg retq lock or fstpt mov xor xor (bad) gs jnp xchg es mov xchg (bad) rex.XB pop loope xchg push pop (bad) cmp incb notb mov jns adc push (bad) hlt pop cmpsb jbe (bad) mov fiadd mov stos rex.XB (bad) cmp mov (bad) or (bad) mov rex.X mov xchg push cmp enterq and divl jae cmp (bad) pop xchg mov idivb sahf cmp mov lahf (bad) push loop fistp mov (bad) cmpsl cmc xchg fiadd (bad) xchg out in mov pop icebp adc cmc cmp or stos rex.RB rex.B or xor ja pop push and stos (bad) subb rex.W fstpl sbb rex.WRX rex.RX ja movabs pushfq jmp pushq push movabs popfq mov and repnz in out (bad) cs ja loopne sub mov in sub pop or js pop (bad) jb insl scas push scas ja test xchg rex.RB out and or lea pushq testl pop xchg ss (bad) divb xchg mov adc hlt rcrl cmp fcomps pop (bad) (bad) sub xor loope jp cmp out xchg ja lret leaveq xchg imul in rex.X notl rex.WXB scas xchg (bad) cld rex.WRXB xchg cmpsl jrcxz jp roll fwait xchg xchg in xor pop fdivl sub (bad) movabs push rex.RB lahf xchg imul loopne push jmp xor (bad) push neg pop adc (bad) add (bad) sbb data16 lea jg mov xchg xchg test (bad) icebp mov (bad) std xchg bnd mov cld push xchg test leaveq movabs mov ficom test pop pushfq xor rex.RB cwtl mov in (bad) (bad) fcmovne imul or jmp in rex.WXB loop add and push fdivrs scas out xchg roll jns (bad) (bad) sbb xchg mov mov lea leaveq lahf decb scas rex.RX (bad) jae rex.WXB xchg insl mov rex.RB pushfq xchg cli fnstsw out jo push xchg pcmpeqb rcrb xchg out xor (bad) xchg xlat cmp jp jb (bad) pushfq maskmovq mull outsl movabs (bad) sbbl clc loop jg xor mov out xchg (bad) (bad) and mov popfq mov mov shll xor or (bad) hlt popfq roll mov lods leaveq and sbbb pushq add cs popfq push xchg insl sbb jg mov rex.WRXB cmpl mov fisubl fcoms rex.WR clc lahf xchg fmul pop sub test fdivs jo push test xchg adc jle rex.XB pop repnz add mov stos mov mov jbe sub popfq pop cli and jg mov hlt jnp mov mov int3 sbb (bad) cwtl (bad) mov iret xchg (bad) sub imul movabs sahf nop (bad) gs (bad) popfq cmc jbe jmp (bad) jmp loopne ja outsb mov xorb cltd shr cwtl adc shlb jmp addl pushfq out loope fwait jo repz jb fs rex sub mov fisubl (bad) (bad) in imul jne pushq insb mov sbb mov xlat sbb fsubrl test (bad) ss rex.W add stos insb jns ds (bad) adc fwait mov addr32 nop pushfq and jl xchg jg movsb cltd xor repnz cmpsb adc push gs push mov rex.RX imul insb (bad) sub (bad) fstpl lret subl fistpl (bad) rex.WB sbb and (bad) test rex.RXB out imull movabs rex.W sti pop addb mov test (bad) (bad) or test stc stc jge and rex.WRB and (bad) rex.WX pushq xor fisubl xchg in scas lods pop fsubl movabs sbb loope xor rex.WRB mov (bad) (bad) sbb rex.B in mov cwtl cmp xchg callq movsl mov jb push cmp (bad) stos adc out sbbb test (bad) ja subl (bad) int (bad) movslq lods (bad) cltd push movsb cmpsb xor and jo sub out xor retq adc mov fdivrl xchg xorl repz in adc xchg (bad) pop or sub mov sbb sahf (bad) rex.X ss mov cltd mov cmpsb xchg xchg pop mov rex.X (bad) rex.XB sbb cmp push movsb test xlat (bad) int cmp xor mov sub rex rex.X movabs pop jbe mov mov in sbb (bad) negl mov push out (bad) rex.W rex.RXB lea and addr32 fldcw adc sahf (bad) jmp ficoml xchg (bad) pop stos rex.WRXB xor movsb mov mov xor lahf sti cmp (bad) loop xlat ja negb add movabs jl pop cld movsl outsb adc mov xchg idivl stos mov std lret adc pop jmpq loopne rorb push test cld divb (bad) jae ds push mov mov and cmc outsl rclb jns xchg cmp (bad) rex.WR sahf add pushq out (bad) rex.RXB mov lahf mov loope (bad) fs data16 cmpb push fcomps insl (bad) sbb pushfq (bad) pop (bad) jl (bad) xor rex.WRXB sub xchg xor (bad) stos iret stc jns cmp lock gs cltd mov stos pop int notl shr pop mov (bad) rex.WRB mov mov or push lods popfq clc or cld (bad) fidivrl rex.RXB adc int jno mov movabs (bad) xchg int xchg push (bad) in out xchg mov callq gs movabs (bad) in xchg rex.RXB imul fisub mov mov xchg test (bad) cwtl mov jns cmp (bad) rex.WRXB adcb addr32 movabs mov rex.WRX xchg xchg xor sbb (bad) pop add sti xor push cmp xor (bad) sub movabs idiv sahf xor cmp nop (bad) (bad) xchg mov (bad) hlt test (bad) cltd xchg rex.RXB rex.WR add mov fldenv add idiv (bad) fnop je add (bad) xchg jp mov stos jmp xor mov (bad) hlt (bad) jl lahf out loop mov pop rex.WB push xor mov xchg movabs sbb mov mov movabs test movabs lods cmpl stc sub mov in mov rex.RX xor in mov retq xchg and (bad) insl add (bad) xor sar shll insb rex.WB (bad) cmp cwtl mov addr32 imull xor (bad) mov pop cs mov mov push ja sbb cmp lods (bad) (bad) gs (bad) pop pushq ds (bad) jrcxz addr32 (bad) rex.WXB rex.WRXB pop cmpsl jae repz stc pop pushfq jmp outsl (bad) outsb xchg xchg push callq (bad) fs stc mov jle lcall cwtl fisubl imull (bad) push lahf (bad) fnstenv cmp (bad) mov pop xlat fidiv rex.W fcoml sarb (bad) iret (bad) pushfq mov and popfq nop adc (bad) push and mov cmpsb pop mov lret jg (bad) adc (bad) std cld push rex.RX or nop add mov stos xchg imul imul fisttpll mov mov and (bad) xor xchg js sbb (bad) sti movsb xchg negb (bad) pop push movabs mov rex.WRXB in mov or test mov mov sahf movabs sub rex.RXB jnp mov push sbbl xchg rex.RXB iret addl xchg popfq pushq xchg adc rex.WX rex int rol (bad) (bad) or shrb cmp jb (bad) xchg sub push ds rex.WRXB lret shrl sub jge xchg jnp sub (bad) imul jp (bad) add callq mov fsubrl rex.WR and mov lret (bad) push addr32 rex.WB mov (bad) (bad) movsl (bad) rex.X rex.W cmpsl push cmp xchg mov int retq pushq jb rex.RXB outsl rex.WB jge xchg add lcall test cmpsl mov or movsl (bad) or cwtl mov xlat fiadd and or ja mov mov sub cld loope scas mov insb (bad) stc rex.WXB add pushq test pushfq fdivrl mov sahf mov sbb rex.WRXB pushfq fisub xchg sub jp imul xchg or (bad) push insb notb fldl in jbe mov out clc cmp outsb jns xor mov sbb (bad) pop mov cmpb rex.R adc movabs pop (bad) xchg xchg (bad) rex.WB rex.R mov xchg adc sub jb pop rex.WRX add movslq xchg rclb xor xchg mov movabs and nop mov xchg cwtl mov clc mulb xchg push and jne (bad) jae (bad) test (bad) lea rex.WXB fadds in adc xchg mov cmp adc movabs loope mov nop rex.WRX add gs test (bad) (bad) xchg fcoml stos rclb cwtl lea sub xchg mulb int3 imul std in xchg rex.XB je test xchg cli push xor sar xchg mov (bad) fidivl retq add xchg pop cmp add cmp punpckhbw lea cwtl in mov cmp test add clc sub fidivl pop xchg scas push jrcxz sbb hlt jbe (bad) test rorb outsb stos shrl fsubrs pushfq jg push add fwait movsb nop xchg jo mov (bad) rex.WXB out movhps rcll test cmp sub outsl (bad) jb scas imul repnz addr32 sti adcl xchg pushfq or sbb sbb (bad) gs jrcxz or (bad) rex.WXB lock sar ficomp sub xchg xor (bad) xchg fdivs mov (bad) (bad) cwtl enterq lahf sbb test sub jo jmpq rcrb add sahf fistpll nop mov pop test icebp cwtl test xchg xor xchg mov and jle sahf add int mov jrcxz movsl addl mov cmp lock leaveq xchg sub (bad) pop xchg rex.XB jb pushq push sub notl mov hlt sti jge outsl cmpsb leaveq jmp (bad) and jns mov push (bad) pushfq mov cmpsb rex.RXB mov movabs (bad) jge stc icebp pop mov out cwtl pop out (bad) loope jno cmp xchg popfq sbbb adc mov fdivrs rex.B fs sub cmpsl (bad) movslq test loope push pop xor xchg imul sahf in cmp jnp sbb jp or add punpcklwd xor xchg sub xchg cmp mov xor jns test loope rcll pop rex.WRB rex.RXB out nop out or movabs jg ds fsubrs pushfq (bad) mov outsl mov nop jb (bad) imul (bad) outsl cmpsl push add jbe mov xchg (bad) mov push mov xor xchg callq movabs in xchg int3 jns push loop out movsb imul and lock (bad) enterq pop scas fmull xchg retq fnstsw pop (bad) xchg cli adc cmp rex.WR test nop cltd jbe fcoml and pop rex.RB insb out fidivl mov mov mov sub in lret (bad) movsl jmp xor (bad) fsubl and and xchg mov jne out xor xchg mov pop (bad) stc xchg add rex.WR xchg (bad) (bad) (bad) loope xchg (bad) hlt movabs xchg xchg std pushq sbb fs fs xchg mov lock movslq mov (bad) xchg pushfq push stos pop mov orl mov test (bad) popfq mov mov (bad) xchg jae jp xlat rex.RB lods pushq (bad) xor int mov mov pushfq movb loop loopne adc movabs rex.X sub xchg out cmp (bad) pop in fisub xchg retq lea xor scas fsubs and jo pop (bad) leaveq cmp pop mov xchg ror repnz lret pop xchg pushfq nop (bad) mov jnp jg test (bad) stos loop cmpsb add movsb (bad) int add movslq pop (bad) jrcxz (bad) (bad) testb xchg xchg cmp pushfq mov (bad) jmp (bad) (bad) push xor xlat (bad) xchg and or movb hlt jg out push pushfq (bad) mov push fstps pushfq jrcxz xchg (bad) and cmovno (bad) mov vmovd (bad) xchg add cmp jrcxz xchg rex.WXB js rex.WRB xchg push cmpsb mov xor lea int3 je mov (bad) fmull rex.WRXB sbb jbe and or (bad) stos push cwtl rcrl xchg mov hlt jbe gs add jae lahf xchg je,pn sbb jbe out popfq movabs cmp roll (bad) divb lods fcmovu adc rex.WB (bad) nop (bad) push jrcxz sti rex.WRXB fwait (bad) cmpsl popq sub (bad) xchg fsubp loopne rex.WRXB (bad) rex.WR jg mov push js (bad) lods movabs rex.WXB pop xchg jae iret cli (bad) addr32 movl popfq popfq mov (bad) imul xchg add scas jg (bad) rex.W xchg in cld push rex.RB mov xchg (bad) popfq (bad) jb movabs (bad) xchg sbb je rex.WR mov (bad) jae js rex mov fcomps movsb (bad) test rolb (bad) push push ds cmp repz cli or adcl icebp lea jge stos imul int3 cltd and dec mov fistl adc rex.RXB adc sub xchg (bad) (bad) jo lock and push rex.RB jae leaveq xchg pushq je mov adc push or jg rex.X movsb xchg xlat nop enterq push push xchg (bad) cltd add fildll (bad) (bad) in or rex.RX rex.WRB or divl (bad) cwtl mov jne add xchg (bad) lret xchg xlat orl in (bad) cmpsl or xchg fs mov mov (bad) popfq push jbe js in (bad) rex.WB cmp (bad) (bad) in push sbbl xlat (bad) adc xchg in sub xchg rex.WRXB insl xchg rex.RXB pop retq mov cltd shlb (bad) pop popfq js (bad) xchg rex.WXB rex mov (bad) lahf xchg mov xchg mov mov xchg sbb mov and out push in scas ss xor outsb or sub popq lods xor lea pop mov xchg mov xchg push int and add hlt sbb jne or jns push lahf sahf (bad) addr32 rep sub (bad) cmc out lea mov xchg cmp xchg outsl jg repnz or leaveq push ja (bad) lods sub rolb (bad) test movsb xchg orl fisttpll lahf jns xchg movabs mov mov movslq push cmp rex.W out sarb sub jmp (bad) xor fabs je xchg cmp or push (bad) test sbb in xchg rex.WRX or cmc jge mov and repz (bad) fidiv int repnz lea (bad) pushfq sub xchg mov rex.WRB add cmp jae hlt pop (bad) mov xchg rex.B test rex.WXB stos rex.R pushq pop cmp adc xchg icebp cwtl insl sar adc (bad) mov outsb mov or jp pushfq loopne nop add xor rex.RB rex.R rex.WB adc and sub cli in lods xchg and push iret outsl insb cld rclb or rex.WR mov loopne rcll repz out or in cmp rex.RX (bad) xchg xor xorb adc sub cld hlt xor push jge and add rex leaveq rex.WRX (bad) out xchg lods loope lods sub mov outsb push (bad) xchg (bad) xchg push lods xchg ds (bad) out jmpq xchg fwait rex.WX mov (bad) sahf lea mov adc in rex.RXB rex.WXB rex.WRB loope repz adc push (bad) sarb int3 retq (bad) or outsl add jb xchg callq jrcxz xor mov mov cmp xchg adc test xchg xchg scas pushq cmc lret (bad) mov popfq dec cmp push xlat movabs nop movabs xlat xchg cltd stos fnsave xchg mov cmp (bad) xchg (bad) xor pop (bad) rex.WXB cmpsl xlat ja mov (bad) mov cmpsb xor scas mov or push xchg fbstp mov ja (bad) pushfq movsb add data16 rex.W mov rex.WXB rex.X movslq add lods (bad) xor (bad) rex.RXB adc sub movsb cmp pop (bad) retq xchg or pushq (bad) mov stos cltd rex.RXB int mull (bad) lret pop ja cmc rex.X sbb movabs (bad) imul xchg cmpsb (bad) cld jne fcompl adc sub cs rex.WB and sub stos xchg dec (bad) xor cmp (bad) idivl cwtl xchg pop and mov sub (bad) (bad) push clc nop fdivrl xchg mov mov (bad) mov js rex.WXB sbb pushfq cmp mov xchg sbb sti jne and outsb adc shrb retq (bad) movsl or mov jnp movsb jns sahf sti mov xor (bad) rex.XB and movabs xchg jg xchg add lods int3 mov lahf mov rex.WR rex.WRXB imul movabs mov (bad) sbb (bad) mov (bad) cmc and sbb or out sub ficom lods push jo xchg or je xchg sbb in (bad) rclb (bad) rex.RB mov or push xlat cmc and test xlat xchg jle rex movabs jmpq leaveq (bad) cmp (bad) xlat (bad) pushfq imul cld xchg movabs stos mov adc xchg mov (bad) fcomps pushq xchg outsb imul xchg (bad) scas callq shlb fcompl (bad) and jmpq (bad) rex.WRX addr32 xorb test mov pushq (bad) loopne cwtl adc imul (bad) mov rex.WB mov sbb xlat imul xor test (bad) mov mov mov lods gs xchg rex.WB fildl mov callq (bad) outsl lods cmp or (bad) mov callq adc outsl cmpsl movsb (bad) subb rex.XB popq (bad) cmp add (bad) cmpsb lods (bad) sti xchg jns movsl push (bad) mov rcl (bad) stc movslq addr32 mov sbb stos pop xlat outsb cwtl (bad) movabs xchg sub in cltd ds jp and xor rex.X push rex.WRB insl (bad) popfq xchg in mov int3 insb stc mov pop sub cwtl pop icebp sbb fwait jnp sti xlat sub nop fsub mov ficom (bad) (bad) iret andl (bad) xchg imul insl (bad) stc nop push push jl xchg xchg (bad) jbe mov or rex.WR ja push sbb sbb adc sub imul or jg rex.RX movabs (bad) mov pop cli adc gs push fistl cld rex.WRB rol xchg (bad) (bad) lea (bad) nop add pop jne xchg adc and cmpsb cmpl loop xchg mov jle mov xchg rex.W rclb fwait mov xchg sub pop jb lret (bad) cmp loop callq mov icebp xchg xchg std and test rex.WX stos (bad) (bad) mov fs cld loope xchg rex.R and xchg cmpsl (bad) repnz and fdivl jmp movsl insb test popfq stos cmp push (bad) pop int3 and xchg jne retq out or mov xchg (bad) (bad) rex.WR clc xor movabs pushq (bad) xchg lahf or cmp mov and mov pushq sahf out mov lea (bad) rex imul popfq out cmovg xlat (bad) and jae sub loope or xor lret test out or movabs xchg mov (bad) pop push (bad) insb lahf sbb (bad) sbb jmpq rex.X pushfq (bad) xor rex.WRX cmp mov xchg sar adc (bad) repz rex.X mov cmp fildll scas jb imul xor es (bad) nop and and mov adc rex.WXB cmpsb mov pop push xchg jrcxz adc xlat out popfq rorl outsb enterq mov (bad) lock xchg (bad) xor fisttp or pushq jbe mov push cmp mov rex.XB mov enterq mov (bad) mov jns lock (bad) sbb xchg (bad) (bad) shll mov or jb add imul sub xor rex.WR (bad) loope int3 (bad) test push and mov rex.W (bad) ss movsl xchg or sahf mov add xchg adc (bad) retq (bad) nop std cmp rex.RXB (bad) push outsb lods xchg subb push add pop (bad) push adc pop (bad) (bad) outsl (bad) fmull (bad) adc jmpq xchg (bad) xchg (bad) sub mov pop fbstp sbb ja xchg (bad) rex.RB cwtl out sbb movabs sub incl sahf imul mov and callq scas vorps jo (bad) xchg sahf push xor xchg rex.RB or add pushfq ds add (bad) xchg adc (bad) cmp cld out popfq mov rex.RX out add (bad) jge addr32 movabs xchg cmp sbb rcrb xchg lods movsl mov jg (bad) sbb mov setns xchg cmp in popfq mov jb movsl loope pop xor pop (bad) cmp js rex.B rex.XB loopne outsb fwait xlat mov mov ss cwtl push add adc fnop stc fidivl (bad) out mov div xchg retq jge rex.WRXB int xor cmp cmpsb sahf cmpsl ficompl pushq mov push xchg sbb sub orl pop sbb sub divl rex.X xchg sbb scas test (bad) mov mov xchg pop movabs jb sbb xchg je xchg out mov movabs xchg push adc movabs in cmp jge or lock out and sbb pop stc rex.WXB (bad) xchg mov push xor sbb (bad) imul fdivp push add xchg rex.W rex.X (bad) rex.XB movabs cs xchg ds sub xchg mov cmp cmc movslq fistpll xor or add mov mov xchg rex movslq jns mov add cmp pushfq add rex.B rex.RXB and lods cmp rex.WX xchg (bad) (bad) sbb fbstp movabs xchg and cs rex.WRXB xor xchg push rex.WX mov xor adc sbb in fsubs jns,pn in or mull jo xchg popfq test add cmpsb retq int add sub xchg (bad) jae sbb (bad) nop xor or (bad) scas xor (bad) push xchg (bad) (bad) jg xchg gs (bad) rex.WRX adc add (bad) cmpsl out repz sbb xchg pop (bad) in enterq mov out sub out pop sbb (bad) mov leaveq xchg loop outsl push xchg jge jl push cwtl xor pop negb pop jle sahf (bad) xor rex.X (bad) rex.WRXB leaveq xchg jmp cmp loop hlt cwtl (bad) (bad) in (bad) retq movsb cwtl fstp (bad) mov addr32 leaveq (bad) xchg movsl cmp xchg jge iret movsb loopne xchg pop xchg jb out cmp callq or outsl jo mov imul (bad) mov addr32 xchg jrcxz mov xchg (bad) lahf adc pop stc insb cmpsl jmpq jp enterq push sarl movslq (bad) pop rex.RXB sahf xchg out sbb pushfq xchg mov rolb test mov xchg and jno movslq outsl hlt movsb test lcall lret jg in std mov je and out xchg repz cltd (bad) ja mull lea xchg callq or imul mov cmp (bad) (bad) xchg movsl outsb nop pushq jnp rcrb or cmc cmpsl movabs mov and (bad) and or mov pushq (bad) out test sahf push in sbb jne xchg rex.W mov (bad) (bad) xchg cmpsb pop hlt pop (bad) clc int3 (bad) pop push movabs outsl orb (bad) pop pushfq (bad) je cs xchg movsl jnp cli test sbb test jae xchg nop mov (bad) pushfq mov insl stc popfq xor rex.R xor cmp sbb insb sub cltd cmc test cld in in xchg sub cltd icebp mov jmp jg movabs push mov or (bad) in rex.WB (bad) repz movsb pushq in jb xor movabs and popfq push push sbb mov (bad) xchg adc jbe add lea pushq and cwtl sub mov adc jg lret (bad) jmp and fs pop or je mov xchg scas add cmpsb in xor mov icebp xchg xchg (bad) mov fwait rex sub (bad) xlat xchg (bad) (bad) sbb (bad) pop (bad) not pushfq xchg int3 or pop mov (bad) xlat jne rex.RXB (bad) sahf (bad) (bad) xchg cwtl and xchg xchg loopne movabs js xchg xchg lret cs xchg jno jrcxz rex.WRB (bad) (bad) (bad) xchg fs sub push xchg rex.WX lods mov movsb (bad) xor cwtl cwtl mov sbb hlt mov xchg (bad) rex.WRX xchg enterq mov (bad) lcall nop xchg mov mov pop cmpsl fwait xchg and pop cmpsl rex.X mov mov gs sbb test (bad) hlt rcrb lret xor push xchg nop adc insl test mov xchg pushq lret cmpsb fbstp jrcxz adc (bad) cmpsl pushfq popfq std cmp fistpll (bad) out movabs rcll sahf adcb imul xor xchg movabs mov cmpsl and test cmp retq insl stos in ds rex.WRX rex.RB pushq sahf ss rex.R jo sub adc (bad) scas cmp (bad) rex.R push (bad) jrcxz mov mov jmp adc push xchg out loope jne movslq int rex.RB add pushq push jge and pushq mov jno mov callq imul adc sbb addr32 xchg fcoms lods mov movsl out cltd (bad) xor push enterq sbb (bad) in flds rex.WXB xchg (bad) int fstp outsb (bad) (bad) mov xor sub mov (bad) mov movslq nop (bad) jbe sbb insl push lea jmpq or nop imul or imull cld push icebp sbb iret (bad) nop sbb jmp jmp mov int3 xor xchg pushq mov sbb xchg (bad) jbe adc (bad) and shr int jne (bad) mov add jle negl and nop adc cltd (bad) mov (bad) mov and mov pop lret mov cltd imul lahf xlat (bad) push (bad) mov jp pop lahf mov xchg rex.WXB pop mov lock jo fnop and (bad) fldt (bad) xchg fs fmuls cltd (bad) rex.WRXB cld movabs rex.WXB jb scas rex.WRXB adc adc cwtl popfq mov nop cmpsb faddl sbb xor xchg nop (bad) sbb (bad) pop add (bad) (bad) in movslq js loop xor imul data16 lock push mov mov loop xchg mov cmp mov mov mov xchg mov (bad) imul rex.X sub (bad) or adc mov rex.XB adc (bad) or xchg cmp cwtl (bad) jle mov rol (bad) (bad) repnz cmc xchg ss fsubrs rex.W xorb mov pushq out mov xchg nop (bad) mov leaveq movslq test (bad) mov jg shrb (bad) movsl cwtl cmpl mov (bad) rex rex.WRX add push cmp push sbb cmpsb pushq cwtl movsl test mov lea lahf enterq sbb xchg xchg (bad) cmp roll (bad) mov sahf jp cmp callq test push test xchg cs minps jae xchg rex.WXB outsb movabs outsl rex.B ss (bad) (bad) (bad) mov xor xchg (bad) adc add add pop lret pop rex.WRX cs outsb loopne movabs movabs pop mov and jb xchg insl jno cmp mov callq adc sbb (bad) loope negl xchg rex.WB loop rex.X stos xchg mov cmp sbb rex.WRX enterq rex.WXB ja outsl cmpsl retq xchg jnp outsb rex.WB cmp cmp rex.B or pop sub out xchg or test js xchg jge sbb pushq push notl pop push xchg adc data16 xor rex.WXB adc xchg out xorl mov xchg mov sub fwait push jmp rex jge popfq xor rex.R rex.XB sub jle or cmc movabs (bad) enterq (bad) mov test xchg or adc sub jnp mov push sbb movsl cli fldl nop sahf mov (bad) (bad) push xchg rex.W sbb mov rex.WRXB jno out shlb mov fstpl jp rex.R sub jl xchg (bad) out rex.WRB shrb addr32 or (bad) jle sub in movabs lahf mov rcll movabs mov vcmpps cwtl (bad) (bad) rex.RB (bad) xchg pop mov mov mov xchg (bad) rex.XB cmpb icebp repnz (bad) mov cmp in negb jle fucom mov out cmp (bad) xchg sbb data16 xor sahf rex.X repz hlt in sahf adc fistl retq adc cld cmc lods nop sbb out xchg sbb xchg xchg ffreep adc jmp xchg jb insb pushfq lret and fdivrs push and or push fsubrp insl cltd adc fnstenv cmp cld retq adc mov addl ss out jp rex.WB add movabs and sbbl cwtl sti jae lea pushq rex.WRX rex.WRXB lret sahf jne push xchg adc notb jp repz xchg imul adcb rex.B (bad) mov xor add or fdiv rex.WRXB add xchg es pushfq (bad) ud2 (bad) xchg adc rex.WRX repnz xchg ror movabs movabs out (bad) jnp adcb cmc (bad) jb cmp js outsb jp push (bad) test adc sbb push (bad) nop sub rex.RXB int hlt lahf rex.WB lock xchg (bad) xchg mov sti and movslq mov (bad) imul (bad) add mov (bad) addr32 adcb fcmovu cmc rex.X xorb subl jmpq movsl and xchg je sbbl jne movslq xchg lock (bad) nop xor pushq (bad) sbb sarl (bad) popfq callq mov pop sarb (bad) jg mov (bad) push add notb jmp jbe sbb scas xchg mov fwait pop fildll sbb jno rex.RX sub xchg callq sbb pop sahf loopne jge enterq ds xchg out rex and xchg xor sub shlb jg roll movsb and sbb cmp jno or pop pop mov xchg add rex.R xchg mov (bad) lods cld xchg in adc cwtl xchg sbb (bad) imul cmp neg mov sbb and mov xchg cmp xchg jbe and xchg mov jmpq cli mov rex.WXB nop in xchg (bad) adcb cwtl jnp pushfq and (bad) fyl2x jb push fmuls mov xlat cwtl (bad) je (bad) fdivp push and xchg retq cmpsb popfq (bad) jmpq cwtl or int3 mov adc push xchg add xlat out rorb jmpq xchg (bad) outsl (bad) push sahf fcmovu scas out pop add pop fist hlt (bad) xchg movsb mov loope cli (bad) add loop sub xchg jl rex.R iret (bad) lock xor and sbb repnz jg mov sub setg jl or mov add push (bad) (bad) and orl faddl sbb adc adcb rex.WRXB rex.WXB fwait cmpsb xor fdivs xchg repnz push retq rex.XB mov (bad) in movabs (bad) std cs (bad) fwait movsb push mov mov (bad) sub sub fmul pushq in mov xchg loope sbb jrcxz xchg xor xor pushq and mov lods (bad) (bad) sbb (bad) mov (bad) rcr add rex.WRB std cli sub and pop or xchg adc rex.W (bad) push movsl outsb mov add (bad) rex.WX sbb jg cmc cwtl adc pop or xchg xchg xor xchg outsb add movabs es loope mov xlat or (bad) (bad) mov popfq adc (bad) sub test cltd fs sarb adc push fwait sahf mov and ja or scas mov xchg out (bad) (bad) insb jbe data16 cmp sbb (bad) ss loop cld pushq rex.XB stos sahf or (bad) cmp adc xchg sub adc rex.WRX sarl cltd mov (bad) cmp xor mov and sbb (bad) lahf rcrb movsb data16 (bad) pushq pop cmp add rex.RX lock sbb mov (bad) lret cwtl push pop fidivr (bad) repz adcl in jo rex.WRXB mov xchg or rcl jns loopne mov or retq rex.WRXB (bad) or rex.WRX (bad) add stc movsb jp push sbb mov lock movsb push nop lahf stc (bad) xlat sbb mov add or repz cmc jg in fwait add sbb xchg jbe rorb add callq push lret jnp and (bad) adc (bad) jo (bad) gs (bad) xor sti cmp xor jns (bad) (bad) nop and xchg addr32 sbb push (bad) xchg pop (bad) (bad) or insl imul push and (bad) adc xlat (bad) (bad) mov pushfq fwait insl sub movl ss in rex.WRB scas adc lea adc ficom mov jge sub xchg mov and popq add jb pushfq xor (bad) enterq div rex.B (bad) (bad) (bad) add data16 lea repz rex.WB sbb int3 pop pop add rolb (bad) iretw (bad) pop (bad) pop jae mov rex.WXB rex.W insl push add outsb adc rex.RX pushq rex.WRXB decb mov mov cli and pop movsl in lret out andl rex.X iret sbb mov pop and (bad) outsb (bad) mov fxch mov xlat retq lods (bad) (bad) enterq scas sub rorb xchg scas imul sbb (bad) mov iret jnp (bad) in (bad) adc fs cmp test and xor clc rcrl sbb rex.W rex js mov sbb stc and fcoms xor (bad) std pop (bad) mov (bad) xor nop rorl push movslq adc adc (bad) pop popq jl fwait fs sub push (bad) jbe stos sahf jge add loop mov sti xchg sub addr32 stos xlat shlb mov fdivl and shrw jmp mov cmpsb rex.WRX out imul adc pmullw cli mov retq orl mov cmpsl (bad) lea xchg rex.X insl mov and mov push imul (bad) nop adc adc xchg fwait xor rex.RXB insl test sub imul fldt rcll jne jmp loopne (bad) jnp (bad) or sbb xchg retq (bad) lret mov rex.WRX jbe mov mov pop sub imul jp or pop mov adcb (bad) test mov sbb icebp test (bad) and add outsl xor retq mov or retq or mov (bad) (bad) (bad) icebp push sbb rex.RX xorl sub or add cmp ja rex.WX loope mov (bad) rex.WRB sub xchg mov in mov rex.X rex.RX pop pushq or xchg mov (bad) mov mov or nop outsb jae xchg jnp mov xchg imulb sbb loopne mov jne mov add jns outsl (bad) outsb rex.W adc subl mov rex.RXB cmpsl gs (bad) movabs push mov and cmp out adc jg idivl mov rclb mov jg jg (bad) sub rex.WRX rex.RX nop jno cmc movabs sbb jg xchg leaveq imul rex.WB scas mov imul (bad) push (bad) adc imul cmp std mov mov (bad) xor jg adc rcrl lods (bad) and out loope xchg pop jnp mov (bad) outsl icebp mov test lret sbb lahf test fstpl rex.WRB outsb jbe sbb stos sub xchg loopne sub add jmp cmovl fwait xchg sbb add (bad) and sbb (bad) pop mov in outsl xchg fsubs and jp (bad) jo (bad) sub adc (bad) pop and push (bad) retq jo (bad) rcrl (bad) cmp sbb lea sub (bad) lods xchg out jmpq in insl (bad) (bad) jmp or nop stc (bad) cmp negl iret int3 (bad) addr32 sbbl mov or rex.RX mov outsl loop jae (bad) rex.X frstor (bad) adc mov jae je xchg or rex xchg sbb sub out nop cmp enterq (bad) (bad) ss test popfq mov negl test xor (bad) jmp pushfq (bad) jmp sti pop mov xlat test and jp (bad) jno rex.RX int fmull callq (bad) xor fwait mov xchg fisubr test (bad) rcll jnp sbbl (bad) cld mov insb cld jmp sub (bad) and lea (bad) (bad) std and jle and rex.RX (bad) fdivrl jl rex.RX movabs cmp cltd jp imul (bad) (bad) repnz cwtl sti mov xchg fst xchg and push pop add add rex.WXB in int fistl (bad) rex.WRXB cwtl or (bad) xchg fstl (bad) sti cltd xchg stc adc (bad) cmovg rex.RX pop cmp (bad) lahf outsl movabs (bad) mov jb sub iret pop pushq (bad) push pushq sub ja (bad) testb in (bad) fimull jge cld xchg (bad) (bad) pop mov push jae (bad) jl (bad) (bad) rex.WB jrcxz sbb pop stos (bad) mov (bad) pop lea xchg sub mov pushq pushq (bad) int3 pop mov mov sbb push rex.WB xchg fs cli rex.W js cmp mov (bad) (bad) movabs (bad) in jrcxz rex.R popfq xchg cmp sub xchg movntq out (bad) rex.WB (bad) pushfq sar (bad) (bad) jle addr32 mov cs scas xchg sbb jmpq cltd mov jnp xchg sub loopne repnz lahf xlat or xor cmpsl callq fwait jns cltd lret out xchg cmp jg jmpq xor xchg (bad) sub jmp stos pushfq mov (bad) rex.WRXB (bad) xchg (bad) (bad) in mov sub nop mov lods (bad) movsb (bad) xchg sbb icebp xlat cmpsl movsl cmp (bad) data16 push pop xor cmp rcr idivb movsb cwtl scas iret movsl sub fld cmpsb fs adc (bad) test pop hlt jge je outsl xlat (bad) mov and xchg gs rex.RXB xchg hlt xchg jmp lock rex.XB out fs push in (bad) out and mov xor push cmp mov callq or fwait sahf rcl add xchg clc test lods imul ja (bad) push (bad) mov xchg sbb rex.X fistl (bad) flds (bad) jno (bad) push test std mov loope xchg xchg cwtl movabs fldl mov sahf or ficompl rex.WX pop jbe or xchg pop and mov and (bad) rex.X jne xchg mov and lahf imul and ja xchg adc retq (bad) mov (bad) cmc or xchg lods (bad) xor xor in jmp (bad) jno or xor notl loop sbb push out rex.RXB roll in fist sbb xlat xchg (bad) adc jnp pop outsl rclb ja test rex.X fisubrl or rex jae and sbb (bad) callq cmpsl adc (bad) jp xchg add pop nop clc rex.WB add xor mov cmp mov jb test (bad) mov xchg rex.RXB xchg cmp adc jg jnp (bad) rolb (bad) xchg jmp (bad) sbb sub xchg mov jne sub (bad) mov cltd sub (bad) test (bad) push xchg xchg mov (bad) fadds xchg cld rex.W adc jns test incl ja out xchg adc mov scas cmp cmp xlat and cmpsb sbb imul rcrl (bad) rex.R lcall rex.WR rex.WRB add rex add imul stos add rex.WX pushq lahf pop mov (bad) sub sbb (bad) jp iret cmpsb in je,pt (bad) (bad) add rcrb rex.X cwtl int mov test and or sub (bad) add rex.WX sub orb (bad) cwtl leaveq mov push retq (bad) cwtl or pop jp clc xchg (bad) and pop adc fwait scas scas imul fs adc leaveq sub sti test fcoms int repz repz lock cmp fidivl je jge (bad) jg xchg (bad) pop rex.WRX ja mov orl (bad) mov mov mov pushfq cmp and lret mull adc (bad) rex.WX mov (bad) (bad) test imul popfq jae rex.WX mov xchg xchg adc xchg nop adc rex.WRB rex.WX movsb mov xor lea pushq pop (bad) add sahf rex.WB fs ds mov pushfq (bad) mov jb (bad) xor xlat jmp (bad) sub adc rclb sbb add test pop imull js rol xchg (bad) jge rex.R xchg sub je cwtl sub sbb pushfq int3 and push pushfq mov (bad) (bad) adc (bad) icebp mov push mov jbe xor rex.WXB xchg nop adc cmp sub cmp jbe add sbb and rex.WB notl mov (bad) rex pop stc (bad) add xor jbe sti stos movsb int fldt cmp (bad) movsl xchg push (bad) std int jg xor (bad) push push rex leaveq or jns xchg outsb xchg (bad) sub in cmp gs clc or xchg mov sub xlat adc loopne pop test enterq (bad) jne retq (bad) xor in outsl sbb cli (bad) lods int add add loope mov (bad) out callq adc mov xchg fmull (bad) cltd add (bad) mov (bad) push test add movabs fist (bad) insl jbe scas fcomps outsl imul (bad) xchg mov (bad) stos lock mov shrb xchg push mov push cmp pop or pop mov rex.WRXB sbb add add jbe outsl rcrb sub fstp (bad) and pop roll push mov jle movslq (bad) scas sub (bad) pop ds mov or cmovge cmp out faddl push push (bad) (bad) cs (bad) (bad) push ss xor rcll cmp sbb or out out xchg mov rex.W scas fwait hlt jp mov rolb jnp cwtl xchg xchg cs or xlat mov mov xchg jne (bad) rex.X and pop (bad) lods outsb xchg loop ss test imul xchg in cmp movabs mov cmp xchg (bad) sbb negb jbe jg add cmp rex.WX xchg pop in (bad) cmp in pushfq jb (bad) pushq mov lgs cld xchg faddl lods js mov pop sub ja xchg test int3 xor (bad) and (bad) mov cmpsb add mov mov (bad) mov cmpsb xchg add or xchg cmp xchg xor (bad) lea cs ds loop xchg rex.X jg or mov movabs mov push or adc pushfq cmp movsl shrb pop jne mull and xchg repnz jno xchg lret cmpsl mov movabs rex.WXB ficoml leaveq or sub jmpq (bad) fdivl xchg (bad) rorb sbb out xchg rex.RXB xchg popfq orl xchg sbb fsubr xchg sahf out mov xorl rex.XB (bad) pushfq rex.W cmp cmp or lret xchg push (bad) (bad) std movabs mov jno movsb sbb xchg (bad) sbb lock jp (bad) fdivl fisttpll or or leaveq and xchg pop pop (bad) xor jge xchg mov or out cmp movabs idivl out cwtl pop insl outsb jo (bad) rex.RB mov cwtl sarl (bad) cld stc mov xor xor insb fidivr sub jg (bad) adc sbb scas cmp std mov nop (bad) imul retq or xchg pop xchg clc rex.WR cmpsl cwtl enterq notb imull xchg lods in rcll loope push scas cmp push ja pop stc mov movabs sub pop or rex.WRXB nop xor std out xor (bad) rclb push popfq cmp xchg clc or or mov cltd ljmp (bad) in (bad) movabs sub test (bad) mov std (bad) enterq mov subb xchg adc leaveq jmp adc rclb (bad) pop xchg rex.B sahf and pop stos pop sub movslq test imul gs (bad) add adc ja insb (bad) mov mov mov and rex.RXB insl (bad) imul fisubr movslq cmp (bad) mov out xchg cmp or lahf push and mov lods lea (bad) mov pop xchg movabs or mov jns mov sbb jg cld insb (bad) movsb lahf hlt (bad) xchg pop pop adc je xchg (bad) lret stos add mov xchg adc lods ja xchg cmp out (bad) imul xchg gs push xchg cli pop fs (bad) jnp xchg sbbb jg (bad) or loopne xchg mov xor adcl xchg sub paddsw xchg nop mov out cmpsl imulb cwtl fnsave rex.W mov pop and movslq sub xchg retq insb cli gs jne add (bad) cs xchg enterq push rex.WXB movslq xor xor rex.WRB sbb lods xchg stc int3 sbb rex.XB mov adc mov mov rex.RX (bad) (bad) je add pop pop (bad) ss mov fdivl callq sarl mov (bad) repnz fcmovnb cmpb or fisubr std pop jo hlt subb xchg pushfq gs cmpsl pop movslq pop and (bad) movsl rex xchg mov mov xchg and cmp cmp ss addr32 (bad) add popfq jge mov rex.WRB push (bad) mov (bad) mov (bad) and jge or xchg sti pushq push (bad) pushfq adc pop stc rex.WR outsl mov or xlat mov mov nop xchg jle mov rex.RXB xchg int3 add movabs mov (bad) scas (bad) pop sub insl (bad) lret rcll add gs rex.WRB sbb loope rex.WRXB xchg sub out xchg outsl (bad) jl jbe pop stos and fimul pushq retq lea xor add mov xchg rex.WRB sbb (bad) mov icebp adc mov rex.WR (bad) pop mov js cmc cmp adc jb cmpsl pop movslq mov mov push (bad) (bad) rex.W rcrb jns (bad) xchg popfq sub movsb (bad) mov rex.WB outsb int3 movabs xchg std loop mov xchg outsl scas rex (bad) (bad) push (bad) rex.WRXB out mov mov mov mov (bad) or (bad) cltd xchg nop adc outsb push (bad) (bad) adc mov cs xchg insl mov je lods pop push int (bad) out rex.WRXB rex.WR or (bad) mov adc callq popfq xchg idivl test jbe xchg adc (bad) jnp sti rex.WRX and push (bad) mov and (bad) add icebp (bad) stos mov (bad) cmp rol notl fisubr lea es mov leaveq cmp or in in movabs cmc lods adc cmpsb stos pop gs add cmc fnsave add xorl rex.WX sbb and xor loopne cmp xchg sbb cmc fisubr pushfq sti rex.X jnp,pt insl (bad) out int3 mov push adc stos cwtl cmp xchg and (bad) retq rex.WRX outsb cmpsb int3 cwtl and in fsubrs adc stos or (bad) lea insb xlat pushq jns and flds cltd stos and cmc sarl fldcw mov ljmp xchg (bad) (bad) xchg cmp pop push mov callq (bad) (bad) scas mov sarl insl retq lock fldt rex.WR popfq adc mov sti pop xchg jne mov mov add mov ficom mov in (bad) (bad) (bad) movslq add mov jl and jg xchg xchg nop (bad) test cmp jbe pop fistp movsl scas movabs orl scas jg or enterq rex.W imul push mov stos pop jns add cmp (bad) jg (bad) push mov (bad) rex.WRX imul add xchg (bad) or xchg push (bad) movslq fldenv mov lea mov movabs (bad) scas loopne stos mov jp movsb push push fdivp add mov clc adc (bad) lods (bad) lahf jnp lock repz stos adc data16 (bad) (bad) adc rex.R ficomp (bad) (bad) sub mov jmp pushfq data16 es sub xorl (bad) (bad) mov cmp movsb sarl pop pop (bad) rex.WR (bad) jbe (bad) sub out pop imul pop scas cltd cmp lcall fwait (bad) xchg (bad) xchg rex.W popfq (bad) lea xor lea popfq imul rex.WRXB repnz insb repz xchg adc rex.WX adc cwtl lahf rcrb jne mov rex.R xor and cmp xor xchg (bad) rex.WXB jrcxz cmp test xchg fnstsw (bad) mov movabs pushq xchg test sub fnstenv xchg rex.R insb xor nop icebp xchg cmc lret lods push loop xchg jle rex.WB and xchg in (bad) not mov lret pop and mov mov sub movsb cs pushfq leaveq fnstsw mov mov or (bad) lret rcll (bad) cs xchg out cmp xchg (bad) (bad) xor callq sbb nop fcoms xor (bad) mov (bad) xor in xchg xlat outsl push movslq lods (bad) mov insl sbbl pop (bad) outsb movsl cmpsl ja push test (bad) jae cmp minps jbe (bad) shrl movsl sbb push hlt or sbb clc push imul and rex.WX andl nop/reserved xchg pushq (bad) mov movabs xor cmp mov mov out clc test mov in (bad) and sbbb fldl sbb (bad) movabs cmp rex.WXB rex.RX scas mov sahf pop (bad) imul testl sbb hlt xchg shrl fiaddl adc xchg out mov out xchg (bad) (bad) fistl insl xchg fwait rex.X and xchg stos ss or or scas int3 (bad) (bad) imul sti sahf xchg xor cmp rex.WX ficoml in pop jno (bad) jae cmpsl lret sbb mov xchg movabs cltd scas lret jmpq sub xchg (bad) rcrl xchg and sub xlat (bad) sete outsl jp rcrb cmpsl sub fidivrl cmp mov xchg adc jo iret (bad) out mov (bad) iret fcoml sbb xchg (bad) rex.WRB xor (bad) or sahf roll or xchg xor repz cwtl mov movslq mov nop (bad) mov or sub add sahf (bad) int movabs jne jne retq in and mov mov scas (bad) rex.RB fwait icebp pushfq imul cmovs ss (bad) jbe in stc xchg (bad) pop (bad) mov repz lret or xor add shrb pop (bad) pop ficomp rolb xchg (bad) (bad) sti pop rex.XB adc movb pop pop add lock jmp popfq adc fmull (bad) cmp (bad) in pop jbe in cmp movsl (bad) (bad) loope sbb xchg mov rex.WX rex.RXB push and mov adc jg pop mov mov sbb xor xchg iret (bad) cmp push pushfq movsb add test sbb ds (bad) jns (bad) iret sti sbb pop mov mov (bad) cmc (bad) sub sbb mov sub and icebp gs jb xchg rex.WB (bad) cmp jns cwtl cmpsb add insb rex.RXB and xchg xchg rex.WX es and push shrl sub cmpsb movabs add jns xchg out or loope (bad) pushfq push cmp xor lods imul (bad) iret push incb nop cld cltd (bad) (bad) mov insl fs callq out cmp test imul data16 adc fsubl pop (bad) mov fwait and xchg (bad) add add addl (bad) jo mov rex.R sub and scas fwait imul sahf and (bad) cs shrb leaveq sahf or (bad) stos jnp mov cmpsb pop movabs rex.W outsl test rex.X push pushq cwtd notb xor outsl cmpsb xchg sbb mov mov iret fwait sahf gs or test (bad) (bad) je (bad) (bad) pop xlat or idivl lret xchg rclw movsb add pushfq mov sbb sti xchg lods (bad) mov (bad) icebp imul cli xchg rex.X fldt mov ficom (bad) mov cmp in mov (bad) mov or fucom cltd mov add enterq stos cmp sbb in xchg (bad) rex.RX decl rcrb sbb (bad) cmpl mov scas (bad) sbb movabs fdivrp sarl push mov or sub pop push rex.WRX (bad) (bad) mov retq cmp jno add movabs fnsave mov insl (bad) stos (bad) jns scas mov (bad) in (bad) pop xchg retq adcl icebp scas clc nop movabs adc xchg rex.WXB pop fcmovne (bad) xchg divl or xchg (bad) rex.WR xchg (bad) mov insl clc nop fiaddl jnp enterq mov scas in repz and lock repz lods incl int3 retq fidivr jl rex.WRXB (bad) fisttpl (bad) sub (bad) jle (bad) xor nop nop jno mov mov or (bad) (bad) clc xchg loopne (bad) mov xchg enterq (bad) fdivl movsl sbb subl lods movabs orl imul sub cmp rol xchg cmc (bad) rex.X mov (bad) and movsl jne xchg rex.RB cmp jno jrcxz xchg jo (bad) sub lret pop rex.RXB adcl callq cmpsl xor mul rex.WXB rex.WX or and mov mov rex.WRXB or fidiv push and xchg test mov rex.XB fs (bad) jno scas sub fcmovnu rex.WXB pop jbe xlat push (bad) pop sbb (bad) andb je,pn pop jnp,pt xchg sub adcl pop push sub xchg rex.WRXB clc and in (bad) xchg in (bad) orl lock (bad) xchg rex.WRXB out (bad) (bad) inc shrl movabs imul sbb adc pop cmpsb fild add (bad) jle mov pop sub or xchg xor sbbl shrl jo rex.RXB and dec (bad) scas and movabs mov jge jnp iret pushfq movaps push (bad) xor mov (bad) es (bad) mov hlt repnz (bad) outsb stos repnz mov jbe rolb (bad) rex.WRB and (bad) fildl (bad) jg rcrl and ss xor rex.WRXB cwtl hlt xor (bad) stc jg rex.WB rex.B pop out rcrb push pushfq sahf lods cmp adc (bad) add out in int3 (bad) test pop gs sti push xchg jo fs sub sbb scas and gs fwait or je sahf (bad) (bad) (bad) and pop rex.RX out xchg movslq (bad) mov retq xchg xchg movsl add (bad) xlat movsl sbb pop (bad) (bad) in cmp sbb jg rex.B xor stos negb rex rex.RX mov push lods nop sub nop imul jg (bad) rex mov idiv rol push xchg jmp cmc pop jae jg ds sbb and popfq fcmovnb (bad) repz mov leaveq add xchg movsb imul xchg cmp and es or lret shrb adc retq scas rex.RXB addr32 sbb xlat fistl cmp cmpsl and stos (bad) mov xchg (bad) outsl mov movsb and in xchg in push jmp stos add push scas (bad) sbbb xchg je or shll fild fcoml cwtl (bad) icebp (bad) (bad) movsb cmp jle pop (bad) fcoml cs mov sahf cmpsl sbb jnp sahf lods lret xor (bad) (bad) cmpsb add cmpsb mov mov sbb sub (bad) push sub testl cwtl (bad) pop (bad) cmpsb (bad) rex.WXB rcrb negb test movsb or int3 rex.WRXB pushfq (bad) mov rex.XB cltd xor fdivrs cs mov jl add cmpsb repnz lock and mov icebp xchg rex.WR or leaveq or cmpsl xchg xchg (bad) cmp lods xchg cli leaveq mov rex.X movabs or jmpq std adc rex.WRXB ds cltd mov clc cmp incl (bad) stos push jmp xor cmp movabs cmp (bad) and jp out or pushfq ficom (bad) xchg sub xchg and mov cmpsl scas xchg adc xchg jb (bad) cmp clc (bad) and pop push push shll (bad) sahf out icebp mov xchg retq (bad) (bad) push pop and lods pop (bad) cmp (bad) testl xchg xor (bad) rex.W in (bad) xchg xchg (bad) loop test out xchg stc cld cltd in push add fcoms cwtl fs ss mov (bad) sub movsb xchg fwait cs mov (bad) xchg sbb mov adcl pushfq sahf mov movabs je adc jnp rex.WRB test or sbb push nop or ds (bad) sub pushfq (bad) nop hlt add addr32 pushq adc mov mov (bad) jmp (bad) jmp movabs add out add rex.RB pop cmpsb (bad) addl xchg lock int3 testl add fs adcb out push cs or movsb (bad) mov notb xchg add nop (bad) xor fild (bad) xchg mov sub in jl jrcxz xor insl mov lods sahf (bad) sti lahf cmp movslq (bad) xchg mov pushfq lods (bad) (bad) rex rex.WRX rex.B (bad) jnp jbe (bad) and (bad) jne ss xchg and xor mov add xchg outsl test jrcxz cmp movsl sbb jmp sub or rex.W cwtl jp add fcmovu rex.WRB nop adc xchg lods xor or push out xchg sub mov stc and movabs and stos stos lahf jmpq rex xchg push test xor in lahf xchg addr32 je frstor mov push (bad) outsl rex.WRX push imul jle jb cmp mov cltd push xchg stos cwtl xor pop ficomp (bad) (bad) sub cwtl adc xor jrcxz rorb xlat adc pushq xchg add cmp cmp xchg rex.W xchg push sbb and and add push shrl pop fs movabs movsl out (bad) xchg mov (bad) fbstp push (bad) (bad) (bad) jnp (bad) or scas mov xchg clc sti xchg sub mov cs sbb jb stc rolb rex repnz add retq pushfq lahf out nop sbb scas or or xchg outsl pop movabs add lods mov rex.RXB cmpsl rclb pop mov (bad) push scas (bad) xlat sahf sbb out fldt (bad) add jmp jrcxz out cmp mov (bad) sti mov (bad) rex.X jle (bad) mov imul adc rol or (bad) insb (bad) (bad) sti lods mov push jge mov insl sub clc or lock cmc mov sub rex.WB (bad) outsl cs xor rex.WR ja adc mov nop lea popfq cmp (bad) xchg mov xchg (bad) sahf clc addr32 scas mov (bad) pop out cmp (bad) push mull pop loop test jbe cld jl fstpl mov xchg (bad) xor rclb shrb ja pop (bad) jmpq jle cmp sbb fs fisttpll (bad) movabs xchg and (bad) popfq and mov xchg xchg retq xchg mov insl rex.X (bad) idiv xchg mov xor (bad) xchg (bad) pushfq mov sarl and or jp lahf jge (bad) loop cmp addb xlat imul mov lods cmp shll mov or cmpb sahf out pop and movsl mov xchg xchg mov pop cmp cmpsl mov or mov jb push retq addr32 pushfq jmpq loopne stc (bad) jle xor rex.WX pop and sahf adc (bad) cmp (bad) cmp loopne lea rex.WRX jg rex.WRXB in or and push (bad) movsb imul out xchg ds mov in fs jmpq movabs shll mov out rcll (bad) pushq test mov cmp xor (bad) xchg (bad) (bad) in and push (bad) rex.WR mov (bad) ss adc fs movslq xchg or notl xchg and imul xor xchg (bad) sbb lock cwtl callq (bad) mov jmp clc stos xchg xchg cmp jno movabs xchg icebp mov jmpq subb test imul cmc cltd in rex.WX rex.WRXB pushfq or sbb movabs push sub stos pushfq fwait pop push xor (bad) rex.WRXB (bad) nop mov sti (bad) push sub out sahf jp sbb (bad) (bad) add imul retq cmp lods add in (bad) nopl int3 popfq sub insb (bad) pop pushq sahf and cli pop rex.WRXB rex.WR pop scas xchg jae insl outsb popfq movabs imul mov push push jb pop rex.WX mov ds mov sbb xchg repnz xchg addb test fnstenv (bad) xchg idiv (bad) (bad) rex.WRB fcoml pop fimull push jnp xchg jae je adc add (bad) adc mov stc (bad) popfq pop (bad) scas sub in xlat push notl fwait xor (bad) mov mov lea clc xchg (bad) jp adcb cmp retq (bad) rex.XB cmc rolb cmp out mov (bad) sub rex.WXB rex.R mov xchg movabs popfq ss sbb cmc (bad) (bad) lret pop (bad) pop ja add out (bad) (bad) emms in pop jne push cmpsb (bad) iret jne pushfq jae insl xchg fidiv popfq mov sbb lret test rex enterq and xor cld xchg pop push out out mov rex.WXB int callq jne loop push icebp jrcxz xchg nop pop test rex.WXB pop std xchg mov push (bad) (bad) add mov jne retq xchg (bad) movabs std mov sub cwtl xchg imul rex.XB jge out or nop sbb jrcxz mov mov rclb jmpq mov or gs jp or jle out adc jnp lea mov insb xor (bad) (bad) (bad) (bad) addr32 test (bad) insl (bad) or mov rex.XB add adc mov rex.RX pushq jmp mov scas adc cli pop mov xchg pop rex.WR (bad) shl scas cli movsl in fnsave or sub repz dec scas mov (bad) xchg sbb mov out (bad) fimul or sbb and xorl add outsb and movabs (bad) test sbb (bad) mov gs mov mov (bad) rex.XB rex.R or mov (bad) (bad) mov mull xchg test mov sbb (bad) out adc cwtl leaveq (bad) imull out sbb jle xchg sahf stc push (bad) jge or pop cmpsb rex.WXB rex.WB gs pushq and enterq pop sbb cltd (bad) rex.WRB cwtl (bad) (bad) sub test mov fstl rorb rex.WRX (bad) (bad) cmp mov xchg add mov popfq cmpsl add xorl xchg lock fbstp xchg and in in clc cmp mov out fimul sahf sbb es stos cmp movabs sti mov adc jp adc jns lea rex.RXB imul stos lret (bad) mov rex.X fistl xchg nop (bad) xlat jb (bad) int3 adc fisttpl xchg leaveq cmpsb lret lahf shrb decl jg xchg data16 mov (bad) (bad) pushq xchg xor add xchg clc push (bad) mov pop push xchg (bad) sbb sub sahf in imul adc jg or fwait movsb cmp add or push outsb cmpb or (bad) sahf mov pop (bad) push rcll fildl jb retq jns in je (bad) xchg adc rex.WB clc cmp xchg ss pop lret cli or pop addl rex.R rex.WR xor (bad) (bad) movsb (bad) xchg cmp cmpsb (bad) add test push sub xchg (bad) cmp pushq xchg fsubrl jae sahf (bad) int3 mov rex.XB cwtl shll (bad) cmc or in (bad) vcvtpd2psy xchg mov rex.WRXB cli test fimul adc fist (bad) (bad) lods std lret sbb pop or (bad) stos xchg movabs and sub ja jmpq mov xchg mov scas andl or xchg enterq adc push add (bad) (bad) cmp sub mov and retq mov pop mov add xchg sahf scas jae (bad) (bad) data16 stos movslq push outsl rex.X mov pop xchg rclb (bad) fdivr outsl out xchg add mov (bad) retq mov flds (bad) outsb mov scas xor rex.RX add adc imul jmpq outsl pop sti repz pop (bad) and mov mov xchg rex.RXB test jbe int out cltd movabs loop and (bad) (bad) mov mov in add fildll icebp or outsl (bad) (bad) adc jmpq clc jno addr32 push hlt xchg lret movslq cmp (bad) xchg xchg cli jmp pushq cwtl xchg stos fidivr gs leaveq (bad) jne sub in cmpsl xchg sub adc (bad) out cltd (bad) push pop mov xchg cmpsl mov xchg mov pop sub xchg xor rex.RX fs add (bad) mov add stos mov push xor int3 xlat lret ror xchg mov jne rex.R or rex.RB mov cmpsl mov xor jbe (bad) jge jmp cmpsl xor mov mov enterq cmpsl cli lock cmpsb lret addr32 scas test (bad) and shlb adc sub movabs xchg (bad) in jae rex.WRXB push add adcl xchg nop (bad) push shrb fs mov push and lock movabs sahf mov xchg jnp sahf fild mov loop insb add sbb xchg jae rex.WR out sub xchg movabs nop or outsl lret fincstp (bad) rex.X movsl lahf (bad) ds (bad) mov std pop mov nop test out mov imul (bad) xchg cld outsb xchg rcr repnz (bad) seta mov movabs stc jno xchg rex.WX fisubl sbbb (bad) xchg lret and fidivr xchg xor sub pushq js xchg mov push or imul xchg (bad) xchg mov sbbb cwtl (bad) out mov ja movabs lock gs lods out xchg pop ds fist sti mov (bad) xchg ss in retq xchg rex.W repnz xor xchg retq loope and jmpq sbb adc movsb xchg in adc (bad) jne jle out rex.WRX xor (bad) insl ss sbb xchg (bad) mov (bad) sahf data16 sbb imull (bad) and xor fnstcw sub (bad) outsl (bad) mov callq cmpsl rex.RXB rex.WX add fsub xchg rcll mov cmp int mov rex.WXB rex.R in fdivs mov pop shll (bad) sti xchg fnop mov cmp sbb mov xchg pop jmpq nop insb (bad) add xlat or rex.RB jbe xchg rex.WX addr32 sub cmpsb (bad) (bad) add jns cs xor jrcxz mov mov mov mov (bad) fldl and adc stc adc push int3 xlat rclb (bad) div mov stc mov rex.WRX (bad) rex.WX mov callq (bad) mov cmc pop rex.WRB jnp test add sbb jbe xor clc (bad) or loop pop adc rcrb (bad) xchg (bad) (bad) (bad) adc loope in test rex.WRXB cmp xor and and mov (bad) jmpq rex.WRB sub ficompl sbb gs outsb (bad) add in xchg rclb fildll adc (bad) mov sub enterq (bad) adc sbb cs ds cmp subl cld mov mov sub enterq sbb cltd imul adc xchg out and xor mov push jb movabs mov mov (bad) and sbbl insl imul sbb orl addr32 xor mov adc rorb xchg sbb jae (bad) xor mov xchg (bad) xchg xor sbb sub (bad) sbb fstps (bad) and lock jp scas mov scas sub or lret push xchg jmpq cmpsl in and cld sbb sub rex.WR sbb xchg outsb sbb jbe rex.X push rcrb fdiv and stos popfq sbb cltd xchg xchg xor adcl xchg insb add (bad) repz rex.XB gs scas (bad) mov rex.WXB cld movslq jno jg mov adc (bad) (bad) (bad) add fwait xlat cwtl mov add test xchg in xchg (bad) lcall shlb mov (bad) jo push rex.WXB pop xor mov (bad) loopne mov add xchg and test repz popfq mov jmpq sahf mulb mov adc rcll xor cmp imul xlat cmp and cli pushfq pop test jl (bad) sarb xchg xchg (bad) cwtl mov stos and rex.RXB cs add (bad) repz pushfq jbe add sbb (bad) rorl insb fistl lods sub xor out xchg cmpsl scas push mov pop notl rex.WRX rorl adcl rex.WRB fild xchg (bad) add adcb lret or jns adc sbb pop xchg clc andl xchg leaveq test cmp pop or sbb movabs fisttp push xchg sbb movabs mov mov xor repnz callq and cld sahf sbb mov ja jge enterq (bad) punpcklbw fwait xchg or cmp adc xchg xor shlb xor xor jne cli (bad) int in rex.WRX pushfq rex.RB scas mov lea xorb fs jge (bad) (bad) movabs (bad) mov fmuls lret pushfq movslq lea loop (bad) mov fcoml push out movsb mov jmpq xchg jbe (bad) loopne sbb movsl sbb (bad) pop out ja and rclb (bad) sub sahf xchg stos es movabs out outsb rex.XB icebp sub loopne xchg mov jne adc mov mov fistl xchg rex rex.XB sbb mov rcll xor pushfq repnz sarb xor mov lods mov out enterq repnz (bad) cli pushfq out (bad) push jns xchg notb movabs icebp pop incb jnp rex.WRX rex.RX xchg jl popq (bad) fist popfq scas pop iret movslq add movabs mov movsl fwait pop lods mov xchg cmp push xchg mov adc sahf fldcw out mov push xlat mov jmp pushq (bad) sub xchg cmp enterq (bad) mov adc je pop notb xchg pushfq mov jno (bad) test ja xchg xchg add (bad) lret push (bad) xchg (bad) (bad) clc (bad) rex ficoml (bad) push and mov xchg rex.XB xchg movsl insl cli popfq icebp xor mov rex.RB enterq pop xchg add sahf ss xchg int xor stc (bad) sub (bad) enterq cltd jno movslq fdivs xchg adc and (bad) sbb push (bad) rex.RX adc xchg rex.RB mov rex.WXB xor je cmp movabs out iret lret and lea fcomps mov hlt (bad) (bad) mov and rex.RXB (bad) and fwait mov (bad) push adc and xchg icebp out (bad) lahf lods push rex.WB int (bad) (bad) imull rex.WB mov je jge lret sti mov xchg outsl adc sbb rex.WR rex.X popfq push (bad) es lret xlat and adc rex.RB mov or cwtl pop in (bad) ss out movabs cwtl (bad) and (bad) (bad) jae (bad) and popfq pop mov loopne (bad) mov adc imul xchg or xor xchg (bad) sbb sbb jl out pushfq or xor ja or adc add fnsave jp xor test int3 (bad) fs sahf sar retq loope sub (bad) rex.RB (bad) rex.WR jbe cmc decb mov adc cmpsl enterq cmp push stos movabs (bad) sahf paddb sbb push enterq pop xchg mov adc int xor xchg sbb mov shll push jp retq add cmp (bad) callq mov sbb (bad) (bad) (bad) decb mov xchg scas cmp or jmp cmp jne mov rex.W stc stos pop sbb (bad) callq sti pop cmc fwait test movabs sbb (bad) mov or (bad) xchg push (bad) pop pop (bad) (bad) push (bad) adc or test scas enterq sbb loopne ds shrb popfq gs cltd (bad) (bad) in sbb sub (bad) in jmp xchg mov loop adc sub cmp out js rex.WX scas int3 movsb stc cwtl sub clc mov push pushfq icebp pop out xor pop xor fdivrs cmpsl mov je push cltd cmpsl jns test sub mov cli sahf jge sarl adc mov xchg pop mov mov cmp add cmpsl mov xlat test rex.WR push add fistpll cld jl jg loopne roll vmovlps jl rex.WR pop jne cmpsb add jne cmp jo (bad) jbe (bad) (bad) pushq jnp,pt movsl adc cmp data16 nop sbb cmpsb rex.WRB sbb subl nop push pushfq mov mov (bad) (bad) (bad) rex.WRX push and (bad) mov (bad) imulb rex.XB adc iret rex.RXB rex.X push mov insl imul movabs movabs imul (bad) mov stc movabs xchg pop js cmp data16 cmp add out (bad) cld sbb std cmp out xchg lahf or push insb rex.WR (bad) ja (bad) sub out movsb sub xor rex.X jne je ror (bad) mul mov mov xchg rex.RB fimul (bad) sub nop rex.XB xor gs xor rex.RX (bad) (bad) (bad) sbb rclb push sub xchg mov add (bad) and (bad) xchg sub or mov pop sahf xchg mov outsb (bad) je xchg scas retq in (bad) insl pop xchg mov sub fistpll rex.WRB out cmp pop jle,pn xchg (bad) je movsl js or mov (bad) jo cmp cmpl jp (bad) mov movabs push mov (bad) mov ja mov pop pushq loop (bad) pop xchg xor sbbb outsl rex.WRX rex.RB sti mov rex.WRXB rex.W (bad) sub (bad) rex.RXB xchg sbb sti shrb pushfq (bad) cltd (bad) cwtl clc (bad) (bad) xchg negb or jno or scas cwtl scas cmp jae xchg xchg rex.WXB xchg (bad) push adc or mov (bad) ljmp leaveq xchg test xor xchg adc cmpsb fstpt test (bad) xchg imul jae adc sahf rex.WR movslq data16 xchg (bad) int pop (bad) idivb push in add mov cmp (bad) xchg (bad) rex.WB ss insb cmp xchg (bad) idivb sub sub gs rex.WRB (bad) cwtl mov scas mov jmp push rex.WRX rex.WXB loopne pop pop (bad) sarb xchg rex.RXB and pop add scas xchg movabs nop rex.WX rex.RX cltd rex.RXB (bad) xchg adc stos mov xchg and jge in (bad) pop add or xchg (bad) std cmpsb ss pop fdivs rorb add jns lret test nop and je (bad) out jg cmpl movabs adc xlat mov jno rex.WRXB xchg sub lock (bad) fwait popfq fsts je adc pop adc mov cmp idivl fwait mov xchg nop (bad) inc and rex.RXB mov jmp mov icebp rex.WX lods gs or (bad) (bad) cs jbe jbe xchg je jno out (bad) adc pop xor (bad) jl push (bad) (bad) jb clc sbb sbb (bad) repz xchg movsb (bad) xor adc jmp rcrl mov (bad) fstl popfq sub nop fiaddl pop jmpq in mov mov scas pushq imul jns cmc add and xor cmpsb rex.RXB rex.WXB cwtl add jp rclb outsl jmp and push jbe sbb and jbe or and in mov sbb jne int xchg mov lahf ja (bad) mov stos rex.WRX jl rex.RB mov xchg sti push popfq nop bsr (bad) cmp movslq dec cwtl pop cmpsb and lret cld fwait (bad) movsl sbb outsb jmp lods sbb cmp loop mov (bad) jbe adc pop lea (bad) mov imul jle jnp (bad) and xorb popfq (bad) rcrl (bad) cli sub adc cltd int3 pushq or out xchg (bad) pop ror mov rex.WX xchg mov (bad) sbb and mov jo clc xchg xlat sbb cmp leaveq xlat pushq (bad) iret icebp fcompl add popfq outsb rcrl xor or adc (bad) rcrb mov (bad) callq sbb sub sbb sbb fldl (bad) xchg (bad) (bad) int3 ds in jb retq pop mov xlat mov (bad) (bad) or or out or mov sub fcmovnb popfq cmp xchg pop fsub lods and rex.WRX (bad) and ja add fcomps jb,pn xchg popfq sbb addl jnp rclb sbb (bad) decl sub xchg xor cli or rex.WXB xchg popfq jbe setne jns mov jbe fsubp out imul callq (bad) (bad) (bad) (bad) callq nop (bad) cmp (bad) rex.WB adc (bad) adc rex.WX loope cs pop (bad) callq rcl (bad) lea lahf push faddp jae mov rex.RB xchg rex.WB pop and ss stc (bad) pop lret mov (bad) sub and mov mov loop mov test jle mov imul adc lock callq (bad) (bad) sub cmp rcrb add pop hlt (bad) rex.XB sbb stos xchg (bad) xor ror mov scas cmp nop xchg adc push popfq pop and pop (bad) xchg (bad) std jl popq mov (bad) cmp add movsl sbb sub push hlt pop jg,pn mov (bad) (bad) vdivss js outsl sub rex.WR xchg jno cltd sbb pop outsl pushfq mov fidiv scas jrcxz (bad) out fcmovu mov rol sub jo xchg and mov sti xchg ja movslq mov adc xchg pushfq cmp cltd lea cmp ds sahf out adcl mov rex.R push (bad) sbb icebp sbb jbe push rex.WRXB rol cmp cld adc in mov and (bad) sub and lahf pop xlat movabs (bad) jg (bad) rex xor (bad) mov rex.WXB imul loopne xor adc sub rex.WRX movabs xchg mov rex.WRXB xorl (bad) sub xchg (bad) outsl rex.RX xchg rex.WX sbb int3 ds rex.WB lret sbb add push insl jle jge,pn xlat (bad) and xchg loopne sub xor xor push pushq repz or movslq fwait loope (bad) lock xchg xor push popfq mov leaveq loopne rex.WB data16 out je sbb cltd rex.WXB xor mov sbbl ds cmp rex.XB loopel or adc (bad) jo mov (bad) sub jl retq xchg sub pop movslq rex.XB xchg pushq pop sub and jle out (bad) xchg xchg push rex.WRX es (bad) pushq xor push addr32 scas jne insl out push xchg in je mov test jae sub test ja push jmp mov sub rex.WXB movslq out jb rex.WR pop (bad) (bad) cmpsb (bad) movsl mov mov (bad) push repz pop movabs out xchg mov addr32 mulb xchg adc mov sbb cmp imul mov add rex.RX in rex.R (bad) mov out xchg scas mov sbb test fisttpl xchg rex.X cmp fsubrl (bad) fcmovb (bad) xchg push test in jnp mov test sahf retq pop out (bad) movslq in (bad) sub rex.B xchg popfq push loopne insb shr test jb test xor xchg imul cmp fucomp sbb pop test repnz shl add sub movsb leaveq (bad) clc cmp sahf xor mov repz (bad) push jrcxz xchg sbb mov (bad) imull cld xchg adc mov testb retq ja (bad) popq jle fdivrl (bad) (bad) push pop mov (bad) xchg adc and (bad) xchg mov out test mov xor or rex.RX jmp fs adc jns lea jrcxz rex.WRB jne cmp lock xchg add retq sbb repnz lods xchg push fwait jns sbb cmp and mov mov out movabs rclb jmpq cmp xchg std fnstsw cmp rex.RB movabs xchg movslq fiaddl rex.R xor hlt lret (bad) xor decb out rex.XB (bad) pop sbb add scas add movabs test cmp test (bad) sahf pushq adc jns xchg cmp lods mov xchg jno mov rex.R pop xchg xor outsl xchg xchg mov jp jle and in (bad) mov mov loope jae lods jo es (bad) sahf jle icebp add sub jne xchg ficoml sahf cmp (bad) (bad) and test jmp jnp out addr32 fs pop cld out (bad) xchg (bad) js,pt (bad) xchg (bad) rex.WRB sub clc mov (bad) sbb stos sti fs (bad) or mov sahf repz xchg je imul imul fdivr callq test fwait mov sahf sbb cld test callq xchg imul outsl imul pushfq pushq mov sahf cmpb (bad) in fimull xchg mov jg mov in (bad) push stc cmpsb repz rorb xchg ffree mov movabs adc (bad) sbbl movsl jp movabs xchg loopne insb stc (bad) icebp add or (bad) fnstcw jnp xchg movabs (bad) pop scas out out xchg imul adc (bad) adcl and pop test mov (bad) pop pop mov lock (bad) mov faddl retq sahf (bad) pushq jge movsb and sub add xchg test loope sbb push jge (bad) or pop ja sub push push pop rex.WX pushfq mov cmpsb adc data16 push sub nop adc xchg cli push (bad) ja adc xchg pop push cltd mov push pushq or jb xchg mov rex.B fs popfq fstpl jrcxz fiadd add push mov imul (bad) jb (bad) test in push scas add or jns cmpsb jmpq sbb or (bad) jne subl xor or xchg in sbb lods xchg xchg xlat rex.WRXB fwait xchg cwtl lret (bad) sbb jns (bad) sti mov rex.RB fildll fiaddl sub in or movabs mov notl and add sahf nop icebp (bad) xor xchg mov xchg (bad) scas push rex.RX (bad) adc pop pushfq pop outsl jo lea ss mov (bad) cs sbb pop clc mov scas rex.WXB add xchg cld cmpsb (bad) (bad) (bad) test cwtl (bad) sbb jne xlat je out xchg iret jg mov xchg (bad) jno mov xchg hlt (bad) pop int ja cmc xchg sub (bad) sbb lock jae xchg xchg (bad) xor xor iret nop gs sbb sbb rex.WR mov (bad) sub mull mov rex.X cld cwtl sub (bad) in lahf sbb movabs sub pop movsb fiaddl jo test (bad) jge nop mov xchg int sahf mov cmp sbb and (bad) adc and xabort in lock out rex.RB rex.XB mov (bad) je leaveq sbb mov mov lahf std movsb xchg nopl jbe jns scas cwtl rex.WRX ds cmc cmp mov sub mov (bad) ljmp adc nop adc (bad) mov xlat outsb (bad) jp (bad) mov cmp adc (bad) fsubs lret lret cmpsb mov (bad) rolb sbb jl jg or push sahf mov (bad) xchg mov add movabs (bad) adc fstps xchg pushfq (bad) leaveq xchg ss nop or rex.R pop movsl cmp rex.WRX jns imul xchg in mov imul (bad) fcomps roll mov sbb mov pushq movsl rex.WRX outsb ja jne test and pop xor or adc pop lods (bad) out mov repnz retq jo mov rex.R add pop (bad) outsl callq rex.WRXB out scas rex.RB xor (bad) xlat jl jno cwtl in rclb or jg fs addr32 xchg xchg rex.WRX icebp fdiv test sub nop test (bad) adc rclb rex.RX and iret rex.WRXB (bad) mov mov insb xchg sub pushq (bad) xchg cmp jmpq pushfq sbb (bad) rex.WR imul ja jrcxz cmpsl xor (bad) out rclb test testl pop (bad) ja add in (bad) jns mov scas andb xor mov shlb xchg (bad) movabs xchg (bad) insb cmpsb rex.WXB nop sub stc cmp js fs movabs in or mov jrcxz jg fsubrl outsl xchg movabs adc sahf xchg mov xlat or sbbl (bad) rclb xlat and rcll sbb (bad) jb lret mov xchg xchg cmpsb sub loope xchg rex.RB rex.RX movslq xchg (bad) and mov cmpsl cmp jle movsb sub insb xor scas mov movl (bad) cmp outsb std cltd jb cmp sub mov xchg mov (bad) sbb mov xlat mov (bad) cmpsb sub pushfq (bad) cmp in mov pushfq cmpsl lods (bad) mov sbb flds mov (bad) xchg jl data16 sbb mov cwtl addr32 mov out movabs fstps and xor popfq nop rcr mov out sbb sub int3 cltd popfq mov cmp fcoml mov rex.WRXB cmpsl out lods sbb cmp pop mov (bad) stos pushfq fdivrl (bad) jle cmp rex.R push ds adc xchg sub fiadd mov cwtl sub xchg xor (bad) gs sbb adc fldl (bad) fisubr mov jrcxz add jle jno out sbb adc int3 mov cwtl (bad) out movslq (bad) mov push fbstp in movabs iret rex.WB xchg sbb fbstp insb imul cmpl mov push or add adc jns insl or sbb pushfq lods mov xor xchg jmpq cmp xchg jp (bad) mov in mul fisubl mov mov sub jle add xchg xchg (bad) sbb fs mov xor or callq mov pop xor cwtl lret xchg pop hlt push rcrb shrl mov ror pushfq (bad) fimul mov (bad) sahf xlat lgs out jnp xchg cwtl add pop sub sub loope rex.X sarb (bad) (bad) push (bad) clc or cwtl sbb int3 fsubr mov (bad) fstps (bad) stos in (bad) (bad) jne xchg mov xchg lods sbb push movslq cmp rex.WRX rex.WR pop (bad) push scas add sbb rex.RX shr xchg xchg and pop (bad) mov xor jnp (bad) (bad) mov ja insb pop rclb sahf lret and jno or imul std (bad) mov cmpsb jo xor add (bad) jnp or cmp sub xor lods (bad) imul mov jno fstpl mov fwait out (bad) pop rex.WB cwtl shrb adc sub cmp xchg cltd mov in (bad) push movabs outsl (bad) stos bnd mov xor add xchg lret lock fdivrp (bad) hlt icebp pushfq (bad) sbb ja rex.RX addr32 jp cmp mov test xchg movslq (bad) xlat xor cmpsb mov (bad) push test (bad) outsb xchg and jrcxz out stos js push movsb jmp rex.WR icebp imul jae and sbb decb addr32 (bad) rex.RX outsl xchg cmp mov adc rex.RB rex.WXB sub movabs test int3 shr leaveq push xchg (bad) or pop jno sahf (bad) pop stos add rcll retq mov test jno (bad) pop repnz jge jg rcrb enterq adc sahf push xor and clc jae pop xchg insl pop hlt movabs mov (bad) jo push pop out popfq (bad) rex.RX mov lods fcompl scas int ss gs enterq cmp loopne mov jo lods and cmpsb retq (bad) ficompl loop (bad) out cmp insl add xchg movabs out pop movabs rex.RX jmp xchg lods jae mov xchg pushq sub lock lret adc fwait (bad) cwtl cmpsl out sbb retq jne xor xchg rex.B test push xor xchg (bad) out cmp (bad) xchg rex.WRB clc pop rolb sub (bad) sbb adc xchg cs (bad) mov (bad) jp (bad) add mov movabs push out and xchg in mov test iret pushq repz (bad) fdivl mov lahf fbstp xchg rex.W loopne sub or and xor jbe adc rex.RB xchg mov xchg fmuls sbb xchg jb (bad) fstpt movabs mov test pushfq rclb jmp retq ficompl xchg idivb movsb rex.RX mov nop leaveq pop cmp mul add (bad) push mov jbe adc sahf je push stos cmp rex.WXB ds xor movabs movabs and cwtl vsqrtsd (bad) lahf cmpsl es cmpsb adc jo and (bad) lea rex.X (bad) xchg (bad) cmp jae add jg cltd xor adc nop addr32 in ja cmpsb xor fbld fdivl cmpsl out repnz int (bad) (bad) adc or imul lods add div xchg insl jg (bad) jrcxz mov (bad) pushq (bad) xchg (bad) jae lret xor and fistp adc and jg fisub xchg icebp insl mov popfq lea jne (bad) jge xlat repnz jae (bad) (bad) cmpsl stos movabs and pushfq cmp out sub mov mov xor cmp sbb sti xchg rex.W repnz loop xchg jmpq add lret jnp xor and (bad) xchg mul (bad) loopne or xor sub hlt (bad) cmp negl insb sti adc pop lods (bad) nop sub pop (bad) insb test rex.RXB (bad) cmpsl loope xchg adc (bad) adc (bad) (bad) (bad) fs xor (bad) (bad) mov fwait in or sbb loop mov sub rclb sub sti clc rclb mov mov xchg mov jb fwait mov sahf test (bad) mov jo jp push pop (bad) xchg rex.X scas cltd rex.RX sub mov mov cmp push imul movabs callq and push cmpsl clc or sahf add vmread addr32 test rex.X xchg (bad) (bad) xor jle adc js jno movsb es (bad) jp (bad) xor adc xchg cmpsl jns fdivrl (bad) xchg mov xchg shrq movabs (bad) add cmp enterq rex.XB xchg imul shlb xlat pushfq (bad) test loope rex.WRX stos xor test xor (bad) lahf mov jmp (bad) mov scas cmp xchg (bad) loop xchg fnsetpm(287 rex.WRXB lods and jnp xchg cltd scas cli push sub xchg test xchg push xor sub (bad) xchg and xor jg lret movabs cmp rex.RXB mov out cltd add stos xchg xor movslq pop xor adc rex.WX data16 mov cmp mov xchg pushq jns (bad) imul pop xor mov pushfq xor adc nop movsb cmp sbb xchg or (bad) add lahf frstor js ja push enterq movslq (bad) loopne (bad) xchg out insl xchg jno cmp clc rex.WX sub adc xor and mov jg mov pop nop andb (bad) rex.WR lret gs jge sbb fsubrl jmp mov mov xchg jmpq jge xchg mov mov (bad) sub iret (bad) mov mov mov xchg (bad) movl or rex.W jmp stos mov (bad) xchg add hlt nop cmpsb xchg cmp adc xchg sbb movabs rex sti andl idivb xchg mov xchg xchg gs rex.RX scas (bad) jns (bad) (bad) mov cmpsb xor xlat (bad) sub ds xor xor and rex.RX xchg (bad) sbb gs lahf pop cmp adc rex.WB fdivl int (bad) jns fcmovnbe pushfq movabs rex.X fld xchg push jnp jl ja pop xchg sub rex (bad) or hlt out xor addl stos mov retq pop xchg test xchg loope xchg movabs add pop notl movabs jo xlat ja loope jl js (bad) mov sub (bad) xchg rex.R add rex.WRB mov es sbb nop rex.RX add negb jg (bad) out fcoms mov out (bad) jo jmpq stc mov ror sahf loope xchg pop es cs out mov mov cmpb (bad) test (bad) (bad) adc cmp (bad) mov mov fild movabs ficoml sti lods cli (bad) ja movsl jg lods (bad) lods rex es cmp (bad) cmp rex.XB es and movslq lea ds rex.WX int3 jle (bad) in push (bad) pop rex.RXB sbb out push jbe xchg or (bad) jae lods fchs sti mov fdivrs add sbb xchg cld mov push add push and xchg jae rex.XB mov fnsave xchg (bad) adc or retq cwtl test sub push add cltd scas fcomp xchg jae mov sbb xchg or (bad) outsb je mull (bad) es fmull mov pop iret rex.WXB outsb rex.WRX int3 adc jbe test xchg jecxz xor cmc xchg sub mov outsl mov sub (bad) xchg jne jle retq and jne push (bad) incb xchg pop cli pop lock (bad) adc mov jmp sbb adc sahf mov push scas (bad) cvtdq2ps fiaddl and cwtl fstpt push and fs xor adc imul rex.X sub jne (bad) sub sahf fsubrl (bad) repz mov mov out movslq mov (bad) mov (bad) scas (bad) adc cmp enterq fcoml push (bad) mov (bad) rcll mov rex.WX mov jmp rex.XB sbb roll add scas gs or adc or jno pop push adc pop mov xchg popfq adc jns and add xchg nop insb push mov xor (bad) (bad) mov insl enterq cli xchg adc addr32 cmp (bad) callq xchg mov rex jnp fisubrl adc sbb xchg rex.WRX sahf scas add sub xchg pushfq nop adc (bad) (bad) xor jbe (bad) (bad) addl enterq xchg in rex.X rex.WX ds fistp mov sahf sub (bad) push xor in jrcxz sahf or pushq (bad) push sahf fdivs enterq xchg jnp push rex.WXB imul lock (bad) rex.WB rex.RXB xlat xchg js adc xor loopne imul in pop add (bad) cmc (bad) rex.WXB xchg mov outsb scas out fcos rex.WRB movabs xchg adc callq test adc (bad) pushq pop (bad) adc xor add xchg lret and nop lahf pop rex.WXB std movabs retq xchg out movsb (bad) jmpq xchg imul lea mov mov add jrcxz xchg cmp cs (bad) (bad) fwait (bad) jg xchg pop xlat adc jmpq xchg adc in rclb (bad) loopne xchg in or (bad) mov (bad) xchg sbb incb divb xchg pop mov outsl sbb fcmovu loopne pushfq outsb jae (bad) jrcxz xchg mov test icebp gs incb and mov jns sub scas popfq repz mov movslq js cmpsb sub pushfq rex.WB mov fdivs (bad) enterq sbb rcr add stos mov cmpsb mov loope nop mov pop gs (bad) icebp mov rorl rex.WX jle (bad) js sahf jg fldenv rcrb rex.WXB fiadd pop or leaveq sbb xchg fs sub fucom xchg or clc mov xchg (bad) loopne test xchg loop cmp fcmovb movslq test in jge es pushq insl movslq fildll mov jl jbe xchg sbb jb (bad) sahf mov movabs (bad) int3 (bad) scas xchg and rex.R xchg mov ficompl insb and jns fistl out xchg add lahf leaveq pop scas cwtl clc loope pop jp ss cmpsl (bad) push adc sub test movsb xchg xchg lock lret jle mov int3 sahf lahf cwtl insl vcvtdq2ps xchg fisttpll push rex.WX and (bad) loopne mov add mov xchg lahf retq mov (bad) mov jae pushfq xchg cs rex.WB (bad) xchg or adc xchg out (bad) pop loop add stos lret rex.WRX rex.X lock xor pop jnp dec shl rex.X js retq mov mov int sub jmp jbe ja rex.WX mov lret xchg lea push cmp add in mov (bad) rex.WX push xchg lret stos enterq add mov and popfq jg stos hlt mov mov cli xchg sti scas sub cmp sahf (bad) cmpsl cltd jns xchg pushfq cmc (bad) push or (bad) sub rcrb cltd movsl sub mov add xorl push popfq add push outsl sbb mov cmp cmpl mov xor sbb and ljmp repz (bad) rcrl pop xchg addl es adc stos fnsave adc cwtl mov jne xchg sti ror jnp rex.WR sti xor fsubp (bad) pop mov (bad) push in (bad) (bad) xor mov mov fsubl xchg mov jl sahf add int test rex.R rex.WXB movabs callq sub xchg xchg or xor pop cltd in jns xchg jne enterq add movabs pop sbbb addr32 and lods cli or xchg rex.WXB (bad) lods mov nop rex jnp (bad) cmp jmp fsts (bad) mov stos test notl sbb jae xchg data16 xchg cld in std pop cmp push (bad) lcall sti add lea push out in lahf xchg sbb adc mov or test decb rex.WRB add (bad) rex.X mov (bad) (bad) hlt cmp pop ficomp loopne outsl (bad) sbb movabs push cld xchg outsl add (bad) jge xchg pushq jbe iret sub (bad) mov xor rex.WX (bad) mov mov rex.WXB std xor pop (bad) icebp mov gs fiadd and jmp imul add (bad) or stc mov jg jnp pushq outsb (bad) addr32 in push jmpq or in sub idiv in in adc cmp mull xor xor callq jns stc sahf xchg xor cmp fwait xchg or jno rex.R scas and mov mov adc xchg (bad) lretq jnp add jp rex.WRB and (bad) (bad) xor (bad) sbb loopne movsl and jae sahf mov xchg xchg cmp jo (bad) leaveq jmpq (bad) push and pushfq movabs retq rex.RB xlat sub (bad) mov cmp xchg sbb xchg rex.WRXB repnz or xchg add xchg xchg test fsubrs push es ds jg (bad) cld mov leaveq xchg mov jo mov lret ja add and cmpsl je (bad) psubb xchg scas in rex.RXB xchg sbb mov callq xchg clc jo (bad) in pop cld pushfq xchg lret xor lea rex.RB xchg mov and movsl std jmpq (bad) rex.WRB (bad) sbb rex.X rex.WXB stos (bad) jmpq xchg mov addb rex.WRX xchg adc (bad) mov adc xchg xchg (bad) test rex.RXB mov cs add pop jnp movsl add movsl (bad) shrb jb lods shll pushq rex.WX adc out xchg pop ja sub xchg (bad) jbe rex.WRB rex.X sub (bad) scas mov out pushq int adc (bad) test int adc pop fs rorl cli pop out sub mov mov mov rex.WRX out adc (bad) clc jne rex.RXB xlat mov pushq neg push cltd sahf mov (bad) xchg jmp rex.WX insl movabs xor pop cli (bad) (bad) mov mov (bad) (bad) jb cmp rex.WX sbb (bad) in mov in xorl pop push jno mov (bad) xor (bad) add lods movsb xor rex.R ja pushq xor stc lahf repz in lret enterq fcoms (bad) xor jne sub adc xchg out rorl xchg adc movslq cmp movsb add (bad) and fldl xor repz mov cli out cwtl sbb (bad) xlat mov sub sahf fs adc and add lret (bad) mov stos rex.XB add pop xchg mov sub rex.WXB cmpsl imul jo js sub jb xchg stos mov gs pop xchg sbb gs cmp sub (bad) xchg (bad) or jae xchg sub add outsl cltd adc adc (bad) stc or fstpt sub rex.RXB cwtl rex.RB std shlb in gs jno outsb fist cld pushfq (bad) jl lods push xor xchg movabs (bad) pop (bad) rex.WRX js sub or rex.B pop movabs cmpsl outsb push xlat jbe,pt sbb jne rex.X stos xchg (bad) ja push callq imul insb nop xchg push jmp out (bad) xchg adc sbb xchg fidiv imul pop int3 xchg ja adc loop (bad) or (bad) and (bad) xchg xchg push jmp outsl or push je pushfq clc pop jne test fdivs pop (bad) adc jmp lahf std or insb repnz push cltd cmc fwait mov xor retq lea cs (bad) (bad) outsb (bad) mov xchg loop rcll movabs rex.WR (bad) stos jg shl mov xchg cwtl sub jns out mov cltd cli icebp adc (bad) jne pushfq repz rcrl xchg movabs xchg out lea cmpsb gs (bad) add xchg outsl test add cmpsl mov xchg packuswb jne pop outsb out in fadd repnz mov jl rex.WRXB pushfq rex.WR (bad) sub push (bad) jno pop (bad) rex.WXB lret in xchg xchg sub xchg retq decb fidiv pop mov insl mov fnstcw xchg fmul repnz in movslq xchg or rex.WXB xchg mov sti pop (bad) (bad) mov sahf mov (bad) (bad) mov mov pop pop fidivrl xchg xchg pop imul insb xchg and mov add or jmp (bad) (bad) xchg enterq jb jl popfq pop (bad) sub or fsubrp jnp jo jg mov fimull sub (bad) jnp leaveq jae push xchg (bad) fs adc fisttp cltd fucomp jbe add cmp callq mov mov (bad) xchg cmpsl repnz callq cs (bad) (bad) negl (bad) and fwait lock retq jg mov sarb loope mov xchg movsl xchg cwtl jle sarl (bad) idivl (bad) (bad) xor xchg jp (bad) (bad) movslq xchg cmp fisttpll sbb rex.B jp xchg (bad) (bad) cwtl in int cmpsl xchg vmovaps jle xchg push (bad) cmp or cmp pushfq rex.WX xor rex.XB out scas lret mov (bad) lods leaveq xchg rex.B out mov mov mov cmp or adc jge (bad) retq mov pop outsb (bad) sbb mull stos (bad) xchg andl jno xchg cmp pushfq test (bad) sarb jae lea jbe pop movslq rex.WRX xor mov sbb loopne mov mov lods movabs (bad) and ja mov (bad) loope or je cwtl xchg fnstcw (bad) imul sahf (bad) rex.WR scas fdivrl int (bad) (bad) (bad) jnp cld xchg vminss ss in repnz test adc push lcall pop push (bad) lods push stc mov mov (bad) cli repnz fildl (bad) pop cltd (bad) retq jbe (bad) pop out xchg mov sbb xchg cmp stc pushq (bad) pop add (bad) (bad) xchg cmpsl orb rex.WRB pushq callq rex.WRXB add xchg in rex.WX pop and xlat jno (bad) mov mov jp pop (bad) cld sbb movslq adc add xchg (bad) xor cmp xchg faddp (bad) adc subl (bad) movabs or xlat (bad) test pop movslq xchg xor (bad) cmp rex.WX cwtl outsb outsl adc (bad) ja sbb xchg jge mov out mov pushq rex.WX rex.WB (bad) lods mov mov retq cltd xchg xchg lret rex.WRX xchg mov (bad) or insb cmp movabs (bad) xchg (bad) adc or xchg pop repz lea and xor push or mov (bad) rex.RB rex.WRXB add cwtl mov push pop pushw xchg add xchg mov adc mov pop jle outsb stc (bad) rex.WR gs xchg (bad) pop add es in jrcxz cltd js sub adc rex.WRXB (bad) jmp and test in rex.RXB mov cmpsl xchg mov mov xchg (bad) stos out pushq jne jmpq sbbb rex.X lea jmpq cmpsl notl std stos lret addr32 or mov and add mov jp rex.WXB rex.WRXB (bad) imul rex.RX adc hlt fisttpll (bad) adc mov mov (bad) jo mov xchg mov retq notl sbb and fidivl rex.RX loope (bad) xchg sbbb mov outsl sbb xchg bswap (bad) or movabs fistp adc movslq jns mov popfq mov xchg rex.RB fisubl flds jle jae mov mov (bad) movabs movsl stos pop sub mov pop pop xor (bad) (bad) or in (bad) xchg (bad) shrb sub jnp (bad) and jae sahf out pushq mov or (bad) xchg pushq or (bad) sbb and imul jrcxz xchg mov test cltd es popfq nop sub cwtl (bad) push outsb add in pushq (bad) mov xchg sbb imul jnp xchg nop pop and xlat xor and neg iret pop xor cs int3 jge loop nop push fs mov pop rex.WB (bad) sbb xchg enterq (bad) nop test ja jae and and (bad) and imul xchg outsl push sub adcl mov (bad) push test sbb mov adc movsb xchg js cmp lret sub mov imul outsb jg jrcxz outsl jo (bad) rex.WRB rex.XB or por xlat loop sub (bad) callq lock sbb mov and leaveq cmp loopne roll (bad) in mov je (bad) stc out rcll fwait mov xchg sarb mov imul movsb jb mov sub (bad) mov sbb (bad) addr32 movabs cmpsl ficom repz movabs loope lret cmpl ds addr32 sahf enterq add push rex.WR or add xchg rex.X xchg push (bad) rex.RB fsts rex.R xor mov xchg jrcxz sub xchg cltd add add and rex.RXB sub mov lods sub sub (bad) (bad) mov (bad) push xchg and adc movslq out (bad) loop push movabs mov outsl add (bad) xchg (bad) imul (bad) sub (bad) rex.R cs sahf jmpq out lea mov in sarb rex.RXB xchg (bad) jno mov cmp jle movabs xor negq jp std rcll movslq adcl js lcall mov lret loop rex sub rex.R (bad) xchg (bad) pop sbb mov (bad) mov mov stos xchg pop movslq rex.WRB adc rex.WRX xor stos xchg callq mov sbb jrcxz xchg mov sub fcmovbe js and mov add popfq cltd (bad) out add retq sbbb rex (bad) and retq mov movsl pop decl xchg addr32 jnp xchg callq or cwtl mov (bad) jo fidiv lret frstpm(287 neg ffree test sahf (bad) or mov faddp icebp (bad) xchg (bad) jns xchg fs xchg pop rcrb rex.WRX rex.WRXB pop xchg mov js pop sarb (bad) repz add jmpq (bad) hlt (bad) xchg rex.RB push sarl and mov fldcw sub pop (bad) lret scas adc jle imul insb idiv (bad) pushq (bad) lods mov jl cmp or in cmc fwait mov xchg lahf data16 xchg (bad) movsl stc xchg movabs rex.WX roll adc (bad) pop (bad) adc mov mov imulb (bad) (bad) (bad) (bad) rex.RX (bad) sub xchg sbb mov cmc or or leaveq jge xchg cltd lret (bad) (bad) mov mov lock cmp loope add xor jmpq xchg mov retq xchg rex.WRXB callq jnp jl out retq fisttp rex.WB jge pop movq out sbb mov movabs cmp adc jg push nop int push pop in add mov push (bad) loope hlt or movabs test outsb add (bad) rex.W jrcxz push js xchg jge (bad) retq sbb (bad) in es pushfq movabs lret mov sub int (bad) mov push rclb movslq xchg in jbe retq outsl cmp insb sahf jne xorl scas push imul lock subb and xchg pop fwait loope cld lahf test outsl rex.WRB lret jo rex (bad) jbe hlt movabs ja rex.RB (bad) enterq (bad) xor pop cmp xchg mov cmc cwtl test (bad) jbe loope (bad) xor rol je imul push jbe jae cld and fldl xlat sub pushq test jg rex.B mov sbb cld (bad) and outsl sub jae adc (bad) push andl rex.X sub (bad) push mov movabs sarb in (bad) repz rex.WRXB (bad) mov add test adc adc (bad) xchg movsq shl (bad) jrcxz cwtl cmc push retq int cli xchg popfq cmc or cltd rex.X (bad) int3 jns rex.X repz push cmovs rex.WXB xchg repz and mull jns movabs xchg repz (bad) rex.WX jmp movabs rex.XB xchg mov (bad) es lods mov or cmp or mov rex.WRX xlat pushq shl fstpt pop rex.WB loopne outsl push rex.WRXB rex.WX scas rex.B rex.WB (bad) sbb data16 pop and sbb mov retq movabs insl (bad) setbe jb rcrb callq fidiv cli outsb fidivl push sbb stc pop insb test (bad) sti jp xchg movabs cld (bad) rex.X pushq jo rex.B (bad) and rex.X (bad) xor mov xor flds movslq stc xchg adc fadds (bad) mov es (bad) push (bad) imul rclb repnz rex.W rex.B stc cltd rex.WRX rex.RXB (bad) xor notl pop scas mov lods fmuls (bad) adc (bad) mov fstl cwtl cmpsb rex.WRXB xchg or (bad) sbb jmp xorl adc insl sbb btc pop (bad) and pushfq movslq rex.WR ds (bad) outsb sbb and mov or leaveq rex.RX mov (bad) rex.WR pushfq rex.WXB jno rex.RXB (bad) cld sbb adc mov push or jge xchg (bad) popfq and (bad) fbld out movsl fwait (bad) xlat repz mov (bad) adc xchg xor sbb xchg callq in xchg sarb sub orb xor jrcxz cwtl scas enterq je xchg fs rex.WX adc add fwait mov xchg gs (bad) loop xchg lahf clc (bad) (bad) in negl mov movslq mov movl rex.WRXB pop addl (bad) mov xlat outsl shlb ss mov sahf xchg (bad) add (bad) lods rex.WRXB sub mov or cwtl (bad) add mov (bad) sbb andl rex.WB movabs int3 sbb nop jno roll (bad) mov popfq clc (bad) xchg mov pop nop xor (bad) jnp xchg and mov rcrb ud2 mov or in rex.X mov sahf ljmp jl (bad) movabs mov pop lods (bad) mov mov cmpsb or (bad) lods (bad) imul rex.WB xor fcmovnbe jns adc out movabs cld or clc sbb in adcl lock rolb imul sti add mov (bad) movabs mov fldl or pushq xor out mov out jge xchg rex.RXB addr32 ror mov xchg (bad) rex.RB rex.XB in in xchg fwait jne,pn (bad) (bad) (bad) jae (bad) (bad) ss cmpl xchg push (bad) movl or movabs insb jno xchg mov (bad) xor (bad) jnp je sub xlat scas (bad) jb test cmpsb faddl (bad) mov stos jnp rex.WRXB adc and test push rex.B xchg pop xor movsb xchg pop rex.R sahf and mov (bad) mov lock (bad) sbb mov test cltd mov sahf mov stos test xchg jl decl test pop (bad) xor mov (bad) iret movabs repnz and (bad) mov rex.X sub jns xchg and jp shlb fbld xchg push nop (bad) (bad) mov jl ja cmc xor xchg rex.XB (bad) (bad) mov cmp hlt rex.RXB sbb (bad) lock int (bad) push and loope (bad) xor (bad) lret movabs stos in cmp pop rcrb pushfq (bad) lods in movsl rex.WXB sbb movabs movsb xchg rex.R rex.R or jl jle pop sbb sub (bad) (bad) orb movabs mov sub (bad) cmc shrb loop out mov jbe and push add mov fisubrl (bad) xchg add jp imul js hlt push cmp movb (bad) (bad) mov rex push mov (bad) xor cmpsl mov rex.WRB (bad) pop mov fldcw pushfq rex.R (bad) shrl xchg (bad) xchg adc popfq (bad) xchg jle rex.WRX sub jbe (bad) jb mov or (bad) fcmove (bad) or hlt hlt push rex.WXB pop or and rex.W or cmpsb (bad) jl pop loope fild push xor mull jns push xchg (bad) pop mov mov cld fldt shl pop mov or mov xchg jmpq jns,pn jrcxz xchg in mov outsb jne add sub push rex.B (bad) retq loope lea xchg or lret push cmp xchg xchg imul icebp xchg (bad) mov mull and lea divb movabs sbb mov rex.RX xchg movsb repz sbb cmp (bad) cs mov mov lahf sti xor stc cld mov cmp adc pop enterq out lods fisub (bad) xchg rex.WRX mov rol or scas fist pop mov movabs sbb scas out rex.WRXB (bad) xchg fmul gs xchg push flds callq imul shrl imulb mov outsb mov (bad) pop je add rex.W decb jp (bad) mov sub subl int sub mov mov cmp and pop or stc loopne pushq (bad) xchg sahf test mov jge xchg shrl std xchg data16 xor add add xchg or callq rex.R (bad) idiv test rex.WX and je popfq xor xchg jp cmp mov or mov (bad) xchg xchg rex.W xlat pop jbe cmpsl movsb sub rex.WR rex.WRX (bad) mov test mov cmp (bad) sbb jne fimull sbb adc xchg adc rex.RB hlt (bad) rex pushq lods lea rex.WRX or test (bad) out xchg (bad) movabs (bad) or and movsl leaveq rex.XB sub cmpsl xor test loope ja test imul xchg mov repz int (bad) stc rcrb negb rex.WR repz enterq adc jmp outsb jrcxz jnp cmp rex.WB xchg mov popfq adc cmpsl (bad) (bad) shl movb jne (bad) mov and rex.WRX repz add mov sbb jns loop xchg cmpsl pop jbe fistl (bad) iret int xchg (bad) sbb test jbe or lret xor frstor xchg cmp sbb mov pop sahf movabs xchg and cltd jg data16 jo test mov (bad) sbb (bad) rex.X andl xchg lods out test cltd and mov add adc pop imul push jle cwtl (bad) xchg xor sub jo in (bad) adc jge ss pop push or fwait movabs (bad) shr and cltd xchg (bad) in jne pushq repz xor (bad) and test (bad) pushfq icebp jrcxz sbb and xchg test (bad) add mov and movabs jge xor mov repz xchg push (bad) (bad) nop stos sub xchg adc cmp (bad) pushq pop std enterq sub ja (bad) mov add ja add pop in ss xchg dec fisubr sub (bad) xchg addr32 sbb test (bad) xchg and add pop int3 repnz adc std xchg lea (bad) rex.WRB es (bad) xor and and xlat incb out pop pushq (bad) test pop movhps in stos xchg popfq icebp pop sbb mov xchg sbb jbe add jg,pn jl mov cld jle mov rorl cmp or nop (bad) jbe loope or push xchg jl sub addb rex.RX popfq and rex.WRB idivb mov out xchg mov xchg cltd cmp xor push rex.WXB jg inc xchg xchg cmp out movabs jmp sbb xchg pop rex.WB rex.WRXB mov addr32 movabs jbe rex.WR rex.R outsb loop pop (bad) out pop (bad) sbb mov jl pushfq test popfq lret (bad) push icebp (bad) mov cmp mov jne xchg mov push (bad) and mov pushq (bad) (bad) xchg or (bad) test je xchg rex.XB repnz nop adc mov (bad) push stc (bad) and pop mov imul mov pushq rex.WB mov pop and mov fimull cmp loope mov and lock mul test ja insl and iret in (bad) xchg sub mov (bad) callq and movslq outsb xchg xchg hlt test cmp xchg loop push mov (bad) add lea sub mov push pop cwtl rex.WRX jge sub (bad) scas push outsl rex.WR (bad) movl rex.RB jl in cmp mov imul pushq rex.WXB xchg addr32 loope xchg mov rex.WB sti gs jns xchg mov and mov mov (bad) mull jne (bad) jmpq retq divb xchg (bad) outsl mov mov in sbb jbe sub xchg cmp fidiv or sub loopne rex.WRX xlat outsl jp pop mov jo lea lock jae int callq push test sbb cwtl lock pop sbb (bad) jnp loope xchg lods int3 mov (bad) xchg (bad) mov jle outsb mov movabs cmc adc cwtl fisubrl rex.X add add movslq adc mov xchg xor movsl (bad) sub int3 sbb sub jmp xchg rex.RX mov xchg (bad) stc xor adc xor xchg enterq jge cs mov xchg rex.WRXB jns xchg cmp sub xchg jrcxz shrb (bad) pop sbb xchg (bad) int cwtl cltd clc cmpsb popfq (bad) lods stos mov (bad) cli lahf ss or (bad) rex.WRXB (bad) test (bad) add sahf gs lock xchg mov (bad) xchg sahf jle adc int cmpsb out idivl sti gs jmpq fcom mov mov (bad) (bad) fldcw imul fstl (bad) adc clc xchg outsb movabs sub rex.RX es sub in xor xchg and mov lret mov fstl (bad) cmp cli lret movabs sub cmc cmp outsl movsl ja push sbb mov xlat mov xchg iret sarl jle rex.WRXB add sbb cmp xchg sbb fwait push (bad) add push sahf add push mov sahf repz xchg ss mov addb cmc ds mov sbb cmp xchg jmpq test pop sahf es nop (bad) mov in xchg ja movabs stos je jl pop xchg rex.WRB jg cwtl ja insb (bad) (bad) loopne mov jge jge mov movslq xchg test sti add callq adc or in subb fs rex.WR xchg sub mov sarl jne test (bad) mov or int (bad) test fcoml push iret mov adc add mov pushfq mov ficoml mov rex.W xor jmp repz (bad) scas rex push outsl movl or cmp (bad) cmp rcrb lret lahf scas (bad) lea (bad) xor pop icebp mov jl rclb sbb in lret sbb (bad) and lret mov out scas and sbb jrcxz retq test push inc sbb (bad) fld leaveq mov mov xlat xchg (bad) (bad) jg,pt adc (bad) and xor or testl add push cmp xor rex cmp test add push (bad) (bad) out fsub (bad) outsl (bad) cltd lods lahf push sbb cmp mov (bad) out (bad) insb push jnp,pt rex.RXB (bad) retq retq wrmsr test xchg adc rex imul rcrb or jmp cmp xchg cmp leaveq cmp jbe cmp xor sbb out xchg mov and ds popfq callq (bad) negl mov sbb sub jno cld (bad) lret mov (bad) mov xchg nop hlt (bad) or popq sahf sub retq fs pop ficoml xchg js rex.WRB sub rex.WX push mov cmp pop xchg jnp cli loop (bad) loopne xchg callq mov cs xor xchg movsl xor (bad) callq mov fs cld repnz xchg (bad) orb and mov in cmc xchg cmp adc (bad) mov cmpsl (bad) es and jp jae xchg pushfq fisubrl or mov (bad) jne jp callq fcoml jge xchg (bad) cwtl xor mov sub int (bad) xlat xchg mov cmpsl jl movabs rex.RB fs nop callq scas push mov rex.X movsl add movslq in or fisttp jl sbb shlb jno fidivrl (bad) or (bad) popfq loopne xchg sub pop pushq movsb pop loope cli clc sahf cmp and ja sub xor (bad) xor movabs mov xchg outsb adc mov lret test cmpsb push mov popfq cmpb (bad) or push mov shrl xor cmpsl xchg movsl (bad) lods insl sets (bad) mov outsl xchg pop sbb (bad) (bad) rolb rex.R icebp fild mov (bad) rex.WRXB jo pushq (bad) lock add jb sahf scas out out cmpsl jl fmull in loop jne mov mov jge cmc fdivl (bad) xchg adc clc mov pushfq rex.RXB popfq out test (bad) mov jmp jns stc (bad) pop xchg or mov retq xchg adc (bad) lret mov fisubr rcrl mov xor (bad) push fs push xchg cmpsb enterq fsubs out or xorb xchg hlt rex in jg std leaveq fnop rcll mov rex.WXB rex.RX jg out mov xchg jno cmpsl sarl enterq icebp rex.X int mov and push add (bad) fmul (bad) mov test push and fcmovnu ficom stos (bad) sbb jp sbb jmp sarb (bad) int3 xchg push fdiv lods mov (bad) xchg leaveq cmp adc mov xchg test subl jno in rex.RX or sub pop xchg (bad) movabs adc sub xchg fidivr fcomps mulb and xor (bad) jrcxz sub jne stos jge lea rex.RB mov adc fmull mov rex.WR outsb scas jbe,pn fsub (bad) cltd fdivl cld test add xchg rcll test int lahf movabs cmp add (bad) mov movslq or pop jg and xchg mov adc push cmp movabs (bad) sbb mov pushfq rex.WRX (bad) mov pop rex.WRXB or rex.X mov jb xchg stc pop in rex.WR sub fisubrl cwtl xchg and lods fnsave outsl mov int or rex.WRB sbb cli adcl (bad) (bad) movabs lahf (bad) movabs rex.R out and mov rex.WB out leaveq mov mov sub xlat ss and xor (bad) icebp pop push or test adc shll mov scas cmp mull or (bad) xor movslq xchg int or (bad) mov cwtl (bad) push (bad) cltd loopne shll movsb movabs mov out or (bad) (bad) fiadd sbb sahf mov mov (bad) cmc adc xlat lock xchg movslq rex.WB rex.RXB scas mov jnp push adc lahf pop add adc (bad) pop rex.X jmp insl jbe fdivl jg and (bad) in imul lods rex.WX rex.WRX imul mov clc lods mov fnsave xchg adc (bad) ja (bad) (bad) cmpsl or scas mov cmpsb xchg int mov mov mov (bad) outsl (bad) stos scas rex.RX movabs movabs cli cmp mov outsb jmp and in cs in rex.R xchg add and movd rex.WRB cli hlt imul jmpq sbb mov and (bad) pushq in xor and rex.WRB mov xchg cli lock lahf xchg (bad) push rex.WXB rcrb fisttpll in pushfq outsb xor rex.WXB lods sbb movabs or cwtl nop jge ficom sub (bad) in cmp ds movslq fs xor rcrb fucom (bad) and or rex.X rex.WX rex.RXB rex.RX xchg in imull push ja nop movabs adc movsl xchg and or idivb xchg cmp add int3 in jbe enterq retq pop (bad) insb fistl jl add rcll hlt rex.WXB rex.WRB push enterq and gs sahf mov (bad) std out movsb mov pop xchg retq (bad) jnp pop sbb cltd jbe cltd sbb mov sahf (bad) xor and jge mov rex.RXB jg xchg (bad) xor rex.X rex.WR xchg xor repz out movabs sub rclb mov iret jle loopne es rclb sbb stc mov sub sub xchg pushq xor mov stos rex.WXB sahf mov retq rex.WB mov imul fwait movabs scas out cmpsb (bad) cwtl mov in mov add test xchg cmp rex.WRX outsb movabs mov xchg add flds and xchg (bad) addr32 mov (bad) add (bad) xlat rex.XB cmp push movslq fdivs and out mov sbb rex.B lret mov int3 cmp rex.WRB stos xchg mov insb adc push loop jne repz xchg ficomp (bad) adc pop ja and pop lock cwtl repz jg (bad) xchg xchg add (bad) ss jno mov cmp sbbb (bad) movslq cmpsb lea repz (bad) xchg jl in cli pop xchg popq pop out addl sahf stc jmpq (bad) ja add in (bad) notl (bad) xchg xor xchg test hlt out shr retq sbb outsb sbb rex.RX rex.WX cwtl push ffreep adcl xchg (bad) adc xor je dec idivl movabs (bad) xchg mov and imul (bad) outsl out mov (bad) pop (bad) jne push push cltq (bad) and movsl rex.WXB jns (bad) or and cmp movsb std rex.WRXB out gs xchg loope and (bad) outsb rex.WXB enterq loopne leaveq sub rex.RXB lret and popfq lea gs xchg mov test add (bad) and mov (bad) test sbb (bad) (bad) or (bad) shlb push lods rex.XB (bad) mov xchg fsubs leaveq repz (bad) scas cld gs cmc subb cmpsb std mov test pushfq adc cmpsl pop sub push cltd callq icebp cmp stos (bad) mov (bad) or (bad) push rex.WX pop cmp mov sbb cltd adc cmp mov adc (bad) xchg mov (bad) (bad) stos mov enterq rex.RB lods loop rorl loope outsl add adc leaveq (bad) sub jle and lods jrcxz cmpsl (bad) (bad) mov gs rex.WRB add adc xchg sti movslq js (bad) rex.WRX rex.WRB push iret mov (bad) adc retq (bad) xchg rex.W xchg and jg (bad) rex mov (bad) rex.WRX imul shl xlat popfq rorl scas shrb movabs adc xor lea cmp or jbe xchg sub rex pushfq movabs test cltd mov out (bad) (bad) movl (bad) test (bad) loop rex.RB rex.WR add retq and (bad) sbb xchg jle test lahf fs test (bad) (bad) jae sub mov pop fisubr outsl push mov movabs add jnp int pop adc orl (bad) rcl (bad) imul sub xlat mov lea (bad) pop pop mov xchg scas in push pop jno imul outsl movslq mov and xchg push xlat pop mov lahf es (bad) test std (bad) in xchg sbb and rex.B xchg retq adc (bad) xor adc repz mov callq out xchg stc es sub mov (bad) movslq sahf (bad) data16 insb pop push sub cmpl jrcxz push rex.WXB mov mov mov rex.R rex.WRB xchg movabs or mov xchg or rex.WRB rex.RB jrcxz insl jbe insb mov sbb xchg scas jge lea fsubl sbb outsb pop (bad) (bad) cwtl mov xchg leaveq lahf (bad) (bad) lret (bad) jle (bad) retq xchg rex rex.WB adc jmp cmpl icebp std mov sahf cmpl adc (bad) push pushfq jae adc rorb (bad) mov rex.WX sbb add ds (bad) rex.X xchg cmp loopne add rex.WXB (bad) xchg movabs movabs or andb (bad) cltd movsb jmp movabs sub ficomp (bad) movslq xor jne add out xchg cld rex.RB mov xchg movabs mov clc test movabs loopne in out rcrl xchg jle loop rex.B test cwtl rex.WRX (bad) lahf cld (bad) jbe xchg stos sbb cmc cltd xchg imul xchg out jl fistpll vandpd clc push repnz in (bad) push fistp pop sbb xchg sbb pop (bad) fisubr fwait rex.WX fnstsw jle cltd pop cltd jl mov (bad) sub add (bad) cmp movabs add imul cmp mov add sub (bad) fbld and sub popfq loop neg mov jp mov jle jns mov mov (bad) jmp nop (bad) (bad) (bad) bswap (bad) xchg mov xchg sahf in pushq mov jrcxz add and xlat lea mov (bad) insl out rex.WRB sbb mov iret jge outsl mov rex.WB movabs jne (bad) rex.WR adc xchg lods movabs fwait push cmpsl nop faddl dec (bad) (bad) imul mov (bad) (bad) xchg (bad) (bad) fs and sbb add lahf (bad) gs or pushfq pop (bad) jb insl test lock inc movabs icebp rex.WX test mov xchg int3 sahf jb mov outsl add xchg adcb fcompl xchg xor rex.WRX (bad) movabs xchg xor (bad) (bad) and movslq lret (bad) stc out mov and mov xchg shlb xchg push subl jle (bad) xor xor (bad) or adc pop push xchg mov rex.RXB xchg adc jo and or cmp push xchg leaveq or mov sahf nop add rex.WRB sub mov cwtl ds (bad) sub xor add add mov (bad) xchg mov mov push xchg cmp fnstsw sbb (bad) popfq lret jrcxz rclb jle rex.RXB adcb addr32 jl xchg lock xor outsb cmp pushfq popfq pop adc (bad) in xchg mov jmpq cmp sbb (bad) test jrcxz and (bad) mov flds rex.XB mov in and adc sub xchg cmp mul mov push popfq xchg fldt mov lahf (bad) jp (bad) (bad) outsb in rex.WRX rcll push clc fwait sub pop in adc mov or fldl (bad) xchg icebp rex.WXB xchg cmp mov and rex.WRXB (bad) push sub push jmp pop lock mov movsb xor xchg (bad) rex jb cs sub (bad) (bad) cwtl popfq out insb or xchg sub lods out out mov xchg cmp (bad) (bad) xchg lock rolb ds (bad) xchg or mov sahf jge fildl jne addr32 sti xchg mov rex jns std int xchg clc push roll xor movabs clc sti adcl out pop jle (bad) add adc mov js xchg lea rex.WB fistl roll repnz in (bad) mov xchg jb callq push repz cmp pushq add (bad) or pushq mov imul pushq in rex.WR cltd retq loop sub pop xchg fsubp sub jrcxz loopne mov xchg imul mov jae pushfq shr loope in rex.WRB rex.WXB rex.XB nop adc xor jo or xor in fidivr sbb pop subl rex.B rex.RXB cwtl addr32 jbe out xchg cli rex.XB xchg rorb cwtl rex.WB movabs (bad) outsl cmp xchg test out and (bad) sbb fs shrb (bad) (bad) adc jno jrcxz insl (bad) rex.WRX (bad) nop (bad) sub jp pushfq rex.WXB pop pushfq rex.R rex.WX loope xchg xchg and sti cltd outsb add xchg rex.WRB cld cmp jae (bad) scas sarl enterq rex.WXB rex.W movslq adc rex.B (bad) adc leaveq rex.X (bad) stos adc lods xchg jnp push and cwtl sub push callq rex.WRB pushfq xchg sub xor rex.RX ja nop (bad) or cmp stc rex.XB fs enterq (bad) push pop rex.WXB rex.RXB xchg movabs movslq jge callq bswap jle (bad) cmp (bad) mov pop movsb rex.WR stc ficomp pushq lret movabs js scas push lret xchg nop lcall jo scas pushq stos (bad) mov rex.W jae fisubrl xchg jns (bad) stos adc jmp shrb pop cmpsl lahf pop andl (bad) push (bad) (bad) movsl sbb xchg xchg sahf in (bad) xchg popfq mov push and lahf (bad) sbb mov adcl (bad) movabs pushfq callq notb pushq xchg jge outsl xchg in jg and mov out sbb fadds bswap retq mov mov (bad) (bad) add (bad) pop cltd push movslq mov adc (bad) movabs rex.WB rex.WR mov add xchg pop popfq (bad) sub pop cmc roll and rex.RX sub mov sbb or adc fadds sbb and sbb add (bad) xchg xchg jrcxz test out add or rorb and sbb fwait fwait mov fs sti (bad) rex.RB popfq (bad) movabs es pop rex.W rex.WB xchg rex.WRXB xchg in je xchg pushfq rex.WRXB lret mov out xchg jp sbb push sub rex.WXB add (bad) fcomip xchg xchg loope xor mov push rex xchg movsb jae rex leaveq ja rex.X ds rex.WXB xor test xchg es in sbb data16 jle (bad) mov (bad) jo mov or lahf (bad) lret mov rex.WX xchg data16 xchg jl jo in notl andl cltd push rclb and movabs movslq add fildll movsb jns adcl mov outsb movslq rcrl jl jnp outsl adc js fsubrl add (bad) adc xchg jmpq test (bad) fisubrl sbb push xchg xor sub xor cmpsb jne xchg pushq mov adc xchg (bad) loop xor sbb sbbl xchg rex.WXB jns jg (bad) mov rex.WRX movabs sub pop mov lods xor sbb ds (bad) ja and cltd sbb scas xchg jo mov hlt xchg jle cs callq pop xor mov addr32 or sahf adc loop (bad) sub jae sbb lea push pop out cli lods movabs rex.WRX scas outsb push and (bad) jp (bad) lods mov sahf and rex.WB repz xchg rex.R cmp mov hlt subb int rex.WRXB lret rex.WX (bad) pause cmp pop rex.WXB xchg adc pop icebp movsl cmpsl xchg mov pop notl or (bad) mov lock outsl jnp mov fdivr shl jge test (bad) (bad) xor (bad) (bad) movabs mov clc (bad) sahf movslq mov jo mov rex.RXB xchg in sti push sub popfq fwait mov fsubrl in or fs movsb jrcxz rex.WRB xchg pushfq and (bad) leaveq (bad) in lods addr32 fnsave xchg cmpsb jmpq sub std push loop fnstenv (bad) movsb xchg data16 pop sbb sub fstpt loopne fsubr jnp jle (bad) mov lods nop imul rex.WR ja fwait popq sub lret fisttpl idivl xor sbb vcvtdq2pd jne xchg pop mov (bad) jrcxz mov sbb (bad) rex.WB out cmp and mov lods loop sub out rex.WRX lahf ss shlb cld xchg cmp rex.X dec or mov cmp loopne pushfq mov cmp mov rex.B and adc stos mov js rex.RB rclb fabs jnp xchg pop std movsl mov sahf cmpsb rex.WB repz cmp movslq (bad) xchg xchg mov jg jbe cmpsb sub std ja cli sub rex.WRXB jbe lret (bad) shrl icebp and movabs fldt and jb insl rcl xchg mov mov sahf addl push mov (bad) adc cli mov and jae nop mov and (bad) adc (bad) mov and mul add mov mov xchg mov (bad) repz (bad) (bad) mov jge mov popfq movsb mov cmp stos imul shlb or rex.WX or mov (bad) (bad) (bad) (bad) push stc and leaveq (bad) mov movabs xchg (bad) pop adc stos ds push rex.R movslq movsb in jbe ja rex.WRX test in (bad) mov pop int (bad) xchg rcll std jne sti sbb jae ja (bad) (bad) ficompl (bad) mov repz retq mov rex.XB mov pop in test (bad) mov int (bad) (bad) xor (bad) lahf insl jnp sbb cwtl jo imul sbbb xchg nop cmp ja jns (bad) rex.WR gs iret (bad) or jp sti mov out pop cmpsb nop sub mov (bad) xor js rex.WX in rex.WX (bad) sub (bad) callq sarl (bad) jae (bad) nop movabs insl movslq (bad) hlt clc push insl rcrl cs subl lret mov fstpt xor mov imull leaveq (bad) out scas cwtl xor lock mov jae (bad) push rex.WX sahf xor rex.WRXB ss callq sbb cmpsl push jne cmp xchg mov in push mov (bad) (bad) xchg pushq pop xor xchg mov (bad) movsb add (bad) mov lret fwait pop (bad) pushfq fiadd icebp pop data16 test mov loope mov push (bad) out mov cmp in fistp je rex.XB xchg and or (bad) adc (bad) mov data16 lea sub mov pop xchg adc push insb mov mov cmp xchg lods push fs and frstor mov xorl cmp rex.WX (bad) sti retq (bad) cli std jno,pn sbb lock int cmp xchg xchg xchg movsl mov push sub retq (bad) xchg mov pushfq out pop gs stos rcll sub mov cmpsb loopne rex.RXB (bad) add (bad) xchg movslq scas mov xchg fnsave xchg sahf jg mov sahf (bad) rex.WB (bad) nop movabs xor xchg sub movsl pop rorl fcomps js ja rex.RXB addr32 jbe mov rcrb ja xchg int3 or (bad) cmpsb pop sub cmp jne sahf sub jmpq fsubs xchg fwait cwtl cmp subl sbb pop add xchg repz ja xchg jns imul add rex.RB or jnp xor (bad) jns imul movslq mov imul mov outsb or movslq (bad) jp or cmp fwait (bad) int or loope (bad) adc push xchg lret adc mov (bad) subl xchg fidiv (bad) cmpsb (bad) lret push sub or xchg xor pop pushfq xor xchg pushq mov sub loopne mov negb andb pop xchg out rex.WRX pop nop gs adc sbb (bad) cmp movsb rex.WRXB cs adc (bad) jb or mov nop scas std int3 (bad) shrl push sbb cwtl and or sahf mov outsb rex.XB (bad) lock add rclb mov add pop (bad) pushfq loop jl jp je rex.WRXB pushq rex.XB (bad) negl mov imul xchg push mov ss push or sbb xchg stc rex.WRXB xchg fildll and rex.RB and xchg (bad) movsl lods (bad) fsubrs lahf sahf xor mov roll cmp xchg hlt pop sbb jno clc xchg xchg out fimul out xchg xchg mov test push pushq repnz sbb in callq movabs scas out in push jmp (bad) mov sub rex.WR push mov mov retq fsubl nop sbb addr32 test rex.W movsl mov scas jl or (bad) out lods and push in mov clc addr32 test mov cmp imul push (bad) mov mov sti in jmp cld retq (bad) (bad) (bad) outsl jae jg clc sbb nop sbb insl adc xor mov outsb xlat pushq mov mov mov pushq pop sahf adc es nop (bad) rex.WX stc mov (bad) invd rex.B push imul xchg adc (bad) mov fsubp outsl fdivp rex divl loopne pushq xor stc (bad) ds mov jmpq in icebp and sbb jo add (bad) pop retq (bad) xor xchg cmp stc pop xchg lret sbb loopne xchg or (bad) rex.RB flds (bad) lock cmp (bad) outsb xchg push cmp hlt sar (bad) fnclex mov xchg int3 jl pop movslq xchg shr outsl (bad) (bad) xchg rex.WRX pushq not sbbl std sub push lret xor and xchg out insl adcb xchg xchg rex.XB sbb rex.X int3 sbb icebp cmpsl cmpsb jrcxz fdivp cmc mov mov ja loopne insl (bad) fcompl mov push movabs rcrl (bad) mov shrl lock sub rex sub ja callq xor cmpsb xlat mov sub xchg xchg adc mov pop push scas out in (bad) cwtl mov rex.RX jb ds (bad) add sbb adc cwtl xchg loop cwtl pop xchg xchg mov mov ds xchg pop hlt (bad) in mov out jg movsb (bad) out lods xor adc (bad) mov or (bad) or push fdivrp (bad) (bad) repz imul (bad) adc xor je loop (bad) decl mov lods notl mov xor mov movsb loopne (bad) rex.WRB mov (bad) test orps out xchg mov scas test retq (bad) (bad) mov sub mov movabs sbb xchg push out xor fldt movabs shr (bad) sahf sbb mov fcoml (bad) outsl (bad) add (bad) (bad) in mov pop fldenv (bad) jmp fistl jl notl xchg test and add ficom cwtl mov (bad) cmp and adc cltq rex.R scas mov (bad) adc xchg jmp xor stos (bad) out sub scas js xchg and (bad) mov (bad) xorb sahf fsubr rex.RXB lock movsb (bad) sub push xchg insb xchg iret (bad) mov movabs (bad) out neg cmpsb and xchg push (bad) ds rex.WRB outsl out popfq mov fsubl negl nop retq (bad) mul sub rex mov sbb push add and loopne nop fdivl sbb and (bad) std cmpsl xchg repz test pop mov rex.RXB movabs mov stc movabs in xchg test rex.WRB cmpsb cmpsb lea push lcall stc xchg (bad) sti jno rex.X stos xchg rex.RB (bad) (bad) cltd (bad) enterq ficoml mov mov cmp cli (bad) mov cwtl (bad) shr repz rex.RB movslq (bad) xchg pushq xchg (bad) rex.XB cltd movsl (bad) pop pop xchg jno insl (bad) lods pop (bad) sti icebp or (bad) pushfq xor fs repz lret notb mov mov (bad) insl sub subl outsl stos mov div xchg pop nop test movabs movabs mov rex.WXB xchg or pop and xchg jb jp mov pushq and xchg imul add stc cwtl (bad) jg sbbl and sbb (bad) cmp add pop (bad) pushfq sub mov rex.XB insb fnstenv pushq icebp and rcrb outsb and jae loop (bad) cltd mov xchg adc enterq enterq in sub (bad) rex.RX fisubrl mov out loope decl gs rex.WX fdivl mov mov xor pop jbe fimul jo test xchg (bad) push sarl pop mov rex.RXB or (bad) push rex.RB rex.WXB sti (bad) (bad) rex.WB mov xor or scas lret (bad) icebp rex.WX mov sbb scas mov cltd pop jns movslq (bad) xor cmp (bad) pushq and cmp loope and (bad) xchg js jg xchg push stc (bad) (bad) push jns (bad) xchg (bad) sarl in sub pop fiaddl (bad) (bad) (bad) fsubr sbb jne push sbb outsl push mov xor movsl push lahf es adcl test pushfq (bad) sbb mov std pop loopne jnp xchg nop sbb rex.WRX and rex.RXB stos rcrl cmp pop sub scas pop xchg jg xchg push mov (bad) (bad) cs imul mov xchg push scas or ds add lahf rex.WRX mov int loop mov pop rex.X in sbb and and (bad) outsb (bad) fiaddl or (bad) (bad) add push mov jbe sub (bad) iret pop or pop (bad) mov pop (bad) xchg cmp sub mov adc mov fmul (bad) js fstps lret xor (bad) movsl jnp mov jrcxz xchg js sbb (bad) pushfq movsl loop repz pop sub cli add fnstsw push sub cs xchg out fidivrl xchg or in rex.WRB ss mov adc or xchg scas jnp iret xor out xor adc pop pop movslq (bad) jmp jmpq sbb bswap (bad) loop movaps sbb loope sub xlat xchg int pushq orl sti lea fsts (bad) add rex.WRB mov int in mov fdivs lret jnp (bad) rorb and retq cmc sub sahf (bad) movabs imul or out (bad) (bad) adc (bad) sub add add (bad) shl testb xor rex.WRX mov xor and imul int pmulhuw movabs add jl sbb lea mov lret repnz adc imulb pushq insb in push imul push jno fucom or icebp fbstp sti movsb es rex.RB (bad) sub fidivrl fstp mov pushq movsl (bad) sbb movslq jle mov xor push mov cld xchg stos (bad) push test sarb mov in sub push xchg ficoml fwait rex.X (bad) rex.WRX push sahf pushq enterq ss lea fnstenv lea stos mov jg xchg rex.RXB mov cs out xchg adc sub (bad) jge xchg jle adc and fsubr sub (bad) xchg (bad) (bad) mov add cmp nop std and int rex.WRB jl out jrcxz pop and xlat lods cwtl or and movabs (bad) movabs xchg stc rex.WX mov rex.WX testl (bad) xor sbb pop rex.XB vshufps mov ud2 (bad) or and jg mov xchg add cmc xchg xchg movsl push sub pushq sbb (bad) ja mul (bad) pushfq mov jo lahf jnp pop out (bad) rex.X retq pushfq sarl (bad) add (bad) xchg (bad) gs jae (bad) push xchg mov testb mov xor add xchg fs imul clc (bad) sahf xor push inc jnp movsl lock rex.RXB mov stos jge sahf notb (bad) xchg xor add or (bad) (bad) xlat mov (bad) rex.XB sahf out in mov xchg or or mov sbb push sahf (bad) stc fistl or mov (bad) rex.XB or addr32 pop xchg jb out xor jmpq xchg cmp xor push xchg xchg jp mov xchg data16 sbb cld add in scas icebp and xchg (bad) xchg loopne movsl (bad) (bad) mov pop mov or retq test xchg movabs push sbb mov xor clc cwtl movsb xchg xchg repz xchg enterq lods rex.R pop cld test cltd popfq pop test lea (bad) and insl in jg rcll xchg or callq in ja scas fcompl jrcxz xchg rex.RXB push insb (bad) movabs sub or pop jo addr32 nop xchg fucomp incb sar and xor xchg movabs xchg retq mov xchg outsl rex.RX and sub xchg xchg add (bad) js imul add cmpsb rex.WB pushfq scas or mov imul mov mov sub sbb mov pushq movabs jnp nop or or (bad) lahf cmp movsb leaveq mov rex.XB in add mov (bad) xor pushfq xlat cwtl or jg outsl fwait (bad) cli mov in movabs ss pop push mov jmp mov movsb and push enterq out pop or or adc xor xor cmpsl xchg (bad) jg pop nop xchg or mov (bad) add ficoml out mov jmp lahf loopne (bad) clc add out mov scas xor pop retq jmp (bad) scas mov (bad) mov mov mov rex.WB rex.WXB mov (bad) sub cltd shrl fdivr imul xchg (bad) add shrl scas and pop in cmp pop cmpb nop add sahf (bad) subl (bad) sub insl popfq cld jno rex.XB mov rex.R (bad) or or xor or (bad) sbb adc mov mov (bad) (bad) out pushfq lock fiaddl es nop (bad) pop je rex.WRB mov xchg mov rex.WRX add ja push insb cmp mov icebp shll adc sub push cmp je xorl sub push out adc rex data16 pushq xchg mov xchg imul mov in lods std or push add jp (bad) xchg xor rex.WXB stos cmp mov pop int3 xchg push (bad) (bad) push sub (bad) (bad) (bad) sahf (bad) add dec movabs fwait rclb insb std (bad) scas jne xlat add rex.WRXB jb mov rcrb mov mov xacquire (bad) mov fdivl sahf gs (bad) xor xchg stos mov (bad) (bad) jmp jmp mulb adc mov (bad) cmp fild stos jo sahf pushq int cmpsl jp xchg mov mov cmp xor sub (bad) orl mov push and jg cs movabs add pop popfq mov lock push add int mov xchg insl fldl jg rex.B iret fs cmp (bad) imul sahf xchg roll add movslq iret rex.X cmp (bad) test (bad) cwtl lret push sahf (bad) lods ja (bad) out jns sahf imul retq outsl insb jo (bad) (bad) push mov cld repnz popfq adc rex.X loopne xor mov jl out and fcoml push rcrl xchg cmpsb es icebp xchg movsl movabs movabs in cmpsl test mov icebp mov adc cwtl cs lret cli (bad) (bad) ss adc scas iret mov in pushfq add pushfq (bad) and cltd xchg mov or and fcomps (bad) mov push enterq (bad) test movsl int push fisubr movabs popfq jg cmp xchg (bad) cltd push (bad) stos jnp xchg cmp pop popfq pushq callq lods xchg stc (bad) mov sub mov popfq pushfq insb (bad) callq xchg test jmp jbe sub jne mov add sub adcb jo jle xchg lret or cmc fcoml mov cli lods out sahf cmpsl (bad) cmc mov add stos xchg test sub (bad) je xchg sahf sub (bad) in orb rcrb test fstpt xchg add pop mov sbb rex.WXB cli rcrb xchg mov nop (bad) push movslq (bad) test pop xchg ja or rex.WR rex rex.WRB rex.XB movabs mov (bad) mov cmpsb int3 lret mov mov (bad) jge xchg loope ja movsl cmpsl add out xor cs jae xchg pop fcomi imul (bad) pushq jge xchg (bad) sbb outsb xchg movabs outsl loop mov jg and adc movabs sub sub adc es scas cmpsl and jnp push mov (bad) sbb loopne xchg jno rorl fbld rcr push cs rex.RX or loop insl mov or (bad) cmp jmp and (bad) (bad) xchg scas cs ds cmc cwtl ss (bad) mov outsl (bad) rex.WRX mov insb ja lretq rex.RXB out adc rex.R sub mov add jne cld (bad) mov (bad) (bad) retq js (bad) imul or xor adc xor adc xchg (bad) sub jae (bad) xchg repnz rcrb add mov (bad) (bad) fdivrs test enterq fisttpll xchg xchg pop cltd cs cmp sbb fiadd (bad) (bad) movabs in push jg and out xchg xchg data16 icebp fwait insb gs (bad) xchg add push (bad) rex.B cmpsl xchg cmpl fnstcw push mov xchg xor add push cwtl lods cmpb rex.W (bad) pushfq (bad) (bad) sbb xchg cwtl xor jp adc cmp cmpsb (bad) ficom mov rex.RXB xchg add pop leaveq (bad) (bad) cwtl in xchg test xchg notb pop cmp fimul sahf icebp adc mov xchg (bad) mov in sub mov pop pop xchg or stos rex.WXB xor add add popfq xchg (bad) imul enterq xchg mov mov adc mov gs fcmovne clc jmp xchg xor (bad) sub adc or (bad) rex.WXB shrq push fwait int test pushq sub xor cwtl xchg outsl repz (bad) jbe in and xchg fwait push rex.R cs (bad) (bad) (bad) pop mov cmp xor test mov sbb and lret nop adc push loopne scas rorl cmp xchg (bad) test (bad) jmp mov popfq test mov xchg (bad) sbb jle rex.WRB (bad) out movabs nop adc rex.WRX pushq or sahf pop lret out rex.WX (bad) (bad) mov int3 sbb (bad) xchg xchg (bad) in sub cmp jg pop (bad) and rcl ja jne (bad) data16 lret push (bad) mov fimul out rex.B adc (bad) scas fdivrp cltd roll mov test cmc jnp popfq lret adc cs jmp jbe stos out cli (bad) and mov sbb or in fistpl (bad) je out fsubrl lods rex.X lods test xor jne (bad) jle sahf (bad) jo clc xchg fs movabs js xor imul fsubrl retq pushfq mov (bad) repz rex.WRX cmpsb jns xchg (bad) lret rex.WRXB add xchg sti or (bad) scas and fimul (bad) ds sarl xchg fsubp rex.RXB sub jne out shrb rex.W out adc int3 sub (bad) (bad) mov sbb mov (bad) movabs in sbb (bad) retq jl adc (bad) xchg rex.WXB push rex.WRXB imul stc ficompl jno sbb xchg jns rex.B rex.WRXB mov sub xchg cwtl and and cmpsl out (bad) movslq mov add xor push mov jo (bad) sbb xchg jp pushq fimull cwtl enterq jle (bad) xlat cld (bad) xchg (bad) clc push hlt xchg fwait add insl sarl fsubrs nop xchg int3 add and mov sti xchg jb lods cli lock xor test push (bad) mov ja (bad) fsubr xor jle xor rex.R pop add (bad) fidivl mov mov enterq xchg movabs pop out xchg lods outsl insl cmp shl jmpq mov outsb xor enterq cmp pushq xchg loop add out xchg xor sub fcompl fisubl jae rcrb (bad) and pop adc mov pop cmpsb (bad) xchg loop movsl push jmp (bad) (bad) add cmp jrcxz mov xor js cmp or (bad) sbb mov movsl pop shr fwait in movabs out xchg mov lret movabs lock push push rex.WR (bad) lahf jp sbb cmp rex.WRX cs xchg jge gs (bad) cmp or test shrl mov or mov or repnz and nop mov xor mov mov out out mov cltd rex.WXB or (bad) and pushq addr32 sahf int3 pop pop mov stos movabs mov mov scas lret (bad) sbb pop (bad) fstl rex.B sti or movabs add loopne mov cmc rex.WRB insb xor and mov fldcw rex.WX (bad) cltd rex.RX mov adc cs pop adc xor cmp movsb movslq (bad) std sub xchg sub nop xchg psubusw cltd imul (bad) stos imul xor rex.WRXB adc xor test mov or out cs mov sbb pop sbb or or mov idivb (bad) sub rcr (bad) lahf sub out xchg xchg mov pop sbb xor out pop ffree sub mov xchg jno sbb (bad) jmpq es adc stos cmp add nop xor data16 jno pop jge jl cs jg rcrl and adc mov fstpl pushq pushfq imul scas mov mov and or rex.RXB lea rex.RXB rex.WX cltd sahf repz (bad) rex.WR xchg cmc cmp lea (bad) fnsave fldcw jae retq rex.WR mov sbb (bad) push adc sbb (bad) (bad) test lods nop retw xor (bad) stc sbb pushfq mov data16 jnp xchg outsl cmp pushq mov lods (bad) (bad) (bad) xchg rex.RX mov fistpl kmovw sub xorl ds retq pop outsl in sti and nop movabs (bad) xor mov icebp mov add rol pop movabs jg jge movsb iret xchg in jrcxz mov loopne (bad) (bad) (bad) (bad) xor js jle cwtl and (bad) push jne movslq xchg rorl (bad) xchg rex jl stos test rex.WXB cwtl notb mov xchg rex.WRB push sub sti rex.WR cmpl movabs fs xor loop xchg enterq or pop rcll rex.XB rcrb rex.WRXB fist rex.R mov mov cwtl outsb ss loopne stos mov mov (bad) mov rex.WRXB and (bad) icebp xlat mov cmp sbb add fidivr xchg lea cmp or pop addr32 and ja jbe fistp rex.WRX movabs (bad) (bad) (bad) and (bad) mov sahf xchg jbe insl rcll test (bad) out (bad) rex.WRB rex.XB sti adc sbb or (bad) std rex.XB cmp repz lcall rex.WRB fstl (bad) adc loope cmpsb (bad) pop add out mov mov cltd cwtl and mov mov xor nop adc fisubl xchg xor loop fcoml (bad) cltd mov xchg sahf jrcxz add xlat cmp fidivr out mov movabs out fiaddl xor jrcxz jrcxz jns hlt rex.RXB rex.W movabs (bad) enterq rex.WB push test mov and and cmpsl mov (bad) sbb xchg loop jb (bad) and sub ja mov push jg lret repz jnp orl movsl jrcxz mov lahf jbe or rex.RXB (bad) or pop fimull cmp jne int3 (bad) xor (bad) mov rex.WB pop cmp cmp xlat scas js rclb (bad) mov jmp cmp fldenv mov or sbb (bad) imul mov xchg xchg movabs xor xor in pushq cld outsl fidivl mov pop jrcxz pop jnp hlt cwtl rex.WRX movsb adc movabs lahf cmc cltd outsl and pop loopne loope xchg stos mov xchg add rex.WX in popfq jmp rex.WRX out (bad) jp in pushfq mov mov out out popfq xchg sbb je mov sub (bad) mov lods mov mov lahf mov push xchg insb cwtl mov xlat cmp and add movabs pop shrl fwait mulb sub pop add sub ss sete or adc fisttpll pop iret outsl insl add rex mov (bad) out out xor pop mov clc jnp (bad) jmpq sbb rex.WRB in jo xor pop (bad) fldcw popfq jg int3 lock sbb pushq adc (bad) cld xchg shll (bad) pop loope in out xchg scas (bad) mov nop sub xor cltd rex.RX (bad) callq lea xor (bad) fistl pop cmp mov mov cltd rex.W (bad) rex.RB (bad) out std adc (bad) push (bad) push gs (bad) (bad) rex.WB add pop (bad) movsl (bad) adc cmc movsb outsb imulb rex.WX callq xchg xchg hlt add test xchg sub jge sub xchg cs mov cwtl data16 jne jge std cmpsb repz cmpsb (bad) sbb pop sub xchg in in outsl movhps sbb xor movslq rex.XB rcrl movsb xchg enterq rex.RXB js add sar pushfq and push sahf rex.RX rorl pop (bad) hlt test out sub sbb flds lods push mov movsl mov jg cmp test movsb xchg push rex.WX xchg mov xchg adc rex.XB mov mov mov xor movabs divl xchg push int3 cmpsb and outsb sbb add mov pushq shl add (bad) xchg add mov xchg adc xor cwtl shrl movabs pushfq hlt mov rorb xchg movabs add jae add sbb js andl xor ja xchg and xlat cmp rex.WRB repnz xchg lods jo rcll rex.B adc add hlt cmp mov movabs insb lea adc repz leaveq vcvtps2pd add adcl fs callq outsl xchg sub cwtl (bad) movabs mov xchg sbb mov in std lock pop mov (bad) enterq sub adcq jb int xchg push movabs cmp mov pop popfq sub test lret fsubrl push and repnz xchg sarl xchg jne sti lods in xchg rex.WRX out mov xchg add sub rex.RX mov out xchg (bad) sbb xchg ss cmp pushq xchg add test (bad) lea pushfq sarl ja faddp xchg xchg movsb ds jne xchg sar scas sub in in xchg sahf test add add pushq jge add pop xor cmp xor movabs rex.RB rcrl stc cmpsl in mov push or mov mov (bad) jne rex.WB fmuls pop or xchg (bad) cwtl nop std jnp callq stc mov loope gs leaveq rclb movsl sbb adc add (bad) rcl (bad) mov jmp pop test int3 pop xchg loope mov pop xchg push or xor sbb jo frstor and cmp add pushq mov cwtl add xchg decb xchg (bad) sti add ja (bad) (bad) sbbb sbb sub adc in (bad) fcmovne sbb cmp in (bad) rex.WRXB push jbe mov xchg push cmp (bad) loope scas test and xchg mov rex.WX xchg (bad) lahf mov (bad) mov sbb idivb xor pop xchg xchg and cmpb mov xchg mov (bad) cli in ficom jnp scas jo mov fcmovbe nop (bad) mov jge push cmc (bad) mov xor pop adc enterq cwtl (bad) (bad) rex.RXB negl xchg shlb (bad) sahf cmc out mov jle nop jrcxz (bad) lret xchg jb sbb iret rex.WRXB push cmc ficomp mov (bad) pushq callq lock pushq es xchg add (bad) mov sahf clc rex.WRB pop cmp sbb or cltd mov (bad) (bad) rex.WXB cmp (bad) (bad) enterq in sub add fildl xlat outsb xchg movsb (bad) icebp xor xchg pop mov jno xchg ja rex.R mov cli (bad) test movabs xchg movabs repz lea ror mov xchg xor add push adc insb (bad) callq cmp xchg add ds (bad) int3 xchg or movabs or sub cltd sahf test rex or cwtl mov jge (bad) xor sbb adc xchg sahf lea xor loop outsb or fwait cvtdq2ps retq add and (bad) mov jo movabs roll and mov sub mov out cmpl mov xchg movsb mov jp adc popfq push sub js mov (bad) scas jnp repz rex.WX out add cmp jge xchg pop rex.RB test (bad) pop scas sahf push (bad) sti outsl add stos rex.WRXB xchg push repz in sahf jrcxz cwtl (bad) hlt loop loopne rex.WR pop push xchg leaveq sbb xchg (bad) seta gs (bad) rclb sub cmp push gs fucom push mov xchg hlt (bad) xlat mov pushfq xor cmc ja mov mov cmpsb cmp scas fmull adc lret mov loopne stos popfq add adc mov rex.XB xchg stos (bad) and xchg jg jl sbb push cmp in movabs xlat fdivrl xchg or cld ja mov movabs fisubrl xchg jge test fwait retq sahf movabs (bad) nop xor imull push pushfq cmpsl xor adc (bad) mov adc stos xchg adc mov jmp and or stc fs mov jg jg mov xor xchg push insl pop mov xchg rcll scas cld lea or xor in push sub (bad) pushq jg mov (bad) mov xchg mov loopne mov jbe (bad) xchg add movsl cmc (bad) vcomiss test xchg (bad) or clc (bad) movabs in movsl sbb cltd adc mov (bad) xor xchg out cmp (bad) in cmpsl fcmove push cmp repnz xchg adc pop rex.WR orb sbb nop rex.XB fiadd xor (bad) fwait (bad) (bad) fidiv outsb enterq and xchg xchg xor push xchg pop jmp mov mov sahf pushq jg push js jmp (bad) rex.B add mov push fs adc mov mov callq sbb add leaveq repnz sub (bad) jmp (bad) icebp xchg sbb rex.R cltd sbb rex.W jnp faddl movslq push adc (bad) mov rcr sbb movsb ja rex.WB adc movsl cmp (bad) mov imul xlat xchg mov out xchg (bad) jle incl pushfq xor mov fwait rex.RB mov insl jrcxz or outsb xchg pop add (bad) nop shrb insl add xchg cmp in (bad) shll rex.WXB retq stos (bad) and mov mov xchg stc add jge rex.XB rex.RX clc or sbb stos sti and fidiv (bad) loop scas or pop add sub jno (bad) add rclb jae scas xchg (bad) repnz pop jb (bad) (bad) push mov add not lods xchg push stos or sub mov sahf (bad) xchg nop add push js (bad) xchg jne adc nop test ja push (bad) ss mov fild rex.R in lcall or sub adc xchg test movabs or cld lret adc xchg or add xchg in (bad) mov jl xchg sub popfq (bad) out cmc adcl jne xchg xor js add add xchg xchg and jmpq add sti popfq retq loop ja pop or xor hlt xchg (bad) cmp insl jne fwait (bad) pushfq hlt (bad) mov or movsb sahf jl pop jle (bad) add adc (bad) (bad) xchg mov repnz (bad) je addr32 loope (bad) cwtl (bad) rex.WX ja jne (bad) pushfq popfq callq cmpsl cld and pop rex ja xchg cmc outsl (bad) ljmp out sub mov rex.RB rex.RXB (bad) mov mov (bad) sub clc rex.WR xor jbe cmp xchg adc xchg stos fwait loopne sub xlat or pop notl push icebp pushq jnp or psrad mov imul je xor sbb out pop rex.XB sbb std rex.B popfq (bad) sbbl (bad) (bad) lahf pop adc (bad) jnp rex.WR xor add pushq jne push (bad) data16 add adc pushfq push stos push jbe (bad) sbb shlb (bad) insb (bad) (bad) gs rex.RXB (bad) mov lahf cltd rex.WR rex push and fs fwait je xor mov out sub rex.W movsb and loope loop cmc and nop push add (bad) mov (bad) pushq callq out out loope movslq rex.WXB lock mov popfq mov pop jge mov test mov movd jbe adc sbb test pop imul ja ficom (bad) (bad) mov rex.X fnop (bad) lret vunpckhps lahf icebp jl rex.WR sub cs xor fs push (bad) rex.X xor je sub jbe mov rex jge sbb sbb out cwtl cmp push sub int and push xlat rex.X jo (bad) cmpsb mov (bad) xchg (bad) cmp nop (bad) in xchg sub outsb adc mov sbb rex.X fimul pmuludq pop cmp fadds adc pop xchg xchg sbb add sub sub push vdivsd (bad) adc int adc out (bad) hlt (bad) test xlat movabs push push in push popfq fistpl cmpsl pushq lret (bad) pop fucomp add insl sub jl sub mov pushfq (bad) iret (bad) rcll rex.WR rex.WXB xchg and rex.W shrb and ds xchg mov fwait (bad) (bad) xchg rex.WB cs out add jb (bad) imulb (bad) icebp push lahf jge mov mov (bad) mov cmp mov fsubrl lret icebp xchg lock negb movsl push push sbb xchg lock movabs cmp xchg mov js packuswb insb cmpsb (bad) xchg je icebp jp cmp shll out cmp in jns cwtl out mov movsb xchg int test xchg cs mov xchg lods xor mov movabs popfq ja repz xchg cld (bad) rex.WX lock jg cli enterq loop xorl jrcxz and rex.WB repz stos enterq xchg pushq insb movabs lret or rex.WB xchg movsb mov test and js xor (bad) cmc imul jle test xchg (bad) jo (bad) retq cld sahf xchg out xlat or clc push idivl scas (bad) insb in add int mov (bad) jle rex.R mov test in in test movabs pop mov mov (bad) mov mov xchg push insl fbstp out (bad) cmp movabs (bad) lods cwtl lret insb shrb rex.WXB rex.WX and adc mov xor nop xchg push cmp cwtl and cld push addr32 xchg mov in cs jae mov imul sahf rex.WRXB cmp push (bad) sti sub (bad) rex.WXB vunpckhps enterq xchg and retq cmpsl or fiadd mov (bad) ja pop in mov sub and xchg scas rex test adc fist sbb mov sti jmp mov retq (bad) movabs pushfq (bad) rex.WRB rex.B sti (bad) (bad) mov mov fdiv out jge mov xchg rex.XB enterq add (bad) mov loopne mov shll scas jne xchg rex.W shrb and sbb cmp test fs jp ficoml mov gs sub mov fwait movsb rex.WRB addr32 nop mov repz pop (bad) je xchg pushq out outsb cmp xchg jp movabs movsb add jg movabs xchg mov lahf sahf notl adc add jae or or test (bad) mov xchg movabs repnz cmp xchg adc lods xchg rex.WRXB sbb scas (bad) cmp test sbb xchg or jae (bad) sub mov stc sahf mov fnsave rex.RB rclb (bad) jmpq pop sahf and je in (bad) xchg (bad) in pushq divl imul and jge mov push jb fisubrl rex.B xor lahf sahf mov out (bad) stc xchg movabs (bad) (bad) xor pushfq loope sbb rcrb (bad) cmp movsl rex.WXB rex.WB rolb adc mov push jno std notl fimul loop (bad) fisttp mov and mov pop pushq (bad) xchg jbe mov jns jmpq mul (bad) (bad) outsb push xor mov fiaddl sbb adc cmpsb xchg (bad) mov fcmovbe xchg cld pop stos rex.XB out (bad) xchg cmp mov cmpl pop imul xchg cwtl mov (bad) jp (bad) lock push fldcw cs rex.WX rex.WB int3 cmovo xchg (bad) pushfq cltd data16 nop sbb imull adc xor cld jmp sub popfq jg cmp test stos (bad) sahf jge xor cmc pop and rex.WRB jbe push pop adc jp pop stos fsts jae cmp xor enterq xchg pop popfq fmuls data16 rex.WR xchg popfq rcrl andl mov jbe (bad) mov push pop cld mov (bad) or scas imul je andl pop (bad) nop cltd rex.WRXB fidivrl ficomp icebp mov sub push test out sbb (bad) push in iret (bad) jne jle (bad) xchg and sub (bad) lea mov xchg jnp push (bad) add pop rex outsl pop push (bad) jo pushfq cltd adc (bad) loopne sub mov andnps sbb adc mulb adc outsb rex adc addr32 rex.WB sub out xchg mov sahf xchg sub outsb ja and jae xor jo (bad) insl imul mov (bad) sub push test jo sbb (bad) adc scas xchg rclb repz pinsrw cltd rex.RXB jrcxz xchg mov mov xchg mov or sahf (bad) mov cmp jge rex.RX pop (bad) xchg lods sbb (bad) repnz in xchg rclb (bad) adc xchg or js mull and xchg rex.XB rex.WRX mov cmpsb movabs (bad) pushq push cmp rex.RB cmpl xchg addb (bad) cs mov (bad) sub (bad) xchg (bad) push fisttpl int3 lahf or mov pop (bad) cmpsb add sti (bad) (bad) sub mov or ljmp popfq sbbl add xor in addr32 orl xchg mov cmpsb enterq add out jo test xchg stc and cli fwait insb (bad) retq push cmpsl pop std add cwtl and xchg or ss xor xchg mov add xbeginq pushfq cmpsb ds out (bad) pushfq (bad) callq sarl in rex.X (bad) sbb cmp cld jnp int jno mov jp mov (bad) cmp xor stos (bad) (bad) mov push xor jnp je lock push xchg fstpl cmp scas xchg jns and rex.WRXB jrcxz pushfq jg js xchg mov mov jne (bad) sub nop rcll ficom mov xchg xlat jg hlt add jbe sub movabs fidiv sub cmp add (bad) iret mov mov xor leaveq (bad) cmc xor xchg cwtl ds mov mov mov lahf imul push jnp fs sub lock mov rclb push add push fisub xchg fs jg xchg mov in rex.WXB shr (bad) scas lods out (bad) pop ds push jl (bad) (bad) (bad) movabs (bad) jne (bad) lahf fstpl popfq movabs cmp stos mov mov mov int stos xchg out rex.RX (bad) jg cmp jmp (bad) xchg lods rex.WR jg fistp mov cld imul fwait out xchg push (bad) sbb and sti xchg rex.RB mov jbe rex.R lahf stc xor push (bad) push rcrb xchg add (bad) sbb xchg and push cmp loope (bad) fbld rex sbb xlat xchg rex.XB stos imul add clc xchg (bad) hlt imul xor rex.WX jmpq (bad) xchg ficompl (bad) push movabs and pushfq hlt callq sahf cmpsb sbb stos add cmp add jp movslq lea and callq rex.W cld nop icebp xchg xchg jo movsb jg mulb (bad) xchg test fsts (bad) mov jmp jbe and shr sub (bad) cmp (bad) outsl jb jg (bad) rcrl popfq retq scas rex.WX add or pop xchg sbb mov sahf push imul sbb nop mov xchg xchg xor mov xchg (bad) repz orl xlat add lods lret pushq xchg pop push cwtl sbb rex.WXB pushfq and adc mov add pop sbb adc (bad) mov icebp (bad) sub sub icebp cltd nop lcall mov add gs pop adc (bad) mov movslq in fucomp cwtl lret fcmovne add jne retq je divl outsb insb xchg ds rex.WRXB out jge adc or sub or (bad) js push (bad) xchg and icebp movabs popfq retq test popfq mov (bad) (bad) xor scas and mov jmpq std or sti callq cmp adc loope cwtl out jne rcl imul leaveq mov jmpq add loope or jp jae xchg mov (bad) (bad) and fsubl mov xchg rex.R leaveq mov and mov pop sbb insb ss sub pushfq loop rex.WX fndisi(8087 cmp fs jmp pop vpackssdw xchg std rex cmp scas xchg xor (bad) mov (bad) cmp jmp xchg (bad) int3 cmp shrb js popfq push retq (bad) test jle push imul ja cli or lretw adc sbb sti sbb test mov je popq repnz xchg fsubrs adc stc xchg (bad) pop loope adc (bad) lahf xchg lock std stos stos (bad) xchg or cmp fdivs gs (bad) ss enterq test add pushq pushfq xchg fistpl sbb or cld sahf (bad) add in outsl gs xchg lods jae repz mov or mov xchg or ja nop xor push jl add and hlt pushfq push addr32 lret adc es sahf pop (bad) rex.RXB cmc pop testl pushq mov jge push push (bad) xchg out pop xchg and movabs (bad) jne or sbb popfq cltd sub lock rclb xchg retq add iret cmp (bad) jrcxz sahf mov adc outsb sbb fbld movb scas mov frstor mov cmc pushq sbb outsl jl (bad) xchg test adc push mov mov xchg mov fistpl (bad) (bad) push add cli add hlt cmpsb (bad) push (bad) test jbe clc sbb jge sbb xchg jo mov jbe stos test cli xchg cwtl mov retq push mov lea movabs jl xchg jns ds xlat out insb sub sbb outsl rex.RX cmp xchg push shrl add outsl movslq xchg cwtl xchg lods cs fsubrs jg test notb (bad) push lea imull rex.WXB pushfq xchg jnp cwtl jo outsl mov jge add (bad) (bad) scas (bad) (bad) xchg movsb add sbb xchg jl cld negl xchg sahf rcrb in pushq pop imul pop (bad) xchg js addb movabs mov pushq add adc xchg xor sbb rex.WRB rex.XB rex.X out xchg fwait (bad) lods cli mull movsl xchg rex.WRX pop and fcoms cli or in adcl rcrb pop clc stos cmp mull (bad) sub outsb pop mov xchg cs jmp mov xlat out (bad) jge mov (bad) sti in xchg iret mov fmull (bad) and rclb rex.RXB scas retq xchg loop xor adcl sbb (bad) rex.WR rex.XB jmpq mov stos (bad) xchg lods xor sbb mov sbb movslq nop xchg fldenv pop xor (bad) pop or sbb jmpq (bad) rex.X test sub sahf fnstenv cmp (bad) (bad) (bad) fcoms jmpq cmpsb (bad) (bad) sbb sbb int3 out cltd cmp mov cmpsb or gs loop fild movabs (bad) insb xchg add movabs stc (bad) add (bad) pushq (bad) adc leaveq fcmovnu push xchg lock mov mov adc jg sbbb push imul (bad) xchg (bad) mov cli (bad) xchg or insl adc es jno cmp (bad) rex.WXB cmp mov (bad) cmpsb mov fidiv and mov rex.WB (bad) xor mov (bad) mov popfq mov roll mov rex.WRXB insb mov xchg xor jo test jbe imul (bad) outsl rex.X rex xchg (bad) mov in cmp xchg lret out xchg rex.XB mov repnz repz out rex.WXB (bad) retq mov pop cs in cmp (bad) sahf rex.WX test scas add retq lock mov imull (bad) and jmp sbb and ss xchg callq jne fnstcw or out mov nop jb scas sahf callq cmp fstpl loope adc xchg mov push adc retq jo adc sbb sarl mov mov sub lods data16 rorl cmpsl (bad) pop jge xchg cmp rex.RXB sbb rex.RB xchg fiadd test jge xchg add fild loope (bad) (bad) jg decb xchg cwtl negl jle pop and loop ja outsb leaveq pushfq mov cmp rex.RX ja out subb cmp mov fwait repnz (bad) pop (bad) negl in leaveq lahf (bad) mov out je pushq jo rorb pop adc pop ja lods mov (bad) mov sbb jno rex.RXB push pushfq cs (bad) (bad) (bad) sahf outsl (bad) icebp jmp push sbb and xchg (bad) imul (bad) rex.X lods jae (bad) outsl movslq sub sub (bad) pushq cmp xchg bnd (bad) mov stc pushfq xchg xor mov cs (bad) jp repz cmp movabs fwait xchg pop test movsb mov (bad) imul mov xlat icebp (bad) (bad) cmp and movabs and pop lret xchg movsl fdivrs icebp mov in push adc and jp mov pushfq push (bad) (bad) sub rex.RX xor add jle hlt (bad) and push xor rex.WR xchg scas and adc xchg jne jrcxz mov test movabs xlat in fisttp fmul (bad) movabs gs (bad) sub cmpsl fwait rex.WXB data16 loopne andl xor sbb (bad) mov push out repz stos outsl push xchg shrb es mov shll xchg cmp (bad) and mov fisubr and or data16 cli cwtl push movabs mov mov fucom push movsb jl jge insl (bad) xlat fstps xchg sub xor jg xor mov movsb xchg repnz retq imul xchg sub in cld movabs cmp test jp sbb jmp xchg mov xchg push pop (bad) gs pop or or pushq leaveq fildll pop add (bad) test mov (bad) vpackuswb mov push mov adc adcl (bad) (bad) (bad) xchg pushq pop (bad) addr32 repnz fnstenv es pushfq xchg scas test (bad) or (bad) adcb movsb cmp jmp pop lret sbb and imul sahf insb (bad) or mov pop retq (bad) push clc (bad) lret xchg std leaveq retq add cmp (bad) lods fnstcw pop jmp add movabs (bad) imul jno (bad) (bad) add push lods (bad) std sub pushfq sbb int3 push jae rex.WRXB xchg add pushfq (bad) rex.WX cwtl add test sbb pop jle popfq imul insb (bad) jle xor fcoms movabs sbb jae rcrb jno push hlt (bad) loope rex.WRX cmp addr32 xor and adc sub lea stc adc fisubr push pop and cwtl rex.RXB rex.RB nop rex.X pop test sub sahf outsl mov cwtl mov mov fnstenv cmp jg fcmovnu or mov cmp mov fwait cmc (bad) rex.B fdivrs retq xchg insb (bad) jbe xor shlb and cld mov rex.WXB fdivl mov mov mov mov mov sub xor pop (bad) int sbb mov pushfq scas xchg mov push movabs mov adc outsl jl std (bad) xchg (bad) jb (bad) mov rex.XB push xchg mov mov rcll movsb jmp mov (bad) (bad) jle fndisi(8087 scas (bad) jg lahf and sub and (bad) pop test mov jl sbb (bad) adc mov xchg pop stos jle shlb rex.B cmp mov sbb jae xchg (bad) loopne test xor iret sbb rex.WRXB xchg nop ss jrcxz mov sub clc mov (bad) addb mov in push push pop int xchg stos sbbl jg xchg sub lods hlt mov in jp (bad) mov sti jb jge stos movslq icebp xlat fs mov jle rex.R int loope (bad) lahf jp cmpsl and stos dec xchg rex.W lods mov (bad) xchg rex.WR xchg adc xchg lods stos rex.WR xchg subl std xchg adc mov sahf (bad) add data16 xor (bad) (bad) in xchg scas cmc pop and add fldl rex.WRXB (bad) rex.WB cmpsl (bad) mov (bad) stc (bad) fst rex.W rex.WXB mov push (bad) cmp xchg rcrl (bad) or and sbb (bad) iret mov loopne sub pop xchg retq (bad) xor sub cmp pop sub notl nop adc mov pushfq sti sbb insl xchg test sbb (bad) movsl (bad) loope xchg (bad) rex.RB push (bad) xchg (bad) (bad) gs fcoml nop sbb cli xchg (bad) pop insb push pushq ds xchg (bad) xchg sti mov lock data16 subl pop jbe imul push and sbb (bad) sub mov push (bad) (bad) sub xlat pushq lock rex and xor mov icebp mov rolb push adcb push rex.WRXB out adc callq jg and std fdivr xchg retq (bad) nop retq cmc xchg out movb loopne jne mov xchg push sub (bad) pushfq adc (bad) (bad) pop (bad) xchg (bad) sub ds (bad) and ss or sbb push jge (bad) je retq (bad) jrcxz and or or out loope jbe popq mov sbb sub xchg fistp imull out mov sbb mov (bad) negb (bad) outsb lock sbb mov add gs sub (bad) xchg or (bad) (bad) iret xor (bad) movl adc je divb scas xchg add fwait in mov stc fmull push and sar xchg (bad) sahf retq (bad) (bad) enterq add (bad) (bad) xchg stos jp jl sub xchg sbb (bad) xor sub and (bad) mov mov pushq jle rex.WRX cmpsl imul or or rex.W stos mov int3 xor fdivp cmpsb repnz (bad) xchg adc xor (bad) lahf test cmp (bad) (bad) xchg sub stos add fisttpl scas xchg mov leaveq cmp xchg add callq xlat scas enterq jmpq pushfq adc xchg sbb or xchg add or lock scas jne (bad) rex adc xor lock rorl mov (bad) rdpmc cwtl (bad) out out movabs rex.R add data16 rex.WRX and pop sbb data16 in pushfq in rex.WB (bad) lret or (bad) jl testl mov fist fwait (bad) insl js int3 (bad) (bad) lret es in push loope mov xchg mov repz insl pop xor out cld pop pop test mov jno push movabs popfq pop or cli stc (bad) rex loope xchg xchg in adc sub je xchg mov mov or jg push and mov fdivs (bad) cmp sahf test (bad) gs iret push rex.B fisub shll or int sbbl rex.W (bad) out (bad) sahf setge rex.R (bad) out in xlat xchg (bad) sbb and loopel outsl rcll movabs mov and or and leaveq shlb rex.WB jnp xchg enterq iret rex.X (bad) xchg and pop out xorl pop (bad) loope jns xchg imul or xchg cmp jge lods int jns mov adc mov test sbb adc movabs (bad) shll movabs add push (bad) jrcxz lock repnz or mov (bad) mov repnz and (bad) rorl (bad) movl shrb pushfq mov (bad) rex.RX jb lods popfq (bad) (bad) jae ja push add movslq and or xor cltd sahf mov cmc decl pop rex.WXB or add int3 (bad) cmpsb rex.RX movsl pop xchg (bad) rol imul and mov ficom (bad) push add rorl loope cmpsl xchg xor add loope stos mov mov rex.X divl vpsraw decb es xor adc movslq rex.WR test and (bad) push jmp add rex.RXB mov (bad) xchg push xor fimull ja rex.WRXB mov ss insb (bad) (bad) out xchg mov (bad) hlt mov sub sub sbb mov mov popfq push jbe and rex.WX adc fistl sbb fwait in cmp pop pop cmp fistp sbb iret xor pop (bad) mov and out adc (bad) mov or push sbb add gs cs callq rex.WXB mov pop movsl in add adc pop lea subb add movslq fsubr jge clc rex.RX xchg pop (bad) (bad) mov xchg es rex.WX scas (bad) cmpsl shrb stc (bad) jo jbe (bad) add fwait out mov xor xor scas sub xor or lret (bad) int3 hlt cwtl add in jmpq mov (bad) jmpq rorb mov cmp cltd popfq (bad) jge xchg pushq and mov jae mov and pop cwtl xor adc (bad) (bad) mov pushq or ficompl (bad) mov sbb cmp sti jg jno (bad) leaveq and adc mov rex.RXB rex.X xchg movabs xor ja movsl mov rorb out cmp rex.WX rex.WRB mov stos lahf loope xchg outsb imul movabs (bad) jo movsl jbe (bad) or fldl xchg (bad) xchg popfq (bad) xchg mov xchg adc movabs xchg and cmpsb (bad) mov lods movabs jmpq fwait mov icebp (bad) or repz leaveq (bad) in movsb fdivl subb and jns rex xchg in sbb imul movsb outsl add (bad) xor imul rcll movabs jmp fwait xchg stos or mov cwtl or decl xchg lods jno mov cmp xchg xlat lock iret xchg adc sahf jmpq pop add fildll sub cld lret movabs mov retq jno (bad) pushq cltd fimull cmp loop (bad) icebp (bad) movslq insl cli cmp rex.WX fadds movabs and (bad) mov push push lods (bad) sbb lods jmp movabs in (bad) adc add sbb jrcxz cmp test fwait xchg (bad) add popfq shlb (bad) push int push out imul jb adcl xchg std rex add movabs xchg jne popfq out cmp std xchg sahf cmp mov outsl in (bad) xlat xchg adc in outsb (bad) out (bad) sti jne fs pop sub xchg mov scas ds mov cmp (bad) (bad) cwtl movslq lods scas cmp nop xchg cmpsl pop fdivl in cwtl and pop hlt in clc div popfq mov nop (bad) fwait negb push movabs push rorb jmp pop xor in in (bad) lods (bad) adc xchg bnd stc rcll ds int pushfq popfq mov (bad) xchg (bad) (bad) fdivrp push cwtl or push add ds idivb movsl xchg outsl fadd rex.R push rol sbb loope add xchg movsl rex.WXB and (bad) xchg mov cld movsb (bad) jmpq shrl cmp (bad) out popfq and insb (bad) jae (bad) jne test xorl mov jle (bad) (bad) (bad) hlt neg xchg rex.WX retq (bad) sbb add (bad) (bad) fsts sub xchg rex.WR int3 rex.RB sub mov (bad) jae loop push (bad) adc and movabs cmp rex.WRB add ss pushfq (bad) sti mov mov and cwtl xchg lret xchg out iret movsb pushfq xor retq loop xchg (bad) mov mov (bad) pushq repz sahf lret mov ja outsl mov and push sub mov and pushfq or stos cmpsb imul xchg mov je xchg shl mov js jae movntq mov mov ficoml jae in and xchg add fdiv rex.RX sets (bad) mov pop rex.X mov cmp jge pop loope xchg loop mov jbe (bad) push rex.WB pushq out push xchg xchg jl (bad) rex.WXB jle sub mov (bad) (bad) rex.R fsubrs movabs pop repnz orb rclb cmp fldcw and retq add int lods (bad) in mov and lods lea xor insb cmp add repz pop nop xchg decb mov xchg sub retq (bad) je (bad) (bad) mov rex.WB xor jo sub and xchg hlt (bad) (bad) (bad) (bad) push sbb mov rex.WRX (bad) fsubs mov xor in jl imul xchg stos (bad) cmp pop lea adc add test xchg (bad) sbb xlat sahf int3 add std shll (bad) (bad) adc and push jge in movabs mov std mov pop xchg mov or sbb pop retq or ds jg and std cmp rex adc mov cmpsb (bad) out ss (bad) xor sbb cwtl imul pushq loop ljmp xchg imul div adc pop and addr32 sub jmpq rex.RXB iret (bad) outsl ja jnp and sbb sbb adc (bad) pop jle fwait (bad) sahf rex.WR pushfq (bad) sbb jno sub pop jae loop pop cltd rex.WRX rcll cmp xor mov (bad) xchg callq jge cld (bad) jb mov lahf xlat (bad) pop or adc mov ja cmpsb ds (bad) mov and cmp in xor xorl movabs pop hlt xchg and outsl xor xor fistl and cmpsl popfq sbb rex.WRXB repnz and loopne jb sahf push testl (bad) lods rex.W data16 cs movabs lret sbb in lea ficompl xor rex.WRXB mov cltd (bad) retq jnp pushfq subl xchg add rex.RXB cli lock sbb pushq mov sub rol (bad) sahf es push pushfq cmpsl leaveq rex.XB push xor jg jb or push xchg mov pop and movabs adc pushfq rex.XB cld xchg (bad) (bad) mov out push rex.WRXB addr32 pop jmp mov jp rclb pushq and repz (bad) stos xchg xchg mov xchg movabs mov rex.B jne,pn xchg imul es jo push je or xchg pop outsb rex xchg callq cmpsl jae xchg pop adc cmp xchg cltd xchg mov fwait cwtl (bad) rex.WRB (bad) add xor enterq mov xor mov xchg cmp rcr push (bad) jbe sti xchg pushq retq add (bad) fsts add xlat lcall rex.XB iret push push add add fmuls (bad) rex gs add jne stc xchg cmpl int and xchg pushq (bad) in and xchg repnz (bad) idivb xor clc stc sti cld mov out loop adc cmp jno lods xchg data16 xor fldl xchg jge sbbb mov callq jne sahf jrcxz xchg or mov (bad) bnd cmpsl sub rex.XB lret rex.WRB fwait push movslq xchg adc orb (bad) (bad) movabs enterq mov cmpsl jno sub lods sahf cwtl push cmp xor (bad) sbb mov and (bad) add jge mov xchg addr32 push notl pushfq jmpq rex.R add jle and xchg mov mov xchg test ja out out mov push fcoms mov cld bswap rex sbb (bad) mov jl cwtl stos xor sbb movsb out mov (bad) adc leaveq pop cwtl enterq icebp movsb (bad) jp out pushfq rex.WRB in add ja (bad) xchg (bad) movslq pop (bad) vandps nop jns outsb rcl jge rex.XB xchg mov and rex.X push pushq pushfq (bad) jnp jmpq add xor out add rclb subl (bad) rex.WXB fwait rclb sbb pop stos add cmpsl rcll (bad) fcmovne mov xchg movsl cmp mov lret (bad) xchg (bad) out mov mov mov sbb xor cmc rex.XB rex.W sbb repnz (bad) xchg xchg fidivrl sbbb rex.RX add xchg scas cli movsl rcrb mov mov js loope outsb or fdivs (bad) mov mov (bad) mov and in addr32 mov mov fsubp add test push rex.RXB not (bad) xchg (bad) push sub fild rex.WB rex.WR addr32 jle xchg rex.WX cmp out jne std retq jns push pop repnz xlat (bad) adc xchg lock out sub lea push add or (bad) sbbl lods popfq and rex.RX repnz movabs adc or (bad) pop jp sub subl outsl add mov (bad) in xchg rex.X test test push ss stos lahf cmp xor mov loope add rex.WRB clc cld xchg rex.WRXB ja int lahf out sub adc cs pushfq sub rex.WR xchg lret (bad) sbb adc mov sar in movabs (bad) loope std cwtl pop insb (bad) mov out sahf push push clc lea add mov pop mov xchg add (bad) rex.WR and rex.RXB loop xchg xchg std int3 jp cmp repnz outsl cmp sahf loopne callq stc mov (bad) ss mov mov push fldl int3 movabs cwtl icebp push adc xlat xor imul callq jae xchg mov pop cld repz sbb mov retq rex.WR mov loopne iret mov xchg mov and inc xchg xlat iret mov rcll xchg adc cmp xchg push mov xchg push idivb addr32 mov mov cli pushq popfq loope fldl imul cmp pop insb lods shrl mov not jne pop fwait mov (bad) xchg vsqrtpd fnstsw (bad) jnp jbe mov jne (bad) adcl lret sbb xorb (bad) out cmp sbb out scas out in rcrl ja or adc icebp push (bad) lock cmp xchg or notl test jp add sub pushq cmpsb jns xchg sbb pushq (bad) jns mov (bad) sub (bad) (bad) lahf adc adc pop mov out out (bad) clc rex.R cmp (bad) xor lahf pop jae nop mov cmp mov sahf pop stc and push (bad) fsubr lahf pop sbb cmp (bad) and mov sbb fwait rex.X (bad) fisub mov (bad) (bad) mov fucomp (bad) gs test lods xchg nop adc rex scas ja (bad) sahf add cmp push sbb ja callq sub fmull rcrb push cwtl (bad) (bad) (bad) mov mov fimull and lea (bad) lods loope or (bad) mov (bad) ds repz stc and cmpsl mov (bad) stos pushfq jrcxz (bad) add and jmp repnz (bad) cmpsb (bad) (bad) (bad) subl lea sarl push (bad) xor out scas pop test jo (bad) add jb fimull xchg pmullw std or mov xchg rex pop xor push jae mov xchg lea xchg add sbbl xor sbb (bad) rex.WXB or retq movabs imul movsb adc jge sub lock jrcxz scas (bad) mov lods out jmpq cmp test rex.RX (bad) xchg adc fwait lcall add cmp stc stos data16 jnp shr xchg rex.WXB in test mov (bad) mov or fdivrl cld xadd adc (bad) lahf xchg mov add xchg callq (bad) (bad) (bad) fistpl (bad) sub mov popfq xor jb adc (bad) pop out movabs adc add jbe and lahf adc sbbl (bad) iret (bad) loopne (bad) xor movsl (bad) movsl (bad) std add push lods std sti in sub retq (bad) test xor (bad) rex.WR pushfq (bad) clc or loop xchg sbb rol stos rex.WXB rex.XB fwait cmp jno addr32 xlat jae sub (bad) xchg cmp mov sub in data16 (bad) rex.WRXB (bad) sbb rex.X stos xchg cmc xchg (bad) pop sbb (bad) rex or rex.RX xchg add shll data16 or add rex.WX fwait xchg ja loope sbb mov cmpsl xchg jrcxz mov nop (bad) movabs cwtl (bad) ja js cmpsl (bad) and push xor clc rex.WB scas mov rex push movabs out rorl rex.WB pushq fnstsw movabs (bad) insl icebp xchg fidiv xlat imul sbb jrcxz ds scas pop add sub cli adc jp (bad) test (bad) imul fimul icebp (bad) testl movsb or (bad) es cmp pop sarb pop (bad) jmpq rex.R cmp jns jbe sub movntq out (bad) cmc ficomp rol pop jnp push ja xchg (bad) and sbb xchg out fstl in rol rex.WXB cmpsl cmp (bad) or (bad) (bad) rex.RXB rex.X jne fstps stos (bad) mov movslq xchg or (bad) loop (bad) adc sub sti adc leaveq push ficompl mov leaveq (bad) js (bad) xchg packsswb fwait in add xchg mov sub pop xchg adc int xor pop leaveq xchg xchg mov push and icebp mov ljmp retq jb xchg popfq rex.WRB (bad) test (bad) (bad) jge (bad) xor andb and rex.R xor enterq movsb xchg lea mov adc xor pushq movabs adc pushq movabs jae xchg stc pop mov add sbb or cmp jmp jg pushfq (bad) sbb pushfq xchg sub pop jp fistpll add popfq (bad) cwtl pop (bad) fs lods cmp in cli out (bad) pop test shll (bad) and loopne mov add out outsl cmp gs (bad) rcr mov (bad) cmp (bad) xor (bad) jbe (bad) (bad) iret movabs callq sahf fwait icebp mov xchg pushfq xchg pop fcoml mov (bad) sbb fwait xchg or rex.W cmpl rex.R jrcxz jl movabs rex.WRX fldl (bad) fsub test (bad) rex.RX xor sub mov sahf xor out xchg movabs jne pop insl sub fmuls xchg add push and stos movsl add pushfq rex.WRB pop fs adc (bad) push (bad) cwtl rex.X retq jl and ja mov (bad) fimul stc rcrl pushq mov (bad) loop (bad) xchg in adc sbb scas es mov push fldt adc lods sub and (bad) fidivl cli pushq (bad) movsl mov add (bad) cmpsl stos insl fisttpl lock (bad) mov mov jns mov repnz (bad) movabs fistl (bad) nop or cmp mov jmpq lret sub xchg mov mov (bad) ss rcl lea scas cmp push orl jo add (bad) (bad) test jno rex.RX sub movabs xchg (bad) jl clc shrb xchg rex.R add mov sub retq jge xchg xchg hlt fwait (bad) popfq push scas xchg out (bad) fnstsw or loop (bad) (bad) test rex.B adc and rex.RXB cmp push sbb rex.RB mov xchg mov pop loope jrcxz fidivrl sarb testl rex.WB in cmp sahf test adc (bad) movabs ja sub pop (bad) enterq add incb jne add add (bad) mov (bad) enterq callq lea rcr mov (bad) mov pop mov rex.WR lahf sub rex roll rex.WRXB mov retq cmpsl push xchg lock xchg fidivrl idiv (bad) sti cwtl ficom pop outsl jle push xchg imul sahf xor movsb push jge mov xchg gs jns scas jo (bad) xchg xor (bad) or fcoms cwtl icebp out jns push xchg (bad) jl jb and pop xor jmpq mov xchg out (bad) (bad) cld test insb xor (bad) xchg in cmp push movslq xchg pushq adc movabs mov adc mov mul mov pushfq (bad) rol mov movabs cltd (bad) xchg fbstp and jae xchg jl pop add sub xchg mov fisubr rclb je in sbb sub mov jne adc add jne pop add rex.WR pushq pop xchg cltd (bad) rcl pop mov rex.W lea movabs mov mov rex.W xchg pop outsl pushq sbbb push movabs lret movsb (bad) adc adc mov movabs and adc cli lock push pop out loope xchg addr32 int jge sbb imul std rex.W icebp mov rolb in cmp sbb retq adc rex.WRX (bad) rex.WRB nop sbb or cwtl add movslq sti jg sub xchg jge (bad) or rex.RXB rex.WRXB sbb mov jge (bad) push test and lret lock mov clc lret mov pop int out lret mov add insl movsb jno jg jle rex.WRB and sti (bad) stos mov loope std jno iret mov gs leaveq jle (bad) lock (bad) std in xlat cwtl pop mov xchg rex.X sub mov mov adc jns xchg rex.WRX data16 and or sbb cltd mov jbe in jle xchg subl repz mov (bad) out rcrb scas (bad) mov movsl imul pop rex.WRX sbb push sahf cs (bad) lea rex.WB pop lods (bad) (bad) mov and negb push xor int sti jle addr32 fcomip pushfq adc (bad) (bad) (bad) xchg ja (bad) rex.R rex.WR mov xor xchg mov adc stc je test and (bad) idivl lods rcll xchg sub lret rex.WXB adc jg mov movabs rex.WXB rex.X xlat (bad) imul cmc movabs scas bts vpmulhw in pop imull (bad) sub outsb fnsave jne xchg ds (bad) xor xchg sbbb mov xchg movabs and pop sahf jmpq sbb (bad) adc es jrcxz rex.X jo add mov stos stos cmp add (bad) and lods jg int3 mov repz movabs fchs mov and (bad) jnp add ss imul in gs mov (bad) push rex.B insl jno (bad) (bad) rclb xchg sub mov pop push mov cmp cs test jl cltd fcmovu xchg (bad) jns sub js or xchg pop sub (bad) (bad) mov lock loopne jb out fsubrp (bad) mov sbb std hlt (bad) in pushfq cmp (bad) out mov lods cmp cwtl (bad) (bad) rex.B rex.WR push jb pop fsubr xchg xchg mov outsl and mov movabs mov xor rex.B xchg insl or jmp movabs je jbe lea leaveq (bad) (bad) (bad) or icebp mov xchg xchg xchg rex.WX retq (bad) pop (bad) insb pop mov (bad) or (bad) loope movabs xchg rex.X and adc jbe callq xchg jo rex.RX mov (bad) mov (bad) insb cmp mov mov xchg jl rex.RX rex.WXB retq popfq rex.RB cmc cld rex.RXB (bad) (bad) mov (bad) (bad) adc fldenv jrcxz cwtl xor (bad) jno xor cmpsl (bad) popfq xor andb xor loope and es ja pop data16 push in sbbl cmp xor xor (bad) jge sti pushq pop and in and movabs mov imul sti jle mov loope xchg sbb mov movsb add xor adc (bad) jae loope js sbb mov (bad) jrcxz movabs lret loope rcrb popfq shll test sub xchg loope mov std sahf (bad) (bad) leaveq icebp mov mov gs movslq rex.WRB lea in movabs imul push retq movsb rex.RB mov movsb out pop jmp outsb mov (bad) xchg xlat xchg push movsl rex.WXB mov fstps cmp xchg (bad) (bad) xchg cmpsb (bad) out xlat (bad) fld jae fdivp and (bad) mull addl xor out (bad) (bad) (bad) (bad) jge push (bad) scas rcll nop cmp (bad) (bad) (bad) adc (bad) rex.WR add out jg pop cli cmc rol or rex.WRX (bad) shll pop pop movabs loop and (bad) (bad) sti movsb push jl popfq loop rcr jge jae or xor or xor rex.WRX xchg or scas scas pushq pop lea xor (bad) rex.X xchg mov (bad) (bad) (bad) mov (bad) or ja (bad) add xor (bad) xlat fwait cltd mov mov fstl cmpsl push jg push mov sub and adc mov movabs mov mov (bad) sbb leaveq lret retq in ja pushq mov or (bad) xor ss mov adc (bad) ds xor pop xchg scas rex.X test and rex.RXB adc jg sbbl pop loop (bad) pushq sbb and mov rex.B lahf imul movabs cmp (bad) fidivl sbb cltd movabs push rex.RXB (bad) movsl mov add jmpq mov pop (bad) (bad) and retq popfq nop sbb xchg icebp pop jne jb enterq add test mov cmp cli add test fcomps lret popq push xchg loopne rex.R retq mov rorl add sbb lgs adc jmp xor fs (bad) (bad) ja pushq (bad) jo stos mov or mov pop test pop push push mov popfq jmp jmpq (bad) jg or mov sahf es push std or jne setnp cmp cmp icebp enterq pushfq je pop stos cmp rex.WRXB (bad) imul sbb (bad) xchg lret rex.WXB mov mov je out push lods roll js and callq rex.RX (bad) cli out je sub push xchg xorl cld sbb repz (bad) jbe (bad) rex.XB or push (bad) test (bad) ja test (bad) mov outsb insb (bad) sahf insb cs repnz mov or cwtl (bad) cmp (bad) out faddl int3 xchg fnstenv callq adc (bad) (bad) jle outsl outsb xor xlat pushq (bad) (bad) mov hlt stos (bad) (bad) fsubl cltd std push out or mov and mov (bad) cmpsl idivl push mov jmp mov lods (bad) cmp xchg (bad) xor (bad) pop mov gs loop mov rex.RB insl movabs retq mov ja pop jae and adc sub rex addb (bad) rex.WB scas movslq gs mov retq xchg adc pop (bad) iret movabs movabs (bad) lret retq icebp stc cwtl xchg test mov (bad) fisttpl xchg repnz lock jge mov sbb and (bad) fldcw xor stc sti imull cmp movsb pop jnp push mov add pop (bad) xchg mov lea movabs lods movabs hlt rex.RB xchg icebp jo mov (bad) mov fisub out xchg adc (bad) jbe iret mov jmp (bad) or cmpsl mov scas push data16 leaveq sbb in test push rcrl mov stos pop rex.WXB cmc mov jns mov pop sub rex.WRX rex.R movsl sub push jb jne xchg pop mov adc xlat push cmp mov xchg subb (bad) add fisttp cld retq rex.WRXB es mov or (bad) (bad) mov not cmpsb rex.WRXB pushq lods imul jmp (bad) pop ja xchg and sbb (bad) lods push cwtl jnp rex.XB pop rex.RXB xlat cld xchg gs lock (bad) (bad) (bad) mov jmp shlb and xlat (bad) sbbl mov stc movsb xchg sbb out sub (bad) xor xchg (bad) sub fscale mov mov cmp xchg cmp fidivrl mov or jb mov rex.WX pop lods sti out outsb rex.WB jge movsb push fdivl mov out jp test jbe rex (bad) jae push xchg shlb test lahf insb fisub mov (bad) cmpsl cwtl sarl adc and stos movabs pushfq test sahf callq mov mov cmpsl movabs sbb data16 or mov rex.W xlat movabs cmp (bad) movabs push xchg cmpb pcmpgtw fiadd movabs loopne xchg lret (bad) xchg in and sub sub and (bad) fadd xchg movabs xorb outsl (bad) rcl jo xor xchg and or jns testb cmp xchg sub xchg sub jne movslq (bad) or xchg (bad) (bad) and xchg rex.W rex.WR rex.B xchg negb mov addl jl int3 sbb pop cwtl pushfq sbb and jle (bad) outsl lock (bad) stos (bad) mov xchg add xor or mov mov jae rex.RXB cld imul xchg test leaveq (bad) sahf enterq xchg mov loopne pop cwtl (bad) popfq js cmp xlat out sahf lods jne nop shrb data16 mov cmp in adc movsb stc test ja fwait (bad) cmp sahf (bad) frstor rcll jbe int3 movabs mov push cwtl jne stos (bad) rex.WXB xchg data16 rex.B test xchg mov shll insb rex.WRXB lret mov gs (bad) xchg (bad) rex.XB xchg pop push nop (bad) sub sbb (bad) push add push lret iret (bad) sbb lock xchg pop (bad) mov movsb or push cwtl movabs jae cmpsb or xchg push cld out cli stos es cmp jno adc push int mov rex.WRB sbbl (bad) sub fsubrl cmpsb pushfq cli jbe out or in push nop sbb movabs insl (bad) (bad) imul mov es fdivrs js lret xchg pushfq leaveq outsb add divl rex.WX jnp (bad) roll and movsb or cmp vcomiss rex.WRB lods mov (bad) mov adc test insl nop in es movsl rcr or imul movsl fs loopne (bad) cltd mov sub or (bad) xchg rex.X (bad) addr32 or (bad) xchg (bad) xor movsb sbb xchg mov imul int cli orl mov mov pop adc xor (bad) nop adc out cli push (bad) sub (bad) je pushq or (bad) add push add adc inc (bad) and sti (bad) movabs nop sbb jo lret xchg adc je xchg xchg sbb sub and or (bad) jmp add popfq or rex.WRX outsl sub movslq loop ficom fdivl popfq xchg cmpsb cwtl (bad) mov rex.RXB mov (bad) not add shrb movabs mov pushq (bad) (bad) or mov mov push mov (bad) loopne std adc imul pop (bad) and xor pop (bad) lock movabs cmp mov and scas sahf mov je outsb fdiv or fs in mov stos in fnop cmp sete sbb cli cmp push incl mov jge ficomp xchg xor mov (bad) pop shll rex.WR jo (bad) (bad) in rex.WRX mov jo stc add out (bad) jbe (bad) rex.WXB stc and add lods sbb xor out rex.WB sti cmp or push rex push fadds xchg (bad) cmpl lea iret mov xchg (bad) test cmpxchg pop add mov imul (bad) (bad) pop lea in fistpll push mov (bad) mov fnstcw (bad) pushq movabs xchg outsl (bad) pushfq xchg rorb jnp shll retq callq (bad) lea xor mov sbb sbb setae jl movabs (bad) int cmp fs test stos movabs xor sub xchg (bad) movslq or (bad) xchg (bad) rex.R rex.WRB fiaddl stos push out push mov (bad) (bad) rex.WX icebp sub mov (bad) mov mov and adc imul sbb (bad) jo pop (bad) fbld imul mov cmpl mov xchg jg mov fcmovbe and push cs rex.WXB imul rex.RB adc push (bad) mov jno (bad) pop rcl or xlat addr32 sbb rex.XB int3 cmpsb ds or push (bad) outsl sub loope (bad) or cmp pushfq sub sbb xchg (bad) (bad) (bad) pop (bad) sbb addb sub imulb (bad) lahf or (bad) xchg pop sahf shl imul rex.WRXB rex.W icebp mov ficoml (bad) lret (bad) jp rex.XB jnp (bad) sbb mov pop (bad) mov mov rex.WRX pop int mov pop (bad) fs addr32 sbb sub mov sahf es xor js test nop xchg add pop mov (bad) jmp in cli loopne pop rex.RXB rex.WRX rex.RB imul add out rex.B repnz cmp test gs enterq xlat xchg mov nop sbb add mov xchg rex.WR loope and and mov (bad) xchg (bad) cld (bad) gs cmc stos xchg (bad) cmpsb or xchg callq cmp (bad) xchg fwait (bad) pop fisttp xor xchg je in (bad) rex.XB out out sti std xor in xchg popfq cs adc fwait sarb rex.XB xchg cmp sub push scas xchg sahf lret stos rex.WR sahf jae sbb jp jne xchg rex.XB rex.RX ja movsb loop and shr stc adc rex.WB add movslq push (bad) fldl mov lahf mov (bad) xchg retq mov lock xchg test and xchg jmpq (bad) in xchg rex.WRX hlt pop jrcxz xchg sar scas and ds and add (bad) jne xchg sub push push xor (bad) xchg sub cmp (bad) out xchg jl cmp rex.WRB (bad) mov mov mov xchg in andl xchg (bad) mov xchg jmpq (bad) xor rolb (bad) pop cli xchg fdivrs iret in pop (bad) sub cmpsb jle mov (bad) xchg xchg rex.WRX add in sbb xorq xchg (bad) add (bad) mov cs jbe cwtl sub and es add push add pop cmp popfq xchg push ss rex.XB out ds sahf roll push in jb xchg xchg sbb test mov rcll fisubr sub sbb cmp pop mov in sbbb mov in outsl xlat popfq xchg retq outsb sbb pushfq (bad) js sbb ja fcoml out and (bad) or push mov cli scas (bad) pop lahf xchg (bad) mov (bad) push sub xor (bad) (bad) lods pop adc xor xchg rex.R int3 push cmp xchg (bad) (bad) xor lea or loopne fs xchg mov (bad) nop xchg pop xchg pushfq scas retq mov negb outsl or jge cmp xchg enterq push cmp je pushq fldt cmp cmp xchg mov (bad) mov lahf (bad) out xchg push adc popfq pop push or pushfq (bad) movsb leaveq (bad) in ja sub xchg rex.WR clc xchg xchg mov adc stos jg sti or mov xchg pop mov xor pushq xchg int3 mov rcrl popfq and xchg out in rex.WR jns movslq xchg jne pop imul wbinvd gs ss xchg pushfq push clc push mov movsb test xchg rex.WRX mov pushfq subb out xchg mov mov sub sbb mov outsl adc rex.RXB movsb adc pushq xlat ror nop rex.WRX xchg pop cwtl insl xcrypt-cfb cmpsl fs xchg mov (bad) push rex.WRXB fsubs (bad) in retq pop fimull rex.RXB xor callq data16 lret cmpsl (bad) (bad) lods rex.XB add movabs mov fstl stc xor xchg outsl mov cmp je cmp retq mov stos rcll pushfq adc push jmp scas rex.WRXB loopne xchg xor mov sub movabs outsb test movslq xchg push je cmpsl std lret (bad) insb jmp sub sbb (bad) mov jl rex.RXB xchg jg (bad) add rex.WRXB std imul sbb rex.WXB movabs xor (bad) (bad) retq add add sbb retq lcall rex.WRXB cld outsl (bad) movslq scas xchg jno addr32 rex.XB mov movabs cmp sahf scas repz (bad) fucomp cltd rex.R xchg mov test (bad) mov sbbl pop jb and (bad) sbb jno (bad) jrcxz (bad) fistp xor rcrb cltd xchg test xchg (bad) std adc in jle xchg and sbb jg clc (bad) xchg cmpsb adc xchg jno lahf outsb (bad) nop cltd out popfq cmc or imul (bad) (bad) (bad) (bad) in rcll sbb ds push sahf (bad) xchg repnz sbb (bad) (bad) rex.RXB popfq xchg lret or (bad) (bad) adc (bad) sbb xchg jnp (bad) repz and cwtl push icebp xor sbb rcll jg mov cmpsl scas fnstcw and xchg adc (bad) fcoms sub (bad) decl insb xchg std jmp movabs (bad) outsb or cmp push mov xchg cmp fs cmc int xchg cmp jnp fdivrl and fsts rex.R out callq jp sbb mov pop lret ja pop jae xchg (bad) (bad) (bad) rex.B cltd sahf out fcoml shrb jne,pt mov ja or fcomps mov fsubrl fistpll cmp mov inc xchg mov jnp outsl movsl mov fwait test (bad) cmp rex.RXB out (bad) cmp movabs imul (bad) rex.WXB jae or adc clc jae xchg addr32 mov mov sub fs xor and xchg lea adc xchg add (bad) jo rex.X add fnop pop xchg (bad) outsb movabs add icebp xchg movsl sbb ja jbe imull movsb insl cmpsl mov addr32 xchg lods push repz (bad) rex rex.XB xchg mov popfq lods (bad) pushq rex.WX fucomip and insb xchg cmp xchg lock sub xchg push rex.B es (bad) pop jge pushq (bad) mov mov fstl in negl pushq (bad) loopne pushq movslq cmpsl mov lret jrcxz retq pop (bad) mov (bad) cmc and xchg or cmp (bad) lahf (bad) lods gs outsb xchg xchg and sub (bad) sbb jns pop xor retq imul sub rex.XB rex.WX in int sti std nop imul (bad) fildl mov mov (bad) xchg int lahf or xchg add or sub xchg sub repnz (bad) sub mov (bad) in (bad) movsl rolb add mov (bad) cli mov xor push ss (bad) (bad) xchg jae adc sbb ds retq sub sub sahf jb outsb (bad) sahf nop pop pushq pushq movsb pop ds cwtl rex.X xor sbb xchg neg pushq nop and (bad) (bad) cltd js rcrb xlat loope iret add mov mov pop pop in and jrcxz lock rclb jrcxz (bad) fsts jge xchg (bad) leaveq or mov or (bad) (bad) rex.RB (bad) rex.WXB loope xor (bad) adc jne xor (bad) (bad) (bad) (bad) (bad) lods data16 (bad) or movsb mov add sub sbb out outsl (bad) retq (bad) (bad) pushq popfq mov test addr32 cmpsl sub test sbb leaveq (bad) rex.RB (bad) adc xchg pop (bad) in and out (bad) and pop jns pop (bad) pushq sub jne idivb in mov fsubl scas retq lock or add scas mov jle mov or xchg (bad) in jg js int xchg rex.R or or xchg mov repnz rex.WXB rex.WX push sahf loope (bad) rorl pushfq cmp push rex.RXB rex.WR test mov adc xchg jge imul rcll xchg (bad) mov pop rex.RB or add mov xorl push fwait (bad) (bad) movabs mov or mov rex.W rcrb (bad) pop xchg fimull mov rex.WX pop leaveq je (bad) add mov xchg out pushfq test (bad) outsl xchg (bad) jne leaveq mov popfq mov (bad) xchg rex xchg cmpsl adc xlat cld ds movslq jmpq sbb mov xchg in mov mov addl adc callq mov cltd rex.RX cmpsb lods xchg jg and (bad) adc gs cmp sbb adc ficompl jns (bad) movabs xchg (bad) xchg rex.RX and adc (bad) (bad) movabs out mov rex.B addr32 mov (bad) mov stos test xor (bad) int3 fdivs xchg sbb xchg callq add xchg cmpsl data16 mov adcl mov mov ja fstl sbb rex.RXB sub sahf stos ja stc sub cmpsl adc cli or xchg pop (bad) cmp (bad) fildl pop (bad) fdivs add cli (bad) jae jp jmp (bad) or cmp xor fwait mov out (bad) mov rex.WRX movabs cld pop cs push xchg idiv hlt movabs (bad) xchg idivb xchg (bad) jne mov xor jg ss fsubp test (bad) (bad) push xor push cmpsl movsb (bad) fwait shl mov sub jmp (bad) (bad) adc lock rex.WRX test sbb (bad) mov callq sub in (bad) push imul or (bad) notl cmpsb fildll loope xchg add (bad) adc out fidivl in xchg cmc int or test mov fidiv or movabs rcll stos enterq adcl in xor mov repz out rcr (bad) mov movabs loopne loop and movslq xchg sbb repnz adc xchg mov sub shlb sahf cs pop or rex.WRXB fisubr xor cmpsl mov mov xchg mov stos fild push pushq lods pushq in add data16 movsl pop push cli mul adc mov (bad) outsb xchg pop push icebp mov gs out cwtl sbb xchg (bad) pop addr32 xor and rex.WRX (bad) (bad) sbb push (bad) cmp xlat out rex.WRB lock (bad) retq xchg (bad) rex.RXB andl (bad) nop or rex.XB xchg pop mov xchg xchg fisttpl pushq mov pop push stc pushfq rex.X sbb cmpsl bswap sbb fistp addr32 imul (bad) mov lods sub sub pushfq pop rcl push mov xchg push movslq add adc mov xchg rex.RX rex xor outsb popfq mov (bad) jbe out jbe roll jg fwait mov scas xorl movsl add mov sub sub iret imul icebp cs stos (bad) push and add (bad) rex.WRXB (bad) rex.RX cmp pop (bad) out (bad) pop stos adc cmp jbe scas adc movabs pop adc jae xchg es jg rex.WB push (bad) jo pop sti sub xchg rcl xchg mov in xor (bad) (bad) mov mov leaveq and or (bad) mov mov pop (bad) pushq and push adc lret cltd pop (bad) mov insl xlat repnz fs rex.X outsl mov adc lea sahf (bad) divl pop pushfq pushq ds xchg popfq retq mov xchg rex.W es mov loopne mov (bad) je scas xor out jo mov rex (bad) rex.WX (bad) addr32 in xor sbb or addr32 movabs sbb or jo (bad) out (bad) out xor iret jne or add mov lahf jbe sub xchg out testb sahf jle int (bad) jnp insl jae iret sub jo sbb push out cltd lock pushq and and out xchg (bad) (bad) rex.X mov (bad) or (bad) fcompl insb movsl push movsb add mov xchg add cltd pop add insl lcall xor mov jmp loope xchg jno mov rex.WXB rex.RXB rex in add faddl cltd stos xor (bad) shrb outsb xchg lods xchg mov jb (bad) jo (bad) xchg xor push xchg out or (bad) scas movabs sub sub lcall jle rex.RXB jge pushq fbld faddp pop test cmc xchg rex.W sbb xor cmc js cmpsb (bad) jmp movabs rex.RX xlat movslq sub pop loopne xchg leaveq fwait xor (bad) test lahf mov (bad) imul (bad) gs (bad) cmpsl adc stos sti (bad) mov js test mov callq cmp (bad) and (bad) jl xor loope sbb adc push rex.WR (bad) rex.WXB cmp jno adc es movabs retq or push out mov or rex.W cmp xor ficomp cmp std rex.WXB xchg rex.RX mov mov cwtl mov in (bad) xchg sbb fwait (bad) xchg (bad) fmuls rex.X lods adc lea cmpsb (bad) mov (bad) int sub pushq lret and jrcxz fiadd imul jle lods out cltd pushq push mov mov mov or fs xchg out movabs loopne adc xor insb (bad) (bad) fdivrl (bad) xchg int3 scas adc movsb fcomip xchg lahf sub cmp rex.RXB xchg test insb (bad) jne add out flds rex.WXB mov rex.WRX sbb xor mov cmpl xchg popfq adc xchg mov add sub sbb test mov xchg pop xchg mov add (bad) xchg xchg rex.X jo movabs xchg add pop movabs rex.W not and fs test cli movabs push lret iret xchg push adc sub pop rex (bad) repnz mov and ja popfq in outsl in xchg xchg pop and movabs (bad) test xlat retq pushq mov test ja ss pushq or cltd mov mov rex.R cmpsl outsl pop cs cwtl pop negl mov popfq pop mov repz xlat pop pop (bad) movabs xchg mov or rclb mov (bad) mov sub (bad) out notl je rex.RB mov popfq rex.X scas fs (bad) xlat cmpsb mov retq jl jb sub imul out (bad) rorb jmpq fs jp sbb jg jns js jmp xchg sbb stos push adc xchg scas test int3 pop (bad) out movabs and addr32 pushfq in ja xchg mov imul xchg rorl jg add xchg (bad) (bad) test jge sbbl rex.XB (bad) mov cli cmp fistl (bad) sub mov sub mov adcl gs pop or xor xchg rex.R movaps xchg lret sti or mov out push add pushq xchg stc movsb (bad) jmpq shrb cmp jae (bad) test cwtl xchg mov enterq out xchg xlat ja pop sub rolb stos and rex.X xor (bad) lods out pop cli (bad) sub xor fidivr add sbb jae (bad) stos (bad) mov push (bad) (bad) sub movslq xchg mov mov adc loop cmp retq sbb (bad) (bad) (bad) and (bad) fs lret jmpq stos mov sbb xchg scas movsb mov push sub ja pop rorl sub and ficom in cmpsl (bad) int xchg fs movabs rex.R xchg sahf test ds cs (bad) (bad) mul jne ficoml sub (bad) imull (bad) pushfq cmp fs pop xchg sub jbe cld cmp mov (bad) and pop (bad) sti flds jns xchg scas sbb lret clc push sub mov pop lods adc mov mov mov cmp pop jmpq fcmovbe mov (bad) ja jg stos callq push retq sbb sub push sbbl lods mov (bad) cli or (bad) sti sub leaveq rex.WXB (bad) sbb mov sub cmp xor std xchg enterq rorb (bad) mov and jne jle jne (bad) callq mov addl xchg (bad) (bad) callq mov and cli and je cmp addr32 hlt rex.WRXB jae or or add mov outsl (bad) and jbe gs test pushq lea sti xor jg out ds sub lods jl mov sub or ja xchg sbb mov mov cmpsl push cmp jmp adc mov sub fdivrl ss (bad) je std insb (bad) test loop cwtl xchg nop adc (bad) loopne jnp (bad) xlat jmp mull nop jmp pop pushq add andl and (bad) xor rex.X loop sub xor sbb out (bad) (bad) mov btc cmp cltd pushfq or data16 xchg adcl (bad) rex.WX mov cltd int3 gs loope lea sbb (bad) (bad) outsl pop rex.WXB cmpsl rex.X lcall jb mov push pushq (bad) movslq (bad) outsl jbe mov retq fdivs (bad) (bad) (bad) xchg pop jmpq xchg adc movslq xchg clc mov jl xchg cmc mov icebp (bad) test (bad) cmp out clc xchg xchg adc fsubs add es xchg sbb lret xor (bad) mov and xchg hlt sbb and (bad) (bad) in xchg movabs mov sahf pushfq sahf outsl xlat loop test or mov ja (bad) lock pushfq imul fs xor mov (bad) xchg int fmuls sahf xchg rcll ficoml mov pop in cmpsl jo lock test adc jbe or sti xchg in insl int (bad) xchg xchg roll out imul movsb stos sbb add jb xchg (bad) xlat sub xchg leaveq cmp xchg sahf push fsts xchg fiadd subl rex.XB (bad) (bad) jge mov mov adcl mov in sub cmp (bad) sbb int3 enterq xchg movabs or or and stos push ds data16 in fs cmp lahf lret jbe scas test movabs xor and retq loop rex.XB jge pop (bad) cmp push mov adc nop fs imul lret outsl movabs retq lock jg or mov repz add (bad) (bad) sbb push push xchg sub lea jg mov (bad) add sub adc (bad) cs je (bad) or roll lret jb mov rex.WX in out (bad) seto (bad) push adc sbb jbe loope add push or movsb outsb or cmp (bad) (bad) test or (bad) sub xchg adc ds pmaxub sub clc mov movslq cmc jns xlat add in (bad) (bad) pop or sbb or jae outsl mov xchg movabs mov xchg xchg lret stos mov (bad) leaveq cmpsl imul pop mov sbb jrcxz and out push (bad) mov mov sahf rex.WB rex.W mov fldl jns mov mov xchg (bad) xchg or rex.WRB rex.WX sti jmpq or mov (bad) or or adc add xor pop mov xor andl nop (bad) cmc xchg mov (bad) jp sub jge jle xor cmp add add xchg ds roll sbb std mov loope shll sti (bad) out pop mov mov stos fnstcw (bad) push (bad) pop test push (bad) pop pushq repz (bad) rolb cmp jg ficom xor rex.WRXB (bad) ja cmp and and sti rex.X xchg loopne (bad) icebp fsub leaveq pushfq mov xor jmpq (bad) (bad) popfq mov fistpll pop rex.WRX (bad) jmp cltd pop cli add or (bad) jae mov (bad) jge rex.RXB pop in pop (bad) and pushq sahf pushq jns sbb imul mov and outsb (bad) pop shl mov sbb rex.WB push mov mov es data16 push movsl (bad) push pop xchg mov push data16 jg (bad) je mov insb cltd add (bad) mov (bad) mov jp fcoms movabs hlt (bad) xchg xor iret rex.WB nop mov adc stos movabs movabs (bad) (bad) (bad) cmpsl add sbb mov rex.WRX jge cmc (bad) iret and lods xchg pop xchg (bad) movabs cwtl pop (bad) loopne jae leaveq and out sbb out rex.WB (bad) sub sbb jbe (bad) xorb adc scas rex.WX and rcl imul lahf (bad) pushfq xor cmpsl shrb xchg test out (bad) fwait add xchg cmp pop divl xchg pop pop add mov (bad) (bad) stc jle (bad) and js jbe xchg callq xlat mov nop fisttp sbb pop (bad) adc mov pushfq mov xchg (bad) xor stos je push (bad) test adc jmpq sub (bad) mull xlat (bad) xchg pop movabs sbb fmuls cmp xor sbb (bad) cmpsb jno mov jp movabs std (bad) xchg push repnz lods (bad) (bad) addr32 mov movslq rex.RX rex.WXB xchg rex.WRB add (bad) cltd fsubrs (bad) fldcw nop jb pushq retq imul in (bad) xlat adc xchg mov xor (bad) cmp (bad) fucomp rex cmpl in outsl cmp pop out andl cltd (bad) sbb addr32 sahf push rcrb (bad) (bad) (bad) cwtl xchg scas repnz mov jl push mov xchg popfq mov push rex.X (bad) push fidivrl nop mov adc rcl rex.XB movabs retq jno cwtl xchg idiv fiadd pushfq mov rex.WRX jnp cwtl rex.R cmp jmpq movabs movslq in stos xchg mov (bad) cs xchg rex.WRXB ss movabs test lea lahf xchg rolb imul scas xlat movabs outsl (bad) push fisttp (bad) mov retq (bad) lret cltd pushq fcoml clc insl int3 loopne imul jle (bad) xchg pop (bad) mov add fsubrl xorb (bad) push in jae xchg movabs sub test movabs imul xchg (bad) xor loope xchg icebp andl mov xchg nop xor adc imul xchg jrcxz (bad) in rex.RX mov rcr xor add mov int stos xor mulb mov xchg movabs adc pushq movabs int in insl ja mov movabs (bad) sti (bad) std sahf lea mov stos jge push cmp mov rclb loop (bad) mov iret rex.WRXB mov xor rex.W cmp stc movslq cmp sbb movb xchg test adc push add ljmp and cmp leaveq sahf jrcxz (bad) push xchg cld (bad) out mov xchg stc sub cmp push (bad) mov or imul add xchg out loope push loope outsl add mov sahf mov lea outsl xchg sub xchg lretq pop loopne or (bad) xchg mov xchg (bad) add pushq fcmovu xchg sbb jmp nop (bad) retq and lret add (bad) or jbe stos clc (bad) add loope loopne and rex.WRB rex.WRX mov jo jo shr xlat xchg adc mov outsb lods pop in movslq lock xchg rex.WXB (bad) pop (bad) stos shlb sbb push jbe and jno mov or movsl xor scas jmp pushfq mov sarb (bad) pushfq (bad) rex.WRX jbe cli xchg cmpsl orb int3 mov mov or rex.WX rex.XB sahf push sub loop rex.WXB (bad) pushfq adc push add mov imul sbb rex.RX cmp hlt cli outsb mov sub (bad) ja js xchg icebp (bad) (bad) nop mov cld mov lods rex.WRXB and cwtl clc (bad) mov adc jno rcrl pushfq jl adc (bad) movabs clc sahf pop loop rex.WRXB mov mov or adc fdivrl in rex.X lock (bad) mov jo (bad) callq mov (bad) outsb jl jb rex.WXB mov (bad) (bad) outsl (bad) xchg sub lods rex.WRB nop (bad) or (bad) cs insb xchg movsl (bad) loopne ja sahf xchg cli clc cwtl and andb xchg outsl fsubp rex.X jno cmp cmp div mov sub movsl pop xor in clc addr32 xor scas adcl popfq (bad) rex.X in (bad) outsl xchg push stc (bad) (bad) (bad) es hlt xchg in adc test faddp xchg jbe int3 add sbb cwtl adc pop pushq outsl mul movabs clc jae (bad) rex.WR fbstp rex adc popfq rex.WX xchg mov (bad) fstps test pop out or sbb andl out (bad) xchg rex.X rex.XB pop lret add repnz jmp (bad) pop sub (bad) stos (bad) push pushq sbbl and cmp fdiv lods sub pop rex.RB adc pushq jnp sti cltd in xchg pop test xlat adc push push clc sbb pushfq xchg xchg mov mov (bad) mov or (bad) es movsl mov adc in sahf push jrcxz jne retq test add leaveq (bad) imul mov out rex jge and test xor pop (bad) cmp jmpq (bad) push rex.W int movslq mov xchg out loop loopne (bad) xor retq add or jp adc stc popfq or lret pushq (bad) mov xchg js fwait (bad) (bad) xor cmpsb mov cmp rex.RXB sub movabs mov outsl (bad) jnp jns pushfq (bad) pop sahf pushq xor cmp notl mov cwtl mov es cmp xor xchg rcrb outsl in lods cld xlat neg stos rex.B mov rex.RX xchg faddl push hlt rex.RB xchg pop cs mov adc rex.R cld outsb jns add fnstenv mov scas sub cmp clc sti mov mov repnz nop mov xchg loopne cmc faddl mov pop (bad) xchg notl adc loopne icebp (bad) test and pop rex.W (bad) jg fisttpll repnz jle add xchg std cwtl nop sbb (bad) jrcxz sbb jbe jl or mov shrl sahf (bad) shlb out enterq movabs enterq sahf (bad) lahf xchg sahf or out insl fwait rex.WX mov sub xchg outsl jg mov ds rex.WB pushfq rex.R (bad) cld lods and rex.WXB rex.WXB xchg cltd loopne (bad) scas mov pushq fsub (bad) xchg add fdivl rorb (bad) out rex add in cmpsb jg movabs cmpsb sbb enterq sbb xchg adc jl lahf pop notb int repz cs fcomps pushq (bad) ja push add in mov mov fcomps (bad) (bad) rex.RX (bad) (bad) and cmpsl (bad) mov sbbl fldenv movabs ja jne insl data16 rex.RX add jno push repnz cs (bad) and icebp pushq loop callq cmp pop jrcxz movsb (bad) push (bad) xchg mov (bad) mov mov andb rex.RX int (bad) or movabs xchg jno sti pushfq add sub push ja mov (bad) clc (bad) imul out xlat and xchg (bad) addr32 test sbb xchg pop sub mov xchg scas jb movlps push (bad) int cld movsl or icebp fucomp jns xchg jae mov int3 xchg xor rex.X pop xchg (bad) xlat xchg addb scas fstps stos rex.B xor or mov cmp rex.WX (bad) fstl pushfq (bad) gs and movsl mov cmpsl in xchg xchg int3 xchg ja (bad) retq or (bad) xchg out rex.X or (bad) cmpl lret ja rex.WRX (bad) xchg in in sbb loop lcall xor xchg callq (bad) and add (bad) xlat imul xchg je (bad) rex.WRX xchg add adc (bad) xchg xor jo fs mov pop lods mov xchg enterq cs sub xchg sub outsb cli xor or jrcxz sbb jmpq push xchg pop repz scas movsb mov data16 ja lods out (bad) (bad) adc or sarl add cs lods add mov ss mov cltd mov jge jg ja out push popfq sub int mov rex.WRXB pop popfq sbb pushq jbe (bad) or leaveq jb mov retq jno stos shrl rex.W or (bad) (bad) rex.WRB cmp xchg ficomp imul js cmp sbb mov scas xchg add jge rex.WRX pop repz pop and cmp sub cltd jle (bad) jle int (bad) (bad) rex rex.RX scas out cmp xchg movabs jno xchg cwtl (bad) sbb (bad) jno (bad) jmpq pushq jbe (bad) xor out (bad) add jg xor loop jmp lods out nop andl push sbb (bad) insb movslq rex.XB sub adc jmpq jg or jle jo (bad) rcl xchg (bad) mov rcrl xchg or add in movabs rex in pop scas (bad) addr32 xchg pop fdivl jbe jg adc xor (bad) ja (bad) ja,pt hlt mov (bad) sub xchg scas (bad) (bad) (bad) pushfq nop push mov jge pushq push mov (bad) fstl xor vmovshdup sub cmpsl xor retq lahf std clc mov sti sbb shr cwtl popfq mov imul push (bad) (bad) mov xchg pop cmp (bad) jl setbe and xchg in (bad) and (bad) out and imul mov addr32 test sbb mov shrl repnz (bad) movsb int3 adc callq sub pop cwtl in (bad) (bad) (bad) addr32 lods mov loop xchg cltd xor mov jnp movabs leaveq (bad) subb mov pushq add imul (bad) lods test xchg xor add (bad) rex.WB repnz xchg rex.XB rex.WX rex sahf adc movabs xchg fidiv (bad) ficomp rex.WRX xchg add xlat pop repz (bad) iret sbb or push (bad) jmp add cmpsb rex.XB sahf rex.WXB stos (bad) (bad) jno pushfq (bad) and cwtl mov sub lret lea cltd nop sarl (bad) jne mov xchg es movsl (bad) xor jb testl jo push repz (bad) jo adcb (bad) cmp add xchg jne (bad) jns jl (bad) xchg mov add popfq (bad) push rex.WB sub rex.WX loop ja and ss xchg rex.RB testl xlat adc decb jo rex.WR movsl mov xor and retq push (bad) mov adc callq in push xor sbb fwait jrcxz (bad) fisubr imul adc sarb lret mov or retq (bad) (bad) loop xchg andl hlt xchg or lahf adc pop mov pop ja pop stos iret or cmp xlat sbb jp or rex.WRB mov retq cmp pushfq jnp push push or rex.WRXB popfq mov jg (bad) out fist idivl push pushfq mov pushq xchg in (bad) packuswb add xchg xchg retq jbe xchg jmp (bad) lock sub movsbl pop leaveq pop xchg jg cld fildl (bad) and push mov in sahf rex.B xchg std mov cli ja (bad) movsl sahf cmc or cltd pop jrcxz idivl mov ss imul xlat shll rclw jl (bad) out pushq mov mov sub pop xor push (bad) add movabs xor adc pop and clc fdivs jo jno mov sbb mov std lret nop cmc xchg sub outsb faddp sub adc mov adc mov (bad) sahf mov and cmp rex.WRXB lock pop (bad) mov int (bad) out (bad) push loop xchg movsb in mov sbb rex.RXB rep xchg push int imul cmp jnp and movslq (bad) sub mov rex.WR add xor fsubrl js (bad) addl sub fwait jae xchg lock scas add mov movsl (bad) jae stos and sub outsb mov callq pop retq rex.WXB (bad) cmp (bad) cmpsl clc cmp or xor (bad) test lret xchg sarl (bad) imul mov or rex.WR addb (bad) xchg and rex.X (bad) stc xlat mov lock add mov sbb pop (bad) mov lock mov push mov xor ds (bad) xchg (bad) imul leaveq sbbl in movl sub (bad) mov sbb addr32 sbb test adc push sarl mov cmpsl divl sub sbb int3 xchg callq ss test sti sbb movslq mov movslq movsl sub lea jbe rex.RXB cwtl movabs (bad) pop and jmpq rex.WRX xchg mov out xchg rex.WB mov loopne imul movslq xor (bad) nop jmpq (bad) rex.X repz cwtl or jbe pop cmpsl xchg fsub es cs lahf mov movslq nop and jp stos out callq and mov push pop (bad) pop xchg push sbb (bad) (bad) movsl out ds sahf xchg (bad) (bad) movabs mov retq pop negb (bad) sar push cmc (bad) adc jne (bad) rex.W xor xchg adc rex.WRX add xchg add rex.X (bad) shrl fwait je loopne rex.RXB xchg jge (bad) mov and and mov xor or jmp mov lahf mov mov or (bad) rex.WRX (bad) jo (bad) testb mov push jno fsubl mov rclb pop test pop pushq fwait cltd xor movabs imul loopne pop outsb sbbb jg rex.WRXB jne lods lock test cwtl (bad) movabs pop xchg rex.WB ss icebp sarl mov loope push cmp sahf es xchg mov cwtl pop gs xchg (bad) lods mov fs rex.WR ja cmp sbb mov loope xchg or addr32 fstl jb movabs rex.WRB xchg and (bad) pop (bad) fldcw stc pushq mov adc (bad) mov loopne and xchg stos movsb out lea mov xchg (bad) sbb jne repnz imul cmpsb or (bad) iret add (bad) imul mov xchg push xchg rolb jrcxz in callq cmp pushq sahf movabs (bad) cmp fs (bad) add xchg out cltd mov add mov jne (bad) pop xchg adc jmp gs movabs pop stos addl (bad) cmp addb outsl addr32 mov int jns mov pop cmp mov add rol mov sbb ja outsb xchg sbb jge loopne mov retq xchg (bad) roll fiaddl sahf push jrcxz (bad) lock cmp sbbb mov pop movabs out (bad) mov push mov sbb rex.WRX ss pop jg mov (bad) rex.WRB xchg mov add (bad) sub test fucomp jg (bad) xchg xor (bad) (bad) movsl or outsl popfq xchg (bad) std jbe divl test jne jbe xchg cmp movabs notb hlt and insb lods stos rex.RX sahf jmp rex.WB add ds (bad) mov xchg out sahf out hlt (bad) adc cmpsl in in test mov cmpsl xchg xchg sti xor or cmp mov test (bad) int3 sti out mov (bad) lea (bad) roll test or or int3 (bad) (bad) pushq xchg (bad) frstor (bad) roll movabs lea out imul jge push movsb push jbe mov (bad) xor xchg jns or and mov pop cmp scas xor pushq in or outsl sahf (bad) je xchg cmp (bad) xchg push jne stos xchg addr32 scas rclb jno sbb xchg mov (bad) retq insl nop rex.WRXB jae mov xchg add ss flds (bad) fwait (bad) xlat test adc rex.X push sti sahf mov (bad) rex.WRX movabs in add mov cwtl cmc xor xlat (bad) add jrcxz adc pop int3 jns testl xchg sbb movabs hlt (bad) (bad) xor movabs fsubrl push mov sbb shlb fucomip iret fimull lahf mov xchg ficom cli mov push xchg xchg test and xchg outsb in pop mov (bad) and lret movabs push je in scas xchg pop mov jrcxz or lahf mov sar (bad) mov xchg cld pop popfq std xchg int3 movsl push shr movabs jmpq callq (bad) and fiadd out rex.WX lock cmpsl jl fimul push rclb mov xchg mov sbb outsl stos lea loopne hlt xchg add add out movsl (bad) add and cld cwtl stc (bad) rex.RX lea mov mov mov (bad) outsl jno jmp cmpsl xchg cmp push out rex jp (bad) rex.RXB mov pop lret jmpq xchg xor adc adc (bad) adcl addr32 xor (bad) adc movabs add leaveq jp sbb fcmovb xchg adc adc imul negl xchg xchg movsb xor cli mov sbb stos (bad) jae jae shrb adc in movsb ficomp jg cmc je sahf mov test adc repz mov rex.RXB jo and sahf (bad) pushq lea sub movabs (bad) imul mov add cltd or fisttp cmpsb cmpsb xchg mov adc pushq scas (bad) (bad) movslq (bad) mov (bad) sub in sti mov xor xchg jrcxz sub jno (bad) cmpsl out push (bad) or or (bad) (bad) mov rex.WRB xchg rolb pushq (bad) xchg movabs sub xchg (bad) and cmc in fstpt xchg gs stos xchg jo cmpb mov xchg cmp (bad) xlat rex.WX rex (bad) rex.XB xchg hlt push (bad) (bad) (bad) cmp cltd sahf jbe mov jbe (bad) stos pop clc xchg (bad) mov jne xchg gs jnp mov int3 ja mov rex.WR xchg lahf push cmp rorb fs mov (bad) add mov fucom rex.WRX xchg es shll jnp or adc cmpb (bad) jno pop repz (bad) mov cmp out retq (bad) xor imulb addr32 xchg xchg or imul sbb adc cmp cld rex.WRXB pushfq xchg mov imul sub xchg test rex.WXB shrb sbb ja adc xchg data16 add cmp repz mov rex.RB jns cld rex.W testb mov stos retq jle mov xor nop adc mov mov loop enterq jo rcl adc and rex.RX int3 insl sbb int add pop pushq (bad) jg (bad) rex.W callq pop in add push pushq data16 mov mov jbe (bad) popfq sbb (bad) rex.W fwait (bad) ja nop (bad) mov and retq loop retq (bad) fimul sbb popfq popfq rcr insb (bad) popfq (bad) sub (bad) movsl sahf and mov (bad) (bad) xchg and (bad) mov (bad) adc (bad) loopne lock movslq stc xchg jmp cmp sahf callq int3 std stos decl out out (bad) movabs test mov rex ds mov movabs and (bad) sub (bad) repz or leaveq (bad) xchg (bad) lock or fidivl rex.RB rex.X test pushfq pop in mov (bad) jp jae fist adc xchg fdivrp out in pop nop jmpq rex.W push pop (bad) xchg adc (bad) xor stos cld and (bad) repnz xchg adc cmp rex.RXB movabs movsb (bad) rcl callq cli (bad) sbb jp (bad) clc (bad) mov xchg xchg and insb sub sahf xchg and sbb sar jns fwait xchg fidivl xchg imul pop or (bad) mov xchg out add rex.WXB push xchg cwtl (bad) mov movabs cld xchg andl (bad) mov push sarl scas sub data16 xchg hlt scas xchg sahf jnp (bad) lock lods enterq leaveq xor xchg (bad) rex es in neg movabs xor (bad) sbb enterq test pushq (bad) stc push (bad) jns fstpt sahf imul shll pop movl lods orl xchg add mov (bad) sub mov jbe xchg (bad) and rex repnz and ss sbb and jns hlt pushq xchg outsl sbb fcoml in (bad) sbb mov (bad) pop jg fsubr pushq movabs cwtl xlat push push sub mov ss cmpl xchg sub jrcxz cmp xor repnz mov xlat pop sbb rcl xchg add jg (bad) lret in mov xchg ss or xchg rex.WXB negl hlt movabs pushfq pop xorl sbb jle rex.XB stos movsl mov rex.W rex.WX rex.RXB rcll jo je movslq stos icebp gs push xchg jle and pop xchg adc jbe int xor insl test pop rolb adc fsub in jbe and mov pop pop and pop sub xchg movsl ds (bad) (bad) rclb retq sub pmaxsw enterq xchg xlat mov clc pop add adc sbb sub xchg mov mov pop add rcll xchg shrb scas xchg (bad) pop insl icebp sbbl jg mov leaveq (bad) fiadd fisubl sar xchg (bad) mov jbe xchg mov and pop xchg lock and sbb ficomp rex.WX cmpsl xor cmp ss push xlat stos xchg fnop scas decb jnp push sahf (bad) cmp xor cwtl mov sub xchg ficoml mov cmp sbb (bad) rex.WRXB xchg pop mov or cmc pop imul jl jno (bad) adc xchg pop es (bad) ja rex.WXB xor setnp testl lahf mov test (bad) add test push or and xchg adc je jae xlat xchg pop cmp cmp sub pop imul imul fild gs movsl pop xor out rex.X (bad) jo sub and fisubl (bad) cltd jns (bad) or xlat xor pushfq and pop callq mov vpunpckldq jne (bad) nop adc xor rex.WRXB sub jmp or (bad) movsl mov xor jp (bad) pop xlat (bad) sbb mov xchg movsb rcrb (bad) adc test cmp out stos xor rcr scas xchg mov hlt add cmc lea fs and repz and in sti mov mov pushq mov and (bad) addr32 mov out test add xor imul sahf xchg xchg pop (bad) xchg pushq (bad) pop mov and (bad) cld sub xchg retq mov in outsl (bad) mov pop rex.X lea (bad) xor add adc adc cmp pop ja out rex.RX out and cmp out mov (bad) rex.W rclb movslq (bad) pushq xchg mov mov (bad) ja adc xor pushq rex.WRX xchg rex.WR out and loope shr xlat mov cmp xchg retq cmpsb cmp xchg jae or mov fisubr sbb sahf (bad) es xor sbb cwtl in lea rex or jmp xchg or (bad) xchg xchg xchg test test in retq mov movabs jns mov add jno imull sarb in xor mov addr32 xchg rex.RX sub rex.WRB cmpsl hlt lea push mov (bad) or jnp fdiv fidiv (bad) shr adc test cs push xchg popfq mov sti pushfq mov out (bad) jl pop xor (bad) xor xchg sub xor test rcll adc lods rex.RX xchg hlt fildl rex.R jns mov js sub pop ds ficomp xor pop add icebp mov add testl insb jge pushfq cmp jrcxz pop (bad) jb cli cmpsb fdivrl ja gs popfq cmpsl rex cli fstpt pushq cmp push mov pop movabs rex push lret mov adc rorl outsl adc pushq cmp ror movslq add jo in (bad) (bad) (bad) xchg jbe (bad) (bad) movsl jmp pushq (bad) xchg and leaveq rolb mov xchg lea xchg or (bad) and fnstsw mov pop (bad) fsubl clc insb imul mov cltd and icebp pushfq rex.XB (bad) stos sbb enterq fsubp pushq jge mov in mov xchg sbb cmp xor movabs or xchg xor (bad) sbb movabs cli int mov sbb loope jle add rex.WXB int pushq leaveq (bad) add adc mov mov pushfq gs (bad) sbb fwait sbb mov ds enterq push int or icebp push jmpq sti push jne cmp stc jae fadd pop sti pushq ja push in ja or xchg (bad) cmp and int3 imul rex.WRB rcl imul xchg fsub retq (bad) sbb pushfq out sub jl outsb ds sahf (bad) loop jnp in xchg (bad) lock enterq add (bad) cwtl data16 sti lret sahf (bad) ss loop icebp insb and pop push insl mov xchg fcompl jno xchg mov fdivl xchg pop (bad) cmpl mov xor fwait lods adc (bad) cmp (bad) icebp ror movabs add pushq adcl (bad) fildll pushfq lret rex.WX xchg (bad) nop fs push cmp xchg mov push cmp (bad) xchg repnz pop mov movabs outsb xchg (bad) mov xor rex.X xchg ficompl repz pushfq (bad) pushfq lret clc outsl (bad) rorl jge (bad) mov cmc rex.RXB ds xchg (bad) (bad) popfq push lcall (bad) xchg sbb nop insb sarb cld addr32 (bad) jl xchg (bad) (bad) jbe repz mov or lods lea lods sahf popq movslq sbb pushfq std addr32 loopne rex.WRX cmc pushfq movsb adc cmp mov cmpsb xor test mov sbbl retq imul (bad) pushfq adcl test mov sbb sub mov (bad) movabs jns leaveq sbb pushq (bad) mov cmp nop imull rex.WB (bad) (bad) shrl vunpcklps rex.XB rex out out lock rex.RXB pop or cltd mov push rex.WRX (bad) xchg int out push pop (bad) fcoml mov rcl (bad) cmpsl in in (bad) sub vminpd setns nop or imul mov mov rolb (bad) rex.XB (bad) sbb subl (bad) adc lock sti mov (bad) mov movabs cmpl stc rex.WB (bad) pop (bad) and pop add mov rex.WRX xchg pop pop and (bad) mov iret fadds xor (bad) icebp xchg cmpsb pop rex.R faddl psrad (bad) xchg test adc jmp (bad) (bad) rex.R (bad) mov add adcb sbb repz lods (bad) rex.X scas mov sahf pop xchg (bad) fiaddl (bad) repnz mov sbb mov rex.XB mov cmpsb (bad) insl lock add ds imul or hlt mov xchg and imul jb jbe (bad) mov callq nop sub mov lahf (bad) and pop xchg jne out jo mov xchg or popfq jmpq (bad) je insb jnp,pt loope rex.WB (bad) sti mov scas lods xchg xchg (bad) ror push and pop sbb sub imul jb data16 (bad) jg outsl outsb out xchg (bad) jp sub rex.WX imul xor sahf cmpsl repz or gs insl jbe test (bad) (bad) adc rclb pop or add jmp cmpsb hlt push sar jnp xor outsl or xor rex (bad) out and mov and (bad) faddl insl mov (bad) movabs rex.RXB cmpsb pushfq mov loop add cmpsl or (bad) loopne mov push sbb adc mov fisttpll rex.WRXB or imul rex.WRX (bad) cli xlat movabs movabs push sub notb jle rex.WRX mov jrcxz pop paddd xchg rex jbe out add imul in mov rex.WR mov pop adc (bad) fs xchg scas adc jb int3 xor (bad) (bad) xor (bad) (bad) rex.RXB (bad) mov (bad) and mov test sbb jne mov and mov rex.WRXB je add rex.WX or mov rex.XB (bad) (bad) leaveq fist (bad) rex.WRX xchg xlat scas mov mov hlt xchg imul push clc sbb sub rex.XB rex.X nop lods xchg ss cmp and (bad) rex.RXB pop mov std popfq or pop test jne add nop or xchg pop mov lahf adc in outsb jle cltd mov mov lret jmpq lea add adc and jle sbb je add negb push sub jno xchg adc or ss adc mov rex.X sub (bad) insl sarl mov sahf (bad) (bad) mov pushq imul loop xchg movsl xchg (bad) add popfq popq xlat rex.WRX retq out or or sbb pop popfq (bad) shrb (bad) xchg (bad) (bad) cmp push (bad) (bad) jb rex.WRB or rex.WRXB shll lods (bad) ss mov push or push jl sahf movabs lea fwait sahf mov mov pushq pop movabs and mov mov clc scas fucomp and (bad) test (bad) sub mov and hlt cmpsl jrcxz imul ja sbb sbb (bad) jne pushq (bad) adc shlb pop in push adc mov xchg out or jmp lods sbb icebp popfq je rex.WR pop jae mov test jne mov in xchg fsts push (bad) push mov pop ss jmp xchg loope movslq mov cmp movabs fnstsw (bad) (bad) push (bad) push sbb pop mov pop pushfq test movslq scas cli push or mov push (bad) jbe xchg sub movabs xchg rex.X gs callq xchg (bad) movabs (bad) fs mov rex.XB mov (bad) mov (bad) pop xor (bad) test jno jmp fdivrs and xlat or (bad) cmpsl (bad) pop addl mov mov iret xor (bad) push xchg rex.RXB sub sarb rex.RXB out rex.WRXB hlt (bad) mov (bad) rex.RXB fs pushq add (bad) or xor (bad) (bad) sbb mov cmp or shll and callq and test outsl push cmp (bad) rex.RB insl (bad) mov xchg pushfq repnz mov stos rex.XB cmpsb (bad) mov pop movslq pop (bad) je push rex xchg jnp fwait cmp test cmp adc pcmpgtb es sbb sub retq rcrl cmp or int andl leaveq (bad) mov xchg cmp xchg sub add mov std mull cwtl cltd or (bad) xchg es adc subl xchg fidiv sbb (bad) mov (bad) push movabs outsl and (bad) (bad) xor cltd bnd mov mov jne movabs es or push sahf cmpsb mov data16 xor fistpll (bad) (bad) (bad) imul ja rex.W (bad) jge fwait (bad) adc or ja (bad) mov movabs rex.WRX sar push addl insl rex.WRX and (bad) leaveq sbb sahf (bad) (bad) (bad) mov cmp or adc pop shll enterq retq add (bad) rorb retq testl jne pop xchg sbbb (bad) (bad) push xchg rorl mov icebp xchg pop jno jle rcll lods std cwtl mov mov push rex.WRXB data16 loop fwait xchg jp sub mov add adc jbe movabs push sub shll lret fiadd pushq test cmp out (bad) (bad) (bad) addl add cwtl (bad) xchg push fwait pop jl mov mov mov cmpsl popfq (bad) fsts (bad) sti sti (bad) xchg jne fist jmpq xchg adc xlat xlat ss loop and test or out scas mov ds sub (bad) and fcoml cld rex.WRXB outsl sub or rex.R and jg cmp (bad) lahf sub insl pop jns cld rex mov push mov xchg test xor je ds jbe loopne or mov sbb sbb (bad) js lods lock sbb rex rex.WXB xchg cmp callq or addr32 scas rex.WRB movabs and (bad) cltd pop (bad) in sbb retq lea lret pop push pop cs xchg int data16 mov jo push fcom mov (bad) jae cmp movsl xchg insb sbb jno (bad) mov or mov ja cmpsb (bad) sub imul repnz cmp rorl sub (bad) sbb stos leaveq xor imul nop jge sbb movsb xchg mov scas loop jmp jne sub rex.WRX ds in pop mov (bad) xor (bad) (bad) adc movsl bnd sbb pushfq js and out xchg cmpsl xlat std rex.WXB lods xchg rex.WX addr32 fwait push pop xlat add in xchg in lock mov sub (bad) rex.WR add (bad) mov mov add rex.XB rex.W sub pop flds cmp (bad) mov add lahf movabs xchg ja js cmp xchg stc xchg adc movsl adcl pushfq fldt lret jle (bad) fild in fld (bad) pushfq (bad) jne jrcxz hlt (bad) movabs icebp jge lahf out retq xchg sti and xchg (bad) or rex.RB nop pop lret mov push sti push mov jge rex.WX xchg cmpsl cvttps2pi sub lea loopne insl rex.WR adc cmpsb jle (bad) (bad) pop jns xor mov clc (bad) (bad) outsl pop xchg push (bad) gs xchg (bad) retq mov rex.RX mov adc mov stc (bad) jns push (bad) pushq xchg adc xor xchg stos popfq scas xchg pop or cmpsb rclb mov pop jg push enterq out cli xchg mov adc fmuls ja xchg pcmpeqb out mov xchg popfq cli pop xor out ja or pop rorb pop sti jge imul push out sub sub push add movabs (bad) mov data16 callq push (bad) cmp pop nop or xor lods iret fistp xchg movabs mov addr32 or cwtl lret test ja sbb and loope mov xchg mov jne push mov xchg jge out in push xor pop enterq addb mov (bad) enterq fist popfq insl pop test ja cmp xchg ss push (bad) xchg mov (bad) cltd test test lret mov ja movabs lods push jge jmpq cmp xlat xchg rex.R (bad) out cmc fs xchg (bad) jns (bad) mov add loope cltd fsubr (bad) data16 cwtl loope jnp es mov (bad) xchg and cmpsb push (bad) xor xchg mov addr32 andl retq movabs iret (bad) insb popfq test jrcxz xor (bad) xchg sbb (bad) adc mov (bad) (bad) xlat retq mov orb and pushq mov pushfq (bad) jo mov mov repnz sub xor sbbb mov gs xchg rex.RX push mov (bad) pushq and adc xlat (bad) shrb xchg addr32 and cmpsb out (bad) addr32 xor mov rex.WR sbb rex.WB push cmp cmpsb xchg lock (bad) xor pop adc xchg test cwtl push xchg and repz (bad) add fisubr xchg in stos (bad) rclb sbb sahf add pushq lea xchg divb in xchg or xor callq add xor jns mov in sub sub xchg pop cmp (bad) jge out movabs (bad) popfq cmpsb sub movabs push mov xor jae xchg mov rex.B test rex.WRB rex.WXB (bad) clc rex.RB outsb int3 mov stos (bad) incl adc (bad) adc xchg and pushq xchg sub movabs movabs mov jmp and cmp pop cmp (bad) fiaddl negl cmpsl out retq fucomp nop add sbb shl mulb movabs cmp adc pop xchg xchg (bad) rex.RB mov mov xchg (bad) fwait xchg pop jge ja and mov xchg std lock outsb adc sahf sti or (bad) adc (bad) pushfq xchg jl imul out mov mov jae or push pop mov xchg retq addr32 jp loopne adc xchg or rex.XB xchg popfq add push int pop (bad) fadds (bad) cli stos xor addr32 or iret cmc rex (bad) movabs sub xchg in and movabs jbe (bad) (bad) repz testl rex.WRB ja xchg mov xchg (bad) fnstenv jmpq cmp movsl mov cmp pop rex.WRX loope jge xchg movabs (bad) lahf repnz test cld sahf cwtl xor pop cli (bad) sti cmpsl xchg (bad) cwtl rex.WXB (bad) or lret jne cwtl mov pop (bad) movabs or add fimul rex.WRX mov pushfq add sbb mov loope mov cs stos (bad) adcl push sub xor (bad) mov nop rorb hlt xchg xor mov lret xchg xor insl outsl mov xchg pop jmpq mov sbb icebp pop (bad) rcl stos jo nop xchg imul stos adc and push fiaddl push data16 test (bad) (bad) pop stc jnp je xor xchg or rex.WB jbe notl xor imul mov out xchg loopne hlt rex.WB ds mov out rex.WXB (bad) ja (bad) pushq adc (bad) scas test imul (bad) jbe in sahf test (bad) mov add pop sbb imull mov (bad) (bad) xor (bad) mov add out xchg cmp xchg pop (bad) stos orb orb add (bad) packsswb push and loope mov lea xchg (bad) jmpq push test (bad) (bad) outsb cwtl xchg int3 rex.WRB rex.WXB out pop (bad) xchg xor (bad) mov mov or movabs mov test adcl retq add ds and jno add rcrl add fild xchg xchg mov pushfq (bad) (bad) pop out retq je (bad) fidivl mov insb xchg mov (bad) jns push shl (bad) hlt sarl xchg cmp rex.WX xor retq (bad) mov in or js adc stos cwtl scas xchg fistp rcrl pop (bad) pushq rex.X push or pushq mov xor add adc int3 push xor lods xor stos mov movsb ficoml popfq rex.X jo scas in sbb push jge subb (bad) rcll xchg fidivr xchg jnp sub add icebp push xchg add repnz rex.B xchg out push nop mov sahf jp jno mov movsb in adc xchg fwait jmpq (bad) lock jmp jle (bad) push cld and jl pop sahf pop xchg (bad) lods shl mov (bad) rol movslq movabs int xchg or cmp xchg rex.WXB and sbb (bad) adc movslq cmpsl xchg es rex.X xchg in xchg mov fildll mov mov out int imul sbb pop pushfq movsb mov push andps mov push and cmpsb (bad) lods loope jg imul sub xchg jae cmp xchg popfq xor lret (bad) rex.WB jl xchg popfq and xchg (bad) sbb adcb (bad) push and push test sahf popfq cli enterq fdivrl push xlat ja xchg movsb jrcxz jge push mov mov add popfq (bad) lret mov vmovaps xlat test pushq add loop mov sbb (bad) jge cwtl fistp (bad) (bad) (bad) imull leaveq popfq mov rex.WRX mov jg sahf rex.XB movslq lea sbb adc (bad) test cltd icebp out repz fdivrl insb int3 iret lock pop push (bad) js callq (bad) nop (bad) sub rex.RX fcmovnu xchg js pop pop pop or fincstp rex.RX (bad) (bad) insl (bad) xchg (bad) adc fistp outsl jo (bad) (bad) mov sub fcmovu push cwtl pop retq cs gs addr32 out rex.RB cmpsl callq popfq xchg adc and in xchg shrb xorb (bad) lods nopq rex.WXB pop sub (bad) pushq in rex.WRB push cwtl jrcxz (bad) mov nop sahf adc xchg rex.WRX (bad) fdivs (bad) test jns (bad) mov xchg rex.WXB sub lahf rex.RB mov cmpsb jns (bad) sahf lods loopel leaveq fdivrl cmp rex.R xchg (bad) mov jle and retq jg insl jnp outsb push xchg in rex.RX gs xchg movabs test rorb out (bad) enterq sub movslq (bad) leaveq ficoml sbb add and xchg outsb push stc (bad) and or fsubrl adc lea lock mov (bad) xchg mov mov fidivr retq mov (bad) adc ficoml (bad) test push mov gs popfq jns and mov or and mov (bad) jno rex.RB xor std out clc cwtl add stos jmpq xchg out divl test mov rex.RX out xchg movslq rex.WR adc rex.WX (bad) lock xlat scas (bad) push (bad) and mov push xchg ror cmc xchg lods (bad) sbb (bad) (bad) rex.WRX mov ds rex.WB out push pushfq xchg and add xchg mov test xchg insb lods xor or adc movslq xchg imulb adcl rorb loopne mov sbb mov (bad) pop adc xor mov out rex.RX (bad) cmp mov cmpsl popq cmp xchg (bad) test (bad) pushfq rex.RXB (bad) pop lods pop (bad) (bad) stos nop adc jae in jmp adcl callq push int3 adc fdivrs cltd cmc jrcxz (bad) lock fnstsw sahf loopne rclb cmp xchg push popfq lret jae adc xchg (bad) sub movabs xor mov shl rex.WX jo rex.WRB jmp rex.RXB sti mov pop sbb sbb (bad) (bad) and pop (bad) mov scas (bad) fs mov add je (bad) rex.B rex.W movabs (bad) or insl xchg mov xor xchg or push push xor loop sti imul and fwait or rex.WB xlat pop mov jb or loop adc adc sbb retq xchg callq add (bad) and pop (bad) rex.WX idivb rex.RB mov sub fistpll (bad) insl fs jmpq mov xchg (bad) je out int3 shll movq mov pop rex.RB rol movabs lods outsl divl iret nop and cltd cld (bad) xchg adc (bad) repnz outsb rcrb push adc (bad) mov mov test jmp mov adc xchg movslq jl or rclb movabs (bad) xchg xchg movabs rex.WXB lock pop jg rex.WR rex.XB pop stc je xchg cld (bad) pushfq stos mov (bad) nop xchg sbb xchg cwtl (bad) jmp (bad) pop (bad) xchg add jnp je (bad) rex.W out (bad) add mov rex.RXB loope or scas (bad) cmp sub jg jnp xlat imul xchg test enterq xor fidiv jae movabs test xchg sahf mov xchg mull jl (bad) rex.WRXB pushfq fs sub (bad) cs xchg xchg xor or jne (bad) (bad) out in hlt adc xchg fisub loopne xchg fdivrs retq cmpsb lock xchg (bad) iret (bad) (bad) or sub (bad) mov loop lea sahf push shrl mov mov xchg fstl cmp (bad) push or and (bad) rex.WRX pop in jo sbb (bad) mov (bad) sub rex.RB jno jl enterq iret repz addr32 xchg cs push rex.WB and (bad) cmp jno sub pushfq jnp movabs jae nop jge in loopne xor add add lea int xchg or (bad) loope xchg push mov out xchg (bad) mov movl sbb rex.WXB fisttpl xlat je fwait adc add cltd mov mov xchg shrb jge xchg in xchg cwtl mov (bad) or push lret imull fstl cmp (bad) mov callq in ja shrb mov mov (bad) (bad) (bad) movabs xchg xchg nop adc mov lea cmp sbb xchg mov (bad) adc cli jge int sbb pushq ja pop (bad) int imul push lahf (bad) cltd (bad) sbb sub xlat mov rex.WX mov out adcb test (bad) pop imull sti retq sahf movabs mov xlat cmpl in movabs sub packuswb jnp or (bad) (bad) fcmovnb loope and mov mov rex.R add jmpq mov (bad) mov jle outsb jnp lret loope movsl stos movabs rex.WX repz xchg adc test cld jne xor loope cmp sbb xchg ss (bad) mov pushq rex.WB out xchg out sahf movslq pushfq (bad) mov nop movsb (bad) jp (bad) or js enterq lock jnp push scas sub movabs iret xchg xchg sti lret mov jmpq rcrl out ja callq rex.WR movsl test xchg jb cmc lods xchg pop mov xchg movabs outsl xchg (bad) xchg rcl or nop sub push lret xlat leaveq xor ds xchg movsb lea cmpsl (bad) sub popfq mov lahf cmp add push cmp je xchg xchg mull xchg xchg (bad) (bad) (bad) pushfq mov xor xor roll movsl xchg mov (bad) rex.WRX test cmc clc and xchg rex.RX (bad) xchg jrcxz cmpsl (bad) (bad) lret nop je xor sbb (bad) mov testl movabs fcom insl (bad) xchg (bad) sub add xchg cmpsl pop cmp icebp (bad) insl rex (bad) sbb loope shl cmc outsl out fbstp cwtl and (bad) push xlat (bad) (bad) lock jmp test sbb rex.B rex.WRB cs fistl repz rex.RXB adc add sbb (bad) push xor cmp push (bad) lods stc xor add xchg sbb (bad) (bad) xchg rex.WRXB fmull fisub sahf es add jmp repz in mov notb (bad) xchg xchg and xlat out xor xchg scas adc gs movabs xchg push rex.WR test xchg pop push (bad) (bad) (bad) mov mov (bad) jp or (bad) test ja rex.W movslq jl lahf ficom mov popfq or mov movabs xchg xchg cltd rorb xor sarl cmpsl and lret mov mov jrcxz (bad) or movsb xchg enterq adcl lock push rex.WRX (bad) or getsec rorl (bad) (bad) sahf (bad) xor rex.RX mov and test sbb and movsb xor xchg fiadd out fcmovb movslq movabs pop std mov mov movsl test pushq cmp or (bad) xchg xor (bad) mov xor sahf xchg imul loopne push mov push scas mov mov fcomps retq jrcxz cmpsb mov xchg mov fldl sub push (bad) rex.WRX hlt xchg (bad) adc clc xchg mov pushfq pushfq rcr fcomip nop (bad) (bad) js ja rorl push mov pushfq cwtl sbb push rcrb and roll (bad) movabs int3 movsl cmc ds scas mov test xchg add (bad) (bad) (bad) push xchg rex.R mov xchg xor (bad) push xor jp fimul insb addr32 add (bad) xchg movabs (bad) mov movslq (bad) xchg lods clc out (bad) xchg (bad) mov jbe jmpq in xor xchg cmpsb nop xchg or cwtl (bad) cld (bad) imul je lretw xchg rcrl (bad) or sub or movsb jrcxz stc mov sbb lea mov xchg pop and scas xchg jg cmp sbb (bad) jge insl stc push in sbb push xchg rorl mov imul xchg (bad) pushq rex.WXB lods sub xchg sbb outsb es icebp movabs iret lahf add (bad) nop rcrb pop xlat jb cltd xchg mov rex.WRX cwtl mov mov (bad) fwait jne mov pop mov xchg movsl out xlat (bad) (bad) jle xchg mov pop out xlat out rex.WRX xchg mov (bad) ss xchg add (bad) pop outsl mov test adc jo xchg rex.WRXB jne sbb outsb xchg jbe addr32 clc (bad) pop jrcxz xchg jnp decb mov shll rex.B pop (bad) enterq rex.WB enterw mov mov fstpl out push (bad) rcrl jl (bad) stc movabs ffree movabs sbb (bad) mov sbb enterq pushq scas fs lock mov cmp cmpl xchg fidivrl adc jl (bad) (bad) loopne pop mov cmp ss xchg (bad) rex.RB mov push rex.RXB leaveq rex.RB xchg (bad) rex.WR sub mov test rolb (bad) pop nop add mov xor cmpsb sbbl push jno cmp rex.WRXB xchg rex mov xchg push sti mov pushq lret xchg pop cmpsb jge test out sbbl clc rcrb mov xchg (bad) rex.RXB (bad) adc loope,pt (bad) adc sbb push mov xchg addr32 rex.WX xor sarb rex.RXB rcr add out or mov (bad) popfq pushq (bad) fwait and add push and pop sbb mov (bad) pop (bad) bswap mov mov push xor fiaddl mov or lock rex.X iret movb (bad) adc mov jge popfq and add test test std and outsl pop rex.XB shll retq movabs sbb mov imul cmpsl rorl rex.RX or pop xor adc add adc insl shlb insl shlb rex.WX rex mov mov (bad) orl mov jnp mov or adc mov ss mov (bad) sbb pop jne (bad) jl pop rex.WX (bad) mov (bad) lea ja add movabs lock (bad) sub cltd (bad) mov (bad) cmp (bad) rex.WR (bad) push xchg (bad) sbb out fstps add mov insl sbb add repz adc cs pushfq sbb rex.RXB imul push outsl sahf enterq fsubr (bad) push test add rex.RB push adc and mov movabs rex.RXB (bad) lret mov pushq rex.WR nop or rex.RXB add in mov jp loop repnz xchg mov mov stos jbe jl mov lods jne xchg sub mov out xchg cmpsl loop cmpsb jae mov mov popfq xorl cmp test cwtl (bad) repnz cmp rex.WB fistp rex.WX xchg rex.RX movabs cmpsb nop sub mov pop adc rex.WR push insl (bad) cmp (bad) rex.WRXB leaveq cmpsb outsl lods fsubp xchg mov jmpq (bad) (bad) push jmp (bad) push or scas xchg or out xchg (bad) cltd shll in repnz rclb fiadd and movabs mull xchg movslq (bad) xchg lock rex.WRB jmp xor or cld lods xchg and jmp js (bad) mov shrl push (bad) mov pushw cmp sub and mov rex.RXB movsb jo mov jne mov fiaddl xchg cwtl jnp cmpsb movslq xchg ss (bad) rex.RB (bad) cmc xchg lret xchg jmpq (bad) mov clc ja test jge imul add xchg shrb ja repz or in fdivrl jmp (bad) xlat fwait mov mov repnz xchg cmpsb rex.RB xchg jne cs or pop add notl ja sub rol xchg in (bad) jb jns mov xchg sub (bad) out icebp cwtl sbb popfq popfq sbb sbbl adc fwait clc or out and cmc popfq xor pop mov adc mov mov sub rex.R pop jbe xchg rex.X iret sti rex.WRX repnz (bad) push cmp mov sbb addr32 (bad) xchg test adc (bad) jg popfq add movabs fisub xchg adc rex.RXB (bad) (bad) (bad) xchg sbb ja loopne cwtl rex.XB repnz enterq cmp xor mov (bad) outsb mov (bad) (bad) sbb js jp pushfq rex scas cwtl rex.RB rex.WB stc xchg rex.X popfq jrcxz,pt (bad) jge push fbstp loopne mov or movabs and xchg adc (bad) or mov pop adc outsb sti xchg mov or pop jp sbb xchg loopne sub jg mov xlat loop (bad) gs pushfq jge jmpq fimull (bad) rex.W outsb sahf test jp mov adc sahf pushq xchg rex.B stos rex.W rex.WRXB xor (bad) movslq add mov rol rex mov cmp outsb iret or jns int add repnz mov (bad) or xchg hlt mov cmpsb in cwtl (bad) adc mov or fwait retq pop rcrb test (bad) xchg mov lock rex.W fcmovnu jae cmp lahf pop sbb movabs rex.WXB jnp popfq add sub popfq (bad) (bad) imulb stc (bad) rcrl movsl imul add rol add lods mov jnp sbb rex.WXB xchg jge lods adc (bad) movl ds test cmp cmp fild (bad) mov pushq rex jrcxz hlt xchg movsb cli outsl out test rex.W rex.XB adc es fisub (bad) jno add test pop jrcxz mov outsl (bad) mov retq movabs out (bad) pushq xorl addr32 and rex.WRXB push xchg xor cld (bad) jno divb jnp cltd adc xchg jrcxz xor mov movabs ja shrl xchg jge push incb mov in cs fsubr (bad) sub xchg fisttpll (bad) mov cmp mov mov jae sbb mov callq fistpl scas sub cltd in outsb sbb scas xchg out pop lahf mov mulb movabs mov xchg in rcll (bad) cmp xchg (bad) (bad) add (bad) pushfq out notl jg (bad) jg sti cmp and lret xor (bad) rex.R lea rex.W (bad) enterq callq xchg jne js push add rclb sub or (bad) scas (bad) add sbb fstp sarb xchg movabs fidivrl jmpq (bad) cmpb jb fdivr retq sahf push stos rex.WB divl jmpq mov pop xchg sub stc movsb cmpsb (bad) fwait mov ss mov test sub or fnstcw cmp cmp xchg (bad) lods movabs pop add jg jge lea mov rex.B (bad) xchg loop lea fwait and xor test fs xchg sbb sarl jmp data16 mov xchg add shrl xchg mov int3 add fstps cld (bad) in cld rex.R (bad) fidiv jge (bad) out adc movsb fdivl out (bad) subb scas iret loopne jbe (bad) and xchg xchg rex.WRX or xchg (bad) (bad) or pop jmp xor xchg (bad) out cmp sahf push adc or pop (bad) fstpt xor sbb loopne xor pushq fmuls ds sbb sub jp mov push rcll jge imull and xchg mov (bad) (bad) stc stos adc xchg adc xor (bad) rex.X mov rcll test ficompl cmpsb xor pushq nop add stos ja fwait xchg add mov mov xchg sarl test (bad) movabs cmp jl xchg fidiv out mov rcrb mov test out outsb loop (bad) xor rex.B jbe shrl xchg add rex.XB lock (bad) lret repnz pushq cwtl pushfq sub mov xchg iret (bad) (bad) nop mov add int jmpq pop xchg (bad) (bad) and add cmc (bad) out rex.RX or rex.R jne xchg cmp adc (bad) gs xor xlat fsubs xor xchg jrcxz jne jl mov cmp test jbe mov mov jae (bad) (bad) xchg scas mov xchg out lret fimull in mov jnp test cld adc add stc pushq or stos rex.WRB mov int rex loope js shll jge (bad) add sbb mov jo cmp hlt adc ja,pn xchg (bad) (bad) cltd xchg mov (bad) lret fs cld movabs stos jno movsl cltd retq (bad) rex.WXB rex.RX mov fisttpll rex.WR (bad) fwait xchg jo (bad) sbb xchg xchg rex.XB rex add imul scas sbb jns xchg rex xchg mov cmp lods sahf mov (bad) out jmp (bad) (bad) pop xchg mov insl andl or fs movabs jg stos (bad) jnp xchg pop cmc (bad) imul xchg mov (bad) sti mov (bad) xorl (bad) fnsetpm(287 test xor sub mov data16 rex.WRX (bad) mov push sbb xchg cmpsl in mov adc jns xchg and hlt xchg movabs mov sahf jle mov andl and (bad) movabs movabs insl out mov notl shll test xchg sub (bad) lods xor insb xchg xlat xchg movabs mov rcll (bad) (bad) jge rex.RXB sahf mov cmc push pop xlat es scas or (bad) pop or data16 jg sub xor (bad) rex.WRB (bad) (bad) jl in fwait (bad) callq (bad) xor lods pop lahf or (bad) out xlat rex.WB pop jnp mov icebp pop (bad) movabs cmp pop imul jmpq sub jns cwtl fstps sub rex.RXB fdivrl cmpsl or rex.W cwtl jae gs negb cltd movabs or (bad) (bad) rcrb (bad) xor in push sbbl and mov jnp xchg enterq callq mov jnp pop rex.X xchg xchg xor push std xchg add mov sub xor push mov jp or cs xchg adc mov ficomp jmp xchg stos cli lahf (bad) jge xchg jp (bad) addr32 and xchg rex.WRB testl sub sbb xchg outsl and xchg dec mov or xchg sbb stc pop fistl cwtl mov push xor fldenv rex.WRB imul punpcklwd cmpsl mov mov pushfq sub adc (bad) rex.WRX test add scas jne cwtl xchg icebp adc mov retq jg es lret rex.WB cld mov sub leaveq pop xchg retq jge rcrb add add divl rex.RB callq iret xor std lret andl test in cwtl bnd add (bad) (bad) xadd xor (bad) xchg xor ss mov (bad) addr32 add adcb mov (bad) xchg (bad) flds cmp leaveq push (bad) (bad) fsubrl retq (bad) sahf insb mov (bad) (bad) fwait push loopne,pt popfq (bad) jns popfq adc xlat (bad) scas (bad) push int3 addr32 test xorb rex.RX es (bad) pushq rex.RB repz push jae mov xchg cmp cmc pop rex.WR sbb lahf fstl jno cli ja sub (bad) cld insl pushfq cmc or xchg pop and mov add xchg mov js pushq (bad) (bad) rex.WX clc xchg frstor mov rcrl sbb sub imul and xchg rex.B addr32 fstl cld jne xor ss cmp push out mov xchg xchg xor lods cwtl rex.RB stc pop (bad) jle or cmp push sbb xchg rex.WRX xlat movslq add cld loope faddp jnp (bad) sbb jge fdivr rex.WRX or xchg add jmpq sbb xor jnp xchg movabs rex.WRX clc fistpll pop pop rex.RX add xchg cmp test jge jp mov pushq sahf and (bad) push scas (bad) jo sbb jnp outsl jl cmpl mov pop pushq retq stc (bad) (bad) loope (bad) mov jbe loop shrl data16 (bad) out roll rex (bad) xor mov mov out pop mov cwtl jrcxz (bad) (bad) movsl (bad) (bad) nop stos push cmp jl pushq out in rex.X sbb (bad) callq adc pop and imul add or pushq push mov mov (bad) push xorl xor (bad) (bad) push mov fsts mov iret cmpsb (bad) (bad) pop cmc cmc mov outsl push (bad) (bad) add mov rex.B idivl (bad) stc sbb nop jbe mov lods mov xchg lret cwtl cli mov (bad) jbe add ds (bad) push fnstenv sub pop or int loope and loop,pt cltd cmc cmp xchg rex.WRB repz rex.WX rex.R jmpq cwtl rex rex.WXB out xchg (bad) adc and cwtl lods (bad) scas (bad) and xchg xor gs insl mov lock fwait jge xchg cld xchg cltd and jl outsl cmp and sub sbb xchg pushq jne sub lock or cmp movabs or pop addl or pushq cmpl movabs rex.XB retq enterq add push cmp movabs clc mov pop push pop jge push fwait xor (bad) jbe jge addr32 xchg outsl pushq retq jb (bad) mov addl mov rex.RX cmovno jbe (bad) cmpsl add push jle cmp fldz lahf xchg or cltd clc mov (bad) (bad) pop mov imul movsb (bad) ja stos sub adc lret fwait cmp ror add (bad) xlat (bad) cmp mov sbb and cld pop rex.WRX pop (bad) (bad) (bad) cli sub or mov in and or pop jae cmpsl in or (bad) jl mov jb xor jle or or xor (bad) ja adc rex.RX in mov test xor sbb imul movabs (bad) xor nop adc mov pop (bad) jnp (bad) (bad) sbb mov rex.WX rex.WRB gs not cs rex.WB (bad) (bad) xchg cs mov xchg (bad) pop sahf cltd lret mov or adc (bad) jp ficom sbb test sbb (bad) (bad) rex.RB cmpsl pop add cltd add sub sbb test lock movslq (bad) xchg jbe rex.WRXB add outsb gs xrelease xchg xchg shr icebp insb rex.XB movsl mov jne or psrlw je jmp mov sahf outsl xor or (bad) (bad) xchg cmp (bad) imul cs cltd xlat rol mov rorb test push pop cltd callq xor xor enterq gs push scas (bad) sahf je rex int xchg in movabs loop or (bad) push (bad) lea cmp lahf xchg sbb mov jg in (bad) pop xchg sti mov stos rex.WB add xor (bad) cs nop push add loop rex.WX push (bad) es sbb sahf (bad) leaveq (bad) int3 jg (bad) addl (bad) out (bad) cmp push movabs rex.WX jae pushq sbb pop xchg sarl (bad) (bad) rex.RX addb mov pop pop jl xor pop popfq pop mov pop cmp add jnp mov xchg add pop mov (bad) rex.WX callq sbb (bad) mov in cmp mov xchg cltd nop jl adc sbb push xchg rex rex.WXB xchg pushq (bad) cmpsl or cld imul mov xchg retq pop (bad) pushq pop push jno push rex.X pop xlat xchg push xor mov xor ds adc xchg (bad) mov xchg rex.RXB sub mov (bad) jae lea pop rex (bad) lret xchg xlat nop (bad) pop hlt movswl (bad) (bad) jae sub repz xchg (bad) lea movslq (bad) sub sbb push popfq sub jne scas cld sti sub (bad) scas push push pop (bad) add push xchg or xor (bad) in (bad) adc and (bad) jae mov (bad) int3 (bad) push mov cld sbb jge push (bad) pop (bad) clc xchg cmp sarl or mov mov pushq mov sub and push lock outsl or cwtl mov (bad) sahf nop sbb cqto movabs adc pop sti je int3 stc callq sub (bad) (bad) mov (bad) and jbe leaveq fsts scas xchg ds adc nop pop mov lea jae cmpsl rex.WR hlt jp add (bad) adc in int gs rcll pushfq or and retq adcl (bad) mov (bad) mov rex.WRX (bad) push (bad) jae sub movslq jmpq stos mov add rex.B leaveq sub and (bad) cmc pop push xor jb rex.WRXB pop (bad) lods sbb rex.W jo addl rolb and xor xchg jg mov rex.X test rdtsc xor (bad) sbb (bad) rex.WRXB (bad) pop cmp ds adc test cmc clc push mov xchg and cmp (bad) outsb (bad) rex.XB lret je push in (bad) sub out (bad) (bad) mov fdivrl xchg cs mov mov (bad) lea sub cmpsb add mov pushq (bad) mov cs rex.WR out pop or jnp iret mov jmpq (bad) leaveq mov ja jae (bad) (bad) mov (bad) jno sahf lea and cld sub fimull (bad) sbb xor xor in add (bad) scas (bad) movslq mov (bad) (bad) movabs mov jge clc cmp (bad) jbe mov xchg movabs decl mov mov sahf xor mov fiaddl and retq rex.WX xlat leaveq in mov movabs push (bad) rex.X mov rex.W (bad) jne out cli movslq (bad) movabs (bad) scas loope rex.WR pop rex.R imul sub rex.R jrcxz leaveq mov and adc (bad) jbe jmp or mov (bad) movabs mov (bad) mov rex.WXB pop in nop sbb and loope push xor (bad) rex.WR sbb insb int adc push rex.X (bad) out retq sarl jl sub icebp xchg (bad) jmp xchg callq sahf or mov adc (bad) movabs xchg mov rex or imul and stos outsb hlt sbb popfq fwait retq sbbl mov out ud2 loop mul xor xchg std gs imul pop rex.WRXB jne xlat (bad) xchg sbb negb sub rex.B int ja adcl imul ficom push shrb out pop int3 add fcompl es outsl (bad) mov pushq in ds (bad) std pop pop nop and leaveq (bad) adcb rcrl lods int3 sarb hlt push mov rclb callq mov pop in rex.WRX rex.XB sbb ror cmc cwtl sbb (bad) (bad) data16 jle in xchg movabs (bad) rex.RB or xchg cli outsl out movabs xchg jbe or jno mov movsl cwtl cmp in jg rex.WRXB test popfq gs adc xchg mov cmp (bad) pop adc rex.R rex.RX insl lock hlt xchg (bad) out std jle iret (bad) rex.RXB in adc and mov push (bad) mov push rex.WXB sub xchg mov jnp xlat jmp jl sti mov out mov std mov mov mov mov movabs es (bad) add nop sub xchg rex.W cwtl jne cs push imull rex.X rex.B rex.RB sub xchg leaveq adc insb jb jp xchg xchg scas (bad) rex.RXB repz (bad) rorb (bad) ficom add in out push rclb data16 xor sbb (bad) mov imul xchg pushq sub xchg movsb int jo lods cli test rex.RXB jno xchg rex.WRXB mov xchg jmp sbb (bad) (bad) cmp fiaddl pop adc cmpsb stos add and xchg retq (bad) loopne stc push sahf add hlt xlat mov (bad) cli push jge jrcxz rex.RX lret subb fmull mov nop cmp cmp movabs push rex.X movslq xor (bad) movabs rex.WXB rex.RX xchg out (bad) out loopne sbb push pushfq (bad) cmp (bad) mov (bad) xlat sti sub push adcl (bad) iret mov xchg outsb ja sbb jrcxz,pn xchg jb popfq notl rex movsb or xchg in std xor callq pop or (bad) mov (bad) xchg popfq mov cmp rex.RB push xchg (bad) (bad) repz sbb mov or add divb rex.XB movsb rex.WRXB rex.RB jno stos xor mov movabs mov imull jns xchg cwtl xor cmp (bad) int imul enterq movsb mov shll test (bad) icebp rex.XB adc iret and sub scas and sub rex.RX rex.XB jge and mov cmpsb outsb pop xor test push jne (bad) push or push push mov sub add (bad) ja scas xchg mov rex.R jno sbb (bad) rex.WRB rex.RXB callq and mov (bad) idivb loop xchg es test fdivrs sub imull pushq push (bad) nop add ja stc fdivp gs retq (bad) and (bad) lea fxch imul fcoml int sti mov rex.XB pop hlt mov (bad) cmp rcrb xor lret pop sahf repz jns ljmp rex.RXB out mov pop insb rex.RX (bad) rclb xchg imul add insb (bad) outsl xlat xchg movabs fldenv popfq adc (bad) xlat (bad) jns sti (bad) xchg cmp jno in xchg shl fadds jl (bad) mov fwait out or cmc jnp jp clc pop jne faddl sub push jne jl (bad) push lods xchg jns sahf cmp and lods xchg callq sbbb xchg (bad) lock push enterq xor gs (bad) (bad) mov and mov retq mov (bad) scas rex.WRX cld (bad) (bad) pop rex.XB push loope rex rex.WRXB pushq std sahf stos pushfq (bad) (bad) xor jne (bad) cmp outsl xchg jge add add iret movsb xchg adcb jb,pt xchg (bad) rex.WX jmpq mov sbb mov cmc and icebp jo add cmp mov (bad) (bad) and sbb sti pop jno (bad) fstl rex.WRX rex.WR lahf xchg add rex.WX rex.WRXB gs (bad) rex.RXB movsl sbb xchg iret mov (bad) (bad) jp xchg adc rex xchg xchg movsb mov and jmpq xchg jl and in fwait jle jmpq (bad) add rex.WXB and rex.WRB jae xchg (bad) jl mov (bad) pushq retq pop and sub ja xor pushq xchg rex.WB push cld and rex.RB lock in sub and pextrw mov mov (bad) or (bad) xor (bad) lock callq (bad) rorb mov loop xchg repz addl mov (bad) (bad) jo xchg cmpsb adc xchg js lret pop mov add sarb pop pop stos and cmpsl jae xor test cmp sahf push push cmp cmp push cmpsb cmp insb adc mov callq rex.WX and jns imul fisubl lret sub (bad) popfq lcall push lahf test mov rorb xchg pushq (bad) stc jge fdiv test movabs and xchg and mov and mov xchg cmp mov add movabs mov fisttpll ja rex.WRB rex.RXB lock mov fsts pushfq pop (bad) rex.WRX mov addr32 cltd vcvtsi2sdl (bad) xor rcr rex.W lret rex.WXB pushfq movsb hlt in test xchg movabs pop jne pop movabs add fcoml xlat shll sarl pop (bad) jbe adc jnp mov popfq xchg cmc outsb rex.B jg lods or sub jl rex.RXB rex.XB mov adc mov (bad) nop xchg jmp gs push adc rex.RB mov pop stos rcrl or movabs setb pop int3 xchg lahf xchg (bad) (bad) and fcmovu cwtl add xchg scas fimul sub icebp pop movabs negl fcomps cmp outsl insl (bad) adc fidivl xchg xchg xor push vmulss ja movabs test imull movslq movabs test retq sbb jno xchg (bad) sbb shll (bad) jne jns mov inc sub mov jbe scas xchg adc and rex.R xor (bad) (bad) mov xchg cmp popfq (bad) mov mov jrcxz xor lret push lret add pop sbb push lahf std or xor pop sub jmp lods mov pop sahf addr32 (bad) es stos cld (bad) test cmp or (bad) xchg jo (bad) mov xor xchg push rcr jmp rex.R rorb lock mov out out push (bad) cmp (bad) rex.WXB in sbb mov (bad) rep movsl pop rex.WX jns mov xchg (bad) (bad) hlt jne (bad) lea sub (bad) rex.WRXB (bad) lahf xor lods xchg incb lods mov push cmp sub xchg je mov rex.WX fcmovnbe sahf movabs movsl xchg (bad) (bad) mov adc (bad) cltd shlb (bad) lea sub pushq int xor decb rex.WXB repz mov sub cmpsl pushq in rcl cmp and xchg ss xchg adc sbb sbb sub mov (bad) jle test retq pop mov jae xchg mov jne faddl fimull cmp shlb sahf and (bad) adc lret fs imul adc xchg or fisubrl mull outsl jbe sar cltd rex.WR movabs xor jb cmp mov and fiaddl (bad) outsl cmp xor adc jne rex.WXB fnstsw pushfq mov popfq sbb cmp rex.WRX imul rex.WXB pop adc jmp pushq loope sbb sub stos rex.WXB fs and sahf movabs cmp sbb cwtl movsl movabs cmp or cwtl loopne cmp add cmp mov rex.WX sti movabs repnz or fsubrl pop sbbb mov movsl movsb push or pop rex.WRXB scas in (bad) insb je (bad) sub movabs add cmp xchg and rex.WRB callq (bad) (bad) xchg (bad) rex.WXB mov rcr mov jmp or xchg and cs fisubr out pushq insl push iret xchg mov push (bad) jge mov pop sub rex.WRXB (bad) adc ss rex.WXB mov pop jbe (bad) cmp cld lods movabs cmpsl (bad) fisttp ja (bad) callq xchg loop andb jge repnz pop stos cwtl rex.XB jrcxz ficom scas loope push (bad) (bad) adc lahf (bad) mov movabs cmp loop (bad) cmp cmp mov xchg cltd add adc jge rex.X (bad) or xchg (bad) pop adc out (bad) and adc movslq movslq push xor rex.R js (bad) cwtl (bad) cmp mov out or xchg rorb insl sti xchg jmpq (bad) cmc or rex mov pop stos hlt and pcmpgtw clc (bad) xor xchg (bad) add push jne xchg mov retq (bad) mul mov rex.WB push (bad) mov (bad) repnz push xchg xor jns sub xchg push lahf cld rex.WR rex.WRXB std jae xchg add movabs cmp xchg xchg hlt (bad) or nop in xchg pop (bad) outsb leaveq and xor push mov rex.R movslq pop outsb jae movsb and (bad) sub cmpsl out xchg movabs (bad) mov rex.WRXB stos in pushq mov in rorb jp jle xchg sub mov je sub xchg idivl cmp idivb test imul sub sub (bad) lret xchg mov sahf mov popfq stos out add adc pop scas mov sub rcl cmpsb cwtl insb (bad) mov or sahf xchg lahf push mov rex.WRB movabs sub (bad) rex.R sahf (bad) je add mov pop mov imul (bad) jno rex.B clc (bad) xchg pop outsl (bad) xchg (bad) xor sub scas fwait cs lods out fdivrl (bad) (bad) jmpq (bad) jo push (bad) lret rex.X sbb (bad) push cmp mov lods jbe (bad) mov mov push (bad) imulb cmp nop mov sub clc mov sub mov (bad) xchg sbb jb xchg cwtl mov ja and (bad) lods (bad) sbb xchg push sarb (bad) movabs test xchg sbb cltd sahf (bad) add gs (bad) test scas int3 (bad) and lock cmp push pushq mov fisub (bad) or rex.X jns scas (bad) adc insb (bad) mov mov (bad) negl jb add cmpsb cli rex.WRB (bad) mov insl (bad) (bad) cwtl repz or or sarl (bad) ss adc mov mov cmp sub repnz std (bad) (bad) addb lock pushfq sti rolb popfq mov cmp nop sub mov jno mov xchg xor (bad) fcom cmp sub or movslq mov add (bad) (bad) (bad) mov shrb sub cli sti mov ficomp add (bad) xchg sahf jb movabs rex.RXB repz stos rex.W in mov jno xlat fwait mov and mov mov (bad) push (bad) nop lea (bad) ljmp sarl jmp mov cmp xchg add (bad) and pop stos movabs (bad) xchg rex.W rex.WRX rorb push (bad) in mov sbb adc (bad) mov gs (bad) in push adc repz out mov psubsb (bad) mov sti adcl vmovq (bad) (bad) or add cmc mov sub rex.WXB xor push sbb outsl rex.RXB jmp loope mov mov fisubrl rex.WRX loop rex.WRX xor pop vpaddb (bad) mov rex.W xchg (bad) rex.WXB lea (bad) xchg adc rex.WRX std (bad) mov (bad) push mov test test (bad) sbb fsts out or xor scas (bad) imul (bad) loop mov mov (bad) ss (bad) callq adc jg mov loop mov jge lea jp icebp nop lea movabs test (bad) push (bad) xchg add int repnz loopne push adc sub mov pop jmp xor je push mov cld jno addl mov and fwait mov xchg (bad) fcoms rex.WB xchg and mov (bad) rex.WRXB gs (bad) mov xchg callq xchg xor pushfq rcl out enterq fist shr rex.WXB movsl pop sub sti adc or movslq (bad) nop and add sub (bad) push xor mov and idivb je movabs xchg faddl push add (bad) xchg (bad) (bad) cmp xchg pop faddl pop cwtl rex.WRX jmpq jge sbbl out cmpsl or cli mov xor scas sahf fsubs stc xor (bad) jns movabs jmpq insb xchg or pop mov jno lock fs rcll (bad) test sbb or cld out (bad) insl rclb mov xchg (bad) je lea (bad) jle movabs jl (bad) fiaddl outsl fs stc adc add xchg xchg fwait sub lock rorb mov xchg mov mov mov shrb (bad) and rcll (bad) movabs xchg mov enterq mov xchg movabs adc jo xchg movabs (bad) mov mov enterq vfmsub231sd imul push sbbl (bad) and fsubrs mov xchg andl movabs (bad) sahf rol cmpsb pop fisttpll (bad) insb pop xchg data16 leaveq movabs repnz mov cwtl jg ja in (bad) lret cmp or lea add test (bad) (bad) imul fstpl add (bad) sbb (bad) add rex.B rex.XB rex.WRB movsl and callq loop (bad) ficomp test cmpsb in nop test loope jbe jg cmpsb xor vsubsd (bad) in jne sbb seta mov std fcmove insl pop imull loope add xchg pop (bad) adcl popfq rolb out nop lahf sti (bad) rex mov out (bad) pushfq gs subl jrcxz xchg adc int3 adc push mov leaveq lea push cmp push icebp cmp push movabs xchg mov rex.RB (bad) repz (bad) xchg mov movsb xor jae lea movabs or adc xchg rex.WX cmpl cli xchg (bad) notb fs jnp movabs push pop sbb cmp and sbb pushfq (bad) cmp (bad) xor rex.WRB out retq jmpq andnps (bad) xor rex.WB insl adc rex.RXB inc xchg rex.R fs cld jo mov fcmovb sbb (bad) jmpq or test fisubr lahf push out sub loopne or and in pop test rex.R sub stos xor iret in sbb (bad) mov (bad) jo pop rex.WRXB rex.RX out push jb mov cltd mov xchg nop sbb insl test imul pushq rex.WB repz cltd je cli add cmpsb mov sarb popfq sub rex.WXB popfq (bad) rex and (bad) xor (bad) cltd adc pop xchg je (bad) and xchg movabs pushq mov ja mov rex.RX jge cmpsl adc scas pop imul or (bad) sbb lea jmp data16 (bad) test (bad) xchg adc adc lahf (bad) rex.WRXB or xor cli movsl div pop sub xor mov enterq mov out (bad) int3 xchg cmp mov retq fwait xor and jg mov (bad) xor lea (bad) or (bad) jb (bad) mov add add mov pop movabs (bad) lods mov lret cmp out rcll rex.WXB (bad) pop (bad) scas pop mov lods cs pushq sub repz and (bad) fnsave (bad) scas movsl cmp insb xchg push cltd cli xchg pop pushq sub pop (bad) out or (bad) xchg or loopne xchg jnp push xchg popfq mov and cmp mov (bad) fucom (bad) cmp repz jne sub cmp and sbb mov orl ss jg push hlt sub popfq rcrb loop cmp movabs (bad) adc cwtl stos shr (bad) test test fwait xorl (bad) (bad) movslq push (bad) (bad) rex.R cmp int3 ds pop or or cmp rex.RXB rex.W sbb (bad) out jno insl xchg mov jl ss xchg rex.W pop test jns xchg in clc pop or and loop cwtl out (bad) fxam xchg (bad) int3 xchg (bad) mov mov xchg mov pop cmp loop out xlat (bad) movabs or mov imul (bad) xchg (bad) (bad) (bad) (bad) (bad) (bad) jmpq (bad) xchg ss push cwtl lea popfq fldcw jge (bad) or pop inc movsl add mov mov movabs and add (bad) outsl pop retq mov lea rex.W push imul jnp push or fwait (bad) cli sub push jbe rolb mov pop jae add (bad) rex.XB adc and adc (bad) in lea mov pop jrcxz sbb adc xchg (bad) mov (bad) pushq icebp rex.X movsl cmp imul mov sub repz int lret test mov mov xchg fcoml lea xchg std xchg (bad) pushfq mov retq (bad) xchg out repnz test xchg sbb lret adc xor sbb leaveq push (bad) test clc mov (bad) adc (bad) push cli mov jle stos nop in mov ja mov xchg (bad) (bad) jmp lret ljmp out rex.X xchg push movabs cltd lods jns xlat test cwtl xchg cmp loope pop add (bad) xchg nop test imul out sahf adc rex.RX lea xor stc loopne mov adc addr32 or movslq sub jo sbb mov hlt xchg rorl and cwtl sbb rex.RXB pop repz (bad) sar xchg jg xchg movabs jb outsb (bad) push fnstenv xchg (bad) jmp add stos xlat pop int fs int3 cwtl (bad) sub loopne (bad) movsb rex.WX (bad) sahf sub in cmpsb frstor mov (bad) or (bad) imul movabs mov mov movabs cmp out fldcw lock cmpsb ficompl xchg adc in movabs jp mov adc fstps lahf jge xchg fwait mov stos push cmp xchg or adc lods iret (bad) cmpsb rex.RB xchg scas ss addr32 fsts test (bad) fwait xchg (bad) insl (bad) nop (bad) rex.WRX (bad) jge jne sahf mov pop scas sahf sbb addr32 out xchg mov std (bad) int rolb imull cmc xor (bad) xor outsl mov in rex.WR xchg fsubrl jbe mov jg sahf (bad) (bad) out repz pop rex.RXB (bad) test test nop movabs cltd (bad) push rex.XB es int rex.R mov fstl xchg jle stos cmp jo (bad) jg and movsb rex.RXB subb pop ficom xchg (bad) rex.RXB movsl outsl push (bad) imul push rex.WRXB jg cmpsl xor cmpl (bad) fisubl enterq lahf iret mov movabs (bad) icebp ds mov imul xchg jb or (bad) in outsl xchg add (bad) in (bad) xchg cs mull xchg sub (bad) repnz outsb xchg sub pushq and popfq and out xlat push xor jb leaveq cmpsl jle cmp xchg push jae data16 (bad) pop movabs mov test (bad) rex.WR (bad) xchg cld (bad) movsb retq lret sbb (bad) jrcxz pop xchg xchg mov jne push divl fiaddl add jmpq cmp jno xchg xchg jle (bad) mov xchg xchg sbb and xchg movabs mov ja imul cmc push pop sub adc mov add (bad) mov add loopne jnp rex.WX xor clc push (bad) rex.WXB xlat add out or jb adc popfq xlat lock mov sahf movabs xchg cmp sarb mov enterq xchg mov (bad) mov (bad) (bad) in add prefetch or movabs or clc mov jno leaveq xchg rol mov movsl xor (bad) stos (bad) mov gs and std adc xchg xchg xchg adc sahf movslq jp imull cld repz (bad) (bad) rex.X rex.WRXB rex adc (bad) stc insl repz xchg xlat mov push mov sub mov adc cmp xor push repz lret mov rex.R rex.WRB outsl (bad) in rcll xchg popfq jg stos (bad) cmp int (bad) rex.RXB repz mov in movsb rex int jae or adcl loop rex.WXB rex.RXB fmuls out loope pop cmpl (bad) out jo int3 jmpq sti jb (bad) movsl xchg movabs clc leaveq jmp in (bad) fwait mov fwait push cmpsl add xor int out jmpq mov movsb (bad) or (bad) xchg rex.WR rex.W pop andl xchg callq (bad) (bad) pop rcrl (bad) cmpsb (bad) cmp xchg addr32 pushq xchg (bad) sub jp loopne xchg xchg adc mov push movabs (bad) movabs mov in jno enterq mov xchg movabs (bad) (bad) pushfq sub jns mov test sub sbb sub adc rcrl xchg (bad) (bad) add cwtl ds (bad) (bad) mov xor (bad) sbb xchg cltd jmp je or out (bad) xlat fiaddl movabs lods lcall (bad) push out pop cmp (bad) pushq imul rex.WB fidivr repz or ficoml rex.WX in jmp (bad) callq mov and test stos in mov xchg fwait int3 (bad) lret sbb sahf test repz xor (bad) (bad) es movabs int xchg (bad) cmp xchg scas insb jne push add pushfq icebp loope mov jl mov add (bad) pop (bad) in loopne (bad) enterq sbb nop pop gs movabs (bad) hlt xchg jle adcl repz pop fxch (bad) ds (bad) (bad) (bad) xorl stos sbb in sbb push fisttpl ss mov (bad) gs in scas xchg adc rex.WXB loope jge ja test idiv cltd mov ficoml pop lahf pop seta stc imul cltd or fwait mov xlat adc insl mov sub adc fnstenv (bad) rex.WRB pandn push movabs and xchg (bad) (bad) movabs stos sub sti sub (bad) xchg loope out sbb and stos rex.WB (bad) adc (bad) jle,pn std int xchg cwtl lret cli rex.XB ss fwait mov mov cmp xchg xor (bad) cs mov lea and (bad) (bad) (bad) cmp mov stc outsb pushfq sub (bad) cwtl sub cmc (bad) jrcxz cwtl (bad) rcrw xchg cmpsl push jno insl sbb xchg add xor add popfq xchg rex pushfq xchg rex.R jns clc sahf (bad) xchg (bad) fs mov mov fistl (bad) adc xchg es cwtl or movabs mov (bad) cmp xchg addb lea sbbb (bad) movabs push add int3 mov sbb (bad) sub xchg cld mov (bad) ficoml cmp push jg,pt out pop negl cmc pushfq (bad) mov fcomps (bad) insl cwtl cmp xlat movabs mov xchg rex.WRXB cwtl cmpsb (bad) mov sahf mov stc movsl (bad) rex sahf insl (bad) and movabs rcr movsb fist es cmpsl xchg mov adc mov int data16 pushfq leaveq retq xchg mov lahf mov lahf cmp fmull jp lea mov in xchg (bad) retq jge sub mov push gs mov rcll push fldenv jg sub xchg xchg jl incb mov sti rex.WX xchg lods xchg cmp sub (bad) mov retq insl cmp fstpl adc or subl (bad) xchg cmpsb xor je out adc add mov (bad) out ja adc xchg rex.WX xor cwtl int3 (bad) adc ja fdivrl movabs rcrl rex.WRXB lock jne cld std (bad) (bad) (bad) pop jl imul jp callq scas rex.WX repnz sbb cmp xchg (bad) ss fs ficomp add or mov movsb xorl adc pop fistpl (bad) (bad) out mov sahf in rcll jae sbb rex.XB sub mov rex.WRX data16 outsl xchg pushq xchg or movabs (bad) (bad) mov js outsl enterq test jnp addr32 pushq xchg fimull sti pushq adc (bad) or repnz rex.W bndstx (bad) movslq sbb pop movsb movslq mov callq and (bad) xor retq pop mov mov movslq pop rex.WXB or xchg imul xchg mov imul rex rex.WRX rorb (bad) andl test shl sbb js mov mov rclb test (bad) xchg jae xchg xchg fiadd fisttpll cltd sub rex.WRXB fwait and lods (bad) enterq nop xchg sub test je out mov jbe fsubrs xor push pop xchg sahf enterq or scas xchg decb clc rex.RB iret rex.WB (bad) sbb jno repnz pop out jno xchg lret loop or xchg mov cwtl jns mov cltd (bad) rex.WB rex.WRXB xchg sti movabs lea cmc fidiv jae iret movsb outsl movabs ljmp jnp rex.WX rex.WX cmp mov negl add (bad) (bad) add xchg xor js rex.WX retq lahf nop mov mov std fs (bad) cmpsl popfq scas out rex.WXB add push and sahf je cltd mov in clc xchg rex.XB data16 rex.WRXB xchg jnp (bad) jle mov (bad) xchg (bad) mov movsb cld out mov xchg fdivs sub insl rcr adc mov loope xchg imul cmp add mov rcr ja xchg gs fsubp rex.WRX scas (bad) jne out mov cmp xchg outsl and jae rex.WR xchg pushfq jbe in jo sbb rex.WRX pushq mov adc xchg and cmp lea xchg sub adcl sbb repz out sub mov sahf push orl nop (bad) pop jbe xchg cmp jnp cwtl sbb xchg test fisttpll (bad) sahf outsl and jb mov jne adc in rex.WRB xchg xchg xchg cs cmpsl (bad) insb mov adc and pop sti xor sbb pop add imul nop mov (bad) xchg hlt and (bad) (bad) imul rex.RXB or adc negb (bad) adc (bad) fdivl xchg adc push mov pushq scas rex.RX adc enterq in (bad) push std (bad) imul movabs sub or jae vpsubw rex.X data16 sub xchg mov cmpsl out (bad) clc and xchg add mov (bad) std out movabs jbe sbb cmp xchg (bad) sbb pushfq lea loope rcrl callq (bad) cltd (bad) mov rex.WX rex.X sahf adc jo (bad) xchg (bad) movslq add rex.WXB movabs imul xchg (bad) pop rex.WRB ds iret rex.WX in ja jns mov loopne pushfq xchg movsb sub cld nop imul sub xchg add gs (bad) add adc cmpsl jg and fchs insb fwait (bad) add (bad) mov outsl ja and sbb jg sbb stos rex.R sti movslq lods ficompl cmp add jge pop pop rex.WRB je jbe es jmpq xchg (bad) adc add jp mov or data16 pop fstpl (bad) pushq fsubr jle retq mov jp and jrcxz insb sub (bad) iret (bad) lods (bad) (bad) xchg mov and popfq shl gs mov shrd add xor (bad) (bad) mov callq insl (bad) sbb xchg movsb mov (bad) xchg popfq lret in and mov (bad) push fnsave movabs pop movabs clc jbe (bad) adc lock leaveq out xchg adc rex.R mov sbb pushfq addr32 sub mov add rex.WXB sbb (bad) push incl jle xlat xchg mov jmp (bad) jbe cmpsb add add jno (bad) sbb mov mov (bad) in fwait movabs add rex.WRXB (bad) leaveq jns lcall xchg mov xor rorl xchg pop cld (bad) out cmp cwtl cwtl shlb repnz retq mov sub loope pushq rcrb lea fwait jb and xchg add lret lea xchg and lret popfq scas es mov (bad) stos movslq xor push int mov cmp xchg rex mov int3 xor pushq mov cmp retq shr mov (bad) pop mov mov mov xchg js or xchg (bad) jne mov fiadd cmp or shll mov hlt in enterq in mov push stos movabs sub adc addr32 movabs jl out pushfq and (bad) imul and add ss (bad) sahf jne jno and sbb (bad) add xlat cld fdivp pushq rex.RB cld lea (bad) (bad) (bad) movsb (bad) pop add fidiv xor xchg (bad) int (bad) pushq lock (bad) (bad) pop flds cmp test cmp (bad) in fwait jmp addb add (bad) stc and cmp incl imulb (bad) test jne and rorb add scas out mov mov out pushq punpcklwd or pop xchg or stc and jg rex.WX adc rex.R rex.WRXB add cmp cmc xchg mov cmp cmp (bad) sub (bad) push rex.WXB push (bad) (bad) (bad) sahf jg cltd loopne out xchg and push pop in repz or xchg divb cmc pop jne and or mov mov pushfq (bad) mov or (bad) xchg ficom (bad) seta jo xchg outsb pushq (bad) mov rex.WX push or sub leaveq out rex.W ss xchg xchg sbb pop rex.RX push fldenv sbb (bad) cmp mov jl (bad) mov or (bad) jnp mov xchg (bad) sbb adc xchg pushq (bad) (bad) mov pop fwait sbbl rex.RXB cmp ja (bad) mov sbb xchg jge sub test ds mov repz je loop (bad) (bad) fadd negl or (bad) (bad) rex rex.RX scas push xchg jne int3 test xchg movabs pop (bad) xchg rex.XB add xchg lods out adc push mov out mov push mov imul rex xlat pop (bad) mov and jrcxz add sahf rcrl data16 (bad) adc and clc mov jmp cmpsq cli sub jge outsl or xor add push callq iret (bad) xchg jne (bad) movabs jrcxz and rex.B loope and loopne add nop mov rex.WRX xchg fcmove jnp cmc jo mov mov scas pop or sarl sub clc adc int xchg push rex.W xchg stc (bad) or xchg movabs and retq cmp xchg sbb (bad) rex.R (bad) rex.WRXB (bad) mov sbb and sbb mov idivl xor outsl loop mov xchg enterq sub (bad) add (bad) jns es (bad) sub jp je (bad) xorl and and es sub xchg (bad) lods jmp rex.XB rex.W rex.WRX lret pop movsb pop xchg and mov sbb fidiv (bad) fnstenv (bad) mov cwtl sub (bad) and rex.XB mov hlt stos sub push sahf loopne test out sub (bad) xchg pop icebp jl pop sbb rex.WR xor lock jns push xchg or and (bad) jg imul lods cmp lods or push xchg mov cld or fwait test movsb icebp (bad) sub sahf pop cmp push rex.RX (bad) jo xchg imul adc (bad) movabs (bad) cltd jae xchg outsl test xchg shrb mov (bad) insl xchg sub js rorl add movslq sbbb (bad) sub (bad) xor xchg mov sub iret sub mov sub (bad) (bad) outsl (bad) or shl (bad) xor (bad) (bad) mov (bad) cmp jns shrl gs mov scas pop push adc in out bsf movabs rex.WRX lret (bad) xchg (bad) stos mov retq xchg test (bad) jbe lock orb adc paddw pop sub xor xchg and xchg cmp cltd fisubl fnop jnp rex.WR leaveq push xchg push (bad) movsb hlt outsl (bad) (bad) sbb pinsrw je xchg mov callq jp int3 xchg loope in cwtl jno push pushq pop notl (bad) cli outsb (bad) xchg xor xchg jg xchg mov in adc fistl adc testb sub mov stos jl test int3 mov pushq mov xchg (bad) push (bad) cmp push jmpq (bad) int3 xchg or (bad) (bad) rex.WRB mov sbb cmpsb jmp xchg (bad) mov scas rex.B cmpsl xchg xor stc (bad) (bad) movsb rcll cmp (bad) jae xchg pop lret (bad) jo xchg adc push jo fsubs and fldl2e and add pushfq shrb rex scas rex.WRXB rex.B and sub test fwait push cmp out mov gs mov cld ja addr32 and and xor enterq mov outsb xchg cmp stos (bad) movabs sub rclb lret xor rex.WRB repnz rex.WB xchg mov sti xchg (bad) outsb xor cmp and addr32 iret rdpmc movslq push mov retq movabs and test jbe cld jmp test ficom out (bad) (bad) ficom retq shl enterq rex.WRX xchg pushq and and (bad) sbb (bad) sahf sbb and sub gs push pushfq jo xchg movsl (bad) rol rclb movabs in mov or (bad) rclb lock add or insl sahf in sar pushfq rex.WX push (bad) stos push jo jns (bad) mov xlat mov (bad) xchg outsb test or cmp cmp out xchg sahf (bad) pushfq bnd adc lea scas adc xchg bnd (bad) pop (bad) xchg mov and jp cli imul adc pop fmuls xchg ja mov scas sub cltd xor out outsl and gs xchg sub (bad) rex.WR data16 ficom lret jmpq loope jno (bad) mov cmp sahf and lods cld movslq stos adc xchg insl xor sbb cltd cwtl lcall fisubrl (bad) jne pop xorb xchg or cld rex.W rex.R fucomip in xchg xlat pop outsb (bad) (bad) in mov xchg je push rex.WR xchg (bad) cwtl xchg imul cmp (bad) (bad) ds sub jge leaveq mov lret pop (bad) in movsl fistl out fstl xor ljmp adc es lret jb outsl test xchg mov cli jle retq (bad) push cmp xchg xor and insl rcll (bad) in mov outsl and add mov retq rorb xchg lret cmp xchg push retq popfq mov add (bad) imul insl jbe xchg mov je jno mov (bad) mov jmp push xchg jle jmpq stos xchg callq xlat or cltd (bad) mov ss add adc faddp push int3 jp jmp rcll js sbb mov rcrl stos nop retq jge cmp xchg fs stc push sbb jns lret repz rorl callq xchg push xchg (bad) in or retq movabs scas jp and cltd orb xchg sub int3 std (bad) lret nop ss test jne repz mov rex.WRB in mov cmp jne rex.RB callq xchg cli (bad) cs cmp (bad) cld jns sub popfq test repnz cld or sahf adc cmp jno pop cs rex.RXB fcmove sub ja rex mov jbe lea fbld (bad) adc sub xor cwtl xor (bad) not adc out addr32 xchg (bad) jns pop rex.R fistl xor mov outsb imul xor pop and fist (bad) movabs cmc lahf lea mov (bad) rex.RX jle,pn rex.WRB sbb push mov add nop (bad) mov (bad) ja push (bad) (bad) movsl jmp push std stos shlb callq mov loopne cwtl mov and or mov (bad) mov xchg (bad) rex.WX icebp (bad) fbld adc imul or callq int fistpll rex.WRXB sub rex.R loopne test callq xchg fidivl imul (bad) xlat rex.RX (bad) jl pop and pushq cmpsl fadds sarl (bad) (bad) rcrl imul rex.RXB cmc pop pcmpeqb lock (bad) xchg mov rex.WRXB xchg sub in lods xchg sub lret (bad) fs (bad) pop push jp jbe mov pop jb scas notl lea pop (bad) sahf jl xchg mov xchg movabs mov movabs movsl sbb (bad) gs retq or mov outsl in (bad) xchg in xchg pop pop jo (bad) (bad) (bad) data16 rex.RX pop popfq pushfq (bad) pushq cmc fmul fimul rex.XB and (bad) rex.WB (bad) xor mov rex.RB and insb out xor jmpq ficompl mov jl jge movslq lahf rex.RXB jbe xchg xchg cs (bad) (bad) (bad) mov rex.RXB mov xchg push (bad) adc mov rex.W or loop sbbl cmp (bad) in (bad) out stc pop (bad) (bad) (bad) and xor jle mov movslq and sub sbb pop lret xchg scas fldl insb xor cli jns xlat adcl (bad) test sbb or scas clc cmpsl lahf jmpq sbb (bad) std ficoml xchg mov cli mov out cwtl fnstenv sub mov jae (bad) cmpsb pushq test cmp cmp clc andl es mov movsb (bad) mov callq rex.WXB pop add xchg cmpsb lret enterq (bad) xchg (bad) jg cli scas (bad) add pushfq mov xchg nop stos repnz movsl xchg lret or fsts and mov xchg fildl int3 cmpsb rex.WR (bad) sbb icebp movslq xchg mov (bad) and xor (bad) (bad) mul cltd mov jl push movabs lods rex.R fsts push shrb scas out mov jmpq std mov xor sahf fwait int mov test jrcxz icebp (bad) cmc mov sbb nop pushfq cmp cmp (bad) lods movabs jb xor jb jmp test mov xchg es cmp lahf mov data16 mov sbb jno xchg mov jae leaveq fldcw jg rex.RX mov mov leaveq movslq js pop shr (bad) cmpsb (bad) and (bad) (bad) and and push lret popfq loop xchg (bad) jrcxz fs movsl jge mov jno cwtl icebp push enterq ficoml add rex.WB (bad) pushq add xchg xchg mov adcb icebp sbb fiaddl stc jo es callq jge stos (bad) repz xchg movabs jmp or (bad) int3 insl cmp movsl mov and negb test fwait test cmp outsb sub mov xor callq clc mov loope movabs insl sbb data16 sub movabs and xchg (bad) rex.W jb pop pushq lret mov adc and xchg movsl push cmpsl cmp outsb mov in xchg rex.XB sub sbb lods test testb outsl movabs fstpl fidivr mov rex.WB sahf fcomps jb (bad) mov mov cwtl sbb xchg lret xchg (bad) jo xlat idiv fisubl out fcoml push cmp cli movsl mov cmp xor pop repnz push andl mov (bad) sahf xor xchg mov adc xchg iret loop jl and add in xchg pushq retq jp pop xchg adc jno mov sbb (bad) xor mov xor movabs pop fildl cwtl out mov lahf mov and sub sbbb xorb fwait push mov packuswb pop jp push lret nop (bad) outsl cmpsl repz adc clc fstpl add in jmp push imul clc or loope es xchg add std jmp (bad) pushfq cmp cmc movsb jbe and rex.R jle,pn jb xor out add (bad) out lods int test xor sub sub data16 (bad) imul psrlq sahf scas xchg in push fildll xchg pop mov cltd jno divb adc in jmp xchg xchg (bad) adc adc mov push (bad) pop and or lock rex.WR mov sahf jmp pushq (bad) cmc cs cli xor sbb sbb sub lret stos pushfq xchg loop rex.R push jl and mov sub lret lock jmp xchg ds mov mov (bad) (bad) cmpsl mov (bad) sbb popfq and xchg ss enterq adc std sbb nop xor fimull rex.WB pushq mov mov mov sub js fwait cli popfq idivl std mov and (bad) scas mov xchg push cmp mov sti sub movsb xchg mov (bad) add scas or (bad) and xchg rex.XB sti mov jg xchg out movsl or xor mov jle mov stos sub out or add (bad) lar mov xchg mov (bad) test loop xchg add cld test fldenv lahf rex.WX and xor fstpt leaveq (bad) xchg and rcll and (bad) mov cmpsl xlat (bad) rex.WX (bad) loope xor (bad) sub mov data16 pop push (bad) jbe add xchg rex.WXB in out enterq rex.WXB cmpsl rex.WRB in (bad) sahf add movsl repz fisub jns (bad) or sub (bad) pushq mov sub adc mov stos push xchg (bad) movabs iret loop fisubrl (bad) cmc roll rcr rex.RX int in xchg xchg enterq pushq (bad) cltd lea movabs test (bad) sub mov and adc lea fimul imul jno (bad) incb mov (bad) sahf cmp sbb fwait cmpsl clc xor or mov xchg sub scas rcrb divb (bad) sbb and cltd cs comiss fisubr or adc rex.RB rex.WX repz rex.RXB rex.WR fisubrl es rex.X adc repz cltd nop por cmpsl ror and xor xchg movabs fs inc add push cli jbe out rcrl pushq rcrb xchg stc pop mov xchg movabs pushfq jl shrl push rcll sbb fidivr js fldcw (bad) push add cmp out or leaveq (bad) xchg xchg (bad) fcmovbe lock mov add xchg pop push or stc (bad) rex.RX mov test jge cmp push outsb mov nop fnstenv mov pop movabs es stc movabs jg icebp test nop scas adc idivl adc rex.RXB rex.WXB xchg in fisubrl or (bad) (bad) xchg movslq stos rex.B (bad) rolb out rex.RXB ja sbbb sahf cmpsb es xchg jne cmp adc or cmp rex.XB es jle xchg js movsb and and fcoml xchg xchg out adc movabs fwait (bad) movabs xchg jrcxz sbb movabs ss (bad) adc jns and pushfq sbb int3 (bad) (bad) (bad) xor rex.WR mov or rex.RXB scas and movsl lret pop xchg xchg shl add sub (bad) mov (bad) xlat sub jmpq ja jmp mov enterq push jl pop (bad) adc mov (bad) sarb test pop retq adc int xchg (bad) (bad) retq pushq (bad) (bad) or stos pop rex.XB (bad) (bad) xor push shl enterq rex fisttp jno lea xchg sub xchg out roll fnsave xchg (bad) outsb js adc outsl mov leaveq stos mov rex.WXB add jnp (bad) out stc gs rex.XB (bad) (bad) jns andb sbb outsb cmp xchg sbb cmp xchg movabs addr32 paddsw fimul shl (bad) mov jp (bad) (bad) rex.WB rex.WRB jmpq sbb pop movabs (bad) pop stos jno fcoms scas xchg (bad) pop (bad) push fimul ja and jmp jp mov (bad) sbb and (bad) sarw pushfq stos xor in jns sahf out rcrb xchg xchg fnstsw or and xor rex.WX notb rorl add cmpsl mov xchg out and stc int stos loopne xchg fstpl (bad) cmp fidiv jmp xlat fsubrl sub subl cmp in jge mov (bad) mov notl imul xor lret ss scas (bad) cwtl rex.WR cs pop ja cmp out decl pop jmpq xchg nop (bad) imul sarb xchg cmpsb and pushq ficomp out push cs loopne cld sahf mov movsl (bad) adc xchg mov jmp (bad) ficoml xchg ficoml sbbb in in xchg (bad) xchg sub (bad) xchg (bad) push je (bad) (bad) cmp push add fcompl jo rcll or ficom sub sub xchg mov and fnstenv xchg jg mov sahf xorl pop scas xchg cli or lock mov (bad) sbb cltd (bad) xor sbb (bad) imul (bad) (bad) add movabs (bad) nop sbb xor sbbl xchg sti and (bad) fimul rex.XB mov movslq sbb xchg cli push cwtl or cmp cwtl loope push (bad) insb xchg mov es xchg and xchg fildl je xchg add or xlat sbb (bad) xchg out shll ds sub sti rcll fstpl xor xchg pushq (bad) hlt ljmp pop in sahf pop adc imul rex.WRB adc add leaveq rex.WRXB (bad) (bad) xchg ss rex.RXB xchg outsb sbb (bad) (bad) pushfq jge or rex.WRXB test jle sub xchg sbb sub lret movabs in mov rex.RX negb jp in or scas ja cltd adcb adc xor xchg sub xor add lock fsubrs (bad) xchg (bad) iret in xchg xchg cmpsb xchg mov sbb jrcxz (bad) imul rcrl leaveq mov mov js and sub push cmc xlat movslq xchg xor lea add (bad) xchg cltd movsl (bad) jne loope pop std addr32 stos (bad) or pop xchg (bad) rex.WRXB add imul pop je xor int3 add js cld pop insb jno (bad) out loope rex.WRX rex.WRX (bad) add adc cmp xor (bad) (bad) stos out push mov shlw (bad) rex.WRX and xlat pop xlat (bad) nop pop sbb jmp cmp movabs mov mov clc fidivr movabs movsb rex.WB movsb movabs (bad) (bad) cmp jne pop cwtl adc imul movabs rex.B cmp mov pop int3 cmp mov and in rcl push add cltd xor xchg xchg xchg (bad) jae mov (bad) rex.WR (bad) (bad) (bad) pushq addr32 sub cwtl (bad) pop movslq test scas or (bad) and fistpl jae rcrl cmc jb (bad) mov out (bad) and mov cmp sbb xchg sahf cltd es and pop movsl or xchg in and and sbb xchg and ja or stos sub pop (bad) mov in mov xor testl adc scas mov mov shll frstor xchg mov mov movsb (bad) (bad) xchg push out (bad) nop rex.B lea xor (bad) fidivl rex rex.R jmp ds jge sbb (bad) cmpsb adc rex.X stos es popfq jnp mov sahf fcoms cltd mov sub shll jmpq xchg outsl sbb rex.RXB cmp xor cltd pop lea (bad) mov and rcl mov xchg insb xor (bad) sbb xchg sbb mov (bad) and adc pushq shlb adc or int3 imul pushq rex.WB test rex.WRXB rex.WX hlt out (bad) (bad) cmp adcl sysexit jno (bad) (bad) xor enterq xlat (bad) loopne mov icebp ja push fcoms data16 loopne stos sub and jmp (bad) (bad) pushfq push ficompl mull addr32 rex.XB mov lock jrcxz in pushfq xor sub cmc xchg out jnp pop lahf xor in or jb movsl movabs xchg rdmsr xchg (bad) mov ficoml scas cmp fs retq cmp cmc lahf fistp movabs (bad) push adc rex.W fmulp push xor (bad) enterq cmp pop (bad) fnsave xchg xchg imul std rex.WXB cmp mov stos push add lret mov (bad) xchg (bad) in loope (bad) rex.WX rex.WRX (bad) cmp cmp je xchg mov movabs cmova je lahf xchg leaveq pop or adc clc xchg xorl movabs and addr32 movzbl mov popfq cmpsl xchg movabs pop hlt mov lret out stos push pop (bad) sbb xchg movabs or (bad) push ja jrcxz repz mov mov rex.WX mov adc fnstenv (bad) xchg push xchg adc adc in xchg (bad) fs (bad) cmc push stos xor xchg idiv rex.WRX cmp mov xchg pop jg mov mov or sub (bad) jbe insb cs popfq (bad) sbb cli mov xor rex.WRB (bad) movsl or std mov fnop mov fs cmpsb int3 jl pop data16 shr mov pushq (bad) xchg (bad) lock in fbstp fldenv mov push scas (bad) pushfq jmp push movabs lret es xor test cwtl adc pop xor rex.X jbe add fimull xchg scas pushfq rex.WRB rex.WB rex.WRX sub outsb outsb rex.WXB mov xchg xchg xor mov xchg std shr addl jne js sbb shlb ja sub (bad) rex.RB out (bad) adc stc xchg (bad) (bad) insl or add mov (bad) bnd rex.XB data16 sahf jns adc (bad) repz mov and sahf ja add push xchg (bad) jle mov push cmp ja (bad) or xor cmp xor rcl loopne fistp xchg add movabs (bad) and out (bad) cmpsb adc ds rex.XB xor (bad) stos movsl sub ja test rex.W insb ds movsb cmp push and fistpl adcl jl rex.WB xchg notb ds jo repz je pushq movabs xchg (bad) mov clc xor pushq adc rex xchg loope cmp (bad) and fcmovnu stos scas xchg adc sbb nop xacquire scas mov sub imul (bad) (bad) pushfq sahf cwtl mov decb lock push std xchg xchg rex.RB hlt add rex.RX movabs and ja sbb cmp xor lahf movsl (bad) (bad) cwtl (bad) rex.B adc rolb ja movsl (bad) jmp loopne sbb and xchg fimull push cmp pop (bad) outsl rex.WRX lea jge xchg (bad) xchg (bad) (bad) adc add in test mov cmp xchg loop movsb or sub pushfq iret sub fist cwtl faddl outsb movsb rcrl xor hlt jp loopne icebp fwait gs rex.WB nopl mov test nop enterq mov in cwtl jb (bad) (bad) adc ss data16 neg rex.X (bad) (bad) fcmovu test push lret (bad) pop xchg (bad) push cwtl rex.WRB sub cwtl scas fwait (bad) shlb (bad) popfq xor insb jrcxz sti mov std (bad) loop ds push sarl pushq (bad) jns pushfq mov xchg test cmp in mov scas sbbb out mov xchg pop jne imul jnp movsb rex.WRX sub test xchg out enterq fldl adc add pop pushfq enterq adc rex.WB lea mov jae xchg adc cmpsl lret push jns or jnp movabs push loope jg xchg fistpl cld sub cmpsb rolb pushfq add xor pushq mov movabs xchg jns loope xchg xchg (bad) pop and xchg (bad) adc (bad) adc iret (bad) (bad) xchg (bad) mov divb lret callq flds xchg (bad) cltd repnz rex retq cmpsb xchg cmp (bad) (bad) mov movabs xchg (bad) stc pop sub cmpsl mov push adc popfq push cwtl leaveq cmp or sbbl push push cmpsl retq (bad) addr32 (bad) andl lahf jg ja add leaveq iret cli mov in adc decl pop out cwtl mov jge xchg sbb mov add xchg cmp sbb sub pop xchg rex.WB rex.RX xchg (bad) mov movabs rex.X (bad) mov out (bad) fldt cwtl push movslq mov cmp xchg rex.WRB rex.RB add (bad) and or ja mov xchg jmp (bad) popfq (bad) rex.WRB xor xor test mov setg stos insl add retq xor (bad) loop xchg mov (bad) test mov fcoml xchg repz (bad) rex.WXB (bad) xchg add js in callq pop sbb sub stc jo mov (bad) xchg mov sub int3 nop mov imul xchg nop icebp push fbstp callq cmp xchg (bad) sbb cli pop sti cmpsl mov shr jrcxz add (bad) push int3 scas sahf cmp fdivrs rex.WB subb (bad) sbb or xchg jno push (bad) and mov xor jno (bad) outsl mov rex.WX sahf retq (bad) movsb ljmp (bad) (bad) sbb (bad) jg out nop (bad) mov jae pop cmp push (bad) imul xchg mov xchg movslq fnstenv callq in pop sub sub rclb xor test shrb sahf es adcl jbe,pt adc (bad) fist fdivs insl rex.WRXB out cmc lea push xlat test (bad) (bad) stc jmpq pushq rex.XB jg xchg mov fs out scas push cwtl xchg fstp movsl divl add sub cmpsl jg and mov mov xchg (bad) (bad) push pushq es (bad) (bad) xor cmpsb cmp nop (bad) pushq lret jp rex.WRXB xchg sub rex.WB sbbl rex.WRX movabs (bad) or xchg xor rclb xchg xchg clc xchg mov and sbb stos push callq pushfq push rex.WRB xchg (bad) adc mov stc ds data16 testl push (bad) jle xor xchg loopne scas sbb xchg ss in fwait add (bad) out xor addr32 movslq xchg movabs rorb (bad) test xchg add mov pop sahf lods (bad) lret movabs dec mov insl out rex.WR jno lret rex.WX std sbb movsl fidivr (bad) rex.B mov rclb lret in push loop add rex.XB cmpsb cmp xchg (bad) xchg (bad) (bad) xchg fcoms jno rex.B and jp movabs sbb divl pushq rex.W pop cltd (bad) in xchg fstps mov rex.WRX xchg jbe xorb or and sub xchg ds in xchg pop and stos jmpq loop and add mov xlat jmp fwait scas (bad) mov imul lahf (bad) pushq xchg gs jmpq (bad) xor (bad) nop test mov jp (bad) lea addl fisttpll imul xchg loop xchg sbb (bad) (bad) cmpsb cltd loopne outsl imul outsb mov loope out xor rex.B (bad) movabs gs rex.WRX mov (bad) and cmp (bad) push sbb cmp movsb xchg and fcmovb nop adc jbe (bad) rex.WR iret test stos loopne pop std cmc mov imul lods mov (bad) mov (bad) movabs (bad) outsl jmp xchg out sbb and jg pop cli cmp adc scas movslq btrl mov xchg rex.WXB or out rex.WRX xlat (bad) (bad) movl xor jl outsb push xor xchg stc int3 fnstenv mov (bad) fwait (bad) rex.WXB callq jg je stos stc fnstcw and in mov insb gs xchg pushq enterq (bad) rex.WX test xchg jo or loop adc (bad) rex.RX rex.WXB or sub rex.WR cs xchg (bad) jrcxz add out cmpb push sbb rex.RX (bad) pop rex.RB xchg jns push repz (bad) or or stos (bad) pop xchg xchg rex.WB rex.X ds lea rex.RB je nop xchg sbb rex.WB rorl and movabs add mov xorl (bad) in cwtl clc sub jl xlat xchg lock adc lods xor xchg (bad) jp jge push je sub stc lea jnp,pt jo lods (bad) repnz adc insb jne (bad) xchg cmp rex.RXB cmp add imul adc jae mov pop pop ja mov jo push fwait (bad) pop movsb movsb and (bad) loop xchg add mov stos lret callq sysret xchg rex.WXB iret mov out push cmc jbe and mov cltd rex.W or mov sub (bad) (bad) add pushq cmpsl rex.XB rex.WRB rex.B ja lret pushfq jmp fndisi(8087 and fsubl addb es out scas (bad) movslq push outsl xchg adc xchg xchg rex.WX mov in xchg add lock mov jl cmp insb popfq leaveq clc jno imulb addr32 jmp cli mov add lock pop xchg sbb fldl insl imul leaveq (bad) pop callq (bad) jnp cmp adc out (bad) int3 hlt (bad) fcoms push (bad) mov xchg sbb mov xchg adc lahf icebp inc (bad) setle mov mov sbb pop (bad) sub std (bad) sarb in push sahf outsl gs nop retq or sbb jg mov add nop sbb int3 addr32 cwtl imul rex.RXB outsl xchg adc mov sahf (bad) (bad) repz popfq push jae ficompl cmpsb testl xchg adc lods lret rex.WRX and sbb decl pop xor test mov out xchg out rex.X stc xchg sbb retq lods cmp mov push cmp rolb mov rex.WR pushfq sub clc sub (bad) je xchg sub xor out sahf xchg (bad) scas rex.WRXB rex pop (bad) add pop movabs rcrl (bad) cltd mov insl cmp cmc movb ja xchg jmpq add jg scas fnstenv and mov or (bad) in (bad) std stos xchg (bad) (bad) jno icebp cwtl cmp or push iret rorl cmp cltd retq xchg lods std sbb repnz insb cmp (bad) in jmp (bad) rol pushfq pushq mov or movsl xor addl xchg cmp shl mov (bad) (bad) sub pop xchg and (bad) add rex.WXB cmp movabs pushfq mov (bad) std or (bad) jmp add add pop pop scas imul pop xchg xchg popq jmp ss cs rorl int loopne (bad) faddp xchg rex.WRB xchg popfq pushq and mov and (bad) cmp xlat movabs jbe mov in or imull lret add push add (bad) sub mov (bad) cltd movabs (bad) (bad) callq movslq push push adc add ficompl (bad) add pop ss loopne jmp (bad) push xchg movsb retq xchg adc mov (bad) push (bad) xchg (bad) mov lret push (bad) push cmp mov cs mov lahf add (bad) mulb xchg notl (bad) (bad) push cmp mov fwait xchg nop adc xchg xchg enterq stc cmp mov xor push and rex.RB jbe pushfq adc movslq (bad) rex.R (bad) retq insb cltd xchg mov lock sbb loop jo movsl sub movabs stc mov rex.X cmp jbe rex.XB or or scas (bad) rex.RB fwait push cmovg pop (bad) sub in ds and push mov adc retq sbb stos out mov popfq and andl fstl xchg adc jno or rex.X data16 je mov faddl jbe or xchg (bad) enterq mov popfq int3 or movabs jnp pop movabs mov cmpsl (bad) adc cltd adc mov add sbb xor mov lret xlat movabs adc xchg ss sbb (bad) movsb xchg insb sub pop rex.RXB rex.WX mov repnz (bad) adc rex.WX pop jno loop (bad) lret adc cmp xchg sbb jg mov mov bswap fldl (bad) (bad) mov and andl (bad) mov push pushfq outsb add xor insl sbb jnp adc (bad) xor movabs je fist retq mov (bad) nop adc sbb callq jnp add mov push xor pop pushq rex.RX lods out rex fwait (bad) sti sub sahf jo xchg mov jae sub (bad) pop (bad) cmc mov movslq retq (bad) insl push mov out data16 or scas adc shrb orb rex.WRX pop repnz jnp push callq pushq fild mov sub nop scas push pop xchg xchg add (bad) lret fistl or sbb mov imul popfq mov movabs mov (bad) (bad) (bad) rcrb xchg repz fildll sub mov idivb (bad) sbb scas xchg mov cmp xor xchg pminsw push xchg in (bad) mov rex.WB addr32 rex.RB jrcxz pushfq adc (bad) xchg pop (bad) sahf hlt rex xchg (bad) push roll (bad) add rex.WRXB rcrb mov movabs jg jg fsubrp fisubr stos loopne mov rex.WB out popfq mov rex.WXB scas (bad) or sti nop push movabs xor icebp std lods xlat scas test xchg enterq rex.WXB (bad) xchg idivb or rex.WRB xor mov adc imul rex.RXB outsl cli sbb cwtl push mov repz in ds es adc mov jne xchg lret xor ds mov xchg sbb and sahf movabs (bad) xchg jns imul rex.WX xchg movsb jge xchg repz push rex.X callq jmp xchg xchg loopne pushq and in idivl push rex.W xchg rcr pop jmpq rex.WXB xchg jg xor sbb movabs je xchg sbb rex.RB lods pushfq (bad) adc sub scas (bad) retq xchg xchg (bad) fwait mov pop nop adc hlt push leaveq mov callq pop mov mov repz out (bad) lret xor add gs (bad) cmpsb (bad) outsl fdivrs mov loop sbb mov rex.WXB mov movabs fistpl xchg xor rex.WRB mov je xor push cwtl hlt (bad) repnz and xorb jnp sti mov in fwait and or mov popfq (bad) scas fdivrp sti pop or cmpb rex.W int3 movsl xchg es sub and (bad) mov xchg js xor and fs mov (bad) cmp pop cli xchg es rex.RB pop scas out jo movslq seta pandn lret jbe in push loop rex.WX adc stos sub mov cmpsl adc cld scas sbb or xchg lret cmp (bad) xchg (bad) sub xchg mov (bad) fs cmp jl rex.X pushq fs or rex.WRX cmpsb adc xor sbb loop (bad) mov mov mov lea cmpsl (bad) sbb xchg mov xchg mov loope sub (bad) (bad) enterq jp add jnp notl popfq sbb rex.WX cmp add retq xchg pop leaveq stc (bad) (bad) fildl (bad) (bad) xor pushq jns sbb rex.WXB stc rex.WR lods sbbl rex.WB scas rex.WRB cmp xchg pop outsb and incb sbb jbe (bad) xchg mov (bad) add mov or insb rex.W rex.RX jae cmpsb mov mov push imull adc and fldt je mov int3 or jp pop jne xchg jo cld (bad) xor fwait pop xchg (bad) scas leaveq adc mov sahf xchg pop rex.WRB mov (bad) data16 addr32 xchg (bad) (bad) movabs or sbb rex.WRX rex.WRXB je,pn jrcxz,pt (bad) (bad) xchg (bad) movsb (bad) stos cmpl jae stc add xchg xlat mov (bad) sub pop ja mov enterq lret movabs rex.X xor (bad) rex.WXB sbb cli sub mov cwtl rex in pop add retq movabs (bad) mov movabs jo pushfq loop ss cld addr32 mov (bad) adc (bad) rcrl rex.B test pushq movsb xchg mov icebp xchg push lods xor sbb sub nop andb xchg insb adc fidivl or int3 in (bad) fdivrs movabs add (bad) jge fdecstp push and cmp pushq and mov leaveq (bad) and add enterq rex.WXB mov add outsl mov or push (bad) hlt (bad) mov nop fxch (bad) push rex.RX sbb cmp popq shlb rex.WRX outsl push ja adc (bad) or sbb or mov xchg jp movabs mov xchg scas rex.WRXB cmpsb test pop xchg and ja (bad) fild xchg loopne nop xor movabs lock xchg pop or xor mov int3 cmp (bad) adc xchg sbb mov repnz in insb push and jmp add rex mov xchg xor pop pushfq callq cmovnp xchg (bad) jl jne sub pushfq fidiv (bad) sbb rcr xorl sub pop (bad) xchg jnp or lods ja test sbb (bad) js pop add xchg int pushfq (bad) mov add adc popfq xchg scas cld bnd (bad) (bad) pushq gs add adc mov loope frstor rex.W mov xlat and out scas mul xchg mov callq fcoms rex.RXB cmp outsb cmp fs sti xchg movabs ja (bad) adc in xchg xor xchg mov pushfq sub fstpl pop sysexit (bad) mov xchg or jg movsb out je xchg jmp rex.WR insl enterq popfq xlat adc (bad) loope popfq mov lods rex.WX movslq rcll (bad) movabs xchg xchg cld test movabs push xor cmp xor mov (bad) rex.X (bad) int xchg jne and pop xchg nop incb cs xchg hlt jo lret mov nop movsl jo,pt sub test push rex.XB and insb push and rex.RXB iretq in adc cwtl rex.R outsl sbb popfq jmp add pop mov jno adc and mov sub (bad) stos adc xchg hlt rcll adc (bad) xchg popfq rex.W (bad) callq retq sti cmc or (bad) (bad) fwait rex jg xlat pop xchg (bad) mov add fldenv sbb mov (bad) push mov jne mov (bad) (bad) rex.WXB xor scas imul sub mov pop mov xchg (bad) (bad) sbb not (bad) xor sub (bad) imul (bad) movabs xlat sub rex.WR pop push (bad) add and sbb rex.WXB (bad) lret sub sbb and in jae push (bad) cltd sub jnp and outsb (bad) nop push out fldenv add outsl test mov (bad) xchg mov insb popfq and imul out out or cmp loope push out (bad) rex.WRB sahf rcll cmpsb rorl jmpq in fistpl imul in in subb movabs xchg rex.XB es pop repz test (bad) adc (bad) out xchg (bad) (bad) xor (bad) (bad) out gs (bad) add pop mov cli cmp jp rex.WB (bad) jne (bad) or jge lahf jmpq test fnstenv jnp fwait cltd fcmovne xlat (bad) popfq sub callq pushq (bad) mov sahf rex.RB xchg adc lods mov or (bad) in insl decl mov pushq mov mov (bad) lea adc retq enterq adc jnp (bad) sbb insb test fwait or or movslq rex.RX cmp pushq jp (bad) loop or adcb cwtl (bad) xlat movslq mov and jns cli xchg sub shr xchg outsb mov cwtl pop mov or nop es (bad) orl (bad) (bad) adc adc pop xchg sbb xor sbb pop xor adc out sbb (bad) nop or add mov int or (bad) xchg mov retq lahf (bad) (bad) mov sti sub pushfq imul mov jno rex.WRX cmp cmpsl sbb shlb (bad) xor pop in mov xlat mov movslq cs shll push addl xchg push out add mov pop jmp pop xchg and mov (bad) pop out add mov lea shr mov sti insb jb in int sbb ds mov xor add jnp mov jmpq (bad) mov rex stos movabs and xor stos xchg (bad) (bad) jne sahf or mov out sub shll out xchg pop rex.XB rex.RX stos push jrcxz cli rex.WRXB xor xchg (bad) and mov mov cli (bad) jmp ror jae or and lahf int3 sub rex.WRX cmp xchg nop sbb out mov adc rex.WX (bad) push test (bad) add (bad) retq and insl sbb jle js pop lea and push push stos enterq add adc mov jmpq jle pop cwtl mov jmp outsb xlat pop (bad) cmpsb imul callq cmc insl popfq sahf mov mov xor rex.WX xchg sbb shrl add pop jne adc (bad) icebp pushfq add jmpq xchg push sbb jne lods rex.RX jrcxz mov sahf mull (bad) and pop add xchg imul popfq jbe jl cmc fmulp jrcxz sahf (bad) fcomi and rex.WB xchg (bad) xor in out (bad) cmp (bad) insl (bad) jmpq sub xor sarb test (bad) in mov xchg push cmp jrcxz xchg rex.WXB mov insb ja xchg fucom mov (bad) mov mov mov xchg rex.R fnstsw (bad) retq incl adc pop lock pop push add mov push rex.WR jne cmp lahf int fsubl sub mov int3 loop (bad) jne lret (bad) cmp pop out cmp (bad) ss cwtl jmp cmp mov push sahf xor pushfq pushfq (bad) je test xchg stos repz rcrl loopne cwtl lods (bad) (bad) (bad) push movsb mov cmp in jmpq out es sub nop xchg (bad) jnp rex.X jg add sub (bad) cmc (bad) fdivrp out ds enterq rex.WRB insb xchg mov xor sti cld sbb pop and (bad) mov xlat loop mov xor pop adc rorl mov xchg push xchg mov jno test insb lret jmp (bad) movabs jge mov idivl sub jnp addl (bad) jg fisttpll and xor andl stc movsl (bad) (bad) sbb (bad) cmp xchg jnp pop and sbb mov mov mov rex.WXB lock int3 xchg xchg xchg add rcl or in push retq adc stc pop cmp data16 fs push pop leaveq (bad) js mov rex.WB cmpsl mov in fcmovnu nop pushfq ds iret fcoml xchg in cld (bad) movabs add pop cmpsb fdivrs xbeginq cmp or rex.W rcll rex.R (bad) (bad) xchg mov or movabs mov adc mov push (bad) rex.WR jo mov sahf add ficoml imul (bad) xchg mov push rex.X jnp rex.WRX xchg adc movsb pop adc (bad) xchg cwtl and rex.RX mov xlat (bad) xorb cmpsl movabs (bad) jae (bad) xchg jrcxz sub jo ss and (bad) adc rex.WXB xchg (bad) sub pop fs movabs and cmp (bad) movabs lret retq or scas xchg (bad) mov pop cmp xchg loope fwait int3 retq (bad) jg icebp psrld (bad) clc pop and gs cmc xor mov mov rex.RB cltd push (bad) sbb mov test sti mov add xchg icebp xor in nop rex.W loop ficomp sbb and es pop rex.WX rex.WRXB stc fld xchg cwtl movsb jg (bad) test rex.RB rex.WRX (bad) testl mov pushq lods stc imul cmp out mov cmpl mov xor pop xchg xchg (bad) sub jl pop rclb and xor (bad) sbbl (bad) (bad) ds sti divl rex.RXB xchg xchg cmp sbb fstl rex.WB mov jns xchg adc jno (bad) cwtl xchg xchg mov jb rex.RB cmp pop or (bad) pushfq sub cmp jns pop add movsl js addr32 popfq jae jmpq sub (bad) or xchg lods leaveq jp cmc rex.WRXB orl movabs push xor add movslq rex.WXB jnp xchg fadds sub icebp (bad) test cmpsl xor hlt or add rcll cltd popfq rex.RX (bad) nop shrl or imul scas iret movsl jb xchg pushfq cmp mov (bad) sbb push (bad) cmp fs insb rex.WRX rcll (bad) xchg mov (bad) and jb sub fistl push lret movslq std rex.XB (bad) xchg movb jae nop imul pop sbb in rex.WR adc mov popfq mov ds (bad) ds stos pushq fsubr (bad) js rex.WB stc (bad) mulb (bad) mov cmp (bad) ficomp pop sub (bad) mov add stos rcll mov movabs mov mov imul pop outsl (bad) movabs cmp rex.R repz jbe adc (bad) sub sahf xchg out (bad) (bad) lea movabs (bad) lock jg cmp scas retq or rex.RX xchg xchg or xlat shlb pop xor jl mov and mov nop adc scas cwtl cmp movabs jg sti imul movabs mov xlat and pop cmpsl icebp cltd push cmp sbb fisub sahf push xlat movabs sti retq cmp pop and add sub sbb (bad) (bad) mov rex.WXB jp (bad) movsl sub retq insb jrcxz cltd adc enterq sbb pop mov rex.WRXB repz (bad) imul jbe adc jo lahf (bad) xchg rex.XB rex.RB rex.WRB nop hlt xchg or rex.WB insl or mov jp push and test (bad) imulb (bad) xlat int cwtl out mov mov rolb (bad) adcl out mov and jle data16 cmp jbe adc pushq xchg or rex.WX std jl xchg fnstcw push adc xchg pop mov (bad) or and sub pushfq cmp int notb (bad) mov xchg xchg rex.WB sub xchg mov outsb sti (bad) rorl bnd sarl xlat out lods xchg js jno (bad) rex.W xchg std mov data16 cmc pushfq jmp popfq ss pop rol stos je repnz movsb addr32 jne push (bad) lea in enterq pop mov es adc jb jae jbe rex.WR faddl ja loopne iret cwtl xchg sub adc adc add cmpsl sbb rex.W fldt mov push jne leaveq xchg cmp xchg mov in add in rolb xchg js rex.RX rex.B pop add int cmpsb int3 movsl addr32 movslq xchg (bad) rcrb hlt (bad) ja lret (bad) movabs rex.XB (bad) iret xchg mov sbb pop xlat (bad) (bad) lods pop pushfq xor movabs (bad) ja test add int or (bad) mov xchg cmp xchg xchg ds xchg or xor mov or xchg mov mov movsl or ja jo rex.X xchg insl pushq mov jne xchg cmp insb xor rol xor and pop (bad) fs cs fs fnstsw loope sbb xchg jle mov add push movsb push xchg cmp push mov xchg xchg or xor rex.WRX push jae loopne (bad) (bad) or xchg xchg out clc outsb (bad) pop rex.WR jns xchg es rol movabs lret loope (bad) or fisubl repz mov jns mov sbb (bad) xchg rex.WR enterq sub or out pushq ficompl std push fmuls (bad) and mov rclb (bad) mov (bad) rex.WXB lock adc pop adc popfq popfq (bad) out pushfq stos in mov iret (bad) jle test lret rcr xor loope fwait mov cmp (bad) imul pop mov (bad) (bad) rex.WX xchg rex.XB rex.WRB xor xchg add pop mov cmp hlt (bad) mov xchg sbb pushfq ficompl fwait cmpsb jae xchg rex.WRXB xor sub sub popfq test (bad) pop xlat scas (bad) push fcmovne sahf pop xor (bad) rex.WRXB jmpq (bad) mov in add rex.RX in mov stos idivb cmp test in rex rex.XB pop xor movslq insb in mov mov xchg (bad) adc (bad) addr32 (bad) pop rex.X jns xchg or rex.RX rex.WR pop std cmp (bad) cmp xor push (bad) xchg movabs rorb je or mov pop test pop lahf lret (bad) and or sub sbb rex.XB in ficomp rex rex.RXB rex.WRXB sbb fs and (bad) and (bad) mov (bad) and mov rex.WRXB (bad) cld xchg pop (bad) rex.WXB ds pop rex.WXB sbb nop xor cmc rex.WRX lea scas addr32 addr32 mov popfq (bad) cmp enterq cld xchg push pop sahf cli scas xchg movabs out push sub push je add cmpsb movslq (bad) int3 loop mov (bad) mov adc lods subl test popfq jae xchg popfq insl sub rex.WXB rex mov jl (bad) (bad) mov sbbb stos jl (bad) mov popfq pushq sub jne jo rex.WRX out sbb jmp add lret shlb or rex.WRX (bad) (bad) fs xchg xchg imull sub (bad) rex.R mov mov outsl (bad) cwtl loope push movslq mov sahf icebp sub (bad) (bad) movsb xor pop int pop (bad) out xchg lret ja in rcrl mov add add xor ds xor pushfq movabs (bad) movsl (bad) lods sub fstp rex.WRXB xchg (bad) jns pop in ucomiss jmpq (bad) mov adc (bad) xor sbb scas std mov mov pop shll test jbe rex.WRXB jmpq and pop (bad) lods rcll jge iret sub or mov hlt adc push gs jno mov rex.WR cs (bad) sub stc rex.WR in cltd (bad) cmp push pushq mov loopne push and (bad) (bad) rex.WX (bad) int3 movabs sbb sbb jg adc lahf mov mov stos sbbl jp xchg add (bad) and (bad) js (bad) jne (bad) xor popfq mov fwait in jl add xchg jle (bad) pushq imul cmp mov mov sbbl rex.RB jno data16 (bad) xchg xor jl rex.XB rex.RXB fwait cltd test mov rex.WXB rex.WR push (bad) (bad) jno movsl xor insb xor out sti cwtl rex.WXB sub (bad) adc mov mov insb fcomps rex.RXB mov sub hlt xchg shrb outsb pop (bad) (bad) xchg movsl cmp xlat out enterq es rex.RXB test (bad) std movsl pushq (bad) xchg rex.WB lret lgs adc xchg pop mov mov xchg sbb movsb lea nop rex.RXB rex.RXB xchg and lods repnz cmp ds xchg fisub mov sbbl cmpsl lret cld adc xchg cmp in xchg out cmpsb mov or test cmpsl rex.X mov mov sub jl jae xchg mov out sbb jbe or xchg out cli lea xchg retq mov xchg mov mov ja jl xchg mov imul cwtl (bad) (bad) (bad) rex.R mull negb or mov push cmp rex rex.X jno mov mov lods xchg xchg clc rex.WRXB xor xor sub xchg sbb cmp sub leaveq pop mov out xchg vmaxss cmc and mov sub int3 cmp adc mov movsb pushq lret rex.RXB rex.WRX out lock movabs fstl sahf (bad) sub sbb xchg (bad) sub (bad) insb ja push jne xchg pop rex.WR sub jbe (bad) jnp xchg js mov jmp (bad) adc test xchg adc jp or add pushfq jmp sub mov cmp cmp sbb xchg je xchg mov mov jno jg or sub int (bad) rclb lret (bad) shl movslq sahf (bad) sahf lock xchg pop je sub cmp in nop insl jnp mov push out out mov sarl mov sbb callq rex.W fcompl in scas jns mov mov sbb popfq in clc and jo (bad) (bad) adc rex.WRXB mov (bad) fsubl xchg pushq and xlat xchg scas shrb adc fwait lods adc (bad) (bad) cmp xor mov ljmp leavew xchg (bad) jo add (bad) add xchg jp sub mulb rolb xchg cmp rex.WRX adc mov xchg stos (bad) iret rex.WB rex.W sti in (bad) xchg (bad) (bad) insb mov xorl (bad) lret xor mov and (bad) mov jo xchg jmpq jg xchg add mov cmp rex.WRX fwait gs jg and or sub mov jno adc mov insb fiaddl lret mov xchg sub jg movabs sub fld test adc retq fs jbe mov add outsl pop (bad) mov adc loopne push scas or (bad) jnp jno adc cld sbb rex.X jmpq and and fcoml mov xchg js adc mov push (bad) xchg in cmpxchg divb adc mov (bad) push xchg cwtl (bad) rol and fwait js rex.R xchg rex.WXB mov sahf xchg sub adc xchg add (bad) rex sub adc idivb rcrl xor xlat mov cmp mov adc sahf (bad) (bad) sub jb pop jno rcl (bad) cmpsb (bad) jle adc push stc lret add retq (bad) (bad) stos lea shrb jmp xchg out sbb andb or in add pop and fsubrl sbb xchg rex.X push outsl adc xchg stos loope add sub or jb (bad) cmpsb (bad) and xchg lock out loope (bad) rex.RX sub rex.RB push jl movabs cwtl xor lcall (bad) pop lret mov mov int (bad) and insb xlat lock negl or movslq jae (bad) (bad) mov cltd scas test clc push movsl and fidivr (bad) and rex.WRB pushfq mov mov insb (bad) and sub push (bad) mov pop xchg scas data16 xchg (bad) nop add (bad) pop mov gs pop xlat movslq fucomip or rex.WB (bad) jrcxz (bad) mov xor scas int3 add jg fistpl xlat (bad) (bad) shl rex.RXB movabs mov rcrb push int3 (bad) imul (bad) pop cltd add mov lods pushfq iret retq test repnz (bad) jne rex.RX (bad) push (bad) repz or (bad) out in cld (bad) lods lods sub lahf sub jne (bad) lea in out mov (bad) addr32 xchg cmp and add in xchg icebp (bad) jg adc rex.X (bad) popfq rex.WB sub cmp mov iret mov movabs repz mov (bad) movabs (bad) xchg loope lea (bad) adc imul (bad) (bad) mov cwtl push mov je pop push std sbb cmp adc and rex.W push cltd pushfq add xchg fcoml push js cmp mov rcrb xchg cmc sbb xlat lock leaveq push cmpsb (bad) insb xchg xchg xor cwtl rcr xlat jns xchg rex.WXB pushq (bad) movsl push pushq (bad) or jg addr32 cwtl rclb adc rex.WR xor lret or cwtl xchg rex.WB js pop gs xor jno,pn rex.WX cmpsb xchg and cmp fs xchg add rex.WR jmp js lahf sahf mov mov (bad) fimul cmc outsl sbb loope subb (bad) test sbb jg insl imul cmc mov xchg and fwait std sub sbb adc push rex.XB lret rex.WXB jmp mov (bad) iret rex.RB es pop push jnp insl cmp rex.RX xchg (bad) imul movslq sti (bad) (bad) push add cmp pushfq callq mov sub xchg xor xlat xchg (bad) (bad) movsb adc and test xchg int3 repz stc xchg out je stos fbstp (bad) xchg cmp jno es rex.WB jl nop repz jne xchg xchg flds jo sub scas mov int3 shr xchg retq sub cmp movsl mov (bad) ss mov jno xchg fistpl cmpsl xchg ficom movabs pushq addl add push repz add out pop (bad) fnsave ds (bad) xchg sub sahf xchg std out movabs xchg pushq (bad) cld sbb fisubrl cmp outsl scas xchg rex.WR sub add nopl mov sahf addl mov push cltd test neg fisttp rcll sahf mov xchg fisubrl icebp mov stos repz rcll add pop adc sti mov (bad) (bad) out pop push jge xchg fcomps movabs sbb (bad) (bad) sbb jnp mov loope loopne or mov and fstl xchg fdivl scas fdiv sbb icebp xchg rex sub scas cmc jno adc (bad) ja xor insb stos jnp repz loopne rex.RX std cmpsl mov iret add xchg push and repnz fist xchg (bad) retq cltd addr32 or js xchg jbe scas sahf rex.XB subl stc sbb add jle or cltd mov hlt adc in mov jmp rex.R popfq jp rex.RB xor (bad) mov iret mov add mov jp fsts xchg or xchg (bad) leaveq xor js pop mov (bad) insl and movsl xchg (bad) movabs push pop (bad) mov mov ja or mov rcrb xlat and insl retq (bad) rex.WX mov mov (bad) fadds fimul push pop (bad) xchg xlat movabs sbb (bad) rol pop (bad) xchg es (bad) repz fild mov ds imulb pop (bad) mov nop (bad) (bad) pop pop (bad) (bad) fwait int mov and jno xchg in test (bad) movabs (bad) pop movabs (bad) fwait (bad) pop xor or rex.RX cmpsl xor ds jno mov adc xchg pop add std jb xchg mov int3 cwtl mov pop repnz xor fstl cmpl sub outsl and clc xchg fcmovne mov jns (bad) xchg stos jo roll xchg push int3 cld fistp movabs rex out decl xchg or and imul lock (bad) movabs rex.RX xchg movabs mov rex.WRXB cs pushfq xchg test rex.WXB (bad) mov mov mov xchg sbb js callq jl (bad) adc jae ja popfq cmp es sub outsl jne mov (bad) movsb fstpl ja lods lea mul lret movabs cld fstpt xchg jg xor (bad) pop ss (bad) sub (bad) sti add cmp sbb push or sti xchg hlt movabs subl movsl sti (bad) popfq scas int (bad) mov push mov shlb mov jl xor scas mov push (bad) sub adc rex movslq test (bad) xchg stos (bad) sub (bad) jrcxz mov and stos adc mov movabs repnz cli cld add (bad) addr32 pop xchg jbe cmpsl xchg cmpsb or out divl adc jnp sbb movabs or cmp addr32 mov pushq xchg (bad) loopne add cmpsb xchg mov mov cmp adcl jrcxz pushfq adc (bad) sbb (bad) enterq loopne (bad) hlt cmp xlat (bad) sbb sbb mov push xchg and xchg jae in (bad) (bad) stos xchg scas sbb jbe div lea (bad) jb cwtl (bad) (bad) xor fwait xchg jnp cwtl (bad) (bad) cli mov ja add (bad) xchg sub cmp sbbb (bad) ss mov mov fwait cmp icebp pushq (bad) out push xor insl lods mov loop mov retq jp in jmp cmp je mov movslq or fsubr movabs sbb add popfq sbb mov (bad) ds pop movslq movabs xchg fldcw std mov lret nop (bad) add shlb cmp (bad) jge sbb movabs rcll ss (bad) int3 stc rex.WRX es notq (bad) jns xchg stos jg (bad) sbb mov roll mov repz fadd mov pushfq push xor xor idivl sbb pushq (bad) jo adc test xchg and jp int3 nop add lret fwait (bad) cmc jae rex.WR idivl retq (bad) ficompl sbb test hlt (bad) cwtl (bad) jns rex.WRX imul lods (bad) jno (bad) scas mov xchg pop (bad) mov pop jno imul xchg mov xor or add xchg or (bad) pause or (bad) mov cs lea roll repz xor mov retq mov rex.WB rex.B jae and cmp adc icebp (bad) lret imul fucom mov leaveq out cmp stos sbb pop jb cmp movslq lods (bad) out and fstp add int3 push leaveq stos jmp rex.RX xor fcmovnu outsl add xchg pop pop xchg scas sub pushfq (bad) rex.WRB frstor mov test sub fidivr xor (bad) jge rex.B (bad) repnz mov jp loope rex.WXB pop rex.W rex.RX rex.B (bad) mov (bad) or xchg (bad) enterq jmp nop sbb sahf rex.WX (bad) adc js ja cwtl mov adc rex.WR rex.X fcompl and movabs mov rex.R rex.RX cmp jbe cmp xchg ja popfq (bad) push mov in movabs xchg popfq lods (bad) mov (bad) rex.RB xchg mov sub fs gs pushfq sub data16 addr32 xchg mov jb sti mov rex.WRXB cmp fimul xchg pop pop and (bad) rcll pushfq je mov (bad) stos imul xchg add test xchg jl es or adc loop (bad) mov (bad) int out xchg rclb fistl mov xlat (bad) xchg jno insl or pop mov (bad) nop xor ss xchg movsb nop xchg movsl cmp xchg clc mov sarb (bad) mov add in jp mov jo (bad) pop mov push add (bad) ds rex.W pop or xchg (bad) movsb add rorl lahf fs mov (bad) negl pop js push retq mov imul ja (bad) xchg rex.WRXB (bad) sbbl (bad) addr32 mov or mov jmpq stos mov sub test movabs (bad) (bad) xchg (bad) (bad) not (bad) insb pop loope cmpsb rex.WRXB and xchg xchg mov ja (bad) xchg nop add rex.WX repz outsl (bad) add mov movslq push jno mov int jo fidivrl imul addr32 jmp (bad) cmpsl in rex.WRX or or (bad) cld popfq xor cltd popfq xchg add xchg loop (bad) or sahf jg mov int (bad) in mov push xchg loopne add xchg mov cmc sbb (bad) popfq vpunpckldq push pushfq jno mov sub mov mov scas insb in cmp out jnp (bad) sub jle loope xor pushq cwtl retq sub or js sti push add xchg (bad) stos leaveq out (bad) (bad) in xchg jmp pop test (bad) sub mov out clc notb xor outsl xor popfq pushfq rol jl lea (bad) test pop sub rex.WRXB rex.RB popfq stos (bad) cmp rcl (bad) stos (bad) xchg cltd sub mov xor incl iret rorl xchg xchg xchg lret (bad) callq or adc addb je sbb mov hlt push xchg es cmp add xchg fidivrl lea sbb outsb mov faddl sbb mov rex.XB jae imul test retq or or (bad) xchg push (bad) movabs and (bad) lcall mov fcoms adc cwtl in mov pop add jbe mov push cmp xchg sahf sbbl sbb (bad) cmp mov adc enterq (bad) (bad) mov pop xchg cltd (bad) jno unpcklps sbb pushq mov test (bad) callq cmp scas xor adc (bad) movslq xchg fcoms mov jbe jle,pt enterq xor (bad) xor (bad) fildll int3 mov outsb js cmpl adc seta cmc mov add xchg clc idiv movslq data16 xchg faddl fadds sahf movsb (bad) mov sarl movabs (bad) xchg (bad) test retq xchg jle add jbe idivl fs cwtl or sahf xor xchg mov stos (bad) sbb out xchg mov xchg iret retq pushfq pushq unpcklps outsl cmp (bad) xchg jmpq jle cmp movabs subb sbb nop mov or or rex.XB sub outsb icebp out xchg fsts xchg or xchg test es stc scas retq js movsl out cs out sbb movabs xchg rex sar jns mov lock scas enterq (bad) (bad) notl pop mov (bad) outsl cmpsl shll xchg icebp fwait retq rex.RXB xor xchg stos outsb dec movslq mov rex.XB (bad) int3 test adc jno or cmpsb lret jne sbb mov jns lret out (bad) sub iret (bad) xchg es rex.RX fwait mov xchg (bad) xchg sub push shlb sti pop xchg cli jle test xchg rex.RB sbb movsl push xchg (bad) add (bad) addr32 xchg retq pop fcomps mov push and xchg stos (bad) mov addr32 cmpsb (bad) cmpsl sbb mov fildl pop test xchg repz decl (bad) nop fdivl xor push lods (bad) je mov jmpq and test and add xchg (bad) mov addr32 cmp add adc xchg scas rex.RXB std (bad) xor rex.WXB rex.WRX fdivr xchg mov ja rex add es (bad) (bad) cmc jmp xchg cs and mov (bad) lea and xchg lods lock hlt rex.WR (bad) xlat xchg loopne cmp and (bad) xor loop cmp in lods out (bad) popfq jge or add ficom rex.XB in stos sub and rex.B (bad) (bad) push cmp movabs (bad) add jae icebp xchg (bad) stos mov vunpckhps js sbb (bad) sub rex.WX iret cwtl imul adc adc out fcoml add adcl xchg mov adc push cld jns jmp rex.RXB lods test addr32 loopne xchg fnstenv mov popfq jl movabs and js hlt subl pop cmp fstl nop (bad) mov xlat sahf jle pop mov jmpq mov cwtl (bad) in rex.RB pop movabs icebp (bad) clc xchg xchg cmpsl callq pushfq gs (bad) rex.WR mov pop sbb outsl (bad) jmpq xor out imull int3 jl xchg loopne shrb mov lret (bad) pop insb (bad) xchg rex.WXB xchg mov sbb icebp adc (bad) rex.WB roll (bad) es jp lea rex.X (bad) sbb add (bad) jnp (bad) sub and add (bad) jmpq sbb imulb cld movabs movabs xor push rex.WRXB fs push xor jb in test popfq mov push lret xchg movabs mov pushq addr32 xchg repz fiadd idivl pushfq jne cwtl adc jnp ja,pt in (bad) pop xchg sub and rex.RX mov pushq adc es int pushfq mov jmp (bad) xchg pushq fisubl mov imul xchg iret test sub retq xchg imul insb in rex.R adc (bad) cwtl pop out outsb rex.WRX sahf (bad) mov lods (bad) mov test mull sahf icebp pand push (bad) popq movslq pushfq and xchg cld add and mov (bad) cmpsl rex.R (bad) rex.WRX xchg or rex.XB mov and mov cmpsl xchg cwtl sbb (bad) mov jo xchg sahf outsl shlb and imul sub rol rex.WB rex.RB hlt mov and push add xor movsl fst rex.W lea lock xchg decl pop xchg sub mov insb imul add sahf rex.WXB rex jge sub imul adc or xorl callq nop jbe gs rex.WRB rcrl nop sbb xor sarb movabs jbe mov pop add rex.RB rex.R mulb jbe rex.WB rex.XB xchg mov push (bad) sbb mov adc pushfq out mov movslq and (bad) (bad) jge (bad) (bad) sbb add mov xor xchg sbb repnz cmp rex.WXB mov mov adc or mov (bad) or xchg adc pop sub xchg (bad) movsb in (bad) fnsave jmp (bad) in (bad) adc jge add fistpl jrcxz mov (bad) pop push rex.R rex.WXB pop pop in or repz out rex.RB rex.RXB fsubrl mov rcrl cmp adc scas lea and xchg rex.XB in rex.RX es data16 jae (bad) int3 nop (bad) (bad) mov (bad) cmc (bad) add xchg cs cli sub (bad) cmp (bad) xchg add pop jne xchg (bad) xchg or mov mov pop xchg adc repnz cmp test cwtl (bad) jb pushfq rex.WR and std xor movsb sub (bad) jmp rex.WRX xchg (bad) lock mov (bad) jrcxz sahf adc add loope add stos xor (bad) rex.B fcompl (bad) (bad) mov xchg (bad) push mov xchg and rorl nop cmp push pop xor out cmp (bad) int3 (bad) mov xchg enterq pop loope in xchg jl and (bad) push or xchg push mov adc jg cmp out gs (bad) (bad) rex.WXB cmp sti (bad) xchg insb add sahf (bad) adc lods in outsl int movabs adc xchg pop push jnp,pn mov rex.WR repz xchg leaveq xchg imul xchg je sbb push xor (bad) fiadd cmp adc mov fwait sbb ds pop (bad) ja mov xor adc mov movsb mov (bad) sahf sub push rex.WRXB cwtl xchg mov stos xchg or (bad) imul (bad) xor pop mov fisub mov xchg pop xchg rex.WR (bad) and mov and movabs test (bad) mov in out xchg (bad) cmpsl loop xchg leaveq lret scas movabs in fnstenv hlt imull in in xchg (bad) mov adc scas sub clc mov sub (bad) (bad) ds (bad) data16 xchg pop jmpq and lahf mov sahf jmp mov mov xchg xlat mov rex.WX cli mov retq mov xchg (bad) (bad) sub push sbb push cli add (bad) (bad) mov (bad) push (bad) mov jbe sti or (bad) addb sbb rex.WR addr32 add pop fs fsincos mov jne (bad) mov rcll (bad) (bad) (bad) popfq sbb rcrb ds jae sti (bad) out or xchg jb lea sbb rcrl mov xchg (bad) (bad) mov popfq xor sub lods out stos (bad) rex.RX rex.WRXB retq jl sahf cltd mov xchg loop mov or xchg jb movabs pop (bad) rex.WXB and adc fmull add shll cmp movabs ja (bad) pop or pop rex.RXB and sub negl addr32 fildll rex.WRB test (bad) data16 adc sub cmc movslq xchg sbb cwtl and xchg rex.WRXB (bad) pushq lods sub pop adc xchg (bad) mov mov stos (bad) outsl xlat cmp xchg repz pop xor (bad) sub or add sbb cld xchg mov fidiv rex.WB insb js es rclb fcoms xor adc xchg jne fnstenv rex.WXB sbb imul xchg outsl std xchg mov push sub rex.R rex.RX adc int xchg (bad) mov (bad) std sahf xor rex.WR (bad) mov pushfq cmc shrl scas add pushfq xchg mov mov pop test fdiv mov pushfq cli insb pop rex.X mov xchg cmc rex.B ja adc rcll scas out outsl cmpsb rex.XB fild jae sub jb movslq orb xchg cmp insb (bad) enterq mov subl mov repz mov (bad) and ds jg retq loop xchg scas (bad) (bad) (bad) (bad) int3 stos pop xchg fs in cs in xchg int out icebp xor xchg cwtl (bad) adc jns mov rex.X or and push xchg sbb mov jb xor (bad) cwtl mov (bad) testl adc (bad) lods xchg out xchg scas xchg (bad) sub out xchg (bad) rex.WB cmpl sbb scas and (bad) mov xlat add rcrl je xchg mov lods gs mov movslq adc adc add std and scas ja jae (bad) (bad) insb ficoml sarl (bad) jmp sbb (bad) (bad) in nop mov mov jno xchg pop xchg insb sbb faddp out (bad) loope cmc mov (bad) pop sahf (bad) or mov in addr32 sahf mov mov cmpsl fnstenv vpsubq sub and and lret mov clc ss or and sub (bad) loope xchg scas mov or xlat mov es jrcxz loope jbe or push mov jmp shrl rcrl xchg adc vpmacsdql adcq mov xor movabs adc iret xchg pushq (bad) shll push jg cwtl (bad) (bad) xchg fstps pop (bad) mov and enterq cmpsb movslq or insl imul mov insb mov pushq cmp divl out (bad) and xorl sbb jbe mov jg mov push pop nop push mov jno mov push (bad) (bad) mov lock insb addb and jno push (bad) retq mov mov icebp pop movsb xor movslq xlat fisttpl (bad) xchg or cmp jne (bad) sti stc rex.WB and loope xor sub movabs (bad) (bad) sub mov int3 stc (bad) lahf push xor jle retq cli rex.R cmp push jmp testb or hlt int3 adc pop (bad) loopne pushq (bad) cmp stos or (bad) mov xchg sub scas scas test popfq adc sbb (bad) imul add (bad) (bad) and fxch sarl ds cmpsb fdivl pushfq cmpsl xor sbb or (bad) sub movslq jno xchg sub xchg adc (bad) (bad) sahf sbb fwait add test rex pushq (bad) ja (bad) pop pushq dec xchg movsb jae and cli fistl outsb outsl jmp outsl push retq pushq cmpsb std or (bad) (bad) add (bad) mov lea xlat subl mov negb xchg mov or lods imul loop add mov gs popfq mov (bad) cmp movabs jnp rex.WX adc mov rcl (bad) adc addr32 sub (bad) repz adc jb movabs outsl (bad) ja,pt loope gs sarb and xchg mov xchg cmc (bad) enterq jo xchg movabs pop (bad) fnop movsl sub movslq cwtl sbb (bad) (bad) push cltd xchg mov add (bad) divb cmc xchg movsb lret loope hlt sbb rex.RX sahf lods outsb add xchg (bad) outsb jmpq xor (bad) and cmpsb xchg nop gs cmp and (bad) outsl movsb out xchg (bad) in add pushq repnz xchg add loop rex.R rex.RX fcompl xor mov addr32 negl push xchg sub xor callq (bad) jl icebp imul jle rex pop mov scas retq mov (bad) xchg add xor add rex.XB ss out hlt (bad) jno (bad) stos sbbl rex.RB popfq mov mov (bad) rex.WR (bad) cmpsl repz mov insl (bad) lea cmc retq mov sub (bad) je sbb jge adc sub sahf xchg or cltd mov mov (bad) xor xor cmp vsubss and sti mov retq rex or sub push pushfq mov (bad) jb mov xchg or pushq lods rex.XB adc cwtl rex.WR or add push cltd xchg lock enterq mov xlat in mov mov mov (bad) adc sarb rex.WX (bad) jg jns (bad) mov and pop mov (bad) rex.W test (bad) (bad) pop pop (bad) xchg out loope (bad) insb jo xchg ss and lods xchg clc insb mov sub mov xor xchg xchg stos hlt cmp cmp xchg xchg sahf or retq (bad) xlat sub out sti xor pushq popfq xchg fcmovne (bad) imul cmc xor rex.B jne,pn push xchg ds movsl xlat xchg lods std pop jo sbb add fildll jb fistl or jo shl rex.RXB movabs adc (bad) jo jmpq rex.WXB (bad) fs adc callq or mov sub jp callq (bad) mov adc mov fmulp pushfq push or repnz movsb xchg mov lret (bad) rex.WRB rex.WB nop repz out idiv mov fcoml movsl xchg or mov xor fwait sub cltd xchg movabs imul test (bad) insl mov repz js sahf mov pop (bad) outsl xor adc rex.RB sub xchg test mov mov cmp (bad) rex.WR pushq xchg movslq pushfq js sbb push rex.WRXB pop (bad) xchg xchg (bad) test sub xchg mov sbb adc lods andb pushfq sahf rex.WRX clc jb rex.R xchg xchg xchg pop cmc (bad) pop sub jle repnz rex.RB mov mov pop push jmpq fs mov (bad) (bad) addr32 retq cwtl (bad) and (bad) xchg pop push movslq xchg in sarb mov xchg xchg out pushq xchg jne mov xor sub fisttpll sbb (bad) xchg movabs or (bad) xchg pop rex.W fs jnp pushq sahf jp (bad) insb fnsave mov jle and popfq jmp sar xlat jne movabs (bad) (bad) scas or rex.RXB orb xchg xchg and xchg out retq adc xchg enterq repz data16 rorb xor xchg (bad) jl cwtl loope or (bad) adc in fnop jp jo movntq rex.RB leaveq in movabs xor (bad) xchg outsl push jg cmc in cltd mov pushq (bad) fwait addr32 mov adc imul (bad) mov mov sbb xchg xchg xchg pushq fcom jne and addr32 cmpsl test (bad) addr32 jae rex.WRXB or rex.WXB mov pop lret ss push sbb adc jle ja add (bad) mov adc sbb int3 mov cmp xchg in rex.WRXB sahf (bad) push addb repz (bad) push (bad) sub (bad) roll xchg movabs shll (bad) lahf mov mov sti xlat lahf or jge mul insl int3 pushfq or scas xor (bad) xor xchg xchg negl movabs xchg cltd mov add add mov imul pop rex.WX sub mov pop gs cmpsb add fucomip cmc cmpsl xor xlat sub iret imul scas sub (bad) out rclb nop sbb push sbb (bad) cmpsb sbb (bad) cld (bad) mov rex.WX (bad) add test mull sub (bad) (bad) jo (bad) mov add xchg or xchg sbb xchg jrcxz adc out mov in (bad) xchg xchg popfq (bad) cmpsb mov movabs lock cmpsl cwtl repnz ds jmp mov mov jrcxz (bad) jg xchg scas rex.WR enterq (bad) xchg jae mov ja icebp cltd clc test rex.RXB rex.RB jne xchg xchg jne xchg push fistpll sub push or xchg movabs lret fstps jmp out mov movsl cwtl mull cwtl mov test xchg cmpsb xlat jp sub test xchg add movabs (bad) scas fstl mov lods mov decb movabs (bad) (bad) iret xchg movabs int3 adc sahf push fs fsts movabs rex.WR (bad) pop int xor sub mov stos fsts test or mov sub pushq div mov xchg iret pop rex.B and lret repnz push jrcxz and push xchg jae and (bad) cwtl sub xlat mov (bad) xchg (bad) pop (bad) adc (bad) sbb pushq xchg clc movsb (bad) sbbl ss outsb jbe in push (bad) movabs rclb (bad) jp xchg cwtl clc mov add fcomi (bad) cmp cs rex.RXB sahf rex.WR xlat (bad) xor data16 mov int3 cmp sahf ja jns (bad) cmpsl mov scas sub pushq and int cltd sub jnp xchg sbb lock movabs (bad) in xor movabs popfq stos fimull (bad) rolb pushq adc iret or sahf push rex.WB (bad) repnz mov mov icebp xchg cmpl cmp scas iret mov (bad) (bad) pop (bad) pop nop popq retq xchg mov xchg jge fstl mov loop (bad) (bad) rex.RX or rex.WB (bad) outsl movsb and xchg jne jge xor adc iret (bad) jp js out pushfq fdiv (bad) sahf rcl mov rex.WRXB pop xor pop popfq lahf (bad) in fs rcrl (bad) leaveq (bad) xchg gs fistp (bad) push (bad) xchg xor cmp in xchg xchg and rex.WRX add fs faddp shlb out pop (bad) lret sub (bad) push xor cwtl push (bad) movsb (bad) nop hlt (bad) jno xchg stos xor scas int leaveq out cwtl jns push rex.WR mov pop xor rex.RXB cmp xchg mov scas (bad) pushfq and sub mov in rex.B cli shr rex.R movabs fdivrl mov cld xchg xor pushfq and imul rcll pop fcmovu mov xchg sbb (bad) mov jl (bad) shlb (bad) (bad) (bad) movabs xchg movabs sbb mov cmpsl addr32 cld xchg iret or or rcll sbb (bad) decb xlat gs add adc cltd (bad) jno xchg jnp iret rex.W lods jp xchg rex.WRXB cmp adc mov mov add rex.WR push gs xor popfq or repz sahf mov (bad) mov in xchg xchg xor mov mov cmp and cltd mov sbb add ss movabs cmpsb shrl out cmp (bad) push movabs mov adc popfq mov xor jl (bad) mov movslq (bad) jno cwtl jge mov (bad) cmp mov xor mov movl or cmc jbe mov xchg cmpsl jnp std nop adc fwait mov sahf (bad) xchg mov cld mov test sahf rcr jo xchg xorl lret int xchg movsl mov imul or test jno lahf test movslq (bad) and ds lea insl mov (bad) jne lret jle mov pop jnp mov jae movl jmpq lret int3 nop cmpsb add jge popfq jle fwait push and lock data16 rex.RB fwait or xchg pop or (bad) ja int (bad) outsb push adc hlt cld int cli adc data16 pop ss sbb push (bad) sti xchg (bad) (bad) rex.WXB xchg pop (bad) rcrb cwtl out cltd imul insl test retq rolb sub mov int sbbl mov cmpsl xlat cmp and imul jo rcrb lahf jbe (bad) jne loope mov (bad) sbb imul mov jmpq lahf fistpll push icebp rex.X pop rex.WB mov (bad) movabs jg flds pushq pop cmpl (bad) (bad) or rcll or int (bad) sahf pop fdiv pop sbb in (bad) nop adc stos (bad) movsb pop rex.X (bad) push or imul cltd cltd mov rex.XB cmp xchg (bad) rex.RB sbb in xor stos xchg std pop data16 rex.WR pushfq mull pushq push ja (bad) mov mov sbb pushfq test pop (bad) es js (bad) xchg test sti fdivrs notl mov mov movabs mov jrcxz rex.WRB sbb cmp sahf mov imul sub jb mov clc cmp (bad) int3 test icebp rex pushfq and rex.WRX movd xor (bad) adc and fiaddl rex.WRXB adc fld sbbb jp testl loop mov cmpsl clc cltd jp (bad) movsb mov xchg retq es ja movabs pushfq sub stc rex.RX pop addr32 xchg (bad) lock in cwtl ja xchg (bad) sub cmp xchg push rex (bad) (bad) mov sbb rex.RB push cwtl mov jo fildll sahf jg pop cmp negb jbe movabs xor mov xchg std mov adc jrcxz out xchg (bad) xor mov adc jge sarl mov sar jns popfq cmpsl (bad) imul imul (bad) mov pop cmpsl pop (bad) int mov xlat imul xchg movabs test cs rex.WR mov mov rep mov cltd negl nop imul pushfq rex.WR or xchg rex.WR (bad) sahf ss push mov mov add or movabs mov jle jp xchg scas (bad) ljmp int3 lods (bad) repz pushq mov ds xor rolb mov jae and ljmp (bad) jmpq (bad) mov and rex in out pop mov mov xchg repz callq mov imul (bad) lret sbb es (bad) retq jne addr32 pop mov orb rcl mov jle imul pop fsubl (bad) stc sbb mov xchg cmp int3 mov xchg js mov push loope adc push rcl (bad) (bad) add mov imul pushfq popfq rex.XB sahf cld movabs (bad) rex.WRX clc or or cwtl pop (bad) and jle xlat imul cld xor jnp xor pop rol (bad) movabs (bad) (bad) lea rclb and cmp adc cltd rex.WB in (bad) (bad) pop rex.WRB sub or pop popfq rclb out xor lret xchg mov (bad) jae jmp (bad) sub pop cld and sbb push (bad) lret add insb xlat out cmp movabs xchg retq flds roll (bad) mov hlt sub fcmovne rcll and (bad) pop movabs cmp cmp cmova sbb pop rex.WXB mov leaveq sub and in xor (bad) sbb (bad) (bad) cmp cmp cmp rex.WXB fiaddl std push rex.X pop sahf cmp push rex.RX (bad) rex.WRB in subl scas fldt (bad) (bad) scas (bad) lret adc hlt gs fmull rex.WR rex.X (bad) cwtl jrcxz jno fwait lret shr xlat sbb lods (bad) gs add scas incl insl pop rclb jo lods (bad) xchg cmc mov cld test add in mov (bad) xor out rex in xchg rep (bad) push xor rex.X cmpsl (bad) test (bad) rex.WRXB pop jrcxz jg add mov lahf mov xchg and movslq iret sbb icebp add xor xor pushfq movabs adc sub nop adc xchg addr32 movabs mov jnp loope (bad) rex.X lcall movsb js xchg (bad) mov xchg (bad) rex.WX leaveq sar addr32 rex.XB pushq and sahf xchg or or cmp sub jbe mov xor xchg rex.WRX pop push pop callq insb pushfq sahf and jmpq sbb lock sar adc movslq addr32 movsl cmp (bad) clc cld (bad) (bad) (bad) pop mov mov and jge negl sahf push lret popfq mov xchg callq in jo shrl sahf xchg jns mov xchg in xchg (bad) push rex.WR (bad) sub xchg ja (bad) cmp in mov push push sahf xchg pop jnp jrcxz scas out and xchg lock sbb xor cmp (bad) insb ds icebp rex.RB imul jmp and jno xchg push loop pop cmp cmc push jmp movsl mov imul rex rex.WX rex.WR std outsb loop xchg rex.WRXB jmpq pushfq lahf (bad) rex.RXB jbe jns cmp loopne nop (bad) in adc xchg (bad) jns rex.X ja mov xchg ja xchg mov adcb jb (bad) (bad) (bad) (bad) stos rcrl ds xchg rex.W (bad) (bad) adc rex.WR xchg (bad) movabs rex.XB sbb loop or xchg lock jne jbe movslq int icebp in mov (bad) nop sbb rex.WXB add add outsl sbb out (bad) sub xchg sti jge push in mov sbb adc rex.WR (bad) pushq (bad) mov int outsl nop xor (bad) rex.WR fsubs cltd push js sahf fs mov out movabs mov cmp rex.X scas (bad) sahf fisttp lahf jge mov gs xchg mov xchg and cltd cli cmp test pushq lahf xor loop mov in mov sub add incb mov jp stos (bad) push push movabs mov out xchg mov (bad) (bad) imul xchg movabs data16 std pop popfq es out cmp lret lea sub (bad) movabs or jo mov (bad) sbb (bad) es cs mov in xchg lret cli xor repz sub and add out xchg icebp ss jbe xor push fbld adc mov movabs and mov cs mov mov repz sub pop mov cld (bad) stc (bad) jo scas psrlw loope fistl sahf je test rex.WR or in mov (bad) sub adc sub xor (bad) cmp sahf mov cwtl out mov sarb xchg mov (bad) add (bad) pop (bad) (bad) (bad) mov mov fmul cltd (bad) add adc sbb add xchg and jge,pt or or popfq xchg nop (bad) ds xchg (bad) cmc cltd mov movabs (bad) mov xchg xchg (bad) rex.R (bad) movabs rcr jp adc sub enterq sbb mov fcomi jne retq lea (bad) (bad) nop imul xor out or jno ficoml add out add scas and int (bad) lods xor jno (bad) fmuls rex.WB rex.RX sbbl scas mov adc (bad) fdivr add (bad) pop insl fwait or xchg mov jb mov jmp and sbb pushq lea adc (bad) fimull xor xchg mov lea cmpsl fs repz cmc jno nop push sub fcoms sbb pmaxub or retq out xchg mov sbb push mov mov pushfq imul cmp (bad) xchg (bad) rorl jbe cld test out loop (bad) lods mov loopne (bad) mov repz xchg pop or movsb jge xchg rex.RX in test (bad) xchg and adc callq mov rex.WRXB xchg rex.WRB mov xlat clc loop (bad) leaveq es out jns mov test fidiv (bad) cmp rex.WX adc push xchg push (bad) xchg cmp pop (bad) mov sub mov mov rex.XB out adc xchg loop (bad) je jb jbe ds sub xchg mov shrb (bad) jb jrcxz xchg stos jl scas std jg (bad) fwait shlb jge clc cmp (bad) mov mov cmpsb in (bad) mov scas cmp sub movsb (bad) movsl xchg and mov mov sbb (bad) negl rex.RB xchg insl pop test add or xchg xor mov jb fldl nop push (bad) (bad) jns std mov fwait cmp (bad) adc (bad) rex.WB (bad) mov mov cmc (bad) rex.WXB lods movabs xchg outsl mov xlat (bad) xchg xor sub fist movabs sub rex.RXB mov out je mov or pop xchg or sub in xchg movzwl (bad) cld jno rex.WX rclb jne,pt and sbb outsl pop sbb xchg cld (bad) mull pushfq mov rex.R (bad) rex.RXB cld xchg leaveq xor lock rex.WB (bad) (bad) fs mov mov (bad) nop rex.WRX std fcoms xlat loope mov sub pop (bad) imul sti or jle loopne sahf stos rex.W push lods (bad) push movabs addr32 vmovdqa callq fnstcw js clc out (bad) sub rex.WXB sbb and rex sub adc mov and xchg jrcxz or xchg mov stos rex.X in adc repz sub xchg cwtl rex.R push push xor push cmpsl clc xchg rex.X and add mov sub je jbe rcrl xor rex.RX hlt cld out xchg sbb pop mov xchg push not xchg movabs rex.WR (bad) movsb rex.WX insb pushfq (bad) jbe movsb mov cwtl stos imul mov (bad) xlat (bad) sbb (bad) adcl stc and (bad) push xchg retq sub mov (bad) je sbb mov (bad) push jg lods cmp jg ds jne retq pop movabs rclb jrcxz adc stc xor xchg or push xchg jrcxz jge (bad) je int fisttp xor and (bad) and mov push (bad) imul (bad) adc or pmaxub (bad) je xchg lea (bad) jns (bad) jbe sbb sub movabs adc jrcxz (bad) rex.WX pushq rol add and out or xlat rclb xlat or (bad) in and (bad) lock xchg cmp stc popfq push xchg idivl sahf rex.RXB (bad) stc (bad) (bad) cltd sub (bad) jbe jg outsl sahf lahf jg movabs gs rex.XB fstpl adc sahf and jnp rex.WRB test fstl lahf add jne xchg loope xor sbb pushfq adc jl rex.WRB (bad) sub (bad) stc movabs and or rex.RX rex.WXB clc loop je mov push retq btr sbb out in xor (bad) jns retq or (bad) movslq outsl pop retq xchg clc (bad) mov mov mov sub rex.WRXB fidivr outsb mov int out (bad) ss or (bad) (bad) repz cld lods xor (bad) mov sub (bad) fwait (bad) lods pushq cwtl int or push (bad) mov pushq xorl mov cmp adc imul insl push sbb movsl cmpsl (bad) fwait mov pop adc xchg incl sub (bad) jbe in pushfq and rex.X cmpb hlt enterq xor or xchg (bad) rex.RXB mov mov pop rex.XB add xchg callq or shr fsubrp imul (bad) jp add pop mov in lea fs or sti mov (bad) xlat pop insb xor rex.WR push in rex.WX sbb lea (bad) pushfq bts and or mov loopne cwtl mov rex.RB loop xchg sbb xchg lea loop jl xor (bad) add nop/reserved sbb cld sbb retq adc cmc sub cmp jnp ffree cmp rex.B xchg and sub adc out iret (bad) popfq jns (bad) xor rex.WRB leaveq scas jb (bad) stos insb xchg pushfq idiv cltd pop lods xchg popfq fistl mov or mov test mov sbb cmp lock mov sarl sbb xlat movslq xchg (bad) (bad) stos jbe sub in pushfq (bad) or rex.X addr32 pop (bad) je or sahf not outsl (bad) sub rex.WRXB rolb sahf adc iret xchg sbb mov (bad) addr32 add ljmp jrcxz jp (bad) or rex.RB maskmovq imull mov repz mov xchg (bad) push cli rex.X enterq add (bad) insb sti (bad) mov xchg fimul callq in sbb ja mov or (bad) (bad) pushfq and and adc push pushq xor lahf testl (bad) xchg push inc xchg mov mov add (bad) sahf jns es rex.XB (bad) imul jb cmp pushq jo (bad) out callq adc xchg fimul cwtl sahf rex.R in (bad) pop (bad) rex.WRXB fwait sub test retq enterq add add (bad) xlat stos fs sub jb rex.WRB popfq sub pop cltd popfq and (bad) retq movsb andb fidivrl xor mov and (bad) jl movslq rex.WR lahf cmp rex.W jg pop (bad) int3 out push rex.RXB xchg mov sub push and xchg (bad) (bad) fiadd xchg (bad) jae xchg mov cmp xchg loope sbb (bad) (bad) pushfq and (bad) cmp sahf int3 add subb rex.WXB rex.WRXB and lret cmp xchg callq lahf mov or fxch test outsl (bad) cwtl mov clc sbb outsb cwtl cmp (bad) ffreep jo mov test adc jno roll sti jmp or xchg lea rex.WR sbb xchg stos xchg sbb pop ds movabs xchg loop (bad) rex.R jbe (bad) pop xor sbb xchg add and pushq (bad) (bad) lret (bad) jg adc cmp xor mov mov sbb lret sub fwait xchg (bad) lahf xchg (bad) fcompl lea jo addr32 sub (bad) lock mov rex.WRX xchg pop clc (bad) and clc lret mov mov sti sar (bad) rex.RXB rex lret and add cmpsl mov sub xchg adc mov mov scas nop lea rex.WRX cvtpi2ps adc push rclb fnsave or pop mov lret push cmp xchg jmp pop outsl xchg mov sti (bad) out sub xchg in loopne jmpq int cmp cwtl (bad) lock retq and or cld xchg popfq cli fs mov movabs rex.XB (bad) out loope pushfq (bad) xor or cmp adcl xchg fnstsw shrl cli (bad) movabs pop rex.WXB hlt sub xchg jl and pop mov lods adc in (bad) iret je jbe xchg rex.WRB (bad) adc in cmp fsubrl xor jrcxz out rex.RB popfq out insl mov imul movabs xchg movabs andl jae lret cltd (bad) (bad) xchg std sbb cs scas sarl rex.RX ja je gs test jl outsl sub xchg fsubs pushq xorb in addr32 rex.W xor or (bad) insb fidivl xchg (bad) in pop or retq pop xchg (bad) movabs rex.WX or (bad) pushfq push rolb je fist fiadd nop add cwtl in nop adc test sbb fdivrp cs pushfq adc pop cmp idivl fldl rex.W mov insl sbb cmp adc or push hlt jae mov lea (bad) cld loop imul cltd push jnp and xchg mov sbb push cmp xchg xchg (bad) xchg mov jae cld (bad) jno orb (bad) repnz (bad) ds rex rex.RX loopne xchg movsl pushfq xchg sub pushq cmc (bad) pop lods sbb stos movsl (bad) mov cmpsb push xor rex.WB outsl push xchg xchg loope cld movsb in mov pop test insl (bad) (bad) lea jno (bad) mov (bad) pushfq testl or in sbb stc push fcmovnb or ficoml pop and sbb nop sbb jne pushq sbb add sbb jge rex.WRXB (bad) (bad) imul push mov insl (bad) (bad) test popfq out xchg orps (bad) rex.RX mov pop xchg (bad) xchg mov rex.XB pushw or out fs xchg adc and sub data16 mov add sbb ja or pop int mov pushq sub pushfq rcr test in stc and and fwait jrcxz add ja rex.WXB (bad) adc hlt (bad) rex.R xchg pop iret imul mov mov pcmpeqb and nop mov (bad) or xlat mov (bad) rex.WRB rex.WRXB mov adc (bad) rorl mov movslq lods mov jbe jrcxz fdivl rex.X cmp popfq xchg sbb pop mov jle in std fwait pop mov movl mov rex.R data16 (bad) repnz mov outsl cmp mov roll in lods xor add (bad) or rex.XB ror (bad) push cmpsl and (bad) (bad) cld pushfq mov (bad) (bad) jb adc and add add movsl callq cmp rex.WXB mov mov (bad) lock shrb jae hlt (bad) iret insl push jg pop rex.RB sub stc xor loop and push mov (bad) and cmp pop xchg mov cld test mov pop rex.WRXB nop and retq xchg (bad) cltd (bad) popfq test pop lret adc (bad) rex.W adc or (bad) mov pushq data16 mov (bad) xlat movsl jle int cmp xchg loop scas mov (bad) int3 (bad) xchg js mov rex.B out rex.WRX rex.RXB pushfq out mov repz xchg enterq pop lods stc pop mov cwtl sahf mov xchg in adc mov popfq lret and push sbb out loope callq test nop fnstsw xor out or jbe out and mov xor fmul cmpsl movabs rex.WRB (bad) sub fmull frstor mov sub jmp or out mov rex.XB movabs (bad) add sahf (bad) mov rcrb rex.WX outsl sub jb mov (bad) xchg mov fldl rex.WRXB cld stos mov cmp (bad) jg cmpsl jrcxz or xchg (bad) lret xor movabs imul (bad) rex.WX rex.W push cmp sbb mov (bad) xlat xchg movabs and sub iret cltd rex.W rex.WX or (bad) movabs rex.WXB stc or fwait push jnp scas shrl (bad) jne (bad) (bad) iret sti orl gs cld std mov nop rol ss notl out lret xchg xor loop pop outsb out xchg test ja (bad) cwtl jae pop jmp test rex.WR rex.RXB sbb or cmp rex.WRB addr32 lret lea retq rex.WXB sub pop (bad) jp (bad) (bad) movslq xchg (bad) mov out xchg loop xchg add xchg rex.WX jge sub repz rex.X stos (bad) int3 xchg je rex.R mov (bad) (bad) xchg (bad) movabs mov loope (bad) callq jne rex.WRXB cltd ficoml sahf orl out xchg cmp (bad) movabs fidiv (bad) adc std xlat add pop movabs sub mov movsl (bad) sbbl (bad) lea or (bad) fmulp mov cmp (bad) loopne insb icebp ficoml pushq test sbb jnp cltd fwait in push sbb imul pushfq lods (bad) movabs fwait movsb pushq jmpq movslq add (bad) hlt cmpl and stos mov adc test (bad) xlat movabs push (bad) pushq loopne je rex.XB cs neg sahf rex.X jge (bad) movabs enterq sbb rex.X push and (bad) callq (bad) cmp sub (bad) lahf enterq cmpsl rex.WXB mov add fcoms cmp rex.W jmp sahf mov test jl or (bad) xchg pushq (bad) rex.X sahf pop xchg lea push rcl out mov fisub mov movabs fcoms (bad) out or or fs (bad) push (bad) dec es rex.WX rcll xchg bsr imul push (bad) (bad) test cwtl cwtl cs cltd mov cmp adc mov (bad) rex.WR int mov and rex.RXB (bad) mov out in sub fild out test and fcomps scas mov (bad) hlt jnp xchg jmp ss outsb mov mov (bad) (bad) movabs decb mov sbb outsl rex.WRXB cmpsb cld mov movabs jb mov rex.WX jae sahf sub out sbb movabs mov pop rcrl mov in xchg stos or (bad) rcrb jne repz leaveq cmp scas enterq negb lods in cmp add pushq movabs outsl jne popfq movsl lock or iret xchg xchg pop fs rex.RXB movabs cmpsb adc mov lret sbb mov (bad) jnp xchg fcomps cmp and sbb nop mov cmp jrcxz (bad) mov rex.RXB sahf pop push cli lahf es (bad) (bad) pushfq movslq rex.B outsb push xchg xor or loope xchg movabs push shl cmc (bad) mov xchg add xor (bad) (bad) add add add pushq retq hlt cs xchg pop in mov (bad) mov movslq test stos clc xchg fisubr in in movabs adc pop out (bad) outsl jns rex.WRX (bad) je rex.WRXB gs (bad) mov and or jge or rex.WB lahf movabs leaveq (bad) cltd jmp push fsubrs nop or xor sahf sbb lods and stos sub pop or mov (bad) cmp movabs push cmpsl (bad) (bad) xchg (bad) or and stos sbb xchg fcompl jl mov jae pushfq (bad) jp mulb mov add movabs xchg (bad) in rep pop enterq (bad) xor rex.WRXB xchg lret ds xchg in push pushfq std pop add (bad) clc rex.WRXB nop out mov sbb adcl xchg (bad) xlat (bad) mov int push sahf xor jge push (bad) sarl add rorl sub pop pop mov rex.R mov mov sub insb xor scas xorl xlat (bad) rex.WRXB or xor pushq movabs jae rex.XB xchg (bad) pop mov (bad) adc sbb in out mov xchg (bad) jns (bad) (bad) ja and mov gs mov (bad) xchg mov mov popfq mov or fimull test stos jnp sarb shlb sbb negl (bad) incl xor mov fistpll mov lods rex.WRXB mov (bad) rex.WX rex.RXB pop (bad) (bad) repz fcompl push mov movabs add nop rex.RXB sbb rex.WX push xor and sarb (bad) (bad) fisubrl (bad) cs push shl sti in xchg mov (bad) add push (bad) sbb mov mov xor stc lock insl mov movsl (bad) (bad) jge push cmp (bad) movabs rex.RXB adc xchg sahf (bad) mov mov out cwtl xchg rex.WX sbb (bad) mov retq insb ja outsl or rex.R rex.WR rex.B mov xchg in (bad) callq pop mov scas and rex.WRX xchg xchg ficomp cwtl sti add jbe xchg push xchg movq sbb fstps jns orb (bad) fwait mov sub mov jrcxz pop nop mov and loope in fsts push add lret mov xlat lea rex.WR sub sbb jo cvtdq2ps xchg xorl (bad) std scas adc jnp mov xchg (bad) or jae add retq cltd add sbb rex.RXB (bad) sub (bad) rex.WX scas stos repz or shrb outsb jns outsl jle imul jnp (bad) mov and rex.WXB xchg leaveq movabs xchg pop rex.WXB (bad) adc popfq js iret out fsubs popfq mov (bad) rex.RXB (bad) (bad) add sub add adc nop sub addr32 stos and movabs xlat cmpb insb jle,pt mov jg popfq repz outsl (bad) int rex push or cwtl pop (bad) sbb jrcxz sbb loopne xchg xchg cli cwtl in mov sub pop xchg loope cmp cmp xor retq test rex.RXB mov int3 mov mulb xchg sti xor faddl popfq mov sub jbe push jp fwait scas jbe mov mov mov (bad) je and (bad) (bad) pop or (bad) leaveq (bad) or sub sub (bad) int3 mov outsl add xchg movabs retq xchg (bad) rex.X jp rex.WRB shrb adc sti nop xlat (bad) cli rex.RX sbb leaveq (bad) (bad) mov hlt movl rex.WX fwait out rex.WR xchg fwait in popfq sub sbb rex.XB rex.X jae xlat (bad) fstpt rex.WRB rex.WRXB and pop jge fiadd adc (bad) mov std xchg (bad) cltd add je (bad) retq cmp and cmp movslq or jl sbb lods add (bad) sbb callq jp pop (bad) movsl xor (bad) outsl (bad) lret fs ficomp xchg nop (bad) data16 sbbl jle movabs sub pop sub movsl cli rex.WRB jrcxz xlat xchg mov (bad) leaveq cmp rex.WRB movabs adc scas sarb mov cmc mov retq out std (bad) add (bad) rcrb push sub jne cld mov jne xor cmp js (bad) rcrb (bad) cmp mov push pop (bad) scas outsb jbe or (bad) popfq lock push outsl insl sub shll add or xchg sbb adc rex.W adc ja repz fs jp outsl data16 lea outsl (bad) push xchg or (bad) sbb pushq (bad) xchg sbb int3 add fisttp test mov sbb mov rclb idivl sarl sbb outsl xor (bad) (bad) jp jb add gs xchg sbb insl imul notq pop add and stos callq vmaxps and jnp imul ficompl add movsb sbbl (bad) xor or rex.WB jns (bad) sub out stos orb adc (bad) out xor or sbb imul xchg iret xlat mov or add imul sub or sbb (bad) add (bad) rex.WRXB sub and mov or mov xchg and pop mov cli adc cld lahf rex.X mov outsb xor outsl pushq xor (bad) (bad) retq jp lea (bad) (bad) std push (bad) cmpsl rolb mov (bad) or rex.WRXB in push mov test incb xchg rcl pushfq xchg (bad) mov cmp insb rex.WR rex.RB repz push adc pop mov stos int pushfq leaveq cmc mov rex.WRX rex.WRB sbb cmp movslq sbb push (bad) (bad) mov xor sti test leaveq (bad) ja fldt sub movabs cli out fwait add add rcl gs (bad) scas adc xor std jns xor cmp movabs rex.WR (bad) adc mov repz (bad) jmp test (bad) mov movsb stos adc adc (bad) cmp sti (bad) (bad) mov push push xchg test fcoms sub mov test push addr32 xchg pushfq push shrb sbb movabs nop shr mov (bad) rex.WR rex.RX lret xchg (bad) rex.XB xchg mov leaveq cs insb scas stos adc (bad) mov mov sbb xor xchg push rex.WR repz xchg rex.WX sahf (bad) add xor jno decb (bad) and jne icebp lock sbb (bad) (bad) fs mov sub out xchg movabs enterq sub xchg push mov lret sub (bad) sub jb mov rorb (bad) mov jns jg (bad) (bad) xchg cmp fstps fistpl cld xchg or stos cmp in rex.RX add je jno xchg shlb int jp rex cmp movsb pop clc pushfq xor xchg mov scas fsubl icebp and rolb xchg sub rex.WRX lock loop in negl xchg (bad) jno add jmpq pop add enterq (bad) xchg rex.RXB out mov inc xchg cmpsb mov adc rex.RXB rex.RB test data16 retq nop pop xor fmuls cmp (bad) lret psubb (bad) test fdivrs (bad) add adcl repz (bad) cltd out sub andb xchg jns jbe scas sub pop add callq movsb xor xor ds test (bad) jne push rex.RXB ss cli outsb repz mov imul rex.WR xchg or fwait jbe cmpsl repz movb jnp jo and and sahf jne fsubr retq mov jp retq hlt jnp jg sahf retq popfq sbb mov lock cmp (bad) mov pop rex add xlat (bad) adc and out iret pop cmp (bad) (bad) pop adc pushfq je movabs lret jl lock int adc cmpsb xor (bad) movabs or lock (bad) sbb fmull fiaddl mov movsb movslq sbb pushq fstpl mov xchg cmp lahf pop fadds mov mov ds pushq jp (bad) sub mov push imul test rex.RX (bad) rex.RXB rex.WX xchg outsb jae out jnp in xchg xchg data16 and outsl stc rex.X rex.WRX xor rex.WB fisttp sub orl (bad) (bad) rorb stos mov hlt movabs pop movabs cmpsl repz movabs xchg jle divl mov ja xchg pop cld jbe mov rex.WRX cmp stc roll (bad) and js nop int stos jge sbb xchg nop jrcxz rolb je add mov rex.WX adc insb mull stos mov lret (bad) imul cmp rex.WXB mov fsubrl mov (bad) rex.XB rex.WRX rex.WXB mov loope fnstsw mov outsb pop iret js rex.RXB fwait int3 (bad) mov (bad) (bad) sahf (bad) in rex.WR rex.WRB test jp movsl (bad) adc rex.WX fbstp loope cmpsb div mov cli movsl (bad) fisub pop fstps je (bad) cmp (bad) xchg icebp pushfq rex.WX test in adc mov (bad) (bad) xor and icebp pop movabs callq add sbbl jns leaveq cltd jmpq xchg sub adc (bad) jle rex.WXB gs jge movabs xchg (bad) or jno xchg push xorb xchg rex mov stos add (bad) rex.W rex.WRX bnd fistpl (bad) callq xchg lsl (bad) mov cmp (bad) xchg (bad) xchg push movslq or sbb (bad) (bad) js xlat xchg divb push fdivr out insb jg cmp cwtl and jae movslq sbb xchg lahf (bad) icebp or xchg in mov push imull fisubr gs rex.RB (bad) mov andl and (bad) (bad) (bad) rex.W nop lret in pushfq mov ja out push and and xchg (bad) sub or sub (bad) (bad) jp and (bad) (bad) (bad) mov push (bad) xor cmp mov (bad) mov xchg or pushfq adc fisubrl pop xchg pop insl leaveq cli mov outsl xadd lret (bad) int adc hlt loopne fisttpl movabs rex.RX cmp invd (bad) sub and and fild jrcxz xlat or out faddl test imul xchg (bad) mov xlat movabs fstl (bad) pop lret cmpsl jae (bad) gs fiaddl test adc and movabs lahf or jno shll add add outsb sbb push movslq add sbb (bad) push adc xchg jns rex.WR xchg mov xchg (bad) outsl fcoml jb fisttp xlat (bad) (bad) mov or (bad) cs rex.WRX cmp fiadd movsb or (bad) stc rex jae jmpq (bad) retq mov (bad) pop (bad) sbb sub jne sub rex.XB xchg pop (bad) rex.WXB nop nop sbb pop loop retq out gs rex.W mov mov in xchg sub mov fisttpl xchg movsl mov or (bad) lods in mov insl push jb xchg add pop (bad) (bad) xchg lret movabs (bad) decb andl icebp xchg jo mov sbb cltd cmc rex.WRB xchg clc rex.WR in (bad) mov test (bad) ss sti rex pop cmpsb lea xchg (bad) mov or xchg xorl (bad) xchg sbb xchg fisttp loop xchg movabs mov rex.WR (bad) xor rcrb (bad) enterq cmpsl rex.WRX (bad) fbld pop cmc (bad) rex.WR xchg and and xchg (bad) lahf rcrb movabs ja rex.WR push xor js sbb lods or xchg lock ja rex.WR xchg (bad) sarl sti mov sahf add jmp adc mov shll repz lret mov pushfq fistp (bad) adc mov mov sti fs or sub jp out push shrb retq rex.RXB cld or movsb lods sbb int3 loop sti xchg xchg punpcklbw (bad) add movabs xchg loop (bad) (bad) mov fdecstp xchg movabs pop (bad) mov xor sbb rex.X xlat test stos jae jb movabs adcl mov rex.RX rex.WRX pavgb in testl xchg lea lret xor add popfq andl mov mov jo movabs (bad) loopne add mull mov sbb rex.WX and pop jmp jae xchg es cmc sub mov mov (bad) fsqrt lea sub mov rex.WX or mov rorb rex.R sbb mov xchg and (bad) xchg mov (bad) (bad) test jg ja push scas sbb mov movsb notl mov cwtl ja fbld mov xchg fwait out fnsetpm(287 movabs and jrcxz pushfq fldl test (bad) xchg outsl (bad) fsubs mov (bad) (bad) xchg fwait pop movabs xchg test in out fiaddl lock mov sbb out mov or mov (bad) mov lods lahf lcall stos mov rex.WR (bad) repz imul or movslq in bndstx fs movabs push adc adcl (bad) idivl nop stc pushfq pop mov (bad) rex.RXB lods mov xor callq and (bad) add rex.XB out lahf (bad) fbld bsf callq rex.W mov movabs movsb int insb loop (bad) push int3 (bad) pop lods pcmpgtw xchg jge mov rcll rex.X imul hlt xlat imul xchg pop retq (bad) mov (bad) add jge xchg je lret jo cwtl es or pop lret lea int mov xor (bad) xor jb loope cli jmp or pop and xor (bad) fstps cmp xor jge data16 jae (bad) (bad) rex.WB nop jmp test std xlat jo lods jb sub adc rex.WRXB mov mov (bad) xchg mov fisub adc sbb mov rex.W and xor and out (bad) je (bad) (bad) ficom mov imul sub rcr stos mov sahf xchg in adc nop jle sbb (bad) lret mov mov (bad) and out lret movsl movabs pop push loope lcall out jno (bad) sub or cli stc sbb leaveq sbb fwait (bad) stos fdivrs outsl stos popfq fistp mov cwtl (bad) sub or pop je xchg cmp movslq add rex.RB mov (bad) mov jnp,pt rolb (bad) scas (bad) test cwtl in stc cld pop test data16 mov neg retq add adc sub retq adc (bad) pushq imul or movslq add rex.RXB (bad) pop or jg xlat jmp xchg rex.XB or sbb imul mov notl xchg adc loop lret (bad) test push lret mov rex.WRX gs jrcxz (bad) pop cs popfq (bad) rex.RX int3 mov mov (bad) rex.X mov scas xor lods sub sub (bad) push xor data16 xor idiv mov in rex.R (bad) and xchg mov jg adc in xchg jnp (bad) movabs (bad) rex.WXB (bad) rex.WXB xchg retq add rex sbb leaveq pop jne ficompl in xchg mov jne movabs or insl fistp movsl cmp push movl rex.WR xchg cmp mov (bad) jo stos xchg (bad) adc movslq fs cmp pop and fstpt (bad) (bad) imul jne xchg adc (bad) retq jl cmp cmp lea mov xor or insb (bad) outsb jno push mov movslq (bad) jae xchg jnp cmp roll mov lea sbb cli mov lahf movabs jp (bad) popq (bad) jns rex.RX mov mov (bad) xor pushfq xchg repz sub repz movsl in jo xor adc add rex.WRXB (bad) in pushq xchg adc (bad) (bad) and shll cmp iret push xorb scas retq gs rex.R cmpsb jns imul add adc sub mov cwtl and (bad) movsl (bad) scas push xlat or imul in mov sub jmp int sbb sub int3 (bad) lock lret retq pushfq jge rcl cmp or icebp (bad) jbe iret or push fimul fst movabs (bad) sbb add xor (bad) mov mov callq and cs xor (bad) rex xchg ss mov rex.WRXB (bad) (bad) add jge iret xchg scas mov and (bad) movabs sahf pop cmp pop and lahf xchg pop insb mov adc jmpq (bad) test rcll cmpsb sbb lahf ja add mov sub (bad) xchg xchg jle mov notb xchg (bad) enterq mov nop and pushfq out shl xchg test hlt notl cltd and cmp dec cwtl sub (bad) out popfq sbb or cmp (bad) jle fmul out jb mov retq xor (bad) xchg rex.WRXB and js rex.RXB add cwtl popfq sbb cmp in xchg cmp movb sahf clc mov sbb mov or (bad) (bad) cmp shll (bad) pop rex.WR (bad) rex.WX rex.RB xchg add mov (bad) pop xchg test fsubrl mov or jrcxz ja or movslq xor mov xchg jae xor sub rorb xor (bad) xchg movabs lahf or (bad) push movabs fisttp movabs jae rex.W xor cmpsl (bad) mov or movslq rol (bad) movslq adc sbb mov (bad) pushq sbb rcrl rex.WRX or movsl rex.WRXB mov rorb pushq rex.WRXB add stos (bad) fs lods jae (bad) jo push loope imul jg repz or and shll pop and and lock (bad) sub xchg (bad) rex.WRB negl loopne adc outsl jns stos sub in subl rex.WXB outsb int xchg test test outsl sub rcrl retq mov sbb pop mov mov lahf (bad) (bad) (bad) ds rex.WX rex.XB adc lea jo mov jp imull jle lahf jbe rex.XB sbbb data16 ja pop cmpsb repz mov sub repz mov rolb rex.WR rex.WRX xor rex.R (bad) rex.WR lock fwait (bad) mov test (bad) rex.WR es sbb lea fs rex.WRB pop sbb mov and sub insb fidiv sub clc lret mov mov lods mov shlb rex.XB or negl sub adc (bad) (bad) hlt add mov outsb mov popq out and or rclb and std (bad) clc jge pop jp (bad) insb xchg rex.WX (bad) and push jl sbb or sub mov mov sub fcoms (bad) or jp loop pop or mov rex.B (bad) (bad) (bad) rex.WX sub (bad) repnz pushfq or pop pushq je mov adc ja (bad) jbe in push adc mov mov pop or (bad) or jg mov sahf cmp (bad) xchg mov fstpt decl movslq (bad) nop addr32 pop int3 (bad) and sbb sbb fldenv sahf (bad) and push retq cli (bad) or sub (bad) or xchg jbe cmp (bad) jl loop jg mov or sbb rex.WRX rex.B rex.WXB cmpsl (bad) jne xlat pop xor rex.WRXB rcrb pushq xor retq (bad) push pop mov sbb (bad) pop (bad) (bad) es pushq cmp (bad) imul popfq or sarl lea nopl mov movabs sub xor sub add or pop and fimul xchg or lret cwtl nop outsl sub rolb xlat xor add rex.WB icebp js xchg scas mov insl lods sub mov cmp jg or sbb imul ds (bad) (bad) mov sbb movabs idivb (bad) (bad) xchg rex.RX movsb shrl (bad) pop or jbe (bad) lods popfq rex.B cmpl xchg lahf retq xchg xor loop (bad) jo mov lahf lea cwtl xchg xchg stc push and jge sub retq xchg mov rex.RX add (bad) ja xchg (bad) cwtl jb sbb out imul (bad) rex.WX (bad) jge movabs pop in loopne cltd sub xchg adc jp xchg adc jmp incl jne (bad) lret cmp loope xchg cld scas shl (bad) (bad) xor movabs (bad) lods xchg rex.WRX idiv repz rex.WXB xchg mov sub movsl nop xchg mov add sbb mov rex.RB jae xchg jne xchg ss xchg (bad) (bad) jae movslq ja mov lods add (bad) divl xchg lahf in fwait xchg mov mov rex.WR (bad) movabs jno mov add rex or mov xchg jne movabs (bad) movslq fistp xabort mov pop jae (bad) and mov std mov mov movabs mov rex pop pop xchg xor add sub pushq int add xchg pushq add jmp jae (bad) mov mov jnp xchg popfq rex.WRXB rex.XB add and mov hlt sbb fiadd xchg mov loope shll outsb cli and sub jge hlt and mov retq push (bad) rex.WRB in es repnz or sbb xchg cs add xchg (bad) mov out fmul jae addb loopne cwtl faddl cs test outsl xor sub subl ja (bad) xchg adc sub sbb mov xchg fidivl push cmp sub mov push push popfq rex.WX (bad) imul movsb insl out add xchg xchg mov jae jle rex.WR pop sarb rex ror jmp xchg fwait ss add rex.WB es nop jmpq mov pushfq mov xor sahf je sbb lahf outsb push pop (bad) in imul rex.WRX pop xor rex.WB cmpsl jg sbb sub (bad) repz xchg (bad) and icebp (bad) insb sub xchg movabs (bad) mov adc mov in xchg mov iret or (bad) (bad) rex.WRXB movabs stos shll xor rex.RX (bad) movsb xchg pop cvtps2pd retq in movsl int pushfq lea jb fsubs jg adc fwait (bad) or rex.RXB data16 (bad) scas sub in cmp rex.WRXB cmc out xchg cld (bad) fisttp outsl movabs sbb sub callq xchg jmpq rex.WX lret lods mov enterq lahf addb lret divb xchg retq sub ror xchg xchg jg or stos movb in retq sti lods in xchg sub scas push (bad) shrl mov fsts lods test adc sahf cltd or push sub movabs pop callq xchg pushq retq rex.WR cmp insb sub in cwtl mov clc (bad) movabs frstor sbb pop xchg jnp jns enterq nop (bad) (bad) pop rcrb insl pop cmpsl (bad) and xchg mov hlt repnz and cmova (bad) (bad) jmp mov test xchg roll cwtl jg rex.WRX xchg or mov movabs push rex.WB icebp nop jp xchg (bad) xlat (bad) rex.WRB fwait xchg outsb andl (bad) cs or jmp or jg xchg (bad) pop jno pop in xchg rclb (bad) mov pop xchg add popfq push lret loope test icebp pushq cmpsl jge (bad) mov sti lahf cmpsb and fs add xchg rex.RB pop imul mov out cltd test rex.WRXB jge xchg decl adc retq pushfq and adc rex.W in jp rex (bad) sub jnp (bad) je lods cwtl shr push jp testl pop enterq sbb (bad) and rorl push cmpsl clc xchg xlat jg retq (bad) scas xchg test fdivrl sahf (bad) mov cmpsl lret outsl stos rcll pushq movabs rex.XB jg icebp test pop add rex.WRXB push rclb pop rex.WXB repnz and and (bad) xchg (bad) rex.W jmp xchg xchg (bad) sub push (bad) and xchg ss sarl xchg xchg sahf jle in xor jne jnp lods insl xor adc sbb jl lahf rex.RX sbbl xchg iret mov xchg mov shll notl (bad) mov nop (bad) popfq stos pushfq repz (bad) mov fcoml rex.WXB and fstpl fdivrp xchg in adc lret xor mov (bad) (bad) js adc (bad) (bad) jno pop pop cwtl movabs push xchg hlt cmpsl mov sahf and pop mov sahf rex.WRXB push gs cmp and pop xor jnp subl (bad) sbb lret xlat pushfq scas enterq xor rcrb (bad) rex.B out lea je (bad) xchg pushfq mov cmp xchg fldl je movabs gs sahf add cmpsb (bad) test jl stc es xchg (bad) stos (bad) out or rorb xchg mov fistl ss (bad) scas xchg iret outsb (bad) enterq loopne sbb out xchg mov xor xchg adc rex.WX jmp outsl (bad) sbb xchg pushfq push mov (bad) imul (bad) movslq or xor mov sahf sbb pop out adc xchg adc (bad) mov jo scas xchg ds sahf jl (bad) and push movslq int rex.WRB rex.XB pop xor fisubrl test xchg lret and repz jmp cmp mov jge xchg std outsl cmp movsl xchg test in cmp xchg xlat sar (bad) (bad) gs xchg fs jae xor sahf rex.WXB mov (bad) mov es (bad) jnp gs (bad) ja mov (bad) movabs xchg push hlt fidivl xchg pop movsb stc pop or (bad) xor cs xchg cltd jmpq fcomps pushq (bad) xlat xor sub movabs xchg jnp (bad) sub add (bad) mov cs sbb push cwtl jle addr32 (bad) sub movsb jns xchg jbe xchg pop fcoms sahf lret xchg insl (bad) mov stc rex.RB and jp out (bad) jl in mov lea sub cmp sahf scas xchg iret rex.WB (bad) cld (bad) cmpsb jp add (bad) outsl lahf cmp cmp jmpq fwait (bad) movabs rex.X repnz in mov lea iret jle or in rex.RX mov fdivs xchg (bad) mov stos cmc cwtl imul loope push lods lock je xchg cmpsb jne rcll and clc (bad) xchg (bad) (bad) rex.WR repnz (bad) xor mov rex.WX ss sub xchg mov mov add callq jae (bad) push frstor jg fdivl out pushfq mov negb push mov (bad) in lock (bad) xchg or fstpl pushfq cmpsb jmpq pushfq (bad) jno neg mov mov cmpsl xor rex.RB push (bad) (bad) pushq add clc imul es sub rex.X xchg (bad) (bad) mov js sub fmull mov pushfq or and insb jge xor loopne sarl (bad) xor and retq rex.R cmp (bad) sub push jmp mov sub xchg jnp rex.WXB jbe enterq rex.RXB movabs int fcoms mov movsl outsb xchg test rex.XB or rex.WB (bad) xchg out (bad) jl pop sub pushfq loop or sbb outsl (bad) rex.RX std test (bad) jle push adc testl cli xchg movsb xchg nop xor mov xchg mov out xchg sbb adc cmc sub mov imul sub lods stos (bad) cltd pop (bad) lods cwtl (bad) lret retq addl rex.WR cli cmc in fstl mov out int (bad) fimul cwtl test lods int lret movslq test rex.RB insl rex.WB movsl rex.RXB jl test rcrb sub sbb and loope in (bad) cmp rex.X or cwtl (bad) lods addl fisubrl push in add xchg mov sub (bad) rex.WXB outsb int out (bad) loopne cwtl fs movslq fisub mov out mov (bad) rex.B fs mov test mov mov (bad) movabs rex.WB rex.XB (bad) fsts jno (bad) (bad) cmc test lods shl popfq pop rex.WRX mov xchg mov (bad) pushq rolb rex xor (bad) (bad) push push (bad) cltd outsl xchg cmp lock (bad) pop imul cld rex.WRXB adcl negb (bad) lods rex.WXB jae or scas (bad) out mov adc cmpsl in mov sti cmp jle mov in push xor (bad) jbe xchg (bad) cwtl push jg mov add jg (bad) (bad) xlat cltd ss (bad) and cmpsl fbld addr32 jg std xor in (bad) sbb cmovb mov rcll (bad) mov rex.W test or (bad) pop adc rcr and or xchg nop adc ds sub xchg (bad) pop pop lret rex.RX adc adc rex.WR fistpll insl pop (bad) xchg cmpsl rex.XB adc adc fs rorb sbb jle (bad) (bad) and xchg movabs out stc rex.RX (bad) out lea pop xor insb and adcl fs add mov pop rex.WB (bad) rex.RX mov movabs add cmp imul xchg jmp mov (bad) test lods pop (bad) (bad) rex.WRXB (bad) xchg push movb mov pop jbe fisubrl xchg in pop movabs out (bad) add rcll cmp (bad) adc rex.WX sub jl push xchg or outsb cwtl pop mov mov nop mov (bad) push scas hlt mov in add sahf sqrtps xor movabs retq cmpsb (bad) jp hlt xchg xor out fstl adc movl mov cmc (bad) xor js sbb rex (bad) sbb data16 fyl2x sahf xchg fildl rex.XB xorl (bad) pop push jle std pop xchg xchg mov test jge loop xor (bad) (bad) and movsl xchg out mov sub rol push mov (bad) loope jae sahf rorb rex.WRXB push icebp (bad) out adc rex.XB xchg in fiadd callq shrb add add pop in or xchg hlt push xor and movabs cmp (bad) (bad) popfq sub rex.WR sub cmpsb xor fistpll or adc clc popfq or rex.WRX push (bad) popfq mov stos addr32 and (bad) (bad) stos xor movsb rex.WRXB (bad) pushfq scas xchg mov cwtl pop mov movabs (bad) loope std rcll adc pop pop or jge loope pop addl adc lahf fldcw cli in mov roll fadd add and adc mov jbe sbb pop mov xchg fdivrl lea push test pop lret lea mov lahf add imul (bad) (bad) movabs ds negb rex.WRB jge lret mov mov je cmp xchg adc rex.RX push fiadd sahf rex.XB xor jge sbb push ljmp adc enterq sbb leaveq iret cltd (bad) mov in add mov rex sub add (bad) (bad) mov sti cwtl add mov movsb pop push xchg outsl jle xor out sbb rol push (bad) jg add sbb fisubl lock int addr32 xor data16 (bad) xor (bad) out pushfq jbe or or cmpsl xor icebp callq jge rex.WXB xor (bad) popfq pop mov fcmovbe andb pop orl fsubrs (bad) pop mov mov jbe testq jnp mov jg shlb pop and (bad) xor cmpsl loopne divl nop adc (bad) mov lret insl or rex.X rex.WRXB mov mov enterq jmp and stc loope (bad) jae repnz adc jmpq lea add cltd callq and in scas xchg jle xchg add xchg stos es test in stc xchg xchg icebp (bad) pushq mov mov mov nop jmp ja mov rex.RXB xchg sbb adc mov (bad) rex.B xchg (bad) xchg ja cli fdivrs xchg add movabs xchg mov fisttpll loopne xchg cmp cmp xchg push or mov enterq idivl rex.WX int3 loope sub xlat (bad) cltd (bad) in mov loop xchg jmp fwait lea test xchg loopne setns movslq and mov xchg (bad) (bad) rcrl rorl stos xchg shl xor (bad) gs xlat sahf sub sbb rex.WRX movabs data16 jne in test cmc rex.RX push and xchg insl sbb xor xchg (bad) or add xchg mov xchg loopne cwtl xor cmpsl (bad) cs jmp (bad) stos (bad) mov retq xchg icebp rex.WXB add (bad) test lahf xor (bad) xchg movsl cs (bad) in mov sbb push rorl hlt repnz mov insl ds pushfq mov mov pop in xchg and retq mov std mov mov (bad) mov inc add cmpsb stc int fwait sub (bad) clc or jnp cld addr32 sub lret jmpq jmp and loopne (bad) jl iret test mov rex.XB xchg cltd add rorl mov out mov lods cltd jmp out enterq int xor (bad) adc push imul and (bad) (bad) (bad) cmpl (bad) test push mov repnz push (bad) (bad) (bad) je insb fnstcw cmp (bad) lock in xlat mov clc or (bad) mov (bad) and xchg test test lock fwait out cld mov stc ficoml imul jns xchg sbb gs xor push lret cmp and ficomp addr32 or scas movl sbb cmpsb fprem1 (bad) adc scas rex.W jl,pt mov rex.XB pop add sub out rex.WR movabs fnsave xor mov push mov xlat sbb scas sbb movabs pop cvtpi2ps rex.XB loop mov (bad) sahf adc sahf scas fs fmull sub loop rex.WRX hlt leaveq rex.RX jae js or loopne loop rex.WRB cmp lock ds pushq (bad) pushfq stos in insb rex.RB rex.WRX xchg (bad) jne xchg lea pop rex.RXB jmp (bad) lret orl xor callq or sti xchg sbb xchg (bad) (bad) sbb stos cwtl (bad) outsl sahf (bad) (bad) jns rex.R rex.RXB (bad) fisubrl mov (bad) mov or (bad) mov (bad) cmpsb rex.WRX (bad) mov int3 retq (bad) std rex.R mov lods push (bad) xlat jno and (bad) cmp enterq sti iret xchg xor (bad) shl sbb sbb int (bad) rcrl test (bad) sbb loop xchg out rex.RX sub mov push jns xchg mov xor mov adc jnp xchg ja insb sub and rex.WXB (bad) sbb (bad) jl (bad) mov rcr in nop and mov (bad) and movslq add lret rex.RB cmc or (bad) xor add (bad) lock (bad) mov (bad) imul cltd pushfq jl pop movslq retq (bad) movabs sarl rex.WRXB rex.WRB or pop add (bad) jns jne std mov std mov sbb sahf xchg mov test lock rex.WX sub cmp test retq jmp sti (bad) lea fs (bad) adc scas or sti sub mov or nop movabs imul or movslq mov (bad) std pop xor rex.WX xor (bad) xchg test adc in jl mov je enterq (bad) pushfq sbb mov pop add stc pushfq and mov pop add icebp loopne pop jp jo (bad) pop adc (bad) pop lods clc mov mov loope sarl outsl pushq in cmp add xor pop retq in (bad) or lock outsb popfq sahf movsl mov or ficoml push lret rex.W jae loope (bad) mov (bad) (bad) std insl es (bad) sbb xchg in mov xor mov sub sub fwait push in xchg (bad) adc fnstenv or xchg xchg imul mov xlat (bad) retq mov and or mov rorl xchg data16 pop pop xchg push cmp xchg cs jl mov ss xchg jp insb rex.WRXB rex.WRB notl (bad) pop nop pushq jle (bad) mov sti int mov mov repz jne cmp mov (bad) out sbb sahf iret jl sub xchg addr32 sub repnz mov icebp fwait (bad) fidivl rex.WRXB fistp rex.WRX (bad) fwait leaveq adc cmp or insb rsm mov loopne in (bad) addr32 and lock sarb add retq cmpsl cmpsb fsubl jbe ja xchg sbb movabs cmp out repz in lret mov xlat pushq mov pop (bad) lods pop imul (bad) loope cmpsl jl cmpsb mov pop xchg out rcll rex (bad) xor sbb clc push cwtl or mov imul (bad) in lods addr32 icebp mov add mov jp xchg movabs xchg in (bad) (bad) or mov and (bad) jg mov xchg rex.WRXB loope mov (bad) in rex.WR xor fildll rex.WX stos lods lea or rex.WB and movabs lods lods sub test jge addr32 adc push rex.WXB pushfq pushq pushq js cmpsb xchg ja shl (bad) xchg test cltd ficoml mov test lret rex.R (bad) mov out mov (bad) movsl jns (bad) (bad) jae testl xchg fisttpll (bad) xchg rex.X pop push xchg callq jrcxz xchg cmpsl lock fs es fstl (bad) xorb jp clc in sub (bad) xchg sbb insl fs (bad) (bad) (bad) movabs adc pop fsubrp fcoml sbb sbb xchg (bad) jl jo and pushq mov (bad) mov jo and test xchg cmp movsb hlt xchg fdivl insl scas sbbb movabs lret pop stos movabs (bad) icebp rex.RX adc gs ss movabs icebp fdivrl iret mov sbbl pushfq and xchg out fstps enterq movsb mov push fidivl callq push insb ss add xchg stos cmpsl fcoms (bad) mov (bad) pop popfq xchg xor xchg xor (bad) sbbl cwtl jo mov repz (bad) loop xchg shr mov (bad) xor (bad) lods sti mov mov pop xchg fidivr sbb lret (bad) mov pushq sbb mov div mov adc xchg cmpsb jp in mov cwtl xchg loope add add xchg rex.B out pop int (bad) push xchg jne xchg sbb cmp and movabs (bad) (bad) clc cmp xchg mov mov rex.WRB fisttpl jge nop and rcrl xchg xchg add rex.WR loopne mov (bad) cwtl (bad) (bad) or loope mov xchg push push std nop mov (bad) imul int3 xchg sub cmpsl mov ljmp (bad) outsb mov fistl jp mov add lahf cmp jl jbe lret in (bad) xor rolb mov (bad) std push out shld xor xlat rex mull cwtl data16 xlat xchg (bad) mov push movabs scas mov sahf rex.RB (bad) stos add xchg mov fwait pop outsl (bad) sbb rex.X sahf jnp movabs mov mov jrcxz fsts (bad) movabs sub mov test je (bad) pop insl or (bad) cli insb cmp stc (bad) cltd in xor or enterq stos sbb (bad) jne and jo mulb xor movsl pushq (bad) xlat pop rorl (bad) stos jbe jg (bad) (bad) pop rex.WX int std (bad) sbb or (bad) rex.WXB push (bad) rex.R xchg movabs sti lahf rex sub push xchg and test jge or lahf sbb cmp insl shlb lret rex.R mov movabs movabs or rex.WB rcrl pop adcb cmp push test push leaveq ss and incl pop (bad) mov mov lea jnp sbb fdivs ja test jp (bad) push add incl idivl mov std int fildll rex.RX adc stos pop lock (bad) (bad) gs lods lea bnd add nop test loopne fucomi mov (bad) rex.WRX xlat (bad) jbe rex.WRB and fs xor cltd add sbb (bad) (bad) jne callq enterq (bad) pushq add out orb or je mov rex.RXB (bad) loopne rcrl in or cmp jae jo mov xor (bad) (bad) sti pop mov or fstpl sub iret outsl (bad) gs in rex.WX insb adc fisub mov adc (bad) (bad) adc pushq xchg xchg pop sbb push jb (bad) rex.WRX movabs fdivrl fisubr rcrb mov adc rex.RX adc and adc lahf add xchg movsb iret callq mov sbb xchg xchg cmp mov adc fidiv (bad) ja (bad) outsb xchg cltd loopne mov xchg rcrl xlat iret xchg adc (bad) cmp jns xchg pop cmp cmp enterq test jae cmpb cmp mov scas movabs rex.RB pop xor and (bad) xchg (bad) sbb popfq in xchg xchg pop xor cmp xchg pushfq movabs outsb loop xchg imul std lahf xchg imul loopne mov rex.WR lea stos pop cmp xchg pop sbb (bad) js mov cli imul fwait mov (bad) mov pushfq xlat or movabs rex.RX retq fdivrl popfq (bad) (bad) xor mov xor jb in scas lahf shlb lea xor jae (bad) xor add sbbl adc (bad) pop in (bad) cwtl (bad) es adc lea loop xchg sbb xchg retq jnp cmpsl (bad) outsl (bad) rex.WX xchg xlat out mov rex.WRXB rex.RXB scas push xor out xchg mov (bad) pop xchg (bad) cmpsb enterq rex.RX xchg jle (bad) or xchg add repnz or data16 sbb cmpsb int pushq out xchg (bad) cmp rorb xchg cltd mov ja retq (bad) jbe mov jo out andl retq pop callq pushq jae rex.WRXB jnp rex.RX test (bad) (bad) pop xor cmpsb pop add xor lock nop jp lods push xor push sub push pop mov add pushfq (bad) fsubs subl sbb (bad) xchg jp mov mov rex pop movabs rex.WXB pushq je rclb mov mov add push movabs or repnz (bad) or pushfq add xchg scas fdivrs fstl cmp lret sbb retq push stos iret jg in fisub movabs rclb mov js fdivrs cltd mov fcompl adc xchg adc test sahf int3 or sub rex rex.RB movabs fs cmp loop movabs lea rex.W rex.B (bad) xchg add cmp jbe rcrb rex.R movsb xchg rex.W es je test xchg jbe fimull clc lock sahf mov rcll adc rex.XB fdivs xor xchg (bad) rolb (bad) mov cmc stos push clc jnp je rex.W test lock (bad) fdivrl sub (bad) retq data16 (bad) mov mov jge xchg jb clc cmp pop lock test stos (bad) push mov icebp xchg (bad) lods xor callq fistp (bad) loopne xchg cmpsb js mov xor in pop out sahf xorl outsl (bad) jne xchg out xchg (bad) xchg scas loop push fisttp loopne cwtl (bad) int sbb (bad) movslq jns icebp (bad) mov stos xchg loope rex.WR movsl loope scas clc nop push and movq rex.XB (bad) out xchg stos jbe mov sub cmp mov xor pushfq int3 cs rex.RB xchg fcompl outsl push pop add xlat loop loope movabs insb (bad) mov and ss jnp jno in (bad) ja rex.WXB mov jmpq (bad) xchg xchg (bad) sahf adcl xchg xor repz adc mov pushq vcvttss2si rex.B loope mov rex.WR fisubr (bad) xchg (bad) mov and cmp pushq (bad) pop and xchg sbb xchg mov data16 notb jg (bad) movabs push pushfq stc test ja mov xchg xchg rclb (bad) retq cmp xchg mov jmp or loope (bad) rex.WRB jmpq sbb (bad) adc (bad) jrcxz xor push xchg movslq adc movsb sub sub (bad) decl rex.X imul (bad) or in xchg jg test cltd push mov pop cmp cmp xchg pushq (bad) xor pop cld push pop jne add jno loope push sbb mov and sahf iret mov (bad) xchg callq (bad) mov rcr or xchg or (bad) rorb seta jmpq stos xchg (bad) (bad) rex.XB push (bad) scas fs jmp je outsl xchg (bad) test movsb xlat (bad) out add xchg out jmp in rex.WR mov xchg and stos xchg xchg pop jmpq rex.WRXB (bad) rex.RX (bad) (bad) rorb nop xchg push sbb rex.B cmpsl (bad) test xchg lret (bad) out mov rex.RX (bad) mov sbb out mov out mov movabs xor push sahf idivb andl mov (bad) jl fwait sahf test rex.RXB movsl pop sbb push fldcw rex.WRXB pushfq movabs (bad) test mov jp rex.WRX (bad) stos and adc mov (bad) mov jl out mov je lret push idivl mov adc lock push fcmovbe mov movabs pop (bad) mov mov sub jae (bad) xchg cmpb divl jmp rex.WB pop pushfq stos pushq mov or nop (bad) scas vpsubd je rex.RB ds rex rex.R rcl mov (bad) negl xchg mov and (bad) stc rex.WRXB xor push sarb pushq cwtl iret pcmpgtw xorl mov out (bad) xchg add pushfq insl xchg pushq insl iret jno rex.WB clc pop xchg mov mov loopne mov rex.RX pop test or jbe adc (bad) or jns mov jge xchg xchg divb xor push lahf insl sbb enterq xor (bad) cmp jge shlb rex.WX jmp fnsave cmp jge jb (bad) sub lahf cli cs cmp ficompl add mov cwtl xchg pop jno pop fs inc ss pop pushq and in lea jge mov pushfq cmpl sbb jns (bad) adc pushq out mov rex.RB pop lahf ss xor and adc imul addr32 rex.X rex.WB cqto iret retq insb xchg mov fadds in gs test xchg cmp rcrb pop and test mov stmxcsr jle (bad) xchg std push push lret (bad) rex.WRXB push pop cmp xchg int (bad) pop mov (bad) (bad) lret cmpsb jnp push roll popfq fnstsw push shll sub add fld fistpll xchg pop addr32 mov mov xchg stos lods fs fidivl callq add xor in adc adc sbb sub rex.WRX (bad) fstpl loope and sbb (bad) movabs or pop jrcxz jg jns nop movabs xor (bad) (bad) add (bad) mov in sub sahf mov negb pop jns mov jo xchg mov (bad) xor xchg fdiv sti leaveq shr orb imul popfq movabs or ss (bad) jle (bad) std xchg mull push xchg cli or push jnp stos jmpq jmpq pushq cmp add pop outsl (bad) mov jle (bad) shlq cld es mov (bad) xor sbb sub cmp mov mov (bad) adc rex.WX xchg ja sahf rex.W push (bad) xchg sbb or jne notl sub (bad) (bad) rex.WRB mov (bad) xchg gs sbb imul lret (bad) xchg (bad) (bad) push add rex.WXB fnstcw enterq rex.WX xchg or int mov (bad) adc stos fdiv movsl shlb lock adc push push mov cwtl (bad) stc loope or vmovaps xchg add push jle xchg scas and testl lock int movsl xor xchg pop and (bad) push mov sub mov jae rex adc cs push popfq out add or and sahf mov sub xchg cmovne outsl jb rex.X xchg rex.RXB jl xchg rex xor (bad) xor rex.WX cmp pop jno xchg outsl or pop fmuls rex.B movabs (bad) xchg (bad) movb mov outsl imul (bad) iret xor cmp mov mov or pop xchg or fwait xor xchg cli sub iret and add (bad) rex.W rex.WRX rex.RXB int3 jg add je cmp pushq fidiv push loopne sub je outsb int out (bad) jmp fstps mov cli js rex.W insb loope sbb movslq fldl2e xchg rex.WRXB repnz lret jnp (bad) pop mov xchg test jrcxz xchg jno mov and and (bad) pop pop (bad) (bad) (bad) mov (bad) jle jl (bad) (bad) sti pushq rex.XB ds xchg sbbl lods rex.R jle data16 rex.WRB xor outsl and (bad) pop xchg std fnsave lods (bad) mov mov sti ss ror pushq (bad) add (bad) rex pushq xor pop int3 adc imul (bad) sbb popfq cmp repnz xchg adc fistpl (bad) sub or push mov sbb test (bad) (bad) rex.WB hlt ficompl push pop in mov mov (bad) (bad) fcmovnu movsb (bad) iret mov shlb sub pop movabs xor xchg sti sbb pushfq (bad) rex.XB andl or and sbb test xor adc xchg je sub lret mov divps icebp sbb (bad) iret xlat int rex.XB rex.WX mov mov sahf mov pop mov insb xor mov push xchg xchg push (bad) mov int mov imul nop pushfq push es fistl jns out rex.W jnp and and or ds rex.WRX (bad) mov (bad) xchg mov pushq adc xchg mov push xor rex.WXB and sub gs and xchg js xchg pushq movslq retq adc imul sub test rex.X cmp push imul xor mov rex.WX in (bad) movslq rorl out (bad) rcrb mov xchg rex.WRXB xchg and mov cwtl repz out sbb sti mov gs xor je xor pop test sahf and lods pop rorb scas pushfq (bad) out outsb (bad) mov rex.WRX (bad) bnd pushq (bad) iret xor loop (bad) mov callq mov push movsb sahf sub test xchg (bad) rcll and push in (bad) add out scas jmpq callq insb add movsb xchg outsl cli movabs (bad) outsb (bad) (bad) or retq hlt (bad) or movabs lret (bad) (bad) jae push sbb cmc mov (bad) mov rex.B (bad) add or (bad) push (bad) pushq xchg add and pushq jns mov int3 (bad) adc int in movabs rex.WB fs pop mov xor or pop adc (bad) jrcxz xchg jg repnz clc (bad) (bad) (bad) cmp mov push push (bad) in mov pop lods jne pop lahf (bad) (bad) jbe push adc cmpsl jbe adc cltd imul repnz clc or imul cmp testl rex.W rex.XB sbb rex.WRX std mov jrcxz popfq insl push (bad) mov imul sbbl jb jno (bad) fnstenv nop sbb fidivl (bad) xchg rex.RB movl lods (bad) jle or in xor jge jle mov leaveq (bad) fwait or or movabs xchg push (bad) mov (bad) (bad) test (bad) mov jmp rex.WX push std repnz xor iret jp and (bad) (bad) cli mov push (bad) push mov pop rex.R rorb (bad) leaveq pushq (bad) cmpsb sub (bad) popfq lcall fnstsw cltd mov out movslq sbb cmp leaveq rorb xor rex mov pop (bad) movsb xlat movslq mov jno mov adc cmp mov pop sbb mov mov stos and cs (bad) (bad) jne cmp mov pushq sub pop (bad) outsl or and rex.RB rex.W and pop pop movabs fs push sub rex.XB (bad) sbb fistp jge jne test cmp xor retq rex.RX fiadd pushfq (bad) sbb lods add mov rcll add (bad) (bad) mov (bad) push mov add mov adc rdmsr mov sbb std lret mov imul out (bad) pushfq sub (bad) rex.WR rex.XB sbb xor mov or lahf cmp add (bad) and imul icebp ja pop (bad) movabs pushfq and xchg (bad) (bad) xchg and xchg xchg loopne pushq push xchg rcl movslq mov std sbb jl push ds rex.WRB not xlat mov adcl out sahf (bad) test mov pushq rex.WXB repz lahf mov mov pop fnsave fwait xchg loop (bad) (bad) sbbl int adc rex.WX xchg outsl loop enterq mov cmp data16 add push (bad) or mov in rex.RX enterq xchg push fidivl adc and fmuls xchg (bad) (bad) jb pushq (bad) fstl xchg (bad) (bad) in mov rex.B push imul lock add jns mov adc (bad) sbb movslq (bad) xchg sbb sub xchg or cld stc sbbl movabs rex.RX cli stos and std sbb rorb fwait sbb jns retq (bad) ficoml cmpl (bad) cwtl xor test js xchg xchg pop (bad) repnz (bad) sbb int add adc mov rex.WRXB adc mov cmp fcmovne xchg (bad) pushfq (bad) and icebp xchg imul out mov cmp outsl jg mov (bad) lahf push jns mull (bad) and fisttpl xchg pushq and add in xchg jnp jmpq jmp xor icebp stos (bad) rex.WRX sahf (bad) xchg rex.RXB sbb cltd fisubrl ja xchg rex.WRX ficom pop rex.XB int ja (bad) (bad) mov xchg xor cmp sti pushq mulb mov gs shr rex.WX roll sub jb and jg mov (bad) mov (bad) rorb pop mov outsb fcoms or fnop jp rex.RX orb cltd outsb pop and add test notb xor mov cmp jae xlat in rex.R lea jmp nop (bad) (bad) cmpsl (bad) out fidivr cwtl sahf pmovmskb cmp xor xor adc adc mov xor iret add xor jle data16 rcrb xlat mov stc xchg movabs retq (bad) test mov clc (bad) adc xchg cmpsb stc sbb pop scas outsb addr32 (bad) rex.WR sbb movsb (bad) popfq jb or scas mov xchg add (bad) jno (bad) (bad) out add xchg out pushfq xchg sbb rex.R or (bad) xchg movabs loop sarl xchg cmc mov jp ja rex.X lret xor pop popfq (bad) subl shlb xor pushfq jno out mov icebp imul lods sub rex.RX je mov jbe test adc cmp test cli (bad) insb incl stos xchg sub fdivrs or or cmp movsb and movabs test push pop mov rex.X rex.XB ds pushfq ja rol adc mov push repnz jp imul mov pop out xchg pop in jp mov and (bad) mov rex.B xor cmp sub sahf xchg xor cmpsl scas std scas adc nop lods in cld mov fsubl hlt rex.XB mov lock fs insl (bad) jnp jp xchg rex.WRX outsl adc xchg sub ja testl lea cwtd retq (bad) mov loop shll hlt enterq pushfq xor outsl and jge (bad) xchg imul jl movsl add cmp push (bad) xor (bad) outsb shrb mov xor and mov lret ror movabs in mov mov int and outsb jae xchg (bad) ja and mov adc rex.B (bad) (bad) push addr32 imul xor (bad) (bad) sbb jle clc (bad) xchg retq rex.XB scas rorb xchg or int3 jno mov rex.WRXB jnp lret xchg mull (bad) jle hlt stos out rex.WXB xchg (bad) xor (bad) notl jns sub fs test movb out inc (bad) in pop mov push cmp in cltd jge xor push xchg mov mov add mov sbb xor mov repz (bad) push mov pop cld xor xchg pushq adc (bad) loop mov xchg xchg fildl scas mov in ja ss loop jl pop mov mov jmp (bad) out out xchg adc sbb je xchg movabs sub pop push sub rex.WR rex.X rcrl xchg jb ljmp rex (bad) xchg (bad) or mull fcoml (bad) lea sub adc cmp in retq xlat rex.WX cwtl xchg sahf fnstenv mov mov mov push (bad) icebp sbb sub fbstp (bad) rex cli pop rex.X lock scas (bad) xor (bad) mov rex.X xchg (bad) and sub push (bad) lock cmp mov movslq jp xchg (bad) cmp jl and rex.XB mov and rex.WB sahf divb cmp jae rex.R fldt (bad) imul hlt mov xchg xchg (bad) (bad) xlat int3 rex.RX (bad) pushfq pop int shl test adc jp jle clc cltd test mov push (bad) mov mov mov (bad) jne add add (bad) and shll sub pop popfq add xor (bad) (bad) cmpsl (bad) mov sbb out nop sbb ds and outsb js loopne fs (bad) jno jg jl jae and xor jmpq cmpsb insb xor jge cmp xchg rex.X sub xchg movabs (bad) (bad) ja,pn push mov sarl sbb xchg xchg (bad) (bad) xchg sahf xor movsl cs jne mov std lods xchg rex.RXB int or push cwtl pop hlt (bad) test rex rex.X fwait (bad) out xlat xchg rex.B rep sahf or jp (bad) mov cmpsb xor jae jle jg rex.X xchg (bad) (bad) (bad) mull loop jg rex.RXB cmpl movslq (bad) xchg pop adc test xchg (bad) cmpsb pop lods in sahf mov rdpmc (bad) (bad) sbb retq add mov sub add jp rcll or xchg int3 mov hlt movabs mov rex.RXB (bad) ja fs (bad) (bad) jns mov rol xchg outsl adc sbb sahf cwtl jnp mov xchg jmp sub rex.WR fwait (bad) jrcxz mov xor mov mov stos stc push rex.W mov jbe xlat leaveq mov gs clc adc xchg movabs jbe jmp out cwtl test je int3 xchg scas mov mov (bad) lcall rex.RXB pop subl fsts sub mov ja fwait lods out mov jno outsl xchg sbb rex.WX shrl cltd xor mov adc (bad) xchg jb (bad) callq retq jno xchg mov (bad) jne pop xor xchg leaveq rex.WRB rex.WX movsl imul (bad) (bad) mov jg or (bad) pop (bad) mov cmp leaveq (bad) add xor (bad) xor fsubl lret loope xchg pop (bad) mov mov lods jne test jp mov retq movabs (bad) xor nop (bad) sub rex.WXB mov xchg es jl pushq rex.XB xlat addl cmp xchg pop or sbb mov popfq (bad) xor iret (bad) add scas xor (bad) (bad) jae mov fwait mov sub jns push lods fsub sub pushq sbb je andl (bad) and jg sbb adc test and mov cwtl cmpsl jmpq cmpsb test add xchg (bad) sbb mov jbe orl push jg pop xchg jae jle sbb (bad) push xlat mov rex.B sahf xchg in stc lahf movabs insb rclb seta jl jmpq xchg fwait sub (bad) lea jae xor scas (bad) jle and cmp sahf or push enterq jb cmc (bad) mov xchg or and sbb repz jge xlat pushq shrb jg mov jae and mov sbb insl out fnstsw adc movl pop (bad) movslq hlt rex.RB xchg pushq mov in jno pop retq and (bad) (bad) rex.W enterq adc repz movabs xchg nop incl (bad) or push leaveq hlt fldl mov std mov sbb je pushq loopne or pushfq pushq in out outsl ja sahf and movsb stos xor add rex.X imul ja mov jo imul xor ja rex.XB loope movsl xchg (bad) xchg movabs cmp mov rex jg adc xchg jmpq int3 mov cs mov mov jns testb xor cmp stos jbe cs es lods xchg or rol xchg shl (bad) insb add rex.RXB mov mov insb cmc xchg (bad) js rex.X fdiv xchg jnp jl and (bad) jrcxz xchg outsl (bad) pop adc hlt xchg std mov pushfq mov mov insl pop sti je repnz icebp jp,pn (bad) mov sahf (bad) ror test xor cwtl xchg xchg (bad) (bad) mov xor ss xchg xor pop add xchg (bad) out (bad) xor shr mov adc int pop (bad) jo (bad) stos (bad) push mov xchg insl xor mulb (bad) (bad) mov adc mov cwtl push (bad) mov pop mov xchg adc adc movabs (bad) (bad) and rex.X lea jbe cmpsl sbb add mov or pushq fwait rex.WRX rex.XB xchg nop (bad) mov mov xor (bad) adc mov cli mov or test jae stos hlt (bad) pushfq movsb insl jne jnp ja (bad) repz fildl add out fmull mov shrb out fistp cwtl sub sub scas jns sbb outsl pushq add movsl movabs icebp pushq (bad) lock jnp out es rex.WRB int3 pushq rex.R pop xchg std shr xchg pop jno loopne shll test rex.WRXB (bad) fldt jg test test sbb mov (bad) mov xchg faddp mov mov adc retq mov jns rex.RB rex.WB lea push lods xchg pop cs retq lcall or pushq add imul xchg js repz in callq adcl rex.RB loopne xchg rex.WX mov sbb cmpsl jmpq jno mov jp push (bad) mov sub (bad) cld mov (bad) lahf (bad) outsb xchg insl jo (bad) cmp (bad) or push fwait xchg fidiv push sahf mov leaveq jp cltd cmp (bad) xchg adc popfq ja mov fdivl and imul stos stos nop jmp pop (bad) rex.WRB rex.WX sub xchg fldcw mov xchg pop (bad) fwait movsl sub add xchg outsb xchg add cmp cwtl hlt (bad) and orl fcomps (bad) pop pushq mov fmuls iret xchg stc xor std xor test xchg fimull repz (bad) movabs sub (bad) xchg xor in (bad) cltd (bad) movabs jge push imul rolq movabs (bad) test or (bad) fsts (bad) hlt outsb loope push sub sub xchg mov and nop out jne notl mov xchg sbb (bad) rex.WR rex.WRXB fistp callq rex.B movslq jmp and xchg (bad) xchg sbb (bad) mov jo insb cmp negb out ja testl rex.WXB mov (bad) xchg clc jrcxz xchg add or push stos rex.X pushq out sahf (bad) rex.X xchg rex.WB mov sbb (bad) sahf (bad) cmp xchg or rex.X lods (bad) xchg push outsl (bad) add loop lahf callq rex.B repz pushq cli ss rex.RXB retw add clc or xchg xchg scas test push add pop fcmovnb push (bad) (bad) vpmacsdd rex.W sahf adc outsl xchg add or cmp cwtl cmp (bad) push sub xchg jnp movslq int (bad) std xchg data16 (bad) bnd add (bad) push sub ja xchg retq push (bad) jrcxz movabs xchg pop rex.WX add test jns imul (bad) lods iret and mov sahf cmc ja or loopne adc in repz fdivrs test test in (bad) pushfq mov xor outsl xchg push addr32 fist scas mov pushq pop mov test (bad) cwtl add movabs cmpsb movabs (bad) (bad) (bad) (bad) lret xchg pop cmp cli ja,pn (bad) stos jp (bad) fdivl xchg (bad) out sbb clc add in (bad) jge xchg mov out pop in iret mov mov cmc callq (bad) xchg mov test cs adc stos rclb in cmp icebp pushfq addl mov sbb (bad) mov push sub cwtl cmp (bad) lock rex.WXB nop (bad) adc adc xchg fwait cmpsb add and sub pop cltd xchg cmpsl out jmp sub (bad) (bad) mov pop out xchg mov (bad) jl cltd mov std adcl jae loope push ficom and xlat mov sbb test shl enterq mulb xchg (bad) jb pop xor lea insb mov (bad) mov (bad) cmpsl (bad) mov jge scas xchg movsb in (bad) (bad) xchg pop movabs out rex.B mov fnstenv and lods xchg or lock mov pop push in mov (bad) push sub and rex.WB or jns movabs fwait (bad) mov sti mov fisttp testl imul js pop cmp shl add (bad) rex.X lods jbe add shrb out ja xchg retq or xchg std (bad) and stc push add jne je push jns data16 jae jp (bad) rex.XB fidiv sbb adc stos out (bad) fmull mov cmp rorb int3 movabs cwtl (bad) test pop divl rex.WXB xor and fdivs data16 sahf (bad) xor xor outsl (bad) lods sbb push test mov cmp movabs rex.WB std mov insl and mov cwtl push add jne mov movsb xchg insl or popfq (bad) push movsb ss jle (bad) (bad) mov pop cld mov jg adc movslq loopne and mov (bad) stos or xchg sbb (bad) js push rex.WR fsubrl jnp jge popfq xchg sub and js mov cmc mov enterq jae add pop test rex.WB sbb enterq xchg sahf cmp push xchg cmp out subl sbb lods imul xchg mov cltd in mov lret rex.RXB (bad) sub xchg mov pushfq xchg pop mov cmp xchg cmc mov push cmpsb jnp stos (bad) mov xchg cwtl sbb (bad) (bad) mov (bad) mov lods (bad) fist sub jle jmp (bad) rex.W rex.RX push rorl mov (bad) jo rex.XB rex.XB repnz or out jrcxz jae fs mov jo in mov js mov (bad) xchg mov and pop (bad) pop test (bad) (bad) pop loop loope xchg jb mov in pushq add lock mov (bad) sub pop addr32 or lret adc sbb rcrl cmp addl push cmpsl sbb xchg in (bad) pop cmc addps (bad) (bad) lret add insl gs ds addl or push lcall cwtl and jo (bad) pushq popfq mov data16 test (bad) sub (bad) push jmp mov (bad) out (bad) pop mov pop xor sbb push xlat xor movabs or jmpq xor cld jmp (bad) movabs or (bad) mov sbb (bad) sbb jmp push stc rex.WR cltd pop xor (bad) adc mov movsl (bad) sub push rex.WRB or (bad) xor xor outsb test (bad) movsb rex.RX mov out jge xor cmp cmc sbb rex.WRX pop data16 in (bad) (bad) negb pop mov or pop popfq pushq (bad) jnp (bad) (bad) icebp cs (bad) rex.XB sti sub (bad) nop mov jns shrb retq scas jrcxz push rcl in add fs movabs movsb push jg xchg (bad) xlat sahf pop (bad) and pushfq out (bad) (bad) in mov clc mov shrl jg test faddl rorb xor shrl scas rex.WXB (bad) cmp (bad) loopne mov and sub sub jo mov loope pop imul adc movabs xchg in (bad) loop pushq (bad) (bad) lret pushfq push jge imul pop xchg icebp movsb (bad) cmp mov int lods scas div sbb sub (bad) sarb movslq icebp (bad) movsl cmp popfq add fsubrl push xlat pop pop pop nop or sub pushfq rcll (bad) movslq (bad) (bad) imul rex.XB rex.W xchg sub rex.WR fcoms xchg in (bad) (bad) pushfq pop (bad) push insb mov jae and sbb (bad) xchg mov lret mov pop cli xchg movsb stc jnp xchg (bad) ja add fistl jl xchg outsl seta mov push cmp repnz and and popfq cmp pop pop jle xchg xchg (bad) sbb fs jl rex.RX pushq rex.B rex.WRB jle ja (bad) push sahf lods nop sub push lret sahf jle (bad) stos pop ss lahf xor or xchg (bad) and and (bad) sbb movabs xchg in mov mov rex.WXB popq jb out pushfq (bad) ds mov popfq xchg movabs xchg sbb or jmp test scas (bad) cwtl mov lods (bad) lods (bad) mov (bad) pop (bad) (bad) pop stos cld pop mov gs mov mov xchg (bad) cmp mov rex.WRX xchg gs mov movsl int pushq xchg lret (bad) xor sub (bad) mov fmuls fwait sahf cmp mov mov cmp xchg imul (bad) push (bad) imul (bad) (bad) sahf add add or adc pop xor test pop testb stos mov in push push movsb (bad) imul rex.WRB vpackuswb xchg flds cltd cmp outsb xchg fs and xchg lods adcb sbb subb (bad) mov lods add xchg (bad) xchg mov cmp cwtl jmpq rex.RXB movabs stos xorb pop push xchg (bad) xor imul (bad) xchg (bad) clc xchg leaveq movslq (bad) rex.WXB pushfq int3 rex.WB (bad) mov xor sub je incb xchg fisubr xor cltd in cmp scas (bad) xlat stos rcrb pushfq mov subl jg mov sahf mov idiv pop jmpq in rex.WB mov scas add jb cmpsl test mov add (bad) or (bad) xchg test cmc xchg xchg sbb sbb movabs imul (bad) movabs jmpq xchg push fsubrs loope jg add mov nop pop icebp negl movabs mov outsb adc mov (bad) jl out jle xchg movslq pushq mov (bad) adc shrb xchg mov rol cmp xchg xchg pop mov popfq loope lret xor stc or nop xchg pushfq (bad) loope jnp,pn cltd (bad) sbb mov jle sub ficompl mov xchg (bad) xor retq jg fwait mov rcll jb (bad) mov sti mov mov sub popfq xchg rex.WR jns mov loope cltd (bad) xchg in stos cmp xchg sahf xchg fwait jo (bad) in rex.RXB je adc jb xchg and sbbb xchg sub xor gs mov (bad) ja,pt (bad) push (bad) push rex.RX (bad) sbb (bad) notl (bad) mov and ud1 (bad) lret xchg pop rorl xchg mov jmpq in cmp mov (bad) stos add (bad) pushq sahf xlat insb push jns pop jbe jp or cmp test (bad) cmp (bad) xchg and (bad) callq pushfq (bad) (bad) adc (bad) sbb loopne sahf cmp mov out or and popfq scas xor subb adc jo (bad) test (bad) mov fidivr lahf mov cmp pushq insb rorl xchg gs or mov adc outsl jg imul movslq loope sahf push rex.W pop mov imul pop jno xchg (bad) (bad) stc adc lret xchg test and rolb sahf and lock xor jrcxz (bad) (bad) xchg es mov gs (bad) (bad) loop (bad) xor rcll rex.WRXB int3 add cmp rex.B pop vxorpd mov out xchg sub lods outsl xor (bad) int (bad) or xchg sbbl cmc (bad) sahf cli mov (bad) cld (bad) rex.W movabs mov xchg rex.X lret stos (bad) lret (bad) jmpq mov fldenv sub in mov add (bad) mov (bad) movsb sbb stc xchg shrl loop rex.RX mov shrl xchg out rex.W addr32 xchg or gs rex.XB pushq pop orb sbb fildll sbb jge mov lret (bad) mov jo stos sbb xchg adc push (bad) xlat pushq xchg mov cmp adc xchg btc rex.WRX js and sarb jb jno mov lret (bad) mov (bad) mov movabs fldln2 lret iret stc (bad) movabs lret mov jmp mov imul (bad) mov (bad) ss (bad) lods imul cmpsl sbb or clc xchg retq jae fimull lods out andl sbb pushfq (bad) repz in (bad) movabs pop sub push mov mov cmpsl rex.WRB jg (bad) jle,pn scas nop xchg xchg test cmp add fsubl jrcxz rex.WXB rex xor insb (bad) sahf mov xchg xor mov shll in retq ja sahf jae jl (bad) (bad) outsl add mov movabs xlat test (bad) mov cmp mov outsb nop sbb notl (bad) nop adc roll xor sbb jns int3 xchg sti (bad) cwtl rorl test and xchg stc fdivs out push movsb retq (bad) cmp xchg mov rex.XB jmp jo cwtl cmp bswap xchg fstpt xchg insl cmc adc lret sbb scas xchg rex.X and enterq pop movsb stos adc cmpsb retq mov xor pop in rcrb adc lods mov cmpsl leaveq sbb movb mov jge xchg sahf mov ror test xchg (bad) iret mov cmp and and mov or movsl test xor xchg mov jmp hlt cwtl test or out sbb jp out mov cmpl ja hlt jrcxz or sub pushq (bad) push fisttpl scas mov xchg (bad) sahf cltd nop xchg xor out movabs cmpsb adc xor mov (bad) push (bad) rex lock bnd jne pop (bad) jbe xchg xchg jp xchg or sub popfq jmpq (bad) (bad) xchg add xchg pop movslq test (bad) cli cwtl lods adc mov push (bad) pushq fdivrl outsb repz adc jne push adc mov xchg nop jg sbb shrl xchg dec (bad) (bad) pop jae sub (bad) lods (bad) push cmc mov rex.X pop pushfq repnz (bad) (bad) hlt xchg ja and rex.WXB jp in sti lods (bad) cmp mov (bad) xchg pop push insb movsl xchg pop adc mov movsb push (bad) push rex.X cs sbb retq idivb xor mov rcrl shl mov (bad) xchg (bad) or xchg mov and adc (bad) dec xchg out ffree out sub xchg sub movabs xchg (bad) (bad) rex.B rex.RX (bad) sahf mov (bad) mov rex.WRX ficomp add and pushfq pushq cmp lret xchg fnstenv (bad) (bad) movabs jno xor push xchg sbb stos (bad) xchg jge test and (bad) rex.WRXB rol pushq fsubr add rex.WRX lret pushq fcoms cltd out mov and xchg adc lock pop sbb mov sbb xchg enterq rex.WRXB cmp mov sub nop xchg xchg shll (bad) xchg out nop test sub xchg jnp (bad) data16 push jbe (bad) enterq xor rex.WRB adc rex.WRXB sub xchg xchg jge (bad) loope lahf xchg adc sahf cs and ss shll rorl jl push (bad) sub out pop mov fcom jno cmc cmp sbb or (bad) sbb retq push or fisttp fnsave je push movabs (bad) jae xchg adc xchg rex.RX lea (bad) rex (bad) movabs pushq popq mov xchg and xor loopne and and (bad) cld addr32 gs jp idivb (bad) (bad) adc hlt pop mov (bad) cmp out out (bad) (bad) sub and rex.WRXB lret mov xchg sub orl ds (bad) jmp rex.WX rex.RX cmpsl push mov and movabs fmull xor cmp xchg mov hlt je jl push xlat int3 xchg leaveq mov mov divb (bad) mov (bad) retq mov lods (bad) sbb (bad) scas mov xchg mov (bad) je push xchg mov add xchg mov push cli sbb xchg xchg je sbb cmp insb jne lcall (bad) imul sub mov (bad) or xchg cmc or mov (bad) (bad) (bad) repnz mov xchg sbbb (bad) out pop idivb cwtl leaveq fstl stos and mov fmuls icebp roll xchg lock addr32 cmc stc leaveq cli or xchg fwait adc loope (bad) or xlat add (bad) cmpsl sbb xchg sub push (bad) rex.WRX (bad) xchg imul mov gs rex.WXB movsb push hlt add xchg in fs cwtl (bad) or retq js rcrl push mov push insb sbbl loop repz (bad) xchg adc fs stos stos xor mov fimull subb (bad) or rcll popfq (bad) jp (bad) out mov xchg add (bad) (bad) clc xchg (bad) mov jae mov xchg pop add rex.RXB setl jg sbb test mov adc jmpq pop in std adc xchg mov cmp rcrl push push (bad) or jbe fisubrl rex.WR (bad) (bad) in rex.RB mov cmpsb jmpq jmp test subl sar mov xchg (bad) (bad) mov jl or add (bad) xchg mov stos jle out xchg rex.WX rex.XB pop pushq jg sub (bad) out push mov outsb rex.X iret divl mov and xchg mov cmp sub hlt movabs out jae (bad) sti clc mov xchg (bad) jmpq andb mov (bad) mov cmpsb mov incb (bad) addr32 movabs mov sub rex.X mov mov in (bad) (bad) xchg pop add rex (bad) mov xchg outsb std popfq nop add jno enterq (bad) xchg hlt sub cwtl xchg pop (bad) retq je add (bad) insl (bad) jbe rex.WRB rex.XB xchg adc and push lock jp movabs sbb movsl (bad) mov rep rex.RX outsl ja xchg enterq pop push iret (bad) testl (bad) hlt pop push xchg (bad) mov sti pop mov clc jrcxz sub rex.WR (bad) (bad) movabs lock pushq pop (bad) (bad) pop testl testb jl jb lret jl rclb es icebp (bad) nop fnsave movl jns (bad) cwtl out xor xchg add (bad) jge xchg xchg es dec cmp mov cmp imul (bad) popfq sarb sbb cmpsb movabs push xchg repz fsubr leaveq rex.RX pop xchg cmpsb cmp out repnz mov pop fstps xchg mov xor out xchg in mov (bad) and cmpl sar ja icebp sub xor pop (bad) stos fwait or cmp or (bad) push jle add (bad) jl pop (bad) or mov retq cwtl fsubrs (bad) (bad) jne test cli (bad) mov jns rex.RXB sub fidivr cmp (bad) push jg (bad) cltd or jbe jo jne push movsl or xchg mov shrl adc (bad) cmp jmpq fstpl adcl rex.WRB movsb ds adcb pushfq or pxor shll cmpb xchg mov and (bad) jg push cmp rex.W movabs test xor mov rex.RX callq (bad) cmp xor xor rorb sahf icebp push sbb jmp out fcoml sub or xchg rex.RX (bad) mov xchg mov rex.B outsl and xchg xchg add or (bad) retq xchg adc jae (bad) xorb xchg xor incb mov or test frstor out xchg push xchg lods cmp fsubrp jl xor or data16 pop mov mov xchg fnsave repz cmpsb add xchg cmp cli out sahf pop mov and sbb pop adcl in out pushq (bad) (bad) jge rex.WX xchg rex.WRXB shrl int3 loopne hlt xchg nop cld xchg (bad) mov mov popfq xchg and movd movabs pop (bad) (bad) rex.XB push mov mov movabs sub and mov shrl movsb (bad) icebp fsubl insb sub push (bad) or rex.W lock (bad) out cli retq sbb lret pushq xchg jns adc cmp (bad) test rex.WX rcll push movsl mov lret insl in negb xchg mov xchg push (bad) cmp or adc (bad) rcrl jp fildl insl rex.RB gs fstpt rex.WR or rex.WRX cmp xchg jrcxz xchg cmpsl (bad) mov and sbb fsubr jns stos mov xchg xchg or cmc (bad) mov (bad) (bad) (bad) out (bad) loop sarb (bad) rex.R sarl rex.WRXB lahf xlat ficomp rex.WRX (bad) mov pop notl adc rex.WRXB mov jno xchg pop movslq mov pop lock xchg cmp (bad) adc push nop (bad) subl out and sbb xchg fist sbb add adc sbb and (bad) (bad) ds iret jp cmp (bad) rex.RB (bad) nop cmp cmp add mov sbb repz mov es adc (bad) xorb popfq (bad) pop (bad) rcl push (bad) addr32 (bad) fcmovbe add cltd sub and ja test cltd xchg shrl mov jbe adc adc mov lahf push mov or addr32 xlat popq divb (bad) fs data16 jp fiaddl xor (bad) (bad) outsl push lret jne mov mov jo fsubl (bad) pushq jne test pop gs loopne xor scas sbb pop or rcl sub callq enterq or lahf repnz in rex.XB rex.RXB rolb mov cwtl xchg cmp (bad) push sub hlt push outsb icebp cmp sahf (bad) lret movsb pop fwait std pop rorb xor mov test stos sti pop sti mov imul xchg mov xchg cltd adc mov xchg jg stc sbbl fs add scas mov jg jnp mov and (bad) jo pop (bad) xor frstor clc xor (bad) loop popfq sbb sub push stc out loope xor or popfq cmp iret cmpsb (bad) jle negl sarl adc and jae,pt xlat or rcll push shll (bad) (bad) loopne push adc cmp push (bad) subl lea cltd jno pop mov (bad) jl fsubr and mov loop adc mov lock (bad) nop pop (bad) push cltd or mov and jg mov orl xor mov ja xchg and jno xchg cltd int3 mov sbb in xchg in hlt mov mov (bad) rex.WRX rex.WRB adc sub xchg pop out js movabs push cmc sub test (bad) pop xchg xchg mov es data16 pop (bad) lret rcll xchg or pop mov rex.XB cwtl sbb xchg sub frstpm(287 sub lahf (bad) xchg test adc jmpq xchg cmp clc repnz xchg push jle js (bad) sbb xchg sub in scas mov ds cmp push shrb xchg and adc rex.RX cmc (bad) ja loop xchg cmpsb xchg enterq or and (bad) clc ror (bad) test xchg fdiv mov adc jb test fistl push hlt and adc add xchg push (bad) or std imul xchg in movabs enterq rcll (bad) sahf push imull sbb jae xchg cli pop insl (bad) sub (bad) jno xchg sbb lahf (bad) (bad) sahf retq adc xchg cltd out (bad) rcrl mov sub xchg lods lahf (bad) pop cmpsb push xchg adc out movabs sti pop cld (bad) jo xor movabs out test clc xchg sub and movabs add xchg sti and stos or mov (bad) in mov hlt mov xchg (bad) sbb mov adc shr xchg outsl std mov roll xchg xchg movsb or push sbb (bad) fsubp xchg pop and add push or cltd cmp jle jg,pt xor (bad) hlt pop xchg (bad) fcoms rex.XB mov (bad) xor (bad) (bad) lock and pop outsb cmp roll mov xor cmpsb stos rex.WRX gs sbb mov movslq (bad) push or xlat sbb addr32 jbe or and xchg xor (bad) imul sidt (bad) xchg add mov (bad) in ja adc jmp xchg cwtl (bad) sub out fisttpll gs retq mov sbb cli pop (bad) jno adc pop (bad) mov pcmpeqb stos sbb xchg shrb jge (bad) nop (bad) adc mov (bad) sahf sbb loope (bad) adc jmpq loope xchg data16 hlt jnp (bad) rorb rex.RX or (bad) int sbb or cmc (bad) rcll mov decl sub enterq jmpq loop mov (bad) mov cmp (bad) mov mov cmpl or cs cmpsb (bad) imulb rcr jg push xchg jmp push or pop xor jns mov adc pop jl out xchg mov add xchg mov xor in adc xchg hlt rex.X gs mov mov xchg (bad) cmp mov mov jae rex.R not rclb and rex.WRXB rex.RXB pop mov mov xchg mov repnz repz or je insb subl gs in rex.R popfq nop adc cld (bad) in mov lahf loope pop add rex.X mov test xchg sti mov jmp ja,pt and lea mov push fwait rex.WRX data16 sbb lods retq pop cmp int3 push xchg (bad) fisubl cmp sub (bad) jne push test sub (bad) rorl mov mov jbe adc (bad) js add xchg cli pushq pop pop mov and xchg sbb (bad) pushfq sahf pop add rex.WXB lea (bad) mov int out (bad) fimull imul cltd xor pushfq sub and xchg jg ja jl and test sub sahf data16 (bad) (bad) nop adc sbb imul push mov add cmp rex.WRB push mov insl pushq scas jnp es pop loop scas mov (bad) sub addr32 push rcpps (bad) jmp imul popfq insl lock xchg sub push jl mov in xchg adc retq and (bad) mov (bad) mov pop sti negb xchg push mov rex.WRB mov nop ja jne mov movabs (bad) cmp jnp xor xchg or sti je cmp rex.XB xchg mov mov movabs imul jnp (bad) pushq adcb mov imull cs xchg mov ds rex lea xor (bad) push in mul xchg nop jl push cmp outsb pop or sahf rorb out xchg xchg mov xor push mov fdivrs cmp (bad) cmpsb (bad) or mov (bad) adcb sbb insl xchg (bad) gs sti out movabs xor cwtl stos mov int3 xor cltd fidiv xchg and ss pushfq push insl rex.B cli (bad) movabs clc push cwtl out movslq mov cmpsb repnz xchg and fwait iret mov cs sbb icebp neg cmp mov retq iret add lret sti cs fwait xchg loop (bad) pop xor (bad) push xchg (bad) (bad) (bad) lock cmp insl (bad) test fildl sahf mov xchg ja add shlb hlt mov imul or (bad) xchg (bad) not mov xchg jnp rex.WX mov shrl enterq sbb mov sub out callq pop mov (bad) repz push and insl mov sub rex.B sahf (bad) xor cmp push rex.RX movsb xor cmp and adc fwait pop xchg addr32 xchg leavew shlb xchg xchg out pop cmp fistl fidivl sub in (bad) loop jno js imul sbb (bad) leaveq fs loope cmpsl and jmp fimull stos xlat add (bad) out pop sub push (bad) jg mov (bad) cmp repz (bad) jae xchg cwtl scas int3 rex movabs xchg test movabs (bad) mov movabs clc adcl (bad) rex.XB pop mov loopne add add sub nop xchg movslq mov sahf add jns test lock jb div mov cltd test stos nop push rorb cwtl jns jge rex.RXB addr32 outsl icebp xchg push pushq xchg insb mov push cmp leaveq add std cli xchg push cltd retq mov rex xor xchg and xchg xchg mov sahf clc cmp rex.RX scas xchg (bad) fisttp fcompl mov mov jns cmp insl movabs mov out or adc mov cli stos xor and ficom xchg rex.R repnz rex.X xor fidiv and sahf rex.RXB rex.W sbb mov xchg sub mov and mov xchg popq jnp jp movabs (bad) cbtw adc xor (bad) xchg rex.WRXB (bad) insl jnp mov xchg jle jae stc cwtl adcl (bad) jp push mov mov (bad) rex.R jmpq pop xlat rex.RXB sahf mov orb and pop callq xlat sbb jg mov nop cli jmp rex.XB lock testl (bad) lea sbb jmpq xor test jl loope fcomps outsb (bad) loopne xchg lea loope sti cli repz mov scas (bad) retq pushfq xchg loop cmpsl lret ja rorb cwtl sub sub decb add sarb xchg callq cmp stos (bad) mov jmp rex.B idivl jo add sahf cwtl (bad) (bad) (bad) mov out pushfq sti lret xchg mov (bad) fs in (bad) sbb (bad) (bad) out mov mov data16 scas xor and mov rex.WB retq push repz mov in cli xchg lods pop fwait scas add (bad) fidivr lea xlat mov push xchg jbe icebp sti mov mov rex.RX (bad) xchg adc mov (bad) xor mov (bad) rex.RB mov and xor popfq (bad) icebp mov xchg cltd and adc mov fwait (bad) movsb xchg imul adc nop sbb gs rex.XB rex.WRX notl mov or cli retq test sub rex sbb sbb add xchg sbb xor (bad) rex.RXB rex.RXB rex fcompl xchg imul lods sbb in (bad) jmp (bad) jbe (bad) sub mov sbbl rex.WRXB jno adc lea and hlt or pop btcl jg add mov (bad) pop fwait (bad) add movsb lea jo xchg add jno cmp cwtl xor add rclb jnp (bad) roll or xchg mov leaveq cmp mov and xchg ja add xor xchg (bad) fistl in (bad) xchg xchg movabs (bad) push cld mov (bad) pop stos jae pushq scas retq xor nop sbb mov xor (bad) movabs sbb mov mov ds jb gs (bad) jnp and cmpsl xchg (bad) pop push retq test clc adc (bad) sub (bad) pop ss test outsl (bad) xchg (bad) (bad) popfq cmpsb push add xlat pushq xor jl fdivs jbe sbb imul (bad) push out ja mov xor (bad) insb mov shld rex.R xchg adc cwtl hlt mov pop add (bad) popfq int xor adc (bad) int sbbl and (bad) or xor movslq (bad) mov outsl jmp maxps and cmp out (bad) sbb ds (bad) (bad) jbe adc cmp insb bndstx xchg (bad) rcll movabs in sbb test cmp mov xchg pop hlt pushfq xor xchg (bad) movabs sbb test (bad) sahf xchg mov stc ficomp gs ja xor cmpsb xchg fistpl jb push fsubs sub push mov subl mov pop (bad) xchg mov test iret fist (bad) lock movabs (bad) rex.WR sahf shl imul movabs push hlt retq (bad) leaveq (bad) (bad) adc xchg in cmp movsb xchg rex.X and pop or scas adc (bad) setp cmpsl xchg xchg xchg add fimull rex.W mov lods or jne (bad) retq movslq shlb rex.RXB fs loopne lahf (bad) addr32 sarb mov rex.WX pop push xchg sbb and cmp add jmp (bad) out xchg insl mov mov pop sub xchg push mov sahf sub pop sbb fisttpl xchg lea pop rex.XB add fldl xor sbb and rex.WR rex je (bad) (bad) xchg (bad) or sar mov adc mov loope xor sbbl test movsl movb (bad) sbb sub nop test out or mov xchg add mov rex.WR add jmpq rorb mov (bad) pop (bad) adc fmul push sahf rex.WXB orl jae std pop xchg xor (bad) and movabs xchg (bad) xchg rex.X and (bad) ja (bad) jo mov sbb rex.RXB xor in adc movabs or movabs push sbb (bad) stos pushfq jg adc mov out mov add pop xchg adc (bad) (bad) es xchg fbld rex.RB out or rex.W sub xchg fdiv xchg mov retq test xchg in in imul jo enterq shrb sahf xchg mov (bad) movabs (bad) lods out xchg rex.RB xlat fisttpl push sbb push cltd xchg (bad) mov cmp test fldenv pushq sahf fistl insb xchg ja rex.RX (bad) sbb xor pop movl rex out pop rex.W or cltd pop pop sarb or ja push pushfq rex.WRB ja push pop pushfq xor (bad) addr32 xchg ss sbb push (bad) ja rorb test push imul sti xor jge loop xchg jmp in mov sbb (bad) loope jmpq xor cwtl push jae push xchg add out ror xchg rex.WX rex.RX (bad) xchg mov pushq fwait push add push jns xchg rex.X lods (bad) hlt (bad) jle xchg push cmpsb add stos sub pop movsl callq (bad) xchg push rex.XB and or sbb (bad) mov mov push movsb popq or adc pushq adc cmp out (bad) repnz jo sbb mov (bad) jno sub (bad) xchg push outsl xchg mov xchg imul jg xchg pushq leaveq shr in mov rex.RXB rorb adc (bad) xor pushfq sub fwait xchg shl rex.WRXB outsl scas leaveq xchg pushq jbe sub fdivrs movsl sahf mov mov loopne stos (bad) xor rex.XB cmpsl and xlat sahf pop rex.RX rex.B pushq (bad) or rex.WRX jg jbe (bad) jno add lret xchg (bad) xchg sti mov push ss (bad) cli (bad) mov (bad) xchg insl (bad) jne (bad) leaveq xchg cltd mov rex.XB movabs mov push mov pop lods and sbb pushq (bad) add popfq cmpsb out (bad) outsb lret fdivr adc (bad) cmpsl mov nop adc je (bad) cvtps2pd shll sbb mov sub fcoms cld sete sub shrl jp (bad) (bad) or add and xchg jns fs rex.WX lahf vcomiss cmp sbb sub cmpsl out outsb adc jno push jmp (bad) insl vmovlhps mov emms lea (bad) (bad) mov cs xor xlat mov pushq sub rex.XB rex sub sub adc sbb fnstcw rex.WXB rex.WX addr32 (bad) sbb loopne jnp jns xchg pop insl add xor cmp (bad) cli (bad) cmp movl pop (bad) out or addr32 mov outsl xlat lods cld notl out sbb sbb and xchg (bad) js xlat jbe adc in (bad) lret out rex.X (bad) mov in xchg sub lret pushfq in and (bad) xchg xchg lea mov rex.WRX test out mov rex.WB xchg iret es (bad) xchg movsb adc jge popfq mov cmpsl or adc xchg movabs callq xchg (bad) jo and push (bad) movabs icebp sbbq out loop xchg imul pushfq movabs mov pop fwait loope mov sarl (bad) or fs mov test (bad) push out stos (bad) js ds pop mov add sub pop movslq mov sbb (bad) jae (bad) xchg movabs cmp cmp xchg mov sub pushfq rclb add jbe pushfq fimul xchg jge jl (bad) mov lea jg test jmp and or jmpq (bad) test (bad) cltd adc lods pushfq or test mov (bad) in sahf or mov pop xor sahf xchg lock incl mov retq sub jb lahf pushfq (bad) insb (bad) mov rex.X add or pop int (bad) xchg xor sbbb mov fnstenv rex.WB lock jae rex.RXB enterq repnz sub outsb (bad) movsl (bad) mov xchg rex.B rex.WB push xchg xchg movabs imul mov sub push in ss pop xchg (bad) orl (bad) xchg hlt cwtl ds jl (bad) fmull pop (bad) fidivr mov pop scas xchg pavgb mov pop cmpl (bad) jbe jg sahf xchg mov mov push cld nop (bad) xchg (bad) in retw cmp cmpsl push callq jmp mull jns (bad) xchg add loope xchg cltd rex.WXB movslq xchg rex.WRXB (bad) shll push (bad) cmp nop cmp movabs jmp mov jnp push sbbb mov (bad) clc xchg jmp adc jge xlat cmp (bad) out pop mov push lahf vorps jnp rorl addr32 mov rex.WXB (bad) adc notb (bad) add imul jnp xchg orl jmpq (bad) mov or andl xchg nop jrcxz lahf int in sbb or push add adc (bad) (bad) xlat (bad) mov xchg (bad) rex.WXB jmp cmp adc jns mov jg xchg or fild rex.RX sbb push rex.RXB xchg outsb mov lock test xchg (bad) or jo mov xchg add sbb jmpq ds sarl rex.WXB (bad) or xchg pushfq fisubrl loopne (bad) comiss xor cmp xchg mov mov (bad) and mov mov rex.B rex.B rex.X jmp (bad) lea xchg mov fwait sahf sbb sahf mov push pop test (bad) xchg outsl test add rcrl jne mov jns out nop sub sahf imul fs mov or (bad) (bad) push rex.WXB xor mov lods js mov cld (bad) cltd mov popfq jmpq mov cmc loop adc mov rex.XB imul mov mov sub jno or insb pushfq xlat sbb xchg hlt jne sub (bad) movslq cli rex.X adc (bad) and rex.WRX adc lods sahf loope pop insb jbe mov cmp rcl jmpq or sahf adc push mov fwait out or mov loop xchg xor leaveq or je mov pushq scas xchg (bad) movabs xor or xchg (bad) (bad) pop popfq nop sbb fsubr and rex.RX ds mov (bad) (bad) (bad) cmp in xchg mov rcrl pushq xchg loope xlat pushfq (bad) fimul (bad) movsb cmp (bad) ds and cld rex.WXB movsb cmp (bad) xchg lock (bad) int pop sub lret xor cmc rex (bad) mov rcrl and movsl xchg (bad) cs push push (bad) (bad) movabs stos frstor imul rcrb fisttpll (bad) movabs (bad) rex.WB outsb je jge rex.B (bad) jmpq (bad) (bad) setg ficom (bad) shrb rex.B cs mov test (bad) loop push shrl pushq (bad) movsl mov pop (bad) jg addr32 add xchg sbb pop xor jo movq pop test ror (bad) sub rex.W xchg mov jge xchg movsb sahf movsl imul jge xchg test div int movabs cld mov xlat std (bad) cmpsl in addb data16 movsl sti orb std mov fildll faddp rex.X (bad) cmp imull (bad) (bad) or rex.WRX xchg retq std insl pop push rcrl (bad) (bad) pop fldt jae sbb je pop mov sahf sbb mov test mov fcoms jo sbb mov mov outsl sbb push jmp jno cltd stos mov orl and callq sahf jns push notb lret pop jb movabs rex.WRB lea clc pop subl sub push je movabs test mov cmc (bad) cli sahf stc mov outsl fs xchg cmp fnsave adc mov je add (bad) cmpsb mov (bad) int3 rex.XB jrcxz rex scas ds push mov leaveq movsb rex.WX pop (bad) jb cmpsl and push mov scas test jl test xchg ss insl andl (bad) fsub ficom outsb mov rcrb adc sti shr rex.WRXB sahf lods je xlat clc callq xchg cmp rclb jmpq pop lock loopne test hlt push rex.R sbb cmp xchg lods pushq pop add (bad) in sbbl js loop negb mov mov (bad) or repnz movabs pop std lret mov xor fsub je jp xchg stos jno xchg mov (bad) testl pushfq (bad) add rex.XB idivl mov pushq stos ja push je div jnp repz pop (bad) jnp pop xchg jns rex.WRB push lea xor in and leaveq movabs fisub rex.RXB xlat xchg mov cltd (bad) xchg out lahf (bad) retq sbb stos mov xchg and loopne lret push cli sahf mov (bad) test mov push or fsubl xchg xchg outsl callq xchg loope jp lods (bad) (bad) imul stos xchg (bad) stos mov jb mov sbb lods rolb callq (bad) (bad) cmp mov (bad) xchg sub xchg sbb shr sub sahf stos lret jnp jl (bad) ja sar ficompl pop (bad) jg mov sub subb pop cltd test movsl xor xchg sub sub clc rex.RX (bad) lea pop xchg mov cmpsl or fisttpl (bad) sub (bad) jns xchg jb (bad) xchg lods ds ror lea rex.WRXB rex.WR xor pop cmpsb sub cwtl push out (bad) (bad) nop mov xor (bad) rex.WRXB (bad) (bad) lret or pop addr32 int or (bad) and jbe (bad) insb jp rex.RX icebp jmp movsl or mov fisttpll or movabs cmp mov movabs cmp xchg (bad) (bad) outsl push rex.WRB xchg cli (bad) mov mov rex.RXB xchg movabs sub pop es sbb in add popfq or adc sahf (bad) nop nop adc mov (bad) add (bad) mov repnz rex.RXB (bad) cmpsb popfq test ficomp addb rex rorl or and pop xchg stos adc xor callq add sub loopne (bad) mov setg (bad) ds movsl cwtl cwtl repz sub xor sti xor (bad) jbe in (bad) in sbbl cwtl int enterq stos lea (bad) lods (bad) movsl and and fisubl imul (bad) (bad) mov pop rex.WXB stc (bad) icebp rex mov out jns (bad) in cmp add scas mov (bad) mov pushq (bad) rex.W repz ds in callq pushfq pop pop insb (bad) (bad) fstpt clc mov rex.WX fidivr sbb mov shl nop adc push rcll add cmp js xchg rex.WR scas (bad) rex.WRX adc rorl rorb sbb (bad) pop faddp jae jp jnp pushfq or (bad) rex.WX in xchg or sbb imul adc adc (bad) add mov (bad) ds fldt lods movabs push (bad) push pop rex.B rex.R add gs xchg test xor leaveq ficoml (bad) jp (bad) (bad) outsl mov xchg xchg (bad) xor adc (bad) pop push or repz je pushq sub mov jo or fsubl add orl mov stos outsb (bad) scas jae (bad) mov in rex.WRB fstl loop or mov callq xchg popq (bad) mov (bad) push ja fwait adc mov (bad) xchg fwait cmp adc rex.RB movsl fs (bad) and or pop movabs shll imul imul roll push stos (bad) pushfq addl in jno xchg fmuls movsb insb sbb mov notl insb (bad) jae adc outsb cmpsb (bad) rex.WRXB rex.WRXB mov mov adc jp xchg test push (bad) xchg test mov or (bad) jns (bad) (bad) mov cmp jp lret iret (bad) xchg jns lods (bad) (bad) ljmp (bad) nop stc mov cmc sub fidiv repz jae xchg (bad) push cmp es xor push rex.RXB je std mov and lods hlt pushfq (bad) mov retq callq (bad) rex.XB (bad) (bad) in xchg enterq (bad) seto jrcxz xchg hlt mov mov notb cwtl pushfq rex.WX rex.WXB sub cmp mov push stos push (bad) mov mov (bad) (bad) fnsave jmp and (bad) xchg and int test or xchg xor fsubrl ficoml add ja xchg outsl (bad) (bad) pushfq adc sub cmpsb push adc jns jge xchg out sub (bad) or jo pop fldt (bad) (bad) and in add add pop (bad) jl push (bad) xchg out xchg int (bad) outsl rex.RB hlt (bad) xchg jb pushfq (bad) in cmp xchg jne adc outsb mov rex.WRB es push jl xchg jnp rcl jle fiaddl adc fild frstor test xchg jno outsb pop jle and xor add rex.WX jb rex.R adc int or push add fldl je (bad) rex.RB xchg xchg cmp xor xchg rex.RB fisubrl lods cs cwtl cli (bad) fdivrp vmovmskps retq jae js rex.R jg (bad) in mov cmpsl adcl in shl xchg (bad) add (bad) (bad) sbb (bad) leaveq and (bad) rex.RXB xchg sahf add sub cmpsl jmpq sbb sbb xchg or fmuls xchg cwtl (bad) lods (bad) jmp fimul cmc xchg lock jne mov adc sub mov sbb push (bad) negl sbb out stos jae mov xor movabs sahf mov cmp (bad) xor nop xchg out pop ficoml addl insl (bad) and jmpq shlb mov leaveq and jl movsb xchg sub callq xchg rex.WR (bad) lock cmpsb loop xchg sahf (bad) mov insb jmp lret lret or rex.WRB pop xchg fwait jg (bad) loop (bad) jo xchg nop mov rex.WX mov rex.W imul (bad) xchg fcmove cmpsl popfq rex.RXB lods jge fnstcw rex.XB push (bad) ja (bad) jmp rex.RX repnz jne xchg cld (bad) mov (bad) rex.W out xchg mov sbb mov xchg rclb ffreep fiaddl pushfq pushq cmp outsl clc mov out insl ss (bad) mov movsl and xchg (bad) scas cs xchg push cwtl cltd add jae (bad) vmovapd push (bad) fldcw xchg xchg lods and fsts js test xchg xchg insl lock jns xchg cmc enterq fild push xchg rex.WXB rex.WX fcompl sub cmc (bad) mov (bad) loope jo mov or mov pop loopne cmc cmp xchg pop notl xchg mov lods (bad) xchg stos add rex.RXB shrl rex.RB leaveq nop sbb retq jmpq and mov push (bad) mov mov mov add (bad) jge cmp loopne (bad) lods outsl or ror sub popfq mov mov mov retq test sarl rex.WRB test (bad) jrcxz lods lock cmp xchg nop or sahf es jbe icebp cwtl push rex.WR (bad) sbb (bad) stos pushfq js lret xor mov and lods (bad) jnp xor scas pop jge movabs (bad) rex.X lret cmp in xchg movabs jnp or xchg jb int insb popfq in sti movabs addr32 xor add xchg jne (bad) xchg mov and xchg xchg cmp rex.WRX imul (bad) mov or fsts jg mov mov mov rex.WB es mov gs xchg test jge cmp xchg rex.X (bad) lea cld push xchg sahf fdivs clc mov push movabs (bad) sbb jne push xchg popfq out movabs pushfq xor (bad) adc (bad) rex.RXB (bad) and fidiv subb and xchg mov out loope jg rex.XB mov roll test clc xor movabs pop pop stos push (bad) cmp adc rolb shr rex.X frstor or (bad) sahf mov jno iret xchg xchg xchg rex.RB andl mov or (bad) repz (bad) hlt lret add pop fwait jl movslq and sbb cwtl in loop push jnp lock push test (bad) (bad) scas xchg mov cmp stc stos cmpsb xchg jns rex.WX rclb leaveq repnz fs imul cmp pushfq pop add loop pushfq lods outsl lock pop (bad) scas sub rex.WRB rex.WXB (bad) mov ja (bad) (bad) (bad) rcll jae rex.W jb sub lods xchg cmp (bad) mov xchg xchg rex.WRXB mov out mov mov imul ss enterq xor rclb stos sahf jrcxz jmp scas xchg (bad) (bad) and cli push cwtl jge or (bad) rex.RXB rex.WRB rex.RX sahf cmp (bad) mov (bad) jne mov xchg roll xchg xchg or mov popfq xchg rex (bad) test xchg push adc int3 xor (bad) loop movsb xchg test (bad) scas sbb (bad) add xor (bad) or sub (bad) incl flds sbb out rex.X fwait pop sub sbb pop nop fbstp clc (bad) scas repnz imul xor (bad) mov pop lods (bad) jl xchg sbb icebp nop je addr32 xchg pop add movsl push mov icebp sbb adcl push xchg cmp loope xchg fistl iret mov hlt cmp ficoml shl cwtl idivl mov rex.RXB pop callq js and leaveq mov cmp (bad) (bad) mov xchg mov mov stc adc sti rex.WRX fwait mov (bad) stos ss xchg fidiv cld mov (bad) icebp movsl rclb cmpsb (bad) (bad) xor stos mov pushfq pop (bad) pushq rol imul fdivrl xorb xlat andl int mov cmp pop lods xchg movswl outsl rex.WB in (bad) and rex.W mov outsl jge lods mov mov (bad) mov and sbb lods mov (bad) cwtl loope sbb imul cmp pop or in rclb lret nop xor insl fsubrp push mov outsl xchg sub adc in ss stc lret cwtl jno cmpsb in movabs fwait loop lret cli std xchg cwtl and insb sbb (bad) or (bad) pop xor xchg sbb (bad) movsb popq xchg xchg xor xchg mov sbb xchg xchg vmovsd (bad) push add (bad) int3 xchg out jns adc imul (bad) cmp xchg xor jno pushfq (bad) jp movlps cmpsb int3 movsl in jg jbe mov stos xor mov (bad) cmpsb stos lret sahf or fcmovne or pop or loopne jns xchg jg jge movsl adc loopne subl mov pop push jrcxz cmp add ficomp pushq mov out leaveq movsb nop (bad) push je lahf insb xchg stos movabs push sub rex.RB push lret pop repz push (bad) cmp ja imul xchg xor mov xor test mov rex.RX mov roll push cmp imul rcrl cmp fs xchg xor hlt push pop int sbb movabs fs jge add pushq rex.WRB data16 test jl jrcxz and push or (bad) popfq fcmovnb nop sbb mov stc or enterq lret (bad) icebp (bad) push (bad) add fidivl std xchg mov fsubrs (bad) scas addr32 xchg adc adc nop stc fdivrp ficompl rclb fisttpl out xchg jbe xchg rex.WRX je push int3 loop lock xchg or (bad) rex.WX jp sub scas (bad) xchg or movabs xchg es gs add cmp jge mov or and enterq (bad) addr32 xor sbb lods test addr32 imul adc loop (bad) jae xchg cmp xchg stc mov sbb rex.XB xchg xor mov jl rex.X rex.WRXB repnz test insb jp sahf rcr xor movabs outsb rex.RX add jl mov cmp jo jo ficoml and movabs fistpl jne fldl2t or sub adc (bad) rex.W xlat scas add cmp test stc push jg adc xchg rex.RXB xor sub pop int or (bad) sub jp (bad) jg sub sbb fistp jb cmp cmp rex.WRB test retq (bad) and (bad) ss xor jmp rex.X stos lahf jge sahf sbb outsb push (bad) ja enterq callq (bad) cmpsb (bad) fisubr push xchg sbbl mov xchg (bad) adc movsl (bad) and ja movsl fnsave outsl xchg sub sbb mov (bad) loop push rex.WB nop scas sub imul movabs rex.WRXB iret and js rex.WB in scas push stos mov cwtl jg movsb (bad) jae lea mov (bad) pushq jns out (bad) test fidivrl adc xchg (bad) cmpsb leaveq (bad) or hlt pushfq ja adc or add fdivrs mov mov jo (bad) xor xchg fildl xor bnd retq sbb insl idivl or pop mov rex.WRB rex.WB pushfq add mov repz jmpq sub xchg push (bad) cmp lret notl fildll sar fsubrl xchg insb sbb lret adc roll icebp leaveq sbb add movabs jrcxz out imul pop (bad) xchg pop sbb mov iret out callq pop xchg mov sti (bad) repnz xchg xlat mov cmpsb adc push movabs xchg jg xor (bad) (bad) fnsave jbe stos rex.RXB rex xchg pop jle in stc cwtl sarl data16 mov fisttp jnp jg xchg movabs (bad) xchg movabs adc (bad) jle cmp jmpq sahf push (bad) ja iret rex.B cs (bad) (bad) rex or (bad) xchg mov (bad) pushq outsl out fs movb jnp adc pop sar jrcxz or rclb test xchg loop pop jae nop mov mov rex.X movabs rex.RX sub (bad) xor mov cltd pop (bad) cmp (bad) lods xchg lods retq jnp xchg outsl sbb mov mov loopne mov and add and pop (bad) cmp lods xchg rex.WX outsl mov or test stc xchg xchg or mov lahf sti jmp cmp xchg xchg fidivrl je imul scas lods xor add stos xchg fnstenv imul jrcxz mov movabs sbb add (bad) push sbb cmp xchg adcl add (bad) xor xchg scas pop retq (bad) xchg rex.RXB xchg out mov (bad) (bad) xchg stos sbbb retq loope stc pop nop mov int3 movabs imul rex ss pop (bad) adc (bad) leaveq or (bad) out cmp loopne jp mov xchg imul lods push lea pushfq in adc sbb (bad) xchg rex.WB fs fwait shr retq add jp (bad) xor adc (bad) hlt xchg (bad) (bad) adc mov sbb pop or cli sbb adc and jmpq and sbb nop lcall pop rex.WR repz stos push xchg and negl xor test jne cli (bad) movabs movabs cmp pop (bad) rex.RB jmp lret popfq adc icebp cmp adcb mov adc iret xchg mov movabs retq (bad) push callq mov (bad) or scas rex.RXB rex.WR push xor cwtl mov rex.RXB lahf orb or retq xchg push push fs (bad) retq ds gs xchg icebp pushq mov push stos adc cmp (bad) movslq fldlg2 cwtl es fidivr sahf mov xor jmp rex.WRXB sahf (bad) addr32 loop,pt jrcxz xchg test xlat callq mov movsb mov cmp test jo (bad) loopne scas and stc mov sbb xchg cmp and push gs push cmpsl xor xor rex.B iret int jae sbb fnstcw pushq jae out sahf jb insb lods and cmp in mov rex.RB clc xchg imul and (bad) rex.WXB rex.RXB test retq fsub shr xchg loopne fwait mov imul mov lock (bad) fildl pushq int3 pop sbb xchg and stc jmp sbbl mov jnp stos xchg jne rex.WRX jl mov pop es or and out comiss (bad) imul ficom sbb add jo enterq (bad) and sub repz mov gs xchg adc xor jg hlt leaveq out sbb push cld out push out rex.WR repz loopne mov addl cmp rex.RX jmpq adc pushq adc pushfq push (bad) mov xchg pushq (bad) mov push shl xchg adc movabs iret insl (bad) push sbb and movslq jb and sahf pushq in mov ds sub icebp sarl rex.WRX sub scas (bad) cmpsl sbb out lea out mov xchg sahf (bad) es mul negb mov xchg (bad) out xchg push mov mov (bad) fsubr std or rex.RXB icebp (bad) rorb jmpq out (bad) (bad) xor xor xchg (bad) mov out outsl xor (bad) adc repz jb jno and fisubl mov lret ficoml xchg xchg (bad) mov xor callq (bad) xor movsl xchg adc pushfq rex.X repz rex.WB je (bad) out movsb cltd (bad) rep xchg add jle jge sahf (bad) (bad) pop lea jge rex.WX cmp fsubrs pop jle mov (bad) cmpsl (bad) pop adc flds jg jns sbb cltd push (bad) rex.WRXB stos gs popfq or cs mov (bad) in pushq callq pop ss stos xchg mov xor rex.RX mov (bad) pushq mov sub (bad) (bad) (bad) int3 mov (bad) mov push adc rex.WXB (bad) jmp rex adc iret rorb jrcxz mov add rclb (bad) (bad) adc (bad) xlat pushq add enterq rex.RXB (bad) mov jnp rex.WX retq (bad) sahf jle mov negl out xor repz and (bad) xchg (bad) mov mov (bad) sahf adc mov rex.WRX sub and out cltd or xchg rex.WRB (bad) xor xor and lock pop sub leaveq fs push psllq iret lret je rex.X fisubr loopne xchg sahf xchg (bad) cli jmp and enterq cli rex.X cmp int3 mov rex.WR fwait (bad) lahf cltd not imul pushfq pushq fwait cmpsl jb mov (bad) xchg int or adc sub push sbb (bad) sbb push fcompl xor rex.WRB test addl jle out negl mov popfq nop (bad) lea out add (bad) or clc test xchg xchg adc mov mov out (bad) loopne sub mov xchg fiadd cwtl iret jbe add or add sub xchg cmp loop mov loope stc mov push rex.WXB pushfq pop rex.RXB popfq mov (bad) loop rex and cltd (bad) stos and xor adc rex.RXB insl xor (bad) sub sub ss (bad) pushq xor adc xor or xchg scas lret sub pop push (bad) iret sbb jne nop pop mov iret sub push jg sbb xor jns mov mov xchg test jo jrcxz lea mov negl (bad) and (bad) roll int3 jns add pushq xor stos nop push je jle fsts lret imul imul sarl retq (bad) pushq (bad) xlat mov xor sbbl xchg cld (bad) repnz sub sbb (bad) jl mov push orl mov mov and jae cmp xlat (bad) push imul and (bad) loopne leaveq and rex.R loop xchg mov xchg mov ss (bad) mov rex.WX jrcxz movabs or sub jl sahf cmp (bad) push jns fisubr fsts cld out sbb insl data16 shr jg xchg jnp rep xchg or rex.RX repnz iret stos xor xor push movabs rex.X xchg cltd mov xchg cmp sbb test add sub (bad) (bad) cmp xchg jne sub cmpsb jo pop xchg cmp fsubl adc xchg jno in (bad) sbb cmpsl (bad) leaveq jl xchg rex.XB (bad) adc jae xchg add rex.B fstps pop cmp sahf mov pop mov (bad) or xchg xor rcll loopne adc loope lahf pop rclb sti repz xchg adc insl sbb test (bad) pop jae,pt pop repnz rex.RX out cmpsl (bad) xchg cltd jmpq fcmovnu sbb rex.WRX adc cmpsb mov (bad) out rol movabs mov sub adc (bad) movsl pop (bad) pop xor or push movsb je (bad) mov sahf lea cmc xlat jle lret mov jno xor movabs mov fild xchg fimul movabs clc xchg adc push cmpsb test sbb (bad) pop jae and pop xchg out (bad) movsl test fldl push cmpsb push movabs out xchg out iret adcl xchg pop cmc (bad) lock push xor rex.WB stos popfq mov jmpq test clc xchg cmp pop pushq hlt sbb xchg adc xchg xchg retq (bad) jne mov loopne callq xchg add out xchg sahf cs repnz jrcxz (bad) xchg popfq adc rex.WXB adc out mov addl jbe jnp push add mov mov (bad) pop xchg xchg fisubrl xchg fistpl pop retq pshufw notl retq (bad) jno (bad) stc rex.WXB jg (bad) (bad) sub pushq sar and cmp (bad) in add div andl pop es adc xchg rex.WXB ds in sub jae jge ss stc popfq mov decb cmpsl jnp (bad) loop imul and xchg out cmc insl movabs mov jnp out mov stc lock or loopne sub (bad) mov js movslq and (bad) pop pushq mov sbb or outsl cmp sti ljmp outsl int3 stc (bad) cltd sub (bad) pushq (bad) roll adc (bad) (bad) (bad) and (bad) xchg (bad) sbb mov jbe imul rex.W and (bad) lock movabs dec (bad) sub xchg setle (bad) sub mov insl in or or popfq jmp (bad) cmp mov jp shr scas mov nop ss xchg cmpsl jrcxz pop sbb (bad) push sub cmp pushq xchg push rex.WRXB lret mov lea fwait rex.X adc or rex.WXB sbb lret mov pop mov roll lea out (bad) adc test mov push jg xor insl sbb xor (bad) push movsb rex.X jmp mov jl jg mov test (bad) scas push int3 mov retq imul mov (bad) (bad) imul cwtl adc cli (bad) sahf scas xor (bad) fstl (bad) pop add adc cmp xchg cwtl lock stos (bad) orl addr32 loopne mov (bad) fsub (bad) xchg xchg callq ja sbb retq cmpq xchg cmp xlat mov shll cmp add xchg cmp out jge movsb lock in sub jno (bad) test rex xor sub rcl stc and clc sahf sbb pushfq addr32 retq sbb leaveq (bad) sub xor (bad) mov adc (bad) rex.WR cs seta cmpsl test cltd imul xchg jb and push xchg (bad) mov rex.WX (bad) in xchg pushq stos add rex.WRXB mov jae xchg and add clc push (bad) xchg loope rex.WR loopne cltd cmp fcompl repz (bad) loope (bad) cmpsb xchg xchg xchg jg subb xchg rex.WX add pushfq js scas lods jle ja rex.WB movsb pushfq mov (bad) adc pop pop mov add adc cltd xchg std (bad) ja push cmp clc cwtl sub adc rex.WXB (bad) std cbtw test (bad) xchg pushfq xchg bnd rcl orb retq xchg popfq jne stc (bad) in jns sahf ds (bad) andps mov rclb in xchg adc cs sub mov sbb fdivs xchg cli insb imul fiaddl int push lea jb xchg mov test vpcmpeqw (bad) loop sub (bad) lods fincstp jbe rorl xchg (bad) sbb retq cmpsb fwait rex.WRB (bad) jrcxz (bad) popfq jns pop adc rex (bad) xlat or push lods repz mov (bad) (bad) xchg pop cmp (bad) mov mov add out (bad) lods and cmpsl lock or mov sub rex.W es lss adc xchg xor loop sub jb push cwtl (bad) ds fmuls sub sahf ja lock movsb push (bad) (bad) test sbb cmc js rex.WXB xchg subb mov pushfq and jae lea xchg pop pop (bad) insl imul fist (bad) xchg sbb loopne xchg jo sahf insb mov (bad) (bad) jns jrcxz xchg mov push idiv mov (bad) movabs or leaveq test mov mov fisubr pushq jns in jge ds test or (bad) sbb jo push incb pop sbb es jne sub mov ss movabs popfq or add (bad) (bad) xlat (bad) adc (bad) (bad) iret test xchg cltd lret pslld mov ss sti rex.RB mov pop xor test repz xlat rex.WRB add jge pop xchg cmp rex.RB xchg xor push and mov (bad) (bad) mov shll jle and mov xchg add jg adc scas mov xor xor movabs cmpsl rex.WRX int3 iret xchg pushq xchg out cwtl (bad) fs mov and scas and scas rex.RXB adc xchg shr jrcxz (bad) mov ss subl movabs movslq pushq rolb cmp adc jmpq add cltd rex.WB test xchg lods and rcll test xor rex.WX rex.WB push movabs sar xchg and imul imul cmp xor jle movsl push xchg xor movabs sarb pop xchg sub (bad) movabs xchg addl fwait push cmp movsl vmovhpd repnz in sbb retq sbb rex.WRX fcmovnu rex movslq rex.WXB rex.W dec adc jp callq scas xchg cmpsb rex.RXB clc movsl adc xchg jle mov xchg sahf pop out hlt (bad) repnz (bad) mov rcll add mov popq xchg jo and (bad) movabs (bad) pop xchg jg or fstps (bad) mov (bad) mov push cltd (bad) jbe or rex.XB mov push insl ja (bad) push (bad) roll and test (bad) insl (bad) mov (bad) mov pop xchg rex.WXB out sub enterq pop cmp loope movabs cmpsl mov gs adc rex ss or (bad) jb loop adc cli lahf xchg imul (bad) jmp xchg outsb rex.B (bad) cltd rex.RB (bad) rex.RXB mov notl sbbl rex.RX xchg pushq out add xlat (bad) jrcxz rex.WXB cwtl fsubs push (bad) (bad) lea stos mov popfq out xor sbb cmc rex.WRB xchg fcomps xor (bad) ljmp and xchg stos add loopne jno,pn sti enterq ja adcl pop scas fwait xchg loopne (bad) sti (bad) lahf or xchg jrcxz test push fidiv (bad) pop mov clc (bad) jne sahf int divl movslq (bad) mov int3 sub (bad) stc (bad) fisub (bad) jrcxz cs insb lret add stos insl rex.WR xchg (bad) (bad) (bad) jg cli imul jb mov jl retq pushq (bad) imul rex.X pop faddl in int3 and mul mov xchg in adc add data16 and or in leaveq or xchg loopne out jg (bad) (bad) or jrcxz (bad) mov rex.WB adc sbb scas cmpsl loop (bad) (bad) inc lods data16 sbb es loopne mov adc movabs (bad) movabs mov xchg callq jp (bad) sbb pushfq (bad) cmp (bad) rex.WXB es sbbl (bad) in xchg (bad) jp adc (bad) mov fcoms mov cmp loop push popfq pmulhw fs stos rex.WXB xchg retq shrl in and cmpsb ds (bad) mov js mov rex.B jne xlat mov or (bad) (bad) movsb scas xor (bad) sbb movsl rorl xor sub pushq (bad) rex.WXB or mov es push xchg sbb callq mov jne xchg pushfq lahf adc fldcw scas pop rex.WRXB mov lahf int3 xchg loopne rex.WRB rex.W ds xchg stos (bad) (bad) push (bad) fdivrl jl xchg imul setbe lret xchg jae add (bad) jb cmp paddusb mov xchg (bad) sub (bad) xchg jbe mov loope leaveq pushfq (bad) jmpq ja jo (bad) jmpq (bad) addr32 mov je (bad) xchg cmp lods add xlat out sub movslq mov (bad) fdivr seta cmp jle negb xchg xchg repnz repnz xchg fisubrl rex.WXB movabs fstps retq mov (bad) xchg (bad) repnz movslq popfq (bad) xchg outsb (bad) jns (bad) and and lods xchg enterq in and xchg mov add rex.WR cmpsl mov (bad) int3 (bad) sbb jmpq cmc adc popfq add jle and (bad) xchg movabs and push xchg cwtl xchg pop or add leaveq movsl (bad) insl (bad) rex.WR jmp push xor jb mov (bad) out int3 test stos lret xchg jle imul rcrb push mov movabs (bad) pop es lods sub sub add ja xor sub xchg (bad) loop mov shlb cmpsl jle cltd ss stos cwtl movabs xchg rorb mov and cs (bad) (bad) (bad) test xchg mov movabs (bad) mov sbb (bad) xchg lret or rex movabs rex.RX cmp xchg pop push (bad) (bad) and jl rex.WRX (bad) mov xchg test pushfq addb out (bad) cmp loope not fcomps (bad) in (bad) jns (bad) sahf jl cli loope xor xchg cwtl lods fdivrs (bad) lock xchg (bad) cs imul std rex.RXB mov loopne mov mov ja cmpsl lea mov scas mov sbb push clc xchg movsl mov or xchg jns int3 xlat js loopne pop lods (bad) sub xchg (bad) mov mov lods decb adcb sbb and (bad) xchg jae sti mov xchg (bad) outsl in xor and xchg (bad) popq pop xor push (bad) mov mov fdivrs idivl fidiv (bad) xor mov icebp fistpl mov iret shll (bad) mov pushq hlt pop sbb rclb subl jmpq sbb cmc lret mov xor lea movsb xchg mov movsb cmpsb (bad) cwtl iret jle cmp imul rex.WXB (bad) out adc push (bad) xchg mov rex.R sarl push sbb pushq out outsl rex.X (bad) in (bad) jbe sub rex.WR xchg rex.WRX sub fldcw (bad) loope jl outsl (bad) push (bad) sahf shrb (bad) sub mov rex.B xchg sbb movslq sahf std mov add cmp (bad) (bad) jno (bad) in pushfq sahf insb jp movabs xchg out ds sub fldcw rex.RXB shld stos and fidivrl (bad) and popfq sub in pop imul xchg (bad) loope adc (bad) (bad) je and retq pushfq cwtl loope test mov pop jo cmpsb jnp sahf (bad) scas mov xchg sub mov shl sbb mov or cltd push (bad) in xchg push adc ss and mov movabs push outsl cmp mov or fwait cs pushfq enterq sbb xlat test subl jl (bad) imulb movabs lods sahf pushq lret loopne xchg (bad) jnp mov xchg mov xor outsb rex.WX insb xchg (bad) data16 neg mov and loopne xchg jg in (bad) fcoms outsl scas mov sbb gs fmul movabs sub movabs rcll addr32 (bad) out jnp lret stos enterq adc add cmp ja pushfq cmpsl (bad) pop xor and lahf ja (bad) imul sti ljmp sub rex.W rol adc icebp pop jae stos add (bad) sub mov add (bad) rex.X lret and out rex.WRB (bad) xor setnp (bad) pushfq (bad) (bad) lret sahf (bad) ss mov inc xchg in xchg xchg cs xor scas fs sahf (bad) lret sti (bad) xor jae (bad) lock add mov shlb cmp sub add cmpsb repnz out std mov xlat lock jbe (bad) fdivr sbb xchg popfq (bad) mov lret rex.WB movsl fwait stos (bad) (bad) cwtl xchg jo mov xor ja mov sahf (bad) insb pushq mov rex.WRXB insl xchg loope div movslq mov gs xlat mov mov (bad) xchg jns mov retq jno xor xchg popfq push (bad) adc callq push loope retq jbe or xchg fst (bad) (bad) jp (bad) xchg pop movslq xor fisubl (bad) ds mov jns (bad) fsubp loopne xchg xchg or stc clc xchg (bad) cwtl mov rex.RXB rex.WRB (bad) xchg mov in (bad) xchg loop addl fbstp mov stos rcll xchg jo add jne and test sbb in xchg xor imul rex.WB sahf or rex.WR pmaxub (bad) pop inc mov rex.RX mov cmp popfq adcb sbb movabs xchg rex.WX and push repnz rex.RX in (bad) fwait sbb addr32 or cmpsl pop fcompl jp pop (bad) adc xchg rex.WX rcll pushfq movsl lret lret pushfq sub test adc xchg cmp adc xor jmpq (bad) sti push stos (bad) lods (bad) jge out jbe mov movabs sbb jae pop retq rex.RX xchg (bad) mov xchg cmpsb repz mov rex.R rex.R rorb out movabs test (bad) jo add mov mov (bad) clc jg jnp fwait out pushfq (bad) or (bad) pushq test xchg movabs test sti lahf pushfq movsb sahf stc or (bad) rex.XB xchg jrcxz outsb lret xchg nop rex.WX mov ja xchg xchg retq cmp (bad) xchg (bad) lock (bad) movsl cmp pop shlb rex.WR cmp (bad) callq xor push mov movabs faddl xchg jge not insb nop pushq xchg (bad) jno rex.RX idivl stos (bad) pushfq imul mov pop roll out mov jmpq lock popfq movabs mov js (bad) (bad) rex.RX sahf ficomp shl (bad) sub cmpsl imull add (bad) (bad) rex.WRXB rol in neg jrcxz sbb mov or mov lock retq loopne adc in sahf mov adc (bad) mov sbb fcmovnu (bad) hlt ficoml mov scas jno,pt jmp (bad) xchg xchg movabs idiv xchg adc push lret test sbb mov imul mov rclb fisubr js (bad) xchg xchg lea hlt cs lahf test xchg mov fild retq imul (bad) and movabs lea (bad) pop sub testb scas (bad) xchg (bad) xchg jmpq lea (bad) mov (bad) icebp pushfq rex.X jl (bad) xor stos es xchg out cmpsl mov js out pop xor enterq cmpsl rex.W jnp mov (bad) xorl sbb (bad) (bad) cmp ss xchg xchg rex.W pop rex.WRX xchg movabs push sbb and andl cmp xchg (bad) ja bsr mov jg jo lods mov gs insl jg mov push (bad) outsl sub lods fwait adc or stos mov je sahf fldenv adc (bad) (bad) mov outsl cmpb mov movsb sub add xchg imul rex.X insl (bad) (bad) xchg push std pushq mov pop pop loope mov mov je rex.B xchg (bad) enterq (bad) repnz xchg pop (bad) out add stc test adcb rolb sbb (bad) and adc sub add rex.R add sbb cs enterq jae ficoml rcrb mov lret xchg push movabs cmpsl cli xor xchg insb retq rex.XB retq data16 int cmpsl sarl sbb out mov rcl mov mov xchg out (bad) std fstps (bad) pop movabs pushfq fiaddl stos xchg jb callq jne mov (bad) nop adc xor and callq (bad) cmp xlat cmpsb popfq (bad) xchg (bad) ja rcrb xchg hlt addr32 lahf out mov (bad) jae outsl mov imul sbb pop fs pop pop adc jl fs sbb cmpsl mov sub jg lock mov test fbstp mov leaveq (bad) outsl push sahf jrcxz mov iret cwtl outsl (bad) (bad) sbb (bad) adc push xchg (bad) pop movabs clc shlb rex.B addr32 (bad) sub jnp xlat jmp (bad) js nop add add hlt lret rex.X or jae cmc and cltd fwait or mov pop and pop (bad) cmp xchg adc xlat pop xor iret (bad) roll (bad) adc je hlt pop nop (bad) xchg mov movabs ficoml xor (bad) xchg adc mov je pop and lea mov sahf rcll cld retq cmc (bad) movabs cmp movslq nop adc mov (bad) add cmc fmull callq clc rex.WR (bad) rex.WRXB test sbb xchg fistpl jno (bad) and cmpsl xchg cmp int3 (bad) xchg test pushq sahf xor lahf jl (bad) jmp cltd (bad) mov xchg push in push add in xchg mov rcll retq insb out sub pop rex.R rex.WB pop cmc movabs (bad) test movsl sub jns in push jne cmpsl xchg mov retq xchg (bad) fs mov xchg ficomp and gs jmp lods movabs fistl push (bad) mov stos xchg xchg clc out test mov (bad) xlat (bad) std xchg outsb add insb movsb mov pop lods stc push jb out (bad) rex.RB rex.WB xchg jle ss xacquire retq es xor xchg xchg xor mov ljmp cmpl lret jmpq std xchg movsb in fldl or xchg and jne fcoms popfq insl rex.WRX mov cltd xchg (bad) jnp add icebp sbb adcl jrcxz mov sahf rex.RXB test rex.WRXB cmp xchg shlb sti add sahf es or movslq (bad) int3 (bad) imul jle jmpq cwtl loopne jrcxz movabs js (bad) xchg adc pop (bad) and int mov pop xchg xor rex.RXB mov sti xchg or pop adc mov je (bad) addr32 loopne fsubs (bad) or sub (bad) in xchg rex.WR fisttpll rex add (bad) jae sti sahf xchg mov callq jp mov jne movsl (bad) mov or sbbl pop rex.RX (bad) jmpq (bad) rex.R lods xchg jle (bad) clc rex.X (bad) fwait push leaveq loop add adc cmp (bad) std nop pop jb xchg rex.WRX rex.WR xchg sti (bad) and ja movsl jg mov movabs enterq std jg mov jno loopne jno (bad) (bad) add fcomps (bad) gs (bad) lods (bad) (bad) sbb rex ffree (bad) out movslq es rex.X movsb push (bad) (bad) lods int or (bad) test mov xchg shlb jne xchg (bad) (bad) pop pop pushq pop loopne xchg cmp mov (bad) pushfq xor or (bad) imul cmp cmpsl jnp stos push (bad) getsec stos fdivr clc jmpq rex.WRXB add retq push in jae jo jrcxz sbb lahf mov (bad) adc movabs (bad) and mov mov fwait rcll mov (bad) jo or subl xlat sbb add sub scas lods lock rex.WRX stc in (bad) adc cmp (bad) lods sub sub xchg xlat mov leaveq cwtl xchg cmp (bad) out mov xchg shlb (bad) fsubrl xchg push negl fucom push cmp ds xchg xchg jle rcl or adc shl xchg fs (bad) (bad) jo mov sti and scas push lret cmc (bad) xchg movabs (bad) cmp rex.R rex.X lcall jmpq sub rex.W xor xchg push in pop jle pop test add cmc xor loop cwtl cmp (bad) adc (bad) cmpl movslq cmpsl test xchg sub pop jle js xchg jl cwtl rex.WRX rex.WX sub (bad) lret mov or addr32 imul (bad) mov (bad) movabs xor lcall sub (bad) out callq leaveq mov fbstp ja notb push imul pushq insb rex.WXB hlt rex.X jle mov (bad) mov mov xchg rex.RB pop fiaddl xchg lock sbb xor sbb jnp sub and mov (bad) loopne (bad) pop cmc lock jl sarl xchg push (bad) stc (bad) adc insl (bad) (bad) in or loop fwait sti push ficompl cmp out jae addr32 rex movabs fwait cmp (bad) rex.X fdivrs loope xchg movabs lahf xchg out and mov mov sbb mov lods (bad) retq and push rex.WB jmp mov repnz xchg cmp xor xchg or adc xchg fwait sbb imul (bad) xchg jne pop and (bad) push seta retq imul or mov je movabs jle lods adc adc test callq (bad) insb mov es popfq xchg and (bad) mov adcl mov sub sahf int3 jb jmp movsl (bad) stos and insl jnp (bad) (bad) mov xchg clc ss test fwait (bad) fdivl (bad) outsl outsl sbb xorps andl (bad) rex mov es sar int fsubs add mov callq mov in jge sbb (bad) test jne shlb jle (bad) movabs jae xchg xor lods loop push mov mov jge sub fmull repz mov movabs (bad) xchg fldl2t (bad) out rex.X es fsubrs data16 (bad) jns xchg rex.W fstps (bad) movsl mov sub mov outsl rex.X sub mov movabs xlat pop adc test movabs sahf add or cld xchg rex.WXB add sub mov (bad) pop lods cmp stc mov push mov rcll sbb (bad) sarb andb rex.WRB fist sub clc xor lods (bad) sub mov out xchg lret add imul xchg (bad) or test jl adc out (bad) xchg movabs add (bad) or test mov popfq (bad) lret iret scas sub (bad) stc mulb rex.XB or ds mov sub and add sub nop nop sbb mov pop gs mulb lahf (bad) insl cmp out nop lods jne cmp movabs mov rex.W adc add cmp rolb insl mov outsl push outsb jmpq jrcxz movsb (bad) fadds push (bad) (bad) add pop xor fidivr and movabs (bad) (bad) pushq sbb cld cmp shlb push mov nop ficom (bad) insl sbb xor pop pushfq fs and xchg or lret (bad) clc insl (bad) gs loope cs cmp retq repz rex.WRB iret (bad) lock out sub movabs fildll (bad) push cmp stos fistl movabs or mov mov (bad) pushq mov (bad) push rorl xor nop sbb scas xor cmp (bad) enterq jle fwait (bad) xor (bad) retq clc xchg mov (bad) in idivl rex.WR rex.WXB sub (bad) sahf rex.X jo decl (bad) add mov out (bad) and movsb fs xchg add stos xchg in fstl or xchg push rex.B rex.WRX mov (bad) rex.WRB sub mov pushq mov out pop mov xchg pop cmp cmc adcl xchg cmp sub pushfq jge mov xor xchg fimull lock xor mov xchg jrcxz orb ss (bad) xchg lea jg cld mov push std test xchg (bad) fadds loope mov pop jno stos cmpsb mov sbb mov mov (bad) pop imul xchg sarl std jno xlat xchg scas mov data16 add xchg push xor rex.W jnp (bad) sub loop jae xchg cmpsb sub and shr repz xchg (bad) (bad) lods sub mov and stos xor (bad) push jle retq cwtl adc (bad) out lods es fucomp (bad) lea xchg xchg (bad) mov and xchg (bad) lock mov mov rex.WX rex es jmpq int3 mov (bad) sar notl add rex.RXB xchg jl sub fbld scas sar mov sub (bad) test xchg rex.X and (bad) (bad) and xor xor adc (bad) jmp xchg xchg mov sarq xchg out xchg (bad) repz xchg mov incb xchg mov (bad) ds adc xchg notl imul add or (bad) movabs (bad) jg pop lahf cmpsl mov (bad) sbb (bad) lock adc xchg fwait sbb stos adcb hlt sbb rex.WRXB mov xchg rex.RXB (bad) mov ja xchg (bad) movabs fisub mov mov mov xchg cmp outsl push mov (bad) test movabs (bad) add mov outsb mov jne xchg adcl cmp (bad) rex.R jp scas xchg test cmp lahf int3 negb push jg push repnz lahf icebp xchg xchg xor pop in mov mov xchg rcr je pop rclb js nop push lret movabs adc repz sahf retq and rex.RXB insb or mov push pushq pop sahf test cmp (bad) sbb test add imul (bad) (bad) xchg xchg clc popfq sahf mov mul sub push cmpsb movabs mov gs (bad) xchg and or outsb xchg mov (bad) andl rolb mov xchg retq mov stos icebp mov ud2 jg cmpsb fisub jrcxz rex.RX hlt leaveq xchg cs sub (bad) pop insb (bad) jg movabs (bad) xchg jne negb sub fnstenv adc fwait xchg test movslq mov out rex.RXB movabs xor and (bad) or jne rex.RB insb or xor mov movabs sbb cmp adc outsb in jbe (bad) rex.WRX cwtl push fcompl rex.WB adc rex.RX and add jrcxz jmp jno cwtl rcrb jmpq (bad) outsl rex.XB and jbe push movslq xchg fild (bad) jge xchg popfq mov add xchg rex.W (bad) rex.WRX outsl loop (bad) or xchg sub lock shlb jg (bad) jmpq rex.WRB movabs gs cmp cmp movabs pop adc loop sub xlat sahf jmp jp enterq scas loope rex.WRX rex.X mov bnd pushfq rex.WRXB lret popq cltd jge rex.RX rex.WRB fsubs fmull xchg cmp gs pushfq repnz icebp test jl xchg insl pop and fcompl cld jp push cmp sbb (bad) cmpsb out xchg push cmp sarb insl mov (bad) sbb xchg js je xchg (bad) (bad) xlat rex.RB rex push cwtl lahf jmpq ss (bad) clc jnp xchg cld or mov xlat fstl mov push add xor xchg xor cmp fnop jp xchg and loop sub cmpsl add cmpsl icebp (bad) sti int3 push pushq or nop fcoms sub cmpsl xchg (bad) push jbe,pn (bad) (bad) scas xchg (bad) cltd leaveq fiaddl pushfq rex.WRX fwait retq xchg lret sbb cwtl movslq or sarl sub leaveq (bad) fs xchg cmp (bad) (bad) sarb (bad) movabs int3 cwtl test add lea stos (bad) jle xchg (bad) lret rex.WB or imul jrcxz es pushq (bad) jbe mov cs (bad) pushq (bad) push (bad) fsts test rcll pushq stc fistl mov sbb rclb and stc cmpsb out push rex.WR nop xchg sub rex.X sbb (bad) mov test mov pop mov sub stc or jg andb pop xchg (bad) scas cmpsl adc rex mov add xorb lret (bad) xor push sahf rex.RXB push movabs xchg imul sbb pop addb ss test mov test (bad) (bad) push jae and mov cwtl lret retq (bad) push push lods pushq sahf (bad) jle mov cli pop mov xlat xchg cmc ficomp (bad) xchg or xchg rex.WB jmp mov lock cmpsl xchg ja test xchg adc gs fnsave pushfq (bad) (bad) (bad) and fist (bad) callq add outsl addb or add imulb movabs xchg addr32 repz (bad) cmp xor (bad) push sub addr32 xchg mov stos rex.RXB jp (bad) fistpll outsb xchg stos xor xor gs adcl sbb pop xor sbb (bad) or cwtl insb mov sbb xor rex.RXB rex.RXB rex.RX callq mov xlat or jae xchg or cmp mov iret xchg push movsl fcomps sub mov (bad) sub mov lret mov fdivs repz mov pop in adcb xchg and (bad) jbe movabs mov int or rolb pushfq rex.WB shlb mov fwait jne sti mov lret movabs addr32 mov in xchg jmp cs rex.WRXB nop jnp mov mov movslq xchg callq mov enterq orb xor cmp jge mov jle rex.RB in (bad) fdivrl add movabs (bad) mov stos (bad) or jae and push hlt xchg xchg cmpsb repz sub adc (bad) cltd lock xchg fs jp adc xlat mov out add xchg (bad) mov sub sahf out rex.W loopne or retq je iret xchg out movslq lods std jg rex.RXB mov jnp jns adcb and (bad) xor shl adc mov xor xchg add idivl fdivrp mov fcomps xchg rex.WRXB jae jrcxz movabs push (bad) (bad) mov (bad) cmp or push rex.RX ljmp std xor (bad) adc jrcxz movabs cltd rex.RX xchg and pop cmpsl rcrl iret in mov (bad) fdivs mov outsb push sub xchg mov movslq pop fsubrs xchg (bad) rex.X clc push sbb or movslq adc or lods jge test mov (bad) mov mov retq adc mov jns mov (bad) nop push (bad) and movabs ljmp sti cmp push mov push faddl or jnp (bad) outsl (bad) hlt xchg cwtl iret and jge fidiv xchg mov adc mov sub (bad) adc or (bad) (bad) loopne xor xchg jae,pt adc jb popfq mov jne mov rex.WRB mov adc leaveq cwtl shrl xchg add shr loopne xor popfq pop mov (bad) mov cmp xchg xchg xlat mov pop fistpl movabs repz pop xchg cmc push retq jb jg movabs sub add rex.XB rex.RXB movslq push fnstsw sbb (bad) pop lods cmpsl (bad) xor in mov je xchg rex.WRX jae rex.X es outsb rex.WXB stc xchg xchg or in leaveq (bad) sbb popfq (bad) std movabs (bad) xor jmpq mov add pop cld sub fcoml rex.WRXB gs mov stos sti (bad) lock xchg movslq adc rex.WRX test sti and and (bad) (bad) popfq mov rex.RX rex.R imul invlpg (bad) sbb orl (bad) fs mov sti jae and pop int jo std int3 adc cwtl (bad) (bad) xchg insb xor sbb sub fwait popfq mov jle adc cs fstpt xchg rex.WX addr32 (bad) (bad) mov (bad) sub pushfq (bad) movabs stos enterq sub rex.RXB cmpsl jo mov pop std rex.WRXB mov jnp rcrl xchg outsb fdivrl rep sbb xchg mov (bad) fistp shl es in mull xchg mov (bad) cmp fist pushfq rex.WRB mov adc pop and mov rcrb cmp mov out imul frstor jbe push fwait repz adc (bad) icebp rex (bad) movabs scas popfq sub mov insb mov sub mov or test (bad) pushq enterq adc mov or xlat (bad) rcll int out sub (bad) ljmp xor cltd shll fs sbb loope cmp stos push js jle push jo xor (bad) (bad) popfq sbb sub lret (bad) cmpsl cwtl mov push xchg lods xor shl or and push xchg mov mov nop mov insl (bad) sub pop xchg (bad) sbb rcr jmp outsl or xchg fisubl jp (bad) or rex.WXB jg xchg (bad) xchg push pop movabs cmp rex int and stos mov cli js xlat scas movabs jrcxz data16 hlt (bad) mov rex stos cli (bad) movabs and cwtl enterq mov loop push jns jrcxz sub movabs cmpsl mov mov xchg mov push cmpsl stos xchg sbb mov (bad) push mul mov movabs xchg push mov enterq pushq push jo mov xchg adc notl mov mov addl add int3 cmc rex.WR cmpsl rex.WXB cmpsb mov and stos mov or jmp xchg retq adcl stos (bad) xchg lea xor rex.RB xlat xchg jo cltd (bad) jrcxz push data16 mov je,pt lret mov movabs sub mov or mov mov js cmp xchg fistpll adc (bad) mov sbb pop xchg cltd out andb fsubrl stos and xchg out xchg cmc cmp jmp scas (bad) and sbb sub fcomps rex mov sbb int add iret mov mov fsubr (bad) push (bad) lret (bad) insl cmp xchg add pushq loope out (bad) insl push (bad) iret repnz jno mov mov (bad) lea cmp scas fmull int pop push jl xchg pop sbb and xchg int (bad) rex.B mov mov iret (bad) scas in icebp movb rex.WXB movabs xchg and lock push movabs insb shrb nop icebp push jno xchg jo repnz mov jnp cmp (bad) (bad) add nop xchg mov (bad) outsb push pushfq pushq stos xchg (bad) (bad) rex.WRXB rex.RXB gs cmc push out (bad) (bad) or test xchg sub rex.WXB movabs (bad) fcoms or in mov push pop cmc cltd sub movabs cs jl gs mov pushfq adc (bad) add sub lea (bad) test xchg (bad) int3 shl rex.WR test fwait sub (bad) (bad) or pushfq lahf xlat mov mov xchg retq (bad) jnp or jmpq subb pop outsb movabs movabs (bad) (bad) jo fs pop enterq stos (bad) mov mov imul andb mov lods mov add cmp rex.W add sbb xchg insl imul rex.WR (bad) (bad) mov adc stos lods cwtl out loope divb xor ds in (bad) loopne lods pop sub and push in or mov push jne cmp xchg andb adc stos js cwtl rex.WX stos push cmpsl (bad) cwtl rex.WRX mov nop (bad) ss repz lea movslq fsubl (bad) push callq lret pushq (bad) adc jnp or mov push mov (bad) loopne test outsb jg pushq es cli (bad) rex.WRXB outsb cmc push cmp mov (bad) sbb xor insl movsl jg cwtl push fcmovnbe ud1 rex.RXB jnp (bad) rex.RB (bad) mov xor (bad) cltd jbe rex.RXB loope and mov sub ja rex.W (bad) mov pop imul movabs sub rcr ljmp and outsb notl jb movsb xchg sub (bad) (bad) addr32 rex.RB faddp jbe mov movsb rex.WX mov xlat (bad) nop retq push xor rex.WB xchg test push jns pushq mov or rex.W push adc sahf cmpl xor or (bad) (bad) (bad) sbb sahf (bad) pop rex.RXB cltd adc mov xor xchg xchg pop and or sbb (bad) stos jne scas pop movabs xchg cmp or xchg hlt mov push pushfq jnp rcrb (bad) and scas sub (bad) fs adc outsl adc fcoml imul stos (bad) sahf (bad) imul pushq and (bad) pushfq clc mov movabs sbb sbb lret cmpsb movsl and xor push add sub sub setno cmp and add add sbb divl xor rex.WRXB (bad) mov xor rorl pop mov ss pop in divl movabs pushq sbb xchg cmp (bad) sbb lret movabs pushq cmpsb pushfq js rcrb (bad) jno and xorb loopne fsubr adc adc xor movabs xor mov enterq retq rex.RX (bad) xchg (bad) and cwtl out and out xchg rex.RX cltd lahf (bad) lcall rex.WB rol jbe rex.XB rex.RXB por and xor xor (bad) pop cwtl je jo (bad) (bad) xchg in fdivr (bad) xchg xor in loop xchg cld adc adc (bad) nop xor (bad) repnz int jo mov jmpq imulb mov sbb (bad) nop stc (bad) xchg test pop (bad) mov or add (bad) mov push (bad) mov test cmp xchg pop enterq xchg mulb callq xchg cmp sub test xchg xchg rex.XB movabs mov addl (bad) xchg insl rex.WRB (bad) (bad) add jne scas mov mov movabs lock push xchg mov cmp xchg mov lods adc xor add pushfq xchg mov movsl mov lock movabs or mov hlt pushq xchg ss vcvtps2dq sti rex.RXB cmc scas mov xchg scas or jp sahf rex.X testl cmp or js cld jge rex.WX gs pop xchg movabs mov sub xchg stc pop adc xchg and int xchg cmp imul pushq (bad) (bad) xchg mov insl fdivl movsl rcl (bad) mov test mov movabs vminss cli add sbb (bad) rex.RXB jo movabs and jno std xor (bad) xchg mov outsb adc mov cmpsl out (bad) sar mov xchg (bad) sub (bad) lea repz adc (bad) or cmpsb sbb (bad) push xchg jmp test mov sbb (bad) rex.RXB (bad) lret rex.WB sub rex.WRXB movslq int3 test mov or adc mov cltd mov int3 movups jnp mov sub (bad) (bad) enterq sbb mov or movabs cmpsb add add mov hlt fidivl or adc js mov xor fidivrl sbb retq rex.RXB lock sti xchg cwtl (bad) loopne add (bad) lods and sbb rex.WB repz fdivs mov jmpq mov xchg mov rex.WXB (bad) mov fildll jge in xchg loop mov rex.XB cmc (bad) (bad) je or xchg (bad) cmp movslq insl movsb lock loop cli mov rex.WB imul loopne (bad) xchg fcmovbe outsl jmpq xchg sub jp mov xor (bad) icebp (bad) add (bad) scas test (bad) jne push rep gs adc cmpsl imul (bad) sbb push add dec mov jae stos jge jmp divl nop loop push xchg or mov mov loope xchg sub xchg callq vcvtpd2dq push cmpsb or cmc outsl mov or retq rdpmc (bad) cmp and fdivrl fcmovbe fsts mov nopl jl jns xor xchg cli sub jb xchg rex.RX outsl lea or out xlat shl pushfq movabs movabs sahf movabs pop xchg xchg adc push fstpl mov mov lods cltd push stos fild rex.RXB rclb jp xchg leaveq lahf (bad) add mov (bad) movabs lock sahf movabs negl out xchg movabs push fwait sarb (bad) retq (bad) out mov movabs addr32 sbb ss rex.WRB (bad) (bad) pop rex xchg (bad) cmpsb mov cmp lahf and cmpsl rex.RXB sahf (bad) (bad) sahf repz mov test and xchg push xlat add pop out movabs pop (bad) sub push negb sbb xchg scas rex.WXB rex or jg (bad) jno shrb cli jrcxz xchg enterq mov adc ja movsb (bad) sub insb rex.RX (bad) sub add and pop out cmp rolb (bad) sub mov mov pushfq add and (bad) loop mov sub xchg (bad) (bad) rex.RX sbbl (bad) or xorb (bad) cld movabs fs (bad) push cmp sbb sbb sti pop xor cwtl stc and or (bad) movabs stc mov out cmpsl mov adc xchg mov outsb jno pushfq mov (bad) xchg (bad) xchg (bad) cwtl mov jo rex.WRB (bad) test rcrb push cltd mov mov rex.XB pop add sub movabs mov fist jmp jmp jle rex.RB push rex.W fs (bad) insb stos sbb rex.X addr32 or mov stos rex.W sub add movsl fmul xchg jg (bad) fildll xor (bad) (bad) stos int3 cmpsl movsl mov in (bad) xchg cli (bad) push lret je fs (bad) loopne add cmp pop roll or movabs cltd loop (bad) xchg clc sbb scas push xchg cli mov push jp in pop nop lret sahf mov (bad) outsb cld mov cltd xchg out rex (bad) cmpsl icebp enterq adc (bad) xchg sbb repnz ds fidiv nop rex.X sahf xor rex.WRX cmpsl movsl addr32 pop rex.RXB mov adcb mov add xor mov in (bad) sti adc jle jrcxz (bad) cmc mov seta (bad) loopne xor test movabs out roll test int3 xchg xchg xchg (bad) pushq mov adc cmpsl mov xor movabs (bad) mov xchg psrad mov pushq xlat sahf jl sbb mov (bad) push out xchg pop xor (bad) jne pushq nop jno movabs ficomp movsl js xchg (bad) or jbe rex.WXB nop sbb (bad) pushq cltd and pushfq (bad) pop pop lods (bad) push add mov lahf sbb (bad) pushq rex.WXB pop mov push fcmovne nop imul leaveq push pop adc rex.WRB movabs imul sti (bad) lahf sub jnp rex.R cwtl out fwait sti sub insl xor rex.X in (bad) jae jmp add (bad) fmull popfq out xor loop xlat (bad) pop add jrcxz xchg pushfq (bad) adc cld rex.RXB jb and or push lahf add (bad) push gs lods mov and cld mov (bad) (bad) lods adc or cmpsl jg xchg cmp mov (bad) (bad) jne rex.RXB mov and and cmpsl (bad) rex.WB popfq (bad) add jae loopne cltd stos nop sbb callq push gs fiadd or movsb mov retq (bad) (bad) mov jne rex.XB mov (bad) out cmc (bad) xchg test xchg cmp orb rex.WRB jp insl rex.X adc hlt cmpsb sti push mov imul (bad) push (bad) cs fwait jrcxz and cmpl jbe iret xor (bad) cmp jnp mov movabs jae rex.WRB push xchg sub pop pop xchg or cwtl in cmpsl jnp (bad) sbb xchg pop add cwtl xchg add rex.RXB (bad) movsl mov adc (bad) outsb pop repnz mov stos (bad) fadd jg (bad) xchg cmc (bad) mov rorl popfq (bad) test retq movsb test mov sub mov pushfq and adc adc add or (bad) movabs cmpsl rolb push xchg (bad) inc insl mov mov stos xor pop cmpsb (bad) sbb ja mov push repz ds test mov mov adc retq repnz (bad) js ds sub fwait (bad) (bad) rex.WRXB xchg ja adc out fsubl add or es push xchg in test movabs mov outsl and jb sbb add xchg fwait jge rex mov pop sbbb movabs cltd jmp idivl fwait lret callq (bad) sub and sub scas mov stos xchg or subb sub sahf (bad) pushq mov adcl add xchg jg and add js imul adc mov bnd xor adc in retq xchg add addr32 rex.X fadds movabs jne jmp adc retq mov mov push jns enterq jrcxz xchg rex.B mov mov (bad) shrb js (bad) rex.W xchg jrcxz xchg sbb mov nop cltd (bad) jno movslq leaveq (bad) xor idivl out xchg in loopne add sbb jne outsb (bad) fmul lea jb xchg cmp iret callq callq stos enterq (bad) pop movabs jno mov rex fs xchg je movabs out iret loop xchg xor (bad) sahf rex.WRXB mov fstps (bad) xchg out cmp xchg cmpsl (bad) fadd outsl sub mov rolb mov cmp (bad) js rex.RX fcomps pop xor cmp xchg xchg fisttp sahf push sti mov rex.RXB xorb (bad) cwtl (bad) xor rcll lods cmpsl push jrcxz xchg push and loopne cmp mov movslq xchg adcl pop (bad) and std (bad) rex.R cmpsl shrb xchg (bad) rex.WRXB mov cs (bad) mov pop pop add (bad) xchg jmpq sahf (bad) or pushq in add (bad) push rex.WRB xchg pushfq xchg xchg movslq fwait es xchg (bad) cwtl movabs and out (bad) jrcxz sub pop (bad) adc jne mov repz (bad) loop mov or in lret sbb cwtl jbe rcll (bad) (bad) lret ja or cmp push pop rex.WB mov push jmp nop xor out (bad) mov xchg test js cmpsl jg wbinvd cmc rex.WX fwait retq sbbb orl add nop adc (bad) sbb leaveq pushq xlat jno (bad) rolb xchg adc xchg fucomi mov popq mov and (bad) (bad) stos addr32 xor xor fdivrl addr32 and sti mov and pop rex.WB sahf adc (bad) or unpcklps mov (bad) ss and sahf or fs lods (bad) cmp jg (bad) pushq (bad) xchg out enterq test xchg pop ds mov test or xor jp lock cwtl leaveq stc and (bad) rex.WX jl cmp pushq (bad) push std fwait int3 mov leaveq cli xchg sbb out loope sbb add or (bad) test pop fstpl repnz in shlb (bad) lock mov xor enterq cmp rex.R jrcxz (bad) rex.WXB out adc jge retq or rcll mov fidivrl cmpsl sub sbb movsl movslq out movabs cs kmovw lock popfq (bad) xor callq insl adc mov mov or adc movslq addr32 xor outsl adc (bad) jnp (bad) pop stos rex.WR rex.WX nop imul cmp xor lods (bad) (bad) mov (bad) (bad) test cwtl mov mov and stos add cmp icebp mov rex data16 movabs cmpsb nop sbb insb test fild ds (bad) testl sbb lea divl or mov pushq sub sbb (bad) ja (bad) xchg stos cmp xor cmc add insb jmp in mov (bad) jo cmp (bad) (bad) fnsave jns xchg mov pop fs mov nop lret cltd icebp out es shl sub fisubrl mov cmp rex.RX test push mov push jp adcb jrcxz,pt stos push mov imul mov callq stos xor (bad) sbbl add scas (bad) js rex.WR in rex.RB out sahf cs rex.RX vcmppd repz addr32 lea xchg (bad) test rex.WR repnz lods idiv movsb (bad) mov in xlat lods add pushfq movabs mov movsb movabs (bad) loop mov push lret pop stos lret mov sbb xchg iret xchg movabs imul cmpsb rcl pop sub sahf outsb (bad) (bad) cmp xchg jnp xchg nop shlb jle outsb cld test out out xlat xchg in sbbl mov xchg imul rex.RX sub jl std insl sahf xor or (bad) xchg movslq pop sahf scas fiaddl movsl sbb stos repz sub add cmc leaveq mov jae fst xchg in mov fndisi(8087 pop cmpsl mov movsb cli insl and (bad) iret (bad) in sub in fwait rex.W lahf xchg fnsave js rex.X pop jmp movabs xor mov insl stos sahf rex.W xor movslq or movslq ficompl rex.WB sbb ja push lock jno scas cmp (bad) jle cmp add jmpq jl pop outsl mov (bad) (bad) stc sub ss mov pop push push pop xchg or add shl pop push and rcll jae mov jg in fidivrl xchg lret (bad) mov neg and push mov rex.WR cmp scas js adc cmp mov mov jo xor xchg repz rex.RB lock fs cmc pop rex.RX or lea jg xchg jne lret push (bad) rex.B int3 xchg add xchg pop push sbb add sub adc movabs cs callq scas xchg xchg pop es mov xchg add xchg (bad) jb sets shlb jmpq cmp push or hlt adc gs movabs es mov movsb enterq jb sub fistp retq insl mov push xchg mov (bad) sti movabs lret xor (bad) notl lods cltd jmp (bad) mov push imul lahf in fwait xchg rex jne adc cmpsl sti notl mov sub mov rex.RX pop (bad) scas nop jg insl mov rex.B jle jle fcompl (bad) (bad) testb fidivr and xchg lea adc push clc in callq add jo pushq mov pushfq lods popfq push cmpsl (bad) scas callq movsl test rex.W push outsb jmpq hlt (bad) mov sbb (bad) pop callq xchg addl push stos (bad) cmp jrcxz mov xchg outsb mov (bad) adc (bad) rex.WRX es callq movsl js adc lahf (bad) stc lahf fisttp (bad) imul shlb std xchg and repz mov test pop xchg imul xchg xor mov jb adc push push or (bad) add rex.WRXB roll popfq xchg cwtl add movsl xchg mov rex.X xchg lods movsb callq xchg pushq push jne xor jno retq (bad) icebp cwtl loopne jmp rex cmpsb xor leaveq jge cltd (bad) xchg scas xchg jne stc jmp adc pop pop leaveq jrcxz sbb in shlb fisubrl cmp (bad) fldcw xchg (bad) xchg (bad) jo pushq movslq rex.RX (bad) mov mov sbb shll gs idivl nop int add sbb pop xchg xchg push cmp (bad) loop rcrb fcomip ja jns mov mov mov mov mov rex.WX or rex.RX xchg add outsb rcll push jbe xor (bad) jmp int3 lret rex.RX jmp jns cwtl cmpsb repz clc push fs lods jmp push imul pushq fimull repnz (bad) popfq movabs rex.WRX jrcxz test sahf cs mov loope (bad) insl xchg and rex.WRB mov xchg (bad) push fisttpl fbstp neg xchg leaveq (bad) rex.X cmp adcb sbb and cltd mov cmc enterq cmpsb out int scas (bad) add xchg (bad) rex.WRB (bad) cmpb and lret or lahf rcr mov rex.WXB (bad) pushfq and push gs add sti or cltd incl scas pushfq mov (bad) int3 (bad) mov xchg xor add stos insb cmp (bad) mov mov xchg mov rex.RB nop rex.WXB and pushq pushfq outsl push movabs sub xchg push (bad) jne jl movabs sbb outsb and mov xlat jno xor mov (bad) rcll (bad) pop lahf xchg mov or pushfq (bad) add mov (bad) sub rex.RXB repnz hlt insb ss loop xchg pop push jrcxz xchg add mov (bad) cwtl rex.WRX (bad) in sahf scas fs pop or rex.WX rex.WX fiaddl xlat std in retq (bad) cmp test mov stc stos fwait (bad) xchg pushq and (bad) movabs rex.WB rex.RXB rex.X mov rcr and lret xchg sbbb rex.WX pushq rex.RXB rex.WR cmp (bad) mov pushq or movabs outsl sysret jp sub mov mov push adcl lock retq xchg xchg int3 xchg out and and (bad) test pushfq pushq add mov outsl in xchg fdivrs lods (bad) (bad) (bad) mov (bad) rex.WRB xor data16 adc xor (bad) lret xchg adc insl (bad) cmp insb movabs jg cmp adc rcrl sti (bad) loopne mov xchg push pop or cmpsb fidiv mov (bad) lods xchg nop sbb jnp add push mov push mov cmp (bad) ja cs ror int ficoml xchg mov mov push (bad) and cs fldl pop rcl stos shll (bad) fsubs (bad) movabs add cli sbb xchg (bad) icebp and (bad) jbe rolb cmp rex.B enterq jo loope cs push imul cmp sub je div mov mov rex.WB mov (bad) adc (bad) cmp push movsl test adc ja jns (bad) (bad) lea (bad) sbb movabs decl (bad) add sub fsub insl mov in scas (bad) or adc sbb mov (bad) (bad) lret cltd jge adc (bad) xchg (bad) mov add callq mov in xchg jg pop hlt jp,pn pop xchg incl jnp ficom mov lret rex.RXB lock cmc insb cmpb add and insb mov (bad) sub retq add (bad) mov test (bad) xchg pop or and push and xchg mov rex.X sbb (bad) push test xchg cmpsb add scas jp xor stc negl pushq or xchg push repz outsb sbbb xlat adc mov movsl xor xchg repz (bad) (bad) xchg callq fisubrl xchg sub popfq mov es clc sahf rex.WRXB jae addr32 jle subl callq sti push xchg and push (bad) mov (bad) fs (bad) (bad) add xchg xchg rcr lret jge push sub sub nop mov (bad) jae rex.WXB mov lock mov xchg rex.X and movsb js pushfq in movslq movabs xchg pushq (bad) jb popfq cmp sti addl imul sub (bad) addr32 movsl cmp add insl mov pcmpeqb lea pop mov rex.WRX in xlat pop nop cmp (bad) mov fistpl xchg int3 mov xor (bad) or xchg xlat or xchg scas decb (bad) cmpsl mov loop outsl jg (bad) mov cwtl fcmovne jle fwait pop stos mov pushfq rcll and test imul ds cmp cld xchg (bad) and div out add rcrb rex.X rex.WRXB or and stc rex.X rex.WXB out xchg (bad) mov cld sub jmp xor and (bad) int3 xchg rorl mov pushq mov xchg in ss mov cmp xchg cmpsl jl jp int or xchg mov pop loope outsl movabs add sbb test push jnp mov push cli or jns js rex.RB xor xchg (bad) (bad) jb mov jmp xchg lock (bad) cmpsb sub mov jns sar xchg xchg add add mov cltd mov mov or xchg lock clc (bad) xchg (bad) jmpq js mov sbb cmpsl pushfq push ja or andl xchg (bad) xchg cs (bad) sti xchg mov sbb (bad) repnz cltd xchg add in xchg fcmove push rex.X orb xchg lea pop pushfq sub rex jp lahf imul movabs movsl jg sub sub push (bad) (bad) and push (bad) pop (bad) xchg cld (bad) mov hlt gs jmpq jmp sbb (bad) mov (bad) rclb pop or push loopne scas jno pop (bad) mov pop xchg mov test push sub scas cwtl (bad) pop cmc (bad) jb sbb in push pop sbb xchg fwait adc iret stos xchg fsub rex.B repz fistl out repnz add (bad) fnsave or xchg mov rex.W xchg rex.RXB lods mov xchg (bad) (bad) jnp mov pushq sarb imul scas stos movsl and mov fwait pushq pop (bad) xchg xor and (bad) (bad) push pushfq add loop fwait jbe sbb mov adc push sbb jmpq rex.WRX lock or mov movabs (bad) ss (bad) sti push sub stc pushq (bad) insl xchg ffreep and movsb jge (bad) sbb mov rcr ficom sub insl xchg sahf cmp in and (bad) in rex.WRB rex.WR movabs rex.RB loopne fs (bad) loope mov movl (bad) movsl push add pop (bad) or pop ficom lods out in cwtl sub or nop movabs movabs (bad) xchg nop adc je add mov (bad) out mov mov jnp loope lea mov scas movabs push in notb (bad) xchg or test mov in (bad) cmc insl xchg (bad) mov loop xchg rex.X sub rex.WB mov ror sbb es pushq imul (bad) xchg int3 (bad) lret rorl xlat xchg lea jbe rex.WRXB sub mov jp xchg lods scas retq rol push xchg popfq mov jno mov mov lret sarb lods (bad) pushfq jae popfq (bad) (bad) fwait mov mov cmovnp nop popfq repnz cmova push and xchg sub xchg (bad) (bad) std mul lea rex.XB not (bad) (bad) retq xor lock pop sub test (bad) andl xchg fsts adc (bad) cs (bad) lods (bad) fnsave insl mov rex.WRB rex cli sbb (bad) cs rex.WRXB sbb jbe xchg popfq and and fsubr pop jo sub out push jg (bad) push mov rex.WB xor out adc sahf cmp sbb in jrcxz mov fcoms mov pushfq rcrb jmp jle mov sbb (bad) add retq xchg roll (bad) movsb (bad) mov loopne mov push rex.X callq enterq and mov mov test (bad) (bad) iret xchg mov test lea xor fiadd (bad) rcrl cmpsl mov retq shlb clc ja push mov (bad) mov and or rex.WRXB mov imul insl push adc stos inc mov movslq es (bad) pop je (bad) fnstenv rex.R lahf mov add mov lods add (bad) bswap (bad) mov nop mov mov clc rcrb insl in mov ja sbb pop xchg rolb pop rcrl mov iretw mov sahf cmp rex.XB out add decl xor (bad) movslq rex.WX jmp out cs testl rclb rcl or movabs mov (bad) iret xchg out rex.R rex.WXB rex.RB (bad) jge leaveq xchg rex.WB sub xchg jo callq (bad) xchg (bad) or outsl push stc push sahf (bad) movabs out jnp xchg sub sbb (bad) (bad) adc (bad) rex.X cltd mov (bad) push or seta rex.WX rex.R xchg clc repz fnsave (bad) adc stc jge xchg sti cmp sbb mov gs xor xchg popfq pop test sbb outsl pop stos or (bad) lret (bad) (bad) xchg jb cmp xor mov loope cld lret fild movabs and cwtl iret pop (bad) sbb out out rcl xchg jns int3 (bad) xor (bad) lahf mov andl sahf js movslq (bad) stc cmp rex.RX (bad) mov adc xchg pop xchg (bad) mov hlt movabs retq xor xchg iret xor add fsts pushfq cld scas mov adc (bad) rex.WX callq callq fsts iret mov adcb jg rex.WRXB leaveq xchg cmp test rex.W mov (bad) adc xchg and dec jno xchg subb rex.WRX fwait push cmp cmpsl pushfq (bad) or repnz xchg stc or data16 in jo push mov cmp idivl (bad) jne out xchg pop jno jle push rex.WR outsb (bad) in addr32 sub (bad) (bad) mov (bad) and jle or rex.WRB push out retq (bad) rcrl push pop adc mov xlat add sub jne rex.RB mov xchg mov sbb mov rex.X mov jle sub push xorl mov push xor jae imul (bad) std fisttpll xchg sahf xchg sub shlb movsb lret jne xchg mov cmpsb (bad) sub imul (bad) xlat retq in rex.B cs mov test xchg jbe rorb xchg (bad) add scas (bad) rex.X (bad) js insl sbb and cmpsb xchg adcb cwtl callq mov cwtl mov cmp add (bad) or push xor (bad) jge jne xchg hlt mull (bad) (bad) and std lea rex.WXB cmp es push fdivrl sub cmp add (bad) jmp movsl (bad) movabs repz shlb (bad) sbb (bad) in popfq jle cmpsb int3 xor scas mov (bad) movsb and cmpsl (bad) cli lods mov addr32 mov stc xchg add or mov rex.X shrl in stc (bad) xchg xlat xor lea (bad) fbstp (bad) xlat lock movsb retq xchg xor adc sub (bad) xchg mov outsl mov out cmp sahf mov rex.WXB pushfq sbb movabs insl adc loopne (bad) orb mov cltd loop test movabs sbb or (bad) retq jle mov jrcxz sbb in scas sbb rex.X adc rex.XB (bad) sahf pop int (bad) movq movabs rex.WRXB popfq jmpq adc neg add mov cmp loope xchg mov jle cmp mov (bad) roll xor jg callq stos adc xchg sbb (bad) sub jp xchg (bad) pop repz (bad) add (bad) sahf test cmp (bad) js in in (bad) imul (bad) cwtl movsb adc mov (bad) in adc movsl push sbb out rex.RX jno xlat push mov repz sbb movabs hlt (bad) mov clc xchg fwait js cmpsb sets jno xor cmp test loopne sub adc imul lods (bad) (bad) bnd pop jg (bad) (bad) sbb rex.WR mov and out in (bad) or scas imul xor push rex.XB popfq mov (bad) pop shll sub xlat pushfq enterq or xchg mov fwait cmpsb ror fmull cmpsl xchg lods scas rex.RB cwtl xlat (bad) int3 pop and loopne (bad) pop adc (bad) jmpq mov enterq (bad) fisttpll adc js loopne add cmp mov sub jmp mov negl sub loopne retq (bad) pop sub ds movsb xor sub scas adc mov mov rex.W cli xchg xchg test sub adc xchg push movslq mov xchg mov xor shlb lods std xchg leaveq ds pushq int fsts push insb cli xchg repz (bad) (bad) leaveq mov mov pop fmuls repnz mov (bad) insl clc movsb movabs rex.R cs (bad) (bad) add or rex.R rex.WRXB add xlat sub in (bad) test mov cwtl rex.WXB add data16 cmp rex.WB (bad) and jg mov jno xchg test out pushq xchg in lock bts cmp add mov cwtl xchg and jo lret xchg movsb (bad) cmp mov movsl xchg rex.RB adc rex es (bad) xor jmpq mov (bad) mov xchg xchg pop sbb push adc (bad) xchg rex.R jge jns (bad) (bad) xchg adc mov rex.WR rex.WXB (bad) sub shrl (bad) loope shlb xchg xor imul movabs (bad) add (bad) jae jg int lods stos cmp insl shrb mov stc (bad) out pushfq test scas rex.RXB in pushfq imul callq es popfq rex.R or mov mov lods xchg mov rex.XB rex.W rex.B xchg and (bad) out pop stc stos sub rex.WRX callq (bad) negb test movslq push cmpsl xchg jmpq test cltd (bad) imul scas pop mov rex.WXB adc xchg jo outsb push fwait mov or mov je xchg mov scas (bad) sub movsl int data16 out nop movabs rcrb add (bad) (bad) scas repnz rex.WR xor rex.XB jle mov cmpsb fcomip pop lea (bad) rex.WRX test nop cmp mov xchg sub jge icebp cltd shrb mov (bad) xchg rex.WX jge (bad) jnp xor add xchg (bad) movsl mov (bad) jbe rex.WRB rex.XB out fs push (bad) int mov imul nop xchg loopne or mov xchg add or (bad) adc rex.XB adc cld movsl stos mov add insl jle rex.WX (bad) xchg fdivs sub outsb out mov lahf push (bad) insb (bad) jno loop shrl xchg pushfq push jle jns (bad) (bad) (bad) movabs addr32 (bad) callq mov (bad) and jg xchg jrcxz mov mov (bad) sub add jnp rex.X xor rex.WRX lahf out push movslq and ficoml push callq lahf sbb rex.RB jne fs xlat rex.WRXB rex.WB cmpb and xchg cmc (bad) (bad) fdivr (bad) cmp rex.W (bad) rex.WR jl push (bad) lret xchg xchg out pop callq cld xchg (bad) lret add and sbb xchg mov (bad) repnz (bad) add (bad) addr32 and imul test push js (bad) xchg rex.RB int3 xchg pushq movabs rex.RXB cltd movabs xchg in xor or sti mov fsubs mov adc cmpb test mov ss repnz orl xchg enterq movsl fistp repnz sbb scas adc xchg cli mov cmp loop xchg shr rex.WRX fdivrs (bad) pop and rex.RX push cmp leaveq xchg sbb (bad) add xchg mov in movabs push pop mov or cmpsb xchg divb lret clc push mov mov (bad) cmp xor (bad) pushfq and sbb loopne and or in loop jae (bad) fucomi lret sahf (bad) pushq sti jae repz xchg rex.WR rex.X xchg xchg callq cmp addr32 movabs rex mov mov lahf rcll retq imul xchg xchg cmc or xchg rex xchg movabs mov rex.WXB cs imul leaveq pushq rex.RXB jae mov lret movabs addr32 adc orb cmp nop mov incl lea movslq jae addl lea std xchg pop (bad) or pushq rex.R jrcxz (bad) mov (bad) cmc (bad) and int3 fstl (bad) cmp mov add movslq sbbl (bad) int3 sbb callq add mov loopne rex.WX jl rex.X lret movabs insl pop add pop or icebp outsl mov mov xchg sti rcrb rcr (bad) data16 (bad) popfq jmp sub movabs (bad) xor loop mov callq xchg add jg,pt mov sahf imul adc (bad) mov sahf rex.WRX pop rex.B or xchg sbb (bad) mov mov jno (bad) fpatan lods lods pop rex.WX es fldl fisubrl je pushfq or mov rex.WRXB rex.RXB fsubl sub rex.WX insl fsubl jbe xor retq adc mov xor mov pop and xlat ljmp (bad) (bad) pop push cmp mov pop jbe sbb int3 mov xor (bad) pop fnstenv retq fmull out rex.R lock cmp retq lret ss loop adc mov addr32 mov jo lcall or sub and rex.WX loop sub pushfq jmp (bad) loop (bad) rcrb lods xorq or addl in lods mov jae sub (bad) adc stos add add mov (bad) in rex.X fnstenv adc pushq pop loopne rex.WRX rex.WRX fwait lock std push rclb (bad) fisubrl psubusb mov (bad) ds push imul jno shl sbb (bad) xchg (bad) stc rex.W stos fcoml rex.WB gs adc sti xchg (bad) rorl incl fs (bad) test fimul (bad) adc imul fcmovnu divl loop push addr32 sub jbe fdiv cltd and (bad) jbe outsb adc push insb xchg jb and (bad) add addr32 outsl cmpsl jo (bad) rex.B xor retq jns (bad) jg sarb cli mov ds enterq and cli es sbb sbb mov rex.R mov rex.XB retq hlt rex.XB add rorl rex.WRX ss jge cmp (bad) out or push jnp addr32 (bad) (bad) xor xchg xchg add (bad) fwait pushfq outsl cltd mov lret mov sub lahf pop pop xchg iret xchg gs (bad) xchg rcl adc lods push (bad) jg sub rex.B and rex sahf cmp sbb mov scas rex.WXB cmpsl jp xlat stos (bad) movabs sbb sbb rex.XB (bad) sub icebp sarb movabs (bad) popfq push cwtl mov out rcll mov and icebp push xchg mov push pop test mov fcmovb pushfw cwtl jmp add loop in rcrl (bad) cmp xchg stc (bad) xchg std lret lret callq jb xchg (bad) xchg hlt (bad) stc pushfq xor ja xchg sbb in imul in sbb rex.WR (bad) mov xchg push stos cld loopne clc or xchg jb out (bad) ss xchg jne (bad) or pop in ficompl push xor or rex.WXB imul imul or (bad) (bad) jb cmp test cmp rolb imul (bad) mov fidiv push jle (bad) and insb adcl jne push add add xchg (bad) mov push fs xchg lods loope lock push cmpsb stos add xchg jnp movslq in mov xor sbb repz fildl (bad) rex.WX and subl adc cmp movslq jno mov (bad) out xor sbb test mov fmulp xlat (bad) je (bad) rex.WRB mov and (bad) mov jae cmpsl in orb pop (bad) xchg pop xchg faddl mov rex.RX (bad) pop rex.RXB xchg xor (bad) lretq cwtl jb add adc jnp out repz xchg mov cwtl lods ss xor xchg (bad) mov inc xchg fistpll push jns sbb movabs mov (bad) sbb pushq (bad) sbb pushq in adc lods test movslq loopne test xchg movabs jrcxz in jo lldt jno fsubrl test cmp ja mov in (bad) rex.WXB jmp sbb out sahf (bad) fcoml clc addl push shrb xchg mov leaveq jo xchg fwait (bad) add pop rex.RB cwtl test lock fwait sbb and add (bad) pop rex.WRXB jae movabs rex.WRXB movabs mov pushfq or sbb xor xchg fwait xchg mov repnz rex.R (bad) cmp push pop idivb xchg flds (bad) in xchg iret mov jg cmp rex.RXB lock out lret stc (bad) jmp rex.RX and rex.WRX lods xchg (bad) sbb (bad) (bad) or or add mov add enterq (bad) movsl cmp andl pushfq (bad) (bad) pop (bad) repz xchg out fstpt lods xchg xor sbb movslq or rex.WX movabs cmp lret (bad) (bad) insb and pushq mov out (bad) movsl (bad) pop popfq (bad) rex.X push add nop fwait (bad) repnz push ds movabs (bad) sahf sbb push sbb mov (bad) xchg rex.RB stos (bad) enterq movsb mov rcl lods xchg ja fisttpl mov (bad) (bad) fbstp sbb xlat mov mov adc cwtl (bad) icebp callq cwtl mov push stc sti ss cwtl cmp lcall cs xlat pop sub lahf nop movslq jle mul pop rex.W (bad) sbb fsubrp xchg shl mov int3 pushq sub (bad) xchg rex.WRB mul xchg mov sub lock retq movsb hlt outsl (bad) and movsl movabs mov or sbb cmpsb xchg fdivrs (bad) jp xchg xor push bt or jnp jl (bad) xchg add fisubr xchg add mov xchg xor js outsb (bad) popfq jae rex.R retq (bad) (bad) (bad) mov cmp sbb jl cmp adcl outsb (bad) imul jg xchg (bad) adc lret fimul pop xchg (bad) je jns test mov (bad) lods xchg xchg rex.R fwait out movsl adc or pop xchg (bad) int3 retq movabs cmp std jns xchg cwtl cmp add (bad) adc sbb cmp cmp pushfq mov rex.WRXB rex.WXB cmp mov (bad) jno mov addr32 leaveq xchg insb rex.WB pop es rex.WRXB cmp mov lret pushfq es in mov stos xor xchg lods mov je (bad) movabs xchg (bad) scas jle rex sbb xchg retq js mov cmpsl sahf punpcklwd (bad) and push fdivrl sub sbb pop xor in nop movabs push add (bad) (bad) jl jmpq or jg jns mov mov mov test in rol mov xchg std xchg lock rex.XB outsl enterq roll ja mov sti lahf loop or xor cltd fsubs rex.WRX gs cmpsl add sarb jle fsubl (bad) rex.RX xchg pop push xchg icebp mov scas lea je jae (bad) je sbbl xchg and cli (bad) xchg rex xor imulb ja mov pushfq sub jp adc pop fsub xchg lret cld loope jo xchg retq imul adc in scas shll mov sbb and sahf sbb imul mov fdivs jbe (bad) popfq cwtl xor std and rex.WB int in cmpsl loop movabs iret mov add mov outsb xchg callq popfq jg xchg divb insb outsl jg shrb and jbe callq insl xchg clc insb lret lock xchg xchg sbb cmpsb jl loope mov insb test pushfq (bad) mov (bad) rex.WX fwait out pop mov jno sub add pushq add lock cli clc jl xchg mov (bad) (bad) sarl jg jae popfq lods adc packuswb jl popfq movabs jno or cmp jrcxz push cli sbb sbbl std add (bad) mov sahf pushq (bad) and loop andb xchg imul (bad) xor (bad) jbe loopne cmp pop rex test xlat or pop rex.XB xor ja sub rex.WRB xor lahf (bad) jg sub jnp xchg (bad) outsl rex.RB xchg or rep int (bad) stos lods (bad) addr32 (bad) cwtl iret pop jb rex.WXB cmp sbb stos sub jle pushfq movsb jge xor rex.WRXB sbb push loopne cwtl mov adc leaveq mov (bad) or adc in rex.R icebp xchg xchg int3 lahf adc sti adc rcl mov out movslq or stos movb (bad) clc sub (bad) add mov (bad) add icebp pop sbb (bad) (bad) or and scas test rorb xchg mov and fisub push in pop lea xlat sbb (bad) adc xor (bad) nop (bad) pop jmp cmpsb jp (bad) xchg cmp data16 sub setge in outsl nop (bad) and mov sub jg or rex.B test pop fcoml push cmpsl lods xor (bad) sub sbbb out pop fadd iret rex outsb (bad) (bad) xchg fnsave mov xchg sbb mull adc pop adc rex.X es data16 sub sub shr int3 jbe fdivrl sub cltd push out cmp out (bad) (bad) pop movslq ds pop repnz sub add callq rex (bad) mov sbb (bad) xchg pop cltd fwait (bad) lods mov test mov mov rex.WXB jp xor cmpsl xchg out sahf xchg cld syscall mov loopne mov (bad) jb mov jbe mov (bad) adc or xchg rex.WR and vmovaps movabs xchg xor outsl push xchg hlt movabs movslq xchg (bad) sbb xchg xchg andl rclb gs push jp nop fs ja xchg std addr32 xchg repz addl xor xor add (bad) int ss cmp ror insl jg (bad) mov addr32 or out pop loop or (bad) (bad) xchg mov jmpq xchg clc xor (bad) (bad) insb mov mov insl or popq xchg pushq mov enterq sub and jmp sub mov xchg ja rex.WR (bad) jge lods xchg (bad) outsb shrl rex.RXB fisubrl jmp popfq fistpl movslq (bad) or pop shrb add idivb push cmp mov mov mov (bad) add loopne fwait callq mov xchg jb or in mov imul cmp cwtl fld jae rex.X lock movsb rex.R (bad) rex.XB movl cs rex.WXB mov add cmp in out (bad) popfq sahf es jbe js loopne push nop rcll pushq insl xor (bad) mov rex.WRB (bad) or xor push adc mov fcmovbe and pushfq je sahf rex.X movabs adc add or (bad) loope and jmp xchg fisttpll sub (bad) mov (bad) rex.WRB (bad) mov mov xchg retq repz or mov or adc data16 jne js (bad) (bad) (bad) sbb fmuls rclb and cld (bad) ficomp mov gs rex.WX cltd jle (bad) clc jle jb divl pop rex loope (bad) rex.WR sti retq loopne (bad) mov (bad) leaveq mov xchg add jl imul xor adc xchg fwait pop push (bad) rol movslq mov callq (bad) nop sahf xchg repz divl and popfq (bad) xchg movsl jle add or mov icebp fistpl jl rex.WRB adc rex.W rex.X adcb sahf rex.RXB pushq movabs std mov (bad) mov movslq jge fidivr sub xchg sub lret pushq out rex.WR add repnz (bad) rex.RX rex.WRB mov push (bad) or out shr sbb outsb cmpb insb jle (bad) ficomp icebp mov scas (bad) or xor rcrb in (bad) pop lahf (bad) nop jmp movabs cmpsb mov push adc leaveq iret (bad) xchg (bad) pushfq adc loope mov cs fcoml jmpq lcall pop test (bad) jge loopne mov xchg frstpm(287 xor push (bad) mov adc (bad) push pop xor jl xchg or jmp rcl jne test or mov mov (bad) sbb retq rcrb (bad) mov pop gs adc outsl adc and sub out jae (bad) fcompp idivl mov movabs movsl insb (bad) mov cmp retq xchg (bad) (bad) xlat adc and or jns,pt pushfq sbb xchg mov or insl add sub jg stos vpaddd ficom iret (bad) rex.WRB outsl xor (bad) lret adc (bad) (bad) and jp jl mov stc (bad) jno test adc leaveq cmc fcoms (bad) (bad) hlt xor rex.WRXB xor mov xor ffree (bad) pop sarl mov out nop sbb cmp push lret or xchg pushq int3 push retq xchg mov rex.W rex.WX rex.RB pushq lock test mov rex insb mov popfq xor push pushfq cmp add movabs xor sbb sahf sbb adc fdivs (bad) addr32 (bad) pop stos add or push out mov mov add ss rex.R (bad) ror xchg (bad) mov cmp cltd icebp test (bad) lods xchg rex.WRXB loop (bad) data16 mov push jbe xchg jg gs jp enterq or int fimull ss (bad) rex.WXB rex.WB mov adc pushfq sbb xchg nop mov mov sub outsb xchg push (bad) mov add pop jge (bad) fnop xchg mov (bad) repz (bad) mov pushq jbe rex.X in idivl js (bad) and (bad) fisttpll jnp in or (bad) pop scas hlt (bad) mov mov rex.WXB pushq scas xchg jle jrcxz push out test loopne mov pushq int scas add mov mov rex.WRB pop sub vmulps pop pop mov (bad) rex.WX addr32 xor xchg or or movsl (bad) scas sbb push repz push movq jb pop sub xor sbb out add fisttpll ss je fxch cmp (bad) cwtl (bad) mov cmpsl ja cmp rex.WRXB clc repnz movsl outsb lret rex.X movslq push (bad) sbb popfq sub iret mov ja stos xchg (bad) (bad) insb and add (bad) sti pushfq (bad) jbe sbb scas fs and xchg fwait (bad) (bad) pushq pushq rex.R rex.WX in mov imul fwait std pop rol (bad) jmpq (bad) int3 sub out mov leaveq nop scas out jno out notl (bad) nop pushq test loop jp rex.WXB or and shl nop (bad) and rex.RX (bad) mov sbb adc in and xchg sbb or add cli (bad) pop (bad) sub jrcxz sub stos jbe retq lret std (bad) rex.X lods add pushq callw mov mov (bad) xor retq (bad) sbb int imul pop sbb sub nop fs imul cmp or and in movabs std fidivl cmp outsb lret (bad) mov ficoml (bad) push (bad) pop cs xor lea rex.WRB sub (bad) pop (bad) insb and jmp movslq rex.WRXB xchg pop (bad) jge xor mov fdivrs rex.WRX mov lret cmpsl jrcxz,pn mov xchg xchg (bad) lret stos xor adcl in jbe jrcxz rex.WB retq add jb popfq (bad) (bad) (bad) (bad) rex.R mov cmc iret icebp xchg xor jl int sahf mov rcpps sub xchg std test popfq ja negb sbb loope movabs (bad) mov xchg jmpq mov std rex.RXB stos mov fs outsl and sbb xchg ds or (bad) addr32 int3 adc retq rorl cltd mov fidivrl out in pop sbb xor xor adc fldenv loopne (bad) adc minps test in (bad) (bad) xchg adc cmpsl or xor xchg adc pop movslq xor lret mov ss (bad) xchg out xchg or (bad) rex.WRXB lret rclb (bad) pop mov je (bad) mov mov pop push or lea pop lock xchg xor mov insl mov add (bad) xchg (bad) xchg mov in rorb in mov outsl adc je cwtl rex.RB mov (bad) mov (bad) jl cmovae rcl rex.RXB xchg lahf add fdiv (bad) ficom adc mov mov xchg xor test cwtl (bad) movabs callq xchg cmp push cwtl jbe (bad) out addl movslq mov outsb ss add push rex.WR and push sbb and fs or repnz jne (bad) (bad) xchg xor sub ficom pop or jmpq out and pushq shll sahf cld or outsb mov outsl push out mov rex.XB lret rolb jmpq (bad) fimul mov sub (bad) (bad) clc xor (bad) xchg in and pop addb cwtl out and pop mov (bad) rex.XB or sub ds add lods (bad) mov (bad) movabs movabs sahf rex.WRX push fisub loope pop mov addr32 add imul pop (bad) jno rclb mov or (bad) adc rex.WRB rex.RB push movabs mov sub fldcw xchg push pop stos (bad) pop xchg (bad) rex.WXB rex.RX or scas movsb cmp xlat out cmp push retq flds adcb int3 ficoml outsb jrcxz add insl push xchg cmp xlat mov repnz sub or add pop rex.WR es loop sbb mov fcmovne (bad) rex.R in cmpsq imul cltd iret in sahf scas xor out movabs movsl xchg not rex.RXB gs adc rex.WXB test fcoml or je fadds (bad) (bad) mov rex.WR rex.XB imul in xchg sub rcl pop cmp xchg or mov rex mov push cmp or pop cld mov rex.R movabs and fstl int pop jne add test outsb fwait and xchg jmpq mov xchg push fdivl movabs pushfq out rex.WR leaveq testl callq xchg test sub cmp xchg xor add cmpsb xchg cld sbb push push sbb fistpll stos mov xchg mov and int xchg mov pop rex.WXB cmp (bad) jae xchg lahf rcrb loope xchg rex.RXB ja sub pushfq sbb imul xchg rex.RB cwtl (bad) (bad) rorl std xor xchg xchg callq xchg jae cmpsb int xchg rex.X add push and notl in insb hlt xchg cmpsl rex.RX test mov cltd mov rex.RX cmpsb js sahf mov or ja lods and xchg cmpsb and pushq adc xchg loopne (bad) sbb fistp mov xchg imul push jo adcl mov add xchg gs sub and out (bad) (bad) pop xchg xchg sbb cmp pop repnz imul (bad) cwtl movabs pop movabs sub retq (bad) xor xchg xchg cmc jrcxz loope (bad) movabs sub in push (bad) loope adc pushq popfq (bad) repz rex.WRX xchg fs mov popfq int ss or adc mov fistpl fldcw icebp mov xchg push and and pop sahf repz mov stos nop or jge sarl (bad) in imul lock add in rcrl jrcxz movabs leaveq xchg and jmp gs push xchg cli and jle xchg mov (bad) loopne jnp cwtl mov pushfq sbb or xchg lret cli stos (bad) (bad) movabs fsts and popfq (bad) (bad) cmpsb rex.XB pop gs xchg (bad) (bad) mov push mov in pop xor xchg stc xchg (bad) vrsqrtps mov adc mov loop sahf lret std jbe sub stc sahf (bad) sub jns (bad) movb xchg movsl movabs xchg mov test sbb push (bad) cwtl jrcxz xor (bad) lock in cmp shll (bad) (bad) mov xor (bad) jg lock (bad) scas test imul mov cwtl xor add pushfq (bad) rclb (bad) push (bad) popfq mov cmp sub lret jg xchg (bad) pop fs mov push out (bad) xor adc in xchg jb mov (bad) movsl (bad) mov data16 (bad) add xchg xor test lret addr32 sub (bad) pushq movabs push jmp xorps or xor mov (bad) mov pop adc (bad) sub cli enterq xor mov sub and (bad) xlat mov ljmp ficompl out rcr jrcxz (bad) movsb jge xchg rex.RX pushfq movabs loopne xchg mov pushq stos sahf jae lea xor stos (bad) or rclb xlat mov xchg mov stc (bad) xchg in scas repnz repz test push callq pushq cmp imul (bad) xor xchg jp xchg (bad) scas (bad) int3 xchg rex.WRB xor push negl and (bad) xchg and and add rex.B add xor out in mov mov jnp int insb fwait out jrcxz pop decb lret test xchg pushfq add js rex.XB ja imul cmpl sbb jne and ja xchg mov mov jp lret scas (bad) (bad) (bad) mov mov and addr32 mov push insl fs (bad) jne fiaddl pop cld cmp int3 (bad) (bad) divl adcb and sub mov movabs adc xor rex.WB fnstenv movabs xor rex.RXB out xlat sbb cmpsl notl jl jno sahf xor ffreep lret test outsl imul mov movsb xor (bad) xchg jo (bad) xchg in retq (bad) ficom enterq sahf lret lahf sub rex.RB stc ja rex.WR scas sbb xor (bad) adc push (bad) rex.WRX orb xor pushq (bad) (bad) cmpsb fwait pop mov lret cld mov (bad) jbe jnp push popfq fcoms mov mov (bad) add sahf icebp (bad) (bad) enterq (bad) sbb fs jns cmpsl jae fsubl jl insb and push add orl jo pushq rex.WXB jb (bad) fnsave mov fwait lea lahf lods fisubrl and xchg test xor int3 cmp addr32 mov mull mov je pop cmp movabs xchg rex.XB popfq (bad) loopne cmp or and cltd cmp test lods cwtl fs push mov ficom (bad) ds cld outsb movslq lret mov out lods rex.WRXB sahf xchg jb push pop cld scas stos or sub js insb xor (bad) fisub cmp cwtl (bad) cld adc in mov lahf loop fadds mov xchg xlat outsb test scas add mov or xchg pop pushfq (bad) sar jmpq outsl mov cwtl rex.WRB sbb (bad) rex.WR jno jle jb jo repnz fwait insb (bad) je sbb xchg rex.WX mov fistp jrcxz xchg in imul cmpl and popfq xchg (bad) jl sahf mov retq sahf cld jb (bad) jbe (bad) pop mov popfq fwait and std retq shrb fist mov rcll rex.WRXB (bad) mov loope and jp xor pop xchg orl nop rex.WRB lods jle and stc rex.WR sarb addl and test fild (bad) pushq pop mov pop sub (bad) sub sub fs mov push rex.RXB lea mov push pushq (bad) movsb adc mov loop (bad) (bad) or sub (bad) adc iret xchg es mov sbb jne jnp cmp mov adc and mov jo imul jno adc mov rex.RB fsubr sub push (bad) out adc and cmp cmp adc movslq lea jrcxz cwtl retq adc (bad) mov jmpq and (bad) rex.WXB xchg rex.WX imul sub (bad) adc xchg add cmc sbb (bad) mov push sahf mov jno (bad) test movabs xchg push cmp divb nop movabs data16 (bad) jl or jne,pn cld jae in jmp movabs xor rex.WRB imul pop ljmp jmp or sahf pop adc mov sbb push xchg mull and fildl sahf mov loopne (bad) movabs (bad) mov loop sahf mov (bad) xchg cli cltd (bad) adc cwtl movsb movabs mulb loopne shrl jg pop jae js movabs sti and push jmp add fs cmpsb (bad) fstl (bad) fisttpl xchg pop test sub mov callq fsubl loope xchg int jno out mov xchg pushfq xchg jae outsb add jl sbb xchg sub movslq addr32 jns iret scas (bad) jmpq subb fsubrp mov add (bad) fidivr cmp sti sub xor mov repz ficomp or (bad) mov cmpsb jmp nop lods movsb outsl rcrl lret ja jp xchg jae fnclex out add xchg add mov cmc rorl xchg sub pop xchg fs push xchg jg push lret stos xchg xlat shl or movsb (bad) and xchg xchg (bad) rex.X mov xor jns adc fcoms adc (bad) pop cmp xchg jo push xor orl pop imul add xchg int3 xchg test add sti negl push (bad) xchg jrcxz mov out cli std sub sub cmpsl popfq fimull in js movsl sbb add sub mov add pop cmp mov rex.WRXB out xchg (bad) xchg imulb mov cmpl movabs (bad) xchg xchg lret retq push rex.R xor (bad) stos cmpsl xchg (bad) fistp imul jb repnz jl push rex.WRB pop sub xchg fsubrl fwait sub mov xor test leaveq sti insb movabs cmpsb mov push or test or mov popfq mov std (bad) out xchg rex.WB sarb xchg sub push decb clc in scas xchg lods int3 jbe jrcxz xchg (bad) jmpq mov cmp xlat (bad) and jb outsb mov jmpq xor xchg dec ficomp sbb pushq out cltd seta jp fildl rex.RXB (bad) insl sub movabs (bad) sahf stc stos pop add rex.WR icebp sbbl (bad) (bad) push cld (bad) popfq sahf mov test (bad) lret outsb enterq cmp cmp xlat movabs mov jo xchg std push push sub (bad) fcmovnbe (bad) rcll lahf mov xchg (bad) sub mov xchg and lock rorb (bad) mov xor lock (bad) pop int stos jmp push rex.RX je (bad) rex.RXB pushq xchg jne (bad) jno pop mov stos xor rcrb mov or push xchg push cmc ds std (bad) push sbb outsl mov or cmp movabs mov (bad) rex.WRB xchg cltd test mov (bad) pushq cmc cmp cmc and fstps jrcxz sub rex.WRXB push xchg mov jo xchg icebp push jge imul mov mov (bad) fsub rex.WRB sti sub xor out jg mov (bad) sbb xchg popfq and mov (bad) xor cmp add cltd and pushfq cmpsl xchg stos cmp and xchg or add jbe (bad) (bad) movabs imul scas xor sbb (bad) in pushq jno sub xor sarl add jae int3 in pop loope xorl out rex.RB nop sbb int3 pushfq loop or and je (bad) sti imulb (bad) push imul (bad) or stc (bad) xor push vpmacssdqh enterq je movabs xchg add nop sbb mov jo xchg (bad) nop adc xchg rol rex.XB je mov mov fisub lock cwtl ja rex.WRXB outsb cmp ficom fnstcw push xchg stos lfs adc and mov iret pop enterq je lahf pop idivb rex.XB xchg sub cmc or or (bad) in sub loope iret jae xchg mov imul xor rex.W divl jrcxz callq mov xchg xor lret add and cmc xchg push movslq pop fidiv xchg mov (bad) sub (bad) adc movabs xor add xchg sbb enterq out (bad) lea mov repz sbb in xchg xchg scas xchg rex.R xchg (bad) xor movslq xor rex.WXB mov sbb stos adc mov js mov (bad) xchg sahf movsl and jg push (bad) mov xchg nop mov in lea rex.X int sbb jb sbb (bad) movsl push retq loope retq xor sub add jne xchg xor insb cwtl jns sahf (bad) push xorb incl ffreep cwtl popq repnz (bad) test cmp imul xchg pushfq shll mov movsl (bad) sub data16 push pop pop int3 retq (bad) sub (bad) loop outsl jbe mov add movabs xchg (bad) jae pushfq cwtl xor mov adc out mov sbb xor and xchg xor mov je lahf mov jge (bad) (bad) (bad) gs and mov cmpsl cmp xor and (bad) adcb cmp (bad) adc out in ljmp sub (bad) lret shll stc xchg gs (bad) mov repz cmp nop movabs mov pop add rex.R rcr rorl popfq sti rex.WB add insb or (bad) fcompl test add callq sbb mov test cmp rcll pushq mov fistp lret int add mov or cmp outsb cmpb pop (bad) jmp loop rex.WR cmp pushq movabs data16 or stos jle je pop mov cltd mov jo negl adc jmp (bad) pushq (bad) jbe (bad) (bad) xchg (bad) ror fnstenv jrcxz xchg mov mov callq movabs repz push (bad) mov imul sbb fidiv and loopne and (bad) sbb fadds xchg (bad) (bad) test cmp (bad) jo or gs (bad) adc or sub stc in test (bad) sub (bad) rex.WRXB pop xchg pop cmp sub sbb sub xor cmp jnp roll cltd sbb std insl jp cmpsb cmp add sub mov rorb (bad) rex cmp js mov cwtl movsl and rex.W (bad) (bad) (bad) add (bad) data16 fcmove xor fnstenv cli shrb insl add xorps (bad) or (bad) sbb (bad) lea nop (bad) enterq (bad) test addr32 rex.WRX outsb mov lods repz out jle rex rex.XB push or and popq lock rex.RXB nop adc mov (bad) movabs mov xchg mov sahf (bad) int3 cmp (bad) movsl mov addr32 out test rex.RXB sbb enterq sbb ds movslq and cld xchg int3 sub push jo jae xchg imul ss jp movsb mov (bad) repz or (bad) xchg outsb fmul movabs (bad) js sbb xchg pop xor xchg hlt and xchg adc stos movabs cmp icebp nop mov fs add rex.RB loope pop sbb nop (bad) mov xchg xchg add fcoms scas and cld xchg push (bad) mov jge mov jno xchg push rex.RXB mov sub mov sub pop (bad) rex.WXB mov xchg lods (bad) rex.WRXB pushfq sahf in cmp mov jb mov push xor fistl or xchg xor or rex (bad) xchg add fsubl imul rex.WXB fwait xchg xor in (bad) test mov lret imul or rex.WXB rex.RX out iret cmpl add xlat mov movabs sbb mov or and xchg sbb pop sub xchg es imul adc in ja sbb outsl (bad) or jmpq or adc xchg sahf rex.RB jp xor pushfq sbb adc xor (bad) (bad) (bad) pop pushq in out (bad) rex.WB jnp pop xchg pop in cwtl lock movabs (bad) (bad) pop sub ficomp rex.R fadds rclb add repnz xchg decl mov adc (bad) mov xchg in pushq rex.X mov or movabs pushfq and rex.RX jle add mov mov in js sub rex.W jbe movabs (bad) hlt push xor outsl (bad) (bad) fstpl add imul cwtl pop jge (bad) insb rex.WX movabs loope out cmp insb xor pushq loop (bad) add lret sahf scas cli insb lret pop push movsl movslq cmc test (bad) mov mov xchg (bad) mov (bad) (bad) lea enterq xor or cwtl xor xchg mov cmpsl xlat cmc xchg (bad) push retq or xchg (bad) fsub pop pop sbb lods movslq and (bad) xchg (bad) or jno fldcw scas test movsl rex.XB push xchg and jbe jle xchg adcb (bad) sbb rex.WR insb retq cmpsb sti xchg jns iret outsl (bad) rex.WRB and push or jmpq sahf (bad) insl clc cltd jbe (bad) mulb mov mov ss (bad) (bad) push mov insl movabs adc in out xchg xchg (bad) add adc fldt cs mov xchg (bad) (bad) jo xor and lock push mov mov orb movsl (bad) cwtl clc xchg movslq adc test mov (bad) clc xchg rex.WX and mov mov mov push jnp xchg insl adc adc (bad) rolb xor adc in rorl insl pop xchg add xchg push sbb nop pop movsl fs out adc movabs xor fimul retq push rex.XB callq stc fcmovnbe jl cwtl in ja pop xchg (bad) adc jmp lods mov fsub xchg lods mov xchg movsl je xchg cld cmp (bad) repnz add (bad) jo xchg rex.W pop xchg mov sbb adc (bad) xchg cmpsl mov fcompl fistp pop xchg test cs xor and xchg movsb mov or xchg popfq fsubr push out lods rclb cwtl cli or adc stc xor xchg rclb xchg lock jge std cmpsb ja xchg rorl jmpq xchg sbb xchg (bad) jmp or xchg scas ds rex.R adc xchg (bad) imul jae xchg jns jnp rex.WR jae sub pop movabs imul or jne rex.RXB xchg sar mov jns in xchg movsb sub lock fistl rex.WRX rex.RXB push ds adc and rcrb sub mov (bad) cmc cli mov push gs cmp mov (bad) cwtl jmp ja xchg gs (bad) outsl mov retq sbbb push push movabs jb cltd xchg xlat cmp cmpsb rex.B (bad) (bad) xchg lea pop (bad) cli jno rex.WRXB mov (bad) rex.RX and or xor xchg pop lock out (bad) popfq sub jle fcmovnb testl jnp mov stos (bad) (bad) test sbb loope jnp xchg (bad) fldl stc out or pushq mov xchg adc add xchg cld lret (bad) (bad) fistpl rex.RX xor pushq movabs gs rex.WRXB rex.B xchg mov (bad) sbb cwtl xor mov movslq (bad) adc (bad) fmulp (bad) pop rex.WRX cmpsl lret and add ficompl mov add lret xchg xlat xchg icebp fbld xor adc cwtl xchg cli out sbb or lea jnp adc xchg fwait (bad) jo data16 xor or enterq sahf mov pop mov shl xchg addl xchg mov ss add paddq fmuls je jbe movsb adc fisubl sub cmpsl pop jbe decl insb xchg mov fwait mov and mov add xchg repz imul (bad) add fcom in (bad) out mov js ja lock mov sti xor xlat jp sub stos cwtl (bad) gs rex.WX rex.RXB je mov push xchg (bad) insl scas and movabs leaveq xchg mov add mov movabs hlt (bad) rex.XB popfq lods outsl jno (bad) flds (bad) out mov mov rex.RX jge fldcw mov adc or (bad) sub jrcxz rex.WRX xchg cmpsb push xchg add jmp xor (bad) nop test jne in xchg xchg out jnp rex.WX add mov cwtl pushfq (bad) cmpsl test clc test hlt (bad) xor frstor xchg (bad) add (bad) adc lods push xchg xchg mov mov push and xchg xchg lret adc (bad) xchg popfq sub std rex.WX stos rex.WRX fdivl mov addl imul cs imul fild xchg jge (bad) imul rcrb addr32 (bad) push movabs in stos add mov addr32 movabs lods xchg mov (bad) push andl add mov test pop lea rclb in xchg (bad) sbb rex.RXB (bad) lahf rex.WX jne int3 repnz ja popfq mov callq scas negl stos (bad) rex.WRXB fsubrp clc rcrb (bad) adc mov test fldln2 mull push ja sbb (bad) adc pop shll in in jp fwait mov xchg mov (bad) es pop ss rorl and movabs shlb (bad) xchg mov iret mov and rex.RXB ficom mov sbb xchg loop push in je jmpq (bad) scas mov xchg imul mov rex.WRB es pop in fneni(8087 je (bad) cmp rex.RX xchg movabs push xchg es rex.X rex.WR (bad) jnp scas xchg (bad) cwtl (bad) cli (bad) jge cmpsl movabs popq and and popfq fsubs pushfq xchg repz rex.RXB xchg xor pushq cli mov sub xchg retq mov (bad) (bad) rex.R (bad) movsb (bad) fwait (bad) sahf mov mov (bad) lret and (bad) js out (bad) push lret (bad) mov sbb mov or scas int fistl pop scas add mov mov test idivl xchg pop jne add xchg mov jnp adc (bad) cwtl retq xchg rex.W (bad) imul (bad) xchg cmp fstps (bad) in nop adc lods ja adc cwtl sub cmp out test (bad) lods pushfq or (bad) cmp hlt out movabs mov cmp jrcxz hlt xchg movabs cwtl pushfq (bad) mov adc (bad) or fimul outsl push sub cmp xchg sbb xchg (bad) mov xchg mov sbb loope jp retq xchg xchg testb (bad) gs jp cmp nop out sub pop shrl cmp lret retq or movabs in xor imul rex.WRB mov or lods xchg add fs lods and rex.RB cmp ja (bad) sahf rex.WX jmpq out xchg mov mul outsl xchg repnz pop xchg cld stos mov or xchg xchg fcompl stc notl sar jo xchg rex.WX mov out xchg stos xor or movabs mov outsl loop sbb clc cmp stos lods cmp xchg movabs adc fstl stc insb lods pop jmpq cs (bad) (bad) adcl add or cs xchg cwtl mov out and add in sbb (bad) or pop imul rex.R push movabs or xor pop mov mov rex.WRXB (bad) (bad) and or (bad) (bad) adc (bad) movsl pop rcrb sti imul (bad) (bad) loop rex.X sub mov (bad) (bad) test vandnpd pop push cwtl out jp cmovp cli (bad) and in xchg xchg pop movaps (bad) or cmp rex.WX movslq repz lea jmp (bad) icebp notl imul xchg cwtl lahf sti lret fcmovnb (bad) xlat movabs lret test xchg (bad) lock lods stos xchg jp sub test (bad) xor (bad) (bad) (bad) push add xchg lret adc pushq (bad) push (bad) xor pushfq (bad) rex.WRX es jb jl jbe rclb rex.RB (bad) pause pop cmp (bad) sub xchg fwait sub outsl testl or jg enterq and (bad) addl repnz rex.R cmpsb xrelease adc movsb pushq xchg xchg (bad) and xor jmp repnz jrcxz test faddl fcoms adc push mov (bad) ja xchg jnp xchg movsb repz rcll jnp xchg jbe add cmp xchg (bad) xor pushfq insl cwtl shrl andb fist adc (bad) test sbb cwtl sbb rex.RB or movsb sbb pushq xchg rex.XB mov jae movabs (bad) jbe sub out test rclb movsb outsb jmpq rex.WRXB (bad) insl pop pushq mov bnd xchg and jne push (bad) mov xchg movslq pop test jns ds out pushq push mov clc xchg movabs (bad) icebp pop imull mov xchg fimul rex.WB (bad) push iret sahf adc mov jae sbb orl mov sub addr32 rex.WR mov xchg (bad) outsl (bad) xchg mov movabs int push (bad) out (bad) xchg cwtl lret repz cmp rorl push outsb lahf xchg rex.XB and xchg shlb in or rex.RB push rcl out xchg cli ds pop mov lods xor mov cmp xchg mov (bad) fs cmpsl and retq mov scas xchg mov (bad) in adc xor or adc cwtl es xlat clc decl add add jg mov and mov out stos cmp xchg (bad) movabs adc repz xchg mov (bad) lahf icebp rex.RB (bad) rex pop (bad) (bad) sbb hlt movsb xchg (bad) rex.WRB rex.WXB cmpsb xor popfq roll pushq sbb push gs rex.XB xchg or xchg lock scas fs mov jne fiadd imul shlb (bad) jrcxz sub (bad) xchg out leaveq test xchg ror (bad) (bad) push adc mov mov (bad) mov or (bad) (bad) callq (bad) xchg add or (bad) (bad) adc sbbb loope out (bad) sub (bad) push cmc xchg xchg out mov jl (bad) mov (bad) fnstenv outsl rex.RB fwait cmp xlat rex.WRX sbbl and add rex.WX (bad) popfq sbb and lods xchg incl stos xchg leaveq xchg pop clc icebp or mov mov loop lahf jo push outsl sbb pop scas mov retq lahf pop jb sahf (bad) outsb nop sbb fdivp sbb int movslq (bad) (bad) scas rex.RXB cwtl xor xor pop mov mull mov (bad) jns and rorb gs fstpl movsl rex.W (bad) testb jbe rex.RXB xor scas add pop adc jge rex.W and insb (bad) (bad) pop stos push test pushq (bad) ss add in pop rex.WRXB mov (bad) xchg adc (bad) cmp jnp cltd xchg nop sbb addr32 stos out lret cmc (bad) pushq (bad) sbb (bad) push fisubrl retq jl and (bad) sbb push gs (bad) sbb xor (bad) rex.WRXB rex.WX data16 pushfq sub jno out (bad) popfq xor in leaveq push loope sbb pop cmpsl (bad) mov mov or or enterq push (bad) retq int rex.RXB fs push pop (bad) rex.WX push and jp sbb rex.RX xor rcl mov and mov push jae sub lret or ja jne (bad) (bad) add fwait mov (bad) imul gs (bad) movabs sub pop rex.R loope or cmp cmpsb gs loope movabs cltd (bad) enterq sub (bad) mov (bad) or cmp adc (bad) or movabs stc (bad) jnp adc (bad) (bad) push jbe mov std movabs jmp lods rex repz cmc (bad) rex.WXB or sbb pushfq (bad) (bad) test in mov lret imul addr32 sbb rex.WXB ds movsl addr32 jrcxz xchg jg jrcxz xor idivl xchg (bad) (bad) test (bad) mov rorl loop jrcxz sahf fild rex.WRB repnz xchg test sub mov jl push sub negl movabs rex.WX movsl xchg shll fstl pushq sub xchg je mov (bad) xchg xlat stos sub xchg pop shrb ja retq mov fwait mov loope xchg jne (bad) (bad) jg movabs loopne xchg rex.RXB in fcmovnb xchg scas sbb (bad) mov movslq or adc mov xchg mov sub ss rex.WX rex.WXB out (bad) mov fs sub fadds mov add and xchg pop cli adc sbbl xchg mov rex rex.WX roll (bad) movabs pop jae push rex.XB sub mov jge xchg gs (bad) (bad) xchg (bad) movabs and push clc outsb (bad) in xchg test orb and rex.RXB iret sbb sahf sub stos outsl icebp fistp mov (bad) (bad) jo pop jb out mov mov or (bad) test mov xor pushq leaveq (bad) rex.XB (bad) fildll retq nop add fldt data16 xor adc mov clc enterq pop mov (bad) (bad) (bad) xchg adcl js fmull popfq cmpsl in fmuls gs enterq mov lret push cmp mov pop loop lahf lea xchg pushfq stc and xor adc xchg mov insb orb or outsl (bad) sub xor pop (bad) in ds sbb rex rex.WX sbb movabs add js fnstenv pop xchg push (bad) jp cmp xchg mov fwait repz jnp popq xchg xchg cmpsl scas jmp and cwtl pushfq jnp or or rex.R xor adcl sub in rex.WRX (bad) mov (bad) jl xor notb jo cmp pop rex.WXB in (bad) rex.WR nop adc pushfq std and fisubrl lods pop outsl lods nop push (bad) rex.WRX jl pop and test jne sbb (bad) sbbb fistpll mov mov xor pop mov out in fucomp rex.RB rex.W fildl vunpckhps adc rex.WRB mov fisubr clc mov rex.RX (bad) (bad) outsb int pushfq retq mov mov fild (bad) cld data16 cltd outsl retq addr32 pop ja or cmpsl jnp nop lea rex.WRXB sub rex.XB jbe cmpsl xlat ficom (bad) (bad) movabs (bad) pop mov sbb imul (bad) fwait mov (bad) ss adc jl bnd decb xchg and stc (bad) out xchg in cmp mov mov (bad) lahf rex.WRB rex.B xchg out rclb outsb adc (bad) and cs imul fsub cmc retq xor xor mov or imul jo (bad) gs xchg push xchg xor (bad) rorl xchg rex.WXB (bad) sbb callq int jnp setg xor (bad) xor jns xchg cltd rcr test pushfq mov outsb stos int xchg mov (bad) mov (bad) rex.X pushq negl rcll xlat pop push pop fbstp xchg outsb (bad) mov mov or je movsl std cmpsb sub (bad) xchg mov adcb es mov and stc (bad) ds movsb mov addr32 rex.XB jl (bad) mov pushq movl (bad) pop nop xchg stc mov stos jnp mov int mov rex.X adc sub xchg lods (bad) (bad) cmp xchg iret (bad) fwait rex.XB movsb outsb xchg rex.RB xchg pop out icebp adcl shll xchg repnz xchg lods mov push xor pop nop pop xor gs (bad) cmp add sbb xor divb mov sub (bad) mov iret cwtl xor fs (bad) rex.RB mov int add rex.R or fsubs or rex.RB cbtw or loop sbb xchg es xchg sub adc or or jg sahf fwait lret (bad) cmpsb ss lods js sub pop (bad) cmp in cmpsb rex.WRX (bad) scas adc rex.RX movsl xchg mov xor (bad) (bad) jmp push (bad) sbb and xchg out (bad) rex.W or (bad) add (bad) movslq loop in int3 movabs mov (bad) cmc mov sahf xlat imul fcomip mov int retq lret xchg xor insl cmp xlat in je callq out or xchg rex.RXB jb rex.WB rorl sub rex.WXB adc rorl (bad) loop frstor (bad) (bad) and jmpq adc jmp (bad) imul sbb jae ja xchg fsubl fistl jne jrcxz fwait movabs je xor adc (bad) data16 jg rex.RX rolb outsb sub std rex.WRX repnz rex.WR sbb fnstsw mov (bad) xor cli xchg sub sbb test jp jrcxz jmpq fwait and movabs test fs subl or mov or push movslq rex.RX mov pop je xor lods mov xchg sbb rex.WRXB mov (bad) sbb add rex.R (bad) jle cmc cltd movabs (bad) rex pushfq (bad) mov sbb or gs jnp js (bad) cmpsl out icebp addl mov loop xchg jnp ds fistl loopne lret (bad) xchg mov and xchg ja rex.WXB or jl loop xchg jle (bad) insl imull sbb rex.WRXB cs (bad) sbb sub es cmpl jb rex.B repnz add pop xchg and movsl leaveq popfq xchg rex.RX (bad) (bad) fstpl hlt retq scas adc mov fiaddl xchg (bad) xchg jg pushq sbb xchg rex.WRXB outsb jrcxz shrb rex.W rcrl stos rex.WX movabs xchg cli sbb clc test mov int3 (bad) jle (bad) or push (bad) cmpsl in rex.W enterq (bad) xor push scas jl cltd sahf jmp xchg callq jae xchg adc rex.RX repz lret test mov xchg loopne (bad) add xchg je (bad) sub in and lret pop rcrl jp pop repz or ja adc and (bad) jbe rex.W jmp out cli movabs cwtl insl movabs (bad) push rex.WRB clc sbb (bad) jae xchg cs jl movsb jne xchg mov jmp insl (bad) test icebp in out (bad) cwtl push cmp roll mov rex.RXB movabs xchg lahf lea jae or mov rex.XB xchg (bad) adc xchg and or imul mov imul lret xchg mov (bad) (bad) (bad) rex.XB (bad) (bad) lretq fs scas cmp add mov in jg jno adc mov jle test adc sbb xchg (bad) xchg in int movabs cmc orl sysexit xchg rex.X movabs sbb rex.WRX push push scas mov cwtl out mov cltd rex.RXB clc mov xchg insb (bad) adc cmp movsb scas (bad) mov sti stc xchg (bad) ror movsb addb in push divl imul lahf (bad) pop xchg add mov xchg callq outsb xor or jmp (bad) xchg negl cwtl xchg (bad) shrl js es xchg or pop (bad) and cwtl leaveq cmpsb cltd mov rex.RXB push in negl (bad) mov jae xchg push jrcxz xor (bad) mov (bad) movabs rex.X (bad) push jl insb (bad) outsb (bad) xchg jno (bad) stos and scas xchg cmp loop out xchg lea (bad) adc enterq (bad) mov sbbl (bad) movsb xchg out (bad) cmp movsb cld (bad) mov loopne test xor cwtl sahf add ss and retq mov xchg (bad) push xor xor pop clc movsl out xchg jno pop push fs test pop xchg jnp push repz jne mov rex (bad) mov (bad) rex.RB out xchg sub mov mov imul js lock scas (bad) pop movsl xchg in (bad) pop sub (bad) rex.WRXB cmp ds incb pop pop jnp fwait xchg retq mov ficom rex.WX adc pop cli rcll mov jne mov xchg mov rex.WRXB fsts push (bad) jg imul hlt adc loop mov lods or loop sbb mov ja pop jge pushfq test cld lea mov movsl and jrcxz cwtl jbe mov mov sbbl and nop adc push scas movabs mov push xchg or rex (bad) ss popfq xor int scas movabs xchg iret fs loop pop mov mov sahf add mov sub sbb add xchg or sub rex.R push cmp stos xlat imul in xchg loopne fdivrl jge incl xchg cmpl cld data16 jb (bad) push movsb add rcll xor xchg nop adc mov clc repz imul xor add or sbb cmpsl mov nop add (bad) or add and adc jrcxz fwait rex.W pushfq pop (bad) rex.WB fwait mov xchg push test and scas xchg movabs mov jae xor out addr32 or push rclb (bad) mulb (bad) xchg sahf (bad) sar (bad) pop sub rex.WRXB pop rol (bad) mov pop (bad) (bad) (bad) cmp (bad) and data16 cmp lea je,pt cld (bad) pop fmuls or pop jmp mov pop cmp rorb addb negl pop pop int3 sahf iret pushfq xchg or movabs pop and cmp idivb mov jae xorl jmp rex testb mov pop mov sbb sub imul int sbb outsb lods stc add adc (bad) mov push xchg (bad) pop pop push rex.WRB (bad) (bad) (bad) and addr32 mov movabs callq movsl rex.WB cmp movabs adc xor pop cmp jne vpcmpgtb (bad) imul (bad) (bad) jle xor adc lods or ror jbe std xor xlat callq int3 cmp cltd (bad) in fistl rex.RX sbb jae or jae jo out nop lea mov (bad) (bad) (bad) rex.WRXB rex.WRXB rex.WRX (bad) sbb xchg sbb pushfq pop nop sbb and loop xchg rex.R insl xor jge jo jrcxz mov (bad) and mov loopne jg sarb mov (bad) (bad) decb lods enterq jbe (bad) repz std fmulp rex (bad) gs sahf xchg add add pop (bad) icebp (bad) rex.XB mov fidivrl cltd (bad) (bad) add test or notl pop sahf pop push and jbe mulb stos xchg sahf mov jp mov (bad) sub adc xor cmc out pop outsb (bad) xchg mov out loope mov mov sbb dec cmp shrl fwait clc pushq jnp rclb rex.WRX mov fcoms cmp (bad) movsb imul jl in imul or xlat xlat sbbl (bad) jmpq add rex.RX out outsb insl popfq or (bad) callq push retq cmpsb retq mulw mov sub out and or mov and or pop jmp clc jge leaveq (bad) cmpsl xchg je cwtl out push fdivl xchg fstl adc sub fs jne and (bad) (bad) cmp sbb mov xchg (bad) nop (bad) xchg rex.WRXB add movabs insb jb in lret (bad) data16 clc in and callq pop push lods push (bad) out xchg rex.XB mov pop data16 pop (bad) lods lock mov cmpsl sbb ficomp (bad) jae lret lock stos popfq cs pop adc iret test imul (bad) (bad) cmpsl cmpsl loopne in cmp jmp pop sbb cli (bad) sub jg js callq add rex.W fistpl (bad) or (bad) (bad) jae rex.WRXB (bad) mov (bad) popfq stos sahf rorl cmp jge (bad) mul cwtl xchg mov out jmp adc (bad) cmp andb imull pushq rex.WRX rolb fistpl (bad) mov mov (bad) jnp mov mov sbb xchg xor mov xchg std cltd (bad) ds adc movabs xchg shll ss ja xchg jo mov xchg and xchg (bad) xlat sub mov adc rex.WRB imul xlat cmp or fcoml shlb add sbb pushq insl jne nop (bad) idivb (bad) add rex.X rex.RB lock or xchg callq out std xchg push mov or loope movsb (bad) mov (bad) or xchg fisttp mov loopne movsb jrcxz fwait (bad) je stos callq xchg data16 repz nop rorb cld movabs cli xchg fisttpll enterq test lods sahf xlat (bad) lods (bad) mov movsb push cmp sahf or rcr mov loopne xchg out mov (bad) sbb xchg ds je test xchg in retq jno pop cld (bad) (bad) addr32 mov cmp fwait (bad) stos (bad) adc jmp push cmp cmp fildll loop lock fwait cmp mov (bad) pop insb add es ds cmp adcl xchg icebp stos rex.WX loope add (bad) mov add or sarb movsl rcl outsl xchg in pop rex.RXB mov mov and adc shrb add ds push (bad) xchg insb movabs (bad) fs rcrl pop insl (bad) pop xor xchg mov (bad) sub cmp (bad) (bad) mov and cmpsb idiv rcll mov xchg rex.WB fsubs xchg mov shrl jp rex.WX mov cli (bad) cltd jbe and mov out popfq jno cmp push add (bad) pushq lods jnp rex.XB mov mov xchg mov rex.WRXB pop add (bad) rclb repnz movsl jmp sbb frstor or pushfq and stos (bad) rex.WRB rorb mov scas popfq stc fwait sbbb (bad) xor jo (bad) icebp jle (bad) out pushq movabs (bad) popfq jl mov xchg cld (bad) adc stos mov xchg ja mov xor pushq cmp push mov sahf movabs sbb ror sbbl outsl and rex.WX stc xchg rolb not rex.WXB mov and popfq (bad) sbb xchg retq push (bad) mov rex.RX sub movsl imul int3 adc xchg lea insb mov movabs jmp jb out stc sub in mov add xchg mov (bad) (bad) shr mov out adc pop jae (bad) pop and (bad) sahf cmpsl scas in xchg negl cmpb icebp xchg pop ja (bad) lods xlat mov lahf imul xor xchg (bad) out sarb fdivl btr (bad) xchg shll xchg cmp and (bad) or (bad) xchg jno js adc movsl fwait jg fcoml fnstcw sub insl icebp incl (bad) mov loope xchg out in rex.WRXB rex.WX fiaddl or mov repz sti or movabs adc jl rex.RX rex.WRXB fcmove mov xchg callq pop in sbb rex.WRX (bad) adc mov jl push xchg std enterq sbb lret push (bad) xor cmp movslq adc popfq fldt pushq gs xor (bad) pop sub scas mov jno (bad) rex.WXB outsb xor loopne insb out clc mov (bad) cld xchg push jnp loope movslq xchg and xchg sbb (bad) xlat repz adc rex.X test (bad) xchg (bad) or (bad) mov in movabs cli xchg add adc in xchg sbb (bad) mov outsl pop insl sub jne rcll and ja pushq xchg in insb jp adc cltd cmc cwtl add (bad) fildll mov ja test sbb (bad) pushfq popfq lret adc xor push pop sbb push scas leaveq cmpb or sub xchg movabs add adc scas jno loopne retq stos push add xchg sbb lcall adc pop cmpsb mov stc out lret xor add mov xchg movabs orl (bad) xchg test idivb jb cmp xchg ja and mov jl xchg scas (bad) clc push test mov nop jnp adc (bad) subb jno,pt subl (bad) jo xchg sti cmc (bad) jbe rex.RX pop xchg fistp rex.WRB rex.WB mov xchg xchg insl mov mov ror je sahf retq mov lret mov movabs rex.WXB (bad) test bnd rex.WB push cs loop loope sub imul fist mov test (bad) fsubl movslq pushq pushq (bad) mov cltd icebp mov mov rex.R rex.RX cmpsl push jo cmp xchg out (bad) std rex.RXB cmpl (bad) idivb sbb movabs movsb (bad) pop cmc xor pushfq or mov mov clc lods cmp sub mov sub (bad) in mov adc mov (bad) gs retq (bad) (bad) fsubl rex.R es movabs sub orb xchg rex.WX movabs scas scas stos xchg (bad) int add lahf cmp jmpq adc out jp rex.WB popfq retq xchg sbb pushq mov lea xchg test stos lock sub int mov sub nop (bad) (bad) cwtl (bad) test xchg adcl rex.RB xchg ja rcrl (bad) (bad) fucomp rex.WRXB push xchg pop sbb movslq or rex.WXB rex.W adc js rex.WXB sbbl jbe movsl lods sti rex.WRB fwait jg addr32 fstl sbb add xchg retq outsb jne cmp pop pushfq jo and xor nop jg xchg outsl sti sub pushq pop movabs mov mov adc (bad) lock mov sub rex.R xchg rex.WB rex.W movsb xchg push sub xor repz mov je pop (bad) and xchg jg rex.WB xchg or rex.RX or sbb or out (bad) (bad) adc adc cmpsb rex.B jae xchg mov out test jnp loope push rex.WXB adc (bad) fcomi sbbl xchg icebp (bad) xor mov retq ds adc mov fisubr hlt sti je push xor xor pop add iret stc insl xchg pop loop or lahf mov xor out xchg fild retq (bad) loop outsb lret sbb xchg mov or in fldl adc jle cmp xchg mov movsl outsl rex.X sahf data16 loope adc xchg int (bad) iret in cltd outsl mov (bad) and pop repnz (bad) xor xchg cmpsb push (bad) test pop and xchg jg push movslq adcl (bad) popq add adc rex.WXB or xchg gs push xor lock sbbl out mov test xchg sbb cmpsb and cli iret cmpsb jle sbb movabs adc sbb sti xlat sub mov in mov xor test xchg cwtl (bad) push addr32 movabs pop push (bad) (bad) jne (bad) stos pushfq mov mov sti xchg rex.RB rex.WB fist push cmc pop (bad) sub retq enterq xchg rex.WX outsl mov imul lret xorl out mov mov (bad) xchg jge fistpl mov pop (bad) xchg (bad) shrl add (bad) jns rex.WX out mov sub test rex.WXB rex.RB (bad) neg in and cmc movabs jns pop cmp callq (bad) jrcxz mov movslq (bad) in jb xchg sub scas movsb cmpsl lea xlat xchg add cld (bad) jmpq mov jmpq fistpl cmp and test xchg or rex.WX pushfq je out rorb (bad) lea ss gs push movabs test adc (bad) (bad) jne push in xchg (bad) js jb xchg (bad) retq xchg push je add pop mov rex.WRXB pushfq or mov pop jb out (bad) insb fadds rex.WB jg std cmpsl test xchg sub xor xchg add (bad) rex.WRX outsl (bad) mov leaveq movabs or std sbb pop loopne lea test cltd cmc xchg lods adc jmp sar mov cltd mov jne xchg imul rex.WRB flds fcoms (bad) pop mov xchg xlat callq jle xchg movsl jrcxz scas cmp and hlt clc xchg fidivr xchg fs test and jle (bad) movsb xchg retq pop or jl push mov inc ds push xchg lock sahf fisttp pushq test test imul sbb rcl movsl sar ss push pushfq pop mov (bad) movabs sub pushfq in clc (bad) out scas add (bad) push lods rclb std in mov cld xchg push sub movabs ja sbb jmpq xchg (bad) loope pop rex.WRX ss mov (bad) (bad) sbb cmp test imul mov int push cmp and (bad) jns mov in xchg and pop sub adc jrcxz imul adcb cmp xchg and jmpq xchg mov (bad) ds sbb mov pop xchg hlt (bad) pop (bad) or or pushfq nop sarb rex.X sahf (bad) data16 js cwtl push outsl add xchg mov (bad) je in xchg in mov movsb std loope cwtl out clc or cmpsl in cmpsl jnp pop subl mov jmpq add or xorl xchg mov nop cmc (bad) test (bad) xchg and xor (bad) insl (bad) push repz sahf fidivr (bad) cltd sbb or rcll test xchg out (bad) shll outsl cmpsb push or int3 xchg retq leaveq (bad) (bad) pop cs sahf adc jl jne sahf push out fildl xchg cmp rex.WX stc jbe mov mov (bad) xchg rex jp lods add sbb scas mull cmp push lock ds xchg (bad) jbe push sub xchg out cltd cmpsb mov or mov mov rex.WXB pushfq enterq sahf pop (bad) xchg push imul cs mov cmp addr32 and mov mov add enterq (bad) gs movabs push pop fsub stc add js (bad) xchg test stos (bad) jbe ljmp add adc fcomp in or mov (bad) mov rex.WRX xor xor test fwait rex.W stos pop jo (bad) xchg fadd (bad) rex.R cld movsb add cmc mov adcl cltd not subb jle xor jbe mov shr mov sti sbb (bad) out pop negl js outsl (bad) xchg mov (bad) rex.R (bad) gs mov or (bad) in ds test mov test mov rclb lock mov int xchg adcl jmp jo jb test jae mov jno xor stos cmpsl (bad) (bad) sbb sbb rex.WX xchg mov sahf (bad) andl and (bad) xchg xchg sub pop sub (bad) scas adc pop movabs or (bad) (bad) add pop add test (bad) (bad) pop fwait and sbb pop push (bad) xchg push mov pushq xor xchg addr32 sar out xchg fsubp test cmp jle jns push mov rex.W pop insl mov or jae rolb ficom sbb mov xchg test xchg rex.XB (bad) pushq xchg jge outsl rex.W imul cmp std xchg mov loope sahf (bad) push jns stos jge xchg add sbb xchg ficoml or std hlt mov pop out mov xchg (bad) add sbb clc in sbb push pop or xor fmulp fldl2e xchg mov enterq xor jne push rex.WRXB rex.WR loop int3 (bad) xor fdivrs xor xchg cmpsb or xchg test sbb (bad) mov mov mov imul out xor out mov loope xor rex.WRX (bad) pop xor cwtl movslq lods xchg loopne push push popfq jo (bad) sahf imul negl sbb movabs push cwtl mov lahf (bad) hlt xchg jns cltd push and outsl movsl (bad) fcompl mov jne (bad) fstpl (bad) shr cwtl jo icebp ja rex.RB pushq or xchg (bad) xchg add mov xchg (bad) xchg sub (bad) rex.WX or (bad) movabs iret flds mov fs xlat (bad) fadds rex.XB rolb (bad) fiadd insl jb (bad) fstl rex.WX pushfq loop (bad) pushq movsb out ja pop push sub xchg test xchg cmpsb (bad) fnsave (bad) and sbb jge rex.WX insl clc cwtl sar cwtl (bad) mov loopne push rol xchg xchg (bad) xchg pinsrw push movsb jae lret lock xchg out rex xchg stos notb pushfq (bad) icebp xor xchg adcl xchg mov xor rex.WRX push pop cmc cwtl movabs out ds rex.WB cmpsl mov xchg out mov cmpsl push (bad) (bad) movq xchg movabs (bad) xchg mov sbb fisttpll xchg xor jne xchg icebp insl jg fmull js sub (bad) mov xchg add (bad) notl pushq cld retq rex.W xchg add mov xchg fwait (bad) js imul jg jp cmp add sahf mov jge repnz es jle mov sahf rex.RX in in and jno (bad) xor xchg fcoms callq nop outsb sbb movsb shll lret and jmp xchg loopne cmc cmp mov fdivs xchg push rex.WRX lret shlb (bad) (bad) outsb (bad) mov xchg mov add clc jmp pop xchg xchg push pop (bad) and or xchg flds cmpsb (bad) fsubrl data16 cmp xchg xor cmp xchg rcll (bad) mov movb lea and xchg std and fnsave popfq stc push (bad) out outsl out push fsubrl movabs pop in (bad) pushfq push shlb cmp jl xchg movd (bad) test testb int3 sahf or or (bad) mov in pushfq jle movabs lret fsts gs rex.WRX hlt rex.WR je imul xchg adc (bad) ficoml or (bad) jno pushq mov (bad) sbb or (bad) push js (bad) adc mov rex.WRXB cs imul (bad) fimull xchg and movabs (bad) cmp jae lods (bad) lea (bad) sub (bad) xlat cmpsl popfq (bad) pushq int3 (bad) addr32 test or pop xchg rex.RXB rex.WRB rex.R mov add test roll cwtl (bad) xlat mov decb xchg cli cltd lahf fildl fs scas mov (bad) (bad) nop xchg (bad) xchg fwait sub rex.WRXB lock cltd rex.WB xchg sti mov xor mov int xor add xchg out (bad) adc mov (bad) xchg fxtract es (bad) or in pushq add (bad) (bad) je fsubr and cmc mov clc xor cmpsl jbe mov lea mov mov in rolb or or stos stc pop pushq mov rex.RXB xchg (bad) in nop outsl out push data16 rex.WRB fs movsl ja sbb pushq cld negl cmp out rcll int push nop or out rex.WRXB movslq enterq mov sbb jrcxz and cmp add cwtl mov and mov movabs (bad) rex.WRX retq add fcomip xchg mov or jo xchg pop mov outsl (bad) (bad) insl imul jno push jne movabs sbb (bad) sbb sbb sub in mov es pop out sub and cwtl in (bad) jnp (bad) (bad) sahf int (bad) fisubr je pop data16 jne cmp xchg (bad) (bad) xor (bad) (bad) adc xchg sbb and mov cld sub cmc movabs retq pop xchg mov jne out sbb test sbb (bad) mov rex.WR (bad) xor push clc mov (bad) insb xchg or fs (bad) out rex.WRX (bad) movsl (bad) (bad) (bad) xchg pop je mov (bad) xchg xchg out (bad) (bad) xchg std cmpsb or insb xchg popfq out and loop (bad) (bad) loopne in xchg scas (bad) mov jle or adc (bad) xchg jo fsubrl lea xchg sarl rex.WXB (bad) sub sub add cmpsb pop sbb pop and add lret and fdivrs movabs mov (bad) stos movsl mov cwtl sbb (bad) rex.RX xchg sub push scas (bad) jbe rex.WB (bad) push and int3 icebp (bad) rcl (bad) (bad) push jne (bad) sbb shrb xchg mov sub hlt loopne mov cmp (bad) (bad) and (bad) sbb jnp mov mov rex.XB (bad) push (bad) in xchg or adc and (bad) fild adc sbbb loope mov popfq xor (bad) sahf test jns cltd jle (bad) xchg (bad) pushq movabs outsb cld or sub xchg cs fwait sahf in retq rex.RB mov callq jnp loope adc fwait xor sub (bad) push adc movabs retq xchg (bad) pushq movsl shrb xchg movsl outsb leaveq pop int mov stos rex.X sbb (bad) adc jmp pop xor divps xchg frstor scas push adc jmp jbe cmpsb fcmovnu sahf idiv test lahf xchg push jae xchg fnsave cs cli xchg rex.WRB sbb retq movsl (bad) and cmpsl add mov rex.W (bad) xchg loop lock xchg jp jno or sarl (bad) fbstp xchg js rex.X lret sbb cmp xchg xor rex.WRXB (bad) cwtl imul pushq (bad) rex.WX rex.WRXB cs and push (bad) mov and xchg push in cmc push xor sbb sti cmp jmp mov test push sub fildl ss push pushfq icebp pushfq xchg rex.XB cmp mov xor jl mov loopne and mov stc xchg cmp and outsb pushfq pop rex.WR adc nop callq (bad) scas lret xchg sub (bad) (bad) xor rex xchg rex.RB lock (bad) icebp and jmp (bad) mov push xchg cmp xchg lret fstpl cwtl clc mov movsb rex.RXB mov outsb js push pushq jg adc out add movabs mov (bad) (bad) cmp leaveq push cmp (bad) ficom rex.W rex.RXB mov jns (bad) test xchg rorl jl rex.WRX in mov (bad) rex.WR fimul fmul (bad) mov (bad) (bad) (bad) sbb icebp cmpsb ficom rex.WX mov and out mov adc (bad) shrb rex.R (bad) jg adc sub and mov mov outsb (bad) lock imul sahf es xchg (bad) jb andl rex.RX retq sahf insb outsl popfq mov fmuls rclb movsl mov test (bad) xor rex.WRXB mov (bad) sub and cwtl pop (bad) mov (bad) movabs pop jo jl fs movsb nop (bad) (bad) mov add cwtl rex lea (bad) sub and xchg popfq test rex.X fcompl (bad) test test rex.WXB cs mov callq (bad) comiss scas rex.W rex.RX movabs movslq xchg cmpl cmovge movslq (bad) push test jno or (bad) std nop adc retq mov je add mov sbb retq imul or (bad) xlat add data16 and xchg out or and idivb mov xchg enterq sbb sbb xchg mov cmp rcl mov rex.WXB xchg adc lods (bad) ds movslq fcomi rex.R (bad) in xchg (bad) loope mov adc mov rex.X push stc xor xchg in mov and (bad) rcrb mov or xorl xchg movabs add jl xchg cmpsl std mul add and enterq xchg lahf cmpsl (bad) andl jo (bad) jmp mov cwtl mov lret and (bad) orl add mov lea (bad) imul adc nop push add (bad) (bad) jg movabs nop cld sbb or int sahf pop add mov jp repz cmp cwtl retq cmp callq mov cmc xchg sti mul add jp lea test (bad) mov sub (bad) add jp retq adc jmp orl movsl or rex.B adc sbb int adc (bad) (bad) xor fdiv lods rcll int clc mov adc rex.B lret (bad) add rcrb (bad) (bad) xchg jb mov and fcoms rex.WXB xlat or ss sub nopl and xor and sahf stos add cmpsb xchg xchg fisub and xor (bad) loop jae (bad) jno xchg rex.WR ficoml cmpsb movsl (bad) pop xchg rex.RX repz repnz adcb scas push (bad) jg cmp xor pop fsub (bad) (bad) fwait jge mov (bad) fild xchg insl shrb (bad) sub jp fmull fistpl rex.WRB scas jg (bad) (bad) (bad) (bad) in movabs xchg andl (bad) (bad) sub or (bad) jp jnp jg push stos xchg and xchg fwait pushfq (bad) (bad) sti fwait or cmp (bad) cld in pushfq lods xchg movsb cwtl push rex.RB xor xchg movslq (bad) jle mov (bad) fstpt std (bad) mov cmpsb push (bad) sub nop fwait sbb sahf je imul mov ror rex xchg movabs (bad) cs and outsl sbb movabs mov rex.X ds movsb stos xchg scas repz fwait sub callq cli (bad) cwtl fucomip rex.WR loop nop push (bad) rex.RX mov (bad) lret mov cwtl push js adc xchg stos pop sub xchg rex.B rex.WRB rex.WXB rex.R (bad) xchg xchg mov or jae sub (bad) add mov mov fs scas imul xorb sbb mov ds xor pop add pushq xchg rex.X cwtl idivl in (bad) adc callq jnp jne xchg lock mov jno jge sbb mov lret (bad) mov pop xchg (bad) fiaddl adc (bad) ror movabs xchg outsl cmp rcll jnp xchg lret je or xchg repnz movabs or xchg out rex.X sub jrcxz xchg sub retq push (bad) popfq shll pop fdiv pop (bad) idivl (bad) rex.RXB fidivl (bad) movsb mov (bad) enterq icebp gs (bad) movabs out xchg rex.WB cli pop andl (bad) xchg sub mov cwtl and cld hlt (bad) pushq movsl stos push sahf insb in mov (bad) in and shll or (bad) movslq cmp mov movsb out lahf retq test addr32 mov xchg sbb adc xchg (bad) fs jno cmp cmp pop or and clc not test callq mov rex.WX in iret (bad) fsts xlat loope (bad) imulb xchg fxam mov mov and psrad rex.WRX rex.RB bnd (bad) jg jb jns pop adc adc mov cmp cmp adc pushfq xor jp (bad) (bad) out mov xchg rex.WR ficom fcoml push mov rex.WRXB in ss negl push xor sub ss jle pushfq popfq adc jne (bad) (bad) mov sub enterq lea sbb push ds loopne fcompl leaveq sahf rex.W rorb std fucom jge xchg popfq (bad) rex.WR (bad) (bad) xor mov pop callq xor jne movabs cmp (bad) mov mov fwait (bad) sbb mov test adc mov jle adc xorl pop xchg (bad) pop xor cmp cld imul imul (bad) and cli adc mov cmp (bad) lods cmpsl (bad) (bad) push retq in push lret jge int3 (bad) ja (bad) mov movslq (bad) imul adc mov rex.RX mov (bad) vaddsd callq cli retq insl cs jo xor jae sahf je (bad) sahf out movsl rcrl scas (bad) rex.WR mov rex.WX loope xchg pushq or adc and iret insb (bad) fs jg lea rex.WXB mov stc loop (bad) rex cmpsb and nop adc retq mov rcrl or add movabs (bad) fwait leaveq xchg xlat (bad) sbb sarb sbb (bad) mov pushq stos jbe movabs insl frstor (bad) in and (bad) je adc or fcoml adc rex.RX lea (bad) jmp push fprem xor sahf cmpl or cmp jne pop out stos test lock jmp scas (bad) enterq loopne rex.RX retq push icebp mov ror popfq xor rex.WXB addr32 scas and mov lret xor gs (bad) xchg cwtl jbe in insb nop (bad) rcl imul popfq rex.WR retq sub lret jge xchg repz (bad) or mov (bad) push test rcrb xor xor rex.RB mov mov rclb xchg mov mov xor imul push mov test (bad) pushq callq data16 rex.W enterq (bad) pushfq pushq and (bad) (bad) cmp pushq xchg rex.WX (bad) cmp mov fs or lods (bad) (bad) es mov (bad) mov out clc rex.RB (bad) sbb mov (bad) rex.WR sti push (bad) (bad) mov (bad) pop xchg push out je jge iret mov add rex.WRXB xchg jmp pop mov sarb xchg push and push rex.WRXB mov and sub jno mov (bad) jg sbb cmpsb push push imul mov pop mov imul outsl div add xchg cmp xor pop cltd pop mov shr shl (bad) movsb movabs add stos hlt (bad) or push adc xchg fwait mov mov and leaveq (bad) (bad) pop cld mov cli (bad) repz in mov jnp outsb ja xchg lahf loop cli xlat or (bad) test xchg pushq adcb xlat mov js (bad) rex.XB (bad) cmc (bad) mov (bad) lcall (bad) iret adcl notl sub pxor sbb mov fbld rex.R push movabs loope (bad) (bad) je (bad) mov jnp jae add movabs jne push xor and jnp fcmovne test mov insb leaveq xchg (bad) rex.WRXB (bad) or divl rcll rex.RX and (bad) idiv push (bad) xchg and (bad) ja xor adcb (bad) jbe fwait jge sbb rex.WRB stos xchg (bad) mov xchg (bad) (bad) lock xchg sub mov out imul (bad) jmp cs jnp rex.WXB cmp pushfq notb mov iret cmpsb (bad) shrb pop sahf (bad) pop xlat sub rex.RXB and or iret (bad) mov mov jbe stos stos (bad) mov cld sbb pop xor xchg xor mov and pushfq rex.RX lock (bad) jmpq (bad) mov mov mov xchg (bad) cwtl pushq cwtl (bad) xchg lret xchg add add callq xchg cmpsb repnz test jb movsl and xor ja jp sub xchg sbb stos xor mov loope sub cmp clc outsb mov addr32 callq xchg cmp cmpl adc stc pushq and xchg fcoms mov jp cld push sbb sub rep sbb jg ss mov sbb nop mov fdivrp rcll repnz ss es cmp and fsts (bad) adc (bad) sahf (bad) fcompl mull sub pushfq rex.R rex.WB mov sub sub loopne ss (bad) xchg rex mov jb cwtl test (bad) xchg xchg loop movsl repz pushfq jg xchg (bad) outsl and jl xchg out loope movsb loopne xchg sub iret mov cli and retq movsb xchg rex.X push out test fwait push cmp jmp popfq mov gs or xchg cld imulb mov (bad) xchg je,pt movabs rex.X fdivr pushfq sub movabs lods and (bad) addr32 xchg mov mov xchg (bad) xor sti mov mov and (bad) mov je sub nop popfq lea add sbb out (bad) lahf cmpsl (bad) nop xchg xbeginq cmp ss movabs fidivl movabs push retq mov adc xchg cwtl jbe jl (bad) loope mov es (bad) lock xchg sub mov (bad) rex.RB pop xchg sbb jb mov xorb out nop loope callq rorl fbstp (bad) cld (bad) out jns cmp bnd sbbb movabs retq pushfq jge (bad) outsl movabs sbb lea fs and xor (bad) jp xchg movabs out add out (bad) pop or je (bad) sub adc or xor rex.WB rex.WX pop (bad) cmp in (bad) je outsb (bad) stos icebp add movabs lret mov add rex.RX (bad) retq or xor (bad) mov retq movabs rex.WRXB (bad) cwtl (bad) cld adc movsb outsl movl callq lahf push rex.WRXB jl scas leaveq pop (bad) sub jl rex.WB loopne cmpsb pushq jb mov mov (bad) add mov pop xchg fmuls (bad) pop (bad) xchg xchg xor sbb rex.XB (bad) fnstenv and test xchg mov cmc adc or mov xchg xchg negl jbe addl and xchg rclb mov jmp stc andl jbe pop (bad) in shr test xor (bad) pop sbb fwait sahf and stos xor popq rex.B jbe rex.WRB (bad) jmpq and sub callq cmpsb in push jmpq sahf xchg xor hlt mov rex.RX pushq adc and (bad) lea and movabs cmp pop jb lea and rex.W rex.XB test (bad) or loopne leaveq adc in xchg movabs stc xchg mov mov out hlt mov xchg sub shr (bad) sbb xchg retq pop lods lret (bad) (bad) callq (bad) sbb pushq addr32 test (bad) hlt mov mov mov xchg ficomp sub and jb mov xchg jbe clc and movslq mov movabs insl rex.WX cs int3 test push iret out notl outsb add stc notb insl retq mov lods xchg (bad) out jae,pn sarq rex mov scas mov (bad) stos cmp jnp mov xchg or (bad) sahf std xchg hlt cmp adc rex.B rex fimul rex.WRB xchg insb (bad) mov add pop fwait adc je data16 rex.WXB loopne rex.WRB test test xchg (bad) hlt mov xor retq (bad) imul lods shll (bad) fisubrl mov cmp or repnz (bad) pop xchg callq mov rex.WX push sub lock xchg (bad) (bad) retq stos movabs rex.WB jae cmp in mov jmp (bad) (bad) sti in cwtl sub pop (bad) addr32 rex.WR movb and rex.R sbb repz outsl xchg or pushq rex.WX (bad) getsec data16 or outsb mov nop js push mov ja jmpq orl lret (bad) rex xchg fldl rex.W callq addl jb jg pop xor mov (bad) xor and imul rex.WRX xchg adc rex.W cmp fistpl cltd lea xor outsb add mov push gs xchg pop icebp lahf mov fwait stos or ja xchg xor orl cmp addr32 jae adc std xlat jne adc pop xchg ss adc rclb cmp xchg mov cmpsb loope sbb enterq (bad) jg decb in xchg loopne fadds (bad) lods lea in fwait clc or cmpl pop xchg movsl adc rex.R sarb sti jg xchg (bad) cwtl test retq xchg ficomp sub pop jle (bad) rex.RXB adc jne (bad) jno xchg xchg sahf in sti fnsave (bad) mulb (bad) movsl mov (bad) mov pushfq test callq sub push lea xchg lock fs ss (bad) cwtl lods jo in mov mov rex.WXB or pop (bad) shrb testl (bad) stc adc jg test xchg jnp (bad) push pushq (bad) xor enterq jns sahf rex.WRXB (bad) jbe es notl adc adc mov or or mov lret outsl cmp (bad) xchg sbb or and xlat imul xchg rex.R vhaddpd insb sahf outsl stos rex.W cmp pop js jnp add add xlat add (bad) (bad) sbb jae rex.WB sahf push insb jmp sbb or pop cwtl (bad) outsb lahf nop smsw xor cmpsl in jbe cltd pop mov sti (bad) jbe or xor rex.RXB pushq ja pop (bad) adc push xchg (bad) or stc or imul add addr32 adc xchg push mov mov lock js (bad) (bad) cmpsl mov xor sbb adc rex.WB xor (bad) add push (bad) adc fsts movslq incb xchg sub rex.RB ds in insb pop sti rex.X rex.XB repz (bad) sahf push jmpq mov (bad) sbb cmp adc xchg jp rex pop rex.WR xchg data16 outsb out fdivl sahf retq jp (bad) and xchg adc adc jrcxz popfq pop sahf (bad) rex.W and (bad) cmpsl rex.WRXB jmp hlt add mov mov sub xchg pop (bad) lea adc push mov sub mov lahf xchg pushq jg movsb cwtl out ja pushq mov repnz rex.XB rex.WRB add enterq push movups jp divb (bad) cmp jno xchg addl rex.RX cwtl or jle cmp scas retq pop mov movsb xchg pop fmul rorl (bad) out xchg loop test and sbb mov rex.XB rex.R int3 mov movabs mov sbb (bad) xorb (bad) jmp and cmp popfq mov lret retq je (bad) jbe pop pop decl sti mov out and mov jbe cmpsb insb and add jl sbb (bad) shl out mov (bad) pushq (bad) clts adc sbb retq loope test scas and cmpsl mov add (bad) (bad) jo pop in (bad) imul and clc cwtl jg scas pop push (bad) nop notb cmp movabs mov xchg sbb and (bad) jo jne icebp pop sbbl enterq movabs and push mov rex.RX gs mov (bad) insb pmuludq ud1 callq sarb sbb pop outsb cltd cmp (bad) int3 xlat insl sub outsb jge mov mov movsl push (bad) jmpq (bad) lret movabs or iret (bad) jp sbb xor (bad) xchg shr sbb loopne xchg (bad) fs xor rex.RX test (bad) mov js (bad) add xchg (bad) pop scas and or or cmp pushfq mov pushfq (bad) sub in xchg adc sub xchg mov and mov rex.RXB jae retq rex.WB rex.WXB movsl andl fwait xchg movabs fcoml push outsb fstl rex.WXB rex.WRB ficom rex.X mov xchg or sbb adc movabs xchg pop (bad) rex.WRX test jl jrcxz sbb test mov sub sub and retq test xchg push jg sbb rex.WRX xorb nop pop xchg fsubrs jno push add loop rorb mov (bad) xchg rex (bad) jnp mov shl xchg cltd push xchg in and rex.WXB cmp xchg (bad) stc lahf and pop push rex.XB xor cmp sbb loope xchg (bad) (bad) (bad) in pop outsl xchg sbb jne push fstps jmpq imul hlt mov loope cwtl or sub stos xchg rex.RX xor movabs xchg push je adc cmpl es (bad) pushfq fdiv mov sub jmpq xchg leaveq mov lock (bad) push xor pop cld test mov cmp (bad) xchg lret (bad) loopne pop mov or outsl (bad) js adc xor out mov movsb mov or leaveq jnp ja push test cmp lret (bad) xchg (bad) push and push and (bad) insb js rex.RX jge pushq add cmp lret xor jb cmpsl rex.WRX mov cmpsb xchg (bad) xchg pop cmp (bad) xchg lods repz mov rex.WXB sub popfq rcll adc sbb (bad) stc movslq fwait xchg xor jns rex insb loope adc or nop cwtl mov out js (bad) rex.R movabs pop (bad) pop rex.W (bad) loopne pop mov nop xor mov jno in xchg rex.WRX jne pop pop (bad) mov mov out movsl push and mov je sbb add sub rex.WR sub int xor lahf (bad) rex.RX in pop sbb fcomp adc leaveq movslq popfq adc jle jae xlat push mov rcll in je,pt (bad) adc neg xchg jg cmpsl cmp push cmp xlat mov imul rex.WXB pushfq jb sub lret pushq ffree sarl xchg rex.R add or (bad) mov test rex.XB movslq sbbl nop (bad) (bad) fisubrl loope fdivs movabs mov pushfq or pop ja mov imul mov xchg outsb retq mov xchg and cmp gs jne pushfq mov (bad) (bad) insb and or mov adc sbb fbld adc in (bad) loop (bad) mulb popfq imul in movsl rex.B (bad) mov or add (bad) xchg and fldl subl data16 mov adcb (bad) xchg rex rex.WX fmulp in lods xor adc adc mov jle xchg test scas cwtl add adc jmp mov rex.WRXB movabs xchg fdivrl in cmp (bad) test jmpq rex.W retq je imul rex.RXB ja lret sub out jge sbb jg leaveq pushq push sub hlt jns movabs mov imul rex.WX cltd hlt sub jmp (bad) xor js (bad) sarb movslq sbb scas xchg mov ja loop (bad) (bad) adc xchg outsl push mov add (bad) rex.XB jne fistl xchg jle cli xor icebp xor mov (bad) rex.WRX fmull fwait movabs xor xor (bad) xchg insl int3 (bad) fdivrl xchg rclb (bad) je jl idivl cmpsb in (bad) (bad) sub clc add xchg clc mov (bad) sbb addr32 cwtl xchg clc (bad) mov jb in (bad) adc loopne (bad) xchg sbb or sub js imul gs insl xchg rex.RX repz pop (bad) fldcw rex.WRX rex.WB jmp movabs movabs shrb xchg movabs sub cs mov (bad) xchg mov sbb test hlt (bad) test cwtl pushfq lret rex.B rex.R xchg sahf fucomp loopne or mov pushq xchg mov cmp jnp mov cmpsb rex.W movsb sbb sub jns (bad) es repnz stos (bad) jae add rex rex.RXB jne and movsb lods gs cmc add ja xchg xor xchg scas cmp (bad) (bad) and xchg rex.WB cmpl test leaveq idivl xchg (bad) rex.WR xchg cmpsb sub in outsl imul movsb adc mov or sub rex.X pushfq lods cs cmp pop or ljmp xchg push mov sbb lock xor movslq movsl mov nop mov xchg (bad) mov jrcxz cmp jne pop sbbl popfq add jrcxz mov (bad) xchg and mov xchg (bad) push cwtl and std out sahf sbb fsin mov pop xchg adc std xor and mov mov rex.WRXB rex.WRB fcoml outsl mov std scas xchg jrcxz in jg (bad) incb sub adc iret and fwait js adcl and movabs mov xchg add (bad) sbb rex.WXB ja mov scas (bad) xchg jae add shrb iret add push xor adc xchg or (bad) stos (bad) repz cld orl (bad) rex xchg nop pop test sahf rcll sbb imul cmc mov (bad) cmp cmp pushq rex.WX shl icebp (bad) decb (bad) (bad) retq ja mov ja fstl cwtl or retq (bad) xchg fistpll (bad) and repz mov out (bad) sub xchg jne,pn (bad) loop (bad) xchg fisubrl jle mov xchg jno loope and mull out jae (bad) movabs cmp mov and cmc xchg mov jrcxz mov adc jle and loope pop scas repz out pop repnz xchg fcomps callq in fildl xchg adc lret (bad) cmp mov cli (bad) or xchg (bad) (bad) movabs lods sahf and outsb mov rex.WXB rex.RB (bad) fnstsw pop mov sbb add xlat loop imul (bad) cmp add jnp xor test movslq scas mov mov (bad) sahf jnp mov fldcw in lea add rex.WB adc outsb movsb rex.WR or mov in cwtl mov rex.WX shrl icebp (bad) and mov jrcxz mov cmpsl idivl rex.X (bad) jg addr32 rex.WRXB (bad) mov (bad) pushfq (bad) sbb fstps or push stc js rex.XB lock (bad) sbb in mov negl mov fs es lods rol rex.B rex.WRXB (bad) scas xchg (bad) outsl jge mov mov xchg cld fisub cmp jnp jnp sbb rcr (bad) rclb fadds mov out scas sub lock insl movsl gs addl (bad) int xchg mov mov outsb mov jle notl in add jrcxz add or (bad) idivl fcompl rclb xchg jne (bad) clc xchg out sub xchg mov adc xchg sub rex.R es xor cwtl (bad) adc rex.WRXB fdivrp test rcll adc cwtl xchg adc cmp in xchg xchg pop jmp jmpq (bad) xchg rex.RB pop xor cmp movabs or pushq adc sbb cmpsb movabs je fbld cmp or push adc sub lahf mov fist imul sub (bad) (bad) xor es lret jrcxz push movabs xchg rex.RXB addr32 and js pop xchg jl cmpsb movabs sbb rex.WX xchg addr32 fs cmp xchg push xchg mov loopne shrl xor (bad) xor (bad) adc and sbbb pop pop (bad) or xchg cmp fldcw divl (bad) pushq (bad) xchg rex.WRXB mov pushfq fist out (bad) mov or pop rex.W fcomps popfq cmp and cmc (bad) mov and int int3 cmp cmp jle jae sti lret rex sbb (bad) mov jno mov cwtl (bad) mov xor ds std in jle sub jge jge xor retq xchg mov rex adc loopne mov fldenv cmp (bad) gs ss mov (bad) rex.WXB xchg fdivrs test jp rex insl (bad) cltd xchg jrcxz jne scas add sub sahf fnstsw pop adc in (bad) adc test mov outsb xchg in mov (bad) (bad) jb sbb jae (bad) (bad) xor xchg (bad) (bad) cmp rex.R xchg adc sahf (bad) in mov ja (bad) rex.RX pop jrcxz movabs addr32 movsl mov or (bad) rex.R xchg loop or loope mov sbb and jae mov mov loope pushq pop mov jl push xchg xor (bad) fmull and sub nop add test jmp mov (bad) rorl sbb data16 pop ds xchg test (bad) (bad) jo and rex.RB xchg xor pop movabs mov pushq cmp jb mov ss fs push (bad) adc test movabs rex.WXB (bad) data16 sahf mov (bad) lea test rex.XB cmpsl mov andl (bad) in shlb sbb pushq (bad) (bad) loop jle jne (bad) (bad) scas rex.WRXB (bad) mov adcb (bad) scas mov gs scas mov jrcxz callq sti rex.RXB test xchg out push mov imull pushq (bad) out add cltd loop jmpq xchg (bad) mov sbb ss lods movsb callq adc xchg (bad) xor movabs rex.RX repz movabs jo xchg xchg jno in lret outsl push jmp (bad) xchg rex.X mov (bad) jle xor lret cwtl in (bad) pop movabs cmp cmpsl xchg lea loop cmp es nop pop cmpsb adcl pop fistl movabs mull fadds movsb rex.WX out std lods mov movabs scas cs mov sbb cmp cld (bad) je xchg fdivrs adc adcb jb jg scas rcrb xchg std mov sub push xchg and rex.WRB rex.WB (bad) or (bad) movsl out divb lcall mov pushq movabs xchg imull shlb xchg rex.W gs xchg (bad) xor (bad) div or xchg adc jmpq xchg mov push rex.RX push in jns movabs imul rex cs xchg add out sub fs lea sub insl jno rex.R xor cltd clc cmp shlb xor mov cmp outsl fcmovnbe fwait test jbe (bad) jmpq xchg cmp or push fadd and (bad) xchg xchg fildll (bad) xchg sbb xchg xchg test pop fistl sbb jmp fs push pop insl lret pop movsb or sub pop xchg loopne jno and cld stc xchg mov mov (bad) in movabs cld mov xlat mov repz leaveq cmp rclb test xchg mov sub jb scas jge lret cltd fsubrl (bad) (bad) out notl sarb lods test (bad) clc lea push (bad) xor xor add jbe mov xchg lret mov cwtl mul sbb out cltd jno xchg leaveq push jmpq cmpsb (bad) movabs xor (bad) enterq rex.W imul (bad) pushq push jbe loopne shrl rex.RX vpmovsxbw mov fucom or or or mov iret movabs push (bad) rex.WXB xlat fbld (bad) cmpsl xor xchg and jge and add or scas stc rex.WR or lea jo lahf and je (bad) push retq rcr lcall in enterq jrcxz test pushq out lret retq jg jnp outsb push (bad) cltd xchg cmpsb fisub movabs jns jmpq (bad) test (bad) (bad) stos ja fwait (bad) jmpq in pop push mov mov rex.R or ds sub repz cmp addr32 pop cmpsb imul push (bad) lahf (bad) cmp jrcxz and imul (bad) adc (bad) rex rex.R or (bad) adc pop mov sub jnp movl sbb (bad) (bad) faddp movabs sti add jbe pop movsb jl sbb (bad) sbb mov lret pop je push jnp adc out adc out test (bad) (bad) (bad) lock mov adc ja fst mov fld pushq (bad) (bad) out rex.WXB (bad) callq rex.RXB movabs xlat insl mov fadd sub rcrl rex fsts sbb cmp (bad) xchg pop xchg cmpsb or (bad) xchg in stc vmwrite stos fnop add mov or sbb out (bad) adc mov (bad) mov xchg ds rex.WB jno xlat xchg fcmovne fdivp rcrl mov je pushfq js and lea fdivs jne xchg fs cmp adcb leaveq mov mov mov movslq mov pop mov (bad) (bad) retq rex sbb sub (bad) rex.RX movabs movabs rex.WRB sub (bad) movabs sub jne (bad) jg fbld outsb rex.RB (bad) fs scas (bad) sub retq rex.RX iret mov scas test xchg insl sbb jbe cld (bad) jrcxz jl xor fs fsubr cli mov sbb (bad) pop cs movzwl push lahf rex.R roll pop or hlt popfq insb cmp (bad) xchg (bad) add jg cmp (bad) cmp rex.X (bad) xchg push (bad) (bad) (bad) (bad) repz or xchg adc ficomp xchg lret add loop stos (bad) push fwait pushq mov rex.RXB rex.RX (bad) rex.WB repz rex.WRB lret adc imul adc pop jbe push shr popfq sub (bad) stos rex.WB cmp insb xchg sub sahf rclb jbe cmp je lret or mov cwtl (bad) shlb (bad) roll xchg add (bad) stos out fnstcw xor in jns (bad) jno xchg jno or rex.WRXB and (bad) (bad) mov adc retq cmp (bad) in mov and gs js rcrl (bad) adc addr32 sub xchg jg add pushq xchg pop mov sbb jl rex.RX movabs (bad) cwtl clc (bad) mov push stos jmpq leaveq mov sub jns xchg movslq mov ficoml loope mov cwtl (bad) and callq sti repz cmp stos lahf decb ds (bad) fidivr push cmp fsub mov xchg (bad) jbe (bad) mov xchg xchg mov test cmp (bad) imul seta rex.RXB sub mov xor out sbb (bad) and (bad) adc pushfq cmpsb test push push addr32 xor orb idiv std rex.WRXB xchg sub rcl mov mov mov negb subl xchg cld insb cmp ficomp mov (bad) xor rex.WRX push xor push sahf pushq out callq repnz stos xchg (bad) out rex.X test mov jb int3 stos je xchg adc rex.W pop push jmpq or (bad) adc sbbl movslq lods sahf (bad) repz mov nop insl ss mull adc (bad) pushfq in enterq sbb mov push mov push sbb fidiv add repnz (bad) jae stos and (bad) sub or and rex.WRB xchg cmc imul lret (bad) pushq in adc (bad) (bad) (bad) popfq loop mul rex.WRB lods mov mov sbb push pop fs xchg (bad) enterq (bad) cmpsl jo sub fcomps movsl pushfq cli enterq jle and sub xchg mov (bad) (bad) rex.W xchg (bad) or movsl xchg xchg and pushq (bad) fldz xchg adc and rex.B jrcxz test xchg popfq icebp (bad) cwtl (bad) int outsl or adc jrcxz scas xchg mov enterq (bad) xchg xchg rex.RXB mov xchg or and sbb addr32 imul xor (bad) fiaddl (bad) in int (bad) (bad) mov test cmp mov pop (bad) scas xchg loop (bad) movabs jno movsb (bad) rex jns out (bad) cmc xchg cmpsb (bad) lods adc rex.RB xchg (bad) jno and pushq rex.XB sarl sbb xor add jg stc jno movabs (bad) xchg or cmc xchg ficomp mov jmpq sbb xchg sbb (bad) jno (bad) jne callq cltd xchg out mov pushq js (bad) pop xchg subl loop jae xchg frstor sub mov std xorl sbb xchg xchg int3 movabs cmpsl outsb movabs fldl stos (bad) lret pop jl xchg movabs clc cmpsb xor outsb (bad) or rex.WRX cltd outsl and add movabs imul jmp pushq mov mov rex.RX mov rex.WXB jmp (bad) (bad) fwait (bad) hlt xchg (bad) jnp jnp xor (bad) cmp out (bad) mov int (bad) (bad) xchg (bad) rex ja xchg fmul insb xor hlt (bad) mov test mov add rex.RXB pushq jle xchg callq lret jbe xchg add pop or xchg xor seta fisubrl (bad) xchg sub mov rex.XB jl (bad) es cld movslq popfq mov in add xchg jne,pt andl rex.WRX adc (bad) (bad) in xchg and fist addr32 cwtl cmp std jbe movslq fidivl (bad) and addr32 int popfq lret cmp rex.WXB rex.WXB (bad) adc (bad) rex.WRX xor xchg mov adc (bad) xor stc rex.WR cltd ja mov (bad) cmc (bad) pushq pop cmpsb pop test rex.WX (bad) jb outsb fistpll xchg rcrl (bad) sti cmp nop jne iret mov mov jne test (bad) hlt jrcxz xlat jb lahf xor ss outsb sub lea rex.B rex.W xor ja test icebp movsb xor fwait lret sbb jne mov movslq mov fldl fcoms sahf ss xchg (bad) xor pushq retq (bad) repnz sbb pop rex.WB push xchg sub mov (bad) lock int3 fadd push or xchg sahf repz sbb mov adc adc stc pushq rex.RB es jmp sbbb pushfq pushq push cmpsl cmp pushfq pop or (bad) es in mov lock (bad) mov push adc adc addr32 fld cmp adc cmp (bad) pop sahf mov xchg jl cmpb sbb (bad) sub (bad) insb xchg js adc stc out mov sbb hlt rex.RX sahf imull mov xchg add adc xor xchg cwtl pop out xorl xchg sti test shlb outsl xchg (bad) xchg xor (bad) sti std out ss retq test mov add pop mov movslq pushfq xor or scas pop mov sti pop es sti (bad) xchg lret rex.X je (bad) (bad) jp (bad) xchg lock imull sahf cli mov rex.WRB je out gs pop data16 mov xor push (bad) fwait loopne adc orb mov loopne in cmp fist sub fiadd or mov test mov sbb (bad) sub rex.W and and lret and lea push in or idiv pop leaveq fisubr in insl pop frstor mull in nop movabs std add rex.WX mov cmp mov lea in xchg (bad) leaveq mov push cmp xchg sub fsubp fsub mov outsl (bad) divl xchg pop mov divl push sahf mov sub (bad) sbb mov sub rex.RB xchg pop xorl (bad) xchg movabs push (bad) cwtl cmp (bad) adc callq pop je xor fwait xchg movabs sbb movabs adc and sub jrcxz xchg push jle,pn vpsllw sahf (bad) lahf hlt pop cmp xor stos sub xchg mov sub (bad) popfq callq (bad) ja jmpq insl add mov sbb iret (bad) (bad) sahf movslq lahf pop stos mov xchg mov ja test jns movsb mov fwait pop (bad) (bad) pop mov mov mov and in sahf jmp pop int jns xchg sub stc rex.WRXB and rcll enterq (bad) lret (bad) sahf push add je mov (bad) (bad) sub adcl (bad) cmp xchg int3 scas (bad) sbb fsubrs add not add frstor add rex.XB (bad) fwait push adc lret rex.WRX add in scas sbb mov movslq add rex.WX scas insl movabs adc xor xchg xor jg nop cmpb pop mov test push xchg es cli push xchg ds data16 adc fldt (bad) push adc or cmpl (bad) in sub mulb mov xchg jne hlt pop jb sahf adc rex.W and sahf (bad) leaveq vpminsw jno scas xor and xchg int3 mov (bad) pop jp (bad) movabs rcrb rex.XB and rex.WR pop int pushq jmp in xor repnz clc add and jle fs je and rex.WR mov sarl mov (bad) push sbb movabs insl mov rex.XB insl popfq cs (bad) jle sbb insl lea xchg jbe rolb (bad) test pop nop sbb nop mov (bad) jp out (bad) sahf (bad) xor retq mov xchg or (bad) and movsb rex.W xor loopne int std xchg cltd mov movslq out (bad) (bad) mov rex.X rex.RX push ja adc or pop shrl imul mov leaveq outsb add std pop rex.WRX jle push mov and cli rex.B rex.XB xlat and xchg ficomp scas fbld (bad) push nop adc shl hlt divl repz (bad) sahf (bad) sti (bad) insl xchg (bad) fstps (bad) repz sbb (bad) out jae je out push movslq push jns sarb (bad) neg jno leaveq xchg adc xchg rex.WRXB (bad) (bad) (bad) cmp add int3 sbb outsb rex.WX cmp movsl sbb loope es pushfq retq cs fistpl shrw pushq in jae or mov xlat pushfq stc and int3 movslq data16 sub xlat vfrczss rex.WX rex.B mov hlt pop (bad) lea cmc movswl pushq xlat (bad) nop pop rex.WRX xchg jg cmpsb retq retq jrcxz add adc nop sbb iret jrcxz (bad) and rex.XB sub (bad) imul adc (bad) sbb or (bad) cmp jb jp add (bad) rex.WRXB mov cld cli xchg jg and mov or ja fistpll in pushq adc mov push xchg (bad) fwait (bad) mov sahf ljmp cmp cwtl (bad) (bad) (bad) push rex.RB cmpsl mov test fs and rex.WR and rex (bad) and fldl fnstenv scas or (bad) or xchg cltd sbb rex.WB mov or loopne sbb mov mov add test xlat rex.RX xchg shrl xchg (bad) movabs clc (bad) andl xchg (bad) leaveq (bad) pushq add jl pop jne (bad) rex.WX lea (bad) sbb or repz outsl rex.RX fildll cld or (bad) xor jnp (bad) (bad) outsl mov jmp pop imul push mov push es testb rex.WRXB add mov cwtl (bad) jbe mov stos xchg test movabs (bad) xchg xchg out sub jnp xchg in sbb mov rex.RXB es adc and enterq movabs or (bad) adc rex.XB insb in jg (bad) or sbb add out push add fcoml (bad) cmp and rex.RB outsb jmp mov scas mov sarb push (bad) pop nop (bad) scas movsl ja jg pop fidivrl mov rex.B movsb fistl ficomp (bad) sub mov loop push xchg pop cmp outsl repnz sub jl rex.W rex.RX (bad) jmpq and sub mov notl adc popq cmp cltd test (bad) or shrl movabs rex.WRB test adc xor mov jl sbb lods movslq sbb mov incb jmpq (bad) sub mov cmpsl jg (bad) rex.RXB ds pop movabs rex.WR mov (bad) (bad) loope (bad) fwait mov scas mov adc mov (bad) jmpq (bad) jne out cmp test mov data16 cmpsb in mov (bad) mov movabs and sub std lock decb movabs data16 pop mov fldenv mov mov push cmp test lock rex.X sbb in (bad) (bad) stc and (bad) cmp cmp pop mov xor (bad) (bad) pop in adc cmp xlat cmpl mov mov jmp sub lea jno or outsl pop or cmpsl insb pop (bad) or lods jge stos rex.X leaveq sbb lock pop cmp mov lods loop (bad) pop adc pop mov fs or callq jnp mov (bad) mov lahf jmp cmp sbb cli sbb fisubrl adc sbb rex.WB mov (bad) pushq icebp rex.WRXB loope mov pushq add lods (bad) loop adc xor test std (bad) sbb popfq cmp sub jo (bad) cmp outsb rclb xchg cmp insb jae pop (bad) push out out cmpsl jg imul rex.WR adc data16 pop (bad) jmp imul (bad) add cli sbb out loope (bad) jbe sub xchg xor adc cmp push or cmc adc xchg sbb (bad) mov stc loopne xchg rex.W stos xchg and insb rcll mov mov ja icebp adc or movsl jl fisub in cmpsl sbb jb sbb in outsl push lahf mov callq push in adc xchg insb pextrw add movsb test rex.XB xchg add or xchg adc fsubrs in (bad) sti iret (bad) fs movl jp (bad) test xchg in in leaveq xorl xchg (bad) xor movabs xchg repnz sbb mov xchg push movb int3 xchg mov xchg add (bad) mov movabs push in add pop (bad) jno mov (bad) (bad) xchg movabs xchg rex.WRB lret rex.WRXB cld sbb push jo movabs mov xor gs rex.WX cmp xchg fistl rex.WRX imul push (bad) rex.X xor xchg loope retq (bad) outsb rex rex.WRX cmpsb jrcxz xchg and mov je mov push and lret sahf adc mov or jmpq test xchg add add cmp pop jle bnd mov vcvtsi2sdl addr32 adc fidivr xchg ja movabs mov out xchg xchg mov (bad) xchg add subb cli movb test and sub nop clc jg xchg rex.B imull cwtl sbb cwtl (bad) rex.RXB es xchg lock movabs add rex.W and out mov pushfq retq mov lock repz sar lret stos and lods pop (bad) ja pushfq shrb (bad) lret cli rex.XB rex.WXB (bad) cmp sbb rex.RX (bad) sub sub (bad) mov sbb rex.W jrcxz jno in movabs cmp rex.WR sbb (bad) insb loopne pop pop js mov (bad) adc mov (bad) and mov add (bad) pushq rex.WRX push mov mov (bad) pushq insb jrcxz js mov std out (bad) mov push ja mov scas pop fidivl and cwtl jg and (bad) rcr data16 mov (bad) jrcxz (bad) jne mov (bad) xchg (bad) jp mov mov movsb jl loope push sahf xchg push sahf (bad) fistpl rex.RB es sub xor rcll out cmpsl outsl mov and sbb mov mov (bad) jnp cmc sbb mov add add data16 sub jbe std fld movslq rex adc (bad) sub jge rex.W test rol or jl xor retq ds (bad) cltd adc (bad) sahf xor mov test out add sbb xchg (bad) movabs pop (bad) pop rex.WR sarl sbb movabs xchg (bad) movabs jg lret xchg (bad) (bad) cltd xor add shlb (bad) xchg (bad) movabs out add push adc pop (bad) gs jp (bad) adc stc fwait lret lods xchg rcrb stos rex.WRXB sub rex.WB rex (bad) or movslq xchg sbb jne stc and (bad) xor and int adc mov movabs and adc adc sbbl andnps jge mov rex.WX fs insb out (bad) (bad) popfq adc loop ss imul lock cmpsb pop rex.WRXB (bad) sahf ficomp xchg popfq (bad) adc xlat cli fs movabs scas xor in add or jge (bad) pop xchg (bad) stos mov movl fcompl je repnz xchg or loopne fbstp (bad) rex.X loope sbb int or insb sbb and lods pop mulb (bad) pushq in lock (bad) pushfq enterq mov pop jns pushq (bad) (bad) mov push enterq or (bad) rcll (bad) push and (bad) cld test xchg icebp pop cmc or out rex.WRXB fsts test cmp std add and lret jg lea mov enterq iret sbb fsts (bad) scas adc cmpsb sahf adc imul push mov xchg scas fwait cs mov xchg andl xchg pop add sbb (bad) xchg push jrcxz jmpq in rcll movabs repnz rex.WXB fistl jbe rex.B sbb (bad) cmc xchg xchg xchg fs jae xchg pop cmp (bad) std pop cwtl rex.X subb xchg pop movabs lret (bad) push rex.WR rex.XB cltd and cmpsb pushfq rex.X mov and nop xchg (bad) mov rex.X jo or (bad) xchg movabs or addr32 push jnp rclb or xchg xchg (bad) out (bad) jmp mov lahf xor xchg psrad xchg lret or rex.W (bad) fdivrl fwait xchg loope movabs fdivl xchg repz cwtl mov rcr jle loopne andl (bad) xchg (bad) cwtl xor loope fwait retq (bad) xchg (bad) jbe rex.WXB fmuls cmp sti rex.WR lock xchg mov xor or rex.WR movsl lret xlat mov enterq xor rex.WB sbb cwtl mov (bad) xchg outsb fsubrl cmp xchg jmpq cmp xchg (bad) xchg mov xchg (bad) push fldl jle rex.WX cltd inc movabs (bad) outsb jns repnz rex.W xchg addr32 (bad) adc cli shlb popfq (bad) sub mov push jg (bad) sbb pop pushw lcall sub mov (bad) (bad) rex.WRXB pushq clc movsl out xchg xor loopne cmpsl xchg pop lret movabs retq adc jno movsl shl xchg jp test out xchg cmpsb outsl cmp pop cwtl rex.R shr (bad) add imul rex.RXB mov cmpl mov jno xchg mov sahf stc callq add pop stos faddl add and sub jae xchg mov loopne push andl add xor (bad) sbb movabs imul cmc sub xor fistpll xchg in subl rex.WR rex.WRXB adc rex.R push test mov xlat (bad) fadds cwtl cmpsl (bad) movabs mov rex.WX gs adc leaveq in jrcxz xchg in div pushfq push (bad) test xchg xor (bad) rol stos mov mov xlat movabs (bad) xor addr32 int3 stos xor (bad) or rex.WRXB add out pop test pop sub and xchg popfq rex.WRXB cltd (bad) adc and (bad) xchg mov xchg mov in mov xlat notb jl mov xchg es movabs xor xlat shr xchg cs mov test sbb xchg adc xor rex.B rex.XB mov mov mov fwait cmp xlat imul push cmp (bad) cmc push std outsl or (bad) xchg cmp jg (bad) or movabs rex.WXB xchg adc lock add xor gs xchg (bad) nop mov fs in clc mov lahf (bad) rex.X push (bad) rex xchg stc (bad) xchg loop cmp (bad) movsl addr32 xchg lret fadds out fcomip (bad) pushfq cltd add add lods xchg loopne movabs (bad) rex.X rex.WRXB rex.WX repnz cli xchg mov int pop jns pushfq (bad) fisttp cmp (bad) xchg int3 (bad) jmp int (bad) add sub or sub rclb jmpq stc cmpsb (bad) xchg sbb sbb test adc pushfq xchg outsl out fs sahf mov jmp (bad) rex.XB fs push retq out xchg mov cmp xchg sbb movslq (bad) xchg adc (bad) (bad) pop xchg repz push rex.WRB xchg xchg mov test leaveq (bad) jmpq stc std mov insb ja mov adc sahf addr32 (bad) xlat rex.WRXB stos xchg rex.RX jrcxz cld imul (bad) pop movsb xchg fwait repnz int3 xchg mov xchg add rex.B sahf mov adc data16 pushfq push rex.W stos sub mov mov mov sbb and adc icebp ds cld adc callq rex.WRXB pop movsl negl xor mov xor xchg and imul fcmovnbe popfq pop rex.B (bad) movabs mov test cmp xor jne mov pop movabs pushq xchg pushfq stos or sub xchg pop sub (bad) mov or mov in mov in cmpsl lods jb jnp sub (bad) mov lock xor pop push cmp rex.WR insl sbb shll in int in (bad) mov xchg stos rex.RB (bad) lea jrcxz test adcl (bad) (bad) hlt lods push gs xchg sub (bad) add cld pop icebp outsl stos sahf jno rex.W sbb sbb pop (bad) add ss or cmp lods (bad) lahf xchg push mov test push sbb cmc cmp and add jl xchg cmp adc (bad) (bad) insb jns icebp cmpsb lret adc int (bad) add rex.R and or movsb mov (bad) idiv xchg sti push or (bad) enterq xchg fcomi in jl (bad) std xchg subb (bad) loopne mov push lods xchg add xlat adc (bad) jae xchg jb fldt fist insb sarl (bad) mov ja ja adc rex.R cltd rex.RB push shrb jae mov icebp leaveq xchg (bad) fistpl xchg xor and xor mov movsl nop jge icebp pushfq xlat enterq mov or pop (bad) push (bad) sahf repz rex mov mov sti and jmp xchg jb (bad) mov out loopne xchg mov and xchg lahf xor (bad) ja int3 cmp and (bad) repnz and jmp (bad) rex.WR gs sub mov cli xchg imul xor xchg rex.WX retq cli mov (bad) adc (bad) divb fimul frstor stc imul xchg iret mov xor jnp xchg or adc fisttpll lock cmp fsubrl and mov (bad) (bad) sti popfq mov xchg (bad) (bad) in (bad) mov mov cmp (bad) cmpsl pop mov rex.WRB cs xor (bad) pinsrw pop xchg xchg fcomip fistpll and in push in mov push rex.X rex.XB jo stos and (bad) xchg (bad) mov sbb or mov outsl xchg cmp pop adc idivl pushq loop loope xchg cwtl pushq xor (bad) mov (bad) rorb scas lret and adc or stos mov rex.WR (bad) (bad) jne retq rex.WRB add mov pop shlb (bad) enterq bswap callq (bad) push sub subb cmp fdivl iret bsf addr32 lret and mov (bad) outsl (bad) pop scas rex.WX xor adcl push pop ss mov scas xor push nop (bad) add (bad) popfq adc (bad) cwtl roll add jg rex.WX cmp xchg mov nop popfq add xor push (bad) jp (bad) out sub nop xchg xor (bad) mulb mov insl (bad) (bad) roll (bad) je (bad) mov rex.X mov enterq adcb ljmp pop adc stos sbb jbe out fcmovnu and jge push cltd xchg cs callq lods xchg stc (bad) sbb mov (bad) xchg movabs mov xchg push stos (bad) cmp sub repnz (bad) xchg (bad) sub add sbb sahf pushq icebp pushq xlat xchg mov (bad) ja or xchg outsb ficomp outsl mov cltd push xchg jns (bad) or rex.WR (bad) (bad) cs test adc (bad) add (bad) scas mov jb sbb in push sbb cwtl test jg rex lahf lods xchg jl divb loopne xchg cmp in jle (bad) push cs jge (bad) sub mov jae xchg mov scas push mov sahf std js repnz mov lret xchg nop sub outsb cmp outsl (bad) mov lret xchg jae movabs rex.RB cmp enterq (bad) or mov xchg mov (bad) xor jne (bad) sbbl out pop shrb pushq scas (bad) movabs xor xchg push movabs imull mov pushfq cmpsl pushfq (bad) fimul mov cmp (bad) movabs jb rex cs and popfq xchg xor sbb jne ja sahf lods cwtl cmc fisttp mov mov (bad) xchg pop (bad) scas mov or add add (bad) cmc xorl (bad) fldenv in or pushfq popfq sub mov xor sahf test je (bad) (bad) sti xlat (bad) rex.WR rex.XB mov (bad) rex.RB test xchg jle xor (bad) out jp pushq (bad) xor rex.XB movsl (bad) xchg mov adc and (bad) repz sub pop xchg stc fdivp nop (bad) xchg mov out (bad) rex.WR and sbb cwtl pushq scas push pop push pop and std (bad) jae jrcxz nop adc and push (bad) cs or jl (bad) movabs nop (bad) pushq and mov jg cmpsl cmpsl addr32 movslq mov rex.WR mov adc (bad) rex.WXB adc and adc fidiv ja pushfq mov enterq mov (bad) jl in pop xchg rex.RX and rex.X movabs jp fbld xchg lret (bad) (bad) shrl rex or (bad) callq outsl (bad) test cmp or jne pop sbb mov out sahf jbe mov popfq xchg (bad) pop (bad) fidivr rex.RX addr32 (bad) out sti (bad) sub (bad) pop pop push negl rex.WR jmp and sbb pushfq test jmp rex.XB (bad) rolb push xchg xchg xor data16 jmpq mov loopne or jb (bad) (bad) outsl mov ss rex.XB xor sbb xor psrld je or push mov rex.WRXB sbb fistl jrcxz jne mov and jge or mov rex.WXB xchg icebp sahf xor in loop push faddl rex.RXB xchg gs scas retq pop sub mov xor mov pop jnp nop xor fdivrp fucomp jg jae movabs cmpsl xchg sub add rex.RX loop mov add xchg cmp scas cmp cltd cwtl mov rex.RB stos lock pop (bad) imul sahf (bad) negb (bad) rex.WB ja ja cmpsb or hlt (bad) imul rex adc cmc and rex.WRXB ror fsubrs cmc pop insb (bad) adc (bad) cmpsb lret pushq xchg sub repz cmp fsts pop shl mov callq jrcxz in add xchg fisubrl or jge xchg rex.WXB lock stos cs in xchg out add (bad) (bad) movslq pushfq xorl frstor jrcxz sbb test shl jb jmpq cltd in jns and jnp out adc jl lods xchg rorl jge xchg mov vpunpckhwd je in xchg movabs lods int cmp mull std fisubl (bad) test or (bad) (bad) loopne (bad) test lret in add std movabs fmuls (bad) (bad) lret mov movsb cmp xlat pop push cmp callq movabs out std fsub xchg fistpl xchg jmp ror test sahf xchg or or pop mov jbe in (bad) lret pushq divb loope seta (bad) sbb mov push mov (bad) out gs jo mov imul fldt adc retq movabs mov addr32 cltq fstl (bad) mov scas rex.WR movabs mov mov rex.WRB lock (bad) fdivr rex.RX (bad) (bad) movabs jle (bad) xor adc cmp in and stos rex.WB xor fwait push (bad) cmp pop push sub (bad) loop adc and insl or retq xchg sub xchg repz movsl (bad) xlat (bad) or cltd adc movabs std pushfq pushfq (bad) incb outsb push jne out xchg mov icebp adc movabs test rex.X and push (bad) out rorl add rex.RX or or jg xor jb test shl xor xchg (bad) adc mov cwtl hlt mov sub fmuls jb cmp stos (bad) nop fwait mov je in addr32 in xchg rdtsc (bad) repz mov rex.WR rex xor or (bad) lret sub outsb cwtl cld xchg mov mov pop and movslq jno lahf rex.WR jmp popq cmpl movabs decb xchg scas out ds movabs add xor xchg lret fimul sahf mov repnz hlt xchg adc xor pop cmp pushq (bad) pushq fs callq or repz (bad) scas sbb push int3 callq sbb (bad) mov (bad) mov sbb (bad) mov (bad) sub jge fsubl movabs rex.B rex.WRX cmpsl mov xor xor out mov out add (bad) es fbld rex.WXB and mov rex.B nop mov sbb (bad) test movslq pop rex.X cmpsl mov or idivl mov rex.R xchg (bad) ja leaveq and (bad) popfq (bad) xor (bad) sbb (bad) fadds push mov test testl negb icebp xchg rex.WX (bad) (bad) push or xchg jbe movsl (bad) mov add rex.WXB adc sub rdmsr xchg (bad) sub jb pop adc rex.XB fs movabs rex.WX rex.WXB or and addr32 or std rcll imul (bad) mov movabs gs scas rex.X (bad) leaveq pop rex.RB or jmpq pop lods pop push jrcxz mov nop adc rex.WRB rex.X rex.WRX (bad) es sahf icebp or cmc xor add xchg movabs (bad) lods ds fmulp (bad) sbb (bad) cmp cld (bad) rex.RX in mov adc (bad) mov mov xchg xlat and lea or (bad) (bad) xchg je (bad) pushq mov in add and mov rex.WB sarl icebp cmp push popfq mov leaveq mov cmc nop and loop insb insl negb adc adc sbb rex.R xchg cld sub rex adc jne sub retq sub (bad) and lret nop sahf and sahf (bad) (bad) test movabs ja mov in mov (bad) insl fidivl repnz rex.RXB cmp (bad) pop (bad) sub mov loop outsb rex.RB and xchg xor mov mov xorl pop addr32 adcl iret sbb out push (bad) popfq stos or ror jg subl (bad) je push sbb xlat jns addl xorb rex.WRB in cltd test sbb jo data16 idivb pushq (bad) mov sbb ds (bad) sbb lock (bad) movq retq in xchg (bad) sub (bad) push sbb rex.WR rex.RXB fs or popfq mov and movslq jns jnp js xor cld xor fimull (bad) (bad) pushfq popq lret enterq xchg mov mov (bad) cmpsl adcl sbb movsl rex.WR popfq (bad) ljmp test out adc movslq nop push imul adc movabs iret cmpl data16 jae cmpsl pop mov retq mov lock cmpsl push (bad) nop xchg (bad) pop vmwrite mov popfq int rex.WRX xchg gs es mov addb movslq (bad) xchg add cmpsb jge sbb (bad) movsb mov fsubrp and ds rex.RXB lods mov cmp stos xor and xchg (bad) xchg pop push cs rex.RX sahf jp (bad) xor insb pushfq and add mov ss fcoml (bad) adc cmp xchg mov or fisubrl fst (bad) (bad) add xchg nop sbb pop and fdivl rorl stos (bad) cli mov in mov fiaddl stos scas movabs xchg sbb (bad) int3 xchg movsb cmp mov in stc lret push subl pushq jge xchg push ja imul out xor sub rex.WX mov fsub or cwtl (bad) jae movabs (bad) test jrcxz xchg add xchg adc cmpsl hlt and std xchg incb rcr mov movabs lahf and mov nop xchg negb and mov cmp mov rex.WRXB push xchg xchg jp (bad) movabs out sub mov vpsubb (bad) fwait (bad) pop xchg stos add adc movabs outsb (bad) (bad) jmpq imulb jo rex.W cltd in (bad) lret movabs xorl imul rex.RX xor xchg addr32 leaveq mov xchg mov out pushfq xorl add jmpq pop movabs std out xchg mov xchg movabs pop addr32 (bad) xchg xor cld fnsave pop push lahf and in rex.WR pushq xor push mov loope ljmp ss jrcxz pop add xchg sbb mov rex.X (bad) imul test (bad) mov xor test xchg neg test adc xchg (bad) pop pop (bad) or enterq pushq int3 (bad) xchg insb sahf icebp jnp and jmp callq icebp (bad) test bsf movsb xchg pushfq sarb adcb sub out rcr cmc jrcxz andl (bad) jno mov (bad) rcrl mov (bad) mov xor test clc xchg mov fs (bad) imul (bad) (bad) js (bad) jmpq mov in xchg or add sub pushq xchg lret jno xor add xchg movabs mov (bad) roll (bad) xlat insl sbb mov sbb xchg jge cmp cltd sbb pushfq sub (bad) je (bad) cs pushfq or lea (bad) sbb outsb iret test add and sbb ficompl jmpq fistpl mov xchg pushq jb sbb adc fwait adc cmpsl pop xor in rex.WRX enterq imul loopne (bad) shlb test rex xchg sub (bad) fidivl or rex.WR fs add adc loope mov lods outsb movabs mov sub outsb jl movabs cltd jp sub addr32 pushfq sbb sub movabs movabs (bad) cwtl (bad) cmpsl or (bad) cmc rex.RXB xchg (bad) fidivr sbb not scas jmpq jae (bad) or jnp xchg out loopne,pt mov rex.RX (bad) rex.X (bad) insl xchg enterq sbb rex.WRX sahf xchg rex.RXB adc push xor lock sahf enterq sbb fidivr jno jnp in xchg jle,pt cmp mov (bad) out mov lret push add stc (bad) gs or (bad) movabs xchg xchg int3 push mov stos retq jmpq callq rex.X sbb jae push sbb (bad) or out xchg movabs mov rex.X xlat cwtl xor (bad) push xor (bad) insb imul push and sub es mov xor (bad) mov fdivs xchg and movabs loopne xchg in jae sub pcmpeqb xchg sub rex.WRX xchg sarl xchg xchg data16 hlt cmp mov mov xchg scas (bad) or fwait sahf push (bad) jbe int3 movsl rex.WRB outsl (bad) or or cmp xchg nop lcall push imul (bad) sbb (bad) cwtl mov xchg xchg xchg (bad) (bad) push (bad) icebp (bad) adc stc xchg xor and (bad) adc rex (bad) je or mov (bad) and jb pushfq pop imul out testb in cwtl (bad) in (bad) cltd pop fisubrl xchg rex.W mov mov out rorb xchg cmc (bad) js je movabs pop rex.WXB repz and mov xchg rcll rex.WRB out loop add mov lods scas push negl xchg xchg clc (bad) mov mov mov fld mov jg pushq movsl rex.RX test fucomi sub adc cmpsl (bad) and xchg cmp test mov lahf movsl insb cmp add pop in es jne (bad) mov movabs sub (bad) xchg pop (bad) out mov lahf test pop add imul mov leaveq negl and rcll fstl xchg mov addl push mov jno xchg mov xchg sarb and and mov xchg movabs mov or cmpsb pop xor mov xchg rcrb xchg (bad) cli adc or je int3 xlat rex.RB mov jbe rex.WXB std movsb xchg push and rcrb mov rex.WX (bad) (bad) pop outsl movsl cmp add adc mov sbb icebp xchg fwait xchg sbb (bad) cltd fnsave xchg fwait out mov sbb iret sub xchg incl int3 nop jmp lock xlat (bad) movsb (bad) outsl (bad) (bad) rex.R pop leaveq test fildll (bad) mov (bad) int xchg rex.RX repz in push cmpsb rex.XB and mov (bad) sub (bad) (bad) sbb xchg js test (bad) (bad) out (bad) add mov jo (bad) (bad) in movabs outsl repnz movslq movabs sahf insl jg rcll lea mov lods lret sbb add jl (bad) int callq divb rorb cmpsl rex.W outsl (bad) sbb addr32 ficom loop xchg sub (bad) cs retq mov rex.WXB retq jg mov xchg xchg rex rex.WR mov ss jrcxz cltd std xchg cmp jle xlat test sahf adc (bad) stos (bad) movslq or xchg jle xchg push fimull in (bad) xchg test rex.WXB lock fcoms xchg (bad) mov icebp or cmpsb mov mov mov fmull (bad) leaveq xchg sub cmp nop xor lea (bad) (bad) adc mov (bad) adc (bad) and and cwtl out mov sub jne sahf mov clc add stc lods addr32 fsubr sbb sbb (bad) js int3 rolb rex.WXB callq pushq xchg pushq push adc out pop xchg loopne fsts iret ds xchg sbb push xor rex.RX pop cmp int3 (bad) mov xchg rex.WXB lock pop lret cs pop push mov retq (bad) insl (bad) stc jmp in (bad) imul nop pushq rex.WRXB jae cmpsb mov out cs cmp imul cmp (bad) xchg mov ja cld out sbb outsl jbe xchg rex.WB xlat cmp add pop sbb and push sub rex.WX xorl retq mov (bad) or nop lea sub xor mov retq sti pushfq pop (bad) fs stc (bad) cmp jo mov enterq adc and mov fs leaveq (bad) push jl jno and scas and fnstsw pop cld sahf mov jo sub leaveq (bad) mov movabs cmp leaveq xchg xor xchg cmp lods out jb fdivs mov add cmc xchg lret (bad) xor loope fsincos xchg insb add mov retq test sub loop imul outsb cmpsb (bad) pause (bad) xor rex.W sub (bad) pop sub (bad) sub sbb lods xchg rex.WRXB cwtl adc cmpsl mov push pushq test ficompl xchg mov add andl lahf lahf cli push xchg mov movslq rex.RXB push (bad) mov sbbb lods std xchg jl (bad) enterq out pushfq adc mov jae (bad) sub pop data16 cmpsl (bad) divb xor pushq data16 xchg cmc jl iret int3 mov rcll gs test int jbe mov movabs addr32 push xor rorl or test mov and rorl mov add jns (bad) xchg (bad) rex.RXB add or xchg mov rex.WR xor (bad) (bad) lret (bad) (bad) rex.XB push (bad) sbb adc loope mov (bad) mov adc or pop xor movabs mov sub xchg scas add pop xchg and outsl movabs or rex.RB or (bad) mov jno psubsw ja mov testb or fnstsw pop cmpsl lret xchg scas (bad) rex.X (bad) cmp sbb outsb addr32 mov fucomi sti xchg xchg (bad) mov fstl mov mov (bad) rex.WXB xchg stos std mov sbb movabs mov and test movabs mov jle mov xchg xchg test ficom or (bad) imul andb mov pop or fwait xchg (bad) mov rex.XB scas stc rcll vorps pop (bad) out rex.WRX ljmp (bad) (bad) movsb movl movabs add cmc adc and or lret out xchg pop cwtl sti sbb sahf or sbb xchg rex.WX clc (bad) sbb in (bad) xchg shrb movabs insl popfq fnstcw pop add nop push lods cld sbb mov jrcxz (bad) rol rex.R rex.RB mov cmp pushq lods rex.W es xchg addr32 callq (bad) jbe (bad) rex.WRX and adc xchg sbb xchg rex.WR insb lret loopne js leaveq sahf rcl pushq sbb mov cs xchg (bad) xlat push jnp sub jno movabs jg cmp pcmpeqb cli and pushq xchg ja (bad) (bad) pushfq movslq add outsb rex.WB (bad) mov mov push rex.X xlat (bad) xchg shll mov xchg fidiv sub (bad) por cmp xchg fucompp out (bad) stc es and data16 (bad) retq sbb rex.RXB xchg mov pop mov rex.WR (bad) (bad) popfq and push (bad) popfq cmp out or cmc jg lahf mov and out sahf and (bad) jbe sbbb mov outsb lret rex.WRXB rex.RX mov (bad) mov rex.WXB movslq cmp mov pop insb xchg movsb in out nop mov jnp cltd xchg sbb rex.XB fs lea mov mov adc lahf mov mov movabs out int (bad) mov sub pushq or xor stos in cmpsl jl out js rcl sub sahf push xchg (bad) in jo pop lret add xchg mov jbe mov int mov sub fcmovnu xchg jo fldl lahf imul (bad) mov rex.R add (bad) lea pushq (bad) (bad) movabs cmc xlat (bad) ja mov (bad) mov pushfq jo jnp xor or fisubrl sbb addr32 xchg (bad) loope (bad) mov mov (bad) out (bad) (bad) out (bad) sarb adc xchg xchg nop adc (bad) mov pop cmp (bad) lret pushfq jbe shrb outsl or retq retq xchg lods push mov adc sbb sahf stc and rex.B and fildll pop or pushfq sub popfq or sbb rol movabs cmpsq mov push (bad) int out ficom sub fmull adc (bad) sbb sti fiadd mov in jb es and pop xchg sub and imull push mov adc iret jnp (bad) jnp push xchg (bad) xor jb mov xchg mov loopne mov out (bad) roll movsl pushq (bad) (bad) xor popfq sub (bad) mov and (bad) xchg fmull xchg adc xchg (bad) (bad) mov xchg pop xchg rcrb mov mov mov jnp gs fbld xor imul in push xchg xchg rex.WXB (bad) or (bad) loop movabs rex.X lret (bad) jo test mulb int3 xchg shrb xlat push xor rex.RX cmp add mov sbb (bad) rcrb or rex.RXB movabs pop mov mov data16 mov insl (bad) sub mov clc rex.RX mov xchg mov in push or sti xchg addl js pop loope (bad) fcoms out cwtl cmpsl xchg stos lret rex.RB movabs pop cld pushfq xchg and mov jrcxz mov pushq (bad) xchg sbb jmpq lret hlt jno (bad) jrcxz loope xchg lods jns test in sti sbb scas in pop ja jrcxz cmpsb js xchg push mov imul rex.WR movsl cli pushfq xchg movabs retq (bad) addr32 xchg add scas sub mov jmpq jg cmpsb lea xor test xor leaveq jnp xchg (bad) add insb cmp nop cmp (bad) je mov nop push hlt mov lahf pop out xchg push or push mulb mov mov jmp repnz addr32 pop jmp (bad) in cmp loopne add retq push (bad) scas sahf pushfq fistp mov xchg insb xor or (bad) int3 push pushq pop fsubrl or es in mov add (bad) add xchg (bad) xor jp nop sbb imul xor rex.W (bad) rol (bad) jl (bad) adc cmp cld popfq and cvtpi2ps adc and jl movabs add movabs (bad) insb fwait xor cwtl out loope test loope fisub nop sahf mov cwtl int lods loop sub add es mov cmp int sahf and push fwait or (bad) retq (bad) addr32 jl rex.WX xchg push cltd clc sahf notb movabs xchg (bad) mov cmp cmpsb jle mov sbb movsb cwtl mov test (bad) (bad) (bad) xchg mov adc sbb jbe xchg mov out jmpq nop xor xchg (bad) (bad) movabs je test (bad) or callq (bad) jle cmp (bad) lahf xchg (bad) mov pop movabs sub out adcb (bad) sub or (bad) rclb iret xchg out popfq xchg push lock adc (bad) (bad) popfq cmpsb fcoml (bad) sbb add roll f2xm1 pop sbb jno mov rex.RXB scas adc test pop callq cltd cmp addr32 push stos rex.WX cs cwtl xor mov mov (bad) adc jno xchg and test fucomip rex.WRB xor add mov xchg xchg mov mov (bad) outsl fadds rex.R pushq (bad) and and add in sahf (bad) xchg pushfq rorb cld (bad) (bad) retq or xlat (bad) sbb cmp mov rex.RB pop movsl jno stos sqrtps and xchg sub sub xor mov xor pop ror sbb lret or iret ja jmp (bad) je,pn mov pushq enterq lahf rex.WRB movabs mov movabs (bad) mov xor add and nop lea cli (bad) xor cltd and push push je (bad) mov cmpl or xchg rex.WRX adc rex.RXB push callq xchg rcr sub andl sti jrcxz cmpsl (bad) jne nop sbb jmpq hlt fs jmp outsl sbb in (bad) and push mov pop jle rcll divb sbb mov (bad) jae popfq lret popfq mov iret sbb sub pop insb lret (bad) or push (bad) (bad) add mov pop (bad) rorb jl rex.WB pop xchg nop pop (bad) cmp cwtl cmpsb adc and cmp fbld sub ficom cmpsb insl sahf rex.RX rex.X test jno (bad) pushq or mov mov add cltd fmuls pop rex.WRX mov and jg adcl movsb sarl xor mov sbb jl (bad) popfq fcompl mov and add (bad) mov xor mov retq rex.WRX mov xchg (bad) nop sbb cmpsl sbb ficompl scas pushq rex.WXB stc out out fs rex.XB add and xor (bad) sbb mov sub mov test xchg jbe (bad) rex.WXB sbb jnp (bad) enterq mov out (bad) cli (bad) test jno cwtl test ja retq fidivr jae sub xchg shlb insw sahf and jnp mov shrb push (bad) fneni(8087 in push js sub nop mov popfq xor jmpq xchg outsb nop (bad) lahf mov cmpsl rcrl cmp mov and mov clc andl xchg (bad) (bad) fcmovb (bad) lret (bad) rex.W leaveq imul xchg in xchg or shrl rorb clc push or sub lods xchg xchg cld (bad) (bad) pushfq insl iret rex.WR imul incb hlt insl or lods fs cli xchg and sahf or movslq jge retq sbb (bad) shll notl pop hlt imul cmp add ljmp (bad) (bad) movabs (bad) mov iret (bad) rorb (bad) fisttpll xlat popfq loopne mov enterq (bad) imul movsb (bad) mov (bad) rclb add xchg hlt xchg iret or add imul (bad) int push cmpsl sub mov cmp sahf pushq rex.WX rex.B (bad) xchg rex rex.R mov push (bad) repz ficom (bad) jb stos (bad) mov out mov rex.XB jns or xchg xchg cmpsb adc rex.WRX sub movabs mov and out cs ds jb sub outsb outsl or cmp (bad) lahf sub sub fs jne cmp (bad) movabs movabs leaveq (bad) xchg cld movsl int3 (bad) insl (bad) rorl jns fist divl sbb fistl test xchg or pop xchg and cwtl adc xchg mov cmp or rex.X shlq leaveq stos (bad) (bad) and mov insl xchg je adc mov jg mov xchg fisubl fsubrs fs xchg jns lods jno (bad) mov (bad) mov jg sahf out outsb es popfq fwait lods push (bad) jbe mul (bad) test mov out pop xchg (bad) push jne rex.WRXB or (bad) rex.WXB rex.B and lahf xchg adc jmp hlt xchg mull bnd enterq cltd pop jno sahf nop cwtl xchg jno fsubl es push rex.XB add pop rcrq add (bad) jbe movabs loope or mov pop and add cmpsw sahf icebp pop out (bad) (bad) je (bad) hlt xchg mov (bad) or jmpq xchg fsubl and mov (bad) and adc and (bad) nop test icebp rex.RXB sub cmpsb cld popfq (bad) movslq mov (bad) xor retq xchg (bad) and rex.WR hlt fdiv sbb pop ja xchg mov cmpb add movabs jne outsl xlat xchg fisttp retq (bad) cmpsb rex.B mov test sbb (bad) (bad) cwtl test fsubp or loope fdivr lods (bad) insl cmp cmp pushq in movsb rcrb sbb pushq mov or (bad) adc fldenv (bad) movabs jl add or add mov pop repnz fwait (bad) (bad) sub enterq cmpsb test popfq rclb sarb adcb jae rex.RX jns lods push cli sar test sbb pop cmp insl rex.WX pop sub sahf rex.XB rex.WR xchg mov pop fwait lret fisttpl shll jle ljmp pop add sbb and js loopne fnsave push and loop mov xor iret rex.WXB std int push rclb xchg (bad) sub jrcxz,pt adcl or xor cmp insb ja xchg (bad) and xor hlt imul idivl mov (bad) fdivl lret xchg xchg outsb jno imul adc and (bad) and movsl std sbb fidivl cmp cmp vpshufhw sbb add roll adc pushq rex.WRB mov adc push xchg (bad) fsubrl retq scas (bad) (bad) adc and movsl rex.X xchg int (bad) cld mov in fdivrs (bad) sub cmpsb outsl ficom xchg popfq stc pushfq mov divb clc fisubl and mov xor cmp sbb cltd fcmovnbe mov (bad) pop push loope ficoml xchg (bad) stc mov sub rex cmc jp push pushfq (bad) retq (bad) (bad) (bad) xor pushfq jl clc stos add (bad) adc sahf xchg xchg mov (bad) (bad) mull mov (bad) sub sbb push ficompl xchg lods rorl lock jle (bad) movsb shr loope and push lods adc rex.WRX (bad) ja sub xor jg sbb rex.RX xchg mov loop adc incb jbe rex.R rex.W rex.RXB mov and push (bad) jmp mov adc (bad) (bad) lret or clc (bad) rex.RX hlt retq xorb insl add xor rex.WRXB xchg lock shlb mov cmp (bad) cwtl bnd (bad) out loopne (bad) movabs add sub sbb or in cmc cwtl mov xor xchg mov cmpsb and adc add (bad) cmovnp outsl sub scas cwtl (bad) jg pop movabs rex.RB popfq adc xchg (bad) (bad) pushq insb cmp xchg sahf (bad) adc mov add mov pop push fidivr xchg sbb jle,pn rex.RXB mov mov rex.RX xchg loope movabs insb out fbstp (bad) adc fcoml gs xchg mov (bad) retq imul in rex.W ja xchg push xchg pushfq rex.X popq loop cltd adc rex.WRXB enterq (bad) xchg sub rorb (bad) xlat cmp je rex.WX enterq push stos rcll es jnp xchg sbb jno jbe sbbl mov (bad) pop (bad) (bad) lahf mov xor lret incb and (bad) insl pop int rex.XB (bad) cmpl (bad) cmpsb xchg fcoml mov jne mov sbb (bad) jbe in rcrb (bad) scas rex.WX sbb (bad) in in iret int movabs (bad) ja xchg retq (bad) cmp push repnz xlat callq test add movabs pop stc and (bad) (bad) rex.WRB cmp xchg fsub jge out rex.WRX sahf pop (bad) fldt (bad) mov jmpq sub cmp xchg (bad) js (bad) and xchg lret lods fwait loop pop jl xchg (bad) rol movsb insb pop rex.WRB rex.RXB xchg lret sti add cmp jmp jge in lods xchg (bad) mov lods push adc loop (bad) sbb fiaddl (bad) in int std (bad) retq xchg outsl or test enterq mov and (bad) es rex fwait (bad) sub xchg (bad) (bad) int cmp xchg and jo pop sahf xor sbb xchg es or xor je (bad) lcall cmpl stos idivl and pushfq gs cmp movslq addl and rex.X mov xchg insl stos jae in leaveq (bad) scas xor fwait mov nop push xchg sti xor mov movsb xchg shlb sub jmpq (bad) mov outsl (bad) jmpq adc jne mov (bad) out imul jb (bad) jl mulb push (bad) jo sub icebp (bad) movsb in mov jp xchg retq test or xor adc xlat sub data16 xlat xor (bad) and in xchg nop mov (bad) iret (bad) rex.WXB data16 outsb movabs mov jae xchg jne (bad) icebp mov sbb movabs adc out lret enterq xchg (bad) (bad) popfq jle ja push lahf xchg sub stos xchg out mov mov sbb sub sub fidiv adc sub lret nop rex.WB rex.WRX mov xchg rex.B push xor mov roll cmpsl repz fdivrl adcl fisubl xchg push test fs ror data16 cmpsb cmp mov testq pushq push retq sub fwait xchg (bad) iret push loop fidivl xchg cwtl jrcxz jmpq mul scas jne fadds sub (bad) (bad) jno xchg jno out add pop and xor lods notl xchg xchg in cmp movabs mov pop iret mov mov movsb pop (bad) xlat jbe xchg movabs or in nop test fbld packuswb and xchg jo xor (bad) (bad) icebp xchg out (bad) (bad) xchg notl insl sub add std ja mov sub int es (bad) (bad) rcrb loop jge pushq movsl insl mov mov mov xchg jrcxz test cmc mov ja mov movslq loopne add scas js pop push mov (bad) in (bad) imul jg idiv pop in xchg xor in xchg and stos jbe jo enterq sub xor sti roll or xor add mov frstor (bad) sahf fcompl iret loop mov jg in sub in retq or pop std lods data16 xlat and xchg (bad) mov push popfq (bad) iret jne sub xchg jo out ss lods mov sbb xchg loop xchg pop mov test fild xchg sbb xchg scas decl xchg (bad) jne (bad) nop (bad) (bad) enterq outsb clc mov pop iret (bad) (bad) and in cmp (bad) mov xchg sbb nop or (bad) rex.WRXB lahf cmpsl adc jge movsl movabs jl xchg lea jnp xor xchg and test pop icebp mov pop neg sub xchg rex.WXB sub xchg (bad) lock or rex.WB mov pushfq cmp je cmp sbb pushfq xchg retq jle xchg sti jle sti int test lahf lods xchg xor jb cmpsb cmp imul (bad) int ja (bad) and cmpsb lret cmpsl jle mov pop fs test rex.WRXB shrb lret stc stos callq lea adc rex.WRB and orb sub jo loopne adc retq sub (bad) jrcxz mov adc cld xor (bad) (bad) lods fwait or jbe movsl mov pop enterq (bad) (bad) push imul sbb iret (bad) cmp (bad) sbb (bad) pop jno (bad) xchg (bad) sbb int xchg out cwtl pop sbb (bad) (bad) test pop sahf in (bad) or retq mov pushfq ds outsl adc in mov int3 (bad) push jg subl in (bad) jno nop xchg mov cmp (bad) out movabs in adc xchg push sbb jbe (bad) add (bad) mov (bad) cs cwtl popfq mov xchg mov cltd (bad) and xchg fs and xchg (bad) rex rex.WRX xchg (bad) pop mov jb ja jnp mov mov mov pushq cmpsl clc (bad) push es fwait (bad) mov xchg ja xchg lock (bad) (bad) (bad) cmpb xchg movsb rex.WB push fsub (bad) pop xchg (bad) xchg cld mov rex.RXB sahf notb rex.WXB movabs jb mov ja sub xor ficomp ss (bad) cmpsb rex.RX mov iret (bad) jae lahf fild push ss fdivl stos xchg rex.R (bad) gs push fildll popfq fsubs incl jnp movabs stc fs movabs adcl rex.WRXB pop xchg xchg (bad) rex.WRX add push movslq (bad) rolb adc loop mov (bad) lea movsl mov (bad) pop scas rex (bad) cmp mov and mov push xor (bad) retq jmp (bad) pop xor mov rcrb (bad) repnz pop insl (bad) xor cwtl (bad) (bad) jge mov mov sub jnp mov lods jmp jrcxz stos mov xchg scas pop movabs mov or (bad) xchg mov rex.WB in jg and movabs cmp sub (bad) push pushq rex.WRX mov cmp push idivb mov scas test pushq sbb mov imul jge movabs stos movabs je jg in fidivr outsb xchg jo in cmp sub jae xchg cltd clc mov (bad) imul testl xchg (bad) cs jmpq push mov mov int3 outsb (bad) cmp xchg loop or xchg retq pcmpeqw sbbl in (bad) xchg gs cmpxchg (bad) or jl,pn cmp push cmp and sarb andl cli movslq scas mov or test loop pop pop xchg push cmp insb sbb in mov sub mov xchg xchg mov fldt (bad) subb movabs imul xchg jne cmp or xchg mov rex je pushfq cmp clc sahf fidivrl push xchg movabs mov adc fildl mov mov mov cmp jl loope (bad) cmp pop xchg jo cmp push fnsave popfq rex.WRX rex xchg rex.RXB repnz (bad) jl jae sub in iret mov xchg sbb sbb rex.RB and xchg addr32 add (bad) sbb mov and (bad) rex.WRX push jle (bad) (bad) add sub sbb or movabs cmc (bad) xchg (bad) test pop rclb imull cmpsb mov (bad) mov xchg fistl cmp (bad) rex.R (bad) (bad) adc insb cmp xor pushq (bad) add fisttpl mov (bad) mov add and fcoms fsubs rex.WXB (bad) mov (bad) adc ja jne out and movsb int3 mov mov std (bad) pushq or movsb addl test pop mov sahf fdivs pushq movsb xchg bnd retq cmp in loope imul int mov xchg fwait mov push xchg (bad) pop add ja or mov mov fucomip out xchg xchg xor rex.WB push push and (bad) pop add xchg outsb jns sub stc xchg push lea xchg scas lahf retq fsubr notl sub mov and sarl je mov xchg movabs sti stos push cmp or cli rex.B repnz xchg jne (bad) jnp (bad) imul movabs push movabs and adc rex.R gs push pushq in (bad) jg xchg lret pop jrcxz js int nop cld imul sahf sbb stos xchg fldl movabs or push xchg pushfq popfq lock clc (bad) movsl sbb rex.WRX mov push sbbl cmp fwait popfq sub jle int rex.X cli sbb sahf callq jmpq xchg (bad) icebp (bad) lods sub int lahf callq mov (bad) rcl xchg mov mov movslq sbb mov std or ja mov and or data16 sbbl (bad) adc mov movabs pop cwtl (bad) jle (bad) test test push movabs (bad) sub jmpq scas and std data16 rex movslq pushq and out xor mov test mov (bad) pushfq rex.RX mov xchg cwtl (bad) clc (bad) insb xchg stos sbb mov (bad) sahf mov xor adc (bad) sbb repnz push add movsb nop out adc push pushq (bad) mov enterq (bad) movsl (bad) push sbb loope mov icebp (bad) xor and jrcxz (bad) mov (bad) pop xor out movsb (bad) jle mov insb rex.WR rex.RX jmpq and (bad) lock imul mov cmp ja outsb jge scas (bad) loope cltd pushq nop adc (bad) mov mov (bad) fisttpl data16 and add (bad) out divps cmpsl js mov rex.B movabs (bad) loopne sub xor in jne (bad) pop gs mov mov (bad) fldl (bad) movslq test stc insl popfq shrb test (bad) or xchg xchg retq mov xlat mov stos cwtl data16 (bad) scas lahf mov (bad) nop adc pop (bad) lock cmp sarb (bad) hlt jnp (bad) fsts (bad) push retq clc or ja add in and icebp retq adc insl enterq nop (bad) mov and rex.RXB jmp xor fistl outsl xchg je xor mov hlt cltd sbb rorb adc xlat cmp in cmpsb xlat xchg nop adc gs mov adc jge movabs (bad) and mov rcr add sbb (bad) (bad) (bad) jbe ss cmp outsl mov and int3 movslq or rex.RXB scas mov out je push (bad) sub xor mov adc mov jrcxz jle rex.X pop xchg or xchg adc (bad) mov rcll (bad) (bad) (bad) mov pushq pop (bad) xchg sahf and (bad) rex.WX pop in (bad) rex.WRXB rex.WXB xchg jge mov cmp mov mov lods rex.RX fbstp lods mov xchg lea rex.WX pop int jae pop mov xchg sub sbbl xchg (bad) jle mov pushq repnz nop sbb xchg jg std mov xchg sub imul (bad) scas fild insb (bad) (bad) sbb cmp test mov enterq jb pop cmp adc sbb fnstcw loope pushfq (bad) push or rex.WRXB pushfq repnz push idivl (bad) sub cmp cmp in ja loop xchg xchg push or (bad) (bad) mov fcmovnb cmp mov mov iret sbb sub cmpsl sub xchg (bad) insl mov (bad) repz lret sbb es cmp clc repnz cmp fcomps retq (bad) lock test repnz cmpsl popfq out mov (bad) pop (bad) stc sub in enterq or imul shrb sub (bad) adc lret scas push (bad) mov mov pushq imul jmp and (bad) or pushq rex.WX ds rex.WRXB rex.WXB sbb rex.XB or test (bad) xchg rex.X mov sub retq in cld rcr xor push nop imul clc mov jns xchg mov stos mov sbb jo pushfq ror rex.B cli or popfq out add mov shrb (bad) push or fcoms jmp xor ja outsl xor stc sbb push (bad) pop or mov pushq stos cmp xchg vpunpcklbw push scas sahf jge rex.B rex.RB fs jns sub mov sbb cmc jo (bad) int3 jne imul pop xchg jno xchg xchg push lahf jle sub sub rex.RB mov callq je (bad) push mov fisttpl sbbl out rol cmpsb adc movabs popfw rex.WRB sub adc cwtl fcmovnu xlat hlt decl and (bad) jg mov pop push (bad) imul movsb mov sahf add gs movabs (bad) mov movabs leaveq movsl pushq test fstps mov fisubr xchg add mov sbbl xchg nop sbb movabs or sbb rex.R mov and add fcmovb insl (bad) xchg lret (bad) (bad) mov rorl (bad) shll add fsubrl or jne mov push xchg jrcxz rex.R sbb mov (bad) sub mov (bad) sub jne cmpsl xchg sub (bad) int jo gs iret pop xchg cmp sbb stc mov sub mov xchg push mov fcoml sub (bad) jae jnp sbb cmp push (bad) rex.W pop lret mov xchg callq cmp int or and sbb mov jno enterq sahf mov callq lods xchg imul insl loope es outsl xchg jp xchg add xchg xchg cld (bad) xorb mov xchg sbb lock jb int test mov imul js (bad) xchg stos sarb jp sbb ds imul or clc movsb jl and xor lods movabs popfq fsts cmpsl lock sub sahf lahf and jrcxz divl jnp fidivr stos cmc pop (bad) (bad) rex.RX stos add rex.R callq push mov gs (bad) xchg movabs or (bad) push js mov and sbb jrcxz cmpsb icebp and mov (bad) xlat xlat outsb test fcoms (bad) rolb out and pushfq fwait (bad) scas push cltd test and sarl out rex (bad) lea adc pop js ds jge xor xchg (bad) scas (bad) and mov pop (bad) (bad) mov rex.WB xchg (bad) sub stc mov mov pop sbb cmc (bad) add stc cltd or (bad) jns xchg jo rex.R lea cmpsl hlt add movslq ds mov scas and outsl and fsubrl jp rex.WXB (bad) lods (bad) pushq (bad) fdivl rex.WRX rex.WR mov (bad) xor cmp xlat (bad) rcll rex.W (bad) add (bad) jmp mov in sbb lods pushq xchg std and xchg lret in popq add xchg rex.WX pop std out jge push add mov cltd sahf push (bad) pop pushq fcoml jbe sbb (bad) fcoml sbb (bad) movsl or (bad) xchg rex.WX lret leaveq xchg lea (bad) addb xchg cltd mov mov push cmpsl cmc (bad) (bad) jno xor mov sarl pushfq callq loop ja xchg test sub clc jnp insl fldt xchg int3 adc (bad) mov sbb nop (bad) cmpsb mov xchg jne adc adc cwtl cmp (bad) pop mov stos imul push push xchg std rex.WXB cmpsl (bad) (bad) cmp mov and movabs movabs xchg adc (bad) movslq test cltd adc mov ja retq movabs xchg xor pop (bad) add cltd cltd mov xchg or lods and addl or callq test (bad) mov fstl data16 ds pop mov jne mov mov fyl2x rex.XB lahf js fstl adc mov (bad) retq (bad) jns jnp cmp and out add lahf or test (bad) jno movq shl mov imul (bad) rcll pushq nop xchg pushq rex.X (bad) or jo pushfq (bad) fnstenv sbb xlat jb (bad) sub add (bad) movabs (bad) in cli add loopne pop (bad) add push ja pop pop and mov pop (bad) jmp (bad) (bad) jl rex.WR pushq xor negb or adc pop push movsl jge pop lods mov sbb and jo cwtl (bad) or (bad) add pop or (bad) add cmp mov mov scas in (bad) xchg ljmp es xchg (bad) icebp rex.W in movsb xor (bad) jnp rex.WXB cmp mov movabs test push cld sub fnop adc std xchg out mov add addr32 sub adc mov mov (bad) loope xchg sbb add and retq imul je ds shlb jle cmpsb xchg sbb insb (bad) pop or (bad) lahf mov adc (bad) (bad) pop fstpt (bad) (bad) jne sub lahf mov (bad) outsb popfq and vmaxpd cli icebp (bad) rorb mov in mov rorb divl nop (bad) pop popfq cmp in jae test (bad) es outsb cmp (bad) imul xor lret scas or or adc lea xchg pushfq mov add jrcxz adc nop retq xchg je add cmpsb mov rex.WRB rex.WRX jb (bad) cmpsl jae (bad) imul nop callq leaveq fucomp cmp pushfq js (bad) mov sub cmpsb imull xchg xchg push mov out cwtl lock push rex.RX fidivl pushq sahf mov (bad) mov rex.WRXB xchg (bad) mov mov cmc (bad) xor xchg (bad) rcrb (bad) add (bad) xor or sbb and mov outsb push mov loop loope mov (bad) stos fadds jge popfq or movslq sbb (bad) sarb (bad) cmp or xchg iret sti js xchg rex sub cwtl xchg test rex.WXB adc mov movabs pushq (bad) (bad) push test jmp frstor mov (bad) xchg pop ds mov (bad) scas xchg jnp (bad) movsb rex.WX jmp jrcxz push or rex.W push mov mov jb movabs push or rex.WXB mull rcl (bad) fist mov rex.RX or sub mov ja pop test cmp fbld (bad) add add xor mov or (bad) add hlt clc cmpsb pop imull rex (bad) jnp mov xchg add imul leaveq (bad) mov (bad) and xchg outsb push int3 scas sbb subl mov (bad) xchg rcrl and rcrl fild mov sbb add push (bad) (bad) clc (bad) (bad) sub in jne push icebp pop movabs xor sub repnz or sar fldl2t xchg cmp mov jmpq mul sbb (bad) (bad) clc and add or insb xchg test movabs xchg cltd push (bad) lock mov scas iret rex.WRB sti cmpsl jmp xor movabs lods ss test (bad) mov jg push cmp fnsave pop push cwtl jae xchg test cli mov in or rclb hlt stos cwtl pop sub xor fldenv sub enterq xor xchg adc add adc in (bad) lret sub movslq scas xor and or movabs jg xchg rex.R and cmpsb xor js test sahf cltd (bad) pushq cs in push xchg jge insl and xchg fild rcr iret adc leaveq xchg movabs scas vmovups pop fs or stc sahf xchg cmp rex.WR ja xchg lret push (bad) xchg fs jg xchg (bad) es sar gs insl (bad) (bad) ds xchg or (bad) fwait mov je fisttp (bad) (bad) (bad) add movabs rex.WX sbb rex.W es (bad) and mov rex.WRXB mov retq mov loopne fcoms ss pop jrcxz xchg cli insl rex.W (bad) rex.WRXB rex.RXB xchg notb push push and xlat rex.WR (bad) lret cwtl (bad) repz mov xchg outsb sub add lahf pop repnz cmp loopne std mov and je cmp pushq xor mov mov pop int3 and hlt rcll (bad) and (bad) rex.RX sbb rol jae cwtl and mov (bad) add rorl xchg (bad) movabs hlt mov cwtl adc mov retq mov (bad) (bad) jns jle in (bad) retq (bad) sub pop (bad) out jbe xchg rex.WRXB sahf (bad) (bad) adc cmpsb adc test adc jnp mov jne pop lods xor cmc fstpt js outsl mov ja rex.WRX or (bad) cmp pop pushq in ja mov jbe int jmp (bad) (bad) sbb (bad) mov pop sbb (bad) rex.WX and cmp ds xchg movabs push addr32 xlat cmp (bad) imul cmp lahf shrl gs xchg movslq mov pushfq (bad) ja xorb (bad) adc fcomps loopne rex.WXB xchg ljmp xor xchg (bad) popfq and xchg (bad) rex.RX retq movabs (bad) sbb add popfq rex.WX cmpsl xorl (bad) adc mov loopne ficoml xchg xchg mov cmp mov movabs lret (bad) rex.X sar cmp mov and imul push cltd ror cwtl insl icebp xchg (bad) fs xchg out movabs (bad) pop (bad) (bad) sahf xchg cli sub rex.WRB rex.WX loopne fcompl xchg (bad) sti leaveq movabs xor (bad) (bad) movabs cmc imul push xchg in repz cltd test fwait xchg fstpl in (bad) xchg jnp jae or sub rex.WRB xchg cmp je xor mov xchg cwtl pop pop decl rex.WR imull (bad) (bad) sbb iret jne fsubs pop xchg scas cltd mov movsl pop or sbb jle xchg push (bad) mov mov xchg subb cs ficom mov xchg lret stos (bad) test push callq insb xchg retq (bad) rex.RXB rex.WRXB xchg xor movslq je or or fs icebp (bad) loope mov lret pop cmp in (bad) outsl xchg (bad) push cmp sahf xchg vpmaxub rex.R (bad) xchg xchg movsb imul (bad) (bad) movabs mov rcrl sub or (bad) rcll cmpsl xchg xchg test or sub xchg (bad) iret loopne movslq (bad) (bad) stos sbbb lods (bad) addr32 jb stos lods add push and lock rex.RX pop imul adc movb rex xchg fwait (bad) popfq rex.X xor sub push (bad) jo xchg xchg rcll (bad) jp retq jnp sub (bad) test outsl add pop (bad) in rex.WRXB mov jp (bad) jmp ds popfq or mov jle outsl jrcxz xchg out push out jl rex.WB es leaveq cwtl (bad) jmpq stc (bad) jge (bad) cltd (bad) loopne push cwtl outsb fdivs xchg (bad) xor (bad) sahf jne mov jrcxz movabs xchg out int3 cltd out ljmp jbe popfq add pop test lret xchg sub repnz mov je nop add pop xchg mov imul lock lock rex.WR or cmp rex.WRX scas or (bad) cltd rex.WRX (bad) movabs xchg jo and xchg jb out fbstp mov test mov xchg (bad) xchg add sahf pop push cs hlt stos rolb xchg xor xchg pop xor loop sahf movslq popfq pop sbb adcb (bad) movabs lret (bad) mov notb jrcxz imul fsubp or and and fmul icebp (bad) add outsl stc and retq pop cmpsl mov loop cld mov idivb and sbb clc (bad) cmp mov stos add sahf outsl mov popfq (bad) data16 mov jge (bad) (bad) pop lahf pop pushq out sbb sub (bad) (bad) jp xchg sti (bad) rcll scas push add and (bad) leaveq movabs sbb add leaveq rex.RXB pushq movabs (bad) (bad) nop sbb mov mov adc mov in pop adc cmp shlb rex.WRXB jge fisubrl mov mov mov sub movabs (bad) cbtw push pushfq test jmp fucomip sub (bad) gs (bad) mov insl xchg mov sub movsb (bad) jg icebp ss add xor cmp ficom (bad) and outsb (bad) push and xchg cs mov sahf add jo notb cmp iret xor rcl jl sub pop insb (bad) (bad) (bad) sub scas imul xlat imul pop addb (bad) push (bad) fadds cltd outsl sahf xorb fstpl rex.WXB repnz pop (bad) std (bad) pop fdiv adc and rcll xor xor (bad) rex.XB movabs xchg fimul (bad) (bad) movabs mov insb mov lods data16 rex.W insl movabs xor rol (bad) mov sti mov lock (bad) rex.WRB or (bad) icebp (bad) (bad) stos mov int mov mull shr (bad) adc (bad) sub movabs mov (bad) xlat movsl sbb jb (bad) nop adc cmp rex.WX (bad) ficomp sti xor add test adc lahf movabs pushq lahf rex.RX push data16 out test and retq addr32 hlt rex.RXB xchg nop (bad) push push mov cltd in jne cmpsb jbe fidivr popfq nop imul loopne sti cld lret jns cmp (bad) lods nop (bad) mov jge std rex.WX or (bad) sub jl sub add (bad) outsl mov cmpsl (bad) sbb jmp pushq pop vmaxss sbb insb mov loope (bad) or sub lea sub mov and push (bad) (bad) mov ja idivl adc xor nop adc (bad) jbe fdivrl insb (bad) jne sti addr32 (bad) in mov push out xlat sbb cltd sbbl rex.RX popq add jb mov enterq xchg sbb sahf pop (bad) (bad) std fimull cltd shr shrb rex.WRX mov (bad) jbe (bad) mov sbb roll mov negl (bad) vorpd fdivl (bad) retq and pushq (bad) insl insl xchg sbb push rex.WRB jge mov sbb xor (bad) adc or xchg mov jno shlb xchg and rex.WRXB cmp pushq xchg int3 enterq lret sbb xchg xchg mov mov out scas popfq jns jo jrcxz int sub jmpq pushfq faddp rex.RX lock callq cmp test sti (bad) xchg jmp rex.WRXB int3 jo xchg cmp pushq xlat rex.RXB jge rex.WXB mov popfq jge pushfq ds (bad) adc push xchg (bad) ja out jmpq push fs cmpsl xchg pop stos ja and rcll clc enterq or (bad) in std out pop (bad) (bad) movabs push mov (bad) mov test sti (bad) clc in xor xchg movabs movabs sub es stos xlat mov xchg rex.WRX retq callq mov jmp rex.WX push scas jns mov mov and jg jmp movslq cmp xlat pop or sahf movl (bad) fdivrl (bad) mov xor mov in add sub stos cmp (bad) in and mov adc sub je pop int3 mov push add sahf mov and xchg adc and jmp decl (bad) test sahf rex.B rex.WRXB adc mov je xchg or ror out std and imul fwait xchg mov out mov (bad) xchg movabs cmp js jo pop adc lods xchg out (bad) loopne xor xchg xchg add mov (bad) movslq jnp clc xchg fsubrl rex.W (bad) xchg mov (bad) mov push cmp push adc imul add callq and sahf test adcl mov add (bad) addr32 (bad) push xchg mov imull scas mov imul (bad) mov clc or js in xchg (bad) pushq pushq gs sbb gs (bad) mov cmpsl outsb sbb cmp jp xchg (bad) out xor push (bad) lahf fstpl lret callq xchg or jrcxz js cmc xchg imul or sbb stos in jg test scas rex.WX cmpsb lret rex.X jb in movabs xor or pop xor or mov fidivl (bad) cmp repnz fbstp xchg pop xchg cmp (bad) gs mov mov fwait sbb lock sarb repz mov pop (bad) rolb cwtl sbb jge sub jb (bad) faddp xor (bad) mov mov push push mov xchg jnp cltd fs cmpsb xchg (bad) mov xor nop jno shrb enterq roll (bad) (bad) mov (bad) and jmpq (bad) pushq xlat lret xchg lea rex.WRX fwait xchg xchg mov sub loope mov (bad) sarb lret mov mov pop enterq dec jg xchg cmp adc rol xchg pop pushq adc fs and adc (bad) rex.W data16 sahf mov add mov push loopne mov out lock insl (bad) mov pop xor out rex.B and adc js push or rol mov adc jb cltd mov in mov loope adc and (bad) lods push cmp int3 cmpb movslq ficomp pop (bad) movslq adc movabs pop rex.WR rex.RXB add (bad) push xchg rex.X ds push adc xchg (bad) pop (bad) repz or imul xchg mov retq rex.WXB jge (bad) ja cltd out outsl sar pop (bad) insl cwtl jmpq and mov (bad) and (bad) pushfw sub rex.RX pushq fisttpll gs (bad) rex.WX lahf sbb lret jp rcr sbb adc jrcxz sub xchg sahf movabs (bad) mov and mov (bad) pop cmc (bad) andb (bad) sarb roll rex.WRX mov cs mov pop nop sbb (bad) mov mov xor xchg stos and (bad) shrl retq mov pop hlt jmp icebp jmp rcl (bad) (bad) (bad) (bad) addr32 out or (bad) rex.WRX rex.WRB fs jmpq (bad) (bad) icebp jle in (bad) insb (bad) lret rcll and rex.WXB pop xor lods cmp rex.WR jb xchg movabs and sbb (bad) jae movabs (bad) (bad) stc movabs xor pop data16 mov (bad) mov rex.WRB shrb mov jle rex.WXB xor fstl (bad) in xchg popfq fisub iret out lret mov fwait in push scas sbb pop rex.WR pushq pop (bad) fcom adc jo and in mov es rex (bad) sbb (bad) xchg jbe jb repz nop push out (bad) adc jbe loop rex.WXB (bad) jo pushq rex.WR negl adc int (bad) mov cmp mov mov rex.RB mov (bad) je lea and nop rex.RXB je cltd sbb rex.WX movslq jbe push ds popfq xchg shlb mov (bad) xor rex.XB movl pop mov rex xchg cmpsl ss cli adc xchg sbb or sbb add cmp mov sub sbb (bad) rex.WR xlat retq int (bad) popfq stos cmp pushq (bad) pop xor jo rex.RX movabs pushq imul retq ficoml mov movabs xchg rex.RXB ds lahf lret ja sbb xchg shl jmp movabs outsl pop sub lret mov rex.R xchg leaveq (bad) adc test push xor (bad) (bad) lock rex.RX mov fwait decw lods xchg loope test rex.WX mov cmp data16 (bad) (bad) (bad) lods rex.X rex.WRX (bad) out test push mov in xchg outsl jns test or rex.WRB cmp sbb rex.WXB xchg sub rex.X add pop (bad) or adc rex.WRXB (bad) mov lods imul fwait xchg loopne retq lahf repz rex.WB ss cmpl cmp (bad) or stos add mov xchg (bad) xor rex.WRB es cmp outsl xchg xchg hlt lret mov sahf sbb cmc mov jmpq test cld movl pop rcll rex.RXB jo jno mov scas and (bad) imul push int3 jbe or fwait cmp subb or xchg rcll imul jp (bad) xchg xchg xor cmp mov movslq sbb or sahf rex.WRXB cmp rex.WRB stos xchg jle pop (bad) cwtl lret jmpq adc loope add or and movabs adc (bad) jne fist scas sbb mov xor pop or xchg xchg roll pop xchg jne addl decl nop push xchg mov cmp outsb jnp cmp add or or jrcxz pop pushq mov pop movsl (bad) (bad) (bad) adc adc jns outsl jb (bad) idivl push movslq out loop cwtl (bad) jp lret (bad) xchg (bad) test (bad) test pop xor add xchg subl sub rex sbb icebp (bad) xlat mov push je nop pop mov negl outsb rex.W insb rex.WX cmpsl lea lods mov jg cmp test jo xchg lods mov sbb mov (bad) rex.WB xchg scas sub (bad) sub es mov (bad) leaveq xchg lods movsl pushq sarb sahf or rex.X test je and add jg xchg pop (bad) fistl xchg rex.XB (bad) lea ja mov and adc rex.WB scas xor rex.WRXB cmp xchg (bad) cmpsl xor mov sbb (bad) jmpq (bad) add (bad) rex.WRB and popfq pop jmp pop mov fidivrl fwait sub (bad) mov test lret add loop push mov sbb pop (bad) xchg jge mov jg movsl in rex.WXB push rex.RX lcall out jne fistp or rex.XB rex.WR movsl (bad) rex.RX add mov xor pop push sar cwtl cmpsb cmp rex.WRXB mov mov (bad) xchg (bad) rex.RX pushfq popfq ror xchg pushq pop test (bad) fcompl mov mov adc add outsl sahf and cli test rex.RXB xchg movabs cwtl out mov xchg fsub (bad) push and and stos lahf out test in lret cmc std pop popfq and (bad) xchg or xlat xchg (bad) nop ja pushq pop stos je xchg cld (bad) test jle xchg (bad) (bad) rex.RXB push movabs data16 (bad) jns mov sbb jbe push callq push mov xchg mov rex.RXB orb (bad) xchg int3 jge rex.WX sub mov stos and or jne nop lods adc jle push xor xchg test rex.WR es pushq cwtl jp stos icebp int3 addr32 xchg notl mov icebp (bad) adcb xchg xor pop test (bad) mov insl pop or rex.XB mov (bad) mov xchg rex.X cmpsl enterq jbe xchg (bad) imul sbb out cs add (bad) or cltd rex.WRX addr32 test (bad) (bad) (bad) loope lods (bad) lea (bad) rex.WRX xor retq pushfq add cmp rex.WXB (bad) fdiv (bad) xchg (bad) and (bad) (bad) sbb clc pushfq test jo xor fcomps cmp stc xchg mov xchg cmc add nop pop hlt movabs test fwait xlat pop hlt xchg cmp enterq cltd (bad) dec sub jge jb add movslq lods xor fsubs out xor xchg rex.R movabs and xchg (bad) enterq xchg add xlat cmpsl adc jrcxz xchg mov push or jmpq mov movsb (bad) ja fnstcw ss push jnp or or movsl popfq xor jno lret adc insb nop sbb pushfq lea mov rorb mov frstor retq xor adc push pop jae cmp imul lret jb imulb (bad) std adcb cwtl (bad) jl movsl or stos push fs cs xchg mov rex cmc roll repnz (bad) pop xchg sub or jge (bad) and xchg or callq fimull pop jnp sbb callq sahf add push (bad) fs in mov xchg xchg sahf fsubl rclb xchg xchg and jne out lods addl (bad) cwtl rex.RX movslq cmp (bad) jno (bad) adc add cltd (bad) adc (bad) mulb (bad) xchg xchg sbb pushq rex.WX xchg and callq cmc (bad) sub add xchg flds (bad) mov insb icebp (bad) adc movabs lret sbb xchg fldenv rex.WRX xor (bad) (bad) (bad) xchg push xchg negl jnp mov jmpq xchg stos adc (bad) stc out cld mov jne (bad) jae in ffree sti pop cld xchg rex.R xchg ljmp (bad) sahf xchg add insl or js xchg sbb nop jo insb movsl xchg (bad) mov sbb sub push rorl lret xchg mov scas (bad) pop sahf (bad) mulb xor data16 mov jnp rex.XB rex.RB xchg adc mov jno stc pop popfq and rex.WX jo nop cli jno push (bad) insb ss xchg stc pop (bad) vpmacsdql sbb sub cld mov adc sahf xchg xor fild cmp in (bad) and (bad) (bad) xor cmp iret mov outsl (bad) cwtl and jge in push test rex.RXB nop sbb cmp jg (bad) xchg xor xlat cwtl push idiv xor retq (bad) xor jnp fimull stc and add cmpsl jmp xchg rol xchg mov cli jle xchg (bad) in jmpq clc (bad) mov and outsl jbe push lods or int add cltd add cmpl in rex.WRB adc or jbe mov out mov lret (bad) test out addl adc rex.WB rex.RB jg cmp cmpsl mov jo (bad) sti add xchg outsl push xor callq jne movsb sub and flds mov callq and sbb and sahf mov rex.RXB loopne cs insl rex.WXB lock incl xchg add cmpsl mov scas pushfq (bad) pop cmp iret (bad) pop add push subl (bad) (bad) (bad) (bad) xchg je sbb xchg push rclb (bad) and mov sbb push pop (bad) sbb push js scas mov pop in (bad) push sub rex.WB rex.WX stc (bad) (bad) or rex.RB jnp mov cmpsb push adc push scas rex.RX negl (bad) cwtl enterq rex.RB jb cmp cmpsl rex.WB mov pop cmpsl rex.WRX repz xchg xlat jp in lock xlat shrb jns mov stc cmp sbb push and adc jno mov xchg (bad) roll jp pushfq (bad) and ja sbb in movsb mov or es rex.X jb (bad) xchg or pop in rex.RXB (bad) stos sub movabs (bad) xchg faddl lods jb pushfq js add sub adcl cmp nop sahf add (bad) sbb gs push pop and (bad) lea xchg (bad) je movabs gs roll mov xchg push sahf (bad) or xchg (bad) and add (bad) mov sbb rex.WRX mov pushfq and mov imul cwtl xchg sti rex.X js (bad) (bad) scas xlat mov xchg sbbl xchg jae xlat rex.XB jnp (bad) pushq add (bad) clc (bad) icebp (bad) insb mov xchg (bad) pop testl rex.X ror flds xlat adc mov rex.W rex.RX xchg push in xchg loope xchg mov mov (bad) mov ds (bad) out sbb jmp scas mov ja gs fistpl or add cmpsb test (bad) pop getsec rex.XB (bad) or (bad) mov fdivr test stos outsb rex.X mov adc mov rclb std in xchg jo test test jmp iret xchg movslq rex.WXB int3 (bad) rex.XB pushfq insb rex.R xor (bad) fdiv negl adc ds mov (bad) xor fndisi(8087 rex.W push xchg sub pop pushq or ja stc (bad) std movabs sbb or rorl icebp xchg (bad) xchg out push cwtl (bad) (bad) ficom lret cmp push xchg and movabs cli mov (bad) cmp push pop lahf in cmp fstl callq pushq jrcxz mov pushfq fsubrs (bad) out pushfq push test xchg sbb xchg cmpsl rex.XB xchg sbb sub or (bad) xchg (bad) (bad) pushfq pop cs jae and mov stos push (bad) (bad) mov (bad) jle mov in rex.XB (bad) cmpb xchg out callq sub int3 mov loope imull xchg pop scas rcrb xchg cmc xor jmpq (bad) mov or adc (bad) xchg or (bad) xchg adc popfq in (bad) pop cmp mov xchg (bad) sub xchg mov lea pop jbe rex.W rex.WXB insl sbb jp,pn pop mov test stos mov sbb cltd in xchg nop rorl sahf rex.WR rex.WX xchg cmc stos push mov loope sub or sbb adc rcll add ss adc jbe fcomip rex int out rex.WRB pop stos rex.WX data16 rex.WRXB jb (bad) or mov rex.WRXB mov int cs mov enterq mov cmpsb (bad) scas sbbl in sbbl jne mov out and callq and push lods jge outsl leaveq cs retq sub xor shlb (bad) push movabs lea (bad) (bad) pushq or (bad) (bad) in rex.WXB mov jg add shrl rex.WB (bad) add or sbb and decb mov div outsb mov xchg stc rex.XB pop jg mov jg xchg pop repnz cmp imul (bad) leaveq sbb (bad) cmp (bad) cmpxchg sbb movslq pushq (bad) push retq in mov pop (bad) cmc push lea xchg rex.WB cli add fisubl mov (bad) sar xchg (bad) xlat lods mov xchg jo sbb ficompl imul mov (bad) icebp in je push rex.WRXB in mov add sbb hlt sbb movslq xchg xchg add xlat test rex.R (bad) xchg repz loope sbb add mov jge rex.WRB out (bad) push pop xchg sub xchg xlat callq pushq jnp jrcxz xchg jp mov sbb jbe (bad) outsl xchg out rex.WR cltd adc rex.WRXB xor mov xchg rex.WB es ds xchg mov nop xchg shrl out cld jo xchg xchg rex.WRX xchg (bad) sbb retq xchg (bad) cltd xorb mov push (bad) loop andl (bad) or imul pop xchg (bad) sahf mov (bad) sbb idivl xchg callq int3 lea (bad) push xchg cmovs adc adc fwait adc or xchg (bad) jrcxz iret adc insl xchg rex.WX jns (bad) adc sbb and xchg push mov xchg (bad) sbb hlt (bad) pop (bad) lahf movslq mov or (bad) stos rex.WXB rex.WXB mov (bad) (bad) sbb push test cmpsl sub mov cld add insb ja sub mov scas cli xlat pushq push jl lret rex.R adc xor sub and jp (bad) xchg lock cmp negl and push mov (bad) jbe fwait test rex.R xchg frstor test (bad) stos jno jp in adc (bad) cmp insb (bad) push (bad) pop rex.WRB fs jne popfq rex.RXB loop jns sub pushq jg cmp js mov cmp movslq adc ficomp mov adc lea popfq sub test rex.WX cs cmp cwtl movabs rex.B movabs cwtl movb (bad) xchg mov mov xchg jrcxz in stos (bad) rex.R negb lock and imul mov xchg adc add and mov nop (bad) (bad) cmp adc rex.WRB lret (bad) pushfq test jge pushq jmp (bad) push movslq mov mov xchg mov ss rcrl cli add (bad) insl pop adc mov ror xor fsubrs movabs out add loopne scas mov fisub icebp cmp nop mov stos (bad) push (bad) cmp mov sub mov movsl (bad) push jns retq bswap fnstenv mov sbb rex.WR cli movabs sub fimul push (bad) jbe mov jno idivb (bad) scas sub lods rex.W mov jg xchg sbb jp rex.W sub or gs xchg cmp negl outsl and and push jbe rex sub fnsave cmp (bad) rorb loopne cmp in cmp jnp gs mov (bad) lock xor jge mov push fnstsw data16 cltd pushfq sub lea mov xchg rex.RXB (bad) cmp cmpsb rex.WB xchg push pushfq and (bad) (bad) insb cwtl jnp lret adc test out pop sti and scas rcrb push cs (bad) (bad) jnp mov movabs outsl sahf lret jg insb xchg (bad) pop jo (bad) mov rex.WX and jle rex.RXB movslq pop test movsl andb adc (bad) pop pop xor pop add (bad) lock pop movabs pop sbb or gs rex.WB fs xor jp imul sub xchg and loopne mov pop (bad) popfq mov push mov jne lock mov shr std test leaveq sbb scas je (bad) xchg movabs xor (bad) (bad) mov sarb pushfq imul (bad) int3 flds (bad) rclb scas jg xchg std or mov cli mov mov mov (bad) xchg push mov nop xchg mov or pop pop rex.RXB xchg hlt cmp xlat (bad) out add fdivrp iret scas mov out xchg mov icebp adc addb insl push cmp nop in (bad) rex push cltd xchg jrcxz add mov xchg rex.WRB fistl rcll pop pushfq sti rex.WB push loope xchg lret (bad) stos xchg push sub xchg rclb data16 pop mov pop xchg clc sahf jmp andl sarb xor leaveq jnp stos xchg lret notb (bad) fistpll cmp pop rex.RXB outsw ficomp movslq fs jae jmpq or sub out je stos xchg (bad) movslq std sti cmp jne sub stos callq mov mov js je (bad) shrb xchg mov or xchg sbb adcb xor outsb pushfq and xchg movabs pop in std (bad) mov rclb jae mov (bad) imul add insl sahf movabs (bad) shl cli xor xchg stos sub xchg icebp and std add rex.WRX jg xlat lock lea and test rol lret lahf out push cmp (bad) in xchg push outsl sbb xchg cmpsl xchg addr32 mov popfq in cmp movabs (bad) (bad) xor adc push in push (bad) mov rex.WRB stos xor xor xchg cmp out (bad) rex.XB sub rex.RXB clc cwtl mov addr32 sbb xchg roll xchg in enterq std pushfq (bad) xchg imul cld jnp (bad) cmpsl sub pop lea outsb out out pushfq sub (bad) pop fmull pop lret sbb rex.WXB xchg movsb movabs (bad) sbb movabs (bad) out push scas lock add mov or xchg (bad) lods (bad) test sub fdivrl pop out (bad) mov rex.RXB movabs pop scas xchg in cmp (bad) addr32 xchg lahf lret loope imul xchg xchg xlat enterq pushq shll out int3 adc xchg (bad) mov (bad) xor xchg and jp xor (bad) cmpsl push pushq (bad) cmp xchg add insb adc xchg sub (bad) jrcxz and xchg (bad) adc callq mov jp addr32 xor and push jle rex.RB and (bad) (bad) mov rex.XB repnz xchg sahf sub xor (bad) (bad) icebp (bad) mov rex.RB lock movabs sahf test (bad) (bad) mov mov xchg movsl (bad) jb popfq sbbl sahf add or xlat xchg sahf sub scas mov (bad) and (bad) jge (bad) fsubs xchg std adc sbb movabs (bad) cmp outsl and xchg movabs (bad) xor sub cmpsl rex.X rex.WX lock (bad) lret rex.WB jns xchg out jp movl jne push stos xchg and rex.RXB add adc (bad) mov pop (bad) xor mov xchg adc fs cmc xchg mov push lods and xchg lret test add push imul xchg shrl xchg xor cs movslq sahf (bad) int3 pop jnp callq (bad) (bad) (bad) jno xor xlat fdivrl add xchg and sarb rex.WR rex.R insb (bad) callq mov add push xchg lret ficompl or pushfq in adcl rex.WR xchg loopne push out rex.W test sub xor test (bad) rex.WB mov (bad) xchg cmp stos mov addr32 pop fstpt xchg (bad) (bad) clc pushq js scas mov add mov sbb icebp (bad) (bad) retq (bad) (bad) (bad) (bad) (bad) or (bad) mov icebp ja cmp (bad) fldl or xor test (bad) cltd lret jae pop (bad) movabs rex gs rex.WRX sahf orl adc scas sahf (bad) pushfq (bad) fstpl (bad) xchg clc cmp (bad) cld xchg cmp rorl frstor (bad) (bad) pop xchg movsl pushq sbb xchg (bad) (bad) movsb lret fmulp adc cmc push pop mov and fnstcw imul xchg sub nop pop jae sbb or loopne retq pop xor loope and sbb mov in (bad) mov nop scas mov adc adc (bad) test (bad) lret sbb (bad) cmp add pop cltd ficom (bad) add (bad) sahf xor mov adc xchg pop rex.WRB rcr mov mov (bad) cmp pushfq (bad) retq testl xchg hlt rex.WR sub xchg xchg pop or je jrcxz xchg loopne (bad) retq fwait jno mov int3 insb mov push add movsl cmp pushq test (bad) movabs xchg xor (bad) mov negb xchg sub shrl sahf (bad) in in (bad) xor loope scas sbb movsb mov (bad) lods xchg addb mov rex.B mov (bad) cmpsb jo rex.WRX cmp mov sahf jns sbb xchg lock cmpsb pop and test rex.RX ja cmp (bad) stc push imull (bad) sub ds outsl and mov loope iret xor loope xchg enterq (bad) ss movabs adc (bad) pop jne (bad) sub pop int3 (bad) xlat addr32 retq cmp subb (bad) xchg scas (bad) mov pushq mov rex.W cwtl (bad) sbbb rex.WB xchg jge xlat in push xchg xchg rorb jp ficom mov sti repz lock mov mov xchg rex.WR xchg movsl xchg pop pop int rex xchg jle pushq rcll shrb (bad) mov jne mov mov jo sbb ds stc stos push retq xchg jp pop or xchg mov out (bad) (bad) repnz add xchg xor (bad) xor (bad) (bad) sub test add data16 movabs sbb rex.X (bad) jl jb rex.RXB mov rex.WB xchg (bad) enterq ja jge insb (bad) mov mov rex.WRX rex.WRB xchg movabs push (bad) jno pop (bad) sub (bad) xchg stos xor fisttpl xchg (bad) or (bad) (bad) and loop popfq pop in push test rex.WB (bad) fs cmp mov pop (bad) or or and fcomps mov xchg je cwtl (bad) sub jo int3 loop movsl imul (bad) jo xchg xor popfq lea adc (bad) jb sbb movabs and mov sbb cs xchg in add push mov rex.RXB jrcxz add rex.WR rex.RX rex.W xor rex.WXB rex.RXB xchg mov mov movabs sub xchg rex.R mov xchg push or adc sbb sbbl push and stos cli iret sahf xor imul fbld add rex.XB or sbb adc add cld lahf movsl ss sbb xor incl adc xchg xchg scas pop es cmc xchg insb (bad) jg movsl repz insl xchg rex.RXB cltd adc jno sahf xor cli gs (bad) mov rex.WRX (bad) movabs (bad) loopne sub or loop or outsl mov cli clc movslq rex.RB adc jmpq cld (bad) enterq fstpl addr32 mov lret push lock leaveq rex.XB mov sub mov outsl xchg fucomi fwait pushfq out jrcxz mov rex.RXB addl or retq sbb pop test pop jg xchg sbb xcrypt-ctr cmpsl sahf rex.WRXB stos out rex.RXB adc xchg sbb sub xchg movabs mov cmp (bad) xor cmp (bad) xchg (bad) pop sahf fildll xchg sbb roll pop sub push (bad) nop adc mov xchg xchg incq cli pop lea movhps and pop jle or rex addr32 mov (bad) jb (bad) (bad) (bad) xor in mov adc mov (bad) ja cmpb out xchg (bad) out test test rex.XB (bad) lahf mov cwtl rclb imul xor mov xor iret add sbb cld rex.WX imul mov gs orl retq imul rex.RX jmp adcl in loop sbb pop (bad) mov jne xchg (bad) adcl gs xchg mov and xchg lods pop or sbb (bad) and mov test (bad) rclb js adc roll mov mov mov sbb movslq jg (bad) cld xchg sbb test mov xchg sahf jmpq addb xchg scas icebp adc fstpl mov rex.WRB mov movabs rex.XB scas xor mov cld mov jne cltd pop cli xchg jmp cmp mov test sbb in xchg rex.WX xchg movslq jg popfq fisttpl xchg imul movabs jne xchg jb fldl movslq movabs popfq mov or loope int jae cmpsl sub or pushfq (bad) (bad) fwait movsb jg mov push (bad) mov movslq pop std xor test jne loop rcll rex.WRX jno adc rcrl push cmp pop addr32 in movabs (bad) (bad) adc out xchg (bad) shrl (bad) rex.RXB cmp and jmp mulb or insl xor retq xchg fldl push and jae (bad) cld sub insl cltd shufps out xchg or xchg sub push jnp mov (bad) pop xor movsl mov xchg (bad) and cli xchg sub xor outsb and (bad) mov out rex.WRB sub mov sub (bad) outsl popfq je lret (bad) lret pop rex.RB xchg nopl cmpsl rol rex.RX cwtl test callq rex.B addr32 mov and (bad) mov loopne xchg and or xchg sub xor adc xchg mov testb vpshufhw mov ss stos sahf jae xchg in out fistpll mov cwtl cwtl loop notl rex.W rex.WRXB fs cmp fildl xchg mov adc xchg push je sbb in push repz lahf loop loope cwtl pop mov jae movsb (bad) xlat adc push mov int jmpq cmp xchg ja sbbl fbld add xchg sub sbb scas (bad) push cmc push stc cmpsb pop je adc xchg in sub rex.WR lock rcr (bad) adc rorl sbb movabs jp (bad) pushq sbb pop and je mov sub gs retq (bad) and xchg (bad) (bad) add xchg mov sbb rex.X push xchg push mov pop (bad) mov cltd mov jns cmp add sbb cmc xor xchg (bad) cmpsl adc callq jge rex.RX (bad) and adc sub pop negb xchg xlat cltd maxps xchg jp xchg xor and xor xor mov mov pop mov ss notl (bad) cmp ds push (bad) lea cmp (bad) jae adc fs cmc adc lods xchg fwait mov (bad) shlb pop (bad) pop pushfq sti sbb mov jnp imul jmpq sub xchg and jmp rex.RXB lret (bad) lret cltd cs lahf cmp sbb jg mov cmpsl push imul mov mov insl imul rex.RXB xchg sahf lret and (bad) (bad) movsl (bad) (bad) pushfq and pushfq sbb or (bad) jge push mov in mov xacquire sub (bad) jmp cwtl mov mov mov mov cmc (bad) shrb mov jnp (bad) mov or (bad) (bad) and sahf popfq xchg stos xchg or (bad) int jae and xchg rex.WB (bad) pushfq gs sub lret rex.WRXB stc lea repnz out sbb xchg fcmovne sahf mov adc movabs (bad) (bad) xor popfq lods jmpq fdivl adc cmc xchg sub lods xor mov rex.WRX outsb push adc xchg pop mov scas jle push cli mov (bad) mov rex.WRXB jo and jbe in lret rex.R mov ss jnp fdivrl repnz retq jrcxz nop xchg cld test jp stos push xor rex.W (bad) pushfq xchg or lods fisttpl (bad) gs in movsb (bad) rex.WR imul pushq add rclb pushfq rex.R faddp test push cmp jns lahf (bad) sub movsb retq xchg xor jrcxz jmp lea xchg rex.RXB rex.RXB loopne cmpsl popq cltd (bad) out jbe and jl sub (bad) adc mov and insl xchg enterq rex.WX rex.WRX je mov sbb xchg xchg out adc andb jae and mov mov (bad) loopne (bad) lock fistpl (bad) in xlat cmp xchg fist (bad) hlt stos pop (bad) (bad) pushq jl pop int rorl xor xor push setge or (bad) int mov nop lods pushq mov rex.W jle (bad) rex.WRB (bad) sbb jmp pop xchg (bad) repnz rex.XB mov push xchg test push test jmpq mov sahf sub ss mov int3 ss mov jne jns movabs mov xchg xchg push add loop (bad) and (bad) xchg clc es (bad) movabs or xchg jns mov cmc fcoms in callq divb movabs fisttpll cmp mov (bad) jno in es seta mov jno push xor rex.B test cwtl xchg (bad) pushq scas sub rex.RXB mov rex.WB rex.WXB pushq rex.WXB enterq (bad) (bad) cmpsb mov sahf cmp (bad) adc xchg mov xchg (bad) push sahf pop pop rex.RB fwait in sysenter ja popfq sti js cmc hlt adc cmpsq sbb xchg mov test rolb (bad) and icebp ds sub (bad) sbb (bad) movslq repz push jmpq (bad) cli sti clc (bad) in rex.R cwtl out adc rex.W rex.WX (bad) retq and xchg sub int xchg fcoms xchg push in sub in in fistl (bad) lea push and xchg pushfq (bad) in repnz (bad) fwait push adc xlat imul xlat jae xor xchg sub (bad) lods cli xchg (bad) psubusb jb enterq xchg movabs (bad) shrl sub xchg callq push cltd sbb adc outsl (bad) rorl pop cmpsl (bad) sbb push fdivs movslq cltd scas and jae mov cli int3 xchg push (bad) hlt (bad) xchg sti push icebp int outsl mov push cmp sbb scas push (bad) cmp rex.WRB sub fstpt (bad) add xor jmpq mov push xchg (bad) icebp iret (bad) sarl jg sahf mov stos and mov mov sub sbb rex.WX or sti shll cwtl mov pop jb scas addr32 insb loope out add xchg (bad) repz movsb fs cld push xchg or idivb mov rex.WB pushfq cmpsl (bad) fild cmp pop rex.WXB test (bad) xor (bad) add xchg lret and cmp stos leaveq xor adc hlt mov adcb xor adc fildl sarl rex.WRB pop cld addr32 mov movabs adc push ss loope loopne pop jae (bad) in rex.W movups push (bad) movsb mov xchg push out mov jae jo in out test rcrl popfq jmp push out jg sar cwtl add leaveq addr32 lret (bad) cmpsl nop pop loope (bad) pushfq pushq sub jae xchg pushq mov iret adc xchg ja movabs (bad) repz (bad) faddl pushfq cmpsl out xor data16 rex.WRX (bad) (bad) stc (bad) mov pop callq and xlat and and cmp sbb (bad) cwtl and pop push (bad) rex.WR (bad) rclb xchg rex pop jo jo fwait jbe cmp addb adc addr32 lea rex.WX lods movslq retq sbb jrcxz js es (bad) jno mov rex.R rcrl cli and rex.WX (bad) fistpll or pop mov notb sbb nop pop and lea mov incb jl mov rcrb (bad) lods jrcxz hlt test sub (bad) popfq ja lea sbb decb lock mov rcll cs (bad) mov rex.RB rex.X int3 and xchg add mov (bad) insl iret adc xchg xor fwait out xchg jle ds push mov xchg xchg sbb sub out pop xlat mov or xor mov loop pushfq pop cmc test adc int (bad) sarb (bad) cmp retq ffreep xchg stc xchg (bad) mov rex.X (bad) callq movabs notl (bad) ss jle ja rex.WXB mov rex.W push cmp rex.R jae xchg mov cmc cwtl jnp jns (bad) (bad) addr32 test mov popfq mov pop fs xor or rex.WXB repnz retq xchg shrl rex.WB lock lea jnp outsb loopne xchg mov je insb movabs rex.X loopne fs (bad) jb jne fisub movsb adc pushfq lahf (bad) or jo cmp mulb cmc add mov adcl xchg (bad) xor (bad) xchg (bad) or fucomp sub jrcxz jns xchg movsb sub mov mov xchg rex.WX outsl adc and adc popfq movabs repnz xchg icebp movabs cmc ds fs imul sar sbb (bad) fistl (bad) xchg loop cltd pop test add rex.WRB pushfq (bad) (bad) movabs ss rex.WB or pop adc xchg jp xlat test or jge cmp jbe scas (bad) movabs (bad) lock jns jnp retq (bad) sbb cmpsb adc jrcxz cs xchg lods push cmp pop (bad) ss jns xchg mov repz xchg (bad) push cld movabs rex.RX mov mov (bad) push mov movsl std mov rex.WR (bad) fdivrl repz cmpsl (bad) cmpsb mov test fptan xchg out stos xor mov push xor fwait popq xchg (bad) movabs cld mov rex.XB imul (bad) mov or xor (bad) (bad) cmp pop mov (bad) (bad) cwtl xchg push retq rex.B cmpsb push cmp xchg (bad) xchg sbb movabs jrcxz insl js (bad) adc adc sbb rex.WB rex.RX adc (bad) int3 (bad) xchg mov mov (bad) xchg jmpq out cltd adc mul mov xchg (bad) cmpsl es outsl es xchg add add movslq lea mov (bad) out jnp jmpq mov loopne or xchg ss jg xlat lea (bad) (bad) fwait jo jp mov add lret stc popfq rex.WR xchg je sub cmp push (bad) (bad) xchg fldl scas scas xchg rorb loopne (bad) outsb sbb fs xchg cmp jbe push negl and push adc loop (bad) xchg cmp lret push out xchg movabs jmp test rex.RXB (bad) pop sahf adc test push loop outsl lahf xchg scas rex.WX fistl (bad) (bad) mov push fs xchg mov movslq stos xchg clc stc sbb jae fwait mov cwtl (bad) jle mov jnp jo lret movabs xchg xchg lahf rex.WRB adc cmp enterq movslq jne sahf test retq (bad) movabs in mov xchg fsts (bad) (bad) fwait out rex.RX ror or (bad) je mov clc rex.WRXB rex xchg jne pop rex.W test add leaveq mov (bad) movabs xchg fnsave lods negb or scas retq rex.R std (bad) fdivrs movabs jmpq cmpsb rorb loope xchg sub sub loopne insl xchg or repnz or push sub rex.WXB add jae or sbb xlat mov imul fdivrp jl addr32 cli (bad) xchg stos fs mov ss xor scas cld push jb cwtl mov cltd lock jno (bad) scas test cmpsl rex.WRX test rex.WXB loop mov (bad) (bad) push sub add cwtl pop enterq xlat cltd xchg cmp xchg or lods mov sub cmpsl (bad) mov sbb mov jb jge pop (bad) cs cmp iret mov (bad) push sbb (bad) fs sbb (bad) add fistpl in sub rolb mov loopne roll add sbb (bad) lods lret jl xchg (bad) mov adc jmp cli xchg adcl jrcxz cmp int (bad) int3 jmpq mov sbb fsubrs outsl xchg add movabs repnz mov jnp data16 movsl out sahf cmpsb insb xor pop pop add push movsb sbb in rex cmp or xchg xchg lahf iret rex.X push enterq cmpsb xchg sbb sbb (bad) mov test cmp or (bad) adc lods xchg sub pop (bad) (bad) jle cmpsl jns fmull jg sahf rex.WR imul es (bad) add callq (bad) movsl cltd rcll decl lea fistpl pushfq rex.XB movslq or adc adc and lcall jrcxz rcll (bad) rex.R xor (bad) movabs (bad) sub jbe sub test scas lods (bad) and sbb (bad) and ffreep cmpsb in cmpb xchg mov add jmpq jae (bad) (bad) (bad) pushq stc je jrcxz fisttpl xchg es out (bad) xchg pop xchg mov rex.XB fwait imul movsl icebp (bad) sub sahf add adc (bad) pop xor callq rex.WB seta xchg repz push pop in negl (bad) movsl xor adc (bad) in rex.X pop (bad) (bad) mov jno xchg xchg and (bad) jbe jbe (bad) jbe outsb movabs (bad) rex.X pop (bad) rex.WR sti add pop rcl sbb cmp movabs adc adc xor fldenv (bad) xor xlat fmuls push addr32 sbb (bad) pop lock push movabs jmp (bad) gs rex.WRXB insl rex.WRX adc xchg movslq and add clc rex.WB sarl adc movabs pop mov (bad) orl cmc xchg jl xchg sub loope addr32 addr32 (bad) rex.RXB sub int3 sub cwtl fwait sub push movabs rex.RX and lock movl mov adcl xadd (bad) (bad) (bad) je xchg (bad) loopne (bad) mov xor pop xor cmp and (bad) and (bad) (bad) push mov (bad) cltd or out insl test shll adc (bad) or and or add (bad) negl xor (bad) rclb sub clc repz repz rex.R rex.RB mov ficoml fimull jg jge add (bad) movsb cltd test add fildll (bad) xor outsl (bad) int rex.WRX in or rex.WRB rex.XB nop sbb (bad) (bad) imul (bad) iret mov cmpsb xor lret adc movabs movsl pushq movabs (bad) hlt rex.WRX ficoml and fs int3 fstl js (bad) sbb (bad) (bad) sarl (bad) movsb insb adc leaveq (bad) rex.RXB adc ja int fidivl xor (bad) or imul cwtl lret mov rex.WRXB push int3 ja push test pop (bad) xchg (bad) jno (bad) movsb xchg (bad) and cmp test xchg nopl xorb in mov clc sub adc cmp popfq cmp cmp mov repnz mov cltd movabs (bad) (bad) mov rex.R cmp push (bad) repz pop movabs xchg jbe xor movabs movsl (bad) jp (bad) rex.WB ss retq rex.R xchg fistpll (bad) fistpll outsb nop jle jb in rex.WRX insb lea retq pushq cmpsb scas mov (bad) callq sbb rex.WRX xor or rex.RX xchg xchg notl cmp xchg fwait push leaveq (bad) mov jb imul pop push xchg (bad) (bad) jrcxz mov jp test test and imulb (bad) sub icebp (bad) lret insl (bad) in enterq pop rex.WR mov insl xor test je movabs (bad) rex (bad) iret insl loop pushq repnz cltd cmpb add jrcxz adc (bad) je sub cs pop js fwait rex.WRX sbb xchg sti xchg mov (bad) enterq adc adc xchg xchg popfq (bad) mov (bad) imul mov jge (bad) mov int loope xchg (bad) push xchg xorl movabs (bad) icebp xchg (bad) es xor xchg xchg sti addl outsb add loope mov (bad) cld lods xchg pop (bad) mov push (bad) cltq retq (bad) (bad) and and repnz push cltd (bad) xchg xchg out sbb xchg test adc jns or out lods testl pushq pop (bad) pushq (bad) test push xchg in cwtl imul mov sbb jns xchg out loopne int adcl mov fldenv idivb xchg scas rorb negl imul mov out (bad) xor in and (bad) pop (bad) movslq and cli mov jl neg mov fstl in stos and sbb movsb hlt xchg add adc pop xchg or mov or scas movabs rex.WR (bad) pop nop sbb std fldenv mov cltd add mov imul xchg jns stos (bad) mov push cmpsl rex.WRXB add cmp nop scas (bad) lret ja ds mov sub movabs shr xchg stos xchg pop in rex.WB and xchg scas rcrb mov mov add not jp xchg mov lods in xchg and je icebp pop push (bad) xchg and jb enterq (bad) or or sub mov mov xlat popfq mov xor out rex.RXB or (bad) (bad) movsb xchg mov loop xchg cmpsb fldcw hlt sub pop adc sbb sahf (bad) rcrl (bad) (bad) movabs pushfq cli int3 lahf mov and (bad) xor stos and add insb callq int3 cwtl insl rex.WX mov sbb sub (bad) fucom add pushq (bad) div rex.X sahf out cmp push sub pop xchg and imul clc (bad) jmpq mov (bad) sub test jrcxz add sahf jge iret jmp lods cmp cmpsb adc ficompl (bad) sarl mov adc (bad) pop ljmp (bad) negl rex.RX rex.RXB movslq mov push callq xchg sub int3 sbb sub rex.XB mov xchg (bad) (bad) mov sbb outsb or xchg and xchg rex.WB pop fsubs push lret xlat ja xor orb pushq xchg pop movslq andb (bad) xchg jmpq xchg lods cmp mov cwtl jp sbb loopne jns rex.WRXB movabs xor push fwait jne pop movabs callq imul fs push stos xchg cmp cmpb sbb (bad) fwait popfq rex.B push (bad) pop pushq (bad) leaveq push cld pop cmp cwtl sbb xlat sub mov testl xchg jle add (bad) (bad) jno jmp andl or push jge sbb stc xchg ja fsts out xchg (bad) xchg outsb (bad) pop xchg adc jbe mov notl jge cmp stc sbbl sbb cmp jge and or lret ficoml or out (bad) jmp pushfq xchg scas sub retq loop fdivl (bad) cli andl xchg xor (bad) adc jp (bad) mov iret data16 xor mov fsubr xchg mov push stos mov xchg xchg out adc mov pop (bad) cmp sbb add jge rex.RB and movabs push ja outsb xchg push (bad) (bad) push retq (bad) xor mov movsl mov xor mov and scas cmpb fmuls fcoms jns xchg popfq mov or jg jmpq xchg lock pushfq and out jno or mov cmp sti cli pushfq clc es in sahf (bad) jno (bad) mov rex.R (bad) sahf pop int3 movabs mov rex.X rex.WX jo jmp mov xchg (bad) imul mov xchg out (bad) ss and (bad) (bad) sub xchg (bad) sbb loop xchg rex.WRXB pushfq and mov or sti jg (bad) fwait movabs xor rclb mov adc mov int scas callq fisttpll xchg fdivl fildl mov fsubrl xor pop nop and retq xchg mov lret loop cmpsl or movsb jne add movabs mov in fisubl xor rex.R cmp rex.WR fldcw adc test fsubs (bad) (bad) callq pop fisubrl fs or mov (bad) sahf rex.WXB mov xchg (bad) stos add fildll jl adc (bad) sbb movabs mov mov fiaddl rex xchg loopne sbb mov out adc (bad) fbld lods sbb rex.XB xor or push jae sub (bad) sub (bad) push enterq repnz out push add or (bad) lret rex.WRB (bad) jrcxz test pop push (bad) jl sahf mov enterq sbb sub mov movslq pop pop jns mov negl (bad) add fwait divl sbb fdivrp (bad) xchg (bad) callq push hlt rcrq (bad) rex.X fildl jbe pushq xchg imul clc and (bad) test fcmovnbe mov push stos add xchg scas sub negb (bad) adc popfq cmc (bad) jbe imul jnp mov mov and out push pop xchg (bad) fsubl pushq fisubl retq pop fimul rex.WRX rex.B stc rep (bad) push fnsave (bad) insl rex.WRX add out jnp movabs (bad) pop insl add xor in mov mov add fldt xchg pop (bad) ljmp adc fisubr xor cmp xchg xchg ds add fwait std popfq pop nop sbb (bad) sub mov (bad) sbbl (bad) (bad) rex.R add sarb xor push test jp imul (bad) int out imul movabs repnz sub jmp (bad) xchg jbe adc sbb andl pop sbb retq lods xor mov cmp sbb imul shrb lock cli retq rcr jnp mov mov pop jne pop rcrb jmpq (bad) mov stos (bad) mov out pop in (bad) (bad) (bad) or rex.WRXB imul (bad) scas (bad) rex.RB (bad) fwait xor lahf (bad) fisttp (bad) retq xchg cwtl data16 movabs and xchg fnstenv iret adc rclb movabs rex.WRXB or pushq push cmp xchg (bad) (bad) loopne clc or stos addr32 xchg fimull jns movabs (bad) mov xchg ljmp scas add cmp data16 sbb rex.WRB xchg mov mov rcll and test xchg xor or mov (bad) sahf pushq xchg movsb cwtl sahf pop jb rex.WRB xchg mov pop jno xchg jne shr mov add (bad) mov jle mov std xchg stos adc lods test cmp jb jno pushq rcrl (bad) in pop out xchg in sub (bad) int3 adc jnp mov mov retq sub xchg (bad) sub (bad) sub leaveq in xchg pop out xchg or xchg icebp rex.WXB movabs (bad) sub loopne jrcxz xchg and (bad) clc pop cmc lods cld movsb xor push gs out lea xchg mov jge fs mov mov xchg add sub add sub outsl cld ds adc enterq mov adc adc (bad) (bad) rex.WB rex.WR fs sbb fisub rex.XB sahf mov pushfq cmp adc (bad) cltd (bad) (bad) jo (bad) std (bad) mov fstp push fistl sub enterq xchg lods retq rex.WB sbb pop repnz iret add pushq int3 mov fstpt fwait add add lea pop sbb jnp and and rex.WB movabs (bad) mov rex.RX jns or nop mov (bad) jne out mov xchg nop rorl jrcxz lcall orl (bad) (bad) and mov jrcxz movabs sbb (bad) sbb mov mov cmpsl loopne jle mov repnz js xchg mov push outsl xchg (bad) data16 (bad) out add std and mov adc loope add (bad) xchg lahf or jns jrcxz fucomp mov mov pop (bad) (bad) test rex.WRXB add rcrb push cmp (bad) movslq xrelease (bad) jmp xchg (bad) imul mov pushfq enterq (bad) fs xor (bad) cs mov retq pop xchg callq stc sbb mov push xchg sahf outsb (bad) mov rex.RXB xchg (bad) adc xchg cwtl push add xchg jle mov callq xchg mov pushq jno mov xchg pop and (bad) sbbl test xchg rex.B shr adc and shr mul fimull xor push insl sub mov mov mov (bad) sub jnp mov cld nop insl cmp leaveq (bad) movsb xchg pop sub fwait pop icebp mov xchg (bad) xchg stos mov sub and fistl fwait es (bad) insb in xorl cmp (bad) cmpsl pop xor fwait repz xchg rex.WB jne jo xchg jnp retq (bad) xor pushfq pop (bad) push lret nop movabs sti xorb sub rex cmpsl stos out mov mov sbb xchg and (bad) movsb callq stos mov mov and or rex.WR fwait enterq nop fidivrl and (bad) movabs icebp and fldt (bad) rex.X jae xchg and stos cli push gs fidiv movsb loop (bad) mov jge rex.R adc enterq sbb rex.WX fcmovbe in xchg out retq lret rex.RXB lock sahf mov push addr32 test xchg ds cmc add movabs (bad) (bad) lods repnz or ja push xchg xor (bad) sbb iret sbb cltd leaveq pop mov mov cmpsl and out xchg (bad) callq sbb push xchg jg rex.WB ficomp fcmovnu mov jp (bad) mov add rex.RXB imulb sub mov pop fbstp jle (bad) mov and callq mov or scas rex.WR rex.WB jp movabs rex.WX add lret xlat rex.RXB and and repz imul (bad) scas repnz sahf (bad) enterq jp push jb xchg (bad) push test cwtl sahf (bad) jo movabs lock ja mov iret cli add cltd xchg mull add scas sahf out js adc rex.WRX sbb xchg fist mov insl popfq lea (bad) (bad) (bad) rex.X nop fs fsubr scas addr32 jne pop clc out fist jns sbb xor sbb jmp (bad) imul loopne pop push cwtl adc outsl and adc pop (bad) jb loope add xchg push add jb pop (bad) pushfq xchg lahf nop mov addr32 xchg mov adc sbb (bad) movabs ficoml xchg xor sbb mov jae add add stos pop (bad) xchg pop xchg enterq sbb iret movslq rex.WB rex.RXB sbbb cmp loopne iret rex (bad) xchg adc jl cld xchg repz rclb jae movabs stos rex.R (bad) rex.RXB stos scas add xlat (bad) (bad) mov in (bad) or lods fdivl sbb insl (bad) test ror ss (bad) xchg xchg rex.WB pop mov std mov fisttp xchg subb xor cltd adc mov rex.RXB out (bad) mov loopne xchg sub push movabs lret (bad) icebp push in xchg retq (bad) movabs out popfq jmp movslq sub (bad) adcl rex.WX (bad) xchg lahf or mov movb sahf rex.W cs rclb cmpsb mov shll rex.RXB fdivrp andb stos rex.WRB (bad) push xchg adc xor ss out in lahf xchg (bad) xor xchg push and jnp push push (bad) insl movsb fidivrl out push cmp mov sbb test sahf (bad) pushq xchg icebp xchg add or rex.WR test rex.RXB xchg loope in adc mov sahf cmp (bad) roll jnp (bad) xchg cmc leaveq retq pop (bad) sub mov (bad) repnz (bad) (bad) in mov (bad) xor xchg jb sti (bad) (bad) loope (bad) xor popfq nop adc loope or lea jno (bad) xor lock lock negl movslq sbb xlat mov or pushq stos sbb es out jo out iret rex.WX or std mov rcrb gs setns rex adc mov movabs loop (bad) (bad) in gs pop rcll mov sbb (bad) xchg adc (bad) jae sbb (bad) mov pop adc (bad) iret mov jmpq add rex add jne repz repz sbb (bad) (bad) lock hlt data16 insb (bad) (bad) fs pop and loope mov (bad) ds mov ss fs fnop lock rex.XB loopne (bad) outsl (bad) ja rcll (bad) pop movabs (bad) or (bad) mov out fs jae (bad) mov jge or movsl (bad) lea xchg (bad) jl and (bad) jnp sbb adcb imul lock pop xor adc sbb xchg mov je movabs (bad) or mov fs mov mov loope pop fimul (bad) sarl fs rex.WRXB ds out movsb jge pop jo cld rex.WB or (bad) push mov insb nop lcall outsb add insb rex.WRB mov pop fidivl fucomi mov imul shrb lea mov scas sarl cmp (bad) orl popfq mov mov and xchg jmp or repz sbb mov xchg sub scas mov (bad) xchg fdivrp xchg (bad) lods pop mov movsb rex.XB movsb and xchg (bad) in add (bad) retq insb outsl negb (bad) (bad) lret pop iret xchg sbb or sbb xchg xchg jle and xchg sbb jns pushfq movabs sbb xor xchg add xchg cmp insl (bad) pushfq sub mov pushfq cmpsb mov sub movabs xor push (bad) lods es (bad) sub jb outsl cwtl cmp pop rex.WRB add repz (bad) cwtl std xchg sub pushfq cld leaveq fwait test (bad) (bad) fisttpl out out xchg adc in cwtl mov jmp cld pop (bad) add movabs xlat (bad) pop xchg mov xchg fnsave xchg mov movabs (bad) cmpsb cmp xchg mov mov movabs (bad) (bad) in gs cmpsl xchg cmpsb mov rex.WB ror sahf push mov pop (bad) (bad) xchg fidivr in xchg xor ss cmc xor jp ds xchg jrcxz shrb scas (bad) mov lea and nop (bad) mov fidivr sub pop or (bad) sbb lret push cwtl repnz rex.W (bad) cmpsl rex.WRX repz mov mov xor xlat and mov (bad) jl mov (bad) outsb sbb cmpsb add loope (bad) test stos outsl (bad) add pushq xchg test xchg retq mov cli test mov xor insl mov sbb add pop scas (bad) or retq jg cwtl mov mov xor and rex.RB fcoml or add add xchg fldenv fldt (bad) cwtl pushq fnstsw rex.WRXB cld (bad) add nop (bad) (bad) (bad) rex.B test sbb sub xor retq test jg mov pop pop or jns mov outsl (bad) ja mov or popfq loopne iret pushq pushq fildl and mov xchg jo scas retq neg jg (bad) jle mov (bad) (bad) in lods std int3 test pushfq rcl xchg and rex.RB rex.RXB rex.WRXB xchg sub retq add lods (bad) xchg loope sbb callq movabs retq or movabs pop xchg add sbb or repz cmc jb push (bad) xchg xchg rcrl mov and and xchg addr32 or test leaveq loope rex.W rex.WX xchg cmp pop std add lret mov pushfq movslq mov (bad) negl pushfq xchg pop mov cmc movsl add push sub out sub sub adc sahf mov (bad) lret push sbb rex.WRXB lods movabs (bad) test divb out adcb sbb movabs adc retq xchg scas jne mov divl scas in in and xchg lods cs or jnp cmpsl mov cmpsb popfq cwtl jp mov (bad) mov pop (bad) mov jbe cmp (bad) (bad) lods stc ficomp jae add cs sub (bad) xchg or rcll mov lea (bad) pushq add (bad) retq gs out rex.WRXB mov adc mov xlat stos sti pop mov mov je or (bad) sti and std or sbb jrcxz jae pop (bad) jle cmp or out rex.RB ficomp mov xor (bad) xchg (bad) and imul (bad) sysenter mov jge mov jb fisub cwtl xchg cmp rex.RXB xchg imul popfq (bad) pop imul pushfq or sbb cltd lea rex.X repz (bad) (bad) (bad) mov scas and notl sbb rcrb adc pushfq sbb jns mov repnz test add jb mov repz push jo cmpsb (bad) setae loopne shlb mov lods xor lahf orb and in (bad) (bad) int3 sbb xchg repnz (bad) mov add stc callq scas rex.WB callq (bad) ficom xchg cwtl cmp fcoms add mov out (bad) xchg mov test rcrl push and popfq (bad) std add or sbbl rex.WXB movsl sbb ficompl (bad) or cs (bad) cwtl jb insb xchg loope mov out cmp push sbb lahf add test mov sub jmp in jg jae (bad) fnop mov and jg mov jo jmpq int rex.WRB lea sarl rol scas cli clc shlb pop cwtl (bad) test xchg movabs (bad) mov jnp (bad) lea mov cmp (bad) or lahf sbb cmpb rex.W sub (bad) jne jrcxz and or pop cmp xchg mov rex.RX hlt ds rex.WX popfq int adc cmpsb push movabs push adc jae sub in (bad) cmp in rex.WRX (bad) insl movabs repz (bad) (bad) rex.B jae adc out frstor shrb movsb and add adc hlt jnp rex.WR mov cmc sarl icebp es (bad) adc cli and repnz (bad) xorl cwtl jg (bad) imul pop add iret mov (bad) mov (bad) loopne scas xor loope (bad) scas insb js add mov fist sub (bad) rex.WRXB in jrcxz nop cmc sar pop imul jrcxz sahf fs xor outsb lock cmpsl (bad) (bad) xchg pop or repz cwtl or (bad) xchg sbb jae and xor loopne (bad) rex.WRX and lock loope mov (bad) pop in negl adc and mov xchg out mov (bad) cltd xchg mov insl cmc in roll rex.X jle (bad) pushq jmpq mov add (bad) movabs jg rclb xchg shlb out (bad) lock cltd jnp out (bad) xchg add in (bad) pop (bad) xlat jb pop repz ds movabs cltd push outsl (bad) xchg (bad) adc rex.WRB (bad) movsl rex.XB shrb (bad) cmp xlat or fwait rolb sahf cmp jmp mov fidivl movabs incl nop mov ja rex.WXB (bad) movabs clc xchg movslq sahf rex.WXB fidivrl (bad) (bad) stos roll xchg xchg mov push push (bad) xchg mov (bad) xor push test add add data16 and subl imul xchg push retq cmp jbe or rex.R rex.WRXB std addr32 mov xor or push push pop xchg add enterq test test mov pushfq sti cmp (bad) nop fcoms lods (bad) xlat imul mov movslq and push (bad) sbb add fdivl loope movsb mov sub rolb jne cltd and js mov fidivl (bad) or clc retq xor (bad) movsb cmc movsl push movabs rex.WRXB rex.XB xchg pop (bad) loop pushfq lods (bad) sub scas fdivs cltd pop movabs out rcll in mov cli pop testl pop xchg (bad) (bad) jge sti jae jnp lcall xlat sbb cmpsb xchg xchg scas push (bad) push add mov (bad) and xor xchg mov cmpl fsubrs mov xor add push jg insb (bad) repz sub shrd loopne sbb (bad) fist mov sahf adc scas addr32 mov gs xorb cmp andl mov cmp pop scas adc (bad) jg add movabs sub xchg jle jae xchg (bad) mov (bad) add movslq test push iret cs cmp pushfq jp ds rex.X rex.RXB bnd xchg pop out pop (bad) iret loop lea movabs xchg in push jb std fwait xlat xchg loopne (bad) pop insl cmpsl popfq mov movsl js mov xchg or jb and mov pushfq sbb pop ffreep or (bad) pop xchg jg (bad) xor pushfq mov rex.W or mov retq (bad) scas xchg rex.WRXB cld lret int xchg sub insl sahf sbb or (bad) xchg push jnp loopne lret jp (bad) (bad) adcl mov fistpll mov (bad) rex.W sbb imul (bad) adc notb cmp (bad) test test mov (bad) rex.WB (bad) data16 shr and xchg pop (bad) insl (bad) test rex.WRX mov lahf out mov xor xchg shll pop mov mov cli hlt mov (bad) (bad) jnp stc sbb sahf lods rex.W adc fwait push adc cmp jrcxz movabs in pop stos xchg xor jno in pushfq ja mov pop (bad) mov mov rex icebp (bad) adc jp cmpsl rex.R popfq jp (bad) callq (bad) in pop in sub cmpxchg pushq xchg lahf xchg push (bad) or cbtw sbb adc (bad) pop jge pop push gs xchg push cmp loop or test (bad) (bad) jl rex.R rex.WR and rex.WX rex.W rex.RXB mov adc xchg cmp rex.R movl jp rclb jae (bad) pushq (bad) imul pop pushfq and jbe xor and ja rex.X stos rex.WRX (bad) cld (bad) xchg outsl mov push lret (bad) test (bad) xchg lods rex.WB sub and jne mov mov sbb xchg xchg jrcxz retq in pop and xchg and (bad) clc or loope (bad) addr32 (bad) mov (bad) outsl test lahf xchg pop xchg pop div (bad) or sahf xchg jb push out sub rex.WX out loopne (bad) rex.XB rex.RXB rex.WXB xchg je xor sbb rex.WRB (bad) pushq and xchg fdivrp lret sarl shlb addr32 and fild cli pop or mov repz outsl mov push mov sub rorl xchg sub std sbb cmp xor xchg cwtl mov mov jae in (bad) pushq cmpsb xchg sub pushq sti cld xchg and jnp in in shll xchg xchg and or loope loopne rcll sub jns pushfq callq mov (bad) (bad) movsb sti (bad) xchg cmp popfq (bad) rex.WRX push rex.WRX repz (bad) ds mov mov imul gs (bad) (bad) mov pop clc (bad) cmpsl and test lods cmc push add (bad) fwait scas (bad) xchg cli jg push and pushfq hlt movsb push cltd jl imul cmp or ja js rex.RXB out test xchg movsl mov movabs movabs (bad) lods push mov xchg int mov jae xor or mov roll xchg mov (bad) movabs push gs movsb xchg (bad) xor sub xchg mov je (bad) (bad) xchg fidiv sti (bad) addb sahf (bad) rex.XB movabs push mov (bad) pop jbe add or sbb xor xchg and (bad) mov and (bad) jmp fdivp add retq xchg xchg xor (bad) fnstsw cmp xchg callq stc in sub sbb and std (bad) xor addr32 stc (bad) jns lea mov cmp and rex.R (bad) (bad) repz data16 rex.WR or rex.RXB or mov ror fldenv (bad) scas push xchg push jmpq sbb mov rcll je lea addr32 rex.WRXB jnp pushq cmpsb pop rcr movabs stos xor (bad) add callq xchg jne andl callq rex.WRXB (bad) mov loop (bad) gs rex.WRB cmp sub sti jrcxz and jae jo rex.WX rex.X cmpsl mov pushfq adc rex data16 cmp mov movabs rex.WB sbb mov xlat (bad) jmp xlat xchg (bad) rex.WRB movabs cmp pushq enterq adc cmpsb nop jnp mov rex.RXB fwait or sbb mov rex.RX jnp fstpl (bad) xchg mulb xchg lret pop lods xchg cmp lret rcl popfq mov xchg (bad) notl (bad) (bad) imul (bad) stc adc mov repz xchg xchg movsl rex.WRXB jl rcrl popfq pop pop jbe fisub fwait jg repnz jno or pop (bad) (bad) jo push xchg cmp mov jne test sbb test fwait cltd rex.X js cmp adc loop sbb pushfq (bad) mov (bad) es rex.B xor and lret mov push scas ja hlt orl rex.WXB repnz sub lret test sbb movabs test divl (bad) mov xbeginq pop movzbl popfq jl pushq addr32 (bad) add in mov cmc pushfq or (bad) enterq jae jnp cltd stos ja sub jmp outsl lret pushfq cmp fmull jns (bad) and pushq (bad) pop and nop scas in test in xchg (bad) and rex.X xchg (bad) (bad) pop xchg shr lea sub mov je xchg (bad) cmp push mov rex.WRXB jne lea and (bad) loop rex.RX movsb lods pop popfq lret fdivs sahf (bad) push repz (bad) lea lock lods je imul jmpq xlat xor cwtl (bad) cmp je clc (bad) (bad) (bad) xchg jge (bad) test xchg out leaveq es xor sbbl mov mov (bad) adc cmpsl and pushfq or adc sbb rex.WRX cmc stc jg icebp add test xchg jrcxz sub lods mov loopne adc clc (bad) cmc cmpsb pop (bad) cltd rorl std movabs retq xchg (bad) cmp int3 movsb rex.WX adcl (bad) sbb cltd in nop (bad) add xchg xchg iret rex.WXB xchg outsb mov in push fimul mov pop (bad) or nop cmp data16 adc rex.WX jb add cmpsb (bad) cmp sahf movabs movsb ja adc (bad) pushq pushq adc add shrl pushfq jle insl pop xchg (bad) pop pop test fnstenv mov xchg add pop fisubl rex.X ja outsl loope movabs int3 sub (bad) (bad) mov in (bad) imul or loop callq (bad) notl xchg lea push sub sub in icebp mov sti cmp (bad) adc lea jae ja xor enterq data16 sbb xchg xchg jo retq add sahf (bad) cmpsl cs scas mov push jns cmc in mov cwtl mov rex.WRB rex.RB xchg lods cld rex.WXB loope in mov (bad) insb mov jne movabs pop or or lods out std rex.WXB (bad) nop (bad) pop (bad) (bad) or jmpq cld mov mov (bad) pop rex.X mov test loop fstl lock and jl lahf xor (bad) adcl jmp cmc jmp (bad) pushq and xchg add shrl pop mov sbb (bad) pop cmp lret (bad) imul enterq int mov add sbb jmpq xchg sub imull adc nop rex.RXB movabs shll sti mov outsl jp mov xchg movabs rcrl enterq rex.RXB rclb movsb jmp xchg sub (bad) insb mov rex.WB nop cmc cld mov sbb adc jns sahf xor sbb push movabs push addr32 cltd xchg cmc rex.WRXB pushfq mulb mov xchg push (bad) mov (bad) add adc repnz fidivrl mov sbb cli rex.WRX stc add xchg sbbb cltd imul cwtl std xchg (bad) jno rex.X or (bad) scas (bad) (bad) rex.WXB pop and (bad) fcoms movabs jno cmp and rex.WB sbb (bad) mov jl lret (bad) pop stc sbb push sbb data16 mov sbb (bad) mov (bad) fisub xor lea sbb data16 js lods (bad) pop rex.WX std add pushq mov in lea int3 rex.WRXB rex.X (bad) lea sub pushfq and cmpsl fstps xchg lock in ficom sub cmc add popfq pop rex.XB pop (bad) cmovnp insb movsb fs rex.WX or outsb xorb rex je loope mov (bad) fstpl ja test pushfq ja popfq enterq cmp xor jg jmp loope (bad) fistl stc jmpq or test in jle (bad) xchg sbb mov xchg mov lock cwtl retq add xchg lret jne cmp jl iret test and sahf scas cmc shl xor xchg mov sub jns xchg sub loopne rcll mov (bad) je js mov cwtl repz loopne jno mov jmp jg test mov cltd out push cwtl (bad) sahf jnp mov in stos xor or push ja (bad) loop xchg fimull loop pushfq (bad) mov jo add idiv movabs sub (bad) xchg hlt xchg cmp nop ss jrcxz push scas sbb stos sarb es data16 lods idiv xchg xchg lock out rex.RX mov fstpl rex.RXB scas add mov data16 movsl xchg rex.WB movabs xchg fidivrl xchg mov rex.WRXB fimul sbb jp xchg sbb (bad) int cs xchg pushq mov (bad) xchg add outsb loopne jnp movabs outsl (bad) scas cwtl add iret fnstenv in shl jmp cmp sahf retq and mov xchg mov ds xlat lock jmp cld xchg xchg mov stos movslq iret mov stos (bad) (bad) (bad) repnz test add mov jrcxz jp rex sahf sarb clc shll (bad) xlat (bad) pop and movslq cmpsl mov and rex.X rex.WR xor mov xchg sub mov xchg stc scas subl scas fimul insb fildl xchg mov imul jp adc push rex.R rex.WRX pop rex.W xor test sahf and adc sub fimul add (bad) rex.RXB and jnp mov pushq and (bad) (bad) gs rex.WRXB movsl jp callq xchg ds xor xchg cli cmpsl jmp movsb xchg jo or xchg test and cmp or movslq push adc outsl (bad) (bad) sahf xchg mov jae xchg jb (bad) cwtl push (bad) add cltd sub xchg fwait movsb sbb test jne cli sbb (bad) add cmc cwtl xchg pushfq bnd xorb (bad) leaveq loopne xor and (bad) rex.WRXB mov add jno sahf jrcxz je xchg xor push sbb sti repz add mov xchg enterq mov movabs test jns xchg mov push clc adc mov (bad) rex.WXB rex.WRX mov outsl loop fldcw movsb push sub cmpsb leaveq rclb enterq rex.WRXB retq mov mov jmpq (bad) sbb popq mov add sub jns es xchg frstor pushfq (bad) js nop rex.R outsl (bad) stc xor cmpsb sub xchg cwtl je jae and sub (bad) xchg lret fcmovb (bad) (bad) or (bad) insb cmp stos rcrl xchg sub cwtl mov mov pop in (bad) movabs (bad) mov xchg xor pop sub mov outsb cmp rex.WRB rex.WXB and rorl (bad) stos (bad) and imul movb cmc retq xchg push (bad) sahf iret repnz xlat jmp (bad) jg scas (bad) jge movsl shll retq xchg mov out rex.W rex.X scas jmp ficoml fstpl leaveq pushfq rex.WX mov movsb jbe rorb mov cmpsq ss rex.WB adc xchg add fisttp push (bad) int3 (bad) mov (bad) icebp (bad) lret (bad) retq jae pop movsl sahf subb lea rex.XB rex.RXB mov mov push lret out js pop sbb nop xor pushq cmpsl sahf rex.RXB jle jbe mov add repz jbe or outsl pushq jg scas jmpq mov and mov nop orb adc xchg jnp adc (bad) lods mov stos mov (bad) jmp pop imul jbe sbb int (bad) rorb rex.WRB jo fstp pop lahf retq ja xlat rex rex.WX cmpsb add adc sbb mov mov sbb jo rolb loopne or rex.R jg mov fsts rex.RXB (bad) (bad) mov rex.WRXB cmc insl out xor add sbb nop adc (bad) hlt cltd jb add callq out and fbstp (bad) int3 rex.B callq sbb rex.RB jmp ds adc cmp xlat or pop xchg xchg fs rex.B mov add fmuls xor jmp callq mov lret shll retw lods and popfq movsb and add out outsl mov popfq xchg (bad) jbe stos mov cmp fbld or mov cmp (bad) (bad) cmp enterq (bad) out mov (bad) pop popfq testl cmpsl mov (bad) decb in rex.RX xchg mov scas movslq xchg movabs sub mov jmp rex.RXB cmp xchg sub iret mov adc and in imul (bad) fmul sbb repnz (bad) jb (bad) (bad) (bad) add in js cmp (bad) (bad) out sbb ja movsl xchg (bad) (bad) movabs ss int jnp (bad) xchg cli retq fsts cmp pushfq jbe lea ds mov in fstpl (bad) xor fsubl adc cli or and (bad) pushq test mov cwtl jl add sbb mov or mov xchg xorl cwtl cmp pushfq rex pop (bad) add mov roll cmpsl (bad) or movabs (bad) lret in pushfq push rex.XB (bad) jle movabs (bad) in mov stc (bad) in jae,pt pop xchg mov (bad) (bad) xchg (bad) xor mov addr32 pushfq xor sbb xchg mov pop cld adc seta mov orl (bad) or insb pop pushq ds xchg (bad) cmp fs xor mov (bad) add sti icebp xlat jg jl mov xchg jne jrcxz cmp adc loopne (bad) or adc xchg scas cld xor xchg jg lret cltd mov gs insb xor loopne decb adc ljmp mov in push (bad) (bad) (bad) jae cmp lea (bad) or out movabs xor (bad) push jg push sbb pop xchg xchg loope adc hlt pop xchg icebp lahf (bad) fs int fwait (bad) adc rex.WRB in add fldt jle xlat test xchg adc (bad) xor and in add xchg mov hlt addr32 rex.WRX (bad) xlat xchg push in jge or xchg (bad) mov xchg sbb (bad) (bad) pop sti fwait xchg in xchg fadds insl sbb xchg add push nop out lcall sahf imul rex.WB sbb push repz (bad) fisubr xchg (bad) cmc rex.RXB adc cmp mov pop push rex.WX sub stos lret test (bad) and test and popfq pop outsb jg sbb lods xchg mov jns fcoms jl lret sbb cmp jns imul or fsubs lret lods pop test andl mov insl cmp xchg rex.R outsl hlt in rex.WXB xchg pop (bad) out popfq push (bad) movsb in (bad) jae retq xchg and cmpsl callq rex.WXB jmp xchg cli xchg rex.RX xchg popfq xor jns xchg push sub xchg clc out mov test rex.WRX xchg jnp jp hlt xor loopne cmpsl (bad) xchg iret rex.X rex.R (bad) jbe (bad) xchg (bad) test (bad) and pushfq orl test movabs (bad) mov xor xchg pop test mov rex.WRX sahf out cli add popfq (bad) (bad) test add or mov mov cmpsl xchg and cmpsb scas sub mov or xchg (bad) rex.WX fldcw js xchg jmpq (bad) (bad) and std push or add (bad) xchg fcompl pushq clc repnz fdivs cmp lods rex.RXB xchg jno insb pop je cltd mov xchg add rorl pop xchg (bad) push push popq (bad) mov or push mov mov mov push fs mov xchg xchg rex.RX push (bad) js cwtl retq and out xchg sbb xchg xor mov jne rex.WXB sub pop outsb rex.RB cmp push adc repnz pop xor fnstenv movslq xchg fs xchg pop jb or out rex.WRX rex.XB nop test pushq sbb rex ja insl mov rorb test nop push cmpsb clc icebp decb mov xchg sub mov mov cmp add (bad) xchg cmp mov in imull nop fiaddl movsb cmpsl lock jrcxz and movabs test loop int sti xchg jle rex.B cs addl jmpq pushq (bad) mov xchg insl mov sub sbb repz divb pop (bad) cmp in (bad) lock xor adc sahf icebp xchg push in cmp sbb rex.XB rex.WR push or sub pushfq pop push xor addr32 sahf rex.R jmp sbb xor es cwtl (bad) xchg fsubl adc sbb sbb callq lea sub mov push outsb mov xchg pop mov sbb pop mov (bad) jae mov sbb (bad) movslq (bad) movabs jns pushq stc (bad) rex.B rex.XB rclb movslq mov gs lret stc (bad) mov repz movslq add pop jno rex.R lret mov (bad) jle test loope sahf rex.RX rex jae jp cmpsl lods add sub xchg push sub cmpsb cmp jnp mov imul fcomps outsb mov repnz pushq outsb xor pop jmpq nop imul lock add jae (bad) add fwait sbbb cwtl mov xchg loop mov andl (bad) (bad) sub pushfq add js shrb (bad) ss mov int lahf lods popfq (bad) sub fstpl jg cmp fwait xchg (bad) out std cmpsl or (bad) or outsl sub (bad) cmp outsl (bad) xor movslq (bad) data16 cwtl movsl in rex.WB nop jo (bad) (bad) test adc add in rex.WRXB fsubs cli pop scas mov xchg sbb test (bad) sub mov lock cmc scas xchg ss cltd rex.B xor shrb (bad) lods xchg adc movabs addl (bad) fimull rorl xchg jnp pop xor xchg pop ja lea and (bad) nop sahf rex.WRXB jae (bad) xchg xchg stc cmpsb jne mov retq cs mov rex.WRXB outsl mov cmp mov add ja fdiv ftst sub loop xchg fucomp mov fistl mov fsts xchg mov sub (bad) adc nop icebp cs fistpll je out fsubs add and rex.WR sbb test (bad) movabs adc rex.WX xchg cmpsb pushq add push iret mov (bad) rex.W in test nop fldt out lret or xor ja pop sahf and loopne adc out sub adc adc xchg rorl cs negl repnz jmp xchg (bad) or hlt and xor repz scas in (bad) adc shr movabs gs lods sbb insb or fs and cmp xchg rex.WX xchg fidivrl xchg push lods adcb (bad) mov or xchg add (bad) jns rex.WXB mov lods retq and (bad) sbb pop xchg loope push out lret (bad) jno ja fnstsw pushq paddw xchg or rex.WRX in xlat data16 xchg push rex.WRXB (bad) push (bad) rex.B or mov roll addl movabs retq hlt (bad) sbb rex.WR xor (bad) xchg popfq mov rex.WRXB (bad) (bad) mov sahf loopne bnd (bad) hlt (bad) xlat fidivrl (bad) (bad) xor stos nop sbb jrcxz push mov cmpsl mov jne (bad) scas xlat pushfq fisub rex.WRB add sub retq repz nop pop clc mov lret movsl pop (bad) jmpq nop mov cwtl cs mov sub ss mov xor add rex.WX cltd fwait add rex.B mov clc fwait rex.RX xor movsl pushw setge gs adc js,pn mov (bad) xor icebp add (bad) rorl rorb (bad) int (bad) fsubl push lret mov rex.XB rex.R in mov clc xchg scas and rex.RXB fisttpll push xchg (bad) or mov (bad) xchg push mov pop jle cltd cmc jle movabs sub xchg out cmp xchg or pop mov xor mov (bad) (bad) rex stc push mov pop loop xor std rex.RB xchg sbb movabs (bad) lret enterq (bad) (bad) loopne xchg js rol mov rex pushq cmp or ja int3 imul mov (bad) sahf rex.W (bad) push out es (bad) (bad) (bad) and (bad) icebp mov out push jp adc (bad) adc fs and fisubrl movabs retq mov cmp sahf xchg rex.X push mov xchg mov jg (bad) movabs packsswb xchg nop sbb iret (bad) movslq out fwait retq jnp xor (bad) js nop (bad) lret push and jg mov cltd test movsl jb in mov rex.XB xor rex.RB movsb (bad) sahf nop adc andl rex.WRB pushq jge loop or jmp add jns push sbb in rex.RXB (bad) (bad) add (bad) test (bad) xchg (bad) mov rex.WRX xchg xchg cld loopne (bad) mov xchg xchg shl retq mov xchg rex.WRXB fs cmpxchg mov (bad) fisubr jl and insb xchg sar pushq (bad) mull vcvtpd2psy jne cmpsl (bad) jrcxz xchg cmp (bad) mov xorl retq adc rex.R fwait imull mov xchg and ss push mov (bad) and ds movabs (bad) cmp fwait xchg xchg ja retq out sbb xchg rex.RX loopne mov es xchg xchg xchg mov mov (bad) out (bad) cwtl mov add ror jmp pop fwait movabs in xchg repz stos (bad) leaveq fstpt xchg rex.XB (bad) mov pop xchg lret mov mov and mov xor rex.WX sub sti loopne mov xchg popfq and (bad) loopne in leaveq mov stos (bad) addr32 mov sbb cs pop push xchg (bad) rol movabs enterq mov (bad) loope lret rex.RX or pop rex.WX rex.RXB fcmovnb sub and loope mov test fdivrl movslq (bad) mov fisttpll mov lea std rex.RX (bad) retq std add sbb xadd loope sbb and in rex.X sub jo (bad) mov data16 loope mov (bad) outsb (bad) lret cltd movabs imul (bad) adc out jg sub mov insl scas (bad) jno xor sbb xchg pop iret pop fcompl push testb scas movsb (bad) xchg rex.R (bad) out or xor rex.W repz jno out (bad) push sub cmp test std adc addl (bad) pop insl imul push (bad) in xchg xor (bad) adc cli imul outsb add cmpsb orl pop out mov (bad) (bad) rex.RB addr32 jp mov sahf xchg (bad) mov (bad) jo sub rex.XB rex.WR xchg (bad) rex.X mov jno xchg movsl or cmp test (bad) mov out pushfq cwtl cld or pop push fdivrl es and xchg insl addr32 rcll (bad) xor retq jg cmpsl pop or out push nop je imul sahf (bad) cmp xor gs mov pop or xchg xchg push pop xchg jle jb sbb xchg mov fisubr rex.R (bad) (bad) (bad) jb sub xchg (bad) (bad) std fstpt sbb xchg callq (bad) (bad) xor test xchg (bad) (bad) fldl movabs xchg xchg (bad) (bad) xor cwtl adc movslq fistl mov (bad) jmpq imul out rex.WB xchg mov cmp cmp (bad) cwtl lahf out adc testl lea adc pop xchg adc imul cmc (bad) or pushq pop xchg rorl movsl pop out (bad) je popfq loopne rex.WB adc pushq callq xchg outsb pop and cs jne adc sahf lods fbld or imul popfq (bad) xor (bad) sub xchg mov add and rex.RXB pop adc movabs add insb lea fwait and cmp lock (bad) (bad) pushfq enterq adc stos xchg fwait and xchg adc rex.XB in or stos repz test jmpq sti add fistl rex.X fidivl loope and movslq callq and retq jns or pushfq adc rex.WRB jne loope xchg add xchg std rex.WB stos jnp xchg insl mov mov adc and rex.X mov fist orl stos shrq xchg xor mov rex.R cltd test (bad) incl xlat rol or iret rex.RXB and rex.WRX adc mov jno sti movsb rex.WR iret fisubr loopne xchg (bad) out (bad) scas xchg push sub xchg pop push sub stc (bad) icebp jmp clc stos pushfq mov mov pop (bad) lret sub data16 and fdivrs mov lret movabs fs cwtl rex.W mov (bad) push repnz xchg (bad) mov rex.XB pop outsb xchg enterq sub add and xchg cmpsl bswap fwait or xlat pop and xor loope cmpsl rcr test rex.B rex.WXB out ja rex.WRB fnstenv xor int3 loope (bad) shrb rex.WXB cs push push mov jne xchg and lods enterq xor mov lret and (bad) push pushfq shlb jge (bad) cld flds retq fnsave rex.RB cmp (bad) mov incl adc popq in mov jb nop and in jae xchg add callq stos xchg cli popq (bad) xlat lahf adc test iret and mov (bad) movabs rex.WRX icebp push in pop and sub rex.WX addr32 xchg idivb ss mov adc (bad) mov (bad) xchg mov popq rex.WB rex.X out (bad) movsl cltd jns cwtl iret icebp (bad) mov rex.RXB stos (bad) (bad) (bad) xchg (bad) sbb imul xchg out loope movabs xor lahf sbb sbb fdivrl mov (bad) in fidivl pushfq cmpsl retq movabs mov callq hlt jae xchg cs (bad) sbb xchg decb pop rex.WB out mov xchg (bad) mov rex.RB mov xchg (bad) xor adc jle cwtl fs pop clc (bad) (bad) (bad) (bad) cli adc sahf ja (bad) (bad) rex.RB movabs rcll sbb test or push mov movabs mov (bad) mov mov xor decb jmp rorl lods xlat fwait hlt sbb and pushfq (bad) pop jmp (bad) mov adc xchg mov rex.X mov (bad) jl (bad) push mov cwtl adc fnstsw (bad) repnz mov outsb (bad) push test fwait xchg out sub xor jmp movabs loope out cmp fcomps adc (bad) out movabs outsl push adc or mov fs xor xchg xchg (bad) jrcxz cmp repz fsub xchg mov (bad) imul xor test jns sahf xchg add (bad) lret mov rclb rex.XB flds mov jg xchg (bad) and rex.B and xchg mov stc pmullw (bad) rex.RX xor (bad) mov mov xchg (bad) push add rex.WX mov (bad) out ja mov jmpq push clc push or (bad) movabs cmp jge push movabs xchg orl sbb pop rex.X rex.RXB or lahf std xchg xchg scas (bad) push icebp fsubp (bad) sahf (bad) (bad) xchg (bad) rex.RXB not mov loop mov xlat or (bad) shll mov xchg cmc and out test (bad) cbtw cmp outsl or jg adc shrl jmp shrl xchg int adc adc lods mov mov cmp and es fdivrs divb es (bad) loop push rex.W add sahf int3 xchg sbb (bad) mov loope loop ja jns xlat in (bad) ds fwait rex.WXB adc js pop rex.WR rex.X and cmc cwtl movabs insl nop push cmp (bad) pop popfq rex jge (bad) jb fdivs (bad) je cmp cmc rex.WXB rex.WRB or pop iret mov (bad) cltd inc xchg fistl adc rex.WB (bad) test xchg jne subl mov (bad) adc xchg mov add cmc out push (bad) jmp pop (bad) jp rex.WXB lret leaveq in and test xchg fwait or (bad) nop mov jb adc jge pop lock and callq jno rex.WXB xor (bad) (bad) int3 (bad) xorl jbe loope out rex.WRX sub rex.WB jmp ja in and loop pushfq (bad) or rex.X fisubrl jne fdivrp sahf jb cmp in jo pushq add fmull (bad) imul movslq stos pop (bad) icebp add jmp mov cmp sbb or rcll addr32 (bad) cltd (bad) pinsrw fcoms movabs (bad) lods mov sbb jle repnz add rorb sbb jo xchg (bad) pushq lret ja xchg adc rex.R lock movsl imul fimul movsl xor xchg sub repnz (bad) pop retq or mov addr32 (bad) mov or test cmp testl pushfq pop mov addr32 fcmovnb push std mov add cmp (bad) xchg or movabs imul cmpsl mov test lret and leaveq test movslq pushfq lock or jnp insl (bad) rex.WXB (bad) repz addr32 lods mov rex.RX xchg retq sbb insb (bad) jmpq notb (bad) test pop fcoml (bad) popfq (bad) repz rex.RXB mov mov shl fwait (bad) movsl mov test adc retq fmuls mov movabs sub mov jbe (bad) movslq sub es (bad) stc (bad) fst cmpsl pop (bad) jbe (bad) mov (bad) sub es sbb rex.X scas mov fcmovb mov lock jp int3 (bad) loop mov cltd out rex.WRXB mov insl pushfq int icebp (bad) je test movsl rcr mov pushq sub shrl in adc retq pop fistp pushq or pop data16 icebp (bad) fildll adc imul (bad) jae xchg cmp movslq (bad) pop (bad) sub movabs rex.XB sarb nop push cmpsl rcl jns rex.WB movabs cmp fstpl add sbbl test stos jo fisubrl add mov rex.WR frstor pushq pop lock jbe mov (bad) fs loopne sub jle sub mov int jbe sbb jo rex test pop rex.X lods and out or pushfq and callq pop sarb pop stos in mov repnz stos fwait (bad) fsubs lret xchg adc cld jmpq insb mov out jrcxz sarl in (bad) or adc sbb lahf mov pushq xchg cmpsb mov stc jne int jae ficom retq or callq es mov jl mov mov xchg pop jo pop add mov cmp fcoml insl loopne and test imul sti xor push xchg in cmp cmc rol xchg shll rex.WRXB push (bad) (bad) push add xor pop jle cmpsl sub sub mov fdivs or mov (bad) sahf sub or xorl cmp add rex.RXB jle mov xchg cli (bad) xlat xchg mov in mov addl sbb xchg (bad) fcomi fsubrs fucompp (bad) cmc xor rex.WRB adc xchg add mov insl sbb (bad) pushq or (bad) int ds cs mov sbbl rol movabs and xchg (bad) movabs loope xchg scas or movabs testb pushfq popfq mov ja outsl pop sub jle (bad) movabs jbe mov add rex.X and sub fwait xlat test (bad) sub mov rcl mov add sbb adc or pushq hlt jg xorl stos jbe popfq popfq es sahf cwtl rex.WX (bad) add fcomp sbb add sbb fldenv xchg add adc nop add jmp adc jge (bad) or lods adc nop mov push pushq or xchg (bad) fist cli xchg in notb jmp icebp xchg cmpsb nop mov rex.X mov sbb or sbb (bad) (bad) sub mov jmpq rex.WX sub movabs cmp rex.WRX subl or lret xchg ljmp xchg cwtl retq adc decl mov push xchg out (bad) push pushfq rex.R sub mov (bad) sub enterq jae test nop pop mov (bad) fadd fdivl pop int (bad) mov movabs test insl sub movsl add imul cld nop rorb xchg mov (bad) rex.XB out pop push mov mov xchg cli or or add rex.R int3 out xchg (bad) fsubrs out jae adc pushfq xchg (bad) fdivl mov mov jno sub mov retq (bad) add (bad) ds xchg rex.XB rex.WX rex.WRB xchg jbe push push insb rex.RX scas fwait (bad) testb (bad) ja (bad) int in loop xchg (bad) enterq adc jmpq fidivl mov jnp mov nop subl or pop movslq out loop mov jnp mov ja (bad) out popfq div lods lock test xchg cmp push cmpsl xchg jmpq xor gs es data16 nop sub push insl incb cmp xor xchg jbe add (bad) cmpsl roll clc pushq out js loop cld lock add mov mov test jns neg xchg andb xchg jmpq stos out xchg callq and rex.RXB cmc pushq ja cwtl pop test (bad) xchg cli (bad) and xchg enterq and mov xchg push fdivl jp popq rex.RX push lock movslq pop rex.WR xchg out add xchg gs jno orb outsl xchg rex.RB rex.WXB rex.WB insb mov jbe (bad) (bad) mov retq xchg xchg mov (bad) rclb test adc xchg xchg sbb icebp fiadd xchg pop rex.RXB movabs not xchg xchg iret xchg test mov in sub mov (bad) rcll retq insb pop cmp xorb jp cmp add rex.RXB test sub jrcxz cmp callq or (bad) jns addl subl pop std pushq rex.B rex.WRXB ds nop xor cmpsl mov adc mov (bad) pop mov add lock ds mov fildl mull test (bad) sub cwtl xchg jne mov gs movsl (bad) (bad) xchg loope mov cmpsb xor lahf orl pop mov rex.WRX sbb (bad) jmp pop or (bad) push loope xchg movabs loopne test cmp cmpsb xchg xchg lods jno (bad) cwtl fs out sahf sub std mov xchg pop and cmp (bad) jge xchg mov cmp sub (bad) ja in movsb rex.RX (bad) cwtl mov and scas retq shrb xor pop movsl xchg lret mov pushq xor popfq mov jno gs pop or test (bad) scas in (bad) add sbb (bad) (bad) rol (bad) mov cld (bad) loopne rex.X rex.WXB xchg pop add or fstpl cld rolb outsb (bad) pop or sbb (bad) xlat (bad) fdivrs mov mov pushfq cmc pop lret (bad) and mulb repnz xchg jp sti (bad) gs pushfq rex.X cmp xchg std (bad) imul mov js add xchg (bad) xchg (bad) popq cmp push repnz (bad) rex.WRX sahf movabs outsl scas (bad) xchg rex.WRXB insl adc xchg mov in stos callq push (bad) xchg push shrb jae rex xchg push add retq (bad) iret (bad) lea mov (bad) cmp xchg leaveq retq movabs (bad) xchg (bad) je ds (bad) popfq mov out std cwtl sahf (bad) xchg repnz fidivrl pop adc fmuls hlt mov xchg and rex.WB mov rex.RXB insb or jmp jge jno mov rex.WXB push jns sbb xor movabs cltd gs sub mov lea adc (bad) nop jrcxz fwait push fsubrl pop cwtl mov cmp (bad) enterq (bad) sarl mov mov cmc adc (bad) (bad) (bad) lods xor int3 jb (bad) cmpsl cmp mov mov mov imul push iret jrcxz movabs cli push xor xchg mov xor cmpsb nop xor movslq mov (bad) rex.WB mov (bad) test xchg xchg push outsb or rex.WRXB (bad) cmc roll jg mov xchg xchg (bad) xor scas loop fmuls xchg out (bad) jo mov jb addr32 enterq xchg stos divl fsubrs (bad) incb mov loop sahf addl fsts mov popq test fwait (bad) mov adc (bad) in imul lods pop mov cmp stos xchg test mov out sti rex.WXB sahf mov (bad) rex.WB rex.R imull fcomi xchg cmpsl xchg add out (bad) lods fs imul push mov jne out idivl rex.RXB jecxz jmp (bad) retq (bad) sahf jle and lahf movsl movsb pop or cmpsb push jp (bad) (bad) sub icebp pop lods (bad) mov xchg jl ja adc test or pushfq cwtl lods xchg push xchg (bad) mov jmp jb (bad) xchg notl and popfq xchg mov sbb jl pop hlt out push stos xor jbe sbb mov jge xchg (bad) (bad) push xor rex (bad) (bad) sahf sub mov testl add scas popfq nop adc add push xchg cmpsb push (bad) std jg ds ss xchg or sbbb cmp int3 adc (bad) jnp int pop rex.RB mov pop rex.X es (bad) gs jrcxz jno popfq callq test scas pushq pushfq cmp push fldenv sti loopne jbe lods and jge rex sbb add loope jne scas gs mov cmp pushq (bad) adc and xchg push push cmp mov shr xchg cld jmp in pop nop xchg add adc mov gs popfq jmp mov or in xor jp jne xchg pop (bad) fcompl sub and (bad) icebp xlat adcb xor iret clc xchg mov cwtl jns mov cmovns (bad) mov fldenv shll mov retq (bad) rcrb enterq cmp test jl (bad) int3 ds int (bad) pushfq (bad) sub (bad) ja cmp lods sbb xchg (bad) (bad) adc movabs pop nop mov (bad) fbld fstpt mov xchg notb fcompl add stos mov xchg pop rex.WX popq (bad) mov jae movabs adcl (bad) xchg fidivr fcmovne xchg lret (bad) mov test idiv stos movabs popfq cmp push (bad) out rex ja shrb pushfq cmp jae lea (bad) xchg xchg jo cld lret xchg stos cmp out xchg sub cmp movabs movsl mov sub shll hlt outsl (bad) xchg fcmovne rex.WR xchg rex.WRX imul xchg pop (bad) xor fisubrl pushfq rex.WB (bad) pop insb ja cmp adc subl sti jp rex.WX (bad) scas iret or fistpl fdivl push sub cltd (bad) cld (bad) xchg sbb enterq (bad) xchg rex.WX xlat je rex.RXB sbb mov out cmp xor out (bad) sar or jae je js retq mov movslq movabs test add add test int lods pushfq (bad) sub icebp pushq xchg sbb (bad) jns (bad) lock fnstsw mov lea pop pushfq (bad) (bad) (bad) jno nop (bad) loope sbb std cwtl (bad) xlat test (bad) test ja (bad) (bad) push (bad) xor cmpl xchg (bad) in (bad) rex.RXB fwait rex.RB xchg scas cmp sbb cmp pushq rex.WRXB imul (bad) int3 (bad) (bad) jl fcoms adc xchg cmc xchg loop (bad) movabs (bad) cmp pushfq lods or (bad) movabs (bad) and xchg and sbb movsb mov xor (bad) cltd movsl pushq (bad) shl insl (bad) xchg cld in pop (bad) mov (bad) repnz rol mov in (bad) rex.WR rex.RXB in repz mov (bad) and sub mov jmp sbb xchg out push (bad) mov out leaveq push xor clc movslq pop xchg xchg out pop test sbb mov in jo (bad) cs cmc adc (bad) (bad) (bad) mov mov sahf pop cmc (bad) xor (bad) mov movabs stc xchg movsb xchg (bad) xor xor push or mov xchg mov mull stc (bad) pushfq sub imul lret outsb rep outsl cmp retq xchg sbb orl mov jo (bad) xor xchg cld fildll sahf insb mov push rex.WRXB roll andb rex.WX loope adc and mov xor sti insb pushfq push int3 (bad) jmpq sub (bad) cmp jae push cwtl pop push icebp lock pop push decb sub or jl mov xchg jmpq lock (bad) fstl sub shlb test cmp (bad) xlat sbb (bad) pop mov pushq fstpl mov (bad) movabs pushq xor mov mov scas (bad) lret push fwait xor (bad) cmp jno xchg pushq jnp mov mov push rex.X add sarl in stc jp cmc (bad) stos cmp cmp (bad) xor xlat insl sbb lahf and pop mov ja movabs (bad) rcrb stc (bad) in xchg rex.WRXB and pushq in adc mov movabs (bad) nop sahf insb xchg (bad) (bad) sbb adc mov leaveq and ficomp rex.XB adc mov hlt xor xchg iret (bad) and jmp rex.WXB adc mov xchg mov mov jb or cld add xchg mov push (bad) popfq jnp xchg mov loope cld mov iret pushfq rex.RXB jb test mov rex.RB mov xchg rex.WXB add mov (bad) cmc sahf mov (bad) sahf and rex.B loopne fidiv adc retq sub js out rex.W lock xchg test sub jne pushfq (bad) xchg ss mov scas xchg loopne rex.RX out ds movsl test mov popfq sbb lahf rex.WRXB xchg je lret push xor pop mov and (bad) nop (bad) rex.RX rex.B and (bad) test fidiv or adc stc (bad) adc js fistpl mov cmp cltd xchg sub rex.WXB xchg xor xchg std mov enterq jle outsl mov cmp adc (bad) and movslq lea (bad) ss xchg es gs loop rex.XB insb cltd pop imul jmp pushfq movsl nop lcall cmpsl test retq rex.WB jne js in adc push (bad) sti xor or lea (bad) repnz xor jg sub mov pushq or sbb ds (bad) lea xor jle add push (bad) (bad) xchg mov imul xchg (bad) ja je pop and sbbb (bad) pop rcrb out mov rex.WXB lock adc lret cmpsl out jb rex.RXB hlt mov mov movsb movabs (bad) and repz (bad) (bad) rex.WR repz jge pushfq push (bad) jbe or or gs gs pushq fcompl rex.WX lock rex.WRX xchg jmp adc xchg jae jb rcr push sub rex.R notl jmp and pmaxub rex.XB xchg rex.RX test xor cs nop shlb gs mov mov lahf push push xchg xchg jns movsl mov iret xchg rex.RX (bad) (bad) jbe cltd (bad) pushfq fidivrl xor (bad) xor xor pop rex.WR pop rex.B data16 xchg cmp mov adc scas rex.RXB repnz sbb mov pop xchg loop (bad) lret mov rex.WRB gs xor lea jg rex.WR add mov xor addr32 jrcxz loop jns cmc jg out test xchg rcll fldcw or cmc xchg sbb push cli insb sub rex.WRB pop stos test (bad) jb xchg cmp mov or xchg sub lret retq js mov insl (bad) out rex.WX xchg cld pushq add rex.WRXB movabs rolb test (bad) rex.RXB outsb ss sbb xor (bad) movsl mov rex.RB rex.R xor mov rex.WRX mov cmpsb mov cmp jns pop callq cld and movabs data16 (bad) ja and xchg push adc out mov add add cmpsl or sahf push push lock (bad) jg (bad) (bad) mov fisub adc mov sarl movabs mov or and rex.WXB xchg fsubrs jns int nop movabs sub pushq (bad) bswap out xor add xor pushq mov adc sub (bad) jne addr32 rex.XB cmp cmp jbe jg pop add (bad) ss sbb rex.B xchg jno (bad) mov sub andl xchg int adc divb fwait mov rex.WXB xchg fmull pop mov rex.WB sub xchg rex.RXB and shrl cmp mov and pop mov add xchg (bad) pop (bad) rex.WR stos adc mov movabs xchg (bad) adc rcll addr32 mov rex.RXB movabs test out jmp xchg (bad) cmp lret xchg adc sbb xchg pop (bad) fisubl mov (bad) (bad) rex.WRB hlt mov sahf jmpq mov xchg rex.RX rex.WX (bad) mov sub sbb and mov movslq jnp push sub sbb xchg fiaddl xlat cwtl (bad) (bad) xchg xchg or retq or add jmp push sti enterq xchg rex.RXB jg (bad) push cmp (bad) pop movabs add (bad) (bad) lock imul push rclb jg mov xchg (bad) ficompl mov imull (bad) xchg lock (bad) (bad) xchg (bad) out rex.WB (bad) out xchg sub jp,pn mov pushfq scas cmc adc mov push lea rex.RB out pop (bad) ja jrcxz jnp xchg lods adc imul (bad) xchg iret cmpsl mov push mov (bad) rex.RB movsb out mov adc scas es add (bad) insb lea jmpq add jrcxz sbb out (bad) mov xchg insl (bad) pushfq xchg (bad) mov pop (bad) sub cwtl cltd cs scas xlat cmp or sahf loopne and mov or add pop jb mov xchg out gs xor and popfq jnp xchg adc test sahf xchg test mov pushfq (bad) lods (bad) fldenv mov sub stc or sbb lret out rex.WRXB (bad) out movslq mov adc push movabs gs cltd push xchg or xchg (bad) xchg test mov movsb jbe add imul or xlat rex.R push sbb and (bad) (bad) test loop jns ja xchg xchg cmp (bad) fsubr mov or (bad) mov test int3 loop sub sbb mov std and fs out cs jp,pn lret xor and xchg sub clc xor ss adc test test mov and jg (bad) pop decb movabs mov mov cmp xor pushq pushfq xchg lea jno push jg xchg (bad) mov fcoml (bad) mov rex.WRXB pop (bad) leaveq movabs xchg cs sub fidivr fisubr xlat xchg or lret xchg mov jnp gs (bad) mov xchg cmp or and ja mov ficom push ds xchg hlt retq sahf jbe sub cmc xor ds and xchg cld in rex.WRX out sar movabs xchg in mov (bad) movabs in (bad) in push xlat fwait mov xchg lret cmp movabs stc xchg (bad) xchg fs mov sub cld cmpsl fmul sbb mov rex.WXB loopne (bad) jmp movsb scas popfq xchg pop (bad) cmpsb sub orl mov or movabs add rex.WXB movabs jb repnz cmp flds xchg (bad) movsb xor fstpt pop retq mov xchg lret (bad) movabs add adc add jp lea xchg test sub add jne seta in jmpq mov in cmp movabs mov mov pushfq jrcxz sbb adc retq xchg xchg (bad) callq and jne pop movsb adc cltd xchg rex.WX pop mov imul (bad) push fist mov mov jp callq je or rex.WRX outsb sub and (bad) negb jbe push jae in sahf sub (bad) fist cs lret in mov hlt xchg rex.WXB std fwait stos data16 sbb sbb (bad) mov out xchg or mov mov fsub or pop negl xchg mov push imul test (bad) xchg fnstenv cmpsl lret roll rex.WB mov sbb jno addb xchg (bad) mov xchg (bad) (bad) cld mov cwtl stos jge and test xchg (bad) test out std cltd movslq (bad) jle jnp adc adc xchg (bad) test je outsb stc fs (bad) int3 rcr adc pop mov lahf fptan (bad) jo ja (bad) xchg push cmpsb xchg retq rex.W bnd enterq leaveq xchg cwtl and jo (bad) loope icebp iret jmp xchg rcll leaveq add cs rex pop xorl popfq and (bad) int3 out cltd push enterq fidiv mov mov sbb xchg movabs (bad) idivl scas mov add addr32 rex.WXB lea (bad) xchg rex.WR cmp orl sbb cld sbb pop rex.W rex.X jno cmc cmp xor xor xchg jmp and (bad) add outsb add movabs pop pushfq leaveq xor xchg movabs adcl mov callq andb jb repnz adc mov scas sahf or pop sub adc xor (bad) rex.WXB jae sahf lock cld rex.WRXB xor mov sbb fs sub pop cmpsl outsb (bad) jg callq es and push rex.RXB rex.XB mov xchg cs je (bad) stc mov cmp xchg fsubl pop sub out jns rex.RX and sti pop pop xchg xchg loopne push gs sbbb jmp repz and push (bad) cli jg jp mov xchg cwtl test rex.RX xchg mov je popfq push repz (bad) mov pop add rex.WRB xchg jmpq or (bad) sahf pop xchg xor (bad) scas imul int3 rex.XB sub jmp cmp cmpsb push movabs mov xor (bad) icebp pushq xchg test cmpsb imul (bad) (bad) fstpt jnp mov movsl jle sbb mov xor cmp cld cmpsl sbb xchg (bad) jmpq or iret es pushfq pop jnp int adc mov data16 pushq notl mov xchg test ss mov (bad) and lea xchg xchg pushfq cmpsl cmp (bad) sub imul lock cmc insb xlat adc (bad) (bad) xchg retq sti outsl pop xor xor cmp (bad) imul pushfq sbb movsl add in out repnz pop rolb outsl mov out retq shr and pop jb xchg out fsubl cmpsl rex.W sbbb rex.WRX (bad) xchg (bad) es cmp fiaddl rex.WRB sti loope mov push (bad) rex.WR add cmp jae movsb or or stos xlat xchg decl xor xor (bad) add retq outsl sbb fistpll add xchg cmpsw mov out xchg add rex.RX or xchg rex.WR sti add xor imull adc fist ljmp xchg xlat (bad) je rex.W sub (bad) movsl xchg nop insl (bad) test sahf fdivp rex.WRXB xchg andb sbb push callw fs push (bad) lods push loopne rex.WXB jmpq out xchg rex.B pop imul (bad) adc xchg (bad) div rex.XB adc add rex.WB rex and (bad) xchg (bad) rex.RXB in orb (bad) cwtl rex.W repnz (bad) pop in xor pop cmp xchg pop jae rex.R decb sub adc stc mov callq add (bad) sbb xchg fidivrl sub jg stos popfq stc loopne mov testl xor xchg jbe (bad) and in (bad) (bad) out cmp shll xchg rcrl scas xchg lea (bad) rex.WXB cld movsb outsb cmpsl xchg cli xchg lods rclb std xor cmpsl sbb mov and xchg mov out scas xchg xor fsubrs pop enterq push stos cmpsl lretw jmpq xchg sbb rex.RX mov mov sbb jmp jbe push repnz out lea imul iret jmp xor mov pushfq stc test ja in hlt cmpsl negl and adc int stc fisub addr32 sub (bad) mov mov fimul rex.R rex.R xchg (bad) js sarb out (bad) xchg stc and pop (bad) jp rex.W (bad) rex.RXB push add nop adc in shlw imulb lea fcomps pop mov jrcxz mov pushq popfq rex.X mov and xor push or adc rex.WX mov (bad) and mov outsl mov mov (bad) scas rex mov mov xchg mov (bad) and mov rex.WRXB lret outsb jmpq mov loop adc xchg fldenv lahf jae (bad) movsl ss push icebp (bad) negl rex.XB (bad) in lods xchg add imul xchg mov (bad) in (bad) je popq movabs pop (bad) mov fstps ja stos mov xchg jp je lock and and fneni(8087 (bad) (bad) xchg rex.X retq mov test pushq test in mov loopne push add scas loop xchg out mov jnp xchg lret out add fstl adc add pushfq (bad) adc movsl repz mov cld xchg rex.WR es cmp mov (bad) jge mov popfq lock gs cwtl mov xchg mov or in jmpq and jl or rex.RX addr32 (bad) retq nop sub push jae test mov pushq rex.RXB xchg (bad) sbb sub jns loope imull adc (bad) add adc enterq loope pushfq (bad) xchg and xchg and push (bad) mov xor lea (bad) ja int3 lods lock xchg pop xchg xchg (bad) add pushfq jmp popfq scas jns jno lret pushq mov or xchg je in subl scas mov adc jne cwtl mov imull rex.WRX jle (bad) fwait rex push lods vpshuflw cwtl fist movabs es lea push jae and notl adc pushq xchg callq add (bad) add mov mov fcoml jle jbe out in xchg jo fist xchg int sub cmpsb rex.X out insl (bad) lods pushfq sbb rex.B stos ffreep xchg sub (bad) sub scas and (bad) mov cltd int mov movabs mov hlt sub xchg mov add sbb jp (bad) movabs pushfq and fwait out xchg xchg adc gs xor imul rex.WX xchg nop fsubrs and test fistl push rex.XB idivl (bad) fld mov mov mov (bad) xchg jno hlt mov subl out push pop es fcomp push xor push xchg mov pop jmpq (bad) pushq in jle,pt (bad) (bad) sahf sub imul xor rex.X mov rex.RB mov scas sahf rclb test mov in (bad) rex.X popfq xchg out (bad) pop sub (bad) sbb rex.WX mov jle xor xchg sarb xorl enterq es jne or push cwtl (bad) push cwtl lock add movsl (bad) adc adc xchg jmpq cmc dec loopne mov or cmp callq (bad) xchg mov fisubrl popfq mov mov mov mov push xchg rex.WB ja ds stc push jg loope mov pop cwtl rex.RXB ficom pushfq jmp outsb (bad) (bad) loop sahf sbb rex.RX mov add fidivr (bad) xchg add jbe rex.R cltd movabs pushq fwait (bad) retq lods xchg (bad) mov mov test xchg xchg mov sarl je cltd pushfq stos add (bad) int xchg fdivl and (bad) xchg (bad) add jnp jbe jl mov cmpsl stos mov xchg popfq icebp mov rex.RX nop xlat mov rex.W int3 mov mov movabs lret xchg fldt xchg movabs push cmp xchg mov mov (bad) rex.RX (bad) (bad) mov fwait mov sub jnp (bad) xor xchg ja outsl fdivrp mov mov xchg lret pop or gs or loope xchg (bad) std xchg xchg xchg movabs and test mov (bad) ficoml rorl mov jmpq jrcxz cwtl enterq stos add mov sti test sub sbb push out (bad) ss in insb ja jmp jle mov cmc cwtl (bad) lea (bad) leaveq xchg push sbb xchg mov scas adc iret (bad) fwait (bad) sarb or xchg mov adc rol mov jg jl (bad) mov rcll (bad) mov loop pop (bad) mov rex.WRX bnd rex.X mov push pushfq test adc test rorb or mov rex.RX cmpsb repnz mov xchg push cmp popfq (bad) pop xchg pushfq rex.WRXB cmp int3 add ds xchg jb test rex.RXB fwait and cltd pushfq je es outsl mov enterq insl lahf loop outsl sbb xor sahf rorb (bad) pushfq outsb sbb and mov xor fwait loopne (bad) (bad) mov es cs rex.RXB test in xchg (bad) (bad) mov (bad) ds rex.WRB lock imul jge notb jno fcoml retq (bad) xchg fs sub (bad) fistpl cmp popfq mov rex.R xchg sub or movsb (bad) add in jo repnz shrb (bad) rex.WB ss or lret xlat rex.RX iret (bad) mov xchg pop jmp fldl enterq or lods shrb movsb test (bad) (bad) (bad) cwtl and cmpsb fstps cmpsl xchg leaveq jnp popfq pop rex.RX repz mov sbb fisubl fwait push xor jmpq pushq mov lret notq negb xchg je mov mov cwtl imul callq (bad) sub xchg jmp pop (bad) jns xchg div jbe (bad) stos lea pop xchg pop sbb callq mov push rolb pop pop movslq fldenv xchg mov cmp xchg adc xchg mov loop (bad) xchg (bad) insb sbb and (bad) cmpsl pop rex.XB pop rex.WRX jnp,pn scas xchg in rex.W int3 rex.RXB sbb or (bad) cmp ljmp rcll rex.WR fsts sub gs adc (bad) jbe adc cwtl rex.RXB adc mov callq repnz sbb mov cli jge sbb movabs xchg sub cwtl xchg rex.WRXB sbb stos imul jns iret lock jne rex.RXB sbb sahf sub add mov cltd sub (bad) xor retq callq leaveq cwtl jmp add fdivr and rex.X test ds jl shrb shrb pop notl xchg in mov fcompl mov add pushfq sahf icebp adc cltd xor and xchg cmp mov rex.WXB ds outsl pop sub mov rex.XB adc (bad) pushq sub ds outsb pop setns retq pushfq (bad) mov (bad) xor (bad) adc loop rex.WRXB fcmovnb and imul rex.RXB ds (bad) cmpsl sub mov (bad) int nop mov xchg mov test xchg or xchg iret mov divl (bad) rex.XB in mov pop lods xchg lea mov fcmovb (bad) cmp rex.WRB push jg cld pop (bad) rcll mov pop pop and jmp add xchg push fwait jbe sub insl cmp sete mov outsl divl repnz (bad) jmp je pop mov repz jbe loope push in stc hlt or movabs sbb sub leavew xlat cmp cmpsl xchg mov adc pushq int xor sbb (bad) std sub movabs adc loope rex.WB mov cmp lret lret (bad) jbe movabs sub (bad) pop rex.RXB xchg pushq jge jmpq (bad) roll repnz rex.RX or mov divl pop and out pop xchg xchg lret jp (bad) cmpb mov sbb sti mov or rex.B sub cmp sub out movslq sbb nop pushfq cmp mov sarb test jmp sahf enterq pushfq add xor in mov add mov pushfq mov pop (bad) mov or ds mov je nop stos (bad) popfq scas cmc repz or (bad) xchg retq rex.XB js xchg cmp xchg xchg sub xor cmp loope rclb pushq sub rex.WR rex.W retq cmpb in sahf jno pop callq xor xchg lods ss test xchg rex.RX jl jns xchg shll scas fs ja mov mov (bad) movabs int fwait xchg sub xchg mov ja fsubs xchg stos enterq xlat jg cmpb add insl sti rex.X out mov xchg callq mov rorl add lods rcr pop lret xchg xor xor (bad) pop (bad) popfq pushfq movslq (bad) adc sub movsb xlat in jb push nop adc jge (bad) fwait sarl jl mov xchg (bad) popfq ds sub subb xlat jno jnp rex.WB xlat pop testb ficomp stos xchg retq pop or (bad) (bad) xchg loop outsl cltd cmpsl rcrl rex.WXB orl xorb rex.RXB (bad) subl mov xchg adc mov pop mov sbb xor cld cs push movslq xchg xchg callq jno mov insl xchg fwait (bad) (bad) mov mov lahf xchg xchg xchg test sub rex.WRB mov mov adc lret movabs adc add xchg (bad) loopne test or lahf and xor fdivrs repnz std ja mov jbe int movabs rex sbbl out (bad) cmpsl mov (bad) outsl (bad) jae xchg mov pushfq xchg sbb cmp push cmpsb pop rex.WX out (bad) xchg mov mov in lea movabs lock cli xchg (bad) xor adc sub push sbb rex.B xchg (bad) rex.XB xchg push je mov loop xor (bad) (bad) xchg movabs or push xor ss fistl fdivr cmp cltd sub xchg rex.RXB push xchg or push test movabs or leaveq push xchg ror sahf add movabs rex.R rex.WB rex.XB mov push cmp data16 adc and movabs cmp rex.WX cmpsl fiaddl adc rex.X (bad) cs movabs mov popfq (bad) fisubl lret cmp rolb rex.WRXB repnz (bad) rex.RXB (bad) movb fisttpll ss (bad) lock ja xchg jb sbb sbb adc nop movabs cs mov mov jg leaveq test mov xchg clc mov xchg xchg lret mov retq jno add cmpsl mov movabs push rex.WRXB and adc sbb std and out pushfq frstor (bad) fdivrs mov sub xchg cmp add nop outsb fcompl mov mov adc std pop jo fdivrl (bad) push xchg rex.B or xchg fwait rcrl and outsb fs mov jnp outsl xchg add jns addb rex.WRB (bad) pushfq cltd mov jne jno pop and rex.W and push (bad) xor rex.WRXB out and sbb xor test cmp or rex.W rex.X add hlt js sbb mov xor sub jg pop (bad) movabs (bad) mov xchg movabs (bad) xchg out movabs pop or xchg add sbb loopne out movsl in xchg (bad) cmp xchg push jg and jl test fsubrs pushfq lea cmpsb rex.XB or mov lret popfq pop cwtl insb pushq std mov cltd rex fdivrl rex.WXB mov pop xchg xchg adc loope imul cltd push scas or mov (bad) (bad) add add pop rclb or xchg notb idivl movl out pushq pushfq (bad) mov jnp stos xchg (bad) pop rex.WRB add xchg insb and sbb sub (bad) std adc xchg xlat (bad) sbb xchg or (bad) decl xchg mov (bad) popfq jnp shr xchg test cmp and rex.WRB addr32 movsl (bad) cmp (bad) push or int3 (bad) rex.WR rex.WB rclb xchg xchg xor add rex.WXB loope mov pushfq pushfq sub and (bad) (bad) xchg add mov ja rex.RXB repnz out rex.WXB clc pop xor push xchg or lods lret in mov rex.WXB mov (bad) testl mov rex.WR xor loop and push (bad) (bad) (bad) (bad) nop sub insl fcmovb cmp popfq xor retq pop rex.WRB sbb rex.WX (bad) xchg scas rex.WX mov imul xchg lcall (bad) shll movabs gs (bad) pushq jb (bad) mov xchg andl (bad) xlat rex.WB enterq xchg (bad) scas adc xchg jl cmpsb pushq add and movabs rex.WR jle sub out rcrl out (bad) xor xchg rex.WRXB shrb in pushfq (bad) push mov sti cmc xchg sbb add stos lods mov xchg imul movsb data16 jle xchg jae cmp sahf or fsubl lea adc mov (bad) cwtl (bad) ja pushq jns movabs pop enterq addr32 (bad) movabs xchg (bad) sub scas xchg popfq outsl pop rex.XB mov js sub stos lahf lret rex.B xchg int mov icebp imul jnp insb add adc movabs pop notl (bad) ja scas cmpsl stos rex.WR movabs scas cmc pop xchg sub rex.X negl mov cld mov pop xor mov jmpq movabs mov rex.RXB adc rex.WX repnz sub (bad) popq subb rex.WRX (bad) xchg mov psubusw add fadd imul adcb (bad) cmc fs lock movabs jg or neg jrcxz cli cmp adcl (bad) out sahf lret rolb or (bad) movsb sahf rex.WX mov xor mov cmp jns jmp rex.X (bad) xchg cmpsb mov sarb (bad) jne jg cmpsl ficom (bad) xchg rex.RX mov (bad) xchg mov rex.WRX xchg retq jnp pushq cltd push outsb cmp jge adc (bad) (bad) and mov (bad) xchg (bad) pushq movabs add scas (bad) rex.WRX (bad) sub nop test mov in mov jg rex mov js rcrl data16 sub cmpsb fcoml int (bad) test (bad) lock sbb jo int sarl sbbl xchg xchg rex.WRX rolb cmp xorl out push xchg jnp (bad) push fistl fs movabs adc xor rex.WB rex xchg cmp cmp fstpl test imul jmp insl pushq rex.RXB int3 (bad) sbb cmpl xchg push mov xchg rex.X sub loopne push jge fsts add rcll in adc jbe imull mov hlt pop or pop cmp push cwtl push cmpsb stos jl cmp (bad) (bad) adc popfq or cmp and sbb xchg cwtl movslq cs mov sub sbb or xchg callq and pushq (bad) in nop mov and outsl cmp adc mov ss xchg lahf lea cmp sbb rex pop sbb lods rex.WB xchg punpckhdq xchg pop frstor (bad) xchg int shrb test jnp sub mov rex.WRX fcmovnbe nop rex.WX imul jnp rex.XB repz (bad) (bad) and sbbl (bad) push mov movabs (bad) (bad) jp xchg and imul fimul adc sbb (bad) outsl jrcxz sbb jns pop iret cmp sub fwait xchg mov mov (bad) sub jo jb sbb mov mov sub cld movsb cwtl mov and mov cs (bad) rex.WRB cltd nop adc jno rol sbb movslq adc gs xor (bad) sbb shlb mov push loope int3 and jg data16 jp jrcxz cltd (bad) lret outsl xchg jnp std (bad) scas cmp out (bad) xor adc sbb jl sub xchg popfq xchg (bad) callq (bad) outsb (bad) sub movabs jmpq sbb mov xor (bad) (bad) (bad) mov rclb jbe cmovno nop pop sub jg sbb and jns pushfq adc int3 sub jbe or loope retq insl add cwtl fmuls xchg and popfq or retq or (bad) sbb sahf mov xor mov mov repnz (bad) (bad) sub fnstenv rex.WXB int3 sbb loopne movabs jrcxz (bad) and mov xchg mov popfq xchg cli leaveq loopne xchg fdiv add fwait callq (bad) mov cs mov sbb (bad) mov pop (bad) jbe push fcoms xchg and rex.WX shll jrcxz outsl xchg lea cmp pop movsl rex.WRXB test mov sub test pushq rex.RXB and movsl cmp sbb sahf sbb (bad) rex.XB (bad) lahf mov cmp je sbb xchg notb mov retq (bad) jns xchg xchg push lea mov (bad) add stos repz xchg repnz out rex.WX lret sub movabs addr32 (bad) xchg pop xchg or xchg push mov retq push rex.X mov hlt rex.RX (bad) fdivrp sub mov push rex.RXB insb adc jg (bad) scas clc stos jge xchg xchg vcvttps2dq mov jae sbb xchg sub out pop cmpsb notb retq pop addr32 mov xchg mov stc xchg rex.WRXB fnsave test sbb sbb xchg rorl js in rex.RXB rex.X sbb cwtl (bad) add repnz cwtl (bad) mov pushq lock js jns sahf stos (bad) rex.RB rex cmpsb icebp push jle xor xchg and add mov imul lods out ficompl or sahf retq mov out (bad) and push sarl retq mov mov mov push or cmpsl cmp mov and xchg stos mov xchg xor or sub add sbb imul (bad) jge (bad) adc mov push push es xchg (bad) out cwtl subl movabs mov cmp add mov por rcll jl mov (bad) (bad) movabs fist mov rex.WX sub ja add nop jl xchg cmc xchg (bad) sbb add imul pop stos jns fwait sub faddl rex.W rolb or (bad) out cmp (bad) movabs in mov sahf rex.RB out (bad) out sbb fwait sub movabs rex.RXB rex.WRXB rex.R mov mov pop rolb xchg (bad) (bad) sbb gs sub xchg mov jrcxz in rex.X retq movslq rex.WXB fwait in xchg (bad) std sbb jne (bad) (bad) (bad) fsubrl adc jmp rcll fbld je leaveq (bad) xlat nop mov sub js iret (bad) rex.R cs cwtl test xor sub mov mov jae fistpl cmpsb (bad) push (bad) rex.RXB addl xchg rex.WRXB sbb subl push xchg fdivl movslq rcl icebp cmpl outsl xor insb add (bad) lods jg sub xchg negl rex.RB rex.WRXB stos mov in jg and mov retq xchg mov xor xchg loop (bad) lock jno insl xor push sub jg and je sbb mov hlt jo repz (bad) ficom rex.WXB add pushfq cmpsl nop adc gs xchg out mov pop retq xor in mov pop lock mov pop outsl mov mov jl loop test emms jmpq rex.RX rex.WR fisubl nop sti fcomps and xchg (bad) pop mov xor sub insb retq cs jb (bad) cmp fsubr (bad) xchg outsl nop (bad) push loopne hlt (bad) fsubrl jne out pop xchg cmpsb xchg push adc adcl push jbe outsb rex.WR rex.WX outsl mov lock push in jg sbb or jmp pop rex.WR loope add xchg fldenv rex.XB mov xchg mov loopne roll mov popq rex.RB repnz pushfq fild cld mov outsl mov (bad) pop adc nop (bad) addr32 movslq pop in (bad) mov jge rex.WX and or mov jbe push int (bad) (bad) add mov xchg (bad) mov cltd orl in cmp and sub rex.RXB xchg adc shrb shl rex.X (bad) (bad) movslq xchg xor adc mov rex.X jne mov sbb or lock push mov (bad) lret fistpll xchg rex.WRX sbb sbb jge rex.B shl cmpsl jle,pn xor sahf cltd xchg push xor rex.B xorq (bad) and (bad) rex.WR cmp mov fsts orl fstpl sarl (bad) xchg mull rex.RXB add js out lret cmc fiaddl movsb pushfq or xchg pop in mov mov push xchg or push stc cmpsb jmpq fisubl jrcxz nop movabs testl add pushq xor mov xchg xlat rex.RB adc or mov popfq out addr32 xchg mov jns adc sbb push push cwtl adc (bad) fdivr mov (bad) xchg addl mov fdivrl insb (bad) divl in sahf test shrb sub xchg xor rex.R xchg out idivl stos add retq outsl scas xchg xor rex.XB repnz gs adc iret push test or xchg pop pushfq pushfq fldt add pop (bad) or repnz in rex.WB lahf (bad) in pop lock xor in xlat mov cmp jmpq add (bad) xchg sbb (bad) xor int3 ficoml cmp sub lea xchg out shrb cmpsb fstps es xchg rex.WRB lods lret rcrl xchg (bad) (bad) jbe (bad) push mov movabs js xchg jle xchg (bad) jno (bad) or test push nop sub (bad) sbb mov out xchg rex.WRXB and nop movabs mov rex.WX rex.B fdivr rex.W jmp rorl stos subb ficomp (bad) xor rex.R push data16 cwtl sub pop test cltd jg (bad) in movabs mov rex.RXB out jg lock scas mov js mov sbb idivb pop in pop sub pop pushfq and cld xchg movsb nop fdivrl popfq and fisubrl sub xchg pop (bad) and sub imul adc (bad) out test pop fdivl test and clc push xchg fwait push (bad) jl callq mov stc std sti movabs notl movsl iret pop or repnz mov movabs (bad) rex.RX sahf pop mov notl jg push shll sbb (bad) (bad) add xchg xchg adc nop xor sbb mov mov std in adcl pop jmpq xchg jo jge cmp xlat rex.WRX xor xchg cli mov mov jle jmp repz xor leaveq in fild out adc jb pushfq cmpsl sbb je popq (bad) xchg fisttp iret in add in cli mov sub push xchg adc (bad) mov cmp out xlat pop jge (bad) out (bad) cmpsl sbb jnp pop rex.RB cmc andl xlat jp xchg in rex sub sub mov mov lret mov mov lock mov or jl outsb psadbw sub sbb xor test xor sbb mov xchg and int3 lea xor stc cmp cmpsl jb pushq orl sub mov in mov fwait sahf (bad) in rex.WRB gs mov xchg push cmp out (bad) out rex.WB push (bad) rcl mov outsb xchg or mov fisubr mov lea (bad) repz js cmp xchg out and (bad) loopne cmp movsl fnstcw test shll pushq test xchg (bad) (bad) sub jo movb rex.X cmpsl out loope (bad) lock xchg jne lret test jg negl ss or jno mov pushq repz (bad) rcrl mov (bad) push and xchg and mov rex.RXB xchg push (bad) xchg add (bad) (bad) jo mov jmpq xchg cmp addr32 (bad) adc rex lahf xchg push fstpt mov mov xchg (bad) loope mov mov int3 (bad) mov pop pop js rex.XB xchg movslq mov (bad) jnp xchg (bad) retq (bad) std xchg jmpq rorl lret lods xchg loopne sub or int3 (bad) xchg rex.XB mov cmp sub xchg xchg (bad) jae jno fiadd jg cmp cmp pop pop insl (bad) (bad) orl cmp and cmp (bad) stos mov (bad) stc rex.WXB add xchg xchg outsl mov (bad) imull test xchg jae jmpq int lret add ja jg movsl jnp xchg jb xchg movabs lahf rcrl cmp push out (bad) xchg mov ja add cmc xchg and test push xor cmp xor xchg (bad) jbe sbb xchg add rorb (bad) (bad) cld mov and sahf xchg repnz mov sub and pushq cmp fstps xor rex.RXB cmpsb retq (bad) pop pop mov or incb adc test nop lods jne add mov retq jmp fnstsw xchg lret xchg (bad) push rex.WRXB push xchg sbb stos sbb callq test outsb jo icebp ja xchg add scas pushfq (bad) and (bad) xchg jne outsb cmp xlat test incl xchg or or ja jmpq (bad) mov xchg lods rex pushfq ss cmpsl xchg retq xlat sbb mov insb sub jns scas (bad) add xchg xor pop xor cmp jp xchg sahf add insl repz (bad) jb jnp int icebp xchg movsb mov xchg xor and add xchg or popfq sub push (bad) jno xchg (bad) (bad) adc (bad) test scas mov pushfq in adc xchg sub scas adc (bad) shrb or pushq shl lods in adc (bad) int fistl mov sbb push sti in sahf ja mov jrcxz xchg sub xlat mov rex.WRX add (bad) xor test xchg in pushq movsb iret test movabs xchg xchg cs sbb push jne cwtl (bad) (bad) packsswb out adc ds xchg (bad) cwtl sub rex.RXB (bad) xchg mov insb xchg (bad) xchg jg movsb icebp subl mov in rex rex.WX xchg mov add push cmpsb mov jnp (bad) rex.WRX nop (bad) stc movslq (bad) fs fildl adcl xchg divl (bad) mov outsl imul xchg jge pop cmc mov insb ss (bad) stos sbb xchg and pop cmp jp push cmp mov outsl xchg (bad) or cmp adc movsb mov xchg lret sbb out (bad) xchg mov sub (bad) xchg loop (bad) test cmc fnstsw (bad) movsb jne mov (bad) and cmp xchg cwtl rcll popfw or sarl (bad) mov movslq adc rex jbe movabs fxch mov int3 callq lock stc sbb scas mov pop push movabs xchg xor (bad) sbb sbb out rex.WRXB lock (bad) (bad) data16 add sub mov cmp (bad) (bad) mov callq (bad) ficompl gs stos jne fldenv xchg mov adc stc and test shll out sub cltd jae mov clc rsqrtps rex.XB es jp gs insb out retq pop sbb (bad) jbe rol jae leaveq scas and jge sub fcoml mov bswap rex.WB rex.WRXB xor mov outsb mov rex.WRX pop callq cmpsb push rex.XB push add mov cmpsb sbb (bad) (bad) mov mov adcb xchg cwtl rex.WX push callq cmp rex.WRX adc (bad) push xchg push jmp rex.XB rex.WB and (bad) rex.RB xchg cmp (bad) mov mov test (bad) ficoml rex.RXB push jg repz mov xchg fdivrl jae jne sbb insl add sbb std or xchg int3 jl callq xchg popfq cld test nop xchg jge sbb enterq (bad) (bad) cmpsl xor jge mov push (bad) xor sub adc xchg loopne movabs fistpl push xchg js iret mov pushfq ds rex.WRXB cltd xchg scas (bad) mov push pushfq add xchg (bad) cltd xlat mov ljmp pushq and mov (bad) pushfq in pop (bad) jle xor add sahf outsb sar jno (bad) adc xchg (bad) xor xchg xor mov xchg (bad) rex.WRXB (bad) mov cmpsb adc push sub movsl int3 sti xor cmpsb jmpq insb cli sbb adc xchg lret and rex.WRB (bad) shrb xlat outsl iret jg in movabs lret cmc in and fcomps xchg rex.WRX ja xchg fldenv xchg leaveq add rex.WRB psadbw xchg in push cs cmp or cmp jg mov mov int3 (bad) sub cmpsb cmp xchg cmp (bad) (bad) movsb add xor test pop lea rex.RXB shl xchg mov xchg or testl (bad) imul mov callq rex.WR sbb jmp adc lahf mov int3 fisttpll sahf add add push jne divl push jg mov pushfq pop sahf loope enterq adcl or jge movabs xchg movsl pop leaveq (bad) push cmpsb (bad) stos (bad) cmp jne push pop mov mov push mov push stos pushfq or ficompl sarb xchg add pop decb icebp rex.WRXB hlt xchg fcmovb sbb mov mov push retq fildll mov callq (bad) addr32 ss movslq adc (bad) (bad) rex.XB and rex.RXB cltd xor movabs and cmp rex.RX rex.RXB pushfq (bad) scas mov stos rorl (bad) jno rex.WXB xor xchg sbb push fidiv movabs movsl push rex.WXB xchg ja pop (bad) xchg mov pushq imul cmp (bad) retq fdivr cltd test (bad) or mov (bad) pop xchg cmp sbb xlat mov xor jmpq movslq or (bad) xchg (bad) cmp outsl nop mov and cmc rcrl xchg sub movsb (bad) push mov (bad) loopne sbb int3 mov int insl mov push push rex punpckhwd xchg xor adc xor xlat xchg mov leaveq int xor jb ss (bad) sbb jp and (bad) pop xor out xchg fsubl rex.R add xchg and mov (bad) pushfq movslq pop push (bad) js outsb pushq sub sbb xchg mov and ffreep lea andb rex.B movslq rex.WR rex.WB pushq sahf xchg insb out lock data16 push enterq movabs andl rex.W adc gs mov pushq xchg xor test (bad) sbb add or xor pmuludq rex.WB pop out lea and icebp xchg imul xchg jle pop and (bad) fwait retq rex.WRXB scas jno or leaveq mov pushfq lret rcll nopl xchg mov xor jmpq xor test cmc imul (bad) (bad) push or or mov mov jge movsl (bad) xchg clc (bad) insb (bad) and cmp or (bad) pushfq fild rex.WRXB outsb sahf xchg in rex.WRB test mov sbb loop xchg orl test and xchg sbb xor fldenv std and callq rex.RB mov lret jns movabs callq movabs cmp and jg xlat (bad) (bad) pushq cli mov xchg loop retq mov xchg jne cs xchg (bad) rex.WXB jo pushfq jl xchg andb fistp outsb (bad) mov (bad) mov rcll movabs add addr32 xchg repnz negl mov adc fcoms fistpll sidt xchg jbe rex.WRB xor (bad) xchg adc sti mov movabs push sbb test xlat movabs or rex.R adc sti xchg addb lods (bad) lods xchg push ss mov in mov rex.WR (bad) xchg rex.RXB sahf mov jb nopl cs decb pushfq fwait (bad) mov movsb fimul nop callq repnz cmp fdivl imul xchg jg (bad) push rorl xor (bad) lods rex.X fs jo jne (bad) pop fbstp mov xor jb movsl pause jns lret and lods or insl rclb divb jbe ljmp rex.WX loope in xchg ja sub scas cmpsb xchg andb fildl pop rorb and xor mull jge test xchg movslq mov nop (bad) insb add (bad) test jae sahf (bad) rex.R cltd movsl sub xchg and shlb movabs xchg mov or icebp in (bad) nop rex.RXB sbb idivl nop mov pushfq pop and pushfq cmp clc pushfq rex.WRX rex mov rex.WR rex.WRXB rclb mov hlt xchg sti retq pop movslq cmpsl out lcall cmp cmp pop (bad) gs cmp pop jne push mov and out movslq loopne leaveq sub jnp sti xchg (bad) (bad) popfq cmp rex.WRB xor mov int3 scas lret pop loope xor callq rex.R rex.X (bad) jb or xchg add xchg xchg pushq mov movabs and adc rex.WXB xchg or push xchg enterw sub xchg mov add sbb pushfq jbe scas iret pop or fcmovnb pop stos movabs push ss rex.X add negl mov (bad) adc push cmp addr32 cmp and int3 ja (bad) data16 (bad) mov icebp add fwait xchg push (bad) test (bad) (bad) and jnp rex.WB sbb data16 pop or jo jbe xchg xor cmp movabs and fs lock test or rex.WRXB pop mov and int scas xor rex.WX movslq imul outsl adc jl cld int xor fistpl mov xchg pushfq jmp faddl pop popfq lret add cmp retq adc pop cmpl imul or cmp andl popfq or cld push sub (bad) pushfq (bad) in sub rex.WRB imul retq (bad) jmpq shrl cmc cwtl outsl fldl fsubrs btcl sbbb pop pop (bad) jl movsl stos lret (bad) out sbb xor sub and (bad) iret cmpb adc sahf (bad) xor xchg repnz sub and xchg rex.X jmpq and outsb or movabs notb xor rex.R jb sahf mov mov test adc loop clc and adc (bad) (bad) scas in insl jae xchg movsl mov stc fisttpll idiv fs jnp out lret (bad) movabs mov cmpsb lahf repz mov xchg fstpt mov fsubrp sarb mov adc xor rex.WRXB (bad) outsb scas jmpq stos test adc (bad) (bad) nop mov rex.B lods mov jg (bad) movsb fild (bad) movabs (bad) push in lahf movsb out xchg lock rorb cmp (bad) rex.WRX rex.WR xchg mov push add (bad) gs push xchg (bad) lahf out (bad) mov (bad) stos xchg jbe jo push or sub (bad) adc rcrl movsb movabs xchg mov and loopne (bad) xchg pop mov lahf imul jg pop sbbb mov test mov mov mov rcl lods rex.X (bad) or or mov movabs lahf pop cld (bad) mov orb gs push rex.RXB xchg scas cmp lock xchg in mov push sub jge cltd sbb (bad) insb mov lret stos out (bad) outsb cmp scas adc jb (bad) sub push lock pop stos add (bad) fstpt pop push (bad) (bad) cld and xor push addr32 mov push out rex.RX outsb stc sbb or gs rex.WR es mov pushfq mov imull rex.R cmc push scas clc or jge stos xor out ror mov scas add xchg xchg jns cmp xchg xchg leaveq mov pop fidiv pop test (bad) in mov adcb sub fbld push outsb fnstcw lock test rex.WX pop mov lret xlat (bad) (bad) pop mov xchg cwtl fistpl xchg sub rex.W (bad) and data16 popq (bad) pop in fdivrl push pop xor and push jmpq leaveq (bad) xchg rex.WRXB pop sub imul test out repz out sahf cmp rex.WR rex.WRXB pushq cmpl jne in fs xchg rex.RB xchg xor (bad) add lods stos jno negl xchg xor (bad) retq in rex.WR pop xor xchg mov push sbb (bad) jae test enterq lahf sub test fcmovbe jne vmovaps nop add push addr32 jae (bad) mov adc cmc (bad) push and jp sbbl and nop mov cs (bad) out rcll jb (bad) ds mov movl mov cmc xlat int3 movslq jp xchg cmp sub jae lea movsl mov rex.X adc (bad) fwait stos outsb xlat rex.WRXB ss (bad) (bad) mov (bad) xor in pop mov loopne (bad) push jae sbb (bad) and push push xchg (bad) (bad) imul jmp lods pop mov mov rex.WRXB mov rex.WRB je fwait xchg cs cwtl lods (bad) jmpq rex.W pop mov outsb xchg test push mov jne incb adc push ficomp (bad) xor (bad) inc xor loopne fwait sbb (bad) in xlat test push mov push mull and sub cwtl addl mov rex.WXB cmc cld je cmpsl xchg xor add (bad) test clc cwtl cmp jg out mov push out xor and in icebp xchg sbb add test xchg cmp int3 movabs (bad) cmpsl sbb cmpsb adc jp out (bad) xor cmpsl (bad) xchg int3 pushfq test sbb or (bad) out popfq xchg stc mov shlb (bad) cmp or std jo jne xchg xor out cmpsq movabs push sub rex.WB (bad) mov mov xchg xchg callq xchg (bad) in pop pushq xchg jb scas xchg loope jp and mov movabs mov shlb loop jle iret (bad) xlat xor mov cmp callq mov int sub movabs sti clc movslq (bad) nop cmp repz sahf sub fldcw and push out mov pushq (bad) sti (bad) jo xor rex.RB cmpb je xchg mov (bad) callq (bad) retq fiadd xchg xchg sub cld cltd mov mov (bad) nop sbb (bad) mov popfq imul mov out insl std (bad) jl lods movabs mov xchg cmp (bad) jnp movsb adc insl rex.WR xchg jbe add imul rex.WX movabs (bad) (bad) rex.XB and mov mov xor mov and jmp (bad) out loope icebp outsl leaveq xor insl rex movabs adc shrb (bad) fidiv imul xchg xchg (bad) callq (bad) rex.WRXB lods xlat (bad) insl std (bad) mov mov xor (bad) pushfq pop in (bad) hlt mov (bad) mov rex.WRB push cmp sbb jrcxz xchg out (bad) (bad) pushfq add loop (bad) (bad) xchg or cmp xchg rex adc xor iret jrcxz pop mov (bad) cmp insl xor rex.WR in xor jne in (bad) xor pushfq (bad) movabs lock (bad) retq retq rex.WXB add cmp (bad) pushfq clc adc retq sbb out stos fmull and adcl sub fisubl xor push fimull sbb add mov loope sub and enterq adc lret mov (bad) loop popfq (bad) add imul (bad) and rex.RB rex.R unpckhps adc rol or add retq js leaveq cmc mov jae imul retq int3 push movsl fwait sub nop or (bad) leaveq es cwtl mov in or sub fnop (bad) stc pop xchg push out xor sbb (bad) cmc cld sub rex.WRXB es rex.B jbe pushfq mov pop imul rex.W movabs mov xor add ficom movsl imul and jp enterq jmp adc ds imull lea jo lahf fwait out pop cmc (bad) repz fadd movabs movslq push nop mov (bad) pushq gs adc out (bad) push stc (bad) mov xchg imul or mov add jbe sbb xchg push ss adc and mov (bad) out pop callq repz jrcxz loop adc sub xor push xor xor sahf loopne jp sbb insb lods add and or add (bad) jnp rex.RX ds (bad) jmp in xchg loope outsb or adc xlat sahf ss insl rex.WXB xor pushq pop (bad) cmp cmc mov test mov cmpsl xor (bad) pop mov xchg pop sub jne jle lods movabs pop addr32 cmpl or lcall fiadd mov (bad) repnz stos sbb jne xchg fsubr retq lahf mov mov or sbb (bad) xchg addr32 lock xlat (bad) or xchg addr32 outsl xchg adc xor rex.RB loopne push cmc (bad) in xchg test lods xchg mov (bad) (bad) insl xchg jg rex.WR pop and (bad) data16 ja and movabs (bad) shlb sub sub xchg loopne or rex.RXB jbe and shrb adc cli xchg rex.RX nop callq cmpsl mov mov push adc mov jne out rex or or sub sbb fxch cmc (bad) shlb mov pop sub int3 mov jg retq scas lods sbb mov add movabs rex.B repz fcmovnb add loopne pop xchg mov xchg sahf je sbb lahf cmp test cwtl mov retq and push (bad) cli std out (bad) cmpsb sbbb sub lahf stos xchg xor outsb enterq (bad) cmp xchg int (bad) rex.R loop and xchg testb jg (bad) fstl (bad) setnp stos and (bad) pop test xchg loop (bad) jle rex.B rex.RXB (bad) je (bad) rex and (bad) in idivl nop xchg in (bad) mov jge adc movsb rex.WR rex.X retq (bad) scas xchg rex.RB pop scas (bad) shll pop loopne std ficoml int3 xlat seta cmpsb jo or add rex.W rex.WX xchg mov rex.X lock (bad) lahf (bad) cmp xchg mov sbb xchg adc out adc test repz jmp push out (bad) xchg retq lahf sti mov (bad) pop (bad) (bad) xor xchg retq pop or jnp jns pushfq imul (bad) mov cmpsl popfq or mov jne mov sahf adc mov popfq stc retq add movslq mov scas xchg outsl hlt callq (bad) test xchg std jbe mov xchg and add fsub xchg ljmp push out (bad) es xchg push sahf adc (bad) stc rcrb mov xchg mov mov sbbl xchg mov sbb mov fldl in jae sahf (bad) (bad) pop mov rex.WXB rex.B add gs pop std ja pop and sahf lods cmp pop in test (bad) jg popfq in fstpt push (bad) xchg rex.WRXB (bad) and outsb xchg pushq push stc add (bad) jno pop movabs jmpq flds rex.WRB jg scas push ja shll adc add rclb sbb icebp frstor cmp mov push pushfq xchg or jrcxz cmpsb movsl outsl movabs mov rex.WR mov pop xor leaveq ja and outsb imul rcrb xor rcrl cltd mov mov mov mov mov imul cmc outsl jae sbbl cmp push je notb movslq pushq hlt jl or gs sahf cmp adc (bad) jg jp jp xchg ss fisub mov cltd stc out cmpsb lock (bad) fldcw (bad) xchg jbe add sub sbb rcrb imull movabs (bad) and pushfq mov rex.WXB mov sbb retq (bad) sbb (bad) in (bad) movabs push setp andl cmpsl mov jle and leaveq sub jge mov test xor out (bad) movsl ds rex.WRX (bad) (bad) sub push xchg adc rex.RXB jne sahf ss mov cmp mov rex.RX (bad) cld (bad) pop stc outsb sbb rclb cwtl out push (bad) mov mov (bad) addl add movsb xchg sbb shrb xchg mov iret jrcxz (bad) sbbb insb xchg adc outsl jbe movsb xor movslq push jnp (bad) (bad) in (bad) mov sub loopne push push and rex.R adc icebp (bad) add xchg (bad) adc xchg movsl jb retq sbb pushfq rorb and mov mov rex.W cmp xchg es ds jge rex.WR sbb xchg mov pop (bad) lahf fldl cwtl mov rex.R xchg testl lret pop fldl fimul (bad) rex.RXB jmpq fwait pop xchg cwtl jne pop out mov sti scas jbe js (bad) (bad) xchg mov (bad) mov out (bad) adc stc jrcxz sub rex.RX xor mov xchg mov psubb mov retq jl xor mov fistl adc xchg pop pop pop rex.WB jmp (bad) push cltd addr32 xchg andb (bad) in mov (bad) or (bad) mov fisubl cmp sahf xchg cmpsl loopne rex.WR sbb pushfq rcll jb xlat jge add or outsb jno lret push xchg xchg icebp xor lods movabs and (bad) push (bad) cltd and loopne mov rex.RX xor nop sbb xchg mov jnp cmp sahf (bad) lods and cmpsb (bad) fimul pop rex.B loopne xchg in stc adc scas (bad) xor xchg std pop lock and mov (bad) ficom jl data16 (bad) (bad) jle (bad) mov lahf and movabs outsl out (bad) rex.WXB test or or xchg (bad) and rex.W mov loope push add (bad) retq movslq adc rex.WX movsb xchg lock lret xchg and xchg sbb out loop in rex.WRB mov xchg sbb sbb addr32 sahf (bad) (bad) mov add push xchg (bad) jle jae push jo jns xchg lock (bad) cmp js (bad) mov cmp retq or mov testb pop rex.WB rex.R ja mov jle rex.WX push mov (bad) sbb sbb fdivrs xchg insl jns rex.WB sbb (bad) adc pop cmp loop xor fist add stos rcll add xchg cltd retq imul outsb insl ja mov mov lret movsb xlat lock rex.WRX gs rex.WR sub push add (bad) xor cltd fistpll xchg (bad) cwtl jle lahf test decb (bad) (bad) mov lret jbe jnp out mov sbb sahf movabs xchg and adc enterq test rex jge adc xchg xor mov fmuls pop mov hlt (bad) sbbl test sbb adcb cli pop loop adc scas cmpsb rclb rex.WRXB push or push sahf or test xlat jbe cld movslq mov in (bad) jno pop popfq rex.WB (bad) divb (bad) lahf cltd push mov callq and lea (bad) add rex.WXB (bad) (bad) lock (bad) mov rex.RXB xchg popfq js fwait jg loopne adc xchg xchg mov shll retq xlat sub jne sbb movsl jae lret rex.RXB pop or xchg pop push divl mov callq jmp pop addr32 movsb (bad) rex.R lock loop jbe sar sbb rex.WRB shr mov rex.WR cmp xchg shl lret (bad) adc pop (bad) (bad) cmp xor (bad) mov rex.X rex.RX je cli enterq (bad) hlt pushq ficomp (bad) adc xor sbb or je (bad) retq lret sub movsb sub xor jne push mov fwait (bad) mov sahf outsl out xchg data16 rex.WRXB std xlat xor jne and (bad) cs or stos ficom retq test movslq nop jg (bad) jb stc mov pop lahf jl rex.WRB clc pushfq mov fstl movslq std pop insl popfq jge rex.RB cltd add cmp add out faddl (bad) gs data16 popfq retq adc (bad) stos rex.XB insl out add pop and data16 xchg cmpsb loopne add or outsb fidiv ja mov lods out nop (bad) pushfq or fcmovne push mov mov jp cmp jns mov pushfq cmc push movabs loopne cltd (bad) outsb in xchg xchg mov (bad) xchg (bad) mov xlat adc sti jnp loope pop enterq push (bad) (bad) test push add mov popfq rcrb (bad) stos xchg mov packsswb xchg mov popfq movslq rex.WXB (bad) scas mov (bad) cmpsb and mov mov push pushfq (bad) hlt jg frstor fdiv jl shlb pop xchg and rex.RB xchg or or add insb jne movabs add repnz (bad) mov movslq xor xor push xchg (bad) stos es pop (bad) or jns iret lahf sbb rex.WRX adc rcrb pop gs (bad) rex.WX loop adc pop int3 test rex.RXB mov addr32 lock lahf xor int cwtl ja int3 jns,pn pushfq imul jae xchg gs pop (bad) lea xchg cmpsl (bad) (bad) xchg sub int out pushfq xchg (bad) in mov iret (bad) and movabs pop jmp popfq pop sti rex.WXB int3 (bad) (bad) xchg sbb imul (bad) pop pushfq mov notb jmpq and fwait cmpsl (bad) fstps add jb xchg jp mov rex.WRXB pop in xchg xor xchg fxam pop scas mov (bad) (bad) mov rex.RB retq rex.WX and insb xchg jb (bad) or rolb (bad) mov outsl mov int3 testb xchg xchg (bad) popfq out sub xchg xor or jg repnz stos rex.WRB sub mov sahf in rex.RB insb rex.X pop lods add mov pop lea and jo xchg mov push cwtl sti adc add movsb shrl pop cmp sub xchg jp (bad) loopne pop jl (bad) and mov adc stos cmp xlat jne (bad) fstl insb (bad) notb sarb cmp xchg (bad) scas cld pushq ss xchg (bad) hlt jge pop movabs (bad) sbb pop (bad) sub pop xchg mov rex.WRXB test adc xchg test mov xchg rex.W jno imul xchg insb cmp mov mov and rex repz mov push cmpsb mov xchg xor (bad) cmpsb scas cmp mov stc xchg or vmovq subb in movabs fsubrl mov sbb test rex.WX in (bad) sub push pop or sti sbb mov cmp insb (bad) movsl jmp subl mov std xchg int mov movabs xor cltd imul stos imul ds or xchg (bad) add cwtl lea (bad) xchg push movabs cmpsb loopne fnstsw rcl push or jge shlb sbb ds xchg (bad) (bad) jne lahf rcrb jle and movsl loopne pushfq repnz or adc mov cmpsb test rex.WRXB xlat mov (bad) (bad) jge or movsb sbb jp movsb xchg cmp add mov in ja scas and cmc (bad) fildll neg sbb pop rex.WRXB cmp jo sahf movabs fdiv cld stos sbb mov mov mov sbb lods lgs push jp movslq iret rex pop push xchg cli (bad) fiadd xchg jns push (bad) pop test xchg xchg enterq adc jle sub adc mov in lock rex.WR rex.WX add adcl outsl fsubrl loopne sbb shll ljmp xchg mov cmp cltd xchg fnstenv (bad) in and lods add rex.WX ds mov (bad) out insl int fwait cmpsl sbb push cs loop jnp xchg pop jb mov pop (bad) push (bad) test rex.WR shll xchg add in movsb cs cmpsl fpatan scas and rex.WXB pop xchg (bad) movsb rex.WRXB jle mov loop sahf idivl std stos (bad) movsb push or (bad) icebp sahf add cmc idivb test jg shlb add adc jo shrl out jmpq xchg pop iret jo rcll fcompl jb movabs sarl rex.WXB jg mov outsb (bad) pop pop jge or lahf imul pop mov push and lods (bad) xchg and mov jmpq popfq xchg data16 push ficomp push jno xchg jg,pn popfq int3 scas je pushq jmp jmpq out nop xchg fdiv imul rex.RB rex.WR fs pop pop shl xchg push movabs in jl xlat pop movsb (bad) adc (bad) (bad) and rex.WRB adc or (bad) and mov cmpsb fild pop adc lret mov xor mov xchg add xchg fsubp rex.WB fwait hlt sahf (bad) sarb sarl (bad) mov add mov fwait shl push jrcxz or lret fnsave pop sub mov (bad) repz xchg xchg pop in sbb sahf adc es rex.WXB (bad) xchg xor and jg (bad) fcompl add mov lahf push rex.WRX mov fidivr rex.WR insb rex.W jrcxz sbb addb jrcxz rex.WRX pushq sub pushfq sti mov (bad) jrcxz mov cltd or or mov movsb (bad) cmp and (bad) pop add shlb cmc movabs iret outsb (bad) push mov (bad) popfq imul rorb mov test pushq and lea test rex.WX pause xchg int3 xchg in lahf retq sahf lods (bad) mov adc cmp cmp rex.R add mov mov sub adcl xor xchg or pop push jnp rex.R cltd lret (bad) rcll xchg gs and ds mov xor xchg mov rex.WRXB jl (bad) (bad) test or or xchg (bad) fmull xchg (bad) pushq loop xchg movslq scas leaveq mov jo pop xor or or pop and ss (bad) icebp lret retq (bad) rclb in sub push stos mov mov (bad) (bad) and icebp (bad) xchg pop mov rex.B rex.RXB sahf imul rex.XB mov repnz repz xchg xchg (bad) xor notb movabs iret (bad) in data16 loope sti (bad) stos jp sti rex.RX (bad) (bad) loop and loopne es jbe push cmp callq rex.WXB jb rex xchg movabs and or ficomp sahf cmpsl (bad) and rex.WX rex cmpsb stos xchg jge icebp in add sbb pop (bad) xchg jb rex.WX outsl sub div mov jae rex.RB push ror add fiaddl (bad) and mov xchg sbb cmpsb notb mov mov (bad) lea rcr movabs lret js cmp iret (bad) mov or jne lret loopne rex.RB pop nop xchg sub pushq xchg (bad) (bad) or and xchg adc push jrcxz push (bad) jne (bad) xchg movabs add sub (bad) stos imul nop out (bad) xor fstl cmp rex.WRXB movabs sbb sbbl sub (bad) divl (bad) xchg pushq lods pop (bad) test rex.WRB lock cmp adc repz lea xchg add sbbl adcb nop mov jns enterq (bad) jne lods in pop (bad) pop scas mov xchg shrl or pushq mov adc fcoms mov sahf leaveq je rex.RX mov sub insb cwtl and (bad) mov jnp movsl add callq shl xor outsb sbb push mov push pushfq adc adc (bad) sub jge movabs (bad) cwtl loopne xor addr32 jno sahf add push jo rex.B push push (bad) sub mov subl clc (bad) ja hlt movabs lahf (bad) pushq jl fs leaveq rex popfq icebp lea rex.RB or mov push icebp xchg test rolb (bad) mov pushfq enterq or mov ds add sbb pushfq stc (bad) pop pop popfq sbb mov sbb loopne rex.WR pushq xor (bad) sahf mov (bad) retq sti lea xchg popfq jg (bad) out mov jae fisttpll jbe (bad) sbb jbe pop sbb push cwtl rex.WX jae je movsb add (bad) (bad) jle (bad) sahf mov out mov fimull jg mov imul xor rex.R rex.WR imul mov and xchg nop leaveq out stos popfq nop pushq enterq xchg imull xlat (bad) jb test (bad) mov movabs mov add cmp (bad) cmpb (bad) shlb adcl cwtl (bad) cli loopne xlat jg stc (bad) sahf mov or es in loop cmp add (bad) pop pushfq adc pop lcall rex.R push in scas (bad) sub rex.WRXB sub out xor popfw rex.RXB and push fwait scas sub movabs push add (bad) scas fldl rex.XB test or callq pop rex.WRB nop lods (bad) xchg jmp jnp (bad) xor and xchg (bad) gs (bad) jge test rex.WXB fimul mov xchg push push test rex.RX (bad) pushq (bad) test fdivrl jmp xchg pop sub loopne xchg loop jl hlt (bad) faddl std and (bad) cmpsl pushq fcompl mov repz out xchg (bad) xlat jmp stos (bad) push pop sti mov mov adc clc stos fcmove insl rex.WRXB jnp movabs scas sbb iret mov outsb push andl (bad) jmp lock cmpsb sbb sbb (bad) mov repz sbb (bad) in cmp movsb (bad) rex.B jns add and pop pushfq in xchg pop test (bad) (bad) stos and movabs (bad) (bad) enterq sbb loop sbb push adc push cmpsb imul cmpsb xchg (bad) cmp clc sbb mov outsl loope shlb rex.R pop jmp test (bad) (bad) cwtl repnz mov (bad) jo (bad) (bad) movabs push xchg jrcxz mov pushq vmovq pop xchg xlat subb rex.WB lock scas cs jno hlt xlat add jl decb xchg push out movsb or repnz shr loopne sbb sarl rex.WX (bad) out pop sub (bad) pop out push addl (bad) and (bad) rcrl mov (bad) sahf (bad) mov or retq loop xchg cmp and (bad) xchg repnz pushfq adc shrl pop ficomp ja test cmpsl jge (bad) enterq xchg jmpq xchg xchg lahf test cltd jbe (bad) jrcxz xchg xor jge ficom fwait xchg loop adc xorb or loope push fcompl xchg cwtl retq xor mov pop cmp sahf jmpw jb test stos cwtl lahf fnop clc adc enterq jno stos pushfq (bad) mov (bad) loopne (bad) insb (bad) jmp out (bad) mov (bad) (bad) sub ds jnp cmp sbb (bad) scas fldt roll mov cmp (bad) xchg lahf (bad) sti push xchg (bad) in jnp mov scas mov adc (bad) pop clc xchg or mov mov rorl addl insb cld imul popfq stc xchg imul mov sahf and add pop (bad) cmp or sti fcmovne xchg movabs vpshuflw int scas adc adc add and outsl push xchg push add loopne push adc movsl (bad) mov (bad) xchg xchg sahf popfq std mov (bad) adc jnp (bad) mov xchg movsb dec stc push (bad) (bad) callq rex.WXB fstps loop retq (bad) push mov test mov rex.WX push xor js add iret add jnp sbb jno jmpq and insb xchg and mov sub sub xchg sarb rorb mov fisubr xchg xchg sbb jb (bad) xchg pushq fcomps mov (bad) loop movslq jg jle sub xchg retq jge movslq pushq rex.WXB rex.XB push loop cmc jrcxz movsl adc xlat std (bad) mov mov movabs xchg cltd (bad) loop jle pop xchg scas insl movabs outsb (bad) movsl xchg pop sahf stos sub xor int (bad) cmp xchg mov movabs shl mov and movsl xchg fwait jae push sub xor xchg jns (bad) jle jnp mov pop jmp out mov lret xchg and mov xlat xchg icebp (bad) xor jmp (bad) jle rclb jns mov (bad) movslq sbb mov adc (bad) pushq adc adc (bad) loopne cltd iret outsl (bad) cld mov gs test (bad) cmpl in retq mov xchg nop (bad) cmp mov xchg (bad) rex.WR (bad) (bad) cmpsl outsl pop xor mov mov jge in xchg out xchg rclb (bad) mov insb leaveq mov (bad) or (bad) (bad) pushfq rex.WRXB jp add and callq jrcxz jae xor (bad) insl xor out (bad) ss adc std shrb lret out rex.WR ss mov xchg rex test (bad) int3 rex.WX mov jmp movsb mov adc fdivl push and (bad) and adc mov clc retq (bad) callq notl (bad) cs addr32 xor and movabs (bad) or scas add cmp (bad) rex.WB loope cltd xlat (bad) sub xchg (bad) pop xchg cltd and jnp or xchg adc fwait and movslq outsb loop xchg std sbb movabs and roll outsb outsl (bad) rcrl out rex.RB fistp rex.XB lock push jno jmp pop in mov pop jbe fs (bad) jno fisttp cltd cmovae adc (bad) (bad) testb adc test popfq data16 imul xchg fdivl pushfq cwtl hlt (bad) mov in popfq movabs scas jg fildll outsl mov shrb sbb mov cmp rex.B gs test loopne or add xor fistl icebp pop mov out (bad) (bad) jnp (bad) sbb mov add roll push add xchg (bad) mov xchg popfq rex.WRXB (bad) rex.XB je outsl movsl rex.X (bad) sbb idiv jne jbe rex.RXB mov outsb je mov (bad) cmp std mov jne rex.WRXB adc sub xchg (bad) jo pop jl out mov js sub movabs repz cmp mov add in imul xchg movsl enterq (bad) cmc sub adc (bad) mov pop movabs (bad) sub mov rex.WXB cld push sarl and pushfq (bad) (bad) icebp mov cmp mov (bad) xlat mov icebp je fistpll rex.WX out xor xchg movslq callq js mov pop jmpq xor (bad) pop (bad) push movabs cli fcompl (bad) jmpq (bad) jrcxz (bad) pop gs imul jns loope fwait and (bad) or mul movabs (bad) (bad) xor (bad) mov movslq rex.B rex.WB sahf fimull test xor mov mov xchg adc cmp lods sbb psubq xchg jno xchg cmpsb lret rex.X lea adc xchg (bad) outsl jne adc cltd mov push jae (bad) jb lea rex.WXB retq in mov jnp xchg xor cmp ds test mov loop sahf xchg cwtl fs pop (bad) (bad) xchg (bad) xchg icebp popfq ds in sahf rex.WRXB rex.XB (bad) cmpsl adc or sub mov cmp xchg xchg fmull sub scas sahf (bad) cmp mov (bad) mov xor mov mov push loope jmp or (bad) mov push loop sub leaveq (bad) lock jae rex.B add lea jns xchg mov movsl rex.WB sub pop (bad) imul jo vpshufhw pop mov movabs mov (bad) adc out movsl or sbb jg imul fstpl rolb or or xchg mov or scas jno adc rex.WRB rex.WRXB enterq xchg (bad) lret mov div (bad) and lret xchg (bad) imul iret xor (bad) add mov pop ror pop hlt or out or xchg movabs (bad) pop cmpsb jns lock movabs (bad) rex.WRXB and sub ja (bad) in shrb loope negb (bad) cmpsb xor or add hlt mov and rex.WRXB lock icebp jnp (bad) sti (bad) or test repz out rex.RX xor xchg enterq addr32 (bad) popfq pop out jp (bad) out retq lea pushq popfq cmp rex adc and out movabs xchg stos (bad) rex.WRX mov ss mov outsb push movslq add int3 xchg and push bswap push (bad) cmpl jb and mov xchg (bad) (bad) push out adc stos (bad) prefetch or (bad) and mov sarb xchg and xchg punpckldq lods mov mov insb xchg xchg rcll xor cmp pop leaveq mov data16 xchg mov ss imul loope faddp idivl popfq mov adc (bad) rex.WR (bad) ds (bad) test cmp rex.WB sub cmp and (bad) stos mov fs addr32 and mov or out (bad) mov (bad) mov pop xchg fidivr andb add pop (bad) pushq xor sbb movabs and rex.RB lock push and fwait add xchg icebp (bad) (bad) negl xchg fdivrp push or cmpsl movabs mov xchg mov mov rex.WB repnz sbb mov sti repz jmpq je mov (bad) (bad) rex.RXB in pop xchg sarb pop or sbb rex.WRX pop movabs int ds std (bad) xchg mov mov rex.WR mov mov adc jg cs xor repnz cmc fldt xchg lret xchg xor (bad) cwtl jnp addr32 sbb lods (bad) ds jno mov mov nop pushfq out cwtl (bad) fs mov pop retq pop negl jae rex.WRXB mov adc xchg leaveq or rex.XB lea ja or mov mov popfq jge cmp retq mov jno rex sbb adc jns xchg xrelease test jbe pushq push mov in fbld cmpsb pop xlat fs jg sbb fnstenv cwtl rex.WRX sahf in adcl rex.RB fwait (bad) sub mov sahf retq xchg iret jrcxz jne mov xchg push rorl cmp (bad) rex.R movsl or jp rorl (bad) xchg adc sub (bad) xchg rol pop pop jbe,pn sub jns (bad) in push xchg je push ds (bad) jrcxz xchg (bad) outsb sbb mov jle sbb lock adc adc cltd push scas nop adc stc cmc mov scas jp out xor mov sahf negl xchg sbb (bad) imul nop test or vpmulhuw lea xchg mov cmpsl jo in (bad) rex.W es imul jle (bad) fdivp (bad) mull push movsl pushq (bad) movabs gs pop nop (bad) and adcb movabs xlat xchg (bad) xor cmc jae and bt xchg rcll out sub xchg rex.WXB movabs mov insb loop test mov lea repz pop (bad) adc sbb pushq repnz xchg rex.WRB movabs (bad) outsl stc or (bad) retq ja mov xor insb pushq add out mov or stos pop lahf jrcxz and add jmpq callq xlat sbb pushfq (bad) maxps (bad) sbb pop sbb xor xchg xor pop xor (bad) xchg or nop sbb pop scas mov out (bad) lahf push fcmovnu pop jmp xchg sbb fwait push leaveq nop test add add mov sub hlt (bad) movabs push rcrb insb push xchg cmpl rex.WRX rex.W rex.WRXB sahf and pop add sahf sub xchg sub jp cltd (bad) (bad) jmpq fucom lahf std or push out add iret movabs and sar in negb adc std rex.W (bad) jns add (bad) xor xchg out shl adc (bad) xor pop fistpl jns (bad) out leaveq xchg (bad) repnz sti (bad) xchg enterq sbb jmp mov jg cmpsb in sbb mov enterq rex.R cmc (bad) and lahf xchg add rex.WB rex.WRX es and pushfq (bad) (bad) mov jnp mov fstl pop insb sub in callq (bad) xchg ficompl xchg out xchg pop xchg xor cli (bad) cwtl pushfq in loope (bad) add fwait (bad) pushq mov (bad) in push adc repz cmp jb hlt and pushq push and xchg mov rex.X (bad) jno xchg lahf lock push fild test cmpsl fbld jp (bad) pop lahf rex.WB insl loope nop cmp pushq movsl (bad) cmp xchg adcl (bad) int cmp jne sub in xlat jnp rorl (bad) jb rorb xor stos cli (bad) mov mov in mov mov jg jrcxz mov and (bad) xor repz jge mov cmp sub (bad) push (bad) mov push enterq or mov xchg outsl movsl xor imul addr32 mov rex.WXB adc test xchg jbe out pushfq repnz sbb out insl mov (bad) sahf neg movabs (bad) (bad) xor cmpsb (bad) pop add cmp xor sarb (bad) mov or nop add mov jno int3 pushq repz movslq push and (bad) xchg xchg xchg pop xor jmp ja or jg cmp movabs outsl popfq xchg mov stos ds lods xchg sbb (bad) fsubr not xchg mov sbb popfq in (bad) and ror jno sbb jg int ja pop pushq add xchg mov je iret clc push (bad) in xchg xor retq out mov fwait xchg cmpsl pop (bad) mov movabs movabs sarb iret (bad) push xor xchg rex.B pushfq rex data16 xor int3 xlat (bad) (bad) test (bad) clc mov stos rex.RB (bad) nop lods mov cmc and int3 xchg rex.R xchg add imul pop callq loop nop (bad) outsl mov xchg (bad) lahf lret or test (bad) mov imul push loopne retq stos rex adcl clc mov (bad) outsb movsb cmp jmp movabs sub rex.RXB mov add xor push xchg imul jle push or out rex.X fcoms xor xchg stos mov es shrl movsb movabs pop sahf adc addb jnp ds (bad) lea sahf fistpll and mov movabs lods jns (bad) rex.WB data16 mov and xchg and (bad) in cltd add pushq xlat (bad) (bad) xchg retq shrb outsl mov xchg pop icebp xor imul mov pinsrw in sub cmp movabs push clc (bad) (bad) pushfq xor xchg movabs leaveq rex.WB push mov iret push adc xchg cmp rex.XB xchg lret std and pop movabs mov and rex.WRX add movabs pop in xor ss movabs mov movabs rex.R mov cmp rex.WR sbb push int rex.WRXB sub mov nop movabs movabs and xlat jmp rex.W scas fistl sar sbb movabs hlt cmpsl rex.WRX cmc adc in fadd mov iret rep retq test xchg subb push jmpq sub pushq xor shrb xchg stos sub jno sbb retq leaveq lret push out (bad) mov lea movswl lret mov xor or bnd notb mov or pop sahf mov (bad) adc movabs int (bad) std (bad) hlt cwtl punpckldq mov and cmp mov add (bad) sahf int mov sub mov cmp lods xchg shrl jbe test outsl or cs mov jae jmp xchg movslq and (bad) mov test mov rex.WX cmp outsl (bad) clc and out in (bad) mov cltd mov xor mov int mov xlat xchg or ss fdivrs (bad) mov movabs and xchg test stos sub xor in in (bad) lods cmp and fs rex.WX rex.W imul pop mov mov adc mov rex.WRXB js sti pop jge (bad) outsl cwtl test sub int3 cwtl (bad) xchg (bad) test jae and (bad) (bad) mov xor lods scas fiadd jae cmpsl push fwait shl mov jbe enterq enterq sub cmp pop fisubl enterq sbb (bad) xchg xchg jmpq xor sub xchg lock cld xchg outsl in jb sbb jns rex.WRX jbe (bad) (bad) std movslq insl xchg enterq push cli pop (bad) (bad) fucomp push adc push ja cwtl xlat insb movabs jle mov sahf outsl movabs jl je cwtl adc cltd (bad) movslq jge pop movl xor (bad) mov sub enterq fs push push mov adc or (bad) mov fnsave movsl mov clc xor hlt (bad) repz or (bad) (bad) out int3 imul (bad) in imul (bad) es xchg movabs imulb lods sti test sahf and (bad) movsl and sar xchg lahf xor (bad) xchg xchg callq lock movsb mov or out icebp imul and (bad) cmpsb adc mov (bad) push fildl lods je scas cmp pop movabs (bad) adc sbb cwtl adcl sub and (bad) sub jle jl ds (bad) mov (bad) insb shrl sahf and mov sbb rex.WXB outsb xchg jbe clc xchg testl and (bad) or push rex testl xor lods insl and and rex.WR adc icebp mov xor clc ds sbb jp and fimull xor (bad) cmpl pushq (bad) (bad) mov movabs (bad) ds xlat lahf out xchg add pop cmp scas jmpq std retq jne adc mov cltd cli cs push rex.X mov fwait xor fistpl xchg mov xor jae mov sbb cld fnsetpm(287 (bad) enterq xchg (bad) cmp (bad) sbb (bad) mov adc int pop lods imul jnp xchg adc sbb mov push loopne push xor cmp ss pushq (bad) cli mov lea str outsb sahf outsb nop adc or mov add xchg xchg rex.RXB movsl xchg imul (bad) xchg rex.RB sub pop (bad) xchg test addb xchg rex.WXB rex.WB rcrl xchg xchg sub pushq pushfq in sbbb (bad) rex.WRXB mov jae mov xchg (bad) and jae rex.WB stos sub popfq cmp movabs retq xchg hlt iret pop (bad) (bad) ja lret (bad) (bad) js sbb sub xor xor enterq nop or out insl push sub in sarb jle rex.WRXB add imul lahf rex.W or sub notl or imul or cld insb mov jg lods ja or mov and mov xchg sub iret cmp fidiv (bad) add push mov movslq xchg cmpsl cs scas retq loope fidivl add xor jmp lea mull or lods leaveq xchg mov retq shrb out and xchg (bad) xchg (bad) movabs mov add jns jle (bad) jbe pop cmpsb or xor clc (bad) add ja (bad) xchg mov xchg xor (bad) divps gs cmpsb je,pt pop rex.W loope pushfq pop enterq and rex scas imul jl mov jne jl scas (bad) jrcxz and movabs sbb cltd (bad) in rorl pushq sub sub (bad) cld popfq push rorl in lock and xchg cltd fadd jne loope (bad) rex.WB rex.WXB xchg (bad) sub gs cmpsl test subb add js in iret pop xor (bad) mov xchg cmp (bad) xchg in stc and loop xchg rex.WR cvtpi2ps loopne cli ss pushq xor and jp outsb mulb mov (bad) (bad) cmp adc (bad) popfq sub mov sbb stos xchg rex.X mov mov ja cmpsb (bad) ss xchg sub es data16 test push xlat (bad) or mov xchg repnz or xchg sub jmpq xchg mov rex.WR xchg jb es cmc cmp fisubr nop lods outsl (bad) (bad) (bad) addr32 xor xchg xchg imul push (bad) leaveq xchg lahf jno and lahf movabs xor movabs callq xchg add fwait movabs sub iret add movabs jle cwtl lods imull jrcxz sub sub jo decl outsb sub loopne cmp fisttp in in movabs std (bad) leaveq je xchg repz (bad) (bad) sub and or out jl sbb sub (bad) push or jle shr popq jrcxz mov mov cmpsl insb push xchg or jge retq adcb movabs sbb movl pop mov xchg negl jmp sub xchg or or (bad) xchg mov push retq fnstsw cmp sbb xchg out xchg icebp rex.R xlat mov clc push (bad) movslq mov sub shr rex.R idivl rex.WRB insl out (bad) cwtl mov rex.RXB rex.RX cmp mov mov vmovaps lods or add lret pop add (bad) lahf mov mov rex.XB fnsave rclb rex.R rex.RX out and outsl xor pushfq or push push xchg and rex.WRX xlat rex.R movabs (bad) out cmp lahf scas insb or xchg loop (bad) je test sahf sub stc std (bad) lock in mov mov mov push xchg (bad) pop sbbl xchg pop pop lahf sbb rex.XB mov (bad) insb popfq (bad) jae pushfq push rex.WXB mov (bad) ja int3 or push lret xchg xor (bad) mov clc xchg xor sbb stos cwtl (bad) pop fwait andb sub (bad) mov andl stos xchg outsb (bad) movabs xchg rex.W pop jmpq clc (bad) movabs xchg jb add fistl int rex.RX rex.WRXB outsl xor movabs cmp push mov (bad) add xchg (bad) in mov and mov movabs jnp in lock movsb jo clc cmp pop push xchg hlt shll xor nop frstor repz out imul xchg movsl in test scas (bad) mov mov lea or pushfq sub cwtl callq push jo rex (bad) cmp in orl bnd add xchg jb movabs fstl out xchg pop cmp gs popfq sbb adc sub xchg rcrb (bad) adc push rolb lahf (bad) mov mov xchg jnp (bad) rex.WRX and add sub xor jo movsb movabs rex.RB sub cmpsb in (bad) (bad) out mov sbb negl fidivl xchg adc movsl adc mov pushq sahf rex.RB gs int (bad) jns jo xchg cmp out sbb add (bad) sbb or mov and (bad) rex.WRX pop (bad) sahf and subb bswap sub mov (bad) (bad) rorl out jl xchg lret (bad) (bad) iret (bad) addr32 sub lods mov fistl (bad) sarl jg retq rex.W (bad) in (bad) sahf xor loope or ja sbb add fsubrl (bad) mov pop xchg mov jge ss rex.R outsl (bad) sbb fmul popfq xor mov rex.WRXB std adcb (bad) xchg xchg add (bad) push out loope pop (bad) insb cmp cli retq lret jbe movslq pushq jae movabs ror mov imul lock out repz mov pop add mov xchg (bad) rex.W xchg or stos cmp jnp (bad) pop movslq xchg add icebp or rex.WB xchg (bad) outsb xchg (bad) (bad) test repz push add xor shlb adc xchg rex.X mov (bad) in idivl mov pushq mov rex.WX repz mov sbb xor lods jb movabs pop xchg push popq cmp mov cmpb and sub (bad) (bad) (bad) lods movsb mov rex.WX mov sub jmp gs pop xor js xchg jnp in adc (bad) adc movsb cmpsl xchg (bad) mov mov mov (bad) (bad) jno cld (bad) xchg mov insl lock mov movsl push in xchg movabs xchg sub or push scas lods sbb decb outsl (bad) nop mov loop pop push xor xchg stos movabs cmpsb add jmp rex.R jl xchg pop xchg mov sub movabs (bad) jge xchg xchg fstl cmp push mov nop out (bad) xor (bad) (bad) idiv movabs (bad) lods insb mov adc jrcxz movl mov (bad) fcom repz lea xchg out movsl iret mov callq addr32 in fisttpl movslq out adc xchg adc mov shl mov (bad) mov imul jg (bad) mov sahf int movabs lods rex.WB (bad) add (bad) fprem1 and shlb fsts xor pop adcl fxch xor test js (bad) or negb movabs add idivl xchg shll movsl xchg std mov mov mov jge jo (bad) push push (bad) mov sbb mov mov in and rex.XB imul mov or cld jl adc movabs or sub push lods cmpsl mov movsb (bad) cmp xchg (bad) ror shrl or (bad) xor insl jmp out (bad) lea xchg sahf sti test add icebp jmpq mov cld (bad) dec xchg pop sbb fwait out ds add sarl adc (bad) outsl or outsl scas (bad) (bad) push sbb mov sarb cmp idivl shr repnz (bad) rex.WXB mov rex.RX je and fwait xchg ja sti rex.X or mov movsl test (bad) rex.RX add cmp out test mov (bad) out rex.R imul lock cmpsb pushfq lret std rex.WRX xor (bad) pop rex.WB jne mov pop mov fwait xchg cmpsb push movsb cs or sub cltd in test fnstcw adc add movabs push lret fsubl xchg (bad) fild movabs jb add xor out cltd pushfq mov stc imul hlt cli insl xchg mov (bad) pop jnp xchg (bad) xchg adc imul xchg (bad) pushfq mov mov sbb xchg jmp scas iret adc add movsl (bad) cmp mov adc push jge rex.WRX rex.R rcrl test and cmp int scas lea lahf popfq movslq scas sbb jns sbb stc (bad) in (bad) je test fiadd xchg (bad) (bad) div mov nop mov cld sbb pop nop (bad) mov jns sub stc jae mov imull (bad) callq jg add (bad) xchg imul mov cltd js xor nop in stc cld adc xor insl outsb movslq adc rex.X in sbb lods (bad) ja (bad) xchg mov mov (bad) sbb lea xor and outsl (bad) fs adc (bad) xchg out nop ffreep fidivrl mov mov xchg sbb int3 jnp rex.WRB pushq fsubrs (bad) mov jl xchg fldcw mov (bad) push sub rex.WX adc (bad) and sub push imul out (bad) adc mov or rex.WRX (bad) rorl (bad) fdivrs rex.W test (bad) fistpl sub or (bad) rex.WRB xchg adc adcb pop jge (bad) xorl fstps pop (bad) fild xor sbb mov stos sbb movd cmpsl or and cmp (bad) push lret (bad) hlt jg stos stc movsl cmpsb rex.B xchg (bad) add clc std (bad) hlt test xchg in movsl callq xchg int3 pop leaveq fs mov sub movabs icebp rex.WB jg mov stos xor adc jb xchg imul sub fiadd mov push rex.WB xchg outsl add gs fisttpll add jp jmpq fidivr rolb mov imul xchg in xor clc fildll push ds outsl cs mov push (bad) (bad) rcrb ss shrb ja nop mov ja fimull loop jg insl mov cltd sbb fcompl pop rex.WRXB adcl jnp xchg cmpsb rex.WRXB (bad) and (bad) adc mov xchg fidiv jns cmp lods es out cmp mov sub and xor lea sahf xchg mov xchg xchg xchg rex.RB insl xor cmp jno (bad) (bad) rex.R jmpq jle mov hlt rex.WB test popfq xor mull cmp cwtl pushq (bad) std rex.W add cmp (bad) sbb sbb test icebp (bad) xchg xor xchg lret movsb mov (bad) je fidivr adc loop shr xchg (bad) add mov test xchg sbb (bad) jle jns fwait xchg or push and rex.WRB mov (bad) rex.RXB fisttpl movsb and mov or fdivr rex.XB sbb sub pop mov cwtl add retq sbb push jp out (bad) sub push cmpsl jmpq and (bad) mov rex.R jb repnz lods rex.B cs mov pop mov imul push xor int3 cs push sahf pop or (bad) fdivl imul (bad) cmp and sbb data16 imul (bad) rorb out (bad) loope xchg sub (bad) in rex.WX xchg pushfq es movsb mov mov idiv adc mov pushq in cmp cmpsl lock xchg rex.RXB rex.R (bad) and (bad) push sub xlat stos mov mov push jb sub mov movslq loopne xchg cwtl cmp pushq (bad) jle mov cmp or fild push loopne xchg (bad) cmpsl (bad) (bad) (bad) rex.WB sbb jnp xchg push cmc jbe sbb add (bad) jb stos sbb (bad) xchg in lret gs rex.RX out xchg xchg (bad) cmp lea imul cld pop add fdiv (bad) movabs mov mov add or (bad) push (bad) push pushq test (bad) rex maxps add nop pop imul sahf cmc movsb popfq mov pushfq incl (bad) movabs add xchg and fwait xchg mov cltd stos add stc cwtl retq pop (bad) ja test cwtl jns xchg cmp xlat mov xchg rex.RXB push callq jnp popfq (bad) hlt xchg rex.R xor mov mov shrb movslq push xchg sti loope cli fld ja mov pushq xchg scas movabs outsl fucomp rclb (bad) callq lods lock rex.WRX or movabs pop (bad) rcrb (bad) stos add or adc pushfq push cmp adc rex.RX lahf rex push (bad) pushq cltd out icebp ror mov xor (bad) mov insb loop push adc xor (bad) fisubl rex.WRX enterq shll mov repz popfq rex.X add outsl (bad) jmpq nop and and lcall je xchg cld outsb sub adc (bad) mov pop (bad) test pop imul cltd xlat lea xor and mov jg xchg movabs and cmpb negb jge data16 nop sbb (bad) (bad) outsl jl xor cmp imul sbb pop (bad) insl mov and adc (bad) mov cli shl mov adc pop push loop nop jmp rex.WX push js rex.WR xchg outsl adc in cwtl xor iret mov rex.WX rex.WXB sub and xchg or rex.B mov imul jrcxz fsubl movsl and jmpq jo mov mov rex.W mov push pop (bad) (bad) cmp sahf xchg imul clc xchg cli push jbe (bad) and sbb xor or or fisubl push (bad) fwait (bad) push xor stos add or cwtl or (bad) mov mov rorl je icebp (bad) rex.WRB rex rex.RXB fist and adc (bad) xchg ljmp add xor xchg cli pop ss in pushq xchg mov outsb mov mov data16 add rex.RXB retq loop xchg jno xchg pop scas jae sbb xchg (bad) popfq movsl orb rex.RXB (bad) movslq mov cmp push nop test jne rex.WRB test pop mov xchg pushq test sahf mov sti cltd mov cmc pop icebp movsb movsb rex.WR jp cmp (bad) sub xlat (bad) imull (bad) mov movabs andl (bad) mov in stos xchg rex.WX mov mov (bad) sub ja cmpsl cmpsb pushfq rex.W (bad) cmpsb insb icebp rex.RXB mov out retq sbb rex.WR movsb (bad) sub movabs mov mov pushfq (bad) jg sub leaveq xchg fiadd adcl loopne popfq and mov lods sbb xchg imull stos sub push lea insl je rex.X cli or test rol (bad) xchg divl cmpsb cmp (bad) mov fisttp fwait lock or mov (bad) mov jge xchg jl mov movabs xor test jns mov (bad) fs add lods fimull (bad) (bad) xchg movabs sub xchg pushq scas push xlat xchg cmc or mov (bad) (bad) stos (bad) pop xchg add or push pop cli (bad) push ficom sbb mov (bad) mov nop loopne cwtl sub fwait rex.WRXB jp pop test xlat je movq rex.W add xor sti (bad) pop xlat xchg sbb sub sti mov rex.X rcll push vcmpss retq adc lea sahf int scas rex.RXB shr loope (bad) xchg insb cli adc (bad) xchg and rex.WRB enterq jbe xchg adc sbb cmpsl shrb jp rex.XB out nop xchg movabs mov sbb add jle and (bad) xchg (bad) je rex.WRB negb (bad) pushfq mov mov (bad) movabs adcb or mov test outsl cmpsb add imul mov jmp scas (bad) mov fs (bad) xchg enterq idivb lahf callq rcrb xchg jnp jp sahf xchg clc rex.WXB rex.XB mov stos xchg cmp push (bad) lods sub jae (bad) enterq repnz (bad) xchg mov (bad) push cli lea push rex.RXB fnsave xchg (bad) add fwait div cmpsl cmpsl imul outsb push mov jns lock rex.WXB jrcxz (bad) (bad) je in mov pop sahf mov rex.RX and push fnstcw rex.RXB fwait sbb rex.WRXB movabs nop in xchg mov rex.WRXB mov cmpsb fnsave imul sbbl test cmp leaveq (bad) xchg adc add stc (bad) (bad) xchg xchg loopne movsl in push jmpq andps xchg test or retq cmpsl hlt (bad) in lea mov sarl rex.WR out lock xor (bad) rex.WRXB callq pop cmp push out imul sarl mov mov jmp fucomi fistp mov pop loopne in mov (bad) jns cs shll xor lea js fimul sahf (bad) cltd and fs jp jge mov lret (bad) (bad) adc and rex.WRXB mov sbb cmpsb std (bad) movsb cwtl (bad) cmc cmp sub add xchg in xchg sub rex.RXB cmpsl add roll fcmovnb cmpsb pop add (bad) sbb std jbe cmp xchg jno push adc popfq mov (bad) mov (bad) (bad) in and xchg cli adc in mov pop push push scas pop mov nop adc outsl shld mov mov std gs pop mov repz or mov fucom retq in fcoml je xchg (bad) stos adc (bad) rex.WXB and cld fbld rex.WXB jl and xchg rex.RXB sub out (bad) (bad) mov jl jrcxz in or sbb rol (bad) mov neg pop (bad) lods fwait mov mov xor insb enterq hlt cmp mov in (bad) sahf out mov es pushq js movabs loope,pt rex.X outsl pop retq add jp (bad) or (bad) (bad) jge rex.RX sub (bad) sub addr32 pop sahf stc es jbe icebp sbb test movabs rex.R jmpq std sbb xchg sbb iret jnp in imul add cltd movabs rex.WB sub jg add rex.WX adc and out (bad) pop adc popfq outsb sarb xchg xchg sbb cmp jl mov loope (bad) lret testb jle or shl rclb xor jae rex.RX xchg (bad) mov rex.RB rex.WR (bad) adc xor xchg jae imul xchg xchg outsb (bad) cmp xchg sbbb (bad) jb xor gs mov xchg rex.B (bad) cmp xchg cmp setb pop adc je (bad) mov or and pushfq loop pushq lret movabs push xchg add retq fcoml xchg xor xchg (bad) adc (bad) iret mov pushfq jb out imul sahf in pop fisubr (bad) jno and mov push notl cmp mov xchg or mov add enterq cmp mov out mov and xchg lret (bad) movsb push rcrb mov popfq xor lea add lea mov adc xlat pushq (bad) cmp in (bad) ss loope mov jg mov mov movslq add pushq rex.WRB (bad) push add (bad) or (bad) add (bad) lea mov jnp mov cmp mov adc je (bad) cmpl lret cs or popfq loop stc lahf add or movabs fstl push roll xchg (bad) jmpq sbb sbb mov shrb adc jae (bad) (bad) xor outsb (bad) mov mov mov fdivs test notb (bad) xchg (bad) enterq push lods int3 mov jmp push mov sbb sahf mov test loop sub shll nop push icebp rex.RX jb pushfq sbb outsb (bad) push movd adc rcr rex.X sbb (bad) sbb cwtl (bad) push (bad) es sahf jbe adc rex.WR xor mov rex.W cmp and (bad) jbe xor test (bad) fwait (bad) jmp out adc in mov sub and fiadd cwtl test jl xchg xchg outsb jbe xchg out (bad) in xchg adc jmp add cltd xchg cmp rex.XB (bad) jle xchg rex.RX lret xchg shrb popfq jne movsb mov shrl mov pop mov rex.W out leaveq xchg out add (bad) movslq xchg gs cmp sbb hlt add pushfq (bad) rex.RXB outsb jg rex.RXB mov push (bad) adc montmul cmpsb andl (bad) and gs xchg xor out (bad) nop xchg and sti stc xchg push movabs jmpq xchg adc mov and xchg xor sbb ss cmp fimul push (bad) idivl stos xchg and insl cld xchg jno retq jnp xchg (bad) adc in xor scas xchg (bad) fimull incl or addl jrcxz xor lock ja sbb jb or xlat mov xchg jnp xchg jrcxz mov xchg movabs jae fcoms movsb lea xchg test gs movsb mov xchg pop or cld or xchg xor mov fbld rex.R nop insl cmc movslq roll sub nop fadds in or lods lea mov scas jg rex.X xchg add (bad) out pop cmp push sbb add ds (bad) movabs test xchg loope js mov push callq cmc (bad) cld adc cmp retq negl xchg xchg sub mov mov imul imul prefetch sbb push test sub pushq pop in push pop cs (bad) movl stc cwtl pop push popfq cwtl mov adc pop pushfq rex.WXB xchg xchg and (bad) adc jne loope (bad) push (bad) hlt xchg cs and xor push xlat js rex.WXB rex.WXB rex.R imul rex.WRX xchg pushfq clc or out rex push sbb and retq jp cmpsb loope sbb sahf mov sub callq xchg imul cwtl (bad) adc pop (bad) mov (bad) ja fcoml cli xchg stos jg mov insl push pushfq fbstp sub ja and ja negb pop adc mov out (bad) pushq mov rex.W (bad) sahf or xlat (bad) mov outsb subb pushfq (bad) fwait lods mov and in mov sahf push cltd stos mov (bad) es callq mov xchg mov sbb xchg cmpsb sub push addr32 sub (bad) mov ds loopne pushfq mov scas pop iret cmpsb rex.RXB mov popfq shlb sbb imul add (bad) adc fstpt jbe and shr mov rex.RXB jae xchg xacquire shll sbb scas or mov pop cmp rex.WXB fldl fstps and jrcxz cmp add mov mov (bad) jg or xchg ja mov pop movslq xorl fwait and xchg movabs fisttpl stos jb data16 push push pushfq pop xchg xchg jg rcrl nop push mov (bad) sbb (bad) (bad) mov (bad) cmp sarb or outsl sub (bad) movsb (bad) and out js rex.WRXB jmpq cmp fldl adc xchg pop data16 sub (bad) (bad) pushq in mov mov data16 mov cmp (bad) add cmpl movabs movabs (bad) notb rex.WRX (bad) out xchg adc lock xchg (bad) cmpsl cld int or sbb pop in out adc retq int3 or xchg and and mov and xchg jrcxz (bad) jnp fidivr adc loope lods callq in repz sub xor sbb mov popfq cmpsb or (bad) xchg or movsl std or je cmpsl (bad) rex.RXB movabs pop hlt clc (bad) jl (bad) xchg rex.WRB and xchg sbb (bad) sub loope jne xchg pop xchg fild nop clc mov insl (bad) or jb mov fcoms jne jge movabs test in mov insb (bad) mov adc xchg pushq loopne rex.WR xor jrcxz pop (bad) sahf cmp or retq jae outsl xchg (bad) xor scas (bad) mov (bad) xchg xchg mov sahf movslq (bad) rcl and out callq mov movabs mov or xchg loopne cmp (bad) jne push jae fwait jae sub fsubrl movabs (bad) xchg (bad) jge adc cmp popfq (bad) addr32 (bad) (bad) idivq rex.WB mov rex.RB movsw cmp idivl mov jb xchg sbb imul in jne testl xchg int (bad) mov (bad) loope mov and (bad) cmp int clc cwtl lods rex.WRXB mov retq mov (bad) xchg adc (bad) pushq sbb and xor add xor (bad) or mov fadd (bad) mov subl jmpq push nop or (bad) loop out gs fstp (bad) lret insb xchg and push in mov mov (bad) popfq fstpt loope xchg jne (bad) out hlt xchg sahf xor imul sbbb callq loop cwtl (bad) (bad) stos rcrb std jl ja sub movabs add fcoml rex.WB sti push (bad) xchg lods rex.WRX jae cmc pop or sub jp xchg insb shrl fistp roll xor enterq int3 adc sbb cmpl cmp xchg or nop pop out (bad) adcl add xchg mov mov (bad) pop out fist add lods cmpsb sti orl push (bad) push and hlt nop jle sub push and xchg pop jb mov jnp cwtl lahf adc outsl xlat iret in xchg push scas push cwtl mov xchg sahf jmpq imul xchg mov add loope xchg insl (bad) or jnp mov xchg adc (bad) (bad) rex.WB imul mov (bad) rclb cwtl ss or or lock pushfq mov mov rex.WB pop sub loopne rex.WRX int stos or sbb mov add adc sahf xchg insb xchg cs and rex.WRXB sub and xchg mov xchg xchg rex.W (bad) clc repnz jb xchg leaveq (bad) rex.WRXB add adc loopne xchg mov add loope sahf xchg jno mov mov lods movabs or jnp xchg jne rex.WRX ja xor (bad) rex.WR sub push icebp andb je pushfq or xchg pop insb jbe sbb jl (bad) cmc movabs jae pop outsl (bad) xchg sub jo std pop repz leaveq loopne (bad) pop cltd pop and jg (bad) or movslq xchg (bad) xor mov sbb mov (bad) pop fiadd and (bad) outsl loop xchg sbb idiv fisubr jp xchg fldcw sbb xchg outsb nop add mov es push adc jg xchg cmc rex test and push popfq movabs add pop lock mov xchg xor xchg pop mov sbb movsl mov or (bad) test push mov rex rex.B cmp out rex.WRX add (bad) jl ror ljmp gs and (bad) rex.RXB sarl (bad) js mov rex.XB data16 movabs (bad) jno push xchg add (bad) movsl icebp xchg rex.WRB xchg rcrl jno retq xchg (bad) in and xchg sub rex.WXB sbb movslq rex.WRXB sub imul lea xchg rex.RX adc outsl mov js mov push fcmovnb mov cmpsb mov sbb xor rex.WRXB (bad) cmc (bad) add add xlat out sub imul cmp test rex.WR (bad) movabs xchg add xchg (bad) pop (bad) cwtl sub sub mov (bad) xchg xchg movabs jae sahf movabs xlat sbb (bad) sarb xchg ss (bad) (bad) xchg push xor (bad) or cld sub pushq adc ss sub xchg sub cltd movabs jle je sbb cmc fs (bad) in (bad) movsb lods rorl popfq insl pop stos rex.RX negl jp add (bad) loopl clc xchg xor movabs nop jge cwtl std and mulb add and jp divl movabs fwait xor (bad) and pop (bad) (bad) lahf cli lret imul and fmul (bad) (bad) sahf rcrb xchg cmpsb fcmovb test xchg xchg fsubrl (bad) cmp (bad) jl mov (bad) sbb clc (bad) pop idivb xchg shrb mov std lret (bad) mov push clc push mull or rex.WRB (bad) cmp shlb rex.WRX cld (bad) and add push jae xchg mov stos enterq (bad) (bad) movabs rex.W movsl nop jrcxz insb stos push jno popfq stc add fidiv xchg mov cwtl movabs sbbl rex.RX and repnz sbb (bad) xchg sub jo movabs push mov fcoml (bad) sub mov pop xchg mov retq cwtl rolb sarl or rex.WX mov mov mov in push cs xchg (bad) mov (bad) sbbl (bad) adc push (bad) cli (bad) sbb (bad) popfq xchg rex.XB mov xchg movsb fisttpl and std (bad) lock xchg push std rex.RX and cmp xchg jne cmpsl es xchg cmpsl movabs outsl loopne jg (bad) xor test insl rex.RXB sub test add jbe mov sbb mov jb (bad) or (bad) in sbb xchg xor int in xchg sbb imul (bad) out rorl (bad) xchg pushq addr32 mov (bad) insb jle or jbe mov xor mov rex.WRX mov cmp (bad) pop cwtl or mull pushq and xchg jrcxz ficompl out cmpsb sahf add xchg cmp (bad) outsl (bad) stos push mov cwtl (bad) sahf callq mov pop nop and xchg (bad) pushq stc (bad) or movsb xor sbb sbb (bad) ja xchg xchg mov int push rex.WRX rex.RXB cmpsb push add (bad) insl (bad) lock movabs add rex.WXB pop and mov sbb xchg xor (bad) cmc out mov fdivp popq loope pop xchg nop in xchg test loope sbb and rex.XB add rex.WRB add xchg (bad) rex.R (bad) jge xor out sahf test outsb (bad) outsl rex.WXB repnz rex.W retq (bad) mov mov loope outsl fwait xchg mov pushq pop test and in (bad) and shl mov xchg mov scas cs mov cmp adcl mov (bad) xor pushq fsubrl (bad) fucomip shrb xchg mov pushq and or push jne sbb cli xchg rex.R add or xor xchg mov jge jae xor shrl fldcw jb sbb outsb fcmove xor jrcxz pushfq addb and cmpsb test rex.WRXB (bad) mov jae mov rex (bad) leaveq pop gs (bad) jno (bad) add rex.B mov (bad) xor jl pop and sahf pop rorb popfq jbe (bad) lock sahf (bad) lret movabs or (bad) (bad) rex.X rex.X ds xor sbb sub sub fisttpl pop pushq scas jne (bad) retq clc lea xchg and popfq xor data16 push rex.RB cltd jno pushq pushq and (bad) popfq (bad) or enterq xchg (bad) rex.WB cmp or in (bad) rol pop sarl add jrcxz jl scas jg xor lea or mov adc mov sub (bad) sub or xlat xchg cmp mov pushq (bad) (bad) lods lods and subl not ficoml lock enterq cmp jns add sahf movabs (bad) pop or mov (bad) xchg sarl insl outsl int3 nop loopne (bad) sbb mov js push push gs ss xchg in lret sub gs xor (bad) xor iret outsb scas and jmpq rex.B rex.WXB mov xchg sbb jrcxz popfq pop (bad) or ja jge add movslq retq loope (bad) roll push xchg sahf mov add mov fsubp nop rolb (bad) mov (bad) push adc xor cmp out mov mov ds pop xor outsl or or sub xchg xchg pop ja fwait sahf or (bad) cmc pushq (bad) jnp rex and jrcxz sbbl stos xor std in cwtl (bad) (bad) push pushfq jp rex.WXB adc icebp pop mov push add jmp (bad) leaveq fcoml jo and xchg sbbl rex.R cwtl negb (bad) rex.RX (bad) out outsb movabs jge es addl notl adc jnp mov (bad) (bad) cmc mov adc mov and testb jno sbb enterq fbstp movabs scas incl xchg or loopne xchg fwait mov mov cmp lods (bad) mov mov adc push sub (bad) mov insl fnstenv stos xchg cwtl (bad) rolb jp (bad) loope movslq adc sub loop xor sbb mov (bad) icebp (bad) xlat xorl test callq lret (bad) in ss ds (bad) rex.WX (bad) xchg out callq stos cmp and ficom jb mov rex pushfq sub push jmpq sbb cld (bad) adc mov (bad) mov xchg (bad) sub repz cwtl mov xchg mov (bad) sub repnz sub mov jbe ss jne callq lods decb (bad) mov and ja sub rex xlat rex.WR mov retq js movabs or mov movabs test or pushq test xor mov clc rex.WRXB mov jg xlat xchg movabs out (bad) sub hlt add es mov cmpsl mov sub movabs test outsl stc mov xchg pmulhw mov xchg movsb (bad) mov jno xor (bad) xchg rex.WRXB repz lock (bad) xor sti sbb mov movabs push andb lods cmpsl (bad) rex.WX icebp xchg xor divl mov push xchg lret mov (bad) test cmp stos (bad) loopne xchg (bad) scas rex.WX cmp cli (bad) es cwtl xor in movabs addr32 (bad) in xchg sub add andb fdivrs pop pop xchg mov or add xchg (bad) mov and stc (bad) mov xchg int xor rex.WB add ss or stos push icebp pop rex.X nop (bad) mov fcoms jns xchg mov repz jrcxz je ss sub insb rcrb mov in pushq movabs mov (bad) mov cmpsb ss icebp (bad) and sub push sbb jge cmpb sahf sarb (bad) mov sbb xchg xchg push jle add sub outsb repnz cmp xchg lahf xchg adc rcrl rex.B sarb mov adc (bad) in cmp mov hlt lcall out (bad) sub add rex.WXB pushfq ds mov (bad) push int3 cmp sahf fstps stc mov xor mov mov push sub loop lock (bad) mov xchg and cmp jb (bad) imul xchg sahf imul insl callq loopne sti (bad) xchg lea js fistpll sub xchg hlt (bad) mov fcmovbe mov xchg sub rex.WB cmp cwtl adc in (bad) test xchg jb (bad) (bad) (bad) xchg out jmp sub push in xchg (bad) in callq cwtl es pop sub out xchg retq xchg rex.RX rolb xchg xor xor iret mov cmp (bad) out add (bad) cwtl subb std je push movslq add imulb xchg movabs jrcxz mov sbb pushq int push rex.W rex.RXB xchg xchg (bad) lahf mov (bad) (bad) xor clc scas cmp xchg pushfw nop (bad) xchg jae cli adc rex.WB jns xchg sbb scas incb mov (bad) in popfq movabs (bad) nop xor callq movabs rolb mov xlat out out xchg (bad) (bad) jne mov lahf sub (bad) stos cmp roll (bad) xchg sub (bad) pushq xor xchg loope (bad) push xchg fnstenv fsub (bad) rex.X jb mov xchg (bad) rcrb (bad) fstpl popfq pushq adc rex.RXB rex.WRX lea mov (bad) je push xchg ffree cmc mov sbb (bad) rep pop sti xchg sub adc sub ss mov cmp xchg lods sti xchg sahf cmpsb mov sahf lods lret sbb (bad) cli movslq (bad) cmp xchg rex.WRB jae pop xchg rex.R (bad) xor (bad) push mov (bad) rex.WRB and (bad) lret xchg and cli movsb rex.WXB add incb outsb movabs rex.WRB sub xchg retq and add (bad) mov sti xchg and rex.RX xchg adc pop and xchg mov (bad) (bad) jmpq add jmp sub jns xchg adc xor mov xchg adc andl jnp jbe mov adcl (bad) (bad) outsb pushfq or mov pop pop in loop push and retq (bad) (bad) jg popfq or retq lea xor mov lretw lods lods hlt lods adc or rex.WB in jne test xchg and lret cmpsl mov cwtl xor jl mov xchg mov jnp and movabs sub xchg (bad) xchg lret or rex mov push rex.WR sub cmpl nop push and xchg clc pslld in movslq nop mov (bad) div jmp sub pop xchg jnp movabs (bad) xor movabs rex.R lea cwtl sbb jne jge xchg (bad) xchg add jb (bad) rex.WRXB (bad) mov lods fisubr fsts loope cltd (bad) pop ljmp mov (bad) jrcxz xlat add movabs jno fidivrl scas addl or (bad) xchg and (bad) (bad) adc xchg jnp outsl cmpsb or cmpsb push xchg (bad) and (bad) (bad) outsl cwtl and jnp (bad) xchg and lods pushfq add (bad) int3 stos pushq and adc cmpsb test xchg lock mov popfq and sbb rex.WRX fmull adc stos (bad) cmp int3 xchg addr32 fwait and lods out adc xchg add rex.R sahf cmc (bad) xor jle rex.WXB in jl xor fs lea pop adc pushq (bad) push movsl mov mov fsub ds cmp test rex.WRX outsl movsl xchg mov cs sub test sbb mov addb (bad) rex.WRX (bad) insl addr32 sbbl clc adc mov rclb pushq pop sbb cmpsb (bad) repnz mov imul rex.B rex.W ds (bad) movsb hlt (bad) mov xchg cwtl (bad) and add in mov pushq mov ds test repnz jge (bad) (bad) sub (bad) (bad) movabs (bad) xchg sub lret test xchg mov stc sub test mov push mov push cmc cmp mov jns jp cmpsb xchg mov mov mov sbb adc imul sahf or push ja adc (bad) scas leaveq (bad) movaps negq mov add lods scas icebp es fisub add jnp jae pushfq loope test add hlt out out cwtl (bad) stos ja scas pushfq cs adc jmp and (bad) mov ljmp mov xchg pushq (bad) or xchg cltd (bad) cmpl jnp jg pushq faddl cmpsl cwtl test and (bad) sub rex.WRXB loope mov adcb jbe sahf push hlt movabs iret cmp jl jbe fnstcw lret pop nop (bad) cmpsl jle jo xchg mov out popfq cmpb pop rex.X stos and xor xlat (bad) pushfq negl xor jrcxz push xchg cmp rex.W movabs or leaveq xchg out je (bad) lret mov enterq xchg adc pop (bad) out xchg jo movabs ds gs xchg pop rex.WB fwait push out in jmpq xchg xor insb xchg in rex.RB callq sarb rex.W jb (bad) sub jo movabs cmp (bad) adcb (bad) imul mov (bad) rex.RX (bad) divl (bad) imul jb mov xor js add lret pop (bad) (bad) jl xchg push or addr32 mov (bad) (bad) xlat shr stos jne (bad) lahf xchg xchg outsl add (bad) mov icebp mov outsb (bad) rcl lahf jbe (bad) fistp xor xchg mov adc rex.WRX mov mov push rex sbb add nop sbb jrcxz sbb jnp and pop pop in jge imul mov rex.WB (bad) or jmp movabs xchg rex.WRXB stos faddl mov xlat sub rex.WX or xchg xchg test add ja push rcrl sti add hlt and jo cwtl mov retq pop add jmpq jb ds xchg rex.X push rex.W jno cmp sub pop mov in and mov add subb (bad) rex.RX loop (bad) callq movsl jg mov adc and pop movl nop adc and loop pop (bad) (bad) pop out rcr pop rex.WX jne adc fadds leaveq sbb jp (bad) mov mov pop lea mov jns adc jb mov (bad) loope (bad) mov mov rex.WXB imul xchg jns or and sbb outsb enterq test test outsb sbb mov int insl jg mov cmp pop (bad) movsl je leaveq xchg mov sbb (bad) retq shrl mov sbb cmp shrb (bad) cwtl in pop pushq rex.WRXB int3 out pop mov imul jnp std sub sbb xchg cmp pop popfq add sar mov or idivl ficomp iret (bad) push movsb pop movabs jmp rex.W jb push fnsetpm(287 pop (bad) (bad) mov push xor out rex.WRXB outsb movabs popfq xor movslq std rex.R adc iret cmp sbb mov add rex.RB in lret rex.WXB iret adc (bad) je movabs imul repz nop sbb gs and xor xchg int3 leaveq and (bad) (bad) movabs roll add adc shll pushfq nop (bad) jno push mov and (bad) and jbe cmc (bad) sbb (bad) cmp outsl jns xchg and sbb pop jbe cmpsl (bad) (bad) mov jo cltd cwtl imul pop loopne jo adc pop push fisttpl jmpw mov fwait (bad) cmp ss outsl lret lea (bad) ds in outsl or lea mov cmp jp mov jg pop test insb mov push jnp adc xor sahf in popfq repz mov rex jae mov cmovg mov lods (bad) xor (bad) sub fcomip push mov rcrb xor fnsave movsb xchg add or rex.WRB and xor xchg (bad) mov (bad) loopne rcl rex.WRB rex.RXB (bad) imul pop sub movslq mov movabs enterq (bad) insb mov pop addr32 out test adc cltd and outsl roll rex.WR out and mov mov rcll adc in rex.R cmp (bad) xchg sub loopne jmp rex.XB xchg test rex.RXB xchg rcr adc adc xchg and (bad) adcb push xor fdivrp pop push mov cltd mov pop rex.WR jns (bad) cmp out iret outsl movabs popfq movsl retq pushfq push sarb and (bad) xchg xchg shll xor (bad) push je (bad) (bad) jno popfq mov mov stc cmc fs (bad) xor cld xchg push insl out adc lret je pushq (bad) lret add std test rolb cmp repz mov (bad) cli mov xchg (bad) sub jno stos cmc jl (bad) or add sub js iret or push cmp paddb push stc xor or retq iret fstps rex.XB xor fidivl mov jo pop or mov clc xchg cmp adc (bad) adc and and (bad) sbb xchg jmpq fmul lods xlat (bad) adc sbb pushq movabs in (bad) mov mov jno add push xchg pop hlt fisttpll (bad) dec rcrb cmpsb rex.X cmpl mov fdivrs adc xchg mov (bad) movsl je sub and (bad) and clc mov movabs notl push (bad) jbe mov sahf xchg (bad) mul rex.X sub imul sahf mov jno pop jo sub adc in fldl pop std mov (bad) ds adc sub div in (bad) cli cltd (bad) jmp xorb imul rex.RXB adc xor (bad) and cmpsl mov and push je rex.R je jg (bad) xchg jmpq adc addr32 add (bad) xchg push adc cmp (bad) icebp xorl rex.XB (bad) sbb sub xchg addr32 xchg in xchg stos retq mov xchg cwtl (bad) and ja jne (bad) cmc xchg scas callq insb jb decb retq (bad) shrl mov loopne jge xor mov rolb xchg jns xor mov mov (bad) pop ds xchg rex.WXB rex.WRXB sbbl push (bad) add outsb xchg iret mov (bad) rex.WRB rex.WX and es adc movabs rex.WX (bad) cmp (bad) not nop sahf out (bad) js xchg int3 movsb xlat jg mov add lahf adcl xchg add or cwtl jne (bad) mov and test iret mov fbld xchg jle in loop hlt fsubrp movabs stos and jae (bad) (bad) xchg jb leaveq pop test and popfq jnp fnstcw add xchg pop out xor lods notb mov mov push callq adc (bad) lret (bad) movsl (bad) xchg movsb xlat loop jp jno jrcxz mov movsb mov addr32 (bad) je cmpsl xor mov sub nop addr32 (bad) mov or fmuls mov or adc mov shr xchg test in movabs sbb mov ss js or movsb adc ds test (bad) (bad) rex.WB movabs push fcmovne pushfq lods sub popfq in push rex.WRXB (bad) (bad) test add pushq xchg and mov or rorl lea scas mov push adc sub outsb sahf mov rex.WX (bad) movd fldenv mov add push rex.WRX movslq (bad) (bad) ds jno pop xchg nop (bad) pushq add (bad) popfq sahf fidivl cmp adc add add and sbb outsl (bad) (bad) sub movlhps (bad) pop jmp and test bnd xchg (bad) retq (bad) (bad) and (bad) xchg jnp rex.X jmp outsb rex.WR iretw pop pop mov jrcxz jmp pop jmp xchg cmpsl scas rex.RXB stos addr32 push jg ja rex.WB xchg jg and xchg pop sub jbe (bad) testl rex.W fwait jrcxz out (bad) (bad) (bad) mov xchg (bad) pushq sub rex.W pop clc gs rex.WXB sub sbb sbb cwtl xchg rex.WB add mov xchg xchg mov pushfq mov stos rex xlat (bad) xor cmp mov (bad) data16 jrcxz outsl mov ja outsl xor pop or cmc movsb cmpsl pop jge jl rex.X test mov or std sub xchg nop add fcoms mov xchg add add lock rex.R jnp rorb jo xor addr32 ficom movaps fldz jns mov mov adc mov jg jg pushfq rex.B add sbb shll push popfq mov movslq int adc xchg (bad) xchg xchg rex.WRX scas rcrl je test enterq pop cmp lret pop xchg ss mov pop pushq sbb sahf or in push fnsave rex.R push fcomip jp xchg (bad) (bad) enterq pushq xor jle outsl mov pushfq jno je xchg cmpsb sbb in mov add rcll pop nop xor pop cli mov adc gs rex.X xor sahf (bad) xchg cmp rex.WRXB (bad) pop mov xor mov fimull fdivs repz pop pop mov rex ds rex.X scas cwtl (bad) imul mov ljmp (bad) (bad) or rex.WRXB stos jo add shll push sub in std imul push je movslq fcmovnb movabs outsb ror jnp pushq sub sahf rex.R outsb popfq cmp loopne leaveq xchg adc lock rex.XB jg sub lea adc test lock xchg push cli cmp fwait sbbl fdivrp sbb movabs (bad) pushq sahf rex.X (bad) imul cld mov (bad) (bad) (bad) neg in (bad) adc (bad) pop pop and and mov mov push (bad) and rex.WRXB roll jb loopne rol addr32 ficom imul and mov cld insb cltd rorl (bad) (bad) or jg out xchg xchg pop int3 (bad) (bad) jl insl popfq push sub (bad) rex.WXB pop cld test rex.WR cltd rex.RXB nop or mov sti pop cmpsl xor jo (bad) (bad) rex.B movslq lock jp (bad) sti push jle sbb (bad) and and fcoml xchg fimul rex.WRX icebp adc (bad) cltd xchg cs leaveq (bad) xrelease (bad) rcll sbb rcrb sub push rcrl callq sahf enterq lods adcl js mov xchg mov loop nop xchg adc mov shrl push nop mov pop push psubsw test (bad) stos scas and pushfq sbb xchg pushfq add mov mov cmp rex.WRB mov nop xchg (bad) insl and mov sub sbb add cmp xchg mov insl (bad) cmc and cmpsb xchg out cli fimull add orb pushfq and jg rex.WX (bad) (bad) movabs notl hlt stos mov outsl or mov fistpl (bad) pushq xor repnz pop pop lea rex.RXB subl and stos rex.WRX rex.WX fiaddl rex.RB jmpq push sti cmc in fs cmp and add insb jo (bad) (bad) xchg (bad) callq rex.WB popfq std mov mov (bad) and rex.WB fidiv movabs popfq sub (bad) hlt (bad) pushq rex.WRB pushfq adc fist adc in retq xchg or adc (bad) shlb adc sarl (bad) xchg or and xchg and jg cmc (bad) lret hlt jmp fsubp mov sbb enterq sysexit jl (bad) sub orb cmp jnp push cmp outsb xor and jns imul or mov xlat (bad) (bad) shlb rex.WRB (bad) sbb mov fildll pop add push rex.WRX jae mov pop rolb and adc fimul mov ds (bad) add lea fidivrl sbb add hlt push outsb outsl ds scas loope add (bad) mov lock xchg mov (bad) insl mov ja jle sub mov xor int or shlb push sbb (bad) nop imul jrcxz jmp mov addr32 xchg jmpq add (bad) pop jmp imul insb movsl fwait push cmp (bad) jo icebp rex.WR adc jo rex.R xor retq jbe int pop movabs xchg or adc pop (bad) mov cmpsb mov adc mov (bad) cltd lretw (bad) outsb (bad) (bad) jge icebp mov mov lahf sub pushq xor test addl jmpq fistpl cmp mov rclb jne cmp js sub (bad) rex.WRXB (bad) xchg imul and xor mov add mov jg (bad) (bad) loope (bad) movsl add rex.WRX lods (bad) lods ja (bad) sbb ja jl test retq js mov and in push or rex.WXB add add xorl subl fucom push insl popfq int3 sbb imul insl add andl lock mov ja rex.WRX cmp callq sbb mov movsl mov loopne sub sbb out retq cltd mov add rex.WX sbb cmp clc pushfq (bad) sub mov lahf xor mov in (bad) in or sub mov insb fnsave mov xchg (bad) movabs (bad) jmp xchg xchg out shr (bad) rex sub xchg ds pop out xchg pushq mov sbb retq lock pop imul jmp (bad) lea (bad) rex.WB stc loop rex xor xchg adc test (bad) xchg xor pop adc cmpsl sbb (bad) rex.W xchg xchg (bad) or rex.WB negb cld mull xchg (bad) sahf rex.WX sub imul cmpsb add mov (bad) cwtl sub lret out mov (bad) jnp (bad) mov or xchg cwtl cmc add mov mov es (bad) std in out xchg test add (bad) sub cmp inc (bad) cmp (bad) lahf sahf hlt retq xor sbb movabs xchg gs sub test (bad) (bad) callq sbb (bad) cmp rex.WB (bad) js jge adcl cs je cmp rex.RXB mov cmp (bad) sahf loop push lret movabs mov push xor mov rex sub (bad) cmpsl test lea nop rex.RXB fwait rex.WRB pop (bad) and (bad) add adc adc pop pushq jno xchg roll mov xchg (bad) int shr std insb (bad) notl xchg or (bad) (bad) rex.WR rex.B andb fsubrl pushq cmp movslq cltd sbb rep sahf xor rex.R push jo xchg (bad) in lock (bad) icebp gs adc jp push cmp and (bad) cmpsl xor or gs lret test jge xor mov or mov fs xchg ja (bad) lods mov cmpsl mov mov mov pop adc out fimul xor jnp pop xchg or movsl xchg movabs rcrb mov mov fs jmpq (bad) pushfq push jle in rex.WB jp (bad) (bad) xchg fwait movabs (bad) (bad) lods enterq mov mov fdivl (bad) test push or xchg sbb and lods rol movabs (bad) fadds xchg (bad) mov mov add or (bad) xor in xchg jb repz jp repnz mov stos sahf in (bad) movsb sbb pushfq mov outsl rex.W rex.WRX pushfq xor lahf fistp push push mov (bad) sbb cs and rex.WX in (bad) outsb sahf mov add push add lods in rex.RB xor imul adc rex.WR in out rex.RXB mov loope rex.WB jns xor sbb (bad) pop cs es rex.R out add adc mov xchg cmp (bad) mov or rex.RB (bad) (bad) jmp mov int3 shrl fistp (bad) sub mov pop popfq jg pushq mov pushfq push (bad) outsl (bad) rex.WRXB fs sbb movabs sub (bad) adc loopne (bad) pushq mov adc ror adc imul mov movsb lret (bad) ss int movabs retq push sbb cwtl mov sarb movabs jnp fs rex.B cs (bad) sbb loopne add repnz pushw (bad) and or cs (bad) enterq mov roll pop sbb (bad) cli (bad) out pushfq (bad) sub or (bad) add add (bad) mov xchg mov xchg mov (bad) sbb (bad) fwait pushq xchg mov pushfq std (bad) (bad) loopne add and (bad) enterq cmp xor data16 rex.RXB mov jbe (bad) fcmovbe mov mov callq mov jno pop (bad) cmc cmpsl (bad) sbb movsl add lea fstp rex.RX addr32 or or jp mov fldl add xchg sub rex.XB jo pop (bad) (bad) (bad) movabs mov lret jmp sbb mov leaveq rclb (bad) lods movabs rex.RX retq cmpsb cmp adc push loope hlt cwtl ss xor rex.WXB xchg (bad) lock retw (bad) mov lahf sti mov or scas xor and (bad) (bad) iret (bad) xchg xchg mov sar mov mov (bad) cli repz mov adc mov xlat out loop sahf mov movslq (bad) (bad) (bad) out adcl flds icebp movabs ja movabs (bad) mov mov nop movsl jg mov pop ja test (bad) sub (bad) xchg rex.XB movabs pop mov (bad) mov xchg rex.RX cmpsl xor rep xchg and jae retq xchg sahf (bad) mov out pop mov popfq add push sbb enterq idivb imul sahf (bad) jno sub idivl cli sarl push rex.R mov scas cmc icebp movabs push pushq mov sahf (bad) cs (bad) popfq and rex.R cmp xchg xchg fs jmpq xchg rorl sbb (bad) adc xchg scas sub (bad) mov jno insb cli lahf ds fsin mov xchg adc xchg mov rol (bad) xchg mov and or notb rex.WXB xchg jne movabs cli lea (bad) out xchg pop xor sbb cmp mov jl scas rex.WRXB gs (bad) (bad) jb (bad) cs imul (bad) jnp loope xchg (bad) or add idivl test cmp pop xchg xor ss fistpl sbb sbb sub xchg rex.RXB mov fdivl sub movslq outsl jge test or in (bad) fwait rex.WRB movabs pop mov (bad) mov movslq push xchg out movsb sub jmp and jg xchg (bad) add add rex.WX fnstsw movabs (bad) (bad) xor cmpl mov scas pop mov mov mov in imul fs add mov std movabs mov sahf (bad) xor pushfq out (bad) xchg in jp sbb ficom mov idivb (bad) gs rex.RB xchg pop sarl lods xchg pop or jo rep movabs sbb xchg int3 cwtl xor movabs insl negb xchg jnp (bad) movslq and movsb mov xor add xchg mov vmread or xchg in and xchg sub fsubs jbe push or out adc adc xor mov mov and xchg (bad) (bad) cmovb lret jbe movsl insl pushq mov jne jg fistp sub fisubrl rex.WXB pop movabs fcoml cli out mov mov mov test je (bad) sub test add loopne pop callq rex rex.RXB (bad) sbb sub and (bad) (bad) (bad) imul fimul cmp cmp stos jo pushfq jbe (bad) imul add (bad) leaveq rex.WRXB loopne (bad) outsl jl (bad) lods rex.RXB mov lahf mov adc movabs (bad) push shlb fs movabs mov (bad) imul mov xchg (bad) pop adc jno jle (bad) rex.WB sbb (bad) jae xchg cmp xchg nop or fst mov mov mov cmp xchg je pop insl rorl (bad) mov and divl sbb add (bad) (bad) adc stos xlat insb pop (bad) cmp mov xchg adc int3 (bad) ss mov cwtl and (bad) push nop es and pop adc cmp adc loope push sbb test jge (bad) pop insl push rclb xchg jnp cmpsl retq sbb movabs mov xchg sarl sub orb rex.WRX xchg mov popfq (bad) paddq fcoml sbb callq fstpt (bad) xchg cmp loop push add (bad) jo sbb rclb sub rcll mov xchg (bad) jl fdivs test pop rex.RXB mov pop cmp subl (bad) rex.W cli mov cltd sub rex.RXB mov push mov (bad) pop int rex.X (bad) xchg in jnp sbb (bad) rex.WRXB rex.W push cmp (bad) in or (bad) (bad) fdivl jnp js (bad) addr32 or xchg adc enterq pop stos gs fcmove jbe jg cmp xchg rex.X (bad) (bad) jns mov sbb int3 or mov movslq mov fs pop push mov rex.XB sahf mov and pop sarl sub imul imul sub lahf rex.RXB rex.X movabs loopne std mov (bad) and cltd pushfq mov and push gs rex.WR cmp icebp int3 gs (bad) sbb (bad) adc imul retq hlt scas shll (bad) and out xor insl jnp jns out push sahf jb rex.WXB lods adc ja xchg movabs add mov xchg nop (bad) ja rex.WB pushq (bad) loopne jl (bad) rex.WRXB (bad) xchg movabs xchg and in repnz mov (bad) push (bad) (bad) adc pop mov fwait mov stc and (bad) jbe (bad) (bad) and jnp movabs pop int xchg fsubrl (bad) movabs movabs lods (bad) (bad) mov mov mov cli negb mov out outsb (bad) cmp rex.RX rex.RXB jmpq es xchg adc (bad) rex.W jo rex.WRXB sbb jns cwtl int out xor pushfq outsl fcmovnbe data16 cmovb sbb (bad) outsl retq fidiv jrcxz rex.R cwtl xor rex.B adc (bad) (bad) jno (bad) jle lea sti lahf push test movsl cmp adc (bad) pop out (bad) fs iret movabs rorb (bad) xor test lret repz sbb sub or movabs sti sub (bad) and mov fsubl imul lret scas (bad) and hlt (bad) scas pop rex.WR pop (bad) jbe fnstenv xchg scas add fwait and xchg mov xor test xlat xchg rex.WXB cmp movabs std mov rorl or xchg rcr rex.W mov retq xchg pop or xchg (bad) sbb popfq adc jae add and mov int (bad) nop xchg add pushfq jle pop mov add test cmc movabs cmpsb outsl pop adc adc xchg lret or pop xchg sub lods cmp cmp mov xchg fnstsw jle push pushq and lods rcll (bad) sub sbb jno mov (bad) rex.RXB gs or nop sbb jns xchg sahf xchg mov enterq xchg or push lods xchg and cmpsl movabs (bad) js xlat insb xlat (bad) in rex.X rex.X xchg movslq add xor lret mov loopne test jns ficomp xor lahf cltd pop push enterq and mov (bad) mov xor testl adc add mov and js add int add xor pushfq cld (bad) jns xchg pop jo shr cmp adc (bad) mov xchg outsl out or fs std (bad) add rorb ss and add xchg xor (bad) or (bad) pushq jnp xchg fstp (bad) adc pushw pop push leaveq mov nop sbb cmp movabs outsl sbb sub adc subl push movslq cmp push and jg sub divb mov xor adc std int cmpsl xchg (bad) sti out (bad) xor cmc adc xor movabs es (bad) (bad) cmpsb sub (bad) and stos rex.X (bad) imul push xor or pushfq enterq lea (bad) (bad) pushfq lret in xchg test xlat ds mov xchg xchg nop or rex.RXB adc cmpl (bad) (bad) mov retq rorl jnp mov and movslq (bad) jnp shrl shlb (bad) xchg or jmpq adcl jmp add js mov mov mov cmp loopne xchg and sbb push add or gs adc insl cltd jrcxz and loope test or cwtl outsl or and (bad) push (bad) cmp rcrl jns mov scas mov adc fimul out cmp stos rorl xchg xchg out mov iret mov fdivl seta movsb mov (bad) callq mov (bad) callq movabs rex.W lea push in xchg mov movabs push xchg adc xorb pushfq fmuls xchg xor or fidivl mov pop fwait stos xchg in imul callq movsb movabs mov sbb jge xchg and addr32 adc push xchg and lock enterq xchg pop out cmp pushfq cltd retq jl rex.WRB xchg std ds movsl callw (bad) or sbb cmp ja scas jno pushfq es (bad) rex.RX rex.WRXB xchg mov mov xchg sub and xchg popfq nop (bad) es mov cmc sahf mov push rex.RXB rex.RXB xchg add test (bad) mov fwait mov adc jns or in fcomps (bad) (bad) hlt jnp mov jae je push (bad) sahf out and mov mov lea mov gs cld jg mov movabs and jrcxz scas adc rex.R xchg mov lahf or mov xchg test (bad) (bad) clc xchg data16 mov rex.WX (bad) mov adc xchg repnz pop adc mov rex lret sub sub leaveq push fcompl data16 movsb xchg sub xchg (bad) jrcxz mov cmp rex.R movsb xchg movsl adc (bad) xchg fwait adc sub xchg mov or push (bad) mov mov push lods jg xchg sbb (bad) sbb repz xchg cmp pop sub iret movsl jmp out jg rex.WX movabs sub lahf lret retq xor lock jp mov pushq pop mov jo mov push subl cltd add adc push xchg iret rex.WXB rex fsubp fcoml sub rex.WR test mov jge jmpq (bad) movabs xor test or rex.WXB (bad) mov (bad) mov rclb cmp icebp rorl (bad) cmp sti adc or outsl mov (bad) repz push rex.B cmpsb xorb cld stos sbb xchg push movb mov rol (bad) mov in and fdivl lods int3 cs leaveq pop sub (bad) xchg xchg subl mov xchg push addr32 lret pushq mov sub jae push mov ss (bad) (bad) in data16 xor sbb ja enterq (bad) mov push xchg mov or xchg lock movabs (bad) sbb pushfq (bad) pop cmc xchg lock out push xor (bad) sbb pop mov mov rcrb mulb (bad) jl xor (bad) imul lahf nop sub mov cmc nop insb xchg jne mov out push xchg cmp jbe (bad) xchg jno in rex.XB es xchg (bad) mov loope retq sub rex.WB insl add cltd sbb rex.WRXB ja icebp (bad) popfq test mov callq jnp jge cmpl callq (bad) adc (bad) xchg xor repnz movabs and jg and (bad) shll ja cmp rex.WR lods std movabs fnsave rex.RXB out jno xchg (bad) or mov popfq xor mov enterq imul pop or rex.XB movabs add fwait jrcxz jg pop jmpq rex.RB jne movsb xchg pushfq shlb jle cmc std xchg jbe movslq rex.R rex.WB nop pop (bad) sub (bad) cmpsb pushq stos lods cmp xchg sahf mov sub push (bad) add pop cltd or addr32 cwtl cltd sub xchg jrcxz nop push pop callq stc addr32 mov cwtl stos fsubp jne rex.XB lret iret xchg in sarb jnp fimull xchg xlat out lret sub mov rclb addr32 in fidivl pop (bad) mov rex.XB rex.RX movabs mov fnstsw popfq lods push fcompl cwtl test sbb mov pushfq or cli (bad) clc pop (bad) pop insb or fisubrl mov rex.WR xor and (bad) sbb rex.WRXB sahf pop rex.W fwait xchg movsb rex.WX lahf (bad) sbb cmp movabs fldt (bad) mov xchg imul cld jle fistpll leaveq xlat xchg mov push add xchg mov cmpsl rex.RX test adc fdivrl pop or loope imul repnz sbb movsb stos adc mov fcomp sbb (bad) out xchg (bad) sub rex.RX mov jg rclb adc fimul fs push movsb jb mov rep mov test pushfq (bad) stos mov (bad) (bad) (bad) cld jnp nop callq sub rex.RB add pop xchg mov lahf (bad) xchg mov (bad) xchg xchg mov mov sti sbb (bad) jl mov adc jnp rex.X fiadd (bad) pop or cmpsb mov lea xchg movsl data16 xor jge callq push cmpb cli jmpq fisubl popq jns sahf push scas ja,pt rex.W movsb jnp xchg or out imul in mov scas sahf fnstsw sub adc xchg jmpq fbld xchg cmp imul jae pop (bad) and or xchg xchg rex.WRB mov (bad) xchg movabs (bad) out mov std jge loope jmp xchg test pop rclb rex.WRX cli (bad) idivl jg mov (bad) sub push push fldl retq sub cvtps2pd jg popfq (bad) lods movabs lahf cmp rcrl callq push xchg and sahf notb rex.R push add or out sahf (bad) sub (bad) mov rex.XB (bad) movabs xor xchg or jns in test rex.X rorl fwait jg mov mov (bad) js (bad) xchg jb repz lret rex.XB lock xchg mov or xchg adc cmp xchg (bad) xor rex ss rex.WXB push pushfq fcompl add (bad) (bad) rex.WB rex.RB xchg pop and add imul cltd out xor fs faddl or pop (bad) xchg scas mov jne push movslq xchg cmp movabs cmp sub jmp retq jne fidiv fnstcw mov sub (bad) pop orl mov ds (bad) (bad) jg,pn vmovhps pop lea (bad) (bad) repz (bad) and vpcomq lret sbb xchg mov fistp jmpq loopne add adcb retq sarb mov mov add jmpq frstor movslq lods cwtl sbb xchg in mov rcl xchg stos movsb xchg loope or xchg outsb (bad) sbb sub xchg ror lahf lea (bad) push xor callq in in rex.WR xorb mov (bad) retq (bad) lahf mov and (bad) shrl fimull add rex.RXB lea (bad) notb rex.WRX xchg mov cs fidivrl mov xchg (bad) (bad) rex scas adc rex.WRXB jo out jge jb ja (bad) (bad) push jo sahf jle cmp jbe (bad) mov and iret and pop (bad) (bad) sbb leaveq (bad) fist scas rex.WR and mov rex.B rex.WRXB mov push pushq xchg sub mov and jbe xlat movsl jbe in out leaveq je (bad) xlat and (bad) xchg (bad) lea mov adc add adc cmp adc movabs (bad) adc (bad) fs sub mulb fisttp pop sbb (bad) xchg movsl cmp ss int3 pop sub retq sahf mov pop sbb rcrb rex.WRXB rex.WR cltd imul rex.B int jrcxz sbb jmpq xchg jmpq sbb mov (bad) pushfq mov adc mov push rex.RXB test pop pushfq idivl out sub jmp data16 cmp pop mov or (bad) fstpl insl jmpq and (bad) out icebp cmp push lret push jb cs and xchg mov rex.WRXB jno (bad) retq sahf pop mov push lods rex.WRX ja rex.WXB ja xchg stos (bad) sbb xchg out mov and (bad) movsb hlt (bad) (bad) xchg sbb (bad) mov out clc ss vpand adc mov lea or push nop (bad) fmuls rex xchg sub or mov cwtl sbb stos push xlat rex.WXB xchg in fiaddl adc fstl pop jg xchg and push sarb sub xchg (bad) rex.WRB xchg and push imul hlt (bad) movsl (bad) mov fs callq xorl push movabs shrl pop or repz or lcall add mov rcrl (bad) shr mov add sbb xchg push rcrl add sbb sbb jl (bad) movsl imul loope clc mov (bad) lock pushfq xchg scas mov xor xor rex.WB adc and rcll outsb mov (bad) jmpq xor cmpsl add xor ror xlat cltd jge loopne push test hlt movslq fbstp pushfq jmpq xchg je pop sbb xchg ds mov sub or decl rex.WRX (bad) and add mov push rcrl (bad) in sbb sarl rex.RXB imul out js (bad) (bad) (bad) stc xchg out cmp rex.WRX mov lods movabs rex.W negb mov xor (bad) mov rex leaveq lea enterq cmc xor mov scas outsb mov pop pop cltd hlt mov rex.WXB mov rolb adc rex.X xor rex.WX popfq data16 mov es enterq adc add movabs mov (bad) jg xchg cmp xchg (bad) (bad) addr32 ss pop sbb (bad) nop sub sbb jle jo lret or jge outsb adc nop stos sbb movabs (bad) (bad) int rex.X xchg mov mov cmp imul xchg rex.WRX sahf mov movabs loopne leaveq fs rex.RB (bad) or retq (bad) sbb mov (bad) orl movabs add rcl xchg cltd xchg enterq out sub adc xor sub jbe mov (bad) cmpsl mov xchg (bad) (bad) rex.WRB adc sbb (bad) mov (bad) mov (bad) mov jno imul cs mov rex.WR addr32 mov cmpsb mov rex.XB movsb fild repnz int3 sbb rex.X adc test enterq (bad) movabs out (bad) (bad) rex.RX cmc movsl pushfq (bad) lret mov fimull or rex.RX add rolb xor push xchg imul adc xchg lret push cmp (bad) cmp mov xlat xlat std fist mov rex.B mov xchg (bad) xchg sub jl mov fwait jo add xchg jae cmp out outsb movabs or (bad) xchg fwait lret sbb jg cmp psllq cmp (bad) movabs out (bad) shrb jne xchg or and outsl ficom add insb movabs ljmp xchg lret gs rex.WB sbb lahf mov (bad) jne mov scas pop xor and cmp mov addr32 mov sub pop cmpsl (bad) orl xchg cmp rcl cld mov fildll xchg sub sub adc and (bad) fisttpll sarb cld (bad) shlb adc imul or js sub jnp outsl pushq sti mov fwait rex.WR rcrb (bad) fistpl rex.RB xor pop (bad) add add sub rex.WR rex.WXB (bad) fldcw xor popfq retq jmp (bad) divl insl pop (bad) add cmp movabs add mov or mov imul fs data16 and je (bad) cwtl (bad) push gs fs mov mov ss cld popfq (bad) xor jrcxz pop xchg retq or xchg (bad) (bad) in and mov movslq movabs sahf push movabs add mov rex.B fisubrl in mov cmp sbb out mov out rex.W popfq adc push add movslq mov (bad) cs adc outsb test jge,pt (bad) jno (bad) cmp jno movslq (bad) push sub xchg movsb (bad) mov cmp loopne sti mov lock shll loop outsb (bad) loopne in lret fsubs xlat (bad) mov xor (bad) cmp mov fistp (bad) out and (bad) cmpl pop lods cmpsb sub faddp xlat insb lea rex.WR or pop sti rclb callq xchg mov or testl xchg shrl cli fstl pop pop ja xchg (bad) hlt (bad) cmp or jle xchg (bad) xchg fisub je fwait mov mov cmp jnp xchg xlat int3 pop idiv fiaddl rex.WB pop movsl lahf cmpsl (bad) and cli pop or popfq mov movabs mov jmpq rex.X test cmp out adc mov or movsl ds out xorl jle xchg pushq rex.WB sub cmp sahf mov out or int ljmp mov sbb fsubrl mov adc and add test add (bad) add adc sbb retq mov adc sub loope lea pushq or pushfq outsl sbb mov lods movabs mov xchg rex.RB xor loope rex.W in xchg jp jns stc mov and (bad) jns fwait or sahf sub sbb (bad) rex.WRX (bad) movabs ficoml fwait mov out push nop and popfq sub ja out lahf push sbb xchg xor or rex.XB ja lret (bad) int3 and andb xchg add shll pop cmp test out stos adc push sbbl sub in mov (bad) pop retq jge lods fidivrl cs (bad) jg movabs jp cwtl addr32 adc rex sub popfq xor (bad) mov fsts rex.R (bad) out cltd cmp or loop jne jb sbb rex.WR scas (bad) outsb stos push pushfq adc rex.RX nop sub scas (bad) pushq (bad) sub rex.XB rex.X xor (bad) rex.WRX xchg (bad) mov sub popfq out (bad) or fs mov rex.B insl rex.WRB (bad) bswap cs data16 data16 test jrcxz sbb repz xchg (bad) mov jno sbb stos int insw movabs mov sbb pop rex.WXB sbb pop jmpq xchg std mov xchg (bad) int3 jle push add cltd add mov (bad) mov or pushq mov mov (bad) rorb test roll xchg fs (bad) sub sub loope mov sbb pushq imul xchg xor xlat (bad) rorl (bad) or retq (bad) (bad) out (bad) adc test icebp xor rex.WRB cmp mov mov mov xor out cltd rex.RXB (bad) sbb (bad) lock xchg or outsl rex.X (bad) pop or imul mov sub pushq (bad) mov dec (bad) icebp adc addr32 mov jrcxz out mov jg (bad) adc (bad) (bad) test rorb xchg push cwtl (bad) je ds xchg in and lock (bad) sbb (bad) xchg cli xchg lret push xchg movb (bad) push (bad) addr32 fildll mov mov fcmove push mov movabs ds (bad) xchg (bad) (bad) pushq rex.X xchg hlt testl rol in mov mov cwtl (bad) cwtl xor jl sarl sbb adc xor (bad) add scas sahf xchg fwait (bad) or rex.X notl cmpsl (bad) loope (bad) rex.RX jl (bad) and lret xchg mov (bad) xchg (bad) imul xchg (bad) mov rex.WB sbb (bad) (bad) jl je push push cmp (bad) rex.WXB and pop xchg pushfq mov sbb lods add jle in rex.WRB pop xor lahf pop lea jp or scas adc outsl movabs xchg (bad) jle xchg xlat je pop and sub (bad) rclw (bad) sub mov sub (bad) movsb sti and callq jle xchg mov xlat mov mov xchg xchg adc pop addl add fimul gs pop cmp jg cmp jns jge mov mov loopne rex scas pushfq lret mov js or xchg (bad) jne xor xor cmc add mov in ds (bad) fbstp xchg notb or jns push push rex.W sub popfq mov xchg imul xchg lods mov sbb xlat pop (bad) (bad) mov popfq mov add enterq add or cmpsl cld add mov negl fwait push (bad) jo cmp (bad) test xchg andl jp mov out (bad) testl pushq mov rex.WRXB pushfq push xchg (bad) mov (bad) gs xchg lea fdivr stos out pushq push scas and xchg cwtl mov mov gs ficompl pop (bad) add clc push jae xchg callq mov adc xchg jb in rcrl pop out xchg hlt rolb xchg rex.W xlat and or shl xor rex.WRB xacquire (bad) (bad) retq mov push cld xchg jmp loop fimul scas (bad) (bad) xchg loopne pushq rcrl cmp movabs incb rex.RB mov (bad) mov rex.R (bad) nop mov xchg xor lret xchg scas movsb add (bad) sti xchg cs mov xchg add setl cwtl enterq (bad) xchg rol rex.WR ss xchg xor out scas (bad) add cwtl cmp mov (bad) mov sub push xchg (bad) or rex.WXB adc xchg or mov rex rex.X test pop xchg mov movabs lods stos rex.RX add loop jo cmp or xchg and adc mov sbb rex.B cs jl xchg and add sbb (bad) xor xchg jns js stos (bad) mov cmpsb loope fildll mov sbb jns leaveq (bad) mov (bad) (bad) popfq cmp out add imull mov rex.WXB mov and movabs (bad) (bad) jne rex push (bad) add imul (bad) je hlt add (bad) push or cld xchg push mov scas mov movabs enterq pop icebp (bad) jg cmpl xor xlat sbb sarb xchg add out shlb xchg shrl in (bad) std fistpll mov mov rex.WB ficoml movabs push (bad) add add push xchg enterq pushfq (bad) mov pop jle (bad) rex.RB (bad) imul push (bad) xor cmpsb retq rex.XB lahf movsb (bad) imul out loopne xchg (bad) decl es movslq pop add (bad) pushq xchg mov xchg or shr idiv fdiv (bad) cmp mov pop rex.X movabs (bad) jmpq and rex.WRB mov sbb lret cmp rex.W xchg outsl xlat sahf loop getsec in add stos icebp sbb rex.RX rex.B (bad) or (bad) push xor sub rex.X adc out jmpq cmc and stos fs sti clc scas cmp imul repnz jbe movabs leaveq rex.RX adc enterq jmpq test (bad) icebp adc or stos xchg (bad) pop add mov (bad) jl sub xor rex.WR fs sub addr32 (bad) movl pop rex.RXB (bad) (bad) jo ds or (bad) jae addr32 enterq outsl mov add xchg iret pushq (bad) (bad) stos mov insl fsubrs outsl fidivr and (bad) rex.RXB add or out and in jmpq cmp test (bad) sbb jp jno test sub xchg mov rex.WXB xchg xchg pushq rex.WRXB sbb xchg fistp mull xor loop cmp (bad) add pop (bad) outsl out scas xchg xor xchg stc and mov in cli fistp add (bad) jp fisubr nop movsb xor xchg add stc scas sbbb rorb adc test push jg je callq sbbb cmp shll xor movabs (bad) (bad) xchg mov jrcxz lods xor idivl pushfq sub mov rex.W xchg xchg out rex.RX push xor fisttp (bad) (bad) cmpsl hlt mov sahf cmp (bad) adc rex.WRB xchg cmp or insb jo sbb rex.WRX push mov mov xor (bad) xor popfq imulb jmpq jle mov fidiv (bad) xor cli xor in shrb (bad) cld pop xchg push push pop adc in jnp movsb mov rex.WRXB xlat adc mov (bad) mov sub jne int mov sbb jae repnz fcoms ss xorb push mov jl retq jrcxz lret mov (bad) add sbb sahf movsb stc cmp mov xchg pop xchg xchg fcomps pop xor cmp sahf (bad) mov rex.WX movabs push (bad) movabs cmpsb test jle pushfq push xchg out pushq rex.WB ss lahf pop pop setge (bad) mov push (bad) mov xchg push xchg or rex.WB jbe movsb xor mov jmpq sbb rex.WRXB out sub rex.XB jbe movabs (bad) ja mov xchg fidivr xor lods ss rex.WX (bad) std enterq shr in mov lahf and xchg mov mov xchg pop sbb hlt (bad) (bad) js (bad) (bad) jge roll jg enterq rex.RX sbb stos movsl xchg cli xchg (bad) cmp mov mov xchg rex.WXB in add mov cmp cwtl xchg cmc cmpsb loope repz mov or push mov iret rex.WXB (bad) mov stos xor pushfq mov fsts (bad) pushq add int3 cmp and xchg jo add and ja jge rex.RX (bad) (bad) mov loope mov rclb rex.R (bad) (bad) popfq in xchg insb popfq xor enterq fdivs xchg callq rex.WR stc std imul jg jmpq (bad) hlt (bad) jo movsb sub adc rex.WRB adc nop push rex.B mov xor (bad) (bad) (bad) xchg sbb lock cmp ja imul jns scas mov ds adc (bad) movabs and js movslq mov pushq mov popfq xchg outsl jnp mov cli xchg sbb (bad) push lahf std retq cs push rex.XB jo (bad) fcoms mov adc lods xor cwtl cmp rcll adc xchg movsb (bad) imul xchg (bad) (bad) mov jo (bad) nop rcl test and xchg insl loope rolb out cwtl cwtl rex.X sbb jae mov xchg and sarb jl rex.WRB jmpq cmp (bad) mov (bad) out test jae out (bad) or rex.RB and xchg fsubl mov xchg fwait (bad) (bad) xorl std mov scas push ds (bad) (bad) cmp enterq fwait mov (bad) rex.W (bad) xchg push cs add pop (bad) mov pop fstl or mov in xchg cld pop push (bad) jrcxz,pt rex.WRXB (bad) adc stc (bad) stos stos mov (bad) push (bad) rex.WX sahf enterq xchg cmp movabs out test xchg mov fnstcw xchg push es xor add xchg stos (bad) fist ja lea gs mov add cmp rex.R xchg pop (bad) movabs sbb mov xchg jnp sbb nop hlt rex.RXB iret mov jrcxz test xchg adc rex.WRB or and test xchg bnd pop adc jmp xchg sbb cmpsl xchg adc sub add sub movabs icebp movsb jp xchg xor (bad) jne test xchg in mov rex.R divl orl (bad) mov scas (bad) xchg hlt inc cmc cltd test (bad) push mov pop insb rex.RX (bad) out (bad) push xchg lretq xchg xchg cmp jp xchg movsb ss push sub jb in xchg sub add gs xchg and pop pushq rex.WRB gs xor xchg (bad) jge (bad) fs sarl jo rex.WXB mov mov pushq retq out push push int3 in lods addb loope fs pop movsb cmpsl test (bad) rex jo cli ja (bad) movsb xchg pop pushq lods std adcb mov mov ficompl pop rex.B cmpsl jg pushfq or (bad) icebp mov xor lea mov rorb stos (bad) push sarl rex.WX push cwtl shll (bad) jns xchg cmp movabs fstps int3 (bad) shrl adc out push es (bad) out push cmp scas pop test movabs jns xchg cmp adc xchg xchg push mov pop hlt fstl (bad) cmp (bad) or (bad) int xchg movabs std cli or rex add in xchg sahf jae icebp jae rex.W test (bad) xlat (bad) sbb push and (bad) mov jbe jne sub popfq popfq mov add movabs and std cmpsl xchg (bad) mov lret je xchg repnz add add movabs mov add cmp push imul adc rex.RXB (bad) callq mov test pop movsl push sahf sub cltd (bad) rex.RX mov (bad) add cmp sub add imul add and rex.WRB adc lea in icebp xor mov push mov cld jb outsl xor leaveq out adc out xor xlat in pop pop sbb push rex.RX xchg scas (bad) loopne (bad) mov xor out loop pushq lods (bad) adc (bad) push movslq adc movsb mov (bad) stos pop xchg jp in cmp pop jo scas rex.WX and (bad) cmpsl pop xor cmpsb push pop mov callq std rclb mov xchg rex.RB and in mov (bad) xchg xchg out rex.RX ror and cwtl mov ja fbstp movabs mov lods add xchg mov mov sbb insl mov shlb ss test sbb rex.XB fstpl sti lock xlat adc sbb (bad) leaveq xchg movabs jmpq in rex.WRX jge and push clc xor stos rclb mov and fs fiadd and hlt jmp movabs fist fldl2t (bad) sbb push sti mov pop pop xor cmpsl jl movabs sbb cvtdq2ps mov xchg and cmp add jne jb add xchg (bad) rex.WX fadds iret in or loopne xchg xor jo xchg mov pop test mov pushq retq movabs icebp xchg (bad) clc lods loopne sub pop int3 xchg retq xor sahf fstpt rex.WRX imull scas cmpsb push test popfq cld mov xchg (bad) sbb movabs adc push gs rex.WRXB sub adc xchg repz sbb mov movslq cmp xor (bad) xchg movabs mov xlat (bad) hlt (bad) (bad) pushq or (bad) xchg callq rex.WRB cmp xchg sbb jae jno (bad) xor jl sahf sub push jns outsl iret xchg in xchg push mov cltd fnstenv outsb pushq xchg (bad) mov imul and imul cmp fild movabs or cs (bad) mov add (bad) mov movsl jmpq scas mov push lods cmpsl jg mov xchg sbb sbb rep (bad) outsl push xchg (bad) (bad) cmc lea xor (bad) scas cwtl adc sar retq movl (bad) sub xchg lahf iret jmp jmpq in in xchg mov cmp add (bad) lretw cltd (bad) sub xor movabs notb sbb lahf retq push mov int3 rex.WB add in mov sbb cmp leaveq (bad) repnz xchg or (bad) xor pop rex.RXB nop cld xlat push or push rex.WRB xchg addr32 lret (bad) repz jmpq pop pop outsb xchg loopne cld jge lea movabs fdiv push movabs test pushq jnp xor cltd pop push (bad) mov cmp js xor leaveq movsb jrcxz xchg xor cmc cmp (bad) push push xor (bad) pop out rex jne fs cs je xchg (bad) rex.WRXB rex.RX adc lock (bad) add lahf (bad) pop mov out ja leaveq jp (bad) xchg (bad) (bad) ss mov push lods nop mov testl xchg stos mov rex.RX sahf outsl mov lret fwait rex.WRX xor add xchg in shrl xchg rex.WXB rex.WRXB jp xchg mull add scas add xchg nop pop lods adc shll sahf pushfq lret ss rex.B jmp xchg fs faddl fwait sub rex.WRXB repnz mov test (bad) jne popfq iret cmp (bad) xor fs (bad) movabs int3 sbb vzeroall (bad) push xchg rex.WB mov jge nop outsl imul (bad) jne stos (bad) jge adc xlat scas std rex.WRXB insb fdivp push xchg sbb int3 (bad) mov xchg insl (bad) (bad) sub mov es (bad) (bad) js xlat rex.RXB rex.WRB cmp (bad) rex.WB mov jb out and adc and pop jg xchg cld adc cwtl sahf lcall (bad) (bad) cld jrcxz cmp rex.WR out push cwtl xchg sub fcmovb ss outsb jae (bad) pushfq cmpsb (bad) rex.W sti shlb mov (bad) loop and cmpsl cld rcrb mov (bad) sti rex.WXB jmp cwtl lock mov or (bad) add pop mov xor xchg rex.WRX test sbbl (bad) pushfq in retq push cs pop out stos xchg sub pop jg sahf (bad) in and (bad) sbb vmovhps rex.WXB (bad) add pop rex.X imul add (bad) xchg (bad) pushfq rex.RX movsb mov xchg stos test sbb gs decl pop rex.WR mov cmp lahf scas push iret scas xchg mov cmp int push lods xchg repz test ja jmp adc mov sub jrcxz (bad) add ja mov sub ja movabs out lods (bad) mov out xchg (bad) cmp or pop retq push xor scas mov (bad) xchg jle int push rex.WX insl sub test (bad) hlt (bad) je (bad) sahf lea ftst push fdivrl nop test sub xchg insb (bad) mov scas (bad) clc insl pushfq stos cmp in pushfq movabs pop xchg cli lock (bad) mov nop jge or mov (bad) jne xchg cli (bad) (bad) mov rex.RX mov lods scas nop xchg (bad) outsb enterq sub or (bad) rex.WRXB cltd movabs mov ds in xchg jbe iret test rex.RB mov xchg mov sub or test cmp (bad) imul mov sarl cmc rex.R add jl adc cmp xor out movabs mov xchg and cmp (bad) vmovapd loop jg mov mov (bad) callq lret cmp (bad) test sahf in jl mov sbb xchg xchg xchg (bad) sahf mov (bad) rex.RX mov scas sbb (bad) push sbb insb lock jmpq movabs lods movabs cmp cmc xchg push jae mov xchg enterq stc mov xchg (bad) mov cmpsb jne xchg rex.B add mov and adc cmpsb jno fs jb push pop rex.R xchg test and addr32 sarl ss (bad) imul rex.RB rex.XB mov xor loopne xchg push xor lahf sub outsb cli sahf push (bad) and movsl cs gs (bad) xchg fs in xchg jrcxz rex.WX xchg pop repnz (bad) push mov sbb (bad) xor (bad) test and sahf or in jg mov repz mov fcoml nop (bad) fidivl (bad) (bad) mov lods adc jbe insl mov pop mov repnz jno sbb sti notb rolb (bad) jne retq xlat xchg lea (bad) fistl movabs rex.WRX xchg jns jmp or mov shr mov out scas (bad) std xchg sbb int cmpsb and xchg rex.R scas imul mov fnsave rex.WX mov (bad) xchg push negl mov cmp mov (bad) lret pushfq loopne adc in shrb sbb outsb adc rex.XB lret (bad) jo jle xchg xchg adc rex.WRXB xchg xlat add pushq mov movsl xchg stc mov and rex.R mov rex fs jns frstor sub add (bad) sub and rex.WB addr32 or (bad) mov movslq jns jne (bad) jnp fisubr loopne outsb insb (bad) (bad) pushq fisttpl movslq mov mov sub sub push icebp (bad) rex.WRX es xor movabs mov (bad) sbb lods rex.W lods mov xor xchg pushq lods movsb cmc jp xchg sahf mov and mov sahf in js jo pop push rex.RXB xchg sarb xor lods mov data16 sahf (bad) (bad) loope (bad) jae push (bad) xor or (bad) fild loopne (bad) mov faddl jge mov int sbb mov out mov (bad) mov cmp jmpq xchg (bad) outsb movl movsb jg imul cmpsb jrcxz adc imull fs adc rex.WRB add lcall mov or cmp jge xchg mov movsb jb jo (bad) xchg out test decb (bad) ds test je rex.RXB (bad) (bad) mov rex.R or lahf vmread fist sbb mov movsl (bad) xor cli rex.WRXB rex.WXB movabs (bad) (bad) push (bad) int lock sub cmpsl rex.WXB mov adc ds cltd mov mov mov mov (bad) sbb mov push sbb jnp push (bad) xor (bad) nop callq push jmpq or adc movsb push lret popfq in gs mov and rex.RXB ss jb (bad) xchg out sahf rex.XB (bad) mov movl popfq adcl and and mov (bad) jmp mov add push xchg (bad) and data16 xchg xor (bad) sbb sbb (bad) imul rex.X cmpl jbe mov rolb xchg (bad) gs mov push add mov and cmp mov outsl xchg rex.RX push icebp test xor repz js rcrb test jbe fistp push xchg mov sbb mov pushfq xchg sbb rcrl sub and cmp rex.R cmp andl rex.WRXB and scas scas sub push mov loopne xchg imull rex.WRX mov ficomp adc jle cld mov lock test sub xlat xor rex.B repz xor or adc popfq repnz fsts (bad) gs lahf enterq add rex.RX push or (bad) fnstcw adc stos movabs adc outsl xor xchg rex.WR (bad) lahf lods sbbl pop pop and stc xchg (bad) callq (bad) rex.W cwtl sbb mov mov rex.WXB cli rclb imul pop lods cmp lock cwtl jbe xorb mulb (bad) rex.WRB rex.RXB jp rex.R rex.RXB push push pushfq or int cld jle jrcxz lods xchg leaveq in retq sbb xchg xchg and flds jbe (bad) lods std outsb rex.WXB notq rolb cmc pushfq lret adc jae (bad) subl fidiv mov rex.WR imul lahf mov enterq pushfq sbb xchg lea adc or mov sbb hlt incb sahf insl mov or (bad) js (bad) rex.WX jle push leaveq push xchg add retq scas test adc mov movsb pushfq popfq mov (bad) pop fdivrs ffreep rex.R cmp rcll sub gs adc jno incb leaveq or outsl pop (bad) (bad) or cmc fcomps jae cmp cltd (bad) nop add jmp (bad) adc outsb loope imul movsb in (bad) movabs adc pop es sarb xchg (bad) imul or jrcxz or orl add mov or (bad) lock jnp sbb add mov add sub pop mov pushq jne add (bad) mov outsb iret and orl adcb jge (bad) fnstcw cld cmp in mov and (bad) xor outsl rex.RX test xor insb sub and rex.WX add (bad) std out nop retq in pushfq fstp adc or int3 rex.WRX (bad) mov cmpsl jae out sbb mov pushq adcl rcrb adc jae jne scas sbb int3 or sbb movsl data16 mov fs jb nop rex.RB iret rcr lock (bad) (bad) or out add rex.WRB and mov ja (bad) pushfq pop pop xor (bad) (bad) cmpsl insl rex.R js cld sub mov add test adc leaveq jmp ss (bad) pop rex scas cmc push mov sub sti pop adc (bad) jnp stc insb xchg (bad) addr32 (bad) or rex.RB (bad) pushq jmp pop in mov lahf sbb rex.WRXB sahf or imulb and (bad) xchg pop imul cld cmc and out rex.WRB (bad) sub pop mov test jg nop loope pushfq je sub out or push stc rex.WR rex.RX jnp rex.R adc mov and popfq repz lock (bad) cli icebp add mov mov jl and xchg imul (bad) repnz mov jae or insl xchg stos lea xchg (bad) and cwtl adc and rex.WRB rex.RX rex.RB rex.WB testb pop add imul and (bad) xor rex.RX rex.WR xchg test sub mov movsl cmp rex.X callq out (bad) mov nop in enterq sbb test (bad) lret (bad) sbb out imul mov jrcxz enterq xchg rex.RXB (bad) (bad) lock xchg xor sbb sub mov or xor addr32 and (bad) sbb pop negl mov fsubrl xchg js mov pushq sub ja fdivrs add xchg cmp mov movabs add (bad) (bad) pushfq pushq (bad) fsubrl rex.RXB and retq sahf xchg leaveq mov repnz mov out pop (bad) add pushfq jne mov mov jle cs mov xchg rex.RX imul cmp adc mov gs xchg cmp xchg rcrl scas add pushq mov xchg push fs (bad) jbe rex.WRB xchg cmc subl mov (bad) pop scas hlt cli jbe loopne repz mov pushfq retq mov (bad) rex.RB (bad) cmpsb jne nop jrcxz xor xor fnsave jrcxz or rorl (bad) adc loope ds and (bad) cmpsl mov fistpl add sub add nop ja pushq (bad) jg (bad) mov rex.X test jns push ficom push xchg xchg sahf sub retq ror add cmpsb sub divl (bad) fcmovnbe jmpq imul iret xor xchg lahf lret ja (bad) gs mov adc (bad) or jnp (bad) rex.RB imul pop xchg mov (bad) mov xchg (bad) lea adc sarb repz je add xchg (bad) or movsb (bad) ja rex.WB stos xchg fxam insb fistl adc cmp lods xchg sub pop insb movsb cmp mov adc jmpq (bad) je loope push repz jrcxz rex.WXB lods cli xchg movsb clc movabs mov test rex.WRX (bad) (bad) (bad) adc jrcxz frstor sahf sub je cs test outsb (bad) rex.X (bad) in ja scas jl (bad) push cmpsb cmc ffreep int cltd jne sub out mov movsl (bad) insb (bad) xor rex.R cwtl stos hlt push (bad) xchg xchg sarl mov in imul (bad) xor movsb lret mov es xchg or rex.RX mov gs pop xchg mov movslq repnz mov test out (bad) mov in scas (bad) outsl and and jnp and sub sub test jrcxz (bad) xor lods sahf out movabs sbb out xchg add xor enterq ss sbb or cltd and jbe and xlat mov and jmp pop push jle mov xlat jp jno imul xchg mov loopne bswap xchg mov sahf movabs movsl push notl or stos cmp (bad) xor pushq (bad) ds rex.WB out mov sbb flds ja mov (bad) xchg ljmp rex.RB cmp je test cmp vaddps (bad) movabs mov mov js jmpq rex.RB movsb sub sub std or notb inc fbld (bad) sahf mov leaveq sub push shl and sahf loop jrcxz xchg rex.RB add (bad) rex.X xchg in and out xor movabs rclb (bad) test and adc sti je int3 std pop clc insl or cmpsl xchg lods mov lock or cmpsl mov (bad) jbe negl mov movsl jne xchg mov addr32 xchg jb out movd pop jrcxz rex.WXB movabs notl sbb out rcrb or pushq jg movabs pushfq callq sbb (bad) movabs adcw callq sbb in cmpl fidivr movabs adc movsl sbb sarb adc mov cli sbb mov (bad) adc phadddq pushfq xchg cs pop (bad) rex.R mov nop es rex.WXB jle sarl sar sub sti test adc add mov rex.RX divb fldt mov fwait out (bad) fsubr rex.WRX es mov or xchg pop test add int3 xchg in lret xor xchg nop out cmp (bad) fclex xchg mov rex.WRB jo jae imul xchg jmp rex.WRX xchg pushfq jle rex.WB (bad) imul or cmpsl test movabs adc stos lods add mov sbb movsl iret addl pop sub (bad) sub retq push jl pushfq (bad) cmp xchg sub (bad) and xchg fstps (bad) (bad) xchg (bad) cmp cmp (bad) (bad) xchg mov xchg out xchg xchg (bad) hlt lods repz (bad) popfq add ja fadds cs jbe (bad) movabs xchg (bad) jle jbe jno fnstcw cld jl push rex.WRX icebp (bad) cmp stc movsb rex.WRXB ja movabs out mov xchg add pop xor fsubl add cltd loopne imul (bad) out (bad) lea sub mov xor and je sub retq sahf lea mov sub cli test (bad) mov xchg repnz clc mov jns mov callq xchg mov imul jno or pop pushq rex.XB cwtl and xchg pushfq movabs rex.WRX fldl out (bad) (bad) xor mov cmpsl cmp (bad) jg loop (bad) jmpq and add leaveq rex jbe (bad) in (bad) mov pushq outsl mov repz sub mov pop stos sahf (bad) xchg js rex.RX cmp push jb mov push adc rolb jnp add jo movabs or scas fiadd and callq sbb and lret mov (bad) sahf and sti movabs pop or xchg enterq xchg addr32 (bad) hlt mov rcr xchg add (bad) mov retq mov (bad) mov (bad) (bad) out adc cmp jmp callq scas test fidivl mov rex.WXB stos (bad) movsl and jge (bad) fidiv or adc insl and (bad) fdivs gs or movabs cs cwtl jne jbe jb xchg push rex.B and add imul fucom sti mov test out lret (bad) and pop sbbb (bad) rclb pushq or and (bad) pop cwtl cmpsl xchg rex.RX ljmp mov lahf jno mov clc test jo rcll mov xor jno mov xor data16 xchg scas rex.WXB (bad) fxch out (bad) js cmp (bad) cltd mov xchg pop (bad) jg (bad) sbb (bad) fildl and mov mov pushfq pushq add xchg (bad) push (bad) ss mov movsl rcrl push clc xchg fildl push xchg jle and out movslq rex.W (bad) sbb and stos xchg test (bad) and rex.RX stc es (bad) pushq cmp jp lret xchg mov sbb je out test (bad) cmpsl callq (bad) orps repz (bad) or shlb (bad) cld push fs (bad) lea mov jge sbb shrb (bad) add rex.WB xchg rex.X mov (bad) sub rclb xchg sub (bad) stc sbb fs fcoml orl (bad) xor mov rex.WRXB jb insb fmull lock (bad) mov jb hlt xchg lret jrcxz sahf sbb (bad) xchg (bad) movabs xchg xor mov sahf cmpsl stos popfq sahf loop repz xchg sbb mov test or (bad) imul mov (bad) xchg pop (bad) rex adc mov mov rclb and (bad) int mov or movsb mov or imul (bad) xchg xchg (bad) adc ud1 or mov jbe xchg xchg xchg jae sbb rex icebp rex.WRX mov push std shr cmpsb enterq or jp mull repnz or (bad) loop xlat sahf mov jge gs or jnp cld and (bad) sub mov xchg movabs mov (bad) lea sub jrcxz rclb (bad) mov mov iret pop pop cmp xchg pop (bad) jrcxz pushfq jnp jmpq xchg cwtl mull jmp push push out and (bad) mov xchg adc xor in mov mov rex.WR nop sbb cmpsl mov cltd mov repz (bad) cmp rex.WRXB rex.RXB mov out sub xor xchg mov movabs and xchg sahf mov imull int3 xlat retq (bad) rex.R in loopne lods (bad) jb sbb lret adc rex.B pop xchg xchg outsl and and fadd jo je or push xchg add sbb add xchg subb pushfq or lods sub andl and or loop jmpq mov rorl loopne xchg jnp (bad) xchg es sarl (bad) fdivr jne repz je xchg mov mov sbb or fistl cmpsb cld mov fwait xchg (bad) mov sub xchg and jl (bad) je mov imul repz out test push addr32 push incb cmpsb xchg rex.R je jge (bad) cld addl mov out jmp pop movsb out xchg (bad) or sbb sub imul (bad) js push add cmc sub rex.XB adc xchg xchg sbb or add pop cmpsb lret xchg test nop out (bad) mov pushfq ficompl insb xor sbb adc add (bad) and std mov sbb andb sbb cltd rex.XB out sti fistl and mov jb movabs rex.WRXB or jle (bad) sarl or rex.WX cmp (bad) adc (bad) test rcrb ja (bad) in mov (bad) nop shll mov and mov sbb jrcxz xor std adc push ds push xor rex.WR (bad) xchg xor (bad) pop fidiv pop jnp pushfq pop mov xchg xchg ficom imull movsl xchg pop mov xchg insl jmp cmp (bad) mov sahf hlt and in repnz callq add mov loop test cltd pop (bad) out push je test jmpq stc xchg sub sahf divl stos rex.RXB stos jmp xchg xorl cltd mov add (bad) and push xchg lret push (bad) mov scas push fmull add xchg (bad) int3 xor xchg lret mov out rex.WRXB xchg sub imul shl (bad) cwtl hlt outsb pop lods scas rex.WR mov jle (bad) push xor jae cmp sbb lahf out cmp in push rex.B cwtl cmpsl cmp lea rol add gs sbb sahf jns pop sahf jae (bad) jnp js stc sbb movsb std je out xchg retq lods mov ja jne shrl js push (bad) jbe sub add xchg je negl xchg mov or mov addr32 mov clc lods mov pop jmp mov push jns jbe sbb (bad) xchg xor fadds xor add out xor (bad) sarl adc lock rolb (bad) imul mov (bad) (bad) movsb test cltq mov stos xchg sub jp adcb cmpsb xor jge xchg pushfq (bad) adc jmpq xchg rex.XB sbb addb or shrb (bad) je cmp mov out adc xor push or jnp xchg movabs cmp and (bad) lods leaveq fs popfq sbb rex.WB ss (bad) xchg cmpsb adc rex.WRX (bad) (bad) in xchg adc mov orb (bad) sbb sbb adc (bad) xchg xor mov cmp mov jne rex.RB add pushq lahf mov push (bad) fnsave jb mov push movabs and iret sbb je addl (bad) sbb jle cmp rex.WRXB stos ds lea mov sbb (bad) negb (bad) xchg rex.R jae (bad) out cmp (bad) lahf stc test outsl jrcxz callq jb xchg jns adc lea (bad) jrcxz in retq mov or subl xchg mov (bad) mov stc jae pushfq fs js js (bad) fcmovnbe stos xchg int and sahf (bad) (bad) int3 cmpsl out add jbe (bad) sbb stos adc (bad) xchg adc (bad) movabs xchg jle and ljmp add pushq xchg out es mov (bad) or (bad) pop movsl mov mov or xlat xchg nop adc mov hlt insl sahf push je cmp hlt sbb rex.W (bad) hlt mov lock icebp cmpsl sbb (bad) rex.X (bad) cmpsb sub addr32 int retq push push pop adc (bad) cmc jg and jl xchg xchg loopne jrcxz mov and icebp adc test popfq ficom xor mov xchg int xlat xchg or or add cmp (bad) insl fcom xor push fidivr xchg std mov push nop jp (bad) xor rex.WB or fiaddl gs insb iret cmp (bad) pushq and xchg add mov stos imul mov and leaveq (bad) jrcxz movabs sahf retq pop (bad) fwait imul adc pushq (bad) rol (bad) shl pushfq cmp stos push mov sub and sarl add cld rex.WX push mov jnp push jbe and fsubrl movabs push or pushq (bad) insl nop sbb shlb jnp jl jp or retq cvtpi2ps and testl sbb rex.B xor rcrb rcrb mov rex fsts pop pop mov rex.XB (bad) mov push jo fcoml popfq (bad) jno jbe pop loope fiaddl ss (bad) (bad) (bad) add cltd loopne movsl mov rex.WRX rex.WXB clc fnop sub push test rex.B pop mov loop cmp jnp cld pop int out sub push cmpsl and (bad) pushq movabs fwait lea lock pop mov add lret stos xor fbstp (bad) pushfq add mov xchg xchg rex.WXB insl cmp mulb (bad) jne lea (bad) iret stc out std cmpl sub mov sub jge rex.WRX cltd imul xchg push lods mov xchg cmpsl pushfq xor cmp movsb mov rclb stos ds xor out xor mov sub xchg cmp rex.WRX out mov insb xchg movslq (bad) mov leaveq jb sbb retq stos xor ficoml pop fcoms mov rcrb xchg lret cltd icebp retq pop (bad) push jno fmul jg scas and (bad) xchg sarl add pop jmpq pop leaveq mov mov movabs add imul xchg stos (bad) or movsl cwtl mov pushq (bad) jb fnstenv xchg scas (bad) (bad) xor (bad) jnp lods sbb hlt pushq movabs (bad) rex.WRXB fadd cmp (bad) in xchg mov mov test (bad) (bad) (bad) (bad) and add rex.R in jbe movabs stos (bad) xchg rex.XB (bad) movslq xchg rex addr32 cmp cmp and (bad) test xor xchg push cmpsb fisub add in cmc (bad) mov sbb cmpsl jmp pop retq and xchg or xor xor leaveq movabs sbb rcrl ja xchg movabs (bad) jae insb cmp and and (bad) std test xchg out xor rex.WX rclb mov jo sahf jns je mov lret rex.WB rex.WRB (bad) rex.WX rex.WRX jrcxz pushq (bad) mov (bad) fucom sbb mov pop (bad) nop or add (bad) movabs adc (bad) or rex.X stos jg in cmp and iret loop or adc pushq movsb cmp adc mov test fwait or leaveq push cld xor loopne adc in add sub xchg and xchg pushq movsb int in or xchg enterq sbb adcl sahf sarl rex mov adc (bad) cmp subb lahf rex.WRX ja (bad) jge xchg sub rex.RB leaveq xchg movabs sahf mov and and jbe pop push adc xchg sub and sub rex.W sarl jmp nop movsb (bad) xchg stos mov (bad) ss insl (bad) jns mov fnsave xchg sahf xor scas negb push cwtl packuswb and sub mov pop rex.RXB or out jno push cmp or insl int3 xchg sub jl jbe xchg fnstsw adc stos rex.WRB add jmp rex.WR test inc int3 movsb jnp outsb rex.XB (bad) repnz add (bad) (bad) rex.XB or and shlb adc push sbb jnp stos lret imul pop (bad) mov sub mov xchg mov cltd xchg adc (bad) cmp (bad) jge pop adc mov push (bad) incb mov nop pop sbb adc (bad) adc retq cmp popfq vcvttss2si in jno movabs jmpq cmp lock outsl test retq jp rex.WRB adc rcrb or cmp sahf sbb mov and int3 xchg xchg ja enterq pop add sub mov int3 lret xchg rex.RXB (bad) mov pop gs and fldenv je xor (bad) xor mov xchg lods in cltd outsl pushq pop nop nop cmp pop adc cmp xor or (bad) pop lcall pushq pop adc pop lahf (bad) jbe mov gs outsl jb xchg pop stc adc imul mov push cmpsl lahf clc popfq xlat (bad) xchg imul retq rex.RXB jne (bad) rex.WX lods mov mov icebp mov xor cmpsb movsl outsl scas mov mov push jae pop mov jge mov je fimul sub mov out imul and fist retq pop int mov mov (bad) or mov jo xor xchg lea mov and pop scas movsb xlat xchg cmp sbb out xchg mov lret movabs (bad) lret (bad) jge jmp cli mov shll xor movslq and or mov xor mov (bad) cmp cmpsb outsl cld xor ja rorb adc (bad) fimull (bad) rolb push insl or loope cltd pushfq insb jbe push push mov (bad) sbb cli jl push cmpsl scas (bad) (bad) jmp xchg jg (bad) sub rex.X ror mov (bad) out jmp add push cmp adc jp adc xchg or cmp fsubs rex.WB cmp jae scas out (bad) xchg pop sbb xchg rcll xchg adc cmpl mov or add mov jrcxz iret sahf rex.WX xchg lret pop lret lret sbb adc (bad) (bad) push push mov leaveq lea roll push rex.WRX (bad) lahf or out or xor xor rex.XB rex.WX push pop and lret xchg retq mov fwait jb or jl add leaveq sbb add fist (bad) jbe (bad) rex.WR cld lods xor (bad) cmp rex.RX ja mov rex.W jne outsl iret pop in outsb pushfq rex.WXB mov mov (bad) (bad) push xlat jmp iret retq rex.RB lret outsl sti sub mov (bad) clc (bad) and data16 hlt lods and xor pop rcrq int3 insl imul callq pushq pop xchg mov xchg scas test (bad) cmpl addr32 (bad) or pop sbb pop (bad) jb (bad) cmc pop xchg out or mov jb pop push (bad) fs lahf mov iret repz movabs rex.WXB fcomi xlat pushq imul (bad) loope jl addl add cmp cwtl jbe cmp xchg (bad) pop jge jmp rex.XB ss jno mov (bad) jg cmpsb addr32 negl (bad) repz mov (bad) mov vprotw outsb jle movslq rex.WB scas insb mov shll sbb nop callq (bad) clc pop (bad) (bad) fs push movsl insl retq lea cmp sub push sti (bad) ljmp adc mov sbbb cmp and mov (bad) pushfq popfq or pushq loopne in lret popfq (bad) enterq (bad) jb retq xchg push movabs and hlt jrcxz lahf xlat xor xlat (bad) cmp rex.R data16 (bad) adc pop fs out or retq xchg sbb jnp,pt xor rex.X push and jmpq lods (bad) imul add (bad) add jnp (bad) jge out clc imul je rex.R rcll and repz fildl pop enterq cwtl fmuls mov rex.R addr32 pop mov jp mov pushq rex rex.X mov sub xchg jnp jns xchg or rex.WX xchg (bad) mov xor nop push movabs cmp movsl sbb gs xlat sbb sub int3 and xchg (bad) (bad) push xor (bad) jmp addr32 push movabs jge stc je and mov test pop cltd (bad) jmp jo mov add rex.RB jmp stc or (bad) jae adc (bad) adc icebp rex.RX subl rex.WRB adc pop rex.X outsb jne xlat add sub mov in (bad) enterq insl (bad) cld cs (bad) xor push (bad) push cmpsl xchg or add mov movabs scas cmp sub (bad) pop out lahf mov stos (bad) fs cmpsb sbb (bad) callq insb add (bad) cld jbe xchg cmp out cs and (bad) xchg push (bad) mov (bad) cmp (bad) rex.WB and xchg lahf stc pop xchg shll or jae sti rex.RB and xchg int3 xor pushfq mov addl fimull (bad) xchg (bad) retq cmp (bad) lret frstor ja sbb jg push mov movabs rex.R lcall (bad) cmp pushq lock jbe and (bad) loope lods (bad) (bad) pushfq push and add callq movabs fmuls scas shr popfq loopne cmp pop pop sub (bad) je jrcxz movabs subb (bad) outsl retq mov fdivs scas sub ja,pn (bad) xchg hlt out cmpsl rex (bad) (bad) decl icebp adc sub (bad) test insl (bad) fisub (bad) repz sbb jrcxz sbb mov incl xchg jae (bad) mov sti (bad) nop adc jp and sbb mov adc mov jno (bad) cmpsl stc subps jo imulb imul adc cld or mov (bad) mov or callq (bad) rex.WX out rex and mov fisubr (bad) pushfq pop mov ja mov adc lock mov callq popfq movsb gs lods xchg fdivrl (bad) popfq mov insb mov mov xchg add jmp cmp loopne sub out (bad) xchg fs sbb rex.W cltd pop jbe cmc sub rex.WRXB rex.WRX add (bad) xchg imul loop add jns rcll nop addr32 (bad) sbb mov cltd pop xchg cmp in push (bad) pop popfq (bad) (bad) pop push mov (bad) pop leaveq pop rcrl gs (bad) icebp mov (bad) (bad) and movabs movslq rex.RX insb push push repz adc int pop xchg pop cmp cmp or jmp out loope (bad) mov scas xchg or pushq cmp (bad) out loopne mov imul jle jb (bad) (bad) push movsb movabs pushfq jmp out rex.XB (bad) pop (bad) xchg test data16 iret movsl or jbe sub pop (bad) add sub lock adc rex.WXB and cmp movsl xor (bad) cltd lods mov mov gs shrl xlat data16 hlt (bad) (bad) or enterq movabs je lahf or jmp mov pushq rex.XB pop out add mov (bad) xchg pop rorb lods xchg (bad) int3 (bad) fs cmp rex.R xchg push xor (bad) (bad) je (bad) lahf rcrb pop cli sbb mov or in rcrb xor (bad) xchg movsb mov xchg ja pop cs movabs jno orb xchg (bad) adc out xchg cwtl (bad) add or sahf lods mov add push lods pop (bad) cld (bad) iret andl sbbb cmc (bad) rex.RXB callq jp test xchg xchg movsl xchg mov rex.XB (bad) rex.WRB fdivrp adcq movslq xchg and repz stc lret (bad) and mov sahf retq mov (bad) movsl mov xchg (bad) mov jle jae fdivr out stos addr32 (bad) ja (bad) ds jl pop decl add xor (bad) adc pop movsb rex.RXB mov (bad) lea movabs (bad) callq rex add movabs lods icebp rex.WRB pop xchg ja (bad) cmpsl mov jno pop pop cmpsb movslq movabs pushq cs pop mov cli xor rex.WRXB xchg (bad) jae lahf xchg retq mov jo es cmpsl gs pop (bad) sub jns movsl (bad) movabs imul rex.RX push xchg movabs pushfq and jns cmp cmpsl (bad) subl (bad) (bad) jo retq loop (bad) imul (bad) rex.RB xchg jge or jmpq pushfq and rex.WRXB (bad) lahf xchg testb xchg mov movslq lods fsubrs movabs mov mov insb hlt pushfq test retq mov callq (bad) cli jne cmpsb rex.XB (bad) fsubrs ja movabs xchg imul push out or sbb jo jle sbb idivl mov ja retq lahf adc test rcl mov mov (bad) xchg xlat imul rex.WRX div fisub and callq add pushfq mov repz data16 jbe retq cli and movabs mov (bad) callq sarb test push cmpsb movabs (bad) xor rex.WRX xchg cld ja movsb (bad) je jmpq push jnp xchg xlat pushq (bad) movabs xor fdivs xchg and pushq cmp leaveq stc (bad) (bad) sbb cmpsl rex.WRXB divl ds jle retq cmp mov push xchg and mov retq (bad) and or jmp xchg outsl pushfq imul std xchg ficom mov xchg (bad) (bad) vrcpps jnp cltd or rcll xor push scas iret stc xchg fsubr rex.B and (bad) xchg test and (bad) movslq sbb xchg out cwtl mov mov and cmpsl ss mov es push and insl cs out pop mov (bad) sbb (bad) pushq sbb push sub leaveq movsb and or sub sub (bad) mov out fstl movsl mov (bad) xchg mov insl ss ja xchg rex.X xchg jnp xchg cmc xchg sub cli xchg mov pushfq rex.R pop mov enterq addr32 push (bad) stos rex.RXB pushq lret cmp cmpb cs fwait xchg retq mov (bad) nop xchg stos adc add mov mov jo or mov push mov mov mov nop sahf or out clc pushq fidivl cmp pushfq and sub test and ss imul jb (bad) rex.WRXB nop sbb rex.WRXB outsb add enterq (bad) sahf retq nop adc sbb or (bad) pop mov rex.W rex.WRB xchg sbb (bad) jo popfq (bad) mov or push or mull xchg (bad) rex.WRB jle mov push repz xchg jne loopne int3 lea or (bad) cmpsb mov xchg (bad) movabs xchg movabs in adc scas pushfq movsb ss rex.X rex.WRXB cmp adc xchg repz sbb xchg pop int3 (bad) (bad) add (bad) push xchg pop jge stos xchg cwtl jo xchg (bad) fiadd movabs cmp cmpsb xor test lret pushq mov rolb (bad) jbe xchg loope mov adc fcoml rex.R push (bad) loop lahf ja add negb (bad) rex.WXB rex.X movabs rex.WRX add jne mov (bad) popfq sbb scas (bad) imull bndldx and xchg lret je imul rep add cmp sub movabs lret scas and jp (bad) movabs xchg fistl sarb testl fdivrs cqto addb mov mov mov xchg (bad) lret xchg stos xchg or pop (bad) (bad) scas push stos lea cmpsl lods xchg push (bad) mov adc mov or jne adcb cmp notl loope xchg adc xchg clc (bad) cmp pop test xor (bad) or push pushq mov movabs (bad) sbb mov test sbb out xchg mov (bad) (bad) jmp mov adcb rex.WXB fildll in je add sub icebp xchg mov mov stos movsb xchg cwtl movsl cmp out mov rcrl push lret cli xor push insb pop xchg add pop cmpsb cmp adc mov pushfq sbb push xchg lahf divl sbb rex.WRX addb insl and (bad) stos or mov scas xchg movabs ja movabs xor data16 xchg mov out rex.WRXB cmpsl iret xor xchg jmp hlt cwtl sbb (bad) movhps jg imull outsb mov movsb fcompl sti (bad) jmpq cmp lret enterq (bad) (bad) or cmp sbb movabs mov mov icebp pushq or push pop cltd (bad) rcll sub sahf in sub je outsl sbbb xor fidiv sbb jno xchg push cmp outsl scas fwait cs fcmove hlt xlat sub lods in mull (bad) imul jp cmpsl cmpsb enterq (bad) xor cmp xchg (bad) out mulb (bad) (bad) fs lea rex.XB sti clc movsl mov rex add rex.WRX test andb test movsb xchg fwait add rex.WX xchg loope rex.RX rex.B cmp pushfq repnz testb rex.WR jge (bad) rorl mov push xlat out jmpq pop in stos (bad) rorl (bad) stos scas clc xor xor icebp (bad) mov jp or push rcrb or push cmp mov fwait (bad) enterq adc pcmpeqb mov pop rex mov jns mov mov mov testb movabs cmp mov mov cmp xchg (bad) mov xchg outsl movsb (bad) adc rolb pop stc gs and (bad) lock xlat cwtl retq (bad) sub mov ds rex.XB imul fnstcw sahf cmpsb rex.RXB sbb mov cmp pushfq rcrb rex movabs adc jrcxz xlat int3 (bad) (bad) or fs insl rex.WR xchg ficomp xchg (bad) cmpsb cmp movabs cmpsl push mov and adc xchg xchg stos test jo push xchg rorl jno pop out mov cmc xchg xchg popq xchg pushq xchg int xchg in fs mov rclb xchg sub adc je lahf push cmpl xor mov xchg push sbb adc adc or fcmovbe xchg cmp and (bad) push xor scas mov mov lea lock fwait xor fimul fist (bad) fnstenv rex adc movsb fwait sbb movslq adc push jnp adc leaveq add or xchg jg mov fiadd in mov (bad) jmp scas test movabs jno cmpsl cs stos add sbb mov or stos movabs xchg (bad) sub adcl sahf out hlt retq xchg cmc cmp jrcxz xor xchg and (bad) jl cmpsb jmp xchg in jno mov or and cmp rex.R lods rex.WR loope rex push sub es in decl xor cwtl movsl (bad) xchg sbb loope jno jg pushq adc lods cmp mov jmp push movabs fsubs test mov rcrl and jmp or loope lret (bad) (bad) jg jns mov rex.WXB rcll andl (bad) (bad) addr32 jo sub (bad) stos (bad) clc cmc fmuls xchg xchg (bad) lret out jg out (bad) mov (bad) rex.WXB mov (bad) scas retq cmpb xchg sub sub rex fwait xor (bad) (bad) (bad) lods adc xor (bad) sub rex.WRXB fwait (bad) xor add loopne fsubs (bad) xor xchg jrcxz jne popfq mov rex.WRXB sbb (bad) stos stos outsl rex.WRB pop test loope and adc jnp fwait push jrcxz notl movslq not movsb test rex.WRXB xchg mov mov wbinvd push or pop lea cmpsb lahf rex.WRB rex.RXB sub sar (bad) pop add mov sbb ss movabs adc rex.X rex.B xchg adc jmp xor xchg sbb sahf (bad) pop (bad) jno icebp int3 sbb movsb rex.WRB mov (bad) outsl push rex lea fiadd sbb sbb int3 adc (bad) cwtl (bad) movabs xchg test test mov test pushfq xchg xchg callq out and fimul push xor and mov mov outsl fsubs ja push sub movabs xchg rorb jo pushfq in rex.WX lock push (bad) (bad) stos xchg pop retq cmpsb pushq rex.WXB sub jg in jge movslq int loop jb cs mov jmp sub mov xchg pmaddwd mov mov jbe adc rex.W addr32 xchg jg (bad) pcmpgtb (bad) ja rex.WX mov adc data16 (bad) xchg mov callq mov mov subl (bad) ss or fdiv fimul adc shll jns retq (bad) lea xchg xchg xchg test rex.WRX rex.R sub pop rex.X (bad) js leaveq rex.WB push rex.WRXB fist push (bad) mov mull (bad) jno xlat mov mov rex.WX gs xchg callq and cmp pop add rex.X js mov (bad) ja sub sub pop push mov xor (bad) lea sub and pxor (bad) scas rex mov sbb (bad) mov or (bad) (bad) sbb cmp movsl fadds stc outsl lret cmp cmc and cwtl outsl (bad) xchg adc (bad) sub sarl (bad) xchg rex xlat rex.RXB rex.WX rex.WRX rex.WRXB sub pop sahf outsl adc pop (bad) (bad) pop pop stos push adc fwait (bad) out xlat add mov movabs movslq jmp imul lods rex.X (bad) je jb popfq stos rcll int test leaveq lret cmc mov je (bad) add xchg and jne loope mov pushfq (bad) and out rex.XB push scas mov (bad) je xchg or xchg xchg stos add repz mov in and jmpq xchg loope and mov jo jns,pt sti xchg movabs pop stos fstp push in mov mov (bad) jg cmpsb cmp mov loope or cmp jbe or repnz cld test in rex.RXB callq cmpsl (bad) (bad) loopne cmp (bad) add sub data16 rex.XB lret mov pop push xchg and push cmpsl pushfq (bad) push adc xor (bad) fwait adc and (bad) pop scas xor xchg movabs fwait in (bad) adc cmpsb movsl out jmp (bad) mov scas xor mov test xchg icebp push (bad) (bad) fs cltd addl and data16 movabs insb hlt (bad) loop ja sub repnz jp or adc xchg negb int3 retq xchg mov mov popfq out neg or xchg hlt retq (bad) mov xchg shl push repz (bad) fsubrl adc sub stc lock cltd repnz movabs ss rex.WRX and mov rex.W rex.WXB cs jge sbb lea push mov enterq xchg jne mov lahf movabs sbb imul mov (bad) xchg cld outsb lock rex.WRXB xor xchg mov mov or (bad) je ja movabs lcall test (bad) and mov add adc pop (bad) push xlat movsb jrcxz nop adc jle scas push stos xchg scas xchg imul and sub retq mov fmuls mov pop fsubrl mov test xchg mov mov xchg jge sub js mov xchg xchg sub or scas adcl push fwait (bad) cli mov cs jl xchg (bad) push jle mov sbb mov xchg clc cmp (bad) jl adc sub fsubrp movabs adc xchg pop enterq cmpsb xchg (bad) callq (bad) xchg sbb pop rex pushq cmp addr32 mov pop rex.WX xchg faddp leaveq pop xor cmp movsl (bad) movabs xchg fstl mov out cmpsb rex.WRB notl and (bad) mov add rex.WRXB insb in xchg lea cmpsl jmpq and ja gs nop mov adc rex.RB add adc fistpll lea (bad) mov or and retq rex.WRX cmc cmc (bad) rorb fimull xor gs je mov (bad) int xchg sub popfq (bad) in rex.WX push (bad) jnp sub cmpsl and scas out je in rex.B sub (bad) stos fldl je and (bad) push mov (bad) xlat stc rex.WX pop (bad) adc int xchg pushfq clc rex.WRB jg xlat sub sub (bad) pushq jrcxz (bad) cmp mov sbb stc outsb sbbl mov pushfq data16 (bad) mov rex.W adc sbb jno sub and (bad) sbb popfq sahf (bad) add jae rcrb (bad) mov rorb lea fdivl xchg (bad) cltd es jmpq lret mov rex.WB test xchg jl jb (bad) mov pushq jge lret mov movabs rex.RX popfq jp,pt cmp xor prefetch out (bad) rex.W mov lods cltd pushq (bad) repz xchg sti sub rex.W xor sub outsb (bad) test clc xor mov fisttpl cmp push decb add and add jrcxz lea (bad) sbb (bad) push sbb enterq jbe addr32 add sub or add rex.XB imull push cmpsb add movabs (bad) je and cmovns (bad) pop cmpsb (bad) (bad) sahf cwtl cmpsb lods mov test and (bad) mov imull cmp mov je nop stc add sub iret (bad) fidivl mov clc mov loopne xchg jle and orl addr32 fisttpll ja pushfq mov (bad) push lret or xchg xlat pop push cmp adc sub mov cmp xchg cmp mov xchg test sbb fistpll xor pop test xchg sahf test xchg gs pop (bad) (bad) repnz push rex.WRB mov mov xchg in sbb sub pop xchg (bad) pushq data16 xchg ja mov push test divl mov callq std sbb in (bad) xchg (bad) (bad) rex.R addr32 pop push and and xchg (bad) or xor pop fcomp out sbb sbb ja movabs rex.WRXB (bad) jne sub adc sub xor jns jae (bad) push mov rex in cmpl cmp jp mov mov sahf rex.RX outsb (bad) add (bad) xor out mov stos lret sbbl (bad) adc test sahf rex.X mov outsl jne jnp xchg mov or std pushq jmp mov xchg mov loop sub xchg rcl pushfq es mov xor push out in sahf sub jle (bad) addr32 imul jae xor or div out mov insb fildl in rex.X xchg sahf loope (bad) movsb xchg andb pushq xchg xor test or mov pop adc add rex.RXB rex.X jge and mov add xchg mov callq mov cmp adc jo retq (bad) mov insl mov push in jmp jns pop (bad) push fidivl xchg and enterq loope iret (bad) (bad) pushfq lahf out add rex.WB xchg stos mov jp xchg pminsw rex.R es std ds iret mov pop (bad) mov test icebp movabs xchg pop lret xchg mov push out in mov cmpsl cmp rex.RXB movabs sbb (bad) insl scas rex.WX (bad) xchg xchg mov xchg mov jb mov lahf rex.WXB xchg sub scas out jae insl ds jg push mov xchg outsl lock push cmp sbb mov sahf xor push push movsb mov or jrcxz xchg loope mov out imul xchg rex.WB (bad) jno adc fidivrl mov cmp rex.RXB cmp xchg rex.WX in stos jno in data16 pop mov (bad) rex.WXB gs xor rex.WR sub movsb (bad) gs sub in (bad) retq (bad) push data16 (bad) or fwait cmpsb push add xor mov mov (bad) jg xor jrcxz popq vmovups cmp jae out stc jp rex (bad) insl fwait xchg (bad) popfq repnz movslq stos out xchg int3 retq negb mov mov rex.WRXB movabs jle js rex.WXB loopne sbb retq (bad) fildll mov movabs scas cmpl jle callq xchg jp out pop rex.WR loop icebp or xchg lret and stos mov jmpq mov xor ds rex.B fnsave popfq out xchg (bad) decl cmpl iret mov sbb (bad) or (bad) adc (bad) or jbe fsts gs sbb in addb (bad) jb lea imul mov int (bad) repz rex.W push faddl xlat adc mov mov (bad) andl pushq movslq mov and loope xor icebp (bad) insb xchg outsb adc repnz push outsl xchg mov push cmp mov sbb test (bad) xchg rex rcl insl adc retq fs (bad) and lea pop (bad) stos sbb (bad) rex.WR jnp mov ficomp xchg rex.WB and notl rex.X or fwait cmp pop cld in cmpsb push (bad) pop (bad) mov scas (bad) imul pop jbe mov mov pfacc pop sbb jae (bad) lods (bad) and xchg cmp add fdiv mov adc xor sub imul leaveq mov or (bad) sub xchg sarl adc or (bad) (bad) (bad) imul leaveq add adc xor adc callq in jns mov and (bad) sub repz jns rcrb add insw adcl (bad) movsl outsb cltd (bad) jg (bad) movsl pop pop fs mov (bad) (bad) test jmp mov lea jp (bad) xchg sbb (bad) cmp push xlat push xor jne test xor push rex rex.WRB rex.WRX insb mov cmp (bad) cld movslq cli xor out popfq push cmp fdecstp flds or mov rex.X xlat (bad) and rex.X cmp imul xor xchg mov cmp pop cmp (bad) sbb out (bad) scas mov outsb mov (bad) lods (bad) (bad) sbb jrcxz fdivs push (bad) imul std loopne add leaveq (bad) mov jmp cs jbe imul jge xchg cmp (bad) jne mov (bad) push mov (bad) jle mov rex.XB xor xor mov pushq jb add or sub (bad) outsl stc fwait loopne mov xor popfq rex.WRX (bad) mov or movabs rex.XB movabs push mov sbbl push jp (bad) (bad) (bad) pop sbb rcrb iret (bad) mov mov (bad) sahf push pop incl in mov insl or movabs add (bad) je mov cmpsl adc xchg xchg xor cmp jle test movsb (bad) (bad) mov sbb xlat and pushq (bad) retq nop xchg jb sbbb cmp or cmc push (bad) (bad) cmp scas xchg sbb insl mov mov jbe pushq test push adc (bad) test rex.WRXB cmpsl xor out int push xchg xor (bad) jmpq xchg je xchg imul pushfq jae pop xor jmpq add (bad) out ja rex.X and cmpsb add jp add pop loopne xchg xor cmp sbb (bad) or repz (bad) sbb (bad) (bad) mov mov rex.WRXB stc fisubr rex.W (bad) (bad) out enterq (bad) pop jg pushq jle mov and test sub (bad) lcall mov cmp rex.X rex.WB xchg jnp (bad) loope insl adc xor pop xchg movabs insb sahf (bad) mov pop mov fsts lret mov movabs rex.WRXB fmull in mov (bad) rex.B rex.WRB jp (bad) rclb adc add scas push rex.RB jbe fstpt sbb xor (bad) and fmuls mov cs rex jg rex.R add mov jmpq (bad) icebp lock (bad) scas (bad) mov xchg mov sub loop fidivr mov (bad) std movabs sub rex.WRB retq jmpq pop (bad) in lahf xor (bad) pop pop adc loopne push mov shrl jne pop jge xchg lock sub pop imul fiaddl mov lods and xor cmc cmpsl xor jnp cli xchg cwtl (bad) loopne in mov in test (bad) movhps ja imul xor fsub rex.W adc in mov iret (bad) adc rex (bad) (bad) imul mov adc xor rex.WRB (bad) (bad) scas out (bad) xor mov xchg add xlat clc mov outsl cld movsb (bad) sbb rcrb sbb xchg adc rex.WX pmaxsw (bad) fildl xchg in mov movabs pop mov imul (bad) cmp push in outsb cmp xchg rex.WXB rex.W jl imul sub movsl cmp pop fldcw enterq pop jge (bad) nop and addr32 xchg test xchg jge or add nop sub xchg pop rex.WRXB xchg lea push sub xchg add (bad) mov jbe retq sbb mov rex.B insb (bad) pop pop mov sahf ds addr32 sbb scas rex.XB loope (bad) shlb pop rcl xor subb pushq popfw (bad) add cmpsl int3 movabs mov adc and mov (bad) xlat mov sbb xchg test shrl fldenv xchg js jbe rex.WRXB int or mov scas pop (bad) xchg mov (bad) push mov lods test test faddl rex.RXB int xchg jne rex.WRX test (bad) shlb movsl jp (bad) int adc lock sub rex.R mov insb sbb xchg push adc and (bad) rcll fstl xchg jmp lahf mov cmpsl add sub loopne xchg (bad) or fisttp ss xchg rex.W rolb sub cwtl mov (bad) std (bad) xchg (bad) in xchg jmp sub xchg movabs mov negl out jno mov out pop sbb jp cltd cli enterq fwait sub pop fsub jg xchg push sub mov mov fdivp mov pop addr32 jl (bad) mov cmp pop sub jnp xchg and xchg andl test es pushq pushfq jl mov rorl (bad) (bad) xchg adc rex.W jge cwtl cmp add jp data16 (bad) insl out loope imul xchg xchg rcr outsb (bad) xlat mov (bad) rex.B push int sub pop movsl mull cwtl lods mov adc sub rex.X mov xchg and or (bad) rex.WB fistl (bad) ds xchg xchg bnd cmp (bad) rex.RX addr32 mov push cmp movslq test test scas (bad) repnz cmp mov std nop add movsb xchg xchg cmp stos (bad) sub xchg lea pop jle sbb (bad) enterq fisubl lods cli rex.XB xor (bad) addr32 ja pop add xchg stc pop cltd mov callq push xchg sti xchg (bad) pop (bad) jl (bad) out (bad) lock sub mov cmp pop xchg push jmpq and xchg sub mov (bad) rex.XB cmc xchg out sbb push cmpsl or pushfq (bad) jge btc rex.RXB (bad) stos xchg (bad) movsb int push or (bad) xchg rex.RX in mov pop mov xchg je jns and mov scas rcr nop js hlt fdivs xchg sti xchg xor std lret jbe jg xchg (bad) in cmp ss xchg loop leaveq cmp pop xchg pushfq xchg in xor rex.B fs xchg sbbb rex pushfq ds push adc negb callq cld pushq jp (bad) xchg in out (bad) (bad) nop jle and mov idivb xchg (bad) movabs (bad) (bad) mov (bad) xchg jp (bad) push cwtl std out je and fisttpll pop loop add or (bad) (bad) jno mov xchg in fwait pushq adc cmpsb pop ljmp and sub sbb adc push xlat idiv cmp jae xchg sub and jbe ds (bad) cli jo lret and js add outsl (bad) adc mov iret (bad) (bad) sub sti pop out (bad) enterq cwtl sbb movabs mov shll out movslq cwtl fistpll (bad) pop (bad) xchg sbb mov (bad) sti sbb mov xchg xor jp xchg pop pop lret xchg (bad) sub hlt clc (bad) mov rex.WX int3 mov std xchg jns out mov out (bad) fisubl or movsb rex.X adc imul stos lret xchg xchg mov rex.WRX fwait pop xchg mov adc outsb jns xchg cmp sub (bad) (bad) jl (bad) test (bad) rex.WR loop pushq shl (bad) jno stos fstl int cld out rex.WX out insl (bad) enterq cltd jno mov xor xchg jns adc adc test pop and pop and jae or leaveq loopel jo loop movabs adc xchg (bad) (bad) adc or xor imul mov loopne cmp sahf (bad) sub jo mov add xor lods and int3 movslq (bad) xchg int test (bad) add rex.WXB iret mov sbb jl mov rex.RXB sbb scas lret nop rcrl xlat pop sub ds fdivs (bad) mov add adcb xchg jg callq and outsl (bad) icebp pop fbld and jae pushfq rex.WXB (bad) adc outsb popfq mov cmc (bad) (bad) movsb popfq js jl mov mov cmp enterq outsb mull insl in stos xchg movsb mov (bad) lret (bad) (bad) mov jmpq cwtl add push mov fsubrs andl (bad) test rcl jle (bad) mov mov xchg pop sbb adc rex.WRXB xchg or and cmp sahf push and add cmp divb es mov gs (bad) mov xor sbb fwait jmp nop cmpsl out (bad) fsubrs ss mov rcrb add mov jl (bad) xor (bad) adcl rcrl (bad) jmpq mov add out pushq popfq xchg cmpsb jg rex.WXB rex.WB xchg rex.WRX xlat or jrcxz andl cmp imul sahf fimull ja mov pop lods xor (bad) (bad) test mov xchg sub lret adc mov out rex.RX rex.WR xchg (bad) (bad) addr32 xchg es xchg roll out pushq (bad) xchg leaveq mov imul xchg push (bad) (bad) (bad) or xchg movabs scas sahf scas rorb (bad) cwtl mov pop xor xchg sbb shl cmp sub (bad) lods mov sbb jl add rclb rex.WXB outsl loopne mov (bad) cmovle cld mov (bad) movabs (bad) jo jo lea lret jo adc lods mov xchg (bad) push xor sbb (bad) lea rex.R push and xor (bad) push addr32 mov or sbb int xchg cltd es push pop xor mov (bad) jg or mov xlat xchg xor jmp sbb out movsb fiadd pop xchg (bad) mov int3 fimull and (bad) faddl cmpsb and or movabs (bad) lods callq divb lret rcrl (bad) loop adc lret cmpsl iret fs xor rex.XB out test pushq (bad) pop pushq ds push jbe adc jne and xor rex.WRX pop imul fimul sbb fwait pushq adc popfq or xor jmp jge,pn callq (bad) imul (bad) sub iret movsb xchg add lods cmpsl mov movabs mov add push sbb xor icebp adc and rorb sbb (bad) or xchg mov xchg mov mov gs lahf int shrb lea (bad) mov adc (bad) adc xor pushfq jmp or mov xchg jle imul (bad) mov mov (bad) loope scas rex.RX repnz imul sub xlat pop loope (bad) (bad) retq stc or outsl movabs adc (bad) gs or je mov (bad) loope or mov xchg xlat adc nop sbb ja add or (bad) clc (bad) xchg mov shlb and mov iret lahf add xchg mov xchg cs push adc (bad) fs movabs in xchg sub enterq (bad) xchg (bad) push (bad) jo cmpsb rex.XB fdivrp test sti push mov sahf (bad) mov out (bad) add (bad) or xchg sahf insb std fcompl or sbb pushfq and fwait ds rex.WRX scas (bad) pop xor out mov (bad) std pop push outsb es movabs rex.RB ja mov rex.WX out xchg (bad) adc jl xor (bad) cmc in cmp pushfq adc loope fdivrl add (bad) fisubrl jb loope notl rex.X fs rex.W mov je xor xchg adcl jmpq add mov add push scas mov fs push xchg cmpsb stos popfq cmp jb loop movabs jp int decl movabs in (bad) jb je mov jge cmp movabs pop jnp rcll and addr32 mov ficompl jg cmpsb mov jo mov (bad) cmpsl loope out cmp rex.WXB (bad) sub lahf rex.W rex.WRX jmpq loop out (bad) mov rex.WRB rex.RB pop add (bad) fsubrl movsb xchg or mov fcmovu out fwait adc (bad) sti nop gs mov mov add rex.WRX mov sub popfq stos mov xlat mov rclb sbb lahf divl rex.XB sbb rex.WRXB push je hlt push cwtl not jno incb push test xchg sbb rex sahf pop je int3 cmp xchg test pushq gs mov mov loop shld sub in rex.R xchg cmpsb mov or fisttpl rex.XB jb,pt (bad) xchg movabs mov cmpsl icebp fcoml rclb xor sahf je stc movsb out xchg pop adc (bad) xchg adc pushfq movsl add add jb push stc cmp cltd cmp sbbb (bad) push sub test mov pop mov and and or xlat movabs pop iret (bad) (bad) mov lret pushfq fwait shl xchg mov and xchg test push sbb mov cs sub sbb cmp (bad) fcoml mov cld xchg mov cmpsl xor (bad) xor scas cmp jmp test adc mov xchg mov imul insl rex.RB mov add movabs pop xor rex.R enterq xor insl mov xchg rex.B sbb negb push (bad) cmp push retq out rex.WB in sub jg (bad) (bad) xchg pushfq out pop cmp push in hlt push rex.WXB and ss (bad) add mov cld adc cltd pushq jrcxz xchg xor cmc std retq and scas decb movslq sub (bad) mov gs sahf mov callq ds mov mov movabs xchg adc push jns imul or rex.WXB push jp pop (bad) and ja movslq pushq mov clc jge xchg rex.W or test adc lsl xchg push mov test rex.WR (bad) push or add jp out orps (bad) movabs leaveq and in push sahf enterq nop rex.B rex.RXB xchg sbb lods sub leaveq xlat rcrb sti jg (bad) mov insb addb (bad) cwtl addr32 push in add cmp cmpsl rex.RXB sub mov cmpsl repnz sahf pop movslq mov jrcxz (bad) sbb push jo adc and jae jge (bad) insb rex.RXB stos pop popfq pop mov (bad) jae (bad) add xor mov xchg push retq jge sahf mov pop out test push rex.WXB xchg (bad) add xor scas cwtl rex.WRXB rex.XB outsb sahf pop mov imul push repnz mov jbe cmpsl fstps xchg cmp (bad) sbbl loope pop addr32 and sahf push movsb out or retq mov xchg shl rex.WXB fnstcw addr32 cltd pushfq mov movabs addr32 jge xchg test rex.B fistpl sbbl or pop cmp jmpq imul mov push scas or mov mov imul (bad) jp pop rex.RB or sub movslq icebp rex.WRX nop sahf or (bad) xlat xor sbb ja or iret mov pop xchg int3 sbb and push decb sbb jmpq (bad) xor subl andl movabs mov jns sahf mov or rex.RX test xor pushfq rcll vmovss addr32 sub cmovl fwait (bad) fisttp mov callq (bad) or jg and mov xchg jnp (bad) cmp (bad) (bad) (bad) (bad) (bad) xchg enterq xor scas cmpsl (bad) add sahf rcr rex.R out push mov xchg je movabs add (bad) jo xchg pop cltd (bad) xor jl mov imul (bad) mov sbb movabs rcll hlt fnstenv mov (bad) mov lret rex.WRXB rcr push xchg ja movabs out ja push cwtl (bad) movsb xchg rolb rex.WB push adc and out mov (bad) imul (bad) mov add adc or in (bad) cltd int3 iret mov xchg mov (bad) subb insl (bad) xlat rex.RX rex.WRB (bad) mov cmpsl jnp fcoml (bad) lock sbb lahf mov jg mov xchg rex.WRX mov in rex.R xor cwtl sbb int jl mov xchg test rex.XB jmp (bad) jb and add adc mov rex.WRB shrb lods repnz ds (bad) jne out lahf int pop xchg movabs (bad) and pop xchg (bad) int rcll lods leaveq (bad) repz test xchg xchg (bad) jns out or xchg pop xchg in repnz adc mov jnp outsb jae mov out movabs (bad) mov (bad) cwtl sbb (bad) xchg pop (bad) sub mov or xchg std jp and sub rex.WRXB jno xchg icebp test push je iret stos (bad) fimul mov movabs movabs xchg and movabs (bad) or movslq push xchg movabs sahf adc fild jno repz mov mov mov (bad) and scas or (bad) out jbe or fist jbe pop imul mov rex.RXB xchg leaveq idivl pop (bad) (bad) (bad) rex.WRB fs mov mov adc rex.WXB mov gs push mov adc xchg rex.B pop cmp and xchg xchg insb rex.X pushq sbb in (bad) popfq mov push xlat jne (bad) pushfq cltd divb mov pop sub mov xchg outsw je (bad) mov xchg adc (bad) (bad) (bad) scas lret retq paddq outsl rex.RB loop pop xor notb and leaveq mov jno sbb ss xchg rex.W xchg mov push in sub lret cwtl sahf xor (bad) or pop xchg stc repz sub imul xchg cmpsb cmp pop movabs mov push repnz rcl jno push cmp jbe mov rex.R (bad) push (bad) (bad) rex.RXB clc (bad) cmc xchg sahf rorl lahf rex.WB es popfq sahf (bad) out and push callq xor in xchg std clc rex.RXB scas pop jl (bad) jmp adc mov cmp (bad) xorps push pop jbe xlat (bad) fidivl xchg clc clc and jrcxz sti xchg lock pushfq cmp and sbb and sar sbb (bad) mov pop or rex.X fist (bad) mov mov (bad) (bad) pop cld mov (bad) jns sub scas adc pushq leaveq movsl (bad) fisttpl cmp (bad) (bad) sub jb mov js cmpsb xor (bad) rex.WRB and and mov sarl mov (bad) movsl pushq (bad) adc cmpsb sbb rclb add rex.WB adc adc rcrl (bad) loop lock adc jrcxz pushq jnp (bad) push fisub (bad) and mov (bad) out cli mov cmp and cmp popfq mov push rolb rex.B int pop lock xchg int cmp jne (bad) gs pushfq movabs int mov pop mov (bad) movl jge outsb rex.WR repnz xor push xchg data16 stc xchg and pop (bad) cmp mov fbstp sub xor sub es mov add sbb mov ja add cld movabs mov rex.XB imul mov xor xchg sahf imul (bad) fs xchg xchg (bad) (bad) movabs stos pop imul outsl lock ja rcll push jbe,pn xor in rex.WXB xchg cli cmp adc test shlb add retq std clc jnp add pop pushfq cmpb nop adc sub and pop repz (bad) (bad) (bad) jmp rcrl and (bad) and retq cld nop adc (bad) mov cmpsl cli (bad) mov (bad) pop ss pop movabs ljmp movabs retq mov mov cli movabs xchg pop (bad) mov mov or int cmp add int3 gs mov xor insb (bad) mov (bad) (bad) mov rex.WRX lret cmp or (bad) (bad) loope cmp push ss cld xlat rcrl lret xor add outsl add (bad) retq adc (bad) adc (bad) mov (bad) scas je shlb (bad) test jne movsl cwtl nop lret leaveq (bad) mov sbb lods cld xchg (bad) not or mov outsl in (bad) gs add scas xchg stos insb movabs jb adc pushq and (bad) cmp fdivrp (bad) pushfq and jl sbb je add enterq push (bad) rclb and rex.WB stc mov (bad) pop frstor pushq (bad) push (bad) xor xor xchg xchg or rex.XB xor sbb popfq pushfq lea in and pushq xor loope (bad) and imul xlat add fdivr (bad) cmpsl mov mov add jno retq jg adc movsb mov and in adc (bad) (bad) (bad) (bad) jmpq cwtl and sub pushfq (bad) fwait adc cmp (bad) fiadd sub lods or rcrb jl add sets mov and xchg and rex.RX movslq xchg imul xchg in rex.X (bad) pushfq add stc fs mov (bad) jno mov sbb mov (bad) mov (bad) hlt xchg test fidivrl sub mov jmpq jge add sub push js rex.WR imul mov xchg jae sub lods hlt ljmp movsb repz xchg lock (bad) in and xchg add shr mov (bad) rex.RB (bad) add pop cmp push push nop adc insl and fisubr (bad) cld mov fs data16 ss cmp (bad) (bad) jge pop shrl jge xchg xchg mov fistpl cmp sub sar out cltd xchg cwtl fist sub (bad) (bad) (bad) movabs (bad) addr32 add jg push ja xchg cmp cltd (bad) (bad) jmpq jns mov cmp rex.XB or adc mov xchg and (bad) (bad) jne push jrcxz cmpsl (bad) mov imul gs (bad) rolb push test rex.XB cwtl cmp fs pop cmp cli pop cltd mov (bad) je cmp xchg test (bad) mov xchg test mov (bad) xchg enterq pop repz cld xchg rex.XB sub mov (bad) add jae iret movsl jmp pop add loop push jmp xor xchg (bad) push (bad) scas xchg rex.WX repz movabs sub cmp stc mov out mov xchg fisttp jae xchg sub add pushfq mov ja lret data16 in xchg ja (bad) or rex.WRX decb (bad) (bad) repz lea imul add mov lret adc test fidiv push or je gs mov (bad) mov lods xchg cmp rex.WRXB (bad) test mov fs (bad) shl sub mov and mov es orl and in shrd mov rex.WX in and push pop fimul (bad) addr32 pop xchg (bad) jg mov push sbb sbb pop mov mov (bad) mull adc sub imul add xchg (bad) lea or push (bad) fwait sub pop jl insb adc outsl gs sbb rex.X xchg (bad) xor xchg stc and orl repnz push (bad) ss pop (bad) mov rex cmp mov imul movslq pushq movslq pop pop int movabs notl jmpq pop (bad) nop and addr32 outsb (bad) xchg mov repnz mov jge mov sahf add pushq and stos adc (bad) ficoml sub (bad) mov callq push stc idivb add imull ror and iret (bad) add pushq cmp pop not mov int sub sub jmp (bad) (bad) mov mov xchg add lea test pop sar xchg cli fsubl jno mov sub sbb jle stos sbb popfq loopne mov jae,pn add subb mov repnz mov iret and sbb idiv push fwait (bad) mov rclb lea (bad) or in mov push (bad) (bad) pop xlat cmc outsl ror mov mov (bad) icebp imul (bad) add sbb movsl test rorl jnp sbb cwtl (bad) pop (bad) std loop pop and cmpsb out sub xchg in imul in mov mov mov xchg adc xchg xor loop (bad) out xchg leaveq (bad) jle rex.XB lea movsb fxam insl jns andl sbb mov sti movabs rex.RB xchg adc imul cs in sub in repz and fwait cwtl push (bad) sub movabs gs (bad) nop sbb sub cmp pop stc enterq lret rcrl xchg xchg cmp pop test rex.WRX negl retq lidt movsb pushfq int3 cmp sub jnp sub or mov jne pop or rex.XB addr32 push (bad) (bad) mov push jmpq rex.XB rex.WR in cs mov hlt lods push mov cmpsb iret and leaveq stc or sbb sub mov fisubrl notl mov (bad) add xor rex.RB nop in push xchg (bad) or pop (bad) rol rolb add mov (bad) cmp scas shll (bad) movabs (bad) sub mov divb rex.WX push rex.WRB outsb rex.XB nop (bad) and lcall popfq xor jbe (bad) cmp leaveq fisub (bad) sbb int jmp insb mov sbb enterq (bad) xor sbb pop fwait std iret sub mov movabs (bad) (bad) repnz insl loopne pushfq sbb rex.RXB addr32 lock (bad) out mov andl nop (bad) (bad) test jge (bad) retq push and hlt or push jl xlat pop jno mov xchg xchg test fdivrs push rex.WRXB movb xchg stos leaveq xor or popfq or js (bad) (bad) xchg in xor jbe jne rcr out (bad) mov xchg mov cmpsl fidiv sbb fistp mov rex.XB sub jg (bad) popfq xchg sbb rex.RXB (bad) cmpsl lea (bad) (bad) jne (bad) rex.WRXB xchg add push xor addr32 pop repnz insl sub jo xchg (bad) jrcxz (bad) std (bad) sbb xchg xchg push fstpt mov outsb xchg mov sbb (bad) pop (bad) xchg xchg xchg (bad) movsl and or in xchg enterq loop rex.WRXB repnz (bad) mov (bad) stos mov add mov (bad) fcmovnu mov lea (bad) rex.WRX fcoml clc xchg xchg test jbe or push jnp sbb mov or jrcxz jne mov movabs or mov leaveq mov sbb mov out rex.WRX repz add retq (bad) repnz xchg xlat sub jmp out ss imul sahf jbe sub lahf movabs mov xchg icebp (bad) icebp testb (bad) add jnp or rex.WRX pop shrl cmp (bad) icebp jg mov (bad) mov imul ror xchg (bad) mov jae sub (bad) mov adc pop or gs fmuls xchg (bad) or push rex.RB xchg adc rorl xchg xchg (bad) xor scas rorb outsl xchg fcmovne imul lods and push adcb xchg fcomps jno (bad) jae sub fidivl data16 out mov pop jmp (bad) jge loop movabs rex.WRXB (bad) stos rsm xchg push notl adc lods add movabs jbe adc jno pop movabs xor scas (bad) sbb rclb add pushfq rex.WRB hlt jg ja ficom xchg rex.RXB sbb xor clc mov loope pop sahf pushfq mov stos adc (bad) loopne (bad) movabs (bad) mov sub sbb adc imull mov jge cmpsl cltd pop (bad) cmp jbe xchg mov scas jmp and mov cmp xlat ja outsl setb jae cmc movabs mov sti jrcxz adc mov sahf cmp stc test cmp test xchg leaveq rex.WX int mov (bad) movabs scas mov adcb addr32 push ss rex.X jo (bad) xchg xchg ja add push mov cmp push mov sbb push notl in add cmpsb retq outsb add (bad) (bad) xchg cmp push movabs cmp xchg notb add fdivrs xchg decb xchg pop rex.XB rex.RX pop es rex.WXB add sahf scas (bad) fidivl sub out (bad) mov movslq sub lods scas es and testl xchg mov subb and (bad) ja push sub xchg rex.RB adc test jmp jno lods xchg stos (bad) mov sahf int rex.WB xor sub cwtl addr32 cltd (bad) jb push fistpll mov jg (bad) pop cmpsb push (bad) xchg ficompl xor cltd out jnp jae xchg jb (bad) rex.RXB fidivl (bad) add rex.WRB jle jns out add ficomp xchg sub mov rex.WXB addr32 (bad) scas push rolb mov outsl jnp mov popfq xor jl test pushfq sub rex.RXB xchg std outsl or rex.WRB stc xchg mov cmpsl jle pushfq xchg or pushfq or (bad) insl fwait rex.RXB (bad) adc sbb adc rex ds sahf (bad) test xor rex.RX xlat pop jmpq (bad) (bad) insb pop ficoml (bad) pushq rex.RB xor (bad) rex.WR (bad) mov mov sbb rex.RXB jmp (bad) (bad) fistpll rex.WB jno (bad) (bad) xchg out and or xlat lret pop (bad) xchg or sub mov (bad) addr32 xchg (bad) xor movabs (bad) cmpsb (bad) xchg jno imul lea add rex.WXB xchg sti xor (bad) mov xchg jl jg sub fcoms pop addr32 push xchg orl popfq xchg fidivl in out fwait in mov in jnp imul stos push (bad) pop adc add cmp xchg xchg (bad) in fcmovb fistpl lods insb cmpsl cmp adc sarl sbb sub stc xchg pushfq fcmove in es addr32 movabs push repnz sahf rex.WRX roll xor pop movslq rex.WB rex.WRB ss mov sarb pinsrw data16 (bad) outsl decl mov xlat rex.X xchg std mov addl je adcb in (bad) jnp repnz xchg rex.WX and mov lods cli sub mov or mov cli xchg sbb insb shr jmpq push jo cs outsl leaveq xchg (bad) repnz jl loope xchg xchg xchg mov or frstor jl xlat mov xchg iret fwait ja fsub pop adc sub jp fisttpl jnp popfq and int3 xchg mov sub mov (bad) (bad) cmp (bad) (bad) (bad) xchg rex.WRXB (bad) xor cmpsl hlt (bad) mov adc popfq ficoml lea pcmpeqb pushq sub jge cmp jle test rex push rex.RX sahf jns cmp xlat pop (bad) mov test rol stos xchg out cmp xchg push xchg (bad) divl rex.WB lods pushfq retq pushq xchg fs add jbe,pn add push sub and pop sub cmp cwtl mov seta mov xchg sbb cld testb sub sub xchg enterq out mov jmp jbe clc push jle js xchg and push nop incl cltd xchg scas mov loop stc jns pushfq adc cmp mov shll or (bad) xchg hlt out sets xchg or jae fwait (bad) imul cltd (bad) mov (bad) jbe fimull ss mov addr32 (bad) adc mov adc jrcxz movslq mov cmp (bad) or cwtl jnp in (bad) ja sub movsl (bad) pushq es fwait movabs jae cs (bad) rex.RXB xor (bad) mov jb test movzwl xchg cmpl pop xor mov jne (bad) mov mov movabs (bad) popfq adc xchg cwtl nop lahf movslq test mov jge xchg cwtl movsb ds scas cltd xchg xor mov iret sahf rorb pop pop and leaveq or int3 iret out (bad) cltd mov sarl (bad) mov iret xchg adc stos (bad) (bad) (bad) imul (bad) (bad) jrcxz and gs lods xchg repnz sarb sub xchg movsb add jo rex.X popfq out test rex.R pop and and rcll jle and jp xchg pushq xchg sbb test cmp xchg and xchg pop lock mov std xchg (bad) mov (bad) lea (bad) xchg callq rex.RX xchg xchg lods fwait scas addb and lret xor lret add mov mov add xor mov insb jmpq cmpsl lret nop sbb roll test jns or (bad) add (bad) (bad) rex.X rex.X imul hlt cltd retq ja ljmp (bad) (bad) mov jmp fldt iret outsl cltd jle (bad) xchg and sbb (bad) pop mov (bad) (bad) pushq and rcll lea jbe adc hlt jmp stos rex.X out jle cmp sbb in sub in je sbb jns or pushfq mov or adc cltd (bad) mov rex.W nop negl ds pop and cltd rex.WRB (bad) movsb pop cmpsl xchg pop adc jg mov (bad) lret adc cli outsb cltd icebp jmpq mov rex.WXB rex.XB (bad) nop (bad) test pushfq sub scas rex.WRXB (bad) xchg imul rex.WRX movaps movsl lock lods push retq movabs pop outsb rcll cmp cltd cltd xor fsubrl rex.WXB xchg repz lock and mov test sub mov movabs movabs callq movsl adc add shl jae push test ficoml popfq insl and adc pushq jns in pop or xchg sahf fldt loop cmp rex.WRXB cmp sub xor and fstpt pushfq pushq movslq jge pop in jmp addr32 sub retq (bad) pop jmpq movslq out cmpsb (bad) pop fnclex cwtl push (bad) movabs (bad) adc (bad) mov movsb (bad) push rex.WRX mov popfq subl fmull pushfq (bad) (bad) adc addr32 sub adc xchg sbb and movsb xchg rex.WX cwtl rorl xor test (bad) stos in movabs sbb pop jb jo pop pushfq xchg scas adc rex.WRB (bad) xor mov cmp jnp jns movabs adc fcoml cmp xchg pop nop div out push rex.X and lahf test cltd jne rex.RX in and jb out in and jmp retq xchg (bad) or xlat (bad) xor cmp xchg jb fsubr fstps add (bad) rex.WRB or (bad) clc mov push xchg scas (bad) xchg in jmp movabs outsl shr xchg push adc (bad) cltd callq mov roll xor (bad) (bad) mov (bad) hlt jno mov subb pushfq clc rex.WX xorb hlt jnp pushfq popfq push enterq xchg fmuls out fldt lahf mov jmpq jg mov add xchg mov adc cli push and (bad) scas scas (bad) lret mov imul cld out sub (bad) push mov (bad) popfq rex imul mov sahf push jl cmp movsb xor mov xchg scas (bad) hlt sti (bad) rex.RB rex.XB jno lods test imul movsl adc jbe jl adc (bad) pop adc pop loope cltd out (bad) mov cmpsb xchg or adc mov (bad) data16 sbb rex.RX pop mov fwait lods pushfq (bad) or faddl je shr pop (bad) enterq jrcxz test icebp xchg xchg fwait add retq mov push pushq fsubrs (bad) sub lock pop adc sti sbb loopne nop insb ds lret rex.RXB xor sub xchg rex.R gs cwtl (bad) fcoml xchg loope xchg (bad) data16 popfq (bad) cmp rex.WRB rex.RB addb iret int pushq gs stos cltd loopne movabs je add xchg and sbb pushfq pop xor xchg fwait sbb pop xor insb mov xchg sbb ffreep pop jns xchg rex.B jg fmuls repz out (bad) sahf cmp (bad) (bad) jo fcomps xchg in ja jg clc lock pause xchg mov and (bad) push mov addr32 lods xchg sub jns and add (bad) (bad) stc ja xchg or cmp adc (bad) callq sbb (bad) mull or enterq jae pop rex.XB rex.RX mov movslq cmp sbb in adc mov repnz mov sub sbbb (bad) pop rex.WB rex.WX jo (bad) pushq xchg (bad) (bad) jns (bad) rex.X xor (bad) stc movslq jae cmp or iret sbb in cwtl rex.WRX (bad) (bad) xor insl rcll fs jp mov (bad) lock xchg adc mov and movabs mov lods xor fnstsw xchg (bad) (bad) pushfq nop (bad) rex.WRB jae xchg adc in xchg jg nop xchg (bad) xlat pushfq (bad) out add (bad) mov cmp std sahf xchg sbb ja push jno fist mov out movsb xchg (bad) jnp insl rex.RX iret jl out (bad) rorb mov xchg pop (bad) frstor xchg xor iret mov jg cltd xchg out test xor gs xchg sub rex.WR rex (bad) callq lret pop xchg lahf and adc mov pop jmp hlt xchg push dec jns xchg insb add rex.WRB (bad) popfq test shrb divl (bad) pushfq xchg jno mov lods xchg add imul test xchg mov xor adc fcomps lea iret leaveq xchg jmp pop xor nop cltd stc nop out mov xor add jns (bad) push add mov out (bad) sub (bad) mov jnp mov cmpsl mov (bad) mov scas push div jnp rex.X (bad) (bad) stos callq cld (bad) mov or lea insl (bad) (bad) (bad) cmp xlat incb jnp push (bad) (bad) xchg cwtl sbb sub (bad) and in mov and xor divb data16 movsl xchg pminub (bad) jmpq scas jno cs retq or xchg fsubp adc sub rex.R add add test insb push retq stos adc lock flds shlb insl xor mov pushq imul fs xchg mov mull movabs loope cmp push mov cmp pushfq psrld sub jge popq xchg xchg cltd sahf mov rex.XB test shlb sub test mov xor or cmc jbe (bad) mov retq es pop jbe pop mov sub jmp lea scas movabs out js movsb add pop cli scas xchg fwait sub cmpsb test fidiv (bad) int mov outsb (bad) jnp sub add rex.WX stc (bad) pushq clc enterq rex.RXB rex xor rex.X xchg or rex.WR rex mov out outsl xorl rolb jg cmp out mov mov pop movsb xor sub clc jne,pt sti lods leaveq shlb rorl adc jae jno xor xlat movsl add movabs (bad) popfq rex.WRX jns mov (bad) xchg and pop stos (bad) mov (bad) mov mov sbbb (bad) in mov (bad) sbb rex.WRXB xor rclb cmpb (bad) (bad) sub rex.WRX pushq std (bad) (bad) (bad) rex.WR push jno cmp (bad) (bad) cli test adc (bad) and rex.WXB out insl sti (bad) jg rorb mov (bad) or add imul rex.RB fldl lret push movq jb xchg xchg pop imul (bad) mov and packsswb mov (bad) rex.WRB and sahf rex.WB mov cmp or push jae retq add mov xchg xchg adc leaveq rex.XB mov loope (bad) fcompp int3 rex.WB mov gs rex.WR cmpsb xchg pushq mov sahf cmpl popfq sub jbe push pushfq sub movabs xchg mov mov and mov (bad) rex.X (bad) xchg std rex.WX fs or xchg mov test pushq outsl insb rcll jae (bad) rol pushq (bad) and mov add outsl ja scas adc retq xchg rex.WRX sti mov and repnz movabs stos in adc rex.WRX mov fcompl (bad) negl callq mov pop (bad) in cmp (bad) icebp movabs mov in rcll sbb mov jmpq lock (bad) rcr cmpsb lods (bad) sbb (bad) add jo (bad) (bad) xor xchg rex.W rex.WX int nop pushfq (bad) cmp or xorl (bad) cmpsl out xchg enterq (bad) mov xchg int (bad) std jrcxz movabs (bad) cmpsb mov rex.XB mov pushq andl stos cmpsb sub (bad) mov (bad) jmpq lock cmp movsl hlt cs (bad) sbb outsl mov (bad) xchg and cmpsb mov xchg mov rex.WRX std es sbb adc enterq in fldl sub add jge pop add rex.WXB movabs insl (bad) mov seta (bad) pushq mov retq in fs cmpsl or ficoml (bad) xchg cqto cmp gs movabs mov in cli sub (bad) mov cwtl sbbl mov cmp jns (bad) (bad) xchg jp and stos rex.WRXB (bad) pushfq stos sub adc adc out add in out xchg rcrb movslq callq retq movsl cmc insl or xchg mov loope js loop subl xchg lahf or jrcxz xlat mov xchg retq rex.WR rex.RXB fwait jmpq mov pop or out rex.RX icebp xlat nop in cmp scas rex.RXB movslq mov xchg leaveq retq loopne adc in xchg add enterq push repnz xlat hlt xchg or jl (bad) mov xchg cmpsl incb mov int3 test scas xchg cld xchg cmpsb loopne pop movsl jbe sbb mov cmp std (bad) rex.X popfq rex.WR push mov bt xlat rex.WRX rex.RX cmp movabs and js ror rex pop std cmp push sbb mov movsl mov xchg push test and cmp add jmpq xor cmp xchg and jbe add add mov nop lret repz (bad) (bad) or sbb insl or mov jnp xor jge rex.X adcl callq xor (bad) sbb rex.WRX (bad) rex.WRX repnz ficomp xchg sahf gs cmpsb (bad) out adc shl add (bad) insl mov (bad) (bad) xor loope mov es imul retq mov fucomp popfq sub pushfq je xchg or mov insl mov cmp enterq lret mov and in scas sarb xchg adc push add lahf sbb repnz rex.WRXB sub mov (bad) rex.R xchg add movsb sub push movslq push imul callq (bad) fist mov xor or loope repz jg xchg rex.XB sbb std imul cmp out pushfq pop mov push cmp (bad) xchg repnz adc and (bad) xchg jns xor ds adc leaveq xchg jb fcom and notl subl sub mov sbb xor sbb (bad) (bad) xchg (bad) retq (bad) (bad) sub in xchg pop nop sub sbb mov cltd out xchg xchg xchg fcompl jb xchg (bad) jo (bad) retq mov pop add xchg rex.WRB cmp xchg add addr32 xor rex.WRXB xchg jl,pn scas sub shll jge scas (bad) xchg in hlt xchg pop movsb sbb jno leaveq (bad) (bad) and (bad) callq (bad) push sbb jp movabs std push xor sbb neg and sahf xchg repz scas lret sbb or lea add add cld xchg xchg outsl pop mov (bad) mov fsts test rex.WR (bad) adc pop cmovp xchg test rex.XB xchg jno mov sbb and rorl callq stos and adc cmp mov rex.WRXB cmp xchg ds add mov push (bad) sahf imul cwtl (bad) (bad) jnp js (bad) and pop mov clc int3 xchg loopne sub cmpsb (bad) xchg rex.WXB xchg sub outsl fistl data16 cld ror ja rex.RX test jno scas xchg mov mov xor fldenv mov out xchg movabs mov add add push (bad) negl sub or push addr32 mov lock adc rex.WRB add adc mov rex and sahf test (bad) xor xchg scas int movslq jb mov std (bad) movabs push (bad) stos (bad) xorl cwtl rex.RB pop (bad) or sub test (bad) sub pop (bad) pop sti jg nop stos sbb sub rcl jbe retq sbb loopne mov shl shlb fistp insl rcrl scas (bad) outsb or adc push ss decl nop adc (bad) rex.XB in pop sbb jae (bad) xchg (bad) xchg lea ffree jp xchg sub pushq or jae ror jmp mov rex.WR mov add lods std cmc xchg and in popfq sub pushfq mov leaveq adc stc (bad) test movsl (bad) retq cmp (bad) adcl fcmovne shrl pop pushq cmc paddw rex.WRX insb adc or adc mov sbb loope stc jg mov (bad) imul nop add movslq rex.WXB data16 mov andl mov push (bad) pop sub rex.RXB adc push mov mov in mov jle enterq stos loop (bad) cmp pop xchg sub rex.RXB xchg rex.W retq int3 mov xlat add (bad) rex.WRXB (bad) mov add ss cld stos xchg movsl mov xor fmuls pop (bad) outsb and rcrl pushq callq sbb (bad) cltd lods int sarl cmp (bad) (bad) add (bad) mov ss xor pop jne (bad) int3 std sti test imul iret rex.RB rex.WX imul data16 imul movsw pop out or sbb rex (bad) pop add push mov adc (bad) adc mov pop addl xchg hlt xchg cmc xchg add loop ja sbb (bad) mov mov lods scas loopne imul rex.WRXB and or loop fdivrl out xchg rex.R (bad) jmp lret cmc (bad) pushfq (bad) pop cmp callq add sub enterq fisub pushq movb cltd xchg repnz xlat fwait mov andb sub adcl (bad) outsl jg (bad) pop insl movabs loopne (bad) rex.RXB mov xchg lahf rclb and jmp sub jne (bad) (bad) rex.WRXB mov cmpsl (bad) ja cwtl xchg cmpl rol cmpsb out outsb (bad) jl (bad) sub (bad) (bad) xchg xor (bad) or out mov xor rex.R pushq lods imul mov je rex.WXB fsincos cmc mov mov (bad) movabs rclb sbb (bad) add xchg in xchg lea movsb (bad) push rex.X (bad) rex.W sub mov rol int (bad) in xchg xchg iret rex.RB ds sbb push rex.WRB fwait cmp push (bad) rclb ds rex.X movabs mov pushq pushfq sbb xlat rex.W popfq pop (bad) sbb push (bad) mov xchg (bad) leaveq rex.XB add (bad) rcr (bad) (bad) xchg add notb (bad) xchg rex.WXB (bad) int3 jnp pop cmpsl movsb retq ja xchg cmpsl lret xor mov jbe xchg stos movabs cmp pop add xchg ds xchg test lret icebp pushfq movabs rolb adc xchg lods jbe sub fldcw scas cmp movsl add movsl divl rex.WRXB in rex.X lahf pop addr32 test xor (bad) xchg pop fldl or push jne or repnz cmp andl lret mov callq (bad) movsb push jo jle xchg out int retq fsubrs xchg mov fisttp xor xor ficompl xchg je mov ja movabs xchg rex.WXB mov jbe movabs mov imul in xchg loop js cmp and lahf (bad) mov cwtl (bad) pop push cmp fisubr jle je sti fwait push or pushfq (bad) xchg pop out retq sarl xchg stos repz mov xchg mov rex.X es rclb rex.WRB (bad) or xchg scas gs cwtl rex.WRXB rex.WX xlat cmp loop nop cmp rex.WXB (bad) or jl lods rex.WRX es (bad) repnz jg push cmp js (bad) xor rex.WR test xchg mov (bad) (bad) sbb (bad) jne xchg outsl rorl sub xchg sub shrb jae mov (bad) and je and out (bad) repz sub xchg pop divl mov xchg xchg and and pop push clc push jle or xchg enterq retq mul adc mov int3 add push lret movabs rex.WR rex.XB and imul sub in add stos cwtl pushq mov fiaddl add ja imul cld jle sub addb mov (bad) mov loopne mov xchg or rex.WR xchg imul jae hlt movsl addl movabs jno jo push ja (bad) jns mov xchg out callq (bad) movabs cmp or and (bad) jbe (bad) shlb (bad) rex.RXB callq leaveq sbb outsl add iret mov xchg add (bad) test mov jb pushq test js sahf sub (bad) in xchg jo jle (bad) jae add sub fidivl push (bad) cmp (bad) jmpq shrb movsb vunpckhps orl sub je jle popfq loop xor sarl jnp adc xchg add imul bnd in xchg xchg (bad) sbb in cmp fldcw std mov mov out outsb xchg rex.RX jns and xor ja xchg sub jbe cmp rcll rex add xchg pushfq sub push (bad) mov cmp test mov xor std rcll and fisub cmp mov popfq leaveq and or xchg (bad) fdivs jg or mov push (bad) rcl adc xor pushq (bad) jmp xchg push sahf fdivl push movabs sbb xor gs xor and (bad) xchg mov rex.WB fcmovne sbb jnp sahf shll (bad) movabs out cmpsb addl test mov ds pushfq jns mov xchg movabs (bad) add mov xchg mov cltd (bad) mov xchg insl cmp outsb (bad) pushfq int stos xlat or adc ja adc out jo (bad) loop cwtl jne jns sub mov xchg movabs cwtl or xor xchg pushq outsb int3 mov (bad) rcrl sbb rex.XB and xchg js stos xor movsb push repnz (bad) retq outsb jne test out xor js mov cmp rex.WX mov sbb jb and rex.RXB data16 (bad) mov in xchg test (bad) cwtl push lahf (bad) xor (bad) imul sub push xchg mov cmpsl add fsubs sbb adc test scas outsl rex.WRX or sub rcrb mov (bad) mov jnp (bad) (bad) movslq imul (bad) (bad) pop jns icebp cmp mov fisub rex.R mov movabs pushq rex.RXB add cmpsl xchg test sbb enterq out pop pushfq idivb add (bad) cmpsb or ss lahf lods (bad) xchg xor (bad) xchg rex.WX adc sub (bad) cmpsb jae scas xchg fimull xor mov pop cmp fimul add rex.WRX cmpsl rex.RX cmp jbe (bad) jnp mov outsb mov xchg lahf pop adc adc xchg out xchg xchg (bad) sbb enterq (bad) movabs mov mov rex.RX ss jmp (bad) sahf adcl (bad) sbb xchg es jl sbb xchg out (bad) movabs movsb icebp fistp (bad) testl mov movabs clc retq rex.RX xor pop gs lods rex.WX lea add test js callq sbbl loope popfq lods scas push (bad) sbb jp rex.R xchg (bad) sub add and loopne sub movabs jmp (bad) cltd addr32 xchg jl stos xchg mov cmpsb out (bad) (bad) rex.B xchg hlt or jae fsts movabs sahf (bad) scas rex.WR cli or (bad) pushfq jp out out jb rex.XB sahf pop cs sub lods rex.WRXB rex.WX (bad) nop mov rex.RX pop jno xchg sbb cmp cmp and cltd xor outsl sbb ds in retq and jb cmp (bad) xchg xchg movabs fs (bad) jmp rex.WB mov stos rex.RX adc (bad) sub (bad) (bad) out sbb sbb cmp idiv test xchg shrl test (bad) push (bad) movslq jne (bad) sbb mov xchg xchg movsl sub pushfq (bad) push stos xchg vmovsd rorl (bad) movabs mov fwait mov (bad) (bad) mov sbb pop idivb add push rex.R insb add (bad) mov callq test roll push (bad) sbb outsl xor (bad) xchg add (bad) stos movslq movabs addl sub rex.WRX adc adc jbe lods rex.RXB pop mov lea xlat push jmp lock (bad) scas rclb mov rex.R pushfq clc int (bad) adc (bad) push rex.WRB iret xchg rex.RX lahf (bad) js in (bad) (bad) jbe cld sti lods sahf rex.W idiv xor rex.WX fwait (bad) cltd std push pop retq mov (bad) push push fs (bad) outsl sub and xchg nop (bad) sbb clc push cli push popfq sahf jge pop out jmp int3 jbe jne xchg mov jo rex.RXB sbb rorb fcoms jne mul (bad) lret add mov jle sbb jbe lahf jg xchg out xchg pushfq lret addr32 sub nop cli test push mov (bad) movb repz cltd rex.WRB and movabs cld sub sub addl fldl jrcxz stc rex.RB fwait lahf xchg (bad) jb sbb fldt loope cmpsb icebp pop xchg cmc out mov mov rex.WRB (bad) jmpq mov icebp adcb es cld pop jb rolb or xchg jrcxz fistl loop in jl sbb (bad) (bad) add fstl lahf mov jae rcr add stc mov (bad) xor gs insl rex.XB es mov cld retq imul mov mov rcrl adc jmpq clc icebp (bad) (bad) push (bad) pop sub mov mov (bad) insb popfq jle nop pop mov out fist cmp mov adc fidivl (bad) and cmp out sub (bad) shr movabs push and mov xchg jle cmp sbb rclb sbb scas rcll rex.WB nop adc rex.RB jle sahf lret out pushfq add enterq adc hlt mov mov xchg (bad) jg pushq mov cld int (bad) rex.WR (bad) cmp xchg rex.RXB and xchg imul push or push push jrcxz lock rcr ja add rex jrcxz (bad) pushq (bad) mov (bad) rex.WRXB (bad) pop lahf or sbb cli push mov add std xchg test ds int3 mov pushfq mov mov retq movabs mov insb or pop mov (bad) pop loope (bad) push frstor or adc or stc loope (bad) test (bad) xchg cmp mov cld cli xchg rex.WXB test and push lods jg cmp lods xchg xchg push and (bad) xor rex.WRXB pushq sti pop callq (bad) jns std jmpq clc std add and fldcw (bad) cmp xchg scas insl hlt ficom (bad) xchg iret popfq or mulps movabs sub pop (bad) rex.X sbb (bad) test rex.XB ds lret push (bad) syscall rex.R mov sub lret cld xchg (bad) and leaveq rcrb popfq (bad) ja lret jg add push stos (bad) in mov popfq fmulp sbb (bad) movabs or (bad) mov rcll mov jo mov loopne cltd lea and loope stos jne movsl and xchg or jmp xchg repz sub (bad) sbb shlb rorb mov gs scas push cmpb xor lods int3 (bad) (bad) mov rex.WRB je mov push pop (bad) neg pop adc sub (bad) shlb mov pop or cmp add add shrl fwait add (bad) lods pushq xchg test sub adc jge cmp (bad) (bad) mov out movsl sub (bad) adc rex.WR cs pushfq fimull jne (bad) jnp test (bad) sti xchg fwait sub xchg adc jl jbe push push xchg rex.WRB in ja pop roll xchg sahf rex.WRX fnsave cwtl sbb fsubl cmpsl cltd and cwtl sti xor or xchg push rorl (bad) (bad) (bad) out mov or mov std mov je (bad) mov pushq jns cmpsl rex.RB rex.WB add push int movsl jrcxz xchg xchg adc push jl (bad) rex.WR imul (bad) adc ss cmp xchg or pushq (bad) sbb nop (bad) add leaveq mov outsl repnz (bad) scas push in rex.X mov xor lret (bad) lahf lea imul or xor xchg and mov (bad) idivb jns push jmp pop (bad) jp (bad) xchg (bad) jl or scas xchg sub adcb or cwtl stos shlb push xchg in ds es popfq sahf add adc mov jb sarb int mov mov adc out sub add cli cmp (bad) rex.WRXB xchg or (bad) nop fidivr jo (bad) cmp mov jne fild (bad) add xlat (bad) retq jmp jl rex.B (bad) hlt mov push xchg rex.RX cwtl add pushfq cld xchg lahf mov cmp in (bad) (bad) rex.RXB cmp (bad) sbb mov (bad) or mov jmp cmp sbb pushq (bad) mov out pop sahf or sbb fwait pop movslq pushfq pop xchg xor rex.WX (bad) outsl jl lods sbb cmpsb xor push pushq jbe movslq lret xorl mov (bad) out out xchg lods jmp xchg cs jo jge jb push cmp (bad) pop leaveq (bad) sahf or mov stos xchg out in pushq (bad) push decb jmpq rolb jne sub fidiv or (bad) xor (bad) mov xchg push mov mov pushfq repnz stos (bad) clc subl (bad) xchg xchg and (bad) nop sahf or jb rex addr32 faddl rex.XB (bad) cltd sbb rex.W mov jno sbb xchg cmpsb jle sub rex.RXB (bad) mov jl shrl rex.RX jle outsl repz xchg scas mov or xlat loop out cmpsl xchg scas jae lock mov sahf ds callq ja xchg sbb add int3 adc xchg jp pop sahf pop mov int lret jae or (bad) cmp cltd js lock sub sahf mov cmp xchg push enterq xchg sub outsl jp push std in lret negl (bad) xor nop xchg cmp scas mov pop jnp jg rex.X and data16 ja (bad) orb (bad) sub pop jmpq cmp (bad) xlat mov rex.WB xchg xchg push notb xchg (bad) (bad) jbe movabs (bad) popfq cli or pushfq rex.B movsl iret mov xchg (bad) pop and and xchg rex.WB sub (bad) loope retq xchg loopne testl rex.W (bad) sahf xlat mov mov ja insb popfq xchg stos jg add and adc sub push xchg and fstps (bad) mov (bad) jge js adc pop xchg xchg rex.XB rex.WXB fcomip movsl sbb (bad) movslq and lcall lods xchg movabs sbb mov xchg jrcxz rex.WRXB imul pop xor sbb in xchg pop rex.R shl cmc movsl pop test xchg pushq fmulp popfq data16 fsubrl fnstcw (bad) (bad) cmp xorl (bad) sub (bad) cmp sbb cwtl cmp sub stos pop (bad) std rorl test mov mov sbb pop adc xchg cmpsl ror xchg mov test in pushfq add pop or jmpq (bad) imul pop add (bad) fistpl and (bad) out mov out xchg fstl pop outsb nop scas test jns in or popfq out jae out mov xchg sub mov mov or xchg mov rex.WXB mov jle xchg fs (bad) fidivr loopne and (bad) pop (bad) testl repnz (bad) mov or pop xchg fcmovnbe mov rex.X rex.R xor xor push rex.W cmp xchg xchg xlat jo out popfq sti adc (bad) repnz xchg xchg imul rex.RB (bad) stc push pushfq roll out jmp add cltd loop (bad) callq ds sub rex.WRB ds pop cmp jrcxz rex.W imul js insb (bad) nop adc and leaveq ds adc rex.WB mov (bad) decl jrcxz xchg (bad) loop int3 enterq and (bad) xor adc adc shrl adc jae pop mov adc pop xchg mov add rex.RB (bad) (bad) hlt data16 stc loop (bad) mov (bad) nop icebp pop in retq or ds (bad) sub jg add mov ss pushfq movsb gs and stos lea subl pushfq cmp xor loope mov mov outsb (bad) adc data16 test pop jbe sub cwtl or xchg (bad) sub nop sbb xchg mov sub rex.WR rex.RX cmp int fisttpll push je pushfq je adc cmp and (bad) mov mul sti outsb movabs mov mov and adc ds jge mov (bad) xchg cs xchg push lahf add rex.X jmp out (bad) out sub cmc jge (bad) adc lret clc rex.WXB or mov xor movabs jo adc (bad) clc std cmp sahf or pop lret out and mov outsb mov imul rex.W retq xchg mov add fwait rex.X rex.WRX (bad) (bad) (bad) cld fs push jmpq (bad) fmuls rex.XB sub mov jp mov loope mov (bad) loopne push and sbbl rex.B rex.WRX (bad) mov sub rolb je xchg mov fldt imul jb iret (bad) cmc add test xchg (bad) mov jae pushq cmpsl mov cmp (bad) and cltd push xor adc sub rex.WRB and gs imul movabs (bad) pushfq xlat ficoml lret xchg cmpsb and mov movabs enterq icebp subl xchg retq jp cwtl mov jmpq rex.WRX and (bad) mov test (bad) add imul popfq mov (bad) sub xchg xchg rex.XB (bad) jb fbld add test sahf (bad) pushq adc rex rex.WX addr32 push xlat (bad) repnz rex.WR cmp dec mov jnp sbb or add mov or rex.RB add (bad) xchg fisub (bad) iret movsl out pushq sbb (bad) push mov pop jne mov xchg cmp mov (bad) adcl (bad) xchg mov lret xchg rex.W rex.WRB fdivp xchg push or sbb mov mov cld rol xchg test or push sahf rex.RX sub rex.WR rex.B rex.XB scas cwtl movsl sbb test je iret jno add push retq push and movsl out rorl xlat loopne lahf xor out (bad) mov cmpsb es pop fcompl sub stos lret jge rcll mov mov (bad) push fs mov std test test pushq (bad) repz cwtl jle xor push jmp ss cmpsb push xchg clc ds icebp xchg pop lret loopne (bad) sbb rex.W subb rex.RB sub insl in shl clc insb (bad) lods outsw negl pop add (bad) sub imul mov jge push xor enterq jg sbb in mov lahf mov or (bad) cltd jmpq push xchg sub mov mov rex.X stos mov (bad) negb push rex cmp mov pushfq insl mov rex.WRXB nop imull movsb push rolb cmp hlt xor stos (bad) xchg rex.W callq in mov mov jle cwtl xchg cli je mov cld repnz mov sbb jle rex.RXB jmpq in xchg cmp (bad) rcll imul insb mov clc (bad) xor xchg outsl movabs pop cmp movabs fdivs movsl jo movabs sub (bad) cli pop leaveq (bad) xchg sub push test stos popfq (bad) in xchg imul (bad) jmp cmp xchg test leaveq sbb test xchg mov mov ss enterq clc jg mov movabs xchg push (bad) rex.RX add stos pop test negl sub imul ss mov xor (bad) pop insb movsb pushfq mov jp and movabs cltd xchg mov pushfq (bad) (bad) in scas xchg xchg and mov xor xchg testl xchg (bad) (bad) test (bad) (bad) jrcxz cwtl jle mov (bad) rex.RB in xchg out scas ficoml (bad) movsb xor test or add rex.WX popfq icebp lea addr32 push xchg out mov iret jp in fisubl mov js imul pop pop (bad) xchg adc mov jg loopne rex.WRXB (bad) nop adc pop movabs nop (bad) fcom rex.RB adcl in xchg mov sbb scas xchg sbb (bad) rex.WR stos (bad) sbb pop xchg jns mov and and ds (bad) rex.WRB ja xchg add (bad) pop pushq fwait (bad) test jo (bad) add (bad) xchg rex.R (bad) and or pop idivw idivb add cmp mov xchg mov rex.WXB mull mov rex.WRB callq mov test xchg sbb (bad) test pushfq and push (bad) data16 scas mov out in cmp mov xchg sbb adc xchg cmp sub lret gs fsts xor (bad) sub xchg sbb mov gs fwait mov (bad) xchg (bad) (bad) ds negb jge sub jnp jl ja clc pop rol (bad) (bad) sbb jg sbb xchg (bad) enterq insb add rex.RX sbb xchg xchg jno (bad) sub jrcxz mov xchg fnstsw sti loop push sbb xchg mov or pushfq add ss (bad) imul mov rex.RXB lea out (bad) fdivrs rex.WRX out shll mov push mov rex.WRB cs gs fwait vpsllq fwait popfw movsb imull rex.RX xchg (bad) scas ds pushfq in push jne xchg or imul out int3 jle mov (bad) out and mov xchg ds jns data16 rolb (bad) rex.WRX add xchg mov jns retq (bad) adcl mov or rex.WX (bad) repz out out xchg shl sbbl xor fsubrs clc repnz mov rex.WRXB pop push mov shrb ss (bad) (bad) and ss addr32 callq jle fistl lea jnp mov es xchg mov in xchg sub adc fbld push es movabs insb adc adc fildll sub jge movabs cltd and cli fidivr cwtl lahf xchg jbe cmpsl rex.B sub or shlb pop mov insl popfq movsb jb (bad) jmp je enterq mov (bad) mov push xchg enterq out data16 rcll sarl xchg test adc movsl scas (bad) mov (bad) or (bad) mov imul mov icebp xchg lea stos xor loope lret ds xlat and (bad) rorl test mov cmp pop add push mov push xchg frstor jae rcrb cmpsb or in mov movsl pop pushq mov jno (bad) lock or pop sbb data16 rex.WRXB gs xlat adc or (bad) outsb mov xchg (bad) xchg mov mov (bad) fs retq (bad) cs rex.W sub cmp sub (bad) outsl xor (bad) jbe ds cmp test jnp (bad) imul int imul fs jle pushq lahf or (bad) xor sub sbb and loopne rex.WB and pushq test (bad) lret adc or iret (bad) mov push push sub movabs mov mov (bad) (bad) jnp (bad) (bad) cmp imul (bad) jne xchg or sub repnz (bad) pop sub push ror jl rex.WRX movsl rex.W rex.B (bad) cmp mov pushq int sbb ds int3 movabs lret sbb andl in (bad) cmp xor xchg jae and xchg lret lahf cmp (bad) (bad) shl mov jmpq jo pop xchg or pop lock cs (bad) iret sahf (bad) add add test ror xor mov rex.WRB rex.WRB pushq mov lahf nop sbb jle movabs (bad) rcrb jle cmp mov xchg test rclb test fcoms (bad) fs (bad) sub (bad) (bad) movsb rcll rex.WRX js adc xchg mov (bad) xorl sub movsl repnz mov pop movslq std clc xor xchg psrlq outsb cmpsl in xchg ja jp loopne mov (bad) (bad) xchg leaveq rolb jnp or lret je mul std rcrl retq fs ja repz (bad) xchg push cld (bad) (bad) fs movsb lock sbb sub mov movsb (bad) push test adc pushfq sbb and test xor addr32 pop (bad) gs in movabs scas pop or push cmpsb out (bad) and pop rex.XB mov (bad) enterq imul cmpsb out xchg sub movabs nop (bad) (bad) (bad) pop push (bad) mov in cmp push loopne jmpq ds rex.WRX push (bad) cmc pushq movabs movabs movsl xchg rex.RX fs and xchg mov or incb jmpq lods insb (bad) mov xchg rex.R (bad) movsl or adc cltd push xor and xchg pushq mov sbb (bad) (bad) nop fwait std lods out jl mov (bad) ja,pn test or in es sahf adc loope rolb xchg (bad) (bad) (bad) fwait push in lods push sahf add pop mov jmp (bad) mov jp (bad) outsl incb add sub out sahf adc fisubl rex.WRXB fsubl test mov pushq sbb addr32 rclb fistp xchg add int jb xchg cmp bt fisubr mov (bad) pushq cwtl and mov jp jnp out xchg cli outsl sbb jl jle cld sub cmp (bad) mov lods movsb (bad) movslq jno rex.XB sahf (bad) in jp and test pop jmpq clc xchg xchg jp mov test mov gs stc (bad) sub movsl jmp rex.X cld or cltd sub lret (bad) movabs sti xor fcoms sub mov sub jge push xchg adc movabs (bad) imul fimull test ficoml xchg xchg shrl mov mov sti (bad) (bad) (bad) (bad) mov add movsb gs ja rol rex.WXB or (bad) ficoml mov cli add stc cwtl mov sbb mov pop rex.WR mov repnz ds sub jge cltd pushfq jl mov stos xchg std rcrl insb push mov xchg cmp and pop rex.WR (bad) int3 pop (bad) (bad) lret fsubr jp and (bad) test xchg lods icebp je (bad) and out or add xor (bad) (bad) retq movsb mov xchg ss mov xchg xor push insb ds rex.WRX popfq push mov (bad) push push jne xchg outsl movslq xchg push movsl xlat callq test jl cmp mov and test jo xchg and or notb push scas sub fs rol and (bad) xchg push and (bad) repz test adc (bad) es (bad) fldcw mov callq xlat mov sarl mov sahf data16 pop (bad) sahf lods enterq fldcw rex.WRXB rex.WRXB int popfq sbb movabs sahf shrb insl pop xchg cli fcmovnu ds adc imul roll sub pop (bad) int je cltd rex.X or adc (bad) adc jne pop gs mov rex.WRB rex.X push cmpsl jnp xor int (bad) xchg cmp and add imul or adcb mov rorl movabs mov rorl nop xchg sti add jnp in sbb xchg cmp and rex.WRB cmp (bad) popq in xor movsl rcll (bad) push (bad) jbe es mov mov xor lock adc or (bad) mov sbb (bad) jge pop mov scas jno adc xchg push rex.WR loope add jnp mov mov rex.WRXB mov ror hlt push add movslq fmuls xor push sbb mov cmp (bad) ds xchg add (bad) retq sahf outsl jg rex.WR rex.WRX push ja xor (bad) rex.R rex.X rex.B add pushfq sbb jle shrl xchg cmp stc ficompl jmpq mov rex.R gs jp out imul movslq (bad) popfq sarl jl pop (bad) or xchg mov push rorb jns xor (bad) sbb (bad) out sbb jbe ficoml clc mov (bad) jge xchg ss stos push cwtl lret cli xchg xchg pop pushq sahf push xor xadd flds addr32 mov rex.XB (bad) nop rex.WX hlt cmpsl lea gs (bad) imul mov callq (bad) mov test push fdivrs pop pop xchg outsb (bad) movabs loope (bad) xor rcl rex.RB clc loop (bad) faddp and sbb jrcxz xchg movsl int3 rex.WR je (bad) mov xchg mov lret pop rex.WB rex.WR (bad) sbb cmpsb mov xchg insb push (bad) rorl sub jbe sbb in movabs nop in mov (bad) ja lret mov movabs test cmp cmpsl movabs cmpsb xchg leaveq cmp outsb (bad) in stos mov sarl sbbb or (bad) (bad) mov mov mov jge lods pop test mov (bad) shrl scas (bad) jne xlat adc jnp cmpsl out (bad) movabs ficompl jg xchg (bad) gs pushfq add xchg movabs cmp xchg cli cmp (bad) js stos mov (bad) out cltd int3 pushfq xchg xor in movsl in sti mov imul (bad) xor cs int3 in rex.W xchg (bad) movslq rcrb (bad) scas adc imul pop mov xchg popfq (bad) lods (bad) adc mov jrcxz cmc (bad) (bad) out int3 fimul push xchg cmp xchg repz sahf ja (bad) (bad) (bad) mov (bad) mov adc (bad) jge mov push push (bad) pop push xchg mov es xchg rex.WR movlps rex.X pop mov callq pop jnp jnp pushfq mov add lods out xchg ja pushq sub fidivr mov icebp mov push xor rex.RXB mov push scas and outsb sti icebp xchg insb sub retq movslq mov xchg pop scas movsb and mov jae push (bad) out push xchg cmp cwtl sti mov rex.WRX cld xchg cmpsb push and xchg and (bad) out movabs adc lods decb cwtl push movabs rex.WR rex or xchg push push insl cwtl sti add push xchg rcrb adc rex.R rcrb jmpq mov (bad) or int nop in out push out lea xchg in rex.X stos sub (bad) rex.WXB or or movabs or and adc add movabs xadd rex.XB enterq jnp (bad) and popfq (bad) rex.WRXB jp or pop xor retq xor xchg and cmp popfq (bad) and xlat add pop (bad) xchg sub enterq fs sbb adc mov jmp add push test mov rex cmpsb mov lock cmp mov lea sbb pop sub stos sbb insb push push rex.RX xchg xchg lret adc pop (bad) (bad) push jbe movabs mov sahf (bad) xchg (bad) rorl pop cmpsl sub js lods sbb cli repnz es (bad) sbb imul and xchg mov jg hlt mov rex.B cmc retq sbb in mov adc (bad) add (bad) (bad) in hlt push rex.WX ds (bad) pop js test (bad) rex.WR sahf (bad) mov insl add mov cmpsb mov pop mov (bad) or rex.RX push sub mov pushq outsb (bad) jne xchg imul ds (bad) xchg jb pop xor (bad) jns clc (bad) outsl (bad) mov es stos data16 add popfq sub or (bad) mov andb rex.WRX (bad) xchg mov (bad) and cmp adc rol vpmulhw rolb sbb fcmovbe xchg (bad) (bad) pop insl pop lret mov movabs rex.WX sahf movabs scas xchg jno stos mov sub jno fisttp pushq or sbb rcl push movabs pop push rex rex.XB jbe es pop (bad) cmc testb ss xchg subl adc rcll rex.WR es rex rex.WXB or js xchg xchg sub pushq xchg data16 mov (bad) mov lret mov sbb (bad) movsl mov rex.WR rex.WRXB push pop xchg std (bad) adcb (bad) imul retq cmp mov (bad) (bad) rex.WR gs sahf cmp pushq jge imul movabs xchg (bad) mov push adc and add rex.R jns jo int3 push jno ficoml sub xchg (bad) and scas push jae adcl jge and lods or cmp movabs sahf (bad) (bad) nop rex.W pop sahf rex.R mov add adc (bad) insl nop sbb pop (bad) xchg pop out jge jl rex.WRXB cmpsb jbe rex.WRX mov mov mov push sbb repz adc (bad) imul movsl adc idiv out loope mov xchg (bad) rex.WXB rex.XB cs xchg xchg sbb scas movabs xor adc movabs xchg cld movabs xlat adc (bad) (bad) fidivrl (bad) popfq xchg push idiv int icebp movabs cs shll ljmp rex.WRXB clc fwait xchg test lahf pop gs loope push xchg cmp jl or cli fistp xchg xchg movsb fdivrs and pushfq xchg sub enterq mov xor cmp push cmp xchg addl sub mov push cli insb callq push cmpsb cmp sub jae vaddsubps jns movsl callq lret out rex.WRX out xor (bad) or imul (bad) fstpt jg mov cmpsb xor test movsl lods sbbl (bad) adc jle test stos pop mov add stos sar push adc xchg xor jmpq cmpsb xchg xor mov (bad) lar vmovdqa cltd and xchg xor lea xchg cltd pop (bad) (bad) rorl xchg rex.WB rex.XB insl (bad) mov xor and add pop xor hlt data16 shrl stos (bad) sub ja mov retq enterq pushfq sub out imul lods sub loopne nop add jo ja test jb scas rex.WRB rex.X jmp jae rcrl cmpsb imul es lods rcrl rex.WX xlat sub (bad) imull and cmpsb jae (bad) or div mov sbb enterq imul movabs xchg xchg pop stos mov (bad) xorl adc in push rolb pop (bad) stos jae popfq mov or pushq sbb ss gs sahf push jb fnsave addr32 cmp pop (bad) jg pmaxub jl (bad) (bad) repz pushfq jmpq subb (bad) scas xchg rex.RX xchg (bad) insb out or mov adc jl xchg int3 cmc rex.WR rcrb gs fmull jmp xchg add cld callq lcall xor mov pop scas ficoml (bad) pushfq (bad) xor xchg or cs out adc mov imulb xor pushfq (bad) xchg (bad) sbb push (bad) cmp rex.WRB cli xchg adc xchg mov cmpsb (bad) sahf insl outsb xchg test cmp cmp mov scas cmp lods ja mov cmpsb jns cli fs (bad) iret movsb rex adc movabs (bad) mov mov cwtl callq mov rex.WRB rex.WXB sbb push mov cmp test nop xor and (bad) xchg imul movabs test push sbb rol (bad) add adc adc (bad) rex.RX outsb outsl jrcxz mov (bad) in sub out movslq (bad) fnstsw (bad) fwait (bad) movzbl xchg rex.WRXB mov cwtl add (bad) stc (bad) callq int3 movabs rex.RB js mov mov xor (bad) mov movabs jae iret cwtl (bad) cmpsb xchg or jl cmp xchg pop and lret add or mov (bad) movabs (bad) xchg rex.RX pop jno pushfq (bad) add (bad) hlt movsb frstpm(287 pushq (bad) int ds out (bad) jbe (bad) mov sbb orl popfq (bad) and (bad) divl pop adc and pop movsl mov data16 cmp clc sbb pushfq fwait in (bad) pushq adc push rolb cli repz adc xor lahf (bad) rex.RX and mov out jp enterq jae insl sahf popfq and or test add cmp (bad) xchg (bad) jg (bad) (bad) (bad) mov xchg rex.RX lretw std and imul or cmpsb jnp (bad) outsl add push jne jl shlb (bad) (bad) push (bad) mov pop jno insb or (bad) ss sub xchg rex.WR pushq leaveq fstpl jle xchg imul pop xchg jbe loope sub ja (bad) (bad) xchg jnp jge lock mulps loope movsl xchg (bad) scas rcr es (bad) (bad) xchg int3 cmp add rorb mov retq neg std mov xchg push push (bad) sub insb pushq rex.XB fisubr jle (bad) lods movsb (bad) sub xor (bad) add or pop je adc push int fiadd adc (bad) insl add push or xor fnsave cs (bad) xchg in rolb nop and sub rex.WX (bad) nop (bad) popfq andb xlat (bad) adc pushq (bad) xchg (bad) xor mov (bad) rcr jge nopl fnop mov movabs pop xchg (bad) enterq mov rex.XB sbb pop (bad) lret test hlt rex.RB xchg out mov or rex.WRB push ss loope loop andl callq mov hlt xor or fldlg2 xchg jg push cmp int3 mov loop and xchg push (bad) cli pushfq clc (bad) fsubl pushq cwtl repz scas fs (bad) (bad) sub xchg xchg rcrb fsubl cmp std xchg (bad) or sbb (bad) lea mov test jge shl cmpl adc mov jmpq (bad) jno ja (bad) and or repnz movsl (bad) xchg movslq lock mov jo sahf retq callq loop ja (bad) sbb fadds (bad) (bad) (bad) addr32 imul pop cmp xchg rex.RXB rex.WX rex.WRXB rex.XB mov (bad) leaveq nop jrcxz xchg add (bad) (bad) lcall fwait int3 jne (bad) (bad) jle notl or (bad) add jrcxz lods xchg xchg xor test pushq cmpsb add pushfq mov movabs push add inc xchg mov mov sub xchg cmp mov lea (bad) mov sbb (bad) lahf sarb ljmp rex repnz fwait jns sahf xor sub jnp and (bad) (bad) (bad) fwait cwtl movabs sbb std lahf xchg jmpq scas add xchg (bad) mov std xchg in rex.WX add (bad) (bad) push pop imul imulb fdivp xchg add cwtl in (bad) xor adc (bad) imul adcl sbb add test gs or xchg (bad) (bad) or cmp mov rex cld rex.W mov (bad) sahf mov rex.WR es (bad) (bad) rex.B sbb (bad) jb scas cs rex.WXB insl movslq (bad) (bad) movsb sahf pushq mov sbb in icebp jmp popfq (bad) xor nop retq xor mov outsl sbb fisttp lahf (bad) jno lret add insb enterq jae or fstpt rex.RXB sbb (bad) xchg rex.RB pop shrl nop cltd movabs mov and add (bad) iret adc push adc loope (bad) add sahf cmp cs (bad) movabs insl out movups mov stc (bad) sbb movabs mov fdivrl and (bad) jrcxz lea pushfq add (bad) add hlt clc xor adc scas orl retq jg stos push xor test (bad) xchg mov sbb pop cltd (bad) jo lret sarl pop cmp mov mov (bad) out mov lods or mov jge xchg (bad) mov shlb stos xchg (bad) loop,pt sub jnp add (bad) out cwtl rex enterq or cmpsb mov (bad) loopne shl fwait loopne cmp outsl adc fs jnp movsl xchg imul sti movabs sarb xor push xor fs nop pop cmp jne (bad) (bad) (bad) push and cli cmpsb rex.RXB jmp bnd (bad) mov (bad) and test (bad) jbe lcall scas mov callq sbb mov mov (bad) (bad) movsl add cmp xchg pop xor notw nop add sub mov or ficom add (bad) sbb rex.WXB movl rex.X rex.RXB callq sub and xor out (bad) sub mov outsb xlat addr32 (bad) sbb lods ds xor adc pop sub cltd xlat negb or sar stc xchg adc jmp and loopne xchg mov sahf lock xchg add (bad) or xchg (bad) push ss (bad) xchg movabs ja mov pop xlat (bad) mov xchg add (bad) xchg xchg xchg push xchg xor push in out xchg mov sbbl xchg insl mov (bad) (bad) rex.WRX fwait icebp push movslq xchg rex.WR jg pop xchg addr32 jbe push clc mov fwait or pop cmp rol jnp (bad) or (bad) sub sahf rex.XB pop mov sbb jl xchg (bad) test insl (bad) outsb pushq (bad) sbb mov movsl xchg xlat out mov ja xor pop or mov xchg and sahf out retq xchg push add leaveq in cwtl rex.WB lock or fistl rex mov xchg (bad) cmpsl xor pop jl (bad) nop out jrcxz mov test adc adc sub ja cltd xchg (bad) idivb mov (bad) popfq and (bad) jmpq jne push xchg and or (bad) mov cmpsb pop ftst test sbb hlt and xchg rex.X es out fcompl xchg mov pop xchg sub and (bad) pushfq cmc jae emms in (bad) (bad) pop in or pop andl (bad) (bad) es out (bad) xchg cmp or cwtl xor (bad) (bad) stos ja xor xchg xchg mov (bad) cld xchg (bad) addr32 rorb (bad) xor fisubl rex.WRX xchg pop add scas in push pop xchg adcl out mov and xchg in rex.XB in pop (bad) xchg retq shr xchg pop or xor mov and jl mov xchg xchg subl mov cmp out outsl xchg sbb int3 nop adcb pop sub pop (bad) xchg stos (bad) fdivp loope xor ss fldt cmp cwtl mov add (bad) fisttpl (bad) add rex.RB (bad) rcl in sahf cmp (bad) lret (bad) xor (bad) cmpsb (bad) pushfq callq push notl repz lret mov (bad) and movabs lea ss int cmp (bad) insl icebp jb mov sub rex.X callq pop out xor (bad) (bad) xchg adc rex.RB cwtl xchg pop mov clc mov mov adc xchg push sub sti rex.WRB movslq fcom add imul xor xor (bad) push xchg repz or cli loopne and (bad) push sub xlat stos add lea xchg fcompl push pushq imul movsb roll stos cmp and test (bad) stos jrcxz push sbb out push movslq pop (bad) cmp jnp test movb mov or xor xlat lock sbb test cmp xchg or mov mov rex.R xchg pop push mov stos retq mov notb jl sahf jae ljmp push outsb test xchg (bad) xchg (bad) rex scas xchg (bad) sahf lahf xor out and rex.WR xchg out sbb pushq (bad) test xchg in (bad) cmc xchg or xor pop xchg xor imul mov cmp iret fdiv or retq pushq (bad) sahf mov mov loopne push add popfq ss xchg cmpsb and cmpsb lahf xchg cltd fmul cmp sbb imul notl sbb rex.B jno xchg adc rex.WRX je movslq repz jmpq imul lret sub pop (bad) jl in retq and (bad) rex.X pop (bad) xchg jo out mov int cwtl callq xchg enterq mov popfq in fwait mov sti ja (bad) idivl cmpsb pop jbe xchg mov movsl or (bad) or jrcxz cmpsb sub sbb or cs cmp sahf jno (bad) outsl jae (bad) (bad) out dec cli adc xchg and mov leaveq (bad) xor push or fcomp jl (bad) xchg retq mov mov sahf lods xchg mov jne stos rex.WX (bad) (bad) fdivl rex.X cli sahf test sub mov jns xchg (bad) es (bad) and rex.B pop clc xchg adc jle xlat imul outsl incl pop out jb movabs mov (bad) push gs sub cmp fdivl xchg pop (bad) xchg pushfq or jrcxz sbb cmp (bad) lahf fmul loop rex.RX test in jnp xchg mov cmp int mov xchg sti outsb sti std jmpq pushq (bad) xchg jge mov xchg xor mov pop push (bad) retq (bad) and mov movabs (bad) hlt sar pushq test cmpsb adc (bad) or mov lret addr32 sti callq pop sub in (bad) (bad) mov pushfq jl jrcxz push fstl rex.XB mov cmp xor insl jns pushq xor out xor jae (bad) int3 fs mov fildl cmp fcoms imul or popfq jnp sbb xchg pop insl loope and js (bad) rex.WXB movabs (bad) icebp cwtl mov rex.R (bad) fs sbb outsb xor rex.WXB xchg rcrl sti xchg xor and sub adc hlt xchg test leaveq int3 jae lret out jg hlt (bad) mov xor and sub lods mov in mov (bad) jrcxz out xchg icebp std cmpsl cltd and stc rex.RXB (bad) adc (bad) cltd (bad) iret sti lods xchg jnp (bad) insl (bad) ja cmp add adc int jbe or (bad) rcrb (bad) test int3 lahf rex.WRB repnz or push cli pushq xlat rex.RXB es pop cltd rex.WRXB push cltd add sbb movslq jo (bad) xor shlb lcall push jmp nop jno pop ficom icebp pop std rex.WRX xchg insl retq test mov mov popq xchg and leaveq ja jae xor out xchg rex.RXB rex.WRXB stc and mov rex.WRXB mov shlb pushq xor mov repz shlb faddp and jge out (bad) loopne sbb pop xchg pop in loop icebp in (bad) ss shll rcrl idivl out cwtl mov jp rex.WRB es mov fidivl outsl sbb (bad) push rex.RXB cmp test (bad) sbbb (bad) out in test lret (bad) nop sub lahf add jb sbb (bad) scas adc pop adc (bad) js stos jae or test (bad) movsb (bad) ja rex.X lea addr32 int outsb push jns xchg int3 jge mov incl pop rorl sbb (bad) push rep push rex.R vxorpd ss rex.WRB in xchg mov xor enterq sahf cmp xchg sbb xchg push cs stos xchg lods fdivs and (bad) loope cmpsl xor jmpq adc (bad) xchg push jge xchg add xchg movabs lahf push test xchg xor (bad) or movabs mov jge xor push (bad) negl mov sahf add iret shlb ja sbbl movsb push mov xchg pushfq stos xlat popfq lods (bad) rcrb ja pop cmp cli adc cmc out sar jg sbb xchg (bad) adc (bad) mov mov mov rex.WB je loopne xchg or scas jg adc mov cmpsl xor rcr test xchg mov (bad) leaveq jae push rcrb rex.WX jne scas or (bad) (bad) popfq sub test (bad) pop stos xlat in cmp jno pushfq lret mov mov clc (bad) fmull callq jae push sub subl (bad) loopne xchg test mov lcall cmp mov xorb cmpsb mov mov (bad) addr32 adc popfq lods or insb jmp rex.W xor mov push sub retq nop std or rex.RB test mov fidivr cmp jne popfq or (bad) fst push mov xchg mov fistpl out data16 movsb xchg xor rex.W fwait xor adc shld in (bad) xchg sbb (bad) movabs (bad) pop int3 xchg xchg cwtl rex jnp jl mov sti (bad) (bad) callq add rex.WX retq movsl in pop xor rex.X (bad) rex (bad) mov mov mov enterq fidivrl (bad) rex.WR jnp jno test (bad) imul adc sub cli mov stos mov sahf test xor mov nop fs lea stc push je xor enterq fsubr pop movabs or add test (bad) pop jmpq cmpsb sbb rex int3 mull loop movabs and pop faddl (bad) movabs (bad) mov and (bad) mov pushq rex.WRXB add xchg push add xor xor sub xchg (bad) (bad) pop sub xchg rcrl (bad) nop mov add stos scas (bad) movsb (bad) js xchg test pop push push (bad) cmpsl cmp retq movabs movslq rex.WRXB (bad) rex.RXB mov xor cwtl and in pop mov outsl sti (bad) cwtl (bad) stos (bad) adc adc cmc (bad) (bad) (bad) repnz pop stc xchg je scas cmpb mov nop push (bad) out xlat rex.RXB xchg mov sbb xchg rex.WRXB movslq cmpsl test xchg or fisttpl lret mov pop rex.RX mov in cmp adc test mov sarb nop and enterq xchg xchg mov add jns iret mov jp cmp xchg jmpq jg lods cltd lret and xchg mov push push xchg pop jl jg (bad) (bad) sbb xchg add icebp subl (bad) imul adc mov xchg xor push test cltd mov movsl out add (bad) in (bad) enterq pop add rex.RX lea leaveq (bad) fnstenv (bad) stos fistl and mov fsubrs jne sub movsb sahf lret in lods (bad) push retq xchg movsb ds jae imul test xlat (bad) stos notl mov add stc push add in decb rorb adc scas jo retq mov hlt orb sbb mov jbe sbb cmpsl lret idiv (bad) nop sbb or rex.WR rex.RB jnp popfq add (bad) xchg andl sbb (bad) add or xor movabs mov jbe lahf adc jmp retq cmp (bad) sbb jno pop rorl (bad) cmp mov sahf out and fisubrl decl pop pop add movsb jle (bad) pushfq sbb lret (bad) movl pop (bad) jle (bad) or (bad) jbe rex.WX (bad) jp cwtl xchg es pop lretq jrcxz movabs xor (bad) mov (bad) movabs jg sahf jg adc enterq cmp fimul add rex and mov jmp or push pushfq mov push insl or xor and repz mov (bad) rol rex.RXB (bad) mov fcoms test xchg xchg movl int jns fisubrl or mov (bad) cmp int or sbb enterq (bad) movsl cltd nop (bad) xchg cltd (bad) mov jbe sbb adc jo pop idivl iret (bad) nop push xor jno cmpsl cs jmpq outsb add mov retq jo rex.WB push xor jl push (bad) xchg sti add and mov xor (bad) sub pushq jbe xchg sub (bad) (bad) (bad) xchg mov xor jmp xchg (bad) rex.W data16 cltd jnp insb cmpsl movsl and rcr (bad) pushfq jp popfq sbb out rex pop cmpsl and jne adc (bad) mul mov xchg callq (bad) (bad) repnz and (bad) (bad) cmc jmpq imul mov or mov popfq sub mov (bad) cmp xorb jmp (bad) mov adc pushfq mov gs sbb cmp and mov vmovdqa mov retq fistp retq fimull lret lea jnp rex.B mov (bad) jmp pop sub punpckhwd mov mov mov add subl (bad) (bad) mov out and testl insl xlat or mov xchg scas xchg push xchg xor adc fwait (bad) jmp adc pushq (bad) or (bad) (bad) (bad) and (bad) (bad) movsl sbb mov or callq (bad) movsb and (bad) movslq repz sbb movslq sub (bad) setne xchg push (bad) in add pushfq pop mov (bad) jmp xchg loop (bad) mov sahf or xlat repnz mov and ds imul sub test repz cltd add movsb rex.RXB es xlat mov retq xchg addl ficom add cmp push sahf add fsubl repnz xchg fcmovnbe xchg rcrl fsubs pop (bad) sub je sbb insl xchg or and scas xchg js mov push cwtl gs sub sbb fcoms rex.WXB and mov scas mov repz cmpsb adc xchg fiadd (bad) movabs (bad) jbe outsl sti ss (bad) movabs (bad) sub enterq mov fsts xor je mov xchg fildll add lock (bad) test (bad) mov jmpq jae or xchg loop (bad) setae xchg jb pushfq xlat xor addr32 notl cmpsl movabs ss pop idivl xchg out xchg lods mov and add mov fimul and loop mull cmpsb lods adc stos ds (bad) xchg iret (bad) pushfq cld (bad) (bad) retq mov shll out cmpsb xchg xchg cli movsb sysret cmp pushfq sub mov outsl insl jmp js test shlb fadd int test xchg xchg mov popfq fld1 xchg scas (bad) outsb or movabs rex.WXB (bad) lea xchg jrcxz push mov jp xor out xchg rex (bad) xchg push jae loopne mov movsl (bad) jmp (bad) ja movsl repnz (bad) in (bad) add xor pop divl push xchg mov test in xchg mov lods xchg or cmp sahf xchg mov sub (bad) mov add (bad) xor (bad) mov sbb xchg lock xchg mov enterq sbb scas (bad) fstl sbb test adc test scas lods out loopne mov add shll mov cmp sbb mov and not fsubl sub mov sahf rex.W add mov (bad) adc xchg int3 pushfq mov cltd xchg incb sub (bad) (bad) mov (bad) push std std nop fsubrl pushq imul pop cwtl (bad) xor jb xlat push cld xchg mov imul (bad) rex.WRX cmpsb out (bad) fdivrs jae (bad) push int insl fistpl je xlat mov in (bad) stos (bad) push imul sbb xchg lea mov mov rex.RXB xchg jns gs xor std pushfq retq movabs push cld es mov (bad) loopne xor adc xchg mul stos adc outsl xchg scas (bad) imul add clc jo rex popfq sbb mov or loopne ja rex.WX jbe rex.X jmpq insb rex.WRB (bad) imull in xchg sbb cld pop xchg and jb (bad) iret sub xor (bad) mov mov xchg movd xor xlat addr32 xchg and sbb scas (bad) jmp retq pushq mov jbe (bad) mov frstor rex.WX jno,pn nop sbb int (bad) cmc pop cmp add add cmovle sub andl jno or jmp rex.WRX rex.WRXB imul mov mov out pop or scas movabs addr32 rex.WRXB rex.WX adc data16 rcrb mov orl jl fidiv (bad) jbe movabs jns fist xor (bad) jnp (bad) sbb fstps sbb push nop fild (bad) fld rex.WR movsl sub lods xchg adc (bad) xor insl xchg outsl negl jge xchg ds es in and pop xchg adc jbe push push (bad) (bad) fmulp mov xchg and jnp out xchg push shll pop mov (bad) sbb stc (bad) cmp std outsb xchg imul je or imul lea fucom xchg movslq (bad) in fstpt rex.WB (bad) loope xor xchg (bad) mov (bad) icebp lods jg jp (bad) stos (bad) pushq (bad) ds (bad) (bad) scas xchg pushq (bad) jp movabs mov or mov jge (bad) (bad) or cwtl adc sub addr32 xlat xchg (bad) lret mov xchg and xlat sbbl (bad) add sarl test movabs rex.RX (bad) pop (bad) rex.RX xchg and jl (bad) movsl rex.W (bad) outsl fldcw jno (bad) mov or test (bad) pop lods add or rex.WXB pushfq xor stos xor outsb (bad) rex.X adc add xchg jnp fstpt (bad) mov fdiv sbbl rex.WRX pop fwait test sub sahf jmp xchg (bad) lods adc sbb xchg rex.WB mov adc jns jns jmp out cmp fidivl mov xchg or mov (bad) mov jae jrcxz jg push cltd mov or lock (bad) (bad) mov (bad) xor rex.WX ss jmpq (bad) xor pushfq xchg pushq (bad) xor xchg sbb cwtl add and (bad) mov mov cltd mov nop (bad) push sbb pop int mov fidiv negb rex.RXB addr32 out jrcxz cltd (bad) sub sub push or cs iret pop and (bad) and movabs cld fcoms repnz movabs (bad) sbb rex jb push push in insb and mov out mov rex.W cs (bad) repnz (bad) jl jne iret movabs movabs sbb stc repnz rex.RXB (bad) jg xchg (bad) (bad) sub xlat fnsave sbb (bad) retq jae (bad) popfq lea rex.WRX rex.X in mov fildl mov cmp mov sub iret out mov or (bad) cmp jg clc jg (bad) nop (bad) icebp retq push in jrcxz mov seta (bad) movabs adc sbbl push jo pop pop pushfq sbb ficompl outsl adc in rex.RX rex.RXB cld (bad) cmpl and popfq lea pushfq rcrl (bad) sub outsl pop jae imul xor (bad) sbb sahf xor (bad) repz (bad) xlat rex.WRXB mov insb movabs cld ss out test (bad) fmull pop (bad) xlat (bad) (bad) cmp (bad) mov icebp lahf ja xchg cltd pop loopne retq xchg mov hlt out mov es cmpsb fidivr insb std cltd test sahf sbb imul enterq jnp sahf rex.WXB fdiv movabs lret jno sti (bad) (bad) (bad) rex.X xor out cmp jge xchg rex.R callq xchg add fdivrl xchg (bad) loopne (bad) movabs fldt xchg mov (bad) rex.RX add rclb jl in xchg fsubrl mov loop pushfq (bad) mov rex.WRB ja callq (bad) xlat xor lret test in pop adc lahf retq outsl pop movabs add scas jo sti push fidiv imul xor pop addr32 pushq xchg retq add pushq shlb cmp cwtl popfq push vmovhps mov je adc xchg (bad) in rex.RXB and iret rex.X adc and push jns jg scas sar mov (bad) movabs (bad) addb sub rex.XB xchg not sub (bad) in ficoml popfq sub movsl xchg mov cmp mov adc insl iret cmp xchg push add adcb test and imul push rex.X std lret sbb pop clc (bad) xor (bad) pop and cmpsl xchg sub enterq loope push xchg cmovbe iret out (bad) jl xchg fisubrl rex.WXB and mov xchg psraw insl mov xchg shrb and stos (bad) (bad) in retq fsubl (bad) xchg (bad) and insl fnstcw jne lret sbb sahf lods pop (bad) ja outsb xchg cld mov retq pushq jae sahf sub (bad) stos jns xchg sbb leaveq and xor xor mov loope lret rex.WXB out mov xchg mov cld pop pushq (bad) xor out jo cmp xchg mov test out sub mov push or loopne imul stos xchg adc movsb ror or mov pop pop sub mov test nop cltd fcomip mov movabs int3 fimul retq jmp pop push cwtl mov mov andl xor mov cwtl cmpsl pop sbb (bad) or in cmp sarl enterq xchg (bad) or scas shl (bad) xchg and xor xchg jbe xchg jle loope mov lea and add (bad) mov jno (bad) (bad) ja data16 xor and movabs and je fnstcw sbb gs fwait movsl (bad) popfq push push xor lret and push retq retq sub push mov (bad) shrb insl shr mov jg mov js rex.B (bad) pop pop xchg sub adc ja std shl (bad) adc (bad) stos sub push ds (bad) jg fistpll (bad) movslq jle cld por xchg shll fildl ds adc loopne mov xor xchg and jbe mull (bad) cli roll (bad) loop test sbb insl rex.RB add xlat rex.WR xchg jbe outsb and (bad) (bad) (bad) add (bad) mov (bad) cwtl out loope bnd xor or adc cltd fmull pop sahf mov xor (bad) fucom (bad) mov rex.WR mov sub (bad) cli xor rex.WRXB mov jns mov leaveq mov (bad) mov fs (bad) lods cmp loop sbb or shr rex.XB fs adc imul mov test jge (bad) (bad) xor (bad) rorb cwtl jnp mov imul mov lcall or cmp (bad) rex.WRB adc (bad) sar rex.WRX xor (bad) je mov ss rex.XB in xchg jrcxz loope movsb mov rex.RXB retq xchg mov lret jmpq mov xlat sub in cwtl rex.RX gs mov (bad) sbb rex.WX fs lea mov jrcxz (bad) add pushfq (bad) rex.WRXB loop rex.W (bad) in (bad) (bad) enterq xchg (bad) jmp in repz stos mov rex.RX xchg pop cli cmp movabs adc out shll (bad) xchg in lea (bad) mull jmp cmp xchg jg testl movabs (bad) imul (bad) ja (bad) nop fcoml stos rex.WR fwait xchg mov sub and (bad) mov cmpsb xchg in (bad) xchg callq nop fdiv xchg pop xchg mov es stos nop xchg insb enterq repz js sarl adc orl jg xchg cmpsb mov xorl pop retq in popq (bad) mov cmpsb mov (bad) cmp or pop (bad) jge sbbl lret push (bad) pop cld in cltd cmc push ds test jle (bad) rex.R jnp mov (bad) fdivl movabs or lods rex (bad) mov out lods (bad) test push or scas xchg add mov movslq (bad) cmp (bad) repnz test test and (bad) xchg mov mov sub outsl jb out or (bad) sub nop sahf mov cwtl movsl vminps movabs rex.WRX adc mov je xchg loope (bad) es leaveq or popfq mov lret xlat push cltd icebp jg and mov je and add adc pop repz (bad) pop gs and stc in jnp lahf (bad) (bad) cld cltd mov pop cltd (bad) loop xor xchg (bad) ss (bad) adc (bad) rcll cmp in xchg add (bad) int rex.X fs movsb add rex.XB xlat (bad) test loope or rex.WX rex mov pop (bad) jo movabs mov rex.B xchg xchg loopne adc add icebp out faddl mov jl movabs jno mov push mulb adc stos xor xchg xor (bad) add push xchg clc xchg lret popfq pushq mov ficomp xchg movabs stc lods paddsw jno outsb jns pushfq sub retq repnz outsl mov pushfq hlt mov andb xor in mov xor mov and rex.WRX insl jae movabs sub fadd (bad) rorl cwtl cmp add outsl xchg sbb lods xchg adc rex.WRX sbb cwtl ja retq out lock pop (bad) in xchg mov add mov fs push add mul sub pop xchg rcrb or push fldcw callq sub (bad) je rcrl lods lret addr32 addr32 sub or pop add and (bad) (bad) (bad) movslq and outsb loop cmpsl cmp loope xlat jne,pn rex.WX faddl rex.RB repnz rex.WRXB jmpq xchg js leaveq (bad) scas mov test pop rex.WXB xchg and or mov sbb cwtl int add (bad) pop test xchg sub in mov (bad) clc sbb or add push xor rcr repnz xor mov in and mov (bad) faddl sahf cmp retq icebp lods (bad) repz xchg rex.WR rex.WB (bad) lahf jne mov or xchg pop and xchg or cmp fprem1 mov addb rex.WRX jne sub lahf movabs mov mov ja sub (bad) movabs insb data16 pop rex.XB loopne xchg fimull (bad) sbb (bad) cli mov imul cltd movabs (bad) int3 xchg xchg xchg out loope movsw shl sahf rex.W lahf (bad) sbb (bad) notl movsl mov cmc push push sbb fnsave callq mov xchg (bad) in cmpsl adc push fs and rex.XB leaveq movabs ficom leaveq push and pop rex.X rex.RXB (bad) imul mov xchg xchg jp test mov push xchg loope btsl pushfq sub add sahf (bad) jae insl (bad) rex mov jo or (bad) mov ds rex.WX popfq rex.WRX movabs sar mov push rex.W loopne pop sbb mov sbb imul (bad) fisubrl test xchg sub (bad) cmp add add (bad) subb (bad) mov add or imul negl pushfq mov jle nop (bad) xor lret mov notb fwait mov pop pop (bad) outsb hlt (bad) stos mov (bad) pop (bad) or imul rex.WRB icebp rcrb es mov jmpq movabs pop xchg cmpsl addr32 rex.XB adc (bad) (bad) (bad) sbb test (bad) outsb (bad) jae (bad) xchg mov retq rex.WRB rex.WRB add test xchg in mov (bad) movsb mov sbb retq pushfq (bad) cwtl pushq fcoms pop sub cwtl xchg ds mov sahf movabs xchg xchg sub rclb jrcxz mov xchg rex.W fwait pop jmp add movabs xchg mov (bad) xchg push add mov jb xor jrcxz mov mov fs ss stos movabs (bad) pushq pop fisub std (bad) mov pop lahf shlb pop lock sbb (bad) (bad) pop pop (bad) xor iret mov pop mov xlat insb mov stos (bad) and fcompl mov retq sbb mov sub mov mov xchg lea xchg rex.R jl loop lea push or mov fcoms sub xor lret jno dec (bad) outsb xchg ds add in sbbb (bad) nop mov outsl and jnp rex.RXB cmp adcl (bad) xor imul cmp xchg in fmuls movabs (bad) (bad) xor (bad) mov insl xor stos xor jne xchg and (bad) (bad) sbb xchg nop cmp jns hlt xchg ss rcrb (bad) add rex.WB rex.RXB in (bad) test loope jg (bad) rex.WXB mov xchg (bad) jp (bad) add scas (bad) mov cltd pushfq and movabs pop xchg (bad) adc jmp movabs xchg cmp xchg mov push xlat rex.WX jp and shrb mov push movabs add leaveq mov cmpsb (bad) xor ss int movsl stos mov and mov xchg push rex.XB and cmp (bad) mov fs fistl adc rex.WXB notb (bad) cmpsl fdivl xchg or (bad) (bad) pop gs push sahf xchg repz cmc lea rex.WR ja movabs pop sarl sub (bad) pop or pop scas mov sub movsl std stos sbb andl push mov (bad) movsb mov repnz (bad) pop cmpsl out xor xchg pop adc xchg xor cmp mov shll (bad) (bad) ss mov mov pop fcoms xlat es rex.WB cli stos add (bad) mov push faddl sub sbb gs hlt test jp imul (bad) pop (bad) rex.R push jnp lea (bad) out mov xchg cmpsl sti in mov (bad) push mov jnp rex.RX xchg ss mov test xchg (bad) xchg xchg mov pop add xchg jl cmp xchg sbb cmp jle pop outsl (bad) (bad) jrcxz xchg push jno rex (bad) add lea jmp or (bad) xchg mov rex.RB lock je and (bad) xchg rep std xchg cmp repnz cmp mov pop retq test callq and cmp mov sub rex.X and sahf xor (bad) outsb lods andb pop and (bad) notl pushfq fisubrl pushfq (bad) cmp (bad) jo sub xchg loopne loope sahf rex.RX movslq xor (bad) xchg (bad) jmp and rex.W push xor rex.XB clc sub add rex.W (bad) (bad) fsubrp xchg stos pop rcrw rcrb retq sahf es sbb (bad) jbe cmpsl jb (bad) out xor rex.WRB movabs je movsl fwait xchg (bad) rex.XB or (bad) rex.WRXB pop sub cmpsb xchg jnp push nop xchg retq xchg cmpl (bad) jae test es fcompl xor mov xchg push (bad) in in retq movabs xor cmp (bad) rcrb insb xchg cmp mov mov mov enterq sahf sub pushfq pop icebp pop in cmp pushq cmp (bad) mov addr32 (bad) mov push adc sbb xchg int3 jb mov mov sbb pop mov sbb cwtl rex.WXB rex.R push movabs cwtl sub jmpq xchg cs jae xchg leaveq (bad) pushq mov fiaddl out xorl mov fwait or cmpsl xchg (bad) iret jne (bad) add rex.XB sbb addr32 out (bad) jno mov pop xchg cmp shr rex.B imul scas mov callq mov loopne xor xchg push push flds cld add push jrcxz stc fwait (bad) cmp xchg (bad) (bad) mov insb movabs adc (bad) cld xchg (bad) xlat fwait in jmp mov xchg (bad) hlt (bad) fild (bad) xchg pop xor int3 xchg clc (bad) jbe sub in xchg in stos ror jns mov sub sub jnp (bad) cs insl and xchg movabs (bad) pushq rcr (bad) out fmuls rex.X xchg lock rex.WX sti movabs clc jbe xchg (bad) ficomp cmpsl std lahf mov lock cwtl test addb mov xchg rex.W mov cltd xchg jl xchg jnp jo mov rex.WX rex.WRXB lock testl sahf cmp mov cmc sbb gs gs data16 mov stos or cwtl mov lods rcll and sub sbb clc sbb insl rex.WXB (bad) xchg rex.RXB out xchg sub rorl retq mov cwtl mov (bad) push es and mov adc push xchg cltd and rex.W in cwtl gs pop jbe xchg mov nop mov mov (bad) nop push notl push cltd scas movsl mov (bad) enterq jrcxz mov sub mov xlat xchg stc rex pop imul cmpl in rex.B repz fimul movsl mov movabs sbb xchg movabs cmpsl rolb push rex.RXB xchg lea add rex.XB sbb rex.RXB add rex.RXB (bad) jo (bad) mov (bad) out js (bad) adc xchg mov rex cmp (bad) (bad) js xchg (bad) (bad) cld sub jg adc or (bad) fstps outsb (bad) sub icebp mov push sub sbb pushq movsl (bad) xchg mov mov (bad) or (bad) sbb (bad) jge xchg and decl sbb subl rex.X movsb xchg (bad) xchg nop adc jmp jne retq sub (bad) rex.RB jg (bad) pop rex.WR in (bad) rex.RX and movsl xor clc xor js or mov sahf lret and (bad) out callq xchg cmp scas scas cmc push and lret ja cmp shll jno xchg (bad) (bad) push xor int push outsl imul sub xlat (bad) xchg push fwait pop (bad) retq pop xchg gs push rex.RX pushq mov xor (bad) jo or sarl or and mov std (bad) xchg (bad) jle loop or callq movsb sub (bad) xchg or fidivr and rex.WX data16 (bad) or movabs icebp in pop sub pop (bad) sbbl rex.XB std push lock cltd fldenv (bad) data16 mov mov push cmp movslq mov in (bad) insl rcrl retq xchg repz movsb push mov rex.R add or mov push pop pop (bad) sub rex.RX rex cmp mov pushq jle adc rex.WR (bad) retq popfq movabs (bad) mov mov retq cmpl fisubr sub push add and insb push rcrl addb es xor (bad) scas mov frstor mov rex (bad) retq movslq sbb jmp rex.WXB jnp xchg insb (bad) jmp rex.WX fs or retq rex.R gs outsl cmpsb cli jmp (bad) (bad) mov ds (bad) mov cmp xchg cmpsl and and (bad) hlt pop cmp sub rex.WRX rex.WRX rex.WR out ss insb (bad) repnz xor sub (bad) enterq push lea fs adcl divl jmpq (bad) push movabs mov (bad) sub cmp popfq cmp (bad) xchg (bad) (bad) xlat xchg (bad) mov out jno (bad) and (bad) jbe push negb (bad) (bad) (bad) jns outsb btc mov adc hlt lock pop sub push lahf (bad) (bad) push xchg nop add mov rcl jnp retq adc ficomp rcrb movabs pop cmpl rex.B repz sbb mov loop lret insb and (bad) repnz in (bad) cmp lret insl (bad) movabs js lahf and (bad) cmpsb pushq in xchg test (bad) rex.WXB jmpq fucomp imul callq pop shll rex.RXB idivl rex.RX movslq (bad) cltd cwtl (bad) xor push fldcw movsb mov ds jo cmpsl jne gs sbb sbb pop jmpq and test (bad) in movslq add out in adc cs out cmpsb mov pushfq push mov fcoms (bad) jle rex.XB rex.RX (bad) insb (bad) shlb outsl divq (bad) rcrl pop (bad) xchg push push push (bad) rex.X sbbb data16 (bad) scas jrcxz mov and pop rex.RB jne xchg insl in jl (bad) adc (bad) movsl and xchg and (bad) (bad) (bad) movabs fstpt and movabs sub pop mov or (bad) in xchg sub cld rex.WR or sub or popfq rex.XB pop push cmp cmpsl xchg pop xchg xor sti out (bad) js cmp sbb rex.RB (bad) fisttpll jno popfq adc int (bad) and (bad) rex.WX fdivrl (bad) sub (bad) sub (bad) cmp (bad) loope rex.X rex.X retq or fwait or jns callq (bad) (bad) xor (bad) sub lret stos adc fs cld (bad) mov (bad) (bad) ror (bad) and cmp pushq (bad) xchg xor mov (bad) pop movabs (bad) addr32 xchg sbb push push (bad) rex rcrb (bad) add mov rex.RXB mov popfq out movhps or imul mov outsl pop movsl cmpl cmc (bad) mov mov loopne xor or mov nop sbb and mov cmp or sbb sbb push or repz (bad) jo cwtl jo nop lods xlat popfq adc and (bad) pop mov out lahf mov rex.WXB xlat pushfq sbb xor fwait xor add sub pop jp leaveq stc ss (bad) rex.RXB jg pop add rex.WX lock sub pop xor pushfq jne xchg push imul fwait leaveq ficom cmp or rex.WXB cwtl cld mov mov (bad) jp sahf sub (bad) mov adc jg mov jb test (bad) (bad) sub in and sti (bad) fs movabs jmpq mov loope mov rolb xchg fcmovne (bad) rex.WB mov mov popfq sahf ficompl rcl mov add mov sahf push pushfq movsl fstps adc sub test xlat nop test xchg jnp out setg cmp (bad) pop and cli pushfq in cltd xor shrd rex.RXB imul cmc (bad) sbb and push movabs mov (bad) insb lea ss push jp sub loope test shrq jo mov xlat shrb test (bad) push pushfq (bad) adc loope xchg sahf cmp je sub mov xchg sbbl in in mov in nop push enterq ja cmp adc lods sbb jns jge mov ss pushq (bad) sahf icebp mov (bad) xchg bnd xor lods frstor adc rex.RX fwait or (bad) imul jbe retq adc leaveq adc cmp addb pop (bad) shll xchg lea cs and subl pop rex.WRX mov push cld outsb pop and xchg xchg lock push and (bad) repz push xchg pop mov cmp sahf adc std xchg rex.RXB mov (bad) rex.B xchg js cmp cltd push ds sarb (bad) neg mov sub (bad) xchg out rex.WRX pop adc sub mov sub rex.RX icebp sti mov imul mov rex.WRX and (bad) pop jne and (bad) stos rex.WX loope sub js lea movabs test pop mov outsl enterq and callq sbb mov xchg ficomp movslq ficompl xchg pushfq notb fisttp cmp push scas push idivl vpshab std lret mov mov push xchg negl and stos push mov sahf fmull rex.WRXB movslq iret out mov xor xlat sub (bad) rex.X pop sub pushq lods rex.WXB rex.RXB sbb out xchg and (bad) or rex.X or stc cld leaveq fisubr jge loope out mov jb ja mov rex.WRXB test push adc (bad) cmp push popfq fisubr enterq loop test push rex.RXB js jb pushq rex.WR sbb xchg test (bad) (bad) mov lods sub pop retq retq out jb (bad) popfq or loopne mov jae (bad) rex.XB xor cmp (bad) adc sahf mov stos mov xor repz xchg xchg sub retq add push (bad) rex.R xchg pop pushq adc popfq fbstp pop (bad) push rex mov jmpq and fcos icebp fcmovnu xchg mov add test sub (bad) push mov js cs in sahf rex.B lock mov push xchg popfq and jl mov in mov and sbb movsb (bad) push cbtw (bad) (bad) mov sahf movabs sbb rex.RXB sahf xchg xlat cmpsb mov sbb rex.WXB or movabs int3 (bad) rex.WR (bad) cmpl xlat pop jp mov mov lret outsb xchg insb sub and add rorb xchg add push pushq mov xchg xlat rclb mov (bad) cmp lahf mov jnp (bad) and fwait mov mov xchg popfq retq xor (bad) (bad) push hlt sahf data16 rcrl (bad) mov (bad) cmp xchg add je fdivrl (bad) std ja retq pop cmpsl lret cmpb xchg or mov mov test iret mov xchg push div mov gs ds sahf cmp idivl scas es movabs cmp or mov (bad) test iret ja (bad) xchg rex.WXB or mov mov out fcoml jne insl sbb imul cmp sbb pushq (bad) adc xor nop rex.X pop lods cmp push mov fs cmp mov and sti adc rex.R add repz data16 movslq fistpll and mov xchg and leaveq (bad) test xchg sahf outsb test in pop rex.RXB rex.WB cwtl or movsl jmp out pop xchg xchg adc or and mov (bad) or rex.WRB rex.WRX rcrb fdivs ss xchg (bad) (bad) std clc pop insb xchg rex.X scas push sahf pushq popq (bad) rex.W repnz mov xchg shr and movabs addb mov or (bad) cwtl jrcxz repz lock imul or roll (bad) (bad) (bad) sub xchg mov out push cs mov cs sahf (bad) sbb mov fcoml movabs (bad) and sub pushfq pop xchg sbb insl and mov (bad) cmp popfq mov pop ror xchg (bad) lea fnsave loope and mov mov movabs pop adc (bad) jae (bad) mov mov sbb xchg lea jge sbb fldl (bad) (bad) jle mov or sbb mov jns xchg add std jbe (bad) movabs rcrl rex.WRXB mov nop movabs mov xchg lods xchg sar in (bad) or insb adc shrb test xchg (bad) idiv lea cmc xchg sub ss (bad) (bad) mov stos pop popfq in sbbl (bad) jbe jns cmp test out fs loop movabs enterq xchg divl nop or mov sbb xor (bad) (bad) enterq pushfq lea mov jmpq jmp cwtl callq xlat leaveq add xchg (bad) rex.B iret (bad) fiaddl (bad) test mov pushfq out ja cli lahf (bad) lret movsl xor (bad) (bad) mov (bad) sti imul add fldl adc sbb and es xchg (bad) insb xor cmpsl movabs (bad) jrcxz scas ds negl jp nop (bad) jmp (bad) lods rex.XB mov xlat (bad) cmp sbb (bad) xorl loop ja rex.WRB push sbb cli lock sahf mov fwait retq shll std rcl sub xchg cld je jge rex.WRXB xchg popfq or cmpsb jl pop lret xchg (bad) mov rex.WRXB xor (bad) movsl stos lea xor out subl (bad) jns fistpl or out cmpsb cwtl xor and xchg (bad) xchg jmp cmp and pop mov fs cmpb (bad) xchg sbb mov cwtl loop rex.WRXB (bad) rex.XB mov (bad) push gs xchg (bad) (bad) test xchg jmp test rex.WB mov xchg (bad) (bad) shrl cs sahf push mov xor pop (bad) shl (bad) pop or cmp mov xchg movabs xchg in lret rcl cld xchg test (bad) (bad) push push xchg rex.B mov xchg insl rex.RB in sahf sahf lret pop jrcxz rex.B push jg rol gs fnstsw sahf jb mov mov hlt xchg clc adc (bad) mov sbb rex.RXB rex.WRXB xchg xchg hlt add movslq (bad) rcrb cbtw rex.WRXB cmpsl cmpsl (bad) (bad) movsl (bad) or (bad) nop scas sti (bad) movsb movl sub cltd movabs (bad) xor or or push rex.WX lock notl (bad) movabs and xor adc pushfq mov rex.XB (bad) xchg lahf cmpsb movabs sti rex.RB mov fbstp out cmpsb jmpq mov out xchg fwait pop or (bad) mov push out jl stc cli sbb pushq (bad) stos xchg adc rex.W retq adc pop mov clc jmp fistp pushq nop repz and rex.X xchg or sahf and movsl ss jg cmp movslq sub jno jne (bad) fildl lods pushfq sub ja cld addr32 cmc andb push movsb (bad) sbb (bad) or andl add add (bad) xor (bad) pop xchg (bad) in xlat jnp or notb pushfq sbb rex.R and icebp test (bad) fwait movabs rex.W ss (bad) jge scas movsb mov add adc enterq mov imul rex.B jae mov ror addb xor fnstcw retq test xchg or outsb jge or rex.WRXB jg test xor punpckldq rex.WR sbb (bad) incl mov cmp xlat retq fsubrl adc sub movsb (bad) (bad) (bad) xchg std cld (bad) cmc (bad) test add xlat and (bad) fldenv (bad) je rex.W imul xchg xor push push jne sti sbb enterq out cmp push xchg mov ja jle (bad) (bad) rex.WXB (bad) mov mov xorb (bad) rol stc (bad) retq setge pushq and mov (bad) lea cli cli mov shll stos xchg xor (bad) xchg mov rex.X test (bad) (bad) lock mov fs pushfq (bad) push int (bad) fstpl xchg enterq lock pop sub sub gs fidivr lahf movl mov (bad) cmc (bad) nop sti mov xlat push cmp movabs fidiv cmp pop pushq mov retq (bad) sbb cld lret (bad) and xchg (bad) scas fs pushq pushq xor cmp callq rex.RX or (bad) xchg and loop popfq leaveq (bad) and pushq movslq mov mov xchg sub jge sbb or pop rex.R negb imul (bad) mov popfq jl (bad) movsb xchg mov (bad) xchg (bad) jnp cld or rex.WRB xchg (bad) stos cmp mov fs add (bad) pushq rex.WRX movabs fdivrl xchg stc and ficoml add jmp rex.WR pop pushq std fs (bad) fistpll cwtl mov in jle xchg sub rex.B (bad) xchg std sarl loope mov in adc in nop cmp jge push clc pop movslq pop xchg and xchg rex.WX popfq movsb mov jbe retq sbb retq (bad) mov jb jno (bad) stos and mov cwtl movabs xorl rex.W xlat pop cmp sub xchg rex.X (bad) insl adc mov jg movabs xor movabs and (bad) negl fsubrp nop adc int3 jbe xor leaveq callq (bad) jp mov jrcxz xor (bad) (bad) test in xchg add pop cmpl sahf addr32 pop sub fistl and sahf pop addr32 (bad) (bad) adc (bad) adc jrcxz push jl in jg movslq pushfq es fstps rcrb (bad) jrcxz fisttpll xchg sbb sbb adc clc push (bad) add xchg jmp or (bad) mov in pop (bad) xor (bad) pop mov stos nop (bad) pushfq (bad) adc shrb in xchg xor mov (bad) mov mov (bad) mov xchg sub mov fucomi mov ja cld sti addr32 xchg cli (bad) pushfq (bad) pop out out (bad) or adc (bad) mov enterq xchg (bad) ss cli test xchg sub out adc and jb sbb xlat (bad) sbbl int mov rex.WRXB (bad) sahf loop adc lahf (bad) in (bad) sub rex.X fiaddl insl scas (bad) pop or mov mov (bad) (bad) insl leaveq pushfq loope jnp and mov sbb mov (bad) xchg push mov stc push cwtl stos or rex.RX loop mov pushq (bad) (bad) and sbb int scas jb adc add in (bad) xchg mov test cmp rex.B mov push sub sub (bad) jl shlb (bad) lea outsb sub xchg fcoml adc lods mov pop mov out and sub ja imul xchg pop sbb std xchg (bad) in sub (bad) mov push mov (bad) je scas (bad) (bad) fldt std fwait pop enterq and jns xlat sub fwait cld and insl sbb (bad) (bad) (bad) clc (bad) (bad) decl xchg and xchg callq xor sbb (bad) rex.WRXB sub mov in jnp retq mov pop adc jl jne sti cmp rex.WRB lods adc in add retq jg rex.XB push rcll scas sub (bad) mov push sub cld (bad) jle mov stos or sbb jo insl push (bad) or xchg (bad) adc mov (bad) cmpsl (bad) rex.WRX gs mov mov (bad) cmpsl and in fcoml xchg push shll jnp and adc (bad) (bad) cld mov add jno sbb jnp xchg repnz mov (bad) xchg (bad) cmpsl mov cmp in test (bad) jae negl shr pushq pop (bad) (bad) xchg lret sub movabs jne pushq push insb or add jo pushfq push (bad) lret test and xchg mov lret fildl mov or cmp mul xor xchg enterq rcr jno or fidiv xor jl lret (bad) jnp stos or and cmpsb sti (bad) xchg pop leaveq pop in fdivrs gs (bad) ja (bad) sub cmpsb or xchg xchg shl or fstps icebp pop pop jp cmp sbb (bad) or repz xchg (bad) (bad) cwtl jo imul lods (bad) pushfq imul mov pop mov xor xchg nop rorl (bad) xchg retq movabs lock sbb cmp mov sub cs stc pop pushq outsl jae xchg mov sub xchg fdivrl mov fwait mov mov jl rex.WRB and and idivl xchg rex.WRX enterq xchg (bad) gs jb out xchg mov imulb (bad) push stc jl xlat (bad) pop jmpq jo mov adc jno imul movabs shl (bad) xchg pop loope xorb mov int3 rex.WB xchg icebp ficom fcoml pop movsb cmp (bad) xchg mov (bad) ftst (bad) test sahf ss mul jb rex.WR sbbl ds imul es movsl sti test (bad) or (bad) lock or jae mov (bad) (bad) (bad) scas mov mov fwait sbb fstps push xor retq add xchg mov out emms jns xchg cltd mov cmpsb lret lea (bad) jae add hlt fiadd mov xchg (bad) imul shrb rclb (bad) and or movabs out xor (bad) data16 sub rex.WRX fldl and mov movabs (bad) jb jle adc xchg adc mov cmpsl movsl insl sbb add and fucom test mov movabs (bad) rex sub test lock mov out push rex.WRB outsb loop jb fcom vpunpckhdq (bad) lea (bad) decl jrcxz mov mov rex.WRXB or lea mov xor or shll xor fisub xchg popfq (bad) in mov (bad) in pushq mov repnz popfq add (bad) movabs insb mov insl mov out pop imul cltd retq out (bad) pushq jle add and js cmc scas xor test lahf sub cmp in adc xchg retq rclb ficoml adc imul jg orl xor rex.WRB mov rol (bad) mov jnp icebp (bad) rex.WRXB push pop sub callq add cmp (bad) jb sbbb xchg xchg (bad) xchg or or rex.RX idivb mov (bad) pop popfq sti xchg fistp sub rex.W cli xchg shrb and in andl xchg nop add rex.WX cli jo and scas xchg mov xchg lea jle jae (bad) gs test adcl (bad) sbb rex.B pushq (bad) jl adc pop (bad) sbb (bad) rex.WRB out cli lea xchg mov lcall ja (bad) and (bad) push (bad) xor rolb xchg and xchg mov push push mov retq push rex.B imul insl add sahf outsl and mov movabs fsubs mov xchg sub (bad) movsl fnsave xchg jb (bad) or sbb insl pop xor imul in (bad) pop (bad) (bad) iret and je (bad) (bad) rex.WB rex.WRB sub xchg (bad) or sub nop mul xor leaveq sub xchg (bad) icebp push mov pushfq sbb or lods out (bad) rex.XB mov pop sub mov callq xchg jno movslq and xor dec mov pop jno (bad) jle (bad) xchg retq rex.RXB mov insl rex.B pop and xchg std xchg push and jns xchg lahf lods rex.WXB fisttp rex.R loope cmc rcrb lret ja cwtl test test repnz mov sahf fdivl rex.W push mov ss xchg fwait mov mov lods (bad) cld mov xchg adc jmp clc movsl js xchg retq pop jbe xor pushfq in xor retq imul pushq xchg (bad) cmp psubsb in outsl insl add int3 jrcxz xchg sub rex.WR sbb (bad) adc sbb gs add stos retq or xchg fldcw (bad) cmp cwtl and (bad) repz (bad) mov rex.WRXB adc xor retq push xchg scas jrcxz (bad) repz adcl int pop xchg test mov ficompl movsb mov movsl cmpsl sbb cli xor or pushfq je,pt xor cmpsl pushfq jns (bad) icebp or std sub cwtl (bad) jns pushfq jbe sahf jmp loop mov and sub pop std jnp movabs stos and ja adc fnsave rex.WB mov callq int3 (bad) movsl cli in xchg rex.WRB xchg pop callq (bad) fcoml and mov retq pop test jo adc (bad) mov or push cmpsb mov icebp add sbb lea and loop mov cwtl xor (bad) xchg mov or (bad) adc mov idivl rex.R (bad) cmpsl add mov jns (bad) outsl jl (bad) cmpsb outsl iret test gs sub push xchg lock sbb insb stos rex.RXB adc xchg movabs data16 mov cltd (bad) pop lods jne xchg and rex.WR pushfq movabs xchg fwait cmc jrcxz mov mov loopne fs mov (bad) in xstore-rng cmpsl add mov fcomip mov xlat push imul sahf (bad) (bad) and xchg addr32 cmp mov (bad) movsb lret sub mov movb cs movabs (bad) (bad) or fldt out sub mov fucom mull mov jns and std iret xchg (bad) rex.RXB jp fcomip xchg adc test xchg (bad) jb xchg xor out decb push xchg jg xchg cmpb pop shrl scas insl cmp (bad) jns cmc mov ja ja mov imul (bad) xchg mov xchg pushq cli imul mov out movslq xchg jl (bad) nop sbb add pushfq mov lahf pushfq (bad) jle movsb jb push and fistl mov (bad) xor js mov (bad) leaveq cltd jne cmp sti sarb outsl xchg or rex.WR cs in jo test test sub clc rcr jp xchg rex.RXB rex.RB jg lret mov int3 cmp xchg cmp xlat rex.WRX outsb sbb or test adc lock out xchg xor rclb sbb (bad) rex.R (bad) out xchg jrcxz repz stc sbb (bad) mov in ficoml (bad) jne and ja push mov or push mov xchg (bad) (bad) roll (bad) or rex je insb cld pop imul retq (bad) (bad) xchg push jnp std xlat imul movabs pushq jb sub (bad) rex.RX fldt rex.RB jge lahf ja xchg add (bad) idivl out add test callq (bad) mov mov xchg xchg jnp (bad) lock in (bad) jmpq outsb mov (bad) movabs mov cltd jns xchg fidivr xchg add rcrl int sbb cmovns xchg mov jle pop xor mov xchg retq xor addr32 xchg cmp in nop jp fcomip ja hlt lods scas or cmp mov test mov enterq add push push (bad) or addr32 (bad) lret pop add shll icebp rex.WXB imul adc and jno xchg xchg or (bad) adc xlat xor adc cld jae push xchg lods gs jp (bad) (bad) add hlt add fldl iret stos retq scas xchg fs mov mov fisubl xchg subl mov (bad) mov add shlb retq mov xchg (bad) sbb xor (bad) popfq in and and int3 cmpsb (bad) outsl sbb mov callq (bad) (bad) xchg cwtl sbb jmp lock (bad) rcr fldenv rex.RX (bad) rex.WRX mov imul lods jrcxz jl xchg jo adc repnz rex.RB cld nop clc outsl shrl mov fiaddl in jge clc (bad) (bad) roll mov movsl imul lods sub je or jae jbe (bad) cmc mov add adc mov cltd and cmp in xchg push push xor xchg clc lret js xor movsw xchg hlt stos cmp xchg xchg jmpq (bad) mov xchg (bad) int xchg sub pop fcoml sahf push outsl adc iret push sahf xor xchg mov roll xchg iret sub sbb rex.WXB rex.WRB mov fiaddl xchg sub push incb cltd xchg mov sti fisttpll adc xor movslq mov fnstcw movabs movabs subb rex movsl mov add movslq test cld iret movabs movabs jae and lock shlb xchg ja (bad) pop mov icebp fwait xchg out xor mov add pop jbe sub subl stos or loope rex.WR jmp sti xor loope sahf jg cmp sbb clc adcl xchg fmull mov xchg add fcmovnu (bad) xchg adc fwait es add fidiv (bad) movabs decb rex.WX imul idivb xor xchg pushq mov (bad) jle xchg insb (bad) movabs mov movsb add xchg movabs xchg cltd xchg leaveq scas fidivl popfq (bad) jmpq ds adc test (bad) xchg jge insl (bad) lods add (bad) jg lret cmp xchg imul decb (bad) sub push outsl pop xchg jge movabs fdivl sub jne scas out xlat mov std out xchg in (bad) (bad) (bad) fisub or movslq movabs rex.WB mov jge repz (bad) (bad) rex.RXB add decl iret loopne pushfq cmc pop push mov cwtl fisubrl add mov imul out pushfq callq out movabs jl (bad) sahf icebp xchg cmpsl cmp test mov sbb gs or imul xlat pop sub pop xchg test xchg fs (bad) rex.WXB xchg pop mov movabs (bad) xlat in in outsb jmp movabs or (bad) lods (bad) jnp xchg lret xchg xor cmpl push jg (bad) (bad) (bad) rex.WXB push xor sub xchg or rex.WX rex.WRXB repnz cwtl mov mov push xor sbb lret jp icebp idivl orl sub cmp sti mov pushq (bad) in movabs out xchg imull pushq fiadd or leaveq mov jno movslq clc xchg xor fstpt mov or (bad) (bad) xchg rex.WX es fadds mov negb fldcw jl rex.RXB rex.WRXB lahf addr32 or lahf mov jae sti mov add loop gs mov push clc lea std mov rex.RX pop repz pop lret rorb cwtl xchg lods retq test rex.R mov shlb (bad) (bad) jge mov addl pushfq mov out cmp out xchg or xchg mov xor (bad) push xchg mov fisubrl xor sti lock (bad) stc cmpsb retq xchg add callq (bad) std jrcxz repnz pushfq sub xor popfq push imul pushq (bad) outsb push xchg cmp divb sti jne rex.RXB movabs outsl pop scas outsb xchg adc jl insl fsub mov mov cld and (bad) sub xchg shlb xchg stos lock movl movabs cltd imul stc ficomp pop imul rex.WRX nop cmp (bad) (bad) cmpsl jmp (bad) sahf addr32 jno out (bad) push jne xchg pop (bad) fs (bad) mov pushq jl sbb sub pop orb xchg (bad) cmp mov (bad) and mov xchg jge adc in gs xchg push std rex.X rex.WB rex.RB int3 jne push cs (bad) jge xchg test jmpq int mov fs xchg out rolb mov repz std cmpsl leaveq xor xchg rex.W rex.WRX xchg pop (bad) fsubs adc and test callq adc (bad) cmp (bad) cmp js jae sarb cmp fisubl subl jp pop rex.WRX stos xchg (bad) cltd push imul icebp mov pop std xor rex.X (bad) rex.WX xlat jrcxz (bad) stos movabs mov push pushfq xchg out nop adc lods andl rex.RXB loop xchg (bad) mov mov outsl xlat gs rex.X pop cmp sbb sbb adc roll pop jbe add and cmp callq enterq pop mov and xchg mov mov (bad) (bad) jnp pop ds gs sbb mov in and rex.WXB xchg push or mov rex.B mov (bad) fidivr xor lock and push insl outsl xchg push lahf sub nop imul pop and jns es je sahf pop (bad) sub (bad) or mov jno (bad) cltd jmpq rex.WRXB xor cli enterq push pushfq out (bad) push cmp gs test test add retq xchg jb pop push xor iret jge movabs mov push jle jae movslq callq int3 (bad) fsubrs insb (bad) stos xchg ja pushq fistpll (bad) popfq test fist out xchg in xchg push rcrb fiaddl mov rex.RXB push lods mov sbb lods sbb test jle sub sbb push jg adc add int3 push (bad) (bad) loope (bad) rex.WRX fisubl (bad) (bad) add (bad) scas jns cmp in rex.WRXB fwait push jnp mov mov (bad) test stos (bad) mov (bad) movabs jno mov int3 insl mov or (bad) cmpsl std xchg fsubrl orl xchg pushfq mov push scas (bad) lcall in cmpsb jne lods callq adc and or add cmpsb rex.WXB cmpsb leaveq rex.RXB adcl out (bad) xchg mov or cmpsb sub (bad) pop cwtl (bad) in mov mov xchg cs pop xchg cmp (bad) in xor sbb xchg addr32 jmp jmpq (bad) mov mov shll pushfq xor add sub push imul pushq xchg mov mov fnsave or test clc repz or insl in test cmc sub (bad) mov cltd pushfq rex.WXB or jg cmp (bad) add test xchg sbb test in xchg push cmpsl pop push fdivp fild je jb (bad) int3 jge neg mov jp test icebp pop (bad) imul movabs outsl adc or repnz pop and rex.RX loopne mov xchg out push leaveq cli push (bad) in cmpsl ss out pop mov sahf in jbe xabort rex.WRXB jns xor loope sahf je hlt lret rex.WRXB sahf fsubr fbld stos push stos rex.XB xchg pop rex.WX jno js (bad) cwtl imul push jmp retq cmp jrcxz sub mov xchg iret repz xchg lret cmp (bad) pushfq xchg in std cmp leaveq rex.RB icebp (bad) jl (bad) pushfq (bad) (bad) adc push in xchg insl sub xchg imul out rex.WRXB sub test rex.WR mov rex.WRB cltd (bad) insl add movsl pop fistpl (bad) loop xchg pop icebp sbb rcr insb pushfq in xchg rex.W cmpsb orps insl xchg jp rex cs std xchg test cmp int3 xchg mov rex.WX xor stc push sbb xchg (bad) mov pushq nop (bad) add jnp (bad) sbb movabs imul sti or or add jbe nop (bad) jl mov sbb ds (bad) mov sub iret rclb or shlb or cmpsb sti movabs shll xchg andb callq xor std rex.WXB loopne (bad) cmpsl (bad) push (bad) (bad) fisttp stc mov (bad) gs nop and shl (bad) cwtl adc rex.XB imul rex.WR shr adc mov incl repnz jmpq (bad) and jg jns cmp (bad) (bad) (bad) jno fwait adc rolb cli cmp xor testl mov or movslq adc (bad) mull jae test popfq rex.WX (bad) loopne pop jp rex.RXB rex.WRXB shlb repnz jle mov and orb jg stos hlt add cmovo movl sub je popfq pop out test lods (bad) jo rex.X subl pop sbb pushq (bad) rex.WX mov rex.WR data16 push nop adc cli int3 cmp jg mov rex.WRX movabs (bad) (bad) (bad) push add jno test in ss in jns mov pop movabs (bad) in mov sub xchg add nop loope jl sbb xor rex.R (bad) add jb (bad) jo pushq xorl gs xor scas frstor ja neg rex.WRXB ds vcvtsd2ss sbb jo cld mov jno js sti adc jns rex.WXB or mov mov xor or stc es (bad) rex.WX (bad) std loope movsb mov or sbb pushfq in xchg (bad) repnz xor stos lret addr32 and (bad) movabs mov jge retq fs (bad) cmpsb clc (bad) mov add sbb cmp (bad) mov seta push and adcl xchg (bad) movsb fmuls mov xchg sahf xchg pcmpeqw add (bad) (bad) insl sub cmp (bad) sub imul xchg (bad) cltd adc add adc rex jmp jnp outsl rex.WX rex.WB lods xchg sbb or (bad) mov cld add xchg push outsb sbb rex.RX mov mov outsl scas add cltd xor icebp (bad) xchg xor xor or cmp divb outsl movabs (bad) or rex.WB sahf xchg xor lea outsl adc jp cld movsb in pop movslq and push (bad) std xchg pushq (bad) xor and xor jmpq repz leaveq (bad) gs movsl adc repnz mov loopne xchg mov xor and notl shrb sbb pushq gs sbb shll lods mov xchg push out lahf mov mov outsl fistl insb cmp jle (bad) cwtl adc (bad) stos (bad) mov loop rex.RX add xchg mov xor stos add mov ss xchg add movsb mov mov icebp and rex.RX mov popfq retq in rex.RXB jp sahf nop (bad) cmp fs mov (bad) rex.RXB rex.WR xchg jbe xchg cmp xchg pop mov loopne lods sub or movabs (bad) cmpsb (bad) add and (bad) xchg lret data16 mov (bad) in repnz jno mov mov lret cmp paddw rex.RX lock loope leaveq (bad) pushfq insl xor xchg int3 test jmpq xchg xchg (bad) cli gs (bad) pop (bad) push fwait repz (bad) cld stos jl cwtl pop pop lods movabs jnp sbb and xchg mov pop sbb sub rex.WR adc hlt movabs pop and pop mov nop enterq jmp mov jnp sbb xchg and (bad) sub retq mov xchg pop enterq scas (bad) mov (bad) pop mov jp (bad) xchg fwait pop cltd xchg ds cwtl fs jrcxz (bad) (bad) nop (bad) jne pop ja jnp sbb jg push movabs addr32 or xor add bsf cmp pushq (bad) outsb rex.WX sub xchg callq mov movslq loop divl rex.WXB push (bad) mov je mov out xlat mov (bad) or orl cmc or pop (bad) jb or stos mov rex.X jle (bad) jmpq push sti pop fs xchg int out popfq retq (bad) xorb xchg (bad) repz rcll repnz lret or stos sti imull movabs sub jmp mov (bad) cmp fsubrl jb sbb (bad) lock xchg add (bad) pop mov test pushfq jrcxz outsl int3 sbb xchg xchg shlb in flds callq add jo jnp mov mov mov push mov imul cmp fisubr xchg mov (bad) and pushfq jae jns leaveq mov scas lahf (bad) adc xchg or (bad) or movsl xchg out cld (bad) test movabs pushq (bad) jrcxz mov jge xchg pop push or xchg xor add mov pushfq or (bad) ds iret movsl mov test repnz and pop jbe pushq or (bad) xchg cmpsb mov sub jmp (bad) jrcxz cmpsl movslq retq push ja (bad) rex.R adc lock sbb or rex.RXB ficompl (bad) mov (bad) pop (bad) xchg or (bad) sbb xchg and sbbl ficompl int jno fdivrp cltd and push cmp rex.WRX out rex.WB mov clc sbb sub jb cwtl push addr32 jno nop movsl idivl nop (bad) or rclb std push xchg (bad) testl xchg rex.XB loop cmpl push jne xchg rex.B xor orl sahf out xor mov out iret cltd cmpsl in rex.WRX fisubl xchg sub cmp imul jne ja movslq xchg cltd cmp xchg data16 cmp repnz ja ss xchg pushfq shll pop sbb push imul pop sahf sub rex.R ss xchg and movslq xchg test enterq movabs in pop xchg fs rex.RB jge (bad) lret rex.RXB jne add mov sahf cmpsb rex.B lock push mov (bad) adc shll jne repz out js sahf imul (bad) push xchg sub out jmpq sar or test (bad) cmc addr32 rex fbstp (bad) and subl movsb adc push pop or (bad) rex.WR ds sahf js (bad) lahf imul popq (bad) int3 xchg pop rex.R cmp xchg (bad) (bad) mov xlat add mov loope jb stos imul xor rex.R out pushq gs mov (bad) (bad) rex.RXB movabs jb add or xchg retq mov mov lret fwait nop sbb notl xchg or sti rex.XB or jo jbe fwait (bad) and popfq cmp (bad) adc add ffree (bad) scas mov jmpq jnp (bad) negl jle test adc mov sar outsl sahf (bad) out stos pop rex.R (bad) (bad) mov (bad) pop xchg out cltd jne (bad) int rex.R fcoml mov rex.WR loop (bad) pop mov (bad) rclb insl (bad) xchg jmpq rex.RXB stc sahf jbe (bad) sarl rex.WXB pushq adc (bad) sbb lea or (bad) callq (bad) xor and jmpq push cmpsl fbstp imull callq lret xchg (bad) rex.RX insl cmp lahf sbb xchg (bad) xchg (bad) rex.WRX insb loop rex.WXB mov add and outsl ds fistp add push cs mov rex.W imul popfq lods (bad) jbe push (bad) retq movabs adc pushfq push jnp xchg adc jg xchg mov adcl xor or pop (bad) retq add xchg jno push mov ss (bad) sbb in (bad) rex.WRB xchg rex push sbb movsl jns rcrl sahf or lahf jp lret fimul pushfq rex.RB xchg xchg rex.WRXB rex.RXB stos rex.WB lretq mov sti lods xlat (bad) iret adc out mov mov lea sub lea (bad) (bad) (bad) sti pop push imul adc imulb xchg (bad) rex.WX popfq fsubrl fs (bad) insl lret mov sbb adc cmpsl rex.WRXB and (bad) mov (bad) fidiv rex.WRB sbb jno rex.RB (bad) rex.WR data16 sti jmp push jle jae xchg (bad) (bad) and jbe rcll insb (bad) out sub scas push movsl sub fwait mov mov mov jns test mov (bad) sbb push outsb gs mov cld (bad) jns jb lods mov movl mov adc ror mov cwtl or cmp je scas rorl enterq scas xor sub lea fisttp stos stos mov mov and rolb (bad) (bad) rex.WB jb mov (bad) lock xchg (bad) js and xchg rex.WR push jp,pn cmp fst int3 mov xchg imul (bad) out popfq movabs cmp xlat jae (bad) (bad) add (bad) pushq (bad) iret cmp cld nop fcoml xor test (bad) jg test cmp (bad) imul (bad) lock xor rex.WRX roll ror cmpsl xor (bad) hlt pushfq fwait pop cli in or jb,pt sbb pop imul lods add jp out adc fisttpll addr32 insl rex.WRX rex.WXB lock in xchg sub or (bad) fmuls jbe adc data16 (bad) xchg fwait rex.WX clc movsb xorl and ljmp rex.WRB jg imul (bad) xchg push add mov add jo (bad) je xchg rex.WRXB mov xchg in xchg insb mov sahf xchg jnp rcrl pop mov xor (bad) add cltd add fsts fwait (bad) sti (bad) push jbe jmpq rex.RB rex.W data16 (bad) cli lahf movsl push cs pop rex rex.WR movslq jmp in mov sbb pushq rorb (bad) cmp rex.WR pushfq retq push pop ja jge mov adc (bad) lret xchg ss add sbb mov roll pop mov sub leaveq imul xor es add mov scas adc add xchg xor loopne adc addr32 xor pop cmp movabs movabs rex.WX (bad) (bad) rex.WRX (bad) xor int3 std (bad) xlat sti xor xchg (bad) mov in adc leaveq lret fnstcw movabs (bad) pop rcrl imul jno in push rex.RXB loopne ficomp jrcxz roll insl retq xchg stos icebp ss sbb xor (bad) dec mov rex.WRB (bad) cmp popfq retq ds xchg xchg enterq push fmull movabs xchg add xchg js (bad) (bad) mov or sbb or repnz sbb repz (bad) cmpsl enterq xchg (bad) adc mov xchg imul fidivr cwtl sti test pop mov mov mov (bad) and rex.RX pop mov push xor xor movslq iret (bad) icebp mov lahf popfq pop rex.WRXB jmp xchg pushq xchg test sub cmpsl pop (bad) xchg ss (bad) sbb jno pop movslq pushq push retq adc mov out xchg movntq out lods (bad) mov ja xchg xchg xchg out pop sarb int3 sahf xchg movabs xchg sbb xor (bad) hlt addl je (bad) (bad) and insb movabs (bad) jb or outsl or pop cmp jl xor (bad) pushfq lock rex.XB pop xchg mov sbbl (bad) xchg negb nop (bad) lods and stos stos cmc pop popfq in (bad) pop jnp mov rex.WRXB xchg fimull xlat push cmp loop movsb adc pmulhw mov lret movabs pushq adc fsubrl cmpsl adc callq (bad) ja push rex rex.XB out nop rclb and mull std xor mov movsl test (bad) pop add and xchg fs pop lret fwait test xlat cmp std cmpsl test rorb xchg retq pop rcr jrcxz jg xchg movabs xor and shrl movsb (bad) pushfq push fwait out cmp or jne jno or xchg xchg ss pop rex.WXB fbstp mov pop ja nop data16 es rcr mov std xor rex.RXB cli lret int3 int3 rex.WXB lea jg xchg insl cmp js (bad) jge rcrl xchg cmp (bad) push (bad) rex.WR jno xor outsl cmpsb insl jg lahf jl out push rex.R movsl sahf in cmp subl (bad) andl xchg mov adc xchg ja (bad) insb pop fbstp add (bad) retq mov es xor cmpsl mov rex.RB xlat add loope loopne xchg nop sub push pop (bad) fwait sub rex.WRX rex.R je add clc loope mov movsl adcb je (bad) xor (bad) push pop jns lea hlt cltd stc fcomip mov jb xchg lahf jns xchg in shl (bad) sub imul lods cmc rex.WR in fstpl data16 push sbb lea and imul (bad) xchg (bad) mov cmc or fcmove sbb cwtl adc cmp fsin fcoml js fisubr hlt xchg loopne push cmpsl add mov (bad) or xchg int3 cltd hlt fsubrs (bad) xor popfq movabs adcl outsl sub xchg (bad) je stc sbb xchg jrcxz setne mov xchg movslq xchg movsb (bad) xchg hlt sbb cmpsl fist sub pop orb mov mov mov test fdiv repnz fimull push mov sub cmpsl test out sub push cs mov movsb xor jae retq mov xchg shrl mov retq repnz jmp cltd jg (bad) enterq std fs out scas add cmc lea sarb (bad) mov adcb pop push fcomps in (bad) xor and sbb iret jg xchg push (bad) cmp lock rex.RXB xchg rex.RX pop (bad) fadds sti or sub adc xchg rex.WRX xchg icebp (bad) (bad) or xchg (bad) xchg loope xchg data16 cmc stos jg mov fdivrs sub (bad) xor jae xchg (bad) int3 cmpsb incb and jae (bad) push mov movabs mov (bad) or xchg in adc (bad) std xchg and sub sub lods rex.WRB rex.R (bad) (bad) xchg stc push sub jle or xchg xor outsb retq repnz pop add xchg retq xor mov rex.WRXB xchg pushq sarl insl jle rex.WB cld pop jrcxz xor lahf sub (bad) xlat js jb (bad) rex.W ja mov (bad) pushq xor pushq jp add xchg fisubr sub (bad) sub cmp stos imul (bad) (bad) loop mov (bad) (bad) (bad) rex.WX enterq lods cmc push xor xchg mov not psubd movsl mov mov std adc (bad) loope or hlt rex.WRB adc pop (bad) (bad) xchg outsl stc pushfq (bad) or out jge (bad) loopne mov mov jge jg int3 xlat outsl xor xor pushq mov sbb and cmpsb jno rex repnz addr32 movabs adc sbb int3 (bad) neg xor rex.R (bad) es xchg adcl enterq hlt sahf imul mov cmpsl sub xchg mov jnp rex.WRB jo mov mov adc iret push gs sti and mov xchg rex.WX mov jnp xchg fcmovnu xor xlat sahf int3 movabs xchg xor popfq js (bad) lea rorb mov xchg (bad) movabs lret mov mov xor xor jmp (bad) sbb jg stos (bad) rex rex.WXB (bad) xchg or outsl (bad) xchg movabs int (bad) jmpq (bad) (bad) sarb xchg rex.WXB and jae xchg mov jge push or movabs jo fwait cli sbb movsb mov adc xor mov (bad) (bad) in xchg pop test out cmp (bad) xchg repnz stc mov mov lahf loopne (bad) (bad) icebp jae or xor mov pop xchg pushq adc (bad) and test rex.RXB or xchg divb jne xchg (bad) sub push jl adc xchg (bad) mov in sbb jae jno mov (bad) pop (bad) (bad) xorl sbb push xor xchg (bad) jne cmp add xor (bad) test (bad) mov sbb mov adc mov mov (bad) rex.B push and pop (bad) popfq xchg mov cmp ja rex.RB mov rex.WRXB (bad) xor out mov (bad) rex.W stc or and divb rorb jmpq or shlb jmp adc cld add mov iret in mov pop rex.RXB pop ja and (bad) ja sar (bad) mov lahf cmp std (bad) retq push xor or rex.WRB in and (bad) and loop data16 rex.WX (bad) (bad) adc jne push fisub rcll test sub xchg xchg lret xchg out jmp mov in adc mov je mov mov add (bad) or rex.WR leaveq in rex.WRX and (bad) sub or rcrl and or cmp fsubrl rex.WX (bad) push ds jp sahf pop movslq movslq in sbb sbb rex.WB repz popfq movabs sbb adc rex.WR rex.RXB rex.WR fstps mov (bad) cmc (bad) (bad) pushfq je test sub (bad) xchg fdivrp sub nop sbb sub cmpsb sbb push jg cmpsb pushq sub imul (bad) adc (bad) enterq push shr (bad) (bad) mov rex.WXB cmp jg stos lea xchg retq scas movabs (bad) popfq mov cmp cs cmp mov pushq rex.XB rex.WRX jnp rex.RX rex.RB (bad) pop stc and (bad) (bad) movabs rex.WRXB add callq mov (bad) (bad) (bad) sub jl (bad) gs sti loope (bad) xchg adc mov jbe retq lea fucom cmpsl (bad) sahf (bad) test imul movabs and movsl rex.RB popfq jns ss es imul sub pop jmp or pop callq fnsave (bad) lods xor (bad) jne and movabs in jg lea (bad) pinsrw sbb mov (bad) leaveq movabs orl retq mov rcll and (bad) cmpsl (bad) cmp mov add mov test sahf mov pushq out nop xchg cld mov repnz (bad) sbb xchg and rex.B xchg (bad) rex.WXB popfq movl (bad) mov sahf rex.XB (bad) pop xchg notl out mov movsb mov (bad) xchg (bad) imul cwtl rolb pop out (bad) (bad) cmc in (bad) (bad) movabs (bad) sbb xchg push xchg lods lods (bad) scas or or test fs fsubrl pushq lret xchg push pop pop movabs xchg mov (bad) cwtl in rex.RXB rex.R rex.WRXB int3 add xchg addl or sbb add (bad) jne mov or (bad) test out jne cwtl jno in rex.RXB testl rex.WX iret ja cmp hlt xchg xchg callq in cmpsb fisubrl (bad) xor (bad) (bad) mov pop sbb (bad) in sbbb retq xchg sub pop and jae leaveq (bad) rex.B jnp add or xchg mov and je retq pushq xchg sbb adc ja mov sbb (bad) mov pushq enterq sub (bad) xchg flds rex.WR rex.X mov adcb stos lods cmp xchg loop fldz data16 (bad) xchg (bad) mov adc rex.WRXB (bad) xchg outsl in imul stos cmp out mov jle gs rex.WXB pushq cmp push add hlt nop push cs push je (bad) imul fdivrs xor jrcxz and sbb (bad) adc or movslq int fs movabs adc (bad) (bad) imul rcll std fsubp cmp cs scas in (bad) (bad) mov shl (bad) sub rex.WX out (bad) (bad) repz add insl (bad) mov pushq push mov stos rex.XB fs movsl loop (bad) clc test (bad) sbb imul rex.W jae or lods xchg retq mov sbb fwait adc leaveq retq (bad) scas (bad) rex.X (bad) push fs (bad) sahf (bad) adc (bad) xchg sub rex.WB sbbl jno js cmp (bad) ja adc lret cmpsb in leaveq xchg jae in push lods fisubrl push scas frstor movsb loope xchg fbld outsb and cmp sub rex.X jge mov (bad) add fcomp sti sbb fwait test (bad) rex.RXB mov scas imul jle mov fsubs mov cwtl mov jno push (bad) fmull lret std stos scas (bad) adc loopne mov fisub pop adc in rex.RB int lods xchg xchg sbb movabs (bad) mov popfq cmc and (bad) (bad) loope mov (bad) rex.XB movsb sub imulb (bad) (bad) xchg (bad) stos ss loopne mov (bad) mov (bad) xchg lcall icebp (bad) xlat jmp sahf mov ss xchg (bad) scas (bad) or notl xor jae leaveq jmpq (bad) xchg movabs sti mov rex.WXB ds xchg xlat mov mov (bad) xchg rex pop xchg imul movabs pop imul nop fstpt rcr mov movslq cli mov fistpll adc push movabs sub ss imul (bad) push xchg (bad) jb adc retq in movsl stc cmp mov cmc rex.WRB lea jge mov add xchg sti xchg mov in xchg movsl popfq xchg (bad) and mov cltd mull mov ficomp cmp imul (bad) (bad) loope (bad) int test mov (bad) add mov cltd fcomi sbb int (bad) sarb sub sbb sub jrcxz in jp sub mov scas cmpsb loop xchg mov pop sub jp fcoms cmp xchg rex.XB jg and fsubl loopne outsl (bad) mov leaveq (bad) jno movsl cmovb stos cmpsb sub xchg or cmpsl adc insl divl sarb rcll cmp xchg push lahf insl add xchg iret mov cmp cwtl cld rex.WX or notl jge sarb addr32 out xchg outsb fistl insb add push push movabs xchg jno pop imul mov (bad) sub sahf (bad) sub clc leaveq movabs or movsl sarl movabs jge and in xchg cmp pop xor loopne cmpsb jg xchg or rcl sub cmp test movslq nop xchg adc and stos clc sub add (bad) rex.WRX sub mov mov push push mov and rex.X xchg mov sarb rex.RB sahf xchg lea (bad) cmp pop jbe divl mul rorb loopne sbb cld jbe rex.RB (bad) mov sbb add or (bad) rex.RB mov insb sbb and loop,pt mov jbe lock (bad) pop sub mov pop jbe xchg mov pushq add (bad) insb sbb (bad) out jmpq rorl pop rex.RXB jne test sbb lahf rex.WX rex.WXB xor cmpb mov pushq jns mov cmpsb jae xchg std fisubl (bad) andb xchg add pop xlat adc outsl mov sub or jge xor mov pop rex.RXB push movslq notb rex movabs jmp adc mov insl (bad) xchg mov mov cwtl jmpq (bad) jne mov (bad) and xor xchg nop sbb or data16 mov mov outsb mov (bad) or leaveq stc and (bad) mov and mov xchg jo adc sub subw fwait jg sbbb jle mov rex.WXB cld xlat xchg add andb outsb popfq or xor add and sub and shrl in xchg add loop add and leaveq mov (bad) mov mov movsb popfq sbb (bad) and push push mov (bad) jnp rclb enterq gs rex.WRXB rex.WRXB (bad) mov jp mov mov (bad) adc lret (bad) sbb mov outsl (bad) scas add xchg add retq sbb cmpsl (bad) ss jo icebp xchg mov sbb mov xchg xchg pop jne and retq adc rclb xchg xchg pop add xchg lret je xchg jae fwait or or ja (bad) xor rex.WX cmpsl gs insl out fwait negl xchg pop xchg rcrb rex.RXB mov mov add mov mov andb ja xchg icebp rcrl rex.RB in mov xchg insl imul negb xchg mov lahf rolb andb xchg adc jnp xchg (bad) pop xchg and jmp lahf stos xor rex.WXB (bad) pushq xlat jmp mov mov (bad) lretw cmpsl enterq rex.WR xchg adc test mov or add or (bad) xchg (bad) mov repnz rex.WRX jno movabs out retq (bad) or rorl mov imul sahf sbb add pop mov add ficomp repz out push sbb in ja adc xchg sub add hlt mov jns rex.WX std jnp ja adc imul fstpt cmpsb outsl test and (bad) xchg rcll loop (bad) pop sbb adc add pushfq jbe mov cmc (bad) enterq cltd lret outsl xchg (bad) sub cmp push test je fs rex.WB retq pushq xchg insl sbb loop (bad) sub lea mov sbb xchg ds sub test pushfq callq rex.WX xchg ja pop sub idivl (bad) or xchg sbb push callq outsl or repz xchg ja cmc and xchg pop icebp xchg nop add cmp popfq fldenv cltd (bad) (bad) (bad) add mov loop push fsubrl mov rex.WXB xchg cmp and pushq rcrl xlat and test xor xchg pop and in mov enterq rex.RB subb movsb xchg (bad) fisubrl callq rex.R add mov xor movabs sbb lret add rex.RXB sub (bad) test scas mov pop fwait rorb stc cmc xchg (bad) sub mov lret jmp movabs (bad) cli outsb pop cwtl sub rex.WXB rex.WX (bad) or xor mov rex.WR cmpsl std leaveq (bad) xchg fs jp sub lods adc adc xlat jb mov retq mov test rex.RXB rex.WX jge mov adc je cmpsl or pop jrcxz or (bad) loope jl xchg and int xchg cltd xor mov or push je mov sbb cwtl xchg in mov rex.RXB or stc xchg fistpl (bad) rex.R (bad) cmp sub shrl fsub cmpsl out cmp rorb lret popfq (bad) (bad) callq xchg fcoms shlb cmp ja movabs movabs cmc cld pushfq jg scas pop int3 (bad) (bad) sbb pop or cmp retq movsb imul stos xchg lahf rex.X lods jge nop mov rex.WX loopne mov leaveq (bad) mov iret add mov xor lea sub push cmp sub jae jb adc (bad) xor int and adc cmp xchg (bad) (bad) xchg movabs in (bad) data16 xchg lods movabs sahf outsl retq xlat jo cmpsl xchg gs xor rex.RB fiaddl cmp or or int mov leaveq imul fstl mov push (bad) or roll leaveq sbb pop mov mov scas (bad) (bad) out mov movabs jge cmp bnd cmpsb xchg (bad) (bad) add add add pop (bad) lahf mov movsl loopne lret mov rex.WRB (bad) stos xchg pop and (bad) (bad) jmpq lahf xchg add fsub pop ss (bad) je cmpsb (bad) (bad) mov lea divl jp pop xchg mov pushq sbb jns and fstps rex.WB cmpsb nop insl jmp mov adc (bad) mov mov xchg icebp add cmp jne pushq xchg sub rcr mov (bad) (bad) xchg out shl js (bad) sbb rep mov mov jnp jb (bad) icebp rex sti xorl xor out out rex.WRB test loopne fwait mov loop outsl lods movsb xchg mov cmp (bad) and xchg mull push (bad) (bad) (bad) jbe rclb je cli sbb lea xchg (bad) ja mov mov and idivl rex.WRX rex.WRXB xchg scas fldcw or push leaveq xor jrcxz pushfq xchg enterq shrl adc loop mov xchg lea and (bad) loopne fcoms rcrb shlb mov xchg xor (bad) rolb sub rex.RX movslq (bad) insb mov add push rex.B je adc xor mov fcoml mov sub pop ds and rcrb orb fcmovb popfq jmp mov xchg (bad) add and pushfq es fcomps adc mov sbb jrcxz repz mov (bad) mov fiadd mov and jp mov movslq (bad) retq or sbb (bad) (bad) ja sarb sbb stos mov xchg sar imul (bad) insb (bad) xchg xchg add push gs add and add sti out jrcxz xchg xchg fdivl rex.RX push lods shrl in mov mov dec cwtl (bad) push rex.RX fwait or sbb mov jmp mov xchg stos lock hlt lods pop xchg callq jb mov (bad) jo (bad) movsb out cmpsb imul xor pop movsl (bad) push (bad) push cmp movabs xchg in (bad) fistl push idivl adc xchg (bad) cs (bad) sub fsubrs (bad) cmp sbb mov movabs sbb std std scas (bad) fcomip callq ss loope (bad) test pop (bad) idivl xchg retq (bad) (bad) test cmpsl jne movsb ftst or movabs movsl xchg xchg movabs (bad) lock xchg lods push adcb cltd (bad) sbb stc (bad) idivl cmpsb out test outsl rex.B push (bad) push rex.XB out lods sbb cmpsl loop lods in out xor mov repnz fsub xchg negb rex.R or mov and mov gs sti cmpsl movsl (bad) mov xor (bad) stos cmp scas adcb xlat stos decb fidiv and jmp adc pushfq mov (bad) (bad) mov push mov in (bad) xchg xchg sub cld jnp push lret push scas jge mov movabs rex.RXB mov lret (bad) fmuls sbb movslq or outsl mov out or fcomip retq ficompl pop mov (bad) sub adc iret jg rcrl (bad) insl xchg cltd movabs add callq cwtl hlt pushfq mov and xchg movsb xchg in xchg jb (bad) adc sub xchg sub (bad) (bad) subl insl mov (bad) movabs (bad) (bad) (bad) add cmpsb (bad) int3 notl in addl cltd xchg mov out int rex.WB (bad) rolb jns out push sahf or push cs (bad) (bad) rclb gs pushfq rex.WRX xchg movsb callq (bad) retq loop mov popfq xor stc xchg or pop rex.RX in sub retq (bad) pop add jg (bad) and fstpt rex.WR and (bad) packuswb (bad) in stc scas xchg cltd xchg xlat jle movabs rex.RB mov pop adcb sbb out clc movabs jb movabs jmp (bad) xchg jl,pn sbb in xchg cld sbb sti xchg fs lret mov xorl test callq loop cli xchg lock xchg xchg jg jmpq xchg cmpl pushq pushq movabs (bad) movslq and adc jmp cltd ja pushq adc sub add je loopne shl insb xchg stos fwait (bad) rex.XB addr32 nop hlt mov (bad) (bad) loop nop push rex.X sub cli retq rex.W test cmp jb jnp jo push mov (bad) (bad) std fimul push push (bad) andl ficompl push ja add movsl xchg scas outsl cltd (bad) mov cmp xchg and (bad) movsb stos and pop pop xor xchg (bad) popfq (bad) mov jnp mov callq pop xchg mov pop xchg fnstsw fs (bad) sbb and xchg (bad) jle stos ficom cmp push cld xchg fldenv int decl xchg lret subl xor rex.X pop pand movabs rcrl pop xchg sub insl mov jb pushfq (bad) jg out (bad) adc xchg mull movsb sub xor jg rex.WRXB adc cld xlat and out nop jmp xor cmp fbstp (bad) jae cwtl push xor xor xchg cwtl andl cmpsl js cmova xchg jg pop sbb mov mov (bad) and adc notb jbe xchg push cwtl test mov mov cmp movsb (bad) (bad) imul jo xchg cld xchg stos iret (bad) jne sahf (bad) xchg mov (bad) sti (bad) rex.XB movsb movslq xchg insl and or adc sbb insl rex.WXB cmp mov cmpsl pushfq mov (bad) retq leaveq xchg nopl (bad) xchg test (bad) jl (bad) (bad) add rex.RXB popfq xchg lods (bad) sbb rex.XB fisubrl mov (bad) jne sbb mov push cmc cwtl cld movabs hlt pop and push movsb in xchg or lods pushq push movabs jl rex.WX rex.R outsb xchg scas cmp jle rex.WR and (bad) pop jge rex.RB mov (bad) push lock movabs and (bad) mov mull orl xchg (bad) fldcw and rcll jrcxz pushq rex.WR sbb (bad) (bad) retq jge loopne lcall pushq es xchg (bad) (bad) cld pushq loope imul andl mov iret fcoml (bad) jbe mov fs rex.WRXB and pop movslq xchg sahf (bad) movabs movabs pushq movabs lods sbb mov and test and pushfq xchg pop jnp adc mov rex.RXB (bad) cmp sub xchg in (bad) push xchg pop sub sbb mov leaveq cmp mov js mov movsb jnp jp movslq xor test imul scas (bad) int (bad) shlb sbb fstps xor rol jge adc push (bad) outsb callq (bad) movabs rcrb fs mov out sub (bad) movsl outsl retq std insl sahf mov pushfq pushq rex.XB (bad) (bad) rex.WRXB pop je (bad) stos iret sbb jns xor xchg mov push vpsubq scas and mov (bad) pop fs je lock (bad) (bad) ja in out jo pop (bad) jnp push sub data16 mov push and mov or rex.WRXB repnz (bad) data16 loope push push or (bad) mov (bad) and (bad) sub xchg in cmp add rex.WXB lock shrb mov in vmaxss fldl mov test xlat jge fwait lahf mov jnp out xchg (bad) and sub mov mov rex.WXB clc xchg in rex.X cmp (bad) loopne mov push js adcl cmpsb cmp outsl rex.WRB (bad) and cmpsb (bad) fcoml enterq popfq stc mov or pop mov mov cmp rex.RB sbb hlt xchg movsl movabs (bad) xchg sub lods int or jmp scas pushq ds and lret xor callq mov retq jrcxz fwait mov pushq xchg ss push mov sti rex.W cmp jge xchg in out xchg pop subb int ja jmpq cli pop gs gs (bad) (bad) (bad) adc pop xor retq in pushq xchg jb (bad) imul rex repnz or movabs and movslq rcr in movsb lods xchg or sub cli or (bad) cmp out (bad) xchg and xchg sahf mov add xor insb retq xchg jnp movabs xor (bad) or add xchg rex.WXB lock pushfq push stos sarl (bad) jg hlt xchg push and adc fisttpll icebp movabs pop push (bad) (bad) adc xchg (bad) push mov and sub (bad) sbbl cld ficom divl stos cmc push pushfq fdivrl sub (bad) mov outsb push (bad) movsl mov mov xchg outsb xor nop callq push jp in jne mov push insl int out in jmpq mov lret imul push std fbstp mov popfq popfq mov imul cmpsb subb or mov in rex.B test mov add mov addl test mov fisttpll and xor ds (bad) lea cmpsb outsl (bad) add je and cmpsl xor sub jbe cld enterq mov je (bad) outsl push pop cmp push xchg xchg mov movsl jnp pop sbb es scas and pop lea xor out (bad) in iretw (bad) std sbb (bad) xchg jle cmp jnp mov (bad) jns xchg popfq (bad) cmp outsb (bad) add pop add rex.WRB je rex.WR xchg (bad) (bad) adc xor movsb xlat xchg rex.WX sbb outsb fwait (bad) cwtl sahf push sahf jrcxz (bad) movsl (bad) jno jge rclb (bad) mov fdivr fwait xchg adc cmc push shrl testl fdivrs (bad) (bad) pop (bad) pushfq cmp insl pop lahf subb mov xchg adc test leaveq and imul mov ja out (bad) or orl push jmp pop mov jnp (bad) add addb decb and mov xchg (bad) and add cmp bnd gs or lea retq in movabs mov xchg and and nop jge imul scas sub lods cmc (bad) rex.WRX movsb xchg push lods push popfw xor sbb rex.WRB ficomp (bad) mulb xchg cwtl lret (bad) lock movslq rex.WR test sbb push or pushfq gs pop rex.WXB leaveq popq sub pop pop pop cwtl loopne jmp ja adc or (bad) xchg mov rex lret xchg mov pushq notl sti ss sub mov cmpsl cmp lret sbb (bad) (bad) (bad) rex.WX mov mov xor shrl pop xchg pop in xchg push (bad) leaveq lea addr32 (bad) cmc rex.WR pop iret jb cmpsb rex.WRXB sbb xor (bad) movabs pop movsbl add xor sbb fcompl data16 lret rcll rex.WRXB mov stos jbe mov pop (bad) lods (bad) sbb lret (bad) mov ficom (bad) insl jbe rcr pushq mov hlt cmp (bad) (bad) xorl pop sbb pushq sbb outsl push mov xchg je xchg pushq xlat cltd mov lret nop xchg sbb int3 rex ss mov out and mov out (bad) sahf rex.WX cmp rex.XB sahf rex.X push sarb testb pop scas (bad) rex.WX int3 je cmc ds fbld movabs (bad) (bad) outsl mov and lods cmp xchg and jmp jne sahf mov sbb in mov sub adc adc (bad) pop out push sbb jo lret mov incl mov insb int3 mov fnstenv pop insl (bad) sbb (bad) movabs or push lahf (bad) rex.B std jno (bad) jnp stos rex.RB imul in movabs mov adc mov icebp fnstcw mov movslq out mov rex.WXB sahf in xor sti and rex.WRXB fidivr (bad) push (bad) rex.RXB in (bad) scas pop rex.RXB fwait cld rex lock mov enterq push xchg push cvtdq2ps xchg rex.WB mov fs xorb sbb pop jg sub movabs jb (bad) mov sbb stos sti sub imul and ds stos sbb rex (bad) jnp (bad) cmpsl rcrb mov add (bad) or xchg mov cwtl mov (bad) jb mov pop retq lret push push (bad) stos mov rorl adcl adc popfq subl xchg rex.RXB nop ljmp rex.WR rex.WB ja stc rex.WRB (bad) xlat sbb push movb int cltd add push gs movabs xchg rcl mov add enterq rex.RX je jbe fadd xchg gs and iret xchg (bad) sbb mov pop jle movabs push rex.WX nop adc xor xchg (bad) scas or out (bad) xchg in (bad) cltd mov mov push (bad) add mov mov jmpq sub int mov (bad) je shll (bad) int3 in jg hlt xchg cmp add jrcxz pop (bad) and rex.WX (bad) (bad) mov rex.RXB (bad) jp (bad) push sbb mov fwait rex.X sub lods enterq push rex.W pop pop frstor sbb stc mov movsl xchg or sbb retq mov negb cmp packuswb fisubrl or std (bad) pop push repnz sbb cmp sbb mov jg int mov icebp (bad) out (bad) xchg out popfq cmpsl sub xor (bad) mov (bad) (bad) mov mov mov cltd push sbb ja xor and add stos sti sbb lock movsl (bad) sub cmpsl (bad) lea movslq rex.WRB fildl loopne sbbl mov or (bad) xchg (bad) mov or loope cmp mov fucomip cmpsb and pop mov iret addr32 int fsubs mov loope mov cmpsb pop (bad) cmp cltd movabs rsqrtps and jmpq movsl mov imul rex.WX xlat test xchg pop xchg sub repnz out push pop movabs mov retq (bad) in rex.RB jae (bad) (bad) (bad) add (bad) iret rex.R and cmp sbb jg jo (bad) push (bad) xchg repz jp (bad) std xchg and jbe push mov loope push (bad) fidivr xsave mov retq xchg rex.WX fisubrl popfq cmc std (bad) lret xchg mov jp xchg (bad) lock mov out mov mov add adc xor and rex.RX rex.RB mov hlt jnp pop jnp insl sahf (bad) (bad) mov movabs sarb cmp negb js push xchg cmp fxch rex.W out out cltd xchg adc cltd loope push sbb imul iret mov add pushfq je jae rex.WXB rex.WR (bad) fidiv (bad) xor rex.RX xlat sub jp sub ss sbb fisttp xchg (bad) mov test (bad) fcompl mov shll (bad) jrcxz fsts cld xchg add (bad) jo xchg addr32 jns rex.R xchg pop iret shll test xchg mov fwait sub out xchg mov rorl (bad) rex.XB int3 xchg jp sub xchg mov cld hlt xchg xchg mov add (bad) nop sbb scas test fwait cmp fdiv rex.WB mov movabs jmp xor mov fstps push xlat xchg iret rcrb je and clc pushq (bad) (bad) cmp mov cltd adc mov hlt sbb sahf push in jae push movabs mov gs mov or (bad) retq stc cmp stos jmp (bad) repz or and mov stos mov mov mov (bad) xchg lret and rex.B rex.WR jno sbb jge (bad) xchg cmpsl (bad) fwait pop js rex.WRXB jmp rcrb movabs scas addr32 xchg (bad) push callq pop (bad) xchg or es (bad) (bad) cmpsb lods out stos je xchg add xchg loope sbb xchg fwait lret pop out mov test rclw jo (bad) xor outsb and imul xchg mov (bad) jg (bad) or outsl and scas or xchg (bad) mov cld (bad) jle (bad) iret or xchg jl jne sti xchg xchg (bad) (bad) movsb sbb (bad) rex.B pop fdivs pop pop notl iret mov mov pushfq xchg jmpq lret and out jge pop pushfq adc xchg mov mov sbb jbe pop loop xchg imul mov and out int ficom xor (bad) xchg loop and sbb in (bad) pushfq imul in jg,pt stos int3 xor cwtl movl out jp shll pushfq xchg callq jno jp mov xorb (bad) rex xchg sbb and sub test push cld test leaveq cmp add rex.WRX loope xchg clc jmp mov cmc xchg movabs (bad) stos (bad) (bad) mov jle sbb cqto xchg mov and jmp fisubl cmp popfq cmc xchg callq (bad) jae mov insl xchg xor nop xchg cmc rex.RXB rex.RXB rclb sbb imul jae mov movl jne xchg lea jrcxz xor je rex.RXB cmpsb (bad) xor outsl rex.R jno lods pop mov xchg lea idivl test movabs scas int ja xchg jns (bad) insl push sbb add popfq lahf in xchg cmp (bad) sbb xchg es (bad) push rex.RB sub add test and mov (bad) cmp cld xchg xchg or popfq xchg fldenv je hlt xchg and retq cmp (bad) test loope rex.WXB jle rex.RB sub xchg (bad) mov (bad) (bad) (bad) movabs cmp mov rex.RXB cmpl pop jb cwtl (bad) sahf mov (bad) jbe cwtl imul rcr imull mov rclb cmp pop jb rex jge test rcll test jmpq test jo (bad) mov in loopne outsb scas out scas mov pop mov or push mov add stos xor or lahf rex.WX and add rex.WX jg xor add mov cmpsl int adc cmp adc int push mov in imul adc jbe (bad) in jne mov xor fisttpll jl (bad) lods (bad) jno lea pushq (bad) mov ds sbb stos rex.X jmp pop fidivrl xchg xor stos or scas mov movabs sahf lods rex.WB out fldl mov or mov (bad) jo rex.RXB decl sbb jnp outsb imull (bad) rex.RB jno pop xchg outsb jb add in add cwtl jmp jnp retq mov movl adc iret movsl (bad) cmpb pop (bad) fimull pushfq and fnsave popfq imulb outsb (bad) sbb gs pop (bad) jp pushq xchg (bad) data16 rcrb xor (bad) xor push (bad) icebp mov and mov je (bad) fisub sbb pop sarb or (bad) pushq out pushq rcrl lret mov mov ror xchg test lea (bad) mov gs psllq and lea xor (bad) xchg scas xchg (bad) mov cli lret fwait xor mov shlb cmp popfq nop sbb sub jnp adc sub rex stos mov mov leaveq leaveq pop addl rex.WXB mov jns (bad) mov sub mov add cwtl xlat mov xor cmp cmc (bad) (bad) mov sbb pop adc mov iret xor sub or int negl or xchg pop cltd mov mov mov out mov push pushfq sahf addr32 sub (bad) adc sub stos jne (bad) adc sarb lret xchg stc and pop (bad) (bad) xchg stos (bad) (bad) outsl insl (bad) and fistpll mov sti add add int in rcll out pushq pop iret rex.R add outsl jns (bad) int3 pushfq mov scas movabs (bad) or adc (bad) jrcxz rex.WRB ja jo rex.WX (bad) jrcxz (bad) xor xlat mov jne rcr loop cmpl sahf ficom rex.WX pop imul xchg and rex iret cmp xchg outsb (bad) mov scas out xchg callq in (bad) jmp fmull mov rex.WX (bad) and (bad) imull lea gs outsb imul (bad) (bad) (bad) jl rex imul ss (bad) pop mov cmp (bad) (bad) mov sti enterq fs cltd (bad) (bad) and lahf sub mov xchg out fnstenv rex.RB jp jle vcvtsd2si scas rcll or (bad) cs (bad) decl clc (bad) movsl (bad) pop (bad) pop es fstl push xchg and or sahf or push (bad) repz adc rex.WRX jrcxz or and mov mov mov mov push rcl rex.RB rex.WR sub mov iret int (bad) pushfq or ja pushfq popfq push out (bad) jmp add ficompl rex.WX fs rorl (bad) jmp xchg movabs pop push imul (bad) (bad) imul adcb cmpsl loop test nop rex.WRXB (bad) repz mov xor loop (bad) and pop mov sbb std (bad) (bad) and xorl stos xchg and cwtl rex.WRXB out xchg loope sub imulb xor imul mov ficoml repz xchg lea mov add xor pushq or mov fisttpl pop add out jae sbb cmp rex.X lea movabs (bad) leaveq sub (bad) stc xchg pushq loopne add pop xchg mov add (bad) pushfq loope je fs xor lea int3 xchg ja push jl movabs push pop jmp xor jbe repz and xor xchg add (bad) movabs roll (bad) (bad) or fs mov cmp lock xchg pushfq mov retq and and callq (bad) sbb (bad) out sbb jbe xchg rex.XB (bad) jrcxz (bad) cltd or sbb sub sbb enterq and pop and sbbl imul fisttpl test ss iret rex.XB pushq fwait mov retq jns (bad) cli (bad) add jg adc pop (bad) test jrcxz pop and rex.WRXB mov callq xchg (bad) push jg rcr (bad) sbb movabs (bad) imul pushfq (bad) fs pushfq xor sbb imul (bad) movlps push push xor (bad) (bad) js jbe out pushfq add iret jae xlat jno iret je sbb xchg xchg lea movabs (bad) out add (bad) (bad) rex.RXB (bad) movabs adc mov adc sbb rex.XB shrb mov movslq and (bad) cwtl test xchg imul cmp sti (bad) push mov add adc sahf (bad) rex.RX (bad) rex.WX out sar rex.WRX cwtl roll lahf xchg sub cmp hlt (bad) (bad) icebp xchg test leaveq (bad) cmp insb xor rex orq lods xchg mov mov cwtl xchg xlat mov (bad) out jbe retq (bad) sbb push scas test xchg movsb movabs movsl jg leaveq movabs (bad) pop xor pushq outsl (bad) or rex.WX (bad) mov (bad) sub rex.WRXB mov sub xlat movsb or pushfq cmp cmp hlt pushfq xchg mov out movsl (bad) mov sets jl,pt xchg gs sub mov pop mov (bad) int3 xchg (bad) or pop sti jmpq ja xor andb (bad) insl or xlat jnp mov cld (bad) and push fcmovnb mov rex.RXB lock rex.WRB jmpq in loop (bad) fcoms sahf xchg xor insl ss stc xchg or cmpl jns (bad) rex.WRX (bad) callq xchg rex.RXB mov (bad) xchg sbb scas mov (bad) or stc add data16 out lods push (bad) cltd sbb (bad) mov and int3 mov xchg jo gs xchg mov in cs in xchg outsl mov xchg jl xchg adc sub (bad) cwtl add (bad) or xchg mov pop test andl callq movabs push idivl push xchg hlt rex.WX pop sbb push icebp addr32 xchg xor cli loope andl sbb or (bad) sti shrb xchg cmp push insl xchg rex.RXB xchg cmp add lret (bad) movslq outsb xchg mov (bad) (bad) xor xchg int sbb je or cmp mov and xchg int mov rex.R gs test jo and xchg sub cmp (bad) adc mov xor sbb shrl data16 xchg loope adc xor and xchg pop imul notb jle cmove nop jne fmull stc xchg pushfq lahf mov sbb push add push hlt rclb and mov xchg fadds pushq popfq stos or mov (bad) jae cwtl out enterq (bad) (bad) sub xchg shrb push and callq (bad) mov (bad) rex.WXB xchg cmp (bad) (bad) in (bad) repz add lea sbb cmp jne je and icebp movsb jg lret (bad) mov lahf rex.WR or xchg add ss jp mov pop popfq mov mov in xchg (bad) jae mov imul lret adc negb movsl jne mov rex.WRXB sub leaveq andb or xchg fnsave loope fs nop (bad) scas (bad) sbb and push mov pushq xor adc sub test jmp jns ficom loopne jb or sbb pushfq (bad) mov cli shrb out movsl pop adc xchg (bad) ss in rcrl mov popfq sub push enterq (bad) hlt sar (bad) testl imul movsl rex.RX movabs sahf outsb (bad) (bad) rol or push fsubl and (bad) in cld movabs (bad) callq (bad) xchg (bad) add (bad) xchg (bad) retq mov rex.RB xchg sahf in mov mov (bad) mov pushfq sub out lret (bad) rcrb (bad) jne sbb mov mov lock (bad) jbe sahf rorb int3 xchg out rex.WXB xchg (bad) mov or xor xchg movabs clc pop (bad) std xchg mov rex.WRXB or mov in mov icebp xchg rcr sbb (bad) mov (bad) xor pop rex.WRX rex.R jno push xchg rex.XB lret in cmp cs in rex.B add xchg jno xchg mov rex.WRX rex.WRB in outsl (bad) xchg mov fildll push shll jrcxz xchg out rcrl insl rex.RX insb xchg rex.WB add (bad) test lods sbb (bad) fdivrs movlps rex.W xchg subb mov movsb fistpl out fadds pop stos or fdivrs mov sarb (bad) pop flds sbb lods imulb out mov jb xlat push jge,pt adc xchg mov and sub push (bad) movsl test ss cwtl (bad) movsb adc sbb cltd (bad) movabs (bad) jrcxz mov xor jmpq rex.RX (bad) sub (bad) pop in push nop repnz pushfq (bad) pop (bad) add sbb rcr (bad) (bad) (bad) push jo addr32 stos mov adc push outsl xchg rex.R adc xchg icebp sbb rex.WRB cmp push xchg mov imul mov mov or adc xchg and frstor (bad) jnp rex.WRXB jne cmc fdivs movslq fstpt xchg mov xor xchg jmp and fldenv mov rex.WX cmp xchg nopq adc add (bad) (bad) xchg cmp mov xchg mov push out or (bad) lods sbb pcmpeqb jge adc mov xlat pop or clc iret jne mov cmp cld adc cmp in mov xchg icebp fbld mov xchg jne xor xor or icebp out xor rex.WX (bad) rex.WRXB rex.WXB jb imul sbbl ss repnz mov rex.R xor (bad) mov or test xchg movsb movslq add iret popfq or leaveq jmpq pop xor push jmp cmp movabs (bad) or nop mov sbb xchg xor (bad) movabs xchg (bad) imul sub add xchg movsb lods (bad) add xchg cld push (bad) popfq sbb cmpsl pop pushq (bad) mov pop xchg xchg push cmp addr32 fimull sbbl add pushq sbb mov mov adc jmpq pop cmp movabs mov in push (bad) or pushfq rex.WRXB or addr32 xchg scas cmp frstor xor xchg callq add pushfq cmp jno insb xchg stos and jns div sbb js jle pop loopne push pop pop repz iret jmp shlb fsubl fwait in pushfq insl (bad) shll (bad) rex mov (bad) sbb xchg cli push fistp cwtl movabs and (bad) loopne rex.WR jmpq movabs mov and out insl rep add movabs rcll (bad) int3 sbb fwait xor mov cld (bad) (bad) adc testb jb xchg mov pushfq add push jle mov loop jmp pop cmp outsb mov fs (bad) out sahf (bad) pop negl je repnz lahf hlt outsb or es fsubrs and mov (bad) enterq leaveq sub jp imul cmp sahf (bad) hlt add xchg negb mov push mov adc pushfq adc lods jno xor xchg fcoml rex.WX lock (bad) rcr sbb fidivl mov ss jns add fstpt divl xchg cmpsb push and (bad) xchg pushq retq push and out xchg (bad) jo in sub (bad) fdivl or xchg mov lods jno xchg out nop add std (bad) out cmpsl (bad) (bad) scas xor rex.WXB xlat rex jno (bad) and jge xorb fsubs or lock cmpsb mov (bad) outsb cmpsb rcll mov (bad) jp jl push adc fstps (bad) sub hlt nop lahf xchg sbb test pop callq rex.WX rex.RB (bad) rex.RX mov (bad) sub and pushfq cmp (bad) stc xchg mov pop jno mov fisttp and stos cli add (bad) repnz pop ja sbb (bad) xlat pushq enterq xchg fidiv xor lods mov jp add mov pop jae sub push movsl jns xchg addr32 fnop (bad) shrl xchg (bad) rex.WXB pop insl loop nop test int fwait imul lods hlt add xchg decb xchg adc rex.R loopne in xor leaveq (bad) repz pushq callq cmpsl mov jne jo jg jmp cwtl shrl cmpsl es fisttpl mov rclb imul jle xchg fidivl jnp orl loopne sahf rex.WB movsb add cmp mov (bad) sub data16 xchg lods cmp xor (bad) push rex.WXB xchg hlt lock lahf rex.WR jmp xchg movabs xlat push sti sahf xchg xchg mov sbb sub stos jmp gs mov in cmpsb test xchg jmpq rcrl xchg rex.RXB xor (bad) bt lods rex.RB rex.R add fstpt fwait jnp imul (bad) incl rex.W (bad) mov xor rex.WX mov (bad) xchg adc leaveq int gs imul cld xchg je (bad) xchg loopne xlat cmpsl pop in xchg xchg pop (bad) repnz xchg rex.RX (bad) imul out xchg out rex rex.RX addr32 adc adc outsb xchg clc xchg cmpl pushq out mov adc lea scas (bad) xchg fisttpll pop push adcb leaveq iret imul imul rcll cs add rex.WB push cwtl (bad) movsl jmpq int3 leaveq add xchg jo or (bad) mov jge sti xchg lret rex.WRX loope (bad) jnp idivl int3 jb mov or push loopne rex.XB movabs (bad) (bad) movabs or fsubrl test ja cmc pushfq cmp sbb adcb push cmp out add repz imul scas fs out jmp xchg sar mov movabs xor jno or test clc push rolb or cld cltd (bad) sbb sarl or (bad) rex.RB or adc rex.WB movabs mov movsl xchg fsub mov rex.RXB loop xchg out adc sti pop stos push (bad) out movabs adc xor pop leaveq stc pop xchg sub (bad) icebp rex.WRXB xchg in rex.B mov rex.WR addr32 cmc push stos xor pop es cmp fsubrl (bad) scas in xchg sahf pop pop jl xor rex.W sub fcoms xchg hlt xchg (bad) xor xchg sti cs (bad) out adc xchg sub jmpq or (bad) adc mov je cmpsl rex.WX movabs mov and (bad) (bad) fsubs rex.WRX jle movslq fdivs push test leaveq cwtl (bad) (bad) (bad) negb scas and movabs and jmp push cmc xchg pop and cld mov (bad) ja or cwtl loop test sub jae push stos leaveq pop (bad) in loopne retq jg or push pushq gs (bad) fmuls or mov and nop sbb push sub cmp rex.WRX jae std std retq add mov or xchg mov (bad) ss mov sti movslq and stc and je imul xchg jns rex.WXB xchg hlt xor mov data16 lock mov stos lods addr32 (bad) enterq or xor shll (bad) (bad) rolb xchg adc fwait out sub gs or adc (bad) scas xlat sbb (bad) in sarb (bad) fldt push or (bad) jne (bad) (bad) cmp (bad) jb xchg callq rex.WX mov mov gs or adc sub insb rorb cmpsl ja mov add (bad) in xchg andl and push (bad) mov insl imul jnp xor notb cmp pop and (bad) pop in fsubs (bad) pop movsl fcoml cs mov mov (bad) mov (bad) cmc jg imul movsl lea xor std rex.X (bad) clc int3 retq (bad) rex.WRXB imul cmpsl int (bad) pop add mov stc and pop ja pop out xchg fidivl rex.WB adc xchg xchg xchg (bad) push sbb rcl or (bad) (bad) dec xchg pop push pop xor test rex.B (bad) rex.XB in callq xor and (bad) cmp stos ss insb cmpsb lock decb sbbb mov cmp out int (bad) xchg fisttpl ds subl xchg pop mov mov pop add ds push insl mov (bad) xchg rex.RXB cwtl rex.R enterq xchg mov (bad) test negb callq stos std in (bad) pushq sbb fsubs shlb (bad) jmp sbb shrl icebp pop xor sub (bad) (bad) push xchg sarb jg and rex.RXB xlat sahf rex.RB (bad) fdivr repz xchg fwait (bad) push or pop xchg out sub sbb jmpq sbb incb push mov pop cmc xchg xchg or out cwtl xchg jl cmpsb cmp in adc jg mov addr32 rex.WB cmpsl stos negb (bad) rex.R jae (bad) insl (bad) xchg sbb movslq test mov or movabs xlat (bad) sub jp pop jns es fwait cltd lods sbb xor movabs sbb jg,pt add (bad) jg cmc movabs lret retq mov xchg mov jno adc pushq (bad) adc ja loope sub adc ficomp nop movabs vmovsd lea and dec jo mov rex.XB push sbb add out pop ja es rex.RXB mov rex.R out and fsubr retq pop not push (bad) xchg rex.WX movabs pop imul mov mov (bad) rcrl mov outsl jg adc jle loopne (bad) ja or movabs (bad) fldl xor gs lods sahf pop sbb jae sbb in adc xchg (bad) mov sub movslq rex.WRX and imul mov jg (bad) (bad) in jno jrcxz mov scas push sti mov cmpsl push std stos cmpsl mov mov sbb xchg (bad) pop cltd imul pushq jg movsb add xor push test test (bad) int int3 xlat (bad) xor cltd sahf movabs and pop movsl add cmp stos (bad) out cltd cmp xchg xorl rex.RXB (bad) xchg sub ficoml callq imul fistp movabs xchg sub in (bad) adc fwait sarb rex.RB lods mov cmpsl movabs mov and stos popq jnp (bad) mov xor jae iret xchg jae sub retq outsl rex.W mov sbb xchg mov or neg mov addb hlt jnp mov rex.X xchg fisubl or loopne jns or mov (bad) movabs xchg add icebp pop neg jnp rex.WX xchg cld pop ss jo xchg sub stc xchg lahf mov rex.R (bad) nop sbb (bad) (bad) (bad) jo jl mov mov jbe pop fcmovb (bad) in mov movabs cmp (bad) xor test pushfq push rex.RXB int3 cwtl push sub testl (bad) int cmp sti adcl mov sti test (bad) (bad) cmp xchg (bad) or jno sti (bad) cwtl rex.WRXB adc or (bad) xchg mov sub rex.RB (bad) callq (bad) sub scas pop add jno popfq pushq cmp sub mov xchg movsl pop or vpacksswb xlat cmc sahf jge rex.WR rex.WXB fwait (bad) pop retq js rex.WRX sti lods add xchg retq add xchg stos mov (bad) cmp xchg in (bad) push loop retq fstl ficompl mov xchg (bad) divb mov jle popfq (bad) sbb mov xor sub cwtl cs rcll test add movabs jae (bad) scas retq cmc rex.RX jmp mov xorl (bad) test insl cmpsb xchg shlb mov pop pop cmpsl xchg or jle pushfq mov out movsb cwtl pop mov xorl in sahf jp and jae pop jmp lret xchg movsl movabs (bad) (bad) insb cmp rorb (bad) (bad) out (bad) cld pop mov sarb adc lahf cwtl sbb loopne pushfq (bad) mov addr32 pushfq cwtl movsb cli fldl (bad) outsb jp mov outsl jae mov mov cmp and movabs xchg ss scas fbld fwait orb and xchg std rex.WRXB repz jno xchg or rex.RXB out idivl lret mov test lahf jg mov andb add push movsl (bad) mov test rex.WB lods es mov and movsb test (bad) push pop sbb lret ss sbb push jmp movabs addr32 jnp in gs rex.B repnz mov (bad) mov and xchg rex.WRX (bad) xchg (bad) and cltd rex.WR sahf mov repz pop loopne add or pop mov pop push stos mov hlt adc cmp pop btr mov sti lock shr rex.XB sahf rclb fsubl xchg (bad) sub pushq xchg sub adc nop out mov jg pop and scas cmp insb pop outsb (bad) sub adcl adc js mov stc or andl (bad) rex.RX pushq xchg movsb movabs and push imul fsubrp movsl xchg insl rex.RX mov pop mov xchg (bad) push adc cmp xchg jg nop cmpsb (bad) movsb (bad) (bad) xlat loope jo sbb repz xchg push xor rex.XB test push xchg or rex.WRB ficoml mov (bad) rclb mov (bad) test imul sub jb mov or sbb mov sub lea mov sub push (bad) jne rex.WXB pushfq int rex.WR sbb sbb cltd ficom gs xchg pop pop ja sub fcomps outsb (bad) rex.WRX cmp add push xor xchg mov lret and rex.WRXB mov xor xor std leaveq lea (bad) and mov mov jbe xor insb xchg nop jrcxz xchg test or cmp leaveq adc (bad) scas cmpsb enterq xchg movslq sub push cs jnp loopne cwtl scas (bad) cld outsl cmp xor rex.WXB xchg (bad) fdivrs callq movabs (bad) repnz out mov fcmovne xchg (bad) jl rex.B mov fisubl (bad) cmp cli insl rex.W insl es out lea adc push int test and xlat ss jp pushq (bad) nop scas pop xchg in (bad) int3 iret sti lahf xchg loop pop fwait mov out push popfq cmp (bad) hlt out xchg mov xchg pop out sarl test cmp or (bad) loopne adc test (bad) (bad) and cmpsb xor mov in (bad) push push (bad) (bad) ja mov sbb pop sbb movsl rex.WRXB mov lret xchg roll xchg jne (bad) (bad) xor pushfq sbb cmp movabs cmpsb xchg rex.WRX out movabs repz ja jo xchg outsb rex.RXB rex.WR rcr sub jp popfq callq jg jne cmpsb outsb test sbb jae mov push orb scas cmpsb cli test (bad) adc insl movsl lahf (bad) jmp add fdivp mov ds rex.B jmpq std (bad) outsb (bad) in fisub (bad) clc sbbl xor mov subps (bad) xchg scas imul mov push movabs divl (bad) xchg and or and xor mov mov in jge popfq rex.WX pop fldl (bad) sbb mov sbb xchg xor mov imul or adc orl sub jbe fs je mov lods mov sub pop or (bad) cs (bad) test or flds pop lea rex.RXB xchg cmp (bad) stos repz xor pop push push jmpq rex.W negl out mov or rcrb jae sahf push es xor rex.RXB repnz sahf int3 pushfq retq rex.WR out mov retq jbe mov lea push xchg fildl iret rex.B xchg mov sahf rex.WRX push mov fdivs cld jo mov xor add (bad) cmp cmp fsts mull rex.RX add in (bad) fdiv (bad) lret nop (bad) idivl adc (bad) sub (bad) insb xchg rex.X popfq (bad) sar add push fdiv movabs lret (bad) movsb imul sub scas scas rex.XB cmpsb pop sub fwait xchg test push stos adc pop xchg or sub pop test xchg mul insl sub cmp pop xor cmp fcoms in xchg test jo (bad) imul xchg rex.WR sar faddl ds nop push xor (bad) push adc (bad) insb lods sbb xor xchg rolb iret mov mov rex.R adc insb xchg ja xor jge nop (bad) mov std negl mov fild xchg incl popfq mov rex.WRX jl xchg icebp (bad) jrcxz xlat fwait cmp div idivb and xor push mov xchg (bad) insb int lock xchg (bad) rex.WXB sbb or xchg and (bad) hlt sub jle test icebp lods lret (bad) addr32 movabs rorb data16 test stc rex.WXB movabs pop lods mov mov sahf mov lods sarb movsl mov xchg mov xlat in (bad) cwtl (bad) adc rex.RXB mov cmpsb test mov (bad) xchg loop (bad) (bad) jno lret addr32 sbb ja je (bad) in movabs rclb push or outsl jg and cmp mov pushq xor lahf jg lods mov iret stos leaveq incb fbld scas movabs insb (bad) (bad) xor xchg mov sti ja mov mov push fistp loop (bad) loopne or cmpl mov rex.WRX (bad) fs fstl or jmp sarb (bad) jb imul insl (bad) add fucomp (bad) adc in orb in notl sub rex.X add callq jnp sahf cwtl in sbb rex.WRXB jo retq loopne in cwtl jmpq mov (bad) adc cmpsl movsl add (bad) pushfq in jle cmp xchg (bad) (bad) (bad) lock lods mov xchg pushq rex.WR rex loopne (bad) cmpsb movabs mov mov mov (bad) add idiv sbb rex.WX xchg movslq pop icebp ficomp mov in (bad) hlt xchg (bad) (bad) cltd cwtl rex.RX mov (bad) scas push xor sbb mov (bad) lcall xchg fwait (bad) out movabs movabs xor (bad) insl xchg loope pop sub (bad) rcrl cmp iret sbb add rex.WXB lahf mov pop add mov fwait pop (bad) jb pop cmp and rex.R shlb and in int retq sbb pop leaveq jle and ficompl or callq cmpsl int (bad) movsb sahf fldt rex and mov lock sarb (bad) sub stos xchg pop popfq (bad) sarl xor test xor pushq mov xchg cld (bad) adc xchg leaveq (bad) loopne hlt fisubr and mov pushfq jbe rex xchg and shrb cmp mov and xchg jg imul mov add xchg hlt pushq fbstp es xchg cli (bad) cmp push rex.WB hlt jo retq xchg sbb mov xchg movabs loopel (bad) xor sub mov jge stc pop idivl mov xchg pop cs jrcxz pop cmp pop jo fist es add (bad) xchg shr enterq movsb mov test xchg (bad) imul jmpq outsl xchg cmp push (bad) rex.WB add (bad) sbb addr32 (bad) xchg cmp mull mov mov jg (bad) movabs mul mov jmpq test out in xchg movsl cmp lret test (bad) mov retq xchg adc jne pushfq rorl out vzeroupper pop xchg out rex.RB pop rex.WRXB and cmp jb (bad) jp (bad) cmpsb jrcxz xchg add (bad) rorb rex.RX mov sub push xor jae neg insb (bad) jae (bad) push adc mov xchg rclb (bad) mov stos js cmc (bad) xchg cmp xor shrl (bad) push cmp je xchg cmp mov add rex in cwtl (bad) pop mov add sbb out cld stos mov (bad) rex.WRXB ja jp xchg data16 rex.RB hlt jne rex.B out xorl retq pop push popfq sahf push retq cmp push rex.WRX pop push and test mov push shll (bad) fnstenv push sbb push xchg cmp stos (bad) (bad) insl pop adc fdivrp mov (bad) xchg std ja mov nop shrl sbb (bad) movslq cmpsl jb andb (bad) (bad) (bad) sbb xchg pop (bad) xchg lea cmp xor mov jle lret xchg (bad) (bad) sarl jrcxz mov movabs pop sbb fcompl (bad) (bad) cmp or xchg mov outsl cs jae mov push push (bad) sbb xor jo jbe seta sub rex.RX rex.W xchg xchg (bad) je sahf sbb jle mov repnz imul cs xlat ja stos mov push xchg callq mov ficompl (bad) outsl int adc sbb (bad) push movabs sub ja out xchg clc cs or mov jb rex.WRB and mov outsb adcb push pop lock cwtl test or rex.R xchg mov add rclb mov pushfw (bad) outsl pop insb xchg stos (bad) (bad) mov rex.RXB xchg jns lea rex.W add pop rex.RB xlat cli pop cmpb xchg jns in (bad) out pushq in cmpsb out (bad) cmp pop xchg sbb push fidivrl stos sahf (bad) js sti rcrl xchg (bad) ss pushfq (bad) imulb lock ja je xchg or (bad) push xor cltd (bad) cwtl (bad) sub fadds mov adc enterq rex.B push jbe movabs jge sub xor push rex.X xor xchg insb and movabs jmp std jmpq adc (bad) jns rex.WX pushq xchg cmp cmpsb jo cmovg push popfq xor xchg jg sub out (bad) icebp (bad) xorl lea xchg xchg (bad) push pop xor mov sarb xchg (bad) popfq mov xchg icebp xor iret mov sbb loope,pt movsb xorl fldt xchg and sahf add jmpq shll (bad) mov movslq (bad) jns mov mov sbb test mov icebp in out xchg je fldt xchg mov or add (bad) stc (bad) mov nop jge adc xchg test (bad) (bad) cwtl pop fdivs ja hlt and push sub sahf movabs xchg push out add mov mov jns rex.WR or jnp rex.WRX adc jl scas and xchg loope mov out sbb fsubrs and shl enterq outsl sbb scas in xchg add xchg xor push xchg xchg xor scas (bad) lret adcl mov pushq push repz adc fmuls popfq movabs test and xchg fiadd (bad) fistl rex.WR jae jp pop mov push icebp sub mov mov lock fdivs push xchg rex.RB jb xchg pushq mov jl or jg adc stos addr32 movsb cmp rcll retq (bad) subl lods mov cmc xchg cmp fsubrl jno (bad) xchg jg xor sub (bad) cmp pop xchg (bad) sub or testl enterq (bad) xor jmp adc pushfq xchg movabs xchg mov pushq xchg push add (bad) jle (bad) pushq rex.XB xchg or xor addr32 sbb jno leaveq (bad) jnp rex.WX lods data16 movsl loope out xchg (bad) jrcxz (bad) pushfq push push jns mov (bad) mov xchg jp jno mov pop pop xchg rcll xchg cmp scas rex.WRX rex.WXB iret xlat jnp scas xchg add orl xchg in test je movsb (bad) mov popfq negb movabs mov (bad) test add add jg lea rex.R add sbb mov xor adc add pop js push xor icebp movabs loopel xchg mov or sbb xchg (bad) push pop stc data16 mulb (bad) rex.R rep sbb adc mov rcrb (bad) repnz mov out mov (bad) (bad) ficoml mov adc mov (bad) (bad) xor (bad) (bad) retq jns lods mov (bad) imul pop pushq lret (bad) xor (bad) xor imul (bad) sbb xchg jne lock xor xlat cltd and (bad) sbb xchg xchg hlt fsub cld xchg (bad) xchg (bad) xor stos je jbe push jb fcompl adc (bad) roll jmpq sub nop cmpsl mov or sti xchg int outsb outsl stc lahf fs movabs mov callq rorl vxorps outsl pushq xor (bad) rep push test mov mov fidivr cwtl (bad) cmp mov stos cmp cltd rex.WRX pop movabs cmp notb sbb and rex.WX rex ss fdivl mov icebp rex.RX stos outsb and sub lret negb (bad) lock xchg pushq rex.W pop cwtl in xor pop (bad) lods (bad) movslq nop jo cmp insb (bad) cmp sbbl callq add push stos outsb xor outsl fdivl cwtl rex.R test movslq mov or push jmpq retw (bad) (bad) mull xchg sub addr32 pop or jns cmpsl int cmpsb pushq xor nop jrcxz (bad) rex.WB mov add lods xchg stos pushq rex.WRXB xor cmp stos dec div movsb pop or mov pushq repnz (bad) loope ja out (bad) iret fsubrl (bad) rex.XB add mov pushfq mov (bad) mov xchg fistp clc mov scas out xchg (bad) mov sbb movabs repz (bad) stos (bad) movslq mov push xchg xor cmp je lea pop (bad) rex.R sbb xor push mov callq jae sahf xchg movabs xchg jl jge (bad) fwait xchg fimull retq int3 xchg or (bad) shrl (bad) cltd enterq xchg scas mov test lods mov mov ds popfq insl and (bad) stos enterq push (bad) cltd mov (bad) mov movabs (bad) xchg (bad) rex.R (bad) or cmc push mov loope jg scas test sahf shll cmp rex.X xchg push sbb (bad) loope cwtl sbb (bad) movabs ficom mov pop (bad) rex out pop mov jp xor imul negl mov jmp outsb fwait bswap xor xchg and insb jae mov nop (bad) pop jns xchg sub (bad) pushfq sbb adc dec push xchg lods notb xchg int3 adc rclb fisub xlat out mov out adc or (bad) mov (bad) popfq xlat fist xchg add cmpsb and in xchg mov shrb faddp loope cmpxchg (bad) shr jb rex.XB (bad) repz test (bad) jl (bad) pop mov out (bad) neg je ljmp mov jo rex.RX xchg jg jp stos iret lods jno xchg pushq rex.RXB (bad) vcvttps2dq or add ficoml mov out cwtl push mov cmpsl xor xchg movsb mov xor lock xchg jl leaveq jae jne mov subb jo scas int (bad) sub xchg jmp ds hlt add (bad) rex.WXB (bad) movslq fstl rex.X cmp xchg loope sbb (bad) mov fcomps pop (bad) imul add xchg mov imul mov push push movsb adc enterq sbb xchg in loop pop mov adc adc movabs mov adc mov mov rex.RXB sahf fadd mov js (bad) pop xchg scas (bad) rex.WRXB sarl jge,pn mov jg fimul idiv mov adc jmpq (bad) rex add test or xchg in rcll nop cmp in push cs sbb xor xchg (bad) (bad) movabs sub addr32 sarl loop cli rex.WRX lods loop xchg and sub xchg jno idivl rex.RX pop (bad) sahf fisubl (bad) scas test mov rex.WXB rex.RX ds jl movabs (bad) sbb notl test and clc nop mov movabs test mov shl jnp addr32 mov xchg rex.WB inc add fsubrl rex.X rex.WXB in divl xchg (bad) xor jrcxz popfq jb test push xchg mov add fstpt sahf mov jmp rcl cmpsb pop xchg rex.WRXB rex.RB pop sahf mov or addr32 insl push jmp and rex.WX rex.WRXB xchg sub ficompl (bad) pop mov push pushfq and mov ja push insb stc outsb movabs mov xchg cli retq rex.WR rex.WRX movslq rex.WR rex.RX scas push xor movsl cmp outsb lret mov (bad) (bad) pop rex.WRXB sbb (bad) xchg cmpsb stos sub ss mov (bad) xor rex.R push hlt xchg lea orl movabs sub adc fnop rex.WXB stos push mov rex.RXB xchg fidivr imul in (bad) test jle out rex.WXB (bad) test cmpsb rex.WRB mov and shll (bad) sbb rex.WXB imulb (bad) (bad) sbb (bad) and es (bad) cmp retq mov sub test insl outsb xchg jo (bad) imul out pushfq int3 mov xchg test xor loop loope xchg lret rex.X add cmp lock test cltd sub int3 pop jo xchg rex.WRXB icebp jmpq jb mov fbld rex.WR sub pop rex.WXB movabs jno jl (bad) cmpsb push movsl (bad) rex.B std rorl insl mov ss sbb lahf jmp mov fisub fcoms rex.WRX outsb push nop mov push (bad) pop int3 mov xchg sub rex.X (bad) sub xchg mov test xchg adcl lock rex.XB add (bad) hlt or mov (bad) movslq mov cmpsb pushq jae xchg xor movabs push in push (bad) fs mov push fsubrl (bad) (bad) outsl pushfq pop and xlat or xchg (bad) (bad) adc cmpsb mov (bad) ficompl cmpsl or ficompl (bad) nop cmpsb (bad) (bad) (bad) divl cltd in (bad) xor insb pushq pop out mov pop (bad) jbe pop push xor xchg and and sub rex.WB int3 rex.WR xchg xchg (bad) and cmp lods xchg ficom rcrl (bad) sbb mov pop (bad) xor popfq jp (bad) add xor (bad) out jmpq mov mov lret rex.WB rex.WRXB (bad) xor xlat lret iret (bad) movsl es mov xchg mov rex.WB rex.WX push jae xchg jrcxz xor cld (bad) repnz cwtl mov std sub push test movabs (bad) pushfq movslq popfq mov loope rex.WB imull loop sbb xchg scas and add xchg pushfq lock movabs movsb cmpl xchg repnz rcl (bad) xchg xchg (bad) (bad) or xchg in and (bad) sbb add sti (bad) jmpq jo insl add negl (bad) xchg int3 adc (bad) jnp jae cmp (bad) adc movsl (bad) rex.RX sti cwtl nop sahf cmpsq test cmpsl xchg mov pop add sub jge out xchg mov (bad) clc rex.X xchg jmp cmp push jrcxz stc cli sbb imul xchg nop jmp mov xchg cmp xchg add imul movabs (bad) rex.RX add repnz mov sbb callq mov add rex.WXB push (bad) rex.W xor (bad) addr32 sahf stc rex.RXB in std stos push xor orl loop rex.WR (bad) je or (bad) xchg gs (bad) (bad) (bad) and jle outsl xor add sbb (bad) adc cli xchg sub movabs (bad) and add addb pushfq and jb cli xchg rex.WB rex.XB pop xchg or fldcw cmpl jle mov mov add mov scas pushq mov jge push sbb pushfq popq cmp xor (bad) pop (bad) xchg (bad) mov lahf repz push xor adcl (bad) adc shrl addr32 mov insl xchg sub adc jmp xchg cmp or rex.XB lret outsl add rex.RXB movabs xchg sti rex.WRX (bad) std test imull sahf ds int3 movabs add out (bad) mov sti pop movsb lret (bad) sahf adc jp pushfq (bad) pushq rex.WR xchg sbb gs (bad) xchg outsb adc jge in (bad) sahf cwtl rex.XB cwtl cmp jmp movabs movabs pushq xlat rex.WX (bad) in and mov xchg repz mov add fild jge ja addr32 or pushq sub loope (bad) push dec xchg (bad) adc es and (bad) stos scas mov adc mov es (bad) mov outsl roll cltd add sbb mov cmp shrb insb (bad) adc add sahf push jle sub (bad) xchg fldcw or xchg sub (bad) push ja jle rex.WRXB movsl jns xchg adc mov xchg adc jo rex.WR xor enterq jno rex.WR cmpsb cmpsb rex.WX push push loopne jle mov mov (bad) outsb callq movabs (bad) add adc cwtl movsl xor adcb (bad) pop shrb mov sbb test std sbb loopne (bad) push lods rclb (bad) rex pop in xlat mov pushq lods push jb (bad) (bad) mov loopne (bad) cmp fldl2t push mov (bad) adcl xchg xor (bad) fist sbb sub mov icebp (bad) outsb idivl add xchg ss cmp xchg cmp xor mov in (bad) (bad) and lea mov adcl adc xor (bad) cwtl retq rcr (bad) lea es xchg (bad) nop (bad) movslq add mov push pop xchg (bad) pushq xchg outsl xchg push cmp xchg pop fnstenv cmpsl sub hlt out icebp int cld insb add clc pop or sub fdivs mov pushfq cmp xchg int rex.WRX adcl (bad) (bad) add cmpsl hlt leaveq movsb pop rex.RX xchg test rex.RXB mov addb xchg fwait ja rex.XB out rex.WX leaveq jae mov mov popfq rex.WXB pop jne fstpt jg (bad) sbb sbb and rex.RXB sbb cmp or jmp xchg mov popfq jbe xlat fistpll mov (bad) cwtl nop (bad) xor pop push (bad) (bad) and cmc lods or and jl test loop (bad) push (bad) (bad) adc imul jl jmpq rex.WX stc es pop and pop (bad) (bad) rex.R pop lods rex.RB jnp rex.R jo add jbe fnstsw xchg test (bad) push rorb (bad) adc xor leaveq pushq (bad) fist int xchg push sub mov js callq jmp neg (bad) cmpsl mov xchg mov pop (bad) fbstp in mov push (bad) nop roll jmp cmp (bad) icebp pop outsl mov cltd mov (bad) popfq jns imul (bad) sbb scas gs out xor movsb xor adc data16 jbe (bad) loop imul mov pushq mov xor jmp push sbb push rex.RX loop and push out pushq imul jmp and movabs nop adc pop pop or sub movslq (bad) jno icebp xchg mov sub adc outsb jno out pop fisubr insb mov ja add xchg rex.WRXB (bad) js cmpsl repz (bad) rex.WRX rex.R jo movabs int3 xchg hlt mov iret xor jae mov add bsr sub push movsl int3 movabs (bad) jrcxz push xor repz (bad) jl or ja movslq rex.X (bad) jl xor sub in jns jmp cs xchg out mov outsb xchg addr32 cmpsl mov (bad) data16 mov sbb xor (bad) (bad) enterq xchg pushfq movabs in outsl testl xchg xor xchg sbb sub jne rex.RB push jmp in movsb (bad) xchg sub repz sub test mov lods lock (bad) movabs lret add xchg mov or hlt pushq lock stos sbb es jmp mov add gs xchg pushq lods decl in iret sub xchg cwtl and mov rex cs and mov cld movabs in addr32 insl incl and rex.RB out xchg enterq (bad) jno (bad) xchg fisubrl mov rorb int cmp jg test cmp pop xchg (bad) rex.W roll rex.R test icebp jmp lcall jno (bad) sti neg push leaveq adc sub rex.W or xchg (bad) pop (bad) and test (bad) rex.RXB enterq (bad) fadd cmpsb and sbb fwait jno retq sub pop repz stos movabs rex.RB push cwtl imul addb xchg lods push loope xchg hlt mov (bad) mov fsubrl out movslq (bad) out popfq (bad) cltd (bad) jb or stos leaveq mov rex xchg and in xchg sub mov (bad) mul test xor push push cli jg pushfq add mov xchg enterq xor xchg rex.WRB rex.WR mov or pushfq xchg mov test (bad) pushfq out sub lret movabs jns sub test scas xchg xchg out xchg (bad) stos rex.WRXB xchg mov mov xchg pop retq (bad) and (bad) in xchg lock mov adc rex.RB or mov sub jge xor xchg data16 (bad) ds pop (bad) cwtl or add jle mov cld rex xchg add add jns rcrl jge mov rex.WX (bad) fsubr (bad) repz xchg jnp test push xchg fistpll pushq movabs mov mov jne (bad) (bad) ficom (bad) rex.WX push xchg nop fs or int sahf (bad) push sbb fwait adc jge (bad) mov or push sub add movabs jrcxz sahf stos gs lock push pushfq roll xor push xchg fildll sub out xchg rex.WX mov (bad) outsb int xchg movabs xchg lods cmp or rex.XB pop sub iret rex.RX in es xor subb jmpq xor mov movsb add and jb jno stos nop sbb shlb (bad) xlat jb cmp gs jne (bad) fs mov pop (bad) (bad) loopne fldenv mov cmc insl mov cmp out xchg cmpsl jrcxz loop add (bad) ja je xchg push jno (bad) jl adc xchg xchg enterq insb sbb cmpsb sti cli mov fs cld lret shrl (bad) es popq test stc rcl sub adcl (bad) mov jp xchg test mov (bad) je mov movsb mov lock cmp in mov movslq rex.WRXB fwait pushq rex.WRXB adc xchg rex.WRB cmp repnz movabs cmpsb and nop pushfq lock xor mov psubd mov push push (bad) shl (bad) pushfq (bad) adc out jae mov sbb nop (bad) pop (bad) rcl rex.RXB lock jns xlat movabs jg sub add test xor xchg vmovups and in adc jnp push pop movabs out xchg ljmp lods loope xchg rex.WXB lret (bad) movabs insl mov pop stc (bad) jle out jmp int3 cmp mov shrb cmp mov retq callq (bad) scas (bad) mov pop and rclb lock mov jno cld (bad) (bad) andl sbb lods pop (bad) or callq sbb sbb mov movabs ds sbb iret movabs scas mov notb cmp jne test sub sarb rolb test cmp rex.WX movabs stos jrcxz adc jbe mov rex ss sbb (bad) out xchg mov adc pop jnp adc fild pop imul mov and mov rex.W xor push (bad) mov sbb mov loopne fdivs mov cmp movslq xchg orb cmp and adcb sbb sahf mov and (bad) adcb jno leaveq lahf (bad) sbb (bad) in stos (bad) (bad) insl ja pop and movslq data16 in push movabs lahf cmp data16 xor jo movabs xchg (bad) mov gs lods in sbb cld cwtl pushfq sub push fimull pop rex.XB (bad) mov movabs fcompp mov jbe (bad) sub movabs fidiv (bad) rex.WR mov rcr icebp and and (bad) (bad) mov int3 (bad) sub xchg dec cwtl icebp sub cli insl loopne xchg rex.RB int3 (bad) mov sbb movabs (bad) rex.WXB (bad) cmc xchg and cltd jrcxz movslq mov and pushfq pushq loop sarl scas rex.WRXB rex.W addr32 test out iret or (bad) cli (bad) fcmovu sahf nop adcl sbb cmp (bad) xchg je cmc sbb callq (bad) movsl adc (bad) (bad) mov mov xchg lret and sbb xchg movsb fdivrl scas cmpsb (bad) mov loopne pop std scas fiaddl xchg cwtl mov iret xchg fbstp jbe ja mov (bad) movabs adc fidivl xchg lret (bad) pop rex.WRXB rex.R xchg movabs lret adc adc mov cld retq mov (bad) movabs loopne xchg jg jge xor and test push (bad) (bad) jae decb (bad) xchg (bad) and shll lret adc xor cltd rex.WR lods jno lret xchg gs sub outsl mov in sbb sbb mov cltd in jne rex.R (bad) pushq cmpl cwtl add movsb (bad) push (bad) cwtl retq out cld mov out (bad) mov xchg hlt mov xchg xchg outsl ds sbb (bad) sub sbb cli cmp push mov mov rex.WXB cmc jge push (bad) icebp mov pop sahf cmp rorb sub mov fsubl sarl nop (bad) negl and fidivl (bad) xor add std int rcl cltd adc movabs adc mov mov (bad) data16 xor std and sbb movabs (bad) xchg mov cmp loop (bad) xchg int3 and xchg out sbb (bad) pushfq movabs (bad) adc outsl jrcxz cmpsb sub outsb adcb fild test xlat cmp imul cmc rex.RXB rex.WRXB loopne cs and mov mulb pop int3 (bad) push xchg jbe rex.WRXB or mov and movsl cmc pushq xchg popfq (bad) (bad) (bad) jns sub scas cmp push mov fistl mov or cmpsl rex.X es push cmp xor in xchg xchg sahf fs nop jmpq data16 mov mov loopne pop mov xchg loop outsl or push lret out mov sbb jle cwtl cmp fistl leaveq (bad) xchg mov cmc pop cmpsb (bad) rclb cmp or shl (bad) mov iret mov add rex.WRB scas retq or jge xchg and xchg mov pop rex.WX xchg rex.X fildll and (bad) movslq ja test (bad) data16 mov mov lods cld (bad) mov (bad) mov (bad) js test sbb cwtl mov (bad) xchg stos in fnsave and mov subb fwait lahf testl (bad) and (bad) scas adc or fcoml (bad) push cli cmp pop stos xor (bad) nop (bad) lret pop push pushfq xchg sub pop xor rex.WR jno pop sub in cmpsl pop imul rex.WRB mov xchg (bad) mul test sub cmpsq movabs sub icebp push mov (bad) xchg rex.WRB cli xor xchg pushfq callq or mov jl pushfq xor xchg mov xlat mov insb xchg or cmp pushfq test xchg test fcomps mov xchg int mov push cmpsl repz cs mov pop roll cmpsb xchg mov retq sahf imul std cmpsb adc or pop out sahf or mov push hlt mov es xchg cmp test xor xchg movabs in jae jmp fsubs nop lret outsl rex.WRX in mov lea hlt add and xchg mov movsb adc or xchg shrl jmp rex.WX pop lret cmp cmc add rex.WRX rex.X lods sub pushq notl rex.WB movsb xchg fisubl mov cwtl mov mov rex.XB fwait xchg push and (bad) loope addr32 rex.WRXB in mov rex.WRB shl out orb mov mov (bad) jrcxz test jb (bad) sub push xor std int or (bad) pop sub mov out xchg lods or (bad) pushfq loope movabs (bad) jg movabs andl outsl jmpq xchg fild and sub add fsubs pushfq jp adc and mov pop mov icebp rex.WR andb pushfq cmpsb mov mov pushq jge in xchg xlat mov rex push ds mov sbb xchg mov stos stc data16 rex.X mov movabs (bad) outsl mov (bad) (bad) sbb addr32 andl pop leaveq jbe out jle rex.WXB add in sbb lret rex.WR jb popfq push jne xor jp push ffree stc lahf js xchg mov xchg sub cmp xor jl pushq or sub int3 xchg repz icebp jmp jg gs or pop sahf jp in shlb (bad) (bad) or pushq push (bad) jo push add scas and (bad) (bad) (bad) pop jg fwait (bad) push push rorb add mov adc mov rex.W (bad) xchg fwait sbb addl (bad) xor subl (bad) and (bad) (bad) add (bad) (bad) xchg fsubl add in movsl jg mov gs jnp movabs (bad) hlt ss outsl gs rolb (bad) iret fwait mov mov in test jg divl mov sahf lods (bad) add cmp in cmp pop addr32 fwait movsb stc sbb pop adc popfq jbe (bad) sub stos jg adc (bad) fstl out xchg and sti push pushq jbe pop fs iret or xor lret jb fs jmp (bad) rex.RB xchg hlt jnp cmp xchg addr32 insl iret adc and fisubrl (bad) out loopne movsb cmp (bad) rex.RB fnstcw jo pushq or mov mov sub (bad) jge (bad) (bad) cwtl mov jg xor loope,pn cmpsl test movabs and (bad) adc callq loopne,pt add jno cld or (bad) and pop and in mov adc (bad) stos adc stos mov retq bnd jmp pushfq mov pushq enterq push addr32 addl fisubr adc movsl icebp ss (bad) (bad) pop rex.WRXB jns (bad) rex.WX sub fldl gs xlat pop pop push retq pop xor (bad) (bad) pop xchg gs cltd sti jrcxz and pop pushfq push sarb out outsl (bad) push retq sbb (bad) mov loopne pushq sbb (bad) and fs outsl xorl mov mov or jmp mov and (bad) xchg or rex.WRX mov or pushq (bad) rex.WX pushq insb jle in or cmpsb pop movslq sbb out loope rex.W leaveq and xor (bad) jmpq rex.WR and rex.B pushq (bad) rex.WR and or mov (bad) movabs rex.W repz xchg adc rex.X fwait sti in decb mov pop mov jl rex.X pop outsb (bad) (bad) movabs (bad) sbb pop (bad) cmp mov xchg (bad) sahf not xchg mov push xor gs push imul xchg addr32 popq sub sub or cld adc int3 xchg xchg sub (bad) push xchg test nop leaveq fist mov rex.RXB add (bad) sahf xchg (bad) fucomp or out adc (bad) sub xchg cmp ds iret lods xchg mov loope xchg rex.WR movabs lret add jae rcr movslq scas pop scas mov sbb loopne xchg xchg in movabs mov jp scas xchg in ja fdivrl add and ja imull cld push icebp cmpsb scas add add jne xchg sbb adc adc pop notb jrcxz,pt stos mov (bad) (bad) jae je xchg push pop cli mov pop sub nop out test push out jns idiv add negb lock push rex.RB rex rcl fistl movabs xchg adc add xchg andl cli jg rex.XB movabs push ja (bad) xchg mov (bad) (bad) cmpb jb stos scas cmpsb retq cmp xchg sbbl addr32 pop cltd (bad) push outsb (bad) rex.RXB lods pop jbe (bad) or push jrcxz (bad) iret movabs xchg mov repz (bad) (bad) outsl push xchg xchg movsl (bad) outsl sub xor outsl out rcrb mov push rclb mov addb in js shrl jbe xchg movabs xchg xchg sub icebp out mov (bad) or cwtl xorps mov adc out rex.WRXB in jg ja mov cwtl or add mov cmpsb sub xchg insl or lea jle repz fiaddl jb imul sarl cs je jg scas or in jbe xchg je (bad) adc sbb xchg movsb fwait push xchg mov xor movsb or nop xchg jbe xchg int3 or (bad) xchg in rex.X retq enterq stos or stc mov jnp mov int (bad) sbb movabs in (bad) fcoml xlat cmp xchg jl xchg rex.WX shr jge scas xchg mov sysexit adc in in div sar repnz lcall jp cmp in xchg loopne decb xchg movslq (bad) mov nop scas ss push cwtl (bad) rex.WB fistp movabs out (bad) add nop rex.WR ficom mov (bad) xchg push out (bad) xlat and (bad) stos adc stos push xchg cwtl cmp addl in (bad) xchg push (bad) push mov (bad) mov divl jae pop cli push push xor outsb pushq add mov fnstsw clc cwtl xchg xchg movabs sbb insb rex.WB xchg mov xchg sbb (bad) jno push loope xchg test adc sahf adc xor cmovg push jmpq and ds (bad) mov in lahf jp (bad) rex.RB xchg stos mov add (bad) subb xor sahf push sbb xor or test adc mov (bad) xchg fwait lock xchg sahf loop mov rex.WXB notl lret fstpl test xor enterq fiaddl push xchg jle sarl and rex and xchg frstor lea or xchg movabs je mov loopne stos cmpsb xchg xchg (bad) jl,pn (bad) jno sub mov fistp mov fdivr xchg cmp std rex.RXB mov (bad) xchg xchg (bad) mov adc movabs (bad) (bad) sub (bad) pushq cmpl movabs cmp clc fwait xchg loopne (bad) sub out lea rex.B mov sbb rex.RB (bad) push js nop (bad) and mov cmp sbb add movabs roll xor mov (bad) pop (bad) jge retq mov gs (bad) sub jge rex rex.WX rex.WR and (bad) scas (bad) mov (bad) and retq repz cmp xor rclb imul (bad) out rex.WRXB and repz and mov cmc outsl xor mov pushq in pushq pop rex.WRX mov add rcrl (bad) mov xor sub xor or rex.RB xor jrcxz jbe jno (bad) cld es in insb xchg cmp (bad) retq lods mov rex.RX mov in sbb (bad) mov fldt (bad) cmp divl cld xchg lret adc out lea mov push sbbl sbb jmpq mov xchg (bad) lret xor xchg addl pushfq (bad) loopne shrb (bad) xor lods test loope fiadd pushfq rex.WX je rex.WX sahf (bad) or scas or push xchg (bad) pop (bad) mov xor (bad) cwtl out jne (bad) and pop cmc sarb push pop rorl push int3 xor movabs rcrb push add push (bad) (bad) adc lahf sbb flds sahf add xor (bad) jl mov (bad) xchg (bad) in movabs xor (bad) (bad) (bad) movslq imul and mov movabs rex.W mov iret mov (bad) jg pushq mov pop mov and jne fdivr mov test pop adc pop mov (bad) cwtl sbb movabs xchg stc (bad) sub (bad) (bad) (bad) cmp cmp (bad) mov sub sub mov jmp faddp (bad) pushq iret je (bad) (bad) or rex.WXB rex.WX repz pop (bad) add (bad) in pop rex.WRB rcll and (bad) (bad) adc sbb neg jg movabs popfq sbb rolb lods stos in jmp jnp in xor adc iret xor cmp cmpsb js (bad) add sbb (bad) cmovnp mov mov pushq movsb rex.WR addr32 shlb mov jbe retq cmc cmp imul fistpll rcl add (bad) cmpsl repnz (bad) cltd xor hlt mov ds cli jmp pop add rcl pop jp fsubl rex.XB (bad) sbb (bad) fwait leaveq lret jg (bad) gs ss es data16 imul mov fcoml adc sbb xchg mov sub pushq xchg cmp rex.RXB pop jge mov or (bad) xchg (bad) movabs cmc pushq push iret (bad) fnsave sbb (bad) and cmpsb ja (bad) lret mov (bad) rex.WRX data16 cmp and imul retq jnp adc (bad) out jnp or xchg enterq push fmuls (bad) callq mov jae or add (bad) sbb fimull addr32 (bad) nop or sahf or pop pop sbb pop int3 (bad) and nop orl movabs out lea fcompl cmpsb pop or mov leaveq or (bad) jg imul rex.WRX lahf fdivrl xchg adc iretq rex.W outsb (bad) cmp rex.RXB nop sbb xchg xchg mov sub xor cmp addr32 pop sarb gs or enterq jmp (bad) in movabs lret repz or sbb adc and pushq incl sub cmp mov (bad) mov (bad) rex.WR xchg pop data16 jno push or pop enterq stos jno or loopne callq (bad) rex.WRXB add mov xchg stc outsb mov xlat (bad) sub (bad) iret test in and jnp lods push adc push pushfq add repnz (bad) cmp lock pop jb jbe (bad) adcl out shl sub xchg lret adc pop insb notb push fs (bad) pushq lret out (bad) or pushfq js cwtl es (bad) (bad) notl jb jg out pushfq test (bad) cmp mov ss fs add xchg loop push rcrb fldt shr test xchg add (bad) ss cmp jne jnp xchg insl add (bad) cmpsl add scas loopne pop xchg scas jnp repz popfq fcoms fdivrl int pop rex.WRX mov rcll fwait xchg or xchg fsubrs callq and movabs negl and rorl repz and jle sahf jb xchg (bad) or lahf movabs mov and xchg notb fcomps out movsb xor (bad) out mov pop xchg clc (bad) push rex.WB rex.WRXB xchg pop dec rorb sarb cmpsb sbb scas loop xor rex.WX movabs xlat (bad) icebp cmpsb mov cwtl and xchg movslq rcll adc jge shr xchg (bad) ss and cmp xchg mov scas and xchg (bad) andl xchg rex.RX int (bad) shr mov (bad) rcrl (bad) fcoms sbb jae rex.WXB rex.XB gs jmp lahf push fcoml sub jnp xchg pop sbb or pushq xor rex.R (bad) cmp xor (bad) jge xor and testb cmp jg sbb je outsl adc push rorb and cmp xchg fdivrl andl imul xchg jns stos fstl lods xorl xor outsl and rex.WRXB xchg mov push (bad) push jnp enterq (bad) mov jle pop scas cmpsl subb cmp pop add mov rex.R xchg jl xor or (bad) cmpsl rex.WRXB mov je mov xchg cmp push add (bad) rex.RX (bad) rex.WR push (bad) xor callq mov push add (bad) rex.RXB fdivs fwait add movsl (bad) lods adc (bad) (bad) (bad) jne xchg jmpq mov xchg xor mov or je xor ficom (bad) scas xchg ss adc xchg sub rex notl callq pop cmp fsts test (bad) jne rex.RB cmp andl cmp mov (bad) shrb rorl adc (bad) (bad) sbb lods (bad) or and movabs test mov leaveq fnstcw sbb jne mov xchg mov jmpq xor mov xchg ja clc cmc mov pop rex.RXB rex.R cli fdivrs mov sub push or xchg cmc movabs popfq fnstcw jrcxz jp jbe jmpq mov xchg movabs and adc adc xchg lods mov (bad) rorb ror out (bad) mov (bad) (bad) (bad) movsb xchg mov (bad) fcmovu shl xor lods xchg icebp js rex.RB sub lahf test out jge lret cld (bad) (bad) add adc adc pop (bad) (bad) (bad) ja (bad) rex.XB (bad) and jl pushq and (bad) jge lods or xchg or and xchg idivl pop rex.RX adc mov femms jg mov lret xchg rex.WRX pushq xchg movsl or mov (bad) cld cwtl (bad) sub cmp in cmp or add push sub xor xor mov (bad) pop (bad) xchg lods std pushfq (bad) (bad) push imul and (bad) (bad) sub mov push adc in add xchg mov (bad) jns lahf cs sti out rex.WB ficoml out cmp pop xchg add (bad) andb add xor movabs cwtl movsl cmp jb add xchg outsl pop in (bad) test cwtl xchg cmc callq mov mov sub fwait out rex.RX (bad) mov cmp (bad) pop xchg xor rex.WRX sub loope icebp out mov jrcxz add push or out adc (bad) adc add rex.WRX (bad) (bad) test adcl jge mov sbb mov and jge callq rex.WRB xchg sub jb (bad) jns jl ficomp pop xchg adc pop push xchg xchg jo mov clc pop xchg fs (bad) pop and (bad) fcoms push loope sbb (bad) mov cmpsb lea jno jae sub ss sbb fldpi pop xchg repnz sti insl insb mov outsb push jae test lods add add (bad) lret xor push scas (bad) (bad) (bad) sub (bad) mov or pop fiadd jmp (bad) pushfq and movabs cwtl push jns je mov movsl (bad) and (bad) jno adc in (bad) movabs addr32 insl adcl fbstp popfq (bad) or xchg push pushq or mov mov pop or (bad) xchg cmpsl addl stc (bad) mov cmp lahf xchg cld lahf jbe rex.R (bad) rcrl sahf pop (bad) pop leaveq rex.WXB xlat sub and fidivl scas xchg cmpsl mov hlt sahf mov pushq xchg loopne rex.XB gs lods loop jne (bad) stos (bad) xchg retq std sbb fsub rex.WRX xchg (bad) (bad) fisttp (bad) mov loopne out pop cld adc jae gs packssdw pop mov (bad) mov jge orl rex.WR (bad) out pop ficomp rex.WRXB or push and mov mov mov es pop add int3 (bad) xchg mov add mov mov lea (bad) mov stos or fabs xor pushq imull rex.XB sbb (bad) mov mov mov testl fnstenv jmpq addr32 test enterq test movabs jne cwtl jno jge jae fidivr pop popfq xor (bad) movslq mov cltd test mov sbb jmp jns in scas xchg imul popfq jrcxz jmp mov (bad) pushfq fdivs (bad) mov jne rex data16 xchg pop fcoml fisttp sahf mov xchg movsb outsl fcomip push mov xchg xlat rex.RB (bad) cmp rex.WRXB fwait cmpsl repnz cwtl rorl rex.WXB cmc cmp std adc xchg mov insl xchg mov jns jo data16 lods add (bad) int3 outsl movabs xor mov xchg int pop fdivs clts jg movabs jb retq add xchg rex.WX in cwtl stos icebp sbb (bad) (bad) loope mov rex sbb jl add mov out loopne in stc cmpsb movabs add clc xor movsb in rex.RB movabs (bad) mov cli sub sti sahf repz add rex.X fsubp lock fadd push xchg rex.WR cmp rex.X xchg add rex.WRB testl (bad) jo rex.XB pop leaveq (bad) std mov mov (bad) rex retq jg xchg or je sti rex.WRXB test outsb and mov sbb (bad) (bad) (bad) insb mov movabs out test cmp shrb fsts xchg (bad) (bad) movsb enterq pop in rex.RXB rex.W insl pushfq mov ficoml jle callq pop mov rex (bad) jae jne xchg mov jrcxz movabs fstps jg lods ja or js iret in pop xchg cmp mov jle mov cmc jmp test std push cld xchg and lea xor and addr32 and fs scas or pushfq addl je (bad) stos clc mov imul outsl (bad) xor or scas xchg lods jns or in xchg xor out mov sub subl push jbe shll jmp rex.WRXB cmp retq jns xchg xorl jg jmpq add add (bad) notl mov sub sbb mov pop lret lods jrcxz (bad) or mov mov (bad) movl cmp test adc mov insb (bad) movabs or (bad) sbb (bad) jle jrcxz mov flds xchg sarl cmp idivl jae mov fs repnz in int or rex.R mov rex.R (bad) (bad) xchg popq clc in gs negl and rex.RX (bad) stos roll sub fist (bad) cs xchg sbb movabs enterq repz divl xchg loop lahf sar (bad) cmp test sub mov sub mov (bad) push jmpq retq movabs repnz and rorl (bad) in out sub sub add decb sbb mov rex.W out loope xchg or outsl sbb enterq mov loope (bad) mov int movsb fistpl sbb outsl sbb repz (bad) cld (bad) xlat rex.RB retq or in (bad) jno cmc jae xchg rex.B adc jns xor (bad) (bad) ja sbb push decb jbe pop pushq lret or fistl jp (bad) mov clc xchg push cli sub cld int sbb subb hlt mov add movsb rex.WX xchg mov cwtl ds mov xorl andb sahf rex.WXB xchg out jle loopne mov mov pop mov pop (bad) insl xchg int rex.WRX rex.WRB mov sahf and adc jg xchg sahf insb (bad) (bad) in rex.WB fwait pushfq (bad) mov pop icebp outsb ja sub cmp fdivs (bad) (bad) je add sbb mov xchg xchg (bad) gs pop movslq cmp (bad) sahf roll push mov popfq data16 mov imul sub pushfq cwtl mov xchg rex.WRX retq xchg int3 sub push sti ds (bad) out or std mov test rex.WB sub nop loop,pn jns (bad) loop xchg xor mov xchg xchg stc lea push pushfq sbb insb sahf popfq mov jle pop jae (bad) movabs lea xchg test jns retq int sub cwtl callq (bad) (bad) rex.XB add cwtl or xchg out (bad) ss rex.W xchg cs rex.WR rex.WRX mov sbb pushq (bad) rex.RB (bad) (bad) xchg mov incl (bad) nop lret rex.WRX jrcxz (bad) mov test stos div mov lret lods (bad) pop jae xchg rex.WXB (bad) (bad) xchg xchg sub rep cmp ja sub adc es (bad) (bad) leaveq cmc (bad) mov movabs cltd lahf es (bad) jne rorl (bad) lea or sbb cmpsl mov sbb addr32 outsb rex.WRX and adc fs xor fldenv adcl mov movabs test xor imul sub jg and cmp out (bad) popq outsl or jge (bad) pop mov or in cmpl xor mov retq mov rorb and (bad) rorb (bad) mov cmp jge (bad) sub jmpq (bad) cmpsb push (bad) cwtl rex.WX rex.RB pushq in (bad) and fistp bnd cmpsl cmpsl nop mov (bad) jne pushq pop sub pop rex.W rex.WX jno (bad) jno (bad) rex.WX cmpsb rex.WRXB data16 cld jmp cmp in mov pop fidivr cmpsl add or mov pop xchg scas add ficomp callw mov rcl mov xchg movabs rex.R fisubr repnz jb mov (bad) lea (bad) lods sti stc mov adc push adc testl std xchg in xchg mov xchg adc repz pushfq (bad) rex.WR lea adc rex.X cwtl in pop mov cmpsl jo rorl retq adc fwait sub adc pop retq jbe rex.W adc (bad) jp gs in jns repz rex.WRB add out fdivp hlt rex.X xchg mov movsb movslq cmp (bad) jo pushq sub clc xchg ficom out cmpsl or sub in jmpq movabs jo (bad) rex.WRX xchg rorb pop sub std sahf (bad) (bad) cmp (bad) (bad) xor fs or in leaveq xchg iret mov pop imul test sbb jno and xor je xchg rex pop idivl mov xor sub sahf data16 fwait and xor in xchg cmp xlat cmp xchg fs lret (bad) sahf jge add hlt movabs cmp (bad) jne mov hlt mov adc pop xchg add sub adc xchg cmp adc mov (bad) fidivr jg pop data16 rex.X test or pushfq pushfq enterq outsb push rex.XB sahf and push sbb loope jae add or (bad) rex.WX in mov movabs fimul cs mov (bad) enterq pushfq xchg leaveq (bad) cmpl cs out jle sti rorb and enterq rex.WRX mov mov nop (bad) out mov push (bad) repz out stos jnp mov rcrb mov test mov rclb loopne xlat movsb cmp (bad) add or xchg (bad) movsb mov (bad) fwait (bad) mov sub sub (bad) cwtl (bad) insb pushq fs xchg push add fstps add jnp rex.WRXB rorb sub xchg xor rex.WRXB sarl (bad) jae and mov movabs in pop cli sub mov rex.X fxch (bad) (bad) add retq sub cltd (bad) pushfq orl (bad) sbb movabs push mov and rex.R add jns xchg and (bad) std movsl xchg add mov data16 adc fcmovnbe rex.RX rex.X rex.R lods cmp add (bad) xchg cmp in rex.RX push pushfq (bad) imul (bad) jb orl adc adc cltd nop (bad) jno hlt (bad) mov xchg xchg pop jb pop (bad) cmp xchg lret xchg xor mov (bad) sti rex.WR push push xchg cmp iret xchg mov mov pushq push (bad) mov jno jnp (bad) sbb js jl cmp (bad) xchg seta (bad) mov or (bad) jnp xchg sbb (bad) mov out movabs nop (bad) out xchg pop (bad) mov jns mov imul adc enterq (bad) rex sub mov testl pushq xchg (bad) jg mov imul (bad) adc in insl xchg rex.WRX sub pop add (bad) js sub imul fs (bad) nop sbb pop cli (bad) fs (bad) rex.WRXB es (bad) (bad) sub (bad) mov (bad) mov and outsb cld xchg xor jo jmp (bad) (bad) (bad) jbe jg cli rex.RX sbb (bad) adc movabs cmp push stos rex.WX (bad) fmull jp (bad) sbb xchg (bad) data16 jp and ror ror cmpsl cld rex.RXB jl leaveq (bad) loope xchg rclb lret ja or rex.WRX sbb xchg jnp jmpq mov loop pushq popfq retq in (bad) adc xchg test clc negb xlat movabs xchg std jne movabs (bad) and mov imulb pop notl int3 mov gs (bad) lret xchg xor add (bad) icebp out push loope (bad) mulb out jnp sahf xchg movabs xchg and shrl add mov popfq cmc sahf outsl (bad) je cmp out clc (bad) (bad) rex.W push cltd rex.RX push xchg (bad) lods fwait (bad) add pop std xchg enterq mov rex.WXB rex.RX xchg test cli xchg cmp xchg ss (bad) or lahf orl hlt mov (bad) lea or insl sbb jae pop gs xchg std int3 (bad) rol mov sahf xor cmpsb lods (bad) rcr push std or jne (bad) pushq int3 mov mov xchg jge rex.WB cmp data16 adc (bad) jg std stos loope xchg rex.RB loopne in gs rcr xchg rex.WR pushfq (bad) pop jno (bad) (bad) int3 outsb fwait mov iret sbb out jge imul sub pop outsb (bad) (bad) iret xor jno xor sti mov sbb cmpsl jns xor mov add (bad) out add movsb xor xchg rex.WXB shr jnp pushfq cwtl addr32 (bad) lahf (bad) sbb xchg (bad) js rex.W es cltd mov sub test xchg xchg sahf sbb scas add int3 sahf (bad) popfq mov rex.WXB cwtl sub and ja push xchg sub mov cwtl repz pushfq or addr32 movabs jge rex.RX cmp mov xchg xlat xchg or jns leaveq xchg iret fs cmp imul mov (bad) jbe add ficoml (bad) rex.WRXB movsb push or push xchg xor and pop pop mov jrcxz sahf (bad) push imulb cmp test test adc push mov movsb xchg insl cs ficomp addr32 pop sahf pop or movsb (bad) (bad) cmp and xor xchg js fsubrl retq imul fisttp push stc pushfq in adc and jnp xchg push popfq mov cmp sbb pop (bad) outsl xchg xlat callq xchg mov xor addr32 cmp leaveq in loop test pop movabs jne sahf adc negb cmp rex.WR fwait in xchg (bad) icebp and xchg ljmp jno sbb xchg lret xchg (bad) cmp xor movabs fwait and jle (bad) mov clc and add rex.XB movabs out mov shrl int sahf (bad) xlat fwait nop outsl xchg fstpl or fwait xor adc mov (bad) retq fmull (bad) mov loopne and jne (bad) movabs cmpsl movsl es ror (bad) pop rex.WRX retq sub rolb pushq xchg (bad) scas mov jle sahf fs add callq pop adc outsb es pushq rcll xacquire pop gs jl (bad) loope mov xor rex.XB ficom (bad) and imul or cltd cmpsl rcll xlat sbb in xor fistl xor sarl jbe retq cmp jb cmp clc push (bad) lret rex.X rex.WRXB push add (bad) rex.W cmp sbb rex mov ds (bad) (bad) popfq retq decl retq movslq int3 mul stc (bad) mov sbb rex.WRXB sahf rcll pop pop (bad) jnp in xchg sub scas add (bad) (bad) (bad) insl or xchg (bad) xchg xchg adc pop outsb sbb gs int3 jmpq push mov stc jno in (bad) orl rolb sub mov push pop (bad) fadds mov mov mov or cmp xor fs in mulb cmp mov (bad) (bad) je rex.WRXB fbstp loopne jo fistpl pushq (bad) sbbl jle jl jnp xorl (bad) adc (bad) sarl scas (bad) mov rex.WRX (bad) sbb xchg jle imul int3 gs rex.WRX movslq jnp callq out in mov and (bad) push test fwait adc or xchg cmp jo sarb rex.RX mov rorb adc orb (bad) (bad) xchg divb sbb xchg rex.RXB cmc and insl (bad) cwtl rex.RX stos scas xor movabs jae shlb (bad) movabs xchg sub (bad) (bad) gs loope adc shr cwtl adc add out jl and movabs jne sbb xchg test out or xor xchg mov addb xchg sub and clc leaveq retq pop mov xchg jg mov jle mov rex.RB jne add sub xchg cmp lea cmc mov rcrl sbb mov and xchg sub insb mov push repz (bad) pushfq cmpsl mov xchg add (bad) test sar popfq mov movl pushq xor je xchg fwait pop sahf repnz cmovp movslq pop lret out retq cmpsl xchg cmp (bad) adc or and mov mov pushfq or (bad) push (bad) xchg lret jrcxz gs push insl sub pop sbb cmp xchg int3 out adc fmull movslq movsl or sahf pushq (bad) shr movabs xchg mov (bad) movabs rex.WR xchg or movsl mov xor pop xchg add rep (bad) rex.WRX nop callq fwait clc fcoms and mov iret enterq pop cltd mov jo rex.WRB (bad) mov rex.X mov adc sbb sbb rex.WX in adcb mov adc pop add xchg add fstpl sbb push movslq xchg rex.WRX test xor mov xchg notl idivb int3 outsl xchg jno (bad) scas cmp pushq xchg xor cmc adc leaveq add stos sub rex.WXB test sub or xchg pop lock (bad) xlat movabs es (bad) xchg notl add mov (bad) (bad) callq adc cli pop imull pushq pop pushq retq push jmpq nop mov hlt mov rorb (bad) adc fidivrl cmp sub mov mov fwait xor jl cmc xlat (bad) ss movsb xchg mov (bad) xchg fdivs iret (bad) lea mov (bad) sti rex.WRB rex.WR cs xchg (bad) cwtl xchg clc (bad) imul push push fcoml and xchg fnstenv roll (bad) pop icebp xchg xchg push lahf lea repnz mov mov push jge loope clc pushfq (bad) and add rex.RXB mov in xor xor seta cwtl (bad) (bad) pop pop mov repnz xchg sub stos and (bad) cwtl sub (bad) mov (bad) cmp mov cli lea test addl enterq add pushfq je adc jne jns xchg (bad) adc xchg rex.RB xchg and xchg mov adc sub jnp js fcoms adc cmp imul mov and xchg (bad) pop (bad) xchg sbbb (bad) ds (bad) rex.X stos (bad) test (bad) push adc imul (bad) retq xchg fnstcw cmpsb jbe xchg and rex.X (bad) rcl xchg xchg mov rcrl fimull pop jnp pushfq movsb cli and iret movabs imul rex.WX adc rcrb jl xchg push (bad) mov xchg (bad) and xchg or loop or in jns push adc fbld jbe adc insl pop xor mov mov cmp (bad) sub xchg adc (bad) lods popfq mov pop sub notl subl rex.WB sub xchg addr32 xchg in adcl sbb sbb cmpb jmpq rex.WRX rex.W stos xor jae sti rex.WRX rex.WXB fs (bad) mov (bad) (bad) or lahf (bad) lock push xchg imul add sahf repz or ja xor stos xor xchg xchg rex.WR in add or pop insl sub and (bad) rex.WXB leaveq (bad) xor movsb xchg xchg (bad) rex.RX xchg pushq in jne xchg adc pop retq in (bad) movslq add mov mov outsl clc pop lcall sahf jo psubusw xchg addr32 movabs (bad) (bad) (bad) cmp and adc add and out lea fsts (bad) or mov jl rex.RX sub negl insl iret (bad) sti xchg addr32 mov mov pushq xchg sahf pushq mov rex.WRXB rex.WXB jo jb icebp jg (bad) jno sub rex.WRXB rex.RB adc fwait rex.WR lahf callq loop add cwtl andb pushfq adc (bad) xor jae rex.WXB xor add imul icebp sub movabs mov rex.WRX xchg (bad) pop (bad) push push cmp add rex.WX rex.WXB xorb xchg pop leaveq (bad) je test rex.R scas push rcrl and sbb mov jns sub push xchg xor mov or add movsb loope lcall mov add movsl push cwtl rex.WRB movsb xchg sahf leaveq sbb xor loopne stos rex.WXB (bad) jle jge push mov cmp retq (bad) clc push xlat (bad) mov xor mov leaveq gs fcompl fcoms jbe (bad) cmp rex.RX callw outsl fcoms (bad) jge jmpq (bad) mov pushfq (bad) sbb sub mov cmp rex.WRXB sub push and mov pop xchg ss add jge loop rex.XB fisttpl fsubp cwtl test movabs addr32 in cmpsl scas in stos xchg mov in movabs sbb jl mov (bad) movsb sti test movsb (bad) movslq cltd and xchg jle and (bad) (bad) (bad) push cmpsb loop pop test xchg sahf or push pop sub jrcxz lahf in jae pushq in loop movhps pushq popfq rex.WB es or sbb xor pop (bad) ja or (bad) (bad) (bad) add xchg outsb pop retq push mov callq jrcxz cmp mov out lods stc jle data16 xchg cmp lock jb pop cs insl js mov cmc sahf (bad) add insb xchg fcmovbe out pushq outsb add cmp movsl jg insl mov addr32 pop orl cwtl lahf rex.WRB sub loope (bad) es addl (bad) (bad) out mov sbb sub adc (bad) not movabs lret mov xchg icebp cwtl sbb fcom mov ja mov out adc ljmp or test xchg push jae xchg cmp mov jns int3 pop (bad) addr32 movslq stos retq mov rex.WX cmp xchg (bad) mov lods (bad) retq mov jae and jbe (bad) and (bad) mov scas movabs lods sahf mov jle mov mov je popfq xlat clc leaveq jb (bad) cli movabs mov jl movslq rorb lods jns divb or rex.R mov jg lea (bad) iret pop rex popq cltd sbb adc xchg (bad) cld mov pop (bad) cli (bad) fisttp mov test icebp mov pop xchg jae pushq adc xor shrb jrcxz lock fs xchg std (bad) mov faddl in mov mov jle (bad) rex.RB es enterq (bad) outsl (bad) rex.RXB cltd mov imul xchg (bad) repnz pushq insl push xchg rex.WRX or or (bad) rex.WXB pop mov cmc xlat imull (bad) cwtl mov jmp (bad) xchg jle fiadd sahf xchg pushq mov movabs (bad) mov adc sbb rex.WRX (bad) mov mov mov test sbb out (bad) repnz enterq xchg cs cmpsl test rex.XB rex.W jg xlat or xor xchg jmpq pop jbe xor mov sti stos lods iret mov xchg adc lea rcrb ja sti lock cmpsb (bad) jmp lea adcl outsb jrcxz mov xchg mov (bad) adc (bad) rex.W fisttpll enterq loope rex.R enterq popfq push cs rclb stos xchg mov iret lods (bad) add fsubp mov sahf int mov adc add push pop xchg test rcrl add and pop movsl mov pushfq or test pushq ficomp sub movslq sarl negl cwtl xchg lar rex xor mov ja outsb hlt xchg (bad) xchg out rex.WRX cli jns lods repz cmpsb lods retq stc shr xchg out (bad) (bad) retq lahf (bad) fsubs jp mov sub sahf mov ja jl movabs in adc rcll mov lock adc mov mov rex nop cld mov lea popfq sbb leaveq cltd movslq icebp gs sub es add xchg fsubrl rex.WXB mov mov (bad) xlat (bad) fisubr adc xor add (bad) loopne (bad) adc rex.WX rex.B mov adc imul push mov callq gs mov lea mov (bad) imul xor insl xchg jle je mov fwait bnd push cmc (bad) fsub xchg and (bad) xor scas or push jo sub pop mov sbb xchg cmp out cmpsl clc (bad) shr movsb cmp divl pop mov xchg (bad) lock xor xchg sbb (bad) xor add (bad) (bad) (bad) rcrl or loopne and in xchg or fucomip jg or lret xchg mov icebp cli (bad) mov mov sbb pushq cmp xchg loope jne data16 adc leaveq fstl movslq xchg out (bad) jge sub hlt rex.WXB adc lods jns (bad) ud1 insl int xchg and (bad) rex.RB fist insb retq push enterq add fldt mov movabs enterq notl (bad) jp sbb sbbl jnp xor fcoms movabs push cmp mov je xchg mov leaveq and cmp push mov lret rex.RX js sbb mov movabs cmpsb rex.WXB rex.RXB insb or xchg xchg lret sarb in rcrl pop pop rex xor ds retq sub movabs xchg retq (bad) xor jns test insl pop rclb out pushq sub mov nop sub (bad) sbb cli js test cmp (bad) jne cmpsl callq cli stos mov lret (bad) rex.WB addr32 cmpsb or (bad) xor js xchg rex.WRB rex.XB jle stos fstpt xchg cmp adc jmpq in rex.RXB xchg (bad) nop data16 add and stc (bad) ljmp lods mov push cmp (bad) mov stos mov push movsl leaveq movabs mov cs fisubl cwtl sub iret cmp xchg jnp out pop shrl push xchg sub in xchg rex.RB xchg stc out mov vpextrq sbb fsubl stc xchg pop loop int test jg sub (bad) sti (bad) xchg (bad) outsb lret (bad) rex.X out hlt rex.WRXB adc add insl push (bad) addr32 push push (bad) mov add lods sti and jp movd retq push clc jnp insl (bad) (bad) rex.W test adcl cmp pop mov sub xchg lahf adc pop imul outsl cmpsb leaveq cmc divl xchg mov add mov insb clc jp rex.R jrcxz xchg repz fdivr out adc rex.X (bad) sbb pushfq repnz (bad) xchg clc rex.WRXB mov (bad) sahf out (bad) (bad) jle rex.WRXB or xchg lahf std and lea pop xchg je jo test out loop xor not movsl mov xchg sbb (bad) mov sub mov (bad) xchg fmuls repz (bad) mov (bad) fs sbb (bad) insb and movabs xchg rex.WX rex.RXB loop incl add sbbb sbb cmpsl (bad) xchg test out or xchg rex.X insl add pop ds (bad) (bad) mov jle (bad) rex.R insb fucomp bsf xor shll pushq movabs mov cmpsb jnp or sub cmp (bad) mov add mull (bad) xchg imul sbb fadds push std stc cltd and mov mov imul sub jnp pop cmpsb sub cwtl xchg push jns sub xchg mov pop stos xor fcoms jle rex.X cmpsb mov sbb (bad) rex.WRB adc (bad) repz sub pop imull es xchg stos pslld xlat (bad) (bad) xor pushq lret repz fcoml (bad) mov (bad) or xor sub (bad) pop es movslq sahf out hlt in fwait jne,pn pushfq (bad) subl (bad) out shr push rex.WRXB rex.XB push cwtl js add sbb sub xchg xchg rorb sbb xchg (bad) cld clc (bad) mov and (bad) add adc (bad) mov and negl xchg insl jrcxz movabs (bad) rorl mov adc xor xor je out xchg jns sbb xor movsb cmpsb or (bad) rex.WRX jp int3 sbb fistl push jle mov mov stos (bad) and mov cmpsb jl jmp mov enterq sarb jne sbb roll (bad) nop (bad) mov push xchg loopne fsubrl cwtl xchg pop (bad) pop push stos lcall (bad) movslq jg and cmp jge xchg rcrl sbb mov mov (bad) je rex.RXB rex.WRX jmpq shrl adc in sbb fisub cwtl fsts adc xchg pop sbbb xlat rex mov (bad) mov xorb or (bad) movabs xchg rex.R mov mov (bad) not movabs int3 fs (bad) mov (bad) adc sub push rex.RB rorb rex.WX clc (bad) add (bad) int3 loopne (bad) scas mov test mov repnz out ds rex repz rcl (bad) lods cltd rex.WR (bad) mov iret rex.WB stos (bad) (bad) in jo rex.XB mov (bad) push enterq or pop repz xchg mov (bad) fistl leaveq idivl and add sub loope pop jnp retq (bad) fcoms cvtps2pi (bad) jmp (bad) insb divl sahf lahf cld (bad) adc add push jg mov imul (bad) sbb sbb rex.RXB xchg cmpsb lret (bad) sahf js cltd cli lock fidiv add xchg (bad) cltd and lahf in loop xchg mov (bad) xchg cmp jo sub xchg push in (bad) add sarl jb movabs fsubs add pop hlt imul mov (bad) push rex.WXB xchg jne rex.WRB fldt movsl xchg jl repz (bad) loop jmp movabs (bad) or and je loope mov rex.RB pushfq xchg not adc push jmp pushfq lock scas fucomip xchg cmp jno pushq out mov xor (bad) (bad) sbb xchg (bad) test xchg jae (bad) cld stos rex.X mov es mov loop xchg (bad) jbe push sbb adc xchg mov lods (bad) jrcxz or xchg int3 sbb sub mov callq and rex.RXB pop mov and add (bad) jge xchg callq push lods stc xchg or xchg lods rcl scas adc out js rex rex.WRB rcrl addr32 adc jrcxz xchg xlat in (bad) (bad) (bad) mov fsts sub pop xchg (bad) xlat ja jge xchg in insl int (bad) fisttp cltd mov fisubrl nop jb test (bad) cli rex.X lods pop xorl xchg lea (bad) (bad) movabs test mov jnp rex.RX enterq stc (bad) rex.WR rex.W in sarb sti std or mov fiaddl and ficom popfq add mov add adc repz out sbb pushfq cmc adc popfq jle xor cwtl pop sbb add (bad) cltd sub (bad) xchg movsl pop mov mov imul (bad) jno sbb (bad) adc mov mov (bad) lret scas movslq jmpq rclb adc mov jg movslq sbb sub outsl iret jg mov (bad) xor (bad) sbb not cmpsl int3 iret nop push movabs fadds (bad) sub (bad) movabs jmp adc test xor (bad) adc out testb xchg (bad) jbe movhps movb xor retq loop xor rex.RB loopne sbb jb pop cmpsl xchg sarl movsb loop xlat pushw cld scas sbbl lahf cld cwtl jo fldenv rex.WRXB shlb mov movslq or and push xchg sbb movslq jle and enterq fcoms jae pop pop pop lea adc retq (bad) outsl idivl (bad) add xchg (bad) jae imull clc test stos mov jns enterq xor (bad) (bad) andl xchg (bad) mov xor rex.WRB movslq mov outsb popfq cmpsb (bad) pop (bad) push (bad) gs cld (bad) icebp xor rex.WXB xlat rex.WRB (bad) fist push movsb pop cltd pushfq loopne,pt jo and cmpsb or xchg pop sub (bad) mov sub movabs movslq lea cltd add rcl mov sub icebp sbb xchg or in and add sahf out jle fnstenv addr32 xchg sub rex.RX xchg xchg (bad) orl or add cs ror or rorl add (bad) andb nop (bad) xchg retq mov xchg je in icebp pushq sti outsl push xchg jnp or xchg (bad) mov xlat sbb xchg movabs enterq sti addr32 xchg movabs cmp cs or rex.W cmp sahf cwtl in mov addr32 jnp sti jae icebp sbb mov (bad) mov jne cmpsl imul std cmp jne xchg adc (bad) imul lahf out xlat sarl rclb sbb cmp xchg fbstp rex.R repz xchg xor fidivr (bad) (bad) xchg out jle cwtl (bad) lods mov lahf nop jge movsl mov adcl xlat xor out loopne mov fldl rex.W xlat int3 scas sahf (bad) rex.WRX lock pushfq je or mov mov loope sub int3 or cmp rex.WRXB jo sahf xchg xchg outsl sub mov mov repz push adc in cmpsl gs push cmp pop xor stc cmp mov xlat out jae pop xchg repz pushq cmp movabs cmpsb (bad) xlat int je outsl xchg pop (bad) rex.WRX cli jno (bad) mov sahf mov cmpsl (bad) imul xor cmp rex.RXB jo outsl rex.XB imul cmp xor (bad) mov cwtl jae mov cmpsl push insb rex.WR callq adc test xchg push gs or xchg mulb jle jl pop nop (bad) pop sbb stc (bad) push mov neg mov in rcll pop out jns es xlat mov fldenv outsl and jmpq in xchg sti (bad) xor repz test not sbb outsb jnp jl shlb pop push rex.X or sbb jg (bad) (bad) (bad) (bad) ljmp fstpl xchg (bad) mov adc adc fmul or incl xchg add rex.WRXB xchg sub cmp retq mov cld xchg out sbb int3 xchg cmpsl xor movsb movabs push (bad) shll sahf pushfq movsl je mov rex.XB out (bad) mov (bad) rex.RB jae and adc (bad) xchg je enterq sahf xchg (bad) loopne cld (bad) out sbb pop cmpsl scas jle rex.WXB mov lea (bad) divl cmpsb (bad) xchg pop (bad) xchg and xor (bad) cs (bad) xchg hlt mov int3 jle (bad) notl push cwtl mov (bad) fildll in cmp cmp xchg jae jl xchg pushfq in xchg sub fcompl (bad) rex.RXB rex.WR addr32 fs add sahf or mov movsb addr32 xchg push mov int3 imul xor rex.XB or (bad) xchg (bad) jae (bad) sbb out fcoml mov (bad) pushfq fdivr and nop lea movabs (bad) adc jno jg xchg outsl mov jnp and jmp (bad) xor mov loope insl (bad) jrcxz xchg mov addr32 popfq in jl cmp rex.WXB rex.RX fildll fidivl pop jmp ja retq add (bad) cmp rex.X rex.WB mov test (bad) notb xchg (bad) (bad) jb rex.WXB cltd test test in fsts xor (bad) and xchg sub mov rex.RXB test cltd insb push (bad) xchg stos fdivrl mov jbe cmp add lods (bad) (bad) jle xchg xchg shll addr32 xchg sub out lods cmc hlt push jl add test (bad) test push out (bad) stos in xchg vmaxpd (bad) addr32 or xchg (bad) xor and movsb (bad) mov pop mov mov mov (bad) loopne sti pop sahf std mul mov retq clc mov int stos (bad) insb (bad) cmpsb outsb jl (bad) (bad) rex.R xchg and nop mov ss fcoml xchg sbb xchg mov (bad) scas xchg movabs mov roll retq (bad) scas iret adcb fimul jne sbb cmpsb push mov jp nop sbb pop hlt fwait enterq rex.RX mov mov rex.WRXB push sub stos xchg (bad) out loopne movabs out (bad) popq cmpsl xor jbe addr32 (bad) jne movabs (bad) rcrb andl (bad) or cwtl popfq add fsubr jmpq test pushfq (bad) (bad) fimul mov mov test rol mov lock pushq lahf rex.WRXB add mov mov pop lret fisubrl (bad) sub (bad) sbb xchg movsl xor sbb movabs (bad) rex.B rex.W rex.WRB or (bad) sub (bad) xor test and stos movslq (bad) nop xchg or mov in mov cwtl jl scas fs retq (bad) lods mov out cmp xchg xchg pop loope lock loop xchg out insb sub jle xchg cmpsb push icebp and (bad) sub outsb cmp xor loope jae sbb rcrl fistl pushfq xchg rex.RXB movabs mov (bad) xchg and negb xchg pop movsb jmpq pop rex.XB lods lea sub rclb sub movsl (bad) mov or test stos mov (bad) add nop rex.WX xchg rex.R xchg lock psrlq mov pushq cwtl rex.X push jno (bad) mov pop ficompl rex.WRX push sbb rex.WXB mov adc fstpl cmc xorb loope xchg rex.RXB mov mov mov xor add mov cmpsb sahf or movslq or insl nop cli enterq mov ja (bad) (bad) nop stos jl mov (bad) push loope sahf fsubp (bad) insl sbb jne movabs rex (bad) mov add and push movsl icebp add (bad) enterq rex.WRXB xchg rex.XB sti pop sahf xlat lea mov sbb enterq pushfq in ffreep shrb xchg sti push lock sbb ds lods (bad) loopne jns and mov fwait popfq lods lock mov push xchg test add pop cmpsl xchg test mov mov mov mov (bad) (bad) xchg jmp sbb andb rex.WRX adc shr cltd rex.X incb cmp insl lea (bad) loopne (bad) or popfq pop (bad) rex.WXB in and or (bad) adc sub mov mov repz test imul movabs jne rex.XB data16 push xor pop movabs xchg sbb cmp xchg sbb fiadd lea cwtl and xchg movabs cmp test mov (bad) (bad) jae rex.RB cli xlat scas xchg or pop imul loope rcr fstl xchg cltd mov xchg sub std fmul rex.XB jnp jns xor (bad) (bad) rex.WRB rex.RX (bad) xchg imul hlt xchg xor rcrl or sub (bad) mov in or mov ss leaveq movabs (bad) xchg movabs xchg in cmp adc retq (bad) (bad) enterq insb xchg jge (bad) inc out out cmpl and stos add outsb rex rex.WB cwtl mov in data16 imul add ja mov pop jns and (bad) jrcxz pop sub cmp xlat (bad) cltd pop out movsb sbb mov je out or (bad) ss mov sub sbb loop stc mov imul stos pushq retq divl (bad) xchg imul callq xchg rex.RB jl lods cmp sub xor push or fistl neg je cltd movslq push mov movabs jp mov jmpq js push rcrl in (bad) retq scas xchg es rex.WB rex.X testl lret fdivrs (bad) movsb ds rex.XB fwait sub push scas rex.W and push stos (bad) or fwait xor pushfq rex.X pushfq out mov jne cld leaveq xchg mov sbb jb jnp pushfq and (bad) xchg out xor rex.XB imulb cmp cwtl sub jp xor fisubl jrcxz pop adc sbb rex.WB rex.RXB rex.RX (bad) pop fwait sub jge in xchg fisubrl sbb cmp in xchg (bad) pop (bad) add int adc fsub movabs mov mov stos movabs mov stc mov xchg cmpsl movabs pop push int add popfq xchg sbb xchg push mov rex.WR stos mov mov loopne (bad) and and shl test sbb xchg movabs insb xchg shll cmp (bad) lock jrcxz add clc and (bad) fwait movb adc lret ja xchg rex.RB (bad) cmpsb retq and movabs lahf cld movsl jmpq adc xchg and or test add xchg in sbb icebp (bad) xchg mov xchg pushq pushq (bad) (bad) sbb xchg (bad) sub clc loopne cld (bad) sahf lahf fcmovbe pop cmp movslq push ja jmpq xchg scas rex.WRX rex.WRXB mov add mov (bad) (bad) jno lret sbb xor leaveq es sahf xchg cmp xchg ja xchg push (bad) (bad) and mov xchg cmp sbb add mov xchg rex.WX jne xchg pop or add mov xor sub testl mov in jg mov and (bad) pushfq js rex.WRX (bad) adc mov xchg mov out movabs movabs (bad) mov movslq sbb mov xor push cmp mov rex.RX (bad) sbb (bad) sti xchg mov cmpsb movsb repz pop pushfq xorb pop shrl rex.WRX mov movsl (bad) cmpsl sti jp xchg push mov movsl (bad) rex.RXB in mov xor out fisubrl xchg mov roll xchg mov push stc lods callq movabs xor xchg movq popfq (bad) jae and (bad) mov jp callq stos insb mov outsb scas cmc clc cmpsb rex.WB (bad) jp add scas mov fildll pop (bad) pushq (bad) (bad) cwtl jmp stos sub std mov (bad) sbb fs xchg rex.WRXB jo (bad) (bad) in pop (bad) add xchg and cmp nop sbb sub (bad) or sbb or (bad) mov pop rex.WR rex.RB pop movabs jns fnop (bad) (bad) movabs xchg pop jle add lahf adc (bad) xchg pop insb jp cli rex.RX ja jl sbb adcl mov cld mov jmp xchg xchg push cmpl jl (bad) mov jae mov std xchg pop lret (bad) lea sub movabs movabs fistl (bad) adc push sub (bad) push push ja jne mov leaveq pop rex.RB stos jae xchg sub (bad) cs data16 (bad) adc mov push out or push mov push cmc adc xchg nop (bad) adc jnp stos movabs push mov rex.WB ds mov mov (bad) fdivr xchg loope test push insl pop pop pushq fldenv mov pop movsl movabs xchg sbb in (bad) sub retq lret xchg sbb add (bad) repnz sbb sub out hlt sbb (bad) mov (bad) mov adc and repnz outsl loopne scas lods enterq xor dec movslq xchg mov lahf fnstsw inc add movabs or xchg mov xor push jg es adc out mov (bad) push mov xchg pushq insb (bad) cmpsb xchg mov cmp mov lret mov stc push or mov rex.XB fs mov (bad) retq fidivr (bad) adc xchg loop pop out xchg mov or jl enterq pop mov loopne test (bad) repnz popfq cmp xor adc jrcxz,pt jbe movsb xor sti (bad) and cwtl lea xchg jno cld xchg sub test jrcxz cmpsl retq (bad) popfq rorb lret push imul movabs imul pop (bad) push (bad) fsubs push sbb xchg retq (bad) cs xchg (bad) (bad) lret xchg sbb mov (bad) cmpsb rex.B mov pop pop and rex.WB cmp add lock cwtl sbb iret movabs imull (bad) psubsb cmpsl (bad) rex.WXB out lret notb rorl (bad) cs xchg fstpl sbb (bad) jrcxz mov out push (bad) ds cmp lahf ja adc pop or xchg cmp xchg mov subl add and movabs xor pushfq sub cmp in mov (bad) movabs rex.XB (bad) lods rex.WXB pushfq add jbe js,pn (bad) pop lahf rex.XB pop stc sbb (bad) jae out es cmp pop pop cwtl mov (bad) std xchg adcl mov xchg fisttpl add sbb jbe add out (bad) sub popfq scas lods (bad) enterq (bad) (bad) cmp xchg (bad) pop mov add (bad) mov cmpsl stos out xchg retq pop outsb out movabs pop (bad) (bad) movsl test int stos xchg mov pop fnstenv test stos push cld nop ss jrcxz xchg xchg rex.WRX fldl pushfq icebp retq (bad) je rex.W sbb out lret (bad) subb xchg clc cltd sbb xchg mov rex.WB add loop (bad) movsb sbb cmc mov icebp rex.X xorl xchg adc or fnop or xchg xlat cmpsl (bad) movslq jrcxz loopne mov lods lock (bad) sub fcomps xchg rex.X cld rorb (bad) (bad) sub lods stos pushfq movabs in rorb xchg or cmp cmp gs mov xor and sbb xchg insl (bad) pop (bad) pop push rex.WXB lahf test enterq sbb out cmpsl data16 fisubrl movabs jb (bad) xor jbe or mov rolb outsb rex.WR pop cmpsb movsl mov rex.W sub jmp cmpsl scas add xchg lods movabs sub (bad) in int3 xchg mov test jne xchg rorb mov rex.RB mov sub xchg rex sub sbb imul mov scas xchg cmpsl (bad) fcompl jne (bad) lods jmp xchg lock movsb cmpsb rex.WX fstl push xchg add callq (bad) jmp (bad) xchg movslq xchg mov push mov cmp mov xor xchg sti in xchg cltd pushq sbb std outsl rex.R ficompl stos in loop (bad) cmp push sub cmp and rex.WRX push scas pop mov mov sbb imull lahf mov (bad) sahf pop or retq jae out sahf mov (bad) xchg push cltd (bad) adc rex.WRXB rex.WRB imul (bad) cmp out or jge and (bad) xlat je cmpsl adc sbb cmpsl retq jp clc fistp cmc out rex pushfq xchg mov push stc fs rex.B movsl (bad) xor outsb xorb mov icebp cwtl lret or and jo adcl cmp (bad) jp (bad) xchg (bad) or xchg push (bad) adcb xchg loopne (bad) pop lods jno fist rclb insb cmpsl prefetch mov pop enterq pushfq lods pushfq add or add lahf xor sub mov mov push xchg and ja push in fnsave enterq (bad) pop xchg clc movsb rex.WX mov push ror outsb mov sbb jmpq movslq xchg mov (bad) xchg add cmp or xchg out imul sub rex.WRXB mov popfq cmpsl (bad) mov jle (bad) (bad) notb rex.WRB cli nop addr32 (bad) test jnp (bad) rex.WRXB jmp (bad) mov sub loop (bad) mov push (bad) xchg pop cmp mov pop lock movabs (bad) (bad) bnd push (bad) nop mov cs xlat pop clc fidivr xchg insb jle lea retq or jp push mov xchg (bad) mov movabs int mov (bad) and jb fisubl cmp push sar ja leaveq xchg fidiv test xor jne imulb rex.WR rex.XB mov or imul xchg ficoml xchg sub mov push xlat rex.WX xchg cmpsl and xlat cmpsb xor xchg lea out (bad) pushfq jmpq xchg pop jl jle add out mov jp cmp sbb adc lea (bad) mov pop pushq es enterq sub sahf adc test fs push (bad) rex.RXB (bad) insb sahf (bad) sbb iret xchg gs sbb icebp (bad) xor (bad) rex.R rex.X xchg mov rex.W pop push sub rex.WR addr32 sub sbb xchg js xor frstor (bad) mov xor (bad) and pop push cmc pop xchg out cmp fs imul mov xchg sub jb sbb mov (bad) mov (bad) divl mov rorl xchg and add nop push callq rex.WRX mov xchg ljmp stos push mov (bad) enterq fstps (bad) pop pop or xlat adc incl rex.R xchg imul cmp (bad) mov sarb and sahf int pop jns data16 cmp jmp rex.RX xor xlat maxps jl or mov jbe popfq (bad) rex.WR rex rex.WX je xchg jp mov (bad) test (bad) (bad) rex.X ss ja out pushfq pushq scas xor (bad) xchg cltd (bad) jmpq rex.W stos and movsb vmovntdq cmp mov (bad) push (bad) pushq (bad) adc data16 xor scas xlat out push mov jrcxz divl addr32 mov data16 loop xor cmpsl mov lods cmc jo ds and repnz icebp push xchg xor or mov out sbb sub rcl sbb jmpq in cld cltd xchg imull je or (bad) add pop (bad) sbb (bad) (bad) (bad) jno pop rex.WXB xchg (bad) or lods mov xchg iret jo xchg pushq rex.WR (bad) int pushfq addr32 xchg testb cmpsb jno xchg mov mov (bad) sbb (bad) pushq (bad) stos jo lea (bad) mov add (bad) fcompl cmp rex fwait lcall push xor pop push xchg (bad) mov jnp movslq imul sub insb mov sbb (bad) jbe add fild out xchg movslq jl xchg cli (bad) hlt nop sub pushq faddp int mov jne outsb insl enterq cmpsb imul data16 pushq pop push mov cltd pushfq xchg pop test pushq adc fnstsw iret mov rex.WB es fwait lea lock sbb sub mov out cmp pushfq pushq xchg in pop lret (bad) mov xchg (bad) jo pushq rex.RB movabs (bad) adc jno mov rex.XB xchg add pop cwtl sahf (bad) mov jg int (bad) clc pushq (bad) rex.RB es mov jmpq rex.WXB cmp or pushfq (bad) shrl cmpsl stos xor fbld adc sahf mov mov or rcrb jmpq sbb xchg pop jge stc mov xchg sub rex.XB nop outsl sti xor movsl sahf push mov or fsub es (bad) xchg or pushfq js add cmp cmp xor out push cmp xchg (bad) stos mov popfq jb xchg lcall fcompl movabs jno rex.WX (bad) cmp jne cli jmp add cmp (bad) cmp adc (bad) (bad) cmpsb pop adc mov rorq cwtl adc xlat vexpandpd xor popfq sbb xor xlat mov xor xchg movsb or (bad) xor pop subl xor xchg (bad) rclb (bad) jo,pn mov (bad) hlt mov mov outsl add xchg and movabs mull shrl addr32 fdiv cmc in or imul push gs cwtl (bad) mov (bad) in rex.RXB movabs (bad) xlat leaveq shrl fnstcw pop cwtl fstl xchg adc (bad) (bad) scas cmp (bad) mull adc xchg roll add (bad) int3 cltd cmp (bad) rcrl movabs lods and (bad) rex.WXB mov js nop (bad) imul (bad) cs adc sahf (bad) inc scas mov xchg sub mov xor jle fs (bad) sbb (bad) xor add sbb ja out movsl (bad) iret xchg and push cwtl loope adc mov mov xchg fsubrp rex.RB cmp sti out xchg insb rex.WX lahf cwtl sbb rex.WRX int sbb xchg rex.WRB sarb pop jo xchg (bad) (bad) rex.WRX xchg sub jge (bad) adc xchg orl movabs pop xchg cmc xchg sub and sub push retq (bad) (bad) rex.WX xchg push sub (bad) jae fucomi insl (bad) pop adc and sub pop xchg or (bad) out insl shl xchg mov outsl out movabs jo fistl outsb retq sbb jo pop sbb or (bad) xchg leaveq (bad) and vmwrite jnp xor movabs std pop pushq push cmp rex.X xor test sbb pushq add (bad) sbbl cltd fs (bad) test (bad) js mov xchg mov cltd rex.WRB xchg adc out (bad) (bad) (bad) movabs xor xchg xlat lret add jo sbb and data16 mov lock (bad) xchg sbb rex.WX (bad) test add loopne cwtl loope popfq push pop or xchg add ds (bad) jne fisttp (bad) xchg (bad) jg push jle pop stos popfq es pop movsb (bad) jp mov xchg (bad) mov scas mov nop jg and outsl fnop pop sub loope xchg ja pop (bad) and pushq add rcll movabs adc callq stos cmp rex.WRX es (bad) fsubl ss fs test mull (bad) mov rclb (bad) cmp rcrb in rex.RXB jbe sbb rex.W xor cmp jmp cmp push add mov (bad) fsubrs cld cwtl xchg retq cmpsb movabs insb and push xor (bad) ja or jbe or (bad) rex.WRXB rex.WXB iret and pop sub xchg (bad) mov xchg pop jle mov loopne xchg callq mov movslq data16 mov addr32 std mov out ja (bad) scas lods cli xchg xchg push jbe callq xchg shr mov (bad) pop and out mov rclb push sbb ffreep lea (bad) pop insb add (bad) rex.RXB mov cmp movabs (bad) (bad) notb adc sbb nop add mov fimull sbb (bad) stos popfq and jl out imul loope mov jb mov (bad) mov (bad) out movsb jb sbb enterq imul pushq loopne (bad) cwtl movabs cltd nop sbb mov jge (bad) fimul cmp movsb jbe in mov xchg movabs sahf rex ja (bad) (bad) xchg sub sbb mov insl (bad) ficom xlat push or (bad) xchg push pushq mov xchg rex.WRXB rclb rex.X jne incl (bad) mov icebp xchg push movslq and mov jmp and cwtl sti rex.RB xchg mov jae push or iret sub pushfq cld rex.WRXB mov (bad) test xlat mov hlt ja addl rex.WX or pop gs mov cs cltd pop and jp test push push movsl (bad) in pop mov div (bad) rex.WXB fwait (bad) pop adc loopne retq xchg push stc (bad) push (bad) mov add xchg imul xor sbb ss rex.WX retq gs pop (bad) pop sahf (bad) (bad) repz sub jl cmp xor (bad) pop cmp sar jle rex.X punpcklbw xor retq (bad) fsubl xchg xchg in adc rex.WRXB rex.B add xor (bad) ss pop xchg mov (bad) icebp or fmul sbb jae stc mov mov out addr32 rex fwait (bad) vandps xchg (bad) (bad) jrcxz mov movd jno mov cmp cmp mov enterq push jmpq jmp mov out jbe push pop (bad) (bad) movslq xor (bad) (bad) jmp (bad) mov rex.RB sub xchg rex.B lahf pop pop sub jg xchg mov adc sbb outsl sahf push sub lret jbe xchg (bad) fnop xchg pop (bad) sub push je cld xchg data16 (bad) xor rcll scas push adc fist sub lret test add xor rex.B rex.WRXB or (bad) push mov cmp sahf movsb xchg (bad) (bad) enterq stos and add (bad) push jp add xchg scas movsb mov roll out in out cli xchg xor (bad) cmc movabs add movabs int shrl jo push clc lea rex.B imul jne (bad) data16 rex.WXB adc xorb jmpq xchg sbb rex outsl xchg addr32 fcompl jb mov jl (bad) push out (bad) andl (bad) es add mov jo adc fstpl add mov negl or sahf mov mov or xor (bad) (bad) jnp jno or or xorl or pop (bad) jrcxz movsb (bad) sub repz push or jb mov movabs (bad) xor loopne retq rcrb adc ss (bad) cmp xchg icebp xor movabs xchg rex.B sbb xchg adc gs lods sub (bad) xchg ja mov (bad) xchg add ror mov cmp sahf (bad) (bad) movabs xchg cmp mul lret xchg and jno push or (bad) xchg (bad) (bad) mov xchg sub scas std lea scas jns leaveq mov movslq xchg push (bad) out (bad) cld push scas repz ficomp xchg shrl vmaxsd pop xor idiv (bad) mov jmp (bad) push or cli sahf rex.WB repz sub cld xchg lret fisubrl sub cwtl cmpsb clc rex.WX sub rex.RB or jrcxz jle adcl icebp add lret cmp rex.WX (bad) addr32 xor jle pop cwtl stos cmc shll (bad) jl cs xchg (bad) mov orl cmpsb pop in div movsb hlt shrb nop stc xor (bad) insl cli sbb xchg xchg sub rex.WRXB mov fmulp (bad) loopne mov fwait sarl addb fldl cmpsl (bad) rex.WB (bad) rex.W loopne ja xchg ds rex.WRB xchg pop or js shrb repz sbb pop xchg rorb (bad) lahf xchg push add loope xchg mov sti mov nop movabs mov jnp xchg xchg xor sub cwtl fdivs fisttp pop (bad) (bad) cmp pop sbb in out fdiv sti jle mov adc jo or callq push and (bad) rex.WRXB xchg (bad) and sub movabs mov mov xchg pop js rex.WRX rex.WX mov pop repnz jo setns cmp mov xor xor fcomi (bad) push ss mov sahf mov jle jbe (bad) mov jnp jg xor rcr add rex.RX jmpq out xchg iret (bad) mulb xor callq xchg int3 sub movsb lret push (bad) pushfq sbb push movslq cmpsb xor or loope ja xchg (bad) xor jle test add loop cs sti in mov mov (bad) add adc in mov (bad) (bad) lea xchg ficoml movabs jnp xchg cwtl enterq rex.RB rex.RXB in cld xchg mov push loopne mov lahf jmpq mov out xchg hlt xchg mov mov test es mov movsb sbb jno stos pushfq movabs xchg xor movabs pushq sbb js cmc mov mov xchg movabs xchg (bad) and fcoms insl jne pop sbb (bad) sub fs out (bad) xchg xchg add cwtl fwait movsb mov lahf (bad) mov and pushfq lods xchg ss sub sbb sbb xchg mov xor rex.XB mov movsl (bad) roll jle addr32 icebp sahf fldl rex.RXB rex.WX pop outsb sbb (bad) and out test mov (bad) cmp iret sub (bad) loop,pn rcll xlat xchg (bad) (bad) cmpsb xor rex.WX xchg adc movabs pop pushfq fildll nop sub cmp add hlt xchg insb jbe lods test mov rolb popfq pmullw adc mov retq (bad) mov jae movabs movsb jne jp cmp xlat in (bad) xchg jge rex and xlat jmp vmovaps out hlt (bad) xchg jge (bad) jne rex.RXB sti stc and movsl xchg rex.XB out (bad) fisttpl push push push mov lea pop push mov (bad) lret (bad) adcl out cmpsl pop add add in and rex.R and and movsl imul pop rex.WR (bad) push add cmpsl outsl mov mov xor loopne addl insl sahf (bad) (bad) rex.B rex sbb (bad) and movsb xchg mov or and or mov cmp (bad) or jl in (bad) jmp outsb sbbb and mov incb in pop mov movabs xchg mov and jo add pop mov sbb (bad) jb rex.RXB mov and cwtl (bad) xchg insb stos outsl (bad) movsl rex.WRXB adc and mov rex.X cmp cltd (bad) pop repz jnp lea lret and xlat push xor stc pop (bad) (bad) xchg or rex.WRXB iret mov loop xchg adc outsl test scas rorb ljmp jae push mov adc push (bad) (bad) mov addr32 sbb mov loop pushq mov rex rex.WR (bad) leaveq push pushq or (bad) out iret mov test xor loope rex.X repz (bad) out ds rclb cld cmp or enterq (bad) jns stos outsl shr sbb xor jle mov (bad) jge (bad) and add xchg mull stc loope (bad) idiv cltd retq lods or mov mov hlt xor push movsl mov adc negl notl jge sbb (bad) sbb int mov enterq mov jbe xchg imul sbb movabs sub out fs or mov (bad) (bad) rex.WX shll movabs rex.XB data16 mov imul (bad) subl (bad) cmpl xor sub retq sub or or cli jg adcl imul (bad) and rex.WRX adc pop fcoms vmovhpd retq adc rex.B movsb xchg add (bad) insl (bad) fimul lahf (bad) jp and out rorl nop rex.WR push (bad) (bad) cmc (bad) lahf pop loope fisttpll leaveq popfq icebp jmpq sub pushfq sbb sub mov pop jbe mov (bad) jb (bad) clc out xchg cmc xchg sub cmpsb or sbb shl addr32 fcmovnbe xchg mov or (bad) cmp sbb shl notb rex.R rex.RX xchg (bad) outsl and jge mov (bad) stos xchg imull (bad) out repnz lods (bad) test jb outsl cwtl xchg mov popfq jmp or ja adc jns xchg xchg pushq or (bad) lea outsb in sub rex.WRX xchg (bad) insb (bad) (bad) jrcxz xchg pop mov jge (bad) mov pushfq test movabs xor stos xchg cmpsb jl scas rex lods xchg cltd movslq push mov xchg mov push (bad) movsl cmp mov outsl test (bad) or sub (bad) mov testl xor test lods es cli xchg xchg (bad) negl adc pop fwait ss pop xchg popfq sub (bad) xlat imul cwtl rex.WR repnz ficomp pop pushfq movabs xor popq jle or push xor push movabs in sub movsl ror or repnz jb fwait int3 fsubr (bad) sbb push (bad) rex.WXB xchg loopne pushfq push movsl je sbb rex.WX int3 and fdivrl or mov sahf mov or rex.XB xchg sbb pushq cmc clc mov sub rex.RX sub fcompl and (bad) scas mov movabs (bad) mov sti add es sahf rex.XB xor jmpq xchg (bad) adc std (bad) ja mov leaveq xlat (bad) outsb xor (bad) xor lea (bad) add pop cmp rex.WRXB cwtl out xchg loopne sbb leaveq fidivrl xchg mov xchg stos add enterq test (bad) (bad) mov or sbb sub sbb cmp xchg lahf mov callq mov mov mov rex.R loope vpsubw xchg scas pushfq out scas push xchg rex.RXB rex.WRX add lahf xchg cld out rcll mov movsb in mov movabs mov cmpsb rorl jns testl addr32 jp sahf out out pushfq sub pop pushq rcrb scas fsubl sbb (bad) rex.WRX rex.WXB rex.WRB in push xchg xor xchg sub movsl js sub mov movl mov mul stc pop sahf xchg cmp rex.B mov jmpq rex jno xchg shrl lret movsl in push (bad) mov jrcxz adc sahf sbb mov loope (bad) push push movabs insb cmpsl add mov clc (bad) nop sbb (bad) outsb mov xor mov xchg add loope loop (bad) test xor rex.RXB mov (bad) (bad) xchg insb mov xor pop or (bad) fisubr cmp cmpsl fsubrs addr32 rex.X rex.WR test sahf mov (bad) movabs rex.RB rex.X sub icebp xchg and add (bad) (bad) xchg jnp sub adc shrb movsl or stos pop cmpsb rex.RX and (bad) outsb and mov xchg xchg sub xchg sub test in push mov or and (bad) pop scas cltd stc outsb hlt sbb insl jbe (bad) xor xchg stc mov movabs jns push add mov cmp rex jae sub (bad) popfq (bad) loopne (bad) nop and out xchg xchg sub loop (bad) data16 rex.WRXB mov rex mov idivb (bad) pop cmpsb mov (bad) mov xchg or push adc mov rex.RXB xchg stos pop pushq add xchg retq popfq mov rex.WR jp lret iret nop xchg push (bad) imul pushq or fnsave jmpq pop nop sbb (bad) outsb (bad) movsb mov nop sbb ljmp xchg xchg xor scas cmpl jb cwtl xor ficom jle sub xchg push sub stos jns subl xchg sub mov pop jnp jg rex.RXB iret jmpq fiadd cwtl ss pushq fsub rex.WX mov out (bad) stos mov mov subl add rex.R scas jo xchg mov sub scas or rex push sahf movabs rex rex.WR or pop (bad) (bad) jmpq rex.B xchg rex.WRXB sub fmull sbb pushq loop (bad) jp fistp mov rex.X adcl and jbe ja movsb cmp sbb rex.RXB xchg push or jns jmpq mov (bad) ficomp add out int3 mov test rex.WRB adc retq jno pop (bad) xor movabs rex.RXB pop xor jmpq movslq icebp nop mov cmc sub std jg xor (bad) insl rex.RX fisubrl push add lret stc movabs mov jo sar adc cmpsl popq ja xchg mov lods adc adc jrcxz add (bad) mov pop fs push imul in rex.R jo cmpsl test movsl int and rex.WRXB jge sub (bad) ss mov push sub stos xchg xchg xchg push add jnp movslq movabs xor (bad) mov add xor cmp adc (bad) (bad) adc out jrcxz popfq push and push loop lret or int add xchg xlat cwtl out rcrl sbb add scas outsb movsb jb movabs xor adc jbe mov xor pop mov movsl sub lods add sbb loop in cmc fdivr and rex.X rex.WRXB (bad) movsl pop add pop adc xchg rex.WXB int3 cmpsb notb iret cmpsb (bad) jae rex.X fs (bad) xchg pushfq mov sahf cli mov insl cwtl test rex.WX (bad) (bad) (bad) int3 lods test xchg repnz xchg jae xchg subb mov adc cmpsl std xor ds nop xchg rex.RXB fs add (bad) ficompl insl imul stos stos enterq add imul xchg cwtl sub adcb jnp cmpsl jmp (bad) insb pop scas loop imulb xor cmc (bad) mov movsl shrl xchg rex.RB imul cmpsl cli fsub rclb sub push adcl xchg mov idiv insb (bad) cltd pushfq divl and sbb stc xchg push cltd (bad) (bad) mov outsb add adc (bad) stos (bad) int pop (bad) stc (bad) cmp (bad) and outsb (bad) cmpsb or pushfq sarl cmpsb fwait sbb pop stos outsl loopne out jg mov (bad) sub (bad) mov cmpsb xor add and mov pushq jge fistp cwtl sbb add iret adcl mov mov cmp pushfq rex.R add sahf xchg mov mov adc testl cwtl pop xchg sbb xchg repz (bad) rcll sbb fidivl xchg xorb std outsl mov xchg xor rex.WX push mov push cmp sahf sarb hlt sbb xor rex.B sahf leaveq jmp cli enterq fistpl rex.WRB mov jg mov cmp jnp movslq (bad) push scas mov mov fldt imull sub add jmpq pop cmpsb pushfq (bad) push jae insl divb sbb and xchg rorb jbe push (bad) cmp nop sub hlt (bad) xlat push xchg insl (bad) jl nop rorb test in movabs retq jmp sbb movsb (bad) xchg or sbb mov sahf cmp push sub cmc (bad) shrb gs cmpsb int sahf (bad) and rex.WB push xchg (bad) rex.W xchg xlat (bad) sub and cmp jb movabs adc pushfq movabs test test out jp xor add or lret xor mull lss lret xchg scas rex.WX mov xchg (bad) orl outsb jo movabs std int3 (bad) (bad) cmp (bad) jp (bad) jg xor insb lock jl (bad) (bad) nop xor mov loope retq outsl cmpsb pushq mov scas cmpsb movslq stos (bad) nop loope xor (bad) (bad) imul rex.WXB movabs jns xchg rex.R rex xor outsl lea xor mov xor rdtsc push jl mov mov mov (bad) outsb rolb shrb xchg hlt rex.WX es push (bad) (bad) xchg pop push test cmpsb mov shlb or pushfq imul rex.RXB xchg push (bad) cmc push (bad) push rex.RX or or and jne cld xchg or adc (bad) and xor cwtl (bad) cmp xlat (bad) (bad) (bad) or add imul sbb (bad) rex.WR jno out add mov fisttpll ficomp (bad) (bad) lods sbb jbe pop (bad) pushq leaveq or jb movsl (bad) push pop cmc (bad) xchg xor (bad) xor stos in xor cld cmp (bad) test in movsl rex.RXB lret cmp je jb mov loope push adc mov rex.WXB (bad) or (bad) (bad) push cmpsb pop mov (bad) jbe nop xor jbe or or outsb and mov data16 int3 xchg js add loopne mov nop adc pushq jno mov xlat mov je movabs (bad) rolb movabs xlat fs insb adc enterq mov mov mov or (bad) cmp xlat out ss (bad) rex.WR and jmpq cwtl lods add push imul xchg jbe add js (bad) loop mov jmpq rex.XB leaveq sti push adc pushq fisttpl mov sbb in xchg fisttpll (bad) (bad) popfq out xchg cld adc xchg cmpsb (bad) adc push xor xchg cmpb sub cmpsl fcomi (bad) xchg stc movsl subl (bad) int (bad) cmc adc xor mov push xor fcmovnbe xchg jge gs mov push (bad) (bad) xor and imul (bad) (bad) out xor addr32 outsb shll pushfq jmp sbb fadds or out adc xchg test jrcxz sub (bad) jno in xchg (bad) jo rex.RXB cwtl xor subb int3 popfq (bad) jae mov rex.XB xchg xor cmp and (bad) xchg es push add mov (bad) lret (bad) (bad) mov movabs mov cmp mov and stc pop out (bad) loop in xchg (bad) pushfq rex.R rex.B popfq add movslq mov loopne mov and or notl jb fstps cld pop fstl (bad) loop xchg psubsw shll (bad) (bad) cltd repnz jb mov mov (bad) adc push pop popfq jmp subl rex.XB fwait (bad) lret sahf xlat cmp xchg add enterq push cmpsb mov int3 rol xchg (bad) (bad) xor jne sahf mov cltd mov (bad) mov mov xchg lret cmp and (bad) stos movsb cmpsb sbb xchg loopne rex.WXB pop (bad) cmp je (bad) lret pop (bad) cs out mov fstp xchg fldcw leaveq cmpsb and sbb (bad) fwait outsl mov xchg push rex.RXB addr32 shrl rorl and incl cwtl pushq cltd xchg (bad) (bad) add adc sbb mov and mov scas es pushfq xchg and (bad) loopne xchg sub (bad) xor cmp cwtl mov cmpsl (bad) and out cmp (bad) (bad) cwtl mov xchg jb (bad) jp movslq retq and rex.RX cmp movsb xchg (bad) xchg rex ja movabs lret or andl cltd sahf (bad) rex.WX xor xchg jnp scas xchg cs rex.WB insb pop rex.RXB data16 jge jne xchg sub (bad) hlt push or fwait pop rex.WRX xlat movabs rex.WR xor pop xchg cmp sub mov (bad) imul mov in fsubs push (bad) and (bad) movabs xchg lahf sbb push pushq xchg mov jl movabs xor loop xchg mov jnp retq cwtl rex.RB pop (bad) cltd ja clc jge sub rolb mov sub xchg sub or jge jl cwtl in sub xchg sbb pushq stos jmp enterq (bad) ja mov cmovno xchg mov in xor rex.RX mov mov pop (bad) ja callq iret xchg jmpq mov pushq pop (bad) jbe xchg (bad) cltd mov jp movsl xchg jno (bad) adc push out enterq xchg push pop js adc or xchg (bad) (bad) ja mov mov xchg lea es in test rex.WRB xchg pushfq rex.X rex.W (bad) push stc js ss rex.WRB movabs test rcll (bad) test xchg mov (bad) (bad) adc xchg fiaddl test mov and push shrl mov cli mov sarl sub or mulb adc mov adc pop callq gs mov ljmp add add lret jg xchg repz rex.B adc rex.RXB es pop jne lahf push ds xchg xchg cmp cmc cwtl callq xchg jb rex.WR (bad) pmullw xor xchg sahf rex.WRXB and rex.WRB ss testb (bad) sbb xchg adc mov rex.R enterq (bad) movabs cmp je (bad) (bad) movabs rcrl xlat pushfq iret xchg or stos and jb in je mov jmp mov fistp fdivrl jp (bad) xchg jle cmp (bad) cltd sub rex.RXB xchg (bad) rex.WRX data16 fdivrl push lahf sahf (bad) mov fcomps gs (bad) outsl out pop (bad) xchg push addr32 mov loopne xor lret divl sub fwait jbe orl (bad) adc pop add (bad) data16 movabs sbb addr32 fdivl rex.WR rcr xchg xor loopne rclb fbld cmp (bad) int popfq retq (bad) mov pushfq leaveq xor jge sbb mov callq sub test (bad) (bad) lods pop roll jb jmp fdivl xchg xchg rex.RXB insb mov es mov (bad) jge or (bad) xchg mov out test cmp sahf fisubr pop jne jp add cwtl jb pop cli lahf out data16 rex.RX (bad) in (bad) shrb pushfq shll scas cmpl lods cld retq lret popfq jge or pop retq (bad) adc xchg (bad) fsubrl (bad) or xchg jne rex.W push popfq es and pushq out xor test cli push pushq add lods add (bad) mov lret pop cmp adc leaveq pop out fdivrl std adc xchg pushq movslq cwtl pavgw (bad) and mov mov (bad) jg xor rex.B rex.RB mov cmp rcrl rex.XB mul push sahf sbb (bad) push sbb xchg xchg out lahf scas repnz (bad) cmpl mov add sahf push mov mov jnp mov xchg push pop (bad) cwtl fwait or add (bad) sub (bad) mov xor stos mov xchg pushfq push pop in (bad) (bad) negb rex.WX jne outsl (bad) mov (bad) cmpsl mov rex.B nop sub (bad) ja or jl push xor xor mov xchg sbb xor in sbb outsl mov notb outsb jno rex.R sub mov sahf cmp (bad) pushq push and lods and je pop jmp nop std mov movsb push ror sbb jrcxz ja xchg (bad) (bad) or sbbl and (bad) and jo mov lret (bad) sar mov (bad) sahf push movsl (bad) (bad) (bad) (bad) jno movsl add add cli outsl adc (bad) cld jp rex.RXB cmpsl and test js jle and movsl (bad) in repnz pushq or jae leaveq int test (bad) mov mov sub jge pop repnz pop lret movabs pushq (bad) jmp (bad) outsb (bad) jbe rex.X movabs (bad) (bad) push insl rex.WRXB lock (bad) pop insb orl (bad) sahf sub negl xchg enterq adc test xchg sbb (bad) or (bad) vxorps insl (bad) (bad) mov imul push rex.W sbb cmp mov xchg int3 jge ss movabs mov rolb xor jne (bad) adc xorl rorb out xchg idivb sub in (bad) pop or sbb fwait sub xchg fidivrl pop push or add int3 adc outsb xchg fnstsw notb jge repnz or out lea cwtl retq pushfq or shl cltd mov mov mov imul mov mov outsl mov jmpq icebp orb fs xor and rex.WB cmc imul cli sub rex and add iret int xchg mov mov insl sti popfq adc loopne xlat movsb (bad) or mov ds sub icebp xchg (bad) jae movabs imull ja mov mov scas sahf mov sub or pushq cwtl lods adc (bad) outsl scas xchg pop sahf and jle (bad) scas xchg test sar cld rex.RB push mov jb sbb ss xchg retq (bad) or add sbb xchg int adc or div jae movabs cmpsl cltd xor mov xlat pop std (bad) popfq xchg icebp lret (bad) paddb jp sahf (bad) fiadd or imull stc movabs in mov (bad) add xchg loopne mov mov push rex.WX rex.RB rex.XB and test out gs movb in sahf or sahf push (bad) and mov std pushfq pushq pushfq cmp repz test sub (bad) ja mov in xor and xchg pop (bad) (bad) popfq adc int xorl jmpq addb mov (bad) pop cltd xchg adc std js in (bad) mov test xor sahf mov rex.B push vpmaxub in clc xchg rorb mov xorb mov mov mov (bad) enterq xchg jge mov fs rex.WX mov sub outsl fisttp mov sti loop (bad) movabs (bad) add in xchg pop mulb cmp rex.RX (bad) rex.WB xor loop (bad) or rex (bad) push test scas xor (bad) xchg cmp retq (bad) or (bad) pop stos jg jl stos xor cs (bad) popfq push addr32 or sbbl jge (bad) pop xchg rex.B (bad) stos jg and movabs rex.WRXB xchg retq rex.WRB adc xchg mov movsl sbb xchg faddl (bad) cmpsl mov mov (bad) mov lods sub push (bad) (bad) xor iret jl or and es stos jns stos xchg insb mov (bad) xor test (bad) jg pop push push mov movabs rex.RB adc xchg xchg mov (bad) pushfq ja rex.RX xchg (bad) hlt (bad) cwtl fcomps (bad) in push or rex.WR rex.WRX fcompl lahf fcoms movslq addl jo (bad) cmpsl rex.B mov (bad) rclb push cmp pop cwtl scas jae xor pop shlb rex.WRB fisubr (bad) xchg in cld jne fsub rex.WRB sti sub (bad) scas lahf in popfq xchg rex.WB cmp rex.WXB (bad) imul (bad) mov cmpsl rex.X movsb cmpsb gs add movslq rex.W sub push cmp outsb (bad) (bad) xor (bad) push cmpsb movsb in jnp pushfq push callq (bad) testl movsl xchg cmp rolb cmpsl (bad) ss insl jnp mov xchg xchg (bad) push callq and or (bad) rex.WXB (bad) div shlb pop (bad) movsl sub adc (bad) pushq lret (bad) in in insl lret (bad) jmpq (bad) scas pop and xor rex.RB (bad) iret sti stos or xchg (bad) lods repnz subl mov sahf lret mov cs stos jle xchg test (bad) sub mov xchg rex.WRB rex.RB leaveq adc push (bad) callq insl xchg jno (bad) mov xor sbb outsl fwait (bad) and sbb loopne mov xor nop mov insl mov test (bad) movabs push or int mov (bad) pop sub movsb mov out (bad) pop cmp pop jb mov jnp xchg jae (bad) jno out xchg mov xor xchg (bad) rex.WRXB adc sbb (bad) movabs push xor xchg mov xor (bad) lret addr32 iret xchg sbb sub xchg scas lea jmp movsb (bad) fwait sub xor rex pop or (bad) or rex.W rex.WRB std (bad) cmpsl callq xchg add outsb mov movabs mov and jne lret nop popfq (bad) cltd mov mov (bad) and xchg xchg rex.RB fnstenv pop (bad) pushfq out adc push add sarl mov lods jbe cmpsl xchg insl cli ja in mov frstor mov cs rex.B (bad) adc fisttpl jg jg jnp lret (bad) frstor xchg nop sbb and (bad) jbe mov loop (bad) (bad) rclb push mov (bad) pushfq push mov add rex.R rcrb in in (bad) sub jnp rex.WR fwait cltd stos pop pop add pushq xor out stos jnp rex.R mov pop shlb push (bad) cli addl lret pushfq fwait jp fisubrl xchg adc icebp (bad) (bad) nop adc clc sbb xchg jbe cmp (bad) stc (bad) and jg pushq insl xchg jae gs (bad) and add cmp add mov retq mov cltd leaveq pushfq xchg mov (bad) (bad) pop fdiv (bad) notb test imul adc (bad) (bad) stos ja (bad) test sub add pushfq and (bad) (bad) jnp xchg js ja xor leaveq jnp sbb js (bad) (bad) enterq (bad) pop test js out stos or pushq rex.RXB rex.X mov fstpl rex.WB xchg (bad) mov addr32 pop mov and mov outsb xchg pop xchg sarl loopne or (bad) lock rex.X cmc fisubl movsb mov mov je xor js push movabs mov or push (bad) rex mov cmp mov jne popfq pop adc popfq insl (bad) rex.WRXB nop or cmpb (bad) outsb rex.X test or lods xor insb jno xchg fstl pop or rex jle mov (bad) sub movsl test fimul adc int3 imul xchg mov mov sub in scas jmpq out jne sbb pop nop and adc add rex.RXB movslq jne (bad) sbb movabs xlat je push lods loope xchg popfq test enterq add jb mov sbb pop ds push sub test mov stos jns jg push xchg (bad) push xor (bad) add jnp (bad) xchg and rex.WRXB xchg repnz lock fsts xchg mov sbb and or rex.RXB sub cmpsb xchg sbb xchg rex.WR retq cwtl (bad) repnz (bad) sub sub xchg frstor xchg xor mov stos rex.WXB and xchg mov adc lea (bad) pop xor xor jmp movsl je fdivl jns out (bad) lret movabs gs pop xchg pop xchg fwait cmp jne pop cmpsb addr32 adc sbb xchg movsb mov in out xchg (bad) adc xchg mov loop roll mov fidivrl pushfq xchg mov (bad) push test cwtl repnz mov fstpt (bad) (bad) lret (bad) cmp movsb retq loopne loopne xchg jl gs rex.R rex.WX fstps imull (bad) jae cltd std (bad) pushq jnp jrcxz rex.WX mov (bad) add flds (bad) xlat push ja out js adc movabs icebp in loope (bad) xchg (bad) loop mov rex.WB (bad) mov clc es cmpsl mov (bad) cmp mov leaveq (bad) mov out std lret mov js mov mov and (bad) cmc jecxz xchg je (bad) jp adc (bad) leaveq sbb movsb (bad) scas xchg xor (bad) jbe stos movabs (bad) test sbbl cs sahf imul xchg callq scas clc rex.R shrl je retq movabs scas xchg mov sahf enterq iret rex.RB scas retq sbb (bad) je stc xchg in jns push stos scas lret add rex xor fmul scas cmp vsqrtsd cmpsl movabs loop pop int retq cmpsb test and mov (bad) enterq test mov loopne sahf or mov jae and mov jnp (bad) cmp rex xchg xchg loop je movabs loopne xchg test pushq mov xchg xor cmp xchg push or pop xchg lcall jl xchg cwtl jae jg gs nop repz jmp xchg sahf stos pop add imul cmp push add sbb xor sbb lock (bad) divl movb rex.WB sahf pop xchg popfq outsb mov cmpsl pop xchg jge mov in and loop (bad) xor ds pop xchg (bad) jne (bad) callq add lock sbb pop and push outsl (bad) jb sub or xchg add fnsave jne xchg pop add nop icebp or (bad) and stos cmp test repz std rex.RX loope or cmpsl (bad) or or cmpsb imul rex.WX gs (bad) outsb lea repnz retq mov gs add mov pop (bad) test (bad) out (bad) xchg xchg movabs push cltd (bad) (bad) sti (bad) in scas add push add (bad) or pushfq fistp push push push fsubl (bad) xor repz rcr jne jne sub pushq fs loope fimul xchg xorl jmp sub jne rex.WRB addr32 xchg nop sbb xor (bad) pop sub (bad) and add cmp lret push push xchg shll pop push sbb cmp rex.R mov cli sub (bad) insb pushq sbb sbb stc leaveq pushfq mov movsl sub mov xor jno xchg pushfq rex.WB in retq xchg sub rex.B dec add and push pop add and xchg fnstsw (bad) icebp (bad) int jmpq cmp out in jmpq (bad) rex.RB push outsb mov (bad) add mov xlat scas stc test (bad) and sti cmpsl pop rcl xchg in ja pop sahf xchg jae es (bad) lahf mov (bad) outsl mov movabs ss or fwait mov gs or add adc fiadd xchg iret rex.WRB gs adc and xchg sub push adc int rex.RXB or and (bad) mov xchg (bad) xchg jmpq int3 adc retq lcall cltd xchg pop int jnp out fwait xchg movsb ss rex.WR pop (bad) fist mov (bad) xchg cli pop sub sub adc orb xor callq jne sarb xchg or (bad) sub outsl icebp sahf leaveq imul xchg repz (bad) add outsb fwait adc add sahf cli adcl xchg repnz xor rex push movsl rclb and xchg sub rex.WXB lea (bad) js scas popfq xor insl or xlat icebp mov mov xchg xor fmull nop jbe xchg (bad) hlt pop adc fcoms (bad) (bad) and add xchg mov cmc add rorb (bad) (bad) cwtl and int3 dec xchg or cmc (bad) or fwait mov (bad) push fisttp test adc (bad) mov adcb mov movb rol cld xchg push push imul mov mov (bad) xor xchg (bad) or in rex.RXB add xchg cwtl xchg cli xor and lods mov mov mov or pushfq mov adc mov fimul xchg push pop leaveq stos fsubs loop xchg fisttpl lock xchg cmpsb xchg lret std rex.WRX jns xor (bad) cmp and outsb xchg fdivrs push stc and test je out rex.B cs movsl mov xchg xor scas xchg sti jmpq cmp cwtl sbb pop addb mov shr ficompl rclb fist xchg iret add xchg movsb insl fidiv xlat jmpq movabs add adc mov xchg sub rex.W add add mov sbb cwtl cltd lret xchg jge adcl cmc cmp movabs (bad) ja pop in and in fisttp cmc mov rex imul test sub ficom sub cmp int iret lret rex.RXB xchg mov xor mov es outsb (bad) jno fwait cwtl xchg rex.RB data16 movabs cs mov cmp sti stos xchg rex.WX test rex.WRXB rcrb iret rex.WRXB addl rex.WXB and mov mov rex.X pushq (bad) push ja mov rex.XB mov sahf mov and (bad) callq or (bad) (bad) (bad) xchg insb jno in (bad) push shrb (bad) xchg vpmulhw jge push pop xchg mov stc jrcxz std test xchg rex.WRB rex.WX sbb in loopne hlt mov push (bad) cmp add adc movabs icebp movabs xchg (bad) fcompl jae jmp movsb xlat std mov jo rex.RXB and scas (bad) jbe rsm popfq jge lret negl jmp pop jle,pn push in fcomps (bad) xchg jo gs test or cmp (bad) xchg sbb ds cmc rcll ds js hlt push lods lret popfq mov ss lock and (bad) pop insb sbb fwait sahf fistl jae ficoml mov (bad) rex.B nop or rex.XB (bad) jl mov (bad) mov mov (bad) (bad) rex.B cld xchg pop insb fwait mov (bad) ja push xchg (bad) ja pushfq scas pushq cmpsl cwtl cld xchg faddl sahf xlat in add xchg movabs icebp xchg shrb rex.WXB cwtl movabs push sarb mov scas xchg lods mov pushq movabs xchg sub pushq cmp xchg rex.B js or es mov clc xorl test sub popfq (bad) pop add pop sub xchg rex.WX sbb test (bad) (bad) rex.WB rex.WRB (bad) js test jle mov pop (bad) (bad) push or rex pop cwtl (bad) clc cmp fcoms mov xchg orl (bad) (bad) rex.RB out imul imul sub int je popfq xchg std sbb mov nop mov xchg (bad) mov (bad) xchg (bad) cltd add pop js fmull notb mov in movabs mov cltd test xchg jb lahf sti mov rclb (bad) jne push clc (bad) adc mov jmpq add out xchg jo in xlat rcll fs (bad) fldt gs rol and cmp mov (bad) es gs fwait (bad) int (bad) fistpl clc mov xchg insb int3 rex.WRXB rex.RB jnp rex.WRB sbb ja cmpsl xchg mov movabs or fcomps push cmp cmp pushfq rex cmc scas (bad) xchg or push jae movsb mov imul insb insb sub (bad) push xor jo mov pop retq sub xchg mov imul fsubrl cltd (bad) ss mov (bad) imul mov or pushfq pop out imul addl repz fmuls cmp enterq sti lods cld cmpsl rex.XB fs lock (bad) and xchg loope push or xchg xchg mov scas out fisub pop and nop movabs out and xchg pop push lods (bad) pushq (bad) push xchg pop icebp (bad) sbb cwtl callq cmpsl or mov pop xchg pushfq (bad) jb (bad) int3 lret out lock mov rorb test or sub xchg cmpsl stc (bad) and mov (bad) xchg fdivs xchg (bad) xchg xchg jno (bad) (bad) sub (bad) rex.WXB (bad) mov insb mov (bad) orb xchg rolb (bad) cs adc mov (bad) sub and pushq xchg data16 in push sbb insl and and stos pushq movsl outsb stos loop in shll (bad) enterq cmp lods fnstsw xchg out rex.WX retq ror and negl jo push push and and pop movabs rex.WXB (bad) stos test cmpsb pop cmc pop cmp or enterq shrb rex.WRXB pushfq (bad) pop stc stc frndint outsb mov pop (bad) stos pushq testl int3 xor movabs add ficompl xor test mov outsl and lret jmp cmpl sbb div xchg iret out jno and pushfq (bad) (bad) pop jb mov (bad) or lock (bad) data16 jns mov jne xor cmp jno xchg xor xchg mov fisubl (bad) idivb callq rcll jnp (bad) in mov pop jnp push ss pushfq rex.WRB es push rex popfq nop sbb clc xchg jmp xchg scas not (bad) nop add cwtl (bad) fxch mov mov (bad) jmpq ror int xchg and mov je imul js int3 (bad) loopne xchg iret sbb mov jg sub (bad) js addr32 popfq (bad) and cmpsb (bad) xor gs cltd (bad) push jbe pop sbb enterq shll rex.WX cmc push nop adc and cwtl cmp (bad) sbb xchg subb jmpq callq fildl mov out sub (bad) subb jp jns movabs add outsl rex.R (bad) push cld pop xchg rex.WRXB sub loope (bad) outsb jbe rex.RB push xor rex.WRXB div fwait sub rex sub xchg mov xchg cmp int adc push sbb movabs adc movabs imul sub jno stos pop hlt xor pushfq jrcxz fwait jrcxz fs pmaxub add (bad) sbb xchg fdiv xchg cli jbe mov cs emms xchg jl mov js mov adc out (bad) pop icebp xchg pop xor sub xor scas xchg movabs jb insl push (bad) pop push (bad) mov cwtl mov je rex.WX lea ss rex.WRB jmpq (bad) xchg jnp imul nop gs out and mov (bad) xchg sbb (bad) (bad) xor andb jns stos xchg pushq mov movsb jp xchg cli mov cmpsl in sbb loop xchg xlat add callq jae rex.XB fs movslq cld push rex.WB xor xchg pop ss test mov add rex.WRB (bad) (bad) cmpsl jns sbb cmpsb faddp xchg mov (bad) mov sbb push stos xchg xlat xchg sbb (bad) push fs cmp mov cmp fsubrl cmp xchg cmp mov jg retq (bad) fidivr fwait xchg jbe push sarb pushq pop jg and xor add mov mov je rex.B mov xchg jle (bad) hlt lods jo xor pushq jne loopne xchg jl (bad) mov scas fwait (bad) (bad) xchg (bad) xor int jp rorl (bad) xor push sahf cmp (bad) movabs sbb xor or xchg sbb (bad) (bad) notl or movsl xchg add pop loop out cli shrb cwtl mov (bad) scas mov ss xor rex.W xchg test xchg and mov rex xchg and mov orb adc cmp and movslq (bad) (bad) mov addl (bad) (bad) repz mov imul (bad) (bad) and fldl ja shrb xchg mov push or add push mov sbb mov (bad) negl mull cmp sbb adc mov jno rex.R and sub jrcxz rex.WX pop sbb imul test cld xor loopne lret cwtl cmc (bad) jno rex.WXB jmp data16 xchg scas add (bad) add (bad) pop rex.WRXB cli (bad) mov or faddl xorl rex.WX rex.WRX iret in popfq add xchg int3 lods rex sub pushq pop ja movabs fld (bad) mov out hlt (bad) cmp int3 jno pushfq mov xlat pop (bad) in cwtl cmp (bad) repnz (bad) pop cld xchg mov out sub movabs mov xchg jl add lahf sub sahf imull (bad) jne stos lock sahf cmp mov movabs shll test (bad) mov js hlt movabs mov adc mov sarl xorb fcomip mov or movabs xchg add scas mov std lret rex.X js rex.WRXB movabs cmc push movabs rex.R rex.WRB pushfq cmp (bad) out jnp xor xchg jp jns sar (bad) sbb popfq add lgs iret jno cmpsl (bad) mov scas adc xchg std adc cwtl jge sub movslq xchg (bad) rex.RX scas pop jnp mov insl notl or out rex.RB ja enterq xchg add add (bad) lods cmpsb sahf (bad) cmp out imul mov xchg sub add std test shrl sub je movabs notb jrcxz cli imul jmp rex.WX rex.RXB and jne xchg mov adc mov leaveq sahf movabs xor add xchg jmp rex.WR repz out push push (bad) xchg pop (bad) mov lret jg xchg in fimull (bad) xor sarb add (bad) (bad) addr32 scas mov sbb cld lahf (bad) pop xchg or (bad) stos rex.RB (bad) cmpl loopel rol push enterq xchg pop shrl pop xor out (bad) stos mov xchg outsl rex.WB jg lret (bad) cmp rex.R pushfq hlt imul xchg xchg (bad) out retq fcompl data16 jne adc cmpsb repz test sbb pop add adc xchg sub xchg std pop jo (bad) cld (bad) rex.R pop cmp scas push fwait je pop pop sbb add (bad) add xchg es pop pushfq xchg xchg movabs gs sbb cwtl (bad) and out ficomp push (bad) pushfq outsl push sub add xchg fldt cwtl mov (bad) out sub and xchg mov add xlat (bad) mov (bad) ror (bad) out icebp test stos xchg rol mov rex.WB stc xchg xchg int add xchg callq mov (bad) xchg cmpsb (bad) jns xchg cmpsl nop in (bad) icebp xchg idivl retq shll sbb push loope rex.X mov xlat mov sbb xchg sub xlat pushfq mov (bad) adc (bad) lock xchg jne movsb retq movabs (bad) push scas fsubr rclb cmp pop (bad) sub cwtl imul outsl xor adc nop xchg fwait out xlat cmp and add mov orl or repz std mov (bad) push adc out shl xchg sub jrcxz xor (bad) pop pop callq loope xchg fnstsw xchg ja adc or mov jge cmpsl mov lret cs xchg and and cmp mov push rex.WXB (bad) outsb xchg (bad) fneni(8087 and (bad) (bad) adc (bad) fucom ds push std lea adc popfq lods mov test lahf mov push rex.WR lret rex.B (bad) pushfq std mov fdivrp and or pushfq out xchg (bad) mov fwait pushq data16 outsl fbld pop mov popfq jne callq jo and imul int xchg and mov xchg (bad) jp (bad) cmpsb clc nop nop mov (bad) mov out sub test pushfq sub outsb jo rex.XB mov push sahf (bad) (bad) xchg mov add xchg rclb in sbb jrcxz lea cmp data16 (bad) sbb shrb adc and sbb pop clc negl cwtl andb in gs sub fild fistl loope std and mov (bad) ja scas cwtl gs mov sahf rex.B pop fucom (bad) adc int3 xchg out nop loope and jmp test (bad) push and mov rex (bad) mov rex.W xor xchg jbe cmp jle nop shlb xchg movabs mov jle ss pushq rex.X leaveq add mov xor pop fwait or fistp xchg and mov out je rex.WRX mov out rex.RX (bad) cltd in push and adcl xchg mov sahf (bad) shrl imul cmpsl movabs xchg retq (bad) retq insl sti (bad) cltd sbb (bad) rex.WXB movd mov mov callq fnop cmp sbb hlt cmp (bad) push jg (bad) rex.WB js cmp push (bad) xchg and jg jge shll xor int fmulp xchg xchg pushq (bad) cli int rex.RXB sbb pop mov (bad) subb adc pushq adc (bad) shlb (bad) mov xchg (bad) nop adc add jl fstl sbb setno (bad) pop lea pushq movabs rex.XB fs rex.B rex.RXB movabs vmread mov (bad) std retq adc rex.WRX sarl jrcxz rex.RB xor enterq stos xlat xchg xlat hlt sarb sub fnstcw loopne xadd int insb sti adc rex.RXB mov pop sub lret or jno jno mov or mov cwtl ja xchg rex.XB jb retq (bad) cltd sbb sbb (bad) retq gs jbe imul rex.X pushfq sahf jae push (bad) jge jbe rex.RXB add lock sub lret adc mov pushq cli push sahf outsb sub mov jae addr32 xor pushq (bad) mov xchg enterq jrcxz std sti sbb test imull mov xchg sahf rex.WB xchg (bad) (bad) (bad) clc mov (bad) repnz and sti rex.WX sbb lock (bad) or rex.WB mov retq (bad) rex.RX sub sbb rex.XB (bad) rex.RXB rex.WRX mov push adc cmp add cmp callq xchg (bad) pop pop jne jnp xchg (bad) sbb mov pushq (bad) (bad) sarb or xchg rex.RX mov gs pop (bad) imul sub pop rex.WR adc push shll stos test add sbbb (bad) (bad) retq insb rex.RXB xchg and xchg addr32 retq insl cmp mov (bad) repz xchg cmpl sub jnp sbb xchg mov pop cltd pushq (bad) jb sub add hlt rex.B xchg xchg push pop (bad) or jrcxz xchg rex.RX (bad) or movsb pop pushfq (bad) jb jne loop gs (bad) (bad) lahf andb mov retq sub push repnz (bad) lea movabs ja add ficom (bad) pushq xchg nop (bad) mov jg rex.R (bad) nop (bad) xor push (bad) fs in rex.WRB mov xor (bad) jae xchg pushq cmp scas movabs cmpsb sub rex.WX xchg rol shr pop (bad) (bad) xchg mov imul xchg ficoml idivb mov or push out xor mov ss (bad) sub addb jbe rex.WRX rex.WR xor mov ja mov xor (bad) xchg gs xchg cmp adc cs cwtl add (bad) or faddl mov (bad) xchg xor cmp rex.R (bad) xchg movabs or pushq xchg retq addr32 or gs rorl gs int3 xchg (bad) mov movsb mov cmpsl fimull negb outsb push lret jle sub or (bad) jg jnp (bad) mov (bad) outsl out mov xchg mov xchg cwtl fcomps js rolb lea cld rex.WRB lods xchg movabs stc sub in rex jo mov lea or xor lea (bad) adcl rorb pushq xor sub mov (bad) rex.WXB xor (bad) es adc test negb (bad) in mov imul jge ss mov xchg xlat xor sub ss movslq mov rex.RX lret mov (bad) int popfq adc rex.W (bad) (bad) xchg callq callq xchg (bad) mov add test rex.RXB ds mov (bad) cmpsb mov pushq imul fildl pop adc rex.WRXB jl cmpsl or (bad) and out in mov mov (bad) rex.XB std int mov add mov (bad) repz mov (bad) or test outsb xlat jmp mov sbb push xchg rex.WR lea pushq push (bad) in (bad) add test push xchg xchg add jb mov pushfq xchg mov pop cwtl cmp or lahf popfq push adc hlt sub (bad) fsubrs loop in rex.WRXB rex.RX fsubrl (bad) mov adc bnd insl xchg xor iret mov push in jp movabs lret popfq (bad) pop (bad) (bad) lret (bad) sub mov (bad) lahf mov xchg (bad) rcrl lea or movabs (bad) repz xchg rex.WR pop out (bad) insb mov jnp xchg js mov pop xchg iret (bad) cmc jge fld mov adc retq loope jne retq data16 xchg fcomip in mov rorb clc cld xchg lret jae loope fistl jne movslq (bad) (bad) addl rex rex.WXB pop in mov cmp (bad) rex.XB callq (bad) adc fist cli xchg mov xchg movsl decb add leaveq (bad) pop fcom xchg cli test (bad) pop (bad) (bad) cmpsb xchg add cmp sti rex.WRX ja xchg std sub in cmc xchg mov xchg mov push pushfq xor rex.WB rex.XB movslq mov (bad) es sub rex.WRB jp (bad) rex.WXB nop mov (bad) sub rex.WR adc lretq pop retq fild add out (bad) (bad) or rex.RXB sub mov and addr32 ror (bad) insb clc (bad) mov scas movsl mov add retq mov int3 (bad) (bad) in movabs jl popfq pop hlt (bad) insl (bad) mov (bad) jg xor nop es retq jmpq cmpsb (bad) xchg lea push adc adc fs sti mov adc insl mov rex.WR (bad) sub pop icebp xchg sarl outsl xchg xchg imul rex.WRXB sti xchg mov xchg pushfq adc ss jns rcrl pop (bad) mov xchg movsb (bad) jp and (bad) ss cltd mov test (bad) je push orl movabs (bad) or je pushq add jl push lret es (bad) sub (bad) cmp push shll or or (bad) je xor xchg xlat and addps nop (bad) pop xor movslq jno insb sqrtps and sub xchg in jno and xchg movabs ljmp rex.WRX cwtl enterq (bad) pushfq jo retq cmpsb xlat cwtl insb test xchg (bad) (bad) (bad) mov jmpq ss xor sub mov mov xor movabs (bad) (bad) (bad) cmp xchg xchg stos stc (bad) fidiv fwait xchg lahf in (bad) xor mov cmp lods nop (bad) cmp sysexit (bad) xchg sub xor fisubrl and (bad) fidivrl or (bad) and movabs xlat lret retq jle jrcxz leavew xchg rex.WRXB seta cmp xchg rex.R jmpq cmc (bad) cmp and pop rex.WRB xchg (bad) add out int3 addr32 or fnsave jne xchg sahf insb jp (bad) xchg pop cmp jg xor xor push rex.RB lock fwait push xchg jns jmpq (bad) xchg in insl (bad) rex.RXB (bad) jmp mov mov pushfq fxch stos movabs xchg push jle add shlb insl icebp jg std or (bad) xchg cmp imul jae xchg mov mov xchg and cmp scas or pop pushq xchg fs or sbb cltd mov mov pop (bad) mov sbbl cmpsb (bad) sub xor imul rex.RX (bad) shrl xor movslq sahf popfq out addq xchg mov push negl cmpsl xchg and outsl sbb (bad) xor sub (bad) cmp mov xchg jmpq sub pushfq out icebp jmp pushq (bad) pop mov in pushfq cld and cmp notl test (bad) test fs xchg xchg scas mov and and fbstp sub jg xchg loop (bad) (bad) (bad) cwtl xchg adc (bad) rex.WB rex jmp adc xchg lock rclb (bad) xchg pushfq mov sarb (bad) mov leaveq cmp sahf mov cmp mov mov imull retq sbb in xchg adc xchg mov xchg ds mov rex.XB mov add sete and loope stos pause mov faddp or lea pop insl ds enterq (bad) movabs (bad) imul fidivrl (bad) xchg xchg sub lea (bad) movabs repnz int mov mov lock rcr scas or cmp xchg mov mov ds callq pop push adc adc clc or add imul (bad) mov cs xor (bad) pop leaveq rex.WRB cmpsl movsl (bad) lahf mov (bad) adc sub scas je mov cmp (bad) jae sub xor (bad) (bad) add pop (bad) xor (bad) addb mov lret gs (bad) rex.RX mov jge addr32 out lock fst xor or xchg (bad) lahf adc adc cwtl xchg mov lret adc mov lods pushq sbb push xchg jnp cmp movsb pop int3 idivb or fildll jge rex.B push mov (bad) clc xor sub movslq add sub rex.WRX and push adc xlat gs scas cmpsl rcr and je mov xchg pop adc pop (bad) mov jg movslq movabs rex.WRB rex.WX insb adc mov gs xlat addl and (bad) sub ja (bad) scas mov iret or (bad) in pop sbb ja rex.WXB (bad) rcrb xor cmpb cmpl (bad) rex.RX rex.B rex rex.RX stos rep mov nop xlat sub callq rorl subl (bad) movabs (bad) adc adc jrcxz (bad) add sub lock gs adc (bad) fiaddl (bad) mov (bad) out cmc ss test or cmp callq retq sahf lods mov nop psubsw and adc jle rcll (bad) (bad) fistl rex.RX xor jo cmovb mov hlt jrcxz movabs movabs jl mov (bad) (bad) sbb nop hlt xor jp cwtl icebp xor pop rex.R adc scas (bad) leaveq lahf ds add (bad) and int3 stos pushq js pop cmpsb xchg add adc xchg (bad) addr32 (bad) xchg push sub cltd lock xchg cld xchg (bad) and jae sub xchg rex.WXB movabs cmp adc xchg clc cmpsb rex.WR xchg jbe pop (bad) stos andb rex.WRX movabs mul or and scas xchg (bad) mov rex.X sbb shrb xchg repz in imul movabs imul pushq jno (bad) mov sub push scas fdivl (bad) ss data16 (bad) (bad) rex.WRX stos (bad) add cmc mov rex.WRB pop xchg (bad) xor sbb test stos xchg xchg lcall cmp sub gs pop loop movsb xchg fsubrs es mov rex.WX stc (bad) stos movsb mov rclb mov in (bad) adc outsl cwtl jae cmp jo pop int3 (bad) pop (bad) stc or xchg nop cwtl xor pop mov rorl sub sbb rex.RXB test or mov jle cltd xchg mov clc mov xchg cwtl jp mov jns int3 xchg movabs mov mov xlat mov add (bad) pushfq jb xor xor jge faddl xchg rex.WRX (bad) sahf int callq rex.RXB cmp xor push (bad) xchg mov ss repnz stc (bad) cmpsb (bad) rex.RB popfq shrd mov adc rex.X mov rex.R adc sbb jmpq in rex.RX movslq orl pushq mov in (bad) pop fdivp pop adc in sbb pop cmovp mov adc stos xchg scas hlt fiadd sbb fmuls ja pop (bad) jmp adc (bad) cmp movabs xor (bad) rex or stos stos xchg icebp fisubr xchg rex.WRB jns xchg xor xchg test retq mov and and sahf cltd (bad) (bad) lret leaveq (bad) fcoms pop xchg push (bad) xchg (bad) mov test test jo jmpq lock lahf out jg pminub ficomp jmpq mov scas xchg (bad) xchg hlt movabs jp xchg (bad) imull and (bad) sbb rex.X pushfq add repz mov rex.WR rex.WX mov cmp rex.RXB in jp xchg sbb rex.W cwtl scas xchg cmp lret jmp jl jae (bad) rex lock sub subl and mov vorps sub or rex.WRXB add cmp bts sahf in clc nop adc and fdivs lea fnsave ss sahf pop sbb sti incl adc xchg (bad) xchg (bad) add add lods cmp mov mov pushq xchg fldt jo callq xchg or mov (bad) and scas in and or jne out fildll xchg (bad) fsubs mov notl cli sbb jg cs subb (bad) es xchg movabs popfq scas sbb xor retq (bad) jae xchg callq jno fcmovne int mov adc (bad) mov pop mov pushq ficomp fs xchg (bad) pop rex.WRB rex (bad) sub (bad) out rex.XB data16 leaveq (bad) xchg rex.WR fs movabs (bad) (bad) nop (bad) xchg and addr32 stc sbb outsb jbe cmpsb (bad) xor loopne push rorl (bad) adc (bad) and xchg mov push (bad) and xchg sahf sbb or jnp pop mov cmpsl pop xchg movabs pushq rcll xchg (bad) mov mov mov rcrl (bad) mov sub scas jg sarl (bad) (bad) movabs or pop rex.RXB movslq or lock loopne test pushq in jge xchg imul sahf and (bad) test outsb xchg (bad) in cmp pop jno movsw jo xor and sub stc movsb scas sub (bad) stos xor (bad) rex.XB cs (bad) adc pushq adcl iret (bad) movabs (bad) enterq fdivp movslq adc popfq and xchg rex.RX addr32 adc loop jae iret sti sbb xchg fdivs adc (bad) lock xor or cmp fldt (bad) callq sti lea mov clc xchg pop int3 pop std rex.RX adc callq rex.WRB (bad) and cli (bad) xchg out jo jp or cmp jge or lods loop movsl (bad) mov sub push jne xchg xchg movslq leaveq push push pushq mov xchg mov lret decb test xchg mov scas lret push fcompl movabs in imul (bad) mov add (bad) xchg (bad) popfq pop jno mov (bad) (bad) or push add xchg sub rcrl xlat sbb sbb stos or mov notb iret (bad) fdivrs or (bad) pushq xchg rcll jns xchg je xorb sub movsl and outsb (bad) jns sbb rcrl jrcxz xchg pop cmpsb pop repz (bad) mov cmpsl mov pop xorl rex.WR cltd rex.WRX xorl movsb repnz xchg or stos xchg mov cmp (bad) adc push jno and rcrb mov outsl mov mov pushq jg cld xchg imul push repnz fild xchg rex.WB and xchg (bad) rex.WR hlt (bad) je (bad) or retq xor data16 (bad) test adc mov scas jns mov mov jno rex.XB jns adc jl and ficom ja jbe jg (bad) adc in push stos jge movabs pop sbb pushfq stos push mov sub xor and rex.WR pushfq nop adc xchg adc jb (bad) push sbb incb mov push scas ss (bad) sub adc xchg imul fisttpll mov repnz rex.W js test (bad) pushq data16 pop pushfq (bad) rex.WR jbe loopne and mov movabs stc xor test (bad) jrcxz fistl iret loop xchg add test add test lods xor out mov mov popfq (bad) push (bad) mov rcrb push xlat lods cmp adc imul (bad) or stc lea ja data16 xchg in andb push cltd std xchg mov movsl xchg fisubl (bad) jno test xchg je xor adc sub jle jns adc jrcxz popfq stos adc movsb fsubrs (bad) je ss (bad) rex.X push xchg stos test pop (bad) rcrl lea push rex.W sub pop (bad) movsb cmpsb lods push jae and stc (bad) and test sahf jrcxz fistpll fisub mov adc iret jmp push lret ss adc or scas xchg xchg lods xchg (bad) sbb cmp (bad) sbb cmp xor cwtl rex.R rex.X (bad) jnp cmpsb jae xor repnz rex.X (bad) fdivr jo xor cwtl xor adc rex.WB xchg xlat insb sahf or movabs mov mov and int3 (bad) stos fucomp xchg (bad) mov mov mov jge (bad) shl add fdivr and ja std out xchg subl xchg xchg mov mov xchg (bad) cqto insl outsb (bad) sti rex.RXB xchg mov jae nop (bad) fs stc mov loope pushq popfq and mov addr32 pop mov push sahf xor repnz movsl jle or popfq (bad) rex.X fildl data16 push mov (bad) imul pop mov sbbl xor and jl and cmp and lea jg fcoml movabs xchg (bad) mov sahf sarl adc stos pop cli rex.WXB pop mov jno xchg roll (bad) (bad) insl mov fldt mov insb (bad) cmp push (bad) (bad) cwtl mov lcall scas rex.WRXB sbb movabs callq pop stos lahf jmp (bad) (bad) (bad) cltd out cmp fcoml mov mov fwait ss test adc xchg rcrl sbb push data16 mov stc adcl jne or pushfq lods or rex.WRXB sahf lock fwait push or pop sarb loope sahf leaveq out xchg jnp sbb lods test rex.R add xlat repz in incl mov rex (bad) iret (bad) movabs (bad) mov mov rcll (bad) xchg in push (bad) jno lret xchg negl xchg ja and mov xor rex.RXB pushfq test (bad) (bad) sub ja outsl cmp pop roll jns (bad) lret cmp or xchg or pushq add fs lock sbb mov push pop rex rex.WB sub add add (bad) pushq (bad) (bad) stos subl adc mull icebp cltd pop cs add (bad) cli xchg mov xchg add cld callq pop shll mov sahf or repnz fs xchg (bad) movabs in movabs lahf mov in or movabs movabs mov movabs mov (bad) divb jmpq (bad) lahf push hlt xchg sub mov xchg cmp movsl cld jno pop loope rorb xchg and xor jo xchg or pop cld push leaveq stc insl and ja or movslq outsl adc (bad) xor sub pop sti fdivs retq movabs rex or (bad) sahf jmpq add pcmpeqb adc fnstsw push fsub idiv xchg vrcpps outsl (bad) retq mov nop sti loop out stc (bad) movabs ja div xchg imul adc (bad) adc nop lahf mov jae (bad) rcrl sbb cmp sbb and (bad) (bad) mov insl seta mov cmp mov fistpl (bad) movslq xchg retq pop rcll test iret mov jo (bad) rex sbb (bad) movabs push sbb nop int3 imul andl xchg js (bad) (bad) xor mov shlb sub rex.RX jne pushfq int3 jo leaveq sub out jl scas pop mov mov (bad) rex.WB ds xlat jno clc xchg mov clc sub pushfq (bad) sbb movslq push movsl and xchg rex.X (bad) jb movabs (bad) fist rex.WR (bad) int addr32 (bad) pushfq xchg iret pop (bad) (bad) jl jb (bad) jmpq (bad) negl sub lods rex.WXB loopne sub lock (bad) xchg loopne jmp adc jbe jmpq mov jnp sahf test sub loopne (bad) pop retq xlat mov pushfq cs hlt cmc movsl jrcxz xchg imul xchg loop (bad) gs (bad) in (bad) subl cwtl xchg rex.WRXB cltd outsl xchg push addr32 and in rex.RB imul xchg rex.RXB or jns movabs jg xchg pushq adc mov movabs (bad) fwait xchg mov xchg ss sub jb stos rex.WR clts pop fstl fcompl xor add scas rex.WX (bad) imul ror retq enterq movsb add insb (bad) xchg rex.WRXB (bad) adc mov out mov (bad) push adc cwtl jo jg and movabs (bad) fcomi movabs mov cld stos rex.RX xchg (bad) movsl lock sbb rex.WRX sahf js pop sbb outsb lahf (bad) test xchg test mov in mov enterq push cld xor pop xchg push addr32 xor adc xlat push jns jmp movsl jae pushfq cmp jp xchg mov sbb rex.XB jmpq jle xor (bad) (bad) cwtl stc sti jg lea xchg fmull (bad) std (bad) xor mov test add fnstcw in (bad) outsb xchg pop jle movsl icebp lahf (bad) sbb mov push xchg in jg cmpsl movsl mov jno add (bad) movabs loope ds mov jg (bad) int3 fcmovbe clc xchg xor jb scas (bad) pop rex.RB cmp (bad) mov js sub (bad) (bad) rex.WX push outsl imul stos add rex.WRXB incl fmul xchg clc and mov addr32 nop sbb and sub cmpsb jmp mull int3 js xor push negl jmpq sti (bad) insl sbb iret cmp fmul clc lea xchg imul fwait jmp pushfq pop or pop iret sbbl lods add leaveq mov jae xchg rex.WX rex sbb push push jge (bad) (bad) or rcrl es imul adc xor subl pop retq ss rex.RXB jnp xchg and (bad) imul test mov jne mov (bad) mov in rex.WRXB (bad) lea sub lahf sbb push or sbb (bad) mov in mov lea (bad) movabs pushfq (bad) sahf ss std (bad) push insl rex.RX stos (bad) cld (bad) jns cmpsb test lret xchg or pop add (bad) xchg loop cli add notb (bad) add (bad) out adc outsb retq pushfq loopne mov js retq out movabs int and cs movabs xor adc sbb jno sub frstor jo jae adc add adc adcl adc lahf (bad) retq mov or retq cwtl mov insl xor enterq out or movsl out (bad) loope rex.WXB (bad) mov cltd sub xchg imul cltd int3 pushq cmpsb fs ficomp push mov movabs rex.WX addr32 pushq outsl (bad) xchg (bad) push push sbb jbe (bad) xor adc jge nop sbb sbb and subl or add sarl test adc fyl2xp1 enterq (bad) (bad) (bad) js lea jbe mov mov (bad) mov xchg sti cltd movsb int3 (bad) rcrl in xchg mov imull (bad) rex.WB jp add add movabs pop or and (bad) shrb mov push add fs rcrl cmpl (bad) or xchg (bad) and sarb adc rex.W loope jbe (bad) popfq pushfq stc (bad) xchg sbbl pop (bad) push add add pop lods enterq cltd pop fwait push mov jnp xchg (bad) (bad) push imul (bad) adc jae mov jl jg xchg fwait (bad) xchg (bad) notb mov xchg add cmp rex.RX out pop (bad) fsubs (bad) (bad) and xchg mov cmpsl (bad) decl jg rex.WB add ror sahf (bad) and pop jbe xor xchg xchg lcall fldenv push sbb mov and xchg sbb pushfq enterq movabs test (bad) sbb scas (bad) jmp notb xor mov (bad) adc pop mov loopne je rcll jo push and xchg rex.X or xor mov push mov test (bad) loopne fwait pop sub rex.WRB and out or (bad) xchg rex.RXB movslq cmc (bad) pushq data16 loop iret sub mov xor mov xchg and rex (bad) cmpsl push es (bad) retq jnp sahf hlt mov ss xchg jae sub es decl pushq mov mov rex.W rcll je fsubrs mov stc xchg push mov jno add jp mov retq mov lods callq pushq mov rex.WRXB rorl shlb jnp punpckhbw pop cmp sbb pushfq divb rex.WB (bad) or lahf mov loopne jle stos gs (bad) insl cs out mov cli or repnz fwait (bad) mov shrb data16 cmp mov gs push notl (bad) xchg (bad) adc jnp sbb pop movabs icebp (bad) jns jg out (bad) mov (bad) leaveq rex.XB leaveq and mov in fs xor sub lods xchg xchg cmp lock xchg mov cmp xchg rorl outsb cmpb addb push push sbbl (bad) sub (bad) (bad) or (bad) fwait in iret xchg or rex int adc scas fisttp lock xchg mov (bad) pushfq lods xchg jbe jge cmp je xchg out imul fcmovu rex.WR iret (bad) pushq add pop sbb in (bad) mov (bad) mov mov sahf xchg loop (bad) outsb push rex.WB pop popfq xchg lahf sbb xchg es js cmp stos fsubl xchg (bad) adc and (bad) movabs rex.W retq lods adcl push and xor in add (bad) jb rex.WB xchg sbb scas add stc pop cltd stos jge test jmp addr32 xchg mov sbb sahf je cmpsl ja mov pushfq (bad) rex.XB cmp repz ficoml popfq jrcxz int3 ja xchg sarb in imul fsts insb adc (bad) xchg lahf (bad) jns jmp test out pop (bad) rex.WRB loope mov jp add xchg fadd imul push imul fimull push jne in nop xor enterq movslq cmp mov sbb mov out test (bad) movabs cmp sbb lret xor idivl rex.WRXB jp rex.B jnp or imul cs lock cld and xor (bad) xchg insl sbb (bad) test jge mov (bad) lret stos xchg (bad) enterq mov (bad) clc jmpq add rex.WB leaveq cmc movslq (bad) (bad) mov rex.WRX rex.WRB sbb cmp orl cmp xchg nop mov jne out mov sub jbe lods movabs mov or ja jmpq movabs sbb mov sub fisttp pushq xchg xchg insl and xor jle jrcxz outsb xor stos fwait mov mov mov jmpq movabs jbe pushfq add pop cmpsl (bad) popfq xchg add movabs lret adc mov mov lret jne rex.WRX int3 nop jmpq rex.WR sbb (bad) xchg (bad) jg cld xchg or rcrl rorl and fisubrl jne push (bad) pop xchg pushfq mov adc cltd mov addl retq (bad) sbbl lahf insl pop xchg in and cmp insl retq pop add mov (bad) leaveq fwait xlat nop xchg mov popfq je mov and (bad) jne and hlt pushfq sbb stos icebp xor in push mov pop (bad) mov jmpq cmp (bad) std scas rex.X xchg cmp (bad) push (bad) rex.RXB cmp fchs mov mov ficomp fsubl mov nop addr32 adc cmp mov (bad) and push (bad) mov (bad) mov ss and xchg movabs (bad) push xor loop addr32 cmp cmp jno xchg sub jp rex.WRX xchg movsb add cmpsl cs lret xorl xor outsl out xchg jns adc mov (bad) mov (bad) (bad) repnz (bad) and lahf mov movabs rex.WR fwait sbb (bad) leaveq jg (bad) push mov xor jae (bad) rex.X jp scas (bad) mov cmp movsb rex.RXB xor (bad) jp jg sti rex.XB sbb retq jne pushfq sub xchg fimul mov in xchg in mov push pushfq (bad) mov subl mov xchg rex.RX sub (bad) rex.XB jno xchg es pop sub cmp and lahf mov retq movabs mov mov and pop sbb rex.RX pop decl jrcxz in (bad) push movsb pushq xchg and punpckhdq addr32 mov retq mov rex.WRX or sbb cwtl (bad) xchg test xor jg sub cmpsb enterq (bad) and adc xchg stos cmp mov fisubr icebp fnop adc shrl int3 xchg xor pop pop xchg rex.RX (bad) lea hlt test xchg std or add cltd sahf mov je fcoms cmp enterq clc hlt adc xor xchg sub rex.RX (bad) or (bad) or xchg fwait push fistpl mov mov xchg mov sbb mov rex.WXB push xchg icebp (bad) mov hlt jmp adc movabs mov xchg and lret shrl icebp rex.RB scas shll cmp jo sbb stc sarl popfq xchg testl pop imull fcoms sub cmpsl jge (bad) (bad) xchg (bad) xchg shlb movslq (bad) push push jnp add cwtl cmp rex.B ja retq jne jmp outsl push addr32 jrcxz add mov jnp retq testb data16 cld out pop xchg mov mov retq rcl rcrl jmp stos movslq fcompl lock movsl xchg loop jo pop mulb movslq sti cli adc mov lea xchg je in pushq add jg imul (bad) ror negl push cli gs and or imul std and fist sahf xor movabs insl mov pop divl cs js cli lea fiadd je pop mov adc pop shrb sahf mov sub add adcl cmc (bad) xchg xchg scas jg mov in jo adc push xchg pop rex.B rex.WX movabs push and add xchg int je sub popfq cmc push retq jnp ja rex.RB out hlt outsb pop stc (bad) out add xchg in mov sub scas movsb (bad) (bad) insb mov pop movabs sub mov mov sarl pushfq (bad) fisubl xchg leaveq jrcxz lea push xchg nop sbb add popfq cmp jae (bad) or in callq mov add cld push cmp (bad) or xchg data16 rex.WRX sahf stos retq sub (bad) sbb mov mov movsb (bad) outsl rex.WRXB mov mov movsb jbe roll rex.RXB mov fwait push int (bad) xchg (bad) rcl mov xor xchg xlat mov cmp xchg xchg subl movabs je rex.RX jg movsl adc jg mov ds negl adc xchg sbb mov mov (bad) push (bad) xlat out (bad) mov (bad) mov and pushfq push stc clc (bad) mov (bad) in out cmp mov sahf rex.WRX rex.B xchg and xor fs jg ds in pushq (bad) xor sub or (bad) sbb pushq movabs xchg loopne jge adc or rex.WXB and js rex.RX imul leaveq add or cmpb sar std sbb sub clc mov rex.WRXB (bad) cli retq xchg xor outsb cmp fldt (bad) lock int3 movabs lret notl sbb (bad) int3 std xchg movsl mov shll cmpsb xchg (bad) xchg outsb rex.WR jb add xchg (bad) (bad) cwtl (bad) clc (bad) and pop mov (bad) mov (bad) lret (bad) fidivrl insl rex.XB negl (bad) pop rex.WB xchg sub negl xchg out pop neg jo push cmc xchg rex.WX jnp mov out mov cmp xchg sub sub (bad) movabs add sbb in es sub xor xchg sbb sbb xchg repnz rex.XB xchg stc cmp cmp int3 cltd xchg xchg imul cwtl mov pushfq mov xchg fwait (bad) mov callq rex.W mov sarb in insl (bad) sub pop in fistp xchg loop (bad) mov cltd mov jnp rex.WB in (bad) mov sbb jae (bad) xchg sbb sub sub and mov ja push and (bad) imul sbb xchg (bad) (bad) rex.WXB je xchg jnp out (bad) or (bad) es lock pop rex.W scas xchg xor pop (bad) (bad) push add xchg scas cmp scas xchg cmp (bad) mov loop xchg add jbe mov rex.R loop (bad) sub cmpsl jrcxz pushq rex.WR (bad) sbb lods adc repnz cmc stos jae cli sahf (bad) rex.WXB jnp mov sub jbe rex.R mov cltd rex.RB rcrb mov push pop pushw sub mov ja iret rex.WRX jns insb or cld rex.RXB sub cwtl icebp imull jp addr32 test pop xchg or or ds popfq enterq jl xor int or xchg roll and movabs rex.WRX sub leaveq clc stos out xchg mov (bad) ss sbb jrcxz movsl cs or movsl rex.WXB rclb addr32 add cwtl rex.RX movabs sub jnp (bad) movsb xchg scas mov in xchg cmp mov in ds xchg or movsl xor jrcxz sbb mov sbb cmc (bad) rex.RXB sbb insl movslq mov sbb lahf fwait and out int mov xchg add xchg push std stos (bad) loopne (bad) repz iret fnstsw (bad) fndisi(8087 xlat jg cmp rex.X ds cs cmpsl xchg fcompl xchg xor fldlg2 fnsave adc xchg std cwtl rex.WXB rex.RB lahf (bad) mov ror rex.WXB rex.RX sti xchg push mov (bad) lock and xchg (bad) scas rep or jne rex pop (bad) (bad) pop in mov xor (bad) add xlat stos xchg mov movabs ss cmp icebp sar xchg out negb mov pop add mov movsb out scas (bad) fnstenv and jbe jrcxz in rex.W (bad) (bad) fsts leaveq movabs cltd cwtl jrcxz rex.WRB xor lret pop xchg jae pop and (bad) xchg sbb (bad) out (bad) jg xchg sub sbb scas out adc sahf fild sub jmp fdivs pop sbb lock or nop es and (bad) (bad) (bad) repnz imul out fistpll mov fwait jno test stos pushq addr32 in mov clc incl sbb pop jge es out adc or or (bad) (bad) out pushfq (bad) fadd leaveq outsl out sub push (bad) test pop xor int cwtl cmc (bad) push jl lret xchg fs out jmpq cli outsl mov (bad) adcb jrcxz jmpq callq xchg insb je (bad) (bad) adc (bad) addb xchg out loopne cmc fiadd test sar sub add jae xor (bad) adc imul rex.WR scas cmpsl xchg (bad) movabs xorb mov xchg (bad) loope mov and outsl cli cmp sahf movabs mov pop cwtl (bad) xor out in jmp adcl pop shlb mov adc lods enterq gs fisubrl rex.RB rex.W push hlt loopne popfq (bad) test rex.WXB je rex.WRXB rex.X data16 rex.RXB rex.WXB movsl iret adcl add jns andb xchg hlt loop in xchg fildl pop xchg sbb mov repnz or rcrb xchg mov (bad) adc sahf mov jp outsb jg movsl (bad) xchg adc (bad) jne pop int3 (bad) jnp and int jle sub (bad) hlt nop mov negl mov push cmp js sub mov (bad) popfq cwtl and and xor xchg xchg sub pop pushq leaveq mov enterq sub std js rex.RXB add sub or (bad) nop in adc sub clc jrcxz movslq rex.RXB bnd jbe shll mov in icebp sbb push mov mov xchg jrcxz xchg movabs sahf cmp test out std retq (bad) fsubrp js ss sbb jg stc mov add xor mov (bad) push fnclex rcll movabs movabs add (bad) xchg sbb (bad) pop mov xchg push (bad) in xor rorl cmpsb fnop (bad) data16 test adc mov (bad) adc sti pop sbb adc ja cmpsb es out fwait (bad) scas add xor cmp negl and sbb lods mov clc push and in xchg (bad) add jge sbb insl (bad) movabs mov jno sahf adc (bad) repz hlt (bad) add xor cs movsl pop jns xlat int (bad) xchg sbb push sub xchg in repz push jmp cld xor rex.RX and lret cmpsl push (bad) (bad) xor xchg xchg (bad) addr32 rex.RX imul movslq mov pop or xchg sbb jp pop xchg adc (bad) (bad) (bad) pushfq movabs test rex.XB sbb mov xchg rex.RB fcmovne leaveq xchg jrcxz add jle xchg addr32 pop std hlt xchg xchg (bad) jo mov addr32 pop notl rol fisubr or xchg lods es xchg lock popfq leaveq jg and or retq xchg xchg imul js addr32 in rex.B fcoml negb add (bad) (bad) xchg rex.WX rex.WB pop xlat loope es shl fadd retq (bad) popfq (bad) rex.WRXB (bad) mov push and xor rex movabs pop pop iret mov xor sub (bad) and movslq (bad) pop (bad) mov stos mov adc cmp rex.WRXB nop retq mov test push xchg lahf mov stos pop push (bad) (bad) xchg mov (bad) adc out (bad) mov fs add fnstsw xchg push rex.WXB fsubp mov rex.W clc xchg or shlb (bad) int3 in sbb sub rex.WX lock loope iret out mov (bad) (bad) (bad) xchg test (bad) and out movsl (bad) in jle pushfq movabs test add xchg jg shlb ficom and sbb cltd sbb cmp mov xchg (bad) jg cmp (bad) shll loopne xchg lret mov rex.WRXB data16 xchg ja orl test mov leaveq jno add movabs rex.WRB cmc rex.RXB (bad) clc int fdivrs pushfq pop rex.RB es cmp sarb (bad) rex.WRX popfq (bad) cli stos jbe ds (bad) lea jl loope mov rex.W (bad) scas mov rex.RXB adc fistpl scas stos ror adc (bad) jge mov (bad) push sub adc sub and mov adc xchg xchg cmp xchg (bad) xchg or (bad) cmpsb outsl or out push add test and or shll mov cwtl mov cltd mov rex.WRX (bad) ja imul mov iret (bad) movb cwtl pushq add andnps mov test scas mov jnp adc (bad) sub and and sti lret mov inc cwtl out sti rex.WRX (bad) (bad) and (bad) outsl and push xor out (bad) pop jae test mov mov movsl (bad) shll out and (bad) mov (bad) fldt xchg mov imul out rex.R fwait (bad) jnp xchg (bad) pop cmpsl fldl sbb (bad) push out cli out callq adc (bad) (bad) xchg pop push fwait repz push add (bad) push (bad) callq (bad) movabs mov test xchg xorb xchg es jae sahf (bad) xchg icebp retq lret xchg nop cltd hlt int3 sub jmp cmc cwtl xchg mov js (bad) xchg movsb fs cmp add (bad) jns movslq loop push cs mov cld adc rex.WRXB add cmpsl pop (bad) rex.WRX (bad) stc mov cli jo sahf insl in pop xchg (bad) xchg cmpsb mulb xlat repnz (bad) sahf cltd sbb int3 xchg je scas (bad) stos xchg pop repz pop sub loope (bad) cwtl jrcxz jb xchg mov push int3 test iret mov imul movabs scas movabs xor cld mov rex.WRX rorb notl fwait sahf (bad) xor movsl xchg xchg imul movabs (bad) adcl sahf imul lea (bad) jbe (bad) fs jb int3 xchg callq mov movsb adc pop mov pop push hlt outsl xchg (bad) icebp rorl test enterq rex.RX lods lods mov in mov pop sahf jns retq loopne (bad) xchg jno add mov rex.X rex.RX fs cmp xor retq movabs mov adc cmp (bad) (bad) int (bad) outsl scas xchg icebp pop pop xchg mov mov jg adcl or mov testb callq pop movsl xchg cmp clc jae vpcmpeqw adc xor cmc pop popfq cmpsl or add incb cmp hlt push pop ljmp cmc pop sarb add (bad) mov cmovp lock mov xchg movsb repz xchg (bad) push cmc cltd jae in out xchg addr32 push stc sub (bad) sbb lret addl popfq nop out pop pop (bad) or cmpsl loop cmpsb out popfq (bad) nop repz rex.W repnz pop retq mov xchg jle scas notb xchg xchg xchg sub (bad) adc fistl sbb imul xchg fdiv idivb addl lock test adc lret (bad) xchg (bad) mov xchg and cmc rex.WRXB loope mov loopne loopne stos repnz sub or out jge xlat out sbb jne emms xchg pop movsb lock pushq xchg (bad) rex.WX mov orb (bad) movabs subb cmpsl pop mov sahf test rex.RXB cmc rex.WRB out (bad) mov (bad) (bad) lret testl add cwtl (bad) xchg rex.WXB jnp and sbb orl pop mov xchg movabs movabs mov callq (bad) xchg jl xchg (bad) xchg jle mov sbb cmpsl movsl (bad) adc xchg insb jns (bad) pop lret in xchg (bad) negb cmpsl outsl loop cmpsb mov movabs xchg (bad) (bad) xchg shrb stos outsb es mov xlat and xchg jbe cmpsb fcompl (bad) (bad) xchg (bad) jns add (bad) xor movabs add sbb sub out pop or pop mull movslq movabs shll jo in rex.WR sbbl jns sub int pop fsubrl xchg scas popfq adc (bad) and jg leaveq xchg mov (bad) nop test mov es retq sbb negb or sbb movabs pop pushq xor rex.X movslq imul (bad) mov add mov or fistpll (bad) cmpsb push add (bad) (bad) or (bad) pushq jrcxz repnz lods rex.WRXB or ficom bnd push insb (bad) xlat mov (bad) int sarl or add pushfq fdivr (bad) movabs mov sub pushfq or rex.XB jrcxz,pt lods xlat imull or (bad) add imul mov in nop jno xchg mov xor test rclb (bad) add jbe push sbb enterq jnp rclb rorl cmp lret mov (bad) xchg push sub xchg pushq mov xchg pop insb stos add retq popfq and imull test xchg fsubrp fdivr sahf xchg popfq add rex.X rex.WXB push sub enterq xlat push sub cmpsb (bad) xchg (bad) rex.RX rex.WXB fdivp (bad) jns xchg scas outsl ja (bad) rex.WRB stc mov or clc xchg jmp mov push movabs jle and cmc push adc xor rex rcl mov sahf callq xchg mulb rex.R lock and sbb cmpsl movabs jge rex.R pop cmp sbb rex.WRXB rex.X (bad) lcall mov shrl cwtl or jbe data16 sub out jmp test hlt popfq mov clc (bad) enterq pushq (bad) sub and jrcxz insb xor movabs (bad) ffreep test sbb lahf sub stos cmpsl pop movsl jle add (bad) mov and mov addr32 sahf rex.X jb in lahf (bad) cmp or icebp rex.R fs sbb lea rex.WB adc adc popfq jmp or retq insl adc stos and xor test sbb sarl (bad) mov xor sbb lret sbb mov outsl movsb jbe rex.WRB enterq mov iret cltd push retq jno mov lahf fisub push outsl push sbb retq cmp outsl (bad) and enterq xchg sbb (bad) sbb rex.XB fnstsw ds sbb fstpl fnstsw xor (bad) lea or rcr rex.RX rex.WXB cmpsb adc rex.WR pop rex.WRB (bad) adc pushq sub sbb jbe out rorb test xlat or repnz rex.XB (bad) pop or mov stc cmpl jno roll addr32 stos test (bad) int sub lods pop sbb xchg (bad) ja out cmp repnz jmp lret (bad) rex.XB rex.RXB lret xchg jno adc pushq xor pushq jnp or sarb adcl xchg rex.X (bad) rex.X (bad) divb (bad) popfq lods rex.RX or pushfq std pop (bad) stc rex.WRXB jnp pop in xchg rex.B lods mov shlb loop rorb mov je mov rex.X insl ja negl (bad) sub (bad) (bad) (bad) xchg callq icebp xor push callq in (bad) (bad) jmp sub xlat push (bad) mov (bad) sub out xchg (bad) icebp test mov pop xchg (bad) rex.X lods stos movabs jp fisubl je jns callq jg add jrcxz xchg and andb lods enterq in pop movabs xchg movabs sahf loope add test (bad) jnp cltd adc xchg mov mov xor stos (bad) sub jle mov frstor mov ss enterq cmp movsb callq (bad) pushq (bad) cmpsl enterq lret (bad) pop fs xchg rex.RXB incl mov sahf mov insl push (bad) adc (bad) (bad) ja mov out pushq cmp xchg jmpq je in mov pop xchg scas fsubr test xchg mov sub (bad) (bad) lock add rex.B test decb fimull sub xlat (bad) jns (bad) int3 (bad) popfq sub shrb in fadd sbb mov sbb rex.WB mov (bad) mov movabs stos xchg loope ss movsb sahf xor pushq (bad) mov repz xchg add movabs fs data16 sub retq xchg and jne rex.X jmp rex.RB movabs sub mov cs xor int3 (bad) cmpsb jb xchg loopne jg add jbe lods rex.X pop movabs add push movabs (bad) repnz outsl xchg loop (bad) rex.B js jb (bad) je xor adc mov pushfq fmuls (bad) or sub (bad) clc jbe ficoml sahf (bad) (bad) retq rex.R jae add xchg popfq jmp jg out mov loop (bad) (bad) xor xchg mov rex.RX xchg xchg (bad) push cmp scas ljmp fidiv insl loopne enterq rex.WB movslq scas outsl pop jp bnd xor rex.WB movsl lock fwait (bad) popfq int leaveq mov rex.WX adcl mov (bad) (bad) xchg rex.W xchg retq sub cmc nop cmp pop test jp rex.X adcl sbb mov mov sub (bad) mulb or cmp cmp xchg (bad) xchg rorb and xchg push ljmp rex.X mov sbb imull sbb (bad) or loope pop lahf xchg mov jbe (bad) jno or (bad) popfq mov xchg cmpsl push pop mov xchg sbb xor (bad) adc xor shrb std jnp xchg push xor jp xor add cmp cs xchg rex.X rex.WR add (bad) rex.WXB sahf (bad) (bad) mov sahf js in jle or cmc ds (bad) jne rcl (bad) push sub (bad) mov jae (bad) sbb mov insb pop xchg mov ja movabs xchg cmpsl cli (bad) (bad) jmpq jnp gs js jnp xchg jb pushfq leaveq mov test xlat rcll data16 pop mov (bad) and pop jmp (bad) xor adc or ror (bad) jno loope (bad) rex sbb and outsb pushfq push mov mov in mov mov mov lock lret mov outsb sbb mov adc cmp data16 pop and js and add mov xchg cmp mov movslq clc push add sbb mov mov jl loope imul fdiv sub or sbb and sbbb fwait sbbl movabs outsl repnz bswap hlt ds (bad) cltd cmp push cmp shrl (bad) (bad) js callq test rex.B mov (bad) xor rex.WXB add (bad) pop pop (bad) xor add add cld xchg sbb pushfq (bad) retq loop (bad) add cmc pop movsb jp sahf addr32 rol mov jo sbb lahf mov or ja mov out xchg xor enterq xchg imul clc xchg rex.WB jno jp (bad) callq or lret jbe xchg vunpckhps and cld clc xchg xchg outsb insb jae loope mov fldt rex.RX rex.X or lods mov mov movabs div and cltd (bad) nop cwtl lods roll (bad) (bad) jns cmp jmpq repz scas sub sti sahf or stos xor (bad) mov ds xor clc add mov adc jle sbb movabs stos mov pushfq rex.WR ss cmpsl rex.WRB fildll pop jrcxz xchg (bad) add jmpq imul mov xor (bad) add scas and nop notb clc mov outsl (bad) ficoml mov sbb or shl mov in (bad) movsl (bad) or pcmpeqd xor xchg loope cmpsb test subl cli (bad) loop xor retq (bad) mov xchg or xchg fdivs (bad) jb stos rex.WRX xchg sahf sbb rex.RB or (bad) xchg push xor jge nop mov mov xchg and nop popfq enterq imul fimull (bad) add mov ds adc jge rex.X or cltd cmp rex.WRB enterq push mov lret mov stos test rex.WB add xor pop je mov callq retq jnp mov add and (bad) lods (bad) rex.RXB add (bad) mov in popfq pushq (bad) fbld xchg (bad) xlat add adcl jb (bad) cmp movabs sub sbb (bad) shlb add add rex.B rex.X (bad) and adc stc in (bad) idivb jbe mov rex.XB (bad) pushq movabs movabs test rcll nop (bad) adc (bad) cmpsl repz movslq (bad) pushq and mov pushq mov clc add rex sbb cmp sub scas cs (bad) mov repz cvttps2pi sub movabs rex.WRXB insl sbb or jg jle lock repz xchg cmp mov out ja nop (bad) mov rex.WRXB add js lret xchg movslq out (bad) mov xchg jae (bad) sbb cmpsb xchg mov (bad) retq jnp ror (bad) xchg movsl icebp fisub push jmpq xchg imul sti mov movslq lahf incl xchg xor rex.WR pushfq test test fsts mov or rex.RB or movabs stos push cmp xor cltd xchg sub lea xor std or or rex.XB imul rex.WRXB imul stos cmp or pop rex.X xchg fistpll (bad) cmp add shl pop jrcxz sbb cwtl mov test es lea or callq and rex.XB jo xor insb loop addr32 mov (bad) (bad) sub (bad) rol ss std clc fmull xchg rex.RB iret pop fcoms cmp mov movabs movabs rex.XB or cmc cltd (bad) mov cmp imull xchg (bad) or imul cmp jae pushq imul movabs (bad) xlat jbe mov fdivr mov cmp add and mov xchg sbb mov mov (bad) fld gs mov movabs xchg jo (bad) iret loopne std pushq jge push xchg rcll cmpsb cmp or in pushfq lock cwtl (bad) add (bad) jmp or rex.WRB cmp pushfq xor sahf mov jbe (bad) mov inc cmpsl mov (bad) movabs add xchg fbld push fimull gs (bad) mov xor push jns scas iret mov push mov jp mov (bad) sti xchg mov test (bad) addl jmp jmp jmpq fisubl rex.WRXB mov (bad) icebp lahf mov sub ror cmpsb rex.RX jp mov (bad) hlt incl ficom rex.XB cld (bad) xchg sahf pop (bad) (bad) and out (bad) movabs shll rorb mov lahf and xchg mov insb mov rex.WRXB test mov add mov addr32 xchg mov fsubrl xchg andl cmpl mov sbb jo flds mov push sbb in push lret movabs jnp jmpq xor fs callq test orl jmp or pop xchg pop adc rclb imul sub scas (bad) (bad) push sub mov and (bad) or (bad) (bad) jmp or in movslq jge xor (bad) movabs xchg xor xlat rex.WX cmpsb sti push push xchg or adc mov ror (bad) sub fs sbb and movabs gs and mov (bad) xchg mov add xchg test rex xchg jb pop (bad) std movabs (bad) mov notb (bad) push push rex.XB stos je and cwtl xor pop fs xchg adc (bad) mov roll (bad) mull xchg jmpq mov xor xchg shl and rex.X jp pushfq sub lret push add xchg cmc fidivl xchg xchg adc rex.WR idivl rex.RXB fs rex.WRXB rex.WB mov movslq mov sahf fst push and push rex.WRX and mov (bad) loop iret sbb or xchg test mov rex.RXB mov xchg mov jbe clc mov ficoml pop rex.RB lret movb xchg rex.WRX (bad) rex.W sbb mov fldenv or addr32 xchg add mov pop push stos fcoms movabs fs negb cmp scas (bad) xorb cld push jmpq pushfq cmp (bad) or (bad) xchg mov sub movslq rex.RXB movabs gs lods (bad) (bad) xchg je rcl rex.WB fsubrl (bad) push xchg or mov push (bad) (bad) enterq rex.RB push rcrb rorl xchg (bad) xlat pushq pop imul movabs pushfq pop pop mov rex.WRX movsl jl push movslq push insl ficom outsl (bad) loop lahf jo xchg mov xchg mov and cwtl push mov lods repz xor shrl jmp fadd (bad) cmp andl hlt (bad) pop xchg rex.WX xchg push mov (bad) or xor stos fwait cmpsb mov enterq rex.RXB mul retq js mov (bad) faddl mov sahf xor rex.RX (bad) insb outsl rex.WX or movabs sub (bad) mov adc rex.XB decl xor leaveq pop (bad) test movslq cs push push out popfq in mov retq sbb popfq pushfq pushq stos xor (bad) in loop (bad) cmpsl (bad) (bad) movslq in jae (bad) cmpsl push sahf lods mov (bad) ja jo pop rex.XB icebp jge cld movsl (bad) cmp popfq xchg (bad) pushq movslq xchg xchg jno rex.WX (bad) or pop outsb jp,pn jne push fsubrs sbb movslq cltd and pushfq jbe (bad) stos jmp rex.WRXB rcrb xchg sbb out and jno xchg cmp clc (bad) mov sub popfq sahf cmp imull sahf ficom mov es mov mov (bad) lret jrcxz mov (bad) sti stos mov pop sahf xor pushq movabs fisubr pop repz (bad) rex.X lock mov loopne movsl movsb sbbl push mov gs xor out fwait out movsl cmpsb (bad) cmp (bad) or out sub outsb add adc xchg stc xchg (bad) jle movabs pop sbb out sarq (bad) cmpsl addl push adc cmp loop cmc and pop iret sbb sarl (bad) adc sbb js lods jrcxz rex.WRX lea jbe add rex.WRX stos test fistpll cmpsb mov movsl jnp jg shrq sub pop (bad) and and addr32 or rol and (bad) mov adc mov adc loop sbb (bad) and (bad) or cmc pop lea sub test nop roll clc and sub movslq rex.WRXB and testb xchg (bad) sbb cmp cltd scas rex.WRB (bad) adc pop jl (bad) mov (bad) cs mov pop cltd adc xlat neg (bad) xchg (bad) movsl jg mov scas movabs adc callq (bad) sub imul pop out insb cmp adc rex.WXB int3 xchg movabs xor callq movslq adc fwait sub iret add mov (bad) fisubrl rex.X test mov fnstenv jmpq pop rolb sti pushfq or test add sub (bad) loop cld sbb sub jne jp rex.WR movl fidivl loopne mov rex.WRB push movabs out sub retq rex.WRB (bad) hlt mov pushfq mov movabs sub popfq addr32 (bad) sbb clc pop jns stos xchg mov mov xchg negl insb sahf cmpsl incl (bad) (bad) mov (bad) (bad) xchg lods nop pop adc jrcxz pop (bad) movsb fs lea xchg movabs movabs andl loop (bad) adc cmpsb sub ss cltd mov jmp stos scas (bad) xchg (bad) icebp xor cwtl or inc (bad) addr32 outsl (bad) movabs movsb mov jmp (bad) sbb movslq out (bad) lret xchg xchg fsubrs rex.RB fldt (bad) nop jo fwait mov in adc cmp outsb (bad) loopne (bad) movabs mov mov sbb jge subl out cltd push and faddl rex.WXB adc sahf lret (bad) mov (bad) loop iret sub movabs (bad) xchg rex.RX jo (bad) std outsl mov imul jp or jle data16 mov mov mov xchg (bad) pop (bad) (bad) push shl cltd in rex mov jbe cmp rex.R popfq mulb divl mov mov ficoml out mov movabs pop movabs mov mov pop cltd push insb in mov popfq rex loop rex.WRXB fs xchg sysenter jle cmpl movslq or jbe xchg negb adc (bad) mov jne sbb push (bad) add (bad) insb (bad) mov lea rex and (bad) jbe xchg je mov sar movslq jb sub xchg adc (bad) pushq xchg mov xor xor mov xchg movabs mov add rex.WXB pushq cmp xchg jae xchg jle xchg pushfw (bad) jnp gs lods mov jmp andl insl (bad) subl scas popfq jle insb addr32 outsl xchg incb (bad) add mov movabs rex.R ds popq rex.WRX cli push add insl je (bad) test (bad) pushfq xchg xchg sti add mov fstl in (bad) rex.X mov push (bad) and in jl or cmp (bad) xor xchg rorb leaveq xchg pushq (bad) xchg and popfq adc rex icebp je out (bad) add mov cwtl mov xchg jno cmpsb in imul cltd push (bad) jp jne (bad) loopne loope add and (bad) xchg pushq fs mov adc jae cltd push lods rex.R xchg sub shrl cli pop rex.W mov xchg jnp or fsubl (bad) cmp lock movsb xor test mov xchg (bad) movabs sahf mov sbb sti rex.WXB in fwait pop mov in xchg nop adc cs xor outsl mov fs mov gs and pop popq mov test pop jbe in xchg lods int mov jno xchg (bad) (bad) (bad) push sahf mov lahf mov insl adc imul lea movslq retq (bad) xor (bad) mov or cltd rex.WRXB pop pop fadd jbe and or pushq fsubl xor hlt jg outsl cltd je push rex.WXB mov (bad) or (bad) stc enterq nop sbb add fiaddl fistpl push imul stos stos rex.B movabs (bad) icebp movabs xchg movabs retq (bad) cmp fistpl insl stos rex.X push retq fwait lret outsb out jmp (bad) and lea mov cltd cwtl cmp mov adc int movabs (bad) (bad) cs xor out xorb sti stos (bad) sub mov rex.W pop rex.WRXB xchg rex.WRX (bad) rex.WXB in mov jno jno xor xchg or jle xchg sub rex.WXB jne mov pop and rex.WRXB lods adc xchg repz add (bad) xchg push cltd stc and sar (bad) cwtl sub fsubr out (bad) (bad) push and cmp (bad) jge or addr32 iret (bad) rex.RB hlt sub je rex.RX rex.RXB int mov sti (bad) notl js lods mov shll mov pushq insl out (bad) rex.WXB imul out rcll scas cmp or push cmp pop push and rex.W ss (bad) test rex.R and push and xor js and jno (bad) adc lea outsl outsl bndldx jno jae rex.B xchg (bad) xor lea (bad) xor movabs pop nop sub (bad) (bad) jne rex.XB or lock mov mov fisttpll scas (bad) movabs rex.RX nop enterq pushq pop adc push mov shl xchg (bad) mov xchg fdivp shrb rex.WRXB rex.WR (bad) adc out xchg pop mov mov cmp rex.WRX callq sbb xchg mov (bad) in jns rex.R or out add insb or jo rex.WRXB adc xor rex.WXB addr32 rex.WRX cmp cmpsl sbb movabs mov add mov xchg or testl rcr movabs sbb movabs cmpsl xchg pop (bad) and outsl push xchg xchg std cmp movsb scas pop cs sub rex.WX sub xchg movabs stos (bad) fsubrs push stc (bad) imul jne (bad) insl rorl or fwait cltd outsl jle mov adc test pushq (bad) fwait rex.WX mov (bad) fs (bad) movabs push xchg scas (bad) (bad) add test sahf mov push cmc frstor scas rex.RX rex.R xchg jp jmpq cmpsl std retq cld sahf leaveq cmp je sbb add movsb and mov mov (bad) in xlat (bad) insb fsub xchg movabs add pop cmp mov xchg movabs leaveq data16 cwtl (bad) xchg add vcvtps2pd push (bad) andl test add xchg add (bad) adc cwtl pop adc shl or setl in xor ss pushfq xchg (bad) xor movsl xchg pop mov loope adc mov pushfq mov cmp xchg xchg cli pop out xchg retq sub sbb ja jne xchg mov sahf xchg or mov negl movabs cmp mov and pushfq mov enterq js movabs sbb fcompl xor lret fdivs mov cmp xchg or add jmp rex.B ss mov cmp cmp loope xchg (bad) lods add or mov (bad) out rex.WRX xchg pop sub (bad) (bad) and pushfq rex.XB scas or xor cmp xchg push (bad) enterq xchg movsb (bad) push xchg pop int3 mov decl movabs mov mov ljmp (bad) fnsave mov sub mov rorb xchg pop adc jl test in subl test stos movabs (bad) int xchg test xchg mov (bad) mov (bad) negl and (bad) xchg jo (bad) callq sarl pushq pop add cmp (bad) (bad) mov popfq mov test adc sub not stc je (bad) xor roll imul imul mov cli or movsb sbb mov sub xorl (bad) mull jle add outsb xchg insb jo (bad) mov (bad) sbb shl jns ds mov lods pop gs roll (bad) adc lock xchg in pop xchg (bad) adc and (bad) movabs (bad) movabs jb xor shrl fincstp mov and and (bad) (bad) callq nop movabs std js xchg and rex.WRXB ja mov jle jae lods xchg and rex.XB cmp jle xor xor xchg xchg mov pop repz cs addr32 out pop (bad) mov idiv outsl mov adc (bad) or adc rex.WX (bad) cwtl (bad) pushq cmp xchg (bad) notl (bad) ds or cwtl insl ja and sub sahf test and lea jae sub push (bad) lea lods xchg mov jrcxz sub sub (bad) cli std cwtl lret callq push enterq xchg rex.X loopne rcll jae jp pop xor (bad) mov sub iret lods sub (bad) (bad) in (bad) stc cld jbe adc pop xchg xchg (bad) fs (bad) jl and xlat popfq jno xor xchg sbb stc flds (bad) rex.WR jbe int adc callq test shlb (bad) and jl rex.RB add lods enterq (bad) mov iret movabs jge enterq std sub sbb andl sbb pop jne roll int3 (bad) ja xor imul rex.WXB fs in xor pushq (bad) xor sub mov or mov sbb lock sub pop sti push jo rex.RXB sub cmp (bad) out (bad) rex.W push movslq (bad) loope mov (bad) mov movsl jno popfq jbe leaveq pop sub rex.WRB sub and mov orl adc add sahf pop pushq rex.W and pop xchg (bad) xchg out or sbb sub imul out mov pushfq (bad) out mov in scas mov jge movabs and (bad) (bad) adc data16 jle push cld lock and xor (bad) adc movl cmp cwtl mov xchg rex.WR xchg add cmp lretq cmpsl fstpl rex.B cltd sub push xor mov rcll rex.WX push cwtl shll push mov or jrcxz jle rex.RXB push outsl lods mov popfq cmp outsl adc or xchg pop stos jbe shlb cvtpi2ps jrcxz mov insb (bad) (bad) (bad) lock scas shlb rex movabs ss faddp (bad) (bad) in pop mov cmp xchg jmp mov outsb std rex.WX mov clc xor add push outsb xchg test stc in adc scas rex.RB cmp enterq cmc mov in push xchg jbe mov fdivr std orl lock ja (bad) xchg mov jbe fnstsw (bad) adc js shlb jp (bad) popfq stos adcl xchg xchg in cmc lret sarl (bad) rex.RB (bad) int cs (bad) pushq or or mov (bad) ss (bad) mov shr xchg lret xor fimull add hlt rex.B mul jrcxz notb pop pop xor movsl xchg std imul adc gs mov push lea (bad) rex.X nop sbb xchg xchg (bad) adc cwtl mov outsb cmpsl xor xchg rex.W fbstp push add xchg mov out divb popfq or sarl adc movabs movabs sbb (bad) lret push mov stos mov nop cmpsb xchg movabs addl rex.RXB mov push stos movabs xor (bad) scas lea push push push negb (bad) jle push outsl (bad) retq insl xchg mov xchg cmp ja in push notl orl fnsave data16 pop (bad) mov movsb xchg out xchg mov jno and fidivrl mov mov or jge sti outsl cwtl iret sbb xchg cmpsb fidivrl fistl imul js push idivb (bad) lods fnstcw icebp fstpl xchg sbb (bad) mov pushfq movabs xchg xchg bndldx add callq insl (bad) pop rex.WX push mov (bad) add fist in jb adc xchg (bad) adc repz or fdivrl xchg rex.W es jo pop addr32 mov hlt jmp xor ja outsb xchg xor xorl sub xchg add loopne not pushfq je sub sub pushfq mov xor xchg rex.B push data16 pop loop xchg lahf out xchg xchg cld (bad) (bad) adc fimull xchg cmpb mov (bad) jmp mov xchg loope xor pushfq rex.B roll pushfq imul fsubl (bad) (bad) mov cltd rex.WRB rex.R xor add sub mov mov jl int pop mov jnp in test sbb callq push (bad) mov xor add rex.RB ss mov (bad) (bad) scas test pop loope (bad) ss sbb adc movsl cmc adc or mov movabs out cmp gs (bad) test cwtl sar movabs pop xchg fidivrl out xchg stos jle adc rcrl icebp sbb sbb jl and cmp or movabs cmp lods test (bad) icebp jrcxz pop cmp cmc rex.XB lock mov movsb mov sbb popq jno (bad) xchg jns int rex.WB mov (bad) xlat (bad) (bad) scas xchg cs mov (bad) (bad) cwtl add sbb xchg insb cmp xchg xor hlt stos incb pop push push pop je xchg cli push movslq lock stos cmpsb cmp (bad) jnp xor lock xchg loope cmp pushq and pop jnp pop ljmp movslq (bad) fidivrl pushfq xchg mov rex.WX push rcl lret mov jmpq sub xor fs (bad) pop xchg xchg pushq mov test movsb mov (bad) rex.RB mov add jmp retq js callq int push cmp pavgb out (bad) cld pushfq loop cmc push out and xor jrcxz in push mov pushq (bad) lods xchg in flds pushq sti adc callq or mov pop out xchg sub mov rex.WRX jne movsb in and (bad) js xchg enterq (bad) test clc pop xchg (bad) scas jo (bad) mov jns push movl mov rex.WRXB mov test cmp fidivr insb cmpsb jb add xchg or cmp jge mov adc outsb mov sahf (bad) sbb xor cli imul jle pushfq (bad) pop (bad) jns mov fildl subb ss xchg sbb adc xchg addr32 or fbstp cmp (bad) xchg pop push sub subl sbb nop cld push or notl sub mov push adc xchg fdivrl jb cmc push add jle adc addr32 (bad) or fbld xchg retq rex.X jmpq notb rex.WXB mov (bad) rex.RX ss add frstor xchg add sbb (bad) cwtl push stos cmp popfq xlat mov (bad) ss sub xchg cmp jrcxz (bad) insb ja xchg fsubrp (bad) repnz xchg cltd scas repz mov sub loop xchg es fnstsw sbb rex.WRXB adc cltd pop adc movsb sub int3 movabs insl imul xchg ja push movabs xchg (bad) jle ja (bad) fnstcw mov and in cmp popfq movabs (bad) sar and xchg insl lahf sbb in (bad) jmp rex.WXB sbb pushq sti fwait insl adc je xchg (bad) stc mov sahf iret out xchg (bad) jne xchg jo nop fwait xor ja ss jnp cwtl mov rex.R xchg rex.WXB lret cmp xchg test clc sahf fxch mov stc addr32 add xchg mov shrl callq (bad) or movslq (bad) cmc iret xchg notl mov sti push xchg pushfq (bad) jne rex.WX xchg sbb cmc ja data16 fwait notl rcrb jrcxz (bad) and add movsl mov (bad) rex.WXB xchg cwtl jl (bad) movsl mov sub data16 ja adc xchg or rex.RXB cmp andl iret jb (bad) add in jbe or and rex.WX fistpll pop mov cwtl imul outsb (bad) repz movabs cmp int3 pop loope xchg sub roll repz popfq add pushq sub push (bad) push (bad) cmp sub mov flds jmpq jp insl rcrb rex.RXB rex.W ss data16 retq or rex.WXB scas (bad) in rex.B loopne mov mov ja add mov movabs xor (bad) in cmp mov (bad) or rex.WRXB (bad) mov test jno movsb rex.B sbb movabs or xchg jns jnp rex.WX movabs movslq (bad) jne pop mov (bad) rex.WRXB repnz and (bad) mov in icebp xchg pop (bad) (bad) leaveq mov mov test or lods cmpsb mov in lods xchg sub mov and jo add cld jge in (bad) ja movsb scas addr32 iret (bad) xchg lock mov pop xchg (bad) and int3 xlat fwait pop sbb jg roll adc cli (bad) sar lock (bad) fwait xchg (bad) sub adc icebp iret fisubr int mov mov xor jmpq imul xlat pop or (bad) cmpsb test lahf (bad) leaveq rex.RXB rex.WRB sahf xchg sbb repnz (bad) rex.R jno gs ja jle mov sub movabs imul jge pop adc fwait pop adc rex.RXB cmpsb insb imul xchg jnp (bad) pop jne cmp jl imul mov rex.RXB rex.WRX push add pushq add int ffree rex.WXB xchg (bad) (bad) jnp icebp test push xor xor xchg mov jne jnp pop out in sbb sahf xchg sbb jle fs adc xor out or loope ja push nop (bad) movabs mov jmp jbe fsubs xchg sbb xchg (bad) jbe (bad) (bad) pushq out add push ja xor fidivl (bad) cmpsb mov (bad) lods insl (bad) popfq test sahf pop xlat scas adc jb add mov pop xchg sbb addr32 rex icebp mov enterq scas xor fsubrl lahf (bad) notl insl rex.X lea mov vpmacsdql pushq push pop cmp push or retq (bad) xchg in stos (bad) clc (bad) xchg rex.RX hlt xchg shrb nop (bad) mov pop mov mov xchg mov rclb jle add lahf popfq scas sbb mov pop jo xchg callq (bad) rex.WRXB outsl or jo in xchg and sbb insl repz leaveq out in in rex.RX (bad) xchg icebp push sbb jbe (bad) adcb imul in adc mov jns cwtl (bad) cltd (bad) test rex.WRXB mov sti ss rex.RX fwait loop lock mov sub push in (bad) movabs xchg rex.WB stos (bad) andl movabs or jmpq push leaveq mov cwtl mov out add rex.R xchg (bad) cmp push icebp fisttpll xchg pop sahf andl xchg mov cwtl add cld rcr and adc outsb out callq fwait xor movabs fwait xchg retq cmpsb and add je outsb mov mov repz addb pop xchg sahf movsb fidivl in adc nop (bad) insl mov stos xchg mov out jae in pop leaveq mov fsub mov jg xchg mov in adc mov data16 cwtl rolb enterq in xchg not data16 sub in sahf adc (bad) ja,pt rcrb (bad) rex.WRXB stos outsb sub xchg lret xlat test fstpl xor pop push sbb scas mov xchg icebp mov cmpsl push mov (bad) pop int3 idivl (bad) cmp pop test cwtl movslq pop (bad) sarb addr32 rex.X lahf out fwait xchg movabs int3 faddl movabs ss mov push xchg mov xor fcoms ja cmpsl fdivrp mov or (bad) xchg pushfq out mov jne lock xchg adc add scas (bad) movabs pop xchg hlt xchg jrcxz pop test push xchg xor popfq lahf (bad) flds adc scas sti lods xchg shrb pop push push (bad) xchg xchg in sub out sbb in sahf adc (bad) imul repnz clc insl mov mov insb sahf (bad) lods jbe mov movabs jge push jne or cmpsb or mov mov (bad) mov outsb push pushq push idivl ja sub rex.WB pop loop (bad) and rcrl (bad) out adc out mov scas xchg rex.WRXB pop xchg xchg popfq jg and jge js adcl ss (bad) and and cmp pop int (bad) repnz xor xchg mov cwtl mov mov pop add fdivrs cmpl xchg cmc andl movslq outsl push rex.RXB rex.RX retq adc mov add adc jp jno mov mov xor or xchg adc decl outsb xlat (bad) mov sahf pushq jmpq ja lods xchg in lods ficompl rex.B rex.WX jl sub (bad) jle (bad) xor sbb ja (bad) fcmovbe test xchg mov adc jmp jp retq mov push pushfq add fwait xor div or push lods mov sub rorl mov sbb mov retq xchg loopne rcll or or (bad) cltd cld xor lods or and in cld ds or clc movsb adc retq (bad) add pop cs mov movslq iret insl outsl (bad) xlat sarl data16 pop xlat in push xlat (bad) (bad) and nop repnz mov xchg xor cmp notb nop (bad) mov mov pop pop ja es add movdqa testl or jmpq rex.WXB (bad) xor rex.B cs xor imul sahf rex.WX rex.WRX js fs pop pop cltd inc int and xor mov (bad) mov sti icebp movsl outsl sbb fldcw data16 (bad) rex pop out (bad) movabs adc xor jg outsl xchg stos adc sbb jbe int or jb pop pop mov xchg rex.WRB mov jge movslq mov jrcxz jnp pop mov (bad) rex.RX (bad) movabs (bad) (bad) cwtd adc and insl pop (bad) mov and rcll mov push sbbl rex.R rex sbb in and in rex.WXB (bad) (bad) shr push movabs pop mov sub add (bad) push jne (bad) lahf sbb movabs sbb stos movslq xor xchg subl rex.R (bad) (bad) testb movabs xchg and js scas xchg pop pushfq enterq xor movabs nop (bad) mov push mov mov out notl shll sbb movslq mov mulb adc (bad) rex.W xchg or stos stos add fild or xchg retq jb insb and rex.R sti sahf cli xchg pop adc mov sbb (bad) mov loopne mov adc cmp sbb jno xchg rex.R mov rex.WRX movabs hlt mov jne testb push mov (bad) jnp lahf fwait test jp pop cltd xchg (bad) callq lret rex.WRXB movabs rcrl pop xchg push rex.RXB cmpsl movabs movsb mov mov jp ja (bad) xor (bad) test (bad) rorb add lods pushfq gs mov xor xchg xlat xchg repz (bad) loope xchg add rex.W (bad) adc rex.WXB mov jge movsb pop (bad) or xchg adc (bad) sbb (bad) jrcxz scas cmp xchg and int3 adc xchg (bad) jrcxz std (bad) cmp adc out scas mov (bad) fnstsw pop test callq mov xchg rex.WR hlt in adc (bad) callq imul fdivrl xchg rex.WXB outsb add pop jne xchg (bad) mov lods jbe movabs fidiv xchg notb jmpq mov rex.WXB pushq jae push out fstpt clc pop xor int3 movsl insb xor int cmpsl mov lret push sub pop xor cmp pop push jmp add pushq sarb stos in xchg (bad) adc push js rex.X rex.X ja enterq negb mov push push movslq mov (bad) out xor int mov (bad) insb nop loopne mov gs rex.WX pop xchg rex.WXB cmp rex.WXB (bad) push adc retq (bad) (bad) xchg lods mov sbb (bad) xor (bad) repnz scas add push lret mov rex.RXB xchg (bad) lods pop cli adc test and xchg (bad) xor out pop rex.RB lea xchg (bad) sbb (bad) jbe (bad) xchg xchg hlt gs pushfq adc pop or xchg movsl push mov (bad) gs (bad) stos jae rex.W pcmpgtb (bad) (bad) (bad) xchg (bad) imul pop add divl stc jrcxz stc movabs mov stos mov fwait int adc rex.RX or test rex.WXB xor hlt movslq divl jbe pop sbb add jmp mov (bad) out xor mov imul fiadd scas je fldl in xchg (bad) pushq retq jrcxz js notl popfq xchg and std jl sahf sti jne adc fwait cltd mov imul jo and (bad) or pushfq pop mov (bad) jo xchg faddl cmc insl rex.WXB mov add jae jle jo mov mov iret movsl in shll (bad) addr32 or sub xlat jbe adc cmpsb pop (bad) (bad) loopne mov notl push jne xor xor (bad) mov cmp mov xabort xorb cmpsb sbb es fwait (bad) stos cli (bad) sahf imul shll (bad) xchg popfq mov cmpsb movabs (bad) pushq xchg sbb xchg add jmp xchg cmp add push fadd loop rcrl rolb (bad) mov rex.RX in outsl loop xchg ds (bad) add (bad) sbb xor and cs mov rex.RXB xchg movabs iret movslq mov insl orb cmp xchg fidivr movsb in sbb xchg mov sti sbb addr32 lahf mov xor fstp fiadd xchg insb js xlat popfq sub xor callq jmp (bad) or leaveq (bad) es (bad) jmpq xchg mov and scas cmp nop (bad) rex.X fsubrl clc (bad) jo jbe pop or imul in mov ss xchg mov (bad) cs mov test jl es add sub mov (bad) rex.R xchg js fsubrs pushfq repz sub and xor (bad) pushfq lea rex.X cli loope xor sbb (bad) sub pop retq and xchg add rex.R rcr retq mov adc push xor jb sbb in retq cmpsb pushfq faddl out rex.RX pushq pop xchg sbb lock movsb xchg xchg mov xchg in xchg out (bad) out (bad) test xchg add adc fwait push mov movabs sarb gs out mov (bad) and adc jnp jrcxz sbb lock adc xchg hlt and or or rex.RB xchg sarl (bad) cmpsb (bad) xor cwtl enterq xchg add (bad) cmp out test (bad) pop fs lret sahf sarl fsubrs scas xchg rcrb sbb xchg es fsub lods (bad) callq jrcxz lahf or xchg xchg add (bad) loope cwtl notb or shr in (bad) (bad) xchg xchg (bad) (bad) cmpsl add adcl hlt addl (bad) rex.WB movabs rex.WRXB xor push rcrb lret xchg xchg ficomp xchg mov push fiaddl rcll mov (bad) insl cmpsl fstpt xor xchg sub sbb out fwait cmp xor fwait (bad) xchg rex.WXB add ds imull xor xor lods jmpq fs (bad) jg adc movabs enterq jne callq sub xchg rex.RXB mov out pushfq jl (bad) push cmc xchg rex.RXB jmp es cmp jo and jae leaveq in cmp test adc add cmp (bad) push data16 rex.R movabs iret xlat and adc xchg mov rclb jle (bad) movabs scas rex.XB mov (bad) test (bad) xchg and jbe (bad) (bad) pop xchg fs push (bad) psubq loopne and and test adc xchg adc out rcll xor pop sti cwtl cmpsl push sub jl mov sub rex andb jae cld imul or xlat rex.WRB xorl fucom jbe test rex.W rex.R cwtl rex.WXB cld or sbb (bad) test pushq pop push add rex.W jrcxz and stc jle mov rex.WX adc jo mov adc out in adc xchg (bad) (bad) movslq pop jge (bad) fs cwtl nop adc (bad) (bad) mov add (bad) pop cltd (bad) jbe pushq rex.WXB sbb (bad) pushq lret fwait adc (bad) pop sbb in (bad) int3 (bad) and sti scas (bad) mov adc and test movsl (bad) fwait icebp push rex.WXB mov movabs movslq sbb rcr imul xlat or (bad) mov rol std imul (bad) xchg (bad) lret jns jo retq data16 or in cltd mov jrcxz rex.XB addr32 std pushfq faddp (bad) or (bad) pushfq scas fstps gs rex.WRXB nop out data16 xor adc enterq sahf jb adc mov jge movslq (bad) (bad) pushfq mov and push std xchg lock cmp push ss rex or popfq xchg test mov rclb xor iret lea add push mov sarb pop in pop push and movabs (bad) mov push mov test (bad) sbb test add rex.R jno out cmc xchg (bad) cmp push mulb xchg imul es xchg rex.RX (bad) sarb sub rex.W clc (bad) xchg mov sbb xor rclb cmp shlb (bad) (bad) xor jnp jrcxz ljmp test push (bad) jrcxz fstpt xchg mov pop jb rex.WXB sbb (bad) cmp xchg cmc xor retq (bad) movsl mov xchg mov gs in xor jl xchg cltd xchg xchg scas mov movsb xchg jb sub or xchg mov xor mov cmp rex.W scas mov out xchg fist or xchg sub xchg and jno rcrl sub mov or ja mov adc mov mov in rex.WR xchg or scas in scas adc mov add movlps (bad) addr32 popfq xchg icebp or lret sub popq xchg add jmpq xchg lods ror outsl jb ja sub (bad) xchg out or xchg cmpsb or mov mov pop data16 mov (bad) mov and rorl sub xchg sti mov xor jg leaveq movabs cmpsl cmpsl data16 and cwtl (bad) divl out mov adc xor adc bswap mov leaveq cs lock (bad) rex.WB (bad) sbb out test (bad) rex.RX pop (bad) (bad) loopne mov add (bad) mov jnp (bad) jmpq insb (bad) (bad) (bad) jnp (bad) negb pushfq and fisttpl (bad) mov cmp hlt jbe push mov and adc cmp shlb (bad) pop adc movabs rex.WRB push adc popfq (bad) sbb or (bad) xor scas xchg (bad) xor iret hlt xlat add (bad) xchg pop rorl xchg and mov sbb (bad) jno callq adc xchg cmp insl sbb rex.RXB (bad) movslq jb rclb xchg in and or (bad) and or sti test jb insl leaveq rex.WRXB pop xchg rex.XB (bad) popfq adc out fisttpl icebp jae mov jno movslq adc push lods popfq int3 sub (bad) push test scas ss sti or (bad) mov lock out push insl xorl push cwtl in cmp test add and cld (bad) in fcompl jge mov cmp adc out loope in mov movslq out rex.WRX rex.WRXB mov pushq cld jge int3 (bad) add movsb (bad) movabs out mov lret (bad) or test sbbl jp wrmsr xlat lods icebp add subl sahf mov adc popfq jmp jp loopne leaveq imul and cltd (bad) add jmp pop jne mov push in (bad) push retq push cld cmc xlat in or pop (bad) nop stos gs cmp pushq scas mov (bad) xchg rex.WRXB (bad) xchg mov or pop jle sarl jg xchg pop lahf ficomp scas xchg adc xor movslq lret sahf adc (bad) xchg rex int popfq and jmpq adc rex.XB xchg mov adc (bad) movsl jnp cmpsl loope sub data16 mov and pop rex.WRXB xchg (bad) (bad) pop jrcxz jl cli lea (bad) cwtl mov jl mov (bad) pop pop (bad) (bad) clc movabs mov xor rex.XB cmp outsl jmp (bad) xor stos lods mov sub negl mov sbb ftst iret ds and lock mov movsb mov (bad) pop int3 rex.WRB loop jo xchg (bad) sbb enterq xlat or jg (bad) (bad) fs xchg por ds jmp jbe sbb (bad) adc std adcw in pop rex.WX fldenv pop mov loopne rex.W pop rex.WRB xor ja (bad) jbe mov push sbb push pushq cmp shlb add and outsl sbb adc rex.WR jg lods (bad) (bad) (bad) mov lret lahf mov sub cltd sub scas out mov (bad) (bad) pop sub or (bad) mov stc pop xchg xchg adc jbe adc je jl (bad) sahf icebp test sbb lahf mov hlt pop faddl je or mov jrcxz mov or movsl int3 or sti lahf std lret pushq jno fs insl or mov fcompl add pop cmc imul (bad) push out jp xor xchg clc insb (bad) cwtl fisubr cmc lea movabs movsl cmpsb push (bad) (bad) sub rex.WX cmp xchg add test rex.RB mov xchg rclb jns jo rex xlat pop mov sbb in rex.WRXB rex.WR (bad) (bad) (bad) push xchg add (bad) xchg xchg insl (bad) (bad) fisttp (bad) (bad) jne loopne emms loop xchg push adc pop sbb insl mov or sahf scas sbb cmc je (bad) adcb out and xor xchg sbb jo cld fwait js sub mov shl and xchg or sub addr32 (bad) int3 mov sbb lret jmp pop (bad) jnp fnstsw and (bad) shr scas rex.WX jae testl movabs (bad) (bad) jp mov (bad) add push push ja (bad) cmpsl popfq repz adc (bad) xor loopne cmc sbb or ss movslq jae cmp (bad) (bad) fidivl cmp xor negl rex.B xor sub fistpll xchg icebp sbb pop mov ss cmpsl mov test clc sub mov rex.WXB push imull retq push hlt adc or xchg mov rex.WB repz rex.RB add jl cltd xchg mov movabs out mov popfq xchg movsb (bad) clc sbb rclb add retq gs cmp sub std (bad) sub xchg rex.R rex.WX in stos mov popfq movabs (bad) xchg jg (bad) idivb pop (bad) or xor (bad) or (bad) (bad) ficoml sub mov pop add mov imul pushfq mov (bad) push add sub xchg sbb jbe (bad) rex.WRX fildll xchg out (bad) add rcrb movabs push sbb (bad) lahf (bad) mov int3 hlt pop (bad) enterq sahf addr32 movabs jno cmp jg (bad) mov rex.WRB insl add sahf (bad) repnz (bad) movabs jno rol and in sbb rex.WXB xchg mov jne jns rcrl test push xchg in ss gs and out xor sub mov hlt (bad) xchg rcr popq out (bad) or mov mov (bad) (bad) add sahf popfq gs mov stos ja and mov pop xchg data16 (bad) movabs (bad) ja ss (bad) push ds cmp callq subl (bad) and rex.X add pop xor in sbb rcrl ja rex.RXB (bad) xchg add loopne retq xchg push mov cmpl fstpl xor mov movslq mov negl outsl shld pop rcll (bad) push std add mov rcrb rep cwtl vandpd in and movabs (bad) push cltd cs repnz movabs xor push je nop sti int (bad) ja and sbb xchg (bad) xchg xchg jle insl mov (bad) pop callq cmp cwtl pushq mul pop mov sbbb movabs pop sbb add rex.B test (bad) push mov (bad) xchg cmp sub or test xchg pop mov and mov mov sbb ficoml sti mov (bad) xor shrb cmpsl fdivr movabs icebp retq sbb xchg js fwait jl sahf lods or outsl jg mov movabs and rex.WB or rex.WXB (bad) (bad) andl add pop loop out movslq outsb and mov (bad) (bad) rex push stos pop (bad) rex.XB rex.RXB fbld pushq jmpq scas mov sbb mov sbb cli lahf xor lahf jrcxz push sahf mov xchg in icebp scas sti rex.WRX xorl mov (bad) xchg in ja stos xlat cmp pushfq pushfq xlat (bad) pop or stos xchg push sub test jle jle xchg clts cmp cmpsb push rex.WRB cmp sub or push fstps scas xchg xor adc fs flds lock (bad) sarb notl xchg xchg mov mov jo jmpq scas iret rex.WRX cwtl xchg icebp fbstp out rex.WR movsl int3 rex.W sahf fsubr lock loopne (bad) mov sarl cmpsb mov clc rex.WXB jle es lahf xchg rex.R sub test pushq jno pop add rex.WRB add jp mov (bad) mov fiadd (bad) or mov (bad) iret callq scas retq jo loopne jl addb cmp xchg rex.X negl gs jmp scas popfq or mov xchg (bad) xchg jns rex.WRX fldlg2 jmp mov sub (bad) mov rcr push jge xchg xchg sahf movsl mov pushq mov pop jg test (bad) lock enterq nop (bad) sti sbb or rex.RX xchg xchg add (bad) (bad) rex.WRB (bad) xor fcmovb jo movabs jno mov test (bad) add pop jne and mov jnp xchg fisubl lret push add mov xchg (bad) pushq sti pop or (bad) movslq insb lods pop xchg adc outsl cwtl divb (bad) adc jnp rex.RX cwtl push or xor xchg fidivl je sub cld rex.RX movabs mov cs jmp (bad) popfq pop leaveq fsts cld push mov fs jae in xchg sub (bad) or xchg rcrl rex.WXB out mov xor mov mov adc pushq cmc xchg cmp pop sub xchg mov cwtl stc mov (bad) (bad) insl jnp ja sbb sub ss jae rex.WRXB enterq (bad) (bad) or test (bad) cmp jns xchg xchg rex.WRX shlb pop sahf xchg (bad) outsb sub rex.RX in xchg pushq rex.B addr32 (bad) (bad) (bad) xchg sub sub xor fdivs mov sbb (bad) fisttpl movabs lahf roll popfq push mov mov jg xor out icebp and pushq or lret cli sahf leaveq addr32 sbb stos movabs movsl movabs sbb mov pushfq (bad) mov ss (bad) fsubl mov xchg adc jo xor fcoml sbb decl movsb pop push in (bad) mov (bad) adc jge jrcxz xchg cltd (bad) rex.WX (bad) cmp retq xchg hlt sbb xor in rex.WRB shlb pop sbb (bad) lret (bad) lahf sub cmp adc (bad) movabs or (bad) mov xor ja pushfq mov rex.WX and xchg outsl jge jbe,pn in movabs push fidivr xchg xor sub xchg movabs movsl (bad) movsb and mov pop xchg fdivrs es push add xor out test int mov (bad) add fwait in xor xchg xor mov xchg (bad) push sub test (bad) sti (bad) notb (bad) rclb rex.WRXB lock (bad) divb jbe imul jb add insl sub lahf loopne cwtl (bad) sahf je movsb callq imul rex.RX jle push imul or mov movabs sbbl and insl xor movabs mov fldl adc jp mov xchg pop mov rex.R mov sub sarb pop rex.WRXB lahf pop adc scas add popfq xchg and jnp adc imul lret jle adc popfq (bad) loopne mov cmp out (bad) cld cmp (bad) pop pop rex.B lahf jae xor rcrl mov sbb out mov sbbb (bad) fs insb frstor rex.WRXB add (bad) nop sub mov lcall pop add mov jge movslq sub (bad) (bad) add subl in push shl and mov mov movslq add shl mov fld jg (bad) repnz shrb (bad) (bad) mov ds jae mov add (bad) mov sub imul mov cmp clc mov sub mov test pop xchg add adc pop nop push jbe mov mov adc std (bad) cmp popq jne sub cwtl jg (bad) sar (bad) in std jae jb add sub xchg movslq mov ja (bad) or jmp (bad) sub fsubrs (bad) popfq ficom mov movslq sub jmpq repnz imul rex.WRXB fwait rorl mov (bad) nop and (bad) sahf push rex.WX mov push (bad) sbb mov addl adc sub and (bad) push adc movsb push (bad) xlat movsb fcoml jg js test sub pop fstl (bad) sarl sahf rex.WB xor out mov test fs ss (bad) movsb push movabs icebp rex.R (bad) (bad) cmpsb cwtl imul and add xchg rex.WX push jrcxz xor andb adc test xchg mov add cwtl insl xchg inc jmp imul sti sub out in fwait sub rex.WRXB addr32 xchg fcompl adcl (bad) stos mov sahf es jae cmpsb xchg mov out cwtl xchg xchg rex.WX xchg out outsl or movl cmp out int xor pop lret cmpsb xlat fstpt movslq in (bad) jg int3 fisubl and (bad) repnz jmp cwtl (bad) (bad) repz nop jg imul mov (bad) not cmpsl or sbb fs (bad) xchg (bad) int3 test xchg (bad) (bad) mov sti add (bad) cmp (bad) rex.WRB iret fcompl xchg ss rcrb sti xlat and scas movabs xchg rex.WB scas push cmp adcb adc hlt sbbq mov cld mov (bad) (bad) jle loope pop mov sub shrb fsts and pop pop push (bad) jl (bad) (bad) sub pop and push (bad) rex.WRX cmpsl (bad) mov sahf (bad) in (bad) movabs (bad) adc fiadd (bad) movabs loopne jg xchg mov and lods (bad) mov or repz seta in mov js cmp addr32 loopne fmull out callq jae xchg pop ss push push xor outsb stos movabs xchg jge lods push sub pop fadds ds sbb loop cmpsl (bad) repnz iret pop xchg movabs icebp fidivr jrcxz cmpsb (bad) lahf (bad) loopne sbb pop (bad) add or mov jp shlb imul mov or test ja jg pop pushfq pushfq popfq xor out mov xor (bad) or lahf cmpsb cmp mov pop sbb xchg lods (bad) push sub (bad) mov (bad) add (bad) mov pushfq test mov xchg (bad) int3 push loop xchg (bad) and mov fcoml push (bad) xchg hlt xchg pop sbb lods xchg and push callq fcoml (bad) cld movsl fstpl imul rex.WB push out xchg cmpsb sti rex.WRX cltd in (bad) fdivs xchg movabs xlat adcb xlat fsub mov cmp xor out (bad) jle fcoml (bad) rex.RB mov lods idiv xchg outsb cmp cmpsb (bad) pop pushfq out mov mov xchg xlat jbe jl xor adc cmp lea sub pop (bad) xor (bad) test jo movslq loop rex.WRB imul rex rex.WR push adc (bad) outsb in outsl jl or add add cmpsl pop addr32 add sbb faddl scas add movabs jp add jg cltd scas xchg (bad) or cmpsl xchg lods cltd sub jge (bad) sbb xchg jno xchg fimull jp and movsb and outsl xchg xchg (bad) out sysenter pop outsb sahf (bad) pop (bad) out (bad) pushq pop fsubp xor xlat mov cmp (bad) in xchg xchg rex.WXB (bad) jp (bad) mov out callq fisttp add sub adc jp popfq mov add rex.RXB xor imul (bad) jbe cld pushfq getsec test or pop shlb incl pop cwtl iret cmp retq movslq (bad) cltd (bad) jae adc stos (bad) rex.WRXB rcrl xadd fidivl repz (bad) stos xchg sbb mov push push pushq mov mov xchg cmp rex.WB rex.WRXB (bad) or (bad) adc ja repz sahf and scas push callq out rex.RB stc xchg (bad) jb add shll pushq push rex mov idivl sub jnp (bad) cmpsl movabs addr32 rex.RB out (bad) cmp (bad) out clc lods or jl (bad) hlt insl outsb mov rcll push (bad) xchg rclb sahf rex.RXB adc fsts repz lret adc jmp out xchg test add (bad) sahf sub mov xor and add sbb rex.WRXB sub mov (bad) insb lock stos sti movabs jmp mov jl xchg mov cmp jnp (bad) loope in lods in jrcxz pushfq stc and cmp nop adc out add (bad) jbe push cmp lock push (bad) push jg (bad) es xchg rolb rex.RX (bad) fnstenv add jae (bad) test xlat movsl pop imul jle (bad) (bad) rex pushq jmpq mov jb std jns xor repz (bad) fidivr (bad) mull movabs (bad) add incb loopne popfq rex.WB rex.RXB push (bad) rex.W test popfq adc cmpsl pushq test jne rorb pop (bad) xchg (bad) (bad) callq ds cmc es roll lods cmp pop adc mov xor movslq orb lea (bad) loope (bad) (bad) cmpsb jae (bad) rex.WRX movabs test movabs (bad) mov cmp out movabs repz mov adc xlat popfq stc jrcxz push (bad) jb and in (bad) and (bad) xchg adc or outsb jo lahf loope mov jnp loopne jmp rex.RX (bad) rex fsub mov adcl std and (bad) mov xchg mov pop loopne rex.X pop cld pop and insb movabs and shll or lods gs adc outsb or mov loopne,pn pop mov sub fsubs sub sti fcoms and data16 js test cwtl push adc fs pop or jle (bad) mov adc adc xor fnstsw xchg rex.RB movslq test adc or xchg scas or adc (bad) push mov pushq push (bad) push movabs (bad) pushq movl mov (bad) mov out insl sub stc sarl lret sbb sti adc movsb addr32 push jge rex.R stos (bad) (bad) movsl fs int lahf (bad) iret or data16 xor (bad) insl ficomp push add (bad) mov jns js movabs jg xchg cmp pop nop mov rcl pushq rcrb and adc cmpsw jl rex (bad) incl mov mov out shll mov jbe mov retq ror and pop mov jnp (bad) enterq lret cmp jno cwtl (bad) jnp adc xchg fucom xchg lock mov lahf mov (bad) sbb lret enterq sbb xchg adc icebp sarb xchg (bad) (bad) xchg xchg push rcr imul gs stos cmpsb insl ds test repz mov (bad) (bad) cmovs gs (bad) cmpsl retq ja loopne popfq (bad) fs xchg (bad) or (bad) repz xchg jbe mov jns lahf (bad) mov loop xor xchg adc je jo pop lock fnstcw in xchg pop iret push jb rex.X (bad) imul (bad) out mov movsb outsl (bad) insl or xchg jb pop (bad) pop add (bad) xchg pop (bad) (bad) loop movabs div (bad) ja push or xchg fsub sbb jle,pn push jne jnp mov rex subb ja xchg and clc (bad) xchg xlat lahf rex.RX xchg xor pop (bad) push jno (bad) rolb adc popfq iret repnz (bad) xchg incb (bad) lret notl pushq hlt xchg js pop add callq test cmp jb cmp cmp cld movsb jrcxz mov movsb scas adc push xchg or ja test vpackuswb xlat sahf jmp fcoms (bad) jmpq jrcxz xor push cmovnp xchg rex.WX data16 jmp xor xchg nop addl cs (bad) sub rex.RXB jp ljmp jbe callq add push or ds stc xchg mov scas lret lock lods and cld xchg xchg std scas mov rex.WRX fmuls xchg xor mov cwtl (bad) ja sub callq xor cwtl lea jns decb rex.WXB rex.RB cmp rex.WRXB (bad) pop fisttpll sahf es mulb xchg (bad) or xchg sbb leaveq (bad) pop xchg lret cmpsb rex.WRB xchg movabs and pop or iret (bad) rex.RX fnop loope out xchg negl rex.RXB rex.XB xchg (bad) add xchg fs sbb lock popfq (bad) hlt xor xchg rex.WR push jnp imul push ja or cltd cmpsb jrcxz rclb (bad) push cmp mov in xchg imul jo popfq loope fs (bad) pop cmp movabs fwait outsb rex.R (bad) fcoms mov cmp xchg (bad) shrb cmpsl int3 adc xchg (bad) repnz rex (bad) mov push shlb movslq jb cmp add stos fmul cmp pop js (bad) (bad) mov (bad) pushfq (bad) pop sub xchg pop xchg mov rex.WRX insl or xchg (bad) rex.X mov rol mov jg cmp pop xchg jge push je xchg out (bad) mov and and movabs (bad) js sub push fwait xchg sbb xchg xchg lret pop pushq jns rex.XB (bad) or cs sub sub (bad) and scas push imul idivb sub jbe pop fstpt xor (bad) jbe xchg adcl jg lret scas (bad) jno xchg test (bad) scas mov loopne pushfq sti pop xchg scas sub stos jg leaveq (bad) (bad) popfq and cli rex.R rex.RXB fcoml movabs sbb (bad) mov rex.WRXB sub xchg rcll scas push sti js jae or push (bad) fwait mov lock cmpsb subb ja xchg rex.WB push jp je sbb xchg decl cmp add pop sbbl pop retq enterq adc imul mov (bad) rex.WB xlat callq stos out adcl sahf jb mov mov rex.B sbb xchg jne or test movabs mov int3 movslq (bad) and and (bad) jle jnp hlt xchg mov or jrcxz repnz out (bad) (bad) xor mov movsl jge fildl scas (bad) or (bad) adc popfq (bad) (bad) pop cld gs (bad) rex.WRXB push nop xor or nop mov xchg je rex.WRB fcoml xor mov xor jno int3 movabs pop pushq popfq xor mov data16 popfq int repz push enterq cli mov (bad) pushfq xchg or cmpl push repnz rolb xchg add cmpsl mov rex.X iret pop cmpsb pop ss nop cmpsl (bad) mov ja jg mov lock xchg outsl sbbl ja xchg loop rorl xchg std rex.WRXB mov outsb (bad) stos lahf xchg testl xchg jmpq rex.B es (bad) xchg xchg mov push rex.WRXB lahf lea mov xchg rorl add (bad) cs in or sbb test shrl and lahf xchg push fisttpll adc stos (bad) lret in negb lret rex.R xchg mov rex.WRXB mov leaveq fsubp jae cli mov jo sahf mov rorb or rex.WRXB cmp mov movabs lock jbe cmp loop xor push (bad) in rex.WR mov cltd or scas stos movabs jne rolb out (bad) loop sbb mov (bad) pushq jo mov movabs (bad) insl mov rex.XB sbb es jl mov ss mov (bad) jbe movsb (bad) out pop jg xchg rex.RB rex.WRX rex.WR insb mov test xchg cmp push xchg mov pop xchg shl (bad) cmp pushfq (bad) movabs rex.WB xchg fucomip fsubr jbe stc cs loopne int rex.RX (bad) js xchg (bad) js shlb mov xchg in in add xchg (bad) or outsl movabs xchg (bad) xor (bad) sarb lock mov lret mov (bad) stc fs cltd mov ficom jl lods xchg mov (bad) sarb xchg outsl insl cmpsl out rex.WRB adcb (bad) push mov pop push ja xchg mov jmpq rex.WRXB xorl add ss not fcmovne pop and (bad) pop or push add mov movsb out insb (bad) jb xchg pop movabs (bad) sub fmuls mov (bad) imul and leaveq (bad) popfq xlat cmp rex.RB pushq and mov loopne in pushq sbb xlat mov lret rex.X jrcxz ja adc imul or pop jmpq je jp mov mov mov mov add jl (bad) iret and xchg ds push jne xchg (bad) mov cmc cmp pushq rex.WX jmp gs addr32 in hlt lods push xor xchg mov add xchg jl mov mov rex.X cmpsl test cmpsb pop sub xchg ds sbb and xchg push cs adc pop sub (bad) insb or imul rex.WRXB sti mov (bad) int3 lret stos pop add or test cld lea sbb cs scas decl (bad) rex.WX cmp outsb rex.RXB push sbb movabs iret out data16 jne std cmpsb push lea xlat fnsave mov outsb adc retq pop retq pop jmpq adc pushfq xchg sbb mov sbb xchg cmp stos cmpsb xorl movabs scas push pop rex.RXB push xchg xor mov cmpsb rex.WR cld mov xchg incl ss (bad) gs lods rex.WX pushfq (bad) movabs cs scas xchg adcl (bad) cltd enterq fmull push in sbb cmp rex fwait adc jmp out (bad) mov pushfq mov callq and mov test callq cmpsl retq test mov (bad) sti xchg pushq push mov in cmp xor push mov (bad) mov jbe subb rex.WB repz clc or insb rcrb cmp loop sahf or loopel rex.XB rex.RXB rex.XB popfq pop popfq pop lret sbb ficom ja mov (bad) lret fs int adc mov rex.WRX cli stos (bad) stos add fmull xchg movsb movsl mov push test xchg cmp push retq pop gs push movsb sbb and or mov jnp gs (bad) callq rorb pop xchg stos add int3 fimull xchg xchg xor insb xor xchg test xor cmp xchg xor jp xchg add addr32 mov cmp jno (bad) pop adc sahf outsb lret jge and movabs in mov adc (bad) rex.RX rex.WX rex.R insb and outsl mov sbbl in adc and pop xchg xchg enterq int3 fsubrs rex.WR mov mov cltd (bad) adc push mov pop repnz (bad) push xchg stos rex.WXB stc fwait (bad) xor rex.RX notl xchg clc xorl movslq sub callq rex.RB sub (bad) xchg pop rex.WRB jns mov pushfq loope pop popfq jge addr32 out (bad) pushfq cmc mov (bad) pushq loope movabs sbb ja mov pushfq sub (bad) push movabs push fsub and jno test jo popfq (bad) add or (bad) or ja sub popfq (bad) xchg mov addr32 adc push mov scas cmp sub mov sub (bad) xchg mov mov xor nop pushq rex.WX test data16 out or pop jbe shrl rex.WR (bad) clc rex.XB jo (bad) (bad) xchg cmpsl in mov gs (bad) xchg jo pop adc ja xor or data16 and movslq cmpsl push iret add pushq (bad) jmp data16 (bad) jb rex.WR mov jg or jbe lods xor rex.X or pop xchg jbe and jns (bad) adc in (bad) rex.WRX rex.WRB (bad) rex.RXB sar jo test in int3 xor mov imul test nop (bad) out (bad) push jg sub (bad) jb (bad) cmp outsl xlat (bad) (bad) adc rex.WRB sbb jns (bad) push pushq stos jnp mov jge outsl push jb mov out nop mov test jns mov lret sti (bad) mov orb sub (bad) jno rex.WRXB pop cli (bad) xchg pop fwait or rex.XB (bad) addl and loopne sub and (bad) sbbl jg add out xchg cmpb rex.XB rcll rex.WR pop mov (bad) mov sub stos (bad) je nop adc add shrb mov rex.WR jge sarb rex.WRB imul sub rex.RXB xchg cmp imul (bad) (bad) pushq jmp stc es (bad) popq cli xchg jmp mov loopne add rex.WXB rex.WR stc jne adc (bad) xchg jo stos rex.RB rex.RXB adc (bad) (bad) push xchg xchg and jp rex.X scas add jne sbb rex.WRXB rex.WX or in (bad) lods movabs mov jnp (bad) xchg pop (bad) sti (bad) stos mov mov movabs (bad) lahf pop cwtl sbb adc jno pushfq jge,pt (bad) add (bad) cmp sbbb sub add fstps (bad) mov sbb cmc mov fld test xchg sahf jnp cs movsl (bad) popfq push (bad) (bad) xchg (bad) fldt adc (bad) mov lret mov rex.WXB rcll pop (bad) mov jnp in add fiaddl jbe lahf movslq jo sub rex.RB and rex.WR jo scas jmpq rex.R xchg adc jo and rex.XB push pop jl jns (bad) lret enterq mov push movabs jmpq (bad) popfq sub lods lods jle jmp stc adc (bad) pushq (bad) fs xchg add and push (bad) (bad) (bad) xrelease stos lahf out xchg and fsubp (bad) or rol mov (bad) add xchg and lods and push (bad) xchg mov and pushfq xchg lock icebp movsl stos (bad) cmp xchg and imul mov (bad) (bad) int3 cmp sbb sbb sahf adc and (bad) sbb or sbb xchg imul enterq mov or sbbb ja,pt es insb pushfq add xchg cmpsb sbb (bad) push or mov (bad) scas mov (bad) movsb adc lret xchg add int pop ficom andl stos jns testw or fistl retq (bad) xchg xchg rex.WXB rex.WRX mov sahf test jrcxz movabs (bad) faddp xchg fbstp xchg mov or insl cmpsb cmp and mov mov pop (bad) xchg cmc rcrl rex.W (bad) rorl (bad) cmp pop rol popfq rex.WRX out (bad) iret testl cmp pushfq cwtl mov rex.WB mov mov xchg (bad) xchg mov mov push jp xchg xchg in imul out mull adc mov xor cmp sub (bad) imul or test add out lock fsubl (bad) rorb add (bad) rex.WB enterq pop cwtl xor rcrb xchg cli js pop scas or (bad) cmp retq xlat data16 imul xor jno mov jo sbb scas movabs push adc adc pushfq add ss scas xchg xor rorl in in adc je xchg sub rex.WRB cltd mov push lods insb (bad) rex.WRX cmp rex.WB rex.WRXB cwtl xor movabs (bad) fistp fcomps pop out jae and jg fdivs xchg rex.WR rex.X add (bad) ja cmpsl rex.WXB movabs sbb rex (bad) xor mov mov mov mov fs xchg rex.RX sub repnz insl outsb rex.R rex.XB xchg mov jp insb add sahf fwait stos idiv push rex.WRXB ja jrcxz pushfq rex.WXB lods mov loop xchg xor add push xchg ds lods nop scas and cltd rex.WXB mov xchg (bad) stc push outsl xchg (bad) lock (bad) mul cs es cmp sub and repz pushq rex.WRB in fcoms cmp sti mov mov xchg rex (bad) mov (bad) jmpq pop repnz mov xchg cld js cmp out push adc repz (bad) (bad) sub pushfq or mov push cmc adc rex.RXB (bad) xchg stc movslq rex.W xchg pushq mov out sbbb mov pushq insl pop sarb (bad) retq movabs in retq mov cmp xor xchg jmp xchg sbb rcl xchg pushfq jae mov xchg (bad) lock cmp (bad) pushfq insl add xchg pop out insb xlat (bad) divb movslq movabs std rex.WXB gs (bad) (bad) xchg stos sbb mov (bad) adcb ja (bad) stc (bad) std ss mov popfq sahf jmp movabs add pop or add (bad) sbb es rex xchg adc (bad) leaveq fs lret sbb decl loopne movabs add sti in fidivl sbb xchg cmp rex.RX popq add and repnz scas (bad) xchg mov and rex.WRXB (bad) sbb std nop subl fwait (bad) rex.R (bad) jnp mov stos pushq push movsl loopne and callq mov xchg sub imul rex.XB rex.WR movabs outsl sub insl rex.WXB or jae jmp roll cmp cmp xchg adc movabs (bad) jg (bad) and stc add (bad) (bad) xor push flds pop test icebp lea cmpsb (bad) std mov pop movb (bad) jbe sub mov retq rex.RB int adc cmp int3 pushq xchg or sub (bad) add rex.RX scas pushq shll xlat xchg rex.WRX imul jb movsl out jbe sti mov (bad) pop (bad) jbe je cmpsl int push mov orb pop mov (bad) gs (bad) xchg fisubr push adc jg add (bad) mov cltd test cmp (bad) pop mov movabs mov (bad) mov add rex.WRB jo (bad) xchg add push pop jge sbb callq and xor rex.WRXB or (bad) notb (bad) and push sbb (bad) sbb xchg rex.WX gs retq (bad) clc shrb mov lret pop fwait cmp repnz xor out (bad) mov (bad) xor movsl and out movsb out xchg (bad) jb and mov add (bad) iret jne xchg cmpsb loope imul outsb sbb test jae rex.R push out xchg popfq cmpsl lret repz add xchg or add (bad) lret (bad) cli sahf in or cmp rex.B (bad) mov xchg lahf cmpl outsb lret rex.WRX mov movsl xchg imul (bad) clc sub xchg (bad) movabs jge loopne (bad) xchg cmc and cmpsl mov je stc mov xchg pop mov xchg lods fs int3 pushq mov xlat rclb xchg mov xor (bad) cltd (bad) sub xchg je pop data16 (bad) cmovge in repz xchg in shrl rex.WX sbb xor fistpll add retq xchg (bad) outsb fidivr xchg xchg xchg (bad) rex.RXB cmp iret sub pop test loope movabs and add mov rex.R gs xchg pop xchg (bad) cmp jp in sub (bad) rclb mov and xchg jge (bad) (bad) sbb sahf rex.XB (bad) callq mov std test repnz stos cwtl (bad) in fstpl (bad) imul lea cld xchg adcl adc (bad) sub xchg sbb xchg lea xchg in (bad) fsts insb xchg (bad) mov fimull stc mov movsl xlat xchg pop jmp loope mov rclb in (bad) mov xchg add sub lcall xchg rex.XB jae mov mov or push mov xchg rex.WR xchg repz (bad) rex.WRX (bad) sbb (bad) jl rex.RXB jns pop js xchg incl in in es or stc cwtl lret loop nopl cmp jns,pt mov rex.X (bad) data16 clc jnp pushfq fwait (bad) sbb jge xchg xor cmp adcb in xlat mov pop cmp sahf test sbbl (bad) xor rex.RXB rex.WX xchg outsb cmp incb stos mov pop cld out loope sub pushfq rex.WB push lods jno mov and ficomp mov add pop loop adc (bad) mov movslq movsl test ja (bad) mov test xchg divb pop xchg rex.R sbb pushfq rex.XB out adcb (bad) jbe scas xor callq xchg je rex.B cmpsl hlt (bad) stos shrb jge orb (bad) rclb test pop (bad) pop orl xchg sub out xchg push (bad) jno nop lods nop movabs cs push mov test test (bad) mov xchg ds sub xchg insl pop rorb es fwait negl cmp mov rex.RX sub (bad) xchg xlat jle xlat pop stos cmpsb (bad) mov jl sub xor add outsl imul rcll cmp jg mov jmp movslq adc popq adcl jae movsl and nop mov jrcxz neg and and stos fisttp pushq (bad) rex.WRXB test (bad) repz mov xchg test xlat pop push sub (bad) movabs rex.WX incl pop mov (bad) (bad) mov jb outsl retq pushq jrcxz xchg std mov nop rcr fisubl movsl xchg in pushq fild in cmc (bad) outsb jg mov cmp rcrl mov sahf out mov out mov imul shl mov lock rex.RXB rex.W mov xchg ds data16 ja shlb addr32 xchg pop cmp (bad) sbb outsb ja push rex.WRB cmpb sbbb cwtl stc (bad) rex.WRXB lret xchg in xchg xchg and xchg notl pop ja cmp (bad) mov xorl shll mov cmp (bad) sbbb icebp (bad) xor rex popfq hlt jle rex.RX fisttp clc in xchg push cli lea and xchg jmp sbb shr xchg pushq setne scas xchg movabs shl rex outsb mov xchg mov fdivrs xchg pop mov pushfq lret lret out xchg leaveq cmp mov rex.WRXB mov (bad) (bad) (bad) xchg adc out subl jg rex.XB xor add sbb xchg fldt jmp or (bad) mov xchg subl callq je mov out cltd mov jmpq pop pushfq (bad) jnp (bad) adc cltd adc out std sti mov rex.RB xchg (bad) mov mov cmp xchg ja (bad) js and gs (bad) and xor stos adc jns mov loopne xchg je imul xlat iret jg rex.RXB sahf cmp test cmpsl xor (bad) sbb sbb or sahf mov (bad) jp jnp push leaveq out xchg jmp pop stos (bad) (bad) test adc callq out xchg (bad) rex.WR jle mov rex.X rex.RXB add movabs (bad) cmpsl mov imul loope out mov or push addr32 mov jae xchg outsl rex.W imul (bad) sbb mov (bad) addr32 mov jnp (bad) xlat jg (bad) xchg pushq fwait lahf ja in pop fbstp scas push xchg fwait cs mov int3 clc movsb (bad) lods (bad) imul pop repnz loop in pop xor imul (bad) jb (bad) lods mov movsl xchg xchg out (bad) lret rex.XB jb js sub (bad) cmovo shlb fildl rex sub (bad) icebp out test sbb sbb nop movslq xor xchg sub cmp xchg lahf jb (bad) clc gs (bad) pop loop rex.XB ja xor xchg leaveq ja jae mov rex.RXB rex.WRB adc rex.XB clc nop adc cmp (bad) mov jmp sub in xor cmp cmpsb xor loopne sti fmuls roll fstpt adc rcl adcl xchg fcom pop fisub xchg (bad) or loopne xchg sub xchg fistpl and pushfq (bad) retq (bad) lcall rex.WR mov sti xor stos stc mov repz xor jae or push sahf ja stos adc (bad) fildl data16 push lret in xor mov fcmove movabs scas cmpsl fstpt (bad) xor gs pop mov rex.WRXB sbb fdivr lods (bad) push (bad) and (bad) push jb lods (bad) popfq rex.W (bad) (bad) cmp cltd sbb lea jne jrcxz rex.X (bad) rorl pop jrcxz sub push xchg xchg lahf (bad) (bad) nop sbb cwtl (bad) or fwait (bad) imul rex.WX rex.WRB rex.WRXB lret rex.RX rex.RB rex.WXB and jle fldl and push movsb sahf add jb jae (bad) push mov xor adc mov gs and fsubs jl sbb push lods add sub xchg xchg rex.WRX mov pop (bad) or shrb iret movabs mov (bad) stos pop cs btcl movabs gs xchg xchg jns loopne retq (bad) mov pop iret out rex.WRX sbb cmp scas popfq mov pushq adc push stc popfq xor (bad) (bad) pushfq add sbb ficompl (bad) xchg iret mov mov (bad) pushfq pop rex.RX adc pop movabs add ss xor xchg in sub rex.RXB lret mov lret mov (bad) push (bad) fdiv int movabs orl and insl nop cmp cmc mov (bad) or rex.XB int3 xchg (bad) imulb push cwtl mov (bad) cmp (bad) sbb in rclb sti rcr xchg lock jg rex.WXB rex.RX (bad) sub loope add (bad) sbb xorb xchg sbb sbb (bad) lods mov pop scas movhps nop pushfq cmpsb sub xchg sub repnz stos cmp and addl cmc movabs adc fiaddl rex.RX (bad) cmpsb mov popfq cwtl or (bad) repz or pop pushq xchg xchg subb mov mov callq scas (bad) (bad) (bad) jl (bad) popfq xchg lods ja rex.WXB mov (bad) xchg or jp jo and (bad) (bad) fdivl mov retq mov xor push jg (bad) sbb out mov sahf jne xchg or mov (bad) (bad) sbb sub and (bad) insl (bad) lock mov (bad) (bad) sbb push pop adc movabs jns cld xor add or rex.WB pop (bad) js jl xchg scas shr (bad) sahf mov fcompl (bad) rex.W flds (bad) js loopne int stos rex.X cmc scas movabs fcmovnb int3 shl xchg xor cmp fdivrl rex.R mov sti push xchg sbb pushq rcll mov iret scas cmc addr32 mov loopne (bad) cmp rex.X xchg in xor out mov cmp adc movslq mov xchg insb jge nop jns fwait (bad) or jmpq xchg cmpsl add rex.B ja,pn push stos pushq mov mov xchg imul rex.RXB rex.RB sub imul jg rex.XB js fldenv mov mov cmpsb cwtl pop std (bad) clc in ja xor mov (bad) cwtl repz xchg sub loopne fsubs mov (bad) push movabs xchg sbb sti fwait movabs pop leaveq ficomp (bad) or (bad) (bad) in pushq std rex movslq push outsl xchg sahf and (bad) jnp pop out jge pop xchg xlat push xchg in rex.WX outsl cltd xchg movsl adc rorb xchg insl pop jl std roll jrcxz mov (bad) xchg retq or mov jmpq (bad) addl outsb add fdivp push cmpsb std pop rolb leaveq jl jb in mov lock push cmp (bad) mov in lret (bad) sub pop xchg rex.WXB jo loope movsl jae (bad) and scas pop cwtl (bad) movsl rex.WRXB push xchg fdivrl outsl fs or xchg xchg insl frstor mov fisubr sub mov out lock (bad) fcoml je xchg rex sbb mov movsl outsb xchg mov mov sub mov xchg lahf movsl addr32 add sbb addb push or xlat jnp rex.R jge mov cmp std xchg xchg movabs pushfq xchg xchg jge xor nop cli imul retq jno xchg mov lods fldt out xchg fild jno and cwtl xchg sbb (bad) or xchg or adc (bad) and movabs jle lock xor cwtl ror loop xchg stc in retq fisttpll (bad) mov lret lahf sbb ds sti movabs adc (bad) (bad) insl out xchg and push (bad) sbb xchg sub orl or xchg addl mov test pop xchg cmp sub test jbe (bad) and iret pop adc push js in rex.W (bad) jo cltd (bad) ja jmpq loopne (bad) adc loop insl xor lahf repnz mov mov (bad) (bad) jbe mov shlb fidivrl jmpq sbb add cli adc mov xchg xchg movabs test push lret mov pushq in xchg in rex.RXB (bad) cwtl xor mov push cs ss test rex.W cmp xchg outsb pushq imull test and xor movsb rex.WXB pop (bad) sbb movsb js xchg fisub lock stc lock loope nop scas (bad) pushq fstl (bad) test pushfq jns (bad) mov cmpsl (bad) ja out mov or add push (bad) jnp xor (bad) mov mov es fdivrp cli cmp push movslq incb and imul pushfq xchg stc jg push (bad) (bad) sub or jbe and ficomp cmp std and out or insl sbb gs (bad) mov sub and push mov int add scas jnp fsubrs outsl or je (bad) and movslq data16 out loope stos imul stos je int3 cwtl adc lods rex.R xor addr32 xchg fdivrs outsb jmpq movabs sub jg lods adc scas pushq or rex.RB fistl pop (bad) pop (bad) jbe icebp (bad) sub (bad) (bad) rex.WRX rex.WR ja pop (bad) ds sub (bad) or pop bswap nop lcall mov xor (bad) (bad) rex.X nop pushfq jp (bad) callq rclb enterq pop movabs cmp push lret cld adc cltd mov fisubr movabs xchg rcll jle push (bad) (bad) xchg gs xchg (bad) clc (bad) push cmpsl out or mov movslq test pop rex.XB jnp cmpl add jrcxz retq cmpsl (bad) bswap jle xlat out jbe add push (bad) xor mov rex.R (bad) mov sarl jns or jb sub ja int3 psrad incl cmp hlt scas xor pushq adc jl (bad) (bad) clc push (bad) mov sbb idivl adc pop lods loope rex.XB or rex.WB rex.WX test orl adc loopne mov (bad) xchg in adc rex.XB rex.RB ss mov jmp rex.WXB rorb mov mov rex.WXB mov xchg (bad) sbb pop loop test and leaveq (bad) imul xchg out lea or xchg mov faddp rex.RB iret std rex.RX test rex.WXB add pop movsb lret cmp int3 iret loope cmp sarb (bad) enterq and adc pushfq fadds (bad) insl rex.WRB pushq pop (bad) jbe movabs pop in (bad) and out mov jno sub out (bad) (bad) int3 jno xchg or outsb sbb loope sub (bad) mov (bad) enterq sti out adc out std or (bad) rcrl jb or jnp or xchg (bad) xor jg add and (bad) jne fld fs push (bad) rex.WR fwait add es mov cmp (bad) movabs fcmove and repz jno cmp cltd xchg outsb nop xchg sub jmp push repz (bad) xchg (bad) stos imul sub pop xchg sahf push (bad) movabs jnp (bad) rex.RX addr32 rex.WXB stos ja push pop sub mov xchg (bad) fs ss adc sbb sub xchg (bad) or adc insb movabs mov adc mov pop iret stos retq (bad) and xchg pop (bad) push flds cmp adc (bad) xchg cs sti (bad) push rcrl mov (bad) jle sahf xor xchg adc cmp (bad) callq (bad) xor sahf cmp cmp (bad) std stos mov adc xchg data16 rex.RX xchg sbbl (bad) sahf sub (bad) in in test (bad) rex.RB xchg movabs or jno cmpsl rex.WXB and ja (bad) (bad) cwtl adc rex.RX (bad) xchg out xlat jne push xor pushq leaveq nop rex.WR mov movslq mov push insb xchg mov fnstsw pushq out sbb jo lock or pushq (bad) fcompl mov xchg movsb fsub cld stos (bad) pop (bad) mov adc movabs popfq out out push and ja scas iret jge adc insb (bad) movabs jne in xchg xchg (bad) jb pop shrb or adcb (bad) jns mov insl xchg xchg cltd int loopne (bad) pushfq adc xchg cmpsb mov adc cltd pushfq cwtl nop ds rex.RXB or data16 and gs stos mov or rex.WRB (bad) rex.XB (bad) rorb shr sarl mov cli sbb leaveq (bad) mov sahf movslq in mov jp fdivrs fdivl xor nop jg xor xchg xor sbb push (bad) add sub xchg mov (bad) test xchg jno cmp xchg rcll cltd jmp rex.WRB stos mov movsl pop pop jne popfq sub leaveq retq rolb sub sbb lret imul test addr32 xchg lods cmpsb mov adc fldt cmp fs mov xchg pop (bad) roll out sahf jmpq pop jle mov movabs (bad) movabs std rex.WB rex.WRB cmp vcomisd (bad) mov lods cmp (bad) and (bad) js push xchg (bad) push xlat ficom rex.XB rex.WRXB xchg mov (bad) out or mov popfq xor ja lret sub mov xchg jg rex.WRB cs xchg sub push push (bad) je adcb test (bad) movabs sbbl (bad) mov cmpsl jno scas sbb mov lret add enterq xchg or pcmpeqb add jle xchg push (bad) rcll or jnp sahf (bad) or mov cltd xchg scas (bad) jge pushq lods jrcxz adc jno clc pushfq pop jns rex.B (bad) add push fcoml jg lcall int (bad) push xorb rclb test xchg (bad) (bad) insl test rex cmp movabs jg iret rex.WRXB mov lods cltd std rex.WXB rex.WRB mov sar or xchg (bad) imul rex.WRX lods rex.RB pushfq mov pop adc xchg or lahf out and sahf jle jne sub rex.RB movabs cmpsb sti (bad) pushfq (bad) xor repz mov retq fisub pushq shr or pop movsb jge xor (bad) mov sbb mov rex.R mov test (bad) out (bad) rex.WRXB adc fmuls or cmp xchg sub cmp pop (bad) mov xor jb std sahf icebp pcmpeqd nop (bad) imul scas xlat lea mov movabs jb orb xchg adc jle xor cmpsl leaveq adc (bad) mov stc adc ds xchg xchg fnstenv mov sahf std nop or add (bad) add cwtl mov or loope rex.WR jrcxz jg xchg and (bad) rex.WX push jmpq cmpsl pop sub rex.WRXB jl (bad) (bad) push pop xor xlat lods pop xchg mov sbb and adc rex.WX jo movabs add rex.RB adc sahf jbe (bad) and pushfq sub or mov and sbb (bad) add sub rex.WR push (bad) or push rex.WRX rex mov mov (bad) xchg xor enterq subb callq push ja jmp add enterq in mov (bad) mov cmp adc movabs push sbbl out lret jae adc jns andl xchg sbb out xchg cmp sahf stc and pop repnz fnstenv (bad) std rex.WRB or lea (bad) push (bad) outsb (bad) xchg nop add (bad) and movabs outsb clc adc push fs xchg (bad) js idivb (bad) xchg xchg mov fmull xchg pop stos xor xchg or rex.R out adcl sub or rex.RX pop fxch mov cmp xor mov (bad) imul and (bad) xlat adc icebp jns hlt xchg xchg nop (bad) lret and xchg pop imull mov add jne mov (bad) mov movabs js sti (bad) out mov (bad) rex.WX stos sbbl mov or rex.WRX test jnp retq mov xchg mov rex.WRB lods and pop mov mov jae rex.WRB cmc add hlt xchg xor insl (bad) and xchg sbb es gs jge mov iret (bad) cld int add fcoml cmp data16 sub lea jmpq (bad) rex popfq or mov rex.R mov imull fwait xor cli (bad) jbe cld cltd xor rex.WXB iret mov mov pop rex.WRX movabs and xchg add js sti stos movsb fcmovne popfq cli pop retq mov rex.WRXB out mov insl neg (bad) (bad) cmp jg movsl callq (bad) out (bad) fxsave pop lahf (bad) xor (bad) rex.R fidiv cmp (bad) adc rex.WRXB rex.WXB (bad) scas ficoml rex.X rex.XB outsb shll fadds xchg and clc mov (bad) pop sub repz rex.X or mov xchg sub rex.WB rex.RX push rex add sti mov (bad) and pop sbb (bad) pop or lock gs out ja xchg stos push movsl mov test (bad) pushq rcll rex.WXB xchg jns cwtl leaveq jge mov xchg mov xlat (bad) sti xor rex.RX adc jae stos stc sub (bad) sbbb es jno cmc movabs out cwtl int3 xchg cmp push cmpsl ss (bad) and xchg adc push xor cmp mov ficomp and rex.WXB jp movabs push jl xor test outsb retq xor xchg pop pushq pop addr32 rex.W cmc mov xchg mov sti (bad) scas cmpsb or orb add rex.WXB or xchg xchg lock sub xchg mov movslq rex.X cmp outsb ss imul and and mov sbb push ja rex.WXB ss loopne ja xchg (bad) pop and callq xchg cld jae sub sti sbb cs mov notl (bad) cmp notb ds movabs cmp xchg cmp sub lahf movabs (bad) sarb (bad) repnz xchg in sbb push rex.WXB push rclb sbb mov pop enterq and rex.B jne (bad) mov jmp or sbb xchg push movsl loopne jle add pop jl in xchg insl rex.WB stos sbb nop cwtl (bad) or pushfq out addr32 jmp fcoml sbb mov mov insl scas mov and movsl ss pop idiv test pop add or (bad) xchg mov imull lret jle es adc ja sbb and xchg rorb mov xchg pushq cmpsl test xchg mov lret (bad) jmp rex.W push (bad) pop cmp outsb fistl mov hlt jne (bad) rex.WXB rex.B pushfq retq (bad) movhps (bad) and rorb xlat mov je mov seta rex.WR (bad) (bad) xchg data16 cmp cmpsb leaveq xchg movl (bad) retq cmpsl and fbstp (bad) mov mov divl movabs rex.B jne push fisubr adc xchg rex.WR cmpsl rex.WX jg adc rcrb xchg or sub stos push cwtl rex.WX rex.X rclb fsubp shrb jle rex rex.R xchg gs mov (bad) mov repz rclb mov xchg jns insl lret test movabs je adcl out cmp jo or sbb (bad) or jl and test (bad) (bad) gs addr32 xchg movsb ja rex.X retq sti cmpsb cld movslq repz xchg adcb data16 xchg int iret stos leaveq sub (bad) cmp rex.WX movabs pop insl and repnz push (bad) addps pushq jb fcompl xchg cmp pop loope scas lods stos mov mov (bad) xchg test (bad) int in loope jbe adc jg sahf callq rex.WRX gs imul pop (bad) xchg jae rex rex.WRX pop in cmpsl jmpq push mov sub enterq sbb ficompl je je adc xchg lret cwtl enterq mov xchg movabs rex.WRB xchg (bad) idiv (bad) pushq sub xchg stos adc or int vmovdqu16 xchg imul (bad) repnz callq movabs lods (bad) clc xchg cmp je (bad) movabs xchg outsl xchg lret cltd cmpsl add xchg mov je repz jrcxz movl push iret mov cltd rcll lods scas xchg jb pop popfq (bad) cmc outsb addr32 in pop cmpsl xchg fimull sub movabs push movabs (bad) sub cltd (bad) mov (bad) js sahf lods mov rex.W movabs sahf insl (bad) icebp (bad) or (bad) movslq addr32 mov fdivs xchg sti xchg xchg cmp xor leaveq neg pop (bad) mull insb loopne pushfq mov jb jmp and xor adcl mov rcrl or sbb (bad) xchg leaveq pop (bad) mov fbld or mov adc adc (bad) mov and or cwtl adc (bad) fmuls sarl (bad) (bad) xchg xor movabs pop adc outsl mov rol stc out cmpsb rex.RX xchg or xchg push scas rcll (bad) int3 fstps nop mov mov movl mov jrcxz insl mov adc in cmp fsub neg movabs pop and mov cmp mov (bad) pop divl xchg and mov xchg sub imul pop mov cmp (bad) mov pushfq rex.WRB xor es out push xchg popq cltd push movabs icebp xor (bad) (bad) or jno (bad) jmp sbb scas sbb jle cmp xchg lret sbb lock notl sahf fidivl pop and movabs pop cmp sub jmpq mov xchg sbb frstor and scas mov mov mov xchg sub jnp shll notb nop loop icebp outsb ja mov (bad) (bad) movsl xchg mov nop loop (bad) sti rex.XB cmpsb push enterq imul xchg in es jo rex.X sub imul jne jne pushq add test xchg lea hlt pushfq ja movslq movabs je adcb jg pop fisubl xchg stos (bad) add add (bad) out (bad) loope (bad) sti sub test cwtl cs (bad) imull jg in xchg mov and fisubr addr32 sahf xor cmpsl mov mov (bad) (bad) popfq (bad) xchg mov add mov fisttpll pushfq mov in cmp lret int cwtl (bad) (bad) (bad) or (bad) adc mov xchg notb pop (bad) sub (bad) (bad) outsl sub movabs nop xchg cli and push jae,pt (bad) xchg mov add adc sbb in cmpb popfq xor (bad) (bad) (bad) fwait (bad) or movabs rex.X mov jns rex.WB rex.WRB xchg cmp rex.WRXB sbb xchg mov or mov xor mov xchg adc hlt (bad) movabs or cltd leaveq rex.W xlat pop pop or popq jns cmp pushq sbb xchg fsts or fistp (bad) stos rex jb cmp in rep or fsts pop outsb rex.RXB fs fidiv leaveq mov sbb movabs sahf ds sahf adc popfq rolb sub (bad) mov ja adc lock cmp subl (bad) cmp jp rex.WR cmp div or retq (bad) (bad) fsubl and pushfq or mov mov imul scas sub mov (bad) mov fs pop push rex.RX scas data16 iret cmp and pop (bad) or add push (bad) jnp clc pop int (bad) rex.WX outsb jmp (bad) pop mov out (bad) push push rex.X add enterq sbb mov movslq (bad) jo jge in (bad) adc pop (bad) (bad) adc gs scas movsl and lock (bad) cmp retw repz rex.WRX xchg loop jbe in pushq movslq rex.R cmp (bad) nop adc outsb add lods in rex.RX (bad) in xchg hlt xchg mov lock std test (bad) xor (bad) sub xchg jl je (bad) (bad) push mov movslq xchg add jp out (bad) push pop (bad) xchg sub (bad) nop add (bad) rex.WB imul (bad) loope (bad) int3 and packuswb ficom mov (bad) nop sbb mov insl sub push test cmp mov outsl (bad) jnp rclb movabs sbb push jbe cmpsl rex.X or fsub lea movabs and loop (bad) jae jge add jnp (bad) (bad) mov mov pop int3 xchg add adc icebp jb (bad) push es rex.WB sub cmp outsb sahf or sbb pop sahf lret repz cmc stos jno rex.XB rex.WRX (bad) cmp mov loope div int3 add xchg pop movslq stos mov retq push xchg (bad) (bad) jne xor ds lock xchg adc mov (bad) sub in mov push sti (bad) out fist fstpt rex.WRB jne cmp mov sbb push mov setle pop or stos imul sbb rex.WRXB mov xlat jb xchg xchg shr mov mov rex.WRX in mov jle xor (bad) (bad) pushfq cmpsb and or loop (bad) ja movabs (bad) mov (bad) cmp outsl es nop adc insb (bad) pop cmc cmp std push or and mov xchg int outsl jg (bad) sbb icebp jmp push stos adc mov pushq rcll cmpsl sti (bad) (bad) xchg test add jle jb (bad) ja xor xlat retq repz xchg (bad) xor mov push cmc xchg out add mov cwtl pop mov int movslq jbe mov movsb stos or gs sbb adc xchg mov mov lret xchg movabs mov movabs and (bad) notl xchg push rex.WXB rex.RX xchg adc mov imul rcrl mov not test xchg mov sub (bad) pop rex.X cli jecxz xchg adc movsb and rex.RX (bad) out (bad) es push xchg push mov icebp iret mov push cmp xor jg sub xchg push xor ds movabs test xchg or cmp and fistp loopne sub jae or xlat fs stos cmp xchg and mov es cld test movslq rex.RXB in pop sub mov (bad) movsb mov lret mov cli iret add pop (bad) cmp rex.WXB movabs adc loopne xchg and xor scas repnz cmpb mov in enterq pop mov fisubl mov mov icebp adc sbb mov xchg adc or xchg cmp shr sub sbb sub sbb push xor insl mov mov (bad) (bad) sbb xor jne add and ja push and mov ja movsb lahf (bad) xchg jno adc cli sbb xchg mov cmpsl nop mov (bad) popfq lods rex.WRXB add rex.RXB stc mov cli movabs sarb cmpsb cwtl notl mov mov jrcxz jbe insb not push sub or test (bad) jnp cmp rex.WB jp stos jnp out push int3 xlat mov movsl (bad) mov fcmovnu out cmp jne jbe pop hlt xchg add jne fwait xchg pop iret pushq push and stc std loopne cmp jg int or pop or mov xchg sar (bad) nop pop and jne pushq mov rex.XB (bad) sbb insb xchg pop push add rclb sahf cmp cwtl xor pop jae jnp xchg lret ss or orb push in sub subb mov repnz imul xchg stos rex.XB shll out (bad) mov div (bad) cmpsb test cwtl in add insb cmp push add xchg mov rex pop sbb jmp retq or sarb cmpsb mov (bad) outsb mov sbb mov sub sahf xor hlt movabs (bad) clc mov sbb stos outsl movabs jmpq rex.WXB sub cli shll (bad) lods xchg je xchg mov or sub or cltd insl add popfq (bad) cmp sbb divl out jo adc cmpsb xchg loopne xchg rex.WB rex.RXB ss xchg vmovups fisubl xchg scas jne adcl rex.RX sti xlat pop xchg pop adc xor movsb push out lods cli sahf sbb adc rex.WRX xchg mov (bad) pushfq xchg shrl es loopne jns pushfq (bad) incl (bad) push hlt pop rex.RXB movabs sbb sub (bad) pop (bad) cmp jbe adc rcrb iret js cmpsb insb (bad) mov negb (bad) cli pop fwait rcll xor jle movabs and out fucom hlt enterq xor xor movsl push (bad) stc es push (bad) adc clc add add std add mov test pushq (bad) fs (bad) ss pushq (bad) (bad) mov rex.RX movsl ss hlt (bad) mov stos rex lock cwtl (bad) cmp imul retq xchg hlt jbe (bad) xor xchg cmp xchg (bad) mov sti (bad) out xchg mov sbb scas sub jo cmp sbb xchg data16 cli fwait adc xor xchg and fsubrs sub mov push (bad) adc testl idivl repz (bad) nop rorl shlb and stc (bad) mov subl mov out jmp push pop rcll lahf sbb cltd sahf out pushq jmp xor (bad) adc (bad) push jl (bad) mov push lea pop and cmpsl addr32 rex sti mov xor jmp xchg mov and rex.WB sysenter xor sbb out cmp or (bad) mov xchg sub (bad) fisttp jle scas ja outsl xchg xchg mov rex.XB xchg (bad) (bad) test sub out lock xchg mov fldt rex.WB es xchg mov rex.WX movsb xchg mov (bad) adc callq lahf (bad) or (bad) (bad) testl in cmpsb xchg (bad) rex.WB rex.X sub xchg (bad) pop mov jmpq sbb stos jo rex.WRB jno jle ficoml loope cwtl (bad) leaveq addr32 scas (bad) outsl add xchg rex.RB mov and rclb test mov movsb adc sub cmpsb pop adc and imul sahf pushq hlt (bad) loopne test lret mov hlt movabs neg or or cld push cmpsb rex xchg rcr movabs adc adc mov xchg xchg loopne mov in rex.RB iret jl clc lahf rex.WRB icebp jle (bad) scas jge popfq retq fwait gs sub outsb and cmpb adc cmpsb ja jmp mov fdivl xor subl (bad) out cwtl scas xor rex.WX callq or js movabs std sahf push test (bad) rex.RXB addr32 shl leaveq mov outsl loopne pushfq outsb (bad) xchg sub (bad) repnz sbbl xor xchg pop xchg cmp push (bad) out sbb xor pushq mov rex.WRB rex.R loope (bad) mov xchg mov out (bad) popfq movsl or fcomps hlt add retq adcl cmp ficompl ja (bad) jbe add faddl pop adc rex.XB (bad) or push and push callq (bad) icebp scas cmp insl (bad) (bad) gs jg xchg rex.X push pop sub fistp fildl mov pop push mov fwait sarb xor test insl sarb fidivr (bad) push jle and sbb mov (bad) xchg rex.RXB outsb data16 test pop jg enterq xchg xor add jae gs sti fsubrl xchg rex.B jle mov int cltd jnp mov stos xchg mov pop add rex.X adc mov rex.WXB xchg (bad) mov sbb cmpsl adc (bad) enterq (bad) retq (bad) and xchg xchg decb rcrl adc (bad) movabs insl sbb orl xchg push sub jp (bad) pushfq loope (bad) mov (bad) movsb xchg scas in jmp xchg fildll xchg jmpq and push je (bad) sbb movsb callq jb cmp xchg movabs cltd xchg rex.WR fldcw jnp mov (bad) mov sub cmp rex.RX xor xor xchg jb push (bad) sbb outsb enterq insb rex.W rex.XB imul rex.RXB xor mov mov (bad) jle lock (bad) jo movslq iret nop rex.RB (bad) mov xchg xchg mov stc test jns mov test sub xchg jrcxz sbb iret jb fidivr icebp mov lret sub cmp rcll sti loop rex.RB push mov (bad) mov lret and mov rex.R jo and pop sub mov push cmpsl pop fsts (bad) adc xchg rex.R mov adc sub outsl decl adc xor cmp movabs mov (bad) xchg in add stos pushq data16 (bad) jb and mov sub add in (bad) sbb in mov (bad) (bad) jnp fst cmp xchg ds lods rex.WRX rex.X pop pop subl mov (bad) (bad) pop or add jbe xchg in and cmp movabs cmp leaveq icebp jae movsb cmp rex.RXB fxch rex.WXB rex.RX (bad) (bad) mov or addr32 cltd repz mov pushq pushq xor (bad) loopne cmp insb loopne sbb gs xor xorl cmp mov rex (bad) ja (bad) mov (bad) movabs jp je (bad) pop pushq rex.X rex.R enterq sub sub pop adc pop xchg xlat stc fimul jb fisttp addr32 sbb cmp movsb or and (bad) int3 sub sahf test lock sub rex.WXB sahf rorb push sbb (bad) xchg push jg ror and jo jrcxz or rex.WR fistpl or mov test (bad) xchg xor ficom (bad) insl pop rol xor xchg jnp xor xchg pop (bad) pushq sub pop adc rex.WXB sub hlt or rex.XB leaveq data16 xchg cmp andl adc stc int sub rex.WB xchg sub stc retq push (bad) movabs cmp test mov push cwtl jb or (bad) (bad) cltd clc cs (bad) outsl mov insl fsubp sbb clc xchg data16 lahf movsl adc (bad) jns jg cmpb pop sahf push out jb faddl push add pushq push sub adc sub adc mov retq xor add pop mov jae orl jns gs ds cmp rex addl push fwait (bad) fsubrl repz xchg jno test fisubrl pushfq add (bad) or out fildll adc shll movabs or or popfq scas (bad) mov rex.RXB lea xlat adc xchg xchg jp pop add jbe (bad) rolb jge movslq mov (bad) popfq mov movabs (bad) rex.WR mov jl rex.R lahf pushfq fmuls sub xlat rex.RX rex.WR movabs mov test mov je pop jo and cmp adc scas rex.WX jb add (bad) (bad) lret xchg and insb data16 rex.WB pop js push lret or (bad) (bad) cmp nop mov rex.WB sub rex.RX lret fdivl nopl movsl fsts out jb (bad) jge mov mov gs mov xor nop (bad) stc insl sbb and gs sub movslq add (bad) and xlat jmpq mov or movabs jnp cli (bad) sbb jb xchg cmp mov xor cmp sub repz rex.WRX cmc retq xchg push xor pop xchg clc scas lahf jg xchg ja (bad) xor and xchg (bad) outsb (bad) sbb ss rorl jg (bad) (bad) (bad) adc (bad) test (bad) sbb rcrb pop pop lea push clc xor movabs pop xchg (bad) scas cmc loop pushq std xchg mov shrl test xchg stos rex.B leaveq rex.RXB in out xchg fstpt mov mov cmp negl rex.XB mov faddl jg cmpsl pop repz test test adc cmp jmp cmpsb mov jnp pop andb (bad) xchg pop adc rex rex.WXB pushfq jle jl mov stos jnp xchg lods lcall retq cwtl cld ficomp imul jae sbb push fadds mov shrl repnz (bad) repz (bad) and adc jns (bad) or movl jo fcoml mov xchg outsl (bad) insb lahf mov cmp pop (bad) adc (bad) lahf (bad) xchg rex.WXB (bad) (bad) xchg rolb jbe sub test rex.W sub fwait (bad) pushq mov and imul lods movsl repz fstl rex.X popfq sahf cmovnp (bad) and addr32 xchg mov mov jo pop (bad) pushq insb decl pushq mov rex cmpsl adc rep pushq js (bad) (bad) cmp pushfq cmp shlb lret and push (bad) out adc jg mov movsl jnp xchg pushq sbb (bad) movslq pop rex.RX jns add je popfq loopne and movabs mov loop cmpsb sbb jg xchg jno jg shr mov xchg fist rex.WR mov jmpq push xchg add repnz xor mov or (bad) idivb leaveq rex.RB pop adc mov jmpq stos mov (bad) out iret (bad) (bad) cmp out push or cwtl (bad) adc mov cmp movabs rex.WRXB (bad) (bad) (bad) push lahf out mov rex.WXB insl mov rex.RB push movslq mov xchg cmp movabs xchg mov and cmpsl push (bad) xor cmp rex.WR pop std push outsl sahf fwait in xor icebp xchg invd (bad) xor fnstenv push fimul rex.WRB outsb xchg xchg (bad) push nop (bad) sub pushfq lods (bad) sbb movsb ss fbstp callq (bad) xchg cmpsb movabs xchg adc sub imul xchg cmp rex.WX cmp xchg imull xchg pushq push mov xchg hlt jnp in rex.RX (bad) push adc jbe cmpsl loopne mov rex.XB (bad) cmpsb mov scas jmp (bad) (bad) mov leaveq sbb push movabs xchg seta push pcmpeqb repz lock jo clc mov xchg (bad) jo mov rex.WRXB outsb fmul movabs xor and es cmp rex.W rex.RB push mov rex.WRB lock rcrb xlat sarb xor imul xchg rex.XB or rex.WR callq xchg (bad) nop adc xor test add rex.R xor in mov rorl push mov gs fimul out sub push std rex.WR rex.RB rex.XB and gs movsb xchg xchg adc jnp pop mov rex.WX and rclb rex pop test (bad) sti (bad) mov out rex.XB xchg (bad) js cltd sub pushfq (bad) pop jg int jge pop cmp out rex.RXB mov ss fs (bad) (bad) (bad) mov cmp (bad) lock rex.WRB (bad) cwtl (bad) loope imul sahf (bad) cmp lahf popfq stos xor (bad) mov mov xor add pop push and sti (bad) stc rex.RXB pushfq or pop mov jle rex.WR rex.WRXB or in (bad) movabs cli xchg mov nop mov or enterq push callq xchg sub and pop (bad) mov subl and vmwrite jrcxz xchg (bad) insb lret push cld mov xchg ja mov jmp cmpsb notb stc pop push adcb jmp imul xchg sub fsubs (bad) mov sahf xchg or sbb cmpsb sub xchg and rex.RX loope in jrcxz movabs xchg xchg hlt pop int or pop (bad) lods (bad) (bad) or jmpq imul sbb rex.W add cmpsl and popfq jge fwait js cs adc test sub (bad) jp (bad) rex.WR fcmovnbe xorl ja loope fs (bad) and pushfq jrcxz xor (bad) movsb in jno nop jmpq in add (bad) xchg sarb loopne out callq imul (bad) insb icebp adc test scas sub mov xchg (bad) sbb stos outsb test mov or out xchg and jle ftst cmp pushq and rclb mov jrcxz mov jge xlat (bad) pushq movslq add in (bad) lret rex.XB xchg pushq lea xchg (bad) sub lahf movabs pop outsl mov (bad) rolb xchg mov cli rex.WXB repnz add pushq mov mov lret jg test xchg rorb vunpckhps stos lods in mov retq fstl mov vxorps or mov (bad) cwtl (bad) mov ffreep (bad) mov (bad) rclb fldt sahf xor pushq xchg mov movabs and (bad) xchg popq rex.R addr32 pushq (bad) shr sub (bad) xchg (bad) mov fbstp xlat cli insl or mov cmp mov seta (bad) (bad) cmp xchg xchg imul pop (bad) xor cmp rex rex.XB xchg add icebp or (bad) leaveq out (bad) pop sahf rex.B jae imul jle jnp add rcll and std popfq lea leaveq cltd push retq lock xchg sti jrcxz (bad) mov loopne xchg fnsave xchg int3 fs movslq xchg fldenv lahf imul xchg orl jg jp xor xor jge cmp enterq movsl (bad) adc fs scas add pushq (bad) jmpq mov jle push xor and adc add (bad) (bad) fwait xchg mov nop out jmp subb (bad) xchg push outsl and (bad) jmpq xchg cmp xchg pxor and (bad) jnp xchg cmp add jne mov add xchg lahf xchg jrcxz jle adc cwtl rex.XB sbbl mov movabs fidiv ja scas sbb xchg (bad) pop jp pop retq or rex.WRXB movabs nop cmc addl jbe out popq test callq sarb or mov in (bad) hlt rex.WR mov (bad) or shr or je (bad) sbb jnp rex.WRB popfq mov (bad) rol pushq (bad) subl gs push (bad) (bad) rclb (bad) adcb pop (bad) hlt jnp sbb movabs pushfq pop fistpl xchg pushfq mov mov nop movsb xchg cli xlat rex.X rex.W test rcrb lret pushq add stc mov pop jmp pushfq movabs and jmp test mov cmp lea cmp (bad) cmovno jg fucomip xchg es xchg movabs insb sbb imul out nop movabs cli pop xchg mov cmpsl sub sbb pop imul mov cltd mov gs xor (bad) xor (bad) cmp xchg and mov out pushfq mov adc enterq mov (bad) pop rex.X test xlat sub sub insl decl mov pushq and rex.WXB fs roll mov (bad) lea mov out mov (bad) rex.WB or adc test fcoms and cmp movslq adc xor rex.XB cltd xchg (bad) fldl rex.RXB and fisubr cmp mov sti mov pop cmp std jge mov xchg ds rex.WXB sbb (bad) pushq jnp xor mov (bad) leaveq sbb nop (bad) pop add fisub cmpsb mov (bad) add rex.WRXB push pushq ja sbb sbb in cld adc sub subl cwtl nop nop push mov cli rex.WRXB addr32 adc adc rex.WRB mov (bad) repz jl adc mov pop shll fcomp jne mov add mov outsl push insl rex.WR sub test movslq sub int3 or xchg mov pop addr32 xor xchg sbb push xchg test jle xor mov sahf mov add es rex.WB and sub jns leaveq movsl jrcxz xchg mov sbb test idivl sahf or fcomps cmc sbb fcompl sub xchg imul movslq sti (bad) jmpq adc (bad) imul xchg negb enterq sbb cmpsl and and loop push movsl or xchg jbe in in mov (bad) rex.R add or rcl adc jbe cmp lock lods data16 xchg xchg jge (bad) xlat push lahf inc pop (bad) jne repz sahf cltd loope test xchg (bad) in jl xlat repnz flds push add pop or xchg jrcxz repnz insb shrb push add xchg (bad) adc or scas add lods jrcxz xor cmp jo es jne mov (bad) mov jns push (bad) rex.WRXB sbb pushfq cmp rorb sbb or fldt scas mov (bad) (bad) xor jg xchg enterq xchg adc mov sbbl (bad) and sub (bad) in outsl rex.RX jae movabs out ficom or (bad) enterq repz or mov out out mov (bad) add rex.WRB test jmpq mov cmpxchg mov xchg jbe jmp or push sub jno xor stos push movsl outsb pushfq (bad) imul leaveq add outsb pop sahf andb rex.XB adc js fiaddl adc push movabs sbb movsl rex.W sahf jno sbb stos xchg pop xchg push cmpsb cmp fldl xchg push std (bad) shrb pcmpeqb or sub or xor pushq sbb or movabs ficomp int push cltd adc jmpq out (bad) push jbe cltd mov pushfq xor push cmpsb stc (bad) insl cs rex.X rex.RB popfq (bad) imul nop cmp ja and pop jg je xchg xchg xchg cmp and jg sub rex.RB and (bad) (bad) (bad) movslq sub xor roll fadds (bad) push lea and (bad) movsl es xchg insb test push pop xor add cmpl es (bad) movabs mov jns es rex.RX gs fwait adc sbb movabs adc ja mov sbb (bad) cmp adc cmpsl (bad) push and fs (bad) rex.B xlat cmc xchg mov xchg (bad) mov (bad) imul jge lea mov xor imul data16 push jne (bad) (bad) mov adc or xlat jg cmc movslq rex.WRB cmp pop jae and rex.WRXB mov xchg (bad) rex.WRX es jno cwtl cmpsb movabs xchg sbb sbb rex.XB es rex.RX out stos mov movsl icebp push (bad) (bad) jo xchg (bad) out loopne in movsb xchg (bad) stos leaveq in nop xchg rcll add int3 jnp mov frstor rex.B sbbl jrcxz fimul xlat rex.R xchg jnp xor js xchg pop xchg (bad) or sub fcmovnu jmp sub mov add adc pop add decb xchg icebp lret retq repnz xchg sarl out in xchg rex.B or lea jl xchg stc test retq jb (bad) jge fistpll not rex.W popfq or std xchg outsl jns lea push data16 addl pop xchg (bad) mov push scas jmpq cmp xchg rcrl imul icebp fwait enterq or (bad) push movsb sahf xor movslq rcll stos mov sarl adc and push push (bad) shrl or mov (bad) (bad) (bad) push es xor mov mov rex.WX push out xor mov sub (bad) (bad) rex.WRX mov mov jge add (bad) cmpsl sub std stc sbb mov jp jmp subl (bad) (bad) mov sahf sub in rex.RX icebp fistl pop out in add rex.WRX addl imul cmp (bad) lret (bad) xchg popfq (bad) pmaddwd js movabs (bad) sbb jl xchg xchg verw int3 rorb lahf xlat and movabs rex.XB mov pop rex.WXB add fdivrs jge test lea int xchg or jno mov xchg loopne movl and push in (bad) sub xchg scas mov add callq sbb cwtl fnstsw xchg (bad) (bad) scas (bad) xchg push xchg cmp imul ficompl movabs sti adc xor (bad) xchg insl jp mov (bad) rex.X xchg imul add or rex.WR rex.XB mov nop cmp lods sbb (bad) or (bad) rcrl in rex.WRXB out mov lods adc rex.WRB add (bad) nop (bad) push cld ds mulb xchg xchg in (bad) divl pop adc xchg pushq fdivrs sbb xchg hlt pop (bad) fs (bad) and sub fldcw pop fwait jae xlat mov cmpsb leaveq xor (bad) (bad) insb add xchg (bad) fsubrl pop pop nop or cmp stos outsb xlat pop xchg sbb shrl in std lea rex.WRXB mov (bad) fadds sbbl or xchg sbb movabs (bad) insl push rex.RXB sbb rex.WR std repz (bad) rex xlat mov loope push push (bad) pushq cmp xchg push mov mov push lret stc xchg mov rex.RB or cmpsl sarl adc adcl lahf test or fcmovb (bad) (bad) xchg (bad) lods cs push es fist loopne sub and (bad) (bad) jbe clc cmp xchg (bad) push sub xchg xor add test and rclb rex.W ss pop fcmovnu ja cmpsl adc lock xchg shll xchg cmp xchg adc sub rex.RXB rex.WX movslq leaveq cmpsl and sbb popfq popfq mov (bad) imul mov jp scas gs xor (bad) cmpsl out jae rex.WRB (bad) loop xchg mov movabs retq pushq pop mov sub cltd or outsl notl movlhps push mov add ss adc mov lods xchg (bad) rex.WXB rex.WRXB rex.RX jb (bad) mov sub imul orb (bad) (bad) loop xor sub sub xor addr32 mov xchg and adc in stos enterq push rex.WRB jo sub fsubs xchg retq add outsb js mov sbb xor (bad) xchg fs gs sbb push and out xchg add adc adc movsb and adc pushq add test xchg test pushfq xor sbb sbb and mov xchg sbb xor cld (bad) mov (bad) mov add in xlat rex.WXB (bad) popfq pop outsl (bad) xor pop xchg and scas loope loope pushfq pop ja jbe jno (bad) lea in mov lret lea cmp std (bad) or and and sahf (bad) and std rol (bad) (bad) rex.XB pop xchg adc xchg rex.WXB mov insl (bad) add pop rex.WRX addr32 iret vminsd insl mov sbb (bad) sub lea (bad) xlat xorl rex.B rex.RX rex.WX mov mov movsl (bad) int mov sub lahf (bad) mov rex.WRXB (bad) in movsl xor push mov fsubrs (bad) mov scas sbb shrb jl cltd cs xchg scas fcomps xor adc and xor xchg or rex.RXB xchg adc insl add (bad) scas mov rex.R (bad) ds sbb jg movsl add adc outsl xlat jne xlat leaveq movsl xchg sub (bad) int3 data16 popfq mov (bad) rex.WR and loop (bad) js push mov sub ja popfq sti cmpsb rex.RX rex.X nop mov fimull add rex xchg jl cmp jne rclw lods jo xor shll pushfq mov shll (bad) gs xchg jo scas or movsl sbb sub (bad) jbe push (bad) test (bad) pop fdivrp rex.WRX in and data16 mov xchg (bad) loop (bad) sbb xchg (bad) rcr mov xchg imul div loop in movslq (bad) xchg mov mov jae sub fwait sub adc cmpsb (bad) push xchg hlt push xlat retq icebp fist xchg and xrelease ficompl (bad) mov (bad) rex.WB pop sub push pop jb mov mov xor fs xlat jl pop js sarl (bad) mov mov rex.RXB fwait xchg xchg pop negb pushfq popfq lock (bad) xchg cmp ja retq cltd xchg (bad) mov rex.WR xchg int3 rex.RB orb xchg test loope xchg push repnz retq in (bad) (bad) out in mov and rex push rex.B rex lock cmpsl (bad) xlat lret cmpsb sahf sub cmp addr32 jae and out mov rex.X xchg es callq xchg adc mov test rolb callq pop (bad) stc sti jg out in xchg jrcxz (bad) (bad) lods (bad) xchg test jb cld rcrl je mov (bad) (bad) test pop pushq cmpsb cwtl rex.WX sbb imul adc pop (bad) fucomi repz (bad) jb repnz jnp rcrl xchg sahf cmc and pushfq mov rex.XB adc sub or or loop rex.WB mov xchg (bad) stc sub repnz or shr std out nop sti (bad) ss xlat mov (bad) xor xchg and mov or push xchg rex.RB xor mov stos (bad) mov (bad) rex.XB jmp stos in xor movsl clc xchg sarl xchg imul in cli (bad) (bad) rex.RXB or out or adc ja mov jg mov add loope je xchg hlt sahf sbb test or mov (bad) movslq cmp sahf (bad) cmc out (bad) xor test fwait adcb lahf mov adc adc (bad) outsl xchg ds clc mov rex.WX sbb xchg retq xchg shll jno cltd (bad) mov xchg xchg rex.X (bad) add scas pushfq jrcxz mov sbb push mov retq fstl stos callq sbbb (bad) rex.RB sarb mov loope mov jl mov jmpq mov xchg rex.RX sub (bad) mov or xchg in or fs mov xor popfq (bad) pushq adc pushfq (bad) rex.WRXB repz test jne sub pop popq sub (bad) and xchg rcr data16 hlt push mov mov push (bad) mov idiv adc pushfq jl xchg rex.XB outsl pushq xchg mov ja mov rex fisub jmp adc in test (bad) xchg (bad) mov pop pop movabs rex.RB nop xchg xchg rex.WX sub lock sub xchg lret xchg add lods sahf std in fldl mov adc xchg (bad) pushfq or popfq fidivrl cmpsl test loop lahf andl imul cwtl pushfq mov out popfq rex.X stos lret or (bad) cli out (bad) add ja mov loopne xchg cmp add rex.WRX cmp fidivr sub lahf (bad) (bad) fwait (bad) gs jle xor xchg or or jrcxz xchg (bad) jp and outsl adc callq es cwtl sahf add or divl or xchg imul mov fidivr push mov sbb (bad) add or rex.WRXB pushfq nop jbe or push fcmovu push adc in xchg (bad) faddl xchg mov fisttp xor mov rol xchg push cmc data16 xchg movsb movabs jp fwait hlt stos decb jrcxz sahf (bad) movabs jrcxz data16 adc (bad) xchg clc stos sbb (bad) pushq xlat xchg xchg pop out cwtl mov xchg adc adc and (bad) (bad) sbb xchg repz and mov addr32 xchg push xchg sbb xchg mov mov (bad) xchg sbb cwtl lret xchg push enterq xchg mov scas (bad) (bad) xchg int3 fisub mov mov mov (bad) rex.WXB lea (bad) or (bad) or (bad) mov or xchg loope sti jmpq adc in mov retq cmpsl sbb ss data16 mov clc (bad) sbb adc mov movabs jmpq xor test xorb xchg shlb xchg subl or xchg or (bad) mov (bad) xor rcrl rex cmpsb or add rex.WX xchg jp mov mov mov ficompl push movabs retq rex.RXB fisttpl cmp lods cmp mov (bad) fcomi (bad) stc jmp xor (bad) nop movabs (bad) mov fdivr lea xchg jl imul movslq imul mov cmp gs insb mov rex.X xchg int3 mov or pop imul pushfq add cmpsb mov xchg movabs push jl jae,pt mov stos and scas insl pop pop xchg lret and jmpq retq movsl (bad) and xchg or mov imull scas movsl popfq (bad) (bad) (bad) mov pushq mov lahf ja push fwait neg pop pop mov test pop (bad) in xor (bad) (bad) sbb sub and lea push (bad) push sbb jae adc mov addr32 add mov out sbb xchg jno jle kmovw gs jne rol sbb cmpsl mov (bad) pop enterq (bad) clc adc and test nop pop push push jge jns rex.X mov nop push popfq movabs push and adc rex.R (bad) mov movsb scas xor clc pushfq sarb jmp (bad) stc mov xchg rex.RB jbe icebp pop jno lods pop movabs movsb or iret mov movabs jge fwait pop out xchg hlt mov cwtl rex.RX xlat stos ja std add fist hlt push cmp movslq sarl xchg cli or insl rcll enterq xchg adc sub rex.RXB retq sbb icebp mov or callq xchg push movsl icebp test callq push mov (bad) or out mov loopne pop in xchg xchg (bad) rex.WXB sbbl push leaveq mov sbb adc in neg (bad) rex.WXB fwait stos rex.X or outsb xchg jmp fcmovne add xchg mov (bad) rex.WR ss mov add (bad) (bad) (bad) stc clc fsubrs iret lea movsl pop pushfq addr32 jmpq mov rex.XB fwait xchg movsb push fisub notl adc mov sub sahf out mov xor out insb sar loope push xchg sbbb mov (bad) (bad) pop xlat rex.WX rex xchg mov jge lret nop xchg std sub or lock push fcoms movabs jbe cmp (bad) lahf fs xchg gs xor jp or sbb movsb mov imul rex.WRX leaveq or lods (bad) xchg cmp rex.W in xor shrb cmpsl push pop imul callq mov (bad) add imul sub movabs stos pushfq lock jg rex.WR (bad) (bad) cwtl ss shll jns pushfq (bad) pushq adc nop pushq xchg and (bad) and je rex.WRXB movslq (bad) fidivrl xchg cmp xchg push mov movsl lods sahf sub incl mov fsubs mov jnp or out mul jae add adc incl imul (bad) push pop xor loopne xor xchg in loope loopne rex.WRB jnp push popfq (bad) or sub fisubl xchg nop xchg cmp jl fstpt jle push cmp sbb (bad) loopne sbb adc (bad) ds sbb pop jge jb xchg int (bad) rex sub sbb (bad) jge (bad) retq lahf movabs in mov test sbb loope mov rex.WRX xchg xchg loope fsubrl pmaxub roll xor gs (bad) xchg stc or nop popfq pop subl rex.RXB xor movabs pop or jrcxz xor (bad) decb cmp sub out (bad) xchg movabs add rex.WRXB idiv out insl ja insl enterq loope retq stc rex.W rex.WXB push iret cmp xor outsl jmpq (bad) sub push pushfq in out sahf movsb rex.WRXB repz mov es xlat (bad) pop je or fs shr jmp popfq outsl enterw mov cltd lar lea pop mov xor jne adc sahf idivl rex.WR jbe movabs (bad) push jnp and (bad) pop (bad) (bad) pop sbb mov in (bad) (bad) pop test enterq sub fistl sub add xchg or je push stc and scas loop (bad) (bad) xchg outsb jnp adc jge outsl enterq jo fstpt mov (bad) mov sbb (bad) sub adc stos pop sarl mov mov mov (bad) xlat push jno xchg mov fidivl imul push in loop rex.RXB add movabs rex.WR (bad) add div mov lea xor out (bad) enterq data16 pop sbb fs fcmovbe (bad) add xchg or jbe subl xor (bad) movabs (bad) (bad) or movslq popfq fisubr lahf pushq pop cld cmpsb je sbb adc (bad) jrcxz sub in rex.RX mov fimull xchg add mov mov insb or test adc or mov (bad) sbb imul pushfq push out jl repnz rex.WRX rex.RX mov push sbb (bad) enterq xchg rex.WR xor or js movabs andb rex.WB scas cmp insb xchg pop sahf mov ja in xchg mov movsl js cwtl or pushq mov rex.RB sbbl lods outsl (bad) (bad) fwait sub (bad) rex.R rex.WXB idiv mov movabs je sarl ja fnop add xchg sbb callq cmp push (bad) add enterq xchg rex.RX inc cmp subl jno out xchg push fs jns or mul cmpsb push sbb jno xor js movabs sub (bad) sub frstor xchg or jae addr32 fimull test xor movabs mov jmp test adc inc stos pop xchg xchg mov lods push xchg xor rex.XB add (bad) rex.R cwtl nop sahf sub imul fwait (bad) cmpsb pop jnp lahf stos and movsb int rex.WRXB push cmp push cwtl or notl rex.WR loopne pop mov xchg sbb sbb test (bad) (bad) movabs mov (bad) ja loop iret cltd mov repnz shrb cs sbb (bad) rcrl rex.X popfq (bad) lret retq (bad) retq sbb stos cmp pop xor and clc (bad) je xchg (bad) sbbl mov (bad) xchg rex.WRB fsts out push add test lret insl sub fistl in retq loop sub (bad) xchg jmpq adc repnz mov (bad) pop pop retq pop (bad) mov (bad) movabs cwtl scas movslq js pushfq fwait int sub mov (bad) (bad) cmp xor mov stos out (bad) xchg rex rex.RXB rex.WRB xchg or test popfq (bad) cmc fidiv retq mov gs and in fcoml jmp adc jbe jle jp fs pop pushfq sub test rex.WB lock movabs outsl stc jmp movsb jnp push fisttp lret xor add stos jne jl mov jg cltd icebp cmpsb (bad) rclb pop jae popfq cwtl addb (bad) imull add movabs sub (bad) rex.WRXB gs jrcxz sbb mov xor movabs ds xor sub sahf shl (bad) rex xchg (bad) push xlat mov mov jb adc fcoml shll stos xchg xchg xchg lret mov rex.X repnz loope sarb xchg retq adc cvttps2pi mov lods mov out int ficom mov imul and stos adc sarb or (bad) sub xchg outsb cmpsl adc mov jmpq xor xchg rex.R push fstp icebp callq cmpsb mov cmp jmp xchg js movslq insl rex.WXB (bad) rex.WXB xchg out lods rex.WRB lods cmp mov rex.R sbb out xchg (bad) mov xlat mov mulb jne xchg adc lret xchg mov mov adc (bad) fildl jl fsts pushfq adc ficomp and (bad) sbb iret mov sahf movabs sti outsl xchg xchg cmc mov fcomps cmp push rclb movabs xchg sub imul outsl (bad) jp mov xchg callq rex.XB sub push retq xlat jmp cs add xchg and gs cwtl (bad) (bad) sub pushq fucomi rex.WR movsb repnz (bad) test add fcoms lahf gs (bad) mov fsubrs adc fs xchg pop gs mov or jmpq movabs xchg movslq cs mov xor callq sarl xchg (bad) mov cwtl sarl lods (bad) imul mov mov push rex.WRXB (bad) xchg mov sbb or movabs in (bad) int gs add (bad) (bad) test jrcxz and cmp xchg (bad) fwait in jg xchg imul mov pop xor sahf mov out testl (bad) pushq sbb retq xor nop rex.WX rex.WRXB fldt fimul cwtl (bad) cmp pushfq retq mov and xchg or mov adc rcll jl (bad) xchg mov loop xchg xchg callq cmp test jb mov jrcxz adc xchg cmpsb (bad) xchg lret xor push mov mull jg popfq fisubrl (bad) (bad) and jl mov imul movabs mov pop sub (bad) cmp jne rorl xchg ja test xchg push int3 add pushfq mov outsl fidivrl faddl shll (bad) je or int scas loopne (bad) jg sbb rex.XB mov out and nop int3 sbb idivl loopne jae xchg fisubrl retq outsl callq or mov mov (bad) (bad) outsb jb movsb movabs jns (bad) pushq add pop insb roll (bad) pushfq push xchg jp sarl adc out fucom jbe (bad) adc fwait (bad) jae jmpq xchg nop mov mov rcrb (bad) (bad) rex.RX lret scas push rex.WRX fs or pop cmpsl int3 (bad) lods mov (bad) sahf and scas pop pop xchg movabs jae pushfq push xor data16 rex.WR jrcxz xor notl fs pcmpeqd mov pop outsb out movabs (bad) cmp pop or (bad) leaveq push add sahf fiadd sbb adc orl rex.RXB movabs outsb incl (bad) xor and pop pop in or sbb mov xchg mov push jo pop mov jrcxz pushfq not sbb pushq xchg xchg in jrcxz pop xor xor jns negl and xchg popfq xchg mov cs rex.R rex xchg sub imul mov rex.R rex.WB pop (bad) xor icebp xchg and (bad) cmp lret es callq sbb xchg in rex.B cs cmp xchg jle hlt xchg retq stc xchg cli test lods jne cmpsl jne mov (bad) rex.WRXB xchg sub xlat jne fnstenv cmp insl adc ss loop fist adc rex.WXB xchg (bad) mov mov rex.WXB setnp push fistpll sbb rclb adc pushfq mov fwait leaveq rex.WX cld scas repz sbb insl jge movabs sbb (bad) cmp cwtl in jbe (bad) push lods mov loop fdivr jmpq (bad) or sub hlt xchg or (bad) fimull iret xor rex.B cltd or in fs add sbb ss rex.RXB (bad) movb out xchg xchg xadd retq (bad) jo cmp cmpb cmp xchg (bad) mov (bad) lods fucomi jno mov data16 (bad) enterq scas (bad) or or or movabs gs xchg out pushq jge adc pushfq cltd stos or mov (bad) div push fidivr mov and sahf orl pop xor js cmp rcll jns cwtl pushfq movb adc (bad) fwait movabs push cld jp imul (bad) fwait mov (bad) xchg xor rex.WRXB outsl divl and js sbb jp (bad) lea add push leaveq cltd mov popfq fcoml jnp push cwtl pushfq xor xchg mov fdivs cmp faddl popfq jb scas jg rex.WR push int pop clc sbb jno (bad) xchg scas mov fwait xchg cmp icebp (bad) cs (bad) sbb iret seto rex.WR movsl outsl lods mov mov sub pop sbb jno mov nop or sahf or out sub or cmp pop fs sub xlat rex.WRXB jge outsb lock pop pushq test outsb in rex.WX jne cmp jge repz xchg mov popq test std sahf jae scas ss rcll xchg xchg rex adc (bad) movslq jmpq rex.WRXB xchg (bad) (bad) hlt test loope js out sahf and fsubrl insb adc pushq mov jg lea ss rex.RXB sbb jp test or pop stos push cwtl jae push cmp imul adc gs mov pop xchg jrcxz xchg pop sbb pushfq mov or scas pop (bad) cmpsb jnp push (bad) mov fwait leaveq adc fistpl fiaddl fadd movabs push sti mov mov test (bad) or mov jns mov xchg hlt rex.XB in mov out xchg test cmp mov adc sub clc lret xchg es pop mov cmp xchg sbbl jnp,pt js push sub data16 (bad) mov (bad) out mov xchg (bad) (bad) mov xchg (bad) pop xchg rex.RB rex.X subb hlt rex.WXB lock (bad) lock and jno xlat fs rex.WRB xchg repz imul (bad) movsb pop retq movabs adcb sub push fimul and ja scas inc xor notl sti (bad) repz imul cmp push (bad) push out lea (bad) (bad) fwait rex.X mov or rex.XB (bad) lahf pushq rex.RXB jbe (bad) rex.WX and (bad) jrcxz adc cmpsl incl jnp out sahf xchg xor add (bad) test cmp pop xchg cmp ficomp outsb sbbl movsb lock push jne sub cmp xor and (bad) and or pushfq xchg movabs mov add rex.WRB xchg cmp fbld (bad) pop rex.R retq sub (bad) cld pushfq fcomp xor or lods cmp pop (bad) (bad) ljmp sahf (bad) outsl or lret adc sbb mov xchg flds mov callq test iret pushfq push (bad) jg movsb cmp sub addl scas loope jmp mov xchg (bad) loopne rex.WRXB rex.RB popfq cmpsb popfq mov out push rolb rclb rolb movabs fsubrs lock push sub addr32 jrcxz or push pushfq incl (bad) (bad) push pop in (bad) pushq or mov (bad) mov (bad) or movabs (bad) adc cmp addl xchg std sbb stos mov (bad) rex.WX sub mov mov adc insl cli jns loope loope (bad) (bad) movabs lods and sub ja retq insl sbb scas xlat jnp movabs fadds cs mov xor addr32 (bad) test mov rex.WB cmp or rex.WR jb rex xor mov fistpll xchg (bad) (bad) pop xor mov adc (bad) xor js loope xchg sub (bad) (bad) jge mov (bad) rcrl shlb imul movslq insl fistl (bad) push fcomps add movabs mov retq xchg rclb (bad) sbb addr32 mov scas (bad) retq mov and (bad) and rorl xchg jbe mov rex.WR jp cmp mov mov sub lcall mov loopne or cmpsl pop hlt decb (bad) adc mov (bad) add (bad) (bad) test gs (bad) (bad) ficom and out jbe jnp (bad) cmp pushq (bad) xor lods (bad) sahf lea (bad) and repz loop loopne mov jb lea jg (bad) cmpsl xlat jl (bad) rex.WB xchg xchg ss cmp (bad) or xchg (bad) jns out in repnz (bad) xchg lock imul xchg or sub sahf xchg movabs (bad) rex.WX rex.B (bad) mov mov scas popq rex.RX xchg add mov rex.XB (bad) fldenv loope push mov rex.RX addr32 add notl mov pop xchg std push (bad) out sbb loope jrcxz cltd jb retq xlat cmp mov fnsave cmp rex.WB int3 (bad) out rclb rex.W rex.WRX jb sbb int in add gs js pushq jbe stos (bad) in mov rex.XB rex.RX sub fs (bad) rex.W rex.WR rex.RB jns pop add add (bad) lfs pop mov cwtl clc idiv add rex.RXB out mov data16 sbb fdivl stos (bad) mov int sbb jne jmp (bad) cwtl adc cmpsl (bad) xchg mov (bad) imul xchg rex.WX and (bad) sub nop mov xchg xchg and add stc addr32 add push div stos gs xchg rex.RXB ss popq (bad) int fstl js (bad) cmpsl xchg and movabs rex.RXB add addr32 mov (bad) (bad) jne addr32 xchg lret movabs jmp stos mov imul nop mov pop lret (bad) int mov or scas mov (bad) (bad) xchg enterq loop fs push jnp leaveq imul xor adc lods push push (bad) movabs mov (bad) ficomp ja movabs test rex.WRB (bad) rex.WRXB sahf sbb outsl (bad) pop popfq sbb retq movabs jo (bad) ja xchg fldl (bad) sahf stos lods rex.WR push cs mov nop pop mov in xchg pushq mov (bad) or mov mov (bad) sub (bad) push jo fldt fildll jo mov mov cmovnp and sahf pop setge sbb (bad) stos xchg iret mulb (bad) es int3 jnp (bad) stos xor outsb rex.WRXB sarl (bad) and (bad) (bad) out movslq jp jmp rex.WX rex add and mov pop jg rex cmp shlb test sbb lret mov repz testl leaveq out callq movsb pop (bad) rcr xchg jrcxz mov rex.X push mov cwtl (bad) out retq nop adc (bad) (bad) mov mov add mull pop adc jge imul or jns popfq jne xor lahf rcrl add or xor (bad) rex.WX xor (bad) outsl test addr32 rex.WB rex.WRX pop cmp add pushq or addl push outsb cmp movabs (bad) sbb sahf adc (bad) sub cmc add cmpsb xor jnp shll (bad) xchg (bad) (bad) jb and lea push jg mov sub nop lret lahf xchg pop (bad) sbb mov add or cltd cmc (bad) pushq out (bad) mov (bad) (bad) (bad) rolb or mov push rex.WXB (bad) xchg fs faddl lods jg sti (bad) xchg pushfq or add mov (bad) out pop retq xchg mov jg (bad) imul sub popfq or (bad) ja bnd fcoms lea rex.X pushq lock pushq (bad) sahf xchg frstor pop out popfq cmpsl movhps cmpsl retq pop in lcall (bad) (bad) xchg (bad) xchg icebp vpshlb jo stos rex.X add xchg leaveq mov in push test negb scas rex (bad) cmp (bad) xchg mov adc loopne jrcxz repz leaveq or xchg outsl fmull xchg mov sbb xchg test push pushfq sub nop movabs cltd mov and sahf xor movabs sbb lret rex.WRXB rolb jp xchg fwait push pop add (bad) lods rex.WXB jg jae iret in push xchg test and add rex.WB movsl (bad) out (bad) in gs rex.WX add andl sbb sub neg (bad) mov mov out xchg jl sti in cmp test add pop (bad) int3 mov div fdivs (bad) outsb sahf nop scas fisubrl and and mov xchg mov addb loope jno out cmp sub mov test fwait cmp xor adc mov movabs rex.WRX (bad) lret fidivl cld xlat xchg cmp lods mov adc mov jge cmc loopel (bad) stos lret (bad) data16 xchg cwtl add (bad) movsb movslq jnp rex.RXB fdivrl xor popfq fstp xchg or jmpq addr32 sub outsl out outsl adc xor clc pushfq mov fcmovnbe mov rex.WR (bad) jb xor popfq jns (bad) pop mov and (bad) jae in (bad) in lcall adc ds fs or cltd jge or xchg sbb stos jne enterq int3 sahf push xchg xor jge mov sub mov movabs adc push pop xor add mov (bad) cld (bad) xchg sub pushfq lahf (bad) pop jns push jnp xor test insl imul pushfq mov jne imul notl (bad) add xchg mov cmp (bad) cltd fimul jmp mov ja (bad) rex (bad) xchg rex.XB ds mov insb xchg pop add pushq (bad) xchg adc stc je xlat rex.WXB add retq cld lea hlt push sti push ja (bad) mov cmp rex.RX xchg mov pop and movabs add jne sbb adc lret pushq mov in add (bad) and jne jbe push mov (bad) icebp rex.WRB xor (bad) adc insl jl xchg add scas out mov out sbb (bad) (bad) rex.W movslq test and (bad) mov clc scas rex.WR cs cmp and (bad) (bad) lret gs fldenv pop adc insl and xchg xchg jbe insl mov imul mov addb stos (bad) or pop xchg jo int xchg callq outsl mov (bad) rex.XB std cmpsl in retq xchg sbb adc sbb mov sub mov push data16 (bad) (bad) fldl pop cmove push jno repnz mov (bad) rex.WXB and mov pop mov mov or (bad) subb sbb add adc xchg lretw scas cmp pop sub mov xchg jno adc jne xchg iret rex.WXB rex.WRX movabs popfq xor rex.X or xchg test or push rex.WRXB xchg mov mov (bad) (bad) movabs and or pushfq sahf mov adc mov push mov gs xchg add insl leaveq (bad) sub pushfq xchg and add xchg rcrl (bad) adc divl enterq xor movsl out fadds xchg (bad) fisub adc cmp frstor nop sbb mov xchg push and mov test or cmpb xchg sahf (bad) mov callq pushfq imul mov sbb scas test (bad) test cmp (bad) adc xor pushfq fsubl shl rcll and xchg in push (bad) ljmp or mov rex.W mov and rcrl push mov (bad) ja xchg xchg repnz cmp (bad) or jns adc cmpsb notb scas rex.XB rex.X xchg rex.RX add mov (bad) xchg int sub pushfq stos lock (bad) sbb movabs and push push (bad) rex.XB (bad) ja (bad) addr32 mov movsl (bad) jnp fistl or rex fldcw outsb lret out xchg and mov fs addl fisttpll (bad) mov sarb movsw jg sahf stos stos push clc (bad) xchg xchg add jrcxz lret mov xchg hlt cli insb rcr (bad) imul leaveq out retq (bad) lret sub test rcrl mov (bad) rex.RX adc mov rex.RB cs jnp scas rcrb rex.WX mov sbb cmp (bad) jbe orl adc jmp xchg pushfq cs sti shll outsb and pop out data16 imul lods and nop sbb push fstps (bad) out sub (bad) scas cmpsl jg fiaddl (bad) maxps (bad) jbe (bad) sbb or (bad) (bad) xor pop popfq and (bad) jnp pop mov xchg pushfq xor or xor sub es out loope (bad) rex.WXB rex.WRB and rex.WR mov lock (bad) cs mov jrcxz (bad) xchg jmpq xor retq ds rex.WRB ja (bad) lods rex.WXB push (bad) je jne out adc cmpsl (bad) repz mov (bad) sub fninit imul add cmp lods (bad) push in jnp nop outsl (bad) stos stc push rex.WRXB movsl jp pop (bad) jbe jnp mov movabs mov mov push pushfq rex.XB or add xchg lea std mov loope hlt movabs (bad) popfq movslq shrl push hlt test rex.WB movabs fs (bad) (bad) or xchg (bad) (bad) jno pop sub sub gs out mov xchg sub (bad) jno push nop loopne fmull push test callq and mov sar cmp (bad) lods int3 xchg mov pop (bad) mov xchg jg (bad) fsubrl rex.XB movsl sub xchg add mov sub (bad) movsb cltd sbb loope fcoml icebp loop mov scas add mov (bad) (bad) std cwtl mull int3 sarb ja pushfq xor icebp push enterq pop cmpsl fwait lahf (bad) pop adc and retq push mov rex.WRX out (bad) jp (bad) cmp insl mov leaveq rex.WB adcl jns jrcxz icebp jnp mov cltd (bad) pop add movsb cmpb jo pushfq rex.RXB xchg add push fcoms (bad) lret sarb movabs stc fnsave and lret rclb jne or repz cmpsb (bad) stos pushfq lods cltd sub jbe or out ss cld (bad) (bad) sahf sahf push rol (bad) divl adc jle (bad) or jns decl xchg es rex.W (bad) mov (bad) shrb sub pop jge (bad) enterq sub pop cmp movsb rex.X rex.WRXB retq rex.WR cmpsl or sbb xor cltd fcoml ja push cmp rex repnz idivb xchg sub add imul (bad) ds rcll sub fistp add retq (bad) xor rex.WX rex.WB fsubs jrcxz fsubp (bad) xchg out cwtl insl gs in (bad) sbbl scas xchg in sub insb stc cli sbb cmp and xchg faddl fs lock jno pushfq jnp je mov (bad) fdivr jbe out cmp subps push (bad) out mov in loope notb mov sbb (bad) shl (bad) xchg cmpsb jl stos jb sbb xchg (bad) adc push idivl fsub jbe or xor rcrb notl retq mov int (bad) push adc (bad) fwait push (bad) (bad) imulb cmp insl jae (bad) xchg xchg xchg mov fbstp lahf xchg mov mov sbb xchg lcall sbb cwtl mul push xchg (bad) sbb push pop stos fsubp movabs (bad) fsubrs int and mull cmp and outsl or idivb lock (bad) sub xchg rex.XB rex.WR adc loop jmpq add mov cld stos adc xchg (bad) scas std mov pop repnz leaveq jb (bad) ja outsb (bad) nop mov (bad) mov rex.WRB xchg test rex.WXB mov xchg jne xchg sahf or loopne pop (bad) mov pop movabs xchg mov movsl cmp hlt sbb xchg rex.WRB stos xchg sub or lock mov (bad) mov xchg xchg clc decb xchg xlat and jo mov xchg jno cmpsb test sub xchg mov (bad) push jmpq out xchg mov pop ja push and fdivrs push rex.XB mov scas sbb or movabs retq pop sahf rex.W mov push pop and sbb cwtl stos and (bad) cmpsl add xchg (bad) (bad) xchg jo xchg cs pop or rex sub movsb int3 sti pushq mov xchg pop jle,pn and xlat repz jl iret shrb rex.WR or lret pop (bad) fisubrl add shrl or jle stc xchg xor cmc ss (bad) movsl push (bad) imul add movabs xchg add loop rex.X pushfq movabs (bad) (bad) xor rex ss pushq xchg mov rex.WRB (bad) addr32 xchg (bad) rex.WXB jo jo xor (bad) addr32 (bad) mov cli in int3 xlat movlps mov rex.RX sbb jge outsl xchg rex.WB js (bad) (bad) (bad) icebp imull rex.WXB fwait (bad) outsb loop jg nop (bad) movabs cmpsl mov rex.RXB xchg callq pop stos or xchg cli jmp rex.WXB rex.WR (bad) and (bad) jp movsb mov xlat pop xchg sub adc push jno add movabs sub repnz pushq retq rex.WRXB pop rex.R xor movslq adc add mov cld cwtl lea jl pushq ss (bad) mov rex.WXB fwait shl xchg test xor in xchg xchg (bad) cmp scas (bad) cmp xchg pushq icebp jl (bad) and xchg add mov (bad) xchg sti adc mov imul (bad) (bad) mov push leaveq (bad) imul in sahf pop mov add mov cmp cld jl addr32 sbb sub or (bad) hlt pop cmp (bad) xchg (bad) or cwtl clc fsub in rex.X loope outsb js or movabs retq sub xor scas repz pushq sahf mov push icebp stos (bad) mov hlt push rex fcmovne cs add ficom sahf callq adcl pushq jle cmpsl stos (bad) cwtl movabs jno jb pop cmc (bad) mov mov sub lods mull in sbb incl orb adc (bad) sbb cmp fistpl cmp fild (bad) xor cwtl icebp fild mov (bad) jno adc xchg mov cmc sahf pop cmp insl pushq xchg pop in lahf xlat jb add int3 addr32 xchg mov lea (bad) retq xchg jns (bad) mov mov xchg jo adc mov lods stos push cltd mov mov sti rex.WRX rcll xchg mov sahf xchg lea imul movabs rex (bad) cmpsl jns (bad) pushq (bad) xchg movabs rex.RB (bad) stc scas hlt pop pop popfq popfq fcom test mov xorl negl xchg and (bad) movabs mov loop and (bad) rex popfq rcl fwait mov push (bad) add cwtl int push fdivrl jae mov (bad) push retq push iret (bad) adc rex.XB (bad) push (bad) xchg mov mov push push mov rex.RXB cmp movslq callq xchg cmc int jae jle loop ficompl rorl and mov jo insl mov ffree lods sqrtps pushfq pushq hlt (bad) (bad) stc notb (bad) xlat fild mov jo (bad) in mov (bad) sub and pop negb xchg lods and movabs mov jmp add cmpsl (bad) loop cmp xlat (bad) mov mov gs jno jb,pt rex.WX rex.RXB leaveq (bad) jmp (bad) rex.X cmpsb loopne mov rex.RX rex.W xchg sbb iret movabs repnz cmp sbb insl fidiv xchg cltd jmp (bad) xchg rex.RX mov mov movsb in mov retq or out out rex.WRXB insb sahf enterq rex.XB and cwtl xchg xchg jp adc (bad) sub (bad) mov pushfq jmp (bad) popfq out cld ljmp cmp adc (bad) pop or cmp popfq jne xchg mov (bad) gs push sar rex.RX sbb sbb ds (bad) nop jno retq rex.W movabs xchg pushq cs out loopne notb adc and push int (bad) xchg (bad) cli stc lahf add (bad) sbb jge repnz mov sub lods jmpq mov out test xchg sub in mov mov cmp rcll insb push pop rex.X rex.B xchg push add jge sub retq pushq and loop retq jns xchg sbb outsl add out and jno jmpq rex.WXB jg (bad) sub and insl adc xchg lahf (bad) int3 (bad) sti add xchg (bad) xchg push xchg mov cs xchg popfq add out sub or int3 cltd ljmp (bad) cmp icebp mov and nop loopne lahf sub (bad) scas xchg mov je (bad) cld and jg (bad) and or jle retq push nop sub xor (bad) (bad) int cmp hlt and sarb movslq stc fsts (bad) (bad) jno notl rex.X scas popfq shrl and push (bad) sbb xchg or out xchg (bad) or add imul movabs xchg sub addb pop xchg xchg (bad) fstpl pop cmpsl adc sbb jl in loopne std ja (bad) xchg pushq sub mov gs xchg jmpq push cltd icebp cltd or hlt jb fcoms icebp insb (bad) or pop outsl (bad) jl xchg cmpsb rex.WB repz or pop adc lahf std retq mov mov xchg lods xor cmpsl cmp mov pop sbbl (bad) sti in sahf (bad) fnsave push rex.WB cli pop jno (bad) fdivrl rex.WXB fisub movsb rex.RXB pushfq (bad) mov addps hlt sbb (bad) jne xchg adc callq nop cmp xor xchg js (bad) (bad) loopne outsb jl xchg and xchg mov test fnsave (bad) fcoms outsl push sbb cmpsb xchg fcompl sub cmp scas es cmc xlat xchg insl (bad) clc mov icebp fs (bad) xor xchg jne (bad) cmpl xchg or je xchg mov push cli mov xchg pop mov rorb jmp mov pop cmp xchg adc (bad) in movabs (bad) sbb push (bad) addr32 jae in push mov mov mov or (bad) push xchg rex.WX cltd pop or out xchg rolb pushfq jg ja (bad) cmc (bad) popfq (bad) cld jmp movsb (bad) (bad) lods outsb xchg jp mov (bad) pushfq cli and fisttp (bad) mov add fistpl popfq mov cltd xchg pop xchg pop jo lcall push xlat (bad) (bad) mov jp pop xrelease sbbb pop fcoms lahf (bad) movslq scas and xchg frstor xchg xchg out roll rex.RB mov subl stos (bad) cmpsl mov (bad) xchg (bad) push cli pushfq jle (bad) callq (bad) jp std jbe jns (bad) in xchg push repnz xchg cmp movabs lods gs xchg je movsl movabs mov (bad) fs cmc lahf addr32 callq movsb jnp xor rex.RXB xchg sbb movabs ja out orl mov rex.WRB xchg repz adc sbb out test mov sbb sti stos movsb je (bad) or jmp adc pop (bad) or leaveq mov pop cmp adc xchg rex (bad) add or sahf (bad) jbe (bad) int (bad) jno xorl mov sbb js sub (bad) cli nop push sub adc cmp scas jmp rex.W enterq adc sbb mov test imul loopne push icebp je pop cmp jmp in xchg xchg xor (bad) sbb xchg (bad) pop movslq test or out xchg in sti pop mov and inc (bad) cmpsl out in sub (bad) pop cwtl out lret xchg push jns movabs movabs xchg jg (bad) jl test mov adc fs fdivrp test nop mov callq xchg and cwtl test xchg fisttpl rex.W adc jge push popfq or (bad) fidiv shr ljmp in rex.WRX or sahf xchg icebp push rex.XB scas test mov xorl or and cltd stc or xor movabs rorl cmp mov movsl cld mov and xchg ss popfq sub jnp idivb fnstenv sbb push sub pop sub xchg out sarb rex.WRXB (bad) pushfq xor add xchg stos fild pause (bad) (bad) cmp rex.R mov xor push pushq mov imul xchg pushfq cli scas cltd std in xor cltd or scas (bad) int3 test xlat xchg (bad) cs xchg pop sub jnp imul cmpsb sti xchg (bad) out (bad) (bad) lods movsl add es mov cmp insl sbb (bad) clc jg mov jae xchg cmp rex.WB sbb pop movabs cmp movabs pop flds popfq ja mov cmp fisubl clc jnp (bad) fwait jne fst movabs (bad) sub push jns push add (bad) sub pushfq test in mov cwtl pop push out jno loope sahf popfq (bad) mov lret jb (bad) mov fsubrs clc xchg insl jae rex.WRB push movsb xor (bad) sub test cltd (bad) retq mov int cwtl xchg xchg retq addr32 adcb test stc and (bad) jmpq xchg adc imul mov xchg and jbe cmp lock push jge loopne ds xchg (bad) xchg movsb hlt imul cmp sbb jmp rex.WB xchg pushfq adc fimull push scas (bad) std (bad) adcl xchg (bad) xchg xchg movabs popfq int3 or sti or mov push je (bad) rex.WRXB bnd mov (bad) cltd mov fidivrl fildl or stos or retq (bad) lods loope xchg scas xchg sahf (bad) test mov insl cs (bad) in movabs stos retq rcll and jge fstl (bad) imul sbb (bad) push fmull repnz mov xchg sub and mov jmpq xchg nop stos in xor pop (bad) (bad) movabs popfq (bad) pause sti (bad) and (bad) (bad) or int (bad) jle mov mov jae mov cwtl push cmp (bad) sbb jnp movabs jb movslq ffreep (bad) rex cmpsb popfq lret (bad) ds xlat mov movsb imul or scas xchg xchg (bad) lret repz rex.RX retq push movabs popfq mov movabs ja fisttp jl jns imul (bad) cmp ja sahf insb (bad) in repz loopne push mov repnz rex.WB mov fisubl stos rex.WXB lea mov fsubrs xchg fbld mov fs (bad) lock sbbl xchg rex.XB rex.RB sub xorl lods popfq jmp je test jge push adc pop xor adc out xchg outsb (bad) mov loopne (bad) insb and xchg rex.RB pushq (bad) stos (bad) jne test loop sarb jle or cs pop (bad) adc scas fucomi mov cmp add nop imul pop (bad) in fildll rex.WRXB add pop data16 xchg imul retq mov mov jbe adc (bad) ss sub rex.RX or rex rclb out (bad) nop (bad) push jne test lods (bad) mov (bad) xchg sysenter cmp xchg fildl (bad) cmpl callq test rex.RB jnp pop pop (bad) (bad) mov rcrb fldcw (bad) sub jle mov xorl sub xlat hlt add fwait mov cmp in or xchg sbb and outsl imul push (bad) mov jp (bad) xchg pop mov pushq outsl (bad) (bad) outsl pop (bad) callq xor lods cli xchg add xchg repz xchg insb cmp in xchg push add cltd lahf (bad) adc gs mov popfq (bad) xchg (bad) and rolb sbb insb add popfq cmp rex.X test sbb out jge and repnz jge add sarl cld lahf stos xor cmpsl cwtl mov xchg rex.RXB sbb add mov nop xor (bad) jrcxz addr32 iret sbb je cmp rex.RX rex.RXB fcoml sbb rex.WX and xchg (bad) mov out imul push jmp cmp sub rex.WB es movslq outsb lret xchg mov iret jle adc mov xchg xchg cwtl sbb (bad) (bad) jno lahf xchg push out lret nop fucomp scas in (bad) xor test movabs or pop gs and icebp lock push adc sub gs pop scas outsb pop sahf jge xchg pop sbb cmpsl lods fwait xor cwtl push (bad) pop jbe push rorl sub jle (bad) icebp pop mov repnz shlb mov xchg iret (bad) fs add pushq rex.WRB ds adc xlat insb rex.W cwtl fs clc mov xchg xchg callq or sub sbb jp lea xchg mov ja loop sub pop imul (bad) add pop or idivb rex.WXB retq lret and retq insl negl adc jnp (bad) jbe jno mov jnp sbb subl jnp jne sbb (bad) mov xchg xchg jb callq lea cli (bad) pushq mov (bad) mov (bad) movabs adc imul pop loop icebp sarw fildll jne test or int mov movsl jnp push (bad) rex.X mov mov (bad) (bad) jl hlt cli sbbl outsb mov sub and (bad) fstpt xor shlb sbb mov outsl (bad) ficom stc and (bad) repnz js data16 push xchg sub mov lret jp xchg jb pushq movabs in mov pop pushq (bad) jae xchg cltd mov ja sub sahf jl xchg loopne movslq movabs push (bad) lret outsl push cmp stc mov xchg cmc rcr cmp mov movabs rex.WXB cmp xchg mov mov and popfq in fild xchg xchg rex.W adc pop sbb mov mov int in divq mov adc push xor rex.W xchg fsubrl (bad) sub and sub (bad) xchg rol (bad) xlat mov add imull jno test clc movabs push pop sbb mov xlat jge sbbb cmp stc cld cmpsb xchg (bad) adc fstl rex.W test (bad) pop clc jnp scas xchg (bad) outsl cld callq sub fs out mov (bad) xchg push (bad) sbb push cltd xchg sahf or pop in cmc loope jrcxz xchg mov lods std xchg xchg mov pop scas fcomi loop or imul and clc pushq (bad) cltd (bad) jl rcrl rex.WRX jns pushfq sbb cmp movsb sahf xlat gs xchg stos rex.WXB imul (bad) or movslq jnp sahf add rex.WXB fadds push cmp cmp pop mov mov (bad) pop sub mov jns jg rex.WXB clc sbb add cmpsl rex.WB addr32 imul sbb in movabs mov xchg adc shrb xchg (bad) ds mov outsl (bad) jle xlat mov (bad) lods sbb sub xchg fwait (bad) cmp movabs out cmpsb push test (bad) popfq (bad) stos es andb push cltd (bad) in cs xchg rex.RXB leaveq cltd (bad) pop pushq mov pop jp xchg retq in push nop rorb (bad) sbb mov (bad) xor sarb lods rex.B mov jmp movabs pop mov fisttpl sahf (bad) cmpl out mov jbe lock int fmull hlt vpshlq movabs pushq std pop (bad) mov (bad) stos lret or adc (bad) (bad) shl iret loop rex.X jp jmpq cmpsb xchg roll cmp xor mov out xchg mov movabs or add (bad) mov cmc jg pop jmp rex.RX cmp fnstenv pushq (bad) add sbb xchg xchg test rex.W movsl and enterq sub and retq xchg (bad) xlat (bad) adc (bad) (bad) pop cwtl enterq (bad) movabs divl mov pop sbb jmpq lahf (bad) mov pushq fs push icebp (bad) mov pop xor sbb in sub out fistp cmp or in mov mov jl (bad) (bad) xchg outsb int iret cmpsl fild popfq scas negb lods sub adc or xor (bad) xchg out xchg in rex.WB (bad) imul jbe xchg jns rex.B (bad) popfq and adc rex.WRXB mov movb sahf adc (bad) adc movslq xchg movabs lea xor and popfq or add (bad) rex.RB xor ja nop mov pop mov scas shr add insb mov sbb sahf retq movabs movups ffreep test rex.XB rex.W rex.W gs lods rex.WR (bad) rex.WRXB es mov pop adc subl (bad) (bad) xor (bad) or push nop (bad) (bad) mov or rex.WRB out (bad) movsb movslq xlat xorps (bad) outsl (bad) fs jnp int3 or adc and (bad) outsl cltd adc sbb decb sub (bad) rol cwtl mov mov scas (bad) fs outsl subl (bad) and data16 push adc lahf add movabs scas mov rex.WRB jp icebp iret clc (bad) mov (bad) jp jns scas jne (bad) iret psubusb jmpq (bad) cmp add xchg jb gs xor adc or scas (bad) lahf cmp nop or leaveq (bad) sbb rex.WB jmp fidivrl retq sub pop int jnp (bad) adc mov pop jb (bad) push (bad) add sbbl and sbb add mov mov (bad) and out (bad) mov (bad) insl mov cmpsl add pop fwait xor rex.WXB stc cmp sbb test fisub stos or movslq repnz mov cmpsl lcall (bad) mov pop jbe mov mov xchg adc adc adc movabs (bad) imul xchg nop cmp cmp cmp mov pop (bad) sbb xchg mov rex.WRB rex.R in cmc (bad) xchg mov addr32 iret (bad) pop and xchg jrcxz in rex.R pushfq retq ljmp mov pop movsl (bad) out repz pop rex.WX mov movabs movslq cmp frstor fdiv out cmpb jrcxz iret mov mov cwtl int mov mov shrl scas in test sbb xchg popfq rex.WRXB data16 fcompl xchg add mov push (bad) and cmc mov or retq popfq (bad) sbb std lret pushfq scas jl jp gs add in sbb hlt div jmp mov jno jp (bad) gs mov leaveq data16 pop sbb or fildll rex.WRX mov cmpsb mov pop push jge in or in movsl jns sbb insl rex.WRXB (bad) rex.WRX mov mov fucomi add callq jne pushq mov jae pop pop lods and (bad) rex data16 sahf add clc cmpsl je mov retq mov add mov mov rex.RX (bad) cld mov popfq pop cmp mov rex.WRXB lea mov (bad) or pushq pushq mov popfq pop leaveq pushq loope out pop add rex.WRX xor rex.XB (bad) fldt movsb (bad) leaveq mov rex.RXB addl push and sub lret (bad) shrb (bad) (bad) sub jns (bad) testl icebp rex.WR add std movabs sub movslq pop push push es jno rex.WB scas push (bad) sub mov movabs mov jmp xchg addr32 and mov fcompl lea rcll pop scas rex.WR xchg jmp mov mov jg xor (bad) push loopne add (bad) jbe mov nop movabs (bad) (bad) lret cmpsl and in mov (bad) cs movsl fisubl je rex.WRX xor sub pushq sub add divb or (bad) movsb push lock rex.WRX jbe sbb stos lret lea movabs xor jne xchg nop xchg rex.WRX ds fisubl mov jl addr32 mov mov incl sbb rex.X jge rex.WX adc addr32 xlat movslq sub cltd (bad) pop xchg and movabs xlat retq scas xlat (bad) cli xorb cmc lods and (bad) (bad) xor xchg enterq (bad) addl (bad) add subl adc (bad) (bad) (bad) int push sbb int3 ss rclw jle fstl sahf scas hlt xchg sbb xlat jp in jno or imul pop stos add (bad) sbb xor in add int3 imul (bad) cltd insl xchg mov and data16 mov rex.WRX cmpsl jo xchg (bad) mov sahf xchg and rex.WR adc pop pop mull sub push mov xor imul hlt movslq stos mov jge adc push pushq mov xchg adc (bad) sti test pop stos (bad) cmp (bad) xchg sbb add vmaxpd pop rex (bad) fisubr test outsl outsl and or sbb fldt adc (bad) (bad) xor jge sub movabs shrb xchg movabs mov (bad) jno xchg lahf or or (bad) retq sub xchg cmp jle lods mov xor lret lea mov xchg (bad) mov lea popq rex.R push mov lea rex.WRB in push rex.WXB pop subb or repnz add mov mov mov mov int3 (bad) or (bad) sbb (bad) mull pop lea stc (bad) (bad) cmp adc sub jbe sub xchg pop (bad) imul xchg jnp insb sbb (bad) iret fldenv and pop and nop sahf stos hlt mov xor jnp rex.R mov imul retq add or or movabs outsl adc out mov (bad) movabs push add lock xchg (bad) (bad) jb outsl rex.X cmpsw rex.WB rex.B cmpsl and fldl add mov mov and (bad) out cwtl mov pushq jbe mov xchg cld rex.WXB sub es pop xor rex.WX mov roll mov rex.WRX mov adc addr32 (bad) xchg mov ffreep jrcxz mov mov cmp fwait negb (bad) lret test xchg rcll jae,pn (bad) xchg sbb ss scas out insb or (bad) rex ja nop xlat xchg cmp mov (bad) in jno (bad) (bad) sti cmpsl in xchg movabs fwait (bad) jle (bad) xchg lock (bad) loop movabs callq ror xor rolb lahf jnp xchg mov pop xchg mov xchg mov rol pushq cli mov fdivs (bad) xchg sbb pop int sub (bad) pushq sub mov jb (bad) adc xor xchg stos rex.WXB jp add mov clc and or xchg icebp gs loope xlat and sub xlat movslq ja jne mov xor ficom outsl mov xor pop mov (bad) insb pushq and fsts cmpsb jb fcompp sub scas pop (bad) loopne adc insb jns repnz adc pushq mov mov test (bad) pop (bad) rclb rex.WRX test sbb outsb push xchg mov cmp fwait jb lahf pushfq pop sbb lods xor jl rex.R test pop movslq enterq cli fcom loop (bad) jnp adc repz rex.RX (bad) out xchg and lods callq iret xchg scas (bad) xor clc movabs push pop pop imul jp je and mov or mov xchg fst sti cmp jrcxz add sahf js adc retq fs (bad) in add insl jb sub outsb imul movslq pushfq mov jmp (bad) xor sub nop sub jae xchg fldcw sahf rex.B pop leaveq jrcxz out xor xchg mov cmp loop mov fwait cmp jb fimul xchg test mov push (bad) gs xchg pop jno hlt xchg subb mov rex.RX and mov lea movabs testb xchg outsb cmp out push (bad) adc repz mov out pop (bad) stos mov rex.WRB rex.WRX addr32 push adc loop fwait jnp loope (bad) xor cs cwtl sti addr32 jns pop scas cmpsb mov rcll (bad) cld pushq and movabs (bad) (bad) sbb xor pop xor sbb (bad) push popfq movabs and (bad) jp add add enterq stos out scas rex.XB rex.WB rex.RXB mov push test cmpsl (bad) sub setl (bad) jbe jrcxz shlb jmp jge or pop mov shlb popfq rex.B (bad) mov sub (bad) jnp xchg cld jbe out or jrcxz fs lock adc ud2 repz pushq sti ja cwtl xchg (bad) int or test sar rex.WXB sarb mov mov mov or (bad) mov rex.RB add fwait jbe mov movslq cmp sbb adc (bad) add enterq adcl sarb sub stc or and cmp sub xchg jl (bad) jg and jo push sahf sub movsb out mov outsl je fcom (bad) rex.B xchg (bad) scas popfq xchg ror rex adc xchg lahf mov adc add retq nop sti retq shrb fmuls adc std xchg push leaveq imul adc cs add xchg cmp movabs (bad) repz xchg (bad) pop lahf stos pushq cmp push bt movabs sbbl (bad) rex.XB adc and out (bad) add adc stc and divb adc jge sbb (bad) rorl and sbb es mov (bad) (bad) jae push mov adc rex.WR lahf sbb rex.WRB rex.WXB nop (bad) mov jle push sahf xchg pushq xchg imul xor jb (bad) sbb and sti rolb pop or roll popfq add lea iret pop (bad) rex lods shrl js outsl (bad) sub adc loopne (bad) or xlat cs pushfq pop fcomi gs adc pop xor insl mov (bad) sbb pushq mov rcrb fnstenv (bad) jbe sarb in pushq lods (bad) scas jmp stos leaveq lret lret jns xchg xchg fs (bad) in or retq loop xchg xchg lods rex.WXB and xchg sbb xchg add cltd sbb rex.B pop hlt xchg movsl pop fcmovb or insl rex.W not push wrmsr jbe rex.R rex.RB (bad) (bad) rcrl add add xchg int mov cmpps subl push test ficoml (bad) rcr xchg or fucomp rol ficom sahf jg imul jl xor and jnp mov (bad) (bad) add rex.RB cmp sub push pop sbb (bad) pop mov (bad) (bad) add push movsl imul rex.WX jno (bad) (bad) retq (bad) rex.WRX repnz rex.RXB movslq add test push cmpl (bad) pushq sub stos or in mov (bad) add testb mov fistpll add (bad) addr32 (bad) rorl jg and pushfq mov pop xchg popfq sub mov cli fnstsw divb xchg (bad) nop sbb movabs (bad) pop icebp (bad) pushq push jo and (bad) xchg shl and movsl cwtl in repz ja push sub movslq adc (bad) (bad) push mov sbb ja xchg lods movabs rex.WX jmpq (bad) fwait jp lock xchg addb push js xchg cmp xchg idivb scas (bad) test push pushfq icebp xchg mov and in xchg mov icebp and (bad) push pushfq rex.XB jns rex.WRXB repz rex.X (bad) ja sahf int3 loopne js addr32 cli movabs subb rex.WX cmpsl movabs mov xchg mov ja mov je rex.WRB cltd xlat xchg lods and mov (bad) pop xor jmpq jno (bad) sbb (bad) cmp (bad) xchg (bad) (bad) fdivrl cmp (bad) rex.WRB out jnp push mov xchg xlat lods mov jae movsb xchg rex.RX and rcll sub rolb sub out push (bad) out rex.XB or fisttpll xchg (bad) add push test rex.X push xor mov (bad) xchg (bad) insl mov and movsl cmp (bad) or rol sbb rex.XB jge pop leaveq lock ljmp mov cs jae xchg pop int out (bad) jns pop xchg push rex.RXB fisub lods (bad) loopne mov rex.WRXB cltd mov pop add rex.WXB adc movabs xchg sub jbe outsb push std xchg and enterq movsb mov cmp push pop fidivrl out jmpq (bad) (bad) roll out xor mov movsb sub addl pop sub out cmp mov jnp in xchg jb and push xchg movabs mov (bad) xor sti xor pop jmp mov jnp xchg imul pushfq (bad) movabs mov cmpsb (bad) xchg rolb xchg ss and sub xchg mov movabs mov pop mov repnz and sbb sbb jmpq repz cmovs (bad) xor es adc xor add (bad) mov rcr pop push jg mov adc (bad) callq mov jne fstl adc rex.RB popfq (bad) iret cmc jmp (bad) idivl sbb or outsb xlat cmp jne or mov cmpsb xchg pop loopne sarl xchg pushq lods xor (bad) scas int cli push rex.WRB cmp jrcxz or (bad) cmp in jmpq (bad) rex.XB out adc xor and out cltd rex.WRB divb in movb fdivl sub loop mov mov and (bad) xor mov (bad) adc mov adc repz (bad) xlat push andb js sub gs cmp pushq sbb jg cmpsl scas mov push (bad) jnp cltd xchg retq xchg fs in cli adc loope (bad) sbb insl sbb in pop sahf mov (bad) fildll int3 or xchg jns out and sub add fcomps movsl (bad) rex.X xlat mov pop add (bad) loopne sbb (bad) std test mov xchg add xchg xchg sahf mov xchg or movabs rex.WRX sbbl push xlat int3 xchg sbb mov callq jae or xchg cwtl xchg bnd pop mov (bad) sahf (bad) push xor push (bad) xchg (bad) je hlt push repz jbe mov (bad) (bad) pop rex.B in sbbl (bad) sbb imul mov xchg mov imul sbb and lods xchg movabs rex.WRX ja,pn (bad) (bad) leaveq rex.RX push (bad) mov jrcxz or and in in rex.WXB rex.WRX sbb cmp xchg pop (bad) cmp sbb mov sub data16 (bad) pop rex.XB shl xor (bad) xchg mov je xchg (bad) leaveq fucom and rcll (bad) cmpsb sbb (bad) (bad) loop (bad) repnz xchg sti adc xor cltd stc mov (bad) lret pushq cmp pushq (bad) and rol xchg cwtl pop js imul loope rex.WRX lock push adc data16 rex (bad) out xchg xchg enterq (bad) rorb sahf rex.WR cmp imul cmp (bad) and cwtl test imul ja in mov ljmp movabs mov jp insl repnz test mov out scas or test repz rex.WRX leaveq xchg iret test sub (bad) rex.WR sbbb nop mov (bad) outsb stos fcomip cmpsl or int pushfq jns jmp sub (bad) repz (bad) out (bad) (bad) rcrb adc mov sbb push sahf int3 andb rex.WRXB ja mov outsb xchg in rex out ss (bad) mov xchg je int jbe (bad) xor mov xchg sbb or hlt (bad) jmpq rex.WX xchg xchg (bad) xor (bad) xchg (bad) mov rex.R jbe push sahf sub faddp notb jnp insb xchg addr32 sbb and (bad) pop (bad) jnp cmpsb jge xchg (bad) xor xchg sub sub (bad) ds add xchg sub sbbl (bad) in push xchg or mov jrcxz rex.WX (bad) xchg cld je sbb ss repnz adc (bad) gs xchg scas insb (bad) xchg sbb cmp (bad) pop pushfq xchg cld sbb push mov mov mov jb jnp cmpsb (bad) shlb repnz cs sbb jge pushfq rex.X in movabs testl repnz ss xchg xchg sarl gs movabs movsl (bad) notl and fildl sub mov js test data16 iret add nop (bad) orb sbb rex.WR fstpl sbb cmp loope add cmpb jno push xchg popfq (bad) push (bad) ja rex.WB test imul xchg adc mov xchg stc xchg (bad) sub shl sahf sahf cmpsl ds (bad) sbb cmp (bad) (bad) mov in stc movabs loope imul lods and fdivs adc ja jge sub adc sti sub rex.RXB rex.XB pop adc xchg pushfq test add add mov xchg rex.WXB push xchg lret sub and (bad) hlt rex.XB imul in jl xor fs jb sahf lods lea mov fild push shrl cmpsl ds rex.WRB jg (bad) push retq mov mov xchg loop stos mov sahf xchg enterq (bad) xchg (bad) sti rex.RXB and fsubrp out xchg rex.R outsl add cmpsl gs in leaveq movslq shrl mov loop xchg rex.WX xchg xchg jp ja (bad) callq std push sub rex.WRX leaveq xor cmp maxps repnz movsl imul or int3 jg,pt (bad) push xchg movslq (bad) setbe retq mov retq pop xchg sahf push rex.WRX shll sahf shll rex.RB xor xchg jns imul in sbb stc fimull pop adc mov (bad) movabs push rex.X jne ja pop std cmpb lea scas movabs sub movslq cmp sub mov xor cmp out mov sahf test sbb cwtl and je cmp mov xchg icebp test (bad) pop cmpsl mov sub xchg push cmp popfq xor pop sbb outsb test mov cld xor gs mov ja cmp ds rex.B xchg nop sub (bad) (bad) mov imul xchg pop or xchg ds rex and (bad) int in mov sbb jle mov xchg frstpm(287 js (bad) mov movntps fwait (bad) rex xchg (bad) jle push icebp pop popfq out clc ror or lahf pop roll (bad) (bad) push adc loopne xchg mov mov repz callq push jge pop lret rcrb pushq mov push out jge xchg sbb (bad) ja xchg and in pop cs xchg retq cmp jne (bad) xlat cmpsl (bad) enterq addl shrl rex.RXB leaveq movabs adc out add xchg fdivrl cmp or (bad) (bad) cwtl add jmp (bad) (bad) lea (bad) stos hlt (bad) and and sahf in shlb out rex.WRXB movabs cmpsb outsl xchg push cmp (bad) hlt sbbl xchg test sub lret in cli (bad) xlat sahf or mov in jge jp xlat movslq jg adc mov (bad) xchg sub (bad) jle cmp xor sarl and rex.WRX fdivs and scas adc mov cmc xlat movsl rex.WRXB data16 sub add sub movabs or in xchg fistpl rex.WRXB (bad) cmpsl mov sub jg xchg (bad) sub and rex.WR mov loopne (bad) xchg rex.RX rex rex.WRXB movabs xchg insl in mov push cmpsl cs outsb mov mov push sub gs xchg enterq jb or (bad) pop (bad) mov and out xchg insl adc and cmp mov cld sub jbe pop and mov out pushfq (bad) mov push adc mov lahf and (bad) cmpsl gs imul and xchg fsts (bad) mov xchg adc (bad) gs in js pushq adc cmp test and callq mov jnp movabs rex.WB xchg sub rex.WRXB pop movslq sbb jg movabs xlat retq or xchg rcrb mov pushfq cmp push add movabs mov retq nop (bad) int jle,pn sbb sub xchg (bad) (bad) lea rex.R movabs jae in test (bad) or and jle xchg adc in leaveq (bad) movsl nop xchg retq movabs pushq (bad) rcrl movsl cmp callq outsb (bad) mov (bad) sub push clc rex.WX mov mov xchg mov notb je hlt mov in xchg subl ja (bad) (bad) test jnp out xchg (bad) (bad) nop sub or mov and (bad) jb in (bad) cmp push cmpsl sbb jo pop orb movabs and mov (bad) rex.WRX cli sar jg test mov (bad) xlat xor xlat lods (bad) mov add movabs add push out push rex.X (bad) cmp (bad) (bad) (bad) (bad) pop lahf movsl frstor retq stc push data16 or outsl cmp sahf outsb pushfq cld and movslq (bad) pop adc mov enterq (bad) lods or add fsub (bad) int (bad) mov and test jb lahf jns (bad) push pop xor jmp movabs cmp sbb nop callq sbb and (bad) repnz (bad) cmp shlb rex.WR fistl adc lods mov fwait sbb or sbb rolb or lahf xlat out loope sub je (bad) adc rex.RB rex.RB mov mov push enterq jo pop rex adc jmpq or adc outsl sub retq (bad) mov or ds jae pop adc push (bad) cltd movsl rorl sub callq mov rclb rex.RX rex.WRB ss scas add adc nop cmp negb rex.WRXB rex.R nop (bad) (bad) mov lret scas (bad) testb adc iret xchg idivb and xor fs sub sub (bad) (bad) cmp je cmp pop xchg mov mov pop cmp sbb (bad) movabs sbb (bad) cmp adc (bad) jmp add xor (bad) cmp pop movabs lret xchg cmpsl rex.XB rex.WRXB sbb sub jrcxz rex.RX fs insl (bad) or jb add sbb add (bad) jns lahf rex.WR mov xchg jmpq lahf nop shr xor sti mov mov cmp jns (bad) or gs and pop sub rex.WB retq xchg (bad) xchg (bad) jb popfq divl push fs xchg (bad) pop mov cmc cli jge rex.WB mov add xchg lock push xor imul sub add stos adc leaveq je (bad) int test xchg lods insl hlt icebp xor rorb or outsb mov (bad) in adc pop mov lods xchg jns paddusw (bad) xorl ja dec xchg xchg stc scas cs out notb adc or out (bad) in stos lret (bad) (bad) nop shlb push fldcw int (bad) icebp xchg mov mov (bad) pop rex.WRXB adc (bad) sub push mov (bad) xor sti add and in xchg xchg addr32 rex.X lock rcr (bad) pop mov xchg pop cmp cwtl add mov test movabs (bad) scas enterq lahf fwait movsl iret pop xlat clc add (bad) mov movabs rex.X repz (bad) sahf (bad) lock xchg mov xchg mov mov movslq xchg mov lcall rex.WRX test int3 xchg cltd rex (bad) jns pop cmpsl notb xchg jmpq rex.XB rex.WRX xchg imul (bad) (bad) xchg sbb movabs sub add iretq cs xlat addr32 cmp jo jne iret adc rex.XB data16 lea jge (bad) imul add enterq mov jmpq mov es test insb add jg imul pushfq xchg sbb test mov push jmp in gs sbb mov mov (bad) pop xor loopne retq mov (bad) pop orl (bad) scas (bad) xchg callq (bad) and push jl xor int3 mov add out movslq and add rex.X jl sbb ja (bad) movabs (bad) loop sub mov sahf adc mov imul cmpsl nop sub cmpsb mov or mov or fnstcw lods (bad) jbe test movabs or imul mov jmp jmpq (bad) addb (bad) xlat js sub xchg (bad) pushq fisttpll jns xchg jl (bad) stc (bad) jg (bad) xor imul cmpsl loopne test (bad) cmpsb (bad) andb xor cld cmc test callq test sahf (bad) sub lret jg iret clc xchg rex.WR mov jns push jne rex.WXB jo nop adc (bad) pop movslq rex.WRXB xchg mov jae lods xchg movabs test xchg mov pop cmp sbb (bad) incb jrcxz xchg mov rex.X xorq mov jno mov stos xlat pushq rex.XB pop xchg sbb adc outsl xchg cs sub rex.WRXB (bad) pop or outsb mov movabs sti imul rex.WRB rex.XB xchg push mov add shll xchg rex.WR xor cltd cli jno or fdivl xchg (bad) mov jne je movslq repnz (bad) movb adc cwtl int cmp test or popq sbb lret or jnp (bad) movsl sub rex.WRX pop cmp enterq rclb xchg sbb jg shlb callq adc push adc (bad) callw test insl jmp sbb vunpcklps rex.WX (bad) pop jbe roll mov lahf rcrb addr32 adc cmp ss jae xor sub rex.WX pop xchg outsb outsl rex mov mov mov fadds loop mov sbb sti xor pop add ficoml add std movsb xor rex.WX mov je pop lea test (bad) in adc movabs repz xchg jrcxz (bad) mov rcll lahf cmpsb mov clc mov insl scas mov xchg cmp rex.RX in mov sub xchg scas movsl mov cmp (bad) xchg cmp (bad) (bad) (bad) cmp lret xchg push rcrb xorl mov xchg jle rex.WB (bad) pop in rex.WRB fisubr xlat push vmovdqa cmpsb lods out pop xchg xor rex.WB or xchg rex.XB cs push mov scas mov negl movabs jo fwait xor xchg notb movsb scas xchg test test and xor jmpq xor sub enterq xchg callq and gs mov fwait (bad) sub cmc adc mov insb (bad) sbb push movslq rex.WR out repnz in xchg add movsl mov mov adc mov imul jg,pn (bad) rex.RB mov (bad) in mov in xor repz je push (bad) cli lock jnp or lahf bnd nop mov in (bad) pop (bad) gs out push mov and ja (bad) and stos push int fnstsw outsl xchg loop adc pushfq push cmp nop enterq pop sbb fcoml jmp and jnp pushfq (bad) subl mov cmpsl imul loopne mov cmp sbb jp xchg jl rex.B xchg scas add jrcxz jrcxz and rcrb in movabs pop pop stos movabs mov xchg and fsubrl (bad) jne lods (bad) (bad) xchg sbbb sahf mov or (bad) (bad) pushq fmuls xchg mov sbb mov or (bad) sub int3 (bad) rex.RXB pop xor movslq out (bad) rex.WR xchg (bad) leaveq xor movsl ja in rex.XB cmpsl lahf or pop mov xchg pop (bad) mov in pop xor jge jne or rex.WX (bad) xchg mov (bad) or jae (bad) xchg push cmp test xchg xchg callq sub sbb pop and pop imul sahf subl rex.RXB lods push (bad) mov xchg sti subl mov rcr pushq (bad) rorb mov rex.WRX ss cmovne fstpl iret fbld sbb lcall rclb cmp or (bad) (bad) stc cwtl mov pop add sub fcoml fistl test rcrb pop xchg int add xchg out jo retq (bad) andb cwtl cmp jne ja movsb (bad) in jp lock sbbb imul popfq fwait movabs mov cmp push lea xchg rex.X pushq (bad) (bad) fmuls (bad) rex.WR idivl stos mov retq and imul push rex.WRXB pop in stos (bad) push pop sbb movsb xchg std pop icebp movabs xchg stc xchg xor and xchg mov xchg out rex.XB (bad) nop jmp loopne mov mov lret xchg xchg movabs cmp sub xchg jrcxz out mov (bad) lods pop mov and sahf bts pop mov xchg pop jl rex.WRXB (bad) mov es lret xchg xor cs mov (bad) movabs jo movabs sti mov retq addr32 jle lock data16 mov rex.WRX xchg push (bad) rex.WXB clc pop pop rex.X (bad) ss popfq sbb jp ja (bad) ja mov pushfq jno jge sbb or sub rex.XB insl rorl adc insb fbstp xlat cwtl outsb (bad) fstpt xchg xchg rex.R (bad) mov sbb fwait pop outsl (bad) adc xchg xchg rex.WRX jle movslq (bad) cld pushfq jmpq nop rex.XB in sbb lods rex.WRX rex.XB jns (bad) (bad) test fwait xor pop mov pushfq jae xchg mov xor stos pop cmp mov mov enterq mov mov (bad) pop xor out clc subb movslq (bad) loop iret pop clc mov int3 (bad) (bad) push (bad) stc or xchg fimul rex.WB xchg xchg push add jl jbe sub cmp jmp (bad) adc (bad) notb xchg pop pushfq pop push push shrl mov and sbbb ficompl mov cld pushfq (bad) pushq mov pop (bad) xchg add divb mov and mov mov rex.WRX xor testl scas clc jnp xchg xchg xor movsb out xchg ds (bad) jns fadds push in mov and lea loop sbb xor pushq out (bad) stos out cmpsb sti rex.WRB rex.RXB adc (bad) mov xchg movabs or (bad) mov (bad) sub in fcomps sub lock mov (bad) movabs or mov js add movabs negl mov cmc out xchg and sbb (bad) rcl mov (bad) or movabs adc (bad) xor outsb movabs rex.WRB pushfq (bad) imul cmp sbbb jae lock cmc xchg pop or or fsubs (bad) insl jmpq or xor rcll iret sbb (bad) movabs jl xchg cmp (bad) xchg xchg sub push sub cmp sbb pop (bad) sbb ja pop cs cmp jb pop ds and (bad) pop test sbb rex.W mov fwait test repz out cmp movabs push (bad) mov (bad) repnz sahf fs cmpsb adc addr32 adc add add pushfq push enterq or sbb fwait xchg push xor pop xchg fcoms cmc movsl mov setle fidivr xor insl out pushq pop mov sti and icebp pop lock xchg out fsubl subb add and ja fidivr cmpsb (bad) lret lea cmp xchg jb fdivp xor stc fstpl and jle sahf add out orl sub rex rex.XB ds pushfq scas (bad) mov cmp (bad) rex.WRXB enterq pxor pushq xchg fimull rex.W rex.RX rex.X cmp sbb xchg (bad) mov (bad) and push xchg outsb (bad) xchg clc jae pushfq cld push xchg mov rcll movabs push (bad) pop (bad) pop out rex.WRXB or mov push cwtl in xchg pop xor in sbb jge adc sub in rex.R rex.WX movsb retq and (bad) pop leaveq loop shrl outsb movabs push jg mov fsts lret fiadd data16 adc rex cmpsl scas movabs cmpl hlt mov rex.RB cltd xor jmpq mov loop pop jmpq cli (bad) pushq movsb fisttpll (bad) rex.WXB rex.WB negl (bad) (bad) pop push rcl (bad) push sbb rex.XB xor (bad) (bad) icebp fimul mov xchg rex.RXB mov test mov mov test (bad) mov test mov (bad) rex.RB fildl xchg lret psubd imul jmpq (bad) xchg jo sahf add xchg in mov (bad) jmp xor add (bad) lret in (bad) xchg jrcxz jmp leaveq fistp mov rclb cmp test rex.XB xchg xor sub adcl xchg or xchg mov shrl movsl lret (bad) pop movslq mov nop retq or push xor mov movabs (bad) pop nop jb or rex.WRXB push (bad) and lods sarb xchg sub or data16 pop cltd mov xchg movslq in retq lret bnd mov (bad) xchg (bad) mov add pop icebp movabs push mov or add (bad) xlat cltd test scas callq jnp (bad) movsl in (bad) mov xor rol and rex.W ds add pop push pop adc or scas sbb or loop div cwtl es xor and (bad) mov pop or callq and (bad) add rex.WRXB addr32 pop xchg pop rex.WRXB pop mov adc (bad) cli push cltd mov rex.X and (bad) xor ficom (bad) sti (bad) jmpq xor fs sahf addr32 push pushq cmp movabs (bad) xchg (bad) icebp pushq out mov jbe (bad) adc in xchg and mov xchg out (bad) rex.RX popfq pop sub (bad) ficoml sbb popfq test (bad) xor (bad) push cmp adc (bad) sahf (bad) fisttp jno (bad) mov (bad) loope add cltd (bad) sub rex.WXB or insl cltd cmp out fs add (bad) cmp xchg test jmp icebp cmc movsl cmp fs in and (bad) adc sti add pop xchg cltd cmpsb rex.WRXB cs jle (bad) pop push nop xor pop lods (bad) mov (bad) sub insl loop sub notl rex.WB sar callq fistl fild rex.XB (bad) pushfq sbb mov mov jae adc ja adc iretw mov or mov retq mov mov jbe rex.B cmp and fist insl (bad) adc pop xchg lahf out xchg jae sahf push (bad) cmpsl stos jmpq and add mov movabs add ds rex.X retq test int loope sbb mov push vpcmpeqb adc jne,pn sbbl push pop sub cmpsl fnstcw mov xchg push jnp mov std xchg (bad) jrcxz cmpsb fcompl push mov (bad) mov incb mov mov nop or outsl imul xchg pop pop jl and mov jmp mov shrb test jno adc rex.WR std pop sub (bad) movabs xchg int rex.WRB or mov (bad) (bad) shlb pop (bad) jno (bad) cmp jno pop popfq gs fcoms sub sub shr ds jo xchg mov retq ja xchg xor (bad) adc rex.WR popfq mov insb mov sbb pop dec xor xchg decl loope adcb pushfq mov (bad) add (bad) xor xchg (bad) cmp (bad) lock negl pop adc lahf cmpsb jrcxz (bad) mov shrl pushq jmp mov fmull movabs xor jrcxz enterq xchg jl add mov mov mov xchg xchg iret mov sub (bad) xchg rex.WX jo xchg rex.WRXB sbb sahf mov rex.WRXB (bad) cmpsb rex.WB clc xchg rex.WX insl xchg sbb imul xchg (bad) and in (bad) cwtl (bad) sbbl (bad) xor (bad) mov andl sub mov rcll loop mov xchg jmpq (bad) in xchg or xchg jne rex.RB rclb pop cmp in xchg nop jne cmp sbb rex.WX adc fldt (bad) fwait or int jo fiadd xlat add add (bad) movabs mov rcrb (bad) imul cmp add sub cli sub (bad) xchg pop pushq out clc sbbl je and (bad) (bad) mov mov sbb rex.WRB jns enterq (bad) (bad) adc scas insb (bad) js cmc or xchg xchg test cltd adcl sub pop add xor xor cld (bad) fisubrl (bad) (bad) (bad) cmc rex.WRXB (bad) in (bad) xchg mov fstps (bad) rex.X fs sahf popfq push cmpsl mov xor (bad) push jnp sbb push sub int3 jb pushq cmp (bad) pop ss movabs add (bad) jo cmp cltd jae mov (bad) stc jne pop icebp adc jle mov rex.WB cmp imul (bad) xchg mov and (bad) pop rex.RXB xchg mov push and sub xor push jbe cmpsl push pop stc (bad) (bad) negb xchg negl and sub rex.XB jbe (bad) jnp ror jge jne adc rex.RB (bad) inc repz adc jo add mov sahf and (bad) or ss jg mov loop (bad) mov fs rex.X retq outsl pop rcr (bad) push add or xor xchg or pushq movslq cmp rex.WRXB adc add (bad) idivl rex.WRXB jb xor ja (bad) add shll rex.WXB rex.XB subl pushq and (bad) (bad) or jne (bad) and or data16 movabs movabs imul sub (bad) pop sbb push nop stos and (bad) (bad) cmp gs cmpsb popfq adc xlat sbb movslq sub cmp pop cltd pop xlat sub mov xchg xor data16 rex.WRX popfq fs pop leaveq rclb (bad) (bad) scas push or (bad) imul add lock lss scas xchg fwait (bad) rcr (bad) or rex.RXB add (bad) (bad) out rcr (bad) popfq or (bad) sbb jmpq xchg shll (bad) sub (bad) (bad) xchg or movabs adc imul cmp xor roll lea pushq mov xlat loope mov clc (bad) or (bad) in rex.WRXB in cld xchg xchg lods scas cmp jae punpcklbw rex.W jge (bad) rex.WRX movsb add pushfq (bad) jo pop jnp sub nop sbb out adc jl cmc insl cmp cltd mov cmp xchg rclb imul cmp add xchg retq movslq mov (bad) mov xchg scas (bad) stos fdivs xchg jbe mov (bad) rex.RB (bad) movabs xchg shrl cmp fsub repnz adc xchg mov sbb add mov (bad) or sub xchg movabs (bad) out (bad) adc jo cli je and rex.WX mov gs rex.R mov rex.WRX sahf fbld mov xchg ficomp cld (bad) sbb lods xchg out (bad) mov ds ja cmp sbb hlt xchg std mov rex.WR rcrl mov sub xchg cs sub rex.RB fnop xlat xor std cmp jge jg in (bad) xor scas mov lahf mov movsb xchg test xchg in imull mov push test jge xchg and rex.WRX rex.X (bad) sbb (bad) fstps rex.RXB movsl add jns neg in xchg or (bad) retq int3 lahf out (bad) rex (bad) rex.WRB rex.XB sbb mov or jge mov cli cmpsb (bad) rex.WB push test cmc jle rex.WRXB gs lock mov vcvttss2si test sub jae (bad) callq out xchg push mov cmp jo xchg fnstsw mov test cmpsl pushfq mov mov pushq and pushq lahf cwtl cs rex.B movabs std sub add mov retq in sub rex.B rex.RXB rclb fld (bad) (bad) pushq in xor repnz insl mov push cmpsl clc movsl movabs xor mov movabs jle int (bad) (bad) push adc rex.WX cmp cmp cld sub imul movabs enterq fisttp divb lods add cld test jmp mov in sbb popfq xchg repnz cltd out js xchg mov stos cmpsl or xchg cltd sbb test add sub xchg mov imul or add (bad) rex.R adc rclb sbb cwtl xor mov add enterq callq (bad) nop (bad) je jp sub pop (bad) mov rex.W add outsl lods iret popfq cmpsl stos cli cmp leaveq rclb retq push jno data16 (bad) xor sti in and lods xchg (bad) jo ds xchg insb xchg push (bad) mov mov and push cmp (bad) outsl movsl sahf cmp insl enterq pop or js movabs enterq xchg pop jo out pop add pop xor imul lods sub xor cmp sub (bad) (bad) lret xchg cmp in adc xchg insl sub (bad) (bad) rex.WB xchg and in jl jrcxz push xchg jmp ljmp fstps xchg rex ds cmc and sahf cmp rex.XB jb stos movabs retq (bad) jae clc mov adc flds or movabs rex.WX addr32 sub movabs outsl and (bad) rex.RXB pop pop push mov xor (bad) cmp mov pushq fwait (bad) out loope js fstps push pop insb retq out or xchg (bad) jp xchg cmpsb push add or pop lock mov gs jmpq cltd mov retq (bad) xchg jmpq ja pop rex.WX jmp xor rex.WXB nop cld fdivl adc jno gs or lahf lea add (bad) jge imul pop (bad) rex.R sub jo (bad) loopne rcrl cmp cmpsb addl es push xchg pushfq adc mov mov (bad) (bad) (bad) cwtl add (bad) ficom int push pushq pop fiadd mov push imul mov lock rex.RXB push insb pop xchg ja sbb mov (bad) stos mov jrcxz ror scas out adcb ja imul (bad) fdivr (bad) rex.WXB in jb (bad) (bad) push xchg je sbb jmp pop sub mov ja movslq mov pop sahf out add fcmovne (bad) jae movabs sbb loope xchg mov (bad) fdivl jmp test rex.B xchg mov fnstsw hlt (bad) out mov icebp addr32 in xchg outsb fnstcw (bad) or xor pop and and pushq xchg callq ficoml test (bad) and (bad) mov movabs movabs (bad) out rex.RB sahf rex.RXB sub jno rex.RXB xchg pushfq lret (bad) orb rex.R jg pushfq out in movabs adc mov pushfq mov fcoml xchg movabs xor sbbb (bad) stc xchg cltd sarb retq mov cmp (bad) xor mov xchg push lret rorb fstpl int3 (bad) stc std push (bad) movsl shrb xchg jge push lret sti andl fisub (bad) and pushfq xchg std pop (bad) push imul repz xchg (bad) (bad) pushq jo (bad) rex.R rex.WRXB (bad) mov (bad) fisub pop jl rex.W jle movslq xchg and pop movabs pop outsl rex.WRB shl cmc mov adc hlt (bad) (bad) cmp sub adc adc (bad) rex.W xchg jno ja xor xchg pushfq hlt int3 sbb loope cwtl setbe (bad) out xchg cltd fwait test mov (bad) mov (bad) mov lods loopne test popfq (bad) rex.R adc xchg cmc xchg in repz cld imul or je lret retq xchg and rex.WX rex.WXB sub and push stos repz mov rex (bad) xchg pop div mov sar xchg rex.WRB pushfq lock push fs jle lret fcoms mov xchg rorb cmpsb xchg cmp in cmpsl lods (bad) insl (bad) lahf add rex.RB hlt (bad) cwtl sub out (bad) xchg outsl int3 pop xchg adc retq mov (bad) cli xchg movabs adc cmp jnp xchg xchg jne mov int jb cmpsl xor (bad) jge adc xchg mov xor add rex.X movslq out pop jb jbe mov es jns sarl (bad) movabs add rex.WR (bad) push xor xchg add pop fs fsubs sub xchg andb xchg movabs mov movabs mov or rex.WRX clc outsb pop sub cltd cld adc sahf insb fild rex.WRB mov rex.RXB mov push mov (bad) test mov inc mov cmp or loop mov xchg xchg and jmp lods (bad) adc or jle (bad) stos or xchg stc mov xchg and movsl mov movsb jl (bad) movabs (bad) jo (bad) (bad) (bad) nop adc and jno xor xchg sarb sarl test mov pop out movsb ja mov dec (bad) out (bad) xchg cmpsl mov sub (bad) mov ja jle jns mov sub movabs fcompl xor xchg test sbb cwtl xchg scas (bad) (bad) add jg sub xchg mov and mov xchg (bad) jns cmp mov sub fcomip clc xchg out imull xchg (bad) sti iret rex.RX test mov sti adc nop sbb test imul or imul fisttpl fs xchg (bad) cs mov out (bad) mov xor (bad) mov insl (bad) pop mov insb adc (bad) pop data16 xor (bad) rex.WX (bad) js je stos loop xchg int shl xchg shll scas mov (bad) imul adc nop xchg and add test popfq movabs fsubs jmp out mov add cmp icebp rorl xor mov mov movslq xchg (bad) add cli out xchg lea nop retq packsswb adc pop fistpl in mov data16 ss sub imul sahf fldcw (bad) stos lar js xlat orb ljmp adc mov pop (bad) (bad) rex.R mov cmpsb sti lea pop rex.WXB jno,pt enterq xor mov lea jno sbb sub (bad) jg xchg add rex.WRXB (bad) (bad) (bad) jl (bad) movabs jno mov jb xchg pop (bad) mov jnp movabs fs mov or (bad) lods cmp sub in movabs jrcxz insl jnp mov rex.RX divps (bad) or lock repz test and jl sub (bad) in push pushq add (bad) insb jle (bad) mov mov pushfq (bad) nop lea and rex add (bad) stos cmp test mov gs andl xor movabs xor jno jge ficoml pushq pop mov addr32 (bad) out enterq (bad) stc push mov jp xor sbbl jno xchg (bad) jnp movabs push movslq jae testl rex.WX sahf cmp (bad) loopne rex.RXB push es mov (bad) xchg in push test adcl (bad) rex.WRB ja (bad) outsb xchg retq rex.WRX repnz enterq mov rex fwait movabs fidivl out xchg andl (bad) lods xchg jle pop fcoms pushfq fldt jmp fwait scas sbb cltd mov mov pop jge adc mov (bad) addr32 cmc pop out mov sbb rex.RX lret xchg push rex js shlb xchg out jns (bad) push sub jg (bad) xchg cmpsb (bad) addr32 rex.W sbb cmovg loope (bad) fsubl cmp mov stos adc ja (bad) xchg stos in in idivb mov lret (bad) retq push mov shll mov xchg jne (bad) loope mov add pop mov mov repz insb jge imull rex.WX repz mov retq (bad) lahf rex.R movabs test and (bad) xlat jae xor push stos sahf (bad) out movslq nop jnp rex.XB cwtl xchg fucomp rex.R xor lods (bad) (bad) jmp cmp xlat xchg cld orb insb lret xchg or rex.WRB repnz mov rex in cli (bad) ds ja sub fld sbb mov cli add xchg xchg loopne clc push pushq callq or loop cmp fdivr loopne movabs xchg mov xchg (bad) jmpq out xchg sahf push rex.RB fmuls jno pop movslq test jp adc mov pop cmp pop out jrcxz test xchg fwait (bad) std pop (bad) mov rex.WRXB mov retq sub (bad) xlat sub (bad) sub std repnz (bad) (bad) (bad) nop xchg (bad) push stos cltd push cmp xchg ds int3 rex.XB cmc pop jg jle,pn (bad) xlat xchg pop cltd fdivl xchg fldt out sahf cmp mov cmpsb xchg push stos add xlat rex.R push pop ja sarl testl cmpsl sub movabs insl (bad) leaveq callq cmp sub rex.RXB mov mov push jb movabs xchg lret rex.WRXB lret pop (bad) mov xchg xor xor xchg or repnz cmpsb sub notl lret test (bad) callq int3 je mov repnz int3 xchg movabs scas sub (bad) lods out add (bad) iret loop loope pop (bad) xchg mov sbb sub rex.RX addr32 (bad) notl in lahf mov xchg xchg (bad) pop ja movabs lret (bad) and insb rex.B xchg cli pop stc outsb divl mov and insl insb add xor push std jge fild sbb mov jmpq push outsb sbb xor popfq pop push or jae (bad) sbb (bad) (bad) sub xor rex.XB negl loop icebp pop or and xlat xchg lret jbe cld out (bad) repnz pop sahf jle sbb cmp xchg and out (bad) fidivrl and movslq gs imul (bad) movsl add fist (bad) cli (bad) jo retq jbe xor gs movslq add sbb sti pop pushq xchg (bad) and mov loope jmp rex.XB movabs mov jbe fsub (bad) lods adcl push jbe mov add xchg fs out add ja (bad) movslq xchg test imull cmpsl retq pushq mov mov rex.R mov adc sub xchg js sahf and and cmp (bad) (bad) sahf adc int3 stos in subb movslq jnp fwait clc out xchg (bad) xchg (bad) cmp js (bad) sbb int3 cmp test cmp cltd (bad) xchg hlt cli pop (bad) subb (bad) adc popfq lods jmp add xchg (bad) mov cmp xchg fstps xchg lret mov xchg cmpsb xchg push jg jrcxz clc callq jnp add sub and pop cmpsb mov cmpsb mov and sarb xor xor cld (bad) xchg add add push mov xchg movabs xchg xor outsl sbb add stos lods (bad) movsl movabs rolb xor (bad) (bad) movabs mov jge fstpl mov ds (bad) adc mov fidiv insl add stos pop stos mov rcll lock mov or jno movabs (bad) fbstp data16 int jae sbb rex.XB push jmp andl sub testl repnz in xchg adc adc test mov add rcll add (bad) xchg cmc (bad) movsb mov (bad) jno lock (bad) add rex.WRX leaveq xchg faddl iret test push mov xchg pushq fimul pushfq cmp ds test gs push adc (bad) icebp ja (bad) loopne int sub or lea pushq pop push mov rex.WRXB mov rex.R outsl mov adc mov (bad) xchg and pushfq cmp in sti rex.WRX rex.XB mov imul in xchg movsl mov enterq sbb outsl stos std jb cmpsl iret rex xor add outsl jae push cmpsb leaveq movsl (bad) push fisub mov popfq fwait or loop mov adc rcrb stc or rex.RX (bad) movsb cs (bad) (bad) rex.X rol add js sbbq or jns xchg sub (bad) (bad) fwait xchg and xchg xchg ja movabs pop xchg sub xor test adc push sbb sarb mov and sbb pushfq cmp xchg fisubrl sarl jge loop insl sbb xrstors xchg rex.X (bad) mov jmpq sub xchg pop or in jrcxz xchg push xor rex.W adcl cmpsl retq rex.RB pop xchg cwtl (bad) in xlat (bad) lods sbb in in xchg (bad) mov push fiadd pushq fwait cltd mov xlat out scas jl rcll lret rex.R mov or int3 and loope stos push cltd clc mov pop in xchg cmp imul xchg sbb cmpsb mov adc nop retq sbb push pop je cli mov pop pushfq lret xchg cmpb cmp (bad) popfq xchg rorb xlat cmpsl rex.WRB jmp jge neg movabs fsubrs jne rex.WX jp xlat movslq jg sahf negl or mov sbb push xor (bad) jbe adc lods mov xchg insb rex.RX in out xchg out xchg rex.WXB (bad) movb hlt sbb cmpsl lret adc xchg in jg (bad) fs mov (bad) imul xor cmp cmpsb rex.X es rex.RB lret (bad) loope push shll add mov rex.WRX xchg sbb mov adc and fistp mov xchg out jrcxz imul push (bad) retq cmp js xor ja out jmpq mov rcrb (bad) mov (bad) jmp mov xchg pop (bad) or js rex.RX xchg mov (bad) xlat rex.RB fisubr subl out rex.WRXB sahf lret push mov rex.WXB popq movslq xchg mov stos outsb scas in mov je movslq test (bad) in insl push stos in sbb movslq (bad) movl mov jle xlat movabs loopne xchg sbb and sub (bad) ja and jno loopne movsl (bad) sahf fwait (bad) xor (bad) outsb xchg cmp cmp (bad) pop test movabs (bad) jae popfq lahf sub ja ljmp not stos sbb add cmp rex.WRXB mov rcr std cwtl jae and (bad) add movsb adc decb (bad) fidiv ss (bad) rex.WXB shl xchg cs xchg jae icebp add push jmpq xchg mov (bad) sti mov cmp leaveq mov (bad) movsb add test pop push cmp rex.XB sub and (bad) out rex.RXB and mov xchg icebp (bad) rex.WB rex.B lock fcmovnb nop in rcrl (bad) fmull add jmpq (bad) mov sbbl (bad) mov xchg jae rex.X rex.WRX (bad) sbb repz (bad) fidivr push andl jge mov xchg rex.XB xor mov in (bad) mov rorl sbb std rex.RX (bad) in push int (bad) lret outsl or retq movabs and shrb rorl adc xor cmpsl mov stos cmp mov pop pop idivl lret pop push pushfq mov decb mov neg cmp rex.WR insb je fisub xchg sub test mov xchg movsl adcl sub rex.WRX cmp (bad) cld xchg pop adc pop int3 mov xchg cmpsl sub push vmovdqu mov or xchg pop cmp (bad) test hlt xchg iret jp jns rex.WXB add pushfq lahf ja (bad) mov movabs and rex add movsb xchg outsl (bad) or cmp jns or push lea jl xchg adc and retq (bad) gs in fistpl mov (bad) push and xchg xchg rclb jno xchg movsb mov and stc (bad) movabs jmpq xchg cmpsl insb rex.WRXB push cwtl xchg mov and xchg mov cmp xchg sahf insb or std xchg int in outsl sti fsub (bad) sahf jmpq out xchg movslq (bad) je cld (bad) loop push cs int insb (bad) negl jmp nop stc out cli imul xchg cmp out cwtl cmp nop mov add xlat sub xchg (bad) addr32 cli cmp lret cmp pop and (bad) in out cmp xchg (bad) pop mov (bad) push rcll cmpsl movsb stc cwtl movsl mov incb sub outsl xchg repnz xor fcoms cmp stos nop jge fisubr fmul repz jnp (bad) xchg rex.WRX cmp add out xchg xchg outsb xchg xor stos pushfq vmovhps jne sahf insb xor xchg outsl pop (bad) cwtl (bad) sub mov push stos movabs or outsb (bad) in sub in int jl jns (bad) (bad) fidivr (bad) rex.WRB (bad) and mov (bad) andl jo fnstenv cwtl pop fwait jno lahf (bad) jno data16 mov and fdivrs (bad) imul and sbb adc rolb xchg pop (bad) scas sub xchg pop loopne rex icebp (bad) shrb xlat retq (bad) sub xlat imul outsb mulb lret pop or rex.W pop jmp (bad) ror lock fnstcw (bad) mov adc lret add push ja xchg sti orl push cmp push sub mov je xchg sbb lahf out rex.RX rex.XB rex.WR mov mov test std sub jnp btc mov (bad) mov jmpq rep mov cmp stos cmp cltd movslq xchg pop xchg adc fs sbb (bad) mov pop or xor scas (bad) popfq xor jle sub jnp test sub movabs mov and shlb sti lret in (bad) fisubr or lea repnz enterq jo rex.X (bad) cltd mov (bad) nop (bad) add repz movslq imul movsl hlt test sbb imul push jo loop jo std mov (bad) xchg stos xor enterq sub (bad) pop ror pushfq xor rolb cmpsb (bad) repnz jo loopne (bad) imul mov jb or (bad) adc test xor imul sub fwait mov push gs (bad) sub pop cmp xchg (bad) rex.WRXB movslq mov jge xor popfq adc mov out pushq (bad) xor rex.WX cs imul mov shll (bad) movsl outsl movb scas mov jo mov adc mov pop int (bad) mov insb add mov clc mov (bad) ss cmp outsl mov jle cmp lock or xlat push popfq jl testl rex.WRX ds rex.B xchg (bad) jbe add adc pop sarb outsl scas jne clc in (bad) movsl jbe adc fidivrl cmp sbbl xor loopne lea (bad) mov hlt movl xchg (bad) rex.WXB fs nop (bad) rex.WX in xchg clc jp jle (bad) xchg enterq decl leaveq loop jg pop cwtl ds lods cwtl int3 pop xchg loopne xchg xor icebp xchg or es hlt xchg xchg (bad) movabs add or cmpsl in pop xchg rex.WXB sahf sub cmp cwtl (bad) xchg jnp push iret (bad) cli sbb xchg cwtl cmpsw (bad) outsb (bad) jae xchg (bad) (bad) (bad) out xchg (bad) sti gs mov jrcxz fcoms movsb jmpq rex.WX js int3 pushq icebp and out rex.XB xchg adc imul xchg pop fxch movabs xchg cmp cltd rex.WRB fmul ja sahf (bad) pop retq movslq callq xchg fdivs out jg sbb sub xchg movabs push add sbb notl cmpsb or out fstl lahf sbbb test mov stos add subl scas sbb push mov xchg jl push xchg lcall insl xchg xor sbb (bad) pushfq rclb (bad) cmp or in mov pop or (bad) movabs hlt cmpl jrcxz pushq in sbb out (bad) movabs xchg rex.RB xor jg ror xchg fnsave xchg pop mull add jg xchg mov movabs cmpsl mov leaveq jmp adc rex.WX outsl sbbl iret xchg idivl cld enterq loope out xchg mov repnz fsts adc outsl mov rex.WR and jns cwtl emms xchg rex.RXB es adc xchg push sahf fdivrs fnstenv (bad) in xchg pop rex.WXB jmpq xchg sbb repz (bad) xchg push (bad) icebp sti (bad) (bad) mov popfq enterq lods pop (bad) addl jmpq adc jle push cltd xchg loop callq mov nop cltd in retq imul xchg rex.WRB ds cmp xor (bad) (bad) lret in test (bad) mov mov xchg and jne xchg mov push in pushfq push movabs callq pushfq loop stc mov jae loopne (bad) mov pop lea cmpsb movabs rcrl std xchg jne cmp mov and mov (bad) sbb xchg mov rorl (bad) in rex.R jae lahf scas (bad) pushfq data16 loop (bad) xchg stos add rex.RB cwtl (bad) (bad) cmpsl sbb push add xchg cmp lods mov rex.WX mov addr32 movabs mov jb outsl xchg pop cld jge (bad) push xor retq jo mov (bad) xchg (bad) out (bad) nop adc rex.RB push jg rclb xchg sub xchg (bad) lods jl cmovo ja loope jle rex.RX scas (bad) adc js mov fs (bad) (bad) retq add pushq or fwait (bad) insb pop fdiv xlat in addr32 mov xchg imul rex.RXB jb jmp (bad) lahf mov mov nop sahf scas (bad) jne cwtl rex.RXB iret enterq and sbbb (bad) xchg int3 fwait in jmp std xchg sbb (bad) pushq cmc scas movsl and imul jge pop cmpsb std lret (bad) cld pop in or lods and mov rex.RXB mov retq push jrcxz insl rcll callq sub or sete xor add clc sbb (bad) addb sbb in loope pushq pop (bad) xchg scas addr32 (bad) in frstor fistl and or mov rex.B std xchg jl and sti cltd mov or push movabs jo xchg and xor icebp xchg cmp retq (bad) sbbb adc sub mov or pop add mov data16 (bad) mov popfq xchg out xchg outsb or mov and mov xchg sub (bad) outsl xchg imul adcl es xor add jns xchg lahf mov rex.WRXB pop or mov (bad) retq mov (bad) (bad) xchg imul pushfq outsl (bad) xor mov rex.WRB retq xor pop in pop (bad) rex.R idiv mov insl mov jbe pop and int stc (bad) cmp adc notl mov (bad) scas or cmpsl add test test shll or rex.WRX rex.XB retq mov jbe shr xchg sub pop add xchg mov cld test js jrcxz pop pushfw jg xchg movabs and pop (bad) iret loope xchg (bad) rex.RB mov cwtl test cmp rex.R pushfq movabs mov clc test jl push movabs rex lock insb jbe sbb mov mov pop movsb mov pushfq leaveq sub adc xchg out es sub xor lods rex.WRXB rcll xchg clc repz rex.WRX and mov fwait mov sbb shl lret cwtl imul sbb insl push jnp out imul stc idivl xchg ror in add jbe sbb ds cs out pop negb sub movslq rex.WRXB rex.X xchg add pushfq (bad) (bad) jmp shrl lock and (bad) (bad) movsl lods xchg std int3 cmpsb xor jmp lock push out movabs pop cs sbb and fdivl (bad) outsl pop movabs xchg in jmp mov or (bad) out movabs mov mov xor imul mov jno adcl stos xor in nop or and (bad) push cltd vpsubq mov rex.RXB mov sarb (bad) (bad) (bad) xchg xchg jg push add rex.WXB pop pop mov sbb (bad) mov cmp stos rex.WXB cltd or jb jno cwtl mov push pop rcrl mov mov mov jg rex (bad) fwait clc add nop xchg xchg (bad) int movsb mov xchg mov sbb out jge in xchg cwtl mov (bad) gs int mov jl add xor imul sti loope movabs ja (bad) xchg hlt repz mov and or in mov jg movsb hlt jae,pt nop (bad) (bad) or repz mov xchg insl idivl xchg subb rex.X pop outsl mov mov xchg repnz or movabs loope out sbb xchg mov movabs outsb xor icebp jns,pt (bad) rcrl mov (bad) or out sahf xchg (bad) es xchg shl and xchg (bad) cmp jnp sub and add sub xchg rex.WR out mov (bad) xchg stos decl xchg test sbb xchg sti in xlat out test add pop cmpsl lret (bad) scas lahf outsl sbb (bad) fisttpll xlat cwtl mov cmp mov xlat lock inc addr32 cli sub cmpsl rex.XB rex.WXB mov push incl (bad) in mov sidt (bad) adc mov out rcrb adc pop cmp lods insl repz test cmp (bad) (bad) mov push stos sbb pop xlat testl cmc xchg (bad) mov rex.WRX test jge movabs xor sub loop sub scas sub mov fstpl cld lahf jg leaveq in xchg mov out cmp (bad) mov mov xchg (bad) data16 xor (bad) lods out xchg mov (bad) pop sbb xchg sahf xchg rex.WRX mov (bad) rex.X xchg js push std sbb fcoml int3 (bad) (bad) xchg jmpq callq sbb sub (bad) adc loop loopne cs and xchg jno (bad) adc fwait movl mov xchg (bad) cmpsb xchg in cmp rex and fnsave or jo push xor mov pop lret xchg es negb sub rex.WRB shlb (bad) test (bad) sub setge (bad) sahf jge (bad) lret sbb jl out sub movsb (bad) mov fdivrl xor xchg fsubp and xchg (bad) mov (bad) insb (bad) sub rex.W imul scas sbbb out cmp vprotb testb mov xchg xchg mov (bad) jo jg iret fistp sahf mov xchg (bad) mov or jmpq rex.WX rex.X ds xchg sub int3 insb jrcxz out sti sub jg push stos nop test or rex sbb (bad) sti rex.W out mov (bad) loopne sub cld (bad) roll rcll (bad) or (bad) loope mov sub xchg xor mov lahf mov pop adc in adc sbb jnp fstl rex fs (bad) or fist sub hlt jle sub sahf and cli cwtl test jae (bad) xchg movsl (bad) ja jge movabs (bad) out add or xchg movabs rex.R fistpl test (bad) xchg andl sub xchg fcom (bad) lahf clc jns imull fstpl cmc mov movabs pushfq lret (bad) rclb neg stos fnstsw (bad) nop repnz leaveq jrcxz test jae loopne pop (bad) add (bad) cmpsl (bad) or rex rex.XB fsubrl callq or iret xchg cmp jo xchg ss sub lahf data16 xchg scas (bad) out (bad) (bad) out cltd retq (bad) imul sbb (bad) psllw jb iret jge pop movabs (bad) jp (bad) test rex.WRX scas hlt push fidivl rex.X or fwait (bad) add adc xchg mov loope (bad) (bad) (bad) jbe adc rol mov (bad) jrcxz xchg (bad) cmp or bndldx rex.WRB std repz int3 imul mov pushq adc mov xchg or stos or push xchg xor (bad) or jbe sub sbb sahf (bad) shll rex.WXB jo cmp xchg cltd and gs (bad) (bad) or (bad) push mov mov mov or lods mov cli in (bad) mov sub push rex.RXB notl jb lahf xor pop xchg mov and rex.RXB cwtl not movslq sbb (bad) cwtl out and lahf jmp imul movabs ds insl popfq add xchg and pop or rex.W rex.RB sbb movsb sahf rex.WB rex.RXB pop js xchg (bad) int callq jo lea add pushfq stc sbb sub xor pushq push pushq (bad) jne imulb scas mov mov stos pushq mov (bad) popfq sahf popfq or loopne loopne nop adc mov pop repz xor int3 xchg mov and subl in (bad) clc leaveq movsb and add jp mov lods fwait mov xchg loope xor fwait pop xchg jl adc sub enterq insb xchg out push cld mov xchg push push jle push pop (bad) xor push (bad) (bad) jns sbb movabs jmp icebp xchg rex.WB fadds (bad) lods sahf enterq (bad) movabs rex.RB js cmpsb rex.WR sbb pop (bad) mov sub pop cmp (bad) lods push adc callq mov mov ficom rex.X icebp sahf (bad) (bad) and in (bad) ss mov fsubrl cmc xor pop (bad) rex.XB loopne sahf (bad) pop divl movslq movabs xlat rex.XB rcll mov stos mov (bad) in and (bad) lock xlat sahf add hlt mov pop scas mov jns gs mov callq movabs cmp leaveq jg int3 mov mov loop rex.R (bad) push in icebp cmp in insl add out cmpsl clc js xchg mov (bad) callq retq lahf rex.WRB cmpsb cmpsl xchg outsl test or scas jae (bad) pushq data16 mov test movabs sub test xchg test shr cld jge scas iret fwait jrcxz (bad) sbb out xchg movsl (bad) xorl lods mov xchg mov mov stc (bad) fldenv (bad) mov add adc adc push fsubr outsl lret jg pushfq xor movabs (bad) (bad) cld movsb (bad) lret repz push mov rorq addr32 jns cmpsl and fistl insl mov adc fs xor sahf push loope outsb add fild jae sub pushq xchg sti (bad) mov (bad) ja es rex.RB mov nop mov rex.WRXB (bad) sbb shl test in ds adc out (bad) mov rcrb mov sub xchg push (bad) negl xchg jae cmp xlat lock (bad) imull (bad) sbb xchg retq rex.WRB xchg fstl popfq mov jbe (bad) iret push (bad) fidiv mov out (bad) rex.RB leaveq adc rex.XB xchg enterq out fdivr xchg insb (bad) (bad) (bad) rex.WRXB fstl rcrl sahf fisttp push cli and or jrcxz (bad) movabs xchg xor stos push pushfq cmp pushfq pop mov xchg jge or test or jne pushfq rolb loope (bad) ja and pop sbb stos jb callq push (bad) cmp or lahf ds insb int3 outsl pop movslq cmp jmp xchg adc (bad) out sahf pushfq (bad) mov retq jg add ja shrb loopne imul subb stos cmpsb rex.WRB adc popfq mov fwait scas cli sub sub int insb retq shrl fist push loop adc mov add cli rex.X insb (bad) mov mov xchg outsl movabs lahf xchg fwait or mov popfq push repz jbe adc scas (bad) mov mov xchg or (bad) out popfq (bad) icebp jnp sbb ja mov push cwtl neg out add imul push loope and rex.W sbbl adc (bad) mov xchg rex.RX mov fsubs pop leaveq xchg mov xchg mov sub cmpsb adc mov (bad) cmp insl mov (bad) or lea or mov rex.WB xchg repz (bad) xchg hlt rclb xchg (bad) jge rex.R jl pop stc mov (bad) (bad) xchg (bad) scas sub add and (bad) xor fidiv in or (bad) mov jbe and or jb rex.WRXB or pop jnp sub nop sbb xchg cmp cld iret insl pop sub (bad) out xchg pop fs stos xchg pushq movsl xor out sahf jl push cmpsl faddl and (bad) jg (bad) pushq (bad) xor mov xor jp gs adc xchg leaveq and (bad) jne stos imul (bad) (bad) sti hlt sahf xchg sub mov sarb hlt (bad) mov (bad) pop xchg sub rorl xchg hlt sbb (bad) cmp xchg rex.RX movsl or sbb add jnp fidiv (bad) out sub cltd data16 movsl enterq cmp push movsl (bad) (bad) xchg fisubr gs cwtl je add cmc or (bad) sbb (bad) rex.RXB fwait callq push (bad) or xchg negb mov add iret rex.WRXB (bad) or movslq jb or xchg pop rex.RXB (bad) loop xchg or ja iret xchg shld in jb xchg rex.RXB (bad) mov adc pushfq outsl xlat jo push movabs adc in sub xchg mov fadds (bad) js xchg adc pop cmc sub rex.RXB mov jrcxz and or rex.RX xchg (bad) rex.XB xchg ror (bad) add (bad) mov jno xchg (bad) mov jmp movabs mov lahf imul nop out mov rex.WR jns insl mov xchg movabs (bad) or retq xchg and (bad) (bad) in mov std test popfq xchg (bad) movslq insb lods xchg repz loop sahf jge icebp add test jge mov rcrb in (bad) movabs (bad) out xchg rex.RX sub sbb xchg or sbb js mov mov lret mov xchg lahf pop enterq out jns mov rex.WRB hlt pushfq ljmp fs (bad) mov fcompl je imul movabs fwait push shlb and xchg mov xor rex.XB loope rex.WRB fucomp pop gs xchg pop mov movb rex.WB lea mov (bad) (bad) pop mov test sbb lea (bad) imul pushfq cmc stos vpsubusb loop adc enterq scas (bad) cwtl rex.WRX rex.WRXB (bad) movabs adc jle push movabs xlat or rex.B gs icebp out mov insl push stos (bad) test mov and nop flds xchg rex.RB sub xchg xchg sbb sub cmp adc retq rex.WRB xchg adc xchg out add xchg cmc imul (bad) (bad) adc (bad) mov jno stc mov int or shlb shll xchg movsb pop sub mov jge in ja (bad) jrcxz sbb (bad) lahf pushfq movsl mov repz movabs sahf jmpq hlt push out sub mov pop testl cmpsb xchg and jge xchg outsb ss addr32 jrcxz ja sub rex.X mov rcrb push test jbe xchg sarl fwait push rex.XB lock fisttpll (bad) mov movabs icebp cmc and lahf retq lods mov or fisubrl out (bad) frstor mov sbbl pop loop pushfq pop (bad) data16 movabs rex.WRB in int3 mov pop pop lods pop mov cmc or (bad) or movabs cmpsb rex.WRXB (bad) jnp in mov pop pushq sbb movsb (bad) mov (bad) sbb jne adc jge mov push popfq mov rex.W rex.X rcl jb mov jnp lahf es ja xchg rex.RXB and add xchg sbb frstor retq pop imull jb rex.WX mov addb in mov es cmp (bad) pushq add mov rex.R rex.WX lret (bad) mov xchg wrmsr sub xchg rex.W pop jp nop pushfq negb sbb movabs sbb repz stos fs pop shrb (bad) sbb and jmp enterq and lods pop rex mov pop insb xchg mov jmpq adc pushfq mov xchg rex.R roll xor push push xchg clc movabs xchg ss out xchg in mov (bad) repnz cmpsl mov adcl xor pop pop pushfq mov sbb push xchg pop (bad) xlat (bad) loope or fnclex hlt movabs add lea (bad) movabs (bad) and clc adc mov sbbl mov sub xchg sbb jmpq movabs and mov subl mov push add std (bad) xchg xchg mov bnd loop in (bad) or lahf adc push jns iret pop mov adc xchg (bad) repnz imul hlt add xor fnstenv rol fucomp ja jmp add test mov pop mov loop add or adc enterq std lods pushq mov and rex.X xchg (bad) sbb mov mov scas jne or rex.WXB rex.RXB jmpq outsb faddp ja mov mulb add retq icebp jno and int push cltd loopne sbb mov movabs rex.WX (bad) int in int3 (bad) push cmp rex.WXB sub ja mov xchg adc lret push lahf fsubr xchg (bad) ficoml and xchg xchg sub (bad) fwait loop sbb mov pop in jmp add lods subb stos and ja pop or callq xchg push mov fadd and loope ds or xchg (bad) fnsave xchg push (bad) jns xchg push mov rex.WB insb (bad) xchg movsl jbe mov mov int (bad) xchg hlt and rex.WX movabs cmpsb jno (bad) sub and rex.X leaveq fcoml out nop sbb loopne ficom retq adc mov iret rex movabs push loop (bad) loope adc fbstp in mov stos insb rcrb sub movsb xchg out rex stc rex.WXB movabs movslq out mov (bad) xchg add sub sbb sbb ss sub pushq fwait cmp xchg xor js (bad) pushfq jnp cmp push jb faddl jmp or (bad) fisubr test ror fs popfq mov (bad) push cltd mov ja (bad) stos pop sub leaveq jns xor xchg popfq (bad) mov cli jmp popfq mov test pushfq xlat fcoml rex.RX sahf (bad) (bad) in imul and in cmp xchg add addl sbb mov movsb pushfq mov rex.RX testl pop (bad) rex.RXB sbbl mov movabs cli movabs fucom xchg push or jb push jmpq mov and clc cmovae fwait jmpq stc (bad) mov mov imul and xchg stc (bad) jb movslq (bad) std sbb jg hlt imul jb (bad) push cmp sub bnd fs stos xchg movabs fisubr mov sahf (bad) cmp mov movsb test cwtl mov out imul clc fisttp jae sbb (bad) (bad) stos mov mov xchg (bad) adc jae enterq shrl and sbbl rex.WXB mov (bad) (bad) sbb cmpsb (bad) cs stos xor and nop movabs (bad) cwtl in sarb (bad) ljmp mov sbb add (bad) adcb outsl lods out mov xchg jo jnp add pop xchg ds addl mov data16 loopne ds rex.XB lock mov cmpsb jns popfq lret (bad) (bad) lods mov xlat xchg mov mov out sub push movslq sarl xor jl xchg mov sub cli add rex.XB rex.RX (bad) pop and test and addr32 insb or cmp test (bad) jrcxz xchg sahf cmpsl mov fist loopne pop mov (bad) ja lods xchg nop rex.B jb pop hlt in (bad) mov sbb xchg stos movabs add (bad) sahf mov cltd movsl cmpsb pop mov jmpq fisttp cmp rcll add imul outsb xchg rex.WB or (bad) test sbb xor (bad) test (bad) int xor and mov es out rex pop mov (bad) out rorl adc cmp cmp jp rex.RX in lods push callq rex.B cmpsb add (bad) push loopne dec jl mov adc gs (bad) pop push ss rex.WRX xchg mov retq and cmp xchg jno (bad) test test xchg (bad) repnz mov lret fwait adc clc popfq cmp add ficom pop (bad) (bad) stos cmpsb jnp xchg add pop pop add xchg addl movabs sbb popfq xorl mov insb xor xchg rex.RXB adc (bad) sbb (bad) (bad) and lock shlb fbstp jnp (bad) jge callq xchg outsl fisubrl (bad) push mov add movsb jbe mov test iret sti int3 xor adc xchg mov mov xor (bad) imul lahf (bad) mov (bad) add cmp data16 cmp test sbb leaveq imul cld cmpsl shrb int and or (bad) imul scas frstor fmuls outsl pushw pavgb loop movabs adc cmp mov mov movabs mov rex.W sub xchg cmp (bad) insb mov jb sbb jmpq movsl gs leaveq test int sub jg add xchg xchg notl mov sbb outsb mov sahf mov mov shl movslq xchg movabs stos andb lods out pop sti test xchg xchg test jo (bad) scas int3 push xchg repnz test xchg callq cltd rex.W xchg sti rex.R push jno callq xchg pop cmpsl gs xor jae sbb std or sub (bad) fmul mov sbb jl (bad) (bad) pop xchg push (bad) add rcl cld js int3 xchg in js sbb xlat jno jg jrcxz or rclb xchg insl add add fbld cwtl adc loope jl xchg sahf and or shl test movabs sti fadds mov xchg and (bad) (bad) lods mov rex.XB es (bad) xchg fwait push (bad) (bad) rex.X xchg xchg mov movabs sbb movabs rex.X xchg or pop stc fs xchg sti mov fwait cmp (bad) ja jl fdivrl and popfq out cwtl lret js shlb mov rex.WRX (bad) xor xchg add xchg mov cmp adc in lock xchg adc xlat (bad) xchg pop rex.WRB xchg mov and xchg ficom (bad) pcmpeqd lahf out popfq sbb callq insl stc sbb mov movabs out add xchg xchg (bad) in lock jnp rex.WR fsubs or (bad) retq lea adc and rex.WX nop lcall jbe add add (bad) push (bad) lea and je mov rex.XB fmuls and cmp addr32 sub xchg lea mov test (bad) lock test sub mov cltd fwait mov cmp sbb in mov scas adc (bad) lret push mov add std xchg mov (bad) or mov mov and adc stc repz jb decb mov sbb sub mov mov hlt out sub (bad) (bad) and lods js movabs in mov (bad) lea out pushq leaveq xchg es out jge,pn data16 (bad) xor xchg xchg push or cmp rex.XB add (bad) cmpsl (bad) in cmp sbb (bad) xchg (bad) xchg cmc adcl mov pop cmp xchg popfq xchg pop rcr rex.RXB pop rex.WRX test sahf loope adc cmpsl pushq (bad) ss orb xchg test mov rex.WR es sahf mov mulb es mov pushq jge jrcxz (bad) push rex.WRXB pop or mov (bad) rex.R or (bad) mov and adc jae (bad) (bad) movabs (bad) (bad) rex.X rex.WRB pushq (bad) fmul xchg sub rex.WRX (bad) jb in fist mov callq rclb fiaddl (bad) (bad) cmp or insb xor xor xor js add pop xchg scas negl add (bad) outsb pushq add (bad) ljmp mov stc scas xchg add pushq xchg rex.R sub (bad) cmp sahf adc negl (bad) xchg popfq clc insb and xchg fisubr push xor jle (bad) retq addr32 cmp or push and rex.WR (bad) xlat sub push pushq movabs pushfq movabs cld push pushfq add test adc sbb rex.R imul rex.RXB (bad) xchg cmc lods (bad) mov sbb insb (bad) adc or scas cwtl mov xchg adc push xchg jbe (bad) mov in (bad) test sahf data16 and cmpsl cmp xchg sahf movabs addl xchg rex.WRB cltd jb or xchg and add cwtl stc (bad) xchg (bad) stos sub nop ss pushq add (bad) stos pop popfq sub jge add (bad) (bad) (bad) jne test mov or (bad) rex.W enterq xchg mov scas cwtl (bad) xchg cwtl mov jbe fdiv add fisubrl popfw lock popfq xchg and mov pavgb pop jbe mov jge adc pop (bad) sbb xchg adc lret cmp adc fs rex cmp add test sbb imull sbb xchg mov rex.RB sahf rex.WRXB add (bad) jnp xchg xchg rex.WX jns xlat push in (bad) (bad) push (bad) out jnp pushq sbb cwtl adc add mov and (bad) fistpl pop loop xchg data16 or popfq xchg gs fdivrs xor cltd pop xchg scas mov xchg sbb (bad) sub pop sahf testl (bad) scas (bad) xchg addr32 pop mov and or popfq and movslq cwtl push pop sbb (bad) cld jge (bad) movabs rex.WR (bad) and jns data16 orl adc enterq jno (bad) fs (bad) xlat mov (bad) add xchg (bad) mov adc out fs (bad) mov (bad) pushq xlat rex.WXB sub sub retq push rex.RX lea retq sub retq pushq push sub mov push iret xor or rex.B or xor xlat jns jg pop mov scas outsl adc cmp loope cmpsb pop cmpsb adc (bad) or cli mov out (bad) ja pop adcl cmpsl mov movabs push add mov (bad) in stos add popfq push cli (bad) movslq sbb and rex.X imul mov out cmp outsl mov sbb add pop inc rorl movabs or xchg icebp nop (bad) pop retq sahf (bad) gs loope (bad) rorb (bad) xchg popq data16 pushfq pop xchg xchg push jp mov (bad) es fdivr (bad) (bad) mov pop or addr32 mov (bad) (bad) jmpq popfq xchg (bad) mov xchg rex.W movabs rex.WRXB xchg pushfq test and pop rex.RXB repz test iret add mov int push imull adc out loopne xchg xchg idivb xchg jg xchg mov in (bad) xchg xchg add out xchg mov pop adc jp fwait and jmp push jae (bad) lret ss mov rex.WXB fwait movabs (bad) xor xchg (bad) cld jns lahf out cmpsl (bad) xlat cmpsl mov cmp sub lret add adc xchg sub out es enterq (bad) adc sahf xor (bad) movsl mov (bad) cltd xchg (bad) rcl out stc pop jmpq nop andb scas mov add jmpq (bad) and and clc or sub jp pop xlat mov in movabs jl imul (bad) movabs adc xchg (bad) (bad) push ficom rex.WRXB jp or rex.RX (bad) pop xor lahf (bad) stos (bad) fidiv (bad) and es data16 sbbl lods (bad) xlat (bad) shl repz sahf sub mov pop sbb cmp cmp add sahf (bad) callq ja pop mov or xchg rex.RX xorl sub std pushq jno (bad) cwtl (bad) lods (bad) jle in mov cltd lret fmull mov incb rex.XB mov pop insb jl mov mov nop and int3 xor fmull xchg pop rex.WX cmpsl xor std xchg lods imul sub xchg sbb addr32 sahf jb xchg movabs cmc (bad) and rcll ja xchg (bad) xchg and (bad) or push mov int movsb add callq push (bad) mov ja,pn xchg lahf mov leaveq and sbb pop rex.WRB out retq push add xchg jmpq fs in pop cmp xchg cmp (bad) (bad) xlat mov xchg and sbb std xchg push test outsb mov negb stc rcr push rex.WRB pop mov (bad) jmpq repnz adc sbb stos leaveq xchg mov lea ficompl cld adc pop int (bad) mov stos cmp pushq out push mov cmp sarb jle fwait popfq xchg movslq push cmp rex.R (bad) lahf int3 sbb (bad) cli and mov xchg cltd fnstsw add ficom cmpsb sbb imul (bad) (bad) pop scas mov gs sahf mov sub cmpsb pushq movabs rex.RB adc sub movabs orb adc fwait sbb xor sbb negl (bad) sbb imul pop xchg push (bad) movabs cmp pop jne jle lahf sahf fsubl fnstsw add cltd loope enterq stos cmp outsb (bad) rex.B fimull mov in rex.WRX rex.WRX fnstsw pushq cmp sbb mov cmp xchg pop jg adc rex.WRB rex.WRXB xor adc sti mov fs ficomp shr add nop (bad) es mov out sbb movslq mov vandnps jg adc imul stc rol sarb mov lods in push test cmc out (bad) pushq sahf shr jp and adc rex.X (bad) (bad) idivl or (bad) fldt ss fmul rex.RXB imull add data16 imul cmp push mov (bad) rex.WRX sbb jae push lahf nop (bad) cmp mov jmp cmp jo (bad) cmc rex.WRX retq sub pushq (bad) jno jne fcoms mov xchg jnp std clc or (bad) (bad) or je fisttpl rcl push callq int3 and pop pop rex add add movsl jnp cmp or movslq cmpsb (bad) push mov loop mov and mov cmp xchg jbe out outsl (bad) int3 add (bad) cmp rcr sub xchg sahf sbb mov pushq or repnz jno xchg xor push jnp leaveq xchg shrl sbb sub pushq and xchg loop sarl adc xchg pushq push mov mov xchg es jmp (bad) out movslq gs (bad) mov xchg (bad) fs adc jge xchg out repz jnp mov movabs test int insb mov fisttpl retq rex.WR (bad) xchg or adc pop out (bad) mov mov cmp lret adc (bad) mov rcll (bad) mov scas cmp adc jae jrcxz outsl jo std (bad) (bad) cmp (bad) rex.WRB push lods movslq pop rcll adcl and mov (bad) rex.WXB gs mov (bad) psrlq cmpsb and sub fucomp retq subl jg (bad) mov loop (bad) and movslq (bad) xchg rex.WRXB stc sub jrcxz adc or rex.WRB rex.R movabs mov push iret leaveq adc rex adc rex.WXB mov retq cmp mov xor xchg xchg mov in pop (bad) lret fiadd mov jg rex.WRB pop mov movslq xchg pop add xchg cmpsb (bad) xchg out jo jl xchg rex rex.R rex.WXB mov cs fcoms lea pop xchg pushq int mov push jmp mov jo sub (bad) xchg adc cld jp in jmp cmp fsubl lea mov xchg (bad) add xchg jle out retq (bad) int jmp jmpq xchg rex.WX push xchg ss (bad) xchg gs and (bad) enterq add roll jbe lods and pushfq insb (bad) rex.RXB imul insl repz push enterq sbb xchg xchg fimull leaveq ja (bad) jl ja pop cwtl jne sbb ja mov xchg adc test xchg (bad) in imul adcl xchg add rex.X rex.RX in (bad) push xchg adc xor (bad) out xchg loope cs insl scas mov (bad) shll loope add movslq iret sbb cltd or mov fnstenv in (bad) and pop (bad) xchg pushq outsb xlat adc adc fstpt mov mov (bad) sahf xchg (bad) jle loopne sub popfq rcll (bad) (bad) pushfq outsb xchg pcmpgtd sbb retq retq xor outsb js rex.RX lahf push pushq adc in cmp cmp sti cmp vbroadcasti32x4 push xor lods xchg mov adc rex.WX jp test stc xchg insl jns push rex.WB and xchg fs out (bad) or mov rex.RXB (bad) pushq cmp pop ja rex.XB add xchg mov jno mov cmp pushq jnp mov (bad) outsb xchg mov pushq push (bad) or pop rcrb jbe pop add in lods push sub rex.WRB hlt fsubrp (bad) outsb jb pop push rex.W xor insl je cmp mov (bad) jnp mov mov nop adc rex adc out cmp lret rex.WRXB mov or fs mov adc outsl mov jo scas pop cltd xorl (bad) sub xor sbb (bad) sbb and (bad) or lahf jg rex.WB in push xchg xchg scas sti mov xchg sbbl (bad) sbb rcrb cmpsl scas (bad) adc or and cmp xchg xchg add xor in fisubr or int nop scas callq (bad) mull nop pushq rex.WRB cmp repnz xchg sarl maxps shr rex.WR pop clc xchg fnstsw adc lods repz rex.X gs adc mov (bad) (bad) stos cmpb sbb jnp mov loop rex.WRX xchg adcl rex.WRX sub pushfq sbb mov or (bad) jl (bad) retw in xchg (bad) test (bad) (bad) mov sub mov adc mov fsubrl sbb xchg xor xchg lret pushq (bad) pop adcl pushfq std hlt divl rex.WXB or (bad) mov (bad) jmpq (bad) push xchg (bad) jmp stos mov sub (bad) sub xchg and add icebp retq rex.W loopne pop lcall in or (bad) rex.R xchg insb jg rex.WB rex.WRXB xchg adc fiadd pop outsl out outsl rclb sbb (bad) adc (bad) mov (bad) shrl fdivrs jb addr32 xchg cmp add or stc iret (bad) cmc loop callq gs mov fisub icebp pop xor cmp (bad) test xchg rcll loop (bad) cld fsubl (bad) jmpq add lahf mov (bad) shrb in test imull cmpsb ja pop es rex.RB xor movabs (bad) pushq (bad) add adc pop (bad) out movabs fimul enterq movabs test sahf pop fucom lea xchg stos mov cmpsb (bad) fsubr mov (bad) fidivr sub lods xchg stc xchg fisttpl (bad) pushfq sbb jae (bad) cmp scas sbb rex.WRX nop xchg pushfq cmp xlat movabs iret movsb jne (bad) lock (bad) (bad) mov and sub sahf jne,pn (bad) mov (bad) jmp mov cmc xchg (bad) faddl (bad) rep hlt push mov or mov xlat xchg add sbb or xchg es adc mov lock and xchg in (bad) (bad) xchg pop add stos sub mov xchg gs (bad) callq jmp add (bad) mov push (bad) movabs add cmc (bad) cmp or out test or loop outsl cmp out movabs stos jnp clc rep add (bad) lods xchg out jae cwtl mov xchg or fs test movabs jns xchg in rex.WRX cltd rcrb (bad) (bad) stos pushfq in xor xor or xchg xchg testb jrcxz sbb fsub jno xchg fmuls jmpq fcompl add movabs xor xchg lods cld xlat not rex.WXB xchg imul iret pushq cld not xor xchg adc jp subl mov or rex.WR (bad) jb xchg push movabs pop add fdivp xchg (bad) sbb jge (bad) fwait xchg or pop jae lock sbb rex.WRXB sub rclb movabs xchg cwtl mov (bad) insl sbb xchg push mulb xchg popfq cmp divl cmpl fimul scas jae stc push pushq in sub mov in xchg sub movslq subl adc xor push mov popfq (bad) sub in (bad) jbe and retq add pushfq push adc out lods fwait sbb test push jrcxz in xchg in cmp retq rex.WRXB cmp mov (bad) cmp or sub pushfq (bad) out callq cmp cli mov mov rorl add loope xor xchg hlt adc sub cld cmp xlat xor and out mov shrb xchg (bad) lock pop (bad) xchg cltd cwtl test push fistl stos or rex.WRXB and or mov lret xchg iret fwait push rex.WRXB (bad) xchg ss fildll cmp rex.RX sub pushq shll jnp xchg mov jle sti xchg jae and repnz addr32 popfq imul cmpsl push pop lret lea pop outsl (bad) sub sub fdivs loop rex.WR rex.R insb cmp sub jp mov callq cwtl (bad) (bad) xchg xchg lret (bad) adcl sahf xor xor shrd fsub out jae and and int xor xchg (bad) jge xchg cmc (bad) lahf pushfq mov (bad) pop mov adc jmpq (bad) sbb mov std (bad) mov xlat rex.WRX xchg mov pop pop callq fwait nop rclb retq xor jp movsb xchg rex.X in xchg retq adc sub cmpsb rclb int movabs mov push in xchg pushfq (bad) sub gs (bad) rex.WR pushfq out int3 rex imul rex.XB test mov xor retq mov movslq and mov sub subl clc xchg jge hlt mov xor xchg pop xor cmp or (bad) xlat test fcomi xchg or cld pop xchg cmp sbb sbb loope jns mov sbb xor cmp (bad) lock and movsb mov cwtl data16 movabs test fmuls ds sbb frstor (bad) loopne add mov rex.WRB pushfq push loop xchg stos out (bad) pop jnp (bad) pushfq mov or ja (bad) imul movabs cli mov fsubp or xor mov mov push fdivrs rcl mov (bad) insl cmp pop add sub imull (bad) mov adc xor pop notl xchg (bad) mov (bad) fmuls cmp add sbb cmp (bad) and ds idivl xchg rex.R fwait jb sub (bad) (bad) mov ja xorb sbb sub hlt orl es mov (bad) pop and adc mov or js fsubp and fsubs movslq insl add mov sbbl pop jg data16 js jp sbb loop sahf (bad) imul scas (bad) jg rex.WR iret pop jno pushq fmuls add and in sbb cmpsb rex.WRXB push and ja sub jg sbb scas or sbb pushq (bad) xor (bad) push rex.WRB jae idiv pushq mov xor pop jae data16 jbe sbb (bad) pop out sub pushfq (bad) callq mov mov es sub out in movabs mov scas pop sbbb cmovbe (bad) (bad) insl out add cwtl mov cmp in (bad) fs pushq xchg pushfq fs xchg out nop imul ds jg movb pushq repz addr32 adc (bad) jb int3 xor jp xchg imull rex.XB rex.WRXB (bad) jge xor mov cmp out loope jle data16 in xchg mov or lods push mov cmp rex.B rex.RXB pushfq test jne mov int3 xchg jbe outsb stos rex.XB rex je mov (bad) (bad) mov (bad) mov pop rex.RXB (bad) mov pushq xor and movabs and (bad) sbb rex.R xchg (bad) (bad) jb int3 jbe pop pop mov sub add rex.WRX divb je mov rex.W mov push (bad) sbb repnz mov rex.WRX push insb rex.WRXB in cmp (bad) rex.WRX (bad) pushfq pop add add cmp (bad) jnp retq and pushq (bad) pop mov pop rex.W (bad) rex.WR in mov cmpsl sub jae mov (bad) sbb movsl and lahf lods mov (bad) (bad) lods pop pushfq int leaveq xchg sub std (bad) in cmpsl (bad) sbb mov scas shll mov pushfq loopne and cwtl (bad) gs popq cmc xchg xchg fldcw lcall rex.WRX mov rclb (bad) xor pushfq (bad) fwait lea jne mov mov stos pop (bad) jle fwait (bad) mov sub rex.WR in cmc sbb (bad) retq xlat sahf mov xchg or sub xchg pop in popfq in rex.WRXB insl iret mov movslq rex.WRX ss xchg jmp cli mov sti cmp sahf in out adc fisttpl pushq movsl out or jo add xor int3 mov scas movsb jne (bad) jbe lret movabs (bad) ds mov cmp in rex.WRB or mov test xchg ss xchg orl adc rex.RXB jns (bad) rex.WX sub sbb xchg pop sub rex.RX adc xor jne adc (bad) push imul pushfq cmpsl sub or add cwtl mov rex.WRXB shll cmpsb and insl sahf and out mov cmp in cmpsl test shrl shll rex.WXB movabs sub add (bad) (bad) or nop sub xlat mov adc xchg popfq movsb fistpl (bad) xor jg pop retq rex.XB callq lret movslq xor movabs lods and cltd sub scas xchg push xchg retq (bad) loop or pushq je,pn pushfq rcrb lods cld addr32 xchg fisub (bad) mov callq rex.WB push rex.WX (bad) out sbb xchg pop add (bad) fldt scas rcrl ja pushq lock jae xchg fcomps sbb (bad) rex.WRX jl cmp adc out pushq fidivrl xchg shll addr32 push scas mov (bad) movabs add cmp jno xchg test (bad) cmc fs push sahf adcl sbb negl xchg adc movabs (bad) cwtl test and movsb and mov (bad) mov xchg fcmovne lods rex.RX cs xchg sbb je push in (bad) fwait xchg (bad) jmp popfq xchg and and cwtl or out ja sbb xor addr32 and xchg (bad) rex.WRX jl leaveq rex.WRB pop je sub pushq (bad) fcomps and xchg movabs and pushfw rex.XB (bad) (bad) xor imul (bad) ja rex.RXB mov lea pushfq sub jno adc xchg or rolb sub callq rcrb jle jmp rex.WXB or pop xor fcmovne sti xchg fidivrl mov rex.WRX sub cmpsl rex.WX push iret mov movabs or pushfq push andl movsl xchg xor imul (bad) (bad) outsb flds sub adcl fwait xchg and (bad) (bad) xor mov xchg (bad) (bad) loop rex.WRXB rex.R ficom fdivl xor out mov xchg rex.WRXB and xchg js rex.X mov jo xchg sub outsb (bad) (bad) fucomp stos xchg and and lock adc (bad) fs rex.RB or sub rex.WXB push xchg movabs (bad) loop pop mov mov movsl sub (bad) xchg ja and (bad) mov popfq (bad) rolb fs jl pop (bad) add movslq xchg outsl adc pushfq xor movabs (bad) pop pushq mov cmpsb sbb (bad) out data16 fnstenv mov mov rex.WRXB retq xor jge fdivrl rex.B sbbl (bad) xchg jns adcb outsl lret xchg push add enterq mov adc xchg retq (bad) (bad) or (bad) mov (bad) test es xchg retq rex.WB cld xor (bad) jne xor xlat test add iret (bad) rex.W cwtl (bad) pop mov (bad) ja jl sbb (bad) cmpsl push pop jns rex.RXB mov movsb mov cwtl (bad) push push pop (bad) out stos rex.X jmpq push push (bad) (bad) (bad) lea (bad) pop int3 insl mov (bad) ficom fwait stos in pushq (bad) test cmp shlb lods pop (bad) mov mov xchg notb shrl and cmp test jae xchg jbe rex.WR or test mov outsl icebp (bad) cmp iret fsubs adcl or xchg sahf pushq int repnz gs (bad) sub xchg (bad) fisubrl (bad) adc shlb icebp jmp (bad) push push test mull mov insl shll (bad) cs mov je cmp push xchg or in (bad) outsb stc xchg movabs and mov test pop mov out xchg jp mov xchg rex.RXB adc pop or ds cli lahf fbstp (bad) pminsw xchg and outsl repz in popfq xchg out in (bad) xchg retq sbb mov stc fwait addr32 (bad) mov in js xchg mov mov (bad) mov xchg jle orl xchg in jl loop fldl2e mov mov push outsl ficom test sbbb or (bad) cmp movabs or xchg lea cmp insl xchg or push jmp add push fdivs (bad) cmc nop (bad) sbb subl out mov sub push (bad) (bad) (bad) (bad) ficompl mov xchg jnp iret cmp xor loopne movsl rex.WX (bad) rex.WXB scas mov cwtl out jg xlat (bad) mov jl rex.RXB gs sbb (bad) push nop (bad) addr32 xchg (bad) cmp int3 (bad) rex.RX (bad) int scas rex.WXB jp (bad) (bad) scas lahf mov xchg (bad) adcl idiv jne cmpsl sahf in rex.R (bad) (bad) fdivrl imulb (bad) jnp cltd cwtl sub mov (bad) sbb je fwait sub rcll imul fsts fcmovnu out scas pop gs insl addr32 rex.RB rex.RXB xor add push callq nop mov rex movsb xchg je rex.WRXB lret mov jmp insl stos ja rex.WXB movabs in sbb (bad) test (bad) lock xchg (bad) ss shrb mov je enterq fisub or xor loope test or pop jnp sub pushfq out cmp xchg lods sbb xchg xchg movabs (bad) sti xchg jb loopne test jbe insb outsb ja insl retq jrcxz jns jg or add (bad) cmp imull mov cmpsb nop insb outsl (bad) mov int3 (bad) lret mov outsb xor retq mov pushfq pushq xchg pushq sub (bad) icebp ja jg xor pushq jg mov mov stos movabs enterq xchg mov (bad) loopne adc out (bad) jb (bad) std lahf out push mov adc mov or out test (bad) push cli insb xchg iret subl or xor rex.WRXB add push (bad) out cmpsl jnp test or out rex.WX int3 cmp (bad) in push cltd pop adc rex.WRXB (bad) (bad) fnstcw lods jns xchg add push imul add sahf out in in cmpsl divl rex.WXB pop add mov movsb or pushq rex.WXB sbb mov push (bad) fwait (bad) add cwtl mov pushq (bad) fs xchg xchg movabs (bad) rex.WXB mov popfq rex.RX (bad) jbe xor sbb shl sarl xor rex.XB adc and vhsubps adcl lods push sub (bad) (bad) (bad) scas ds loope rclb sub jno pushq callq (bad) mov mov xchg sahf (bad) clc add lret mov mov pop stc push movabs jmpq (bad) xchg std and (bad) ss loop retq outsb or mov cli mov stc and cmpsl add int3 test xchg rex.X movabs je (bad) mov cltd adcl rex.WX pushfq sahf fsubs cmp in mov (bad) mov jb push sbb stos lahf xchg jns adc not nop adc xchg xor iret (bad) paddw sbb divl pop mov add nop sbb mov (bad) push (bad) push xor push xchg imul push sub test mov (bad) rex.R add test sbb pushq std rex.WX movslq add xor jmp jbe mov xor movabs sbb (bad) mov (bad) callq loopne cmp nop mov sbb add and (bad) xor mov movslq or (bad) cmpsb xchg movslq enterq fistpll movslq rex.X repz xor jrcxz mov (bad) cltd cwtl pop xlat (bad) adc xor iret in xchg jmp (bad) in (bad) xor adc and nop xchg mov mov jg cmc fisttpl insl out lea mov int (bad) jmpq cmpsb push xor lret clc and std movabs add cwtl jle rex.WR (bad) test rex.WX sbbb cmc push and out (bad) xchg insb (bad) out pop in jb xchg loope (bad) pushq outsb fild (bad) xchg fimul and xor xchg or stos push xchg jo rex.WRXB mov lea cmpsb or xchg int mov push outsb mov (bad) rex.WRX xlat adc rex.RX jl mov leaveq sarb xchg scas movabs rex.WX lods xchg adc xchg pop jge stc (bad) (bad) xor lods cwtl vpmullw pushq (bad) loop jno (bad) mov add and or (bad) loopne jmpq mov fcmove push mov leaveq movabs (bad) cmp out rex.WR xchg pushq repnz fadds (bad) nop mov xor movabs stos push rex.RB cs or cltd pop loop insb add pop and outsb sahf nop xor movsb sbb callq mov xlat (bad) (bad) scas and sub (bad) pop imul imul incb pop xchg (bad) movabs (bad) ss imul scas or in sub xchg retq icebp rolb or negl pop rex jmpq jrcxz popfq pushfq adc stc (bad) (bad) xor or rex.XB sbb (bad) fldt cwtl mov (bad) mov (bad) xchg insl sahf add movabs test (bad) xchg lods sbb sbb cwtl sub push (bad) iret cmp (bad) xchg pushq or or (bad) iret adc (bad) xchg cmpsb sub lret insb xchg or (bad) pop sub pushfq push cmp lock (bad) lret xchg add mov mov rex.WRX adc (bad) xor stc adc push mov sub push rex.WXB loop lods hlt mov rol xchg xor mov mov xor push lock rex.R xchg mov or movslq (bad) jl mov (bad) in xchg jae cmp xchg mov scas fidivr (bad) callq pushfq xor sarb lods lea sub icebp (bad) movsl cmp adcl xchg (bad) cmp xor pushfq rex.R test mov cld cwtl mov jnp nop mov (bad) sti negl idivl mov xchg mov (bad) mov jnp xchg fnstcw callq adcl cmc lea sbb loope xchg fcomip test push std test mov (bad) push xchg and imul jae cmp cltd loop shll (bad) lea mov lret ja rex.WRB mov mov push mov add jmp (bad) movabs loop (bad) sbb (bad) nop xchg pop out or sar push xor mov mov cmp (bad) sbb mov xchg xlat (bad) repnz (bad) retq jl mov xchg (bad) movabs xor test (bad) add fidiv xchg (bad) or faddl or jne repz xchg movslq adc (bad) adcl pop insl adc (bad) push (bad) pushfq jmp (bad) sub mov xchg xchg cmc stos rex.WR rex.X lahf lahf cmp in xchg jl sub mov xor mov (bad) pop xchg (bad) cmpsl insb (bad) lods add xchg jg,pn loopne movslq lea cmp jae xchg sbb jp (bad) movsl js cwtl mov (bad) add rex.WR repnz cmpsl cmp movabs fnstsw mov (bad) jns fs push stos insb stos outsl xchg out rcr rex.WRB js mov setle mov test pop cmp (bad) sub cmpsb mov jae rex.RX std jle in in fdivl xchg stos loope pop cs movsl xchg (bad) mov xor cltd je push cmp xor (bad) rex.WXB hlt retq add clc mov push and pop xor shrb sahf (bad) sahf rex.XB jp (bad) (bad) jb fst jg xchg jle movabs (bad) sbb push xchg cs xchg (bad) xlat jno rex.WR rex.WRB pushfq jmpq (bad) (bad) rex.W xchg (bad) lret jle mov xchg jrcxz sahf in jbe loopnel retq (bad) xchg (bad) test jg (bad) add imul nop cmp cmp addr32 movabs or fsubrl sahf xchg out push cwtl (bad) outsl movslq iret xchg xchg mov (bad) (bad) add movabs xchg (bad) xor mov push rex.RX fistpl (bad) negl pop jae lods lock adc in xor fdivrl (bad) pushq out xchg (bad) stos sbb add rcll repz push pop jns retq jae pmullw pushfq mov jge icebp fiadd jmpq (bad) (bad) cmp xchg push cmp iret in xchg add sbbl pop (bad) push clc pushq pop (bad) or jnp push sbb xchg mov mov jp (bad) out mov xchg push push jl cmp ficoml (bad) (bad) hlt jg lock xchg movabs neg push (bad) (bad) clc adc cmp callq sub js xchg test lahf (bad) adc nop xchg cli imul (bad) addr32 cmp (bad) jno or stc roll frstor movabs std adc (bad) lock pop (bad) xchg mov jne jb movslq mov (bad) (bad) lahf scas (bad) and push and push clc xchg test sub ss cwtl mov cmp fstl data16 idiv movabs pushfq rex.WRXB gs xor mov sub mov ja or jo and insl pop rex.WX xchg mov adc roll push push in movslq or pop jns test pushq ja sbb pop jmpq shl xchg imul cmp or retq pop lahf out xchg cmp sbb sub cli rex.XB out int mov cmpsb rex.RB pop shrl (bad) or mov fsubrl int (bad) pop mov cltd enterq xchg sub rex.WRXB lock and xor (bad) pop (bad) je movsl jnp jmp jge cmpsb rex.X xchg movabs cmp and sub mov cmpsb rex xchg mov ja jle stos test xchg push (bad) cmpsb mov lods and notl fistpl movslq rex.W in test mov stc mov mov jle (bad) xor movsb pop (bad) (bad) xor jge loopne jp xchg (bad) (bad) lods pushfq std jnp mov xor movabs (bad) (bad) xchg (bad) fnsave xchg (bad) and xor fistl jae xchg out xchg pop (bad) mov ja popfq pushfq add (bad) pop adc cltd fdivp movsb xchg jns xchg out mov fldenv (bad) rorb loopne test rcll fistp rex.WRXB xor mov rex.RB ja push fistpl mov xchg (bad) mov sbb sbb sub jne rex.WRB rcrb mov rex.WXB ja jbe add rex.X fs push pushq (bad) mov mov in xchg jbe sahf mov cmc pushfq movabs mov retq mov fidivl jae popfq repnz ficom jrcxz pop xor xorb repz sub jns mov rorl clc movslq insb leaveq mov jl xchg gs lea scas lea xor (bad) iret pop (bad) xor in jp sahf jrcxz xlat jle (bad) push rex.XB (bad) (bad) rex.WXB mov imul rex.B jl (bad) fdivrs jp lahf sbb add and std loope or movabs xor xchg fidivrl cmc xchg (bad) ds loop xchg xchg mov pop fstp (bad) xchg sbb rex.WXB lret rcrb es retq add scas (bad) rex.R pop out out pop (bad) (bad) xchg xchg testb add stos xchg mov lret rex.WRX fs outsb leaveq jg jne xchg pop repnz mov (bad) movabs rex.WB push ficoml sahf (bad) lret cld addl add cmp add jns xchg in test sbb inc xchg cmc jmp jmpq mov cltd adc movsb xchg jmp retq sub (bad) imul push (bad) mov retq xor int xchg (bad) jbe adc stc mov or (bad) and xorl add sbb adc mov mov shrb cmc xlat imull pop test (bad) push xchg mov (bad) xchg in pop lea outsl cmp sbb retq cmp (bad) xor insb cs out leaveq xor jg jmpq and add rex.WRXB mov push jae (bad) xchg movabs push rex.X rex.B or movsb or (bad) mov shrb push add adc mov jno pop mov lea test xchg sahf int3 rex.WXB adc jnp,pt dec jp adc stc std roll int3 (bad) lock mov mov push iret scas imul int retq jmpq and stc xchg movl add or adcb rcrb jo jg int3 pop cmp (bad) hlt negl (bad) (bad) mov (bad) jmp sub xor (bad) scas xlat sbbl (bad) rex.WRX fucomi icebp push jg (bad) lock xchg adc cmc imul callq xchg enterq rex.RX jbe fisubr pop (bad) pop cmp sbb mov pop callq adc sbb insb mov nop movabs xchg adcb mov xchg jl in mov nop add (bad) out xor push pushq xlat addr32 pop xchg (bad) rex.RXB (bad) jno icebp cmpsl (bad) mov jnp enterq out and (bad) xchg test and pushq push test cmp and (bad) movabs (bad) xchg ja fdivp jl (bad) pop sahf sarb loopne sub xor xchg (bad) icebp fadds stc push or xchg mov jae (bad) pop notl cwtl xlat rol movsb xchg fcmovnbe jge and xchg test andb adc and fwait (bad) rex.WR pop (bad) cmpsb jne xchg mov add xor mov mov xchg movabs jb mov in xchg cmc std jmp in or popfq mov pop jle ss jb add (bad) ja (bad) or or mov fistpll fwait sbb ja pop pop loope xchg sbb scas add stos (bad) xlat mov int insb (bad) leaveq rex.XB frstor mov cli lea outsl sub (bad) add push pop xor movsl test icebp jmpq (bad) (bad) (bad) push movabs cmp callq sub adc mov in retq stc jno xchg mov fbld jno xchg lea (bad) jnp cmp callq sahf cmpsl mov rex.X rex.WRX sbb out cli test or rex.B icebp xchg (bad) lret pop jb jns cld nop fdivl rex.WXB test and in (bad) xchg out adc cltd int pop xorl pop enterq adc (bad) imul decl (bad) cld fsubrl cwtl nop mov xor jle add fwait cmovb xchg push xchg add push fwait ds add (bad) xchg mov xchg rcrl xor rex.RX pop mov mov clc and (bad) sub xchg scas int test test mov (bad) rex.WX add add lods xchg cld sub pop xor jmp (bad) xor mov mov add pop jne imul mov cmp mov clc pushq sahf lahf rex.RB outsl or callq fmul pop (bad) or xchg rex.R push icebp rex.WB out in retq imul (bad) jrcxz (bad) sub clc sarb cmp mov mov mov (bad) jns pop test pushq cmc pop cmp cmp xchg addr32 jbe mov cmp jnp sub push std pop add push mov rex fwait adc (bad) mov jb jrcxz movslq jne xchg clc fildl (bad) ja or or adc fcomip sub xlat rex.RXB jo loop pushfq (bad) es xchg lea (bad) adc out test pop rex cmpsb push jbe in xchg (bad) add xor imul out lahf cmp sti xchg (bad) jbe push jnp adc sbb and jbe stc pushq (bad) outsl xchg xlat (bad) xor cli sub sbb mov cmpsl cmp add retq or out mov jo movslq rex.WRX sub leaveq pop cmovns mov adc stos and xchg xchg cli clc insb pushq and cmc xchg (bad) adc or (bad) jg notl fisubr movabs (bad) out (bad) or js or cmp xor in movabs gs mov adc mov jmp and (bad) mov out mov lods xchg outsl sub pushq scas and (bad) push pop loope add xchg and cmp mov cmp xchg loopne sbb and ds stos sbb test (bad) incb sub loopne mov add sbb push outsb pcmpeqw jb and (bad) rex xchg adc out pop or sbb adc and lea cwtl sar jp jo jmp data16 movabs or pushq pop seta push out fbld or pop imul xchg fdivs cmp pop retq adc sub adc cmc jp andl sbb xchg cmp mov popfq pop mov addr32 sbb movsl shr (bad) fimull je add (bad) rex.X xchg movabs lahf movsb xor (bad) (bad) jl popfq pop leaveq insb mov (bad) (bad) xchg cli xchg jae and xchg jrcxz cmpsb xchg xchg rex.RB lea jbe fisttpll testl data16 (bad) xor repnz addr32 or in cmp jmp loopne cmp (bad) fldt (bad) xchg sbb sahf xchg or rex.WB rex.WRB fwait loopne mov adcl sahf rex.WX rex.W pop andl sbb sub adc pushfq (bad) pop sti mov cmp rex.RXB xchg hlt xchg rex.WX popfq or mov xchg outsl in xchg pop ds movsl bnd shl insb xchg stc je (bad) jp (bad) cltd mov lods lea rex.WRXB rex.WRXB stc es xor mov xchg nop adcl add repz movslq mov xor xor sbb xchg (bad) fildl lods jae movsw jo imulb ljmp negb mov in push (bad) (bad) fidiv ficomp scas sbb pop retq adc nop rex.RXB sbb in hlt (bad) (bad) sbb rcll rex.WRB je mov fcomp movabs jge rcr (bad) fstpt rex.WR (bad) mov lods sbbl (bad) mov or xchg jo cmp stos cmpl in xchg mov insb rex outsb xchg xchg in or sub shr sahf xor scas xchg lods sub xchg (bad) in (bad) scas sbb or outsl out rex.XB mov xor xchg (bad) movabs rcr jne shlb rex.WRXB ds sbb cmp xchg pushfq sub rcll or mov mov loopne int jp cltd outsl lahf int3 adc adc push (bad) shlb jmpq push pop xor sbb mov mov (bad) xchg (bad) (bad) or int jno imul xchg (bad) fiadd and imul scas pop lea nop sub callq mov lods and retq (bad) mov push scas mov mov cmpsb xchg adc sub xchg and js jo popfq xchg mov callq sub xchg adc rex.XB xchg xchg mov (bad) insb loop notl mov (bad) sub popfq repnz sbb cwtl add in test rex.WRB es sbb stos adc in fwait (bad) cmc rex.RXB mov movabs jl out rex.X sub imul (bad) sbb jne callq lahf pop or out roll sahf mov xchg xchg rex.XB in lea shrb mov or enterq fwait shrl pushq sbb (bad) rex.WX retq mov push xchg mov adc sahf idiv jmp adc movabs sub sub imul scas fwait xchg iret mov adc (bad) repnz in movl lock test addr32 out movabs xchg sub out mov rex.WR rex.WRXB jnp movabs movslq jb loopne sahf mov mov (bad) (bad) lock cmp rolb pop (bad) xchg pop push fisubl sarl mov (bad) shrl mov push cld cmpsb clc nop adcl sahf mov movsb (bad) shr (bad) cwtl pushfq mov nop imul mov shlb (bad) mov rcrb cmpsb rex.WB popfq outsl jmp movslq add int ds pop (bad) mov ficompl cmp xor jns in xchg cmp xchg bndldx or (bad) or rex.XB out subl add or fadd jmpq nop sbb test rex.XB (bad) adc cmp (bad) rex.X sub (bad) std push sub rex.WRX or mov subl add cmp xchg imul adc xor mov or ja push xor or pop (bad) jrcxz outsb scas fmull pop adc (bad) cmp rex.WXB repz fwait bndstx (bad) icebp sbb (bad) lahf sub push xlat (bad) movsb rorl xchg add and xor fiaddl cmove mov adc callq jbe cwtl fmul shlb adc jmp sbb jbe add fst retq xlat test add mov sti (bad) ds xor pushq add pushq mov outsw xchg xor sbb or sar lock (bad) int test add lea rex.WRXB mov pop pushfq pop pushq (bad) mov (bad) sbb sbb loopne adc (bad) lea mov jne fwait push cmp orl out pushq stc and (bad) mov sarb (bad) jp mov xchg cmc rex.B movslq stos xor rex.RB sbb xor rorl mov (bad) retq sbb xor hlt imul clc jo leaveq jb jnp sbb rex.WX mov int popfq (bad) push (bad) sahf (bad) push adc iret stc mov outsb xor std jle xlat es xor data16 rex.WB movabs cmpsb xlat jb rorb sahf (bad) fnstenv rex.RB mov add add rex.B mov loopne mov retq push cltd outsl sub sbb data16 sub sub or push in sbb notl cli xchg and xchg adcl xlat lea cmp sbb (bad) jp or or jns leaveq mov xchg rex.RXB add push (bad) mov (bad) pop and in xor push sbb pop movabs ja push add (bad) sbb repz movabs fstpt xlat xchg push fidiv rex.XB add adc rex imul retq pop sub jne mov mov jnp rex.WX xchg sub gs (bad) jge cld sbb cltd (bad) imul sub jbe imul outsl insl mov pop movslq (bad) mov mov xchg add (bad) movslq loop loope (bad) imul imul rex.WB pop xchg mov (bad) adc push sub decl (bad) mov xchg mov movabs (bad) mov stos scas lods (bad) stos iret int3 xchg (bad) fiadd cmp mov stc (bad) imul jb retq gs push jg and sbb jrcxz mov test rex.WRXB xchg mov std or movhpd pushfq jmp or xor cwtl cmp mov adc xchg repz xor push pop fs rcrb fdivrs mov xchg pop popfq in adc pushq xchg pop (bad) scas jo (bad) xchg ds movslq add push rclb pushq mov mov stos xor jrcxz xchg fs mov add pop int push pop es or int3 jmp loop (bad) cwtl adc sar in xchg rex.WX out rex.WB xchg retq mov pop in (bad) xchg test callq xchg movabs mov xchg add cmp out and jb mov or push (bad) (bad) jle fsubrl mov in mov adc mov (bad) cmp out xchg sub insl movsb cld ss jo pop add adc xlat mov push or (bad) adc in xchg rex.RXB jb (bad) (bad) xor fistp callq rex.WX jnp xchg cmp neg xchg enterq or push sti cld xchg (bad) (bad) jo mov insb jno scas cmp cmc pop add mov (bad) js rex.B xchg push rex.WRXB xchg imul mov (bad) adc fstpl sbb rex.WRX sbb movslq cwtl enterq sub cmpl cmpsl (bad) cmc addr32 fsts jg repz inc (bad) mov idiv push xchg sbb fwait cmc pushq test cmp nop mov xchg rex.WXB rex.X rex.WRXB je scas out rex.RXB cmp insb xchg and lock std cwtl lahf xchg push or sub pop cwtl clc or xor (bad) jl std xor rex.RB addr32 and cwtl xlat xor mov mov (bad) jmp xchg outsb enterq (bad) rex.X stos icebp push and (bad) (bad) retq and fs sub rex.WRXB rex.W rex.WRB loop loop movsb cmovb mov (bad) xor jne (bad) jle pop pushfq (bad) rclb mov or or or cmpsl sbb adc mov rex.WRB or mov sbb xchg or pop sub sbb xor add ds pushq mov (bad) add scas xlat xchg (bad) (bad) mov mov fcom imul movabs jno pop rex.WRB jns rex je (bad) cmp (bad) xchg or cmp push jmp int3 xchg (bad) or sbb (bad) xor pop rex.WRB imull rex.RXB xor pushfq mov lods (bad) (bad) sbb mov (bad) mov cmpsb xchg sub iret sbb pushfw xor in jg pushq test xchg sbb add callq mov movslq (bad) pushfq mov nop fdiv rex.WXB addr32 cmp and xchg lods and cmp jg sbb (bad) pop xchg out rex.WRB gs (bad) fwait popq sbb fnstcw repnz loop (bad) insb (bad) cmp xchg xchg (bad) (bad) mov test (bad) cwtl mov push cmc pushfq jmp sub out addr32 cmp adc rcll rex.WRX mov (bad) sarl cld push cmp jno (bad) rex push repz add cmp or rex.WRB gs adc rclb stc (bad) subb popfq cmp (bad) mov out jge cmp (bad) imul nop push lea mov sbb (bad) xchg push (bad) popfq gs pop jbe fsubrp xor mov cwtl adc adc stos push cmpsl addr32 divb nop mov cmc xor and sub in lods xchg nop push or gs (bad) and xchg rex.X xchg (bad) cltd xchg sub adc retq rex.WX and adc mov (bad) xor imul push sbb ljmp loopne mov sub insl lret sbb ss xchg adc or xchg and out rex.RB cltd nop imul mov (bad) out mov mov (bad) imul mov cmpsb adc push test jnp es fstps pushq jg jo clc ror xchg mov (bad) mov rex.RX adcl lock (bad) lods mov (bad) add push repnz clc pushfq add sbb cmp mov and pushfq (bad) (bad) lahf cli (bad) (bad) lods clc cmc (bad) jnp sub mov imul movabs xlat sahf (bad) (bad) (bad) mov stc movabs add clts in pop addr32 xchg fcomp fld std (bad) loopne (bad) movabs sbbb xor fstpl xchg (bad) movabs ficoml movabs xchg push or fs sub xchg fsubs pushq scas mov leaveq sbb cs cmp test lret jno push movsl data16 xchg repz xchg in rex.RB leaveq mov mov (bad) mov insb rex.WXB pushq mov or fidivr rcll (bad) xchg (bad) xor sbb (bad) iret (bad) mov nop stos sbbl sbb mov es je repnz (bad) pop xchg jmpq xchg cmpl add cli xchg cs (bad) (bad) add callq jb pop roll fs pop sub jg and movsl add lea xchg xchg cltd in adc sarl (bad) mov push in mov (bad) fisubr (bad) push jb cwtl xchg jbe xlat xchg test rclb fcmovne in je xchg (bad) ss jle leaveq stos mov rex.RB rex.RXB lods xchg outsl fxch outsb push sub enterq clc (bad) mov xchg lahf callq loopne xchg popfq (bad) (bad) (bad) rex.RX cwtl (bad) sbb stos rex.WX fildll rex sbb xchg pop negl retq stos sbb pop mov jle or (bad) jrcxz add ficompl push jl (bad) xchg (bad) and lock in (bad) pop and sub adc (bad) cmpsl xchg sbb rex push shlb in mov pushfq scas cli enterq movslq lret cmpsl pop add outsl xchg xchg mov or rex.RB fwait xchg cmp jns xor (bad) xchg fdivl (bad) sub (bad) jge nop add sub clc mov xor xchg ja movabs (bad) loope pushfq adc movsb rex.WR repnz xlat (bad) int add in cli sbb rex.RB sub int3 mov mov or rex.RX mov repnz jp add adc jne rex.WRXB scas ja repnz scas jmpq mov xor sahf int jnp mov jae mov (bad) fdivrl mov cmpsl cmp leaveq movabs lret stos add sbb fsts xchg fimul (bad) lret fwait and pop movslq movabs (bad) sub rex.WRXB jnp mov or sbb sub fistp (bad) xchg mov mov add decb retq (bad) xlat pushq xchg sbb rclb xchg jg push mov xchg (bad) (bad) add push test xchg sbb data16 test pushfq (bad) sbb pavgb mov push xchg in and rex.WR push scas cli icebp adc ja cwtl lret xchg mov callq mov js stos movsb cmp stc outsl retq xchg movabs (bad) xchg pop mov movabs out (bad) push xchg shrl test rex.RXB or rex.WRX rex.WRXB rex.R xchg (bad) (bad) xor pop mov pushfq in (bad) rex.WRX pop jrcxz pmuludq in xor addr32 pop mov mov jbe xchg mov sub sub rex.R cmpsl iret mov repnz xchg (bad) out cs pop xchg (bad) xchg mov mov mov (bad) jns xchg movabs lret (bad) mov cmc hlt sbbl sbb mov scas out jge jne pop sub cmp lock cwtl push jg (bad) (bad) xchg mov xchg and add jmp in add sub popfq data16 sbb (bad) cmp rclb jp rex.WR xchg clc out enterq fstl mov loop in lods iret (bad) imul sahf and mov (bad) (bad) mov (bad) lahf outsl mov imul jle pop xchg and push hlt or sbb add xchg (bad) ja mov cmp xor test jmp scas loopne cmp push pop mov (bad) (bad) sub xchg sbb fiadd add gs jl xchg ds mov fsubs xchg xorb nop xor js data16 fistl xchg mov fidivr pop jg cmpl add sub pop rex.RXB cmp (bad) push out pop sbb adc cmpb rex.WB push mov jp xor in test movabs xchg xor (bad) pop sub adc cwtl negb (bad) (bad) mov or jo (bad) cmp decb xchg iret test (bad) push (bad) mov icebp mov cltd jno scas movabs mov sub (bad) (bad) xchg cmp int xchg pushfq fsubr adc (bad) xchg fidivrl scas cmp xchg push int rcl adc ficoml (bad) movabs cmp mov xchg (bad) mov js add out xchg rex.RB (bad) add stos mov sbb enterq adc jmpq push mov xchg popfq mov xchg cmc (bad) mov fwait jne add retq xlat out leaveq je xchg rex.W jmp (bad) and cmp lods icebp xchg sub or pushfq xchg (bad) imul xchg push and mov pushfq and mov pushq rorl (bad) adc mov or pushq cld fildll (bad) xchg sbb push clc jbe rolb iret cmp xor popfq (bad) (bad) or (bad) sti in pop xchg and push (bad) (bad) outsl mov xchg (bad) jl push test xor retq sub mov negl rcrl (bad) (bad) faddl push imul xchg pop cmp mov imull out cld (bad) jnp sub sub xchg fcoml xchg cmp scas fldl xchg xchg mov (bad) insb cmp imul pop push sbb rex.WXB fwait xchg es or iret lahf pop xor rorl and std rex.W sahf (bad) xchg movabs jae movslq xchg rex.RX rex.WRX ficom (bad) insb (bad) jg loope test mov add insl (bad) cwtl sarb ds push in cmc pushq sub jo mov push xlat mov and xchg (bad) add push pop movabs rex.RX fwait (bad) mov in scas shrb add jae fdivs xchg jl (bad) sbb (bad) push cmc xor sub or (bad) enterq sbb sub jle pop data16 cmp movabs mov rclb (bad) push lret ja rex.WX or not movsb movsb mov addr32 imul movabs movabs popfq setno (bad) (bad) imul cmp xchg callq loopne (bad) (bad) sbb push push std and jbe (bad) adc and (bad) sti adc cmp clc movabs xchg (bad) jle sub pop out and (bad) mov rex.WRX rex.B and mov insb popfq fsubrl nop (bad) mov sub pushq (bad) fst pop xor movabs and rex.WB (bad) mov (bad) outsb cmp movabs mov sub insl rcrl add fidivl outsb sub push stos jno nop sbb jrcxz iret icebp sti mov xchg jrcxz fs xor pop fsubs xchg mov loop movslq (bad) lods movslq retq js (bad) (bad) pop rex.WRXB scas mov lret (bad) (bad) out and ss mov add jno mov or lea cmp (bad) shlq (bad) mov or jne mov mov popfq (bad) (bad) inc xor (bad) mov (bad) and pushq out stos fistpl mov adc sbb rex.B loope test jnp rex.R sub push stc scas or int cmp jno (bad) and xor imul mov rex.WXB add sbb xchg pushq divl xchg pop ror addr32 mov pop xchg mov xchg and (bad) stos (bad) mov in rex.RXB cmp mov movabs and rcrb and or js add movabs cmp cmp pop data16 (bad) movsb mov jl movsl and in and mov and mov push (bad) scas and and cld cmp (bad) mov pushq (bad) sahf sar xlat scas (bad) mov (bad) mov mov (bad) shl (bad) fidivl and fstps (bad) rex.B repz xchg (bad) add rex.XB rex.RXB ss nop es xchg sbb (bad) callq pop xchg xchg xor push retq fisub mov xchg mov lret (bad) scas xchg rcrb xlat in rex.WB dec fwait sub fiadd mov sub jge jle (bad) (bad) xchg data16 pop (bad) cmp push cmp loopne rex.WRX xchg pop jo lods jne pop mov (bad) sahf adc movabs iret scas xor ja push xchg mov retq and (bad) xchg add mov cli xchg rex.WB and add insl push sub jo sbb xchg xchg pushq fistpl js mov pop sti and sbb rex.WRXB push add (bad) cmp enterq push xlat (bad) mov sbb mov jle xchg cmpsl jmp xchg or mov or xlat in out insl rcll xchg (bad) (bad) mov adc (bad) notb adc sub in fcomi xchg clc cmpsb (bad) (bad) (bad) or cwtl mov cmpsl je vpmovzxbq xchg push or xor xchg sbb cmc push sbb xlat imul xchg (bad) sbb rex.WXB out (bad) loopne scas stc xchg xchg lret cwtl (bad) rex.W xchg retq out (bad) mul mov test mov shl xchg rex.RB lock or seta jrcxz cli rcrl and out xchg (bad) sub popfq and xchg or shr xor movabs mov leaveq rex jns mov jge or (bad) clc sbb mov fnstsw xchg add mov scas (bad) add sti (bad) xchg je int sahf xor xchg scas mov fldt sub pop retq mov movabs sbb shrl montmul cmpsb andb lods (bad) retq xlat popfq int3 movabs sarl imul addr32 sub stos mov lock sbb (bad) es sub xlat push outsl or scas in outsl (bad) xchg pop popfq fs cli ss push movabs xchg (bad) xchg (bad) in sub out sbb in lea mull mov jp lods fwait sub adc xchg js pop (bad) loope sbb add rex.WRX icebp xchg xor iret pop sub movsb mov in (bad) cmp jae rex.XB cmp (bad) xor jrcxz adc enterq xchg lods mov mov (bad) int3 (bad) xchg mov or fidiv fs (bad) adc xchg bnd jmpq rex.RXB xchg ss rcll fwait cmp mov xchg jp,pn push repz fwait xchg sbb rcrb test (bad) jrcxz and rex.WB rex.WXB (bad) (bad) movabs sub adc imul mov xchg cltd push (bad) insl std (bad) (bad) mov xchg adc scas notb pushfq rex.WRXB sub repnz add (bad) (bad) xchg pushq sbb ds (bad) fdivl adc jmpq (bad) insl pop pop pop shlb lock fidiv retq sti rex.WRX lods rex.WXB rex.XB (bad) cmp xchg pushfq jl ficompl rol mov mov fstl fbld mov (bad) (bad) xchg roll rex.RXB loopne sbb jle (bad) out pushfq pop int3 mov popfq adc xchg mov decl xchg jb movabs movsl imul rex.WR rex.WRXB retq jb or movslq mov add mov adc outsl xchg xchg lods loopne stos sub and xor lret addr32 push (bad) jp sahf mov pop out imul xchg iret rex.X add cmp xor sbb pop test rex.XB imul repnz sbb imull repnz rep sti xor mov xchg nop outsb and in pushq jmpq jae (bad) sbb jle fisttp stc pop mov movabs popfq push sahf pop xor movabs or xor outsl rex.RX sarb mov out xchg lods push jnp loope add xchg int jo rex.B and xchg cltd hlt add xor (bad) or xchg insb (bad) shll mov mov jae fcoms lret xor pushfq cmp retq rolb out sub sbb repnz rex.WRX fsubr xchg icebp mov outsl int mull rex.RXB and (bad) ja (bad) outsl or lahf rex.RX jmp rex.RB and xchg (bad) (bad) (bad) fsubl sub loop rex.RXB jge add xchg lods (bad) adc movabs mov mov xchg push or fs mov cmp andb (bad) js in test xor hlt pushfq fidiv (bad) out rex.WXB rex.WB callq cmp ss mov mov (bad) cmpsl rcrl retq xchg int3 xchg cmpsb jo pop adc (bad) test cld icebp fldt mov adc xchg adc mov jmp cld (bad) lcall mov (bad) cltq cmc (bad) jrcxz rex data16 (bad) cmp sahf cmp mov hlt mov xchg cmc xchg test sbb cmpsl (bad) movsb fdivrl sub mov insb fdivp mov sahf mov xchg fidivrl or fbstp xchg rcr jl rorl (bad) loop sub popfq rex.B lret incb add (bad) jno stos jae (bad) jl fidiv mov icebp (bad) (bad) xchg insb fisubrl cmp or mov and (bad) pushq fdivrs cmp hlt xor mov pop lret xchg push xchg in rex.WRX andb roll rcll (bad) xchg jns xchg retq test sbb xchg ror sahf rex.RB js fdivl adc pop rex rex.WRX movslq inc xor mov je mov push test out jb pop (bad) sub (bad) mov out xchg mov xchg in std pop xchg js mov insb cmp xor push cmp jge cwtl mov xchg xchg xchg loop xor cmp (bad) mov jo xor xor mov jne cmpl mov loopne sahf loopne adc xchg movabs jbe add retq sahf mov add push in (bad) test (bad) jno (bad) rex es pmaxsw mov in rex.WRXB fwait adc (bad) mov loopne lods movslq and sbbl pushq sarl rex.RX sub xchg pushq rex.RXB sti xor lods mov rclb or and xor (bad) mov rex.WX mov pushq cli (bad) rex.R (bad) add (bad) mov xchg (bad) in fistl je rex.XB jo cmp insb (bad) cmpsl sub addl adc lret (bad) lea lea jns xchg sbb push jb sub rex.B and outsl and pop (bad) jo andb push cli lock pushq jrcxz push mov movslq mov ds callq and and lock cwtl icebp xor xor xchg (bad) sarb test (bad) sahf rex idivl (bad) push jrcxz nop jge callq out (bad) (bad) shll in (bad) or (bad) fbstp add jns (bad) push nop sahf pop insb (bad) mov ror (bad) ficomp add push gs push jnp pop movabs cmpsl rex.WR rex.B out leaveq jmpq push (bad) sub pop cmp mov insb or shlb cmp mov sahf add mov pop in cmpsl mov or adc andb insl rex.RB jrcxz notl cmpsb (bad) mov jns jae roll insb rex.RXB sbb (bad) xchg sbbl jns imul in pushfq pop nop (bad) pop imul push (bad) or jbe (bad) add xchg mov addl pop jbe jb (bad) in xchg movabs scas (bad) sbb add mov rex.WRB jle gs mov (bad) lods mov push push retq add cmp sbb in xchg mov (bad) or or rorl (bad) push adc fnsave (bad) cli (bad) rex.WB (bad) (bad) jns rex.WRXB xchg in mov or fnsave pushfq fsubs cmp or (bad) jae xchg incl outsl test js rex.WXB xchg adc (bad) popfq orl push imul rex.RXB mov xor rex.RXB lahf pop mov (bad) jo retq cmc push nop repnz fisubl xchg (bad) mov mov or mov popfq callq (bad) mov sbb push xor movsb (bad) test pushfq (bad) jne sbb outsb nop movslq push fnstsw jmp roll xchg rex.WX stos mov sbb cmp (bad) (bad) roll rex.WB lretw movsl mov rex.RB rex.W sbb movabs cmpsb jrcxz int int3 mov rex.WRXB repnz rex.WRB negl rex.WXB out (bad) and mov in mov (bad) je pop gs lods loop (bad) push sub js and (bad) cmpsb add adc lahf rex.W test pop (bad) xchg stc jrcxz rex rex.RXB xchg movabs rex.WR sbbl add sub rex.WRX rorb xor mov mov scas or (bad) jne pop jg and ja xor retq sarb (bad) push xchg add pushfq xchg movabs sahf (bad) jp mov (bad) (bad) pop xchg movsl shl loop stos (bad) xchg add lea xchg lods scas mov sahf pop sbb imul cmpsl fmul nop cmpsb adc in mov in mov rex.WXB xchg (bad) ja gs mov ss (bad) rex.WRX lret pop (bad) adc nop pop test sahf push xor mov hlt sbb mov movhps xchg push xor lret xchg and mov adc int3 sbb cltd (bad) cmp jge scas xchg repnz shrb fwait data16 repz push movslq retq lock push add jrcxz notl data16 cwtl push and or rorl hlt xchg lods sub scas movabs test (bad) xchg jp add (bad) (bad) in xchg adc xlat outsl jmp (bad) sbb xchg cwtl cs movabs mov mov mov jg pop adc (bad) and outsl fwait sahf movabs mov hlt xchg (bad) nop xchg cld rorl pushq push loop adc rcrb int in outsb stos cmpsl cs xor mov add xchg (bad) or and movabs gs pushq rex.WRX movabs and imul sahf jmpq rex.XB (bad) mov (bad) std mov and mov movabs rex.RXB rex.WRB push jns (bad) lret or pushq enterq popfq mull xor (bad) adc pushq scas jrcxz cmpsl xchg sub imul jp adc je mov rex imul or xchg movabs in rex.WRXB push movsl pcmpeqb mov add mull push repz and mov sbb (bad) ficom add mov or and loop sahf stos hlt adc and ja jge pop mov jmp pop jg in gs (bad) xorl loop mov out xchg xchg lea (bad) cwtl pop pop fdiv pop sbb cmp (bad) out xor and or pop mov mov xlat sbb movabs pushq (bad) or imull or mov and (bad) mov repz scas lahf scas xlat jnp xchg xchg jmp loopne (bad) mov xlat or mov movb adc pop xchg push cs lods rex.W addr32 mov pop or movnti std fcmovnb imul cmp mov stc (bad) mov and shrb rex.X pushq sbb sbb jno lods adc fstpl fucomi rex.WRXB in jns mov in jb (bad) imul rex loop push mov sub rex.X (bad) rex.W xchg mov xchg sub ficomp mov jmp orl (bad) pop pushq es ljmp (bad) out sub mov and adc lahf jbe std cmpsb mov rex.WRB leaveq rex.RXB pushq nop (bad) and je jle insl (bad) jnp adc callq adc jle (bad) jbe (bad) xor xchg sahf retq add outsl sbb xchg (bad) lea and mov mov jnp lods (bad) hlt data16 push sub cmc flds xchg xchg (bad) imul fistp (bad) xchg and mov and js sbb retq sarb and adc cmc xchg rcr out hlt sub leaveq or loop sbb sub and cmp fisub cmpsl (bad) (bad) mov fwait mov push cwtl movsl cs scas xchg (bad) and in movabs imul (bad) or cmp rcrl (bad) (bad) rex.WRB rex.RB (bad) push pop jnp mov adc xchg sahf add ficom cmpsb fisubrl insl repnz sbbb add (bad) push jmp mov and jmp outsl sub movabs rex.WRXB mov mov xchg ss movabs jne (bad) callq adc pop adc jmp pushq stos (bad) cmc (bad) pop (bad) out mov bnd adc mov sub lea xchg (bad) or xchg sarb rex.WX (bad) push repz fwait push rcrl adc rolb fwait test pop (bad) mov xchg int3 cwtl mov jnp jl (bad) (bad) mov sahf cmp fnop xor (bad) mov outsl int3 xchg add ss stos nop sub scas (bad) mov sahf rcr pop jp xchg xlat rex.WXB rex.X push jns jbe loope (bad) cltd add jmpq test mov nop add pushq mov cli mov retq rex.WX lock lea fisttp pushq cmovns cmp push cli push fs xchg mov mov xchg (bad) pushq int3 xchg mov in (bad) fild fbld insl mov fcoml pop xchg push cld ja (bad) insl scas gs jmp fstpt xchg pop in xor cwtl (bad) cmpsb xchg idivb mov xchg add std sbb pop test mov mov rcrb cmpsl test lret pop xchg (bad) mov sahf leaveq (bad) adc ror (bad) fimul push adc mov jg cld add (bad) sub rex.RXB mov fdiv outsl cmpsl push jrcxz clc jp retq std add pop leaveq or mov (bad) movabs movabs sahf (bad) movslq fsubrl rex.W scas push (bad) movabs and xchg stos jge (bad) mov enterq sbb fdivrl (bad) jns fnsave cld sub (bad) leaveq jg pop xchg retq pushq retq (bad) xor std fiaddl mov rex.B xlat sbb jns jno cmp cmc add gs jp fidivr mov (bad) xchg adc xchg fmull adc push movsl scas xchg int rex.WX add xchg xchg (bad) xchg (bad) sub adc (bad) cmpsb dec pushq jo jmp xchg fcomip xchg bnd push jno push addr32 out pop jp xlat cld cmp stos xchg sbb pop pop outsl fadds push jg imull je (bad) push mov insl rex.RXB adc sub push clc test (bad) jne movabs fstpt xchg rex.W enterq ficom xlat rex.WRX (bad) xchg adc imull (bad) stos (bad) loopne rex.WRB rex.WR sub lret pop xchg xor movabs (bad) sahf add pushfq xor leaveq iret movsl (bad) (bad) or sahf mov cmp rex.WRB rex.RXB (bad) hlt insl pushq mov or rex.RXB sar xchg xchg (bad) xchg and std rex sbb test jbe shll rex.X or sub mov movabs adc (bad) (bad) jne out xchg lahf jg jbe adc cwtl sub mov pop cmp xchg jnp hlt xchg mov xchg xchg out lods nop cli lock and or pop adc (bad) retw (bad) jbe ror jmpq xchg jge lods (bad) cmc pushfq insl add or xor jge hlt mov jle (bad) (bad) push lret orb push mov mov mov incb (bad) or xchg stos test (bad) (bad) xchg js (bad) test adc rcll fidiv pushq xor (bad) rex.X pop xchg int and fwait xchg push (bad) xlat mov (bad) sahf cmpsl insl xor or rex.WXB lods xchg adc sub cwtl cmp jno scas (bad) jns mov jmp rex.WX xchg js je xchg adc cs pushq mov (bad) jo (bad) cwtl (bad) movabs cwtl rex.WRX mov lret xchg sar add movsl xor cmc xchg and or sub mov rex.W xchg sbb adc outsb pushq add rex.RX sub (bad) js mov popfq rex.B jmpq mov mov fimul cmp xchg fistpl cmp mov mov fbld (bad) rex.W xchg (bad) jp adc push and (bad) rex.WB pop (bad) pop pop (bad) ss pop out mov rex.W mov data16 xor int push mov jno pop jbe sbb sbb subl scas cwtl cmp push xchg cmp lock insl push cmp movnti (bad) in jge js retq lahf jmp jge adc (bad) out idivl or rex leaveq insl movsl xchg shr mov pop mov stc xchg out xor add stos outsb cmp add or sbb int3 in imul idivl add sbb xchg adc fstps insb cli (bad) mulb rex.WX vandps mov jne and jo stos callq sbb sub ja adc mov (bad) lods mov xchg pop push stc test rex.WXB (bad) xchg cmc fnstcw cmp xor rolb fadds fstps scas cmc push loop lock movsl (bad) or test outsb xchg and (bad) rex.W repnz xchg out mov mov loope cmp movabs xor cmp jbe pop sbb xor lret scas shrb or mov outsl loop xor adc (bad) xchg sub pop xchg fisubr adc (bad) scas icebp loope pushfq sbb in stc rex.WRXB gs mov roll pushfq xchg sub (bad) vxorps add movsl adc mov (bad) addb cwtl pop clc or nop mov xor sbb rex.WB jle fisubrl lods xchg mov movabs pop iret int3 (bad) adc push adc lahf clc xchg mov cld sub ss xchg mov sbb test imul cmp cmp xchg xchg out xchg mov insb lret movsb pushq addr32 (bad) and adc (bad) xor cmp sub (bad) xchg cwtl out enterq outsb rex.RXB insl (bad) rolb rex.WXB (bad) nop mov push pop (bad) jbe (bad) mov (bad) ds retq retq popfq sbb mov rex.WXB movsw jae cmp (bad) (bad) sbb cmp mov jp adc lock mov lea ss mov callq jo xor repnz (bad) pushq add cli rex.WRX (bad) pushfq (bad) xchg scas in xchg xchg (bad) loop and xorl idivb pop (bad) rex.WRB (bad) notl ficomp (bad) sbb pop rcrl (bad) xchg cmpsb (bad) xchg add cmp or and cltd sub jbe mov gs mov movabs (bad) (bad) mov movsb loope xchg out jg lret cld loopne add xchg pushfq or cmpsb push add ds add callq jrcxz jl add add or lock (bad) rorl (bad) or sahf lods ficom decl xchg (bad) jg mov sbb nop (bad) (bad) or out xchg cmp ficomp mov or jno mov jge insb imul sahf pop sbb mov popfq fstps (bad) (bad) out testb outsb fs test mov (bad) and rex.XB (bad) push outsb adc push xlat nop (bad) jmp rex.XB mov outsl (bad) mov pushq or (bad) mov repnz (bad) fisttp cmpsl lret (bad) mov fildll mov jo cs adc (bad) insb (bad) test push mov mov hlt out xchg or imul or jrcxz vmovhps mov pushfq lock jge rex.W jp outsl shll pushq jl (bad) repz mov push ja fwait or insb (bad) rex.WR rex.X pop shrb sub scas rex.WRB outsl cwtl add (bad) loop and iret pop rex.WRX push add mov je loopne cmp (bad) sbb mov repz retq cmp push mov pushq nop (bad) scas rex.R imul sbb (bad) xchg (bad) (bad) pop xchg (bad) repz and cltd es cltd cmc jmp jbe jno fimul jmpq and nop imul rcl mov rclb or or jo (bad) (bad) rex.R adc jo cmp je xor in mov cld retq paddusw push movabs (bad) (bad) (bad) add mov mov outsl rex.WX hlt mov and rex.WRXB jbe sub (bad) mov jnp or rex.WRX mov shlb xchg xor out scas push xor sbb mov cmp pop (bad) or shrl cmp loope (bad) sbb fs inc (bad) or rex.WRXB jne cmp (bad) out mov stos jae rex.R adc xchg lret (bad) (bad) (bad) stos leaveq lods imul (bad) jo ds imul sub pop jbe jp icebp adc sub stos (bad) loop jmp (bad) sti movabs add (bad) push loopne int3 rex.RXB rex.RB jno movabs (bad) repnz xchg sub jno cwtl add (bad) rex.WRX btc movabs (bad) callq cld stos ja cltd xor lock xchg std rex.WX (bad) cmc mov rex.WRB (bad) jmp adc sub sarb cwtl sub sti mov (bad) movabs (bad) cs test jno outsl adc (bad) ja sub test cs add jb or clc xchg (bad) (bad) rclb jge xor jle jl ss stos add (bad) xchg hlt pop cmp pushfq sub stos (bad) or pop sahf xchg lret (bad) fistl sbb imul mov push ss cmpsl xor xor fild adc or and rex.WXB jno mov xchg scas cmp (bad) xchg (bad) and (bad) xchg fs mov pop imul jmpq jnp rex.WB sub xchg scas movabs add nop xchg cmp (bad) lock mov pop sahf in rex.WR cmc movabs push fcoml jmp movsl sub (bad) (bad) scas ss push cmpsl mov pushfq xor sahf divb loop (bad) pushfq mov mov xor popq sbb and xchg leaveq sub callq and xchg sbb jle ss rorl jno mov (bad) jge mov xor jae and sti test jno scas loopne sbb xchg fdiv mov sbb clc fcmovnu fdivs mov jg (bad) or mov adcl hlt mov jmp test sahf jae mov rex.XB sahf mov rex.R mov push mov mov add xchg xchg js sub mov mov mov (bad) sub rex.XB loope mov jle cmc mov scas outsl xor rex.X movslq adc sub and imul xchg movabs mov (bad) cld sub pushfq jrcxz or xchg stos je ror sti roll negl push fisubl lods xchg movabs pop notl rex.WXB xchg rex.WRXB shrb sub sbb mov pop cltd in pushq mov jno (bad) xchg sbb fimull movslq hlt push mov std nop cmp xchg insb iret cld push xlat mov xchg or fs movsb addr32 (bad) (bad) xchg adc pushq lret lods iret mov fist cmc mov mov mov repnz jrcxz pop mov cmpsl lea (bad) mov mov (bad) fist pop popq (bad) jno jnp sbb insb cld rex.B rex.WRB lods (bad) icebp out sahf push fistl loop movslq movabs add rorl nop (bad) fdivrl retq pop or xchg cmp fwait and pushfq ds mov cmc (bad) jrcxz clc xchg (bad) je xor out pushfq rex.RB xchg xchg mov xchg mov mov (bad) add in mov xchg (bad) jl sub lock mov out xchg xchg pushq pop xchg or or rex.WX rex.WRXB xchg cwtl mov (bad) (bad) pop xor xchg mov pop rex.B (bad) nop adc imul out (bad) add xor mov cltd (bad) movabs mov imul mov pushq stos sahf cmp pop cmp loopne imul sub (bad) pop (bad) cmpsl pop (bad) pop mov rorb or neg ja and (bad) subl xor int rex.WRB sub pop cld addr32 and push stos push fdivs jne imul push pop mov or idivb jne (bad) (bad) ja jg hlt ss xor xor pushq sbb rex.WRXB rex.WR mov add sbb scas movslq (bad) fcoml jmp mov pushq (bad) lock jl mov rex.RXB movabs ja adc scas adc adcl fcomps mov cli and or jp outsb xor xor xchg stc (bad) sbb push xchg (bad) mov (bad) mov xchg callq mov adc je sti (bad) (bad) mov (bad) (bad) movslq cltq std pop loopne xchg xchg (bad) add stos (bad) icebp push pushfq (bad) je fadd imul cld fwait notl notb int3 mov sbbl (bad) mov mov (bad) jle cmpsb in in (bad) (bad) jo pop cltd (bad) (bad) (bad) ja xchg retq (bad) or loopne ror (bad) (bad) rex.WRX (bad) addr32 sahf cs out imul (bad) (bad) rex.WR lahf (bad) mov testb movabs rolb sbb adc in imull (bad) imul jns add (bad) (bad) movabs cld xchg loopne xchg push rex.WRX xor or xchg stos sub cmp callq sub mov sahf sti lods xchg lret sbb rex.RXB data16 stos push push sub mov cld cmp sahf (bad) pushq mov xor pop retq adc pop loopne (bad) fcoml iret push je xchg adcl xchg mov jrcxz sub es lods push adc fistp jbe xor xor mov xchg cmc add fdivs (bad) or jle (bad) retq xchg xchg (bad) mov or jno xor cmp jge scas std fisttp add in pop scas xchg and fwait add out mov pop (bad) (bad) movsb mov mov test cmpsb (bad) lods clc (bad) and (bad) jge sbb sub sub (bad) sbbl (bad) jae rex.WR xor enterq rex.WRXB fwait jrcxz rcl (bad) jp loopne rex.WR rex.WB retq rcll out pop mov xor xchg xor xor xchg xor in xchg push xchg rcrl in loope mov jp or sbb insb mov sbb xchg sub (bad) int3 jo cmc push mov jmp (bad) hlt xor mov or (bad) pushq adc xchg outsl out mov (bad) outsl push xor add pop paddw gs lea nop jne rcl mov jnp rex.XB jnp,pt rex.RX push push add (bad) push loop jo lret adc sbb cltd je push int pop (bad) jle test xchg adc fs gs (bad) sbb mov (bad) xlat rex.WXB (bad) rex.WRB xor mov mov jbe push repz lock imul adc (bad) sub rex.RB bnd or sub loopne xchg xor outsb pushq gs (bad) and in sub ja rex.W add paddb scas and fwait cmpsq data16 push loopne xor cwtl lock or mov cmc mov jnp ds shlb sbb rcl imul xor xchg jmp retq mov adc movabs rex.X jae xchg or xor fldcw jns movabs movabs cmp mov paddusw rex.WRXB and (bad) cmp cs loop xchg push clc movsl repnz cwtl (bad) addr32 lahf test cmp xchg mov xchg rex.X (bad) repz xor sahf sub xchg push insl xchg rcrl outsl pop xchg out rcr sbb insb xchg add sub in rclb adc xor sub pop jrcxz (bad) pop (bad) rex.WB insl (bad) (bad) xlat mov mov enterq cwtl test sub jnp pop rex.WB (bad) lahf (bad) cmpsl (bad) fs xor sub jmp adc (bad) push in mov rex.WR ja ficompl adc rex.XB leaveq stos xchg sbb (bad) (bad) data16 adc push idivb add and jmp cwtl (bad) rex.WRB (bad) std ja jp jne fcompl pushfq sub (bad) xor popfq fisubr (bad) xchg sub jbe sbb jne shlb sti cmpsb mov rex.WRXB (bad) int (bad) setns push sub push add mov lahf xchg popfq lret outsb mov sub nop in xchg sbb cmp xor mov adc sub sarb outsb cwtl fiadd and rex.WRXB jge or mov loopne sbb outsb pop out xchg negb cwtl (bad) callq adc lahf pop push xor jle faddp sbb ror add movabs jg lahf js sbb pop sti (bad) or xor xor lahf adc and repz and mov adc mov jb clc or loope movabs cmp movabs jge or (bad) fnsave (bad) rcrb rex.RX (bad) (bad) add outsl sub decb (bad) jno insb fistpll (bad) mov stos sub and int enterq xor fwait push pop popfq cwtl (bad) jle pop iret retq rclb lahf loop jo lret cmp (bad) and pop cmp (bad) jbe adc lods mov data16 jmp sbb adc mov pushq mov pop imul adc je sbb cmp sub jnp push imulb outsb adc cltd addr32 xchg adcl test or cwtl rex.WX rex.WRX or cmp in (bad) (bad) mov push jb push xchg (bad) scas mov lret fsubrl rex.WR pop push pop mov jge or cmp rolb (bad) clc jbe or jge cmc xlat mov rcrl icebp sbb push loope out mov je outsb mov (bad) scas (bad) (bad) add push jnp (bad) data16 rex.WR rex.RX mov mov push (bad) xor lea fnstsw (bad) sub mov repz rex.WRXB push in (bad) jle cli jne mov movabs (bad) mov in push (bad) retq pop fimul and ja push cmp xchg push rex.WB (bad) mov (bad) lretw mov (bad) (bad) pushq fidivl and or jge pop mov popfq pushq mov and add and lea mov (bad) pop shrb sahf xchg pop sub cmp (bad) loop pop jbe sar jnp sbb and cmp xchg fs jbe (bad) mov es retq and (bad) std push and pushq xchg imul (bad) push sub pushfq out enterq iret (bad) mov xor rex.WRB pop (bad) outsb xorb in rex.W loop mov sbb xchg or (bad) pushq mov sub (bad) shlb mov movabs (bad) (bad) push pxor mov pop (bad) cmp xchg (bad) pop insb push jb xor pushfq fs (bad) movq xchg mov (bad) fisubr xchg push (bad) push mov (bad) adcl stos (bad) sub movslq cmp fbld xchg (bad) shrl movabs gs mov sti jg sub popfq or leaveq out cwtl xchg sub mov push sti in xchg or push or jge xchg movsl in jp rex.RXB out (bad) xchg mov lods xchg pop xchg imul (bad) (bad) cmp pushq xchg jne lahf rex.WRB mov mov sahf push rex.RXB xor sbb xchg movabs jrcxz cmpsb sahf and imul jmpq mov ja pop xchg rex.WX xchg and (bad) ds xchg mov xor (bad) xchg gs fisub xchg (bad) adc cmp xor std pop xchg rcrl mov icebp mov popfq out pop lret xchg push out loopne (bad) in rorb rex.WR rex.WRXB scas xchg shrb lahf xchg add xchg rex.WR (bad) jle scas (bad) rex.X jl imul lret xchg stos mull negb stos out xchg jns (bad) (bad) ss xchg sub mov push retq stos or imul fistpl jmp add mov push push sbb lods (bad) pop (bad) in xchg cwtl mov push (bad) (bad) add rex.WRX xchg jge jmpq (bad) pushfq (bad) je jrcxz nop pop (bad) out fisubrl in xchg xchg push mov mov rex jg (bad) ds (bad) cltd lret (bad) push insb (bad) xchg xchg add out add adc test xchg or scas xchg mov sbb rex.RB mov pop leaveq jo addr32 sarl cmc (bad) add (bad) cld pop xchg shlb sub xchg (bad) stos and enterq sahf icebp movabs cwtl mov xlat cmp mov outsl cmp mov sub (bad) (bad) sub mov outsl pushfq popfq addl outsl jmp xor mov jmpq adc pushfq fisubl push mov xchg and fcoms or and lods (bad) lret sbb stc nop fs mov rex.WRXB cmp cmc addb (bad) cmpsb movl (bad) sar cmp pushfq movsb (bad) gs (bad) pop xchg (bad) mov xchg xchg mov xchg mov mov adc sbb callq mov test in test mov (bad) mov and cmp insl in (bad) xchg and movabs jrcxz fstps sub (bad) sahf (bad) movslq movabs xchg (bad) and loope movsb (bad) xchg fist leaveq xchg add xchg (bad) pop (bad) shl retq xchg popfq movabs xchg xorl mov xchg (bad) stos cmp add rex.XB js and (bad) sub (bad) rcrb xchg adc sbb mov jne (bad) cwtl xchg push add int mov rex.WRXB (bad) cmp and pushfq out in xchg jrcxz or pushq mov push or cld movsl addr32 (bad) xchg or lret pushq scas rex.WXB and and xor add add push insb push outsl xchg rex.W mov rex jne pop cmp jge sub mov mov and (bad) and pop (bad) addr32 xchg pushq rcr out xchg retq rex.WRB sbb int3 ficom jle push (bad) pop xchg retq (bad) leaveq int jno push xchg movabs loopne and xchg mov scas rex js adc mov jge sti xor (bad) and (bad) sahf nop mov add add lret mov cwtl xor adc rex.WR movabs fist sbb xchg xchg hlt movsb mov sbbl cmp jle (bad) push or out push ficoml mov fisttpll sahf dec cltd test jg jae mov hlt sti (bad) in movabs imul fsubl gs xchg xchg (bad) movslq mov lret sub out cmp (bad) ss test push cmp and fisubrl cmp rex.B out (bad) movsb mov xchg insl (bad) out sbb or iret (bad) add pop movsb jp imul mov popfq pop jrcxz pushq xor rcrl (bad) pop (bad) sahf jae and (bad) xchg cltd xchg pop jno sahf nop out mov (bad) in stos (bad) in rex.X xchg jle (bad) mov pushfq fdivs fcoml mov or cmp jbe pop (bad) loop mov (bad) imul ror mov rex sbb push mov push (bad) pushq cmp push cs jle rcll xchg and or cmp subb (bad) out mov ja jnp sahf lea movslq cmpsl in (bad) pushfq retq pop xchg rex.WXB (bad) sbb loopne cmp mov movabs nop in ja adc adc incb cltd rclb rex.W clc ds (bad) xchg adc jb hlt movabs push (bad) mov jg jae (bad) mov sbb mov mov retq mov enterq rex.WRXB sar (bad) pushq xchg (bad) (bad) or addr32 mov or (bad) push outsb rex.WRX rex.R or xchg addl xchg jp jrcxz test cs xchg push repz adc (bad) nop scas rex.XB (bad) mov xchg adc add fwait sub mov xchg cmp mov xchg jae scas negb mov push int loopne xchg cmc sbb or or and xchg (bad) std retq fildll xor and idivl xchg ds lret sarb rex.R mov xchg or add movabs or mov and xchg fxch and (bad) or in insb (bad) (bad) (bad) xor lock add fimull jns outsb rex.XB mov (bad) xchg in sub mov rex.R idivl cs xchg subl scas xchg adc insl int3 loopne (bad) or fistp (bad) mov jnp (bad) sub add xchg out push push insl cmp cltd sbb cld in test mov mov jnp (bad) stos scas in (bad) add cwtl jrcxz mov pushq lods add sub js cmp ja jne (bad) outsl add movabs cmpl xor js xchg movsb outsl rolb lret xor mov sbb jmpq rcll xor stos or rex.WXB cmp sbb retq fsubl (bad) scas callq or lods subb push adc shll incb mov sub xchg movslq rex.WX jg xlat pushq lea fld jo lods rex.X xlat add xchg shr xor xchg int3 sbb jmp or mov jg jb cmp loope clc imul rex mull jle outsb jl in nop mov (bad) pushfq (bad) (bad) scas or sub mov push fmull imul rex.RX sub popfq jmp jb sbb (bad) (bad) fs sbb mov jg sub cmpsb callq pop fmull int3 (bad) xchg movsl mov scas sub imul jbe testl rex push mov xchg callq sbb clc stos mov (bad) fcmovnbe (bad) and (bad) and mov (bad) cli cwtl (bad) sbb cltd lahf pushfq sub xchg and (bad) hlt adc add (bad) adc (bad) pop mov rex.XB xchg loope mov popfq push or pop xor (bad) (bad) out (bad) andl add stos imul xchg insl enterq sahf test xchg mov mov or adc pop lock xchg rorl (bad) cmpsb fadd iret cmc lea xchg mov cmpsb fwait jns ja loopne movslq adc mov js je (bad) xchg out sub sub (bad) (bad) or sti leaveq push rex.WX add xor jmpq jmpq jmpq fld1 mov cli push cmp scas xchg repz (bad) push lods fucomip jle push movabs mov addr32 jo jns xchg lahf movslq sti mov xchg cvttps2pi xlat mov (bad) xchg lret mov movabs cmc or movslq lahf rcr test rex.WX lret rcll jo incb sbb (bad) mov (bad) out sub fwait (bad) pop in xlat mov (bad) adc (bad) xchg pushfq rex.R lock sub cmpsl iret out xchg adc cmp or xlat add xchg or xchg out (bad) cmp iret ja cmc mov (bad) imul (bad) pop sahf adc (bad) (bad) push xchg cmp (bad) mov rex.WX adcl or (bad) enterq std nop sahf xchg sbb mov xchg or pop mov mov sub stos sbb jmpq mov scas movsb adc xchg xor notl cmp out (bad) retq mov cmp (bad) movabs outsl ss (bad) push cmc cltd and xchg mov insl or cmp xchg insb (bad) sub add or (bad) rex.XB mov xchg xchg ds and stos push cld stc imul (bad) je cmp sti (bad) scas xchg lock data16 callq xchg pop out and fildl sub mov leaveq push xchg retq movsb hlt cld mov xchg fdivrl add movabs cs adc (bad) xchg sub rex.RX sub or sub imul jne adc rex.WRX rex.B test iret mov pushfq fwait mov movabs and (bad) repz popfq xchg cmp rex.RB mov movsb fbstp stos jmp (bad) fidivr xchg fs or loopne jne adc mov int3 and (bad) xchg jae mov fcompl xchg xchg jp and xchg mov pop and mov rex.WR fdivrl sahf scas jno fcoms (bad) mov cmp sahf pushfq cmp testl mov cltd pushfq pop (bad) sbb rex.WRX enterq rex.W push movabs sbb push rex.WX cmp shr jbe pushfq (bad) or cltd and mov mov xchg mov add (bad) rex.W sub es jmp sahf hlt data16 or shl adc lods decb xchg je jbe (bad) xchg cmpsb xchg cmp leaveq iret orb in mov xchg stc push outsl imul jb sub in ja mov pop subl rex.WB pop or movabs xchg cmp push xchg mov jne retq xchg fsubrs (bad) jp push rex.WRXB (bad) xor push lods insl subl pop or push mov jne std (bad) int pushfq add jns cltd mov sub fldl pop xor pushq xchg (bad) cltd (bad) or jmpq test xchg sub jo std add push xchg fsubrs mov orl (bad) (bad) int3 loopne jle sbb push cmpsl in movabs sahf (bad) push jmp cmp pop xchg cmp sub lods (bad) jnp imul xchg pop and cmp retq popfq jne push fcoms lock jbe xchg jmpq test (bad) cltd jne sbb fistpl orb clc mov pop (bad) mov sub lods test jo test or (bad) cmp xchg fwait cmpsl mulb xchg cwtl jle rclb iret xor mov push (bad) mov ja sahf add retq lahf pop xor xchg (bad) out (bad) enterq (bad) pushfq (bad) data16 fs nop xchg jrcxz rex.RB xor xchg and mov (bad) adc sbb (bad) rex.RXB jbe rex.WRX xlat retq (bad) (bad) jge (bad) jge xchg xchg rex.WXB cli retq out or (bad) icebp lods jb mov mov flds jns (bad) int3 mov sarb mov rex.RX push iret leaveq loop sbb int sub rclb pushq sub jmpq jmp jle (bad) mov loop (bad) cmc nop (bad) mov (bad) and rex.RB xor jmp movsq or movsb and addr32 adc (bad) test or cmc or pop mov cwtl shrb (bad) lret ja rcrl adc and jns or movabs insl adc (bad) mov retq jp (bad) pop pushfq lea (bad) addr32 retq fs in movslq gs pop (bad) popfq xor adc rex.B rep imul push rex.RXB xchg xchg popfq push pushq iret hlt movabs rex.WXB or (bad) xchg cli pushfq xor mov je (bad) xchg (bad) or repz (bad) pushfq lods pop (bad) jp or hlt jg sahf or fstps jge (bad) cmp mov cmp mov cwtl sub (bad) (bad) (bad) jo addl sbb fidiv stc pop adc cmp cmp xchg sbb or xchg xchg and cld mov xchg imul addr32 (bad) push cli xchg xchg cmp and xchg cmpb retq push xchg fstpt pop js cwtl popfq in sahf mov mov mov xor in scas mov (bad) (bad) movabs scas push xchg pop cltd sbb int3 sub movslq (bad) (bad) ja push cmpsb cmp push cmp rex.WXB pop xchg idivl rex.WRXB (bad) or add push mov jno cltd hlt cwtl test fildll or xchg sub adc movslq callq pop imull sbb xchg insb mov push sbb in mov xor adc cmpsl stos xor xchg sub push adc adc fwait jmp jmpq fwait (bad) icebp cmpsb pop xchg (bad) (bad) (bad) xor fistp jp iret movsl mov adc jmp (bad) (bad) fmul (bad) xchg lahf jg addr32 out fwait or or mov pop (bad) jl icebp jnp fwait pushq pushq retq (bad) repz addr32 add push lea mov adc xor fcomp (bad) cmpsl xchg in rex.RB sub cwtl pushfq rex.WB clc lret movsb rex.WRX or pop push (bad) xchg fcoml jmpq xchg jg insl mov (bad) rex.RXB rex.RB mov pop stos xlat jo test lock mov lods mov push (bad) and movabs test (bad) xchg fidivrl and mov mov sub (bad) stc sahf repnz xchg pop (bad) leaveq xchg xor (bad) data16 xchg int scas movsl je out loopne in rex sti fldcw stc xchg fdivl push scas out (bad) xchg and repz rex.WR jg rex.WRB (bad) addr32 scas jns rex.WX and xor xchg (bad) movabs cmpsb pop hlt cltd sbb fcoml repz jnp (bad) scas rex.RB xchg rex.W xchg (bad) outsb shll test test cmp outsl and hlt lods rcrb divb xchg cmp (bad) (bad) in push idivl retq xchg sub jo (bad) xchg loop lret sbb push insb xchg lahf sub adc xchg add rex.WRB rex.RXB rex.WB sbb fimull add sbb pushfq jns pop sahf jl (bad) xchg neg lods add mov xchg and out mov jb or pop fs mov lods sub (bad) insl (bad) rex.XB rcll stos movabs rcr xchg mov sbb enterq xchg cld or mov sahf and and lock cld jmp adc pop (bad) jnp insl add lods jno sub fcompl (bad) retq push pop cld jb loope test xchg in (bad) xlat movabs add xchg (bad) stos adc fnstsw (bad) xchg add jge mov (bad) jp jbe lock rorb sub (bad) jrcxz mov jno (bad) push cmpb (bad) lret fwait pop fnsave fs adc jg movslq shrl (bad) push movsl imul push (bad) mov mov jge rex.WRB cld int3 (bad) (bad) sbb mov rex.WB or (bad) rex.WRXB push rex.WR or push mov cwtl stc pop rex.RXB add xchg mov pop adc mov push mov movslq cmpsl insb mov popfq (bad) cmp and cs mov (bad) and rex.X ds rex.WRXB mov (bad) sbb pop in sub movabs repz nop (bad) mov pop pushq mov scas push shll rex scas pushq fld rex.WRXB rcrl rcr cli mov xor (bad) cmp xchg adc xor (bad) xor (bad) jle push xor mov xchg (bad) rex.WRB iret vmovaps jge or not jbe (bad) or retq rex stos scas jae ja push test (bad) (bad) lods data16 or sbb (bad) sub retq fs xchg xchg jg pushq nop sbb gs rex.W js add xor loop and rorb adcl xchg jle mov mov xchg repz and ds (bad) rex.RX popfq xor lcall out pop imul (bad) repnz out or addr32 jbe shlb sub sbbl cmp and test pushq mov rex.WR rex.WRX cwtl push je cld xlat xchg in mov (bad) jne (bad) sahf (bad) mov pop cmp mov rex.WRX rex.WX (bad) xchg mov movslq test adc xchg (bad) lahf jl xchg mov jb movabs fstpl mov xchg imul roll xchg pop sub add cmp in popfq (bad) (bad) (bad) loopne jl clc callq (bad) nop (bad) (bad) pop sbb or out (bad) xchg mov sahf pop and mov mov fwait pushq and jle pushfq jp in cmp callq xchg pop add add xchg int loopne rex.WRXB xchg jb cwtl test jmp jrcxz mov add xchg clc cmp (bad) mov je (bad) rcl lods pop and push or sbb xchg jo add (bad) test rex.R and addr32 (bad) scas test and xchg mov mov retq nop jbe xchg scas sahf int3 xchg ja fcoms test (bad) or cwtl ror mov stos cmpsl adcl xchg shll push outsl xchg fiadd pushq lahf xor or xchg (bad) xchg js mov pushfq (bad) lea and rex.W mov and rex.RX cwtl mov std rex.B divl rex.WRXB mov add imul in rex.WXB pushfq jp (bad) outsl xchg retq fistpl add stos jmpq cwtl ja cld cmp sub rex.B test movsb pushfq lods sbb iret mov xchg (bad) rex in js (bad) rex.RXB pop add mov jb mov add loope xor cwtl movabs in pop add xor rex.WX rclb (bad) and cmp (bad) sti xor (bad) movabs or movsl mov (bad) add sbb cmp in je (bad) and cmc pushfq fisubr nop xchg cmpsb and adc (bad) push add lock jb adc mov test cmpsb adc xchg cmp (bad) pop lret xchg xchg (bad) test sbbb pop (bad) rex.WRXB stc (bad) jg lret pop fstps mov fwait rex.WRXB mov decb movabs jne xchg adc jle add ds callq fucom xchg (bad) mov sbb mov rex.X sbb (bad) (bad) xlat (bad) and push push outsb push shll xor stos (bad) movabs jg rex.WXB cmpsb test xchg pushq lahf (bad) (bad) (bad) hlt xor mov xchg cli out cmc cmp (bad) add xchg (bad) mov cmp sbb (bad) cmpb (bad) stos (bad) fstl (bad) clc sub xchg xchg (bad) movl add (bad) sahf rex.R sub fidiv push icebp add enterq xchg sbb jge xchg movabs (bad) lahf xchg mov insb jne add xchg or and (bad) cltd xor lret (bad) fstp xchg pop xor int imul imul jnp push fwait lods mov cmpsb xchg popfq int3 lahf sbb xor jne rex.XB movsl xchg ss pop (bad) cmp test (bad) jne push mov xor mov sub (bad) xlat xchg (bad) in in add adc xchg pop or fs (bad) push xchg (bad) and xchg imul cld xchg rex.R movabs xchg je ficom (bad) (bad) in cmp cmpsb lea mov out lret je movabs idiv test pushfq rex.RXB outsl sub in xchg xchg mov pushfq (bad) and je or jnp retq pushfq pushfq (bad) xor imul sub and (bad) pushq rex.RXB outsb outsl mov rex.RB es cmc (bad) xlat lahf scas push cwtl outsb jp test (bad) jo ss mov mov loope mov or fisttpll rex.WRX cmpsl mov pop and iret rex (bad) xor stos int xchg callq mov lahf icebp pushq rex.RXB fmuls mov mov push in fs add loop sahf xor iret mov sbb push jp sub mov gs (bad) (bad) sub int insb jb gs in lods (bad) jns lahf loopne jmp nop lea add sub cmpsb jg push (bad) adc (bad) mov movsl pushfq callq pop adc mov jg pop pushq rex.RX cs mov xor adc (bad) push out and divl (bad) mov shrb add rex.RXB imul (bad) (bad) jnp xchg xchg pop mov xchg fwait mov sub rex.RXB sbb repz adc mov stc lahf rex.WRXB rex.RX xchg (bad) cli (bad) callq int or movabs scas xchg sub mov mov (bad) jle loope test cli pushfq xchg jle or int lahf adc imul rex.B cmpsl mov popfq pushq mov lea add adc lret lea and xchg hlt (bad) or sbb stc (bad) pushq mov rcrb cwtl rex.R icebp add and xor outsl push rcll test push xchg or (bad) (bad) mov in sbb negl orl iret movabs movabs rex.WRX jae xor add out retq lahf lret movsb outsb cmp andl sub xchg pop pop push (bad) popfq adcl mov rex.RXB mov int3 sar movl movsb and pop sub cmpl (bad) xchg imul xlat mov xchg ficom lods ss jo mov jmpq adcl cltd cmp mov or rex.RB stos adc xchg rcll mov jle lahf adc xchg (bad) hlt sahf fdivrp cwtl and (bad) jb movabs pop retq fisubl callq push push loopne pop scas sbb lods (bad) nop popfq xchg mov ja icebp mov mov movabs mov mov stos mov pop (bad) out sahf xor scas cmc rex.B jnp loopne cld sbb cli rex.WXB fsts fbstp or imul (bad) (bad) stos cli andb pop adc test xchg movabs out nop retq (bad) enterq popfq out cwtl xchg and gs xchg icebp fldcw scas add or callq pop lret rex.W mov mov xor rex.WB ja pop loopne cmovae stos (bad) pushq jbe jo fild (bad) fimull callq mov push rex mov (bad) (bad) mov xchg (bad) ss pop (bad) adc xchg push mov sbb flds rorl mov (bad) (bad) cltd pop pop push add xchg (bad) cmp retq mov xchg (bad) icebp mov stc jne adcl mov outsb test xchg movabs pop mov gs mov cmc push sbb nop adc loop add data16 and movabs fdivr pushq and jnp xchg (bad) jmp adc mov adc mov (bad) (bad) rex.RX cmp shll cmpsl (bad) insb loop xchg pop jo push and in data16 push (bad) adc (bad) (bad) adc xchg sbb js push retq ss rex.WRB sub shll setle fisub (bad) adc (bad) cltd cmp fcompl (bad) cmp mov (bad) cmpsl xor (bad) (bad) (bad) mov or pop xchg xchg clc nop and fdivl (bad) rcrb outsl pop jae (bad) or xor jp mov (bad) int mov pmulhuw lahf push cmp ficompl (bad) (bad) lahf xor int jrcxz test (bad) or lods adc push rclb push ds rex.WRXB jmpq xchg (bad) mov xchg es add xchg pop or xchg mov jnp (bad) movsb cmp pushq sub mov (bad) add (bad) xchg cli cwtl or cmp hlt js sub rex.WRX retq push add cmp imul rex.X test or rex.WXB jbe retq mov out (bad) imul jle rcr pushq and stos (bad) adc pop jg (bad) retq rex.RXB sahf add xlat sub cli and callq mov mov sbb xchg add insb (bad) lahf leaveq fcompl pop out jne addr32 mov (bad) fcompl mov pop repnz or xchg sub and outsb (bad) cmp (bad) int3 fsts cli (bad) jmpq orl enterq (bad) (bad) mov mov (bad) fstpt xchg (bad) pop and pop rex.WXB movabs movsb and cwtl mov xchg loopne sub (bad) int3 (bad) rex.RXB pushfq sahf icebp fbld adc mov ss xchg (bad) mov (bad) leaveq xchg pushq (bad) pop sbbb xchg sahf jp push imul push jmpq fildll sbb push stos sub retq xorl sbb rex.W xchg (bad) add fildll insl sahf or (bad) xchg out (bad) jle mov and pushq neg mov test ja rex.WRB xchg (bad) lret xlat adc xchg sti test ds pop retq pushfq cmpsb jno or jecxz xchg insl leaveq lahf test or add xchg (bad) sbb ds mov loopne es rex.WB and (bad) pop shrb mov and push xor retq rex.WRX xchg (bad) rex.WX retq (bad) add mov adc pushq xchg push jne pop popq mov stos (bad) xor xchg (bad) icebp mov sbb (bad) mov imul push (bad) addr32 mov jnp pushfq fucomip rex.WX out xchg movabs je jns rex.XB xchg out sbb std xchg xchg cwtl clc xchg stos nop or outsl xchg fwait add xchg mov pushq test rex jge xchg rex.W pop rex.WR mov and adc fsubl stc mov xor movabs pop retq mov movabs (bad) (bad) mov movsl test mov in pop movabs shlb adc or je cs (bad) insl orl fiadd nop xchg adc callq leaveq mov add sbb (bad) pushq test hlt lods ja mov and sahf mov fucomi add jle nop outsl negl movsl js xchg (bad) xchg add jmpq (bad) jo rex.RB xchg xchg rcr cmc (bad) rolb scas and jo add mov jb div adc in insb xchg clc xchg test mov (bad) cwtl mov ja push sub jae enterq mov sub iret cwtl cld imul push adc (bad) clc mov xchg (bad) lret (bad) sbb xchg lret or and in or ss mov lock cs movabs mov rorl rex.WXB mov (bad) out push jbe cli jmp std cltd in cltd loop roll rex.WRXB cmp add (bad) jo jnp jno cltd sahf ds sub fsts pushfq xor or adc (bad) mov jl xor (bad) and xchg movabs (bad) out in xchg cld adcl jg repnz mov fs stos (bad) (bad) cmpsl sti xor stos push xchg push outsl jb push xor int3 (bad) jp (bad) ja push fsubrl xchg imul fsubl (bad) out scas sub sub rex.WXB fwait add sub mov out xchg test rex.RB rex.R sub (bad) mov xchg mov iret pushfq in xlat rex.WX sahf test and (bad) (bad) movhps mov fwait cmp repnz clc nop push outsl loop push mov data16 (bad) add xor sti xchg cltd rex.WXB gs (bad) mov popfq lods test xchg mov ja rex.RX lret or pop outsb (bad) movabs mov loopne or rcrb outsl (bad) (bad) movsl (bad) cmpsl out retq xlat sub cmp gs push rclb fisubr in push xchg icebp xchg mov es (bad) and push sbb (bad) or rex bndldx mov add cmp cmpsl sahf cld stos fimull lahf jrcxz add (bad) sbb (bad) add nop out jae (bad) mov or jp in xchg xchg add cltd fsubr addr32 stos xchg iret (bad) rorb xchg xchg xor sahf icebp adc sbb (bad) repz pushfq or movabs int3 jl hlt push fwait in (bad) (bad) xor xor pushfq (bad) fcmovnbe std jmp rex xchg (bad) out in sub mov push cli xor pushq test (bad) xchg fwait sub cmpsb icebp xor adc js std push (bad) xchg movabs sbb (bad) jg cltd fsub (bad) fsubp mov (bad) (bad) push jnp mov rex.WRX jno mov leaveq test fisubr cwtl rex.WRXB push gs pop mov in fistp adc movsb imul iret xchg scas xchg mov mov xchg in rex.WX push cmc fiadd push jo imul rex.WRX and xchg stc divl xchg xlat add or movabs (bad) adc jnp sub je pushfq rex.WRX out or sahf rorb es callq or (bad) pop (bad) or (bad) mov popfq or xchg movabs imul xchg xchg pop mov push pushfq stc and pop shrl pushq pmulhw rex.WRX cmp sahf mov rex.XB popq lahf insb out add fistp cld xchg cltd xchg pop cmp mov mov outsb in add (bad) test pop sbb xor (bad) (bad) and gs and xor mov rcrl insl xor cli sti pop (bad) adc rex.RX ficom cmpsl sbb sub fsubrs scas rex.RB fs cwtl sbb in adcb push icebp iret popfq (bad) (bad) loope (bad) lock add xchg sahf mov out mov (bad) jl jbe mov pop fs adcl pop cwtl mov pushfq or retq mov (bad) jns cld (bad) stos int3 sbb mov rex.RX test imul sahf sub loop or movslq ss shrb mov (bad) fwait rex.WX out jl movabs cltd mov rex mov xor lret push movabs (bad) (bad) rclb decb repnz xlat lods xchg in and pop rex.R sub adcl cmp xchg dec scas insb cltd rex sub (bad) mov pop callq (bad) or and and scas out jbe rclb mov jrcxz jp xor adcl xchg or callq sti outsl cmp rex.X scas fs cmp ss outsl and imul pushq xchg jae cld push xchg sbb movsl jrcxz jrcxz jns sub xchg xchg loop (bad) push (bad) insl gs xchg lea callq imul mov int xlat xchg or jp (bad) es sahf or or (bad) mov iret rex sub adcl sbb jb xchg loop jg insl je insb jne push jrcxz cmpsl (bad) pop (bad) cmp jo mov int3 movabs and callq rex.WXB (bad) xchg and cmp sub clc imul pop mov (bad) out rcl je ja movslq and ljmp xor bswap (bad) and enterq cld jbe mov push test repz xchg rex.WRX xor (bad) jo xchg or lea rex.XB xchg cmpsl mov jge jbe movabs (bad) (bad) cmp clc xchg movsl xchg rex.RXB (bad) mov mov sahf and and mov fsubrp gs (bad) (bad) outsl jmp imul xlat jle leaveq (bad) out cmpsb sahf rex.WB (bad) pushq xor repz sbb and insb (bad) mov xorl (bad) (bad) (bad) mov cmp rex.W retq (bad) push (bad) pushfq pop pop out add pop mov xchg pushq in shlb jne xor jge notl retq in mov lock sub (bad) rcll push mov (bad) (bad) rex.WXB in xchg (bad) stos outsb mov jle cwtl mov push or add loopne lods mov push sbbl rex.RXB addr32 (bad) (bad) je pushfq jrcxz cmp or (bad) test mov (bad) jns jno mov mov nop imul retq test pop (bad) mov imul pushq cltd mov mov xor loopne (bad) adc rex.WRXB icebp sub js xchg rorb mov pushq xchg add pop cmpsl rex.WR cmp clc in push insb xor or pop mov jp mov notl xchg popfq (bad) mov (bad) push push xchg jge pop imul (bad) jnp or insl rex.WR rex.RB xchg test callq (bad) data16 sub adc lods sub rex.WRXB fsubrs jbe xor cmc jb jrcxz mov sti pop std jp (bad) (bad) mov or cmp (bad) jle mov rex.WB (bad) pop out shll cmp callq (bad) (bad) add rex.WRB insl (bad) loopne (bad) insb add cltd push xlat subl sbb adc cmp xchg xchg sbb mov mov xor xor (bad) out cmc lods ds fildll insl lea loope mov mov out in lea jge xor cmp rex.WRB cmp (bad) (bad) lea (bad) pop sbb ja fnop jbe pop xor in or (bad) (bad) xchg punpcklwd icebp lock sbb xlat movsb out callq fidivr or mov mov (bad) mov adc fldt movabs lea (bad) xchg xchg mov push cmp xchg xlat mov mov movsb cmp xchg jnp rex.R rex.WXB movabs xor lea mov rex.W stos (bad) enterq (bad) popfq lea out xorl xchg cmpsb sbb add shrb and (bad) out xchg jmp cwtl (bad) callq test cli xchg push (bad) cmp or xchg sti rex.WB (bad) lods std xchg fimull sarl mov icebp rcr fwait lods vcvtdq2pd movabs adc js xchg add out rex.B rex.WRX adc jo mov xchg imul fwait xchg ja mov jg xchg fidiv popq (bad) cmp mov pushq jmp loop jo movsl pop and (bad) sahf movslq rex.XB sti cmc xchg add rex.X jl pushq sarb fistl pushfq rex.B sbb outsl pop pushq xchg (bad) sti xchg stc cld pop xor pushfq jrcxz sarl cli (bad) (bad) roll xchg jae decl (bad) in rex.XB mov xchg mov mov nop lods adc imul cmc testl xchg test nop (bad) xlat mov xor adc (bad) sub (bad) (bad) push (bad) xchg pop sub mov (bad) (bad) movsl (bad) rex.WXB rex.WXB ds jns jmpq add out jge scas lret nop mov int sbb jne scas or (bad) pop (bad) mov cmc rex mov xchg (bad) xchg xchg movsl js hlt mov cmc xchg out mov pop pushfq rex.R rex.W adc or (bad) (bad) loop in notb popfq jnp inc xchg fild and xchg add lahf mov rex.R rex.RXB mov xlat (bad) iret jbe xchg (bad) out mov mov sub pop or movabs xchg xchg pushq xor xchg pop or xlat imul cmp push cmc xchg push xlat retq xchg js mov sbb pop sbb xchg adc fadd xchg push or mov imul adc push xchg roll in sahf sub xchg sub fadds push fs cmp (bad) mov adc insb (bad) xchg pop repz pop lret jne (bad) cmc jnp movabs clc sub rex.X (bad) push loop in adc xchg jle callq sub loop xchg movsl leaveq imul pop (bad) lods xchg rex.RXB xor push (bad) insb (bad) fsubs sbb and out ficoml stos mov fstpt movslq callq mov imul jno adc or rex.WRXB nop clc cwtl repz (bad) in out shl rex.WRX lahf cmp jp loope adcl jle mov mov rex.WX cwtl xchg cmp jg mov int out (bad) test jb (bad) rex.R push jne jmpq and mov sarl (bad) jae xchg add jnp stos push ds or mov stos (bad) movabs mov pushq adc sub lock cmp rex.X callq xchg ja rorl movabs lret pop addr32 pushq xchg flds xchg cmp or mov add xchg mov outsb mov mov (bad) push add icebp (bad) out pop rex.RXB mov popq (bad) fwait movabs jg jl push pushfq jo jnp push int3 fs pop rex.WRX lea push movabs or (bad) xlat fnsave lods (bad) insl (bad) lea (bad) xchg js ds shr rex.X movabs mov mov and mov jo (bad) xor xlat (bad) lret sbb cwtl and enterq mov ja insb data16 fs pop xor sub (bad) and cld leaveq sub mov xchg jmpq fwait jmp xchg gs movabs (bad) rex.WRX mov (bad) (bad) addr32 sbb adc cwtl jns sbb jo loope jle stos (bad) cld addr32 in cmc sar mov xor movsb (bad) pop pop cmp (bad) jae int3 xchg rex.WX xchg ds mov movabs movsb xchg in jae rex.RB test sti adc sbb jnp add (bad) (bad) xchg outsb (bad) mov mov rcrl xor push enterq mov (bad) xor lea (bad) xor sub xchg adc test cmpsl (bad) jno icebp xchg xchg (bad) xor adc testl cmp neg rex.W push xchg mov in push mov rex.X lock add psrad loope add jp cwtl jbe cmpsb add and loop nop fist (bad) xchg scas push adcl or jmpq and pushq sbb int3 shrb ja (bad) add jno pushq and jb es (bad) hlt xchg (bad) cmp push cmpsl lock retq mov iret jae xchg test std in test xchg divl mov (bad) lods callq (bad) pop rex.R mov popfq popfq add sub scas xorl (bad) add mov (bad) lret (bad) movslq pop mov push cmp int rcll mov xchg std rex.RB fwait outsb add movabs push rex.WRX rex.RX adc test rex.WX out jne xchg (bad) cs pushq sahf nop rex icebp adc cmpb pop xchg out stos rex.WRX pop jge (bad) scas sbb mov xchg sbb xchg cmp scas pop (bad) fstl test mov leaveq imul jp xchg mov mov rex.RB (bad) icebp cmp jle (bad) fmull in mov xchg or xchg jae shrl loope mov callq fnstcw xchg (bad) iret sub movabs mov rex.WB mov in and push or stos shrl clc neg iret push jno sahf rex.B push pop mov sahf (bad) movabs pop jg movsl xchg (bad) leaveq xchg scas and or sbb cmp movsb mov idivb out in (bad) sbb xchg sub (bad) rex.W repnz out (bad) je jge enterq (bad) or xchg sub mov cwtl and pop lea cmp sub jnp xchg loop (bad) xlat push xor mov xchg fisubl pop rex.WB jg movabs movslq sahf fs mov loope lock repnz xchg sub rcrl xchg sbb (bad) retq (bad) xor (bad) jge xchg fldt movabs or jae push or cmp cmp jne xchg sbb fisttpll (bad) jle and imul rex.RXB adc sbb push ds push (bad) xchg pushq sar (bad) push cmpsb sub (bad) and or data16 mov movabs ficompl mov xchg sub add rcl repnz negl xchg and pushq xchg or pop (bad) or loop jg loop sbb or gs sahf cmp push add shl cmpsb cmp (bad) sbb pop popfq xchg mov xlat cli (bad) (bad) loope popfq sbb xor cltd iret lret and xchg cmpsl rex.WB rex.WRB (bad) out cmpsb rex.WRX or (bad) sarb loope movabs rex.WX addl cld int lahf xchg sub hlt xchg add mov xchg jge xchg out jmp or pop cmp push cwtl in vxorpd clc sahf cmp xchg fdivrs (bad) jbe rex.RB (bad) pushfq repz jo add cmpb and retq xor adc (bad) mov (bad) lret outsb push cli jo mov rex.WRXB cmp and imul jne mov push clc (bad) callq enterq cmpsb sub add lahf adc mov jnp rex.XB cs lret ds test (bad) fsubs ss or jnp xchg jle cmp xlat pushfq stc out or sahf xor push or (bad) imul sti push rex xchg xchg rex.WB ja rol jge movsb (bad) stos xchg scas incb rex.WRXB sahf (bad) or subl (bad) (bad) mov cli rex.RXB cmp mov xchg (bad) nop mov or sahf adc xlat jae xchg js jmpq outsl (bad) out (bad) rex.R ss (bad) jmp ds setle jg (bad) sahf rex.R out push hlt (bad) test decb jae rex.RB sub lahf or pop xchg push mov (bad) (bad) jnp adc mov insb (bad) xchg xchg out add mov xchg mov rex.WRB sbb sub out xchg lahf (bad) int ds xchg jnp (bad) rex.WXB jg push test push mov (bad) lods and movabs fucomi jne adc test movslq xchg sub int outsl (bad) add out (bad) cmp xchg or sbb notl xchg (bad) push repnz in pop pop sbbl sbb rex.XB rex.WRXB mov outsb add repnz fmuls fistl repz test xchg out (bad) leaveq push insl xchg js xchg xchg xchg rcr rcr rex.WXB fwait (bad) add sbb loop nop xchg (bad) rex.WRXB jno sbb jmp xchg mov sub cli xchg faddl loop or xor imul mov cmp fst mov mov loopne out pushq xchg sbb stos cmp sbb repnz (bad) cli insb jne and sub push adc jae xchg push mov fdivr cmp jne xor lods pop xchg cltd pop sub lods jmpq jb je adc movabs fisttpl (bad) xchg cmpsl icebp xchg andb add decb ja cmc xchg jrcxz data16 (bad) negb or pop sub cltd pop mov sahf or xchg cltd stc movabs jp mov stos jg push mov ds je rcrb (bad) stos jnp xchg sbb (bad) cmp cltd mov repnz cwtl (bad) (bad) rorb movabs add leaveq xchg push (bad) (bad) jmpq (bad) rex.WRXB xchg mov mov stos xchg std fldt test mov pop enterq stc addr32 cwtl (bad) out cltd mov int mov (bad) cs fs mov gs sub ss addr32 testl sti or test sbb fnstcw (bad) (bad) adc rex.W gs adc cmp rex.W rex.WXB scas mov movsb outsl mov (bad) push lea mov sbb mov movabs sbb cmp push rex.WX insl div popfq (bad) (bad) (bad) insl lret pop and insb (bad) cltd rex.RXB jg cmc mov stc sbb (bad) cmp push mov nop xchg jnp fstpt mov (bad) fdivrp movabs xchg pushfq add jo mov out (bad) out je jo data16 in insl xchg int sbb push and rcrb ja xlat test jne repz nop pop and stos jl xchg cmc rex.R (bad) rex.WXB cmp (bad) fild pop (bad) xchg lahf (bad) cltd xchg mov adc sub mov rorb xchg fnstsw adc js,pn mov retq out incl rex.RXB xor mov movsb ja adc cmpsl cmp (bad) mov rex.WX push xor xchg jns (bad) add mov fwait push or rex xchg addr32 and sahf xlat outsb (bad) pop (bad) xchg seta js rex.WRXB fs and mov (bad) callq cmp and mov adc mov jne (bad) icebp pushfq jl jno and fcomps fs mov rex.WX pop mov xchg (bad) cmp rex.RX (bad) mov movabs callq xchg outsl push xchg fcmove sbb or xlat (bad) movsl (bad) int3 rex.RB push cmp cwtl (bad) (bad) fidivl push cld (bad) outsb mulb mov addr32 mov rcr loop mov cmp pushq mov push push repnz andl loope ss nopl movslq xor mov xchg mov loopne cmp lock adc cwtl (bad) (bad) xor push int3 push sbb movsb leaveq cwtl test (bad) scas or adc loope out int3 mov fwait (bad) jb xchg divl (bad) pop mov iret movabs pop lods mov add cmpsb xlat fwait (bad) (bad) (bad) pop scas jmp icebp xchg (bad) movsb xchg cmpsl test lahf (bad) pop loopne rex.WXB push std addr32 cmp (bad) jp xor sub adc sbb (bad) sahf lods push rex.RX xchg jg jge mov xchg xlat adc nop push insl ds gs movabs rex.WRX pop repnz std and int or in int3 cli adc icebp mov pop rex.WRB mov cltd mov js rex.WX pushfq ficoml and scas jle xchg (bad) loopne xchg jmp and mov scas pop cltd nop divl xorl xchg rex.RB push add mov xchg (bad) stos cwtl (bad) outsb gs xchg jo rex.RXB rex.WX (bad) cltd mov cmp ficom sub xchg xchg mov and ror mov imul (bad) xor subb xor loop pushfq movabs idiv fsubl movabs mov adc xchg mov (bad) sub in rex.RB cs ja movsb mov retw repz icebp (bad) outsb mov rex.RX pop ss sub (bad) or adc pop cwtl f2xm1 (bad) stos lahf in loopne rex.RXB xchg xlat sti icebp or pushfq cmp (bad) fistl cmp mov test jge adc (bad) (bad) hlt (bad) sahf xor xchg cld (bad) (bad) xchg cli fstl and xor lods xchg xchg rex.RB (bad) xchg lret mov xor mov (bad) (bad) enterq cmp rex.WRX jrcxz (bad) (bad) pop pushfq mov callq pushq addl xchg jb rex.WX pop or movabs push (bad) jp pop fs int3 (bad) jno mov insl add rex.XB (bad) sahf sahf mov add addr32 subb in or (bad) sbb cwtl xor rex.WB lret not rex.WXB movslq (bad) jb jbe jge rex.WR (bad) fs push (bad) fstpt (bad) mov mov adc xchg pushfq int3 pop (bad) data16 sahf pushq popfq fldcw test (bad) adc outsl sbbb jnp ja mov xor sbb adc data16 insl ja sarl outsl xchg push adc je rex.WRX rex mov jns shl sub pushq fs (bad) int3 sub or test push lret rex.WRXB pop (bad) fwait jg fsubr cmp imul or test ss rex.WX data16 jae sti xchg pushq sub popfq movabs jb imul cmpsl xchg pop addr32 stc (bad) (bad) cmp in or (bad) stos movsl xchg mov in mov mov mov adcb out mov mov js pushq rex.WXB adc insb xor push cmp lahf rex.RB mov jbe (bad) (bad) in (bad) test xchg (bad) jrcxz repz xchg mov lods std addr32 pop pop in enterw nop (bad) mov lret (bad) ss (bad) mov jnp adc cmpsl sub (bad) (bad) mov sahf sahf lret (bad) and pop mov sub and xchg rex.RB jle pushq sub adc sub insl add pop cli sar rex.XB jg cmp stc xorl push mov xchg mov sahf jne test (bad) clc adc mov gs (bad) ss (bad) notb rex.RB (bad) xchg scas fs int xchg hlt xchg retq stos (bad) (bad) (bad) popfq sahf ja movabs xchg xor adc sbb mov fisub xchg (bad) (bad) cmc movabs or fs pop cmpsl sbb xchg (bad) sub (bad) leaveq cli adc rex.XB or xchg (bad) es (bad) movabs xchg push test sub mov sbb rex.WR jg (bad) cmp scas cmp xchg rex.XB cmp (bad) cltd jrcxz adc outsl loopne (bad) (bad) stos mov xor (bad) in pushq cmpsl cmp xor rex cmpsb xchg mov movabs pushfq mulb (bad) cwtl (bad) jle cmp or movsb mov (bad) add ror xor jae (bad) in xchg xchg lock clc (bad) cltd stc pushfq sub xchg rex cs mov nop repz (bad) stos mov xchg (bad) icebp lret xor nop (bad) int test add jmp cld push ds xchg orl jne xchg add mov in retq xchg or (bad) push mov xchg lahf gs xor lods iret mov fcoml out rex.RXB jg je lods rex.WRXB (bad) enterq jbe and (bad) rex.WRX (bad) xor jae push push (bad) (bad) xchg xchg jae sub fisttp mov jg rclb xchg cli insl mov sub xchg cmp scas jne ficomp xor sti fs (bad) mov mov stc xchg or movabs and out sub rex.RXB sbb leaveq cmpsl cmp mov icebp xchg (bad) or nop insb jnp cmc jnp cmpsl pop insl mov int3 (bad) sahf sub pop push or xchg cmp lods mov jae cmp scas imull fdivl mov cmp jmpq repz pop mov jo cs mov cmpsl int3 pop movabs cld js nop imul jae fcmovnbe or loope rcr scas rex.WR rex.RB adc mov (bad) add xor push xlat xlat xor lods int3 (bad) mov rex.RX fiaddl rex.WB popfq retq (bad) out pop mov mov lcall (bad) mov mov xchg mov (bad) or retq xchg jmpq movsb rex.RXB add (bad) (bad) clc ficomp ds xchg cmp or (bad) push cmpsb (bad) cs push sub xchg (bad) scas xchg pushq iret and rorb insl sbb loop addr32 sub (bad) rcrl cmp cs add scas sub cmp repnz xchg mov xor fisttpll jns int3 sub mov ja sahf (bad) jbe callq mov fisubl (bad) retq push sub es (bad) mov mov and and jae pushq rex.RB pop xor lock jb repz xchg pop jne (bad) insl fcomp (bad) std xchg cltd mov ja and outsb (bad) (bad) or jnp fs fs out mov (bad) cmp add pop mov pop popfq cmpsl xor jg push sbb or mov scas fidivr outsb jb jbe shll push sbb fildll mov out xchg cli xchg iret (bad) (bad) mov lea es rcrb je enterq data16 and cmpsb insb and (bad) (bad) xor rex.WRX hlt andl xor jge mov cmp in data16 jle loop mov (bad) or adc xchg xchg rex.RX (bad) rex.WX push push sub rex.WX xchg jno fistp (bad) out (bad) push (bad) pop or scas lea jae or jno mov (bad) sub push add rex.W (bad) sub jge lahf mov adc stos stc (bad) pop and xchg jae lods xor idivb movabs mov nop xor rex.B xor lock (bad) std (bad) sbb (bad) movslq xchg movabs fs rex.WX or (bad) jno xchg rex.WXB xchg fmuls mov scas sub xor sub mov adc xchg jp gs jmpq mov push add or and (bad) (bad) xchg xor (bad) rex.XB cmp rex.RX cmp xchg loope xchg and lret xchg fisub or outsl add xchg jge ja out (bad) ds idivl scas sahf xchg je xor pushq rex.RXB xchg nop mov lea mov xchg add out mov in mov lods jmp sbb xchg push rex.WXB jmpq rex.XB sub in nop hlt sbb jb cmpsl (bad) sbb repnz xchg jle adc jg lahf out lods xchg lret xor rex.WR xor adc xor stc or loop rorb mov xchg in (bad) and movabs or mov mov stos (bad) cmp mov xchg (bad) mov xor enterq fdivrs mov (bad) sub rex jp pushfq rex.R test movabs in movslq (bad) jle imul xchg pop (bad) rex.RXB (bad) jo sahf scas repz stc mov (bad) mov rex.R out fistl pop movb sbbb scas jl cmp lret xchg or or enterq (bad) addl (bad) (bad) (bad) xlat cltd out and sahf addb fsubrl mov add xchg fs callq xchg jb adc ds pop loope xchg (bad) nop mov pop (bad) movsl movslq hlt sbb xchg sub scas pop mov or jb repz rex.WRX jae fsubrp pop (bad) sbb (bad) (bad) rex.RB sub out xchg fistpll rex.WX mov shl adc scas jo mov jno fsub (bad) fcomps stc movabs pushq xchg rex.RXB rex.WR xchg and (bad) jne loop xchg insb mov fld (bad) xchg mov jnp sbb rex.X and in stos xchg add pop cwtl jmpq std sbb xchg push adc sbb and (bad) mov ficomp (bad) movabs push pushfw add movabs clc enterq cli sbb int3 movabs adc imul pop iret imul lret sti repz jmp repnz rclb (bad) fcoms rex.WB add pop fs cwtl mov adc mov lahf rex.RXB mov iret or add fwait sub xchg sbb xchg insl pop sbb shlb xor hlt movabs jmpq rex.B jns (bad) cmpsl andl (bad) in adc lods data16 xchg or out xchg movabs mov out or fildl movsb cmpsl mov (bad) pop rex.WRXB (bad) (bad) cmp mov or push rex.W (bad) (bad) (bad) xchg rex.R mov rex.WX sub or pushfq imul not andl pushq (bad) mov xor sahf stos xchg stos xchg xor (bad) out (bad) hlt (bad) add xchg rex.B jp fistl mov (bad) xchg fistpll (bad) cmp rex.RX xchg push clc fwait xchg lods add loopne cmp adc (bad) or jnp sahf (bad) (bad) (bad) mov cltd test gs lea sti loopne (bad) stos icebp test pop or fimul (bad) pushq rex.WX jno mov push sub fisubl xchg pop or cli imul add xlat xchg xchg leaveq mov mov movabs cmovg mov mov movabs stos test jl cs jns subl sub mov jbe mov movabs loop jne push popfq std imul test lea cmpsl nop adc in adc sub adc push and je rex.WRXB loop xchg (bad) rex.WX movabs sbb xor xchg rex.X (bad) ss pushq mov out (bad) (bad) jp rex.WB outsb xchg cmp mov imul (bad) jge outsb sahf rex.WXB lret adc mov and add rex test outsl and rex.WRX jae mov and movslq mov movabs (bad) rex.WRB xor cmc fwait cmp push test xor pushq adc xchg (bad) jnp rex.WX popfq lea out fs (bad) mov (bad) cmp pushq loopne es (bad) or and mov rex.RXB xchg (bad) (bad) rex.RX adc movabs push nop sbb std jle jno (bad) xchg loop (bad) movb jo xchg (bad) (bad) gs movabs movabs movabs sub and pop jbe (bad) (bad) mov (bad) mov repz loopne mov mov (bad) or rex.R (bad) xchg nop adc movslq mov jl or push outsb (bad) mov cmpsl add repz popfq adc sbb (bad) ja and fsts fidiv cmp (bad) (bad) xor in (bad) push lods rex.WR ss cmc cmp or fisubl mov movabs movabs (bad) and repz (bad) sub mov movabs jmpq movabs lea mov add (bad) mov mov (bad) mov gs sahf pop (bad) jmp push data16 pop pop leaveq loopne (bad) popfq sahf es mov rex.WRX pop mov imul jb mov push cltd cmp xor push out (bad) movabs subl in (bad) out jge (bad) lret (bad) cmc nop movabs jne jno sub (bad) fldl rex.WX and popfq and cmc (bad) xlat pushq jl in pop sbb add cmpsl movabs rex.RX scas (bad) pop (bad) or rclb movabs hlt jp (bad) (bad) add fisttpll mov xlat (bad) lea rex.WRXB sbbb push fsubrp mov pop insl rex.X incl cmpsb sub push cmpsb bswap mov xor jne jg (bad) test in (bad) shll (bad) sarl je outsl jmp fs mov and mov pop mov std test jnp (bad) and rex.WRB fistpl ficomp (bad) xchg rorb sub jns (bad) pop rcll ja (bad) jl mov pop faddp loope cmp mov sbb or roll xchg in sub sahf xor movabs decb sbbl rex.W mov (bad) lea adc mov (bad) mov fistpll add ja mov jrcxz in sahf add movsl rcrl rex push es stos adcb push rex.R (bad) pop iret (bad) (bad) pop xor cmp (bad) sahf lahf scas rex.WX cmpsl push jae mov (bad) fldenv add or fimull (bad) (bad) xor cmp out xor enterw in cwtl cmp rex.WRX addr32 stc mov and rex.RB out rex.XB leaveq test in xchg adc jnp push pop push xchg cmp xchg movslq cmp (bad) (bad) loopne js cli rex.XB mov pushfq push jp lock pushfq and or and in push xchg xchg (bad) int out mov movsl xchg xor fsqrt sub nop jbe insb rex.WX imul rex.X xchg and push jmp rex.WRB xor push adc mov lods pop fisubrl xor pop movsb (bad) insl nop (bad) xchg addr32 cld and mov int movabs fildl jl (bad) (bad) movabs addr32 (bad) iret sahf sub mov rcll (bad) jmp cmp push pop jg (bad) (bad) push mov (bad) (bad) repnz and je retq pushfw scas sub rex.WRXB pop cmc xchg rex.WRXB fdivs rex.WX and mov pop jg xchg (bad) mov push pushq ds rex.WXB (bad) adc (bad) jmp loope pop xor sbbl movslq adc sti out xchg (bad) lret negb xchg sub fild xchg movslq mov mov rex.WRXB lods adc pushq adc mov xorb jns mov sbb xchg mov cltd cs xchg xor pop lods adc jne rex.RB outsl int pop xor cmp jo test (bad) rex.X rex.RXB (bad) mov pop and xchg fadds mov movslq imul mov insl icebp cmp (bad) push or roll xchg mov sub (bad) (bad) push mov (bad) jl (bad) (bad) rex.WRX sahf xchg mov (bad) rex.X xchg mov jnp sub enterq pushq xchg rex.X cs rcll add ja or rex.W lock loopne repz (bad) gs mov jmp xchg rex pop int xlat lahf jbe (bad) notl add (bad) mov sub sub in scas pop in cld jge rex.WRXB (bad) movabs xor and (bad) jae,pt cmp pop xchg adc and (bad) mov (bad) jbe mov gs stc sbb pushq jbe (bad) jb rex.WR rex.X int scas int3 (bad) cltd and adc adc jg cmpsl (bad) and (bad) rex.W rex.WRXB mov test scas test mov mov jno loop jo (bad) incb (bad) mov test cmp rex.RB in outsb test retq stos mov xchg xor imul mov (bad) jmpq rex.W xchg add (bad) jrcxz nop lret rex.WXB in stc adc (bad) out mov pop rex.R (bad) pushq insb adc ja and lock (bad) ds mov (bad) xchg adc rex.RXB xchg sub (bad) outsb cmpsb xchg icebp xchg cmc (bad) xor sbb mov subl shlb xor fstps clc pop shlb adc (bad) ja outsb xchg mov scas int3 xchg xchg mov cmpsb out (bad) rcrb mov pushfq sbb adc (bad) cmc (bad) data16 xchg mov xor cmpsb bnd adc mov outsb jl sub xchg rex.R movsb jns xchg and fnstenv pop fcmovnb pop (bad) (bad) lahf shl xchg sahf lret or or (bad) cmpsl cmp (bad) (bad) cltd mov and mov (bad) mov xchg mov sahf (bad) adc (bad) xchg push rex.X sbb jmp add sbb xchg push mov rex.WX xlat mov je sbb xor movsl (bad) jge add gs (bad) (bad) lods cli push cmc rclb xor cltd test mov rex.R movabs addr32 in rex.XB rorl leaveq (bad) xchg ljmp in xor clc shrl cmp insb out (bad) fwait mov pop (bad) (bad) rex.W pop push stc (bad) or sbb adcl adc mul lods in pop loopne in (bad) jb jne or fdivs xor xchg fldenv out mov movslq rex.WRX xchg imul stc jb add insl ja test pushfq adc mov (bad) movsl xor (bad) popfq lahf xor not xchg cmp loope mov mov rex.X movsl movabs gs fldt lret shrl rex.XB imul pop shlb (bad) sbb add cmp pop callq nop insl mov adc nop (bad) cmp (bad) js (bad) or (bad) jo pushq ljmp rex.WRX rex.RB sti icebp pushq sbb fildl (bad) mov ficomp push jbe idivb sahf rex.WX lea enterq mov int3 sbb (bad) jne xor frstor in loope cs retq jg push pop pop out fistl in in pushfq xor movabs xor scas rex.RX pop rex.WXB loope xchg pop pushq push and mov loope xlat (bad) (bad) xchg jbe xor fwait movsb icebp and xchg rex.WRX and scas lret (bad) movslq xchg stc sti and outsb rex.WR push pushfq or push add (bad) (bad) (bad) movabs mov or test or (bad) (bad) mov movsl fsubr sub xchg rex.RXB xor (bad) lret outsl movabs mov sbbb sub rex.RB (bad) jae or mov pushq sub (bad) pushfq (bad) sbb lods in push push cmp and stos mov (bad) out imul rex add stc (bad) jne rex.X sbb insw test (bad) (bad) cld pop (bad) xchg pop rex.WRX rex.R cwtl jrcxz fbstp js,pn movabs (bad) lret (bad) add or fwait rex.WB cld or (bad) mov pop pop sub sahf xchg rex.X sbb (bad) or mov movabs mov adc adc jmp push sbb (bad) rex.WRXB cmp outsb jg rex.WB (bad) icebp rex.WR rex.WR test add sbb jrcxz or div sbb (bad) (bad) enterq or pop sbb mov pop fs add rcll rex.WRXB (bad) xchg mov jp jmpq (bad) or xchg (bad) (bad) retq outsl (bad) mov or adc jnp pop jbe movsl out (bad) add callq movsl xor outsb sbb stos push push (bad) xchg (bad) sahf (bad) jo imul (bad) xor (bad) sahf mov gs sbb in push xor sbb fisubl retq mov add popfq retq (bad) sbb add sahf (bad) (bad) mov hlt xlat mov and iret rex.RB movabs insb sub add and fs cmp jb rex.X pushfq adc or (bad) lods mov stc xchg fsubrl movslq nop popfq pop movsb out test rex.WXB rex.RXB xor and jne jle icebp pop jb movabs xor ficoml and sti pushq (bad) xchg movabs callq xor cmpsl (bad) mov rex.X fcoml xchg cmp out in xchg cmp (bad) out (bad) cli test in enterq xor rex.XB add mul xlat xchg in fdivrl (bad) clc pop imull (bad) xchg xchg push (bad) (bad) test add pushfq pop or lea (bad) and jmpq insb cmp add (bad) jp rex.WB roll rex.R cmp push (bad) or or xchg xchg sarl push rclb adc (bad) adc movabs xchg gs jne sahf sbb je xlat rex.B (bad) stc mov pop xor or fistp xchg (bad) rolb pop cmp cmp jo jge sbbb adc (bad) sub stos jg mov and lret sahf jl out mov add lock mov lea jmp pop cmp xchg jns sbb add mov xchg rex.RX insb pop clc or xchg je fnsave xchg add mov callq xchg ficomp outsl jg movabs (bad) adc fnstenv ljmp shl add movslq xchg (bad) mov test xchg (bad) rolb sbb mov sbb mov fisttpll xor rex.WX data16 test (bad) sub mov cmp jno mov xchg rex.X rex.WRX sub icebp cltd hlt sbb xchg subl jno movslq sti rcrl test xchg add xor fwait cmp adc sub movsb cmp cmpsl test xor jnp sbb in sarb sahf movabs fwait mov int3 rex.WRX jne notl mov insb pushfq int mov and xchg movabs (bad) loopne (bad) adc callq rex.RB or lret mov sbb adc xchg js sub xchg ss fnstsw sub and jnp sti xchg jne lret mov mov jmp pushq rex.WRX js xchg rclb sbb mov xor (bad) hlt (bad) xchg jbe push rex.WRB (bad) movabs fimul xchg jg movabs or xchg and rex.W xlat divb jg sbb mov pop lods (bad) cmp xor xchg adc add outsb in xor sbb callq (bad) or ljmp sub rorb loopne ja rolb sbb fadd (bad) or (bad) (bad) pushq data16 xchg (bad) cmpsl hlt push or cltd pushfq mov xor mov in mov mov rex.WR sahf gs cs jae mov loope xchg test nop lret xchg out (bad) sub cltd mov mov test mov sbb cld pushfq xlat push sbb out neg (bad) sbb cmp xchg lods mov hlt sahf pop push mov shrb sahf icebp cmp movsb xchg retq mov xchg jrcxz repz clc (bad) mov push lods scas mov jo xchg je lock xor jnp imull in loopne loop jnp addl fdivp and pop xchg lret xrelease rex.RXB rex.WR stos cmp notb sbb pushq es rex.WXB mov movabs getsec xchg sub (bad) pop mov jae and out nop (bad) adc push fs xchg or pop jbe pop notl lea push lock push xlat je (bad) sti and (bad) add cld jnp fstps and (bad) outsb push icebp (bad) pushfq nop mov movsl jns data16 jp rol (bad) movabs imul push sti or (bad) sbb fs shr stc icebp adc xchg out fsub mov jbe roll jrcxz mov pop es test rex.X cmc xlat add jae push cmp push fisttpl (bad) movabs jg pushfq pop and and adc fcomps pushq jb or out xchg insb (bad) clc (bad) mov or (bad) mov (bad) or cltd (bad) movabs xchg (bad) rex.W in mov fs xchg adc movabs (bad) push sarb (bad) fsts rex.WR data16 imul rex.B jg pop mov jae (bad) sub sub jle movsl mov (bad) xchg imul repz (bad) rex.WRB gs in imull lret out add and insl xor enterq jae in scas (bad) mov test jmpq mov fild shlb pushq rcrl (bad) jo lret int (bad) pushq sub gs (bad) mov scas add mov push (bad) sbb sahf sti sbb xchg rex.RXB sbb pushq jmpq (bad) pop jbe in imul and cmp in xchg mov xor sahf mov xchg ja mov (bad) fistp push cltd jo mov and jo jmpq mov lock xchg (bad) adc mov sbb push jo loopne outsl (bad) (bad) (bad) (bad) movabs sahf imul pop addr32 adc push pushfq loope test or pop int3 adc data16 int rex.B adc cmp cmp (bad) outsb (bad) rex (bad) loopne jbe int3 cmp or jg jmpq (bad) (bad) sbb cs xor enterq jge sub mov or and xor sbb cmp iret movabs jg iret icebp pushfq insb mov rex.B lock rex.RX jns jg mov xchg jne xchg cmp lahf (bad) clc adc sbb mov out pushq xlat or cli add loope shll rex.W movslq (bad) pushfq (bad) pop xchg nop stos std push rex.WRX mov xchg xchg add push (bad) xor ficoml sub xchg mov rex.WR (bad) (bad) xchg pushq sbb andl repz push (bad) int3 lahf imul insl fistl pop adc pop iret adc stc lahf mov rex (bad) rex.B mov (bad) xchg es or xchg xlat mov movsl mov xchg push fsubrl (bad) (bad) lods xchg adc lock pop cwtl pop adc fsubs lret xchg (bad) gs add cmp pushq iret ja cmpsb mov cld (bad) scas imul sub notb (bad) (bad) (bad) xchg pushfw xor xchg and cmp movabs (bad) xchg (bad) lods pop lret retq cltd mov loop outsl jg out mov sub jo je xchg push and cmp jmpq pushfq pop pushq xchg sub mov fistp rex.WRB test sub xchg jae cmp enterq movabs movabs ss nop xchg (bad) loope xchg rex clc addr32 push out rex.RXB fs fsubp ja push cmp xor and rex.WB (bad) mov movsl (bad) std (bad) sbb xchg (bad) mov (bad) push push (bad) ja mov rol sbb test in xchg sbb pop (bad) jno push rorb in adc mov lods xchg clc (bad) or (bad) int mov movabs jle (bad) pop pop hlt rex.WRX in mov xchg pushq (bad) stos xchg icebp mov pop ds lock add (bad) out in rex.WRXB rex.RXB ficompl or xor rex.XB (bad) add (bad) (bad) out xchg insb (bad) (bad) lods sub push xchg sbb mov sub ja mov outsb jmpq and xchg loopne (bad) cmp sbb and mov int3 xchg cmp retq movabs movb jno xor iret mov cmpsl cmp xlat pop cmp test imul lods std push xor xchg movsb mov xlat cmc (bad) in movabs and add int3 xlat mov rcr mov sub imul jl (bad) mov pop andb xor cmp rex.XB mov xor gs sti mov (bad) sub (bad) pop (bad) push xchg jbe pop rep rex.WR jmpq popfq xor push iret rex.X rex.WRX jno rex.WRX add test pushq adc ss (bad) xchg roll adc out sub stos cmp lret enterq test (bad) adc pop cmp (bad) loope repnz pop movabs pushfq (bad) jae (bad) fwait nop rex.WRXB (bad) pop xor ss lea movabs add (bad) imul data16 adc (bad) pop mov cmpsb mov jg push iret cwtl adc (bad) test pop jg and cli addr32 stc (bad) (bad) sbb imul movslq lea pushq nop adc negl movslq mov or cltd sti sbb (bad) jl sahf je cs rex.WRX (bad) out pop std rex.WXB stos movabs fild rex.W (bad) ficomp rex.X sbb rex.RX movl adc (bad) mov push xor (bad) (bad) mov lea rex.XB pop lahf sbb (bad) outsl rcll mov subb or movsb pmaxsw cwtl fwait jle movabs sub xchg adc jbe add lret xor mov adc fs mov scas shrl (bad) xlat xor stc (bad) sub shll std shlb and pop rex.XB fwait (bad) rex.B rex (bad) adc rex.WXB sub push movsl imul sbb test cmpsb pop (bad) jle stc mov movabs pop mov fmul rex.RX jae cmp rex.WR cmp or fwait cltd add movabs push cwtl int jge and jg mov sbb jne std adc jne in mov add and fwait (bad) cli jmpq notl sub cs and int and popfq (bad) addl imul adcb adc out lahf cwtl (bad) (bad) xor push imul mov and pushq movabs fwait pop (bad) (bad) jnp add pop rex.B fisubr rex.WB rex.WRX imul out mov sub sar fisubl jns (bad) rex.WX rex.WR jnp stos push lea hlt xchg js rex.WX pop and push sti addr32 sub jge mov jg add jge mov push or and xor mov (bad) fbstp imull and cwtl pop in (bad) insl (bad) iret rcrb jae cmp cwtl (bad) scas cmpsl mov mov rex.WRB pop add (bad) loopne es sbb pop test adc nop (bad) mov insb outsb add lahf push pop xor pcmpgtw mov xchg or js fsubrs xchg (bad) jp xchg cmp insb jno cmpsl adcl cmp out cmpsb xchg rcll lods cmp sbb xor sub mov add stc lret fwait mov (bad) (bad) rex.WRXB repnz negb seta sarl mov fdivrs pop std ror xlat xchg iret pop ss gs xchg enterq lret rex.WXB pop sahf movslq imul outsl leaveq xchg lods mov jp sbb icebp xchg pop (bad) xchg push mov xchg ficom mov xchg in mov add loop cwtl xchg fnop jns mov xchg (bad) movsb fisttpl sbb xchg rex.WB xorl addl xchg rex.X out (bad) cli pop clc insl xchg rex.WX (bad) xchg cmc fcompl ja mov movsb mov cmp pushq xchg adc pop pushfq mov movsl mov sbb cmpsb or retq rex.WB rex.W rex.RX jle and push add add icebp sbbl jo fcompl (bad) mov jnp adc loop rex.WXB rex.W rex.WXB loopne mov lods rcrl jge push sub (bad) mov xor xorb insl addl and push and out fwait rex.RXB insb (bad) cmp and push stos fiaddl addr32 sarl cmpsl jge mov (bad) ficompl adc (bad) in popfq mov pop xor jbe or mov mov jp sarb gs out pop xor out (bad) insb jb rex.WR mov (bad) and sahf xchg lods fcmovu jbe and pop je (bad) adc out loop loop negb jo (bad) cmpsl lfs cld xchg or stc jnp cmc sub sahf mov movsl (bad) loopne mov xchg retq mov int3 mov add test (bad) xchg xchg mov mov popfq hlt outsl xchg loop stc loopne out or (bad) mov pop outsb xchg insb je mov mul hlt mov sbb pushfq jrcxz cmpsl rex.XB adc movabs adcl (bad) pushq adc rex.B mov pushq mov pop orps adc fstpl fwait pushfq add xchg xchg mov xchg in pushq scas pop mov loop (bad) adc sbb rex.WR adc xchg mov jne xchg xchg pop (bad) rex.WX xor loope (bad) enterq sbbl lods mov divl movabs (bad) rex.WX stos imul cwtd pushq or rex.W and xchg add (bad) rorb (bad) (bad) fs push icebp movabs (bad) jno xchg jg adc mov rex.WR pop (bad) sub push scas rex.RX rex.WRX and mov loope imul (bad) fs (bad) xchg pop cmc stos rol fcmovnb mov in (bad) clc pop pushq movabs xor add std je mov sbb or insl jnp loopne mov (bad) rex.WX push pop hlt jnp add rex.WRB movabs xor and xorl popfq xor (bad) pushq sbb xor repnz rex.RB rex.X repz out mov xchg ss (bad) jae lea xchg stos sbb push push or fisubr (bad) test sbb (bad) shrl (bad) xchg sub jmp mov (bad) std stos (bad) mov popfq rex.R movsl enterq pop lods enterq imul mov sub gs (bad) (bad) mov (bad) (bad) mov cmp mov cld mov pushfq push pop (bad) pop (bad) mov mov divl and rex.XB push jmp rex.WR cmp adc fyl2x sbb rex.WRX fs (bad) (bad) int mov ja sub mov mov mov cwtl mov cmp je jg lods xchg sahf repnz mov xchg (bad) movabs movsl sbb pushq (bad) (bad) rex.B cwtl (bad) jmpq (bad) pop scas test cmp cli nop sahf (bad) lret scas adc jmpq xchg rex.WX (bad) and xchg insb mov mul xchg xchg (bad) loopne lahf fwait mov outsl cwtl nop mov mov imul rex.RX rex.WR xchg xchg mov xchg insl add xchg mov cmp cmpsb lods (bad) mov cltd xchg ds fdivs (bad) pop xchg jl gs sbb or (bad) (bad) iret jmp and rcll rex.WRX fmull addr32 jrcxz add jg sarb jns mov (bad) xchg rex.WXB movabs xchg movabs and enterq xchg andl out mov cld xchg (bad) fdivs (bad) cmp jns (bad) push pushq ds pop sarb fist lahf rex.R movabs icebp fisub jmp pop rex.WX in insl movabs cwtl in and push sbb xchg adc je xchg cmpsb add (bad) movsl imul or and or push shll sub in jno or jb xchg scas shrl int3 fstl xchg or insb (bad) lret xor adc sarl pop leaveq fnstsw (bad) mov add lahf cmp pop push outsb jne addl rex.WXB xchg (bad) xlat leaveq in movabs cli pop testl movabs addr32 pop adc mov (bad) mov testl (bad) mul jmpq add xchg repz (bad) test xchg fisttpll lahf out (bad) sbb retq popfq sub mov hlt loopne xchg lods cwtl out jb pop sub (bad) lock push lods hlt nop add sbb xchg xor jp rex.WRX sub (bad) mov sahf jl jmp rex.WR push jge sbb test mov push (bad) ljmp popfq add (bad) retq (bad) nop jg (bad) movabs popfq mov hlt add insb int3 notl (bad) xor mov stos push jbe rex.XB xchg mov fsubr clc cmp mov xchg repnz and add in cmp cmc clc movslq pop and mov rex.WRX rex.XB (bad) sahf xor ficoml mov xchg rorb test sti out cmp xor (bad) insl mov movabs (bad) xor iret and pushfq sub xchg mov lods mov sahf adc xor and xchg (bad) cmp movsl xchg mov outsl (bad) rcrb push xchg callq (bad) nop pop faddl shll je (bad) lret fildl rex.W (bad) out scas fcmovb push adc pop jb or (bad) (bad) jnp xor icebp pop in (bad) xchg push and es mov xchg out out cs sub xchg sbb cli pop xchg xchg mov lcall rex.WX cmp sub pushfq scas retq nop mov (bad) lods mov cwtl mov lahf lret xchg jle (bad) push cmc adc xchg leaveq (bad) out (bad) (bad) movabs add sub xchg pop leaveq mov fucomip (bad) cli rex.WXB vphaddubq xchg in mov jl cmp xlat pushq (bad) fsubl insl (bad) jrcxz (bad) out insl cwtl rex.WR pushq cmp adc in sub (bad) cwtl sbb sub push lret add and cltd (bad) jbe lret and jmpq (bad) leaveq subl rex.RB outsb in xchg jbe or add (bad) test mov jo jg outsb int cltd xchg sbb nop jne movabs pop mov xchg mov push insl decl rex.WB fistpl (bad) sti pop retq push ja push insl xchg xor sub (bad) xor pop xchg addb rex.WXB push xchg stos xor sbb xor jge or (bad) jp rex.RB lock (bad) insb rex.WX jne out (bad) movslq push sbb ss add sub or enterq cmc xchg (bad) jae stos in (bad) add sub nop pushq mov mov cli fistl rex.WX xchg xchg cmpsb (bad) (bad) (bad) jg or rex.RX (bad) xchg (bad) lret jbe (bad) sbb (bad) sub xchg stos add (bad) xchg sbbl sbb mov adc mov sahf (bad) neg or jl sub gs cs jno loop cltd nop ffreep cwtl test xchg or je xchg out (bad) xchg test rex.WRB movabs jns ljmp (bad) (bad) (bad) sbb xor cmp loope sub int3 jb lret cmp xchg pop out movsb mov xchg movabs (bad) or jmp jrcxz jmpq fyl2xp1 (bad) mov (bad) (bad) loopne mov cld jnp movabs xlat lret in test or loop in mov cld lods js mov imul add mov movabs cmpsl lret xchg ljmp (bad) rex.RX xchg push adc sbb xorl hlt movabs xchg xchg (bad) fwait mov rex.RX pushfq sahf add xchg mov (bad) (bad) rex.R pop fwait xchg retq movslq sbb (bad) (bad) xchg xchg mov (bad) pop xor cmpsl push cmp test and (bad) out test add adc adc (bad) rex.WXB (bad) imul insb jp xchg mov or xchg adc shl fsubrl mov or xchg push cwtl fwait xchg add mov cmp (bad) callq cltd sbb xchg mov roll or or mov insb sahf outsb xchg pop pushfq loope movslq or movabs rcr add rex.WXB lods mov movsl lahf rex.WXB jne rex.RXB loop in jb cmc inc sahf mov out bswap push mov or (bad) cmp fimul lock jbe (bad) icebp pop enterq cmp xchg add stos sub mov fdivl test rex.RXB out mov stc pop xchg adc sub (bad) xchg pop sahf xor mov push hlt xchg mov retq cmpsl rcrb (bad) push ja movsl cwtl cli pushfq leaveq test cmp sub stos cmp rex.RB fsubrp or jge pushq mov (bad) outsl pushfq sbb cltd pop hlt sbb rex.WRXB (bad) xchg fwait adc stos mov scas nop cmc cwtl test int sub (bad) movabs xor movsb xchg jmp insb movsl or adc and (bad) rolb (bad) xor pop test mov callq xchg xor (bad) lret add mov fimul xchg nop xlat adc in sub adc sub fmull (bad) lret xchg pop shrb cmpsl js loopne gs mov fild mov cs loopne in xor pushq and mov mov cmp sbb xchg scas cmp jp rex.RB (bad) movsb fidivrl xchg fucomp (bad) push sarb sti xchg negb retq cmpsb and fcomps (bad) xchg shlb (bad) and movabs jne (bad) (bad) xchg popfq rex.RXB stc hlt cmp sub clc lea cmpsb mov push (bad) mov rex.WRB mov pop and loope movsb (bad) lods xchg mov in xchg stos (bad) leaveq sbb (bad) add cmpsb push mov xchg movabs cmp jno (bad) xor loopne test in rex.RB mov (bad) addr32 pop (bad) mov rex.WX add mov cmpl test push outsl jno pushq rex.X (bad) push add push xchg nop rolb mov pop pushq push test not pop (bad) (bad) mov or jg leaveq mov cwtl rex.RXB movsb leaveq jge xchg cli push pop sub or xchg movslq mov loopne rcll adc lret cmp mov sub movslq push or (bad) (bad) int3 sbb (bad) out fsubrs movabs jg fwait movsb xchg rex.WRX rclb lret push adcl (bad) sti pop sub cmpsl cmp push pushq out jne (bad) xchg movsl jrcxz stos fimul or jae in ds adc mov xchg xchg push insb jb lahf loop xchg (bad) std insl add mov xor sbb sahf cmp in jns nop movabs scas pop xlat cmp sbb adc or add (bad) sub mov cmp imul sub (bad) cld (bad) xchg and or (bad) movabs xor mov fstpt xlat jge xchg (bad) imul xchg lods ds (bad) lea (bad) push mov imul xchg jns loopne adc ss xchg sub jmp mov rex.WX mov rex.W ss xchg mov lods gs (bad) add sbbl (bad) and xchg sbb rex.WXB movabs rex.WR xchg in push or imul xchg iret (bad) mov mov xchg and cld loop cmpsb and cmp int jns sarl shlb addl and (bad) push xchg lea xchg (bad) (bad) or mov jg mov andb ss (bad) pop or xchg (bad) fninit jne xor movsb sahf in scas cltd ss (bad) pushfq cmc (bad) adc stos cwtl xchg and addr32 jae xchg rex.WRX lock shlb out (bad) rex.WX jno nop jle rex.XB fdivl int3 or xchg and lods (bad) lea cmp pop ja in addr32 xchg nop sub jg mov (bad) stc rex.WR cmpsl (bad) pop xchg je imul cmp gs sub rex.WB fs mov divl icebp (bad) ja repnz test sbb je cmp imul mov scas pop test cld xchg and movslq (bad) loop pushfq or (bad) jmpq mov (bad) fidivr adc stos (bad) jmpq (bad) repz (bad) enterq mov push adc mov rex.WB adc enterq xchg movabs retq jo mov (bad) addb cli pushq rex.WB pushq rex.W adc loope xor push sbb adc adc xor (bad) fbstp jmp xchg std mov (bad) rex xor int3 (bad) pop push decb jmpq and (bad) pop (bad) (bad) mov (bad) imul sub or repz adc fdivrl rex.WR pushq (bad) movsl sub es fmull xchg mov insl adc cld xchg pop (bad) shr (bad) (bad) sbb push mov idivl and rcrl sbb (bad) (bad) mov movslq imul lock (bad) push (bad) cmp mov cmpl mov cmp push jmpq jp xchg or cmpsb movabs retq (bad) mov sbb rorb je in and movslq adc (bad) repnz je (bad) (bad) pop mov popfq (bad) ds (bad) jg mov xchg clc sbb (bad) hlt push jns add movslq mov rex.WB xchg rex.RXB or nop movb fdiv cmp rex.X rex.RXB rex.WRB sbbl movabs mov cwtl (bad) subl xchg pushq movabs test (bad) xchg mov rex.WX rex.WRB and (bad) pushfq cmp mov (bad) or cmpsb sub or (bad) sahf (bad) or (bad) hlt rex.WRXB in mov (bad) fisttp rex.R (bad) cli or xor sub xchg mov (bad) mov pushq test outsl sbb rex.WX imul adc (bad) sub (bad) data16 clc movsb sbbb adcl xchg (bad) movslq decl rex.WR fwait movabs (bad) shlb pop mov ljmp sahf lods (bad) ja cmp orl push gs repz (bad) push (bad) mov enterq stc mov cmp (bad) (bad) pop sbb iret fmull addb std xchg retq or (bad) out push sbb rex.WRB xor movsl out xchg push cltd mov clc test xchg mov (bad) (bad) je xchg test test int (bad) xchg movabs mov jb (bad) xchg in push xchg sub in rex je lods stc notl xchg (bad) fimul in xchg or cmpsb rex.RX mov and cmp xor std sbb cmpsl mov loopne out sahf (bad) int3 retq fcomps jp je cmpsl mov rex.WXB rcll and (bad) (bad) jg loope sub add cs (bad) sub rex.WRX xchg cmpl sbb fnstcw lahf mov out retq imul (bad) or pop int xchg cmp cli stos xlat stos xor callq add insl (bad) xor mov rex.WX rex.WR std sahf (bad) insb sahf mov sti movsl movabs sub sbb cld rex.WRX (bad) adc (bad) enterq ror mov out in rex.WRXB jns stos vzeroall rex.R jge retq movabs push (bad) outsb imul xchg xchg push (bad) add movabs push imul xchg push (bad) mov mov mov lea xchg and loop pushfq xchg cmpsb sub sti fwait cmpsl rex sub pop scas cltd (bad) xor mov (bad) (bad) or cwtl push jnp movabs xchg push std cmp or in (bad) ds out cli rex.R mov sub icebp (bad) xchg cmp outsl (bad) adc xchg (bad) xchg cmpsl jmp xchg add stos in cmp (bad) mov jg movabs xchg mov jl int3 jb in or lock outsl rex.WB pushq out adc add jmp sbb mov rex.RX pop xor cmp cwtl cmp outsb add insl (bad) (bad) sbb sub imull cmp pop retq jae rex.RXB xchg push mov add pushq jae sbb or imul (bad) mov or xchg rex.WX int and xor fs shr movabs (bad) (bad) xchg mov cmp mov rex.RX xchg sbb loopne stc fbstp jns or sbb out movabs xlat xor cltd rex.WRX and jnp xchg mulb mov jmpq xchg (bad) in jle (bad) outsl xchg xchg imul cs rex.RX xchg mov pushq out (bad) add xchg enterq shll lods and xchg movsb fcmove (bad) pop rcrb fsubrl (bad) and or negl or icebp xchg lods jno (bad) negb lret mov ja mov push or mov (bad) cwtl clc jg jmpq xchg (bad) ss stos and pop test jb (bad) (bad) cltd rex.WXB xchg movsl movabs xor outsb int3 pop mov mov (bad) xlat loopne stos gs push cmpsl movslq notl mov cmp xchg mov jne jmp scas sub sub sbb or and jbe int xchg cmp stos (bad) mov jp jge (bad) sub (bad) push xchg pop pushfq adc mov lret (bad) movsl cmc push movabs sub lret jnp fmuls xchg pushfq stos or rex.WRXB mov ficom pop xchg add pop in rex.X rex.WX test xchg popfq mov fnsave xlat adc in xchg fadds movabs adc sbb insl mov xchg rex.WRXB std ja cmp movabs (bad) and push push ss sbb mov add nop rex.RB jmp (bad) push jle int xchg mov (bad) rex.WB sahf (bad) pushq pop (bad) mov pop xchg lods mov and xchg movsl xchg xor test xchg push movsb mov xchg loopne sbb pop stos cmp je fist rex.WRX (bad) (bad) imul jrcxz sbb outsl data16 es and mov sbb xchg (bad) xor push xchg out mov pop mov add mov fiadd cmpsl cmp or pop out push rex.WXB cltd xchg rex.RX cmpsl cmp (bad) adc xchg mov xor rclb je (bad) orl lret retq ss pop insb xchg movsl pop xchg sahf (bad) xchg rex.W add mov rex.WXB push fdivs sarb pop or pop or mov movabs clc subb add sub outsl rex.W add fistpl fstps (bad) movsb scas xchg cld mov pop cmp mov rex.X movabs jg push fistpll sub fwait notl iret (bad) jp fstl xor fdivs rcll clc sbb xchg (bad) pop jle jno lods in (bad) or or rex.WRXB repnz (bad) in mov mov jge jne sahf (bad) (bad) data16 add ja stos cwtl cmp (bad) sbb jb fstpt cmp notl jb cld xor xchg pop in fcmove test (bad) add (bad) or mov (bad) xchg xchg or sbb push rex.WX pop rorb (bad) sub pop (bad) (bad) pop cs out rex.XB jbe sarl jae adc mov scas (bad) mov xlat (bad) (bad) and pop mov pushq push lahf data16 adc in in (bad) jg pop add (bad) push (bad) movsb popfq push xchg mov or sub (bad) push vlddqu rex.R (bad) (bad) cmc stos movabs outsl pushq xchg fwait in movabs (bad) cmc cmp rex.RX adc movslq in ds xchg (bad) subl sub imul lea movabs je xchg mov adc xor sahf xchg insb rex.WR hlt xchg out scas sahf outsb mov icebp (bad) sub fdivrs xchg out ds rex.WRX jb sahf pushfq xchg rex.W xchg add mov pop sahf rex adc (bad) fs fimull lods movsl movsb cmpsl push rex.R jmpq xchg jne (bad) leaveq and out push jnp stos sti scas pushfq lahf jb cwtl (bad) fadds rex.X cs (bad) subl xor mov cltd sub jne rex.X push xchg push cmp repnz pop xchg jo mov mov sbb add pop sbb xchg jae in (bad) loop cmpsb xchg sbb xor cmc repz sahf xchg outsb out fmull mov cltd lahf mov imul pushfq xchg gs (bad) test xchg and mov push xchg cmc movabs movslq (bad) xchg fs cmp rcll popfq or xor nop pop sub fdivrl pop cmpsb cwtl imul xchg icebp (bad) add xlat (bad) lods test sbb jge stos jmp jo mov (bad) sub addr32 movabs lock cmp add xchg jne rex.RXB sub xchg xor sub cmp mov in (bad) mov cmp pop loop rex.X xchg (bad) or fstpt imull jns sbb rex.B push or push sbb cmc movabs (bad) pushq mov xchg mov sub std nop (bad) mov (bad) mov leaveq pop xchg shl xorb add mov ficoml rex.RXB mov nop stos hlt (bad) lods and (bad) rex.XB fcmovu jg andl xchg sbb and jae pushfq (bad) imul scas iret lcall xchg mov rex.X xchg and mov fsubl jnp idiv movabs xchg xchg pop sbb or fidiv stos (bad) pop mov (bad) adc stos (bad) leaveq leaveq (bad) pop xorl adc rex.XB (bad) (bad) movabs fisubr xor xchg jae cmc (bad) cmp in rex.WR std mov fwait nop cmpsl mov (bad) inc jns nop lret fbstp (bad) mov mov (bad) cs lret (bad) nopl xchg push stos repnz (bad) lret movabs rclb xchg rorb mov lret add (bad) loop pushq lods popfq es xchg mov add sbb nop movl or xchg insb int3 (bad) lret xor cld pop addr32 rex.WX xchg mov fiaddl iret mov xchg mov adc imul pushfq xchg (bad) clc lret shrb andl push cmp popfq (bad) mov pop or xchg test test mov subb sbb lea rex.XB clc movabs jae nop ficom jmpq (bad) add test je imul nop cmp push (bad) shll add mov mov loopne xor sub push (bad) mov (bad) rex.WRXB (bad) xchg imul (bad) rex.WRB pop mov and (bad) ljmp rex.RX rex.WRXB and sti rex.WR (bad) jnp (bad) sub (bad) notl mov scas imul shll repz mov jmp pop cmp mov shll stos sbb (bad) (bad) rex.WR adc test or jge lock jg ds out xchg hlt sbb pop cmp out scas pop pushfq rex.XB data16 loopne scas push movabs fcompl insb rex.RX pop (bad) imul adc lret loopne sub mov (bad) mov cmp movabs jrcxz (bad) (bad) mov adc repnz add int3 lods add jae retq adc decb jg out nop sbb cmpsl lret fs pop push callq (bad) adc (bad) mov or (bad) outsb callq mov mov and (bad) xchg sub fist or and out js retq out rex.WR rex.WX imul sbb nop sbb shll std (bad) imul leaveq out loope outsb pop ja gs push (bad) lret xchg mov mov enterq xor pop jnp rex.RX pop (bad) repnz xor pop (bad) sbb ds stc jmp fdivs add add scas xlat mov cmpsl loope sub int xchg ficomp (bad) or adc or out mov adc lret negl rex.RB fidivrl retq xchg out out pushfq movabs adc cld or or stos popq sub xlat xchg (bad) adc adc (bad) xor lock mov movabs mov loopne xchg es mov lods add xchg push cmp jrcxz adc xchg (bad) adc mull movsb (bad) cmp jmp sti rex.WB stos cmpsb sti mov mulb sarl retq in mov rex.WXB rex.WXB rex.WB notl sub outsb (bad) outsl jae jmp rex.WXB movabs ja callq xlat movabs fmull rex.B insl (bad) loop (bad) push lods fstpl xchg mov sbb (bad) jmp pushfq sub (bad) rex.WX push fnsave push pushq clc rex.WRB sahf mov xor pushfq jmpq rolb cmpsb stos adc mov outsl in sarl xor (bad) (bad) imul lods rorl add mov andb roll (bad) (bad) out (bad) rex.WR push add outsl push fistpl xor mov movsb sarl sbb mov pop pop addr32 cmp ja xchg in cmpsb cmp xchg imul sahf addr32 xor xchg jge pop jne or pop mov rex.RX mov je rcll movabs movabs std ljmp xchg hlt pop xchg cmpsl sbb xor add (bad) (bad) in movabs cmpsl in (bad) mov mov push pushq fildl xchg rex.WRX fwait cld movslq add or and xor out idivl lahf jo callq in (bad) sti xor popfq movslq push scas and xchg (bad) sub rex.RX xchg cld push xchg in push stos (bad) out or sbb rex mov push pop (bad) mov (bad) jno jmp mov fisubrl cwtl mov xchg (bad) movabs mov push leaveq sbb jg imul and mov xchg movsl cmc std shrb pop (bad) (bad) jnp adc stos ficompl sbb int and lahf push mov xchg repnz xor (bad) cmp cmp pop pop popfq lahf fild js lods loopne,pn mov pushq sub jge rex.RB fiaddl xlat mov gs jns ja pushq jb and (bad) cltd push enterq cmpsb xchg xor jne fnsaves cltd jns xchg pushq lods testl mov sub adc xchg (bad) in mov fild mov ja jp fwait xchg xor jno,pn jnp xchg xchg and iret fistl orl xchg int push (bad) (bad) sub (bad) (bad) lods xlat mov cmpb movsb jg push add mov div lods rex.RXB outsl adc (bad) xchg xchg movabs rex.B cmpsb or pop mov (bad) mov jg (bad) rex.RXB mov xchg mov (bad) cs mov loope (bad) rex.RB mov sbb (bad) movabs fwait push hlt ja sahf cltd xchg mov cmp lods xchg lret movsl jo (bad) roll (bad) xor sub (bad) loopne (bad) loop fistp (bad) bsf xchg (bad) pop and scas or xor sarl (bad) (bad) lret ss push mov rex.WXB cmpsl rex.B rex.RXB (bad) add scas in push pop xor xchg (bad) shl subl add and (bad) imul (bad) cmpsb pop sub cmc push xchg adc fmul lahf sahf stc xchg in jns fimul sub jne rcl (bad) clc add pop data16 fmuls loopne xchg cmc out shrl stos xor jo out lea outsb jno xchg rex.RXB jbe retq jge add mov jge shrl rex.WXB leaveq movabs add lock roll and fidiv xorb rex.RXB hlt (bad) adc idivl ds fildl jp push shrl (bad) cld rcpps sub int jg imul jno jle mov icebp (bad) fstps rex.XB (bad) push xchg nop sbb sub cmp sub movslq loop enterq (bad) mov (bad) or movslq fucomi outsl or adc jae jrcxz scas callq xor rex.RXB mov lret push fstl (bad) scas ficoml xchg cld andb data16 pop iret pushq mov out mov adc push orb gs xchg movsl or adc pop jg fldt cmc fstps sbb jnp,pn cmpsw adc movabs movslq add xor (bad) or lock rex.WRB cmp (bad) movabs pop adc rclb test xor sbb outsl int3 cmc (bad) rex.WRB roll (bad) sbb (bad) jrcxz cmc fstl push scas test movabs (bad) rex.WRXB push jbe (bad) stc jg rclb lcall (bad) insl sub mov movabs rex.WRB movsl insb in jbe (bad) (bad) xchg (bad) movslq adcl stc push imul or subb test xchg (bad) lods (bad) icebp adc sahf sbb xchg rex.RXB push adcb pop xchg mov (bad) and rex.RXB cmp pushq pcmpgtd and xchg jbe sti sub or pop data16 in in enterq cmp (bad) (bad) in sbb cmp xchg sbb adc xor jbe rex.WRX sbb rex.WXB sub imul leaveq cmpsl testl out xlat mov mov xor fnstsw subl pushq xchg maxps sub shrb (bad) jne rclb xor pushfq pushq out test (bad) (bad) repz sbb (bad) (bad) push gs rex.WXB subl pop adc enterq (bad) jp (bad) xchg retq (bad) enterq insl pop test icebp out popfq rex.WRXB (bad) fadd (bad) sahf insl lret mov test ds incl jb xchg mov jge push loope pushq jbe xchg sti xchg xor movabs add sbb (bad) cs pop lret incl je addr32 (bad) xchg (bad) rex.WX sub clc adc popfq out and pop add (bad) test cmp mov mov movabs mov fstpt (bad) mov rex.RX or xchg fisttpll cld cltd mov pop (bad) adc in xchg (bad) mov cmp mov ficomp (bad) xchg mov cltd or in pop xchg and clc xchg mov adc jno cltd sarl mov jl mov lods movsl jle stos cmp pop sbb (bad) rex.WRXB mov lods test cmp mov xchg in insl (bad) add add mov (bad) pop xor out xchg mov gs (bad) pushq nop or (bad) (bad) sahf mov xor rex.WRX stos pop mov xor (bad) xchg add pushq iret xor xlat mov icebp cltd cmp rex.WRXB push mov fmull imul pushq jrcxz rex.WRXB (bad) data16 cltd mov insb (bad) (bad) and add jmp movslq adc cmpsb push shlb jae push (bad) mov adc cmpsl es cld adc (bad) fs (bad) jo movsb or or rex.XB (bad) jmpq pop (bad) pop fs jns insl jno movabs and xchg (bad) (bad) mov (bad) mov mov sub mov rex.WXB xor add ds jno (bad) add rex.WB jo pushq mov pushfq sbb jnp (bad) rex.R ds xor imul fwait cmp jmpq and enterq divb cbtw xchg push jne mov rex.WRB loope retq rex.XB jns sub jmp sbb rex.WB xchg xchg cmp (bad) pop (bad) cmp sbb xchg mov faddl rol movabs sub sbb xlat in xchg lods pop fst mov lea sti jae in cmpb mov je jae or mov es lahf (bad) lcall xchg cmpsb movabs mov fwait sbb in addl sti mov cmc cwtl xchg movslq (bad) xchg pushq pop and adc xchg xchg jne outsb (bad) cmpsb xlat roll movsl popfq loope sub jle sub cltd enterq pop stos cwtl ficom push xchg addr32 pop (bad) retq xor (bad) addl lahf lret jrcxz cmc mov push pushfq xor rex test mov jmp (bad) rcrb ficoml (bad) imul outsb and movabs xchg cmpsb fnstcw out je,pt mov add imul (bad) cld out cmp sar (bad) (bad) xchg pop mul lahf mov lods rex ds adc movsb scas (bad) (bad) jmpq adc sub mov and rclb cmpsb (bad) mov (bad) rex.W (bad) mov test popfq (bad) mov sbb cmp sbb jne xchg or mov iret int out nop rex.B test fcom xchg mov add (bad) and (bad) cmp movabs (bad) fwait es (bad) jmpq rex.RXB cld (bad) loopne gs and mov xor xchg stos movabs lods rcrl cmc out rex.WRXB repz loopne push jl (bad) clc jge cld mov push cli jno pushq (bad) push scas (bad) rex.WXB rex.WRX xchg (bad) (bad) fidivl mov cmp rex.WR xor cltd mov adc and xchg sbb (bad) jg xchg mov subl adc pop stos xchg sbb ja (bad) out add push fistpl mov popfq rex.W rex.RXB retw rex.WR retq movabs and xchg xchg js out mov jle frstor (bad) mov jnp sahf rex.WR rex.WXB push movabs cmp cmpsb xchg repnz jmpq xchg enterq xchg lea je pop or pushfq pushfq testb push (bad) (bad) mov sahf (bad) jge (bad) test cmp mov mov push jmp ficom stc rorb sbb nop rex sbb (bad) (bad) xchg js out in jne movabs push mov pop cmp icebp out jne sbb jle sbb add iret (bad) sbb jae xchg int3 (bad) rex.R rex.B fwait push rex rex xchg insb retq sahf mov loop push add cmp add push add pop pop jmpq rcrl or cmp xchg stc pop pushq or sbb xor add sbb sahf sahf add gs nop mov cmp sub (bad) stos in cwtl xor xor mov loopne push (bad) sbb (bad) test insb movslq icebp mov jge leaveq lods movsb add outsl int3 movabs nop or jrcxz popfq and mov rex addr32 cmpsl mov sbbl out scas sahf lea nop and mov push scas outsl adc pushfq pushq pop adc push ficoml (bad) stos iret add (bad) (bad) pop rex.WXB movabs mov (bad) rex.WR lret xor (bad) or fwait jae mov sbb rcrb push outsb adc jae adc and fdivs jmp push push xchg mov sub imul xchg rex.X data16 jbe jae sbb clc cmp (bad) js out pop fisttpl pushq outsl jmp or mov clc loopne jp rex.WRX jl xchg cmp callq lret sbb outsb mov pushfq (bad) sbb in notl xchg mov (bad) fcmovbe rex.WX rorb push xchg mov js nop rex.XB in mov cwtl out fist ficomp movabs push icebp rex.R (bad) jo xchg (bad) pushq movabs or mov xchg sub (bad) pop jno mov or add cli and out insb (bad) (bad) mov push jl retq mov fs fldl xchg or or mov (bad) clc jnp divl movabs mov xchg sti je lret not sbb int imul outsl movslq xchg sub lret lahf pushfq (bad) pushq xchg jp xchg in jge shrd adc fwait jae movslq add in xorl (bad) (bad) rex.WRX pop push stos (bad) jp (bad) or sahf xchg out icebp out (bad) mov add movsb (bad) rex.RXB lock loopne mov adc rex.RXB jbe,pn ja jmp or pmaxub sahf cwtl in sub xchg sub jo enterq scas xchg xchg (bad) (bad) stos retq insb (bad) mov and int push pop jne mov movabs (bad) (bad) stos je mov movabs sahf in test mov fwait adc rex.R mov push (bad) xchg lods cmc push stos lods cwtl mov test shr mov (bad) adc rex.X (bad) sub sbb xchg mull adc movabs cwtl pop in mov iret xchg nop adc ja mov sbb sub jmp pushfq lret movsb lock rex.WRXB loope mov mov rex.XB rex.B xor sub cmp in (bad) jmp retq shl fcompp pushfq or mov lods movsl push stc jle nop insb or xchg and cwtl stos iret mov add add sbb (bad) (bad) push shl xor jp push movsb (bad) or jno mov add mov pushq jrcxz xchg rcrl (bad) int lock and (bad) mov es xchg mov sub xor cltd ja cwtl rex.RB lods xchg xchg push (bad) in mov idivb fs push iret (bad) sbb sti (bad) movabs sbb mov data16 xchg js (bad) jmp sub sbb out imul fabs movsl xchg iret cmpsb decb cwtl movsb orb push neg pop jmpq jno movabs mov repnz xor cmp cld fnstcw xlat out add sbb pushq fstps outsb rex.RB rex.WX xchg pushfq mov (bad) xchg rex (bad) (bad) movabs cmp repz adc test iret push (bad) cs mov rex.WB cmpsb sbb notb jnp test (bad) (bad) int3 (bad) fadds and mov sahf sbb fwait (bad) jnp enterq mov int3 scas xchg je popfq rex.XB rex.WR es mov (bad) or xchg adc (bad) retq fimull sahf or xchg rcrb test xchg or jbe outsl xor rex.RX loop (bad) add xor (bad) fcmovne mov sub xor lods (bad) (bad) loopne xchg or in mov movaps mov (bad) push cld lahf mov addr32 xchg (bad) hlt rol adc sahf clc xchg (bad) cmc (bad) insb (bad) pushq addr32 (bad) insl xchg (bad) add xor and xor push (bad) mov adc or (bad) (bad) insl or mov adc fwait popfq rex.WRX rex.WRB retq jnp out mov xchg rex.XB cltd jb (bad) movabs repz rex.WRB jmpq jp push cmp xchg xor retq xchg mov (bad) out xor jbe lret fild (bad) (bad) mov (bad) add push rex.WRB mov jrcxz (bad) adc retq std pop test rex.R rex.WXB adcb rex movabs movabs imul xchg rex.R push imul sbb test mov fistp retq xchg jns (bad) jno je (bad) sub xchg fwait sar jmpq jg mov sbb or (bad) rcll fwait xchg xchg pop sub sbb (bad) jbe add (bad) (bad) rex.W rex.RX sub add outsb or (bad) jo (bad) mov mov (bad) (bad) mov imul (bad) lock js push rex.WXB rex pop adc rorb fs adc (bad) pushq xchg sub rex.WX lods (bad) jg (bad) callq adc sub pop mov (bad) (bad) (bad) xchg (bad) mov pop or pushq (bad) cmp out shl callq (bad) icebp cltd leaveq cmc pop imul outsl jle outsb scas mov lahf (bad) lahf outsl xchg rex.WR mov nop push scas and jnp clc sbb mov data16 pop rex.X sbb (bad) cmp cmpsl sbb mov cwtl mov or mov inc jne rex.WRX xchg and sub adc gs sti in fstpl (bad) je xchg (bad) and rex.RX mov cs push in imul adcl (bad) je adc cmovnp mov insl push out mov lea adc or mov sbb mov mov jle or adc pushq je popfw sub (bad) jmpq adc add bndstx (bad) fucompp outsl (bad) or push or icebp or and mov (bad) movsl jnp int3 js ror cmp fistpl xchg lock int (bad) lea cs pop adc xor xor rcrb xor pop out jbe or (bad) pop push pushfq jnp jno testl push rex.RX enterq ja jle jbe rex.WR sub test adc test sbb cwtl neg (bad) mov (bad) mov pop xor (bad) lea xlat cltd cmc rolb lret xchg fisttpl repnz sbb ss xchg (bad) scas sbb xchg xchg mov (bad) mov xchg rex.RB rex (bad) rcll xchg iret mov mov (bad) xchg xor push shll (bad) in jo scas ja gs xchg (bad) sub mov cltd xchg iret js scas fstps xchg test add adc pop xchg jns and mov adc jo loopne (bad) pushfq loopne fistpll add lahf repz loopne sti pushfq sbb jae jrcxz pop and pop mov jns (bad) rex.X rex.RX jp flds pop retq mov mov negq (bad) addl xchg adcb (bad) pop icebp movabs mov ficoml (bad) fcomi (bad) in jo ja int3 cs rex.WXB js push movabs jp pushq jae movabs pop loope in jo sub (bad) (bad) rex.WRB gs idivb cmc fldenv and rex.WX divl xchg pop xlat jmp and lock and mov xchg jo xchg xchg cmc pmuludq movabs jbe xchg fstpt sbb rclb (bad) (bad) sbb jo add lret scas mov repz (bad) enterq or cmc rex.WRXB gs jge (bad) ds xchg jae lret stos addr32 xchg adc xlat mov xchg in cmp imul adc sbb test cmp jb (bad) (bad) cmc xchg xchg icebp pop leaveq or test xor push mov xchg cs mov notl int3 jns adc sbb sahf sbb jle sbb xchg rex.XB test rex.RXB lods clc xchg and rex.WX rorb and xor jge leaveq rex.WR movsb xchg rex.WRXB retq loop iret out in repz lods pop rex.WR ja cmp callq rex in punpckhwd mov scas mov mov push jrcxz sbb pushq or lods fwait movsb xchg std orb sahf mov (bad) xor (bad) mov adc or (bad) out mov xchg in rex.RX (bad) (bad) stc xchg lret push xchg std pushq (bad) lret in gs movsb es cmpsb (bad) push movabs pop or (bad) jb rex.XB cmpsb imul add in rex mov incl rcr leaveq push (bad) fwait jge movabs mov jl xchg movabs data16 je adc sbb sub pop scas (bad) (bad) jbe (bad) jbe xor add jmp adc pushq adc andl xchg fwait outsb (bad) (bad) jbe vpunpcklwd out xchg in or mov addr32 xchg xor mov xchg addr32 mov data16 and rex.WXB mov orl in test rex.RXB fwait push adc (bad) stc (bad) out data16 mov mov (bad) movsl mov subl (bad) mov and adc cmpsl test mov cli rol xchg lea or xchg mov rex.W fdivr ficompl sbb stos es xchg lea imul mov sub cmpb or rex.WB (bad) rcrb adc movabs pop callq (bad) rex data16 fnsave xor (bad) pushq pop xchg decl or cmc rex.WR pop (bad) (bad) mov out cmp cmp push pop (bad) cmp (bad) mov outsb cmc data16 push xor fwait clc mov div movsl xor ss sti mov push push sub je fs fwait (bad) (bad) mov xor (bad) jle (bad) test (bad) rex.WB test pop rex.WXB addl (bad) mov fwait mov add rcl mov insl mov (bad) movabs setge add lods cmp callq pop stos (bad) js (bad) or mov jo lods jnp jrcxz add (bad) xchg add mov or lahf sarb sub cmpsb (bad) cmpxchg imul enterq movslq rex.RXB (bad) movsl mov xchg fs jno (bad) fidivl adc xchg cltd scas cmpsb jl add (bad) cmp or rex.WR movslq sbb (bad) (bad) xchg (bad) iret push rex.RX sub sub xor out mov sbb xchg cmp xchg insb (bad) push push mov or mov push stc (bad) ds nop pop or and in lods cld fist xor (bad) mov fdivp stos mov (bad) shl xchg movabs es fwait (bad) in lret (bad) (bad) sub stc add mov pop rex.WRX mov js cs imul repnz mov insl (bad) mov xchg (bad) mov outsl out sahf and (bad) add push rex.B lock xchg std callq push cmp in rex.X mov ja pop int3 cltd test ja xchg mov hlt xchg (bad) add xchg fldt mov fwait movabs (bad) mov jle mov (bad) sbb add jb cwtl jmpq test enterq rcrb (bad) xchg (bad) lods gs (bad) (bad) stos pushfq pushfq add cmc rex.W ds push rex.RXB sub movabs je xchg loope lock (bad) callq callq jp and xor (bad) (bad) adc xorl rex.R int3 jmpq jns jnp rex.WRX (bad) sub repnz test add pop xchg sub (bad) cs out xor fs movabs jle mov sbb adc mov pushfq lock out mov pop (bad) mov sahf (bad) jle fcmovnb movabs cmp out (bad) cltd mov sbb (bad) sub (bad) loope cmp (bad) and fwait (bad) sahf nop (bad) pop mov jge and mov jnp movb mov rex.WRB stos ficom jnp movsl fnstcw popfq mov and int subl xlat lods imul mov movsb callq cmpsl xchg (bad) jbe lods (bad) (bad) scas (bad) rolb and rex.XB mov mov sbb xor popfq jmpq (bad) cld jb sti (bad) mov rex.RX idivb in rex.X (bad) (bad) cltd pop mov hlt (bad) sub xchg sahf fildl or movabs shrl jmp imul xor rex.WXB mov cmpb rex.WRB out cwtl (bad) rex.WXB in sahf stc xchg leaveq pushfq out cmpsl jnp xchg sub movabs cmp insl xchg outsl xchg xor or lods rex.WX pop (bad) divl adc sbbl (bad) xchg loop fwait pop repnz xor stc (bad) (bad) (bad) (bad) add outsl (bad) xchg test sar (bad) (bad) (bad) js mov retq adc sti (bad) adc mov xchg fchs andl add js cmp xor (bad) mov push or (bad) add cmp sub jge add movslq (bad) fsubr pop xor xchg outsl add rex.XB in cmc xchg cwtl cmpsb mov adc jl (bad) xchg rcr lods mov subb jmpq in rol adc rex.WXB add mov cli clc rcll mov add mul or cs pop mov popfq loope xchg rex.XB lret mov xchg enterq cmp and movabs mov (bad) xchg and outsl (bad) cmp and movabs jb cmpsl cli xlat int (bad) rex.R stos cmp add addl pop lret sub jp loopne fldcw lahf int popfq xchg cwtl or or (bad) shrb jnp stos (bad) mov enterq xor xchg lahf (bad) (bad) movabs popfq or rex.W rclb adc nop sbb and negl push out mov cmp push xchg xchg and xchg jnp xchg stos sar js cs or sbb sub (bad) xor pushq (bad) pop sub cs mov lea (bad) xchg rex.RX sub (bad) sbb pop or xchg jo test and xchg mov mulb (bad) mov scas push jle (bad) pop (bad) xor and pop cmpb mov xchg mov mov mov and adc shl enterq (bad) ja (bad) adc lea in (bad) cmpsb push fisub lods mov js js je mov pop and xchg popfq sbb push jbe (bad) ja movsl add (bad) or rolb jmp (bad) dec pushfq (bad) xchg cmc fdivr outsl rex.WB leaveq addr32 push adc repnz xchg out movabs push rex.RXB push in cmp (bad) movslq lock (bad) addr32 or or ljmp sbbl sahf mov callq imul xchg fldt (bad) insb xchg jne ja,pt (bad) (bad) (bad) xchg jl (bad) addr32 xlat sub movabs out push rex.R mov fnstenv wrmsr mov enterq push (bad) cmpsl adc sahf rex.RB pop jle,pn fwait (bad) scas rorl xchg add movabs xchg and cli or (bad) fiadd push sbb mov movslq test mov sbb in and jg xchg shlb iret je or jo pushq lock ror xchg (bad) mov or (bad) loope movabs add movabs adc mov jmp pushq in pushfw fcmovb lahf xchg cld xor push out pop mov pop (bad) mov and movabs mov callq loopne (bad) mov shlb sub push (bad) ffree jrcxz rex.WR or gs xchg mov (bad) xor in adc (bad) lea std rorb or (bad) jmp rex.WRB pop mov mov cwtl lret rex.RXB sarb or pushfq (bad) (bad) sbb int3 (bad) (bad) or xchg xor (bad) xlat in sbb xchg addr32 adcl sub xchg movabs outsb cmp enterq xor lret cld (bad) in xor xchg idivl push (bad) out rex.WB (bad) scas sbb cmp xchg add xchg hlt (bad) loop xchg (bad) sbb mov (bad) fnsave xchg popfq out movabs callq movslq rex.R rex.WX insl int3 notb jo (bad) movsb push hlt pop in push stos jns push jmpq jo rex.W rex.R push mov lahf xchg stc cltd out or adc xchg outsl movabs clc mov add xchg or or cmc pushfq movabs xchg icebp jmpq xchg cmp fldt scas pop repz testl (bad) (bad) stc cltd (bad) (bad) retq stos mov rex.XB push (bad) (bad) in pop movslq rclb jnp stos pushfq add sbb sbb or cli add xchg rex.X rolb xchg insb mov xchg xor movsb push movabs data16 lods (bad) cltd fstl jmpq mov xchg push test (bad) xchg jle sub lods jg pop adc jae sbb movsl pop stos sti xchg retq test sar in rclb sbb mov rcrl (bad) mov (bad) mov xchg stos mov xchg and movsb xor (bad) adc movslq (bad) movsl and jmp (bad) out pop jne xchg (bad) scas and icebp rex.RB jl rex.WX push jrcxz (bad) xchg adc cs cwtl fwait cmc fsubr test popfq rcr (bad) (bad) pop jnp cmpsl add (bad) jne sahf jb subb add rex.B sbb and addr32 (bad) sahf movsb cmp pop mov movsl xor sbb sbb (bad) scas mov sbb lods pushq mov (bad) lea lock mov adc jge push movabs xor repz clc scas leaveq mov ljmp cwtl rex.R mov movabs scas imul lea sub xchg je cmpsb stos adc rex.X rex.WX sarb adc (bad) popfq and xor pop (bad) (bad) jp jb (bad) mov rorl fstl mov scas xor jno xchg (bad) (bad) fstpl jl xchg pop mov pushfq (bad) (bad) outsl pop jne xchg sbb fldcw sbb ficom test and mov cltd rex.WX (bad) stos stos movabs adc cmpsb out pushfq push int (bad) rex.WB rex.WRXB (bad) rex.WRXB callq add (bad) cmp xor adcl js (bad) rex.WXB enterq pop loop xchg sahf jno clts mov out xchg jo mov rex.WX cmc (bad) xor rcr (bad) rex.RX rex.WX jl jge jns fnstcw and mov rex.RXB (bad) mov xchg rex.W pushq and movabs (bad) cmpsb (bad) adc pop (bad) xor rex.X leaveq add push mov (bad) xlat jnp (bad) (bad) cmpsl sbb (bad) cmp lods rex.RXB iret pop mov cmp rex.W rex.WRXB mov xchg (bad) jmpq (bad) test sbb xchg or mov pop mov lea xchg rex.WR or shr sbb repz xor fldl popfq in jrcxz xchg jne (bad) rorl (bad) mov fldt xchg mov (bad) xchg (bad) lods pop (bad) repnz ss pop rex.RB int3 xchg stos sbb outsl stc xchg cwtl data16 jp xor cltd lea push mov out rex.W es xorl loop rex.WRX inc cli fcoml idivl pop jmp out push int or xchg subl lock mov insl (bad) loopne xchg movabs (bad) popfq orb jns in or xchg xchg and jae mov shr jrcxz (bad) cltd push add xlat imul outsb cwtl jrcxz pop stos fcoms clc or xlat (bad) scas xor xchg popq gs xchg jp xor jmp rex.RX iret mov cwtl ds push (bad) std (bad) rex.R xchg xchg jo enterq lods pushfq stc push fistl mov adc add ror and ja xchg xchg imulb cmpb sahf cmpsl (bad) jle fsubrs mov mov xchg pop push sbb js cmp xchg xlat mov cwtl jg stos cld cwtl (bad) and push (bad) insb movslq jrcxz (bad) mov lea rex.WX in cltd sub notb jg sub mov lea (bad) add xchg cld rex.XB rex.WX rex.WXB (bad) and loop (bad) repnz loopne popfq xchg ja shrb cmpb (bad) retw pop mov or sahf xchg icebp (bad) cmp outsb (bad) cmpsl (bad) or pop mov jp (bad) or sbb (bad) loop (bad) sbbl add cmpsl or adc roll (bad) rex.X sti pop xchg lcall mov and mov xchg je retq (bad) ds (bad) pop xor pushq rclb fsubs popfq (bad) sbb sahf jbe mov loopne and sbb (bad) and pop pushfq clc jle nop (bad) mov xchg mov xor cmp (bad) xchg xchg jae cmp sub rex.X out xchg cmc xchg and notl mov (bad) mov push xchg or (bad) insl xlat cmpl cmp or movabs (bad) and cwtl pop rex.WRX andl xchg cmp retq movsl mov xchg mov pop (bad) packuswb rex.WXB hlt jo sbb loopne adc jns rex.WXB cmpsl (bad) scas jno loope xor sbbl xchg rex.WB jno adc xchg (bad) rex.X push insb je pop iret xlat stos (bad) mov rex.WRXB cltd sbb outsl rex.WRX cmp (bad) mov mov add push xchg (bad) adc or mov mov xchg adc pop (bad) jl mov xchg mov (bad) iret lahf adc sub rex.X rex.XB lret (bad) cltd rex.XB add rex.RXB fldl xchg scas movabs xchg lods fcmovnbe xor data16 and ss push (bad) jrcxz xlat (bad) mov retq xchg cmc xchg iret cmpsl (bad) or cmp outsl ja lea in xchg retq mov in stc sahf movabs jne (bad) in test pop int3 test int lahf or sbb cltd (bad) (bad) ja out (bad) iret jb jl (bad) test nop jo out mov mov jp rex.WRX fstp jnp,pt mov repnz and (bad) xchg mov and rex.WR push sub rex.WX leaveq pmuludq xchg (bad) cmp jno insb (bad) imul add mov mov (bad) out sbb pushq adc (bad) sub (bad) jns jge rex.XB rex.WR cmpsb rex.WRXB cmc addr32 (bad) mov test (bad) (bad) mulb stc mov (bad) xchg and fdivrl cmp in add je fisttpl outsl rex.XB jb data16 sbb and test push outsb minps rex.WXB push jrcxz icebp mov sbb mov in push addr32 movabs pop adc (bad) sahf adc rex.RX lock mov xchg jnp mov loope jmpq or (bad) xor movslq cmp cmpl mov adc ja and in push in xchg imul add pop pushq (bad) sti movabs pop jnp movabs jae adc pushfq nop sub rex.WRB rex.W and notb rex.WB add push jmp jbe and sbb (bad) stos xor and sbb rclb callq mov repz loopne mov (bad) imul movsb scas sub sub xchg pop in jp xchg cmp (bad) sbb xchg cwtl in mov or mov xor fisttpll sbb rex.W movsb fisubr (bad) pop rex.R sahf jo sbbl ja cmp rex.WX cltd mov rex.RB rex.RX rex.WR (bad) cmpsl iret stc mov jbe out sub (bad) in (bad) xchg (bad) cmc jrcxz sub adc mov jbe rex.WRB loope jne imull js jge (bad) callq mov ja fs lret (bad) popfq pop jp jne (bad) ss hlt (bad) xor or pushq fs imul jbe xchg shr mov (bad) mov rex.WRX mul movabs xchg callq and push movabs mov adc cmp push cmp cwtl mov xchg and mov leaveq movsb rex.WX (bad) rex.WB mov stos rex.RX push js xchg sti lods xchg setb mov (bad) add repz pop rcrb mov xor and loopne jp sub and nop out addr32 insb rex.R out mov movabs xchg pop icebp mov cltd cmp or scas pushfq notl pop jle adc mov movslq int3 add sbb (bad) (bad) xor xlat jle mov (bad) pop push or cmpsl icebp rex.X inc pop xchg jge mov popfq insb cmp rex.RXB mov xchg xor sbb idivl mov insl in xchg std test add xchg mov sub imul xlat jge cmpsl (bad) jrcxz jg (bad) xchg mov (bad) movabs mov stos in xchg movsl xchg pushq popfq adc lahf mov iret sbb lods mov sub xchg mov (bad) hlt adc cmp clc (bad) cmp pop sahf sbb jg (bad) push pushq (bad) sbb (bad) callq sub xor jg (bad) data16 (bad) jg movsbl add adc jmpq cli rex.RB add sbb xchg lret movsb rex.RX rex.B vrsqrtps stos rex.R jg xchg push mov pop lret xchg mov out fstl xor loop cltd or xchg pop incl jp out mull (bad) fucomp ss rex pushfq mov sub (bad) (bad) xor mov mov fldt (bad) xchg rex.B pop jrcxz ud1 jmpq add (bad) (bad) or add (bad) adc (bad) jrcxz ja xchg xor enterq (bad) jl adc pop (bad) jb movabs pop xor (bad) divl fadds rex.WXB sub xchg data16 out rex.XB nop mov sar (bad) test sahf and sahf rclb and sub movabs sbb xchg mov out push push mov sub retq insb pop cmpsb mov (bad) push ds push (bad) jmp pop insl and add (bad) movabs xchg stos adc nop mov imul jo,pt xchg add xchg cmpsl and nop sbb leaveq nop idivb loopne (bad) add pushq add cmp leaveq push lods mov sbb std mov sub es adc add xor sahf or push idiv rex.WXB xchg xlat scas (bad) popfq cmp lahf (bad) cmp mov (bad) xor xlat cli pushq scas add cmc jle cmp mov js jnp shlb jne pop nop mov rex.WB push xchg ds repz fist pushq jg jrcxz ss divb fildll (bad) es (bad) rex.RXB xor lret cmp mov fwait add rcll cmp movabs je mov rex rex.WXB rex.RXB rex.WX (bad) or xchg mov xor hlt rex sahf in mov mov mov (bad) out popfq add xlat push add xchg (bad) icebp xchg xor sbb sub and fxch jl movsb pop fs lret mov loop and imul cmp (bad) ja sub xor sbb jmp test (bad) jno mov push or cmc jrcxz cwtl test mov rex.XB xor data16 fcom fistp jnp (bad) fwait (bad) mov xchg sub lahf imul rclb rex.XB cmc sbb xchg xchg movabs xchg movl rcr rorb (bad) xchg js sub cld in xchg adc stos (bad) popfq nop fwait rex.WRB mov xchg fild xchg (bad) in enterq and rex.WRB xchg sub lods rorb (bad) jl jge xchg jmpq mov xchg (bad) ss mov xchg ds mull xchg fwait xchg sub xchg xor (bad) out (bad) (bad) cmp (bad) cmc or jb (bad) out (bad) loop jrcxz adc and push outsl (bad) popfq (bad) adc sahf pop jnp sub mov rex.RXB sbb (bad) pop mov xchg cmc jrcxz jg xchg push (bad) sub (bad) or rex.RX add (bad) mov pushq xchg and xor fnstsw pushfq out jae mov clc rex.WRXB xchg ds pop and xchg fnstenv rex.WRXB mov sbb pushfq repz ss rex.W testl (bad) pushq cli mov rex.WRX loopne rex.XB rex.RXB rex.RB (bad) and out je enterq pop xchg fldenv cmpsb (bad) data16 es movsl rorb testb insb sub hlt pushq (bad) or fs mov (bad) (bad) add test xchg mov (bad) stos lret nop lea xchg sub ja (bad) mov ss leaveq out jne (bad) ja sbb int3 jge mov cli (bad) pop lret cltd lret addr32 jae (bad) jl fs (bad) xchg xor fsubr sti pop mov (bad) xchg cli push push (bad) movabs adc ja (bad) (bad) fnop es callq add movabs cmpsb imul cmp (bad) cwtl je movslq movl (bad) (bad) loope pop pop jl (bad) flds jmpq test add mov (bad) xchg stos or xchg push scas cmp xor add out xchg (bad) pop rorl pop add lahf callq sahf fs rex.WRX fsubs xchg cmp sub jb xchg xor cmc pop or xchg xchg out cltd cmp rex.RXB movsb test jne repnz rex.WR mov pushq (bad) leaveq fwait sbb notb (bad) sti addr32 es movslq repz movabs xchg xchg movabs adc mov scas xchg rex.B mov insl or pop fidivr xorl mov out (bad) (bad) xchg or (bad) adc jg jge (bad) (bad) (bad) xor add or pop rex.RB xchg adc (bad) fsubrl mov sarl fcomps imul out xchg movabs movabs jl gs rex xchg pop adc (bad) (bad) callq lock mov mov xchg sbbl repnz rex sbb push cmp xchg adcl jmpq mov and rex.R add xchg movabs movabs enterq jge repz stc (bad) jbe popfq xchg (bad) nop lea adc jno jb outsl jne xchg adc mov cltd add popfq test imul (bad) jle or insb movslq and mov (bad) xchg adcl xchg callq lret movabs xchg jrcxz movsb or pushfq rex.B xchg jmpq cltd insb add mov retq retq add pop push xcrypt-cbc cmpsl xchg in std (bad) cmp (bad) sub mov adc xchg movabs jp jbe nop xchg mov insb push (bad) (bad) pop pop roll rex.RX rex.XB mov pop jbe xor or mov xchg (bad) cmp rex.RX lods popfq xchg lods rcr (bad) mov rex.R xor sti callq callq or fsts cmp xor sbb mov movabs test (bad) xchg scas mov leaveq (bad) xchg mov nop mov pushfq divb xchg lret cmc xchg jge retq mov adc (bad) fistl jmp cmpsl sbb test or sub test xchg lods cld xlat pop iret and test repz and pop ficoml xchg (bad) popfq xor test sbb mov xchg (bad) add xchg pop int3 or lea xchg mov lock sbb jmpq xchg out rcrb ds push cmc rex.WRXB jbe cwtl rex.R rex.WRXB jae mov (bad) jmpq out in xchg jl jp ja std fldenv jle push stos mov rex.R and pushfq sbb xlat cmp sbb (bad) (bad) popfq jle xchg sub in xchg ror xchg fwait rex.WR push movabs rex pushfq ja add lea mov pop jrcxz jnp cld jge rex.WRB pushfq sub out sbb (bad) (bad) pop (bad) out (bad) movsb cmp cmp rex.WRX movabs pop shl iret sahf shll mov (bad) xorb test (bad) rex.XB pop (bad) adc (bad) xor lea rex.R mov popfq xor callq xchg mov cmpsl repnz gs (bad) jb mov rex.XB in jmp jae adc jns rex.X js out xchg lahf jg faddl sbb xor movabs cmp cli stos xlat imul (bad) roll cltd (bad) rex.RX (bad) jbe xchg xchg mov lods stos mov (bad) movslq mov int3 in mov nop jmp adc adc jne (bad) (bad) push cmp ja test rcll retq xchg rex.WRX jne loopne js sub es rex.WXB pop (bad) je (bad) movsl adc xorl xchg movabs (bad) jno movabs jo mov xchg (bad) ds jrcxz xchg leaveq xor imul jno shlb jl callq xchg add rex.WRB (bad) (bad) retq std movsl fs or (bad) push lock sahf div loopne enterq rex.X xlat (bad) sub pushfq mov mov lods rex.RXB cmpsl cltq fsubl add and cmpsl (bad) mov xchg mov pushq mov nop callq xor movabs addl (bad) mov mov xchg and (bad) repnz cmpsb sub pushq jb jmpq nop loop loope cli test (bad) cs xor mov add test fcomps cmpsl cmp (bad) jle movb jae mov and (bad) (bad) and xor mov mov cmp (bad) sub stc push (bad) sbb mov (bad) jmp cld lock test xchg iret shl notb int cltd (bad) (bad) ss sub leaveq mov (bad) (bad) cs adc js xchg retq or rex.RXB popfq sahf and sbb fsubp push jnp int3 xchg (bad) cmpsl xor rex.W cmp pop xchg pushq imul push xor mov and xchg mov pushq cmp movsb and mov pop insb sahf sti in hlt rex.RB cmp (bad) mov movabs fstps mov xchg (bad) movabs push in adc pushq gs or xchg mov or (bad) add out or jo and adc xchg lahf rex.WRX (bad) (bad) xlat jmp (bad) movabs (bad) stc (bad) xchg (bad) pop (bad) movabs mov add pop add pop lock test loopne test addr32 pop fist lods sahf js retq rex pop fcoms gs cltd rcll int3 stc (bad) rex.WR add fisubl and std pop rex.W sbb rex.WX mov (bad) sub movabs and movabs fstl in mov je mov outsb mov mov out mov jnp cli scas xlat jns (bad) jb pop jbe fstl stos (bad) in and pushq (bad) xchg cmpsl mov (bad) push movsb paddusb mov (bad) (bad) rex.WXB mov mov (bad) add jrcxz jmp adc sbb rex.RX movabs sbb cmpsl add mov (bad) mov sti (bad) fdivrl or add push cmp xor push stc sub std pushq loop enterq xchg sbb (bad) mov sub pop lret in pop xchg outsl sbb xor jo jae push mov sbb (bad) outsl int3 int lock repz pop fistpl pushq (bad) loopne xor pop insb (bad) cmp jge jge adc movslq testl (bad) cmpsl pop xchg cltd mov mov retq rex.WX add mov lea (bad) nopl loope pop or mov jne mov cmp xchg xchg lea and adc xchg fs movabs push and cmp rex.WRX or rex out xor fnstcw imul xchg xor mov stos cmp (bad) xchg push (bad) (bad) movsb xchg xchg xor mov imul xchg (bad) lock (bad) xlat hlt fucompp pushfq sbb (bad) sahf xor fistpll sub retq loop,pn rclb cmpsb ja xchg cmp scas mov mov cltd cmc mov mov push cmp adcb sbb add and mov pushfq retq (bad) mov xchg fstpl push stos movsb jnp (bad) (bad) test nop icebp (bad) popfq xor fnstenv fs cwtl outsl cmp push mov ffree xchg adc cmp jne sahf rorb sahf jnp (bad) xchg (bad) callq and cwtl ja mov rex.WR adcb int cwtl xchg in jl outsl fnstcw imul in mov jae cmp xchg cmpsb test stos hlt jns sub enterq (bad) movabs (bad) movsb (bad) xchg sahf notb cmp popfq rex.XB sahf (bad) out jno sbb js mov and add pop xchg xor rex.WB test sbb xchg cmpsl rex.B (bad) add (bad) and rex.RX jrcxz or cmp (bad) mov sub adc (bad) (bad) and js sub pushq mov jae sbb (bad) enterq movsl (bad) (bad) pushq nop sub (bad) (bad) lea sbb (bad) xchg xlat xchg or sbb cwtl mov and or retq or std mov (bad) movabs lahf mov retq (bad) cmpsb and popfq out mov xchg cmp xchg (bad) sub add xchg mov sub mov (bad) pop jle fimul nop xor (bad) cs xor xor add mov (bad) rex.WRX cltq sub and (bad) xchg adc stc in fistpll pushq stc (bad) jns add (bad) movabs movslq push push shl mov sub mov mov data16 fisub ud2 jg (bad) jle pushq pushq fldl push adc or cmp sub pop mov test pop rex mov or orl mov cltd xlat (bad) fisubl pop in movabs imul mov (bad) add or xchg jp pop (bad) pop jbe cmp jnp and push mov adc movsl or push mov (bad) or insb xchg mov adc insl mulb movsl jb mov shlb rex.WB push add mov paddsb jmpq lahf xchg lea cli stos retq xchg mov out push nop/reserved movsb lcall in xchg callq pop and mov xchg in add (bad) pop (bad) adc lock sbb xchg and rex.WXB rclb lea xor popfq mov (bad) stos cmp push pop insl xchg jmp adc xchg flds jae xchg je xor lea (bad) rorl push mov fisttpll in rex push stos jo rcrl mov (bad) jge mov cmp (bad) sbb outsb out callq rex.XB cwtl (bad) (bad) jae mov jl jb xor loop divb icebp shr push sub jae fs insb xchg pushq mov sbb movsl rex.WR insb (bad) (bad) ja outsb fisubr adc js pushfq jle pop mov (bad) xchg push nop rex.W (bad) jo (bad) mov fcoms (bad) and (bad) sbb sti movabs scas (bad) cltd mov push cmp mov cli lret shll (bad) rex.RX cwtl and mov xchg jg sar xchg push cmp (bad) or (bad) rex.WB fldcw roll leaveq cs outsl out sahf mov push mov data16 jmp xchg fdivrs rex.WX (bad) cltd popfq mov cs cwtl adc sahf loopne gs pop movslq and adc jrcxz icebp scas xchg (bad) loopne (bad) mov stos sub fs xchg mov mov (bad) xchg xchg adc stos fucomip js lods addb cmpl fcompl jae fucomi loope divl pop (bad) xor rex.WX sbbl mov (bad) rex.WRX loope mov jae in scas add (bad) (bad) ja jle (bad) mov xor rex.B addr32 pop pop jb (bad) gs loop pop adc pop mov (bad) cmp rex.WXB insw mov and jp sbb mov push mov mov xchg pushq in jle cmp mov (bad) fisttpl bnd rex.X rol xorl (bad) mov insl pop fstpl pop pop lret rex.WB movslq xor rex.WX movabs push mov test lret sub or lahf std sub jo out lods xchg pushfq nop (bad) push enterq pushq ja xchg or test (bad) xor or (bad) (bad) mov test mov add movabs xor mov (bad) int3 (bad) icebp (bad) movsb push cmp sbb xor xchg test lret xchg sahf (bad) or outsb xchg pop pushfq xchg and sbb sahf movslq leaveq shll mov xchg stc pushq jmpq (bad) rex.WRX or lret adc xchg and repz cld push sbb int fs repnz xlat (bad) mov cmp mov xchg mov es div lea jne sbb sahf repz xor in mov and sbbl js gs jae in (bad) mov rex.WXB sahf (bad) rex.WRXB or pop popfq mov insb mov rex.RB xchg (bad) cmp (bad) mov (bad) lods sahf loopne nop (bad) sbb add cmp or movabs sbb mov in jnp or xlat lock cmp and rcrb xchg sbb jp callq or pop out rcrb (bad) cwtl stos xchg or fdivl mov loope rex.WRX jnp xlat (bad) sbb pushq negb pop mov xchg hlt xchg cs xchg mov mov nop orl rex.RB (bad) adc negb rex.R (bad) or je xor (bad) rex (bad) jae mov movabs rex.X setle mov fdivrl gs mov rex.WRB movsl sub jno rex.R (bad) (bad) jl outsl (bad) add cli mov sub int loopne pop pop (bad) mov mov xchg cli lock divl lods xchg add push (bad) lret (bad) movabs hlt pop push push cmpsl jnp out push movsb or sbb sbb pushq mov fadds sub jge xchg jnp adc (bad) test adc movslq and cmp jno or jne test repz out lods cmp pushfq repnz cli (bad) push pop (bad) imul xor adc jmp rex retq (bad) jns xchg stos callq scas scas jmpq sti mov leaveq lea jg mov je (bad) (bad) in fwait imul xchg add (bad) pop test (bad) out mov mov jns jl ss rex.RXB mov xchg mov (bad) fstpl int xchg cld lock scas sub (bad) push (bad) fcomps loope shll or (bad) or (bad) xchg fild jnp (bad) iret rex.R rex.WRB or xchg mov mov cwtl push (bad) loopne (bad) addr32 sahf sub (bad) in pushfq (bad) movabs out ja add sbb mov rex.X (bad) (bad) xchg movabs jg in out ja rex.WX xchg scas cmp (bad) leaveq sbb imul loop cwtl sarl xchg scas test jb mov add in pushfq xchg test ss push xchg callq (bad) out rex.R adc clc xchg in neg nop cwtl mov xchg mov xor imul (bad) (bad) fnstsw mov adc es in (bad) icebp xchg shll movabs pop sub imul rex.WRX mov (bad) xchg rex.WXB movsl pop rex.WR out es ja insb mov (bad) jrcxz leaveq rex.W xchg (bad) jbe jns xor (bad) je pop mov (bad) rex.X stos (bad) mov rex.RB rex rex.WRXB frstor popfq (bad) add (bad) push (bad) rex.RB lods pop jrcxz test rex.XB fxch pushfq xlat xchg movabs scas fisubrl mov pushfq cmp test mov mov sahf pop mov gs (bad) xchg pop mov movabs leaveq xor (bad) out jl rex.WRXB push cltd (bad) scas std int3 and mov mov and mov scas pop mov (bad) push lahf pop (bad) xchg jbe (bad) out cmp mov insb fs and je and nop (bad) pushq xor add xchg shlb (bad) sbb pop cmpb sarl add push mov lret xchg and imul shl sahf cmp popfq mov push jnp shrl cs lock jg (bad) cmp hlt xchg adc subl (bad) xlat repnz cmp xchg imul loop xchg sub fwait (bad) pop cmp cmp add cli (bad) scas mov cs jge jae xchg ss pop pop clc mov (bad) (bad) xchg retq sarl sub jrcxz or lahf mov in fmuls (bad) adc cwtl sahf fnop cltd int xchg out in pushfq cmpsb xor sbb lock xchg mov mov xchg mov jle sub rex.WB sbb in xchg ja pop stos (bad) mov lea fsubrl data16 mov (bad) iret mov pushfq pop (bad) rcr pushq clc (bad) cs xor mov andb sahf mov rex.WXB xchg cli fimul repz movabs cmp xor fsubl (bad) mov (bad) ja (bad) loope push outsl fiaddl mov mov ja xor xchg mov sti imul sub sub imul pop xchg sbb repnz mov outsb xlat movabs mov (bad) jo cmp (bad) rex.X rex.WRB in xchg (bad) xchg roll push out or (bad) sar mov (bad) rex.WRX xor outsl jg (bad) (bad) mov rex.W xor rex.WX rex.XB cs rex mov mov push fs xchg (bad) xchg flds cs sbb loop sti imul rex.WRX and adc enterq jg fwait pop fmull scas (bad) jp sbb mov lahf adc jmp fisubr mov xchg clc (bad) lret adc (bad) cmp xchg pop xchg xchg cmp push cmp (bad) movq rex.WXB cld and js xor (bad) xchg movabs (bad) rex.WRB fbstp fild jo and (bad) cwtl fstps fwait in out pop cmc rclb xchg out pop sahf cmp mov sub (bad) pop xor notl xor cmp adc je int3 (bad) callq mov xchg mov testl cwtl and jo shrl in rex.RX sub movabs imul jle rex.WXB cmpsb xchg enterq (bad) repnz mov (bad) (bad) test mov loop iret rex.X (bad) popfq (bad) retq popfq cmp rorl int adc fnsave mov mov lcall xchg rex.WXB rex.B (bad) push or (bad) sub pushfq mov (bad) jns ja xchg (bad) ja (bad) xor (bad) scas xchg and je xor movslq and sbbl (bad) lods scas mov in xchg fcmovne pop (bad) add sbb ss and xlat lret test fsts push (bad) test mov sarl pushq (bad) (bad) in pushq sahf adc out jp add gs add xchg mov cmp imul jge add add xchg ds and (bad) fadds mov (bad) callq pop scas xchg fs cmp loop jb hlt fsubs mov out addb xchg sbb (bad) data16 pushq repnz add enterq popfq rcr prefetchw jbe jae (bad) sti pop (bad) jae mov adc insl (bad) jae mov lock test insl rex.WRX xor (bad) ror jrcxz movabs (bad) or out int jae xchg or loopne push xchg outsb outsl and sar insb add xchg callq pop cmp lea xchg andl add js es mov rex.WR rex.WRXB rex.X xchg mov xor and rex.RX mov add xchg stc lret std sbb (bad) mov mov (bad) xchg xchg paddusb lret and stos (bad) leaveq (bad) int rcll jns mov rex.RX sub fsubrs movabs cltd jge std xchg movsl mov lods mov (bad) sti cmc and int (bad) (bad) jb jns pop (bad) es (bad) cmpsb pop add hlt pop leaveq (bad) outsb jnp xchg xchg mov mov iret xchg pop movabs hlt scas movabs mov mov pminsw xchg rcrl jg mov mov (bad) sahf rex.WRXB mov sahf mov sahf mov mov movslq popfq stc iret in (bad) clc push rcrl fidivrl xlat (bad) gs ja imul iret (bad) nop push push push (bad) ja rex.WRB movabs callq movsb lods int cli loopne ds in rex.RXB repnz (bad) insb jp out cmp sub mov sbb (bad) pop rex.RXB repz sti outsl cld fcmovnu pushq mov retq sbb out mov and pop rex.WX rorb rcll hlt fcomps cmc popfq rcrb sahf (bad) mov cltd addr32 movabs mov sbbl movsl mov incb rex.WX ja je mov jns (bad) data16 icebp repnz sahf fcmovne and sysexit loopne imul movabs mov cmp lods movslq mov pushfq add (bad) gs jb stos fxch mov es cmp cmp sti sahf jno (bad) fnstcw xor sahf (bad) xchg jnp jb out mov lods xchg jno xlat rex.WRX (bad) cmp pop imull xor stc cwtl xchg int mov (bad) mov or es add (bad) fidiv (bad) xor (bad) stc xchg sub push (bad) jno repz fistl mov pushq rex.R or in cmp xor jg cmp clc rex.RB fsubrl mov xchg out insb leaveq (bad) jge or xchg sub int or lods (bad) xchg sbb movsb es repnz xchg rex hlt mov jmp push mov mov mov (bad) frstor rex.WXB xchg mov sbb movsb push or (bad) mov frstor rex.WX subb xchg test (bad) sar fwait push and jns rex.XB outsl xorl xor rex repnz rex.WRB pushq rex.WRXB or sbb orl idivb lahf out pop movabs (bad) adc rclb jmpq kmovw cmpsl movsl mov push scas mov xor mov loop add (bad) ficom idivl adc or cmpsl xchg js cld and pushfq nop mov movabs divl xchg xchg sbb lret cmp (bad) cli add rex.WR (bad) xchg jg rex.XB mov xchg cmp js rex.R rex.W push (bad) xor adc data16 (bad) cwtl cmp lods and fmuls or xchg lock rex.WRX xchg insb adc outsb jle rex.R fwait hlt xchg xchg cmp sub jne andb or leaveq pop addr32 or retq mov (bad) sbbl rorb rex.B jne xchg (bad) pop push xchg hlt movabs (bad) pop xchg movslq scas xchg adc out retq xchg (bad) ja hlt movsb fisttpl xchg xchg cmpb sub notl hlt push insb add xchg push sub (bad) (bad) xchg std and (bad) stos callq cltd (bad) (bad) xchg xchg movsl out xchg pop add (bad) xchg or xor (bad) mov scas ja enterq fnop xchg std xchg cmpsb negl pushfq (bad) jge out jbe sub and imul (bad) negl xchg imul pushq shr (bad) mov movabs jo fisubrl hlt clc pop rex.WRB fist rex.X (bad) (bad) sub imul mov xor pushq mov sti pop and jo push iret rorb (bad) sbb jbe pushq sbbl or (bad) retq fisttp pop (bad) mov cltd (bad) push pop movslq adc cmp bt (bad) adc (bad) stos iret mov fsubr pushfq xor and pop fldcw xchg mov out sti scas push or (bad) pushfq fsubrs push xor xchg sub cwtl rex.WRXB ficom (bad) repz (bad) cs xchg ss rex.X mov imul push (bad) sub scas sub push movslq jbe in adc rex.X xchg pushq movabs sub sar fcoml out (bad) rex.WRXB add (bad) add movslq xor lea (bad) mov retq push add movabs sub xchg (bad) pop imul mov (bad) sbb test add mov jmp jb imul xor in sti lret rex.WX sbb mov movslq sti adc mov sbb cmc xchg test xchg leaveq rcrb sar (bad) (bad) xchg mov in adc xchg adcb data16 xor in rex.WRXB out xchg or fisubl xchg mov mov rex.R pop sub rclb test (bad) mov mov mov nop cmp or cmp fnstsw ficomp mov cwtl sbb incb rex.RB addr32 mov (bad) stos (bad) lahf sbb sti andl xchg (bad) insl push mov jg cwtl jge xor outsl in (bad) xchg fcompl cmpsl movabs mov retq pushq cs (bad) mov jae cmp fistp or roll in fldcw (bad) lret addr32 mov add es enterq add jo (bad) out mov pushfq (bad) jmpq jne test cltd lret xchg rex.WX mov jrcxz xchg xor subb mov lock outsb pushq movabs (bad) sti xor add movabs (bad) stos ficomp mov movsb sub (bad) push gs test test pushfq cmp and cli pop rex.RXB decl pushq clc (bad) stos pushq adcb mov mov jns sahf mov cmp rex.XB retq callq outsl (bad) mov xor pop mov (bad) (bad) enterq sti or xchg fcom xor repz test jb stc retq test rorb pushq pop or xor rex.X (bad) mov mov out loop (bad) xchg mov lods rex.WRB pushq rex.WR sarl in leaveq (bad) lahf ficomp xchg (bad) sub jo rex.WR rex.X xchg (bad) (bad) or jl notb xor fbstp test out cwtl mov callq addr32 (bad) rolb fnsave movabs xchg mov insb fldcw (bad) popfq cld xor ja sbb cmpsb enterq mov lret xchg insb xchg rdmsr push (bad) adc push sub shl (bad) in in fsubl orl andl test mov xchg (bad) cltd mov (bad) (bad) (bad) jo mov pop (bad) rex.RXB add xchg mov roll xchg lahf (bad) rex.WB cld mov mov lret cwtl (bad) jae icebp insl (bad) fldl2t xor out (bad) xchg (bad) rol retq rex.WXB rcll out jrcxz sets mov movabs sbb iret clc leaveq xchg push jo out mov fbstp sub xchg and stos (bad) addr32 push fisubl rorb jne adc rex.RX mov (bad) out fwait sbb out sbb movabs xchg jns rex.WB data16 mov sub xchg and jb sahf stc stos add lock rex.RXB lea pop xchg iret enterq (bad) xchg popfq cmpsl mov addl or ss rex.X and push jnp cmp rex.XB (bad) sub test ja and and jmpq cwtl or jl rex.RX (bad) push pop cs scas stc lahf (bad) xchg fisubrl sub fcomp sbb sahf imul xchg pop movntq adc divb cwtl or sub pop mov rex.WXB ds stc xchg xor clc add sbb lods xchg mov push (bad) lret (bad) sbb andb (bad) xchg sub gs out ficoml pop sub ds (bad) jl xchg sbb hlt push (bad) pop (bad) mov xchg shr mov push push (bad) movabs xchg fsubrs xor fimul sti and in pop movabs imul add jno (bad) push fstl jl lahf sub mov (bad) jle cmp lods (bad) or sbb mov adcl pushfq (bad) mov addr32 push movsl hlt icebp xchg xchg mov sbb adc pushq (bad) adc and jmpq movabs (bad) sub xchg adc lods rex.RX rex.R (bad) mov rex.WB (bad) lahf xchg in sub cld sti rex.WRX or xor notl (bad) rex.RXB scas (bad) ficompl sub pop movabs mov pop in xchg mov lods fwait test jae fucomi (bad) xor (bad) xchg cmpsb mov push adc pop rex.WRB or push (bad) xchg (bad) (bad) jrcxz (bad) test xchg imul rex incl movabs fcomps jbe (bad) (bad) icebp rolb sahf mov loop add (bad) jno cmp xchg (bad) sub and pop (bad) fstl repz mov push (bad) xchg rex.WXB (bad) imul leaveq xchg fisttpll xchg sbb (bad) cwtl cmc movsl mov sti xchg sahf insl rex.WX jmp xlat jb jno fwait test and mov (bad) cmpsl sbbl (bad) xchg sti fcos or rex.R cmp fimull cmp mov movsl sub lock cltd jae loope and mov rclb xchg es rex.RX ja xchg out leaveq adc mov int3 xlat add jo or (bad) push jge enterq lret cmp sti pop sahf push lret movd xchg push in jae sub rex.WXB (bad) (bad) (bad) xchg outsb sub int cld xchg insb stc mov loop sbb add lods pushfq cli negb xor xchg add movslq (bad) je sub mov and imul sub nop (bad) and gs xchg add test (bad) hlt retq movabs fcomp jnp (bad) nop adc push gs push pop cmp xchg adc rex.WRXB mov pushq mov (bad) outsl mov rex.WRXB imul ja rcll rex.WB sahf xchg popfq movabs scas (bad) fcoms je shll jns rex.R rex.W callq imul jne xchg jb mov outsb adc icebp xlat iret ja mov fs cmc out (bad) jno imull xchg add or sti jrcxz es adc rclb cmc cld adc xchg jg sub movabs jae mov xchg add jle (bad) and insb in xor jne and out jb jl fisubr mov pop (bad) rclb and (bad) out iret mov lea (bad) lret rex.WRB cwtl out sub or cltd sub jg mov cmp mov lods (bad) lret cmc (bad) js or push std loopne mov addr32 clc jge add xchg rex.WRX (bad) out (bad) mov xchg loope fsubl xchg (bad) fucomp mov pushfq test lea rex.RXB retq xchg mov js mov ss rorl cld out (bad) push mov mov cmp in divl xchg in add cmp lock scas mov retq mov mov (bad) loopne push ja imul xchg rex.RXB cli rex.WRXB or jns mov xchg mov xor mov (bad) xchg (bad) negb rex.RX xchg xor in pop xchg icebp (bad) mov rex.B (bad) movslq pop (bad) (bad) outsb flds cmp xchg fcoms xor repnz cmpsb push cmp rorb lret nop (bad) out cltd sbb (bad) repnz sub push rex.RXB stos cwtl (bad) retq subl (bad) pop mov adc sbb push fdivrl xor xor xor sbb jle jae cmp xchg test pop (bad) xchg cs xor es mov lea std mov jmp outsb or mov loope push (bad) lret adc xchg out cli scas icebp rex.WRB in mov sub xchg mov negb xlat and jno xchg sub sbb movslq loope out sti cld xchg lock test movsl jmpq xor jnp stc pop loop mov and leaveq pop rex.RXB jg cwtl sbb or sbb fwait sbb (bad) jo cmpb adc sub fsubs cli and adc movabs (bad) xchg cmp rex pushq pop mov lea xor mov adc cwtl (bad) test ss int pop cli rex.WRX sbb xor jnp scas mov nop add movabs xchg pop jne jrcxz (bad) mov sub callq data16 (bad) adc lret or test rex.WX (bad) fistp pop js mov (bad) sbb imul sub out mov mov adc int3 mov pushq lret jmp test fisub (bad) rex.WR imul outsl std insl lock loopne xchg adc xchg lods cmp sbb fadd (bad) fs fs fistpl outsl (bad) (bad) pushq lea outsl mov rex.WRB pop push sbb adc test movl movabs scas cmpsl xchg or and fiadd rex.WRB mov in loopne ja in xor lahf shlb (bad) sarb shlq packuswb clc (bad) xchg pop rex.RXB jbe and (bad) pop sahf scas and pushq mov outsb xor jmp pop jnp (bad) (bad) xchg enterq mov lods cmp stos cltd (bad) pop push jg,pn jmp or rex.WXB rex.RXB (bad) rex.X mov sub push (bad) pushq addr32 negb mov cltd jg icebp pushq (bad) adc adc imul nop mov test cmp rex.XB push cmp js lock pushq outsl push pop es imul and or add out adc mov and adc int nop mov repnz (bad) cld mov out clc (bad) popfq rex.WRXB adc shrl push add pop fstpt push jg xchg and fdivr jmpq mov cmpsb push xor shr and cltd add sbbb mov out push jl and sahf jo xor lock (bad) sbb lea sahf push mov cmpsl movslq (bad) gs rcll sti and push xchg adc push (bad) xlat (bad) jne pop stos out (bad) xor jmpq cmp rex.R rex.WRXB (bad) (bad) push cmp nop rex.WXB cltq std retq adc sub add nop mov cmp or repz rex.XB mov add fstl movslq mov mov (bad) rex.WX movsb sub add xchg rolb adc movabs test in xchg mov rex.RXB rex.WRX movabs lods add and rex.WB (bad) mov lahf ja mov (bad) loop (bad) jmpq insl jae pop push repz rex.WX xchg es add cld jae std jae ficom iret mov xor in rex.R xchg movabs mov (bad) popfq test lods std pop jo and cmpsl (bad) sbb fstl (bad) in cmp and movsb icebp xchg pop or callq pushfq mov sub jo cmp nop (bad) xchg hlt cli ja rex.RXB xchg (bad) xor adc iret rorb cli mov xchg rcrl cltd (bad) and pop adc push or rex.WX movslq imul xorl mov rex.WRXB pop cmpsb adc shll add pop xor pushq mov xchg add mov xor jl retq xchg mov stos (bad) (bad) nop adc adc loop data16 add jnp insb (bad) stc pushfq scas and xchg retq mov jg nop imul in xchg xchg (bad) cli cli (bad) (bad) packssdw add mov push (bad) insl mov add out pop mov insl (bad) fs mov jae test test xchg (bad) sbb repz xchg (bad) (bad) add sbb lods (bad) mov lret pushq pop xlat cld (bad) xchg mov fs add jrcxz movabs (bad) pushfq shr jmp add jge jge mov out cwtl popfq sbb rex (bad) sbb sbb rex.WX rex.XB (bad) mov out (bad) sbb jo add rex.WR ds ja jb lret xlat (bad) mov nop (bad) lret andb pop insl movslq rex.WRXB test test out add push mov je (bad) mov pushfq sbb mov mov in push fisubr (bad) in enterq roll out je rex.RXB sbb int3 in popfq lock (bad) pop or sbb rcpps adc sub add xor push mov (bad) ja mov xchg (bad) pop enterq (bad) jo mov cmp push mov insl (bad) pushq test rcr mov rex.WX sub xchg or push fwait add (bad) jbe rcrl (bad) adc (bad) and add jnp xor fdivs sti (bad) lahf lahf cltd push outsl (bad) lock fs fistpll adc imul (bad) (bad) mov movsl mov pop movabs in ss movabs js and jmpq lea stos mov mov cmp or rex.WX mov iret iret movsl sarb xor gs nop xor jo (bad) movslq and adc sarl (bad) outsb loope adc fcompl outsl or xor jo cmp out jbe mov (bad) movsb mov jge xchg xchg pushfq cwtl sbb add scas and pminub movabs jb jb xor rcll add sbb js cmp out (bad) and jg xchg callq xchg and movslq incl mov adc xchg mov xchg mov sti test callq (bad) movsb fimull push mov icebp jmpq cwtl jnp mov xchg repz push sti shlb (bad) nop xchg mov fidivl ja movslq mov (bad) bndldx shrl mov sbb add (bad) mov int3 (bad) repnz pop and cltd and xchg xchg mov movslq (bad) std pop in loopne out pushq mov gs jmp pop xor rex.WRX std rcrl xor sti (bad) or xor (bad) sbb imul hlt jne or (bad) xor retq mov (bad) enterq (bad) mov sar (bad) out stos (bad) (bad) repz movabs (bad) retq (bad) jge pushq rex.WRX cmp insb rcr stos or fidivr cli lret cmpsl movsb sub jns sub stc (bad) hlt rex.WXB orl gs retq sarb pop (bad) (bad) xchg (bad) or or cmpsl loop nop movaps retq stc rcrb cltd scas mov cmp cmp fist nop mov (bad) xchg mov sti (bad) test push movabs rex.RX stc or ja rex.WRB rex.X rex mov push jge sbb cmp xchg (bad) nop (bad) (bad) lret pushq movabs retq icebp and shrl cmp loope push ror add sub mov pushq fildl (bad) movabs jp jno adc lret int (bad) jae in (bad) jge pop scas popfq xchg fwait (bad) (bad) rex.WRX add fbld out add je in cmp xor xchg rex.WRX (bad) (bad) (bad) mov sbb mov pop fcoml sub retq pop and rex.WX pushfq rex.RXB jne pop movabs fwait and popfq jne jae sub push outsb (bad) xchg xchg (bad) mov add movslq mov retq mov xchg (bad) mulb andl callq icebp sbb mov push loop mov xor pushfq subb iret xchg (bad) xchg mov jl mov retq pop nop sbb mov gs jle (bad) sbb test mov rex.WX int pop and (bad) mov pop negl fistl (bad) xchg xor repnz loop (bad) movabs push and fsts (bad) rex.RXB rex.WRX pushq rex.XB xchg xor lods (bad) mov rolb adc (bad) cld popfq xor (bad) rex.WB lods int rex.WRXB roll pushfq fs push adc lods lods xchg adc mov or shrl (bad) cld je xchg mov xor adc jp xor leaveq adc jae mov in imull jns cmp push (bad) xchg sub cwtl (bad) out (bad) clc movabs sahf pop je movabs xchg nop in sbb xchg sti xchg push cmp ss xor and (bad) rex.XB adc jle lock push pextrw mov (bad) cwtl pop add rex.RX fistp movsl cmp push in cwtl (bad) pushq sbb jno sub (bad) push stos lea (bad) data16 xchg or push data16 stos jmp jne cli pushq mov adc mov sbb or leaveq ds retq stos mov (bad) mov jmp (bad) (bad) jbe mov pop mov (bad) cvtps2pi adc test movsb pushq imul test mov (bad) pop pop jbe rex.RX mov in jbe and sbb mov push (bad) test xchg mov pop cmp scas mov cmp imul pushq rex.RX pushfq lret (bad) and cmp out and rex.WXB mov (bad) and jne (bad) adc and jmpq or jp outsl pop jno rex.X and push scas add push retq cmp (bad) (bad) sti outsl mov cmpsl xor jge sub test lods outsl add je movsl mov push js pop jmp (bad) out rex.WR xchg xor stc (bad) pop in cmp jmpq rorb pop sahf jnp pop mov psrld insb outsb movslq add rex or in rex.B faddp jbe movsb rex.RXB and xchg movabs rex.WRXB rex.WR (bad) in scas pushq add adc or sbb rcrl retq sbb mov ja push std mov fmuls rex.RXB sahf mov (bad) fsubrl insl in (bad) or jne sbb movsl (bad) mov outsl (bad) pop rex.XB (bad) (bad) pop (bad) sbb (bad) (bad) jl rex.X fs cmp sub mov add jns loop (bad) cmc fucomip in (bad) cmp ss mov jno adc xchg xchg and je (bad) jg js (bad) adc (bad) fiadd and or data16 mov and xchg sub gs jg rex jbe (bad) push insl lret jmp or pushfq jo cmp sub mov pushq (bad) movabs sub out out jnp (bad) movabs push pop outsb (bad) adc (bad) and or (bad) cmp push popfq enterq rex.W fwait adc mov outsl mov xchg push cmp jle push jne sub sub sbb outsl sbb icebp (bad) mov (bad) mov callq rex.RB addr32 adc adcb xor pop jrcxz xchg sti imull movsb pushfq push sarb or stos sub (bad) cmpsb rex.R sbb and rclb mov (bad) test mov rex.W fwait nop lret sbb xchg xchg outsb (bad) icebp (bad) rcll xchg (bad) jae subl xchg roll lahf (bad) pushfq (bad) (bad) subb out or (bad) mov (bad) mov rex.RX (bad) movabs pushfq in or movabs test xchg cmp lret sahf pop movsb loop add cmpsl mov cmp es pop mov fstps scas sub jmp mov mov loopne mov in adc push xchg xor rex.XB push xchg ss (bad) cmpb out push or xchg rex.WX rex.WXB shrb lret push xchg adc jb sahf lods cmc cmp js push (bad) (bad) (bad) pop cld xchg movabs jp (bad) cmp (bad) sub pop sbb mov cmpsl imul mov xchg cmp mov retq (bad) pushfq clc pop add cli xchg cmpsb sbb imul and fsubp jb sahf or add outsl jg lods sets pop sbb xor pop stos outsb and cmpsb rex.WRB sbb andl add cltd fisttpll (bad) xor imul add mov xchg pop fcomps (bad) jne sub lahf (bad) rex.WRX shr xchg mull mov sbb sub xchg lea (bad) adc hlt mov add es mov (bad) popfq cmp xchg jmp out imul mov rex.X xchg (bad) push (bad) xor jmpq xor rex.WB cmp xchg insl sbb loopne fwait sub js rex.WXB jne out jl cmpsl jbe mov clc rex.WRB add addr32 movabs pop jne rex.W cli int push (bad) movabs xchg jrcxz insb or or lock (bad) cmp shr (bad) cmpsb int jge jns pushfq (bad) movabs jne xchg rex.WB adc push jnp rex.RX pop outsb movabs rex.WRB jrcxz out or xchg mov movabs add lret shrl pop adc je js jo rex.WB (bad) pop insb xchg rex.RXB mov cmpb xchg (bad) mov sub mov mov pop (bad) sahf stc test mov sbbl fs rorl (bad) xchg rex.WRXB rex.WB rex.RX xor cmp mov mov push movabs out in imul add sub push add (bad) stos mov xchg cmp cmpsb clc movabs mull cli test adc xchg mov add sub test loopne sahf loope (bad) adc (bad) fwait addr32 xor (bad) cmpb out xchg (bad) xchg data16 enterq (bad) xchg lcall mov jns xlat sub je push cld pop (bad) xchg mov and xchg add cmp lods (bad) (bad) rex rex.WB push xor xchg rex.RXB ss (bad) fisub xor in xchg push mov in mov jns js (bad) lahf rex.RXB int3 cmp and pushfq stc (bad) (bad) sbb (bad) movhps jge out sub add mov movabs push xchg lods rol mov lret movabs mov xchg callq fucom cld pushfq test xchg out sahf and cld pushq mov cltd jl sahf movabs sbb mov rex.RXB push jl rex.RXB sahf out hlt push cmp or (bad) sahf mov pushfq subb lret mov pop (bad) fldt mov insl in jno cmpsl jnp subl xor (bad) jl sub pop gs outsl xlat or add ror xchg mov nop adc cli fwait adc in movslq (bad) callq pop xchg jno out je scas xchg mov and movabs rex.RXB push (bad) (bad) (bad) stc sti jmpq mov sarb mov or jge enterq adc scas outsl div rorl notl imul imul jns rex.RX stos and mov jno or sbb and adc mov cmp insl push test (bad) sahf push xor mov callq push cmp jp loope nop (bad) icebp addr32 rex.RB stos add lods rex.WRB mov lea mov pop (bad) mov (bad) mov adc xlat rex.WRB retq (bad) adc scas xchg jrcxz xchg nop sbb rex.RX (bad) outsl jne push jbe (bad) push int3 ss (bad) push adc rorb loopne (bad) mov cmp pop test rex.RB sbb (bad) (bad) rex.X (bad) rex.X shlb sbb (bad) (bad) rorl (bad) pushq fs and (bad) int3 sub icebp sbb xchg xchg fs (bad) cwtl sahf insl push mov and and movsl cmpsl push xchg nop sbb clc jae enterq out xchg push xchg (bad) imul rex.RX (bad) cmp pop rex.WXB shlb or add ficomp fdivs rex.WRXB loop jg xor insl (bad) hlt lahf (bad) divb es callq push sub fldl xchg in add add xchg sub sub mov mov add xchg mov cmp repnz jne jns cltd xchg xchg jrcxz rex.WR mov or shlb xor movabs loop outsb mov sub out pop xchg js test sub cmp pop cltd rex.R xchg movabs sahf sbb rex.WRB xlat addr32 incl (bad) jne xchg sub xchg test (bad) cwtl mov adc movabs cmpsl xchg jmpq xchg pushfq movsb or shrb cld push xchg stos (bad) pop sub shrb xchg out pop (bad) mov (bad) lods sahf rex.RXB movslq pop (bad) sti add callq cltd icebp mov and scas (bad) push and xlat jge pushfq loope cwtl popfq (bad) cld cmp xlat and movslq rex.W sub lret cmc pop mov (bad) testb sbb callq (bad) push add lods sbb movsb cmp xchg (bad) callq pop fwait or mov sbb nop fisub lods repz xchg movabs jmp mov punpcklwd rcrb jmp cwtl (bad) clc (bad) in (bad) xor jb ja data16 (bad) (bad) xchg hlt pop sarb xchg add (bad) lret sub clc xchg cld pushfq movsl mov addr32 (bad) enterq fiadd xchg in rorb and rex.RX enterq test je cmpsl rex (bad) insb leaveq negl xchg (bad) xor rex.WX (bad) fstl icebp cmp mov sub xchg movslq fldenv mov cmpsl (bad) (bad) xlat add xchg xchg je pushfq jrcxz rex.WRXB scas sbb enterq (bad) sbb loope sub ja out out rex.R negl jl movslq lods xchg addl pop leaveq jrcxz (bad) rex (bad) jge adc mov pop pop (bad) repz cmp fimull iret or out and pop ja cmpsb pop addr32 xchg mov jnp movsl repz (bad) cmpsl mov movsb cmp jo idivl add imull (bad) ja (bad) (bad) jp sti imul mov xor mov (bad) or mov rex.WB jb fsubrs (bad) retq cmp outsb sbbl jge mov mov xchg pop pushq jns sub pushq shrb repz mov cmp adc mov and fimull (bad) outsl rex.XB adc (bad) out (bad) fcompl test mov and (bad) movslq push rex.B rex.WRXB enterq mov add xchg push pushq (bad) push or jge test fstl retq (bad) and and outsb rorl popfq (bad) jmpq xor jg test jne and push data16 insl (bad) testl mov sub rorl leaveq in mov (bad) mov or jmpq (bad) (bad) add push mov je xchg fistpl insb (bad) (bad) icebp retq fsubr lea push add jg jnp push xchg sbbb (bad) mov data16 push nop jae sahf movsb xchg cmp (bad) jmp (bad) shrb xor xchg data16 xchg rex.R insb cwtl lock mov pop (bad) sub movabs (bad) jp cmp fsts je cmp (bad) (bad) add int3 jrcxz adcb cmc rex movsl or rex.WRXB and (bad) mov cli jnp xchg adc mov (bad) sub cmp je (bad) pop mov jmpq cmp jg outsl pushfq (bad) ss mov out and (bad) xor out sbb hlt jrcxz rex.WRXB rex.WX xor and fidiv jmpq adc xchg notb xchg jg (bad) mov xchg cmpsb adc sub xchg (bad) cmp push xchg (bad) xor and or xor cwtl sub mov and xchg xchg (bad) mov icebp (bad) jrcxz sahf rorl add (bad) rex.RB push xor mov push cwtl stos in fwait xchg (bad) icebp or mov movabs (bad) xchg cli jno cmpsb mov mov adc lret (bad) rex.WB movabs xor lret es lock loop mov sub adc sub (bad) not fistl mov cmpl cmpxchg cmpsl xchg cld rex.WRXB sbb rex.WB enterq jae xchg fmulp loop sbb outsl seta bnd cmpsb xchg out notl cmpsl add movabs rex.RX enterq sub outsb (bad) lods or jbe lcall (bad) (bad) xchg cmp rex.RX rclb repnz adc sub cmp nop push and sbb pop (bad) ja xchg mov and subl je and retq out in cmp retq jp (bad) cld imul test and xchg mov jle stc (bad) fldl imul jg sbbl fsubl xchg adc xchg rex.WR rex.WRXB rex.WXB test adc pop sar in mov loop shr or lods (bad) xor loopne cwtl cmp (bad) jl iret pop (bad) lock subl in cli pop cwtl xor lret rex.WRB test js negl fistl in (bad) (bad) add adcl loope popfq add xor sbb (bad) rex.WX (bad) mov rol rex.WX shll rex.RXB (bad) cmpsl jmpq in rolb movabs notl mov add test pushq ss out (bad) push mov mov lret cwtl out jp insb xchg or outsb ficom imul xchg adcl xor mov or lret jl movabs imul cmp add jae jg mov xchg xchg xchg fs ja (bad) rex.RXB ficoml fidivr (bad) pop sahf cmp je rcl mov xchg sub pop (bad) insl sbb loopne fwait sub (bad) xlat cmp xchg (bad) test cltd push movabs add (bad) gs rex.WB loop xchg add mov seta (bad) data16 roll and or xor mov insl or (bad) adc rex.X jbe rorl (bad) or xor (bad) xchg add (bad) xchg rorl add pop or rex.WR (bad) (bad) mov cli rex.RXB pushq xchg xchg jbe movsb in sub mov sub xchg pop movsl outsb sub js jbe push je jb rex.WXB (bad) xchg std (bad) jb (bad) sub lret xchg or or (bad) jns movabs shlb sahf divl data16 (bad) loopne push (bad) cs test pop (bad) callq nop jo (bad) cli sahf jl push rcrb sti movslq fisubrl xor push fs shrb adc and rol jp (bad) xorl cwtl out cmpsl (bad) pushq (bad) jg xor mov int3 rex.RXB rex.WX stc push pop (bad) ja xor rex push pushq scas adc (bad) mov cwtl (bad) lods (bad) (bad) (bad) (bad) mov add xchg insl mov out xchg gs rex.RXB xchg cmp rorl (bad) mov xchg sub test add jrcxz xchg sbb fnclex clc mov mov retq jae mov xchg popfq mov xchg mov (bad) sahf add push cmp push (bad) lods rorl add nop xchg addr32 sbb (bad) outsl (bad) jmp ss movsb add mov je pushfq (bad) mov sub outsb (bad) fcompl (bad) loop mov cmpl idivl sbb (bad) fs cmp mov sbb rex.RB pushq jge ja std xchg cwtl and xchg xor pushq movabs imul push out xchg xchg (bad) cli lock sbb sahf rex.RB je sarb add pop jle add (bad) sub (bad) in adc mov movabs (bad) mov (bad) loopne rex.RX loop (bad) and (bad) or sbb cmc pop js sbb xchg mov sbb (bad) sarb xchg xchg (bad) or movabs jl xchg push (bad) mov and (bad) mov xchg shrl shlb andb pushfq push (bad) mov rcrb (bad) (bad) rex.WXB mov rex.B in xchg (bad) sbb movabs or and mov es jae rex.WXB and out jae (bad) divl int3 xchg movabs jns mov je pushq (bad) lock and imul mov rex.RXB (bad) cwtl and rex.W xor cmp imul leaveq je outsl or sub loopne (bad) sbb cld (bad) imul int cmp push int3 movabs mov movabs loopne add lahf sarl jg (bad) movabs out cli push jo jbe push xchg pop cwtl xchg and adcb mov xchg rex.WRB add lahf and xchg sti addl jrcxz gs fstps sahf jmpq pop (bad) cmpsl add or xchg outsb mov (bad) mov pop addr32 jmpq jns adc (bad) mov jno cs repz or movabs movabs out gs mov fnstcw sbb pushq mov xor loop (bad) (bad) xchg divb or rex.RXB addr32 sbbl sub movabs fwait jne xchg test shrb mov rex.B jg xchg xchg pop mov and int3 movabs movabs loop jnp xchg add jrcxz xchg cmp (bad) movsl out sahf cmc sub in sahf (bad) rcl (bad) cld and stos lea jb (bad) hlt mov and jg mov xchg xor push (bad) sbb add pushq fisubr test (bad) jne icebp sub sbb callq cmpsl pushfq out (bad) out xchg cli pushq fldenv cmp or mov (bad) fwait rcl movabs (bad) xchg (bad) cli cwtl outsb (bad) stos adc xchg xchg scas xor jnp lods or pop sbb lea sti (bad) shll cltd mov imul push (bad) jl mov jnp rex.WX (bad) nop and ja rex.RX xchg pop jbe and cmp push addl lea movabs pushq fwait (bad) out add fidiv insl and and mov (bad) pop (bad) xchg mov data16 iret idivl cmp add (bad) rex.RX shrl fildl jle sub icebp cmp test pcmpgtd push movslq add (bad) (bad) pushfq movabs rex.XB rex.RXB or faddl (bad) pushq cmpsl imul sahf callq (bad) (bad) lock enterq add (bad) (bad) or rex.WR pop push nop (bad) push retq (bad) jg cmp mov (bad) pushw fidivr lock rcrl mov pushq pushq sbb enterq mov xor int jb outsb mov cltd (bad) xor jnp mov lea rex.RX (bad) push rex.WB xchg popfq (bad) mov es ja sub xchg cmp mov xchg (bad) js imul cltd (bad) cli test adc cmpsl movsb (bad) cmp stc or add mov jae jnp jo data16 (bad) es enterq scas shlb sbb jne ja movslq test rex.X ds rcrb lods (bad) ja sbb and addr32 jge (bad) or mov (bad) (bad) movabs sub movabs (bad) ror push push rex.WB adc xchg movl (bad) repnz cmp seta fwait push cld flds rex.X cmp leaveq iret imul stos xchg (bad) sbb sbb xchg cmpl iret movabs (bad) push sbb xor nop addr32 icebp jo pushfq xchg mov pop sub mov scas xor setl mov lret jne rex.W scas callq (bad) xor push rcrb test repnz callq lahf mov rex.WR lret pop movabs fwait (bad) jae xlat outsb xor pushq movabs in ja rex.WR cmp rex pushfq std jbe outsb cmp cli jnp cwtl pop insb sahf mov (bad) rex.WRB and push and push xor mov xlat sub push hlt mov movabs (bad) cmp mov jae xchg add (bad) jne xchg roll (bad) mov mov push fs xchg rex.WRX xchg (bad) data16 mov gs cmp push and push adc cmc fstl (bad) repz xchg ja xor sbb jrcxz mov rex.WX jns rex.WRXB sahf rcrl insb jne movsb ja retq add (bad) cmp mov jno movabs jle mov sbb cmp jge cwtl xchg cmc gs jl mov cmp xlat test or adc and or xchg testl rex.WRX sarb rex mov xchg hlt (bad) cmpsb mov (bad) rex.W mov int js mov lret outsl xchg pop cmc or cwtl clc rex.RB test sahf imul rex.WXB xchg rcrb mov xchg (bad) out (bad) mov outsl loope test sbb rex.WRX xchg rorl and cltd rex pop xor xchg fdivr lahf scas std (bad) mov fnop sub (bad) sbb movabs sbb mov out out movabs mov add xchg cmp push outsl movslq mov je cmpsl xchg test rex.RXB mov pushfq mov movabs rolb push int3 (bad) pop (bad) pop insl in cmpl and mov (bad) push rex.WX repnz (bad) nop dec add and (bad) mov notl push and cmp lahf jg (bad) lret add (bad) jle (bad) (bad) cmpsl cmp callq pop movabs rex.R jnp jrcxz scas lods jnp and out fwait or rcl rolb insb (bad) xchg mov (bad) cltd enterq addr32 (bad) and xchg shll movsb (bad) decl (bad) mov xchg popfq movsl mov sub sub pop xchg loope loopne rex.XB movsl mov (bad) movabs fmul lahf ljmp sbb cmp rclb cmp rex.RB xchg insb pop negl pushfq in cld out (bad) add sub lods (bad) and add popfq cli jmp outsl and mov mov (bad) cmc mov xchg out divl in lods nop adc loopne rcll adc or cmpsl (bad) es out push (bad) xor outsb lahf test jae xchg shll in pop jnp (bad) and (bad) cmp cwtl outsl rex.WB (bad) pop es pushfq (bad) pushq movsl cmpsb rex.WRX add outsb (bad) fcom pop insl jo add xchg add iret (bad) out rex.RX insb sbb rex.WXB sbb jge int pop popq mov pushq callq jns adc (bad) jbe jo add fdivp cmp or sarb (bad) and sub mov (bad) or imul imul (bad) jbe rcll adc push rex.XB addl pop xchg xchg test nop out cmp (bad) xchg std mov (bad) sub jl cmp jmp xchg jrcxz mov pushfq insb pushfq repz movsl orl ja ds scas hlt mov xor xchg xor in and add sbb loop out jnp cs out cwtl rex.WB rex.WR loope and add pop mov or (bad) xsha256 cmpsb xchg adc pop cmpsl rex.RB rex.RB lret rex.XB xchg or (bad) roll out or enterq fisubr (bad) mov imul fstps pop mov rorb pushfq lock jg xchg std movslq xchg mov xchg pop jo callq cmp insb pushq ljmp rex.WRB cmc pop imul pop mov gs nop adc sub (bad) xchg shrl (bad) rex.W xlat pushq (bad) in sar (bad) addb (bad) ficom cmp setno rex.RX movabs adc outsb rclb outsl sbb or (bad) lea jnp push (bad) cltd jle mov retq pop callq jns (bad) scas xor mov fcmovnbe add rex.WB pop (bad) cmp jo mov rex.RB lock nop (bad) loop xchg pushfq rex.RXB sub or xchg xchg mov sahf cwtl retq (bad) cmp (bad) jg adc shll pushq xchg sbb push lods xchg lcall mov xchg pop loop sbb insl pop rex.R rex.WXB xchg pushq xchg jl sbb push xchg stc jb,pt (bad) cmp (bad) push mov and fidiv add (bad) (bad) (bad) sahf (bad) (bad) je mov mov (bad) mov (bad) neg xlat pushq scas fwait add lods cwtl xchg push fwait (bad) mov push mov jmp rex.WRB out in iret imul mov (bad) (bad) movl loop scas gs rolb xchg push fcomps jg roll stos callq jg or (bad) xchg pop gs out cld pushq push add (bad) (bad) mov (bad) and mov xchg lea jnp sub sbbl cmpsb loop xchg imul sub push mov (bad) insl and pop (bad) adc cmp sub rex.WRXB xchg xchg pop fs xlat movsl imul sbb mov popfq nop adc push ja sbb mov rex.WRB out shrb rex.R rex.WRXB (bad) orl (bad) (bad) sbb cmc xchg fimul (bad) outsl pop (bad) rex.XB xchg ja ja xchg adc pushfq mov lock rex.WXB xchg outsb sub and pop jle shlb seta repnz (bad) in or rcr test rex.WX rex.WR xchg loope xchg xchg (bad) pop int3 and mov add rex.XB sarl movsl shll xchg fbstp (bad) jb push sub mov fnstenv rclb push clc test stos mov sbb rex.X loop jge movsb xchg sbb lret nop movabs rex.WRB rex.RB pop mov jmp (bad) xor (bad) xchg push rex.WX retq rclb (bad) jg movslq and jmpq sbb (bad) add xchg (bad) addr32 notb mov movabs jae retq xchg jge movabs mov jae fiadd in jg addr32 push push imul in icebp jmpq (bad) mov xchg movabs insb xorl in push sti popq gs xchg and icebp lahf pop shrl pushfq sub add mov xchg mov pushq mov imul movabs xchg xor rex.WXB rex.WRXB pop (bad) int3 cltd loope roll (bad) hlt fisttpll movb incb icebp xchg (bad) rex.WXB rex.B xchg (bad) sub add or sub xchg xlat mov rex.RXB gs data16 leaveq mov fs (bad) add xorl pop pop (bad) es or movslq jrcxz xlat lea (bad) movabs cmp fisub push and rex.WRX add insl pop jl sbb push (bad) push jae xchg data16 jns fucom (bad) sub adc push mov (bad) cld rex.WR cs test jmp rex.WRXB fdivr xchg xchg loope push in sub and jge rex.RX push mov lods sbb out out rex.WR sub cmp movsb (bad) pop rex.RB loop insb xchg cmpsl and movabs test fs mov shr neg cwtl loopne mov movslq xchg xchg mov rex.RXB lods xchg pop (bad) push or sub sahf add in movabs mov jmpq sbb (bad) test adc sub ss movabs pop rex.WX xorb retq movslq ss in icebp nop fsub rex.WRXB movabs gs add push scas (bad) ja sbb (bad) int xchg cltd or leaveq movsl (bad) pop out repnz xchg push out popfq (bad) jp notl xchg xchg rex.WRX hlt xchg mov xchg push (bad) cwtl (bad) imul cltd (bad) rex.WX movabs add ja lahf rex.WRB movabs rcrl jge xchg (bad) lahf rex.RX (bad) stos rcl cmp sub lea jne jb out sbb push xchg cs pop xor xor push movabs mov and subl and jg jp movabs clc retq lea out nop add scas test out fmull cwtl pop push movsl (bad) addr32 cmp jmp (bad) stos (bad) movsb leaveq cltd movabs rex.WXB xchg jg add gs scas (bad) decl rex.W ds fisub lret and sbb (bad) mov push (bad) icebp sahf (bad) cwtl punpckldq lret sahf repnz sbb add out in test in push mov xor (bad) sahf stc (bad) movabs (bad) mov rex rex.WB outsl cmpl shll sbb cmp insl xchg stc in fisttp xchg cli xchg cmp mov in sti mov fwait jg cmp callq sahf add leaveq mov add mov add rex.WX pushq pop pop rex.WRX jmpq and mov pop movsb jp scas xchg mov (bad) mov xchg (bad) cmpsb pop stc mov lahf lock out cltd cmpsb jns mov xor jle mov cld (bad) movabs (bad) pop and fsubrl rex.B rex.WRB ficomp rex.WXB (bad) jge (bad) stc sub cmpsl decb and (bad) fdivl retq sub loopne iret test stc (bad) insb out addr32 xchg neg cmp rex.WR (bad) mov (bad) out mov mov lret jmpq cmp (bad) (bad) movsl std shrb xchg insb es js jb cltd (bad) (bad) cld outsw lods xchg (bad) ficom pushfq and repz jb nop sahf and rex.WRX (bad) int stos cmp xchg add or rex.XB leaveq notb (bad) gs xchg movslq (bad) (bad) test lods sbb pop int loop ja xchg jnp sti xchg mov jp cltd lahf mov xchg rex.W add xchg mulb cmp xchg outsb xorl cmc (bad) mov fbstp cli xchg mov jrcxz rex.RXB fnstcw (bad) (bad) imul adc rex.WX sahf mov (bad) or jbe out fs out (bad) shl jrcxz cltd rcrl cltd sti adc (bad) pushfq xor (bad) cld adc ds mov adc out (bad) xchg cmp jbe or (bad) or movabs or push movabs stos cmp xchg and insl pop push ror je mov mov je mov fsts fnstenv rex.WXB rex.WRXB (bad) push lea (bad) ficom imull mov jnp adc jbe or sbb xor sbb movabs loope mov lret mov test adc xchg pop sbb jns pop (bad) mov jg out std subb adcb (bad) lea (bad) nop add rex.WX xor mov in in xchg (bad) adc adc (bad) (bad) lret movsl jle int (bad) (bad) add mov out loope movabs mov xlat rex.WX xchg cmp fidiv ficompl sub (bad) mov adc in enterq mov movsl (bad) rex.B outsl fs retq mov fbstp push rex.WRX imul test mov push clc iret xor sbb pop ja mov incl rex.WRB add imul pop scas rex.RB adc fisub lock scas sahf jle cmp jb and (bad) and jns (bad) pushq xchg je sub push pop mov rex.RXB int movabs cli cmp xor mov icebp (bad) outsl sbb (bad) (bad) (bad) push (bad) pop adc xchg jbe in pop (bad) (bad) and rex.RX addr32 or pushq mov out mov mov andl push rcrb in jno pushfq and xchg mov ficompl sub cmp jmpq sbb data16 or fisubr jmpq and pop loope scas rex.RX out (bad) push mov nop add cmp rclb mov and movsb xor repz push repnz int jl loope int (bad) push mov (bad) outsb jmp pushq cld or push xor fistp or ja mov xchg jbe xlat movslq pop (bad) cmc xor test fbstp xchg sub (bad) pop (bad) scas lret rolb gs push (bad) lret idivl lock scas add leaveq mov xchg push movabs rex.RXB orb xchg xchg xchg pop and (bad) pushq fdivl emms push adc mov sbb cmp xchg (bad) test and xchg sub jo insl cmp pushfq pushq cmp ja lock mov ss sub (bad) mov int3 loop pushq scas mov xchg (bad) mov in xor xchg xchg in callq loop out xchg (bad) mov (bad) sahf stos (bad) movsb xchg sub movabs pause xchg in (bad) adc (bad) jmp (bad) rex.WXB rex.RX rex.B mov rex.R movabs test and jrcxz,pt xor adc add (bad) xor sbb insb in xchg (bad) roll (bad) pushq jno sbb movsb xor push (bad) cmp cwtl mov loope rex.WXB rex.WRX retq cld seta test xchg sbb mov xchg xchg xlat lods addl rex.R fxtract xchg pop sbb xchg loop or xchg xchg jne mov cli lods or rex.RX lods jno (bad) rex rex.WRXB xor in (bad) cmp pushfq sbb xor sahf mov lret (bad) mov pop fwait enterq leaveq test sbbl repz jrcxz (bad) or (bad) (bad) (bad) (bad) scas adc jle (bad) pop xchg lahf addr32 xchg (bad) movsb mov push data16 push sbb lock add xchg (bad) rex mov push nop rex.WRXB shrd movabs sub xchg mov sarl xlat rex.WX rex.WRXB lock rex.RX (bad) cmp test xchg movabs hlt push xchg jl sti sbb int3 xor (bad) adc retq jbe jl movsl jnp xchg sub add adc jns (bad) test rex.XB rex.R push cli in rex.B js mov or mov rex.WRXB fisubr scas mov push xlat pop xchg icebp sahf sbb lahf xchg repnz decl test (bad) (bad) movabs lea (bad) imul xchg popfq mov xchg shl jmp jp jno in pushfq cmp test movabs add pushfq pop xor lock scas iret cltd (bad) xchg test cmc rorb pop rex.WRXB rclb xchg adc push lret rcrb xchg jrcxz (bad) cmp adc repnz pushq xchg in sbb jae xchg test lods out (bad) (bad) nop lret insl xchg sahf mov cmpsb fcmovnbe mov cmpsl orb jns mov adc (bad) sahf mov sti rex.XB mull pushfq roll mov (bad) (bad) xlat lods adcl xor movabs (bad) sti (bad) addr32 fcomi xchg add rex.WRXB rex.R fs sbb gs xchg cltd scas jns fisubr jnp or xchg (bad) rex.B push or cltd (bad) push push (bad) movabs or xchg test (bad) xchg (bad) pop sub mov xlat je mov adcl cmc (bad) adcb pushfq popfq jnp nop xlat movabs sbb js movabs and xor lock jnp xchg imul lea nop (bad) pushfq (bad) cmp mov cmp mov scas mov (bad) popfq js clc xchg cwtl (bad) xlat add (bad) callq pushfq jne (bad) sahf sub mov xchg and cmp jo or xchg movabs rclb mov (bad) and jp jl sub sub cmp outsl pushq in xchg icebp incl negb sahf pop mov (bad) (bad) (bad) (bad) mov (bad) (bad) jmpq test sahf mov push imull (bad) and xchg fldt icebp nop xorb shrb sbb int push pushq lahf xor in mov sub xchg insl movabs sub ss push in out add or ficompl mov xchg (bad) lret movabs enterq in outsb jno (bad) xchg loope rex.R cmp stos xchg (bad) cmp scas pushfq xchg mov cli enterq rex.RB rcrl (bad) out (bad) loope rex.RX lret cmp and push xchg in shrb xchg test ds ja mov es (bad) lret (bad) stos or jmpq rex.RXB rex.WXB add cs push jg xchg add (bad) adc mov mov and mov rex.RXB fwait loop lods sti (bad) lods neg movabs sbb mov std nop nop cmp sub (bad) add mul rex.X (bad) mov (bad) fs (bad) sub in sti pushfq fucom push cmp hlt retq (bad) cwtl fist sbb rcrb jg adc hlt adc (bad) out ss xor rex.RXB (bad) jle in xchg cmp rex.WXB sbb xchg pop or and jae imul xchg jmpq es sub enterq jge rex.X imul xchg sbb pop gs xchg ja mov idivb or and (bad) (bad) pushfq mov out rex.XB iret rex.WRXB mov movabs (bad) pushfq out jnp test rex.WXB loop outsb (bad) outsl xlat jb in jmp xchg (bad) in popfq ja or xchg mov sti mov rex mov movabs pop fisttpll sub xchg jl rex.WXB pop gs add rex.W rex.WRX repnz rex.R jbe push outsb mov or jae ja mov xchg xchg jno fsubrp (bad) (bad) (bad) stos loope (bad) insb fsub fistpl and sbb fdivrl xor lods xchg jb enterq sub (bad) or mov xor push fdivrl add (bad) orb xchg jns (bad) cli adc xor hlt insb sub cmp fisub xor mov sahf mov (bad) repz ss sbb pop (bad) mov subl and or inc imul rex.RXB adc (bad) push leaveq movsl mov or cmp test and (bad) (bad) movabs xlat or pop cmp jbe or out xchg push (bad) mov mov fdivl sbb pop pop fistpll sahf add pop int (bad) leaveq rex.B rex rcll pushfq rex.W jae cmpsl cmc pushfq fdivl movsl pop push rex.WRXB cltd callq out in mov mov xchg icebp mov pushfq xlat xchg (bad) mov cmp xchg test sbb fisubrl int3 xchg sbbl rex.WR rex.WRX adc popfq or or fmuls and movslq fwait adc push xlat or (bad) sbb in (bad) mov adc fist lods pushq pop (bad) mov retq xor in xchg sbb or stos sbb pop fisubrl faddp test (bad) and insl cld pushfq mov adc (bad) test int sbb stos movabs cli (bad) insl lret (bad) (bad) enterq (bad) xchg sub ds jbe lods fs ja jns xchg sub and or adc cli pushfq jo test (bad) rclb mov jo out imul jnp out iret (bad) repnz (bad) in rcrl fwait decl xorb cwtl cmpsb mov xchg lods cmpsl add popfq cwtl (bad) flds (bad) or (bad) (bad) or xchg iret xorl or fldl mov (bad) enterq popfq out pop fwait and (bad) rcll (bad) fs idiv (bad) pushfq push cmc mov stos jnp popfq lea rex.WRXB mov adc int3 pop and pop push add clc (bad) sbb sahf out mov and xchg imul gs scas adc xchg insb pop out or js mov add add add js (bad) xlat rex.WXB shll cmp jb (bad) add mov mov enterq lea mov imul cmpsl rex.RB imul imull xchg pushfq jl rex.WRXB add cmp rex.WXB loopne push sbb jb jg jl out movabs xor rex.WB pop xlat xor rex.RXB mov xchg cmpsl stc jae retq stos xor xchg push adcl clc mov outsb rclb mov jne xor fs rex.R xchg mulb add (bad) jmp mov push (bad) out xchg lret sbb xor pop (bad) mov iret xchg mov mov adc mov fist mov xchg fsubp jmp (bad) (bad) (bad) xchg pop add rex.WRX icebp push xchg outsl divl (bad) sub lea (bad) stos add jge adcl callq movabs adc cmpsl repnz xchg movabs xchg xchg xor mov (bad) cld addr32 movabs xor and rex.WB es out jmp rex.RXB (bad) rex.WRXB fcoms loope sub xchg (bad) (bad) (bad) sahf add mov (bad) rex.WRB mov xor out xchg xchg jbe mov cmp pop cli (bad) (bad) movabs cld rex.WXB out outsb push imul lret (bad) rex.XB pushq stos mov fldenv mov and xchg stc xor scas lods (bad) fsubrl iret imul out rex.RXB loop jns sahf rcr cmp movabs xchg jg test mov js in xchg pop cmp jo scas xchg xor rex.X fisttp pop nop lret fmuls (bad) or pushw adc scas mov retq out xchg mov adc push mov xchg jmpq push sahf movslq (bad) fdivrl rex.XB movabs fdivrs (bad) cmpsb shrl (bad) rex.XB data16 push cwtl fsts (bad) enterq sbb or or mov test xchg push data16 sub sub (bad) add sbb cmp fiaddl push retq xchg (bad) (bad) movslq push cmpsl sub mov (bad) repz movsl popfq xor cmp test (bad) mov cli add rex.WR out adc xchg or repnz jno out pushfq xchg adc shrl (bad) jo pop mov or xchg jrcxz pop scas xchg insb mov mov adcb fiaddl cmpsl pushfq pushq or xchg sbb jns divl scas xchg xchg icebp add fistpl pushq or (bad) pop sar rclb (bad) sub jns sbb lea lcall repz rex.WX movsl sti or rclb (bad) movslq mov push xchg ficompl jmpq (bad) (bad) loopne jg fimull adc je (bad) stos (bad) jae (bad) or push xchg (bad) push rex.WX movabs in (bad) (bad) xchg or cltd jbe andb mov mov pop and jo xchg ror fdivrs xchg (bad) adc push out movsb in rex.WRB and jno sti shrl xchg callq out adc (bad) neg out sti xlat sahf cmp xchg imul mov repz es callq cmp and (bad) adc (bad) and std (bad) sub movabs jge pushq orb xlat (bad) or adc xchg mov jmpq rex.WRX mov or sbb rex.WX rex.X mov imul push jle push (bad) and test and (bad) popfq mov cwtl (bad) test rcrl sub rex.RX add cmp (bad) push xchg rex.WX mov xchg std pop sub add rex.WXB add lret jmpq xlat outsl jle imul xchg and (bad) jmpq icebp repz out cwtl mov rol lea (bad) sbb js rex.R rex.XB fwait (bad) movabs xchg movslq adc in (bad) in pushfq mov clc cmp outsb cmp xchg (bad) or and sar xchg or mov cltd xor mov xchg roll rex.WB fwait xchg sub stos lods (bad) imul (bad) xchg pop xchg popfq jl retq push clc addl sub xchg xchg (bad) fcmovnbe xchg in mov add sub (bad) movabs rex.WX loope repnz outsl xchg xlat (bad) clc push xor mov push addr32 test (bad) js icebp cld jo out scas lret xlat cltd data16 xchg (bad) outsl rex.X jo movabs pop mov fsubl enterq lods cmp adc rex.R clc xor (bad) xchg mov (bad) rex.WRB rex.WRX and mov push (bad) (bad) xchg (bad) cmp xorl fwait pop lods enterq std xlat sbb rorb mov xchg sahf hlt (bad) loopne test gs pushq jae (bad) add (bad) jg cmpsb cwtl sahf (bad) stc callq imul (bad) (bad) (bad) out (bad) xchg insl rex.WRXB xor (bad) rex.WRX sbb imul loop xchg add rex.RB rex.X mov test mov or xchg imul fisubl (bad) or pushfq std outsl leaveq movb xlat out lods cwtl sbb jo rex.W repnz (bad) or test rex.WXB xchg out adc test (bad) rex.WB mov jle in fs adc out or lods jnp (bad) sub adc outsl xor lods js scas ss sahf rex.RX mov sbb rcrl lret movslq fistpl (bad) push sarl pushfq mov jne (bad) imul mov jne sub (bad) (bad) hlt rex.WB (bad) fdivs (bad) mov mov enterq jle cld jno sub ss ss (bad) loopne or popfq jmp adc retq mov subl imul pushfq scas int3 (bad) jle cmp pushfq mov loopne xchg sbb adc (bad) (bad) (bad) jae (bad) scas mull (bad) (bad) (bad) add in mov je (bad) mov sbb mov jns mov cltd xor cmp (bad) adc mov lret push (bad) xor pushfq nop sbb pushq pushq sub test sbb test (bad) lods test movabs (bad) xor scas rex.RXB mov cltd jp enterq and push nop (bad) or jne (bad) push mov fs rex.X or (bad) (bad) fldl enterq int mov jg rclb gs clc iret mov xchg insl (bad) mov xlat gs (bad) insb int pop (bad) rex xchg movabs leaveq movslq std (bad) loope outsb (bad) fwait rex.WX jns (bad) (bad) rex pop add fldt mov fldl xor and out jo (bad) (bad) lods jp (bad) int3 (bad) jb sbb pop xchg xchg pushfq pushq add int sbb push movabs xlat callq jbe (bad) add and iret (bad) cmpsl retq mov (bad) cmp loope pop sbb cmpsb rex.WX jae jg es iret rclb scas sbb nop sbb shr stc (bad) xchg jb ss mov jp jne rorb xchg scas (bad) vshufps shll rex.WB xchg ja outsb mov xchg xor sub xchg rex.RX pushq jbe,pn (bad) loop and imulb xor (bad) (bad) and insb rex.R int3 adc jne movabs outsb adc xor xor int mov jge cmpsl (bad) mov sbb push retq in xlat insl sub xor adc loop nop xlat movsb rex.B repz xchg jb (bad) xchg or jnp sti cli (bad) insb (bad) rex.W xchg xchg mov mov in mov pushq (bad) movsl (bad) (bad) adc sub rex.RB testl cmpsl or mov (bad) rex.X or fistl add loop rcrl rex.XB fst (bad) xlat test icebp popfq test rex.B pushq mov imul enterq xor pop fisubrl nop loope pop jg lea jne cmp popfq pop add gs enterq rex.RXB std leaveq retq jge jbe outsl jbe sub insl nop adc mov es shlb in cmp xchg and fist (bad) ss cmc jl xchg sub or jnp xlat mov jg sbb jnp mov rex.RB pop push nop adc push (bad) cwtl cli enterq insl (bad) (bad) jmp je mov jne xchg jg sbb xchg scas (bad) and outsb mov out xchg outsl pop mov xchg sbb xor (bad) in sub gs (bad) and rex.RXB xchg fnstenv movabs fildl js (bad) rcll popfq pushfq cld xor fwait addb bnd cmp cs icebp mov adc in in xchg mov (bad) xor retq insb pop or sahf add iret addr32 jrcxz loope nop cmpsl push mov push cmpsl mov stos data16 jle sub fdivp clc in push xchg sbbb movabs gs (bad) xchg test cwtl mov xchg add cmp sahf decl sub movabs lock (bad) jnp xchg repz movsl cs pop scas (bad) mov rex.WXB andb iret leaveq cmp out add xchg xchg stos (bad) (bad) (bad) imul xchg sbb xor lret jp xchg mov in lcall int movabs xor xchg enterq push loop,pn xchg shr movabs xor andl pop cmp add mov loopne xchg scas pushfq xor and sahf cmp (bad) jo rex.WR cmp jae sbb test mov outsl jg jb adc rcll lea pop adc push and outsb mov mov and and cmp jne ds lret repnz xchg mov movabs jnp add movabs rex fdivrs sahf (bad) fdivrl in (bad) lahf mov rex.W ja int leaveq jrcxz mov int3 (bad) rex.WXB gs pop stc xchg mov (bad) (bad) fsubl movsl mov flds and xchg stos rex.WB rclb callq xchg adc sahf out (bad) enterq rex.WRXB lock adc sbb mov scas xor scas cwtl fld or rex.WR addr32 rex.X in jb mov adc movsb rex.RXB pushfq js cmpsl (bad) (bad) rex.RXB mov push stos in movslq xchg sti add cmp movsb or sahf (bad) cs push test idivl loop jnp sahf add adc jo iret sub or callq jg shr loope xchg (bad) cmp mov nop xor cmpsl in xchg popfq jb out xchg and add lret adc xchg je mov ja hlt (bad) outsl xchg (bad) ror popfq fisubr mov sti (bad) jmp hlt (bad) jrcxz lea (bad) add xchg cs ss xchg rex.XB (bad) outsl xchg adc jl xchg (bad) mov (bad) (bad) jrcxz nop in lods movslq xchg or pushq sub rex.WRB mov mov sahf push (bad) rex.WB lahf rex.WXB add scas mov sbb insl jo pushfq mov push push add (bad) notb pop add sahf add movabs in (bad) push insb rclb xchg (bad) (bad) xor add xor frstor or cs xchg cli adc sbb pop xor pop rex.RXB fimull out pop sbb fcmovnbe ss enterq in in loop pushfq stc xchg lahf add lock (bad) mov mov movabs ror xchg shrl rorl (bad) (bad) (bad) xchg xchg nop pop mov xchg cs jl add test std push cwtl hlt add or imul out xor rex rex.WRX out mov pushfq mov add int rex.W rex.XB xlat cmp gs xchg sub stos movabs cmp in out and mov hlt pushfq add movsl (bad) sbb imull (bad) cltd popfq out movsl lea callq jmp add rex.RB jmp xchg in cld (bad) fisubrl mov (bad) or cmp mov fwait (bad) cmpsb mov loopne pop or or pushfq mov rex.WXB mov rex jle or js repz jbe rorb (bad) in fnstsw in test bnd flds xchg (bad) mov out xor in mov xchg adc cli int3 pushq test fstps in repz xor decb jbe xlat (bad) (bad) jmp mov movabs rex.WRB mov (bad) xchg fldcw jbe push mov enterq jge jrcxz retq outsl sbb (bad) out pushfq (bad) jns (bad) hlt pop (bad) cmp imul xchg in rex.B xor cmp sahf imul add and movsl xchg (bad) pop xchg xor cmp xlat gs cli lret mov xchg out cs mov rex.RXB in fsubr sbb xchg xchg leaveq adc fs sub xchg cwtl rcll add (bad) clc jbe in fnop (bad) std mov loope xorb lret cmp lea icebp xor and mov rex.XB push pushfq cmp push (bad) rex.WXB xchg mov iret stos test push lret gs xor data16 xchg loope add (bad) lods jg add es fisubl (bad) adc jrcxz jl or cwtl (bad) movslq pop pushq pop cltd movabs scas (bad) xor and xor and push (bad) repnz sub push (bad) add (bad) outsb xor repz movabs mov icebp mov jmpq sub or adc xchg andl jrcxz out or shrb jbe sbb pop xchg cmc and xchg (bad) movsb (bad) sbb movabs scas rex.WX pushfq lret cli rex.XB stos jmpq sbb popfq sbbl sbb pop ds xchg jle and in test ja cmp (bad) pop fiaddl orb rex.RXB (bad) jbe fwait mov xchg test mov test xchg rolb popq rex.B or test adc rex.WRB lret mov rex.XB mov jrcxz and cmpsl cmp (bad) fmuls cltd cld loopne cmc sub jb cmp xchg (bad) (bad) ds rex.WB jrcxz retq pop rex.W mov push cwtl fwait jmp ja (bad) jae rex.XB movabs cmp rex.R xchg fucomp cmp cmp gs jmpq sub (bad) (bad) (bad) nop xorb imul cmp out (bad) pop (bad) notb mov movslq stc mov mov fldt xchg test mov rex.B movabs (bad) popfq xchg xchg sbbb rex.WR cmp in imul xchg xchg out (bad) fs movabs out mov imul incl rex.RX pop and movslq loope shll out (bad) bsr es jrcxz (bad) xchg sbb cmp xchg test popfw (bad) xchg imul rex.WB pop cmpsl ja hlt pushq movsl data16 rex.WRXB int3 xor rex.WRX movabs (bad) push repnz pop (bad) sub push test (bad) cmp incb pop sbb out sub jg sbb cmpsb xlat insl and nop add lret mov ss xor gs jp pop mov xchg cwtl nop (bad) rcl retq lret test xor or (bad) out out iret xor sub push jmp rex.RX adc or rex.RXB movabs insl xchg fisub sarb popfq sbb rolq fistpll out cmp rex.W or addl sti fidivl mov loop (bad) data16 insl mov movslq (bad) or iret lahf or (bad) repz mov andl mov in rex.X pop cwtl jge add (bad) pushq jb outsb je scas (bad) test add push mov mov retq sub lret mov xor add xchg js fsubrs xchg pushq mov mov (bad) outsb (bad) jrcxz (bad) xchg lock fistpl xchg stc test outsl sti fstl sbbb pop rex.B xor (bad) pushq add pop or rex (bad) fsub push pushfq adc sub mulb mov xchg (bad) jnp rex.RX adcl scas retq out and xchg xor in shrb (bad) movslq pmuludq xchg xchg callq rex.R rcr (bad) rex.RB jmpq pop push xor rex.WX mov mov (bad) mov xor (bad) jo pop fildl movsb insb jns push insl xchg cmp jg pop cmp adc cmovns imul fcoms scas xchg test in rex.RXB sbb or jae fs rex.WB es fcomi stos add xchg and int iret mov cwtl mov divl pushq rex.WRXB rcrl (bad) out xchg jmp imul fwait lea (bad) and push xchg hlt or xor add rcrl fisttp (bad) xchg sbb pop push mov xchg xchg mov xchg orl or test xchg push std push idivb xchg and rex out cwtl push rclb adcl sub (bad) mov and lods jl (bad) jae adcb or xchg gs jnp xlat outsl mov (bad) add mov fucomp adc movsb xor mov in rclb (bad) stos cltd mov lea mov outsl mov stc pop jg pop add mov or rex.R (bad) movabs (bad) (bad) in xlat (bad) xor jno scas (bad) xchg adc jns pushq mov pop cld jne (bad) mov loopne cli popfq rex.WXB imul adc fisubrl push stc decb int3 mov ljmp int3 (bad) and rex.RXB adc jg movabs ja and jmpq insb adc cs mov subl cltd push (bad) xchg mov rex.B adc rex.WRX fwait (bad) adc or xor leaveq (bad) sbb repz cmp jbe,pn lret pop mov movabs mov push (bad) scas xchg (bad) rex.WB rex rex.WRB xchg sbb xchg test (bad) (bad) pop test insl rex.WRXB rex.RX repnz mov (bad) xchg jl pop jbe test lahf or jp (bad) fs sbbb lret and sub (bad) (bad) or (bad) cmpsl (bad) or (bad) jb adc adc out movb (bad) test push pushq (bad) mov ficoml and rex.WRB add (bad) sahf and lock int3 (bad) rex.X rex.WX movl gs outsb sub insl jg xchg pop repz mov pushq (bad) adc (bad) roll jnp mov jno movabs cwtl pop (bad) sub sub jle rcl mov add mov xchg (bad) imul xchg sahf cmp sbb xor data16 pop push push jge xor test or (bad) push je rex.XB xor (bad) sti test (bad) rex.WRB mov mov lret push push imul push mov stc addr32 (bad) retq jnp std mov ss movslq xor (bad) xchg or loopne xchg mov rcrl jmp jrcxz fmul xor mov int3 lahf pop outsl cld (bad) and addl loope mov mov adc cs pop fsubrp stc and sub sub pop je xor rex.WXB scas rex pop rcr sbb sbb push xchg (bad) rex.W lods (bad) jmpq outsl xchg cwtl rex.WR rex.WRXB adc nop popfq cmp imul movslq stos and pushfq rex.R (bad) fwait (bad) outsl (bad) or insb je xchg cmp movabs gs rex.WXB jnp sbb cmpsl retq js pushq or xchg push addr32 (bad) mov mov xor movsb (bad) loopne cmp rex.WRX shl (bad) fdivrp xchg lahf repz push divl je cs imul xchg (bad) mov mov mov sbb fisttpl xchg rex mov in (bad) xor jg cs xchg cmp stos or movabs rex.RX loop fcmovne rcll xchg mov mov cwtl (bad) in (bad) stc shrl sbb popfq fisttp push xlat test mov (bad) sbb xchg xchg retq mov adc (bad) xchg mov (bad) (bad) cmp js pushq jmpq add imul add callq xor imul (bad) jrcxz mov adcb ficompl xchg int xlat fsubrs pop out notl xchg test lods pop test ja popfq cmpb jns ja jne cmpsl pushq (bad) rex.WR lods xchg xchg xchg rcrl mov xchg stos cmp movabs rex.XB retq test xchg movabs push addr32 (bad) sahf (bad) or int3 std pop stos lahf (bad) xchg and cmp (bad) pushq (bad) lret mov rex.X mov xchg test jp movabs fldenv (bad) xchg imul (bad) xor xchg fwait (bad) (bad) push push or loope (bad) (bad) out xchg or mov pop movsl pop or cmc movsb adc int sub cmp scas mov jns retq (bad) rex.W sahf lock mov add mov icebp fcmovne stc xchg cmp mov cltd leaveq push movslq push std test cmp jl iret add add push fldl outsb sbb xchg mov xor (bad) lea xchg cmp (bad) mov std (bad) xchg movabs fildll sub xchg pop mov or (bad) js imul (bad) (bad) div fdivs es scas insl jp pop rex.RB rex.R movsb push sub push xchg mov scas jle in ud1 lods pushq rex.WXB rex.R xchg mov fiaddl cwtl jbe pop xchg mov (bad) (bad) retq imul int xor mov rex.XB and mov cmp (bad) out mov leaveq cs mov insl pushq push shll pop mov mov xchg jl sub (bad) rcl popfq scas mov pushq xlat mov imul movabs cmp mov or xchg mov xchg (bad) imul pop (bad) scas push xchg sub mov add adc (bad) rex.WRB (bad) (bad) sub fldl add scas or mov (bad) mov and add cltd and (bad) or sahf (bad) jbe std fs mov movabs pushq mov imul stos stos and (bad) adc push cmp cmp test jge callw mov mov mov rex.WRXB pop jne rex.WXB stos (bad) lret addb (bad) xlat fisubr mov pop xchg (bad) test jne mov popfq rcll push add mov jnp movsb (bad) insb push xor lods (bad) xchg push xor mov mov xchg jne jge (bad) (bad) mov pop mov add (bad) mov cmp icebp (bad) out sbb (bad) jb rex.XB rex.RX rex rex.X sub and push pushfq mov fwait loope push in js pop push sub ja and lods mov lods push jb sbb fdivs sahf jo sub mov js (bad) or mov (bad) ja pushfq pushq notb add jl loope je movabs or sbb (bad) outsl imul xlat xchg mov rex.WRX rolb test sub (bad) pop (bad) cmp (bad) repnz rcrb or push lahf rex.WRXB jns xchg mov xchg (bad) mov (bad) int3 mov sub mov rex.XB cmp add fdiv mov test subl test test pushfq (bad) adc (bad) jbe or (bad) fwait sub (bad) sub lock je xchg xor (bad) mov xchg or stos pop push mov (bad) xchg cltd rolb jg pop xchg add pushq stos (bad) add jno rex.RB rcll lahf popfq xor cwtl push insl jge (bad) std pushfq rex.WB movsl cmp mov push rex.B or std xchg push sets (bad) adc cmp sti rex.WXB out rex.RXB and sub (bad) sub xchg (bad) cmp (bad) mov add (bad) jg int3 out pop xchg rex.RX adc (bad) addr32 ficom icebp mov or (bad) gs imul cltd jmp xchg popfq mov cmpsb pushfq xor lretw xor xchg test jmpq cld add mov sbb lahf nop (bad) (bad) cltd rex.X xor pop adc xchg (bad) sub mov xchg mov xor lods negl lahf push addb add and xchg (bad) mov rex.RXB jno mov and in ja out nop (bad) clc (bad) pushq pop mov push jb or mov imul xor xchg and int3 (bad) jo adcl adc out (bad) cmpsb rex lret xchg gs mov movabs xchg retq mov cmp rex.WRXB rex.X ss (bad) cmp shrb xchg lahf xchg jrcxz lods mov repnz (bad) mov movabs cltd (bad) and fwait ja mov xchg cmp (bad) (bad) lock xchg cmp mov (bad) (bad) je xor xchg andb lea leaveq and out (bad) subl int3 xchg lock (bad) test in shr mov (bad) xor movabs xchg movabs rex.WXB jo rex.WRB in loop xchg sub cwtl ja rex.WX add rex.WRX es scas mov or flds cmp push rex.RX adc lret fbstp jns fildl movslq mov (bad) push sarb adc cmp cmpsb xchg lret adcl add mov or (bad) mov jns (bad) out jl fwait test cltd xchg sub xchg ds jmpq rex.RXB sarl or (bad) lret mov xchg in stos jmpq (bad) xor adc xchg (bad) xchg sub (bad) rex.WR in add mov mov movabs notb push jp sbb rex.RB jb xchg push cwtl jno rex.WRXB cli out (bad) std (bad) (bad) pop xor repz rex.WRX jno (bad) (bad) stos rex.W sar rex.WRB fcmovnu (bad) xor and xchg (bad) shrb cmp jno (bad) sbb (bad) icebp xor mov push movabs ljmp xor rex.RB not callq stos push andl cmp xor push xor (bad) rex.X fmulp movsl ds (bad) imull (bad) nop (bad) push rex xor xchg pop mov (bad) cli (bad) rex.XB (bad) rex.WRXB and cltd es mov mov rex.XB or add rex.WRB add callq ffree (bad) movabs xor sahf cwtl int jmpq test and movabs retq xchg (bad) in iret (bad) add mov xchg mov mov cwtl adc xchg loop,pt jnp xlat pop xor cmp rex.X jg ficom pushq mov jnp (bad) (bad) callq sub icebp addr32 and sbb cmpsl jne int insl sbb cmp out repnz (bad) scas xchg rex rex.RX repnz jae (bad) adc (bad) pop mov (bad) jnp in xchg mov xor rex.R push jl sbb fidivl cmp jb imull int shr push (bad) add sbb push test sbb mov fdivl xchg pushq ss xorb (bad) xchg mov mov (bad) xchg mov (bad) (bad) rex.RXB pop shrb xchg sbb xor xchg rex.WRB movsl ja mov and (bad) sahf nop xchg (bad) pop rex.WR rcr je in adcl subl movabs and and (bad) push loope in xchg mov rex.WB int3 rex.B sahf (bad) or sub or movabs cmpsl jo in rex.WRX jae ror cmc xor (bad) jnp int3 rex.WB xchg stc (bad) sub mov mov rex.WRB rex.WXB jnp mov (bad) ficoml xchg jg xchg sub (bad) stos (bad) xchg push data16 cmpsl int sarl jmpq adc pushfq push pop adc sbb jg fldt stos xor fwait pop imul mov adc (bad) (bad) testb cwtl mov roll xchg vpshlq (bad) es lret outsl mov pushfq imull loopne sti sahf rex.WR push pop or sbb retq xlat rex.X (bad) xchg push pop decl rex.X sahf cmpsb sbb rex.WB (bad) movabs sub xor cmp pushq mov sbbl xchg mov xchg and sbbb rex.WRB rex.X xchg sbb getsec rorb mov pushq xchg out rex.RXB or and lods add rex.WRX xchg outsb scas (bad) mov retq out pop jmpq (bad) cmp fsubl (bad) xor xor push imul test movabs out rcr movabs cmp out rex.WRXB lock je (bad) (bad) icebp (bad) movslq ss hlt mov pop sbb sahf sbb (bad) enterq movabs mov xchg push rex.WX (bad) sbb cmpsl (bad) (bad) mov lods ss adc pop jae and sahf jbe xor cs movsl cmp fist xchg retq mov movsl xor movabs (bad) pop stc rex.W (bad) xor adc rex.RXB (bad) cs ss lret rex.WX (bad) rex.WR ss out lock (bad) rex.W cs mov ja js lea xchg cmp iret cmpsb in jbe je xor sbb (bad) pop pushq mov repz (bad) in je add jae (bad) shrl shlb punpcklwd imul or mov or pop mov test xchg imul ffree jg jne push enterq jae (bad) xchg outsl js rex.WRX jno xchg adc rex.XB rex.WRB and xor jns or adc and (bad) adc push fwait test lock jle xchg negl cmpsl sub lahf insl mov retq xor test fstpl repnz iret (bad) int rex.RB out lea rex.RXB xchg sbb jo outsb xchg mov (bad) rex.XB (bad) sub sbb rex.X fidivl cmpsb lods iret movslq xchg jb cltd rex.W mov xchg cmc stos not cmp sub fnstenv es mov maskmovq imull (bad) imul (bad) or cmp fldl2e notl popfq div movabs mov xor (bad) sub callq xchg push test cmp int sub mov out (bad) mov push not leaveq rex.WX xchg xchg mov add sahf pushq pop (bad) sbb movsl adc push in sub or out callq lret sahf pop icebp sbb movabs xchg callq imul sub cltd cltd icebp and imulb (bad) pushq insl xchg (bad) mov xchg sub add test mov xchg pushfq (bad) xchg rex.RX loop mov sahf sbb cmp xchg xchg insl cwtl repz cmp gs jmp es sbb rex.WRXB cs out and (bad) jge and xchg sti and (bad) movabs add cmp (bad) movabs pop leaveq xchg movsl (bad) or rex.WRB (bad) lock rex.W imul sahf or pop int (bad) push (bad) ja mov jo (bad) (bad) cmp outsl loopne movsb gs cli clc xchg mov movslq rex.WRX xchg in mov jl xchg fisubr add hlt sbb mov rex.XB pop sub xchg ds movabs cmp addr32 (bad) pushq and rex.RX push mov mov fsubrp stc movabs rex.WX mov xchg cwtl test divl sub and xlat xchg mov mov (bad) sbb out pushq cltd rex mov xchg rex.WRX jg xchg pop xchg or mov callq sahf rex.B pushfq mov movsl ds and mov jp or xlat cwtl add movabs decb int rex.W in push (bad) xlat mov int3 test xlat repz xchg (bad) xor fneni(8087 push fcmove rex push sub push xor adc ss retq mov push and fwait movsb lret sahf ss (bad) (bad) jne sahf stos (bad) stc (bad) nop mov cwtl (bad) mov mov ja test mov outsb fwait enterq cmp cwtl fiadd test test (bad) cwtl or rclb xchg divl rex.W sbb jmpq xchg push imul xchg jrcxz imul int or mov xchg fnsave add xchg (bad) or imul xchg js sti sbb movabs mov xchg jo out xchg cmp mov or icebp xchg add cmp (bad) jno outsb (bad) ds int lea xchg adc movslq pop addr32 je in sti fnstenv xchg shlb xchg (bad) (bad) repnz (bad) rex scas lock or adc sub mov rex.WR rex.WRXB lret (bad) (bad) lock xchg stos xor xor xchg pop fisttp (bad) ror pop (bad) movabs jb mov divl (bad) imul cmc xchg mov pop outsl sub jle,pn outsb xchg (bad) imul lods and cmpsb fistpll imul jmpq cmp (bad) (bad) cwtl sub ja addr32 push out cwtl jg sub sbb or in sbb movsb add int3 out hlt frstor jg sub gs js repnz xchg sbb (bad) mov sahf jno xchg rex.WR stos scas jo (bad) cmp xchg mov push xor pop jne pop mov xchg test sahf pushfq outsb mov mov mov xchg (bad) leaveq insl sbb and xchg (bad) mov xchg adc iret add sbb cwtl loope out lahf fwait rex.RXB out xchg retq movsb mov mov mov pop rex.WR push (bad) iret sbb xchg add xor xor rex.RXB xchg xchg fmull retq or or movabs js rcll (bad) es lods and stos or xorb mov (bad) (bad) popfq (bad) (bad) lahf or jnp add lret lods clc pop cs cmp in (bad) scas xor rcll sub lods xchg js mov jrcxz xor jmpq movabs jne jb xchg push (bad) add movsl cwtl rex.W pop mov push xchg pop test xchg (bad) loope cli (bad) (bad) mov mov rex push in pushfq sbb adc add (bad) rex.XB xchg jno outsb (bad) rex.RB sub (bad) imul xchg roll xchg subl test or ficoml test pop jg out (bad) rex.X rclb xchg and mov (bad) sbb stos xchg insl jbe ss adc test pushfq adc clc jbe lcall repnz push adc mov xchg lods (bad) rex.RX clc xchg jo xchg ud1 stos loope mov adc jmp push icebp xlat rex.WXB rex.WXB xlat (bad) mov add xchg (bad) xor rex sub adc mov mov in (bad) out stc add outsl cld int xchg xor pop insb (bad) xlat add xchg rolb mov and adc (bad) cld rex.RXB (bad) ljmp (bad) rcrb xchg pop int or iret in jns in scas sub (bad) (bad) cmp (bad) add jge xor mov adc jmp test movslq fisubrl jne rex.R mov sbb add push jnp jg pop retq (bad) cmp lods sbb xchg iret (bad) loop mov loop add pushq loope xchg movslq (bad) mov fs (bad) adc fs mov xor mov insb rex.WB pop pop clc pop adc or outsl cmpsl jl xchg (bad) push xchg pushfq xchg (bad) nop xor push sbb cmp pop mov sub jne xor vlddqu pushq jg cltd lahf pop pop xchg xchg rex.RB rex.WR xchg pushq (bad) movslq pushfq mov out mov (bad) (bad) shlb insl (bad) movsl insl shrb push jo (bad) rex.RXB add (bad) xchg stos (bad) insl imul mov push or jp (bad) xor (bad) jbe jl imul pop imul lock pushq adc test rex.RX xchg or xor shr popfq push sahf scas fsubrl ja jae andb fsubrl fiaddl rcrl je loopne (bad) out loop mov xchg or test jnp xchg mov stc sub sahf out addr32 fnstsw cmpsl jne out xchg xchg sub jmpq jmp ds cli rex.XB xchg scas pop cmpsl adc rex.WRXB repz xchg pushfq ror xchg fmulp rex.WRB xchg in test mov retq mov movabs add sahf mov fildll add (bad) scas out rex.XB int cmpsl xchg cwtl (bad) loope loop movsb pop xchg decb or pop cmpsb mov xchg lret xchg mov cmpsb jg enterq rex.WRX pushfq mov cmp pushfq or (bad) xchg (bad) out rex.WXB out pop callq lahf loop repnz test negl pop cmp xor mov rex.WRX pop rex.RX mov pop sub (bad) pop xor (bad) out mov mov lret jne xchg jb adc js (bad) (bad) mov cmpsb add andl (bad) pop imul xchg (bad) (bad) sub retq xchg andps cmp cwtl cmp mov int add xor xor fildll and pop add xchg rex.R mov (bad) in mov mov push stos fwait xchg mov mov mov data16 or xchg icebp (bad) mov xor push xchg rex.WRX (bad) xchg (bad) (bad) push push iret xor es cltd sub xchg je test (bad) mov mov mov sar enterq jae or stos movabs mov (bad) (bad) mov sub sub or xchg (bad) sarb xchg sbbb (bad) add lods fs (bad) ficom cmpsb xchg adcl sub rex.B cmp xchg (bad) add leaveq (bad) cmp sbb pcmpgtd cwtl (bad) add push cmp rex.RB mov push lret repz and cltd mov (bad) xor jb shll fwait xor jmpq add push jne cmc pushfq and ja jle xchg adc insl jmp retq jge pop mov imul fsubr and and add mov rex.WXB sbb or (bad) jge rex.RXB fsts or cmp (bad) addr32 (bad) (bad) (bad) (bad) lahf shl mov adc movslq jmpq adc shrl (bad) (bad) fcmovbe pushq roll (bad) jo cmp mov pushq (bad) adc fistpll test sub insb sub dec sbb and imul xor jnp mov push xlat pop cli fistl pop xor jp gs data16 sbb (bad) rex.X data16 xchg mov rex.RB fcompl xor (bad) fcomps mov jnp push callq xlat je (bad) sbb rex.B rex.WRX popfq movslq (bad) push nop (bad) lea (bad) and adc int3 int3 sbb rex.RB (bad) imulb mov xor and (bad) pop out cmp jge xor cmp jo sbb outsb stos popq (bad) jbe int3 (bad) subl push nop adc mov (bad) or shlb xchg mov cmpsl jne (bad) cmpsb sbb add (bad) jbe movabs jne (bad) jns cli pop cltd pop jne sbb lret rex.RX push xchg jbe subl (bad) mov and pop roll js or (bad) vmovdqu (bad) nop cmp (bad) mov mov loopne sub movslq jo push (bad) (bad) outsb xchg rex.RX pushq (bad) (bad) pop pop std es lahf fmul cmpsl (bad) xor xchg push add data16 addl repnz rex.WX movsl mov clc fimul loopne roll ljmp fs push rex.B or pop lahf or mov sbb std sbb xchg mov mov insl jle xchg add rex.WR rex.R fs adc (bad) mov (bad) punpckhdq (bad) es jle rex.WRB movabs sub (bad) (bad) rex and mov (bad) pushq (bad) test cmp (bad) mov ucomiss push ja jge (bad) push mov rex.WRX xlat cmp (bad) and add (bad) pop mov pop mov out clc (bad) fs sbb gs sub fs cs cs sbb mov or ds and orb (bad) sbb repz cwtl mov jae (bad) mov jne xlat (bad) adc cmpsl cmp adc and out rex.XB or cmp imul (bad) movslq or mov jbe pop data16 in or test sub lea rex.WB in outsl jnp fcoml movslq (bad) jo jrcxz (bad) iret mov insb out add out shrl fstpl adc cmpsl rex.XB rex.W shrb xchg pushfq in outsb (bad) jge out movslq xchg lea (bad) (bad) cmp mov retq or sub test adc rex.WX lret out out mov push repz movabs rcr mov rex.RX gs and rex.WB add (bad) callq test (bad) popfq stos push js enterq add outsl sbb or xchg mov fimul xchg pop sub out jnp repnz shrb sbb in sbb seta (bad) mov cli lahf mov shr xchg pop idivb and (bad) movabs mov (bad) es (bad) (bad) rolb div addr32 rex.RXB push and xor icebp or fldcw (bad) and or lahf push pop (bad) divps loope mov (bad) fiadd push std jp jg cltd sub (bad) stc xor (bad) std rex.RXB je xchg (bad) add pop pop insl cmp adc (bad) or (bad) mov xchg jne rex.WRB xchg callq (bad) je sub sahf rex.W xchg mov mov movabs and pop jge (bad) movabs (bad) (bad) and xchg repnz mov xchg (bad) pop sbbb jnp mov mov jno (bad) imul xchg lret fnstsw (bad) jno pushfq xor movabs jp cli adc cwtl mov divb in xchg (bad) mov movabs decl imul movsb mov cmp pushfq cld movabs sbb movabs xchg js or sahf xchg std jnp rex.WRX (bad) mov jns fwait (bad) add pop xor or lock xchg cmp (bad) test out (bad) xor mov add or xchg stc int rcl sub test rex.WXB lea jge xchg lods fcompp fsubrs ja rex.RB add mov cmp rex.WXB gs flds xchg and loop test xchg and jmp fcmovbe (bad) cmp xchg imul int3 pop xchg divl mov lock scas or sub scas addr32 rex.WX cmpsb std fnsave nop rcr push mov jne fwait push movsb fcomps (bad) rcll mov movslq xchg xor callw mov xchg sbb xchg xchg xchg and push mov movabs xor mov (bad) jnp push xchg mov mov lret xchg rex.RB jae jbe adc loopne mov loope rex.WRX (bad) sub in insl pop fnstenv xchg rex.B lret or and out jne repz add fmull xlat jo and mov movabs xor lret (bad) (bad) std rcrl lret xchg mov mov (bad) movabs std mov xchg scas rex.WX rex.W rex.WRB mov xchg out movabs cmpsb movabs insl add and xor retq mov out xchg cli push xor nop fisttpll movabs xchg test jb push xchg and xor fwait xchg loop stos push rex.WX add rorb or mov cmp int stc imul std cltd out sub (bad) (bad) xlat adc icebp pushq adc (bad) mov (bad) mov rcrb jg stc mov jge movsl movabs add test fbstp and scas add mov xchg or in (bad) movslq (bad) (bad) clc and rex.WR cmp xchg and lea pop xchg vmovshdup xchg or sub stc mov mov adc push mov jge lock xchg rex.RXB ja gs mov adc std imul rex.WX cmc out lret stc ss jnp imul cltd add mov orl (bad) test loopne mov jp stos pushfq adc movsb (bad) sbb xchg mov add xchg pushq pop int3 xchg (bad) xchg mov jmpq sbb nop rex.WXB mov mov pushq rex.WRX rex.WR popq pop test pop rex.RB imul sahf sbb mov in xor xchg retq adcb loopne (bad) rolb fildll cmpsb push lret jb insl test (bad) jmp sti mov cmpsb testl (bad) adc sub sbb mov (bad) stos (bad) jne xchg movabs cmp movabs int3 sbb mull jle (bad) (bad) cmpsb jae sbb mov xchg movabs xchg xchg (bad) mov test mov callq cmp std xchg imul rex.XB mov xchg (bad) pushq (bad) mov push std popfq pop rex.B movsl js xlat leaveq rex negl ss cmpsb mov int ds xlat leaveq jne sub rex.R xchg imul rex.B scas add add push repz jne jo nop sarb adc idiv mov rex pushq pop or sbb or jle adc popfq movslq or rex.X repz mov jg fadds jbe imul xchg enterq popfq sub xchg callq mov imul xchg jl mov (bad) (bad) repz push xorb fldcw push cmpsb pushq pop xor add cmc gs add push and fsubrl sahf movabs test (bad) xchg cltd retq testb xlat out xchg lea or (bad) int3 cmp xor mov jge push and test (bad) push imul es xchg in in cmpl and leaveq (bad) cmpsb adc callq fidivl jnp mov (bad) cmc sahf pushq or or scas adc mov mov jns rex.RB rclb (bad) sub test addr32 push rex.RB jno jmp rex.XB rex.B cwtl cmp mov in xor int3 lahf test pop sub xchg mov (bad) jl outsl scas (bad) fildll (bad) (bad) sbb in jns xchg scas outsb adc (bad) popfq in or jnp push add mov pop (bad) mov mov je xchg add push or sub (bad) movabs pushfq mov jnp cs cmc (bad) movabs insb pop out (bad) and or jmp and (bad) nop lock std test push (bad) (bad) int icebp and pop loope jl (bad) or loop rex.WXB cwtl add cltd sbb cmp test xlat loope xchg xchg in rex.WX popfq fwait hlt iret jbe add xchg xchg scas lea clc mov (bad) cmpsl cmc rcr pop (bad) cmp adc fdivl lods cmp in adc adc test (bad) clc out xlat fs xor xchg jo push lea or rex.WRXB adcl dec cltd xor and movsl xor pop movsl cwtl ja movsb xchg pushfq mov (bad) nop (bad) int3 xchg jbe test mov iret popq cmp and ja rcrb xchg rex stos rex.RB rex.XB or and callq (bad) push sahf xlat jne mov jnp push jge (bad) rex.WRXB mov retq shll vpmulhuw xorl xlat jne xor movabs jbe and (bad) xchg mov pop test (bad) loop and or and mov fst xor adc xchg rex.W adcl and jnp in (bad) es cmp xor and addr32 and sbb test ficompl (bad) cmp lea (bad) pop (bad) cmp jge popfq outsb lock outsb and and mov rex.WRXB rex.WRX sti pop scas jmpq or (bad) cs gs loopne xchg mov int3 (bad) rex.WB push mov add mul add and mov in cmp (bad) loop ficom or sbb movslq gs push fldl sbb add test js mov std cmpsl rex.WRB rex.W je (bad) lea (bad) mov add sub (bad) (bad) push mov mov mov rex.WXB add (bad) sbb xchg out and js jbe in (bad) push xor mov add add fs sub pop rex.RB (bad) xchg mov jo xor push cmc (bad) divl lock sbb (bad) stc xchg cwtl xchg clc pop xor xchg pop or repnz mov fisttpl cmpsl mov fdivr rorl (bad) sub rex.RXB rex.WB scas insb (bad) nop mov rex.WX xchg (bad) (bad) (bad) ffree pushq push test xchg es mov pop jae pop (bad) jnp rex.RXB roll out callq and outsb pushq cmp test movsl jrcxz lret (bad) ss rex.WRXB lret int fxch movslq cmp ja rolb ror outsl (bad) mov (bad) (bad) (bad) nop adc mov xchg cwtl div clc push nop imul (bad) sbb push icebp loope sub push xor rex.WRX (bad) pushq loopne (bad) sbb (bad) jnp fcompl xchg pop (bad) mov adc (bad) pop sahf movabs subl xor mov cmpsl rex.WXB xchg addr32 xchg rcl js rex.B cmpsl and in mov (bad) fcomps imul or or icebp xchg (bad) pop (bad) mov sahf or nop push int sbb or jg out rex.WRB rex.WX rex.WX cwtl in jo rex.X stos pop (bad) insb popfq push rex.WXB (bad) sub mov jge xor adc push gs nop and jbe cmpsb imul stos and push movabs or fisttpl lock mov sbb xor (bad) addb xchg jmp rex jnp add xorl (bad) flds in (bad) push imul or (bad) xchg adcl jbe pop add (bad) insb xor pop fwait mov rorl nop rex.WB cmp push out cmp iret movabs mov jnp xlat add sub mov fnstenv fwait lods or js insl (bad) mov ja movabs fbstp (bad) scas cmc xlat jb rolb fs mov addr32 xchg adcb add test (bad) loope (bad) rex.RXB cmp ds incl fimul xor or rex.RB scas pop pop outsb imul xchg movabs (bad) sbb pushfq pop sbb hlt mov pop mov test (bad) xchg sub rex.WX out (bad) sub lahf (bad) jno cmpsl or hlt xchg or (bad) (bad) (bad) xchg cli fstp enterq mov iret loope popfq cmp xchg rex.XB xlat push mov cmp (bad) movabs and cwtl lahf cmp mov cmp sahf mulb cmp or xchg rcll sbb movabs mov cmp jmp (bad) mov fstps (bad) xchg lock rex.WB leaveq sub lods lret stos nop sub js xchg in (bad) (bad) mov (bad) (bad) pushfq mov xchg (bad) cmpsl stc xchg or mov mov cmp rex.RXB repz rex.WRB leaveq rex.WX jmp mov (bad) xchg rex.R (bad) (bad) shrl and xchg xlat rex.WXB or jl xchg in mov xchg pop repnz test cld movsl xchg xor (bad) xchg and (bad) enterq orl and in cmp xchg fist sbb xchg scas (bad) in pop pushq rex.X movsl cmpsb mov add test divl adc rcl (bad) out leaveq jle jge mov jg cmp mov pushq mov mov mov hlt xchg out out lret rex.X add rex.X add mov rex.WXB xor adc and (bad) xchg jl fcomps fs xchg rex.B sahf rex.XB mov add push jrcxz or in (bad) xchg cmp pushq sub fiadd adc jmp rex.WRB jmp retq jne sub (bad) lcall ss adc stos (bad) jb xorps lods xchg pop jo sub xchg pushfq sub in sub jns negl sub adcb leaveq cwtl (bad) mov (bad) movabs xchg mov cmpl or xchg cmp jae nop xchg xor cmp stos std xor out xchg sub cs xchg out (bad) rex.RB test divb lods repz rex.WR imul or movslq (bad) sub enterq xchg mov push (bad) cmc sub scas xchg test scas sbb rex.RXB callq xor xchg mov out pushfq rex.WR stos add sbb xor push sbb sahf xchg jbe (bad) insl jo (bad) rex.WX (bad) cmp pop jle std xor or test je outsb cmp sbb mov xchg rex.XB cmp fnstcw xchg movabs outsl mov xchg out jg jo fimul cwtl push add enterq mov test rex.XB lods xchg rex.WRX iret add ficoml in mov (bad) pop insb out sbb xlat div movabs enterq icebp (bad) mov cltd pop mov cmp scas xchg rex.RB int3 xchg addl loope cmp retq (bad) cs (bad) (bad) rex.B push push (bad) fmuls subl sbb scas xorl in xlat add push add rex.WRB decb rex.WRXB mov rex.X cwtl adc rex.RB (bad) insb in (bad) (bad) cmpsl int3 roll xchg pop sub mov pop or sbb or rex.WB sbb iret (bad) stc add sahf jae mov (bad) fidiv movabs xchg movb (bad) push add pushfq pop jrcxz (bad) jp xchg test xchg (bad) pop rex.WXB xchg push mov sbb pop (bad) mov flds adc icebp add sub jb stos lahf sub pop xchg subb shrb imul out (bad) mov cmp xchg (bad) mov mov xchg cld stos scas lret sbb popfq or cmp mov fwait stos (bad) (bad) (bad) lret (bad) push fldenv sub push sbb xchg jmp ja jbe adc adc push jnp rex.RB (bad) xchg movsb movl in loopne xchg in sbb xchg jno xchg imul movabs mov jge adc and adc xchg jle pop sub jbe rex.W je pushq repnz add or jno icebp sbb (bad) lods mov and fnsave in mov sbb xchg (bad) rex.WRB (bad) adc (bad) int3 xchg mov std rex.XB in mov (bad) jnp cmp add loop stos xchg xor out pop xchg fbld xor mov rex.WXB jl (bad) (bad) jle xchg and insb add rorb xchg ds xchg jmp es mov add ficom scas sub xor jp xchg jb xlat rex.WX cmpxchg retq std int mov cmp (bad) cmp cwtl addr32 mov (bad) xor (bad) in lret stos sahf leaveq (bad) loop sbb jae xor sbb shufps rex rex.WB std test xchg andl popfq mov (bad) xor and (bad) pushfq pushq xchg mov xchg add cld mov mov xchg (bad) jnp insl xchg std insb and sbb mov cmpsb jmp (bad) pushfq pushq jo in mov imul test rex.XB insl (bad) xchg and (bad) iret xorl rex.WRX and jo adc xchg push sbb jns rolb pop push xor lret xchg cltd nop retq rex.WRXB xor (bad) lea push sub xchg push jge and sahf and rex.WRB rex.WXB mov fwait (bad) or mov fsubrs (bad) stc lea xchg cmpsl pop mov jge pushq jbe add movabs enterq (bad) xchg or cs fstps (bad) pop add data16 mov cs or adc xchg mov xchg pop out cwtl mov jle sub pop xlat add (bad) fs (bad) in mov jmp (bad) (bad) sahf rex.RXB and and int xor jmpq (bad) sub fcomps lea and and cmpsb movslq icebp or (bad) test imul insb jne mov cmp sub (bad) pop fstpl pop mov imul nop mov out (bad) (bad) pop add xchg sbb (bad) data16 imul mov adc outsl xchg xchg leaveq loope (bad) cld fldt loope rex.WXB (bad) lahf rex.WRX sub mov mov sbb xchg or jl xchg lods movabs add pushq push add push enterq shlb xor jnp loope xchg (bad) repz ss popfq rex.WB out lahf test in iret repnz movsb and xchg movabs callq sbb in xchg pop movabs loop mov jp rex.WX shrb sahf ja (bad) (bad) pop cwtl test (bad) cmp mov pushfq rex.XB je movsb xchg cmp cmp xchg outsb jns mov sbb sub callq or int jnp pushfq sbb xchg mov imul jbe and rcrl or fidivl xchg out andb mov xchg xchg cmpsb mov or (bad) xchg cmpsl xor (bad) repz cmp mov xchg outsl (bad) xlat fsubp sub rex.X rex.RX xchg retq sbb (bad) rex.WB or fldcw popq (bad) (bad) (bad) cwtl lret movsl push push (bad) rex.WR sub adcb mov mov test data16 movabs loope mov fisub lods add retq xchg stc loope jne (bad) mov mov rex.WXB sbb ljmp or pop xchg (bad) (bad) (bad) cmp rex.RXB rex.X imul cmpsl jl or push stc xchg adc mov pushfq or sbb cmp sub icebp or cmpsb jae adc and mov je xchg pushq mov or sub (bad) (bad) pop mov mov jnp jle xchg mov adc mov movabs xor xchg data16 loop (bad) (bad) mov push (bad) adc lock mov insl add ja enterq cmp push and imul xchg movabs lea (bad) (bad) addr32 (bad) add clc add cmp rdtsc test jb clc mov mov rex.RXB jle icebp sub xchg (bad) addr32 sub test (bad) pop cmc movsb mov stc fisub rex.X movabs or pop lahf push sub sbbb jno loop xor sbb pop mov or push adc push clc (bad) pop rex.XB lods loopne sbb jnp rex.XB and jmp out sub adc imul (bad) lea cmp (bad) rcrl rex.WXB out icebp xchg mov out mov (bad) mov (bad) sbb std dec jbe (bad) jge xchg (bad) mov rex.RB (bad) or xchg jb jbe and imul js (bad) ds sbb pushfq (bad) movabs add xor out adc rex.X jmpq xlat or out xchg xchg rex.WX ja rex.RB xchg (bad) (bad) cmp fwait sar xchg (bad) cmpsl adcl js and out xchg or (bad) push (bad) xchg and push (bad) sub pop (bad) (bad) lods test (bad) cltd (bad) shrb lret sbb cmc adc sub mov xchg imul imul xchg rex.WR cmpsl cmc mov lret xchg movabs sbb (bad) sbb pushfq movabs retq punpckhwd (bad) movabs push cs outsb rex.WRXB test mov jle sbb mov gs callq movabs adc mov sbb je xorl popfq jmp xchg jb sub sti imul mov (bad) stos xchg sbbb test sahf pop ds jno ja add cmp (bad) ficoml adc push cs in andl mov pop jrcxz or (bad) sti jo xchg (bad) ds sbb xchg lea mov movsb rex.WR jnp rex.WRB test xchg cli (bad) in sub xchg (bad) (bad) adc rex.WR jge adc movsb rex.RXB xchg sub rclb (bad) outsb cwtl adc lret mov shrl rex.RB js stos xlat sub lret pop jmp cwtl or pop stos adc loope and fsubrp fcompl sub mov add test gs xchg lock (bad) andl rex.X fstps xchg mov mov notl (bad) sbb pop xchg std mov adcb in (bad) mov (bad) out cwtl rex.RB xchg callq or mov mov repz mov jg in xchg cmpsl mov lahf (bad) lret xchg scas (bad) or or pushfq lods mov sub fs rex.XB test xchg insb adc cmpsl and rex rex.XB jle jnp (bad) cwtl int3 test mov mov movabs add or (bad) mov enterq mov xchg sbb mov outsb pushfq (bad) in stos (bad) mov (bad) cltd adc movl (bad) xchg cmc (bad) (bad) pop and xchg mov pop push popfq xchg callq (bad) xor cwtl push (bad) (bad) movslq mov sti rex.W xchg iret in adc pushfq (bad) std mov (bad) or cmpsl jp xchg sbb push js add jmp (bad) jbe and adc xchg loopne leaveq mov iret movabs outsb mov sub mov (bad) movsl out adc scas movsb pop cs mov addr32 jae (bad) test jmpq (bad) insb fdivl jmpq movabs xor jnp xlat (bad) (bad) xchg (bad) (bad) mov (bad) (bad) retq push mov out cmp in stc jbe xor xchg pushq movabs cmp (bad) lods je cmp add hlt jb xchg cmp nop cs out xor mov scas jbe adc xchg add (bad) repnz and scas mov orb je sbb fimull sbb (bad) orl mov (bad) faddl pushfq decl (bad) (bad) (bad) hlt and push mov loop cmp xchg xchg cmpsb repz leaveq lret fstpl fdivrs (bad) notb jmpq subb jno jbe movabs rcl cwtl cs xchg xor xchg sub stos mov test lahf (bad) xor rex.WRB addr32 pushq sbb fcoml xchg rex fbstp shrl lock or outsl (bad) sub adc pop pushfq pushq stc ja xor xchg cs xchg jmpq xchg je pushfq lret mov xchg loope xchg pushfq movslq (bad) (bad) or add repnz jmp rex.RX rex.WB lock callq rclb out jmp lods pop addl movabs mov push clc xchg jnp outsl rex.WXB ss pop idivl adcl movb movabs es callq rex.WR rex.RB rex.RXB cmp xchg enterq test sub imul movabs mov out cwtl stos rex.B lods ja mov jnp pop (bad) test icebp push movsl cmp pushq mov jns (bad) and jmp test add rex.RXB (bad) movabs loope adc xchg xchg sub cli xchg loope cmp xchg cmpsl rex.WR rex.WRB movabs (bad) lahf mov stc adc and (bad) adc xor rex.WR (bad) pop popfq mov stos lret cld pushfq jp ljmp mov xchg rex.WX pop int3 rex.WB xchg std (bad) xor xchg mov retq xchg adc jne imull add rex.W lock (bad) push rclb mov or cwtl lret xchg and cmpsl sbb jns xchg add sub addr32 pushfq rex.X push negl callq xchg pop (bad) mov cli push jnp fcmovne jo push sbb mov movabs jae sub and in movabs insb xor cmpsb fs lock sub (bad) xor rclb movsb popfq mov scas scas xchg jbe mov jbe push add sbb pushfq mov (bad) or imul xchg sub in (bad) jne rex.B pop adc gs cwtl cmp imul pop xchg jne rex.RX mov rex.XB rex.RB imul cmpsb cmpsl mov xor or mov mov mov adc xchg outsl sub (bad) nop jnp out movslq rex.WX mov add (bad) cwtl pushfq xor out out pushfq in sub (bad) rcrl pop icebp cltd rex.RB iretw imul xchg (bad) rex.RB (bad) xchg pop out or sbb movslq pop adc pop xchg mov rex.WRXB fwait ss cwtl out (bad) notl outsb retq (bad) outsb sbb push (bad) rex.XB xor or in cld cwtl rex.WR addr32 push shll (bad) (bad) popfq sbb xlat jno fidivr rex.XB add out pop leaveq rex.RX cmc imul mov add (bad) es xchg rex.WXB rex.WX (bad) movslq mov out clc push xchg adc xor sahf jne ss mov outsb xchg pushq adc jle (bad) je sbb pop jle rex.RXB sahf in adc outsl mov pop (bad) nop cmp (bad) pushfq mov or xchg cli jbe (bad) outsb or jae sbb add rex.X push adc mov iret cmc (bad) loop mov rex.X addb xchg lahf insl mov push pop mov rex.RXB stc xor cltq (bad) (bad) cmp std xchg scas jae (bad) nop and cmpsl cmpsb rex.RX sbb test mov pushfq std rex.RXB and rex.WB add and std andl adc sub icebp cmp (bad) pushfq (bad) push ja (bad) or data16 rex mov xor insl nop (bad) or (bad) mov push (bad) add sbb xchg out xchg insb in sahf push movabs xchg sub outsl jne data16 retq sub xor sub pop mov sahf mov jns add cs retw in sub fs jnp push fdivrs or (bad) (bad) jnp jbe movb jno int cmp and xor rol xor xor xchg scas adc sti incl enterq and testl (bad) xchg je cmp retq mov jmp push xchg (bad) mov divl in movslq (bad) and sub shrb out (bad) test jg jae pop rorb lock fimul scas fdivl rclb push pop fisub sahf sbb and es scas push xchg rex.WXB icebp cmp shlb lock cmpsb and (bad) sti mov or test jrcxz push mov adc movsl adc loope mov clc mov (bad) jae sub (bad) cmp xchg adc (bad) sbb mov (bad) (bad) push push mov callq fildll (bad) popfq (bad) callq add pop int3 rcll pmulhw (bad) xor fs sti jrcxz rex.R data16 nop jns lret (bad) xlat scas rex.W gs pop sub lods cld int fwait hlt or repnz or sbbl (bad) cmpsl sub mov (bad) mov fcom adc xchg out fs add stc jno mov (bad) cmp repnz test (bad) (bad) xlat out cs rex.WRXB jg xchg rex.WX add leaveq pushfq loopne xchg xorl adc xchg and repnz cwtl rex.WR repz cmpsb mov lahf callq fcompl push test push xchg xor mov movsb mov (bad) jmp retq outsl sti sahf sahf sub je rex.X add adc jl xchg fiadd cwtl lock and sub (bad) pushfq (bad) jp mov test stos rex.RXB xchg sbb movabs push scas cmc decl add (bad) (bad) icebp and xchg retq mov movabs xor lods (bad) (bad) xor cmp sar (bad) pushq xchg stos hlt xchg rex.WRXB imul push cmpsl rex (bad) cmp lock cmp jae loope pushfq push (bad) rex.WRX cwtl mov (bad) rex.WB pushq pop movabs lods mov (bad) jge lods cmp cmpsb sbb mov sarl (bad) iret data16 pop add xchg pop or mov xchg mov rex.XB gs (bad) cs mov xchg jb rex.RXB sbb (bad) xchg xor cmp rex.WXB addl adc testb mov pop fcoms adcl xor imul xchg movabs jp (bad) test jo mov sbb test mov pop mov sub mov movslq lea std xchg imul callq push fiaddl xchg lods (bad) (bad) xor xor popfq rex.XB mov cmp mov lock in movsb mov xchg leaveq repz scas divl pop xchg push cmp mov outsb fnclex mov (bad) sub (bad) insl add jg sti or xor mov scas rex.R scas lods fcmovne push xchg rex mov mov (bad) ja xlat scas and andl jnp jmpq mov fcoml sbb and rex.WR or rex.XB loop xor fst mov shlb cwtl bnd retq (bad) ja (bad) xchg in mov leaveq sub xchg and add push add add sub mov ds cmpsl mov cltd mov movabs xchg rex.X pop test pushfq cmp loopne in jrcxz xchg rex.XB insb xchg xchg in stos fiaddl adc rex.WRXB out sub jmp rex.XB fist and test add mov or rex.X xchg jmpq (bad) sub pushq sbb xchg test cmp lahf add lods nop movabs popfq (bad) loopne mov sub subl xchg rex.WXB stc pop in movabs sbb (bad) rex.W rex.B fs cltd movabs xchg bnd ja or xchg xor (bad) ja lock xchg push xor test pop fs jae movsl pop (bad) or mov (bad) (bad) pop or cli (bad) jle imul rex.XB int3 retq out sub vpaddsw or loop jb je in and mov push ss mov jmpq xchg stc fwait mov xchg rex.R push (bad) (bad) in xchg add sub mov punpckhwd movabs (bad) push nop mov xchg (bad) cs (bad) in insb int mov mov xchg mov or xor mov xchg cli sub ja xor jb movabs nop sub cwtl adc (bad) sbb (bad) ja and cwtl loop mov outsb (bad) fdivl and (bad) cmc std or rex.WXB je adc insl lods cmp or mov fadds add (bad) mov mov imul loop stos insl jnp jp outsl mov lock xchg vmovshdup (bad) adc xchg movabs xchg cs mov rorb mov cmp pop jle add sbb rex.WX rex.R out add mov lea popfq cwtl pop add loopne jp sub xchg sub (bad) pop rex.X pop xchg jne cmp fs rex.RB loope movsb addr32 xchg cmp push sbb xchg pushfq (bad) add rex.WXB lea mov je xchg push movabs rex.WB pop ss add vmovaps rex.WXB retq (bad) fsts rcrb rex.WXB lahf push jo (bad) add leaveq fwait jb sbb fiaddl rex.RXB xchg mov lret (bad) sti sub xchg (bad) mov cs xchg (bad) pcmpeqw xchg xor (bad) xchg add (bad) cmpsb std rolb in xchg mov jg (bad) xchg jb lock or jno rex.WR rex.WB lret mov in out pop callq (bad) in test jl xchg mov lock (bad) xchg (bad) out (bad) cmc rex.XB fiadd mov test mov (bad) (bad) imull sub xor pop mov xchg push and push xchg (bad) nop movabs cmp cmp mull mov (bad) sahf sub sub push mov (bad) cmp jae ja jmpq adc jrcxz orl rex.RB movabs xchg push mov sahf pop popfq int3 pop nop sbb popfq and retq mov rex.X rex.WRXB loop fwait mov and (bad) xchg xchg xchg mov rcrb outsb (bad) cwtl out pushq and (bad) retq negb negl fsubrl xchg lods sub sub mov xchg icebp imul sbb cmpsl (bad) jno out mov xchg push (bad) popfq movabs pushq xor pop outsl in and (bad) jne or adcb jg jl (bad) cmp clc xchg orl (bad) pop movslq xchg stc stos hlt cwtl loope rex.W (bad) push divb adc rex.WRXB movabs (bad) pushfq xchg cmp mov mov sbb movsb cltd (bad) out rex.WB xchg callq mov lea mov mov pop cmp (bad) (bad) xchg cmpsl sbb xchg rex.X jnp lret outsb (bad) jle js (bad) (bad) push mov sub test xor mov add stos sti nop test ss (bad) icebp test outsl in (bad) (bad) mov xor stos loop xchg jb xchg lods stos rex.R (bad) (bad) lods xchg sub push sti add xchg movabs add and rex.WRB rex.WXB test add mov std fldl int retq or movabs or mov mov push sub fstps nop (bad) rex.WRB mov sahf (bad) lods sbb sti xor imul xchg repnz movabs add roll out movabs lret rorb jnp imul (bad) mov jo (bad) cltd test loopne xchg push (bad) xchg rex xchg (bad) or add (bad) in jle (bad) cwtl xchg cli std and xchg loopne hlt xchg movsl or lret popfq sbb jge outsb jle mov movslq mov rex.WXB (bad) (bad) sub mov cmp add xchg adc retq jg (bad) scas ficomp out in sub cltd adc jl pop cmp push divl jae jge rex.X jbe push stc rex.WRX mov cmp cltd mov (bad) xor push pushq add fcomip divl nop push jno sub push cmpsb cwtl cwtl xor (bad) cmpsl nop and fsubl mov callq or rex.WB xchg mov xchg outsl (bad) repz and insl and sahf loopne andb or cs movsl (bad) xchg xor insl jbe in insb and xchg addl rcr in (bad) xchg (bad) (bad) outsl jae gs sahf test or pop push cwtl rex.WRX sub adc xchg xchg in (bad) shlb mov and sar and (bad) jmp pop icebp pushfq mov xchg or out xchg mov mov movsl addr32 sbb in sbb mov (bad) mov mov add movsl rex.RB rex.WRB fwait vandnpd rex.X and rex.WR pop xlat out fist (bad) xchg movabs mov add xchg jne,pn and mov gs movabs cld cltd outsl (bad) fstps movabs or addr32 cli pop cmp nop or adc (bad) and sbb xchg add int3 fucomip out nop (bad) stc sub gs or sbb mov jp imul rex.RB rex.W pop (bad) (bad) lret (bad) add mov (bad) rex (bad) stc and ja sub rex.X rex.WR (bad) mov pushq insb mov (bad) xchg in mov scas sub (bad) pop rex.RXB rex.WR or ss out imul (bad) xchg mov rex.WRXB mov insl xor or retq (bad) data16 pop (bad) sti mov add rex.WRB lea out mov mov xchg (bad) jp icebp fcoml or cmp jnp (bad) pop push push retq adc data16 cmp iret jge pop sbb movabs stos (bad) mov pop rex.WRX cltd lods xchg int jmp nop lcall mov lea sub (bad) (bad) incl push or ja lret shr fdivrl or jge outsb ss jb movslq popfq movabs rex int3 cli (bad) movslq rex or lea or pop ss loopne pop jge xchg sahf add adc lahf imul fldenv imul sbb ds sbb jg (bad) pop xor imul xor jnp (bad) movslq sbb xchg (bad) mov ds xor mov mov retq callq je cmp rex.WRXB xchg (bad) mov jnp movabs lret rex.X (bad) loope mov mov sbb repnz or mov add jg and (bad) nop idiv or adc js or mov mov rex.RB lea pop jge out and (bad) mov sbbl add cli rex.RXB (bad) sbb or or fwait (bad) jns xchg (bad) (bad) nop adc int (bad) (bad) rex.WRX xchg (bad) in xor jns leaveq push rex.RXB xor rcrl pop (bad) cmp push adc jmpq cmp (bad) jg or push xlat std and adc sub mov mov push lea mov fstpl or pushq xchg xchg (bad) in movslq lahf gs mov or (bad) movsb std sub rcll and (bad) add ds (bad) pushq mov sahf sub pop add pushq cmp ja sub pushq cwtl repz rex.WR (bad) imul or cltd (bad) xchg mov or rex.RX es outsl (bad) (bad) stos iret cmpsb (bad) mov imul mov mov (bad) ja jno rex.RXB xchg cltd test (bad) int sahf mov sbb sbb jge sub sbb pushq rex.WRX adc xorl jno xchg imul (bad) pop pop (bad) (bad) fnstenv in (bad) popfq outsl jmpq sbb sub sbb pop sub add push jmp repz (bad) xchg insl pop pop cmc rex.WXB jnp xchg adc nop mov cld (bad) adc add (bad) mov mov int (bad) pop pop or out lea outsl pushfq outsb rex.RX rex.WR rex.X scas push xor mov stc shl and sahf (bad) pop jp mov addr32 (bad) stos push loope and (bad) cltd add or lahf mov (bad) (bad) (bad) jno movslq push or xor (bad) ja (bad) sbb push sub jns pop popfq xchg jnp testb xchg jb and pop xor xchg adc rex rex.WRX jmpq xchg (bad) pushfq fsubr stc xor push rex.B add rex.X sub (bad) js cmc mov orl (bad) adc mov (bad) jne scas xchg (bad) mov jmp (bad) pop xchg lahf mov lret addr32 (bad) fistl (bad) loop xchg jg ror mov jle lahf std shll pop pop push insl cmpl jne mov mov mov stc cwtl mov loope or enterq xchg leaveq js (bad) (bad) retq out xchg cmp mov iret callq (bad) rex.WR pushq notl sbb leaveq push sahf retq jmpq flds (bad) jns (bad) (bad) pushq xchg adc xchg cld lret xchg jnp rex.W (bad) test (bad) pop sbb (bad) callq push cmpsb sub push sub jrcxz jbe xor (bad) pop xor jge loop jg or pushfq rol (bad) shl rex.RXB fstl addr32 adc xchg sbb and stos sbb and mul mov in sub and retq and shrb rex.W fwait imul icebp pop cmp cmp stos and rex.R int3 (bad) mov xchg rex.WRB xor insb cli cmp (bad) movabs addl callq and mov sbb xchg push out xchg rex.WRXB mov xchg jg (bad) in xchg addr32 adc (bad) sbb stos pop xchg fcoms and cmp mov jnp jns jmp movabs callq loopne sti pushfq rcr adc cmp cs loope (bad) sbb pushfq or (bad) pop mov lods mov rex.WR repnz (bad) (bad) stc js mov cmp cwtl (bad) jns ffree (bad) push incl cwtl (bad) lea sbb sahf lock movabs (bad) cmp mov ja jae hlt xchg push mov add xor jge jne xchg bsr sub fist push mov shll cmp rex.WXB xchg sahf and jge sbb mov jle pop xchg cmpsl (bad) test jg mov movabs sub fildll (bad) jrcxz push jp pop xchg xorl rex.WR sub mull cmpsl (bad) jl test xchg in xchg (bad) jns adc jmpq sbb lahf mov enterq icebp movabs or xchg xchg addr32 (bad) push nopl movsb int insl fcoml movabs cltd stos stos (bad) mov gs mov (bad) pop add rex.WXB imul fidivl mov rex.B es xchg mov sahf insb jge xchg rex.X movslq lods mov int3 retq xlat out xchg movabs movsl or xchg popfq xchg or addr32 addw ss add callq xchg cmp loopne mov outsl fidivr rex.RX movabs xchg cli rex.WRB loope loop sbb out imul xchg (bad) mov xchg pop ja jp push gs nop mov repnz (bad) xor fs xchg add and xchg cwtl std jmp pop (bad) jbe xchg adc xchg stc (bad) rcr xchg xchg scas adc movsl scas in sarb test cmp in clc gs jg xchg push (bad) xchg nop (bad) js pop xchg pushq cmp mov jns sbb fcoms (bad) xchg lahf cmp (bad) (bad) (bad) loopne popfq lea out jmpq mov rex.WRXB sarb sahf cmpsb imul rex.WR (bad) jbe callq sbbb (bad) leaveq mov ja movabs xlat pop mov mov out pop or (bad) sub sahf xchg fdivrs sub cmp insb pextrw add push ficompl in pushq and jb (bad) lea pop (bad) pushfq leaveq insl cmp or jnp xchg jno (bad) xchg and lock xchg js mov (bad) xchg pop clc stos (bad) pushq jno xlat repz hlt jl xor xchg in (bad) scas or mov pop lea rex.R adc jnp jns lock rex.X movsb xchg in fisttp mov fwait sub (bad) scas jmpq rex.WRB add scas mov adc adc jo mov in sbb cmp xor sti jbe (bad) and (bad) sbb sbb push lods xchg fisttp (bad) xor (bad) sti pop add insl add xlat sub mov mov push je (bad) mov (bad) jmp xchg and and vmovdqu outsl xchg jmp rex.RB xchg out cli addl mov subb fistp mov insl (bad) pop xor sub (bad) cmp add sarl mov std popfq outsb pop imul gs cmp (bad) adc jg out jne pushfq sbb (bad) pop mov (bad) scas es mov mov lahf (bad) movabs movslq cmc sub imul push rex.X (bad) or or movabs movabs in xlat movabs jp mov hlt fcomip stos sbb jo in or cli gs cltd fs cmp leaveq push mov adc xchg rex.WB mov and or xor je jne retq push lea push int jno icebp (bad) (bad) push stos rex.W data16 ficomp xchg mov (bad) (bad) mov sub mov jno jo sbb jbe clc cmp leaveq (bad) xchg scas cs sbb insl jbe or adc mov xchg in fadd rex.X stos (bad) sub imul (bad) test xchg (bad) adc (bad) mov (bad) xchg negb jge out adc sbb pushq pop rex.RXB (bad) jbe retq mov pushq cmpsb pop rex.X xchg fistpll jnp sbb leaveq rex.WX movslq jbe addr32 rex.WXB cmpsl loopne test out fs sbb outsl (bad) sub add cmpsb rex.XB mov pushq mov cmp fcoml mov (bad) (bad) (bad) cld pushq pop fisttpll cmpsl stos fadds test (bad) out (bad) insl (bad) sub xchg movslq cld cwtl and je pop lods rorl (bad) xor (bad) data16 nop adc xor xor sub hlt xchg sbb fstps lods negl mov ja orl xchg xchg push jbe rex.WX cmp data16 mov and (bad) (bad) gs and std and imul movabs mov fisttpll movabs push fisub (bad) rex.WRB insl or mov mov or rex.RXB rex.WXB iret stc or lret pop add imul jbe mov rex.RB movsb pop xchg nop lea int3 cmp jno sbb scas jnp hlt sub jmp rex.W and sbb fidivl mov (bad) push cmp (bad) cmpsl rex.WRB rex.WRXB jno cltd loopne cmp (bad) (bad) popq push movabs cmpb (bad) mov mov rcr mov pop (bad) jmp addr32 cwtl std or cmp cmpsl icebp sahf (bad) add and (bad) xchg or (bad) ss popfq fistpl push (bad) rex.XB mov cwtl sbbl movsb mov (bad) cwtl rex.RB nop and jo out mov push mov outsl movabs pop retq xchg jnp rex.WRB sub mov outsl xchg int lods movsl rex.R ds test sub mov shrl sbb out mov and sub fisubl out xlat loop jae shl add stos lea xchg adc fstp out movabs push jae out jg pop insl movabs test loope js jle mov push sbb jg xor movabs vmaxsd push xchg xlat or add mov (bad) sahf xlat clc scas cmp scas rex.XB mov pop xchg rorb pop jmp jg rex.XB (bad) jno cmpl mov retq add cmc sub pushq mov (bad) movabs push mov pushq sahf or movsb lea cmpsl add test xchg idivl adc (bad) jp adc (bad) int pop pop subb loop rex rex.WX mov jne (bad) mov sub test fs pushfq push (bad) rex.WR xchg in (bad) (bad) stos lahf movabs or fist mov push shll xchg xchg jbe cmp js sub xchg (bad) xor or pop and cli (bad) xor lods cmc cmp sbb jmpq icebp lea mov ss (bad) (bad) (bad) (bad) popfq lods lods movabs pop std xchg push sub adc (bad) movabs mov in outsb jns xchg (bad) add adc cwtl data16 and retq outsb clc (bad) pop add pop test sahf cltd stos mov nop leaveq out icebp (bad) ja outsl test (bad) int3 fs scas (bad) adc nop movsb mul jmpq (bad) (bad) rex.RB fdivrs cmc rcrl fmull lret repz stos (bad) out loop xor and test cmp out es mov mov rex.X (bad) sbb cmpsb or rex.WRXB int mov (bad) xor xchg out pop cmp sbb nop cltd cmpsl in cmp xchg adc cmc (bad) jnp fwait mov (bad) rex.X mov (bad) sahf nop mov in and cmp out mov jnp mov ja in out jrcxz pop xchg jns cmp (bad) xchg xchg xor (bad) rex.WR mov leaveq (bad) clc xchg movsl cwtl fiadd adc imul xchg (bad) (bad) jbe repnz out xchg insl (bad) xor or xchg or cmp test rex.R cs rex.RB xor sbb sbb sarb xchg (bad) rol addr32 pop lods mov push (bad) mov add rcrl cmp xchg adc cmpsb mov jno lret pop repz rex test add pop mov (bad) (bad) (bad) xchg (bad) or mov fiaddl out retq pop cld loopne or rex.RB xchg loopne int3 std lret in loopne fsts outsl repz mov (bad) rcrl pushq jo mov repz (bad) mov pop mov js and pop mov lea push and notb pop push pushfq jg (bad) jl pop (bad) and xchg notb (bad) pushfq sbb cmpsl pop (bad) pushq and (bad) (bad) pushq xchg push (bad) (bad) jbe out fsubrp sbb push outsl push int3 sahf xlat pushq mov adc mov cmp rcrl sub xor (bad) mov (bad) out or mov mov fild sarl xchg add xchg (bad) or xor ja pushfq jne sbb mov js cmp xchg jb (bad) jp movsl jnp ds lret fstps and rex.RX fisubr (bad) xchg sbb mov jle mov xchg (bad) movslq push rex.RXB push mov lea lea ss and movabs callq and gs enterq or mov rex.WB movabs cmp mov (bad) insl push xchg push fdivs push (bad) sub movb add (bad) in xor jmp rex.WB add clc (bad) cmpl outsb sub movl imul jbe fisubl xchg sbbl std nop jg xchg sbb or sub push (bad) or cmp cs mulb or outsb sbb int3 pop pop sbb and push pop iret test sbb (bad) xchg adc adc popfq nop sbb outsb rex.W int test rex.WX data16 or sti or xchg testb sahf fucomi (bad) lea loop rex.R cmp sub (bad) sbb movslq jrcxz pop pushq retq and xchg outsb fs mov lret fdivl subps jmpq subl rex.WRXB rex.RX movups mov add and add lea xlat jmp mov pop movabs je xorl (bad) je (bad) xchg adc jb js sbbl leaveq movslq out nop loope (bad) pushq test sub mov movabs jmpq fnsave (bad) roll jmpq in jge cmp and idivb out push and movsb stos (bad) (bad) mov popfq mov (bad) test test (bad) adc callq (bad) stos (bad) rcll sub out adc rex.WRB (bad) jg cmp pushq movabs leaveq iret neg shll lods sub (bad) jle je push ja int3 stc and or or (bad) sbb int3 (bad) xchg xlat lock xlat pushq add add gs or cltd jl andl sub xchg ss (bad) cli and (bad) jno ds sub pushq (bad) cli jmp mov pushq nop sub or xchg adc (bad) rcrb mov out adc mov (bad) xchg xlat (bad) push push (bad) rex.WRXB pop (bad) fiadd xchg jrcxz sbb jmpq (bad) outsb andl pop rorb mov xlat xchg and adc fnclex insb loope mov sub sahf pop add callq sub add xchg adc pushq loopne (bad) pushq (bad) pop jle mov mov jb (bad) and pop popfq clc (bad) cmpb es addr32 nop cmp fimull cld loop jrcxz seta jb callq (bad) fwait cwtl rex.RB mov rcrb sbb (bad) xlat test (bad) rex.W xacquire mov popfq mov pushq movslq jo ss mov xor jnp and xchg mov ds push (bad) mov pop sub fldt retq fbld movabs or mov int cmp fs test js movsl xor (bad) jge fmuls xchg push and out (bad) and movsb cmp cs or out stos fs (bad) xchg jp iret test xor adc fsubr rex.WXB rex mov sub and xchg xor xchg (bad) cmpsl divb xlat jb movsb xchg jl push add rex.WRB mov adc and xchg (bad) sub lea (bad) in jle xchg sub fsubs (bad) loop sahf xor cs cwtl mov cmp stos sahf (bad) jb jnp lods pushfq mov cmp (bad) push stos xor (bad) rex and cli xor (bad) sbb (bad) sahf hlt rorb (bad) (bad) sbb xchg (bad) in movsb cmp loope sahf jmpq addr32 cmp subl xchg mov pop (bad) jo sbb ja rex.WRX loop xchg pop push imul xchg lea test mov mov stc (bad) hlt out ja enterq xchg insb add (bad) sti or cwtl jge (bad) je xchg (bad) repz jrcxz in mov jge sub cwtl xchg mov stos stos rclb jle (bad) cld (bad) jbe (bad) pop sub int3 test stos (bad) (bad) (bad) adcl in callq push addl jl xchg iret xor es xchg add fcmovnu (bad) pop icebp (bad) rex.RXB jl shlb (bad) xor xchg or repz rex.WB stos mov je sahf mov (bad) rex.RX add adc mov jo push mov xchg mull (bad) or xchg mov mov push rex.W rex.WB nop sbb ds sti scas idivb movabs int3 test in mov je cwtl mov (bad) movslq (bad) and pushq mov (bad) scas mov loop fcomi loopne mov movslq mov sbb xchg mov stos sub sbb pop jrcxz (bad) rex.RXB movslq (bad) xchg xchg sahf rex.WRXB cwtl sub mov lock mov stos mov ja rclb sub xor pop je xchg rex.WRX rex.WRXB rex.WX mov mov cmc xchg retq (bad) nop enterq std lods shr fildll jne pop (bad) xchg xchg rex.XB shr rex.WRB (bad) (bad) mov lfs fucomip out jbe movabs pop nop mov push imul cmp rcll test xchg std jnp pushfq push xchg (bad) xchg lret sbb scas cwtl cmp pop imul (bad) cwtl (bad) add data16 cmp push fcoml (bad) ficomp sub mov rex.WXB (bad) int (bad) jno gs mov sub gs (bad) test mov push testl jb ja and movabs lret cwtl mov sub mov xchg rex.RXB jl cmpsl shrb pushq jrcxz sbbl mov mov xchg (bad) pushq rex.W xchg (bad) pop sbb xchg adc sub push jle push movabs test xlat (bad) movsl rex.X push mov cmpsb or jg mov sarb rex.WB xchg cmp mov (bad) iret (bad) (bad) scas out test outsl jle cltd pushfq and xchg (bad) gs jl movsl imul jg push jno rex.RX rex.XB jmp movabs pop or mov (bad) mov cmc movsb pop xor or add out ja rex.B xchg xor stos out adc je movabs ss sbb (bad) xlat (bad) (bad) in xchg stos mov jae rex.WRX cmpsl out retq retq sahf xchg int mov adc mov mov pop clc xchg stos movabs (bad) rcll (bad) addl enterq mov (bad) mov out xchg and xchg (bad) neg scas (bad) cmc testb add xchg jns xchg rex.WRX movsb adc nop (bad) (bad) mov stos or jne or pushfq rex.WRB xor cltd loopne mov add xchg fcomi fisttp xchg nop fcompl lret (bad) test xchg rex.WB mov pop rex.X cs xchg fadd jne in sarb jne movabs popfq lods mov push rex.WR shrb imul (bad) jmp out in cmp xchg add ficoml loopne cmc out mov add (bad) rex.WRB sub (bad) (bad) xlat xchg cli std int jrcxz (bad) mov jl rorl rex.R cmc out int3 loopne xchg mov add fdivrp shrb out fstp push rex.WRXB loope movslq nop xor fimul jne or push movabs notl xor sub sbb movabs shll (bad) scas (bad) sbb (bad) leaveq cwtl (bad) mov insl xlat out mov leaveq pushfq popfq mov (bad) jge (bad) idivl sti xchg add (bad) push (bad) (bad) xor mov jg hlt lahf imul cwtl ss jge (bad) jl or negb cmp sbb ja mov in jge xchg ja insb add pushfq cmpb out (bad) pop pop rex.RX sbb (bad) pop (bad) jno setle (bad) push nop add orl fsubl (bad) mov fsubs (bad) cwtl (bad) adc rex.WRXB ficoml (bad) (bad) sbb pushfq lock xchg insl test out and sub (bad) jmp xchg sahf (bad) and mov nop stc es rorl loope jrcxz cltd sbb popfq nop sbb (bad) or xchg (bad) and and outsb movabs sbb cmpsl pushq and stos jge push sbb rex.WR fisubl cmc mov xchg (bad) xor push rex.RXB stos je fisttp or insl or movabs outsb fild xlat stos (bad) movslq and repnz sub (bad) mov repnz cli sub mov mov (bad) cltd rex.WRXB mov (bad) je cmp and xchg mov jrcxz xor scas pop mov cmp (bad) lret loopne (bad) divl out nop adc (bad) add xchg (bad) (bad) (bad) sbb stos xor imul xor shl (bad) callq stos rcl jmpq outsb sub xchg (bad) mov rex.WRXB loopne mov (bad) add (bad) cli xchg scas cmp push mov mov movabs outsl or movabs movslq mov xchg mov lea push pop add mov sbb xchg (bad) or cmc jb (bad) andl je leaveq mov insb rex.WX jno (bad) (bad) and and adc (bad) mov pop cmpsl xchg repnz std popq (bad) jmpq rex.WX in data16 rex.WR jne imul sub retq adc pop cltd jae data16 jns cmp jmpq fcmovb pushfq test xor bswap cs sub or push rex.WRX add sbb and jo pop in and sbb jmp pop (bad) pop xor sub sub cmc and xchg cld je pop icebp mov pushq pop mov pushq or jb jg gs adc lea movslq xlat mov loope or sbbl xor rex.WR lods (bad) or mov sbb push or in std push jmpq rex.WRXB sahf pop cmc (bad) jp sbb decb xchg xchg insl adc jmp mov (bad) js scas in pushq fs je lahf (bad) and rcrb rex.WB mov mov or xor xor popfq push loopne (bad) add or hlt nop jmp pushfq std sbb lea sub and cmp xchg xlat jno xchg mov cmp jae jno cmp xchg roll push mov xchg (bad) (bad) fucom repz jrcxz xchg callq push pushfq retq xchg stos rex.WRXB movabs pop xchg and hlt push and rex.RXB rex.RX add xchg bnd jrcxz rex.WRB and push rex.WRX out in sub loop sbb push or or add movabs lret (bad) loope add jno xlat enterq mov rex.WRXB ja xchg movsl leaveq imul in cmp (bad) xchg mov (bad) push shl adc or outsb (bad) or es adc leaveq xchg (bad) ja xlat mov shrl fadd pop rex.WB data16 adc xchg xor mov push lods test (bad) retq adc push push cs mov lods cmpl (bad) mov movslq pushfq js rex.R jb addr32 cli sub mov ds rex.WRX rex.WRXB fstpl fs js (bad) xchg mov pop test movabs cmp xchg or cld mov loopne xchg cmp iret fbstp xchg rclb cmc xor xor or repz pushfq sahf in xor shl xchg or jo mov fsts adc xchg mov cmc (bad) sbbb (bad) rcrl loop (bad) xchg cmp sub jno (bad) rex.R cmc sub (bad) cmpsl notl (bad) hlt cmpsl mov cwtl xchg lret xchg rex.WRB (bad) xchg movabs rex.B sarl mov pushfq mov xor fwait outsl loopne xchg (bad) jrcxz cs ds jnp xchg fs mov jo cmp pushq jg lret (bad) in adc fidivl rcll and in sahf hlt xor sarb xchg push mov imull xchg xchg lock mov ja xchg sbb sbb rcll out pop or (bad) mov xchg lock push mov push xor adc xchg mov outsl out mov movabs jne or mov (bad) cwtl xchg (bad) movsb pop fs jns mov and xchg and cwtl loop xchg loopne fsubr (bad) sbb (bad) rex.WRXB push insb mov cmpsb pop movsl std retq cmpsl adcl adc decb js mov (bad) push movabs (bad) mov xlat cmp negl out mov xchg retq incl mov and pop push jb sti (bad) xchg xchg in lret stos cmpsb xchg test rex.WB sbb mov stos lahf movabs cmp sbb mov xor enterw movabs sub out pop int mov je cmc mov (bad) scas pop and pop adc addr32 movabs (bad) cli xchg jnp xor or jae mov mov divl jb and lods cwtl mov cli gs cmpsl (bad) cld mov cmpsb mov enterq imul sbb outsb xchg lock mov test adc and in jg or mov test (bad) jo rex.X sbb mov xor pushq adc (bad) callq sub movsl jo (bad) xchg (bad) push cmp iret cmc push hlt xchg rcr and or fwait sahf subl gs cmp cltd out icebp xchg movabs cld cwtl jrcxz push scas out int3 xchg push lret in jmp test sahf xchg and fidivl or xchg cmc iret por xlat mov xchg mov or xor push cmc cwtl (bad) rex.WX (bad) sub sti xchg jb ss lods add xchg pop cmp (bad) lea rol out xchg adc xchg insb callq cmp (bad) lret sbb movsl icebp fistl pushq fstl push or xor xor (bad) sahf or and rex.RB lret sub or mov repnz xchg test xchg (bad) cld (bad) iret cmp jle mov rex.WRX cmp jae adc loope sub sbb cmp add out in lods std stos xchg adc xchg jne xchg pushfq rex.WRXB (bad) sub cli in xchg mov and mov xor adc rex.B xor lahf (bad) push jo mov and xchg xor retq sbb sbb out fmuls xchg add adc xchg sub rex.WRX mov out callq lock xchg test retq jp rex.RB push mov out jmp mov enterq xchg jg and xchg std push out mov or (bad) and movabs movslq std cmc sub out (bad) ss test movabs movslq stos mov cmp jae rex.WR addr32 mov mov (bad) push mov pop rorb mov sbb pushfq addb cmp shr fiadd mov int3 push cmp leaveq popfq or cmc or add jnp clc add scas and ficomp sbb gs (bad) fistpll mov cmpsl mov (bad) adc or sub jg test (bad) add ficom cs pop movabs (bad) jge xor fcomps in lea incl adcl sahf xchg cmp xlat adc (bad) pop jnp jle add mov rex.WR movabs insl or or sbb jne and and fnstcw sahf (bad) (bad) rex.WRX sbb enterq callq scas xor push adc rex.RB jge pop (bad) out jbe (bad) jnp sub clc cmpsl shrl xchg (bad) xchg xchg and gs xchg fisttpl lea (bad) pushq out fisubl (bad) outsb idiv int (bad) rex.WR add loopne fs (bad) rex gs mov xchg mov movsl cmp (bad) popfq loope (bad) stc adc (bad) movaps rex.RX movsl (bad) pop cmpsl xchg xchg rex.WR scas rorb add popfq mov and (bad) sbb cmp xor xor (bad) ja nop sbb (bad) leaveq sub cli mov mov repz fs cmpsl movabs rex.X push cmp sub mov movslq push leaveq loopne outsl rex.RX loop (bad) xchg ja (bad) (bad) mov pushq (bad) jb and (bad) (bad) cmp xor add (bad) pop (bad) (bad) or mov lock (bad) push imul jnp cmpsb (bad) lods push (bad) cmc cwtl (bad) insl retq xchg rex.RXB adc (bad) jae nop (bad) std mov sbb (bad) jg mov and sbb enterq test lods imul fcoms (bad) and lahf jno,pn hlt (bad) int loop notb pop stos jge icebp (bad) xchg sub movabs pushfq adc pushq mov rex.X mov idivl leaveq in (bad) loop (bad) xor cmpsl jmp add adc (bad) mov mov imul push retq jge add sub out add add imul gs mov (bad) mov rcll xchg or push leaveq (bad) (bad) push adc xchg (bad) stos rex.RXB (bad) fcomps xlat (bad) cmc (bad) lcall pushfq and jno (bad) add shrl fnstenv lods retq outsl sub jae frstor imul mov nop stc mov (bad) testl sbb cld iret (bad) xchg rex.X (bad) jle js rol cmp rex.WRB outsl push test push or lea insb xlat pushq (bad) shrb (bad) (bad) outsl (bad) pushq loop es push lahf (bad) cmp mul rex.RB xchg jbe or xadd repz jmpq rex.WRB movabs loope jb adc add xor cli mov xchg (bad) jge (bad) cmpsb mov cmp es pushq rex.RXB mov adc xchg xchg (bad) jb or or adc movslq xchg cmpsb retq int nop sbb loopne rex.WRB loope push mov or or mov add push cmc movabs xlat push (bad) movabs (bad) outsl lods popfq rex.RXB (bad) xchg mov (bad) rex.B iret mov stos lea out (bad) callq lea mov (bad) cwtl mov insl lods (bad) stos mov jmpq scas sahf outsl or jl pop icebp (bad) stos in outsb xchg adc pop xchg (bad) cmp adc out fdivl rcr fisttp sbb jmpq jl repz pushq pushq mov push xchg loopne mov rex.XB add or mov loopne stos mov rex.WRX xchg movabs pop rex.RX jmp add scas mov (bad) repz sbb mov xorb cs mov (bad) mov lret rex.WX addr32 rex.WXB xchg pushfq (bad) adc push or rex jmp xchg cmpsl neg lods xchg rex.WB ds sbb xchg repnz test (bad) vmovdqu scas shrb xchg loopne rcrl ss js adc iret (bad) adc jle (bad) cmp lock sbb fldln2 push fcompl jno xchg and lret movabs lcall adc pushfq rex fwait xor mov jl rex.RXB xchg or mov lea (bad) in hlt testl (bad) out fsubs xor xchg (bad) rex.WRB xchg cmc xchg xchg sub (bad) fisttp cmpsl jne lahf (bad) ficom xchg xor pop jg jl mov and mov (bad) xchg mov push movabs sub fdivp sbb pop scas sti (bad) xchg popfq jns mov jle mov fnstenv nop xchg (bad) pop pushfq (bad) insl jrcxz scas sub ficom popfq xchg clc shl and or push fdiv sbb fistl rex.RXB add pushfq push (bad) (bad) mov adc stos out nop fwait jae sbb rex.WX cmp xlat nop and rex.WB out ja out sbb stos cmp pop jnp and in adc xchg (bad) xor xor (bad) pushq (bad) shr cwtl lods adc hlt cmp shl out movslq push pop sbb mov idivl push mov xchg rex.X sbb loopne or pushfq cmpsb movsl xchg movq loop xchg jne mov xchg mov iret cltd div fiaddl addr32 test (bad) lret (bad) rex.WRB and sahf xchg and (bad) sti stos sahf shll (bad) fimul psraw or jae pop movsl pop and test nop shlb xchg xlat cmp jnp pop mov gs movabs icebp test sbb in mov retq out outsl sub (bad) sbb mov cmp repnz xchg (bad) jl mov xchg cli or lock int3 xchg shrl xor mov orb xchg sahf fiadd retq out mov out xchg fcomps pop test hlt mov orb cwtl jne lea adcl cmpsl adc addr32 or insb (bad) mov nop adc xchg (bad) xor insl pop xchg cs (bad) out loop pushq (bad) nop sub fcompl push xchg (bad) jnp pop pop xchg insl mov adc sahf and push addr32 rex.RXB movabs ds xor lret stos rex.WX fistpll pushq ja rex.W add decl outsb xchg rex rex.B es xor outsl sbb (bad) jno xor repz nop rex.RXB enterq loop flds pop (bad) out (bad) ds cmp pushq cmpsl jmpq add nop (bad) sarl jnp lods xchg lret cltd push rorb xchg cmp mov stos out mov lret (bad) jnp sbb icebp push push fiadd test (bad) mov repz pop gs cltd rex.R es sti mov out xchg xor loopne scas mov xchg lahf (bad) xchg xchg mov lcall movabs xor xchg movslq (bad) pop rex.XB xchg cmpsl or sub out rex.RB in fdivrl test jl lods insl pop fwait adc (bad) pop repnz enterq movabs scas pop sub lret sub pushq icebp mov scas pushfq (bad) (bad) rex.WXB xchg movslq movslq jb (bad) jle xor lahf mov (bad) adc and and sarb ds and xchg in xchg test cmp outsb or rex.R movslq (bad) jo sbb xchg and test test xlat xor lret leaveq mov xchg xor mov in pop fnsave or cmp rex.WXB fnstenv sub xchg add callq xchg push jb xchg test scas outsb sahf out add lretq pop pop data16 xchg add pop (bad) iret xchg retq mov movslq sub (bad) enterq loop fistpll (bad) (bad) je lods sahf (bad) rcll cmp (bad) xchg nop rcrl sub xchg (bad) rex.RX movabs outsl rex.RXB xchg mov lret cmp (bad) xchg push imul xchg es jl rex.R sahf push cmp rex.WXB icebp pushfq rex.XB or and cmpxchg sbb fstpt adc or push (bad) and xchg and rclb jg push (bad) pop sbbb xchg sub shrl mov ds pop orl (bad) fisubrl adc fsubs lret out rex.WR sti fwait sub (bad) imul lea cmp adc hlt pushq jle int rex.WRXB mov add std and fnop (bad) push mov rex (bad) (bad) addr32 in andl (bad) xchg (bad) bnd (bad) movsl sub cld sub leaveq (bad) mov (bad) imul jnp pop or cmp lahf push (bad) pop jg insl pushq callq or (bad) (bad) rex.WB movabs add sti (bad) mov seta stos cltd xor cmpsb cmp adc pop cmp mov (bad) mov std lret cmpsb mov and mov sahf loopne adc jns jb movabs (bad) out cmpsb addr32 mov mov (bad) xchg xchg sub pop sbb imul (bad) mov rex.WXB mov (bad) rex.WRB imul mov rex.X rex.WRB iret data16 xchg sarb push out add clc (bad) sahf pushfq mov stos xchg stos movabs imul movabs sahf (bad) push jmp rex.WRXB cmpsb out pop pop cld jns (bad) insl cld xchg cmc xor cmp scas cmp cltd insl movabs adc xchg rex.RXB movabs stos fmull push jp jmpq adc cmp push mov loopne cli movsl cmpsb roll (bad) adc xor sub out push or mov fisubr mov cltd lods rex.X movabs es jrcxz fildl (bad) subl fidivrl pop iret xor xchg imul je (bad) popfq mov push adc xchg test xchg (bad) (bad) xor out xchg jp sub mov test (bad) movsb (bad) rex xlat mov push cs xchg jg and (bad) nop adc sti xor in popfq sbb (bad) out push rex.W mov cltd mov mov rex.WRX bsr movabs adc loopne cmpsl sub xchg lahf movslq pop xchg pop rex rex.WRXB rex.R fisttpl xchg test es jrcxz scas add (bad) (bad) xchg lods cmc xchg or idivl (bad) jo sbbb push jp cli pop xchg test xor mov (bad) je movabs (bad) xchg pushq jne push xlat push xor lods cltd rex.WXB stos xchg out test sub movsb add (bad) pop popfq rex.WR (bad) add (bad) mov lret in movabs in sub cmpsl xchg pushfq movsl pop movslq push cmpsl scas sti icebp push stos mov and in rex.WRXB iret xchg sub pop or jmp outsl loope fsub xchg addr32 xor and (bad) cwtl lods movsb lahf mov fistpl (bad) mov ftst loope fdivp push (bad) rex.W rex.WR fwait add loopne fisttpl rex.WRB push ds xchg rex.WB add fstl (bad) push rex.WRXB scas fs je (bad) lea cmp scas sbbl sub rex.WXB (bad) or movabs rex.WX mulb or movsb xchg fisubr negl adc xlat cmpsl pop cmp leaveq (bad) sub xchg jg rex.WX insb xor add movsl push adc out imul xchg rex.X rex.XB xlat xchg repz xor fisttpll jp rex.WRXB rex.WXB (bad) xchg ss lea movsl int3 jmpq xchg or jge (bad) sahf gs rex.R jo incl xchg mov push repz cmp adcl xchg retq jp sub (bad) mov test xchg lahf sbb loop cmp mov rex.RB mov jbe hlt (bad) pushq adc sti lods gs rcrl insl jle pop cld push pop (bad) xchg mov movsl rex.B add gs and jo or cwtl lods xchg (bad) std int3 in sub pop (bad) out xchg (bad) mov (bad) popfq (bad) (bad) pop cmp mov sbb rex.X decb mov (bad) outsb rorl and or sub test sub pop (bad) rex.X mov sbb mov in (bad) (bad) rclb cs sahf adc test sti (bad) xchg pop mov xchg mov or std out push (bad) (bad) rex.WX scas mov sbb sbb (bad) out (bad) mov rex.X sub pushq loop jne mov mov rex.RB pop rex.WRB rcrl mov (bad) enterq (bad) movabs stos fwait xor ds hlt cmp (bad) mov sbb (bad) gs movabs sahf mov gs shrl xor sbb cmova add cmc cmp leaveq mov scas add rcr out jbe mov mov mov mov movsb pushq mov push add mov or jg xchg (bad) testb xchg rex.RX rex.X cmc pop xchg sub jno (bad) mov pop cmp (bad) push and loope (bad) adc (bad) lods movabs xchg cmp test je out push in andps loope mov out sahf pushfq in lods and mov pop xchg divl loopne (bad) and cmpsb out sbb xchg test jle fmul (bad) in stos movabs xchg stos add (bad) push movabs rex.XB push lock xchg add (bad) rcrl cmpsl mov jrcxz jmpq outsl sbb rex.XB xchg cmpl jrcxz sbb ja loop rex.WXB ficomp or cmp repnz xchg incl jg stos callq in in xchg push jb orb add sti pushfq mov sub (bad) mulb imul push xchg and (bad) (bad) mov outsl mov icebp xor gs adc rex.WRXB test or sbb push scas cld cltd add outsl cmpsb xchg sti retq fcmovne fidivr js in sbb rex.WX pop jne (bad) xor jmpq out scas test and leaveq vpcmpeqd sbb test rex.RXB jg (bad) add xchg mov sub jnp fwait jle fstps mov push mov xlat in jb cmp in (bad) rex.RX callq xchg lock push imull cmp jge pop rex.WRXB mov xchg push std (bad) (bad) xor movabs movsl pushq push fcoms rorl cmp mov rclb adc or jno outsl xchg std cmp adcb push (bad) and mov xchg and jno or jb shll movsb xchg out xor mov rex.WXB or mov xor xchg (bad) std xchg mov (bad) pop movsb xchg (bad) jmp sub scas fsubr movabs clc iret sub js fcoms xchg adc sbb cld jo iret and (bad) push in (bad) cwtl (bad) out mov push rex.RXB test adc (bad) cmp push (bad) (bad) nop movabs and jo rclb movsb and cwtl (bad) jo mov fstl xchg mov xchg rex.RX jno and sub (bad) outsb jl or fdivrp cmpsl (bad) scas (bad) sub fistl movabs cmp mov nop pop rex.WRX repnz xchg mov xchg rex.B sub cmp cmp xchg mov adc cwtl pop and sub (bad) jmp mov xchg xchg mov (bad) xchg (bad) test sub xchg es icebp (bad) xor or shl mov sub sbb cmp pop and cmpsl je push sbb cltd out add xchg push ss pop mov repz pushfq xchg (bad) imul (bad) cmp sahf fnstsw mov lods mov rex.WRX mov stc cmc pop jno or mov sbb xor push and xchg loope (bad) rex.WR cmp mov jo sub cmpsl adc xchg (bad) mov out (bad) xchg movabs rex.WB outsl rex.RX mov retq and fcomps ja (bad) (bad) or xor andb hlt data16 sub mov jnp jo rex.X pushfq cmc push (bad) xor xchg xor (bad) cwtl push sarb in stc push fisub es push xor rex.WRXB mov scas fisttp pop mov mov xor and out leaveq pop sbb cmp ftst cmpsl movabs xlat xlat adc retq cltd mov imul callq rex.WB xchg (bad) mov and lods (bad) jb sbb es (bad) jle (bad) add add lahf notl sti adc or pop jl cmp nop (bad) (bad) (bad) cmp push rex.R xor jno xchg adc data16 shlb insb (bad) data16 movsb xchg pushq and jge jg rcr clc sub mov add mov loop xchg xor mov rex.B je loop (bad) test mov in or out out fsubl movabs sub shll mov ds (bad) scas (bad) loopne xchg imul (bad) jae scas mov pushq enterq sbb (bad) xor (bad) test xrelease and xchg xchg (bad) rex.WRX add data16 sbbl cmp out imul (bad) mov mov insb mov xchg adc rex.X mov shll cmc movslq movsl and (bad) rcr (bad) (bad) shll xlat cwtl push jle (bad) enterq popfq mov movslq xchg jge pop jg lods andl mov xchg xor (bad) mov icebp ds lock push and lahf jle test jrcxz add cs sub mov insb sub cli (bad) xlat imul outsl xchg lock clc pop mov iret (bad) jge (bad) add xchg mov ds xor jl cld (bad) sbb jle cmp fimull xchg int rex.WXB cmpsb mov insl or add cmp je mulb (bad) xchg jp xchg test (bad) rex.WX sbb (bad) out sahf movabs (bad) jno adc idivb or rclb cmpsb xchg cs xor repz or sbb xchg pop jmp rcll cwtl mov pop sarl push repnz xor outsl (bad) in (bad) mov xchg mov mov mov rex (bad) mov adc add (bad) sub sahf mov pop jno or mov xchg add sbb push popfq xchg fidivl imul (bad) rex.WRX xchg jge js mov (bad) add mov mov push jnp (bad) and retq add movsl out cmp or fldenv (bad) xchg movsb iret fwait xlat ja push jge fistp or mov add notl repz rex.WRXB mov or and (bad) iret movsl jmp (bad) jl out xor or mov xchg jnp lock (bad) adc pop fwait cmp (bad) xchg mov cmp jno sub fs or sub sub loopne sbb in movslq gs xor lods jns xchg roll fcomps xor mov sti xchg cmpsl cs mov imul pop (bad) mov (bad) or shrl addr32 movslq (bad) lock cltd rex.XB mov cmp xchg mov rex.WB mov (bad) insl pop (bad) nop cmp pop loope pop fs jl nop (bad) mov push mov gs popfq xchg mov (bad) lock outsl outsl xchg sbb jb stc pop xchg mov sbb mov in xchg cmp (bad) xchg mov test in xchg pop add pop mov xchg popfq and adc sbbl rclb mov cmp lea nop xchg rex.WRB adc adc pop and gs (bad) imul insb xchg (bad) rex.WR pop in sub xchg jbe push mov cmp rclb lret pop movabs (bad) and pop mov mov rex.WRXB imul and adc rex.X movslq push movabs push rex.RX mov mov loopne rex.WXB add xlat jnp retq in (bad) adc icebp cmp (bad) cli sbb imul rex fwait sub cmp xlat jrcxz cmpsb loop mov mov xchg out mov pop mov push (bad) fld1 jbe std imul xlat (bad) (bad) xchg sbb (bad) mov and roll rex.RX nop pop nop sbb pushq xchg xchg adc cltd lock cmp test (bad) jge lahf jrcxz movabs adc xchg lret sbb (bad) movsb scas imul and adc jmpq stos cld movslq mov xor rex cwtl test xor outsl push (bad) sbb jne pushq int3 xor out (bad) xchg cli dec out adc callq movslq mov mov pop rex.RXB sbb xchg out (bad) icebp xchg (bad) mov int jmpq mov xchg movsl adc xchg repz pushfw adc xchg lock stos (bad) div sbb push (bad) fsubs or and insl rex.R rex.W rex.RXB rex.XB mov retq jbe hlt stos jg test lret enterq adcb pushq (bad) mov shrl sahf (bad) mov (bad) xchg jb test sar callq rex.WXB xchg cmp add test xlat cmpsb mov mov mov sub callq rex.WRX jo,pn sbb sbb (bad) push mov (bad) sub pop jo in xchg rex.RB ja std push xchg xchg cmc add pop push jle xchg stos int3 mov xchg mov fadd pop popfq (bad) jp and mov stos rcrb ja push data16 (bad) (bad) jb cmp xchg movsb (bad) movabs cltd mov add mov shll test (bad) sarl xchg xor (bad) rex.RB sti push xchg in lret lret sbb cli rex.RX sbb movslq fstp (bad) xchg adc icebp mov cwtl push xor push (bad) xchg iret int cmp sub lods mov (bad) movabs test (bad) jg retq retq xorl xchg test (bad) mov sbb ficoml jns rclb add adcb adc (bad) scas pushq movsb jno movabs xchg enterq jne jae loop lods hlt xrelease (bad) icebp sbb loop sbb (bad) xor push (bad) xor callq xchg imul mov mov cwtl fsubl rex.WRX and push sbb (bad) mov insl pushq hlt (bad) mov xchg jle (bad) rex.WX loope cltd adc rex.B fiadd mov sub sbb movabs stc xchg pop fildll rex.XB and (bad) lock xchg movabs mov (bad) (bad) pushfq pop sbb xchg test scas (bad) (bad) stos (bad) sti jmpq mov xchg fsubs rex.RX cli (bad) (bad) fadds repz idivl sbb xchg sbb jg mov xor test push (bad) jo sub loop pop mov xchg imul (bad) nop xor mov adc testl pop xchg jns xchg pop jl xchg xor (bad) (bad) push nop (bad) movabs xchg fimull jno lea xchg iret pushfq pop rex.RB jp fistp cli lahf int3 mull xchg (bad) out rex.R imul gs ds std scas (bad) ja lods xchg movabs (bad) mov ss sbbl cmpsl xchg cmc rex.W (bad) (bad) in mov stos sbb (bad) mov fsubs rex.WR xchg (bad) callq (bad) testb mov xchg jrcxz xor mov cmp and jbe (bad) (bad) rex.XB fs (bad) or rex.RB rex.WRB add cltd (bad) sub movslq xchg outsl lods jrcxz adc iret (bad) push popfq sub add mov push xchg scas mov gs and mov push cmp outsl mov pop in mov mov out push jmp xor vpsrlw or pushq scas out jo jrcxz xchg adc or xlat and test lea (bad) rex or je test sarl (bad) rcll or je (bad) pop sbb cmp cmp jns movslq (bad) (bad) (bad) add repnz xor leaveq sub mov mov ja outsb cli (bad) test pop push pushq mov (bad) or int3 js (bad) rex.WRX pushq callq xor idivb jbe popq (bad) add xchg push jle jle and dec fs (bad) add (bad) outsb or jbe out punpckhdq (bad) frstor (bad) jb jl adc rcl adc addb pop cmc stc es imul xchg and jne js xchg cmp push mov cltd mov adc icebp out (bad) rex (bad) imul xor mov cmp jle or mov sub (bad) mov jle pushq icebp mov jmp int paddw push (bad) movabs lea cmp nop mov cs pop (bad) adc (bad) xor sub cmp xchg cwtl lret xchg (bad) mov add push jae xchg outsb int3 mov outsl xlat lahf retq pushfq movabs je std mov push insb int add fcmove (bad) imull sub mov (bad) movsl (bad) nop test mov rex.RX mov rex.RB sub fsubr fimull callq (bad) pop (bad) or (bad) (bad) mov xchg fs (bad) int3 mov (bad) callq pushq mov pop push mov jno xchg add xchg movsb retq xchg rex.X pop rex.WX pushq out xchg pop popfq icebp fcomi xchg (bad) xor and xchg stc (bad) push add shl xchg jmp jp (bad) (bad) rorl andb (bad) push cmpsb cmp ss lcall (bad) jge add (bad) rex.WRXB adc jle,pn pop (bad) js rex.WB (bad) (bad) popfq or sbb cs jo mov addr32 pop outsb mov mov lods ss jae or (bad) cmp xchg (bad) out xchg in mov sub cmp pushq icebp (bad) leaveq (bad) outsb jmpq mov xchg ds mov lar mov ficom jns fldcw or insb ds mov out add sarl (bad) (bad) rcrl cltd vmwrite mov adc add addr32 (bad) sarl leaveq ss mov std mov xchg and fstp stos cmpsb rex.WR cltd xor popfq and (bad) cmpsb rcr xchg mov scas add rex.WX xchg xor lea clc xchg in test pop xchg nop cmp movabs (bad) pushq jmp cmp fist (bad) xor imul (bad) scas xchg (bad) (bad) pushq mov mov (bad) outsl enterq sbb xchg rex.WR adcl (bad) movsb cmp insl mov pop movslq and sbb lcall movabs pushq popq rcrb lret shrw pushfq out (bad) pop pop ss outsl addr32 xchg mov (bad) adc mov in rex.RB add mov cs in sti nop lods rex.W mov rex.XB pop jg mov jrcxz mov (bad) ja mov cmpsl mov (bad) nop adc (bad) mov cmp scas imul (bad) adc (bad) (bad) pop imul mov pop insb xchg mov (bad) rex.WRX mov add imul mov movabs invd stos xchg ffreep popfq cli insl or cmpb xchg adc jmpq test cmp adcl lea sarl shr shr fisubrl popfq (bad) repz push lea lret cmc jb test stos loope add sarb fcoms sti xor rcrl jne fsubr leaveq fisttpll xchg lret jmp mov add fnop (bad) mov rex.XB movabs rex.WRX pop xchg rcll lods callq (bad) add xchg out out sub fidivl or push subl pop lahf pushfq (bad) cld rex.WRXB cs stos push jge xchg cmp fdivr jmp pop add add (bad) or jb sub (bad) sbb cmp add fnstcw movabs cmp (bad) xchg xor cld enterq sbb mov add (bad) outsl sbb mov std (bad) sub xchg fsubr (bad) lock add clc jmp lods movabs xchg out sbb xchg and (bad) xchg pushq adc jno push fimul xchg gs and xchg mov test and add sub xorl adc scas hlt (bad) sbb sbb xchg pushfq lret shrl rex.WRXB xchg hlt movsb fistl insl rex.RX test add sub and lods cld xchg (bad) add (bad) xor (bad) mov or incl mov (bad) lods in rex.WRB ja (bad) outsb add xchg add (bad) jns pop (bad) (bad) fs mov jmp movslq cli fsubr stos (bad) movabs jne and out sbb icebp pop mov out sub xlat sahf and loope mov (bad) sub push out xchg idiv xchg shlb push fstl and fcmovnbe mov cli icebp (bad) adc insl or adc adc xchg std jrcxz out xchg rex.XB nop loopne jmp repz js rclb test mov mov mov lock mov iret rex.RXB rex.R mov rex.XB jp jmpq pushq add and scas sub fistpll pop (bad) pushq lret (bad) scas xchg (bad) mov jne rclb add pop rex.R pop repz je push insl xor (bad) loop jno rex.WR pushq pushq cmpsb (bad) sbb rex.RXB (bad) xor xchg vandnps (bad) sahf add in ljmp (bad) iret repnz (bad) movabs rex.X (bad) xor ja (bad) mov push in int xor scas addr32 lock insl add out lods cld xchg movslq fstp xchg std rex.WB pop mov (bad) in scas callq movsb rol cmp out sub pushfq stc clc adc (bad) lods rex.WRXB jle xchg jno add nop mov (bad) stos (bad) fildl lcall repnz cld movabs sbb sbb rex.X xchg jmpw (bad) and xchg mov sarl xchg (bad) jne sub jbe mov (bad) mov in jno push (bad) (bad) xchg mov (bad) or out jno cmp pushq addr32 sbb push sub jle loopne cmpsl (bad) add out loope out pushq iret pushfq shrb cmpsl (bad) xor vaddss (bad) mov mov ja imul jbe fldcw jle mov sbb iret (bad) (bad) push mov xchg mov lods loopne sub xchg shr fisub rex.WXB adc xor jg std out fcomip retq sub (bad) jno jp test fnsave movabs xchg out test (bad) repz mov jg lret je xchg xchg callq mov xchg cltd rex.WXB sahf jae jmpq cmpsl (bad) pop xchg mov push orl scas xchg pop cmp add xchg (bad) gs lock int3 cli pushfq xchg mov jb imul cwtl pop mov cmp (bad) fist stc (bad) xchg rex.R fsubs mov xchg (bad) jne xlat jle andb xchg lods out and xchg xchg jb pop int3 pop leaveq mov xchg repnz (bad) insb (bad) add enterq xchg sub push fwait scas je xchg shr (bad) outsb fsubrl cwtl xor xchg int xchg pushfq (bad) fidivr rex.B xchg xchg cld jmp mov mov push stc xchg add jl jbe (bad) push test pop rex.XB (bad) ja xlat clc loop sub xchg cmp mov retq (bad) rex.WRXB (bad) sub gs (bad) (bad) jg pop faddl mov (bad) stos mov push (bad) push pushfq add mov loope push push lahf pop (bad) (bad) jp (bad) xchg mov pop imul rex.WR or xchg nop (bad) rex.X rcrb sub cmpsb callq (bad) (bad) (bad) imull xor or adc imul add rex.B jmp add mov and push lcallw ss xor (bad) xchg (bad) retq retq (bad) (bad) js sbb cmc (bad) jb mov xchg nop cwtl jnp enterq subl pop (bad) idivl jns sbbl (bad) jb mov push test xchg xchg movsl (bad) cltd xor jo cwtl rex.WX (bad) pushq in idivl cwtl push and xchg sbb movslq outsl rex.WX fs repz or mov pop xchg jrcxz stc rcll addr32 nop (bad) movabs jne sub jno jns nop sbb insl xor (bad) xchg mov loope jb xchg test pop mulb add nop jnp sbbl pushq rex.WRX data16 jns mov push imul mov fidiv xchg add imul rorb ds mov sub lret mov (bad) jmp popfq xor sub rolb test jge retq sub cmc (bad) cltd mov ficom rex.WRX xchg testl and out lea cmp jg stos fsts mov or or rex.XB lret jnp (bad) mov movslq (bad) xchg or cmp decb jnp xchg pop sahf rex.XB push xor (bad) (bad) xchg jne outsb pop incb jmp jbe rex.WX (bad) imul (bad) fnstenv rex.WB mov lahf (bad) (bad) lret test sub xor or lahf fstpt cmp hlt (bad) jnp xchg ja rorl pushfq mov out (bad) sbb loope pop mov add and push cmpsl xor (bad) sahf mov out mov push stos lahf (bad) or mov out lahf adc rolb rex.RXB test and out add callq adc xchg mov pop (bad) add jle movsb in sbb xchg mov callq xchg imul jp pop cmpsb jrcxz (bad) mov callq mov (bad) (bad) gs repnz jno cmp sarl mov (bad) leaveq push scas popfq sbb roll pop nop cli popfq icebp in adcb and pop imul jnp pop (bad) callq and leaveq mov scas xchg mov pop movabs sub xor pushq xchg movsb test rex.WRB lods mov pop mov xchg fwait mov (bad) (bad) callq sti (bad) rex.WRXB in xchg scas mov (bad) sbb xor xchg lods enterq jnp (bad) rex.B pushfq jno xchg and fisubl add mov mov (bad) clc ja stos rex.X rex pushq cmpsl pop xor and or adc xchg adc (bad) retq mull pop in jne sti rex.WX test roll xchg add hlt mov mov add jnp loopne pop (bad) cmc jmp adc (bad) (bad) and (bad) sbb mov shrb rex.WR outsb movabs xchg jb addl iret fldcw lods movabs callq ds jb cs (bad) rex.RB rex.WRXB cmpsl xchg sub repz and xchg mov jp insb outsb jo xchg sub xlat (bad) rex.WRB xchg (bad) rex.WXB rorl xchg cmpsl (bad) scas fadd xchg std cld mov mov stos sub mov repz movslq orl loopne cltd push enterw rex.WRXB (bad) mov stos xchg js rcl mov mov fimull sbb cmp jbe insl insb mov enterq (bad) jne mov rex.WB rex.WRXB fsubrp in (bad) imul hlt out frstor sub mov iret popfq (bad) jbe and (bad) (bad) xor cwtl (bad) out (bad) mov and imul mov or (bad) push cmc (bad) and gs and adc addr32 xchg movslq rex.RB rex.RXB sub stc int rcrl in jmp or je pop jrcxz jmp push js jg divl mov (bad) push jl lods xor sub movabs stos (bad) test stos (bad) (bad) xchg xor (bad) jle jne rex.WX fwait mov (bad) (bad) outsb xchg lock pushq gs and in rex.WXB fs (bad) xchg adc (bad) fstl add lock pop clc jno cs leaveq sub movsl cmp subl (bad) stc xor imul jl (bad) mov jnp movslq fs jb pop (bad) xor movabs xchg stos popfq (bad) stos add enterq (bad) out (bad) xor (bad) pop jns (bad) imul out cmp rex.B (bad) pushq scas rex.WRX fcomip mov xchg mov cmpsl pop pop pushq fs sbb scas data16 (bad) pushq rcll jne jmpq rex.WX rex.WRB push (bad) or xchg adc sub jmpq xchg push rex.WR es cmpsb iret sbb movslq (bad) xor xchg xchg (bad) stc (bad) jb (bad) movsl jne rex.RX (bad) mov cmpb jle xlat (bad) xchg xchg enterq or mov push stos fisub cwtl xlat movabs iret (bad) lahf lods jnp outsb push sub jrcxz stc nop xchg ficompl push imul and movslq pop cmpl fidiv not jno adc rex.W in mov lret cmp (bad) mov andl es (bad) sbb repnz fistl xchg xchg or cmp int sbb jnp xchg retq jo xor sbb in pushfq movabs addb jae iret mov pop retq jns out lods cmpsb ss mov (bad) rcrl stc cwtl data16 or xchg (bad) sahf push sbb scas cmp sbb and rex.X mov sbb pop icebp xchg cmpsb xchg xlat outsl push jnp (bad) or scas pop jge cltd jg xor icebp test xchg lea rex.WRXB mov mov callq movsb retq (bad) (bad) sahf xor xor mov (bad) xchg mov js (bad) fwait je rcrb sub in mov (bad) cmpsl cld rex.WRXB xor pushq sbb fs xchg xchg neg and xchg (bad) xor xor sbb mov xchg clc sbb callq pop xchg and adc in jp (bad) xor or (bad) pushfq mov cwtl and xlat rex.WR mov addr32 xchg pushfq mov mov (bad) mov enterq xchg movsb sbb (bad) jne (bad) (bad) rex.WRX jmpq sbb xchg clc retq xchg movsl js jo jbe xchg out (bad) out pushq lret imul rol jp pushq addl (bad) scas (bad) (bad) add gs jno insl pop xchg rex.X jns and xchg idiv push scas repnz movabs xlat out lret ss je (bad) sbb lldt mov mov (bad) (bad) xchg lret (bad) cli xchg xor lea or adc in xchg (bad) xchg xor sbb rex.XB rex.WRXB stos and and (bad) rex.RXB and rex.RB pushfq jle (bad) push xchg mov movsl adc shr retq xchg push (bad) out cld rex.WRX (bad) hlt xchg or loopne int lock addr32 cwtl mov cmpsl mov movabs fsubs xchg ficompl mov xor rex.B rex.WRXB fiaddl xor xchg cmpsl mov jns fwait lods mov xchg sbb pop or std push repz cmpsl nop (bad) test pushq and inc rex.RB test (bad) out (bad) pushfq add and jb (bad) scas push repz cmp test xor xchg out mov or fldt (bad) xchg (bad) repz xor cwtl mov mov jmp sub (bad) sahf mov cmp rcll mov rclb imul sub sub and addr32 jg rex.XB add (bad) (bad) (bad) ja js lods (bad) jle xchg ss (bad) push sbb movabs nop nop mov xor add callq test pop xchg cmpsl lret movsb jg iret xchg and addr32 sti push (bad) or mov cmpsb rorb jge cmp xchg xchg (bad) jno ficom (bad) cld (bad) lods movsl push cmpl pop outsl (bad) adc xchg jp repz and (bad) fistpl out xchg mov (bad) lahf push sahf sbb rcll xchg xchg (bad) cwtl or xchg in sub and rex int3 (bad) xlat icebp out rex.WR pop add push push push cltd mov mov or cmpsl notl (bad) test rex.WRB (bad) int3 jrcxz pushfq lea scas cmpsb xchg popfq hlt jle out (bad) and mov test or cmpsl xor xchg ficomp movslq sbb fdiv pop test pushq subb callq clc adc lahf (bad) (bad) adc cmc fstpt lahf fbstp nop adc mov xchg sbb cmp xchg (bad) test adc (bad) movabs outsb cmc (bad) cmpl jnp (bad) in fwait lods loope test or mov addr32 (bad) cs xchg movsb idiv lock push (bad) ja or (bad) in (bad) push lods sub nop (bad) jg (bad) (bad) paddusb rex.WRXB data16 sub sbbl jne jae jp xchg push (bad) lock (bad) mov (bad) rex.RX cmp movabs push rex.WX (bad) jrcxz xchg repz push incl fdivs sahf mov dec repz xor pop ds je (bad) rex.RXB add xchg adc lods (bad) (bad) add push jp pop in pushq enterq jbe je mov (bad) int3 xchg or adc (bad) cmpsl (bad) push and jg jns test xchg imul xchg inc push fimull rex.RX ficomp mov (bad) xchg es jl push add xchg fwait xchg rex.R (bad) adc (bad) (bad) pop (bad) jrcxz nop xchg hlt xchg (bad) cld and mov adc movsl in rex.RB sbb pop xor sti xchg lea xchg retq adc subl xchg scas pop (bad) push xor jp xchg (bad) xchg movabs fcompl sbb movsl jmpq pushq (bad) popfq xchg (bad) xchg mov xor fdivs retq cwtl and addr32 jns push xchg push imul pop jle loopne mull jle sub xchg xchg lahf (bad) iret and rdtsc add adc pushfq mov fwait cmp lea push jo (bad) jmpq pop sub js add retq xchg cmp jp and sub or ja rcl es movsb stos movabs lock push rex.WX add out scas cld push adc callq retq mov std jge (bad) mov xchg (bad) and ja xor cmpsl push or outsl pop rex.X cltd orb loopne (bad) sahf (bad) sub mov out xor cwtl jne test (bad) ja adc movsl movabs push mov sub in movslq fimull je mov rex.WXB rex.WX sbb mov orb jb or xchg retq lret out jrcxz mov push (bad) out and (bad) lcall (bad) or add jno jge adc push je in test rex.WXB mov mov sahf (bad) (bad) (bad) mov cmp fisub lods adc (bad) jmp cs rex.RX and movabs rex.RX add gs mov (bad) cmpsb cwtl mov cmp mov int3 pushq insb mov loop hlt adc mov enterq sbb add orl push xchg fs hlt roll rex.WXB sub test push xchg xor incl and (bad) push xchg lret fsubrl sub popfq sti es pushq test movsl mov sbb fwait rex rolb fcoms add add mov insb push (bad) data16 repnz orb push negl (bad) cld and pop mov gs ficom xchg fcompl sti mov rcll sahf (bad) xor in lea retq nop cmp insb nop movabs movabs sbb fistpl mov test xchg add rex.RX je mov mul jmpq hlt xchg push mov or fadds cmpsl jg rorb xchg xchg mov lcall xchg shr mov (bad) xchg mov xchg (bad) lahf (bad) or xchg subb ss jge mov rex.RX out out pop cmp and sub jbe push std xlat (bad) jnp (bad) nop sbb (bad) (bad) and leaveq cld mov add sub mov cmp pop rex.XB cmp mov cs out insl rex.RB stos and movsb (bad) es sahf (bad) mov pushq mov loope test rcr mov and adc (bad) xchg sbb stc pushq repz jne (bad) xlat enterq jg jrcxz pop adc enterq cmpsb xor mov nop mov imul and pop xchg rex.RXB (bad) (bad) jno (bad) sbb xorl mov pop rex.W mov shrl adc (bad) jg add sarl jrcxz sub movsl mov ja mov imul push sbb (bad) lahf xor xchg push std rex.WRXB gs mov sub jle cs (bad) lock rcl pop pop mov jrcxz or (bad) mov cwtl or cmpsl (bad) fs pop adc roll and and (bad) enterq sti jrcxz push outsb xchg fistpll (bad) jbe and fiaddl out pop pop (bad) icebp cmp cmp rex.WRXB out (bad) lret xchg pop rex.R addr32 rex.WRX and (bad) cmp mov pop movabs testl popfq add clc jae jnp sbb (bad) (bad) mov divl jno (bad) sbb sub rex.WR sti fs imul mov jae ja sub (bad) sub (bad) or xchg xchg cmpsl insl rcll fs xchg (bad) rolb cmp repnz shrb mov sbb movabs xor (bad) rex pushq xor pushq outsl xchg callq fildll jno cmp adc pop sub cli pop (bad) sbb clc lahf jmpq leaveq cmpsl xor sbb callq cli and xor (bad) cmp mov jmp (bad) (bad) lods fs in (bad) iret jbe mov hlt adc (bad) insl mov (bad) insb enterq xchg cltd shrl loop nop push rex.W popfq (bad) (bad) movsb scas (bad) rex.XB rex.XB rex.RB (bad) adc cmpsl enterq gs (bad) insl sub mov in sti xor cmp pushq insb idivb fstl out vcvtss2si fimul repz lea (bad) outsb jne insb test mov cltd repz insb scas (bad) test (bad) enterq pop or shlb rex.WX mov xlat xchg push (bad) mov in sbb xor scas fidivrl (bad) mov jmpq rex.WRB fwait xchg cmp fdivs xchg mov (bad) pushfq stos xor sahf (bad) in push or clc xchg idiv (bad) push adc (bad) (bad) bnd (bad) hlt ja add xchg mov (bad) and sahf cld xchg stos xor push push jno stos mov sbb (bad) xchg rex.WR (bad) cmp jl callq xor mov popfq cmp fs sti xchg fsubrl out mov xor xchg sarb and xchg icebp xchg jg (bad) (bad) loop hlt ficomp sahf xor xlat rex.WXB sbb insl cmc mov scas cli jno (bad) sti xchg or rolb out sub push rex.WXB jnp (bad) sub in mov (bad) and and xchg lock int3 test xchg fnstenv (bad) (bad) lods mov xchg sub movsl rol lock pop (bad) insb and scas out test sub (bad) hlt fidiv xchg sbb add xchg jge push xor rex.WRXB jae movsb (bad) (bad) mov (bad) sahf (bad) xor rex.R movabs adcb push lahf pop jnp jo faddp fidivr fs cli or icebp rex.WRXB rex test subl es adc push rex.WRX or jbe repz pop push icebp sub roll (bad) xor cmp cmp xchg mov (bad) mov mov push xor sub mov cmp enterq sti add xchg add imul (bad) mov gs retq in rex.WX xchg fdivrl int push lea jge iret rorb test and push (bad) retq mov sbb push and adc movabs movsb je rclb mov subl mov lret xor jne mov ror sbb ss pushq rex.WRXB jnp (bad) (bad) lea and (bad) lea imul mov popfq xchg xchg jle mov pushq mov mov jge (bad) (bad) rex.WRX callq mov mov popfq rex.WRB mov movabs cmpsl test xchg stos pop jo shll lahf push movabs (bad) imul xor rex.W out jne (bad) fs rex.WXB (bad) pop xlat xchg ror cmp (bad) fild movsl pop add adc mov testl lock mov rex.WB fidivrl xchg xor xchg cwtl pop and xchg xchg mov rex.W rex.RB xchg (bad) jne sub and callq cmc push mov sarb cmpsl xor pop adc push (bad) pop insl add and movabs mov rex.RXB lea movabs (bad) push cmp neg (bad) pushfq mov pop (bad) lods mov cltd rex.RXB loop jge movabs sbb fisubrl (bad) xchg imul mov pop cwtl mov or mov sub (bad) pop (bad) and divl xchg movabs icebp sub lea movabs xor push je (bad) xchg pop or leaveq add cltd movabs jne sbb mov and fisttp xchg cmp jnp rex pop rex.XB pushfq fcompl or movabs (bad) popfq push (bad) jrcxz and (bad) notl sub out xchg bnd push sbb jnp xchg (bad) rex.B leaveq insb cmpsl (bad) jg sbb stos sub lock rex.WRX (bad) addr32 xor add loope fistpl (bad) stos movabs mov xchg xchg out sbb push (bad) xchg out xchg xchg hlt retq push fisub add in (bad) scas pxor movabs stos and cwtl jmp lret scas cmpl incb nop pushfq (bad) mov test mov rex.B rex.WXB fistl pop cmp (bad) (bad) jbe xchg retq pop rex.B or add add (bad) (bad) enterq push mov test (bad) (bad) (bad) jmp xlat (bad) loopne lret iret or mov sbb imul xchg stos jbe mov cmp stos rex.WR (bad) lret pop nop icebp pushfq jp xor sahf mov pop mov add lret cmpsl mov sub iret push xchg sahf rex.RXB xor jg xchg jp mov mov cmpsl je movabs lret (bad) ja pop (bad) sbb xchg (bad) xor pushq jbe test xchg or imul cwtl jrcxz popfq repnz (bad) cmp (bad) add mov test cltd movabs (bad) lods ficomp movabs mov js jle lea cmpsl pushq scas fsubl adc sub ja or mov test stos fisubl mov jmpq (bad) sbb jae callq jg lea fldenv mov movabs je jrcxz push xor add imull jle push (bad) iret movabs mov mov xor int cmp int3 nop stos (bad) sub mov push outsl rex.WRX fisubl out movabs in loop test jg rex.RXB mov (bad) pop rex.W fisub outsl int3 xor jle je movslq out and (bad) jmp jbe sub jae push out leaveq sbb outsb mov sbb xchg lret pushq sub rex.WX rex.WR xchg pop test loopne (bad) sbbl mov (bad) stos lock push data16 in rex.W mov (bad) (bad) rex.R jno adc add (bad) cmp fwait cmpsl adc (bad) jp test (bad) (bad) std rex.WXB mov (bad) fucomip insb ja mov cmpsb movabs or sub mov push jb xor rex.WB movslq sbb (bad) jmpq and (bad) xchg popfq jmp pushq sub popq mov pop jmpq mov popfq mov sahf gs and push in negl lock data16 pop jne rex.XB pop jns pop je push rex.RB fldl scas xchg int3 iret leaveq (bad) adc stos push lret in add movslq sub (bad) jns sti push sub stos int3 jg (bad) mov out jnp or (bad) jns rex.X sub mov jrcxz leaveq test (bad) movabs mov xchg std adc (bad) nop imul mov jno lods xor (bad) pop pushq fs (bad) xor and test icebp jge mov bndstx loope and movslq xor fidivl sub xor nop rex.X (bad) and mov jrcxz rex.WXB or sahf xchg fdivr outsb callq and rex.XB cli lret xchg jbe jne (bad) insl test (bad) (bad) lahf (bad) xchg (bad) cmp jmp jns andb or (bad) jle (bad) divb fisub jnp pushfq xchg adc pop or mov movslq cltd jne,pt mov lock test cmpsb xor cltd movabs jnp jb xchg xchg xor rex.R xor xor sahf loopne jg cwtl (bad) lea mov out rex.WRX (bad) roll mov movsb std or xchg add callq (bad) mov adc int rex.WRB int mov jbe jnp adc push pop add out cld (bad) (bad) push add outsb xor movsl pop pop ds fiaddl mov subb (bad) mov jae jg (bad) in iret pop rcll cmpsl mov hlt (bad) add xlat xchg sub fnop and sahf xor cmp std mov icebp mov sahf mov insb or mov lahf fwait mov stos rex.WRX outsl jno test rorb sub ss adc mov xchg (bad) (bad) (bad) xchg or xchg retq imul nop mov mov xor rex.WB xlat xchg cmc sub sti jl mov xchg and rex.WRXB sbb rex.WRXB mov sahf or nop (bad) pop jae (bad) sbb or rex.WX xchg insb popfq xchg sub jmp (bad) out rex.RB sub or pop adc pushq imul pop rex.WRB (bad) and jae (bad) or mov sbb callq pushq mov rex.WRB es mov shll adc (bad) data16 xchg jo rex.RXB cmpsl lock xchg popfq pushw fistl (bad) jns push xchg jbe xor or xchg mov pushq nop sbb rcrb es pop push jo callq out jnp shll mov lahf sbb lods adc pushq push (bad) (bad) xor test lret push cmc cli out (bad) and int addr32 pop push rorb loopne movsl xchg pop sbb mov or movslq ficom add cld jmp (bad) imul and movabs add mov mov (bad) cmp gs in rex.W add jb popfq mov (bad) int3 mov adc xor mov xor cmp mov add movslq adc mov cmp adc pop add (bad) jnp cltd jns xchg mov jae and (bad) int ja jbe cmp in cwtl mov pushfq test mov out (bad) fnstcw mov (bad) jg sub (bad) out (bad) adc (bad) mov ja test push test (bad) (bad) je jmpq adc test fcmovu sarl mov callq loop pop xchg or push mov mov add loopne cmp nop rex.RXB not lret cltd clc in sarb adc mov (bad) adc fnstcw imul sub imul fild (bad) xor movabs sbb (bad) and (bad) add lock xor outsb loop rex xor sub (bad) (bad) pop pop mulb jge xchg shll sbb insb and fs rex.WRXB sbb add pop cltd cld (bad) pop movabs add (bad) xor insb mov (bad) pushq ja jle xor movsl xchg add mov mov xchg mov jg push mov insb in iret sbb popfq (bad) enterq xchg mov rex.X cmp cmp mov mov xchg (bad) (bad) popfw rorl fsubl movsl or (bad) jbe push lods lret push imul (bad) and sbbl (bad) (bad) rex.RXB jno sbb (bad) movabs mov xchg adc lret (bad) (bad) pushq or pop fmuls or xchg (bad) std shrb mov (bad) and cvtdq2ps sub pop je (bad) push jne div iret out loope or out xchg jae xchg or xor pushq or out or fidiv mov (bad) mov lea mov loope pop lret fcmovne outsb hlt jl mov (bad) roll movabs movabs clc xchg andb mov sahf pop in (bad) in (bad) xchg pop push pop mov mov ds sbb xchg (bad) lea xchg push adc or xchg (bad) out rcl movabs es mov cltd cmp rcrl (bad) roll (bad) xchg or rex.WXB sbbl scas xchg mov je jg rex.RX (bad) mov and pop (bad) mov in (bad) idivl push pop adcb nop xchg cwtl mov pop loop xchg or loop mov callq sub rol cwtl ja (bad) pushfq add out decl out xchg pop pushfq sbb movabs pushq cli mov (bad) ds insb ja sub clc or rcrl xchg jmpq xchg push add mov idivl lret cwtl (bad) rex.W retq xchg (bad) xchg fnstsw pop rex.XB jle rex.RXB adc scas out xor xchg mov cltd or jp pop add adc nop mov rex.RXB popq pushq and fisub callq push pop movabs mov pop xchg or jo mov pop pop (bad) mov rcrb pop xchg xchg jle mov adc rorb (bad) rcll pop mov rex.WR cmp movabs lahf mov movsl push nop fldl mov and (bad) xchg (bad) (bad) ror adcb adc (bad) xlat fdivs test jnp loop (bad) out scas shll mov mov jp xchg mov (bad) xor movabs retq pop jmpq andb (bad) (bad) cmp push psadbw jnp rex.WRX int3 and rex.WRXB (bad) xchg add xor mov pushfq popfq sbb (bad) jo stos mov fidivr movabs mov (bad) sbb vfnmadd132ss adc out jl out mov movslq int3 xchg (bad) push outsl cld cmp mov movntps pushfq (bad) and out mov sbb push in pop (bad) (bad) mov outsb xchg xlat js cmp jrcxz pop outsl sahf movsl mov rex.XB mov push mov mov sbb subl xor pushfq jno icebp (bad) (bad) stc (bad) add adc mov outsl push outsl pop (bad) lods rex.WX fnstcw sbb (bad) decl jb mov jmpq stos cltd (bad) (bad) mov ficomp (bad) (bad) pxor push xchg rex mov jg mov mov mov int3 xlat push jb rex.WX sbb xchg pushfq rex.WX xchg (bad) xor jp push jg mov mov (bad) xchg scas mov xor (bad) xchg rex.RXB (bad) enterq (bad) push xchg pop outsb rex.WR (bad) cltd sahf movslq sbb xchg (bad) adc rex.WRB and xchg fbstp fs or xchg in (bad) sarb stos mov mov movabs mov (bad) jo mov rol popfq pop loope cwtl (bad) jle icebp (bad) (bad) repz mov stc rex (bad) jle xchg in (bad) scas nop (bad) mov jae fwait rcll sbb movabs shll xchg leaveq (bad) lods (bad) cli or cmpsb jge nop imul and xchg push jmpq jnp sub cmpsb xchg (bad) mov lea rex.XB sub rex.WX cmp pushq push popfq (bad) scas sub cmp jmp xchg stc rex.X rcrb (bad) movslq xchg push fcmovu callq rex.RXB xchg rcrl in xchg (bad) mov xchg fwait cmp adc (bad) lahf int (bad) pop xchg xchg fs rorl xchg add js and addr32 cwtl outsb in cmovno pop xorl xor lods rex.R sbb (bad) rorl subl (bad) sub (bad) (bad) mov cmpsl retq rex.WRXB xchg cmpsb mov cltd mov fdivrl sti (bad) xor sahf (bad) xchg xchg xchg mov or adc nop pop (bad) sarb retq mov add sarb movsl (bad) ja shlb jl adc rex.X rex.WX js retq sarl in cmpsb jge xchg add adc cmp lret je rcrl (bad) and xchg (bad) sub movabs xchg mov adc or cmp xchg ljmp movabs je lea xorl and xchg (bad) fildll rex.RB fadds mov test (bad) (bad) (bad) (bad) mov cs test clc movsb retq rex.XB fwait divb sarl pop (bad) ds sar mov imul mov rex.X nop pushfq pop (bad) adc cwtl xchg mov xor adc movabs push and sub sub mov xchg test (bad) stos cmp loop (bad) push push (bad) lret and (bad) mov rex.WR rex.WRB sub rex.X mov cmpl or adc or (bad) data16 jge fs sbb fbld (bad) xchg mov popfq fs popq (bad) (bad) mov mov pushfq (bad) int3 pop pop (bad) sbb xchg mov xlat divl xchg cs negb pop xchg mov xchg lea mov xchg js or (bad) mov xchg addr32 xchg jmpq or xchg jns out nop rex.WB loop movabs movabs test cmpsb rex.WR and roll rex.WRB imul or leaveq je pushq add sbb rex.R hlt (bad) (bad) fcomps or or rex.WRX setae fsts test popfq add stos xchg sub adc sbb xchg mov jne fidivr int mov rex.WR fs xor adc sahf mov (bad) add mov adc rex.WR xchg mov rex.B cs repnz (bad) fidivr div sbb mov sub push mov (bad) pop lea nop jge push movabs popfq popfq nop mov jb push imull rex.WRX js fimul lods add outsl xchg sbb and movabs mov cmpsl sub xchg or imul xchg xchg rex jb fmull (bad) (bad) (bad) stos ror cli outsb push sbb icebp jle jrcxz test xlat jno mov sub (bad) iret jmp stos pop xlat (bad) (bad) mov jg fs (bad) (bad) data16 fild test (bad) pushq xlat outsl sbb lods pop sbb rex.RXB sbb popfq clc cmpb push (bad) lock movabs cwtl or sbb mov sarb mov or sub cmpsl (bad) (bad) sub retw or xlat jb sarb push rex.WR rex.WR pop mov add outsl and movabs mov xchg add out sbb (bad) test insl xlat cmpsl rex.X adc je (bad) cmp out mov push (bad) rex.WX push addr32 jmpq pop rex.WRB add fidivrl fisttpll hlt jrcxz pushfq out js roll xchg mov push sub loopne rex.WX rex.WB fdivs xchg xchg xor (bad) mul jp lea rex.RX sub mov mov sbb cmp rcrl ds jrcxz (bad) xchg jge nop insl adc outsb lea pushq ja xchg mov sub or xchg js fistpl lods mov push rex.RX (bad) mov jae jge xchg movabs pop push xor sub sub retq rex.RXB outsb or pop stos mov pushq or pop mov lret adc add loop iret mov (bad) mov (bad) sub mov jb mov rex.WRXB rex.R xchg in jg sub jrcxz and (bad) sbb mov push xchg adc rex.RX js rcll xchg mov hlt (bad) sbb cltd js,pn ss xchg sahf mov fdivrl movslq (bad) mov sbb add test loopne xlat repnz mov jne (bad) ds xchg (bad) movsl ficom frstor js and lods xchg cmp (bad) rex.WR sbb jbe or jrcxz jo mov rex.R fwait xor fst or xchg sahf (bad) jrcxz xchg ja stc clc imul stc cmp cmp clc add jmpq pop movsbq not pop jmpq (bad) (bad) rex.WB out fisttp not mov es mov in fldcw sub push jnp (bad) pop imul or mov int adc mov movabs std fcmovnbe mov cmovae sar fucom (bad) retq lock adc xor jge ja (bad) cli pop rex.WRXB (bad) cmp mov mov test (bad) (bad) sti xchg add xchg movsb (bad) (bad) (bad) (bad) jnp cs repz adc sbb imul sbb (bad) (bad) (bad) (bad) sti rex.WR movabs stc popfq enterq (bad) cmp int3 pushq push cld repnz jl insl rex.XB jg xchg adc rex.RX jns (bad) jp mov sub mov rex.W or test lock jmpq mov jmpq test add jmpq sahf sub pcmpgtw sar mov movabs xchg xchg mov jp sbb (bad) out cmp mov adc test add cld retq fdivrp in or push fiadd (bad) mov rcrb cmpsl mov sub adc ja (bad) (bad) cld outsl sar or (bad) (bad) (bad) lcall jbe (bad) xchg pop cmp je lods lock cmp out sub (bad) scas mov imulb push and rex.X cld lods mov rex.WX lea in mov roll cmp test and adc sbb (bad) out mov (bad) mov rex.WB lock lock jmpq stc cmp jmpq test out fwait mov movsl and sbb fstps (bad) (bad) cmp add imul and int3 test pop push int3 imul fwait rex.XB jmp push and jne cmp or sbbl out xchg (bad) rex.WB out (bad) (bad) in or and ficompl cld pop push (bad) cmp jns add mov cs enterq xor (bad) fild xchg mov sub pop (bad) (bad) (bad) (bad) insl sub (bad) pushq push adc mov mov out lock test (bad) (bad) mov movsb cld retq mov and out callq (bad) jp pop mov rex.WRXB (bad) rcll add or test lahf (bad) xlat lods hlt movabs lret scas (bad) addr32 mov mov add rex.WXB (bad) stc sub test cmp cmp jmpq ja neg setg cmc sub inc add shl stc setno btr mov sbb sar mov stc repnz jmpq pop enterq loope loop rex.WRXB (bad) adc mov (bad) and sahf mov pop cmp loop jb loope fisttpl (bad) out (bad) retq jrcxz and repnz (bad) adc add rcrl cld xor (bad) cmpsb sbb sarb xchg (bad) (bad) sub and (bad) (bad) (bad) cli mov xor sar (bad) (bad) std cltd movsl movsl cmp (bad) int3 insl rex adc (bad) out xchg add es std xchg push and sar mov xchg in adc (bad) cli rex.RX (bad) (bad) mov fcoms pop loop jo (bad) (bad) (bad) (bad) mov pop test xchg ja add mov mov (bad) (bad) mov jbe (bad) mulb int3 (bad) outsl (bad) mov (bad) adc pushq mov movabs callq inc btc add inc movzbl xor mov test cmp cmpb jmpq clc cmp test jmpq test movb jmpq jns or xchg or jmpq in movsb xchg (bad) jle movabs sbb or movabs lea mov cmp mov (bad) (bad) (bad) (bad) (bad) (bad) pop repz movabs push lods push pushfq mov fdivrl add rex.WB xor (bad) std stc outsl faddl xor add add test mov and rex.RB rex.WX (bad) (bad) jns mov rex.WB mov (bad) xchg jle rex.XB retq cmp and movsb xchg mov xchg (bad) or mov rex.WR repz fdivs es cwtl mov sub rex.RB (bad) xchg adc movsb sbb or cltd rex.B es xchg rex.RB lret scas (bad) push cmpsl mov repnz rex.WB test mov retq rex.WRXB shrb mov mov (bad) jae cmpsl rex.WRB loope jp movsl pushfq or (bad) sar fwait adc ss loopne (bad) pop loopne sub insb shrb sarb je mov mov fidivl mov loope (bad) (bad) sti push cmp (bad) (bad) (bad) cmp (bad) movabs fldcw cmp (bad) (bad) mov mov and retq jge mov cmc repnz (bad) rex.WRX rex.WRB rex.WX or mov xor jbe (bad) fidiv movabs or (bad) movabs mov pushq out rcrl sbbl pop addr32 rex movabs (bad) loope fcoms and (bad) xor mov (bad) mov cmp hlt lret xchg fldl mov push mov fwait mov xchg mov (bad) in in sub stc (bad) pop cmp clc shr fldt (bad) jbe enterq mov sbb (bad) sti out (bad) gs (bad) (bad) (bad) rcrb jne (bad) cli fstpt pop std (bad) pushq sbb mov rorl mov loope test movsb xchg rex.WB add pop pop lods mov enterq pushfq push es mov sarl rex.X mov xchg add (bad) int3 stos mov (bad) cmp xlat lret popfq fdivrs add loop mov test rex.WRXB adc (bad) jge and cmpsl stos adc rex.X rex.WRXB mov pop mov and out pop rex.B callq rex.WR add fdivs sub jmpq xchg mov xor (bad) loop mov (bad) xor (bad) xchg sub (bad) out out rclb clc fldl (bad) sti scas xchg (bad) (bad) (bad) cwtl jbe mov pushq sbb jp (bad) lret fnstcw sbb insb rcrl (bad) cmp or rex.X mov in pop rex.X rex.XB insb fnop movsb and mov cmpsb cltd mov (bad) lock js xor rex.RXB add fsts rex.WRXB cmpsb imul decl xchg rorb clc add sub movsbl lea lea sar add inc bts lea mov rcr or mov cmp repnz jmpq rep lea bswap pop jmpq cmp mov pop xchg sub movabs cmc rex.RX fs rex.RX rex.RXB jo mov sbb cmp xlat mov or jrcxz (bad) lea xchg rex.WRB cmpsl (bad) mov mov int movsl sub add in scas mov add pushfq jne (bad) cmp clc jb lock andps clc jb test cmpsl mov pop sub or add (bad) or loope cmc (bad) push loopne fdivr pop push cmpsl sti shll insl rex.XB lret xor iret outsl adc jns pop js (bad) (bad) (bad) std (bad) jl,pt in add add jnp adc and mov (bad) adc or (bad) add test rex.WRX or xor mov rex.WXB (bad) adc scas mov push pop and icebp jmpq xchg sub (bad) or add jmpq jmpq cmc cmp jmpq jne bsf sub xor bt mov (bad) lock add sub not cmc clc mov stc jmpq jb cmp stc jmpq jmpq retq and mov nop (bad) mov (bad) in int3 (bad) lret stos and (bad) ror out rcrl or sbb (bad) scas rex push mov fmuls (bad) fstpt imul test (bad) xor es add stos enterq xor scas (bad) outsb mov cmp addr32 retq and (bad) cld rex.WXB clc movsl cwtl adc mov xchg rex.WX je rex.RB xchg retq rex.WR mov pop add add add loopne enterq repz fistl rex.WB mov xor xchg lahf mov sub jrcxz movq movsl sub cmp test mov push adc push cmp (bad) out (bad) mov retq (bad) lret rolb add int3 out jg (bad) lea pushfq rex.WR sbb add add (bad) xchg jb fldt (bad) in jge mov (bad) mov in rex.WXB cli addr32 and cmp lret out jmpq push xchg mov imul test mov mov push and add bt sub adc mov cmp xor shr not add ror mov bt cmp cmp test jmpq je bt sub stc cmp jmpq adc add rex.RB imul xchg add xor clc popfq rex.WX stc fisubr (bad) sahf push sub pop and mov ss add rex cmc cmp mov (bad) sbb jg jmp sub or push (bad) rex.RX imul (bad) std or stc jno,pn lock rex and icebp repnz (bad) (bad) std xchg cli gs je rex.XB hlt retq scas (bad) fildl add add fs lods (bad) pop add or cli movabs pop rex.XB mov jnp rex.WXB cs fistp xchg or jno xchg es lahf lock rex.WRXB cs mov (bad) or sbb enterq mov push adc std imul xor loop jbe (bad) sbb and cmp leaveq movabs xchg (bad) and xor sub sub sar rex.WRX cs adc mov (bad) rex.W fnstenv mov mov sahf std pushfq out (bad) pop lods cs clc rex.WRXB pop scas hlt icebp int push movsl xchg fidivr (bad) (bad) (bad) cli mov mov (bad) std fwait lods retq or je fsts pushq loop out gs rex ja jae jle (bad) add mov sub repnz (bad) xor jmp or mov (bad) cmp (bad) callq (bad) fdivl pop push or imul (bad) xchg jne or cwtl test (bad) out js mov (bad) mov adc cmp scas int3 fnsave loopne mov ja mov jmpq (bad) decl test test clc test add jmpq test (bad) insl add mov cmpsb rex.X rex.X sbb andl outsl xchg sbb push xorl lret cmp adc (bad) shrb ficom shlb jb jo xchg xor or mov pop ds push pop cmp (bad) repnz retq movslq shrl out ss (bad) (bad) (bad) decb (bad) (bad) (bad) incl mov adc and (bad) fiaddl or ds jb rex.WRXB rex.WB rex.RXB sbb xor push icebp cmp clts in scas fistpll and rcrl sbb or movsl lea (bad) lods jg retq and adc pop hlt add mov repz lea or xor (bad) push jmp cmp movsl (bad) add pop cmp pop fdivrl fcomi rex.XB push xor mov push cmp out mov lock movl cwtl rex.RXB xchg jl subl and hlt add xlat xor (bad) lea add xor xchg rex.X cqto (bad) leaveq cmc leaveq out mov lret mov (bad) (bad) (bad) decb retq sub rex.WRX in jae sti movabs pop rex clc xor fwait rex.X xor pop hlt add (bad) or jnp jne mov out xor cmpl (bad) and add adc nop retq mov push pop jb sti jbe stc or and sub test mov bts cmc mov shr bt add clc rol shr ror shld bt mov btc add bswap movzbw jmpq callq jmpq out (bad) iret icebp xchg mov (bad) (bad) sbb scas jb movabs xlat adc fimull rex.WRXB scas xchg callq push mov cmp in movabs sbb adc rorb pop xchg lods loope add (bad) (bad) mov push sub (bad) jae mov (bad) (bad) sti fmulp xorl enterq pop rol hlt outsb psrad adc jle out sub mov jo (bad) fisttp cmp rex.RB (bad) (bad) mov sub add add rex.WXB rex.RB (bad) cmc mov rcl xor shll (bad) icebp rex.WB rex.WR (bad) xor pop testb adc cmpsl subl mov xchg (bad) lret cwtl movabs jle (bad) in mov icebp lcall sub lea pop rex.WRB jns fsts cltd jrcxz or int3 iret movsb mov movb push imul in enterq shl cmp mov movsb leaveq mov pmuludq mov jge jmpq or retq jle (bad) in movabs mov outsl fimul fsubl sti fimull (bad) (bad) out mov mov (bad) je mov fnstsw jmpq (bad) (bad) (bad) sti jl int3 (bad) cld (bad) (bad) (bad) (bad) cmpsb jg mov pop xor (bad) (bad) cmc out (bad) (bad) jmpq cmpsl (bad) rex.WRB lret xor icebp (bad) scas mov mov sub es cmp clc mov push rex.W (bad) mov in rex.RX scas stc xchg repz lods mov or mov pop xor pop cmp jns lock jmpq mov lahf pop pop adc rex.WRB lods loop xchg rex.WXB jns sbb (bad) (bad) cmpsb jl rex.WR or rex.WB fbstp adc (bad) movabs (bad) jo fnstenv jns lret in loope sub out sbb cmp xchg imul loop mov push jno rex.XB fwait pushq loope fiadd sbb xor (bad) lret and sbb loope (bad) (bad) (bad) sti scas push jnp and (bad) (bad) (bad) cwtl xchg sub stc sub adc fiadd add add test or cmc (bad) fidivrl es sbb mov lret movslq jle adc sarl loope rex.W sbb push fs mov ds es mov xor js lahf sahf stc sub jbe sbb es and fildll sub or mov lods and test test pushq fs mov retq mov mov test movabs movabs pop mov fs (bad) (bad) (bad) incl movslq sbb js fisttpll js or and rex.B rex.WRXB (bad) cmp cmp fcoml xlat clc insb mov cmp mov pop addl enterq and fwait mov int sbb rex.RX add leaveq movabs (bad) jp imul and int sub pop mov insb outsb or push insb jbe movabs mov add rex.B xchg xor push jmpq stos stc in xor loopne out hlt stos (bad) clc push and mov int fucom mov cli cmp sbb pop nop rex.W (bad) fucomp iret mov xor cmp sub push add xchg cs sbb out fwait xchg sti cltd rex.WRB insl enterq incb jnp push jmpq (bad) jrcxz jnp pop (bad) add add add outsl mov sti rcrb (bad) test out adc and insl sarb lods cmpl (bad) jae (bad) stos (bad) cmp clc mov pop movabs ja and sbb bt stc sub or mov shld add bts bt shl setno mov or rcl add mov clc jmpq jmpq fxtract jrcxz jmpq xor add lods (bad) add loop mov rex.RX fcmovu (bad) mov xlat test in xchg or enterq retq add (bad) mov in (bad) (bad) test cwtl lea sub adc movsb sbbl lods mov int3 adc (bad) mov push rex.RB adc add rex.WX cmpsb add mov (bad) ss (bad) xchg (bad) cmp pop sub (bad) (bad) sti mov xor rex.RXB (bad) (bad) (bad) popfq movsb (bad) lea iret pop fcoms jnp adc insb (bad) add add sbb lret int3 xchg faddl jne mov (bad) cmp and (bad) rex.WX cmp and add pushq fstl xchg (bad) stos mov push lock mov (bad) pop push (bad) stos test xchg repnz jmpq jmpq jne btc clc shrd mov test sub movsbw data16 testb bts not mov test sub cmc pushq stc clc cmp jmpq mov jmpq mov stc lahf xchg imul lahf (bad) adcl add xchg pop movslq repz cmp lahf rorl outsb rex.RXB (bad) (bad) fsub adc cmp and xchg callq and loopne xlat mov clc rex.WX rex.WRB lea (bad) (bad) (bad) pushq scas fwait addr32 jrcxz (bad) addr32 jg cmp fs push cmp cmpsb (bad) push movslq fisttpll (bad) movsb (bad) mov xchg addl cmp (bad) movslq retq fbstp lock jnp mov js xchg insl (bad) push mov insl push popfq sti rex.WRB mov pop (bad) xchg xor jae push rex.WRB subl movabs imul int3 incb es (bad) (bad) sub mov imul (bad) (bad) rolb testb mov add clc popfq xchg jnp shrl jle mov je movsb pop callq ss cwtl cwtl mov mov and stos lea jg (bad) (bad) (bad) (bad) scas out test (bad) (bad) (bad) lcall callq movabs (bad) sbb imul rcll popfq scas sbb stos pop adc fsubrs rex.X rex movabs adc rex.RB rex test adc (bad) xchg retq out xchg movslq ja lret mov and leaveq mov rex.RX cmp test sbb int rex.XB (bad) insb mov xchg push adc rcll lock shr xchg callq rex.XB xchg mov xor (bad) pop jp lods mov fs rex.X (bad) push rex.X xchg jae enterq cld xchg out adc rex.WRXB pushq rex.RXB xchg xor mov jno xchg mov sarb or mov sub adc insl and (bad) (bad) (bad) decb sub rex.RX rex.WRB pushq sub cmp (bad) leaveq pop sub and pop data16 enterq rex.RB loop movabs mov sub fcmove jmp movabs in rex.WB ds (bad) (bad) int cld push fs outsl (bad) xchg jg mov (bad) xlat pushq xchg (bad) xchg jmpq jb stc clc cmc cmp jmpq jmpq jp xchg iret (bad) nop jmp jl callq jmpq retq push movabs jg mulb jbe test (bad) xchg push xchg push lods rex.RX rex.RXB pop shlb cmpsb add test xchg (bad) outsb or cmp (bad) cld or sbb movslq fimul cwtl test rex.WRX lret (bad) loop sar (bad) (bad) dec in lret mov mov jne rex.WRB test add rex.WRXB sbb adc (bad) jno,pn test cmp pop cld or fstpl xchg sbb adc mov lahf (bad) or imul (bad) jb sahf mov decl pop and lea movzbw mov movzbw bswap movsbw mov retq retq movsl adc icebp cmc push in xchg retq clc xchg clc imul jrcxz xchg divl sub jl pop push mov jmpq rex.WB (bad) jns cltd mov rex.WX fnstsw jns sbb rex.B (bad) cmc popfq out scas test test rex.XB cltd mov xchg sbb pop xchg (bad) pushfq movsl (bad) pop mov (bad) mov es (bad) addl (bad) (bad) sti mov (bad) (bad) (bad) (bad) movsl rex.WRX out fsubl adc add add jb cmp rex.WR lahf stos rorl cmp push rex.X jno nop add jo jno mov popfq mov lock mov jl jne insl xor sub mov js (bad) mov (bad) fldcw cs cmc inc test bt add sub test bsf and mov cmp cmp jmpq push push rex.RB xor cs insb add lahf xor or (bad) loopne loopne pop rex.X iret cmc sbb cld jmpq or xor adc addl mov (bad) outsl (bad) jl movd pushfq shrb cmp test std sahf add add jmp xchg jbe cmp or lea pop rcrb jo rex.W rex.X mov movslq pop in mov jmpq scas (bad) (bad) push andl js mov mov xor imul cmpsb adc repnz test (bad) ss shrl and mov lock jno add fnstcw fwait lock push test sbb xor repnz lret rex.X jrcxz mov test jno xchg fcoml (bad) (bad) cld adc and (bad) (bad) (bad) sti lods pop nop lods test (bad) nop rex.WRX fwait rex.B push xchg and push xorb outsl xlat adc jge addb xchg or mov add add or shrb sub mov fistpll cmp rex.XB sub mov rex.WRXB rex.WXB in xchg stc movabs movslq or (bad) cs (bad) rex.WX cli or mov fs xor (bad) adc add loope xor mov pop or callq movsl test pop jo rex.RX sti in iret cld loope push roll sub adc (bad) push pushq sub cmc rex.WX add (bad) (bad) std test add add or out mov cs cmpsl (bad) lods xchg mov (bad) rex.WRB notl and leaveq scas test (bad) jrcxz retq imul rex.X jne callq xor js sar (bad) outsb adc out mov sar in scas lods adc lret and int mov jne add xchg ja cmp pop iret push rex.WR mov or test outsb lret adc movabs test mov xchg sub nop xchg cmp test fwait fwait (bad) (bad) (bad) (bad) decb (bad) (bad) (bad) pushq pop test jno leaveq retq imul ds mov (bad) retq pushq xchg xor jbe (bad) xchg mov rclb (bad) test fldenv outsl retq pop (bad) mov scas rex.XB xchg (bad) fidivl (bad) cmpsb cmpsb cwtl mov je mov (bad) sahf mov mov gs sub lret xor decl test or (bad) jmpq jmpq jmpq (bad) mov adc mov cli (bad) movabs enterq (bad) xchg retq xor (bad) fcmovne out pushq test leaveq (bad) push jns fisttpll int or rex.R pop andb hlt nop imul callq (bad) mov outsb and loope iret out (bad) sub scas jge fs mov stos andl cmp scas (bad) cmp (bad) (bad) sti popfq xor pop (bad) (bad) (bad) incb jl int rex.WXB rex.WRB in fidivr add add cmp lods xchg popfq sbb jo shll mov in jmp cmp cmp adc cmp rex.WX pop rex.RB in or jrcxz add rex.WR repz enterq loopne push vpaddusw (bad) icebp repz rex.WXB jrcxz sub nop (bad) in mov movabs ss (bad) test mov xor xor and pinsrw mov ds in (bad) rolb sbb out lret lods and jmpq retq xchg add add or cli (bad) scas adc mov pushq jp rex.W lods lret sbb in rex.RX test sub rex.WXB rcrl rex.WRXB sbb mov add loopne rex.RB adc in rex.XB rex.WRXB loope mov (bad) stos mov xlat stos rex.X fstps mov (bad) enterq loop pop mov outsl pop xchg (bad) (bad) div cmpsl movabs pop xchg and (bad) mov (bad) (bad) mov cmp int sarb (bad) mov (bad) decb and repz mov out and fimull pop jge negl fildl (bad) mov add mov insb (bad) lods push cmp icebp push and scas outsb sbb cmpsb cmp or insl lret (bad) fildl pop (bad) or (bad) adcb mov pushq jmpq clc cmp jmpq insb jo test orq loop rex.R (bad) sub (bad) callq rex.XB test add mov (bad) std mov mov push (bad) lret fs fcmovnbe adc cltd ja mov jmp jmp (bad) rex.RB es int rex.XB cmp sub lock (bad) (bad) std jg jl mov (bad) (bad) (bad) (bad) fs mov fwait mov pop fidiv (bad) mov push out sarb xchg movsl lret (bad) imul (bad) movsb lahf xchg int3 or (bad) cltd add rex.RX pushq jle shr sarb je lods sbb sbb test (bad) sti in (bad) cli or rex.WB popfq std repz loope flds jge xor sbb (bad) jl addl (bad) (bad) retq fsub sbb lahf jno xchg movsb sbb pop shr jmpq loopne push callq (bad) sbb add add jl fnsave (bad) rex.WX adc mov (bad) roll mov rex.WRXB (bad) (bad) or (bad) add pushq cmpsl mov or rex.WRB mov mov pushq rex.R je cmp test cmp jmpq callq jb jae cmc bt xor jmpq jne test jmpq mov jge cmpsb rclb subl add clc lods adc cmp in mov fnsave mul cs subb mov rex.XB xor ds mov cmp sub (bad) pop push sbb or (bad) xchg cmc out std mov mov push outsb jbe (bad) (bad) cli sti cmp push (bad) (bad) (bad) std in (bad) rex.RB pop adc jno jge xchg (bad) pop mov rcrl pushq lock rex.WXB cli outsb test fimull (bad) lahf push (bad) (bad) (bad) jmpq mov xor roll sbb shrl movabs jb (bad) fwait sbb repnz (bad) xchg rex.XB rex.WRX (bad) (bad) xlat jns adc jo out sub pushq xchg sub callq shrd neg dec add setb shld clc cmc mov test stc cmc cmpb jmpq jne bt jmpq jne not mov not pushfw not mov dec mov ja inc cmp cmc bt cmc xor jmpq test (bad) mov movsb rol xchg mov stos and lret test xor test (bad) mov mov fnop xor hlt push out push (bad) pop movabs mov movabs pop (bad) int3 cld in sbb retq jo sub sbb fidivl jno pushfq jp or in jo out (bad) (bad) cld or (bad) (bad) (bad) repnz pushq xor and xchg cli pop cli mov pushq rex.RXB add push adc xchg mov repnz and nop cld (bad) xchg ds sub mov xchg enterq movslq lahf divl (bad) mov xchg add sub stos (bad) xor int3 jmp js mov xchg add retq and bt add cmp cmc jmpq xchg addl xchg nop sahf imul jnp (bad) test cmp or mov xor vpmaxub (bad) mov popfq and mov lret cli ss je in jrcxz or fimul (bad) jmp lahf rex.B sub jno rex.WRXB rex.R es test jno sub loopne and pushfq mov (bad) cld push xor (bad) (bad) (bad) cmp push push (bad) xchg test rex.WXB or in cmc jmp pop andb sub sub add add or xor retq push adc clc mov (bad) pop gs pop fisubrl in out (bad) or rex.WR cmp add gs push (bad) pop cmpsl lea mov (bad) mov (bad) insl lret decl test or add mov stos or callq or push xchg xchg test movsb rex.WB cwtl (bad) ja cmp outsb push xor cli test (bad) jb,pt stc es movsb pop adc in and ss lea mov mov std scas fstpt int and and (bad) jmp stos mov rex.B rex.WRB push (bad) mov fnstsw mov (bad) insl leaveq pop lock jmpq callq btr add rcl bt movsbw shld mov test cmc cmc cmpb jmpq jmpq test test clc cmp jnp jb stc cmp jmpq (bad) sub xor movabs in mov pop xchg test fs nop fmuls cmp (bad) loope lret mov or gs mov mov mov sbb lods add mov xor add push in xor pushq jbe rcll or (bad) sbb cmpsl xlat jbe sar rex.W lahf mov mull adc fldl (bad) rex.RX out out imulb pop rcl xlat pop (bad) (bad) (bad) decb insb cmpsb rex.RXB push xchg lret (bad) test sahf rolb mov leaveq (bad) sahf sub (bad) (bad) mov packssdw (bad) xor insb test rex.WRXB sub and loop cwtl cmc sub imul es (bad) xor outsl jns mov add push push push rex.RX gs gs outsl jb add test sub cmp add test cmp cmc cmp jmpq jmpq pop (bad) movabs (bad) movsb cmpsl sbb (bad) scas or sarb test mov (bad) xchg cmpsl adc mov rex.X out sub xchg rex.WXB rex.WRX (bad) jno add jmpq pop mov (bad) fidivrl mov callq retq addr32 roll je (bad) (bad) cld sub retq movabs sub push retq sbb add stc cmc (bad) movslq decl rex.RX add and sbb (bad) (bad) (bad) pushfq pop add add pop popfq (bad) test lret (bad) (bad) cmp out or rex.WRX cltd clc add fidivr fisttpl pop (bad) jle push retq (bad) sbb (bad) mov jrcxz mov adc rclb enterq iret mov incl rolb add add pushq test nop test test mov mov test loopne callq test and rex.W subb stos mov mov stos callq stos or add add pop add add movabs (bad) movabs mov movabs stos cmp pushq stos cwtl stos test mov stos callq stos sbb stos pop stos pushq add loopne add add add stos enterq fsubrs lock clc stos add lods and lods lods rex.W push lods pop lods (bad) lods pushq lods subb movabs lods enterq fsubrs lods clc lods add sbb xor lods push lods pop lods (bad) lods pushq lods subb lods movabs lods enterq fsubrs lock clc lods add sbb xor rex.W push scas pop scas (bad) scas pushq scas subb scas movabs lock adc add jo andb shlb add xor (bad) movsl jo andb movsl shlb movsl add xor (bad) cmpsb jo andb cmpsb shlb cmpsb add xor (bad) cmpsl jo andb cmpsl shlb cmpsl add xor (bad) test test test test test test test test test test test xor (bad) test nop test shrb stos enterq fsubrs lock clc stos add sbb xor stos push stos (bad) stos pushq stos subb stos mov mov stos shrb lock clc stos add lods lods rex.W js subb add push movsb pop movsb (bad) movsb pushq movsb andb movabs movsb enterq fsubs movsb clc movsb add sbb xor movsq push movsl pop movsl (bad) movsl pushq movsl andb movsl movabs movsl enterq fsubs lock clc movsl add sbb xor rex.W push cmpsb pop cmpsb (bad) cmpsb pushq cmpsb andb cmpsb movabs cmpsb enterq fsubs lock clc cmpsb add sbb xor cmpsq push cmpsl pop cmpsl (bad) cmpsl pushq cmpsl andb cmpsl movabs cmpsl enterq fsubs lock clc cmpsl add sbb jo js subb add and add test fsubrs lock or and cmp push stos pop stos (bad) stos pushq stos subb stos movabs stos enterq fsubrs add sbb xor stos push stos pop stos (bad) stos pushq stos subb stos movabs stos enterq fsubrs lock clc stos add or (bad) add add stos clc stos or lods rex.W pop lods pushq mov add add add stos and add add movabs mov movabs clc movabs and push movabs add sbb xor rex.W push scas pop scas (bad) scas pushq scas subb scas movabs scas enterq fsubrs lock clc scas add sbb xor scas push scas pushq scas subb scas movabs scas enterq fsubrs lock clc scas add add add add add sbb xor rex.W jo js andb movabs sub mov add sbb xor pop movabs andb movabs and movsb callq movsl xor movsq push movsl (bad) movsl add rex rex.W push cmpsb pop cmpsb (bad) cmpsb pushq cmpsb andb cmpsb movabs cmpsb enterq fsubs lock clc cmpsb add sbb xor cmpsq push cmpsl pop cmpsl (bad) cmpsl pushq cmpsl andb stos sbb xor stos push stos pop stos (bad) stos pushq stos test add add sbb (bad) add add xor rex.W push scas pop scas (bad) scas pushq (bad) add add lock lock andb movsb cmp movsb loopne add add add add in add add add (bad) stos lods add add (bad) movsl add sub add nop movabs fsubs or movsb movabs and add add add stos callq stos add lods and lods lods rex.W push lods pop lods (bad) lods pushq lods subb movabs lods enterq fsubrs lods clc lods add sbb xor lods push lods pop lods (bad) lods pushq lods subb lods movabs lods enterq fsubrs lock clc lods add sbb xor rex.W push scas pop scas (bad) scas pushq scas subb scas movabs scas enterq fsubrs add or pop add add movabs or and push movabs callq movsb add sbb xor movsq push movsl pop movsl (bad) movsl pushq movsl andb cmpsb (bad) cmpsb add add add add movabs mov mov cmp cwtl cmpsb mov cmpsl sbb xor callq test cmp pushq test mov test or cmp (bad) stos pushq lods rex lods push lods pop lods (bad) lods pushq lods subb lods movabs lods enterq fsubrs lock clc lods add sbb xor rex.W push scas pop scas (bad) scas pushq scas subb scas shrb scas loopne callq scas add xor add add lock sbb xor movabs callq movsl push movsl (bad) movsl mov fsubs (bad) cmpsb mov rcr stc push jmpq je cmp stc stc test sub bt cmp jmpq jmpq lea lea movzbw mov mov inc movzbw mov jmpq shl sar sar xor add btr mov inc sbb sar add ror mov test bt bt test jmpq adc loop and outsb sahf rex.X jrcxz movabs cmp js (bad) (bad) imul and rorb (bad) pop mov and outsl adc add xchg mov push std repnz std xchg incl jg add ror add andb movabs cmc pop pop rex stos mov retq and mov jp rex.X jo xchg mov callq fdivs lock jne jmpq jmpq pushq jmpq pop (bad) cltd mov cmpxchg jl jle mov pop pushfq sarb sub neg lret pushq push jnp xchg out sbb mov jne out out (bad) (bad) outsl cmp jg rorb fldcw rex.WRB (bad) enterq rorb lods scas lea mov insl int3 imul adc mov (bad) cs rex.RB rex.WRXB (bad) (bad) (bad) (bad) cli jrcxz mov (bad) (bad) (bad) std int (bad) xchg xchg sahf add sub lods lahf mov stc jmpq (bad) (bad) (bad) jmpq mov or add rex.WXB rex.WXB pop (bad) int3 imul lods andl xchg imull mov loopne add jnp (bad) (bad) imul (bad) xor fs xchg cmp movzbw bsr or movzbw add xor mov cmp cmp stc cmc cmpb jmpq (bad) movabs mov fs jae mov and adc cmp lahf rex.WR or sbb fimull scas jo sahf lock jae push xchg pop sub out jp mov cwtl rex.WX rex.WRX flds ja push cwtl mov test xchg (bad) (bad) cld rex.RXB adc (bad) pushq add fisubl out mov pushq movabs repnz xchg xlat or fs std and sbb jne (bad) lahf push stos push lea pop movslq add add (bad) rex.WX sub sbb adcl or pushq sahf cld pop pop rex.XB add (bad) and push outsb cli cmp fdivrl push ds rex.RB and pop jmpq sbb adc ja mov jge pop movabs pop rex.X mov push loope xor sbb xchg rcrl or (bad) nop adc lock outsb repz (bad) scas loope jne xlat and mov jb adc push jge iret and push add push xchg fimul rex.WRB jrcxz (bad) stos loopne xchg (bad) rex.WB cwtl movsl fs add adc (bad) ficompl in callq sti repz (bad) (bad) (bad) (bad) (bad) (bad) fsubl (bad) in cmpsb adcb (bad) jle sbb stos add add pop pop (bad) jbe sbb cli push xor enterq (bad) test add lret in xlat cmc push (bad) push rex.W cs (bad) retq imul jge ss test int rex cmp scas mov jge cwtl imul (bad) jmpq cmc rolb mov rex.WRX rclb sar (bad) sub pop xor mov xchg push sub rex.WB cmp push push push rex jle fidiv repz frstor mov sarl jo jg es pop or mov (bad) (bad) cli std xor lods mov (bad) (bad) std out cmp mov lahf mov flds sbb outsl cld leaveq stc xor xor rex.RB cli sahf add push (bad) xchg sbb icebp (bad) rex.WRXB mov insb fbstp rex.X sub stos xor cli ss roll cmp mov xor xchg adc add (bad) push (bad) rex.B rex.R add rex.WRB fs xchg xor mov jne (bad) (bad) sbb sbb or lahf cmp lahf pop rex.WB jbe adc push push movabs (bad) or test rex.RB cltd movabs popfq callq rex jno mov sbb jle loop pop movabs (bad) (bad) rex.WRX add cld mov (bad) (bad) pushq mov xor mov jbe imul mov or mov cmp stc add add or retq jp fcoml sub jp xor nop add sbb mov cli (bad) push mov in and in mov imul jmp callq mov jg and sbb shl xor setb mov setge not stos mov setl jmpq adc js pop insl rclb pop (bad) rex.WXB cmp pop outsb pop lods loopne pop (bad) and rol cmc (bad) lahf rex.WXB test (bad) shr loopne xchg mov or cmp movabs and scas jmp (bad) xchg mov (bad) xchg mov jle lock (bad) ja pop mov xor rex.XB popfq jne (bad) rex.WRX mov sub add insb retq stos (bad) adcl adc add mov adc (bad) push fisub add (bad) (bad) decb (bad) (bad) (bad) pushq cmp lahf ds sarb (bad) addr32 sub ds mov jl xchg xlat gs rex.R repz xchg jne test lea adc fwait add sahf or jge or callq mov cmp sub sub sub enterq not lea jmpq ja adc dec sub clc add not and clc sbb mov rol shl rol mov mov test test test stc repnz jmpq hlt mov and jp cmp xor (bad) test cmc (bad) rcrl (bad) sti out and stos sti movabs adc mov int add int enterq leaveq popfq out push rex.RXB stos loopne pushq (bad) movslq mov and jb add (bad) rex.XB xchg ja (bad) pop sub (bad) jo sub rex.X jg jb gs jge jb out int fstpt pushfq (bad) (bad) (bad) sti and in (bad) (bad) (bad) decb gs sahf test and xchg jae movabs mov imul cli or hlt enterq or cltd and ss add sbb (bad) in (bad) int xor push icebp rex notb in movabs callq xor subl negl scas jb sub rex.WB cmp xchg pop pop (bad) stos xchg rex.RX (bad) (bad) imul jg add fisubl (bad) vrsqrtss mov xor (bad) test orl (bad) mov cld stc leaveq test (bad) scas ja adc rex.WX lock and insl stc sbb adc test fidiv (bad) (bad) or fidivrl fmull pop leaveq mov jle lahf cmp cmpsl (bad) and callq in (bad) punpckldq mov (bad) mov mov pushq or (bad) std sub mov mov mov and (bad) (bad) repnz mov push stos sub fdivrp loop pushfq lods sbb mov out mov pop mov (bad) fidivl nop push ds jno xor adc add rex.X in (bad) and (bad) (bad) (bad) sti iret xor (bad) (bad) (bad) mov in jmpq pop jg movsb mov cltd xchg sbb xchg push movabs xor std divb mov add add cmpsb retq data16 (bad) cwtl rex.RB mov (bad) jge (bad) pop xor rorb in or jno in (bad) (bad) mov mov jmpq in mov repz stc (bad) jo,pt pushq pushq lahf mov xorl cmp roll push or and mov (bad) stos (bad) rcl mov out or fsubs movsb addl cld (bad) movabs loop in shrb pushfq xchg add xchg sahf add mov rex fwait loopne mov lock ja pop (bad) pop out in movsl movslq (bad) movabs push (bad) (bad) pop movabs xor jl (bad) jae xlat xlat (bad) (bad) (bad) std or (bad) (bad) (bad) (bad) std mov out fstpt (bad) mov mov add add or mov xchg push or scas add sbb pop cmp (bad) rex.WRB sub xchg xchg adc push rex.X loop (bad) sbb jl repnz lods test cli push cmp (bad) push (bad) (bad) adc or and mov test movabs (bad) mov mov and out pushfq imul incl insb adc push xchg out cmp push rex.X fcoms add (bad) jrcxz and sti push rex.RXB mov (bad) (bad) jle sbb mov icebp sub (bad) lock js pop mov push out (bad) and movabs loopne xchg rex.W icebp (bad) (bad) (bad) sti test jg pop (bad) (bad) (bad) (bad) insl je mov or and (bad) (bad) (bad) in insl (bad) rex.WRX sub xchg and rcl mov lods pop ss mov cltd int gs movslq push sub rex.WXB mov imul cs retq mov test rex.RX xchg iret lock stc jmpq ja cmc cmc jmpq test jmpq jne in cmpsl faddp mov movslq mov cwtl (bad) (bad) push jb,pn movabs je cmpl cs cmp sub mov and xor pushq jge (bad) cvtps2pi and (bad) (bad) cmp idivb fldln2 (bad) (bad) sub idivl (bad) (bad) (bad) (bad) sti (bad) rex.XB (bad) (bad) (bad) std testl movabs (bad) push insb scas je xchg pcmpeqb rex.WRX push jnp xchg rex.WX sbb push es fstpl xchg nop nop in packsswb xchg jno cmp retq xchg (bad) xchg mov mov out push jmpq (bad) and test rex.WXB lahf jb (bad) xchg adc icebp inc rolb bt stc setnp mov clc and ror (bad) lock mov setnp mov js callq jmpq mov repz movabs mov cwtl rex.WRXB sti cmc sbb rex.RB and xchg (bad) jle pushq jns sub mov rcl add rex.WRB loopne (bad) rex.WRB rex.X popfq pushfq and add (bad) jmpq popfq sbb hlt or in rex.WX (bad) out (bad) push mov push (bad) xchg idivl add cmc popq retq pop (bad) sbb cmp (bad) (bad) decb (bad) (bad) (bad) callq icebp mov andl lock or movabs adc stos mov rex.RB stos xchg repnz jns rex.WRX shrl movslq pushq jg rex xorb cltd and rex.B xor (bad) pop movsl sarb xchg (bad) ja (bad) popfq (bad) xor xorl xor mov mov lods cltd mov movabs clc out or fs xchg fidivl stos pop (bad) out fisttpl ss imul insl (bad) imul insl cmp nop pop or (bad) or (bad) scas cmp jmpq jge (bad) imul sub add lods lret outsb push sub pop loope xchg xlat ss xchg movabs adc cmp (bad) (bad) decb (bad) (bad) (bad) lcall xchg ror scas xchg rex.W repz enterq negl xor stc push fist fwait in cltd and rex.W outsl icebp scas mov (bad) adc and cmp fistl stc push add add andb (bad) lods rex.X ficomp movsb (bad) xorb xchg mov xor rex.WR rex.WRX rex.R movsl sarb stos (bad) xchg int3 (bad) add (bad) cmp ja rex.WXB jg add rex.RX mov loop rcrb idiv repnz enterq (bad) out sti mov jmpq loop repnz and and rex cmpsb fdivrs and xchg iret rex.WRX outsl xchg movb stc movabs pop loop pop (bad) fidivr mov adcb (bad) mov (bad) xchg mulb test in and adc (bad) sub jae push mov mov addr32 scas rex.RXB rex mov (bad) mov xcrypt-cbc cmpsl (bad) jmp lahf rex.WX cs jg loope iret outsb movslq xor rex.XB mov push mov rex.WR pushq jnp loope fcmovb stos mov sbb movabs cli movsb andb mov add xchg test rex.WRB retq add (bad) mov (bad) mov (bad) nop scas (bad) sbb (bad) sub (bad) (bad) decb (bad) (bad) (bad) pushq sarb or cmp xlat push loop popfq (bad) cwtl sub leaveq lods rex.WRX fs jmp jl sub jrcxz iret adc (bad) mov sbb movsb (bad) movabs popfq jle mov packuswb or mov (bad) rex.RXB mov rclb in lret stc cmp movb clc bt cmc test jmpq lret clc out adc (bad) (bad) adc pop rex.WXB hlt fsubs fsubrs xchg rex.RXB cmp callq and and cwtl jne cmp imul (bad) xor rex.RB (bad) pop push jne stc adc in xlat scas and xchg rex.WXB jge add rex.WRX rex.RXB fwait in sub (bad) add (bad) xchg (bad) stc pop movabs (bad) fistpll cmp lods mov out cmpsl jge (bad) (bad) cld push rex.WB (bad) (bad) cmp out in cwtl lahf rex.WXB (bad) (bad) xchg out mov adc (bad) cmp pop lock lea sub adc add add pushq cltd pop cmp (bad) mov xchg mov rex.RB push add jo imul (bad) ffreep mov and nop push add adc jmpq sbb jnp test out (bad) (bad) stc stc or shr xor clc shld movzbw bsf mov inc add or clc bt clc mov bt test cmp cmp test jmpq jmpq mov (bad) xchg push add mov lock mov (bad) (bad) push pop movsb ds mov loopne pavgb int (bad) jns pushq sarl pushq rex.RXB stos xorb adcl rex.RXB rex.WB (bad) pop xor rex.WR hlt (bad) in mov (bad) test cmp lea callq loopne mov push fildll int (bad) movslq (bad) (bad) mov (bad) repz leaveq add adc (bad) (bad) (bad) sti pop test jmp (bad) (bad) (bad) incb ja stc xor (bad) add jne out (bad) (bad) inc fisubl movsl sbb sub cmc dec mov push mov (bad) insb adc (bad) and sbb xchg cli or and mov cmp xor cmc movsb (bad) adc (bad) mov and xor test lock clc cmc stc cmp jmpq not lods jmpq jmpq movslq xchg repnz xor push rex.X repnz pop insl pop (bad) pop cmp stos adc adc leaveq callq (bad) xchg jnp movsb adc (bad) retq insl add jns add sub or sub test xchg push out sarl rex.X cmc adc popfq in xchg sub rex.X pushq mov and lods cli lahf or mov (bad) outsb gs push (bad) mov cmp scas (bad) jns mov fdivrs pop rex.WRXB (bad) jp rex.WR (bad) (bad) sti movsl gs stc ja (bad) (bad) decb fdivs mov or mov shl or (bad) sti push adc movslq (bad) (bad) cmpsl (bad) add fist test nop mov jrcxz pop adc jo rcrl (bad) (bad) shlb iret jmpq jmpq clc movb bt cmp test jmpq popq jmpq push jmpq popq jmpq jmpq mov pushfq mov push cld mov jmpq mov jmpq push jmpq jmpq push jmpq not jmpq mov jmpq push jmpq mov jmpq jmpq mov jmpq jmpq jmpq jbe shl lea stc lea cmc clc clc jmpq jmpq push jmpq rol btr bt mov stc clc xchg stc xor jmpq seto pop lea lea lea pop retq popq jmpq push jmpq mov jmpq pop bswap mov mov pop bswap mov jmpq mov jmpq push jmpq jmpq mov jo mov jmpq mov mov jb mov jg mov jmpq jmpq mov jmpq mov jmpq jmpq jmpq inc stc bt ror jmpq lea stc stc stc jmpq pushfq jmpq je setae not movsbw mov jmpq push jmpq movzbw mov not mov jmpq mov jmpq push jmpq jmpq jmpq push jg push jmpq jmpq imul jmpq jmpq mov jmpq jmpq jmpq jmpq jmpq dec stc stc xor clc stc clc bt cbtw jnp cwtl stc cmc cmc stc cltq jmpq jmpq (bad) hlt (bad) test rdtsc clc cmc sub jmpq jmpq pushfq jmpq jmpq shrd bts or rcr mov mov add jmpq es mov jmpq rol not sbb mov mov cmp cmp sub jmpq push jmpq shr sub movsbq jmpq push jmpq popq jmpq jmpq shld jmpq cwtd mov sbb dec test movzbw mov jmpq jmpq setae mov ror bsf sbb xor stc rcl mov not ror stc rol bsr adc xor movsbw ror rcr jmpq popq jmpq jmpq mov jmpq jmpq jmpq push jmpq jmpq jmpq jmpq jmpq push jmpq mov lea mov jmpq callq mov jmpq lea mov jmpq jmpq jmpq pushfq jmpq push jmpq jmpq cmc cmp jmpq mov jmpq push jmpq sub jmpq push jmpq divq jmpq push jmpq push jmpq push jmpq push jmpq jmpq jmpq mov jmpq jmpq jmpq test jmpq jmpq jmpq push jmpq push jmpq jne cmp sub stc cmp xchg cmp jno test test sub jmpq jmpq push jmpq jmpq pushfq jmpq pushfq jmpq movzbw mov mov mov jg sub stc imul jmpq jmpq jmpq jmpq jmpq jmpq jmpq or mov cmc inc rcr mov test jmpq popq jmpq jmpq jmpq not jmpq mov jmpq push jmpq jmpq jmpq pushfq jmpq jmpq inc test clc neg jmpq add bt test bt xor test cmc stc test cwtl cmc cltq bt sub jmpq add jmpq neg lahf sar not mov cmc test xchg jmpq mov jmpq add jmpq jbe push jmpq popq jmpq push jmpq jmpq push jmpq jns popq jmpq jmpq jmpq jmpq jmpq mov jmpq not jmpq jmpq pushfq jmpq jmpq mov jmpq cpuid clc stc sub cmc jmpq push jmpq push jmpq popq jmpq jmpq mov jmpq push jmpq pushfq jmpq sets pop lea setle pop jo xchg xchg pop mov setb jmpq not lea push setns not mov push not lea push dec jmpq jmpq je lea mov jmpq push jmpq push jmpq jmpq jmpq jmpq mov jmpq cmc test jmpq push jmpq push jmpq mov jmpq jmpq jmpq push jmpq shr movzbl dec clc add bswap jmpq lea jmpq je cmp bt stc clc cmp jmpq mov jmpq jmpq push jmpq jmpq jmpq push jmpq je jmpq push jmpq mov jmpq add btr mov shr setns mov clc sub jle divl jmpq rep data16 (bad) or stos (bad) add dec pop cmp or mov pop std std cmc test popfq jmpq jmpq push jmpq push jmpq jmpq mov jmpq push jmpq push jmpq push jp push jmpq pushfq jmpq jmpq jmpq push jmpq push jmpq jmpq ror cmc add jmpq mov jmpq mov jmpq popq jmpq jmpq not jmpq mov jmpq jmpq jmpq jmpq push jmpq jmpq jmpq movzbw bswap mov jmpq jmpq jmpq jmpq mov clc mov stc bt sub jmpq jmpq popq jmpq stc sub jb mov jmpq jmpq push jmpq pushfq jmpq jmpq mov jmpq mov jmpq shl movzbw neg mov bt cmp shrd add jmpq jmpq not seta mov jmpq or neg bts mov shr jmpq push jmpq jmpq jmpq dec bt bt cmp lea cmc clc stc xor test sub jmpq mov jmpq push jmpq popq jmpq lea xchg inc btr btc movzbq ror ror add sub not cmc sbb mov cmc rcr sub bsr shr cmp bsr and neg cmc inc mov setae shrd lea btr btc or movabs clc data16 repz stc sub bsf mov sets cmc add movzbl mov neg neg sub sbb cmc neg rcr add data16 repnz (bad) cmc ror movzbw neg shl sub bswap rol sub lea clc movzbq mov bt movzbl mov stc ror test stc test test add jmpq jmpq push jmpq jmpq jmpq inc mov xor bsr rcr bt mov stc cmp add jmpq jmpq push jmpq jne stc sete jmpq push jmpq jmpq push jmpq dec jmpq push jmpq clc add jmpq mov test rol movzbl cmc jmpq jmpq push jmpq rcl movsbw clc mov add jmpq jmpq rol jmpq jns popq jmpq mov jmpq push jmpq jmpq jmpq jmpq jmpq jmpq jmpq jp popq jmpq mov stc cmp bt sub cmp movl clc or jmpq stc clc clc add jmpq shrd bts jmpq clc and jmpq push jne push jg push jmpq pop jmpq jmpq cmp sub test test xchg test stc stc cmp jmpq jmpq ror rcr bswap movzbw not and rcr movzbl mov lea xadd test sub movzbl lea bsf sbb and inc bts mov neg jmpq jmpq sub bt clc shr jmpq dec stc test cmp lea clc stc cmc xor cmc stc sub jmpq push jmpq pushfq jmpq jmpq push jmpq lea dec mov bswap lea movsbw inc bswap lea jmpq mov not not mov jmpq jmpq jmpq mov jmpq push jmpq jmpq jmpq jmpq push jmpq popq jmpq movzbl jmpq push jmpq push jmpq clc mov sub neg bt setl mov test cmc sub cmc shrd jmpq cmp jmpq bt cmc btc mov cmc jmpq jmpq push jbe push jmpq push jmpq jmpq push jmpq jmpq pushfq jmpq push jmpq mov jmpq jmpq push jmpq jmpq push jmpq jmpq push jmpq mov movsbq mov jmpq seto pop movsbw movsbw pop not jmpq mov jmpq jmpq jmpq jmpq seto push mov movsbw mov jmpq cmp jmpq jmpq push jmpq jmpq inc jmpq push jmpq push jmpq jmpq push jmpq not rcr mov and stc bts mov (bad) icebp rcl mov stc bt clc sub stc jmpq jmpq jmpq push jmpq sbb shl xadd stc mov add sbb bt mov stc add jb mov jmpq jmpq push jmpq stc cmp xor cmc cmc cmc stc sub jmpq mov jmpq push jmpq jmpq push jae push jmpq jmpq mov jmpq jmpq jmpq push jmpq test bt and jmpq jmpq bt clc stc stc xor jmpq jmpq jmpq jmpq jmpq jmpq push jmpq jmpq bsf inc mov shl mov cmc test sub bt jmpq jne movsbw test ror xorb movzbl pop jmpq mov jmpq mov jmpq jmpq test sub stc stc cmp cmp shl jmpq jmpq jmpq jmpq jmpq pushfq jmpq mov jmpq mov jmpq push movzbw cmp or sub and jmpq jmpq jmpq push jmpq movzbq movsbw push movzbw movabs jmpq push jmpq jmpq push jmpq bswap mov jmpq push jmpq jmpq mov jmpq push jmpq jmpq push jmpq jmpq jmpq lea jmpq je test cmc stc cmp cmp jmpq jb lea jmpq mov jne pushfq jmpq jmpq bt sub clc cmp shr jmpq jmpq jmpq jmpq jmpq push jmpq push jmpq lea sub setne bswap movabs bswap add bt inc rcr mov neg and add movsbw movzbw test cmc mov add add dec neg sub clc dec shl add add adc rcr inc not add add rcl neg rcl sub adc movsbl ror sub rol cmc rcl rcl movzbq rcl movzbq rcr mov clc ror stc test add jmpq push jmpq jmpq jmpq pushfq jmpq push jmpq sbb dec mov rcr mov cmp stc sub jmpq jmpq ja shrd btr clc mov cmc xchg clc bt xor jmpq jmpq je clc bt clc test addl cmp cmp sub cmc stc jmpq mov jmpq jmpq pushfq jmpq bt add jmpq popq jmpq jmpq jmpq push jmpq jmpq push jmpq push jmpq jmpq jmpq jmpq push jmpq add add pushq add rclb add loopne rex.WRXB xorb add add add push add movabs xchg push add sbbb xor add movabs repz add add loopne pop add and add loopne pop add movabs int add ror add movabs in add (bad) sub xor add and add and push add rorb add push add loopne push add shr add movabs rex.WR add add add and push add add xor add (bad) mov add movabs orps sar add movabs mov add movabs popfq push add rex rex.WR add (bad) sahf push add rorb add push add andb xor add add xor add (bad) outsb push add loopne push add add add loopne rex.WRXB (bad) fs add loopne rex.WRXB rex xor add and push add subb rex add loopne push add add add ror add loopne push add add add sar add and add add add rex push add loopne rex.WRXB rex push add ror add movabs cmpsl push add rex push add (bad) fs add movabs pop push add and add sar add loopne rex.WRXB add add sbbb xor add add add movabs adc xor add andb add rex push add rclb add shrb add cmp xor add andb xor add andb add mov add sbbb xor add rex push add loopne push add add add (bad) (bad) push add and push add loopne push add rcrb add movabs rex.WRXB and add loopne push add xorb rorb add push add rex push add (bad) mov add sub add subb add add add add rex xor add sarb add sar add rex add ror add rex xor add add add movabs push push add movabs fcoms xor add movabs adc xor add and add sarb add push add add add rex push add add add (bad) mov add add add movabs sbb xor add loopne push add rex rex.WR add and push add loopne rex.WRXB rex add (bad) outsb push add and push add loopne pop add movabs stos push add loopne push add loopne push add movabs add xor add rex push add and add loopne push add add push add rex xor add and push add (bad) sahf push add rex xor add loopne push add add add sarb add mov add loopne push add add add loopne push add rex xor add subb sarb add (bad) push add add push add andb xor add rcrb add ja add shrb add add add add add push add rex add rex push add rclb add loopne rex.WRXB rex push add rclb xor add sarb add pushq add movabs mov add movabs mov add loopne push add (bad) repnz add add add ror add movabs sbb xor add rex push add ror add (bad) sub xor add (bad) repnz add rex xor add (bad) repnz add loopne push add rex add loopne push add and add rclb xor add add add add add loopne rex.WRXB loopne push add rex push add add add add xor add add add loopne push add loopne push add sarb add add push add rclb xor add (bad) (bad) push add sarb add movabs pop push add and push add add push add xorb loopne rex.WRXB add add subb add add or add subb rex add rclb xor add rex push add and add add add rcrb add xor xor add movabs pop push add rcrb add int3 push add andb xor add add add (bad) repnz add movabs xor xor add rex push add (bad) sahf push add (bad) fs add rclb add add add and add loopne push add loopne push add movabs xor xor xchg callq or adc (bad) decl test add add test cmc cmc jmpq push movabs push mov bswap lea movsbw push lea setbe push movzbw lea push movzbw mov mov setge push jmpq push jmpq cmc add clc jmpq push jmpq popq jmpq popq jmpq push jmpq push jmpq jmpq jmpq jmpq jmpq push jmpq rep shld pop shld clc btc cld pop std std popfq jmpq bt jmpq push jmpq popq jmpq jmpq jmpq jno pushfq jmpq jmpq mov jmpq jmpq jmpq jmpq push jmpq jmpq je clc stc bt test sub test cmc cmp cmp jmpq mov jmpq je movzbw jmpq mov bt test bt add ja callq jmpq push jmpq popq jmpq push jmpq jmpq jmpq jmpq dec or movzbl bt not xor cmc rcr sub jmpq push jmpq jmpq pushfq jno popq jmpq bts bsf bsr mov clc pop clc dec lea pop bsr std ror pop std cmc test pop lea adc pop jmpq callq movzbw movsbw jmpq jmpq push jmpq jmpq jmpq push jmpq pushq setnp movsbw jmpq push jmpq ror bts test setae add bsf or shr shld xor btc not bsr movzbw mov jg add jmpq push jmpq mov jmpq push jmpq jmpq cmp cwtl cmc cltq jle sub jmpq popq jmpq push jmpq jmpq jmpq ja push jmpq je setne jmpq jmpq cmp bt add jmpq push jmpq mov jmpq push jmpq push jmpq jmpq xadd adc jmpq jmpq jmpq jmpq jmpq jmpq popq jmpq add cmp movzbl mov jmpq jmpq push jmpq push jmpq jmpq push jmpq div jmpq mov stc cmp sub bt movl clc or jmpq push jmpq jl push jmpq jmpq push jmpq (bad) hlt add mov cmc mov mov cmc bt jmpq mov jmpq jmpq jmpq xadd not cmp cmc mov shld stc btc setg mov bt clc not test stc not jmpq movsbq not setae seta mov jmpq push jmpq pushfq jmpq popq jmpq xchg seto movsbq xchg push inc setl inc movsbw push dec dec dec pushq setl movabs dec lea mov dec push bswap mov movsbl jmpq pushfq jmpq bsr and rol lea cmp bt jmpq jmpq jmpq push jmpq push inc not xchg mov bswap inc bts xchg jmpq jmpq add jmpq mov jmpq push jmpq jmpq dec jmpq push jmpq popq jmpq popq jmpq lea lea dec mov not jmpq jmpq push jmpq mov jmpq jmpq push jmpq movzbw pop jmpq jmpq jmpq push jmpq push jmpq jmpq cmc add jmpq push jmpq jmpq mov xor bsr bswap movzbl inc xor sar btr not add mov not dec setb movzbw dec not jb clc shr xor mov ror movzbl bt cmc stc jmpq jmpq movzbw xchg mov neg mov test bsf mov cmc cmc add jmpq jmpq mov jmpq clc cmc sub jmpq pushfq jmpq push jmpq mov jmpq push jmpq jmpq jmpq jmpq jmpq bswap pop movsbq not pop xchg not not pop bswap movzbw jmpq mov jmpq cmpl jmpq push jmpq push jmpq stc stc cmp stc sub jmpq push jmpq jmpq jmpq jmpq push jmpq xor cmp stc bt sub jmpq mov jmpq inc cmc jne clc cmp not stc add cmp stc test clc add bt xor stc cwtl bt stc cltq cmc cmc jmpq push jmpq push js push jmpq push jmpq or pop shrd shl popfq lea pop bswap pop jmpq jmpq jmpq jmpq pop not jmpq cmc cmp jae jne sbb setae and xorb sete bswap pop jmpq push jmpq jmpq push jmpq mov jmpq popq jmpq push jmpq push jmpq mov jmpq jmpq push jmpq mov lea std std push movsbw jmpq mov jmpq mov jmpq push jmpq push jae push jmpq jmpq jbe btc rcl lea stc lea test bt bt cmp test jmpq push jmpq jmpq xadd mov lea mov clc add jmpq jmpq jmpq lea inc rcl jmpq jmpq jmpq pushfq jmpq mov jmpq jmpq clc bt add cmc cmc cmp mov jmpq push jmpq push jmpq shl neg inc and movzbl cmc clc xor clc cmp bt add jmpq jmpq jmpq jmpq jmpq xor bt mov cmc neg clc mov stc sub clc mul jmpq jne pushfq jmpq jmpq mov xor or dec sub and add rcl lea bt and not add neg and sar shld sub shl sub movzbw mov cmc jmpq pushfq jmpq jmpq sub jmpq push jmpq ja shld add mov btc neg clc lea stc sub shr neg lea movzbw btr and shl shl movsbl btc sub movzbw movsbq mov jmpq cld cld jmpq push jmpq jmpq push jmpq jmpq jmpq jmpq push jmpq push jmpq push jmpq jmpq jo pushfq jmpq mov jmpq jmpq jo ja sub or setge not mov sbb lea xchg test bsf sub bt clc lea sub shl and rol sub lea movsbw mov movzbl pushfq jmpq clc add jmpq push jb push jmpq jns push jmpq jmpq cmc xor cmp cmp jmpq rol setge ror shld add stc or not shr xor not movzbw bswap dec dec bsr lea neg or mov stc bt jp sub jmpq jmpq jmpq mov jmpq push jmpq mov jmpq push jmpq push jmpq push jmpq jmpq push jmpq push jmpq shrd mov cmp dec xor movsbw lea sub mov bswap jmpq push jmpq pushfq jmpq push jmpq push jmpq jmpq bsf mov bt stc jmpq add jmpq jmpq pushfq jmpq jmpq mov jmpq jmpq mov jmpq push jmpq movzbw xor btr mov bt shl stc stc shr cmp or stc cmc cmp xor stc jmpq jmpq jmpq pushfq jge popq jmpq jno popq jmpq jmpq push jmpq jmpq bsr bsf and movsbw shld mov and ror lea not movabs mov shr lea add adc shld mov or add sbb clc dec mov not neg sub dec ror add movsbw sar bswap not sets rcl neg sbb sar sub adc bts bt rcl sub bt bt movzbq movsbl mov rol seta mov clc jmpq popq jmpq popq jmpq popq jmpq push jmpq push jmpq movsbw data16 repnz btc mov cmp cmp cmc stc add jmpq jmpq jmpq jmpq jmpq push jmpq mov jmpq stc xor jmpq mov jmpq push jmpq jmpq xor jmpq jmpq stc jmpq jmpq lea jmpq push jne push jmpq jmpq jmpq jmpq not mov setle mov jmpq add ror mov cmc sub jmpq push jmpq push jmpq jmpq mov jmpq push je push jmpq cmp jmpq dec jmpq jmpq jmpq push jmpq push jmpq cmc cmp sub jle mov jle lea jmpq jne inc jmpq rep test pop btc rcr pop stc cmp cmp cld popfq jmpq jmpq push jmpq push jmpq jmpq jmpq jmpq jmpq jmpq jmpq cmp cmc cmp sub cmc jmpq push jmpq push jmpq imul jmpq jmpq jmpq dec test jmpq jmpq mov jmpq sub jmpq clc add jmpq jmpq pop retq pushfq jmpq jmpq mov jmpq push movsbw not push lea bswap movsbw push not repz not inc push jb mov movzbw push dec jns mov bswap push dec push movsbw movsbw xchg pushq js movabs movsbw movsbq not setle mov xchg bswap jmpq ja jne je jmpq push jmpq jmpq mov clc and test cmp jmpq inc sbb bts sar add bswap btr rcl xor rcl btc neg shld add lea stc or bsf add shr setle shld xor mov test bt test jmpq jmpq push jmpq push jmpq jle pushfq jmpq bsf rcl notl not btr rcr mov stc sub bt clc bt clc and jmpq cmc mov test mov shld mov stc cmp jmpq lea jmpq jmpq cmp not mov test jp test bt sub jmpq jmpq push jmpq push jmpq popq jmpq push jmpq mov jmpq mov jmpq stc sbb (bad) lock mov mov cmc bswap cmc stc jns add jmpq push jmpq popq jmpq add jg mov jmpq jmpq push jmpq cld cld jmpq mov jmpq pushfq jmpq push jmpq jmpq push jmpq mov jmpq je test bt cmc bt cmp jmpq popq jmpq push jmpq popq jmpq mov jmpq push jmpq cmc bt bt sub jmpq mov jmpq push jmpq push jmpq mov jmpq lea jmpq mov mov setge movabs xchg mov bswap bswap movzbq jmpq jmpq push jmpq jmpq push jmpq jmpq jmpq push jmpq jmpq xadd cmc mov sbb mov shr and mov clc jmpq pushfq jmpq clc jae add jmpq inc movabs bswap mov setle lea mov seto movzbw dec push jmpq push jmpq jmpq jmpq jmpq ja jmpq push jmpq mov jmpq shld mov cmc cmp bt cmc sub jmpq jmpq mov jmpq test sub test shl jmpq jmpq bsf xor bt mov jmpq mov jmpq push jmpq push jb push jmpq jmpq jmpq movzbq movzbw rcl cmc rcr mov jmpq popq jmpq push jmpq cmc not clc cmp cmc test add cmc cmp stc add cmp test clc xor jmpq push jmpq jmpq rcr and bt dec xor bsf shld data16 icebp (bad) (bad) cmc add jmpq bt test add jmpq push jmpq push jmpq jmpq jmpq push jmpq jmpq push jmpq lea jmpq push jmpq push jmpq push jmpq push jmpq jmpq bswap mov cmp mov jmpq divl jmpq push jmpq cmc cmp add cmp test bt jmpq push jmpq jmpq jge popq jmpq mov jmpq jmpq push jmpq jmpq movsbw lea shr stc mov jmpq push jmpq neg movzbl test xor test cmc stc test add jmpq jmpq push jmpq jmpq jmpq dec jmpq shld adc (bad) icebp mov neg bt cmp mov cmp cmc jmpq jmpq neg setle lea mov inc add cmp inc mov adc test clc mov bt bt clc add clc shrd jmpq mov jmpq add jmpq jmpq jmpq mov jmpq bt ror cmp clc bt stc xor cmc test cmp mov jmpq push jmpq jmpq (bad) lock rol sbb mov clc xor cmc clc cmc cmc ror stc stc xor clc jns ror test cmp test xor jmpq jmpq cmc test cmp jmpq jl popq jmpq push jmpq jmpq jmpq bswap cmc shld sar mov test sub jmpq jmpq mov jmpq push jmpq jmpq push jmpq not jmpq sar shr mov shl rol add mov js bt sub clc cmc stc shr jmpq jmpq jmpq jmpq jmpq jmpq push jmpq jmpq jmpq mov jmpq jmpq jmpq push jge push jmpq jmpq jmpq jmpq je stc cmp jmpq push jmpq jmpq push jmpq jle mov jmpq jmpq jmpq jmpq mov jmpq (bad) lock repz bts cmp xor sub add stc mov shrd cmp ror add and mov and adc shr sub sar neg add bt dec btc stc not data16 data16 (bad) neg lea sub sbb cmc sub cmc bt cmc movzbq mov mov bt clc bt ror bt stc add jmpq jmpq push jmpq push jmpq cmc cmc stc and jmpq stc clc stc sub bt stc stc imul jmpq push jmpq sub jmpq jmpq bt sub jmpq jmpq pushfq jmpq push jmpq push jmpq push jmpq push jmpq lea shl shr mov clc add mov cmp cmp bt jmpq jmpq popq jmpq jmpq jmpq movsbw push jmpq push jmpq jmpq mov jmpq dec cmc clc test cbtw bt bt stc cwtl cmp jmpq jmpq mov jmpq jmpq jmpq push jmpq sub inc mov cmp test add jmpq jne jne mov jmpq jmpq jmpq jle not jmpq xadd shld data16 lock push add movsb loopne movzbw (bad) lock stc bt jmpq jmpq push jmpq mov jmpq push jmpq jmpq lea dec movsbw bt jmpq jmpq pushfq jmpq add xchg not mov cmp (bad) hlt adc mov test jmpq jmpq rcl mov add (bad) lock jmpq jmpq push jmpq jmpq inc bt cmc clc stc neg cmp cmc clc clc sub test cmp jmpq push jmpq mov jmpq push jmpq jmpq pushfq jo popq jmpq jmpq push jmpq shrd cmp ror clc mov cmp add jmpq cmp jmpq push jmpq push je push jmpq jmpq mov jmpq jmpq push jmpq push jge push jmpq push jmpq jmpq bt mov stc cmc cmp sub test add jmpq jmpq rcr btr ror movsbw xchg not cmc btc bsf mov stc xchg sub jmpq cmp sub jmpq push jmpq je stc stc clc bt addl cmc cmc sub clc jmpq mov jmpq push jmpq push jmpq jmpq push jmpq sar shld (bad) testb rex.RX xchg retq movzbw inc inc setnp inc (bad) repnz neg setle rol bsr btc dec add mov bsr not mov jo cmc add jmpq push jmpq rcl add and sub mov jmpq jmpq push jmpq jmpq jmpq pop cmp cltq cmp jmpq jmpq jmpq push jmpq jne lea xorb jmpq jmpq popq jmpq add jmpq mov jmpq popq jmpq jmpq jmpq jmpq jmpq pushfq jmpq push jmpq push jmpq jmpq push jmpq clc mul jmpq jmpq jmpq pushfq jmpq mov jmpq cmc ror cmp bt cmc stc add jmpq mov jmpq mov jmpq push je push jmpq push jmpq jmpq push jmpq mov jmpq jmpq pushfq jmpq dec bt lea cmc clc clc xor test sub jmpq push clc ror bswap cmc sub data16 repz cmc clc cmp clc sub clc jmpq jmpq jmpq cld mov movsbq lea std push mov lea movzbw mov ja std std cld jmpq jmpq pushfq jmpq jae push jmpq push jmpq inc stc clc clc cmc ror cmc clc bt jmpq jmpq push jmpq mov std jmpq push jmpq jmpq jmpq jmpq jmpq sub jmpq jmpq jmpq jmpq lea jmpq jmpq jmpq jmpq jg push jmpq jmpq jmpq cmp movzbw mov sbb rcl mov test clc sub test clc stc cmp shl jmpq push jmpq push jmpq rcl stc btr mov cmp test add jmpq callq jmpq jmpq mov jmpq popq jmpq jmpq jmpq jmpq popq jmpq jmpq jmpq inc stc cmp cmp neg stc clc sub bt add cmp js bt sub jbe mov jmpq sub bt clc stc bt imul jmpq push jmpq push jmpq jmpq clc bt cmp pushq bt clc cmc add cld popfq jmpq popq jmpq push jmpq js mov jmpq push jmpq push jmpq test xor xadd mov clc dec mov jo cmp cmp sub jmpq rol mov jo xor jmpq pushfq jmpq jnp mov jno mov jmpq je cmc bt jmpq cmc cmc bt imul jmpq push jmpq test add jmpq push jmpq jmpq jmpq cmc bt clc mov jmpq mov jmpq push jmpq jmpq setb ror adc xadd not inc bsf bt inc mov stc jle sub sub btc and bsf cmp mov sub stc shr lea clc movabs clc adc btc add test lea btr mov shld inc ror add neg jmpq jne push jmpq add shl add btr sbb add inc mov cmp clc bt add jne mov jmpq jmpq lea jmpq jmpq push jp push jmpq jmpq jmpq jmpq push jmpq push jmpq jmpq pushfq jmpq popq jmpq push jmpq jmpq pushfq jge popq jmpq popq jmpq push jmpq jmpq jmpq jmpq clc shr jmpq push jmpq push jmpq mov jmpq push jmpq push jmpq jmpq jmpq push jmpq clc sub jmpq jmpq push jmpq popq jmpq mov jmpq jmpq clc test sub clc bt cmc stc shr jmpq push jmpq push jmpq jns sub jmpq push jmpq jmpq push jmpq jmpq popq jmpq cmp test cmc sub js mov jmpq jmpq push jmpq jmpq mov jmpq jmpq push jmpq mov jmpq jmpq jmpq push jmpq push jmpq jmpq mov jmpq jmpq inc cmc lea bt clc bt not jmpq jmpq push jmpq jmpq push jmpq add jmpq decl jmpq popq jmpq jmpq push jmpq jmpq jmpq lea push jmpq jmpq jmpq mov jbe mov jmpq jmpq jmpq push jmpq push jmpq rol sbb not add inc shrd ror (bad) (bad) sub mov lea movzbl inc movsbw or mov xor mov jmpq jmpq bt cmp clc sub jmpq jmpq jmpq jmpq jmpq dec cmc clc bt xor jmpq jmpq popq jmpq mov jmpq jmpq jmpq not jmpq push jmpq push jmpq mov jmpq jmpq mov jmpq js push jmpq jle pushfq jmpq jmpq push jmpq jmpq push jmpq cmc shl jmpq jmpq jb mov jmpq bswap movzbl pop lea bswap xchg pop lea not bswap jmpq jmpq push jmpq mov jmpq jmpq jmpq push jmpq jmpq clc test stc jmpq jmpq not cmc mov mov bswap mov jo sub clc bt mul jmpq lea jmpq xadd ror mov jno bts neg mov jmpq clc clc bt sub jmpq jmpq push jmpq clc bt cmc cmc sub jmpq shld mov or inc mov shr mov bt (bad) icebp mov test add stc shld jmpq rol rcl clc mov cmc clc jmpq jne adc neg mov bt and jmpq mov jmpq sar mov cmp cmp stc add jmpq jmpq not shr rol mov shl not test mov cmc not test not test cmc cmp clc sub clc and jmpq mov jmpq jmpq mov jmpq mov jmpq jmpq jmpq jmpq push jmpq jmpq cmp jmpq movsbw bswap notq neg mov cmp cmp cmp stc sub jmpq jmpq jmpq jmpq bt jmpq cmc mov jmpq addl bt push bt test stc clc sub jmpq mov jmpq xchg bt stc bt cmc cmp jmpq cwtl cmp cmc cltq cmp stc sub jmpq jmpq push jmpq push jne push jmpq mov jmpq jmpq jmpq inc cmp stc not cmp bt bt sub bt add bt xor stc cwtl cmp cmp stc stc sub jmpq push jmpq movsbq btr and sbb jmpq popq jmpq jmpq add test cmc jmpq jmpq push jmpq push jmpq jmpq lea lea lea jmpq push jmpq push jmpq push jmpq mov jmpq mov jmpq stc bswap stc bt test test sub bt ror jmpq mov xor test btr shr lea jmpq jmpq mov jmpq jmpq jmpq jmpq jmpq push jmpq test clc add jno not jmpq jmpq jns mov jmpq push jmpq push jmpq jmpq jmpq jmpq jmpq jmpq not jmpq jmpq push jmpq test jbe bt add jmpq mov jmpq push jmpq jmpq push jmpq jmpq jmpq bswap bt test test sub cmc bt clc ror jmpq test add jmpq popq jmpq push jmpq push jmpq jmpq jmpq pushfq jmpq jmpq mov jmpq jmpq push jmpq jmpq bswap movzbw mov jmpq jmpq push jmpq pushfq jmpq push jmpq clc sub jns bt sub jmpq jmpq jmpq xorb not lea lea pop jmpq jne shl mov xor movzbl mov cmp cmp jmpq jmpq push jmpq push jmpq jmpq stc sub jmpq cmp jmpq data16 lock bsr movzww bt test test stc xchg bt xor jmpq jmpq jmpq lea movzbw movsbw mov jmpq jmpq jmpq jmpq 