mov mov push cmp rcl pop fsubl ret dec popf mov pop call mov test inc movsl xor sub adc ffreep (bad) and out xchg imul fidivl lcall mov dec sub adc jae aaa jp push (bad) jmp xchg mov jnp push adc rorb and cmpsl popf int3 adc hlt test fsubs (bad) add jo xor push pop mov into cmp mov xchg leave jnp dec pusha mov test xor jo (bad) in adc jmp xchg iret repz pushl sti int and jle lahf pop xor add mov std mov jae cmp lahf and xchg repnz test jmp mov jno sarb sub sbb (bad) adc scas in fadds sti cmp (bad) pop jl xor dec dec dec mov cltd into sarb mov sti scas dec xchg rclb out add into mov push ljmp lahf rcr adc test nop adc add out sub loope mov popa jle mov bound pop fimull and add or daa (bad) loopne dec jp push mov or test xor xchg lods scas inc or loop jp inc cmp int in stos push pop in cld mov xchg sti cmp cmp nop out fnstenv cld fstl and cmpsb mov sub imul jle in mov ffreep sub sbb fs je pusha pusha cmp push jmp arpl push jno ret xchg mov cli mov xchg or sbb or and cmpb mov mov and stc das adc adc rcrb lret shll inc insl fsubrl dec (bad) fdivs inc and cmp jl mov dec dec inc in push xchg iret cmp mov mov xor xor insb mov and mov push add jno ja jmp cmp imul sarl mov jg sub sub push aad lret mov es and pushf mov xchg bswap mov pop pop movsbl mov movzbw pusha mov jmp pushf add pushl push pushf pushf lea jmp in mov stc pop inc push outsl sub sub scas cmc cmc xlat mov (bad) xchg mov xor pop comiss dec cmpsl mov mov call (bad) and and cmp imul in push jge adc movsb adc (bad) mov jle pop jle jmp mov (bad) push imul lods movl fsubs mov jnp adc mov add mov push xchg test pop addr16 sti sub mov stos repz push jbe cmpsb cmc adc and scas or mov inc lods adc adc mov or mov jecxz mov inc push push cmp ret dec ja inc mov fild jmp jbe jo jmp rolb les outsb mov sbb inc hlt mov cld outsl cld xchg jnp ret mov rolb cmp subl add test scas loope and ficoml fldcw mov test xchg sub xchg faddl packuswb mov orl xchg cmc cmp xchg loop bound stos stc dec mov inc sbb sahf cmpsl lea pushf jge icebp or adc leavew and mov push movsl js mov fld ja mov cli add sbb incl sbb inc mov jb xor fs insb add pop add fidivl cmp aad jb mov pop int3 ja loope ret mov in fwait mov mov sub push popa icebp icebp imul dec mov jmp lea xchg xchg mov jb rorb or jge fwait xchg popf movsl dec negb mov lahf mov mov lds je bound mov pushl es in push arpl push dec pop inc cmpsl mov sub jb cmp xor cmpsb jecxz in scas mov clc int3 inc mov cli pop inc mov stos in enter sub jns pop mov pop add mov ljmp je pusha and dec pushf dec mov and mov in mov pop std cld jecxz sbb mov dec dec std call mov xor stos cmpsl mov pop dec das pop xor test cli xchg jg dec iret cmp ret sbb mov jne loop push (bad) xor and incl ja add fdivrs lods cmp andl jmp mov lcall sub and (bad) loop pushl into mov dec les mov cmpsb (bad) mov add jbe fnsave int xchg jg jne outsl push sub cmc cmp shrb xchg jmp cmp outsl push aam cmpsb mov lret push xchg ljmp test lods pop fcoms sub cmp mov frstor jae mov inc xchg or pop xor lea fdiv stc std icebp jmp xor sbb stos push loope andl or cltd pop daa fisubl dec adc xchg repnz std dec out jbe push add sub dec addr16 loope xchg call iret lea je cmp push jmp pusha lea call pusha movb mov jmp cmp call push xchg lahf pop add inc sub dec lret or cmpsl movsl in dec mov (bad) lmsw mov loope lret and insl add pop iret xor mov add pop in cltd test jnp push mov out xlat xor cmp iret xchg inc jmp or xchg (bad) adc adc pushl push xchg nop lea ljmp push pop pop data16 mov mov ja nop lds enter in fldl xor popa or nop stc popa cli xor fnstenv inc adcl aam popa popa hlt xorl js iret imul push add es add or cwtl jns add cmp int3 add arpl inc and inc shrl and mov lods jo jmp mov frstor (bad) je stos cltd and or jnp or lods (bad) pop add jp jmp and (bad) push mov gs enter pop pop fld jmp adc inc fisttpl jns xchg in aam ffree insl adcl xor sub cmp (bad) insl clc sbb aaa neg movsl gs enter xlat cmpsb and add add cmpsl and sbb pop fst insl sbb lahf ds outsl xchg mov jns cmp popf jo rcl clc addr16 call push cs pusha xchg jmp das out rcl and dec push pop xor (bad) imul neg shlb (bad) push xlat scas push imul sub js jg fs sbb cltd or icebp bound and roll test sti ss rcl mov push ja cmpsb fcomps loope mov mov adcb ljmp inc xor pop xor or and out or sub dec rolb movsb out int jge (bad) sarb sbb into sub sarb xchg js or (bad) sub fsubs or popf dec mov out inc sub or mov std movsb aaa jbe mov ss fdivrs popa ss mov push (bad) aad dec mov add jp fs pusha popl mov inc scas cs dec imul lds pop out xchg push inc push xchg dec pop lea sub or cmpsb les sbb xchg mov sbb js xor into mov insl (bad) sti test pushf adc pop iret or xor sbb push push pusha cmp xchg add ret popa fiaddl loopne dec push add cli cwtl cmp ret mov std and or adc jbe sub (bad) lods imul scas pusha aam stc push mov add pushf xor movb pushf pushf lea call push lea jae clc jmp rcr cmpsl daa push inc push mov mov mov adc add outsb in pushf xchg xor mov sub inc dec notb ds out push jg sub mov cmp or add fsts cmc cld mov lret test out xchg jmp sub mov pop cwtl push mov sub xlat hlt (bad) or xchg dec xor mov jnp xchg test mov push (bad) jno push movsb jmp cwtl cmp or sub push fbstp mov aad xor ret ja fwait daa mov lea aam js add paddw mov popf xchg jns mov arpl fistl add add inc in repnz mov ss sbb mov mov add pop notl add xorl out popf stos jmp mov les and mov fcmovbe les cld adc nop sbb inc dec ss fistpl add push xchg or rclb cmpsl xor (bad) aaa xchg jno mov shrb mov ds sub and jge stos add pop into out out ds sti mov mov mov xlat add add push sub inc push mov inc ret xchg cmc sub or ret cmp jne test mov or sub and outsb dec cwtl pop (bad) jno movsl jle add cmp mov xor mov xchg xchg adc or jne pop adc pop nop sub out xchg fucomi dec sub add aad jb push arpl cmp loope pushf jp push jmp out es les xor xchg lods sarl test bound mov or lea into push shll xchg xor icebp lods fstpl (bad) xor push inc adc push pop inc add mov outsl lret jbe sub jp inc lahf (bad) mov xchg pusha mov mov daa dec xlat arpl sti arpl jne inc mov add out add add (bad) idivb (bad) dec iret scas lea int testl push sub or out rcr lahf (bad) mov lea mov sbb loope mov fnsave mov push push xor roll fbstp sub sbb (bad) mov stc xor push jp pop add outsb lods pop fsubs sbb jl xchg ss or mov jl jo pop adc popf jne pop push mov xchg insl mov (bad) sub outsb sub jo xor ds cld xor scas and push pusha pusha jo xchg outsl fild dec pop xchg inc dec xor cld pop jp jg aad ds je fdivs or inc dec movsl push es and fwait mov cmpsl lret imul cmp std adc push mov cmp scas dec stos add push rclb mov loop mov bt sub movb rep not mov pushl pushf pushf lea jmp in xor inc dec push int push leave icebp add cltd (bad) incl xchg jg pop scas ja cmpsl dec aad lea jb mov je test cmp inc xrelease xchg lcall sub fdivrl cmp aas xor data16 ret cmp mov cwtl ss inc daa sub push popa jmp pop cmpl push icebp push nop hlt dec movsl cmp cmpsb mov mov xchg xor cmp inc mov jge pop and xchg mov loope jns pusha xchg sbb jle or mov adc fwait mov movq adc and inc enter dec fistpll in cmp or and xchg cmpsl pop add shrb xchg mov push bound and sub push lcall mov dec jmp cwtl decb adc mov dec mov fstpt sub mov or sbb addr16 fldcw inc daa pop movsb jmp inc mov rorl mov push inc xchg add jo mov and mov mov pop xor insl pushw or dec out icebp push xor xor pop jge add stos add adc push iret movsb dec or cmpsb insb sub sub rorb and test pop mov push (bad) stc dec sub push (bad) mov ja lcall aam stos fidivrl mov sbb and jmp (bad) into insb in cs loopne dec outsb dec lock mov rcrb xchg test inc fnstenv adc sbb repz adc mov add cmpsb inc loope cwtl imul fisubr mov sbb fbstp mov cmpl or sub sbbl inc test subl bt mov call clc push add jmp call pushf pop mov loopne test cmc add in cmpsl xchg mov xor adc mov lcall mov sub jecxz loope loope leave scas test dec pushf ret mov sbb xor testb push mov iret (bad) out lods sub fistpll jge jae inc cmp sub aad test mov (bad) (bad) repz xchg xchg ret orl mov negb imul aam testl (bad) (bad) in jg add sub jp dec dec dec push push push cs insb add test fiaddl add inc jl add ret (bad) cmc cmc cmc rol movb call mov mov push add pushf fidivl xchg push insb (bad) adc and jp push sbb jne xchg inc (bad) arpl sbbl lds pop sbb rorb ja inc mov (bad) clc inc mov (bad) mov and xchg les cmc dec xchg or xor lret dec repz popa out sbb push jbe in loope loope repnz in fsubrp (bad) hlt pop in jns or test and lret add test js clc lock sbb rcrb icebp sub stc and lds mov adc dec iret inc rolb mov sub push dec out push inc push cmp lods xor lds pop mov jae push ds ds loope out mov icebp and push (bad) mov jg jnp mov push add mov mov sti cmp lea mov dec pop mov dec iret pop bound mov and pop and daa pop pop or pop cmp (bad) stos dec enter cltd into dec pslld dec mov jg sbb add inc xor mov adc push and stc push pop inc push push fstl mov mov aaa scas xorl mov pop inc sub gs cmp scas push sbb cltd into dec and add jns jl enter jp,pn adc movsb aam scas and and das data16 in pop inc insb sahf int3 in jp mov sub movsb data16 mov (bad) push dec pushf pop mov ds les sub aaa dec addr16 cwtl scas jo push (bad) xchg pop mov jg notl cmp sub xor (bad) incl inc push sarl outsb int3 dec mov mov ret aaa idiv in inc lods imul (bad) sti mov inc push movsl enter sbb aaa out in mov inc lfs arpl jne mulb mov ljmp mov enter sbb arpl sar test enter jno lock sbb ret push mov jmp stos adc mov mov stos shll cs xchg sbb pop sbb insb (bad) push mov fidivr ljmp mov (bad) ss (bad) bnd ret push ffreep andb lods xor repz iret xor loope pop sub fidivr push lcall inc call dec int3 (bad) xchg jmp cmpsb cli sbbl insb mov andb sbb adc mov loope dec jbe mov cwtl (bad) cli imul xchg aad addb push jne sub sbb gs daa fstpt icebp lods adc inc push pushf (bad) adc lret mov icebp lods sbb rorb lods fstps inc sub clc mov and outsl out daa xchg mov test adc lret aad or mov push dec aaa cmpsl push loop cmp out mov xchg mov ljmp jns arpl inc test or and add adc and cmp adc jl jg xor sbb inc jecxz or ds push pusha push insb out push mov jmp fnstenv cld cmp pusha lahf xchg jno nop bound (bad) aaa gs repz xchg std imul (bad) cmpsl icebp xor cmp aad push iret lcall jne inc out xchg adc jb imul call movsl lds addr16 stc cltd jge inc arpl imul std stos and mov or das inc scas popf insb xchg call iret scas fcompl loop xchg sbb cmpb test fs sbb xor xchg jo jge xor stos je pop sbb sub les outsl data16 mov dec jno stc loope leave shlb fstpt or icebp or cld inc jle fnsave cmp lds stc nop pop pop div test xor xor shlb fisubl and ficom add ret push pop mov mov test sbb lret sarl and inc xchg cmp mov stos mov jae push inc add mov pop push imul movsl sub xlat test inc ret (bad) mov inc push scas jbe mov push hlt jb inc dec xchg pop ret daa nop out into pop pop and out dec dec mov fbstp sbb rolb mov es addb dec dec hlt and gs push xor je ror xchg pushf repz cmpl push cs inc mov mov fs mov pop int3 fwait pop jmp push jbe mov fcmovnb sbbl jo lock (bad) rclb (bad) das jo in xor push aas (bad) mov (bad) inc add scas les cmp inc aad aad (bad) into dec dec andb or mov jne adc movsl enter je adc arpl in in jne,pt inc sarl repnz mov mov xor mov repz pop int3 xchg ljmp (bad) pop mov les dec add fdivl cwtl cmp fstpl sub add mov stc or popa mov jle add repz xchg jmp push add xor add (bad) mov inc ja pop fistl ss push pop mov ficomp lret jmp test enter std insl (bad) hlt push sub and mov lcall inc ds add insb or les dec cmp mov push mov fidivl inc into clc lret imulb cmpsb arpl pop imul test mov sub movsb pop ljmp sbb xchg (bad) subl rolb fnstenv je rcrb repnz aad xor aam (bad) cmpsb cmp fistpl out add sbb hlt lea rcl pop or add and xchg dec pop xchg pop sbb jge jns cmpsb dec stos pop in loop pop pusha in cmp and push outsl fidivrl push xor adc cs pop pop cmp jns push xor push aaa lea jmp adc fisubr dec sti aam popa mov cmp xchg pusha scas sarb in push sarb mov adc and xor xor outsl in in xchg sub cmp into mov iret inc ror mov pop jge and in pop inc sub sub ret xor call pushf pusha lods stc clc cmc pushf ror call sub fmull push inc push lahf xchg call fs out mov sbb inc rcr pusha lds adc push ret in cmp lea lret xchg push fsubs shll int adc mov and sub (bad) mov xchg inc jno sub sub subl dec sub lret lahf push inc push or pusha mov dec shr or lods and inc fs fnsave icebp and jle jecxz mov adc xor out jmp pusha out xorl movsb (bad) jne lods push movsb sbb mov mov movsb xor mov cmp push fmuls sub xchg inc mov cmp scas inc or add je out mov push addr16 and mov fucomp sbb ficom adc das inc jbe fldt cli mov jl cmp and cwtl in enter add pop repnz mov bound inc mov dec mov push pop inc push sub fs call jo call in sub outsb hlt cli lcall aas sbb fs insb mov mov dec mov cmp mov aam mov xchg repz xchg loope pop (bad) pop pop push cli inc aas test movsl (bad) mov ljmp push inc cmc mov push add push lret roll inc ret push mov pop in xor jle ljmp adc cmp rcrl lea dec jge movsl cld inc inc adc notl adc insl lds sbb adc out pop neg pusha dec bt mov xor cmp bt cmp sub jmp jmp movw mov mov push push pushl ret jmp out add mov and test cmp mov xor (bad) cmp out add fisttp and pop cli mov add jb lds xlat loope and pop testl mov faddl negb int3 cli xchg dec ret (bad) iret push enter lock pop pop and enter pop insl imulb cwtl mov push int mov fisttpll movsb enter mov jle clc sub xchg mov frstor dec movb mov jmp inc mov sbb xor mov outsl or arpl push dec mov and imul lahf arpl daa add push ds sub push dec push fcmovu pop mov in jp (bad) mov dec sbb roll faddl mov (bad) stos jno adc hlt fiadd jle jbe dec dec and inc outsl out cld int3 push cmp pop fwait lcall loop pop inc dec jbe sub xorl mov orl cli mov inc lods xor and pop add and scas push mov add dec addr16 sub adc jns ret jbe push cwtl jmp add add add pop (bad) push add add push push add add add add add add add sub add cmp add xor add push cmp add inc add add add inc push add dec push add dec outsb jae popa insb insb add jb imul add jb gs dec dec cs je add push popf dec sbb movsl cli (bad) in in pop insb or aaa iret out aad xlat (bad) sbb or sbb and jb repz stos icebp sub cmp mov das out pushl pop pushf imul jbe add stc push push enter mov push mov lahf add pop decl mov xchg out xor stos hlt push popf lock xchg lahf mov cmp sub fdivp mov notb jns inc push xchg sbb inc mov or lcall stos hlt push negb outsl arpl jno outsb sti push int add gs adc cltd popf push pop daa jne repnz push xchg jo add (bad) xchg inc mov aaa dec cmp pop hlt inc das iret pop sub and push xchg mov mov dec mov pop out or in or movsb add ljmp arpl mov bound add jo les mov (bad) repnz sbb mov insl jbe add pop loop fistpl and cmp sub iret mov add fild stos hlt push lods (bad) xor cli ret sbb sbb adcl xchg scas loope (bad) inc lds jb mov inc hlt pop (bad) pop xlat fs inc in aaa int3 (bad) jbe dec jnp add mov mov imull mov roll incl cli dec fmul out std in mov jle fnstcw movsl push push xchg sbb add cmp dec pop inc adc sub or sub data16 cmp and gs adc lahf mov cs cmp sub loop mov in fidivr and push pop sbb and cmp jns pop pop stos or pop mov and dec sub out fnstenv icebp push sbb dec ficomp leave mov mov push mov cmpsb xor ja pop dec cmpsl rcl test lods push cmp std sbb mov mov adc push adc mov fadd scas fnstenv push or push insb in xor xor in jge jp xor jmp jg adc aas sarb cmp sub inc dec push leave push push in (bad) push jmp and mov repnz aas mov push mov cmpsl mov insl aaa addr16 pop jecxz subl in ret repz scas mov add dec in and (bad) adc fldenv mov into mov int3 ret jmp jno jns (bad) je or call cmc fcom aam jge lea xor and mov (bad) push jecxz mov xchg mov sub sbb fdivl jle add pop popf mov repz jnp rcll xchg dec imul cs fisub add pop xchg outsb jle int3 mulb sbb sti fbld addr16 insl enter add loope imul sarl call es push and (bad) sub pop fistpl jge or imul push je cmc push test stc ljmp mov jns jg fmull cmc add aas dec mov cwtl dec pushf lahf pop xchg cmpsl xchg sbb jo jmp xchg fs dec pop test mov (bad) mov pop loope pop loopne imull imulb pushf adc add shlb mov jae push mov into push cltd or bound push ds pushf lea jne setbe movb bswap cwtl jmp rep pushf lea movsbw jmp sbb mov jmp xchg js (bad) es push inc fistpl mov ret repz imul insl cltd mov mov or bound aas sbb popa pop fild cmp xlat xchg movsl ret xchg int sbb add dec mov outsl mov add inc movsb aaa mov cwtl xchg (bad) hlt dec imul shl pop loopne out pop jbe xor ja clc outsl lcall aas mov pushf mov pop and mov jbe pop cmp xchg xchg popf gs jg xchg mov mov imul push mov loopne out pop jle mov jne jge loope fidiv jbe push hlt lret dec lret (bad) ret mov fcmovnb jge push test (bad) shlb cs test add fwait or pop movq cmpsl push and imul push cmc push test inc jbe jg inc inc negb pop stc std xchg pop (bad) push lods nop pop out je and mov adc lea fisttpl or call pop sbb mov outsb cmc add push add pop stc inc xor inc mov pop inc in sub cmp lea call jmp cmp pusha jmp in cmp push lods sbb inc (bad) sbb inc mov out sbb xchg fst xor in jp cmp lret sub loope jmp mov push fildl jne adc pop pop xor sbb leave cmpsb fidivrl jl cmp jmp rcl xor mov pop add lret cmp fisubr scas inc cmp cmp xchg hlt orl in dec dec push sti lret loop and shrl adc push inc data16 pop jns push pop out and mov clc add cmc cmc scas aad hlt or mulb jle je xchg and mov adcl das fdivp (bad) stos xchg (bad) mov lahf inc add add add add add add add add add mov add add push add add add incl add add add add add jne add add add add nop push add xchg push add mov add push add add add jecxz and and xchg insl pop lahf (bad) scas xorl icebp jg aas fistpll add push jno and fs pusha jle incb call xor sub stc sbb mov in addr16 in sub xor icebp cltd jb or adc and mov (bad) cmp mov lea in popa dec inc mov jmp mov ret in pop (bad) jg test or sahf adc frstor push jae dec (bad) jmp fwait push dec popa (bad) ja stc cmp fstpt cwtl call int das (bad) mov mov in and clc inc repz in jmp jp pop ret push das jo xabort cld or fcoml shl xchg and ret popf stos iret mov shr cmp cwtl lock aam (bad) pop mov lock mov add pop push sub fildll inc sbb dec loop add lds adc inc xchg sbb mov mov stos fisttpl fbstp xchg push adc test mov rol pusha or fnop push xchg (bad) lret inc mov xchg mov pop pop push imul (bad) sub das xchg push mov jmp dec inc inc divl inc add jb sahf loope inc test jge dec adc pusha popl add gs push gs imul jne add inc push dec mov sbb daa xlat (bad) test pusha (bad) mov mov xchg ljmp adc pop mov push xlat adc lahf (bad) sub setbe hlt fs jecxz jge (bad) outsl jne es and (bad) rolb lock pop sti cwtl imul push cmp ror insl fdivrs inc dec clc daa popf mov pop scas frstor mov and ds hlt shlb inc daa ret fnsave push xor pop pop ss ret jle cld and dec mov int push mov inc add outsb mov shll ficom cmc push repnz add sbb push das aaa sbb and jnp mulb mov mov (bad) int mov lret sarb push cld lret enter adc push pop push sbb adc clc push mov repnz xor in add lock cmpsb fs sbb (bad) cwtl lods mov dec mov shrl add std shll sub movsl movsl mov negl pandn jnp fistpl push and sub mov int pop sti or ss add xchg out inc loope pop add cs add mov push movsb xchg or mov or fcompl mov jb cmp cmp jae (bad) cltd call or pop repnz add push cmp adc jl push dec rcrl sub adc test inc or clc xchg cli sbb mov cli add adc inc ja pop comiss xor push mov pusha and andl push lock mov outsl rorb xchg pop push repnz push in aad xor sbb mov repz dec lcall mov xchg sub push pop xchg xor jle xlat sbb mov lret stos jnp lret ss pop lds pop mov adc fsubs popa mov mov jge outsl push dec push (bad) push mov stc cmc jmp aas ja fistl stos sti push data16 sarb hlt push pop loope in xchg jns jl aas inc insl ret jae lcall dec or or ljmp sub (bad) lahf mov test sbb cld dec sub xor ret loop sbb cmp sub inc jmp sub imul mov lret pop stc push add js xchg js or ja cli bound xchg imul arpl mov cli mov mov bound xchg ja xlat stos cmc adc push insb pusha jns cwtl xchg or jmp aas xchg mov pop or lret cmpsl or outsl js loopew push xchg movsl dec cli pop ss sub dec mov cmp stc movsl push sbb cs fcmovbe cli mov addr16 xor xchg pusha sub pop mov popf cmp shrb in les push pop movsb and fidiv cli aas add cmpsl inc fnsave imul jmp cmp xchg xor rcrl out jl adc pop mov xor push fstps pop push ret fisub dec or jo pop bound fpatan (bad) out cwtl mov shll sub push pop xlat pop sbb push and mov (bad) mov push ret xlat (bad) repnz jp jns jp cmp add cmp dec inc addr16 lret aaa out xor (bad) cmp loopne aam mov push leave ljmp mov imul add daa sub sub mov rcrl jns ljmp push sub or xchg fdivr sbb pop or mov fnstenv mov dec test mov push or sbb lcall lds in (bad) adc (bad) push shrb ja incl leave mov rcll imul cli push jbe jg sahf mov imul jmp sbb jmp cmpl sahf mov push mov (bad) xchg out cmp dec ss pop push push xchg repnz shl popf enter aas cld and jbe insb es sub dec int3 sbb cmpsb ficompl fstps dec outsb imul xor mov cs or fildll pop fistp idivb dec test outsl lods and imul adcb inc pop stos xchg lahf mov xchg cli in out psubw or and add sarl push daa pop cli cmp pop mov or pusha (bad) clc fiaddl lret push rcrl js pop sbb jbe outsb sbb cmp pop mov js arpl push daa sub fisubl push xor mov push jle bound dec or icebp test xlat jae cld jp (bad) insb xlat sbb lahf pusha adc imul cwtl pushf push mov daa lods mov pop mov scas jbe or mov out out lcall push push aad inc arpl cmp dec xor aam dec std jne lcall push mov stos rclb push ss lock jne out paddd xchg inc push pop xor mov xor in push fbstp stos imul movsl jnp dec jecxz push fcompl mov and cli dec lahf outsl xor mov mov pop incl mov cmp inc insl push mov pop stos data16 push (bad) mov push xor mov stos cltd stc repz adc sub or stc lret pop mov mov pop dec outsb cwtl aas mov xlat in pop sti in pop rcrl movsb and js jecxz loop push stos out ret aas mov int3 push test jno dec aas popa mov imul inc sub cmp xor mov mov push xlat sub repnz outsl nop mov fimul bound mov (bad) or jno insl outsl pop and enter pop jge dec daa pop xor (bad) je sbb push sbb mov test jo pop push sub dec imul and sbb lret pusha das dec jne mov cs jg dec mov (bad) clc sub out mov fldenv aad mov cli cmp aad nop outsl popa jl aas dec sbbb add and inc xor pop ja pop rorl jbe test sbb jns xchg xchg dec and stc repnz jbe sub (bad) pop cmp fnsave cld sahf popa fbstp ret out inc iret xchg jmp test push insl out arpl cmp pop mov sub lods xlat js gs call outsl cmp ja jg insl mov arpl fwait incl sbb pusha mov cli adc xor dec and stc sbb icebp mov xchg out data16 imul ss in lret es leave dec pop nop sti mov jmp mov cmp ljmp dec fidivr (bad) jne movsl inc and aam adc lahf insl je sub loopne cmp or xchg in or es pop lock inc pop test arpl rorl ja xchg stos (bad) js popf (bad) cltd stos pusha test movsl repnz imul or mov sub dec mov cmp lret jae test icebp push clc push and and int jmp stc outsl xchg rcrl cmpsl xor inc (bad) mov xchg dec inc jns out add xchg push mov stc out adc imul mov lret adc jae std and push push dec push in xlat bound xchg jp fdecstp and sub xor mov pop outsl sub loop sahf dec ljmp jns icebp mov push arpl push jno cmp loopne ljmp adc (bad) sub sbb loopne pop or imul dec (bad) mul adc adc stc aas les adc mov fsubrs mov or or xor fisubrl cmc mov loope loop ds call xchg pmaxsw ljmp and pop cmp stc dec gs aas jae stc xor xchg and push inc rcrl cmp fimull jns call push movsb gs xlat xchg sbb les icebp movsl leave ss lock inc dec in dec (bad) call sbb pop call (bad) push out es push pop dec push lea ret mov xlat (bad) xor pop jle mov dec push push es and dec add xchg (bad) gs adc (bad) mov xor sub jge scas adcl out inc dec lret iret jb push fxtract xlat cmp cmpsl fsts jle xchg daa stc lret or mov out pop sub aas xor repz imul addr16 imull xchg ljmp mov shrl xor dec aas mulb mov sub movsl (bad) cmp js je roll xchg lahf xor mov mov dec fadd or addr16 xchg dec push call lods cmp mov repz (bad) stc xor fldl2t shr ja iret enter push ret dec shrl jnp pop pop sub or push xchg addr16 push lahf loopne cltd arpl icebp jae fildll jns xchg add insb imul push imul das sub jg aaa dec mov ja jns push jno into or les xor sbb ss cwtl cmp xlat call or add jb inc repnz inc aad mov stos aaa mov cmp int pop xlat jns push lcall imul sbb (bad) mov enter insb test incl fwait daa ljmp dec repnz dec dec clc dec or xlat push jmp aas or dec dec dec mov fimull in mov outsl movsb pop lret divl insb mov xchg fnstenv sub out das pop xor ja xor pop dec repnz pop pop ljmp xlat xchg push leave movsl push sub outsl std stos (bad) lods outsl and pop daa es popf or ds push push inc insl decl das mov jmp mov lods aaa ljmp mov and push ja cmp cmp pop mov and insl fisubrl xchg movsl xchg bound lock jae frndint push repz aaa fcmovne out dec popf or daa aas int3 (bad) lds and fldt cld jno jmp stos xor and or mov std imul xlat cwtl push ljmp mov in imul push and fdivrl push into imul cmpsb arpl pop jp xlat mov jl push iret or out or in cmpsl and loop insl loope jnp fldcw std mov call fwait in outsb xchg imul jne inc dec loope add cmpsl dec sub cmpsl inc ja xor cmp arpl mov sub push jns adc mov push dec jl es jge add jae lahf push icebp gs xor push aaa pop pop (bad) call cmp mov cmp mov inc outsl inc stos jecxz inc imul xchg and xchg ja mov add test (bad) xor addr16 stc jecxz test mov daa (bad) sub sub sub lock jle push enter addr16 icebp and scas fidiv pop push mov js subl fwait dec pop jns and sbb xlat dec call jne stc mov adc sbb aad outsl mul xlat movsb mov mov push pop sub cli jge out lock mov je lcall jbe ljmp stos xor mov inc xlat jle and jmp bound push rcrb aam insb sbb adc lahf dec jo xlat lret ret bound mov inc jbe jg stos sbb loop xchg (bad) jo fimull cmp mov jp lods sbb xor negl push xchg imul sub adc lcall mov shll add cmp or es mov and add lret sbb or fsts (bad) das cltd insl mov push add lret jp fistpll movsl push fidiv fnstcw push sbb xchg cmp mov negb sub rcl sub xor ficompl sub xlat rolb mov imul fxam insl xchg xlat add dec pop cmp xor jg mov xchg xchg ja xchg aas in sbb mov sbb inc push fmuls mov pop es ss (bad) movsl sub pushf mov cmp fnstcw mov das arpl mov mov xchg adc jmp mov push rcrl in imul or outsl stos jecxz inc cli xlat jae ret mov mov movsb mov pop cmp mov mov pop arpl jns test scas jno inc mov lock fidivr xchg push cmp dec mov or loope in xor pop test lahf sbb push push cmp cld (bad) idivl inc xor xor pop stos lods jbe cli scas repnz pop mov sub cmpsb xchg repz push xor insb jae rorl loope xor dec out subb push lahf mov xor mov addr16 pop mov xchg cmp push pushf pop cli jl std push and ja push ficom scas sbbl call dec add iret (bad) js or insb fcoms pop mov mov popa int inc fwait cmc es stos mov into insb out pop fcmovbe aas outsl pop or mov mov movsl pop jae or cltd push sbb mov sub je addr16 jge dec jne xor and and xchg pop push jmp cmpl jmp mov inc xchg mov cmp mov or and dec movsb cltd aam push sub scas nop mov dec pop xchg sub (bad) xor add aad ljmp insb xlat fcoml adcb imul xchg jae (bad) xor out popa jns fldenv test push stos loope js (bad) lcall pop push fwait movsl pop mov push add outsb inc pusha add mov adc xchg loop xor push or inc sbb roll mov dec lods xor ss mov jo test pop in sbb arpl loopne pop loope dec sub mov xchg xchg sbb je xchg fcomps out call lret ss inc and xlat or jae cmp xor cmpsl stc jns jbe xchg scas sbb test cmpsl mov mov mov xor mov shrl adc stc sbb (bad) mov mov jmp clc xchg mov lahf sub pop scas or adc mov (bad) jns pop stc pop add lret das jle pop lods lcall or sub push das icebp mov test xor jno cmpsb add ja cs mov and popa addb mov mov and mov sub pop cli or repz repz cmp push xor push mov insb push and lahf mov xchg mov inc or dec mov leave and jp xchg jg (bad) int3 push outsl (bad) xchg jne xlat jecxz daa xor xchg (bad) push dec cmp lds lods imul enter jp aas mov adc xlat pop lret mov adc cwtl loop dec mov cmpsl les pusha adc es lret lret rcl xor cmp push icebp outsb add insb (bad) cwtl pop push js lahf outsl ljmp mov cmp sub adc lods lahf cmp inc xor sub cmpsl rcrb dec or jo xor je js (bad) sbb je adc clc test mov dec in jae push lcall push xchg je mov ljmp iret mov (bad) pop cmp or jb outsl sub fldcw xor loope lods int add pop scas inc push mov xchg mov fnop xor imul aam jnp mov dec push xlat loope mov xchg pop jo dec jo mov arpl sarb cmp ss iret mov adc xor cltd outsl xchg sbb xor bound fildl push out dec dec jo push xchg lcall pop push out movsl xor dec movsl or push pop sub push xor mov xor push adc jp stc push iret pop or jae xor popl arpl je add idivb dec in xchg mov xorb adc fdivl lea sub lods (bad) push mov mov inc loope xchg rcll arpl shll add adc fnstenv jg push (bad) repz dec dec (bad) mov iret insb in mov mov add popf push or scas dec or sub xchg sub pop xor jne adc mov cmp call cmpsl and mov xchg call mov push xor test bound aam cltd test or aaa jmp data16 xor mov sbb mov inc xor mov ja mov sbb mov xchg (bad) (bad) pop outsb and ljmp addr16 inc xor sub pop sbb cmp or push sbb add xchg fbld push pop jne inc push add insb call sub mov sub sub out sub xor stos cmp jae jae leave aad jbe cmp xchg and inc sub pop out sarl enter sub push jns outsl inc outsb mov dec jmp enter aad mov scas lret std cli cmp vpunpckldq push ljmp popa xlat inc rorl ds push xor pop lcall stc pop cmp stc ljmp sub iret xor imul push out pop insl (bad) ja fnsave xor stc and mov cmc adc push push push out movsb adc add or fwait mov ja shlw xor add push enter lret into ljmp imul mov dec or add (bad) movsb fdivs test xor ficompl sarl je push mov xor stos jle icebp and stc push imul mov call xlat imul stc lock mov inc stos sub imul xchg mov fwait test mov mov mov das cwtl mov test xor hlt dec xchg or cmc sub in dec mov or lds call fistpll jmp enter lahf adc stc insl insb test dec push jae xor les pushf jecxz adc stc jns popf sbb das push fwait xlat mov inc fidiv int push mov sbb xor pop lahf pusha inc (bad) mov sub push xor mov test enter mov cltd and (bad) dec loope imul mov aas cmp mov ret push pop stc lcall pop xchg mov in mov loope dec (bad) sar push stos jno out sub test adc int3 mov or imul jmp scas jns inc xlat sbb jno cld repnz push imul xchg aad rol xchg add or in int3 mov lcall sbb aas cmp push shl cmp jp (bad) mov jae mov add and push or xlat sub je sub daa xlat pop mov jns jno nop adc out sbb sbb cmp adc loopne adc stc pop or or adc mov xor out sub imul cmp or inc mov out jmp lcall fs jns jb push imul adc xchg divb int xchg out xchg xchg fsubrl es dec imul pop cli (bad) in (bad) jae aas imul js mov xor push jbe mov lods mov pop push dec iret mov and out mov fldcw xor aam scas cs sbb imul aas push lock lret fs push stc xchg mov mov stc jne xlat outsb mov in sub (bad) jne clc mov push inc mov or mov out or ja ljmp mov xchg scas dec lret mov push pop xchg out out test and stos addr16 xlat xor in mov adc lds into add jo pop jmp addr16 push into sub jge add dec in inc and fidivl ret movsb sub addr16 xor cs pop mov and frstor mov pop out xchg (bad) push out jns test ja jp,pt fcmovnbe xor or fwait sbb data16 push pop je dec jb mov add insl gs pop xlat jl xchg hlt aaa push outsb fsubrl aaa cmp fnstcw das fsubp out out xchg cli dec ret xlat cs cmp xor pop inc js xlat adc (bad) ss out pop xlat add sub gs xchg inc fcom std xor mov cmpsl and (bad) fistp mov pop pop in jns xor sub je (bad) mov pop sub inc sub hlt test mov ret pop ljmp ds lock inc lahf push sub aas add lods shrl or lret in pop mov xor sbb iret sarl push scas xchg xchg xlat mov imul out data16 mov sti icebp lret cmp push outsl push arpl pop in sbb dec add jo (bad) sbb addr16 pop lods mov cmpsl pop daa jg pop mov inc pop pushf shrl sbb scas cmp push jne sbb mov inc jno cmp xchg int3 xchg fucompp pop repz cmpsl pop ja pop push pop mov or fyl2x cmp clc stc mov sub arpl fwait sub mov or push sub sub fmuls push (bad) cltd mov xchg sbb clc push mov pop mov in cmp cmp xor inc jmp cmp bound je xchg in cmp stos popw mov pop popf xchg call stc data16 sub cmp push rcl test dec into pop stos idivb pop cmpsl jb jbe pop pop out xor mov sub adc xor or xchg mov xchg cmp bound cli imul push cltd or jg test out cmp dec xor ret cwtl push mov push fdivs scas stc sub sub stc and cmp xchg jns pop into push js sub pop lcall mov cmp push push daa or or pop push imul clc imul mov push dec or stc call bound ss mov pop fisubrl cltd imul xor call pop xchg dec repnz pop icebp clc lret test cli inc test push fsubrs push (bad) push (bad) mov inc pop push negb rorb push enter or xor int aaa ss push dec inc imul js mov fstps les sbb fidiv js mov shrl fimull sti cli sbb push sbb das out mov push mov sub (bad) sbb fnstsw sub pop jne lods lret adc jmp push lcall push or jno cmp mov adc pop adc fisttpll sarl leave stos fsubrl push lea out rcrl jnp lret mov sbb mov clc leave xchg fsubs push ja sahf jmp xchg movsl mov jecxz,pn push sbb xor add imul xor in sbb sarl inc daa fwait adc (bad) jecxz push xchg xlat gs xor jne mov xchg out test ja scas pop cltd push dec rcrb imul xchg jo add cld dec fnstsw and jno inc icebp xchg cmpsl jnp mov fist shrl fadds mov rcll fistp (bad) outsl pop insb stc jne or and push mov mov xor fsubrs add add push pop jns ja xchg mov and adc mov je (bad) xchg stc jae lret mov je push bound fs sarl mov rol adc push fwait (bad) mov outsl jp inc fwait jns push jl (bad) repz imul movsb sub push flds (bad) xor xor repnz pop js xchg addr16 adc lahf adc call lret xchg xchg rorb pop sub pop lods into stos xchg push dec stc fnstcw gs mov aas dec push ss jno cmp rcrb or dec (bad) imul inc in cli cmp push xor add push add pop dec sbb hlt push cmp jnp inc mov in in mov es push (bad) xchg imulb xor jnp cld xor or inc loop cwtl jnp fs bound fldenv out loop loop push mov mov ficompl adc clc cmp fscale inc arpl push xlat and mov inc push es cmpsl iret addl xor gs es mov jnp jns (bad) ja xor cmp mov xchg and lock outsb adc pop or sbb xor mov int3 jmp (bad) pop stos cmp xor (bad) xchg negb or pop pop xor cmp mov shr push sbb push mov lahf mov bound mov jl andb sbb (bad) ja mov sbb inc je push sbb push cli pop stos push or mov jo cli popa imul adc (bad) les mov and hlt inc es pop sub insb sbb inc push cmp and sahf ss ret pop jbe rcr pop imul xor mulb (bad) xor subb fcmovnb cmc push xor xchg pop cmc push sbb pop (bad) cli jecxz das pusha je mov int dec lretw jg sub int3 leave hlt jae cmp scas dec icebp inc (bad) lock sub ficompl sbb dec movb and push jmp xor stc rclb (bad) pop movl and jne push pop movsb cmp in les fsubs rclb add pop fs mov shr icebp adc or sti dec lds dec and and mov jo jnp ret sub rcrl jbe std and push outsl fcoms ja fwait and sbb dec push push outsl pop or sub xchg daa outsl ljmp js inc aam ja inc xor push imul pop mov push dec dec cmp sbb or jmp pop adc mov (bad) adc sahf cmp lods sub arpl frndint int3 inc lret add pop sahf or mov fisttpll xchg push push xchg mov adc (bad) movsb push add pop (bad) sahf xlat ljmp pop jmp stc and es fnstenv dec pop sbb loop or rcrl jae push cli sub aam inc insl jge push dec test inc popf and add xor shrb clc push cmp (bad) cmp rorb sbb xchg adc add addr16 pop dec sbb and cld jnp movsb jno (bad) mov sub nop and jb cmc or jae out ds dec add stc jge and jb cld jmp iret xorl nop cltd dec xor out movsb xor or enter gs test or test scas add xlat jno pop mov jae (bad) out cmp dec stos xchg push popf and add ret mov mov jl outsl inc push mov pop mov pop jno into sbb nop icebp fnstcw addr16 shll or pop les xor outsb ja push push or lret sbb jbe cmpsb aam mov jo push lret out imul call sbb je icebp mov dec xchg xor hlt daa sbb mov rol inc mov clc add out int cltd dec mov push pop hlt in xchg sbb xor cltd sbb in pop mov sbb cmp push mov insl pop push push aas mov repnz pop push jne fs notl sbb roll jb xlat shrb movsb mov xlat ret mov std (bad) ja or notb out xlat rorl xchg jae inc test or outsl pop cli jo js insb ficom insl cmpxchg dec jl cwtl xor fmull push lahf jbe mov and pop lahf rcll imul cmp mov ljmp leave fsubrl mov scas imul dec clc iret rorl cli gs fnstsw das insb add jge adc jge dec ret (bad) repnz dec xlat imul cs inc add mov xor rcrl std add sbb mov pop push loope (bad) dec fcmovnbe sub sbb cmp and inc or loop movsb push push enter stc adc jnp pop inc adc js jl push jmp inc adc dec xor pop mov mov xor push hlt xchg ljmp mov ljmp movsl call xlat mov lret adc jae call push not pop dec icebp cvtdq2ps and jb xlat cmc adcb or xor push xor ja data16 mov jp loop fimull mov xlat dec enter mov cs sub inc lods imul xchg movsb cmp rcl jl (bad) call cmp aad xor sub dec xchg xor jo sub pop mov cmp pop cli inc jns push mov and fldcw mov xor jl and (bad) cmp das pop pop test sub fidivr rep jg rcl dec mov lcall aad imul sbb push fcmovnu hlt cmp cwtl xlat xor add stc imul call test adc dec xor jnp and and cmp (bad) sbb jg lods repnz lock sbb fmulp aas cmp mov lcall or daa test xlat mov xchg sbb pop adc and push fnstenv inc out adcb rcr (bad) stos jns jns pop jg sub lods (bad) gs push test cmp sbb out dec sbb loopne jae inc sbb addb xchg iret push push push call daa clc and jae (bad) or das clc (bad) or fadds test imul (bad) fs mov dec push mov ret jb xor sub roll (bad) cmp mov fnsave test push sbb insl mov pop and pushf xlat add pop insl stos rcll jbe nop daa jcxz inc call repnz lret (bad) jno xlat (bad) jae call inc movsb in sub jo cwtl mov and fcmovbe out test jmp adc insl adc es jl push (bad) shr out cmp pop repz jae mov push dec clc push lahf xchg ja or inc dec mov (bad) imul mov dec imulb pop xor pusha mulb xor ret mov dec ds cli push sbb imul out fs andl pop inc add loope fisubrl mov or inc cmp bound insl nop add pop push pop dec adc add scas jne movsb data16 cmp mov add dec fcomps cmpsb lods xchg inc data16 jo stc xor inc pop fs rorl mov (bad) enter jmp push push cmp repnz std jns into mov mov jno push fs movlps jns jge insl fidivr (bad) jno or xor and stos mov sbb loop repz push stos jl add jmp idivb cmp sbb roll push (bad) movl jne inc (bad) mov addr16 cmp jnp dec push mov push scas xlat insb mov dec pop aad xor jmp outsl or dec pushf shrl fcomp daa je mov xchg jae push pop adc dec xchg pop jnp imul sub push insl aad bound and dec mov loope lea mov icebp outsb movsl hlt add sub push pop xor pop xor lcall sub add xlat pop insl sub rep lcall adc icebp push or out repz cli data16 mov pop sahf in xchg pop sub add insl cmp faddl and push icebp push adc ret aad sbb cli jge loop outsl sti mov and pusha mov xchg jmp push sbb mov or stc mul push mov or jecxz jge lods push stos xor push mov mov jo sbb neg mov and out mov popa (bad) push sbb int sbb mov out mov xor xchg push xlat mov fnstenv mov push jno loope aad ds lret sbb push mov mov xchg dec dec rcll push mov adc sub dec adc jbe daa leave jno es xor xor pusha mov out mov fisttpl flds jae ja shll sahf sub je xor cmp mov lods inc loop or dec ret mov jnp inc insl mov cmpsb enter sub clc lahf dec popa cmp jecxz stos mov and stc dec mov sub js icebp add std (bad) lock pop (bad) xor ss sub xor push pusha pop sub push stc call movl ficompl dec daa cwtl repz popf jl pop xchg in cli sbb fmulp mov cmp add jle sub jo test sbb fsubrs (bad) int3 cli push mov imul (bad) movsl out imul (bad) pop pop mov fwait shlb push mov lods popl push dec ret and sbb pop lock cmp push outsl xor add pop jp cmp sti xor nop and cmp and test mov ret andl call push jns,pt fcoml cmp xor and cwtl push pop out adc outsl and xor xlat lods clc push lret std adc aas les shrl aas jbe xorb pop imul inc jno sbb push adc inc fstl push push pop dec fwait inc out or cmpsb les test xor shl hlt imul insb lahf xor gs inc dec jns aad and imul or cld xor pop iret xor ljmp add clc cmp fisubrl fistpll aas cmp sub lds xlat xchg adc push aaa out xchg adc or fneni(8087 mov pop xor adc movsl inc div stc xchg mov out cmpb fs push and mov push xlat xor and cmpsl rcl sbb cs xor enter dec push les pusha push addr16 jl push in push xchg popa push fmull or out mov (bad) ficompl push or movl imul jne popf push data16 mov and xor xchg sti ret jp flds sub cmp shr popa in xlat mov and (bad) test add inc outsl out cmp xor push jmp mov mov je push stc iret jge test imul lret push mov loope ljmp mov push imul add insl xor (bad) mov lods jmp jle jne rcll neg jb mov pop in cmp out add outsl push fnstenv jae xlat test test cmp sbb pop jae movsb aaa movsl pop jecxz mov mov dec or mov push imul dec cli hlt (bad) jbe lret inc rcrb push xchg mov mov jno flds out fwait sub std ja jmp int mov stc loope aas push out insl jbe into pop and dec cwtl fiadd aas aas and movsl ror mov aad (bad) (bad) rcrb rcll mov addr16 jle cmp adc mov aas and ret add lret aad push ljmp adc scas fsubp mov stc pop pop (bad) bound shll and mov addr16 xor rcll pop outsl push push cmpsl inc dec pop ficoml add inc pushf arpl push in mov adc das shrl lock jmp call xchg imul je xlat clc (bad) ljmp pop lret jnp sbb pop stc push addr16 push push lea ret sbb jbe sbb lret cmp idivl add test (bad) cmp jp dec int dec shrl sub jns imul cmp ljmp adc sub pop jp enter mov xchg cwtl ljmp (bad) mov mov inc mov sahf insb push shlb cmp test mov cld dec out xor stc adc (bad) rolb ds mov mov or push push cmc jbe dec jns mov ja subl dec je test loop push or xlat inc gs jl mov stos iret pop rcll lret pop mov and rcr push inc push add cld into push aaa rcl je fildl sbb neg cmpsb aad cmp pop sub clc cmpsb mov ljmp jne cmc arpl mov jb (bad) fld clc ljmp jmp movsl fstps rolb mulb shrb mov sbb in pop push xor sub stc testb loopne rclb xlat imul mov sub mov dec adc (bad) shlb jbe mov mov aas or sbb cmp ja jle dec mov scas ja mulb or sbb imul call dec push imul pop mov inc xchg xchg in gs xor (bad) divl mov movsl cli push std pop xlat adc inc xchg xor push cli pop data16 out xor imul sub lahf mov dec ljmp adc cmp imul mov add stos push test das push sbb and adc sub sub jmp ss pusha ja sbb pop push test adc icebp nop popf dec adc stos add outsb out les test mov ss aas stc test ja and test ret jl xor (bad) (bad) cli addr16 adc fnstenv aas inc out mov inc push inc push xlat inc xchg xchg mov shlb repz lret cli test ja scas cmpsb jmp shll push sbb rcrl iret mov stc mov add xor xor ds sbb xchg imul ret pop push push cwtl add mov cld icebp fidiv xchg pop test or jns sub fdivl ficomp push jmp scas or mov pop cld in xlat jecxz sub aad loope inc cmp adc dec repnz pop cmp mov rcll cld inc fadd pop test dec cmp cmpl jmp inc icebp ja ret mov sub mov ljmp jnp sarl daa xchg lret mov pop ja loopne clc xchg cmpb mov and pop pop lea or repnz mov inc call loope hlt outsl inc push sbb pop pusha sub xchg sarl inc mov andb insb stos xchg test sbb push cmp imul xlat lds fwait enter in push icebp cmp fldenv push fcom daa dec xchg inc jg xchg mov arpl aam sbb sub hlt fsubrp (bad) data16 cmp push xor xor xchg sub cld dec inc or gs sti rorb xlat ds push sbb cmp fsqrt mov adc xor push fisubr fsts int3 or (bad) adc loop loope stos mov lcall adc ss inc stc ljmp scas xor adc inc dec in mov xchg mov dec add jno and test xlat into ja inc out pop cs loop imul mov ffree jmp fistpll stos test or jns imul (bad) sub jne dec xor mov nop push cmp push test loop mov mov popa cli pxor clc fdivl jo cmp negb mov sub mov (bad) mov dec add push shrl cli icebp fisub sbb mov jne,pt jp movsl inc enter mov dec pop jl lods xor xchg sub push (bad) pop push xchg ljmp (bad) xchg adc sbb xchg fldenv xchg out cwtl push enter jmp sbb lods call dec mov out out lock push inc pop test cmc xchg jle jbe pop imul adc push aas adc xchg xchg xlat flds dec sub sub in outsl ret adc xchg push sub test pop in sub arpl sub cmpsl out imul sub pop sbb mulb pop inc data16 fist inc push jae imull fiaddl jg packssdw xchg sub ficomp inc cli les add dec xorl pop sarb ss mov lcall cmp lret fstps mov xlat xchg adc mov das or jg xor rcrl in xlat and push cmp xchg fs jmp test stc add and sub inc leave addr16 mov xor call or adc cmc jb,pn sbb out imul xlat js xor mov clc je xor adc fnstenv (bad) or shr repnz push in adc (bad) icebp jg mov and inc lea push and in sub push es outsl cmp cwtl pusha icebp inc xlat jecxz inc sub int enter dec and adc xor pop push fnstenv jns clc and pop mov push shrl enter cmp mov or sbb (bad) stc mov loopne adc mov pop into jb cmp cmp pushl aaa orl out xor std cmp add pop push xor xor je cmp push movsb xor clc lret cmp push push out cmpsl pop nop and cli inc mov imul xor (bad) inc pop cmp push repz mov adc mov inc add aad mov aam mov pop stos adc (bad) xor xor push push sub fwait xchg dec jo cmc aam clc push imul (bad) cmp push jns xor jle (bad) xor in call and cli aas jno gs fdivrl push cmpl jmp sar push out arpl out clc jns rcll jle dec push xlat hlt clc (bad) ss pushf jae jecxz mov movsb mov dec xlat stc pop rcll lret xor cli sbb sub push iret dec std add scas jns mov ret cld inc stos jae inc jmp fld jb rclb mov ret xchg xchg mov push fcomps into and je imul lret loopnew subb jnp pop in sub xor sbb test fldenv xchg push mov xchg mov imul jecxz jne push jmp popa rcll xchg mov inc scas nop sti jmp push mov fnstcw (bad) xlat sub inc dec jge jmp dec icebp sbb imul xchg cli and sarl or sub inc jae jno mov mov xorb insl aaa push cmpsl scas bound cld mov lods xchg ljmp repnz mov add fisttpl fnstenv push arpl cwtl pop adc gs sub ljmp push into (bad) sub mov ficompl cs mov add jecxz popa in mov aas imul pusha (bad) xor ficom lret and je aaa mov mov jb pop ja push or adc xor xorl push fstl jecxz mov push lret dec add scas or lret add pop addr16 pop enter not loopne fadd inc pop ds cmp jae std xlat bound ret das pop cmpsl (bad) ror adcl (bad) xor pop leave scas xor cmp sub mov pop and rolb ficom jecxz enter leave cltd pop or mov jae dec stos ljmp sub sarb lock pop xlat jge sub mov cmp sarl xchg cli sahf sbb inc inc notb xchg sub (bad) gs call mov adc ret push jo bound and imul sub jl push xlat jns xor pop or je popf clc and mul push jnp movsl popa test out mov xlat mov dec mov rcrl jmp (bad) (bad) jbe nop and xor jl aam xor inc rcr sbb in insl ljmp jnp xchg insl dec sbb mov dec xchg push inc les pop xor mov (bad) jns sbb and cli ja clc rcl test sysexit int cltd jge cld aaa cs xchg xor xor cmp stc mov xor data16 out fsts (bad) (bad) (bad) or mov cli sbb shr (bad) pop dec or inc push xlat lcall push adc aam cmp jmp jnp mov mov aaa repz (bad) mov pop test push sarl sbb ret pop xlat jb pop add xchg fiadd jae jbe,pt insl aaa (bad) push jnp cmp mov (bad) push mov push push call lods jae lods adc push clc sub repnz and push test mov fdiv (bad) jmp ret xor es dec daa cmpsl (bad) ljmp sbb pop and cmp pushf dec mov cld adc out insb (bad) xchg push jne cmp popa bound (bad) in jmp dec daa push or mov sub lcall sub xchg sbb mov insl fistpl fcmovne out dec cmp (bad) and pop test xchg popf dec (bad) or pushf adc adc sbb idivb mov mov stos test sub mov pop out or sti std or inc adc (bad) jo repz cmc int3 xlat mov sub stc sarl jo fisttpll outsl stos lea sti fcoms push and push mov sub sbb push mov pop jmp aad push jl lret mov nop cs push outsl dec sub jge lret and or push jns xor mov inc xlat out out inc xchg icebp loopne cli cld mov pop gs pop imul mov dec sbb xor mov add and inc inc in and stos pop jp rclb jmp sbb pop ljmp mov (bad) nop dec ja das dec pop inc inc aad dec xor iret cmp jb pop or jmp xor push fistpll fildll ja in mulb xlat mov repz in mov mov jle mov cmp repz scas or jb aas dec mov sub mov test lcall xor rcl cmpsl (bad) aad sar loopne and cmc mov (bad) push adc sub aas pop out mov pop jl,pn iret (bad) cmp push gs in push pop sub cmpsb push jne mov aam adc inc cli popa popf pop xor pop dec addr16 aad mov cmp fstl mov inc xlat add push xor push push jbe pushf jbe les aad test inc mov push pusha (bad) mov cltd fsts mov or sti ret ffreep cmp pusha fnstcw xchg push lret inc cli jp scas mov js sub sub and iret pop lret sti icebp aam adc divb lcall aaa cld dec lods push ss std jb push sbb iret (bad) sub xor or add adc or adc push lahf test scas (bad) jae fstps add sar sbb or mov push stc daa cmp sub add inc scas mov mov mov rcll jp jg addr16 inc shll or loopne je push jp std jp xlat add mov jp or int3 stc push xlat lahf push jns loope cwtl push scas aam sbb sub lea jp sbb aaa cltd adc and pop ss mov movsl sub loopne ja (bad) push fisttp les adc inc pop add sbb jo cmp cli mov mov (bad) jp xor mov pop adc jo fisubrl or ljmp add sti mov clc push inc jo or push (bad) je pop jnp sbbl xor inc lret shl add mov out push mov xlat pop add jo les inc xlat xchg mov xchg fimul pop fld xchg and cmp xor inc stc pop xor ljmp jb jle adc push sbb jnp mov mov cmp dec xlat xor adc lcall shrb imul enter out push push xchg add inc cli push xchg mov xor xor push shrb pop jle cwtl cmp pop out lahf or push xor xor pusha pop out cmpsl mov stc out cmc jmp and out pusha sti (bad) nop les je dec dec js hlt push or es cmp (bad) cmp aad movsl ljmp test or popa scas cs push pop lds ret pop ficomp jle cmp dec dec jmp out fisttpll cmpsb xor adc jp cmp mov inc cli push xor add pop data16 clc mov bnd cmp jae adc loope pop mov xchg mov or test imul xor mov mov cli inc pop movsb (bad) sub pushf js ja xchg mov data16 xor jnp mov cmp cli mov js out mov jge mov xlat jmp les (bad) rorl aas jmp push pop scas inc or or push xchg sbb push mov ja icebp push leave cmpsb cmp jno mov inc rcll cmp push xorb dec ficomp sbb loop add sbb in push pop mov xlat idivl pop shll (bad) xor jb (bad) iret xor xor data16 popf or cmp or daa lahf jb xor (bad) bound dec mov pop cs test mov in xlat xor push imul dec out mov or pop cmp rcrl fs clc pinsrw (bad) es push sbb sbb lods mov xor addb cmp xor mov jae lahf and dec jne int3 bound xor stc dec lret fistpll inc lret cmp inc sbb push cmc jecxz dec and repz leave scas push and xchg sub (bad) pusha std hlt lret leave adc (bad) ss or fs dec aam add cmp mov push (bad) sub adc ljmp mov mov sbb pop aas push int out push xlat push adc mov (bad) stos out ret repnz mov mov push in in jle imul pop push out or fsubr ja adc (bad) jno fnstenv push in sbb pop (bad) jb or mov or mov push sub adc xchg pop iret pop and fbld push xor lcall xchg rcll (bad) cmp shll push push and adc bnd sub pop cmp mov jnp flds mov sbb xor fs sub or cwtl pushf fiaddl or or and xor fsts lea ret mov jmp nop fstps push pop inc sub imul jp xor test push scas mov out dec enter dec sbb xchg std popf paddusw cltd jns xlat fildl fcoml push mov rcrl xlat fiaddl push inc mov test jge xor xchg ss dec jge and test fxtract xchg push lret mov mov or ret or push jp das jmp xchg mov out ret mov dec pop (bad) sub and pop jno or addr16 add mov rolb jb shrb mov loope xchg cmp rclb loop ror pop (bad) dec ljmp push je aam xchg sahf lods add mov pop jg mov push stc leave dec js dec lahf sub loopne das push pop jp icebp push jmp xor flds aam cli jo adc int lret mov push (bad) jnp aas popa and xlat enter dec mov fild or ror out popf cmp inc inc clc fwait ljmp inc mov mov push (bad) out scas in testb xchg lret xlat dec push sarl cmovge in mov push test subl xchg lock in imul (bad) dec cmp dec and lret cmp rcrl xchg xchg push mov xlat je aas insl outsb sub mov xor scas imulb pusha mov in aaa or test push imul cli roll mov imul jmp pop dec inc pop loopne push fsubrl imul fistp dec or xchg mov pop divb dec cmc pop scas push dec push jp pop flds and push cmp xor jp cmp test xor mov (bad) mov daa movsl testl or jnp inc out nop cld xlat insl in outsb gs push int3 jbe or jge inc cmp xlat adc popa xor jmp pop xlat aam push imull push das sbb shr mov xor fidivrl xlat loop arpl pop push icebp cld mov mov pop add fs and ljmp lds es mov fldcw dec jp mov (bad) push jne repz imulb ds lahf lock jnp popf mov jecxz in cmpsb adc mov lret dec popa cmpsl inc movsb icebp imul dec or lods fstps (bad) enter jns inc rcrb pop xor mov jo aaa inc cmp pop shlb les dec add mov aaa sub dec or adc and stc fidivr mov cmp lds dec or arpl pop ja hlt add stos icebp sahf push paddq xchg pop test adc das stos mov lcall sbb stc cmp sbb cmp (bad) pop imul xlat outsl shll push mov lret inc xchg fstps test lock cmp imul dec pushf cwtl jne sti loop aam sbb mov or mov xchg sub pop adc inc add xchg ss sub xor les test addr16 test imul and dec lcall dec stos arpl mov mov stc fcom cmpb ljmp sbb fstp (bad) jl outsb ficomp xlat jns xor fdivrl and and sbb ficomp cmp es sub mov gs xchg lock sbb push out xchg pop pop lret cmp sub dec outsb jnp mov cli ljmp push imul bound testb adc sub imul and xor cltd push (bad) repnz mov jecxz jg (bad) mov or (bad) adc stc adc cld pop rorl loope dec and dec mov stc fsts test pop push aad leave xlat push mov sbb cli lods rcll dec push add xchg insl stos roll leave cmpsb cmp jo xchg push jge jecxz (bad) jo test xchg fidiv sbb imul aas add lock sbb outsb sbb cli or fsubrs or mov jmp push xlat dec imul inc scas mov (bad) xchg push andl repnz sub sbb xor jmp push pop cmp push jo dec fdiv rol sbb add push dec cmp daa xor jns adc cmp clc mov xlat push or in popf mov jp out cs xlat imul fsubr (bad) and push dec fnstenv sbb inc dec or jb dec sub inc lret or jmp dec and mov loopne,pt sub movsb sub decw push icebp jnp (bad) je push cld (bad) mov pop enter mov and add ret and lcall test xor xor enter out jbe cmp int (bad) mov add ljmp test xor jmp int3 in addr16 mov inc push loope mov mov lret repnz rorl jbe push (bad) cmp cmp insl test ss imul mov xor jp fsts in and int lret std in sahf sub push or xor xchg out outsl and hlt jne push jnp push inc dec inc in das or xchg cmp xor je or rol mov jge test leave ss sub push addr16 jp sub xlat addl inc clc and sub lret jae sti inc xlat cmpsb test push ds sub and imul stc into mov xlat mov sbb rcrl test mov dec rcrl sub movsl cltd mov mov fmuls mov sbb sbb dec loopne lods daa sbb jle nop sub fildl loopne cmp lcall (bad) stos pop nop rcrb leave or mov xchg sbb mov mov dec xchg cwtl dec imul jp and scas push hlt dec int xchg fcoml xor pop cmp fstps nop push dec lods test xchg in mov dec sbb loop and test sub iret dec test fwait out add push jno mov push (bad) cmp stc es adc sub insb jl xchg jecxz ret pop sub mov mov and add mov clc fidivr cwtl (bad) adc outsb imul push enter cmp adcl xchg sbb leave (bad) xor es les sub jb mov sub out mov test test test push push sub jecxz adc dec cli jne and and cs lods push insl mov std pop jmp pop mov cld add ret xlat repz ljmp xchg rorl mov dec cmpsb pushf dec mov push add push inc adc mov adc stc xor pop adcl push xchg popa inc aas aam jmp jl push dec cmp inc shr xor mov mov xor lock fistpl jo and inc int3 jb out imul or test xlat add cs jl jbe js popa imul movsb jg lods ror cmp xchg add dec aad add (bad) fcoms cli ret clc icebp aaa cmp inc and jae loop cmpsl and add pop and out arpl adc pop adc mov jae fldenv gs out mov pusha add cmp mov cld cmc jne fstps loop,pn (bad) dec mov jnp inc xchg mov (bad) push dec xlat shlw or and mov insl sarb pop out push inc xchg (bad) ljmp repnz fisubl pop xchg fidivr adc jle push (bad) or aas outsl mov shlb test cmp pop dec sarl pop add stos pop xchg jp repz sub stc xchg loop test inc xor ljmp icebp or in lret cmpsb cmc jno jmp and ljmp repnz and lcall adc repnz loop mov sub xchg lret mov xor (bad) lods jns flds jecxz stc nop jno xchg ficompl outsl pop sarl mov pop adc pushf repz adc xlat inc std in push adc (bad) dec and mov xlat sahf ds repz mov imul mov jo popf and dec loopne movsb (bad) push insl arpl cmp ja lret sub xchg xor xchg shrl inc rcll daa outsb fcoms cmp inc xlat ficom adc out add xchg out pop cmp pop cld insl adc jge pop and mov mov out lea xor movsl scas (bad) rorb (bad) (bad) in ss xlat push sarb fmul (bad) cwtl inc addr16 addr16 leave fadds std pop out dec dec xor sub stc daa loop mov test dec rcrl ss mov fadds imul imul pop pusha sub pop sub outsb stc jle std lods push jne or xor jp fptan jmp xchg and jp cvtdq2ps inc repz push xchg ja fbstp sub out adc jno push decl add mov and push aad jno in fldcw pop bswap mov xor iret adc push mov and outsl pop dec mov mov mov aam cmp or rcr in mov xor sbb pop mov pop xor sbb (bad) jb shl data16 fiaddl xchg and mov inc lret incl dec mov inc xor stc sub stos cmp pop jg xor mov lcall leave cmp dec push test movsb aaa push mov out enter movsb fadd outsl push xchg imul popa inc divl gs sub daa test xchg xlat (bad) mov mov mov adc or ljmp add ficom sub jae inc push push inc fcomp movsb ja cwtl stc sbb pop test imul lret lds test dec lods test add xor cmpsb fnstcw jl dec mov aam xor or loopne (bad) in into jl adc in mov sbb dec jl or sarl pop mov push jg outsb xor push mov push jge adc (bad) lss shrl es xor adc add cmp pop pop aas jns (bad) cmpsb mov rorl adc cmp xchg pop jbe mov jne repnz lret ret fstps dec mov xor out lcall lds pop fsubp addr16 xchg jle sbb mov or sbb repnz mov xor inc icebp jle mov fdivs test xchg pop imul push gs cmc flds adc rorl sub clc cmp fs stos out mov fisubr out imul rcrl js inc loope and fnstcw shr int test mov or mov subb xlat add mov and push push repnz sub adc ljmp dec test mov fldenv cwtl jbe stc (bad) mov xor jnp movsl mov js,pn in push (bad) mov pop push (bad) jne xchg fsubp cmp jno pop jno cmp pop clc pop push mov jne push daa pop arpl push nop mov cmp jp test stc or sysret add pop jns mov pusha push cmp shrb (bad) fcoms inc and out (bad) cmc lcall enter adc xor push pusha xlat sub scas xor loop push mov pop add sub out test push enter mov cltd cli dec inc fimul add pop jae push sarb sub clc nop fstps sub adc sub xchg scas into pop sahf orb sub ja imul lcall lret dec mov jae xlat sub pop out mov mov xchg (bad) mov ljmp and aad adcl push ljmp cmp sahf stc gs inc jp in mov das pop mov pushf pusha popa lahf or fldcw cltd cmp dec xor out out sbb cli push mov jb xlat add fldenv (bad) xor enter lea lcall repnz in jecxz mov out cs cli scas pushf out out loop push add fstps jle les push mov ds (bad) repnz das movsl xchg addr16 mov add test cmp push jl,pn cld ret jb js (bad) mul cwtl push cmp jl nop mov add enter push sbb (bad) jae aas mov leave push cmp adc shl (bad) int cmp loope pop dec dec jmp sbb rol movsb sub dec push pushf mov fwait nop mov xchg inc xor or mov call jecxz mov sub cmp xor std mov imul sahf xor (bad) rcll mov aaa (bad) push loope ja fldenv jo inc sub cmp push pop push mov sbb mov cwtl push xchg bswap jp pusha add cmp pop xchg dec add inc imul jae movsl sbb xchg pop outsl addl pop lret cmpsl inc mov insl imul ja jns inc roll push pushf es fistpll jne push and add mov jns sub test hlt inc xor and clc push cmp in mov sub repnz and les into push aaa das push push cwtl mov lret push aad or lods mov jno mov push or pop pop sbb and mov push jns xor fs movsb mov push sub adc mov cwtl or push jns xchg mov pushf (bad) push mov or icebp test push xlat xchg xor loope sub fistpll iret xchg adc lcall (bad) daa xor sbb jecxz shl repz or lea mov fiadd std sub aad gs sub push (bad) stos aas ficom cwtl fwait idivb fbld mov add test and sarl imul jae mov pop or push ja cmp addr16 cli mov jne in mov pop es xor and daa outsl mov loop and xchg xchg sub (bad) adc xorl mov push sbb aam xor pushf insl mov cmp xor fdivl icebp push jmp push xor lods hlt (bad) sbb cmpsb or das (bad) stos mov sub and in dec inc mov loopne push fs (bad) push clc outsl xor ret push cmp into loopne aaa jp or aas test jnp dec and xchg ljmp lods or addr16 xor int3 ds ret sub (bad) shrl mov sbb push dec popf adc push dec ja (bad) leave xlat inc ror pop inc xor mov cmp das jbe xchg sub cmp aad fcmovu aas push (bad) mov adc or xchg push jae fiaddl dec inc or in xchg inc push rorl das pop (bad) xchg out and insb fldcw push arpl aam jmp jmp cmp in xchg jbe shr mov sbb push adc mov das fisubr loope cmp inc std stc in das movsl xchg sti inc mov sub inc pop repnz loopne dec nop mov (bad) (bad) repz icebp and cmp lea (bad) dec or push ret loope push add pop and sahf orl xchg mov xor rorb sbb pop cs repnz push stos jo hlt repz int mov (bad) ss lods dec cmp mov je xor ficompl push cli mov add es push pop loop push adc in imul push sub imul insl jne out push jns (bad) mov mov das adc mov xlat lahf pop jns mov movsb roll call jns inc dec ret in push sar xor cmc fisubr xlat and lcall dec das push inc clc je pop push cmp xchg add (bad) xor mov enter cld dec cmp out inc pop outsl pusha xchg sbb insl push addr16 lods in fmull imul xchg cmp push cmpsb xor adc jnp dec arpl fist mov (bad) mov sahf and lahf cmp ret aas xlat add shr dec mov outsl inc xchg add cltd cli add sbb call cmc add sub cmpl ret xor dec jnp or mov push add cmp or adc fidivrl push inc or jl push cli pop pop ds sti es cld cmp je and xor add push dec fadds loop jae and sbb push imul mov dec push das mov lock scas in stc push mov pop xlat pop rorl stc in pop sub add xor adc es int and xchg sarl scas push push stc xchg lea adc bnd rcrb dec sub dec ret stos jecxz out ror repz cmp stc std sbb adc push ret dec jnp jmp push mov fisub pushf adc dec cmpsl inc fnstcw push jmp lret dec (bad) decl ss xor sbb xor addr16 xor popf (bad) and mov mov sti push gs xchg adc outsl jl (bad) lods outsb test or lret jge push sub fldcw frstor stc sar and scas or push adc stc mov sub sub jbe (bad) sbb (bad) gs xlat mov ja mov aas not cwtl pop lds lcall bound lods ds cmp mov lods jns xchg push iret or shlb fcoms leave cmpsl push jae add (bad) and and xor fistl sub xchg stc pop (bad) mov ss sub mov xchg xchg mov add mov xlat outsb loopne push xlat inc sahf ja stc xor sbb sbbl jb fisub sti (bad) fistpll jns hlt outsl jmp sbb mov mov ret test cli shlb sub sub das aas imul neg adc dec ror xorl (bad) mov lret jp lret add inc pop subb mov and mov mov stos fsubrl mov and aas adc fsts imull jnp or fistpll gs push dec das mov jo adc mov outsl cld cwtl pop add fisttp cltd outsb pop aas iret insb jno mov sbb add add and fwait or in test sbb push and jge dec sbb push jno in pop out add in inc push (bad) cmp dec daa jne (bad) mov movb cmp (bad) test test es push pop cmp push jp add push ja cmp lock sbb xlat ret ret sub enter jns dec inc mov inc fcomp sti daa (bad) xchg enter pop sub mov fcomi push sarl xor and xchg ds jae fiaddl dec dec inc cmp and xlat add push push sub stc cld add movsb xchg mov aas push (bad) hlt cmp mov mov movsb adc cld push add push xor icebp xchg sbb pop dec enter (bad) mov pop shll and (bad) (bad) push push push stc xor pop movsl es je pop rorl mov or mov cmp jmp popl sub inc rcl push aaa sbb shl insl adc jnp int3 mov mov jp imul xor repz shlb and add cmc lahf sub mov scas lock test out sub dec mov loop jo hlt push mov scas cli sbb pushf call cmc push addr16 and xorl push lock xor or jl lea out xchg jmp das mov mov pop and add mov and lock xor jne mov repnz gs xor mov inc sub aam adc dec jne iret (bad) fs fnstsw arpl mov fsts int3 mov stc cmp xor in jnp outsl fwait adcb push inc mov lcall pop std aad mov push les push jl test cmp stos cs es xor pop xor (bad) in sbb rorl push cmpsl cmp fstpt and mov mov fisubr aad stos out loope lock fnstenv or cli mov xor stc flds lods fiadd rcl xor ds in xchg daa outsl mov out (bad) imul jno out sub rcrl push lcall push fsubrl xchg jecxz and mov sub jb dec mov hlt or arpl jne dec testl pmullw inc ret xchg add out cmp xor xchg out ljmp out pop xor pop addl fcompl fstps dec leave cmp lock cmpl mov cli (bad) in (bad) xor pop js and sti out (bad) mov push stc pop inc imul imul pop (bad) xlat inc clc aad mov outsl mov test sub jns xchg (bad) jns lds add mov adc jp cmp ficom in cwtl mov push shr stos mov push xor ljmp sbb cmpsb xchg inc jae cmp sar outsb jmp and jnp inc out jp and xor sub divb lret divb ret int3 or push xlat mov nopl mov dec xlat in xchg das pop imul push jbe roll jb push cmp cmpsl cmp arpl pop inc icebp daa movsb sbb sbb xchg add mov jns xlat fidiv pusha pushf ljmp loop es (bad) (bad) push fstpt dec es cmpsl call sbb sbb aas cmp sub mov cltd lods rorl fldenv pop mov push mov add push fimul cs jmp loop out mov fistl (bad) out out icebp shrl inc pop xlat loop stos into jbe push xchg mov (bad) bnd and stc mov inc mov sub xchg fwait testb or lock jmp mov push das hlt push nop fwait mov hlt mov jns pop mov movsl push jns xor aam mov or loop js xchg (bad) and sub xor mov in fistp je loopne push xor push xchg les adc ljmp push xor cmp add ljmp call les cwtl data16 mov aas dec fisub scas les andw or push enter and adc dec sub pushf test lods and mov inc jmp jmp jbe mov inc xchg pop jp aad inc fiaddl scas mov outsl dec movsl lret imul jl movsb push gs out push mov jnp cmpsb fbstp mov jns jo out fist and jle cmp (bad) in fnstenv pusha (bad) push fisttpll mov push xchg nop xchg or fs mov sub jns rorl mov test enter inc in xor cmpsl jns popf add bound lods emms mov js mul mov inc or pop dec add push jo mov pop std loopne addr16 stc xor pusha stos imul add and in push aad mov in ljmp or pushf add popa out cmpsb cmp (bad) (bad) pop imul out jns fldcw pop dec pop fcomps lods push outsl dec dec es stos cmp xchg test cmpsb mov ljmp jmp mov mov sbb xchg (bad) push out mov mov xchg jge out imul fisttpl arpl es mov cli (bad) xor inc push aad scas repnz scas lahf test sub (bad) orb aas add pushw xlat mov and movsb jp jns jno inc dec xor loope loop pop mov or sub sub add (bad) push dec dec sar dec popl mov test (bad) std and pushf push shlb addr16 pop pop (bad) jl les jg sbb out pop or jg or sub rcl jne add ja (bad) leave mov fmull leave movsl iret adc xlat push push add jp das les mulb push shl hlt inc mov jb das xchg popf les mov pop test out pop lret mov pop or sti jns inc xlat mov push lret aam lret in lcall test mov sti mov xchg mov inc ds das jns fisttp jge dec xlat lods test popf addr16 jp push (bad) aaa mov xchg cwtl ret sbb mov cltd stos add std nop enter pop ficom faddl leave xlat ret mov dec mov ss cmp in scas inc push insl icebp aaa cmp mov (bad) xor rcl add add xchg lret pop icebp jmp mov les lods push add imul add das shll cmp mov jmp add leave arpl gs mov das lea push jae push clc mov ja ret lret mov ss fs push je sbb data16 xchg std insl push mov pop (bad) aad fidiv test push xor clc aas jb lret xor sub fs xlat pushf cmpsb mov fsubr out aam (bad) leave bound push jns clc xchg rorl dec ja or je imul (bad) or fdivr dec mov flds call mov xchg (bad) or or mov adc jae mov bound cli and (bad) or jg addb ljmp jae xlat inc std movsl out xchg sub clc cs mov rorl xor lcall lods adc jle imul das arpl int aad lods sub push fs in int3 push pop pop inc aad xor dec je movb mov es mov push dec in push js out pop sbb sarb ror loop (bad) js adc and (bad) push jb (bad) cmc ja inc ds xchg dec fidivr inc test outsl test mov sub (bad) cmp lds jns sub inc or sbb adc xor xchg mov jbe sar (bad) mov test jns pop push or fwait enter adc mov andl nop pushf in lret dec mov push stc or notl sub std xor cltd sub lcall dec adcl mov dec outsl and sbb mov shrb sub xor mov imul or mov mov and jns xchg xchg dec cmp jl jp call mov xchg imul adc stos jl cli add mov jle dec and enter scas push into das aas xor ds cmp jg ret push test test das int cmpsb cmp popa ds les cld (bad) push adc cmp imul loope jae icebp insl adc jl jmp xor dec mov xor cmp rcrl dec xlat dec dec mov and mov dec ret fstps or and adc lock jo leave sbb cmp dec (bad) mov dec iret push jno mov call mov stc xlat loop pop int3 mov es mov xlat (bad) push popf jp aam jle xor dec js xlat jl cmpsb pop imul pop pop jp or lds test pop scas stos (bad) sub mov iret xchg mov push hlt inc popf dec push xor pop shrl mov mov mov aas sub scas and xlat mov cld call scas movsl sbb mov test sub push repz sbb mov dec sbb sub aaa insl fsubr pop xchg (bad) and xor xlat outsl ret dec or adc outsb push sbb scas int3 addr16 push mov adc pusha cmp stos cmpsl aad and pop or pusha add xor cwtl mov movsb jge xor rclb std iret test int3 push ss pop jbe mov jp cmp inc and sbb xchg out clc cmp add cwtl jg pandn popa pusha jle fisttpl leave dec jmp cmp mov and xlat (bad) das jl aas stos outsb push subb das xor xlat sub roll pop cmpsl mov xlat in dec (bad) push lret jp test cmpb mov loop push das jl ja xchg add pop xchg or int3 push add sub or icebp es mov (bad) mov loop add ret lds out pop cmp mov inc test xor jbe push dec mov movsl adc lcall xor sbb xor cmp sarb aam loop andl xor or movsb jg and adc cltd cmp fsts cmc push and inc pop ljmp lods jl cmp fwait jne or loop outsb dec in into pop in into arpl sbb jo xchg imul enter (bad) push fwait xor stc cmp not xor cltd or xorb xlat out xchg dec push adc push adc mov lcall and xchg cli cmc ss leave push inc xor or push jne dec fsubrl fild test dec mov inc mov xlat xor dec rclb cmc mov pop jno fidiv inc (bad) jae push cmp jo xchg (bad) arpl xlat pop das jp lret cmp loopne dec addr16 fldcw fimul (bad) xlat mov adc jno or scas nop inc sub ljmp jp outsb (bad) pop xchg xlat enter ret push fcoml adc mov and jmp push rorl daa out cmc mov mov or rclb fcoml das bound mov push addr16 sti shl fwait das mov fisubr mov (bad) or out (bad) jb mov sub push (bad) rorb imul cwtl fistpll xlat mov xchg (bad) jb sbb cmp adc sti insb clc jp inc scas lock push xor xor pop pop sbb imul aas dec aas sub sbb iret dec pop mov dec jns xchg or mov cmp (bad) hlt dec mov xor iret sub mov sub inc cli xor int out push lods pop imul mov mov mov rcrl and dec pop insl stos dec in (bad) and fisubr lea out push or push mov or sub sbb sub lods dec lahf xor stos push mov sbb dec fisubr jbe (bad) add dec inc sbb lret xor das mov sar das ret jo push lahf mov scas shrl jnp xchg mov hlt loop pusha sbbl nop sub pop mov into mov jno fnstenv dec (bad) lret cmp inc and shrb call icebp rcr sahf mov out cld cmp rorl mov ds ss push mov mov mov (bad) push aam cmp jns pop pop mov insl mov dec dec jo and or add jmp dec js dec scas rol adc xor rorb xchg iret sub sbb into jae in rcrl xchg xchg subb adc (bad) cld xchg sbb testb inc (bad) adc out addr16 in rcrl mov or fisubl mov push mov (bad) mov ret inc xchg push push or sbb cmp pop fnstcw dec adc pop lcall jnp aas jns stos sub adc mov adc das dec std adc stos jb push shl adc cli test outsl icebp jmp aas out in das mov push aaa jae add jbe stos inc mov (bad) lret mov adc push push and or dec mov lock cmc ss ljmp icebp xchg sub clc (bad) jae sub aam and repnz adcl (bad) push imul movsb stos sub push dec or cmp cmpsl mov xor sub push loop pop enter das test jbe xlat pusha lahf push cmp cmp add push (bad) mov dec inc cmp rcr cwtl in les stc xor push add ja and movsb lock add aad nop movsl push xlat jecxz fmuls nop inc fwait push adc faddl cmp pop testl push pop fs dec xchg inc mov clc repnz jnp mov xchg mov mov push cmp je fiadd xor lret cltd jb inc jg sub ret push sub push lock iret mov pop xchg sbb cmp les jns fxam mov out sub push push js (bad) inc sarb adc pop push jno sbb pushf xor mov or bound push xor pushf and push lahf lods icebp xlat cmp aam dec cmp stc inc pop jge push push push and sbb test iret fbstp int3 arpl les cli dec outsb dec gs ljmp sarl adc mov sub imul cwtl mov cld bound cld scas mov mov dec inc dec inc xor push outsl dec sub pop dec stos add stos ss inc add xor dec repz cs adc mov jne fimull cwtl icebp loope xor sbb dec test cld mov pop sub mov call negb sbb rorl adc jnp pop enter insl adc out (bad) mov cmp dec xor jmp ret xchg pop xchg hlt sub lret or out xchg jo adc fs push (bad) push mov inc aas pop sbb push dec lidtl addb fsubr sbb bound mov mov fisttpll sbb (bad) int insl rcrl jmp cli mov pop add xlat sbb arpl test fnsave xor cmpsb das mov fs jp add cmp inc push stc inc dec sbb lods push adc fwait das aaa ja xchg flds xor cmp mov daa fwait jae cld push pop fwait int3 fcom xor jae xlat arpl stc iret cmpl jae (bad) mov adc fmull mov (bad) rcrl inc push pop daa xor gs and hlt pop lea add js ds xlat sti (bad) jb xchg out lods int dec sarb insb (bad) fwait xchg or xchg sbb nop dec sbb jl sbb mov mov jno aas pop sti and ss lods jae inc dec push push mov addr16 or (bad) test rcll (bad) jne mov jp add xchg cs les pop sbb (bad) fdivs or push xchg xchg in cmc int mov test scas bound les lahf inc xlat mov cli jb pop ror lahf cwtl mov cmp xchg push mov pop cmp mov pop int3 ret out add jo ret xor xorl pop push pop (bad) jne adc jp xchg int out jmp push (bad) push ss xchg mov push adc or orl or in pop sub sbb orb pop lds mov rcll jl pop push push daa or fcomps xchg lahf cwtl dec sbb cld fstpl jbe cli push (bad) lock das shll jns xlat jae sbb fimul mov sbb push jle adc ficom cld dec jecxz lods push cmc mov dec bound sbb scas jae xorb cmp and imul push jbe fincstp sbb aaa pop (bad) int3 fdivs sbb imul roll and inc out imul pop mov xchg out adcl cmp or sub leave sbb (bad) fisub stos mov push push jno ljmp lods and adc aaa movsb stos add mov mov adcb subb push mov mov jbe popa push push adc call or rorb inc add mov js inc aas js mov or jnp dec or jno mov ret adcl (bad) push mov imul dec xlat xchg cli int sarb imul push sti xor lret dec add ljmp cmpsl jbe stc clc and mov sub ds dec lahf lahf mov jne outsb and cmp adc mov mov fidivrl gs mov enter xor es cmp stc movsb sub cmp inc xchg clc xor in xor jb in cli rolw xchg mov push push adc test push test push add sbb push gs pop (bad) jbe mov (bad) mov shl pop push roll cmc dec mov mov or pop (bad) in pop add sbb les push dec imul xor movb push or xor lcall fisttpll in les mov xor ret xchg sub and dec sbbl lahf into xor cmp ja jle or mov ja insl sbb sarl xor je mov int3 shrb lret jle sbb loopne adc out or push (bad) mov mov xchg cmp sub adc sbb (bad) iret std add addr16 cmp fstps roll enter lahf pop (bad) xor test dec sbb jns mov mov mov mov loope,pt subb mov add sbb popa in or and adcl and sub clc or add sbb mov int orl mov mov loop fdivl jne insl iret pop mov mov push xor xor inc mov (bad) stc push (bad) cmp push ret cli adc out repnz push inc aas xor push mov faddp xor mov (bad) repz pop dec mov cwtl sahf out jo rcll outsl mov mov sbb dec adc sub popa jbe adc pop xlat (bad) testb mov jl xor mov mov push cltd sahf sub out xchg lahf sti inc fstps lret fwait adc or mov xor ljmp mov pop dec xor dec (bad) adc es cmpsl add jbe cmp sub (bad) aaa cs dec or icebp (bad) push and pop and or cmp leave out sub cmp fcmovnbe pop cld mov fildll cmp stc mov jl xchg (bad) mov movsb cmp mov or pop into jl push jecxz out (bad) or mov clc fisttpll sti adc (bad) idivl mov xlat das mov out pop icebp mov ficompl (bad) dec inc jmp (bad) push and pop jl or pop xchg push cwtl pusha push mov inc les mov neg lods sub adc mov dec (bad) jno add dec fidiv or or jbe,pt xlat jmp ljmp addb jb std imul adc cmpb xchg xchg jae cltd cmpsl addr16 jae or push ds cwtl cmp cwtl pop jne lret je movsl aam inc push (bad) push out nop repnz lcall arpl jnp mull js push and jae push xchg mov lea jo cs insb adcl lahf pusha xor pop mov je gs popf sbb and jno fcmovu out push int3 sti mov push test pop (bad) pop pop mov imul jg rorl cmpsl pop adcb or out clc (bad) sub mov push fldcw push jle cmpsl push lock push xlat xor add push xor add xchg jno ljmp sub fcompl scas out dec fldenv jl movntq das mov and movsb shr mov and and sti jl cmp push sub rcrb addr16 add jnp ljmp cs ds xor mov mov adc ljmp aas cltd cmp nop and jo lods je pop maskmovq divl inc add jecxz ljmp jo imul dec das rcll sbb inc sahf mov ror inc test push iret push (bad) test jmp jo xor pop ljmp inc shr or cwtl adc push push cli les cmp xor sub xor xor sti inc adc xor sti (bad) cs movsl out xor rcll and mov movsl nop jecxz dec cmp ret rcr lds pop (bad) xor and iret (bad) mov nop push adc adc cmp (bad) in jae push add jnp loope mov std ss out and and jl loope cld adc daa insl jns aas pop ss lcall data16 imul cld imul cmp sahf sbb sbb push xchg jns adc and out xor outsb xor jecxz jbe cmp add je sub jg mov out lret fwait xor sar pop dec out stc adc les out fcom out jnp in fstps js iret adc push (bad) cli fldpi mov lods xchg jne loop loopne push (bad) cltd mov add ja lea ds jmp push xor sub addr16 nop (bad) mov add mov fdivs jne xlat scas cli mov adc sub iret pop cs xor mov mov mov rcrb insl (bad) dec mov push xchg fucomp das cmp adc ror sub mov jno pop clc repz ds nop in out xchg xor cltd out push (bad) lea sbb jno sub cwtl mov adc and lret pop cmp outsl mov xor das push fadds int3 mov ficomp cmp jle ret xchg push inc stc push jp push or xchg ljmp cwtl int3 jle sbb mov pop xchg jnp sbb shll inc outsb (bad) pop mulb call stos push push jmp call in ja jae xlat jmp pop pop pop jmp jnp (bad) lret or inc sbb (bad) js sbb xlat adc fcompl cmp push pushf movswl rcll or scas int or mov loopne cmp (bad) lret cmc push and les inc ret imul insl rcll cli dec and or (bad) mov jp push das fild into push cmp lahf cmp mov cmp je mov orl adc inc imul jno xchg pop andb lods jg pusha pop jbe inc sub xor pop inc push lods sbb repnz xchg sub stos mov sub dec jbe cld push add or inc rep fcmove (bad) lods cmc cmpsb out (bad) es scas lahf xchg out je cmp add jmp push pop jle test mov flds push test gs rcr fsubl adc cli ret outsb cmp roll repz and jno pop (bad) insl or das rol pop jo fsts xor pusha xchg mov push lret cmp inc sbb pop mov mov js and sub testl mov shlb jp xlat lret add inc inc xchg lods scas cmp jp shll call pop xor xlat mov fldcw xor data16 clc and rcll add mov cmp add dec cmc rorl jae cmp pop cmpsl jge push ja imul or dec dec imul lret ds insl lret hlt jb lods outsl mov fstps and mov dec fsincos (bad) sub sbb xchg cwtl mov jp (bad) dec jb fwait sbb data16 mov cwtl cmpsb cmp inc sbb jl dec add jae test (bad) daa and das add xor pop push mull and mov adc or aaa ja push xor (bad) repnz (bad) or outsl jp (bad) mov xor jmp xor mov or pop test mov test enter and pop mov pop cmp inc nop mov out sahf inc cs xchg mov cmp sub int mov cli in jle and push addb sbb dec mov mov mov outsl xchg jl add adc or roll cmp lds mov ret xor push pop stos movl rclb jp (bad) aad sbb rcrl std ficoml xor cmp js imul out push je dec sbb cld jge lret cmc mov test jnp mov and cwtl sbb xchg dec inc lret out insl dec push sbb jbe xchg movsl insb dec mov xlat sarl cmc xlat push xchg imul nop aam stc xchg (bad) push ljmp sbb fstps ljmp adc repnz (bad) insb xchg adc pop cltd mov and negl mov lret mov sbb push ficomp pop or cmp fwait xor jnp cmovs aas sbb add mov or and sbb repz add mov or fsubrs or adc push push stc es xlat push or bound mov push sbb xchg bound jno popf push mov or mov idiv (bad) aam mov push ss loop push sarl sub cmp int3 enter pop or (bad) faddl out jmp sub fsubl sahf sti xchg jb int3 pop mov insl jne sbb cwtl ret ficoml lret mov out xchg mov xor sarl lcall fisttpll lret xlat sbb and int3 into mov jae negb in mov mov mul push push add mov (bad) fisubl xor data16 cmp jnp (bad) push mov or jo movsb sbb fcoms imul add mov inc push insb (bad) imul xchg (bad) push xchg ds ficom imul push lret adc std cwtl test jo push sub vphaddbw inc (bad) mov lcall ja add pop cli push lahf and test ljmp xchg xorl jp repnz mov mov adcb pop cld rorl sbb nop cmpsb mov int test daa push and repnz jp enter int3 mov fsubrp insl sbb iret (bad) pop jl stc imul xorl sub shl stos (bad) hlt pop xor cli mov insb and sbb pop mov cmpsb (bad) nop mov or sahf dec popf loop jns jmp and jns inc xchg xor pop and popw scas test outsl xlat outsb addr16 out sbb movb push mov pop push mov jne push push and rorl roll (bad) cmpsb fldcw std repz mov cmp mov gs rcll into stos call es pop xchg add xlat (bad) scas pop adc out imul sub cld imul inc imul mov pop cmp outsb push shrl mov testb pop iret (bad) ret inc test jbe movsb out mov push mov fcompl cmc push push scas jle cmpsb sbb pop xlat and sub (bad) cmp (bad) (bad) ja xlat inc xchg test fisubr ss into inc (bad) mov ret mov and dec roll jle (bad) sbb sub pop loope adc std xchg xor xor test aad adc jp inc clc stc into mov dec dec pop hlt lods cltd sarl mov mov out inc mov mov push test fisubrl and cltd jno cmp das adc lret cli cmp fnstenv sub sbb or jb call pop cmpsb pop mov mov ror call lock xchg and xchg dec les rcll (bad) (bad) cwtl push sub inc lret mov ficoml data16 add test add bound in mov jecxz jo sbb mov mov jmp insl shrl and lods jl fdivrl xor pop rcrb adc jg dec es scas mov lock push cmp ljmp out es mov iret cmp dec dec and pop test cmp push xchg and xlat cmpsb inc lods nop cmc aad mov outsb sub adc inc jns xchg push sub sub (bad) out xor mov and imul repnz aam into push inc and fnstsw lret push rolb adc ret clc push out pop push shrl xor mov outsl xchg cwtl push mov xchg in sub jae jb lret and icebp mov xor add sbb sarl (bad) jl xor jno push fadds call pop mov loop cs adc lods je sbb mov (bad) out test jge jb mov std sub (bad) push mov dec int3 out aaa inc fcmovbe loope ljmp jp lods sbb cwtl fisubr andl pushf mov ret int3 gs gs jnp ds (bad) mov mov scas sub or push and pop push jecxz dec mov xor jmp lock jae mov mov shll pop mov inc cmp add (bad) (bad) xchg (bad) call sbb jns mov (bad) testl mov sub push nop flds movsb daa adc push pop sbb sub ficomp cs fiadd clc xchg jne ret ret mov outsb xlat ja dec mov bound fdivrs adc jg sbb cmp sub call ja stos cmp lds mov add sbb sub add nop jp es sti (bad) aaa test sti incl jbe sbb rolb stos fstps (bad) mov das pop sub pop shll sub sbb and mov xlat pop push addr16 fwait push ds scas push fwait pushf push xlat xchg loop sbb pushf lods push jecxz xlat subl and adc aad es pop push in mov jbe xor insl pop mov jae xlat bound adc decb add std cli loop sbb out test je mov je jbe jbe mov mov scas outsl mov or push fisubr and (bad) loop jne xor outsl shrl icebp mov loope push into (bad) pushf das pop xor lahf cmp dec pop xlat (bad) xchg negl clc sub (bad) jecxz add jg sbb pop or scas dec and and jno xor xor xlat xchg js pushf test lods sub inc in cmp fprem aaa dec fstpl out lret rclb xchg (bad) dec (bad) or xor es jae call push std call xchg xchg ficompl test out dec jnp hlt je and pop dec or and push mov push lock cmp es sbb or lock movsl aam rcrl fbstp dec pop loope inc out cmp fist iret sbb cmpsl xchg and mov les or fdiv mov jecxz (bad) cli sub and xor lods pop jp (bad) jb xlat jmp pop push sub clc inc mov sub xlat jge xchg or dec rcl ret sbb and je cmpsl (bad) cmp mov cmp imul sub popf cmp adc and scas inc dec test mov pop push xor push push or push flds inc addl mov jg pop xor sub sub push fdivl sarl cmp movsb das jae std xlat sbbl aas xor repz xchg lret push div rcrl push repnz sar mov and imul jae mov mov push sbb cmpsb nop jmp js xor les imul mov ja cwtl sbb ljmp xchg cmp pushf nop jo stos outsl mov jle pusha push sarl icebp push mov lock dec outsl cli inc popa push out push gs imul push pushf imul call lods mov dec in cmp sarl xor rolb or mov out (bad) dec movsl movsl sub or fnstenv movsl sub xor scas and into and adc rcrb das shrl dec iret dec ja sbb cmp (bad) ljmp add pop and sbb jno pop and call xor cltd out sarb jecxz sub jnp bound xlat dec jae shrl scas je out mov cmp mov mov lret inc in and fs mov mov and push mov mov pop dec push adc mov mov cmp mov cmp bound rol orl dec or gs jmp dec repnz add jle and test lahf rcrb sub pop inc test js mov inc cmp or and enter sbb pusha inc push shr fs dec mov arpl sub (bad) stc fnstenv aaa push aam jbe push lods xlat or mov loopne movsb ljmp push icebp xor movb cmp jmp mov jo xlat out jne sbb pop movsb push push stos call push ja and mov mov dec (bad) lock xor es mov sub cmp and fdivs xlat and mov jp rcll xor sub (bad) shrl jns and fistpll out sbb add adc pushf fmuls xchg (bad) jae outsl jge in (bad) loopne or (bad) adc mov out and cmp fstps sar sbb sbb push nop push (bad) pusha push sub insb xor jecxz cltd mov push cmc xlat mov cmc push sub push push jecxz fsubrs cltd lcall (bad) push enter xchg cmp and mov mov xlat nop xchg gs insl jae add pop xchg sub or aam adc insb sbb dec xor cmp (bad) pop jp cwtl ds and out sarl imul scas xor leavew das or scas pop mov jge (bad) loope test cmpsl inc int3 mov ficom sahf add push out xor jg jae sbb aam dec mov mov (bad) icebp jns rorb movsl xchg mov mov xchg shr call test push rcrl xchg loop jl dec ja xchg cmc dec dec ds pop fisttpl (bad) lock ljmp cmp xor push int cld idivl es push xlat pop enter adc repnz fwait and adc std adc mov insb xchg daa das push out add mov addl inc cli popf loope ret pop mov xchg pop xchg xor dec xchg add push jne xor cmc rcr mov and rcrb pop push push pop ljmp (bad) xchg ljmp xchg push into aam add push rcl add dec scas xchg pop jns and add xchg es jno fnop xor enter loop sahf sbb ret xor jo pop int3 or mov dec daa mov lret repz fmuls repnz jp les repz cld fisubl cmp movsb adc mov (bad) lcall push loop cmp adcl dec push dec dec sub sub xchg fisttpll stos pop lret push inc movsl out lods jecxz mov mov lcall stc xchg (bad) imul mov jnp test imul test js or cmpl subb fsub xor xor and lret fcomps add lahf push inc sub cmpsl int3 jb adc cmpsb adc fbstp push push flds mov lods cmp aaa xor rcrb dec push lcall xor push jnp and add mov cli dec xor inc push mov dec fsts stc xor in mov cltd imul xor stc cmp xlat lahf cmp stos out sub mov add arpl sub jl test xlat nop cli and cmp push or adc jp (bad) add rcl push add mov sbb sbb les xlat in inc fdiv arpl push push xchg adc cmp fstps stc cld adc fdivl test rep cwtl cmp cmp imul push aad sub sarl mov sub out pop xlat out cmp xchg mov lcall fldcw xor dec pop xlat in movsb jns dec in mov lcall cmp pop xlat xor leave aad push and mov cmp in or cltd ss cmp inc pushf fsts sub and out test stos loope and or lret and sbb xor push xor aad push push push jp mov and inc or mov add adc pop repnz inc pushf jnp adc cwtl xor lds imul aad sbb pop shll pop addr16 cmp and stos das shlb dec aaa fsubs idivl cltd sbb lcall cmpsl push lods add push and xor rclb push scas je jns pop jp xchg mov cmp xchg xor xchg neg mov fisubl adc push dec fadds cmp adc lcall cmpsl mov dec imul js mov pushf sbbb stc and subb cmpsl jne xchg inc adc cmpsl cli push xor (bad) sbb mov push mov dec mov jns jno cli rorl adc lds jns scas push add outsl mov jno push adc dec mov xlat xchg enter jecxz mov movsl stos pusha movsb mov push xchg pop and pop xor out jge and inc add pop shl xlat jne aad int dec inc xor sbb add push jno fstps pop int ss push fldcw push rcrb in xor cmpsb mov and test inc mov mov mov repnz xor outsl cmpsl or (bad) (bad) mov fld inc mov rorl inc int3 mov or jp xor inc sub and enter adc popa dec sbb sahf and scas divb mov fisub call fstps add cmc cld sbb fwait out ret jle fmuls int and dec push lock jnp push stos test dec cld aas dec aas and mov xor (bad) loopne icebp lret leave add out add fmuls cmpsl jp adc push push cltd xlat (bad) mov xchg das mov (bad) test (bad) sbb jp scas fcomp cld out sbb fld xor sub gs stos cld push push sub pop cmp sbb inc add sbb mov (bad) pop cmp push into cmpsl nop sub lods mov and xchg lret out cltd mov push int3 inc pop xchg arpl sbb cmp xchg test or shll inc mov out out scas sbb jne adc dec loop push jae dec and add mov inc jl pop in hlt dec adc popf jnp sbb cwtl das jnp sbb mov dec ret pop adc mov loope cwtl mov clc xchg add jl dec mov std jno lods mov imul dec enter (bad) xor stos xchg (bad) adc cmpsl or or fcoml xor fbstp cmp pushf push aas mov arpl pop es ja add fs mov pop (bad) mov mov dec rcrl adc sbb jne jmp test vmovddup mov rcl adc addr16 movl pop mov gs and xchg cmpsb mov dec imulb das mov or sub aas inc adc cmpsb je push cmpsl push or xlat and xlat inc js (bad) mov jns xlat pop sub or mov xlat imul decl int and adc rep jnp mov jb in std push repz rol psrad push in sahf mov loope pop lods sbb (bad) mov and dec sub mov mov and out mov test enter or je add imul add and push mov pop dec xlat mov push pop ss leave loope sti loopne stc cmp test mov rcrl xor stc jne cmpsl and pop je test sti (bad) push xchg ja int3 push rcll sbb mov jmp pop aad iret andl fidivr inc lcall add sbb nop pop clc xchg jae fprem push jle or cmp adc jns mov inc lret repnz xor rorl int3 in push sub cmp repnz mov jb sub cmpsl imul rcrl fs pushl mov movsl cmp mov divb sub les lea das and mov roll mov sbb mul jnp cmp mov jl fxch icebp and pop mov mov xor adc scas sbb xchg xchg cmp jae and add movsw add mov call out sti aad stc rolb repnz (bad) aad test fdivs dec or in out fstps cwtl cwtl mov ss sbb sub push repnz xchg adc aam push lds cmp dec xor sarb loope inc or push mov adc xchg (bad) sti xor addr16 inc int lods lods je shrb test data16 push cmc and pop dec out pop or cmp mov mov xor jge sbb push cmp insb inc inc mov fwait xor push out mov dec adc mov test out cmp and cmp fldcw mov jb arpl rclb xlat xchg sarl dec fcomps xchg out test lahf xchg loop mov sub mov dec or loop xlat std aam ljmp vpsllq push imul xlat xchg fwait stos rol fidivl fiadd arpl sahf mov mov push xchg out add loopne dec push cli jns test out push jbe stc std es mov xor sub dec push sti (bad) mov xchg jns rorb ja repnz pushf xchg and push inc int imul insb test out ret sub xchg sbb xchg loopw (bad) repz xlat iret cmp pop adc add and mov lock sub dec pop cmp nop stc and jno jmp push ss fcmovu xchg xorb (bad) (bad) (bad) ja mov roll jo add jne and ja inc (bad) sbb mov fs repz pop xlat test push mov xor mov nop (bad) jp mov pop mov comiss sbb xchg adcl lods jl scas test or mov ret jg add mov out mov push mov test mov scas mov adc mov xchg sub mov aad rcrl movsl add rclb jecxz lret mov adc mov and aaa enter (bad) dec stos stos push jp xlat rorb out mov jp fldcw push and mov pop lods (bad) push rcrl lret or daa aam stos loope das inc sbb call mov push and push test push add cmp scas jno push imulb shl decl in in xor daa jl lods xchg ficom jle ja daa test mov sub int3 jae nop das lods jmp and or and (bad) xor dec cld shll sub mov push and and stc addr16 dec arpl das in xlat push pusha imul mov mov inc mov (bad) test xor movsb (bad) jle adc push lock jp sarl dec aam cmp xchg ret insb mov jnp inc mov push cltd out scas imul dec popa mov scas push adc jne test mov inc pcmpeqw enterw mov in ss mov (bad) jmp pop subb jle ss data16 outsb adc inc xchg lods push mov dec mov push sub popf xchg scas and shll dec adc mov cmp cmpsb (bad) mov idivb push rorl loop ds mov aas mov jmp repnz jl xchg jns (bad) loopne (bad) sar stc and xlat movb push lcall rol fsubr xorl popa pop popa out stos xor jnp fldenv cmpsl scas in cmpsl fs cli divb jle xchg rorb mov or out and and cmp (bad) mov mov push idivl out stos icebp add sub orl cmp mov sbb or rcll push xlat daa addl mov scas push mov mov insl xor and pop sbb or or je addr16 hlt aam adc jnp shlb xchg (bad) movsb imul inc in pop stc in sarl sbb mov push xchg push adc xor mov or mov mov call adc enter out cwtl cmp in jp push stos and sbb (bad) mov pop mov xchg xchg fcoml mov cmp (bad) cmc sbb jmp pop outsl fnstcw iret js dec push (bad) jmp lds rorl xor clc ja fldcw and jp cmp aad icebp dec add cmp das dec jno mov je mov loop addr16 popf ss xchg xor les xchg mov dec pop movsb out lcall imul popl push fcmovu popf dec jb mov shll xlat inc fnsave dec int pop pushf pop das xlat jne scas push pop (bad) and or add sbb inc mov adc int pop push sbb (bad) add push mov xchg movsb mov add push rcll lock adcb mov push stc out fstps in and push call cmovnp push dec push in xchg roll test xchg jb bound ffree clc ds (bad) xor in and call cmp jo and (bad) scas mov inc sbb in xlat fdivl mov mov cld jp pop xchg rcrl jbe pop jge mov sbb ds inc hlt xchg loope xchg xchg std dec out dec inc nop dec je fs mov push jbe ja das cmc or push js dec pop or rcrl sub mov pushf xchg es (bad) in xor das inc jns je outsw mov inc gs stc sbb jno adc aad or lock ret fnstenv dec (bad) jp test mov or and inc jb in pop jnp into jno adcl mov cmc mov lcall mov addr16 ret sarl xchg stos (bad) sbb pop les cmp mov (bad) insb and scas std cmp xor int fldl stc cmp mov jp pop sbb popf adc sbb xchg sub in dec lret sbb rclb mov aad std mov out stos orb clc sub jno sub sbb jle dec test jecxz (bad) mov push test fstps mov pop fnstenv lods xor mov fistl sti in mov inc movsl pop sarb push sbb loope (bad) lods sub lock dec sbb std fidivl gs mov outsl call rorl inc jno cld outsl orl leave cmpsl push frstor push jno push xchg dec lcall test daa mov or mov cmp mov int3 jae mov dec cmovge push jp lahf xor enter andb cmp gs test add idivl nop das mov sub pop ds mov pop inc push sbb mov jno push inc dec inc sub (bad) cmp ja xchg lahf sbb push cmp leave cmp (bad) push clc sbb push sbb cli lods xchg ret rolb dec inc mov and icebp movsl sbb mov push jae add jns shr xor mov sub sbb xor push sbb xchg or aad push popf cmp xor xor repnz pushf jb push push jno in pop cmp shll (bad) decl cmp sar mov dec iret stc lret push fsts and sti jecxz int pop xlat mov in pop push repnz cmp dec ror mov dec pop js lret cmp xlat xchg mov xchg bound inc inc pop cmp pusha push jae xor outsl movsl xchg aaa dec (bad) jecxz inc mov nop xchg cmp rcrb xor rcll lret mov inc inc test sarl cli sub stc ja inc pop inc and lock mov les jno pop pop cltd fld es sbb scas cmp xchg out bound scas loope mov mov push imul push xchg gs rorb mov inc shrl push imul push sbb jmp adc shr pop roll std ret imul fldenv stos std push jecxz scas jns repz lret aas or jns popa popf cmpsb mov inc lret mov fsts jp mov add imul sarb ljmp enter jg das cwtl mov pop add xlat pusha dec sub int jbe in jo out cmc dec cmp fnstenv dec fcmovbe pop out and std jae mov or daa les cmp adc test sbb mov push mov (bad) cmpsl xlat pop sub sti in mov cli cmp or inc leave movsb adc aas (bad) daa out cli mov sahf push push mov or outsb cmp popf and fcmove out and dec xor fcoms xchg pop std jg inc pop fadd dec iret lret pop ss xchg mov mov mov sbb ljmp pop xor sub pop ds jae mov int inc aam test stc xlat fisubl inc sbb push pushf sub loopne out adc pushf cs mov dec loope fstpt or push xchg push mov repz mov mov pop dec lcall mov test xlat ljmp adc push insl mov xchg addr16 sub test mov rcr sbb add sbb dec mov push das mov pop and pop cli sub ret sbb xchg std xor cld pop xlat out out push imul cmp insl aam sub outsl (bad) pop sbb push push sub es fistpll rorl adc iret sahf scas mov sub icebp jmp dec and xchg sub pop jecxz xchg xchg jb pop inc lret or xor jecxz mov dec les xlat test jno jp fnstcw fstpt fcomps inc pusha cmp test push cmp rorl and push dec xchg in repz cmp int jo pop sub inc imul adc jne mov stos popf cmp data16 and sub xor lret add into ret mov cs into xor sbb popf inc repz jmp stos add das out clc dec sub ret xor int3 pop xor std stos xor fcomip inc cmp dec and mov cmpsb fwait add and and das mov call fwait mov mov or jno enter sub ret test insb fcom sbb dec movsb xchg pop aad add inc jmp testb std lock loop xor jnp stos daa hlt cmpsl xor fnstenv xchg mov inc push loopne ds sub xor xlat (bad) std ljmp into in les sar add xor add push sbb dec dec inc pop push sub in fistp incl gs arpl jmp pop mov mov popa dec push scas aam push out mov out (bad) xor xlat sbb xor (bad) mov pop xchg jl rcrb out push push push push ficoml push cwtl sbb xor (bad) pop sub jge (bad) jno adc add loope ljmp roll push pop add push lcall out mov xor xor xchg (bad) dec push pop sub (bad) shll or mov xchg dec cwtl leave out fimull fisubrl xor xchg cli inc xlat (bad) jno je push (bad) and xlat movsl push popa cmp xchg in pop out aas push inc mov or dec (bad) sarb add cld mov addr16 cmpsb add mov sti lret mov rcrl mov je fidiv mov (bad) mov daa mov xchg iret mov or aaa imul (bad) leave ja lret mov outsl mov mulb mov cltd mov xchg repnz stos lcall dec testb push add fcoml pop dec dec push or ss fs loope popa das sbb mov add out jb sti imul and aaa jg add imul mov sub dec aaa or xchg aas mov jno ja cli mov addr16 sahf repnz pop jae stos out mov ljmp icebp jno das stos jns loopne xor or shrl pop cltd jecxz ret subl sarb inc jae cmp fdivr mov in sub adc imul jp xor mov or aam push or cmp lcall mull mov cmp mov mov sbb dec stc rcr cmp sbb dec jns mov pop insl sbb pop mov shr xor sarl xchg push adc pop sbb mov in popa fsubs test jle jmp mov lods mov leave jns mov cli mov push imul jbe mov pop mov jae enter out ret nop (bad) xor xor pop xchg cmp cs pop or (bad) jno je adcl aam pusha sub fldcw xor fisttpll dec xor clc cmp ret pop xor js (bad) fcompl daa mov (bad) stc stos mov mov pop add enter jne dec aam ljmp or imul ss stc negb dec stc mov jp out les sbb mov mov data16 pop xor add adc outsl or or jae repnz mov pop insl cmp sbb ficompl cmc jle rol stc insb fnop jae pop out (bad) xchg xor pop cmc movsb push mov stc popf pop clc pop dec or and push stos sbb and add aaa nop lcall push sub dec mov mov jns test and or push insl outsl jno jno inc (bad) jmp pop test cwtl aas mov je js je cmp pop ds sbb lods mov cmpsl js in pop mov sub repnz cmpsb arpl dec xchg ds pop stc xchg adc jle arpl cmp into xchg repnz div shrb test inc or sbb xchg std xchg and clc js jge popf js push mov mov cmpsb pop cwtl mov mov stc add mov repnz adc sub inc push pop sbb sub dec repnz lds dec xchg fmul sbb cmp out rorl mov scas push subb pop mov cmp push outsb fldcw push jg rclb imul push push popa popa adc mov inc (bad) clc pop pop fstps ja imul je out lods imul popa out mov cli pop sbb jne push mov xchg push lods leave fisubl push (bad) push xor mov je push push dec pop cmp gs jb pop xlat xchg into cwtl pop test sbb push xor cmp mov mov xor pop sub fwait leave pop add xchg mov mov iret repnz cmp ja push sbb pop inc pop push ret daa rclb or or adc test jae ret (bad) or punpckhdq sbbl jecxz mov faddp cli (bad) imul aaa jno inc bound xor movsb stos iret nop sbb lods push cmpsb sbb mov cs sbb adc popa mov mov in jns out sbb cli inc lds mov and in xor sub insl fbstp pusha jno notb dec aaa cmp fsubr fdivs daa mov repnz imul mov mov dec dec push and mov pop add xlat dec jle mov stos sarb aaa lds jmp jae shll cli gs adc je lock xor mov mov mov daa lret jl xor or mov loope xchg loop xchg out mov jle dec stc jmp sbb mov sub push sbb cmp cmp sbb xor dec or rol jno in loop imul repnz mov pop sbb lret fsubr popl jbe decb imul frndint mov xor dec add mov pop push out jbe xchg subb xchg adc mov push cmp (bad) cmp sub jge sbb mov xchg jns addr16 mov (bad) daa jp dec mov push imul push mov cli mov and mov pop mov mov cmp leave stc popa pop and pop add negl pop or push jae sbb inc fucomp mov xchg (bad) jbe clc pop nop sbbb push mov jno sub sbb jo or in jo push mov cli push jo inc cmp rcrl insl inc cmpsb out pop sbb mov popa mov dec popf jmp ret rcrb fs test push (bad) sbb stc mov ficompl cld inc lock mov sbb js add sbb dec stc dec lret fidiv jmp cmp mov cld lahf in mov imul sbb imul iret ret pop data16 stc xor pop adc cmp or dec push or jl mov mov pop loopne push clc and jae stc insl add pusha inc cmp push mov pushf test lcall icebp and xchg push sbb fwait mov cs add stos jp lahf repnz xchg mov fisubl dec inc imul stos and jp push jg xlat pop aas inc inc outsl jl sbb arpl sub int3 sbb pop xchg sub inc pop cltd loop in xchg test cld sahf pop mov xor adc sub jecxz mov and lahf xchg mov pop and repnz add insl out jno cli aam inc pop jo jno (bad) leave dec clc cmp fsubrs cli pop dec ds lcall mov imul sbb mov cli jns mov fiadd iret mov pop cli sub (bad) mov mov pop aaa aaa mov xlat pop jae iret stos fisubl push cmpsl mov jns xchg pop ret xchg stc addr16 mov dec mov sub bound or jg add and cmp add icebp mov xchg shrl sub aaa jbe stos and mov jbe sbb pop add sbb ret (bad) stc jp aam cltd pop jl mov mov jp mov push sahf or mov outsl sub lahf les mov stc fist repnz xor pop stc inc xchg dec pop cs xchg cmp call enter rcrl out mov push or cmp jno hlt mov push mov jno cmpsl sbb ja gs cmp sbb clc fmuls fidiv test test push inc inc mov jb fbstp imul std inc mulb mov lretw loopne dec sbb inc xor pop jns jns (bad) pop (bad) mov mov (bad) mov mov jbe mov pop mov sbb cmc popf mov mov negl loope pop push mov push stc ja insl cmp (bad) pop jg mov pop ja push or cmp ss jns or insb mov lea mov gs fs fnsave add daa cmp add out repz pop fisubrl mov push mov divl imul push mov cmp push roll loopne fcompl sbb dec pop sbb clc dec xor stos pop dec pop cli or sub cmp xchg loope push or call xchg push repnz or sub dec inc sbb into sbb sbb adc aad aas scas sbb cmc inc mov (bad) cmp or sbbb sub dec push pop lret xchg fnop jno sbb add cmp stc lret rol cmp mov xchg push mov mov cmp int3 jmp cmp xor shrl into lods ds imul pop cmp mov test sti mov das mov jo fs notb lahf ret jnp xchg fnop ljmp aaa cmp lds cli pop stos dec cmp sbb adc (bad) fidivr out cli push dec sbb jmp push lret outsb cmp pop mov adc pop pusha (bad) cli and xor inc mov cli outsl leave add cmc xor and aad dec push lret mov jp push and or arpl sbb push cli sub and mov pop add add nop cmpsb add add jae pop fsts xchg mov imul fistpl in push sbb mov mov ret jmp lcall pop xor (bad) mov mov stos push cmp sub sarl sahf jb (bad) sub (bad) in and sbb sbb add pop fs adc inc sbb push (bad) jae je jp fnop insb lret fdivs shrl js pop or addr16 insl in aaa out stc sub cmp mov jae mov or imul fstpl or rcrb pushf mov iret mov imul xchg dec inc jb fcomp and mov insl test pop sbb jecxz sub aas inc stc imul and (bad) shrl add push inc or mov push sbb cmpsl subl sbb jb jbe mov add pop lcall dec mov jmp mov pop push sbb das or adc mov mov addr16 push outsb fdivs mov inc pop mov sub push xchg mov pop dec clc call pop dec roll sbb pop jno inc cld mov popa push cmp add sbb dec ja sbb cltd insl pop xor xchg add xor arpl dec sbb add or cltd push push lcall jmp sbb add pop fistpll xor (bad) popa pop lds mov push arpl (bad) icebp pop mov lock jae dec icebp sbb jb popa jne lret push add aaa insb mov dec dec movsb and repnz jecxz mov loop clc fcomps into inc push idiv inc adc sbb xchg inc pop cmpsl jmp jbe ficom sbb add arpl jbe enter adc fstpt mov mov je test (bad) and in and mul adc pop mov ret scas repnz arpl pop and mov repz (bad) ja mov cmp push pushf pop int3 test mov cmp rcrl stos mov ja dec and out into dec addr16 test inc lret xchg popa jl sub daa jp aaa arpl imul push lret mov jns loop and out jb dec (bad) pusha sub lahf mov rcl sbb jmp dec xor jmp jp dec es dec or xor (bad) fldcw imul inc mov cmp loopne xor jb outsb pop sub (bad) (bad) adc pop mov jmp add cmp push cmp lds cmp je lahf out lea fstps add sub add std xchg xchg jne jns imul mov xor dec leave out cld enter ret gs mov pop pushf pop mov or cmp (bad) mov sbb test sti rclb sarl push lahf mov or pop add cli popa call fsubrl mov aam jno nop mov xchg or sbb fnstcw jge outsl jmp stc gs clc pop sub rcr sbb cli add int3 push dec pop fdivs pop cmpl xchg pop test mov ja jb xchg mov sub aaa fmul jnp mov pop lret jns inc scas pop jb and daa xchg jl jo or push mul iret sbb sub pusha dec arpl push sbb mov adc fistl or dec inc mov sub mov sbb lahf pop jp enter fdivrp or push add jnp xchg or cmp outsb dec jno and fcompl call cs push stc cwtl add (bad) xor (bad) or mov in imul test dec push xor fistpll or mov insl pop in jmp pop ret in fdivrs jb arpl in push mov imul lret imul sti cmc adc cmp mov imul fdivr sbb mov jo cmp rolb xchg mov dec xchg in out sbb repnz pop xlat jns push push nop ret sub les sbb outsb cmp jne gs cmp cmpsl xor (bad) adc mov xor movsl jae das aam jnp jbe leave jns stc cli pushf ret aaa (bad) jp arpl sbb sbb mov test fucomip dec pop mov loope lods ret (bad) pop dec cmp fmul aaa sub sub push cs or negl jg pop pop repnz mov in push pop dec fs lcall ljmp jge mov or repnz aad pop (bad) mov repnz mov adc xor int3 imul mov popl inc pop rolb repnz xchg lret sub mov cwtl je cmpsb push cmp lret je jmp sbb imul adc rol out jb shrb jae mov cltd xchg or out stc xchg mov push flds cmp push xchg jbe push mov dec stos das pop out pop sahf out xchg inc (bad) mov loopne iret lcall jl sub daa cmpsl or cmp add add mov jno jno in je cld je cmp push fldt outsl int3 sarb or lds push (bad) dec cltd or dec xchg pop xor imul inc mov lods push stos push lods and lret (bad) mov hlt sub scas cmp cmp insl out xor fiaddl stc pop stc mov out cwtl mov sbb stc jae inc dec imul inc lcall aaa adc cmp mov (bad) xor jmp add cld stc xor leave inc shll mov dec negl dec sbb leave pop push scas or cmp cli testb jo (bad) lret jae sarb pop pop sbb push in dec adc test dec je xchg or popa stc lret xchg int lcall sbb dec insb cmc add mov dec es negb nop mov popa hlt sbb out arpl pop jno inc sub pop jecxz sbb out repnz test dec ljmp cmp iret dec pop inc push loope clc dec fidivl leave jns push or nop lahf pop nop lcall fdivrp les pop and fisubl es daa pushf imul arpl sub out jmp sub pop lea mov das ror mov mov xor dec js xor loope jns xor je mov mov sbb jg adc pusha mov out rcll jbe mov cmpsb jg xchg outsl mov fsubrs lret inc jno loope (bad) ja insl dec cmp jg rcrl push cltd repz cmp (bad) or mov mov movl adc sbb fdivrs cli xchg lds ficoml dec mov test adc mov rcr clc xorl cwtl and orb mov jmp sahf pop imul xchg pop testl jae ret fildll cli xchg push add push pusha fbstp shll add imul mov (bad) cltd mov in push test fnop (bad) jbe cli inc sar cmp pop jno fldenv (bad) mov lcall xchg jmp add mov dec aaa lret pop scas arpl jno sbb jp push and push mov gs jge or stos enter xchg adc cli lcall lds mov subb jbe mull decl repnz roll mov mov or mov cmp push pop pop or into cmp xchg push outsl testl stc loopne out or pop push mov jae leave mov mov imull sahf mov pop xchg pop mov add push sub sbb clc imul rcrl xchg jo ja fmuls lahf enter or mov sbb sub mov dec sbb and fsts inc mov xchg fdiv mov add enter dec ss jge mov sbb or test pop jno lea ror loop sub xchg cmp xor push enter mov inc xor xchg push insl pop mov add cmp mov mov jg add cltd pop scas or pop push stc cmp sub mov sub push jae inc and aad leave xor mov cmc push cmp pop faddl in shlb popa test fcom iret aam js insl adc orl inc mov pop jno cld jne sbb and mov xchg cmp push add sub lock cmp mov sub mov cli popf stc inc lods lcall dec andl jle stos dec ficompl fsubl cmp test sar imul cmp dec sbb dec push aaa lret stc fdivl ljmp repnz add pop sbb scas movsl sub xchg stc dec das (bad) or xchg jae pop enter jbe scas dec dec stc mov repnz mov daa cmp push sbb fisubrl outsb cmp xor enter dec mov pop mov mov movsl stc mov or dec adc mov ja stc cmpsl sub clc sbb ret (bad) and mov jae lret or fsubp dec xchg cmp adc sub bound rcr push bndstx out mov cmp xchg dec dec mov adc lock outsl mov stc into push in imul gs test pop repnz daa addr16 jb mov jae lea (bad) (bad) dec aam cltd mov xchg jb sub test rcll dec push mov push repz popf (bad) sbb out aaa cltd pop scas sahf stc leave outsl cltd testl outsb lock or cmpsl mov mov pop dec and mov push (bad) xor test pop test mov xor or mov (bad) sar imul cmp inc cmp xor mov cmp push lcall adc ret mov mov cmp les insw aaa je pop pop sbb ret push pop aas cmc sub pop int3 jno xchg aaa cmc mov fistp cmpsl adc mov loop lret sbb or dec cltd mov cli out adc sub jp jno scas cli loope or daa inc insl out mov (bad) aad scas sbb jecxz negl nop imul jmp shrl mov xchg pop mov cli fdivrl push cs leave pop out pop insl xor mov jb push movsl out jle jmp stos cli mov (bad) mov cli lret inc pop dec dec pop or push dec xchg mov or lods jmp dec stc pop ljmp dec popf jle gs popa fistpll dec fwait sbb xor sbb mov push in (bad) pop ljmp cwtl xlat into cmp cmp dec xchg push leave (bad) dec pop pop jbe pop xor leave or cwtl adc scas pop clc (bad) or lock lret int3 test dec cltd ljmp addr16 xchg push adc cmp pop test dec stos fldt jb andb pop decb mov sbb addr16 xchg cmpsl push mov jbe mov mov js (bad) push jns cmpsl sahf lahf lcall push loop jo lock push cli cmpsl xlat aas (bad) jns scas push xchg cld add out jns lret enter pop fsubrs push iret push jb call mov dec addr16 pop (bad) push inc jno xchg gs outsl add jbe jle jae sub cmp xor jnp popf (bad) pop dec fs mov pop add addr16 das xchg pop imull dec mov and xor cmp xchg mov fcmovb cmp (bad) or arpl jae repz lcall and mov pop sbb push insb or sub xchg jl ss jae mov fmulp lods or push imul mov mov aas jb frstor inc lds sbb dec xchg ret iret lret imul pushf lret nop sub ljmp das cmp lock cmpsb divb pop (bad) ja fildll mov pop jg (bad) loop jmp imul movsb sub push fsts test mov mov dec pop sbb loop mov aaa or nop imul stc lea (bad) fisubrl movsl mov js sbb jns loope (bad) in bnd xor sbb xchg int3 out jg insl ds cltd push mov pop iret aaa loope imul fdivl outsl sbb cmp imul das call imul fnstenv andl enter push imul inc aaa leave insl xchg out movsb divb adc cli xor mov imul push loope jge add xchg jno pop imul cli or ret cld push mov inc mov in les xchg movsb or add inc clc sub xchg fidivl dec sbb dec cmp jno mov mov add sbb lods (bad) jno scas scas cli or call xchg int3 cmp mov and (bad) popf mov lretw pop (bad) leave sub insb outsl repnz mov sub out cli das loop stc jns jns push fnstsw je jb lock je mov cmp xor jp sbb ficom mov into and sub cltd movsb fisttp roll xchg stos pop insb jmp sti jae ret sbb cli fs bound xor cmp dec stos push clc arpl push pop mov pop jns je outsb daa out xchg call movsl js push adc pop jo sbb scas ret push pop stos imul sbb pop cltd mov mov test cmp (bad) mov fidivl stc xor xchg jb mov mov jmp jo push mov lcall ret pop xchg xlat fidivrl cmp cmpsb pop xor mov ja pop mov fcomip mov scas sbb lcall inc into push cmp xchg mov sub pop mov bound pop orb rorb sub push jmp call inc ja mov stc lods inc leave jbe and and dec xor fidiv call xor jl push jo push (bad) or imul mov mov in dec xor jns pop push mov pop loope push xchg mov mov cmp insb jbe (bad) sub jg leave cwtl (bad) out ja xchg les imul dec adc lahf xchg pop fsubrs mov mov cltd mov dec mov xor pop mov test xor push (bad) pop jp cli mov js xlat push cli sbb xchg inc jne lret aaa xchg push idiv inc stc je fdivrs pop popf xor shrb insb mov popf add aaa test test ret xor push pop dec adc out xchg mov xor xchg jae bound out adc je mov fiadd imul or push cli mov xchg jo pop and pop jne mov cmp in (bad) mov dec cmpsb sbb cmp (bad) mov dec jno push ja sub (bad) pop stos imul or sub ss jo lret or in ftst cmp jecxz call jb out jae test mov sbb push loope jge mov dec mov gs arpl mul lea mov enter aad clc stc lods push dec push xchg clc dec fcmove mov push stc fsts inc stos scas xchg scas test and cli lret inc cmpsl addr16 or mov bound pop ficomp scas push sub inc lcall insb std sbb pop enter cmp loop inc imul or cmp data16 rolb add or mov pop mov add push adc ljmp test hlt lcall jmp cs pop push aas in xchg (bad) ss dec mov mov mov jp pop cmp lahf push fadds push inc jle jns lcall jmp fisubr mov mov cmp or inc (bad) je mov cmp and jae lahf cwtl jbe adc cmp mov inc lret adc ja mov imul pop mov nop divb add mov imul and dec repnz loope mov xchg mov mov cmp fdivs jae imul jno cmp int3 jp lock das cmp mov fidivrl clc inc fsubrs cli pop int3 repz pop xchg lock imul jae and add pop xchg jno cmp xor pop mov scas fnop xchg jns dec sbbb (bad) jno xor mov lret jns and mov mov xchg rcll mov xlat out push ds mov mov pop pmaxsw pop sbb (bad) fsub jl cmp in out (bad) in xor mov sbb jae pushf xor cmp sub sbb repz pop mov jl mov mov mov fmul clc dec imul xor inc jmp movsb clc xchg movsb pop sub iret ret (bad) xor inc jno testb cmp leave arpl jne inc insl pop lds mov xchg gs outsl neg das bnd ljmp inc cmp bound push push cmp sbb cmp dec scas xlat mov repz pop inc cmp imul cld or aaa lock xchg push sbb jno dec aaa (bad) dec or sti push repnz dec cmp arpl pop dec flds stc xor push ret fcoms pop lods xchg fsubr and lock dec cmp cltd mov push cltd mov mov jo scas (bad) push and xchg jmp inc imul (bad) lahf in loop push rol ljmp sbb mov stc dec cwtl inc xchg inc mov arpl sbb fsubrp mov xlat push jae dec pop push fldt outsl mov loope sbb fldcw sub ret mov dec imul ss sub pop cmp fisttpll and pop xor pop repnz mov pop (bad) mov pop stos jp ljmp push mov cli das mov pop call mov jb and dec imul xchg jb xor add fisubl dec daa xor inc sbb repnz jp data16 dec cld mov mov lahf xchg jno push pop push inc fxch aas sub dec in jae ret push cli scas lea adc repnz mov enter or lods jmp iret ja popa xor pop es out pop rolb iret (bad) cmp cld xor pop xchg add shll push ja dec mov icebp stos icebp xor sbb cltd push mov mov cmp sbb jne jae imul add xchg imul ficoml mov dec pop in into mov jl cltd sub stos ljmp xor and ror push cltd out mov and jb cmp dec cmp jmp (bad) push jae jmp in icebp imul arpl ds es push mov sbb adc mov loop pop popa pop push and and (bad) popf sbb repz lock cmc daa sbb cmp mov and sub inc rcll jmp cwtl sbb cmp mov mov push rcrl push enter (bad) and mov out mov sbb cltd into outsl mov mov scas jbe fdivrs roll jmp xlat pop loopne lahf mov add push popf (bad) leave sub adc mov lcall inc mov sbb add push out sbb cmp mov jo cmp mov mov mov jbe jge sub in cltd or or (bad) adc cmp cli pop jle adc jge mov lea lret (bad) push outsl sbb dec sbb bound cmp add lret cmp push popf jno jmp xlat scas fucomip sub sbb mov outsb aaa xor nop cmpsl out cli clc popl ret mov lock sub mov ljmp imul jl xchg movaps icebp inc mov mov repnz xor bound mov push (bad) push pop imul or sbb jmp mov clc mov xchg in push aam add cmc loopne aaa cmp stc je shrl mov mov inc test xchg scas xor pop dec mov fs pop inc pusha out test jae push sbb cli jmp pop loop cmp push jo in mov ds add mov ficoml mov imul mov jae xchg cli nop addr16 sub pop ja out sbb hlt pop sbb fdivrl sub push mov push mov cmp rcrb imul (bad) repnz mov add adc mov jb frndint push stos imul mov lea adc ja ficompl sub lods push movsl xchg (bad) push or lcall es je mov mov sub and pop dec inc xchg mov pop xor push sub adc test mov aaa fistl or cmp jnp repz fcomp jecxz push or ljmp sub xor ljmp test fidivl jbe xor test stc aam leave jbe popf lahf mov cmp mov xlat orl push fnstsw xlat dec pop xchg data16 insl xor in mov jp hlt fdivrp insb pop pop adc icebp and fcoms insl dec rol notb xor cmp testl xor mov push sub xorl je cmp jae dec sbb xor dec stc inc lods sub pop cmp lds xchg enter hlt jge addr16 inc sbb rorb out xchg ljmp movsl addl mov push mov je xor mov pop jbe mov and stc push cwtl push imulb add test ficom cmpsl rorb sbb inc ds sub dec sub aad clc add lcall in add popa and ds cmpl adc pop dec cld jle adc cmpsb dec pop popf ds pop sub movsl insb xchg xchg pop (bad) jp out and xchg das cld or aaa ljmp jnp dec fwait loop dec mov mov insb pop jle outsb arpl pop sbb ret aam cmp mov dec pop sub inc xor sbb jno xor ret fnstenv inc dec jp icebp mov cmp and sbb and inc sub push dec and mov xor and mov mov push jno pusha in stc xchg enter lods insb mov ret sbb sub in adc inc test test in dec mov mov pop cmpsb xchg inc (bad) das adc push jbe enter mov mov sub cltd sub (bad) fcomip pop mov je test mov cmpsl mull xor sbb roll adc cmp pop fcmovu pop jp mov repz push cli std dec and cli jne push xchg cmp imul mov sbb sarb addr16 ret xchg pop mov inc mov cltd cwtl test jle dec mov dec lods std bnd loope mov push cmp (bad) xor mov mov lret repnz data16 cmp mov sbb into mov gs bound imul dec aaa mov loopne mull lcall cwtl orl stc xor sub pop mov xorl dec stos dec push add push (bad) push add sub sti clc sbb inc dec xchg or out cmp fdivs jmp inc cli jae xchg inc jecxz jnp jmp hlt jne subl jns mov movsl pop xor adc xor (bad) mov cltd dec mov outsl stos mov lcall pop add dec sti inc (bad) jbe jmp or outsb xor jns add scas jns pop push mov dec xchg sbb lahf js imul sub push mov ja jp in into ss cmc arpl dec cmp call xor ss xchg or fisubrl sbb sbb scas push cmpsl sbb pop jecxz xor mov or aaa pop inc sub int3 push sbb aaa inc xor inc mov xchg ss aad mov lcall mov xchg jo cmp sbb and sub or push ficompl mov lcall cmp out imul in dec (bad) in out sub aas arpl xlat lahf pop mov lret inc pop jmp pop sbb mov dec ljmp roll push mov rcr dec lcall mov decb push in call push sbb enter push dec (bad) loope imul mov sub xlat jle cwtl loop and xchg inc imul out mov pop fistpl jbe and test fwait push das sub into xchg jno imul mov add test dec cltd loope add lret (bad) out jo add (bad) cli push insl scas in lcall sbb sbb imul cmp cmp xchg shrl mov mov inc sub push cli or inc dec js pop lea mov cmp ret nop (bad) sbb (bad) or sbb mov js shrb sub pop fildll push les fadds mov imul je pushf or cmp std adc call cmp pop out jno mov scas pop subl and nop mov test mov pop dec stos pop mul cli mov aaa rorl pop xchg jg jae scas mov movsl jne in xchg stos inc fisubr or imul (bad) jne mov pop ret (bad) cltd imul adc lret dec pop call nop pop mov adc xchg inc xor dec insb dec ret dec cmc test sbb insl cli icebp ja fnstenv lret cli fldt sbb into lcall xlat xchg cmc jb loopne enter push sub adc cmc inc ficompl cmp sub pop sbb inc fdivs or imul adc cli add enter cmp cmpsl xor pop cmc in sbb cs xor loop stc das sub xlat jns push pop adc push cltd pop inc pop sbb into outsl out sub dec jae mov and pop xor push fcomp (bad) mov clc jae rcr leave ja lcall push pop pop adc lret je dec cs pop aaa sub (bad) or out mov aaa lret inc dec addr16 jg jae test sub imul sub aad out xchg pop data16 cli pop mov pop xchg pop pop clc mov dec lds cmp fdivp push xor out adc fisttpll (bad) data16 and xor dec out aaa clc sub sub (bad) aad clc sti pop push cmp sahf sbb test mov inc (bad) jmp mov push fdivs pop and and nop lock push pop rcrl bound (bad) mov jbe xchg ss adc loope pop sbb push or lret movsl inc or mov (bad) pushw imul notb outsl icebp push imul jg or sbb mov jp jae sub daa and cmc or jecxz,pn jno sbb jne aad lret imul push pop mov mov pop xor in mov into cmp cmp cltd push add cmpsl flds cmc bndstx xchg cmp xchg addl imul imul jbe into movb jbe sbb das popa sbb xchg cli or lds xchg xor ja sbb dec inc jge xor xorl pop and pop cs sbb dec add jne xchg stos insl aam cmpsl mov out repnz push js xor rcrb xor loope dec mov popf repnz inc test xchg frstor pop sbb insl push pop fwait or aaa outsb pop cmp jmp dec mov scas mov push testb pop imul mov out dec out stos dec mov js cmp xor dec adc jne inc (bad) out leave jnp fisubl cmc (bad) stc jbe cmpsb cmp sbb lcall mov push stc (bad) rolb jo (bad) and testb scas aas xor fsubrs into pop jbe mov mov cltd bound jbe fistp mov arpl mov push push aam dec dec dec clc in sub sbb sub fisubr stos incl push test aam lcall jno (bad) jbe loop lret cmp cmp adc pusha and inc pop cmpsl mov repnz cmp cmp pushf jae push push mov jp push mov pop les cltd xchg repz or jp fimull scas mov loop or dec mov xor mov pop xor jns inc mov popf arpl push mov adc out leave aaa and addl xchg lcall or and add (bad) lods cltd or notl repz loop cmp pop push push stc or pop cmp mov std and movsb repnz push push xor jo les lahf (bad) or push lock mov ja pop xchg push adc jo xor sub dec ljmp shrb mov movb sub cmp out xor (bad) mov pop stc cmp sbb cwtl xchg cwtl sbb cs leave mov lcall dec sbb xor cmc dec lock xchg lret cmp repnz xchg xchg imul push cmp adc push and mov pop rcrb jo js sub inc loope aad test mov out sti add dec mov dec xchg jb or dec jp push cltd leave (bad) xchg mov cmc inc and mov mov sahf daa add mov sub ja sbb cwtl in cltd push xchg mov out mov pop adc (bad) out (bad) mov out push sub mov dec lods jnp pop mov jno mov pop lret and sub imul xchg jbe cltd pop jge sub pop sbb cmp ja pop jne sub mov jns ret mov in mov mov leave stc aas sbb mov (bad) pusha sbb cli pop mov test enter test pop add jge enter sbb iret xor xchg sub ret addr16 pop xlat fs iret lcall sbb sbb ljmp lret cmp jno jbe dec mov data16 stos js push push int3 sbb push jmp fidiv push pusha adc adc pop cmp or stos lcall push xlat dec xchg dec xchg add pop popw add repz cltd mov leave push imull or enter sbb cmpsb (bad) pop adc sbb scas dec stos adc outsl mov stc adcl out dec cmpl mov xchg repnz mov jo sti or adc cwtl sub bound test cmp arpl pop jo or rcrl imul adc push imul call pop mov dec shrl mov aam dec fbld xchg (bad) sahf jb gs and mov sub stc pop jmp or cmp mov mov cmc orl or pop aad insl pop fmuls test bound dec imul aam cmp sub sbb pop xor lea xor inc push xchg mov jae jle gs cmp jbe (bad) mov jbe mov jmp cmp pop jae jno int3 push (bad) test call and mov mov sub or push and (bad) pop jge jp negl repz push push mov xor xor ds rclb pusha mov aas bound mov lret or mov jge cmpsl (bad) mov xchg in sub jp ljmp add cmp push imul mov pop push push jecxz sbb xor add dec sbb sbb and iret or fadds loop push cmpsl imul fild mov test pop or sbb dec sbb dec push (bad) mov clc sbbl shll mov addr16 sar push push and and in lahf pop xor dec fisttpl xchg lds adc xchg jns sub mov or adc fsts (bad) (bad) jmp push popa push cmp push stos jmp dec push pop nop es fisubrl das xchg sbb stc and mov add push inc or push lcall cli sbb test inc iret sbb pop xor xchg jns hlt push pop pop fcoms or ja cmp sbb dec and pop push jo inc mov cmp jo lock cld push int jl cld mov nop cmc fnstenv aaa xchg int lcall (bad) imul cmpsb bound insb cli sbb or aam (bad) cli pop inc xchg fnstcw mov (bad) insl out or dec fisubrl mov mov mov pop cmpsb int3 mov pop fstps push ret lcall mov dec pop fsubrl pop jo xchg mov repnz sbb sub mov jecxz pop cltd dec mov idivl dec sub imul ljmp cmp je ret pusha mov jg inc insl pusha fldenv adc pop out mov (bad) jbe jl add mov repnz xor sbb dec cltd outsb jl cltd jg mov dec sbb xlat fdiv inc iret jb cmpsl xor fistpl jecxz (bad) mov sbb out mov (bad) bound (bad) xor xor gs cmp push sbb cmp jno mov inc pop xor mov pop repnz jns jl into dec pop push adc jne lea sbb rcl fidivr xchg stos das in push and cmp push movb imul mov stos cmc clc jae scas (bad) cli mov roll cli cltd or inc scas jns mov adc dec repnz mov sbb mov adc fildl loope (bad) xchg mov pop inc push mov dec inc gs dec push mov push js aaa ret dec (bad) imul mov ja,pt in bound hlt stos add aas pop mov arpl (bad) sbb push ret not inc idivl mov xchg dec out cmp sbb jbe adc pop mov xchg loop and push xor stc push or movsl in mov sbb insb adc loope jae dec test inc mov jmp xchg pop icebp test cwtl push jb add inc dec mov test into pop je imul xchg dec enter aaa mov std cmp lods dec and mov bound mov dec lret sbb lods add sbb imul cltd packssdw add repnz pop dec pushf lahf jno negb xlat lods jnp rcll insl jno test add aaa out js adc pop jo movl sbb scas mov dec data16 sbb xchg call sar add inc cmp mov js cmp in pop push pusha aas push dec xor testb mov (bad) mov push dec ljmp jp aas repnz sbb xchg push leave sbb icebp xchg mov pop sub push jno enter test stos mov sub and add or idivb fdivr sub and dec mov fwait mov ds push fistpl pop aas sti cmpsb or xor or push lret outsl test mov lret xor fcomps sub jg stc repnz and sbb mov pop cli adc sbb sbb gs mov lock dec dec scas mov sahf add cmc into mov xor pop test add mov imul cmp fcmovu and clc xchg (bad) push out cmp and cs xchg sub (bad) cli scas loopne sbb ljmp jp sbb mov dec sbb mov cmpl sti mov cmp lods push (bad) pop icebp out ret mov push jl js pop lds insl sub mov pusha xlat dec and add icebp ja sub jno inc stos and xlat (bad) (bad) enter mov push mov sbb mov sbb mov sub xchg xlat pop cmp cmp mov and js mov fwait mov stc sbb pushf and into mov test mov mov lret jmp jle aas clc orl dec sahf imul test fcomps negb push pop mov mov inc jp (bad) in xlat repnz stos dec rcrl sbb sub dec lock stc addr16 test jnp call std inc sub stc lock je mov cmp pop loop add pop (bad) fnsave popa pop mov mov sbb push sub adc push mov pop lret mov es stc dec movsb push xchg mov cld imul pop mov push pop (bad) cltd out jno xor (bad) xor orl insl sbb push xchg add js pop js movsl jno jbe xor in sbb push dec les stc inc js dec sub notl je push leave cmp out movsb ja cmc dec in in mov cmc sbb pop (bad) aaa aam xchg insb pop stc rorl pop xchg cmp lods cmp mov movsb imul lret (bad) imul xor inc mov or pop repz jbe testb jp adc dec out pop sbb add repnz push pusha mov cmp and in addr16 cltd mov stc je cmp jns sub mov jne shr mov mov lds and push jbe nop test mov pop insb sahf popf js lea out fs scas stc pushf (bad) xchg (bad) mov (bad) mov ret sub pushf cmp xor xchg cli loop test push stos mov push jno sub pop push dec fidivrl out xchg mov cmp adc dec test pop popf jb add scas mov pop push cltd fisubrl repnz fidivl leave dec pop fsubrl jge js push lock lret mov jmpw (bad) mov mov mov jp and stos jl out mov inc enter dec pop adc cwtl push and mov cmp pop jns icebp pop sub lret repnz icebp pop lods repnz popf pop js sbb hlt or push push cmpsl loopne jne xor out jmp enter jnp jmp mov inc sbb aaa mov addr16 fisubr test or out push lret lcall push unpcklps and pop sbb test lahf xchg pop lret inc add das (bad) inc cmp lahf pop jno insb (bad) adc mov cmp js out sbb jns inc jae cmp imulb imul dec push repnz fiadd cmp clc cmp pop cmp cli pop xlat loop push fsubs cmpsl sub leave pop pop sbb sbb out cmp mov adc push nop out aaa cmp jbe push adc imul mov gs cwtl or dec stc mov sbb adc iret xor ljmp rcrl xchg aam jnp add jns mov insb jmp pop sub pop fcomps mov cmpsl pop sbb test xchg sub dec mov xchg imul mov stos add sbb pop mov fprem daa push ds pop imul or out inc sbb pop sahf insl dec fprem or daa xchg lea pop sbb imul jp imul push cli lds rclb pop dec push subl xlat (bad) xor cli (bad) jo push jns mov fimul in gs addr16 jae push sbb mov dec dec pusha cmp sbb add xchg mov imull or jp dec jae mov adc out jae push jns not inc fcmovnu mov je mov aaa dec ds imul divb call adc dec sbb cmp daa leave imul adc sub inc xor call pop sbb imul add sub test push xchg inc inc pop jge mov pop or pop mov and inc push mov jp iret push pop lret xor cmp pop nop push test cmp jp pop cltd xchg dec pop cmpsb cmpsl pop sbb repnz push adc adc pop bound js movsl lods clc insl pop stos ds pop xchg and cmpsl adc loope mov sbb (bad) ja cmpsb cmp in pop mov add fldt fwait (bad) aaa test lret dec xlat xchg jp and push cmc jnp mov pop leave (bad) add cwtl incb inc mov aaa xchg add test cltd and xor or dec imul test test insl repnz imul mov jo mov xchg cs xlat dec lret xor ljmp xor jl,pt mov mov lods pop jl push inc cmp pop insl add pop nop pop stc mov mov dec push test popa adc jb mov mov sahf mov call pop out or sbb daa data16 stc lds mov mov pop pop (bad) cli add dec in cwtl cwtl test pop std pop push test xchg (bad) fs mov (bad) dec xchg div mov xorb and (bad) xchg mov into sbb insw out lret and aaa jge pop dec cmpsl ljmp cmp (bad) out js push lahf mov movsl cs imul mov dec in stc das xchg pop pop inc jns mov or sbb mov addl pop test popf out push pop cmp stc adc ja xchg xchg sbb pop popa cltd cmp xor xor or jae adc mov sbb movsb xchg jae pop fisub cli lock jns imul cld mov pop (bad) imul mov insl movsl sub popf cmp mov cmc pop leave icebp pop dec test cmc ficompl jp fcomi lahf jno movsb stos pop arpl stos add inc jle dec push das loop push imul addr16 sti xchg insl mov stc outsb mov imul dec daa xor push lea js mov jg test xchg movsb pop loopne (bad) pop imul dec or cltd cmp (bad) (bad) push cmp or and lea fdivs sbb negl push pop fcomip mov cmp pop in lahf cli mov mov cld arpl sbb pop sarl cbtw jbe jg jp imul xlat inc jne fstps pusha loop pop add adc dec xchg xchg test (bad) cmp xor pop mov enter xchg push pop xor dec pop sub mov out movsb cmp xlat js or mov adc lea imul es stc in fstl xor mov insb dec lock js ret out sbb xchg call mov xor mov jp sbb push fisttpl clc rcll fstps stc and xor jp jg sbb mov lahf (bad) cmp js arpl pop jb sbb inc lret lahf dec loop js jp imul jl ljmp fadds enter pop insl jmp adc mov sub mov xchg enter mov pushf aas into jnp mov pop mov fisubrl aam lods inc imul xchg insl aaa push (bad) mov mov cmpsl xor ja lret sbb out js dec rep aad sbb or imul push imul dec mov std jecxz imul sbb push fwait js mov rcrb jp or mov mov dec dec mov jmp enter inc stos test call icebp cld mov in rorl mov sub sub cli sub arpl jns mov mov mov nop lret aaa pop (bad) mov repnz test sbb or sbb sbb mov mov xor jmp aaa mov mov hlt jns (bad) push cmp movsl mov arpl sub leave mov add das adc pop scas sub dec cltd imul pop and pop sub gs cmp mov (bad) in test lret lret mov ficomp jp mov add push adc xchg dec jne ret mov aaa (bad) pop push (bad) cmp dec push push inc js mov and sub imul imul mov pop jo data16 cli xchg pusha insb inc nop cmp fwait cli dec dec pop dec xor insl dec (bad) in mov adc enter mov shrl js aaa repnz test dec cmp mov pop fnstsw (bad) sbb pop ds sub lret mov push sarl sahf gs cmp mov sbb sahf rclb mov xor out mov shll and dec xor mov dec (bad) mov xor js fwait outsl push mov cmp out repnz jno dec cld xor je xchg sahf cmp in in mov push cmp mov mov dec xchg loopne dec imul cmp imul mov aad cmp jb push cmpsb in rcrl cmp pop pop icebp fdivrl stos aam test adc fist lock jb dec pop pop jae pop inc adc sub gs jno fs imul cltd mov out (bad) pop leave or clc aaa and out jp jns mov ljmp das gs push cmp and dec fildl dec mov (bad) leave mov repnz mov (bad) jo cmpsl inc popf fimul pop dec mov pop rorb lds add sub jo arpl pop jle pop data16 push adc das or cmp fimull mov pop je push insl push xchg dec dec mov sbb jb sub mov pop jno mov les add pop add pop bnd dec dec and (bad) not xchg cmp stos xchg cli mov ret ror (bad) xlat test jb movntq imul mov cmp addr16 mov test cmp mov adc stos jbe adc and call push sub imul scas es icebp je mov shrl (bad) dec dec mov sub push pop dec mov adc jp or mov outsl adc imul pop xor sub dec cmc push pop fnstcw cmp pop jbe xchg lcall cmp inc sbb dec pop rsm fmul lret imul fcmovnb sub push pop push sbb lret dec mov and or jle idiv lds inc dec in cltd stc mov inc sti lret adc sbb mov jecxz and xchg xor sbb dec jbe stc aaa jmp iret mov xchg mov in out daa in sbb fmuls jno xchg mov ja push xor pop jp cmpsl les ss test push movsl or je inc cmpsb mov mov mov push cmp jp es jp idivl sub sbbl push cmp mov jns mov jp dec mov xor sbb pop ds push imul mov pop adc outsl mov idivl (bad) xchg pop fildll xchg movsl or xchg stos stc dec icebp push xchg dec or dec fwait xchg sub push out inc push test loope cwtl cmp xor inc and (bad) dec mov or or jnp sub lods fidiv xchg pop cmpsb dec or jnp lret outsb mov in jnp xchg lahf push aam popa test scas pop test mov test test mov push xchg lret es ja mov jnp outsl xor mov jnp ret and in scas loope mov imul pop cld pop sbb jno aas jp pop cmpsb test sub fneni(8087 sbb mov fimull push inc das ss jnp jb lret jnp pusha fiaddl mov inc or test jnp dec push stos adc in jge stc xchg jns and jae test addl testl lods dec (bad) sbb pop (bad) or ja fsubrl xlat sbb jnp test mov pop jae jmp xchg vpsrlq inc jnp cmp mov mov mov into sub pop jnp cs mov adc fstpt (bad) jmp js lds fcomi sub outsb aad sub xor loope std mov xchg mov and xchg lcall out mov sub (bad) in jnp div fnsave pop mov lcall xchg jnp std mov mov push dec faddl jb lret sbb sbb ror les ret cmp not xchg jnp sub hlt aaa push pop push jnp aas (bad) mov lcall gs ds fidivr fs jmp and test scas xor pop repz and jp jnp pushf data16 lock jnp (bad) or call dec or lret push and jae mov pop pop jnp lcall lea xchg ljmp lock int3 mov inc dec xchg xchg jnp and inc pop jmp jnp loopne xor jnp les mov (bad) mov push pop scas daa push in mov jo mov add mov jns movsb xor pop inc pop clc addl cmpb pop mov fisubl ljmp fistl call mov adc imul jb add aas inc shr cmp ds push push jnp int3 mov mov cmp cmp adc or jnp pop cltd in adc xchg sbb mov fnop adcl push mov arpl imul mov scas or dec xchg xchg lcall inc popf xor sub test loop or aas ret mov cmp jge (bad) icebp push sbb mov imul jmp jnp icebp xor and outsl add xchg adc jnp mov cmp add (bad) ljmp popa add sub sub xor jb sti jae ja imul mov sbbl sbb push jnp pop imulb jnp popa push xor pop cwtl mov sub jbe (bad) lods icebp ja and popf push mov mov clc dec cmp jecxz jnp sbb sub shlb int xor jnp shrl dec pop adc lods insl pop xchg (bad) je xchg and cmp (bad) es bound pop in idivl cmpsl xor scas mov jnp fadd jl pop dec js xchg fs or in popf push pop xchg push or inc jns ja out xchg insb push inc test hlt sbb jnp test adc outsl aaa cs imul jns rcll repnz mov mov (bad) sahf scas inc jnp das imul pop stos and pop pop jp fidivr mov jnp ret sbb pop ja outsb push add insb sbb std xor test cld jnp pop push cli dec and in lea pop mov sub sarl enter mov adc and and scas outsl cmpsb sub imul insl pop mov icebp jnp cmp rorb in daa ret roll mov jns test scas adc fsts movb arpl call inc test push jecxz int3 adc mov jne dec jge clc into jns outsb ja gs fadds rcl (bad) out cmp sbb pop push jnp iret int mov jbe jnp lcall jnp mov lahf jmp xchg ljmp leave mov mov or andb xor jnp adc mov cmp mov jnp (bad) stos in in fstpt cmp jnp loope push pop mov sub imul cmpsl jnp fdivr cmp divl pop or call or xrelease out mov ja jno sbb adc lcall add arpl fstpt push outsl ds inc jb push mov cmp mov jl ret adc lret cmp xchg or mov and jo jnp pop pushf decb xlat mov jnp imul adc jnp loope test jnp mov mov insb loopne cmpsl lea jp xchg pop popaw cmpb add add clc cmp jne push cmc mov pushf jnp pop sub cmpl into shrl sbb test cmc jnp mov fsubs clc inc int3 jp dec jnp mov xchg xor nop stc mov fdivrl stos jnp pop ret lds jnp loop les insb ss jnp sub push (bad) (bad) cli fistp xor adc clc or lods out jg repnz dec mov adc xchg cmc jnp xchg xchg scas ja xchg xchg pop pop in dec icebp pop push and (bad) jae ja pop or out jle inc aas enter or jnp and mov int fisttpll push adcl in xchg adc xchg pop fwait inc jnp fsubs sub popa jnp lea inc loop jnp out addr16 fstpl mov loopne pusha jg pop jne test enter jnp add stos or dec cld loope stc cmp inc push jnp push aam aaa xchg xor sub add out sbb dec push icebp iret jns mov mov lock inc imul dec xor cwtl (bad) jmp sbb lret fnstsw or lock lret sub pop jnp xor aam decb or clc jno subl enter ljmp rclb mov in add sahf mov lods mov outsb push jae adc (bad) stc jo imul jnp sub cmp outsl or fldcw cltd jge daa inc pop xor adc pop inc mov lahf ja subl adc in aas pop pusha cmpsl or lds scas std leave mov loop adc xchg jmp pop fidivl xchg dec jns add push mov jnp sahf hlt sbb jnp test call xchg cs in cmp in outsl inc popa pusha repnz inc jnp mov cmpsl jo dec inc add pop mov or jnp cmp fidivr stos mov into xor ret xorl push cli sub ja aam jno xor ret dec aas and in add out sbb lret push xrelease jle pop jne jnp cltd jecxz roll sti clc jae and jp scas jbe xchg dec jecxz cmp xor jnp jno rol cmp cmp jnp movsl lods test into in pop lds cld lret cmpsb mov jnp cmp rcr cltd scas jnp inc out movsl loopne lret mov jle test mov push jns jmp in lods mov jns jmp dec fcoms (bad) sub fidiv sbb inc cmp les dec mov outsl das jnp or inc aaa je jnp lret (bad) sbb mov mov inc movsl adc jnp mov imul cmc idivb ret pop push in movsb jnp sbb (bad) loope lods sarl xchg imul aad sbb jns out fwait std mov (bad) cli pop in cmp je jne scas call and cltd pop jnp mov xchg in pop push sub jecxz sbb push cld pop push adc adc inc into sbb cs lcall jnp sub lret subb or adc mov cli in lret dec jnp mov loop dec xor push pusha dec mov jnp and inc jnp negl mov lock in (bad) js jle inc jns add inc xchg jnp loope mov jnp dec push shrb pop jae in push push (bad) sub mov jnp xor xchg xchg (bad) mov jnp cwtl lea jnp outsl bound push mov xor sbb mov nop cmp inc das ljmp mov js cmpsl jmp insb testl je pop pop or (bad) (bad) push insl fnstsw scas test jnp mov rcll cmc mov mov iret mov mov je add pop mov mov lret fldt pop adc cmp adc dec lcall and mov adc lea inc imul mov mov pop inc push aas add addr16 in xchg scas js movsb pop add mov xor jo popa or cmp jns cmp and aad push out outsl jbe inc mov popf cmp fstpl scas pop clc test jnp pop mov inc jnp jmp xchg pushf xchg stos cmpsb jns mov mov mov aad sbb pop in mov jp clc mov (bad) cmp ffree xor jb dec jnp (bad) test jle call bound xor xor sbb ja nop rolb mov adc mov leave mov inc jnp (bad) enter cmp cwtl mov dec jnp or scas and outsl lods jl jg inc sbb and push (bad) cmp pusha sub inc xor es sti or mov or (bad) xor inc cmp addr16 lahf (bad) fnstcw mov les inc mov add jb push jnp int mov push jnp push adc js dec fs cmp test int3 andl ljmp sbb cli pop sahf stc sbb test push dec mov xchg push fidivr cmp jno mov and mov jnp out mov movsb loopne mov mov mov sub fiadd js loop jnp ret in leave loopne push jnp outsb fcomps jnp aam lahf mov gs pop cld loope ret aad stos in enter pop jnp mov repz lret mov int iret popa push pop js jnp cltd cli inc stos push arpl and in imul jmp push jnp mov xchg cmp cmp jb daa insb cmp jle nop jnp xor int3 or jnp sarl jnp pop mov jno hlt inc jnp jb mov add test xor jnp mov or jge push xchg or push std xor add inc mov cmpl jg int3 je mov push push jns push fwait cmp cli sbb roll cwtl sbb or lods jnp xchg xor inc out pusha push xorl mov dec sarl inc sbb dec cltd out mov imul mov insl loop inc (bad) push fcmovnb mov pushf les mov loope jns outsl (bad) jnp std sub insb mov mov adc jle inc or negl xchg mov pushl mov jnp stos hlt enter fstpt ss (bad) cmp jnp mov push inc jnp loop pushw scas outsl adc push jns hlt cwtl js mov jp cmp pusha movsl ret mov (bad) negl or daa aaa xchg jnp icebp mov jnp movsb js xlat enter inc imul mov in repnz push ja or jle cmp jp or sub add cwtl sub adc pop jne mov xor jle test dec orl inc mov ljmp add dec mov or add inc movsb add and stos cmpsb xor scas repnz mov or pusha xchg and inc mov inc ffreep push jnp loop inc fnstsw mov stos movsb fcmovbe inc inc jnp mov mov (bad) clc jnp (bad) out adc cmpsl lahf mov xor (bad) inc sbb xchg test mov and sbb lds mov mov roll xlat out std insl push mov int3 push testl jnp and dec jo pop mov das out cmpb popa mov or push stos jnp mov xlat or xor sub cmpsl mov iret jnp insb and popa push adc aas dec movsl jns jbe xor lcall les lahf mov sub add notb cmp jb push fidivrl movsl mov jnp ljmp inc js mov jnp xchg lods inc pop jnp (bad) int3 cltd pop outsl imul lods (bad) js sahf lods mov jnp push sub fidivl sub sti push sub jecxz cmp xchg lea jnp adc adc or clc nop jp ds cwtl (bad) jnp leave add push jnp add sbb imul (bad) clc jo lret jb cmp mov cmp add pusha ret jne int xchg push pop dec aaa adc mov cltd pop movsl pop setl jb inc lcall push in (bad) cltd mov (bad) not lea jnp addr16 imul sbb jae add iret push popa xor dec aas imul push pop pop push repnz (bad) divl dec incb push mov fdivrp jns movsb in cmp mov cmp add clc mov xchg outsl rol add jg pop test imul xchg test (bad) test pop fnstcw mov lahf in push jne jecxz and (bad) push jae movsl lods lea ds sbb enter mov repnz inc cld xchg pop cmp rclb sub cmp scas adc and es out ret adc cmpsb lods or nop cmpsl cmp imul mov cs mov or (bad) ss iret mov fildl iret in mov xchg fbstp ja and das push jecxz lret dec sbb jbe lahf mov aam cmp pop cs mov out icebp ficoml or mov mov mov pop xlat xchg test and mov scas sbb xchg inc sub stos out push jnp push xchg shlb sub and sahf rcrb lahf add fwait das add or xlat mov (bad) sbb arpl pop cmp push stc xor rcrl mov push stos movsb and mov outsl aas inc scas push imul sub mov jne or stc or das dec mov shrb aaa mov loop sub jne (bad) xchg push sub mov jns push xor fsts add es jl inc mov pop outsl adc int3 dec or add imul cmp outsl stos xlat aad arpl sub cmp cld sbb mov add inc imul ljmp xor xchg xor lock or jnp push iret pop hlt xlat mov cmp and jge lods pop push mov xor add dec cmp cwtl push jmp aad nop cmp xorb add add xchg imul jne test outsb pop lea imul call add leave jmp (bad) pop sbb shlb aaa xchg mov adc xchg jb sbb das movsl ss add dec hlt inc mov mov dec mov push stos rcl or sarb (bad) inc in imul loope ja insb pop (bad) aad push adc out jmp jge push adc mov xchg sbb sbb scas (bad) mov pop or jge xor adc dec sub jmp sbb shrl and (bad) adc out sar push add or lds jmp shrb test jecxz push ja cli mov arpl or mov sbb sub int3 xchg cmp cmp out mov push sbb pop mov jae daa adc and fsts pop jae popa adc mov push sub push je inc pop jno sub out out xor rolb inc fild mov fs mov rcll push add leave es push cmp or push jmp out fwait xor pop add pushf or lret push lret or inc jns push mov pusha adc jl in addr16 inc and and cmp jmp ja mov (bad) xor inc pop popf fsts sbb mov mov clc sti push test movsb adc jno ds adc pop (bad) outsl sub jne aas insl pop (bad) jge ljmp fnstcw fidivl push in mov insl outsl mov push pop out and sub (bad) sub loop aad jl fstpt sub fs sub cld cmp mov push jno jae dec aam addr16 dec lock cmp cmpsb xlat int imul xchg jae add jo cmp in (bad) outsl dec push sub lahf jno adc mov pop or add (bad) std pusha add aas push sbb jno sub push sarl aam push (bad) ret jno xlat push pop test push xchg vcvttpd2dq adc jmp or cmp add push (bad) sub setge ja push pop subl pop mov aam sub jb out lahf dec dec sbb pop cld push pop mov sbb inc imul jnp fnstcw add dec and xlat lcall ljmp jne nop arpl mov ror mov out add pop out xor in mov cltd xchg sub (bad) add xor insb push test loope roll pop imul adc sbb push inc inc iret and push lret xor mov mov int3 mov (bad) outsb add fstps fnop daa push push cmp mov fcmovb push test arpl dec insb (bad) mov jmp call outsl fucomip out cmp jno (bad) test outsl rcr xor rclb rolb movsl (bad) mov stc cmp pmullw cld pop push cmp push mov ljmp rol outsl and ret dec and (bad) ss push std dec jl pop mov rorb pop add (bad) mov mov mov scas inc (bad) fwait cs idiv sbb nop xor mov lcall mov jae shll push mov cmc jbe cmp mov fcoml push fucomip inc push repz hlt aam cmp ljmp jmp cld cli adc pop clc dec xor sub mov rcrl mov rol data16 fsts fs xor inc imul mov xor push mov dec dec pop push fdivr ret jp aas sub pusha cmp fmul sub sub out mov mov and roll dec adc xchg and jp push mov jns mov and stos push fmulp jmp push jp lahf xor stc xchg aas insb out push pop xchg sahf les fnsave adc jne push int3 test pop (bad) xor dec push cmp hlt mov pop stos pop test push xor push mov ss push cwtl leave xor xor dec push lahf pop add into stc mov test jno lds sbb flds dec out jp push movsl dec cmpsb (bad) lahf and push mov and xchg jnp inc mov testl sub add (bad) xor push ss call add push cs out push rorb pushf xor mov (bad) idivb gs dec call aaa xchg into (bad) sahf lods stos popf imul outsb into lret roll adc jp pop cmp push int3 cmp das dec jg scas fwait mov or mov dec cmp (bad) sub aaa mov add push imul nop or in lock arpl mov or mov imul dec in cmp ror mov jae das subb sub cwtl clc pop xor jno add (bad) cmpb add fild or sbb xor inc pusha mov fs es je inc xchg fidiv gs stos gs mov inc adc and or pop push xor sbb jle mov insl imul fdivp dec pop inc jnp jl stos ja fwait sbb (bad) xor (bad) std dec iret pop sub fstps mov mov cmpsl mov movsl mov ljmp jg or dec in mov das incl shl pusha push push cs cmp sbb cmp jne inc xor lods incb outsb cmpsl push adc (bad) stc call inc mov push or mov add fnstenv out mov fsubl das insl mov rclb push pop js out push loop pop xor daa xor fistpl lock dec xor mulb rorb pop push jns hlt xor mov outsl cs or jl and ljmp push jp push js cmpb out xchg mov roll xchg aad inc jp out push cmc fisttpl fdivs sub xchg fsts jb addr16 (bad) lock sbb out sahf jnp stos out fs pushl mov lds cmpsl cmp sbb and pop fisubl imul imul fbstp data16 mov jge jecxz lods je pop push and mov jo repnz xchg jmp enter mov xor and dec sbb inc jl sub addr16 bound (bad) jo pop dec hlt rcl mov imul dec cmp arpl test outsl nop jbe xlat mov dec inc mov add je lea cli pop pop sbb cmp lret stc mov push pop jecxz rorl divb push dec jge sub fcom mov dec push insl cs push mov insl inc aam xor inc sbb (bad) out stc pop and mov push inc or sub xlat mov hlt in mov arpl mov in mov lret mov xchg lods cltd xlat jns add cmp xchg mov xor xchg int dec pusha mov imulb rolb mov mov mov dec push dec sub pop xor (bad) jo lret xor push sub clc les or and popa repz pushf icebp or sbbb aas dec mov xlat clc xor sbb lods mov xchg sub sbb adc (bad) xlat sub insl lea movsl mov imulb outsb fnstcw dec xor lahf push dec and sbb push jo (bad) repz daa sbb ljmp (bad) ret cmp out or add mov (bad) or imul sub inc cmp xlat push leave push mov push inc push jb push movsl dec stc hlt (bad) das push je in popa insl push or das repz jl sbb jae repnz lods cmp les cli jl into aaa imul pop xchg sti mov push or ds lcall push (bad) jns cmp sbb push repnz repnz pop or mov pop add cltd iret test fcmovbe out sub loopne dec mov mov add jae jle cmp push lds repz cld mov pop outsl and xchg sahf sbb sbb test inc pop add stos lret jae fwait xchg mov pop repnz jmp mov adc scas lret ja or arpl les push stc sbb xchg pop jp (bad) push dec xor mov push push and lret in jb xor xlat inc test jmp pop dec xor (bad) mov and pop push test mov lea inc pushf jno (bad) jns xchg std add push jecxz and add pop shll repnz and sbb test loop and roll xchg sub sbb mov sarb faddl adc or sbb or repnz and pop dec cltd enter rcll dec cmp lods fs push sub imul mov fldl2e add mov push mov sub (bad) mov pop push insb and mov stc jae jbe xchg mov cmp cmp enter pop add mov loope hlt addl sub gs xchg jne jecxz ss int inc imul addr16 dec jg out mov xor testl pop push dec dec ja andb cmp roll jp mov fisubr rol cmp xchg dec add lret adc push into dec and andl push dec sarl cmp or mov and movsb lds pop push mov xor add lock int inc cmp ljmp sbb sbb push incb sbb flds and push add ljmp jbe mov adc loopne shr jp xlat (bad) icebp imul insb ja jbe xchg aam jle xor mov mov or xor (bad) and push pop (bad) push ss cld lods push in dec stos sbb push ja addr16 push inc imul push sub push push push and stc push sarl test push icebp mov jno push (bad) xchg movsl shrl add mov mov push push fldenv in call mov pop cwtl fs (bad) aam rorl shlb cli jmp inc movsb stos pop mov pop xor iret cli jmp xchg xor lcall sub or outsl cmp xlat mov (bad) mov push xchg ss std or cmp push xlat std or movsl push ret sub insb shrl jp and cmp scas daa cmp sub pop not arpl movsb cmpsb outsl xchg xchg leave cmp inc xor and lahf aad movsl sub dec imul jl lret pushf cwtl dec cwtl pop and dec cs cmp jecxz add pop xor cli pop cmp imul adcl data16 pop push popl cmp xor (bad) imul mov out xor sarb int3 aad lcall sub inc jae mov in ja mov and cmpb shrl out ss pop push dec mov das aas and test xlat jne ja ds (bad) int3 ret push push cmp adc out cmpsl xlat in pop mov inc in adc mov rcrl scas jmp aam adc or (bad) mov test stc in out pop icebp hlt push and add push stc out jns jmp in xor leave daa jl je,pn pusha adc idivl dec adc gs fs call cmc repz pushf jae or mov lret jno test mov scas push aad mov xor dec or out mov xor xlat jo mov mov xchg lret jno jbe mov cli je xchg xor or fs mov xchg stc sub dec lret ljmp daa mov cmp push xor out test out shr push cmp mov stos ret mov ret mov shrl push sbb jl popf mov xchg fsub mov sbb repz jge adc xorl movsl test rep cmpsb addr16 in mov xchg test adc push mov dec in sarl movsb test lods mov out (bad) xlat adc mov sbb mov cmp or (bad) std cmp fidivrl inc call not subb or rorl in (bad) icebp pop push cmp mov mov jns shll push jp adc mov lock aam cs fisttp and test and sbb inc cmp mov push ss mov pop into call in ficomp push push xor or rcl movsl xlat outsb xlat xor jle or movsb in mov ficompl lock mov sbb mov add js push mov sub xchg inc mov jl mov lret inc dec aad jl ss jmp mov test jno insb (bad) jmp push imul enter xchg out xor xor int push les dec mov imul cmp sbb scas les push push je mov sbb cmp mov push xlat xchg fs das popa mov xor add pop jo and dec mov repz cmp adc mov xchg ds xchg icebp cs sbb cmpsb inc pop out inc push cmp (bad) (bad) mov int dec jl (bad) pop and mov pop jl (bad) jno sahf fldl2t lahf sbb and sub cmp in stc cmp push lock add gs imul adc (bad) xlat cld push xor rol pop ljmp push fsubrp add and imul and sub cmp jno loope inc stc test lcall loop xchg fcompl aas mov jb cmpsb xchg xchg xchg jg cmc int stos cmp or aas dec adc push mov cmp stc push pusha cli mov jae fstps repnz cmpsl cmp dec jle sub les dec pop dec sbb push test stc inc in fs push push jno jne flds or and jmp jno push mov movl push sbb or fidivl push lahf hlt mov push mov mov push jae bound idivb out enter cwtl pop cli xchg mov push arpl jne jne cmpsb jnp iret inc test in jns (bad) cmc jae loopne push rcrl daa scas pop cli outsl in sub sub pop stc ds or in cli cmp xor stos cli or or push add es xchg xchg push mov sbb lods jno (bad) jne lcall adc stc icebp test add mov mov or xor mov dec add jge sub cmc sbb mov jae xchg cmp int jo es adc and pop mov ret fsubrl aaa ss stos and mov addr16 xlat (bad) inc jbe mov push jmp scas out es push mov mov pop mov dec enter sub out adc xchg push adc push add jmp or mov mov jns lock hlt push xchg mov push cmp add mov or ret cmpsb adc fdiv dec xor inc push jle in xlat fwait out negb xchg cwtl in daa mov cmp inc popl cmp push rcrl cmp add push sbb dec add sub xor stos aad cmp jns loop lods or nop (bad) inc xchg fcomps call stc add mov sub xchg lret sarl mov sub xorb push fsts jo jp leave and std flds jb out inc jnp f2xm1 lds push inc xchg stc mov aad bound enter out cmp cld not cmc fnstsw out mov cld ror mov cmp je sbb mov push (bad) pop jns fiadd pop out sbb sub and shrl lahf js jo cmp mov pop rcrl xor sub xor cmp adc inc mov repnz ds and (bad) jne ja int sti inc xor jmp mov jne jmp fnstenv stc (bad) cld loop and inc (bad) rclb and push add mov in std mull mov jns aaa sbb cmc out push add es idiv pop inc inc or fisubl push cmp mov idiv push adc ret xchg outsb inc sub add jecxz (bad) sahf push or xchg dec mov int mov add jl es inc movsl mov mov cltd push jg pop xlat addr16 xlat xor test sbb mov xor dec cmp subb imul xor add inc mov ss imulb xor xchg cmp mov mov jl pop inc sbb cmp mov roll sbb js addr16 inc stc cmp sar int sbb pop and aad jmp or sbb pop jmp cmpb cli setne dec push test data16 lcall mov int mov test ret push xorl shrl inc cli insb jae cmp in inc push test rolb or (bad) (bad) jg mov clc xchg dec sar push push pop fpatan xchg test sbb xlat (bad) int outsb push out test jno xchg push data16 inc insl popf fimull shlb sub adc fisttp (bad) stc push lds jae into pop add add add or xor or inc imul jg nop rclb arpl xchg push sbb js dec jmp hlt push subl pop movsb lods addl mov out sbb dec stc in out shrl stc inc push and sub (bad) mov das and gs sbb std jg (bad) or mov repz sti cmp mov (bad) push sbb or mov loop jnp xchg in mov pushf inc push pop std push sbb jle je xor mov (bad) lock aas jne outsl add loop or mov imul dec push out jecxz mov pop xchg imul jne popa cmp push dec aaa outsl sbb aaa test push jo xor sbb ja add jmp and fdivrl lock mov fadds in fmul or (bad) dec or jecxz aad imul push pop jo std lret push adc xchg mov push lds cwtl cmpsb cltd xor push xchg xchg push cld cli xlat out xor lcall iret in clc and and jae out push pushf push sub mov (bad) orl (bad) mov pop push jo pop aad mov sub jge cmp jp pop sbb sahf jae cwtl mov fisub cli jno and or and js stos jecxz jmp mov lret aas sub cmpsl in xlat mov mov push jle data16 (bad) stc add push scas stos cmp or and adc sub das dec sub dec pop and xlat and fcoms inc mov test je cmp fiaddl lret pop leave mov movsb mov imul pop ss jmp jns mov xchg and xchg pusha fstps inc cltd mov (bad) std loope pushf rorb push dec mov out sbb cs push mov (bad) mov cmpsl test sarb mov (bad) dec sbb mov aaa ja (bad) mov xor or test jne leave xor (bad) xlat gs fs mov push imul pushf dec sbb push jp insl adc stos push push xchg (bad) push adc test shrb lret mov loope mov es add out jl rclb dec mov stos inc stos pop fldl cmp je xor sub inc nop dec (bad) shll fcmovbe cmp shrl push push out add jno sub push subl std push push sti push stc push test xchg mov and movsb xor lcall mov adcl dec or jns aas pop jae and jbe xchg enter pop or jg test push sbb xchg pop (bad) dec stos or jge icebp add pushf mov test (bad) xor test add fwait push adc inc dec xor mov (bad) fs mov rclb inc xchg jp pop mov xor dec cli xlat arpl jl push hlt sar out sub cltd cmp test inc pop aas jnp pusha inc sub or nop leave cmp and xlat push decl popf pusha cmc addr16 jno push xor push imul repnz mov lock push rorb push faddl out outsb out mov stc loop adc das add dec stc or icebp insl inc icebp xlat push addr16 xlat rclb icebp icebp sti xor mov mov push mov out mov shrl dec es xchg adc xor jp ret iret cmp test rol jecxz (bad) cmp sub mov push mov into pop push test push dec out mov hlt lea or rorl lret adc sti or cmp loop sahf fmull (bad) xlat (bad) (bad) jg inc jl fist fstps jnp insl inc mov pop inc xlat (bad) push jle xor (bad) dec ret jle xor dec xchg jl imul xchg push repz jb pop inc insl (bad) jbe xor jbe cmp shl cmp pop imul inc (bad) jmp aas dec sub test and cmp les popa xor pusha lods repz enter mov or xchg scas dec daa fnop inc test icebp stc xor loop es jmp imul test push pop xchg aas inc popa cmp popa mov (bad) out or inc popa sarl cs sub hlt arpl nop cmc aam jns push xchg xor rcrl sub stos mov (bad) and insb es cmp xchg stos aas pop ljmp lods mov jo cmp dec and pop push fnstenv into jg pop pop rorl mov mov mov push and xor (bad) and idiv pushf lret mov lock enter es data16 mov jae ret adc addr16 sub adc lret adc nop jb not add mov and sti and adc jmp push xchg jns (bad) sub rcr es jge ret mov loope jae fdecstp enter lcall pop bound jmp out stc fisub shr mov orl jl mov adc jnp (bad) fcmovnb adc or shl mov sbb xor sbb add pop enter mov icebp dec add jae xlat sbb sub popf xor movsl outsl jp mov and roll push sbbb (bad) jmp fcompl jg fcmovnbe nop out sub adc pop jle flds (bad) test (bad) (bad) clc xor ret sbb movsb fist and fnstcw sub push jne movsl xchg cmp or adc sbb mov sarl scas mov inc sbb push aad (bad) out cmpsb movsl subl jmp into repnz jecxz xor cli or xchg imul sbb push push out push sbb pop jmp and jb xchg addr16 xor cmp (bad) jns lods inc test std adc enter jmp inc daa dec rcr cmp and stos sbb pop fnstcw xor push inc aas or xlat cmpsl call aas imul cltd xlat or jmp add pushf xchg fwait dec movsl mov dec out cli stos xchg es xor sbb sub bound out cs inc jg test lods sarb ljmp fs lods imul outsl lahf insb adc stc dec push divl lahf cmovp xchg pop push fdivrs xor mov (bad) mov pop dec push adc fsubr and out (bad) in ret (bad) lret dec (bad) aam push ljmp in push and adc rolb sbb add xchg dec and fstl aaa sarb addr16 mov mov jg push sub pop pop and fmuls imulb push lea add fidivl int3 divl mov inc movsb mov cmp lahf lret jnp push arpl jb add adc mov (bad) mov aas cmc fnstenv scas (bad) cmp incl jp pop cmp std xchg out enter xchg sub mov ss xlat xchg je pop push pop imul jae cli frstor movsl xor sub (bad) or xor add jae nop ljmp mov pop pop or loopne jne xchg sbb push dec lahf xor ljmp xlat nop movsb int3 bound loope stos pop dec adc push lcall repz or push int3 in inc pop mov xlat push das xor lock ret push dec cmc mov push or jno ret sub (bad) aad movsl out sub sti int3 mov mov sbb repnz and sub cs icebp mov jge jbe,pt scas repz push aam push jbe in xchg pop icebp orl and cli (bad) icebp cmc mov mov cli dec or sub cmpsl rcll adcl mov into and jnp movsb or inc xlat roll int3 lea jle sub std and sbb dec push sub pop mov push stc rcrl sbb jle jbe shrl or jp in jo sbb push sbb scas xchg add scas out lock jle (bad) out pop pop mov dec cli lret iret xor fist aas fmuls or fmul mov test ret adc stos je in test ljmp out ss in pop (bad) xlat sbb push or mov (bad) mov lods es xchg xchg lret gs fsubrl out push push lock push sub push xor adcl jo jl aad ljmp pop jbe dec sbb push fsubl mov jnp mov mov fsubrp pop push loope xchg addr16 xchg sbb cwtl mov outsb push insb mov xor (bad) cli cwtl xlat cmp push lcall and jno sbb popl pop xor push (bad) out loope das sub in mov addr16 push pop pusha nop bound out popf sub clc test roll mov and mov inc mov jmp push jle pushf mov adc inc lcall cmc (bad) mov fsubrl push push cmpb fcmovu stos jae xor stos inc fxch or ljmp jae and imul cmpb das xlat addr16 jb jns sub jle fstps add jp cmp clc ds mov mov push test push xchg jp rclb mov pop movsb in (bad) cmp test insb inc scas in lahf mov loope stos xor test rorl fnstenv pop jmp rcll mov test inc xor pop inc or fisubrl stos cmp addr16 adc nop jae adcb dec inc aam mov daa pop add ja adc int dec rcrl sub mov xlat jno aam add sub add jae lahf inc jno shl cmc insl and inc loop sub xchg movsl or xlat pop movsb out mov enter inc cli sbb cmpl stos les add (bad) or pop dec cmp pop sti lret stos push and bound cmp out stos and dec ja popa cltd outsl xchg les add movb hlt lcall mov jge mov xor jge fisubr mov cli icebp push push call jno sbb jl push pop add inc mov xorb fs or stc aas add or push mov mov imul pop pop insb test out pop xor add imul fist (bad) or sub or xchg cli inc push cmp inc or jb and nop test mulb mov push bound idivl out cmp movsl iret ja add pop fstps xchg (bad) shrl xchg fdivrp aaa ret shll clc movb movsl test test mov icebp mov dec aad (bad) pop xchg jns int3 mov jb es cmp jl pop rcr ret out into push adc sub fldt rclb jns fxch pop bound push test lods stos xlat pushf and sub jmp jbe pop enter aas dec dec iret cmp inc add xchg lahf xor jns xchg in xchg lods pop stos xor pop lods fldl jl les lahf dec je mov xor ds inc (bad) jo pop cmp (bad) je add pop (bad) pop push ret pushf (bad) lret dec cmpsl fs ds scas cmp mov dec test icebp push adc mov cmc cmpl aas xchg int3 int repnz add fsts mov (bad) insb sbb or in mov xor sub (bad) mov scas movsb clc lcall int3 or jns dec outsb cld test xchg pop fsubp adc and sbb dec or and pop mov divl fidivr inc mov hlt int3 push dec rcrl dec push fwait xchg ret sbb mov test lock xor out jle (bad) dec je cld fistp enter jg pop nop xor lods adc enter stos in dec pop pop xor sub xchg xor in mov add cmp mov aad (bad) testb jae dec int3 pushf or adcb mov fidivl xlat repnz jge out push xchg sub mov push rol in push jmp jne pop mov lcall mov dec sub jbe fiaddl cmc jo push sub (bad) out icebp xchg std je js mov test outsb out (bad) aaa xor xlat ljmp mov stc jle adc in sti xor ljmp and (bad) jmp push mov aad pop test xchg outsl js adc outsb fidivrl add xlat dec jmp (bad) out fwait cli dec (bad) or ss fcmovu mov (bad) jg sahf pushf or popf (bad) push aaa ljmp fisttp movsl push test mov sub push push cmp in (bad) sbb add and and push mov (bad) mov push cmp push loope fisubr sbb xor out pop cmpb call iret mov or add (bad) ficom cmpsl pop data16 icebp fimull lret jp jae pop mov or cmp stc add icebp jno daa adc in fisttp mov popa (bad) mov inc sub out jno (bad) or or leave push or xchg xor and (bad) imul roll jmp xchg push neg and adc ss and (bad) out sub push cmp xlat cmp dec daa push lcall cmp (bad) int3 xchg and bound mov xchg xor push iret xchg cmp sub sbb pop test mov push or push rcrb gs and push fldt xchg in shll clc pop fwait xchg or ds cmpsb scas xorl pop js shll stc loopne (bad) inc lret push jb loop into subb test repnz std call mov dec xchg or aaa push cmpsl fmuls mov sbb mov ja popf jno inc xchg add adc movsl (bad) cwtl mull add fidiv into jg and movsb fs cwtl subb mov cmp push mov or sbb mov jge xor in and lret mov and cwtl lods call popf add mov push nop dec in and add lods mov ja stos lahf and xlat bound sarl and jecxz jecxz lea xor inc pop jge push xlat test mov jns cmp xor and imul xchg mov sbb mov push mov sub stc cs (bad) fidivr bswap jl mulb fldenv dec in in (bad) stos rcll loopne xchg andl movsb cli push rorb not (bad) in (bad) jnp pushf pop jl cmp sub sbb dec orl mov add add xor cs and sbb mov jp js in cmc or add adcl adc pusha push mov jae jo test inc mov sbb mov pop fiaddl sub into push sub sbb cmp adc and xor dec loope xchg mov dec fisttp jbe pop shrl icebp rcrl aas push sub push fstps ds and aam out ja dec push sbb xchg mov pop lcall nop lahf das pop out (bad) mov (bad) lcall dec jp jo ret xchg pop mov or ja cmp imul dec sub or fcompl ja mov add jecxz xchg fisttpl xlat ljmp mov fisttpll lods andb jecxz fwait lret lret jmp cmp cmpsb fdivrp shlb adc std mov (bad) mov imul es fisubr roll lods out cmpsl in sub xor imul jmp or insl adc push xchg fbstp fldenv or lret out sub xor inc andl xor xor stos popa int3 rcll negb outsl jne add lahf sbb ret dec mov inc stos and pop loope and add ja enter mov pop imul dec pop inc inc jnp xchg shrl pop jns jl in dec loop fistp push and mov push lret int3 adc mov out cmpl bound sarb shrl adc lret cmp push shrb pop adcl fdivl ret sub mov mov icebp sbb and je js cli (bad) xorl jmp sbb inc lret scas (bad) out leave sarb pop cmp mov ds mov add ret xchg cmp mov shrl mov pop insl add push xor or cmpsl sbb in mull push fs xchg mov xchg sbbl ss fcomps (bad) sti push sbb call imul adc xchg sub mov ljmp xchg negb pop or mov shrl mov loope ficomp push dec push cmp add movsb cld mov (bad) rcl nop (bad) mov add add dec sub lret rorl flds jae cmp pop or pop jns xchg and out sbb sub rorb adc rclb in xlat xor orl movsl dec inc adc cmp mov sbb adc and shld push insl xlat das mov lods rcll (bad) mov je mov stos jg (bad) enter jge mov xor rcll icebp push fistp xor xchg mov icebp add popf push jp mov push and dec or imul push insb test scas xor fcoms mov adc push stc and pusha mov adc das lahf sub out movsl mov or xchg mov mov push xchg pop (bad) xor xor enter push mov xlat popa jecxz jp adc int3 cli dec cmp push lock push sub sti xor (bad) les dec shll in je iret iret jmp dec cmp xchg lahf movsl add cld nop stos push out jge repnz lds jbe ret sbb lret cmc add in lret movb pop sarb sti or aam mov lods stc imul cs jne imul push imul push loop pop (bad) mov mov sub cmp (bad) cld into xlat rcrb loope xchg add mov das aam int3 scas dec dec xor lods (bad) jbe (bad) mov mov das das lahf xor mov cli pop roll cmc orl (bad) stc je mov fwait stos jp xchg test out push cmp jbe sub aam imul jmp (bad) mov and push inc cmp sbb xlat subl push dec mov out and xor mov (bad) mov jnp and lds push cmp dec hlt adcb loope mov (bad) in add sbb sarl cmp mov and ljmp dec or mov (bad) (bad) push pop push sbb jae lods lods faddp xor xchg or lret and xchg aam cmp jl fcomi fsubrl jp test push loop arpl aas or lock push push out cmpl jg mov lods fcoms shr jnp pop repnz out mov push add pop fdivr loop push fnstsw mov xor stos loop scas outsb out pop ljmp push movsb add repz mov repnz sbb dec dec roll mov fldenv adc adc mov adc jl and add jne lods jno,pn xchg push jmp ja rol push push xor out mov loopne xlat leave pop mov (bad) das inc mov xor fistpl (bad) jne cld cwtl add cli pop push adc stos xor sub sahf dec cmp pop xor sbb or movl rcrl mov es into xor xor xchg dec push imul or push mov and fidiv push insb and adc push cli push mov sub sub mov adc addr16 subb and repnz mov jp xlat (bad) sbb out lods rcll or cmp ret xchg xchg mov fisubr std dec fadd gs lahf xchg push imul lret ret pop clc rorl mov sbb test sbb (bad) arpl popf push sub pop in and pop shl in push lret rcrb lods pusha rcrl les jge mov xlat les (bad) cmpl mov es xchg mov or add fisubl popa fisub xor dec sub jnp mov (bad) ret pop pop loop mov push xlat in mov push scas xor insl cmp cli cld push outsl mov fildl and loopne mov or push mov jbe mov mov imul xchg popa jb arpl aaa dec cmp adc rorl rcrl nop dec add push dec mov pushf test xor mov arpl test mov lret in xchg movsb sbb out sub xor dec and or xor dec into xchg imul das and outsl push std and push fidiv aam sub sbb jmp stc mov cmp fcoml jl add mov mov inc nop je mov xor iret push popf lea in mov or inc inc jp (bad) ss mov dec xlat lods cmp xchg sbb add mov xchg (bad) jnp fnstenv dec aad and push jg (bad) jl jnp stc arpl daa aaa test push pop push sub gs push jmp xchg pop sbb xchg out cmpsb push push sub int3 or cmpsb shrl xchg imul and ja lods cmc push lds dec or sbb cwtl or fidiv inc cli or sub leave dec cmp neg mov or inc add lret std or aad cmp or xor add jmp pop es xlat repnz cmpsl pushw inc repz lret xor std sbb and negb sub into mov pop movsb or push or data16 (bad) or push movsb push cld movsl lret jecxz dec notb sbb aad sub stc pushf ret xlat lcall jb lds and dec push pusha insb lcall pop push inc jnp mov xchg dec sbb out lret test inc mov dec jecxz ret dec (bad) pop push sub add mov jle enter cmp mov jmp or push add lcall js sbbl mov bound shrb push push stc cmp test mov pop xchg xchg dec cmp (bad) xor jp jp cs mov nop ja push mov into pushl ret cmp cld bound xor iret mov xor in and fnstcw in dec cli sub xlat add mov out xchg add jmp pusha stos and fiadd bound xchg pushf and jno mov cmp jnp pop lods dec aas jne in sub dec xor dec mov mov cmp into cmp mov aas pushf rcl sub inc int loope mov int3 xor ret outsl stos imul test (bad) jbe lds into stc rclb pusha xchg sub and loope dec push bnd pop (bad) arpl sarb inc fsts jp push inc jae mov (bad) in lret dec shll fcompl dec adc xchg (bad) stos (bad) xchg and inc negb mov adc out data16 scas out imul mov push jle lahf and fnop das push xchg scas xchg mov inc sub sub mov je add gs arpl add cmpsl outsl fchs cltd sub add jecxz push mov push push out scas xchg scas xor xor mov roll (bad) fwait sub sahf adc mov xor adc cli mov xchg and test jl aaa es fimul jno inc mov adc rorb sub pop or push mov nop cld fnstcw jp movsl adc dec jb lea push lods fimul loope pop adc mov or pop lock xchg lret aam psubusw das and jae fildl jne push mov inc imul imull push and mov cli inc into xorb cmp movsl loop push sbb push and inc mov jo jp cli add xor (bad) jno fwait xor cmpsb je int cltd mov (bad) lock adc iret mov pshufw (bad) ret mov jge cmp stc cmpb push cli test ja pop data16 sbb push sbb or pop cmpsb dec mov in cld mov push mov dec sub ljmp dec push stos aad cld mov lea lret inc mul pop xchg push and adc nop scas dec cmp lods and dec mov daa push jge and sti and (bad) xlat loopne inc jns ss cli int xchg mov xlat sarb mov aam mov in scas jl xchg fsubrl mov imul stc push xlat push sub cs push dec jnp and test or fs mov cmp cmp push push sbb out in and (bad) or rcrb cwtl and xor popa add fwait rcrb adc in int fidiv push addr16 in sbb jns (bad) pop jb dec mov fldenv cli add out inc cmp xor dec push imul or inc sbb aas sahf mov mov loop push addr16 std pop jne sub popa and inc sbb popa sub push push xor cmp lds in loope je std mov (bad) jno test push dec cli loope sbb mov data16 lret ret cld sub mov data16 sub stc mov jae in mov leave push and (bad) out and inc cmp jp sbb nop aam ss jge cmpsb je mov pop sub shl adc mov js pop mov pop nop jne push and es repnz cmp xorl out xchg out jbe xlat ret (bad) stc sbb hlt xlat shrl xor pop inc call pop (bad) inc pop fldl mov sbb add pop jae es ficom rcrl (bad) call push add imull pop decl int3 sbb push call sub jo or mov stos push xchg mov jnp fsts cmp adcl popf cli dec lret test sub (bad) ss mov mov adc ftst push sti and inc imul xorl ja add inc jbe rcr mov clc iret out adc mov (bad) ret js dec adc dec sub push mov icebp inc mov xlat std iret jnp lret stc call push imul push xchg popf lahf cli int dec ja out rcl sub push pop sbb cmp mov rcrb mov cmp sub test (bad) mov pop dec (bad) mov sbb inc jle push (bad) aas out jnp clc bound sbb mul dec and jp test mov sti dec xor jb mov xchg out sbb (bad) call push or jmp scas and (bad) enter xlat mov loop movsb push dec adc xor push (bad) lcall jl xlat dec das enter dec mov jge outsl jl and and scas push dec xchg iret imul pop ljmp jo test pop out or xchg add stc fsts pop add std jo imul lret addr16 mov jl out xlat add fs loop mov nop stos fist jge loop iret repz xor push xlat jle cmpsl popf xor ja xor cmc shll mov insl (bad) es and inc loopne xchg dec ljmp or inc les cmp aad outsl cltd fcoml xchg scas outsl imul fistp pop jb push sar push enter xlat add pop hlt pop pushf or cmp pop pop js ss pop or push push jb (bad) dec pop ret mov clc imul jmp sbb jge,pt and mov mov xlat stc mov xor cld repz pop sub xlat fistpl jnp push add xchg mov ret data16 stc ret addl fistp outsb xlat imul pop lcall xlat lahf sbb dec (bad) lods mov pop fmulp cmp push stos das pushf ja dec adc je adc scas xchg dec jns divb rol inc popf fdivrp mov jne push jne push out decl cmpb jne sbb movb xchg sub stc push and stos rcll sbb or cwtl daa and dec mov sbb (bad) add ret or push xchg imul cwtl (bad) xor mov xchg cmpsl cld cmp jmp pop jmp xchg roll loopne xlat scas fs lret xchg dec mov add mov cmp enter xchg sbb mov aaa imull paddsb jbe clc stos imul xchg (bad) rol cmp jmp jno xor sub leave lock mov mov jae mov and cld fsub out dec (bad) pop mov fisttp and xor rclb das sbb mov or adc push dec fwait xchg lds inc sti adc mov (bad) (bad) push aaa (bad) popf dec jo lret js stos xchg push mov mov (bad) leave dec mov ljmp and xor and cmpb sub popf push xlat jne pusha fistpl adc dec fist es pop pop lret xlat cltd int loope push add dec adc das cmp scas ss imul push cmp es sar pop xor mov pop aam sub push add pop jbe xchg aas lahf fldcw mov cmp mov xchg mov push mov mov loopne inc or movsl andb out mov testb push add xor sbb test mov mov sti bound mov fsubs adc cmpsl fdivrs sbb fdivrl clc fisttpl and das adc xlat pop jbe nop fdivs daa jo mov sahf jle (bad) jno in adcl push fwait in pop xlat cs push mov out popf fist push sbb push mov lret push pop xchg pop in dec xor insl mov imul ja push adc xchg sub and mov imul inc gs out cwtl mov movsl push xchg or pop jne aad sub out xor mov fmuls mov fwait and pop and adc daa gs inc jl jge jne inc xchg stc jno push cmc pop xor (bad) fisub loope das or sahf adc sti jbe jns lahf mov jp jge push jo pusha bound sbb ficom sub pushf mov mov icebp push sbb mov sub dec push add cmp or push lds jg aad and xor fiadd (bad) (bad) and outsb ss sbb popa inc sbb jge xor push (bad) jle scas mov test fldcw pop xchg mov testb dec or test loop aad push fwait push test xor fdivrl sbb clc sub shrl jne ljmp test push sbb cltd shrl cs fcomp push sub jns popf aaa lret mov mov enter repz dec repz inc jbe bnd or sar and popa or sbb ljmp dec cs mov push aas or and (bad) xor xchg mov scas sti mov lock or jp outsl in cmp dec loope pop xor push daa int pop jns leave xchg and rorl addl nop hlt sbb loope push pushl add cli or ss pop mov inc pop pop push sarl adc push inc pop xchg cs pop rorl lret pop iret add add dec add stc insb rcrl cld lock jmp aaa jge stc xorl jecxz cli jns jbe outsb xchg xlat negb daa sbb insl jge sub adc push push stc push lret cmp or mov fidiv cmp xor loopne movsb mov (bad) imul into cmp pop cmp lea dec sbb sub sub jl ret scas icebp mov xchg test xchg int3 cli roll cltd cmp xlat popa repz test cmpsl push dec ss ja xlat or mov (bad) ds js or xchg fcompl and cmp les and xlat leave adc cmp jp xlat mov inc jge xchg dec push imul and orl push (bad) bound lahf rcll js insb mov and dec iret dec xor dec or pop das adc mov mov sbb and sti fimull cmp mov ljmp dec jb jmp xor js shr rorl lret js jp jmp lea lock fdivrp movsl bound inc fisubr mov mov popa fwait lock pushf lret push testb mov sub imul ljmp adc andl pushf or xor cmp or in or aad ljmp cli fwait rcll addl push jno jp cmp std imul dec or add push jg xor lods test in or cld jl stc dec outsl jno hlt (bad) pop pop fwait xor repnz xlat scas dec rcl leave dec push mov inc and fisub xor and push inc dec adc inc push mov fsubrl scas rcrb cwtl sbb out cli hlt mov push iret ds scas jo out data16 push xchg add loope pop (bad) das (bad) cmp or roll movsl mov std in mov xchg fidivr mov sbb (bad) xor pop clc sub clc cld xor outsb flds icebp arpl dec shr out mov imul imul dec push or inc xchg rcll xor into xchg fcoms pop data16 jnp pop (bad) int3 mov rolb ret xlat std loopne imul out add mov cwtl fwait rcll push test movsb sub ds lret inc dec pop dec aas shr cmp aaa or push push lods mov ja (bad) xchg xlat mov and aas push enter mov jno xor jge add stos repz push fs (bad) jg adc fdivl jbe push mov fsubrl push lea imul cmp imul imulb or dec fcoml mov iret push imul xchg daa push or fisubl mov add dec inc push cmpsb stc and lds xor call mov pop pop fldlg2 sub in push mov ds imul add pop repnz (bad) and mov jb es notb sub shl rorl inc jl dec or cmp mov cmp adc popl push adc popf and loope push xorl aad pop into rol shr sti cmp cmpsl cld aaa add push stos fnstcw push xlat cmc push xor int push imul pusha adc std cmp lods popa (bad) lahf inc mov (bad) dec leave ja inc lcall outsl sarl out out popa pop les dec mov push js xchg mov (bad) xor xor in inc out mov cmp (bad) sbb cmp mov push sbb cmp and adc neg push sbb scas cltd pop (bad) push xlat (bad) nop push sub decb mov push and xlat gs inc jp dec jbe ja jecxz lea lcall jmp aad sbb cld mov sbb (bad) and pop inc push push jg hlt mov jnp inc dec fs sub dec pop xchg es xor imul and and sub test cmpsl into js fldt sub dec mov sbb out out push imul and xchg push stc jecxz lahf outsl dec jp js dec sbb faddp xchg or mov xor lcall scas in loope,pn es or xor pop shr dec push push cld dec test dec push mov sbb lret pop std dec xchg ficom push rorl mov test mov call cli sti sub xchg out mov out cmp jg mov std sti pop dec and pop into jl and jno fnstenv arpl xchg test push addl lds enter lods lret test and push imul cltd pop xor mov test pusha test inc loope and xlat pop push sbb pop ret xor fcmove add popa jge push int3 cmpsl sbb adc ljmp shrl mov jge,pn pushf rcll pop aaa cmp jno lock out add mov lahf dec btr push cmpsl test xchg outsl push inc push push sub cmpsb xor stc lahf sar and jo ja stos jmp push fxch cld aam pop in imul sub pop insb add mov mov ret jmp jmp push xchg pop addr16 mov mov fnstcw (bad) fadds jge xchg sub test dec movsb sbb std mov xor add jecxz (bad) leave aaa inc mov jae mov mov jp xchg xor lea sub mov movsb inc hlt int mov std inc out notb pop or jb stc and ret in shrl in cmp pop inc fs mov push dec mov fimull sbb or lret in add test and out xchg inc xchg and cmp movsl push add (bad) je or jne and xor ss rcll add loopne inc repnz xlat sahf pop and int xor mov sbb (bad) jae hlt mov sub adc xlat mov adc push xchg movsb mov fbld aas cmp pop loop roll stos jo or cmp pop fiadd pop mov dec notl push (bad) enter mov mov jl aad enter pop (bad) dec in out sbb test jmp pop (bad) icebp cmp dec dec mov dec add rclb dec loope or mov mov mov xor pop (bad) push xlat add fwait or xor push adc test jge push sbb out mov jp (bad) mov dec push pop stc fcmovnbe (bad) outsb add mov jmp ljmp push adc dec inc mov dec sbb xor pop adc push popf hlt (bad) xlat add cltd sarb xor lock imul inc mov cs mov inc test inc jp fldenv icebp fsubrs clc inc cmp leave popa xor pop inc mov cmc (bad) scas in sub sub insl xchg dec into repnz and dec loop ljmp dec int mov mov push into ficom ret int3 xorl or imul popf dec inc adc clc mov dec jno jl fucomip xor rorl ret pop sbbl push divb (bad) ss imul les and dec mov enter sbb or xchg dec insb cmpb test cli repnz pop sub push cmp aas add (bad) scas movsl jge adc popa out cmc in leave leave cld hlt sahf loop call out xlat push xchg iret shll cmp push scas cmp mov lock ret adc rolb xor mov mov and lods fldcw mov dec nop mov fldenv insb mov cld sti mov dec rcll in cmp xor mov push xlat pop je sub fsts aam pop push fcmovne xchg cmpsb add dec cmp dec std dec xor (bad) out xchg fadds jae aas pop sbb imul lret push (bad) jge mov mov (bad) (bad) mov (bad) push repnz xlat xchg or jl rcl sub xchg dec fdivr push and aad lret cmc jae dec stos pop pop mov push push push sub lods sahf repz roll aam mov jge jg (bad) mov (bad) not (bad) mov mov cmp fmull popa outsl pop shl pusha repnz imul das xlat std mov pushf ja (bad) xlat add mov cmp cmp test and xor scas fadds sarl lret jecxz cltd sbb loope rcr jmp lret shrb outsb fstps cmpsb mov and imul add mov imul mov imul int3 inc iret xor or jge popf scas mov jne inc (bad) sub test test pop rclb xchg dec push (bad) in sbb lret mov ljmp mov lahf xor pop (bad) cmp or aaa push addl pop mov sahf push out cmp sub fisttp adc sub call push stos test mov scas sarl add divl scas mov iret sub cmpsl fsub pop fcoml cltd movsb inc sbb loope mov clc xor inc cli jmp jecxz jns push test dec cld dec add pop add pop gs sbb xchg jnp fsts adc xchg jecxz stc fwait and insb mov xchg sbbl ja in ficom gs mov cld mov push mov sbb adc cli jp mov test add sub inc dec repnz das xlat adc enter mov push roll cmp add jnp or sbb test add pop pop xor jg fcoml sub mov cmp sub cs mov daa lcall xchg mov cli push dec iret out mov xlat jno mov jge cmp xchg pushf pop add lock xor xor (bad) ficom jnp sbb jb (bad) mov repnz clc cmp sbb cmc es mov fsubp pop jp das or mov mov xchg outsb das jge cwtl shlb xchg sub ja aam inc cmp stc xchg out das jne xlat or pop int cmp loopne xor and mov pop test mov into push dec pop cli pushf sbb mov out fistp fwait mov push adc cli fldl xlat mov cwtl sub ja aaa xor test cwtl xchg push mov pop stos cltd add dec mov fnop fmull adc xlat enter adcb inc cmp push cli fsts addr16 out ljmp fnstsw fs jae xor mov addr16 sbb mov push jmp push xor push nop inc mov imul (bad) jmp mov jo ja and sar fwait adc lds jecxz jmp sub stc jbe arpl pop mov sti pop rorb cld push jg imul fchs adc inc push xor mov imul dec ja sub stos sar jmp scas mov push adc and sbb xchg fldenv mov jl add xchg and mov dec sti fist sarl sbb repnz movsl cmp sar xchg (bad) jbe and sbb test add sub mov fstps pop fwait into xlat mov cmpsl push gs mov ds enter stos movsl js imul jae (bad) into fsubrp (bad) fs xchg ja xor sar sti push jp loop xchg data16 push xor fs ljmp repz (bad) sti lcall jns lods mov and sarl mov scas lret fldenv push fisttpl inc xchg xchg mov dec shr and or test mov insl rolb loope jns jns test aaa cwtl out adc pop test jns mov (bad) mov and mov jle jnp dec sbb push rcrl inc aad fs sbb mov mov into push inc imul push repnz cli movsl cmp lret ror push pop pop pop dec push iret cmp mov movsb xor cmp mov notb sub push into mov cmc add and mov push adc cwtl push (bad) xor add std mov xor in dec (bad) in sub icebp pop cmp mov stos fisttp and adc push mov std sbb (bad) mov dec push or push or and or jno dec (bad) xlat push cmp int3 xor push mov sbb pslld pop stc add stc mov sub xor push (bad) pop loop mov push push loope push repnz or addr16 shll inc adc ss insl mov mov mov cmpb or scas aam test lods dec mov fisubr inc mov mov std dec mov push cmpsb ss jnp inc and stc (bad) sti xor lret cmp sub je arpl loopne dec or mov repz lret cmp iret inc adc push jno sbb sub pop jl repnz int pop gs imul sbb sbb out (bad) mov pop repnz dec lret push mov mov loopne jnp fisubl into rorl test push call inc cltd cltd pop pop sub out mov cli sub (bad) jl lods mov cli lods ja pop jp mov xchg lock es aam outsb sub mov pusha inc inc stc enter pushf imul push call push xchg add fistpll icebp and jne test adc out jge push jo or scas test mov mov scas pop sahf push pop lods and and mov mov cmp aad (bad) xor pushf adc cli cmp sbb jno sbb cwtl cwtl dec fisub imul push rcr inc adc jp adc cmp cltd cmp inc sub leave (bad) dec mov mov push sarl imul sub pop push inc rorb outsb cld xlat jae movsl stc ret out cmp pusha add sbb in jge inc jo jl jge push repnz and xchg iret or stc fsubl jmp push xor jl (bad) mov jmp pop orb ret lock fwait jne mov (bad) push je sarb int pusha dec mov addr16 (bad) mov lret stc cmp adc test sub add xchg mov iret fcoml push dec push xor (bad) mov in mov push lea cwtl and aam rcrl mov js push push jnp mov sub xlat jbe fs dec add std orl mov fidivr jp pop pop pop or adc out (bad) stc or push xor movsb dec in (bad) xor lret imul jp mov add scas inc jnp fnstcw jae loope test push mov notl cltd add sub test (bad) imul lds xor ljmp fstl xchg or sahf pop aas (bad) js add aas inc fnstenv ss dec jle push inc jg cld dec xchg fscale outsb and and adc jns sub repz (bad) cld repnz jl loope inc sbb mov dec mov sub jo pop or adc push mov sarl mov test jns jecxz push jnp (bad) push (bad) dec stos cmpsl icebp rolb gs dec push jb cmp pop iret mov mov cmp or adc jge nop aas xlat mov mov push push out fdivrs xor pmulhw cli xchg adc ljmp in cmp in jge cmp or dec push add dec es test mov xor mov or (bad) xor push shl jo jp sub cld pushl push out or clc cmpsb mov loope fst bswap xor sub pop je adc pop mov dec loopne mov ret inc pop ds lret inc out cmp push xchg cmp lahf je or imul aas inc loop sbb xor push or addr16 dec insb lock jp test pop (bad) or mov pop clc mov cld mov push add push ds and pop push sub mov into ljmp mov jecxz imul (bad) fisubr jne arpl jp or add sbb mov (bad) sbb cmp inc paddq push push sbb push lcall out xor lods jo sub sub (bad) sub insb notb mov outsl aaa and xlat imulb cmpsl push mov adc push mov scas leave xchg repnz and pop jnp adc rorl aas jne pushf iret jge fsubrl inc jnp push inc push cli cmpsb pop lret sbb adc js mov mov jl dec mov xor fistp (bad) int rcrb outsl fstps sub jae mov lea push add push roll jmp int jmp mov test fisub adc push and clc into or push inc cli ja in mov cmp push mov lds mov aas test push lods pop or and popa or sub repnz adc jb out xlat cmp push sub cld daa rorb or jnp lret push mov int3 inc rcll adc fidivl add (bad) jno jecxz mov out outsb push mov push insl mov or and cmp sub (bad) out sahf imul jmp dec dec (bad) gs or mov xchg or xor and cmp jl dec scas in add in pushf pusha (bad) cmc push inc sub xlat pop cmp stos mov (bad) cmpsl mov dec push insl push xlat aas sub loop js pop in mov lret push faddl fist aam sub neg lahf loope pop push push jnp std rorl rcrl ljmp out jle das dec adc sub mov jnp (bad) dec inc adc fcoml adc pop cwtl mov and data16 xor push cli mov (bad) xchg inc mov adcb loop jne mov and js stos xlat int3 movl fistl loop mov ss xchg sub cmp in push cli mov call into push iret imul adc xchg stos xchg sub stc inc out mov std sub sbb xor mov imul push addr16 xchg xor into add jae xchg fsts xchg ds fcompl mov mov pop push les sub and mov arpl aas sub pop in mov pop cmp imul movsl adc dec dec stc frstor idiv rcr xchg jmp lretw mov mov inc (bad) mov dec mov jnp cmp mov mov adc mov iret not add xor mov (bad) xchg mov cwtl cmp adc aam jno movsb cmp in cmp inc and or cmp ret js lret and xchg xlat ret lods push add in lret rcll (bad) jge inc jne and imul arpl dec jl lret shl xlat fstpt fsts cmp jae mov pop nop and jge ds int3 add push shr cmp icebp movsb mov dec mov mov int loopne push sub jae (bad) mov and icebp inc jae inc dec jo pop adc and xor ja fldenv insl jne mov repz cmp pop dec push pop cmpsl xchg pop pop lret xchg (bad) out (bad) ss sbb movsl insb sbb fsubl xchg (bad) mov push sar lock add jne xlat aas (bad) jmp into pop addr16 jecxz and xor xchg shlb push aas mov mov ffree xlat aam xor sub ret push inc jb pop jns push jae lods inc ja jbe sti jno test push mov mov dec ret repz movsl andl push mov das fisubl adc stos ljmp in pop inc ja or fsubl popf xor notb sub pop stc cwtl sub mov adc xor pop add leave adc clc jo dec fnstcw movsl lock cmp es xor andb (bad) stc push inc mov pop mov and popf addr16 hlt in leave les loopne repz jle cs cmp data16 dec andb ss ror shrb add test je push scas xchg nop mov stos jle loopne ss (bad) jbe scas ljmp lret mov cmc dec or mov jb push sbb nopl push jp mov jae sarl (bad) mov push xlat push verw mov and push imul js push or xchg xlat or and ja jae mov mov dec lret sub rcrl lret sbb bound cmp and xchg call shl push sub or adc push repnz xor cmp pop sub dec in iret loop mov mov jbe xor dec push dec jae inc mov aam xchg xor cmc adc mov imul xor inc adc bnd inc push xlat adc pop lcall fs sbb lret xor pop add jecxz incl sub mull or and mov push mov adc xor pop lcall outsl jo loope arpl pop loop cld mov and xor into jecxz outsl loopne inc dec cwtl adc mov repnz and fs dec cmp scas es xlat mov mov outsl ljmp pop add cmpsl xor jb mov test test aad inc inc movsb cmp shl enter sahf rcll fwait jns shrb or xchg stc mov sti xor imull mov ss add cli mov cwtl aam adc lret pop dec outsb pop rolb dec sahf pop add push shrl mov inc subb xlat je fcomp xor lock movsl mov imul imul in popf inc mov dec and in or push test in mov ficom or (bad) jno ljmp cmpsb add xorl loop inc ret xor lds jecxz jecxz insb add dec shrl js mov adc (bad) mov adc movsl sub fisttpll int3 cwtl fucomip cmp imul xor xlat adc (bad) dec sbb xchg lret (bad) imul push rcrl push rcrb xchg popf pushf dec sbb pop xchg add inc movsb xchg cmp data16 arpl cmp sbb ss arpl xchg aad das push xchg nop inc and adc push mov xor pop mov icebp dec inc test data16 lock mov mov sbb jge cltd xchg pushf xchg stc dec lar sub dec fbld call xlat xor ficoml dec push aam movsl inc or or fidiv inc dec inc pop shll push lret jl orl aam sub jp mov imul cld mov imul jnp fnstenv xor jle adc and mov or adc aas cmp push ljmp dec call imul cs out loope or cwtl mov fldl jl inc mov in fidivr mov adcl jl dec push mov adc jb inc rcrl icebp pop xlat fistp shrl dec pop push lret and enter pop push mov mov fs test push (bad) dec mov cli push in and js add xor inc scas pop jns lcall shll out adc enter outsl das xor loope sarl nop inc mov out xlat mov imul movsb xchg cmp into xor pop adc xor pop nop jne clc sub lret shl cmp arpl push jns jp roll mov aam ficom mov xor repz outsl xchg xor in lods arpl jp es (bad) cmp ljmp das sub jo ljmp loope mov stc mov adc rcr pushf xor jp xor inc cmp add jmp bound mov push mov outsl xlat in lcall subl mov mov jae js repz stc push pop testl ja cmp dec push jl xchg pop test in mov jecxz js stc pushf dec jnp (bad) inc dec push lods cmp imul and pop aad nop ss sub in call jae data16 push or sbb pop lcall shll adc rorl or mov xor sbbl jno sub (bad) cmc ja adc or dec xlat stos xor inc mov movl cmp in pusha idiv (bad) std jp (bad) or fsub and cmp test (bad) and xchg insl push (bad) fst ja xchg mov mov push hlt xor sti mov xchg xchg es cmpsl and xchg out or and sub data16 sub arpl dec mov iret push inc lock mov out cmp jmp cs mov rcll lods cmp (bad) ja sti sub stc jle (bad) sub mov add mov aaa pushf insl ds mov lock in es push icebp lds lods stos push xlat mov iret adc sbbb (bad) in inc mov fistp xlat push mov mov xlat call jecxz test mov jns xchg mov popf std xlat mov lock and add jge mov sar sub stos cltd insb sbb sti ljmp adc test imul push xchg mov (bad) push es cmp nop sbb out repz cmc jmp mov cwtl cltd mov imul lock fildl mov aaa lret movsl xor sbb fwait pop and cmp xchg adc fcmovbe (bad) outsb push sbbb fdivr incl push xorl xchg ret mov adc add and fabs sub pop xchg sub iret xor int3 incl inc mov cmpsb pop movsl mov mov dec add add ljmp sub dec mov cmp sbb movsb adc (bad) push jae (bad) pop repnz push push lock adc movsb arpl test call js or push ret shll push cmp mov pop jb dec and mov movsl arpl pop lods hlt jge jge scas out lret cwtl jo pop mov imul dec into int idiv cmp imul sbb mov push roll fwait add cltd fs adc xchg stos fildll cli lock push xor sbb (bad) lret stc sub rcr push xor push fadd scas popf push mov sub scas sbb dec pop adc push xor into lcall rcll icebp push movsl pusha (bad) aaa sub xor jge dec call jmp cltd sti add div in xor sahf add and sub negb xor mov out xor mov imul in mov into inc xchg sbb inc cli and or (bad) jp cmp test jl leave jp enterw es push cli movsb lcall xor adc mov sub sarb cmp divb dec and shl mov mov in sbb sbb mov cltd and jo cmp rcl pop dec mov cmc out cli xlat adc xor inc mov sub test jg lahf xor aaa int adc mov stc mov cmp aam cwtl xchg dec repz mov sub lcall in cld mov je pop cltd pop clc inc bswap mov pop ja inc lret dec pop fild sbb push push mov xorl add sub dec das add ss xor enter addr16 sbb xchg (bad) lock fpatan mov scas bound push js add add fldcw movsl int3 mov fldenv cltd sbb (bad) jecxz sub mov inc lret insl xlat jb ja daa or mov xor push and daa out pusha (bad) lret sub inc fdivl jl les daa and loope sbb mov das (bad) int push (bad) arpl dec inc and mov dec cmpb pop push jbe push shrb bnd cli mov pop xchg fsts sbb out xchg icebp movsb adc repnz leave fwait push xlat inc push pop inc xchg cmp mov call inc (bad) ss aas inc cmpsl xchg outsl dec add adc sbb mov jno cmp cltd sbb rolb in lret pop dec test sub stos push popa mov jge adc cld mov (bad) mov sbb and sbb scas xor jne (bad) xor out sbb addr16 jne jnp leave mov mov pusha mov (bad) mov sbb bound sbbl sbb xchg dec inc or mov xchg shrb push jecxz inc adc sbb es inc jns mov and push jmp repz stos cmpsl imul push das inc pop orl push clc (bad) stos sti dec pop or mov xor jnp push inc dec and push mov and xorl orl test sub aaa inc lcall mov ror push push test fs out and jbe xchg jecxz mov adc lods sbb mov movsl pop imul sbb inc push leave cmp xor jb mov jb push sti pop xchg dec cmp (bad) or xlat mov jno stos adc sahf inc pop mov mov gs xlat sub pop sub mov jae dec sbb push adc cmp dec stc jae fnstenv adc sub and mov cmpsl leave xorl pop dec mov mov inc cmp test stc ror std adc je lods arpl js (bad) in addr16 mov shl incl jmp sbb sub clc lea sub fwait sbb sbb mov dec or out and mov scas stos arpl ja xlat sar dec adc mov daa fldl flds movsb add lea xchg mov jl jbe ret insb loope dec ljmp push clc fsubl xor stc fldcw data16 loope adc lods mov cmc jg push dec jno mov ja adc data16 stos idivl out shl mov fnstenv inc mov daa sbb ja or popa data16 enter roll cld adc fistl loopne ds dec insb shrl mov mov stos iret mov jno dec rol sub cltd lret add cli xchg cld or les push xor xchg adc mov dec sbb negl push or jecxz insb ss notl xchg mov cmpsb push push mov and jae mov test add mov lods xor add cltd dec mov enter into or cmp hlt flds xchg push aad mov cwtl lock js mov push or gs mov scas sbb push pop add xchg sti in jo xchg jp out push jnp sbb gs cmp jge push fwait into pushf mov sub icebp mov rcll (bad) loope jns adc pop jle mov xlat or stc mov stos movsl fwait sub stos dec dec mov outsl and xor mov es hlt sbb mov xlat xor push (bad) cmpsl cld or out sub (bad) xor push imul fcmovbe iret hlt xor rorl adc jecxz sub rorl jmp lcall in cmpsl push mov pop xchg pop xlat aam lock mov sbb mov jne dec pop jo xchg inc (bad) subl or xlat mov outsl push xor andb popa dec shlb dec int3 cmpsb or jp loope xor pusha and in jno faddl sar jbe or cmpsl xor and push pop pop (bad) aaa inc mov dec pop xchg (bad) mov fisub push jne (bad) mov pop arpl cli aam adc lcall js mov call in cmp xchg and icebp pusha pop push scas hlt add or jmp out cmp mov xchg arpl pop pop in sbb cmpsb push pushf dec mov mov divl cwtl inc rorb lods sub jecxz fldln2 cmc xchg jmp mov mov pop mov out lods outsl xlat push lahf ljmp (bad) cltd dec cmpsl fisubrl fist sbbb ja mov add xchg das rorl imull jns or cmc aam sti mov cmpsl push enter sub shl mov scas xchg out aad pop fstps mov (bad) dec ds loope mov cmp cli int mov or push sub pop mov js add cmpl cmp andl rorl jg inc out out scas (bad) in inc mov iret repnz nop add fs scas enter movsb pop push pop arpl loope dec jnp inc shlb loop dec out mov in dec dec ret mov sahf gs jmp push movsb xchg sarb add xor cmp jno aaa xchg (bad) mov push daa ja mov lock xor push fsubs js sub mov jo pop cmp imul rorb xlat xor (bad) jg loop xor imul pushf xchg jmp and rcll aas and cmpsb cmp pushf xor (bad) mov icebp pushf cmp cli pop into or inc aad push fnstsw imul xchg add lcall stc mov pop jns int3 imul xor (bad) fimul xlat leave push and pop mov fiaddl out sub add mov int loopne mov mov sbb xlat xchg hlt (bad) and mov ficom fldenv fisub call add mov mov popl adc into mov fcmovnb and notb mov xor in je loop and aam mov ss mov iret imulb cwtl mov pop xlat andb xor repz test adc bound add mov sbb pop repz jge sti push outsl push push jo sub rcll cmp pusha xchg jmp xchg inc dec ret push xor inc cmp or mov and (bad) jl int xor loop hlt and (bad) cli jg mov not out (bad) xor adc pushf and insl or test dec push out fnstsw pushf mov loope and rcr mov lcall pusha mov jns aas fstps cwtl (bad) xor add jbe aam adc sub pop cmc shrl cmp cmpsl loop jp cmp wrmsr into xor shl out pop cmp (bad) adc pop fildl sbb push and es jne scas jnp fcomi cmp sub or xchg popf mov in mov movsb xor xlat pop enter daa sub out mov (bad) mov mov pop xor int mov push xchg dec mov xchg xorl dec (bad) out lret xor stos imul (bad) nop repnz and pop movsb aaa lds mov mov mov add in pop or lret add xchg jmp adc add mov ret out mov lret mov lret inc mov or cld movsl xchg jle pop mov movsl das imulb insl incl aad cmp inc and in shll cmpsb pop stc pop pop (bad) mov mov xchg dec xor jno jo dec (bad) rcrl leave adc stc loope dec dec (bad) add or inc dec sub dec cwtl in push ret fstpl add xor sbb aad outsb notb jae repz lds dec jg mov cmpsb mov cld xlat xchg inc stos xchg popa ds ljmp mov int3 mov xor adc cltd out jg (bad) movsl dec clc push pop ja sbb shrl (bad) xor imul mov push ljmp (bad) xor pusha cmp pop icebp enter cwtl and xchg push cli cmp jbe jecxz jmp call add ja sbb lret or repnz ss cmp cmc daa repz ja sarl ljmp test int3 mov sbb loope ficomp xchg mov in mov dec dec sbb inc stc xor out daa lods dec ja jno shr sub add (bad) sar sarl std ljmp and sti jmp xchg (bad) or das sbb sbb push cmp pop imul int3 xor jg test sahf aaa sbbb out mov imul daa fdivrl xor ja fldl2e push sub xor add pop cmpb in nop int3 sbb or shrb sub mov jne pop nop mov push test pinsrw insb sbb or xor sub icebp adcb popa xlat int3 pusha ret out push xchg dec loopne pop push jmp xor jb push jl mov pop adc push fisubr call imul lds into lea mov in movsl ds or dec push int pop pop mov jg imul mov stos aaa rorl test inc adcb mov pop inc xor mov sub movb (bad) mulb aas adc lods ret gs jns dec xchg rol lods cld push out push xor mov faddp lahf aas bound push imul mov sbb mov outsl repnz leave jno idivb mov push stos mov (bad) push jp cmpsl push jo in nop dec push mov out mov push js (bad) mov shrl inc adc aam adc das jmp pushl jae lret push jle dec inc jg push cmc gs shr pop xlat ljmp lahf mov xor enter sub pop mov inc sbb (bad) pop gs jp fwait push sub imul ljmp xlat xor leave lahf je mov cltd cmp out inc clc mov das test out cs std sub sbb xlat and xchg in aas lahf daa xor cltd movsl aam jmp pop dec and fiadd jae pop dec shrb in rcrl fsts mov xorps xchg or xor stc loop mov test lds test adc (bad) xor sub mov arpl xchg dec cmpsl jno repz lock sbb imul (bad) adc or das pop mov xchg and jmp mov push call lret stos insb sub clc adc (bad) or lea push cmp push add pop jg cld out mov out idivb mov pushf xchg jb mulb cmp in stc ja (bad) push jmp or fnstcw pop sbb movb xor and and jecxz jns (bad) jbe lahf cmp rcrl mov xlat cmpsb inc adc int3 fbld mulb ds dec jo in in sbb aas outsl jne mov mov sub je sub push out mov jo rcr aam es (bad) in pusha mov (bad) insb xlat les in mov jno add fsincos lock js les nop add test push test rcrl stc xchg jp mov mov and arpl and fiadd cmpsb out int3 test jae call dec sbb (bad) xor nop in mov das int cmc ret push jmp push add cltd sahf (bad) call imul leave push sarl das xlat cli jne stc and dec xor es mov mov test jo mov imul roll mov pop adc test movsl pop jg (bad) mov mov (bad) inc ret add adc enter push movsb inc (bad) mov mov cmpl pop xor jnp test jo stc mov insb push ds jnp or xor pop jnp mov stc adc dec push test lcall adc or or inc daa cwtl cmp js mov or les push sub jnp insb (bad) sub and push daa ficoml push push inc or mov jns pop lret lret pop rcll test jo clc xchg popf jnp push pop js test sarl pop jns pop jb pop pushf mov test jnp repz (bad) ljmp jnp or daa sbb addr16 fstpt je mov jnp outsl ret addr16 in add fsubrs jnp push data16 inc pop sbb mov negl sub xlat or jle xchg jo outsl cmp jo arpl add inc or sub sahf mov jnp adc dec divb fisubr sbb pop ja xor jp sub dec scas test loopne ja sub dec out cmp fldcw xlat sbb adc aaa (bad) or imul jnp jo js push orb je add outsl ja pop enter pop xchg std push addl jnp pop ljmp fbstp (bad) daa sbb divb add outsl pop jo xchg cmp arpl imul decl jae fcomps leave cmp popaw jnp (bad) (bad) repz jo jns mov in inc imul loope or mov jb jae cmp cmp jp popf aad jecxz sbb into ljmp imul fidivr or xor jnp outsl dec clc out and stc jmp mov push push dec pop pop dec pop xor pop pop or and js xor sbb pop jo notl js std (bad) cmc jne jnp pop (bad) imul ljmp ja push adc out jnp cli daa sbb loopne imul mov pop ja add test fild push int and jae (bad) mov aaa sub cmp (bad) lea cmp jp and jns inc out (bad) loop fcompl aad sbb or adcl ljmp and dec jae xlat xor inc or cmc rorb push imul popa or cmp and push aas push sbb fdivr decb add leave movsb test inc jo mov lret jae (bad) cmc mov loop enter mov test or je add ljmp roll sbb or cmp inc adc decb pop sub imull jnp and push jae cwtl adc pop add inc clc mov or jne pop cmp pusha je stc into (bad) push pop test mov xchg jg fbstp leave bound enter and jnp pop ljmp mov orl pop mov insl push lahf jnp fsts mov mov dec (bad) gs jnp or jae pop adc jnp stos add fldl jnp pop icebp mov jnp jmp aad xchg jae jnp dec fimul cmp inc xchg jnp sbb cmpl inc jnp push add pop shrb sub mov addr16 pop sti jnp xor xchg add push cmpl push jnp inc cmc pop lds jnp (bad) xchg int jp test mov mov lods jle scas loopne adcb fcoms repz dec pop leave jnp bound xor (bad) inc fcmovnu jns jl mov jnp lods rolb jp sbbl jnp pop mov or mov xor push sub inc test and push (bad) pop sub mov pop stos iret jl and jnp jg sbb cmp jnp xchg aaa repz roll cli mov icebp in mov jnp imul sub mulb fidivr clc cmp adc dec dec imul cli test mov dec sbb or inc shrb (bad) out pop movb jmp jnp ds mov clc lods xor test and xchg aam test scas jp sti je jnp push add popa pop rep cmp cmp nop ficom add inc cmp loopne push inc out jnp pop lods cmpsb jb cmpsl jnp scas jp xchg test fisttpl or out sbb lods lcall pushf sbb ret das add push gs cmp jg push pop repz push addl rolb pop jnp ret cs cli xchg aas lret mov cmpl push jae fildl jnp inc std cli jb ja pop les aad jnp push jp cmp into mov fiaddl mov jg sahf cmp rcr xchg xor mov jne xor jecxz movsb xchg aas sbbl xor ja xor fimul jnp cmp in mov out imul movsb mov cli fildl and inc xor fxch jns pop imul sti (bad) jp mov ficompl adc repnz adc imul mov das repz flds rcrl mov insl xchg out jnp addr16 jbe inc pop ss pop mov push jno jg jnp (bad) push es mov ja xor inc cld push pop xlat ja cmp (bad) jnp or pop xchg mov cmp cmp dec add cmp out fwait adc out jmp ret xchg cmp pop lods pop push push jp dec addr16 or movsb iret fidivl (bad) cmp push cmc sbb cmpb pusha jns and insb push push inc fs or cmpsb outsb jns mov add push movsl test mov (bad) ja aaa mov mov sbb cmp out ljmp jp mov cmp rep inc jbe inc xchg mov jnp push and mov xchg pop ljmp lcall scas jns nop popa push fistpll jp aas movsl jbe sbb cmp inc pop pop sbb (bad) jnp (bad) je ret insl (bad) jnp mov mov test mov (bad) lods push and fistpll (bad) jbe mov or add dec mov pop cmpb adc push pop cmp cli add jg and xchg inc jnp dec inc cmpsb repnz xchg jbe jnp fisub add jnp pop mov fldt dec incb ret and jae xchg (bad) jne cmp sti inc push imul mov add mov icebp cmc bound xchg push jnp xlat jmp into xchg dec (bad) jae inc fidivr mull cli push ljmp in inc mov movsb fadds aas sbb (bad) ret xchg mov jp or les icebp jl pop cmpsl inc jae test stos mov fldt and movl movsl popa jecxz call dec inc mov int3 sbb pop fisttpl mov cmp sahf cmp cmc adc mov or mov inc jbe movsl cmp cmpsb ds or in popf jns pop fisttpl jnp aaa loopne stos lods pop inc jnp cmp mov insl pop jmp dec inc (bad) gs xor imul jnp inc pop mov iret int scas movsb xchg inc push mov jnp arpl mov in cmpl xchg mov jnp push fs jns aas xchg jb mov push mov outsl sar mov shrl movsb and lods mov push cmp mov jle mov cli fldt pusha jb and in outsb pop jnp mov lahf and mov inc pop imul loope lret push int3 ret insl pop repnz dec cltd sbb dec cmp mov ja loope xchg and cmp lods push fmuls sbb ds xor push in aam repz push (bad) in inc and cli out push xor add scas push ficom inc aaa gs cli int mov jp push loop inc movsb jnp pop inc aas pushf push jne sbb aad adcl jb pop sub das and idivb cwtl mov xchg (bad) test xchg movb stos movsb ficompl add outsl push xchg aam mov fistl loope jp dec mov ja dec jnp nop cmc and add rcll cld repnz xchg pop pop inc push nop fsubs pop sub inc (bad) nop aas popf dec cmp cmp xorl fsubl push add (bad) xchg inc fs dec sub jg xchg adc adc insb mov cli sbb pop push push push sub sub xchg or dec insl pop lea add jno push mov and int3 ret sbb mov or push add aaa mov xor xchg clc js inc push xchg sbb cli add or xchg test gs pop (bad) adc push movsb pop daa dec dec sbb ret jle push loop push add fisub inc push adc cli in cwtl (bad) jae into dec mov es mov mov daa or sbb push cld repnz pop xor (bad) sbb int3 mov aad rclb dec int jge mov inc jmp and mov mov out movsb jo sti cmp mov mov jle adc push fsubr mov and out popa ret aas fmull push jecxz insb sub inc outsb test les jl jmp push int cmp pop xchg out aad xor adc inc fistp imul scas es fimull inc test add aas xchg cmp call push xchg lcall negb cwtl push sub jmp jg and enter into adc adc shll lret shlb mov push sbb test stos sarl mov je push sub or xor ror jae sbb pusha mov xchg iret (bad) ljmp insl incl xchg jmp stc sbb daa fdivrl outsl push lret xor lods inc push cli mov jmp push mov fbstp xchg jnp jae out inc jbe lret jbe jbe mov inc cmpsb push mov lahf jg sub stos repz mov cs sarb push aam in loop pop icebp and scas (bad) sub push cltd dec sahf cmp shlb jns jg shrb addr16 mov adc xchg mov inc insl clc xchg inc mov jnp rclb push xor or loope add fdivrl xor mov sub (bad) les dec in lret sub mov mov mov out stc test push pushf mov mov lea je stc jmp out cmpsb dec lcall fnstenv jo adc push sbb scas dec mov dec pop repz cwtl aaa or loop dec stos js bound and sub jb push fwait xor js push and mov addr16 test dec out test lds les sub fs xor push pop dec mov sbb lods sbb (bad) pop mov push mov sarb mov movsl mov jnp sub stos lods xchg push les xchg aas lret fldt mov jecxz cli sub aas dec jne and adc push sbb daa roll mov sbb adc pop xlat and cmc ret lds scas mov jbe push dec lea xor mov loop pop aad out in push xor shrl fs mov cmp dec pop insb movl lea jae pushf push pusha movl movb lea jmp test sbb scas inc push xchg sub mov mov inc cld test push or rolb push push jo inc pop into call add xor cli push cmp push clc xchg fbstp inc jae out ja inc outsl pop das pop add mov shrb xchg adc sub inc add lea xchg pop (bad) lret repnz testl int sub aam and mov mov xchg push in scas test ss add dec and bound test mov sbb inc mov lea lcall mov mov or sub movsb mov or add mov adcl push adc push mov push imul outsl mov push pop push stos sbb test and mov call bound mov (bad) xlat test incb imul rorl and out mov add add inc sub dec ss stos cli xor cmp gs les add cmp fsub (bad) mov sub push lods pop mov dec lock clc inc mov jo or and xchg or sub test roll test jmp jmp mov push aad call add (bad) fidivr xchg xchg cli and cmpl sbb ret pop dec dec cmc sbb inc sub popf pusha adc pop mov xchg shlb mov jo addb in fiadd jmp movsb cltd repnz push mov popl mov out fldpi add inc std jg cwtl xchg imul add jp data16 cs fbstp jnp pushf fmuls (bad) xor pop push int jecxz (bad) fldt imul and mov aad xchg cli push int ret ret pushf mov mov lea jmp inc movb push adc lea push movb call stc push stc repnz push pushf lea jne lahf pushf pushf lahf movb movzbw lea movzbw call lods cmc ror push inc cmc not cmc clc pushl cmc rol call jle xchg inc test xchg xlat daa jmp out fldenv and cmpsb je push dec pop xor inc mov shlb fldt out popa ss pop cltd inc (bad) pop jecxz push aam inc inc and push mov loope rcrb xchg and mov push cmp rolb test jne xlat insb push mov push in int or jl int es push dec xchg dec dec xlat xchg aad aaa jge sbb popa lea jo sub (bad) hlt jno mov jmp mov mov mov dec scas add lahf sahf in and out cmp sub and test jmp dec jo push xchg mov push je in or adc push cmp ret mov sub ret push test pop (bad) scas nop xlat rolb xor jecxz and mov mov pusha pusha adc add push adc pop scas loopne pop push or push lcall cs and mov cmpsl add ljmp mov in mov lock sub or mov push dec dec push mov lret sub cmpl and cmp add sbb add dec cmp add pop rcll push dec and lock cli rorb push (bad) sarb (bad) fdiv mov cmpsb (bad) aam ljmp mov ret adc dec adc pushf arpl xlat scas int and sub jg mov sbb push popa (bad) xchg gs sub add cli sub and repz ja clc leave mov je mov insl test jns adc (bad) or cmp jbe xchg pushf lock scas add mov mov jecxz fnsave (bad) mov sub movsl imul inc push cmp push push bound (bad) (bad) aas iret das xlat xlat int sub in (bad) ds js scas mov bound iret inc mov pop (bad) mov repnz les out imul das outsl mov adc push xchg xchg rcll or jecxz,pt xor cmp mov outsb lret dec add (bad) mov in es xor and or mov sbb ret jecxz outsl popf mov sbb out popf and add fsubrl adc jb movsl jo inc push fs (bad) mov aas scas jg jae jno jne dec lods jne dec pop xor fsubp inc stos xor push ret imul test and pushf rclb aas pusha lods xor and ja out inc std jne adc and add sub sub xor pop mov pop xchg mov adc sbb xor inc or test dec push data16 or push jne in out cltd cmp inc pop xchg cmp leave cmpsl sub ds jb test in ja mov jnp test aad or mov inc fistpll mov stos cli and fstpl mov ja or push jae push (bad) imul push or mov pop push sbb xor arpl xor pop out push sub pop dec xchg and jae aas adc aaa push xor jae notb inc pop outsb (bad) cmp cs in mov push adc lds xor enter mov dec pop jno cli pop insl (bad) imul add into hlt cmp call pushf mov inc adc xor pop dec stos cmpsl adc jae pop outsl mov xlat adc (bad) loopne cmp ja divb mov jmp jnp ror leave (bad) mov test lcall outsb push bound pop push push dec dec inc inc jnp,pt xor sub and or push adc push aad imul dec and fisubl pop call xchg out loopne (bad) loopne pop pop hlt in jne testl je in adc fdivs call jp sub mov inc adc cmp pop push and hlt ss ss push adc push js adc repz jns sbb notl xchg iret jg jae aaa ljmp xchg push cmpsl xor xor cmp cwtl xor xor sub push dec xor imul push leave push stc xor out mov pop ljmp ljmp imul loope out push push push imul cmp pop push js cwtl xor xor mov lcall repnz push xchg cmpsl push (bad) xor ljmp push sub pop fidivrl push dec push mov (bad) sub xor mov push test dec mov mov cmp and push sbb cli jno cmp jg ja sbbl stos movsb xchg stos jb xchg aas cli cmp xorl pop pop inc jecxz push cmp out mov jp sub cmp ja repnz sbb push xor push cli adc aaa mov cltd sub leave mov std in (bad) xchg imul cmp mov rcr test mov std xchg loope mov inc in jbe ja lret xor scas mov jb hlt cwtd std cltd (bad) in xchg jno test or inc icebp cmc jmp sub or outsb fildll xorb mov push cmp mov jl sbb xor fidivrl sub jae xchg mov jmp fsub (bad) (bad) rcr mov xchg xchg xchg out xchg mov ja int3 xchg leave jnp test jle jnp mov jecxz sub fisttpl jo jp cmc imul out mov push fist jnp mov (bad) adc xchg les add pusha out mov dec xchg test xorl mov inc gs mov xchg in lods xchg pop fmulp jge sarb enter mov mov add (bad) jnp lea out sub jne stc (bad) xchg pop xchg in jnp outsb mov enter jae lcall sbb jnp pop sbb mov jmp popa loopne jnp imul movsl sahf or xchg scas mov or out jnp mov jnp pop cmpb in mov jnp mov fnstenv cld push pushf cmp out jnp (bad) mov inc (bad) int cmp add jnp xlat pusha add fistpl jnp xor repnz dec in cmpl arpl mov cld inc jae pop imul lods mov dec lcall stos jnp ljmp pop mov repnz jno push outsl pop lods dec int cltd subl cmpsl aam xorl push or repnz scas and std mov out mov mov jl inc dec jno cld das push pop inc bound insl dec lret cmp cmp aas adc mov adcl inc jbe mov sub or mov test test pop xor cmp sub xchg mov gs repnz pop rolb push cmp lea sti mov subl fs je shl shl add (bad) icebp mov jmp lea je pusha stc mov push sub push pushf push movb cmp push movb lea ja pushf bt imul clc add push pushf lea jmp pop xor pop mov push dec and stos ror stos and pop stos fwait cmc pop mov sbb out (bad) dec mov in mov adc mov daa sub cmp out lea dec cwtl push jns leave push inc icebp xchg stc cmc cld push insl jnp fs and jb rclb sbb std es out inc pop mov mov mov sub arpl in xchg aaa push int3 fwait mov aad iret js lock push les and in add gs adc daa inc cmpsl nop ljmp and cmpsl push cmovg sar inc xchg dec cmp daa sub jecxz mov mov iret cmp mov fucomip stos cmp dec (bad) and pop pop arpl outsl insl ja scas or mov imul lahf mov addr16 jns jae sub xor mov push push jp idiv jmp cmp jae cmp je repz jne hlt jns fwait adc push sub outsb xor insl adc xor mov push scas xor push (bad) cmp call lret push loopne bound cmp adc inc inc iret out sbb js gs rcr pop jg jae dec cmp (bad) cmp (bad) jne sub dec xchg push jp insl xchg jg jge push (bad) outsb pop into jne mov decl std add push lcall stc adc in mov icebp sahf sub jno imul mov ja loop jp sarl fstps or cmp out mov inc cmpsw fucompp in das sbb mov or insl mov outsl xlat popf rcll pop mov cwtl xchg and pop add and cmp pop push movsl loopne adc ljmp leave hlt jmp dec imul std and shll or scas js addb fmuls sub pop sti cmpsl inc stos adcl imul mov dec fnstcw cmp fcomp ja pusha out jb sub push repz int dec cmpsl mov dec cmpsl jmp jg sbb sub dec dec jmp bound push cmp daa (bad) push mov fdivrs or add mov xor test outsb (bad) xlat adc cld cmp mov (bad) lea add mov xchg jg ljmp js jns (bad) mov in pop push fsubrl jp pop add push scas stos ds push sti data16 je push ja ja adc pop dec hlt ja gs jnp cmp pop aaa out mov push (bad) (bad) (bad) into pusha insb int3 sub test pop sub fdivs mov jne sbb aas cmpsl fdivs xchg pop pop imul (bad) mov xor mov pop xlat sbb mov mov sub push push dec cli arpl jp sbb fiaddl cmp adc cmp loop adc mov dec mov xlat in sbb inc (bad) dec pop push jmp movsb mov js jl push pop jns jp nop daa jnp out aas cmp arpl xlat pop push mov das inc dec bound test inc fmuls daa mov jge push jle jp sbb jp inc and out xchg and adc enter inc call (bad) (bad) ss cmp dec xor sbb bnd arpl scas lahf lret push cltd jg sub outsb dec (bad) inc mov ljmp test pop xor scas xor inc cmp push out sbb loope es (bad) cmp add aas sub out ljmp fucom jg mov inc div sbb ja jne es or divl push sbb push cmp cltd sbb loopne mov fstl xchg xchg std xchg cmpsl mov enter push inc adc dec outsl bound divb pop gs sub movsl outsl mov or xlat fs mov (bad) lock cld push imul xchg push gs inc xlat and int3 xor mov lret sbb lods fnstsw and mov lahf xchg loopne ljmp jns dec loope loopne cmp xor jae xor mov je call add (bad) fnstsw pop xlat inc mov jmp in ss js arpl dec gs stc aad bswap mov notl test push mov adc push add frstor sarb pop mov ljmp or out xchg jns (bad) scas inc xlat leave in (bad) pop and int3 jp jb jae mov adc cmp mov lret sub ja ss pop ss dec dec jmp (bad) cmp push movsl lret fnstsw dec ret and add je sbb or cmp cmp xchg dec jp dec in dec scas mov je cmp mov cmp mov outsl jmp cli jge xchg movsl cmp sub js scas or jnp lcall jmp xlat repz jle cmc arpl test lods arpl sub push push dec dec mov nop inc adc dec cltd es push out push mov insl sub push dec mulb pop lcall pop jne lret and js adc pop mov inc cmp test cmp add mov pop mov aas jno xor inc xchg hlt pop into xor cs adc aas jmp cwtl hlt mov ret sub dec dec pop dec mov or mov stos std cmp aaa lods fucomi xchg inc mov in xlat pushf jmp arpl or add fidivrl inc cmp add fcmovnu (bad) cmp rorl lahf pop cmpsl pop xlat imulb sub loope movsb (bad) data16 cmp out sub sarb mov add gs es out jno mov and pop add mov xchg sub insl pop jg movsb cmpsb jp xchg (bad) jl insl inc iret xchg popa adcb loopne je aaa xlat push fiaddl jb pop mov xlat fdivp pop jae or xchg out push cmp cltd mov imul xor sub arpl mov pop clc inc cmp addr16 js sbb and or div jnp xchg xor loope lcall push sub cwtl cmp pop cli cmp or dec int shlb dec xor cwtl dec imul push push pop testb sbb stos popa jp cltd faddl insb repnz dec sub in mov mov pop pop popa in test stc iret xchg mulb xor outsb push stc push xor xchg cmp inc aas mov xor mov loop and scas mov ss sub push jae push jl mov mov pop cmp jmp fdivs mov sub data16 or (bad) pop sub inc bound (bad) or in lock xor and cmp cmp mov or mov pop pop stos idiv pop mov out mov stos jne pop cmc movsl xor cmp sub cmp or xchg repz repz sub stos mov fmull fstps idivb stc lock cmp push out inc js imul cmp pop lret dec test (bad) or call dec and bound dec xor (bad) push jae fiaddl cmp add in xor ja imul mov sub push jnp and xchg pop lcall lcall xchg repnz addr16 pop xlat std fimull jne or sbb fstpt xor arpl cwtl dec aaa inc pop xlat mov or push pop fidiv ljmp outsb sbb lahf push or push pusha dec popf aas pop insl xor sarl shlb insl int imul or or pop dec ljmp lahf imul push mov insl push xor dec (bad) lods xchg jae pop (bad) (bad) in insl movsl push adc outsl cwtl sub dec or mov scas push sub data16 sub sbb inc call pop lahf jmp xor cwtl xor pop out pusha push and scas movsl mov mov negb insl mov jp xlat pop jge js outsl hlt mov mov mov roll lea adc sub loop cld ss dec xor fcmovu arpl les adc pop out pusha fcoms das xlat fidivrl jge mov mov and jno add cli popa rorl mov push dec jle or mov xor cli mov sbb mov sbb adc negl addr16 cwtl daa scas jne and jb cltd sub xor cmp xlat fs sub insb pop or loope add inc movsl mov xchg ficoml dec ljmp aam ficoml data16 aaa test bnd xlat mov xchg push imul scas test shrb popl sbb je (bad) push hlt jns repnz fmuls cs fs jae in xlat ljmp cli (bad) mov fdivrl mov dec xchg pop sbb mov pop cmp mov call xor lret test cmp aas xlat scas rorl cli jo push test hlt push pop pop or pop inc dec mov fsts ja adc pop fisub or or ljmp popa call lea sbb nop cli aad imul inc sub jp dec call cmp mov xor shlb nop inc scas sub lea mov inc outsl movb sbb push lea jo int dec xor inc cmp push clc incb fbld clc push mov aas enter dec outsl or mov test out push sahf sbb fsts lret leave pop add loopne outsl scas je push push or xchg push stc push jg mov mov sbb mov mov pop xlat sub es (bad) cmp jbe insl out and pop push cltd mov (bad) cmc out lock and push std xlat xor out cmp sbb mov into out addr16 lret push cmp and jae int jae rclb orl dec and scas inc and jns push pop pop pop dec bound cmp sub xchg outsb ficoml jle subb dec mov xor call mov dec loop dec sbb test cmp das dec outsl je and push test ljmp (bad) fdivrl xchg and mov push ja (bad) cltd xor jb std outsl ljmp cmc sbb mov repz push stos gs (bad) mov sbb fsts xor out in jne loope push dec pop and repnz pop shl es adc push ja dec popa leave pusha test shlb and sbb xchg push leave stc fmuls pop lods in (bad) sub ljmp lret in or xor push push dec rcrb sarb xchg pop sub lret push and outsl imul mov dec ret dec xor cld dec call push xor inc mov push cwtl scas cmp cltd dec call add pop sbb sbb push popf cli mov and or mov or cli push inc xor stos fisub or notb fmulp ds jp add jb dec push pop jne xlat rclb xor jecxz out inc lock cmp repnz lea jne xlat jne sahf and lcall sbb pop imul jns test mov inc ss call or mov lret jg push or xor into add sub shrl pop je imul xlat (bad) sbb test cltd and push push fidiv fcomps or (bad) dec jp,pn dec pop xlat push adc out pop sbb cltd xchg lcall pop gs push cmp inc mov push data16 pop push fiaddl jb sub or pusha stos into pop cs mov cli adc test push call mov test mov push jne lret bound xchg push test stc test lea mov sbb push or clc mov dec ljmp sbb dec lret repnz lods push pop loope xor jbe cli xlat mov pop lods pop loopne pop addr16 xchg push mov adc outsl sbb sahf push or daa or out mov inc xchg inc sub sub je xlat mov pushl mov pop (bad) jbe jae hlt lahf lretw or gs shll adc stos xlat out mov inc inc dec fidivr sbb das xor sub dec xlat jae mov jmp push xchg push stc mov jae inc dec cli adc loop daa lcall cmp jg fldenv cmp pop imul xlat js sahf add fmuls (bad) outsl nopl stc jecxz imul mov fwait or (bad) in adc xlat xchg arpl je icebp dec xchg sub inc push sub cltd imul cmp int adc mov enter pop mov jb push and movsl cs fisubrl adc inc les cs cmpsb mov aaa jge xchg outsw pop mov mov lods pop les js ret call xchg das or data16 xlat repnz test and cmc add push add leave test inc clc mov push out pusha xor cwtl (bad) xor ret dec jle lret (bad) fcmovu inc sbb sahf push push mov rep jne lret dec push inc sub mov cli aad pop scas lahf or pop fs dec addr16 push xlat jle adc dec movsl dec push adc mov inc pop cmpsb push sub jbe,pt fbstp xlat idivb out push gs ret lcall adcb xlat jns xor clc sarb inc push movsl fdivrp push pop sbb cmpsb xor test cmp rolb lret and xor std dec add cmpl jns or xchg and icebp sbb ljmp ja mov enter arpl jp xor push arpl pop pop sbb pop dec cltd sbb push jb pop leave sbb adc push repnz push int3 cmp gs mov inc push orb imul jae fs jbe icebp sub cmp out dec cmp pop xchg imul xor movsl addr16 mov ficoml xlat in push stc add lods sbb cmp mov out dec jl pusha or and dec pusha in mov push (bad) cs mov stos call pushf push rcr xor dec sub mov (bad) push cmp inc cmp adc inc mov or stos les xor scas dec xlat movlps jno dec mov ss mov movsl push mov les gs je aam push (bad) xor outsl dec inc push mov sub loopne insb call test xchg (bad) cmpsb je or arpl jnp arpl addr16 inc fsts push and xor add add ljmp mov jne cmpsl imul mov gs add sbb negl pop cwtl pop cmp aaa dec mov cmpsb jmp mov stc sub adc mov or outsb (bad) or ja clc dec mov pop sub jge,pt (bad) fdivr outsl push addr16 ljmp sub pop push arpl pop imul dec fidivl pop xchg (bad) mov mov and mov push sub testb xor add push and sub outsb xor mul testb shlb pop sub push dec pop xchg daa mov jp cmpsl rclb pop xchg jno sub pop pop push xchg cmp sub pop cli mov mov ficoml jo xchg repnz lcall aaa lahf outsl (bad) mov lcall cmp addr16 data16 das xchg jge xacquire imul cmp daa xchg jp sub cvtpi2ps repnz mull sbb outsl jno stc iret dec mov sub mov fsts inc je jae cli aaa addr16 jne cmp cltd pop ss cli pop repnz mov sub xor imul pop jno xor ljmp jno cmp push push and jne cmp pop adc sbb fdivrp fcmovbe push sarb stos cmpsb mov lcall push bound jno pop push push imul sub and cli push sbb adc cmp jmp push (bad) iret rcll jno daa lods test cli popf cltd xchg xchg jne aaa insl imul pop push push jne cmp sub pop and sub cmp in call loopne fdivs or (bad) mov pop divl movsb mov cwtl xchg nop jo xlat cli insb push pop cmc pop push push jae cli xor and cmpsl cmp sbb jp xchg pop adc cli out jmp xchg cmp (bad) push addr16 iret mov jns pop scas stos cmpsl mov fwait xchg xchg pop dec sub sub daa pop jo sub sti cli push sbb or or cli fdivs ljmp lret mov stos mov cmp lcall sub or adc push push push pop mov clc fisubl jp dec pop arpl cli jbe push pop cmp mov repnz cmovbe sbb sub add jns daa comiss loop daa scas cmp mov bnd push jns daa and stos jp leave pop out cli pop sbb mul testb xor ljmp mov daa xchg adc mov adc imul and mov dec adc loope inc inc sub dec icebp inc sbb or clc sbb outsl push inc call inc fcomps outsl in and enter push inc mov inc test (bad) cmpsl inc cwtl cmp mov js mov cmpsb inc out mov (bad) inc pop dec xlat ss xor arpl adc inc (bad) jmp or inc xor push sbb out sub xor pop inc adc xlat dec outsl ja add jae xchg dec inc popf jle dec inc cmpsl arpl push into mov cmp push (bad) fstps pop cmp lea mov jb fisubl xlat or pop xchg sbb jp push xlat or cmp mov out add dec push mov xchg ja outsl fxch inc jns fidivl dec mov out adc cltd pop sub sub enter scas out dec out es pop fnstenv pop sub (bad) es jecxz call cmc in push mov lods fimul pop xlat sub sub xlat mov clc lds imul in inc xor cmc loopne push fnstenv (bad) xchg bnd xchg push and xlat sahf into mov sub or daa sub fprem push xor orl sub test sbb lret ss adc ljmp push leave push ret push roll cltd jne jae cltd (bad) pop mov jae cmp int sbb cmpsl mov jne leave jecxz fsubrl movsl jo dec push clc cmp pop pop addr16 das test in mov push lretw pushf call fisttpl bound inc jmp out inc mov (bad) jmp into mov ja xor repz xchg xchg clc in lock movsb (bad) aas dec sub in add cs dec (bad) outsb xor stc push cwtl lret dec xchg stc dec lahf jno xchg bound sub sbb int3 jnp bound outsl mov and cmpsl imul pushf outsb dec in jns insb ds scas arpl mov aam popf jbe,pn call push outsb test jo out mov fyl2xp1 xchg cmp add dec xchg sbb pop push cmpsb xor pop push pop pop xlat loope mov in cmp sahf fldl2t cmp fstps dec xlat popa sub ret push (bad) push sub and jp xor mov mov rorl lahf movsl (bad) stc insb xor lret fiadd lock dec sub fdivr mov inc push push in push push mov fisubr xor cli inc fild xor cwtl (bad) jl cltd inc mov clc xchg jp xor repnz pop idivb mov cmp cli mov mov push cmpsb dec jbe fdivs fs pop cmp cmp popf das mov repnz inc cli je push test mov add mulb push inc loopne pushf dec loop out cmp ficom xchg out jp daa jge xchg xor daa fildl sbb sub movsb push adcl push aad push aas hlt test cmp pop push pop inc pop jno das cwtl test pop lock pop xlat mov stos fistpll lcall dec test xchg repnz mov or imul xlat xchg sub mov in jmp test hlt mov imul out fidivrl test or cmp adc pop leave stos pop addr16 out or or (bad) dec push jle adc xchg mov out dec mov js mov enter aaa or push shll or xchg adc mov repz xchg dec hlt sti xchg js shl rcll pop inc xchg aas sub mov test inc jp jne push loopne iret pop sub sub repnz fwait lock adc xor clc pop out test mov inc xor dec test ljmp out cmp dec xor ja cmp imul lahf xor lret repz xor sub mov int (bad) xor fs sbb adc cmp jae cwtl xchg call mov mov jns aas mov xchg xlat pop dec imul outsb cmp inc sub imul ja cwtl sub and test leave in cmpsl daa mov subps sub xor insb dec adc sbb xlat es ds repnz scas and mov xor lods (bad) data16 mulb inc push ja outsb (bad) repnz xor fldenv cmp push add hlt test push jne lret xchg fnstcw (bad) sbb xor push (bad) adc mov notl rcrl rcr cmpsw (bad) jb imul icebp pushf jge out cltd add dec xchg adc inc jg push (bad) sbb dec fwait ret xlat call test lret stc je fincstp sub js or ja cwtl scas jbe fdivrs pop xor ja xchg sbb loop inc dec inc or stos mov cmpsb cli aaa mov hlt fimull insl mov pop es arpl xchg daa sub hlt stos push pop inc mull xor cmpsl mov scas cltd jmp (bad) stc jp push inc mov test dec ret inc sub pop incb push push dec lret cmp lods mov cmp dec out inc mov repnz dec icebp push fidivrl pop flds dec aas adc lret aaa leave stos out jmp mov adc xor cwtl icebp movsl adc pop push jno cmc mov mov call in push jle insl sub or lock sbb punpckhwd adc xlat cs mov push push inc lcall ret aad xor stos imul mov bnd dec insb cmp imul mov (bad) imul mov (bad) jmp sbb or mov fstl xor lock pop arpl jne mul imul mov repz dec (bad) movsb leave das dec pop cmp cmp mov push cli ja imul jae in dec push aas insl rep cmp dec loope pop sbb out and xchg call push (bad) cmp fnstcw sub cltd or gs mov clc in inc cli mov into xor push pop pop dec mov jp lahf dec insl mov pop jp xor mov and cmp pop push sub hlt (bad) cwtl jbe add add cs mov dec xlat jne cltd jge and sbb imulb jnp jp dec cmp pusha xor adc dec pop jl fwait and adc xor pop out xchg mov fistpll daa xlat mov cmpsb into xchg aad inc out hlt sbb test cwtl dec lret jae mov popl pop push test cltd adc xchg jb scas jne lods and out out das jmp rcll push (bad) adc (bad) adc mov jp xchg jae xor pop pop aaa insl je push cmp xor ss or mov cmp and mov inc pop dec ret pop jge mov dec or ficomp (bad) scas js mov and cmp fsubrs movsb mov adc lret out mov xchg dec fdivl dec imul mov popf and mov mov mov mov movsl jne dec xlat dec mov mov mov xor (bad) jne xchg test test mov cmp (bad) cmc xchg sub and cld dec xchg adc std pop adc setne push xor ds outsb imul dec pop fcmovnb sbb shrl jnp mov movsl dec std das inc bound push add popa repz (bad) jo pop sub pop lods pop pop jae outsb jp push sbb stos scas push push or or sbb test add pusha stos or mov pop stc push dec jnp pusha xchg mov mov stc out sbb mov push imul xchg cmp pop sarl push test fcmovbe setns clc mov insl xchg ja movsl aaa rorl xlat jns movb cltd inc insl jns jae aas lret push repnz cmpsl pop ds dec inc es cmp push mov xlat imul js (bad) (bad) jbe mov mov mov add pop push in xlat ret push mov mov cltd jns addr16 movsb out insl movsl sub (bad) pop dec pop and lahf push add cmpsl xchg and push (bad) xchg and push xor popa arpl test lea add lea inc sub movsb out ja daa outsb shrl or jp and push cmpsl movsl push and sub inc mov sbb mov xchg jbe lods xor jecxz cmovae cmp cmp sub xlat mov pop mov mov ucomiss iret xchg scas cmc cmp shlb repz xchg outsl pusha popf imul insl adc (bad) add jne cli popf out ljmp lret sbb xlat jbe push xchg pop imul cmpsl fisub jae movsb insl mov fdivrl jne dec push cmp push es xor jl stos je jb push popf je outsb roll lock call lea in sbb inc pop notb ljmp scas ja cmp ljmp jbe push loope scas mov ljmp popf dec (bad) out mov xchg lret outsl imul mov adc daa stos jne cmp pushl push mov lods negb repnz cmp and mov hlt (bad) pop push ja fs ljmp push jo push sub sub push push ljmp jns (bad) pop mov cmp aad imul les sbb shll push xchg ljmp mov sbb mov ljmp popa jnp bound insl imul and jns sahf push sti jno pop jg mov outsl jns sub gs xor addr16 roll into cmp loope popf divb out or jno pop bound icebp outsb xor jbe sbb pop mov dec imul ret add xchg mov mov mov jae xchg cmp imul mov cmc into dec mov jae inc push cltd loope mov pop jmp cmc cmpsl xchg loop sti (bad) sti pop sub pop and cmp (bad) repz ja or pushf ja shll in sub insl or das (bad) das fildll int3 (bad) fsubrs js loope xor inc dec cmp push rol and popa into ja mov dec add or imulb ss mov lret cmp shr xchg jnp pop mov je xor jmp into xor push sahf add int je xor or xchg jp dec and cmp push adc fldcw bnd cmp push (bad) pop push ret and in push icebp test push bound imul aaa popf cmp cs mov dec loope mov ljmp and add lods out sub xchg ds sbb dec xlat imul ret add cmc scas es stos cmp sub or imul push inc jae aaa dec test sarl jo les inc into lret addr16 arpl push js cmp mov mov xlat cmp enter fidiv push pop cld daa xchg inc cmpsl test aaa adc stos fldcw jmp aaa dec xor pop ja enter push cli pop inc push js push dec inc push pop pop push push xor or or test adc push jbe stc cli adc fwait ds push pop pop cmp inc cld push xchg mov push roll test mov xchg jl pop popf sub pop arpl dec out xchg and xlat or bound mov into pop lret das fwait not and mov out into inc jno popw scas mov cs std lods dec push pop (bad) cltd movsb cmp inc jae xor test or imul jno or adc mov push push push xor mov sbb aas mov fwait adc lods and pop in lret add das adc cli call and cmp or insl je lock pusha jge mov adcl jno dec pop loop add mov push and inc ljmp ds dec cltd push mov push pop adc dec inc or jbe imul int3 or mov (bad) outsl xor cmpsl inc xor jo gs out mov insl int3 pop stc aas mov xor icebp je jo mov daa and push (bad) sub outsb sub xchg lock inc fisubl mov push sub pop mov mov jge cli aas cmpsl imul mov pop mull ss stos inc push out ret jo mov fcmovne push std insl xchg pop enter loope sub (bad) cmp outsl or fdivs jg or push pop ss jae ljmp xchg bound clc leave popa cmp dec push cmp pop test test mov clc xor adc cmovl lret loop into stc mov lahf xor popa test test mov adc xchg sti repnz dec push add cmp imul jne pop xor push xor repnz scas les pop into mov jbe outsl sbb or bound idiv xor mov push in popl js sbb mov shrl cmp arpl push sti cmp (bad) scas sub mov lea dec lret (bad) cmp sub dec std sbb outsl outsb mov pop add mov inc arpl push inc mov push (bad) out dec pop lret daa mov or outsb insl xchg mov data16 daa push pop (bad) es pop stc mov sub lock push sbb pop enter lret sub fs sub inc xor push icebp je std pop in jo jbe sti push (bad) ss push je insb mov sbb (bad) push std adc pop add ss sbb cltd outsb inc sbb dec xor pusha mov xlat jo mov shrb popa jns ljmp cmp incb pop roll sub stos jb cmp notl and jns jbe adc dec xor andnps imul dec mov mov mov cwtl mov out pop mov mov pop mov out packsswb cltd and into fwait jns stos lods push mov mov add cmp ljmp add call cs icebp pop fdivrs xchg ret cmp cmp and dec cmp sub clc pop mov mov iret dec push jnp dec outsl js jae cmp sbb clc aad std sbb jnp jg in jnp sbb dec lods pop mov xlat in daa std dec (bad) fnstcw inc (bad) xchg lods dec mov sbb mov movsl mov inc sub dec es dec and push ljmp mov pop cli jb imul jp or xor pop pop jp pop mov pop out mov stc push insl loop jg jle dec popf or xchg mov mov ja es and and xor mov inc cwtl pop rcr push adc test adc xchg stos aas cmp cmp xor push sbb insb mov pop mov out push in and call xor push insl push stos imul xor cs push lock stos pop inc sub push data16 lods inc (bad) jae push sbb icebp xor cs dec mov aaa cmpsl jmp adc xchg bound pop pop daa enter and cs (bad) mov add add and and ljmp icebp inc dec push stc mov lock mov sbb mov jp xor scas cmp dec call decl pop jne mov popf cmp ljmp fwait sbb cmc aas push mov mov pop dec push or ret cmp pop push fnstenv mov dec das nop imul lds (bad) ja push aad xchg xchg jo js stc push pop (bad) mov idivl and dec and add jne dec push lcall inc (bad) dec andl outsl ret ds mov icebp and sbb mulb sub pusha loopne sub adc lret inc mov (bad) daa pop loopne xlat cmp outsb inc cmp ja das push jmp mov (bad) jp cmp inc out mov fdivrl imul scas (bad) jns mov ds lock cld cmc or lcall add out push repnz add mov outsl popa adc dec test sub pop in outsb sbb roll pop adc xlat out cmp int3 (bad) fdivl test inc fidivl push mov shl adc xchg mov outsb xchg int3 fsubl push jno mov arpl imul lds pop pushf test dec xlat pop outsl dec adc push xchg adc adc out je dec pop out movsl outsb jle cmpsl jecxz arpl jge sbb ljmp ss push xlat js pusha jmp pop lcall xchg jb inc aas mov icebp xchg es clc mov std jo scas mov (bad) jne xlat mov rclb cmp xor xor loope push scas mov sub mov call cmp sar pop flds xor lret mov inc pop loope jno add jnp dec xor cwtl int3 in (bad) jae fistp mov mov fwait sbb inc stos pop push addb jne inc ja cltd jle data16 (bad) or lret xor add inc pop xor cld repnz cwtl dec std xchg jbe ret shll in nop sbb dec ljmp adc or pop jne push (bad) fmulp out icebp inc sub pop ds pushl roll jp xchg (bad) movsl lahf mov jb pop jg aas cmp xor inc mov xchg or imul je mov sub xor roll xchg (bad) xchg lcall (bad) call mov (bad) lret adc movsb outsb xor push out dec (bad) cmp or fldcw loop jecxz pop xor aaa push insl (bad) (bad) jno (bad) pop gs push pop cmc jle add lock jl ret xor or mov cmp sarl aas imul cli dec push rorl sub cmpsl dec push and inc push in cmp imul cmp mulb lret push test push out out daa (bad) out js ret xor cmc jo inc push mov push cmp outsb (bad) xor push push sar aas cmp (bad) jnp xlat push cmpsl xchg mov inc ffree fdivs push push bound mov imulb xor and repz mov rcll inc mov idivb inc bound (bad) mov jecxz (bad) into push (bad) leave int in divl int jl jbe int3 loope cs leave sbb bound das imul and push xchg cmp xchg inc (bad) icebp push jbe dec imul push test jns jae adc fldt push fst std cmp and add and xor subl pop mov push pop cmpsb or xor (bad) movups xchg dec mov scas sub jmp xchg jle push lods pop push fisubr icebp push movsl ret pop or out xchg outsl int jnp int3 test push int inc xor pop ret test push xor gs das shlb mov fs test mov pop jp aaa popf gs mov rorb dec dec stos push aad ljmp repnz pop loope cmp xchg lahf xchg cltd cmp shrl lcall sub push cmp jb loope mov shlb getsec lret mov push adc xor fldl xor and ficoml jne sbb mov jge mov push or data16 shll cmp int3 aaa lahf mov lds das std pop sbb in push insb ljmp jp lcall (bad) ss je push sahf push lcall inc in mov lods into mov xchg and inc pop fcompl mov jbe ret fisub test xchg loope,pt mov shrl out inc mov rcl das dec mov push mov loope int3 adc cmp in sbb rorl adc cld clc mov mov fwait sbb dec mov lods sub mov lcall xchg inc addr16 push ss inc insl test nop jne xlat movsb loope sar mov rcrl and add or pusha jae in dec mov or cltd loop mov or sub mov stos mov add in and cmp sub ficomp xlat dec mov ljmp mov sbb (bad) xlat cmp movsl cmpsl test pop dec xchg push outsb pop sub scas inc mov cmp ja push dec lcall repnz test mov jb cs out jo pop fwait popw out mov jp cli xlat das mov jmp cs mov enter jo aaa adc sub imul push int rclb ret call and cmp xor push (bad) in (bad) aad aas mov mov jb sub dec push (bad) mov mov xchg push and mov cmpsl xlat jno fiadd (bad) cmpsl jmp dec pusha ficoml lahf or jge aaa dec cmpsl inc pusha out jae loop sub sub stos mov ret adcl fidivrl movsb lahf out nop leave nop cmp xlat fs xchg fmulp xor jl pop mov cmp mov mov int3 dec push push pusha cmp (bad) movsl pop jmp push jl jno mov (bad) loope xor shlb pop cmp jae sahf scas xor icebp movsl pop sbb es cs dec adc xor xlat jb lock test (bad) icebp negb jbe pop cmpsl and popa cltd or sbb rcrl xlat loop movl shrb ror jno (bad) sarl mov xlat out dec lret ljmp shrb (bad) repnz imul sbb cltd add cmpsb push inc mov lret mov cltd (bad) aaa lea ss (bad) xor dec clc adc add dec adc push icebp and sahf stos dec icebp mov sub icebp pop and leave repnz in pop push xor xor out or out push lret mov push fwait sarl out ljmp test loop repnz test imul ss and inc es (bad) xor xlat jbe inc push addr16 push insl cmpsb pop jae xchg cmp divl ljmp xchg aaa xor push xor (bad) dec adc test out xor sahf leave jnp aas imul and xor movsl pop add cmpsl xchg test loopne cmc lret adc sub sbb ret jb (bad) movsl int mov adc jmp xor pop and out test xor std cmp cltd fidivrl cmp adc enter shrl dec jno nop repnz pop dec dec ret sbb icebp cli push test hlt mov (bad) cmc adc icebp repnz imul inc imull mov push pop das ja mov std cmc or add push and lahf jg out xchg sbb mov mov gs mov pop xlat fidiv jae lods push or pop outsb movsl jae adc add cli inc dec xor sub cmpsb mov mov out cmc fsub push les sbb xor xor ljmp std clc lret jns push lcall push outsb mov xor (bad) jp adc lods inc into cmp mov mov mov (bad) pop hlt xor js dec add mov popa scas mov dec movsl dec ljmp shrl push mov push cmpsb movsl addr16 lahf les insb mov out inc xlat cmp out add je outsl outsb (bad) mov scas ret in aaa mov outsl je pushf aaa jp mov call cmp mov ss dec ja jne inc adc add clc jmp push pop or les ret fyl2xp1 pop stc xor mov mov push (bad) (bad) (bad) ja outsl jp lahf mov stos insb call arpl movsl ds pop imul cli mov repnz pop mov cwtl mov fmull mov aas dec add rolb cmpl lods je mov roll mov sub cmpsl ret lods lods pop or and cmp sub cmpsl ss daa jg inc pop jns mov (bad) jb cmp jbe cmpsl xchg jbe dec out push (bad) xor xlat (bad) divb outsb mov cmpsl icebp mov sub lock pop and push rcll ljmp out cmp mov rorb scas out lret stos repnz lock cli inc cwtl jne fldenv ljmp inc pop pop shrb fnstenv lcall sub jp in add and cmpsb xor or push and incb push in and add inc xor nop sub mov jecxz mov cmp das mov and fisub and jcxz (bad) or and dec lods xchg scas insb sbb cmp dec fnop sub out fisubr cmp xlat movsb in dec push mov add dec mov movsb inc xor fnstsw and xor pop or mov shll (bad) mov fbld repz inc xchg addl sub pop aaa std sub jns stos mov dec stos adc clc out fnstenv dec adc xor and leave sub and mov mov jae lea shr (bad) xor pop stc mov mov mov mov arpl std cmpsl les xchg adc iret sub pop xchg push call stos sahf fwait int lahf test cli inc jb jne sbb inc jmp xchg loopne cmp mov ret ja lahf out repz inc pop push (bad) out movsl faddl or mov jmp cmpsb jae cmp (bad) and adc and stos rol dec inc mov fimull mov mov cmp ret mov mov xor or cmp jns add out xlat out mov inc sbb mov cmp sbb add push fcompl jb ss pop mov out mov aas aad jmp leave out pop mov call pop mov fiadd xlat outsl (bad) or cmp add mov das dec cmpsb adc or sbb push xor outsl pop xor cmpsl cld pop sti ret xor scas pop push repz push jle mov mov loopne push xlat cmp rcll ja push lods pushf daa aas add xchg nop fcmove cmpsl dec cmp mov xchg call out aas ljmp movb pop adcl pop inc nop xor mov idivb adc mov lock jg in sarl cli pop push or add in or xlat cli stc xor and xor or xchg push push fdivs lods fnstsw pop mov mov dec cmp pop jae scas mov rclb outsb xor cmpsb mov in ljmp sbb dec sti and movsl push add cmc pop dec jnp add xlat push push into mov out inc adc sub loopne daa bound iret jne jbe sbb pushf jo dec nop push mov ss fist push push sbb shr mov inc mov movsl or test lods sub aaa mov fidivl data16 add addr16 mov adc fucomp cmp jo pop bound xlat (bad) shl popf jmp test scas lret pop push push aad sub cmp and ss aaa lea inc cmp jecxz fwait imul sub push xlat or xchg outsb mov scas (bad) je pop push rclb lcall mov add cld jp dec and and and nop or jecxz push xchg xchg loopne mov cs push push xor inc or into mov dec xchg loop ds mov daa outsb mov inc add push ret loop add and pop mov or push mov insb lret in mov pop mov jb cmp negb fcoms mov pop mov xchg push xchg iret and adc outsl cmp pop or xchg xchg mov and lock or jae mov jo fimull in dec (bad) mov and aad fidivr imul repnz imul cmp mov lock push jne lods pop in lahf xchg mov add xor jmp dec jae scas mov out xlat cs jp jle cmp pop jae jle adc jge pop bound pop pop imul xchg loopne fldenv loopne out mov scas lahf or stc sub int3 scas sub lods in mov orl xlat lret pop daa fsubl xchg lahf aas out cmc cltd sub mov and mov mov (bad) lcall les lcall rcl decb and shr push push xchg mov add stc ja mov push les push xor pop inc pop sub cmp mov dec push mov fimull cltd xchg sbb movsl cld xor push mov negl inc out xchg dec rcl arpl aas test scas lods aad mov or inc arpl xchg cmc leave (bad) pop subl cs dec mov loope into push fdivrs sub and xor sub js jle lret cmc jns push es aad repnz or mov lret push pop jo (bad) cmpsb adc jbe mov leave adc repz imul es test xor or mov inc pop mov rol pop fidivr xor (bad) mov inc ja lahf mov ret dec bswap decb pop test mov pop idivb outsb cmp xlat stc clc mov sbb setae cli adc call mov push mov pusha cmpl cmp scas imul push jbe test xlat xlat push pop mov xor inc push push pop inc std test xchg xor sub std push (bad) aaa fdivrs cmp mov (bad) loope pusha xchg ret insb fsub push jns pop arpl inc jns jg rcl jno inc cmp push mov gs loopne ljmp and fadds (bad) bound inc jle (bad) push arpl lea push xlat flds mov jmp inc sub xlat xchg mov loopne dec push fdiv push inc mov fadds outsl cmp mov jno,pt push pop jne jns ja or ljmp or fstpt fcmovnu xchg or rcrl sub jge les mov stos in inc ljmp (bad) mov movsl dec (bad) notl stos jne inc inc loope jle aaa jge push push dec mov xor pop arpl inc bound pop xchg dec jae mov pop aam dec dec adc test ret pop sbb lret ljmp cld shrl pop aas loope push xchg pop out or sub dec push add pop cmp xor mov xor xchg ret xchg inc mov test inc outsl mov xchg sub pop mov xor pop push (bad) insb cmp (bad) dec pop lcall fld1 int3 xor aas in lret test xchg push imul out cld mov cmc push fwait adc ror nop mov sub xchg sbb imul insl adc push or ljmp pop mov mov push in hlt ljmp push lahf add cmp adc test mov imul repnz jns pop cmp xor ljmp xor sub pop xor pop pop xor pop push mov enter inc sub out push and jno shlb pop scas or les cmp inc out cli test push push (bad) repnz (bad) push xor mov dec sbb mov jl inc sbbb sub das (bad) mov retw (bad) out mov arpl flds jbe mov xor into pop call xchg imul repnz aas insl cmp mov sub xlat cmpsb mov mull dec adc sub push (bad) stc push test sar cli sbb stc xlat add adc xchg icebp addr16 xor hlt or das loope call mov insb shll jp dec and inc out in mov jge out xlat into mov xchg xor sbb fwait jp ret cmp out loope lods insb cmpsl xor and insl in fmull or xchg mov push xlat test lret leave sub add xor mov out push inc test push imull pop rcrl iret pop dec push inc or out rcl arpl jae cmp jbe,pn dec xchg push push dec out dec jge (bad) jb mov out loopne cmp dec lret clc jno pop sbb clc fisubrl xlat negb jb std push push push outsl push sub ljmp das xlat inc add and add or lret (bad) mov jbe lea lods inc imul ret lret add xchg aaa imul and jg in xlat int3 xchg roll leave loope push fnstenv cmp mov test nop cmp mov adc mov xchg mov and pop (bad) cli push cmp lahf jp mov lret push ja test movsb jp push xchg fidivrl mov repnz mov ljmp push (bad) sbb push stc cmp test dec stc mov cmpsb sarl push test imul xlat add cmc bnd jb mov repnz sub into sti aas pushf pop je xchg jbe push mov mov cli repnz pop xchg in pop pop pop dec push sahf push jbe loope insb lcall lret in ljmp popf inc mov imul xlat sbb mov cmpsb addr16 inc dec adc pusha (bad) into je daa add dec add std xchg dec sarb sbb xor pop xlat mov hlt pop insb inc lret push mov out ror mov pop inc pop cmp je xor cmp test jo lret int3 xor cltd incl daa add lahf aas sub push out push arpl sti jmp dec outsb test cmpsb cmp jo bound jae stc adc sbb lret inc stc sub ljmp push cmp fs jge mov xor call sbb lret xor ds push (bad) out das flds inc pop mov pop pusha sub mov adc cmpsb js xlat pushf and adc sahf out ror push idivb fisubrl sub aad dec xor inc movsl jbe dec aam mov mov jle insb lret lcall adc cmp push xor sahf stos jne cmp and ss push mov jne inc div inc daa fnstsw cmpsl repnz loop insb mov aaa cmp in loop (bad) mov aaa js negl aam push jp xlat pop jle xchg popf add xor or dec stos ss (bad) jne jp mov sub xor inc mov mov mov pop xchg aam jno fldt into addr16 xor arpl and inc mov aaa dec push mov in xor outsb mov insl xlat cwtl jne add xor cmp dec push popf fcoml movsl add jb mov inc inc icebp ljmp repnz ret enter mov rcll js movsl (bad) sbb test fisubr sbb cli push cmp movsl jecxz rcl out hlt in lock jg jl les clc cmp (bad) xor fs jg (bad) adc xchg das jp jns js xchg inc pop lods aaa shlb (bad) repnz and icebp xchg xor fwait mov jo jae sahf inc push pop es lods popf stc mov lret or dec dec addr16 aaa pop cmp ficom cmp (bad) faddp mov xlat cmpsl das xor adc push fistpll xchg mov mov je outsl cld jmp fsubl cmp cmp mov inc std ret es xlat push scas dec loop jecxz adc ljmp xor fldcw mov nop lock test imulb jae lcall icebp outsl inc lds lds ja mov mov add ljmp push rcrl arpl sahf cmp push ljmp ret loope and adc inc sub into cmovle bound xchg bound jbe jne push and (bad) lods sub cltd mov mov lret lret push fst movsl (bad) jae mov push pop shlb sti push adc out jge and negb pop stos jp inc (bad) (bad) jbe stc mov popf gs mov cmp mov mov sbb jne push mov lods adc mov mov mov jmp lods out fcmovb jno fcomps es test jnp cmc xor pop outsl cmp lret out ror dec dec adcb fsubrs cmovno xchg jae iret jne sbb jae popf shrl into xchg andl xlat stc aaa bnd (bad) repnz int out rcll addr16 pusha cwtl adc cld dec adc aad add dec push jmp jg inc jecxz je jmp (bad) and sbb test sbb pop mov add sub mov jo lret ficom popa pusha ja pop and test mov mov insl jmp test data16 lret clc ffreep dec stc push push add insb andb test mov iret repnz mov icebp pop rcll pop je cld nop jg push outsl cmp mov and and imul fbstp imul jne fwait jo push out addr16 dec jnp cltd lret and jne jecxz xor dec imul and push mov xchg pop push jmp scas popf out push mov mov and cmpsb xchg and sbb mov aas cmp jmp mov push and aas clc mov dec and and icebp (bad) das adc lret jne fnstsw inc mov loopne cs vhaddps inc movsb push (bad) jbe daa mov das inc inc pop jae ret jo fbstp lods xchg xor inc and pop push test mov subl xlat or das shl mov mov jmp lret pusha pop rcll and xlat cmpsb mov sbb notl outsb sbb ficomp push cmp pop jo mov fmuls sbb loope sub (bad) fcmove jp jne adc push (bad) cmp pop popa sarl enter adc cmp shl sbb movsl mov add jae pusha xor jp pusha out pop cs sbb js popf imul cmpsl int cmp cmp mov daa mov aas sbb lret xor cmpsb inc shll xchg inc adc clc or shrb pop ljmp (bad) jns xlat es lcall fsts jb,pt enter (bad) lods sub xor xchg sub pop mov dec fsubrs insl (bad) mov mov inc or mov sbb push xor cmpsl xchg stos pop dec sahf outsl pop sub jb enter mov xor aas jno loopne cmp cltd xlat das adc lret icebp push imul imul aaa orb push inc popf (bad) jp (bad) lret dec mov lods movsb bound mov jbe ss sub inc jmp lock pop lds adc (bad) aad jno mov movb hlt out rcr nop cmp adc test adc push ja adc ss outsb xlat push dec out out mov lahf jmp jnp mov adc enter lcall sub push sub imul xor mov ja out fidivr (bad) xchg sbb dec scas lcall cmp rorl sbb ljmp (bad) push xor out add mov xchg jns into push cmp icebp jbe cmp jle pop in xor inc je jg cmp (bad) xor lret pop (bad) cmc push shrb xchg xchg incb push mov cwtl repnz pop clc xchg xchg inc scas mov sub jge mov rorb aam push leave xor dec jbe fidivr pop leave pusha test insb lret rorl sbb push add mov leave inc sbb push and jno cmpsb shrb mov cmp and es jmp inc push dec lret sbb mov cmp jns xchg outsl pop out xlat loopne ds mov daa dec xor or fnstcw jmp mov inc fild jmp push add icebp and fs addr16 loopne das hlt cmpsl in movl cmp push mov mov out outsb clc rep jmp imul inc fmuls xor push negl movsl scas xor (bad) cmc fisubl push and loop pop stos sbbl test in negl mov insl push add jno jb sub push xchg in cli insl or pop int3 rcrl cwtl aad dec (bad) out cld insl test dec stos (bad) pop lea pop das out jne fisubrl jle jp push fiaddl arpl daa fstps jmp xchg pop loope shlb pop pop testb pop sbb sub out popa repnz dec pop or push shrb sbb fisubrl out idivl pop addr16 js mov pop leave sub fcmovu pop push imul push sub add cs das push nop (bad) movsb ljmp loope aad cwtl call jb xlat inc xchg pop jp xchg add loop popf jns div bound (bad) lahf aas in lcall lea imul jp inc outsb add movsl dec in testb hlt cmp dec scas rorl jae pop movsl lret mov fs inc movsb (bad) mov (bad) hlt loopne ss sub (bad) clc dec cmp in pushf adc insl fwait mulb mov repnz fwait jo call xchg outsl mov push mov scas cmc xor dec out pop je mov dec jbe mov into aaa push aas mov lods jo mov mov xor insl cmpsl ja fwait mov cmp fcoms int mov loope scas mov pusha stc fs test jae pop fadd add cmp out xor xchg gs add lret scas ss dec imul mov mov data16 aaa pusha and xlat imul fisubl add cmp je test cmp inc aaa push movsl mov push adc sub (bad) cmp xchg ljmp jl cmp inc jle jbe loope mov insb sub and pop xchg xchg mov push repnz xor repz jge iret pop test or xchg mov dec repnz cli add ds fisub xchg std das mov sarl mov scas fstl popf mov mov jp push movsl in adc leave push fcomip imul cs mov insb into pushf mov in xor je movsb mov call stos push imul outsl test bound fwait sbb mov into cmp ss jo mulb pop pop popa cmp outsb cmp push rorl nop sub fbstp in cmpsl (bad) call popf (bad) lea jns push xchg loope cmp subl xchg xchg ja into mov mov or out inc notb mov cwtl imul dec insb outsl add out xor mov loopne arpl inc outsb cmp outsb (bad) out adc sar je sbb lcall popa (bad) std sub sbb stos pusha imul cmp inc int inc lret jae or jo cli pop movsb pop clc clc jns adc push add (bad) xor sbb insb insl loop fnstcw cli mov shlb dec leave xchg sub pop dec imul add dec outsb xchg (bad) icebp pop push pop add sbb sub push cmpsb inc push xlat shrb and cmp out inc jns les jb cli movsl and xchg or sbbb jmp stos in xor lret sbb xchg add xor sbb adc sbb jo out sbb std push je cwtl mov hlt cli rorb sub movsl pop cmp jae cmp xchg (bad) adc shrl cmpsl sub jl cmc loop push cmpsb jbe xlat addr16 cmp cmp pop xchg scas ret andl je iret sar add pop jo xchg addr16 inc xor sub cld (bad) insl (bad) jg arpl add mov and jno sbb jae loope jge xchg repnz mov push push cmp jns xchg mov (bad) ficoml rorl push out mul add cmp popf adc into pop je xchg addr16 dec mov push push lret dec push (bad) loop addr16 adc adc push das sub fmul adc push mov jp fistpl mov (bad) stc mov sub stc dec jg ljmp in rcll pop mov mov push inc pop cs xchg out das inc stos dec in in sub fstpl sub jns push insl mov pop sbb mov mov jne dec jle push mov sub mov xor push lret mov inc mov mov mulb jb cmp test loope shlb (bad) pop add sbb js repnz mov insl adc inc adc aaa mov sub xlat dec dec push xchg scas xor (bad) out cmp dec stos movl test adc sub dec inc pushf ja jo sub cmp inc dec or dec icebp push (bad) push movsb push les pop sbb jae adc (bad) jne mov sub loopne or jmp outsb jno jg mov sbb xchg cmp mov dec cmp sbbb xor int3 imul test (bad) mov inc pop stc ret cmp popf inc shr inc sbb addr16 push roll sbbl out je,pt sbb cli pop xchg arpl cwtl sbb loop push icebp dec (bad) imull sahf ss inc push xor pop insb mov adc cmp jne jmp mov leave repnz inc (bad) into (bad) push and adc push in adc jb push dec and ds xor inc movl pop dec sub ss or sub or push loope adc lea ss imul scas dec lcall mov ficomp test imul gs pop push fisub outsl or xchg cmp dec jno inc push sbb decl sub in push mov jo fdiv (bad) shrl int movsb mov jp jge adc inc jns or insl imul add cmpsl add dec xchg xor push jp jne in lods lds movsl (bad) insl xchg cli fstps xlat lods mov dec jp xor daa sbb loop sahf dec out xlat sub cmpsb pop xchg sbb test xchg sub pop xlat and inc push (bad) repz and add pop pop call cmp xchg movsb repz in into mov rcll xor call dec lret sub push xor ss (bad) mov lods jbe jp jbe out and push lret mov hlt xor (bad) xor scas mov fisttp in fmuls mov es jbe ja pusha outsb clc jecxz mov hlt sbb sub mov dec (bad) idivl inc insb test pop jbe arpl push in repz add dec imul insb or iret arpl dec sub mov push jae cwtl (bad) iret insb es mov cmp push fcmovbe daa (bad) int fidivl iret or or xor lahf cli push xor sahf shl mov je push cld mov add mov es xchg xor or xor shlb xor ss mov movsb cs stc lcall into push iret test mov jg and stos pop xor fisub aad sub imul fnsave rcrl (bad) jl mov mov fwait adc orl movsl lahf mov imul push push test in lods push repnz xor sbb adc es add in push push lahf jns adc xor mov push test mov sbb and sbb or arpl jns dec dec stc or movsb repz cs push xor (bad) aad push rep jg mov mov lret (bad) (bad) stos imul push gs (bad) in jae push xlat sbb test aad pushf cmp fincstp inc (bad) mov ljmp xchg bswap insb insb cmp sub fist fmul outsl pop mov (bad) sub jmp (bad) xor lahf jne pop lret xor ss inc mov stos push negl sbbb jp pusha xlat out mov mov jp and lods insb lret aas adc xor (bad) dec mov pop sbb loope cmp cli outsl fsubrs add add jg cmc lahf cmpsl ficoml jne dec fwait std insl ret out arpl mov pop mov push xor out xor xorb xchg movsl jg jae add je or test stos cmp insl (bad) xchg test sub lret mulb dec stos jg lods aam jmp push mov aad inc cmp push lret int xor or (bad) fwait mov sub hlt push push xchg push mov sub jbe jp push test dec arpl out ret in and xchg or (bad) mov xchg xor inc mov jne mov push push push ss daa and pushaw je jb imul mov dec lahf je addr16 (bad) sub push jg cld cmp pop xchg test jg push mov outsl push data16 xlat cmc pop and lret imul mov dec insb xor clc (bad) ja cwtl and push aaa push scas jp (bad) jg or and push cwtl push clc sbb fadds jno dec adcl ja fsubs sysexit repnz jmp mov fcoms inc jo pop repnz inc jp idiv xchg push inc fisubl dec and xchg jnp aam dec movsl lret cmpsl movsb aad cli mov mov jp movsl std inc xor stos cmc lret arpl daa sahf pop rcl push jmp mov (bad) js cmp (bad) xor and pop mov mov push jb aad cmpsl lret inc pop (bad) cli aam out in jl ja test rclb xchg idiv and jae outsl imul cwtl clc jo sbb hlt aam xlat icebp fstps clc mov out push inc inc pop sub and xchg ficomp jb repnz lods adc (bad) lret inc mov out sub std push mov mov push arpl pop js jg ja cltd dec dec aaa pop jae jo mov add mov arpl adc jle enter mov xchg iret test pop arpl (bad) sbb dec adc cmpl xlat sub (bad) inc inc aam shr ret mov into (bad) and cli jns xor inc jne jns fcmovnu dec dec xor (bad) sti inc daa call andb test divb jmp push fs xchg lahf pop cmp loopne and (bad) shl sub jns mov jl lcall xor add inc lock push nop push add (bad) out push add mov or cli (bad) dec movsb imul jge cmp sub je loop (bad) inc loop jo jecxz jns gs (bad) lret push mov frstor das fisttp popa xchg cwtl pop pop and xor fdiv lret sbb dec xchg aas mov jb decb sbb jns sub call cmc or sbb rcrl xchg imul mov cli aad imul push sahf xor pop das mov das out pop das out dec das out mov out push gs andl outsl jp pop sbb cmp dec mov mov dec (bad) imul fnsave loopne jne sub (bad) mov aaa jns mov stc jecxz dec jge xor call leave xor fwait mov popa rcll out mov gs push jnp push inc push cmp sahf jae xlat aaa stos dec push loop aaa xlat pop daa mov mov imul fldenv outsl leave xor push mov and cmp pop fidiv leave movsl and daa cmp mov js cmp dec (bad) push mov lea nop je insb jae mov xor repnz mov in in dec repnz imul jp (bad) imul ret cltd loop jp add (bad) dec push notb or lock jo pop xor and push lods ficomp inc ss out mov ds mov ljmp repnz jnp pop into push xchg sub mov sbb mov cs nop pop push test sub sub ljmp addr16 jo cli (bad) rorl in mov dec xlat mov add lods cmp xor push dec adc out mov sub pop cmp push xchg imull imul imul rorb hlt ljmp dec arpl inc xor daa cwtl (bad) cmp outsl cbtw xchg hlt (bad) pop sbb push mov hlt aad test pop xchg fldcw call xlat mov add int lret das push add pop (bad) mov push xchg sbb sarl mov jge lcall loopne stos xchg in dec aas jl inc jb and adc scas sahf rorb hlt xor lahf cmp pop (bad) iret call ljmp and dec in mov fiadd push push arpl test jbe cli shll outsl sub test mov stc insl add dec pop mov xchg inc mov inc icebp (bad) pop dec loope or ret (bad) (bad) pop dec cmpsb sub addr16 out jp rcll data16 fwait je push (bad) idiv inc lret add sbb mov cmpsl mov icebp jno test stc repnz mov dec int3 lret and movsl aaa inc mov ljmp dec andl sbb add jbe jne push lea lret fucomi xor imul mov jnp dec sbb jl movsb dec jle mov lock push dec mov and imul xlat mov inc lret inc loopne or cmpsb fiaddl mov mov push cltd test movsb icebp mov ds out test fcomps sbb divb (bad) daa dec cmp ljmp out stos out xlat call lret rcrb lods pop shrl add das sbb lock ja pop pop or ficom mov pop cmp negb imul (bad) repnz mov dec push jae roll xor gs jne lahf xchg imul push fwait push dec jp lock adc dec pop daa sbb jae xor out adc jge mov fwait sbb test sub dec (bad) jbe movsl call pop adc repnz js insb dec pop mov inc push stos push in or sbb jge clc (bad) test adc xor mov (bad) stc pop xchg push adc xor add test stos into pusha bound sbb dec repnz test outsl inc jns mov jae clc arpl mov push loope stc mov jae jp into adc lret ficoml lret pop push jns or pop jp mov jbe imul mov fwait enter push loop ljmp inc into xchg dec test aaa inc ret dec xor into int3 push lret imul out add mov mov mov inc ret ss jge jg push pop cmp sub add cmp or pusha out (bad) aaa dec imul test sub pop push and mov jmp repnz loop xor mov movsb sbb push jbe arpl or cmp or sub cmp xor mov add imulb jb fcoml (bad) clc dec and lret out popl pop lock aaa mov scas fcomps inc scas int3 jne mov and pop (bad) xor jmp test xlat je outsb in sub dec lcall pop mov add mov mov rcl add and xchg enter rcrb xlat bound xor xor repnz les nop mov test jl cmp inc pop dec pop or fimul cwtl mov mov xor arpl pop aaa aaa scas into cmp push mov bound cmp test popf insl mov pop xchg dec (bad) repz inc nop mov movsb cld loopne dec push sub inc jl pop push sub cmp movsl fwait pop inc popa pop incb pop inc cli test mov pop pop push mov cmp test bound pop out rorl cmpsl cwtl cwtl fnstsw xor jbe mov out aas mov mov and push mov push sub jnp cli xor sbb add adc jmp movsl and std out pop int dec sbb ss mov or mov movb int jb loope cs mov fidiv pop ljmp fimull fstl dec arpl cmp push dec addr16 and aaa repnz daa imul pop xchg repnz setne or (bad) jl xor out cld mov push (bad) dec push dec and inc pop (bad) outsl cmp adc insl mov pop popf push call ss lret inc adc add scas imul jge outsl pusha je jbe cmp add shr clc pop xor or rcrb hlt int or dec mov inc je dec popf (bad) dec sti pop xchg outsb repnz jmp adc test add xchg and mov xlat mov jae inc push aas jne xor mov out ja push pop (bad) ret mov push dec pushf lds insb popa repnz cmp xor xchg loope mov js sbb das movsl add cmp ss inc xchg nop push xchg adc mov pop sbb lret or xchg lds imul lret push shll fs cmc push xlat jmp sbb pop inc add xchg or cwtl sbb out pusha xor js mov fstpt jne orl or (bad) xor pop sub sub dec andl out pop jecxz mov sahf loopne cmc inc outsb or push jmp jb fcompl xchg insb xchg aas popa xchg jns mov inc movsl mov pop adc out and rolb aam pop scas stos (bad) mov out int inc mov fldcw push bound loopne (bad) rorl and jbe notl sub pop push pop xchg add fmulp scas movsl and jns push and ficoml repnz dec es or outsb pop xor pop fldenv fisttp cmp mov loope mov xor mov and sarl scas dec outsl pop sbb push je lahf std das xorl push outsb add jp movsl xchg add aaa ffree fildll dec pop iret cltd movsl lods mov cli lret fcoml imul out sbb cmp xchg jecxz xchg inc notl fisubr xchg lea test mov clc mov push ja fsqrt cmp sbb cmp pop shlb xchg pop push sbbl insb (bad) repnz test push push mov xchg or (bad) ret lods jbe aaa dec (bad) int3 xchg inc push push push add addr16 mov insl sbb bound cmpsl addr16 xchg jmp repnz push insl jp in es cmp in adc adc xchg addr16 flds outsb push xchg dec sub mov adc pop push dec sbb pop xor imul out sbb lcall mov rclb inc gs pop and pop cmp lahf lret ss mov push insb ret out jb cli jne xor mov (bad) push lret imul ss out insb xor dec and cmp xor xorl mov and and and inc push nop ljmp pop cld push scas push dec ss adc pop inc inc std test mov lea test cmc insl lea sbb insb test fs movsl pop insl sub addr16 dec inc cs hlt pop add push xchg or mov add cmpsb popa mov test adc fisubl sub mov or jp jg insl lock aas push pop out jb jmp sahf jmp sub (bad) push jp push pop pop adc jns into pop mul pop sub inc push xchg inc cmp rol jae sub cmp sbb sub inc jge pop mov sub mov pop jge gs call lea (bad) pop imul push imulb out sub push dec out jns mov xchg push push lcall imul mov aas sub addr16 mov lods mov adc mov cmp pop sbb dec mov jne (bad) repnz cmpl or popa aaa notb sub out dec je or mov lea (bad) push push retw dec imul mov cwtl test ret test xchg es adc push daa mov es ljmp inc and imul aam push and js or je insl inc pop adc sbb push int jb shrl adc js fnstenv pop xchg jbe shrl jp xchg inc nop push xor arpl mov push xchg loope dec outsl pop push subl popa pushl sbb dec ja ret jp repnz cmp (bad) xchg stos in aaa (bad) push pop imul (bad) bound leave mov imul mov pop xor mov adc fsts pop fild and ss jne inc (bad) inc dec adcl mov inc jge nop sbb insl loop push pop push dec mov popa push sbb xchg xchg decb xchg jle movsb mov pop pop (bad) scas lahf push sbb sbb mov xchg inc jge sub sbb pop movsb stos pop pop mov xchg repnz imul pop inc or sbb ljmp icebp pop mov sbb aaa (bad) imul mov aaa lock dec sbb insb lret daa mov push push push ljmp xchg lods xchg mov or pop xchg xchg out ja (bad) dec mov jns push dec mov mov fcomps xchg mov pop xor jl outsb sbb dec dec pusha sahf (bad) jmp jge test pop outsb fimul mov xchg movsl push das sub in pop add xor dec jae xchg sbb sbb shll xor (bad) push dec cmp mov push xor stos lea pusha jmp mov or imul jae in mov pop sti inc xor push in cmpsb dec icebp in xor js outsb push push push push ljmp mov sub or jl xchg mov dec mov push sub and cmp std addl ss cli jle push iret adc push ljmp loope pop les xlat std or mov xchg (bad) sub inc add in sub push hlt adc out mov punpckhbw call xchg push or in and xchg xchg dec cwtl addl xchg jo and jbe xchg cmpsl jmp inc sub add std daa mov lret roll imul jo dec cwtl xor sub push mov or repnz test dec cmp imul cli inc (bad) paddusw fimul push jae fsubl mov push (bad) inc mov push xchg call iret adc fsts cwtl cmp mov push push and ret insb lahf mov sub sti out dec push or sub pop psrlq dec mov lods aas xlat mov add gs imul mov fidivrl push mov imul enter mov sarb jae and jg je arpl dec lret push inc enter ja rorb fcmovnu mov adc push aas test mov sbb test push push (bad) dec dec repnz cmp push dec icebp jge cwtl dec cmp lock xor sub sub or cli xor push push stos icebp and mov mov sub and scas pop xor sarb nop hlt mov cmp jae xor je mov enter push imul xlat shlb mov push push in daa and arpl fldcw in and jns dec inc hlt loop aam sub or mov fsubrl cwtl int jbe mov outsb fwait push xchg mov test out cmp outsl pushl and std add fsts xlat jp int (bad) in adc and cld enter xor pop outsl lea mov adcb mov pop push cli cmp cld push xchg jecxz fistpl clc or pop xlat movsl or and mov xchg xchg gs mov loope fimull dec dec sbb imul outsl mov arpl xchg pop test cmp fwait loop pop mov in loop sbb mov pop roll and int3 and imul cmc call xchg cli mov push mov push test or loope mull rclb xor mov test insb xor pop xchg mov shl out mov and cmp out mov mov xchg push es hlt in xchg dec xor mov dec fs mov cmp jne mov cld out push imul mov sbb dec orl push test mov push insl mov or xor cwtl or stc push dec jne xchg (bad) cmp jl pop pop sub and int3 divb xchg jns and loope jb adc push mov movsl (bad) (bad) insl push int lcall mov mov mov testb (bad) ss pop into inc ja xor fldcw insl adc (bad) out mov mov push sbb xchg mov mov movsb stos jmp sbb mov repz add xor xor jg sbb lock test fdivs ja dec pop pop dec addr16 pop adc jae jp popf lock xlat movsl jp imul mov push mov inc out jno push mov outsl jo and jns jo and rcl push mov mov insb sub psubsb pop into popf mov and cli mov out add add push xor xlat adc or cmp push mov je pop les ljmp fldcw push dec jp js dec imul inc notl and inc je push dec jno rcll fsubs push out loope pop in xchg mov sbb xchg lods push pop test bound and adcl ss dec sbb pop push into in push mov pop jbe pop mov xchg sub pop into mov notl aam pop inc notb or or movsb sbb mov in xor aam pop lret pop xor inc push push mov and ret sbb addr16 gs aas sub aas jo pusha mov test jp cmp negl mov push repnz jns push add addr16 adc pop sahf rcrb rcll sub inc das test lods cmp clc dec adc lret pop xorb mov xlat loop sub xor cmp jae dec out je jge stc adc cmp xor xchg xor jle cmp inc xchg test inc cmp dec mov mov test out stc inc xor push adc xor xor mov push pop stc inc pop mov imul and cmp add jmp jno pop xchg mov push or jp xor inc fsubrl sarl or aas cwtl pop push js pop repnz notl sub ret sbb dec push cmp lcall push scas lahf add push out pop insb push gs ficom push mov pop inc popa push xlat sub mov xchg xor mov test push (bad) ljmp gs push xchg dec pop insb (bad) sbb lret mov cmc icebp test add rol test pop idivl jp cli add dec push scas push mov mov (bad) mov call mov jg jns jb insl js outsl pop mov pop jp outsl push push sub cli das incb scas pop sbb ja jp cmp mov mov inc cs loope inc negl inc movsb push and in xor cmpsb mov sub imul mov mov jb pop jns test jl cmp pushl insl addr16 cli inc pop cs daa and stc mov cmp cli lret cs xchg outsl sub mov xor xor imul mov mov and mov (bad) mov mov push cltd jb push push dec add das pop movsl dec mov (bad) hlt mov dec fwait movsb jb push ljmp outsl stos ss clc xchg push clc cmp push jnp bound clc aas xor dec add add sbb jns mov fimull outsb cmpsb jb imul mov pusha cmp adc sbb inc outsb mov mov or jb dec inc (bad) push repnz pusha and mov adcl arpl push and and push lret test ficomp cltd jnp insl mov dec fsincos daa jmp sbb and fidiv testl shrb pop xchg push clc mov jns ljmp jbe addr16 inc inc cmpsl jnp pop mov jg xlat sub push push jno jne mov push mov xlat mov push sub push xor rcll test xchg push incb mov les iret sarl push dec and sahf aam push xchg leave lods sub call scas icebp pop cmp xchg imul mov push test push testb push and lea (bad) into jbe outsl mov aam pop inc cwtl push hlt push push and lods lods add xorl fildll mov mov ret (bad) sti scas inc es sub negl test loopne and sbb repnz push cmp xchg add fmulp mov jg xor test jb mov insb cmp fs and sbb push jo lcall bound imul movsl aas aam mov leave addr16 push cmpsl cld je imul adcl ror rorl js lret stos lods inc sub pop cmp mov dec ja ret outsl lret jae jbe bound test sbb (bad) jns loop push pushf inc shrl ss fs xor (bad) jne xor test jb xor movsl mov dec jo,pn test dec (bad) xor enter cmpb out xlat cltd and jecxz inc sub sti add mov iret fs es out outsl lds (bad) sbb imul inc and push dec lret cli inc jl mov mov divb cmc cmp and xor stos cmp lcall add xlat sbb hlt ficoml push cmpsl pop inc insb push movsl popf outsl (bad) xchg scas sbb lea cmpsl xlat push decl loopne xchg das jle push call jb call inc imul pop mov pop xor xorb lcall and push adcl in sbb or jo iret xor in (bad) mov and xor lods push jne scas lahf mov lds xchg jo cmp push xchg pop js push std xlat and pop into insb in fcoms cmp sbb test cmp xor lcall inc mov fnstcw sbb pop je push cli xlat sbb adc adc pushf cmc or jb push test loop mov adc and dec mov mov or mov jb cmp test stc mov mov pop cmpsb imul push cmp push std aaa push mov adc sub shrl out ja adc adc inc add push inc lods xlat inc inc bound ljmp xchg jmp jne stc dec mov dec or and push pop (bad) iret xchg addl xor xchg inc xchg jb sbb into cmp ret sub imul movsb jae inc cmp jb repnz push jg mov imul inc cmp push xor push lahf mov sbb xchg loope mov rclb pop add xchg sbb cs pop jl fistpll pop jl (bad) movsb das inc gs push fwait cmp ljmp sar jbe (bad) push popf pop cmp rcrb dec mov rorb cld or inc and pop cmp aaa mov fstpt lds adc mov jno lret cmp xchg push inc pusha inc aaa pop pop mov mov pop jne fldenv cmp fisub xlat sub adc imul jp jne mov mov mull push dec lcall sbb xlat xchg add ret iret sti or ljmp and (bad) out mov sub push repz pop sub xor orl mov fiaddl jns pusha pop jne testl ss sarb cli lock mov cmp mov jge out xchg fs xor sub sub shlb push iret jmp or clc jp cs mov xchg add roll in mov sbb push cmp push xlat sbb pop mov push xchg movsl into xor dec mov push cmpsl xchg mov and les xor lret dec int3 (bad) in pop mulb xchg or enter (bad) xchg out adc stos dec adc insl (bad) ss out fdivrs and mov push inc mov xor mov push adc lods rcr mov cmc inc sbb enter cmp std mov sarl dec and std cli lcall mov (bad) dec fwait xchg xchg imul imul mov cld xor pop mov sub (bad) idivb incl enter push inc pop lret mov push ljmp enter stc inc cwtl aad mov cmp jbe outsl je lcall (bad) idivl dec sbb inc aas sub push push jp sbb mov cs and arpl fstps cltd lahf push sbb fisttp (bad) popa and clc xor fimull jmp sar fstps or sarb xor (bad) cmpb iret sbb fldcw push mov sarb sbb sub sbb jb cmp cli xchg dec jp and pop lcall mov xchg lock xchg addr16 mov popl lds divb pop push les fstps int iret pop out push es sub jne cmp xor sub mov sarb cmp (bad) mov iret lss inc fcmove mov push xchg push mov mov std (bad) negl push cmp iret jg xchg pop in push inc test sub std push lret pushf pushf pop mov ja jmp xchg imul cwtl cmp rorl xor add addr16 fmull cmp push dec pop std jbe int es cmp push push dec push xchg pushf mov lret jbe push pop xlat data16 add adc jp insl push dec lahf pop lahf sbb bswap aaa push shll aam sub cmp ja dec cmpsl shl fmul test cmp push jae xchg sbb sub add mov mov fwait inc sbb das sbb push int3 test ss dec xlat aam fsubrs adc cs cmpsl and dec shll inc cmc in aad lret cmp push adc mov cli orl es cmp push scas es not mov xlat test and mov ret jl dec jno sub jmp pop out addr16 idivl pop push fnstcw mov outsb out mov aas cmp bnd sub jg pop push or add es lret pop pop adc ss movsl pop lods orl mul xor insb das push dec push push mov dec push inc mov push inc cmpb dec je loop mov std pushf jo pop loopne inc pop mov dec movsb lcall push fistp cli mov lret sbb mov (bad) dec mov gs mov and adc xor dec mov push fadds mov push imul jecxz ljmp mov test ljmp repnz cmp popa push mov and push push scas int mov xchg add push cmpsb and mov lcall leave push out mov int mov pop rorb push mov fstpl push sbb sub pop sbb pop mov ds lret mov push fs mov imul ss loope aas mov or sbb cmp pop test pop aas lahf ja fidivl addr16 idivb push cli mov or or popf imul cmp loope cmp adc iret jae repz icebp pop lret mov ret gs pop sbb (bad) push cmp movsb sbb fwait or pop ds and pop lahf test jbe jae lret cmp das adc mov add or ds lock negl gs stos jecxz pop sub test arpl sub xlat pop mov inc ficoml dec shl dec arpl (bad) idiv cs or gs dec lcall push add inc jle jge mov insb push fidiv fwait xor jbe pop xlat (bad) mov jb mov pop pop xchg dec push lcall insb and mov xor mov rcll pop adc xlat fwait or fwait jp dec scas push xchg pop mov cli ret aas sub stos pop js xlat sbbl idiv add dec js test jmp xlat inc push ljmp pop pop cmp sub cmp popa out insl repnz push clc cmpsb imul dec dec movsb ljmp scas cmpsb or ja outsl pop insl cltd sarl push cmp pop cmpsl fldl lahf stc add sbb xchg lret dec out jns sbb lods sub dec inc test sbb dec jp icebp pop adc ja push gs mov mov adc pop xor outsb (bad) push push lret setns out pop nop xchg shrl popa ret arpl ss ret add jb outsb (bad) dec and ret push loope in pushf xchg push popa mov decb and mov push int3 xchg dec xchg mov mov ja aas dec lahf outsl xor push repz or outsb es pusha sbb lods xlat pop sbb arpl ja mov (bad) stc iret add xor mov rcl imul insb insl (bad) ljmp inc mov mov (bad) xor sub dec mov out out mov lock es fsubrs cmp push cli xlat cs push or (bad) in inc out add jl sub pop jno dec inc push das cmp pop sub push rcl mov push or mov jle shr push or lcall or scas lahf into adc scas pop dec mov outsb jbe data16 cmp push into movsl dec pop or inc jp pop cmp das mov pop and jb mov pop mov (bad) xor mov ja outsb jae fcmovbe ja push mov movsl sub pop insb into stos aaa mov shl in mov movsb inc cmp in cmp mov push add outsl add inc enter adc ja fidivl sbb pop outsl pusha fidivl das arpl test call cli xor or mov jo cmc or shlb movsw push daa inc aas out adc sbb xchg popf jb and xor lahf cmp or inc and cmp repnz js addr16 es mov clc inc push mov cli xor ret xlat ljmp push ret and inc pop pusha jl imul out xor movsb (bad) (bad) mov jge decl xchg or dec dec ror shlb repnz jle dec xchg mov xchg movsb repnz loope enter daa sub daa imulb mov xor inc movsl leave xor ljmp xchg insl and imul mov pop push aad notl sub jp aas sub adc sub ljmp aaa fwait dec pop insl cli ss dec dec push in dec daa push pushf loope pop add fldt stc cmp sbb pop push mov mov sub sub lea sbb pop repz into lahf in adc xchg jge xor cmc out mov fidivr in movsl or xor pop cwtl jb movsb and das imul addr16 movsb popf (bad) mov adc test inc aas pop lahf xchg arpl mov ficompl cmp les pop push dec shr lock inc adc lahf test pop xlat in fs xor popa (bad) xor mov lock dec leave inc sub movsl mov xchg push jp (bad) cmp mov add test push mov jp mov cmp jae sbb push dec jg dec jg mov add add cmp sub or xchg ss leave les push popl aaa xlat mov mov jae (bad) xor insl (bad) jg jne outsl jge jno (bad) aam add cmpsl iret mov mov sbb (bad) push xorl adcl inc sub insl jl pop andb (bad) mov and icebp pop mov dec std mov sbb daa cld enter jns cli cwtl mov pop mov gs in mov daa pop arpl add jbe push shll call inc and fcompl sub push push sbb xlat stos push stc push pusha lods sub xchg in in (bad) mov test lret xchg xor das mov mov lods pop cltd mov popa int dec testb inc mov outsb sub xor out dec sbb cltd fimull xchg mov fwait mov sbb pop push aaa mov mov mov cmp jns outsl xor lret pop pop or ljmp stc sbb movsl xcrypt-ctr cmpsl fwait stos stc mov sub aas dec fisttp mov inc mov popf pop out outsb shll mov aad loop add fwait adc insl sarl xlat adc flds jo cmp sbb insb cmc sub (bad) out imul incb sbb jno push dec sar pop rcrb in test pop and mov dec mov jp loop inc jecxz cmpsl mov fidivl mov imul imul push cmpsb xor xchg jle inc nop or mov loopne push cmpsl mov push lret mov inc test movsl pusha push aad mul xchg inc push fstl cli sub loopne dec and adc mov inc cmp daa enter out in enter xchg dec rcll adc xchg jo mov mov and sub sub pop pop nop sub adc mov aad jle,pn mov pop mov loope or sbb (bad) imul arpl stos xchg push and inc push clc aad fbstp push jo push mov mov fwait mov push sub out mov iret and sbb ljmp aam shr or ljmp push xor bound or jbe xlat sbb pop sub cmp pop mov orl ljmp gs adc call out xchg lret fstpl rclb iret ja mov cmp xlat dec lods cmp imul adc fstl add test cmp and mov lcall pop data16 scas mov inc cwtl and mov popa cltd cmp mov negb add cmp push mov andl pop jb xchg call ds lret fnstsw jo pop or ss lcall jbe lock and repz pop jo pop dec repz mov pop sub outsb arpl cmp jmp fstps (bad) imul pop test mov popa pop mov enter (bad) jnp and imul adc imul pop sub mov aaa rorl outsb in idiv cmp pop call aaa jb mov sahf idivb lret push mov aaa and imul jb sub cwtl pop scas aam sbb popa jb movsl popa jb divb out pusha (bad) mov mov (bad) repnz popa jb notb cmp repnz divl rorl outsb in negb sbb fimull sub cmp jle sub stos negb cmp pop or mov aaa das dec ljmp subl mov stos (bad) or lcall pop jp mov push mov hlt lods cmp sbb dec dec cmp pop jne sbb mov popa jb movsl fsubs add push popf hlt test and adcb (bad) repnz dec adc insl out pop mov jae mov stos js mov popa dec xor inc aad (bad) or cli pop mov cmp std push cli pop sbb test cmp out or stc pop adc out icebp cli imul movsl mov jae xchg in sbb dec jp imul pop out (bad) cmp dec xor cmp int add aaa sub xor xor imul push sbbl ja int3 imul sub ljmp inc push arpl punpcklbw jae mov cli mov ret push pop push dec cmp push (bad) out jp dec cmc pop inc dec movsl push imul out sub adc mov repz sub sahf xchg jne sbb aaa js imul jae jp mov xor cmp jo jp iret lods je pop adcl (bad) xor mov sbb test xchg xchg cmpsb or pop pop cwtl lea push dec cmp stc test fldl2t fwait repz and jae mov and out cmp pop mov inc dec lods cli and xchg cmp xchg mov lahf ljmp push pusha mov lret push (bad) adc add jae sar xor pop jecxz inc loop xor push fmull ss cwtl aas stc jp push into je repnz push pop mov movsl outsb mov mov sbb xor call sub cmp addr16 jnp jg or xlat push jl adc mov ss insl xlat aas test mov pop mov inc fsubrl pop cmp loopne lret xchg xor xchg and addr16 cmpsb push enter ret das aaa xor or or and rorl outsl dec cli inc push sbb cmp xor es xor les scas addr16 ds nop sub pop mov or aas cmp fsubrs jns,pt rorb repnz outsl aas xchg jns pop rorl mov or aaa pop jg sbb sbb cli xchg pop lcall jmp push lret flds jb sub xlat mov les or sbb sub dec pop cmp jmp xor xor lahf jge xchg aas inc insl push ljmp loop push cmp in call adc ja test imul mov mov std xlat jne add add aad (bad) div lcall fldenv pop in adc imul sahf imul popa jb add dec daa dec stos mov cli push xor pop out sub ljmp cli or lret jle pop add std (bad) adc je lret (bad) fiaddl ficom fwait insl rorl dec mov ja sub and mov push jne cmp jns scas hlt call test stos fwait out (bad) addr16 imul movsl mov pop sub push in arpl push pop xchg adc xchg add push mov call in test mov pop add and jp jae movsl cmpsl and into xor mulb out fadd js or jo pop adc std xchg movsl push stc mov and or xchg mov pop xchg es into movsb adc out (bad) in sub lds lahf cmp and pop mov sbb div mov inc pop inc repnz scas dec mov sbb fmuls lret out addr16 pop out aas xchg xchg and hlt xor cmp push lcall shr dec sub push out rorl sbb test test dec or xchg pop push cwtl and cltd add xchg jae dec push stc pop sub hlt or fbld push inc cli inc xlat pop lock (bad) (bad) xchg test cltd mov popf cmp (bad) dec and add je sub insb mov loop scas xor xlat fs popf iret ret jb fwait push sbb mov dec sbb inc lods push cmc mov lea mov dec add dec jp (bad) xlat out add call mull sbb lock outsb xlat ja out dec inc mov pop mov call rcr sbb mov mov notb cmp aas mov push es imul xchg pop into xor cmp add dec jp inc jno imul and xlat adc jl xorb insl mov hlt inc cld rcr pop rcll sub dec pop add nop sbb push adcb cltd fs daa xchg push nop scas jle add xor sub int3 out lods hlt xor jle dec out inc jne inc in sub xchg repnz lret dec subl mov cs jne int data16 and mov aas and push ss push xor out test push push test and scas mov lcall jns xchg xchg loope push fidivr fdivrp rcl inc out jnp inc addr16 shr cmp pushf pop daa rorl daa shll dec lret push nop xchg fsubs (bad) ds sbb pop pop addr16 lret push pop push (bad) mov mov fstps icebp dec jp xlat xchg add mov out xor addr16 popa fmuls mov lods mov fisubrl out push pop sub sbb inc jl divl ret outsb pop xchg xchg pop repnz jp imul sbb cmpsl ljmp rorl xchg adc mov push sbb push push fimul sbb lcall xchg pop xchg xchg incl imul inc push dec arpl xchg je in icebp (bad) jne inc es jbe xor mov jbe decl mov mov ja mov test xchg sub jl jge sbb sti stos and out aaa add pop scas xlat add jns cs or mov dec pushf addr16 adc xchg push out pop test pop mov arpl popf jae fistpll xor out cmp sub add jns xchg jg outsl mov fwait adc jno pushf push jns test outsl pop sbb or addr16 in pop in insb mov dec outsb or call lcall out imul imul aas jp je push jb movsl pop and jp xchg jne xor push jg xchg push sub inc push mov ss dec push inc movntps subb lcall repnz dec or lahf test loope dec outsb pop xchg cmc negb es jg aaa mov mov int ja xlat xchg mov inc fld dec add mov das xlat mov out stc pop mov int3 aaa dec inc negb lock popa pop pop dec and fimull (bad) jmp lret push jle test and nop inc cld lahf (bad) mov (bad) jge pop xlat popa jno incb mov jae ljmp enter cmp movsb clc lret mov addr16 aam dec mov jbe movsb shll loopne lock xor and out mov ss mov bound outsl fstpl sbb test arpl lea jno jge test xchg imul push mov jno int3 in mov lcall out or fild stc mulb int rcrb sbb xchg sbb or lret sbb pushf sub (bad) and inc movsl jecxz jmp dec outsl mov xchg xchg xchg (bad) jge negl inc push pop imul (bad) jmp loope push sub addr16 scas add repnz (bad) mov cld iret movsb jbe stc xchg push pop insb sbb inc movsl mov jg mov das cmp popa pushf test dec or dec push cli (bad) xchg inc fisttpll inc jecxz mov xchg outsb inc xlat jo icebp sbb mov dec push xchg test push out mov cmc movsl out test cwtl push arpl aas clc and idivb sbb xor or jp sbb sbb dec out dec xlat jne jae pop xor jo mov lcall ffreep fwait (bad) inc test arpl ja and jnp xlat push test inc jns call cmp jmp inc and pop pop sbb push sbb inc jle push xchg jne repnz push xchg mov jo push inc jae popf jg outsb fdivrs loope aaa scas pop ret ljmp out jmp sbb lods rcrb arpl and (bad) outsb inc shr cltd ljmp xchg fnstcw push xlat hlt movsb nop add loop cli (bad) stos add cld (bad) mov pop pusha popf adc lret into insl flds mov xchg int3 xor cmp and sbb outsl stos xchg pop push imul fsqrt adc cmp push lcall (bad) cmp das inc cmp imul inc jle or arpl mov sbb sbb xchg jmp pop idivb daa xlat inc out xor je mov pop mov xor stos or push xor fidivl add and imul pop loop (bad) xlat gs push fdivr dec fimul pop outsb sbb mov lret xor loopne leave fisttpll xlat pop ljmp mov fldenv mov loope push fsubl cmp lods dec mov out lock sub pop jecxz pop mov and mov pop sub sbb push enter or xchg xor push ljmp lretw pop mov stos repnz iret ja jbe push pop jbe fwait pop push scas or dec imul push push jp andb push pop int3 mov push mov jge mov inc cmp jns push lret jmp sub pop ss cmovno and popa in mov push scas lods neg ss add rcrl dec push or mov xor xor decb ds sbb rcl cmp jmp js (bad) xlat cmp orl ljmp adc test cld dec jne imul test aas lds push cli mov fcmovbe xchg mov dec mov test sbb jo mov popa cmp jg ds and add insl mov jns test lret sub jg loop jno pop (bad) lret dec adc jecxz shrb insl cld mov adc arpl add push sub or in xor (bad) cwtl jp jne sahf sub insl test outsl mov stc insb sub xchg cli addr16 jb cli pop push movsl in jb pop jae jo scas push jbe jae jmp dec (bad) cmc aaa cmp inc and mov (bad) xchg jbe ljmp sub mov mov lahf nop in enter lcall push ret or cmp and pusha insl xchg jbe mov ss out sub aam inc outsl push push je mov or push xlat sbb pop or xchg pop cmpl and cli ud2 arpl sbb addr16 icebp cli arpl aad outsl (bad) xor fldl cltd dec cmp or jge lret mov push ja das adc mov cwtl repz jmp lock cmpsl adc dec popf cwtl xor sbb and iret add inc fnstcw pop push xchg xlat mov fstps xchg stc sub jmp jno push jg jge or sbb in test sbb aaa push out pop or inc dec scas cmp jbe ret iret lods pop out cmp adc lret mov mov imul in jg sub mov fild pop sbb repnz jae aad xchg loop orl sarl lods sbb and inc push xorl or cmp in pop adc xor adc cmp mov repnz sbb lret fcoml push pop push cwtl sbb inc dec or jno iret imul insl subl xchg cmp subl stc movl jge es mov add daa cmp lock adc jg movsb es cltd sub aas add mov xor pushf ficompl lret fwait insb dec jns mov add dec cltd imul xchg mov cmpsl out jbe cmpsl jg add int jmp pop mov repz fcoml (bad) mov dec arpl rorl test clc mov test sahf push rcrb es pop adc mov jns sti sar sub gs jno cmpsb add jns pop pop push pop lret or xlat imul sub loop jb jmp jb ss lret xchg in in into (bad) divb xlat mov inc (bad) xor or insl cmc pushf mov jae dec (bad) out inc dec fwait out inc adc daa xor movw std sub mov lods test or loop jo and and (bad) sbb pop test stos jb jbe cmp int3 mov movsb and ret cs add adc pop imul cmp cmp adc cmp sbb cmp ret aad mov xchg (bad) and nopl not jo dec mov loope hlt and aad and loopne adc sti icebp getsec mov inc lock sub data16 xor and or sub add aaa mov cmp dec ja inc popa jne shlb test scas push shlb push out fwait fs mov cmp mov or cmp pop dec shr gs lret (bad) fisttp sub push out scas loop cli (bad) out sti sbb mov xchg cs inc cltd jge sahf mov mov pop je lret decb xchg arpl jns testl gs jne pop add (bad) repz jp shlb dec adcl in insb outsb stc pushf inc mov push std and sbbl xor and nop dec xchg push jb aad out stos andl jno pop mov dec js add xlat jae repnz ja out insb ret sbb mov cmp mov arpl xlat loopne repnz pop fimull sub out mov popa in test xlat jp adc xor les jecxz lods push (bad) cli ror mov (bad) insl aam ror loopne mov sub popa mov sarb cmp ja imul push incb dec outsl pop std in xor sahf movb (bad) fadds jl adc sahf in mov xor icebp aam fxch push aad sbb imul in adc lock mov mov cmp jmp push sbb aas mov cmp rclb jnp xchg pop aas cmp cmpsl repnz adc lcall mov mov jo sbb mov adcl cmpsl cli or call adc loop imul (bad) xlat sub push hlt xchg test or ficom sbb dec dec cmpsl dec or out push sub cld hlt sub mov mov push push pop sub sub cmp mov fistpll jae test incl in shrb or add in jle fcomip add bound cmp movsl cmp mov xchg adc push test and ljmp (bad) xor and dec cmp std repnz lock dec sub mov mov or sub cmp cmp out std (bad) cs pop imul pop sub sbb in mov mov mov adc jne loop mov mov out and sub push lahf jp ja or imul cld iret mov fistpll mov pop add out jge sbb shll bound or adc jb sbb xor fldl int3 das xchg pop adc sub cmp xor faddl and jg bt lret (bad) aam push ljmp mov dec sbb push lcall dec arpl (bad) xlat adc sbb or add cmc (bad) add jne (bad) out cmp fiadd mov fidiv xchg pop dec ss jno xlat push mov (bad) cmc int3 rol (bad) jae in dec bound nop jb dec mov mov pop inc mov outsl mov je mov nop inc pop inc bound sbb imul jno pop fs insb push xchg sub sub dec xor sarl push mov mov in dec push push adc dec cmp lcall jno cs sbb ja addr16 jp pop push out lahf movsl dec mov dec adc lret or sti negl fstpt mov inc (bad) adc xor jo add xor xchg xchg xchg lods xlat ss (bad) adc stos inc mov push or xchg jo andb xor pop jns jp xchg and push (bad) pop jmp fs ljmp addr16 sub iret dec xchg movsl add gs out es xchg icebp mov xchg jbe mov andl push cld pop mov jns repnz insb push cmp es lcall insl xchg movb add leave sub jle insl stos movsl arpl cwtl inc lods ja mov pop daa push inc or call push push bound shll mov mov push mov iret into jge test (bad) (bad) mov jge ljmp outsb je pusha arpl or mov xchg jae sbb ja stc test adc and cli push add push imul push std dec fldenv shrl inc jbe xchg es push sub shll or gs cmc lret call xchg push ds jg dec pop sub or add stos mov sbb (bad) aas push dec insb lret vunpckhps roll cwtl lods sub pop sub into sbb gs cmp cmp push jp ja cmp gs pop test pop jbe adc fwait daa push addr16 pop mov fidiv sub sub movsl xor mov andl mov and and ljmp test and mov test pop xchg xlat popf stos outsl push push hlt jno mov out das xlat xchg std clc mov sbb leave pcmpeqw cmp (bad) js divb or adc scas imul mov sub sub xor out push xchg xor mov rclb sub pop jns inc add pushf addr16 sahf je add hlt jns dec andb jmp and stos add and mov pop ljmp shl nop mov mov arpl jno clc sbb lods idivl pusha jp mov mov xor es call jnp ds insl jmp idivl xor xor je ljmp lahf jp mov ret push push es lret cmp mov push mov scas dec cmp dec xchg jo dec nop std addr16 aas push cmp data16 adc popf pop lret gs push cmp and xchg das loopne insl dec jge or es and jl xlat add cmpsl jne mov xlat (bad) aam fwait imul sub jae mov out lret mov arpl push aas enter inc mull inc aad push rolb lock push and ss cmp push dec xchg insl inc mov mov mov aaa js pop sub mov jp xchg xchg movsl pop jns xchg pop sbb push jmp sub rorb lret xor dec and or cmp mov mov jb stos data16 mov stos xlat in (bad) out cmpsb xor sub jnp cs sysenter cltd (bad) aas jge decl push call lret inc lods ljmp clc adc xor xchg mov mov xchg jg jne je out cs not lcall jno es sub sub add xor addr16 mov xchg pop aas mov xor jmp sbb push pop aad push adc pop cwtl push (bad) test daa jmp and cmpsl in cltd cmp popf cmp push adc pusha inc xlat inc sbb push adc negb jne mov data16 jb xchg std dec imul daa mov mov insl jle xchg jnp pusha loope imul repz or xchg inc jno or insb jp xlat cmp sub or adc mov je ss adc inc rclb push fldl addr16 loop sti out xlat dec in mov and pop insb xlat adc push outsb sbb cltd sbb mov push and cltd add jns lret xor (bad) shl leave jb arpl mov fldz aas xor cwtl jmp mov test sub jbe mov sbb sub lods ret (bad) jne xchg imul lock cmpsb xlat scas push cmp inc mov les xchg je ficompl (bad) xchg and push je jbe icebp lahf std jae jl jg movsb loope aas dec pop ror add in sbb dec and inc mov dec xlat and into pop inc adc ss cmp (bad) jbe ret sbb iret aas or xchg movb pop pop and mov push into sbb dec inc xor loope and adc pushaw push cli imul jb inc stos mov in mov adc movsl pop lods cwtl in push fidivr cmc test adc stos clc xor lret mov xchg outsb pop lock push mov (bad) xor and mov (bad) xlat ss (bad) and test add adc dec mov sub jbe push fimull fidivr cmp in rolb adc jp xor lcall (bad) cmp push push jg rolb mov addl pop (bad) lcall ret dec ror mov sbb in xor sbb sti mov cmpsb ljmp insl not mov lcall fiadd or lock bsf jle jbe or pop in push mov cs outsl push and sbb adc adcb pop test cmpsb ficompl into nop mov push xlat lret dec outsl sbb mov pop and mov bound enter mov fsubrs icebp (bad) cmp inc fwait imul and xor cwtl push mov jg scas and and sub daa cwtl mov mov xchg es pop arpl stc jp popf inc xlat aam lea push xorl xor cmp outsb push shrb sarl jp ret inc sti pusha or cltd xor inc out lcall test (bad) mov and jbe or mov pop push jno (bad) pusha fwait jno push in rorb addr16 jbe ja sbb ret (bad) and inc out adc push inc popa dec imul and movsl sub sub lcall jl jg aas ljmp (bad) jbe inc mov mov popa jmp rcll in push sbb lods daa lcall mov cmpb scas mov xor jne mov dec and cmp loope pop xor push mov xor das or mov cltd pop cmp pop jle inc inc adc stc neg mov in loope xlat ljmp into pop or out popf outsl loope dec dec adc out outsl fsubr out mov mov dec jge and fstpt cli sub scas xchg mov test pop pushw pop sbb insl in je into and mov mov pop mov dec cmp imulb jmp mov sbb shrb imul repnz xor pop or gs sbb jmp xchg pop lea gs stc sub add pushf mov jp daa add jae cmp jbe jo loopne repz xor dec pop push sub adc xchg out jp xchg test sub pavgw (bad) jne push cltd icebp dec cmp adc test push push cltd ror (bad) xor push or je pop push cli lahf adc jne mov lahf arpl mov or inc lods lret mov movsl push aad mov mov jne ja xlat ljmp or or pop outsl mov cmp test jae sbb pop mulb insl in xor cmpsb mov out in dec xchg rcrb insl out cmc fdivl sub push jmp inc and dec push push sub push insl push divl in test adc into jp,pt xchg cmpsl cmp jp imul ja sub fwait xor clc (bad) xlat (bad) or lret cld stos and dec fist xor fidivl sbb ds cmp pop call (bad) cltd inc dec imul xchg outsl (bad) jl roll push mov mov push mov repz into push inc (bad) aaa pusha xchg ja sbb lock pop push inc mov jg dec sub mov xchg adc cli imul packuswb jns push mulb adc sub into cmp stos (bad) int3 insl notl test stos cmpsl cli pop into xor aas mov test mov aaa into data16 fmulp out sahf in pop mov lods pop out sbb and xor scas sub call es sbb mov inc fimull add inc out cmp mov jbe hlt aam movsl sbb fist outsl lahf repnz mov cmp jae je jns inc xchg adc inc mov cmp test jmp push xchg xlat dec xor bound les and pop xor or mov das (bad) bnd fmul imul fsubr fbstp insl inc mull repz or in pop mov mov add (bad) imul imul movsl lret mov mov mov scas ljmp ja mov cmp xchg add inc sub loop lea (bad) shrb clc cmp push inc jbe mov mov push loop pop ja,pn sbb pop mov aam and xor pop jns je cmp xor jg dec pop push hlt outsl adc std call sub jne mov scas inc aaa fistpll fisubl sub inc fsubl cmp inc in mov in daa movsl sub mov jb cld divl (bad) mov repnz push pop sub popa pop into jmp sbb xchg pop (bad) bnd push add mov dec jo js push imul cli movsl addr16 (bad) pop addl lods xor and lret pop dec out (bad) fdivrs cmp scas sub pop inc (bad) (bad) or add out sbb pop repnz push and dec bound jb cmp mov cwtl dec arpl dec jmp call jp sub jae movsl pop xlat mov int pop jno mov cmp lods push das enter pop test pop add imul outsl jb push mov aas pop or dec inc lcall pop popf arpl add push lret sti enter push rcll shrl push lret push jg subb test inc xor lret mov cmp jnp call (bad) dec or fs mov sbb xchg sub lret aas xchg insb aas mov aas inc mov adcl sbb pop shll lret push push push dec imul stc (bad) cmc adc pop push fcomip jns enter movsl stos lret inc adc out pop lods push test shrb pop pop lret outsl sub mov out pop xchg fldcw pop sub push ror (bad) push frstor sub mov xchg test movsb and dec (bad) sbb test out mov frstor dec iret (bad) mov incl push and enter pop rcll and into cmp cli outsb cmp xchg dec insl inc sbb pop mov lds pop cmp mov enter imul sbb rcl loop xchg data16 data16 push xchg cmp pop cmc outsl jae sbb xchg pop xchg mov add mov sbb push ljmp push lret push rcll push inc out and aad mov iret pop (bad) cmp xorb jne cmp sbb icebp mov js xchg ss add sbb aas cmp btr pop hlt out gs jns push loopne or out xlat fisubr repnz js mov sbb cmp clc in mov call xchg and ljmp pop xchg push stc xchg dec in mov push inc imul or (bad) push cmpsb xor add out and mov sub enter add push negl sub repnz int jge or cmp xchg outsl mov dec stos pop push shr mov nop sbb inc jg jmp arpl aas pop pushf outsb push ja scas movsl inc xchg xchg je fbstp mov or inc dec pop sbb mov test xor jl xor cmp rol pusha jle fdivrs sub inc add pop xchg int dec aaa fisubl jae (bad) jbe dec xor cmpsl daa test push push inc ror cmp pusha mov negb pop dec pop (bad) xchg lods imul xor inc lahf dec arpl xchg sbb pop push sbb addr16 fsubs pop test push xor aam sbb arpl inc push push popa dec clc dec sub jp xor xor jp mov das inc stos jae out imul mov jb dec out js xchg les jae vorps or fstpt or pop loop fadds je js aam push sbbl movsl jl out xor inc jge insl mull outsl lahf mov mov dec fdivrs aad sbb add fidivrl xor cmc pop xchg jb mov mov inc lahf fs test or xchg clc add cmc mov scas out sub inc clc inc push test lcall xchg loopne sahf popf aaa rorl lods (bad) icebp rorb stos pop mov jmp pop push (bad) repz rcll call pop push mov xstore-rng cmpsl inc lods pop ret push jb cwtl push clc pop pop mov out insb repz ljmp call jbe movsb pop push mov loope icebp dec jecxz add pusha push orb cli inc inc lret add gs add les xchg pop pop xchg addr16 xchg lcall xor pop pop rolb inc dec jno mov pop push outsb push cmp mov lret loopne std nop inc popf cmp ja dec ljmp dec scas dec iret aas pop arpl or cli push jae push push arpl cmp mov push adc insl pop mov repnz push gs xchg sbb test fildl movsl push push (bad) sbb inc jbe and xchg xchg repz or add xchg push jmp jae jle dec cli lods test jae lret imul dec xor mov and jl sbb xchg sub cmp outsl mov imul jbe ja sbb ljmp sbb leave (bad) cmc cwtl push vmwrite dec (bad) or setnp jp das (bad) cs nop push push addr16 xchg pop js nop mov pop sub fldcw bnd pop fxch sub imul push mov cwtl jns outsl addr16 (bad) fld1 pop push lret push (bad) lea jae adc push cmp jmp dec fisttpll ret pop inc add dec ret mov je xor loope mov sbb out or push xchg loop mov out xchg sbb xchg (bad) cwtl pop aaa insl xlat aam sbb and dec dec je mov xor push aaa xchg jge jne mov cli orb jae pusha jns loope jp arpl cmpsl jne into outsb ja xor out subb out lcall out and popa cmpsb aaa jb incl xchg fmul lret add fidivl (bad) cmp fucomi popf cmp arpl jnp (bad) xor addr16 jae sub out imull ror mov outsb lods cmp pop je xchg mov mov enter cmc out js fwait (bad) inc je outsl push jne pop clc inc dec inc negl mov enter push fwait mov mov movsl call mov fwait je ljmp arpl xor and (bad) cli enter ja jne sbb orl cmp (bad) cmp js sar dec bound sbb (bad) cli iret jo push inc cli push lds sub adc dec decl ljmp mov std loopne movsl jns es decl jne mov call mov pop push shlb xor adc jo pusha pushl pop scas (bad) xor lahf mov popl pop sti cmc cmp dec jno repz outsb out mul xlat nop sub jno out cmp pushl cmp push jns jae je adc mov mov cmp mov scas adc pop je jne push js push push cwtl sahf sub ljmp jae adc outsb sub mov cmpsb std in cli ret inc dec pop push out and xchg ret scas daa dec test xor idivl xchg dec (bad) test fdivrs pop cli lahf out fmuls or push (bad) cmc andl sbb dec bound lock push mov sub cmp dec push xor fnstsw fistp data16 sbb mov adc call push imul dec push in repnz mov lcall adc mov push repnz xor mov add fistp (bad) js cmp pop mov pusha mov xchg pop notb push ss mov push lahf dec pop enter mov or mov mov push idivb mov pop ss pop pop ja movsl call mov or out repnz test sub jae mov mov gs clc push pop jb mov inc mov inc rcll lods jl es daa subl stc jae cmp push inc and fldenv pop push mov inc xor fbstp outsl or fnstcw add push xchg aaa push movsl sbb push mov fwait add jg stos sbb inc call push leave inc stos sub sbb inc jbe adc jp test divl hlt mov addr16 ret aad mov clc mov xchg push sub js sub shll fs push enter cmp push pop xor fwait pop inc mov pop scas lds mull jl sbb notb popl sbbb cmp lret cmp mov cs inc dec add or jle mov pop outsl sbb jns xchg dec mov inc outsb mov mov std lret dec inc dec lret icebp (bad) lret jae cmpsb test jbe push mov outsl mov lods scas and clc pop imul idiv push outsl rcrb jns out orb ds fmuls icebp dec and xchg sub push adc add popa push nop cmp es pusha jp inc jp jo push or inc mov cli cmp adc jp (bad) hlt fwait cmp lahf insb ss jg dec pop dec arpl imul push lahf imul imul fwait jmp or dec jae dec dec cwtl pop outsl out push and dec lcall inc mov xor mov (bad) test inc imul push pusha leave test movsl arpl divb int3 add sbb inc jbe scas call xor out add ljmp adc pop pop imul jno fwait shr mov cs xor adc stc sbb jp xchg js outsl std out xor femms jne pop sar and push aas inc repnz jp cmp mov sub or inc dec push xor vpshufhw adc push inc mov mov jae cli repz add (bad) call cmp fidiv pusha jl shrb popf popf pop call packuswb dec sbb (bad) std es imul cmp fisubl sbb lock aam pop div ljmp jns cmp jo leave push add (bad) movsb jmp pop out pushf mov ret scas repnz mov pop mov insb iret fiaddl loop outsb push sbb jo (bad) repz inc stos push jo pop lahf xchg cmpsb mov jae (bad) (bad) aas ja jecxz push mov xchg lock aam pop jns inc pop pop sub mov dec xchg jae cmp ja mov dec pop mov aas dec out or rolb cli scas or jp,pn repnz pop inc cltd inc mov jl pop outsl out pop insl xlat pusha or (bad) js push inc lock ret (bad) ret ret pushf adc jne pop fwait xor and pop xor neg xlat das lcall clc mov rolb cmp cli insl imul fwait je iret gs and xchg sub dec and sub cmpb gs xor insb cmp out cli out cmp insb daa inc cmp ljmp pusha pop jne mov push mov pop jmp jno dec in push mov scas shr jns mov sbb lret cmp (bad) inc pop lret push sbb sbb arpl rorb push inc push mov cmp add push mov hlt jb add jne inc popf stos sub adc rolb movsl mov push fdivp cmp xchg repz outsl lahf je mov dec inc and inc cltd mov loopnew or xor (bad) (bad) test out cs mov jecxz div dec cltd test inc (bad) dec or sahf mov jno add outsl inc mov xchg clc fimull sub loopne sbb push jge,pt adc mov int3 mov pop mov push in inc repnz scas mov outsl inc ljmp aam pop add rcll addl push pop push (bad) lods xor shr lods leave aam aas inc pop movsb jp pop or lods icebp mov mov xchg popl lods out arpl rep sub sbb test arpl std mov int imul push in xor test jmp out mov pusha cmp jno fnstenv and cli jle push in mov es pop lret ret pusha testl pop int leave and cltd hlt cmpsb pop jl (bad) lods mov xlat lret insb mov inc jb dec push movl popa cltd rorl sub push repnz into dec mov shrl dec mov outsl js adc ljmp negb sub das shrb cmpsb stos push sub push js mov pop sahf lret pop (bad) mov pop xchg cmp (bad) (bad) xlat jb mulb (bad) jne pop or sbb ficompl sub das jns sbb pop lcall imul cmp out (bad) aaa sub and (bad) jp pop not sbb scas xchg repnz pop in cmp imul and (bad) cli sbb xchg dec xor cli sbb xor pop inc (bad) (bad) in push popa xchg cmp mov adc cmp cwtl mov aas divb aaa iret nop xor ficom sbb lahf jl add cmp mov aas call pop js inc (bad) imul mov cli repnz sub mulb push repnz sub notb xor cmp push and decb jbe rcll sub lret push ret mov adcl cmp pop call mov call (bad) sti testb push jne (bad) enter movsb (bad) repnz xor dec rcr cli jno orl inc cmp inc xor js cwtl rcll aaa mov movsb leave mov addr16 mov jb (bad) cmp pop jb popa push sbb dec cmp adc sbb bound mov out lcall push cmp movsb cmp and aam mov dec pop adc popa jb repnz popa jns jno (bad) insl mov outsb cmp mov mov mov sbb mov sbb cmp pushl push sub cmp enter mov incl fidivl jb aaa push pushf xor mov mov imul push inc cmp sbb idiv dec insl pushf xorb (bad) gs imul in lret xor pop xorl in sub std jmp fnstcw cli xlat sub lcall cwtl lock pusha stos mov jne cltd ds lcall push jp cmp jns sbb (bad) mov xchg outsl xlat (bad) mov test (bad) jae push cmp mov push xlat aam clc popa test in imul or shlb mov fdivrs jo xlat adc mov lds dec gs jl dec icebp cli mov stc repnz mov addr16 pop (bad) push jp xor imul pop mov stc cli pop (bad) push inc xlat add jbe popf in out sub (bad) divl (bad) dec inc inc jmp pop pop popa arpl xlat into inc jbe jns dec cld into in test (bad) ret imul cmpsl fcmovu imul or out stc imull jb jno add jbe xchg aaa cltd xor stc cmp dec pop jae popa mov jbe mov sub cmp jae in sub jge jp aad sub icebp cli jns das xlat or xchg dec fst jae mov divl inc dec mov jp cmc cmc js in jns cli call addr16 cli outsb jp incb in int daa js sti adc lcall mull lahf imul sub xlat rorl out cmp (bad) sbb out jnp bound je xchg xor mov sub cmpsl and xchg shr or inc stos push inc mov enter pop mov test ret call or pop mov and stc imul jb pop and faddl inc mov dec cmpsl in or cli jb cmp sub lahf clc pop mov push cli jb jl stc pusha push mov daa dec in sbb push or and dec mov fnstcw in jb push leave jp loope imul fprem mov cli pop cmp in xchg dec or das imul sub pop sahf in dec in sub jp xchg mov pop jnp push pop cmp xlat fisub in inc dec nop roll in sbb cli jb pusha jg addl jae jmp mov sub gs clc in or cli sub aaa popf into jae sub sbb js mov dec stos jae fsqrt lods push mov sub sbbl mov fmul in imul lcall data16 sub imul sub jns leave (bad) dec es mov in js decb cmp mov clc push idiv ss nop (bad) ljmp lock in jns aaa divb push (bad) inc mov lds fistl inc in out jp jp aas xor icebp xor or in js imulb pop jmp adc jns nop clc cmp jp dec adc jp into repnz jp js inc xor stc imull jp cli jns icebp pusha je jne dec sub jp jae jle (bad) dec xor jbe gs mov or cmp imul cwtl sub jp addr16 (bad) mov add lret (bad) sbb cli mov out cmpb or jne pop pop das xor out sub jp mov inc div sub mov jp and dec std push sbb cmpsb aad jne push fcmovbe scas cmpsl mov iret sarb sbb cmp les aaa jle negb in mov (bad) clc call pop sbb jno insl subl cmpsb pop mov ss cmpsl out xor js xchg (bad) in pop mov loopne fiadd cmp arpl repz sub jp test outsb or dec dec cli xor jp jns ljmp or jp xlat lds mov xor push jp fs sbb jmp cmp jg mov or jb pop call jp dec jle jne sub out xchg ss dec or sub jp scas mov divl add in stos push mul jb cs mov pop ljmp pop sbb scas data16 icebp pop clc test mov or jnp pushf push push neg jp xlat mov in mov jno aas in leave sub jp xlat add ss xorl sub jp outsl xchg dec stos in je in push divb pop lret push mov mov jb pop or xor negl inc pop pop in mov xlat cld cwtl sbb lret pop jns in jb pop mov std mov cli lret xor jb sub mov js mov ljmp xchg pop fisttp js mov mov mul jge idiv sub lret adc aaa lret jp inc adc jbe xchg jnp xor call jp popw jb jns push clc sub jp and mov push (bad) (bad) cli jb xchg sbb sahf push dec push notb sbb mov push lret loope mov jbe lcall sbb fmul sub neg gs cli jp or jns mov fisubl pop add bnd xlat jnp in mov into mov dec stos xor jnp pop movsl psadbw push lret je imul xor jp xchg push pushf sarl jp lea in jb and fs xchg lock xchg cld lcall dec aad ja push pop in inc aam xor (bad) xor nop push add sahf cmp in mov push fistp sti ljmp jmp jnp sbb xchg add aad fsubrs dec mov fnop mov fstps xlat and daa jmp inc (bad) jb mov jmp jg (bad) jbe call mov add push dec mov mov jns adc fdiv daa sub enter cmp mov pushf jmp lea jno ja cmc test shl sub and add pushf shr adc stc mov not shl cmp mov test test repnz call pusha lea jae inc push pusha pushf mov setne inc push jmp push pushl pusha lea je add shrd rcl add test neg sub bswap not bts shr mov pusha bswap mov sbb add bsr add rol push mov jmp mov push setne lea push pusha movb movl call btr mov jmp cmc add pusha pushf test cmp pushf movb movb pushl lea jb cmp call dec mov mov jmp or inc push sbb movsb push fsubs dec leave fs push sbb or jl out pop mov into std adc dec iret scas out lods jge outsl scas aas or addr16 sub push cmpsb mov jl xlat lahf stc push add xchg sub sub arpl lea mov int dec and add je outsl fs gs imul add fisubrl pusha movl call push adc movw push lea jae pusha pushf lea jne pusha movb call jne jp jb push movsl adc pop mov mov sbb jne lds cmpl xchg xchg cmp xchg fs mov push mov sbb rorl sub jne lods or push loope add jbe clc xchg mov loop mov into imul outsl and popf jne mov adc mov pop insb pop pop loop sbb mov pop movsb fcomps xor add fiaddl enter adc sbb and add jecxz sarb nop dec or cld pop pop add mov mov dec jecxz lea mov mov ljmp pop mov cld xchg addr16 dec xchg and xchg cltd jno call es or loope pop xor arpl push push jae lea scas aam out ret js pop and jl sar mov add scas (bad) popa and or pop cmpsb cs fwait add jp test out clc dec mov dec (bad) fcomip pop into inc mov test pop jae sub je ds sub cmp fnstcw lods and shrb cmpsl int3 ds bound in test das sbb clc pop mov add dec cwtl (bad) imul in adc mov lods jp inc cmp js xor pop fwait push outsl pop insl int dec into inc jae pop stos xor xor lock jae sarl jg enter icebp jmp fidiv in cs inc or daa (bad) xchg repnz bound fs mov sub mov sbb pop jne sub add add cmpb out cvtps2pi add sbb push js lock inc add (bad) pop sbb inc sub lds and inc add ret mov je shrl add ret xor add add loop movsb sub leave jmp stos sub fwait adc push out movsb sub add cld cmp fidivrl in sub dec mov xchg jecxz dec sub add test mov sub in loopne nop xor sub rcll sub add add mov icebp enter add hlt dec sbb cld push les inc add cld das dec adc aas pusha iret sub lock add das sub add (bad) dec mov sub in and and cld pop jge sbbb (bad) into sub add cli gs lcall add mov cld mov cmp repnz push insb out jle repnz add add into push je (bad) inc add add dec movsb rolb add pop pop xor clc loopne sub add add aam arpl es add enter xchg mov inc add clc and loopne sub add add inc sbb lods xor inc add add push add call mov sub add loopne adc lret test icebp sub add add gs inc cli dec sub sbb dec out icebp sub add add mov xor inc add add sub pop nop icebp sub add add xchg in outsb (bad) int3 icebp sub add add sar (bad) movsb icebp sub add add mov icebp sub add add in add lock es add (bad) (bad) cmp das es add add mov sub add add adc or add clc mov test sub add fidivrl addr16 add pusha fildll stos call das es push scas (bad) out dec in test imul lods and rcll flds add push pusha popf incl xor insb iret xchg outsb leave mov pop rcrb xchg js pop les or sbb or jge jae cmp daa cmpsb sti mov cmp add lds cltd cmp loop mov movsl in movsb push cmc mov test shl outsl xchg div add (bad) jo and xor push aam inc clc push outsl xor push mov dec arpl adc and mov add not mov cmp in and out pop xor es outsb (bad) insl (bad) cmpsb fidivr and sub daa outsb test and mov xchg fldenv mov mov pushf bt cmc clc ror pusha jmp stos add jo inc push popf adc mov or pop mov ljmp mov xchg push stc shrb sub pusha ds fisubrl mov jne insl mov inc add arpl arpl dec fsubl sbb dec cwtl popa mov mov adcb gs in dec sti sbb add pop out jae jle ds inc inc (bad) test and outsl xchg dec xchg push lock je in int3 aad test and and stos jp or cmp sbb mov jnp fild sbb mov scas xchg rcl add cmp mov and dec push (bad) lock imul iret jne mov sub push xchg adc lret push fwait jae aaa lahf jg sub or mov out push pop sti pop push push aam leave outsl dec sub mov cs xor push xchg push sub pop add (bad) push js (bad) or jmp mov mov cli cld test test jae jno lret mov jns hlt hlt out mov jns mov and fwait mov jno pop adc mov sub push mov cli outsb fcoml fsubp pop mov pop mov sub add inc pushf add or mov (bad) xor fistpll test clc test pusha pushf cmp push lea jb cmc cmc cmp jmp bsr lea xor bswap pop setno movzbw pop xchg mov movzbw call leave mov mov inc push movsl in adc pop ret jp (bad) mov bound dec aas xchg in bound mov leave jmp pop mov inc test adc out push (bad) jle les mov dec push loopne mov es test push jmp adc aam adc jnp pusha and mov outsb stos jp cltd xchg cmp cli hlt and mov xchg stc sub cwtl lahf mov jns xchg cltd xor xchg mov icebp pop sbb mov aam inc cmpl adc push insl xchg inc jns push scas and cmp add repz cmc adc popf xchg xor add xor jo scas imul push int test andl js dec sahf push cmpsl and push outsb pop cltd jnp mov bound ret adc pop xchg sbb mov je fnstenv leave jp push dec les pop mov push sub xchg mov (bad) ljmp test loop sub mov mov jbe mov test (bad) mov test inc cmp jp push cmpsb pop xor popa dec (bad) pop imul (bad) inc inc movsb stos pop add out ret out jge inc xor mov sahf outsb inc pop push cld or or fucomp lea (bad) fnstenv in fwait cmp out sub xlat sahf stos inc pop sbb mov or jl and xor push shrb mov push pop push idivb pop maxps pop xor mov xor imul es mov pop add mov pop insl int3 push fildl cmpsb fldenv repz scas sbbl add inc js je jb arpl jae push add int3 jnp push pop (bad) xor cmpl inc cmp jae pop das jno notl inc jg xchg push xchg adc inc ja loopne ret js popa pop incl inc roll add dec addr16 inc add in jg aas or dec arpl aaa out nop arpl je out sbbl in addr16 mov addr16 int3 mov lods cmpsb int sbb imull xor jno das popa xor add repz xchg push lret aas imul mov clc fisttpl adc pop and scas mov or xor or shll mov push sub ret dec sub sub lahf aam push sti push and mov push mov sub rclb movsb jb fs and xchg out fdivrl pusha mov loope jns movsl mov xlat xchg cld push pop add mov clc xchg arpl and shr iret sub rol fmul xor idivl leave cmp repz pop (bad) jle cwtl add out jmp xor and inc sbb xchg and fs xor jbe ss test push pushl and clc and insb jnp pop insl lds mov mov sub or or or xchg test roll dec pop sarl addr16 inc push jno sub push sbb mov pop inc xchg pop pop cmp inc pop push jbe and pop add lret cmp scas push test jmp sub cmp je fcmovbe lods xchg int mov xor and sbb mov xor push scas xchg lds addr16 xor push mov in or push or popa pop call aad (bad) cmc lret mov rcrb and je lock inc sub push mov jmp mov xor and in mov pop adc fnsave inc xchg push cmp push outsb rcll rcrl decl xor add and jbe push lea jne bswap add daa rol xor aad sar mov neg cmp rcl add pushf mov cmp clc test mov mov lea je test jmp pusha pushl lea jae stc add jne push mov mov pusha pushf mov push lea jmp lea je jmp adc rclb inc push or cli or jle,pn pop mov inc add fs jl xchg mov adc stos inc add inc stc test sub sarl fistl dec cmp push ljmp popf fwait dec xchg shrl xchg lods jb xor in pop mov or sahf out jecxz pop rclb cmp sti add xchg lcall pop out jmp or sti adc lea mov jmp mov fiadd xchg das jno xor dec xchg test imul xor jg mov mov jnp inc mov inc and push pop add push in into mov dec mov loopne mov add aas mov lahf and pop scas fs and mov dec or cmp enter cli flds mov jmp mov xor inc jb enter stos pop lea cmc dec mov dec iret xchg fisubr test fcomps je mov sti add fs je push lea jmp add pusha cmc movzwl add btc shld not bt mov bt push add cmp call cmp pushf call pushf lea jne add mov pusha mov call pushl push mov pusha push mov lea jmp cmp sbb inc push mov sub faddl in sahf adc adc jle push or jns je mov xchg cmp adc in int sbb add in lahf pop pop mov pop (bad) jge mov dec std add (bad) insb mov mov in jmp push scas in inc rorl xchg push push imul rorb cmp cs inc mov jl and (bad) pop test scas cmp sub pop pop adc xor pop cmc and popf xlat mov mov stos fs incb pop mov and rorb cmp sbb xlat pop loopne movd push gs mov nop mov pop repnz mov dec shr rcl mov pusha call movb cmc xor call jmp rol or ret sub imul xchg (bad) mov push mov fwait pop mull xlat movsl add lock stc fs (bad) or in loop xor pop iret cmp test mov (bad) jbe jb lcall pop lea adc stos pop or jae mov xchg sbb shrl pop (bad) lock scas lods xchg popf cmp cltd push out xchg out xor stos sbb stc std sub es or movsl sbb lods add xchg mov adc loopne (bad) pop jl lret add addl outsb les je in mov das out test xor mov xor pop push movsb add and lahf jns loopne insl nop or fcoml inc mov mov xor sarb add or add in cwtl push cmpsb adc in xchg shl sub (bad) (bad) push cmp fisubr pop aaa mov dec sbb dec (bad) imull push fldl out lds and add fs adc jae shrb adc xor call push std or or sub mov sbb cltd (bad) call (bad) das jns incb dec rcll stos inc mov addl rclb cwtl jns and and push jnp sub jecxz dec dec xchg pusha insl mov sub shll fisubr out push fildl push int3 sbb (bad) xor int pushf or pop shll pop lock je xchg inc addl jbe and push lret mov cmpsb dec cmp dec dec mov mov stc sti inc jo or mov lods cmp xlat cltd or cltd or scas push add lret sbb test jbe scas js and xor push mov mov sub loopne jmp cld pusha fnsave notl out rolb add mov stos or xchg shlb test lods imull xor jno jmp popf pushf or sti inc out pop mov cwtl sub insb cs xchg sub in pop mov or bound in cmp sub insb jecxz cmpsl loopne dec or rorb cmpl mov push cmp sub jns stos inc pop cmp insl in mov or bound loopne jl out sub popa in cmp mov xchg cmp les rcrb add lods arpl divl aam mov adc jb fsubrs das inc sub addr16 leave leave notl test iret mov pop add mov lret cmpsb (bad) stc jg cmp mov sbb lahf out pop out out mov xchg sbb mov and push cmp cmpb stos jmp push mov push test ret mov pop int sub mov adc cltd jge popa mov lock inc in xor sub add pop inc stos arpl rorb or pop push movsl ror cmpsl ret adc push fwait stc sub movsl sbb xor cltd sarl mov aas xchg sub sub lret cmp aaa sahf int mov fidivrl xchg loop dec popa inc cmp add es (bad) mov lea ja sets neg not sub bsf add data16 mull mov (bad) mov jmp enter lea cs jmp arpl add inc stc sub xchg imul add mov or hlt dec nop mov mov inc loop scas sub movsb push roll imul push push pop or idivl pop cmc movsl pop les roll aad mov aad adc cmp cltd enter icebp xchg imul mov out (bad) mov xor xchg clc incb mov and stos add push pop mov hlt fwait icebp insb mov fimul push (bad) mov pop fstpl xor leave das cmp test fimull mov jle scas movsb in cmp mov push add cmpsb xor pushf loopne lods lret inc mov stos or inc xchg cmp insl aas das (bad) jle xchg sbb push mov rorb sbb js aad dec (bad) fdivrl mov cmp xchg in (bad) loopne push sbb push add mov insl jbe test mov lock mov jns sbb popa lods sub fdivp insl mov and jp movsl notb or cmpsl add sbb pop jne fcoml (bad) ja mov shll push mov xchg push aaa mov inc aad clc aas xchg imul dec pop mov sbb lea jne not movb setb push mov lea push mov pushf movb movl mov pusha pusha mov push mov pushl ret inc inc push inc push dec xor cs insb add adc mov mov adc out add pusha pushf push lea jae xor mov shr not shrd mov pusha rcr mov cmc test cmp stc xor jmp rolb jno inc push cs aad or xor fnstcw in aad fstpt (bad) test mov sub mov int3 cmpsb ss jmp jge mov add sub mov pop sbb ljmp mov xor push mov cmpsb ja mov cld or mov popf std mov sbb int pop stos adc sbb movsl dec jns aas mov mov adc xchg sahf roll repnz jae or aad js or jb push cmp mov xor mov mov hlt sub cmpsl inc push pop pusha or loope adc call add cmp mov mov cmp mov cmp mov xor test (bad) mov in cmp jae ret jno lcall inc jp cmp jno cltd std outsl jb outsl sbb fisubl mov mov sub fstl in cltd hlt and pushf xor sub push xchg hlt (bad) push test mov mov adc inc shll dec lods dec jge inc fcmovu adc xor lahf mov mov xchg cmpsb and cmpsb into push popf aaa jp cli incl fmull pop ficompl cmp addr16 inc push in xchg nop call lock clc push test pop and shll rolb ljmp jnp shll fcmovnbe inc mov into dec fimull dec popa xor insl adc nop insl daa jnp jmp mov or and jb xchg lods (bad) out ret jmp roll add nop sub sub push insb sti inc adc test cmp mov test mov dec mov mov lea call pushf cmp pushf call adc pusha push pushf lea jmp push mov lea je pusha lea jmp inc fnstsw mov movsl into pop pop leave jmp leave add lret loop push jbe test lahf stos and push fist loope and test push (bad) mov or adc and inc push inc add mov dec sub xor out add shll call mov xor mov and fnop stos jne stc add mull loopne popa xchg or lret out dec ffreep ds xor ret vmovntdq sub sbb adc xlat push inc repnz addr16 icebp mov add dec or notl fistpll stc movsb jmp pop push inc pop sub push mov out jge pop test mov add adc fwait and repnz or mov and mov ror pusha jle (bad) sbb repnz mov or out (bad) adc adc fldcw lahf add (bad) fsub sub or adc and xor out inc dec pop inc js inc sarb lcall pusha sti pop sub adc int3 push mov (bad) and popf xchg scas call pusha loope jbe sbb mov cmp push bound xchg sti dec mov jb test inc rclb rcr push xchg loope push fsubl stc out cmpsb jg dec add mov sub (bad) ret subl and pop lret aaa scas ljmp push sbb sbb inc inc mov mov fs scas das mov inc push fs pop daa out jmp xor fsubrp sub movsb scas mov push add insl xchg fisubr dec mov int jge adc push in add loopne enter (bad) xchg and call ljmp inc lock inc lret insl scas jne popf dec rorb je lret push lret cmp jno add mov mov pop jne or xchg mul sbb mov mov push notl sbb mov sbbl cmp mov ljmp loop mov jmp and push lea ja dec ror sub or sete clc add not mov cmp mov and mov jmp add dec outsl popa fs imul add inc push fist inc cmp ss sbb ss pusha lret dec mov inc xor mov pop inc (bad) (bad) sub mov xchg dec dec sbb sbb and loop pop jo aad push push imul mov mov push xchg push and xchg loop js sarb add sub andb pushf sub pusha lahf jbe ret cs jns decl test xchg inc push in addl lods fildl movsl and sbb pushfw mov xchg xchg loop cltd push push (bad) sub mov dec enter mov nop shl (bad) xor pop leave outsb adc addr16 mov aas icebp popa stc ficompl popf outsb bound arpl mov pushf nop xchg sub aas push and imul cmovl jp sbb mov fimul call lcall xchg cli cld sub fisubr aad xor pop clc andl (bad) (bad) push cltd xchg lds xchg pop xor push pushl (bad) cli pop lds ret push push test jg insl jmp pop push iret js push pop xchg cmp repnz mov mov test inc push add mov push cld jl ljmp repnz out fistpll fildll aad test ss push jnp mov ja (bad) mov jne mov outsb pop mov jl cmp pop movsb clc ss aad out sbb orb cli inc sub inc js pop insl add adc cmc dec and test jecxz sarl out test sub add je adc ror or mov shr cmc rcr mov stc (bad) lock dec xor pusha pushf seto lods pushf bt rcr ror pushf seto pushl inc jmp cmp pushf lea ja clc imul call shrd clc mov pushf test stc stc shr jmp add dec outsl arpl inc jb add sbb ret jecxz xchg jnp jno mov mov and insl cmpsb add lea shll mov leave sub aaa mov stos fcom jno mov or ret cmp mov (bad) loopne add mov loop in and add pop mov not lea outsb sub cmpsb (bad) ficom and dec xor add xlat jmp (bad) mov test add sub (bad) mov lret jg add jle push ficoml scas adc cmp out lret ljmp mov sub push test pushf jmp movb pushf lea jne dec mov bsr sub cwtl (bad) hlt pop mov rcr add inc rcr test mov bt pushf test pushf jmp enter nop inc push push scas mulb xchg enter mov out int3 shrb xchg fimull cmp push add mov push push out js adc sbb jle out sbb adc rcr xlat jmp inc dec dec cmp mov imul repz ja clc add add mov iret push sbb inc mov adc pop mov aas inc mov test mov lret cs lret dec aad dec aam test push dec mov inc shrl mov jmp movsl push fdivs inc imul push adc (bad) jle aaa jle insl mov jnp push lea je pushf mov lea jmp add shr sar call in ss inc push in pushf cli or test adc enter adc cmc pop (bad) lea jno ss and xchg or inc sub and dec mov inc int3 mov mov mov gs fistl jecxz xchg mov sub lods xor arpl fcmovu cmc (bad) lret push dec lret xchg xchg cmp std mov jnp or inc sub test xchg add lret (bad) out test stos jp aas inc pop daa test inc mov std repz sahf jmp sbbl sub test push mov clc sub movb push cmp mov lea ja cmc bt imul pushf test add pusha mov movw lea jmp call mov pushf mov pusha pushf mov movzbl push movzbl lea mov push movw pushf pushf pushl ret add dec popa imul jb inc imul jns popa je inc js jae jae pusha dec stc push pushf test shl call pop mov cmp inc push arpl or loopne in lods mov cmpsb adc jne out cmp or cmp leave sub div rorb mulb xchg push loope cmpsl mov cmp add pop add jae jnp (bad) insl push in add cmp lcall sub mov or and add or jnp rolb and shlb or mov sub jmp dec add adc xchg push mov les sub stos mov xlat jbe jecxz ret cmpsb or (bad) jmp aaa mov jge adc add mov jbe test push rcll cmp scas daa sti or pop mov pop testl les insl shlb leavew inc adc pop ss ja cmpl stos mov xor xor mov mov mov jg andl mov stos cmc jecxz dec push jge repnz mov or jmp loope sub ret fistp repnz and xchg pop push or inc fimull jecxz dec bound pop fisub jecxz das xchg xor das mov jae pop fpatan out xor ss xchg mov xchg add adc addl loope jecxz rcl mov pusha btc add mov bsr btc mov cmp jmp scas push push rcrb mov stc cltd mov outsl push dec in mov adc test pop ret adc or pop scas add cmpsl pop fidiv test jbe or cmp roll mov sbb (bad) icebp add mov mov popf sarb xchg ret mov inc sarl xchg pop and loope dec cmpsl ss mov cmc (bad) daa loopne push out in fsin gs xor out movsl xlat es gs fcmovbe stos imul pop inc mov add sub pushf movb call outsl and xchg push jnp xchg mov and test mov shrl dec jno test pop jmp (bad) (bad) sub arpl (bad) mov cmpsb enter dec fs jmp pop pop enter cwtl inc jne push fild cmp mov sbb adc jg shlb dec mov roll or sahf inc push inc fistpl daa pop cmp jne dec fldenv mov ljmp mov ja rol clc sub out xor or rol enter inc ss ret test fs (bad) cli mov sbb jns jne adc and lcall idivl pop push (bad) (bad) cs (bad) fnstsw iret pop sbb mov xchg mov mov inc fidiv (bad) lret push inc decl push xchg in xchg or mov dec (bad) xchg sub xor sarl mov addr16 ss sbb ret sahf inc push pushf mull inc mov repz cmp stos and or sarl outsl int xor aas repz fisttpll jp test mov inc mov fwait mov imul jbe jge mov (bad) pop inc addb jns push popf repz sub push and dec shr sbb mov or mov add xor and test lods jmp mov push lods aas icebp xlat inc cld dec scas cmp push (bad) push xor lahf pusha xchg imul xchg add test cmc sub stos mov gs cmc popf jno and mov jno loopne xchg stos xorb insl xchg push lods out push (bad) in js fstps jns sub stc push and dec push jecxz jno dec fdivrs xchg add sbb jl cs and mov adc pop movsb enter inc push cmc jmp jae mov push cmp pop and movsl push arpl insl adc in add and in push push add mov out pop lds mov and test les cmc cmp call clc bt add pushf lea jmp push pushf pushl xchg push jmp push pushf pushf movl jmp jmp cmp pushf pushf pusha sub lea push inc lea jmp pop inc lret inc push inc sub mov (bad) fistpll xchg jge jmp dec jns mov pop insl or lcall xorb and xchg vpcmpeqd jae fstpt xor add movsb push mov (bad) into adc jecxz dec repz mov jbe sahf fcomps mov adc push rclb push fsubp movsb insl sbb sbb and int push sub ret cmp int rcl push cwtl and jnp push mov test cwtl or sub stos cli movsl js movsl int mov mov sbb cmp xor inc push lock sbb out sbb out stc sub or nop test cmc aam cli testl out jg test mov or adc or adc lods cmpsb fdivp mov fnsave adc pop aaa into lds out push std pusha push ds fiaddl in insl (bad) hlt int cmp je popf xchg (bad) jmp es movsb leave dec and jnp mov js aas mov dec push mov jge dec popf xor jecxz jmp aam push pop mov out mov btc sbb lea add shrd dec movsbw bt mov sub setg shl mov pushf push repnz pushf call pushf lea jne ror shrd rol mov cmp test cmp pusha mov pushf jmp jmp jb pop lret push xchg lcall dec mov cmp pop shrb sub je or pop pop xchg xchg push test inc xlat ds cmp xor popf adc dec outsl push daa aas out and jne dec mov aaa mov aam jno jmp fsubs mov popf jcxz add out sbb push lods adc xstore-rng cmpsl lds adc aaa test lret lds rolb imul (bad) mov mov test in jae repz rolb inc and push pushl ret lea jne shr sbb sub xor not mov adc add pushf mov pushl push stc cmc test pushf lea je push pusha mov clc sub pushf call lea call jmp cmpb pusha call insb inc mov cmp cmpsl xchg in mov xchg fisttpl lds jle sbb xor ljmp dec loop (bad) mov adc test repnz push inc jns (bad) enter sti ret sub shrl int jmp lods dec and mov mov nop test idivl mov sub aam stc or call pop pop into fiadd bound ljmp ds loop inc addb xchg test ja mov out mov lods pop ror addb arpl fwait cmp lret or pop (bad) xor call push add push sbb mov jo or inc mov ficoml sub and (bad) dec out xchg popf je xchg xchg hlt adc sbb mov lea fsts lods lds jnp pop jge insl mov addr16 and jl addl sbb pop test insb jge fiaddl xor imul xchg xor enter jmp in pop popa mov sub out (bad) imul call hlt dec addr16 sub jne lods leave adc add loope mov or mov lcall cmc cmp mov jb inc fstp aaa push or lock stc mov mov lret imul ret push xchg pop scas mov push xor dec std add test popf jg lds dec and cld sub and sub lcall outsb mov adc mov xchg push ficompl and cwtl jp cld cwtl pop call in xlat xor pop mov cmc lret test cmp cwtl outsl pop mov or xchg cmp repz push jne ss mov ret mov pop dec je data16 pop lods dec cmp or jmp test loopne sub xor adc sub pop ja pop pop test (bad) ficoml fldcw and jb clc push aas cs xchg mov pop push push outsl adc xchg pop sub xor pop adc jno je xor inc xchg ljmp or mov ljmp inc inc mov inc xchg (bad) popa fnop out mov pop clc push andl rorl pusha movw pushf movl call xchg jmp push lock std std xchg xchg insl add nop jne (bad) test imul aaa pop lea xor rorl cmp push clc dec inc imul pop pop movb fildll adc test out popf pushf (bad) mov sbb js hlt inc (bad) and cmpsl and xlat xor fcomps jmp pop fiadd and ja pusha pusha call ja adc in jne popf cltd leave push or sub jg xlat ja adc scas in mov pop mov add mov lea std into sbb pop (bad) push sbb cmp or test cmp (bad) cmp ss lods jns je nop jg lods jae adc into data16 pcmpgtb imul hlt ja test jns int inc repz and ja (bad) leave jnp ret aas in jbe enter pop cmp leave mov test loop jg scas and add ds lea scas fild xchg push stc dec mov cli das cmpsl inc push jo or fcmovnb in and xchg xchg fsub or fs (bad) clc or mov sub pushf inc add jge inc mov sti sub in (bad) xchg jecxz push adc adc sahf pusha and jge sub and jae cmp std nop push pop mov jecxz xor packssdw pop lcall cmp and loopne clc pop dec push inc push pop sub mov addb dec pop adc ss cmp jno fild jp push daa inc push sub arpl add and jecxz push aas shrl (bad) scas sbb push stc inc dec mov int cwtl jl scas sbb mov mov cmpsb int stos push movsl inc mov mov or dec movsb sbb sbb nop add cld mov cld or mov adc mov cmpsb fisubrl out inc bound cmpsb faddl inc test dec jo cmpsb lret jbe (bad) jnp loope xor jne dec pop and leave cmp les js xor push incb gs pop mov in lds push fnop out scas movsl sti aad push std adc loope fstl dec push cmc sbb rcrb mov xlat in sub test stos outsb outsb push inc hlt sbb loope add (bad) pop fldl2t cmp and (bad) in sbb xor or loope into sbb push aam cli and cpuid ficom hlt inc sbb outsl addb or sub pop rorl xchg add mov cmp and push mov test inc sub int movsl aas jb inc mov popa clc pop test cli (bad) sbb loopne sbb outsb dec push in das xchg (bad) out and das cli xchg imul cmpsb xchg pop xor add test mov push popf cwtl sub je jle xor int xchg adc cmpb sub lods movsb lret push hlt xorb mov or mov nop sub outsb scas xor inc (bad) loop (bad) pop push mov sti xchg adc inc push (bad) mov aas xor jns cmp (bad) loopne pop mov lea pop mov cwtl fcom out xchg jo inc xchg push adc je loop mov lea jp pop pop repz and cwtl pop test (bad) das adc or orl mov dec xor es fidiv stc mov or lock jl in push mov imul jns or fisub mov sub movsl xchg pop repz jns pushf xchg shrb pop dec pop int3 xchg fnstcw mov les inc mov push ds stos jae mov testl fldl nop sub push shrl mov jl fcmovne aaa pop dec dec xchg stos jno mov lahf jns pop mov xchg psllq sbb mov call mov xchg outsl aam inc mov push add imul push sbb (bad) into add mov sub pop (bad) sub and loope ja outsb lret gs repnz or sahf adc popf add imul out (bad) mov es mov dec jbe dec pushf das int3 inc mov mov mov xor pop lret pop imulb fidivl outsl xor aam mov jno sub loope jb fs ja lea call lea jne pushf mov pusha pushl push mov call int3 mov push jb sti lods outsb je out data16 push mov xchg sub xchg push idiv pop (bad) mov ljmp scas inc cmp dec inc loop pop out test or push out addr16 pop mov sub jl scas jg push lods movsl leave mov xchg lahf push int test mov mov dec mov icebp xor mov js fwait sbb ss dec popa dec sti jmp cmp hlt sahf mov sahf inc outsl cli add add les orl enter sub and movl pusha call call jmp arpl push dec (bad) aaa mov lods jge inc test fisubr ret pusha fwait add add das roll jmp imul mov arpl sbb lret xchg jge inc mov cmp xlat pop xchg lods dec and adc jnp movsb inc repnz mov adc jmp push dec jo sub jne fcomi adc ljmp sti add pop (bad) es mov xchg xor out daa cmpsb pop iret inc and lods dec int mov pop inc inc cli xchg jmp dec and or or shrb mov sbb inc inc subl sbb jg jmp sub or daa cwtl mov xchg xor adc adc clc pushf and mov adc or mov shr push leave push inc xchg cmp sub imul jb gs movsl dec fs cmp enter adc cmp imul scas cmp ds adc add fstl mov push sahf lods lret mov dec dec mov pop mov lods aas inc add (bad) aaa mov sarb mov jl in dec mov loope pushl pushf movl movw pushf mov movb lea jmp push and adc xchg jnp sub cs lods rcll das lcall call mov pop mov mov pusha xchg test pusha push mov lods popa sub sbb mov (bad) push in and daa shlb ret fiaddl push adc clc sub xor mov out cli out clc movsb rcrb outsl mov xchg lcall pop mov pop scas test js ficom or cmp adc je aam addr16 mov aaa in (bad) aas mov js sub jge fcoml add xchg in mov out jle aas sahf (bad) mov mov sub jb dec and inc test fwait ljmp inc mov jmp std stc ret inc push dec and icebp push fnop out sub mov cmp mov ret pop gs xchg aad cmp mov ljmp idivl gs or (bad) sub ret test out add lret dec movsb cmp (bad) sbb bound adc sub add movsl xor pop jae add add aad xor movsl xor sub (bad) adc iret leave dec int jge inc push and dec cmp int pop mov outsb lods je push jae add mov fimull jae push xor in sbb scas push push and dec jge and (bad) test (bad) xor data16 cld das inc les mov in push add ret mov aad sarb mov pushf bnd sub into xchg xchg push or lea cmp xchg adc xchg popa sub dec jae (bad) movsl aam pop out aaa cmpsl and push mov push fisttp fucomi push jp fxch xor add adc sti ss cwtl out push or repnz aas cmove sub test inc and out adcb movb pusha lea jmp mov (bad) lock adc pusha sbb add rcr adc cmp mov test test pusha lea je call call not mov pusha jmp mov and mov ds mov push cmc loope (bad) pop dec inc xor xchg inc sbb test sahf into sarb xor dec clc add jmp jle lods sub sbb adc mov aam and scas and cmpsb or add sbb push loope mov outsb outsb add pop fisttp out mov clc or add je xchg dec jp dec mov or lea ds in int or cmp or std jmp cmp out out int das mov mov pushf sti xor lock mov and mov scas mov and cmpsb mov mov jbe loop mov xlat shrl aad mov neg xchg aaa rcl bswap mov stc mov stc pusha mov shrd shr btc mov mov clc call lea jae pusha clc push bt cmp pusha lea jae clc test cmp push pushf lea ja not inc pushf lea jp mov inc jmp jne lock adc popf mov pop insl cltd test adc bound xor pusha das cmp out (bad) pop stos push adc call (bad) jo cwtl mov or push cld inc mov sbb and es int jne or cmc dec push aaa xchg rcl xchg (bad) push or mov aaa mov xchg int3 cmc and add test arpl popa mov mov sbb sbb xor mov rorb testb jo pop in fstpt xchg mov gs std xor arpl pop mov inc add push repz push (bad) mov dec and cmp imulb aam inc push mov (bad) loopne dec mov jge sarb mov xorps cmp cmp jo jno mov sub rcrl jbe xchg xchg add mov adc push push sub daa push adc lods xchg cmp mov adc jbe out dec mov jae ret inc inc ljmp cld pushf in outsl out inc lods mov mov clc mov push stc jle sbb insb adc xor cld add xchg out mov lods jns pusha mov push cli xor cmp sarl or mov push stc add inc or mov lcall movlps stc mov adc xchg add adc leave testl out jg sbb jl inc xchg inc les insb cmp daa imul addr16 lods push cmpsb cli xor fistl insb xor fwait daa mov mov repnz dec add add test stos lods pop jmp push xor push jmp fistpll stos push dec cmp inc (bad) jbe or sub adc or std inc push (bad) mov out mov mov push pushf pop adc jmp lods pop aam mov ds xor and les sahf lret sahf jg imul lret orl push movsb pop cmp and ljmp lret lds mov mov (bad) mov arpl adc xor div pushf outsb adc push mov je ja pop and push mov rolb push mov addb inc hlt sbb mov mov ljmp (bad) lea inc popa cmp (bad) adc pusha dec pushl inc test xchg rcr mov clc clc mov test jmp sub push lea jno push pushf lea call pushf jmp add inc gs outsl fs gs imul add mov push add fstps add and ret jle lock notb mov pushf adc sahf cmp adc pop (bad) in fs mov adc vpcmpeqw dec icebp push push outsl adc sub pop mov xchg stos pop (bad) test (bad) mov shrl jbe dec push pop das insl nop or lahf pushf inc mov xor sbb pop je cmp pusha movsb or xchg mov popa fwait sub or lret mov bnd sub repz jo nop cmp and clc push adcl push or mov mov jns xchg ja (bad) and cmpsb test cmpsl push sub inc in bound and int jbe sub daa aam sbb dec cmp pop daa (bad) jnp cmp pop mov xchg (bad) cli test icebp or das mov push test pushf test pop mov xor add outsb dec je jo arpl jbe push gs outsl outsb jae add je test jmp pop push cwtl movb call mov cmp add jne bt test test pusha push lea je jmp adc jecxz inc push mov fnsave dec mov xchg xchg add gs push test pop xchg imul les bound lcall ss jg or cwtl push bound and out out std mov test (bad) in pop push mov jmp mull push mov sti inc fbstp inc lahf cmp scas pandn outsl inc lret xchg (bad) pop in push out push xchg ljmp into out push cmp push or daa inc in push test pusha push cmpb movb pusha call sbb or mov push orb aaa and adc icebp mov cmpl fdivp aaa sti cmp insb ret push stos fiadd stc ja into fs loop xchg scas xchg xor push cmp sbb out jmp pop pop cld push lods or insl jmp cmp adc aas out shrl sti pop popa mov repnz and cli incl fisttp test test dec stos popf xchg stc sbb gs mov push pop ss xchg xchg lret ja jbe scas xor outsl cmp xor sti push test push inc mov add mov push jmp mov inc xchg mov push int push je mov or push hlt cli mov aas cmpsl jnp (bad) (bad) das neg icebp aaa scas cmp std (bad) mov outsl scas mov popf push mov ljmp xor (bad) leave adc cmp xchg pavgb dec adc adc or (bad) pop fsubrl inc dec repnz loop xchg push shll movsb inc stos and mov dec jecxz in cs pushf lock clc and fs mov lea mov jg sarb nop inc popa fcoms mov pop jb lea jle lock push gs mov push jae jmp aad scas icebp (bad) insb xchg add rcl xor push xor jmp sbb sbb push jmp hlt push scas addr16 jnp nop nop enter mov fidivrl mov daa mov mov jns xchg test jl push roll icebp pop bnd jmp pop idivl pop sbb inc sbb pushf call ror mov stc test jno stc cmpb call call pusha and pushf jmp add pusha jmp pop push push xchg mov push leave mov push lret sbb push xchg or divl mov jmp shll leave jp aaa out mov (bad) dec jns or lods ret ds push pusha jo shrd leave int3 ss or mov dec repz test sub xorb ds into cmp mov aam pop in into in xchg inc xchg jb into pop sub inc mov stos mov sub outsb mov jl or dec cmp ret ja push push lods int3 inc punpcklwd call imul jo fs insb add or popf mov push mov dec inc test cmp fs (bad) mov cmp dec dec pop subb pop int3 cmc mov movnti mov add test pop shll xchg dec cmp loope jbe loope popa inc or mov or xchg in mov std or repnz lahf loopne push adc mov add or faddl and mov pop jmp je movsb sub outsb mov sbb sub inc sbbl iret std aaa xchg xchg aas stos subl xlat fadd sbb cwtl insl mov push (bad) out stos mov jmp xchg rcrl scas (bad) icebp cmc insl test clc sub mov dec mov push inc adc xchg (bad) xor jle xlat mov push mov cld js out loope pop dec inc fbstp fistpll fstpl jmp aam mov pop mov xchg jns push loop call cmova push cli test cmp dec movaps pop stos fdiv pop test mov inc pop sub add lret adc (bad) xor sbb push jmp cmc cmp sub scas jmp mov sub push pop addr16 mov xchg andl lods cmp lock xchg cli or jno aas xor add xor (bad) out imul rcrl insl shll xchg aaa les int3 adc pop in pop divb inc mov and adc movsb xchg mov outsb push test leave xor cld mov sbb push pop cs cmpsb push cmpsb pop (bad) dec jp ljmp imul lods xor xchg int3 and mov ja lock (bad) or add outsb xor cs fdiv sbb push mov xor cmp out (bad) cli cmc jo outsb push and xlat inc fndisi(8087 test leave sti push cmp ja (bad) xchg jns mov sub (bad) lret inc nop mov push mov cld inc outsl ret fadd lds sbb das dec leave aad xor add add faddl outsb xchg xor jne add mov sbb test mov mov sub dec roll call lods cmp pop jge cld stos sti pop jne lods sub cmp and pop push inc dec cs movsb data16 (bad) xor pushf dec inc mov xor pop scas pushf fsubl add xchg inc shlb lahf in ja out sarb rcr (bad) dec cmc mov cmp imul in push in ja sub fimul gs xchg neg push pop jno jle es mov int std push rcr sub fs jb ret (bad) stc and jbe cwtl push sub mov xchg roll mov mov jle adc cmpb (bad) outsl call mov mov mov or dec cmpsl out xchg pop lret daa aas dec test mov lret (bad) fistpll fst in addb sbb aaa ret ljmp sbb std push xchg (bad) inc pushf mov dec test scas xchg imul pop jnp jp cmpsl popa andb cmp sbb jl adc repz cmp mov and mulb add (bad) ds out and pop int3 int3 bound xchg subl in (bad) rclb gs nop and ret push les xchg das pop pushf xchg jl push scas je not dec or out test jecxz jmp and sub and je mov aad and nop nop insb dec mov xor (bad) inc fwait subl pop pushf aad pusha push aaa mov iret jo mov xchg stos addr16 lcall or std aad popa pop stos pop jae scas mov iret cmp xchg test clc arpl stc dec lds pusha mov in ds dec mov dec scas pusha xchg test int clc pop adc inc loope cltd loopne roll mov stos mov out gs fwait (bad) jge push aas push sbb add push cmp push cmp mov stos sbb fcoml mov in insl fisub nop push xchg leave mov aad outsl mov imul mov les scas push (bad) pushf shrb jno mov xor dec clc xchg xchg test xchg repnz (bad) lret nop jbe test gs subl dec loopne jecxz in ja pop mov jnp push aaa cmp and dec mov bound and sub shll cmp dec loopne add call dec loop jmp inc insb icebp lods loopne dec jo jae add cmpsl std popf pop sub (bad) or out rclb ret xchg and dec inc iret arpl add inc gs outsl fs gs popa outsb fs gs add subl pushf lea jmp pusha dec pushf mov jmp cmp cmc repnz jmp add dec outsl arpl inc insb insb outsl arpl stos movb pusha push pushf lea jmp push lea lea pushf seta mov call add neg sbb bt mov pushf test test pushl pusha call bound lods mov xor test (bad) xor jl (bad) mov mov mov jnp arpl ljmp sub push lret sub xlat rclb mov scas je pushf lods fbld gs cs mov xchg mov shll inc sbb lret mov mov mov arpl xchg mov andl mov (bad) out aaa adc (bad) jecxz pop iret mov insb mov or lret inc mov jg inc in lret or arpl fisub (bad) mov lret adc jmp sbb add inc push pop xor xor ret inc sahf and push mov cld xchg pop roll minps fucomip lcall xchg pusha and cmp (bad) xor stos adc mov push sbb call xchg or xor loopne jmp fcompl imul xchg pop imul add ret sti adc xor mov fstl or inc xor and ds mull lahf insb inc push aaa (bad) test dec insl mov cld fbstp fdivr out je jne jne xor js rcrl add fist dec sbb lods call mov in sbb jne in test mov sbb unpcklps mov das (bad) mov add jp adc sub push in adc in sub mov xchg mov add cltd lcall push (bad) into pop pushf stos loop add pop mov jae sti xchg jo cmpsb adcb jmp inc mov mov mov imul movsl int3 aaa les pop stc negl sbbl fs and add lds fiadd xchg lret into into sub cwtl mov subb (bad) addr16 jecxz gs sub pop push push movl push pusha lea jmp add cmp pushf jb ljmp arpl sbb leave into fwait ss imul fild gs out xchg out push test or loop mov lcall es mov sub popa dec stc jge or notb loope pop or repnz ljmp cmp or mov mov add cmp cltd or mov or mov xchg push mov imul mov pop pop cld mov adc xor out mov mov xchg loopne shlb xchg push pop add das push mov dec imul adc lea lcall std sub lahf pusha cld cmp in (bad) dec mov jmp mulb jmp lret mov pop jecxz repz jg addr16 loope mov xchg cmpsb inc ja lock dec daa lret mov xor je add fabs cmpl push jge in or inc arpl hlt push push adc mov mov jg or loope ljmp sbb mov outsl sahf (bad) xor and jne cmp shrd add (bad) lock rcl lahf sub mov mov rcr add cmc dec mov test clc call add add jge pop add xor add add add xor add add popa mov add xor add add jno push add xor add add add add add xor add add add add add out add xor add add add add add push add xor add add add add add pop add xor add add add add add pop add pop add add dec (bad) add xor add inc push pop movsl sti or rcrl jmp scas mov icebp cmc mov adc clc jl mov and inc push xlat sbb imull sbb dec jecxz pop (bad) outsl out paddq mov cmp hlt hlt rcrb inc scas ss lahf push push adc add mov aas test jge lcall xor inc rcr dec mov cmc or mov movb lea jmp or inc push call das iret (bad) in inc loope push and pop mov sbb sahf mov mov pop aaa mov outsl jmp std into inc cli imul rcrl xor jmp cmpsl inc popf jmp mov orps loopne jp push shrb pop insl push lds stc ret xchg scas stos das jecxz and outsl (bad) xchg sub dec jl stos cmp push push cwtl and and sub jp je repnz iret pop dec mov frstor movsb xchg in mov inc js mov in ljmp dec mov sub lcall ljmp add sbbb jns xor (bad) jmp in addr16 push hlt in popf sbb stc mov lds fmul arpl clc movsl or or cld sub dec push sub leave dec adc inc imul iret pop (bad) mov pop dec lods out imul in xor fmulp xchg sub xchg jl insl mov sub in and cltd xor test adc dec pop (bad) fbld dec jbe mov mov test fist out shrl or xchg jae jmp adc adc dec adc jge sub icebp aaa push outsl add fcmovbe fsubrp add add adc ret mov (bad) (bad) cld daa gs aad inc mov aas insl add inc rorb roll push insb ret mov mov adc frstors push shll adc insb (bad) sbb and lods sti pop popf xor mov or lock cld cli dec sub pop mov mov push ljmp repz leave adc and (bad) rep into inc cmp jmp insb pop adc mov add and xor adc icebp xlat sbb shlb std into test mov inc fsub xorl inc push sub or sbb cmpsl (bad) inc jg jp fisttp mov sub xchg adc fist mov rorl fwait jecxz or js popf scas push mov and shrl xchg fmull cmpl sbb mov sbb sti and sub mov pushf fcomps mov sbb insb daa insl hlt imul aad push js test popf mov daa pop mov add test add or insb xor xor xor xor sbb push xor xorl xor xor xor xor je mov (bad) xor xor xor xor xor xor xor xor xor xor jns mov xor sub cmpsb cmp cmp test js jbe test cmp cmp cmp (bad) cmp or xor push je,pt (bad) ds add add add xor add jmp xor xor xor mov cmp cmp cmp cmp cmp cmp aas add add add js add push xor divb add test mov fwait xor xor cmp cmp cmp jb jnp cmpb cmp cmp cmp cmp cmp jb mov nop cmp cmp (bad) cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp sbb popf add add add add xor xor xor push xor test fbstp in xor xor xor sub xor cmp inc xor push xor insb xor xor pop xor stos xor xor out hlt ss je loope call cmp add add add movsb xor xor (bad) xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor or or adc adc sbb sbb and and xor xorl xor xor cmp cmp (bad) cmp cmp cmp lea cmpsb ds aas add add add add xor xor xor cmp or add add add xor xor xor xor xor xor xor xor xor xor js ljmp xor xor sbb addr16 fdivrs add pop aas ja nop aas add add add push xor xor xor and sub xor cmp cmp inc xor (bad) xor xor enter (bad) xor xor xor sub sub xchg xor xor xor xor xor xor xor push xor xor xor xor xor enter aas xor xor xor xor xor xor xor xor nop ss fidivl pushf cmp cmp cmp add add add (bad) xor xor xor xor xor xor xor xor xor xor (bad) xor sbb mov mov xchg ss ss mov ss xlat fbstp out out ss ss or getsec sbb and sub aaa pop aaa test movsl aaa stos aaa xchg lahf cmp cmp cmp sarl fidivr adc cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp ss or sbb fs cmpsl aas ret aas out stc aas add add add xor dec xor xor xor xor xor xor xor xor xor xor mov scas ss ss cmp inc cmp cmp sub mov cltd cmp add add add xchg xor xor xor xor xor sub aaa xor fidiv mov (bad) aaa aad fidiv sbb daa cmp cmp cmp xchg cmp cmp outsb cmp cmp das cmp cmp cmp outsl cmp cmp cmp cmp cmp cmp cmp push ds ds idivl xor jae jns test xchg aas lcall aas ret aas iret aas aad loop in aas cld aas add add add sub add push xor lahf xor xor xor xor xor xor xor jle test xchg xor xor xor xor xor xor xor xor xor xor xor xor sub xor xor push xor pop xor imul xor xor xor xor xor xor xor xor xor xor xor cwtl xor dec ss imul ss mov xchg lods ss int fdivs repnz ss aaa gs outsl aaa xchg aaa pushf aaa mov mov cmp mov sarl jmp cmp cmp cmp imul cmp cmp cmp imul cmp iret cmp clc cmp add or or adc pop ds ds fnstsw clc ds ds or or sub aas nop aas xchg aas cwtl aas pushf aas mov aas lods aas idivb cld aas add add mov add add add or imul xor xor xor xor imul xor xor xor xor xor xor jp mov xor xor xor xor xor xor xor xor ss ss ja jecxz jmp aaa mov cmp sarb fdivrs jecxz lock cmp cmp cmp cmp push cmp outsl cmp cmp cmp cmp cmp cmp cmp cmp fdivrs (bad) ds aas enter add add cmp add add sub ret xor xor mov mov xor xor cmp repnz cmp ljmp cmp cmp cmp ds add xchg add add xor mov (bad) xor or sbb sub arpl jne xchg addr16 mov mov aaa add pop cmp adc and push cmp movsl cmp cmp cmp cmp cmp cmp jns jg pop cmp cmp cmp xchg lea xchg cmp cmp cmp cmp cmp cmp cmp pop cmp cmp cmp test jnp mov add add add add xor xor xor xor xor xor xor push xor jbe jns xor dec ss ss (bad) cmp cmp cmp cmp cmp cmp cmp inc cmp push cmp cmp cmp mov fwait cmp mov jle (bad) cmp loop,pt add add sbb add adc inc xor push xor sub cmp aas ljmp add add xor xor mov cmp lock cmp cmp pop cmp cmp cmp enter add add add inc add add inc xor xor xor xor xor xor nop cmp mov cmp mov cmp cmp inc add xchg add add (bad) call cmp (bad) cmp cmp cmp cmp jb lcall cmp ret cmp cmp cmp cmp cmp cmp sub inc ds ds ds ds cmpl mov sarl fdivrs loope out clc add push aas sbb and es cmp inc aas inc aas pop aas popa aas data16 js cmpl mov aas sarl aas fdivrs loope out clc aas add add add add push xor xor xor xor xor inc xor popa xor js xorl mov xor xor xor xor xor xor xor xor xor xor xor xor xor inc xor popa xor js xorl mov xor xor xor xor xor xor xor xor xor xor xor xor xor inc xor popa xor js xorl mov xor xor xor xor xor xor xor xor xor xor xor xor xor inc xor popa xor js xorl mov xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor and inc xor popa xor xorl mov xor out clc xor sbb and es inc ss ss ss ss xorl mov ss ss fdivs loope out clc add push aaa sbb and es cmp inc aaa inc aaa pop aaa popa aaa data16 js xorl mov aaa (bad) aaa (bad) aaa fdivs loope out clc aaa add push cmp cmp cmp cmp cmp inc cmp popa cmp js cmpl mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp inc cmp popa cmp js cmpl mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp inc cmp popa cmp js cmpl mov cmp cmp add pusha add lock add xor xor xor xor xor xor or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc xor xor xor xor xor xor xor xor xor nop xor mov xor mov xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc xor xor xor xor xor xor xor xor nop xor mov mov xor xor xor xor xor xor jo add add add pushf xor mov xor xor xor xor xor xor xor or adc sbb and sub xor xor cmp cmp inc cmp cmp cmp cmp cmp cmp cmp cmp cmp nop cmp mov cmp mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp cmp cmp cmp cmp cmp nop cmp mov cmp add add lods xor xor enter (bad) xor xor or cmp cmp and xor xor cmp push cmp cmp jl mov nop cmp les enter fdivrl loopne in in cmp adc sbb cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp sbb xor inc cmp push cmp xchg cmp pop js,pt xchg ds ds sbb and inc aas pusha aas cmpb aas lods aas enter lock add add add adc xor dec xor jo nop xor xor xor adc xor cmp dec xor xor xor xor xor xor xor xor xor xor or adc sbb and cmp dec xor xor fdivs in in xor or adc and inc xor xor cwtl xor cld xor sbb sub xor xor xor xor xor xor xor xor xor xor cmp dec xor js test mov mov xor in in xor add or sbb cmp inc ss ss mov mov ss clc ss or and sub cmp pop aaa fs insb aaa je jl test mov xchg aaa pushf aaa movsb aaa lods aaa mov aaa in aaa hlt aaa cld aaa add or adc and inc cmp cmp cmp cmp mov cmp adc inc cmp dec cmp cmp pushf cmp cmp cmp cmp or and sub xor cmp inc cmp cmp jl cmpb mov add add add xor cmp and push cmp cmp cmp cmp cmp cmp cmp nop cmp mov cmp mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp cmp cmp cmp cmp cmp nop cmp mov cmp and cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp ds sbb sbb and and sub sub xor xor dec ds ds ds ds ds ds ds jl,pt cmpb mov mov nop ds ds ds mov ds xor inc aas pop aas js xchg aas mov mov aas les enter sarb aam loopne add add add or add add add add add adc add sahf xor adc add add add add xor xor sub add sti xor xor (bad) aaa mov pop cmp cmp cmp cmp cmp jo call and add add xor adc mov push xor mov (bad) dec ss ss xor cmp (bad) cmp cmp cmp cmp cmp cmp cmp dec xchg inc aas mov mov add add push add add xor jp xor stos xor xor xor pushl aaa xor xor xor lahf aaa and aaa cmp mov cmp cmp cmp cmp cmp cmp idivb xchg aas add add add add inc xor sbb xor xorl (bad) adc (bad) aaa movsl aaa sub js std cmp cmp cmp cmp test jno out add add add xor xor xor xor xor xor fdivl dec cmp cmp cmp cmp cmp cmp arpl (bad) aas add add add add push xor adc xor xor xor and insb aaa fbstp (bad) cmp cmp loop jg fnstsw loope,pt sub aas add add add add test jmp inc xor xor popa xor xor xor ret ss cmp sub scas cmp cmp cmp cmp cmp mov aas xor add add add cmp pop xor pop xor pop xor xor xor inc aaa (bad) aaa dec cmp cmp lea sarb jle xor cmp aad adc addr16 cmpl aas out aas add add pusha xor xor xor xor xor aaa cmp pop aaa jnp adc xor push cmp pusha cmp cmp ret cmp cmp cmp cmp cmp cmp cmp gs lock mov lret aas add add inc xor xor xor xor xor insb xor xor jge popa aaa jmp adc das cmp push cmp ret cmp cmp cmp cmp cmp cmp cmp cmp imul add add add mov repz (bad) xor stos xor xor xor xchg (bad) xor inc mov repz aaa out sbb (bad) cmp enter out or cmp jl fdivrl cmp add add add cmp add or xor xor xor xor xor ljmp xor xor xor xor jns add cwtl aaa cmp scas cmp cmp add inc add xor add inc xor test xor xlat aaa dec cmp cmp cmp cmp cmp cmp cmp push aas jns add add add and outsl xor mov xor xor xor xor xor in ss aaa (bad) aaa inc cmp cmp jg leave cmp idivl xor cmp cmp sbb sub mov add add add xor jb xchg xor xor (bad) xor ss cmp cmp cmp mov cmp cmp push ds ds mov loop lahf aas repz add add add add cmc xor xor xor mov out cmp inc xor xor xor sbb cmp sarb cmp cmp pop sarl and addb dec add add xor mov fdivs xor pop ss movsl aaa ljmp cmp adc data16 cmp cmp cmp cmp (bad) cmpsb ds add nop add push add add (bad) xor xor xor xor xor xor sbb outsb ss cmp cmp mov add dec cmp sbb fidivr in sbb cmp jo iret idivl push aas in (bad) aas add add add ja cmp jno lret xor xor xor xor inc cmp cmp cmp xchg cmp cmp xor jg pushf sarb add add add pop xor xor xor xor xor xor xor xor xor and cmpl cmp cmp cmp cmp cmp cmp jnp ds push aas pushf aas add add pop add add xor xor aam sti xor xor add jnp push xor xor xor or mov aaa pop aaa mov xor outsb cmp cmp cmp mov add cmp cmp pushf cmp int3 aas add add dec add add xor xor xor xor pop ss aaa jge xchg aaa std aaa cmpl movsl cmp cmp pop cmp cmp cmp icebp cmp repz aas add add cmp add and inc xor cltd xor jle loopne cld xor xor xor imul stos aaa pop cmp mov scas cmp cmp cmp cmp pushf mov sbb bt push and push sar lea not push xchg shr call data16 jo inc push popf (bad) adc mov push or mov cmpsl jg jns push mov jle jp inc sbb inc cwtl arpl outsb xor cld add push popf out pop mov gs jns repz dec push stos xor testl in test test jno out les ljmp mov sti push pusha adc jae cmpsb inc sub hlt vmovsd cs sbb adc testl mov (bad) mov lret add push lods pop jno test mov xor cmp inc add fs repnz xlat pop pop jns sub sar push mov push mov fisubl sub (bad) dec mov lods pop in insl int sarb bswap aas fldl sub std and dec xor and pusha fdivrl pop cs pminsw cmp jmp int pusha sti daa xchg jmp jecxz add outsl out xchg jne stc adc insl and sahf jbe adc ljmp cmp (bad) mull push mov gs imul pop inc aas dec mov push push and xlat rolb mov dec imul pop xor fdivrp and xchg mov aam fisub ljmp ret mov xor and ret lretw xchg (bad) scas movsl dec sub cmp mov and je pushf pushl adc movb mov lea jmp mov mov sub mov hlt xor lcall in cmp aaa inc ss insb ss add rclb lcall (bad) stos push inc push xchg test addl push scas or ficoml lods jmp test and fild inc outsl mov add add rcrb adc adc ja addr16 xlat xor lret lcall cmp and push mov jp int3 and lcall loope addr16 mov and (bad) incl add add fs call push lea jmp mov lds fildl dec hlt int3 sub ret aas xchg pop or setns or into cmp pop and (bad) fmull in jl lods jge xchg pop std jo add cwtl aas mov test lret xor std loope pushf and loop xor jbe mov sbb or mov aas mov xchg push jo in pop jne and incb jg pop inc clc movsb shrb out sbb cmp dec std inc push push pop xchg fildll xchg (bad) int3 (bad) aam mov or adc mov in jae movb mov movb pusha push pushl ret push pusha add clc pushf cmc cmc mov shld mov clc cmp bt cmp pushf call clc rcl mov call mov inc cltd in push (bad) cmp incl cmpsl rcll xor xlat popf rcrl mov mov push xor and addr16 push int mov xor xor xor push or mov jl movsl stos (bad) (bad) jb lcall mov and jnp hlt mov xor adc cmp sbb stos pop jmp fcmovbe leave inc xchg inc mov jo jbe out fidiv sti popa fsubl out (bad) aam orps jp mov outsb push mov mov or cmpsb fsubr adc inc sub sbb push xchg (bad) int3 inc adc ja cmp xchg test mov btc cmc neg adc add pusha btc rol mov inc bt add clc btc movl inc mov add pusha bt push cmp pushf jmp dec cmpsb mov fs pandn cmpsl int adc and pop fmuls push daa lret pushf dec notl outsl idivb mov movsl sbb or push mov dec mov jl push int3 (bad) aad int in pop adc xchg movlps push call fisubr cmp (bad) loop mov in (bad) testl lret lcall sub jp mov (bad) xor inc (bad) push arpl and ds into and in push test mov jo or sub cmpsl sbb sbb aad and cmp inc test jl or je and xchg and xor lea jmp pushf lea call jmp call call push mov out push mov shlb cwtl jb ds stos insb mov add ds loop mov push pop xor scas loop mov outsl out lcall cltd bound stos popl push arpl insb mov aad or sub xchg (bad) xchg sub pop aam shlb sarb leave insl aaa mov push xchg jmp test aam add addr16 arpl xchg stc lret cmp pop pop mov enter mov ja dec rcrl ljmp dec scas movsb sahf movsl insb inc int3 xor shll jge sub sbb test xor (bad) mov clc sbb add sbb fs jne push movb push sets call adc push (bad) xlat sub mov jp inc mov and push cli sbb xchg add cwtl les xor (bad) mov fcoml ljmp xchg jns out mov mov jb adc cmp ret pop cmp push push and sbb mov daa in (bad) cmc cs repz hlt and jge inc dec xchg (bad) and sbb js cmp test pop inc add outsl mov sub mov lods adc stc or sbb jb das inc into push aad dec (bad) insl mov lea jne call fdivs jg mov cmpsl xlat aaa pop add pop mov pushf jb xor es dec push loope mov scas sub xchg (bad) mov sub inc scas aaa lret jmp mov pop fwait test cmp negb jne add or cmp fmulp test xchg mov cmp dec testl aas cltd cmp and ja jg add jmp jp daa pop mov and fisttpll enter xchg scas push ret mov xchg dec mov xor cld test ret pop sbb fdiv xor movsl jns push xchg inc arpl adc pop fldenv in pop dec mov mov xor call push pop das lea jle adc movw push pusha lea jae pushf movb lea jne jmp rcr movzbl and mov test test pushf cmpb pushf lea jne and shrd sub aad sub mov clc jmp lea jae not mov dec not inc not call fs aas in inc push mov stc add xchg or mov sub cmp cmp ljmp sbb pop lods clc mov stos pop push push mov les push dec mov or xorl xchg jecxz or in repz mov sbb imul fyl2xp1 stc add jl imul inc add jmp cmp shll jg pop popf add aas lcall cld rol lcall sbb (bad) outsl (bad) pushf cltd call and pop loopne or or mov mov or sub test loop add loopne mov (bad) (bad) jmp mov call push dec dec push inc push dec cs insb add mov inc and cld xor push pushl pushf lea jmp (bad) js jecxz push in (bad) cmc in fildll lret dec xlat (bad) in or or repz sub out data16 pop cmp gs (bad) mov sbb xchg gs scas decb or jge sub cld xor popl mov (bad) mov test popf popa stos jbe xchg push push std std sub lods push cmp jns xchg inc jbe mov pop and mov arpl cmp movsb lea jbe pop mov xlat adcb or cld sbb js mov out lds cwtl mov push dec int inc push flds bound fmul push cld sub mov in and xchg ds mov pushf inc daa mov orb das test (bad) jne mov ret test jo mov ljmp mov mov xchg lods jge cmc sti ret add scas dec sbb mov fisubrl (bad) movsl inc push pop mov push lods and test popa mov cli jb insb ja movsb cmp out cltd pop cmpsb xorl mov cs push insb (bad) mov ja leave out jne sub lret rolb or adc (bad) (bad) decl test clc (bad) (bad) call sarb aas ljmp mov pusha pusha popf cmp jmp call mov lods mov stos mov pushf push or xchg mov dec push ja lods push mov inc adc adc in ja sub add push pop mov icebp ret out data16 fiadd push xor cmc or cmp adc aad xor push (bad) lds sti dec mov mov adc ret push jno rorb nop gs cli imul outsb idiv (bad) stc pusha cmp pusha pushf jmp cmc cmp clc pushl popl cmp cmp call rcr push das setp mov sar sub cwtl aad lea push bts push bsf push shrd sub rcl pushf mov lea push mov cmp push test pusha lea je push cmc sar mov bswap bsf add bswap bts call mov lea push movb mov not pushf lods stc jmp test pusha movb shr stc stc movb pushf cmp lea jae je call lea push sub pop jl rcrl and fnstcw cmp add cmp pop adc dec mov xlat js mull adc cmpsb int xor add lock xor pop mov push lret lcall sub lcall mov mov fsub and lcall xor sbbb mov jmp negl lcall mov stos roll and insb fldenv xchg jle and jmp and or cwtl bound sbb fisttpl jg or lods mov xor scas int in pop inc mov in outsl orl cmp leave insb xor jo sub in and mov jle sahf jae xchg int add xchg push (bad) sub in sub fbstp leave mov cmp (bad) lods mov nop ljmp push ss in adc jo std and dec dec lret jno jmp (bad) jl std xor outsl fldl out icebp and pop ret es mov mov dec mov clc cmp pusha jmp sub pushf lea jne call push mov lea call mov inc push and popf sbb nop mov idiv mov les jl cmp push mov xchg (bad) jno jb in dec mov test rorb jnp ficomp incl push adc mov mov stos xor mov insl arpl fistl sub jge cmp push fmull cmpsb addr16 and nop jo ljmp cwtl sti sub inc and add inc add pop mov or sbb test pop lods xchg or mov push adc out mov scas add (bad) mov call inc ljmp imulb enter push lcall out mov nop adc xchg test and jbe sub sbb out (bad) pop mov lret mov pop xchg cmpsb push sti mov rol inc and add fwait ds xchg cltd divl add aaa push rcrl fildll in mov es popa icebp rorb std hlt xor rorb push xlat jns dec insl push cmp out adc sub test push sti test mov cld sbb js popf inc push pop stos sub adc out popa movsb jnp out popf mov cmp ret out daa gs xchg notl inc and add sahf push lea jmp or call jno add jmp cmp imul stc es or mov add xchg fimull jle mov (bad) dec into pusha mov mov dec jne cmp aas mov pop jmp aas dec outsb je push insl mov mov adc mov pusha mov pushw push jg sbb sti add or or adc push clc enter outsb outsl mov call out repz mov icebp or mov and mov test pop (bad) popa push (bad) xlat (bad) cli dec ljmp or pushf mov pushf lea jne pushf pushfw popw jmp push lock std std mov xchg insb test inc sub lods sub pushf mov pop out ss jg pop in jge sub loope dec dec into and aam pop int mov clc xchg out test pop xchg xorl mov repz xchg push es and js popa test clc push enter fiadd gs ret push das mov push (bad) mov sub xchg ret sub cld loop repnz fiadd add pop and mov out aam adc xor ror lcall push lahf lods mov dec ds outsl into sub inc shrl push xchg inc repz dec stc sub ret nop clc inc fdivl js popa xchg xor lret adc pusha jb in scas divl addr16 (bad) pop or nop out std cmp test test mov cwtl xor dec test inc sarl or sub push and adc orl in pop popa dec imul fidivl and add xor pushf pusha pushl ret cmp cmp pushf cmp cmpb call test xor jmp push mov or push pop dec ret fwait or icebp add lock sbb inc stos xchg fidivr mov nop jp (bad) insl cltd lahf lods scas mov stos cmp (bad) mov loope test fstps shr jo pop mov fnsaves push aas sbb push mov lea jnp inc lods ss movsl enter push divl and mov shrl unpckhps pop ret or cmpsl inc push push pop inc sahf sub stc sbb jb inc movsl stc dec inc out imul push sub inc adc mov mov test mov xor je add adc dec pushf bt bt cmp call lea jne btc mov or sub js mov bt sub push clc pusha pusha pushl popl cmp stc pushl cmc cmp lea jnp push lea ja rol rcl sub not sbb add test add or sar mov call pusha (bad) inc xchg cmc inc push leave jl jno aad adc mov inc xchg les xor pusha or or or jbe outsb or (bad) adc push sbb (bad) mov mov mov daa dec add dec mov repz je inc mov int fdivrl push out mov repz cwtl outsb cmc sub out lods insl sub cwtl dec mov enter hlt je inc push cltd xchg push cmpsb sbb sub inc scas dec sub mov push ss fdivrl pop xlat pop aam inc repz xchg and sub push lds (bad) xor insl popa (bad) sahf aaa clc pop in sub push aaa push sti inc (bad) std mov mov sarl pop jge lahf push arpl out adc mov cli mov cmp xchg xchg and lahf pop push pushf lcall ss push cmpsl mov push sbb inc pop leave loope jno cmpsb std lods add test xor and add (bad) negl lods rclb jmp jmp fadds xor aad add add mov sub push mov xor call inc dec dec xor cs insb add pcmpgtb mov jl push mov mov mov cs mov or add sarb mov cmp and or aaa gs jg cwtl mov imul adc xor push xchg dec in or hlt cs int3 xchg xor (bad) push cmp fistl or inc xchg test loop lods push mov lods data16 movsb pop mov int3 mov sbb out jbe nop cmc add stc stos cwtl mov adc inc stc sub outsb data16 mov push or dec add adc ret inc mov mov jp mov out mov mov pushf pushf movw inc call mov lea call (bad) sbb push mov adc mov std pop popf lods out iret das xor inc mov jb dec (bad) (bad) out gs cmpsb dec cmp mov sub (bad) xor adc out fwait dec push xchg outsl lods xchg dec outsl cmpsl jle imul test mov cmp cmpsb jnp out jno mov push sbb scas cmp dec pop lret push stos cmp mov sub adcl out subl fadds mov and mov xor (bad) ret out inc jl imul push and sub jle and popf frstpm(287 push dec cmpl mov push xchg inc enter mov lds lock push in push gs mov lods jns test and (bad) or imulb ja loop adc mov push dec mov adc inc ret pop ljmp fistpl jecxz mov jmp and pop into lods and xor addb imul sub (bad) clc int pusha lds mov or leave inc fiadd xchg xlat pop jecxz (bad) jns cltd mov (bad) pop test sahf repz ljmp ss mov leave adc mov pop fsubrs loop in and jge add xor sar xchg out js iret dec test fisttp (bad) jl (bad) jmp pushf pushl ret mov pushf push movsbw lea call dec gs sub inc push je repz mov das dec scas mov out out data16 in sub sbb pusha into push (bad) and data16 xlat sbb jb mov xor loop dec hlt inc pop fisubr adc push imul (bad) cmp shl cwtl jle xor jl pop in xor outsl xchg jnp inc sub xor sub mov inc std out shll adc dec xorb or mov movsl xlat mov mov push rcr adc icebp inc push loopne jno jns push scas addr16 push orl sub (bad) cmp in mov pop xor movsb pop cmc test ret or lods stos add out mov jb or out mov and rcrl out cltd xlat out adc sbb test hlt pusha lds mov or xchg cltd insb loop xchg sub jbe (bad) testb sub inc ss ret cmc sbb sbb outsl lock outsl cld inc xor fwait ss negl mov cmp lods mov fstps adc pop test test lret enter pop (bad) fisub push mov xchg cmpsl jnp fistpl lods cmp popf cmp in outsl imul repnz mov fmuls push lods rclb mov xchg and in inc fcompl sub mov fwait mov out mov or and mov int dec adc or inc sbb cmp xchg loop insl xchg adc add jae ja pop (bad) test sub leave rorb xor inc cmc sbb push xor je pop push inc mov xchg jecxz mov lea ja clc pusha clc imul jmp xchg icebp movb push sbb ficompl mov sahf mov add cmpsb int3 ds adc imul sbb push test ror out add pop in mov gs sbb insl push clc lock fucomi or pop je out adc lea adc push inc jb std cmp icebp mov pop xor lock xor fild lods inc sub dec xor adc push inc jp call cltd adc inc ja mov pop jle jb lret loopne sti std ss cltd pop sbb gs dec mov xor inc push and inc inc cwtl push cld es enter rorl and mov xor fcoms fidivrl fiaddl xor add scas (bad) lock lea idiv lds fs in pop and and mov mov lods dec test mov push pushf icebp icebp leave sbb aad push push dec mov aaa out test lret nop pop mov or dec rcrl arpl push iretw scas addr16 fwait dec popf (bad) adc enter mov dec (bad) in pop dec and addr16 xor push in xorl mov lret jg push into xchg les adc cmpsb pop inc cld std push mov xchg or int inc push fsts pop mov xor xchg cli and test std insl mov roll xchg cld push mov adc mov (bad) xor test lds loop sub cmp add (bad) adc pop xlat sahf je pop xor jle outsb xor sbb dec add ss sub adc scas shlb add pop (bad) sub inc je cli movd es cmp and jge sub in outsl cs call mov cltd push std sbb add mov ret push xor fisttpl add outsb cs dec dec cmp lea sahf add pop int3 loop bound fistpll cmp daa adc push js loopne adc (bad) or (bad) sarb out shll (bad) xchg pop mov stos loop fildl xchg or xor rcl stos mov inc push push cmp nop loopne into cwtl xchg push xlat dec rcr sbb add xorb cwtl push cld es inc out or sub mov mov in arpl jmp test cli pshufw int3 out shlb addl adc or and xchg loope dec inc mov fsts fwait lcall jae mov pop mov pop lea add scas xorl xchg mov in hlt cltd lea inc mov jbe,pt adc and std and pop movsl xor mov mov les add sub dec popa clc fistl pushf fcmovne or rol push ror ds lahf mov out cmp aas (bad) push dec loop cli cwtl mov push gs inc push ljmp adc out push hlt or mov fisttpll dec jmp clc dec xchg adc negb call shll mov adc push jmp xor inc push jp sub or mov test dec sarl repz mov pushf popf out fimul loopne jmp inc bound bnd mov lahf rcr xchg lods cld push hlt lods xchg cwtl sahf pop ds out and sub ret rorb jae dec outsl pushf fcomp dec mov rorl (bad) push xor cmp loope jecxz outsb xchg jge nop test lahf mov inc adc call mov sti (bad) cld xchg dec push mov in cs push iret lods xor jnp jo lea xchg and and push pop loope xor xchg loope (bad) nopl pop adc jnp dec mov lock aas je out fdivrs fiaddl in inc jg lock push movsb xchg imul dec adc outsl test ficoml cmp fdivs inc push rcrb lret out sbb out dec shrl outsl push subl inc aam xchg jle,pt xor icebp mov xor pushf adc adcb xchg mov xor out inc cmpsl or outsb scas or pop or lods lahf out sub push or aaa and (bad) dec adc jno or jge sub lcall test mov in push mov jb cmp pop pop xchg inc clc inc push sbb (bad) call notl add cld rolb mov cmp xchg rcrl sarl mov jo ds sbb stc bound mov cmp insb inc movsb mov sub sbb dec (bad) dec icebp enter jbe fdecstp xchg jl push dec or (bad) push mov mov cmc and push insl lods push xlat ja push bound inc adc cmc add inc gs out inc hlt add xchg std push sub addr16 xchg ljmp add in and push push scas cmc dec xchg and mov push lea call call inc dec or sarb pop (bad) pop sti cltd popa das xchg jl out aaa fistpl stos stos push pop xor push push or jnp nop std sub adc xchg mov mov out jg jns inc std add outsb (bad) cmp mov mov dec test cmp and push xchg add (bad) popa xchg dec inc test pop lcall jne cwtl out andl aad pushf sbb jecxz push xchg mov push and (bad) lock (bad) sub xorl nop insl jg xchg lret sbb (bad) sub aad notb enter sbb lret in jge cmp out adc push xlat mov add push insl test out pop lret push lcall out test in jge pop jge (bad) jno fildll clc cmpsb loop xchg ret add jg pushf in inc ja repz xchg pop jmp push test addr16 dec int3 jae ret pop push xchg pusha adc dec shl mov ss (bad) xor data16 sbb addr16 cmpsb pusha int lods pop add lock dec or pop in aad daa inc push ficomp push stos xor inc mov pop jmp fbld mov add data16 stc inc push out fisttpl mov push mov push in or mov xchg ds adc out popl popa xchg xchg repz cbtw aad insb add es inc inc inc xor add xchg cmp sub mov sub inc cmpsb ss cmp mov mov dec mov add out aam lods test mov dec cmpsl lret mull inc mov or jmp push clc pop loopne into dec push fcmovnb (bad) mov mov dec mov add push je push je dec push add nop icebp popf pushw popfw jmp mov lea movsbw mov movw pushl ret (bad) sahf loopne add push cltd push call lods inc push xchg pusha (bad) push movsl inc push (bad) sub lds repnz push (bad) or lret xchg js pop cltd xor sbb jge inc adc dec dec fsub inc add mov iret push fldl pop mov inc mov pop xchg push jmp out (bad) aaa jb xchg out popf sub mov aas (bad) loop inc (bad) idivb (bad) test mov dec push or adc inc loopne loope fnstsw inc xor mov add inc call jg rorl adc pop add mov xor xchg push sbb rolb mov sub inc add xchg push add dec fdivrl test push ss mov xchg mov repz popf push xchg mov loopne mov fs out jl add push scas jo pusha ficomp mov adc (bad) cli rcrb pop xor call into mov aas xchg jge add inc cmpsl pop dec pusha mov movsb jbe ss sbbl jecxz leave sbb push xor adc daa or lcall push imul dec ljmp or push loop loopne inc movsl pop cmp in ds mov pop insl adc xor aas or inc das pop push aas repz (bad) (bad) movsb aas add mov enter in add div and xchg into scas dec hlt int3 pop and nop in lods xor je insl cltd (bad) xor cli stc imul (bad) out xlat push lock mov push xchg or dec bound xor aam jecxz cmp jg fs lock or lods mov add xchg out pop xchg inc push fdivs push mov aad sbb pop inc aaa insl lods jne dec fstps mov adc push or ja lods mov mov mov or pop mov cld xchg xor inc xchg cmp jp sub cmc fisttp jae mov leave dec call inc movzbw mov setge dec jmp shld bswap mov mov test cmpb push lea jne sub cmp rcr xor adc sbb cmc mov ror sar sbb jmp dec ret pop inc push or sahf add dec mov mov mov js pop enter xor scas (bad) jne jmp jge dec xchg inc pusha aaa jle decb cmp dec mov lret loope sub rolb dec iret ds push cvttps2pi cmp arpl and aaa lahf bound call push jbe,pt pop out xchg jne push push in jo leave fwait fwait lds out xchg subl fcomps dec pop cmp adc out mov add loope loop or cli dec push cld cmp (bad) push pop into lods or pop in mov pop nop pop mov sub cmp pusha (bad) sub pop push adc pop inc push cmpsb cmp sbb loope loope xchg (bad) jne and addr16 out pop lahf mov scas push add je dec sarl sub and add aas inc hlt or pop sub push jae dec add lock imul test ss fadd inc cltd das jno mov dec adc leave mov insb push daa jp mov inc js inc fs inc add mov out pushf push and mov out adc sbb xor icebp lods mov pop into out iret lcall sbb lret jle imul mov in adc mov inc push or xlat aaa sbb adc and adc jge jp test mov cmp imul add and repnz or ljmp adcb out shrl pusha test jbe pop lahf pop (bad) insl sahf sub xchg stos dec fidivrl sbb inc pop stos lods addb pop cmp stos js mov ss xchg jecxz cmp mov call bound inc fcmovnu inc ljmp ret sti xchg jl data16 es subb sub jb dec add gs mov call stc sub test cmc cmp pushf pushf pusha lea ja stc stc clc imul cmc jmp ds push les inc push push leave pop xchg lea lcall lcall (bad) dec and add jle out fsubl aad sahf jns enter lods inc cmp pushf jecxz (bad) in lea loope pop aam jl push adc fnsave pop xor or insb mov push sub insb xchg loopne lcall mov aas (bad) xchg loope lods mov popf cmp add sbbl fwait mov data16 out pop call jl add cltd jb dec daa shlb sarl jno adc (bad) lock mov add push push mov jp enter test lds inc ja jne ss cmpsl sbbb mov pop (bad) cli repz cld push ljmp sti in lcall out scas out movsl jbe jmp lcall call je push cltd and hsubps inc xchg xor icebp (bad) fsubrs in pop inc popa jnp xor dec fwait shrb and mov jne cmp xor imul xchg pop es idivb xchg mov sbb shrb inc (bad) ja adc rorl mov xlat repnz mov lds and mov ljmp bound jo out scas jl outsb nop push xor pushfw pop clc sub lret add daa dec pop mov enter out lahf repnz mov iret rcrb inc cmpsb jns mulb int3 push scas jmp cmp sub push sub pop mov or lcall cmc gs mov ja cmp jbe test imul fisubl push adc xchg sti enter loope adc cmpl xchg or test pop mov rcrb push inc sbb les ret jmp (bad) dec hlt les xlat lds xor lds (bad) dec out daa inc mov fmull dec mov and and popf popa push adc push mov cmp lahf xchg mov cs (bad) pusha fs cmp mov inc ret jge loop push in mov lock scas les lret lret cmp imul adc cmp cmpsl aaa or out adc add inc and mov mov aam ret mov insl push sbb pop aas jg jge out jb imul outsb leave push (bad) nop sti mov inc int3 xchg mov das mov sbb push jecxz lcall idiv mov mov push xchg xlat cmp lock jle sub notl sbb adc pop out lds daa fcomip push pop push popa std enter into sbb add xor sbb xchg cmp xchg aas jno ficomp inc adc mov iret das movsl inc je and cmpb popa nop outsl cmc pop popa inc data16 xor jnp aaa mov inc push dec inc dec xor cs insb add lea jb jmp stc add movb lea jmp test call jmp add push dec inc gs outsl insb fs popa je inc add inc push xchg (bad) sub sahf test lods push lock hlt adc pop mov sbb dec mov pop mov push out ja cld push mov mov in inc push dec push lahf outsl pop push popa test and jge jl loop cmc outsb imul mov mov imul cmp pop or jecxz cmpsb sahf sbb push ss test mov pop xor jg es cwtl gs mov adc lods lods jmp aaa mov mov fstp mov mov pop xchg enter mov stc outsb cmpsl out or xchg aas mov mov jne cmp enter xchg js aas (bad) pop dec aam mov jg sub lret ss (bad) cmp jle out sbb (bad) pop xor rorb push cmp jae jp mov or sub (bad) push addr16 mov inc decl mov lcall inc push jle cmp dec push push mov fnstsw enter or sub jp clc push movsb lcall les mov lods push dec xor bound les fldt sbb movsl repz dec mov ss xchg inc outsb test pop sbb xchg iret mov aaa and sub add mov testb popa movsl std and dec or inc xor lea mov pop ret lds hlt das aas movsb (bad) std add cmp and stc rcrb ja mov mov adc fbstp aas sub mov stos orl xchg int mov push jmp addr16 fcmovnu std jle xor lea loop fsub xor pusha hlt jae push fbstp (bad) gs in fwait loope rol sbb insb inc mov xorl push pop fcomps cmovae shll jp (bad) fadds js push insb ret dec ficompl loop cmpsb sub mov mov inc jg sbb movsb scas leave dec (bad) add jo pop inc cmp push mov add jmp hlt lret daa mov cwtl daa nop lret lahf insb sub les aas stos adc arpl lds nop cld imul inc mov mov dec leave mov cld and push std inc loopne jg lea js mov or cld popf sub ret lcall mov negb jbe in dec pop ficompl test push or mov rcll jmp imul jmp repz push int out dec mov pop mov shrd push call (bad) ret lcall test cmp test gs sbb out and cmpsl lret mov popf scas outsl sahf (bad) (bad) mov out push push fisubrl inc add pop xor (bad) loope mov or inc mov jae movsl cmp jge testl test inc mov iret test xor sbb mov or push or (bad) mov out out jb jp lret adc incb addl pop test (bad) dec into pushf call sti lds inc inc call rorl decb dec hlt fistl xchg scas aaa das sahf les repnz inc insb (bad) jle,pt adc imul js cli setle push dec loop fnstsw xchg pop jmp sbb add cmp mov push fmuls and dec dec cs fsub les daa pop inc and fnstenv xchg cmp scas add cmpsl mov jno cmp leave xchg jmp xor inc hlt pop pop mov (bad) xor jb mov push sahf aam sub adc pop inc and sbb or push push in (bad) pop xor and push loop lock xor or mov popf jge and mov gs and mov pop adc mov mov cmp cmpsb and (bad) je fadds test lcall mov dec inc loop cli pop mov lahf lea adc scas xchg xor cmp mov stos dec pushf imul (bad) mov jmp cmpsl mov sti cmpsb mov dec popa cli xchg cmp loopne cmp or adc imull inc test push jnp out les outsl mov test pop mov sub (bad) pop shrl xor pop lahf (bad) jge jae fild jae daa vmwrite sbb lds ds iret mov loope push push xchg iret jb pop adc nop gs out mov jne mov xor and lcall mov mov (bad) addr16 ret cmp mov rorb pop sbb mov pop mov inc add decl enter xchg insb sub nop jle dec les xchg inc roll ret mov mov mov jo push xchg cwtl clc into rolb loop mov and mov push in rcrb insl sub pop pusha maxps add inc add mull jmp cmc insb (bad) (bad) adc jle inc and in fwait pop jg fcmovb lea sbb fistl jl,pn loope sub sub push mov call pop add adc push call insl enter ret nop xor xchg incl xchg inc data16 xor fs aam enter sbb outsl sbb push aam pop scas notl imul and mov push mov push dec cmp push jne fcompl mov fxch push lods in inc addb adc adc inc sub rolb mov mov sarl dec mov shrb out gs xor pop (bad) dec dec lcall repnz (bad) jmp movsl mov jg (bad) xchg fsub sbb gs jge pop inc ret add inc mov out adcl (bad) mov lds ds push loope xchg test pop sbb mov mov add ljmp jmp std and idiv jb pop loopne in lods (bad) mov outsl mov cmc dec das pop mov inc in pop xor cltd lret xchg xchg adc sbb mov jns movsb popa add fcmovne rorb shrb fsubl enter (bad) pop dec jbe scas shr dec popa (bad) aas test add or shll stos (bad) testl jmp mov shl add not inc btr add add stc call jns dec into push inc push xchg sub dec (bad) pushf in mov out ret cmp (bad) mov fidivl push ficoml xchg sbb mov inc cmp jmp adc fcomps adc sbb stos into pop loope loope or jmp push or pop lds out test sbb add sbb add fwait leave nop out push std push fwait push xchg inc ret mul jp add jecxz adc jae xchg imul and inc mov add int3 (bad) jns mov jle inc call movsb inc push xlat push inc push inc fisubl mov outsb sbb (bad) pop mov push call lea es je cmc cmc movsb inc loopne inc adc int3 jg cmp mov or (bad) pop lret insl sbb or add test stc inc repnz repz push cmp nop pop cwtl call xlat sub jno stc jmp leave and fcoml xor pop (bad) adc cld inc mov pop out mov sbb cmp (bad) hlt push jle cmp call int3 ret pop rolb cmp and add and and mov adc xor xchg in cmc inc test pop imul cs fs jmp lea je rcr bsr sbb xor shrd lahf cwtl mov aas xor mov or shr lea shr adc shr movsbl sbb mov cmp test bt or jl push lea je add test add call push jmp mov lea call jmp jnp ja jg jo ja push imul xchg inc pop push aad cmc inc leave inc mov idivl or or cs cli push fnstenv cmpsb lds dec test jp ja dec cmp in inc mov inc pop insb lcall push push ja xchg pop imul jno cs lds jnp bsf test (bad) repz mov bt clc cmp and push stc push add sub clc test jmp pusha pusha lea ja or ror call jmp mov lea pushf lea call push pushl call lods test adc rcr ret sub inc mov jno loop (bad) pushf push in sbb mulb loopne mov shrb cmp nop inc into sbb xchg pop pop mov pop leave test cmp popf cmp cmp fidivr (bad) xchg jns mov (bad) cli xor adc (bad) mov cmp sti cmp sbb lods rclb sbb lret adc mov fwait clc xor (bad) mov inc gs mov or jecxz push cmp push rorb inc outsl stos mov and mov inc push mov jnp add aam mov idivb push ret adc and pop xor call sbb pop cmpsb push push mov adc int3 and lret xchg test loope (bad) arpl shrl out outsl inc mov cmp sub dec scas sbb fbstp jg jge mov push jbe jecxz adc nop push cmp pop mov ljmp add mov lock xchg xor push jnp mov mov pusha xchg sbb inc xchg pop (bad) mov lea jmp outsl and in jnp lcall sub xor mov add sub fisttpl xor or fisttpl adc push cmp lret sti add sub (bad) jmp test sahf pop mov cli xchg push iret (bad) enter sbb dec fstl or scas lea push or push and and test bound cmpsl mov insb push dec inc gs and add clc into push call dec loop xor sahf cwtl xor xchg stos pusha add add js mov imul shl sbb lcall mov mov mov xchg test ds mov test adcl lds pop mov cmpsl and inc mov subl jbe bsr rcl sub bsr sbb clc mov setge and mov btc add bswap shr shld sbb mov bswap add push pushf call mov ret push adc add push mov enter gs imul jo mov imul cmp inc out cmp outsl adc sti mov ds pop imul dec jae inc sbb int3 add and cmp mov xor xlat push pusha or inc push out inc dec pop push xor mov adc push adc loope insl fwait test push js xchg lret out mov mov ljmp xchg int pop loopne dec sbb sbb sub insl cmp out fs cmp add xor push lea movsbl sbb bts mov or movzbw push push xor bsf xchg pusha neg movsbw mov bt mov bsf shrd (bad) repnz xchg sub mov test bsr mov cmp movzbw mov cmp clc mov clc or jmp lea jne bts bts sub pushf rcl jmp jmp push (bad) jno sbb pop addr16 stc sbb int pop push iret arpl jno and fwait leave pushf stc mov sub int (bad) fsubs adc or leave fdivrl incl or cmp adc clc mov mov aad inc and call ds cmpsb sbb jb (bad) aaa mov cmp clc call (bad) cmp xchg push fiaddl cltd sarb jno push std sub clc sub loope cmp cwtl fistp popf push inc test orb mov stos cmp pop loope inc push test jmp push push push pcmpgtb lds inc push out cmpsl ja jns (bad) lds insl aad inc imul imul xchg pop repz outsl pop pop jp minps add bound cli add pusha jmp or imul test stos push jg mov cmp aad pop icebp or sub rcrb aaa xor mov (bad) pop push jp mulb ror pop mov inc je or cmp cmpsl fsub mov xchg stc es xor jg jbe lret test jbe in stos les mov fimull add shr jo testl dec lds (bad) rclb loop movsb dec adcl push rcrb cmc sub mov fucomp jecxz mov mov mov sbb inc adc jnp lock call mov dec cmp mov sub sub bound jl das sub roll and inc push cmp jns jbe adc add jge movsl jns pop or (bad) and cmpsl add mov sbb pop push stos push sarb mov lcall xor and dec cmp cmp gs lods in (bad) mov sbb cmc js xor mov repnz push pushf pushf pushf lea jne setbe or setle cmp mov xor test stc shrd sub push bsr lea sub call push pushl ret jmp call and inc push test out xchg andl test mov popf jmp scas test push mov jo aam xchg pop xor pop cmp or jmp sbb std rclb insl mov jle dec xchg lods mov sbb push lods aam inc adc nop jle shrl rcrl (bad) mov test jmp aam sbb orl rol testl lods or sti dec mov xorb jno daa popa outsl (bad) xor jg ds stos inc jg mov xchg dec xchg in je es stc xor sbb or insl int test jne das shld dec jns roll mov bnd and aam nop inc and mov xor lahf scas jmp sbb pop mov das imul loope or (bad) jmp sbb pop cmc or fnsave push xchg fildll repz xchg movsb cmp test xor cli sub movsl stc out ja mov sbb lock push cs and add daa or in adc jecxz jp jb jbe lcall iret pusha pushf call imul stc cmc pushf add push lea jmp pushf lea mov push seta lea pusha mov call into pop rcll push dec and cmp pusha xchg jle push fmul xor fimul xor xchg ror adcl and cs pop mov rcrl clc add and push insb xor cmp scas in inc pop aas cmp lods pop outsl inc cmpsl mov mov scas movsl mov jmp mov add movq clc cs xchg inc mov mov repnz test aaa pop sbb xor add ss jno sub stos sbb cmp rcrl jbe add xchg (bad) in cmp inc push inc pop and popa and pusha call insl cmpsb or lea mov jae sub push ret ds add inc sub popa jae cmp addl jecxz mov mov cld leave jecxz stos jp xor mov stos push and sub (bad) jmp hlt pushf lea jmp mov inc push ret push adc subl inc popa mov enter pop rcr test dec xchg lods addl out test dec adc leave cmp rolb push lods jbe lods jle fstl in xor fdivl pop gs js stc mov jge clc mov cltd pop sahf (bad) dec jo jne jl xchg mov push xchg out rorl push das dec dec and push insb sbb xchg lahf incb lahf adc xchg xchg scas add mov aaa mov add repnz (bad) lcall rorb test pusha movb pusha lea je stc sub stc stc push cmp mov lea ja cmc pushf imul push test add push movw mov lea jmp (bad) (bad) xchg inc sbb xlat pushf sar or pop push adc lcall push (bad) cmp xor pusha mov js in jns jg cmp sti adc mov stc dec mov mov aas loop mov mov mov inc (bad) repz jge shrl movsb sub jmp sbb scas aaa xor push sbb pop (bad) sbb xchg lods mov push add dec pop add (bad) rcl mov and ss fimull cmp inc or imul sarl loope movl mov dec rcr call mov xlat fldl fidivr inc test mov jle add sbb pop stos and push pushf movl push mov pusha pusha lea jmp out add and push mov and insl das decl jmp fild jmp xchg imul inc fiaddl xchg jmp in loope and es ljmp test sub les and cmpsb leave push push clc hlt dec imul or je push shrl xor sbb das push push loope mov ret mov gs incl cmp mov clc and (bad) xor adcl loope popa rclb jno jle,pt adc and jge stc pushl mov fcomps or in ret fimull loopne inc push jbe movswl sti mov sahf cwtl mov or data16 data16 shl divl xor aam pop sub xlat jmp lret lds call mov in movsb inc bound repz roll push clc cltd incl pop and pushw pop mov mov xchg cmp jl je xor in ret mov movsb mov clc sahf fidivl or leave and ljmp sub xchg outsb add (bad) jae repz sub jnp loop sbb fdivl pop fsub adc xchg or testl jbe adc mov dec mov loope mov cmp pop jo mov pushf call in dec divb stc inc cld sub mov dec mov push fnsave imul pop (bad) dec or imul rclb push jl iret mov xor cmp cmpsl dec vmovlps loopne lcall cmpsb jg xchg mov rorl in jnp in sbb ds inc xchg js sbb popl aad ret lods fisttpl scas lds pop roll outsl cmpsl jo jns dec es inc push inc fsub dec int3 or mov scas arpl dec mov cmp inc lret test add fadd sbb or xor xchg popa push sbb or or lods cmp dec dec (bad) fiadd fsubrl push mov push push jge dec loope in sbb push (bad) pop cld or xor mov scas outsl push inc push test and lret jecxz icebp adc push pop (bad) xor sub adc push les push adc lcall int3 pop mov nop and mov pop push ret add loop in push cli nop push add add add add add add add add mov add add push add add add incl add add add add add jne add add add add nop push add xchg push add mov add push add add add or inc pop cmp cld cltd adc xchg push loope aaa push std adc lods xchg pop pop cwtl test sub idivl stc or or mov and jmp push cmp add les dec xchg push std (bad) andl lret (bad) dec in (bad) lock idivb pushf jp lret or fistpll movsb lods add clc mov mov jno in test loop adc pushf add (bad) push fstpt popf pop sahf cmp push mov cmp loope and std pushf inc and jno insb jecxz fs fcmovnu push cmc cmpsl test pop stc xchg ficomp cwtl push std jno int3 cmc jg jno jnp rcrl shrb or rcl enter jb ret fisubl je pushf jb mov jge test pop dec mov aam scas inc mov dec loopne dec (bad) insl dec loope add mov pop rolb addr16 and in loope pop pop pop add jl test push add adc hlt cmp inc fsubl xchg lret cmpsl mov mov xchg add repz imul xlat cmp pop (bad) orl nop inc cmp gs mov iret cld pushf (bad) push mov lods sahf xor jmp xchg mov sub dec (bad) movsb das cmp push adc clc xlat xchg sbb add mov loop xor mov or jns cmp test in cli push into movsl imul lea loope mov cwtl jecxz lock inc jl insl les mov or rorb mov cli or scas stos inc sbb (bad) fcomps fldt in dec mov in lock inc fsubrl imul mov dec lds mov jg dec int3 jb cmp sbb and stos push lret insl (bad) mov fisttpl lcall pop ljmp xor rorb cmpsb test mov outsb sub and (bad) sar inc mov and lea push data16 mov insb push adc inc push jbe movsl leave inc push add adc std adc pop pop fidiv jle jl ds push fistpl test int and fwait mov adc jbe mov (bad) enter dec mov mov rcl add lcall loope pop push dec aam fstp push in sub mov xchg pop gs int pop or mov add (bad) out decb push inc inc inc mov jb in out cltd ror jle in mov or lods xchg jns jle xor dec movsb outsl inc fcmovnbe ja pop fsub lods inc dec jns ret das xor adc mov int3 out subl cmp adc daa cmp xchg inc mov jns mov xor into push negl dec inc (bad) dec imul mov xor loop adc and rcrb inc outsl (bad) mov add js inc pushf aas repz negl outsl add xchg push mov lock mov xchg arpl out cmpl loope,pn test or fdivp ljmp adc mov and cmp add data16 mov aaa stos inc fisubr or or dec repnz xor pop popf (bad) or add push insl (bad) jle lock or call jecxz enter lea mov and xchg pop dec std jo out js jno arpl (bad) dec (bad) clc (bad) ja inc int3 adc adc into inc movsb or cltd pop into jmp ljmp push insb mov fmuls mov jl inc rcl scas cmp xchg je inc test and mov cmp (bad) (bad) popf cld adc inc lret cmpl mov pop xor fsubs mov loopne xor in out out fsubs fcompl inc dec fsubrs push fwait jmp in mov dec negl gs fwait adc mov xchg xchg dec fisttp pop les inc movb push jbe add cltd (bad) leave (bad) test add lock xor adc frstor shlb in pop mov xchg xor std sbb in aam dec es lcall jne movsl (bad) jo cmp pusha mov (bad) adc cli mov mov push cmp mov jmp fdivl sti out cltd or loope ret adc push iret jbe mov (bad) jmp (bad) push jmp cmp movsb jl lock mov push push dec or or or das pop fsubs out push iret scas or sbb lcall add jb dec pushf xchg mov add pop and pop sahf je mov out xor adc aaa or sbb inc fcom jg (bad) jb cmp inc sahf jae iret sub dec sti test dec mov jbe pop aad inc scas ffreep mov andl pop es lret mov mov xchg xchg add and xchg jecxz loopne mov jne lods mov stos sub mov cli mov aam test sti fistl dec push lea imul movsl int dec fcoms scas rorl dec (bad) mov xor fwait xor cmp popf outsl adc stos mov dec adc or inc cs scas or and xor nop cmpb pop leave mov scas jmp inc push adc icebp xchg sbb dec push (bad) (bad) (bad) xor decl inc push cmp cmp xor cmp icebp jp loopne add or xchg (bad) sti lods insb cmc hlt cmpl js sub inc xchg movb dec mov add daa and shll cli fcomi mov js push leave scas pusha out dec aad leave push out dec and stos ret loope fwait mov xchg add dec lds out insl rep mov (bad) enter pop (bad) aam xor dec inc dec xchg sbb mov push pop in test test cli add ja int ss fdivs inc pop mov fistpll sub mov xor clc push fisub sub fsts and (bad) or fdivrs loop cmpsl popf mov insb and pop lods or or or mov mov jp int3 inc outsl xchg and jbe mov xchg nop leave pop cmp mov mov jns push lcall out push stos cmpsb movsb hlt or xchg repz push sub ss fsubrs fist mov xchg shrb push xchg inc cltd rol lret inc mov push dec stos lods adc pop mov icebp scas fucomp outsl dec scas lret mov sub dec adc (bad) mov pop mov icebp and adc lahf shlb jl stc cmc or subb sub push cmp jo loopne daa pop lods movsb sub add xor fidivrl popf out out or jo stos xlat ss mov inc rcrb in (bad) and mov hlt (bad) std adc pushf jmp ret push repnz xchg add dec push movsl dec pop pop pop inc js aad fcmovnbe jmp mov adc out push (bad) fldcw and adc pop mov lret cmp lret inc shll lods rclb ret outsb xchg jae mov pop cmpsb imull sahf add fcompl jo mov mov into pop popf scas pop sti push jns sub repz or pop (bad) (bad) sbb (bad) repnz test xlat adc movsl outsb xor std push push or dec es add sbb jne push sbb mov fdivrl xor cs test xor xor jp inc ja (bad) mov jg mov dec xor roll out sub sub inc xor lahf loopne adc (bad) sub fnstsw scas pusha dec inc ljmp inc test jb (bad) push cmp add nop popa xlat jmp lods add add add or mov and mov xor in lahf xlat push push jb (bad) jmp mov xchg xchg and jg sti sbb xor cs pop ret sub xchg cld pop in push stos or lret test inc aad add in sub mov les adc jg cmp and pop push jecxz,pt and mov in sbbl pop dec and push and mov mov inc loope xor push push in inc imul xor cmp je ja stos cmpsl jns out sbb popf pop div cmp pop xchg orl mov or add mov data16 dec mov (bad) cmpsb or iret sbb push cmc jmp into push push or pop push xchg push push sbb mov cmp pusha sub in jbe mov (bad) loopne mov scas in xchg cld push pop fdivrl dec pop xchg loop jge sub into push (bad) aad fbld rorb adc push data16 dec ret mov cld fucompp repz xchg xchg ja jns in leave test pop sbb pop add push mov lds jecxz sbb pushl lods add cmp fcoms in jmp stos lret dec push adc daa adc in and fistl aaa aas add mov and sub lods lea pusha mov mov sub xchg pop or int3 cmp movsb ret ss push mov popa fwait sti and xchg (bad) push mov dec mov lods iret scas jmp inc jmp mov mov mov add sub mov gs sub fdivrl mov push pop das xchg rolb xor (bad) jns fldl imul fwait loopne pop xchg add lods cmp inc stos mov xor mov push nop sbb xchg in xlat dec nop push fistl xchg js cmp cld jmp inc add mov or dec ss fsts in ja and loopne xchg or movsl jbe lock test cltd mov aas aaa pop lods pusha mov je mov or inc sbb push xchg fucomi mov jae dec sbb sbb sbb jnp scas aad push xchg arpl test cmp lret cmpsl jno mov cmp xor mov mov or push in lds mov mov jmp arpl push adc cmpb outsl cmp and jo inc dec (bad) dec fisttpl (bad) cmpsl loopne rclb test cwtl add loope,pt push (bad) wbinvd imul popf pop mov icebp inc mov imulb lds iret dec mov lret jnp aas mov or fwait mov jle iret push pop xor je sub roll xchg jno sub test mov add fldcw rcrb sbb xchg dec inc (bad) push xorl xor or in pushf aam in mov or (bad) sub int movsb js sub dec in js jge lahf sbb rorl cwtl lock clc mov mov (bad) lods addr16 add push das pop out in das or jne test sbb test fildl adc mov pop clc push in push sbb or in cwtl mov in or scas xchg adc das xlat adc xchg add add or xchg repnz hlt inc fstl pop scas pop sbb push scas hlt das sub sub out out fldt in jb or lock sbb lea mov mov lds stos pop ja scas clc aad cwtl bound outsl or pop pop push flds pop mov inc (bad) aaa push xchg jl popa (bad) imul stos inc dec aam inc mov cmp ja bound ss cmp sbb nop mov push jnp mov or xchg inc xor push cmp ja insb dec mov test out jnp xor mov outsb xor int repnz addb jle sbb xchg sub mov pop push mov xchg mov sub das mov xchg outsl inc xchg sbb fs add inc jl sahf invlpg lods and jns pop ret inc daa in jge or (bad) mov daa loop shl push stos sub lahf rcrl adc call cli cmp popa add add cld (bad) jns stos jg inc push and xor lret movsl dec push leave icebp or cltd mov std popf popa icebp sbb sahf pushf stos mov fdivrs (bad) push cvttps2pi push mov jecxz int3 xchg inc cmpsb out in (bad) mov dec jecxz push rcrb cli scas jb push push mov out jg push pop adcb out lcall test cmpsl mov and shlb test int3 push jmp cld fs and fcmovnb int3 adc sbb (bad) jmp shr jmp inc push mov not stc stc rol mov jmp bt test test xor movb add jmp push stos push push lea jmp push push inc push xor cs insb add xor cld decl cwtl ret stc not push rol inc dec pushl stos jmp xor pushf movl inc push push cmc neg push call pushf clc and stc mov cmp pusha add pushf movb movb pushf lea jmp cmp stc cmp jo push pusha lea jae stc add push jmp sub inc push mov leave xchg stos add jmp jno mov push inc inc lahf imull (bad) fnstcw sbb xor jne lahf add and pop jnp mov fwait sbb push (bad) sti fdiv push pushf imul or lods out cmp jae sub cmp add fistpll inc enter mov pop push xor test xchg ss jns mov pusha sti stos jp pop mov xor aaa inc add mov loopne fs lods cmpsb pop repnz mov shlb into inc inc push fiaddl popa imul arpl inc and imul shll movsl scas in and dec fidivl inc repz std xor cld enter sbb fdivs sahf aas push enter xor jns xchg xchg orl mov cmpps xchg xor pop or sbb jnp cmp imul sbb mov push je cmp jne xorl sub sahf rcrl jo push push and repz call inc cmpsl adc xor add and (bad) ljmp inc push xchg sbb push leave popa and movsl mov fcmovnu cltd push sbb mov test sbb adc xchg pop incl in pusha scas rolb cwtl (bad) cli js call iret xchg loopne std mov repnz push fabs pop pusha xchg mov or or lahf shl mov ds stc and jg xlat jle ret insb pushf mov pop out repnz mov xor in xor ret lods cmp pop adc ja dec push andl adc in mov out pushf shrb adc nop mov or fbstp lea add (bad) pop and adc aas out mov and push lea cmp cmpsl iret xchg mov int aas sbb sub pop (bad) cli or adc mov push int pop bound inc sub pushw mov imul lcall mov test pop mov js push stc ss fistp imul dec xorl mov scas js (bad) mov inc push push pushl mov sti pop ja stc push mov adc icebp jae push and cmpsb fsubrl mov not mov data16 pushf lock jl enter mov push sahf cmc std dec sub scas inc push fwait sbb lock test add test test loope repnz sub xchg xor or in fwait push rolb adc push inc jb (bad) sbb add inc lahf je push mov dec loop pop inc push lcall (bad) mov push jmp popf and (bad) dec cs (bad) jne lret jb xchg call and mov jl outsl lea das xchg (bad) in jb mov dec push push fnsave addr16 icebp xchg xchg push in push xchg in pop call add ficompl inc push int3 (bad) mov mov in mov ret mov cmp pop decl xchg jno pop or fnop lods clc jne mov dec addl iret lahf adc in lods sub stos faddl lock and adc jcxz mov sub sbb mov mov stc add sub push mov push test ljmp lods fcmovnb cmpsl aaa jnp pop mov lods cld (bad) add jecxz and sarl pop sbb mov dec mov fs clc mov loopne xchg lds pop aad es loope or ficom xchg sub sahf out push insl mov punpckhbw leave xchg push dec lea js shr pushf call mov pushf lea jmp sub insb dec inc push orl push sub addr16 sti inc mov push test xor sub call mov lods pop sbb mov xchg add cltd inc and xor adc cmp mov adc push pop lods rolb or fwait lret (bad) sub ljmp adc mov push mov test call jns cltd mov je scas outsl mov sbb or int es mov or cmc daa (bad) arpl add inc fcmovu imul pop mov inc add ja push fnstenv jecxz ds mov dec mov (bad) shl shl mov cmc sub cmp cmp test cmc pushl pushf pushl cmp pusha jmp loop fisttpll dec inc push push cmp fadds inc insb xor movsb push aam mov sbb jge pop bnd add inc lret cmp pop incl push xchg stc sub add outsl and stc cmp fidivl (bad) mov jecxz or pusha sbb stos xor xchg outsb repz lods imul fsub xor pushf jmp add jg arpl dec add fwait nop clc ss add cmpsb cmp mov inc or jne repnz aad insb mov sbb xor sub (bad) xlat dec jmp rorl pop lds push mov addr16 pop dec push mov xchg sbb clc clc inc jnp inc int add popa lea add push int3 hlt jb jg or jno mov hlt lfs lea in mov lcall jecxz sti mov addb mov xchg cmp in jecxz adc cs call sarb in inc pop ret adc dec xlat or movsl mov in mov adc (bad) sbb test sub cmpsb divb mov je sub mov pop in pop fistpl xor inc mov aam cmove mov mov cli icebp (bad) negl fcmovnb in xor mov (bad) setge dec mov mov mov cmp xchg shrl or push mov fmull fucomi sub push sub cmp iret sbb test lcall rcrl pusha pop fidiv add iret dec sahf lock loopne mov mov outsl add cs add mov test mov push (bad) and (bad) cs ds add and sub push inc pop jnp ret sub out outsl push int3 jmp add fs xor (bad) rol dec clc xchg mov out stc lahf mov dec push mov outsl pop jmp imulb dec test repz adc xor decl and icebp in jnp push incb xor xchg mov iret dec push and pop sbbl xchg xchg scas inc jnp imul pop or icebp xchg lahf mov jns sub cmp (bad) add push xchg (bad) pop test inc or ja out mov or mov lcall aad fwait int3 in loope mov add jnp xchg pop cmpsb outsb shrl jnp dec lret mov mov lods jns mov pop clc and jmp pushf lret xchg cmp fcomi xchg sbb outsb inc popa stc movsl enter add cltd jmp sbbl jo sub jnp fadd loopne mov mov sbb aam loop lcall mov add mov lea insl or pop cltd jnp cmpl xchg or jmp jo pop lret mov (bad) dec xor stos lods ljmp inc aad (bad) ljmp sar mov aas push lds xchg xor lret mov (bad) sbb push mov xlat jmp test dec int3 cmp in pop fwait lcall jae mov clc pop out cmp mov stos scas test jno push jb mov call jp sbb sub mov adc lahf jae (bad) sbb movsb repz ja dec inc ja stc push jns clc xor (bad) or ds push stc push jns clc ljmp jbe mov mov std repnz std repnz pop pop xor std repnz pop pop andb cs repnz pop andb xor pop mov mov std repnz std repnz pop pop xor std repnz pop pop andb push push repnz pop andb xor pop mov mov std repnz xor std repnz pop pop xor std repnz and sbb adc dec push pop ss addr16 sbb mov ja jae popa cli gs mov fcmovbe jge sbb aaa adc pop pop es mov in in in mov ss jp mov aaa cli pop icebp cmc jmp mov outsl rcr push lods (bad) and stc outsl push cli addr16 in jb outsl sub lcall dec sbb ds mov dec leave addr16 aam fidivrl sub arpl lods inc test mov pop jae jb mov cli lcall mov xchg push mov lret xchg pop aam (bad) xor cwtl rorw pop aas arpl mov dec add xor cwtl xor inc jae push xor xchg jae sub mov clc jae sub jbe mov lods push js rolb sub mov idivl mov fsubrs fnstsw loopne aam push out ret dec or sub mov cmc aad lcall fsts bound sub loope sbb (bad) xor cmp call jb xor fsts mov cltd pop test mov hlt movsl xchg cs fnstcw sub push repnz sub push jl cs jb adc (bad) test shrl adc mov mov mov mov dec ljmp loope cmc jmp pop adc xchg outsl jge sarl cmp in jp movsl icebp pop mov fs in test push add (bad) lods adc push cmp in jbe mov leave pop inc cmc mov push bound sbb ljmp stc sbb sub pop pop push mov pop push cli mov dec pop cwtl jle mov sub xor push pop sub loop dec sub xchg in popl sub (bad) repnz movsl or imul pop cli pop dec dec imul (bad) dec mov mov ret sub cmc xlat leave lods or in pop jns test movsl dec pop pop sbb mov imul fcoml push dec dec inc inc aas cmp jnp das sub and sbb jnp ud2 pop add cli idivb out ljmp ror lret mov scas stos cmpsb mov xchg mov jbe jb and pop pop push push dec jnp inc inc cmp xor jnp and sbb adc jnp push add stc cmc icebp in jnp in fstp aad int leave lds arpl jnp popf cltd xchg xchg lea mov imul aad test adc mov jle add jmp and stos add adc mov int3 (bad) scas dec inc jno rorl dec sub hlt add pop push adc sbb mov dec cli cmp cltd mov push arpl (bad) ss stc test or icebp add jb in or add aam and sbb (bad) not adc sub jo adc movsw inc push scas fucom pop dec cmc mov mov cli in adc mov dec xchg fisubrl add sub mov sub cli in test leave adc rcrl or imul mov xor jbe inc sub scas and cltd (bad) sarb arpl int inc mov pop add adc sbb and cmp push test ficompl loope xchg cwtl or mov (bad) pop (bad) movsl sub in sub adc inc call xor xchg push push int xor jmp mov mov (bad) mov xor jmp notl mov push mov push lds xor sbb mov in mov ficomp into mov int3 icebp stos add clc ret mov test sub outsb jo jmp lcall and cld arpl outsb clc dec mov mov push jl hlt mov repnz pushf mov mov xchg cmc add push scas xchg test dec ftst cmp adc std enter loopne inc mov js pusha idivb jbe xchg fidiv jns cmp arpl in mov out lcall inc or mov sahf jle lds sub in jge push mov ljmp add lcall sbb lds cmp imul clc test imul sub cmp lcall call into js sub inc (bad) push (bad) mov call stc and xor cmp repnz jmp stc jae cli mov cmp cmp mov repnz fidivl sbb mov xor (bad) das push rcrl stc repnz mov adc clc lds pop mov leave repnz (bad) pop sbb jne xor aad cltd xor jp push ljmp cmp sbb and dec stos push loope jmp and outsb insl into in cmp faddl inc dec daa cltd push add and mov xor rcr loop (bad) test inc popf ljmp data16 xor or cmp xchg xor sbb js sub imul pop xor inc scas cmp xor sub outsb movsb xor (bad) dec pop cli outsb outsl mov test roll pushf nop daa mov or (bad) pop aad mov push addl jp (bad) cs sbb pop xchg faddp sub mov (bad) lcall stc mov jg push lea mov fldl stc (bad) fwait pusha in mov popa mov adc aaa sub pushf xchg rol stc ljmp adc daa cmp rclb in or loop loope hlt xor push pusha xchg xchg in cmp mov jbe push sub fwait imull lcall and sti push cmp push sub cmp lods movsl adc pop cli testb stc push add pop lods adc (bad) mov mov rcl xor sbb icebp xchg pop adc divb sub push arpl movsl jmp xor lret xor in push sbb aam sahf sub jp lahf pop and lods xchg out sbb push sbb and xor lods and mov dec jg into cmpsl xchg jp test and dec test sahf les lcall mov pop aad xor test dec out cwtl xchg mov push loop mov push (bad) jmp pop out mov into push mov cwtl push xlat aaa stos mov xor aaa sbb repnz pop push mov inc fnop pop dec insl imul test gs fisttpll call fisttpl sub adc (bad) pop movsl int3 loop fldl jmp setg sbb aaa addr16 icebp aad cmp (bad) mov repnz in pop jb inc int pop or adc lret ljmp or xorl fisubrl ljmp pop imul aaa (bad) repnz cmp xor mov fnstenv xor loop push push sub xor jns mov push mov pop jmp push sub xor pop pop push jp mov stos push mov pop ljmp sub pop dec xor repnz xlat or xor xor ljmp push clc xor sbb xor cli lahf repnz movsl imul sbb dec jmp repnz test xor lret jp xchg pop enter pop or or jne xor outsl cmp movsb popa icebp gs repz pop stc ret xchg lcall xchg cmpsl pop pusha mov cwtl lds pop (bad) jae out pop lcall stc call cli jae fcmovb (bad) daa fistpl cmp repnz pop ja hlt jp jno jae gs mov cli mov mov push jae ja loop sti (bad) jae jae xor ss xchg push or aas (bad) ja add mov jns stos addl insl imul push dec dec jnp inc cmp sub and or add clc hlt lock call fcom ror enter mov test movsb mov mov js jo push pop push push dec dec jnp inc cmp xor sub jnp and adc or jnp add div out jmp jnp (bad) xlat ror lret (bad) jnp mov stos cmpsl jnp lahf fwait xchg xchg (bad) mov scas rorb adc push jnp and and xor fs in pop je aad jmp into inc inc mov lods push mov in push rcrl sub pop push repz or aad pop mov mov movsl and pop or inc in sub jb cltd jmp out ret mov inc push lcall push outsl cmpsl lea mov and pop dec push mov mov stos into popf mov popa cmp add js das push mov (bad) pop out int cmpl add xchg imul je push je into pop mov and mov xchg repnz add rclb mov add subb repnz add (bad) loopne xor test xor jmp in mov aam cli je push mov cmc daa in dec push test outsb movsl mov dec rcll xor dec scas pop mov jmp xchg cmp outsb xor mov fdiv mov pop xor lods int3 std push sub je mov outsb sahf mov lcall ds sub push aad int xor mov cltd jbe loope (bad) lods lods insl inc out inc in jmp mov jmp inc add adc ficoml cmp xchg (bad) pop dec sbb mov ret call lock mov stc out push cs push arpl push cmc push or das cmp mov pop or icebp adc mov xor movsl lds push adc sub and mov and leave aam mov addl jg or pop in pop mov push jge int cmc (bad) xchg jmp sub fcompl xor push mov pop jb sarb cltd cmp mov imul lds ss cs sbb jmp dec gs jbe or mov cli inc sbb cmp into aas hlt mov cmp addr16 dec jmp inc int inc outsl jge cmc fnop jg adc enter inc and adc repnz cmp push clc cmp dec inc xor cs jb mov lods jmp mov jecxz sub ljmp and and enter sub cmp push add mov int xchg jle mov sub and mov push fnstsw mov jno test js stos dec push (bad) fucom out sbb fnstenv xor (bad) sbb push sub scas (bad) cmc ret jle or gs popf push (bad) lcall cli push lds (bad) sbb sub mov lret push mov hlt loopne int mov (bad) out add dec call sahf mov lcall ret sbb or fstl stos bound subl cmp jmp cli inc dec adc ret pop insb xor jae fst imul idiv clc jae pop jno test (bad) lret lret mov jbe push ja pop dec push xor inc in push jae aaa mov ss jbe aaa push repz push cmp rorb jnp xorb dec xlat stos fistpl jns data16 and jnp (bad) rcll out bound lods dec loop,pt mov outsb add sub mov repz cmp jnp or cmp inc or xlat pop imul out aam lock cwtl fsubs mov fs outsl repnz mov jl lcall (bad) jns jmp or push pop ljmp out ss sub outsl dec or mov jae mov (bad) sub or dec cmp (bad) mov adc cmp xchg or pop mov xor in xchg pop into leave pop jmp arpl dec pop push jb test cwtd je add imul or sbb dec cmp mov cld jns out inc jo je jns cmp aas aad (bad) jnp lcall daa rolb sub pop add jbe jmp jnp and aad cld scas js adc mov jns loope mov adc jmp push mov insb adc lds and cmc mull dec add jnp or sub sbb insb jnp or cmpsb je mov outsl mov mov jns (bad) ss sub cmpsb lret (bad) loop ljmp cmp imul sbb cli pop and scas or mov push stc repz or mov das lret cltd mov loopne sbb mov pushf mov jl push cmp push lea ss hlt pop fidivl push dec mov mov cmp or lcall dec add add fidivr repz (bad) gs out cli xlat test lret clc repz sbb jp mov push or lock repnz pop stc jp outsl push mov pop mov mov outsl mov out enter pop aaa add or movsb dec out and cmp aaa jae out icebp clc aaa rcll lcall xor fidivl add lcall shrl out pop cmp sbb out sbb cmpsb push cwtl cwtl pop xor (bad) cmp add (bad) mov outsl mov repnz mov cmp add pop mov fnstcw cmp inc mov (bad) js (bad) div mov imul xor mov stos lahf pop mov xchg out jge pop cmp cmp lcall adc fsts stos icebp dec sub or repnz mov imul and or pop pop jmp pop or fildll cltd mov ljmp dec jae ljmp pop push pop push jle push ljmp dec push dec push popf sub sub clc jge clc dec cmp stos jb xchg leave call aad mov ja fdivrs jns and jmp out jnp mov cli xchg dec jb repz inc (bad) pop sbb xlat xchg cmpsb xor pushf pushf (bad) clc mov fstps mov xchg clc mov add pop cld xor pop movsb loopne push js repnz jb mov mov arpl lcall mov xor repnz arpl sub fxch (bad) jns xor adc loopne push addr16 xchg inc flds push sub push adc imul pop bound repnz mov mov jecxz gs sbb cmp divb repnz or push mov xlat push dec push sub jp cmp dec inc lret cmp adc add cmp clc scas test out out pop sub push les pop dec dec aas mov sbb cmpsl push fnstenv cmp popa push call out pop push fisttpl cmp and sbb addr16 outsl (bad) lea jo and sub bound sbb or pop (bad) jae hlt mov or ljmp out js dec (bad) imul popf mov pop call cmp push sti and xchg clc adc ja push mov jnp call add out mov jnp push adc jnp fs cs sahf lcall sub jnp cmp cltd (bad) fisttp or and outsl mov cmp mov imul scas inc (bad) inc out sar insl loope repnz bound loop sub imul add pop push xor sub (bad) xor loop imul movsb xlat xor xor cmp dec ljmp xor mov ljmp dec loope jne push push add xor xor repnz enter xchg ljmp mov inc out cmpsl aaa arpl mov push ret pop fnstenv fcoms repnz imul (bad) xor jmp mov pop xor cmpsl je jae ljmp ja push mov push rolb sub rcll pop sbb arpl imul cwtl pop pusha clc pop mov or popa pop mov push dec push xchg adc das cmpsl scas mulb sbb (bad) dec repnz cmc test jno jnp pop sub sub adc dec movb xor push jp xor lods js mov sbb mov cmpb mov xor ret adc push xchg cmpsb pop stos or cmp (bad) loopne inc (bad) hlt out jnp in push sub lahf jnp xchg inc pop cmp ds jnp sub test pop add sub stos fdivs jnp push mov aad je (bad) or mov movsl ficomp popf movb jns jne dec fs jns add iret sbb aaa add adc mov movsl sbb pop jp sub jmp sbb sub jg jecxz push jnp (bad) inc in icebp mov pushf dec lcall int3 push xchg jl ja push mov popl fld cmp popa outsl std mov push or sub int mov and lods sub jp and stc push lea pop dec shll xchg push push js (bad) xchg outsb inc aas pop fs cmp add stc fmuls jle lods (bad) flds jnp xchg push mov pop sub mov adc outsb xor inc aas push arpl adc sub push inc pop fldt fsubs mov xor fidivl and push push inc mov jne popa and fldcw mov insl daa dec or jg das jns sub push push mov xchg shl fsubr dec scas dec insb out inc jnp mov jne fcmovne mov sub dec sti arpl stos pop sbb subl lea sbb cld out inc fsubl and divb add pusha jno cmp mov and outsl mov leave outsl int3 push or push inc mov fidivrl ds xorl in imulb jnp lods inc lcall loope add sti in nop addr16 (bad) jecxz jnp xor pop pop xchg fwait ja stos mov push cwtl sbb test mov mov subl mov lret lcall xor jnp test outsl outsb and sti jnp sahf jle fsqrt push push pop in or or enter add mov int pop jnp push jne cmp pop pop jnp scas mov add jle push xchg mov das rcrb jnp sbb mov or add (bad) adc std scas and jle push jnp call into dec insl loop inc (bad) adc jnp dec repnz es clc jae lcall jns shll stc ret aam test jg jmp mov lcall jnp mov inc mov mov ret sub (bad) sbb ljmp fwait push rcll cs in jne hlt ss cmp jno mov fldl inc cmpl lods inc cmp add pop jbe jns add mov imul call dec xor mov inc sbb jnp or jecxz in fwait dec mov inc les jnp mov lods imul jnp in es and push jnp xchg xor mov sbb mov loop sub mov inc cmpsb dec xchg int popf cmp xchg jnp rdmsr stc sbb push sbb jnp ret jge or sub sbb jns (bad) jnp js int3 movsb or aad lods mov (bad) sbb jnp aaa leave mov cmp outsl stc in dec pop fsubs mov mov jns stc mov fsubrl inc rorb jnp mov outsb mov push jg pextrw xor movsl test adc repz js idivb cmp sbb or movsl pop inc jne lea insl adc les cmp fistpll jecxz jbe mov xor jne cmpsl movsl xchg or iret add adc sub mov jnp aas ret nop push mov test hlt xchg jnp jecxz aad push mov (bad) jae out inc jnp mov iret jne inc stos aas xlat push and inc jnp push sbb sbb jbe incl arpl cmp adc inc lret fstps pop bound add fwait inc jnp in (bad) xor mov and xchg out jnp in cs ljmp ret push pop pop loope (bad) add jnp test repz or jnp and pop enter jnp (bad) xor cmpsb lret push clc fistpll cmpl lock loope fxch js ja cli jnp js arpl icebp jg jno mov jmp lcall aas xor jnp cmpsb mov dec jnp add xor sub fwait addr16 xor mov cs cmc idiv je test adc addr16 aam jnp mov divl add int3 mov mov adc pusha cltd out lret cmp dec jnp fidivr mov sarb jo mov lret fxch xor inc cmp adc dec hlt ja or outsb ja or (bad) lods (bad) or leave js sbb push pop ror (bad) push int3 push add test jnp les dec je jl jnp mov cli lods pop adc mov push aas test jnp xor dec mov out loope cmpb jecxz or std bswap jge (bad) stos into jnp inc mov inc pop divb sarb cli aas and jnp sub stos mov inc ja icebp lods xchg pop (bad) lcall dec jns data16 lock or jnp dec fimull and and xor xor vzeroall xor (bad) xchg sub or rcrb sub pop insl std pop movsb inc jnp mov cmp pop arpl loop mov and (bad) gs adc jno mov jg jnp leave push ja sub jnp fisubl jnp mov subb insl jnp cli (bad) adc add insb dec adc movsb sti mov mov add lods aad lock (bad) test add cmp je cs and (bad) bound outsl jge pop repz cmp xor mov int popf loopne pop sub xchg insb aam jecxz imul cmpsb sbb jnp in mov (bad) in cmp adc lahf shll inc jo cs stc pushf adc sub push inc jns jne leave jnp hlt divb and mov jb pop mov scas movsl hlt cmc dec inc lret js sub pop (bad) neg sarb sub push aaa adc int3 mov and push (bad) in pop xor adc pusha loopne les mov ret scas jnp cmpsb sbb jnp xor sbb or test cmp sahf in icebp jle aas (bad) jns jmp and pop les cmc pusha or pop test push gs data16 out mov push (bad) inc es sub mov ret dec (bad) sbb xchg sbb mov jno mov hlt ret imul jnp daa mov jle add js mov (bad) loopne mov jnp outsl (bad) or jns pop clc cmp and aas repz and mov xor inc sarl mov dec test (bad) xor adc pop sbbl lcall cmp pushf xchg repnz in js loop test mov jne sub add or pop add jnp lock cmp dec cmova js (bad) or push jnp lds adc dec jle pop scas dec or mov cld jns push lahf add mov (bad) jnp out cmp ret pop mov adc dec push (bad) xchg dec jnp sub ja cmp je (bad) hlt aas sarb stc sub add scas fwait lret sahf mov jbe out pop mov les stc mov inc jmp ret mov (bad) jnp out xchg xchg mov mov es sbb jle inc lods push cli cmp mov xor adc lea stc jnp mov add jo imul stc sub call shrd not mov stc bt stc add pushf mov jmp push call mov movb push lea jmp not bsf mov bt inc add pushf push mov lea jp pushf mov mov lea jmp bt xor movl jmp pushf mov mov mov pusha mov call cmc jl daa not notl aas mov push stc test sub jmp lea jne stc push stc sub pushf call bsr neg adc notl dec mov cmc call pusha mov call pushf popl jmp bts shr pusha mov cmc bt sub mov test clc call and btc shl mov rcr bswap inc sub shrd movsbw add inc mov inc bswap rol cmc rol inc inc adc call not pusha cmp not push cmc sub jmp mov push push lea jmp pushl popl push pushl lea jmp test movzbl call pushf mov jmp cmp sub call jmp lea jne call clc pushf clc add jmp pushf popl call call btr dec shl bt mov stc test add call pushf jmp movl jmp push push movb movb mov pushl mov push jmp inc neg mov cmp clc add push pushf pusha jmp pushl popl push pusha push movw lea jmp sar add xor bswap rol movzbw mov call bsf bts rol mov jmp call shld mov jmp push push push pusha mov movb pusha lea jmp call btr daa mov sub shr rcl mov call mov movb push push pushf lea jmp pusha mov push mov lea jmp pushf mov pushl pushf popl pusha jmp mov mov pushf mov pushl push pushl lea jmp push shr lea jle mov jge push pushf popl push pushl popl movb push lea jmp push pushf push pushf pushl popl pusha pushf pushf lea jmp pushf pushl call call movw pusha mov pushl movw movb lea jmp pusha pusha lea movl jmp jne push mov pushf lea jnp pusha movb mov mov jmp mov call mov push call push mov call mov jmp pushf pushf mov pushf push push lea jmp pushf jmp push mov mov mov pushf mov pushf mov call ror movb jmp push push movb pushf mov lea ja pushf mov pushf push jmp mov jmp cmc movb rol push call mov mov ror (bad) repnz call xchg stc clc cmp mov bt movw pushf sub pushf mov jmp cmc cmp shr jmp mov call mov pushf lea jmp mov movzbw setbe not mov bswap movsbw bswap mov seto pusha xchg lea xchg lea setae setge mov xchg lea lea push push repz popl xchg pushl mov bswap xchg push mov movsbl mov push inc rcl rol movsbw push call movb mov jmp mov mov push pushl movb lea jmp mov pushf pusha pushf pushf popl movb jmp add pushf stc shld pushl mov pushf mov mov pushf push movb pushf popl pushl call call dec stc rcr ror btr lea jmp call bt clc test xchg cmp mov call call jmp pushf sub pushf cwtl test pushf sub push pushf mov pushf lea jmp ror clc clc call movb call mov pushf lea jmp lea jbe mov pushf lea jmp bt ror bt clc cmp sub cmp test cmc mov bt sub jmp mov push movb lea jmp push push pusha pusha call sub stc sub jo push mov shr pusha call or mov push pusha lea je call cmc cmc add call sub jmp mov movb stc pushf test and stc stc mov stc cmp pushf push pushf lea jne (bad) repz jbe xchg movl lret setp mov pusha movw lea jmp jmp push call mov not mov pusha mov jmp mov jmp call sub call push mov pushf pushl mov pushf pushf movb lea jmp neg sub movzbl and sbb xadd mov sbb not dec bt mov bsf bts add lea cmc movsbw mov setp clc xor not push setno rol dec shld not bswap or pop shld xor bswap jp sar bt xor pushf shl shrd rcr movzbl add cmc bts sbb lea add btc call movb jmp lahf aaa xchg mov btr sub mov clc clc bt add pushf mov mov pusha lea jmp push mov pushf mov call xadd ror bsr rcr mov sar cmp add neg not xor xor jl lea neg not sub adc btc add cmc (bad) testb bts add pusha ror mov btc add shrd jmp call mov call push mov push mov lea jmp cmc cmp add call mov pushf popl lea jns pushf push pushl pushl popl pushf mov movl pushf lea jmp bt xor mov push bt cmp bt sub jmp pushf mov pusha jmp call cwtl mov pushf mov mov pusha pusha mov push push lea jmp pusha aam add mov pusha call cmp neg neg add sets xor rcr add rol dec add jmp mov pushf lea jns push jmp jmp mov call add pusha movb pushf lea jmp push movsbw pop lea push jmp call call pushf mov jmp mov push call jmp push xchg lea mov mov jmp pushl popl pushf pushf lea jmp jmp pusha xchg call mov pushf mov lea jmp call ror add pusha mov mov call lea jne or jmp mov pushl call mov pusha movb mov pushf pushf mov call rep ror cmc btc mov sar ror lea mov std stc std bt pushl popf mov mov lea jmp push pushl popl movb pushf movl push lea jmp or movl stc xor lea jae pushf inc call call jmp jmp mov mov push pushf lea jmp add pusha pushf mov movl call push mov pushf call mov pushf jmp mov pushf mov mov jmp mov pusha jmp pushl pushf mov pushf movb mov pushf mov movw lea jmp push pushf pushf push mov pushl ret stc mov pusha call inc clc shr mov sbb call rol movzbl push add pusha pushl inc call mov call or call shl pusha mov push mov mov call movw movw mov call pushf pushl popl pusha pushf push lea jmp call sub pushf xor stc cbtw movw cwtl cmc push clc cmc add call movsbw bswap mov lea mov js pusha lea jmp bswap mov neg adc sbb mov pusha shr dec call stc clc ror stc sub jae sub test pusha stc xor mov sub jmp mov call mov mov movb pushf jmp pusha pushf pusha pushf popl call call mov push pushl mov pusha mov push jmp push rol mov cmp cmc mov pushl call jmp pushf pushl pusha mov jmp pushf mov push lea jmp add pushf mov mov pushl lea jmp sub push inc mov mov xor mov push pusha push inc bt ror cmp jmp pusha mov pusha mov pushl mov pushf mov movw push lea jmp test pushf cmc jmp pushf popl pusha mov pushl popl push push push pushf lea jmp clc test btr rdtsc call call mov cld call jmp add clc clc pusha shrd pushl mov call jmp movb mov pusha pushl mov pushf call pushf lea jmp stc add lea jno mov pushf lea jmp pusha clc mov bt clc clc push add movb call bts sar rcl movzbl add btc pusha movsbw add bsr add movsbw add jmp push mov jmp push pushf mov pushf pushl ret movb call call mov clc pushl cmc cmp add pushf pushf pusha lea jmp pushf mov call jmp daa push bts mov clc stc pusha xor pusha test pushf stc neg pushf pushf dec test jmp pusha mov call cmp sub pushl cmp push cmc sub call call jmp call pusha push pushf mov mov push call pushf jmp push push mov push pushf lea jmp mov push mov lea jmp call test xor test sub movb mov pushl movb lea jmp jmp pusha mov mov call and lea jno push movb pushf mov call mov pushf pushf push lea jmp lea shr xor rcr shld movzbl cmc inc cmc sbb lea jmp call call not clc bt not test pusha cmp and pushf movl jmp mov pushl mov push pushf mov push pusha lea jmp pushl popl pushf pusha push pushf lea jmp mov shr setle xor mov lea jg pushf pushf sub stc shr mov mov pushf mov pushf pushf call jmp mov mov lea jge pushf push movb pusha lea ja popl pusha lea jmp stc cmp mov sub jmp pushf mov pusha lea jmp mov push pushl ret pushl add pushf lea jo push pushf mov mov lea jmp mov call clc add push pushf clc neg call movsbw btr ror mov adc dec cmp mov bt sub cmc test shl pushf jmp bt shl sub mov add shr add mov cmc call aam mov pushf seto sub mov clc cmp pusha cmp add push pushf mov call push pushf popl pusha mov mov pushl popl push lea jmp jmp movzbl push inc setge ror rcr cmp or sub btc btr test xor lea jnp lea inc bswap inc rol add cmc lea movzbl push pushl mov bt pushf call call call pop pushf rdtsc shl pushl popf pusha mov setl pop call call movl pushl popl pusha pushf push lea jmp mov pushf lea jmp mov call jmp push pushl mov pushl pushl pusha pushl ret push mov ror btr sar bsf add add xor lea bswap cmp sub bt mov cmp pushf jmp xchg cld pop mov pushf cld lea call push push inc jmp adc push jmp jmp btc mov call jmp clc lea jno add pusha jmp movsbw mov pusha pushf mov jmp movb pusha jmp btc btr cltd mov btc pop inc jmp pushf mov jmp inc dec movsbw lea xor movzbl stc bt pusha call mov mov pusha pushf pushl ret sub cmc add jmp pushf popl pushf pushl popl pushl lea jmp movw movb movl pusha jmp movl mov jp pushf mov pusha jmp pushf popl jmp add call mov pushf lea jmp mov pushf jmp jmp lea pushf movb pushl push mov pushl mov lea jmp mov jmp jmp jmp pusha mov pushl jmp pushl lea jge push mov call mov call pushf movb mov movb pushl lea jmp not pop cmc neg pusha or pushf add not cmp add sar lea not mov clc movw sub push call mov pusha mov jmp call pushf pusha mov mov pushf pushf lea jmp pusha mov call push pushf mov pusha pushf mov jmp call pushf lea jnp push pusha pushl push pushl ret jmp xchg jmp movzbl lahf lahf mov call pushl popl movw lea jmp push pusha mov pushl mov pusha mov jmp push mov pusha mov push jmp mov pusha call jmp movl mov call mov pushl lea jmp push lea jp pushf pushf pushf pusha jmp add cmp cmc std pushl popf push lea jmp mov movw pushf lea jmp jmp mov push push movb lea jmp mov push movb push lea jmp call call cmc pushl popl test call test pushf sub pushf pushl mov pusha pushf mov mov pushf pushf lea jmp lea jns pushf mov call shl bt shr pushf pushf bt call lea jge push mov mov jmp movb mov pusha push lea jmp mov mov pusha mov push mov mov pushf mov call stc sub cmp jmp movw mov pushf pushf pushf popl jmp jmp pushf pushf mov pushf lea jmp pushf jmp call stc call jmp bt add mov push pushl movl mov push pushf mov lea jmp pusha mov mov mov pushf movb lea jo push pushf mov pusha pushf pushf pushf lea jmp mov movb push pushl pusha lea jmp call pushf pushl popl movl pushf movw pushl lea jmp jmp mov jmp mov pusha push lea jmp pushl popl pushf push lea jmp pushf pushf popl pushf jmp jmp cmc xor stc stc mov bt test stc add pusha jmp bswap add lea push pusha cmp jmp bsr inc mov test add pusha pushf pusha lea jmp mov pushl mov mov pushf mov pushf lea jmp pushf jmp das mov cmp pushf lea stc cmc clc sub movl bt add pushf stc clc mov neg stc pusha jmp pusha mov movb mov mov pushf lea jmp add add mov call movzbw mov cmc (bad) icebp add loope dec add mov std (bad) decl fs cpuid cmp sub push stc cmpl pushl pushf mov pushl pushf mov jmp lea jne push push mov pushl push pushf lea jmp pushf pusha mov movl push movw lea jmp push and pusha pushf pushf popl lea jns push pushf pushl popl pushf mov lea jmp mov push push mov movb lea jmp mov pusha pushf movw pushf lea jmp pushf pushf inc pusha decl movw pushf pushl jmp bt xor push jmp pushl popl mov pushf pushf lea jmp pushl push movw pushl popl mov movb lea jmp neg shrd movzbl shrd sub jmp decl pusha movb lea jne pusha pusha lea jge mov pusha lea jmp shrd inc mov jmp inc pushf clc bt add jmp pushf popl push jmp int3 push out pop imul cmp out mov out xchg clc out sub clc out loope clc out mov clc out pop imul (bad) (bad) clc out xchg out cmp out lret out inc test out pop nop clc out iret outsb clc out testl clc out jmp jl out int3 js out push outsb clc out xchg clc out pushf jl out cmp out push outsb clc out sub clc out pop nop clc out mov clc out cmp out push outsb clc out mov clc out xchg clc out xchg jo out jmp xchg out ds out int3 js out pop imul mov clc out cmp clc out mov clc out xor out adc clc out aam clc out push outsb clc out inc test out gs clc out rorb clc out dec xchg out (bad) (bad) clc out push outsb clc out cwtl insl clc out jbe clc out xchg cmp out pushf jl out iret mov out aam clc out jmp (bad) clc out scas (bad) clc out dec xchg out mov clc out pushf jl out cmp out pop imul jbe clc out cmp out scas (bad) clc out loop clc out xchg out scas (bad) clc out inc (bad) clc out xor out jmp jo out loopne clc out and clc out loopne clc out cmp clc out iret outsb clc out cmp clc out sbb xchg out mov clc out cwtl insl clc out push outsb clc out lret out push outsb clc out xchg out stos xchg out mov out dec xchg out (bad) (bad) clc out sub clc out loop clc out xchg clc out pop nop clc out loop clc out mov (bad) clc out stos xchg out xor out stos xchg out ja clc out (bad) (bad) clc out imul mov imul orl out xchg out scas (bad) clc out loop clc out mov clc out push outsb clc out and clc out xchg cmp out inc test out movsb (bad) clc out (bad) (bad) clc out mov clc out jbe clc out loopne clc out mov clc out mov clc out xchg clc out push outsb clc out adc clc out ljmp out stos xchg out ja clc out mov clc out adc clc out iret mov out movsb (bad) clc out and clc out xchg cmp out rorb clc out mov clc out testl clc out rorb clc out imul iret outsb clc out testl clc out rorb clc out cmp out mov clc out adc clc out xchg clc out and clc out mov clc out movsb (bad) clc out jmp push out int3 js out rorb clc out mov (bad) clc out loopne clc out ja clc out cmp out dec xchg out inc ja out lret out aam clc out int3 push out cwtl insl clc out int3 js out scas (bad) clc out iret outsb clc out testl clc out orl out inc test out iret mov out cmp out cmp out sub clc out sbb nop clc out ljmp out inc (bad) clc out sbb (bad) clc out sbb nop clc out inc ja out (bad) (bad) clc out gs clc out lret out xchg out mov (bad) clc out mov clc out stos xchg out push outsb clc out xchg out pushf jl out cmp out lret out xchg jo out push outsb clc out mov out fdivrl and clc out xchg clc out adc clc out testl clc out mov clc out cmp out loope clc out movw pusha pushl popl push movw lea jmp movb jmp jmp mov push push jmp jmp inc push push mov pushf lea jmp pushf jmp bswap call mov inc clc pushf neg call push jmp pusha mov call mov pushf jmp pushl popl push pushf lea jmp jmp call jmp movw jmp ror mov movsbw pushf mov movb pushf mov movb pushf call call pushf xchg jmp pushf lea jo popl pushf pusha movw lea jmp call inc setno neg pushf pusha ror call pusha pushl mov jmp pushf mov pusha pusha mov lea jmp shld aam call mov mov pushf mov pusha mov pushf pushf jmp mov pushf lea jmp push mov pushf push push mov call stc bt sub jmp neg bt bt test cmp add push lea jo pusha push mov push pusha pushf pushf pushl ret bt sub mov mov mov mov mov push pushf lea jmp add movw pushf pushf pushf popl pushf movw call xor cmp xor call mov mov pushf pushf mov mov mov mov push mov push mov pushl pushl movw lea jmp movl jmp add push push pushf call cbtw or sar lahf mov neg not mov push clc stc stc sub stc shl movl mov pusha mov mov pusha pushf popl pushf pushl popl pushl push movb movl lea jmp cmp mov cmp add stc clc stc movl mov movb sub call rcl rol or mov bt pusha add mov pushf sub cmc pusha call call pushf push pushl jmp mov pusha jmp mov pushf pushl mov movb mov lea pop lea lahf mov pushf mov lea xchg movsbl not mov not mov movl pushl ret pushf mov movb pushl pushf lea jmp shld mov movzbl mov bt stc pushf call clc pushf ror push mov lea mov call push pushf pusha jmp pusha mov jmp pushf pushf lea ja clc mov clc bsr aad lea shl sub sub aad not lea rcl and rol bswap xor add sub mov bswap mov mov bswap pusha movsbw push pushf popl mov pusha call pusha pusha pushl popl push movw movw lea jmp mov pushf pushl pusha pushl lea jmp mov jmp movl push mov push mov mov pushf mov movb mov push pushf movb lea jmp mov pushf jmp call jmp pushf pusha movw mov push mov jmp cmp stc add pusha jmp mov bt or movb lea je stc push pusha pusha xor pushf jmp lea jo push pushf mov jmp push jmp mov pushl pushl jmp mov pushf pushf mov pushf pushf mov lea jmp xor neg movzbl cmc call cmp shr pushf movb mov push pushf popl call cmp sub call jmp call push mov pushf pushl mov mov pusha pushf mov mov push jmp mov stc call dec btc or mov push add mov clc add jmp call call bt bswap lea jae stc xor bt pushf sub jmp cmp sub call call mov pusha push push pushf mov call push movb call pushf call bt clc and push pushf popl pushf pushl pushl popl push pushf mov lea jmp ror aad xadd ror mov adc bts jmp pushf neg cmc call pusha push movl call pushl mov pushf mov mov jmp movw mov pushl mov pushl lea jmp test stc bt sub call pusha sub jmp mov call call mov call daa mov dec mov pusha jmp divl push mov push mov push jmp pushf popl call mov push mov pushf lea jmp cmp bt sub push push jmp pushf push pushl popl pushf mov movb lea jmp dec add add mov adc add add mov add in add add push dec add jo add mov add fisttpl add dec add cmp add add mov add dec add push dec add xor add add mov add test add dec add cmc dec add adc cmp enter dec dec add les add dec add sbb 