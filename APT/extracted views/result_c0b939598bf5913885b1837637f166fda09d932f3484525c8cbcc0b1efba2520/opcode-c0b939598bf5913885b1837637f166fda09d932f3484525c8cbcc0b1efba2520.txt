sbb add cld cwtl add xor dec and pop push aad xchg xor outsl jns push test cmp pusha arpl or add dec cmp js dec fimull pop push and push mov aad jae gs inc jge sbb xchg pop push add jp es jne cmpsb daa add sbb push xor inc cmpsb mov xchg mov fldt dec out or sbb cltd push mov or push push loop (bad) pop das jns mov add mov inc sub push jnp addr16 leave add fwait dec (bad) mov mov (bad) inc mov xor fwait daa jle into dec pop xor sbb cmpsb dec pop xchg xor idivl (bad) scas xor xchg or jg sub pop sub adc iret xor out mov sub movsl icebp add push inc adc jns sub inc mov out cmp leave dec push cli (bad) jecxz dec inc mov xchg repnz rcll mov stos mov jns nop loopne add in int3 jmp cld (bad) lea je push jge and lret push jo out out iret roll inc stc int push iret dec in imul lock lret test dec stc push xchg inc jp inc dec movsb xor xchg sbb and xchg stos pop movb sub pusha enter dec cmp in lret out adc dec pop jecxz cs lods jp data16 std enter xor cwtl repnz and or sbbl clc cli aam int cmp mov cld je add jb (bad) lahf mov fsubrl lock add sub shlb mov cli jb xor mov aad int lcall cmp jmp lret pop jp (bad) sub jmp mov push aam and icebp sub fild xchg lods lcall lods jne mov ss jp sbb inc cmpsb pushf fs adc aas out ret push scas sub pop sub aas ficoml push pop (bad) cmpsl cmp jnp jbe es out loop xchg mov loope sbb xchg scas aas and push push lock and mov pop xchg push daa jnp movsb inc int3 fcomi jecxz fistp sahf mov push aad xor std pusha lock inc inc jae jae push out fsub adc push inc in out jb cwtl lods dec bound lds push or mov inc mov mov push push mov push mov pop pop mov adc jno aad in add ret es jle push pop ds dec mov lods (bad) in xchg dec sbb fcoml ss jo aad cli int3 pop mov or ljmp frstor ljmp pop inc in mov jnp xchg test pop repnz repz jo dec xor leave ljmp push sub sub pop test lahf sub addl and mov pop rcrl mov jae cmp cmp hlt outsb int3 cmpsl test mov adc sti lcall sarl mov ljmp xlat into fucom mov and mov or inc aad sbb adc sbb scas cmp mov pushf test pop popw sub lcall adc (bad) fst mov shr xor sbb pop lods popa or mov add imul mov ja xor xchg inc out mov lcall subl and jns mov cli test add das rolb (bad) push sti adc xchg imul xchg fxch inc pop out pop cmp mov fiadd into loopne (bad) in inc lock shrb push scas out test and inc popl sbb mov jae xchg lock xor js jo in cmc scas cmpsl movsb jle jbe out mov jle push dec mov in push xchg popf leave mov push cmpsl jge incb pusha lea mov call xor movsb mov in and fnstenv mov or fistl mov pop shl adc addr16 adc lock xchg fidivr bound test mov arpl insl xchg inc movsb sbb test es mov push je adc dec and mov fsub scas fcompl or and push or push mov jmp add add push add in mov and inc xchg pop fistp outsl mov rol insb push stos sbb mov sahf sub jne inc add push sub mov arpl inc and xchg subb jle loopew xchg mov lea mov (bad) fildl lahf hlt loope mov xchg movsl adc movsl xor adc cmp loope xlat fsubs adc clc fdivr xchg arpl add pop cmp lods mov repnz add adc xchg inc xor lcall rcl mov pop adc adc cmp std sub jae jp mov clc add add cli dec xor mov sub mov sub int3 stos and ret adc inc in adc mov dec pop sahf insl mov pop ret mov sbb inc and mov or cmp js je dec daa jns push add xchg movsl xor mov (bad) mov and jb loopne jecxz jge push out es xlat je sahf or fwait mov adc adc aas cmpsb mov and adc xor in cmpsl inc pop mov inc sahf mov mov rcll addr16 loope aas cwtl mov mov push xor and adc dec inc and notl fildll push sbb das mov or mov pop lcall shl jns push leave mov movsl je jge xorl xor jp jmp pop push fs inc addr16 inc xor dec mov pop push sbb testb pavgb (bad) jmp lcall lret push stos xor dec mov jo pop rcrl or or rclb jno mov imul cmp xor lret fimull and mov inc fldenv sbb jno fidiv or addr16 adc dec push cmp (bad) enter jmp mov xchg stos inc jb ret xor add jns add gs xor pop inc mov adc hlt dec xchg test hlt pop and (bad) mov aad jns les (bad) out popa std pusha jecxz dec ds js lods or or xchg ror out add inc out loopne inc mov test test xor fcoms out add cli cmp sub push scas (bad) test and cmpsb push inc inc orl js xor jb lock dec pop push shrl inc pop dec jge stos jmp add dec fistpl adc fwait (bad) jo cmp mov in and inc mov adc lcall pop mov stc xchg sub pop in fsubrs (bad) sbb cmpsl sbbl mov loope loopne les jp push jae jb clc je rorl out mov fsts repz test ja lahf inc mov inc pushf scas xorl and in push xor loopne popa inc stos testb (bad) cmc sbb mov jmp loop push aaa loopne test enter and out (bad) jns jp icebp fistl arpl cs xor or mov push lds mov cli push inc cmp mov das movsl pusha or adc daa or xchg sbb (bad) hlt xor test arpl sti outsb fwait (bad) into cmp aas jp (bad) (bad) cmc call std stos and cmpsb lock xor jp scas in sahf push outsb stc sub iret out mov movsb std ljmp adcl insb inc mov pusha dec pop (bad) mov and sbb xor ss sub mov pop jnp mov xchg pop pop call stos mov pop sbb jg mov pop jae push add mov mov cmc out int rorl cmpl push lds xchg dec sarl mov xor push daa cmp in lods lret imul fist lahf inc mov out jge ljmp data16 (bad) push fnstsw rolb dec out xor jns cmp cmpsb scas ljmp hlt xchg ret and call lock jns es or lcall mov cwtl mov cmpsb insb jp popa clc xchg cmp or es jle aad adc or iret lock ret mov xor sbb je jle idivl jne jle out push push push movsb add sub adc fxam mov inc push insb pop cmp aaa push (bad) lret notl push roll mov mov out mov cmp icebp or lock mov test xchg jle mov cmpsb xchg mov (bad) icebp adc mov fmull idivl adc outsb pushf call jg mov cmpsb test pop pushf push hlt in or stos inc and (bad) xor in mov gs (bad) and adc sarb aam (bad) nop or cmp xchg daa xchg push cmpsb pop jmp jecxz xor imul sarb fdivrs movsl stos jno push mov mov aad pop in jmp pop mov div data16 or lock pop add mov mov sub add inc cli pop or mov pop cld push and cmp push dec fs xchg mov jns cmp cmp movsb icebp shrb or int3 xchg (bad) fidivr stc lods push dec xor ret pop jb stc das mov loopw sbb add adc mov std popa sub fimull sub sub clc pusha cltd jbe sub and loopne pop scas cmc xor push cwtl cmpsb pop sbb cmp cli cmpsl add sbb add fidiv xchg push test shrb imull inc lock fsubs in (bad) cld sub pusha dec adc inc dec div push je cmp xchg popa in scas cli push mov sbb addr16 inc insl sub sbb xor int cmp cwtl ret inc lods test outsl pop add sub sub push insl pushf push ljmp push hlt popa fnstsw bound inc jp addl mov shrb fild sbb loope mov or xchg lock sub in sub fadd rcll mov rcrl (bad) hlt inc enter cmp insl ror and jmp int lret divb repnz or xor dec mov rorl mov test xchg (bad) repz fs daa sbb (bad) sub fimul cmp orps mov and cmp adc xor fstpl enter adc inc imul push push mov add push dec in enter or or sbb mov jne out leave push jl rcr notl cmc rorl and xor mov lcall cmp xor pusha inc stos jg in leave xor cmc lds in stos pop jbe cmp lret xlat jb push jge push iret mov push lea ror cltd in mov mov add pop dec mov fistl es sbbb inc add xor int je cmp jne js pop push out mov test xor dec dec call push mov jo jo std sub and mov gs mov aas or les imul hlt cmp rol cmp dec stos add cmp xor clc cwtl sub scas mov mov fimul insl dec repz push (bad) jne rcr sbb mov push pop pusha cmc leave push imul xor lahf movsl or xchg jbe ds inc fxch or out in and jae push pop push idiv out add mov xchg fwait mov stos inc adc fbstp sahf mov ret mov and push shl pop xchg xchg icebp inc stos xchg or test mov pop loope or xchg inc ljmp inc inc sub sbb out sbb push sti and push scas repz mov dec out test xor jb loopne lods sub mov push mov sbb cmovne sbb insb lret jne pop add cmp and add movsb out aad push mov dec jns jmp mov add push push inc (bad) shll idivb cmp and ds arpl std fcomps jno loop and (bad) into or cltd test insb loop ds mov fcmovnu xor jmp hlt cmp js test imul out cmc insl ret aaa pop fsubl add lcall (bad) repz dec stos xchg adc jns pop sub jle cmp adc mov mov fstp outsl sbb call mov fcmovnbe or enter xor pop neg addr16 xchg lds pop lahf push and lret movsl popa in add mov mov and and fwait cmc stos and push ffree call dec seta or xchg xchg sub iret push lahf pop out push leave (bad) jnp jo,pt lock lock mov ja dec xor inc fldcw lea jnp add and iret popa jg scas mov cs cmp xchg scas sub sbb xchg push push test and adcb add dec add inc xchg js sbb sbbl repnz push outsb xchg sti (bad) sbb cwtl int3 inc jns bound (bad) repz xor mov sub lds mov (bad) cmp add testb push fldl xor mov mov pusha xchg mov jmp jb mov adc mov pop push hlt aad or mov pushf xchg xor enter sub jmp stos adc ficompl pop xchg and pusha cmp jns je out and int out repz mov mov or mov outsb mov clc xchg pusha in sbb mov mov jo out movsl (bad) dec pop ds (bad) call out lea je cmp int3 ljmp aas test inc clc cmp dec cs ds and seta dec test fldenv mov push xor (bad) ss mov movsb (bad) adc loope inc jb int pop inc push movsl les bound xchg mov cmpsb icebp lock insl sbb lret mov mov out je cmp ljmp rcl addr16 das or add rolb hlt sbb lods les sub sbb add pop jge xor jns bound jecxz ret data16 xor pop cli push sub movsl cmp or lcall fucomip inc cmp mov ja je (bad) xor pusha push push add xor inc fsubrp sbb and mov push mov jno mull inc loop mov stc fs jns push into pop xchg fisub in mov scas imul aaa sub and inc (bad) sub (bad) pop clc fwait ret cmp outsb cmp sub sbb or lea out (bad) test push aas sti jle aad int outsl movsb add mov jbe inc scas and dec dec dec mov insl push in cmp or and pop cld and and xchg iret add outsb cmc bound inc inc mov or in jne jnp sub or inc bound ljmp adc xchg ret xlat in repz push sti fsub (bad) sub pop test loop (bad) (bad) dec dec jmp (bad) aam aam loope mov dec mov mov push je and push inc loopne add and or dec add movsb lds repz ret stos or ljmp insl mov mov adc jecxz adc push subl wbinvd lret aad enter pop arpl loope lods inc mov bound iret outsb xor divb lcall outsl gs xor push xchg dec test adc faddp mov cmpsl test add push dec mov mov push clc ds lock pop pop xor push (bad) or mov lods (bad) aas scas (bad) dec shrl mov mov insb jp xor xchg pop pop call pop stos sub xchg mov stos lret (bad) test cmp push mov mov or adc popa sbb out cwtl jle js push xchg es cmpsb mov dec add push jmp mov sub inc sbb jecxz push mov dec mov ljmp and dec insl sbb aam add movsl cmp (bad) not fs xchg jge pop pop mov cld xlat sub pop dec sbb or fldl lcall push add idivb ljmp mov add out push test adc cmpsb pop mov cwtl dec pop jecxz or sub or mov outsb or (bad) popa stos xor cmp push push jo mov and dec xor mov fildl push jb insb ret test jle imul lea mov or push enter xchg lret pop cli sbbl out test pop jge (bad) jecxz,pn lcall imul push mov xchg dec leave push lds cmp lods jne out leave jl add insb jmp mov jle pop jge mov push lret xchg rorb pusha add sbb mov pop fldcw adc fisttp pushf sub stos or dec inc movsb and movsb daa xchg mov shr mov pop fmuls xchg xchg popa add mov adc dec add mov lods clc cmp mov cmp aad in or sbb stos add mov test out ljmp pop xchg cmp jg jmp adc dec mov aam xchg pop dec lds push xchg push insl arpl lds and inc jg mov leave add mov xor and arpl xchg (bad) cs pop imul pop mov cmpsl imul (bad) sbb and std mov mov movsl dec mov mov in shll mov cld mov lds cmpsl mov fistp sub push sbb daa bts pop (bad) std ror call (bad) jge vaddsd pop pusha cld xor push jmp mov mov (bad) inc mov mov mov je dec gs incb xorb cwtl shrl sub in or and mov (bad) jns fsubs mov push jno lock lret leave jb pop xor addr16 aad adc mov iret sbb mov xor popf add dec lods and imul cmc inc adc mov add jle ljmp ret mov dec push movsb in cmpsl sbb (bad) jle pop sub pop fwait movsb sbb cmpsb jle add xor movsl cmp (bad) jb fs jno aad sbb movsl mov (bad) pushf cmovbe rcll in cmpsb mov call gs dec mov xchg lahf push lret lds dec mov mov and nop pop mov lcall mov pop or adc mov pop icebp or sahf movl cmp mov mov adc pop imul push insl xor add jg popf shrb iret dec imul aaa push dec int3 lret mov adc idivb stos mov xchg icebp out jp adc cltd lret xor mov jge int jnp clc or rcr sbb adc lret aam mov (bad) into pop inc outsb (bad) mov loop push jnp pop adc push jae ja int3 and dec or push jb mov fcomp dec push mov repz fsubl icebp sahf cmp leave and test (bad) enter jl jnp jnp fnstsw or add mov icebp in scas or scas jl nop test fistp lds jne cmp xchg push sti pop and mov push jo aam add xchg es cltd push sbb into fwait xchg add popa dec cmp out jmp jp xchg gs es jae rcr mov sbb lds mov fiadd cwtl mov (bad) cmp ss cltd inc sti hlt daa data16 jecxz cld and shrl lods pop dec lods andl adc movsb mov push cs push mov sub xchg xchg sub (bad) push hlt dec scas mov pusha movsl push imul dec jns push outsl push fidivl mov or mov jb xchg insb push pusha add sub mov int3 addr16 test jno jo test mov jne pop bound jbe (bad) pushf jle sarl out rolb adc mov xchg pop test loop sbb adc hlt movsl dec jecxz subl adc in andl lock pop jbe aad dec xor stos loop pop xchg test or mov sbb in push mov in and and push int3 mov fisttpll out push push dec nop and ss xor push sub jae aad mov (bad) sahf fs add push mov lods xchg pusha pushf (bad) divl movsl loop jns sbb xchg das ss and xchg mov leave scas dec dec and or imul xchg ja sub mov test or xor add test out pop lret orl loop test movsb mov inc adc xor clc outsl fldenv pusha test dec mov cli (bad) lret mov adc sbb pop mov dec mov sub lahf adc and mov sub inc (bad) into sub rcll jmp xchg ss mov pop jb fsubr mov push inc jbe fnclex mov jecxz fisubrl inc or adc fsubp inc inc stc in shlb cmp fmull mov out nop inc sbb jne insl enter cvtdq2ps aaa into pusha xchg lods movsl mov inc mov jae iret (bad) cmp push mov lret adc sbb ljmp dec aam cs aaa mov cwtl (bad) mov fs xor leave mov jbe jmp stos or daa cmp (bad) subl pop mov lock mov icebp cmp cwtl imul sbb pop jl adc inc inc inc and cmp call stc in xlat xchg out adc sbb or jmp cmp in sub sbb push add adc dec rorb out mov aas dec lahf rorl and jge das addr16 sbb xor xchg mov cmp hlt xchg mov inc insb lods sub cs stos (bad) cmpsl int aas bound or into (bad) loop lods inc cmp cmp jp jb inc sub and jecxz aam popa xchg stc cs movsl pop hlt push in push push xchg inc dec inc sbb out orl pop pusha jle mov jg push jbe out xor adc cmp outsb pop scas push cmp aaa ljmp dec xlat adcl imul loopne mov adc scas cmp je fs cli sub ljmp in push push fnstsw mov sbb push mov aas sbb movl icebp test (bad) lret fdivrl mov xorl pop adc pop lret mov sub pop daa mov out mov test (bad) mov nopl (bad) int out or push loopne cmp sbb add jl jle les fdivr pop shlb sub cmp stos loopne or cmc in fsubrp or or orl add lret and mov fwait test into mov ljmp and push add dec xlat jge xchg aas inc scas les mov testb test (bad) mov xor int3 mov (bad) (bad) fiaddl mov mov bound mov lds pop sbb mov lret push insb xchg fdivrp shrb cmpsb js mov (bad) push mov inc int xlat push pop lods mov mov cltd subb push stos mov inc inc fsub sub adc pop xchg pop in in test sti jp mov adc xchg inc scas sahf xor ljmp cmpsl mov jmp or adc icebp imul das dec es mull inc fcmovu ss jmp stos add jecxz je xor pop addr16 mov jmp insl inc lea fcmovnu pop pop jbe rorb fcoml lock dec push pop aas fstps stc (bad) out mov cmc and jl mov dec inc inc jb cmp cmpl inc or test fisubrl cmp or or jp ds lds adc xor and cmp jne ds outsb pmaddwd (bad) not rorb jg cmp cli cmpsl mov outsl sbb (bad) fdivl outsb in push aam (bad) das inc inc xchg and sti xchg ja (bad) push out mov or mov movsl add mov inc (bad) push imul into lret fsqrt mov xchg jle nop add cmp test xorl mov xor or idivb xor jo add jle push ss lret icebp push stos cmpl int lahf push mov xor or (bad) sar inc jg popf dec sbb fs jnp push fcmovnu in fwait dec push dec (bad) xor sub sub dec adc in mov and adc insl js ret mov xchg popf jno rcr in cli push jg mov cld mov mov test ljmp and iret push in mov pop repnz cmp rcrl push cmp xchg ret das cmpsl xor add mov shlb fsubl xor dec push lods dec lock mov jbe add test cmp pop adc fnop or push mov mov leave cmc jg idivb pushf push push xchg push mov xchg call leave loopne sub lret mov (bad) out push ds fwait add imul sub add bound mov mov pop repz mov sub adcb mov mov sub jb xchg push jae std ret xchg pop push leave adc cli push dec push sbb push in add pop test int cmp leave pushf scas dec push or int3 xor xchg adc arpl (bad) mov mov ljmp pop xchg (bad) mov mov mov negl inc pop lahf sbb mov dec or shll into push ds sarb adc insl sti adc or lret inc lock fsubl cmp addr16 mov out mov mov or jbe cmp sbb and xor add push cli or pop pop mov dec stos dec jae aam aaa sub push mov lret pop int3 or jnp into dec adc punpckhdq cli scas lea cmp jnp jbe test lret dec sub ret push pushf sahf (bad) mov inc jecxz mov cmp push xchg mov xchg (bad) cli and inc cmp xor mov (bad) (bad) icebp lcall loope dec scas repz in (bad) pop mov inc push repz add ret popf or fsubs xor (bad) les (bad) repnz imul data16 and sub iret scas push mov outsl pop mov sbb aad iret (bad) jg pop and jne insb sbb xor sbb fisttpl push push ja stc jnp and push push pusha jne ss inc movsl pushf stos fs push out fs enter aaa jmp data16 or push and pop jne loop sbb jmp xchg je jne sti aam inc mov pop cmpsl pop insb lds add mov (bad) fcompl jle sub cmp sub shrd fsts lods dec fsubrs pop adc jecxz inc out jne or mov mov sbb movsb (bad) and (bad) pushf (bad) test push mov and mov fistpll les and cwtl add popf sub inc inc xchg mov push jo lea mov in xchg inc mov repz push pop mov cmp pop movsl xchg sbb push add xchg push inc pop movsl sbb aam outsl popf aam cmpsl call and adc pop std outsb ret push cli xchg mov fcmovnb add cmp lods xchg ret mov push sub das (bad) inc sbb out out pop (bad) leave add mov lahf add call push push sub adc push cmp push (bad) mov xor lcall or shr das outsl cmp cmp jl jp xchg repz jg call psrlw scas mov push fidivrl or ljmp loopne or stos cmp inc or lret lods fisttp xor adc inc imul lock fstl mov dec adc call xchg in add int add shrl cwtl pop sarb push push test add mov dec mov xor add xchg movsb sbb xchg add inc loop dec or pop adc les inc cmpl stos int es iret mov and pop roll dec xor pop aas enter repnz xchg (bad) (bad) xchg aaa cld mov or in dec jnp push and lahf popa and lret inc ret mov adc lret push pop call loop push test mov mov mov mov out or sbb cmpsb add outsl xor jge jg jno push test (bad) insl jns aas pop in inc jno mov xor dec adc out stos lock inc inc or or shrl or pinsrw les (bad) outsb loopne push push xchg cmc cmpsb pop sub xchg jecxz jg sbb lahf push out insl ds shrl jb mov mov fstpt or and pop push fistpll adcl test jp sbb punpckldq cwtl sbb xchg jp jecxz hlt dec mov pop loop mov cmpsl sti imul pop js enter push insb sub jbe xchg xor mov aad gs inc test sbb inc aad js imul adc jae add test adc popa inc sub or dec push int3 xchg cld pop or ja mov call xor sbb in out add push aaa js dec xchg sarb fwait and and bound ja push xchg xor push fcmovnbe insb dec xchg daa and imul sub stos nop jae and daa pop dec or sbb fidivl addl subl cwtl jae ja ja nop out (bad) shrb sub jmp mov lds and daa mov cmp xchg inc xlat out cli adc into or insl xor ljmp addl xor mov imul repnz mov ja scas (bad) mov fnsave pop dec movb cmc out or adc add (bad) jg pop fscale xor pushf test call xchg lds mov xor jnp add pop stc ja dec sub or mov les scas hlt dec adc push lret mov outsb jb lods mov xchg jecxz sarb push (bad) into jmp ss cli push call xor mov call push mov jae cld faddl lret stos ss rcr adc push rcll xor sub mov ds pop out push mov push inc sbb fisubr cmc inc shrl (bad) mov jb xrelease cmp cmpsb push push test or addr16 ljmp rcrl nop mov xchg psubb jno ja sbb sub add and or mov loopne stos loope xor pop imul (bad) icebp pusha inc jp pop dec xlat (bad) mov scas add xchg jecxz ret popa or test nop sbbl (bad) enter sbb lret scas out jg repnz sub jg,pn and hlt and es popf dec or pop jg mov out ja (bad) and mov xchg pop enter inc data16 xor dec mov imul xlat dec leave mov (bad) stc xchg loope (bad) cmc sbb addb js mov mov ss sub mov into mov in jl lret jp gs xor in xor push jnp mov test fbld xorb movsl negb xchg mov movsl enter cli outsb aad lret jbe sbb vpinsrw outsl outsl sub push and sub test test int clc xchg push insb fmul or data16 pop mov xchg pop fldenv enter nop (bad) xchg jg cmp mov insl dec push rcl push loopne push in sbb js leave es xchg dec sahf call movl nop (bad) mov dec add adc inc xor sub mov or xlat das test or les fs mov mov xchg arpl or (bad) loopne pop mov adc cltd outsl xchg ljmp nop sub sub mov push cmpsl pop jnp dec and add (bad) adc jb popa sub cmp mov lea repz jno (bad) mov xchg push add shrb out arpl jnp lcall minps inc outsl pusha jnp pushf aad mov adc mov out hlt lods out lahf mov fistpll pop sbb add xchg xor (bad) mov add (bad) add popa cwtl je or mov mov in sub cmp aam mov mov pop push lahf pop cmc xchg xor mov cmc and mov mov xor aam push cmp inc in adc ja sub cwtl loop cmpb aaa mov fwait insl test mov cs mov lret insl sbb divl in jecxz or dec arpl daa pop add ljmp jno loop sbb mov cld adc out cmc jmp cmp cmpsb (bad) xor sub je mov jne pop int3 loopne hlt adc adc lahf sub out orl loope adc sub cmp lahf and mov adc mov lret test rclb push movsl (bad) cmp inc in (bad) mov ljmp mov xor mov pushf adc jmp cmp jne test jl popf repz loop mov lret (bad) jmp out or mov cmp fnstsw out xorl in inc adc dec xor cmp lock and shrb dec xchg jle out shrb push or cmp adc movsb (bad) addr16 insl push mov pop jbe pusha fcompl rorl add mov mov xor xor fsubl outsb pop cmc out xor pop lods push nop pop fsubrp jle rcl jp cmpsb into call cli add popa enter jbe clc cwtl add push dec int inc push je pop inc xchg sbb cmp mov mov cs test cmpsl sbb cmp or or mov add push das inc pop add sarb xchg sahf dec mov jecxz out xchg stos xchg int3 addr16 out ljmp (bad) imul mov mov lods inc call or push sub data16 push mov mov out inc cmp push push (bad) jmp xchg clc xor pmovmskb mov ss sbb pusha std test sbb push sahf movzbl test jl dec in outsl sahf cltd dec fstl pop mov fcompl pop stos dec xor sbb mov out (bad) pop dec mov sub push mov lods test cld lods inc test popf jo notl dec call mov jno iret jge cmpsl es stos outsl gs adc jns add pop pusha out or mov or out mov dec and dec (bad) mov sub cmpsl xchg xor (bad) mov sub jb daa mov add and jnp leave lahf pusha mov sti sub rcll pop push jno (bad) lret mov addr16 mov cmpsb fwait push fmul ja sbb ljmp insl mov (bad) cwtl repz mov push jle (bad) mov xchg mov leave jg lds xor xchg aam call mov ss mov addr16 jbe icebp int3 pop cmp dec mov ljmp pop mov inc cmp xchg inc pop dec cmpsl adc (bad) ja (bad) lods or inc outsl push stc imul adc xchg orl iret cmc lcall sahf add out adc jns (bad) xlat aam mov fnstsw jae es mov xchg data16 and les lret pop movsl enter cs into sbb jp xchg ss ret in cmp test lds ficomp shll inc mov aad std pop test leave push dec bnd jne and add xor sar jge stos and imul xchg test lds sub imul inc sub mov mov loope cmpl push sti ljmp sbb xor cld or lods repz sub cli test and push jnp pop mov (bad) jns out imul inc mov fwait addr16 test mov cmpsb and and sbb (bad) xor adc pushf aad fsubl or cs test lret cld jecxz stos lret pop inc push inc call lahf mov (bad) hlt sarl int dec or imull pop inc pusha addr16 add fcompl add jle ret cld in push push call mov sbb cmpsb test pushf lock sbb nop push sub or (bad) rorb (bad) scas pop pop (bad) xor ret lods mov in gs xchg fistl pusha push or jl jmp das add or mov ja sbb pop into cmc (bad) mov js and fdivrl inc lods mov xchg ja inc out (bad) out enter dec xor or insb enter js sub inc test int3 push insb cld pop mov fdivr xor adc ffreep rcll imul pop sub add push jmp cmp sbb cmp insl xor popf xchg loopne orl mov xchg scas movsl add sahf scas aam sbb (bad) cmp rcrb adc sbb sub into incl int3 cmp mov sub in fist push cwtl jle into pop ja (bad) mov test daa push cli shl jnp repnz in push inc and in ljmp stos seto push sbb mov dec jg cmp stos dec sbb inc cmpl lock in pop mov jg,pn push cltd data16 xchg out dec ret aam mov jne lahf mov imul pop fwait scas insl jmp adc lret ficoml dec jno mov rcl push imul pop sarb lret into mov push xchg mov sbb push popf incl les push scas es mov mov jbe pop js xchg gs mov scas cmc in sbb (bad) incb adc xchg (bad) jmp xchg es mov sub mov stc nop inc sahf clc and scas ja lods jae xlat dec inc push xor xor pusha push jle pop int xchg andl adc pop fldt imul xchg or xchg dec dec (bad) arpl dec cli xchg pop push aas sti pop jge or sbb xlat in mov out fldt ss and cmpsl cmp dec jecxz mov push and and mov pop jae aaa in sub inc int push out jge and ret int dec dec and sbb adc fwait mov mov leave rolb in pop xchg adc and loop gs aam sbb andl sbb out sub data16 cli cmp sbb negb push ret pushf pop and jge cmp lock mov mov hlt jge push push sarl adc aaa add and mov mov sub fdivr jae mov lcall jmp dec cli cmc add loope and fdivr and incb sub inc sbb sarl mov inc pop push (bad) aad inc xchg shl inc cs mov ss lret push stos pop lahf sub lea movsbl jge xchg in shlb hlt jle sbb mov iret (bad) push call std jp push mov fwait sub shl inc das ret fcmovbe inc lret (bad) cmpsl and (bad) int3 sub stos sbb pop leave outsl addr16 xor or mov mov add mov mov paddb inc add das cmp fisttp icebp imul imul loopne push insb or mov push pusha ret lahf mov dec xorb sub cwtl jl xchg (bad) cmp adc push cmp ja jno enter adc mov inc lret mov pop pop lcall push (bad) movsb push fcomps mov and addl xor aas add jp jp cltd stos out mov mov insb inc stc int cmp in insb es xchg jo mov adcl (bad) jle pop hlt (bad) outsb lret add int3 pop and loopne cmc xchg adc cmp push mov jne shlb addr16 es pop xchg idivb push fstl cltd leave icebp stc push dec dec dec sbb std sub jne mov jae insl and or jle loop and lcall sbb test cwtl push jo rcr pop add cmpsb pop xor xor cmpsl pop pusha sbb roll xchg rolb cltd sbb divb test pop add popf jp sub jp mov mov aad dec cmpsl fist icebp adc aad ret jmp stos out and add mov add out test std ficom jne pop call icebp aas fmulp test jge and out jb cld sbb adc dec pop mov push pop ljmp cvtps2pd mov iret and fiaddl ret and jns xchg imul or xor adcl mov lods mov mov test cmp inc (bad) xchg fisttp inc (bad) roll dec cmp arpl (bad) out fdivrp xor fsubrs adc stos pop pop rcr jae jae sbb test (bad) jns outsl popf cmp fucomip leave shrl push push inc cld aad mov inc (bad) into jmp sub jl cmp ds push cmp add imul lret fcoml sub xor mov sbb and jno xchg (bad) or jns push pop outsl mov mov push mov cmp dec movswl add repnz fisttpl and mov (bad) repnz mov int xor xchg pushf je (bad) mov imul jae out popf fcmovne aas mov sub repnz pop add inc rol push (bad) mov fist cmp fmull inc fs mov call outsb ficompl cmp aas sbb lods out ja xor mov jl mov lret sub cmp (bad) add cmp scas test cli repnz dec lahf pop insl inc jnp push adc divb and in repz xchg (bad) test add sub lock loope je and pop xchg mov jecxz push pop roll bound dec dec call dec fwait push insb mov and mov pop pusha (bad) dec dec mov lods xor or lods rcr mov pop dec mov cs add leave test mov xor stos cmp cmp cltd jns push test lret jns movsl inc sub (bad) dec add lahf sub mov xor jmp out dec out cmpsb repnz (bad) call pusha in sbb adc fstps outsl jle das cmp daa ljmp xor sarl fidiv xchg sbb sub xchg xchg jne or xchg mov dec add push nop or out cmp xchg sub jle imulb jno hlt mov lds daa sarl cmp or and jne dec sbb fdivrl add stc pushf sbb jb xorl push fmull sar jmp iret in imulb push jg push (bad) xor outsl ret enter dec xchg lret push or cmpsl addr16 aaa sub loop or ret lods enter add sbb ljmp repz mov outsl inc jecxz and pop shl popa mov push xor jl sub enter sarl push leave aad pop shrl mov jne leave or cld mov dec out mov movsl dec aas mov and aas rorb mov mov sub out push (bad) aam jno out clc call (bad) fsubrl aas sahf or push mov out iret pop sub dec stos shll dec xchg clc mov adc xchg xchg cmp clc cwtl js pop das push mov xor negl adc lods cmc jno dec gs rcrl jne or stos jns mov les pop cli (bad) loop jb cmc inc mov jge pop jbe pop jo mov (bad) mov mov dec out fmulp sbb jp cmp sbb adc pop lea fldl sbb push mov inc mov fcmovne push mov ficoml sub clc ljmp test ret leave push mov mov mov pushl push repnz daa (bad) push ds fs pop mov and insb mov fcompl add ja xchg xchg sbb mov xor jmp jl xchg jb inc mov aaa fwait (bad) push bound jno xchg sbb or push cltd push mov xor mov mov je pop or shlb xchg sub mov ret ret ret cmp mov xor stc int jp les scas or sti mov push sbb inc ja add test mov lds aas pmulhw shrb rolb fbld lods mov push dec js int or mov and fist or jb cmp fisub rolb rorl (bad) jge mov lcall jg repnz push stc jno decb imul cmp mov insl mov nop sbb jl in lcall pop dec (bad) jge add or jbe mov outsl adc pop imul mov fdivr jbe push and sbb xor out mov pop ss pushf (bad) bound test jo int mov xorb add sti push mov ret loope sarb sub cmp aam int3 imull mov std pop dec sti fild cwtl pop mov mov adc push pop lret mov popf enter lret pushf jne mov push push pop or icebp mov ss mov fsts stos push outsb repnz hlt jae repnz xchg jmp imul inc cmp dec sbb push add xorl push xchg push sbb imul adc push pushf or (bad) nop mov adc into push sub daa lahf cltd scas cmp out lods jecxz xchg sti sti xchg and mov add cs xor scas mov or lret ja bound (bad) btc stos aas in pop cld mov mov pop (bad) pop add adc dec test scas lcall sub pop pop negl paddw jbe aas cltd dec lret scas or add inc notb mov cmp ficoml outsb bound ljmp lahf mov movsl push fisubl sti in popa stos lea test sub loope lods mov mov cmpsl jo mov in (bad) jbe sbb pop inc mov jo mov add pop loope fs iret push adcl jno andl adc cmp cld jl inc ret les int cmp stos xor sbb aam jge sbbl sbb (bad) fidivrl xchg sbb dec sub inc inc xchg (bad) gs xlat icebp sub or sbb leave dec jecxz add xchg xor mov mov inc jb clc rcrb or sub stos adc test ljmp add cmp and cmp iret pop pop in fmulp adc std out lahf add cmp cmpsl mov (bad) (bad) cli inc or out mov mov adc leave scas pop lods lea lret sub in push jmp cs enter insb int3 adc ljmp jmp ds mov pushl cld (bad) xlat insb (bad) stos (bad) imul arpl pusha jae xor outsl fcmovne inc xchg jmp in push les lock fidiv adc (bad) sub sbb test lds (bad) mov fnsave cmp in (bad) sub push xchg mov jae push (bad) in jne enter test inc ds inc out stc loope mov cmp les les adc add mov insl aaa jmp jl pusha jno and xor dec test and push loopne fldl mov sbb ret (bad) mov jg mov inc gs shlb adc xor cs js and or popa jne int dec lret or inc jp cli add or cwtl mov pushf sbb mov not std cmp aaa scas out cwtl xchg adc mov pop or stc notb jmp addr16 xchg les pop mov jle or push inc cmp test test mov jns inc out test push out pop xchg call nop pop dec out sbbb cmp addr16 int jecxz das jae pusha mov popf lock lret add add add xchg scas ror cmp std and es lea jae mov out mov pop movsb pop iret inc xor les arpl cli sub lahf in mov pusha adc repnz and mov lock decb push lods cmp xlat subb jp dec nop repnz dec dec pop ss call in sahf jnp sbb das imul (bad) push scas mov mov xor dec add jbe fistp enter repz mov aaa and pop test xor cwtl iret push data16 mov mov aas (bad) fcom test xor (bad) sub imulb rolb inc fisttpl cmpsl lcall lret adc outsl mov adc bound lret test mov jnp mov test ficoml add pop jmp adc mov popl sub in testl pop ror add jnp insb fisubr push add push pop push push adc xchg stos nop lahf ret mov dec xor lods movsl pop lea popf xchg add ret cld add inc jp mov das pop js xor pop cli pop pop inc fcoms push add mov outsb aas mov lea dec xor (bad) out cmp sbb sub ds mov jg mov sbb adc out mov cltd or imulb xor jb cmp loope add add pop xchg loopne call test xchg shrb adc stos mov pop out fldt arpl jg outsb inc imul pop dec xchg cmpsb mov jb push daa rolb mul sub pop lods mov pop (bad) cmp xchg outsl xor sbb xchg inc std loop addr16 movsl div daa adc xor xor dec cmpsl dec pop ret imul add mov push test add xchg mov mov pop dec scas xchg xor repz add inc ficoml lea std sub movsb jl hlt push mov pushl scas ljmp pushf cmpsb out mov jno xor or lods jg jg mov ds adc sarl movb jne inc mov pop mov cmp add jne add cmp icebp les loopne movl xor mov add mov ja inc inc (bad) loope je pop push pop push fstpt xorl dec (bad) pop jns and mov adc mov mov mov sbb mov or and insl mov insl cli insl nop (bad) jecxz dec xor mov (bad) cmp inc lcall xor add and cmc sbb movsb pop cmp dec add iret inc push xor mov in adc push fist fcmovne push adc dec dec imul (bad) outsl mov push icebp in jne test add adc xorb js hlt inc lods cmpsl rol out lods fildl rorb xor dec sub fcompl push data16 lods (bad) in test jp push dec push movsl adc adc pop rclb test popa xor push dec cmp ret lahf imul dec cmpsl mov inc xchg sbb pop push mov lcall xchg das cmp pop adc and pop cmpsl mov lds insb jnp outsl mov inc sbb sub in int3 mov push (bad) sti fdivrl addr16 jno in and cmp fsubrp and loop cwtl fcompl mov sbb add adc add pop dec cs test inc ljmp cmp xchg hlt jae mov jecxz adc or mov das mov mov mov push mov ret fist inc sub jp mov outsb lea fimul test pop mov jns push sbbl adc jge and add mov jb mov xchg adc pop sti xor iret popa outsb rclb mov inc (bad) jecxz jns test lock push push lcall neg adc imul fnstenv lret stc push pusha outsb pop js pop or inc popa sbb addl mul xlat fdivp sbb fstpt imul lret jp cmp mov movl nop into pop push lds pop pop pop enter or pop adc push push mov into movsl out mov sbb xchg push or jge push in fbld popa xor or xor mov lea mov push cmp lods stc dec out adc or imul fisub test cli or mov xchg test push enter popa jp sti dec inc dec fmul and cmp (bad) jae adc xor or cmc fisubrl mov push cmp hlt outsl popa jb xor push aaa push mov lret pop and push push cmp ret dec subl outsb sbb mov sahf and xorl cmp jae sbbb outsb cmp mov popa and test outsl xor sbb mov xor pop cmp mov mov or pushf shl mov cmpsb mov int3 lret push in xlat std lahf int3 mov mov jae popf jl pop sbb mov scas lds jnp jo push add jbe data16 (bad) mov xchg gs ffree call cwtl or pop sub push pop jnp cmp test cmpsb inc xchg mov imul cmp scas dec xchg pop fcoml jnp (bad) es add mov or in pop and push or pusha xchg inc dec rclb fs push jp sahf sub adc insb or insb jmp stos mov pusha movsb pavgw sbbl adc pop (bad) lret fildl daa loop in pop popf jmp movsb xchg xchg xchg leave jbe outsb pop test sub mov pop mov addr16 scas mov xlat add mov and leave push cmp adc gs xlat dec lcall scas cld je sub dec orb mov inc cmp (bad) loope lock cmp lret and cmp aas cld adc cltd mov addr16 aaa orl pop into loop xchg insl test cmp arpl jl pop lahf jp cmpsb cmpsb pop or jb data16 rorl ficomp lea sbb inc outsb dec sub mov rorl inc mov lcall and and xchg rcr add sbb sbb mov cltd clc mov xor mov xchg je out push aad (bad) stos xor cmp adc int add sub inc ret pop push fyl2x ja bound fiaddl cwtl das ret (bad) and mov insb pop adc ja mov outsb cmp xchg loopne fnstsw shlb lcall mov sub iret push lock mov aas outsb inc pop (bad) xor dec sub sub mov pop mov cmp and sub mov lds faddl movsl outsl repz fcomps mov dec and (bad) lret jbe mov enter adc ss rorb nop xchg (bad) mov popf jle stos sti xor (bad) mov fcompl sbb lods test pop jnp cltd test and mov dec and pop pop add clc popf xchg testl mov in or lcall fwait jne push mov hlt cmpsl and inc nop mov jno out testb push mov xlat xchg push pop jb mov add or out jle imul nop repz mov idivb inc jecxz imul pop mov adc aam lds sarb cmp cltd out cli insb (bad) sbb cmpsl xchg insb sarb pop sbb mov and jns (bad) movsb aad lods ljmp sub jp xlat je mov inc mov mov fs fist ljmp jle push mov push add mov fwait movsl mov dec xchg mov pop mov mov mov mov mov mov clc das nop xchg mov adcb sub xor cmp in mov add insl cmpsl adc jl jo in aaa fcomp mov dec rcrl adc hlt bound lods jns sub add or daa aas push mov adc xor sub (bad) shr dec mov jle cmpsb ja jg mov bound fildl mov (bad) push xchg outsb jp inc stos mov inc ficompl jnp stc and and fnstsw xchg cltd in and popa jne sti repnz dec pop jg xor or (bad) or out inc and xchg sbb or pop sub cmp mov add jecxz test adc stc cmpsl jnp dec ss adc lods test stc or xor cld pop icebp push (bad) aaa add clc jle dec push push inc jmp jb mov dec loope adc mov mov lds cwtl mov inc out dec pop mov lret adc repnz outsb movsl sti push pop cmp dec fstps test mov incb shrl fs cmp push add adc add cmp ret xchg cmp pop in mov inc cmpsb ljmp mov lds andb imulb mov mov inc out push int cld pop jecxz test outsl je lret pop xchg hlt adc outsl loop cltd mov add (bad) in xchg pusha jle in cmpsl mov mov scas xchg jge push dec scas ja adc mov inc jns add add mov in pop sub cs xchg mov push in sbb mov inc add adc int3 ret in jo (bad) push gs pushf or enter push cmp fidivl push xchg aam es pop cltd xchg (bad) (bad) ja dec push into or mov rcrl jnp inc dec (bad) push inc xor push in pop fwait inc mov xor add test mov popl fidivr pop push push fistpl fildll mov mov push sbb les xor in loope sub sbb xchg in xor in pcmpeqb jecxz push cli inc push ljmp pop shrb dec push inc call aaa xor (bad) mull push push lcall mov out cmp pop addl pop xchg imull dec lahf mov fldenv loop add fnstcw adc lods pushf inc mov iret es icebp mov adc cmp fs andnps scas pop cmpsb gs push lcall cmp icebp cmp mov pop hlt (bad) fist imul call inc addr16 addr16 int3 mov stos cmp pop inc jg rcll adc dec insb idivb iret inc outsl jnp adc hlt xor inc fdivl pop sarl xor push jbe imul mov mov inc addb xchg or lock xor jmp add fsubrs inc adc adc bound ja out fwait movb jns adc push cmp imul call imulb or lock enter les pop sub xchg inc int es push xor cltd cmpsl fs dec adc pusha fld mov add shrl out test setle outsl dec (bad) mov ljmp icebp (bad) pop pop push in loop stc adc rclb popf inc or addr16 in mov inc jb fildl xor pushf ja dec cmp addr16 cmc xlat leave imul sti mov stc add icebp add insb lret sarl adc aaa xlat push push xchg shrb mov jbe adc and loop loope mov pop repz mov jo inc mov mov cmp lock jp scas imul and pop or sbb dec sub pop push fwait in xor imul and stos mov cmp enter mov inc (bad) stc loopne pop mov ss cmp mov and pusha in pop fcomi ficompl sub adc loop mov shrb xor jmp jno stc pop sbb rorl adc and sarb je pop in or daa in cmpsl push add xchg sub pop cmp pop pop cmpsb mov add sub adc dec bound sbb adc xorl adc pop xchg inc pop mov or lds movsb xchg mov inc gs popf and mov inc adc lahf xorl lea mov out mov lods aad sub rolb mov xor push add jmp push add add insb pop pusha andl and das or loopne xchg mov lds (bad) ficomp pop hlt fadd mov nop xchg (bad) out (bad) mov cmp inc mov lahf fcomps jp (bad) pop lahf mov jmp pop add sbb scas xchg gs sarb pushf jp sbb inc loopne push pop mov pop stos ljmp repz cmp fimul (bad) sbbl hlt sbbb dec jno push jns jbe in test and jl jns mov mov hlt outsl mov cwtl orl je out push in bound fsubl ss sub cmp repz push cmp std hlt in ret stos icebp aam mov mov call jae,pt cmpsb sbbl movsb lcall mov dec sub xchg je jge pop loopne es jae mov pop push ret add fist xor jecxz ljmp repnz popa lock lea sub (bad) enter mov push out xchg int pop leave ret js es (bad) xor rol loope push sub cltd arpl dec enter mov mov lret fistpll xchg mov into adc sbb imul adc shrl pop data16 ret jp cwtl sub out xchg subl fild mov mov cld pop stc (bad) movsb dec arpl or push pop push daa rcrl test cmp pop adc ljmp mov repnz pop ss lods test sbbl push mov adc pop jle dec and iret dec xor jns pop mov mov xchg sbb in repz insl aam jae into sbb xchg pop psubd mov mov stc je clc jmp andl out cmp push inc dec cmp lcall jp fstpl js sub dec jle bound repz outsb mov mov mov mov add xor neg push imul adc cmp pop clc fs sbb inc cmp push mov xchg scas sbb and dec icebp jno scas push dec xor pop das fdivrl xchg fs lea mov cmp rorb inc sub and ret push pop into lret in into arpl jb mov daa scas mov fbstp cmp or push daa in jg (bad) cmpsb xor sub xor sub arpl ret mov orb and js sub (bad) enter cs sahf setae dec and out test in aas push out pusha mov neg vmwrite mov lea movsb mov cmp ja pop into fwait sbb mov rorb or out insl ret inc inc sub iret pop pop xchg stos loopne popf or mov pop mov mov aaa mov sub xor adc bound loope aaa mov frstor popa insb sub movsb sub xchg ds add aad shl dec jbe pusha jb xor je lock add sub push (bad) out ret jo adc pop fnstenvs int3 pop cmpsl pop lret ret (bad) dec in clc inc fucomp push mov pop adc popa nop adc adc mov pop mov adc xor rcll je inc iret test mov sub or pop (bad) mov dec popa mov dec mov leave lds xchg nop xchg andl aam xchg addl mov aad movsb lcall mov nop in jp push push or fwait in xchg mov sub pop adc xor cmpsl loopne icebp mov fcoml or sbb or mov adc mov sub jne sbb ret stc js mov xorl xchg push clc mov adc pop adc es iret sahf je orl rcl ret pop inc mov xchg pop push push add les int3 mov idivl lret (bad) mov (bad) (bad) adc sti mov pop fwait mov pusha mov push (bad) iret inc imul outsb out or (bad) (bad) dec mov fisttpl push or push push and pop outsb adc movsb and add sahf mov test fsubrl (bad) jb in jae inc out jo mov test sub sbb mov inc (bad) stc xchg jecxz sbb sbb mov lea jno stos adc aaa mov xchg mov stos das push cltd fimull js mov (bad) xor movsb xchg push push mov push fwait or push push inc dec cmp or adc or pusha pop rolb pop popa mov scas mov movsl shrb scas mov pop sbb lods jo sbb test and repz mov pop sbb out insl inc or mov (bad) mov adc rcll pop sub out adc inc aas mov pop or mov repnz scas lcall out sbb xorl lods orb pop jo sarb iret (bad) pop lock push fdivs in sti clc test lcall ret xchg test or pop xor pop sub jne (bad) scas pop inc sbb popa (bad) cmc push mov cmp push cmp xchg ret dec pop aad fidiv xor xlat shlb pop pop cmp in jno xor push inc in mov mov adc jno and not js arpl (bad) cmc cli add cmp fisttp popf sub mov jmp cs xchg add lret xor mov push rcl loop cwtl nop jg push add xor xchg stc jmp jg add and xchg mov pusha loope ficomp sti xchg fnstsw jle in push stos mov ret inc or data16 sti aas frstor and mov stos xor pop adc mov xorb mov fmull (bad) fistp js xor add sub div jmp aam jae and xchg pop std test xchg sbb cltd lcall outsl add push roll and mov sub sub mov shll cmp mov test aam fstpl sub mov cwtl dec add dec outsb inc mov icebp daa xlat ret mov les mov jno xchg ss jecxz dec jns add xchg bound je and dec inc mov mov mov (bad) (bad) in popf arpl or mov scas int3 cmp cmpsb cmp adcl jbe lahf add fnstcw push (bad) push jmp push or ret jnp adc lods add push rol sub in aam stos add cs daa test sbb add and out push cmc fdivs lahf pop ljmp xor mov sub adc xchg push mov mov ret and lahf mov lock mov movsb mov divl adc pop movsl scas push cs sbb call xchg mov fisubrl adc add mov repnz ret inc push sbb ret mov push jge mov xchg mov ja sbb insb add push mov imul pop adc in push mov (bad) jns xchg les sub (bad) inc or adc loopne out outsl cmpl or xchg es mov xor cmp sarl mov stos in push leave pop or jb sbb sbb jne das movsb xchg dec or movsl lret push sbb add cld popf jae ret mov addr16 dec cmp dec mov outsb mov mov mov jae inc pusha enter xchg fmull stos inc repnz jl cmp fild test fnsave (bad) outsb cmp mov fildl mov jnp orl in hlt in lock ds shrl orl inc xor les out inc pop cmp lcall pop sbb jne ret leave aas mov pmullw and mov lret jle std mov mov int3 xchg mov pop aad fimull lret dec push and movsl jb lret pop imul jmp (bad) pmulhw and pop mov in or movsl das jp movsl xchg pop mov jae sbb mov pop push testb mov push mov cmc inc outsl loop clc add xchg push (bad) movsb and (bad) insl xor test and inc or stos (bad) movsl cltd test stos jg adc jmp xchg xchg nop nop fisttpl sbbl jbe xchg add test pop mov ror push or or movsl inc cld fldenv test add je addr16 or les int3 scas mov pop push mov or sbb ret or fwait or (bad) adc mov fistp fistp ds sub loope mov add jne mov dec adc mov dec stos mov mov mov and sub sbb repnz leave mov inc hlt inc cmpsb and (bad) repz mov lea icebp mov inc ss push call adc cltd inc data16 xchg ds out push jge pop mov mov loopne fsubrs jge inc inc out add mov icebp jno dec mov stos and xor adc (bad) std aaa push mov pop leave les loopne push imul into aaa dec mov xlat xor mov mov adc add push adc dec popf pop (bad) jb fmuls popf leave cmpsl inc enter push cmp inc aad adc lods stos pop outsb mov das inc scas xchg pop sub es cmp push shrl and gs jbe mov popf mov loopne scas imul mov cmp adc clc int push insl jae lea loope (bad) roll inc cmp mov das mov adc addr16 xlat xor arpl lods shlb lahf divl xor xchg mov jmp daa cmp fwait cmpb les test leave sub xchg clc outsl mov scas add (bad) (bad) xor adc outsb (bad) mov scas xchg push and call adc xor popf push mov mov int3 loope (bad) pushf lret enter (bad) mov mov jmp insb mov cwtl aam push scas movsb jl aas call addr16 rorb mov push icebp cld sub mov mov (bad) ja sbb (bad) icebp data16 add dec addr16 mov adc (bad) popf aam add aam loope mov push or cli test jp sti mov test test or mov xor xchg int3 call xchg sub push fidivl xchg add mov js mov adc mov sbb fs add mov inc inc fldt xchg int3 inc adc loop cmp pop xlat mov orb pop out pop gs mov sbb and ja test movsl jno and sub in out aas cmp cwtl mov lret stos les cmpsb mov or (bad) shll mov dec xor dec jae test movups cld sub stos mov cs xchg xchg arpl out fdivrl stos (bad) or (bad) jo ja lock movsl and or or popf mov dec mov rcll int data16 or sbb cmp repz imul fyl2x popa add jge push dec scas sbbl insb test jne shll pop std xchg fcompl or pop adc popa sbb jg mov data16 lcall xchg xchg jnp mov sub in outsl imul outsl lret test popf fwait movsl push xor sub stc pop imul fildl mov daa mov in enter mov mov imul cld pop adc aam jmp out cltd push cmpsl std mov test or cli js mov cs dec hlt mov xchg negl pop jo ret in mov mov sbb sbb enter rorl or pop sti fcompp jg jmp mov daa xchg rcrb out xor cmp lds cwtl dec xchg xchg (bad) aad mov outsb inc push push (bad) dec in (bad) pushf and rcrb leave mov iret pop bound test mov loopne jne push mov rol inc lods imul pop jno (bad) sti and clts xchg aam dec adc inc into pop cmc int fwait mov sbb lret insl pop std ss insb shrb aad fild inc stc cs cwtl push scas mov push inc mov dec test xchg outsb jno xor andb fisubl mov cmp or out jp rorl fcoms loope mov add mov ljmp orl push xor mov mov or roll sahf pop lds aaa bnd sub cmp cwtl jle jecxz adc xchg pop sub xchg or sub fistl je jae stos or (bad) faddl test fmuls fdivs inc aam xchg lock gs (bad) sahf xchg nop xchg vmovdqa stos xor pusha mov xor add adc cmpsb pop (bad) outsb mov jae (bad) mov int3 mov test sti jbe mov push jb leave cmc test ljmp dec les frstor test push xlat shlb or dec imul fbstp jl pop pop mov jge call test loop cmp inc jp pop or push in movsl call adc movsb sub mov jmp in movsl psubq (bad) in sti iret ja mov xchg push fwait or jge dec inc ss xchg orl xchg fnstenv lods inc mov and test mov mov sub sub mov (bad) mov xor std fcmovu fdivr sbb cmpsl mov add movsl pop test in or mov les movsl pushf or jns jecxz in mov pop data16 xlat cmp mov inc sub ficompl (bad) mov pop push pop setbe adc cmc (bad) xchg (bad) fcos fcom stos mov or mov xchg xor scas xor adc rorb jmp sti (bad) jp sub sub jmp and repnz mov sub fnop clc in cmp xlat or cmpsl cld mov dec into push jnp adc push imul inc sbb xor cs dec mov lods xchg lock push dec lods aas cmpsl sub fcoms pop push sub fdivrl dec insl ljmp sub fildll out movsl lahf stos dec push (bad) xchg xchg scas mov jp sbb enter cmp inc and test or pop xor push push push mov out or shrb pop movsb subl push sub jl scas out fisubrl or cmp mov push es mov das incl fdivs xchg xor push jg xlat jae stos outsl pushf scas lods cmp xchg mov sbb add jge add cmp dec sbb dec jnp test jle jbe or sbb pop or movsb dec xchg jecxz cmp mov xchg xor icebp addr16 cmpsb fwait (bad) lea jle mov and sub cld out mov xlat (bad) push je inc xor inc test ss cmc jmp inc orl sbb push daa les xchg icebp popf jbe jnp fadd std movsl (bad) aam pusha test add movsl js or popf xchg js fsubrp pop mov (bad) out xchg sti xchg test fs pop ds ret add mov sbb fxch lods xor push mov loop xor pop cmp jo xor jp mov sub fisubrl pop push inc cmp movsb das fs fmuls pushl pop add cmpsl popa mov aad popa mov fsts in push xchg test fidivr shr jbe insb add adc loopne enter mov insl mov and popa push adc stc movsb insl scas fisttp cld addr16 jecxz dec sub aad test push jecxz mov aam sbb dec add inc popa inc jnp sti insb dec jle cmpb jne adc xchg dec dec (bad) sarb pop out dec lret mov leave je and out int pop sbb push inc out out xchg mov cmp sub cli pop test ljmp jno xchg aad jmp cmpsl in int inc mov je jae mov out jmp into lcall push mov xchg movsb insb sub sbb aaa xor add mov sbb mov fidivr push dec adc mov insb fsubp cltd push adc inc xor jns or push push push (bad) pusha loopne lods mov push add cmc js movsb out and shl fs mov stos push inc sub popa or xchg shr ret stc scas sarb loope adc jno cs fwait outsb iret inc inc push and andl pop inc pop xchg jmp fwait (bad) xor out push sbb lods sbb mov imul jp mov pop (bad) xor xor les test cli jno and jge lea popf cs icebp cld mov lahf fs out (bad) push or mov outsb addr16 leave xor mov cmpl cmp or inc outsl cltd sbb ja clc shr cmp arpl jg inc jmp dec jns imul rcr mov rcrb cld insl jmp dec in mov ljmp aad pop fadds push idivl push repnz jg rcl xor and jl jne jns insl cld push ds shrb adc xorb nop popl mov (bad) aaa xchg pushw add jg test sbb pop and xor add push push data16 mov lcall fucomi lods ja jo outsb xor mov push jnp jns jne sbb gs ficompl pusha in int stos add cmp and xor jecxz xor mov adc and nop pop xlat jbe lcall cmp push cwtl mov push movl es inc mov adc mov out (bad) push sbb push cmpsl aad fmul out cltd andl push xchg fs mov lret fidivr jecxz mov outsl lea xor sbb imul add add clc aam decb jo adc mov cld (bad) sub mov stc popa dec sub cmp es call jae outsb in xchg and jge mov js pop in xchg pop add fidiv scas sahf push mov (bad) (bad) jbe cltd sbb out xchg fistl (bad) jle mov mov mov int lcall lcall popf mov mov leave lock xor hlt out cmp fsubr out mov je rol ds inc and cltd int lcall ja insb mov mov lock lods iret dec inc dec in es inc insl or cli adc jno dec mov lcall mov int3 nop push sub mov imul push pop test xor sub outsb cltd movb xor sbb sub pop mov adc jo sub das hlt mov jo andl shr adc stc pop mov insb jae mov int (bad) or jnp rcll out popa out jg pop fcmovu popa dec push dec idivl enter (bad) sbb (bad) and pop jnp push (bad) fidiv adc idivl mov and popf xor (bad) xchg lcall mov push in (bad) out scas out sbb cmp push mov rcrb xchg adc dec scas cmpsl and xlat mov sbb gs inc xlat in mov add adcb cmp and pusha or xor add mov mov xchg jl in aas jno xchg fidivr add mov rcr addr16 or mov pop cwtl xchg adc mov mov sbb xchg fldcw mov fucomip (bad) hlt jg std xor icebp orb fsubs inc iret jl and out mov bound clc std jl push imul dec mov adc scas lret inc fcoms fdivrs in bound call data16 aad stos fimull inc orb nop push cmp fwait out mov xor push mov repnz cmpsb sub lds insb (bad) jecxz fwait sbbl push cltd (bad) xor cmp mov dec hlt push inc andl insl pop inc ss sahf mov inc pop aam mov or roll sub loopne adc jg jns or and add inc ret loope adc loop out outsl (bad) push mov sar in shrl and sub or lahf cmp xchg idiv and and js add pop jnp,pn sub mov cli dec add out adc push test xor cmp mov mov push add sbb xor popa pop mov out sub jge mov jge,pt lods mov jecxz nop (bad) fdivrl push push in js aad jo jle push lcall mov int (bad) jae fist jae pop mov aam adc xchg pop sub mov pop lods lock adc lcall nop dec adc add mov lret sbb pop inc sub jg pusha fildll pop or rclb stos cltd (bad) add into xchg fnsave lret adc mov enter mov push cmpsb rep gs sub push cmpsb enter repnz inc xchg inc xor arpl sbb (bad) ja lret gs inc dec pop xchg lock sarl mov inc negl js pop dec int jg addr16 jne push movsl (bad) or cmova outsb or xorb (bad) jmp (bad) arpl imul jo pusha jb push mov mov hlt rol je pop inc dec mov inc and pop lret cmpsl adc push fidivl push sahf push sub xchg mov (bad) repnz subb cltd inc lcall insl stos out xor pop out inc fsubr inc jp pop cld jmp sti or pop inc test addr16 and mov nop jmp shrb mov out or roll inc or (bad) test mov sub mov add and in dec negb sbb and inc dec (bad) dec fld loop loopne loopne,pn xchg xor push addb pop fmulp das push cmc inc sub xchg xchg stos mov cli mov gs push inc push adc jmp and bound mov pop movsb push out cltd jbe inc inc cmp and les lcall inc (bad) push stos call cmpl jno in add jecxz lret inc aad mov decb jge mov push negl mov jg push xchg scas inc (bad) mov push fcomp xor ss fcomps flds scas inc sbb inc pop aaa mov cmp loope or pushf or push test aad adc xchg add dec cmp mov mov cmp (bad) sub fistpl inc push mov insb int3 or add sbb fwait lds iret mov dec xchg mov cmp push fcompl jg or cmp (bad) mov cltd xor add add in adcb sete les loope xchg pop sar mov iret sbb cli mov jo cmp xchg or lods cmp in mov mov call scas repnz adc enter movsl ja arpl add leave xchg in lods mov aam pusha sbb outsb mov pop adc push push adc pop (bad) dec dec pusha loope push cmp lods xor loopne mov fsubl mov scas push aaa jg (bad) lahf in fwait out jo in and xor sbb adc rcrl movsl cli cltd or xchg rorl adc fnstsw add mov pop or hlt stc mov mov pop rep addr16 xor (bad) pop adc fimul pusha mov cmp mov push fisttpl ljmp and test in push lret stos repz (bad) or punpcklbw jo mov loope sbb or mov (bad) cwtl loope ss icebp lods loope (bad) hlt fstl adc orb enter pop sbb fldenv dec jns cmp jbe mov (bad) jne fsts and inc dec xor pop movsl lods ja ds mov push xchg in mov add nop inc insb cmpl outsl cmpsb add pop sahf jnp or std cmpsb xor movb and add and cmp clc adc dec push push aaa in fistpll popw and mov mov inc es cmpl add and movsb mov sub lcall aad sbb mov and enter jmp and (bad) pusha xchg lds jbe mov sbb aas mov clc fbld cs test mov arpl mov mov jmp test xor test out lock add dec xor or adc dec jne pop stos enter lret popa jl cli lods and in xchg xor in shll adc (bad) xor cld shlb fs jp sbb mov mov mov int mov insb xchg lds adc xchg inc (bad) xrstor cmp mov (bad) sub mov mov aas scas into lock in xor mov sahf cltd in int3 ficom lods kmovb cmp call sub mov add cltd clc push jno loope stos xor lahf mov or icebp frstpm(287 mov jno dec rorl xor mov xor ss loopne (bad) div sub int3 mov shlb je xor imul test cmp imul stc fsubrs cmpsl xor lods out mov cmpsb mov pop test lods mov daa imul push add jo call mov int3 into into sahf mov cmp sub lods bound in dec xchg inc pop nop xorb mov aad imul (bad) (bad) adc mov movsb inc (bad) icebp jo pop or daa xchg in arpl out fisttpl inc jge aas loop mov jmp jmp rcrl icebp pop push pop fidivl xchg leave cli cmpsl stos aam mov bound mov jmp dec adc call xor outsb outsl (bad) popf dec sbbb xchg mov mov xor sbb dec out jle or stos inc or cwtl bound xor sub imul mov sahf jb popf movsl xchg call push nop out scas xchg outsl pop (bad) and inc test jno daa jns std pop and push inc out mov out in jne jle outsb fcoml insl inc jg xchg aaa out adc (bad) dec mov sub sub call stc adc xchg or lret lods xchg push or int mov push pop ljmp inc test sbb sbb and imul fadds movsl jl pop adc mov dec pmuludq sbb cmc pop movsl sbb mov and pop inc push mov jno jge xorl mov sub repnz jge push jbe sets ja jo into pop jns inc sub test aas mov dec xchg sbb icebp dec sbb dec sbb cltd loop sbb push aaa add mov xchg cld jecxz push dec inc mov flds popa jp mov shr xchg scas popf and add push mov cmp add jecxz push mov dec adc cmp aas in mov adc repz push push fcompl cwtl lock cli dec movsl lods sti sub adc stc (bad) xor jbe mov mov bound push sbb pop call push bound inc popa sub int3 cltd loopne outsb int cmpsb sbb inc dec jb enter out add call jo sbb mov lds add jmp add clc (bad) rol jle xchg sub ss sti jae cmp jns or sub int hlt jbe push popf into outsl xor or adc cltd xor add inc lods inc mov pop aaa mov test outsb lret dec adc mov (bad) sti mov out lods inc push addr16 fs shl ffree nop loop hlt in test mov cwtl repz add or out (bad) lahf pop adc ljmp sar xlat fwait outsl shlb ds hlt pop jg inc mov icebp test sbb sub inc jns nop and sbb xchg dec mov fistpl mov out inc push mov rcr adc pop mov mov and and and push and mov push or sti sbb sub movnti imul or add mov pop push int3 and xor xor or and insb fdivs shlb adc stos popf and cmc fiaddl sti push inc pop pop out rcrb lds test dec (bad) xor pusha push lahf push cli adc loope mov pop pop je jg mov ja push out or cmp add cmp dec lea fidiv pop imull test sbb stos mov mov icebp sar push cmpsb xchg pop push scas rorl pop xor rorl sbb pop insb and mov mov jae test jae sti sub popf int3 mov dec jmp push adc insb pop mov jbe addr16 (bad) push sbb pop jbe mov xchg add mov add in je stos hlt ror push push and sbb mov mov ret jne sub dec ljmp mov call hlt inc sub cmp enter fwait cmp test (bad) cmp mov aad lds mov lret out and arpl les pop sbb fnop ss insb mov mov xchg clc ret mov rorl loope pop jp jecxz push inc idiv mov inc push pop jl jbe sbb fistpl int pop test adc cmp mov outsl in lods iret lods pop pop stos fwait mov ret push icebp or sub xorl push outsb aam fcoml mov mov movsb jge pop aas dec les incl xchg cvttps2pi ds inc lret jp pusha ret mov inc out and jle sti or scas hlt mov int3 dec imul incb js jb push gs movsl inc push sub jecxz xchg dec loop popa mov add test fnsave push (bad) mov pop mov cli or roll pusha dec divb push test jns xor xchg out xor xchg lret (bad) daa adc fldenv pop push jecxz repnz mov lahf xor push pop xor pop les lcall lods je cli inc movsb ss mov lock jge adc inc (bad) jg lret repz int3 xchg hlt outsl lock pop je and int jecxz outsl cld pop pop lods das xchg xor je lea imul rcrl or push jl pop xor dec mov xchg mov out mov cmp mov jg sti adc xchg clc dec sti push mov mov subb pop pop int rorl sbb jp lds jns jns lods dec adc aam jbe lcall (bad) sbb ret ja insl and jg ficomp int3 dec mov nop loop cmpsb in fiaddl (bad) into addl stos cmpsl jnp mov pop xchg lret push push and dec test call or dec mov mov sub pop or sbb mov fptan xor sarl ljmp fwait inc repz push aad ds xor in scas push jmp (bad) jno fdivrp cwtl xor stc out fsts inc xchg cmp sub and mov stc ljmp popf jbe push mov mov or into inc rolb jmp push cs stos jl push mov stc or fcmovbe popa test push (bad) pop jge popf mov das jge xor adc push popf loop push cmp lods out sarl jmp dec dec ficomp shll dec xor je jl into cwtl jl sahf add cmp inc sub push sub dec push mov jg push push cmp jecxz rcrb sub cwtl jmp mov mov sub xorb cmp outsb cwtl fsubl pop inc xchg mov es cmp dec cmp inc dec push in stos cmp imul cmp imul (bad) push adc xlat lcall aaa aaa cmp adc or xchg jo cli push jno sahf push pop das loop mov scas inc adc mov xlat jle inc cmc xchg adc push call dec addl push push lahf pop aaa inc pop inc jecxz push xor pop add (bad) shr jno dec xchg and lods test xor popa (bad) les lret scas loopne cmpsl mov imul mull gs adc (bad) cmp shr stos jnp push mov (bad) int3 xchg cmpsl lcall jg loop push push xlat sbb bound inc pop push cmp pushf loopne jle fs fs cli fildll jl push std (bad) out stos pop sbb or jb xor pop push test call push jno addl push push je cwtl fcompl mov arpl push mov jno test cmp stos mov je je or out jge cmp push int3 daa jae pop outsl adc dec and xorl ss aam sub lock xor ret pusha bound mov lea dec sbb sbb pop and stc jp pop lods pop add ret push mov and mov xchg mov imul xor loop inc leave lret outsl jle fwait mov lcall sub xchg add nop adc or scas and sarb stos leave jp out or addl (bad) test pushf and (bad) adc pcmpeqb mov cmp scas jle and jnp mov sbb sub sahf divb push jecxz pop sub ret inc push sti aaa mov in mov scas test scas sarb dec clc in mov push loopne pushf cmpsl push add xlat push out inc into addr16 dec adc mull sbb es dec push fldt cld inc fcomps mov test lds sub cmpsb mov in sub mov sbb (bad) sti enter ds push gs dec adc into cwtl stc fisttp push jecxz dec fiadd dec aas roll insb popa xor enter sarb cltd jns add inc movb inc clc inc lds sub sub xchg pop ljmp iret push lahf and lahf (bad) aaa or inc lret push dec insl pushf lock push mov or push mov mov jno xchg inc jl cs add loope mov int sbb iret jecxz enter or (bad) adc jno out push and (bad) dec aaa adc lods stos es push sub lret andl add lea or ljmp andl jb in loopne int3 dec pop addr16 test lods mov mov imul pop mov loopne in mov out pop mov mov jbe cmp stc insl or inc dec sub sbb push add pop loope ljmp cli adc fsubrl lret movb out xor dec aad push dec cmp out fs mov hlt jge mov out jns int3 cs pop cmp hlt mov push adc mov hlt std fbstp gs dec sbb out je jmp cwtl (bad) mov lods xor xchg adc pop sub push gs sbb jecxz cwtl pop push add out test cmpsl fcomip data16 mov popa dec iret insb sbb inc outsl gs adc movsl adc pushf lock popf and test fdivp or leave bound fsubrl cmpsb pop add pop inc loope fstl out mov mov pop and movsb jne inc dec shll loope insl inc cmpsl cs ss pop jnp dec fimul pop inc (bad) push das push cmp mov das push mov sti adc adc xor ss out into addr16 aad add mov into sbb (bad) repz cmpsb imul jmp sub arpl xchg xor jo pop sarb fwait (bad) cmp xor rorb push pop jp pop xchg gs fcmovnb adc aaa push (bad) stos add pop add rcl out sbb test std push or stos push in ja js pop dec (bad) aaa int3 andl scas cmp (bad) push scas xor xor add fsts ss aas inc cmc mov sub bound dec mov das jmp sbb addr16 push dec push out sbb mov fstpt mov adc insb (bad) sbb xchg ret pop jp mov sahf test dec fidivl mov sbb mov jl jg and popl rcl loopne adc out pop xchg jno jge mov and dec pop mov test jae sahf mov mov movsb xlat insl fiaddl jecxz lret dec cmp inc mov push inc fidiv orl in mov xorl dec cs aad mov fdivs cmp loope leave mov dec scas cltd in inc jle pushf xchg jmp sbb xchg push outsb push mov aam mov in fwait or mov lods mov sti cmp iret cmpsl jp pop fiadd pop sti ficoml loope mov jmp jae lahf push adc (bad) and jge das dec xchg in enter (bad) dec in adcl or ficom test or roll orb hlt daa pusha xchg pop aad mov dec sbb jnp pop (bad) jbe push dec jne add or sbb in test (bad) mov insl hlt add out adc or es add mov cmpsb icebp dec cld inc nop lret (bad) cli pop in rclb in push jno mov outsb adc mov mov and mov lret repz setl sbb stos mov push ret fistpl fcoml test fs mov into js fwait int3 mov sahf fildl arpl push mov jp pop pop xchg aas (bad) loopne icebp xchg ja mov mov leave lods pop jecxz ret mov mov (bad) jns pushf fnstcw push mov dec mov stc cmc fdivrp lds mov xchg jg dec dec jecxz lds adc iret mov pop mov cmpsb repz jb lds fisubr test mov and aam jl inc mov scas add insl add inc jno mov (bad) xchg enter adc negl mov insl es insb fistpl add and push jg icebp inc stos jne rolb cmpsb imul loope and fmuls iret sub push mov mov pop imul xor scas imul das xchg push out testb adc aad jecxz pop sbb test icebp mov imul sub adc xchg pop xchg cmpsl jo xor adc loope mov push orl xor mov adc lock xchg dec (bad) stos out inc mov sbb pop xchg add popa dec pop sub mov fcoms repnz stos (bad) or repnz fwait jg and jb (bad) movsl test cmp push nop repz xor rol aas jo fsubl push ret (bad) push fidiv ret insl (bad) cli loope je repnz add adc push loopne push add lahf push pop lahf jge mov mov cmp cwtl aad mov or mov (bad) cwtl jl (bad) idivl dec inc and lret pusha lds (bad) adc out daa push out lret into adc (bad) mov imul push inc add gs enter inc add fstpl pop jbe xchg xor ret pop push mov push enter pop addr16 cmp insl pop mov dec and sbb cmp and or (bad) ds sub out int jb dec std push fdivl movsl insl icebp pop mov sbb mov negl push mul adc test mov ret imul cmp (bad) cmpsl xor push lret lods std cs in pop test push in fmull push and popf sub sbb loopne fs jbe sub and test cmp inc cmp movsb adc add or ds jge movsb imul cltd dec push rorb adc or hlt push cmp jne fist (bad) dec sub repz sbb or add mov hlt inc inc xor sub in or outsl mov sarl clc mov insb cltd aam jp mov stos loop pop push lock or and xor jo pop pop add add out cmc sbb outsl sbb push dec ret dec js sbb orb imul mov fidivr cmp cmp shr mov push adc jbe dec jnp shrb insl stos sbb fildl inc mov (bad) je jg mov fmuls ret or add jg movsl addr16 push cmpsl addl int cld push leave cmc (bad) push mov aad in cltd (bad) jno pop cmp push cs mov adc and popf push jecxz sub adc outsl ja lods lret int dec xchg iret enter add cmp or dec push jecxz lea push notb dec repz test pop fs aam icebp mov push mov in cmp sahf outsb sbb adc and in ds pop mov xchg imul add lock jo cmp test in adc push ja pop push adc pop jno sti lock sti push mov ret loop bound stos push out lret mov cmp adc adc iret scas dec mov icebp pop cmp push loop adc jno sbb out add adc xchg mov sbb stos (bad) xor sarb adc aam gs mov dec cmp mov fldenv jo xchg adcl jl pop std inc out test out out fwait push mov int mov ret inc mov fildll push push js orb mov fisubl popa test push push push pop push in pushf jmp and sti push pop mov out clc idivb and aam xchg pop leave cwtl and data16 inc shlb inc or stc mov lret cmp lds into mov jecxz mov int dec lods xor or pop push add les add jbe xchg mov imul ja dec rorl mov sbb jns ss dec push fild mov add inc adcb out mov (bad) icebp fldcw popf lods enter addr16 push sub inc push mov mov mov jb cmc stos inc sub sbb jmp mov movsb inc mov pop call dec mov sub movsb mov lods jne scas fdivr pop cmp cmp xchg aad adc ret inc pop ds inc xor cs sahf adc ret fwait stos mov mov push pusha adcl mov outsb mov pop rolb pop mov mov lret rorb outsb mov adc add mov push les rorl sbb out mov in adc sub and aad sbb jne push icebp int and scas clc addr16 push das fcoms mov inc inc test sbb inc pop and xchg leave inc lahf add xchg fildll inc inc adc jecxz cmp int sbb loopne (bad) imulb les mov in or mov inc daa ds pop fcomi add push push jle sbb cli sbb push mov pop aaa sbb or scas (bad) dec cmp dec in xlat cmp ss xchg ret jbe jg (bad) push fs xor insl or inc push cmp popa sbb sub test mov pop (bad) mov adc out dec enter fisttpll cmp mov shlb lahf or adcb sbb in dec pop sti inc inc or test sbb mov add out (bad) push mov ss lods add mov dec int sti mov push aam js xchg and fwait dec stc inc pop cmp push xor mov mov repz vaddps add leave jns mov inc sbb pop sub dec and jnp cmp mov cmp jb loopne out mov mov inc repz cmp ja sbb pop mov push lea mov ret fsubs inc mov fs xor pop cmp xor test shlb jns and mov or dec div flds repnz pop pop jne inc mov mov and jmp fstps ja mov shl dec cs push int3 jo (bad) aam (bad) dec fucompp test push and pop mov xor sub sbb ret ljmp fiadd insl fs xchg adc imul scas sbb push add jne ret xchg jmp adc and fildl sarl (bad) jb,pn mov movsb cmp subb push adc or lock cmp xor popl jp jl and inc outsl scas fsubp inc hlt lcall jns jno mov and fs popa dec pop xor xor mov iret test push jmp pop insb call pop push (bad) addr16 int3 dec dec mov fwait das push (bad) jbe adc vmread xlat jl aad cmpsl push mov sarb imul arpl sahf and add outsl pop sbb (bad) jbe sub arpl fstpt loop lret movsl mov lret mov mov jecxz hlt mov cli lods fwait bound cli xchg pop scas xor aaa in scas scas shll sub jecxz fild mov jecxz sub pop mov xchg add ret std fldt jns ja lahf push scas xchg aad cmpsb jmp ss sbb xor dec aas pop cmp or or sub or xchg push inc mov jp pushl scas cmc mov add icebp ss call mov imul jne add stc mov movsb je add loopne lea jmp outsl sti orl lds shld and mov pop shrb out xorl dec (bad) lret push clc mov adc push mov roll (bad) pop outsb push ret mov pop push xchg mov jno dec dec lods arpl add cmp insl adc aad xchg sbb movsb mov jb cli xor inc xor ret cmp cmp test adc mov pop loope daa adc mov les std add jecxz mov push shlb aas (bad) arpl mov push xchg cmp xor push sbb jne adc leave jle cmpsl xchg dec dec push arpl mov mov push clc stc pop outsl int3 in jbe outsb (bad) dec orb pop mov fsubl mov mov and xor bound xlat jle into loop xchg mov sahf or (bad) mov mov fisubl pop hlt cmc roll sbb pop sti es pop (bad) mov xchg popf add push out lods popa inc xor addr16 lahf pop inc push insl not pop sbb push adc fwait repnz std pop lahf push adc in xchg jns orb sub (bad) push ljmp inc sub mov gs dec ret ror add roll sub stc jb xchg shlb cli inc lds enter jmp jnp std sub movsl xchg les mov cmp fldenv outsb adc jae jbe xor mov jno inc mov ret mov xor lock push rorb cmpsl xchg repz sub inc dec shl dec int pop fild mov loop adc notl cs aam and push inc jo rcrb stos mov sub mov addr16 subl jl roll cmp adc mov sub mov (bad) jecxz icebp je stos (bad) insb jg loop out outsb xor out imul out test dec popa fiaddl mov shlb fadd cmp mov andl lahf jmp stos fildl xchg adc call jg outsl ja pop sub scas xor in add push jb cmp inc call and mov hlt and lahf cmp or (bad) arpl adc push jnp ss fs mov in cmp dec or mov addr16 add ja and ret mov dec mov cmp push mov jns lret push add mov push int3 dec cmp lret and (bad) test inc (bad) mov adc dec dec cmc stos cmpsl mov jmp and shrb out sbb call adc xor add and push push iret cmpsl xchg push xlat sub out (bad) lret dec sbb dec shrb adcl loopne xchg sbbl call mov sub imul cmpsb je add fs push std mov iret pushf push add xor call xor add and and sbb mov repnz push add mov mov jae sbb test mov or pop cmp leave int3 push es imul push cli dec jne add push xchg inc add loope xchg adc sbb sbb jmp xchg jg outsl pop add pop pop rcll loop js push add push movsb lret fnstsw movsb out in mov (bad) cmovp cmpsb adc mov lret xchg mov or sbb adc mov mov (bad) xor sbb cmc shlb test inc xchg jmp dec dec pop and cmp add imulb js mov push lds adc movsl scas dec lcall paddusb in nop cli andl test imul cwtl pop xor movsb test arpl adc xchg xchg dec negb xor ljmp shrl and mov movsl sbb in push cmpsl jno mov pop lods jecxz mov xchg lret cltd push aas push pop dec outsb push xchg dec sbb and xchg mov mov addr16 cmc and bnd push xchg hlt inc inc divb out pop (bad) je add iret fwait mov inc roll cmp leave test fnstcw dec push hlt mov add ja add jnp nop bound shll mov mov out push and adc dec scas add and int3 rol pop pop into jge call dec mov xchg cmp and popa jb and or jge fwait stos adc int std xlat xchg fdivl movsb mov cmc dec in icebp dec add jmp push movsl or stos cmp mov in out jae lret xlat mov insl lds fwait leave xchg push lock jl cmc add dec mov (bad) mov or jb sbb mov adc or dec mov stos mov aam cwtl fdivl xchg test mov and iret mov mov cmp (bad) fadds cltd push sub and in cs insb popa sbb rep cmp stos out out cmp inc mov fisttp imul stc in jno icebp or mov mov out xchg scas cs inc add arpl jmp stos cmp lahf dec adcb sub push fwait and inc mov outsl test adc inc fsubrp jl test stos (bad) into popf mov dec cmp lods sti dec fwait lock push cmpsl xchg mov les out loopne jle shlb lcall mov inc mov inc cmp addb addr16 lahf mov xor lods std add adc and aas sub inc dec in inc ljmp ljmp xor ss cmp or cmpsl push sbb orl mov lods enter or xchg icebp lds ds pushf xor dec xor mov (bad) lret test pushf jmp dec mov cmp ss sub add push fsubp dec xchg cwtl (bad) xor sbb mov loop push enter sbb jecxz mov add and gs xchg fcoml sub mov aam fldcw mov xchg xor (bad) or pop (bad) mov outsb mov push push mov sub mov cwtl sub (bad) rcrl sub lea lea cwtl xchg test lods int3 arpl das in cmp ds sbb cld dec lea cld sub (bad) pusha fwait mov xor sub insl movsl stos (bad) jno cmpsl imul lret mov repnz cmc push and pop add pop repnz mov fcoms mov loop mov jbe push mov pop jg rcr sub adc scas daa cld dec das mov push hlt dec and (bad) or sbb push aam dec movsb aad int mov and inc sahf mov jns stos icebp cs roll sbb flds add aam movsl mov sub mov dec jnp insl je in add ja (bad) cmp add cmp cmp iret or int3 sarb shrl jb dec ljmp shrb add xchg (bad) loopne (bad) int3 jb fimul jo (bad) sbb xor push mov jp pop pusha (bad) lret (bad) ljmp lret rcrb scas pop inc sti lahf cwtl (bad) ss mov subl sub mov and jo (bad) adc stos adc rol add (bad) pop test mov pop push vpunpckhqdq mov out ret inc jmp or and push je or push xchg adc lahf mov jb sub lcall cs jg jmp mov ror je xor scas adc jne ss adc iret mov outsw enter xor mov in stos jge fcmovb pop xchg out leave push xchg and mov xchg cmp adc jmp leave dec std or inc adc mov das out sub mov and fidivr push jne pop iret js pop add repnz pop test cmpsl movsl jo jmp adc int sub sub test xchg fisttpll xchg mov les mov pushf add pop sti mov call pop or fstl (bad) adc pop sub mov (bad) inc jnp and xchg addr16 mov inc mov xchg jo sub cmc adc aam jecxz (bad) testl aaa lcall sbbl inc cwtl push rorb les fcomps xor ljmp js pusha sub loopne cwtl outsb (bad) jno xchg jo mov jb jmp pushf sbb sbb push shll mov or loope mov sbb mov ret adc ljmp icebp push jo adc cmp xchg push mov pop xlat dec jp mov or inc inc cwtl lock hlt and ficom test fist scas ljmp divps test xlat sbb (bad) mov insl adc sbb pop add in xchg insb pop imul pop lods sub cmc jns xor dec push inc sbb movl pop js out mov cmp xlat movsl jno scas add jnp pop pop sub add lahf pop rol xor xor dec mov cmpsb sbb popf cmp push (bad) xor imul test sbb mov xor sub and aad loopne hlt mov outsl scas mov mov mov inc stc cmp pusha fwait subl in cmp mov std imull sub push sub adc aaa (bad) mov je in xchg cmp loop int3 test imul ret aas cltd mov lock jmp fdivrs cmpsb xchg or sbb testl mov sti mov std and xlat inc pop sbb push es adc fsubp jns and (bad) or (bad) push movsb and sahf adc xchg call xchg lahf or cmp pop adc add ror int3 mov (bad) (bad) or jge jge sub push pop iret jo and out dec out movl (bad) in scas or ljmp loope shlb rolb add movsl cmp je mov repz aad xor (bad) mov push jge scas add ret mov xor aad testb fmulp or dec std xchg pop mov movsb vpunpcklqdq sbb mov mov push (bad) pop mov pop fidivrl push dec daa xchg notl (bad) jne adc jmp outsl pop push push jno jge loop pop lahf mov repnz sbb sarb pop or test xchg in lret sahf repz or int fisubrl mov mov sbb push or cld push mov mov int3 mov mov pop xlat xchg cli loopne (bad) popa jmp mov in fucom cmp fnstenv push dec out fadds cmp adc data16 dec or jns cli add sub mov test jmp xchg hlt loope sti dec mov cmpsl icebp jne or mov sub mov outsl mov outsl nop jl pop push aas cmovge sti int3 pop pop mov imul enter dec fcomps rcll (bad) jmp jne jmp sbb cmpsb scas push xlat mov stos stos (bad) inc mov xchg ds sub mov dec inc jb (bad) movsb test sbb pop int3 add push inc fs push int3 sub inc xlat push sahf adc push adc ret mov sub hlt lods int3 in lods inc (bad) add sbb cwtl xor ret push mov push negl push repz or fsub js popf ffree push test insb frndint add out mov or ficom pop pop mov or dec cmp add adc call insb jg movsb movsb adc mov push fisubl mov or cmp jg dec dec push inc mov lds gs cmpsb inc and cld sub out repnz clc lcall repz cli mov push mov aam pop cmpsb ss neg mov cmp pop push add scas es mov hlt (bad) mov cwtl cmp jb sbb push pop into mov inc pop enter mov mov (bad) arpl pop xorl or imul nop inc jns push adc das rcr sub and (bad) cmp dec mov push xor rcrb in ret mov leave cwtl lahf inc jo aad popa adc push popf std adc xchg nop lock ret mov dec (bad) or fdivs mov ss jecxz push jmp dec adc or cmp mov lods cwtl push xchg xchg bswap cmp (bad) clc (bad) fidivr cmp fimull jecxz aad push mov add and ret lods ljmp sbb add push addr16 bound roll lea jno sti dec pop adc ss or popf ss insl push mov or (bad) jmp lcall dec jl mov xchg loope js pushf enter adc sbb stos jecxz (bad) jg jo data16 jl es ret leave mulb je jo or mov aaa ljmp (bad) or test (bad) sub and in rsqrtps mov lods outsb jo xor jle xchg push sbb sub fiadd or xchg test mov adc push dec sarb push xor dec sbb stos cli imul or outsl hlt mov add cmp inc lahf and in stos pop fdiv sahf test stos in inc test fnstsw js sbb push mov inc inc out iret xchg adcl add cmpsl xlat movl loop cmp cltd dec cmp movsl cli gs dec test lret mov adc jb pop pop xlat inc mulb pop loop icebp pop xchg fwait xchg clc sbb cld sub mov out popa divl cltd add and fsubrs xor mov mov xlat sbb dec mov dec movsl loop out rorl xor inc pop inc xor stos in shrl aam sub mov dec mov and push sbb dec pop push pusha out jl les xchg push iret push bound dec pusha mulb imul cmc xchg dec rcll sbb mov add add mov fldenv flds xchg fwait test inc push sub mov adc dec jb (bad) sti push xchg or dec push insl cmpsb add xchg es clc sub mov (bad) (bad) push lods (bad) nop out or push push sub inc adc daa jo stos ljmp pusha aam lret popa xchg (bad) mov push into jo push dec sub mov jg jns push adc aam lods aad mov fmul cmp aad pop push cmp jo imul inc dec or xor dec xor test dec jb inc ret inc add daa scas and xor mov jno xor shrb stos icebp add sub int inc lock cli lahf sub xor jae xchg data16 loope addr16 add push fistl xlat setns enter inc inc imul call lea movsb lds or mov leave subb xchg fucom jbe pop sbb (bad) rclb les xor xchg mov jnp push cld (bad) xor and es test in rol out pop sti push cmc jbe testb jmp (bad) mov mov push scas dec xchg dec adc xchg int3 mov cmp cmpsb int jo lea xchg bound push mov push pop add add dec test (bad) std sbb xlat inc std lods inc mov pop sbb dec xor or out mov movsl mov fstpl in push cli jae addr16 mov (bad) loopne sti aad jbe adc cmp mov ret jle mov fmull popf lret (bad) fistl xchg sbb dec inc xchg pop data16 sbb fbstp pop add adc inc aad xchg data16 insb je insl push imul ss xor and jno sub ret and decb insb xor cmp mov mov fmul movb test scas xchg lahf (bad) push or cmc dec add idivl push cli add push mov movsb jmp jecxz nop enter sbb into cmp inc push mov sub mov inc xchg fsubs pop iret push xor add xchg out imul sahf pusha dec mov dec (bad) scas lods or in xchg (bad) stos pop push push test adc push in mov adc push or push and clc mov inc cmpsl cwtl aas jle,pt jge mov and pop mov or lds and cmp jb sub mov (bad) scas imul xor pop mov out loopne push add inc (bad) out xchg pop outsb es sub icebp xchg loop jge mov adc bound je add pop cmp cmc ds sbb sarl mov push test inc inc pop mov stos dec and mov out mov scas fiaddl push adc pop pop aad jle mov sub pop in push jmp movsb lea pop fldenv pop (bad) sbb mov cmp mov movsb push jo,pn mov pushf incl push pop ljmp pop in into mov outsl test stos mov sub sub arpl imul dec jb imul mov jmp enter sbb jmp shl push push pusha xchg jbe enter sbb inc cmp insb andl push sub lock inc push push sbb mov inc lods outsb mov clc pop je les adc mov out mov xor mov (bad) sbb mov lods sbb xor test cmp ds sbb lahf or in push test dec pop (bad) cmpsb out ss mov fdivrp cmp cltd push sub fsts xor (bad) aaa sarb mov xchg or mov enter dec ffree (bad) jnp inc outsl (bad) cs inc into jbe mov sahf stos push fucomi int3 push imul pop pop lahf in xor dec jge push ds cli and xchg fwait push inc in das cli aas movb es xchg jo jbe shrb lcall test mov lret xchg aam mov lods test sub mov rclb loope adc into dec ljmp stc loope dec shr add add jo xor dec adc and jl pop stos push int fwait add (bad) adc popf sbb ja cmp mov xor jp,pt sbb aam cmp (bad) adc pop jl cmp pop and pop push dec pop add (bad) loopne cltd inc cmp or out rcr std insb lock xorb stc test cmp pop loop (bad) movsb cltd ljmp ss xor ret fwait xor lea dec dec loopne cld pop cltd enter aas add call cmp lea or lock fcoml pop mov mov sub les jl popa jg inc test cld std dec cmpsl aad lock sub push pop sbb shrl jge xlat adc je or pop or push and cli stos js cmp mov fnop mov dec xor stos pop and fdivl shrl popl pop cmp mov jmp mov xchg into inc push stos xchg outsb ss jl rclb fcoml es mov lahf cmp mov (bad) ror sbb test mov ljmp add out dec test jne xlat xchg and adc lea fbld insb shll negl repz jns sbb jecxz sti decl shrl xchg insl shr nop das mov mov sbb rcl dec xchg inc jge ljmp int3 mov cmp cmpsb bound push cmp jne mov fsubrs sbb or mov int3 adc jno mov push push insb push pop jbe cmp cmp mov cmc lret jbe xchg je xor cmp mov aam pusha pop (bad) push aaa add addb imul out movsl mov (bad) pop aad push nop mov xchg mov in push or pop cld sub pop pop mov scas aas adc jmp sub or xchg lret pop (bad) mov push sub (bad) cs push shll dec xchg mov xor fidivrl or gs das jecxz fldcw mov loopne jle mov pavgb cwtl lret or repz aas popf mov jo or dec sub add out movsb test sbb sub xchg sbb push mov sbb stos inc aaa jae mov xchg jno mov inc sbb xlat test xchg cs out xor inc aam fwait out out mov imul movsl xchg mov mov xor lret xor les pop jge (bad) inc jb mov out inc lds sub pop mov sahf dec ja movsl xchg pop mov cmpsl out in shr lea fwait (bad) daa rcrb cli or popf xor rol jne inc repz sbb mov insl pop sti mov imul je scas rcl es jg bound and repnz les cmp int mov test jecxz and pop xor pusha xor pop jl mov xchg ret movsl mov xchg daa (bad) xchg pop mov or jge jns sub and stos ss addl push (bad) xchg xchg into lods pop repz (bad) cli daa cmp jle leave andl and pop movsl inc imul xor test cmp and test pop lods or fldcw mov in adc dec (bad) or dec cmp xor (bad) sahf and sbb loopne dec int3 adc (bad) (bad) repz inc ret cmc xor xor dec pop sbb mov push or das fimull adc dec add notb hlt test mov or repnz adc mov push sub lds scas jo sbbb push aam inc jp ljmp addl or xchg (bad) adc stc movsl xchg jno cmp mov adc lret loopne lret mov shll lods pushf rcrl pop dec ret pop aaa push (bad) call loope jmp push repnz cmp cmp pop xlat dec ja (bad) aaa dec test das aad int3 (bad) ja dec jg adc enter int ret dec mov push aam or inc jbe cmp push cmp (bad) sbb rolb jle cmpsb aaa and test dec cli cmc mov loop mov nop or hlt cmp icebp dec pop bound cmpsb pusha fcompl xor add test test loopne out dec and sbb add stc pop fnstsw add or sbb fs dec sbb inc mov and jecxz jg jmp test (bad) sub inc jp cwtl xchg pop popf mov jle subl and out arpl pop test popf cli push ret and out pop int cli xchg lret jmp aad outsl push fwait push jns xchg (bad) jmp sbb test adc inc out adc pop sub jle neg jo test xlat scas insl js je fsubr cmc push xchg aaa add sbb dec mov jb pop jnp std fisubl mov stos pop cmpsb or mov cld jp fdivp sbb hlt add push mov int in inc sub push jle gs fisubr test ja or mov sub jne in movsb mov and xchg imul push jo pop hlt or cmp xchg outsl mov or mov movsl repnz std decb pop or jns test cmp and and mov cltd xchg push xchg inc aas shll in pop sbb dec clc mov lock pop std xchg ljmp (bad) into mov mov mov push xchg ficom std push test imul add cmp add sbb lods dec repnz ret mov push or shrb (bad) fdivl add mov (bad) lock sahf test lret xchg jnp xor imul in mov in mov dec and std pand mov cmpsl adc add mov lock daa shll aaa jns inc ds ret mov and jb sbb hlt or lcall cs jle push sub and bound jb mov xorl mov sub mov lahf pop add sbb inc rorl jg shl sbb push rcll push inc push aam mov loopne inc mov fimul imul pop inc or enter not push (bad) aaa ss adc sahf pop or sub movsl sti and jno test sbb xchg dec pop pop es inc xchg sbb fwait sarb int inc jge rol fsubr xor pop or xchg pop or hlt and xor ret pop pop pop mov dec call adc ss imul inc (bad) fnstsw mov pop sar sbb add int3 pop lods ret pop out adc (bad) sbb aaa jmp jmp (bad) jbe test (bad) lahf cmp pop mov mov or push push andl addl lret adc fs mov jp and (bad) out pop mov pop xorb lods sub adc enter imul xchg mov mov repz dec (bad) and cs xor jle sub movsb test fcmovu add pop leave adc mov and loopne dec stos dec std loop dec scas adc xchg or std lret bound mov cmpl dec push xchg dec and inc stos lods and daa mov (bad) jb adc pushf in nop pop lods mov ret inc jmp push leave ret push sub mov or or in outsl addl mov scas (bad) imul es (bad) loopne push jno stos clc push push lds adc imul test sbb pop mov add divb and lods xor data16 inc lahf xchg out int3 pop call ficompl jecxz (bad) mov sub mov and adc mov and cmp int dec xchg scas push (bad) (bad) mov pop adcb mov sbb out inc push push aam or test ss or (bad) mov ficomp push lods xor imul sub xchg das in xchg dec movaps sub fwait and call cmp mov sarb test mov (bad) loope push subl test xor mov pushf idiv xchg ret or add fmul push cmp (bad) add fnstsw xor mov jmp adc cmpsb or js adc dec xchg cmp lahf sbb fs ss pop pop aaa adc sarl cmp aas lret dec fistl and movl push pop fstl mov cmp xchg sub mov cwtl inc xor test outsl sub call leave loopne mov xor xor js dec sahf sub sub add inc mov pop cld (bad) je inc int3 jp xor inc lret ret mov ss scas ret mov and insb (bad) hlt mov cmc pop aaa jne jmp in stc mov cmpsl movsl inc jno adc out lret mov (bad) (bad) cmpsl jne jl and ret jmp xor sub adc dec scas cmp cmp imul std push cmp fnstsw push pop mov les sub mov fwait loope repz mov fsubl fildll jae mov (bad) arpl stc xchg or mov add (bad) out mov pop cltd test and inc and add push or decl ja pop clc push cli mov les fdivl mov mov int xchg push enter andl adc and ret adc mov sub and sarb jbe movsl xor dec clc sub inc jmp push out fimull int mov daa sti mov or loopne movsl sarl stc mov adc sbb pop pop loope jo xchg mov fldl fucomip jbe push cmpsl data16 jg stc divb add pop inc popa enter insb (bad) jl repnz mov dec push xchg int3 mov jne xor jae outsl testl push test ret add (bad) mov cld inc sbb inc mov add adc push popl and std mov mov lods pop aaa das (bad) popa sahf loop sbb fnstsw js mov pop or push sub rorl scas (bad) lock test lahf popf aas mov shr cwtl cmpsb (bad) cwtl xor ja sbb dec fs out xor push jo inc addr16 sti push insl mov push into jno test stos cli ss mov call push mov repnz mov (bad) notb js cltd orb (bad) pop mov ds mov lcall jg push sti icebp loope aaa jge jbe lock (bad) push and nop icebp test adcl stos out out xor inc dec jno sub stc cltd daa xchg jnp in mov pop or inc sbb jp ljmp mov into sub lcall jle jo mov test into jno daa bnd add push add cmp out dec pushf dec xor pop mov xchg or dec and icebp adc and pop mov dec loop (bad) mov adc or dec out leave xchg into push dec mov xor jo popa lea mov pminsw jp (bad) in (bad) jp mov popa cs pop enter insb imul loope mov ret xorb jmp cmp mov mov repz dec or and movsb inc cmpsl (bad) repz or and lea les in and outsb pop push fstpt lcall (bad) push pop mov (bad) lods mov mov shl repz je dec dec sbb ja jmp ret pop aaa mov mov (bad) and ss add push mov push je sarl mov pop shrb aam mov or pusha scas sar js fisub mov mov add mov mov jle imul inc imull fsub adc lock out std sub out push lret mov push xor leave adc rorb push in cli pop mov push das popl outsl inc lea xlat mov mov dec es popf lret insl sar andl ljmp (bad) adc jns and int3 mov popa dec cmpsb mov xor fisttp jbe mov and into xlat xchg mov jns sbb aam jns pop lea push mov repz or test cmpsl xchg es adc imul mov cmp ret test add outsb aad popa lret fldenv cmp lcall cmp pop add popf (bad) in outsl and mov fimul popa mov sub adc int3 push cltd sbbl or fwait bound dec hlt mov push push (bad) rol into and sbb cmp nop out xor push inc pop pop mov out jge pop in fsubs movsb sub je (bad) xor mov sub mov xor pop inc mov inc mov sub sti into (bad) bound lds outsb mov test push inc inc adc scas es xchg shll frstor inc fisub push pop data16 jge pushf lds orb or push mov dec push subb movsb mov lret aas jmp mov arpl popa gs in fsubrs icebp add xchg xor adc out cmp jb push jb inc sbb push jbe xor push and mov inc fadds lock ret rclb imul lea jo movd outsb jl jo mov push xchg jmp push nop cmp lock and cmovae mov das mov xor jg push fsubrs sahf lods arpl jnp shrb ja xchg jns fwait adc lret popf cmpsb jl test sbb cwtl sahf gs cmp es xor inc xchg out mov sbb push pop sub (bad) out cwtl mov fistl xchg cwtl xor out nop mov mov jbe (bad) sbb mov mov jecxz add pop dec loop in fmul add xlat imul mov lahf enter mov repz jno,pn shrl subl pusha push or inc jecxz mov add mov adc sub fildll xlat sahf push (bad) pop inc and iret mov shrl ficomp and icebp pop fidivl dec push xor jns adc jge cmp xchg imulb push add adc push add leave getsec popa mov adc pop cmp xchg or aaa dec pushl mov je sbb sub (bad) clc insl xor sbb sbb push pusha pop outsl or inc sbb adc push adc mov and mov push fwait stos int3 (bad) push stos loop sti gs xor jp out jle xchg mov push xor das fsts test adc adc in lds cmp and std testb mov push pushf std push loope mov jb push ja andb int cvtps2pd test orb and xchg cmpl or and sub data16 adc jl je adc stc dec jg inc bound add push add ljmp out lcall lods sbb iret scas aaa dec stos sub repnz scas loop fistpl xchg xchg xor cmp popa je sub fwait adc sti and in jnp pop inc out das hlt cmp and (bad) out lret add adc inc and cmc lahf xchg popf pusha xor mov addr16 fwait xchg cs loop or push fwait jno adc (bad) (bad) jmp ljmp sbbl aaa les (bad) dec adc fisub jle dec adc popf xchg cmp leave mov mov call lret xlat shrb sbb mov and inc stc fwait xor mov popf dec test (bad) in dec mov test sub push xchg mov and lods xchg test pop nop xor jno jne jp add mov mov pop sti test outsl hlt fistpl es fstl sahf push ret jp shrb imul mov outsb cmc nop in jns sub rcr cmp pop cltd cmp insb lret ret loopne loopne sbb rcrl add jo sahf adc mov je lock fisub movsl addr16 (bad) xor adc pop je push push inc rcrb xchg cmp (bad) fnstsw jae loope jae mov enter jnp jns or or push add daa sub std aas adc or jmp ja cmp or pop mov adc sbb inc pop xor imul inc add (bad) imul int xchg xchg jge pop (bad) fisubl in lods add cmpb dec packssdw inc add pop sub leave mov xlat xchg push mov dec addr16 or push push pop lret mov xor or nop mov mov mov adc sahf cmp sbbb pop sub ds outsl inc or loopne aaa loop lret out es xor out aad sub inc lahf lds cltd pop loopne inc cmp imul fwait push and mov sbb and popa (bad) cmc das cmc and mov call mov sub adc das cltd pop xor repnz push adc div mov pop out xchg cwtl leave das mull jne hlt setae lods mov ret stos pop mov sbb popa dec dec pop sbb mov in mov int3 js xchg out out lea into insl inc in push (bad) sti rorb les (bad) adc (bad) sub lahf push and xchg in cld sbb ja faddl in (bad) shlb cmp cmp popf pop clc jnp sub adc (bad) out xchg or dec fiaddl mov xor cltd fwait push jecxz pop push pusha lret rcr repz jne cmp stos add fsubs cltd or inc (bad) sbb xor (bad) or int sbb mov dec xchg or push arpl (bad) mov (bad) insl ja shlb inc or outsb loop or or lea mov xchg jne sti mov cltd lcall and add dec out or pop clc mov daa mov lds (bad) int3 push xor out scas xchg xchg push mov and push mov sti stos in fidivr jo sti cmc movsb push (bad) cltd insb cs xchg jo popa and jge loope sub lcall xchg sub mov sahf sub movsl stos xabort aas add mov enter in jb inc push lods push loopne mov dec es in cltd add push int mov shll jmp mov enter xchg xchg mov cmpsl cwtl iret push cli xor movsb gs sub es add ss jmp inc inc pop test mov icebp pop cmc xchg jl pushf push je push xchg and outsb cld cwtl jae dec lahf int dec cmp inc jnp sub fidivl stos xchg xchg xchg mov pop mov std imul ret scas adc test inc cld xchg mov imul or call add jg mov dec inc jae ss lock imull stos leave push lahf std in xchg sub cmp test mov cmc sbb sub sub sub push sub test inc inc jecxz (bad) cld les scas pop das cmp fs outsl out dec jbe data16 aad leave mov lds out jg addr16 orb inc ja test jmp add orl movsb inc pushf mov ret inc xchg movsl inc pushf or shrb dec pop fistl ja fdiv (bad) bound cmp icebp cmp fwait and fistpll or inc sub les mov cmpsl pop mov in call bound add inc inc daa and xor mov mov js mov xlat dec add add shlb jne repnz jae sbb pop push xchg lcall insl mov addr16 pop cld dec stc aad mov xor out (bad) and mov cltd push ret fs jns push sub and and add mov lods call aaa mov add stos out jmp dec pushf jg xor lods jno lods clc sbb (bad) fisubl aad hlt adc cli pop push add out jo leave loopne imul pop adc push ret (bad) and lock data16 int mov push in pop pop sbb cwtl leave sub in adc ds js andl jae mov dec and lret lea sbb push pop (bad) stc xor xor das or mov movsl rorl push or mov leave add mov std imul je mov jb test popa mov jns mov sbb or dec sub push mov lds add xchg lods fndisi(8087 inc inc test mov icebp stos mov ret xor xchg lcall inc out test jge adc cmpsl mov fbld mov std (bad) pop mov mov dec sub pop lret push (bad) xor sub das jo dec push xchg fmuls cmp push jne pop push jno hlt fmul or inc fcoml in sub cmc adc adcl cs imul push cmp loopne outsb fidivl mov inc push push add jecxz and push call jp sub xor sbb testl cwtl mov lock in sbb aaa jbe xor int lret and mov xor add or (bad) insl je inc push jle mov or pop or inc in inc test pop inc fildll mov in add repz orl (bad) and int xchg (bad) imul mov sub inc arpl test int mov lock popa hlt inc cmpsb test inc scas cld adc rcrl cmc jl add mov outsb loope repnz leave addl insb jecxz fnop neg mov int sub push pop jecxz jge hlt sbb ljmp std pop cltd daa idivl fimull and adc in cmpsl sbb pop sub jnp in xor mov xor and push push mov sub mov cwtl cld inc and push ror inc scas rclb out scas neg mov push (bad) mov and int3 rol dec mov sarl arpl or jg xchg push out jo dec mov decb scas rcl popf fwait cmpsb push test movsl sti cli (bad) stos mov repz mov add xchg divb lock test mov ret jb or sbb negl cltd xor add jbe add les inc das dec and jle xchg cmpsl or cmp add xchg fwait add (bad) inc add xchg jg rcrb arpl xchg icebp je pop jp xchg mov or fisttpl pop cmpsl loop mov cmc fiaddl sub mov lea and mov cli out test adc dec mov add dec xchg hlt mov push popa and leave repz fsubl movsb mov push xchg in and out jae push (bad) or sar stos sbb mov dec cmp loope cmpsl pop jne xor mov insb xchg test and xor dec cmp jno or add stos or (bad) mov xchg fmull adc mov jmp aam in adc jge or lret push shlb dec test gs aaa add push mov add stos mov call lea hlt push sbb dec sbb lret xor nop and cmpsb imul pop (bad) call fisubrl out (bad) sbb (bad) fstpt or sahf cld mov inc cli cmc sbb xchg mov mov add scas xlat stos test adc push inc ret (bad) or and mov jg adc and cli jmp faddp pushf jecxz leave ds adc pop inc cs mulb jle jp xor iret jg shll mov sub mov shr stos push mov and lret mov jge stc je lret call dec push inc xchg lods push cvtdq2ps js call sbb jo push out cwtl in shrb pusha and sti addr16 xchg mov in cmp inc sbb mov jb cmp cltd lret ljmp ja mov lahf and or pop out mov inc ss and mov pushf add push jl orl xchg add xor cmpsb lods (bad) fucomi jg add imul jae hlt push popa push push pmaddwd (bad) adc fnstenv bound imul sbb pop cli and lods clc fidivl adc add sub lcall (bad) jns mov fstp es xchg mov out scas adc cmp test data16 inc mov mov out dec mov (bad) insl rclb xlat jno movsb pushf rorl lods test mov push mov adc push repz adc repnz mov sbb out pop ljmp les notb xchg mov gs sarl mov adc (bad) lock call push xor aam sbb xor fs sub and jecxz add jle,pt sbb and inc lret loop fadds pop sbb outsb in mov inc lahf inc stc add add xlat sets push insb push jg pop (bad) mov pop push cmp mov lret int3 je stc sub call mov bound push sbb (bad) pop (bad) push dec xchg std xchg lcall cmp pop push inc cli and icebp stos and movsl add bound and (bad) xor add push dec test lcall ret enter jp mov cs xor popw movsb lods nop dec cld cmp sub inc test inc mov ds stos pop sub int adc inc mov pop xor ds push and xchg inc mov and mov jae cmc fst pop and xchg and call push mov ret pop jne xchg inc bound loope test sub mov mov mov aad stos sbb add outsb adc push outsb mov insl xchg imul xchg pop aaa lds cld ror dec sti dec mov (bad) mov pushl or xchg add push xor cmpsb push out out pop push lods adc lock sub jb jb icebp mov mov xchg xlat loopne outsb cmpsb and push movsb setae cmpsb dec out popf push add adc ds push adc adc ss cwtl repz sbb adc cmp insb mov scas ss jmp push cmp xor adc jae int3 sbb cmp subl jmp push fistp lret imul cmc xlat test and add lods ja push xchg out sub daa pusha stc xchg sahf or jl mov shrb pop sbb (bad) cli or leave push rcl dec adc inc fisubl stos xor and or sub mov mov movsb dec pop enter mov fs incb lea into into mov sbb (bad) pop dec adc add mov out cmp aad push inc mov jb cmp mov inc jnp mov mov stos xchg mov xchg sbbl ss add ja adc jb dec test mov mov mov sub xchg and jecxz cmpsb sub aad test punpckhwd ljmp dec push sbb sub loope clc xchg lret and add dec ljmp in pop and jo clc dec and pop es shr hlt cmp adc scas xchg push movsl push (bad) xchg invd mov add mov dec movsl hlt in inc lret test stc into mov pop cmp lods imul xchg (bad) jb (bad) adc pop sub das or (bad) in ret push dec mov pop (bad) loope ljmp xchg rcll or in mov pop sbb jb mov int (bad) mov or rorl mov add lret iret pop jecxz popf mov into sub inc stc and leave leave sub push add jl,pt bound add roll sbb incb in lcall or imul sbb leave fcompl pushf cmp mov adc mov outsl sbb ret dec sub mov sti rcrb mov mov je jle insl rclb xchg shl xchg loop mov (bad) (bad) leave out xor (bad) adc lea icebp ret fucom test mull jo je out or jmp cmp sahf sub sub ljmp push fidivr mov test movsb cmp fbld xchg (bad) iret (bad) push inc (bad) iret fwait sub lds jmp push aaa sub iret ja insl xor mov pusha xor jbe repnz mov xlat pop out fldcw mov mov mov int in icebp shrb arpl push cs leave sub dec iret jnp push dec jmp ret adc decl pop mov fcompl push arpl ss add mov in movsl incl push aaa hlt pop cmp (bad) movsb addr16 clc pushf movsl in loope iret mov bound add sbb jecxz or rcrb dec sub test jb leave in cs inc (bad) ret fs or jp sub imul pop fbstp ret daa fmul cmpsb pop xlat dec mov pop (bad) mov stc jno es push and cmp push addl jnp cs sub int repz enter adc jbe jl xor pusha adc jg xchg ss insl and adc jae push je out mov call mov add xchg lock sub xchg movsb mov testl pop in data16 and mov pop sbb cmpsl mov cwtl or or sub cmp rclb (bad) push cmc pop mov jle addr16 sub mov clc adc sub and jb stc (bad) daa mov (bad) in sarb and add in push pop ljmp xor std (bad) jmp add xor loop adc in scas hlt cmpsb popa dec ret (bad) cmp fdivs sub imul pushf mov pop inc subl aam ja lahf rcr inc mov addl lret mov or push sbb aas int sar lods in sbb rclb xchg rcrl lret push out xchg mov mov and xor les stos pop mov push sub pusha imul mov insl cmpsl push popa das repnz or inc jne jle push xchg xchg mov fldt popa jle jnp test iret and movsl mov cmp loopne or pop out fisubl mov iret inc cmpsb stos mov shr add lock in pusha or mov out xchg pop imul popa mov dec mov jae sub test xchg pop or add or adc aad ret stos dec mov push and xor cmp inc ljmp sub pop dec add xchg lds test in sbb add xchg jne inc inc mov (bad) (bad) stc std andb pusha cmp js andnps dec movsb ja pop jo sbb adc aaa call lret mov into es std out sbb (bad) stc pop out and imul out movsl dec mov ja cmc ss xchg (bad) adc sti jnp (bad) mov repnz adc outsb xlat pop sbb push sahf enter lret jb rep cmp push xor pop call fisub xor add push or fstpl sbb fstpt cwtl jp cmp xchg loop mov sub cmp mov pop cmp push jg mov enter pop arpl fisttp mov or (bad) mov push cmpsb dec testl (bad) xor sbb movsl pop repz push pop push test ficompl mov fwait pop or push and cmp divb cwtl or pop fild adc jne in fstps pop cli push addr16 jo (bad) xchg (bad) mov pop inc pop mov imul clc in inc (bad) xor push popa addr16 lcall out in fild mov leave outsl into xchg push xchg (bad) leave rcrl dec mov (bad) sahf cmpsl push pusha int3 sbb and aaa dec sbb inc (bad) lods adc (bad) xor repnz jnp xacquire imul dec aaa les pop lahf xchg inc lret inc mov (bad) ret or jbe rcll lods and orl dec sti (bad) xor mov mov scas sub and mov cs push cmp cmp and fdivrl sbb xchg jbe out test mov pop inc mov pushf in mov cmp (bad) cmc cmc push cli test lcall test or dec xor jecxz loopne int3 clc lock add xlat mov add mov push nop mov pop xchg pop and cmp lds out xor fmulp addr16 lds (bad) enter mov push mov cmpsb loope mov pop mov (bad) arpl fimull mov sbb je mov loopne lahf pop mov divl dec movsb sub and (bad) cmp adc lea sahf jbe pop daa push and lds sti dec in daa push int jg je imul clc sub call faddl js pushf sbb add xor mov (bad) mov jg shlb sub iret fistp (bad) rcl adc cmpsb movsl fisubl lret enter cwtl sub push (bad) lret inc cld push jecxz xchg sub add lock xchg cltd mov in adc scas sbb inc shrb mov and movsb pop subl jns cmp inc pop jb ljmp cs addb imul sti and jbe mov or clc mov mov jl add push jecxz mov cmpsl call ljmp mov ljmp ret inc mov mov sub pop and xchg jns ljmp mov mov and xor sbb nop mov mov mov pop mov imul fwait pop push subl aas imul sub inc sub test xor enter scas test pushf shrb and ret inc cld popa js xor sub adc sub loopne (bad) in lock movsl aam in jmp sub int3 xor mov jecxz mov shr dec test mov lcall (bad) loopne jns daa dec jno je out in sbb or out stc add jg int3 rorl mov movsb lret push xchg fmuls sahf mov (bad) lods adc cmp out xor sbb loop or add dec out adc and ss mov adc popf push imul test loopne mov fidivrl mov xlat xchg fidiv jns xchg insb test lods call (bad) daa pop xor push add (bad) mov test xchg xchg mov xchg xchg stos sarl jns andl pop xor jl std mov dec jecxz lret pop sti adc sub push sarb insb fadds adc adc jo test or cmc mov cmpb push std push cmp mov (bad) inc xchg push popf movaps mov cmpsb das mov and xchg sbb dec icebp jle push daa pop fisttp loopne mov xchg push int ss sbb ret lods addr16 lock sub imul sub (bad) aas test xchg bound mov gs jge jmp (bad) incb imull mov jg inc push enter (bad) or mov iret jg (bad) loope dec xchg adc xchg mov dec sbb mov out adc sbb and cli mov cs loope fldl aam jecxz in ficomp lock inc push leave cmp push pop xorl dec cmpsl adc push stc sub scas fmull mov dec mov cmpsb scas or into ffreep and xchg out mov cmp leave or dec adc gs test jle push xchg call movsl dec and out enter in jl in add adc cld pop arpl add xor (bad) and sar push popa sbb xor nop dec fisttpll or jl xor and in cmp pop lods int3 mov inc cmp sub out pop push inc jge fcom inc sbb hlt xor roll or jge mov sub dec fldl shrl pop (bad) jae movsl and xchg mov pop std or popa cmp dec dec ss pop lods popa fiadd pop adc xchg adc fs mov jbe push jg mov push aad std int3 mov inc mov out ret adc cmp and fdivs das repnz push ja decb jl mov xchg xor inc adc lods push inc sub movsb inc js addl test cmpsl outsl mov stos addr16 dec fs xchg inc mov cmp mov inc cmpsl fidivr jbe pop adc jge mov rol mov sub dec pushf std cmp (bad) (bad) jae cmpsl sub rcrl sbbl je loop,pn xchg ja addb dec clc (bad) cli mov inc js jns cmc fstpt rcl imul mov lret lret mov addr16 cltd xchg imul xor mov shrd movb popa stc movsb fwait sub or xchg pusha loop repnz mov inc jb popf cmp sub push cmp sub jg dec add pop fwait pop fsubs in int das aas xor test xor in mov jecxz cmp xchg test cs lods pop (bad) popa cmp cld xor inc adc lret in sbb cmpsl mov pop mov jl in mov or scas push fbstp stos imul cmp aad pop pop in dec push xor dec cwtl lods cmp sub jnp sub fistpll jge pop mov insb jge jle loopne insb xchg or push aam sarb lds adc sub pop adc lods hlt jg inc lret ficom outsl or xorb cmc sub aad and dec mov inc and mov rcrb xchg int jmp mov imul lock lahf insl stos in pop mov sub mov inc movsl rorb sbb mulb or clc out std cltd mov push cs pusha jnp or into mov ljmp mov push xchg xor xchg pop lret jbe daa mov shll loopne cs add pop jge leave and xor xchg and mov adc jmp in cmpsl lret push add and cmp mov ljmp enter imul rcrl insb inc push repz and (bad) aas jo cmp addb popa (bad) cli xlat dec nop xorl fiaddl and nop xor aaa add sbbl inc enter pop (bad) scas sti cld mov sub andb mov (bad) fmull dec jae sub pop cmp insl inc fwait dec pop jno pop outsb orl sub ja punpckhdq clc cmpl cmp (bad) cmc sub push imul add inc ret mov test cmpsb mov iret cmp fs imul mov les je xchg or dec mov lods sub leave and mov and lret mov aas std das jae je (bad) mov fistl shrb and mov icebp fsubr add mov in lds xor scas out xor inc adc lock jo daa push int lods mov push shrl rorb loopne stos pop repnz daa mov pop mov xor or push push vmulpd aas jp pop ret add pop js jg ror out xor lds push (bad) push dec out sti or push pushl int jge lcall stos aas das outsl mov mov pop cltd aam lock or sbb inc push xor icebp or leave or jmp pusha ds dec adc mov hlt inc push cld push outsl es push add push loopne xor push idiv pop or (bad) inc and push or fucomi cmp mov pop adc lock add ljmp pushf jo sbb mov data16 inc ja dec pop inc xchg (bad) pushf jle and and xchg jge inc setg push mov aas test addr16 jnp repnz shrl push cmp and pop pop rcrb popa xchg adc rcll in pop ja and add mov out mov jl xchg repnz mov cmc rcrb adc jb sarb mov fidivr adcl adc mov cld cmp rcll mov cmp xor sbb add sbb faddp mov mov cmc into adc and xchg daa dec inc push ret shlb std hlt in scas mov dec jl pop (bad) push mov leave dec ret ret cmpsb push mov push pop in mov out add and imul (bad) movb lea out out and (bad) (bad) mov mov (bad) and mov xchg lea pop or add mov adc sarl cmc cmp inc xor ss cwtl inc mov mov or cwtl push movsb in sub icebp adc pushf ds mov inc lea (bad) cmp push add scas cmp sub icebp popa xchg xchg pushf add leave pusha push jne ret jb (bad) je xchg inc sub mov aad int pop mov shlb inc sti add into sub test or cmpsl sub jg clc jmp xor ret negb mov push mov cltd push iret (bad) adc jle cmpsl pop jle sub nop add (bad) jbe inc or sub cwtl enter faddl mov jmp test sti dec mov push push (bad) fs xor push lret lret aad mov addl das pop hlt ds int xor inc iret loope add mov mov outsb std leave lcall test push push mov fsubrl scas outsl sbb arpl imul mov data16 sbb test icebp sub xor xor icebp cld lahf dec push jecxz xchg cwtl imul pop dec das ror or xchg push in in lret nop aam lret push lods daa jno add xchg ljmp fildll dec mov (bad) push mov push or iret inc add lret andl mov push stos test mov sbb xchg leave adc push mov frstpm(287 mov addr16 out or jne sub divl add loopne mov fldt (bad) aam movsb cwtl pusha inc arpl mov pop push out cld xor push xchg push outsl dec push lcall decb (bad) pop pushf sub adc sahf xchg popa adc imul mov es into fdivs mov xchg cmp aam pushf hlt sbb mov fs pop (bad) icebp jnp std fstps xchg loope xchg outsb adc push inc test rclb or outsb outsb ja fstl scas dec xchg jns xor pop jnp mov sub fwait neg mov inc repz mov daa jle stos sbb cmp push lret push adc mov scas mov mov je xchg aad lcall hlt jo sub push push call or dec inc cld pop xor push int or sbb add jmp repz popa fstps lret test iret into xchg xchg gs cmp jl jno jecxz mov ja leave pop daa movsl out gs icebp pop cltd mov and mov adc in out jns and addr16 xchg cmp sub push mov lock jno pop push mov daa jle mov mov mov inc iret sub pop sbb (bad) sbb push xor mov outsl xchg push out daa call daa cs out stos mov mov inc and repnz push andb xor add (bad) aaa fsubr cmp das cli cwtl jl push push dec lcall push sbb movsb push add rclb xor jnp mov dec inc aaa mov xchg push inc jne popf andl lcall sbb add sub daa adc fld out sbb aam xchg push idiv lds movsb dec jge sbb xchg aas dec aaa jmp (bad) (bad) sbb jp insl js lds popa sbb add stc mov mov out rcrl jg push sbb sbb mov dec dec scas xor hlt scas imul pop dec das push mov pop sbb push (bad) fld mov scas fildll fwait insl push xchg out sub sarb clc and xlat dec adc xchg and sub inc cmp lea mov jae mov jle pop sub ja and sub lret pop sbb call jno jno mov insb iret xor xor cmpb push xchg jnp (bad) sbb mov mov jl xor daa mov idivl int dec in (bad) ljmp cmp push bound (bad) fcmovbe mov (bad) xchg mov outsl mov lods push mov bound ljmp idivl cli sbb sbb cmp mov mov cs (bad) je lods pusha fbld addr16 rol inc push jae fstps mov std push mov pop xchg mov stos sub pop stc in imul pop fisubl mov jno lret movsl scas cmp xchg sub (bad) in fmul cmp int fnsetpm(287 and inc push sub mov imul pop inc add or dec lahf pop or sbb jbe incb lcall add js add call mov fstp jbe in cmpsl stos movsl xchg push lods pushf insb mov (bad) push push test xchg or sbb dec ljmp das fwait clc adc hlt sub push loope xor jno ss mov ss xor int jmp aad or xchg cmp push sbbl cwtl xor (bad) cmpsb (bad) xrelease mov dec push loope pop mov lret xor jne popa mov cwtl mov cli mov lahf aad sbb cli jp aaa sbb mov cli insb mov cmp ret push stos xchg mov xchg stos mov es arpl pop lds scas ljmp ret xor xchg mov aad xor pop mov mov xor leave mov lahf xchg pop lret faddl xchg mov mov and push decl (bad) clc cmp push sbb jne aad adc arpl out jge int3 cmc imul push fcomp push add js das gs cmp jmp (bad) icebp rolb or or (bad) (bad) xlat cmp dec mov xchg and js js pop jne xor jg int sub out (bad) or mov add dec adc (bad) or popa nop push dec jbe sub push daa outsb xor add xchg mov push jge xchg lea and mov xor mov pop pop adc in sub jecxz popa lret (bad) movhps jle adc inc dec sbb dec iret js je mov les stos mul dec testb cwtl sub outsl push sbb lahf mov call xchg sub aad stc adc mov jne in daa js push es mov ret movsl lods push xchg iret rcll mov (bad) xlat pop inc enter push sub (bad) mov test xchg hlt mov ret pop mov ds and js shll jl jp cmp cmpsb lock mov fs sub mov stc in lea jle jmp push outsl mov sbb leave in dec push jne push inc lods sahf je jno (bad) and out (bad) dec add int fistpll stos test imul jno rcll xor push ds pop cmp scas js lock adc mov add pop outsl and xchg nop inc push (bad) lret enter test ret cmp xchg adc icebp inc out sub sub ljmp pop sub jnp sbb leave sbb dec push out xor pop mov cmc xchg xor and cmp jno jnp push dec xchg mov xor or mov mov (bad) loope and cmp les lock pop mov push push int3 leave repnz pop jnp jp int and jns and (bad) jl or mov dec pop test cmp (bad) rolb arpl pxor es clc add out clc inc xlat sub mov les call xlat xchg pop pop xchg inc inc mov popf lret in push mov xor cli adc (bad) mov pop cmp sbb and xchg (bad) call pop add movsl dec pop xor bound and and test add cmpsb sub stos rcl fsubs addl in mov lcall dec add mov test or nop dec mov outsb sbb pop sub dec xchg dec pusha bound xor shrb sbb into pop or mov (bad) ret jns mov lods int fmul adc push pop mov xchg lret cmpsl adc fbld jo adc cld (bad) pushf jp xchg push adc ret cwtl dec mov test loope nop pop iret outsl shl sbb push inc mov jo or (bad) gs pop movsl sub xor movsl jno sbb clc cmc jg mov add pusha lds push push jmp imul (bad) mov stos loop loop dec and (bad) adc sub roll push sbb mov jp add in out dec push and jp test cmpsb imul dec repnz insb xor sti stc jmp sub and fildll xchg mov ret enter dec aad negb xchg out (bad) fnsave outsl cltd sbb sub jmp sbb adc fwait and es push call fs and xchg jno lods pushf xor fidivr push adc sarb enter xchg and inc sbb mov or and test fbstp mov iret loope xor bound or push rcrb push jg mov test (bad) daa xor daa (bad) nop gs mov ljmp jmp mov negl js dec xchg cvtpi2ps aaa call in popf lret inc pop xor jle fldt pop inc dec jns dec adc into xchg int3 push inc bound add jnp ss push cmp jo scas js sbb rcll xchg dec sub addr16 pop sahf add dec or adc out shrb outsb push cmp mov dec in jg and das adc dec mov int3 and jmp xor pop lcall cwtl out (bad) std dec test in aas cmp mov mov adc out jmp outsl (bad) dec cmp add xchg or mov ljmp pop mov jnp adc out pop out jno es mov sbb pushfw (bad) int3 jnp jo daa mov jg lret push add iret rcll fiaddl mov mov jp sub and cmp mov cmp jae stos cmpsl jae adc js dec pop inc xor sti rclb sub fist scas inc outsl xchg lds lcall jp fstl jbe jg mov jg push xchg stc jb inc mov cli pushf sbb or mov lahf xor out mov jo test mov shrl rcrl into mov sti and xor xchg inc sub fistl jae mov adc andl scas es pop mov sbb out or and pop sbb sub mov mov jbe cld fwait and push mov addr16 push inc xchg sbb push out push xchg add push cs mov inc int3 adc xchg mov mov inc fcmovb sub lahf aad lcall fmuls nop bnd je mov jmp and or sub aas and mov stc fdivl jno icebp mov mov xchg cwtl pop rcll sub mov jae mov int3 addr16 xorl test aad loop jbe iret cltd lcall out and mov sub mov movsbl je sub arpl adc xchg clc mull incl rorl add (bad) hlt ds inc push jbe or jne mov jb xor arpl mov mov call pusha or imul xor pop adc stos ret (bad) mov push mov addr16 inc mov mov shll inc mov pop jle xchg xchg inc (bad) (bad) dec jo shlb xor clc test add sbb into xrelease and loope xchg jb (bad) dec and sub in dec lds stc adc out push gs jno scas jo inc dec adc or pop in jg ficoml in out add (bad) and pop (bad) mov adc jae adc xchg xor cli fcompl aad xchg inc ret (bad) int cwtl aaa xchg dec fisub lea imul pop xchg mov pop and mov mov mov mov stc cmp add scas mov and outsl dec cmc bound pop cmpsb cwtl jmp decl pop inc (bad) pop adc xor cmpsl and and (bad) mov push loopne js ret xchg (bad) xchg cmpsl cmpsl scas dec sbbl hlt cltd cld subl fsubl es xor adc fsubl aam sbb inc pop cmp add mov aam sarb lret pop cmpsb (bad) insl nop daa out cmpl aaa (bad) gs inc out sti xor push or dec call cld int inc xchg mov ja push fld cmpsb data16 pop insl leave sbb dec jb ror push jecxz (bad) or mov and aaa jl (bad) mov movsb push dec das mov sbb mov iret (bad) lret push scas js outsb dec lret clc mulw popa aaa push xor xchg jl dec fld jb push shlb push cmp adc add or jae popa repnz roll mov (bad) sti jns xchg or loop hlt inc push mov sbb dec mov out popa sbb sbb sbb int3 clc pop mov movl mov out and mov insl push arpl insb jg arpl sbb xchg sbb jne jnp sbb push inc cmpsl rorb add shll ja jge pop mov jo aam sub outsl loop push cmp int frstor imul mov enter out add pop inc pop push and mov inc sbb xlat mov arpl inc add adc addr16 inc sub jecxz lret fwait les mov iret xchg cld dec les addl icebp adc scas push rcrl xlat dec and outsb clc ljmp or pop pop fwait (bad) add (bad) pop adc push repz or dec pop iret je lods scas jne push mov repz sub push pop pop stos in add jns cltd xchg dec imul sbb push xchg sub (bad) ficom adc and mov dec clc out popf leave enter testl xchg popa aas mov mov or popf xor push add push out loop ljmp lahf pop add (bad) fiaddl and xor (bad) ficoml xor insl cmc nop aaa xchg xchg scas int3 loopne xchg mov xchg test mov mov jns mov movsl jp mov loop cmp lods jp mov repnz incb pop insb mov xchg push sbb jno xchg adc mov lret (bad) mov popf and or loop fisub dec mov jbe jnp cwtl fist pop pop cmpsl jg test sar lret pop mov std dec mov ja cld movsb xor jl lcall popa adc sub lea pop xchg pop testl mov hlt (bad) xchg xchg pop pop or iret mov lret (bad) and subb adc or (bad) xchg leave mov and cmc sahf call fbld dec or cli xor xor xchg loop aam adc jge sti int3 repz lods xchg shlb movsb jl adc enter mov dec mov dec stos repnz test mov inc fcoms cwtl cmpsb (bad) fidivr ret cmp test mov pop (bad) pop pop cld jmp outsl out mov and rorb lea or aam dec and lods ja lea je jns mov insl push mov jo xchg insb subl in or mov not mov sahf movsb push jecxz out mov arpl int3 pop pop sarl or test jl (bad) dec mov stos or and (bad) loop sub lahf icebp hlt and jno jae cld repz mov jecxz or sbb neg je xchg (bad) roll loop (bad) aam jmp sub rcrb xor call nop mov inc aam lahf push out jl ja aaa inc jp test arpl repnz cmp outsl insb dec xchg mov xchg pop shrb xchg mov scas lock ds out mov pop or movsl in sbb mov push pop push push xor inc push (bad) leave jle xor sub or mov pop pop adc and popa data16 jecxz dec sub pop in pop outsl pop or aad fxch or add dec mov push out movsb frstor ffreep push stc fidivrl xchg or aaa movb push pop dec dec fwait jmp inc loop inc cmpsl or fwait cmp jne adc mov dec jle mov imul push pop jno sarl jg jecxz hlt in stos jns test mov jecxz add push roll push bnd xor xor rcl and imul pop (bad) hlt pusha push arpl scas sub pop stc xchg jl adc inc (bad) lahf or out mov jne fistpl pop clc add ret test into in ret mov adc and add xor jecxz jb in cmp sub loope inc lods pop outsl mov cli aaa dec sbb push test insl cmp add dec cmc (bad) jecxz int3 imul or xor pop sti mov mov xor aas jne negl nop pop or (bad) (bad) sarb clc or cmpl lea dec or mulb cs fldt sub mov pop mov test test sub jnp adc cltd push clc loopne js push or xchg aad test mov sbb leave push xchg movsl jbe dec in test push out cmpsb dec repz scas mov push or hlt add cltd mov gs jne call push cmp les jle or cmp js in test jno call stos int3 mov and xor xor push jbe out jbe sub lret addr16 fsubrl scas mov xor mov in push ljmp push sbb adc out in call les movsb lea push cmpl dec sub inc popa dec add loopne mov nop mov std inc xabort cmp dec addb xchg jl test popf out xchg or cmpsl add push outsl or fld1 inc cmc pop add mov push imul rcll repnz adcl and aaa fildl add push gs jnp mov movsl fimull je sbb cmpsb incb xor insb jp or fild mov xor xchg mov outsl sbb pusha jecxz mov adc push loop or pop cwtl andl loop dec shlb mov pop sbb sbb jle push mov jne push add (bad) sub aam loopne and sahf add repz hlt sub mov cld push jge mov outsl test (bad) mov sub (bad) test stc dec mov add mov dec les pop dec add pop adc xchg icebp sbb arpl push into adc into adc int gs jno cmp data16 ja imul test pop stc dec push cmp dec pop sub cmp mov fwait dec fiaddl enter cli movhps ljmp xchg pop xchg adc sti sbb xor sbb in fs and sub jg mov fnop jg icebp je jne rol std xchg xor std cmpsb push das in sar push jg iret subl cmpsb inc sar jg mov pusha pop pop mov pop xchg (bad) hlt pop jecxz fstpl mov je test sti mov xchg jns gs pushf pop or test in imul fwait inc cmc orl cmp xchg mov clc mov dec add aam popf cmp popf sub sbb scas push pop dec les fbstp add cmp ret jge rolb xchg lret add jecxz mov add add push or sub mov in push xchg dec outsb or daa mov (bad) fimul xchg mov stos fdivl js mov lock icebp lgs mov das mov dec cmp mov mov popf (bad) mov jl xchg scas fisttpll dec mov ja pop addr16 sar test pop pop jo sbb (bad) jno pop jecxz nop (bad) mov cmp outsb mov inc inc jb xchg mov inc mov les pop (bad) xor adc aad stos dec lret into (bad) sub mov push pop sbb cmp test fldenv inc or hlt addr16 mov cmpsl loopne xchg dec pusha add popf aad iret hlt mov cmp pop popa or cli aas ljmp sub add loop sub sbb insb loope push or inc repz fmuls pushf fsubs fisttp nop mov popa iret sbb out leave and (bad) fstpt jb inc cltd mov popf jg pop lcall hlt fisttpll cmp test es xor movsb js jp aas cltd xor addl std imul rol pop push scas pop int3 xchg in outsl pop out and imulb dec aas (bad) stos pushf jecxz aaa daa push fwait imul or cs jae jb adc loop adc (bad) loop sbb fstenv xchg addb lods push aas xor nop (bad) dec in (bad) (bad) lock stos inc sub push insb test push cwtl pop cli cltd popf call enter sbb add jne add cmp xor sti xor fiadd enter call xchg mov or mov mov (bad) aaa vmovdqu data16 and lcall je sub mov xchg sub mov (bad) stos setnp subl mov loop leave (bad) adc pop fbld inc sub mov jp push into movb and aaa int ds xchg shll lods xor imull or and sbb or xchg adc (bad) jbe inc push repnz mov mov add mov fwait repz enter das mov mov aas clc loopne jmp push idivl fstpl push sub outsb mov sub mov fs sbb and paddb test lods outsl and pop cli add ljmp call fstl inc pop dec lret add fisubl add outsb jl rol add cld push fcom subb sbb cmpsb mov mov lods xchg in xchg insb ss cmp cmp out mov dec cmp fs or cmovp scas test adc lock dec imul loopne mov inc xor xor or (bad) adc add push shlb (bad) mov outsl sbb mov sbb insl out std mov sub mov add loop push mov pop fsubl les mov (bad) inc ret jmp test and jmp stos in ss adc movsb daa mov and pop ljmp (bad) ficomp outsl fistp insb repnz sub pop lds sar mov mov gs inc add mov sahf fcoml es mov mov dec outsl pop imul arpl xor and stc daa (bad) xor test popa add std leave arpl mov xor jne cmp inc mov or xor sbb in mov ds (bad) mov cmp je add dec add xor jbe stos out fldenv xlat pushf xchg lods add movsb incl test dec sti dec stc in cmp adc pop cli stc push outsl cmp inc cs dec xchg adcl test pop adc addb and in and or in je in cmpl je aas movsl in adc dec lods ficom cmpsb dec arpl (bad) mov add mov pop stos or push shr pop aas add xor in inc (bad) pop dec stos pop js in push in aaa pop sbb or enter mov lods iret lods in ss leave idiv adc icebp xchg icebp aam dec out je lcall mov sti jg cs xchg stos jno mov xor aas repz push packsswb mov js arpl sbb dec mov ljmp (bad) sub lahf jns out out leave (bad) adc xor dec push mov out mov mov ja adc (bad) fcomp jae nop jp mov lds pushf popf dec outsb cmp inc jl dec mov push mov push and cltd insb loop xchg sbb pop and fbstp jbe jbe sub ljmp nop enter (bad) fs iret pop lds loope fisttp cwtl dec inc xchg hlt (bad) push das mov ss cltd add add cmpsl in dec sbb movsb dec movsb enter nop popf xor xchg cmp inc mov call adc cli int3 mov mov scas sub xchg das xlat xchg sahf cld jmp cs pushaw mov inc lods dec sbb inc stos dec and outsb subl faddp dec leave and mov push jae (bad) out push push jns cmp mov inc nop xorl int3 and jb fwait mov dec pusha or repz push and fldl bound outsl lods xchg lds out out cmp dec dec nop dec push pushf or repnz or (bad) (bad) jmp adc and ret inc das cltd lcall outsb arpl aas add bound jb repz jne jns rcr xor loopne cmp fstl pop and mov dec sub jns push push js orb mov pop mov scas call ss cmp shr cmc iret xchg fsts xor inc in aaa enter test xchg push push adc (bad) repnz sbb je mov xchg and es pushf xchg pop jo xor inc inc repnz into xchg and push jp (bad) mov jge dec stos xor jl sbb sub mov ds out xchg sub dec cmp xor cmp push outsb repnz lea test dec hlt adc imul gs sbb pop jbe (bad) push push das mov xlat inc xor adc mov jmp inc xlat dec or hlt jge mov lret je mov mov outsl inc cmp push fnop ds repz inc stos (bad) stos (bad) push mov ficom sbb xorl hlt outsl leave iret outsl or stos testb push sarb cs je xor sarl pop mov ret leave or ret jae movsl clc test inc in push jnp loop sarl hlt xchg stos lcall mov arpl lret sub loop cmp push les loopne ds lock mov rcll scas xchg sahf cmpsb push mov (bad) pop or in fnop insl inc sbb inc mov lods movsl lret xor (bad) cmc mov pop es mov (bad) sbb mov inc cmc das pop lret add or pushf enter out shll push mov int inc gs mov negb aas in add xorl shl cmpsb mov call lds lcall js xor cs aas fs cmp pop stc out mull pop adc in cwtl sbb jno pop mov sbb xchg cmp jne push js imul xacquire push call pop out test bnd push jne into mov dec out cs dec push jne in xchg push addr16 out and clc push push cmp inc jmp arpl dec ds or sbb cltd out mov lcall fnstcw int3 inc mov inc std sbb lcall and pushl (bad) leave rclb mov xchg hlt int3 jmp or jmp sub sub loope xor add loopne push pop aad cwtl hlt xor dec data16 sbb add jmp jle cmpsl sub xor test das into sti stc mov stos (bad) sub daa push (bad) xor jns lods and lret xchg sub mov lret and push test push sbb sbb (bad) mov dec xor push push cmp pop mov push mov and shlb sub dec out xchg hlt fmul xchg mulb fyl2xp1 mov out aaa arpl test (bad) or add dec in incb minss mov jb mov mov inc sti pop loopne mov je adc mov ljmp pop cmp jbe cli mov fdivrs or fdivrs popf pop nop rcl jo mov ja jle (bad) leave xor repnz dec pop addr16 jle cs cmp sub fbstp push aaa jo rorl jne lods or add pop xlat pandn jp pop push mul nop mov adc mov pop push in adc and and jle cli jle iret hlt sbb fs loope pop xchg mov test xchg lret incl cmp roll addr16 call in loope (bad) adc cwtl popa push addr16 push loope (bad) or mov (bad) arpl addr16 push out es pop fisttpll dec cmpsb xchg int mov and jo js push dec sub cmpsb movb scas fadds cld cs mov sub xor (bad) mov sbb pop xor sahf pusha mov outsl and imul or dec daa dec adc repz or sub sahf rorl fdivrs push pop push xlat loop mov add int3 stos divb not insb dec das inc xchg xor gs movsl xchg sub inc leave out je ja xor aaa xor fidivrl loope mov sbb lock push pop push rorb repz cmp jge lret mov mov shll cwtl ret push pop lods xchg cmpsl mov test out out dec lock add pusha mov lea push mov lea xor push cmp jne inc inc push push push add push push push add push push movl nop nop nop nop nop push push push push sub mov movl movb mov lea mov mov movzbl mov shl mov dec mov movzbl shl dec mov mov movzbl movl movl movl mov mov movl movl movl movl movzbl add shl lea cmp jae mov movw add loop mov xor movl mov add mov xor cmp je movzbl shl inc inc or cmp jle mov cmp jae mov and mov mov shl mov add cmpl lea ja cmp je shll movzbl shl inc or mov mov shr movzwl imul cmp jae mov mov sub mov sar mov lea movzbl mov mov and mov shl mov sub sar add imul cmpl lea mov jle mov sub mov movzbl mov shll mov lea mov and cmpl lea mov lea ja cmp je shll movzbl shl inc or mov mov shr movzwl imul cmp jae mov mov sub mov sar cmpl lea mov je jmp sub sub mov lea shr sub cmpl mov je cmp jle jmp cmp jg lea mov add cmpl ja cmp je shll movzbl shl inc or mov mov shr movzwl imul cmp jae mov mov sub mov sar lea mov jmp sub sub mov lea shr sub mov jmp mov mov mov mov mov inc cmpl mov jg movl jmp cmpl jg subl jmp subl jmp mov sub mov sub mov shr sub cmp mov mov lea mov ja cmp je movzbl shl shl inc or mov mov shr mov movzwl imul cmp jae mov mov sub mov sar mov lea mov mov mov mov mov mov mov xor cmpl setg add lea mov jmp mov sub sub mov shr mov sub cmp mov ja cmp je movzbl shl shl inc or mov mov shr mov movzwl imul cmp jae mov mov sub movl mov sar lea mov mov mov mov shl add cmp lea ja cmp je movzbl shl shl inc or mov mov shr movzwl imul cmp jae sub sarl mov mov cmpl lea mov je xor cmpl mov mov setg lea mov mov sub mov mov mov inc mov jmp sub sub mov shr sub mov jmp mov sub shr mov sub sub cmp mov ja cmp je movzbl shl shl inc or mov mov shr mov movzwl imul cmp jae mov mov sub mov sar lea mov mov jmp mov sub sub mov shr sub mov cmp mov ja cmp je movzbl shl shl inc or mov mov shr mov movzwl imul cmp jae mov mov sub mov sar lea mov mov jmp mov sub sub mov shr sub mov mov mov mov mov mov mov mov mov mov xor cmpl mov setg add lea mov cmp ja cmp je movzbl shl shl inc or mov mov shr movzwl imul cmp jae mov mov sub shll sar movl lea mov mov lea mov jmp sub sub mov shr sub cmp mov ja cmp je movzbl shl shl inc or mov mov shr movzwl imul cmp jae mov mov sub shll sar movl lea mov mov lea mov movl jmp sub sub mov mov shr movl sub movl mov add mov mov mov mov lea mov add cmpl ja cmp je shll movzbl shl inc or mov mov shr movzwl imul cmp jae mov mov sub sar lea mov mov jmp sub sub mov shr sub mov lea mov dec mov jne mov mov shl sub add cmpl mov jg addl cmp mov jle mov mov shl movl lea mov mov lea mov add cmpl ja cmp je shll movzbl shl inc or mov mov shr movzwl imul cmp jae mov mov sub sar lea mov mov jmp sub sub mov shr sub lea mov mov dec mov jne lea cmp mov jle mov mov sar and lea or cmp mov jg mov shl add mov lea sub add mov jmp lea cmpl ja cmp je shll movzbl shl inc or shrl add cmp jb sub or dec jne mov shl mov add movl mov movl mov mov add mov add cmpl ja cmp je shll movzbl shl inc or mov mov shr movzwl imul cmp jae mov mov sub sar lea mov mov jmp sub sub mov shr sub mov mov mov inc or mov shll dec mov jne mov inc mov je mov mov add cmp ja mov mov sub add lea mov inc mov mov inc incl dec je mov cmp jb jmp mov cmp jb cmpl ja cmp mov je jmp mov jmp inc sub xor mov mov mov mov mov add pop pop pop pop add add xor lea mov push cmp jne mov xor pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov jns movzwl inc push inc mov push call or je mov add jmp call mov lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp add add movsb xor inc adc add add add add add add add add sub add mov add add add addb add add add add add add or add add js add mov add add add addb add add addb add inc add addb add push add add add add add add add add add add add nop add add add add add add add add add add add add mov add add in add add add add add add add loopne add test add test add in add add add add add add add or add xor add in add add add add add add add xor add fcompl add in add add add add add add add pop add add add test add in add add add add add add add addb add dec add test add in add add add add add add add test add mov add add add add add add add add add fadds add add add add add add add add add add add lock add add jbe add in add add add add add add add sbb add mov add add in add add add add add add add inc add addb add add add add add add add add add pop add add pop add addb add add add add add add sub add and add inc add add add add addb addb add add addb add addb add incl add add add incl incl add incl incl (bad) incl add (bad) incl stos stos stos stos stos stos stos stos stos stos stos stos stos stos stos stos ja ja ja ja ja ja ja ja js mov mov mov jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc jo jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc jo jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc jo jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc jo jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc jo jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc jo jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc jo jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc jo jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc jo jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc jo jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc jo jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc jo jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc jo jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc jo jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc jo jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc jo jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc jo jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc jo ja ja ja ja ja ja ja jo mov mov mov inc inc inc inc inc inc inc inc add add jo inc inc inc inc inc inc inc inc inc dec orb inc inc inc inc inc inc inc inc dec orb inc inc inc inc inc inc inc inc inc inc inc inc inc jo mov mov mov ja ja ja ja ja ja jo stos stos stos stos stos stos stos stos stos stos stos stos stos stos stos stos stos stos stos stos stos stos stos stos stos stos stos stos stos stos stos push in add add add add add add add add add addb addb add add addb add addb add incl add add add incl incl add incl incl (bad) incl add (bad) incl stos stos stos stos stos stos stos stos ja ja ja ja js (bad) (bad) (bad) (bad) pushl (bad) (bad) (bad) (bad) (bad) pushl (bad) (bad) (bad) (bad) (bad) pushl (bad) (bad) (bad) (bad) (bad) pushl (bad) (bad) (bad) (bad) (bad) pushl (bad) (bad) (bad) (bad) (bad) pushl (bad) (bad) (bad) (bad) (bad) pushl ja ja ja jo inc inc inc lock inc inc inc inc inc inc jo mov jo ja ja ja ja stos stos stos stos stos stos stos js add sub add xor add pusha add add add add mov jnp xchg add add add push daa add dec and cmpsl push and cmpsl push and add push add inc add and stos push and test and test and xchg imul mov push add pop and lods pop and mov pop sbb mov sbb mov sbb mov sbb add pusha sbb mov adc les add fs mov insb or lret imul leave imul add imul add mov mov bound add je add jae add pop add stos pop add mov jb add jbe add jo add jno add outsl or (bad) jo add js add outsb or mov ja add outsl adc (bad) je add jns add jge add mov enter ljmp add movsb push add mov addl (bad) jno add arpl add arpl add je add jne add je add jb add push add add mov pop add stos pop add stos pop add fnstenv add jbe add je add jne add je add add stos pop add fnstenv add jne add jbe add jne add jno add outsb add lret add jbe add ja add jne add jbe add jne add ja add jbe add ja add ja add jbe add ja add js add js add jns add jp add jp add jp add jnp add jns add ja add (bad) sbb les ret add nop daa add nop sub jmp sub jmp sub in xchg sub add xchg cs xchg xor in xchg xor in xchg xor in xchg xor in xchg xor in xchg xor fisttpl add cwtl aaa add lcall in cltd cmp in lcall in pushf ds pushf cmp add popf aas add sahf inc add lahf inc add lahf inc add mov dec add mov push add test movl in (bad) incl lock incl hlt (bad) incl clc (bad) incl stc (bad) incl cli (bad) incl sti (bad) incl cld (bad) incl std (bad) incl (bad) (bad) incl inc jo add mov (bad) (bad) incl jae jae jo jo imul add pusha add pop add pop add pop add pop add pop add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add add add add add add add add add add add add add add add add add add add add push add mov add or or add add add add add add add add add add add add add add add add add add or mov stos lods stos stos stos stos test test lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods stos stos cmpsl or stos lods lods lods lods lods stos stos lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods pop mov lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods adc lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods stos movsbl lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods sbb lods lods lods lods scas scas lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods pop mov scas lods scas scas scas lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods adc mov lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods scas sbb mov lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods scas sbb mov lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods scas and mov lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods mov mov mov lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods mov mov mov lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods mov mov mov lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods mov mov mov lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods mov mov mov lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods mov mov mov lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods mov mov mov lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods mov mov mov lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods mov and mov lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods mov and mov lods lods mov lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods mov mov mov mov lods mov lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods mov mov mov mov lods mov lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods mov mov mov lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods mov mov mov mov lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods mov mov mov mov lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods mov lods mov lods mov mov mov mov mov mov lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods mov lods lods lods lods lods lods lods lods lods lods lods lods lods lods mov es mov lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods mov aas mov mov lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods lods mov mov cmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb inc mov xor xor pop pop insl pop insl insl xor xor xor pop pop pop xor pop pop xor mov pop das push cs xor xor push push xor das pop push push xor xor xor xor xor pop push cs dec inc das inc inc xor adc push xor push push popa jbe cmp jl jge jno outsl addr16 pushw dec dec (bad) jnp dec jo mov inc xorl mov xchg xchg xchg popf pushf fwait lcall cltd cltd xchg mov test xchg xchg sub mov jns dec dec dec dec dec dec push bound jb jb js js js js jb imul dec dec dec dec push jne je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add pop add (bad) (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add cmc add sub add and add inc add add add add xchg add add pop push dec add dec and mov dec and cmpsb push sub movsb push sub js xor jle xor ja xor ja xor jb add xor mov add add dec add dec and movsb dec and mov dec and mov dec xor jo add dec add insb inc add xchg jae (bad) xchg jp mov inc add mov aaa add xchg jno lret add dec add pop add inc add lahf inc add lahf inc add lahf inc add sahf inc add mov insb add outsb add xchg jae pop push dec add dec add cmpsb dec add movsb dec add (bad) jae add jb add jo add pushf push rorb add lcall pop push dec add dec add mov add ja add jbe add sahf push add imul add jnp add jp add js add mov data16 insl add shrl add insb add shrl add outsb add shrl add outsb add iret push add insl add lret imul (bad) jno add jge add jg add xchg add mov add xchg aaa add popf aas add mov cmp in inc add mov bound out arpl loop bound loopne bound iret outsl add mov jno add jb add js add jg add orl jecxz or add jp add jnp add jp add jne add adcb faddl push add adcl add (bad) pop add sbbl faddl sbb fldl add test add test in mov add xchg add nop and fldl es xchg daa add xchg sub lock sub out xchg sub add xchg das add xchg das add cltd xor lock xor cmc sahf xor add lcall lock aaa add fwait cmp lock cmp lock cmp add lea add cmpsl push add scas jo test sahf add pop add shrb add iret mov fmul mov fmul mov (bad) int add (bad) mov fcmovbe mov add sarb add sarl add fadd add (bad) add (bad) incl stc (bad) incl cli (bad) incl sti (bad) incl cld (bad) incl std (bad) incl (bad) (bad) incl cs add (bad) incl addb add pusha add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov or or or or or or or or or sbb es adc push adc adc push add add add add add add adc adc mov sbb mov mov mov scas mov mov mov mov mov mov mov mov mov mov adc mov mov mov mov mov mov mov mov mov mov mov mov mov adc mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov and mov scas scas mov mov mov mov mov mov mov mov mov mov mov xor mov mov mov mov mov mov mov mov mov mov mov mov mov aas and mov mov mov mov mov mov mov mov mov mov mov mov mov ds mov mov mov mov mov mov mov mov mov mov mov mov mov cmp mov scas mov scas scas mov mov mov mov mov mov mov mov mov mov cmp mov inc mov mov mov mov mov mov mov mov mov mov mov mov mov mov inc mov inc mov scas mov mov mov mov mov mov mov mov mov mov mov mov inc inc mov dec mov scas scas scas mov mov mov mov mov mov mov mov mov scas scas mov dec inc mov dec mov scas scas scas mov mov mov mov mov scas mov mov mov mov scas mov dec xor mov mov mov mov mov mov mov scas mov mov mov mov mov push mov mov mov mov mov mov mov mov mov mov mov mov mov mov xor mov mov mov mov mov mov mov mov mov mov mov mov mov xor test cmpsl cmpsl cmpsb cmpsl cmpsl cmpsl cmpsl test test cmpsb cmpsb test mov mov mov dec xor sub sub sub sub sub sub sub sub sub dec and inc mov push push push push push push imul push pop push push push imul das mov imul xchg nop cltd mov mov nop test insl popf mov xchg jns jle addl jno outsl outsb pushf mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp add add add add add add add add add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec std add sub add adc add and add add or jl push add cmc repz dec xor mov push aas add xor xchg pop cmp test add mov add mov inc add mov repnz inc add gs add mov popf add ret pushf add mov or mov arpl mov arpl add jae add js add xchg add mov repnz test scas xchg js in and out es nop sub out sub out sub out sub out sub add xchg das add xchg xor jecxz xor in ss lcall out leave add fnop add cmc repnz fidivrl add fst add fmul add fcmove add loopne add fst add (bad) std add (bad) incb cld (bad) incb cli (bad) incl sti (bad) incl cld (bad) incl std (bad) incl (bad) (bad) incl (bad) (bad) incl xchg xchg xchg add jg jle jle jge jge push push push push push push push push push push push push push push push push push dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec add pop pop pop pop pop pop pop add push dec or adc cmp adc adc adc add or dec dec dec inc inc inc inc inc inc inc inc dec dec or dec inc inc inc inc inc inc inc inc inc inc inc inc or pop dec inc inc inc inc inc inc inc inc inc inc inc inc cmovg dec inc inc inc inc inc inc inc inc inc inc inc inc push dec sbb inc inc inc inc inc inc inc inc inc inc inc adc inc inc inc inc inc inc inc inc inc inc inc adc sbb dec dec dec dec dec dec dec dec dec dec dec adc inc ds aaa cmp cmp cmp daa and sbb sbb and add dec ss xor sub sub push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push (bad) pushl mov add mov add mov add mov add mov add mov add mov pushl mov add add add add add add add add and add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add cmpsl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add mov push daa jmp push daa jmp push daa jmp push daa jmp push daa jmp push daa jmp push daa jmp push daa jmp push daa jmp push daa jmp push daa jmp push daa jmp push daa jmp push daa jmp push daa jmp push daa jmp push daa jmp push daa jmp push daa jmp push daa call push daa jmp push daa jmp push daa incl add cmpsl add add mov push jmp daa jmp jmp jmp daa jmp push daa jmp push daa jmp push daa jmp push daa jmp push daa jmp push daa jmp push daa jmp push daa jmp push daa jmp push daa jmp push daa jmp push daa jmp push daa jmp push daa jmp push daa jmp push daa jmp push daa jmp push daa incl add cmpsl add add movsl push es (bad) cld out clc (bad) (bad) (bad) clc (bad) (bad) (bad) clc (bad) (bad) (bad) stc (bad) (bad) (bad) clc (bad) (bad) (bad) clc (bad) (bad) (bad) clc (bad) (bad) (bad) clc (bad) (bad) (bad) in (bad) (bad) push (bad) (bad) push (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) push (bad) (bad) (bad) clc (bad) (bad) (bad) (bad) cld out movsl push incl add cmpsl add add cmpsl push and (bad) clc (bad) (bad) (bad) clc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) clc (bad) (bad) (bad) clc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) jmp add cmpsl add add test and stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) ljmp add cmpsl add add stos push and cli (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) cli (bad) (bad) (bad) stc (bad) (bad) (bad) cli (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) clc (bad) (bad) ljmp add cmpsl add add lods push and cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) ljmp add cmpsl add add scas pop pop (bad) sti (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) stc (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) sti (bad) (bad) (bad) sti (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) cli (bad) (bad) ljmp add cmpsl add add mov push (bad) sti (bad) (bad) (bad) sti (bad) (bad) (bad) sti (bad) (bad) (bad) stc (bad) (bad) (bad) sti (bad) (bad) (bad) sti (bad) (bad) (bad) sti (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) cli (bad) (bad) pushl add cmpsl add add mov sbb (bad) sti (bad) (bad) (bad) sti (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) sti (bad) (bad) pushl add cmpsl add add mov sbb cld (bad) (bad) (bad) sti (bad) (bad) (bad) cld (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) sti (bad) (bad) pushl add cmpsl add add mov (bad) (bad) (bad) cld (bad) (bad) (bad) std (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) sti (bad) (bad) (bad) mov add cmpsl add add mov (bad) (bad) (bad) std (bad) (bad) (bad) std (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) std (bad) (bad) (bad) mov add cmpsl add add mov (bad) (bad) (bad) std (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) std (bad) (bad) (bad) mov add cmpsl add add mov (bad) (bad) (bad) std (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) std (bad) (bad) (bad) mov add cmpsl add add mov (bad) (bad) (bad) std (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) std (bad) (bad) (bad) mov add cmpsl add add mov (bad) (bad) (bad) std (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) std (bad) (bad) (bad) mov add cmpsl add add mov (bad) (bad) (bad) std (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) std (bad) (bad) (bad) mov add cmpsl add add mov (bad) (bad) (bad) std (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) std (bad) (bad) (bad) mov add cmpsl add add mov (bad) (bad) (bad) std (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) std (bad) (bad) (bad) mov add cmpsl add add mov (bad) (bad) (bad) std (bad) (bad) (bad) std (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) std (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov add cmpsl add add shlb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc fs add add les (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc addr16 add add les (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc addr16 add add les (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc addr16 add add (bad) push (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc imul test enter (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec imul lods add add lret imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec imul add add int or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec insb or pop pop pop scas add add iret outsb or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec outsb or pop pop pop scas add add shrb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call jo call pop pop scas add add aam push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call jno call pop pop scas add add (bad) jb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call ja call add sbb mov add lods pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add stos pop add lods pop add mov add decl or add add mov data16 mov arpl (bad) mov arpl (bad) mov arpl (bad) mov bound (bad) mov bound (bad) mov arpl (bad) mov bound (bad) mov arpl (bad) mov arpl (bad) mov bound (bad) mov bound (bad) mov bound (bad) mov bound (bad) mov arpl (bad) mov arpl (bad) mov bound inc outsl adc (bad) mov mov bound dec jns dec jge (bad) mov gs jno mov xchg imul (bad) je incl add test add sbb push dec outsb add aam add fdivs (bad) fnstenv fnstenv (bad) fnstenv fdivs (bad) fnstenv (bad) fnstenv (bad) fnstenv (bad) fidivrl (bad) fidivrl (bad) fidivrl (bad) fidivrl (bad) fnstcw (bad) fidivrl (bad) fdivs (bad) fnstenv (bad) fnstenv (bad) fdivs (bad) fdivs (bad) fdivs (bad) fdivs (bad) fdivs (bad) fdivs (bad) fdivs (bad) fnstenv fdivs fnstenv (bad) fnstenv (bad) fdivs (bad) fnstenv (bad) fnstenv (bad) ljmp (bad) fldl or in movsb push (bad) stc mov add jnp xchg incl jecxz arpl dec (bad) xor int3 ja incl add xchg add add lret call jns jmp mov pop (bad) in lahf inc (bad) out lahf inc (bad) out mov dec (bad) out lahf inc (bad) in lcall out mov ss in xchg xor in cwtl cmp in popf aas (bad) out popf inc (bad) in pushf cmp (bad) in pushf ds in pushf cmp (bad) in pushf cmp (bad) in pushf cmp (bad) in pushf cmp (bad) jmp sub in xchg xor in xchg xor jmp sub (bad) ljmp (bad) jmp sub in xchg xor in xchg sub (bad) in xchg xor in cwtl aaa (bad) in lcall fisttp xor (bad) jno incl add dec add add fnsave xor jno call jbe (bad) fdivrs call js call jbe call jae call jae call jae call jae call jae call jae call je call je call je call jne call jne call jne call jne call jne call ja call ja call ja call ja call ja call ja call ja call ja call jne call jne call jne call je call jae call jae call jae call jae call jae call jae call jae call jae call jae call je (bad) fdivs (bad) fnstcw call jbe pushl add pop (bad) (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add add add add add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add sub add add add add add add add and add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add push xchg inc and cmp lock lock lock lock lock lock lock lock lock lock lock lock lock lock icebp cmpl icebp cmpl icebp cmpl icebp cmpl icebp cmpl icebp cmpl icebp cmpl icebp cmpl icebp cmpl icebp cmpl icebp cmpl icebp cmpl icebp imul add mov push sub movsb dec and mov dec and mov dec and mov dec and mov dec and mov dec and mov dec and mov dec and mov dec and mov dec and mov dec and mov dec and mov dec and mov push sub movsb dec and sbb add xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cli (bad) (bad) push (bad) (bad) (bad) sti (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std (bad) (bad) (bad) (bad) (bad) (bad) dec xchg jae and add sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc xchg jp sbb add push (bad) (bad) cld (bad) (bad) (bad) cld (bad) (bad) (bad) sti (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cld (bad) (bad) (bad) (bad) (bad) (bad) dec xchg jae sbb add imul (bad) std (bad) (bad) (bad) cli (bad) (bad) (bad) stc (bad) (bad) (bad) sti (bad) (bad) (bad) sti (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) sti (bad) (bad) (bad) (bad) (bad) (bad) dec xchg jb sbb add insb ss (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) sti (bad) (bad) (bad) cld (bad) (bad) (bad) cld (bad) (bad) (bad) sti (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) sti (bad) (bad) (bad) (bad) (bad) (bad) dec xchg jno sbb add outsb xor (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) sti (bad) (bad) (bad) (bad) (bad) (bad) dec xchg outsb lcall or mov add sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) sti (bad) (bad) (bad) (bad) (bad) (bad) call cltd insl lcall or mov add sub jo (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) sti (bad) (bad) (bad) (bad) (bad) (bad) call lcall add add ret jb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) sti (bad) (bad) (bad) (bad) (bad) (bad) call fwait imul or mov add and jb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) sti (bad) (bad) (bad) (bad) (bad) (bad) call fwait imul push add (bad) jae (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) (bad) (bad) (bad) call pushf push adc add leave jbe (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cli (bad) (bad) (bad) stc (bad) (bad) (bad) sti (bad) (bad) (bad) cld (bad) (bad) (bad) cld (bad) (bad) (bad) sti (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cld (bad) (bad) (bad) (bad) (bad) (bad) (bad) fstps add lret ja (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) cld (bad) (bad) (bad) cld (bad) (bad) (bad) sti (bad) (bad) (bad) sti (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fistpl add int daa (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) frstor add sarb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) sti (bad) (bad) (bad) std (bad) (bad) (bad) sti (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fbld add sarb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cli (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) stc (bad) (bad) (bad) stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) cld (bad) (bad) (bad) stc (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) sti (bad) (bad) (bad) stc (bad) (bad) (bad) sti (bad) (bad) (bad) stc (bad) (bad) (bad) sti (bad) (bad) (bad) (bad) (bad) (bad) jmp mov add xlat jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) std (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp mov add fiadd (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp test add aam sbb (bad) into (bad) fcmovbe mov (bad) (bad) mov (bad) fcmovbe mov (bad) fcmovbe mov (bad) fcmovbe mov (bad) (bad) mov (bad) (bad) mov (bad) fcmovbe mov (bad) fcmovbe mov (bad) (bad) mov call int (bad) (bad) mov fmul mov fmul mov fst mov jecxz stos (bad) (bad) ret call lea call adc scas add add mov add test inc add lahf inc add lahf inc add lahf inc add lahf inc add lahf inc add lahf inc add lahf inc add lahf inc add lahf inc add lahf inc add mov inc add lahf inc add lahf inc add lahf inc add lahf inc add lahf inc add sahf inc add movsb dec add stos push add popf inc add cmpsb dec add cmpsb dec add mov dec push jmp pop add push push push scas add add data16 lret imul shrb call imul shrl call outsb add shrl call insl add (bad) jno call jb call jb call jno call outsb add shrl dec insl add iret insl add shrl shrl call outsl add iret outsl add iret imul push stos (bad) dec push (bad) in mov inc lcall std (bad) jle xchg iret outsl add pop pop pop movsl add add int add fisttpl push push popf cmp push popf aas push fwait aaa push cwtl xor icebp lahf aas (bad) out xchg das (bad) out xchg das push fwait cmp lock aaa (bad) out lcall lock out xchg es xchg sub in xchg daa (bad) in mov push xchg sub lock xor in nop and repnz xor cmc sahf xor inc mov aad cmp fnstcw lcall push add add or aad or faddl (bad) fstpt (bad) fstpt (bad) fstpt (bad) fstpt (bad) fstpt fstpt (bad) fstpt (bad) fdivrl fdivrl (bad) fdivrl (bad) fdivrl (bad) fstpt repnz repnz repnz fidivrl repnz repnz jae repnz jae repnz repnz je repnz loope add out add in add int3 insl add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add adc add adc add adc add adc add adc add adc add adc add adc add adc add adc add adc add adc add adc add adc add or add adc add imul add add add add add add add add add add add add add add dec lahf dec es addl addl (bad) inc and addl addl addl addl addl addl addl jg and xchg out push sub iret add add mov cli cli cmc repz stc cmc repnz clc cmc repnz cmc repnz stc cmc repnz stc cmc repnz stc cmc repnz stc cmc repnz stc cmc repnz stc cmc repnz stc cmc repnz cli cmc repz stc cmc repnz sub add add mov icebp (bad) (bad) (bad) (bad) std (bad) (bad) (bad) std (bad) (bad) (bad) cld (bad) (bad) (bad) cld (bad) (bad) (bad) cld (bad) (bad) (bad) cld (bad) (bad) (bad) cld (bad) (bad) (bad) cld (bad) (bad) (bad) cld (bad) (bad) (bad) cld (bad) (bad) (bad) std (bad) (bad) (bad) (bad) (bad) (bad) pushl sub add add mov icebp (bad) (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) sti (bad) (bad) (bad) std (bad) (bad) pushl fildl add jo mov icebp (bad) (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) sti (bad) (bad) (bad) std (bad) (bad) pushl daa fildl add jo mov (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) sti (bad) (bad) (bad) cld (bad) (bad) (bad) jp fildl add jo mov (bad) (bad) cli (bad) (bad) (bad) sti (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) (bad) (bad) std (bad) jge and jo mov (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) cli (bad) (bad) (bad) sti (bad) (bad) (bad) sti (bad) (bad) (bad) (bad) (bad) std incl add jo rclb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add jo mov icebp in xlat jmp fmul jmp fst jmp fnop jmp fnop jmp fst jmp fnop jmp fnop jmp fnop jmp fcmove jmp fcmove jmp fcmovne (bad) in fidivrl fiaddl add jo arpl clc mov arpl (bad) mov fs (bad) mov bound (bad) mov arpl enter lret pushl push push lcall add push (bad) jns shl sub in push jmp xchg jmp mov jmp xchg jmp mov jmp test loop adc in sbb out sbb loope and lret jg out mov add or add add add incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call add add add and add add call add adc add add sub add add xor add add or test add add and add add or test add add adc add add or push add xor add add add add and add add add add adc add add add add or push inc pusha add add add pop add xor add add add add and add add add add adc add add add add add add add add and sub add add xor add add and test add add add add add add adc add add add add pop add add addb add add push add push add push add dec add dec add dec add inc add add add mov add add add add inc mov add pop add inc mov aas add add add add add add add fiadd add add push add add outsb add inc add insb add dec add data16 add mov add add xor cmp xor xor inc add add add add add outsl add jo popa add jns dec add insl add add add dec add arpl jb outsl add outsl add je and inc add jb jo outsl add popa add add outsb add add dec add add imul inc add jae arpl jb imul imul add add dec add arpl jb outsl add outsl add je and push add outsb add add jae and push add popa add arpl push add insb add add and dec add jae je add add inc add add add imul push add jb jae imul add add aaa add add add add add add add add add add add add add add add add sub add dec add je add outsb add insb add popa add add add add jb arpl push add add jb dec add jae je add js add add add add add popa add add jo jns jb imul je add test add arpl jb outsl add outsl add je and inc add jb jo outsl add popa add add outsb add add add insb add add imul je jae and jb add add jbe add add add sub add dec add imul outsb add insb add imul outsb add insl add add push add popa add arpl push add add jb dec add jae je add js add add add and add push add outsl add add je dec add insl add add add push add outsb add add jae scas add add add jb arpl push add add add jb outsl add add je push add jb jae imul add aaa add add add add add add add add add add add add add add add add add add popa add inc add insb add dec add data16 add add and add add push add popa add jae insb add je imul add add or add add add bound les add bound loopne add or add bound adc add arpl xor add add dec arpl pop arpl add add push add add add push add addb add dec inc push dec inc dec xor cs dec dec add inc push xor cs insb add xor xor fs insb add dec outsl popa fs imul add inc gs jb arpl fs jae add push imul jb je arpl push imul insb insb outsl arpl add jb jne insb inc jb add add imul jae add dec gs popa addr16 outsl js add pop add repz fiadd add or js inc dec fisttpl inc adc cld mov in dec mov xor and add ret outsb lret xchg xor fstp (bad) mov (bad) ret int3 cltd ret jo mov aas mov push sub enter pop and mov push add add mov adc dec (bad) add inc out mov scas ljmp mov mov push pop xchg dec inc sbb leave cmp and (bad) or cltd mov rorl sbb movd je mov scas flds and lods push push push push and fdivp mov cmp jo xor fptan lods popf mov sbb xor fwait sub call jmp sub mov repz pop mov inc adc aad dec outsl fiaddl sahf mov jns adc xchg mov (bad) jno mov inc mov inc push lea jae bound and mov pop push shrl std xchg std xor int3 sbb lret scas (bad) xor cltd std data16 inc fdivrs push into idivl xchg aas jno clc adc add jb andb mov sahf or pusha push xor andl fidivl inc aaa or insb add cmp or xor inc fidivrl out fwait imul sbb fsubr push addr16 (bad) es subb push dec out roll jns das pop xchg idivb push or pop hlt cmp sub pushf dec adc pushf pop test das jo lods mov xor cmp jl hlt mov and pop jecxz js push xor dec adc fistl and inc leave xchg in insl out (bad) test jbe je in outsb dec push in stos mov call shl aaa or rorl aas dec xchg xchg ds outsl (bad) jns mov mull mov mov mov je mov or ret cmpsb sub mulb jns jmp and mov cmc pop mov mov in (bad) sti cmp test rep addb (bad) scas repnz sbbl xlat xor xchg cmp dec inc jp inc lea ds out nop call pop addb loop mov scas xchg aam cltd mov popa add inc mov je or orl loop xchg cmp outsl inc psubsw inc adc xor mov je (bad) in ret aam sbb cmp sarb pop es inc ds scas (bad) arpl xlat xor inc loope daa mov pop mov sub or xchg mov xor mov sbb je lods mov call inc arpl lods jmp js jge mov insl jns mov xchg xchg lret clc aaa jae and push cltd idiv ss sbb loopne les cmpsl ret (bad) jae sub clc or js aad dec insb sbb jbe out sbb cmp pop mov shl push push (bad) pop lods lods lods insl fidivrl dec adc xchg lods pop push sahf xor jnp es imul icebp es or push mov mov add in add sbbb and jp inc leave fimul fwait cmc sti stos ljmp adc jl jle pop cwtl inc js cmp scas and sbb xor cmp jne daa push out cmp push out mov je aam mov or aaa lds fsubrs mov adc fisubrl mov push pop push jmp mov stc jno cmc mov mov scas push pop fcomps mov dec mov daa cmpsb mov outsl sbb xchg sub jnp clc jb insl mov fdiv dec dec mov xchg out out pop mov or rcrl fimull sub loope lock xor ret push ret xchg or or icebp sub sbb lret loop fcmovu mov cmp sub adc test adc mov inc mov lahf adc out dec addr16 cmp (bad) into sahf loop and pushf loopne das or xor jnp test xchg lock jo sub mov cwtl push fidivr dec pop push fidivr mov mov or hlt mov mov js in scas lahf and sbb jnp inc adc and pusha mov test (bad) mov gs lock movsb jmp dec fisttpll (bad) ljmp inc (bad) repnz cmpsb pop jp xchg in add cmp mov mov shr mov sub lods xor push cld sbb adc sub imul jmp jmp xchg pop push lods arpl inc out jbe out add mov xchg gs mov pusha ret mov push jle cli push lods adc xor lods sahf inc movsl mov mov xchg fcmovu sbb stos mov (bad) jl insb stc push lods outsl (bad) xchg rolb sbb cmp jge jno xchg sub mov es mov iret push cltd testb jmp movsl inc cmp mov sub inc cwtl cmpsb mov mov mov add adc daa mov xor or std pop lock push sahf sahf mov mov (bad) mov into lea mov hlt xor jbe add int mov insb lcall imul mov fisubl push mov lds push pop dec dec hlt pop icebp rcll loop mov pop cmpsl into or lods xor notb dec mov jmp dec sub sbb cmp hlt fnsave outsb fdiv push int3 jmp insl movsb das cltd or push lock mov ljmp ljmp mov (bad) int3 aaa pop idivl mov (bad) cli fisubrl jmp xchg (bad) mov loope aam pop jge data16 rol jae jecxz dec outsl pop and dec pop sar lret pop xchg cmp jo int3 cli inc arpl call dec mov cmp adc jae fadd xchg cmp xlat jno push lcall sbb sub lea movsb xchg adc imul adc int3 push dec cmp push sub fsubr and sub pop addr16 xor (bad) push pop stos mov not aad aad or (bad) sbb mov dec rcr jns aad insl lcall aam mov lock pusha dec xchg aad subb mov mov daa loop cmp icebp sub pop in adcb sbb cltd (bad) mov and pusha in loop pusha jb xchg cmp inc cmp pop push je cmp push in push mov (bad) lock add mov aam adc xchg lods incb aad mov push mov pop in mov inc ljmp xor xor push xchg or lods sub jmp jns cwtl movsb dec mov sbb mov xor mov adc pop push push add dec cmpsb add xor lret imul and push xchg mov mov sbb scas icebp scas pop inc lds pop sbb repnz movsl clc jno clc iret push out imul fistpl cmpsb cmp sbb mov xchg pop xchg mov int loopne push dec (bad) stc push nop xor sbb mov out cli outsb push adc push (bad) rcr xchg (bad) (bad) test mov mov and mov lahf roll or and outsl jns or push adc ja push imul cmp es dec in adc call add push out das int3 xchg (bad) pop mov and jbe fsubr rorb jns mov mov mov xor mov insb add movsb adc mov or loop in repz jmp (bad) push sub aas and sbb push xor (bad) sbb in pop xor int3 popa mov mov sbb mov addr16 mov into jo movsl stc dec insb cmp insb and mov punpcklwd fstps rol mulb sbb jno dec movsb hlt pop shlb out faddl call fdivr sti fnsave adc sub test jns adc pop dec mov imul sarb adcl enter jo xchg inc rep inc push adc pop in push insl cltd add hlt pushf fmul cmp pop push push gs movsl rclb sub out lret arpl lcall xchg pop mov and pop mov in cltd mov arpl pop imul in cwtl dec jnp or das xchg leave pop xchg or sub push mov out loopne (bad) mov negl jns fisttpl xor pop xchg divb lea out mov out xchg mov daa insl cld mov dec (bad) xchg or dec shufps rcrb (bad) out ds add in sar add sbb cmp adc sub fcoml and jb adc arpl mov (bad) add pop ror daa sbb inc jmp jp (bad) js bts mov xchg test push outsb or in fist shlb sti inc inc lea in mov add nop xchg and in mov jle cmp or icebp cli adc push adc pusha inc cmp mov and xchg xor adc mov push jns lods xor or cmpsb ret jle xor push mov jle or jge and fisubrl sub and push mov inc inc sbb cmpsl add in ljmp xor mov ljmp adc iret ret (bad) sub lea cld jne cmpsb in adc stos std test push shll dec mov std mov sti mov lods pop int inc ja (bad) jbe mov mov into data16 and jnp adc dec jo and cmpsb stos pop cmpsb lds jp fsubrl jbe sbb xchg inc adc or pop adc add jmp fcoml lahf mov fnstenv aas test movsbl adc fiadd rcl cmp xor stc lods fadds mull add sbb hlt pop and mov cmp (bad) loopne sbb mov sti sub mov lcall in push repz out mov push int3 jge cmc mov adc popf xchg sub or dec (bad) out jb,pn (bad) add mov sub iret and popf sub add push sbb mov mov lds sub stos jae outsb das das ficomp push pusha orl into fnstsw fbld jae outsl fnstsw and out fnsave imul ja push (bad) mov ret xchg jge fdiv xor mov mov jne out sbb xchg xchg gs or clc int inc mov push sbb mov stos dec les stos xorb xchg aad jbe adc xchg jb ja and mov movsb in fldcw jb xor inc cmp addr16 mov fsubrs sub dec xor pop pop sbb nop pop popf dec sti sbb and lods pop xchg jp dec xchg movl jb test mov testb push push ljmp push lahf fwait jp pop xchg dec xorl ja adc pop push shl dec fstl testb lods cwtl push xchg sbb lods test mov movsb (bad) (bad) (bad) adc out arpl sbb sbb mov mov or jae inc xchg jle call push hlt xor dec cltd inc out mov rcr and push mov aad movsl pushf (bad) test xor adc xlat mov into mov dec stc (bad) add nop movsl inc cmp sub sub sti inc in adc adc fs cmp add mov mov pop mov mov cmp (bad) divb pop hlt outsb jns in xchg add lods leave push sbb insb mul push in xor xor inc adc mov pop mov test xchg pop mov insl push mov xor lahf cmp sti pop loopne cs add jbe inc in scas or lret sbb notl inc and sbb jge dec xor add lahf push xor dec aaa movsb ret popa loop push cwtl xchg mov test cmp (bad) ds add pavgb xchg xchg mov lcall inc dec adc ret mov test or mov ss jbe subb mov xchg pop bound fs jle repz push je jl int3 jo xor add xchg xor pop js in jns and or xor jge movsl stc xchg stc xor rcl scas jecxz mov rclb mov outsl and mov aam and push dec add jns repnz enter adc sub mov sbb pushf je jl cmp add cmp mov and xor sbb rorl mov fisubr and loope fs int3 cmc and dec fisubl leave and in jbe pop in outsl int3 cmp test xor insl xchg sub jns ret lret (bad) lods pop pop and jg les ds icebp loopne hlt xchg les imul rorl add ljmp stos xor into icebp insl adc xchg pop sbb ss (bad) fldcw mov dec pop pop sbb mov lock in into push jns dec sbb or decb jecxz test add inc repnz jbe mov sbb ret sub lods data16 lret fisttp mov pop fistl sub insl shl jmp mov in or sub data16 jnp fisttpll xlat cmp mov add jno and arpl mov and mov jecxz and int3 loop inc mov inc push jl cs aas sub fucomi std icebp sbb dec pop enter xchg out push fisubr xor or sub daa lock push mov ftst pop int3 outsb dec sbb or xorb test push test and or test stos jecxz nop push cmp mov (bad) mov insb mulb repz out jb xor sti mov push ret icebp lcall sub mov add add sbb idiv in test jo xorps mov push test mov fistp xor out in adc stos or adc lahf shl sbb or (bad) insl jl pop mov cmpsb sti add loope into outsb outsl cltd mov rorb rcl mov sbb enter jmp mov sbb jae mov xchg fstpl fistp sbb lock (bad) mulb push fisubrl es jge cmpsb idivl pop arpl mov xor imul lcall rcr pop xchg (bad) add xorl daa mov in lods and ja lods test and inc into push mov insl dec jmp je das das xor movsl xor pop or jbe fwait jae mov adc fistpl fistpl ljmp fnsave mov jnp xchg push mov push push addr16 cmpsl fcoms adc insl sbb std cltd cltd mov mov rclb xchg iret les mov and fist cmp rcrl dec std xor rol mov hlt fwait pop ljmp lods and push movsb in cmp inc mov mov into arpl add push sub xor jb,pn sub cmpsl pusha sti (bad) shrl movsl mov cmp cmp sbb cltd lret (bad) push int xchg xchg ljmp sbb loopne or movsb in int3 adc fisttpl cli mov (bad) pushf mov lret jmp fsubl mov add jbe aam add and lret loop lcall das stos cmp mov in pusha and sub inc clc (bad) push pusha dec sub mov mov out hlt inc pop inc outsb adc sahf cmpsl add (bad) mov mov loope,pn shlb jno pop add xchg jl xor icebp jge fs and xor popf dec pop push xor addr16 icebp daa mov (bad) loope mov dec lods andl cli sahf in or inc cmp fstl sub addr16 push cmc xor aaa adc dec add cmp out das mov sbb adcl (bad) lcall xor stos sti nop xchg cmpsl cmpsl in lea jnp lahf cmpsb and mov mov rcrl aas xor (bad) xchg ds daa clc in jecxz mov testb push xlat jb cmpsl mov mov cmc mov dec lock (bad) (bad) idivb pop test cmpsl jecxz (bad) std loope inc or (bad) ljmp push inc (bad) lock cmp das icebp and cmp imul sbb and xorl sahf cmpsl fild fistp mov arpl sbb push xor xchg xchg cwtl ds dec xor arpl mov aad cs sbb stos movsb mov sub daa clc push clc mov jb out loop jg jge stc inc int3 xor icebp test ret test xchg out scas and xor imul lock movl shrb sbb repnz sbb inc push xchg push xchg mov out ret popf aaa dec adc or stc adc aas lret jle fstl adc jno mov into cld ret push (bad) out sub jmp movsl mov sub loopne jge push mov lock dec xchg stos dec mov and pop mov push out sub and adc dec jae mov mov cmp dec lahf push jns (bad) and cmp rorl iret mov lret es movsb mov cwtl cmp lahf decl fisubl cmpsl jecxz push out fcomps pop jns ljmp adc fldl insl decl sti idivl in sub adc lret into std xchg jnp int les adc push xor rorb sar xor xchg push jp mov mov ficom mov cs xor push xchg fs (bad) test mov fs popf gs and daa and adc push aas dec and push cmc scas mov jnp mov sbb push add or movsl mov sbb push sbb mov (bad) mov hlt cmp std rorb pop es pop dec pextrw daa xchg mov in sbb sbb out lret aad mov js mov imul push mov xchg andl xor (bad) jne es aaa jno ja faddl insl (bad) and or pop dec add jb push in xor jecxz ss jo dec xchg dec stos sahf lret cmp push push scas lret jno je inc jecxz pop popf pop repnz sbb in xchg dec push cli aad xor jp jle mov lcall pop jae mov ficoml add fldenv or fnstcw test sbb inc pusha inc jle cmp inc imul add mov or loope add sub sahf insb (bad) in movsl xchg pop call imul ja add and lret mov or (bad) xchg push pop arpl je lahf xchg push aas sti loopne mov idiv ljmp sbb lods test call add std ret scas cli test stc push xchg out jo push push mov inc clc lahf mov in cmp aad pop mov stos mov adc stos push jns sbb pop and push jns cmp adc dec clc aad jl fld jne,pn loopne nop pop mov sti sti fxch insl sbb out imul pop mov push das push adc cwtl xchg sub xor jnp lahf pop shll xor add std pop jl xor mov clc cld pop mov pop mov xchg pop or adc pop dec and mov ds fdivrp cwtl xor jae js mov lds mov fcoms adc decb mov lods fdivs jo scas addr16 xchg loop shrl mov add inc lret fidivrl inc adc inc rolb lods stos push fmuls pop or stos orb movsb repz sahf mov imulb dec in inc lahf repnz mov jnp ds mov pop lcall jle xor fwait jne cli push loopne add mov cwtl xor dec js js xor sub push and adc xlat mov add and and push or cmp dec clc or push or jge fisub jl cwtl stos test dec mov or js mov mov add xchg xchg xor lea test mov pop lods loop jle nop dec cwtl out or jge pushf lea cwtl iret pop enter mov (bad) add es mov mov jmp hlt push shll ret jne mov xchg mov push cs movsl (bad) dec mov test stos mov mov sbb in negb outsb out mov xor imul lock and add inc test ljmp loope mov jo or sbb in test push inc mov jge outsb fldcw andl and sbb push or rol jne pusha inc mov and jb push inc inc add xchg inc cltd inc scas or jno outsl xchg adc enter adc aad das cmpsb mov adc (bad) imul rolb xor cmc pop cmp mov or lahf aas aas mov daa inc dec xor xlat pop inc add daa (bad) shlb mov sub add cmc push xor test clc (bad) push fmulp mov xchg sbb fadds stos xor arpl arpl add dec outsb ret mov lock mov fstps mov sbb push mov (bad) fild push adc pushf js jl js xor fs adc pop cmp in in lock and cwtl aaa or nop hlt sbb dec push jmp daa push jne lock or pop (bad) jae pop mov jp mov sub iret rclb fcom ret dec mov mov pop xchg enter xor outsl loopne inc fisub jae dec push and xchg jns cwtl mov jae dec (bad) jb inc rorl rol adc sub add les pop or xchg and and or stos xchg lcall add movsl aas mov adc (bad) int pop imul adc jbe sbb int fldt in in jb mov iret pop mov test fistpll out pop fnstenv dec ljmp mov (bad) push jmp xchg imul inc cmpsl dec sarl xchg les sbb push push or pop inc mov fmul inc xchg inc mov jbe mov in xchg rcr mov push sarl nop jmp outsl xor test std mov add xor cmp cmp or dec test dec dec rclb inc sarb das xchg nop jp int sub (bad) dec pop xlat les add movsb jmp xchg lock fisub mov popf jle push outsl aam mov decb cmpsb inc enter pop add insl push add shr and mov inc aas test nop mov cld mov push rcl mov hlt in add popw dec xor xor call pop mov add rclb dec (bad) out mov pusha lret push popf in out (bad) addr16 aas pop hlt fwait or lret inc jg std std inc test rcll push mov push out sbb test adc push mov or mov mov pop and js loope xchg sbb sub sub adc push aad ja xor (bad) add popf in ja add mov and sbb jns sbb je jge unpcklps mov add pusha jo daa xor and jmp sbb js ret xor mov mov inc out mov pop mov psllw test jnp lea xchg sbbl or cmpsb xchg mov (bad) lock sti xorl cmp inc fcomps sub mov ja adc mov fistl fwait pop sahf sbb cs lock icebp enter es (bad) fsubs cli ss pop push mov dec incl push adc insb push shrb push rcrl dec (bad) scas inc nop not add jmp fwait div outsb fildll mov dec ret lcall jo in and in sarl jg aaa mov clc jno,pn bound xchg mov and mov and adc adc rcl (bad) pop ret sbb jbe,pt push fstpl out daa mov jnp inc rcll push mov hlt push mov fwait rcr pop call dec popa push sbb pop loopnew push sub sbb xchg push ds sti (bad) cs sub icebp repnz jns mov (bad) jp in jl (bad) std add js int stc pop sbb sahf fs cs rolb mov adcb push push sarb fsubl int3 in adc cmc cmpsb ja das pop out sbb cli cmp decl aas mov and das punpckhbw xor fucomip int3 sti jge cmp pop (bad) int3 jmp hlt lock xor or inc mov mov inc js and xchg xlat insl fs mov or shll adc and popa jo push sbb inc mov pop adc cmpsb lods mov insb xor pop jl cmp rorl sbb sbb rcrb mov lret jp inc adc (bad) push sub jl cmp in int pop ret pop fiaddl ficom sub push outsl push iret gs mov jmp (bad) pusha fisttp cmp cmp adc insl in or mov sub mov jo xchg cld fs popf mov lds adc pop stc mov icebp js mov shrl xlat sub push push xchg mov popa clc test xchg mov sbb add arpl mov fist lods fs loop pop js mov mov pop in addr16 jl or mov popl sub mov cld or push xchg int push xor loopne dec inc push or xchg lea dec push mov fstpl orl cmp add call inc jecxz test test fcmovnu cld mov sahf test mov into and push jecxz sbb (bad) stc aaa into lret clc imul mov fmulp cmp bound mov sarb ljmp pop sub fucom and cld push inc fwait pop pop xchg inc lret or pop jbe lea and movsl dec mov xchg clc sub lcall xor mov in ret adc loope rcll push push xor fwait dec gs hlt push (bad) or imul dec pop xor jno pop inc inc lods xor fldcw lcall mull in or scas popf xor mov jmp pop pop mov cmpsb mov sub xchg shl mov and pop lret sbb push fsubrs sub ffreep xchg xor (bad) xor pop outsl sub shl sub sahf sub sbb cwtl loope jne jae mov cmp popf loope notb test icebp mov pop jmp mov or add loop cmpsl push ss dec pop pop inc mov mov push push push (bad) cmp xchg cmp sti (bad) nop pushf mov jno adc aad xlat jecxz or fstl das mov das push stos add pop lock imul pop ret xor sub push ret rorl outsl fucomip addl loopne js cmpsb pusha fidivrl cmp fiadd mov jo or add fnop sbb adc aad cmp add and les mov in sub lret fistpll out data16 (bad) jbe popf bound popf arpl jnp (bad) iret std lods in cmp shrb dec in xor mov int cld stc sti xor or (bad) arpl int3 jae out call (bad) mov sbb dec shll flds sahf dec addr16 cld or cmc daa sub ret push call dec out xor sbb shlb aas ret sbb sbb or pop fidiv fcomi inc pop loopne mov pop jns icebp daa push cmpl dec lret test jp cs aam pop mov test rolb mov inc enter test add dec les xor mov fdiv imul test jl xchg jno insb sub (bad) int hlt fdivrs es mov cld pop dec add dec outsl fiaddl popf mov roll fisubrl insl movsl push jp inc test (bad) inc push push push aas push cmp inc out lds mov inc inc fcoms mov mov (bad) pusha fsubl lea mov fmulp ds fcomps outsl lock jle and daa pusha add adc insb add adc faddl imul call mov cld add add enter out push xlat pusha push mov jo fs ret push xchg sbb adc fcomps dec nop cmc and cmp mov addr16 mov enter fidivl mov test mov mov push popa mov xchg call inc lock leave enter pop loopne cmp xchg and arpl les pop shrb and push and push sub in mull fnsave call or xchg inc jns in stos mov push pop rol cmp or mov sub das push mov (bad) into mov xchg sub and mov (bad) (bad) push adc pop pop js jmp push cmp inc insl loop sbb gs and int sub fcmovnb insl sbb aad shlb jnp shrb xchg rol cmpsl add xor mov mov and leave mov sbb je jno and sbb fcmovnu push sub jo xor mov mov ljmp shl rolb leave orl aaa outsl scas or insl ja adc push pushf xor sub dec leave jno pushf rep sub lods ss jbe ret dec xchg lods add leave stc and pop repnz xor test cltd ret adc inc repz mov mov int3 xchg xor xor aaa cs push mov lods aam jno mov arpl jb xor sbb jno lds arpl (bad) cltd mov adc dec aas sub xchg dec sub clc mov jle cwtl pop mul sahf dec cmpsb movsl mov adc xor mov fdivs and push mov or fcmove push stc ja inc adc in fnstcw or inc test sub mov mov mov xchg test mov sti mov pushf jae jg aas (bad) jae icebp rolb out int aaa ja out fsubrp fwait cltd sbb jle js les mov sub addl sub mov (bad) xchg xchg inc sbb add xor movsb rcrl cwtl out arpl pop dec loopne fmuls (bad) push push mov cltd pop dec pop popa psrlq pop fsubrs cmp add or mov sbb mov rcr ret cmp jmp push outsb cwtl addl mov push cmpsb aam push cmp add xchg or push mov mov sub mov push mov inc mov test not clc std mov les dec cmpsl js adc add jecxz das mov (bad) jmp push fildl out fmull dec jns xchg aam mov push mov cld popf mov pop pop adc cmp (bad) jo sub lret test cld push pop inc sub mov push test scas inc xchg xchg leave mov jbe cmp pop and fs pop dec dec data16 pop fmull mov pop jge scas pop popl mov push cmp fistp in dec and notb js insl test imul and inc fistp add inc sub icebp outsl mov mov gs fildll mov (bad) div inc cmp sub jo dec push jb sub xchg mov xor adc xchg pop test lahf sub aam and pop and cmpsb not hlt add in sub js test dec (bad) dec and mov xor lret out (bad) mov mov test cmpsl or push mov stos fiaddl jp mov push adc xchg movsb mov or adc cmp sbb cmp cltd xor loope xor lret jbe insl mov fbstp jg xor inc sti fdivrl adc and xorb add les pusha dec xor loope xchg xor mov xor decl add add fwait or out std ret adc mov mov sbb mov jae fnstenv in loop into xor nop fisub das push cmp lods mov repnz mov lods jnp sbb insb fstl cmpsb mov (bad) xlat xchg icebp sbb and mov cmp dec (bad) xor adc pop push push push push jne adc (bad) adc or pop movsb dec fsubr cltd dec sub test sbb inc mov bnd pushf or rcrl xchg loop (bad) mov mov mov ret stos pusha pop insb lods jle aad pusha adc mov pop pop jmp add inc outsb (bad) sub pusha daa in (bad) fnsave aas sbb andl xchg icebp add xchg lock xchg icebp and ret or mov xchg icebp add scas loopne cmp icebp int (bad) adc xchg arpl mul sub lds (bad) mov sbb fs (bad) js xlat jecxz fmull shrl xor cli call arpl rolb xchg jne (bad) xchg std leave test jo dec ret pop pop repz cmc jnp ja fdivr dec iret jb push dec jo push (bad) and jnp or xor push ret cld in ja add sti jmp mov out popf imul repz faddp fstpt outsl loopne fistpll jmp lret add push loope rolb jbe (bad) mov jmp push das pop sbb loopne fmull popf push aaa mov mov out movl ljmp in out push ss inc xchg add je cmp jmp ljmp leave jl xchg cs in sub cs sub stos lret push pop stc lret cltd jmp (bad) xchg and fcmovb pop dec jo leave jne stc add add jg aas mov mov pop jns cmpsb (bad) mov push sbb lea js sbb jp xchg pop and or and sbb push test jb roll jb and lret imul repnz pop cmp xor mov imul xlat std fsubrp neg xlat (bad) iret sti hlt xchg xchg or jl mov imul insb cltd imul sahf jecxz dec xor ror mov xchg test mov adc dec adc loop mov repz (bad) mov das mov push adc add test sub inc xor aas and adc lret sub xchg loop int push clc push loop dec cltd out int jns iret jo inc clc adc jg clc mov cmp hlt xor insl lret ret ret mov sub cmp cld inc jno mov or (bad) mov push push xchg mov cmp jbe in cmp mov mov mov sub mov je int (bad) jg icebp ret jp mov das push add les sbb lock scas pop mov or inc mov cmpsl sub add adc inc scas fnstcw ret sbbl cmp loop cmp push pop ss cmpsb jle lds dec adc push sbb cld data16 dec jo ja fadd fsubl sbb lcall cs in sbb and mov lret dec cwtl inc (bad) mov sub adc dec push shr sub xchg mov push daa jnp enter pop cmc test xchg pop clc movsb sub sbb orb push (bad) sub popa popa sahf cli inc ret jmp imul adc aas jmp cmp or call fs sub (bad) decl ret add hlt lcall xor dec push xchg cmpsl in adc pop std insb push leave ret inc xor inc or idiv outsl daa lock (bad) outsb xchg lret add sbb cli push cmpps daa gs xor pushf adc iret imul hlt jge adc out mov (bad) dec js iret adc stos cmp iret mov in adc jns and loopne push lock pop fs or mov mov test call orl pop test mov xchg loopne push pop jp mov push popf shlb jle jnp push mov lcall jge out imul stc cmp fidivr mov jae popf jmp (bad) jns jno jnp sbb std in push cltd ja es cli mov (bad) pop out sbb pusha pop pop mov dec test dec and mov or push in mov jp sbb jns add (bad) jo dec stos ljmp test pop clc in aad sub nop or lods movsb mov inc push or dec adc rolb cmp out cmp jb push push lret pushf loop xlat test pop lods push mulb add mov sbbb cmpb push xor mov mov inc adcl test xchg push or fmuls sub sub cmp pop inc cwtl jo and pop or test push mov rep dec mov addr16 std adc lcall (bad) arpl idivl lock sub js sbb scas jno lods rcll mov test sbb sti popf out rolb (bad) cmpsb or pop inc mov sub and ja push xchg xlat je jecxz sub push mov lock arpl jns lds adc add test xchg push fldlg2 sub xchg mov out movb and fs ss mov sub mov pop push aas lods (bad) mov cmp repz sbb das mov shrl lock cmpsb inc inc ror add test mov addr16 mov sub or and adc inc mov in arpl add push test mov ds dec movsb (bad) aaa dec sar jmp add in (bad) mov insb popa mov ret ljmp pop jecxz ds rcr sub or xor imul das pop inc xor inc addl push or and xor or mov xchg cmp pusha sar cmc shll rclb js jnp iret data16 adc enter aad insl (bad) xor cmp or xorb pop inc sbb push mov cld and push pop test lods outsb lret mov mov ret dec testb xchg pop cmpsl fwait or arpl ret xchg movsl jl push in or dec mov inc test movsl stos push fdivr inc xchg sbb cmp jge xchg or lock sub mov test push test or inc enter rcr or sarl aad les out fnsave lret cltd adc or loop lods divb adc add adc mov aas mov jbe popa lcall pop push ret (bad) push mov inc in sub pop dec cmp nop pop test mov or popa aam inc mov (bad) popa push stos jge out sbb fs adc mov sbb dec mov inc jnp xchg cli or dec popf rclb cmp sbb mov push mov jo mov mov in out xor ss dec push or cld or outsl push jnp lds insl inc out or ret popa (bad) pop mov push into outsb nop lock lea and jns (bad) imull fistpl nop mov xor je fmul dec (bad) popa adc mov and xchg inc rorl decl pop fwait cmc xor mov mov cmp mov sbb cmpsl std jne xchg rorb inc sub push sbbl add or jmp pop sub mov (bad) or movsb cmpsb pop push and div inc mov mov ds lods pop pop ret pop loope mov into test xor cmp jbe pusha pop jg imul pusha imul xchg mov dec movsb into and push scas aas roll (bad) sub xor loopne inc jae cmp sti sub push aas mov and (bad) dec sub dec add jne and mov xor jb xchg lea or andl das mov les adc or sbb push or mov repnz pushf sub lahf push pop inc push pop inc dec cmp jno mov ss rcrl je dec or (bad) mov push repz sbb cmpsl push aam mov jno mov xchg or out adc (bad) xor xchg cwtl lcall cmc cld lahf mov movsb mov and add int test ss push sti imul dec push mov jo dec mov and dec mov jno iret insb mov movsl imul divb xor adc decb push xor push dec xor arpl stc jge je loop and xchg xor dec test sbb or sub call or sti mov cmc stc inc imulb cmpsl mov shrl lock sub pop not xchg xchg mov ds inc arpl mov ret dec mov and mov inc dec div mov mov fstpt stos cmp and push push push ror mov sbb imulb and into dec or cmp stos jb fidiv shrl lahf lahf dec stc stc mov push aad cld out cltd jp sub rorl pop stos scas movsb stc mov mov sbb lock cmp push and xchg add or mov mov popa push lods jbe int jb and lods movsb inc mov (bad) xchg and test test loopne (bad) cmp lds cmpsb pop push mov sub adc or lea fwait (bad) je sbb (bad) xor push es insb jb scas fldcw mov loopne add push add xchg push mov jmp pop jne sbb push test arpl adc outsb mov mov cmp incl pop fcomip into ljmp jg dec mov dec insb int3 xor mov sub or adc (bad) mov inc xchg mov lea adc aad rcrb pop xor jmp fsubr mov cli push mov aas dec jo cltd es std dec aam dec jae (bad) mov mov pop stos adc cmp cmp sbbl push out addl xor xor add mov das lods jp jae stos aad stc cwtl sti cs mov sarb mov lock mov mov mov jmp cmp enter sbb and pop inc loopne pop lahf cld popa xchg cmp or mov imul data16 inc or add imulb dec outsl pop fwait js pop (bad) iret sub add mov jp mov sub mov push jbe test data16 jmp mov dec les xchg andl sbb xchg sti jno bound mov insl push cmp clc out dec out pop js ret jnp (bad) enter push faddp fxch sbb jmp cli lret push mov mov inc cmpl xor mov xchg push inc lods pop arpl mov in adc sbb adc jle out push pop aaa in xor fbld daa mov mov aam and data16 int lds data16 xchg fs or icebp inc test data16 daa mov daa dec fidivr cmp jecxz jne jle les adc inc negb pop mov out or sub out insl mov (bad) and add xchg fidivr xor pop push mov dec push pop (bad) imul add xor sbb inc jns xchg cs jno push xchg and dec sub setbe insb push add jg add ret add int3 int jmp and pop jl in test jns hlt add xchg inc in rolb jp mov add adc and and xorl outsl sahf lahf dec mov xor sbb or out adc je inc (bad) ror ficoml cli das pop fldt adcb mov add (bad) push jmp pop lcall dec into mov mov loopne imul ljmp pop add mov iret add cs lret fcomi call mov push dec pop jmp std mov inc enter mov mov imul pop lcall jecxz neg ss adc out mov je clc mov push jmp push aam ds hlt sbb add scas dec xchg and jg mov mov push repz out mov inc dec lahf icebp sti rcll mov and stos faddl push and dec insb push sbb sub ret pop dec shrl mov ret fwait test dec dec sbb scas (bad) repz fcompl ja sti xor cmp mov outsl cmpsl daa dec pop cmpsl inc pusha push frstor enter outsb mov std jbe mov mov xor loop mov sub in adc mov fwait insl fldenv ja dec mov lock add inc test dec push std es sbb (bad) mov jb call and ficom push repnz and and dec mov adc and insl inc std jmp in (bad) hlt inc mov add adc sub aad int or fildll inc pop int3 or xchg xor mov sbb lds enter jns jg mov lret fwait adc sbb stc sbb insb jge (bad) gs jge sub add rcr stos je sahf pushf sarb cmpsl mov das (bad) mov xor xchg xlat pop xchg out out xchg jl mov sbb fwait rcrb (bad) sbb test insb mov loopne gs das adc adc cmp inc (bad) fisttpl mov stc xchg outsl aas lea or jmp add rcr icebp inc and push xor out or xchg je cmp jl add sbb fs stos aas loopne pusha ljmp jl mov dec cmp cmp mov mov test xchg movsb pop xlat dec clc mov mov mov popf and testl mov in sub call push inc pop mov cwtl lcall xchg sbb fucomp je push iret outsb xor mov ss fildll or scas fldenv rcrb inc fsubrp or movsb push pop add mov cmp jl jb fsub xor addr16 jge jp jae cmp xor lods mov xchg (bad) fiadd xchg xlat loope es sub inc gs pushf xor cld stos xor out jbe std mov (bad) gs and xchg mov push adc aad dec outsl fiaddl popf xor mov sub push jp inc test (bad) inc push push push aas push cmp int3 and add mov jp pushl xorl fmuls (bad) js mov and cmp lahf cmpb pop fadds pop mov or es add sbb add es retw xor cmp push sbbl and in int cmp adc push addr16 mov jp roll fsubs jb mov lcall mov roll shrl jl jne dec mov mov mov jecxz inc stos xor shlb mov and push adc lret test xor aam fmull jge imul pop loop lret popf pop loop pop into jmp pop pop xor inc ss call sbb mov dec push and btc or xchg inc jns in stos mov push pop xchg sarl inc jae mov sub das xchg mov jne out push ffreep mov (bad) xor adc mov ficom mov (bad) push bound ja ds or adc mov aas mov jg push pushf sti mov mov cmp xor (bad) inc addr16 inc stc sti add (bad) mov add es hlt push add movsb fdivs (bad) and leave cmpsl inc push adc xor mov mov and inc mov sub sub stos and xchg aas pop and inc jne and or add loopne mov popf sub fistp addr16 jne xor out jns push and dec fistpl mov mov loop ret mov popl pop aaa jo test fs jno fadd adc push mov cmp int jns cmp mov imul cmp cmp add mov loop cmp daa decl push jae lahf xchg xchg lret frndint pop cmp cld enter (bad) lcall or pop je lcall pop test imul loop cmp mov inc adc (bad) jns movsl mov and mov xor adcl dec push sbb aam xchg gs lds stos mov mov test mov fwait xlat cli jo cltd clc sbb xchg incb add mov sbb or add mov sbb sub loopne sub add add test mov xor push addr16 jae test pop popa inc adcl xchg push ret es sbb or xor dec loop data16 sub out adc outsl ss ja imul stc lcall ret xor dec in dec es xor ljmp mov icebp cmp shlb call (bad) sar mov aad jl inc into scas addl mov aaa xchg dec mov aad adc cmp xor and negl addr16 ret enter mov ja fucomip out je cmp jmp in mov outsb pop jp mov jge xor mov adc and pop pop fnsave std cmp mov test xor push lret push jb arpl inc pop call sbb and xor aaa ror sti out loop test push ret pushf mov pop in adc fwait jbe jo jecxz jbe (bad) mov push sbb adc outsb mov jg pop (bad) out mov inc sbb pop cmp mov and cmp push fisubrl add scas loope dec or decl jge cmpsb xchg es xor xchg rcll fwait bound push and jecxz inc and pop push test test andl fnsave push cli and bound lds jmp pop (bad) shll cltd mov jg push repnz (bad) paddsb push cvttps2pi ss pop pop ja push call shrb loopne inc aad push repnz in xor divb in jns stos sti sarl sub je sahf push in jmp and ds fs iret xchg xchg cmp push mov cmp jae outsb (bad) test inc and or push into xchg xchg mov fcoml mov scas sub fdivs jb jmp cmpsb in xor cli test lods jb aam frstpm(287 mov ja psubusb rorb imul jbe dec mov sub (bad) jle mov icebp sub insl (bad) jno daa mov lea mov pop mov sbb xchg hlt int3 rclb outsb aaa imul xchg mov push adc cmpl rorl cli test push std mov out (bad) or (bad) test fdivp negl cmc shr clc inc aas lret xor or int3 leave mov or mov cmp js icebp sub cmp mov daa jns fcmovne pushf sbb push pusha jl cmp cmpsl xor int3 jmp or jmp insb daa pop test rdtsc mov sub fsubrs adc out sbb (bad) daa rcr fcomps pushf inc negb cs mov negb (bad) mov (bad) fcmovnb cmpsb ja pop mov jl lret jmp icebp cmp (bad) ja arpl ss ret pushf push hlt lods xlat sbb lret cmpsb fbld jmp jmp orl addr16 popf sbb push in mov fnsave popf mov xchg out popa (bad) popa (bad) and out je or addr16 pop push mov rclw sbb dec daa arpl jns dec mov addr16 popf mov addr16 popf dec xor dec mov std push jecxz insb cli pop int3 cmp dec xor push jns and cld adc lret pop out ror imul cwtl jae dec into xor xchg dec in fild cmp incb jae push xorl mov repz dec xchg es xchg mov and je (bad) jb and pop fs mov mov sbb dec movsb jp shl arpl aad jns stc repz mov icebp jp push mov push pop jg or cmp icebp pop fs fwait inc adc jbe dec aas xor (bad) sub mov pop lcall cmp je mov jae xchg inc inc aaa repnz cmp aad in fmuls pop icebp sbb jno add cs sub dec push int3 cmpsb in das dec mov aaa sbb movb mov sub cmp adc negb push xor xor cli sub add movsl mov mov pop fcomi loop xlat xchg cmp add add push dec popa dec cmp popl push sbb scas add mov pop jne pusha xchg stos pop pop cwtl jne push mov cmp inc inc dec pop or in adc loopne data16 push in jp ret or je movsb outsl rorl push js mov or cwtl icebp popa mov push adc rclb xchg jg xor or jno add mov inc pop mov aad add push pop adc sub aad and sub sbb mov mov mov push cmpsl jbe out lock int3 lods cmp out xor mov testb clc in mov icebp test jle rorl scas pop mov cli (bad) iret outsb fidivr icebp clc les stc lods adc jecxz push inc cmpsl mov adc jo out std pop push push jp cmp clc dec gs call ja std pmaxsw mov cmp pop stc fsubl arpl sbb cmp push xchg int or lret push imul lods mov xor ds mov push cmp aad (bad) inc adc push cmp out push and mov xchg enter clc aaa aad fcompl mov sub outsb mov mov adcb inc pop mull aaa mov fmuls push push dec rolb pop loopne mov cmp shlb aas sbb int inc mov sub les sbb sub mov lcall fadds fisttpll ljmp dec xor sub inc into adcl add push mov bound cmp xor adc cmp or mov dec mov jns mov jmp and (bad) and in popa inc lret (bad) push jae dec xlat addr16 std sub push push gs jo mov jns dec lret or mov cmp pop sub sti shlb mov scas insl aaa js cmp mov cmp cmp shrb mov mov in popf (bad) in mov into frstor dec rcr mov pop mov jp push jo push add addr16 cltd adc sbb add movsl cmp sbb (bad) and ljmp (bad) xorl (bad) dec mov xor loope sbb mov pop sbb adc mov roll ja ret pusha (bad) and or ret push add adc push or in bound pop test xor add dec fildll jae or es cli ja push into (bad) lea adc (bad) in rolb mulb inc pop xchg mov add cmp into and cmp (bad) inc fldt mov add push xor cmp mov mov adc sbb mov (bad) jg cli pop leave (bad) rorl push pop outsb and jae jle ror inc adc into sbbb fwait lahf movnti add xor popf cmpsb fnstsw push dec mov movsb outsb ljmp cmp lods inc add pop or or xor jp pop js or mov nop inc lds jge fbstp mov sub (bad) mov sbb ja lcall fldt js sti mov sub xchg inc mov stos jg subl daa faddl inc lods jnp adc mov in and das pop sub lea (bad) mov adc mov mov jbe jbe lret and xchg xchg jge aaa out adc loopne je movl rcr and and pop mov aaa in jo pop mov rcrb pop shl and stos xchg dec (bad) push stos or pop mov movsl (bad) mov inc loope mov or int not dec jg lret add popa mov (bad) iret xor fldcw (bad) pop test xor into or cltd dec fs cmp je add lock inc clc add sub in nop push out roll stos and (bad) jo mov jne jp push (bad) push pop push add int lods xlat add or fist inc scas jp inc mov (bad) insl adc xor add lcall jae and std push je xor out pop cmp and cmp (bad) cwtl lret lock cmpb int mov dec lods pop jb adc mov loope fcomps xor inc jo std fsubrs cmp inc push and mov push and loope xadd test sti int call lea mov and dec pop sbb mov mov or add lcall iret ret aaa pop mov arpl popa in add outsb push add in je out fwait les faddl lea push mov adc cmp jp addr16 inc push xchg jmp xchg sti test roll cmp and scas sbb inc (bad) out movsb jnp es jl sub xchg or or pop out cmp jne push jge fidivr ja ljmp and enter sbb cltd ret ljmp push insb and dec and scas sbb fwait mov inc pop mov ret and adc or stc or sbb into fstl rcrl sub test sbb inc not add add lcall icebp add test in rcrl push jo ret adc mov cmp stos lea int xchg aas jno fiaddl (bad) cmp hlt loope cmp pop fildl insl or jae repz cmp popf outsl popf out sub sub pop ds iret push les push and xor addl cmp arpl repz mov xor mov aaa test mov dec pop xor test out pop rolb imul ljmp dec adc in mov aaa sbb stos sub call popa push inc hlt push (bad) clc dec xchg push xchg push (bad) or and pop mov je (bad) rcr mov imul push (bad) push add mov add mov push adc adc out mov jae mov fstpt inc and add ret or rcl push sub ret xchg cli push lcall sbb rorb push decl inc mov sbb sbb sti rolb xchg fidivr (bad) pop lar push add shlb xchg clc fildl or (bad) mov xchg push push lcall jo push push xor mov fstps push lea xchg lahf cmc movsl sahf jge into inc test dec sub cmp les les ret mov movsl mull cwtl adcb popf icebp imul sub inc cld inc nop jmp xchg enter fwait or cs cmp lods int3 or mov mov inc adc mov popa add pop pusha sbb mov (bad) aaa testb push mov (bad) jbe test test cwtl xchg or and movsl sub dec dec and cmp cmpsb and jns mov mov enter mov or shrl cwtl sbb hlt or js mov lock rcll repz or les dec mov repnz sbb sbb (bad) adc out popf shlb out push cmpsb and adc dec mov push iret decb inc xchg push call sub push test adc fst sub jl sysret lock sub cmpsb xchg scas popa out pop out adc add enter cld mov pushf sbb push mov xchg pop push lock sbb xor das inc pop dec bnd and fidivrl jnp shrb sub in loop push mov je cmp add xchg ljmp js shll stc xchg nop inc inc dec daa (bad) jl jg mov or add or inc dec pop outsl lods pop lods and (bad) ficompl cs mov push adc mov jno pusha std mov pusha repz aas ja lret sti mov jbe pop add cmc fsubrl lods jg out fcompl jecxz shrl xlat cmp leave cltd mov lcall pushf inc or paddusb aaa loope fs imul lcall ja scas (bad) cmpsl add push mov jmp push or pushf jae outsl and fadds negb dec mov mov loopne jne rolb or jmp mov pop (bad) outsb cmp lds cmp fsubr fs sbb inc fsubrs inc dec bound (bad) or subl cmc cmpsb add jg ljmp mov push sub lea out movsb jecxz cmp iret jno in loopne dec pop scas mov adc insl dec and fwait or push (bad) pop and mov xor (bad) mov push ds mulb fnstsw fs cmp push jmp test mov fisttpl mov or adc sbb adc sub cmp insl dec jp fwait test loop fistl sti xchg cmp adc rcr adc adcl stos and bound push add inc xor (bad) xor mov dec mov pushf xor sti add les dec lahf insb rcl sbb repnz sub sub or rorl dec lods xchg test inc sub outsb rcl ss std in jne lret dec add sti incl mov and and lock or push loope inc sbb icebp push fldcw xlat push subb and insb xorb jne iret pop int or fs mov sbb or mov sarl imul out dec (bad) mov sbb mov xor jne push mov loopne icebp pop dec inc and ds sbb inc pop or jp or iret mov jb cmp or sub push in movsb xchg jb cwtl loop xchg insb stos je addr16 mov mov inc or dec mov inc iret test pop stc add jl push gs and inc xchg adc and pop add mov mov cmp jb in sub adc and insl mov xchg into inc push outsl add fucomip repnz fwait adc lods ja mov jae call inc and cmp adc and sbb jo jg cmp jnp push insl sti mov rcrl and rorl andl sbb mov insl and sarl mov (bad) scas adc dec (bad) mov test adc inc inc inc cmp cmpsl cwtl rorl cmp and mov js les mov cmp ret push add and in xchg pusha leave mov fisubrl stos addr16 adc and cwtl lret je in adc jns and aas cmp int3 (bad) xor cs xor leave sbb sub push mov sahf data16 xor into int3 jle test (bad) insb sbb fdivs dec xor lret xor and ljmp rcrb inc or dec xchg outsb or loopne push mov sbb scas adc cmp mov sub cs lea and sahf into mov and jb leave (bad) cmpsb decb mov cs scas je and (bad) cmp inc dec cltd into dec test lcall mov std push jo sub ficom daa leave mov clc dec adc icebp mov (bad) lret iret (bad) scas jmp push cs ret push adc test add push loope add cld push fisttpll xor bound pushf jge and dec cmp das in jp mov out je mov je popa notb into pop out popa xchg mov popa adc push mov xchg xor xor xor lret xor sbb xor mov mov cmpsl mov xchg fdivrs sub aad negb mov iret movsb (bad) sbb cmp (bad) loope pop dec decl or mov xchg pop iret inc in aas and jle adc sbb mov sbb stos stos jecxz jp mov in cmp movsb mov jae pushf dec push xchg mov nop test xlat insl inc xor pusha leave sahf enter push mov ja outsl jo hlt mov or xor pop pop aam sar xchg out mov (bad) or call xchg xchg fbld sub pop jg xor dec push sbb jp dec pop inc cmpsb add bound or (bad) lods mov (bad) int add sti in or data16 or sub adc arpl leave and outsl xchg in fcompl stc arpl cmp jmp mov movsb insb jo jns (bad) adc push repnz in test mov mov test pop cmp pop aam dec rorl cmp or arpl jne mov adc andl shll enter jb jmp hlt adc jmp push aas lds lds test pop adc in fisubl lahf jbe push jge lock test fs popa rorb pop (bad) jb aad lock jl push test pop sub imul pop mov jl inc imul push imul push sub push je adc add cmpsl sub (bad) mov sbb pop pusha loope movsb push out pop and xchg dec data16 inc ljmp xor xor sub push jno (bad) sub jp test mov adc dec (bad) jle inc stos cs aad in sub xchg aam and xchg push loopne or pushf dec push mov sahf cltd pop adc aas pop aad movsl stos std inc cmp push cmp jp stos mov cs cmp repz inc jb movsl sti mov lret je add popf sahf push or push (bad) mov push add mov ss cmp pop sub xchg outsb mov mov test cmp stos jmp in test fsts and insl and decb je pop sbb push int3 rolb idiv ret or mov movsl lock fiaddl mov push loopne movsb stos mov popf arpl loopne jnp mov iret push outsb add test inc sbb xchg xorb incb and ret clc call imul inc xchg jl mov sahf sub pushf xlat xchg add cmp mov mov jecxz push jle fistp ror out and (bad) dec sub xchg jne jge dec es ljmp es lret movsb jb mov stos pop movl jns dec or sub dec jns repz cmp lcall in pop dec mov xlat popa into pusha (bad) lret push jns fiaddl xor arpl push jns mov ds cmc sbb sbb push dec cmpsl loop stc push inc scas mov daa (bad) stos into movsb jge cmp adc xchg shll xchg std add iret call (bad) fsubs icebp mov mov inc push call rcrb les sarl xor stc sbb out out dec aas pop sbb add std sub int repz jle jnp cmp jb daa or out push xchg inc mov inc cld arpl push mov inc mov movsb sbb inc sub xchg or std jo pop mov imul cmp (bad) std or (bad) fbstp jo das jl xchg pop iret push jb gs test mov sub xchg repnz xchg mov xchg (bad) ja pop cmp jecxz stc std les adc cmp lock dec sti jecxz dec popa push jmp in mov js mov imul add popa push xchg push arpl mov add dec pop and adc and push imul rcrb into jge mov mov mov sbb mov out xor jo mov mov bound jmp out (bad) not jb cld pop pop mov pop leave mov (bad) loop add mov movswl sub add mov leave fsubrs and aad adc cmpsb sarl repz mov int imul dec (bad) je xchg mov (bad) das jmp sub mov out inc cld fwait pop mov lods adc adc push sub shlb add sbb pushf loop or cmp xor bnd stos clc test push out sarl sub cltd testl out icebp aaa mov jge inc (bad) scas adc adc jg xchg jmp xchg shll stos mov and hlt rcl jl aaa outsl je repz dec cmp iret test mov stos mov (bad) pop jecxz adc sbb ljmp mov aaa mov mov dec sbb and sahf fstpl xchg xchg mov mov mov je and push mov inc stc pop mov push fwait inc fsubrs cli adc fcmovnb mov insb std dec jne mov xlat push loope xlat rorl addr16 mov push pop into insb lret int3 inc (bad) and dec push sub mov sub lea insb and push call loope and ljmp shlb pop adc enter fnsave mov lahf fmull jmp or test xor sub dec aaa xor test std xchg xor mov dec adc jmp cmp (bad) je hlt sub or insb arpl inc icebp push mov scas into mov cli ljmp cmp cmp push incl sbb in xchg fs mov loop stc xchg add dec sub ret mov mov cwtl pop pusha loope or jle psllq roll mov pushw (bad) xchg imul stc (bad) (bad) jne repz jmp rorb in push pop cmp inc adc nop addr16 pop cmp sub popa xor dec xchg mov popf or xchg in sub out ficom insb fstpt (bad) ss sub push sub fxch movsl shlb sub push vcvtdq2pd push mov movsl insl jo dec (bad) fadds out sbb jb incl js in pop dec mov out incl sub hlt inc jbe xchg popf cwtl sbb xor clc and dec sbb mov dec sub add in fcompl or xchg mov push push mov movsl inc sbbl inc andl rolb cmp (bad) out xor and fldcw lods add lcall imul fwait mov (bad) in mov pop sub mov jle clc shrl pop push mov out dec fcompl (bad) mov scas mov xor les push ds lods mov cmp callw ds aas and pop loope or lahf pop (bad) jle pop adc sti les movsb sahf pop lds enter (bad) pop xchg cli xchg mov cmp int out ret lock jecxz cmp and jns je mov cmpb (bad) fcmovnbe add cld daa insb shll pop push dec clc dec fisubl and (bad) call sbb pop fdivrl enter aaa mov repnz icebp mov jno jnp or (bad) icebp loop out mov mov popl adc xchg pop pop (bad) cmp xor sbb fs outsl cmp add shlb adcb (bad) inc jg mov add fcmovbe cmpsl sbb pop aas cmp les xor mov icebp xchg mov jbe dec adc sbb mulb jg xchg outsb sbb xor enter je push ret xchg cmp jge dec adc ljmp scas mov mov jbe jmp xchg pop pop and daa mov sti mov adc lock aad ljmp mov mov pop (bad) lock jnp lcall imul setnp je lds notl fnstsw jmp pop push cmp xor jb inc mov cmp gs mov out pushf mov fmuls mov dec jmp aaa fisub mov ljmp pop fidivr or shr jmp mov (bad) cld cmp pop (bad) mov out push xchg out or xor inc mov test out rolb repz fdivs or adc xchg push push call sub out jbe push data16 fs xor imul jle test dec cmpl aam cmp inc mov cli dec das sbb push xor mov outsb mov outsl mov shll insl arpl fcmovb dec sbb adc test mov jns daa ret mov adc test push test dec mov aad (bad) sbb or pop pop out mov movsb pop sub cmpsw stc into jmp push loopne imul int3 (bad) icebp mov lods add sub ds cmp pop xor jecxz pop pop and jge scas imul jl and adc push adc out jp mov push ljmp fcmovnu and jne dec xor sub test in jmp add jnp jnp pop dec mov insl xchg cmpsb sbb xchg mov jp mov fcomi inc cli cmpsb mov mov inc clc sbb nop daa fistpl add mov adc mov int (bad) lock adc push xor sub (bad) jnp fbstp inc sub stos and popa dec jmp and popa loop jecxz adc fwait ja dec lods mov js sarb ficompl stos push pop xlat dec ret mov mov jns sub imul rorl jp inc xchg fdivl dec mov in (bad) and in popf push xchg and and repnz cmp stos inc mov cmp pop hlt cs cmpsl and xchg loopne lret sub xchg int sub mov dec xchg dec or leave bound out ret hlt mull cmpsl fnsave push push pop pop mov and cwtl xlat int stos test (bad) int3 cld cmp popa es (bad) clc mov and xchg mov adc rcr scas push dec (bad) sub sub dec pop cmp imulb jb and bound and and inc aam push dec dec shll cmp roll shlb fstl cmpsb push sub push jmp sbbl dec push scas lret movsb mov pop jb fisttpl and xor cmp inc push mov out movsb pop inc sub out pop fwait repnz loopne mov push mov jmp and lods add (bad) push sub ds push cmc push or imul icebp and push add pop lret (bad) lret (bad) dec mov sbb mov hlt fdivr mov push sub lods outsl sub pop (bad) sbb sub cmp out inc loopne mov pop imul inc lret push mov sub mov or jno xor add inc enter push in jnp mov movsb xor jmp fwait xor sbb (bad) icebp lods inc pusha in add push xor push movsb les loopne and movsl aaa dec ljmp mov xchg cmp inc cmpsb lea loop lea fisttpll pop inc lods fs jno movsb adc gs xor enter xor out iret jecxz adc dec test push fwait iret in mov or insl add or leave (bad) fs (bad) lods xchg and mov shrl mov inc leave xchg repz or inc mov or rorl arpl inc sarb in ja mov test fldenv mov mov je push nop xor repz sub fist ret dec or jle movsb mov mov mov xor add std or mov lret out xchg dec push mov xchg pop lods mov dec jns push (bad) xrelease and xchg xchg (bad) mov and and xor mov jg mov int3 and xor jb cmpsb or push xor mov clc movsl push sbb imul negl nop gs mov test lods aas xchg add mov mov insb in or mov or sbb adc sbb cmp sub push push cmpsl mov mov sub dec mov sub ss ljmp adc dec mov (bad) shrl sbb mov leave xor mov jle add pop and ret mov xchg xor dec fadd add push dec sub bnd pop fs daa jb sbb mov push jbe or test jmp inc or inc jbe cmp lret ss and jae pop ja and int jg and add lock subl adc ss leave shrl lds push adc pushf add jmp mov mov sub pop lods push je push in sbb rclb fisubl push incl pop outsb cwtl jns mov jno movsl push stc pop in pop xchg mov jno pushf pop push mov pop mov cmp out mov (bad) mov movsb pop cltd nop mov mov mov out daa in or in nop cs mov xchg jecxz inc pop or out inc sbb mov bound fistpl sub pop inc xorl jg adc in stos aad int xchg int3 jmp mov or pop mov xchg xchg (bad) int push jae jg pop jmp inc cmp push (bad) sahf jge,pt jne (bad) movsl sti scas and shll into roll psrlw sbb int imull cmc sub adc fdiv add int3 cmp scas jle xor out and repz addb cmc dec ljmp icebp or add jo fadds push movsb and inc fwait out ss xchg mov loop std dec lock hlt fisttp inc mov lods sbb in adc sbb jnp mov fwait push movsl out jbe jp outsb dec ss add sbb inc dec out add (bad) jno pop std test (bad) jmp (bad) push shll or hlt outsb mov (bad) ds and jp mov inc cld sahf sbb adc mov cmp test fsubrl and lock xlat test popa dec cmp insl or jno and lret and out or and stc and or mov pop sub dec or sub inc pop stos scas or movsb add cmp sarb dec (bad) popa in mov aaa loop das pop dec dec adc mov fadds inc push add xor jmp fincstp cmp imul mov mov mov decb addr16 stos cmpsl pop jp cmc movsl into lret out mov cmc ds enter cmpsl dec das pop mov jle (bad) sub and es cmp cmp mov lea add jecxz jno lods push sar xor adc cmpsl loopne mov push enter sbb das jo add adc icebp jge sub xchg pop rol repnz mov repz push jno popf test adc lds sbb pop or clc pop pop xchg mov or sti jno sub pop inc and jo scas mov nop pop popf or jae pop test int dec jne ljmp test lock xchg (bad) leave jnp xor insl jns das lahf scas jg ds dec adc jp jb jge pop shll mov (bad) outsb cli ret and mov es movsl shlb int imul (bad) jnp xchg scas sub adc ret fdiv mov (bad) and mov pop daa or push and ja and mov or jge cld jle cmc cs roll jle (bad) and mov das xchg pop addr16 shrb cmp bound imul mov push inc hlt mov dec les leave mov jmp mov jo popa jl pop mov lret insl pop mov daa pop fbld jg lock sub adc adc cli es rolb shlb cltd test dec xchg or test stos imul gs mov and xor add clc push mov adc enter loop fdivp mov jge mov lods cmp mov xor xor dec sbb pop fisubl stos rclb out xor lods (bad) add into inc xchg mov xor stos push adc bound in pop cmc sub jns xchg xchg jae push aam xor aam add pusha mov hlt mov adc mov (bad) lret scas mov jnp pop sub fist dec xchg mov jg aam jl pop in pop loope xchg dec lcall push lret mov cmpsb out jnp loop mov imul cli out inc jmp loope sarl popf and pop xchg pop add cltd leave data16 sbbl pop mov add in je enter sbb daa lods sbb dec push jb mov test test out xchg pop ljmp out sub mov and and adc and test cmc sbb adcb iret andb jno and (bad) jo pop mov mov and jle cs pusha xor mov inc dec jmp mov sbb aaa aam push clc mov xor leave cli lcall popf arpl adcl sub inc push xchg ror test addr16 pop inc std and cmp pop repnz loop mov xor jae lret ljmp loop push sahf in mov mov popa push jno,pn and dec popf sbb dec push stc nop xor iret sbb mov or rcrb mov int3 push loopne and dec ss mov xchg jmp icebp mov shlb popa (bad) daa cmpsb mov dec insb nop mov adcl add das in pop popf sub xchg mov cwtl jns sub mov sbb xchg adc fcmovnu (bad) outsb adc idivb data16 das lods and les dec jbe dec and add push insl ret adc (bad) jo inc cmp inc cmp cmp fsts out mov dec mov loop adc xchg push cmp jl test or xchg enter jecxz push or imul sub cltd stos mov aam push dec pop (bad) hlt insl xor std cmpsl mov addr16 into mov inc test sub imul jo pop adc adc leave and sub cmp aad cmp xor (bad) sti xchg and adc shl test xchg and es dec mov pop jb popa add movsl xchg leave xchg xor and inc loopne sub ret insl in add (bad) out push lods leave (bad) adc inc pop adc mov rcrb movl pop test pop pop inc in clc frstor fisubrl lret mov sub inc jmp lods popf cltd outsb in adc pop gs inc sub or stos add stos jg cmpsb pop jecxz sbb xor or and mov pop les cwtl sub imul clc add insl pop ljmp xchg mov or jne jo sub xlat icebp cmc (bad) outsb ret out sbb and dec fld out aad inc add sbb xchg ror aaa xor mov mov mov aam adc call lea movsl adc mov scas cmp stos into addr16 test mov ret in call testl nop leave xchg (bad) arpl fs xlat (bad) lret add ficom les adc jno jns mov test cmpsb adc fistpl in out inc stc popf pop sbb movsl add lods das add sbb aas fmuls cld add push xchg jbe daa sub fwait dec test push xlat es sti ds cmp cs std test ffreep fnstsw stc fsubrl jmp in xchg mov loop and loopne sti scas orb insb cld stc in mov mov pop or mov fucom inc push pop lret xchg mov stc mul or push or repnz xchg jo jae fnstcw in and insl test mov sbbl xchg lret loopne icebp fs ret xchg lods ja sub loop xor dec pop mov mov lea loope inc inc mov into dec lea mov xlat push std pushf loope jle outsb sbb push pop iret loope add fsubs mov (bad) mov sbb or cmp leave mov ss xchg inc sbb icebp mov out movsl dec imul fdivl xlat jae hlt cltd ret sbb and and lock dec repz test jb pop adc (bad) (bad) loope dec ftst push cmpsb dec jle (bad) push sub mov mov mov nop push sbb cwtl test test pop and xchg repz cwtl pop repnz popf push inc add mov (bad) call insb xchg pop in lcall sbb lcall out cmp pop sub xor ds cmp jns cmp repz in arpl jle mov dec imul lret in call mov xchg add jmp fsubrl cltd mov sub scas bound mov jno mov jecxz adc (bad) jno sbb aam mov pop or mov int movsb mov (bad) and scas push in jecxz lods lcall aam jne sub mov es and inc or pop jb popa outsb jae push (bad) ja jmp ret pop push mov aaa insl add in dec pop shll sbb dec ret add add push clc stos stos mov push (bad) cli sub cmc jb pop shrb addr16 push loope aad outsl popf aas fnstsw cmp and inc cs xor sub (bad) movsb out ss cmp and lock or xlat mov gs sbb (bad) lret pop jo daa xchg or aas iret mov mov clc lock loop sar popa iret (bad) in idivb and test sbb rclb pop cmp xchg unpcklps or nop jmp ljmp in pop movsl add rep addb (bad) jmp add arpl in in pop dec push lea les xchg (bad) cmpb jecxz fcomi add sbb inc sub inc (bad) ret jns out (bad) mov icebp je cmpsb clc adc mov aad out pop outsl scas xor fstps inc jle js pop pop xchg lret inc popf add and push fisttpll cmp push sar adc call xor stos push add jecxz add insl mov sbb loopne jnp aaa insb or pop addr16 leave add jns mov mov jb jmp (bad) jb,pt aad aad (bad) ja outsl dec or pop lock int pushf jno stos (bad) mov addr16 jmp mov inc iret std aad inc xorb cwtl bound push sub (bad) jb scas xchg addr16 sbb cmc aad jbe jge insl push push lret pop push mov jge ljmp dec cmpsb jg xorl ret psrlq fidivrl js loope popf into cmpsl and inc fstl pusha out mov stc scas pushf int3 fnstcw inc out xor (bad) fstps xchg lods mov jnp dec add outsl adc and sub pop pop sub xor movsb and mov cwtl xor arpl test jecxz lds test xlat and add inc cmp ss sahf lods pop cmp sbb movsl xor cmp cmp stos dec pop (bad) pusha ljmp bound lds in addr16 dec or pop xchg mov out (bad) test adc cmc pop enter bound popf stos stos in in cmpsl and pop xchg out call push sbb push jge jbe imul mov xor lock xor idivb fs jg xchg cmc (bad) xor dec into push jne inc lahf xor mov mov and or jecxz xchg cmpsl mov or and (bad) add call sbb lds (bad) xchg dec rorl inc push xor cmpsb adc out or mov (bad) lret cwtl mov clc jl pop dec fisttpl jecxz xor pushf mov (bad) sarl enter pop jb mov stos pop fistp daa mov lods sbb adc fdivr mov pop incb cwtl cmp adc mov sub (bad) cmp or rolb mov lret in pop mov sub xor rol sbb out movsb xor adc cwtl stos inc movsb push (bad) nop xor movsb ret jno (bad) incb movsb pushf daa enter outsl sub sahf sub xchg dec or shll mov dec cmp pop push (bad) jno inc (bad) jnp mov iret dec ficom sbb test inc sub adc cltd xor adc scas shll ja ds or lock xchg dec pop cli gs repz repz sub jge cmp jle sahf leave mov adc xchg sahf aaa pop inc (bad) nop dec adc jl mov dec sbb mov loope mov aad ja les pop leave gs dec dec xchg stc fild xor hlt int sarb outsb xchg aaa fidiv jbe mov pop (bad) in push rcrb out aam int3 mov ret jl sbb xchg iret jl and jmp cs push ds loopne cltd mov cmp push mov pop cmp dec mov cmp (bad) iret mov (bad) xor das xchg cmp xor cli call xchg bound fnstsw cs jp imulb xchg pop lock in lock cmpsb sbbl aam jns cmpsb or jecxz stc push fcomps gs cmp jecxz or adc int3 dec rclb xor cli std add sub pop cmpsb jl outsl test (bad) roll stos repnz inc xlat in jl mulb inc push adc push jg,pt dec data16 dec ja push pop xchg (bad) and cmp push ja inc add adc cwtl in adc pop or pop and sahf stc xor mov sbb adc lods inc jnp in xchg fimull push mov mov dec sbb mov xchg adc (bad) das sbb ja aas sub adcl jl push cmp pop loop mov (bad) mov adc fmuls arpl adc (bad) jg (bad) sti into mov push std push nop (bad) xor das out xchg nop test xchg dec pop std data16 roll and fimul mov push mov sbbl das sbb test xchg icebp sbb ljmp outsl cld int cmpsb jp in mov in push movsl dec out fmuls push pop (bad) jns or or lcall push test xchg imulb adc out cld cli xchg inc cmp je add pop mov (bad) into mov inc test adc pop mov inc sbb push mov lcall cs cmp jl pushf cmp into fnstcw rclb js and jb pop push lods adc mov push lahf dec pop jge push fwait shrb hlt sbb dec sar mov int3 icebp pop adc dec cmpl xor addb inc jae pop xor (bad) mov dec mov cmp lock mov mov data16 aad add not mov das mov bound cmp or jmp xchg mov sbb jae cmp or into jecxz or repz push adc lea adc sahf inc movsb sub xor mov mov jae mov sub mov iret jbe mov add out hlt mov add push sbb push cmpsb and adc outsl scas mov shrl imul mov push cli mov insl scas pop cmp aaa cmp lret leave inc mov cltd enter lods and ret fdivs outsl out sbb mov imul repz movlhps cltd dec sbb jge lahf (bad) dec pop adc inc out dec test test bound and push adc outsb stc push inc adc call xchg or xchg (bad) in pop and mov in cltd lcall sub cmp popf xchg fidivrl dec push pop mov test jns aaa mov sub dec cltd ret or xchg std out inc int adc stc mov push and into push outsl aam xchg jno,pn xor mov sahf and push cmpsl xchg cmpsl xchg andb test gs aam push lock je scas test int inc add imul das pop push mov mov mov push jecxz xchg out test fisubrl and sahf inc shl ja or fmuls incb jbe jge inc add sti in js test mov xor repz mov lahf inc mov push dec call adc cld out pop lahf sahf sarb popa add fbld orb cmp fs cmc cmc sbb push mov je fdivrs sub insl cld mov cli sbbl int3 faddp mov movsl lsl mov sub movsl fcompl out cmp shlb push fbstp mov sbb loope or push fdivs push xchg and sub (bad) sbb pushf rcrl pop add repz push jns test cmp lods or lock stc fwait jecxz sbb repnz jp jns test rcl repnz repnz (bad) pop clc pop fsubrs mov xor jbe dec cmp ss loop cmp dec mov pop cltd cmp xchg sub and xchg leave jno inc jnp fistpl sarl xchg movsl sub insl lds cmp mov mov mov mov mov arpl lea lea sbb inc jbe xchg inc (bad) dec xor bound lods sub imul sbb sbb mov push popa mov mov sbb test or (bad) push jno xor dec fistpll or addr16 dec aad adc cmp inc ret sbb mov int scas hlt fstpl arpl inc cmpsb xor sbb sbb dec cmp push out iret jl,pt jbe enter lcall lret in jge dec mov lahf ret aaa cld jp mov pop loopne pop adc add inc cmpsl sbb xlat fsubs add or pushf mov or xor andl mov or aas stos dec rolb push and push or inc pop jp xchg cmp imull data16 jnp into push fildll test out insb out in jns sbb aaa or ds popa cmp es mov pop dec jg inc or xchg sub adc sub mov and or mov les cli mov pop decb jno adc adc popf icebp div sbb jmp mov pop adc jns pop adc outsl jecxz push sbb mov in push inc sbbl sbb int mov into jno ja sbb sbb daa jl loope icebp jge mov mov rolb mov cmp std and mov xor or addl int fs jb into cmp and test fs das push inc push (bad) sbb pmulhuw movsb lret mov (bad) imul mov pop pop push sbb popf sbb mov sbb sub ja jg jmp mov xchg sbb add aad push push push rcr xchg mov shr push test and mov cmpsb push dec sahf dec leave rcll popf xchg fs cmp xcrypt-cbc cmpsl push je pop leave cld inc mov dec rcrl and or cmp dec jb sbb jp sub ret inc jns daa mov pushf test cli mov xchg xchg xchg pop lahf xor mov inc jge movsl aam aad pop stos pop imul js jg jge in js mov (bad) adc imul and pusha and adc mov daa stos loop jb (bad) jno lret inc push add xchg and mov movsl dec addr16 (bad) lfs and mov call cltd outsb mov pushf or int3 fdivs cmp sahf idivl jo repnz jle loop scas sbb inc aam xor imul daa fdivrl ja mov outsb pop mov out mov dec mov and sbb es dec or daa cmp iret or and inc push das loop dec aam in cmp mov rclb cmpb push sbb loopne loopne adc (bad) sub loop sub ds add jge pop mov out xchg fdivrs mov loope int3 xorl pop inc ds fdiv inc add mov adc cwtl jns jl adc jno movl ljmp add out or mov xor scas int and (bad) or push das mov adc dec pop pop dec sbb xor aad xchg and pusha ret ljmp xchg out pop lods loop xor fildll lret outsb cmova jbe cli push pop jno fwait (bad) je fmull pop lret xchg sub add jecxz outsl xchg (bad) dec (bad) lods fwait imul out push jge dec pop mov cmpsb pop pop scas sbb ds jge jge out mov jne mov dec dec popa cmp dec jg add (bad) mov or push fisttpl dec (bad) xchg repnz in xor xchg mov mov xchg ret mov in movsb fs fisub rorb ret ret mov sbb jnp aad arpl and add lahf nop or jle mov inc push sarl jno sbb outsb rorl insb in push adc fcmovnb or xor jmp sbb loopne and outsb adc bnd mov mov xchg xchg xor in mov ret cld push popa gs pop sub inc and aad and cwtl jbe,pn pop pop shlb xchg (bad) pop sbb lcall inc sub inc pop dec add or popf xor (bad) push pop and fisttp in push call lea outsb inc popa out sbb into or fsubrs jge int mov jbe out sar imul xchg dec aam popa mov cmp lods push mov fimull les stos popa stos lret or pop shl add dec movsl pop movsb fmuls adcl lahf jecxz or fbstp cltd xor sbb dec mov fcoml mov das in sub mov adc sub xchg mov gs mov clc and or xlat shr sarb push mov out push add dec sub jmp popf mov mov mov ret fs sbb lcall rcrb out sbb dec or xor add aas mull js pop loop mov dec dec popf shlb sub gs adc lods fcmovbe iret outsl push jmp aad out idiv sbb inc push loope jmp cmc popf out push mov je jle cld push call lahf and dec mov sub loopne sbb push out loope xchg jno (bad) into inc cmp sarl xchg sub out inc pop pop call out or addr16 test pminub xchg fs mov and cld push pop adc (bad) imul insl push pop scas mov out (bad) scas aaa scas mov lods aaa jnp out scas inc addl jno scas mov sub stc cmpsl pop sbb or push cwtl fist xchg insl xor or and xor cmpsl leave add sti lods and xor cmpsb loopne out adc push into mov xchg clc mov mov cmp mov pop shrb das psadbw fsubl cmp or (bad) jns cmp nop andl in xchg push adc adc dec dec repz xchg jb pop adc sbb xchg xor (bad) mov ret out jecxz jb jmp add stc cltd arpl mov cmpsb xchg test (bad) jno mov frstor jb adc xor dec dec mov arpl mov jl repz sbb add mov mov mov mov jnp sbb push sbb xorl xor leave adc call (bad) adc adc in fcmovu je (bad) fimul aas jb enter in flds (bad) xchg decl mov xor ja sbb iret (bad) jle cld pushf xchg ds fs aam mov mov daa imul jnp mov cmp xorb jl sti lock repz jmp push cmpsl sbb mov cmp sub nop ret cli aaa test xchg les jno jmp jmp sub inc xchg ror dec aaa pop lret stos mov hlt out adc dec lcall inc gs shrl lret std mov mov les sarb hlt outsb popf adc or dec shlb xchg mov adc sahf jbe mov sbb sti inc in mov adc shrl inc gs jle cmp or arpl pop fsubrs rclb cmp cmp js fnstenv ficomp mov daa lock daa (bad) decb mov (bad) enter (bad) lds dec jne mov adc mov mov dec std adc sub (bad) or shrl or lea jg cmp std loope aas sti call sti inc sub jle mov aad mov scas ret mov aad and lds adc cmp into push scas scas imul inc xor (bad) sbb pusha inc jge test jno jne dec and mov lret rclb adc ret push pop jmp pcmpgtb leave push push fldcw aad sahf pop sub dec xor movl movl call mov (bad) mov mov pop mov push mov mov sbb pop fnstcw cmc and iret bnd xchg nop in xor sub xchg stos sbb pop sub int3 jl cmp subl ss ret and pop mov mulb sbb adc shr das pop sbb inc sub or or cmp adc lcall pusha das fcom je and loop scas (bad) stos (bad) xchg mov (bad) add mov insb mov imul and jne inc mov cs (bad) push xor addr16 add aaa fidivrl sbb test push cmp sahf mov repnz sub and sbb mov js insb mov ljmp in repnz imul mov cmc pusha sbb frstor cmp mov cmp imul push rorb cltd inc or nop pop cmpsb fstpl cmc sub popa pushf cs cld insb hlt and jl inc add inc lds and pop dec add movsb adc push sbb out aad ds and cmpsb shr fwait mov mov stos rolb hlt int3 add xchg xchg mov sub ss repz in sarb mov push ja dec cwtl add push add test movsl mov xchg das sbb ret lds xor mov dec test pusha fidiv cmp or arpl and outsl cmpsl les inc pop mov push jp sbb mov cmp das enter push adc das xchg ja in lds jg push popf mov pop xchg enter mov xchg jmp mov mov lock mov das inc (bad) mov mov add add or sbb jl add std jnp adc sub pop adc xchg inc xor adc nop adc sbbl cwtl pop or sarl xchg (bad) jl or pop and inc rcrl and and gs and repz pop gs decl rorb mov mov mov cltd leave aam movsb out add jb sub pusha sti mov xchg and mov fcomps fildll cmp cmp jl sarb jge and imul pop (bad) in pop popa sub not jo pop loop mov jmp aad add fcmovb dec inc (bad) into jno cmp mov (bad) sbb clc (bad) outsb xbegin fcmovu push inc aaa jne inc mov cmpsb jno fildl cli sub rcrb nop (bad) or aas rcrb sub out movsl and std enter cmp mov add xor jo (bad) xchg or xchg adc sbb shlb push fwait movsb pop sub pop and and jb jno les pop mov dec push and div sub push scas xchg sbb orl rcr jecxz mov insl cltd movsl aad pop (bad) insl fs pop cmpsb mov dec xor outsb and jno dec adcl data16 cld dec or push mov jle sub das mov lea xor rcr inc test xor sbb sbb sub mov xchg jns aaa outsb xchg jb (bad) sarl xchg inc and dec jle (bad) jbe rorl ds adc push or and inc push dec ja hlt pop lods push (bad) or outsb add mov jno xor into push jno ret pop inc in (bad) popf mov mov (bad) nop push and dec cmc pop dec inc mov inc gs sahf cmp gs push ret mov mov or rol loopne and mov pushf leave lds scas shlb pop sti stc movl ja pop leave gs dec jge divb testl sub pop imulb pushf mov lahf sbb fs push ds cmp int3 cmp cmp pop test aaa cmp loope imul out cmp imul jbe int and mov (bad) test shrl pop add ss dec and inc fwait pop jecxz lock int3 xchg mov jl xchg nop shrb cmp xor xchg mov xchg xor lret (bad) or ret xor addr16 popa inc fdivrl enter insb jb negl dec cli sti mov lods hlt cmp gs ss (bad) into and adc mov iret cmp xchg push dec add pop cwtl sbb (bad) xlat cmp mov xchg dec jns popa nop inc jo (bad) dec dec jle (bad) adc lods (bad) xor pop fimull cmp or jl jp push addr16 popa aas mov xchg or (bad) push int3 dec mov add push cmovno test cmc and push jae movl pop mov aam (bad) test fucom movsl dec push mov jne imul sub fiadd adc stc dec cli xchg jp sti mov sub and notl movsl dec in push data16 idivb ret lahf pop shrb jbe fistl jno xor mov iret cmc jle adc mov add or mov mov cmc sub in push mov mov sub adc sti mov and test cmp cld adc imul pop imul (bad) enter push xchg divb sti clc push jge cmp out call pop stos out push mov outsl sub inc adc sub sub push inc or mov mov xor sub xchg xchg pop jp sub js int dec insb sbb jbe out sbb xchg mov xchg in aad es xchg gs mov lret cli shrl in cmpsb fs adc mov leave cltd push mov fs pop ret dec push inc cs (bad) add add and add enter (bad) pusha addl fdivrl dec stc pavgb inc dec dec xlat jmp push push scas fdivrp fisubr lahf popa cli mov adc pop bound push frstor sub pop (bad) popf jo in sbbb call xor (bad) jne cmp push adc (bad) sub movsl and adc aad push xchg stos ret and adc push clc and jg jle test inc aas xchg jg jle test dec aas xor or popa inc insb mov push cs xchg pop adc mov ret inc push adc push jg lods mov jmp mov ds ja inc mov ljmp out clc test adc cwtl lock mov and dec loope loopne cmpsl test mov xlat sub or cmp pop or ds out ret mov mov iret or lahf adc and das or mov xchg ret idivl lods add insb leave xor xchg mov repz stc fwait jae ret xchg push cmp adc pop and pop repz daa push adc push mov add in leave stos push lds loope loop fnstenv sbb mov dec xchg loop mov movsl int aas pop je jle imul les (bad) (bad) push insb push jge xor testl push push push cmpsl test or enter inc pop sbb test movsl rolb cmp jnp cld (bad) push xchg mov push pop inc mov add mov adc dec movsb leave stc or (bad) pop cmpsl ret daa or jb xchg jno rcrb imul (bad) mov fmul adc enter ljmp pop rol add adc sub (bad) mov aad mov add mov xchg movsb mov les jp inc (bad) cld aaa pop popf test cmp scas int jl jg out lods popf mov imul inc rcrl jns mov nop pop fcompl mov std je xor cmp add cmpsb fxtract ljmp lret mov inc push rolb nop jecxz dec (bad) xor fcomps icebp sbb test xchg pop in jbe out data16 push jmp add (bad) imul mov add lret xor push inc inc mov in sub jle mov sub insb xchg outsb nop mov inc pop inc out cld xchg sbb data16 sti lea stos dec rcrb rcrb mov test and in xor mov jne adc cmp add dec aad push fwait ss inc imul out lcall pop test aad or jge sub or test mov jns jle dec dec mov push inc in sti sub cmp clc push push sub lret mov mov rcll rcrb sub mov mov mov lahf aad rorl aam mov (bad) xor ret aam stos pop test sar fwait enter xchg das pop arpl and jae mov ret ret mov inc cmp out pop sahf scas fidivr cs pop push pop dec and out je mov lret sub sbb icebp popf and cmp imul pop cmp ffree push sbb jnp mov pop adc shrb inc mov enter stc aaa rorb fldl pop (bad) dec mov dec pop loope fsincos jecxz int3 sub add movsl fwait xor adc adc movb xchg cmp mov mov lret xchg sbb dec xchg push lods mov daa stos xchg icebp sbb repz cmc jne enter and outsb fisttpl dec push dec mov cmc inc fisttp jmp jbe pop (bad) xchg or aad das iret in std in cmpsb mov adc lahf dec xor jl out addr16 int hlt cmpl std cmp mov icebp cld push jecxz push jno in and or jns out repz dec cmp sahf dec sarl popa ss repnz push mov stos rorl mov movsb (bad) (bad) int pop negl roll out add (bad) sbb int aaa dec outsb jp in dec cwtl adc cli dec inc cmpsb shlb pop push outsl das xchg cmpsl shrb popa inc (bad) push cmpsb sbb das push xchg adc iret std sti addr16 push cmpsb out fbstp xchg mov ja push leave or pop mov adc daa xchg push loopne orl imul jnp jle js or int stos xor loop sub dec (bad) ja push mov inc sbb (bad) or hlt (bad) rcll imul fbld ret xchg xchg xchg push xchg cmpsb aad insb (bad) jg xor mov dec roll mov ret dec pop ss sub test rclb sub add jp cmp or jecxz hlt adc mov pop adc cwtl js sbb mov adc rclb mov aas jl xor js pop pop xchg fstp mov xchg inc or shr jb data16 and dec cli cmp sub es pop jno cld jnp xchg cmp iret mov adc inc call and repz cs (bad) sub fild sub adc cmp hlt icebp cli mov jns test inc xor push and lcall cmp mov xor pushf lahf je fidivl sahf dec jns lahf mov mov cwtl adc jbe mov test add xchg mov pop lods mov lret sub cmpsb dec bound out mov xor scas mov xchg fmul fmul xchg xor and sbb pop or or lahf ss ficompl rcll fisttpll pop xchg cmc mov cmp pop cltd movsl shrb add fild nop pop mov jbe jle enter add sarb inc rcll insb enter icebp cmp push push insl dec fisubrl sub aad xor inc xchg mov loope dec inc push push orl pop or jmp add ret jmp inc sahf imul daa mov push stos pop sbb inc mov into sti and out dec cmp aam mov push (bad) xor das out int (bad) in mull push sbb (bad) jmp push xor mov mov lock mov (bad) xchg mov test jp and hlt dec and push mov pop sub stc enter cwtl mov add push and xor lret (bad) xchg (bad) dec or mov fist dec test lods mov xor scas jns mov sbb xor sbb mov push inc adc pop mov push dec jae mov icebp popa xchg mov inc mov mov adc add xchg lds dec mov xchg inc jo xor shr and into lods inc loopne rorl mov fwait movsb cli dec push xchg lret popa pop add icebp cmpsb xchg add pop adcl xchg orl sub jp imul cmp dec push outsl jnp and addl cmpsl cmpsb icebp das mov test xchg test adc xchg (bad) mov xchg je ret mov mov or into fnsave push mov mov clc in lret je jmp lcall andb sbb xchg ror rorl scas cmp push daa (bad) shrl push xor mov pop pop lret xor sub inc lret ret xor and in cmp push mov mov rorb inc je pushf data16 sahf shr test sbb xor sub pop or cld push xchg or dec dec (bad) jle pop outsb movsb inc pop aam andl or popf push popa in lret in int pminub daa xchg inc mov ss jge out mov or mov xchg dec stos popf mov add dec cmp stos push mov jb push pop xlat addr16 cmp xor adc repz and lock inc inc call mov mov loope add imull xor ds in mov int3 movsb ret cmp das lcall (bad) loop adc dec mov sub icebp ret cs push mov (bad) jl ljmp test inc out daa push push push movsl ficompl jno ja jle mov push sahf xchg cmp xchg adcl test mov ficoml movsb sti cltd pop push fdivs cltd xchg mov mov lods movsb pushf jp push outsl (bad) jge xlat mov sbb sbb pop inc cli sbb cltd cmpsb sbb mov push dec cmpsl (bad) xor and jge mov or aam xor inc inc push xlat daa mov inc sub mov mov sahf fcmovbe dec outsb aam lds jmp outsb ss (bad) push cwtl mov mov data16 mov ret xor adc es gs addr16 lods daa aad cmp jg xchg push popf cmp std mov ret pushf loope es sarb sub cmpsl jmp sbb movsb inc xor (bad) repz dec iret ja aad ljmp pop gs repz mov imul stc movsl (bad) or pop adc mov add out xchg push (bad) cmp test push mov pusha or test adc stos and mov lods mov pop int3 cwtl in dec xchg mov push cltd rol lods jl mov outsb lahf pushf jne popf lods jns leave imul push dec push imul ss add stos loope fdivl add mov sbb test out movsl cmp test push enter mov out cwtl adc movsb aad adc inc adc stos (bad) stos mov stos scas je mov inc jge and mulb dec sbb scas push mov (bad) dec jle scas inc lods cmp push jle sub push xchg cmp add lds shll and (bad) (bad) into lcall aas mov sub xchg (bad) sarb hlt xor jns add sbb push dec jne or sbb jmp xchg xchg mov mov adc fwait and mov jle int3 movsl mov mov jae pushf adc push jecxz cmp loopne insl imul mov jmp jmp popa dec mov aas dec sbb mov xchg in jbe mov adc fwait push dec pop sub pop mov ljmp cmp call fcmove mov xchg fist scas push inc arpl inc orb test push mov push mov mov dec out xlat jle rcll sub inc scas xor mov pushf xchg incb daa mov jns out fldenv call cmp fild mov pop (bad) fsts mov adc cmp (bad) call icebp xchg ficompl adc mov icebp stos push mov mov jl aam pushf data16 mov sarl popf out in fsubrl dec mov pop xchg lea push fcmove jecxz dec xor sub lahf call ret sbb mov mov hlt aaa outsb pop or (bad) movsb xchg cli mov test xor pop and jl ljmp mov lods mov mov or adc mov sahf mov add and outsb lahf mov sarl loopne cmc or mov rcrl insl hlt fdivl inc jge aam xchg jo leave orl adc das sar lahf pop rcrb and lret bound mov xchg inc (bad) call lahf sbb mov stos rolb lods and mov push popf es lods push push mov push fsubrl cmpsl push cmp jnp addr16 sub mov pop call add mov mov mov add icebp cmp push sub jae cmp mov les insb jp push (bad) (bad) sti nop fcomps adc adc vsqrtss mov cmp mov mov push fildl sbb pusha or or cld cli jecxz add addl clc push sahf add mov das add sbb sbb loop or and das inc in sbb mov jl dec mov movsb push dec add mov mov sbbl push lock xor cmp aaa lock mov mov fmul add adc lock outsl and sbb mov frstor call frstor mov push loope mov outsl pop add xor adc push std add jbe push add sbb inc or xor xchg fist dec jmp cltd pop int3 shrb lahf arpl (bad) jne ret bound (bad) (bad) (bad) push cmp lods int3 or pop dec mov sbb (bad) popf inc adc fldln2 outsb adc sub jg push mov cmp shrb adc pop ja sarl and mov xor imull mov icebp movsl ljmp enter jae addr16 inc notl cmp dec sub xchg ds (bad) out add adc add sbb xchg or outsb mov (bad) pop (bad) adc sbb or fchs inc xchg and jno fimul rolb into sti xor or xor in jne push mov fldenv or sbb iret sbb stos ret sub aaa ror fistpll add xchg dec push mov push and mov cmp push fsubl dec jle dec dec sub adc jno call jae or mov jno rcrl repnz mov es xor popa or pop inc xor decl sahf xor mov cld push loop mov inc pop cld sbb in lds ljmp js mov cli mov ret push dec add fcomps mov sub andl jns fs sub fisttpl sarb lret nop out jg ret dec mov pop popa int mov (bad) jg clc daa xchg ret sub push (bad) cmp or test inc cmpsb or scas in xor sti xchg push cmp pop jl push adc outsb jge das and xchg or popa dec push sub dec cwtl dec enter inc frstor ss add xchg insb or and xchg sahf fdivrl dec fsubr push (bad) out mov mov mov push (bad) cmpsb es data16 lcall cmpsb shll fwait sub fidiv (bad) popf or cld outsl fildl adc push int3 or mov adc sub (bad) data16 mov dec mov mov inc jo cmpsb (bad) out (bad) cmpsb sarb inc repz pop or sti add scas imul cmp cld (bad) add out sti (bad) mov or mov popa call (bad) popf inc icebp mov loopne xchg stc inc dec out sarb pop cld xchg mov je mov jl sub lea (bad) aam adc inc movb mov inc add mov loopne fmull push loop inc mov loop or or scas sbb int3 mov stos negb imul inc dec cmovp ja shlb loop or frstor adc push dec cmpl xlat push or sahf mov pop jnp sbb or cmp addr16 or add xchg add sahf pop mov sarl cmp in das cmc daa mov xor sbb fdiv xor or stos icebp call xchg or xor mov inc or outsb dec jecxz mov dec push cwtl testl add stc jg sbb mov jg push addr16 mov mov dec clc xchg out adc pop xor in sti shrb sbb mov pop int inc cmp mov pop lea (bad) push lock and and in insl leave mov dec xor mov and mov sub (bad) pop int3 cmpsl jnp jge (bad) mov test enter cmc std aas mov or daa mov mov lahf mov out shr xor lods or xor sbb test adc inc adc xchg fstl cmc jne shrb (bad) mov or fldt bnd clc loope scas iret mov out mov sbb jb sub into cmp sbb stos mov sti sahf dec sub leave pop xor lret decb mov imull fisttp rclb daa or movl movl aaa jae dec jae (bad) lea push mov pop repnz pop insl push iret andl push xchg clc push push mov sbb std or mov lock jnp jp aaa dec into movsb push sub arpl (bad) idivl aas (bad) jne fidivrl inc jbe out sbb cmp aas std push mov imul cld daa leave pop lret mov sub mov jae (bad) jp jnp es xchg and and mov fdivs sub fcoml adc add xchg mov nop and jb xor jns stos stos out push std sub pusha mov scas jp cmc ljmp hlt lahf adc mov hlt lock cmpsl and pop mov rcll pop lods xchg test int aas inc les icebp inc test pop or mov xlat inc sarl popa or jmp fisttpll in rclb aad inc iret or rorb mov inc sahf adc pop rorb jp jp jbe lock insl and out push jmp push xchg lea sbb cmpsl adc jmp mov jne push sti jb mov rorl inc fisttp dec sbb mov and xor push out mov ljmp dec sarb cmpsb fiadd fistpl mov push popa call inc xor dec mov mov sbb cmp mov dec inc (bad) in add je outsb lret dec ljmp (bad) icebp cmp testb jae and test inc mov cs pop gs stos aas popa dec sahf mov lahf and mov aaa pop out ja dec out and xor hlt dec cld scas sbb cwtl or ficomp hlt ror lea fisttpl push mov repz jbe xor ret fidivl jo call outsb xchg jmp mov outsb add leave scas cmp mov cmp add icebp add pop mov pop push arpl pop in adc or fidivl xlat add jg aaa pop in mov jns pop mov cmpsb xchg xor and stos adc inc jno inc repnz inc bound or xchg and repnz dec aas push hlt sub loop shlb je icebp jge ljmp in push fwait jmp mov std xor out dec es mov aas lret mov inc mov mov push mov inc adc sub push lret cmpsl xchg xor pop push jmp insb jmp inc adc jle fwait call fimull out xchg hlt mov nop repnz push int test and fisttpl scas fwait push insl push sbb popf mov jne mov push daa dec sbb jge or sub lahf xchg cli jnp and cs mov xor (bad) jle sub adc sbb aam daa andl add lahf lods push aas (bad) jbe or rsm xchg adc and xchg mov xchg (bad) xor daa fprem lock mov scas out jae addr16 add out rcl pop push jns sub cmp push in mov fstl (bad) mov and jmp (bad) jns xlat xor mov mov scas sbb stos add mov sbb push mov sbb stc xchg inc into aam sub jb callw (bad) mov inc aad jno or sbb xor out scas ss movsb or test out jmp hlt mov ja adc dec lret lcall cmp mov insl fcoms bound dec cmp sbb hlt mov test mov in sti adc xor mov aam sbb ret sbb xchg cwtl aam in or ss (bad) jo mov arpl (bad) mov mov ret pop dec fsubr xor in jl mov out out xchg daa and mov cmp mov push fwait icebp cs inc mov cmp imul imul ret inc clc jno mov cmc and and add jle push lret xchg (bad) adc fsubs pop add stos cld scas jmp out ja popl adc mov fisubl cli cmp ss in jnp cmp fwait pop mov xchg ret mov mov and add mov jl lahf out scas add sub loopne pop dec push call cmp inc les std mov mov pusha inc mov mov mov cld (bad) movb push je ss push adc fwait add fwait push fs cmp cmp mov icebp xor clc cwtl test adc cmp in jno dec jo inc js pop cmp mov fidiv test or jae cmp test ret test ret add or and sahf adc sub into or adc sbb int loope loope test cmp repz pop push mov imul loope adc xchg xor (bad) hlt pop inc mov jnp and daa and hlt inc and and inc loopne and jne mov xchg sub leave push dec bound inc fs fs cmp fdivrs xor aaa jno popa adc ljmp adc jmp insl pop dec jmp inc ret fnstcw or fs mov dec (bad) sbb xor push xchg cmc and mov shll cltd push xor xor dec cmp shrb out loope lret and sarb cmpsl push out imul add add xchg (bad) cmpsb and cli sarl test leave js,pt mov data16 inc cs int rcrl push out fisttpl rcl clc sbb dec cli cld out mov xchg ds mov push pop lcall xchg push mov xchg mov (bad) or inc push (bad) or push sti ss xchg cmp repnz mov push fwait out mov xor dec cmpsb lea pop pop and call rclb or dec adc mov cmp xchg sbb mov stos lret inc fs adc sub add jecxz lock mov popf mov mov mov inc mov jmp lretw sahf push xor pop mov ljmp and notl je mov les adc sbb insl xchg pop mov push mov sbb push outsl lock mov jo test bound lock xor and push sbbb fucomip sti jmp das mov ss push or xchg jl scas jmp cld xchg (bad) lret in (bad) in xchg cs jle jnp jmp repnz out imul mov imul fsubp mov push xchg cld outsb nop ss outsl xor rcrb lahf mov scas insl sahf push stos insl imul pop fidivl cmp popa mov stos insb adc outsl sbb jp pop inc push movsl sbb jo push jno mov cmp ljmp push adc sub mov pop pop mov sub xchg insl pop inc push jecxz stc sbb dec mov dec xchg dec jmp xchg or ljmp pop xchg aas in dec mov fild ja cmpsb fs out or pop jmp mov pushf push out sahf movsl sub iret test sub sub cs scas lcall (bad) mov sahf cmpsb adc sbbl dec mov inc fwait cmpsl fnstcw push or les push lock movsl mov jae loopne mov push cwtl pop mov lahf pop popw (bad) sbb ja ret popf cmp cmc arpl das test adc mov fistpl mov cs je repnz test sub mov daa mov dec xchg out loope iret nop or pushf mov jne bound aam in popf xchg sarb lock mov sbb stc notb adc mov jo jne push pop add jl inc gs dec (bad) mov outsl push fs xor rorl pop not cmpsb and paddq mov inc push dec and mov stos arpl stos or jnp dec loop shll lret icebp cvtdq2ps jle and xchg mov lods test push ret fldcw sbb dec cwtl mov fsubl les test ja roll and (bad) in mov ss (bad) sub inc xor dec (bad) lahf or fisubl mov mov or cmp int xchg enter inc lods push (bad) movsb xor mov addr16 popa push test mov pushf (bad) push jnp ret (bad) xchg lods cli iret rclb mov clc mov ffree jp lods sub inc jle push outsl vorpd loopne dec xchg cmp les (bad) test xorl jo mov mov cmpsl cmp pop test adc outsb push ficom adc in insb das sahf cmp mov std adc bound xor cs hlt xchg pop lret pop aaa arpl pop push sbb mov push jae pop and pushf sub imul nop xlat pop mov sbb lds nop addr16 lret push xchg pop fisub or out pop jl out (bad) call in add xchg push sub jmp adc jle mov bnd push leave test aas pop push lret pop lock ja bound shrb gs add xchg cmp shll sbb in fwait leave icebp xchg out jp stc test fcmovnu push cmpsb push xor fidivrl push andb cwtl xchg fsubs pop cld (bad) or insb xor push pop push pop adc pop push std jge push fadd push mov add push inc andb inc int3 push lahf call out cmp sbb mov mov lds (bad) fisub mov pop or das jb pop and dec repz repz cmp movl pushf icebp (bad) out push cmc mov dec mov and adc jecxz notb iret iret mov push mov jl jmp rorb mov inc jle lds inc outsb arpl sbbb cld cmpsb in xchg stos sbb add and cs sub dec pop inc in and loopne mov jmp push incb clc lcall fistp mov pop adc jno push adc pop imul divl dec sub sub cmpsl cli fistp out cmp and and js ret das adc or mov xchg cmpsb mov sbb aaa cmp xlat push je mov inc lahf jno sbb mov dec sbb cmpsl sbb iret movsl cmp daa pushf jo inc cmpl ret lret or sbb dec xchg adc sub cli mov and or push sub daa test cmp inc jns gs jne lcall (bad) xchg pop jl mov and xchg mov popf bound inc in pop add mov (bad) mov and xorb lret or xchg dec gs cltd stos xchg into dec jo cmpsl test dec imul add iret lock mov jl inc dec and movnti daa inc decl mov outsb in adc push lea loopne addl lods pop jp mov out in sahf enter rorl imul lcall cmp xchg jl pop repnz dec and sahf pop push pop adc adc xchg mov add andl push jb or pop (bad) cmp lret inc call shrl mov jecxz fistpl mov daa adc out mov and cmp sub push sbb dec xor cmc sub push (bad) jl and xor mov arpl sbb dec lret pop popf idivl mov fisttpll daa aam mov (bad) xor cmp ljmp call push mov data16 pop sbb dec imull cmpsb sub or xor scas mov (bad) mull cwtl (bad) hlt fwait pop xchg mov cmp sub mov or leave push sti fisub out inc subb sbb pop ss mov in orl pop out cmp ret cltd lds leave cli mov push pop outsb cmp xor or xor mov xor pop fsts jo out lds adc push push jae or loope jge imul daa mov in dec loope test incb sub mov jl or fadds out or sarb lods xor notl sub repz push je pusha mov xorl gs xor adc (bad) and fs dec inc add push jmp int3 add shl dec push adc (bad) pop shll (bad) std jb or and xchg pushf pusha xchg push out or ffreep adc cld sbb lock ror mov push sub add (bad) cmp jp fmul in add pop ss xchg mov pop add test loope fimull test fiadd hlt fmuls pop push fsubrl leave aam lcall mov scas xor sub push dec popa (bad) lcall dec mov aad or sbb movsl fs ljmp cmp ret cmp mov lcall mov pop and data16 cli jp pop mov xchg push daa sarl movsb addr16 lea push inc push dec jmp push pop test mov adc or int mov shrb xchg (bad) mov hlt sti adc sub dec je scas push nop push mov loopne sbb test stc cmp mov in into data16 (bad) xor int3 jb daa pop (bad) cmp push inc fisubr clc adc mov and rol test in xorb pop shl sti jmp or sub pop pop push inc out addr16 mov push push aas popa xor inc gs (bad) mov imul adc lds xor mov lcall scas gs insl stc push into inc mov mov das mov jns xchg sub iret xchg dec jle divb ret jne pop cmpsb cld pop sub mov jg mov inc mov rcr push adc or in movsl (bad) mov jb push insb in jns mov xchg test lds sub cltd insl lcall cmp popl and adc scas inc inc xor add in mov cmp in jl lahf in mov (bad) sub mov mov shll mov outsl jle das loopne (bad) loopne sbb imul and push inc call data16 cwtl mov idiv mov out sbb arpl cli jae mov xchg stos mov jb sti xor push neg lods mov push jp sti xchg repz stc (bad) jo push (bad) mov stos (bad) pusha push sub jl inc les sub cmpsl mov inc jge push push (bad) fcompl lea mov sub mov loope mov outsl adc pop mov (bad) cmpsl sahf scas aaa push and insb daa mov iret cmp pop add faddl pop or fwait dec pop pop imul inc arpl loopne sub pop mov daa inc mov aam cmp mov adc out ljmp mov leave sub pop loope sbb stc (bad) sub mov push jge cs push mov adc (bad) in and adc icebp ja ret mov cltd mov xchg cmp (bad) xchg enter rcl sbb mov xchg mov jp and cmp dec pop jae cmp arpl sbb es or xchg popa cltd xor inc pop jns or cmpsl fnsave mov (bad) jmp jbe inc mov pop push ficomp or jo lea hlt test jl mov jns out jo ret mov jbe js xor fidiv push adc or mov fwait inc call pop jnp pop aad push sbb dec imul lock in and fwait mov cmp (bad) cmp mov mov inc pop and lret and (bad) icebp or push (bad) mov movsb cmp stos fbstp dec in or lock test jae mov sahf insl ror mov lcall push clc (bad) mov leave adc xchg inc xchg lahf push mov fild add idivb aas push aam aaa dec in xor lea lea and pop push and sti jecxz xchg dec cmp inc xchg jp cmpsb jns pop cltd jge inc xchg and adc fldenv div addr16 (bad) lods ljmp lahf or mov repz cmc shrb mov imull sbb sbb push bound mov (bad) sub dec dec mov cmc in dec icebp mov xchg sar mov jne or cwtl fwait enter aas imul sub sub pop (bad) xor and insl mov iret fiadd and std arpl xchg pop (bad) or pop jl dec lds inc stos or in les inc inc mov fildll adc (bad) jae lock mov adc iret ficom clc jbe mov cmp fstp xchg xor das popf add mov movsb clc push (bad) (bad) nop fwait das pushf add pushf (bad) mov push mov or loopne flds sub addr16 clc inc jne xchg pop sub lahf push mov inc clc enter popa (bad) enter in jmp loope inc lcall mov xor scas int push inc cmp out xor pushf insb das dec addr16 out cmp xchg xor mov pop sbb cmp lret icebp scas push and sub push mov lea push cmpsl dec jno (bad) je push adc dec jmp std repnz or sarl add jns xor js mov cmp imul cmpsb test dec sahf jo mov adc inc jmp shlb movsb (bad) cltd fdivp ret aam in push mov cmp ss inc ret (bad) rcr outsb mov xor sbb fistpll out cmp jne mov pop ret pop jp xchg pop pop stc adc loopne js fwait js outsb mov int3 jecxz cmp jl orb mov sub fs push push andl fadd add mov out leave scas js inc or lret jp pop sti fsubr (bad) in push stos xor xor pop adc stos and dec mov sbb leave sbb or stc mov sub inc inc and vpshufd ss jno imul cmpsb (bad) cmp or (bad) pop jnp popa push js mov (bad) adc pop loop andb push xchg sub (bad) xchg push or sub adc in movsb lods fmuls insb outsl and pop pusha push in jnp into adcb cmc movsb cmp sub mov std daa (bad) xchg movsb mov movsb sub or sbb in int3 (bad) dec ja cmp ret add push cld jle pop mov pop pop pop movsb or cs cs xor int sub scas (bad) pop test cmp jne rcrl jle loop clc dec mov rcrb sbb add cmp mov mov jb fs cmp add push stc adc cld sub stos and sbb and mov cmp push inc or mov testl scas (bad) (bad) cmp loopne fidivl lret (bad) cli pop orl test lock add sti xor jo sub pop mov mov jle mov mov test lock and out mov dec mov or das sarb dec adc bound push adc xor mov xchg clc cmc xchg fisttp aam ss adc push test out dec testb cmp push cmp movb nop dec xchg stos mov jb cwtl sbb sbb (bad) repnz dec cld mov push repz dec bound sbb mov push imull enter aaa aam pop fwait sbb cwtl sbb sbb inc mov int3 insb fsts xchg mov xchg movsb jns or jp xchg xor jno stc lret xor in lret xchg daa cmp scas mov mov fwait xor ja jmp sub push sbb sub push cltd ret xor mov jecxz es mov leave and sub inc cmpxchg lds sbb aad add jle fisubr gs push xchg mov xor sub inc adc xchg stos and jmp and call push test cmp xchg out push je lret popf or out push jne mov test or mov scas popa jae and cmp popf or jne push leave add mov and into test adc mov lahf das addl lea xor or pusha pusha adc and push into das adc add jne xchg sti jne aas mov xchg or sbb jnp popa cmpsl pop add aad iret mov cmp ror notb out jl dec ds insb stos (bad) testb lahf cmc lahf or idiv mov or fwait popf scas mov idivl test icebp sbb ret adc cli sub jp ret addr16 jl daa pmaxub add xor into cmpl inc pop hlt addr16 mov les cmp ljmp sub push jl inc xor addr16 arpl addr16 cwtl jecxz movsb cmp inc scas test xchg sbb mov outsb and dec sbb adc push cmp push fsubl jle jl in pop mov dec icebp gs out (bad) pushf jns in pushf pop into mov pop sub xorl jmp stc insl repnz push sbb jb scas pop outsb repnz jg lods andb arpl and or mov jb or fdivrl xor in iret or xchg xor and dec lds pop mov ret rcrb fnop or icebp test xchg daa test stos arpl data16 adc cmp mov add lret cmp cltd shrl mov subl inc xor jno adc test mov jno push sar and mov popa adc lods arpl test inc pop sub adc adcb jo cmc test xor es dec inc jb adc movsb xchg mov data16 dec fmul adc sti xchg mov xchg shrb mov outsb cltd lds es insb lock scas (bad) mov xchg leave in mov pop pusha sbb jl pushf xor jno mov and ljmp inc mov rol mov push popf xchg (bad) xor mov push test jp lods bound and add in push dec adc mov sub dec jl pop idivl lods repz gs dec repz push cld ljmp cmp aaa insl pop psubusw rclb es jnp push ljmp std adc push imul xlat dec dec push pop inc cmpsb mov pop (bad) mov loope andl jns push mov gs xorl flds data16 outsb xchg fld jmp mov test mov sub push fsub and xor inc sahf stc into stc mov call lock add inc sahf (bad) dec xchg push pop jb jno lea (bad) dec jnp add cmp sbb in mov cli loope lahf pop mov sbb adc jecxz mov jecxz sti push mov js inc mov (bad) loope xlat xchg sub aas dec dec mov cs outsb cmp jne pushf imul sbb shl push (bad) cmp test enter push jns sub adc ljmp pop test xor jo and push pop rcrl dec jo or or or mov mov xchg mov negb test adc xchg dec scas inc cmpsb mov mov and mov js clc pop inc jge movsb clc ret add add int mov cmp cmpsb mov jne imul inc mov sbb stc inc add xchg dec jnp push call loop testl push sub shrb push jns popf shrb mov test mov inc sti dec jne xlat sbb adc (bad) sbb jbe or in add sbb mov push xchg data16 mov in outsl dec cmpsb cmpl inc rorl sysret jecxz pop bound clc pop leave push loope stos inc bound (bad) (bad) jb sti fimul add mov pop mov test pop (bad) xor push dec mov or fisub xor cmp push mov outsl (bad) or in stos out testl in mov xor imul mov mov dec int notl xor or push fwait insl int3 xor out mov pop js int divl inc adc fs or xor and and mov or roll push jno popf in xor out cmp bound jp int nop mull mov jb cld ret je jge cmp cltd out fcmovnu mov stc cld int icebp inc gs dec sbb sub arpl xchg cwtl data16 pop jmp lods (bad) mov popa cmp test push addr16 and aad or popa jo or cmpsb jp popw mov push out js mov cmpsb push pop cmpsl mov in dec cmpsb push roll (bad) push jbe dec jl aaa jmp add and imul cmp sub mov cmpsb data16 lcall pop xchg push mov dec iret movsb sbb popw and mov aam pop fmull jge dec or sbb inc lret test pusha jne lret fildll in mov mov aad repnz mov rclb push (bad) lods sbb mov mov sarl xlat cs push clc dec daa jne or adc xor xor jne fcomps mov ror cli and mov mov (bad) push pop enter push mov xchg test lcall roll mov pop mov dec xor jecxz dec inc xchg imul loopne inc sub push pop test push mov sub inc jmp push add insl shrl mov aad out imul stos ret imul add aad movb loop insb jmp xor test mov es gs pop jbe outsb out xlat sub xchg push pop std in jmp push xchg pop and jp inc xor dec ss pop test mov push pop dec cmp xchg aam cmpsb xchg pop and xor fdivl mov mov inc mov adc cld xor mov sbb pop adc xchg inc cltd dec insl adc sub xor adc mov sub adc dec je sbb scas dec push sub mov mov dec mov out mov leave movsl jns adc movsl imul std inc insb dec sbb cltd xchg cmp cmp adc (bad) jae outsl rorb adc adc jg popf out xchg lret cmp adc dec xchg inc (bad) push mov and gs jl repz xchg pop xchg repnz xchg jl mov shl or fwait push pop frstor pushf mov mov cmpsb popa mov mov jnp jp in xor je jno or mov ss imul test sub mov insl inc cld jno cmpsl mov dec mov cmpsl lret in icebp push push adc sub out scas cwtl incb mov mov stos scas mov int fidivr push pop push sti out int3 pop jne jmp imul jns out pop repz mov dec xchg cs test jecxz ds push fdivp cltd sbb std cld mov insb sti ljmp push (bad) push mov xchg out cli into enter scas (bad) mov jg stc pop call cli mov fadds popa or mov jbe dec fadds add pop in xchg jo push shll inc loope cld push add or loope pushf test sbb rcrb out add jo scas rclb xlat loope faddl pop sbb rolb mov jnp sbb (bad) or data16 (bad) sbb pavgb cmpl out movl popa cmp inc icebp fdiv cmc daa add mov icebp add les sbb loopne cmp out add dec js scas loopne mov lock fstpt out loop faddp sti clc add loop loope dec push icebp mov test and jecxz mov mov mov lcall xchg dec call dec movsb cmc mov fs jae cmpsl jno mov dec test jl sbb add fcmove push ja sbb pop jmp add mov fcmovnb add sub mov dec xchg inc and xchg jge (bad) rorl jecxz mov cmpsb inc jp hlt test hlt outsb js js repnz (bad) jl ds fcomps and xchg das add xchg (bad) outsl jbe loop (bad) daa icebp mov mov test and and add and fcmovne xor push test lods inc lods adc dec sub inc test push fadds ljmp (bad) das loopne ljmp inc push push aam mov pop popa pop push jmp fsubrs push icebp xchg pushf mov je rclb jecxz ja (bad) mov fidivr push xor inc mov jnp pop es ljmp xor test jns push ss testb xchg cli inc (bad) sbb incb rorb dec inc jno sbb imul cli or mov cmp lret mov lret sbb dec jae push and sub cmp inc notl push cmpsl xchg cmpsl jno sahf adc scas mov lret jno and mov ljmp les lock pusha imul dec ss subb test mov test cmp jmp xor enter pop and sbb test push jnp clc jecxz into outsb jg mov repz jp push jg push jmp mov hlt les pop dec stos xchg xchg mov insl outsl (bad) femms xchg add fldl push pop std inc sub movb dec sub xor mov cmpsb lret push push ror or pop add mov xchg push daa outsl mov mov test dec sbb jne (bad) fwait or pop mov imul test je rclb lcall imul loop aam pop fwait lret js push or repnz inc pop sbb xchg and push jno loop mov cld test xor mov (bad) les xor sub mov fdivrl jb xlat push enter push std and inc (bad) mov jb arpl dec insl aaa je subb leave xchg mov adc xchg sbb call test imul movsl mov fimul mov pop push popa fisub pop lock mov adc jg or rclb adc popa enter (bad) xchg rcl cs test xchg push cmovae daa mov call mov movsb inc xchg pop pushf hlt cmpsl adc jno xchg mov ja or loope shll dec adc mov inc repz push adc cs push ret pop mov cmp stos fs mov pushf ja,pn dec insl pop jge mov in push scas mov insl int fbstp ja pop ja jae jge mov and pop sti ret imul mov lods jge frstor pop out fnsave sub repnz push lahf xchg inc inc iret ds (bad) jo stc enter pop push bound dec mov jmp inc repz mov pop outsl mov sub sbb xorl orb and sbb cmpl loope sbb and add sbb adc dec shrl addr16 cld jecxz pushf xor add ret test jo fimull push pop rclb (bad) mov sbb (bad) lock ror lret mov clc adc sub daa fdivrs sbb jbe sbb cmp mov lds xor sub xchg popf arpl flds mov xor out mov ds push push shrb loope in (bad) pop or xor rcr add inc jp push xor xchg pop push sub in (bad) int hlt fdivrs test push outsl mov in push movsb js mov imul push shrb mov lret ss lret loop mov loope pop sbb sbb lcall mov cltd lea daa in fnop add jl add push inc addb cmp inc cmp adc xchg fidivr cmp pop nop movsb in jge mov stos xor xchg or loopne mov jl out in aaa pop xorl aaa or pop ret (bad) int fwait iret xor imul data16 fwait out addr16 fmul sub rclb scas push hlt jmp and clc cmp divl sbb add mov in in jl mov pusha push inc dec insb pusha mov (bad) jo fs popa jbe shl imul jae test ss xchg jo mov push ret sbb and sbb sahf sti jo add mov jecxz xchg out arpl adc mov mov and pushf xchg stos pop ret icebp inc scas mov push les loope mov bound or inc shrl aaa (bad) and pop push leave out loopne clc cltd cltd add mov stc in mov insl and jno sahf cmp out inc cmp lods inc nop push mov sub fmull inc cmp imul or mov outsb into not xchg leave scas jo cmp add pop nop jecxz fsubrs add mov repz loop add mov inc enter xor stos lock fistpl out add movsb mov push mov inc sbb cs test sub aad and ret divb xchg jb aad pusha add or xchg test and mov adc cli add pop inc (bad) (bad) cmp mov adc cmp in add and ret enter nop jnp xchg pop cmp jb xorl xchg lea imul ds mov sbb pushf cmp xchg lds popf dec push dec push push stos insl jmp stos pop adc push cmp mov jno mov mov enter jns clc mov idivl mov (bad) mov jns insl jnp in aas jo roll outsb (bad) icebp mov stc stos pop aas sti fwait out sti mov aas (bad) jmp or (bad) in movsl xchg (bad) dec aas push out lcall mov ds movsl das jg mov jle icebp daa mov jmp (bad) out negl clc mov lahf ds mov daa sub push lret add daa adc orl or pop (bad) (bad) mov jl or inc jb rorl inc loope lock fiadd and xchg aam stos (bad) mov sbb into inc mov xorb rclb sub xor xor rcrl xor mov xchg test imulb bnd mov mov fdivl push sbb sbb and scas and aad and dec test mov push push pop mov push movsb sarb inc push sbb pop or aam stos (bad) lret dec inc mov js mov rcrl comiss dec push cld inc mov push sub push dec out cmp push cmpsb nop (bad) dec out adc cmp mov imul add imul cltd jae,pt jle imul (bad) hlt pop dec jbe sbb inc pop push mov sti (bad) adc jle fsub add add test leave stos test inc mov fmul enter stos xchg jb fimul popf movb pop pusha mov test sub and or sbb jecxz les dec pop rorl pushf push aam mov cmp (bad) mov (bad) adc (bad) in shlb jecxz jge sbb je jnp out sub mov adc wrmsr xchg aam sub sub cmc adc imul inc pop loop push mov shrb int3 nop test lods xchg pop add pop xor mov jle pop pop inc out or inc lret scas sbb jbe popa in add xor rorb popf and inc stos jp mov adc dec jp dec mov movsl lock dec js fimull clc fwait in jmp dec das add xor push pop sub mov cltd jns mov sbb (bad) jno sub sub aam jnp cld cli test mov and xchg dec jbe pop leave test insl js inc sub (bad) push out mov pop xor xchg or jnp imul ljmp test repnz mov test adc xor lcall adc loop in inc rcll jecxz movsl arpl movsl inc jo mov dec add jl jns jno lods out jmp jae jb cli clc scas push sbb mov cld lahf fldpi (bad) cmp shlb push cmp fucom fdiv (bad) lret adc jmp mov rcrl add movsl pushf xor push add adc pop sbb push xchg dec jg loopne xchg cmp push mov (bad) iret mov sahf stos in loop cmp lret ss jecxz push inc daa jmp cmp push jns int3 (bad) sub popa cmpsb jl movsb cltd andl sub xor in pop xor test lret jp dec repz aam mov mov (bad) dec pop lahf mov mov cmp pusha mov jge jmp push inc adc push mov cmp cltd sarl imul mov push pop aam ja jp mov sub es mov ficoml int3 mov out jl sub ds scas cmpsl fs lods iret jne jge mov sub sub sub jae jecxz lea jle push mov push sbb sarl mov mov adc insb gs inc aas adc pop outsl inc cmp into jnp ret scas in cmp xchg aam jo scas ljmp and into mov repnz mov mov cltd repz jo cmpsb andl sbb lcall fild fidivl (bad) mov adc pop lock mov lret mov imul (bad) jne jecxz mov push aas icebp inc fmul mov cmc repz lcall in in (bad) sbb in enter rdpmc outsl mov and call inc bndldx xchg lea xor and and xor xchg (bad) (bad) mov out and xchg dec mov out xchg aam int jge mov into in fnsave (bad) push pop fisttpll and jg jl push jle xchg fimul jle rcr xchg xlat xorl jmp cmp push dec scas pop imul pop xlat loopne (bad) lock sub sub cmc mov mov (bad) mov jl pop daa jbe (bad) jg mov xor push push ds mov mov clc fwait xchg ret adc movsb mov loopne int or enter jne cmp jne adc decb mov inc mov repz lret bound push xor popa xchg push dec jbe,pn pop adc push sahf push cwtl cmp and cmp jnp test btc imul push pop popf sub inc sbb cmp pop loop fldl loop popf cmp movsl mov bound ja lods mov ja stos mov dec sub fcmovnu xchg lods jbe dec fildl movsl and sbb add outsl adc popf lcall sti loop nop jns movsl xchg test pop sub mov xor pop pshufw (bad) out es sbb cmp mov mov mov jae mov xchg lods push mov or sub loopne test pop dec xchg xchg mov push dec mov xor xor sahf rolb mov push adc or call out and loopne and jmp insl mov mov add ret or bound xor mov sub outsl loopne mov mov inc mov (bad) jge or push stos aad inc sahf mov mov fs insb xor fdivrs lods mov dec movsl cmc jae fnstenv or inc mov jle out jl xor outsl scas and and inc rcrl lea pop adc mov xor mov mov scas rolb cltd jnp gs hlt nop scas movsb push mov mov je dec mov test add adc pop xor mov fdivrs mov rdpmc fistl addr16 push fsubl popa ja popf popf pop xchg sub mov sbb xchg loop bound add adc jp js dec insb sahf cwtl movsl xchg add cmp or mov cmp lcall mov (bad) lcall ds cmp dec js sub pop sahf das loop in daa ja xchg pop mov xchg (bad) adc jns call cwtl sbb rcrb xor sahf icebp mov in idiv (bad) xor xor cli mov popf mov test xchg mov sbbl or pop xchg stos mov jge inc test sbb cmc adc fwait inc lods push jo add mov pop mov jecxz loopne push call dec adc ror lret adc jb repnz (bad) push and pop out and sbb pop movsl mov sbb insb jae cmc pop in ljmp enter xor mov sti or insb (bad) pand (bad) ss cli (bad) xor scas mov in aas jge pop pop cmp sub dec cmpsb jmp cmp in rcrb fs call jecxz mov push mov xchg cmpsl push mov (bad) rcll loope jmp sbb pop lret add push and lcall hlt in and in movsb jle mov hlt push out push sbb movsb fwait inc push test dec decl inc sub aas sub xor out mov push mov lods in xchg and dec roll nop jnp imul imul cmpsl xor mov push rorb adcl xorb and pop or incl js int stc push pop inc adc in insb lods movsl mov or adc mov adc inc jecxz fimul cmp (bad) das orl add bound fcmovnbe mov push stos push in inc inc insl aad pop jle pop jecxz push out js mov loop inc mov mov out fsubrp fwait cltd sbb pop cmp rcrb and imul mov and lds or inc test mov cmp and xor jecxz or rorl or pop push or push xchg jae lahf xchg sti repnz sub inc jb repnz and xchg sbb inc ljmp jno hlt loope js aad sub or lcall sbb test pop pop mov jne xor mov mov sub (bad) rcr mov fisttpl inc sub divl fmull outsl test mov mov (bad) ds xchg or jecxz lea pop sbb mov fcoml nop call adc loope mov mov xor mov jle test test pusha and jne sub or fs movsl out inc or out loop lret inc add mov sub jne pusha ds mov xchg xchg push and mov mov pop cmp push lods add imul lcall mov mul stos sub fwait lahf movsl jmp mov data16 jmp ficom test test jb test int mov lret mov and sub lcall xor imul cwtl adc add in in sarl and (bad) fsubl lcall and out adcb loopne data16 inc lcall loop imul sub lods movsl lret push add out imul lret pop shll xchg insb in cwtl sub movsl cwtl pop dec mov dec sub fadds jno xor dec sub fdivrl rcr cmp daa push sub xchg ss sub negl mov jle arpl mov rcll sub adc das or imul pop and and jg sbb hlt xor inc inc loope imul mov mov in jne pushl fadds and xchg int push leave aaa repz dec testl xor fbld inc insl gs not js adc sbb repnz mov sbb sbb dec arpl out jnp pop jle jo icebp insb jo mov jg add adc lcall mov push push push sti pop stc mov adc stos int jo out pop adc lods sub outsb std xchg out das sub in roll rol push jg fdivr in dec aas jecxz test jp xchg mov jae jae jne sahf (bad) ret jmp out push sahf xchg sbb in cmpsb out sub xlat fnop mov int data16 pop outsl pop ficom ja stos pop out inc mov pop add mov orl and sbb inc dec aas sbb lahf nop dec leave and and test inc dec xchg iret enter pushf and out sbb dec cs xor pop and fs dec xchg sub lods jg testl icebp sti outsl cli or and dec jge lahf daa jae sub pop shll or pop cli push fs jmp sub inc psrlq hlt sub jmp roll inc xchg or jp sahf add sub sahf mov mov mov in in popf mov add xor hlt pop cli sbb div pop jo cmpsl aaa call cmpsb aas rolb jg mov popf in jb out cwtl fwait mov (bad) or push (bad) aad fistpll (bad) sub movsb xor xor (bad) adc dec jle stos movsb fisubl sbb and movsl dec sub jno pop out and lahf cld je stc js int jmp lahf in fnstcw push and imul lds bound scas data16 push push xchg lods or icebp enter xchg loope dec pop mov lcall jle (bad) jle jae push lea adc icebp rolb push mov movsb fsts sbb inc adc and xor loopne sbb mov out mov shr ret bound ficom aam lret out mov mov clc or outsb rorl push rorb dec cmp jo lahf pop mov dec cli (bad) adc mov lock push shrb fldpi imul aam addr16 sub jp scas xchg aam add movsb adc jne je or jbe ja xchg pop sub cmc xor cli imul mov xchg lcall loop dec pop les adc (bad) mov mov rcll mov cs inc clc mov mov test dec mov out out rolb mov pushl in sub jno insl mov inc xchg shll mov pop push xor sub mov fs dec mov pop dec movsb sbb enter push fs inc mov mov adc fwait aad mov xor xchg (bad) xchg mov lods mov aad test mov cmp ret mov movl nop pop dec pusha sub jne outsb enter and rolb scas mov inc xlat gs xchg gs in add sub bound das ret xchg rol popa in adc adc lahf xor in add xor out adcl jmp mov and xor out lcall push pop stos push rorb xor ja rorb (bad) jbe ret inc mov pop xchg leave (bad) mov dec mov loop mov xor mov add push or push and (bad) mov loop outsb mov mov sti out mov cs cs push andb (bad) pop (bad) gs stos jns add mov (bad) icebp cmp insb push push out cmp pushf pop adc inc pop jno (bad) and pushl out out xchg pop or sub or xor out sbb andl enter out (bad) loope loop pop nop repnz dec mov mov inc mov fwait push lahf (bad) pushf mov mov scas popa (bad) push mov ja jp in and dec mov push or mov or xor fcomps pop add fcomps xor mov mov mov cmpsl lret in icebp push xchg xchg xchg xchg das pop pop mov in aad cmp cmc xchg dec cmp mov cmp mov mov mov aad xchg cmpsb out pop pop xlat mov outsl mov (bad) mov outsl jne std into mov mov jmp scas frstor cmp mov mov out pushl dec cmpsb rcrb stc sahf das push idivl out stos scas notl xchg sub and leave and dec push xchg and sbb sbb arpl cmp inc dec xchg push in jb pushf and cmp mov enter pop and pushfw or fwait and enter mov in fwait data16 (bad) rcrl psubusw int3 sub popf pop gs fincstp in dec inc notb adc jns cmp inc int hlt mov dec (bad) lcall fwait daa pop xchg (bad) rcl hlt or dec iret (bad) rep pushf frstor inc das mov hlt xor dec scas shrb xchg pop aaa out fwait mov jg daa call dec outsl cltd daa int3 push insb test in adc (bad) fisub in addr16 std inc pop shrb (bad) test aam xor xor fdivs repnz stos mov jns cmp and fildl jge xchg fisubl pop xlat sbb imul repnz cmp and lahf mov fcmove push divl inc adc fs pusha inc mov loop cmp daa inc adc daa (bad) mov inc and hlt fidivr mov pop push jbe ds add fnstsw int3 imul out (bad) fld dec adc sub out mov sub dec pop rcrl push push cwtl loope popf dec xchg adc jmp lods (bad) mov adc rorl ja mov cs sti cwtl loope mov xchg adc clc repz cmpsb pop (bad) mov xchg in outsb cmpsb xchg rolb ret hlt xor icebp lret es jmp add test sub pop cmp push je outsb xchg jno pop addl bswap int inc cmp xor mov jbe insl pop sbb hlt inc ret add imul pop dec pop es adc cmp mov in xor dec xchg push ja push sti std out icebp imul bound jne push test mov adc xchg inc xchg xor pop js mov xchg jne test mov cmp push sbb xchg loop fs cli adc mov mov femms xchg enter stos ret (bad) adc mov mov imul and scas outsb cs xor arpl in sub lods test cmpsb and and xchg ljmp sbb xor adc insl mov xor fstl mov scas adc jne sbb lods inc jno mov add (bad) push xchg sub or imul fldenv jnp adc lea cld dec gs out movsb clc push leave cmpsb push (bad) clc out add jbe lods inc fcomp into adc cmp sub int in leave cwtl cmc mov (bad) out outsb dec xchg out dec inc mov mov cmp inc int3 mov mov cmpsb je gs lods sub sub cmp mov and inc int3 push mov aam mov dec or pusha in xchg mov mov cmp jl out cld das jae xchg pop sub xchg (bad) ljmp out aaa bound adc or pop xchg or fwait sub sub popl out shll mov sbb (bad) push adc dec lret insl test lret xchg or xor out sbb addl cs pop pop stc (bad) cmp inc loop cmp mov xchg jl mov shl add aaa test push mov jnp xor pop sbb inc jns ret jb sbb fxch dec push cmp mov lods nop repnz rcll pushf add mov sbb sbb cmpsl mov sub repz xchg xchg xchg xchg (bad) sbb data16 mov cmp mov xlat fistpll xor lods mov jns mov clc lock fisubrl push jmp aad fnop cmp xchg sbb in cmp int mov repz das mov loop scas aad jmp fildll pop mov idivl inc jg bound dec mov cwtl popf aas and iret push xchg ja mov xlat sahf adc (bad) push rorb stos popa or test push rolb fwait popa or mov jbe dec fadds test pop push rolb xchg or rorb cmpsl loope pushf test push rolb xchg loope pop test sbb add test pop push rolb (bad) loope cmp addr16 jno scas sarl (bad) mov push xlat jecxz fmull shrl fmull sarl cmp xchg xor shll cmp cmpsl lock (bad) mov push iret jecxz mov pop shrl mov faddp mov add lock shll dec cmp jno xchg enter mov mulb iret dec xchg mov iret enter adc lea je sub mov cli adc fcmove push imul sahf int3 xchg xchg mov xor loopne mov inc les mov dec mull xor inc pop ret mov fsts into test stc add add push xchg sahf sub pop iret jno jp dec jne out push idivl leave in loop add adc loop lea adc dec inc mov dec cmp adc dec dec imul aam popa nop test cltd xor addl pop addl sub outsl (bad) xchg inc aam lret out mov lods int aam jl mov outsb icebp adc in std sbb pop xchg push std lds inc daa outsl jl cmp lods jmp xor ljmp push mov hlt je scas outsb pop jge (bad) xlat scas and ljmp (bad) push int lea (bad) xchg (bad) rorl and xchg sub jne sbbl dec test stos aas in es inc in cld pop lea mov enter imul mov cli xor aam scas push inc (bad) shrb std loop pop jl nop dec sbb into pushl in movsb pop loop fnop js aam add push popa xchg (bad) sahf push mov dec je push ret les pop mov inc or stos fwait or popa movsb mov add xchg cwtl push push jmp add xchg ljmp aam stos dec add pop movsb mov fs lods cmpsb sub mov mov mov sub fcompl loop fcmovbe add fs int3 es jecxz cwtl aaa (bad) sti daa or repz pop mov mov jmp push (bad) int sub push aaa outsl ret xchg rol popa ljmp out xor in sbb lcall xor loopne mov imul xor mov push mov lret push out lcall mov sub sub pop sub aas mov push mov mov xchg jno push xchg inc (bad) xor daa cmpsb je xchg jb test xchg cmc dec cmp mov jae push mov test imul in sti sub jno adc es in mov xor xchg les cmpsl sarl mov jno add sti mov jb sbb shlb push call (bad) icebp dec sub insb sub (bad) lret and or cmp or in cmp xlat aas jl out pcmpeqw ret mov jle or push repnz loop (bad) lea push pop mov and sbb (bad) in loope jmp inc xchg or pop test mov and arpl dec insb in push rorl fs mov stos cld push add scas jno mov and jae or in push notl push xchg sbb dec xchg fninit int sub cs push cmp cld add lock daa lahf jp mov cltd addr16 jnp test (bad) pop pop jp xchg inc inc gs dec xchg push das stos test fimull mov cmc lcall icebp lods mov fnop mov stc pop cmp repnz fwait mov xchg push (bad) dec and push (bad) push mov cltd ljmp mov fidiv jle xor pop jmp add fs and gs sbb lret divb enter jbe sbb jbe popf pusha daa fldcw jbe popf popa addr16 jp dec hlt push arpl es scas dec hlt pop arpl flds std push mov jg mov scas mov in es cmp insl sbb popa xchg fldl pusha aas sbb xorl loope sbb mov or or mov or pop clc push into ret add jnp or loopne cld add loopne faddl test mov out ret pmaxsw add cltd std out cmp xor cltd inc out cmp ss int out ja pop push mov inc dec inc jns and cltd sub pop fwait cmp or test push push lods xchg lods jecxz xlat mov ja mov out mov xchg pushf cmpb push jns fildl dec mov and or xchg push dec (bad) and and ficompl adcl and cmp in aaa loope add int3 jle aad loopne xchg jge dec mov inc (bad) into sarl (bad) jge lea das xchg mov popa lea movsb or jmp jno mov mov in inc jae xchg adc jno enter and vunpckhps lock daa push jl adc insb add rcl mov xchg rolb jno push lcall mov add aam push dec mov cmp mov dec ss push (bad) loopne pop sub fs scas test mov hlt (bad) and dec push push or arpl jae into shrl arpl rcr mov xchg fcomps sbb or mov mov or mov mov in cmpsl sub push js lods push adc imul sbb sub loopne mov xor pop sbb xor je test or rolb (bad) or or lods aas pop std popf and loop adc lods shl pop fs dec bound xchg push sub or fwait loope push inc stos popa in bound sub dec jno nop insb dec enter sub pop and pop push push loope inc movsl aaa fsubl jp push std cltd dec and mov and imul ret loope mov jae incb push pop lea xorb enter and scas xor cmpsb jae (bad) je sub pusha jns arpl mov rolb dec xor les xchg lret sub daa xor orl insb outsb mov sbb roll addr16 (bad) mov ja inc mov dec pop fldt inc jo pusha adc or mov lea in mov xchg inc mov or xchg jno jecxz mov jle data16 shll and pop aaa mulb mov mov fsubr push (bad) cmp jl ja xchg fmull jne adc movsl or pop idiv push insb lods pop ret mov xchg jae or popa jno mov (bad) cld jo inc lea jne push rcll lret cmp xchg mov je imul push push inc fiadd lock push (bad) idivb stos jg or or in adcl in cmp ret test inc or dec cmc push outsb rorb xor ja mov sarl xchg xchg je lock lret push push mov hlt dec sahf pop in aad stc pop rol jnp mov das jmp xor ret inc pop lods xchg xchg mov int rolb les mov jmp aaa xor xor pop mov scas or std or je sub mov or neg mov jb shl jnp fdivl fildl sti adcl adc ss call les dec cmp repnz xchg push aam in ss je cmpsl out iret sbb jp out fscale iret pop js lds sbb xor nop mov dec nop xchg in cltd daa cmpsl leave sbb pushf and leave add mov xchg aaa enter jb mov xchg dec in aas jle lods repnz lret mov hlt mov lds inc das push lds mov ror hlt and xor test aas mov xchg je jle mov jmp add xchg incb lahf jmp push lcall insb into cltd inc int3 mov jns cmp sahf xor int out rep jns cmp pop clc fwait clc inc cmp cmp imul and sub loopne and dec xchg scas push dec ret push sub add cmp into push mov in jno inc into aas add pop data16 gs fldt inc adc (bad) mov and dec sti sbb and xchg and les inc push test cmp pop clc push mov clc sbb outsl (bad) pop fldt aam addr16 pushf cltd cmp aas push mov add pop sub and (bad) xor mov adc jbe pop jo pop cmp es mov jmp insl adc dec cmp mov dec dec mov decl mov push sbb xchg aad std xchg push sub add pop dec das sub push mov jne add cs scas mov sti inc mov (bad) pushf mov jo jmp push data16 add jge fs sub jle mov mov mov out shrw iret std scas push cmc add sahf adc ret push movsl push mov mov push adc icebp and pop (bad) xchg dec test lcall (bad) mov pop les jno cmp cmp pushf stos or jb xchg xchg jae cmp dec xor jbe jbe add pusha subl clc nop rorb sub ds pop and xchg mov stos cmp lea rorb jecxz mov cmpsb mov movsl clc pop mov mov or popf pop pop mov mov xchg and push sbb ret mov xor jae push add test jecxz inc fldcw xchg aas sub stos dec dec jg in jno negb pop push pop call pop shl fcompl ja sub icebp cmp and iret add xor test in mov test stos adc jp or (bad) call fildl hlt mov xlat and inc pop jle rolb sub jnp movsl dec pop push jae out pop iret sbb cmp cld icebp icebp pusha jl std ror pop or sbb dec std push xchg (bad) jae mov dec pop xchg into mov sbb mov jl out mov lods cmc sub cmp mov cwtl lea jno fucomi sbb xchg push mov jle repnz mov insb bound es pcmpeqb or jmp lahf rcrl sbb lods sbb mov or test push fs in (bad) sbb xor inc sub push adc adc jge pop inc fiaddl rdpmc mov clc mov cmp shrl fnstcw clc mov outsl or (bad) and outsb out lcallw pop ficoml or mov cmp std or adc dec sbb xor test popf xor nop ljmp pushf dec loopne (bad) nop pop push xchg mov xchg pop or popa pop push dec push fsubrs test add add nop mov test push mov bound jl dec push xchg sahf push aad push sub fcmovu cmc jne mov xchg rorb lcall cmp or or dec lret sbb pop sbb dec push (bad) push jmp scas or lock (bad) sub cmp pop push je jecxz mov xchg adc test fcom arpl es loop jns jns je test xchg repz xchg mov xor pop and loopne test fist push xor sub test mov pop mov mov dec xor mov or mov sub lods or aam mov or pusha insl cmc mov dec pop mov dec test dec inc dec mov mov mov scas int nop test dec pusha sub jne outsb enter and rolb scas mov inc xlat gs xchg gs in push jl (bad) sub bound das and adc adc popf loopne xor in add xor out adcl imul mov fsubrs sbb push xchg sti repnz fdivl subl or sbbb lret cwtl mov pop push cmp gs mov pop or enter cltd mov push lret adc pop jbe mov adc push or insl fidivrl popf daa (bad) popf notl in cmp or ror mov idiv push insb lods cwtl (bad) sbb popa inc push xchg mov lret in jno stc adc in or stc pop inc xchg xor xchg movsl bound jp imul sahf push sarl shrb pop adc jmp jmp daa cmp jl or jle mull push enter adc sub out sbb pushf test or sbb jae xor and mov and inc xchg out in adc scas inc (bad) xchg pushf xor loop jno iret sub aas adc popl inc mov or cmp inc sub fwait rcll pop cmpsl js jnp cmp mov fcompl outsl popa push jno jmp xchg scas pop stc fsub in sahf test repnz jns mov jg movsl xchg pop or mov jge imul (bad) cmpsb aaa aaa outsl fstps insl sti mov into mov fist mov dec imul mov mov arpl cmp dec and jmp out (bad) jl pop cmp aad fist nop jle inc push leave inc jb jl push xchg and and mov daa enter pushf es arpl and sahf cld inc into xchg or cwtl and or in jns popf fs int3 stos in stc cmp mov push jb dec mov femms xchg sbb and lds fwait xlat int3 and pop out jmp jge add cmpsl add fs push jp (bad) shll ss xchg xor sbb in cs cmp int3 lahf jmp cltd xlat int hlt cmp mov cltd pop mov sbb mov jp fisub in test sbb (bad) hlt push std xchg fisub test inc out sar out cmp pusha fsubrl push ljmp mov in pop mov inc cmp pop cmp and (bad) push sbb arpl xchg fisubl xlat sbb imul lock cmp and lahf shr or aad int rclb lahf xlat xchg repnz int int mov dec pop fcoms pop leave bound xor pusha mov imul (bad) lret scas clc pop cli (bad) call aad sbb cmp repz mov pop js (bad) jnp add mov or scas nop add loopne mov add lea mov cmp push loopne mov push inc cltd xor add insb scas mov shl popa outsb addb dec divb push insb adc push enter mov push sub mov divl test loop clc sbb lds pop push lock push stos sub push inc loopne xchg mov xchg add sbbl sbb scas jmp cs jge loopne fs or xchg movsl and mov adc sub mov push cmp es xor sbb jmp popa jg in pcmpgtb mov pop test mov stc xor dec ret nop xchg and ror jb jnp out (bad) sub in lret out test rcr ljmp fdivs test jge ret sub push push out cmp in js add mov std push loope jo xor xor cmpsb popf insl jecxz mov dec mov inc inc daa xor cltd or push add xchg aas gs push cmpsl icebp jl enter dec pop xchg sahf mov mov cmp insl adc in mov or sbb nop or dec and mov es repnz out nop pop push out xchg jno push pop loope cmp fstpl mov je in aas insb into arpl pop enter mov shrl sub mov push pop ss sbb xor aam sbb pop cmp aaa pop in dec lea inc addr16 je pop imulb and lds jbe ret (bad) lret dec in in dec pushf dec add xor jg scas or mov push cmp js aad add add fcmovbe pop fist (bad) adc nop cmp dec and insb test orl sub adc (bad) jnp jae mov or jae cmp xor dec push repz in stc arpl sbb jmp pop out nop insb mov sbb into (bad) sahf sahf sahf scas mov clc push call test sub les insl shrl ret daa inc cmp fimul jno les inc push icebp jo xor lods mov mov or sub inc pop movl pop outsl lods cmp xor push cmp add jl sub sub mov movsl iret xchg aad jecxz inc lcall jns lds out mov jg mov mov mov movsl bound mov ljmp iret mov sbb pop adc idivb jecxz rorb pop dec (bad) stc test push sub outsb cli jle mov (bad) pop int in test idiv mov add idiv jecxz or int das mov int pop and mov inc imul pop call mov adc int cmp insl sub imul push xchg cmp dec xchg test imul push in dec mov ds rol xchg sti mov insl pop push and out pop mov adc xchg sti mov sub nop mov adc xchg jecxz mov jl dec fcomip xchg jecxz or lcall fisubrl sahf sbb mov jp sub lcall aam pop cmp popf hlt inc pop adc xor mov imul arpl insb andl pop aas out xor push dec roll xlat sbb bswap fist mov ds mov iret jae arpl cmp mov xlat jo das xchg sbb or pop rclb int3 cmp cmp (bad) push test mov lock and fstpt pop add cltd add das cmp stc push dec pop test mov fnstsw imul test test mov or xchg cld jg stc cltd loop push hlt xorl aaa sbbl fild cmc (bad) call int3 fisttpll movsb pop into cmpsl dec fdivl mov jg hlt rcrl fwait ret (bad) push pop or and mov out jno xchg ret (bad) dec pushf es xor insb push sti xchg and jno dec nop mov in mov insb mov cmc push mov rcrb lahf jae cld mov mov lahf mov adc js insb dec adc in js,pn lods sbb lock test and in daa mov lahf pop sbb test push mov std ret neg (bad) sti push into jns sbb mov adc cmp int3 and jne add jge jp xchg (bad) mov dec cwtl and popf cmp and adc (bad) sub or int gs lock dec mov lmsw (bad) data16 out and adc jp mov dec outsb inc dec lret mov dec push inc lcall xchg pop and daa mov push adc sbb popf cmp xor mov aas pmulhw or outsl sub xor movsb mov xor xchg fisubrl dec mov pushf or jne mov push jae inc mov int3 push dec outsl iret sub jae,pt cmp addr16 mov push sbb and jns xchg jp loopne push fcompl mov pop cltd push mov jae cmc (bad) sub sub xchg imul add jl (bad) mov push sti push sahf stos imul mov test test or or into hlt cmp or jns and loop testl (bad) es scas push fbld or and sub scas (bad) icebp mov sbb sbb call (bad) jne pop aam adc cmc leave cmp in push xchg imul xchg xchg push lock inc loope das cmp std sbb int stos or stos inc mov ret xor dec stos jns add and mov xor jg and fucom add cmp ja pop pop add je es dec push in rorl (bad) sarl lods push mov jno iret pop cmp dec mov scas jb dec push mov es xor test add sbb test in push jecxz inc or push loop lahf fist adc (bad) mov push les mov incb mov jg mov or or xor in cli (bad) mov sub (bad) cmp lcall dec fcmovnb stos mov mov cmp sbb lods (bad) push mov bound sub cli adc outsl jae stc jae outsb dec fistl cli mov push (bad) pop fadds stos sbb std push jno mov push ret inc je cmp jbe outsl sub lock (bad) lea inc adc rcrl test aam xor loopne fs ljmp push fdivrl xor inc push jecxz jge jp pusha movsb jo lret hlt rcrb xor adc dec imul sub dec push add jle lret or sbb inc xchg lret cmp inc div jb inc and das rorl mov sub gs mov inc ret or xor outsl xlat xor rclb in and stos push cmpsb in sub enter lahf imul roll outsb fmuls (bad) cmp sbb inc or adc (bad) mov and scas aas add push ror mov arpl inc ret and mov (bad) xchg mov imul (bad) mov addr16 movb cmp inc sbb xchg rclb out push popf cmp fst in push clc cmp adc insb mov aaa sbb xchg (bad) movsl pop or push push outsl dec call pusha mov fsts add cmpsb aad movsb mov fdivrl pop in mov mov add mov stc icebp adc daa stc mov pop loopne lret mov cmp pop and adc fsubrs cmp mov fcompl xor out sub dec lea enter gs xor pop mov xor jo xor pusha xchg (bad) push idiv cs cmp ds out dec leave dec lock aaa aaa dec mov adc pop iret sub das stos cld add add xchg fistp ds into roll pop fidivr jge sbb scas mov jecxz adc (bad) pop iret sbb add imul pop add jb int3 xchg test cs inc in jne stos pop xchg adc ljmp adc insb adc sbb jle adc adc cwtl cmpsb adc (bad) jb push addr16 add cmpsl stc imul xchg imul mov sahf outsl ret cmp push inc out outsl inc add daa cmp popf or sub inc fisttp scas and inc lock adc inc push arpl jg xor loopne sub lods pop loopne aaa pop fisttpll pop mov fidivr gs cmp pop loope push xor cmp cmp (bad) cli jns popa (bad) out lds pop dec lds dec mov pop push aad sbb mov xchg mov xchg aad aas xor pop sbb imul fisubl mov hlt and and in incb sbb loope nop movsl mov test dec cmovs pop and and inc mov nop and movsb jne sbb fisubrl rorl gs inc pop sbb cmpsl mov (bad) push jl sub lret push leave and mov inc mov nop or xlat inc push jge jle mov mov push pop test ja std fisttpll pop xor sub jne add pop or push mov cmp mull fimull mov add js lds mov pop aad iret sahf popf icebp scas mov repz cmp out in stc jl xchg shr mov arpl xor mov mov push jnp in adc nop pop test xchg jo and add add mov and orl (bad) inc sub push mov adc inc push jne out ficoml lret fst push fildll enter mov push js pop adc xchg scas cwtl stos pop adc stos pop adc mov orl bound mov inc pop outsb sub loop push sub pop xchg stos js (bad) mov sarb loope test dec js push test sub test outsl pushf sub ret lret outsl mov push lds repnz or jg movsl adc (bad) cld and add rcrl (bad) pop sti out push or mov add xor adc (bad) lds bound xor pop out clc std xor inc cmp outsl psubd pop jmp cld aam insl xor sbb sub push mov (bad) push inc fisub hlt mov mov inc jb mov scas mov das cmp std cld test push das mov mov ds loop iret mov cld aad and jns xlat fsubl mov sahf cmp out daa scas int3 divl outsb pop insl jnp pop inc ret xlat es inc scas mov push clc xorl loop scas inc enter test xchg adc mov xchg mov adc dec dec mov or orl sbb xor sub out push enter pop stos in pop push xor rcr cmpsb test aaa inc xchg sbb dec push in lock dec imul negl adc sub push adc inc stos sbb rorl mov repz ret pop inc test adc push ficom stos fadd jnp sub mov (bad) stos cmp mov js push in loope movsl lret inc std sbb movsb test adc pop push pop fidiv in lock push in rcr sub aam inc jno paddw call lret inc js mov jge (bad) jae fs in and push cmp jge mov js jne pop (bad) aad fnstenv jbe in add and js sahf jne cmpsb sbb fsts mov negb adcl xor mov test gs and scas xlat sahf mov pop outsb push (bad) pcmpeqd cs or fwait xchg ja adc nop inc aaa andl sub push ret call setns icebp rcll std push adc push dec push cmpl insl fs test mov jbe into mov mov scas mov push loop or shr jne ljmp or push imul scas xchg sub fs lock pusha test or pusha (bad) dec xchg iret shlb lods lcall and lock nop and xor cmpsb or or cwtl mov xchg adc mov sahf mov shr es cmp xchg scas iret adc adc sbb sbb add mov fnsave jne pop sbb imul pop mov outsb (bad) repz pusha sar sbb xor sarl or dec dec cmp lea sbb mov mov sub sub adc daa les rcll pop xchg loope jb adcb ret es adc pop and clc push or outsb or clc mov inc add imul xchg movsb push aas or jb inc inc mov iret fadds mov aam or jb shlb inc and les push nop or aam push (bad) sbb popa (bad) (bad) add inc jge ljmp adc lock mov mov sub pop stc cmpsb or dec ljmp outsl leave (bad) cmpsb inc add xchg sub dec pop mov and stc push cmpsl mov out sbb imul mov add mov xchg iret fadds sub push mov cmpb mov call mov jb sub mov cmp divb idiv jno test mov test aad outsb (bad) (bad) xor mov loope stos jnp dec into add dec in adc out sbb xor inc xchg cmp mov inc fdivrl test dec jle inc movsb and mov std cwtl cltd xchg mov mov or pushf aas sub inc movsb loop mov (bad) adc mov add dec aam dec inc mov data16 or stos mov and and push add hlt pop xchg rclb dec bound les push inc faddl add or (bad) xor mov push popf push (bad) nop sbbl jp nop mov mov insl addr16 int or pusha cmp mov int3 jno dec out mov and enter addr16 ljmp dec mov int3 pushf xchg arpl cs popf out xor loope adcb in add push ret outsb dec or loop addr16 xor inc mov and addb mov lods fldl xbegin mov mov movsb adc push andl sub cmpb daa dec stos stos pop push inc pusha push mov arpl or scas sbb add inc popf insl loope dec sub sbb nop sub lcall icebp aaa fstp nop movb je jle mov add and push fdivp cmp push add pop aad scas imul sbb lods nop (bad) adc mov dec scas sub pop dec aad sbb ja (bad) test jg xchg push mov xchg push (bad) idivl loop push sbb adc jae inc and pop jb dec sub adc push shrb cmc mov inc jo int3 outsl sub lret (bad) in outsb and (bad) fidivl das cwtl orl pcmpgtd push or add inc mov dec push xchg decl sar out adc add add push add sub sub jmp icebp nop test (bad) and scas lcall sub push dec mov bound test ja movsl inc adc repnz cmpsb and inc insb mov mov outsb pusha popf or stc mov dec and jns mov ljmp (bad) outsb xlat pop ret stc cmpsb dec inc test inc addr16 mov xchg cli imul jbe or jne mov movb mov mov and cmp or adc dec adc (bad) mov ret test adc popf ljmp lahf xor cs mov and fnop and nop movsb cmp test xchg dec xchg test mov out fs jb mov scas sub fadds cmp sub dec outsl movsb xor popf mov ljmp lahf xchg ficoml pop mov add inc sub cmp dec repz sbb call sub in jle and fwait mov aas jmp jl jp cmp loope xor push (bad) flds push add je and cs add pop fs cmp xor rcl xor testl sbb ss xchg mov xchg cmp aas or std sahf pop xchg stc push or decb rcrl dec insl and jnp lods scas xor aaa lock mov (bad) xor pop insl pop popa cmp insl jecxz add pop fidiv jb pop in xchg scas and inc mov inc pop movsb sbb cmp aam push sbb mov pop or dec push add pop cmp lock nop in nop (bad) je in push xor xchg inc scas pusha icebp lods ss jo mov sbb ret dec cmp xchg jno ss cmpsb repnz sbb sbb mov enter adc fnstenv or jnp cmp xor adc jl fcompl cmpsb add push add adc rcrl sub pop sti mov jmp imul inc out outsl jb insb xchg sti add ljmp (bad) xchg sub fs inc xor iret cmpsl xchg sbb adc adc dec push xchg xor nop int cmp in pop cmp dec adcb push stc jecxz icebp ljmp inc jle jge fsubrs sti repz mov inc inc dec push mov pusha mov ffree out inc mov pop arpl sahf pusha sub xchg mov adc dec lods (bad) mov fcmovnb sbb pop jmp faddl jns mov sub inc pop rorb cmp out mov jg test pop lods aaa mov int3 ja sub adc (bad) xor dec mov mov xchg jl lea and (bad) cmp xor cmp out mov mov or faddl mov out popf int3 cmp xchg push les adc dec sti jmp jb and dec pop dec ds and in jno imul pop aam mov in pop sub call jbe cmp sub inc dec lret mov cmp xlat pusha and nop push push mov inc test jae ds pop pop scas or and mov icebp and mov stc dec sub adc ret xchg jne lret sti inc cmp lcall inc or mov push cwtl jb rclb and cmp cmp xchg cmp es lea xchg rclb ret or add push xor xor inc add inc pop inc pop mov or push jg int mov aam in sub inc cs dec pop inc push adc jbe xor mov mov mov push push fildll (bad) jle push mov aam mov jmp push adc adc xor pop fdivl mov inc sti sub cld jne lahf lret popf push fwait xor in jo jge hlt sbb push mov outsl arpl cmpsb or les xor jae cmc mov bound push aam into pop ss in in xchg xorb push lret cmpb add and outsl popw scas sub add adc addb data16 cmp mov test ret sub mov hlt jmp mov jnp out movsb clc dec repnz xor lret stc or or roll in mov lahf nop pop pop mov imul shll mov sbb (bad) sub pushf lcall inc xchg fidivr pushf or jnp out and sub mov inc or adcl (bad) push fistpl iret stc into (bad) mov xchg sar test cwtl pushf mov loop cld dec sbb and insb aad inc sbb sbb divb inc mov xchg ds ret pop xchg add mov push push call xchg mov dec les popf aam ja ds inc or shll sbb add mov mov fstpl xchg add jnp in out fs sub das jmp out orb or lret fdivrl sbb push outsl ret data16 adc and mov and lods js jbe stc jmp push je testb daa imul adc sub cmp repz sub add or add dec jb sbb movsl mov data16 cmc repz mov add add gs pop in sub mov sbb push jb fisttpl in ret or int in mov inc push shrb add sub mov add aas arpl jg and fsqrt jecxz ret cs fwait push jbe mov or lret mov pop sbb push gs and inc push xlat sub adc jnp mov jns,pt repnz push cltd arpl sbb cwtl pop mov pop lods sti lock xor pop fstpl pop pop jl (bad) ljmp mov xor daa (bad) add xor add xor popl or or inc mov jno mov mov cmp sub adc hlt pushf inc push in xchg ror fsubr jecxz jo pushw and cs cltd xor or inc or add xlat fnop add das sub push leave xchg adc js cmpsl dec cltd lods fninit mov lock (bad) mov dec shll sub mov mov js es fs aam outsb jl (bad) xor mov mov push pop loope xchg in shl (bad) cmp leave stos orl jns stc arpl add jle sbb push pusha inc loopne imul std fcomip cmp adc loopne imul lret lods and cmp inc shrl and inc jg cwtl jmp mov xlat mov shlb cmp int repz mov insb pop lret mov mov pop outsb dec xor lret dec pop push out rcll mov js dec push jge add or or add icebp and mov inc jb inc shll and pop ret inc icebp mov (bad) aam sbb fldcw xor or adc inc or jae (bad) repz es xor je push scas push stos add aaa or mov jae inc into neg mov out xchg test mov add out cmp and sbb sub jae mov jno mov cmp ret rclb pushf xchg jae,pn lock pop aas idivb (bad) mov xor jno xchg dec adc fs (bad) dec aaa mov pop dec shrl fstps add js rolb int lcall inc cmp loope in cld sarl xchg mov es movlps or (bad) adc (bad) mov jl push jb adc sub or adc sub icebp fsubrs jl or jl xor sub fild sub jnp cli (bad) popa mov (bad) out gs adc mov scas sbb rclb pop js daa insl mov aas fwait cmp fwait lret xchg and mov ret adc dec sahf (bad) cmp xor fsubl cli cmp into lcall pop adc push loopne jecxz clc (bad) in or mov add aad xchg (bad) in cmp sbb lahf adc sarl (bad) movsb fcomp (bad) lock call adc cmpsb cmp push inc jge fistpll push fdivrp (bad) (bad) enter stc and mov cmp mov xor mull lret fdiv adc pop popa mov push mov xor xor or aad fwait decb call gs pop daa pop jmp cmp clc mov adcl fidivr and es jge sbb outsl psrlw mov push je pop fadd fistpll outsb in movsb orl xor leave or add push fild dec adc stos cwtl xchg push mov mov std shlb sub hlt push sbb int push cwtl xor ficom cmpsb dec jmp dec pop xchg push inc stc aas xchg das inc sub fwait add mov jnp add jge dec jns sbb mov jns push (bad) repz daa cmp push or sub add add jne sub stc sbb aam jb add or cmpsl pop sub lret clc xor imul sar stos or cmc xor mov lods inc fldcw rcr call mov clc ds cmp mov daa (bad) fstl mov mov jne loopne fwait mov jbe (bad) mov jo adc arpl mov (bad) cmp imul mov cmp dec (bad) arpl test andl xchg jl sbb push fisubl inc jne cmp jmp sarb test fistpl nop mov fst mov ja ud1 cmc and fistpl cwtl or scas push imulb jle,pt out inc xchg push subb fbstp fwait cs shll fxch jl xor fwait repz xor imul loopne cmp xor pop inc push mov ror jbe imul divl fwait xchg sbb inc mov push loopne leave mov jo sbb sbbb shlb jmp cmovae push add push jns mov sbb cmp andb lret shr push add test ret rolb test dec dec push imul inc lods in rorl sbb pop (bad) xor lea addr16 inc mov mov mov lret outsb add push sub sbb into lcall xchg lods inc push out mov xor movsb mov jle cmp scas imul xchg jge lret clc xor push mov das dec sar int3 xchg imul jne adcb ljmp xchg or addr16 imul mov fistl insl loope lret sub push cmp mov sub ds sbb inc or fcompl das sbb (bad) xor mov xor lock test or enter inc xchg dec dec bound mov inc lock mov xchg fidivl and jb,pt cmpl insb icebp add sub inc andl int (bad) movsb movsl clc sub rcl cmp icebp xchg pop xchg xlat mov dec push pusha aaa pop test jl aas push xor mov loopne (bad) in and stos les adc adc sub push mov lods lods cli jle imul stc mov and lret or ds dec lret push jnp jbe (bad) cmpsb repz jb movsl fs mov pop add (bad) loopne stc mov mov mov stc inc adc push xchg mov push loopne inc fidivl xor addr16 dec (bad) out ja clc pusha enter sbb ja sub outsl idiv xor jg cltd dec sub andl push and jmp fistpll xchg repnz cs stc aaa mov lret inc inc mov ffreep loop mov (bad) sub ds fildll mov fwait add mov lret xor bound int3 bound or loopne push lock jbe dec xor or sti inc jbe mov popf jmp inc icebp xchg sub (bad) fild rcrb arpl add jg or nop outsb (bad) idivb out and mov movsl fistpl push mov ljmp sbb or xchg pop (bad) push fistpll push jae xor mov cmpsl int3 (bad) xor int xchg and xchg mov fs es aas adc aam mov jecxz ja out cli pop in mov or leave cmp cmp js fcompl and dec xchg mov arpl sub inc or xor (bad) aaa aad sub loopne push jl (bad) movsb add mov add inc or andb pop mov (bad) sbb cmc pop cmp jb ret popa pop sbb add out inc ret mov dec jle pop inc add (bad) repnz and mov jns push xor xor (bad) outsb daa add iret mov (bad) leave or xchg sub mov or jecxz (bad) movsl push cmp repnz out aas cs xor ficoml scas lea aam cli pop adc add mov adc adc loop cmp add iret sbb mov mov fwait nop xchg cs sub jmp mov lret fnstsw push xor daa jb dec cmp popf mov cli jne sbb cmp in jg fs dec mov or test sub or inc pushl jg cltd pop add sbb fdivrs pop fcomps xchg (bad) or mov repz pop gs movsl mov fild or inc dec fcomi daa pop and adc nop xor pop addl in repnz pop movsl test mov daa sub cltd mov sub mov das push cmp sub mov jbe ljmp cmp daa push jg adc pushf sub rolb jecxz nop lahf push rolb mov and pushf xchg inc pop lret or repz cmpsl cmc adc xchg ficomp mov aas mov (bad) iret adc es sub push add lret cmp sbb in mov les sbb fcomi add sbb rcll (bad) sbb jb cli fwait add gs push mov inc (bad) lret xchg xchg shl jmp inc cmpsb mov loop aam lods mov inc sbb sub cltd test jl and aaa mov sbb fstpl xchg out icebp popa jecxz mov sbb in test pop xor xor sub test dec test mov mov xor sbb push loopne scas add inc inc cmp divb testb jmp inc add xor out imull push push jg mov aad dec int inc icebp mov insb lea sub std aad xchg stos int out dec gs or out mov jecxz fcmove int or out xchg (bad) sbb test adc out into xchg in loope mov ret jno lea daa jg ds xchg xchg lods ret (bad) jae sti xor lock push fwait inc js mov dec jae inc adc movsb mov sub sahf push or pushf push mov add and test fstpl dec dec mov cmp push jno add adcl jo rorb inc mov cltd shrl and rorb aad repz cmc jmp mov mov xlat ret push repz adc adc sub mov stos aaa les stos aaa lds stos mov jle stos das mov movsl stos ficom sti insl and bound mov bound xor out std xor pop cmpsb xchg std xor test jo pop push lds mov pop enter adc or xchg cwtl pushf pop jb push cmp test cmp cli and xchg dec fildll jg push sarl in pop cli (bad) int3 pop mov stc pop dec push inc pop in fistpl cld test inc jecxz cltd dec cmpsb mov push push sbb sbb rcrb imul mov scas pop xchg cmp push ds jmp iret mov movsb loopne mov call jb dec hlt divl push mov out inc xor es (bad) (bad) loope data16 stc xchg push lock adc fisubl sub inc mov enter outsl sub lods xchg cli test fs pop adc in sub pop stos fmull roll dec icebp das mov stos jmp adc pushf sahf stos lret mov mov inc shrb imul out ds dec pop cmp imul adc xor (bad) mov movsb (bad) out mov xchg int sbb cmp ss ljmp mov out pusha in es sbb cmp dec (bad) xchg repz push inc lret push (bad) cmpsl popa push or pop sbb sbb jb inc popf pusha test (bad) mov mov fcoml lret popa pop movsb jbe fst and dec hlt icebp xchg push cltd dec or mov mov jg fdivs mov outsl cli stc sub xchg cmp mulb push adcl xchg cmpsb pop std pop jl out scas mov mov and js mov inc sahf cwtl or inc adc mov xor insl mov fimull add mov mov sbb inc dec jno pop mov jnp inc mov (bad) cld cmp pop mov cmp or lods jo sub out lock adc add jnp fs outsb mov icebp add insb jecxz or pop sbb outsb jnp insb cwtl mov fistl iret jbe pop or pop imul testl retw sti mov mov push push xchg std push ficomp push jne add sub cmpsl xchg sub and mov or mov insl imul push and and stos mov mov dec ds jbe in lret push sub push inc icebp out cld cwtl (bad) mov jb mov pop jg ja mov sarb (bad) clc xchg fidiv mov ficomp mov mov mov cmc ds fs sub repz jle xchg loop movsb ficomp (bad) mov cmc (bad) xchg (bad) stos inc jg inc in in lret mov aam lret and sub lds adc add or jns cmc leave (bad) mov add xlat and push push adc je pop push in cmp dec xor jge fstpl pop xor cmp (bad) sahf les bound ss push popl xlat jge jle cmpsl (bad) ret movsb mov test data16 into ret inc push loopne dec lret mov cmp ret or xor xchg pop pushf add dec mov jb mov sahf out inc push mov add sbb dec jmp enter pop sbb bound mov push hlt mov inc pop cmpsl lock push fdivrp adc mov push sbb les mov fwait dec inc and inc int3 and pop fcomps jns sub clc ss cwtl jns push imul mov (bad) ja push add arpl and add add mov fstps jmp fnstenv addr16 jno int stos jmp mov scas cmp js in cwtl lods push lret in pop add insb or rolb dec or js into xchg mov les xor in nop dec jo shlb sarb rcrb cmp add fisttp adc imul (bad) jg gs fmul lods ret stc orl addr16 imul in adc mov and mov pop xchg lods add sub push dec xchg nop int jnp stc int3 pop outsl (bad) push dec stos scas ss imul fcom inc gs xchg loope dec lods jnp push insl cli popa sahf arpl enter outsl xchg inc inc pop and (bad) (bad) push enter jae xor pop cwtl aam cmpsl add push es into xchg mov stos sub enter adc xor push std and mov jb lds pop cmpsb loope inc jno test jecxz movsl mov mov sti imul scas sub mov add pop cmp outsl adc fwait push mov mov mov clc inc xor test popa mov pushf icebp in sub test push sbb xchg mov lea push pop je scas and jge adc mov xchg popa mov inc adc mov int ret in fist mov insb sar cltd and sbb sbb in cmp adc push mov roll xor mov dec lods gs adc shrb bound jns leave nop sbb mov (bad) in mov sub mov xchg sub fisubl (bad) pushf lahf dec out inc ljmp ret fcmovb or cmp inc sahf add dec mov push dec sub sbb mov xchg cmp xchg (bad) test hlt aam sub scas sub cli es and loop sarl inc hlt jge jo and jno imul lret enter jecxz pushf pop sbb test orb xchg enter outsb mov popf out lret into outsb aas into iret xchg lcall orl ret je xor loopne push xchg testb push push add pop push into lret dec pop in jae mov iret dec daa mov xlat push ja push pop adc loop shl and aam fsubp push sub cmp pop sub repz fnsave xor and add in mov mov lods xor mov icebp jb pop lds pusha dec pop in cwtl ja subb jns or ds lahf push (bad) or orb xchg inc out push sbb xchg cwtl sub xor scas xlat std dec adc dec xchg gs pop push mov adc dec fist sub int sub enter jmp (bad) scas mov pushf and (bad) mov mov es leave inc jae das movsl (bad) jmp orl ret mov jmp mov popf and movsl pop xchg loop stos cmp sbb pop out cmp and add cmp addl cmc jne mov gs iret adc pushf lock fcompl jno (bad) out adc sub incl sub bound push fsubs or les xchg movsb dec sub call push fnop or sahf xadd jg sbb loopne rolb and lea cltd inc (bad) mov loopne push data16 sub imull scas fs loopne popf fstl idivl es clc jmp popa insl (bad) mov jecxz cmp pop in inc test sub inc out icebp (bad) cld add sub sbb out cltd test arpl or ror add dec or add mov sub insb jb and jge adcl xchg test adc hlt inc jecxz push dec aam jl loopne gs jmp inc (bad) lods and sub or lret and add push inc pop mov xor lods into dec mov mov jl mov fldt dec xlat cmovs cwtl fnop in imul mov xchg dec test sbb stc mov lret stos push nop add cmp (bad) mov or adc lock ret fsubp or sbb or push loop dec or sub out xor mov jg mul sbb adc fdivr cltd mov aaa or cli push imul adc test adcb cmc addr16 orb xlat inc fxtract jo,pn sbb scas xor mov push ficomp rorl inc mov adc repz mov lahf pop mov pop loope dec and (bad) stos xchg imul daa or cmpl scas push pop cmpl ljmp sub js (bad) mov cmp mov inc (bad) (bad) mov test push jmp out xchg fs xchg in clc int3 and push imul add clc rorb jno sub cwtl aad sub push mov push stos fnsave push cld mov add stos js sahf andl push mov (bad) xor in hlt into dec ja cmp dec inc decb inc dec mov lods inc sbb mov movsb sub mov jo jbe mov out lods (bad) mov leave mov dec pushf xor adc loop test dec es les mov (bad) bts imul push push xchg jp sbb out daa push mov adc dec cmp loop icebp sbb addr16 mov adc bound insl adc les dec (bad) rol push and dec cld lods mov mov mov js les mov int3 adc mov js inc xchg clc mov mov lret les and clc cmpsb mov mov pop pop mov gs faddl xchg jnp add nop (bad) pop (bad) negl or jge insl mov jg pop push stos fidivl cmc (bad) jmp jnp xor fimul lods xchg outsl push mov rolb add xlat xchg iret xor lcall xor push in mov sub cs adc lods sub ds mov push mov push lods mov push fs (bad) rorb data16 pushf push cs jmp push aad cmp ja jo ffree js push pop and inc jb xchg testl sbb lods jl ljmp dec jg or andnps (bad) cmpsb shrl push jle es jbe pop jae lcall cltd popf iret iret into jae mov lods stos int3 cs iret adc jae stc mov cmpsb push out xchg stc imul cmp mov sarl pop ds test cwtl pop jmp test rolb pop dec sbb scas or addr16 jg std jnp out sahf out xchg cmpsb pop neg xchg xchg jne cmp lcall cmpsl out add mov or xchg push outsl pop wbinvd mov push mov push rcl pop jmp (bad) push je into roll je into push sbb mov sbb pop (bad) mov push xchg in out adc out (bad) (bad) cmp adc mov in (bad) inc gs cmp ficom dec jmp imul jg pop mov imul inc pop sbb pop or dec jbe or jno inc dec cmp add sarl xchg lods mov mov das jbe adcl (bad) jbe lret scas fstp stos jecxz jbe int3 in (bad) mov mov aad fimull cmp cs dec stos mov daa fwait pop lret int3 movsl mov sub jp push stos xchg inc lcall cmp negl scas hlt divb sti (bad) or ja outsl mov les xor or mov fnstcw jno scas xor lods cmp (bad) cltd push sbb dec and sbb pop sbb mov mov or mov xchg mov jmp gs fiadd inc cmpl rolb add add xor hlt xor pop adc out adc hlt push data16 or mov jge push fwait xchg out mov or imul call sti sub rcrb (bad) ja jecxz fild dec add add hlt and or and out or push jb lret das inc and add push (bad) inc lahf dec cltd mov fwait push test or jne cmp jge xchg cmp stos int3 push push lcall into bound mov adc std in sti sahf cmp pop imul popa gs sbb imul les lods sub ja sahf mov (bad) cmc in jmp leave mov fcmovb mov jne pop aad xor add add or inc mov xchg lds movsb push add dec aaa addb xor addl (bad) jbe in es jnp cmp fmuls jg cmp (bad) icebp adc outsl cs inc mov frndint fs lahf lahf ret fimul mov sahf sbb mov cmpsl mov aad (bad) mov fild scas pushl or dec cmp sub cmp adc fs cmp xor pop inc mov repz xor stos iret shll lods iret fcmovnb fs outsl pop xchg in cli cmp es mov repz out adc popf cli mov mov cli out xor leave outsb xor sub outsb (bad) cwtl outsl adc lahf or movsl fldt adc pop stos dec jno addl sbb add shll sbb imul sbb popf sbb push mov fsubl loope (bad) fwait jmp xchg pop test sub mov xchg fildl ret xchg cmp addr16 dec fisub dec cmp insb push xchg ja mov pushf lods bound cmp (bad) in loope pop xchg sti test xchg pushf popf (bad) xorb xchg and fldenv mov ret fsubrl jo or outsb loope adc pop ret fsubl out adc jmp clc ret sbb ud2 pop movb adcl jle or movsl test xorb and iret or xor sbb fwait jmp push jno repnz out adc mov (bad) mov arpl cmp pop and mov ud2 out xor mov mov push roll pushf mov push adc daa test nop cwtl cmp pushf arpl mov pop and pop dec sahf adc ret (bad) arpl out (bad) out and js pop cs jmp sti mov jnp and adc cmp aas cs push ror cwtl jo movsl xchg mov mov push cmp (bad) repz xchg test ficompl leave popa lahf into imul jo mov pop clc mov je pop ja dec loopne pop mov je lahf stc sbb xchg test dec out mov stc sub and (bad) roll (bad) and loopne sub jmp daa iret or aad leave push jmp iret inc sahf cmp jns mov xchg xor ret hlt add cld inc cmp pop cmp rorl rorl dec pusha or ljmp cltd mov push cmp cli xchg jo aam adc jne push cmpsb cmc mov cltd aam scas xor imul dec jmp loope dec mov dec jmp test mov cwtl (bad) mov (bad) mov and mov cmpsb mov pushf imul lcall rcll pushf jo jp fidiv add mov lcall and dec mov cmpsb mov add push fbstp sub pop cmpsl cmpsb adc stos jo hlt in lcall cmc cmc cmpsb mov pushf jne push test and mov fcmovnbe adc sbb add loope mov adc mov mov pop daa lret mov enter faddl or inc (bad) js ror aad push lock push outsl mov jno je cmc inc (bad) outsb js push into mov lret orl mov lahf test andl lea ja flds cs rcll or pop popf sbbl test pushf cs cs andl or stos fnstenv mov xchg (bad) out das push push sub fild js jb cmp mov mov leave iret ret xlat dec jecxz push mov das nop dec push dec ret das into push pop les js lods or psllw leave rcrl add jp and cmp cmpsb jecxz je orb pop call je movsl jecxz sbb js mov adc pusha xchg xchg push out pop mov movsl fldl out and sub sub hlt out or mov sub pushf adc loop dec jl aas sti dec js push jg cs loop addl cmp in dec pop cmp loope pop push ret jno clc pop jg ret (bad) ret cmp xchg and jg cli jno mov aam xor jnp push lods pop ja subb lods fs shrb data16 or lret jl jo test pusha (bad) rcl cmpsb xchg cmpsl cmpsl pop outsl movsb sub push loope xchg fisttpll std cmp add sarb (bad) adc lcall loopne xchg divb in dec cmp sbb dec cmp push jl cmp ja incb nopl ljmp xchg lret or jb lock dec dec dec mov cmp ficom adc pop pop sub mov jmp inc jl int3 ret or fidivrl pop int clc xor imul fcomp fsubl cmpsb popa push cmp leave loope (bad) mov jmp push sbb popf pop push dec shll out adc pop rcrl and gs es push pop dec jmp sbb adc adc js (bad) sbb pusha sub pop mov insb outsl pop cmp or xor mov test lahf xchg add into pop out pop jge add add jo rolb or inc inc pushf out add add rcll pop pop push adc jl mov insl push cmpsb pop scas rcrl pop or fstpt jae or sub pop xlat sub adc outsl mov hlt outsl test and gs mov mov arpl or jecxz push mov insl rcrl cmp cld or ror pusha (bad) mov mov fidivl in nop cmp insl jb sub dec dec cmc xchg shl pop add mov or mov jbe or or int3 inc (bad) xchg mov imull xor or (bad) xor push xchg (bad) loop add and sbb lahf adc add add neg (bad) xor xchg and dec test or and cmpsb add adcl fmull adc inc loope push jmp xlat pop loopne movsl dec mov mov push sbb push cvtdq2ps dec sarb xor sub enter sti loopne sub insl jg xlat sbb push mov dec in stc faddl or stc xchg jbe outsb addr16 scas in pop int3 cmp mov int xor mov jno mov pop mov int xlat (bad) cmp cltd pop or (bad) faddl or push push stc push mov leave int push jbe sbb shl in xchg sbb test sub mov xor or pop lods cmc sub mov shlb jmp loope mull (bad) cltd adc push lock rcl push inc pusha pop fisttpl pushf mov xchg push ss mov add mov pop push loope add sti sbb or pop lods je jecxz out add in mov lods cmp cmp mov insl cmp fsts lods insb (bad) sbb int3 sbb shrb ret mov icebp dec popa jno pop xor pusha scas pop stos xor into imul xor insl aam pop insb and (bad) xchg or fcomps and xlat push fs mov lea adc sbb push xchg cmpsb movsl fwait adc lret add add inc aaa bound (bad) xor sub icebp loope mov inc popa dec cmpsl or loop mov fwait sub jg add pop int3 add pop xchg xchg in aam push cs xchg lret mov lock xor test jo jle pop sub sarb cmpw les cld insb imul rolb rcrl dec sub mov mov sbb in push xor mov jle flds cld ljmp clc jb inc mov imul in fldenv out mov loope dec pop cmp adc int and test in xchg sahf lock loope cwtl jno push jne fdivrs lcall outsb xor fmul xor jg in and stc sbb fcomps pop jmp sti pop cmp jp out push aas jo fs outsl cwtl rcl cmpsb mov xor mov cmp and pop je mov xlat in jle push adc and lahf jo aam cld jg aaa movsb or xorl stos xor test addr16 (bad) pminsw jl inc mov fprem (bad) jo bound dec cmp and mov loopne add dec jnp fsubl outsb push dec xor les sub pop inc (bad) (bad) ss xchg lods rorb jb sub jne sbb lock xchg movsb into (bad) in popf push mov jmp pop lret mov add xor xchg lods jno add pop inc pushl inc inc sarl (bad) mov (bad) sub add and adc std pop arpl xchg push lcall ret add push or push or mov inc divl mov bnd nop adc mov sahf (bad) xor xchg ret in and out mov and repz push jge leave sub iret dec mov push in in test dec popf and add and xor and cmp gs addl mov jbe outsb clc mov cs mov mov push je in sarb pop sbb xchg fs sub mov add jno or or ret imul fisubrl js push mov adc sbb iret es ss fisubl iret add cmp shll sub pop add push inc clc add xor push lock push stc popl int and and dec ret xor stc (bad) lock xchg ss loop sbb sub dec fwait gs fist (bad) icebp mov test outsl add xchg add bound add js jo imul cs mov mov sbb fwait pop jo dec push int fs push push loop xchg add push lods mov insb loopne bnd (bad) in les repz (bad) insb mov iret xchg orl mov cmp in sub mov adc das loope jg data16 clc repz push cmpsb icebp xor sti shlb in je pop in sub dec mov outsb lcall jmp jl dec arpl mov mov repnz cmc push and or jne shll cli (bad) (bad) fsubrs xor xchg xchg cmp sti in shlb ret mov mov push add adc jge mov out push imull js aas les jne pop (bad) idivb mov lock fidivl shlb aaa cmc xchg pop ljmp jle jo,pt cmp ret jnp,pn xchg and push (bad) inc data16 xor std jge ds pusha sbb in jno mov lahf mov jl mov and inc out and pop frstor aad fild es jge pop xchg cmpsl jl imul stc push xlat jge inc or or outsl push mov push cmc fisttpl mov mov mov jb mov xlat jg mov sbb lods ss xchg inc pop setle cmp sbb jno pop rcrb pop pop cmp out sbb sbb aam call push push ss inc outsb mov fadd cmpsb sub xor lret gs xchg sbbl pop test sub testl data16 or or inc lock loop (bad) xchg adc loope popl or mov ret cmp add pop sub sbb xchg pop jno js (bad) jb mov repnz jae daa jb xchg and stos scas scas out pop sbb lock cli xor jecxz outsb hlt les jle ja in adc iret push cld inc adc dec mov in sbb ljmp pop mov push dec xchg push nop iret das dec mov test and xchg call and mov sub rorl push iret rcrb lock stos mov (bad) xchg jae outsl loop jns je es push sbb roll cmc aam pushf aad jne iret pop les (bad) (bad) arpl cmc aaa jno clc mov mov jp mov or jno clc mov lds into int3 ffree ret sbb aam shrl and mov (bad) adc xchg mov jmp ret fucom push dec jecxz aaa jge js dec rorb sub icebp test and cmp imul popa in call jns cmp sbb pop adc adc mov stos fxch add add frstor (bad) fdivl or test xchg push xor iret pop sahf jne pop add mov mov data16 frstor mull jno pop insl scas xchg mov jnp out movsb dec pop sub out or cmp pop les cmpsb loopne inc xor push sahf pop lods ret jbe sahf pushf push mov vcmpss fnstcw adc add adc repnz into add call test sbb rorl sub xchg xchg sub fwait mov scas push sub sub mov adc xchg daa mov sub mov or test dec sbb imul ljmp clc mov adc sub out (bad) xchg ss jecxz mov mov sbb movsl or fnsave dec cltd jnp popf test sahf test adc add out rolb dec lds out add xlat or icebp inc mov xchg push mov jp sbb rcr hlt mov outsb mov inc aas sub xor int3 sbb ljmp mov hlt push mov xchg sub fstps jo xchg pop in adc out and addl adc sahf sub aaa inc loopne push mov and inc sbb aaa shrl psubw pop cmp jg (bad) pop adc js cmp into and lret inc aam pop repnz stos imul or js test inc aaa mov pmulhw or pop je xchg mov xor fcoms int push cld fs adcb cmp mov lods les add iret cmp mov mov and jae insl push cmp jns mov xor dec mov in mov cmpsl add fild outsl mov jecxz mov imul sbb adc sbb arpl mov pushl push mov jle ret popf sbb add or fbld xor jno loopne ja std xchg and mov mov cmpl jl rcrb aas mov ss call cli arpl or inc push dec jecxz pop sbb js xor into sub jne and (bad) cld cmpsb addb movsb lds jmp dec fwait jb jmp adc inc adc out push sub mov fnstsw movsl dec test mov jae fmuls ljmp (bad) xor enter enter and sub es adc mov adc xchg shlb into jnp das nop scas (bad) mov mov imulb pop cmp cmp loopne lcall sbb jnp cmp pop mov push xchg jg inc iret pop cmp hlt xor mov aas jno fsub jno bound (bad) clc call dec mov jge jbe (bad) (bad) cmc inc sub inc out fwait sbb xchg out int xor mov fdivl jno enter push imul jns (bad) xchg std pop call sti imul (bad) fsubrl sti in fldcw jmp dec jg push fwait nop stc lock xlat fwait fs bound and in push dec add push adc jae xor push rcl stos pop and mov rcl push xor ror dec out mov xor mov adc test sbb icebp xchg mov loope mov loope loope sub sub ss loop jo xor dec daa cld lods xchg xchg inc dec xor lods sahf inc mov dec icebp dec sub aaa test add loop inc sbb aam es mov jg and or xchg fldcw adc mov or aad aas pop push jl out adc ret in arpl fisubr adc ljmp xor and adc pop mov mov mov sbb lock adc or xchg inc xchg or clc loopne test push daa mov pop loopne movsl jp inc sahf mov push cmp dec push pop les sub (bad) and (bad) (bad) push je sbb arpl jo out sub jnp rclb dec data16 stos mov sub or dec mov mov loopne mov sub inc dec test punpckhwd insl imul mov icebp and je insb gs mov repnz sbb mov and fistpll in das adc mov leave int and loopne in insb mov mov cmp sbb or ror sbb outsl sub loope movsb push push sbb iret and loopne (bad) into mov vmwrite mov nop outsl dec dec js rcrb mov in dec shlb inc mov pop nop jbe sbb mov and scas pop fisubl jnp xchg in popa je cmc ss in lcall or ret mov jg loopne test add pop ror aas (bad) lock xlat inc sahf fildll das sub aas (bad) int3 stos lret adc add pop fidivr push iret fistpl fnsave mov loope leave pop adc je pop xchg adc outsl jg cmp nop or pavgw in cmp or push dec (bad) jge push sbb orl in mov hlt or and ret leave frstor push aaa mov xor lahf xor inc orl cli clc cmp lret in sub in mov inc mov xchg inc mov in int3 loopne test loope adc or mov mov ljmp pop icebp xchg cmp pop adc xchg lret pop sub loopne cld xor pop leave sub into or rolb xchg ret andl cld les in mov dec stc sti xchg pop pop mov andl (bad) leave push and lret jae dec sub cmp and mov subl loope add out jl cmp push and sub fs pop inc (bad) cmpsl or jns and push cs push pop xchg mov int sbb arpl sbb adc (bad) clc test cld push dec sbb adc das mov mov daa (bad) pushf sarb and mov loop nop aad push mov stc inc lds imul pop pop ljmp iret and xchg mov lock (bad) mov in push jno subl je inc jne ljmp dec jp sub sub jne inc xchg inc cmp jno rcrl xchg pop adc (bad) mov lods and scas xor jno mov push enter lea cmpsl xor (bad) mov cmpsb push or arpl xchg loope arpl cmp ja xor inc xor inc cmpb mov sub mov fcmove inc stc ljmp mov mov mov cmp ficompl outsb jl push fiaddl xor insl (bad) xchg cli jno inc mov or into es add popa xor adc cmp push testl pop mov inc push pusha jg jbe and enter jo imul and loope push or and (bad) loopne sarl add orl aad fnstcw push add xchg std movsb dec jmp in xlat fs movsl int or or push push enter and je adc xchg push rcll aad movsl gs mov imul add and std push fs pop add mulb xchg inc outsl add add sub mov mov xchg xchg add xchg dec lock lds sbb mov js pop and mov dec in and jecxz push rclb dec xor jnp or je dec (bad) movsb adc into je cmp dec data16 fucomp (bad) fdivrl lods js and inc xchg inc mov ficompl fisttpll fisubl xor cmpsb push icebp pop or adc xor xor shlb add jmp xchg pop negl outsl jge sahf mov inc and xor pop ds add sarb or mov icebp xor xchg hlt das pop inc mov xchg cmc (bad) das loop push sub stos popf mov loope cmp leave loope xor divl mov pop add push ljmp lahf sbb ljmp xor ljmp pop mov mov (bad) mov and idiv push fs jae adc int3 adcb or push (bad) aas push mov nop mov or pop inc popf push add sub arpl ret pop andl mov adc flds or jecxz leave leave inc fs scas lds test insb (bad) in sbb and mov mov mov xchg dec mov inc mov jecxz sarb cmpl push fimull adc push clc sbb and xchg addr16 jnp,pt add call lods push mov xchg jbe pop pop sub mov movsl sbb xor xchg xor push cmp scas nop scas add push inc into ret fcompl adc push pop rcrl dec in push mov jl sub push pop and push mov insb add into loop or xor ret jb cmp mov jmp (bad) xor mov pusha imul gs lea mov push mov dec pop movsb cmp pop jnp and jns imul inc dec or xor jb sbb dec imul lret outsb movsb idivl mov xlat or ffreep imul fisubr jp insl ja and and adc jae cmp test pop cltd repnz sub cltd repnz mov mov js test jmp fnsave insb jp rolb inc sbb in push push cmpsl xor fwait xchg rorb movsb icebp push ret aaa sub adc cmp adc jle fstpt pop das mov mov cmc jecxz je or test push cmpsb imul xor bound mov test push and fdivr push in scas pushf push (bad) mov nop mov test fs incb movsl mov mov in mov sub lret xchg das test sbb pop ds sbb push mov in pop inc (bad) dec push cli dec test call popa add pop mov and cmp pop xchg in ret cs pop add push jle ss cli fwait inc sbb or scas xor repnz fmul adc jae data16 or sbb jno xor pushf fldcw mov aas bound repz inc lcall xor loope movsl push push jo sub fs cmpsb xchg imul fs into push (bad) or mov lcall jl and das test repnz inc cs xor mov loopne push cmp pop (bad) loope les rcr cld xor test jb lcall inc (bad) sub ret add popa dec orl stos cmp mov shrl or xchg push dec popf xchg jbe mov inc inc and add sarl cmp stos iret into std fisubl shl adc (bad) rclb cli aad jle out jo ret sbb jnp,pn lea xchg movb fnsave adc fwait mov out mov outsb call and gs fbld push cmpsl nop lock mov imul xchg leave divb les mov out test das das mov pop mov sahf cmp mov call mov mov lcall adc add imul dec gs ja sbb gs lcall sbbl cmp imulb or xor inc push addr16 mov pushf inc and pop sbb ret subb outsb jl dec arpl cli cmp mulb repnz dec test rol cmpsb out xchg mov adc test push xor mov add adc loopne mov xchg mov cmpsb cmp mov sub (bad) lock cmp cwtl sbb arpl jl xchg xor adc insb lahf push loope pop mov inc or inc sbb mov pop jb add jmp ljmp into outsb ret inc add fwait js mov add push add test pop movsb pop shrb nop lods lods jae call test hlt pop cltd or mov cmp mov pushf repnz xor aam pop enter sbb call (bad) push in add mov push cmp lcallw jae gs icebp xchg lea fidivr sti mov jle mov mov (bad) lods (bad) not lret xchg add cmpl or (bad) cld dec cld imul js fisttp xor or xor jae pop cmpb jmp int3 in bound jp dec int3 pop rorb movsl and xchg xor (bad) mov test and movsb cld rep push in mov lret xchg add imul xor mov mov jb mov jo xchg ljmp adc test mov mov test mov jmp jns or (bad) (bad) mov pop cmp lds sub push jnp jbe mov dec adc cmc imul xchg ss rcrb cld sbb xlat clc cmp sub (bad) mov ret xor es fldt add rol xor imul sub push call mov pop pop or add stos xchg ja jle dec xor add sub lods jns imul js xchg sub pop or into (bad) pop xchg cmp xchg stos sub inc loop daa loope push test pop xor dec and push mov fmuls pushf push mov jp xchg mov in (bad) jmp lret negl push addr16 ret inc dec hlt out out or jb jl push mov xchg (bad) in mov stos and push add ret mov leave jge hlt mov out repnz movsb jl push ret aam sbb pop hlt cmp pushf push pop inc xchg loopne push inc jne adc dec mov xchg jb cmp and (bad) jg mov mov add lods xchg cmpsl (bad) sub mov pop leave xchg test mov adc mov or mov test mov clc adc (bad) in out or imul andl sahf scas (bad) jo imul mov push stos xchg add imul sarl stos inc loopne mov ret mov sub sarb hlt or popf jl fcmovne pop xchg sbb fst add out xor lods loope clc fs stc mov imul icebp push lea or dec cmc cld push leave push pop or and or dec pop and cmp push dec imul enter out push and push or sbb add cld cwtl add xor dec and pop push aad xchg xor outsl jns push test cmp pusha arpl or add dec cmp js dec fimull pop push and push mov aad jae gs inc jge sbb xchg pop push add jp es jne cmpsb daa add sbb push xor inc cmpsb mov xchg mov fldt dec out or sbb cltd push mov or push push loop (bad) pop das jns mov add mov inc sub push jnp addr16 leave add fwait dec (bad) mov mov (bad) inc mov xor fwait daa jle into dec pop xor sbb cmpsb dec pop xchg xor idivl (bad) scas xor xchg or jg sub pop sub adc iret xor out mov sub movsl icebp add push inc adc jns sub inc mov out cmp leave dec push cli (bad) jecxz dec inc mov xchg repnz rcll mov stos mov jns nop loopne add in int3 jmp cld (bad) lea je push jge and lret push jo out out iret roll inc stc int push iret dec in imul lock lret test dec stc push xchg inc jp inc dec movsb xor xchg sbb and xchg stos pop movb sub pusha enter dec cmp in lret out adc dec pop jecxz cs lods jp data16 std enter xor cwtl repnz and or sbbl clc cli aam int cmp mov cld je add jb (bad) lahf mov fsubrl lock add sub shlb mov cli jb xor mov aad int lcall cmp jmp lret pop jp (bad) sub jmp mov push aam and icebp sub fild xchg lods lcall lods jne mov ss jp sbb inc cmpsb pushf fs adc aas out ret push scas sub pop sub aas ficoml push pop (bad) cmpsl cmp jnp jbe es out loop xchg mov loope sbb xchg scas aas and push push lock and mov pop xchg push daa jnp movsb inc int3 fcomi jecxz fistp sahf mov push aad xor std pusha lock inc inc jae jae push out fsub adc push inc in out jb cwtl lods dec bound lds push or mov inc mov mov push push mov push mov pop pop mov adc jno aad in add ret es jle push pop ds dec mov lods (bad) in xchg dec sbb fcoml ss jo aad cli int3 pop mov or ljmp frstor ljmp pop inc in mov jnp xchg test pop repnz repz jo dec xor leave ljmp push sub sub pop test lahf sub addl and mov pop rcrl mov jae cmp cmp hlt outsb int3 cmpsl test mov adc sti lcall sarl mov ljmp xlat into fucom mov and mov or inc aad sbb adc sbb scas cmp mov pushf test pop popw sub lcall adc (bad) fst mov shr xor sbb pop lods popa or mov add imul mov ja xor xchg inc out mov lcall subl and jns mov cli test add das rolb (bad) push sti adc xchg imul xchg fxch inc pop out pop cmp mov fiadd into loopne (bad) in inc lock shrb push scas out test and inc popl sbb mov jae xchg lock xor js jo in cmc scas cmpsl movsb jle jbe out mov jle push dec mov in push xchg popf leave mov push cmpsl jge incb pusha lea mov call xor movsb mov in and fnstenv mov or fistl mov pop shl adc addr16 adc lock xchg fidivr bound test mov arpl insl xchg inc movsb sbb test es mov push je adc dec and mov fsub scas fcompl or and push or push mov jmp add add push add in mov and inc xchg pop fistp outsl mov rol insb push stos sbb mov sahf sub jne inc add push sub mov arpl inc and xchg subb jle loopew xchg mov lea mov (bad) fildl lahf hlt loope mov xchg movsl adc movsl xor adc cmp loope xlat fsubs adc clc fdivr xchg arpl add pop cmp lods mov repnz add adc xchg inc xor lcall rcl mov pop adc adc cmp std sub jae jp mov clc add add cli dec xor mov sub mov sub int3 stos and ret adc inc in adc mov dec pop sahf insl mov pop ret mov sbb inc and mov or cmp js je dec daa jns push add xchg movsl xor mov (bad) mov and jb loopne jecxz jge push out es xlat je sahf or fwait mov adc adc aas cmpsb mov and adc xor in cmpsl inc pop mov inc sahf mov mov rcll addr16 loope aas cwtl mov mov push xor and adc dec inc and notl fildll push sbb das mov or mov pop lcall shl jns push leave mov movsl je jge xorl xor jp jmp pop push fs inc addr16 inc xor dec mov pop push sbb testb pavgb (bad) jmp lcall lret push stos xor dec mov jo pop rcrl or or rclb jno mov imul cmp xor lret fimull and mov inc fldenv sbb jno fidiv or addr16 adc dec push cmp (bad) enter jmp mov xchg stos inc jb ret xor add jns add gs xor pop inc mov adc hlt dec xchg test hlt pop and (bad) mov aad jns les (bad) out popa std pusha jecxz dec ds js lods or or xchg ror out add inc out loopne inc mov test test xor fcoms out add cli cmp sub push scas (bad) test and cmpsb push inc inc orl js xor jb lock dec pop push shrl inc pop dec jge stos jmp add dec fistpl adc fwait (bad) jo cmp mov in and inc mov adc lcall pop mov stc xchg sub pop in fsubrs (bad) sbb cmpsl sbbl mov loope loopne les jp push jae jb clc je rorl out mov fsts repz test ja lahf inc mov inc pushf scas xorl and in push xor loopne popa inc stos testb (bad) cmc sbb mov jmp loop push aaa loopne test enter and out (bad) jns jp icebp fistl arpl cs xor or mov push lds mov cli push inc cmp mov das movsl pusha or adc daa or xchg sbb (bad) hlt xor test arpl sti outsb fwait (bad) into cmp aas jp (bad) (bad) cmc call std stos and cmpsb lock xor jp scas in sahf push outsb stc sub iret out mov movsb std ljmp adcl insb inc mov pusha dec pop (bad) mov and sbb xor ss sub mov pop jnp mov xchg pop pop call stos mov pop sbb jg mov pop jae push add mov mov cmc out int rorl cmpl push lds xchg dec sarl mov xor push daa cmp in lods lret imul fist lahf inc mov out jge ljmp data16 (bad) push fnstsw rolb dec out xor jns cmp cmpsb scas ljmp hlt xchg ret and call lock jns es or lcall mov cwtl mov cmpsb insb jp popa clc xchg cmp or es jle aad adc or iret lock ret mov xor sbb je jle idivl jne jle out push push push movsb add sub adc fxam mov inc push insb pop cmp aaa push (bad) lret notl push roll mov mov out mov cmp icebp or lock mov test xchg jle mov cmpsb xchg mov (bad) icebp adc mov fmull idivl adc outsb pushf call jg mov cmpsb test pop pushf push hlt in or stos inc and (bad) xor in mov gs (bad) and adc sarb aam (bad) nop or cmp xchg daa xchg push cmpsb pop jmp jecxz xor imul sarb fdivrs movsl stos jno push mov mov aad pop in jmp pop mov div data16 or lock pop add mov mov sub add inc cli pop or mov pop cld push and cmp push dec fs xchg mov jns cmp cmp movsb icebp shrb or int3 xchg (bad) fidivr stc lods push dec xor ret pop jb stc das mov loopw sbb add adc mov std popa sub fimull sub sub clc pusha cltd jbe sub and loopne pop scas cmc xor push cwtl cmpsb pop sbb cmp cli cmpsl add sbb add fidiv xchg push test shrb imull inc lock fsubs in (bad) cld sub pusha dec adc inc dec div push je cmp xchg popa in scas cli push mov sbb addr16 inc insl sub sbb xor int cmp cwtl ret inc lods test outsl pop add sub sub push insl pushf push ljmp push hlt popa fnstsw bound inc jp addl mov shrb fild sbb loope mov or xchg lock sub in sub fadd rcll mov rcrl (bad) hlt inc enter cmp insl ror and jmp int lret divb repnz or xor dec mov rorl mov test xchg (bad) repz fs daa sbb (bad) sub fimul cmp orps mov and cmp adc xor fstpl enter adc inc imul push push mov add push dec in enter or or sbb mov jne out leave push jl rcr notl cmc rorl and xor mov lcall cmp xor pusha inc stos jg in leave xor cmc lds in stos pop jbe cmp lret xlat jb push jge push iret mov push lea ror cltd in mov mov add pop dec mov fistl es sbbb inc add xor int je cmp jne js pop push out mov test xor dec dec call push mov jo jo std sub and mov gs mov aas or les imul hlt cmp rol cmp dec stos add cmp xor clc cwtl sub scas mov mov fimul insl dec repz push (bad) jne rcr sbb mov push pop pusha cmc leave push imul xor lahf movsl or xchg jbe ds inc fxch or out in and jae push pop push idiv out add mov xchg fwait mov stos inc adc fbstp sahf mov ret mov and push shl pop xchg xchg icebp inc stos xchg or test mov pop loope or xchg inc ljmp inc inc sub sbb out sbb push sti and push scas repz mov dec out test xor jb loopne lods sub mov push mov sbb cmovne sbb insb lret jne pop add cmp and add movsb out aad push mov dec jns jmp mov add push push inc (bad) shll idivb cmp and ds arpl std fcomps jno loop and (bad) into or cltd test insb loop ds mov fcmovnu xor jmp hlt cmp js test imul out cmc insl ret aaa pop fsubl add lcall (bad) repz dec stos xchg adc jns pop sub jle cmp adc mov mov fstp outsl sbb call mov fcmovnbe or enter xor pop neg addr16 xchg lds pop lahf push and lret movsl popa in add mov mov and and fwait cmc stos and push ffree call dec seta or xchg xchg sub iret push lahf pop out push leave (bad) jnp jo,pt lock lock mov ja dec xor inc fldcw lea jnp add and iret popa jg scas mov cs cmp xchg scas sub sbb xchg push push test and adcb add dec add inc xchg js sbb sbbl repnz push outsb xchg sti (bad) sbb cwtl int3 inc jns bound (bad) repz xor mov sub lds mov (bad) cmp add testb push fldl xor mov mov pusha xchg mov jmp jb mov adc mov pop push hlt aad or mov pushf xchg xor enter sub jmp stos adc ficompl pop xchg and pusha cmp jns je out and int out repz mov mov or mov outsb mov clc xchg pusha in sbb mov mov jo out movsl (bad) dec pop ds (bad) call out lea je cmp int3 ljmp aas test inc clc cmp dec cs ds and seta dec test fldenv mov push xor (bad) ss mov movsb (bad) adc loope inc jb int pop inc push movsl les bound xchg mov cmpsb icebp lock insl sbb lret mov mov out je cmp ljmp rcl addr16 das or add rolb hlt sbb lods les sub sbb add pop jge xor jns bound jecxz ret data16 xor pop cli push sub movsl cmp or lcall fucomip inc cmp mov ja je (bad) xor pusha push push add xor inc fsubrp sbb and mov push mov jno mull inc loop mov stc fs jns push into pop xchg fisub in mov scas imul aaa sub and inc (bad) sub (bad) pop clc fwait ret cmp outsb cmp sub sbb or lea out (bad) test push aas sti jle aad int outsl movsb add mov jbe inc scas and dec dec dec mov insl push in cmp or and pop cld and and xchg iret add outsb cmc bound inc inc mov or in jne jnp sub or inc bound ljmp adc xchg ret xlat in repz push sti fsub (bad) sub pop test loop (bad) (bad) dec dec jmp (bad) aam aam loope mov dec mov mov push je and push inc loopne add and or dec add movsb lds repz ret stos or ljmp insl mov mov adc jecxz adc push subl wbinvd lret aad enter pop arpl loope lods inc mov bound iret outsb xor divb lcall outsl gs xor push xchg dec test adc faddp mov cmpsl test add push dec mov mov push clc ds lock pop pop xor push (bad) or mov lods (bad) aas scas (bad) dec shrl mov mov insb jp xor xchg pop pop call pop stos sub xchg mov stos lret (bad) test cmp push mov mov or adc popa sbb out cwtl jle js push xchg es cmpsb mov dec add push jmp mov sub inc sbb jecxz push mov dec mov ljmp and dec insl sbb aam add movsl cmp (bad) not fs xchg jge pop pop mov cld xlat sub pop dec sbb or fldl lcall push add idivb ljmp mov add out push test adc cmpsb pop mov cwtl dec pop jecxz or sub or mov outsb or (bad) popa stos xor cmp push push jo mov and dec xor mov fildl push jb insb ret test jle imul lea mov or push enter xchg lret pop cli sbbl out test pop jge (bad) jecxz,pn lcall imul push mov xchg dec leave push lds cmp lods jne out leave jl add insb jmp mov jle pop jge mov push lret xchg rorb pusha add sbb mov pop fldcw adc fisttp pushf sub stos or dec inc movsb and movsb daa xchg mov shr mov pop fmuls xchg xchg popa add mov adc dec add mov lods clc cmp mov cmp aad in or sbb stos add mov test out ljmp pop xchg cmp jg jmp adc dec mov aam xchg pop dec lds push xchg push insl arpl lds and inc jg mov leave add mov xor and arpl xchg (bad) cs pop imul pop mov cmpsl imul (bad) sbb and std mov mov movsl dec mov mov in shll mov cld mov lds cmpsl mov fistp sub push sbb daa bts pop (bad) std ror call (bad) jge vaddsd pop pusha cld xor push jmp mov mov (bad) inc mov mov mov je dec gs incb xorb cwtl shrl sub in or and mov (bad) jns fsubs mov push jno lock lret leave jb pop xor addr16 aad adc mov iret sbb mov xor popf add dec lods and imul cmc inc adc mov add jle ljmp ret mov dec push movsb in cmpsl sbb (bad) jle pop sub pop fwait movsb sbb cmpsb jle add xor movsl cmp (bad) jb fs jno aad sbb movsl mov (bad) pushf cmovbe rcll in cmpsb mov call gs dec mov xchg lahf push lret lds dec mov mov and nop pop mov lcall mov pop or adc mov pop icebp or sahf movl cmp mov mov adc pop imul push insl xor add jg popf shrb iret dec imul aaa push dec int3 lret mov adc idivb stos mov xchg icebp out jp adc cltd lret xor mov jge int jnp clc or rcr sbb adc lret aam mov (bad) into pop inc outsb (bad) mov loop push jnp pop adc push jae ja int3 and dec or push jb mov fcomp dec push mov repz fsubl icebp sahf cmp leave and test (bad) enter jl jnp jnp fnstsw or add mov icebp in scas or scas jl nop test fistp lds jne cmp xchg push sti pop and mov push jo aam add xchg es cltd push sbb into fwait xchg add popa dec cmp out jmp jp xchg gs es jae rcr mov sbb lds mov fiadd cwtl mov (bad) cmp ss cltd inc sti hlt daa data16 jecxz cld and shrl lods pop dec lods andl adc movsb mov push cs push mov sub xchg xchg sub (bad) push hlt dec scas mov pusha movsl push imul dec jns push outsl push fidivl mov or mov jb xchg insb push pusha add sub mov int3 addr16 test jno jo test mov jne pop bound jbe (bad) pushf jle sarl out rolb adc mov xchg pop test loop sbb adc hlt movsl dec jecxz subl adc in andl lock pop jbe aad dec xor stos loop pop xchg test or mov sbb in push mov in and and push int3 mov fisttpll out push push dec nop and ss xor push sub jae aad mov (bad) sahf fs add push mov lods xchg pusha pushf (bad) divl movsl loop jns sbb xchg das ss and xchg mov leave scas dec dec and or imul xchg ja sub mov test or xor add test out pop lret orl loop test movsb mov inc adc xor clc outsl fldenv pusha test dec mov cli (bad) lret mov adc sbb pop mov dec mov sub lahf adc and mov sub inc (bad) into sub rcll jmp xchg ss mov pop jb fsubr mov push inc jbe fnclex mov jecxz fisubrl inc or adc fsubp inc inc stc in shlb cmp fmull mov out nop inc sbb jne insl enter cvtdq2ps aaa into pusha xchg lods movsl mov inc mov jae iret (bad) cmp push mov lret adc sbb ljmp dec aam cs aaa mov cwtl (bad) mov fs xor leave mov jbe jmp stos or daa cmp (bad) subl pop mov lock mov icebp cmp cwtl imul sbb pop jl adc inc inc inc and cmp call stc in xlat xchg out adc sbb or jmp cmp in sub sbb push add adc dec rorb out mov aas dec lahf rorl and jge das addr16 sbb xor xchg mov cmp hlt xchg mov inc insb lods sub cs stos (bad) cmpsl int aas bound or into (bad) loop lods inc cmp cmp jp jb inc sub and jecxz aam popa xchg stc cs movsl pop hlt push in push push xchg inc dec inc sbb out orl pop pusha jle mov jg push jbe out xor adc cmp outsb pop scas push cmp aaa ljmp dec xlat adcl imul loopne mov adc scas cmp je fs cli sub ljmp in push push fnstsw mov sbb push mov aas sbb movl icebp test (bad) lret fdivrl mov xorl pop adc pop lret mov sub pop daa mov out mov test (bad) mov nopl (bad) int out or push loopne cmp sbb add jl jle les fdivr pop shlb sub cmp stos loopne or cmc in fsubrp or or orl add lret and mov fwait test into mov ljmp and push add dec xlat jge xchg aas inc scas les mov testb test (bad) mov xor int3 mov (bad) (bad) fiaddl mov mov bound mov lds pop sbb mov lret push insb xchg fdivrp shrb cmpsb js mov (bad) push mov inc int xlat push pop lods mov mov cltd subb push stos mov inc inc fsub sub adc pop xchg pop in in test sti jp mov adc xchg inc scas sahf xor ljmp cmpsl mov jmp or adc icebp imul das dec es mull inc fcmovu ss jmp stos add jecxz je xor pop addr16 mov jmp insl inc lea fcmovnu pop pop jbe rorb fcoml lock dec push pop aas fstps stc (bad) out mov cmc and jl mov dec inc inc jb cmp cmpl inc or test fisubrl cmp or or jp ds lds adc xor and cmp jne ds outsb pmaddwd (bad) not rorb jg cmp cli cmpsl mov outsl sbb (bad) fdivl outsb in push aam (bad) das inc inc xchg and sti xchg ja (bad) push out mov or mov movsl add mov inc (bad) push imul into lret fsqrt mov xchg jle nop add cmp test xorl mov xor or idivb xor jo add jle push ss lret icebp push stos cmpl int lahf push mov xor or (bad) sar inc jg popf dec sbb fs jnp push fcmovnu in fwait dec push dec (bad) xor sub sub dec adc in mov and adc insl js ret mov xchg popf jno rcr in cli push jg mov cld mov mov test ljmp and iret push in mov pop repnz cmp rcrl push cmp xchg ret das cmpsl xor add mov shlb fsubl xor dec push lods dec lock mov jbe add test cmp pop adc fnop or push mov mov leave cmc jg idivb pushf push push xchg push mov xchg call leave loopne sub lret mov (bad) out push ds fwait add imul sub add bound mov mov pop repz mov sub adcb mov mov sub jb xchg push jae std ret xchg pop push leave adc cli push dec push sbb push in add pop test int cmp leave pushf scas dec push or int3 xor xchg adc arpl (bad) mov mov ljmp pop xchg (bad) mov mov mov negl inc pop lahf sbb mov dec or shll into push ds sarb adc insl sti adc or lret inc lock fsubl cmp addr16 mov out mov mov or jbe cmp sbb and xor add push cli or pop pop mov dec stos dec jae aam aaa sub push mov lret pop int3 or jnp into dec adc punpckhdq cli scas lea cmp jnp jbe test lret dec sub ret push pushf sahf (bad) mov inc jecxz mov cmp push xchg mov xchg (bad) cli and inc cmp xor mov (bad) (bad) icebp lcall loope dec scas repz in (bad) pop mov inc push repz add ret popf or fsubs xor (bad) les (bad) repnz imul data16 and sub iret scas push mov outsl pop mov sbb aad iret (bad) jg pop and jne insb sbb xor sbb fisttpl push push ja stc jnp and push push pusha jne ss inc movsl pushf stos fs push out fs enter aaa jmp data16 or push and pop jne loop sbb jmp xchg je jne sti aam inc mov pop cmpsl pop insb lds add mov (bad) fcompl jle sub cmp sub shrd fsts lods dec fsubrs pop adc jecxz inc out jne or mov mov sbb movsb (bad) and (bad) pushf (bad) test push mov and mov fistpll les and cwtl add popf sub inc inc xchg mov push jo lea mov in xchg inc mov repz push pop mov cmp pop movsl xchg sbb push add xchg push inc pop movsl sbb aam outsl popf aam cmpsl call and adc pop std outsb ret push cli xchg mov fcmovnb add cmp lods xchg ret mov push sub das (bad) inc sbb out out pop (bad) leave add mov lahf add call push push sub adc push cmp push (bad) mov xor lcall or shr das outsl cmp cmp jl jp xchg repz jg call psrlw scas mov push fidivrl or ljmp loopne or stos cmp inc or lret lods fisttp xor adc inc imul lock fstl mov dec adc call xchg in add int add shrl cwtl pop sarb push push test add mov dec mov xor add xchg movsb sbb xchg add inc loop dec or pop adc les inc cmpl stos int es iret mov and pop roll dec xor pop aas enter repnz xchg (bad) (bad) xchg aaa cld mov or in dec jnp push and lahf popa and lret inc ret mov adc lret push pop call loop push test mov mov mov mov out or sbb cmpsb add outsl xor jge jg jno push test (bad) insl jns aas pop in inc jno mov xor dec adc out stos lock inc inc or or shrl or pinsrw les (bad) outsb loopne push push xchg cmc cmpsb pop sub xchg jecxz jg sbb lahf push out insl ds shrl jb mov mov fstpt or and pop push fistpll adcl test jp sbb punpckldq cwtl sbb xchg jp jecxz hlt dec mov pop loop mov cmpsl sti imul pop js enter push insb sub jbe xchg xor mov aad gs inc test sbb inc aad js imul adc jae add test adc popa inc sub or dec push int3 xchg cld pop or ja mov call xor sbb in out add push aaa js dec xchg sarb fwait and and bound ja push xchg xor push fcmovnbe insb dec xchg daa and imul sub stos nop jae and daa pop dec or sbb fidivl addl subl cwtl jae ja ja nop out (bad) shrb sub jmp mov lds and daa mov cmp xchg inc xlat out cli adc into or insl xor ljmp addl xor mov imul repnz mov ja scas (bad) mov fnsave pop dec movb cmc out or adc add (bad) jg pop fscale xor pushf test call xchg lds mov xor jnp add pop stc ja dec sub or mov les scas hlt dec adc push lret mov outsb jb lods mov xchg jecxz sarb push (bad) into jmp ss cli push call xor mov call push mov jae cld faddl lret stos ss rcr adc push rcll xor sub mov ds pop out push mov push inc sbb fisubr cmc inc shrl (bad) mov jb xrelease cmp cmpsb push push test or addr16 ljmp rcrl nop mov xchg psubb jno ja sbb sub add and or mov loopne stos loope xor pop imul (bad) icebp pusha inc jp pop dec xlat (bad) mov scas add xchg jecxz ret popa or test nop sbbl (bad) enter sbb lret scas out jg repnz sub jg,pn and hlt and es popf dec or pop jg mov out ja (bad) and mov xchg pop enter inc data16 xor dec mov imul xlat dec leave mov (bad) stc xchg loope (bad) cmc sbb addb js mov mov ss sub mov into mov in jl lret jp gs xor in xor push jnp mov test fbld xorb movsl negb xchg mov movsl enter cli outsb aad lret jbe sbb vpinsrw outsl outsl sub push and sub test test int clc xchg push insb fmul or data16 pop mov xchg pop fldenv enter nop (bad) xchg jg cmp mov insl dec push rcl push loopne push in sbb js leave es xchg dec sahf call movl nop (bad) mov dec add adc inc xor sub mov or xlat das test or les fs mov mov xchg arpl or (bad) loopne pop mov adc cltd outsl xchg ljmp nop sub sub mov push cmpsl pop jnp dec and add (bad) adc jb popa sub cmp mov lea repz jno (bad) mov xchg push add shrb out arpl jnp lcall minps inc outsl pusha jnp pushf aad mov adc mov out hlt lods out lahf mov fistpll pop sbb add xchg xor (bad) mov add (bad) add popa cwtl je or mov mov in sub cmp aam mov mov pop push lahf pop cmc xchg xor mov cmc and mov mov xor aam push cmp inc in adc ja sub cwtl loop cmpb aaa mov fwait insl test mov cs mov lret insl sbb divl in jecxz or dec arpl daa pop add ljmp jno loop sbb mov cld adc out cmc jmp cmp cmpsb (bad) xor sub je mov jne pop int3 loopne hlt adc adc lahf sub out orl loope adc sub cmp lahf and mov adc mov lret test rclb push movsl (bad) cmp inc in (bad) mov ljmp mov xor mov pushf adc jmp cmp jne test jl popf repz loop mov lret (bad) jmp out or mov cmp fnstsw out xorl in inc adc dec xor cmp lock and shrb dec xchg jle out shrb push or cmp adc movsb (bad) addr16 insl push mov pop jbe pusha fcompl rorl add mov mov xor xor fsubl outsb pop cmc out xor pop lods push nop pop fsubrp jle rcl jp cmpsb into call cli add popa enter jbe clc cwtl add push dec int inc push je pop inc xchg sbb cmp mov mov cs test cmpsl sbb cmp or or mov add push das inc pop add sarb xchg sahf dec mov jecxz out xchg stos xchg int3 addr16 out ljmp (bad) imul mov mov lods inc call or push sub data16 push mov mov out inc cmp push push (bad) jmp xchg clc xor pmovmskb mov ss sbb pusha std test sbb push sahf movzbl test jl dec in outsl sahf cltd dec fstl pop mov fcompl pop stos dec xor sbb mov out (bad) pop dec mov sub push mov lods test cld lods inc test popf jo notl dec call mov jno iret jge cmpsl es stos outsl gs adc jns add pop pusha out or mov or out mov dec and dec (bad) mov sub cmpsl xchg xor (bad) mov sub jb daa mov add and jnp leave lahf pusha mov sti sub rcll pop push jno (bad) lret mov addr16 mov cmpsb fwait push fmul ja sbb ljmp insl mov (bad) cwtl repz mov push jle (bad) mov xchg mov leave jg lds xor xchg aam call mov ss mov addr16 jbe icebp int3 pop cmp dec mov ljmp pop mov inc cmp xchg inc pop dec cmpsl adc (bad) ja (bad) lods or inc outsl push stc imul adc xchg orl iret cmc lcall sahf add out adc jns (bad) xlat aam mov fnstsw jae es mov xchg data16 and les lret pop movsl enter cs into sbb jp xchg ss ret in cmp test lds ficomp shll inc mov aad std pop test leave push dec bnd jne and add xor sar jge stos and imul xchg test lds sub imul inc sub mov mov loope cmpl push sti ljmp sbb xor cld or lods repz sub cli test and push jnp pop mov (bad) jns out imul inc mov fwait addr16 test mov cmpsb and and sbb (bad) xor adc pushf aad fsubl or cs test lret cld jecxz stos lret pop inc push inc call lahf mov (bad) hlt sarl int dec or imull pop inc pusha addr16 add fcompl add jle ret cld in push push call mov sbb cmpsb test pushf lock sbb nop push sub or (bad) rorb (bad) scas pop pop (bad) xor ret lods mov in gs xchg fistl pusha push or jl jmp das add or mov ja sbb pop into cmc (bad) mov js and fdivrl inc lods mov xchg ja inc out (bad) out enter dec xor or insb enter js sub inc test int3 push insb cld pop mov fdivr xor adc ffreep rcll imul pop sub add push jmp cmp sbb cmp insl xor popf xchg loopne orl mov xchg scas movsl add sahf scas aam sbb (bad) cmp rcrb adc sbb sub into incl int3 cmp mov sub in fist push cwtl jle into pop ja (bad) mov test daa push cli shl jnp repnz in push inc and in ljmp stos seto push sbb mov dec jg cmp stos dec sbb inc cmpl lock in pop mov jg,pn push cltd data16 xchg out dec ret aam mov jne lahf mov imul pop fwait scas insl jmp adc lret ficoml dec jno mov rcl push imul pop sarb lret into mov push xchg mov sbb push popf incl les push scas es mov mov jbe pop js xchg gs mov scas cmc in sbb (bad) incb adc xchg (bad) jmp xchg es mov sub mov stc nop inc sahf clc and scas ja lods jae xlat dec inc push xor xor pusha push jle pop int xchg andl adc pop fldt imul xchg or xchg dec dec (bad) arpl dec cli xchg pop push aas sti pop jge or sbb xlat in mov out fldt ss and cmpsl cmp dec jecxz mov push and and mov pop jae aaa in sub inc int push out jge and ret int dec dec and sbb adc fwait mov mov leave rolb in pop xchg adc and loop gs aam sbb andl sbb out sub data16 cli cmp sbb negb push ret pushf pop and jge cmp lock mov mov hlt jge push push sarl adc aaa add and mov mov sub fdivr jae mov lcall jmp dec cli cmc add loope and fdivr and incb sub inc sbb sarl mov inc pop push (bad) aad inc xchg shl inc cs mov ss lret push stos pop lahf sub lea movsbl jge xchg in shlb hlt jle sbb mov iret (bad) push call std jp push mov fwait sub shl inc das ret fcmovbe inc lret (bad) cmpsl and (bad) int3 sub stos sbb pop leave outsl addr16 xor or mov mov add mov mov paddb inc add das cmp fisttp icebp imul imul loopne push insb or mov push pusha ret lahf mov dec xorb sub cwtl jl xchg (bad) cmp adc push cmp ja jno enter adc mov inc lret mov pop pop lcall push (bad) movsb push fcomps mov and addl xor aas add jp jp cltd stos out mov mov insb inc stc int cmp in insb es xchg jo mov adcl (bad) jle pop hlt (bad) outsb lret add int3 pop and loopne cmc xchg adc cmp push mov jne shlb addr16 es pop xchg idivb push fstl cltd leave icebp stc push dec dec dec sbb std sub jne mov jae insl and or jle loop and lcall sbb test cwtl push jo rcr pop add cmpsb pop xor xor cmpsl pop pusha sbb roll xchg rolb cltd sbb divb test pop add popf jp sub jp mov mov aad dec cmpsl fist icebp adc aad ret jmp stos out and add mov add out test std ficom jne pop call icebp aas fmulp test jge and out jb cld sbb adc dec pop mov push pop ljmp cvtps2pd mov iret and fiaddl ret and jns xchg imul or xor adcl mov lods mov mov test cmp inc (bad) xchg fisttp inc (bad) roll dec cmp arpl (bad) out fdivrp xor fsubrs adc stos pop pop rcr jae jae sbb test (bad) jns outsl popf cmp fucomip leave shrl push push inc cld aad mov inc (bad) into jmp sub jl cmp ds push cmp add imul lret fcoml sub xor mov sbb and jno xchg (bad) or jns push pop outsl mov mov push mov cmp dec movswl add repnz fisttpl and mov (bad) repnz mov int xor xchg pushf je (bad) mov imul jae out popf fcmovne aas mov sub repnz pop add inc rol push (bad) mov fist cmp fmull inc fs mov call outsb ficompl cmp aas sbb lods out ja xor mov jl mov lret sub cmp (bad) add cmp scas test cli repnz dec lahf pop insl inc jnp push adc divb and in repz xchg (bad) test add sub lock loope je and pop xchg mov jecxz push pop roll bound dec dec call dec fwait push insb mov and mov pop pusha (bad) dec dec mov lods xor or lods rcr mov pop dec mov cs add leave test mov xor stos cmp cmp cltd jns push test lret jns movsl inc sub (bad) dec add lahf sub mov xor jmp out dec out cmpsb repnz (bad) call pusha in sbb adc fstps outsl jle das cmp daa ljmp xor sarl fidiv xchg sbb sub xchg xchg jne or xchg mov dec add push nop or out cmp xchg sub jle imulb jno hlt mov lds daa sarl cmp or and jne dec sbb fdivrl add stc pushf sbb jb xorl push fmull sar jmp iret in imulb push jg push (bad) xor outsl ret enter dec xchg lret push or cmpsl addr16 aaa sub loop or ret lods enter add sbb ljmp repz mov outsl inc jecxz and pop shl popa mov push xor jl sub enter sarl push leave aad pop shrl mov jne leave or cld mov dec out mov movsl dec aas mov and aas rorb mov mov sub out push (bad) aam jno out clc call (bad) fsubrl aas sahf or push mov out iret pop sub dec stos shll dec xchg clc mov adc xchg xchg cmp clc cwtl js pop das push mov xor negl adc lods cmc jno dec gs rcrl jne or stos jns mov les pop cli (bad) loop jb cmc inc mov jge pop jbe pop jo mov (bad) mov mov dec out fmulp sbb jp cmp sbb adc pop lea fldl sbb push mov inc mov fcmovne push mov ficoml sub clc ljmp test ret leave push mov mov mov pushl push repnz daa (bad) push ds fs pop mov and insb mov fcompl add ja xchg xchg sbb mov xor jmp jl xchg jb inc mov aaa fwait (bad) push bound jno xchg sbb or push cltd push mov xor mov mov je pop or shlb xchg sub mov ret ret ret cmp mov xor stc int jp les scas or sti mov push sbb inc ja add test mov lds aas pmulhw shrb rolb fbld lods mov push dec js int or mov and fist or jb cmp fisub rolb rorl (bad) jge mov lcall jg repnz push stc jno decb imul cmp mov insl mov nop sbb jl in lcall pop dec (bad) jge add or jbe mov outsl adc pop imul mov fdivr jbe push and sbb xor out mov pop ss pushf (bad) bound test jo int mov xorb add sti push mov ret loope sarb sub cmp aam int3 imull mov std pop dec sti fild cwtl pop mov mov adc push pop lret mov popf enter lret pushf jne mov push push pop or icebp mov ss mov fsts stos push outsb repnz hlt jae repnz xchg jmp imul inc cmp dec sbb push add xorl push xchg push sbb imul adc push pushf or (bad) nop mov adc into push sub daa lahf cltd scas cmp out lods jecxz xchg sti sti xchg and mov add cs xor scas mov or lret ja bound (bad) btc stos aas in pop cld mov mov pop (bad) pop add adc dec test scas lcall sub pop pop negl paddw jbe aas cltd dec lret scas or add inc notb mov cmp ficoml outsb bound ljmp lahf mov movsl push fisubl sti in popa stos lea test sub loope lods mov mov cmpsl jo mov in (bad) jbe sbb pop inc mov jo mov add pop loope fs iret push adcl jno andl adc cmp cld jl inc ret les int cmp stos xor sbb aam jge sbbl sbb (bad) fidivrl xchg sbb dec sub inc inc xchg (bad) gs xlat icebp sub or sbb leave dec jecxz add xchg xor mov mov inc jb clc rcrb or sub stos adc test ljmp add cmp and cmp iret pop pop in fmulp adc std out lahf add cmp cmpsl mov (bad) (bad) cli inc or out mov mov adc leave scas pop lods lea lret sub in push jmp cs enter insb int3 adc ljmp jmp ds mov pushl cld (bad) xlat insb (bad) stos (bad) imul arpl pusha jae xor outsl fcmovne inc xchg jmp in push les lock fidiv adc (bad) sub sbb test lds (bad) mov fnsave cmp in (bad) sub push xchg mov jae push (bad) in jne enter test inc ds inc out stc loope mov cmp les les adc add mov insl aaa jmp jl pusha jno and xor dec test and push loopne fldl mov sbb ret (bad) mov jg mov inc gs shlb adc xor cs js and or popa jne int dec lret or inc jp cli add or cwtl mov pushf sbb mov not std cmp aaa scas out cwtl xchg adc mov pop or stc notb jmp addr16 xchg les pop mov jle or push inc cmp test test mov jns inc out test push out pop xchg call nop pop dec out sbbb cmp addr16 int jecxz das jae pusha mov popf lock lret add add add xchg scas ror cmp std and es lea jae mov out mov pop movsb pop iret inc xor les arpl cli sub lahf in mov pusha adc repnz and mov lock decb push lods cmp xlat subb jp dec nop repnz dec dec pop ss call in sahf jnp sbb das imul (bad) push scas mov mov xor dec add jbe fistp enter repz mov aaa and pop test xor cwtl iret push data16 mov mov aas (bad) fcom test xor (bad) sub imulb rolb inc fisttpl cmpsl lcall lret adc outsl mov adc bound lret test mov jnp mov test ficoml add pop jmp adc mov popl sub in testl pop ror add jnp insb fisubr push add push pop push push adc xchg stos nop lahf ret mov dec xor lods movsl pop lea popf xchg add ret cld add inc jp mov das pop js xor pop cli pop pop inc fcoms push add mov outsb aas mov lea dec xor (bad) out cmp sbb sub ds mov jg mov sbb adc out mov cltd or imulb xor jb cmp loope add add pop xchg loopne call test xchg shrb adc stos mov pop out fldt arpl jg outsb inc imul pop dec xchg cmpsb mov jb push daa rolb mul sub pop lods mov pop (bad) cmp xchg outsl xor sbb xchg inc std loop addr16 movsl div daa adc xor xor dec cmpsl dec pop ret imul add mov push test add xchg mov mov pop dec scas xchg xor repz add inc ficoml lea std sub movsb jl hlt push mov pushl scas ljmp pushf cmpsb out mov jno xor or lods jg jg mov ds adc sarl movb jne inc mov pop mov cmp add jne add cmp icebp les loopne movl xor mov add mov ja inc inc (bad) loope je pop push pop push fstpt xorl dec (bad) pop jns and mov adc mov mov mov sbb mov or and insl mov insl cli insl nop (bad) jecxz dec xor mov (bad) cmp inc lcall xor add and cmc sbb movsb pop cmp dec add iret inc push xor mov in adc push fist fcmovne push adc dec dec imul (bad) outsl mov push icebp in jne test add adc xorb js hlt inc lods cmpsl rol out lods fildl rorb xor dec sub fcompl push data16 lods (bad) in test jp push dec push movsl adc adc pop rclb test popa xor push dec cmp ret lahf imul dec cmpsl mov inc xchg sbb pop push mov lcall xchg das cmp pop adc and pop cmpsl mov lds insb jnp outsl mov inc sbb sub in int3 mov push (bad) sti fdivrl addr16 jno in and cmp fsubrp and loop cwtl fcompl mov sbb add adc add pop dec cs test inc ljmp cmp xchg hlt jae mov jecxz adc or mov das mov mov mov push mov ret fist inc sub jp mov outsb lea fimul test pop mov jns push sbbl adc jge and add mov jb mov xchg adc pop sti xor iret popa outsb rclb mov inc (bad) jecxz jns test lock push push lcall neg adc imul fnstenv lret stc push pusha outsb pop js pop or inc popa sbb addl mul xlat fdivp sbb fstpt imul lret jp cmp mov movl nop into pop push lds pop pop pop enter or pop adc push push mov into movsl out mov sbb xchg push or jge push in fbld popa xor or xor mov lea mov push cmp lods stc dec out adc or imul fisub test cli or mov xchg test push enter popa jp sti dec inc dec fmul and cmp (bad) jae adc xor or cmc fisubrl mov push cmp hlt outsl popa jb xor push aaa push mov lret pop and push push cmp ret dec subl outsb sbb mov sahf and xorl cmp jae sbbb outsb cmp mov popa and test outsl xor sbb mov xor pop cmp mov mov or pushf shl mov cmpsb mov int3 lret push in xlat std lahf int3 mov mov jae popf jl pop sbb mov scas lds jnp jo push add jbe data16 (bad) mov xchg gs ffree call cwtl or pop sub push pop jnp cmp test cmpsb inc xchg mov imul cmp scas dec xchg pop fcoml jnp (bad) es add mov or in pop and push or pusha xchg inc dec rclb fs push jp sahf sub adc insb or insb jmp stos mov pusha movsb pavgw sbbl adc pop (bad) lret fildl daa loop in pop popf jmp movsb xchg xchg xchg leave jbe outsb pop test sub mov pop mov addr16 scas mov xlat add mov and leave push cmp adc gs xlat dec lcall scas cld je sub dec orb mov inc cmp (bad) loope lock cmp lret and cmp aas cld adc cltd mov addr16 aaa orl pop into loop xchg insl test cmp arpl jl pop lahf jp cmpsb cmpsb pop or jb data16 rorl ficomp lea sbb inc outsb dec sub mov rorl inc mov lcall and and xchg rcr add sbb sbb mov cltd clc mov xor mov xchg je out push aad (bad) stos xor cmp adc int add sub inc ret pop push fyl2x ja bound fiaddl cwtl das ret (bad) and mov insb pop adc ja mov outsb cmp xchg loopne fnstsw shlb lcall mov sub iret push lock mov aas outsb inc pop (bad) xor dec sub sub mov pop mov cmp and sub mov lds faddl movsl outsl repz fcomps mov dec and (bad) lret jbe mov enter adc ss rorb nop xchg (bad) mov popf jle stos sti xor (bad) mov fcompl sbb lods test pop jnp cltd test and mov dec and pop pop add clc popf xchg testl mov in or lcall fwait jne push mov hlt cmpsl and inc nop mov jno out testb push mov xlat xchg push pop jb mov add or out jle imul nop repz mov idivb inc jecxz imul pop mov adc aam lds sarb cmp cltd out cli insb (bad) sbb cmpsl xchg insb sarb pop sbb mov and jns (bad) movsb aad lods ljmp sub jp xlat je mov inc mov mov fs fist ljmp jle push mov push add mov fwait movsl mov dec xchg mov pop mov mov mov mov mov mov clc das nop xchg mov adcb sub xor cmp in mov add insl cmpsl adc jl jo in aaa fcomp mov dec rcrl adc hlt bound lods jns sub add or daa aas push mov adc xor sub (bad) shr dec mov jle cmpsb ja jg mov bound fildl mov (bad) push xchg outsb jp inc stos mov inc ficompl jnp stc and and fnstsw xchg cltd in and popa jne sti repnz dec pop jg xor or (bad) or out inc and xchg sbb or pop sub cmp mov add jecxz test adc stc cmpsl jnp dec ss adc lods test stc or xor cld pop icebp push (bad) aaa add clc jle dec push push inc jmp jb mov dec loope adc mov mov lds cwtl mov inc out dec pop mov lret adc repnz outsb movsl sti push pop cmp dec fstps test mov incb shrl fs cmp push add adc add cmp ret xchg cmp pop in mov inc cmpsb ljmp mov lds andb imulb mov mov inc out push int cld pop jecxz test outsl je lret pop xchg hlt adc outsl loop cltd mov add (bad) in xchg pusha jle in cmpsl mov mov scas xchg jge push dec scas ja adc mov inc jns add add mov in pop sub cs xchg mov push in sbb mov inc add adc int3 ret in jo (bad) push gs pushf or enter push cmp fidivl push xchg aam es pop cltd xchg (bad) (bad) ja dec push into or mov rcrl jnp inc dec (bad) push inc xor push in pop fwait inc mov xor add test mov popl fidivr pop push push fistpl fildll mov mov push sbb les xor in loope sub sbb xchg in xor in pcmpeqb jecxz push cli inc push ljmp pop shrb dec push inc call aaa xor (bad) mull push push lcall mov out cmp pop addl pop xchg imull dec lahf mov fldenv loop add fnstcw adc lods pushf inc mov iret es icebp mov adc cmp fs andnps scas pop cmpsb gs push lcall cmp icebp cmp mov pop hlt (bad) fist imul call inc addr16 addr16 int3 mov stos cmp pop inc jg rcll adc dec insb idivb iret inc outsl jnp adc hlt xor inc fdivl pop sarl xor push jbe imul mov mov inc addb xchg or lock xor jmp add fsubrs inc adc adc bound ja out fwait movb jns adc push cmp imul call imulb or lock enter les pop sub xchg inc int es push xor cltd cmpsl fs dec adc pusha fld mov add shrl out test setle outsl dec (bad) mov ljmp icebp (bad) pop pop push in loop stc adc rclb popf inc or addr16 in mov inc jb fildl xor pushf ja dec cmp addr16 cmc xlat leave imul sti mov stc add icebp add insb lret sarl adc aaa xlat push push xchg shrb mov jbe adc and loop loope mov pop repz mov jo inc mov mov cmp lock jp scas imul and pop or sbb dec sub pop push fwait in xor imul and stos mov cmp enter mov inc (bad) stc loopne pop mov ss cmp mov and pusha in pop fcomi ficompl sub adc loop mov shrb xor jmp jno stc pop sbb rorl adc and sarb je pop in or daa in cmpsl push add xchg sub pop cmp pop pop cmpsb mov add sub adc dec bound sbb adc xorl adc pop xchg inc pop mov or lds movsb xchg mov inc gs popf and mov inc adc lahf xorl lea mov out mov lods aad sub rolb mov xor push add jmp push add add insb pop pusha andl and das or loopne xchg mov lds (bad) ficomp pop hlt fadd mov nop xchg (bad) out (bad) mov cmp inc mov lahf fcomps jp (bad) pop lahf mov jmp pop add sbb scas xchg gs sarb pushf jp sbb inc loopne push pop mov pop stos ljmp repz cmp fimul (bad) sbbl hlt sbbb dec jno push jns jbe in test and jl jns mov mov hlt outsl mov cwtl orl je out push in bound fsubl ss sub cmp repz push cmp std hlt in ret stos icebp aam mov mov call jae,pt cmpsb sbbl movsb lcall mov dec sub xchg je jge pop loopne es jae mov pop push ret add fist xor jecxz ljmp repnz popa lock lea sub (bad) enter mov push out xchg int pop leave ret js es (bad) xor rol loope push sub cltd arpl dec enter mov mov lret fistpll xchg mov into adc sbb imul adc shrl pop data16 ret jp cwtl sub out xchg subl fild mov mov cld pop stc (bad) movsb dec arpl or push pop push daa rcrl test cmp pop adc ljmp mov repnz pop ss lods test sbbl push mov adc pop jle dec and iret dec xor jns pop mov mov xchg sbb in repz insl aam jae into sbb xchg pop psubd mov mov stc je clc jmp andl out cmp push inc dec cmp lcall jp fstpl js sub dec jle bound repz outsb mov mov mov mov add xor neg push imul adc cmp pop clc fs sbb inc cmp push mov xchg scas sbb and dec icebp jno scas push dec xor pop das fdivrl xchg fs lea mov cmp rorb inc sub and ret push pop into lret in into arpl jb mov daa scas mov fbstp cmp or push daa in jg (bad) cmpsb xor sub xor sub arpl ret mov orb and js sub (bad) enter cs sahf setae dec and out test in aas push out pusha mov neg vmwrite mov lea movsb mov cmp ja pop into fwait sbb mov rorb or out insl ret inc inc sub iret pop pop xchg stos loopne popf or mov pop mov mov aaa mov sub xor adc bound loope aaa mov frstor popa insb sub movsb sub xchg ds add aad shl dec jbe pusha jb xor je lock add sub push (bad) out ret jo adc pop fnstenvs int3 pop cmpsl pop lret ret (bad) dec in clc inc fucomp push mov pop adc popa nop adc adc mov pop mov adc xor rcll je inc iret test mov sub or pop (bad) mov dec popa mov dec mov leave lds xchg nop xchg andl aam xchg addl mov aad movsb lcall mov nop in jp push push or fwait in xchg mov sub pop adc xor cmpsl loopne icebp mov fcoml or sbb or mov adc mov sub jne sbb ret stc js mov xorl xchg push clc mov adc pop adc es iret sahf je orl rcl ret pop inc mov xchg pop push push add les int3 mov idivl lret (bad) mov (bad) (bad) adc sti mov pop fwait mov pusha mov push (bad) iret inc imul outsb out or (bad) (bad) dec mov fisttpl push or push push and pop outsb adc movsb and add sahf mov test fsubrl (bad) jb in jae inc out jo mov test sub sbb mov inc (bad) stc xchg jecxz sbb sbb mov lea jno stos adc aaa mov xchg mov stos das push cltd fimull js mov (bad) xor movsb xchg push push mov push fwait or push push inc dec cmp or adc or pusha pop rolb pop popa mov scas mov movsl shrb scas mov pop sbb lods jo sbb test and repz mov pop sbb out insl inc or mov (bad) mov adc rcll pop sub out adc inc aas mov pop or mov repnz scas lcall out sbb xorl lods orb pop jo sarb iret (bad) pop lock push fdivs in sti clc test lcall ret xchg test or pop xor pop sub jne (bad) scas pop inc sbb popa (bad) cmc push mov cmp push cmp xchg ret dec pop aad fidiv xor xlat shlb pop pop cmp in jno xor push inc in mov mov adc jno and not js arpl (bad) cmc cli add cmp fisttp popf sub mov jmp cs xchg add lret xor mov push rcl loop cwtl nop jg push add xor xchg stc jmp jg add and xchg mov pusha loope ficomp sti xchg fnstsw jle in push stos mov ret inc or data16 sti aas frstor and mov stos xor pop adc mov xorb mov fmull (bad) fistp js xor add sub div jmp aam jae and xchg pop std test xchg sbb cltd lcall outsl add push roll and mov sub sub mov shll cmp mov test aam fstpl sub mov cwtl dec add dec outsb inc mov icebp daa xlat ret mov les mov jno xchg ss jecxz dec jns add xchg bound je and dec inc mov mov mov (bad) (bad) in popf arpl or mov scas int3 cmp cmpsb cmp adcl jbe lahf add fnstcw push (bad) push jmp push or ret jnp adc lods add push rol sub in aam stos add cs daa test sbb add and out push cmc fdivs lahf pop ljmp xor mov sub adc xchg push mov mov ret and lahf mov lock mov movsb mov divl adc pop movsl scas push cs sbb call xchg mov fisubrl adc add mov repnz ret inc push sbb ret mov push jge mov xchg mov ja sbb insb add push mov imul pop adc in push mov (bad) jns xchg les sub (bad) inc or adc loopne out outsl cmpl or xchg es mov xor cmp sarl mov stos in push leave pop or jb sbb sbb jne das movsb xchg dec or movsl lret push sbb add cld popf jae ret mov addr16 dec cmp dec mov outsb mov mov mov jae inc pusha enter xchg fmull stos inc repnz jl cmp fild test fnsave (bad) outsb cmp mov fildl mov jnp orl in hlt in lock ds shrl orl inc xor les out inc pop cmp lcall pop sbb jne ret leave aas mov pmullw and mov lret jle std mov mov int3 xchg mov pop aad fimull lret dec push and movsl jb lret pop imul jmp (bad) pmulhw and pop mov in or movsl das jp movsl xchg pop mov jae sbb mov pop push testb mov push mov cmc inc outsl loop clc add xchg push (bad) movsb and (bad) insl xor test and inc or stos (bad) movsl cltd test stos jg adc jmp xchg xchg nop nop fisttpl sbbl jbe xchg add test pop mov ror push or or movsl inc cld fldenv test add je addr16 or les int3 scas mov pop push mov or sbb ret or fwait or (bad) adc mov fistp fistp ds sub loope mov add jne mov dec adc mov dec stos mov mov mov and sub sbb repnz leave mov inc hlt inc cmpsb and (bad) repz mov lea icebp mov inc ss push call adc cltd inc data16 xchg ds out push jge pop mov mov loopne fsubrs jge inc inc out add mov icebp jno dec mov stos and xor adc (bad) std aaa push mov pop leave les loopne push imul into aaa dec mov xlat xor mov mov adc add push adc dec popf pop (bad) jb fmuls popf leave cmpsl inc enter push cmp inc aad adc lods stos pop outsb mov das inc scas xchg pop sub es cmp push shrl and gs jbe mov popf mov loopne scas imul mov cmp adc clc int push insl jae lea loope (bad) roll inc cmp mov das mov adc addr16 xlat xor arpl lods shlb lahf divl xor xchg mov jmp daa cmp fwait cmpb les test leave sub xchg clc outsl mov scas add (bad) (bad) xor adc outsb (bad) mov scas xchg push and call adc xor popf push mov mov int3 loope (bad) pushf lret enter (bad) mov mov jmp insb mov cwtl aam push scas movsb jl aas call addr16 rorb mov push icebp cld sub mov mov (bad) ja sbb (bad) icebp data16 add dec addr16 mov adc (bad) popf aam add aam loope mov push or cli test jp sti mov test test or mov xor xchg int3 call xchg sub push fidivl xchg add mov js mov adc mov sbb fs add mov inc inc fldt xchg int3 inc adc loop cmp pop xlat mov orb pop out pop gs mov sbb and ja test movsl jno and sub in out aas cmp cwtl mov lret stos les cmpsb mov or (bad) shll mov dec xor dec jae test movups cld sub stos mov cs xchg xchg arpl out fdivrl stos (bad) or (bad) jo ja lock movsl and or or popf mov dec mov rcll int data16 or sbb cmp repz imul fyl2x popa add jge push dec scas sbbl insb test jne shll pop std xchg fcompl or pop adc popa sbb jg mov data16 lcall xchg xchg jnp mov sub in outsl imul outsl lret test popf fwait movsl push xor sub stc pop imul fildl mov daa mov in enter mov mov imul cld pop adc aam jmp out cltd push cmpsl std mov test or cli js mov cs dec hlt mov xchg negl pop jo ret in mov mov sbb sbb enter rorl or pop sti fcompp jg jmp mov daa xchg rcrb out xor cmp lds cwtl dec xchg xchg (bad) aad mov outsb inc push push (bad) dec in (bad) pushf and rcrb leave mov iret pop bound test mov loopne jne push mov rol inc lods imul pop jno (bad) sti and clts xchg aam dec adc inc into pop cmc int fwait mov sbb lret insl pop std ss insb shrb aad fild inc stc cs cwtl push scas mov push inc mov dec test xchg outsb jno xor andb fisubl mov cmp or out jp rorl fcoms loope mov add mov ljmp orl push xor mov mov or roll sahf pop lds aaa bnd sub cmp cwtl jle jecxz adc xchg pop sub xchg or sub fistl je jae stos or (bad) faddl test fmuls fdivs inc aam xchg lock gs (bad) sahf xchg nop xchg vmovdqa stos xor pusha mov xor add adc cmpsb pop (bad) outsb mov jae (bad) mov int3 mov test sti jbe mov push jb leave cmc test ljmp dec les frstor test push xlat shlb or dec imul fbstp jl pop pop mov jge call test loop cmp inc jp pop or push in movsl call adc movsb sub mov jmp in movsl psubq (bad) in sti iret ja mov xchg push fwait or jge dec inc ss xchg orl xchg fnstenv lods inc mov and test mov mov sub sub mov (bad) mov xor std fcmovu fdivr sbb cmpsl mov add movsl pop test in or mov les movsl pushf or jns jecxz in mov pop data16 xlat cmp mov inc sub ficompl (bad) mov pop push pop setbe adc cmc (bad) xchg (bad) fcos fcom stos mov or mov xchg xor scas xor adc rorb jmp sti (bad) jp sub sub jmp and repnz mov sub fnop clc in cmp xlat or cmpsl cld mov dec into push jnp adc push imul inc sbb xor cs dec mov lods xchg lock push dec lods aas cmpsl sub fcoms pop push sub fdivrl dec insl ljmp sub fildll out movsl lahf stos dec push (bad) xchg xchg scas mov jp sbb enter cmp inc and test or pop xor push push push mov out or shrb pop movsb subl push sub jl scas out fisubrl or cmp mov push es mov das incl fdivs xchg xor push jg xlat jae stos outsl pushf scas lods cmp xchg mov sbb add jge add cmp dec sbb dec jnp test jle jbe or sbb pop or movsb dec xchg jecxz cmp mov xchg xor icebp addr16 cmpsb fwait (bad) lea jle mov and sub cld out mov xlat (bad) push je inc xor inc test ss cmc jmp inc orl sbb push daa les xchg icebp popf jbe jnp fadd std movsl (bad) aam pusha test add movsl js or popf xchg js fsubrp pop mov (bad) out xchg sti xchg test fs pop ds ret add mov sbb fxch lods xor push mov loop xor pop cmp jo xor jp mov sub fisubrl pop push inc cmp movsb das fs fmuls pushl pop add cmpsl popa mov aad popa mov fsts in push xchg test fidivr shr jbe insb add adc loopne enter mov insl mov and popa push adc stc movsb insl scas fisttp cld addr16 jecxz dec sub aad test push jecxz mov aam sbb dec add inc popa inc jnp sti insb dec jle cmpb jne adc xchg dec dec (bad) sarb pop out dec lret mov leave je and out int pop sbb push inc out out xchg mov cmp sub cli pop test ljmp jno xchg aad jmp cmpsl in int inc mov je jae mov out jmp into lcall push mov xchg movsb insb sub sbb aaa xor add mov sbb mov fidivr push dec adc mov insb fsubp cltd push adc inc xor jns or push push push (bad) pusha loopne lods mov push add cmc js movsb out and shl fs mov stos push inc sub popa or xchg shr ret stc scas sarb loope adc jno cs fwait outsb iret inc inc push and andl pop inc pop xchg jmp fwait (bad) xor out push sbb lods sbb mov imul jp mov pop (bad) xor xor les test cli jno and jge lea popf cs icebp cld mov lahf fs out (bad) push or mov outsb addr16 leave xor mov cmpl cmp or inc outsl cltd sbb ja clc shr cmp arpl jg inc jmp dec jns imul rcr mov rcrb cld insl jmp dec in mov ljmp aad pop fadds push idivl push repnz jg rcl xor and jl jne jns insl cld push ds shrb adc xorb nop popl mov (bad) aaa xchg pushw add jg test sbb pop and xor add push push data16 mov lcall fucomi lods ja jo outsb xor mov push jnp jns jne sbb gs ficompl pusha in int stos add cmp and xor jecxz xor mov adc and nop pop xlat jbe lcall cmp push cwtl mov push movl es inc mov adc mov out (bad) push sbb push cmpsl aad fmul out cltd andl push xchg fs mov lret fidivr jecxz mov outsl lea xor sbb imul add add clc aam decb jo adc mov cld (bad) sub mov stc popa dec sub cmp es call jae outsb in xchg and jge mov js pop in xchg pop add fidiv scas sahf push mov (bad) (bad) jbe cltd sbb out xchg fistl (bad) jle mov mov mov int lcall lcall popf mov mov leave lock xor hlt out cmp fsubr out mov je rol ds inc and cltd int lcall ja insb mov mov lock lods iret dec inc dec in es inc insl or cli adc jno dec mov lcall mov int3 nop push sub mov imul push pop test xor sub outsb cltd movb xor sbb sub pop mov adc jo sub das hlt mov jo andl shr adc stc pop mov insb jae mov int (bad) or jnp rcll out popa out jg pop fcmovu popa dec push dec idivl enter (bad) sbb (bad) and pop jnp push (bad) fidiv adc idivl mov and popf xor (bad) xchg lcall mov push in (bad) out scas out sbb cmp push mov rcrb xchg adc dec scas cmpsl and xlat mov sbb gs inc xlat in mov add adcb cmp and pusha or xor add mov mov xchg jl in aas jno xchg fidivr add mov rcr addr16 or mov pop cwtl xchg adc mov mov sbb xchg fldcw mov fucomip (bad) hlt jg std xor icebp orb fsubs inc iret jl and out mov bound clc std jl push imul dec mov adc scas lret inc fcoms fdivrs in bound call data16 aad stos fimull inc orb nop push cmp fwait out mov xor push mov repnz cmpsb sub lds insb (bad) jecxz fwait sbbl push cltd (bad) xor cmp mov dec hlt push inc andl insl pop inc ss sahf mov inc pop aam mov or roll sub loopne adc jg jns or and add inc ret loope adc loop out outsl (bad) push mov sar in shrl and sub or lahf cmp xchg idiv and and js add pop jnp,pn sub mov cli dec add out adc push test xor cmp mov mov push add sbb xor popa pop mov out sub jge mov jge,pt lods mov jecxz nop (bad) fdivrl push push in js aad jo jle push lcall mov int (bad) jae fist jae pop mov aam adc xchg pop sub mov pop lods lock adc lcall nop dec adc add mov lret sbb pop inc sub jg pusha fildll pop or rclb stos cltd (bad) add into xchg fnsave lret adc mov enter mov push cmpsb rep gs sub push cmpsb enter repnz inc xchg inc xor arpl sbb (bad) ja lret gs inc dec pop xchg lock sarl mov inc negl js pop dec int jg addr16 jne push movsl (bad) or cmova outsb or xorb (bad) jmp (bad) arpl imul jo pusha jb push mov mov hlt rol je pop inc dec mov inc and pop lret cmpsl adc push fidivl push sahf push sub xchg mov (bad) repnz subb cltd inc lcall insl stos out xor pop out inc fsubr inc jp pop cld jmp sti or pop inc test addr16 and mov nop jmp shrb mov out or roll inc or (bad) test mov sub mov add and in dec negb sbb and inc dec (bad) dec fld loop loopne loopne,pn xchg xor push addb pop fmulp das push cmc inc sub xchg xchg stos mov cli mov gs push inc push adc jmp and bound mov pop movsb push out cltd jbe inc inc cmp and les lcall inc (bad) push stos call cmpl jno in add jecxz lret inc aad mov decb jge mov push negl mov jg push xchg scas inc (bad) mov push fcomp xor ss fcomps flds scas inc sbb inc pop aaa mov cmp loope or pushf or push test aad adc xchg add dec cmp mov mov cmp (bad) sub fistpl inc push mov insb int3 or add sbb fwait lds iret mov dec xchg mov cmp push fcompl jg or cmp (bad) mov cltd xor add add in adcb sete les loope xchg pop sar mov iret sbb cli mov jo cmp xchg or lods cmp in mov mov call scas repnz adc enter movsl ja arpl add leave xchg in lods mov aam pusha sbb outsb mov pop adc push push adc pop (bad) dec dec pusha loope push cmp lods xor loopne mov fsubl mov scas push aaa jg (bad) lahf in fwait out jo in and xor sbb adc rcrl movsl cli cltd or xchg rorl adc fnstsw add mov pop or hlt stc mov mov pop rep addr16 xor (bad) pop adc fimul pusha mov cmp mov push fisttpl ljmp and test in push lret stos repz (bad) or punpcklbw jo mov loope sbb or mov (bad) cwtl loope ss icebp lods loope (bad) hlt fstl adc orb enter pop sbb fldenv dec jns cmp jbe mov (bad) jne fsts and inc dec xor pop movsl lods ja ds mov push xchg in mov add nop inc insb cmpl outsl cmpsb add pop sahf jnp or std cmpsb xor movb and add and cmp clc adc dec push push aaa in fistpll popw and mov mov inc es cmpl add and movsb mov sub lcall aad sbb mov and enter jmp and (bad) pusha xchg lds jbe mov sbb aas mov clc fbld cs test mov arpl mov mov jmp test xor test out lock add dec xor or adc dec jne pop stos enter lret popa jl cli lods and in xchg xor in shll adc (bad) xor cld shlb fs jp sbb mov mov mov int mov insb xchg lds adc xchg inc (bad) xrstor cmp mov (bad) sub mov mov aas scas into lock in xor mov sahf cltd in int3 ficom lods kmovb cmp call sub mov add cltd clc push jno loope stos xor lahf mov or icebp frstpm(287 mov jno dec rorl xor mov xor ss loopne (bad) div sub int3 mov shlb je xor imul test cmp imul stc fsubrs cmpsl xor lods out mov cmpsb mov pop test lods mov daa imul push add jo call mov int3 into into sahf mov cmp sub lods bound in dec xchg inc pop nop xorb mov aad imul (bad) (bad) adc mov movsb inc (bad) icebp jo pop or daa xchg in arpl out fisttpl inc jge aas loop mov jmp jmp rcrl icebp pop push pop fidivl xchg leave cli cmpsl stos aam mov bound mov jmp dec adc call xor outsb outsl (bad) popf dec sbbb xchg mov mov xor sbb dec out jle or stos inc or cwtl bound xor sub imul mov sahf jb popf movsl xchg call push nop out scas xchg outsl pop (bad) and inc test jno daa jns std pop and push inc out mov out in jne jle outsb fcoml insl inc jg xchg aaa out adc (bad) dec mov sub sub call stc adc xchg or lret lods xchg push or int mov push pop ljmp inc test sbb sbb and imul fadds movsl jl pop adc mov dec pmuludq sbb cmc pop movsl sbb mov and pop inc push mov jno jge xorl mov sub repnz jge push jbe sets ja jo into pop jns inc sub test aas mov dec xchg sbb icebp dec sbb dec sbb cltd loop sbb push aaa add mov xchg cld jecxz push dec inc mov flds popa jp mov shr xchg scas popf and add push mov cmp add jecxz push mov dec adc cmp aas in mov adc repz push push fcompl cwtl lock cli dec movsl lods sti sub adc stc (bad) xor jbe mov mov bound push sbb pop call push bound inc popa sub int3 cltd loopne outsb int cmpsb sbb inc dec jb enter out add call jo sbb mov lds add jmp add clc (bad) rol jle xchg sub ss sti jae cmp jns or sub int hlt jbe push popf into outsl xor or adc cltd xor add inc lods inc mov pop aaa mov test outsb lret dec adc mov (bad) sti mov out lods inc push addr16 fs shl ffree nop loop hlt in test mov cwtl repz add or out (bad) lahf pop adc ljmp sar xlat fwait outsl shlb ds hlt pop jg inc mov icebp test sbb sub inc jns nop and sbb xchg dec mov fistpl mov out inc push mov rcr adc pop mov mov and and and push and mov push or sti sbb sub movnti imul or add mov pop push int3 and xor xor or and insb fdivs shlb adc stos popf and cmc fiaddl sti push inc pop pop out rcrb lds test dec (bad) xor pusha push lahf push cli adc loope mov pop pop je jg mov ja push out or cmp add cmp dec lea fidiv pop imull test sbb stos mov mov icebp sar push cmpsb xchg pop push scas rorl pop xor rorl sbb pop insb and mov mov jae test jae sti sub popf int3 mov dec jmp push adc insb pop mov jbe addr16 (bad) push sbb pop jbe mov xchg add mov add in je stos hlt ror push push and sbb mov mov ret jne sub dec ljmp mov call hlt inc sub cmp enter fwait cmp test (bad) cmp mov aad lds mov lret out and arpl les pop sbb fnop ss insb mov mov xchg clc ret mov rorl loope pop jp jecxz push inc idiv mov inc push pop jl jbe sbb fistpl int pop test adc cmp mov outsl in lods iret lods pop pop stos fwait mov ret push icebp or sub xorl push outsb aam fcoml mov mov movsb jge pop aas dec les incl xchg cvttps2pi ds inc lret jp pusha ret mov inc out and jle sti or scas hlt mov int3 dec imul incb js jb push gs movsl inc push sub jecxz xchg dec loop popa mov add test fnsave push (bad) mov pop mov cli or roll pusha dec divb push test jns xor xchg out xor xchg lret (bad) daa adc fldenv pop push jecxz repnz mov lahf xor push pop xor pop les lcall lods je cli inc movsb ss mov lock jge adc inc (bad) jg lret repz int3 xchg hlt outsl lock pop je and int jecxz outsl cld pop pop lods das xchg xor je lea imul rcrl or push jl pop xor dec mov xchg mov out mov cmp mov jg sti adc xchg clc dec sti push mov mov subb pop pop int rorl sbb jp lds jns jns lods dec adc aam jbe lcall (bad) sbb ret ja insl and jg ficomp int3 dec mov nop loop cmpsb in fiaddl (bad) into addl stos cmpsl jnp mov pop xchg lret push push and dec test call or dec mov mov sub pop or sbb mov fptan xor sarl ljmp fwait inc repz push aad ds xor in scas push jmp (bad) jno fdivrp cwtl xor stc out fsts inc xchg cmp sub and mov stc ljmp popf jbe push mov mov or into inc rolb jmp push cs stos jl push mov stc or fcmovbe popa test push (bad) pop jge popf mov das jge xor adc push popf loop push cmp lods out sarl jmp dec dec ficomp shll dec xor je jl into cwtl jl sahf add cmp inc sub push sub dec push mov jg push push cmp jecxz rcrb sub cwtl jmp mov mov sub xorb cmp outsb cwtl fsubl pop inc xchg mov es cmp dec cmp inc dec push in stos cmp imul cmp imul (bad) push adc xlat lcall aaa aaa cmp adc or xchg jo cli push jno sahf push pop das loop mov scas inc adc mov xlat jle inc cmc xchg adc push call dec addl push push lahf pop aaa inc pop inc jecxz push xor pop add (bad) shr jno dec xchg and lods test xor popa (bad) les lret scas loopne cmpsl mov imul mull gs adc (bad) cmp shr stos jnp push mov (bad) int3 xchg cmpsl lcall jg loop push push xlat sbb bound inc pop push cmp pushf loopne jle fs fs cli fildll jl push std (bad) out stos pop sbb or jb xor pop push test call push jno addl push push je cwtl fcompl mov arpl push mov jno test cmp stos mov je je or out jge cmp push int3 daa jae pop outsl adc dec and xorl ss aam sub lock xor ret pusha bound mov lea dec sbb sbb pop and stc jp pop lods pop add ret push mov and mov xchg mov imul xor loop inc leave lret outsl jle fwait mov lcall sub xchg add nop adc or scas and sarb stos leave jp out or addl (bad) test pushf and (bad) adc pcmpeqb mov cmp scas jle and jnp mov sbb sub sahf divb push jecxz pop sub ret inc push sti aaa mov in mov scas test scas sarb dec clc in mov push loopne pushf cmpsl push add xlat push out inc into addr16 dec adc mull sbb es dec push fldt cld inc fcomps mov test lds sub cmpsb mov in sub mov sbb (bad) sti enter ds push gs dec adc into cwtl stc fisttp push jecxz dec fiadd dec aas roll insb popa xor enter sarb cltd jns add inc movb inc clc inc lds sub sub xchg pop ljmp iret push lahf and lahf (bad) aaa or inc lret push dec insl pushf lock push mov or push mov mov jno xchg inc jl cs add loope mov int sbb iret jecxz enter or (bad) adc jno out push and (bad) dec aaa adc lods stos es push sub lret andl add lea or ljmp andl jb in loopne int3 dec pop addr16 test lods mov mov imul pop mov loopne in mov out pop mov mov jbe cmp stc insl or inc dec sub sbb push add pop loope ljmp cli adc fsubrl lret movb out xor dec aad push dec cmp out fs mov hlt jge mov out jns int3 cs pop cmp hlt mov push adc mov hlt std fbstp gs dec sbb out je jmp cwtl (bad) mov lods xor xchg adc pop sub push gs sbb jecxz cwtl pop push add out test cmpsl fcomip data16 mov popa dec iret insb sbb inc outsl gs adc movsl adc pushf lock popf and test fdivp or leave bound fsubrl cmpsb pop add pop inc loope fstl out mov mov pop and movsb jne inc dec shll loope insl inc cmpsl cs ss pop jnp dec fimul pop inc (bad) push das push cmp mov das push mov sti adc adc xor ss out into addr16 aad add mov into sbb (bad) repz cmpsb imul jmp sub arpl xchg xor jo pop sarb fwait (bad) cmp xor rorb push pop jp pop xchg gs fcmovnb adc aaa push (bad) stos add pop add rcl out sbb test std push or stos push in ja js pop dec (bad) aaa int3 andl scas cmp (bad) push scas xor xor add fsts ss aas inc cmc mov sub bound dec mov das jmp sbb addr16 push dec push out sbb mov fstpt mov adc insb (bad) sbb xchg ret pop jp mov sahf test dec fidivl mov sbb mov jl jg and popl rcl loopne adc out pop xchg jno jge mov and dec pop mov test jae sahf mov mov movsb xlat insl fiaddl jecxz lret dec cmp inc mov push inc fidiv orl in mov xorl dec cs aad mov fdivs cmp loope leave mov dec scas cltd in inc jle pushf xchg jmp sbb xchg push outsb push mov aam mov in fwait or mov lods mov sti cmp iret cmpsl jp pop fiadd pop sti ficoml loope mov jmp jae lahf push adc (bad) and jge das dec xchg in enter (bad) dec in adcl or ficom test or roll orb hlt daa pusha xchg pop aad mov dec sbb jnp pop (bad) jbe push dec jne add or sbb in test (bad) mov insl hlt add out adc or es add mov cmpsb icebp dec cld inc nop lret (bad) cli pop in rclb in push jno mov outsb adc mov mov and mov lret repz setl sbb stos mov push ret fistpl fcoml test fs mov into js fwait int3 mov sahf fildl arpl push mov jp pop pop xchg aas (bad) loopne icebp xchg ja mov mov leave lods pop jecxz ret mov mov (bad) jns pushf fnstcw push mov dec mov stc cmc fdivrp lds mov xchg jg dec dec jecxz lds adc iret mov pop mov cmpsb repz jb lds fisubr test mov and aam jl inc mov scas add insl add inc jno mov (bad) xchg enter adc negl mov insl es insb fistpl add and push jg icebp inc stos jne rolb cmpsb imul loope and fmuls iret sub push mov mov pop imul xor scas imul das xchg push out testb adc aad jecxz pop sbb test icebp mov imul sub adc xchg pop xchg cmpsl jo xor adc loope mov push orl xor mov adc lock xchg dec (bad) stos out inc mov sbb pop xchg add popa dec pop sub mov fcoms repnz stos (bad) or repnz fwait jg and jb (bad) movsl test cmp push nop repz xor rol aas jo fsubl push ret (bad) push fidiv ret insl (bad) cli loope je repnz add adc push loopne push add lahf push pop lahf jge mov mov cmp cwtl aad mov or mov (bad) cwtl jl (bad) idivl dec inc and lret pusha lds (bad) adc out daa push out lret into adc (bad) mov imul push inc add gs enter inc add fstpl pop jbe xchg xor ret pop push mov push enter pop addr16 cmp insl pop mov dec and sbb cmp and or (bad) ds sub out int jb dec std push fdivl movsl insl icebp pop mov sbb mov negl push mul adc test mov ret imul cmp (bad) cmpsl xor push lret lods std cs in pop test push in fmull push and popf sub sbb loopne fs jbe sub and test cmp inc cmp movsb adc add or ds jge movsb imul cltd dec push rorb adc or hlt push cmp jne fist (bad) dec sub repz sbb or add mov hlt inc inc xor sub in or outsl mov sarl clc mov insb cltd aam jp mov stos loop pop push lock or and xor jo pop pop add add out cmc sbb outsl sbb push dec ret dec js sbb orb imul mov fidivr cmp cmp shr mov push adc jbe dec jnp shrb insl stos sbb fildl inc mov (bad) je jg mov fmuls ret or add jg movsl addr16 push cmpsl addl int cld push leave cmc (bad) push mov aad in cltd (bad) jno pop cmp push cs mov adc and popf push jecxz sub adc outsl ja lods lret int dec xchg iret enter add cmp or dec push jecxz lea push notb dec repz test pop fs aam icebp mov push mov in cmp sahf outsb sbb adc and in ds pop mov xchg imul add lock jo cmp test in adc push ja pop push adc pop jno sti lock sti push mov ret loop bound stos push out lret mov cmp adc adc iret scas dec mov icebp pop cmp push loop adc jno sbb out add adc xchg mov sbb stos (bad) xor sarb adc aam gs mov dec cmp mov fldenv jo xchg adcl jl pop std inc out test out out fwait push mov int mov ret inc mov fildll push push js orb mov fisubl popa test push push push pop push in pushf jmp and sti push pop mov out clc idivb and aam xchg pop leave cwtl and data16 inc shlb inc or stc mov lret cmp lds into mov jecxz mov int dec lods xor or pop push add les add jbe xchg mov imul ja dec rorl mov sbb jns ss dec push fild mov add inc adcb out mov (bad) icebp fldcw popf lods enter addr16 push sub inc push mov mov mov jb cmc stos inc sub sbb jmp mov movsb inc mov pop call dec mov sub movsb mov lods jne scas fdivr pop cmp cmp xchg aad adc ret inc pop ds inc xor cs sahf adc ret fwait stos mov mov push pusha adcl mov outsb mov pop rolb pop mov mov lret rorb outsb mov adc add mov push les rorl sbb out mov in adc sub and aad sbb jne push icebp int and scas clc addr16 push das fcoms mov inc inc test sbb inc pop and xchg leave inc lahf add xchg fildll inc inc adc jecxz cmp int sbb loopne (bad) imulb les mov in or mov inc daa ds pop fcomi add push push jle sbb cli sbb push mov pop aaa sbb or scas (bad) dec cmp dec in xlat cmp ss xchg ret jbe jg (bad) push fs xor insl or inc push cmp popa sbb sub test mov pop (bad) mov adc out dec enter fisttpll cmp mov shlb lahf or adcb sbb in dec pop sti inc inc or test sbb mov add out (bad) push mov ss lods add mov dec int sti mov push aam js xchg and fwait dec stc inc pop cmp push xor mov mov repz vaddps add leave jns mov inc sbb pop sub dec and jnp cmp mov cmp jb loopne out mov mov inc repz cmp ja sbb pop mov push lea mov ret fsubs inc mov fs xor pop cmp xor test shlb jns and mov or dec div flds repnz pop pop jne inc mov mov and jmp fstps ja mov shl dec cs push int3 jo (bad) aam (bad) dec fucompp test push and pop mov xor sub sbb ret ljmp fiadd insl fs xchg adc imul scas sbb push add jne ret xchg jmp adc and fildl sarl (bad) jb,pn mov movsb cmp subb push adc or lock cmp xor popl jp jl and inc outsl scas fsubp inc hlt lcall jns jno mov and fs popa dec pop xor xor mov iret test push jmp pop insb call pop push (bad) addr16 int3 dec dec mov fwait das push (bad) jbe adc vmread xlat jl aad cmpsl push mov sarb imul arpl sahf and add outsl pop sbb (bad) jbe sub arpl fstpt loop lret movsl mov lret mov mov jecxz hlt mov cli lods fwait bound cli xchg pop scas xor aaa in scas scas shll sub jecxz fild mov jecxz sub pop mov xchg add ret std fldt jns ja lahf push scas xchg aad cmpsb jmp ss sbb xor dec aas pop cmp or or sub or xchg push inc mov jp pushl scas cmc mov add icebp ss call mov imul jne add stc mov movsb je add loopne lea jmp outsl sti orl lds shld and mov pop shrb out xorl dec (bad) lret push clc mov adc push mov roll (bad) pop outsb push ret mov pop push xchg mov jno dec dec lods arpl add cmp insl adc aad xchg sbb movsb mov jb cli xor inc xor ret cmp cmp test adc mov pop loope daa adc mov les std add jecxz mov push shlb aas (bad) arpl mov push xchg cmp xor push sbb jne adc leave jle cmpsl xchg dec dec push arpl mov mov push clc stc pop outsl int3 in jbe outsb (bad) dec orb pop mov fsubl mov mov and xor bound xlat jle into loop xchg mov sahf or (bad) mov mov fisubl pop hlt cmc roll sbb pop sti es pop (bad) mov xchg popf add push out lods popa inc xor addr16 lahf pop inc push insl not pop sbb push adc fwait repnz std pop lahf push adc in xchg jns orb sub (bad) push ljmp inc sub mov gs dec ret ror add roll sub stc jb xchg shlb cli inc lds enter jmp jnp std sub movsl xchg les mov cmp fldenv outsb adc jae jbe xor mov jno inc mov ret mov xor lock push rorb cmpsl xchg repz sub inc dec shl dec int pop fild mov loop adc notl cs aam and push inc jo rcrb stos mov sub mov addr16 subl jl roll cmp adc mov sub mov (bad) jecxz icebp je stos (bad) insb jg loop out outsb xor out imul out test dec popa fiaddl mov shlb fadd cmp mov andl lahf jmp stos fildl xchg adc call jg outsl ja pop sub scas xor in add push jb cmp inc call and mov hlt and lahf cmp or (bad) arpl adc push jnp ss fs mov in cmp dec or mov addr16 add ja and ret mov dec mov cmp push mov jns lret push add mov push int3 dec cmp lret and (bad) test inc (bad) mov adc dec dec cmc stos cmpsl mov jmp and shrb out sbb call adc xor add and push push iret cmpsl xchg push xlat sub out (bad) lret dec sbb dec shrb adcl loopne xchg sbbl call mov sub imul cmpsb je add fs push std mov iret pushf push add xor call xor add and and sbb mov repnz push add mov mov jae sbb test mov or pop cmp leave int3 push es imul push cli dec jne add push xchg inc add loope xchg adc sbb sbb jmp xchg jg outsl pop add pop pop rcll loop js push add push movsb lret fnstsw movsb out in mov (bad) cmovp cmpsb adc mov lret xchg mov or sbb adc mov mov (bad) xor sbb cmc shlb test inc xchg jmp dec dec pop and cmp add imulb js mov push lds adc movsl scas dec lcall paddusb in nop cli andl test imul cwtl pop xor movsb test arpl adc xchg xchg dec negb xor ljmp shrl and mov movsl sbb in push cmpsl jno mov pop lods jecxz mov xchg lret cltd push aas push pop dec outsb push xchg dec sbb and xchg mov mov addr16 cmc and bnd push xchg hlt inc inc divb out pop (bad) je add iret fwait mov inc roll cmp leave test fnstcw dec push hlt mov add ja add jnp nop bound shll mov mov out push and adc dec scas add and int3 rol pop pop into jge call dec mov xchg cmp and popa jb and or jge fwait stos adc int std xlat xchg fdivl movsb mov cmc dec in icebp dec add jmp push movsl or stos cmp mov in out jae lret xlat mov insl lds fwait leave xchg push lock jl cmc add dec mov (bad) mov or jb sbb mov adc or dec mov stos mov aam cwtl fdivl xchg test mov and iret mov mov cmp (bad) fadds cltd push sub and in cs insb popa sbb rep cmp stos out out cmp inc mov fisttp imul stc in jno icebp or mov mov out xchg scas cs inc add arpl jmp stos cmp lahf dec adcb sub push fwait and inc mov outsl test adc inc fsubrp jl test stos (bad) into popf mov dec cmp lods sti dec fwait lock push cmpsl xchg mov les out loopne jle shlb lcall mov inc mov inc cmp addb addr16 lahf mov xor lods std add adc and aas sub inc dec in inc ljmp ljmp xor ss cmp or cmpsl push sbb orl mov lods enter or xchg icebp lds ds pushf xor dec xor mov (bad) lret test pushf jmp dec mov cmp ss sub add push fsubp dec xchg cwtl (bad) xor sbb mov loop push enter sbb jecxz mov add and gs xchg fcoml sub mov aam fldcw mov xchg xor (bad) or pop (bad) mov outsb mov push push mov sub mov cwtl sub (bad) rcrl sub lea lea cwtl xchg test lods int3 arpl das in cmp ds sbb cld dec lea cld sub (bad) pusha fwait mov xor sub insl movsl stos (bad) jno cmpsl imul lret mov repnz cmc push and pop add pop repnz mov fcoms mov loop mov jbe push mov pop jg rcr sub adc scas daa cld dec das mov push hlt dec and (bad) or sbb push aam dec movsb aad int mov and inc sahf mov jns stos icebp cs roll sbb flds add aam movsl mov sub mov dec jnp insl je in add ja (bad) cmp add cmp cmp iret or int3 sarb shrl jb dec ljmp shrb add xchg (bad) loopne (bad) int3 jb fimul jo (bad) sbb xor push mov jp pop pusha (bad) lret (bad) ljmp lret rcrb scas pop inc sti lahf cwtl (bad) ss mov subl sub mov and jo (bad) adc stos adc rol add (bad) pop test mov pop push vpunpckhqdq mov out ret inc jmp or and push je or push xchg adc lahf mov jb sub lcall cs jg jmp mov ror je xor scas adc jne ss adc iret mov outsw enter xor mov in stos jge fcmovb pop xchg out leave push xchg and mov xchg cmp adc jmp leave dec std or inc adc mov das out sub mov and fidivr push jne pop iret js pop add repnz pop test cmpsl movsl jo jmp adc int sub sub test xchg fisttpll xchg mov les mov pushf add pop sti mov call pop or fstl (bad) adc pop sub mov (bad) inc jnp and xchg addr16 mov inc mov xchg jo sub cmc adc aam jecxz (bad) testl aaa lcall sbbl inc cwtl push rorb les fcomps xor ljmp js pusha sub loopne cwtl outsb (bad) jno xchg jo mov jb jmp pushf sbb sbb push shll mov or loope mov sbb mov ret adc ljmp icebp push jo adc cmp xchg push mov pop xlat dec jp mov or inc inc cwtl lock hlt and ficom test fist scas ljmp divps test xlat sbb (bad) mov insl adc sbb pop add in xchg insb pop imul pop lods sub cmc jns xor dec push inc sbb movl pop js out mov cmp xlat movsl jno scas add jnp pop pop sub add lahf pop rol xor xor dec mov cmpsb sbb popf cmp push (bad) xor imul test sbb mov xor sub and aad loopne hlt mov outsl scas mov mov mov inc stc cmp pusha fwait subl in cmp mov std imull sub push sub adc aaa (bad) mov je in xchg cmp loop int3 test imul ret aas cltd mov lock jmp fdivrs cmpsb xchg or sbb testl mov sti mov std and xlat inc pop sbb push es adc fsubp jns and (bad) or (bad) push movsb and sahf adc xchg call xchg lahf or cmp pop adc add ror int3 mov (bad) (bad) or jge jge sub push pop iret jo and out dec out movl (bad) in scas or ljmp loope shlb rolb add movsl cmp je mov repz aad xor (bad) mov push jge scas add ret mov xor aad testb fmulp or dec std xchg pop mov movsb vpunpcklqdq sbb mov mov push (bad) pop mov pop fidivrl push dec daa xchg notl (bad) jne adc jmp outsl pop push push jno jge loop pop lahf mov repnz sbb sarb pop or test xchg in lret sahf repz or int fisubrl mov mov sbb push or cld push mov mov int3 mov mov pop xlat xchg cli loopne (bad) popa jmp mov in fucom cmp fnstenv push dec out fadds cmp adc data16 dec or jns cli add sub mov test jmp xchg hlt loope sti dec mov cmpsl icebp jne or mov sub mov outsl mov outsl nop jl pop push aas cmovge sti int3 pop pop mov imul enter dec fcomps rcll (bad) jmp jne jmp sbb cmpsb scas push xlat mov stos stos (bad) inc mov xchg ds sub mov dec inc jb (bad) movsb test sbb pop int3 add push inc fs push int3 sub inc xlat push sahf adc push adc ret mov sub hlt lods int3 in lods inc (bad) add sbb cwtl xor ret push mov push negl push repz or fsub js popf ffree push test insb frndint add out mov or ficom pop pop mov or dec cmp add adc call insb jg movsb movsb adc mov push fisubl mov or cmp jg dec dec push inc mov lds gs cmpsb inc and cld sub out repnz clc lcall repz cli mov push mov aam pop cmpsb ss neg mov cmp pop push add scas es mov hlt (bad) mov cwtl cmp jb sbb push pop into mov inc pop enter mov mov (bad) arpl pop xorl or imul nop inc jns push adc das rcr sub and (bad) cmp dec mov push xor rcrb in ret mov leave cwtl lahf inc jo aad popa adc push popf std adc xchg nop lock ret mov dec (bad) or fdivs mov ss jecxz push jmp dec adc or cmp mov lods cwtl push xchg xchg bswap cmp (bad) clc (bad) fidivr cmp fimull jecxz aad push mov add and ret lods ljmp sbb add push addr16 bound roll lea jno sti dec pop adc ss or popf ss insl push mov or (bad) jmp lcall dec jl mov xchg loope js pushf enter adc sbb stos jecxz (bad) jg jo data16 jl es ret leave mulb je jo or mov aaa ljmp (bad) or test (bad) sub and in rsqrtps mov lods outsb jo xor jle xchg push sbb sub fiadd or xchg test mov adc push dec sarb push xor dec sbb stos cli imul or outsl hlt mov add cmp inc lahf and in stos pop fdiv sahf test stos in inc test fnstsw js sbb push mov inc inc out iret xchg adcl add cmpsl xlat movl loop cmp cltd dec cmp movsl cli gs dec test lret mov adc jb pop pop xlat inc mulb pop loop icebp pop xchg fwait xchg clc sbb cld sub mov out popa divl cltd add and fsubrs xor mov mov xlat sbb dec mov dec movsl loop out rorl xor inc pop inc xor stos in shrl aam sub mov dec mov and push sbb dec pop push pusha out jl les xchg push iret push bound dec pusha mulb imul cmc xchg dec rcll sbb mov add add mov fldenv flds xchg fwait test inc push sub mov adc dec jb (bad) sti push xchg or dec push insl cmpsb add xchg es clc sub mov (bad) (bad) push lods (bad) nop out or push push sub inc adc daa jo stos ljmp pusha aam lret popa xchg (bad) mov push into jo push dec sub mov jg jns push adc aam lods aad mov fmul cmp aad pop push cmp jo imul inc dec or xor dec xor test dec jb inc ret inc add daa scas and xor mov jno xor shrb stos icebp add sub int inc lock cli lahf sub xor jae xchg data16 loope addr16 add push fistl xlat setns enter inc inc imul call lea movsb lds or mov leave subb xchg fucom jbe pop sbb (bad) rclb les xor xchg mov jnp push cld (bad) xor and es test in rol out pop sti push cmc jbe testb jmp (bad) mov mov push scas dec xchg dec adc xchg int3 mov cmp cmpsb int jo lea xchg bound push mov push pop add add dec test (bad) std sbb xlat inc std lods inc mov pop sbb dec xor or out mov movsl mov fstpl in push cli jae addr16 mov (bad) loopne sti aad jbe adc cmp mov ret jle mov fmull popf lret (bad) fistl xchg sbb dec inc xchg pop data16 sbb fbstp pop add adc inc aad xchg data16 insb je insl push imul ss xor and jno sub ret and decb insb xor cmp mov mov fmul movb test scas xchg lahf (bad) push or cmc dec add idivl push cli add push mov movsb jmp jecxz nop enter sbb into cmp inc push mov sub mov inc xchg fsubs pop iret push xor add xchg out imul sahf pusha dec mov dec (bad) scas lods or in xchg (bad) stos pop push push test adc push in mov adc push or push and clc mov inc cmpsl cwtl aas jle,pt jge mov and pop mov or lds and cmp jb sub mov (bad) scas imul xor pop mov out loopne push add inc (bad) out xchg pop outsb es sub icebp xchg loop jge mov adc bound je add pop cmp cmc ds sbb sarl mov push test inc inc pop mov stos dec and mov out mov scas fiaddl push adc pop pop aad jle mov sub pop in push jmp movsb lea pop fldenv pop (bad) sbb mov cmp mov movsb push jo,pn mov pushf incl push pop ljmp pop in into mov outsl test stos mov sub sub arpl imul dec jb imul mov jmp enter sbb jmp shl push push pusha xchg jbe enter sbb inc cmp insb andl push sub lock inc push push sbb mov inc lods outsb mov clc pop je les adc mov out mov xor mov (bad) sbb mov lods sbb xor test cmp ds sbb lahf or in push test dec pop (bad) cmpsb out ss mov fdivrp cmp cltd push sub fsts xor (bad) aaa sarb mov xchg or mov enter dec ffree (bad) jnp inc outsl (bad) cs inc into jbe mov sahf stos push fucomi int3 push imul pop pop lahf in xor dec jge push ds cli and xchg fwait push inc in das cli aas movb es xchg jo jbe shrb lcall test mov lret xchg aam mov lods test sub mov rclb loope adc into dec ljmp stc loope dec shr add add jo xor dec adc and jl pop stos push int fwait add (bad) adc popf sbb ja cmp mov xor jp,pt sbb aam cmp (bad) adc pop jl cmp pop and pop push dec pop add (bad) loopne cltd inc cmp or out rcr std insb lock xorb stc test cmp pop loop (bad) movsb cltd ljmp ss xor ret fwait xor lea dec dec loopne cld pop cltd enter aas add call cmp lea or lock fcoml pop mov mov sub les jl popa jg inc test cld std dec cmpsl aad lock sub push pop sbb shrl jge xlat adc je or pop or push and cli stos js cmp mov fnop mov dec xor stos pop and fdivl shrl popl pop cmp mov jmp mov xchg into inc push stos xchg outsb ss jl rclb fcoml es mov lahf cmp mov (bad) ror sbb test mov ljmp add out dec test jne xlat xchg and adc lea fbld insb shll negl repz jns sbb jecxz sti decl shrl xchg insl shr nop das mov mov sbb rcl dec xchg inc jge ljmp int3 mov cmp cmpsb bound push cmp jne mov fsubrs sbb or mov int3 adc jno mov push push insb push pop jbe cmp cmp mov cmc lret jbe xchg je xor cmp mov aam pusha pop (bad) push aaa add addb imul out movsl mov (bad) pop aad push nop mov xchg mov in push or pop cld sub pop pop mov scas aas adc jmp sub or xchg lret pop (bad) mov push sub (bad) cs push shll dec xchg mov xor fidivrl or gs das jecxz fldcw mov loopne jle mov pavgb cwtl lret or repz aas popf mov jo or dec sub add out movsb test sbb sub xchg sbb push mov sbb stos inc aaa jae mov xchg jno mov inc sbb xlat test xchg cs out xor inc aam fwait out out mov imul movsl xchg mov mov xor lret xor les pop jge (bad) inc jb mov out inc lds sub pop mov sahf dec ja movsl xchg pop mov cmpsl out in shr lea fwait (bad) daa rcrb cli or popf xor rol jne inc repz sbb mov insl pop sti mov imul je scas rcl es jg bound and repnz les cmp int mov test jecxz and pop xor pusha xor pop jl mov xchg ret movsl mov xchg daa (bad) xchg pop mov or jge jns sub and stos ss addl push (bad) xchg xchg into lods pop repz (bad) cli daa cmp jle leave andl and pop movsl inc imul xor test cmp and test pop lods or fldcw mov in adc dec (bad) or dec cmp xor (bad) sahf and sbb loopne dec int3 adc (bad) (bad) repz inc ret cmc xor xor dec pop sbb mov push or das fimull adc dec add notb hlt test mov or repnz adc mov push sub lds scas jo sbbb push aam inc jp ljmp addl or xchg (bad) adc stc movsl xchg jno cmp mov adc lret loopne lret mov shll lods pushf rcrl pop dec ret pop aaa push (bad) call loope jmp push repnz cmp cmp pop xlat dec ja (bad) aaa dec test das aad int3 (bad) ja dec jg adc enter int ret dec mov push aam or inc jbe cmp push cmp (bad) sbb rolb jle cmpsb aaa and test dec cli cmc mov loop mov nop or hlt cmp icebp dec pop bound cmpsb pusha fcompl xor add test test loopne out dec and sbb add stc pop fnstsw add or sbb fs dec sbb inc mov and jecxz jg jmp test (bad) sub inc jp cwtl xchg pop popf mov jle subl and out arpl pop test popf cli push ret and out pop int cli xchg lret jmp aad outsl push fwait push jns xchg (bad) jmp sbb test adc inc out adc pop sub jle neg jo test xlat scas insl js je fsubr cmc push xchg aaa add sbb dec mov jb pop jnp std fisubl mov stos pop cmpsb or mov cld jp fdivp sbb hlt add push mov int in inc sub push jle gs fisubr test ja or mov sub jne in movsb mov and xchg imul push jo pop hlt or cmp xchg outsl mov or mov movsl repnz std decb pop or jns test cmp and and mov cltd xchg push xchg inc aas shll in pop sbb dec clc mov lock pop std xchg ljmp (bad) into mov mov mov push xchg ficom std push test imul add cmp add sbb lods dec repnz ret mov push or shrb (bad) fdivl add mov (bad) lock sahf test lret xchg jnp xor imul in mov in mov dec and std pand mov cmpsl adc add mov lock daa shll aaa jns inc ds ret mov and jb sbb hlt or lcall cs jle push sub and bound jb mov xorl mov sub mov lahf pop add sbb inc rorl jg shl sbb push rcll push inc push aam mov loopne inc mov fimul imul pop inc or enter not push (bad) aaa ss adc sahf pop or sub movsl sti and jno test sbb xchg dec pop pop es inc xchg sbb fwait sarb int inc jge rol fsubr xor pop or xchg pop or hlt and xor ret pop pop pop mov dec call adc ss imul inc (bad) fnstsw mov pop sar sbb add int3 pop lods ret pop out adc (bad) sbb aaa jmp jmp (bad) jbe test (bad) lahf cmp pop mov mov or push push andl addl lret adc fs mov jp and (bad) out pop mov pop xorb lods sub adc enter imul xchg mov mov repz dec (bad) and cs xor jle sub movsb test fcmovu add pop leave adc mov and loopne dec stos dec std loop dec scas adc xchg or std lret bound mov cmpl dec push xchg dec and inc stos lods and daa mov (bad) jb adc pushf in nop pop lods mov ret inc jmp push leave ret push sub mov or or in outsl addl mov scas (bad) imul es (bad) loopne push jno stos clc push push lds adc imul test sbb pop mov add divb and lods xor data16 inc lahf xchg out int3 pop call ficompl jecxz (bad) mov sub mov and adc mov and cmp int dec xchg scas push (bad) (bad) mov pop adcb mov sbb out inc push push aam or test ss or (bad) mov ficomp push lods xor imul sub xchg das in xchg dec movaps sub fwait and call cmp mov sarb test mov (bad) loope push subl test xor mov pushf idiv xchg ret or add fmul push cmp (bad) add fnstsw xor mov jmp adc cmpsb or js adc dec xchg cmp lahf sbb fs ss pop pop aaa adc sarl cmp aas lret dec fistl and movl push pop fstl mov cmp xchg sub mov cwtl inc xor test outsl sub call leave loopne mov xor xor js dec sahf sub sub add inc mov pop cld (bad) je inc int3 jp xor inc lret ret mov ss scas ret mov and insb (bad) hlt mov cmc pop aaa jne jmp in stc mov cmpsl movsl inc jno adc out lret mov (bad) (bad) cmpsl jne jl and ret jmp xor sub adc dec scas cmp cmp imul std push cmp fnstsw push pop mov les sub mov fwait loope repz mov fsubl fildll jae mov (bad) arpl stc xchg or mov add (bad) out mov pop cltd test and inc and add push or decl ja pop clc push cli mov les fdivl mov mov int xchg push enter andl adc and ret adc mov sub and sarb jbe movsl xor dec clc sub inc jmp push out fimull int mov daa sti mov or loopne movsl sarl stc mov adc sbb pop pop loope jo xchg mov fldl fucomip jbe push cmpsl data16 jg stc divb add pop inc popa enter insb (bad) jl repnz mov dec push xchg int3 mov jne xor jae outsl testl push test ret add (bad) mov cld inc sbb inc mov add adc push popl and std mov mov lods pop aaa das (bad) popa sahf loop sbb fnstsw js mov pop or push sub rorl scas (bad) lock test lahf popf aas mov shr cwtl cmpsb (bad) cwtl xor ja sbb dec fs out xor push jo inc addr16 sti push insl mov push into jno test stos cli ss mov call push mov repnz mov (bad) notb js cltd orb (bad) pop mov ds mov lcall jg push sti icebp loope aaa jge jbe lock (bad) push and nop icebp test adcl stos out out xor inc dec jno sub stc cltd daa xchg jnp in mov pop or inc sbb jp ljmp mov into sub lcall jle jo mov test into jno daa bnd add push add cmp out dec pushf dec xor pop mov xchg or dec and icebp adc and pop mov dec loop (bad) mov adc or dec out leave xchg into push dec mov xor jo popa lea mov pminsw jp (bad) in (bad) jp mov popa cs pop enter insb imul loope mov ret xorb jmp cmp mov mov repz dec or and movsb inc cmpsl (bad) repz or and lea les in and outsb pop push fstpt lcall (bad) push pop mov (bad) lods mov mov shl repz je dec dec sbb ja jmp ret pop aaa mov mov (bad) and ss add push mov push je sarl mov pop shrb aam mov or pusha scas sar js fisub mov mov add mov mov jle imul inc imull fsub adc lock out std sub out push lret mov push xor leave adc rorb push in cli pop mov push das popl outsl inc lea xlat mov mov dec es popf lret insl sar andl ljmp (bad) adc jns and int3 mov popa dec cmpsb mov xor fisttp jbe mov and into xlat xchg mov jns sbb aam jns pop lea push mov repz or test cmpsl xchg es adc imul mov cmp ret test add outsb aad popa lret fldenv cmp lcall cmp pop add popf (bad) in outsl and mov fimul popa mov sub adc int3 push cltd sbbl or fwait bound dec hlt mov push push (bad) rol into and sbb cmp nop out xor push inc pop pop mov out jge pop in fsubs movsb sub je (bad) xor mov sub mov xor pop inc mov inc mov sub sti into (bad) bound lds outsb mov test push inc inc adc scas es xchg shll frstor inc fisub push pop data16 jge pushf lds orb or push mov dec push subb movsb mov lret aas jmp mov arpl popa gs in fsubrs icebp add xchg xor adc out cmp jb push jb inc sbb push jbe xor push and mov inc fadds lock ret rclb imul lea jo movd outsb jl jo mov push xchg jmp push nop cmp lock and cmovae mov das mov xor jg push fsubrs sahf lods arpl jnp shrb ja xchg jns fwait adc lret popf cmpsb jl test sbb cwtl sahf gs cmp es xor inc xchg out mov sbb push pop sub (bad) out cwtl mov fistl xchg cwtl xor out nop mov mov jbe (bad) sbb mov mov jecxz add pop dec loop in fmul add xlat imul mov lahf enter mov repz jno,pn shrl subl pusha push or inc jecxz mov add mov adc sub fildll xlat sahf push (bad) pop inc and iret mov shrl ficomp and icebp pop fidivl dec push xor jns adc jge cmp xchg imulb push add adc push add leave getsec popa mov adc pop cmp xchg or aaa dec pushl mov je sbb sub (bad) clc insl xor sbb sbb push pusha pop outsl or inc sbb adc push adc mov and mov push fwait stos int3 (bad) push stos loop sti gs xor jp out jle xchg mov push xor das fsts test adc adc in lds cmp and std testb mov push pushf std push loope mov jb push ja andb int cvtps2pd test orb and xchg cmpl or and sub data16 adc jl je adc stc dec jg inc bound add push add ljmp out lcall lods sbb iret scas aaa dec stos sub repnz scas loop fistpl xchg xchg xor cmp popa je sub fwait adc sti and in jnp pop inc out das hlt cmp and (bad) out lret add adc inc and cmc lahf xchg popf pusha xor mov addr16 fwait xchg cs loop or push fwait jno adc (bad) (bad) jmp ljmp sbbl aaa les (bad) dec adc fisub jle dec adc popf xchg cmp leave mov mov call lret xlat shrb sbb mov and inc stc fwait xor mov popf dec test (bad) in dec mov test sub push xchg mov and lods xchg test pop nop xor jno jne jp add mov mov pop sti test outsl hlt fistpl es fstl sahf push ret jp shrb imul mov outsb cmc nop in jns sub rcr cmp pop cltd cmp insb lret ret loopne loopne sbb rcrl add jo sahf adc mov je lock fisub movsl addr16 (bad) xor adc pop je push push inc rcrb xchg cmp (bad) fnstsw jae loope jae mov enter jnp jns or or push add daa sub std aas adc or jmp ja cmp or pop mov adc sbb inc pop xor imul inc add (bad) imul int xchg xchg jge pop (bad) fisubl in lods add cmpb dec packssdw inc add pop sub leave mov xlat xchg push mov dec addr16 or push push pop lret mov xor or nop mov mov mov adc sahf cmp sbbb pop sub ds outsl inc or loopne aaa loop lret out es xor out aad sub inc lahf lds cltd pop loopne inc cmp imul fwait push and mov sbb and popa (bad) cmc das cmc and mov call mov sub adc das cltd pop xor repnz push adc div mov pop out xchg cwtl leave das mull jne hlt setae lods mov ret stos pop mov sbb popa dec dec pop sbb mov in mov int3 js xchg out out lea into insl inc in push (bad) sti rorb les (bad) adc (bad) sub lahf push and xchg in cld sbb ja faddl in (bad) shlb cmp cmp popf pop clc jnp sub adc (bad) out xchg or dec fiaddl mov xor cltd fwait push jecxz pop push pusha lret rcr repz jne cmp stos add fsubs cltd or inc (bad) sbb xor (bad) or int sbb mov dec xchg or push arpl (bad) mov (bad) insl ja shlb inc or outsb loop or or lea mov xchg jne sti mov cltd lcall and add dec out or pop clc mov daa mov lds (bad) int3 push xor out scas xchg xchg push mov and push mov sti stos in fidivr jo sti cmc movsb push (bad) cltd insb cs xchg jo popa and jge loope sub lcall xchg sub mov sahf sub movsl stos xabort aas add mov enter in jb inc push lods push loopne mov dec es in cltd add push int mov shll jmp mov enter xchg xchg mov cmpsl cwtl iret push cli xor movsb gs sub es add ss jmp inc inc pop test mov icebp pop cmc xchg jl pushf push je push xchg and outsb cld cwtl jae dec lahf int dec cmp inc jnp sub fidivl stos xchg xchg xchg mov pop mov std imul ret scas adc test inc cld xchg mov imul or call add jg mov dec inc jae ss lock imull stos leave push lahf std in xchg sub cmp test mov cmc sbb sub sub sub push sub test inc inc jecxz (bad) cld les scas pop das cmp fs outsl out dec jbe data16 aad leave mov lds out jg addr16 orb inc ja test jmp add orl movsb inc pushf mov ret inc xchg movsl inc pushf or shrb dec pop fistl ja fdiv (bad) bound cmp icebp cmp fwait and fistpll or inc sub les mov cmpsl pop mov in call bound add inc inc daa and xor mov mov js mov xlat dec add add shlb jne repnz jae sbb pop push xchg lcall insl mov addr16 pop cld dec stc aad mov xor out (bad) and mov cltd push ret fs jns push sub and and add mov lods call aaa mov add stos out jmp dec pushf jg xor lods jno lods clc sbb (bad) fisubl aad hlt adc cli pop push add out jo leave loopne imul pop adc push ret (bad) and lock data16 int mov push in pop pop sbb cwtl leave sub in adc ds js andl jae mov dec and lret lea sbb push pop (bad) stc xor xor das or mov movsl rorl push or mov leave add mov std imul je mov jb test popa mov jns mov sbb or dec sub push mov lds add xchg lods fndisi(8087 inc inc test mov icebp stos mov ret xor xchg lcall inc out test jge adc cmpsl mov fbld mov std (bad) pop mov mov dec sub pop lret push (bad) xor sub das jo dec push xchg fmuls cmp push jne pop push jno hlt fmul or inc fcoml in sub cmc adc adcl cs imul push cmp loopne outsb fidivl mov inc push push add jecxz and push call jp sub xor sbb testl cwtl mov lock in sbb aaa jbe xor int lret and mov xor add or (bad) insl je inc push jle mov or pop or inc in inc test pop inc fildll mov in add repz orl (bad) and int xchg (bad) imul mov sub inc arpl test int mov lock popa hlt inc cmpsb test inc scas cld adc rcrl cmc jl add mov outsb loope repnz leave addl insb jecxz fnop neg mov int sub push pop jecxz jge hlt sbb ljmp std pop cltd daa idivl fimull and adc in cmpsl sbb pop sub jnp in xor mov xor and push push mov sub mov cwtl cld inc and push ror inc scas rclb out scas neg mov push (bad) mov and int3 rol dec mov sarl arpl or jg xchg push out jo dec mov decb scas rcl popf fwait cmpsb push test movsl sti cli (bad) stos mov repz mov add xchg divb lock test mov ret jb or sbb negl cltd xor add jbe add les inc das dec and jle xchg cmpsl or cmp add xchg fwait add (bad) inc add xchg jg rcrb arpl xchg icebp je pop jp xchg mov or fisttpl pop cmpsl loop mov cmc fiaddl sub mov lea and mov cli out test adc dec mov add dec xchg hlt mov push popa and leave repz fsubl movsb mov push xchg in and out jae push (bad) or sar stos sbb mov dec cmp loope cmpsl pop jne xor mov insb xchg test and xor dec cmp jno or add stos or (bad) mov xchg fmull adc mov jmp aam in adc jge or lret push shlb dec test gs aaa add push mov add stos mov call lea hlt push sbb dec sbb lret xor nop and cmpsb imul pop (bad) call fisubrl out (bad) sbb (bad) fstpt or sahf cld mov inc cli cmc sbb xchg mov mov add scas xlat stos test adc push inc ret (bad) or and mov jg adc and cli jmp faddp pushf jecxz leave ds adc pop inc cs mulb jle jp xor iret jg shll mov sub mov shr stos push mov and lret mov jge stc je lret call dec push inc xchg lods push cvtdq2ps js call sbb jo push out cwtl in shrb pusha and sti addr16 xchg mov in cmp inc sbb mov jb cmp cltd lret ljmp ja mov lahf and or pop out mov inc ss and mov pushf add push jl orl xchg add xor cmpsb lods (bad) fucomi jg add imul jae hlt push popa push push pmaddwd (bad) adc fnstenv bound imul sbb pop cli and lods clc fidivl adc add sub lcall (bad) jns mov fstp es xchg mov out scas adc cmp test data16 inc mov mov out dec mov (bad) insl rclb xlat jno movsb pushf rorl lods test mov push mov adc push repz adc repnz mov sbb out pop ljmp les notb xchg mov gs sarl mov adc (bad) lock call push xor aam sbb xor fs sub and jecxz add jle,pt sbb and inc lret loop fadds pop sbb outsb in mov inc lahf inc stc add add xlat sets push insb push jg pop (bad) mov pop push cmp mov lret int3 je stc sub call mov bound push sbb (bad) pop (bad) push dec xchg std xchg lcall cmp pop push inc cli and icebp stos and movsl add bound and (bad) xor add push dec test lcall ret enter jp mov cs xor popw movsb lods nop dec cld cmp sub inc test inc mov ds stos pop sub int adc inc mov pop xor ds push and xchg inc mov and mov jae cmc fst pop and xchg and call push mov ret pop jne xchg inc bound loope test sub mov mov mov aad stos sbb add outsb adc push outsb mov insl xchg imul xchg pop aaa lds cld ror dec sti dec mov (bad) mov pushl or xchg add push xor cmpsb push out out pop push lods adc lock sub jb jb icebp mov mov xchg xlat loopne outsb cmpsb and push movsb setae cmpsb dec out popf push add adc ds push adc adc ss cwtl repz sbb adc cmp insb mov scas ss jmp push cmp xor adc jae int3 sbb cmp subl jmp push fistp lret imul cmc xlat test and add lods ja push xchg out sub daa pusha stc xchg sahf or jl mov shrb pop sbb (bad) cli or leave push rcl dec adc inc fisubl stos xor and or sub mov mov movsb dec pop enter mov fs incb lea into into mov sbb (bad) pop dec adc add mov out cmp aad push inc mov jb cmp mov inc jnp mov mov stos xchg mov xchg sbbl ss add ja adc jb dec test mov mov mov sub xchg and jecxz cmpsb sub aad test punpckhwd ljmp dec push sbb sub loope clc xchg lret and add dec ljmp in pop and jo clc dec and pop es shr hlt cmp adc scas xchg push movsl push (bad) xchg invd mov add mov dec movsl hlt in inc lret test stc into mov pop cmp lods imul xchg (bad) jb (bad) adc pop sub das or (bad) in ret push dec mov pop (bad) loope ljmp xchg rcll or in mov pop sbb jb mov int (bad) mov or rorl mov add lret iret pop jecxz popf mov into sub inc stc and leave leave sub push add jl,pt bound add roll sbb incb in lcall or imul sbb leave fcompl pushf cmp mov adc mov outsl sbb ret dec sub mov sti rcrb mov mov je jle insl rclb xchg shl xchg loop mov (bad) (bad) leave out xor (bad) adc lea icebp ret fucom test mull jo je out or jmp cmp sahf sub sub ljmp push fidivr mov test movsb cmp fbld xchg (bad) iret (bad) push inc (bad) iret fwait sub lds jmp push aaa sub iret ja insl xor mov pusha xor jbe repnz mov xlat pop out fldcw mov mov mov int in icebp shrb arpl push cs leave sub dec iret jnp push dec jmp ret adc decl pop mov fcompl push arpl ss add mov in movsl incl push aaa hlt pop cmp (bad) movsb addr16 clc pushf movsl in loope iret mov bound add sbb jecxz or rcrb dec sub test jb leave in cs inc (bad) ret fs or jp sub imul pop fbstp ret daa fmul cmpsb pop xlat dec mov pop (bad) mov stc jno es push and cmp push addl jnp cs sub int repz enter adc jbe jl xor pusha adc jg xchg ss insl and adc jae push je out mov call mov add xchg lock sub xchg movsb mov testl pop in data16 and mov pop sbb cmpsl mov cwtl or or sub cmp rclb (bad) push cmc pop mov jle addr16 sub mov clc adc sub and jb stc (bad) daa mov (bad) in sarb and add in push pop ljmp xor std (bad) jmp add xor loop adc in scas hlt cmpsb popa dec ret (bad) cmp fdivs sub imul pushf mov pop inc subl aam ja lahf rcr inc mov addl lret mov or push sbb aas int sar lods in sbb rclb xchg rcrl lret push out xchg mov mov and xor les stos pop mov push sub pusha imul mov insl cmpsl push popa das repnz or inc jne jle push xchg xchg mov fldt popa jle jnp test iret and movsl mov cmp loopne or pop out fisubl mov iret inc cmpsb stos mov shr add lock in pusha or mov out xchg pop imul popa mov dec mov jae sub test xchg pop or add or adc aad ret stos dec mov push and xor cmp inc ljmp sub pop dec add xchg lds test in sbb add xchg jne inc inc mov (bad) (bad) stc std andb pusha cmp js andnps dec movsb ja pop jo sbb adc aaa call lret mov into es std out sbb (bad) stc pop out and imul out movsl dec mov ja cmc ss xchg (bad) adc sti jnp (bad) mov repnz adc outsb xlat pop sbb push sahf enter lret jb rep cmp push xor pop call fisub xor add push or fstpl sbb fstpt cwtl jp cmp xchg loop mov sub cmp mov pop cmp push jg mov enter pop arpl fisttp mov or (bad) mov push cmpsb dec testl (bad) xor sbb movsl pop repz push pop push test ficompl mov fwait pop or push and cmp divb cwtl or pop fild adc jne in fstps pop cli push addr16 jo (bad) xchg (bad) mov pop inc pop mov imul clc in inc (bad) xor push popa addr16 lcall out in fild mov leave outsl into xchg push xchg (bad) leave rcrl dec mov (bad) sahf cmpsl push pusha int3 sbb and aaa dec sbb inc (bad) lods adc (bad) xor repnz jnp xacquire imul dec aaa les pop lahf xchg inc lret inc mov (bad) ret or jbe rcll lods and orl dec sti (bad) xor mov mov scas sub and mov cs push cmp cmp and fdivrl sbb xchg jbe out test mov pop inc mov pushf in mov cmp (bad) cmc cmc push cli test lcall test or dec xor jecxz loopne int3 clc lock add xlat mov add mov push nop mov pop xchg pop and cmp lds out xor fmulp addr16 lds (bad) enter mov push mov cmpsb loope mov pop mov (bad) arpl fimull mov sbb je mov loopne lahf pop mov divl dec movsb sub and (bad) cmp adc lea sahf jbe pop daa push and lds sti dec in daa push int jg je imul clc sub call faddl js pushf sbb add xor mov (bad) mov jg shlb sub iret fistp (bad) rcl adc cmpsb movsl fisubl lret enter cwtl sub push (bad) lret inc cld push jecxz xchg sub add lock xchg cltd mov in adc scas sbb inc shrb mov and movsb pop subl jns cmp inc pop jb ljmp cs addb imul sti and jbe mov or clc mov mov jl add push jecxz mov cmpsl call ljmp mov ljmp ret inc mov mov sub pop and xchg jns ljmp mov mov and xor sbb nop mov mov mov pop mov imul fwait pop push subl aas imul sub inc sub test xor enter scas test pushf shrb and ret inc cld popa js xor sub adc sub loopne (bad) in lock movsl aam in jmp sub int3 xor mov jecxz mov shr dec test mov lcall (bad) loopne jns daa dec jno je out in sbb or out stc add jg int3 rorl mov movsb lret push xchg fmuls sahf mov (bad) lods adc cmp out xor sbb loop or add dec out adc and ss mov adc popf push imul test loopne mov fidivrl mov xlat xchg fidiv jns xchg insb test lods call (bad) daa pop xor push add (bad) mov test xchg xchg mov xchg xchg stos sarl jns andl pop xor jl std mov dec jecxz lret pop sti adc sub push sarb insb fadds adc adc jo test or cmc mov cmpb push std push cmp mov (bad) inc xchg push popf movaps mov cmpsb das mov and xchg sbb dec icebp jle push daa pop fisttp loopne mov xchg push int ss sbb ret lods addr16 lock sub imul sub (bad) aas test xchg bound mov gs jge jmp (bad) incb imull mov jg inc push enter (bad) or mov iret jg (bad) loope dec xchg adc xchg mov dec sbb mov out adc sbb and cli mov cs loope fldl aam jecxz in ficomp lock inc push leave cmp push pop xorl dec cmpsl adc push stc sub scas fmull mov dec mov cmpsb scas or into ffreep and xchg out mov cmp leave or dec adc gs test jle push xchg call movsl dec and out enter in jl in add adc cld pop arpl add xor (bad) and sar push popa sbb xor nop dec fisttpll or jl xor and in cmp pop lods int3 mov inc cmp sub out pop push inc jge fcom inc sbb hlt xor roll or jge mov sub dec fldl shrl pop (bad) jae movsl and xchg mov pop std or popa cmp dec dec ss pop lods popa fiadd pop adc xchg adc fs mov jbe push jg mov push aad std int3 mov inc mov out ret adc cmp and fdivs das repnz push ja decb jl mov xchg xor inc adc lods push inc sub movsb inc js addl test cmpsl outsl mov stos addr16 dec fs xchg inc mov cmp mov inc cmpsl fidivr jbe pop adc jge mov rol mov sub dec pushf std cmp (bad) (bad) jae cmpsl sub rcrl sbbl je loop,pn xchg ja addb dec clc (bad) cli mov inc js jns cmc fstpt rcl imul mov lret lret mov addr16 cltd xchg imul xor mov shrd movb popa stc movsb fwait sub or xchg pusha loop repnz mov inc jb popf cmp sub push cmp sub jg dec add pop fwait pop fsubs in int das aas xor test xor in mov jecxz cmp xchg test cs lods pop (bad) popa cmp cld xor inc adc lret in sbb cmpsl mov pop mov jl in mov or scas push fbstp stos imul cmp aad pop pop in dec push xor dec cwtl lods cmp sub jnp sub fistpll jge pop mov insb jge jle loopne insb xchg or push aam sarb lds adc sub pop adc lods hlt jg inc lret ficom outsl or xorb cmc sub aad and dec mov inc and mov rcrb xchg int jmp mov imul lock lahf insl stos in pop mov sub mov inc movsl rorb sbb mulb or clc out std cltd mov push cs pusha jnp or into mov ljmp mov push xchg xor xchg pop lret jbe daa mov shll loopne cs add pop jge leave and xor xchg and mov adc jmp in cmpsl lret push add and cmp mov ljmp enter imul rcrl insb inc push repz and (bad) aas jo cmp addb popa (bad) cli xlat dec nop xorl fiaddl and nop xor aaa add sbbl inc enter pop (bad) scas sti cld mov sub andb mov (bad) fmull dec jae sub pop cmp insl inc fwait dec pop jno pop outsb orl sub ja punpckhdq clc cmpl cmp (bad) cmc sub push imul add inc ret mov test cmpsb mov iret cmp fs imul mov les je xchg or dec mov lods sub leave and mov and lret mov aas std das jae je (bad) mov fistl shrb and mov icebp fsubr add mov in lds xor scas out xor inc adc lock jo daa push int lods mov push shrl rorb loopne stos pop repnz daa mov pop mov xor or push push vmulpd aas jp pop ret add pop js jg ror out xor lds push (bad) push dec out sti or push pushl int jge lcall stos aas das outsl mov mov pop cltd aam lock or sbb inc push xor icebp or leave or jmp pusha ds dec adc mov hlt inc push cld push outsl es push add push loopne xor push idiv pop or (bad) inc and push or fucomi cmp mov pop adc lock add ljmp pushf jo sbb mov data16 inc ja dec pop inc xchg (bad) pushf jle and and xchg jge inc setg push mov aas test addr16 jnp repnz shrl push cmp and pop pop rcrb popa xchg adc rcll in pop ja and add mov out mov jl xchg repnz mov cmc rcrb adc jb sarb mov fidivr adcl adc mov cld cmp rcll mov cmp xor sbb add sbb faddp mov mov cmc into adc and xchg daa dec inc push ret shlb std hlt in scas mov dec jl pop (bad) push mov leave dec ret ret cmpsb push mov push pop in mov out add and imul (bad) movb lea out out and (bad) (bad) mov mov (bad) and mov xchg lea pop or add mov adc sarl cmc cmp inc xor ss cwtl inc mov mov or cwtl push movsb in sub icebp adc pushf ds mov inc lea (bad) cmp push add scas cmp sub icebp popa xchg xchg pushf add leave pusha push jne ret jb (bad) je xchg inc sub mov aad int pop mov shlb inc sti add into sub test or cmpsl sub jg clc jmp xor ret negb mov push mov cltd push iret (bad) adc jle cmpsl pop jle sub nop add (bad) jbe inc or sub cwtl enter faddl mov jmp test sti dec mov push push (bad) fs xor push lret lret aad mov addl das pop hlt ds int xor inc iret loope add mov mov outsb std leave lcall test push push mov fsubrl scas outsl sbb arpl imul mov data16 sbb test icebp sub xor xor icebp cld lahf dec push jecxz xchg cwtl imul pop dec das ror or xchg push in in lret nop aam lret push lods daa jno add xchg ljmp fildll dec mov (bad) push mov push or iret inc add lret andl mov push stos test mov sbb xchg leave adc push mov frstpm(287 mov addr16 out or jne sub divl add loopne mov fldt (bad) aam movsb cwtl pusha inc arpl mov pop push out cld xor push xchg push outsl dec push lcall decb (bad) pop pushf sub adc sahf xchg popa adc imul mov es into fdivs mov xchg cmp aam pushf hlt sbb mov fs pop (bad) icebp jnp std fstps xchg loope xchg outsb adc push inc test rclb or outsb outsb ja fstl scas dec xchg jns xor pop jnp mov sub fwait neg mov inc repz mov daa jle stos sbb cmp push lret push adc mov scas mov mov je xchg aad lcall hlt jo sub push push call or dec inc cld pop xor push int or sbb add jmp repz popa fstps lret test iret into xchg xchg gs cmp jl jno jecxz mov ja leave pop daa movsl out gs icebp pop cltd mov and mov adc in out jns and addr16 xchg cmp sub push mov lock jno pop push mov daa jle mov mov mov inc iret sub pop sbb (bad) sbb push xor mov outsl xchg push out daa call daa cs out stos mov mov inc and repnz push andb xor add (bad) aaa fsubr cmp das cli cwtl jl push push dec lcall push sbb movsb push add rclb xor jnp mov dec inc aaa mov xchg push inc jne popf andl lcall sbb add sub daa adc fld out sbb aam xchg push idiv lds movsb dec jge sbb xchg aas dec aaa jmp (bad) (bad) sbb jp insl js lds popa sbb add stc mov mov out rcrl jg push sbb sbb mov dec dec scas xor hlt scas imul pop dec das push mov pop sbb push (bad) fld mov scas fildll fwait insl push xchg out sub sarb clc and xlat dec adc xchg and sub inc cmp lea mov jae mov jle pop sub ja and sub lret pop sbb call jno jno mov insb iret xor xor cmpb push xchg jnp (bad) sbb mov mov jl xor daa mov idivl int dec in (bad) ljmp cmp push bound (bad) fcmovbe mov (bad) xchg mov outsl mov lods push mov bound ljmp idivl cli sbb sbb cmp mov mov cs (bad) je lods pusha fbld addr16 rol inc push jae fstps mov std push mov pop xchg mov stos sub pop stc in imul pop fisubl mov jno lret movsl scas cmp xchg sub (bad) in fmul cmp int fnsetpm(287 and inc push sub mov imul pop inc add or dec lahf pop or sbb jbe incb lcall add js add call mov fstp jbe in cmpsl stos movsl xchg push lods pushf insb mov (bad) push push test xchg or sbb dec ljmp das fwait clc adc hlt sub push loope xor jno ss mov ss xor int jmp aad or xchg cmp push sbbl cwtl xor (bad) cmpsb (bad) xrelease mov dec push loope pop mov lret xor jne popa mov cwtl mov cli mov lahf aad sbb cli jp aaa sbb mov cli insb mov cmp ret push stos xchg mov xchg stos mov es arpl pop lds scas ljmp ret xor xchg mov aad xor pop mov mov xor leave mov lahf xchg pop lret faddl xchg mov mov and push decl (bad) clc cmp push sbb jne aad adc arpl out jge int3 cmc imul push fcomp push add js das gs cmp jmp (bad) icebp rolb or or (bad) (bad) xlat cmp dec mov xchg and js js pop jne xor jg int sub out (bad) or mov add dec adc (bad) or popa nop push dec jbe sub push daa outsb xor add xchg mov push jge xchg lea and mov xor mov pop pop adc in sub jecxz popa lret (bad) movhps jle adc inc dec sbb dec iret js je mov les stos mul dec testb cwtl sub outsl push sbb lahf mov call xchg sub aad stc adc mov jne in daa js push es mov ret movsl lods push xchg iret rcll mov (bad) xlat pop inc enter push sub (bad) mov test xchg hlt mov ret pop mov ds and js shll jl jp cmp cmpsb lock mov fs sub mov stc in lea jle jmp push outsl mov sbb leave in dec push jne push inc lods sahf je jno (bad) and out (bad) dec add int fistpll stos test imul jno rcll xor push ds pop cmp scas js lock adc mov add pop outsl and xchg nop inc push (bad) lret enter test ret cmp xchg adc icebp inc out sub sub ljmp pop sub jnp sbb leave sbb dec push out xor pop mov cmc xchg xor and cmp jno jnp push dec xchg mov xor or mov mov (bad) loope and cmp les lock pop mov push push int3 leave repnz pop jnp jp int and jns and (bad) jl or mov dec pop test cmp (bad) rolb arpl pxor es clc add out clc inc xlat sub mov les call xlat xchg pop pop xchg inc inc mov popf lret in push mov xor cli adc (bad) mov pop cmp sbb and xchg (bad) call pop add movsl dec pop xor bound and and test add cmpsb sub stos rcl fsubs addl in mov lcall dec add mov test or nop dec mov outsb sbb pop sub dec xchg dec pusha bound xor shrb sbb into pop or mov (bad) ret jns mov lods int fmul adc push pop mov xchg lret cmpsl adc fbld jo adc cld (bad) pushf jp xchg push adc ret cwtl dec mov test loope nop pop iret outsl shl sbb push inc mov jo or (bad) gs pop movsl sub xor movsl jno sbb clc cmc jg mov add pusha lds push push jmp imul (bad) mov stos loop loop dec and (bad) adc sub roll push sbb mov jp add in out dec push and jp test cmpsb imul dec repnz insb xor sti stc jmp sub and fildll xchg mov ret enter dec aad negb xchg out (bad) fnsave outsl cltd sbb sub jmp sbb adc fwait and es push call fs and xchg jno lods pushf xor fidivr push adc sarb enter xchg and inc sbb mov or and test fbstp mov iret loope xor bound or push rcrb push jg mov test (bad) daa xor daa (bad) nop gs mov ljmp jmp mov negl js dec xchg cvtpi2ps aaa call in popf lret inc pop xor jle fldt pop inc dec jns dec adc into xchg int3 push inc bound add jnp ss push cmp jo scas js sbb rcll xchg dec sub addr16 pop sahf add dec or adc out shrb outsb push cmp mov dec in jg and das adc dec mov int3 and jmp xor pop lcall cwtl out (bad) std dec test in aas cmp mov mov adc out jmp outsl (bad) dec cmp add xchg or mov ljmp pop mov jnp adc out pop out jno es mov sbb pushfw (bad) int3 jnp jo daa mov jg lret push add iret rcll fiaddl mov mov jp sub and cmp mov cmp jae stos cmpsl jae adc js dec pop inc xor sti rclb sub fist scas inc outsl xchg lds lcall jp fstl jbe jg mov jg push xchg stc jb inc mov cli pushf sbb or mov lahf xor out mov jo test mov shrl rcrl into mov sti and xor xchg inc sub fistl jae mov adc andl scas es pop mov sbb out or and pop sbb sub mov mov jbe cld fwait and push mov addr16 push inc xchg sbb push out push xchg add push cs mov inc int3 adc xchg mov mov inc fcmovb sub lahf aad lcall fmuls nop bnd je mov jmp and or sub aas and mov stc fdivl jno icebp mov mov xchg cwtl pop rcll sub mov jae mov int3 addr16 xorl test aad loop jbe iret cltd lcall out and mov sub mov movsbl je sub arpl adc xchg clc mull incl rorl add (bad) hlt ds inc push jbe or jne mov jb xor arpl mov mov call pusha or imul xor pop adc stos ret (bad) mov push mov addr16 inc mov mov shll inc mov pop jle xchg xchg inc (bad) (bad) dec jo shlb xor clc test add sbb into xrelease and loope xchg jb (bad) dec and sub in dec lds stc adc out push gs jno scas jo inc dec adc or pop in jg ficoml in out add (bad) and pop (bad) mov adc jae adc xchg xor cli fcompl aad xchg inc ret (bad) int cwtl aaa xchg dec fisub lea imul pop xchg mov pop and mov mov mov mov stc cmp add scas mov and outsl dec cmc bound pop cmpsb cwtl jmp decl pop inc (bad) pop adc xor cmpsl and and (bad) mov push loopne js ret xchg (bad) xchg cmpsl cmpsl scas dec sbbl hlt cltd cld subl fsubl es xor adc fsubl aam sbb inc pop cmp add mov aam sarb lret pop cmpsb (bad) insl nop daa out cmpl aaa (bad) gs inc out sti xor push or dec call cld int inc xchg mov ja push fld cmpsb data16 pop insl leave sbb dec jb ror push jecxz (bad) or mov and aaa jl (bad) mov movsb push dec das mov sbb mov iret (bad) lret push scas js outsb dec lret clc mulw popa aaa push xor xchg jl dec fld jb push shlb push cmp adc add or jae popa repnz roll mov (bad) sti jns xchg or loop hlt inc push mov sbb dec mov out popa sbb sbb sbb int3 clc pop mov movl mov out and mov insl push arpl insb jg arpl sbb xchg sbb jne jnp sbb push inc cmpsl rorb add shll ja jge pop mov jo aam sub outsl loop push cmp int frstor imul mov enter out add pop inc pop push and mov inc sbb xlat mov arpl inc add adc addr16 inc sub jecxz lret fwait les mov iret xchg cld dec les addl icebp adc scas push rcrl xlat dec and outsb clc ljmp or pop pop fwait (bad) add (bad) pop adc push repz or dec pop iret je lods scas jne push mov repz sub push pop pop stos in add jns cltd xchg dec imul sbb push xchg sub (bad) ficom adc and mov dec clc out popf leave enter testl xchg popa aas mov mov or popf xor push add push out loop ljmp lahf pop add (bad) fiaddl and xor (bad) ficoml xor insl cmc nop aaa xchg xchg scas int3 loopne xchg mov xchg test mov mov jns mov movsl jp mov loop cmp lods jp mov repnz incb pop insb mov xchg push sbb jno xchg adc mov lret (bad) mov popf and or loop fisub dec mov jbe jnp cwtl fist pop pop cmpsl jg test sar lret pop mov std dec mov ja cld movsb xor jl lcall popa adc sub lea pop xchg pop testl mov hlt (bad) xchg xchg pop pop or iret mov lret (bad) and subb adc or (bad) xchg leave mov and cmc sahf call fbld dec or cli xor xor xchg loop aam adc jge sti int3 repz lods xchg shlb movsb jl adc enter mov dec mov dec stos repnz test mov inc fcoms cwtl cmpsb (bad) fidivr ret cmp test mov pop (bad) pop pop cld jmp outsl out mov and rorb lea or aam dec and lods ja lea je jns mov insl push mov jo xchg insb subl in or mov not mov sahf movsb push jecxz out mov arpl int3 pop pop sarl or test jl (bad) dec mov stos or and (bad) loop sub lahf icebp hlt and jno jae cld repz mov jecxz or sbb neg je xchg (bad) roll loop (bad) aam jmp sub rcrb xor call nop mov inc aam lahf push out jl ja aaa inc jp test arpl repnz cmp outsl insb dec xchg mov xchg pop shrb xchg mov scas lock ds out mov pop or movsl in sbb mov push pop push push xor inc push (bad) leave jle xor sub or mov pop pop adc and popa data16 jecxz dec sub pop in pop outsl pop or aad fxch or add dec mov push out movsb frstor ffreep push stc fidivrl xchg or aaa movb push pop dec dec fwait jmp inc loop inc cmpsl or fwait cmp jne adc mov dec jle mov imul push pop jno sarl jg jecxz hlt in stos jns test mov jecxz add push roll push bnd xor xor rcl and imul pop (bad) hlt pusha push arpl scas sub pop stc xchg jl adc inc (bad) lahf or out mov jne fistpl pop clc add ret test into in ret mov adc and add xor jecxz jb in cmp sub loope inc lods pop outsl mov cli aaa dec sbb push test insl cmp add dec cmc (bad) jecxz int3 imul or xor pop sti mov mov xor aas jne negl nop pop or (bad) (bad) sarb clc or cmpl lea dec or mulb cs fldt sub mov pop mov test test sub jnp adc cltd push clc loopne js push or xchg aad test mov sbb leave push xchg movsl jbe dec in test push out cmpsb dec repz scas mov push or hlt add cltd mov gs jne call push cmp les jle or cmp js in test jno call stos int3 mov and xor xor push jbe out jbe sub lret addr16 fsubrl scas mov xor mov in push ljmp push sbb adc out in call les movsb lea push cmpl dec sub inc popa dec add loopne mov nop mov std inc xabort cmp dec addb xchg jl test popf out xchg or cmpsl add push outsl or fld1 inc cmc pop add mov push imul rcll repnz adcl and aaa fildl add push gs jnp mov movsl fimull je sbb cmpsb incb xor insb jp or fild mov xor xchg mov outsl sbb pusha jecxz mov adc push loop or pop cwtl andl loop dec shlb mov pop sbb sbb jle push mov jne push add (bad) sub aam loopne and sahf add repz hlt sub mov cld push jge mov outsl test (bad) mov sub (bad) test stc dec mov add mov dec les pop dec add pop adc xchg icebp sbb arpl push into adc into adc int gs jno cmp data16 ja imul test pop stc dec push cmp dec pop sub cmp mov fwait dec fiaddl enter cli movhps ljmp xchg pop xchg adc sti sbb xor sbb in fs and sub jg mov fnop jg icebp je jne rol std xchg xor std cmpsb push das in sar push jg iret subl cmpsb inc sar jg mov pusha pop pop mov pop xchg (bad) hlt pop jecxz fstpl mov je test sti mov xchg jns gs pushf pop or test in imul fwait inc cmc orl cmp xchg mov clc mov dec add aam popf cmp popf sub sbb scas push pop dec les fbstp add cmp ret jge rolb xchg lret add jecxz mov add add push or sub mov in push xchg dec outsb or daa mov (bad) fimul xchg mov stos fdivl js mov lock icebp lgs mov das mov dec cmp mov mov popf (bad) mov jl xchg scas fisttpll dec mov ja pop addr16 sar test pop pop jo sbb (bad) jno pop jecxz nop (bad) mov cmp outsb mov inc inc jb xchg mov inc mov les pop (bad) xor adc aad stos dec lret into (bad) sub mov push pop sbb cmp test fldenv inc or hlt addr16 mov cmpsl loopne xchg dec pusha add popf aad iret hlt mov cmp pop popa or cli aas ljmp sub add loop sub sbb insb loope push or inc repz fmuls pushf fsubs fisttp nop mov popa iret sbb out leave and (bad) fstpt jb inc cltd mov popf jg pop lcall hlt fisttpll cmp test es xor movsb js jp aas cltd xor addl std imul rol pop push scas pop int3 xchg in outsl pop out and imulb dec aas (bad) stos pushf jecxz aaa daa push fwait imul or cs jae jb adc loop adc (bad) loop sbb fstenv xchg addb lods push aas xor nop (bad) dec in (bad) (bad) lock stos inc sub push insb test push cwtl pop cli cltd popf call enter sbb add jne add cmp xor sti xor fiadd enter call xchg mov or mov mov (bad) aaa vmovdqu data16 and lcall je sub mov xchg sub mov (bad) stos setnp subl mov loop leave (bad) adc pop fbld inc sub mov jp push into movb and aaa int ds xchg shll lods xor imull or and sbb or xchg adc (bad) jbe inc push repnz mov mov add mov fwait repz enter das mov mov aas clc loopne jmp push idivl fstpl push sub outsb mov sub mov fs sbb and paddb test lods outsl and pop cli add ljmp call fstl inc pop dec lret add fisubl add outsb jl rol add cld push fcom subb sbb cmpsb mov mov lods xchg in xchg insb ss cmp cmp out mov dec cmp fs or cmovp scas test adc lock dec imul loopne mov inc xor xor or (bad) adc add push shlb (bad) mov outsl sbb mov sbb insl out std mov sub mov add loop push mov pop fsubl les mov (bad) inc ret jmp test and jmp stos in ss adc movsb daa mov and pop ljmp (bad) ficomp outsl fistp insb repnz sub pop lds sar mov mov gs inc add mov sahf fcoml es mov mov dec outsl pop imul arpl xor and stc daa (bad) xor test popa add std leave arpl mov xor jne cmp inc mov or xor sbb in mov ds (bad) mov cmp je add dec add xor jbe stos out fldenv xlat pushf xchg lods add movsb incl test dec sti dec stc in cmp adc pop cli stc push outsl cmp inc cs dec xchg adcl test pop adc addb and in and or in je in cmpl je aas movsl in adc dec lods ficom cmpsb dec arpl (bad) mov add mov pop stos or push shr pop aas add xor in inc (bad) pop dec stos pop js in push in aaa pop sbb or enter mov lods iret lods in ss leave idiv adc icebp xchg icebp aam dec out je lcall mov sti jg cs xchg stos jno mov xor aas repz push packsswb mov js arpl sbb dec mov ljmp (bad) sub lahf jns out out leave (bad) adc xor dec push mov out mov mov ja adc (bad) fcomp jae nop jp mov lds pushf popf dec outsb cmp inc jl dec mov push mov push and cltd insb loop xchg sbb pop and fbstp jbe jbe sub ljmp nop enter (bad) fs iret pop lds loope fisttp cwtl dec inc xchg hlt (bad) push das mov ss cltd add add cmpsl in dec sbb movsb dec movsb enter nop popf xor xchg cmp inc mov call adc cli int3 mov mov scas sub xchg das xlat xchg sahf cld jmp cs pushaw mov inc lods dec sbb inc stos dec and outsb subl faddp dec leave and mov push jae (bad) out push push jns cmp mov inc nop xorl int3 and jb fwait mov dec pusha or repz push and fldl bound outsl lods xchg lds out out cmp dec dec nop dec push pushf or repnz or (bad) (bad) jmp adc and ret inc das cltd lcall outsb arpl aas add bound jb repz jne jns rcr xor loopne cmp fstl pop and mov dec sub jns push push js orb mov pop mov scas call ss cmp shr cmc iret xchg fsts xor inc in aaa enter test xchg push push adc (bad) repnz sbb je mov xchg and es pushf xchg pop jo xor inc inc repnz into xchg and push jp (bad) mov jge dec stos xor jl sbb sub mov ds out xchg sub dec cmp xor cmp push outsb repnz lea test dec hlt adc imul gs sbb pop jbe (bad) push push das mov xlat inc xor adc mov jmp inc xlat dec or hlt jge mov lret je mov mov outsl inc cmp push fnop ds repz inc stos (bad) stos (bad) push mov ficom sbb xorl hlt outsl leave iret outsl or stos testb push sarb cs je xor sarl pop mov ret leave or ret jae movsl clc test inc in push jnp loop sarl hlt xchg stos lcall mov arpl lret sub loop cmp push les loopne ds lock mov rcll scas xchg sahf cmpsb push mov (bad) pop or in fnop insl inc sbb inc mov lods movsl lret xor (bad) cmc mov pop es mov (bad) sbb mov inc cmc das pop lret add or pushf enter out shll push mov int inc gs mov negb aas in add xorl shl cmpsb mov call lds lcall js xor cs aas fs cmp pop stc out mull pop adc in cwtl sbb jno pop mov sbb xchg cmp jne push js imul xacquire push call pop out test bnd push jne into mov dec out cs dec push jne in xchg push addr16 out and clc push push cmp inc jmp arpl dec ds or sbb cltd out mov lcall fnstcw int3 inc mov inc std sbb lcall and pushl (bad) leave rclb mov xchg hlt int3 jmp or jmp sub sub loope xor add loopne push pop aad cwtl hlt xor dec data16 sbb add jmp jle cmpsl sub xor test das into sti stc mov stos (bad) sub daa push (bad) xor jns lods and lret xchg sub mov lret and push test push sbb sbb (bad) mov dec xor push push cmp pop mov push mov and shlb sub dec out xchg hlt fmul xchg mulb fyl2xp1 mov out aaa arpl test (bad) or add dec in incb minss mov jb mov mov inc sti pop loopne mov je adc mov ljmp pop cmp jbe cli mov fdivrs or fdivrs popf pop nop rcl jo mov ja jle (bad) leave xor repnz dec pop addr16 jle cs cmp sub fbstp push aaa jo rorl jne lods or add pop xlat pandn jp pop push mul nop mov adc mov pop push in adc and and jle cli jle iret hlt sbb fs loope pop xchg mov test xchg lret incl cmp roll addr16 call in loope (bad) adc cwtl popa push addr16 push loope (bad) or mov (bad) arpl addr16 push out es pop fisttpll dec cmpsb xchg int mov and jo js push dec sub cmpsb movb scas fadds cld cs mov sub xor (bad) mov sbb pop xor sahf pusha mov outsl and imul or dec daa dec adc repz or sub sahf rorl fdivrs push pop push xlat loop mov add int3 stos divb not insb dec das inc xchg xor gs movsl xchg sub inc leave out je ja xor aaa xor fidivrl loope mov sbb lock push pop push rorb repz cmp jge lret mov mov shll cwtl ret push pop lods xchg cmpsl mov test out out dec lock add pusha mov lea push mov lea xor push cmp jne inc inc push push push add push push push add push push movl nop nop nop nop nop push push push push sub mov movl movb mov lea mov mov movzbl mov shl mov dec mov movzbl shl dec mov mov movzbl movl movl movl mov mov movl movl movl movl movzbl add shl lea cmp jae mov movw add loop mov xor movl mov add mov xor cmp je movzbl shl inc inc or cmp jle mov cmp jae mov and mov mov shl mov add cmpl lea ja cmp je shll movzbl shl inc or mov mov shr movzwl imul cmp jae mov mov sub mov sar mov lea movzbl mov mov and mov shl mov sub sar add imul cmpl lea mov jle mov sub mov movzbl mov shll mov lea mov and cmpl lea mov lea ja cmp je shll movzbl shl inc or mov mov shr movzwl imul cmp jae mov mov sub mov sar cmpl lea mov je jmp sub sub mov lea shr sub cmpl mov je cmp jle jmp cmp jg lea mov add cmpl ja cmp je shll movzbl shl inc or mov mov shr movzwl imul cmp jae mov mov sub mov sar lea mov jmp sub sub mov lea shr sub mov jmp mov mov mov mov mov inc cmpl mov jg movl jmp cmpl jg subl jmp subl jmp mov sub mov sub mov shr sub cmp mov mov lea mov ja cmp je movzbl shl shl inc or mov mov shr mov movzwl imul cmp jae mov mov sub mov sar mov lea mov mov mov mov mov mov mov xor cmpl setg add lea mov jmp mov sub sub mov shr mov sub cmp mov ja cmp je movzbl shl shl inc or mov mov shr mov movzwl imul cmp jae mov mov sub movl mov sar lea mov mov mov mov shl add cmp lea ja cmp je movzbl shl shl inc or mov mov shr movzwl imul cmp jae sub sarl mov mov cmpl lea mov je xor cmpl mov mov setg lea mov mov sub mov mov mov inc mov jmp sub sub mov shr sub mov jmp mov sub shr mov sub sub cmp mov ja cmp je movzbl shl shl inc or mov mov shr mov movzwl imul cmp jae mov mov sub mov sar lea mov mov jmp mov sub sub mov shr sub mov cmp mov ja cmp je movzbl shl shl inc or mov mov shr mov movzwl imul cmp jae mov mov sub mov sar lea mov mov jmp mov sub sub mov shr sub mov mov mov mov mov mov mov mov mov mov xor cmpl mov setg add lea mov cmp ja cmp je movzbl shl shl inc or mov mov shr movzwl imul cmp jae mov mov sub shll sar movl lea mov mov lea mov jmp sub sub mov shr sub cmp mov ja cmp je movzbl shl shl inc or mov mov shr movzwl imul cmp jae mov mov sub shll sar movl lea mov mov lea mov movl jmp sub sub mov mov shr movl sub movl mov add mov mov mov mov lea mov add cmpl ja cmp je shll movzbl shl inc or mov mov shr movzwl imul cmp jae mov mov sub sar lea mov mov jmp sub sub mov shr sub mov lea mov dec mov jne mov mov shl sub add cmpl mov jg addl cmp mov jle mov mov shl movl lea mov mov lea mov add cmpl ja cmp je shll movzbl shl inc or mov mov shr movzwl imul cmp jae mov mov sub sar lea mov mov jmp sub sub mov shr sub lea mov mov dec mov jne lea cmp mov jle mov mov sar and lea or cmp mov jg mov shl add mov lea sub add mov jmp lea cmpl ja cmp je shll movzbl shl inc or shrl add cmp jb sub or dec jne mov shl mov add movl mov movl mov mov add mov add cmpl ja cmp je shll movzbl shl inc or mov mov shr movzwl imul cmp jae mov mov sub sar lea mov mov jmp sub sub mov shr sub mov mov mov inc or mov shll dec mov jne mov inc mov je mov mov add cmp ja mov mov sub add lea mov inc mov mov inc incl dec je mov cmp jb jmp mov cmp jb cmpl ja cmp mov je jmp mov jmp inc sub xor mov mov mov mov mov add pop pop pop pop add add xor lea mov push cmp jne mov xor pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov jns movzwl inc push inc mov push call or je mov add jmp call mov lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp add add movsb xor inc adc add 