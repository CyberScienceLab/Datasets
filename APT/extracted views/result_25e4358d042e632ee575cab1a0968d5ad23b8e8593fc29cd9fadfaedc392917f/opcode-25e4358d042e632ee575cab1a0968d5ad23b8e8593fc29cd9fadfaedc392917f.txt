mov adc add inc outsl outsl insb gs outsb add or add mov insb jae add jb lea sub add push outsl (bad) testl pop dec outsb je addr16 and rcrb xor add jns insb daa push outsl jb add jns incl imul add or push je sub in push lcall pop mov cwtl imul mov ret repz pop push dec bound arpl pop sbb loop jae insl sbb and or dec mov popaw arpl add decl dec pop inc add inc and clc jmp jle mov adc mov in popf pop xchg xchg gs faddp (bad) loopne jno add shr or mov add cmp pop push insb push adc scas dec jo loope jmp sets daa daa daa xchg nop mov mov daa jl je daa daa daa daa insb push daa daa pop test push daa daa daa daa push sarb dec ror daa daa daa daa enter clc lock daa cmp les (bad) outsl scas (bad) add sub je movzwl mov ss pop ret jb jb (bad) xor sub jb jb and sbb iret out ds mov add push add (bad) sub enter add mov mov mov add lea mov mov mov inc cmp jne mov mov mov push nop mov out (bad) push inc add scas mov mov xchg insb test xchg mov mov pop jnp push or mov mov adc add (bad) aaa push mov push or and sub ret mov push mov mov mov mov add loope insl iret rcrl mov add cmp jne int ficompl inc mov or inc add adc mov push jne aaa sub jne (bad) mov ror sbb pop pop pop push mov mov je sti mov xchg cmp jb in jbe jo into add call ja and mov mov or mov dec ret mov in fucomi aas pop mov add pop repnz sub or pop push sub mov xchg sub mov aam or sbb scas sbb sti jne sbb jnp inc nop es mov cmp mov fwait push add ljmp fisubrl add add and push jg mov mov test je sbb and (bad) adc (bad) cmp mov and push mov sti ds pop data16 rol push lahf push lods push movsl jne icebp push push (bad) add xchg dec pushf cmpl in mov popa clc ret fucomip mov (bad) or or lret and call faddl lds mov push jg mov out ja mov add cmp ja cmp cmp jae or or sbb out dec mov inc or add xchg jecxz fild mov mov add adc sbb mov adc or push adc hlt mov mov mov and sbb jbe cmp xchg sub mov mov jle add adc jbe mov cmp or or jbe loopne xchg scas adc sti push push cmpl jmp ss daa cmpsl movsl loopne and push cs inc add xor sbb add sub sub or sbb mov add sbb add cmp nop movsb add add inc mov dec paddd fdivs clc mov (bad) aas or add mov (bad) repnz (bad) xor idivb inc xlat jl xlat ja movsb push movsb in je mov inc cmc shll xchg xor mov (bad) pop add jne pop stos sti mov and push inc in hlt icebp mov xchg insl pop mov add out cli jl add lock mov je cmp inc jle mov mov sub push stos mov std mov icebp xor lea jno pop shrl mov pop fcoms gs pusha push out arpl sbbb data16 xchg jo xlat adc int3 imul jne push fcmovb loopne cmp js sti inc cmpl sub inc popf adc or mov pop sahf push (bad) incl mov cwtl aaa jecxz add add ret jg cmp jae mov out rorl jge xor push test je aad rcll ret addr16 or js add adc jmp jecxz lock jl hlt pop sbb add push push mov xor push cmp fistl loopne or inc test adc push scas shr mov or adc aad leave jle hlt inc cmp in mov mov add rcrb xor push adc sub xor ret mov mov insb jo pushf dec pop xchg test shlb or jo sub in mov adc loope mov addr16 add loopne mov mov sbb (bad) mov sbb in jo xchg fistpl push cmp sub jb or or pop test jns add sar mov or cwtl mov and fnstenv (bad) mov sub mov pop adc push push jmp dec fadd jb add or mov cmp das jne or sbb add sbb cmp jl movl stos repnz jb sahf es (bad) outsb inc or mov and add sub adc fdivr test cld dec adc adc shrl je insb or push or push rolb aas leave mov pusha xchg or ret (bad) popf inc jns push (bad) xor adc je jmp fisubl aad lods enter ret aas in das jo enter je mov sub cmp cmp cmpsb mov pushf add test out stos xchg mov xor add mov ja cli in clc add and repz bound nop and decb test add xchg jo xlat jmp dec (bad) mov or mov or sub cld jg clc sub jne outsl jp sub cmp jge mov out fsub or daa xlat cld lea mov inc add mov in mov aad (bad) lds stos clc add adc fisubrl test jp or and mov xchg iret xlat mov fisttp sub movl rol inc mov enter adc insl jle mov cmp jmp hlt inc ss lds adc add sub cmp or mov pop mov mov xor insb sbb inc inc mov inc adc or shrl movb daa or adc add or jo sbb lock std adc movsl movsl mov inc mov xlat imul mov cmp pusha xchg lods sub add adc repz mov sbbl adc out jge pmaxsw mov test aam mov insb (bad) loopne pop mov insb and pusha pop pop inc imul add rol pusha mov and or xor jmp sar cmp jl adcb or sub xor mov pop push dec cmp sbb push pop mov pop movd mov lock jg,pn pop mov pop je inc ja pop pop jmp sub cwtl sbb dec sbb jle push fcomi adc cmp movsb sub cmpl maxps adcb inc add xor stos (bad) loope sub xor jmp jmp dec and roll (bad) xchg adc clc repnz jne (bad) out cli js pop xor push xchg xlat test cmp loopne pop movsb pusha or sbb clc stos jle inc cld repnz pcmpeqd addr16 push push mov pop mov push add or sti mov mov push test jg xchg or or aaa xor test add pop inc scas (bad) jne push add jns mov jmp mov jge ja dec cmp mov pop lea add or mov int adcl jbe jmp push pop pushf add sbb out jg sub mov add bound sbb test lock mov or push pop aad pop sbb push sbb mov sub jne out jns in push sub jo xor or lock test jne test ja (bad) or movnti add loopne outsb orb or (bad) fcoml adc (bad) jge rcl insb add das add pop in ret mov cmp clc cmp stos in pop clc and and add pop fisttp mov test je or ret cli mul cmc jg or orl jmp mov cmpl or mov clc push adc or adc sbb and add inc loope dec adc outsl cmp pop jg add push sahf cmpsb fsub (bad) mov (bad) push cld inc lea loope add mov (bad) mov add jmp les pushf (bad) into push xor cmp adc test pop mov lea inc sub cmp mov add cmpsb ret cmp mov xlat mov sbb mov cmp mov add imul xor pop cmpl and iret adc xor sbb add mov add cmpsb or icebp jno loopne test add aad pop sub add mov jo movsb push pop mov loop fadd shr xchg or add xchg mov mov add cs ds or and fdivs nop xchg in lea cmp mov sbb fcoms push dec sbb fs cmc adc dec and test push mov adc add shll in ret (bad) mov (bad) jge ss adc jno push mov xchg dec sbb add inc cmp cld lahf cmpsb test jle call or mov add stos adc add (bad) dec sahf je je lahf (bad) or mov test je sbb enter or sbb push xor jne,pn sub bound shr or out mov mov sbb push mov ret rol add sbb mov dec lock pop or xor jg jge push out mov js popf mov mov jecxz cmp pop inc daa dec sbb push out das mov ja mov mov mov pop mov adc push enter daa pusha rcll roll pop jne xor pop mov xchg jp mov mov sub sbb ret loopne mov fdivrl sarl (bad) mov inc rep jmp mov fist in leave jmp mov jl pop cmp xchg hlt push lock pop adc loopew jno (bad) mov cmp divl adc js rep xchg subb inc je cld lea xor std xor (bad) jnp mov ds inc cmp jb cmp ja sub ret nop mov lar loop sub fstps pop js (bad) push sub fist fwait pop pop pop in or fldcw add ljmp fidiv (bad) fldcw pop inc in sub cmpb xor adc mov data16 jb mov repnz sub adc (bad) inc fsubr sbb scas pop out xchg je cmp xchg adc addr16 shrb mov push sbb sbb xor mov cmp idivb ja and adc jne call mov test adc and sbb sahf jmp cmp arpl mov mov (bad) jbe pop mov xor mov inc (bad) jb cmp ja pop scas clc push mov mov inc inc add ret mov sub jbe mov rcl pop sub leave mov inc xchg mov jp sbb lret mov inc and divb imull jg arpl push xchg inc inc and add push shr je aad shlb clc pop cmp jne dec mov fwait mov aaa bound or loop push adc in lcall loop je mov cmp jne push adc add or cmpsb imul add adc mov jbe cmp jne shr lods adc add ja mov push mov shr or jae jns pop cmp cld fildl rcrb and mov cmp jne dec imul sub sahf mov jecxz outsl cs fimul int loopne data16 pop or stos adc pop in xchg fsubl push push insb sub mov fnstsw cmp je mov or je or je ja jae and je pop je xor dec jg stos mov dec inc mov or ss outsl and ja cmp ja lea push add push incl dec je sarb jmp inc mov js pop sub sti xor inc inc jmp mov fild add push adc lods loopne add or aad mov pop xor mov xlat mov cmp cmp pop icebp jg cmp push inc mov dec jne pop decb jno sub xchg or daa outsb sbb sub fsubrs je adc lea sti out adc lea fldt and add push cmp mov add popa push in daa pop mov jmp pop xchg jge mov xor sbb mov push fstp fldt andl fldz mov cmp in jg aas mov stc in cmp inc pushf or ret psubw inc ds adc mov and sub sbb xchg and inc mov stc mul lret mov lock stc es test pop xor out sub pop jecxz add leave sbb sub cs jbe imul cmp mov aaa push and mov bound cmpb xlat fadds int nop lods outsb xor xchg push or push push int3 into stos (bad) (bad) lcall ret inc mov push pop test enter mov inc push (bad) (bad) (bad) jmp hlt daa (bad) lret into pop inc test xchg clc js aas sbbl pop (bad) mov addr16 (bad) (bad) dec leave repnz bound and cld gs sahf mov sub inc aad iret decl (bad) (bad) pushl adc lds stos mov cmp or mov pop out sub push mov inc imul (bad) divl jl xor cmp call mov (bad) (bad) lcall push inc mov push sbb sarb repnz test nop fildl (bad) (bad) (bad) jmp movsb lahf nop inc pop stos clc scas adc (bad) inc pop pushf mov pop pushf mov fs aam imul loope jp (bad) (bad) call xchg pop fnop ds push cmpsb scas mov pop or addl dec in xchg cmp xor in cmp sahf xchg pop cmpsb lock mov popa (bad) (bad) (bad) mov pop mov (bad) repz mov subb and jg (bad) jmp outsb bound xor jmp (bad) (bad) cmp sbbl cmp jne push pop and orl push mov outsb cmpsl fwait std inc js movzwl lea push push ret enter mov mov rclb xor (bad) imul xchg pop hlt push data16 add mov gs fidivl test out mov dec jmp push clc pop aas or mov adc push dec inc push push inc push inc pop inc outsl jb popa outsb fs inc gs lock ljmp imul push dec popa jae push popa insb jne push push dec mov (bad) mov mov aam leave mov inc pop cmc dec jo or or push mov cmc add mov jne dec mov xor out jne mov inc mov es fcompl or lahf jns,pn outsl pusha addr16 push mov pop aaa movsb or push ja rcr test or test push movups pop mov ret xor mov mov loopne mov or push cld mov (bad) mov stos mov xor push shr dec rep pop loope rcr (bad) mov pop faddl add sbb in cmp je pop mov add jae lock pop ds mov mov push sbb cmp mov jg outsl lods (bad) mov mov jbe mov pop cmp mov mov subl (bad) jb shufps loopne add jmp mov mov roll adc fcoml inc pop out pop clc inc nop cmp mov dec jl cmp xchg mov sub and or roll adc clc mov cmp push mov push add pop lea push sbb and fisttpll pop sub (bad) dec setne inc idivl in int3 popf or dec jno add rol mov xor xor imul push or jne lock (bad) cmpsb or push inc inc fdivrl lds pop mov call test test mov jg outsl decl push mov leave jne mov fwait nop push xchg jmp sub xchg lret push or (bad) call sbb scas je pop in negb pop add sub mov pop vpaddb push xchg add or pop ljmp pop mov dec xchg pop jne sbb mov das mov dec lds out les faddl les data16 (bad) mov sub ljmpw pop adc icebp pop mov fsubp test (bad) xor decl not js xchg adc mov cmp (bad) fbstp into dec jne icebp fucomi sbb add sbb icebp insl lcall add xchg lret rcr lahf push popf enter xchg (bad) mov rolb repnz sbb push scas jge jmp lahf in push pop add mov (bad) cmpsb push bound hlt xor push jecxz cld jg mov mov mov movl or fisubl pop sub cli test or or aad jecxz (bad) sub movups push clc (bad) pop pop test sbb mov sbb andl cmp (bad) mov int3 (bad) in push sub adc pop push mov enter push cmp cmp pop iret mov repnz add add rcrl sub or jae addr16 pop idivb fsts and sbb jmp push lods (bad) jmp or mov mov and addr16 jecxz push add and (bad) adc push xchg aas loop fdivrl adc jecxz pop mov hlt and testl in cmp (bad) fwait mov mov adc outsb add jl adc adc je mov fidiv mov cmpl je or movsl jb jbe test pop cmc subb dec jb add int mov enter adc jne push jne push lea ret pop cli push jns je sbb dec add out push sbb add push sub inc cmpsl mov (bad) sub decl jne fistpll call test jg hlt xlat cmpsl mov mov push and xor inc mov cmp outsl je dec or into test push add mov add mov jl add lds mov mov sub repnz addb popa adc cmp jne xchg mov std mov fbstp sbb je jg pushw rcrl (bad) dec jne pop (bad) xor inc jmp sbb movsb popa push daa mov mov adc adc insl or inc push cmove pop adc dec adc adc pop or paddw mov popf pop (bad) cmpsb movl ret pushf ret push (bad) test das xchg inc jg and sar lock push push push push push mov push jns and pop es mov cmp push cld cmp sbb mov inc or pusha add (bad) or sbb dec iret fdivl rcl orl adc adc js pusha xchg jae mov call lods pop insl movsb jmp push pop ret xor mov xchg in imul add mov add xchg inc jg je cmp push sub jbe sub je jmp add sub pop mov pushl je jmp cmp sub adc mov jmp sub cmp mov jmp mov jmp mov (bad) (bad) dec jmp mov jmp push sbb into jmp mov jmp mov jmp mov jmp or lret call test inc aad mov mov jecxz lea (bad) push je push outsl jp (bad) mov pop test mov inc push inc sbb cli (bad) adc out push inc roll or or mov jo inc cmp (bad) xor push mov mov or enter push mov mov cmp in jg jne add or cmp jne and push (bad) mov lods movsl or or jo loop dec sub test jle dec mov inc fiadd test jle call and jecxz adc lret mov imul push jg mov or dec mov lods js ret or cmp (bad) sbb fdivs es mov pusha dec mov add mov cltd lcall mov mov jmp xor rol add add bnd cmp sbb mov add add incl ss jne pop pop pop inc pop fadds pop sbb out setae pop add mov xchg or mov insb nop mov add ret mov add add rcrb rorl mov dec ja mov sbb add shrb xchg mov mov push push inc ja push rcrl out xor sbb add movsl pop sbb ja add dec aad hlt mov mov leave pop push push imul cmpl cmpl inc mov xor stos jmp push push add pop adc add cmp xor push jo jmp adc pusha cwtl outsb add sub push or pop sbb cmpb push addl test sarb or call out dec and xchg sub or add aas inc lea and mov sub icebp xor add sbb pop in inc adc cmp push mov inc pusha sub jne and in fcompl mov cmp jne cmp adc adc mov sti ret rclb clc je push sub insb push popf aas mov pop and mov sar mov adc decl push lea js or push push push xchg inc jle les push sbb add or mov dec jne push add dec and inc jg cmp int movsl jge push mov pop push dec sbb insb xchg pop xorb xchg xchg jle jnp aam (bad) jle push add clc push mov sti pop movw xchg mov cld sub pop fist jns cs cwtl mov sahf loopne mov das stc mov loopne rolb mov cmp cmp pop and inc or adc fadd mov cmp sub repz aaa mov mov (bad) cld sar cli jg insl fdivrs jb jmp lea cmp mov sub into mov mov jno (bad) mov and loop cmp fistpl xor fadds gs jnp pop jge xor dec push call loop or out xor ret cmp je sbb dec fs je add mov jmp inc add jmp jns pop sub and pop pop or or addr16 in add jae ja mov inc xchg push add test push sub scas jl das add pop pop xor push loop outsl push and pop cld add cmp adc fnstcw or pop or ret (bad) xchg aas pop add fdivrp ret push aas (bad) je jle sub mov push cld add cmp pop js push cmp (bad) mov adc mov (bad) jae sub cld cmpsl jmp popa cmpl je cmp mov cmpsl cs sub pop scas sarl jp,pn mov loopne cld add (bad) je mov in ja dec mov cli lds push sbb push and loope lret sub iret adc cmpsb dec fwait mov xor mov sbb in cmp add or ret mov cmp fs dec jne mov roll cld jge and aaa add dec jmp hlt lock push jbe pushf sbb add clc out into pop dec jne mov inc (bad) roll int3 add scas and add and jmp xchg addr16 lock push sub (bad) imul mov jg xor add and inc and adc or (bad) jae movsl or and out jle mov shr aam mov cmpsl push clc inc das xchg jle test add jno push mov (bad) insb mov adc pop adc and es mov int3 cltd adc xor lea adc es jl cmp jge sub lcall adc mov sub fnsave adc shr in jmp jmp push insl and and (bad) (bad) xor lods js mov mov mov add mov mov repnz inc dec movsb push cmp mov repz icebp pop cmp lahf cltd mov push mov cld in clc sti sub xlat adc imul add gs cmp subl mov lea lock sub pusha add mov jl add mov cmpsl pop decl dec js mov inc jb adc das loopne pop adc inc push cmp in pop fsubl pop mov (bad) out xlat sbb add push or out dec loopne lods and sbb cs push pusha xchg xlat clc pop sub and (bad) mov mov lods jmp out (bad) arpl cli pop cmp (bad) pop call ret push push test mov (bad) jb xchg cmpsl push push das loopne xchg mov and push loope (bad) cmpsl in cmpsl push fwait pop (bad) lock jp add sub push add in jno in stc inc xor inc jecxz iret sarb pop movsb fs dec sbb pushf push xorl or dec push das xor push jecxz mov add nop pop add sub cmp sbb sbb or cli (bad) inc pop add shr xchg je mov and push inc xor dec test cmpsb add xchg out pop pushaw and fisttpll pop das or pop add imul stc sar lock faddl pop dec cmp out inc mull pushf lcall sub cmp push out loop pop lods add add fsubrs mov data16 push lcall pop stos in pop test adc mov add xchg mov cmpb push mov dec lea jl push adc inc mov aaa inc stos xlat js sub jg das sahf sub xchg mov mov je cmp je cmp je cmp je cmp je cmp push test je mov mov rcrb mov add jge dec imul out jmp xchg aad push or add dec cs adc xor call xor lock cmp sbb or dec popa jl out pop call call push loopne mov cmc ret mov and mov fs push mov in sub cmp test int3 jg inc int scas leave and lret cmp jo jg emms xor push nop inc outsb push jmp xchg adc inc mov inc cmp jmp jae mov test cmp out cmp ds jmp stos pop daa xchg pop lods adc xor adc and fldl add cld add clc push ret inc push mov jle ret loope add pop push mov cmp rcrl push xor pop cmp sbb rcrl push or or sbb bound cmp add adc in popa jnp pop add jmp and lods insb lea add adc outsb popa movsb bnd add fimul cmp dec orb cmp pop jmp aas or (bad) (bad) add sarl xor xlat inc les popf adc and scas aam in jne arpl add clc sub add mov push sub popa jge inc push mov jno clc jmp mov loop shl and sub in shlb mov dec xor add es ja lock ficompl sti add add inc ljmp js icebp mov jo add je cmp push dec test ror or xor lock and sub jno mov mov xlat push fildll ror and mov negb and add (bad) adc pop pop ret sbb mov sete dec (bad) jne popa mov cmc xor out call loopne mov enter pop or sbb jg cs scas jnp xorl addb or shr or dec scas push push (bad) ja inc add (bad) cld push xor call inc push push movsb cs sbb mov imull dec in in cmp idivb inc call sbb lock cmp jne mov cmp jge pop sbb icebp and das cld adc ret lock add inc loopne push in lock jmp decl stos fbld fcomps in xchg jge or std pop jnp sub fwait xor dec sbb iretw shr int3 adc into stos push mov dec rorl fldl xrelease mov mov lock test cld (bad) fadds ret cmpsl cmpl jle cwtl or adc or jl inc out lcall lea addb out push insb icebp loop sbb mov cmp add dec test cmp xor lock jne pop mov les cmpsb push in xchg cmp xchg mov pop dec mov dec mov inc popa add adc dec push push push lock (bad) and lds out pop pop mov test push cmp pop in enter mov clc pusha mov (bad) je add sbb test add mov ljmp iret inc cmp xor sbb pop (bad) xchg lock mov mov inc add mov pusha inc adc lcall mov add inc sbb xor or ret xchg jecxz jmp jnp cmp sbb cli pop jne ds push inc cmpsl push mov push clc popa xchg les cwtl push pusha pop push imul jecxz push push ja das pop test rorl cmp les imul outsb pop inc inc ret cmp cmp sbb add and jl pop test scas cmpb mov movsb out mov mov jne movb fisubr cmp inc add loopne in sbb (bad) sub add inc cmp dec jg gs push mov (bad) in shll in and je xor loop mov lea ret fwait jg movb pop mov push push mov mov jg (bad) mov (bad) fcomps mov jae imul gs xor cs insb pop pop mov je outsl outsb addr16 popa je dec popa insl gs daa outsl loopne loope pop sub jecxz inc sti in scas jns movb int3 push inc lcall push jbe sarl add ja or inc arpl jl pop push stc push cmp or pop pop cmp ds inc stc int shrl mov dec ret add push repnz mov popa cmp push inc xchg test jno and popf push lods loope jmp repz js push xor cmpb test nop jge call enter sarl and in xor scas push add cmp stos pop cmp jne adc popf inc orb sub sbb add inc bound adcb les xor cmc add (bad) mov (bad) outsl data16 popa jb lahf lods data16 mov jae aaa jl jbe xlat inc cltd inc jo xchg jo ja nop addr16 mov pop sub cmp jbe mov push or mov push sbb mov or lds (bad) jp mov test sbb add mov dec or fnstcw sbb or mov bound lea scas cmp shlb inc dec add ret ds or sub mov movsl loopne test xorl fsubl jno xchg fistp cmp cmp cmp jno or mov pop mov adc mov cmp jne pop mov mov ljmp pushl les data16 add sub pop mov (bad) push orl sahf je sbb mov push mov cmp mov dec pop sbb mov pop pop ret sbb sub sti lock sub sub mov fcomps test add or mov xor lea hlt clc add mov add insb mov (bad) mov (bad) dec js inc (bad) or xor or adc mov mov ljmp (bad) xor sbb aad movzwl inc cmp ja mov inc jmp cmp and lea cmp ja fcmovb jmp or mov adc push and sbb and lret add jmp pusha add dec mov rolb dec or cmp pop test cld jb or dec movb and sbb or add cmp lea ret xchg xlat mov hlt std fwait xchg (bad) mov inc loop rclb (bad) push mov sbb jne incl mov xor roll fnstsw loop sbb loope and je cmp adc mov mov sti orb mov inc js cwtl and or mov jbe,pn lret dec dec dec cld mov std cmp inc inc lcall cmp or mov movl mov jbe jae ret xor mov int sbb cli xorb sbb adc jo or jb inc sbb or xchg mov scas jmp loope pop (bad) mov test call mov adc lea incl mov ficomp xor push sub dec and xor pop add gs or jmp adc enter add adcl popf pusha mov add aaa pop cmp xchg fadd jp add and (bad) adc xor int3 inc mov mov ja and lods ds cmp inc xchg rorb inc lock lea nop mov cwtl push cmp adc (bad) jge push add ds mov mov jle rorl fdivrl xor jns fldl push pop ret aas push lea push push shrb lock cmp jl xor mov xchg je xchg sbb rol lcall daa jnp daa stos pop loope dec cmp xchg and movntq mov in sbb or mov stos out ret clc subl add or add or fnstenv nop add xor out sub pop mov (bad) and push pop in divl call dec jo mov adc and call cmp jbe jo cltd movsb mov or dec adc mov sbb ja clc mov in daa mov dec loopne fnop push push pop ds dec mov sarl mov cmpl or clc loop pop adc out movsb inc or jmp push mov push push aaa pushf sub das cld mov es jns adc test xchg lret mov jbe and ret mov or or mov out (bad) dec test test cmp mov dec cmp jge sub aaa leave cmp jle sub sbb mov adc mov or aam or add jbe cmp xchg push inc inc add insl fnstcw dec push or sub cltd jo pop jo fwait clc mov xor or push lcall fs gs (bad) gs inc jb jns es imul std xchg (bad) fiaddl cmp inc outsl arpl inc gs jne je mov call outsl je imul mov gs outsl inc arpl lods or or or out mov jle inc xor xor (bad) outsl insl bound outsl js fs lock pop push imul hlt cmp andps outsb dec inc pop addl popa dec add leave mov xchg hlt lock dec dec outsb mov call dec dec dec dec fcom ror dec dec dec dec enter dec dec dec dec mov dec dec dec test mov dec cwtl xchg nop mov dec dec mov dec js jo dec dec dec dec push dec dec dec pop push push dec dec dec dec dec dec inc inc cmp dec dec dec cmp sub dec dec dec sub sbb dec dec dec sbb or dec dec dec or cld mov mov pushf fsubl movups mov add lahf clc (bad) jb jb lock call in fnop jb jb aam int3 enter jb sarb mov test jb jb mov jb xchg nop mov test jb je insb push fs pop pop jb jb push push dec dec jb jb inc inc cmp jb jb xor sub jb jb and sbb jb jb adc or cmp sbb cmpsb les cmp cmp cmp cmp cmp cmp cmp cmp cmp jo cmp cmp push cmp cmp push dec cmp cmp dec inc inc cmp cmp cmp xor sub cmp cmp and sbb cmp cmp adc or cmp cmp add cld movsl pushf pushf pushf mov hlt lock pushf pushf pushf pushf call pushf pushf pushf fcom ror cmp cmp mov mov cmp cmp cmp cmp cmp cmp mov cmp pshufw daa push jb pop pop push push jb jb dec dec inc inc jb jb cmp xor jb jb sub and jb jb sbb adc jb jb or add cmp sbb movsb clc hlt lock cmp in call cmp fnop aam cmp cmp int3 enter cmp cmp cmp lods test mov pushf cwtl xchg nop cmp cmp mov cmp jl je cmp cmp insb push cmp pop pop push push cmp cmp dec dec inc inc cmp cmp cmp xor jnp cmp sub and mov adc xor rol loop or jb adc outsl inc mov dec xor negl and or fimull nop xor cmc fbstp mov scas push mov movswl lods pop mov and xchg (bad) inc frstor mov mov js ds xor scas push mov pop or cmovle imul dec mov fwait cld or push add adc adc repz adc sbb and sti add scas push mov adc into and neg (bad) pop ret nop scas cmpsl inc mov and cmpb daa stc stc push loopne jb or mov popw push pop cs mov mov push sbb or add sub (bad) je push push mov pop xchg inc cli repnz sbb pop or inc movl cmp sti out add mov gs shlb push push dec inc inc dec add sti fnstenv outsl jb push and dec push (bad) jle inc push dec pop and rorb pop sub idivb inc dec pop dec dec dec inc push das jns and sub xor je or js inc xor push mov psllw repz cmc xchg xchg xchg xchg div clc stc xchg xchg xchg xchg cli sti cld std xchg xchg xchg xchg (bad) jmp loope xchg xchg xchg loop in xchg xchg xchg xchg out call xchg ljmp xchg out out rcl xchg xchg xchg xchg rcl aam xchg xchg xchg xchg (bad) xlat fcomp xchg xchg xchg xchg fcmovu (bad) xchg xchg xchg xchg (bad) rol xchg xchg xchg ret lds (bad) enter xchg xchg lret int xchg xchg xchg into iret mov xchg xchg xchg xchg mov mov xchg xchg xchg xchg mov mov xchg mov xchg xchg xchg mov xchg xchg xchg mov xchg xchg xchg cmpsb cmpsl test fs aaa popf stos pop jno jl xor js jl cs (bad) ret daa loop add ffreep dec pop add xor xchg and jmp or arpl je outsl outsb cmp mov adc test in (bad) pushf cmp jo nop xchg mov leave leave inc xchg in or sub incl jne dec dec gs outsl jb lock adc mov outsl pop or outsb mov dec outsl scas ret and sub scas lret add adc scas mov cld outsb adc adc imul inc xchg adc push sbb lcall mov dec and jbe jns gs mov adc jle mov repnz outsb or sbbb dec jbe divb push insb outsl ja fs dec shll push dec mov orl (bad) add xchg mov sar mov imul ds popa dec shrl insl jle gs scas insb cmp loopne (bad) rcl popa add pop mov outsb fs sbb scas ds popa or (bad) movsbl outsl imul jg mov inc popa jae (bad) mov cli or aam inc inc dec dec and ljmp jo and add lock push adc push and in jbe mov sub movsb enter nop sub and adc imul inc mov dec inc jne xchg je test (bad) pushf scas popl es sbbl lds pop mov loop inc popa fsubl jbe xor bound jb out mov add leave fldt adc inc push sarl or push stos push push adc pop adc popa data16 add jle add aaa or cmpsb les pop dec invd xor inc insb jae movsb inc cmp push test add and addr16 inc cld fldt dec adc jb popa fs push fs xchg les int3 sbbl mov test push rorb idivl in int3 adc pop push pushf out sahf xor inc dec hlt (bad) lcall xchg adc sbb push loopne sbb outsb inc lock mov andl cs adc fwait sbb push dec (bad) imul and (bad) push fsubrs outsb arpl cmp adc push shr div jp mov add mov push mov push lret mov test mov mov mov inc rcll mov loopne adc call mov cmp adc or mov mov (bad) js pop or std outsb fwait nop addr16 adc jne mov push and add sarb push dec fcoms pop pop stos mov adc std xor dec mov int add ja pop add and fisttpll hlt aas mov mov cmp jbe in jg sbb leave repz je movzbl push push call mov inc jmp loop push or cmpsl jne pop mov pop ret inc inc ds mov rorb cwtl pop test jg (bad) (bad) out and sti je jo mov loopne add in out mov scas sbb mov pusha or test xor jg push call aam sub add mov cmpsl mov push mov fnstsw cltd int lret push bound dec fild (bad) scas sbb and mov out jo add hlt pop (bad) mov push sete (bad) flds inc ja jecxz push adc adc adc pop addr16 and mov inc in (bad) cmp jl cmpb jbe adc test jecxz imul clc push sub inc pop xchg mov lock lcall movsl add add sub jb sub std pusha (bad) cmp jl inc mov xor sub jb data16 adc or sbb aas sbb pushl inc dec jne push mov leave (bad) movsl icebp mov sarb les sub scas mov mov (bad) div dec dec das mov movb mov idiv pushl ljmp jbe add mov sub jmp mov dec jne push mov out in adc leave push outsb cltd in repnz or sub push (bad) dec shrl enter pushl pushl mov negl add pop aam ja mov test cld sub int (bad) cmpsb mov mov or mov fstpl scas cltd mov andl push and (bad) (bad) pmaxub ret add add sub add rorl (bad) xchg pusha xchg jno stc mov add mov lods push sub rcrl loope mov ffree ffree ffree ffree pop add aam aad addl (bad) frstor push dec push cmp scas or insl push pop lds cmp add or popf push push mov push inc or sub (bad) mov dec setp adc dec mov mov sub or mov mov pop inc imul (bad) out dec push push insl imul xchg nop cmpsl imul dec cmp mov pop sbb or add enter jl jg xchg dec mov in orb insl mov mov daa add icebp je pop popf or test mov and movb repnz jl inc add loopne sub std sahf and imul add push adc subb mov adc add lea xchg pop adc and test fldt fcomps cld inc setne jmp outsb loopne jmp movsb mov xchg outsl jo addr16 inc mov or fldl fbstp int3 xchg insl mov sbb and out rclb sti inc test push adc and ss xchg movsb mov rorb and xchg cmp add pop clc or mov std add jo loop (bad) (bad) inc ja add push or push push pop jb mov test xchg in mov mov rcll xor repnz dec cmp add rolb pushl notl loope push dec xchg xchg rol stc push dec mov in jae add push push add pop out bound mov stos xchg push addb dec insb out enter cld fisttp aas and sbb pop into outsl rcrl add push dec xor sbb add test (bad) clc fisttp pop jmp rcrb (bad) pop je je pop jmp xlat popf jne dec (bad) jg scas add push cli pushf sarl (bad) (bad) and mov sub jnp icebp pop cmp (bad) mov clc sbb sbb adc cs sbb daa xchg insl pushf es or js,pn xor jl push cmpsb mov lea js jg push in xor imul hlt clc and push jnp das cld imull push xchg lods sarl mov hlt adc xchg add call dec or xchg out lods xor adc inc bound ret nop mov fisubl xor mov fmuls das lea daa rorl aas ss xlat mov dec not mov jbe ja loopne mov mov movsl loop pop add fsubl dec adc cmp inc sub pop lret fldl2t loop lods adc popl or or out (bad) pop adc ljmp jmp out incb cmp (bad) aas xor xor repz mov mov mov inc je and icebp pop cmp push or js fisttpl xor jp mov jl add mov xchg jmp push adcl add cmpsb adc or scas hlt inc cmp lods lods inc data16 insb aas divb inc dec je mov mov pop sub jbe sbb pop and pop push inc (bad) lods mov mov push add (bad) jne jo xor mov and lret sbb pop mov out je sbb and add mov and xchg scas ja pop xor aaa add (bad) lock push sti pop jbe mov cltd (bad) cli push push cmpb adc mov ret mov sbb les or mov and mov ja or push test adc outsb call add jg push pop sbb jb cmp into (bad) jle bnd ljmp repz mov cmc add or jne insb sub fiadd or jns sub jmp test mov mov cmp sub fsubrl ja cmp jne cs and lods jmp adc jns inc mov inc mov hlt fmull pop pop jp inc xchg jae,pn fildl sub jae ret (bad) call xchg pop mov rep sbb cmpb push ficompl pop jne and pop mov sub mov cmp imul scas outsb jae mov add and in dec push rorb adc push or or por xchg ret and mov cmp sub pop jne lea mov lcall xchg out or leave push dec push mov imul das pop nop push mov push repnz xchg push loopne mov jns mov dec fsubr cmp je test jne and ret fist inc je push pusha or sbb imul inc jmp push push lcall mov add xor stc push jne loope jl bound cmp jbe mov aad cmp jmp xor inc inc mov outsl and jmp mov mov fisttpl cld aas and std lcall in mov add inc mov cmpsb ss les dec fdivl or sbb ds jecxz rep out sub stc cwtl pop ds leave cmp jo dec lods out nop fisubrl pushf mov outsb mov int scas pop inc je mov or je mov inc je mov ret std imul mov pop push jl cld cmp jbe mov xchg adc adc adc mov ljmp bound lods imul iret dec jnp sar cmpsb cmpsl aaa mov xor and pop push pop lahf mov sbb ljmp push popf lock scas jl mov pop cld jbe lock je outsb cmp mov and arpl xlat jg outsl dec push inc (bad) or rorl jp (bad) fcmovnu sub add and inc cmp (bad) popf xchg std xchg clc dec cld lea add dec fbstp ret jmp add jbe lods mov jne adc ss nop xchg mov push lea shrl pop push xor stos or movsl es push or push std das pop jge mov neg jmp or enter xchg push mov out nop add ss fs adc cmp inc xor or jg dec mov stos cmp jne pop pop push mov xor mov sub lcall adcb outsb cs mov repnz aam jmp xor inc cmp add jge sbb jle mov cs daa push cmpl loop add rorb mov jge movzwl sub loop jae mov add lea mov mov sub adc sti mov add ja movswl mov add lea popf and negb or rorl out sub cld pushf jmp test jg dec dec dec inc dec inc dec lods or dec fiadd ret dec xchg jge add ret std loope fdivs jg cmp jl or sbb je mov stos imul xlat fcomi fstps rep jmp inc inc mov loop jo mov inc stos pop pop inc clc dec mov add push mov ss jnp mov sbb sub cld add sub add leave mov mov mov pop mov cmp cli adc mov mov sub scas je mov dec mov repz adc test jne sbb adc rcr add cli push sti mov (bad) sti add je inc jne pop mov ret fildl repz or repnz (bad) cmp lret js ret ja lea sbb out jle inc je push push cmp (bad) fmuls dec sbbb mulb loope pop inc loop push mov test pop mov add inc add and fcmovnu sahf out and adc and sub inc sub cmp mov sub sbb and negl sub sub out fs xor sub xor fnstenv xchg into inc cmpsl loopne mov add jmp fstpt jg xorb jle mov rorl ret movsb cmp test and inc push push fimull cmpl add movb or fldt je imul inc or sub out add ret loope adc pop frndint (bad) stos (bad) rcr scas push fnstsw fwait mov testb je call ljmp fbstp lea mov inc sub (bad) decl add in add push cmp jb imul xor stos mov add jns lcall outsl cmpsl or or cmpb jb movb scas loopne out js decb and pop data16 pusha xor rcr loopne adc cmp inc xor out push pusha push or shr mov add jno adc push inc adc push adc adc out pop push rorl je cs push out into neg sbb or or sbb adc jl mov (bad) mov fidivl repnz add mov inc loopne push in insl or dec and lcall push (bad) mov xor mov push sub add pcmpeqw dec sub cmp enter and pop lock push ljmp enter cmpb pop xor (bad) divl pop jmp jecxz rclb sbb inc adcl and mov fstcw mov ljmp mov cmp lods or daa push test pusha jne inc imull js cmp icebp je and fistpll sub clc xlat jnp pop add jg jne mov sahf movsl ret or add push pop jg frstor adc aas jmp fstpt push mov mov mov mov test insl and push add add int cmp mov (bad) jg sub add jae fimull movsl sub aaa mov negb jo jg es push inc imul push cmp seto aaa push iret inc rcr (bad) test mov in or adc out outsb sub add js leave mov in mov (bad) mov inc lcall aam int3 cli lahf scas fldt fstpl fwait cmpsb push add dec (bad) cmp pop mov mov fcmovnb fldl test (bad) jns jbe sbb adc mov xor push adc xor jmp mov lcall clc out xor mov jae or cmp inc stc bound sahf jae data16 (bad) cld data16 add pop adc ljmp in lret adc xchg fildl xor cmc rsm or sbb lock xchg outsb lret movsb dec outsl (bad) (bad) and jp rolb nop std adcl pop sbb stc dec sub lret loopne cmp aam repz iret and mulb jg push enter loopne fisubr adc insb mov imul jb xchg adc mov inc add aas int3 xchg or ud2 fsub fistpll (bad) les add (bad) fnstcw loopne (bad) cmpl jb mulb ja and jb or jb (bad) lods imul cmp ja adc ja xor push mull pop dec incb jne aam jo sub dec mov aas cltd idiv imul js shl add sub bound add stc add pusha ret or lock rol std std pop nop mov sbb xor dec in test rorb fnstcw jl clc push clc add or inc pop pushaw in test outsb lcall dec data16 stc mov add jl addl or inc inc and ret lds mov mov decw cmpl int mov push sub movsl mov pop stos shl cmp xor inc lods js cmp xor js mov adc cmp jb aaa iret popa jbe sub fbstp mov push mov clc xor hlt and hlt mov cltd sbb ss lahf rclb pop pop push cmpsl cmp mov stc xchg inc icebp sbb and push pop inc (bad) adc hlt test (bad) mov inc mov jo inc sbb ja adc adc sub sahf or add xchg jbe rcrl pop mov xlat or aas sahf orl rorb pusha in clc (bad) jmp movsb int3 push mov add lds outsb mov roll (bad) sbb add push and add or sti je fadds mov inc hlt out xchg adc pop push cmpb jne movl jo add push lea or xchg xchg fbld test jb jecxz insl or push in jge cmp ljmp jmp popf or ljmp jle inc cmpsb cwtl test jo inc push xor out out repnz add cmp push shll jmp pavgb js jb popa pop dec sub xor xlat in lea aaa ss mov mov mov je or jne cmpsb add add adc movsb fisttp sti pop add sub adc ljmp ret jne xor adc (bad) dec jp sbb mov ret dec mov test lods dec jp push ret sbb mov xchg pop cmp push iret in ret or test mov jg int cltd jmp jmp push ret mov jne xor xchg inc cmpb jne push or in add enter jns add add lods pop mov (bad) or push rorb mov iret push nop sbb sahf addb push pop mov into or sub incl sbb dec push jecxz inc xchg adc dec add (bad) call cmp aad or jae pop jmp insb or ja mov repnz jns jo mov mov lahf xor pop mov pop addb std sti dec jne mov xor xchg fisub cmp xchg subb in pop jbe or or or or or or or push fadd test incb or or jl cmpsl jge and push jae int pushf cmp out (bad) popf or out mov mov hlt fneni(8087 push (bad) mov or add sub test xchg and mov mov pusha out xchg and fcompl fmuls jns hlt dec dec pop pop cmc xor lock jo inc sub out dec or int pop push mov mov je add jmp out aad loop (bad) push mov les (bad) push mov pop bnd mov les and sbb pop mov cld xor mov jbe jl or dec jg je mov add (bad) sbb pop or je or je jmp cmpb pop jmp pop mov movsb jnp ss mov mov fs sbb add adc loope add lods mov ljmp outsb dec push data16 insl or aam call sbb jle cmpsb out sbb inc fcoml fcomip insb mov inc pop inc call push out add in cmpsb and jns add in ret mov inc test ljmp jg cmp subl (bad) daa xor xchg imul add out stos dec ja jns adc xchg cwtl inc jmp and add int3 pop stos push xor or lods in fwait sti out or test or adc out adc mov out into jge js loopne sbb popf add and and push imul xchg je inc xchg jmp pop aad popa sbb push test fucomi add pop mov or aam jae inc icebp insb sub mov or adc jnp shll mov (bad) push loope stos lea dec fcomp push mov mov fbld inc dec das push dec xchg or mov ja adc and inc jo shrd jo mov test sbb mov or mov jbe sbb lea mov mov push fistp xchg xchg js (bad) (bad) mov (bad) adc pop pop cmp imul aaa adc add je sub pop dec (bad) push sbb cltd call das xor jmp mov movsl mov add adcb xorl xor ret (bad) adc das lods lods hlt sub jae jnp int sbb pop pop (bad) sbb mov mov idiv mov adc call adc pop orb mov cmpl nop inc inc daa push sub or push mov mov dec mov sub inc add mov and iret and adc sub mov out (bad) stos ret jo fwait pop jl pop in ds push (bad) cmp jne incl cld pop lods adc in pop arpl scas adc (bad) jmp sub je dec je sub sub je mov adc push push es push inc mov xchg js clc jle fadd daa xchg sub pop inc add or std or adc les mov jg jl pop pop mov jg jle inc rcr mov mov loope test mov mov iret aam jb fs rcrb jl adc adc inc stos add and inc scas add movsb sub mov cmp jg mov dec incl ret cltd xor sub add xchg xchg sahf (bad) sbb jbe cli incb push adc pop and out cld ja xchg gs xchg psubusb mov loopne push jmp (bad) cmpsl and inc out add adc shrb pop xchg popf xchg mov mov push mov ds push out jp and xor xchg mov sbb or adcl (bad) fldt push popf mov cmp scas dec adc dec or mov mov xchg fcomps fisubr xor mov cmc fldt nop add add in pop in pop jmp aaa or add and mov jmp mov and in call mov jmp aaa int cmp repnz sbb jmp xchg and mov pop push movsb out xchg dec pop push jmp cmpb inc icebp call xor loop pop xor (bad) push fstps out or xlat fmull lock add insb neg incb and fs jne mov add or fldenv add jp push pop cmpb xchg mov xor cs mov mov and jmp out xchg jne cmpb frstor jne sarl add jne imul imul fsubrl fisubr pusha cmp fcomps adc test pslld dec adcl sbb into cmpsl add inc or jno inc (bad) add dec pop out sub jmp or mov lods faddl aam lds test jmp push pushf mov jb loopne mov inc loop pop lds inc push cs xor pop cmp inc add and cltd xor outsb sti push xchg lret iret je addl orl inc push enter add sbb daa mov subl enterw xor ds ret pop add mov xor rcll pop sub mov mov mov div ret out repnz xor or xor xchg into push xchg in add mov mov xchg cmp test movsl pop dec call int3 mov jno lahf jbe lret mov cltd mov xchg test fsubrp cmp cmp push les jne dec cltd fsubr fistpl aam sbb or scas fsubrl or fs sbb fisubl fstp push repz dec push push and dec daa adc push sbb mov sub jb or xchg sahf and out cwtl enter mov lea pop dec rorb xchg cmp in pop mov jmp or in loop loop aas sbb pusha or dec out addl add adc cld push lods xor movsl lcall jle add mov rorl dec push add mov xlat dec cmp push sar test inc clc sbb push mov mov rorl inc inc dec push fwait pusha pop xor inc (bad) mov in lock cmp movl lret or shr cmp xchg and pop add pusha scas xchg push in or add xor in ss out dec call adc and call adc sarl xlat lds xor lock push jl je xchg cmp js add xor pushf into or movsl mov xchg pusha inc jbe lods xchg sub mov dec push (bad) jnp mov cmp mov pop insl std push add in fxsave fist rcrl cmpsl mov pop mov aam fiaddl lods or jbe orl add cmp add fildll dec cli inc mov mov inc clc pop cmp hlt push push add loope scas mov adc fmul xor aaa push fs jne scas pop repnz dec pop mov or dec clc test (bad) inc add dec adc or repz xor xor ret jg inc je sub je scas ret pop arpl add sbbl jle lahf mov push sbb jo lea test sub pop arpl add jg mov scas je mov mov (bad) xor jmp mov jmp iret adc ret add push mov sbb jmp and xor jmp in mov leave in jle pop push stc scas in cltd orb cmpb cmp add add sub fmull mov cmp fisubr pop pop ds pop sub or jbe inc xchg (bad) mov sbb rclb mov sbb test dec cmp and add xor mov dec fsubr or popf gs sti ja ds mov xor jo rolb repz insl xchg mov mov mov push sub int3 fsubs addr16 (bad) nop lock jae and add cs ss pop loopne pop sarb push push inc add inc sbb test push fmuls popf insl adc nop pop sbb lods or jae pop and mov xor std mov add les mov stc push lea cmp jns mov data16 cs inc cmpsl loop or cmp pop mov or cmp pop mov sub and mov cwtl fwait or inc out mov inc push or dec push add jle xor inc sbb fstps jg adc add lds jmp push pop jg push inc push sysexit push ja sub lea fldenv test pop pusha imul andb test jmp mov inc or les mov inc sub mov or push add inc and scas adc test leave mov pop mov clc ret and and incb mull hlt ret dec mov or add insl es add mov lahf xor cld ja aad xchg add cmp jg cmp sbb sbb inc les fwait mov pop insl cmp xchg (bad) and (bad) or incb jo pop pop mov decl push loope js mov push adc cmpsl cli push sar lret adc ljmp add jmp push cwtl adc out andl inc or (bad) or pop push data16 movsb mov cmp sub cld push nop sub mov jbe test or lds lock add out cmp aad pusha push in or jne or jge clc push in js in xchg push loopne les xor in sbb inc dec pop xor mov xchg adc add jns xchg dec jl xor push add sbb js movsl loopne into jo jbe and mov add repnz xchg xchg pop push push cmp je jmp xchg lret leave rdpmc je jmp xor lahf lret jmp and add mov add lcall or or mov push push mov mov cmpsb and mov add or nop lret pushf outsb adc mov mov xor mov fldenv cld movaps dec inc xor bound jecxz jg inc or arpl shll fisttpl js pmulhuw push sub mov or scas sti loopne lea jno or pop mov and mov icebp jl jnp jae or enter cs mov xor add cld jo pusha ja,pt pop outsb in sub addl cwtl enter mov mov lcall sbb (bad) int3 or mov test dec inc add and gs mov ret mov std sub mov jae jae mov mov cmp mov outsb push jmp sbb hlt add mov push outsl sbb scas shl adc adc xor push jp sbb lea loopne cs push insb pop daa inc dec outsb mov and (bad) mov add aam mov fdivrs mov lods pop mov clc sahf fbld loopne mov mov jnp inc sbb add jle addr16 fidivr movb adc push add xchg lods pop inc cwtl inc or cwtl adc inc aaa mov sbb cmp adc loopne lock inc adc daa mov test lcall dec and in (bad) push xchg mov mov jl mov add mov hlt mov jle sbb adc adc add inc add mov fidivr add jne cmp (bad) (bad) mov fucomip clc mov mov test hlt cmp loope loope pop jne pop cmp or cltd jae jae and xchg mov xchg fdivrl mov inc pusha sahf and sbb frstor je in dec xor mov jbe imul fldt mov js pop push and (bad) mov cmpb mov adc add dec or (bad) dec jmp sti add adc aas or jb mov sub and jns dec andl loopne incb add add pop pop jle cmp add outsl sub and dec aaa insb movsl sbb stos xor cmp daa (bad) fstps xorb ja test or inc call decl inc pop jg mov scas das and inc sub push add and sti adc sbb hlt inc inc inc jge sarb popa mov and inc and add mov sub hlt jge fstpt fidivr and xchg dec push sub or mov add mov aaa fucomip (bad) (bad) cmp push inc xor rorb mov sub jmp decl add jb inc fwait movl jmp mov int jge pop mov jns push push nop sub sub xor push daa adc das pop and mov (bad) dec adc or shrb jae push fs push xor mov and push rclb push (bad) stos addr16 add add inc cmp nop daa push sub push test or aad std xchg or jmp pop push test js test mov aas testb in adc jmp stos push outsl idivb dec sub andb pop add mov sahf jge sbb imul xor jecxz jp es jo mov cmpb cmp cmp adc sub aad clc push (bad) push lods orb andb adc imul (bad) clc sub aaa pop cwtl mov add arpl pop add sub jbe fmuls jp sbb mov inc movsl insl pop into adc lock daa push mov loopne hlt (bad) xchg mov je enter adc xor adc inc inc (bad) and mov jne fidivr and stc dec rclb loopne stos and hlt ret jge mov in fsubs iret mov dec or or jge add inc jns fcomps test divb push mov sub jb inc mov jbe mov (bad) sbb lret jne fldl or iret cli xchg outsb push pop jne add mov icebp clc pop ja pop or xchg fstl push or movsl rclb dec adc pop jmp jg xor mov sbb data16 ja outsb xchg sahf mov or shrb ret pop xor dec jg add test cmp add mov mov push cmp ja mov or mov in ret mov popa mov (bad) lea inc cmp mov and bound punpckldq inc push scas movsl fmull out mov imul rorl nop fdivl out dec jne jbe stos icebp jmp push xor shlb or and pop arpl mov imul out clc movsl icebp sub jne push lock jne je (bad) cltd (bad) les pop popf je pushf or xor mov jo lcall adc mov add inc dec ficompl sti pop adc mov mov mov xchg xchg in push sbb das mov dec mov sub repz movsb add js sahf and movsl dec jb mov and fcomp mov jb cmp jle sub mov xchg in test dec inc test dec jge enter enter insb inc mulb and je xor daa sub pop repnz dec aas ret adc enter hlt mov mov cmpsb cld push adc xchg push jb jnp adc lods movsb push mov dec add aas xchg push mov adc ljmp movsb insl das fs out scas insl add fs inc mov mov jo push cwtl test daa and sub mov addr16 jnp mov int3 pop push cmp ss jo shl in in adc mov (bad) dec rorb adc pop lock in mov pusha es xchg xchg popf add push and test cmp fisttp sbb out (bad) in mov mov push int mov pop sbb lods mov sbb mov mov repz mov push adc pusha or movsl sarl pop push push jp mov in push and mov push ljmp mov test pop xor bound add inc jb gs jo dec les stos xchg lock inc and call dec ret xchg and lock mov inc out jmp add or adc or mov icebp pushl inc cmp jne mov and and test jle and pop jbe xor mov inc clc xor and mov (bad) pop fnstcw div sbb mov in xchg add ljmp ljmp fimull mov mov inc or mulb mov inc jle mov sbb sub mov jl add les fcomp add pop sbb std leave out lea roll je aas nop ret or movsb fsubrl push add (bad) push mov shrb adc inc inc call incl scas xor mov icebp pop adc sbb int test sub inc push add pushf mov cmovae std push or xor push imul (bad) jb negl mov dec test shlb in push sbb clc pop loop les add scas mov je push ljmp sub inc stc mov mov ret mov lea jae aas lods mov jmp adc ljmp add in inc mov in aam orb mov mov xchg sub lds xchg ret incl mov (bad) in inc decl cmpl std mov cmp inc shr mov cwtl or mov xchg sbb mov jo clc incl scas add cmp lcall xor jmp inc aad add fstpt mov inc lcall xlat xor sub dec or dec lahf xor test mov cmp rorl stos jmp hlt adc or xchg push lods lods adc pop xor and push or es inc cvtpi2ps add test daa push (bad) xchg movl mov cmp inc inc enter mov iret xchg and jne cmp fcmovne movsb (bad) lret js in (bad) aad arpl ss aaa push int rclb and cmc call sbbb inc pushf arpl repz je outsl imul js outsb pop je lret int add cld jb dec xor pop jo (bad) in push sub push xchg jns idivb je dec aam int3 sahf repnz jl push mov cmp repz add or add pushf or sahf clc test fdivrs cmp cmp cs outsl push pop cmpsl xor out adc pusha jg push ds mov push pop xorl imul jne pop ds loopne sbb int3 jle sahf xchg aaa adc dec adc push xor or inc in mov push adc cld jno dec fsubrp cmp xor cs lock xchg ja nop xlat in push sub leave jae dec in add mov repnz iret fcompl aam daa iret leave mov js fmulp cmp push loopne mov cmp mov ljmp (bad) mov fcoml test dec fmulp jae lods mov daa out out (bad) cwtl inc in xchg push andb leave cmp mov leave cmp push fs and push xlat lods rcl rcrl nop jb dec add ds mov test mov and les dec in mov jno xor lret add in or in cmp mov jl xchg cmpsl jge orb or and fcoms (bad) xor and and xchg inc push jb aam shl adc xor ja outsl sbb mov jmp (bad) (bad) movd subl int sub mov push cmp mov call push stos push mov rcrb and js hlt lea in call aaa cmpl add cs dec das sti pop faddp dec pop ret dec rclb cwtl mov sbb push ror or (bad) mov xor (bad) and mov fwait cmp decb cs pop sarl xchg xlat jb cld xor and xor shl leave adcl pop push aam push jb jb cmp jecxz aad rcrb clc clc lea jmp ljmp cmpb cmc sbb pushf xchg push push (bad) mov pop cmp clc mov and imul adc sub sbb mov add adc jns jnp push xor mov push or fistp (bad) daa nop add xchg aam (bad) loope pop and push call or mov mull jno lea jo out imul pop (bad) in fnop movsb test mov cmpsl rorl mov push pop scas sbb sarb add ret data16 push push ror mov mov sub sbbb mov (bad) and mov dec xor and and xor and sub xor and dec mov dec xor mov push int3 mov pop shrb aam (bad) je mov test lock pop aam dec push mov call dec aad in mov aam sub in jo dec hlt sbb sbb pop cmc pop xorl push jns mov daa dec add outsl je fs jne pop (bad) inc loopne sub dec adc outsl fs outsb dec jb pop outsl jb (bad) (bad) cld pop inc insl jo inc jb insl push je pop push and cmp mov sub (bad) jns mov pop shlb inc jae pop cmpl pop sbb dec sbb loope dec repnz xchg and clc xor sbb in ja adc and icebp mov push inc push dec fcmove cmp movsb loope or (bad) out mov rcrb bound add sti pop adc incl add iret repz adc or fdivp jnp (bad) cmp inc inc dec sub je pop or mov push adc dec dec aad push cmp nop and pop xor xchg inc andl or mov dec jecxz ja pop add mov jne sub int pop adc fild faddl (bad) adc and and mov enter in pop push cwtl and addr16 sub (bad) ds pop mull sub adc jb je nop nop sbb pop jb xchg fs pop sbbl and dec outsl and inc or out mov repnz fidivr iret insb andb inc jb sbb adc les jp insl jo movl ds mov sbb iret push and leave nop nop xchg push icebp cmp push outsb divb pop in repz hlt (bad) hlt pop sarb (bad) sbb push adc jg xchg cwtl je loopne xor inc cld ds mov mov adc xor and push rcrl cmp add in add out cmp lret cmp dec test adc or add daa call xorb jle in popf nop dec in loopne pusha cmpb add inc loope adc and xchg dec loope loope cmp push and add loope loop inc dec enter cmp test lock xchg cmp mov jg xorl and add jo std mov clc sub int3 (bad) std mov sub dec je sbb jecxz mov data16 xor lahf push nop es sarb add or pop add adc xchg out dec pop clc clc mov ficom sbb mov and lock in lock mov stc sbb js call push repnz fsubl je nop or jl jae cltd mulb add loopne fisttp movb mov enter aaa int3 or jb jecxz stos push les fcomp enter and mov jl js sarb mov mov push cmp sarb movl lret push je negb lcall adc rorl (bad) iret cmp add in jle ffreep add and fstpl xlat mov lea add mov adc roll sarl dec adc lahf ret es fldenv sarb pop push push repnz xchg mov mov add xchg jne pushf xchg lods xchg aad (bad) or mov test (bad) insl fimul xchg pop inc inc aad dec pop mov xlat test (bad) mov testb cwtl mov add or nop sub jmp mov in fild and adc lcall jmp mov and lock loopne hlt jl inc xor lea (bad) (bad) push call aas jp inc add inc (bad) mov stc lea mov xchg inc sub inc pop dec inc rorl aaa sahf jmp inc mov addr16 xor mov dec repz dec pop daa lock cmp sub in fwait or pop test mov mov in test push insl push nop pop pop sahf ret jge ret xor xchg (bad) adc or cmpsl aas jmp push jne out add xchg jbe cs leave push adc repnz div and les or jmp mov cld xor test jmp mov pop jb mov enter inc push adc pop ret aas aas dec cs or lea mov add (bad) into xorl cmp lds jmp sbb sbb loopne in enter in loopne popl mov push insl lock cwtl add mov and mov and pop inc data16 or adc in xlat fmuls rclb jb cmp push icebp pop mov inc call pop aad aam jmp push loopne in fildl xor dec ds cwtl sbb rcll inc (bad) ds lcall adc imul cmpsl dec dec rorb sbb push and dec mov and mov xchg jg lret xor inc (bad) adc xor fsubs movl out push sbb sub or pushf (bad) (bad) cmc pop out cmp je xchg dec roll jne push sbb push (bad) cmpsb imul or int3 jl jg neg cmp lods or xor pop xchg mov mov mov push add pushf add in outsl test pop (bad) pop sub jns xchg push in popf andb sti push mov mov mov and inc sbb jo cli adc cld in fstpl ss popf ss imul imul push add in pop in lock nop aad rcrb (bad) call in in jp xor std mov loopne push mov inc mov inc mov (bad) and inc lea pop orb jg fsubs call pop add mov xor cmp (bad) cltd xor mov inc jo sbb fucomp cmp ds test jo,pt sbb ficom adc xchg mov mov mov mov add adc or sbb nop xchg adc mov out loopne push push inc mov and pop daa mov adc or addb or cmp dec repz clc aas or movzwl cmp ja inc add dec mov sahf cmpsl stc cmp or sub dec repz outsl lock fidiv daa shr push or and pop test inc loop mov pushf hlt or mov and pop mov dec fimull (bad) xchg in movswl insl xor inc xorl ss sub (bad) xor add cs push daa xchg pop push inc fnop lock test and jae add sub push push xchg in sub call shr xchg dec loopne lahf nop push or call push fsubl test fnop movsbl xor inc neg aam push dec enter shlb sbb rorb sub (bad) call add enter xchg enter cltd fcompl push rclb in test sbb jg pop dec je jmp sbb add xor outsl enter xor test add inc push mov mov test mov push outsb sarl iret repz mov repnz inc add mov pop and jns xchg sbb les xchg mov xor aaa mov mov jecxz mov inc fldl mov dec xchg sbb insl cmp out rorl mov pusha xor sbb nop push aad mov jmp (bad) (bad) xor cwtl xor stos or xchg jmp add aaa nop dec mov jmp pushf mov jbe dec mov rclb mov mov push repz cmp movsb imul adc push sbb icebp mov in inc pop test add scas jo sbb repz pop mov in popa iret in repz mov rorb (bad) in xor adc data16 in ret and insl hlt loopne xor loopne aad cmc add adc mov nop xchg jne aad and out mov adc cmc cmp loopne dec ret mov mov mov xor jns lret (bad) sbb xor repz xchg scas mov movsb sahf fnsetpm(287 jnp push jp daa in or push aas pop aas and es push ljmp push ss aad xor fdivs push inc dec fadds push inc push push adc push jb cmp cmp in in test adc aaa loopne pusha inc pusha jnp aaa xlat test aaa fcomp xor bound aam aam pusha fs adc rcl imul add inc or inc jecxz insb enter pusha aaa cmp mov aaa dec jae arpl fs pop push clc outsb mov repz shr push aas cmp fcmovbe pop pop int3 pop pop cmp repnz repz mov shlb or rclb mov xor bound mov sbb pop inc ja mov mov jne ret pusha cmp aaa push es adc subb cmp cmp adc jno push rorb imul mov xor cmp cwtl jno xor outsl sahf adc mov nop xchg (bad) in popf nop ja (bad) cs jo push mov add add popa adc jmp xchg cmp test sbb data16 int3 loopne in adc test cs mov (bad) mov adc ret mov sbb pop jmp lcall push mov notl and test movl and inc pop xchg cs iret outsl and and mov or shlb xlat scas dec das push sub fstpl fwait stc xchg int3 push pop daa pop push add js mov test lret push (bad) (bad) adc xor push pop loopne add pop or fist repnz cmpl jb imul mov inc sub sbb xlat dec xor insl jo jns dec jne cltd jnp aas pop (bad) and popa inc cwtl nop (bad) ljmp roll fwait cld fcomps add inc outsl jne xchg mov jb outsb arpl and sbb xchg imul adc pop add pop fwait aas xor and push outsb imul inc arpl ss xor push xorl xchg sbb push adc aaa mov push add sub clc lock mov adc sti pop mov cli and dec ja test xlat push movsb add incb out push dec data16 inc sti pop dec mov in insb das add pushf cld lods dec cmp sbb mov cld stc mov adc jb xor dec push cmp xor lea add xchg and outsb inc mov sahf aaa adc pushf test leave mov push in or sub mov outsb pop and (bad) scas in mov lahf jecxz enter inc outsb jns xor test inc push push gs inc sub shrb add setle mov xchg in xchg xor fildl add test mov and inc fmull push or incl sub das pop fmuls xor insl or fdivp cwtl cmp inc (bad) mov jne out jb cmp and (bad) cwtl addl xor inc and adc add subb mov icebp sub jge inc lahf icebp test cmp les outsb (bad) adc lcall movsl cmc push lods inc pop pop mov lea test clc lahf shrb inc call ret movsl ja loopne inc add (bad) xor mov inc mov call and fstps adc ret xchg and jle outsl mov cs jno push dec jecxz addr16 test mov xchg les sahf push dec mov add out insb push ljmp inc jbe mov xchg mov cltd lods jle and push testl adc (bad) mov (bad) loopne push sbb cmp popf xchg rclb test enter enter pop fucomi pop pop aad inc fcompl adc pop or sbb sbb cmp and xlat cld push add jns rclb mov xchg setg inc mov add arpl call leave loope adc enter push sahf in andb decb and push pop sbb cmp leave mov cmp sbb sbb call dec pushf inc sbb cmp xorb rcrb ficompl add xchg mov cld or or sarl inc dec jne xchg and xchg aam push cmp add out cmp aad aaa ret pop js mov jne out add (bad) shll dec mov inc cmp adc arpl cld jno loopne stos xlat shlb lret sbb subl jae jne aam aam iret imul loopne adc add sbb out jbe aas mov jle ljmp adcl or jo bound cmpsl in repnz stos lods shrd in in scas nop xchg in in xchg xchg xchg xchg in in xchg xchg cwtl cltd in in lcall in lahf addb addl xchg test cmp xor cmp sub push ljmp add push add popa cmp data16 rolb adc loope jl jle push rol lcall ret pop adc xor test jne sbb mov dec jmp cs dec xor cmp jle sub xchg dec js xchg push in outsb insb insb inc adc addr16 mov jge xlat rcrl push loopne cmp mov (bad) lods sub lods add shl aam or int3 (bad) lea scas mov or aam sub fbld cwtl loope cld sbb mov dec jl or add mov sbb sbb in lret je mov and sbb lock add and jmp jle in je jl in sbb loop mov insb sbb test out jne ljmp mov mov mov cmpb je (bad) loopne ja lar decb cli adc ja jae jmp call jmp dec loopne add add dec (bad) push add add adc add ficoml movb pop pop (bad) into sti or mov mov push mov in push push adc pushl jne mov mov cmpb ja jb add add call in xchg out out mov mov sbb inc mov scas mov push fwait cmp jle push mov add cmp cmp pop dec lcall adc inc mov add testb cmp lcall adc or call xlat movsl xor inc rclb adc (bad) (bad) (bad) and lea aaa clc sub dec xor clc inc cmovl outsb sahf in inc test gs pop and sbb jmp ret xchg mov pop xchg sbb xchg or jo in or adc outsb push adc (bad) mov into hlt dec add loopne adc or ret or add or lret mov idivb cmp add lock lds arpl mov adc dec out dec in dec cmp add push (bad) dec push xchg add mov mov add mov xchg cmp add adc lods test add inc daa mov movb adc test faddl jnp cmp push push sbb inc aam xchg jge or dec fdivp lahf mov insl or sbb fisttpll cli movsb daa call jle mov add pushw or cmp or and (bad) and pop lret add fwait push test ret pop jge shrl jecxz xchg out sbb aaa or out add (bad) (bad) mov and push out sub sbb clc fisttpll and cmp adcl xchg outsl xor iret push mov and mov cmp jmp pop xchg sbb sub jmp and jb insl fs sbb inc ficompl cmp call jp clc push cmp js jno pushl jge mov sbb adc inc or adc jb popa or out insl ja jbe in sbb jne movsb stc add pop adc rcrb fbld clc dec or dec add lahf in fwait sarl jbe fnstcw daa fxch inc in cmp cmp or xchg and nop or fucomip cmpsb inc fwait or insl add sbb cmpsl outsb or aas pop mov push dec outsl pop jne inc insb loop xchg pop jb iret scas movsl inc aas mov or or (bad) incl imul lret idivl mov dec gs int (bad) pop push sbb push or jg gs inc insb popa push jae or fsub jnp xchg gs xchg add cli fldl xor push inc imul gs dec sub or out ficom sbb sbb adc mov push cmp outsl imul add insb jns push scas outsb out dec out mov call push push (bad) bound or jb or mov mov cmpsl or dec imul stc sbb push or imul test or test (bad) push dec jp inc xchg (bad) cwtl gs add mov sub ja aaa out cmp or dec gs sbb jae xor insb fldenv outsb lds and inc jne icebp js or bound adcl inc jbe dec or dec rolb push gs xorl push mov ds adcl shrb adc test adc mov inc inc bound mov mov cmpsl popa sbbl mov pop mov mov pop scas fbld push daa or mov sahf pop and adc std insl cmp or nop (bad) pop mov out inc pop add inc cs inc and push inc fiadd enter xchg mov cmpsl push and out adc mov dec imul mov addl scas int3 mov push stc push add push xor ds mov adc sub mov inc sahf dec outsb mov (bad) add or nop mov sub inc mov push imul ficom dec in mov mov dec mov push jo cmp mov outsb xchg xor push add test and pop mov (bad) enter adc pop pop mov push scas ds rolb cmp fcmovb or pop mov push outsb push add lock outsb aas push or add incb mov push add and movl rorb test xor imul adc int3 movsl jbe outsb call in mov inc jmp sbb push cmpl push pop data16 xchg xchg pop or sarb in nop add inc push mov adc adc or out xor cmp stos fist dec leave jae fs jo lds xor pushf jae push rclb sahf cmpsb add scas cmp dec inc mov (bad) sbb in push rcrb add push adc cmp orl add cmp testb inc pinsrw push mov fdiv mov pop and jbe push js sbbl call inc or inc imul movsb dec aaa fmuls or pop pusha clc mov or mov sbb and pop pop sbb iret or inc push or mov adc or aaa pusha sbb or pop dec and fdivrp xor pop fs jl jbe or push inc inc dec push inc ss xor push sbb push sub out imul dec pop push or test push pop movsb push loopne jnp mov lock pop xor push inc into sbb fstl or and mov push vmread and cmp out xchg sbb sbb push push cmp push adc fbld push je push push push xchg pop cmc (bad) mov mov sbb xor sbb out xor mov pop push inc in hlt fistp sub mov dec jb push pusha scas add mov jb mov out cmp add addr16 adc (bad) adc xor xchg pop inc dec sub in xor sbb ds cltd dec push fimul jae in cmpsb idiv push imull repz inc jnp (bad) int3 imul sbb inc pop and pop dec cmp repz cmp andl adc and jb sbb add pop and outsb dec lret les cltd pop inc push sbb in xchg sbb testl stc sbb sahf out ficom dec pop dec enter sbb int in cs push pop push ljmp test sbb pop popf dec nop push clc pusha sahf in dec repz lahf mov push iret repz push fucomip add dec mov aas or adcb cmp out add cltd push adc aad inc xacquire dec sub adc mov pop pop push stos pop sub enter sbb fisubl jl lock aam jge xchg gs push push addr16 data16 push mov imul jo push and movsb cmovp xor icebp or ds pop inc mov cmp or or push and inc xchg movsl dec sarb fist aas pop call rcll stos mov dec mov mov aas cmpsb add push mov mov (bad) mov adc aam pop push cmp aam lea fwait repz repz movsl test inc add pop sbb inc (bad) int dec (bad) inc push in shlb cmpsb aaa jne add ss clc into sarb and xchg add icebp mov sbb (bad) sbb jno mov addr16 mov xchg push push jo adc jnp pop jbe push addb push sbb push cmp sti adc cld push lcall sti inc cli (bad) stc (bad) clc push push push push push push out out fwait loop push lcall and sub out sahf je dec push pop fimul cmp push cmp dec push sub sbb or mov adc mov mov decb pop add cmp or pop pop std and push popa fsubs push aad dec clc ds cmpsl stc fsubp je mov test or sahf or rclb adc jl pop jp arpl sbb cmp pop and fiaddl push push push jb mov les cmpsb nop fwait and test iret jnp in push rorb out xor add xchg pop pop push mov sub and pop cmc sbb dec dec fs push sarb jns adc sbb add dec loopne jae js push data16 push fistl push cmp push pop test and in xchg lahf dec call cmpl jne add je in dec and dec shlb cwtl es sbb jb jne (bad) xor scas push xchg and fldl jae or mov sbb pop jg (bad) punpcklbw xor push mov dec (bad) adc push sub xchg ss addl xchg addl lret mov outsl es or js add add xor add je sub push xor or insb out fwait mov and jmp sbb adc fisttpll xor and cmp rorb fild lock stc mov push rclb adc adc cmpsl adc add adc mov mov or mov (bad) stc pop jl or rclb inc rclb add inc or test arpl daa mov ja scas mov sar clc mov sbb inc dec rorb (bad) push jne and push and pop sbb push fadds pop mov or push jb or push inc or les lds fsubr mov in add sbb hlt push adc cmp nop sbb loope add xor or jne mov outsl or adc loopne mov and sbb or pushf rcl ljmp xor fisub mov pop or sub and test les fcoms outsl inc cmp icebp pusha xchg sbb cmp xchg or daa dec test or pop shlb add ror rolb bound imul push test dec imul inc and xor int3 pop add adc imul outsl jne inc xchg sbb imul clc sbb inc adc xchg adcb jmp clc push (bad) lcall or ds mov ficomp nop mov sbb ret fcmovbe cmp inc adc (bad) xor je sbb subl mov dec mov push inc dec jne pop rcrl popf inc dec sub xchg adc push mov lock jg adcl ficom sub jnp iret dec cmpb dec popf es addl dec mov pop inc dec jbe daa sub movsb sahf xor push pop into mov std addr16 inc outsl es push aam sub lea sub popa cs (bad) popa adc adc sahf mov rol jl sbb adc lods jne push rcrl xorl inc inc mov jl inc push call or push in xor xorb inc pop sbb lock jae sub cmp push xor mov (bad) jecxz (bad) (bad) push push icebp dec call add adc sbb (bad) (bad) adc pop js sbbl aaa sbb fsubl inc test pop es dec mov (bad) in int sarb add loopne mov cmp xlat rol test pop les and ja mov dec xchg mov mov scas mov xchg mov andl mov mov pop mov sbb cmp add or xor outsb lods shlb mov adc fadds push mov or pop pop jo rolb xchg sub cmp or dec pop dec sbb jae mov pop sub sbb push and mov dec mov mov imul mov jb cs hlt dec arpl cmp push or add dec inc enter xchg xchg xchg lahf mov inc sti pusha das aad movsb xlat mov or call sbb ja das mov mov out enter aad push xor sbb mov js das inc push pop out dec pop add push clc sbb ss (bad) mov cmp xor sbb (bad) cltd dec push je push xor mov insb cmp shll jbe iret fist mov add rclb jb mov das xor mov cmpb mov mov mov cmpsb dec aad cld mov scas mov xor cmp sbb pop ds loope sbb aaa les rol ss addr16 xor icebp dec add or or push push or pop and add js (bad) outsb and hlt pop xchg outsb pop loopne inc fildll insb and enter xor hlt add jne loope mov or dec mov cmp lds (bad) jo js sub outsl sbb daa test push sub lea test out dec imul adc (bad) mov in inc lret scas pop pop clc sbbl loopne add sbb or sti sbb inc jp add or sub icebp insb sub pop int3 movsl inc pusha fdivl jb push mov (bad) mov loopne jecxz pop daa inc fcmove andb je rcr xchg cmp sub lahf dec inc je pop mov enter call dec jl xorb outsl push mov jbe idiv or add test inc dec inc push inc (bad) pop pop mov xchg push jo mov xchg push (bad) sti mov xchg dec push xor mov loop sbbb sub and push (bad) sbb adc mov sub mov pusha pop add test jbe or cmp cmp push sahf mov aam add xlat arpl pop mov and insb mov pop bound lcall mov or push xor sub or leavew mov push or dec cmpl sub (bad) adc arpl insb jb inc cmpsb aaa icebp sbb sahf gs stos jecxz jle push ss cmp je pop mov jo je mov int3 push or ret test xor sub pop lods or inc gs lcall or adc mov cmpsl adc mov movsb rcl into xor sbb and loopne cmp mov test xchg ds nop imul mov jae cmp cmp push (bad) aad fsub mov jge add das xorb rcll xor lahf (bad) jae loop inc std fwait jp adc cmp incl cwtl in and or leave test xchg aaa insb push inc outsb pop cld adc das inc mov push mov adc sbb call push inc decl iret jge mov enter loop adc or movl icebp push adc mov push mov inc loope or sub aaa jmp mov das add cmp mov into test mov cmp xchg ret xor dec or int sbb mov or sbb call lods push adc jmp insb gs shll push cmp add scas add mov aad lock js sub add dec or aam scas lcall sbb leave roll pop pop stc std jle cmpsl cmp push sbb inc sbb add and add add hlt jecxz mov mov mov cmp xor ror (bad) xor push add and sbbl cltd or sub push pop shll sbb out rolb scas dec (bad) shl adc push aas call pushf and cs (bad) push jns jle add fsub lock sbb pop (bad) inc mov push bound lods and dec mov sub adc xor jg dec hlt dec dec inc test ret outsl aam rol aaa add pop inc mov rolb and cmc pop pop popf rorb add shrl cmp push js nopl out mov xor mov push inc dec jmp pop add and adc lds cltd dec hlt or cli inc jne sub jne lds adc or inc (bad) pop dec sbb inc (bad) loopne xchg movsl pop das aaa or and add fadd lds cmp xchg push orl int3 test xchg mov add pop mov subl xchg add rcr mov fild add (bad) jnp inc xor mov or and pop sar mov shl jmp dec sbb call out je sbb push jae mov sbb add mov dec shrb push popf dec gs mov fcmovnbe adc fsubs jo outsl and push pop jecxz add cmp jae dec or je add add btr push add mov sub push inc adc ja mov addl pop bt sbb sub adc (bad) jle adc stos jnp dec inc mov cld push in sub mov xor cmp fildll push jb pop ja and lcall pop cmpsl add ljmp or push inc cmp jne inc decl jne les lds push pop arpl shlb adc xchg sbb bound ret fwait cs xchg inc rorb addr16 out dec mov pop sbb test xchg (bad) jno in sbb lahf movb and movsl xchg sbb call add (bad) jmp push enter ds outsb imul enter mov sub pushf cmp pop jg ret mov rorb mov (bad) adc and mov mov jge adc in jne aas addr16 or rcrb xchg add push jmp adc popf repz shrb mov bound dec push pop jp mov adc or mov adc sbbb mov or cmp jb xchg mov push jp push push repnz inc or push cmp cmp inc pop or jg lods add and dec popl pop ja lods test in fist rcrb jl,pn mov or fwait loopne lahf cmp test lret daa jp scas pop and jbe mov mov les add sbb mov icebp lock or push or jno enter sub lcall add or or inc jno loope mov inc ret inc ret xchg and mov mov mov push mov adc pop lcall inc jo fimull (bad) pop js pop (bad) hlt add lds sbb mov test addl push pop pusha sbb or add outsl add rcll movsb and lahf lea pop lret xchg icebp dec sbb jb push push and adc lahf jbe fcompl jl testl (bad) test es push dec sarl shrb (bad) jae in xor push popa dec in mov mov sub lret push cmp movsl xchg cmp das jmp in push in sbb pushf jne inc shll or adc into lret adc mov enter cmp adc les and (bad) iret lds stos push jb inc lret inc cmpsl xchg inc lock ss xor mov pop hlt adc test xchg enter lret stos and ljmp clc adc setno push shl mov std lock jb mov mov jne dec lret add adc add test (bad) test (bad) jb loopne daa inc ret or mov mov inc mov or xor xchg call xchg aam add roll mov (bad) push push inc lret insl dec inc popf push mov popa xor pop call je xor adc es add in push ret xchg fs mov cs sbbb loopne add and das xchg cld test mov lods xchg subl hlt mov lock loopne xor imul jl and fcoml xchg sbb cmp inc cmp add shr insl and (bad) fisubl dec adc adc adc ds in test dec scas scas les xchg or decb pop aas sub mov call test int jne xchg lcall cmp (bad) lods jecxz lea pandn mov and outsb adc sbb cmpsl out cmp insb out or pop imul and adc lock mov adc and jp and push inc subb insb xchg icebp mov pop das repnz jb clc clc add dec cmp fiaddl fsubrl sbb sbb jmp sub lea push push jmp sti test movsl pop and dec mov xlat and test cmpb sub dec clc bound scas add fs pop leave adc cmpsb ds sbb pushf rcrl mov add and mov jae jmp xchg dec mov and sbb or inc popa jl pop add repnz into faddp jbe lods in (bad) lods scas fwait dec jp pop sbb das push and inc add dec fild inc dec gs add mov sub dec dec (bad) jbe outsl mov loope loopne je insl adc movsb sub and xor mov fwait mov pop iret (bad) jo or cmp (bad) xor std jbe and nop dec into jae mov dec inc jmp fcoms xchg add or push insb (bad) je or lret sub mov pop int3 xchg and inc pop lcall or add int repnz dec xchg dec call dec push dec or les inc mov mov jo arpl ret enter sbb add imul testb add add cmp pop mov aas int3 mov push testb orb aam mov sbb (bad) aam lods mov add movaps or sbb xor mov adc inc or or push sub inc mov test ret cmp loope inc xchg cltd xor loope mov ss xchg sub mov (bad) sbb sbb adcb xchg cmc adc leave js or xchg mov (bad) xchg mov or (bad) call enter and sub sbb mov xchg test (bad) xchg mov inc shrl adc sub ja adc pop (bad) and test sbb clc inc stos mov (bad) outsb ja inc adc or shrl sub (bad) and and decl iret xchg negb sub sub mov xlat pop cld lock dec add or mov mov arpl nop jne cmp dec add jb jmp (bad) lock popa std adc cltd or pusha outsl outsl aas int3 cmp aas mov (bad) jmp gs rorb rol ja in out add xor test mov add addl in lcall xor dec cwtl mov outsl and mov es jno bound adc aas pusha mov add dec push sbb fadds repnz rol add decb mov mov cmpsl push scas mov inc mov push mov push xchg (bad) xlat testl or (bad) int je inc sbbb mov pop fwait push mov mov cmpsl add adc add jg insb or push notl push seto sbb push fidivr popa (bad) andb xchg xchg mov rorl cmp nop pop in and mov or cwtl jne cwtl icebp pop add inc hlt shr out test insb or and dec in dec (bad) jg into pop sub xor xchg cmp lock mov or or mov jecxz inc jge sbb jle jge les xor push nop pusha hlt jl pop inc mov add add out add jg je lret add or add loope jb inc shll insl pop sub clc lret or inc call js xchg inc push sbb add jle push jo addb dec out call (bad) push mov pop push mov mov popf add adc inc in sbb push mov ss incl pusha popa sub and insl bnd mov jno dec sub fnstcw push pop (bad) das mov js mov (bad) lock push movsb cmpl cmpl add sbbl adc mov adc les hlt (bad) aad pusha mov fs jo mov (bad) (bad) jecxz cmpsl dec and pop xor mov xlat adc xchg mov dec mov sub fwait sub out lea inc add adc xchg cmp adc orb fs or cmp cltd lret (bad) pop inc mov inc es aam or mov mov push mov pop nop arpl push dec dec aad mov sbb jo mov subb imul insb sub lahf pusha xchg xor pop xchg popl push xlat pop outsl adc sarb pop sbb jbe repz je pop int inc aam jbe and or (bad) jno ds or push add icebp mov cmpsb jbe push or cmp add push popa add call adc pop cmp add dec or jbe add in in jmp enter std mov loopne into push pop pop mov mov push mov mov aaa mov xchg cmc in xchg mov movsl mov js popa jb add pop push sub dec mov push clc cwtl cli js sbb xor out cld mov cmp lahf pop clc add sub stc sbb lods mov inc dec xor jno cmp nop popa or pop inc or pop inc ja add int cmp add dec xor sbb gs jg (bad) das loope xor mov inc xchg mov mov lods push test stc dec lods fwait adc adc xlat in nop outsb adc (bad) add lret xor inc icebp enter mov fstps pusha std cmp divb lcall (bad) icebp dec movsb cmpl xor and aaa out jb xor xor or mov or mov and cmpsb fsubr add cmp arpl xchg loopne pop jb (bad) mov or lret mov fdivrl xor rorl and add leave jno fmull movb or les jae sub mov pop cmp movsb icebp jg or or into iret jae ljmp in fildll add je dec or adc or push add sbb or outsl push dec (bad) loopne adc pop dec adc inc out push or mov inc xlat lock mov movsl scas ficom movsl xchg add cmp push dec aam rorb xor enter adc sub add pop aam idivl data16 cmp mov xor cmp adc or and cli add loopne push or cmp fidivr push push jne mov pop jmp adc mov adc lods jns or push or dec daa or dec imul xchg adc adc ds mov shll ljmp in out sti int cs add and cmp jle or lds in xlat test adc jne mov and push mov jno xchg add mov pop jecxz or push daa fwait push scas hlt enter jge enter sub in inc inc push insb xorb inc or mov and xchg push jmp and jle,pt cld or xor mov adcb lcall lock add push (bad) lds nop xorb (bad) add (bad) or sbb jg movsl (bad) or push (bad) push or mov or adc pop cmp jecxz mov nop pop daa mov sbb push dec daa mov and cmp pminsw push push jb push mov (bad) jo imul add pusha cmp into out inc pop aaa enter test inc push add and ret inc adc or cmp jmp jnp adc subl xchg sbb imul mov jne,pn mov fsubrp sub mov (bad) in mov inc mov shrb adc lods test lret jmp push inc or mull nop mov aas popa in mov dec and faddl push popa lahf or add push aaa push (bad) mov hlt dec add push cmpsl push fidiv mov dec push mov inc popa inc int3 or push daa loopne mov repnz sbb addr16 jmp mov cmc and pusha fsubr add scas pop shr inc xchg insb les cmp adc mull outsl fldt imul popa mov call or xchg (bad) and sub lahf int psubw xor and jl aam (bad) imul (bad) outsl pop jo mov mov xchg cld xchg arpl fs out add je gs movsl clc xor mov xchg mov lods sub mov sti adc popa push dec imul rcrb dec inc adc sti jp pop xchg movaps in ss mov adc xchg or shrl ret sbb push adc cli int3 clc psubq pop inc cmp jl or add movsb arpl xchg popa mov test jno push and push andw rcr mov jo mulb inc lcall sub or xor sbb ficompl mov sbb xlat fs cmp push pop pop inc out sbb sub lods fdivrs mov mov push adc les fstl pop out jo add mov sbb fisttp add imul push mov dec sub add enter xlat mov lret outsl movsl lods rcl loopne sbbl cmpsb dec mov mov sub dec mov sbb push pop sbb add cs cld mov mov push adc cbtw lock mov inc and add das pop and je cmp jle adc pushf dec movsb divl ret mov loopne jo pop or lds out add adc push stos cs fidivl icebp cmpsl cwtl mov adc mov ret mov mov pusha test adc push cmc out ds loop cmp adc push dec jo push xchg mov js adc sub mov addr16 mov and pop test fisttpll and sti xorl cmp loopne pop xor push (bad) pop add sbb adcb and mov dec adc push pop jo or std or cld push inc lret call dec pop jecxz xor cmpsl push aam subl (bad) lret imul add arpl les adc sbb insb les jmp xor mov lahf add mov push push sub jne push mov jne add out pop enter rcll pop in add inc test stc dec hlt imul addl imul ja fnstenv div pop or or in lea dec sbb clc arpl and xor divb movsl rolb xor das loope xor xor cmp fsubs xchg daa xchg pushf mov sbb imul sbb repnz movsb cmp adc hlt popa test sub push xlat mov dec jne and ja and fcmovnu fbld icebp (bad) jp ret call mov mov movswl ja xchg icebp iret or rolb jo push xchg pop fidivrl jnp inc cmp xor loopne nop int3 add daa mov sub push out inc je popa mov lret dec ja pop or xor dec aad (bad) mov inc add sub ret mov nop push jecxz or out mov aas push lret mov enter jmp add ja mov jg sbb fsts mov sub fsts lret adc insl xchg insb cmp lret test (bad) pop xor bound (bad) jge mov sub dec xchg sbb xchg adc inc adc and xor and or bound iretw imul cltd dec jle enter push mov or push outsl test adc pop cmp or (bad) jbe lods test adc pop add gs cmp (bad) out data16 jmp push insl divb lods and fwait inc insb leave addl and js and pop popf les adc pop lret and and adc sbb das mov sahf cmp inc in inc mov inc push push push sbb dec insl dec inc insl cmc sbb imul sub adc inc sbb std iret add add add jg fld jge push mov (bad) int3 out sbb or fs xor fwait mov and aaa int3 ret sbb pop dec xchg out or aam leave lock add sub jmp clc pop dec ja dec jecxz or push mov mov gs pop push popf js mov jae sub push inc pcmpgtd cltd int and repnz scas ret cltd xor shll inc dec in sub jnp jl lock int xchg jo imul adc mov xchg in dec add popa pop jno cld jl or in imul add (bad) test dec sub lret sbb jmp push or imul ss push jae in addr16 shll xchg outsl adc push sub mov sar lea sub mov dec aam adc or pmaxub in dec inc adc xchg pop push enter sub pushf pop mov adc xor adc cmovne xor inc and dec dec daa fcoms cmp sbbl mov inc fiaddl bound mov xlat cmp sub fcoml sbb fmul mov (bad) add movl fstpl sbb mov or in hlt ljmp jg jmp pop push mov push mov in xchg inc aas and jne pusha pop jle pop sbb adc add jbe sbb add addr16 adc fwait push jno in cwtl mov pop adc jnp inc pusha sbb push je fistp loope push push stc adc fsubl xor insb pop aaa rcrb pop xchg arpl cmp push (bad) and ja popa nop aaa int (bad) jo pop pop rcr sub push pushf pop jecxz and dec dec test fsubr sub adc pop fst call add aad or dec xchg push inc add xor inc push arpl addps (bad) in push or idivb inc xlat pop out or (bad) or sbb sbb in test sbb adc pusha push outsl ret add adc sub jae scas sbb cld imul mov or pusha pop inc in add js clc adc clc sub inc xchg xchg xchg in push mov push movsb add xor pop cmp shrl pusha push or fildll sub or dec js dec pop xor nop xchg (bad) repz add add sbb xchg xchg flds or adc jb or int3 dec add je popf push push sbb sub inc xor sbb (bad) fstpl fldl mov lahf cmpb out jne sub or and sahf out pop adc mov inc push js xchg push dec fidivr incb lcall je mov sub inc cmp nop out notl in les pop ljmp popa adc iret xchg sub es adc push ss (bad) addr16 jo movsbl rcrb dec xor mov out push adc inc adc dec mov cmp ret les cltd es pop xchg fwait out cmp push lods fnstcw aas mov mov and cmp sbb push adcl push mov jno xchg fldl2e mov ja cs sbb aam jno adc dec add das call jne sbb arpl daa adc xchg inc (bad) fsub mov fisubr in adc inc leave cwtl test mov cmpsl sbb sbb push stos lock das pop (bad) dec aad cmp (bad) in lret mov and fcomi push pop imul cltd jns inc sub hlt inc xor lret cmp sub std xchg push (bad) popa or push inc cli cmpb xor test mov adc imul cld idivb mov xchg std pop xchg les bndstx mov lock pushf add add lock fwait addr16 fsubrs sbb loop inc (bad) push add imul add mov mov scas lock mov add int sbb sbb loopne or popw rcl add dec xor ds out js push fcmovnbe and inc enter jns es test clc lret and sbb call rorb imul stos inc dec insb andl mov dec loopne hlt (bad) jns cwtl pop jle xor push and fildl xchg jp pop pop jnp ret add xor jae add jp xlat test adc pop data16 or jne sbb xorl mov gs jge inc enter xor adc sub xchg jnp mov mov mov adc jle movb inc daa add sub clc jnp std dec imul jne mov mov add in sub arpl insb push mov int3 ds repz adc push jge jnp testl pop pop push mov into inc mov inc sbb ljmp pop xor enterw pop inc or aaa cmpsb in mov loopne ret cmp mov adc movsl dec les imul clc fdivl bound arpl sub mov in cli sub (bad) inc sarb xchg sbb fisubr xor cs pushf inc push sbb imulb inc push pop or fwait xchg movsl cld cmp jo (bad) gs adc cmp addr16 inc pmuludq loop aaa sub pop jnp jnp push fistpll (bad) mov popa jno push push aas je xchg jg push pop adc or xchg faddl push mov es jno out ret xchg and jge mov jne into cwtl (bad) insl mov clc int3 sbb cmc jecxz jb call mov and cmpsb imul add fcoms or sbb lds fwait cmp sub stc sbbl mov xchg pop or popa xor lods cld sub mov add push sub add mov pop mov fsubr call mov sbb lret test daa jmp sub imul add outsb add sbb lods mov xchg push sbb add je pop imul out and or call xor adc (bad) aas xchg scas mov jmp xchg jge lods adc or mov lds xor xor das xchg daa pushf movsb into (bad) and or dec cmp xchg and pusha xor sbb or aam push fistp sub imul loopne jecxz push fcoms lock shrl jb inc cld mov jmp insl daa pop or push cmp or add andl sarb test mov push rclb inc or aaa test xor mov aam clc fwait inc or loope std inc sbb int mov ret jmp push lock movsl clc mov fnsave or loope js mov add (bad) data16 ret daa push or fwait sbb frstor ss pusha enter adc rcl add test ret jmp sbb push enter je push adc mov cld sbb cld es sbb xchg sbb and cmp cld sbb push rorb cmp rcr jae push push pop or int3 out sub add repz movb push rcrl inc pop xor aaa mov cmpl push dec xchg cmp mov (bad) cltd adc dec pushf jb mov xchg call ja mov mov in add test in test lods lock aas test addl ret cld mov (bad) insl add adc mov inc mov mov das and scas rol xor cmp mov or jbe repz pop test fs stos pop xchg ds dec das xchg dec jns out mov xchg push cmpsb mov jge ds in push cli add iret repz cmp fneni(8087 (bad) repz inc pop pop pop xchg mov cmp int3 (bad) adc jne sbb shrl xchg jmp pop in pop imul jmp mov test sub mov cmp popa mov xchg cmp xchg sub pop das roll in xor xchg mov ja hlt mov orl sub dec push lcall mov imul xor jmp shr push mov add les sbb dec inc mov or jb push aad jae popf repnz adc or imul push mov sub call rclb clc cmp jge (bad) aam (bad) push push int3 jg push mov sub jle push (bad) dec push jnp pop dec lret rorb test pop (bad) clc jle inc push clc inc push fmul cmp inc jmp or sbb in or xchg (bad) (bad) movsl mov jo pop fcomp push mov pop cmpsb sbb cmp dec xchg inc sbb inc and lret push add or push orb sarl jmp ret cltd mov arpl jle sahf xor jl jle cmp pop dec shrb push sub fistl andb xor in call es popa loope (bad) mov mov or push xchg pop mov xchg cli inc jle or cmp flds loope mov mov jo inc les inc mov rcll in push inc enter mov dec jp xor lock int adc lret mov inc out jg mov adc mov push xchg hlt adc add pushf inc push mov dec call adc mov lcall add (bad) inc pop sub aas xorl mov xlat xchg cli lea cmp pusha mov negl mov dec xchg push mov mov mov fistp push lea jle xchg repz adc sub cmp daa es stos jne je cs dec ss lret js rcl movsbl or ljmp pop cs arpl jmp daa fs pusha sbb nop push mov lock and inc clc xor std (bad) sbb nop jmp mov cmpsl mov pop sub inc push fist jp lods sub mov sub and cmp pop and dec sbb cmp pop pop orb fwait out (bad) (bad) dec or dec jmp ret push sbb sub push int3 inc fsubrl inc adc mov bound mov lock mov adc inc sbb or mov data16 mov xor pop dec add ret mov (bad) out add iret jle jl or sbb stos icebp xchg push cmp jle or sub cmpl fnstsw lret mov push dec fistl add add in add rclb js ja (bad) iret or das xlat nop insb sarb mov xchg push inc push dec fnsave add (bad) and add aaa or (bad) jp pop gs daa loope adc stc in dec outsl lcall ret and fcompl sarl test push push nop ja push mov sbb cmpl mov jg inc dec mov mov ds push push pop clc in pusha and movb mov adc pop xchg cmp je sbb aaa cld dec test test pop dec in call cmc sbbb daa and andb push dec push xchg or jae js or dec pop dec out je xchg lods leave ret cmpsb jno mov cmpsb mov cmpsl outsb inc pop dec sbb dec test mov test fstpl (bad) mov or cmp in mov mov sub jl sbb add outsl gs clc (bad) sub ja add or xchg test icebp jnp or mov and cmp clc in or add inc icebp iret mov xor mov mov sub dec pop add or mov and mov inc push mov mov out jecxz inc adc outsl pop mov mov movsb inc test mov cwtl xor mov push or flds in aas jnp xor inc add ss jb add adc fisttp adc cld xchg and (bad) sti (bad) in orl pusha pop (bad) mov jp addr16 movzwl xchg sub xor scas push sbb cmp repz in push lock fistpll loopne sub or pop adc repnz cmc loop lret lock and icebp jl outsb jge jnp in testb incb mov and movsl mov xchg dec cwtl sbb fcomip bound adc push andl jmp pop cmp fnop aam add mov inc gs adc enter jmp js xchg jne mov subl jle mov orl and les inc push adc into les pop xchg inc adc sbb adc aaa mov pop adc xor cltd scas or cwtl js,pn sahf or int push fcoms sbbb dec xlat and pusha fcoml dec and cmp jl test jge das add cwtl and ret imul or fisttp fisubr setne mov in cmpsb (bad) inc push jo incb adc inc add adc push push clc movsl push cmpsl mov inc and xchg cmc imul cmpsl add out fist fild push sub pop popa arpl je inc inc cs notl arpl incb xchg push dec pop bound push lret nopl adc inc jmp push sti dec jne cmp std mov lds daa call cs or jp flds dec loopne dec ret cli sbb mov push add sub nop inc xchg mov mov (bad) xchg es pop dec jnp (bad) ret aas lds cmpl imull push push sub xor sbb pushf inc aad imul loopne arpl inc dec jne in mov add ret push mov clc fsubrs dec push addb xor test mov das push sbb jmp sbb dec aad popa clc fbld jbe loope mov (bad) daa adc add add popl cmp out sbb pop cmpsl inc cmp pop sbb sbb mov push xor jp push sahf jge mov dec or (bad) jg push dec cmp mov xlat xor imul xlat clc inc pop mov lcall andb es icebp sbb clc scas push sbb sbb and push cmp push loop outsl sbbl test or add sub inc or aam icebp xlat jmp inc or add cmp movsb adc xlat push pop sbb fiaddl ret mov sbb test add or and and mov sti (bad) xchg jge jne es mov sub sbb outsl add scas pop adc or inc and jle pushf xor mov or mov scas aas or push and sbb and add push pop mov mov shlb sub and push (bad) mov push jle xchg rcrl jg cmp je int iret pop pop js or mov add or add add add push add mov andb ljmp jmp xor sarb and sbb pop out inc push inc andl aas cmpsl mov dec jns test add addr16 xor cmp arpl push ror pop push sub xor (bad) push arpl repnz and adc das test cmp fnstsw addl cmp fwait mov xor sbb xlat sub cwtl andl inc push stc and pusha bound mov loop or sub dec mov xlat (bad) fmulp sbb call call in or and push cmovbe sub xor jmp pop (bad) pushl sub or mov mov inc jle fldenv add push adc dec adc iret enter daa (bad) fistp lea add or jo adc push jge add sbb imul jns (bad) or and iret inc sahf or and adc add add test movsl imul sub fdivr add add inc lret xchg inc test mov sbb addl xchg (bad) adc or mov lahf pop xlat jp adc hlt sbb cmp jne xor sub cmpsb mov lds lods aas iret add inc cli movl mov push mov jmp movsb mov lea lret or xchg hlt sbb faddp pop or (bad) add shld std mov dec nop mov fsubl adc fstl mov lret fmuls sbb mov fwait xchg adc xor mov scas xchg sbb inc inc lock call fdivrs test cmp addl lods pop pop pusha sub pop loopne sbb and xor mov (bad) jo dec mov sbb cmp cmp in xor cld ja sbb mov (bad) rorb sbb rorl call dec movsb in mov push shrb push ds add cmp or insl loope sbb aas out jne rclb or sbb jbe mov jp xor pop fistpl jmp add inc add inc sub add jmp sbb in or pop mov add (bad) dec cld ss or sbb jecxz repnz nop fisub mov adc pusha arpl jo jo bound leave mov pop jg jnp cmpsl cmp dec scas xor inc stos and mov aaa sbb call xchg pop add sub ret aaa mov and insb push rorl sub (bad) pop dec call cmp push sub xchg push pop pop push push mov sub (bad) push xchg pushf mov pop or add add and or and fisttpl je fisttpl shr mov pop jo or xchg or or adc sub mov push jp mov xor adc notl mov bound push fadds pop pusha push mov dec dec and pop pop cmc add mov loopne push (bad) mov cli add mov rcrb or mov or adc in (bad) icebp movsb push cld push test and xor or sbb sbb subb pop push stc add cs push cmpl lea fcmovbe test sbb fildll orl xor xchg sbb test inc jge mov cmp xor pusha sbb adc nop ldmxcsr je mov jae cltd add pusha xchg and pop stos sti inc add sub ret pop or sbb ds mov pop adc ret sub and pop andb cmp mov daa daa daa mov daa (bad) jo jb daa daa daa jae jne daa daa daa daa ja jns daa daa daa daa jnp jge daa daa daa daa jg popa bound daa daa daa arpl daa daa daa daa addr16 daa daa imul daa daa daa outsl push push push daa daa daa daa push push push push daa daa daa daa push pop pop pop daa daa daa daa pop pop pop pop daa daa daa daa pop inc inc inc daa daa daa daa inc inc inc inc daa daa daa daa inc dec dec dec daa daa daa daa dec dec dec dec daa daa daa daa dec xor xor daa daa daa xor daa aaa cmp cmp cmp in adc test pop test mov ret push add dec popa xorl ds add mov (bad) fidivl arpl mov mov leave xor insl lea adc sbb or cmovo push sar xor data16 adc push loope xlat adc fwait fwait (bad) xchg mov fwait dec adc out jae mov inc adc cwtl push add in sbb jae je mov ja and push je insb or lock data16 enter je arpl mov xor gs or jle fisubr into jnp and cmc mov (bad) out jae xchg cs testl outsb int sbb jle push fiaddl jo outsl sbb push inc popa jae add imulb lret sbb or push inc jl (bad) pusha add jae outsb or inc stos (bad) testl sahf add xchg subb pushw push fwait idivb push je into insl dec outsl jo je push inc jns mov jnp adc adc and add sbb adc xor out in jnp adc loopne mov pop adc mov add jne pop jns rorl cmp bound loop mov add dec jl jp mov pop lods or push cli arpl inc ds inc inc xor pop inc sbb outsl jae es inc je lods mov sbb pop jo cmpsl mov test ljmp test inc jmp pop mov add push lds js call ficom insl (bad) or dec and mov cmpsl inc xchg pop or pop insl mov out xchg or iret repz and stos jl xlat dec loope rol push mov jnp and lret add jmp pop adc fcmovu push mov enter pop xor aas fs xchg fcomps (bad) cld les add jmp fadd ss aas and ja push push dec bound sbb add repz jne cmp cld scas sti xor mov pushf pusha xor push cs or enter loopne jl into scas cmp fwait cmp jp pop xor add idivl pop sbb lds adc loopne shr insl cwtl nop leave add jle test add add add mov cmp adc aas in ds and outsb lsl push inc je pop pop add (bad) scas lcall pusha dec pop adc lret mov jae mov push cmp (bad) loop xchg lsl add int3 arpl in int3 dec add rcrl int in add jb xchg mov pop enter xor fmul add rorl aad and jne js inc popa sbb pop sbb push movsl push sbb add mov and pop aas push int3 push ja bound xor ficoml sar shrb pop push xor into popl in gs fcoml push xchg les in add ret sbb dec push movsb mov int3 divl add push ljmp (bad) adc mov sahf rorb fstpl testl mov sbb sub inc cmp clc clc jmp mov fild mov out movhps in pcmpeqb mov push outsb xchg inc sbb lock pop adc or push sub dec dec add nop xchg sub mov dec fcomp fsub repz push push popa cmp int popa (bad) cmpsl outsb dec cmpsl lock xchg sbb stos loope popa add push and sub loop pop hlt hlt out mov hlt pop icebp retw push push arpl inc les sub xor je jb stos popa xor out pop and das repnz ja mov cmpsb js xor aas or subl popa fsubs popa addr16 cld mov add out loope push faddl push push in dec add je data16 ret nop pop mov stos mov sarb sub cmc pop cmc dec fucomi es push jg testb call idivb imull clc jle sti inc mov cmpsl mov cmp push hlt jg (bad) mov aam mov inc push add or sbb inc jg push pop and adc inc cmp jg push adc je and idivb jle mov aas pushf mov and cmp jg adc imul dec push jg adc pushf push jg ret popf insl push adc jg push in mov outsb mov push call jmp and xor mov push fldl movsb cmovb push push in adc (bad) push cld mov adc and cwtl addr16 sbb mov test idivl sbb lcall arpl pop loopne or mov inc xor mov push cmp push into jo sub sarl loopne xchg xchg sub je push jns in push mov xchg sub add sbb dec pop sbb push cmp and mov inc mov adc mov (bad) (bad) dec popa outsb nop and decl fimul shlb add jne or jle cmpsl mov cmc cmp and iret push push or pop fistpl test scas cmp ffreep push push movsl movzwl add cmpsl fdivrl adc mov inc mov inc cli or je pop add or jmp orb adc push pop inc aam lock inc and pop add imul sub add adc adc mov dec or jbe cmpl shll and push inc mov push push fwait mov add das repnz cmp dec (bad) lock adc inc test xchg push notl sub cmp add adc ficom in inc add sub lods in jle adc notl add push mov (bad) push cmpsl mov and mov mov dec (bad) push or into inc ds test push bnd jg pop mov clc inc shlb sbb inc fs roll mov mov enter (bad) int inc mov pop or pause loope or adc jge pop dec inc into push in add pop loopne dec mov pop cmc in or lock in mov push addr16 daa arpl mov mov insb lahf mov fmull adc sub pop cld cs pop xchg (bad) mov or int3 xor or push add shr mov test arpl in pop mov jb mov ficoml inc inc cltd gs dec insb add xchg jbe add sti insl mov xchg gs insb pop lods jge add addr16 imul xor fwait insl or addr16 outsl ja mov imul jne or inc lock arpl imul adc loopne movl push into jns add push imul xchg inc jo xor inc dec data16 mov or (bad) cltd pop dec add repz popa daa pop push nop fiaddl jo push pop imul mov push addr16 adc inc push xchg dec mov add das or jg js jg nop lods sub push lds xchg imul push add mov and or inc mov daa sqrtps rcrb jg mov adc repz adc aaa adc adc aaa pop or outsw inc adc mov jg imul pop outsb jne pop rcll bswap push das lahf dec dec mov ret cs push arpl add scas jecxz inc xor rcll lods outsl das cmp adc or push das or mov or cld cmc jg push push rol push mov or loope pop out pop and ret iret lock or test adc pop pop inc mov dec push dec pop inc dec inc push (bad) std xlat lock inc push add inc inc inc push dec push xor notl dec inc dec dec arpl sub jnp inc inc push adc inc push dec dec push mov and inc push xchg inc aas insb lods sbb popa out inc inc xor xor fcomps stc mov inc dec inc xor inc dec (bad) (bad) ja notl dec sub insl imul dec mov (bad) das int push sbb mov inc das dec pusha mov push test mov or push dec pop adc outsl incb push push push dec push inc scas dec inc dec mov cld and mov adc les add incb inc aaa insb jo imul push mov push idivb sbbb add mov mov add dec or sbbb add add enter add or pop mov lea push inc and mov dec aam jnp or dec sbb add dec (bad) push in inc ror dec (bad) or add add mov dec jne pop inc pusha xchg dec fdivs mov and movsb and out mov mov pop rcrl das adc test stos jae adc (bad) aas mov and push add xchg push xchg cmc pop ds loope adc or loopne push mov mov insb xchg inc ret das pop dec inc xchg inc mov stos je inc jmp xorl jl inc mov and mov clc mov loope inc mov sbb les sbb cmp jbe jl jo cli das cwtl jmp sbb add movsl icebp lret jae push jb test or push icebp push cmp or push push inc ret mov scas mov inc jbe cmpsb add mov add (bad) adc or adc fidiv std push push jno mov sub out aad je xchg dec mov inc or enter inc sbb mov ret jmp adc stos xor rorb lret enter or pop outsl aas inc mov adc lea incb lock mov ss mov mov in lahf sub jae jmp jo ds xorl push fcomp add push cmpsl sub lock jp jmp mov imul dec or mov pop or or mov js es jo inc pop cmpsl out out dec pop jecxz (bad) mov or es movsl dec out pop push sti mov aam mov xor xor push mov push ss xor nop inc pop or push repnz aam mov and lea push mov or inc or (bad) jbe jecxz push hlt mov push push xor les outsl xor fldenv fdivp ficoml jp test push sbb movsl in mov (bad) mov or cmp xor inc sbb mov xchg pop dec sbb sbb and xchg push jl js dec fadd inc sbb or or jb or jb daa inc leave fmull mov jo and add xchg (bad) ja and fcompl cwtl adc fmul pop lock and mov sub dec and in push test mov aas ljmp movzwl pop aaa jne nop dec xchg (bad) mov dec in mov lret jb or push mov sbb or inc (bad) mov or pop mov ret pop sbb dec push xchg or cwtl loopne (bad) adc in je imul enter loopne adc int3 sub or push adc js aas and nop push xchg int3 loopne (bad) enter out mov fisttpll inc ds cltd pop mov hlt dec and jne cwtl or xor enter xlat lock or roll mov int jnp jo das sub mov (bad) das dec pop shlb test sbb sub pop imul adc lock sbb sahf (bad) je push adc mov call jns enter ror loopne es or aas push adc mov and pop cmp nop lods mov and sti daa (bad) fildl mov mov xor or (bad) es lret test mov xchg adc mov push adc movl sub mov inc icebp fwait test or (bad) outsl xor insl sbb add lods and inc cmp adc les nop dec jge out call adc sar mov mov mov push mov sub mov sub or or fcomp pop (bad) xor push or push push xor add push inc mov xor add add or or arpl cmp inc sbb mov iret rcll xor push and mov sbb outsl or popa sub adc scas movsl mov pop adc inc adc loopne pop movsb clc push push in (bad) bound mov cltd or add sbb fsubs scas jns jge rcll fwait rclb push jo outsb or (bad) dec icebp incl sbb and inc inc push pop fwait jbe ss push mov cmpsl leave push nop loop pop sbb and xor jmp xchg and stos loop arpl pop pusha add xor popl add lea pop les mov dec sbb push insb add outsb dec out (bad) lock and jnp into cmp enter mov rcl (bad) adc jnp push inc sub lock push rcrb rol adc cmp jns adc dec xchg inc add or in in (bad) sbb adc sbb loope push inc (bad) xor bound sub int ss mov roll jecxz aas mov icebp xor aas aam mov je aaa inc push or add cmp sub inc jae pop clc sbb dec mov and mov or (bad) je mov in out shlb mov jne add fisub call push in int add aas es adc xchg mov xor add arpl (bad) and orb mov xor inc scas cmp add mov not and mov mov push test adc pop mov inc xor adc and addr16 je lds pusha in and jo mov imul xor call push ret mov xchg mov mov push adc push in adc xor leave call dec sbb mov xor xor adc pop jb orb pop fwait cmc lahf negb je xor sti mov ds push xchg stos in aas or cwtl mov adc in push push push jl mov jg xchg ret nop mov xlat push sbb jp or jg rcl arpl pushl and pusha in aaa dec jne lcall rcl dec dec sbb hlt ds push push adc lea pop dec lea into adc (bad) rolb enter sub pop add and int3 nop sbb add jge fnop lods inc fimull popa push pop adc in hlt and push push out add lods sbb add add lret hlt incl adc sbb or or fwait popf fsubrs mulb or push dec pop fsubrl inc sub adc movsl push pusha mov cmpsl pop hlt cmp sub fcomps sahf test in push mov out jle push out pop in sbb xchg inc or fimull push mov adc push fildl mov cmp pop fwait test add and sub add sub mov fst mov movsb loopne dec divl (bad) not and mov pop sar scas fcoml lods and leave or (bad) and cmp in pop sub test sub lds int3 pop sub out test push out xor push stc inc fidivrl stos or js or ret push movsb inc ret xchg (bad) push and or cmp fcmovnbe lahf jmp (bad) fdivrl inc pop xor pop hlt fistl push jge fcompp xlat inc daa mov fsubs sbb and fmull push sub dec jmp jns sbb pop cwtl dec add bound add sti enter add inc leave add lods (bad) in fucomip fs loopne movb mov movsl (bad) popl sub add (bad) rcll loopne leave push and call add ds dec cmp hlt (bad) cmp inc cmp sub decb mov push pop outsl fcmovu add mov mov or add jmp dec push faddp inc add rcrl pmulhuw cmp aas dec or push xchg xchg in mov fwait mov mov mov pop pop add sbb add jne fstpt (bad) jge adc adc adc rorb pop push sbb push inc mov dec and inc pop aam mov aam xchg or push inc movsb dec push stos inc and insb mov enter inc mov push dec jns jmp dec and (bad) mov add out fildll adc jecxz mov mov jmp aam clc movw add cli int3 xchg cld or inc stos repz push rcll jno cmp jl add jnp or hlt popa cmp (bad) rolb xor add (bad) adc xchg lea lea xor push cs dec pop ss jmp addr16 data16 adc cld lods loope rorl mov pop into mov pop cmpsl cmp leave mov cmpsl orb jl out ljmp mov adc ficom or leave in clc fiaddl pop mov lds cmp add xor pop push xor (bad) pop push push dec clc xor xor xor mov pushf orb jmp es mov fs pop cmp lret loopne mov cmp push movups movsl lods fs iret xor add adc and es jno sub pop jg push mov push push push jp pop or sub nop out jo fdivs jo inc push outsl call pop mov pop cmpsl mov inc pop outsl in shrl add sbb push push jns call leave pop sub lret and pop xchg pop push das cmp cmc test andl scas shlb (bad) jge add pop pop push and mov mov mov add movl inc push xor dec push (bad) fmull loopne inc sub out imul cmp push lods enter stos sarl movl dec sbb and in arpl insb pop cld push push inc pop repnz add adc add loope pop mov push lods xor sbb mov push pop pop daa sbb inc xor sahf add nop mov iret mov sub or pop dec movzbl sbb add cmp dec jmp jmp (bad) mov adc ror cmc (bad) cmp jg test jle cmp jl mov (bad) (bad) mov enter cmp jle nop pop add bndldx xor adc adc inc push add bound jle pusha gs add loopne sbb inc shrb push call and pop mov push sub pop fcomp cmp jno stc loop js (bad) flds movsl xchg sbb scas inc fadds into or inc arpl add sub jecxz and pusha and inc enter dec add (bad) jo push pop inc adc test iret popa imul inc js mov jg or jl push cmp mov dec jo jl (bad) popl jl mov cmpsl xchg std inc inc dec jne cmp add cmovle xor xchg xor cli lds sbb repnz push inc cli in add sub add dec mov (bad) pop aam imul dec push adc movsb nop mov ficompl int3 jbe nop out rolb pop cwtl cli mov insl mov sbb imul push sbb add xchg or mov jle andb rolb repz push ret insb jnp mov push mov (bad) mov mov mov push push mov sbb or rcll loope cmp lret repnz sarb movl push push movsb jge or add cmp sbb jge pusha shr nop hlt pop jp jmp xor cwtl mov fildll sbb push test fucomp sub aas sbb sbb mov jb ret ret push decb shr sbb sub or inc mov or ja lea (bad) or cmovs push jle add outsl sub jmp or mov jmp je sbb pop and imulw lcall cmp and xchg jbe add ss mov mov or sub pop add xchg add push les mov fdiv inc loopne push mov jne,pt aas in sub out adc mov imul add or jne and pop sub icebp roll mov hlt dec imul sbb pusha and push add nop or hlt sbb xor inc and loopne jns hlt movsb inc ds inc sbb ret insb and int pop xor jo mov mov jo push dec clc xchg out jecxz call out inc arpl ret lcall xor jg jecxz inc (bad) xchg addr16 xlat inc mov lods bound push in mov (bad) out sbb lods dec sahf lods adc or inc jmp inc jns enter jne lcall call or loopne sbbl cmp adc mov daa int hlt loopne fdivl dec dec mov imul shl jl mov push add adcl add and xchg data16 pop test inc fmuls fidivl mov mov mov sub shlb mov or push scas lods cmpsl mov mov inc outsb jle mov inc add dec hlt test sbb in in push aad or adc and in aad push hlt loopne fcoml clc call sarb int3 orl out sbb and pop movb scas adc loopne sbb icebp lods xchg jne inc aaa pop mov je jl cli push mov xor cs and or xchg adc pop nop jg jge inc xor push adc iret and (bad) fstps or ljmp ret push adc add dec shlb cmp inc inc je sub or xchg sbb test int3 mull jmp clc leave cs hlt pop hlt jmp adc rorb adc or cli popa mov pop jne cmp pushf push cmp pop add clc xor inc aaa test in gs cmp sbb clc mov lahf mov ret pop in inc repnz push jecxz imul push rcr sbb pop adc push adc les loopne fistpl popa out cmpsl pop ret push jo dec mull adc pop outsb in mov and mov shrb cmp add pop add add inc adc data16 cmp cmp adc clc clc cmp fistpl add jno jne xor rcrl in xchg xchg (bad) iret jo enter add rorl sbb adc or mov imul pop call (bad) jae bound mov push xchg or insb daa cwtl pop push fisubr push addb cwtl push xor xchg mov lods dec adc jmp stos sub adc outsb or or sbb jne pop lock or (bad) popa sbb add pop mov sbb data16 push sbb jmp xor pop outsb cli daa cmpl int and dec fldl mov ret add rcll dec xorb adc shrb push mov fnstcw cld cmpsl aas xlat cld add ficomp inc mov or lea dec xor pop push lock cmpsb and add das mov fincstp mov or in fist or mov xchg jnp es out and xchg test mov push sti in xchg lret ja push adc sbb sbb fs test jne adc inc adc popf mov xlat push push pop mov or add adc push adc and push add xor rcll pop sub pusha movsl jne xor out jbe push pop test or rolb add cmc (bad) pusha xor repnz ret adcl inc (bad) adc or adc cwtl das xlat dec pushf and insb out inc pop mov pop xor inc or jmp mov cs aaa add outsl add cs add sbb pop sbb negl and inc dec loope sub mov cltd mov hlt nop repz push push push or mov sbb xor imul xor nop outsl daa sub inc cmpsl shrl mov adc das xor add sub repz jbe lods (bad) dec and mov adcl loope ja es or lock jmp add lea adc out je (bad) fs cmp fimul stos and adc adc sbb sbb daa sahf inc adc xchg pop inc and and xchg cmp aaa fs jle lock jecxz cwtl hlt pusha jno test add push xchg push add add fdiv movb push and and popl jle cld sbb inc mov or xchg push and inc inc sub lcall call push sub sub adc push fwait lods out mov (bad) mov push clc push and or adc xchg (bad) and popa movsb negl icebp cltd imul sub loop cvttps2pi or push push popf ret aam add cwtl inc loop adc dec lea stos decl adc adcl arpl dec repz nop test push inc movl sbb pop inc dec dec pushf fcmovnu and pop pop call push imul jge cwtl jmp push push adcl fcoml sbb inc out adc push adc addr16 push sub fs dec das mov fdivr imul push sbb mov (bad) push xchg sbb sbb adc cld int fidivr ss pusha aaa add xor cli pop (bad) xor adc dec inc dec push nop or fildl cmpsl pop jg push aam std mov jmp lds push jns mov sub xchg jbe aaa jmp roll cmp jg stc rclb sub test iret adcl jl mov lret or or daa sbb pop adc (bad) mov and mov pop lret inc jmp daa adc imul ljmp inc je les adc pop sub cmp inc ja pop addr16 enter fs bound sbb add pusha or dec jne cld or ljmp scas cmpsb imul adc mov xchg mov dec (bad) mov mov les test rcrl loope (bad) int lcall push fisub sbb in loopne lret subl sar hlt dec fmuls mov aaa inc fidivl mov inc les add mov jecxz ret pop call ret repnz mov inc mov aam xchg out cld rorb (bad) fimull dec mov test jne mov pop fidivrl xchg data16 lock adc cld add sti fadd push push std cmpsl push dec movsb pop fisttpl lret sti or pop and sti sub or fdivl push int3 inc inc test je add cmp fcompl das pushf mov sti mov ss add mov pusha test mov loopne ja,pn data16 je cmpb fcomps add out mov out inc pop xchg mov inc jl cld cmp xor and aas cmp icebp push pop fs icebp inc add jno pop in and inc pop addl jg popf fistpll cli and jo je daa in mov test stos in adc ja add cltd nop or fildll dec push dec scas nop and push leave ficoml cmp jle sub push das adcl add adc movsl add sub movsl ret mov es and hlt xchg lahf jmp jp jle xor xor sub push pop imul dec cmp jp adc adc or arpl sti pop xor jbe sbb sbb and push rorb pop mov pop clc std xchg push adcb insl scas pop jo lods fisttpll (bad) call cmpb fstpl in xlat push xlat sbb orb (bad) in adc sub cmp popf xchg pop popa xor xchg adc sub aad or addl shrl adc lcall and data16 testb lret je mov or les and xchg and mov movsb xchg sub adc ljmp bnd ds in fidivr inc push sub lds pop sbb (bad) mov fadds std std ret dec xor data16 push test (bad) push aas xchg jmp mov pushf mov lock sti jnp sub add bound ss out lods adc mov ror inc xor mov or fmul data16 or js lods mov dec or lods mov nop jae orl test xchg (bad) (bad) fs int3 scas inc add adc or sbb dec imul or add jbe test add mov dec adcl sub lret fstl jo insl push xor mov inc sbb pop xor inc cmp sbb pop sub stos dec test jg add add adc cld xchg mov fs mov roll cmp cli fiaddl add or sub cmpsl add fcmovne push adc pop les mov sbb inc pop sbb cmpsb push aad jb fcomp and push adc aad pusha punpckhdq xor movsb push fmuls add sbb adc lret dec ljmp cmp inc pop shrb je andb into add sub ja push repnz or pop adc or push aaa (bad) mov pop dec adc cltd loopne int3 push fsubs cwtl or cmp pop pusha push loope aam push sbb rcll push test pop inc jecxz and test jne mov and ja or adc jno adc es sub push test insl aas in fidiv ja cmp je mov mov fnstenv mov push (bad) in adc or int xchg lock jl fidivr or popf inc lods jns or xchg dec aas mov stc ret loopne sbbl test jno and es ja lea test inc imul dec pushf lock adc rclb xlat out not add sbb cmp es or adc movl push or loopne dec pop ja lret sbb and add or lods inc xchg cmp fistpll inc lcall mov sbb and sub and inc mov add add sbb add jae movsl nop dec leave push js push push add pop jb in ss lods mov ljmp in fsubl ljmp jae test xchg push and mov jne decl dec mov xchg inc insb pop bound fist int3 add mov faddl and cwtl add nop add add and lahf or mov mov inc (bad) fmull in jns (bad) loopne xchg mov (bad) jbe lods ss fistpl stos pop sti push int3 sub sbb (bad) pushf ret push test push and adc and pop sbb lea cmpsl hlt mov cmp pusha stos aad outsl inc mov mov je lret fs sub lock cmp and or sbb push clc mov pop rcr popl mov pop daa sub loopne lds adc imul jno mov inc mov adc xorl jne sub gs ds push mov test dec jo dec dec cmp jne mov xor sub jp or mov and or inc lea pop imul rolb sbb aam fldt outsl jg outsb fcomps imul mov roll enter inc push sbb in into mov enter mov add orl and pop mov adc mov inc adc fdivrl jecxz test (bad) lock and and cmp addr16 enter repnz cmp or ret adc loopne repnz cmp jbe aaa or fsubs fcoms std xor and loopne loopne (bad) cmp dec and jo fist decl call push inc aaa sbb lods std mov or adc sub in sub loope add mov cmpsl push js enter mov xor and dec mov call mov into (bad) lock add xor pop addr16 clc xor popa sbb pop add push mov mov lahf add (bad) or (bad) les imul imul or mov mov dec fildl inc jb lods jno shlb push test out inc mov xchg push adc pop lods loopne ds inc in insb inc (bad) lock inc inc sarb jbe inc mov dec mov hlt mov shld fimul test (bad) into xlat or add or and psubsb mov (bad) push adc push rcll or cmp insb inc lods imul ss cmpb push xlat imul mov js cmp (bad) jo popa popa lcall sbb adc fcom inc mov pop shlb lds cli in push sbb mov cmpb in popl popl pop sbb aad sub dec xchg push add mov adc mov jno js adc pusha popa (bad) shlb fs icebp fdivr xchg test out inc and and xor cmp or push lcall sbb es sbb pushf sbb or call or outsl pop xor push sbb pushf and pop mov adc rcll js shrl out inc (bad) fcomp xchg clc mov inc push ss cmp xor sub or dec mov xor xchg shrb in mov xchg sbb lock cld cld or dec add loopne call sbb or hlt clc movb leave test fcomps lods or sbbl std mov or add pop jnp dec jo adc (bad) lret scas adcl aaa and in arpl adc mov loopne ret rol dec xchg jbe inc adc and xor int3 xchg ficompl xchg or into jg xor cli (bad) movzwl push dec sub scas (bad) mov cmp add cmp vpaddsb sbb cmp push fstpt orl push jno test jbe push xor push inc fdivs mov enter add xor push call push dec sbb inc sub jns sub dec inc or inc leave mov sbb pop and mov add cmp dec mov mov out mov sti cmpsb add andl ret pusha in mov adc xor or inc jmp add adc add aad out sbb pop sbb pop xchg jnp xorb push mov hlt fcmovnbe push or add inc and and insb push push ret sahf stos sub jge xor and sub jno inc xchg xchg cmp icebp jnp add clc sbb test ss iret inc add lock cwtl sub pop sub add adc pop shr movl push (bad) ss rorl popa hlt xchg mov mov push push xchg pop les jne sbb sbb pop rolb loopne in movb cmp fisttp or add mov mov pop inc pop dec add stos adc sbb cmp jecxz das aam mov and cmp jecxz pop pop sbb sbb add adc and sub loope pop movsb gs mov cltd pop fist pushf aaa adc and dec pop sbb movl mulb inc xchg loopne sub adc dec adc push ja jae add add repnz mov mov pop or cmpsl pop aaa shl adc jne imul insb int stos imul arpl ja adc xor ja xchg mov sub test jmp ja mov icebp sub xor xor dec push lods xchg add addr16 adc and jecxz push dec push sbb roll xchg dec movb push xor ljmp cmpb pop andb push jge adc adc mov cmpl dec fldl dec sub xor adc xor pushf xchg test sbb push push leave adc or sub mov mov ljmp or aad lcall adc adc movb imul rol lock xor fisttpl in pop stos adc test push push sub inc roll lock pop inc movb mov pop clc js and and es out ret lea js inc aas in cmpsl outsb push push popf loopne adc add sbb (bad) push movsl add cmp sbb shl dec test lret aas mov imul or inc mov lock popf mov add sarb pop rorb dec out pop push dec and daa dec test mov mov mov mov cwtl dec dec and ret movsb xor add xchg popa icebp or popa jmp push or rorb adc mov xchg sub data16 fild ret mov pop loopne or add cmp add jge mov mov add pop les push mov jle mov mov or push sub adc or mov sahf push call insl or or inc wrmsr scas push cmp jmp nop lahf mov inc adc sbb pop or push data16 and xorb rcrb dec add push mov cwtl push pop pop pop add (bad) jbe in (bad) aad adc insb or (bad) neg out inc test mov loop sbb add inc in or or lods or jne mov pop add std sbb into fiaddl push in adc dec lock inc add cli inc mov and sarl movzbl es xchg cwtl xor adc jbe imul push xor sub scas ficompl add mov mov in jg xor orl mov pusha sahf (bad) test push into pop dec mov lods rcrl movsl fcmovne sub aam mov iret inc jmp jbe mov and cmp lcall pop push mov push jmp mov nop adc dec push cmp popa popa cmpsl pop push sub jae push int3 movsl addl icebp sub dec mov add jge lods rolb sub sbb pusha pusha inc in cwtl insb rorb dec pop fs fadds pop sub les in cmpsb push or rcll add jbe adc adc dec and push fs cmc push test jno int pop sub sbb adc inc jae and test enter add and call out in insl push xor fnstenv or arpl or push mov dec lahf dec scas mov lds or push or cs test rcrb xor fisttpl lahf xor cmp inc stc int loop lea adc jo or add testb jmp sbb pop or scas hlt xor or xor push sbb mov cmpsl dec test nop push dec daa lods rolb xlat je cmp mov cmp sub jne or js sub sbb add sub or fadd push mov pop or jns lret push inc add ja les or or push movsb xchg loop push pop clc out jbe jo adc adc push jo sbb xchg int xchg mov aaa xchg mov dec adc pop cmp ja or enter nop lea or sar pop inc sbb lea add (bad) testl or xor jmp push sbb lcall pop jg and enter or (bad) mov ficomp push and test sbb adc fsubs xor or add mov inc cmp (bad) roll xor or adc call bound xor xlat adc lahf inc add adc adc test cwtl jecxz insb adc mov aad (bad) loopne stc jge and hlt lock add and lea mov iret jne add sar and dec sbb inc sub (bad) movb rorl push xor inc cmp cmp into clc sbb mov inc push sbb sbb jg rclb sarb push lods bound inc out xchg cmp leave sbb sbb add jnp add and adc jns adc sbb out add insb test hlt lds mov pop jb or fild jno popf dec pop insb sbb add adc leave stos jmp outsb sub loope aad inc jbe sbb push aam sub int3 push or es and dec xchg xor or fs push test adc xchg je (bad) add lcall fcomip daa insb push movsl insb in pop sub adc or sub cmpsl insl mov lock imul fadd jge jae inc arpl cmp inc bsr jb xor adc sub mov jbe adc jbe jo jl or and sbb lea in and test pop sbb clc pop or in daa and xchg push push (bad) adc add add mov push fidivl pop cmp dec jbe mov mov jb and or das jne and es mov scas sub dec add mov pop pop jmp inc push xor aas inc fidivrl testb je ss mov imul mov loope ret sbb sub push push sbb mov fimul push push jg inc les imul fcomps pop ret and arpl push push jae cld scas stos popl xlat push in add daa shlb sbb add xor add lds dec or aam adc fildl arpl rolb inc loopne or add mov mov dec push nop outsb add icebp imul mov iret sti mov arpl popf push cld jmp inc rclb mov cmp adcl les es movl cmp xchg add cmp inc add jge xchg add popf bound pop scas pop xlat sbb sub jne inc adc stos daa and in adc loop add jge roll pop sbb imulb das sub jmp mov call mov adc es js push lea movzwl adc rorb addb mov stos xor or mov push dec xchg or and adc (bad) push hlt fcmovb loopne add pop (bad) add insb sub adc push xlat push out mov leave stos pusha mov xor sub scas push les xor lock stos pop lret add inc mov inc jno test inc arpl movsb sbb (bad) dec xor cmp outsl addb ffree cmp sbb fildl aas (bad) xor and pop dec fdivrs cwtl add cmp cmp sbb mov push out (bad) xchg sub mov or negb mov imul sub (bad) fisubr add ja mov pusha push loope fcompl addr16 add push push js addr16 fmull fidivrl daa mov sub ficom add inc pop add pop and (bad) cmp push push add sbb push (bad) fstpt es sbb movsb aaa js stos stos xorb sub jne mov sub cmp jnp mov mov pushl ja insb (bad) jb (bad) outsl adcl bound add jp aas and dec adc inc xor mov test (bad) xor or or and dec push inc adc out call lods push clc mov sub lahf mov xor adc pop or push add les fsts test or pop mov inc andb and sbb out fs dec mov add lock adc push adc add mov mov xor add xor out mov imul adc mov lock push lea pop repz xor dec jg shrb shlb push dec or inc xor push mov inc cmp or loopne or xor lret mov lar push movsb adc cmc out pop push dec lds xor or xor sbb ret mov das mov or jne pop xlat lahf xchg test je popa sarl les xlat je call dec loope xchg sub ss inc xor jne push jbe das enter fsubl and fsub adc or andl mov jecxz adc and mov mov and dec js adc cs popa mov rorl cltd jge mov push cmp pushf pop sbb push or push lods jg enter enter hlt mov mov mov lock movsb sub fsub push scas out and and xchg inc sahf and outsl mov rcrb or sbb mov ret push cmp (bad) sarb (bad) leave and dec push jge inc in lcall cmp add cs ds inc mov push dec sbb (bad) lret inc xor add push ss ds mov rolb or imul leave (bad) lods iret mov leave inc mov psubw ss push push int3 add and xchg push js adcl lods jmp das adc push and add adc stos adc cwtl hlt jbe lods jae cwtl adc ret sub push lock adc inc xchg xor loopne aaa roll sbb and lock hlt dec or test jb pop iret sbb add (bad) fstl inc and leave add and mov cmpsl pushf pushf pushf fmull dec dec inc inc xchg pop mov and fs aaa cmp xor sub xchg xchg xchg xchg sbb adc xchg xchg xchg xchg or add cltd in lret divl aaa hlt pop or idivl add enter or incb cmp int3 cmpb adc sbb je push xor out iret and mov jmp add inc mov pop aas cmpl mov shlb es jle imul or lret add movb or loopne add fimul lret pop or outsl jb pop xchg scas inc negl cs or mov cld jbe pop pop push jmp and mov ljmp xor adc dec adc adc xor sbb jmp inc or pushf xchg rcrl in push jae pop jge test adc dec push add test jb inc in push cmp or and mov xchg dec add pop push sbb pop adc cmpl and (bad) fwait testb and or push popa insb aaa insl jg add push pop dec jle mov popa dec cmp lock ret sub add aam das pop sahf (bad) pop and and lcall daa jmp popf pop cmp sbb shr xorb push orb andl sbb nop sub adc adc xor shlb movsb shl pusha cmp add push fimul adc pushl dec ret mov push es pop ret daa add sbb pushf xchg jl inc or pop mov les das adc addl jge and and cmp dec in and call jne es cli push inc pusha cmpl jb shlb cld push cmp dec xor or or inc or pop (bad) pmuludq adc jle lea call pushl (bad) ds jb push sub jmp shrl mov dec dec push push dec xchg daa push roll and dec inc sub leave or iret jb inc mov es leave dec in push adc jb xor call adc jge cmpsb daa mov mov pop jne pusha add xchg push inc stos subb fsubs sub ss test inc flds inc dec mov lahf push shrb clc inc xor call mov mov pop jmp pop sbb push out pop pop and ss sub repnz je std xor jmp xor mov push push ja mov adc outsb jne loopne pop gs insb popa jns jae cmp fs cs xor andl repnz mov push mov daa or je or in stc dec cmp sbb adc push adc aas ret push push inc push cmp jns cltd pusha (bad) pushl outsb and mov scas dec outsb mov jo sbb mov stos jle aas decb mov insl outsl mov pushl mov pop rcll mov das sub cmp inc inc mov adc out stc mov push push mov adc xor cs enter fbld (bad) lret push push adc imul jnp xor test in ja xchg shrb or popa pusha and add in xlat sub or imul xor xorl xchg jg inc aad pop sbb (bad) adc int3 mov pop daa and nop mov jg dec sbbl xor or sub leave in add in nop ftst je adc inc into cmp mov dec add cmp cmp rcll push popa xor cmp repz repz mov mov mov sub mov xchg leave jae sub addb iret or add and fild es hlt cmp or and les or fsts push cmp popa imul aad ds out cmp out mov xor pop xor mov daa lea or adc inc in adc arpl rolb mov or popf testb xchg testl mov movsb sahf inc push rolb push cmpl andl adc mov jo or sbb les pop shlb adc pop arpl add inc iret aam inc ds es xchg addb fs sub or jmp fstps (bad) lock xchg or cmpsb pop (bad) adc hlt add inc hlt sbb sub rcll out pop loope push sbb mov loop movsb mov xchg adc insb repnz stc cwtl or xorl pop jg pop and nop/reserved or (bad) clc add dec out sbb xchg sub cmp lock pop jbe insb dec fdivl add sbb xor pop mov xor scas test in adc movsb pop imul or and xchg inc hlt sub jbe fidivr xchg sahf dec add js into mov jge dec jle les nop popf pop mov cli and rcrl (bad) daa and rcrl inc lock sahf popa sub adc mov aam jmp mov jne and sbb loop ja mov arpl pop cmp (bad) push xor xchg mov rolb sub dec jne mov sbb das push cli or repz inc xchg cmp je dec push xchg sbb xchg push cmp or lock lock call sbb cmp frstor das xchg jno jmp loopne fstps sbb and sahf dec sarb push lds shll loopne xor cmp inc mov xor inc lods pop addb pop mov inc xor out push or inc add rcll sbb push mov dec add (bad) xor pop insl jle loopne adc xchg mov push and push push (bad) ja fsubr into xor sarb leave mov dec pushf in sbb jno out hlt fadd cmp scas pop test aad dec gs fwait lea sbb inc js mov loopne pop inc pop jae cmp loopne and dec sbb lock and adc movsb push es sub loopne nop mov call lcall clc adc sbb aas negb inc adc jne mov into jno insl inc inc test pop cmpsb jmp in push inc xchg or ds sbb call call or mov mov lock fisttpll dec or inc xor mov sub (bad) mov and sbb inc pop pop push call push test jns dec out xor jmp inc ficompl sub stos cltd sbb inc flds clc les mov (bad) jno dec movsb shl pop dec dec pop xchg (bad) sbb js or loop aas fnstsw push add test (bad) mov mov add pop sbb dec push subb je or sbb push test jmp adc mov sbb jmp push inc leave adc add xchg lea aaa mov mov in cmp sbb adc mov lcall cmp push adc add nop or dec sub repnz aam out cmpl nop or arpl lds xchg pop outsl out push imul popa addr16 jne in pop cmp rclb dec subl out pop and push jbe das sub outsl gs mov mov sbb mov insb cmp dec pop or sbb push add arpl adc xchg cli neg sbb push insb push dec std lods fs scas push inc dec imul dec jb shrb imul movsb xor mov add xor inc and fwait (bad) push xor je mov cmp cmp inc jae add push cmp mov subb dec movsl xor cmp addl sub cld pop inc (bad) push push cmp dec add sbb arpl arpl pop (bad) mov pop mov inc push int3 inc xor push inc daa push sub pop imul ja ljmp pop inc outsb je jge xchg aad push sub test jo lods jnp fsubrs loopne jae daa jg mov mov push pop enter test pop dec or fs mov adc or mov adc push push push dec clc xchg nop mov sub pop mov cwtl push (bad) mov faddl call imul les push or push out mov push xor dec bound test jg pop xor dec dec dec add push inc insb mov pop cmpsl lds shll outsl push jo es push je push test sbb xchg lcall lock xor faddl add or dec ret ds rolb jl test xor mov push jl mov nop mov mov movsb test mov mov mov rorb fsub mov lock add add or mov and sub lcall sub clc adc fmuls pop mov out scas pop adc lock jnp pop arpl test jbe sub xor add xchg dec clc push int3 mov or fdivrl dec push push addb test sub and gs nop inc xchg and insb push push movsb xor lret mov inc sub push shrb cld mov pop gs sub test cmp xor xchg les pop lret push int3 jo add nop adc fmuls inc sub test fadds movsb xor call dec push add push push movsb xor sub cmp xchg lret dec pusha nop lret and sub push sbb jl mov gs adc test push movsb xor and pop xor xchg dec and sub sub in jge xor xchg inc pushl pop or mov push lahf addl jae xchg sbb mov (bad) test dec imul sarb push popa jb mov push fcompl aam or jbe mov addr16 xchg gs js mov scas popa add rcrl dec arpl jae push push fs mulb or jns jp adc jo inc outsl sub pop pop pop nop jbe sub add adc adc pop xchg push or or test addr16 pop mov and push (bad) sahf dec pop adc jbe pop cmpb dec outsb jnp (bad) adc out cmp in ss pop adc and (bad) in and dec and sbb (bad) lods sbb and cmpl jno inc ja and fs jg fcompl das adc outsl addr16 jne insl aaa ss in outsb das pop fs lea (bad) or mov pop dec arpl adc cmp pushf loop outsl arpl push sbb pop push xchg movntps inc pop outsl pop dec sub adc fmuls adc inc insl add mov hlt rcrb fisttpll xchg push add inc mov daa aad out inc or jbe subl cmpsb add xchg arpl test jno sbb mov pop jb mov push outsl dec add add xchg or and or dec lds and int3 push std xchg sbbb push orb pop pop leave sbbb pop insl jb add je or and xchg or xchg pusha frstor xor in cmp fidiv pop jl pushf sahf and add test mov movsb popa inc dec jl or fmuls shlb mov out adc (bad) imul decl arpl mov or (bad) inc nop roll mov push xor adc stos xor jp incl fnstcw sub add divps cmp pusha sub or iret fwait dec std je dec dec sarl loope cmpb push and lods push inc lds xor inc xor or add adc jno inc inc add xlat inc and push enter sahf pusha outsl addb inc adc adc pop test cmpl adc pop add add adc xchg sar popa sti cmp inc dec lock xor insl sub xor sub add sub inc xchg or mov imul hlt lcall popa in movb push or loopne and push out add pop pop (bad) push xlat inc mov jne inc jge lcall clc out or or and xchg arpl add add in dec cwtl je or mov cmc or inc loopne leave inc sub (bad) shlb jae mov rcll push nop cmp and sbbb rcr daa das or outsb popf lret daa push arpl arpl inc pop and pop mov dec pop les dec pop dec dec mov add fadds dec orl bound bound dec add push push add ret inc (bad) pop dec outsb inc gs movsb (bad) aaa faddp pop and xchg jmp mov adc hlt shrb mov mov es sbb jmp movb mov jo dec (bad) and clc pusha sub add stos sub and (bad) push stos mov insb addr16 push aas jno imul (bad) push mov adc arpl and adc sub nop mov add outsl push aas mov in lret daa mov out in cmp jl movsb js test int3 sub je pop jo xchg iret leave jae and (bad) ja dec sahf xor xor pusha jae inc sub pop push inc shr pushw mov sub test lock mov add dec and adc xchg mov pop clc dec sub mov popa inc in in mov mov pushf adc jne hlt xor pop lods pushf add fcoml in inc jno push mov cwtl outsl fistpll pop dec pop jbe jno sub imul mov sbb jo mov xchg sti and (bad) jo int jmp jae mov out xor ret lret in mov dec je lock (bad) lock daa sub fwait in push repnz test pop hlt in inc add fmuls int3 je xchg sbb mov cmp pop es lahf push je cli mov iret in jnp aaa cmp test les push rcrb mov push inc push pop adc or and cmpsl fnstcw movsl dec xchg out imul adc data16 insb lahf es inc ret test mov mov push out add push add xor push mov ds mov nop adc das jbe cmp or cld adc movsb jns out outsl mov and pushl push nop or test jne jg push daa mov outsl sbb jmp mov pop xor push int lds and es negl pop or loope xchg jl je or cmp test movsb popa les das and push push hlt cmp ljmp add je mov xchg insb aas add sub adc jbe inc ss (bad) adc pop or add in sub stos push dec fdivs push mov pop inc test sbb fisubl or je sbb scas mov fstl (bad) jne,pt into inc movsl or cmpsl (bad) push (bad) adc cld push stos jp pop sbbl or adc lods inc test cwtl push fwait rorb movsb mov adc repz adc (bad) xlat shlb adc adc push mov or add pushw andl addr16 sub dec sbb dec sub insb jmp loopne xchg mov stos mov bound cwtl fistp inc jae push sbb out je iret inc aas sbb push mov loopne xchg imul (bad) adc push xor fld scas fidivrl mov test mov enter push mov mov in dec sbb imul into and dec pop dec lcall mov fcoml xor cwtl xor xor scas push outsl jo xchg out pop rcrl mulb loop mov adc adc mov and in jns test movsb mov popf jge outsb or add push je iret push dec (bad) or sub lret dec and and push imul pop loope mov and mov enter cmp lahf es cmp add inc or popf or fadds push daa mov push insl push dec add lock repnz scas mov dec or pop stos enter sub fs enter imul sub scas sbbl jo mov loopne test pop cmp jns pop subb pop es add inc mov mov in pop dec adc cs push mov jb mov inc add push push mov add test jle sub adc and hlt xchg adc hlt loopne movsl outsl xor aas ret das inc or cmp sbb adc std nop pop inc sub jo (bad) fmul out or ret xchg push push pop add dec dec jecxz adc (bad) fiaddl xor push and and (bad) sbbb lret test push inc or or xchg lods mov xor push pop in pop sbb push and or addr16 imul add push outsl fisubl pop cmp dec push sbb mov ljmp bound jo inc in inc add add mov mov sbb add add inc inc sbb dec sub call jo xlat mov rorb or mov je pop pop inc arpl jmp mov xlat mov jnp loopne push (bad) sbb xchg cmp js dec sub adc xor mov mov or and push add mov jp mov cltd mov cmpsb fild mov cmp addb jae dec fwait dec data16 pushw or push mov sar int3 dec add movsb xor (bad) push (bad) cli add loopne lret add inc pop ljmp rcrl repnz adc fidivrl cmpb jne push and add lahf daa jmp fwait cmp lock pop inc nop mov pop shll push jne add test mov (bad) dec sbb xorl loop adc pop and inc and rorl adc push dec mov nop inc addr16 cmp dec xchg add xchg xlat add jne cmp mov lret pusha mov repnz pushf mov sbb sub add jne mov test mov icebp dec inc push addr16 jmp push and addr16 push and movl xchg test pop clc mov mov test shll mov insl jnp sub cld adc sar dec gs movsb rolb inc add scas mov push push (bad) xor pop popf pushf xchg (bad) fwait je loopne test (bad) out mov push jo or gs sub (bad) hlt enter sub sub add push movd test or hlt add push out push add js pop lahf add dec lock pop in (bad) sub jo sbbb outsl mov insl sbbb out stos sbb and cmp aad mov jp mov xchg test jmp cmpsb cmp shrb sub das imul jg and insl loop push dec sub jle mov lahf movb insl shl mov jmp icebp or (bad) bound (bad) cmp jle jne jp mov jge gs add setb sbb adc jle cmp (bad) ja xchg imul adcl push mov jmp out leave aam in (bad) jge dec stos (bad) mov imul or push out insb lock lock cmp je xchg test xor stos mov xchg dec mov mov pop insl mov in xchg inc roll in add xchg ret inc push shrb sub inc inc in lock xor es icebp xor mov pop (bad) fcmovne rorb push lcall cld jne adcl cmpl xor inc xchg dec pop (bad) mov movsb sub fs cld into fdivr and mov dec aaa sti or cmpsl sbb jl mov pushf faddl out and mov pushf pushf pushf pushf and pushf pushf pushf sub sub pushf pushf pushf sub pushf pushf pushf adc adc pushf pushf pushf adc pushf pushf pushf sbb sbb pushf pushf pushf sbb pushf pushf pushf add add pushf pushf pushf add pushf pushf pushf or or pushf pushf pushf or mov pop or push push sbb out ds js lock out lahf divl jp fdiv sahf out sahf shr enter jns out mov out sahf out mov out sahf nop test mov out js jo push andb jo out sahf push push jns out cmp dec sub jns out and sbb iret push pusha sahf adc (bad) js js iret repz ja ja jns out mov push loopne jns fdiv out sahf out call out sahf fdivrs jns out shlb inc sarb dec std adc das fild pop insl add mov pop pop loopne lea pusha cmp loope inc jge js outsb and dec jge pop mov cs pop mov fildll subl cmp sub inc outsb (bad) aam lret ret push in jbe push js or pop jmp xchg nop movl add add jecxz lahf dec adc and rcl sbb cs adc daa inc dec setae cmpb xchg cmp mov mov test sbb mov cmpsl or cmp jne jecxz xor fldenv jge or push push test or or fs jle insl sub add add xchg dec imul lea sbb add inc xchg das data16 and pop push adc sahf and mov inc insl pop lods mov or loope and stos push iret incl or push orb sub lcall mov inc adc and cld push pop inc or jmp xchg loopne ss dec mov outsb inc jg push lds sbb push mov pop aam addb fsubrs inc (bad) mov sbb or cld mov (bad) and mov bound add fs lcall pop fdivs inc pusha xor movq push push mov mov adc and getsec (bad) lock pop or xorl gs test test inc xchg mov test fadd (bad) mov movsb in adcl add gs xchg fs (bad) fild mov daa add sbbl es push mov cmpsl daa mov sbb daa (bad) lret cs sub mov sub jle add lods mov mov sub add movsl pop cmp (bad) int3 mull cmp jae or mov pop dec add addl daa push mov addr16 pop jle jecxz sub dec push adc push adc adc ljmp or outsl cmp fnstcw adc sub or xchg sti bound jns xchg or push or fincstp (bad) popa test adc pop xchg or mov (bad) mov (bad) xchg sub ret (bad) outsl lcall in cs xor add xchg pop (bad) sti std add push dec jne lds test das xchg sub push xor sub scas hlt push inc mov mov mov add cwtl push mov mov mov inc je and xor lods iret jnp jns pop or cmp push pop cmp cmp push pop dec addb test jnp insb push fcoml gs addb outsl fimull mov add add push test in inc dec pop daa push jb mov out mov dec or inc mov sbb data16 mov adc movsb jbe inc xchg inc adc dec adc push mov mov push les mov lcall add sbb and adc push hlt (bad) (bad) fcos xlat call call call (bad) jmp lods ret lahf out test mov fwait iret (bad) xor sub inc stos xor mov repz sub lods ret shrb sbb jbe fsubrs add sbb mov shll and push jl adc fisubl data16 inc xor inc pop mov push jo or push push sbb enter push push je mov pop cmp call stos adc in inc movlps enter adc and and jb and mov mov xor mov dec cmp sbb ljmp add repnz (bad) xchg xlat and pop or into sbb enter mov outsb leave jl sbb or stos sbb xchg or popa enter push jae leave roll pop or push fstl mov adc imul add xor out dec sub jmp push scas and mov fnstsw rolb add ret sbb cs dec fcomp and or xchg loopne xchg aaa xor dec push sahf sbb push or es or cmpsl lock or roll dec adc mov adc inc test xor outsl pop adc loop push mov push stos fs test cmp fdivrs in orl fsubrp push xor movsb fisubrl mov mov add shrb aas cmpl push fidiv iret addl push hlt test sub sub add dec addl testb (bad) jl mov add mov push hlt or pop mov push scas pop sbb sub sub sbb addl xchg inc adc pop cmp inc pop sbb loope inc push stc jo inc pandn adc les inc ret push dec rcll mov test enter mov jnp sub push xchg xor in inc fs daa vpmaddwd fiaddl xor add mov jl sub mov or push rcrb sbb cmp add jle test mov jbe dec jg add sbb or enter jo mov nop and push rol aas ss and sbb clc movsb mov loopne outsl sbb fildll test sub dec dec mov push inc inc dec inc inc dec pop dec adc pop inc adc mov inc dec sti cld fistpl push push push push inc push push pop dec inc inc pop (bad) cmp push inc inc dec mov xchg and inc push inc paddw cmp nop cmp das inc mov pusha adc and insb ja pop or test mov fs xor or push dec aaa or or test fadd add push jo mov add and pop dec push mov lret add in jp push outsb ss dec test sub xchg adcb and les imul jno sbb xchg mov ss add mov rolb sub sbb not mov dec push xor jo dec test sbb mov lcall fildl xor mov add inc (bad) xchg popf (bad) pusha das push aaa add mov movsl notl sbb je rolb sbb sbb add mov xor mov (bad) insl xor les push fdivr subl sbb clc push movsl add enter adc iret mov out push adc mov add sub pop dec daa pop cmp cmp movsl mov cmp add add cmpl int3 insl aam loope dec dec add call and inc ja add lock lock jae mov jo dec xchg sarb pop popl stos inc cmp in add movl adc sahf movb lock push jle mov movl jge mov nop jns inc loope loopne imul xlat fdivl enter mov cmc and pop sbb dec jmp cli fisttp or mov pop add fwait clc or or mov test (bad) fnstcw mov push or test mov das cmp jne sbb adc and cmp xchg and jmp movsb fcoms test dec ret ja dec pop sti pop adcl xchg push jle sub cmp mov add div sub xchg leave adc test lret (bad) or out cmp je or add (bad) mov mov xchg dec or int3 push inc out push and sub add add int3 out pop add (bad) nop cli pop repnz (bad) or jmp (bad) dec lcall lock or je insb pop je mov pop out call jno cs and xchg (bad) sub lds mov push fnstenv pushf xlat imul adc insb pop sub scas jb cs pusha or lock (bad) jge sti in xchg andl adc cmp jl xchg enter (bad) sub dec imul scas fisttp lock dec or sub int3 cltd jmp mov lods fstl popf es pop fs nop cmp cmp imul push push push inc jno ss sbb inc xchg mov mov mov fiaddl movsb rclb pop lcall jecxz inc ja lock cmp insb or push lahf pop add xchg enter cmp out mov jne sub cmp in adc cmc aam xchg mov jmp push add rol aam or aaa dec xchg push repnz inc pop loop push push add out inc mov add pusha add push push inc jo (bad) adc inc orb fsubrl adc in adc xchg cmpsl pop add das aaa imul popa xchg stos mov bound arpl dec push xor and add cmpsl ret pop sub dec add mov or and add push adc push (bad) scas test clc sub mov xchg inc adc fadds or adc sbb adc cmpl jne cmp dec fiaddl sbb std rolb fmull fmull cmp jnp xorl inc jbe leave add in or leave gs dec lods sbb fistp push jmp mov jmp mov push mov mov pusha aas pop das adc sbb xor (bad) fnsave movsl dec pop adc mov cmp jne sahf std pop or lcall arpl adc adcl cmp push addr16 arpl inc or iret sub test jge test jge ss inc loope pop xor (bad) (bad) (bad) xor xor dec mov add mov mov dec cmp ret sbb adc iret add dec and and xchg push sbb adc cwtl aam adc clc adc adc mov sub jae cmp mov jb or jle push inc mov loop add dec adc call insl or dec data16 imul pop test and mov add pop push mov or pop and aas pop jne popl or insb js imul das sbb fist fsubr sub pop mov and aas loopne push sbb add and sub inc ljmp dec test cs inc sar sbb mov mov inc call test and rorb adc rclb outsl pushl jnp pop ret add pushf je or scas std adc xor sub jmp and aam (bad) mov and test xchg arpl pusha ret xchg or rclb sahf bound push sub sahf cmp adc test ror adc fidivr and dec mov and push jbe pop dec inc or sub cmp dec inc sbb sbb add ja fiaddl loopne or sub mov pop es inc add in adc xchg in in dec fsubl add and add xchg pop cmp sahf inc sub aas cmp les jmp sub ficompl arpl pop mov inc hlt jecxz sub jo cmp rcrb mov jno mov jge mov inc adc push adc cmp jbe daa mov mov in aaa or cwtl js xchg add int pop xchg das add movsb inc sub mov cmpb sbb adc inc add lea cmp add dec push xchg mulb out push sbb stos sub cmp or (bad) lahf mov add fwait in mov lret sbb sub scas aas pushf jo pop test push arpl icebp sbb subl test sub pop std mov pop push (bad) sbb xor aas das cld nop out fwait movsb fist pushf sbb push push jg sbb xorl js mov add mov decl xor adc mov daa mov sarb and add jle lcall rorb inc movb sarl popa sub adc adc sub or jmp adc push or ret nopl push scas out sub repz add mov mov and adc sbbl sub cltd mov mov push aas pop mov add add dec sbb jae push mov mov cmp or push inc pop adc stc ds xchg inc mov cmp enter scas jmp aaa mov adc clc mov lock sub adc xchg sbb call xor mov cmpsb imul push les scas jl dec mov (bad) or sbb popa mov xchg jmp mov (bad) add add inc scas or mov xchg mov icebp test dec loope lret (bad) push push fs mov mov xchg mov jb stc and sub or rclb (bad) into dec dec sti push pop sahf mov push insl setb fildl clc xor push rol in add jmp js xchg outsb xor or inc loop,pt insl out dec inc out adc xchg pop and adc or sub adc add cmp add rolb cmpsl out cmp cld jecxz nop sub sarb adc subb fcmovb clc insl and and push adc mov ficoml andl mov add js sahf lock adc testl jnp inc jmp and xor or pop adc js (bad) mov rcl imul rorb dec add sbb movsl mov push pusha or shrb inc add es pop or fstps or jnp das loopne xorl sbb cmp cmp decb fidivrl inc add test nop das dec and push sbb or add mov cmp mov and std jmp icebp pop mov std cwtl movsb or sub jge lock lcall mov daa inc pusha dec mov leave (bad) repz cmp punpcklwd lea out loopne std cmpl jp mov push mov pop mov outsl or xor xor (bad) adc xchg sbb pop mov movsl int add mov pop pop add dec jmp shr ret scas int3 out dec icebp fwait adc repz adc mov fwait or cltd nop pop fistl test js (bad) jae jmp cmp lahf sub cmp je outsl mov mov xchg les add sub pop sbb xchg jo xor and xchg aam mov iret enter les int3 test push sahf and arpl imul xchg fwait mov or lret adc loope xchg sbbl (bad) aaa cmp pshufw cmp mov imul (bad) or cmp mov mov aaa aas movsl (bad) (bad) fidiv je scas js or outsl sub imull (bad) sub shlb inc push mov or (bad) mov (bad) push nop jb loope adc (bad) mov xor cmpsb xchg pop jmp aas jmp mov jmp jae icebp inc mov push xchg mov aaa and push je mov fldenv cmp negb sub add cmp xchg cmp scas xacquire scas inc test pop rcll ret lock sub jle mov cmp scas cmpl xchg or js cmpb (bad) jb movl dec dec inc out xor jno mov aaa cmpxchg8b ljmp mov lret xchg daa xchg mov and test (bad) sbb pop mov sub les jg push dec popf call jne mov mov in out ja nop aam cmp test add insb push or cmp push cmp fisubl pop sub in inc adc jb rolb add and stos and sub popa jae pop mov scas popa inc fwait pushf jbe xor fldlg2 sub inc lret aaa add cwtl mov outsb aam add lea pop dec push bswap or into sti (bad) mov je sbb inc xchg pop mov addr16 dec xor inc inc sub pop pop fstpl sub push pop add aam adc cwtl pop sub aas popf and lahf xchg movsb adc push sahf js sbb loop xchg add popa bound xchg xchg and (bad) ja lods movl push (bad) or int clc adc shlb lock shlb adcl ret dec fwait std jbe adc negb push hlt orl push clc fidiv wrmsr lahf mov sbb adc je push jne das imul pop adc jmp push (bad) mov pusha jmp inc adc ret jb gs subb xor lret leave adc adc pop sbb sahf dec dec mov mov adc into pop push mov mov push mov jle add add scas inc stos mov pop (bad) inc push ret mov or push movl mov sbb lods test sarb adc pusha popa mov mov stos cmp dec xor add xor sbb popa add es (bad) sub pop add push cmpb ret es push inc orl aam ss or adc mov insb lea ja sbb mov sub cs sub aam adc mov fcomip lock movsb xor push dec sub add int3 dec or les mov and aas xor cli adc fcmovne mov negl movsl (bad) xchg in sub cmpsb jnp negb sub xchg orl nop push push pop rcrl (bad) or mov data16 xor pop call mov cld popa or and mov or jmp mov std rcr add inc sbb xchg andl xchg sub and or dec inc popf dec or fistpll loopne add nop out mov adc adc cld add stos (bad) mov loope nop xor and ss mov nop daa rcrl and add xchg sub aam fild daa subl adc scas movsb sub imulb (bad) (bad) lods insb out (bad) cmp enter dec leave mov mov cmp inc push stos push mov outsb out or sti add sub or std mov adc leave les rcrl jae inc (bad) out jg jne lret cmp cmp adc mov sub add pop xchg fimul adc sbb cs test cmp jmp je xchg xor pushf xchg imul addr16 fistl out and dec hlt fstpt inc (bad) addl add ret xchg clc pop mov and ret push enter xchg adc mov pop jae lret or sub add mov xor mov adc jp out push pop cmp and test mov and in jb xchg push mov add cld imul test xchg and xchg xchg es test out mov les loop outsl ficompl inc mov outsl or adc mov or daa dec dec sub xor mov push xor ret test mov push mov mov cmp (bad) mov push (bad) repnz loope sbb mov mov pop and sbb add daa pop sbb add pop inc mov cmp pop push adc pop cs inc push xchg push pop fs cmp fisttp (bad) dec cwtl inc fmulp xor inc adc fadds or sbb out loopne xchg xor mov push pop sbb aaa aaa imul mov adc cmp or pop repnz fadd out lods jns adc or fistpll pop pusha push ror mov les cmp iret dec inc push dec lret dec mov (bad) enter negl cmpl push xor mov ja scas add fwait dec (bad) lret cmpb lcall lods cs sbbl loop xchg inc mov add pushf mov enter mov jl or ss mov push adc loop test mov je add test push out mov (bad) sbb call or or and test adc xchg lods leave (bad) jl adc in pop mov sbb or loopne in push push mov adc outsl into push cmp mov add (bad) mov sbb dec jae cmpsl fs sbb adc mov push lea test mov daa jg loope sub insl inc and jge xor xor xor dec imul or cld movb add jnp jle arpl insb push or adc outsl out popf (bad) pop js bound pop es jbe jge jb jb popa or push neg dec es insb bound jbe es sti pop pop scas gs pop jo addr16 jb addr16 add insl lods mov inc cmpsb insb daa push sahf out mov je outsb insb fstpt loop sbb and enter pop cmp cmp cmp pop je xchg jb arpl jns xchg mull das add mov lods pop or outsl pop hlt lock xor fadd add jne adc cmpsl add mov pop test pop scas in cmp add push fstpt add mov addb add mov je inc jl daa dec cmpl cmp pushf mov inc and push orb in pop pop clc rolb push or movsl push or insb insb push outsl or into mov (bad) mov mov stos jno push out jmp push daa pop pop pop jmp jge adc ud2 or jle or push mov xchg mov hlt data16 ja leave stos lea jbe pop xchg xchg dec es or (bad) dec push in hlt orl xchg xchg mov pop test sub adc subl mov cmp les dec push es int3 add and mov adc mov nop sbb or bswap mov mov add stos lods pop xor jge add dec jb or jb jmp inc fdivl and dec adc inc pop mov into cmp jmp sbb pop xor push sub mov sbb add or xchg or rolb inc nop sbb add jp data16 and push nop pusha sbbl push jle adc adc jb or sub pop xor push aas dec jmp or mov rorl dec gs lret add push push imul and and je ret add xor push (bad) or add add jg xor push pop pop or or or or or or push movups adc repz adc iret repz sbb sbb push pop jns imul and and loopne push fsubr repz out or sbb ds repz dec pusha jno xchg movsb cmp repz (bad) xlat call stc or sbb out jo xchg mov scas mov lods inc xor es mov fmuls add in or add push push adc xchg push cs and or dec in lret or push mov push and cs sub dec sub in lret cmp movsb jb cmp inc push cs dec sbb xchg push dec sbb lret sbb jmp pop sbb xchg push ja push popa imul bound and sbb push push test xor andl xchg mov sbb mov fdivrs xor or les das mov xor or ds test fadds js sbb inc dec push repnz mov lea adc push (bad) insb je or sub incb push mov push adc push out fs pop div mov xor div sub cmpl mov mov out sub jae jl loopne mov push or mov push mov mov dec jb pop jns mov shll mov add push pusha daa out inc dec jo in jg dec pop mov (bad) mov les out in adc jno rolb out lret add mov add fiaddl pop adc sub adc (bad) pop mov insl inc mov addl sbb push into adc aam add add add and (bad) jne jl popf outsl js addr16 add mov sub xchg mov fucomip push je push insb int sbb lock pop push mov push pop leave xorb arpl nop hlt int aaa leave mov into mov mov mov and jmp movl add pop inc (bad) push sub pop add push mov mov inc inc es lahf out push clc xchg or cmp mov or nop bound lds xorl sub insb or rclb nop cmp addr16 cmp lock nop inc ret jp insb or stc nop scas pop sbb push sbb les xor daa and mov sub in lcall and xor movsb ret adc mov pop push inc sub push adc mov inc jb pop movups adc inc inc cs dec adc adc dec mov test push mov ss or xorb mov or and dec scas push fwait sbb and cmp and pop jg les or cmp sar inc rorb sahf mov push push outsb cmp mov mov mov inc outsl test roll sti push fdivs mov mov leave add push inc inc jg inc sub push inc sub addl imul test dec gs jbe add loope sbb scas adc test ss adc or dec ret adc sarl push dec lods pop lods push enter sbb inc xlat add xor and nop inc jb push rolb test fmull movsb or push add push cwtl (bad) lar pop fimul pop mov sahf negb or push sbb imul orb ja dec ljmp adc adc in and push mov pop sbb adc or addl gs cs adc and mov adc mov add mov dec loopne mov movsl sarb (bad) mov les add pop icebp adc add pusha push inc test mov and add mov scas and push dec jae push test add imul sub add fmuls cmc mov cli loope fldcw xor int ljmp mov rcl cwtl jne int3 xchg enter xor fbstp iret fist mov sbb mov mov ficompl das cwtl ficomp or hlt in pop adcl pop pop inc lods adc cmc cmovb cmp cmpsl stc fidiv addb adc push xchg jne arpl andl push push mov (bad) lock add jge xlat pushf (bad) fcomi push mov dec push add jle in andb sub push inc das inc adcl or jb mov xor jmp sbb push sbb dec aam xchg pop dec insb (bad) inc mov push pop icebp sahf xchg pop sbb sarl xor add sbb add add lret cli sbb imul lods adc dec (bad) rcrl xchg xchg pop lea popa sbb jb sbb mov leave sbb movb rclb jno and and leave and es jl pop dec movsl cmpl out mov cmpsl sub mov push jae xchg call mov xor jb subl out add pop das xor adc push pop test test inc jmp je or push out int3 pop outsb inc push inc adc or adc test or lahf jecxz lock loopne push push adc or jno and pop ja repnz sbb sbb adc sbb imul jmp lret sbb xor add aam inc mov mov ret mov popl sub fdivrs mov inc icebp and pop add dec test inc shl adc cmp sbb jo js and fdivrl sbb or lods inc test loopne sbb or cmp add aad andps or adc adc test cwtl adc add stc xchg pop adc leave adc adc xor adc jb sbb push add add hlt adcl jb pop jb inc or sbb jae sub and jecxz in adc xchg es sub sub cmpsb xchg test xor sub push das xor xor xor xor ret xor or sbb add les insl loop in pop aam out jmp or and aaa cmp scas or lret loope sub stos pusha push in sbb dec or jb or and xlat addr16 and stos add mov inc and pop add push lsl nop or add jno xchg pop and adc push pop and push inc dec inc scas dec or push sbb mov pop push adc faddl leave and adc lds test and das orb xor add xchg or xor ret xor or pop rclb push sbb add or outsb sub adc rcrb dec mov and dec fs ret or (bad) mov popa insb adc fwait add dec pop sub es or inc xor mov add dec and addr16 sbb xchg mov sub or mov cmp popa loope repz adc jns add dec mov pop nop pop addr16 fidivl cmp ja scas add hlt loopne cmpsb insl insb cmc pop out push jl pop leave dec mov add aam andb test and nop pop test cmp xchg xor push add cwtl sub fdivs fsubl call push mov inc adc mov les (bad) xor sub daa mov test sub sub pop adc mov mov fsin lds scas call or sbb in sarl lcall lcall jl push cmp xor pop xchg push iret jnp push xchg push jno imul sub xlat (bad) ja mov das loop mov fmuls insl add out xor jp and or call pop cmpsb shlb adc adc sub lds pop adc arpl aam adc push outsl jo sti or inc jnp pop outsl insb int cmp lret and or add or or push cwtl cs add frstor push mull ficomp cmp push cmp repnz in or jno push jp mov xor push push lock test or test sbb cmp sub mov add stos and movups dec mov and test cwtl add or subb adc cmp sub adc dec movsb adc xor adc jo jbe pop ja push cwtl dec popa js adc pop inc and aaa pop cmp cmp add cltd xor and loop stc push in pop sbb sbb and aas or and xchg int adc test pop adc rorl stc push arpl and and mov sbb aaa adc stos in sbb scas daa sub xchg mov in cltd dec sub and pop sbb xor xor js jb and scas sbbb lock in and pop adc adc pop dec sub mov push adc clc sub and inc fimul sbb inc push push push inc mov jge adc es cld sub pop sub inc sbb loope dec mov jo pop prefetch arpl or push test sub popa lods pop clc aas push mov (bad) cmp add inc mov shrb mov xor imul pop jnp stos or pop aaa addb in or jne orl mov add pop push clc mov insl cmp push add movsl xor out incl imul add arpl ss hlt jo pop pop push mov inc mov xor mov cmp push mov and aam rolb lcall ja test xor pop xor faddp dec outsb je jb mov mov jne push or add mov sahf lea sub push sub scas lock repnz fistp cmp or push push fcmovnbe add inc lock push mov cmp sbb pop lahf shrb mov ffreep xor jo mov mov ror sbb rclb movsb add pushf xchg inc mov sub xchg mov lea clc xchg mov push inc popf sub movsl dec fisttp push jecxz dec mov push movl or arpl jno adc or int jecxz shlb inc jmp mov xchg cwtl cwtl or inc push mov stos sti rclb and jmp das mov imul test xor jmp sub (bad) jae sub xchg add lods or sub sub pop notl clc addb jle test jbe sbb mov add outsb or push nop push nop add out popf je sbb push ret lea enter cwtl inc mov movsb mov inc xchg out rorb fmuls add pop sub add mov shr add fcoml popa dec test movsb push lods add dec xor cmp clc nop add adc xchg nop fs rcrb add xchg inc adc and pop inc lret jo xor add popf sub adc and (bad) pop pop lea adc or cmp inc fwait nop test xor dec add out es paddsb xlat addl lods test pop int into or push cmp cmc stos add adc push shll test adc enter push inc dec sbb push inc loopne pop addl adc adc and arpl test dec sbb jge cli test mov icebp jnp pop inc inc pop adc adc rcll shrb mov cmp fidiv outsl mov jp push mov daa insb or push icebp movzwl insb outsb pop fsubrl jp jmp mov or movb mov xchg test add mov sub cmp pop cmp iret xchg scas adc inc sub iret cmpsb ds shr or or movsl xor lods xchg adcb inc enter push xchg les cltd push xor inc in xor adc test sbb mov push pop xor mov add push in repnz nop inc dec loopne add or push mov or dec inc shll lock xlat and popf add insb insb ret stos xor cmp adc testb ss push movsb andl mov mov leave jo add cmpsl jo fisub dec or sbb push into mov lahf xlat inc insb inc mov and insb cmp fstpt sbb push xor cmc dec scas add syscall lahf add fcoml xchg je sbb push das jge (bad) hlt les lds push nop dec test or add rclb dec pop inc mov cmp push mov pusha pop add les fisttpll daa mov data16 cmp addl cmp inc aam jl clc pop sbb popl mov mov sub inc xchg pop js mov mov sti mov sbb add lods mov mov hlt aam or (bad) push inc inc adc mov movsl push enter add iret cmp and inc lds mov lods and (bad) fmull xchg ja inc (bad) shrd je mov test xor in jae adc das ret xlat cmp jle sbb jl (bad) sahf jns (bad) arpl negl mov jmp push rclb sub and pushf (bad) addr16 sub sbb push push js pop mov lahf push or aam dec mov jge lock stos subl int3 or or nop popf rorl outsb or fstpl and mov push xor adc sbb mov and cmpsb inc push sub loope orps mov (bad) pusha sbb xchg movups sub ret inc pop pop lods fbld and dec cmp sti mov push adc mov aas push pop pop imulb or fnstcw stc pop ss add inc mov ss hlt arpl push lock inc jno pop adc cltd in inc dec pop mov or pop and push (bad) xor push cld cmp lcall mov and inc jno sbb cmp jbe jae fwait (bad) jmp xor jns mov dec int3 (bad) mov add cmp dec cld stos adc in cld subl into adc aas mov sbb arpl mov jo insb jle ret sbb dec or add rorb inc cmpsb push or imul mov cmp cmp adc sbb sbb orb (bad) and mov andl dec cmc orl dec push push pop sbb adc inc cmc inc call testb je mov xchg push loope jmp add or ljmp mov pop inc rorb out movb test and add jmp sub add add and nop pop adc add push inc adc nop cmp add push add pop inc dec movzbl cmc dec sbbl inc out sbb andl stos adc mov in pop cmovae dec or mov adc cld push add daa push sub xor dec ficoml inc cmpsl test sub push push daa mov (bad) out aaa outsb dec popf movl push fsubrs push aam out imul mov mov mov mov pop pop add icebp lds dec test mov sar cltd lock jae add stos scas ret cmp lahf xchg test inc sbb push jge or jns cmpsl jbe add pop jecxz mov adc lahf push nop fisub dec es mov inc frstor xchg sub cmpsl test inc dec add xchg add mov or cwtl nop mov mov std lret popa jge aas testb shrl or xchg pop pop aaa cmpw sub aas sbb (bad) mov cmp adc adcb dec pop cld inc pop std pusha pop (bad) mov jae add movsb push and loopne jecxz adc inc xor out jo fldcw call nop pop push push jle sbb rolb jg je xorl add daa pop aam adc mov ficompl arpl fwait add and daa pop adc movb adc or fsubl or or mov cmp pop ret adc popl jae xor inc lods rol add cmpsl pop mov pop sub icebp sti xchg insb or jmp jecxz inc js nop loopw xor insb jbe or adc lock jge or das jne fmull mov clc test aad and pop mov add pop (bad) mov iret mov test fwait mov mov movl mov out mov repz ss or or das sub inc push test dec pop out (bad) pop shlb mov lea xchg mov lock dec add out cwtl or test cmp pop lea cmp orl movsb loopne (bad) cmp je mov push sbb xchg adc push rorb sub adc sub pop pop mov xchg cld roll sub pop test test dec pop lock iret inc push push push dec dec xlat or addr16 mov test jo jmp out rcl push inc xor jne push jo mov sbb test xor (bad) xchg dec mov sbb cmp jne xchg adc add hlt adc incl sbb and xor pop dec sbb push sbb inc test fiaddl cmp mov jmp push hlt mov jnp stc xor test testl cmpsl pop push xor popa cli dec sub sbb xor xchg mov push pop lods movsb int mov pop movsb or sub test lret cmpb or jmp adc ret ret or lahf call aas andb ja adc adc xchg movsl addr16 movsb sti inc cmp inc mov cmp adc xorb inc stos (bad) mov xlat push les es dec xchg sbb adc nop je fwait imul addr16 inc inc stos fidivl ja stos or (bad) push aaa xlat mov movlps (bad) popa inc mov pop pop jbe cmc or xor (bad) mov xor sahf inc lcall inc or icebp cmp adc rorb add loopne cmp ret ja mov test jl sub inc fstpl xor cld xchg in sbb js mov std (bad) mov lret cmp imul push sub xchg lods sahf (bad) jo inc fmuls push dec jne xchg sbb add loope cwtl and mov sub aas and ss and sbb dec data16 push push mov pop mov mov arpl push imul adc pop cwtl jg push mov add adc pop and push dec adc and sbb (bad) fcompl lahf ss outsb mov mov loopne (bad) cmc mov or rol mov ret add push mov and stc mov or xor hlt ret rcrb inc mov movsl lea mov lods sub jmp lods push push xchg dec and jne mov push mov and add loop clc sbb mov rorb sbb outsl xchg mov dec mov inc cwtl pop and xorl (bad) aam pop or and lods (bad) mov and xchg inc call sbb leave add mov sbb xorb mov aam jmp xorl adc mov aad addr16 (bad) fwait dec push daa mov aad (bad) dec fisttpl dec popa mov sbb push push cmp and enter add add sub scas inc hlt xorb adc mov jo das sbb and into (bad) jge inc jmp inc loopne les push or jge jge lock bound aam adc pusha lds lods in and inc sub idivb xor cmp jo jmp ss xchg scas dec push mov inc addr16 push pop xchg (bad) push fsubs outsb and (bad) stc pop jmp popa in mov ficompl jno imul inc (bad) sbb pop and mov bound sbb subl cmp push addr16 daa insl loope xchg jp fcoms xlat ret fsubr and jne iret inc adc arpl mov outsb mov test cmp mov push pop inc or popf ret xchg sbb (bad) xor repnz mov js cmpb pushf sub int sbb scas fdivr add mov or ljmp jne xchg out fcmovne pop xor cmp js push jno inc daa add jmp push mov bound push dec test std test cmp adc ss jbe pop or sbb fs in nop cmp dec pop add popa pop push ret ret mov add inc test jb std inc sbb xor sub inc sub mov push movl cmpsb or cs sub repz loop dec mov and sub dec or inc add cmpsl jno jecxz add daa xchg pop mov sbb das dec loopne and xor or and sub daa clc dec xorl dec daa push lods adc inc lcall mov lods adcb bound mov popa push push test negb xorb sbb jp addb adc cmp xchg sbb popa loopne inc push icebp jmp test (bad) adc push and pop fbstp dec push inc sub test mov idivl dec mov cmp inc lods adc or push inc arpl daa push andl dec mov scas cli movb inc jne jmp xchg notb add inc je sbb dec call in inc push cmp xchg (bad) loope cmp aas dec sub sbb or xchg ss andb inc pop adc mov fsubs (bad) mov pop cmp addr16 push mov cmpl cmp xchg xor pop fildl aaa lcall sbb sbb jb mov inc dec xlat cmp (bad) je add sub jmp sbb movsl mov sarb xchg sbb sbb mov jbe cmp mov adc imull push inc jo mov je sbb in dec cmp jecxz xor ds cmp outsl cmovge push xchg mov daa push sub cmp mov add or add mov and in (bad) jo or js push addr16 mov (bad) insb add xchg push insb sarb dec sbb xchg cmp cmp or pop ss pop lea fisubl mov add rclb xor sahf or stc jl pop fxch int mov (bad) aas push or mov jp jmp dec cmpsb not sarb cmp or fwait lret (bad) lret jle,pt shr pop ret dec ret jb inc cmp outsl add (bad) push je push xor pop inc cltd in mov mov jb adc sbb daa or sub sub fs bound movsl push dec (bad) jle push enter scas inc add cmp push push mov adc pusha xchg xchg dec rcrl jae movsl fcompl scas push adc add imul add inc jno dec pop add sahf cs and cmp or fs push iret and and push aas and mov addr16 cs je push sub rcrb inc mov sbb jne push xchg mov icebp (bad) xor les mov sbb mov push jle xlat (bad) mulb loope inc adc inc dec sub jmp pop cmp std jle or and fwait test jne sti dec fisttpl add (bad) sub cs xchg mov jmp xchg cli cmp jle xor lods add add xor jne dec sub int3 mov lods dec and push xor xchg test test xchg mov sbb mov dec adc cld xor lret mov add (bad) loopne or ljmp sub sbb cs or dec and btcl fxch in inc inc cmp enter dec push and push and cmp scas adc (bad) hlt stos enter and inc arpl sbb push inc dec pop movsb add data16 adc jnp daa adc test cs movb push pop mov sub push adc push cltd adc lods dec clc shrb or pusha mov xor xchg cld mov cmp sbb sub stc xchg inc pop push mov sbb adcl push mov or adc fs scas xor xchg xor add ljmp test orl test jg dec lods test mov cmp jne dec std inc clc push mov pop hlt ja cwtl adc clc and mov test or mov jecxz inc cmp in stc imul gs popa dec bound or popa outsl or in push inc sti adc add sti add pop adc mov adc xchg mov lret lock push jae or fcoml inc mov xchg cwtl ljmp cwtl pop or mov pop or jmp inc xchg test nop push or adc (bad) js inc loope (bad) sub xor loop fcomp movl test push mov repnz inc mov mov fiaddl shrb (bad) mov nop xchg loopne pop aad jbe xchg lcall int3 adcb or adc mov sub sub sub lea leave adc adc shl pop dec lcall lcall aam mov mov shrl and and (bad) push jo (bad) mov mov lea std movsb sbb add inc push outsb andl pusha dec add and mov imul inc fistpll pop and mov lods sub loopne push test push mov push adcl sbb sub xor loope xor or or fucompp push jge add sbb lahf call sbb jns ss push pop adc test push push jmp push es andl xor push ret clc jb inc mov mov test xorl subl icebp mov sub push or mov adc xor xchg (bad) push add clc and lods outsb popf (bad) lds out pop adc sub pop mov js test push int outsl push pop adc push sarl add ret adc jl test jae call mov daa adc xchg xor lea shr cmpsb popa fcomi push clc push sub mov das dec iret loope adc inc jmp test inc dec rcrl xlat dec xchg jne xor nop jbe iret add ret adc adc pop jns xchg orl sbbb (bad) test outsb pop out adc xor nop xchg dec test sub fcoml xor dec insl pusha dec dec cmp lret das sti je mov inc fdiv test dec les add inc dec xorb ret jg clc sub or add mov push loop mov pop data16 shrb adc jp add mov pusha adc push inc insb das test inc adc mov test xchg jnp inc add dec loop sub adc sbb (bad) outsb lods nop mov nop or add loope jns push cmp (bad) sbb sti add mov xor mov mov std push lock jne push aam sbb and sub out jmp insb rclb shr xor push and push sub insl mov add sbb pop sarb test xor sub jmp (bad) loop sahf xor xchg add cmp dec out not mov int add cmp cwtl cmpsl push xchg lret push jmp sbb pop jp add mov xchg int push hlt test xor jb cmpsl lock shl (bad) fistl nop/reserved push bound push inc jb orl xchg arpl and fmull shrb scas push scas xor pop shl sub addr16 lds (bad) jne or dec out ret adc adc jecxz adc jg cmpl enter cmp and or inc add fiadd xor mov or nop (bad) sar jne inc stos loop fs (bad) jmp pop in add shrb aad add aam sbb xchg sbb ret movsl fiadd xlat (bad) fisubr adc js fld add nop test cmpsb add jae inc adc push mov xor xor sub fs addb push mov es testl sbb push dec xor fisttp mov (bad) and mov or dec fstpt rolb rorb and or cwtl jmp xor je xchg mov push mov add (bad) fnstcw jl sub popf cmp and or fidivr or pop aad in pcmpeqw loopne bound (bad) cmp aas lock inc mov xchg push or mov aas in sbb push inc jg mov fwait sbb nop in push xchg push cs add movsl push sbb outsl in xlat dec nop or cs sti sbb imull dec sub push sub sub xor adc cmp xor mov clc pop ja outsb in push or cmp xor xchg fwait mov xchg (bad) movzwl lock xor outsl dec and pop rclb xor jno or dec (bad) mov repnz jne or hlt mov movsl or (bad) icebp jns call lock push jle jg (bad) into int3 mov popl ret and das hlt inc lcall or mov xchg js sub aaa jecxz sahf pop ret pop cmovne xchg out xchg inc hlt dec xor dec int3 daa mov in add inc pop clc adc loop jbe test sub loopne xor xchg adc push add inc pop dec into mov xchg sub jne push flds mov push test lidtl pop and stos insl adc imul aas outsb jae xchg inc loopne (bad) jl inc cmpsl cwtl or jae add adc hlt mov inc pusha cmp xchg in iret lods inc clc mov lea push mov sar es cmp in cmp (bad) mov sbb xor pusha je sahf int3 dec mov nop xchg jg cmp popf fmull push setns mov les dec icebp inc stc add or jns out adc and xor out sarl flds loope leave add pop push and jnp dec mov fs inc push mov push pop add and push adc iret loopne inc or adc dec das cmp inc push push lret imul mov inc pop and mov or pop push lods popa clc push nop test add inc sbb xchg cmpl decb adc mov lcall cmp push or aad cld mov adc inc repz imul mov sub inc mov cmp popa adc push adc dec pop mov pop adc fwait push fistpl xor aas das sbbl jne xor adc mov rclb adcl imul or inc sub inc add xchg mov dec cmp sub dec or ret xchg (bad) loope dec inc cmp pop and mov mov nop jae movsb fisttp adc pushl add pop ret inc mov popa push add arpl add add (bad) dec in xor jb mov push adc scas push xorb inc test movsb aad nop inc push mov inc aaa mov lds in sub loopne adc dec cmp lcall pop fs cltd adc (bad) rcrl aam rcr xor add adc and or pop mov hlt js stc pop dec push in xchg xor or (bad) (bad) fisttp dec inc sub sub and sub push pop movsl mov fstpl xor jae sub sub and xor sub cs fdivrs ljmp test adc je sbb outsl xchg fsubl or or pop roll cmpsl aas mov dec mov inc mov test xchg mov or ja je (bad) dec insb adc loope add mov mov loopne push mov inc jne call loopne push fcoml addr16 lcall cmp inc mov inc sub call lock or lahf dec jne jo inc call bound dec adc rcll xchg pop jb adc jbe push test test mov rcrl ret bound inc test xor idivb push or mov push pop cmp add inc scas push jge mov inc adc pop or lcall and add out fwait imul adc or lahf add xor and aam and jns insl xor mov add inc sbb push mov fisub or or loope loope mov in adc inc and enter andb jb test mov and (bad) or mov pop loopne mov and je cmp ret add sbb mov ss push dec dec inc in push pusha mov cmp mov or or and xor aaa cmp or cmp jp or push idivb test (bad) and les test imul xor out add sbb addb cmp jne sub in sub jge sbb push adc jmp jo lea adc pop stos push orb dec mov test mov test loopne ret add or mov outsb jle pop jmp sbb mov call or pushf add xorb push sub mov popa ret mov sbb (bad) adc sahf add andl or xor ret add jmp xor test or inc or add dec push ja or insl jo jmp inc in add inc jg push enter fwait pop lret std push cmp add jne mov dec data16 adc inc cmp dec lods daa fistl mov add fsubr (bad) subl aam sahf hlt push dec xchg jns jp add (bad) aaa inc mov xor mov orb and movsb fstps add or nop add pop push jns ret sub adc cmp mov mov lock sti xchg rcrb add lret dec sub fcmovnu adc shrb inc jb outsb adc rcrb rcr in sahf add or push pop js loopne xor test push pop push lahf jnp fistpl jle in push loopne push dec push cmp jo test push lcall and mov sbb inc jmp mov mov cmp jl nop inc add adcb xchg enter rolb andl gs dec dec test pop cmp or sbb cmpsl test push mov push ds xchg and inc sub daa cmp subl adc mov fnop mov addl js leave inc push jl jo xchg insb xor andl fwait xchg (bad) andb inc push inc test sahf notl push js aas inc jnp push int3 push out pop sub xor push and dec adc inc push hlt push or movsb in adcl add mov int3 pop mov pop push xchg inc jl insl insl clc cs push sbb mov mov pop sub dec pop dec fbld aaa inc push mov ds shrb push jb rclb push sub fidivr adc fstpl subl aam add or imul rclb xor cld xor insl bound push or mov push push inc cwtl rol adc jle test and adc or or or or lds inc (bad) insl popa in arpl sub sub push ja cmpsl sub mov dec xor xor push ret pop cltd or add adc pushf por and or repnz imul mov add mov push push dec clc or jbe add (bad) popa popa imul enter mov adc out in sbb (bad) jae jns (bad) imul mov inc add sub mov add fimull and and outsl fcoms dec jae pushf push adc dec call pop xor jl cmp push pop sbb sub push and push or fistl or repz jnp or (bad) fnstcw mov notb dec cmpsb lea mulps loopne or jbe pop sahf or nop jl adc add push shr dec dec or mov popa push rclb lret aas lods pop rolb sti xor movsl test sbb out movhps add adc pop and or and fmull outsb add lcall xchg jnp push dec or incb nop add xor dec lock invd pop ja and push or into and push push in adcl or fisub sbb repz fnop pop adc add nop nop or xchg mov xchg add dec loopne push mov adc sbb dec or mov popf dec popa call mov cmp dec push (bad) je and dec xchg pop pop mov sbb mov test mov shrb iret out mov lods iret mul push xor (bad) mov push adcl outsb and mov js sbb mov xorl cmp in mov pop ret stos jecxz paddusb add push or xchg inc pop xchg adc jl jle mov sub or in jnp adcl and lock mov mov or sub test inc call ds mov push inc mov push cmp mov or (bad) (bad) xor and pushf arpl pop pop dec push (bad) mov gs add scas out and jbe cmp push pusha adc addr16 lock out pop adc gs imul sub or cmovg dec push dec lds pop pusha push push loopne xchg rclb test mov (bad) repz out adc test rcll mov pop test ret mov (bad) jo cld push test mov push (bad) ficompl xchg hlt adc mov push pushf inc les maskmovq testl inc sbb andps pop xchg dec loop outsl fst fbstp pop add add add or decl decl add add or mov mov mov pop pop clc and sbb cmp inc mov mov in (bad) in ljmp xor ljmp jmp jmp jmp jmp cs (bad) jmp jmp (bad) (bad) fdivrp (bad) fdivr (bad) ficompl push add or lahf mov sar iret mov dec clc int int3 dec outsb repnz inc mov ror lcall adcb in sahf cmpsl fnstcw ret sub movsb (bad) in out jl lds push pop jnp push jns (bad) xchg insb push cmp iret repz out int rolb lock repz inc sbb rolb into es push push and xchg mov shlb iret test idivb hlt push mov mov lahf out push adc cmpsl mov ss popf rcrw adc push mov mov idivb push mov mov shrl sbb push pusha scas push lock shll nop call adc inc xchg repnz fwait dec loopne or sarl cmp fcoml (bad) or aaa dec cmp shll addl pop enter enter mov inc xlat xor cmp cmp xor lret pop jo sub incl inc fdivs adc add mov add xchg je sub orl jns or dec in mov enter andb ds push shll pusha popa adc jle sub or imul or sbb es sahf sbb dec insl or or inc and pop adc push push out or xchg inc bound adc inc mov popa inc cmove cmpsl mov push dec popa je xchg inc push push addr16 xchg mov les adc sbb or inc add sarb jno ret rcll ja ss inc inc in pop add or or dec adc popa pushf adc out xor xchg iret xchg sbb mov (bad) ficom int3 dec xchg addr16 or cwtl fs mov inc push inc cmpl or outsl pusha rcrb mov je sub subl push imul cmp cwtl mov add xchg (bad) fdivs stos and push bound adc sbb mov jo fwait or push iret mov loop pop ss add and or cwtl (bad) in iret loope pop sbbb shr clc jo mov loopne or imul std pop mov cmp sub push push fbstp clc or (bad) add add add adc das fldl push xchg mov add mov sbb sbb incl push add aaa mov mov mov mov fadd pop push adc sbb jmp xor and and mov mov mov add or loope push mov xor cmp (bad) jg icebp repnz incl ret inc inc inc aaa mov into std (bad) mov (bad) mov (bad) mov pushl (bad) mov mov or scas sahf out mov push mov jl out mov cmpsl fstps clc push inc repz iret dec push and inc in add jns pop add mov inc and sahf (bad) into add push aam pushf ror sahf cmpsl push fsubp (bad) lock push (bad) fsubr xchg out jge and cmpsb push clc jo sahf out push or push dec repz or aam es sbb mov movsb push sarb push stc cmp repz sbb sub push or ds mov or adc out test ljmp or push sbb mov (bad) or int push push test pop cld sub fistpll xchg pushf mov sbb ds xchg nop pushaw add fdivp ds mov enter bound ds lret sub pop and mov push jnp push in insb fcompl rclb push add push mov out mov les aas subl inc addl aad adc sub aas movsl add in insl cmp add push in push and cmpsl jl mov inc pop xor add inc adc mov test cwtl loope xor dec sub lahf aas pop sub ja ret mov xlat lods outsb mov mov xchg outsl mov cmpsb push sbb or mov mov cmpsb js mov daa out frstor push pusha sub sub sub lock jnp add adc in pop inc int3 sub xchg push sbb inc pusha sbb and mov outsb scas sub and lds insb jl add and jnp ret adc (bad) dec pop pop mov cmpb (bad) mov dec jno add push fdivl xchg push sub or or mov and push or je push imul insl arpl or jbe adc inc mov test cmp push push dec add mov xchg jns lods and dec inc testb call lcall jmp insl loopne (bad) jle jl sub xor adc pop call mov nop or or push push daa sbb loopne or gs pop fstl xchg inc or inc out lock cmc fnstenv xor inc adc sarb adc mov orl ds test aam cmpsb adc js je je insb jecxz xlat mov push inc lret mov xor mov sbb and xor adc cli add and inc and mov ror pushf cmpsb cmpsb push mov out sahf out xor inc push pushf out sahf pusha insl jp xchg hlt outsb cmp mov cs iret je lahf aad mov aas cmpsl stc push cmp cmp push inc dec inc cs icebp dec adc push adc lods mov in in ret movb lahf testb popf push pop scas push adc test daa inc jbe sub add add sbb push ja adc mov movsb push inc adc jo lods ret jg xor jnp pop pop pop mov dec ds mov (bad) in je adc dec mov ret sbb xchg lods subl dec or mov mov (bad) fstpt push test add lods ljmp mov popf sub sbb clc pop push lea push fmuls test and sbb (bad) sbb pop lea add and sbb pop cmp inc add inc movl jo xchg cmp outsl push push jnp cmpsb and push (bad) sbb call adc sub lods push add popf dec jne loop fs and or clc mov jno adc mov inc jmp shl pop notl inc jecxz xor loopne test movups aas push or inc jmp sub mov mov mov jb ja inc push pop repz dec inc push xchg mov push fisubrl daa dec push ficoml inc sbb inc daa push jo jo jo daa or inc insb popa subl push ret nop xchg daa dec push jo imul mov andl jnp movl lret subl add lret jno xorl adc js test inc cmpsl mov pop xor jnp pop add jno daa pop add cltd cmp adc movsb inc ret pop xcrypt-cbc cmpsl nop imul and or int adc adc jo push iret pusha and mov push cmovo or lcall fwait cli sti inc xor push dec lea iret mov subl sbb pop mov dec adc adc inc (bad) mov add push sub daa xlat mov addl adc jo bound sbb mov ja push jmp push popa fdivrl adc (bad) or sub mov inc mov inc adc push push adc inc xor sub sub push or movsb and sub ss mov imul or pop pop lahf test aad and dec (bad) push (bad) adc insl sub add clc popa cmp jo hlt xor xor jge push adc (bad) and adc pushl dec sub adc insl cli push fwait sbb inc add (bad) aas add dec dec jne das xor push jg mov jmp jge push jge (bad) aad lock or nop push or push push dec add dec cwtl roll rclb mov addr16 inc add or adc adc sbb and pop xor shrl sub scas push push or inc in push push mov mov and out outsl and jo adc adc xor nop sub add sarl adc fldcw hlt add or inc or insl xor ds outsl mov je add add lock ret xchg mov sub bound inc (bad) pop inc mov addb dec mov xchg icebp sub and jne mov ret lods or sub (bad) adc les mov orl xchg outsl sub sub add mov mov cwtl push hlt (bad) jmp or incl aaa mov dec cmpsl dec or ss sahf pop sub pop ret or jno (bad) cmp or nop inc popa mov movsb (bad) test bound cmp adc movzwl aam frstor loopne mov mov adc mov call xchg mov adc fs lods subl syscall inc push dec jecxz rolb jp and scas sbb sahf jae pop push loopne aaa add aas enter add jo push test popa jae loope xchg sbbb mov sarb scas inc dec cmp cwtl and adc sahf in sub clc push mov or js add incb inc xchg out sarl mov lahf (bad) lds add mov adc push dec enter iret add adc test subl test insb mov cs sub imulb mov mov pop dec adc repnz sub dec or adc popa adcb mov or neg xchg cmpsb je movsl mov adc andl (bad) jae insb dec cmpsb test cs iret cmpsl mov push rcrb add cmp flds shrb mov mov add pop mov aas push outsl pusha sarl jb sbb inc adc jmp cmp jne inc and dec mov scas dec rcr les add sbb pop negl xor lcall test rol push clc xchg mov inc in sti jl sbb ss lret jecxz xor jne jne jecxz mov das lret mov or repz fdivl aad jge cmp das lock push clc mov adc add movsl pop (bad) test push mov mov dec movsl in mov lods inc scas fs jmp push mov pop xor insb push sub sbb mov mov pusha les test and xlat fwait sub add xchg pop sbb mov fcmovu (bad) je xchg fiaddl rol push mov imull aad and add or pop lea js jmp push stos (bad) fdivrs (bad) (bad) je jge or inc inc paddusb cmpl (bad) push roll add adc xor pop das pop ja pop pop (bad) mov jl js das sub mov lock lret add xchg jp jno pop jno mov test jne les fs shll aas fucomp test jle inc jo mov sub in test push daa (bad) push imul fmuls dec in mov push inc dec jne sbb xchg or cmp popa adc ret pusha addr16 hlt jmp mov lea unpckhps popf pop ret xchg push (bad) cmp incb pop and (bad) cmp or les cmp lock lods lsl sbb stos jge or in sbb cmp ss push xor das ret add push rolb (bad) lock push fs lock sarb scas inc shlb test cmp push adc add popa movsb aad or mov js dec shrl push push xchg rcll push test ret push pop inc ja mov inc add mov jmp sub jmp push ljmp or test sub enter pop lea pop push fisubrl fdivs test jb pop push sub push pop or nop xor xchg test jo pushf cmpsl push ds pop jae mov in adc pop xchg pop pop fist aas call jbe fdivp add je out ds andl push mov dec out xchg sub adc and cli jo sbb repz xchg lds ret test mov (bad) dec scas dec (bad) jge mov sub add clc mov sub or push xlat mov lret mov es sbb sbb or aad xor cwtl inc ja enter jns popf arpl inc pop jmp xchg add ss aas cwtl xor sti cmp je jmp mov in out cmp movaps or adc or xor add insl mov inc pop or adc mov add xor add add sbb sarl mov mov cmovae mov mov nop or test push sub out or pop adc outsb pop lea dec add cmpsl loope inc jmp in arpl out and test pop pop clc movswl test das mov push aad sub lock sbb push push push sbb sarb (bad) out pop (bad) jnp or pop cltd pop pop and dec or pop fadds sbb xor push int rorb orl xor inc loopne inc lret std push test shrl (bad) or pop loopne stos xor xor ret fdivrl das inc rclb sti inc mov jo cmp scas int pop push pop sbb pop clc ljmp add dec les out sub repz lea js or stc or mov mov sub cmp mov or sub adc push stc fstpl cmp or cmp inc sub and in adc sub imul loope mov mov sub rclb scas sub popa sbb jmp pop dec adc or in dec outsl jmp sub mov push adc adc lret loopne lea and or xchg bound dec or xor push addl stos dec xor mov push xor fdivrl dec out adc fiaddl pop cmpsb fsubl jnp imull popf add xchg das mov sbb loop mov add xor push bound mov mov dec pop push cltd popa pop in jne imul nop clc inc or mov sub jmp nop mov ds out inc nop push call push dec sub cmp push dec mov add pop jno dec inc dec rcrl sbb add lret je test adc fadds adc xchg cmp ror mov into push push jne mov mov sbb rclb add sub xchg mov mov adc push pop or push ss lcall (bad) or add sbb cmpsl sub xchg cmp das pop movb adc mov push cmp int3 lahf and push xor inc mov inc insb cmc and inc subb cmp popa (bad) or fsts sub cs sbb jmp and lea loop mov stc or sbb push insb adcb jge sub mov in (bad) arpl (bad) push pop outsl je lret popf adc adc sub cmp mov cmp inc pop and or sub add xlat sub mov mov ja (bad) mov or sub rorl xchg or cmp pop aaa ljmp add addr16 fmuls daa cmp xchg xor adc addl cmp inc xor inc mov xchg pop and cmp inc imul push notb movsl mov lss fisub mov insl sub mov pop icebp xor cmp ret jecxz fwait rclb repz rorb and movsb mov or or (bad) push (bad) lock adc ds push enter icebp shlb sbb (bad) scas add mov shll jle inc adc dec sub or dec push movl mov push sub pop push (bad) mov inc add (bad) push or (bad) mov jp out imul cwtl xchg cmpsb mov aam clc dec insb mov add mov sti imul add xorb out dec inc mov jmp xor mov cmp and xor mov inc xchg (bad) mov sbb imul and and or xchg push pop rcrb or jo pop loopne mov jmp add pop dec jmp pop add xor rolb lea pop jno and mov (bad) mov xor xchg out (bad) outsl xorb add add add add insl ds sub inc cmp mov cmp mov mov mov fldt xor cmp adc or andl push push pop pop fild adc jp mov (bad) xor mov mov fnsave dec adc pop or sbb arpl ja ljmp dec out pop jmp cmp je mov sbb leave jbe push adc xchg xchg xchg out jge cmp push or adc push mov pop je sub jbe cmp cmp cltd movsb popf sbb or adc cmp imul call in or adc in fisubr dec in test inc shrb addr16 clc dec jbe pop rorb jecxz fs cmc sbb cmp sbb pop stos push nop fldl cs pop ja rcll inc mov mov mov fisttpll imul frstor pusha pop mov mov int and lcall xchg pop and sbb arpl cltd add loop insb mov fldenv sub sbb cmpsb mov add call nop fldl sbb mov add push addr16 test and jl xorb sbb jmp (bad) scas and or and inc push gs jge (bad) ja add mov add push add in and push leave push add test sub sbb sbb xor push fistpll (bad) mov xchg inc or pushf jg or in arpl or sub adc and test lock pop in jnp je sbb xchg jne cmp movsl or add out mov cmp push mov (bad) lret xchg hlt aas loopne push mov fimull push test xlat or pop mov sub sub pop enter in repz jecxz push push aas mov inc popa sbb outsl shr ljmp je sbb mov sarl fadd inc push add pop pop pop out popf and or pusha push pop jbe sti fildl dec jp jmp (bad) xor inc add (bad) jo add stos lea psubb xlat xchg xor mov ret cmp cmp push aam clc and adc sbb mov in pop sub xor imul push pop jge xchg inc dec pop lea lcall adc ficoml mov nop xchg inc and inc xor mov fcom fisttpl adc inc pop mov insb xlat jl push outsl xchg push (bad) mov cmp cli insb cs aaa fadds cwtl cmpsl test adc dec loopne mov in push aaa push cmpsb lds fwait pop xchg lock insb pop cmp xchg adc fdivrs sub loopne push and lret inc aaa fcomps fistpl push and outsl adc ret bnd orl aam cs sbb lods (bad) mov mov inc and mov inc or adc bnd leave mov push cmp and or push sbb xor ds inc and mov push xor loopne call cli xor push adc sbbl popa sub dec dec test sub and leave push aaa xlat lock cmpsl mov push idiv push sbb add or mov test or and test add cmpsl mov cmpsl push dec ret (bad) pop sahf lret cli cmp jne inc lcall xor or (bad) in xchg imul nop mov mov pop pop push nop loope clc leave jno (bad) int3 fbstp or fsubs cmpl (bad) push movsb mov or dec xchg adcl cmp jne cs rorl pop inc mov inc cli scas inc dec push push dec sbb mov mov (bad) or inc xlat ljmp push pushf mov pop inc notl jnp jne dec dec jne mov dec and xor push push sahf ljmp sub or popa enter lret inc add ja and iret dec push cmpb add sarb (bad) mov outsl add cmp nop es xchg ficomp mov mov mov insl inc dec mov push adc adc fwait sbb sub sub xchg dec or dec mov nop mov fs sub push out imul cli push and frstor inc fisttp (bad) xor mov movsl push push pop jne out es sbb inc dec das pop dec mov mov ret inc (bad) rolb dec pop loopne mov cld mov mov push inc dec mov mov add push xchg dec es scas add push inc or clc or loope je xchg cwtl mov std inc adc pop rcr dec shrb push and add pushf xor inc mov sahf ds push jnp (bad) adc push sub jnp call adc inc mov in cmp cli clc dec and fstpl push mov push bound movsb lds or mov nop inc (bad) cli daa mov cmp test (bad) sti stos inc lods adc xchg add lds insl push push or mov xlat sub pop test push mov scas mov cmpsb (bad) or pop adc sub sub pop and add enter dec lret outsb dec add stos frstor sbb dec mov mov daa ret cmp inc add add lds int mov jo mov mov xchg idivb inc pop mov pop sub insl pusha pusha xchg add test cmp psubsw and cmpsl lahf xchg lods in jl (bad) lahf in rdrand hlt pop lret add andb xor or push in in movsb mov adc les and dec sub pop mov mov add pop mov add add test adc mov add xorl fnsave call mov nop mov pop (bad) jmpw orb mov test nop and lret imul lret mov xorb or or push add in mov ret cmp je imull sahf jg push mov rolb and daa outsb pop js add xor sub pop sbb mov cmp inc outsl addb pop lcall xor adc mov adc popf out ja mov nop add pop ret rolb in or push xchg addl push adc add mov outsb faddl jg and mov mov push pop lea sarb push dec mov pop cmpb and adc pop push mov rcrb repnz mov fdivl lock xlat sub cmpl pop je loope fcoms mov push jae roll ret inc inc xchg testb xchg daa rclb mov call or ja sbb shlb and std push sahf add ret xchg push adc test (bad) or fcoms inc mov cli push es mov sbb inc data16 popa jne add ficom xchg cmp insb orl adc enter sbb repnz int shll in mov xor mov xchg (bad) aas xlat movsb jmp je mov push mov or pop push add ljmp mov jb movsb clc and xor cmp cwtl (bad) jo add push and or aas push dec mulb insb mov mov cltd in and add mov sbb pop cmp and sub scas nop mov xchg mov cmp add or or out outsb pop je mov dec ds add cmpsb or xchg pusha add push add fwait adc inc bound dec aaa adc ret xchg push jnp,pn (bad) hlt out push cmp lahf mov sbb aas mov xor mov fs cs je mov in xchg pop pop sub sti jp js nop cltd lret mov (bad) mov fsts inc sub cld xchg cmp leave dec adcl or cs pop pop movsb rclb pusha jne dec mov data16 repnz out sbb and fmul nop pusha add dec add xlat mov sub nop push aaa test mov andb test out stos pop pushf xor enter xor mov adcb aaa mov les cmp lods sti rol xor scas pop mov leave je out jns notl xchg xchg dec push call inc mov pop adc scas mov out or mov mov inc das pop sub test movsl add shrl xor cmp mov inc dec mov mov lods js mov add (bad) lea int cmpb testb stos inc push xor push leave inc dec xlat (bad) fsubl dec insb imul mov popa pop xor outsb add mov adc fdivrp mov ja jmp or aad imul push add xor push (bad) sbb or lods dec add aas mov jge loopne lahf dec fs mov dec add bound add add push pop pop ja push loopne inc or mov adcl mov jae cmp jg rclb inc mov inc pop addb pmulhw pop or cmc mov or pop mov jne (bad) cmp ret sti xchg jne mov pop pop cmpsb cs dec bound xor mov shlb cli or out push pop cld add push popa int3 enter fiaddl mov pop clc out nop push fsubp mov dec fnstcw jecxz sub das and add mov push mov dec or pop das add or pop js xor lahf inc cmpsl ret adc ret inc ja cmp mov pop mov lea outsl js pop inc ret adc jne dec sbb lods pushf push js popa or popf add xchg mov popa test ffree test lahf loope jle add jle xor rcl mov or enter (bad) mov add cmpsb push xchg movb add add stos pop sbb mov adc dec or inc xchg imul and lock insb cs mov or in call push add adc insb lods mov add and xchg sbb fimull sbb xchg push sub (bad) popa dec loop mov insl fldenv sbb adc add fildl (bad) xchg mov inc or loope cmpsl sbb mov adc inc push clc fwait lea fstl rclb in adc add mov add mov lea dec sub inc push inc fmul xor inc (bad) push jo adc sbb lcall and xor imul xor shlb add add adc sub add add loop sub (bad) out push xorl sbb fwait stos je cmp push icebp divb (bad) xchg stos test mov jne add je push and mov out js cmp add je neg pop lea les pop sbb out and mov jmp sub mov sbb cmp jge mov dec cmp hlt push cwtl add xor or loopne xor scas outsb push or sbb (bad) inc inc fadds fdivrs xchg jb inc mov dec rol push inc mul or or cmp or outsl push cmpsb pop loopne out xchg movsl loopne or inc jno cmp ret mov jno sub imul cmpsl shrl cmp adc or and jl hlt mov (bad) sub in push dec mov jge jp jbe cmp movl ja out adc in or inc in push cltd inc pop push xor rorl pusha xchg lods sub inc lea dec js leave or inc cmp add mov sub or or adcl out daa adc aaa fcoms es add pusha je sub mov clc add je loop xchg add jmp ss or mov add adc inc push les fmulp mov les mov mov in sbb pusha xor xchg test mov int3 adc lcall add inc mov or pop mov sub test xchg adc add add call in or pop inc mov and push jne xchg xchg pop or inc sbb nop sbb mov aas fwait dec adc pop sbb insb push xchg jne,pn mov jle test push (bad) clc insb adc sbb inc loop and pop sub stos mov push mov es in hlt arpl mov orl mov xchg mov push sbb scas sti call add lock push mov mov pop adc js jne pop push imul js call mov mov (bad) repnz mov xor sti idiv nop and loopne mov jnp iret js push pop or out push or xor jge xchg shlb stos movsb mov adc jns insb mov mov and adcl xor test push push push ret pop loope sbb push popf les pusha fwait cmpsl add dec adc and outsl cld pop add hlt sbb std or xor push pop pop pop call push or sub mov mov (bad) jae add lahf and add xchg inc xor ds mov inc or popa xchg gs stos jo mov lret or cs cmp cltd int3 enter daa xchg outsl jne mov or add inc ja pop add fidivl jle cmp add rolb or mov out lock test push je fcom jbe out and insb mov or adc mov out jmp sub sub mov or (bad) lock pop adc or popa ds (bad) nop inc add and roll or or or scas roll push or int bound add jmp sub push in xchg add push or sub in mov adc or sub push ret cltd (bad) cmp test cmp or add add dec ljmp inc cmpb inc insb aam pop dec imulb inc jmp fimul inc in sub or mov dec scas imul sub xor sub jne cmpsl jmp int add or andb adc sbb cmpb sbb and adc mov cmp lret movsl add adc mov pop sti jle add xchg jg jb adc js andl mov add and add add or sbb cmp push js sub (bad) movsb in mov lret adc inc adc in sub push dec push add jle push (bad) jmp xchg scas sbb pushf insb adc or adc inc sbb push aam xchg inc and (bad) mov stc and or mov add add jp jg out and test push pusha mov add cmp aas xchg sbb add dec sahf (bad) in stc xor clc or dec test add jmp add in clc jbe sub mov dec rolb hlt dec xor ret inc outsb or mov jmp inc fsubr xorb xor and and or sbb dec mov jle xor pop cmp lea sbb xor pop mov addl pop lock push push add lods sbb push into aaa js xor mov dec les cmp jle invd cmp (bad) pushf movsl push lea inc (bad) adc bound sbbl pushf dec push cmp adc leave pop or sbb (bad) mov arpl add cmp xchg sbb jp push loopne xchg xchg std jge dec pop dec aam shrb sbbl push xor jg jg,pn add dec jle push stos adc (bad) inc arpl test adc movsb aam and sbb pop loope je iret (bad) jno add jmp imul loopne shll add and or nop imul xchg or rclb rcr xlat fsubrs lret lods cmp mov int jmp loop jbe jnp cltd or mov sub in shlb rcrb cwtl dec inc adc rolb push rorb mov lcall je ret pop jge loope (bad) repnz pop jecxz arpl mov pop bound jno (bad) jb xchg sub lahf add ret dec lahf outsl inc or and fisubrl sbb pop adcb (bad) fsub xorb add push stc push cmpl sub bound push je (bad) daa ret mov aam push rcrb xor or mov loop loopne xor mov xor rorl xor and pop dec test mov cmp std xor sbb int3 rclb mov out bound add out mov inc aas loopne sub add xchg jne jecxz and roll ret add push lcall xchg or stos or add lods mov add js adc repz ret mov add push xchg push inc (bad) xchg sub jle std adc and lock adc shrb lahf cmpsl es jle adc or xchg cmpsb xor adc (bad) sub divl mov outsb mov bound jne mov add js sbb push hlt jecxz add dec sub xor orb push xchg je popf cmpb push dec addb sub push fisubl dec inc jecxz btrl and (bad) dec jb mov lret sbb and (bad) fs pop push jo popf rcrb mov mov push pop xor mov add loop es xchg or je movsl push aad lods js icebp inc mov cmpsl int3 mov or jno mov push fildl ds enter push jl out pop fwait insb jge (bad) jbe sbb and pop mov std dec push pop movl outsl (bad) insb ret xchg orl sahf test out pop mov testb pop dec test insb adc (bad) fmuls or leave nop push add fild adc call xchg sbb mov jbe add ljmp inc or push dec sbb pop inc push mov or es pop je dec lock inc arpl or push sub jg jne loopne add push movsl jo aad push inc add push cld test xchg fcom add push loopne lods or cmp pop push sub add sbb insb loope js hlt add push xor cmpsb push adc sbb loope jl push (bad) and imul lahf inc stos push lret lea add test repnz pop push clc fstl push js cmp push fs jp or cmp inc cwtl add fs adc inc mov dec mov bound push jl cmpl xor stos pop lahf test ljmp mov stc adc verr adc xchg out adc or pop lret leave sbb bound cltd jo pop shr xchg outsb dec pop mov clc cs xchg mov sub mov mov mov inc or xor push adc xor (bad) jb ret lcall sbb xchg xor in ficomp fs mov loope mov daa (bad) fsubrs ja inc adc pushl popa or xor and imull pop or les and dec or mov rcr add fcompl enter fistl inc and jmp sub (bad) stos mov xorb dec add jg mov add adc loopne or (bad) (bad) push add insl cmp push add gs ss add adc or loopne push xor repz xor and and or and outsb std add test sub or je ficom jmp repnz aam sub push ret int3 push cmp dec aaa loopne push sbb ror (bad) dec loop cmp xchg mov xchg dec mov dec push push dec fcoml les out pop lea fs sbb pushl jne jmp and jmp sbb add add or call adc insl cltd out pop out test addr16 mov and cltd dec sbb and pop mov jg pop add pop loopne hlt xor push pop or dec lahf es movsb sbb mov pushf nop outsb cmp js adc cmp mov imul sub inc lds ret sub call mov cmp out jmp sub or or popa rcl jo cmpsb movsb aaa add fs sbb test mov push push cwtl dec nop insl (bad) jmp movl mov xor sub pop xor jbe xor adc xor or pop fcoml je mov add movsb sar out xor inc mov cmpsl call cmp bound lock scas push push sbb or orl cmc orb adc ljmp movb xor dec aaa test or adc orl sub mov adc xchg mov imul and lret inc mov jo mov dec cmpsl (bad) repz ret rclb test (bad) sti push mov jmp mov adc sub xor xchg xchg jo dec lea cmpsb pop mov fistpll call mov or xor test insb and inc rorb insb in sarl xlat gs mov dec jnp xlat (bad) jo or test push push adc subb test into pushf xor and dec popa and or mov adc dec cmp inc or cmpsb nop xor adc jbe (bad) pop jge enter mov outsl sbb sub ret hlt inc loopne adc inc out lock cmp add adc addl pop mov pop jp push loop cwtl cmp imul push bound lods cmp insb fwait insb (bad) pop push mov (bad) (bad) out ja jmp fcompl cs dec daa pop add (bad) inc setg jmp mov add inc add cmp setle (bad) xor cmpsb cmp es dec insb or dec inc dec adc inc (bad) test inc ret cmp mov shrb adc pop inc int3 aaa popa flds dec inc sti lods cmp inc aas push adc nop testl stos movsl stc push data16 adc mov int in dec stos pop mov xor out icebp and enter xor shlb je neg ret cmp adc or insb add (bad) mov cld adc sub push push aaa fstps xchg orl pop popa or sbb mov ret or and addl mov adc xchg in aaa lock fs add mov inc nop xchg jnp push sbb (bad) sub mov icebp inc into and mov pop lock mov dec sub aaa mov icebp cmp ret add pop sub ss pop imul mov mov pop add pop add lods lret push jnp (bad) (bad) adc cmp ja fcomi cmp dec mov sub push pop daa and mov jns and popa pop arpl or sbb popa lahf or fs add jmp sbb sbb rorl adc dec dec movsl push push adc xchg mov mov cmp xor stc (bad) sbb or xlat lods gs jl out setne test movsb cs pop inc cli add cmp jnp scas push inc pop outsl jle pop psubusw jno popa mov sub insb js mov adc imul add pop sub mov cmp rcrb inc das loop stos jbe pop pop (bad) (bad) push pop sbb subl (bad) sbb cmp jne in js pop cltd imul mov inc sub xor js dec mov cmpb push cld loop mov xchg adc sahf cmc les dec or dec push cmp insb je (bad) add in insl adc sbb adc sbb test loop dec in inc ret sarl iret sbb data16 (bad) clc add adc xor roll not sbb int into into mov ret je cmpsl jne add and imul or sub or pop rol mov js sbb popa jne aad popa mov adc add notl cmp jg sub adc loopne add fldl scas lds aas push cmp pop lret sub and inc insb add xchg cmc xchg enter mov pop fimull and pop adc and add push mov arpl test mull mov inc or mov in mov das jbe mov xlat inc aas insl gs pusha jne jmp push jb jnp xlat (bad) in fistpl mov loope cs pop (bad) pusha push out lods lods sti aaa xor lahf incw ret sub jne and push mov bound (bad) arpl jecxz pusha pushf in fcompl fld1 rcl jl adc in mov xchg lods jmp cmp and mov xor sub sub imul xchg mov add xor add jns outsl push in adc mov lahf and sub push mov or stos sub fadd add sbb cs cli rcrl aas adc mov inc dec jne mov or shrb mov fisubr test mov (bad) mov pop mov adc (bad) popf dec inc or fs out inc rclb pop fsubrp inc pop addl xor mov xor mov inc popa cmp (bad) push fisttpl pusha add mov cmc push push push (bad) gs cmpsb or arpl or lods push dec xchg insb sbb or xor push pop cmpsl (bad) (bad) jne shlb test mov dec lcall je mov mov (bad) sar xchg dec sbb cld sub xor (bad) fist cmpsl jne inc adc or adc lock ss jae pusha mov dec ss or sahf sti sti mov aas (bad) jmp push pushf jmp lds or sbb call subl xchg jbe test or mov mull stos fldenv and mov clc adc idivl jmp xchg push cmpl iret aas and mov je mov and sbb ja fwait and insl daa inc jmp inc xchg call pop pop adcb loop mov sub out pop sbb outsb popf xchg cmp inc add loopne mov movsl inc push or (bad) or daa push pop and pop sbbl jnp push mov and aaa push and pop dec enter nop push (bad) fild orl mov in xchg cwtl mov sbb divb iret adc inc adc and nop cmp sub (bad) stos adc testl loop push jmp and movl lea (bad) jge lock dec sub imul mov mov stos pop dec rolb or imul push add xor mov les and sub je add test mov dec xchg or cmp mov xor nop cmp or insl (bad) jae out adc bound pusha ja call pushf push cmc jecxz je dec sbb xchg nop sbb mov test inc mov add stos xor push and push stos mov jmp jge or mov jp test or mov pop repz push or mov dec dec scas inc test lahf cwtl fs mov fdivl je and mov (bad) arpl cmp push incl imul movb aaa mov or pushf out gs aaa inc push push cmpl hlt sub nopl repz xchg adc mov insb arpl mov xor iret outsb es cltd out insl cld mov (bad) aas popf sbb nop (bad) in fwait push sahf out dec mov or adc data16 je inc push add cwtl and adc push mov pop mov test movsb cmc dec arpl rorb adc cmpsb inc and xchg and add adc insl dec jae sti pop jle xchg cli sbb mov clc cmp inc mov movsl push mov push jp and pop and sbb movswl ret testb and pop aaa loop sub add pop clc cmpb (bad) mov in inc popa jne enter loopne lea or pop icebp or mov rcrb scas jl lret xchg cmp in loopne popa adc inc adc inc pop cmp mov mov aaa mov mov mov jmp hlt add cld arpl clc enter scas add adc outsl test add pop dec jle cwtl and sarb cmpsb andb sbb lcall std add push bound xchg or fsubp mov jecxz fiadd dec pusha pop in shl fdiv cli jo sbb mov lds fmul cmp push rcll andl sub pop or jnp push mov popa xor (bad) rorb popa xchg push sub mov cwtl ljmp push lea test sub seta xor mov sbb or cs gs dec pop mov cmpl pop xor mov and mov xchg or xchg adc dec packsswb adc or sbb push or dec cs and xchg daa lds and adc rorl add je adc cmpb je mov fwait ret and jmp int and stos cmpsb dec jo movsl xor mov bound and or hlt dec sub pop mov xchg test daa add pop mov data16 js mov mov fadds jo push arpl inc mov cmp loopne enter call shrl xchg mov daa aas out mov mov shlb jmp nop ljmp or scas sbb (bad) xor inc or xlat adc aaa hlt call sub inc insb fsubrl mov pop push lods and jo add add pop cmp int3 add pop push push add xor push sarb test dec xor sbb adc enter nop sub jmp xor adc or sub cmp in lods push and (bad) fs adc adc push jne push mov dec fisubrl into mov loop sub imul es sub adc gs aad push or pop lret fdivs (bad) pop xor fbstp mov sub ret or outsl roll mov pop lods sbb adc lods sbb pop inc das nop mov or pusha push daa push cmp mov shr adc je push or push pop or insl test fstp add (bad) aad imul popl xchg mov jmp push push inc and pop (bad) jmp outsb hlt test mulb jne adc add inc in fcmovb inc dec add mov add test cmp sub jno aam mov sbb inc stos sbb dec sub bound cmc inc jmp dec addb es jne xor adc (bad) (bad) std dec inc bound jecxz cmp jne aaa sbb xlat int dec add push lea in push rcll into inc iret inc jle jb add jmp add push push movl and bound into imul and (bad) pop xor jge cmp dec push lods jae pop dec push inc pusha ret or xchg icebp jecxz,pn inc clc or sbb popf add (bad) xchg lcall sbb inc add or sub mov and mov pop aam sub roll adc fstps lock push add rorl inc cmp cmpsb icebp loopne push jl pushf sbb dec cld mov adc jmp or inc xchg popf rorb jmp jae insl xor and and pop ret push adc fiaddl (bad) inc icebp push mov lea pop andl sbb xchg fsubl loopne (bad) pushf pop mov and addl adcb add movsl stos adc loopne ljmp pop add push fstpl dec mov ja adcl lds and enter incl aas sub call push sub (bad) jmp jl js lea fwait movsl arpl pop add rcrb inc movsb or sub add sbb push lock movsl lahf cli dec jbe mov (bad) xchg inc stos int str cs cmpsl mov sbb into pop inc imul add in imul aad push lock push sbb fldenv mov pop cmp sbb popa xchg arpl sbb dec jbe pop xchg adc rcrb mov mov inc fwait inc test adc add sub ret pop enterw arpl push movsb and fwait xchg mov (bad) ljmp in mov mov lea fs mov adc lret xor fs and ja lock negb in sub rolb (bad) or movsb push aad sbb (bad) dec repnz mov adc xchg cmp and ss mov inc sbb mov add push scas lock inc or arpl lds fadd add cmpsl xchg sub add ret aam rorl ret dec flds push stos mov in (bad) fildll cmp mov mov sub mov push adc push sub mov aad inc rcrb sub repnz mov cmc inc mov mov into pop mov xchg xor push adcl pop das in test mov pop aaa inc dec add aas xor ret sbb shll cmp jb sar outsl int3 test or fxch rcrl fisubr or and inc aaa or stos dec mov lcall fwait nop (bad) push jmp daa pop adc addr16 rcrb add nop inc push add dec cmpsb enter daa push and add hlt outsb test movsl shr push mov jmp decb inc repz cmp jne fcomps inc cwtl scas sbb sbb movsb mov xchg rorl (bad) push pop les push movsl cmp pop (bad) adc fs or and sbb xor mov xchg stos inc add movsb pop dec adc adc or pop and adc add and inc test stos sbb add push sbb shlb and pop (bad) mov adc daa fs adc sbb adc push adc push orl inc pop mov add jo adc enter addb repz sub lea cmp xor jbe es out imul dec call inc pushw dec jno sub and stos test add mov js inc or pop sbb pop movswl mov cld ja sbb jle add ss jne add sub rorb push push sub push xor xchg xchg cmpl ret jmp loop inc ljmp xchg subl mov ret cltd int3 das cld adc mov and (bad) (bad) repz in bound ja popf je rorl cmp test mov dec xchg test mov xlat or pop out push jno and ds mov jne or enter roll inc (bad) in sti jle add push (bad) je ret adc popf or push push inc cmp and xor mov jge iret cli adc (bad) repnz xchg leave xor shlb inc xchg lret enter arpl adc loop mov push jl mov dec add das popf push je in mov sbb fwait mov push xchg or mov dec mov sbb jo xchg pop dec pop ja xor lock push repz inc jnp jmp ficomp adc cmp xor mov rcrb outsl movsl call sbb pop add es nop sub and add sub jl (bad) or insb inc pop addr16 test clc clc sti cmp sbb sbb add rcll mov cltd sbb scas aam pushf dec in out vunpcklpd stos xchg and (bad) sbb fldl aad add xor push (bad) jg loop push xor addl adc sbb sbb mov out inc outsb movsl cmpsb xchg adc xchg add jne dec mov ds andl xor sbb cld and fstpl movaps sub ret sub mov pop push rolb mov ret lods mov dec stos insb dec outsb pop cmpsb or lods in and test in mov cmp adc dec rcrb or sahf hlt inc cmp xor jmp cmp pop mov mov cmp dec lock add xor add push lock push or cmp jb or inc inc fcos and test push mov cmp movl inc imul popa cmc push ds mov xchg js or inc add sbb sub mov jo pusha and inc outsb aam push jecxz dec rcll ret (bad) ja out mov pop out sub jae movsb and or fcomps push push rcr enter rcll mov dec sbb cmc push xor orl inc insl adc add cmp and add xor pop mov xchg push das enter or or adc push pop cmpsb in iret ljmp icebp mov test mov xchg or sub aas xchg lret push loop loopne iret subl jns addr16 and cs and faddl aaa add mov pop inc or (bad) sbb push pop and fistp cmp das adc add popf pop mov aaa mov rolb and loopne dec (bad) dec adc mov mov mov outsl adcl inc leave sbb sbb dec lahf aam adcl daa dec and insl inc icebp sub jge mov or je adc bound jae jns adc fnstcw pop inc pusha rorb inc push jbe adc xchg add fisttpl (bad) xor shrb data16 adc fimul xchg inc xchg pop xor (bad) mov adc or cmp ret push jo sbb ret cld xchg pushf and test std addr16 and xor mov addl inc pusha repnz mov ds (bad) lea xor movsl subl test jne std jo cmp js inc adc out or inc pushl (bad) in mov (bad) cli push popa add sbb les push cmpb add dec or and inc outsl mov iret pop cmp sub imul rcrl das es int3 push loope,pt jo lds mov push shr and cmp cmp inc sbb push sbb xchg fildl lock mov pop out sbb leave loop icebp jg adc pusha daa popf jns mov dec mov push aaa xor cld es mov mov mov push aam push sub push sub scas rcl push cmpsb shlb cmpsl lret jns js add pusha outsb and adc les pop cwtl jbe dec dec pop mov ret sbb sbb push add mov push and fwait mov adcb cmp pop pop outsl notl mov aaa xor cmp loope mov scas pop je test push lock and push jne push sbb add das xor adc or cli popa add (bad) mov xor idivl mov xorl into jnp add fiadd add test cmp test rolb movsb hlt cltd (bad) pop cmpsb mov xchg push rcrb add movsl jg sbb adc js dec adc pop ljmp int3 or push xchg aam inc cmpsl daa (bad) cltd (bad) or or adc and adc cli sarb cmp fcompl lcall (bad) mov rclb mov (bad) push mov inc out add mov addl jae mov (bad) mov adc lods dec add jae,pn movsb rcrl outsl pushl inc lods or stos xchg sbb cs punpckhbw add std imul fistl jb cs call or out and lock sbb cmp add add subl sub adc push add dec mov roll les add (bad) dec push sbb lahf xchg sub jmp add addl xchg adc pop add out mov xor bound lahf add loopne (bad) and and je push inc sbb cwtl repz sbb add and jne scas xor ret inc nop dec loopne adc pop sub insb shlb sub add jmp (bad) jo add dec jmp push and movsl fwait inc jmp rcrl das push or or scas icebp inc mov xor xchg out jecxz rolb popa div sbb xor mov push scas call arpl inc adc sbb xorb and cmp cld mov imul xchg push xchg (bad) out cmpsl leave addl xchg cmpb jo scas xor lahf (bad) or cmp sub pop imul cmpb shrl xchg xlat push and fcmovne dec mov or jmp lret jne and dec pop cmp out fcmovu jp add push inc or sbb rorb mov out aam dec iret or xchg sarb sbb rcr jno aam push inc mov sub pop test roll ds inc sub js popf xchg (bad) jg les decb ret pushf dec push adc pop lahf add push mov dec test or cmp jge daa jl outsl les or mov jmp sub and inc add xor adc addps xchg nop ds sub sub lods mov add add ss loopne aaa mov movsb nop add fsubs mov sub daa sbb sbb notb cmp pop mov push (bad) add jg pmuludq dec and dec xor add inc inc dec (bad) pop sbb xchg mov push pop fistpl stos or cltd jo cmpsb sbb out mov cmpsb insb ljmp inc jno fistpll xor out aaa loopne sarb xchg sub (bad) pusha pop adc dec imul mov pusha and adc jne test (bad) hlt xor daa push ficoml jne and nop out outsl add rclb and inc fsubrs sbb push push and jns int mov inc fwait mov and fwait bound and mov sub aaa clc js das rcrl inc inc push cs add inc sarb jb jle (bad) mov data16 pop xor add gs dec mov adc push or adc or or mov push or lahf dec ficoml pusha pop push lock inc cwtl jo jge mov fs jnp lds outsl loope,pn clc ret xor push loop mov fwait rolb rorb mov das cmp add cmp jle movb mov mov fcompl stos and (bad) push mul and or adc xchg enter add js adc and sahf mov stos arpl sub xor cmp pop xchg int3 mov dec add jo xlat scas roll pop lret add roll pop test cmp cmp sbb movsb xchg dec mov lret sub pusha xor and (bad) dec or mov mov outsl xchg popl adc iret xchg cmpsl das mov insl mov pop lock je out xorl imul adcl xorl and or jns imul xor sti inc cmp push sub or rolb adc imul dec add add and sbb add cltd push icebp inc les cmp cmp pop push flds xor inc pushl ret je mov pusha dec jne cmp or adc push sti or pop push iret add in push lcall mov dec sub lock cltd jmp jne ja scas adc fild pop lock inc xor paddusb stos pusha or push and loopne loopne xchg push or ficoml imul je pop stos or imul aad inc xor rorb enter outsl xchg xchg add cmpsb cwtl xlat mov sarb jg add ficompl push std push xor orl iret jle rol das cld mov in insl fcoml ret lds rorb and les push add or jl mov push fs arpl or push push jle ret mov ja xchg mov cwtl push stos adc imul addb mov and mov dec pop adc jne sub daa adc loop or adc xchg sbb or inc nop popa add and or and or mov xor jbe ljmp aad dec ficoml cmp adc (bad) jb inc cmpsb pop xchg lods push push rolb xchg decb sub sub cmp mov sbb imul adc clc clc lock dec jae or in or pop gs outsb cmp arpl or int3 fmul aam mov les mov inc imul cmp add pop daa mov mov nop mov fimull jo fcom or and pop xlat pusha std pop pop or push movb or adc add cmp add and sbb cmp or xchg push sbb je sub dec mov mov inc shrb or lret add clc or rcll insl jnp ret dec mov dec mov inc repnz or mov mov push repnz push dec or fstpt pop add sub push (bad) mov mov jmp inc and ja and adc inc jae pop or loopne adc xor or outsb adc jnp dec mov adc sub popf or add add dec sub dec or mov pop ja adc fmul adc movhps mov jo mov and into adc into inc dec add add (bad) mov adc loopne push ljmp sbb and jle sbb fsubl cmpsb cmp fmull fcmovbe insl xchg or dec fadds fstl imul mov rorl dec les sbb std jle pop xor sgdtl xor push jb push mov sub add ja mov xor mov (bad) shll pop pcmpeqw jo mov xchg aam rcr mov mov rcrb test aaa adc dec pop enter add push mov xchg ss jnp,pt pop add jne pop adc test fcomps insl mov cmp lahf adc jns mov repz push jns in and lret push push dec mov pop rorb mov pusha sub fisub or fmul lods cmp sbb inc or ljmp inc sub in popa push in jmp pop pop cli mov xchg push xor push dec addr16 push ret fs loopne imul inc dec or mov enter add xor push clc and mov sub test fcoml xor dec aam hlt add mov js dec sub push dec cld mov cmp push stc and fs fs xchg xor in adc fcmove mov push push mov xchg cmpsb jmp addr16 or iret dec leave subl add mov cmp add xchg adc (bad) push push mov sahf push dec adc lods fild add (bad) add sbb mov imulb iret push fldcw adc or mov jo pop or xchg lods into call adc insb jecxz xor mov inc adc push cmp inc and mov scas imul or fsubs aam add test xchg add imul inc push insl pop xor pusha cmp aam gs adcl and pusha add adc sub lahf push outsl sub pop aam es arpl jmp fdiv (bad) mov push arpl loopne dec dec xchg push adc idivl or test and or or xchg arpl fs cmp jg adc lods sub xor mov xor je test mov jne aad cmpsl mov inc test loopne sbb jne fimull jecxz xchg sbb jg lds ret mov adc dec fild mov out inc jno out adc adc mov add aad add mov dec pop shrl mov xor mov add adc cmp add imul add test cmpl or and call das jmp lea adc lock add jae cli xchg js mov jmp or or xchg add stos add je pop mov dec repnz rorb push push and insl mov int lea ljmp adc push adc jns sti and jno cmp dec sub fisttp fistpll addr16 imul mov jbe es adc pop daa push lods adc jg xorb imul and lock or fiadd addb int3 or cmp adc mov inc stos fcom push push push mov push push or js mov adc mov rcl xchg movsl and mov mov xorl mov sbbl dec or push hlt add bound jne mov push adc mov adc push stos ret inc outsb xor in sub sub fwait call push ret add cmpsl mov and jbe bound adc andb xchg cmpsl sti dec add cmpl sub ja xchg testb or mov add arpl scas and mov add jbe je mov sbb xor inc push push lret fsubs inc fwait xchg push add out aam add or repnz (bad) fwait pop fnstcw xor adc pop loop jl xor sub xorb addb icebp rcr scas jne jnp dec add cmp daa xor test pop es fcmovnu (bad) insb cmp jle pop sub or dec hlt pusha dec push pop cmp test push dec push sub jp addr16 cmp and pushf adc lahf rorl fs (bad) mov jno popf or xorb in inc inc lds sbb cs push sbb or dec mov fsts cmpsb xchg jle or inc mov push push mov stos dec cmp add loopne sti push xor pop rcll push sbbl fildll xchg and stos mov sub add ljmp rolb rolb add pop aas int lock mov sbb scas lds xchg or push or insl sbb fcoms xchg dec dec mov lock arpl push icebp add das sub daa cmp or ds add pop ret sub ret or and sbb mov xorl pushf loope push mov call lahf dec mov sub mov sbb (bad) push in je gs inc addr16 dec (bad) outsb adc test fucom nop or movsl jne pop add jmp or int push push mov push dec jl cmpsl cmpsl rcrb ret insl or adc ja arpl xchg (bad) sub pop cmp mov pop (bad) insb lods pop das loope mov mov mov or sub cmp adc in test push inc mov push test mov mov add mov add hlt lds cmpb push jnp mov stc imulb pop cmp or jbe lea mov push js sbb fistp mov cld cmp jmp push push rcrb scas jg nop ja ret cmp je pop push pusha mov mov mov xchg sub roll popl mov iret test xor out push lock sar jp adc outsl movsl test push fldcw and test pusha mov (bad) iret aam dec inc sbb mov das add sahf or lahf das shlb fs sbb fcompl cmpl mov pop mov sbb (bad) lock pop pushf ljmp loopne pop add loopne mov fs nop sbb add frstor (bad) pop (bad) mov jecxz andb not int rorb imul arpl jb dec bound and outsb (bad) mov pop or (bad) dec add xor out mov jp xrstor cmp jne js sbbb test inc cmp push inc sub lahf loop dec inc mov mov adc inc xor in jg xor decb add and nop rol inc add or fcoms mov dec cmp sbb outsb mov cmp sbb out gs ret push dec jg jno jne gs jmp xor cmp xchg or imul ss and adc mov (bad) cmc mov outsb iret xchg cmp push fdivs inc or add sub ds push loope (bad) xchg test cld sbb loop (bad) mov adc mov jp test ret sar into flds divl cwtl pop fs push mov inc sub mov inc outsl nop xlat dec and ss inc inc add sbb or aas add loop pop lods loopne add jl stos mov push jmp sub jmp aam ljmp adc fs jp or popa pop pop add sbb and mov pop sbb inc adc addl jmp add push stos scas in sbb imul and or pop movsl or fist aaa cmp add vpsubusb mov xor mov push mov lods jle mov inc and jno dec cld push and clc sub je fistl mov or decl xor hlt out mov pop nop enter fldpi aaa movsl daa inc cmp xor (bad) sub hlt mov inc add mov cmpsl nop std push add rcll adc jg sub adc pop adc lock push mov sub mov adc add dec push add jno sbb jp push test (bad) push pop push adc push push fdivl fdivrs lock inc xchg addb adc cmc ja test pop sbb pop in xorl adc jne push cmp pushw and sbb inc adc add fcoml jl je and add pop xchg add xchg xor xchg addb push xchg mov and add or out sbb ret inc fisubrl dec xchg mov adc and mov pop and int3 and mov prefetch fild je cmpsl pop or and sub push xor fs (bad) dec cmc test mov dec imul adc sub ss (bad) lods jle adc jmp mov scas sub push xchg jb mov mov cld addl xchg xchg sbb and jo dec inc popa (bad) sbb cli scas mov or xor cmp mov pop sub add inc mov sbb jle jb arpl mov popa lods mov pop mov adc sbb or sub inc cmp fldl push and or (bad) sub xchg mov adc fs movsl dec xchg mov inc or idivb mov dec cmp xor inc ret cwtl cmp cmp cmp push andb dec sbb mov mov pop pop test xchg or add sbb sbb push jne ret cmp cmp jo rolb ret or addl incl push dec insb cld test pop mov push in mov add pusha cmpsl or or or push add test imul mov sub aaa or inc in jg mov movsb and push mov pop xchg mov pop addr16 sub or cmp push aam adc mov pop mov lods inc mov push fs out sub and je jo int3 cmc sub jmp ja daa insl lret jne jne and mov inc scas ret inc xchg cmpl movsb sbb insl and and jp (bad) lock rcrb cmc jmp or es mov in push inc mov mov call subb (bad) inc inc pop add and icebp mov adc or aad rcrl lret sub sarb adc (bad) rol pop jns lret xor inc clc mov pop ret mov mov add iret ret lds cmp pop sub sbb ret test pusha sbb std push sbb cmp push jnp xor out cmp in jmp dec sub les testb movsb sti jecxz mov jmp push add cmpsl xchg test and test cld jnp push into push adc fidiv stos mov cmp cmp sub or xor sbb notl cmp mov push (bad) or test mov mov loopne pop scas inc pusha test rcll daa or inc dec cmp fstpt inc movl xor scas loopne mov or sub inc add pusha sti and dec push bound jne jns jmp or sbb test inc adcb xchg add mov ret stc aam push lcall pop or sbb xchg xor pop or or push xchg sbb lock aas pop adc push mov addr16 inc adc bound push enter sbb pop mov (bad) adc out lds dec inc sub daa (bad) push bound sbb push jp fidiv loopne cltd jne sbb sub pop les sbb push inc mov add sub xchg add cmp sbb jo push out and sbb outsb adc mov loope icebp adc mov add xor clc sub jle loopne xor add in aad cmp mov dec xor repnz add add dec pusha les mov xorb cmp mov mov jns out fmuls fcomps mov jg data16 jb cmp xor push or fwait cmp jle pusha add mov mov clc testb xlat sub aas adc cmp ja add lods add outsl fwait or add mov pop jg cmp insb (bad) xor popl sub (bad) loop add call dec and sbb or push push sbb lahf test dec sub xchg pushf or and (bad) loope (bad) fcoms addr16 hlt xor shl dec xor add pop test hlt addb add xorb clc cmpsl (bad) xor mov jg push mov xlat pushf add xor pop sbb adc ss rcrl dec arpl pop dec xlat sarl js jo and ret and sub push daa test arpl jne xchg push sub cmp ds lds adc pop cmc aaa adc add aas cmpsl jno sbb (bad) xor clc repnz adc xor pop pop inc jnp icebp pop int3 test rcrb jge faddl adc jge add xchg lock mov and xor pop adc rcrb sbb ljmp clc lock out adc jne sub (bad) dec cmpsb test or adc aaa xor add inc test xor sar lea loope and or jge loopne pop (bad) pop add and fwait sbb cltd push test jmp sbb lret xor or inc sub rcrb jae xor push and in add shll shl xchg cmpsb fincstp pushf (bad) inc inc pop mov repz xor iret push inc clc cmp mov or dec std push pop movsb aam mov faddp xchg add fstpl or and or hlt adc add ret roll adc mov leave out pcmpeqw inc sbb enter or adcb add dec and movsb xchg inc pop add mov test mov mov inc jo inc pop sbb add lret xor popl sbb aam mov roll out or jmp push insb out (bad) xchg sub inc mov or cmp lods popf ret dec sbb add xchg fmull push bound dec inc lret outsl push add mov push dec inc push stos xchg cld push inc sub test mov cmpsl sbb or (bad) popa inc insb mov mov (bad) inc mov push pop fdivrs mov xorl add aad in add sub mov inc call add imul or (bad) lock sbb test (bad) fwait adc (bad) adc imul or mov lret inc cmp dec pusha jb cmp xchg xchg cltd mov sbb pushf and imul test cld sbb test popa popa test test fwait jno and pop aaa sub push push or mov sub das add (bad) or add push mov mov sub dec dec mov movsb or lock and (bad) jns adc cmp or mov or es push jne jbe mov add hlt add add iret and lahf lock pop push mov pop scas sub mov shll jp icebp push mov or pop push dec iret adc icebp or js in sbb push or sbb mov rol mov fs lds xchg pop xor or inc push push xchg and xchg rolb and movsl pop dec mov push test cmp jne mov pop out xchg hlt jle loopne,pn sub adc push in hlt lock pusha movsb rorl or sbb notb inc dec aam cmp sub outsb add movsl and push inc stos sbb mov mov jp sub lret push je js and pop cmp pop xchg push (bad) adc and adc das cmp mov adc rcr divl (bad) notl fs adc test jecxz data16 pushf test sbb popf dec or nop enter es mov sbb (bad) fidiv push pop or cmp sbb cmp adc jo sbb sbb inc sub fstpl inc mov (bad) or add add pop adc mov push das sub jno imul cmp dec jp icebp or ja xchg or fldcw (bad) xchg cmc lahf pop jg pop push mov sub adc push sbb fildl out inc lea mov scas fcom push adc loop (bad) lods mov adc std inc push fsubl push lret cmp popa jle pop shrb sbb jecxz jg inc mov xchg (bad) loope sbb push fldt mov inc dec faddp lahf inc gs jnp dec inc mov adc sbb (bad) xor scas dec push mov mov push clc push inc cmp stos sbb sbb jne add stos mov inc cmpsl pop sbb std pop dec xor adc pop fisubl and aas icebp sbb daa mov int3 xorb pop inc sub sahf lods or daa leave sbb add pop in sbb xor movsl dec push dec mov test jmp mov add sub adc sub lods sbb rcl adc and mov fs push xchg dec sbb movsl test xor fdiv in pusha js loopne lahf push push inc push loope sbb mov in and nop out sti pop dec lock adc or mov sbb loope dec in es jbe js push sbb dec mov mov outsl xor dec jae andb cmp jne pop loope,pn popf jp adc xor add andl or push sub push or ds imul mov or inc outsl loope add jb push pop adc add xor fcoml cmp dec mov fs sub mov or cli pop push adc cli mov push mov push test pop add imulb cmp push push pop mov pusha jb aam inc lods jp cmp add andl add and adc sbb insb loop scas in inc ss je minps push adcl jne sub adc insb pop dec fwait negl (bad) daa cs lret (bad) lcall pop movsl sub rclb inc cld pop mov xchg push add lea push adc in jo movsl repz lods cmp test adc test mov leave lret sbb or mov imul jb add pop popa xor in mov or in arpl sub fs and sbb sbb add inc xchg cmp sarl sub cmc and clc sbb or rolb add fistpl fnstcw arpl insb aam push std bound mov jle push pusha add rcll mulb icebp in je mov jle jnp mov ss out fnstsw daa ss ss es inc daa mov push lahf test fdivs scas push inc mov adc and add push inc push and nop (bad) nop jmp mov push lds outsb jmp unpckhps pop inc mov xor inc sbb iret jae sahf pop aad and inc pop aas aad mov add adc add dec pop or sub insb inc xchg test mov jbe add inc jo xor ds cmp push pop insb adc loop (bad) sub cmp cmp data16 mov pop push and lds cltd pop jmp das mov adc fisubrl inc lods inc pop das fadds push mov or adc mov mov movsb adc pop hlt lret and push pop jmp adc push loopne aaa mov inc iret xchg inc in or add scas loopne inc enter inc mov or or dec inc mov nop or adc jo pop ss or pop cmp jl or pop repz mov pop mov sub jg test add dec sbb push xor adc adc stc mov inc cs sbb jg and xlat ds and and add sub inc (bad) dec dec mov mov sub nop pop fstps add jne (bad) fdivs cmpl pop mov sarb or pop aas xor or aad sbb sbb xchg push or lret mov xor dec inc dec pop push test or and fisubrl mov pop imul stos rclb inc (bad) fsubrs mov outsb push icebp popf hlt xchg sbb mov jne mov test mov cmp sub in push cmp pop (bad) pop add jecxz dec ja and popa mov nop jb arpl cmp xchg cmp sbbl jno push push push jo adc out test sbb das or cmp and popf xchg xchg push inc xchg sbb inc jmp in push out add mov and adc jecxz inc xorl add or inc jo push pop loope xor pushf divl jle inc and movswl xchg add test and inc xor push lock (bad) sbb cld int3 add fistp mov cmp lods dec add ja xchg xchg movsl sub aas imul sub imul imul int3 bound pop jmp adc xchg mov jae add daa shll js ret cmpb jmp pop xor sub outsl dec pop cld xlat and loope (bad) mov push sbb xchg test add ds xor test in or add sub push lods jl xchg jg adc orl pusha fwait inc or xor push xchg xor rsqrtps sarl (bad) xchg mov sbb adc mov popa fisttpll xor push cmp mov cld das push jno pop inc adc pop (bad) roll jo (bad) lea enter push and pop add imul and adc dec adcb pop mov mov push movsb xor inc adc or and push popa cwtl fs sub sbb jmp adc daa je cmp inc mov and loope adc add fs adc cmp cld or and add adc (bad) sbb adc sti push sbb stos cmp sahf fldt test add push dec andb aaa lcall jmp push jnp sub nop lret jo in sub je js test mov jb xchg or call mov mov (bad) in cwtl cltd or mov or push cld lahf leave scas inc and push add pop push fbld cmp imul mov push inc fstps imul push gs cmp imul adc jae push imul xchg shrb imul in inc out sub arpl pop inc xchg leave (bad) ss jae pop fidivl jo add insb cmc sbb push cmp xchg inc push es call jp (bad) out add mov push int mov add add mov jnp stos test (bad) bound push sub add or push mov jno xor popa xchg xor adcb je movsb hlt mov fldl jecxz ret mov push add es das or cmp movsl andb and pop sub cs inc pop daa and fsubs push fisttpl or sbb cmpsb push pop jo mov pop in rcll (bad) leave and popf test xchg xchg lcall sarl adc sbb or je xor xor fwait mov jg insb fisubl lock and sub test and sub lahf pusha cmpsl cwtl sub dec pop dec jno add int3 ja push inc fadds lahf andl iret push fdivs sub hlt mov cmp mov adc push popf and push push or or pop cs xorb cmp cwtl scas or inc fisub xchg pop stos data16 cmp ja outsb pop inc lods adc pop and mov loopne push inc cwtl test bound repz inc push mov cmpsb push or jnp cmp xchg nop push mov add sbb mov lcall add lods mov sbb dec call mov sub (bad) fs mov js xor ja push rcrl sahf imul push push fs push cmp aaa and sbb seto aas inc aas inc pop mov xlat xor daa jmp clc (bad) out jnp jne sti rcrb lock inc leave dec rclb popf addl xor xor pop xor mov cmpsb scas and and ja add (bad) jl fdivl inc je jmp mov lea and sbb adc loopne jl sub idivl loopne fidiv pop adcb jo (bad) adcl add or mov xchg stos mov mov inc enter insl inc cmp inc lods movsb mov inc sarb outsb xor push lret inc xor xchg jo out sbb cmp call insb or mov mov xor adc mov push add (bad) push or pop and clc or xor andb ss arpl popf push jbe mov jge fcomip inc inc je imul add dec mov ficomp js arpl adc xchg nop imulb (bad) fstpl jne fstl fs inc pop lds pop pushf add xchg push sbbb adc inc and adc inc mov cmp das movl xorb add add popf out fwait pop push pushf pop jp inc and dec mov add mov xchg add faddl vmread aad pusha add or push push lahf pop sub inc and popf pmaxub add jp shlb mov xchg test mov xchg clc push or repz shll xor pop pusha iret repz fs cmp repz addb outsb imul cmp mov movl push adc push xor lods inc or mov aaa js mov inc sbb xor adc sub cmpsb mov xchg jg dec aaa lea aaa test imull pop rolb mov pop mov insb inc inc xor xlat es idivl icebp push lea inc cmp add inc xchg pop sbb les dec adc xchg pop or pop (bad) (bad) movsb jnp loop push rclb les js repz xor fucom ror add lock (bad) sti (bad) in adc dec mov adc dec imul leave in xchg xchg pop out pusha add xchg sbb (bad) fiadd jp push xor or test cltd push add xor sub loope push (bad) rcrb les cmp cmp inc (bad) lret mov pop or and sbb rolb and xchg subl ja (bad) mov push ja aad inc mov sbb xlat leave xor mov sbb rorl cmpsl (bad) sbbb push xchg mov xor and jb call cmp jne and xchg sub pop mov repnz jle cmc rcrl cmp loopne inc (bad) jmp jno pop cltd aas add (bad) lock add (bad) xor (bad) adc inc aad inc daa or xor inc and and push clc cmp cmp mov mov arpl enter add rol (bad) in je push xchg or xor or pop clc mov int3 adc push and sbb out das add jecxz cmp addl jmp sbb push add test push dec add nop sarb fwait adc call cmpsb test sub dec aas push push pop xchg inc xchg push xchg inc and mov push ds das or mov or jnp and je add xchg pop in cmp inc ljmp out inc sti mov add dec jecxz adc pop dec sbb sbb orb adc inc sub leave inc cmpl and adc daa push or xchg pop sub inc js add pop mov push inc xchg mov shrb mov jle adc in and in or sahf jecxz add mov push sub xchg push mov (bad) jecxz adc imul push je mov adc js dec xor xor xchg in inc and lret outsl jae add add cmpsb inc dec or (bad) xor cmp cmp push push mov (bad) mov push mov popa ss rclb daa xchg mov shrb pop fs outsb push dec jne adc fmull loope jp xor roll mov scas out add adc (bad) pop xor std cmp pop loopne xchg or inc sub mov mov cmp out xor cwtl dec jne test push add out and add xorl movsl inc pop loopne mov jnp fsubrl je or xor icebp mov gs ja rol rcrl mov movsl mov and xchg add push pop jns outsb add sbb or dec incb adc add mov nop sub xchg (bad) ljmp into dec lods xor push add adc out adc aad pusha call ror js int jg and (bad) cmp je test lret out and xchg or jl and add and jmp je jne jnp push insb jns or js mov cmovne dec or jo jg scas mov adc call sbb xor lds mov out repz lds in (bad) push cmpb push cmp xor sbb fimull sbb push mov (bad) (bad) and (bad) daa add in orl pusha fisubl lret jno mov test movsl mov or xchg jg sbb or sbbb adc or and les fs clc or xchg sahf pop or rclb or add pop ds xchg xchg fsubl mov adc push rcrb test iret gs cltd (bad) daa inc inc in pop sbb mov pop sbb xchg inc imul jmp xchg cltd js pop xor aas mov shrb inc and lods push sbb pop inc sub push scas rolb push mov cs jle and fist pop jge ss fs mov xorl jo add cmp adc pop dec insl addr16 xchg faddl mov mov sub mov je push push movsb and stc xchg add rorl sahf sbb xchg test fs insb jp sbb aas jmp clc jnp or dec or (bad) out xor test push pusha mov (bad) push aaa pop xor add xorl sahf movsl add dec jmp add stos cwtl or mov fstpt inc scas mov push aas out sub inc movl xor xor dec gs das outsl mov leave cmpsb (bad) mov adc xor add xor inc mov xor ret pop sbb dec push fistpl das outsb in dec and sbb jecxz inc add orl (bad) jl ja add ds or sbb xor pop fs mov movsb roll inc cmp movb add cmp and int testb sub add sbb and sub pop bsf outsl sbb call pop bound sub lea rorl test ret inc add call jne jge inc push nop call les mov das icebp aas or mov sbb xor out jp sbb ror push lea jecxz adc pop xor jl repz add mov fnstcw mov xchg fs push xor popa divb je inc sarb xchg push sbb jno outsl and cmpsl xlat insl test inc push and sbb mov movsb movsw mov mov ds push pop adc mov fs aad es fs adc les cmpsb xchg mov je jmp or subb jg adc jecxz dec pop mov mov mov push cli (bad) lcall mov dec mov stc jmp insl cmp jbe xor adc cmp lock sbb lock or xor scas lods ljmp lock popf inc push addb xor (bad) jge jae push pop (bad) sti pop adcb fmuls jbe xor movsb (bad) iret xchg mov adc xchg inc sbb jmp shrl rol rcrb sti fwait cli xor lock jmp das inc cs (bad) cmc jo addl xor xorl push jge jno mov mov push push out faddl fsubs iret jecxz mov ds xchg enter nop adc jo nop out mov fwait incl adcl mov popf xor stos cmp sbb cmp dec xchg test dec inc or inc push hlt cmp lds and sub shlb adc dec xchg and in scas nop (bad) adc pop cmpl add cmp mov imul sbb sub jbe push push ljmp jbe sbb out jae aas rol push jns cmpsl lock adc xor dec adc and xor inc enter add push jmp mov push or jp jmp cmpsb push addl inc je enter mov inc mov mov (bad) loopne jl dec icebp orl outsb xchg repz stos cld push loope decl xchg jbe cmpl or popa call mov push movsb sbb xor xchg or setle xchg cs push pop out and fisub aaa es (bad) inc (bad) add pusha adc mov adc mov cmpsb inc lea xor test cmp mov push and clc or inc pop fsubrp or or jno lods xchg pop pop cwtl neg push icebp mov push inc push daa add add sub movsb add lahf test push data16 dec adc dec inc je cmp mov jno mov cmp jecxz xchg adc dec shrb lahf add cmp lods mov mov or xchg ds jl bound dec out fbstp dec loopne or in ds call sbb fadds mov cs arpl cmpsb nop ret addb gs cmp ror fcomps rol inc xchg push cli jmp add add popa ja jo jno insb aas jne addr16 aam jo cmpsb std jae jl inc inc mov or mov arpl inc ret bound scas sbb sub push bound loopne push cmc xor mov test les mov outsl and loopne or push inc mov outsl arpl mov push xchg xchg mov mov aam ror insb ret dec cmp inc jl pop sub loope stos inc aad pop add enter inc jbe push push je mov jmp adc lret push nop dec xchg pop fsubs push jb pop aam mov inc and sbb int neg es mov bound xchg and es aaa (bad) sbb adc daa es sbb inc outsl add dec fwait insb outsl inc dec xor and dec mov adc xor xor inc xchg enter xchg cs jnp and xchg inc sbb lods push sti das cmp fmuls add je ficompl inc insb cmp adc adc test adc rorb pop cmp hlt mov ljmp clc fisubr mov loop xlat cmp cs imul pusha xor and int3 xchg push xchg clc add jb dec jl test or pusha dec cmp or xchg adc icebp fistpll mov scas shl out add lea into (bad) fisttpl inc loopne sbb fistpl cmpsl sbb mov adc dec sub jecxz xor aam dec dec or arpl adc and in push in pop xor adc sbb fs jo xchg rolb (bad) loop sbb jmp and incl push xor pop outsb push sub jl cwtl cmp daa cwtl pop mov rolb sbb test and inc clc jmp pop mov (bad) push cmp mov adc decl inc push (bad) ret dec inc pop push fmull dec jmp push adc es fild nop sub xchg imul in daa push pop sbb push add sub cmc and sub aad test inc mov push dec push xchg nop inc mov enter leave jns and inc inc ret mov mov adc fsubrl cmpsb mov out pop sub out aaa lock aaa mov dec jne or jne dec cmp dec and scas es or xchg loopne inc pop pop dec push gs dec xchg or lock xchg mov scas inc lods xchg jecxz add imul inc add xorb stc xchg hlt cmc add adc pop mov mov and push cwtl mov arpl mov xchg adc dec (bad) xor cmp jne scas nop mov dec lods add dec inc popf cltd sub dec inc or push jg mov pop mov and push mov loope and push jo jno mov fs cmp jp inc fs add push out mov sub adc imulb jmp outsl sub sbb insb subb xchg adcl add and push and lahf les push mov push cmp add dec cld pop pusha xor pop lret or scas add push cltd adcb out xchg xchg (bad) cmp ret add add inc jo or (bad) adc nop xchg xchg adc and pop aaa push inc imul or sahf pop or xchg mov jb add std or pop enter add incl sbb data16 push bound insb push clts pop and cwtl into and dec (bad) push pusha scas adc cmp fs pop and adc sub mov xor out push into int3 xlat sbb js arpl shll test sub lock movb sbb mov int sub push xchg sbb cmpsb or (bad) mov add push sub add cmp mov or sbb or xchg adc aaa vpaddb ftst add insb xchg addr16 push xchg dec call adc pusha test inc jl inc scas shrb stos fiadd jecxz mov push fmul repz inc push mov nop pop mov pusha sbb out push andb (bad) (bad) pusha iret inc cwtl scas mov ss out loopne cmpsb shrb push mov (bad) mov ds mov (bad) xchg inc in push cmp push int3 mov leave imul iret mov inc add xor fdiv xorb call rcrl int pusha into lret imul sbb ss clc adc adc cmc dec orb lea test pop loopne jo insl or push fisub fs and add fisttpll imul dec cmp enter pushf fist mov (bad) ret add pop dec mov adc sub rorl cmp scas or lret inc dec or sbb add orl ss inc dec jns orb inc jo and xor adc pushf lea rcl popf mov mov jne cmpsl mov cmp nop pop push mov push outsb mov push inc outsb adc lahf or popa icebp mov push fnstcw or imul push pop (bad) in addb ss mov add (bad) pop xor push pand lock je push js adc test xchg add add adc loopne insl hlt cltd pop ror nop xchg or mov lea inc loopne out push dec mov mov aam adc sbb shlb nop sub nop adc test or adc pop inc adc sbb pop dec sub mov movsb push aam stos or mov pop iret enter mov fs add mov hlt push loopne in je das cmp pop adc inc xlat fdivs sbb roll adc mov mov popf jmp cmp dec add pop popf fisttp lds test cwtl popf das and adc sbb out lret add out mov in imul and mov or nop or test or mov jo add pop dec push add sbb rolb fidiv inc or out add xchg mov aaa pop movb leave push das pop iret inc in out pop int3 test icebp sbb xor inc and add pop adc mov mov out andps mov jns cmp jo add or inc or jo fstps loopne xor jle push pop mov or xor je fnstenv jnp xor jg rclb cltd bnd fdivs add sub pop mov jbe mov sbb jo fnstcw rcrl adc sub into (bad) mov sbb int fmul push push push gs mov cmpsl pop test call scas sahf jbe dec test sub push in pop addl pop pop and leave mov or rol es mov enter pop orl push and xchg and cmp dec cmc fbld cmpsb adc xor enter imul xchg or mov jns xor push dec pop or fs in jo jo ret or paddsb (bad) mov sbb (bad) aas cld out out insl imul enter ds pusha xor and pop mov shlb xor mov xor xor inc addb inc mov dec dec dec dec dec push push push push push pop xchg jb rcrb test imul (bad) push rcl dec insb sbb movsb cmp or and xchg dec pop sub push mov insb pop pop (bad) adc mov adc cltd xor int aas sub and std out mov out cli and add shlb add out mov jns sbb add fs adc or (bad) mov xchg (bad) pop cmpsb movsb into aam (bad) cmp pop add (bad) sbb test mov cmpsb mov cmp ret clc sub clc pushf push mov or sbb popf out xor jge rcrl (bad) mov sub sarb sbb cli push and inc lcall dec xor xchg dec ja lahf das icebp and test add cld jnp or sub loope push stc mov xor push inc inc ja pusha sub aam outsl adc ret mov dec mov jmp xor test sub xor xchg test dec push (bad) cli or mov inc mov add inc and pop xchg xor xchg lea lock pop dec push addr16 mov push push icebp in mov cvtps2pd sbb cwtl cmp cli lods iret fiadd bswap or adc mov fidivrl push rol (bad) mov push push lods or jno neg (bad) in pop mov mov (bad) lea pop push mov andb sbb out mov sbb iret popa inc xor and mov sub and xlat sub lcall jl mov xchg (bad) or jmp inc (bad) sti push add dec or add adc xchg lahf mov pop mov (bad) out daa xor jbe mov and add smsw adc ret dec inc movl push cmp pushl sbb add adc xor pusha je mov add or cmp jg mov pop push push mov sub mov loope jne (bad) pop add cmp insl clc and ficompl fwait (bad) mov push ljmp jmp adc mov pusha jbe arpl shrb in outsl sub sub insl aad cmp ja jo xlat outsb mov hlt pop xor jmp ss mov add xor in add pop leave pop nop pushl hlt mov jmp in xlat adc in push jb (bad) mov dec adc aaa inc stos (bad) pop clc or and xchg and or xchg xchg rorb test adc call add lcall imul push loopne insb or ficomp and daa imul xor mov cmp xchg addr16 sbb sbb push sarb ret gs iret adc inc or movsl inc pop inc xor insl dec pushw push add sub xchg dec mov or dec stos shrb xchg add js xchg adc mov adc aas mov mov aas sarb push mov add out add or dec cmpl pop cmp add enter add jmp fwait lods xor imul sub out mov add cmp add mov cmp aas aam cmp inc inc lret lds subl out fs movsb (bad) or adc sbb shrl mov outsl jmp int3 mov mov jle ret fiadd cwtl cmp pop cli pusha jne push pop inc adc jno jg mov mov dec and lcall pop dec scas (bad) insl movsb mov iret rol clc scas test dec cli xorl cmpb sbb adc fneni(8087 dec imul or sub or mov add test pop pusha jle add adc sbbb inc adc pushf adc lods mov pop cbtw dec xor (bad) mov sarb (bad) push add inc (bad) sub or push or lock cmpb or pop and hlt xchg push dec shrb ffree jo sti f2xm1 xor xchg push adc inc push cmp mov and (bad) imul bnd add xor test mov cmp cltd cmp rorl int inc into pop xlat or inc inc adc insb dec xor push dec js or dec push (bad) push jge test sti adc lock cmp cmp sub adc push xchg lock adc jg les mov into adc sbb pop inc push adcl dec mov and test shrb push lahf xlat push cmpsb pop test rolb dec sti xchg mov lds sahf sbb ja pop ret inc jp push ret xchg mov xchg xor lea into push pop adc mov fdivrs mov popa cwtl push nopl inc es inc sbb (bad) loopne jo jae and jge jle push dec pop sbb inc xchg les lcall and cld (bad) or insb mov mov sbb mov shrb push mov (bad) jl adc push push adc push push je jp jge dec lahf call test adc je je cmp cmp pop je adc and lcall loopne clc or push popa decb inc mov pop xor mov cmpb ljmp xor dec and pop lea and shll xor (bad) (bad) inc mov rolb push pop (bad) daa jbe jnp inc test movl mov mov pusha mov xchg shr xor sbb push popl inc es pusha and mov jp sbb inc jmp adc fdivr dec enter adc pop nop or xor push ds call push inc jecxz mov pusha add jo daa ss cs (bad) leave add or pop or sbb xor mov or loope shlb xor mov ret sti loop fdivl lret and mov and add cs addr16 sarb jge sbb mov jecxz mov and shll dec add push xchg andl dec dec inc movsl xchg push hlt jno cmpb mov cmc inc push push mov fucomi scas lcall inc cmp jl icebp insl cltd call mov xchg or rol xor adc add or std subl bound mov mov sbb test push mov in sbb xlat cmpsl mov popa rorb or and add rsm dec mov xchg mov arpl andb mov dec push pop xchg xor adc cwtl (bad) nop cmp (bad) call stos inc (bad) ja cld adc jecxz cwtl xchg fsubs scas fisub pand xchg dec imul popa push inc imul adc popa fs stos loopne stos inc ljmp movb cmp xor sub std mov movsb inc iret dec pop std adc lock call hlt enter mov popa das std push inc xchg pop dec jne cld nop cmp mov inc stos xlat cmp sbb xor out jle in int3 les and mov sahf mov les push sbb ss orl (bad) jne pop adc xor das sbb and hlt mov add sub lock mov inc xor sbb cmp xchg cltd inc nop push (bad) mov dec dec dec sbb or and out ret sub frstor jnp push fsubrs jns imul aaa dec fcomps bound inc lea mov push mov or jno or inc mov push leave inc imul pop scas arpl mov inc adc cmp mov icebp push fsubrs mov mov add mov push mov pop mov jge clc ss test imul cltd add add mov fwait pop push or scas mov (bad) sub fcmovnu push add inc push sub and scas pop lock roll js inc arpl mov cltd jns pop fs or and lea add test loope or lock (bad) xor sub shrb sbb lods sub pop les stc iret hlt cmp cmpsb ss hlt hlt pop into hlt sub inc add or (bad) mov movsb or imul or scas pop jns inc jne add xor sbb fbstp leave lock push lock jb dec add stc adcb (bad) ds or ds pop fildll push xchg inc pop adc xor dec add fadds sbb or sar loopne mov test xor ja popa fcoms or aaa fistp sub push adc cs push sbb add popf mov mov xchg or mov fdivs lcall ss iret push inc sub or imul mov sbb add or cmp and xor ret fisttpl dec push adcb xlat xchg pushf or (bad) or movsb add xor xchg xchg inc mov sub jmp add xchg std repz and pop aam cmp sbb pop pusha cs jno enter call ret pop lods inc sbb call adc adc pop xchg pushf sub push (bad) pcmpeqw adc sbb adc push dec daa call push clc xor xor or setl sbb clc leave push and xor or clc sub sub inc movsb nop (bad) xor pop xchg add repnz lock clc in repnz scas (bad) je dec sub add aad arpl rorb mov pop lret mov nop or movsb repnz call test add push and mov jae cmp pop cmp and push out loopne pushf pop adc cmp dec loopne outsl shrb and rorl and or fld div jge push push push testb outsl cltd stos add adc mov insl (bad) imulb arpl xlat insb lcall inc sbb jle xor cmp jge ds (bad) fbstp push and les pop sbbl lcall sbb aas mov add mov mov je loope inc sub fwait pop sub fisubl push sbbl and adc xchg fbld sbb adc cwtl outsl inc mov push cmp push xor jl int add pop jl or mov inc dec xlat out jge and movl pop es dec mov sub xchg lcall or push sbbl xchg mov pop fcoml sub add lret (bad) sub andps xor mov mov pop mov add (bad) ja push adc cmp xor adc loopne (bad) incl xchg push sub push inc call adc (bad) xor mov setge add pusha das xchg jmp dec dec lods ja inc movb pop mov lods dec pop xor push or pusha stc int es and int les xchg xor push leave cld adc mov sbbl xchg add cld jno stos popf ja sbb adc test xor or das sub or or cmp push and mov add xchg adc xchg ljmp lea incb add sub cld aaa push shl xor movsb fstl sahf lods aad fsubrl shrb sbb ret mov push cmova dec lea mov xor fidivr adc ret dec or test xchg inc mov dec jb pusha aad daa pop jg loope adc aas cmp sti add addr16 add xchg fstps dec sub mov adc je nop push les add popa outsl pop xchg add mov pop push and (bad) xchg mov fist outsl dec stos and cmpsl cmp mov cmp xor push add adc add add push push push out aas je hlt jae enter sar fsubrs subb enter xor outsb loope mov inc mov push jo outsl push sub or pop add jle test sbbb dec stos scas pop xchg pop popa or outsb ficomp ds inc push inc inc (bad) and inc mov je and mov outsb (bad) sbb test xchg mov sbb mov jnp jo rclb adc mov outsb mov cwtl inc add imul sbb pop mov mov lock sarb dec movsl or cwtl cmp fs divb orb popf subb nop push pop subl movb mov xchg es sbb mov sbb test (bad) xchg (bad) inc xor pop add out adc push inc dec scas push push jmp inc inc push aas jbe and lock cmp cmc clc int arpl cmp mov ljmp sub lea push jg adc test test dec out data16 mov pusha pop mov adc or pushf or out jmp out cmp and pop sahf gs loop je ret sbb and fmull add (bad) or lock lahf and sbb jnp pop and jmp enter jnp inc xor arpl xor jo or dec scas insl (bad) mov sbb lret or into adc inc adc dec aam fsubrs pop xchg adcl adc push sbb add push in mov (bad) adc js lahf ret adcl adc pop xor mov push adc add inc incl cwtl jmp ja or scas jno fidivr mov int3 test inc dec fsubl push push jo cmp mov icebp inc jmp mov out das and test mov xor inc cmpsl addr16 inc cmp xor push sub xor xor dec fnop imul aas and or (bad) jo loop ret iret fadd or int xchg aaa enter push gs cmp jl mov add lret and test in ja inc lret push cmp cmp inc dec movups and fsubl jb push and icebp dec mov mov or push ds fmull lock shlb or insb xor test push ja lods roll js push pop xchg rcl les lea pop lea aas insb push flds jae inc inc xchg xlat mov xor in pop xchg push imul data16 fstpt lcall cmpsb int3 sub fisttpl xchg lret insl pop daa movsl mov clc xchg adc dec stos xlat mov jl cli fild sub pop and cmp pop leave inc jb inc inc adcb push mov je or add pop inc imul in dec mov jne xor inc shlb pop adc push jno popf or jmp jmp imul mov dec fsubrl or pop enter xchg sbb xor dec or ja sub shrb ds add or inc xchg add push or xchg fisub or mov inc hlt or daa pop xchg cmpsb idivl sub clc es adc pop jmp and scas aad dec pop pop mov adc lds adc in and sub insl mov inc push sbb inc in stc xor inc call pusha mov inc dec jle mov push sbb adc and sahf mov cmp mov or adc add or lcall dec adc and (bad) add mov pop flds inc push xor loopne scas jno xchg push rep pushf jb out lock or cld push test (bad) push sbb aaa pushl mov inc add ss adc dec stc xor and andl pop inc incl xlat cmpsb inc ret cmpsl sub jo cmp add popf add xor (bad) (bad) jg outsl fcmove add call neg pop add out out daa sbb repnz (bad) jge xchg sbb test or mov (bad) add loopne mov add popa (bad) hlt sbb in loopne cmp loope add enter xor mov rcrb sbb jle fidiv les mov andl cld les jmp fmuls sbb jne dec push pop fsubr xchg cmp cwtl loopne fs jp aam sbb aam je push sbb inc cs repz xor dec and mov inc int lret xlat jecxz mov add lea imul repnz cmp push or lds mov mov cwtl shlb fisubrl adc insl mov ret int3 mov adc jmp inc jmp jnp sbb dec xor add je leave (bad) cli imul mov sbb and outsb xor cmp aaa sub dec jmp inc fcmovnu or shrb cmp sbb cmp jle scas adc stc (bad) jo xlat (bad) dec pop ficom jns cmp popa push fsubs or loopne adc test iret add dec mov movsl fmuls sbbb in inc inc jbe ret clc fdivs cwtl xchg addr16 add xchg (bad) (bad) jge push mov sub aas adcb mov jecxz xor cmc sbb inc sahf movb in test fsubr loopne and aad mov jecxz bound mov dec and push out fsubrs adcl call mov sbb cmpsl sub cmp pop cmp mov adc and xor xchg cmp dec or mov dec adc test add pop (bad) cmc mov ja sti jl inc test mov into test (bad) popf sub movb subl inc jnp push dec ret inc sbbl jnp dec js jge or inc test test xchg lret add pop jne or into or fcompl xor pop fmuls aaa dec and and adc mov test idivb jne mov mov inc pop cmpl mov push adc fstpl dec rolb nop and aam and cmpl sbb add cmp mov mov inc sbb inc cwtl lea lds inc cld fdivrs inc cmp popa call adc xchg add xor adc das inc inc jae ss dec sbb push xchg mov fwait mov stc daa dec and test adc push mov inc mov xchg push push addr16 sbb lahf push popa shlb sbb cs mov je dec add sub out lds pusha xchg mov xchg mov test lock movl push test sbb jae fbld adc hlt add cmp mov cmc pop (bad) and iret ljmp add sub inc loopne add andb imul xlat sbbl sbb dec pcmpgtd call pushf push int3 js and mov je cmp mov test dec (bad) cltd sub jle ds jge mov (bad) (bad) out mov push adc mov movsb out mov into aas mov push xchg cmp pop adc orl adcl dec cmp mov cmp (bad) push rcl push rcrb rcl addr16 ret (bad) insb stos mov dec mov adc push rclb jecxz and (bad) lods hlt and shlb dec (bad) mov push (bad) hlt push xchg fcompp xchg add nop pop pop cmpb xchg xor rorb add daa pop lods repz arpl sub inc jl adc ret fnop fcoml in mov lods lods add or lret xlat jge jecxz nop mov xchg int3 xorl pop nop loopne add and test cmp jp mov and add or sbb inc xor push pop inc insb inc fnsave icebp mov nop add scas inc and aas mov enter (bad) mov and push cli data16 cli add push stos push jge (bad) and and or je sub loopne outsl pop in in sahf or out xchg pop cmp mov rcl push mov ret mov xchg mov xor addr16 and push fdiv add in test inc test popa pop clc push sbb mov xor xchg sub popl dec lds dec dec rorl addb adc sar xchg adc sub add (bad) fstl pop (bad) imul je fistpl rcrb inc cmp je xor push shl xor lahf mov push rol mov popf dec pushf push fdivrs cmp test andb xchg cli ss add jp pop pop jecxz cwtl hlt add mov imul pusha add dec lea mov test mov xchg faddl jae adc lahf mov ret add push push sub add or dec jmp jne pop clc pop cmp jecxz xchg pop scas int add ja mov or das (bad) sbb pop cmp sbb adc les sbb pop push js or lea mov into or push sarb and movsl dec add xor add aaa adc jno cmpsl (bad) aam cmp arpl xor and inc mov mov xor push or call xor jecxz jae jl mov mov inc or fisubl lret or inc stos xlat fs ss cmpb push push inc mov sub push inc lods or inc cmc sahf add push ret xchg mov mov adc xchg sbb cmp xchg add (bad) pop jge cmc adc daa cmp aas in cmpsl push pop nop iret dec inc fwait or sbb dec jno fcomi xchg iret aas or scas cmp push nop or (bad) sbb inc nop mov mov adc sbb or jle sub lock xor fsts push mov push ret cmovl sub aam addr16 or pop sbb nop movsl pop add dec jnp sub inc (bad) out push test fiaddl fsubr sub shl add mov add dec test out repnz daa dec push jns hlt mov es rcrl popl sub adc inc xor jo push ljmp and lods mov mov call or lock (bad) movsb jbe fimul andl movsl adc mov mov adc (bad) mov fldenv or sarb les jmp sbb out sahf rorl pop addb (bad) int3 mov adc xor jne pushw xor fcompl cmp jb jns jno add ss or das enter js or and stos into or enter test push es in aaa in jmp pop icebp arpl shrl movl ss movsb push clc pushf lods dec int dec addr16 ljmp sbb inc adcb jnp,pt sbb sbb jae jmp jb lcall push cmp (bad) cmc cmpsl les movb or add addr16 inc adc imul push add mov sub push lcall sarb imul and mov xorb imul or push xor ret aas inc jmp xor ret sub adc push adc mov dec inc cmp mov adcb sub in inc pusha jmp add loope cmpl icebp sbb add shl in xchg ja or in enter mov std dec add nop ss dec xor or mov lods xor mov push cmp jno aaa lock jg (bad) lock and inc push inc (bad) inc or add sbb das hlt sub cmp dec pop pop dec call ljmp push daa sub mov idiv sub sti sub sub je inc pop add ja add jge cmpsb mov sbb movsl jnp cmpsb rorb fstpt sub loope pop imul pop loop out mov hlt testb add add and daa cmp jne cmc adc mov adc push add sahf jbe inc into and mov inc jl xchg leave hlt das test insl outsl and loopne inc lods mov lds adc adc sub ds mov mov inc repnz imul fcomps and and movsb inc xor xchg mov rclb cmp out jge lock sti push int outsb mov sub mov jecxz iret or inc mov mov cvtps2pd ror xchg lock in fnop test leave xor dec imul xor or add fmull xchg cmp mov xchg insb je xor mull fsubl add lods pop rorb call dec arpl cmpsb fsubr sbb hlt inc test push push lea movl dec pop lea pushf pop mov je movsb mov int sbb and (bad) sbb jns xorl mov loopne sbb adc sub fcmovu cmpb in arpl sub dec push in and adc jns sahf andb push inc push xchg in loope bound xchg jne pop mov pusha test (bad) or dec mov test mov dec aad pop pinsrw add xorb and lcall (bad) jmp push vmovupd jecxz loopne or movsb push xor ss add and inc sub mov push push xor jae dec jnp mov push or (bad) fdivs inc or and and and test inc pop lcall popa or cmp mov inc cmp inc popa add cltd js mov jbe fiaddl popa cmpsl mov pushf cmpsl divb mov je insl test push ret cmpsb enter xchg movaps xor sub cli mov cvtpi2ps jmp jge xor xor xchg ss xchg arpl pushf nop sub xchg lret or test fninit cmp or je je add ret sbb aas mov cmc pop xchg mov pop mov std in mov push rcrb incb iret lods int xchg test lcall xchg mov andl inc in lcall push add mov in pop imul lock mov mov inc push stos lds add test popf (bad) clc and push and fisub inc movsb sbb and adc loopne decl mov push sbb andl insb arpl sub lock adc cmp or dec (bad) psrld imul dec add les pop data16 add ss push sbb les imul and xor inc xchg pop jg add call cmp jne jmp sbb ds sub sub xor xchg push mov adc mov mov mov ffreep sbb pop inc jg adc outsl lock aam mull xor loope out cmp jl mov pop pop adc and jmp fsubs es push and sbb fistl xlat inc js ret mov pop adc adc jae jae push mov stc jmp and mov pop mov jns out jle loopne lods addl push call movsb shr jns out mov xor out xchg outsb in nop push mov dec sahf out sahf jl push test out push jl push pop iret mov pop adc test xor loopne cmpsb mov xchg or mov test outsl sbb and mov ret sub clc xchg xor adc pop faddl stc sbb and test add pusha and stos shrd push adc mov lahf insl cld push sub mov dec xchg mov outsb mov in jle sub outsb arpl mov mov or mov dec out and add fimul gs ss adc push jae je mov sbb rcll js mov push and inc add dec xor out mov shlb pop xor mov add test add add (bad) dec dec fisub out dec mov ja,pn inc aaa call pop je aas or jnp lock mov fisubr test mov add enter adc ret jns add or je xchg test ret scas stc and cmp inc push dec cmp lahf and adc pop pop (bad) pop push insl outsl fs inc ds or jns sahf push (bad) fdivrl cmp hlt pmaxsw test inc push push pop sbb sbb xor inc daa or and cmp mov adc (bad) outsl pushf std push pop fwait xor adc imul pop popa js arpl mov pop test sahf add push sbb fadds push call push adc add mov sub and and add push in sbb inc sub add inc ja cmp fisubr sub mov in jp stc push adc push push mov adc cmp pop jp nop add jne pop xor movsb or jecxz dec insl sub ja stos add orb je xchg dec add dec or or inc xor dec push js add mov add push bound mov inc outsb or cmp js or xor es adc outsl mov int inc and rorb add (bad) and or decl imul es jg sbb out mov das mov popa jno notl test dec dec cmpsb sub sbb inc fnop int cltd pop sbb (bad) mov or leave adc add xor mov or dec inc (bad) or cld adc (bad) in adc add nop cmpsb mov ja inc imul pusha aaa mov push adc ret mov jb push sahf push or jb xchg jae xchg nop insb iret inc clc jns or jo adc adc fsts cbtw into (bad) in adc inc and push or jl gs lar adc lea mov or xor (bad) sub mov and bound mov in ja test or int3 jbe mov clc jns adc or test xor outsb pusha popa and fwait es pop xor adc addb and mov inc add add dec outsl movsb add xor into aad inc mov setne inc push or out sub iret in mov or inc add push (bad) aaa xor pop fildl lods sbb add push jne jns js and outsb dec test or mov je push mov jg add addr16 push push dec push ficomp inc and iret inc in neg outsl add add mov sbb lock dec sub or test pop xchg mov addb add jns insl xchg dec add push adc loop jl lock fcompl out sub push loopne inc inc dec pop inc add pop push dec xor aaa and sbbl outsb in inc inc push stc sub daa test inc paddb nop mov inc das lahf add inc inc lods inc jo (bad) jno jnp push push mov or das mov xlat cld pop inc mov add jne inc lock sub fldcw test js fs jae pop test or dec mov (bad) sbb push dec add push andb cmp lahf mov addl pop add add dec or ljmp ret or (bad) data16 add xchg add inc je mov mov frstor push or mov es sbb adc inc sub or push xchg and or std ljmp push mov rcrb stos jb sti mov bound fmuls jo arpl out lcall lock ds shrb data16 addr16 xor and push test mov imul lcall dec jb ss sbb pop ja in mov push cmp mov mov sti mov mov fs cld cmp nop dec cmp dec push jl cs in mov enter sub push cmpsb jo in jnp movsb sub mov lahf pop and loope jp ficomp pop pop ljmp inc shlb je enter add sbb aaa cmp movsl call andb or inc fs data16 jl movsb mov xor inc inc jl or jo (bad) (bad) and lret loopne les pusha sub mov sub mov dec loope xchg xchg adc lahf cmpsl or adc loope adc dec (bad) lock fildll icebp and inc insl mov int mov sbb jno sub push add inc adc leave cmp push ljmp sub mov pop xchg mov jbe (bad) mov mov mov inc sbb mov cwtl (bad) std xchg inc xchg pop push movsl sbb in push xor movsb cmp xor jmp sahf out fidivl ret sbb dec fnsave mov stc add xor xlat mov in push in jge and push add sub add das add pop cmpsl stos adc and push push jae xor mov aaa sub add and test (bad) imul add xchg pop adc and enter es mov dec dec or and arpl das cmp dec pop int3 pusha dec jns adc xor lock fmull incl push mov adc sub fstpl xor clc jmp push jmp negb cmp pop lods mov sub addl repnz (bad) dec test sub xchg pop cs dec insb fs add dec jecxz cwtl mov out inc sahf pusha pop das push ret xchg mov subb xor xchg xchg jl lcall insl mov jae data16 repz test push adc loop xor dec xor (bad) xor out add and or in (bad) mov push aas int (bad) pop pop xor xchg ss and jo xchg mov mov or (bad) inc jne gs rol sbb fildll in lret fnop repz dec cmp data16 xlat test sub push cmp cmp push sub pop pop subb test push fiadd orl xor pop pusha aaa sub xchg int3 pop push rcrb dec sbb in cmp shrl pop dec xchg ret call pop repnz ret and inc cwtl cwtl mov ss inc insl cmp shll and push lldt mov fwait in add inc xor cli ror push pop js push mov mov inc pop enter (bad) fcomp jmp loopne or es jns ja in mov enter popa cmc nop pop jbe mov pusha loopne inc ffreep es repnz dec inc roll inc push sbb cmp loope popa pusha or daa dec dec dec scas cmp dec inc jo popl rcrb fiaddl jne dec xchg mov or dec ljmp and js dec inc inc test dec mov inc push pusha or push sub popa push inc inc mov push push inc dec push sbb push inc inc popa pusha and enter inc int3 pop mov cmp inc cmp rcrl push pusha dec inc inc push ljmp push dec lods popf or dec push push mov das mov cmp ret mov mov pop ja pop and rolb in mov pop in adcl enter push fsubrs into sbb lock imul pop and inc push sahf or xchg push pop cmp pop in adc push push aas inc dec push and lods jg jle dec loopne or and fmull ja or and stc mov in adcl dec sub adc fwait dec or ret ss pop sub sub pop rorb mov mov nop or xorb jg xor adc push pop cmpsb (bad) fidivrl sub pop push js stos sbb xor and xlat sub sub inc pop cmp mov pop pop and popa sbb mov cwtl and add sahf je inc xchg (bad) aaa add (bad) xor jl scas push sub or and cld xchg adc daa cmp inc or push andps push fwait pop xchg jo mov xor bound or adc (bad) cwtl fbld lcall rolb loopne cmp outsb jne cmpsb out jmp rcr data16 push je and push sbb loope lret out and mov fmull inc xor xor sub inc imul test cmp xor cmp fs lds je adc and jo adc dec push js mov shlb mov in es hlt mov dec mov sbb xor jbe sbb jb sbb dec add shll jo cltd and repz mov jecxz fs pop dec clc lds (bad) mov call rorb scas ret or push and ja mov sbb cwtl push cmpsb icebp cmpsl cmp pop or lods js push adc cs jmp and lahf shll pop push push repnz sbb jecxz and sbb push push dec test push or daa aaa xor lea clc enter xchg (bad) push inc and out std (bad) mov enter xor add sub repz pop push jp iret call or gs sub xchg sbb and lds je lods pop xor fidivl inc and sahf sbbl lds mov mov sub jae cs or adc add or pop sahf lret add adc adc test das sbb sbb je or cmpsl test mov mov nop push ja subl cmp sbbb adc add dec jae or adc mov mov xchg add xor push dec enter cld push lea pop je mov shrb cmp je aas testl mov jl cmovae inc fldcw movsb (bad) lock sub or cmp nop inc pop in stos or hlt popf add xor dec nop mov je mov or mov mov push inc or jae fistl and gs add or push sub fstpt sub push inc add and add fisttp or inc push dec sti sub mov pop ret push adc and imul mov or mov sbb dec mov and add fisttpl add jecxz xchg out push pop or ret fildll sbb inc sub add push mov and ret es push sub xor inc sti or push inc add int int3 and and xor push loope (bad) push hlt fiadd xlat xlat dec sahf lret push xor jae rcl inc imul ret sub push xlat push sarb addb test and sbb lret js outsl dec hlt mov aaa ds push js push push push xor lret jp dec lods dec mov (bad) sbb push faddl or in rclb (bad) testb mov or push fcmovnb ret pop adc inc sbb and lock or lahf or add stos mov push xor inc pop and repnz inc aaa insb adc rolb mov (bad) js jb js rcrb mov jmp fucomi sbbb je dec dec inc imul lfs inc pop pop add test inc jge adc xchg (bad) bnd mov int xor stos cmp sub mov inc cmp xor push nop mov outsb or mov cmp pushf rcrb sbb add adc sbb adc aad shrb mov ret shr add xchg jle jne xchg push adc jp pop js dec cmpsb pop dec ret data16 sub orl xor or jmp fs pop fcmovb test pop dec mov stos (bad) icebp mov xor or xor das dec cmp adc dec or inc mov or orl jl push mov sbbb push ret rclb dec shrl sti and lret test jb out out cmp (bad) xor push jmp mov and push mov cmc add pushl dec mov or je ss jmp pop or lock or stos fcoms inc sub cli sub and repz hlt xor jno scas fldcw iret iret (bad) cmp xchg xchg std aaa aaa xchg xchg nop add and add mov les mov mov cmp xchg test adc adc cmp test push push and lcall sub pop mov movsl adc aaa fistl push and add pop (bad) jne add arpl je je inc pop adc push sti dec add sbb push sti inc (bad) mov adc or add adc inc inc mov fs pushf repnz outsl pushf cmp xor (bad) lock test sarl push aam lahf nop cltd push add pop inc xchg push add cmp sarb pop das or mov add in ds jge xor enter insb pop mov adc adc mov and push cmpl ror sbb push cmp sbb (bad) jge xor in xchg xchg pop ds or outsl mov mov das mov xchg rorb add aaa xor mov push add ret cmp sbb int (bad) pop xchg (bad) cld jg and xor add lret sbb sbb pop add je jmp mov or push xor mov xchg cmp jb adc xor xor push sub movsl test xchg sidtl add fisttpl xchg aad adc stos lods (bad) jae lock pop (bad) and hlt push pop xchg push push mov pop stos push add sbb insl out jae sbb add loop out dec xchg enter xchg xchg pop add imul and inc icebp mov adc (bad) dec pop adc xor lea inc ret xchg int3 adc jb pop or add rcrb fldcw sbb jb pop out adc inc cld or and xor test movsb nop bound aas ret push sbb mov dec iret dec add sub and add mov mov dec (bad) aam leave xchg andb ds loope test push sub and and mov and andl leave js push xor sub movsb ss or lock add mov cwtl out aaa sub lea je roll sub push mov ret (bad) subl xchg inc jle lock add xor ss pop or out add cmp shl push xor push mov mov adcb cmpsb lods imul data16 mov aam or push xchg lock (bad) je mov insl test stos outsl inc nop out mov enter or es push xchg or mov inc fstpt lret push or dec mov aaa sub push in adc add cmp or pop lea sbb and pop dec enter outsl or ret mov icebp pop and sbb pusha push push push mov negl inc or aam pop dec loopne cld xor xor lret xchg sbb loope mov cmp or in xchg xlat sbb push or xchg sbb and add inc pop or push push lea push addb pop mov adc xchg icebp xor mov inc aas outsl or lds (bad) jge sbb out sbb pop mov jno push jle mov xor ja mov inc shrb xor sbb negb or mov and and push inc xchg jns xor rcll lods call adc jle sbb test adc fcompl addb rcrb jmp sbb sub in add push xor cmp add push lods std test xorb jle out out inc mov call and je rcll xor add pop and stos mov pop insl dec xlat pop and scas add sub fildll mov cmp or push cmpsb mov push pop (bad) ret cmc mov pop jns or jbe inc inc adc in ret inc or jp cs sbb cli arpl dec push adc movsl and shrb lcall sub fcom pop rclb mov (bad) in cmp mov inc daa inc xchg insb mov pusha pop jno add sbb dec xchg adc lods cltd in enter hlt jb or adc xchg xlat xchg or fist adc rolb inc ss add mov cmp add lea call xchg and xchg dec lret sbb stos orb cmp pop adc out es jne rclb or movsb scas and or jmp jp add mov (bad) xchg cmp or cmpb fyl2xp1 aam test fsubr push add or fstps dec sbb sbb dec jp adc in insb icebp testb push and lahf sub mov mov in cld int pusha adc adc jp mov notb xor popa and sub fadd daa orl adc push insb adc and loope mov (bad) mov sub sub xor dec repz out test movsb sbbl jnp adc mov loop lret sub and loopne push pushw dec arpl sub cltd clc jbe movl stos sub or add jl hlt push inc out out dec dec movsb iret mov add pop jp mov fs add outsb add stos xor xchg xchg pop sub fwait mov popa jmp dec push sbb jl cmp xchg outsl xor lock sbb pop sbb adc add add dec pop jmp loopne add test adc lret mov cmp addr16 daa imul addl mov cltd outsl add and gs inc add xchg jmp adc nop inc sub or loopne pop cmpsb mov loopne out xchg sbb pop xchg test xchg dec mov xchg sub popa arpl pop ja sub adc mov (bad) rdpmc mov testb call int3 subl jle jne pop iret cs fs add mov bound lods (bad) negl vmulpd lahf jae in push pop jo pop jl adc pusha pop add mov fldl movsl push sbbl cmp dec pop or push xchg fcoml mov pop lea push mov insb jge add mov in jo dec xchg sarb adc in roll push push or jo fwait lods (bad) into and dec call xchg fidivrl pop xchg repz inc aas adc mov daa scas loopne inc fnstsw jo std cmp mov aaa add and jae jae adc pop dec enter insb insb movsb inc repnz inc movsb inc dec fstpl inc or pop (bad) xor into and jecxz xchg xchg sub and mov test mov sbb and or and push cmp push rolb adc aad loope mov outsb mov xor mov popa and mov cmp inc push cmc push das repz add add addr16 mov nop push pop inc ds push adc rcrl enter inc shrb inc ret test jne xchg in pop or mov inc xor addr16 aas js test mov xchg push xor sbb ja add dec adc and rcl js xor call sahf loope popl xchg and call push sbb mov jp inc fnstsw cmpb hlt xchg dec fdivl cmp adc add mov scas pop ret push add sub cwtl sub repz dec jmp sets mov lock inc adc or cmp cmp into xchg add nop add aas mov sub int3 cmp sbb aas int3 enter mov frstor ds jp lock xor jbe cmp push pop lcall add adc inc imul pop (bad) xor lret inc mov test inc or ficom hlt and sbb ss dec ds cli xor icebp add gs xlat stc lods push (bad) or aad push or enter ret jno push push jmp mov push aam xchg fwait or vxorpd rcl jmp push mov mov adc and js aaa pop pop add fstps outsb add (bad) lods movb imul and out push inc insb add mov add pop xor ja (bad) cwtl aam fcompl mov mov orl int orb jb mov mov push mov (bad) sarb mov jmp andb bound cmp test push push dec push add or push addl xor repnz sbb fsts mov and cld mov cmpsb pop test aas push and mov lock xchg sarb push sub add or xchg push (bad) inc imul dec movsl xchg (bad) pop add cli inc jg sbb nop rolb cli test or lcall dec test xor sub dec stos sti out dec je daa cmpb push lea jne sbb cmp test add inc add les sbb pop or pop dec xchg sbb pop fwait ret or sbb jnp out cmpsb pop xchg push mov in jge sbb inc out je add inc and mov inc pushf lcall shrl insb push nop sub popa into sbb pop xchg xchg adc arpl mov sbb inc and dec xchg push fldenv test and movsb inc mov mov aam pop mov jnp cmp popa dec xchg adc mov bound add es clc cmp cmp inc hlt out mov push cmp lods cmpsb and cmp popa cmpsb ss ror or fadd mov dec enter nop add jp out arpl add inc pusha add add mov xchg bound in pusha daa imul lock (bad) and aam pusha mov jb adc jg xor pusha jmp data16 xchg sahf jge and and xor xor loop inc mov adc xchg xor lahf xchg xchg or add adc sub jl je add test or mov add or sub dec jecxz push js sbb lret add in jbe test cmovs xchg dec cmp xor inc cli push cmp cmp jmp sbb leave clc xchg pop popf lock dec sbb aaa movsb outsl pop int3 mov loopne and adc popf cmpsb test sarl and dec inc sti ss movsb add rorl inc xchg push inc imul add dec jns dec sbb sarb inc (bad) fnop mov xor test add mov nop (bad) sbb push jo fldcw lcall inc xchg nop andl ror nop sub inc or fisubl xchg movsb neg in add sub jns subl add xchg (bad) push loopnew cmp gs sbb cmc jo das add aam jg repnz sub push adc sqrtps test push push pextrw jnp xorl insb in data16 rcl push pop jg jno test and cmp xor sub pop and add pop push sbb ret dec movsl sub add push das mov in (bad) lods sbb imul outsl in jne push pop add sub ljmp adc fstps (bad) xchg or out movsb sbb adc cmp jmp dec inc add adcl adc fsubrs adc roll xchg cli push lods sbb ret popf pop add and sbb testb push cmpsl icebp scas inc loopne jnp pop mov pop aas or jl mov add adc cmp je outsb popa les roll mov xchg outsb push mov and xor push cli sub iret jmp fisttp frstor jo mov xchg mov dec cmc and sub and and scas lea fistpll aaa inc lcall xchg or add sbb movl inc cltd xchg mov fs push sbb xor int3 add pop mov adc test inc xchg arpl mov aam or popf sbb xchg enter mov and mov push clc sbb daa nop cmp movsl sbb inc cmp orl (bad) and add sbb ljmp adc adc inc mov int3 or and por add cmp out add xchg push add inc mov lahf popf mov mov int3 pcmpeqd imul insl hlt ljmp xor pop (bad) dec pop icebp aas rcl mov je aad add sbb addr16 xor jl inc in mov fistl add mov fldcw das sahf jecxz (bad) js cmpb and inc pop adc daa int les dec dec xchg pop andb inc push xchg cmpsb into push or push push fcoml adc cwtl pusha mov inc adc adc out inc cmp ljmp call (bad) cmp jmp dec pop push jo hlt movsb xor cld popa addb mov popf cmp fldl fdivs xor rclb clc js sbb xor icebp enter mov and or inc adc mov dec cmpsl aam js push inc ss movsl iret and mov std or pop push dec je mov rorl cs ret clc je cmp dec pop push popa rcrb jge jnp jnp jmp int adcl dec push adc aaa jno cs popf aam push sub gs movsb sbb mov add adc push sar or mov push push (bad) push clc xor (bad) jo out push (bad) pop loope mov fimul push cmp mov push test add add (bad) pop push daa dec (bad) aas fmul sbb xchg push add and js lods sarb or mov mov add mov jp ja nop cld aad es je inc jo daa ja orl pop add xchg sub rcrb jb fisubr xchg lret adc mov xor mov pop and scas sub pushf cmpsl sbb bound mov inc sub popa and or divl adc dec gs push and imul mov cmp jge andb outsb mov enter out push mov push cmp mov xor lret dec fidivr movsb lock add mov adc fisttp xchg mov mov shrb or jp repz push or xor inc orl pop pop pop imul jb mov js lds sti fdivrl cmp fwait mov sub dec loopne negb add mov cmp sti sbb js jg imul fimull xor lods and xor sub push sub add xchg add sbb dec mov inc pusha pop int or adc and orl push (bad) add test cmp cs loopne xchg xor bound add inc mov popf inc fsubrs push sbb adc pop push push cmpsb test cmpl push sbb sbb cld mov movl sub pop or add inc jbe fidivr inc ja xchg movsl sbb mov gs scas mov mov pusha mov or add add sahf jge clc fidiv and push inc add push push nop pop dec ficomp sbbl lods out pusha pop psrld frstors jo mulb lret pusha add jne adc dec sbb ret pop xor out das mov xor add cmc xchg addl push mov xchg mov fdivs jnp inc push sub add add xchg mov or adc or lock or lcall jo daa inc pop data16 sbb push lock adc adc fmulp jnp scas aas add push or scas inc push adc sbbb mov jecxz mov jo andl add xor and popf and lock subb test add subl repz (bad) das sub mov cmp mov jge js fwait pop es mov mov mov sub in adc mov (bad) sbb push inc (bad) jo sbb mov pop or or rcr imull mov push xor push add sub addl adc dec inc dec push ret daa decl and es stc pop out cmpsl lods test or xor jge test jne lea test pop mov je int3 fmull sti and inc or dec (bad) xor call sbb or adc gs jecxz and data16 std scas and sti pop insb sub sbb pop orb push mov sub push cli pushf pusha (bad) lea movsl pop incl idiv dec sub repz xchg insb call add notl pop pop or and (bad) push or mov push pop inc cmpl jne or push mov add cmp sbb pushl sub rcrl push pop pop stos cmp cli add or cmp je lock adcb jne xor and mov jecxz iret or sub dec (bad) and pop adc bound add xchg and int xor and test xor sarb test jnp outsl sahf cs movsl sub and xor incl subb cmp aam cltd (bad) and adc loop inc aam fs mov push dec mov pop sbb leave (bad) pop and mov jge jno dec adc push xor and int decb mov cli leave aam push or push or inc sbb mov arpl jb dec mov xchg pop (bad) mov imul ss pop jo mov push cmp addr16 sbb dec add mov sub insb cmp ja xor pop jmp dec adc jl adc mov lds sub mov add or cmp test (bad) add rorb cmp rclb std xchg jbe add ljmp inc pop ja jl and jle adc cwtl sub lds shlb push push pop mov test xchg fsubs adc and and or push mov outsb inc lock (bad) leave mov sbb xchg pop xor push decl inc xor aad fistp and push cmc sbb lods loope pop (bad) jne mov (bad) flds pop mov js or cmc sbb xchg dec les push dec ret jp sbb aas mov mov (bad) push adc (bad) sub sahf push mov jp mov mov pop mov cmpl inc inc je imul mov xor jecxz gs shlb jns test jmp push mov test (bad) push xchg dec cmc jmp loopne movsb fidivr sahf adc pop fild call push inc fisub mov add push cmp sub push dec mov mov mov mov enter add cmp xor and movsb and outsb mov mov pop dec pop or xchg cwtl dec leave jno or cmp xchg jl pusha inc cmp add push inc sti sub mov lods dec mov les aaa mov (bad) loopne mov xchg dec sbb xchg sbb scas or xchg mov xchg pusha mov ss das inc dec fs dec cmc inc pop fdivp test or test inc mov jno add in inc test push ja sti mov push cmp cmc inc iret adc adc shlb mov aam dec popa divb movsb xchg inc sub add xor imulb xor cmp inc test mov inc ret cmp mov sbb popl xor cmpsb das adc push adc push push pushf add pusha or daa push pop sub push fisttpll adc lcall movsb and shlb fbstp jmp and int3 insb add push js push push loopne movsb mov jne cmp pop inc call xchg adc sbb enter add xchg shll cmp ss xor xor aaa add dec push pusha mov sub push mov seto pusha xchg addr16 adc add adc jne fwait add cmp data16 (bad) ljmp inc out push lret loope dec stos jp movsb mov jns les push and dec maxps and adc add jo and mov adc inc jo sub (bad) fbld push and mov add add mov pushf push adc push imul dec roll pop add pushl in mov call sbbl or stc and ret gs loope xor xchg (bad) call dec call add add inc and shl cmpb aaa and imul cmp xor loope inc cmpsl inc dec sub rcrb rolb int3 aad gs rclb xchg or pop push std arpl push push mov jbe sbb arpl pop movsl fildll dec sub pop mov les fs inc lea mov mov push or push dec je scas xchg jp popa dec imul das ss js insb dec or dec dec cmpps dec mov cmpb or arpl arpl adc insb cltd fdivrl mov jnp jno mov call jb popw adc xchg cmp pop mov mov ja into movb fldenv xor insb adc jmp sub add dec clc cmp mov movsl lea add int mov adcl cmp arpl loop sbb inc aaa push and ret rorb jge movsl sbb ret mov (bad) mov or mov inc shlb ret es add sbb adc (bad) dec repnz pop lods ffreep add out add push add inc test lods pop add xor mov and outsl xchg add push add cmpl pop adc jo sub sbb pop jne call add mov sbb dec push aad cmpsb and dec mov adc inc push xor mov int3 dec jo fdivr fcmove daa lahf cmpsb sahf xor sbb sbb icebp add or fdivrl sbb xchg nop xor mov pusha add xlat sub mov lods out stos sub mov pop push sbb scas adc cltd (bad) push inc cmp xchg nop lock sub xchg or sub (bad) test test test adc dec sbb sub rolb pop add adcl push mov (bad) out dec pop popa sbb mov jbe adc imul adc mov sub mov sbb push and insl xor insb sarb je je adc jne and sub add jge sub mov insb (bad) xor scas fcoml or push incb dec mov jns lock mov cltd (bad) or mov and jg and cmp lcall mov inc add hlt and dec dec clc push lods push loopne adc xlat (bad) nop add jge mov lods add movsb inc gs jl pusha mov test das sub sbb xor addr16 in push lret jl sub setge mov or mov rcll push insb adc cmc cli daa mov sub xchg xchg imul rclb je es adc adc or mov push or ret cmp xchg mov xor jb mov dec add pop pushf add js adc sbb xchg xor pop push add rolb cmp mov and sbb pop dec sar pop add or roll aaa shrb add ret inc sbb push imul insb arpl aad or (bad) push repz enter mov adc lret rclb push jbe clc inc sbb cmpsl xchg or addr16 jne sub push loope loopne inc outsl pop dec lods loopne loop pop inc dec pop addb loop sbb add sbb test (bad) loop (bad) adc es ss jne cltd or cmc mov (bad) into inc mov inc sub adc or xchg lods add inc inc inc ret add push push in adc in fs pop dec aaa adc scas int sub rep aad mov or or jmp pop push push rcrl dec jmp cmp pop (bad) das mov and mov popf sub int3 fwait and cmp nop jmp das pop push xchg sbb rcll imul cmp test pop push sub clc mov mov les inc scas and cld xchg xchg lret ss cltd add les cmpb push movsl scas pop clc inc push adc imul jae or jecxz repnz xlat sbb (bad) pop dec add and roll mov repnz stos jbe push ljmp lret mov orl hlt aaa aad jmp fsts outsb mov jmp or and cmpsb dec aam mov sbb loop nop xchg or shr daa pop dec mov sbb daa and add and dec sub mov jae mov (bad) inc mov negl (bad) mov adc add add dec adc inc sub pushf out popa test lds stc les mov scas sbb fisttpl and por cmp inc xchg test nop lret xchg inc sbb dec dec das sbb ret loopne (bad) jle addr16 jbe add push outsb jg mov iret test mov sub lahf and add loopne jo inc push nop js sbb sub mov movsb add aas je or xor push push and inc je addb jle inc adc mov xchg or mov ds push js fist xor xorb js sbb sub pop push sbb out xor movl xor mov je dec add xchg xchg hlt out xor inc jle stc sub adc add test cwtl push adc cmc add pop aam and addb adc sbb shll in sbb dec (bad) flds and fadds adc inc xor mov sub (bad) icebp ret ss insl adc and notb sbb mov pop aam xchg lea sbb or pop add mov rclb or js jecxz (bad) push fsub adcl movl pop mov sbb pop jo sbb inc ja jecxz sub add outsl (bad) mov dec enter push bound push mov adc fistpll and push les insb rolb mov (bad) faddl push mov lds lea add lcall lahf les sub add push jmp nop ret xchg sarb add inc rcrb test mov cmp enter mov test dec push cs or dec sub add inc inc (bad) pop xor jae adc sbb imul (bad) enter mov aas and sbb cs imul mov push shrl lcall or dec insl dec call inc enter enter push addb subb add pop lock movsb sub call popf ja and cmp mov (bad) adc sub push jg sub test xchg ret rorl dec lcall mov cmp pop cwtl xor aaa add push out lods adcl or lods fcmovnb sbb and mov push push sbb and dec mov xchg mov movsl xlat gs mov dec sbb and cmpsl dec add and mov ffree jmp (bad) adc arpl sbb and lret into mov cmp pushf insl xor in nop or orps sbb lret add test call test in call and sub out movsl xlat test push cmp adc loopne add sahf das paddsw es repnz loope nop in mov test daa rorl call arpl aas je lcall push xor or jmp and or pop ret mov adc add out push mov mov pop sbb ja and and jg pusha dec imul and inc mov adc jns push cld or mov movsl mov rorl test int loop dec dec xor mov xor in fnstsw push fwait shr ret push insb or cmp inc dec adc lea push (bad) jne pop add inc and dec pusha add and fwait inc adcl rcrl int3 sub jle dec fisttpll inc mov dec fsubr xchg subb xchg sbb cmc sbb rorb bound sub scas dec in adc jge je adc (bad) pop pop fnstcw inc inc js push pop mov sub or ds add or cmp (bad) mov ss std dec adc std push jnp cmp out inc inc rclb out loop lea inc mov adc (bad) pop push rolb fdivr mov bound sub loop push cmpsl or sbb sbb inc push cld cld xchg and cld cmp cld push jecxz xor test pop mov out in pop imul or lods push gs add (bad) cmpsl fs jmp inc add mov inc pop popa dec pop das push mov addr16 cmp das or lahf mov ficompl aas fcmovb and xor lods pop fistpll lods sti jmp xor pop adc mov pop (bad) sbb mov movl sbb cmp in cwtl sub push cmp fs es sbb inc es jl add cmp push pop sbb lret push imul cmp mull mov add xor popa mov mov and inc mov jo rolb adc test cmp push dec xor cmp xor pop mov and int3 jns pop lds lret ja test bound adc lds cmc movsb push and add ret and pop dec dec cmovs dec dec (bad) dec repnz dec (bad) pop pop movsl mov or push push or test ficom dec ss inc dec xchg dec push mov inc push lcall fs xchg cmpsl (bad) jo xchg ljmp daa add rolb mov mov sbb dec adc pop loopnew lds and repz int loop lret sbb push xor loope das pop xchg iret add or aas inc aaa icebp fwait shlb dec mov addr16 sti out jl or jle es mov lock movsb adc movb dec xchg xchg mov pushl out daa sub (bad) pop cmp scas mov clc xchg clc or jmp rolb (bad) adc xor or fisub dec inc loop sub mov pop jg adc pop sub jo pusha dec fisubl outsb das dec mov std xchg adc inc xchg pop xor sbb add pop jnp mov imul scas sbb inc scas push mov in shrb add fs out dec clc sbb adc xchg jbe sbb cmpsb (bad) jns cmp fldcw cltd or adc lods insb pop mov jge test cli lods and insb popf lea cmpsb adc repz mov faddl notb cmp lea xchg es test push push pop fwait cmp and jo jne out jno je add rorl sbb call lock negb mov inc sbb push inc add pop xor cmp sbb jp frstor xchg and movups popa lods gs adc inc jl and jae sbb jl fidivr insb sbb add ja movsb jmp orb test or inc pop jo sarb int3 jne cmpl (bad) std mov mov (bad) sbb jb scas cmpsl push push xor data16 add sbb dec pop outsb add mov inc adc inc inc mov dec adc jo xor xchg cmp jb add jae divb adc shrb call fs cmc dec ljmp (bad) mov (bad) mov cmp aam aad mov jp and jmp movswl xchg add incl fldt dec pushf sbb insb insl mov push gs lea dec mov popa pop dec or push fcompl pop add and (bad) ja mov adc sub add sub test cltd dec sbb outsl imul popf in inc pop nop xorb mov pop xchg inc jbe dec mov out dec inc pop nop divb lods xor sbb popf push cld icebp xchg add push fisub callw ret push mov pop pop (bad) cmp push testb adc insb jl inc or adc aas jns popa and push adc clc sub cmp das and and wrmsr lock sbb cmp lods xor pusha inc cltd push jbe pushf insl jmp mov add subl aad insb shrl addr16 jl dec rolb loope push daa push bound lcall sub cmp pop xchg pop movsl mov mov add mov fisubrl fmul push sbb xor jo sub add fidivr sbb mov fcmovnu je jmp sbb xor outsl mov or sub push into push pop sub adc sbb cmc or jne sub wbinvd cmp inc (bad) mov xchg cmp je lahf or mov jns push mov sub push bound jnp sub inc add mov and xchg jmp sub inc sub pop add bound inc jmp sbb imul sbb leave clc hlt mov es roll rorl cmp push dec sub cs push cmp jne xor sbb in ds (bad) daa mov xchg fmull popa mov pop rcll push cmp cmpsl dec mov inc xor pop hlt je clc sbb in sbb push outsl lods ret sbb sbb lret (bad) or jne sub sub gs or cwtl outsb xchg call sbb xchg mov insb lods rcll stos icebp lock (bad) test subl popa and xor aaa lock orb jle add (bad) dec jle clc mov cwtl pop adc sbb add cmc sarl mov cmp add push (bad) xlat inc je mov jmp sbb pop add xchg pop or stc (bad) in jae push dec add mov dec add out mov xor dec add popf sub ja add xor jmp or and mov popa xchg pusha mov and mov mov sub pop pop cmp in and mov mov xor hlt fs iret xlat mov cmp jmp sub lods imul jo test cmp mov (bad) lock cmpsb js mov push mov inc cmp sub push add mov push mov fs clc xchg insb sbb sbb and jp push ja popa inc aas movsl (bad) bound adc mov fs movb dec jae cmpl cmp lret ja movsb mov les les push xchg or rcrb mov fisttpl loopne or subb lock jmp ret outsb in push int3 call adc ret add or dec or pop test leave or lods movsl adc pushaw (bad) mov pop cmp dec jmp aad hlt xchg dec dec xor mov je sbbb pushf movsl jo push push cmc and xor dec add call push dec test jp (bad) jae push pop jmp call pop xor lods subl pop (bad) mov mov and inc pop sbb out mov js mov ja cmp adc je or popf add cmp nop lock mov fmul cmp push sarb sbb mov mov hlt mov scas popf jmp fsubs or test stc mov mov daa cmp pushf xor push cmp cwtl add mov insl inc ret jne (bad) and xchg and mov add adc cmp xchg dec inc pop enter mov movsb pop or inc mov (bad) dec dec dec inc enter lcall (bad) cmc loop dec insl rcrb cmp in pop sbb xchg push or (bad) pop pop lods leave inc sbb sbb fs push xchg cs cmp and xchg dec jl pop pop jmp mov push cwtl (bad) lock rclb lea sbb jl in xor cmp xor fidivrl clc pop jb ss das mov xchg mov scas push xchg xor inc pop push rorl enter sbb cwtl daa nop bound sbb int3 cwtl pushf inc inc and add sub xorl push imull pusha push cmp or ret mov push mov and dec inc jmp nop push sbb and xor push push add lods repnz xchg rol orl and sbb lcall or sub xchg sub sbb add or cmp dec add xor or (bad) mov sub add rolb aam loope and roll or and dec push mov fs sbb sbb xor cmp push mov roll js pusha nop pusha or rolb popa test jb jmp or rcll inc adc inc add fwait mov je das js push andb push (bad) push or movsb or cli adc xchg push bound xchg mov aaa outsl or (bad) fcoms aad sbb xchg mov int orl inc add sub push mov adc and inc pop dec rorl fs push insb bound les push outsl pop mov icebp inc js mov cmp xlat cmp mov sub adc sub jl or movsb dec ret push mov ljmp xor aas aaa mov mov pop and mov adc imul inc test js jmp xor test or sbbl inc mov mov and inc jbe jne dec jns or xor and dec shrb pop fstpl addr16 fsubl adc shr pushf adc xor cmp xor and sbb or call adcb lahf inc xor or movsb call lods mov dec jo (bad) xlat xor inc adc mov mov pop fcoms or or gs popa add xorl mov nop push call and or ret pop jmp sbbb das cmp pop cwtl xchg sbb push (bad) (bad) scas cltd inc jle push and push mov push mov repz incl and popa dec cmpsb mov daa fistpl mov jg movsl lods mov bnd sbb inc lods subl sbb daa fwait mov stos sub test cmp pop jg push imul sub sti out or jb fisttpl add add sub pop insb xchg out fsts sbb add in xorl push lret or icebp mov cmp sub into lods sbb xchg mov mov jne inc sbb mov mov mov mov xor or dec pop jg movl adc mov js adc ret mov and mov and sti push test addl push bound enter icebp inc pushf add xor adc mov xchg push inc inc push lods imul mov push jbe sub jbe push xor sub mov push popf mov xor lsl pushf fdiv inc pop mov orb inc push ficom add push pusha ficomp rorl das dec jns adc roll stos imul sti mov int repz (bad) imull mov adc push jge rcll out and push shrb xor mov jo or xchg (bad) push loope xchg dec js sbb movsl and dec cmp and ljmp cwtl sub sbb jb mov xchg mov pop jp push and int out mov push cmp jae xor dec ret rcrb xchg aaa lret dec inc pop xor aaa mov xor stos fcmovnb int cmp pop pop add sti add inc ja cmpsl rclb pushf loope movsb push push add popf mov cmp jo jne int xchg mov outsl inc cwtl je js rcr jno xchg popf loop inc mov jmp arpl cli outsb ja sub mov sbb or mov sbb xchg test test or jecxz ret dec rcll and xchg xchg cmp je xor lea adc jno pop adc cmpb or je das insb movl cmp mov nop arpl jne sbb (bad) cmp xchg dec adc test and push inc push adc sub inc scas (bad) fdiv in inc push inc push dec icebp sub aas xchg pop push and sub push sbb sub and mov cmp pop pop jb or aad xor ret mov cs adc outsb dec sti inc fdivrs mov mov xor pop or or inc sub out adc push ret push xchg (bad) in std adc aam hlt xlat shlb leave pop popf pop and ret mov mov xlat dec add scas xchg in or mov imul xchg lea lock xor xchg mov pop in xchg mov cmpb push ficoml imul add (bad) xorb stc jb in sbb xchg (bad) orl or mov mov sub sbb pop popa fs bnd pusha jmp into add cmpsl add (bad) push push pop or and cmp pop mov cmpsl mov pop inc adc push pop pop xor fisubr test loope cmp popf xchg fdivl fistl add add ljmp sub aad ficompl aas cwtl jge inc add aaa (bad) adc adc dec xchg or mov xchg aam add sbb add jne adc rcl or mov ja xchg fdivrs fildl inc daa cmp dec sahf popa iret xchg adc sbb xchg xor mov rcll test ljmp pop (bad) in insl sub sbb xor dec shld inc lea leave dec sub test sub dec bound sbb rolb jb ret test xor pop or add push add popf out sbb and (bad) jne cmp sbb dec imul xor stos arpl mov mov stos and xchg (bad) and mov (bad) adc xor mov fldenv and aam sub dec jae ret push adc call jle xchg ret cmp pop mov or sti mov gs sub aas stc mov test stos xor clc sbb push and mov mov rclb jnp or dec in mov cmp add jno xor push jecxz mov xchg (bad) lea icebp jne xchg inc pop insl sub sbb movsb xor orl sub add mov inc xchg movsl inc daa fnstenv aad xchg mov ja cmp add sub test and add mov push sub cmp outsl lods add mov hlt fidivrl xchg and add push jno sub or jg jmp pusha movl insb sbb dec mov xchg mov cmp sub sar add xor push sbb insl jne or outsl mov sbb xor in sbb add xacquire movsb cmpsb cmp roll jno and rorb mov lods sbb and dec jae in test xchg decb movsb mov jg adc xchg fwait lods popa and fs sbb je xchg jno cmp or aad push adc dec adc pop mov loop xchg xor adc dec xor mov xor pop cmp setb or add addl dec xchg fisttp inc mov xor push cmp dec add xor dec rcrb mov add cmp dec mov and inc xchg xchg sbb mov pop ret jb das add data16 add nop push adc push mulb push (bad) inc adc (bad) sbb mov gs mov pop or pop cmp jae push pop loope mov pop jnp je je pop (bad) dec and (bad) es dec xchg mov inc shll mov outsb xor push notb push jns (bad) cmpsl les fidivrl movzwl push gs xchg adc sbb push (bad) iret js arpl fistpl cwtl inc xchg scas (bad) movsb or dec xchg add inc jg enter iret iret loopne sbb inc adc dec sub cmp sub adcl cmpsb sarl lock add pop fucomi adc add and add or sbb cltd add jb lock fdivl xlat and sub mov imul sbb mov mov loope jns ret cmp cmp je dec jmp cmp sub mov jae jne decl dec pop inc dec push sub or lcall ret xchg mov mov mov pushf clc test arpl sahf add and or out adc mov sti aas lea mov mov test xor inc inc lea xchg add lret or mov cwtl or adc add and and ljmp movsl jp and inc (bad) daa sbb mov inc addr16 pop adc iret push jbe or mov insl or aad imul push sbb ret or push push (bad) sbb mov push fs jo xor movsl pop call (bad) push in sarb imul xor sbb rclb push ds jl lock pop ja mov stos les and dec insb rcll or test and add xor pop or je jmp push pop out icebp inc mov xchg sbb push inc sub icebp and nop add cmpsb aas (bad) mov or or sbb and inc cli lahf mov cmpsb sbb (bad) cmpsl (bad) data16 leave or loopne out (bad) and push push mov (bad) sub ss add loopne jo mov or jno aad sti dec inc inc adc popa jge imul sub adc sub pop pusha jne xchg mov or cmp fs mov scas addb addb dec lock mov or das (bad) mov or and clc loopne or push add pop push cmc xor adc push leave shl movsb xorb xchg xchg mov pop enter xor pand mov xor test push sub mov inc sub sub dec shrb jle or lahf sub xlat cmc pop jo and std fnstenv push pop repz mov (bad) xchg dec or mov mov push shr inc cmova jle jo add sahf and push cld push nop scas add add scas add mov clc add cwtl ror pushf into xor imul loopne ja (bad) and jne mov inc jmp fldl add and mov pop sar adc cmp fldt jge mov sub shll pop sbb aam rolb and pusha add add inc jns divl aam jl loopne push jne mov into inc bound dec shr sub mov in pop faddp inc test add loop mov scas lds push fwait loope outsb call sbb lods popa dec loop jo mov cmp enter or jmp cs adc sbb pop clc sbb mov dec sub cltd rclb dec (bad) lret sub adc (bad) jo addb aas adc add xor inc sbb push mov push or jmp xchg jb push je and inc mov mov icebp aaa sbb lcall add adc and push add (bad) iret sarb mov fcmovnbe or mov add adc jo mov jp add movsb xchg or cwtl lods aas mov lea sub inc xchg pusha add in popa imul adc dec dec cmp jmp xor jmp jo,pn add push fwait (bad) (bad) shrb sbb push call mov dec mov or lea into int fsubl dec test fld xchg jl lea or xor jp ds mov and rcrb push aam js (bad) mov fcoml (bad) add mov cmpb aam pusha mov pop (bad) mov cs je xchg mov jl xor xchg xor push push push insb push jmp mov xchg push xlat or fdivrs xor jns adc add sub xor repz add mov sbb sub (bad) fdivs imul inc pop push or popa dec xchg adc pop jns fsubs xchg mov push add scas mov js xchg mov adc ss insb jo add adc (bad) imul nop popa aam sbb xchg stc add mov push add xchg jmp lods ss xchg dec push aam sbb mov mov mov add cmp das fiaddl adc xor xchg btc movsl movsb sub xchg adc negl push pop aas call test sbb gs dec sar or dec xchg outsb inc cmp je test adc lds imul push jne fwait sbb adc add mov repnz inc cmp nop push add sub dec ret inc add lret add mov aam jo in sub push insl in and fmuls mov add popa loop xchg inc je bound dec bound pop and ss and inc mov sub add mov test mov (bad) lods pushf popf or inc or jne mov es mov cmp xlat (bad) hlt cmp xor (bad) sbb stos mov adc jae or jbe push sub shrb ljmp (bad) push ret fimull adc bound std fs hlt ret cld push or push cmp xchg aam js mov dec sbb das and jne inc lret incl (bad) mov mov aas jle xor add pop cmp sub arpl push ds pop xchg cmp dec inc jne xor int adc xor adc jns jge pop scas add jbe sub pop call roll pop or mov decb imull fidiv sub rorb sbb ja cmpl sub lret dec mov add xor fimul xor or in xor add in iret mov xchg fisub cmp pop cmp mov call scas push icebp cmp jne bnd cmp jne aaa or and cmp pop das (bad) cmp pop pop mov sbb (bad) cmp or push arpl xor adc adc sub lock jae out mov adc xor sbb jg dec jl pop mov pop dec fsubrs push add xor dec add leave (bad) adc or andl mov cltd leave mov data16 mov or mov cmp pop or pop mov inc pop and jo push cmc shrb inc mov lods loopne mov mov sub lea or sub jb arpl inc push fwait rolb jmp roll and sahf xchg gs dec and or pop push in mov and pop std mov gs rolb xor xchg sbb nop cmp jg mov lods inc iret fwait sub shrl or fs push (bad) mov (bad) ja or adc mov inc pop push push dec xorl sbb movsb enter and mov test sub push cli push xlat inc rcll cltd or mov enter lock push sbb push jb push inc call (bad) in jge push xchg mov mov sti push jle and mov (bad) pop daa int3 rolb jge std or xchg stos jbe sbb add push js aam das adc xor jo dec or aaa jo dec cmp dec pop enter cld push lea shrl xchg imul adc pop or adc repnz (bad) jmp repz or shll sar mov push cmpsb and push cmp lret mov lods lods sbb mov enter (bad) loopne and out loope or xchg mov xchg dec fcomps call add xchg cs fcmovbe and adc add mov cltd test dec jo lds (bad) cmp mov sahf movsl clc add or xchg mov sub mov lods mov jb and push xor stc das or lcall lea idivl dec add sbbb or and sbb push push inc fcmovbe (bad) xor push loop sub xor mov cli in or movsl cwtl pushf in sub cmpsl and insb call xlat movsb dec call mov (bad) xchg in pusha test (bad) sub xchg xlat sbb pop les nop imul or in push jne fadds out (bad) jnp add mov add or (bad) mov mov add mov in or enter or iret xchg movsb faddp add or or sbb cmp pop andl test inc loopne (bad) sub jl and dec inc push insl mov xor cmp mov lret pusha cld push jne push lods cmp and scas mov nop cmpsl sub adc ret out push loopne push fadds test lods sbb int3 jbe cltd inc idiv jmp sbb jno sbb cmp add test inc (bad) add mov mov mov or inc lods (bad) lock cmpb imul adc test mull xchg adc test adc insl inc mov enter cs mov enter add jg or add leave inc rclb frstor xorb cmp mov add inc cwtl mov cmp (bad) jmp pop or pop sbb repz fisubl repnz and int3 aad cmp inc mov fiadd fwait out push mov out push out out xor mov dec insb bound add push xor jmp les add jle mov mov insl pop or cld aad sbb push js out ds fsub sub (bad) sahf mov out loope dec jo rcl sub xchg fdivrl inc xlat inc in add daa mov jg int3 test bound movsb int3 (bad) js movl xor xor (bad) sbb lret sbb dec sbb pop cmp inc repnz xor add mov (bad) mov push (bad) mov shlb arpl pop adc outsb insl fcoms pop adc ds (bad) dec je gs adc dec push loope sub mov and xchg adc ud1 loopne mov enter add nop adc jns cmp dec fmull push nop rcrl xchg es or pop sbb addb aaa sbb inc leave push mov sbb mov andb flds push mov pop adc (bad) lret pop ret fdivr mov pop addl adc faddp fdivrl mov (bad) and mov fildl aaa and (bad) sbb adc sub and inc sub out and es dec into push daa sub add or jl jae or (bad) jae pop adc cmp or pop inc inc xchg cmp cmp dec roll sub leave mov mov js xlat mov sub add push addl xor xchg pop push mov xor (bad) xor outsl xor pop and leave push xor or cmp cmp or cmp xor xor and xchg add xor icebp stc fsubs pop add pop mov pop mov add adcl adc jo les sbb mov mov and jne pop mov add bnd fbstp or jmp push es xchg aaa sti sub and jne divl jnp cmp cmp jne xchg dec or rol push xchg and popaw aam add into push mov icebp mov je sbb jne lahf push les scas repnz cmc add pushf sbb sub adc adc mov enter mov das mov pop and test stos and mov dec (bad) mov xor or and into push xchg out jno (bad) je xchg cmp mov mov les push sbb mov lods scas jne inc or xor push xlat push xor add xchg ficoml bound jb sti cwtl xlat pop add pop js es sub mov xlat aam mov pop ljmp mov movb push add pushf lret lahf xlat mov xchg js out add xchg push sub cvtps2pi enter inc nop leave outsl sbb dec mov subl push xor sbb test xchg cmp subl aaa das xor push roll sub rcl dec add lock pop add sbb xor cmp xchg ret movsl fsubrs jecxz add (bad) fwait xchg mov add add push push mov fnstcw push clc push cmp stc mov jle jb (bad) cmp outsb lock sub arpl sbb clc rolb (bad) sbb fisub xor fadds ffreep (bad) into ss lahf test jb inc rcr or sbb and pusha xchg imul dec or out loopne outsl sub lcall cmp mov sbb sbb inc cmpsl in xchg dec fsub xchg push bound mov scas add dec pop push sbbl xor inc stos adc and or dec (bad) sub sahf jne ss call addl insl cmp push inc sub cld adc or pop es lea add sub pop pop inc inc xchg sbb fisubr (bad) insl adc lahf pop inc mov popf mov xchg dec jae or in lock xchg dec fsubr js fdivrp add cmp add jl jae sbb fs stc repnz pop cmp mov sub jns clc add push rcr add inc (bad) lock jge cmp adc repz push xor mov or push mov lret mov lret sarb insl popl test notl and push mov or subl sarb add ds enter (bad) pop jle fldl pushf pusha push mov or xchg add fdivr in (bad) cmp aas dec bound (bad) mov push icebp call xchg jl cmp pop shlb in stos clc sti cmp sub push adc inc cmc mov push inc imul lods and mov cwtl mov push mov (bad) movsb pop lret fs sub mov pop mov inc in ret ficompl loopne sbb aam mov jle mov addr16 dec inc enter ja xor subl out mov adc inc (bad) or clc mov push loopne (bad) stos mov inc dec jle pop (bad) mov rcr xchg mov push mov in pusha inc or fwait sub outsl mov adc fsubl sub dec fldcw arpl mov add aaa or mov mov push insb sbb xor (bad) xor fsubrl out mov xor sbb orl shrl roll (bad) testl xchg mov xchg inc xor mov dec add cmp les xchg fistl nop push adc or mov push jb xor jb loope sub jno scas clc aaa push call imul add jne xor aaa xorl (bad) mov rcrb jge dec sub andl jne xchg jle test (bad) jae push cmpl ss xchg inc ja ret add lock mov subl mov and mov xor mov into hlt imul or insl jo jmp bound enter in in adc cmp stc jmp mov cmp xchg cmp push dec mov mov add je fistpll cmp lcall mov out add cmp clc and push adc sahf sub lds jne push dec je mov jge daa add fdivs xor test jle and dec dec ss pusha jne adc inc pop je adc (bad) jb jge jno or jns ret xor imul test add mov movsl mov mov lods int push arpl xchg xchg dec test stos jge sbb loop inc inc sbbl clc sub dec jbe movsb sarl and mov lods cmpsl ljmp pop dec (bad) adc or pop maxps push pop inc dec xlat mov rorl iret subl mov adc mov movhps pop lret sub (bad) jno jecxz xchg stos in inc and inc sub cmp enter cmpl in pop inc adc add sbb insl mov movsb or push push xor cmp mov mov push pop mov ljmp and and adc jl or mov push aaa inc ret sub orl jne cmp nop pop dec pop adcl dec (bad) cmp inc add jmp ja je dec jno out adc sub (bad) pop sub jmp push xor (bad) mov push sub clc lcall test inc daa inc push lds xor popa xor imull std std lock add lcall sub or lock adc mov adc push push mov sbb push add loop add sahf jmp gs bound sbb sti outsb mov inc xor dec sub add dec or mov cmp sahf hlt inc pop push xchg fimull fwait sub or sub mov adc xchg add movsb or (bad) dec or xchg cmp fwait ret test (bad) addl (bad) or pop push aaa fstpt dec (bad) jmp xor lcall mov cmpsb mov js xlat mov push aad and pop jmp pusha sub or test cmp and cmp jmp push add rorl dec pop mov sub je shlb in lcall xor mov pop cwtl mov inc dec or add movsl fstpt jne dec jmp mov dec popa leave out loop xchg in mov or mov iret daa popa loope (bad) adc jne add sub mov jnp test jg and cs cmp xchg out fdivrs pop mov add mov mov aam add cmp data16 je imul dec testb and cmp sbb xor push idivl dec push cmp in ret (bad) std testl in (bad) jae sub mov arpl mov (bad) (bad) mulb movzbl cmp icebp cmp push mov and or xor mov mov dec dec cld jbe dec mov push push dec sarl cmp jb or jbe mov mov mov adc pop lcall pusha xchg push push and ficompl inc imul pusha push pusha push clc xchg jns adc mov outsl sbb push and adc hlt pop sbb lock xor imul int faddl data16 idivb call push call inc add sub rcr test arpl adc xchg jne mov orb push ret adc popa jne imul xor dec jmp shl in xor xchg loopne sbb jecxz xchg (bad) push and mov pop or mull dec lcall or test rcrb test sub and xor pop add outsb jmp mov dec and and adc and sbb pop xchg sbb incl adc popa mov iret xchg push daa in or push mov pop dec out in sub sahf outsb in add sarb jmp inc loope xchg daa in pusha or cmp in in add push test add or cmp insb pusha add ret or pusha pop jno cs popa scas int nop fadds xchg mov mulb out mov cmpsb ja rorl mov (bad) loopne rcrl decl jmp jp (bad) and enter (bad) out add in sub adc lock xchg mov mov popf popf js jae popf cmp pop jle push xchg lahf push inc inc jmp pop inc test add inc jecxz push sbb in js bound jmp xchg notb test sbb in push sahf cmp popa sbb jg arpl ret jl inc mov dec insb comiss mov xor jmp push loope push or rcrl gs mov outsb fdivr add cld lds cmc xchg pop xchg xchg fadds cmp jae push pop mov sbb add mov lcall mov mov out pusha clc xor mov add dec hlt sub pop or enter adc int3 pop add jno lret imul inc fnstsw sahf mov cs or (bad) jp jno dec or fcmovb out jmp xor test lds mov inc aam repnz jnp sub repz hlt pop push leave add pushf sahf nop repz enter lock mov inc inc movsb mov cmp and add popa pop xchg push inc and aaa add inc or mov xchg jnp aad incl sub inc or inc or iret rorl pushf pop or cmp mov jl,pt or imul pop and and sub dec sub faddl cs or mov orb add test or cwtl mov leave push adc push xor fstps push and cs mov pop int3 jecxz sub dec adc add pop sbb cmc mov sbb int scas xchg sbb sub push pop xchg pop rolb enter mov and pop add lock xchg test inc jle add pop pop cltd and push sbb add jl sub ss xlat jb insb xchg fdivrs or movb and dec int3 sbb in rcll push orb add sub adc sub and cs or je out cmp sub or mov sub adc inc rolb add and lds cmp xor movsl mov xor icebp ss inc cmpl (bad) movsb lods mov nop cmpsl jge cmp inc push faddl je pop sbb mov jo mov into cmp push jb dec or loopne push leave cmp xlat sub jo sub ffree dec sub cmp jb aas inc jb or inc inc and push inc inc mov xor pop test outsl inc inc sbb inc push inc dec xor mov scas dec lea xor dec fdivr mov or js xchg imul add (bad) mov pushf pop pop jno push add add daa sub add es or (bad) jne inc xor dec xchg mov xchg and xchg sub das iret (bad) adc mov je lock xchg xchg dec sbb call nop stc push push cmpsl push push ret dec push and dec lea dec cmp outsl and verw mov adcl out mov aad inc je nop or add xchg xor lea xor add lock loopne mov sbb mov inc jg jg adc inc adc lods xor push xchg fsubl fcomps call xor out nop mov add test cmpsb out and mov das mov dec fmul fs xchg pop popa rolb xor pop aad adc nop jno aas int ret dec cmpl mov sbbl mov fimul adc push addr16 add imul stos jge cli sbb cwtl sbb inc int3 cltd inc movsl fnsave jne pusha int3 pop xchg pop push idivl ret inc and dec daa stc adc xor fwait out aam and mov cmp push cltd cld sti out dec int repnz jmp jecxz add test and mov add xor sbbl loope mov jl imul adc ljmp and or nop pop ja clc and (bad) movsl cwtl dec cltd adc jge adcl mov ja cmc and aas ret mov adc adc mov add or sub popf pop ret andl stos xchg (bad) (bad) repnz and push push push pop add xchg test adc adc dec xor loopne aaa sub loop add pop stc aam inc insl js arpl lret rolb test cmpsl popa push nop mov repnz push call or popa mov imul and popf fnop sub sub leave adc outsb js int3 les fisttpl dec dec fs xchg getsec adc mov cs bndldx jns xchg dec loopne mov (bad) xchg (bad) jmp cmp jne cmp lock jl push insl je in movsl jmp push or jne insb arpl pop (bad) (bad) notl lods jo cld mov push sub hlt daa ja (bad) jb cmc cmp dec aas mov jno xlat mov xor add or dec aam add mov insb sbb add popa inc fldt roll outsl imul andb sbb rclb push je mov (bad) stos addr16 adc mov adc jmp int3 add into es bound mov fidivrl add and add cmp adc mov xchg dec add sbb (bad) mov pop pushf cmp imul mov pop cwtl adcb arpl lret sub in mov jne jge mov push adc xchg js cltd pop lock ret mov gs loopne sahf (bad) je jne mov loope push daa jp aas ss cmc lret xchg rcrl lea das inc jmp dec xchg aam (bad) and dec sub sub cmpsb pop lods adc mov aaa xchg push sub popa xchg (bad) xor roll (bad) pusha sbb lret adc jmp cmpb test or sbb repnz enter and jl jbe pop mov (bad) fidivrl or inc test js jp mul mov adc arpl pushf sub push mov dec add cmp enter add popf mov andps aam les jge (bad) and inc mov jne add sub or out out adc out mov lea out xchg repnz mov aad jo (bad) loope push mov xchg (bad) nop pop (bad) int3 and cmpsl addl inc and popa and add hlt int3 pop pop dec popa mov cmp fidivr (bad) mov mull xchg push pusha enter sub or scas fsubs push into aam ja jbe xlat pop xor hlt into pusha add mov outsl ficoml adc and or and ud2 add or add inc clc add inc rolb mov or fcmovb (bad) xor cmpsl pop (bad) add add adc xor pop and and mov insb mov mov adc fnstcw mov pushf lds inc and mov xor and enter xchg xor and xchg hlt sub xor aam adc insl xor and fcomi nop xchg push lods in into push fs movsb fisubl mov insb es notb lock cmp jns push or pusha mov jmp lock jmp inc xor nop nop lea mov add mov lea mov nop xor or loopne (bad) fsubp pop out lret cmp xor push mov push call dec cld fs das sarb (bad) and cld jmp sbb outsl mov xor sub mov stos dec aad sarb stos lds mov pop dec inc dec sti jg outsl rorl inc pop aad (bad) jns fdivp rcl push sti (bad) int jo jmp and or cmp sbb std jle inc and dec dec shlb jbe popf jno inc jg xchg fs push cmp stos rcl mov cmp movsb xchg push jns lods or mov push sbb stc inc jl lds jp sub lahf imulb inc stc sub sub bnd test (bad) push xchg jno adc and movsb movsl aam (bad) sarl (bad) jae sbb push adc shrb mov test jo sbb imul (bad) sti insb shr enter mov fsts fisubl lods sti sbb lret mov push adc pop dec mov fcmovnu insb andl mov popl xchg stos in pop test cmp lret rorb js fnstcw cmpl sti lock stos shrb sub jns xchg mov jg fsubrs loopne add jle out fisttpl div and jl notl dec cwtl shlb pop cmp mul je inc pop rol jb mov fsub lods in aad jns lds sub insb push mov repnz jbe mov inc not or dec dec adc rcrb xchg lret jl adc popa mov loop xchg cmp jp loopne rol xor les out pop sub fs pop adc (bad) arpl das push es cs sahf negb fcomps stc or sti shll inc (bad) xor xor mov push sub mov mov sub movsl jmp dec or insl sti mov loopne pop insb pop clc pop mov jne rol jp lds in mov jg shld xor cli and pop outsl push jle sarb cmp xor dec ds out shlb sbb imul jp mov idivl std jp rcr (bad) xor test and adc rorb fwait mov es pop mov add or call ffreep xor or cmpsl xchg andl and cs push sub shl enter pop jne leave dec or mov js out rcrl das insl xor loope (bad) jle and sahf push dec movsb xchg jnp mov test jns jl sbb enter lea jbe ljmp fucomp (bad) or mov rol add jbe or sti push xor jb or mov jo shr sar test scas imul inc inc dec rcrb clc push je pop (bad) pop rolb sub cmp out out pusha sub xchg inc jp sbb jg push push mov pusha mov shll push jle sbb mov adc pop das cmovle jb and fidivrl repz mov or pop jo or adc cmp add shrb sub (bad) lea sub rcrb add cwtl sahf adc push sbbb ret cld sub inc mov jo inc aaa sti add dec divl (bad) jbe xor dec nop dec and rcrb xor adc movsl sbb cltd jecxz add pushf stc mov mov (bad) rep sub insb push (bad) cltd cmc or dec pop add fcmovb les or mov shlb push rcr adc and xlat xor faddl rclb mov jns inc pop adc call repz or inc rclb mov dec mov ljmp lcall stos add enter sub ljmp mov int dec push xchg mov int int (bad) sbbl rorb int (bad) mov in fbld or ret mov add call lcall test sub mov lock push (bad) stos lds cltd add xchg fldenv fildl push iret mov jns incl inc jno out push jb lods rolb pop and repz adc fdivs imul jp adc mov in insb cmp xchg roll loopne xor mov sub pop faddl out scas fldenv (bad) xor ja pusha or sub inc add addb add jne inc fs sub sbb bound push loope bound or lds fs jle sti or rorb add mov rorl fbstp addr16 inc sbb out sub dec sbb mov jecxz push (bad) xchg rclb (bad) ficompl int mov fadds inc lds push cmp sbbl (bad) xor mov js test mov jbe shrb pop int mov outsb sbb daa cmp jge loope and out rorl sahf testb sub pop mov mov insl xchg pop hlt cmp outsl les aad ret pop mov xor fmuls shrb and out pusha shlb cwtl shll stos mov lahf jbe (bad) mov mov mov jmp inc ljmp add push mov or pop sub xor sbb stos (bad) loopne dec insl sbb pop (bad) jno clc mov cli inc into cs cli sub xchg and push sbb or jbe pop mov add cmc xor inc cmp rorb pop xchg fisub adc test sbb repz imul (bad) mov jns inc or inc adc daa adc lock (bad) movsl jo or add cld jge sahf es shll jo test orl insl jo sub sbb outsl ds fistpll (bad) jo out jne dec push jbe mov xor sarl pop fildl daa push mov (bad) loope sub movsb mov sbb rcr shl push pusha or rorb pop scas cltd loopne push adc jg shl adc and loopne xlat or mov andl fs jo push loopne xchg gs jp roll mov sub jae sbb pop stc shr pop inc lods test sbb test shll and mov mov add std add add mov adc leave sbb sbb out das shrl inc jg sbb fbstp jne dec jecxz mov rorb sbb inc or scas push aam addr16 cs dec pop sarb dec andl inc and jge cmp inc test in adc (bad) mov fsubrl sub adc fcmovb jmp lahf or stos adc cmp in rcrb mov sbb sbb or rclb lret inc fs mov pop rol and (bad) mov push mov push daa cmp or or frstor jne js lods add or mov repnz aas inc data16 dec add adc mov mov test jb call sub and add adc push pusha and sub cmp std cmp mov add cmp mov (bad) cmc ja mul sar mov flds cld stos cli cmpsb sbb repnz test jmp inc push mov dec fstpl pop rorb daa ret shl (bad) adc insl xor ss das sarb aam sbb (bad) adc push gs jl inc or push or adc bound lds cmp jg pusha inc adc dec enter lock call sub pusha repz or xor sbb or lea lods sub pop cmp mov (bad) fstpt adc stos lret out cmp pop bound hlt cmp dec ds pop call xlat or (bad) xor xchg inc jae cmc jg inc iret or fdivl jb in pop jp,pt aad pop lods add lahf inc mov ret inc dec jne shrb ret pop sub push and int jo pop xchg rcl out and or xchg inc loope rclb lods jecxz pop in lret iret dec mov stos push and lods in call push dec xor pop dec sub loopne adc jge xchg dec push jg stos pop or mov sbb ret shrl std sbb inc jnp in jge mov cltd inc inc jb shll lahf jg adc mov test lods xlat pshufw ds inc lods rol sub je fsubl sub popf add adc cs pop jne jmp sbbl xchg jb push push bound jo xchg ror frstor cmp mov push xor outsb sbb fs fs dec pop or inc pop inc and icebp scas dec pop or rolb and jg dec gs roll jno fwait inc lock sbb ror mov xchg repnz sub (bad) jle cltd mov push (bad) jbe or pop cli arpl loope loopne xlat sub sarl ret (bad) xchg rcr xchg test push (bad) hlt and cmpsl ja push sbb mov pop rcrl sub cltd xor mov xchg cli (bad) repnz dec or or pop inc test fisttpl or shrb adcb (bad) lcall jo cmp fsubrs mov dec fcompl cmp negb movsl jmp adc loopne stos lea movsb inc enter test sti cs shl adc pop ffree repnz (bad) mov (bad) jg outsb sarb pop mov nop daa jg dec push cmp (bad) jae mov aas push and inc jle aas rclb faddl adc inc pop into stos repnz push test pop or pop ljmp std cmp sub shll push sarb or inc xchg mov jg cwtl jge jg sbb ja (bad) adc leave ror jbe shrl (bad) cmp push sbb ret push push cwtl les iret jns push clc and mov adc int3 fs mov mov gs fisub call sub inc mov rclb jle clc mov fistl xchg jecxz xchg cmc sarl (bad) pop je insl dec sbb cmp jl shl rorb fucomp mov nop fs sbb push ret jbe pop sub push mov jl aam cmp sbb ret cmc scas fsubs fbld stos out and jmp lea dec lds das shr gs xlat lock inc add mov jns rcr popf ja jp mov sarb push adc sub mov ds push pushf sahf movsl dec or lret cmpsb pusha jo stos jo aaa (bad) fs cmp jg rcrl jmp rcl push xchg inc jg sarl jo or xor xor sbb push int bound arpl daa (bad) cmp sub xor mov mov bound xchg lcall mov into and sbb jp jg xchg sub xlat loope ss mov sahf adc aad lods jg pop test fadds adc lds or pop mov insb adc xchg andb movsb les movsb lods (bad) in xor dec fwait or lahf mov (bad) stos (bad) adc inc in cmp xchg std mov or jno sub out test out iret adc jne fimull in pop cmp and insb andb jbe adc jecxz stos rolb pop adc jp test cmp push mov stos xor cmpsl xor xchg inc cs add add out mov rorb adc cli mov mov (bad) scas inc jg mov inc rorl cmp push out push outsb push dec int cld lret sub sbb loope sub rorb loop ss jbe ss cmp adc mov jp mov bnd cmpsl in jle xchg adcb loop outsl iret adc xchg mov pop nop inc lahf mov xchg out or loopne add mov mov out cmp ja inc in movsb xor push sbb stos push push jmp xor ffree out (bad) mov aad push ret mov adc iret jns adc lock imul loop and int3 imul mov and fmuls dec adc ja xchg inc ljmp and test mov sbb jb cmc adc pop adc stos into aam xchg lods add roll jmp mov mov xor dec lods dec into lcall sbb jmp lahf jne imul pop loopne lcall cmp push mov (bad) jns movsl cmpsb sbb pop std imul push push scas ds js mov call jo mov add fistpl ffree lret sub (bad) (bad) mov pop insb sub (bad) or cwtl pop inc mov inc inc rclb ret adc clc mov js xor lcall and sbb (bad) fwait sahf mov js (bad) call mov pusha adc xor fs rcrl and jl jmp test jae sbb outsl mov dec inc mov or test jns aam fiadd push dec jbe fst cmpsb imul jns je inc pop xor dec sbb xchg fs (bad) adc mov je sahf insb cmp ss inc loopne xchg (bad) jb cmp and loopne pushf inc (bad) add scas dec xor mov (bad) jbe ja mov xchg mov mov inc je in loop adc (bad) or adc xor cmp jnp shrl sti sbb lret mov js inc rcrb ja les rcrb imul push hlt mov (bad) mov push add xor push cld or sbb (bad) je mov cmc (bad) pusha into shrb daa xchg loope iret sar jne mov ffree or jg lods dec pop lea test pop dec jo pop dec ret jb data16 add int3 rcrb xchg les insb add mov push xor mov push jns pop andl test jmp or mov andl pop mov std mov test add mov sub push je or inc mov add adc mov mov mov xchg lret adc cld jge push out or mov aas ret jns mov dec jbe adc movswl push sub mov mov xor or mov lret lret pop push inc jle lcall (bad) subl cmpsb lret icebp repz mov push out fcmovnu xor push shlb (bad) or inc dec inc (bad) outsl icebp roll cmp shlb pop jns jbe dec clc iret push mov inc sbb scas imul je sbb rclb and adc or jne add xor out add cmp or sbb mov or mov loope push sub sub fdivr ljmp call call es adc sbb push lods fwait and movsb lret mov jl jns mov or push fdivs sub sarb push into mov call cmp mov shlb iret jmp add and mov pushf stos (bad) mov ret or mov sbb or arpl add jo mov push sbb cltd insl fistp add cmc aad cmp sub das pushf mov pushf xor add repnz jmp mov pushf or push scas sbb shll mov ljmp (bad) cli shrl jg mov cmp mov jo cld cmp inc inc testb jg mov rcrb or int mov or cwtl fisttpl push push lcall arpl add mov sub shl pop cmp icebp sbb imul les cs jg cli testl leave lods icebp sbb loopne adc ss inc insl icebp mov xor xor mov or add and ds or cmp ljmp push ret ljmp add fs sbb (bad) cmc xlat jbe mov lahf inc dec rclb add iret mov roll mov jge mov out stos jl leave outsl or mov and sarb incl (bad) out rcll add stos roll rorb sub rorl pusha mov fstl loop (bad) fdiv rolb mov pop sbb movsb aas insb cmp or xorl and or xchg mov jo xor rol lcall test pop sub jno add outsl gs les test (bad) mov cmp ja pop in inc movsb arpl fisubl sarl shld push push sub sub mov inc mov (bad) mov dec pop inc stc push lret (bad) daa loopne add hlt sbb cmc adc inc loopne hlt xor stos xchg or sub lods xor pop pop inc sbb out pushf sub or aam mov (bad) nop and dec scas and fistpl xchg rclb insl xchg inc mov in cmp xor fs out jmp mov adc push add jbe mov and lods or ss fadds sub xchg pop lock or cmp mov dec loope sub (bad) xchg scas int3 pop roll jg jae sub inc rorb cmp repz mov adc hlt fcmovnb dec shrb loop data16 add adc add adcl dec lahf push and mov insb push xor (bad) mov add add lahf push push sub mov pop jno sub hlt xchg push jb pop orb mov iret lods cmc cmp in cmp stos incb insb les jns jp lock pop jp or xchg (bad) repnz int or xchg add or push xchg iret mov rcrb out loope test jbe es xchg cmp sbb add inc inc mov and mov dec sub fadd adc cli cmp mov pop test push movsb push loopne add rol pop jge mov push mov sar leave jmp hlt dec push test js cmpsb jne jae inc adc mov xor or outsl jns sarb ret push leave (bad) sub push mov rcrb scas notl mov adc fistl pop sbb pop add je rcrb pop jmp mov rol nop sub fwait cltd push xor cs out jl scas stc call ret pop xchg xchg and dec ret fwait mov push cmp dec or rorl push stc jns out ljmp sub (bad) pop scas pop dec fidivrl rcr std xchg jg cmp ror test adc push (bad) icebp cmp or xor mov loop (bad) aaa push and dec sub loope jno imul mov mov cmpsl outsb jmp jno shrb sub jbe lock cmpsl fs decb and (bad) movsl popf in jg pop dec or pop dec pop add cwtl in adc mov imul (bad) notb rolb or lods add and and int (bad) pop mov rcl sarl dec lret add mov test push int3 push push nop push stos loope inc iret dec ucomiss ret dec les and shlb flds cs and cli bound mov mov shr cmc scas loop enter or sub pop pop or push jo push push cmp sarl jo push cmp sahf addl sarb sub add cmp push test mov outsb sub insl cmp jmp jl js add mov jne fs (bad) dec test (bad) iret aaa sub adc inc lds jno aam stos xlat or dec adc push push (bad) pop adc push popf rclb mov or xor pop mov das repz aad or push jecxz push loopne int mov cmpb lea inc pusha push in pop xor cmp mov cmp or stos add pop adc js add insl inc inc ss mov inc or inc dec hlt scas or adc shrb setae xchg idivl mov inc testl pop pop outsl push das sbb push ret les sbb es sub mov enter pop outsl adc adc mov inc out jo push leave insb enter fldlg2 jmp movsb pop cmp cmc fidivl clc or adc pusha mov sbb sbb imul xor mov stc and push xor mov push and add jnp rol movsb (bad) xor xlat fcoms pop orl cmp imul cmc mov or idiv add pop outsb test pslld dec mov push jo pop aaa mov repnz mov mov cmp mov inc lret jnp (bad) repnz or shrb mov insl lods loopne popf icebp xchg push add mov scas std sbb adc dec shlb dec in push js jecxz cwtl js lods icebp mov loope xchg pop inc bound jp jae outsb add sub ja dec adc lret sub aad add out shll cmp fcoml (bad) mov adc repnz adc sub arpl fs mov mov mov mov scas push and mov and push inc lds fildl xor rcrb fisttpll jl pop cmp mov mov jnp pop mov or daa (bad) dec or inc push xor push lea cmp or push pop js lds (bad) (bad) repnz and rcll and jle (bad) ds and xchg repz (bad) outsb adc (bad) shlb xchg push or leave roll shlb bound push scas add push call (bad) test icebp shll mov or stos cmp sub cli aad xlat iret and jne push sbb andl sbb inc or movsb outsb sub loope adc jns out jecxz cmpsl add jecxz pusha xor pop std push jmp out (bad) shr lret or pop push jle add cmp add push pop adcb or xchg cltd call jecxz (bad) mov insb ror pop insb push ret std jle aam adc xchg (bad) mov xchg mov sub cli rorl loop (bad) push xor sarb fwait mov jle pop xchg std stos push (bad) mov sbb rorb lret xchg xor push dec fdiv jb (bad) mov cli adc mov and insb test jne sahf cmc outsl roll cmp and aas xor push orl mov jmp adc bnd pop xlat jmp cmp cmp call mov mov xor shrb lock fcomp inc xchg xchg pusha jne mov insb sbb lret inc hlt js subb mov inc shl (bad) in scas mov (bad) adc cmp inc orl fmull cmp (bad) push popa and jns mov js shll cmpsl dec dec in jmp lcall push jmp add in out jae test xchg mov leave xchg lods scas pop dec or mov push mov jp rclb mov out push cmp or stos movsb pop std mov rcl xor loop add gs pop shlb mov fs pop adc test or (bad) shrl std (bad) outsb pushf inc xor jns dec push mov adcl cmp in lretw rclb xchg test out cmpsl or mov decb popl pop mov xor or pushf push mov inc inc pop ja inc jne jle xor mov inc push pop jge fdivl jno pop and push cmp fsts add lret ja aad xor cltd stc sbb loop pop push jle data16 pop test push sets stos mov sbb inc mov pop mov push xor rorb hlt das das add sbb and fmul inc push sub add dec xor jmp jmp gs aam pop mov loopne xchg inc daa mov movsl pop push clc push and and orl test jne aam sbb test imul add (bad) mov mov in rolb xor cmp xor rcr xlat inc sbb xor add (bad) aaa ret fwait push int (bad) jae shll sub inc jp and aas lea dec stos jmp adc dec outsl fildll ror push or sbb dec mov pop push imul ljmp fdivs inc ret mov addr16 push dec pop and push mov loop lahf (bad) lock pop cmpsb shll (bad) xor (bad) loopne or sbb insb inc inc fsubrs cwtl jecxz add adc test xlat bound mov or cmp cmp ret xchg movsb and or in js in addl jno or test dec jnp mov add xchg cs push jb es cmpsl or movb and fmul js pop andb add push xcrypt-ctr cmpsl sahf xor les gs jne ja jle sbbb jnp cmc out mov sarb inc mov xlat outsl sub insl stc sbb (bad) ljmp vmptrst js jns test out jae faddp jl ret cmc push lcall xor add (bad) mov inc inc loop sub sub ret add lods lods faddl or pop (bad) hlt fldl inc lds mov rorl cmp popf fldl and enter dec mov rorl adc adc cmp out (bad) mov fld jbe or dec fistl and in ret jge and add fsubs int cli in adc and lock (bad) push jg jle push cmp jle clc int3 rorl pusha mov jae lods loope inc test pop jl adc cltd adc dec xadd add shl pop xor or sub inc jg das shlb loope popa push ret loope jmp push inc fcmovb adc test or lahf lea push in (bad) sbb faddp push push xlat sbb jae (bad) loopne lahf mov xor inc xor leave jl mov rolb mov inc lock xor push cmpsb xor adc fnsave int3 dec xlat pop sbb es roll out mov add sahf hlt add imul or fidivrl jecxz push out adc out leave popa (bad) js mov (bad) in inc jg out ficomp fwait cmp adc add adc faddp (bad) mov xchg inc add incb push push pop imul sub imul mov jp mov js imul mov icebp rol jb sub mov push stos add stos dec test adc (bad) sar mov aam dec jle mov daa arpl test stos sub sbb xor push add insl es push lods stc mov jecxz inc or inc adc and scas push xchg out in and mov adc fneni(8087 xchg adc cmpsb out sub lds jo adc clc cmp outsb inc cmp or add jecxz in inc adc ret arpl xor pop sub mov ljmp scas rcrb loopne insl sahf out fist movsb (bad) rcrb jg jl roll adc mov loop movsb outsl mov jns loope rolb les xor dec inc push shr jecxz jns fs rorb pop inc pop or adcl stc lahf mov cli inc popa mov pusha or push arpl sub shr adc lret pop in and mov inc clc mov fisttp rolb pop mov mov cltd ret jge fwait mov (bad) repz ret cmp psubusb sub (bad) mov hlt test fs iret mov ret xor aam mov (bad) lret or and lret ja int3 mov mov jne inc das inc js hlt test add movsl out insb (bad) cmp mov push in cld (bad) ja or mov shlb enter add push lods adcl (bad) subb arpl cmpsb out rolb dec jecxz adc inc sahf clc sub push push push mov xchg and fnsave sarb sub xor push adc push subl pop nop adc mov push mov jne inc das or imul and pusha (bad) stos loop adc es xchg inc mov xor ds pop aad xor loopne or pop xorl icebp and data16 dec pop loopne xor in mov jmp fsubl mov loope add dec jl loop mov sbb sbb jge sbb mov (bad) mov imul inc fs data16 inc inc sub andb lea jns or cs outsb sub clc subl push mov ds mov fs xor jmp mov cmp pop movhps ffree xchg push adc (bad) mov fsts cmp leave jno dec mov sub call inc jne and push popa mov xchg shrb scas and xlat arpl gs dec jnp mov cs int3 dec cld in fsub sub ffreep adc rclb cmp push (bad) add clc shr and mov and mov adc inc aaa inc jo push jp dec cmp push pop jle sub ret pop cmp xor aad jl fbstp (bad) mov mov je or dec ljmp fisttpll push or aas jnp mov add push lds (bad) fistpll rorb js imul mov rcrb (bad) xor jo fwait movsb and loope inc sbb mov lods sub cmp pusha push imul je sbb (bad) icebp lock mov pop rorb pop sbb sbb mov repz es sbb pop inc pop fadd (bad) loop cwtl or add rclb lcall call adcb jo fstl or xchg mov fistp mov sbb cs loope out sbb cmc mov xchg cmp fwait sub add icebp or mov je inc adc fidivl push movsb push sbb dec enter js mov or pop cmp add xor pop dec mov sub jmp loope push pop mov ret mov xchg mov insb lods rorl (bad) lret adc adc mov outsl insl push inc or in cmp jo enter push rolb (bad) jae push hlt fs shrb in mov xchg in dec add rcrb push jmp mov aas push push sub arpl xchg lea xchg sbb xor fadds fnstcw stc or inc or je cld in pop sub push pop add shrb xchg enter mov test adc inc outsb shr xchg xchg lret inc and add dec sub pop adc (bad) not (bad) loope fwait sbb cmp and mov imul call inc das add inc dec (bad) adc mov ds sub jle lods fdivrs add jb shlb or test mov dec adc mov sub add add je jb test cmp cld xor add dec jne cwtl inc sbb nop or (bad) ljmp sub aaa test sub dec (bad) out roll bound ja cs mov stos mov stc (bad) call and les inc roll cwtl pusha ret mov or jns roll stos xor test js stos (bad) mov dec adc sub mov clc mov mov (bad) ror add pop aam stos adc dec test or push aad (bad) add (bad) or jo or mov idivb call dec jne lods inc ss inc loop mov (bad) jle (bad) aaa shrb rorb je jo cmpsb pop mov jo mov sbb xchg fidivr fwait pop adcl cmp pop inc xchg xor in add xchg rclb rcl pusha cmp leave mov push pop xchg sbb push scas shll pop aaa adc dec adc xor pushl lret rcrl aaa add sahf sub jp and out sbb idiv sbb jg aad dec jb mov add icebp inc dec scas ficompl popa rcr xchg xchg xchg cmpsb cltd add mov dec rorl test js rolb rorb iret push ffree sbb setnp mov icebp jb xchg clc inc adc (bad) xor lcall loop stos pop inc push js lret jp push mov sbb jne xlat shl das add aaa adc mov test pop push add mov pop pusha imul lea es adc test popa (bad) fldcw negb push loop popa test xchg push sub lcall jmp ret jg stos and pusha mov mov add add mov cld rcrb inc pop sbb xchg sahf orl out aam sub loopne insl mov inc sbb sbb sahf cli popa in fidivl stos add addr16 rclb and push rorb mov mov push cmp sahf rol push ss xor ret cltd or mulb jmp addr16 mov jle out popa aas enter es movsb gs mov dec adc dec xor jle adc xor adc pop or inc mul rol mov (bad) mov enter xchg jecxz push and or and sbb fdivl pop pop mov mov hlt xor repz arpl mov jmp ret xchg sbb in icebp std or fisub lea xchg sub stc and insb icebp and mov mov sub int3 push sbb and clc inc pop rol repnz pop icebp rol sub sub subl test and adc cwtl mov xchg clc or rcl mov cmp popf test dec sub loop inc outsb cmp cmpsl pop mov jae inc and dec std or or inc adc js loopne xchg dec mov cmp mov in dec rolb mov loope loope lea scas sub fstps and icebp rol mov sbb pop adc addb xor push xchg xchg xchg das jl jle stos push popa sbb fnstcw mov mov mov loopne,pn mov sbb out and inc ljmp icebp loopne shlb aas jae,pn add orl pop pop cli icebp mov enter repnz sti xchg in ret sub test sub subl mov fsubrs test aam (bad) fsubrs ljmp xchg cmp inc (bad) inc pop int lcall xchg (bad) rcrl adc xchg (bad) pushf adc sub test jg mov (bad) jns xchg cld inc push push dec outsl cmpsl xor push xchg les xchg dec xorl and rolb std and into mov popf leave (bad) repnz mov jg (bad) jno mov jb movsb add aam inc lods scas cmp test dec jecxz and and jno push (bad) adc pop sbb xchg orl es ss sub stos sub sarl cmp in dec cmpsl rorb inc fnstsw inc xchg lahf and lret xchg lock mov (bad) push sarl mov nop lods cmp shrl add mov xchg shlb xchg inc pushf cwtl push xchg push arpl movsl (bad) cli out cmp sahf movsb rorb outsb and push xchg leave gs fwait test mov mov lret or and inc dec aad lcall aaa add xchg mov dec scas data16 jp jmp in test xchg pop test pop js shll pop shrb dec xchg inc pop xchg (bad) mov fadds fisttp inc pop rcr cmp call popa xchg ss or adc and jl inc or jecxz loop stos sub (bad) mov rorl pop jecxz clc imul mov dec movsb jae shrb popa mov sub inc movsl into lods push xchg pushf rcl daa idivb (bad) imul cmpsl jo add dec ficoml inc adc mov loope idivb popa jo (bad) rorb imul imulb and lret mov std xor popf adc and sub (bad) jb mov or pop fcmovnbe adc (bad) mov and lods sahf pop pusha pop hlt hlt cltd xor cwtl clc jle rcr fnsave inc xchg test xor push clc inc mov push imul add xchg lcall cmp mov lock shrb push insb (bad) sarb pop mov cltd push sbb (bad) std (bad) xchg jo mov jecxz pop xor push sbb jmp sbb loop push in rol sarb loop daa roll imul pushf fdivr jbe or movsl (bad) adc sar mov push ja adc xchg out insb sbbb fadds sub mov (bad) leave addb leave dec dec pop dec shrb adc cmp daa mov aam test (bad) cmp mov and xchg sti xor scas mov push (bad) sub and pushf push add add lods les jmp dec xor fisttp ljmp inc shrb pop pop (bad) dec and dec add cmp mov xor cltd mov mov fcmovbe mov (bad) cmp inc js lods ds fs mov and or or xchg push pop sub test daa and test fs xchg movsb scas inc cld push (bad) sbb jle in cmp cld rol xchg push sbb xchg mov sbb push fwait or cmpsl in ljmp cld arpl mov aam mov (bad) (bad) jbe stos jmp outsb pop movsb cmp test stos roll push add cmpsb sahf lea mov (bad) cmp jg arpl aas lret pop rcl mov cmp pop jp jp cmc popa xchg sub fwait inc adc test jbe push add sub rcrb stos xlat pop mov xchg adc cmp ljmp sbb mov movsb ja rcr repnz out loopne test rcrl lcall mov ror cmp addr16 icebp cmp dec sub mov add xchg je cmp bound xchg lahf xlat mov push lret stos adc cmpsl sbb dec cmc negl ret orl jno (bad) cmc (bad) inc std rorb iret ret (bad) cmpsb scas adc movsb negb push or rorb pop xor pop jae icebp (bad) (bad) jo push adc pop pop popa pop push or inc les and stos cmp lock push pop sar xor sub xlat inc inc or test mov or aaa push sub adc cmp daa iret test rcll dec movsb ja rcr js add outsb sub xchg jae or out js xor xchg addr16 sbb cmp addr16 (bad) out lahf test popf push test cmp xchg cmp in in outsb xchg jmp rcrl arpl add aam sarl push sbb rcl call je rcrb pop pop add lods jne sub sub inc das loop (bad) shl pop (bad) int3 insl dec das out sbb insb (bad) xor lods push test std sarl mov cmpsl cmp xor (bad) nop and lods or pop ficompl fsub sub add incb inc push xchg ds ror aas icebp arpl stc stos jmp jge mov or aam dec adc lret es cmp les test pop hlt movl dec std sete mov loopne (bad) pop cmp mov outsb pop xchg psllq mov cltd or push inc push pusha cmp xor movsb ds xor adc nop lods adc push shr add aad nop add sbbl push lock and loope rclb cmpsb cmc mull dec pop lret clc (bad) clc add test jle mull movsl imul mov adc popf dec mov rclb push pop arpl mov jno pop sarb test mov and jge mov mov or jae cmc ss push cmc pop or inc repnz sub mov (bad) clc hlt adc movsb insl cmp adc ror (bad) xor lea inc pop sbb cltd insl cwtl xor loope lea xlat daa lock insl inc dec nop mov xor (bad) in xchg push and cmp pushf inc dec out mov sub clc xchg nop jmp int pop fcoml nop nop push icebp cltd add push push loopne cld neg pop in je nop aas push sub push push (bad) nop push insl std enter cmp push dec bound nop mov rol xor xor loopne sbb push ss clc addr16 mov adc mov (bad) (bad) lock or pop or divb in push enter cmp mov pop rolb into inc cmp jne cmp adc pusha push test das mov xchg jp pushf inc nop sbb inc and push daa nop adc inc jnp xor inc and or add mov and jmp push mov fwait aad push mov cmp ficom jb dec push xor jp fs jo lret jbe shl aaa pushf js pop inc pop js nop add push mov pop cmp mov and pop jnp scas sub into ds mov or rcrb mov pusha cmp sarl or add cmp and cmp jl fldcw push dec push mov and hlt (bad) imul pusha js sub sarl movsb inc mov sarl xchg push inc ss dec mov xor out mov or test das pop push sub dec xor js mov cmp push cld inc int3 push and push mov out mov add fcompl mov cmp repz or pop shlb repz mov in push inc inc xchg push sub push cld jo xor jns jnp mov addb mov int les jl pusha xchg xor sub int cmp mov add push in mov cmpsl mov push cwtl pop mov imul push mov push sarl push push jge sbb mov out lret lods call movsb js pusha in (bad) je push jbe push sahf push fwait int mov pop push adc in lods repnz adc xor add aam cmp dec mov xor ficomp pop pop aaa mov add or mov (bad) sbb lods mov inc in sub test add inc xor stos addb imul xor mov add fldcw pop dec call clc and lret int3 enter enter fcomp fxch (bad) (bad) loopne jecxz in pop xchg decb outsb je pop mov (bad) and and popa je xor xor insl int3 push lock xor insb rolb push adc pop (bad) ja cmp or into mov sbbb adc aaa (bad) out shl add add inc push roll inc shrl scas aas and pop or add and insb jle iret repz sub cmp dec repz repz pop fs je repz jl mov cmp mov (bad) int3 repz repz in hlt out lcall sbb out sahf and xor inc add daa mov cmpsl add add fs cmp movsb dec repnz mov jno sbb mov dec inc mov jae je inc jne bound pop call lods xchg add aaa add nop add add scas xchg rcrl and xchg lock clts decl dec popa add push adc pop or sahf push mov xabort inc cld push sbb sahf out cmp pop jo out sahf out movsb mov aam sarl hlt add adc xor out cmp call fs xor into mov sbb push push inc xor rolb (bad) pushf mov sub add add push mov push and pop gs push or popaw out icebp xchg mov jae jne sub push cmp and cmp mov add push insb aas push jl mov push incl fidiv aas adc adc aas outsl jnp mov in push clc aas push or clc xor lock (bad) sti inc mov mov bound add cmp repz mov repz bswap adc adc popf cmpsl stc cmp or sahf testl dec sbb push adc out mov jns out int3 or add sarl adc mov iret repz add push jo ds repz fistp sahf out mov push adc loope in add adc jne jns sub test add add dec lock jl roll iret xrelease push iret test cmp repz mov sahf out ficom out sub pusha insl sbb dec mov mov jbe negl fcmovbe cmp or or loop mov or pop mov jnp add cmp xor fsubrs sbbb out imul mov idivl (bad) jbe xchg int3 cmpsb data16 fsub push insl dec fldl aam loopne iret sarl clc or cmp repz push push out lcall and out sahf sub cmp add jbe,pn adcb and fildl adc bound sbb and xor idivl xchg das sti shld xchg add in or unpcklps or out prefetchw pushf pushf pushf pushf or adc lcall leave insl and rcll leave leave add nop iret repz ss push iret repz nop cwtl movsb out pop inc notl sahf out sahf jl movsb pushf xchg lods push fstpt or dec jnp call add out push push mov pop mov outsb mov xor in push out adc je cmp repz iret fsubr hlt or adc out sahf sub pop fs sahf out mov xor call rorl or mov xchg add and insl ja pop adc mov adc sub dec test lods push incl pop or add pop xchg jns test cmp repz std mov repz fdivr in clc add out sahf notl sub cmp sahf out hlt push repz repnz sahf out icebp mov pushf sahf out sahf out mov (bad) in aam sahf out in call mov and xchg mov or fdivs adc sbb cmp (bad) roll outsb into inc or or mov or iret mov inc test data16 sbb sub jne mov daa dec sbb mov sbb mov pop xor xchg add das adc enter adc aas adc pop adc mov add mov jne ret xchg add jnp outsb pop add cmp roll stc mov cmp sti cld std (bad) incb ds repz test pushf out xchg push add lahf rcll dec stos addb push cli jns pop push cmp xor or mov pushw pushf push rolb scas jbe mov xchg sbb inc idivl loopne bsf in mov jnp cli or jo or imul movsb mov jnp rorb mov mov lods push scas lods movsl fidiv jns out xchg push hlt push dec push mov inc outsb js mov sbb int3 jle push test sub mov jae pop sahf testb mov cld mov sbb data16 shr jl,pn sti or jg push dec add and jnp repz inc dec es test data16 mov push mov enter xchg inc xchg mov pop es push adc fidivr mov cs mov je inc xchg movsl (bad) sbb cmp loope adc and es jae js aam (bad) cs mov add idivl fidiv mov push in push into fadds mov mov push int3 jae pop xor cld push xor ja push mov loopne mov mov mov aaa jge dec add dec lock pop cmp movsb (bad) (bad) outsl sbb test hlt jle leave jecxz cmp outsb in push les xchg jle mov out out mov mov cs movsl mov xchg inc xchg pop mov xchg jno jle push cwtl ss ficomp daa pop les test jae repnz xor xor or loope mov (bad) iret data16 push pop addr16 mov daa adc adc out pop (bad) xchg mov or xor jae pop lods dec mov push mov push scas imul cmp xor mov call mov outsl es out frstor dec test scas xchg push jbe push int3 test jnp fbld push les in add fidivr cs inc adc test pop fbld cs adc ds scas iret call sbb xchg fidiv mov cwtl push add es fs jnp inc xor (bad) (bad) lock adc jbe enter mov xchg outsb pop insb xlat mov add inc adc or xchg mov test jo loopne add pop add or mov adc rcll add cmp inc inc push dec add mov pop dec add pop inc (bad) dec fidivr dec or pop dec pop push and jl mov push pop dec add insl out mov sbb push dec xchg imul push inc mov imul push mov push xchg dec xor or inc ja neg push push push cs and inc push negl adcl or inc sbb out imul inc dec testb push rsqrtps lock push dec or dec push dec push add add and xor inc (bad) and jmp add sub dec inc sbb push add stc mov je pop sub rolb sbb sbb add or ror xchg mov faddl cld jg clc iret leave repz push pop jmp rol and imul clts aas push or in (bad) jg add adcl (bad) test or pop jo pusha int (bad) shrb push orps leave psubb xor int add push out ficompl cmpsl loope (bad) cmp add loope lock sbb pop push (bad) aas (bad) fidivr pop andb mov iret xchg push xor call push mov pop std cmp loope ds jl (bad) push popfw out cmp jle rolb inc add jo xor jnp iret rolb mov lock xor jl push or push cltd pop xstore-rng cmpsl inc movsb (bad) jg add (bad) cmp (bad) decl jl,pn adc iret add add mov adc and out lods fldl add das aas dec pop add daa (bad) aaa fwait iret xor clc lock aas push pop clc dec add insl fstp ficom pop outsl clc (bad) sbb pusha addr16 jmp loopne pop mov lods sub mov inc nopl jo dec in ds jle add lds pop in fs adc adc out inc aas nopl aas xor add xchg push les cld push cmp mov insb push fsubrl aaa add lds lock aaa cs and iret inc fwait int (bad) jge cmp sbb push sub mov insb ss add inc addl popa push pusha xor sbb push push sbb cwtl loopne outsl aas jnp cmp jne ret roll (bad) cmpsl xor notb clc fcompl jl sbb insb ss cmp sbb or test subl jge stc mov adc push adc popf cmp add and add or add or mov mov cmp pop push ficoml subl mov daa sbb fnsave (bad) and daa and fidivr lahf and daa and iret daa push adc cmp clc dec push out int jae push mov push mov daa lret xor daa xchg jbe in or dec daa fs out fimul dec inc daa negl (bad) (bad) ja push out idivl daa clc push (bad) cmc sbb sub xchg mov dec xchg xor repnz jg daa cmovb mov xor and int3 mov inc pop daa inc push mov daa dec sub aas push xlat dec sahf cld xor mov dec sub in pop ret cmp jns dec and out fidivl push es and pop cmp push and and cmp idivl in push jmp pop push ss cmp push insl out fiadd push lret loope cmp push and push mov adc pop xchg or loop mov mov sub and inc mov pop mov div xchg in out js adc xchg inc inc inc or (bad) sbb and push pop movsb cld mov daa inc aad jns lods insb push push dec dec pop daa mov enter out in push xchg add incb cmp aas add clc daa add popa mov jecxz add inc cmp lods mov daa or popa and data16 sbb insb pop jg xor ds shll sbb out clc (bad) jae cmp lahf xor movl cmp (bad) push fcoms out fs cmp xor daa push fbld jbe cltd cmp lret ja es ljmp mov daa dec add or cmp jle xor in repz out jecxz test arpl adc fild nop in inc xchg idivl add stos movsb sub sbb jnp push repz daa xor repnz daa aas das insb jo fldenv js bound in cld ja cld push inc sub push daa xor insb ret sub call fidiv insb pop outsb data16 inc push cltd mov (bad) je push inc mov pop and je stos inc aas call mov sub pop lock or sbb dec push pop xor dec xor fildl daa mov dec stos xor ja pop and lahf jmp pop out and jne adc cmove popf jg int3 or sub adc cltd (bad) pop cmp sbb dec sbb sbb andl ja cmp and clc or jbe mov sbb xchg fcoms daa in mov pop dec xor dec xor dec daa (bad) jge mov clc dec push (bad) dec sarb dec jl inc jno xor dec rorl ja aas sbb (bad) lcall incl cmp cltd cltd call sbb ret jnp cltd and aad aas mull rcll sbb inc nop inc xchg mov in dec (bad) fadds cwtl (bad) jb or sbb sub inc es fadds or cmp push mov lahf adc xlat pushl inc pusha and cmp call es shrd push cmp push xor and fs and or rcr daa aaa out ss aaa daa and imul stos dec or aaa mull jbe daa insl mov jbe xchg lds push out lds and loop and pop jnp cs fnsave push jnp clc daa and fsubl jmp xchg add adc mov xchg and pushf aas lahf push xor aas adc popf sbb addr16 stos sub shlb invd pushf cmc jp xor cld in aas jnp js xor pop mov lock insb lret call add or orl out mov push mov sbb shl stc or idiv cmc inc mov imul shl push cmp xchg sbb mov pushf js sub (bad) (bad) (bad) call pop out fucom dec add pop dec inc ret mov jno jne xchg xchg push sbb (bad) jg (bad) call insb bound mov mov pop pushf cs (bad) fnstenv jge enter pop out (bad) ljmp (bad) jecxz lods insb cmp jo xor sbb jne in fwait std stc repnz daa aad ret mov pop mov (bad) xor mov mov pushf and das sbb sub xchg fwait mov xchg loop and or mov int lahf imul mov lds fwait popf inc jge xchg push mov jge in or dec xchg in fisttpll fnstenv push pop inc ds sbb push xchg jb cli lds jno insb mov jb mov xchg pop mov dec adc imul lret sub imul sbb jg stos xchg xchg fwait or mov mov jge cmpsb out (bad) ja push dec or cmpsb mov inc inc out mov sub ret mov jge mov shrl jge sub fbld jge cld call mov call lock int3 daa ja inc (bad) jp push int3 pop jns arpl mov ljmp (bad) jns mov pop jae popf sbb ljmp or mov int3 mov clc mov inc repz loopne cmpsb fisttp jno sbb jne out dec sbb roll ss (bad) (bad) (bad) lcall in repnz sub sbb jmp mov ds (bad) (bad) jg sarl aaa jl arpl dec stos jg in inc (bad) xor incl inc out mov mov int jae cmp xchg push inc xchg pop sbb (bad) aas bnd jo cltd data16 out jb stos pop (bad) inc cltd nop int stos mov insl pop and (bad) (bad) jmp repz out mov mov push jecxz inc sbb pop jg insl sbb (bad) mov (bad) (bad) (bad) call mov add stos and jae adc nop adc lret and mov or (bad) pushl jmp mov fcmovbe mov pop mov push fcomip mov or push and mov cmp inc xchg push addr16 (bad) lcall sbb ret cmp sbb test out push add (bad) (bad) jmp and mov in movsl push jmp out fisubl inc scas xor or (bad) add (bad) incl in adc push sbb in pop loopne aas test cmc stos mov sti icebp aaa fldl mov aad inc add ret mov mov in repnz clc fldenv incl jae test pushf scas lods dec xor lcall (bad) (bad) (bad) decl mov mov lahf push cwtl (bad) adc xchg cmp push andl pop aas aad mov lret ljmp (bad) lcall out test cld jle scas mov loopne pop ret push dec or jle (bad) (bad) inc cmpsb cmp mov test std xchg pushf icebp jns ds loopne sub test jmp decl fdivl push fcoml (bad) sbb dec adc add mov (bad) (bad) (bad) (bad) cmp nop (bad) cmp bnd aas adc pop jle jne repnz ds hlt leave pop pop out aaa rorl sub test adc cmp add mov lcall dec xor mov fldt sahf jl xorl fwait data16 inc mov out std lds pop xchg fiadd jge (bad) (bad) jg in dec pop pop ficom into stc sub ja repz dec stos cltd mov (bad) (bad) ljmp ret mov mov mov add ljmp std or out push rclb mov jns (bad) (bad) (bad) lcall repz xlat cmp loopne out adc jp cltd sarb sub cmpsb rclb (bad) (bad) jmp cltd fistpl int jno lea cmp fidivr sbb je es (bad) (bad) dec cs cld push fiadd jp jl push sbb and setb out lcall sub sbb stos call cmpsl out gs ss popf les sar (bad) (bad) push (bad) js je imulb adc inc fmuls and mov es inc leave mov ret jle add test mov or aas push jge hlt mov popf stos or hlt cld jl mov xor loop mov mov sub fnop scas xchg pop pop clc mov mov rorl lds in xchg neg push outsb adc xchg pop add ljmp call mov inc fldcw xor pop cmpsl dec (bad) lcall dec sbb pop and mov aas imul (bad) (bad) decl imul (bad) imul rcrb sbb bound push jge (bad) (bad) jg mov nop cmp mov inc fucom test and pop xchg sub ljmp or push inc push aas dec and stos stos aam lea lret jo loop jae jns popa decl imul hlt (bad) (bad) call imul sbb cmp cmp mov fbld pop jb xchg and pop xorb inc (bad) (bad) (bad) in bound jge imul movsl imul hlt inc jns movsl in sar (bad) (bad) lcall mov mov sub lea mov and into and scas les dec mov ds ror push push xlat xchg fcomps lds xorl ljmp pop loope cld pushl sbb (bad) ss dec push fucomi inc mov add dec or popf jge call clc int3 insl jle lcall out and push mov sbb bnd push xchg xchg jg jmp addr16 jmp shrb lret xchg mov dec or (bad) (bad) (bad) lcall sbb loopne icebp jmp lds cmp xchg int in fistp jo insl (bad) aas repnz adc mov (bad) jb xlat fs mov ret push xor jmp (bad) push cmp (bad) iret jbe (bad) mov call xor aas out mov sub xchg add flds mov cmpsl ret mov dec sbb mov mul pop test (bad) ljmp sti inc ret cmpsb enter repz pop push imulb fstpl dec lods into jbe xor lods jle fidivl lods fild (bad) (bad) (bad) incl (bad) sbb mov mov adc fistpl scas push push lcall (bad) call popf fsubr inc mov lock test (bad) (bad) (bad) lcall ret dec (bad) push in (bad) pop xchg sub in jg mov lods push ljmp jg (bad) push pop jno mov (bad) and push hlt dec xchg icebp mov mov push (bad) (bad) (bad) incl cmc das lock or dec fdivrl xchg cmp or xchg fidiv mov stc dec cmp in (bad) fidivl sbb mov sub dec loope lds (bad) inc test stos inc les xchg add lock scas gs out lods mov add (bad) jl in jno jmp pop sbb push (bad) (bad) (bad) aas les sbb jle popf outsl xor mov xchg xchg mov movsl (bad) cmc (bad) (bad) lcall or xor adc scas add fdivp sbb pop sub (bad) (bad) decl (bad) pop idiv loop mov (bad) in in mov push (bad) (bad) (bad) (bad) jge or add push inc scas cmp adc fs dec outsb mov popf xchg sbb (bad) jg dec or xchg add pop add andl ja or sub fwait (bad) stos jns mov pop addr16 call sbb jbe sbb sti add ss aas pop add jge fdivr (bad) (bad) decl pop mov dec jmp push mov andb addr16 xor or lahf cld (bad) lcall das shr mov imul inc mov (bad) (bad) (bad) (bad) mov imul sar je sahf cmc mov mov (bad) cld (bad) incl mov test jmp js dec je call sti mov out jnp inc jno adc push rcrb sub cmpsb mov (bad) (bad) stc pop adc insl add sub jns xor or mov lds (bad) (bad) (bad) lcall add cmc decb scas push ds popa mov imul mov or and (bad) jmp sbb int clc dec adc test and (bad) (bad) cmp jle loop rorl mov mov sbb lods iret cmp (bad) clc (bad) (bad) lcall sbb push out stos or jb jmp (bad) xor (bad) decl les addr16 fiadd push pop jmp negl jno (bad) jg call ror mov adc push aaa lcall lods int adc (bad) lcall mov aaa icebp pop xchg cmp mov sub mov nop pop (bad) (bad) (bad) decl ds sub fs mov popa pop sbb into push add (bad) lcall stc cmpsl in mov lret push loopnew ret shr int3 cwtl repnz and push pop or pushl popa dec lcall sbb fwait inc pop jge neg lock leave fwait mov aas ja sub jge leave inc ja push (bad) (bad) (bad) lcall fstp sbb xchg xchg sti ret adc pop shrl das nop divb aad (bad) jbe in decl aas mov jge jne fdivs jae mov and dec add (bad) ljmp or aaa add mull ret rorb test xchg sbb fistpl pop jg (bad) push addl in dec or push sbb enter pop lcall adc cmp mov leave insl fwait mov sub xorb push pushf push lods xlat or push arpl push push sbb ja roll mov xchg push das adc (bad) (bad) call pop mov roll hlt mov std xchg inc dec push lods sub fisttpll and incl add rclb enter and nop cmp (bad) (bad) aas sti jbe (bad) jp xor ficoml cmp inc test pop aaa data16 push fdivr inc (bad) incl mov enter vmptrld or xor push (bad) dec orb mov or outsl mov push sahf adc inc mov fwait sar std pop mov mov icebp movsb inc xchg fisttp sub call jecxz cmp mov (bad) fmull decl out lcall inc push xor sbbb (bad) decl leave sarb or dec mov pop push dec pop and in fimull add daa sti (bad) in outsl clc inc mov rorb mov icebp (bad) aam cmp (bad) jmp jmp xor pop sbb xor mov mov jbe leave dec movsl (bad) (bad) jmp cs pop push fcoml push adc std (bad) testb (bad) dec enter mov cmp pop add lea xchg jecxz fadds cmc adc test rcrl pop push fidivr into jge pop xchg (bad) jg mov cmpsb dec movsl aad mov test inc outsb pop bound (bad) (bad) jmp ret int push rolb scas xor icebp push loopne icebp or std pop sbb stos clc jle jl and (bad) (bad) (bad) inc lock int xor getsec jle adc cmpsb cmp arpl sahf push push iret repnz (bad) (bad) in dec mov inc icebp mov (bad) cmp jns adc jae (bad) (bad) (bad) aas push dec cmpsb xchg aaa mov pop popf push mov lods cmp ja aaa mov add (bad) incl sbb js or push push mull cltd (bad) xchg or addr16 push dec int add push incl out ljmp out push xor (bad) (bad) (bad) (bad) (bad) mov dec dec and mov sub sub pop push sti or jecxz decl fiaddl hlt push cmp adc mov pop (bad) (bad) (bad) call dec dec sti push add pop ljmp pop sbb pop or leave xor push mov (bad) jg pop mov dec xchg inc jne inc xor fsubrs int3 idivl pop hlt (bad) call adc cld repnz cmpsb loope popa inc insl mov mov lahf inc call jb pushf xchg hlt repz or cmpsl ret decl add in repz jge cmp mov mov mov sbb sub icebp lcall fcomps add adc jge (bad) (bad) ljmp adc mov andb mov xchg adc cs dec cwtl stos (bad) (bad) (bad) ljmp (bad) ljmp xchg mov cli sahf cltd dec sub mov (bad) cmp xor mov mov sub cmpsb cmp mov loop dec mov cmp stos jg (bad) out movsb insb pop cmp lahf mov pop (bad) inc cld jne push push add cmp sub pusha popf pusha push cmpsb push push popf test inc xor xor aas repnz push xacquire imul hlt push aam or mov (bad) faddl scas add cld aam stos jno (bad) (bad) call pop lret push adc mov cli xchg icebp dec sarl lods out cld call lahf inc jg or jle mov stos mov daa xchg call fisubrl out clc (bad) incl sbb ljmp lret mov insb dec cwtl out cwtl jo (bad) fcos incl or sarb jge,pn out cltd test mov dec int3 ljmp pop dec popf (bad) mov add adcl xlat loop cmpsl outsl cmpl mov dec insb mov out (bad) out add and out mov (bad) (bad) (bad) dec loop arpl jno cmp jecxz divl jle dec jmp pop xor out fbld add loopne or jl mov jmp cmp mov js roll cld add push adc inc inc and ljmp (bad) aaa fucompp fdiv int inc pop push xchg fimul add fisubl (bad) (bad) jg (bad) mov sarb cmc jge clc js add imul and (bad) incl iret stc inc push mov sub adc (bad) jae and push pop or (bad) jmp xchg nop es sahf (bad) jge xchg cmpsb jnp mov mov jg inc (bad) jbe xor cmc mov dec xor adc leave add push (bad) decl or ja mov xor fild dec push cmp cmp (bad) jg pop mov xchg int pop jb and and aam scas loope sbb mov jp (bad) mov lds add shrl sti call lds (bad) aas aaa popf lea push (bad) data16 adc std push sub mov (bad) (bad) call (bad) loopne cwtl mov pop pop inc sub stc adc je adc or push xchg in mov in push push popa roll xchg pop jne std mov pop xor jg decl sub outsl lcall sbb mov test dec mov jae test or call sbb clc std mov decl addr16 and mov mov imul push lcall jb xchg imulb xchg nop jmp mov push (bad) (bad) lcall aad jbe clc dec jns cmp stc gs pop mov fcompl fcmovnu or hlt mov gs fildl jge pop fdiv das xchg mov dec jns xchg (bad) in add popf imul clc pushl jle mov adc inc das in popf jmp jne (bad) jg (bad) jnp (bad) mov int or loop and test jo mov imul sub cmp (bad) and (bad) jb pusha xor scas scas (bad) xchg int3 decl (bad) ljmp (bad) sbb or xchg inc mov (bad) (bad) (bad) incl rorl nop adcb inc push mov mov fsub leave inc lods call mov stc aas repnz (bad) mov jl pop lret clc in xor push push fisubl cmpsl hlt pop lock (bad) fistl mov (bad) xchg push cmpsl lds fcomp (bad) mov mov std fstpt push mov cmp aas xchg (bad) lcall pop dec cmp into sbb leave jl mov (bad) (bad) js add lea rolb xlat dec jmp popf jle cs mov pop and adc idivb and jle (bad) (bad) (bad) (bad) pushl xor test test ljmp or xchg cs test mov and (bad) pushl mov pop ret mov repz cmp cmc pusha or pop (bad) (bad) (bad) pushl movsb (bad) mov loope aad sub sub lcall mov xchg sbb mov (bad) ljmp cli sub adc dec call or pop dec in (bad) jg jmp int3 mov (bad) mov sbb inc push xchg dec pop insb cmp cmp fcos (bad) ljmp mov aad imul mov mov lahf jo loopne sbb or jge mov pushl adc dec xchg mulb cmpsl fmuls outsl test cld cmp sub cld push std (bad) (bad) call imul mov scas cmpsl cld sbb jp in xchg ret xor mov lods cmp (bad) lcall push lods stos xchg ss in pusha push dec (bad) hlt insl sti test mov jns xor (bad) (bad) ljmp scas lea pop xor sbb shl lcall mov call outsb popf imul xor adc jle (bad) (bad) (bad) lcall decb loopne sub js mov dec ficomp or outsb fimul and mov (bad) ficompl push or jns js mov cmp aaa and sub mov sbb movsl sahf cmpsb and xchg pop mov pushl jmp jecxz xchg xchg sbb jecxz jo push add je inc mov lock mov cmpsb or xchg inc pop (bad) js add dec lret mov insl andl adc stc ret das outsb adc (bad) (bad) call loopne jo aam loopne mov cmc cmp mov dec adc mov call mov outsb mov test outsl jmp imul in cmp xor cmc fmull xchg xchg stos insb mov lahf aad mov xchg (bad) xchg (bad) cli cmp add rcrb and xlat jle inc pop insl push jae clc mov roll push or inc out test cmpsl clc and adc push cmp or decl adc jmp push xor jle (bad) cmp pop out jo pop repnz aas sti (bad) js and mov sbb das (bad) sti jge gs daa int3 pusha ds add (bad) (bad) jmp (bad) repnz adc cmp and and enter rol cmpsl dec subb in jb cmp xchg (bad) (bad) (bad) (bad) cmp push imul imull gs das ret xchg loop repnz cmp repz (bad) jmp lahf cld (bad) dec pop shrb js mov pop xchg (bad) mov jmp sbb (bad) (bad) lcall in stos divps add mov sbb lds jg shll xor xchg gs push lea pop (bad) jmp add movsl pop daa add adc bound stos mov lds call repnz push pop xchg mov jne lahf std (bad) call pop arpl call mov push jg push pop mov xchg (bad) (bad) lcall in push adc add pop dec jo mov mov jb jb xchg loop sbbb lcall jg mov mov cltd lds xchg in pop fs pop add (bad) (bad) incl jne xor rolb test data16 das mov pusha mov cmp cmp mov dec mov lods cwtl leave mov divb (bad) call ss pop enter inc xchg jmp incb jae or dec sbb mov stc (bad) lcall fild sbb cld mov dec add mov (bad) (bad) (bad) lcall mov jns xor in jnp inc or sbb push xchg mov inc fstl (bad) pop test mov sub bound pusha clc stos dec sub jne (bad) dec inc mov ret ljmp outsl movsl pop cwtl decl fcoms adc (bad) (bad) decl mov in outsb jp mov inc or pop sarl out clc in pop negb jg or dec call (bad) (bad) (bad) call loop or int3 push or inc movsb xchg mov dec sub sbb or adc dec (bad) jbe arpl loopne sti cmp dec sbb incl lods jae sti aas dec arpl mov (bad) (bad) (bad) (bad) out mov push and add xchg push inc pop pop std rorl push dec mov lahf cld push (bad) stos cmp jmp lret xchg adc addr16 cmp and push test xor loopne decl btcl aam loopne or adc dec adc icebp incl cmp ss and mov xchg sub pushl testl mov cltd sub xchg xchg movsb and xchg (bad) ljmp je stc push dec es fiadd lcall (bad) lcall outsl add test int pop ds stc jmp (bad) cmp (bad) fcomip imul cmp or test dec cmp (bad) (bad) decl pop mov bound jno pop test sub out clc aaa cld lcall aaa popa (bad) adc mov xor adc out mov mov jno imul addl push mov adc mov and xor add inc xchg jo dec sub jge sub mov dec sqrtps push std inc pop cwtl inc out xor je jge xchg xor incb push (bad) jmp push in es cmpsb push nop lcall imul pop push dec xor into mov cmpsb lret mov add jmp cmp outsl outsb jle push (bad) lods sub call or mov cmc mov jo inc push mov sbb arpl int xchg or loope (bad) fcmovnb dec pop pop icebp (bad) incl jmp add js inc clc fidivr xchg mov jl inc subb or push ds pop add pop inc xor (bad) (bad) (bad) cmp sbb adc inc aad or push add xor (bad) call cld jle xor icebp rcll mov sbb faddl xor incl pop inc out inc sbbb aad jecxz lahf adc push cld decl pop or add mull push ljmp mov testb push dec mov (bad) call insl or (bad) fisttpl (bad) scas mov aad cmc adc inc data16 bt repnz decl push loopne lods push push cmpsb or mov jecxz loop xchg (bad) (bad) (bad) decl cmp ss push imul sub pop (bad) add gs popa in rorb (bad) mov cmc call pop pop xchg std adc loope stos push outsl jbe cmpsb outsl jge or (bad) jg pushl xor adc in test fcompl icebp out mov (bad) mov add or xor in int xchg ja nop add dec out ljmp push cli sahf fdivl inc aas lds xchg mov loope (bad) (bad) (bad) (bad) dec popf fnstcw xchg fisttp mov popa mov mov adc mov cmp xchg call and push sbb movsb jae mov mov cwtl and mov (bad) (bad) cmp ljmp ret call or rol cmp cmp jp pop hlt stos and jmp imul jb inc addr16 (bad) (bad) ljmp mov cwtl dec aam daa and sub dec jp mov sbb add in clc adc mov pop and (bad) cmp outsb mov and ret repz cwtl int clc iret mov add hlt enter aas stc (bad) (bad) cmp sub aas push cmc pop cmc sbb inc dec push es lock cld (bad) incl sar add lcall insl or cmpl (bad) cli testb cmp push mov dec push cmp mov add add dec dec icebp cmp mov repnz test and lcall jp ja mov mov jbe fldt lock push cmc fild lret pushf xchg gs mov (bad) (bad) (bad) jg pop scas add cmpb mov mov mov fistp cwtl mov pushl stc cli or nop loope imul inc dec dec adcl incl mov pop adc lods push sub data16 cmpl (bad) decl mov ss jnp sbb gs mov pop mov cld add xchg xor sbb dec pushl or gs jne,pn cwtl xor mov lock (bad) jns inc fld int3 xchg sub mov imul shl (bad) mov cmp inc repz bound rolb test ja icebp (bad) (bad) mov xchg xor push cmp xchg push (bad) xor mov push (bad) call fisttp push push xchg popa sahf push or stc test sbb sbb (bad) decl or mov sub cmp ss cmp call repz push inc mov decl repnz outsb lret call push ret mov clc mov insl xor fwait pushf repnz mov ja call das pushl push lds imul stc jmp outsl push mov outsl xor jns scas (bad) jnp ret or or (bad) (bad) call pmullw repnz pop mov or test lret cli mov and mov jg push (bad) lret sti adc jl sahf in jp lret jge cwtl iret cli loope dec insb sar (bad) decl mov dec xor stos sub adc pusha inc fisttpll bound or idivl inc cltd icebp mov pop cltd in and into dec cmp ss mov cld repz lods fwait add pop xorl repz pop mov dec out shr lcall aas sarl jns loopne jb in xchg xor mov outsb test dec repnz ljmp mov dec sbb mov shll jmp mov cmp stos aaa lods sbb jmp cld sbb jno icebp mov int into ljmp xor inc and fsub loope add flds sub pop (bad) jg iret jge lret aam dec insb in (bad) out daa cs sbb (bad) (bad) (bad) fbld lock movsb subb pusha jp xchg mov inc stos mov out (bad) decl mov xor mov or dec stos inc out movsb push insb fwait (bad) xchg imulb sbb hlt in dec push aas sub ret fcompl cmpsl in loopne hlt or add push dec scas and sarl inc jl (bad) mov xchg call out xor ljmp dec (bad) (bad) mov mov fdivr jns lea ficoml push pop (bad) (bad) (bad) (bad) cmp ret aam jg jns mov lret inc xchg pop xlat call stc jb enter js adc sti (bad) and push leave insb aam cld sbb xchg decl add or fisubr cli fsts in es out pop (bad) xor neg lock lret popf sbb aad hlt mov js jge (bad) (bad) jg or in or sub pop pop push push mov fmull adc pop repnz cmp fwait inc lock add mov ret fdivl pop ret inc addb ss mov std dec js and lods pop mov jecxz jl (bad) in (bad) mov (bad) dec cmp jle inc test sbb popf nop das or lahf std sub fnstsw xor pop mov (bad) (bad) (bad) mov push xor cld xorb xor in ret arpl sbb (bad) decb jge,pt pop (bad) cmp cmp jmp lahf sub je mov (bad) (bad) (bad) mov js jp,pn push or xor rorb xor mov in ljmp (bad) ljmp ja test push or lcall xchg dec xchg outsl pusha push jbe sub fiadd test scas mov popa mov xchg cmc test mov dec xchg aaa sub sub adc (bad) dec dec cwtl test test gs sbb in sbb outsb mov aad mov (bad) (bad) fnstenv push int ss jp or adc dec adc mov repz (bad) (bad) decl pushl push mov cmpsl repz pop and cmp cmp mov mov push push les inc stos test aas sti decl lret fyl2x push insb lock mov out stos aam adc mov fcoml fimul cli aad add fild sbb mov and ja or sbb lock jge or lock (bad) call pushf pop (bad) sbb mov mov and dec jecxz je aad mov nop jg jg inc pop (bad) xor mov rorl cs aaa (bad) sbb fbstp (bad) enter mov jecxz or mov jmp movb add add cmp push cmpsb fistl std (bad) lcall jl dec aas fcompl push sbb jmp imul (bad) (bad) out cli xlat push push prefetch or inc test sub cli pop imul enter rclb cmpsb (bad) (bad) call lcall add xchg pushw imul cmp (bad) outsb dec sbb mov outsb (bad) push hlt sbb stos xchg (bad) (bad) (bad) dec dec hlt scas pop pop mov cli lds mov cmp ret mov fldenv (bad) lcall fnstsw loopne add hlt mov gs mov (bad) (bad) (bad) (bad) js inc pop gs sbb or daa mov in mov push pop in aaa cld (bad) cld push jnp cmc shll stos or pop int3 and in xchg ljmp clc call insb rolb xor pop mov add pop test imul addr16 dec push push and add rcll dec nop or (bad) (bad) (bad) pushl pop hlt in test inc imul sub jmp outsb push sub or incl jmp lds cmpb (bad) (bad) jmp repz insl xchg movsb lock fs es (bad) jle dec int3 inc pop stc mov (bad) (bad) cmp in add pop popf cmp jecxz outsb or dec addr16 mov (bad) (bad) mov ds mov inc add mov inc adc (bad) mov xchg int3 sbb mov push pop std lea sub lock mov jge aam push dec int ror or and movsl inc jmp (bad) (bad) pushl (bad) repnz dec push rcl xor in pop insl mov xor mov inc clc jecxz leave sbb cmovo insb mov imul mov adcl leave lds lcall xor gs cwtl or in mov cmc push fs (bad) aas ret mov xlat clc stos fistp lahf mov push cmc lods (bad) (bad) (bad) incl mov out mov stc mov popf mov and xchg xchg cmc (bad) jg xor popf xor pop rcrl xor (bad) (bad) lcall les sbb pop and das mov pop data16 add push mov xor pop mov mov dec repnz test push repz sarb notl jle push (bad) (bad) (bad) incl rcrb push pushf loope pop lock push add dec and sub movsb push scas (bad) jmp add subb aas lods mov lods in iret cmp (bad) mov add pop lock orb push mov stos adc push (bad) mov ja jmp or mov pop jp pop jne push add je outsb (bad) lcall rorl inc push negl push dec (bad) (bad) int ljmp jae rorb cmp push enter sub inc mov call in push and in push adc idiv mov push daa xor outsb das xchg xchg mov dec add jmp add push cmpsb cmp mov lcall arpl inc leave shll sarb cld (bad) mov adc (bad) les jmp and (bad) (bad) jg inc jbe dec jo in cmp das sbb cltd jo mov cmp dec stos data16 cmp lods inc scas les cld (bad) mov je test pop ds (bad) (bad) (bad) ljmp das sub or (bad) sbb dec fstpt push stc (bad) (bad) (bad) flds int3 xchg sub mov add pushf push out (bad) cmp lret push pop ljmp pop lret ud2 stc rcrb cmp push loop xor sub xor (bad) (bad) call popf xor mov push mov int iret push or jbe add dec sar (bad) (bad) (bad) dec cmp mov test pop sti fcomi jb subb in addr16 jmp (bad) (bad) lcall sbb dec fnop std jp ss in (bad) (bad) decl push fcmovnb loop pop ss lods jge push add sarb cmp mov dec sbb jecxz or ja inc cwtl loop mov shrl xorl repnz (bad) call testl sub push dec sbb enter (bad) call in mov pop sbb imul lods adc ja jbe,pn loop popa push test sub jge addr16 dec clc imul js ret mov out sbb cmp cmc scas leave mov mov dec retw xchg decl jb xchg mov imul (bad) lcall pop (bad) xchg decl jge lea or ret sbb (bad) mov cmp into cs popa pop (bad) xor lcall (bad) (bad) (bad) (bad) cmp pop inc aaa repnz sub inc xor into shrb hlt in loopne (bad) (bad) fcoms add fisubr data16 mov or jo je (bad) (bad) call in in aam lods out mov adc outsl push dec ds out pushf inc mov enter clc incl xor or adc loop xchg inc mov and popf movsb lock (bad) (bad) (bad) decl cmc popa dec xchg aas sbb mov adc xlat jnp insl inc movsl add lret and mov pusha mov add fidiv push sbb enter xlat shr (bad) (bad) jg dec lds inc sbb mov sub mov mov into jns cld (bad) (bad) (bad) jns call jmp test stos call dec bnd fsubs xchg mov jmp decb rcll lock out mov cs or (bad) jle negl push (bad) in lock (bad) mov pop mov (bad) sub or movl insl adc (bad) (bad) lcall push xor in ret mov xchg or jecxz out int3 mov sbb xor (bad) call inc loop sbb and (bad) sti jp dec repz movsl (bad) (bad) (bad) ljmp sbb inc xchg (bad) out mov cltd pop mov fimull repz mov push push ljmp iret ss fldl fildl jmp jg pop mov inc mov loop les stos outsb mov adc enter (bad) incl stc scas cs loop adc scas inc out pop repnz clc inc nop sbb push (bad) call jmp inc shr mov jp jns cli (bad) lahf fdivs push adc or mov push movsb or mov xchg xchg jbe fidivrl push sti test scas (bad) (bad) (bad) call push add push fldln2 xchg cmp xor xchg adc gs jge popf xlat sbb adc mov sub aad roll out pop cld ret mov and xlat jl xchg pop mov mov std (bad) (bad) jmp pusha or aad repnz dec mov cli pop sub xchg (bad) (bad) call js cmp call cmp mov mov (bad) (bad) (bad) jle mov mov cltd loop dec les xchg push (bad) xchg dec dec cmpsb pop push add icebp adc xchg loopne (bad) (bad) mov pop cmpsb sbb stos pop push push es (bad) xor xor (bad) or inc mov jg mov mov (bad) (bad) (bad) pushl (bad) pop sub out mov js mov inc xchg cmp outsb xlat loopne std (bad) incl adc jmp shlb xchg imul add ds xchg (bad) mov int (bad) (bad) push leave iret cmp and mov push ss jecxz ljmp aam les call jecxz and jnp mov inc gs icebp cmc (bad) (bad) (bad) (bad) mov sbb inc pop or pop in mov test int aaa aaa jbe xchg popa jecxz lcall scas mov sbb mov lcall cmp jns add jecxz test (bad) jmp ja xchg mov adc push or in mov call aas out (bad) jg dec adc mov mov sub sbb out (bad) mov dec jmp (bad) jbe sub test jb loope pop sbb sub add xor sub jg dec mov lcall loop jmp mov inc out dec lods mov call push xor sub xbegin adc mov jle add push out lds adc cmp inc (bad) movsb push cwtl push into sahf inc adc push push cld dec cmp or lods fcoml loopne push lods out cmpb hlt xchg push sbb mov inc out clc pop std lock js mov cmc add fsubp in insl or (bad) jno push push and inc sbbl inc loope pop popf cmp (bad) mov mov sar (bad) pushl jmp jecxz push cmp adc shll cltd imul imull (bad) mov enter sub mov test mov or cld mov insb (bad) dec xor xor (bad) test xchg xchg dec and out push push sbb xchg and in rcl je lods clc incl xor sbb insb mov cmp jle or loopne (bad) ljmp in sub and pusha mov add jg aas rcr imul es mov ret data16 cltd ret aad mov shll push (bad) push lods cmc repz loopne dec fs or xchg xchg test xchg hlt cmp (bad) (bad) lcall inc push jl jno jnp fmuls call addl lahf (bad) addr16 (bad) lcall fidivrl cs fs insl mov daa inc in (bad) in call add popf cmp jmp roll and mov (bad) call mov cs inc cmp pop cltd daa sahf pop adc cmpsb mov (bad) (bad) (bad) (bad) ljmp mov xchg push sub xchg data16 sub movsb adc int das pop orb fs ss fucomip clc fidiv inc (bad) mov jp sti mov push mov mov push cmp pushl xchg arpl dec lods cwtl iret sub pop and jp or jecxz and push out cmpsl lock aas cltd cmp es pop push movsb jmp call (bad) (bad) pushl sbb out xchg shlb adc int3 insl jne,pn ret jb lods mov test jno insl ljmp mov incl jl test pushf test (bad) mov add mov dec outsb cmpsl addr16 jecxz imul (bad) (bad) incl add arpl pop jae hlt adc inc popa jns fimul jno mov mulb push mov jbe ljmp jmp int stos das cmp ljmp jecxz sbb or ret scas in (bad) (bad) lcall lock inc loopne stos incb std jg (bad) sub outsl lret outsb nop inc iret cmp lcall sbb xchg push add sub and adc cmp xchg add xchg or add adc fwait js add mov push xor (bad) (bad) mov fldenv cmp fstpt ja inc lea sbb push subb and (bad) (bad) (bad) jg setl test dec pop push movsl ss mov stc fmuls or mov xchg (bad) (bad) aas bnd stos (bad) stc xchg sar (bad) scas (bad) or cmp (bad) (bad) (bad) (bad) cmp cmpsb fcomps mov loopne xor jmp in popa xor (bad) (bad) push test xor lret inc (bad) jmp repnz jns push add test ss xlat pop es mov (bad) mov hlt inc (bad) clc aas lcall and adc dec mov imull xorb xchg call (bad) call xchg jge sub mov daa mov pop mov xchg stos add decl sarl stos xchg (bad) dec dec dec push insl adc sub xchg add aaa cmp popf adc push pop push cmp and hlt inc call xor add inc (bad) lcall stos xchg cwtl sti mov mov mov xchg in xchg sbb in je (bad) (bad) (bad) mov inc mov mov xchg xchg jle mov push add fbstp pop sar int cmp cmc lcall sub (bad) (bad) aas mov adcl iret jp jecxz into rorb fnstsw jecxz or pop mov and out (bad) call clc incl mov ljmp xor sub push scas cmc in pop rclb pop std scas movsl cmc xor jbe jno push push stos cmpsb decb cmp mov das adc pop (bad) jbe inc jno sbb sbb ss (bad) call pop loope cmp jge push mov mov adc mov out pop lods mov sbb (bad) jmp and icebp cs cld dec outsb std mov jbe (bad) dec push jmp sbb jge or fcomp imul (bad) (bad) (bad) (bad) incl fwait mov mov sub in les stos xchg stc shrl cmp mov (bad) (bad) incl movsb fldenv in and cmc dec and cli mov js xchg ret mov pop sti ljmp repnz ret dec jb out icebp jp pop in notb add iret mov (bad) hlt sahf mov push cmp (bad) (bad) cmp test cmp (bad) out add fsubrl (bad) jmp (bad) ss data16 cmc mov mov (bad) (bad) jg out popf (bad) add mov mov pop dec mov test repnz (bad) incl inc in popf pop gs insb int repz ds add loopne sbb bound or imul push adc mov jb mov clc lcall mov push lods push test int mov les inc mov (bad) call popf dec incl and paddusb in loopne adc mov ret sbb cmpsb push imul cli jo mov mov aaa std inc push cmp fistl nop sub aam rcrb dec sub loopne ret (bad) (bad) (bad) std mov and jb lods ficomp sbb (bad) lds push rolb (bad) jg add mov movsl (bad) sub aad fucomp ljmp movsb int3 decl sbb ljmp das sbb pop sbb mov dec (bad) sub cmp loop push nop push dec push sub adc add pusha (bad) (bad) (bad) call push popa dec jne xchg (bad) sub cmp fidiv or push test mov lret mov ljmp (bad) and fistpl mov int mov ds (bad) (bad) jmp adc cwtl test add inc add lahf sbb sbb lret js mov add cmp (bad) call cli or mov fcomp or (bad) pop mov push push dec (bad) (bad) (bad) pushl lcall lods push jo mov xlat fstpl lret hlt mov cli inc stos ret sub lea lds cmpsb loopne insl stos icebp xor aad leave jbe adc das cli inc sub cmpsb sbb imul movsb lahf xor push push adc (bad) (bad) (bad) jmp out call mov adc dec mov aaa les divl in (bad) jmp xor dec mov loopne movsl jmp mov ds push sub (bad) (bad) decl roll pop sub cli out (bad) frstor jae mov (bad) in mov push or add in or (bad) daa mov decb add lret dec (bad) mov movsl int3 bound loop jb (bad) fcomip sub mov lock imul add (bad) (bad) dec jge fdivrl adc xor (bad) aas jno and bound or jmp add jp pop mov fs inc (bad) (bad) in dec adc int dec jp fiaddl xor xchg sbb add (bad) decl adc jmp fwait jnp in mov lock push cld lcall and test and lret (bad) and (bad) mov jecxz jb pop cmp mov imul stc pop test lods cmpsb xchg lock nop mov addr16 adc daa adc (bad) lcall cmc stos cmp popf ret (bad) jp fmull mov jmp sbb lret mov aam (bad) ljmp mov and mov mov jo inc mov rcll lcall lds sbb push or (bad) clc lcall pop ja jno dec jle lods or mov stos adc (bad) outsb loopne (bad) cmp mov in cmpl cmpsb (bad) jg dec sub popf es push xor pop xchg iret das lret fdivp xchg lock ret pop jbe mov mov call stos pop stos aas fwait lods mov movsb fild push (bad) (bad) lcall mov inc in sbb cmpsb xor xor jge mov decl cwtl dec int3 lret jbe xor push or fcomip adc mov (bad) push aaa sbb xor (bad) ljmp sbb mov sbb mov (bad) cmp xchg fucom pop repnz lods inc call call jmp inc add popf jns or mov (bad) (bad) inc repz (bad) js add xor call mov gs flds sahf fsub fcomip (bad) mov fdiv ror adc pop inc stos push mov mov (bad) pushl xchg push or jns inc lds (bad) lds push (bad) (bad) (bad) jmp mov xor cli stos daa xchg (bad) fs mov mov rol jp (bad) (bad) call (bad) ljmp or mov sub loop (bad) (bad) decl cmp sub (bad) (bad) xor add or ret fnclex and sub pop (bad) (bad) dec inc or lret shll lahf cli cmpsb mov mov and and clc (bad) ljmp clc xlat fsubr sub rcll mov mov mov decl xchg popf adc mov das popf stos push push aad lcall mov stc outsb inc mov enter push or stos push inc fdivrs fmull xchg (bad) dec (bad) sti int scas std jnp adc jb jne mov cmp lcall iret addl addl sbb pop xor add jg cld (bad) cmp xor cwtl (bad) mov pop or (bad) (bad) (bad) incl jns mov shlb xchg mov addl sbb sub fxch rcrl repnz decl jo and xchg pushf jecxz stos mov les (bad) ljmp or xor das aas xchg js aas cmp push icebp mov aam ljmp int3 hlt hlt loopne adc out sti push add add (bad) (bad) (bad) (bad) jge xor int3 sarb dec sbb mov and lcall imull sahf mov int shrl mov jge add push jle (bad) aas sbb icebp jmp sbb shlb lahf (bad) (bad) (bad) mov push aas adc pop loopne mov fdivl dec mov sbb and das sub prefetch or mov or movsl vmaxsd (bad) out or mov pushf aas aam mov into loope sbb scas enter push bsr push pop pop sarb hlt mov sub jge outsl stos ficom (bad) decl adc (bad) fstpl cli jle in dec mov mov dec mov aaa into or (bad) call or loop lret sub inc lock enter movsb inc or pop ds jge mov mov mov adc mulps mov pop adc int sub (bad) fisttp adc add mov mov (bad) (bad) (bad) jmp and mov testb mov push mov lods adc popf sub (bad) (bad) decl jmp dec ja jl iret adc pop push stos fisubrl (bad) mov cmc add orl add out xchg xchg out inc add (bad) (bad) ljmp add xor push cltd jmp out jno dec rclb mov mov (bad) ljmp test test gs push cmpsb rcrl cltd xchg sahf sub (bad) (bad) (bad) (bad) in pop lods cld je and lods loopne pop jmp pop xlat call pushf sbb xchg mov movsl or out xchg sub inc cli mov sahf mov aad sub test stc (bad) (bad) (bad) jmp es push push jae stc or jg pop jp sbb jns imul test aas repnz fcmovne mov (bad) daa xor out adc (bad) (bad) (bad) ljmp imul mov mov sub lock loope pop cmp add mov incl jl xor call xchg lods xchg mov cltd test (bad) ljmp mov xchg sahf push ret inc or pop jp mov out jne aaa mov inc ja jg shrl in inc xchg mov sbb cmpsb aaa (bad) pusha or xchg mov and cli orl out or loop and clc (bad) (bad) lcall jne mov ret xorl ret jb xor out lods (bad) (bad) inc adc sarb or pop cwtl repz jbe pop lret inc ret (bad) call fwait clc movsl pop or sub jns cmc xor fiadd in das lods pop add mov decl test sbb push mov jge aas lds ljmp mov xchg rcrl mov loop dec in rcl xor and jne xchg out sbb sarl inc inc ret outsb cli (bad) (bad) pushl test lret fdivs mov lret sub fcmovb (bad) std xchg jp rcll jbe rolb push dec pop push xchg sub xchg (bad) (bad) lcall imul and inc fcmovnb icebp sbb push incl jo add aad dec and inc cs mov (bad) decl xchg je mov xor jmp adc jno pop mov (bad) (bad) dec sub sahf push sets (bad) (bad) mov les in jle int3 (bad) rcr lcall int adc (bad) not xlat jle cmpsb int3 mov scas call hlt jns or jg test add sahf cli mov add sbb cld ret in into adc (bad) mov or ljmp dec mov mov jbe cmpb adc sbb inc es push and jg push add cwtl push fwait mov cmpsl xor xchg and mov (bad) jmp mov movsl dec (bad) lds mov int pushf lock inc mov jl imul cld cmp fidivrl aaa ret mov test push ficompl cmpsl dec (bad) (bad) (bad) call pop adc sub sub mov mov loope mov mov xchg dec push mov popf adc jmp repz (bad) (bad) (bad) call cmpsb leave mov sbb mov shlb repz std je cmc test inc loop sub inc add add inc repnz pop out popf mov lcall fsubrl and pop adc stos push adc mov jns fcomip (bad) ljmp pop call ja imul fmul cmpsl ja pop mov (bad) (bad) (bad) (bad) jmp sub std dec jns popa mov push cmp (bad) push mov mov fnsave dec push (bad) call cld jo cwtl jae add or pop cmp push mov negb outsl lret lahf or je mov rcrb sar (bad) lcall add jmp ja xchg sbb or mov sub outsb call scas addr16 inc xchg pop incl cld jg scas add test jg sahf xor push mov pushl jns jo in js sub adc lret lret ret out aaa pop cli cltd sub loopne mov lcall in iret mov popf in js and or cmpl mov shl add xchg mov mov mov and cltd (bad) (bad) (bad) decl dec scas dec mov dec test imul push xor test (bad) (bad) xor pushl cld sbb pop sti mov jae imul xchg pop jge lcall mov add xchg fwait xor out jle dec pop add (bad) (bad) decl or xor or mov add test lods pop or rcr andb inc sbb inc mov jle xor adc int3 sahf jne (bad) (bad) inc mov lcall (bad) mov shrb mov or (bad) jl test pop mov pop (bad) sub out dec and inc outsl pop xchg (bad) ljmp (bad) adc xacquire push mov dec inc add test pop jg call mov es mov jns (bad) (bad) (bad) jmp and jmp push xchg cmp aaa aad cs push imul mov lods cmp pusha jo dec mov and mov (bad) cmp jecxz or int3 fcom js lods xchg adc test mov int enter shlb (bad) (bad) ljmp sar inc xchg and push mov out sbb outsl jle jmp (bad) incl xchg dec sub loop fcomps xchg rorl (bad) cmp incl add push fwait mov mov xchg gs (bad) aas add idivl pop pop add (bad) into pushf icebp mov idiv jmp mov cld lret inc dec xor or lcall pop ret rclb mov push or cmp (bad) (bad) (bad) pushl sbb or mov dec dec sbb inc movsb mov dec add mov incl jge or dec in sbb loop insb mov ljmp cli (bad) jge stos fisubr xchg cltd xor jle data16 lds cltd fisttpll or inc mov inc aas mov imulb dec imul pop sbb pop mov adc movsl jno loop aas sbb adc dec push iret add es pop jge imul cmpsl sbb xchg enter or icebp dec jg cld (bad) (bad) add mov insl push insl repnz sub (bad) (bad) (bad) decl pop mov outsl stos mov push inc loope shrl sub sub xor imulb and and in mov inc jno (bad) (bad) (bad) aas mov aad jno mov add shll in pushf fstp test bound je inc out enter jge sbb cmpsb mov pandn es les incl cmc pop test xchg scas push sahf sti je sub incl ret and call jecxz push cld (bad) pushl jg cmp mov add ret and (bad) jg icebp popa or cwtl ds cmpsb mov mov in data16 xlat fdivrp mov dec xor sub lret rclb dec and data16 call add daa add cmp push imul dec clc pop fwait lock fsubp and mov clc (bad) mov inc xchg repnz jle inc sbb xor mov (bad) incl iret pop scas lock sahf ja add stos xchg xchg testb (bad) sub (bad) (bad) call ret movsl cmp xor sbb and mov or dec pop mov mov mov jbe lods push adc cli in cmp outsb sub popa shll (bad) (bad) (bad) cld enter cmp shl mov sti jg xor push sub pop addr16 sub ret aaa (bad) (bad) dec jno push popf adc scas popa adc aad (bad) popf jp fadds mov jo mov out mov lcall or pop decl gs inc aam xchg xchg jp in (bad) jmp gs adc iret inc sbb loop xor sub mov jno (bad) (bad) (bad) mov xor fnsave addr16 fwait inc daa in inc gs sbb mov cli iret pushl and lgs loop cmp (bad) (bad) lcall add sahf lds push or lods and cmp xor mov push loope sbb pop (bad) sub sbb ret inc pop ja fildll add xor push xchg xchg insb (bad) (bad) (bad) incl mov ljmp hlt (bad) gs flds xchg js imul rcr pop vpminub cmp popa enterw in hlt (bad) (bad) (bad) pushl shr mov cmpsb mov aam cmpsb cmp push and mov add push sbb xchg (bad) incl xor and inc mov out mov out mov (bad) (bad) (bad) lcall (bad) lock inc fnstsw sbb push in jns dec inc push aaa stos int3 clc ljmp loopne pop loop insb sahf out jecxz (bad) mov js pop and lret movb mov clc sbb sub (bad) (bad) (bad) fisttp sbb xchg popl inc jno js test out mov inc jecxz (bad) push popf xchg (bad) (bad) mov incl inc (bad) dec dec dec and movswl hlt js and inc cli dec mov cli or (bad) ljmp (bad) cmp xchg lret outsl xchg adc push push lods arpl dec (bad) (bad) (bad) incl lea and mov mov aad jae pop mov lcall hlt jmp jge rorb pop sub adc aam ljmp push push ror movsb lock lret hlt pop cmp and or int3 dec into push inc rorb (bad) jmp bound cli insb xchg jns in inc pusha xor pop iret ja nop push xor (bad) (bad) (bad) (bad) out cmpsb push out inc mov xchg in in pusha mov sbb (bad) hlt push fdivr adc decl jg cmp mov mov mov xchg popf loopne and (bad) (bad) ljmp xchg ljmp lret fwait mov (bad) xor pop dec int and jmp xlat repnz add sbb lock sbb lahf (bad) lcall sbb mov jg sub in dec cwtl dec loopne jecxz sar mov xor lds cli sub dec clc insb (bad) imul adc jle xchg loopne cmpl lcall lret dec aad mov mov pusha jl adc add mov jmp repz sub or pop fisttpl add fisttp movsl lods (bad) adc pop jbe sti mov addr16 (bad) call xchg mov cmpsb pop pop mov aam insb rcrb add fcomip pop jecxz dec (bad) stos in sbb in xchg repnz dec (bad) (bad) (bad) inc mov mov out fsubrs rcl mov sahf xor cli ror push sub xor mov push stc (bad) lcall xchg out jb std jg clc push fcomps movsb outsl cli (bad) decl sar xchg sub jbe add jnp arpl inc mov (bad) decl hlt popl enter mov jecxz mov and daa inc push (bad) fbstp fild mov rol lret fbld (bad) (bad) (bad) decl inc cmpl or rcrb mov hlt and test mov mov jae push pop sbb das push insl (bad) (bad) (bad) (bad) incl std push in pop divl aam adcb addb mov xchg addl push stc (bad) stc dec push inc loop fdivrp ja fwait add inc sar (bad) (bad) mov adc jecxz inc and jo mov (bad) dec aaa sti push jns sbb test fisub mov and mov in mov sub int xchg fldt pop cmp adc push mov xor mov sbb xor sahf and (bad) decl push nop addr16 jne popa mov leave pop add (bad) (bad) (bad) decl aas cli lods cld jmp nop adc xorl fstpl xchg push aaa mov into (bad) call lock jmp outsb enter add and std (bad) decl scas push cltd cmpsl push (bad) (bad) dec pop (bad) scas fidiv mov (bad) pushf cli lcall call adc rolb ljmp adc leave aas xchg or (bad) daa xchg (bad) xor mov es or cmc (bad) (bad) ljmp call test xor xchg sub das out (bad) stc (bad) (bad) ljmp out jl inc mov mov mov xor adc aad aaa pop in (bad) (bad) (bad) call clc ret roll scas std xor xchg arpl push jl sub pop scas (bad) incl stos pop sbb (bad) stos (bad) divb (bad) ljmp and lret es add jecxz cmc add lret addl push scas leave pop jge cwtl jno lcall inc xor gs les (bad) stc sub repnz das jl jae insl xchg (bad) jmp cmp int3 add repz dec sbb nop (bad) jg mov addr16 xlat fistl es push xchg (bad) lock (bad) ljmp (bad) xchg popf mov mov movsb xchg mov arpl (bad) mov ret add mov adc call sbb pusha xor loopne sbb or inc lods jmp adc dec push loopne xchg ds adc jmp (bad) ljmp mov gs push mov pop (bad) adc arpl aaa dec ljmp add rclb jg adc sub inc fisubr (bad) (bad) (bad) ficom xor int3 outsl addr16 inc (bad) jne andb ret clc pusha xchg (bad) in aam jg mov mov (bad) incl fisubr push out sahf ds shr adc sbb (bad) (bad) (bad) jmp xchg int3 push cmp sbb xchg mov outsl cs adc xchg cmp mov mov mov test insb and lock ds ljmp lock fcomp jnp (bad) jg mov popf sub cmp (bad) (bad) (bad) jg jle enter dec in out and shlb call adc int3 or (bad) (bad) dec push sbb imul fwait lahf and call arpl mov stos (bad) jg popl aam dec outsb in inc sbb jle mov mov mov lock decb push sub fadds sub sahf shlb (bad) aad in mov mov mov xor (bad) (bad) ljmp in jecxz nop div daa xchg or push sub mov lahf cld (bad) incl or xorl jne jbe cmpsb jne jmp (bad) (bad) cmp hlt inc jl push nop push xchg inc loopne mov pop cltd jbe and add (bad) ljmp in xchg into stos std fwait jp sbb mov scas sbb sbb addr16 jle push mov ficoml mov (bad) incl mov and adc out mov or mov pushl or or mov imul (bad) ljmp adc xlat cmpsb popf (bad) pop fwait xlat inc dec mov push fcmovu inc inc sub cltd gs cmp dec dec es (bad) pushl imul jg stos xor fisubr subl push fstps test into cmpsb fcomip (bad) (bad) fldl2e xchg sub mov outsl jb hlt dec movsl mov sub loop ljmp sbb ja and cmp test mov popa push cmp or push or (bad) (bad) (bad) ljmp push out inc jle or and inc movsl pop (bad) lock stc call mov out iret in push mov (bad) jp sub add mov aaa std fcomip mov out xchg cwtl movsl dec hlt faddl jge inc movsb adc test and frstpm(287 fcoml (bad) cmpsl loopne out mov mov outsl mov sbb icebp pushf clc in inc sbb (bad) (bad) (bad) mov repz ret mov aad ds mov (bad) popf push test decl or test imul loope dec std (bad) (bad) (bad) mov push arpl or loope rorb xor inc push mov push jmp stos in pusha pop popf push mov jl mov inc mov decl les je mov jmp sbb xchg (bad) (bad) (bad) (bad) out lds fdivl lods xorb (bad) jmp lds lahf adc popa (bad) decl mov adc sub jg inc push add (bad) jmp add xchg add icebp fcmovbe out cmpsl or into xchg sub dec or push icebp xchg xor inc (bad) mov or xchg pop add in add test fistp decl sbb sbb mov dec cmp mov add incl std decl imul rorb push push (bad) (bad) (bad) (bad) in cwtl mov cmpsl out jne pop jns or inc push mov out jo inc gs call fsubs nop test pushf js aam in push sarb outsl (bad) mov (bad) ljmp dec mov mov push scas (bad) ds or lds test popf push shrl int (bad) rclb arpl (bad) (bad) (bad) incl push mov sti xor sbb cmp fldenv pop (bad) lcall dec movsl outsb xchg or cmp mov mov (bad) aas loope sub mov negl std lds pop cmpb (bad) (bad) pushl cmp mov js jno pop cmp testb stc mov addr16 inc popf lcall (bad) mov insb push ret sub cmp cmp push in imul pop insb (bad) (bad) (bad) jmp cmpl loop inc insb popa mov jle ficoml xor pop pop and pop stc call xor stc xor das mov test xchg pop jmp jg mov ret jmp mov sbb adc loop push dec sbb mov decl jg dec mov xchg mov imul (bad) (bad) jmp movsb lret (bad) int inc and pop lcall jge xor dec imul ljmp jg (bad) jmp xor push pushf jne or sahf rcl lock dec imul mov push pop insb movsb test mov ja ret mov mov jp (bad) fild adc iret ret cmpsl out jns xchg scas loope lcall dec jge lret mov push les push sub ljmp pop (bad) or push push icebp decl jo dec jnp mov std and push mov mov clc jge imul push inc repz or lods jns mov dec cmpsl dec out cli (bad) (bad) (bad) je add jo fs test (bad) sbb mov fisubl movsl (bad) pusha in test addr16 mov cmc (bad) (bad) (bad) decl (bad) dec mov jno lods in cmp push test jnp jp add fsts sbb cmpsl loope loop add mov (bad) jbe pop movsl loop sbb inc jne xor inc jg test lret jne xchg mov jg (bad) call call sub dec mov scas fdiv or sbb add dec (bad) xor inc (bad) lock (bad) incl push jg lods cmp mov mov push push inc int3 popf call (bad) fild daa cmp sub pusha inc pop mov ror cmp jecxz xchg jns jmp cmc dec inc push add or pop and outsb lock (bad) (bad) incl and mov gs push sarb pop inc push dec dec std lcall fbld xor cld pop push push cmp js or sub xchg cmpsb or inc cs (bad) (bad) jmp mov add negb lahf les and arpl jbe adc movsl (bad) call aam insb dec lock (bad) sub psubusw (bad) mov test (bad) lock add fcompl jl (bad) mov cmp jb adc inc push pop and pop vmread int3 sbb aam cmp mov or cmpsb in (bad) std (bad) (bad) pushl daa mov imul xchg shrl mov pushf jg pop cli dec jno mov fisttp div inc xor (bad) (bad) incl cmpsb mov hlt call inc fdivr cmpsb rorb xchg and cmpsb movsl movsb jp jne out dec cmp lcall and sahf mov push jo pop cltd das (bad) (bad) (bad) lcall cmp aas aas or fmull mov xchg je jb sub test push imul cwtl (bad) (bad) ljmp pop popf sub xchg lret dec hlt xor es xchg test adc jbe leave fcos mov (bad) cmp (bad) insl scas mov mov stos and jge (bad) (bad) decl push jp add pop xchg xor popa push and mov and out ja cld lcallw imul es rcr and sub lahf xchg aaa notb (bad) xor mov int frstor cmpsl or (bad) incl scas fwait sbb pop cmp rorl sub incl sub pop mov aas sar ljmp cltd xor std mov cwtl cltd xor (bad) (bad) (bad) pushl sti inc sbb lcall es movsb (bad) sarb push mov adc jle inc xor lods mov frstor adc clc push pop (bad) mov addr16 mov loop out and pop mov (bad) fistp sbb jb adc loop aaa jne js out pop and and mov jmp cld lock xchg dec cmp je cmpsl mov aaa ret add (bad) outsl (bad) (bad) push sub jne scas imul fcmovb into stos push inc mov dec (bad) lcall imul aam adc outsb jbe das data16 (bad) (bad) decl loope xchg xlat loopne jle pop sub lret fcoml adc push xor jge int3 jle push jl xor (bad) jl xor mov jecxz or stos mov iret stos jmp (bad) (bad) ljmp inc mov lods mov inc lock out cmp jno cmp (bad) incl cld dec inc push lods mov jle jae js stos (bad) (bad) decl mov rcr fdivl in leave and sarb (bad) int3 push pop popf int3 sub push sahf pop xchg mov loopne sar (bad) (bad) jg dec jle stos and mov addr16 mov jnp (bad) (bad) (bad) decl cwtl lahf scas out std mov jbe mov loopne jp cmp mov lahf adc repz lcall xor dec test xchg ja pop fcoms ja int in iret push pop xchg (bad) (bad) (bad) (bad) clc das sbb (bad) fldenv jae cmp dec or inc stos inc cwtl dec stc inc pop xor jae sti inc (bad) lcall stc sarb fs rorb jae push lock cli xchg stc cmpsl daa push addb cld decl popf cmpsb (bad) je outsb adc loope iret mov push lahf mov decl movsl les lahf pop jmp adc (bad) in (bad) jmp mov xchg push add loopne iret or mov daa jmp stc cltd mov jmp fwait pop scas mov dec cmovs add addr16 loopne sbb aad pop decl lock mov ret mov (bad) sbb in pop xchg sar (bad) (bad) decl je vmovapd jl jno mov js leave sarl dec ret ja lock (bad) jg lods and out outsb out fcmovnb xor mov cmpsb notl push lahf stos xor inc or inc push jmp mov adc jg in (bad) sub fisub xor (bad) (bad) (bad) cld gs enter lret out ja add ds leave outsl jp or inc push xabort into and push scas jmp inc inc push ljmp inc dec lcall (bad) (bad) (bad) (bad) sti ss fs int3 cmp dec mov mov je inc outsb enter (bad) call xchg or movsb or xor xchg (bad) mov inc (bad) popa lock jns (bad) jno or push call imul int3 dec jge nop ret out loope (bad) jg cld push inc sbb push mov cmp and (bad) (bad) mov cmpsb mov ret dec std xor and xchg xchg mov lea dec (bad) incl inc xor xchg addb or outsl (bad) (bad) cmp (bad) mov call bound mov test ljmp sbb push push jp jmp ret sahf rorb add (bad) aas xchg or or xor dec inc or pop sbb pusha (bad) (bad) (bad) inc and loopne dec sub out and mov mov pop (bad) inc pop in xchg push decb lcall jge mov pusha fstps (bad) jbe (bad) (bad) pushl or push xor inc iret and outsb rorl or scas ret cmp lods sub mov cmp mov daa mov push popa pop add movsl (bad) ss ret inc std mov jl sbb xor fildl clc or pushl push std fisubrl adc jnp mov inc icebp in clc (bad) ljmp jns mov dec fisubl (bad) or (bad) in sar std out bound xor hlt enter mov inc cmp (bad) aas cmpsl icebp mov bound cltd sub jg test lea (bad) into cwtl lcall lock sti adc dec push cmp jae dec test mov (bad) (bad) call shll fcmovbe ret jp add popa adc xchg inc jmp inc (bad) (bad) pushl pop mov js popf sarl xor mov incl fwait cmpsb out lahf cld mov imul mov push fldcw jb xchg push (bad) lcall popw and jbe push adc mov data16 sbb mov call mov loop mov or cmp sub jno and lods mov fidivl lret xchg push fiadd dec call decl imul push adc in ficompl push mov fildl shrb test xchg test cmp push data16 ret dec jnp,pt aaa cld (bad) inc jge jl lahf cli mov mov clc bound mov mov pushf ds (bad) (bad) (bad) cli inc test bound mov out adc mov or (bad) call mov xchg std in je addr16 sub repnz push andl lock decl xor dec or test imul xor pop jae (bad) jmp ror repnz int push popf int3 add int3 dec shl pop push pop (bad) (bad) (bad) jmp inc jae pop cmp dec (bad) jb fwait ret cltd push lea int sarl lahf cld (bad) mov out inc inc mov inc jmp mov xchg es (bad) (bad) (bad) (bad) ljmp leave iret xor dec pushf push pop add inc dec sub insb movsb (bad) or jmp push mov mov fadd push xor fisubl lcall inc mov lcall inc inc pop push lret push in out scas mov ret dec sti or clc xchg (bad) ljmp sahf gs dec iret jne iret int push inc ret (bad) (bad) out faddl inc (bad) (bad) sub nop lret xchg jge popf repnz jbe enter jb inc aam outsl out pop inc (bad) daa cmp les sbb daa ret daa bound out inc les leave stos inc xorl dec dec (bad) (bad) (bad) jg push push aas sbb jl mov xchg int3 (bad) jnp jno push (bad) cmc loop popa push dec sbb jg xchg cli add rcrb (bad) add cli add pop flds xchg aad out sub ja orl std xchg mov cld jg pop xlat mov mov fnstcw jle push mov dec aas stos ret dec mov out cmp fbld les (bad) xor (bad) (bad) (bad) pushl imul cmp icebp mov in loope in cmp mov jl mov jmp (bad) mov js xchg mov add adc pop imulb (bad) (bad) (bad) inc mov loope,pn mov xor dec jge jge movsl jle insl cwtl out rclb cld xchg decl (bad) dec daa insl push repnz jl js sub inc ret idiv (bad) (bad) call scas fstpl pop mov mov aas cmp jecxz lods pop sbb xchg in xlat dec lahf sar mov and aam sub xchg inc pop jbe mov mov in mov out lcall sub nop push (bad) (bad) (bad) call pop dec push xchg ficoml loop leave jae push mov xchg jp jns (bad) (bad) jmp loopne cwtl aas or outsl nop xchg es push sub mov and in (bad) call or dec jmp mov pop pop sub mov pop jl sti cli jmp sub dec add adc mov (bad) call outsl aam xchg imul loopne push (bad) mov shrl (bad) (bad) aas imul stos (bad) mov xchg sub lret jg pusha push popf (bad) (bad) (bad) jmp in mov inc sub (bad) add lods sbb pop mov pop ret push or or pop call fdivrp aaa push aam add pop arpl cmp test mov (bad) mov and jnp push rorl inc gs mov ds ficomp sub and (bad) jp (bad) or sarl loopne das int3 fimull mov cmc lods adc mov sub sub pop pop cwtl xor fs mov out (bad) ljmp xchg (bad) fdiv addr16 inc out in add inc ret adc cmp (bad) in decl cld shl ret push sub mov or loope pushf xorl insl or nop pushf ja decl cmp (bad) in stc sbb lret push mov xor jmp inc outsb adc clc (bad) cmp jle lret insb sarb sahf out mov ss (bad) lcall shrl sbb (bad) jne and pop ljmp outsl jmp push xchg push push pop jmp bnd xchg jb mov mov iret fstps ljmp lock pop mov push adc (bad) (bad) (bad) pushl cmp int3 add or sahf fist cmpsb adc (bad) int mov xchg mov xchg mov push mov push aad scas sbb mov (bad) push int mov cmp sbb popf mov movsl in push pop dec das sar pusha xor and (bad) ljmp not jo call repnz sti jl aam fs das mov mov jmp push (bad) call mov jb jns inc (bad) pop adc sub sub xor push jmp push push pushf out sbb leave sbb (bad) (bad) pushl xor jae js or out or jnp cltd mov sbb push and test hlt (bad) jns aas add adc push dec jnp call loopne sbb jmp push subl adc (bad) (bad) (bad) out (bad) data16 mov imul xchg fiadd or adc add (bad) xchg add adcl lods (bad) (bad) (bad) incl mov pop sub iret lods stc push pop pop movsl or add sbb cld mov (bad) (bad) dec fsubrs into loope sti hlt inc push aad decb pop jge mov adc (bad) (bad) (bad) cmp (bad) sti clc or cli daa pop xor mov rorl mov mov (bad) (bad) (bad) (bad) lcall icebp push imul mov inc leave push pop fnsave mov gs cwtl repz (bad) jg or lock mov and xchg push movsl lods inc loopne push xchg push sahf sti (bad) decl data16 pop add imull repz mov mov mov mov push out outsl fcmove imul outsb cmpsb into int3 (bad) (bad) decl mov add out lock or mov rolb push (bad) dec fst fnstsw add cli inc loope sub xorb fidivr sub fimull icebp or iret and ljmp lock insb push into jl push ret mov fist cli mov clc pop inc and outsb in nop add (bad) inc adc jg (bad) cmp and loopne pop pop jl lea mov cli in push out sbb fucom sahf push loopne mov int aad mov (bad) inc or mov inc cmp out mov jecxz dec inc fwait mov repz (bad) (bad) incl loopne xor push xchg cld stos or pop call pop nop lods loop (bad) movsb mov aas repnz decl (bad) hlt cmp sti cmp mov push lea inc out push rcr or insb movsl inc (bad) (bad) (bad) lcall jne xchg mov imul bound outsb sti iret push push mov adc xor das dec jp adc pop repz ljmp call (bad) (bad) out dec inc (bad) mov dec jle inc (bad) into xchg leave mov loope or (bad) dec mov xchg add mov xor stos push mov sub mov mov xor sbb (bad) (bad) push stos jne inc (bad) (bad) jmp push int3 cmp jmp hlt xor lcall xlat clc pop and sub das (bad) lea (bad) (bad) (bad) decl ret sbb pusha lahf leave test xchg push push jg out aas js cli cltd clc add ljmp pushf mov adc mov xchg lret mov and out add jns pushl cld (bad) std ficom sar std dec jp sub stc mov scas lahf pop xor scas cli (bad) jmp push cmc outsl (bad) cli xchg adc cmc fld pop fs fs pop (bad) dec (bad) and jecxz xor and mov add dec loope cs dec cmp ret fisttpl es je es pop out push hlt pop icebp mov outsb dec (bad) call daa xor loop sahf push dec push xchg dec rcrb lock mov jg pushl cli sub add adc push lcall incl jmp inc push popa std push inc and (bad) cltd in (bad) (bad) (bad) lcall inc sbb jae inc (bad) rcrb (bad) testb push cli lock or mov popf imul or (bad) lcall pop dec movsl jge imul push xchg sahf add sub (bad) jnp (bad) (bad) (bad) out js scas int3 push insb add sbb dec cltd xchg cwtl gs mov inc (bad) popf and fisttpl cmp inc scas sub or jg inc cld and push jb fdivs and pop data16 in jmp (bad) (bad) jmp imul mov scas xor lret lods jbe jecxz ds jmp (bad) (bad) jg jnp lcall mov mov dec or leave stos pusha push lret mov stos cs push xlat xchg pop add sarl cmc aas pop popa push xchg mov imul loopne (bad) (bad) (bad) aas pop aad ljmp fwait lahf loope and push mov cmp sbb sub cmp add xchg lret jmp (bad) ljmp insb push enter in nop push inc scas or xchg fstl mov mov dec mov in movsl ja cmp cmp std jle jg aas fs xchg insb scas repz (bad) dec andl (bad) fild push pop jnp jge pop ds mov clc jnp mov (bad) nop repnz push or and add (bad) (bad) fldt xchg adc push loop xchg push iret xlat pop xor and dec std (bad) fbstp push push aaa cmpsb rcll out push (bad) (bad) es (bad) (bad) (bad) lcall idivl fdiv rcll mov sbb loope sub nop jnp pop add ljmp (bad) xchg stc stos mov inc pop mov cmp and decl and (bad) dec insb push mov mov xor movsl stos xchg xchg insl das xchg inc andl sbb pop (bad) jnp scas clc pop loopne inc or push lea xor in ja ja sbb call mov pusha sarb (bad) (bad) (bad) cld cli push push or mov adc inc out nop addr16 mull movsb jge jmp icebp lcall jmp aaa fdivs out push popf out (bad) (bad) (bad) lcall add ret xchg sbb cmc dec sbb dec jle data16 bound (bad) jmp (bad) push imul movl scas adcb (bad) (bad) (bad) call roll (bad) leave mov push pop fbld mov loop test xchg (bad) pushl cmp mov ret dec mov stos push sar int mov fildll jecxz xor decl insl mov inc (bad) pop cmpsb inc cmp mov adc add loopne push insl (bad) cmp daa cmpl (bad) (bad) decl and je ljmp cli enter pop out sbb push data16 (bad) lcall int into movsl push xor dec (bad) dec inc pushf or sub gs aas adc mov stos or xchg insl lea sti cmp (bad) (bad) pushl into hlt push arpl int3 ja leave mov data16 pop (bad) iret aaa int cmp mov (bad) cld mov cmp dec push push cld clc (bad) ljmp adc xor cmpsl mov inc sub (bad) enter jns int3 add xchg push (bad) in mov jge and pop movsb lods inc shr jmp int3 pop mov or jb sbb cs cwtl lret (bad) (bad) call sbb aaa (bad) jnp test push mov pop ss in pop jecxz xlat and adc (bad) mov in fdivrp or (bad) (bad) ljmp dec add mov push or lret clc dec test jb xchg incl lcall inc push test test adc or xchg sti dec pop xchg xor (bad) (bad) inc lods mov push pop inc cmovle cs mov aam inc push push les andl sub fidivrl sbb (bad) rcll daa lods jb nop xor jns fwait xor xor fiadd andb out lret in fs mov and lods jne (bad) jg std add fiadd lret insl fdivs pop mov stc dec mov (bad) sbb (bad) (bad) jg fwait push jp or xor sbb push sub and jns lock mov popa std call out mov jg push mov loopne cld (bad) decl mov roll fstl shrb push cli decl movsl and pop xlat pushf aad incl mov sub cmp loope jae mov (bad) (bad) (bad) mov push loope bound add mov in xchg mov sub adc and add (bad) dec mov lret (bad) jne fucomp pop inc outsl lods add add jle movsb (bad) (bad) (bad) push jmp fwait test lcall out pop jle ss jmp jle inc cld aaa std jo pop ret pop jns ja pop hlt dec in (bad) (bad) (bad) incl mov xchg cwtl mov inc neg (bad) and in jmp movsb repnz (bad) (bad) fistl lods test int adc mov sub es cli mov fs aas repz add cld (bad) cs ds (bad) (bad) (bad) incl addr16 dec xchg scas dec loopne xchg mov hlt movsl push and ljmp std cmp mov lret cmp xor (bad) (bad) (bad) ljmp pop mov push cmp clc shr adc shll lds ljmp sub inc xchg pusha lret fsubrp sbb xor ret (bad) (bad) jmp scas adc hlt add repz push lfs movsl dec lock out cmpsb (bad) push imul aam dec fbld fs push arpl (bad) (bad) push out sarb inc sahf into push notb insb int3 arpl sub and rclb call fcoms xchg lock mov jg and dec in dec cwtl mov (bad) mov in mov cld cmpl cmp mov add incl pop lods dec cmp shr jne xchg fldl test cmp into movsb xlat inc or negl mov in xor ljmp mov pop ret mov loopne fistp insb repnz rcl jnp pop pop jle std (bad) (bad) lcall and mov aam leave ljmp xor inc mov (bad) (bad) decl jnp dec xor flds out fstp gs loopne das into fiadd ja (bad) (bad) lcall jecxz push pusha (bad) ss std inc sbb mov xchg cmpsb and gs loopne adc push imul push jbe push xchg (bad) sub pop pop xchg jbe mov (bad) xchg lcall dec mov (bad) (bad) decl inc jne mov mov nop cmp or inc outsl rcll fiadd mov call test and adc (bad) (bad) jg rcll inc xchg (bad) sub add mov movsb out push in fmulp jns xchg mov inc (bad) decl je sarb xchg adc aas inc imul push popa (bad) (bad) decl movsl sti (bad) data16 lret jmp out push sbb mov (bad) dec cwtl rclb dec jl sub push dec std mov dec dec shl adc popa decl (bad) (bad) (bad) (bad) jmp rcll dec test push sarb pop lret jb inc sub push cltd xor push stc jmp and dec cmc lods insb push in fisttp (bad) (bad) jmp movsl pusha sub fwait cmp into sti icebp jmp pop scas mov xchg and inc loope add and out fwait xlat inc push xchg (bad) call std idivb cld sbb fcoms or es jmp frstor fwait ja (bad) repnz inc out ds scas cmp push push pop mov (bad) aas add ljmp scas add pop and jmp mov (bad) lcall rorl aad out sbb mov dec xorl pop cli jae aaa cld mov xor notb adc jg cmp mov pusha lcall mov push xchg (bad) jg call cmpsl pop aam lock out out iret lea push push cmp jne (bad) or std scas mov mov mov or push add cmp (bad) jg mov push addr16 call dec stos pop mov and push push icebp sub push movsb mov decl sar dec sub in (bad) mov fnstcw clc (bad) (bad) (bad) lcall inc mov jb xchg and lret rol dec xchg cmc pop imul jmp (bad) pushl jg inc cmp std incl jae adc (bad) (bad) (bad) lcall cmp or in push adc or (bad) rcll decb lock repnz mov jne ljmp pop cli iret out mov pop cmp int jno (bad) scas jg dec call pop ret mov mov or fwait lahf add pushl and (bad) daa jnp lahf adc push (bad) jns (bad) jg cld and arpl fdivr sub negb stos stos data16 mov jno fcomip incl or mov push dec add pushf aad lods pop fsubs mov xchg mov das mov jl or fcomip iret inc loop sbb or (bad) pushl push adc or push xchg clc lods imul loopne mov lods cli dec repz jmp dec mov (bad) (bad) mov xchg hlt lods xor xor sub (bad) (bad) decl mov or cltd mov stos dec pop pop push nop insl pop roll fistp pop stc pushl jmp or push xor add push and pop dec or jp ja (bad) incl loopne std and enter jmp repz pushf cmp sti outsb iret cmp xor lock or push into lock or pop icebp (bad) in dec stos xchg cli testl sti movsl add add in inc (bad) out pop jl sarb nop xlat mov pop das lcall xchg rorl nop jne pop xor pushl mov xchg out mov enter (bad) (bad) mov (bad) mov test popf loop adc mov ljmp (bad) jg test inc scas cmp cli mov lcall enter das pop pop push rorb fstpl mov (bad) decl push ficoml jg je push dec mov imul mov inc adc add test popa loop stc mov fdivr (bad) (bad) xchg scas ljmp hlt fs push gs clc mov inc sub and dec les sti and xchg or xor mov jmp fnstenv fcompl shrl xor mov fs mov inc (bad) jmp pushl test mov fiadd lret xchg inc ljmp pushf lahf in (bad) (bad) call cmp outsl xlat leave mov mov int mov sub add test dec jb in out jp stos sahf mov pusha push mov cltd or (bad) (bad) incl sahf xchg dec mov or fnsave lea addl sbb mov add cmpsl icebp cld (bad) call push jno cmp aad inc sahf stc add cltd xchg lahf (bad) call out lock cmp dec rorb (bad) incl xlat (bad) cld push out test mov cmp cli xchg stos cltd mov pop loope jp and jno xchg mov dec dec icebp (bad) (bad) push pushf mov movsl (bad) xor jns outsl es xor xorl (bad) (bad) jmp adc cmp lret ljmp add (bad) (bad) (bad) (bad) pushl push clc fcos scas fwait add jno enter and pop les (bad) (bad) jmp movl cmp dec test jae adc xor (bad) (bad) (bad) pushl mov or movsb or push (bad) lock jae (bad) lods cld mov (bad) in mov (bad) dec cmp leave xchg sub (bad) mov ficomp (bad) (bad) (bad) (bad) out xor cwtl pop and stc in rcrl dec fsubr lods jg jl inc (bad) jns xchg mov dec inc loope mov cwtl out and stos ret jg mov or (bad) (bad) call inc shl sbb (bad) jge mov sbb fistp arpl jmp mov or in repnz adc xor out jg ret es rcrb push xchg cmp mov cmp repz push add dec mov jmp test cld ret (bad) iret (bad) (bad) jg and mov or iret pop mov sahf stos mov decl pop adc cmc inc pop test cmp adc pop lret xchg inc and dec dec (bad) (bad) ljmp ret aad mov xchg vcmpps or push xchg arpl inc out (bad) and lret loop test ljmp call dec jne mov out xchg jp fsub loope xchg (bad) (bad) (bad) sti and jne lcall stos sub inc gs sahf repz adc xchg (bad) jg fsts mov daa fwait rcll cmp (bad) (bad) (bad) jl (bad) xchg xchg add sub iret pop fisubrl cld dec (bad) fistl out std add out sub call aaa add (bad) (bad) decl rcrl push adc into inc inc fsubrs cmpsb ja sar or mov pop and outsb fcomps (bad) pop lcall sub push lea sub jae lock jmp jg and imul rclb (bad) call loopne out nop jl dec lcall adc fisubr roll fiadd mov test push sub jno (bad) (bad) jmp cwtl lods popa out jg mov mov outsb cmp sbb cmp jle in lcall clc push bound inc loop lret add mov xchg (bad) (bad) (bad) lcall adc jg les or xor or lock sub pushl scas movsb jge hlt mov cli jb add inc loopne ds mov (bad) jo int xchg fwait xor adc testb fdivp jmp es mov jecxz cwtl add rorb cmp (bad) (bad) ljmp fisubr fstpt sbb xchg ja (bad) (bad) jmp xor lods iret jno inc lds xchg int3 gs xlat mov mov dec jmp (bad) (bad) jge sub mov ret clc (bad) aam sahf xchg mov hlt iret ja cs call loopne pop inc push add in pushl addr16 add (bad) pushl push lret arpl lcall sbb dec into clc mov mov rorl loope rcrb sahf push jne mov xor (bad) (bad) (bad) call mov fs sub inc cli dec push dec aas cmp push rcll cmp test sbb pop aam movsb or fimul out adc jmp popa vxorps rclb testb pop ljmp push lret stc mov movsl and lahf push cli stos xchg sar push pop rep test lds mov dec mov gs cmc cmc jo rolb in inc mov xchg inc (bad) and fildll cmp rcl xor je mov enter cmove (bad) (bad) aas pminub mov outsl repz dec gs cmp push ljmp lcall dec add jns dec dec dec push ljmp cmc sbb jp movsb push (bad) jg and push sub push call xchg das cltd rcrb (bad) (bad) (bad) call dec lahf (bad) cltd shrl dec pop (bad) popf dec pop or loope adc jle dec cli iret test inc enter jns mov pop icebp call xor repnz xchg xchg pushf xor (bad) mov mov (bad) decl dec ja out in xchg popa add shrl popa enter sti add sbb push cld decl aad xchg sti xor popa sub xor pop test (bad) fistpl negb push outsl in push pop xchg clc test aaa mov cmpsl out aad (bad) (bad) aas pusha in pop jl xchg clc cmpsl or push sbb ljmp rcll or hlt in or dec pop sub cmp lock add sub ret call loopne adc jge ret sti call jb idiv sub popf ret adc stc add loopne (bad) lcall int xor ljmp popa aad scas pop push fnsave mov fidiv daa pop popa push mov test jo (bad) in (bad) lcall (bad) imul sub fcmovbe bound cmp dec sub push lahf lret lds mov mov lahf fwait imul (bad) cmp divl push jae (bad) xor inc jmp push jb out dec (bad) (bad) js das pop rorb lds lcall fdivr (bad) (bad) mov les pop and sbb push fild add addr16 (bad) mov xor rol pop lcall cli insl ljmp mov pop (bad) lcall mov cmp (bad) (bad) jmp pop cld into aam pop push mov mov dec lds mov movsb rorl hlt test stc gs adc (bad) ljmp and sti pop adc rorb lret or mov (bad) call rclb enter dec shlb or add jmp dec ret rolb addr16 mov jg cmp test (bad) or cli int mov call push clc pop sbb ljmp dec lock mov mov fbstp (bad) mov repnz ret in (bad) call cmc stos imul int stc je jecxz xchg (bad) push jnp xlat movsl (bad) in cmp (bad) (bad) fcomip out lahf notl adc vpsubusb jg mov rcll xor mov mov adc adc add and ja or scas gs decl mov idivl add fwait push inc xchg (bad) (bad) jg mov add mov dec dec movsl (bad) dec inc outsb jne (bad) jmp (bad) stos icebp shrb bound dec ds (bad) (bad) decl sbb jne hlt jge xchg call mov cmp xor arpl call call mov fmuls addl ret pop cltd pusha jg mov or (bad) (bad) cwtl idivl fs (bad) or sar pop push xor and adc arpl push adc sub hlt inc lock xor cmpsl movsl testb (bad) (bad) (bad) aas (bad) mov and test fwait test inc push inc (bad) ljmp dec dec loopne lcall daa enter test lcall sub dec shrb mov jae (bad) (bad) (bad) lcall pushl call (bad) test push fistl fisubrl insb and (bad) mov aaa sbb stc decl scas sbb das cmc inc xchg sub pop outsb (bad) (bad) (bad) jmp popa xlat fmul mov pop outsl mov rcl xchg int3 mov ret movsl (bad) (bad) cmp mov leave aad lcall mov jne jnp dec add xchg xor outsl js push call sbb (bad) lcall xchg cs stos pop jl or xor and (bad) mov aas aad xor xchg and mov out mov xor (bad) incl call push scas dec hlt repz sahf cmp aam cmpsb loope add loope mov mov popf imul ja jecxz mov fdivs sbb test lock (bad) (bad) inc jp jge in call jle lds idivb adc push (bad) (bad) call cmp xor iret out mov shr popf popf xor mov (bad) (bad) (bad) call pop sbb xor push ljmp inc pop inc mov orl jl (bad) (bad) jmp push mov lds popa xchg aas fsubp cmp rcrb cld out (bad) stc loopne sub test mov mov loope popf jbe push pop push shrb adcl outsb rcrb add jne aas int gs xchg sti pop jno clc outsl (bad) fistp add add arpl in nop adc sbb movsl (bad) incl cld or pushf or add icebp add (bad) (bad) call call cli push stc mov fildl out jmp aaa add xor outsl pop rcrl sar testl rcrl add mov les in (bad) (bad) (bad) jmp add jo mov data16 pop pop jo sbb push aaa jg ljmp sbb pop gs pop jp jae js push mov (bad) call int gs cs jle out sub pop cmc xchg call ljmp adc and and pop dec icebp and (bad) jmp add xlat and and push xchg sarb pop (bad) insb xor (bad) ljmp jp jp call inc inc add mov cmp fimull repz push mov push js popf into clc adc pop stos (bad) mov dec jae dec add (bad) fcomip decl pop or push push push push mov ljmp add in (bad) incl ljmp jmp loope shrb fisttpl decl cmp (bad) in jmp fs push push mov incl repz pop sahf push inc fcoml aad and icebp push add ss pop subl pop lock push xor outsb xchg sub pop das aas insl pop enter jp xor ljmp lcall aaa das bnd insw pop jecxz adc aam sbb stc or cld sar scas pushf stos pop fwait jmp push mov sub jp cli mov cs js aam scas add stos xorb xchg aaa cmpsb push idiv scas fsubrl pop cltd negb fs and (bad) (bad) incl jl jnp fucom mov pop inc aas sti js popf jp fdivl daa mov test (bad) call jno adc mov int xor out dec push inc insl xchg out (bad) sti (bad) inc lock in clc leave xchg and stc lods into dec sub ds out inc mov aas scas jo loope int dec xchg jg and inc sar cmp dec in or nop sub jo sti mov pop ret in inc jne rclb mov int3 push sub pop aas add jnp call (bad) pop adc jmp lock outsl inc fcmovu lock (bad) mov and xor lret in sbb jecxz or mov adc movsl mov inc stos xchg lock cmp (bad) incl cmp mov (bad) (bad) jo jecxz loopne (bad) (bad) cmp xor call (bad) or cld pusha mov lock pop xor in mov (bad) (bad) ljmp cld lds and jle mov jo bound decb incl add adc imul cmc pop cmp sub pop cli repnz push sub jecxz jg (bad) (bad) dec popf in mov rcr lahf jmp mov push cmp push xchg fs pop lock aas (bad) jmp cmp shr cwtl (bad) xor or fcos (bad) (bad) decl xchg lret dec ret sbb dec lret inc enter xor and mov add inc (bad) jmp inc jns add add mov aaa loope sbb aad (bad) dec inc or xchg cmpsb push jne,pn and inc xor pop mov sbb mov (bad) jg xlat fidiv out jmp pop mov pop mov popa (bad) (bad) (bad) decl mov int test cli and cld jmp jbe jb sub (bad) (bad) dec iret sbb jle add imul sub in sahf mov repz xchg (bad) (bad) (bad) jnp idivl je xchg fwait mov mov ljmp out (bad) enter imul out sbbl mov xchg ret xchg dec xchg jne push pop out arpl mov push insl jne pop cmpsl xchg fiaddl data16 int3 sbb int3 test jno sbb (bad) and pushl dec push arpl push cmp das int3 mov hlt ss inc cmpsb fistp repnz mov ss mov bound (bad) (bad) (bad) decl insl xor mov sbb add cmc das mov xchg test loope (bad) (bad) decl divl addr16 cs dec push ror lahf push sbb aam fisubl ljmp out (bad) ss push (bad) jae or sub outsb mov scas insb jns ret popa fwait xchg sar into (bad) (bad) jmp or cld push sub (bad) mov inc cmp mov notl mov sub (bad) mov aam ret fstpt imulb out lcall sar int3 lret test pop dec push test test imul (bad) (bad) jmp lock es push (bad) or in inc push sbb loop xor mov jno ljmp test dec xor push in ficom xor (bad) popa sub fstpl (bad) (bad) (bad) pop jo push jnp cmp shrl fisubrl jmp xor std (bad) ljmp les std push fcomps pushf mov xlat mov add ja lret in sahf fucom fstpl xchg dec out push pop push test (bad) ljmp test xchg xchg and mov lds xchg mov mov mov pushl lods inc jmp aam mov test test xchg (bad) jg loop dec test mov add sub xor test cltd clc incl xchg adc pop mov push cld aad repz ret sub stc ljmp xchg adc lock idiv (bad) mov push add ljmp sahf not fdiv push fmull sbb jnp mov xchg mov lcall movsl (bad) (bad) pop loop lcall das and out enter outsb les flds dec cli ljmp decl js xchg xchg lods dec pop (bad) adc dec fdivrs les int3 dec fs clc (bad) lcall push lds push sbb jno pop jnp nop loope mov mov mov hlt inc pop inc jmp gs dec stos or fsubrp sbb (bad) loope (bad) (bad) (bad) ljmp test mov jmp lock push dec fdivp insb add mov mov imul std jmp sub xchg mov outsl jg dec loopne pop (bad) (bad) (bad) lcall push dec cld repnz movl adcb out stc push lret (bad) ljmp fisttp add sbb adc (bad) (bad) lcall pop xchg cmp and pop sub xchg jmp scas ret std dec sub fstpl jmp cmp or repnz jbe test notl (bad) (bad) jg cmp jecxz xchg mov loope mov xchg push cld (bad) jmp adc imul sbb pop inc andl aas cmp xchg or xchg movsb out mov lcall (bad) (bad) decl pop ret mov and rcr in outsb mov pop cmc inc scas push lea and push xor les mov rcll push (bad) out push lea imul mov out mov out (bad) ret aaa addr16 cmp decl push mov sbb aad cmp mov addb (bad) lcall test (bad) aad mov cwtl mov xor (bad) (bad) cld sbb leave pop inc cmc lods mov mov aad push add dec jl pop xor std push std pop stc dec dec jle arpl je adc xchg mov inc ret repnz mov cs (bad) ja out jmp int cwtl movsl pop push dec mov cmpsb mov (bad) stc add movsb test dec jge (bad) mov xchg jno jg incl repz scas (bad) fnsave adc gs sahf fcomi ret mov add (bad) mov jle aam (bad) in or (bad) (bad) call sub jp test dec adc adc (bad) cwtl lea (bad) inc inc cmp (bad) adc or ret lret inc aad shl xchg jp jae (bad) cmp jge or (bad) in push cmp mov (bad) (bad) (bad) (bad) call shr push dec jmp (bad) and mov fcmovne cmp aad add insb and mov sbb mov out push xor cld push xchg push (bad) incl out adc mov mov call ss (bad) decl mov arpl lahf gs cwtl (bad) test fnsave out jg xchg adc repnz inc add dec push cmp loopne lock les stos sahf data16 decb mov stc and jo pop push dec jg hlt ljmp pushl aas das lds repz int (bad) (bad) (bad) out lret add add push jnp xchg lods inc jb dec mov (bad) push fdivs push inc mov add arpl (bad) (bad) (bad) jg movsb pop pop mov aad inc dec jp shll scas mov test (bad) mov aad mov push out aad pop push add mov mov (bad) (bad) decl ds fisub aas int xchg xor loope pushf add (bad) (bad) incl add mov loop lds in push jo popa and pushf das sarb pushf pop mov jne add push xchg mov fs cmp sar popf stos ljmp pusha pop in sub cs jg mov or cld or mov (bad) decl repz xchg mov ret jle mov mov xor add popf imul jg inc mov mov (bad) sub mov xchg clc dec rclb testb lahf loope pop cmp jbe add loopne lods pop cmpb mov les pushf lret add lcall fs xor push mov cmp (bad) lcall cld or mov inc adc stc (bad) dec adc or lock (bad) decl push in sub mov jo arpl sbb loopne or shrl adc fwait pop rcll inc inc js xchg test (bad) add das (bad) (bad) (bad) (bad) out aas sbb call push out jg jecxz imul mov pop xor enter push inc mov xchg fwait xchg inc movb inc mov (bad) mov decl (bad) xchg jp adc test cmpsl cmpsl push bound stos sbb xchg xchg jno hlt (bad) jg cld outsl lret aam jecxz aas push inc icebp aaa in jne pop dec and es (bad) (bad) jmp pop insb shll push movsl xchg leave rcrb roll jg testl add lods cmpsl jo xor and jp adc out mov rcr dec shl hlt adc pop push inc jecxz (bad) movsb sub and incl sbb shrl cli scas mov arpl cmp cld daa lods mov pusha mov (bad) sbb (bad) push std clc pusha lock (bad) call sub and dec bnd shl mov out add rcrl add mov or pop int inc rolb sub push dec loope shrd (bad) (bad) (bad) call movsl inc push lea into cvtdq2ps pushf stos sub lahf dec pop (bad) daa push cmp push (bad) (bad) lock sbb lcall dec mov aas into out arpl xchg data16 (bad) (bad) jmp shrb lds gs in imul (bad) jo mov clc out dec and (bad) pop xchg sbb mov (bad) (bad) (bad) (bad) jmp xchg (bad) mov and push cltd out jo outsb loope fisubrl xor xchg test into jmp jg incl dec leave hlt xchg cmp jo loope xor mov (bad) (bad) mov jno or dec notl test inc in fnsave inc scas push into (bad) clc jae hlt or (bad) call and inc enter mov jnp iret cld (bad) (bad) jg cld pusha out loop fs cmc push mov shrl icebp pop dec lretw test aaa scas dec movsb (bad) pushl decb mov and movsl lea xor inc cs sahf in (bad) (bad) inc jl xchg cmpl std mov roll push cld adc inc add push repz push push shl js xor pop add xorb lcall mov (bad) jg sbb stos repz xor shlb sbb test pop (bad) (bad) (bad) incl dec push mov jp dec add das mov xor dec fcom (bad) mov les das xor or xor insl leave jmp jae mov ja jmp pop addr16 dec adc or into adc std dec mov call data16 jmp mov and loope mov sti cld mov shll aaa call (bad) (bad) (bad) call push push add push repnz mov or pop xchg mov insl and loope dec cmp aas mov xchg out popf rol or lock in in jle or sbb clc (bad) push cmc test or xchg or scas jle pop shl inc mov cmp push push jo ret push mov (bad) xchg xor (bad) push out pop (bad) (bad) pushl out les inc outsb push jle push xor mov in popf pop sbb and das (bad) (bad) incl mov mov sbb (bad) jge mov cmc out aad lret imul (bad) call or sti mov or and mov fiadd dec clc ljmp cld (bad) cld (bad) pushl inc mov xchg das scas fldcw inc popa scas xor sbb add idiv ljmp hlt push pusha jecxz arpl fldenv rolb test popf cmp ja (bad) (bad) incl rcrl icebp jmp dec or xor das (bad) (bad) (bad) aas pop in sarb mov sbb push stos xor insb mov cld (bad) (bad) call or loop mov sbb xchg icebp popa cmc adc test cmp (bad) (bad) decl mov pop or jno lods mov pushf cmp mov int in jg cmc jo repz shrb jle dec mov mov inc std decl push or push jne and sbb mov es (bad) pushl shrb mov cwtl (bad) xor daa pop stc in or dec jmp loop cmpsb mov jmp sarl shrb sarb (bad) (bad) decl push frstor mov int3 loop cmp gs xchg inc pop xchg push jmp jecxz cmpsb call push or punpckhbw pop xor dec jne enter adc mov sbb lods inc (bad) jnp ret nop jns cmc (bad) call jl pmulhuw loop pop loope sbb xchg mov (bad) mov (bad) aas mov popf cmpsb mov inc jns add rclb push dec std xchg mov (bad) inc std jmp sti lahf das sbb bound mov lcall or test ljmp jmp push push sub push icebp or adc test ja mov push add leave or lods loop stos push insl push fnstcw push fcomip mov (bad) call mov pusha test test popf jmp call add push push pop sti in cld jbe (bad) lock sbb push aam stc mov pushl xchg push or push jno or inc movd mov (bad) lcall stos cmpsb adc gs mov (bad) cli jno mov imulb les (bad) out int3 repz jae fidivrl repnz push add jno js cmp cltd lods push add mov adc jg std (bad) lcall stos jnp int3 les jae cs xor inc sub (bad) repnz out loope jb,pn fldenv ficoml imull (bad) (bad) jg fdivrl xor stc dec loopne jge es leave les popf adc out push xor (bad) call jo stos insb push add lcall popf lret stc lea lret pop adc lcall iret jge adc push inc or and jg (bad) (bad) (bad) decl pop fcmovne sbb jmp sub das dec inc inc adc push push xchg inc adc cmp movsb sub xor add stc rcrb cmp inc cmp and or pop pop out sbb dec sub js imul sti decl jge in out ss scas sub jge pop push sahf push (bad) push out xchg inc je lcall mov aam popf cmp sbb (bad) (bad) push push sbb adc dec jns or and icebp insb iret mov (bad) (bad) pushl jge pop dec pop ljmp lcall sbb jecxz sbb fwait (bad) (bad) incl jecxz pusha scas cmc or bound gs loop test lock sbb scas arpl mov outsl outsb insl std or rclb jns flds lods add sbb clc xor mov push pop dec popf xchg loopne xchg xlat mov sbb jne add cmp jmp xor ja popa push fcoms ret ja ljmp insb lock mov stc std (bad) out jne fcmove ret lea jmp (bad) xchg and or inc jne mov fs (bad) incl cmp aaa and movsl push inc xchg lods or fwait push in pushf in ja sbb mov lcall decl cmp ljmp lret outsl jno arpl push scas std subb rorl mov out pop sbb in (bad) mov inc mov xchg mov jl sbb xor (bad) (bad) (bad) (bad) mov dec xchg pop ljmp lret cs push enter roll and push add (bad) pushl mov jbe jmp int out loope lods sti loopne (bad) (bad) (bad) jg dec jnp sub ret adcl xor pop jle dec scas gs jae xor mov mov dec and push std (bad) mov rcl clc rcll mov pop stc push jl bound sbb call xchg adc ret loope dec dec adc insb loope xchg xor jl sbb (bad) lcall (bad) fldz gs lcall cmp (bad) (bad) ljmp sbb adc out in mov arpl mov leave xor add sbb test repnz (bad) jmp stos push xchg cmp call xchg xchg xor jge daa push (bad) data16 idiv aas aas pop mov jo fstpl repnz add push (bad) or (bad) incl arpl cmp rol mov fwait pop adc cmpsb js (bad) (bad) jg lods icebp (bad) std ja or sar or jmp and (bad) (bad) call (bad) mov lahf adc cmc ffree dec cli cwtl (bad) jg fidivl push hlt jg loopne mov push fnstcw lea lcall (bad) cmpsl inc or mov sub fildl pop xchg cli fcompl mov jp jge jae jg cld (bad) jns loope int3 mov mov pop loope mov es add pop adc pop and shll or lcall dec adc push std and pop cmpsb add push rorl dec leave jg pushl (bad) inc insb cmpsl mov aam popa adc push mov pop jbe (bad) (bad) (bad) pushl mov mov adc jl push xchg into xor (bad) notb (bad) mov cld mov daa loope fwait aam js push lahf fistpll cmp rcrb mov mov (bad) jmp push xor outsl adc mov into sbb das (bad) (bad) (bad) aas and cmpsb vmovdqu call sub out test (bad) aas inc scas pop int3 fistl mov lds jae int pop loope lcall pushf int3 repz call mov jl and stos rcrb out cmp (bad) (bad) ljmp cmp stc lds pop fnstsw mov mov fdivr cmc and inc pusha lods decl mov or mov or jmp adc xchg xchg (bad) (bad) (bad) decl or dec loope lcall iret mov icebp bound add (bad) (bad) jg out jl jge js loope,pn imul data16 sbb jo lret (bad) (bad) ljmp xor and add aad lods repnz outsb cmp out fs (bad) jmp mov in dec dec sbb push loop jl pop mov jmp xor pop dec (bad) aad xchg push int loopne or loopne call sti cmp push and out dec test jno and (bad) fwait jle mov inc push dec xchg pop icebp xor (bad) (bad) jnp push lods sbb push push and push xchg mov outsb mov adc pushl or pop inc sahf repz adc push outsb popa inc jne incl std adc sbb pushf repnz xchg scas (bad) (bad) (bad) incl inc inc leave in mov push xor int3 mov jl subps incl test fst mov push lret xchg mov (bad) (bad) decl lds in cmp lcall lret pop or (bad) push sar (bad) aas repnz inc jbe ret je xchg xchg push sahf les out imull mov (bad) (bad) lcall xchg lods add mov pop aam loope dec repz pop dec inc nop dec call nop xor out pop mov ret cmp movsl (bad) (bad) (bad) decl cmp pop push push add push jmp vpsrad cmp mov fcmovbe jb pop aam out xor mov xchg repz insb out jle pop in notb movsl cmc in insl fcmovnb lret cmp push roll xchg shr xchg jecxz sbb imul jmp pop int3 out insl adc es aaa dec ret sbb inc flds int3 daa dec (bad) notl jecxz sahf (bad) (bad) (bad) pushl fstps out (bad) out adc xchg xor cmp jne dec dec andb repnz sbb adc mov enter (bad) aam out jno fisubl jbe inc inc hlt xor shrl inc lcall jge les pop cmc cmp lret mov jge sahf pop push sub (bad) fnstcw sub or jl xchg aad jmp incl movsl or int3 push mov lahf fsub lahf ds fldenv pop nop dec ss cli (bad) (bad) cmp push push sbb jnp inc sarl stc mov cli lcall dec push add ja shr (bad) ret (bad) fisttp rorl cltd popa mov jns xor arpl es jg cld sbb movsl fcmovne pushf mov lock adc ret call cld incl mov sbb ror pushf aaa lock icebp or fldenv jp ret push (bad) jg aas add and (bad) ss xchg in (bad) pushl std in jmp das aam in jno jae iret lret lds imul mov add std aad xchg jmp pop jne (bad) ret pushf jmp mov (bad) jmp xor xor jge pop lds pop pandn aam inc pusha pop andl mov ret stc int dec add mov cmpsl (bad) (bad) (bad) decl jne test andl pop out push daa test in (bad) clc push xchg pushf add lret mov add inc dec xchg loope dec (bad) (bad) (bad) (bad) jnp cmp dec adc scas idivl sbb and (bad) (bad) (bad) (bad) out add or jp (bad) iret (bad) pusha and sahf jmp out (bad) (bad) inc frstor sub pushf lret aam dec enter mov jno jmp lret in sbb test xchg sub and dec xchg sub (bad) (bad) jg fsubr mov jmp mov out idivb push sbb rcll dec repz jge loope out cwtl inc bnd adc adc (bad) jmp push pop out and pop mov cmc jge pop call (bad) mov fdivrl dec (bad) lret cmc aad out mov (bad) xor jle or push aam add inc scas jecxz inc mov mov add xorl (bad) xor pop kmovd sti cmpsb stos int3 xchg (bad) (bad) jg xor dec inc clc pop xchg (bad) fbld jne int3 add cli lcall or xchg leave lcall (bad) (bad) ljmp cmpsl sub xchg les into mov std pop push push mov pushl dec mov dec dec xchg dec jmp cmpsb dec in fcoms mov add repz inc (bad) mov push ljmp call pop in push repnz loope aad addr16 aam dec cmpsb repz (bad) (bad) (bad) jmp mov inc jae or pop je push xor xchg mov or xor imul lds cld (bad) inc stos ucomiss pop pop fcoms or mov mov mov and insl push cmp pushf sub pop outsl mov jg lret (bad) (bad) call insb sarb rcll (bad) div pop mov mov into ljmp ficomp mov in stc mov (bad) mov (bad) adc (bad) xor (bad) (bad) lcall out sub mov repnz test dec dec (bad) ljmp cli fnop cmp xorl or xchg out into andl (bad) (bad) jmp or (bad) (bad) aad ljmp lldt repz mov sbb test incl sbb adc loopne les das (bad) fcmovu jmp push jl (bad) (bad) (bad) jmp pop lds or cs into push add and jb lahf sar jne (bad) je jns xchg ja inc mov outsb mov add decl loop out add outsb xchg je add loopne jmp inc and or mov arpl mov aad jb jmp adc stc or ficompl xor adc xchg pop lock mov ret ljmp rcll imulb fisttp std ljmp push js xchg sub lahf (bad) clc dec pushf lds (bad) (bad) (bad) mov mov push push push and push stc jg pop or sbb mov decl incb push inc mov nop mov and into sarb lcall dec cltd mov add mov repz push add jno pop cmc dec repnz adc roll xchg mov stc cmpsl (bad) decl pushf jb add (bad) outsl push insl mov shll pop (bad) std (bad) ljmp add fstps pop test stos popf int3 push ja cmc sub jg ror xor insl popa sbb decl jp dec xchg into xor push (bad) (bad) (bad) call push rcrw lret adc lahf dec jle (bad) mov pushf adc xchg xchg xchg iret fbstp xchg ret push mov mov (bad) jg cmp dec and cld icebp and adc mov fld jbe add pop frstor adc sbb jmp call jmp jmp mov les mov out fnop lcall push dec imul lods or (bad) dec xor rorl mov mov call cli cmp sub daa push nop mov xor test cmp ljmp sbb sbb mov das cli lods jno loop sub jecxz lcall push inc pop push lods dec jecxz mov dec pop or (bad) aas mov or fcmovb gs gs loopne,pt popf push jge mov aaa cld pop stos (bad) rcll inc (bad) fcomps dec popf ror xchg sbb sub jmp dec or push call movsb popa outsl push xlat push aad mov xchg mov pushl lcall cmp movsl addl ror arpl jb test (bad) decl hlt adc inc (bad) movsl mov adc in test xchg (bad) (bad) (bad) decl add hlt clc xor pop inc leave sbb pop jmp outsl rcll ljmp into clc stos in (bad) dec sub inc push aaa dec popa scas shrl (bad) jge jbe cli lcall (bad) (bad) jmp sub pop jg dec push cmp imul dec hlt (bad) pop and les fwait pop mov pop ret inc xlat mov xchg add push mov js and jnp mov mov (bad) (bad) (bad) (bad) mov jns out pop add mov add adc xchg cli sub mov push lahf add int3 rcrb ret iret sub mov iret push push (bad) decl outsb (bad) mov jle imull (bad) repz fistl das cld add xor cmpl inc call lock dec mov (bad) push (bad) (bad) (bad) ljmp push mov sub in lods (bad) imul test mov and std stos push std xchg stc (bad) lcall add clc pop xor push dec dec adc inc stos (bad) pushl dec jl fist test test push push (bad) (bad) (bad) ljmp mov mov xor adc ret mov jnp xor (bad) aas adc or ret enter adc mov aam fstpl (bad) ljmp sbb push dec xchg push divb add jae dec aam xchg in hlt shr adc sbb ret lods cmpsb in dec daa mov xchg adc decl arpl mov adc lret (bad) sbb or daa (bad) (bad) incl push scas mov pop and hlt int movsl rclb xor sub in cld outsb stos (bad) (bad) (bad) aas cs and jns dec pusha imul pop das jle push inc cmpsl pop xchg test (bad) (bad) (bad) lcall adc (bad) (bad) popf cmp jp mov mov cmp incl stos fucomp sbb xor pop inc mov lds push dec rclb clc xchg push outsl add mov mov jb dec (bad) popf (bad) out mov bound lock (bad) sub pop (bad) (bad) (bad) (bad) fisubrl aam aad inc jae (bad) mov int3 add adc outsb jnp fwait es (bad) lcall cli dec push adc in repnz into and sub pushl in fisttpl pop or scas scas popaw dec sub ja and (bad) (bad) incl test fdivs pop xchg out mov push push pop shr and into pop test ret adc mov jne mov mov (bad) (bad) incl dec cmpsl mov dec loope xor clc fbstp mov test ret and pop cmp jmp (bad) dec cmp loope add mov pop call incl mov push xor mov mov xor dec jb push jb into jns repnz std ljmp xlat popf jns fcmovnu test adc jl sarb nop lahf and cli jg cmc hlt out pop mov dec jl mov fs scas ljmp movsb jmp push jmp adc jle pop push cld sbb je in push mov lea in test (bad) fnstsw lret add or adc test (bad) pushl mov js fs inc lock xor mov add push jo icebp push sbb scas and loop pop aas fiaddl jmp out andb fild (bad) mov mov in jg imul and aad lret add sahf adc test data16 aam mov lock and add icebp sub push xchg add (bad) (bad) (bad) jmp ret inc jne loopne pop xor push cmc (bad) sbb jmp push adc enter jg pop fsubr push dec cmp int pop cmc mov (bad) (bad) lcall nop pushf mov in imul mov insb es push or sub jge popf sub (bad) fbld fdivrl jge fstps (bad) (bad) lcall dec cmp fimul test adc xor flds popf nop (bad) mull cmp inc push pop jno inc add out sbb imul pop pop add mov push (bad) (bad) (bad) (bad) call loope cmp jno pop push sahf fidivr mov or dec in in dec test (bad) jg ljmp iret imul adc sti add (bad) (bad) (bad) js push fiadd sbb stc das adc mov xor lods dec dec jle mov (bad) jg dec pop test mov fidivr dec (bad) inc popf test (bad) (bad) inc imul sbb inc ffree lds in test mov bound not (bad) in push mov (bad) idiv push push sbb pusha pop xchg clc inc lret test and enter sar (bad) decl mov mov or addl movb dec push pushf mov test or leave (bad) (bad) mov loope bnd xor push cmp loopne inc xchg jno aas fbstp adc test lds insl push pop loopne dec dec movsl lds (bad) js cld or jae push and jns fwait sahf aaa dec mov xlat lret (bad) stc adc fwait (bad) pushl adc sbb data16 xor test xchg mov cli (bad) mov adc ljmp je mov pop cld lahf mov (bad) (bad) ja stos inc xor (bad) (bad) (bad) (bad) jnp jmp adc sti jnp frstor cmpsl sbb adc je decl mov fcmovnu jnp outsl jb rcll cmpps adc push adcl aaa cld (bad) jnp mov mov scas adc ret sbb pop test aaa ret call push movq imul decl ss and out lret xchg jmp in dec dec fwait xchg cmpsb je hlt (bad) call inc dec xchg fimul stc pop imul cwtl and (bad) mov inc cmpsb enter mov test pushf ret addr16 decl cwtl or loope dec in (bad) xor mov xlat loope mov and xlat push add sarl and inc cmc (bad) (bad) (bad) jmp loop arpl lock mov cmp bnd inc dec jecxz xor (bad) jnp dec (bad) call cmc arpl mov mov das movsl mov mov repz or adc dec adc pop (bad) push roll pushl inc adc push test mov ret gs lcall and push imul (bad) scas mov ss sub in jecxz adc add loopne adc outsl (bad) pushl out iret (bad) gs mov les cmp (bad) call loope rolb lcall dec repnz jge inc loopne fs (bad) (bad) (bad) (bad) fistp fsubs rolb leave jns gs inc push or cmp (bad) (bad) call push outsl pushf aam into add mov push push (bad) xor and push clc aaa iret pop loope bound inc mov mov sbbl hlt (bad) (bad) aas add jge inc lea loope test fcmovne lcall sub mov aaa jnp pop dec outsb push adc (bad) clc aam (bad) jmp jns decl dec in and (bad) (bad) pushl or xor or (bad) sub dec pop gs hlt das cmp (bad) decl fnstsw leave stos pop push lret test mov sub ljmp mov jno (bad) and mov pusha cld inc add ss push std leave and dec dec sarl xor cli (bad) jmp or pop test lret dec lret add mov (bad) (bad) cmp mov cwtl mov (bad) jmp sbbl fsub leave lcall xchg (bad) (bad) jmp push fs dec gs loop cmc xchg mov jo test (bad) (bad) (bad) jmp out fwait repnz sbb pop sahf sbb pop loop pop mov jmp stos pop inc (bad) (bad) decl mov jne pop jb mov outsb fwait ds loop (bad) (bad) incl push xchg out sbb fisubrl or mov aad test in aaa sub out sbb pop fcomps loope out test push push stc jo js movsb rol adc sub or outsb (bad) into inc or jo (bad) mov call cli dec mov cmp ficoml cmp (bad) (bad) jmp cmpsb and (bad) repnz jnp js popa mov repnz pusha fiadd out ljmp xor push (bad) nop (bad) enter loope mov mov mov mov xchg sbb jge repz (bad) ja (bad) hlt mov cld in ficomp dec mov (bad) ljmp cmp mov out cmp mov ljmp stc cmpsb ds jp push lret pop mov dec mov in jmp ret mov pop sbb jg fistl adc lds je push scas mov jb insb imul (bad) inc iret inc pop nop cmc push frstor pop (bad) int push inc sbb sub add mov (bad) (bad) lcall jmp outsb push and shr dec aaa sar jae push lods mov cmp xor stc (bad) (bad) pushl add (bad) push dec push mov ss jne scas call sbb (bad) (bad) aas adcl dec arpl mov xchg inc cmp imul push jno and sbb adc clc out add mov dec sbb fildll scas clc fs jl mov fdiv ficom into call cmp (bad) (bad) push pop aad cmp xchg out inc push jo push jne repnz sub inc cli push loope into test xor lahf out lods and lods pop fcoms lock (bad) jmp test je push (bad) xor xchg pop (bad) jmp inc pop pop xchg fidivrl xchg fdivrs (bad) je ljmp pop ljmp inc push adc and popa cmp loopne sub jo fs mov (bad) jmp jno (bad) jmp cwtl int3 mov lahf jecxz xor jg das mov dec push enter or arpl outsl jbe mov mov enter decl adc add sbb outsl push test (bad) aas ret pop stos sbb stos hlt repz ljmp jmp (bad) (bad) decl jg sub (bad) mov or loopne pop sub mov sub stc mov repnz mov test cmp sbb mov call mov or pop stos pop cmp out add aam clc incl pop aad or loopne (bad) (bad) incl jmp scas movsb test jmp (bad) shll ljmp in (bad) ljmp loope cli icebp xchg lret or or imul mov adc scas xchg cli (bad) (bad) jg inc jae ficoml xchg outsl push int mov fbld xchg ljmp xchg ret data16 rcrb lea out (bad) lds xchg pop cld lahf ret (bad) lcall addr16 jmp xor xor xchg jg mov xchg mov pop fdivrp push lea aam push jl or jno dec in lret adc insb inc ljmp add or test sub jge nop je (bad) (bad) inc popa jne fcompl loope cwtl adc xchg sbb lahf ljmp (bad) jg std pop loope lds lds (bad) les lods (bad) (bad) (bad) decl xor sbb adc inc test sub sbb adc mov pop insb sar pop stc call add rcr sbb jg dec mov inc ljmp loop (bad) (bad) (bad) jmp loope popf fsubr sarl mov (bad) lcall push inc aad dec jl call push jmp inc arpl scas (bad) jne daa (bad) jg gs and movsb xor (bad) pop lods ret mov loope cmp (bad) (bad) incl loopne adc add call jno fistp add xchg aad push ds incl loop pop sub es xchg aad rcrl ret jb jge mov (bad) (bad) decl outsl xor mov outsb scas or fucomip xchg xor mov mov idiv call pop jnp push stc out sbb ret cmp dec bnd pop loopne outsb adc or out roll loope ljmp (bad) aaa pop test decl mov mov incl jmp push inc stos ret push clc or adc rclb ror test (bad) call jne inc adc xor daa push leave hlt push inc imul sar mov scas lcall mov repnz pop pop jp mov adc xor (bad) (bad) lcall andl pop outsl pop push pushf mov and mov xor inc (bad) jmp push fcmovu sub int push sbb and pop mov (bad) (bad) (bad) jmp call or fnstenv adc (bad) rcrl mov lahf cld or mov es adc fucompp (bad) lahf (bad) (bad) (bad) mov jp dec inc add (bad) push adc out push int add lcall shll je mov fstl (bad) (bad) pushl xlat inc dec rcll test dec imul popa mov push fs jmp loop rcrb jge cli pushl js mov push jne stc arpl or mov mov sub out popa jo mov fwait mov xchg inc nop hlt cmp or (bad) ljmp mov cmp test test ja imul jg loope push mov dec pop in sub popa jbe lds jecxz loop clc (bad) call lods les inc lret push hlt ljmp (bad) mov ljmp pop sub (bad) mov xlat cmp lock push push rol (bad) jns cwtl push scas test jecxz scas xor adc lds (bad) jge xchg repnz aam loope jb jns dec cmc jmp xchg les pop jns ret negb shll sahf and gs xchg push in or or jns int sbb mov push loope pop decl rcl test xchg test (bad) maxps pop out cld cmp (bad) (bad) stc cwtl pop sqrtps lock insb mov test or mov cmpsl (bad) (bad) loop lahf cld jmp or aam cmc mov imul pop jo in inc fdivs (bad) (bad) (bad) aas sbbb sbb push imulb (bad) jmp int3 loopne pop hlt out mov scas jp jg sub jb icebp enter (bad) decl cmp add mov mov mul sbb add fcomps cli inc inc aad ljmp push or jg xchg idiv add sbb cltd out dec ja jge test jp hlt or (bad) (bad) (bad) call (bad) aas in scas or push pop inc sub xor jg shlb popf shl inc pop jmp push shl test lahf or xchg dec cmp sub mov fldcw jmp push lcall icebp fs ss inc mov or cld fstl je jnp mov adc pop jg (bad) cs out mov mov scas xchg sub repnz push (bad) bound mov mov in pop es int3 jge xchg (bad) or pop out rorl dec int3 shld mov lret (bad) push call pop adc pop sbb inc call rorb add mov pop loop pop shr push adc (bad) (bad) cmp xchg mov xor lret mov out cli ja test inc (bad) fidivrl je pop pushf pop jns (bad) mov clc (bad) (bad) decl cmp sahf lock icebp push insl sub dec adc inc pop mov std cmp lahf add fidiv dec lret mov in adc ficompl inc dec sub (bad) (bad) inc popf out ja and movsl push fidivrl arpl aam sbbl mov (bad) jmp std dec xchg in adc xlat sbb gs pop mov ljmp cltd stc sbb cmc sub jmp pop inc mov or xchg mov nop (bad) xor lcall stc incl inc inc inc sub mov or ljmp jns out loopne mov cmovge jnp pop inc shrl fcomps je mov push (bad) outsb add mov fist insb dec jmp cmp les add outsl (bad) (bad) (bad) inc je jp and fldl and xchg bnd out enter (bad) stc (bad) mov jae out jb lcall stos sti arpl in cmp jno (bad) jge stos add jae (bad) cltd jmp (bad) (bad) (bad) incl rcrl mov inc xchg fwait mov xor mov pop out xor ror cmp jmp mov and loope popa (bad) mov pop popa fidivl push sub (bad) (bad) (bad) incl cmp in fisttpll rcrb cmp je loope or lods jbe jmp mov jmp ljmp in stc inc xchg or cmpl push lahf add insl (bad) (bad) (bad) mov mov dec in cmp in out sbb fwait mov fidivr lock iret inc cld pushl test mov aad es (bad) (bad) inc inc xchg and add jmp add lcall add adc (bad) incl mov call mov lock sub lcall dec inc xchg mov das mov lret (bad) (bad) jg pop inc push ja das add dec inc push xchg pop mov cmp cmpsl xchg jbe sbb into incl sar fsubrp jne pop (bad) cmp xchg hlt sbb jns (bad) (bad) (bad) (bad) call lcall int3 pushf mov lcall inc sbb lea das (bad) jmp (bad) call inc cmp clc or inc pop iret scas (bad) fist mov je mov pushf loope add push test dec (bad) (bad) (bad) call popf mov inc fs in push pop push cmp mov je jmp xchg imul sbb out dec lock (bad) call aam mov push xor sub adc lret adc pop sub sbb int3 sbb (bad) (bad) call mov inc test mov ret inc mov inc or mov (bad) decl xchg xchg ret std jnp inc jno pop call or and lcall fadds js adc ret and cmp xor xor stos or mov sahf je jge pop jl or fcomip and dec lret add jno add adc pop add lds sub fstpl in jge fcompl add xchg mov dec negb in sbb les jmp push mov push in add push je pop cmp push jg es inc scas clc ss cmpsl cmp imul jg jg mov mov xchg hlt xor stos dec adc jo rorl cmp out (bad) movsl arpl test ret rcll cli cwtl ja adc sbb mov testb cmpsl js test (bad) (bad) incl lods adc in xchg or jl sbb aaa (bad) (bad) (bad) (bad) fldl (bad) aad cmp or sub inc sbb xor (bad) fstps push xchg dec in cmp xchg sub jge scas mov xor cwtl jg ret add addr16 cld pushl mov aas mov fbld pop and xchg dec fs or adc (bad) pushl popf xor xchg mov les xchg lret call stos insl jo jge (bad) jg sub lcall sahf fmuls lods call add movsb xor inc sti lcall inc or mov out dec xchg inc cli dec das fnstsw aam je mov push lcall jmp (bad) mov pop cld cmpsb icebp jg add lock fsubp fwait popa fdivl (bad) (bad) lcall adc and scas sbb pushf xorl int in ja test xchg pop or pushl xchg pushf and push xchg cmp (bad) out (bad) (bad) incl mov adcb shrl notl jge dec mov cli mov jmp sar xchg jg jecxz ret loopne xchg jmp push je bnd cmpsb pushl cld lcall add cmp or (bad) notb mov sti (bad) ja je or pop mov clc dec cld (bad) (bad) (bad) (bad) jmp inc or or jecxz mov insb outsb (bad) pusha push mov out enter (bad) dec sub repz test mov mov scas dec lods pop std (bad) decl jns sbb loop movsb inc aad mov test addb adc nop stos inc pop mov (bad) (bad) incl cltd aam rcrl mov mov aad enter aam fstl repz fcomip (bad) out jmp ljmp pop dec push int3 xchg mov xor mov icebp pop adc int3 xchg test addr16 inc (bad) (bad) ficom ljmp cmc mov lahf mov call call xor (bad) mov jmp jmp int3 xchg movsl iret lds push push or lcall or out stos mov mov test jl nop cmp inc mov inc sbb and (bad) (bad) decl in pushf (bad) enter lret aam xchg or (bad) lahf mov outsb cld inc inc cmp cmp int3 lahf xor push xchg jo cli push lds xchg ret mov sub fwait loopne (bad) (bad) (bad) decl sbb cmp jne imul fsubrp pop push inc mov out js ret sahf (bad) (bad) (bad) in pushf fimul jns lds inc jnp mov lea jge fild jl popf mov sbb cmpsb add fistl loopne mov push inc inc out xor out rol or enter bound (bad) cmp dec inc and (bad) js push adc mov fbld jl inc xchg push or decb (bad) aam mov out icebp test loopne,pn or popf jmp std pop cmc mov fdivrs sub lahf sub push inc in (bad) (bad) (bad) (bad) jmp insl outsl std rcrl pop push jb push scas dec jo leave (bad) ds jg into in sbb jnp push push mov scas dec mov mov out mov and pusha js xchg pop (bad) (bad) ljmp xor andb mov inc fldenv cwtl (bad) jmp mov or fistpll (bad) pop sub dec cld dec xor outsl cli (bad) call test gs sub cmp jl inc stos push pushl hlt decl mov in adc inc movsl cmp jecxz dec ljmp sub cmpl dec dec xlat imul mov in (bad) aas pop mov insl jne sub lea jmp lods pop rcrl xchg xchg and (bad) (bad) (bad) (bad) cmp lock fisubrl fdivs jg shrl fnstcw cwtl cli or xchg (bad) pushl int aam and (bad) sub int hlt sbbl lret (bad) decl push aas (bad) fbstp add sbb pop call pop jbe in mov in repnz inc clc (bad) cld hlt pushf jmp lahf (bad) add or lcall dec and nop icebp dec mov jmp mov lcall fist sahf (bad) xor aas push mov stc jl popf pop mov mov lcall incl (bad) xchg mov adc inc in pop sbb imul (bad) lahf data16 (bad) (bad) ljmp sbb dec xor push jle aaa xchg push mov xor popa bsr outsb jo push clc repz dec and iret dec aas mov push (bad) dec in nop cli jmp mov push fisttp in or sbb insl std adc test pop push mov pop jecxz adc jmp adc aaa js nop or pop push dec insl (bad) repnz (bad) call ljmp out jle cmp sahf mov cmpsl cmovp outsb (bad) xor ret sub incl loop ds scas icebp mov xor (bad) (bad) (bad) ljmp flds mov sub cmpsb (bad) in es outsl jne mov cmp jnp add pushl movsl insb add sub mov xor (bad) (bad) (bad) jle lret int or ret adc subb subb fnop mov aaa inc dec lahf jnp ja shl out mov dec adc dec (bad) pushl mov out mov inc xlat mov sub (bad) (bad) (bad) (bad) mov xchg inc mov or repz jne aad cmp ds stos clc push rclb stos (bad) cmp gs (bad) ljmp mov loopne ljmp jl stos sbb lds mov lahf cld lcall push xlat imul dec add add inc pop mov lcall pop roll mov or es (bad) sbb or cmp (bad) inc divl pop pop jmp fisubr push mov mov sbb push dec (bad) (bad) (bad) lcall xor add xor mov (bad) repz into test jnp jmp sub ds jmp xchg fwait jmp and xor fildl out push push std imul mov (bad) insb mov cmc scas stc (bad) mov xchg and dec jecxz xor dec out insl out cmp pop cmpb jns or out imul mov (bad) jmp loope std or in std rorb cld dec push aad (bad) (bad) (bad) decl jle loopne rcrl (bad) xchg adc test call ja lea mov push movsl push pushf xor call out xchg sti mov daa pop aaa (bad) lea xor sub mov (bad) pushl push sahf fnsave (bad) ja cmc xchg imul sbb or cmp daa mov push jp push test js stos out in leave les out decl lock push or stos mov sbb subb add (bad) pushl xlat fildll push dec adc dec int xor sbb (bad) (bad) (bad) aas cmp mov xchg xor xor cmp (bad) loopne test (bad) (bad) (bad) call xor push pusha sbb xchg fistpll cmpsb inc dec inc sarl inc rorb jg sbbb ja xchg test adc js (bad) (bad) (bad) call ret mov mov clc jmp ljmp mov or or (bad) aaa test inc jb adc pop aad ficoml loop cmp int jge push pushf test mov mov dec pop aaa imul aad call test clc or mov (bad) decl jge in push adc hlt sbb ret pushf inc jne cmp outsl mov incl les jle and xor cli sub test inc cmc es or (bad) (bad) mov pop mov dec aas clc cmpsb mov and pop popf popf jnp sub inc add cmpsl ss dec inc sub add sahf fist cmc pop test fcompl stos mov inc sbb push mov or add mov into mov rorl (bad) js dec add test dec mov sub (bad) decl ljmp inc cmc pop mov jmp in adc (bad) ljmp fnstsw xchg sub fsubp push cs mov push jge (bad) (bad) jg or sub iret mul pmulhw and inc dec pop push xchg iret sbb xchg xchg cmc (bad) (bad) jmp jmp inc movnti aad jns mov mov test pop push or pop (bad) in int (bad) inc mov out pop pop cmpsl dec fimul not xchg mov lea xor (bad) (bad) pushl sti sbb jbe jle sbbl lret mov into or (bad) decl mov add imul std fcoms pop (bad) pushl jae or cmp loopne nop ds out ds out inc jnp fwait pushl std jmp adc mov addr16 jecxz aas arpl dec cmpsb cmp (bad) jmp jmp dec jecxz mov repz dec dec repz lret into popfw mov xchg lcall pop jo xchg ret stc das inc (bad) jae imul push fisub push (bad) fstpl addl push popf arpl push mov (bad) (bad) ljmp dec notb cmpsl xor orl out pusha xchg add mov (bad) aas and rcl mov aas lcall jge fiadd sbb pop xchg jb loopne (bad) dec ja mov call push daa cmp pop or clc jmp xchg scas aas inc mov fdivrp (bad) (bad) decl into cltd idivl pop std xor clc dec sbb dec in cmc jns pop fsubrp fcomip lcall in jecxz fisttpll push pop cli jb lcall (bad) (bad) ljmp pop dec cld mov jae insl pop (bad) mov rol and sub inc aam pop int (bad) (bad) (bad) fbstp stc sub andl mov add and adc jle or call add ss lods inc adc cli (bad) call movsb jle std enter loope xchg pop or pop je outsl fbld or (bad) (bad) aas loop sti add add insb xchg call adc cmp ds in (bad) (bad) fsubl adc cmpsb pushl jecxz cwtl jns pop push lcall (bad) sbb lcall lret popa das jno jecxz push rorb pop lods (bad) (bad) (bad) aas daa mov mov enter shrb cmp aad mov (bad) arpl imull (bad) (bad) call push pop pop insb rorb pop mov jmp movsb adc paddusb pop cmpl adc and nop mov adc andl mov mov inc rorl dec mov lods into insl arpl mov std int cli sub cld pop inc add or (bad) (bad) (bad) lcall pop add mov fs or mov repnz in ljmp das cli lods jb rcl enter aad lret repz ss adc pushf in (bad) lcall lea jmp sarb inc mov mov inc (bad) fwait and jmp movsb cli jo push loope pop mov (bad) pushf cli lea insb inc lret test test mov loope mov js inc loope push cmpsb sahf pop push (bad) (bad) (bad) call xchg clc das sbb cmp jo and mov jmp and pushl cld shrb jo psllq bound mov je mov jg (bad) push sar lcall das jle pop jg add push inc aas rcll xor adc pop test (bad) (bad) (bad) decl (bad) jg inc mov idivl pushf in insl mov push repnz cmpsl imul adc repnz ljmp xor jmp int mov mov cmp in imul popa push mov sbb cs pop mov call pop mov jb in jo push inc sub fnsave (bad) das dec sahf mov pop fsubrs cltd cmpsb inc xor mov out xlat repnz add repnz jge adc (bad) (bad) pushl jne lret lret sbb push jmp or dec popa cmc sub (bad) (bad) (bad) aas icebp and adcl cmp add pop mov movsl gs je pushf (bad) pusha sbb (bad) (bad) incl out scas adc inc inc loopne jle pop jl dec ret xor sbb (bad) ljmp (bad) ja add enter add ja ret (bad) (bad) (bad) (bad) decl pop enter xor lret dec push sbb sti pop imul mov jb andl lcall jp mov push outsb push imul leave cmp cmp mov incl adc in pop repnz rclb push call mov aam add loopne xchg push aam ret (bad) (bad) call sub jae adc push shrb bound lret adc stos push jg es add dec movsl in call mov loope add xchg movb mov add pop (bad) dec cmp pop loopne inc fwait cli adc imul xlat adc fucomip inc adc jg and jno dec out xchg dec jmp mov cmc fcompl adc lcall decl das repnz xchg cli pusha push (bad) (bad) dec ljmp dec pop icebp jg jecxz mov call xor (bad) jg fistl aam lock push out aad jle sbb dec (bad) (bad) (bad) out or sub rol call icebp (bad) aaa or lods push pop jnp sub (bad) lea cmp aas adc (bad) aas push outsb pushf cs jae repnz add (bad) decl mov push outsb addr16 sub cmpsl (bad) jl inc sarb (bad) sbb mov gs (bad) testl jbe out arpl mov pushf lret mov push xchg push sub enter inc aam sar (bad) call cmc mov je jne daa dec stos pop cli mov (bad) jae cmp push push stc xchg (bad) (bad) inc sub xchg cmp loope fchs addr16 sub pushf in aad dec lods pop (bad) (bad) (bad) decl (bad) dec pop push out rolb (bad) imul add pop push dec lret aam jmp and jmp sub mov fwait and out ret ret idiv (bad) pushl inc stos sar fstps inc insl (bad) or dec (bad) mov js sub inc rcr sub add push pop mov jne pop push cmp dec fildll sub and (bad) mov xor ret leave imul std decl fbld sub aad repz fnop (bad) mov fs dec mov (bad) sbb dec mov push scas (bad) (bad) (bad) incl jae push and xchg mov pop shl cli dec mov test sbb imul jmp pop fs (bad) call neg dec insb stc nop xchg and xlat cmpsb testl jle pop lea add into sbb push das in push daa (bad) (bad) (bad) decl push or pop cmp mov push loop clc shl xchg mov insb jne js call cs inc or sub pop enter mull cmp pushl cmpsl cmc arpl nop pop (bad) icebp mov mov xchg or mov (bad) (bad) decl stc and enter adc outsl fcoms jge rcrl or decl lods mov std mov imul dec fdivr (bad) (bad) lcall and pop add pushf mov loopne xchg sub ret pop adc clc out fwait and (bad) in decl xchg lcall daa mov psadbw (bad) pushf fwait jg and (bad) ljmp nop out movsl addr16 (bad) mov pop into outsl adc xor ja lea div iret xchg dec mov sub idiv (bad) (bad) incl fbld aaa push sub jno dec (bad) fbld js push and fcompl js or push sbb daa cld (bad) (bad) (bad) fldlg2 or mov pusha and push in in mov test mov and pop pop (bad) lcall push jne fwait aad mov mov das lahf dec inc mov popf or lods sbb push rcl jns das (bad) (bad) jg or in mov (bad) loopne fbstp push pop and rorl adc clc (bad) call outsb repnz aad inc bound push dec gs mov ret out sar std sbb das jb (bad) sbb jae out mov mov push in (bad) (bad) jg inc cmp mov adc sahf push push jmp jns jbe xchg fsubl (bad) (bad) incl gs push cld or cwtl inc shll mov (bad) jmp and push cmp inc negb pop sbb sub imul lcall stc or and in cltd pop cld or cmp mov (bad) jns mov jbe push sar mov les call sti lcall aam jecxz adc iret jmp fst leave adc pop ljmp lea loop (bad) fiaddl test (bad) in icebp (bad) (bad) jmp cmp mov and xor mov ret aam mov jecxz outsb sbbb dec dec jg mov jle jg (bad) decl mov push mov jge lods jecxz ljmp scas mov sbb and lods out mov jae jge ror xchg (bad) (bad) (bad) jg sbb in bound mov popa mov (bad) xor adc je lahf hlt icebp pop neg pop pop pop (bad) sti (bad) jmp or popa popa xlat mov adc hlt mov pop cwtl mov pop icebp adc shl sbb mov outsl icebp sbb (bad) (bad) push popf cld leave cld cli lds cli rorl jmp loopne lret sub loop (bad) (bad) mov cmp dec dec sbb push repnz cmc gs (bad) (bad) js cmp mov into xor cmc sbbl mov mov cli adc mov (bad) fstps push sbb (bad) (bad) (bad) call shrb lret xchg test pop inc push shl jbe push dec std and mov (bad) cld (bad) (bad) call insl xor pushf cwtl jg incb cmp and gs sar xchg stc cmpsb mov sti push fsubl push les jns bound (bad) (bad) jnp inc dec mov push push hlt lock insb xchg or call rcll push push inc nop push push sbb clc mov jne out adc mov (bad) incl bound push sbb pop xchg arpl pushf mov xchg pop pusha or (bad) sub adc adcb ljmp imul inc jle (bad) mov pop adc js mov aam xor (bad) fcomip decl ficoml cmpsl popf repnz call xor xor or dec cwtl or jns and mov cmpsl xchg xor (bad) jmp push nop int in jno jae lret xchg add and cmpsb pop adc sar incl jmp mov fiaddl push inc (bad) divb jne sbb loope (bad) stos jl cmp dec test push (bad) enter jmp das and cld dec xor in cmpb rorb aam mov sub jbe xor jg lock test sahf lock outsl into mov push cld push rclb lods dec dec out lcall mov (bad) (bad) mov loope scas xchg mov pushf sub jg xor mov fldt arpl jle pushl inc xor into pop rcr xchg push aas mov (bad) lcall adc push lret ret repnz push out jmp fs (bad) (bad) (bad) aas fldl adc inc push cmp int3 pop push or cli sbb test xchg push mov call inc pop push int jns mov (bad) (bad) dec das call jmp add js xchg out inc push popf mov (bad) (bad) (bad) incl dec in dec ljmp push in das cwtl (bad) cmp dec lahf cmpsb mov cld xchg pop push push (bad) call (bad) cmc fs xor (bad) bnd pop (bad) inc loope test (bad) lcall rcrl mov cmp scas movsb (bad) in ficompl pusha dec lea jg (bad) pushl adc enter aaa lret pop scas sub pop inc (bad) cmp clc sahf ljmp popa loop aas movzbl xlat stc call pop (bad) (bad) (bad) (bad) fsubs inc jg cmpsb mov xor cld mov or mov lcall add (bad) repnz jg sbb popa xchg push int3 (bad) (bad) (bad) ljmp mov mov mov xchg xchg sbb bound lock call push xchg in call sub mov aad notb jns das jbe das jns (bad) (bad) ljmp cmp cs pop inc jno ljmp or or mov cmp loope dec pop sbb icebp stc push xchg in movsl xacquire std int jmp inc cs adc ret mov loopne ljmp xchg clc call lret push mov repz add dec cli inc (bad) (bad) (bad) call repz arpl sbbb (bad) mov ljmp cmp pop (bad) (bad) (bad) mov std cmp pop stc mov cltd inc mov lcall (bad) (bad) (bad) (bad) ljmp adc jmp xchg lcall test adc in dec adc mov pop aam scas lcall mov xchg xor les (bad) (bad) push ficom kmovw xchg mov stc jo test xor mov mov push jg (bad) jmp xchg mov nop sbb dec xchg jecxz mov test xchg adc (bad) (bad) (bad) ljmp repnz (bad) mov test sub pop rcrb xor rorl sub mov cld and dec push (bad) call stos stos stc scas mov pop fsqrt add iret lock sahf aad or cli ss (bad) (bad) decl add jle xchg lcall insb repz add jns inc outsb jmp (bad) decl mov sub in xchg in fwait adc xor sub (bad) jmp dec jge xchg (bad) push add mov mov gs mov mov add lret inc jl adc movsl (bad) (bad) out cli jmp fsubp idivb push adc insl aam adc ds pop or dec cld decl sbb pop fldt cmp rcrl dec (bad) and fdivrl push aad rcr lods dec mov sti popf mov inc inc pusha jmp rcll (bad) decl scas xor push lock (bad) ljmp cld incl fsts push dec adc lods jae je (bad) (bad) call lret pop notb in out pop jns je mov pop push xor jmp in scas xor jae pop jg (bad) call call xchg jno hlt scas push jmp (bad) pop adc pop cltd xchg rcr ret (bad) (bad) jle es mov xor jp addl xchg sub pop jb (bad) sub lds dec (bad) (bad) std add inc cs push jbe mov sbb ret fldenv pop lcall call imulb xchg or mov (bad) (bad) incl cmp jmp mov jmp xchg into cmpsl stc rclb and cmp clc call xchg cmp repnz call adc or clc icebp cli loop cld xorb stc mov stos (bad) lret incl sub xchg cmp mov adc mov push xchg loop push cmp pop (bad) lock lret dec in cli shrl pop cld jg (bad) xchg mov cmp test scas mov push dec inc cld sbb dec scas iret dec pop add xchg pop (bad) fcmovnb clc pop lock inc xor std (bad) (bad) jg fistl mov movsl mov xchg and lahf jge cmpsb cmpsb cli jnp ret mov pop int inc add popa aas jno mov inc (bad) ljmp add lods repnz test or pushl xlat mov mov (bad) mov xchg mov (bad) push call imul out ja fstpt xor xchg aam daa in out mov test adc or inc iret (bad) xchg mov jb mov inc (bad) (bad) (bad) inc (bad) loop jne jmp fwait mulb push iret mov sbb add repz rcll and dec dec arpl lahf lock mov (bad) (bad) jmp jne pop or pop push push add jp push psubb push jnp mov test add dec mov mov out rorb jg stos enter decl sbb mov das mov movsl rol xor stos push pushf inc sbb jbe mov out je out sahf std or sar call dec mov fnop ret cmpsb xor mov lods (bad) (bad) (bad) call pop dec into test xchg aam mov mov jmp int3 dec test scas xchg (bad) (bad) push fadds and imul (bad) (bad) (bad) ljmp icebp cld js cs in push (bad) xor jno mov sub imul dec xchg sbb (bad) (bad) call dec popf (bad) stos dec xchg xchg mov insl test loop (bad) (bad) lcall int push xchg pushf in sbb in outsb push fwait jnp inc int3 enter outsl insl stc arpl mov (bad) sti push fnclex jmp sub test testb xchg inc fs (bad) (bad) (bad) jl rol sti ret pop mov pop push dec cmovo rol cli or enter int3 inc (bad) push pop mov cs lock movl add adc jl mov mov xchg clc push cmp xchg out xorps mov cmp test ja sub jge inc cmp push sbb aas dec ret scas mov inc pushf imul (bad) (bad) incl push out dec push inc jl repnz or popa push mov adc dec inc in sbbl call jmp xor loope (bad) lcall lret mov nop dec pushf fidiv orl jbe pop (bad) lcall pop dec (bad) mov repnz jne mov mov insb cmc call push sbbl jge mov (bad) fistp shll adc push inc pop mov adc xor call mov scas in adc xchg movsb jle icebp sub or sbb out out xor and (bad) jmp push inc xor sbb rclb rcrb cmc cmp xlat mov sar (bad) enter pop xrelease add mov (bad) (bad) call xchg dec sbb xor cmp cmpsb je adc or mov adc lcall jns cmp ljmp xchg jno inc xchg lcall adc push ja jne jmp push (bad) fcos outsl (bad) pushl push adc out inc push mov pop fadd int3 and xchg push into aaa not pop sbb loopne cmp xchg pop fstpt mov (bad) (bad) jmp fcomps xchg push sbb sbb push xchg setns (bad) dec icebp push sbb jno jmp push lods jnp inc mov or (bad) decl stos sbb dec jbe ss (bad) (bad) (bad) call mov in and add or sti ret (bad) subl mov jecxz jo (bad) lcall loopne loopne or out sub mov xlat or (bad) aas pop lret mov js lea sbb dec pop inc clc fistp ljmp in out and into mov outsl enter mov (bad) mov dec cs cmpsb out xchg (bad) (bad) (bad) aas (bad) jne mov in lahf xor push arpl icebp dec mov and fbld push mov dec fwait js push jl lods jmp sbb (bad) pop mov aam in scas push jbe sbbl and add icebp pop andl mov push les (bad) dec std int fsubrl (bad) pushl adc push lret les out xor sbb icebp (bad) jg bound or dec hlt test insb cmp inc xor (bad) (bad) inc dec subb pusha or push mov sbb push xchg out add mov (bad) cmp sbb mov (bad) xor pop aam push mov dec sti cmp nop inc fsubrp (bad) (bad) ljmp insl push sub dec in adc add cmp jne adc mov out (bad) stc out loopne imul int3 std (bad) (bad) jg lret dec in mov dec cli (bad) pop das cmp sbb arpl in and icebp pushl push mov cs lds inc push je lock decb pushl aas into push inc rcr test sbb lock xlat pop fcoms (bad) or (bad) (bad) lcall (bad) lahf iret enter lret adcl dec push cmp sub clc pop fsubr (bad) (bad) dec fcomip cmpsl nop adc cmp and (bad) call test scas push mov push int jno daa inc sbb ret dec mov jg mov lea out push jno lcall shl pushf and insl push mov (bad) (bad) fild sbb add in lods adc cmp adc int jmp ds inc enter cmp imul sbb xor fs or adc ja and (bad) or (bad) (bad) (bad) mov mov lock sbb mov jnp call (bad) (bad) jg loope cmc or xchg xor (bad) sbb push and nop sub addr16 pop (bad) dec daa leave mov push sub cmp pop adc push js (bad) call loopne cmp insb in push jecxz add mov mov xchg popl stos ds clc outsb dec mov loopne pop mov pusha jae clc data16 dec inc adc ljmp jno add outsl (bad) std (bad) (bad) ljmp test js ret test dec xlat ret lock lret js call ljmp dec push xor dec ss aaa into or sbb enter dec (bad) out decl rorb aaa cld lock pop adc idiv (bad) (bad) ljmp out mov repnz icebp push sbb jle daa jnp lret hlt inc (bad) (bad) sub loope lahf cld mov inc sub jns cmp orl sub fdivs fisttpl in sbb in repnz lds pop and pushl xchg jecxz adc movsb add sti ljmp cmpl loopne out mov sti inc pop iret lock shrl into cmp arpl stc (bad) (bad) decl sti sbb subb inc insb cltd ret sbb push (bad) (bad) lcall sbb push ljmp cmp loope cmp movsl sub leave pusha jno jecxz rorl cmp outsb dec jmp int3 lock jne pushw mov js inc lret decl xor sti imul mov enter cmpsl xor jg jmp clc sti dec sbb rcrb test push inc jl push mulb cmc outsl xchg cld and test (bad) (bad) aas inc popf leave inc ljmp fimull in xchg mov mov std adc push jne adc int3 cmc loope lcall pushf mov jl lea loopne dec inc call sbb idivl mov sub int3 outsb mov popf jge inc (bad) cli pusha mov mov cld push jle decl adc ror mov addps (bad) aas popf jecxz aaa push clc fsub xchg mov mov xchg test test push cmc (bad) (bad) jg push es inc out lret add je stc xor ds mov (bad) aas xor xchg mov mov add mov (bad) (bad) (bad) (bad) jle rcrl repnz insb mov fsin push fnsave xchg xor push mov add fst imul popl xor (bad) (bad) (bad) mov or jge lret mov mov in mov pop xor outsl xor aas sub rcl jge inc (bad) fistp adc push cli sub push xor negl (bad) (bad) mov mov ficoml (bad) (bad) ffree push cltd mov nop adc jmp cli push pop stc outsb sti mov inc push aam fsub (bad) jecxz dec mov cmpl lret jo adc push dec mov dec mov rorb (bad) (bad) pushl cmp mov movsb stc adc xchg mov inc pop cmp rorb js mov dec call dec pop fistp (bad) mov (bad) (bad) inc mov daa fstl jne call test xor push push sbb out (bad) (bad) incl xlat xchg outsb cmpsb lahf sahf jecxz (bad) into adc pop xchg dec mov (bad) jmp mov ret in mov hlt push gs xchg ss xchg push xor lods lcall cld aam adc sbb mov inc inc (bad) xlat jecxz (bad) insl or add push into cwtl ror in out into negb xchg movsb lock incl adc mov (bad) or loopne in mov (bad) ljmp sbb add and je sbb pushf jns sbb sub (bad) int3 jmp mov jle pop xchg push clc ja mov sub loope movzbl jp or add test adcb xor (bad) cltd aad out fimull cmp push xchg (bad) sahf mov clc incl cmc lods cld inc add lahf test mov adc popf ret mov pop push adc jmp mov stos inc adc xchg mov incb xchg push add (bad) mov pop sub mov clc xor ss stc out inc rcrl icebp (bad) ljmp jnp into mov clc cs pop sbb mov add ja (bad) incl cmp add (bad) negb sub push rcrl in mov popf cmpsb hlt ret jecxz jp sbb xchg stos (bad) dec or (bad) (bad) mov scas push addr16 mov (bad) add das sub push sbb inc (bad) mov ljmp mov mov sbb jp and sahf push fistpl jb test mov lock or mov (bad) fidivrl test mov (bad) decl (bad) lock mov out and movsl adc lahf leave mov pushf xor push cmp (bad) (bad) ljmp leave mov xchg movsb push bound shrl push mov lods adc jl lret cmp bound popf sub test mov (bad) (bad) jmp adc outsl int mov loopne or inc and push orl pop ret cmpsb scas aas repnz cli rclb std adc jb and fidivl cmp fs (bad) (bad) (bad) pushl lahf or ds mov aas adc dec sbb pushf push insl add push mov dec arpl cmpsl add pop imul popa cld (bad) mov arpl adc xchg lcall dec adc adc std xchg push fsubr mov push pop mov pop mov mov (bad) (bad) (bad) pushl jae test sub in mov cld popa nop and xchg dec pop (bad) pushl dec xchg bound adc push rolb mov push jno in or xorl cwtl test mov sti scas (bad) (bad) (bad) ljmp inc repnz xor subl mov es setge (bad) (bad) jg sbb inc cmp inc push int adc cmp and aaa std decl sbb mov pushf fmul cmp jb sbb lcall lret jp aam xlat mov adc jle fstl hlt ja xlat mov cld jo pop (bad) fnstcw push loop (bad) jg sbb cli mov fadds data16 out push sub icebp scas iret outsb (bad) (bad) pushl mov (bad) cmp adc bnd aas adc insl dec aas ret pop and mov inc lcall dec cmp (bad) pushl aad enter cmp daa sti (bad) jb leave test ds jns fist call push (bad) int stos adc arpl aas lods bound loope push mov lcall rcrb aas fstpt xlat fisubr loop mov hlt arpl mov cli dec xor arpl call data16 sub adc jle lahf (bad) (bad) lcall sbb mov sarb mov push (bad) (bad) (bad) call int dec dec xchg cmp xor cmp mov dec int3 cwtl push (bad) xchg inc (bad) (bad) incl inc lds sahf pop dec mov jbe jb xchg xchg shr (bad) (bad) push ds push clc mov fld push push cld push (bad) lods or pop cmpsl jl incl jno js mov lods outsl ret mov pop inc push outsb adc iret mov cmp pop push lods jmp loop and or dec decl in mov scas lahf mov jns push enter in aad jae sahf mov out adc outsl xchg movsl sbb fisubrl popa push xor (bad) (bad) (bad) mov dec das cs div mov jecxz mov mov inc mov clc jmp fs lcall stc decl sbb std call or je addr16 jg cmp addl jnp (bad) sub mov (bad) (bad) pushl sbb loope cltd pop xorl mov xchg pcmpeqw (bad) dec das push mov dec aaa aaa xlat lock idivb dec in xchg or (bad) (bad) call das aas stos fildl movsb mov sbb inc bnd xchg jp insl dec sub outsl fcmovnb fcomps nop stos pop xchg sub fstps jle jo (bad) (bad) (bad) incl int3 dec adc inc je data16 and dec xor imul aaa mov jae jmp ljmp popl mov (bad) (bad) (bad) mov stos test mov push fwait or cli cmpsl aas adc pop fcomps mov jg call mov in imul dec fdiv (bad) (bad) (bad) mov add int3 (bad) ficom xchg in mov dec rcr out popf or adc sti add dec inc xor inc mov pushl inc lods sbb es or cmp js inc mov orb cli (bad) (bad) incl (bad) mov (bad) aaa or xchg mov cmpl repnz aam (bad) cmpw gs repnz sti jle cli (bad) (bad) (bad) jmp hlt sub (bad) adc sti mov ljmp or leave fs inc sbb fwait mov mov in sbb incl xor lret ds test mov stos stc imul and fnstcw or int fildl out or (bad) (bad) (bad) (bad) clc or lea cmc cmpsb xchg frstor out mov xor (bad) std loopne inc jp (bad) in mov pop adc lcall jecxz,pt dec jge pop (bad) in je cld loopne test (bad) fcomip je dec dec out addl pop stc jns or xchg fmul jmp mov jnp xchg stos icebp les ss test ljmp add fild jbe sbb (bad) (bad) lcall das mov pop adcl loop ss xor mov sahf inc sub fadds sub push sub cmp pusha or push pop adc neg adc jmp mov adc pop cmpsb call call std pop mov pop adc mov jl push mov frstor push (bad) (bad) (bad) in out push jge xchg lods dec inc jge cmpsl dec arpl lods loop jo (bad) xlat outsl jmp jmp cmp (bad) std (bad) mov fadds pop xchg scas sbb icebp sub inc mov mov (bad) (bad) pushl push cmc or jle dec add dec xor pop ficom sbb js (bad) (bad) call add sub push adc jnp or mov inc lock (bad) incl cltd fwait jno out cmc movsb sti or mov (bad) (bad) decl lds (bad) mov cld (bad) and jge fwait cmp dec cwtl (bad) cmp sarl cmp jge add mov (bad) (bad) (bad) jmp pop leave imul orl xor sbb roll dec add incl sbb int3 push cmpsb mov (bad) (bad) lcall sti jg pop or or (bad) mov mov pop into out sbb test (bad) (bad) ljmp xlat out je das rcrl arpl cmp or mov pop cmp jb incl lahf cmp xchg add loopne leave mov pusha (bad) ljmp stos (bad) push cmp test xchg stos loop fidivr (bad) xchg (bad) (bad) (bad) lcall mov es test lea dec ss xchg ljmp in (bad) incl jg test mov repz push sbb shl icebp sbb arpl (bad) lahf push cld (bad) jg in pop pop push shr in pop mov push insb lcall adc lcall jg dec push aaa mov lods inc push aas ret call cld pop enter aad out leave and pop neg push pop jle sbb fcomip sti es inc shl clc and mov jne fdiv pushl cmp add in jmp xchg lret cltd loopne cwtl aas and dec nop cmpsl fs dec lods into imul mov mov or testl adc (bad) mov dec xor pop xor jecxz adc (bad) (bad) (bad) cli (bad) cmovg dec lcall icebp jmp jae ss (bad) (bad) (bad) aas js xchg mov xor inc cmp mov jmp ja mov adc popl into xor into fcomip adc cwtl stc cmpsl imul push jge pop mov (bad) (bad) (bad) ljmp inc pop movsb inc pop and ret and out mov mov enter xor jg xchg lret fsubs pop push repnz (bad) (bad) pushl leave sahf (bad) aam sub loope movsb or xlat fcoml cltd dec jne out sbb (bad) (bad) fistpl jbe sahf sbb inc into jl mov clc jl in xchg or sarl sbb divl cltd cmc mov in (bad) (bad) incl xlat sti push adc mov sub push xor inc cmp lahf (bad) aad xchg dec in mov and jb xchg out adc ljmp cs xchg and pop clc cld dec lods (bad) dec jle,pn pop shr jmp mov mov xchg loopne or sbb pop idivl xor jmp jae xlat (bad) (bad) lcall mov lret xchg movhlps xchg pop ja mov lret sahf mov sbb push sahf xor in cmpb icebp loopne adc mov jg push sbb jge ss lret movsl mov hlt add clc (bad) clc mov ror push push testl scas inc stc and incb jno push xchg rcrb scas out out lcall in adc (bad) scas add aaa aad jnp aam (bad) (bad) jg in loopne bound mov mov pop in mov dec les xchg mov in pop imul decl jmp lret mov mov insl es mov fisttpll (bad) (bad) ljmp rol jo sarl cmpsl pusha jno ficompl out insb fcomip xchg call mov test (bad) ljmp sub iret jg lcall mov and rcrl push dec sub into pop mov mov sbb sbb sub aaa jmp inc mov push fwait jmp jmp aaa (bad) call inc hlt adc in fwait movsb fisubl hlt loope xchg ss stc dec or das mov incl jns jmp iret hlt pop mov mov (bad) incl stos mov jb jmp cld mov js or jo (bad) mov xchg je inc xor cwtl cmp jbe cmp add lcall call jmp out push push pop pusha pop incl dec mov movsb mov sub (bad) (bad) ljmp lret enter cld push mov pop add mov mov mov lcall xchg data16 push mov movsl cli rcl push adc push inc stos xor push cld (bad) jg dec roll cld mov xchg or cli jb pop cmp insb addl ds fsub stos sub (bad) aas mov push mov aad dec xchg sbb (bad) (bad) jmp cmp sub insb and sbb fidivrl mov adc cmp sar lcall orl mov leave jp mov mov sub sti and fildll mov pushf lahf fnstsw adc dec (bad) (bad) js test push pushf cmp jecxz rol jg inc pop fisubrl pushf push addl mov inc or addb sbb pop pop and dec js fadds sbb pushl add xor adc jae in rcl push inc cld gs movsl int3 (bad) xchg inc repnz (bad) (bad) mov or data16 jle hlt xchg sti ljmp nop lds sbbl push cli push xchg xchg shlb and lcall shrl cmp (bad) (bad) outsb cmp (bad) push mov (bad) jmp cli cmpsl pop hlt scas inc xchg in in add repz mov cli (bad) (bad) (bad) pushl xor (bad) mov inc fisubrl jae push mov mov mov imul mov cli icebp aas repnz shl lret jb dec mov int cmpsb or (bad) ffreep pusha adc cmp idivb adc cmp or insb pop adc idivl enter ljmp aam (bad) ss (bad) (bad) lcall mov pop scas rcll bound push dec and clc (bad) (bad) decl adc push jecxz jmp cli int lods (bad) leave sub aam iret mov push leave mov or jno push repnz dec ja fcomip push pop cmp test push pop test or xchg mov (bad) jmp jmp mov lahf pop fnop sarb (bad) (bad) call insl xchg out jg mov inc push loope call mov mov stc (bad) (bad) decl clc loop push loope out je daa dec loope cmp out and jp inc mov (bad) (bad) jg incl psubb ja add sub cmp cmova jge repnz (bad) incl mov push mov fdiv (bad) iret cmc sub ret ror cli or (bad) (bad) (bad) jg movsl inc xlat jge sbb insb (bad) ljmp in and push (bad) pop (bad) (bad) stc jge push gs or push idivl outsb add out pop fwait (bad) aas adc sahf push (bad) jnp xchg bnd fildll pop inc das cli (bad) ljmp into push jbe scas lret mov mov lock rol (bad) cmp jmp call xchg in bound push sarb add ja jmp dec jb pop mov mov lret mov push fwait fs cmp loop das clc sub bnd push adc mov popf je mov (bad) aas aaa ret push cmp jl push jge stos pop out repnz push ds (bad) (bad) jmp in clc (bad) dec scas fild (bad) popf andl or inc lcall or (bad) fild xchg dec sub iret pop push sti fiaddl cli cltd inc mov in nop push mov cltd and ret insl cld add mov in pop insl xor ljmp cmpsb (bad) jge loopne mov sbb sahf jmp push (bad) cli dec dec in lahf sar (bad) call lea lds push xlat pop xchg dec and rol push adc js jge out cltd add inc shr add (bad) (bad) ljmp push dec xchg testl dec xor jl jle sub xchg inc inc sub cmp pop jge push lcall arpl mov push or (bad) (bad) inc cmpl in les cmc mov or insb fcomi in pop pop daa loopne xchg push (bad) jg (bad) test cmpsl push xchg lds add (bad) (bad) pushl aad mov xor call out xchg push xchg es push scas enter (bad) jmp clc out sub mov stos andl sbb in mov in cld stos pop out jp scas sbb das clc lcall divl mov or int3 add pop fisttpll mov mov lcall (bad) cmp cmp adc ss pop mov test movsl mov leave arpl mov sbb (bad) jg popf cmp jno mov loop and pop aam mov cs mov decl add ss popa push sbb rcrl xor mov sbb (bad) cmc daa and mov shlb cwtl cmpsb jg sti mov inc ljmp mov sub shll cwtl imul movsl jl int3 rorb retw adc jg xchg in daa ja,pt sub lret lock (bad) arpl push cwtl fldt call inc insl into xor push (bad) mov cmpsl nop (bad) sub cmp dec stos lcall lcall aad (bad) (bad) (bad) cmp orb mov out imull loop push mov mov cmpsl es dec push minps xor pop lret xchg stos dec arpl hlt inc (bad) (bad) (bad) jg push rolb push xchg pop fdivl jecxz push lds sbb add add (bad) das clc jmp pop xor adc jle mov xchg or jns cmp std (bad) (bad) (bad) mov lret into mov out adc mov mov mov push movsl lods rcr pop jb xchg pop xor repnz stos inc mov dec pushf jbe adc mov inc fwait mov jp xchg mov (bad) (bad) push jp (bad) scas xor jbe sub shrl mov and adc dec iret mov jge (bad) ffree rorb (bad) (bad) (bad) pushl cld negl push mov mov fisub out aas js sub pushf mov jne (bad) in (bad) (bad) mov les jbe cmp (bad) jge sub lahf cmp (bad) jg (bad) mov cmc aas outsl mov scas push loope cmp mov sbb pusha sbb inc dec jne cld (bad) (bad) mov sbb sarb xchg pop stos js clc jo cli mov lret cli (bad) decl jmp xor das mov mov dec jmp pop clc push (bad) (bad) ljmp sbb into xor inc jb popf (bad) dec test dec xchg stc lret sub popa dec mov jne outsl dec (bad) lcall nop add rcrl cmp addr16 (bad) (bad) (bad) jmp gs (bad) rcrl es lret push pop mov (bad) mov (bad) xor cmc loop andl fsubrp cli addb fdivl (bad) fldenv xor (bad) decl cmp pop pusha cmpsb adc adc shll dec jmp scas jle ds outsl pop repnz fnop mov call (bad) ja push adc cld negb or rcll int3 daa cld inc pop jge inc std test xchg mov cs push pushl sbb sub jbe push test out push jl pushl sbb movl pop mov jo call jae cs xor roll in dec out mov add or push jb push (bad) aaa popf dec cmp (bad) dec dec and jmp ret xlat mov or arpl into sbb cwtl aam pop jecxz scas shrl jns jns pop xor je (bad) (bad) lcall leave dec mov fcomi test ret cltd sbb jae dec xor fstpt repnz (bad) incl adc std dec rcll cmp sbb mov push (bad) (bad) (bad) jg fcom lret aas out jge sub dec adc lods ret enter inc add call loopne mov in sti xor call sar fildll dec in in gs jmp gs (bad) (bad) (bad) dec imul arpl call fidivl sub mov div lods les fnstcw xchg sub xchg inc outsb (bad) fldl ret cmp repz outsb inc lcall add scas xor cld (bad) (bad) call adc fcmovbe push pop push aam mov and (bad) (bad) in decl jg and iret (bad) sti cmp stc mov or pushl pop mov mov xchg and cli ja lcall ljmp push popf pop mov ljmp cltd adc push ret push push shlb inc ret or or iret add sbb (bad) (bad) dec inc mov push jge inc mov aaa int push cltd test or jle (bad) jg leave mov (bad) pop xchg outsl ret push adc sub add fistl pop pop sbb lock mov lret mov adc pop pusha in (bad) dec push pop push mov in pop leave xchg and adc mov stos add (bad) (bad) (bad) call fmuls into aam pop push push pop icebp dec (bad) xor cmpsb repz dec pop pop lods (bad) aas cmp xor cltd adc ljmp inc inc sti mov (bad) (bad) incl mov cld mov out rol in adc int pop test jg pop xchg cmp test fisubrl lock (bad) (bad) (bad) pushl stos loop jle rclb test addl or pushf jno repnz incl mov loope or in mov dec fptan (bad) xlat add inc (bad) (bad) (bad) (bad) cmp in js sarl daa or jge clc adc (bad) pop xor dec (bad) (bad) sti add sahf cltd pop jne repnz dec js mov sbbl fstpl jb jne test (bad) test pusha or add inc jmp (bad) inc cmp in loopne dec clc cmp mov mov or sti in sti adc xchg std lcall clc iret lahf mov aam jmp sbb push push jnp jo pop inc imul sub call cli mov sbb aas lods jmp pop dec jne cltd and decb lods cli add push push adc (bad) (bad) (bad) pushl clc push mov sti int3 pusha lds push out rcr and adc daa (bad) decl jg cs mov fisub loope adc js pop adc (bad) (bad) lcall push cmpsb sbb mov adc pop aam mov mov push jecxz xchg push jp xchg sar int3 dec push pushf test add sahf mov jbe imull adc inc pop out jle les adc fcomi mov mov pop cmc (bad) decl pop add outsl mov mov ja pop inc jle test les (bad) aas aaa popf fnstcw mov (bad) mov mov pop imul push mov addl cli pop pop sbb dec ret pop hlt jne or cmpsl enter jecxz sub cmp fcoms mov cmpsl ret dec or jmp stos movsb out sbb lcall or (bad) fldcw xchg and enter cmp roll notb icebp (bad) out pop jo leave loope mov dec rclb adc lahf ljmp dec fidiv sub in push test mov (bad) and lahf sbb (bad) mov dec jbe enter mov sub shll ret ljmp out scas sub test sub movsl xor inc cld (bad) xor (bad) (bad) incl jl sbb fwait js sub add sbb cmpsl xchg or (bad) lcall test rolb stos add push add ss mov inc aas idiv fsubrs out pop fimul incl outsl cwtl sbb jns icebp cmpsl cmp sbb mov sub add fdivrp lock stos je add loope fcomip mov iret xor int jo push in push stc fwait leave add mov (bad) (bad) jg pop cmp loopne adc push lds dec mov cmpsb dec mov (bad) incl es (bad) inc xchg test sti dec mov stc lea data16 or (bad) jbe sub call mov iret jecxz mov (bad) adc mov (bad) jg fisub pop jge es faddp ror arpl push pop ja add loope (bad) stc mov xchg and pop stc in dec (bad) decl out insb dec xor jmp clc fwait in jle push aam cmp call jo xchg mov imul add scas ljmp mov (bad) adc xor clc adc les repnz push sti pop loopne jmp fcomps outsl pop inc clc mov cmpsb (bad) inc loope ljmp cld insl push pop sub sub insb jb cmp imul sub push push in jne in lret lock and (bad) (bad) lcall mov addr16 aam subl out and dec (bad) outsb fwait imul adc jp mov nop pop push lods adc fwait jns fdiv idiv xchg ljmp and pop lret (bad) mov push dec push xchg mov nop pop test adc imul push pushf dec outsl shrl cmpsb jne add (bad) (bad) mov cmc add jmp out inc pop sub inc imul xor (bad) aas cmpsl or insl pop (bad) cmp shl mov cltd incl pop adc cmp shl mov (bad) mov mov xchg sub and (bad) lcall push hlt fcompl mov out mov dec push mov (bad) xor jbe ja (bad) mov std ds inc movl sti push cmc (bad) lea lods cmpsb inc xchg iret out pop lock les hlt pop pop sub dec lds lahf xchg push ljmp inc xchg pop lahf (bad) fstpl mov movsl mov in (bad) clc in pushf and dec in adc sub cld scas mov andb push push sub dec js add (bad) (bad) jg mov movsb inc mov mov sbb loop mov (bad) jmp hlt test pop (bad) dec xorl cs fwait daa jae jmp out das (bad) jg (bad) test cltd iret and inc ffreep push dec cmp (bad) pushl xchg ret aam cmp push push xchg sar (bad) fnsave xor lcall sahf pop mov ja inc or mov in shll push add push add inc push out push lahf fistl sbb lahf lea sub (bad) lcall cld lods ja mov ret xchg adc push jl popa icebp ret addr16 sbb mov lds dec pusha ret push scas test cmp lret xchg (bad) lcall js scas fisubl push push rorb mov fsubl cwtl push popf ret adc push aad test (bad) jmp test lock rcl das mov xor (bad) aaa and lock call std xlat out dec add pop fnsave and nop ret call add dec insb shll sbb in addr16 jne xchg xchg idiv outsb fnop sub fist (bad) hlt lea (bad) (bad) jg mov into jo mov js pop (bad) push jl and (bad) std fwait insb pop out mov mov cld (bad) aas adc shr (bad) int3 jmp andb push lds (bad) pushl insb in jns pop jbe (bad) stc sbb or add mov lcall fnstcw xchg popf pushf mov ss jl aas jl cmc ljmp call fnstsw add (bad) xor fnstenv inc inc or (bad) cld push mov ret mov jecxz adc inc rol lock (bad) (bad) decl adc cld lret das sbb popa movsb jne fcoml mov (bad) (bad) in mov xor jb jbe inc mov loopne es cs mov mov cmpsl aam pop cli mov fimul cltd rorb rcrl (bad) pushl mov jecxz mov and mov push lret jnp shll xor loop (bad) fneni(8087 movsl test call out icebp jge cmp xchg adc jbe (bad) call mov fsubp out push xor push rol jmp test cmpl (bad) jg lods cmp repz sub icebp stos inc cltd outsb pusha lret cmp (bad) (bad) jg lock inc push mov pop push mov bswap fnstcw xchg mov jg push sbb push js push add dec ss scas and (bad) (bad) (bad) cli mov movsl (bad) int3 inc xor dec xor lock mov movsl mov mov clc (bad) pop loope pop xor (bad) out cli lds xchg cmc movsb push push jmp and jmp jns (bad) lcall adc push popa jp jb leave mov jnp in or dec jle sbb add mov lahf adc (bad) (bad) fildll enter sub decl or adc jbe mov je jmp arpl adc rsm push mov mov adc out es jg cld outsb cmp insb jb mov pop loopne pop push xor jo (bad) (bad) jmp test xor jp dec jb in inc repnz imul pop jp cmp cld mov in pusha (bad) sbbl jno or sarb xchg int3 (bad) push in jp cld decl push jo outsl ja data16 std ljmp inc insb dec fsubp int3 pop mov (bad) cltd stos movsl or sub shr add insb xchg add loopne jbe insb inc fs into jb movsl cmp dec mulb sub jg (bad) push loopne sti xchg adc adc in (bad) (bad) (bad) decl mov push push xlat xchg pop (bad) ret (bad) out jge enter fdiv mov mov cwtl xchg xorl decl mov test dec mov js loope push inc cmc ficomp (bad) (bad) (bad) jg sub divl pop jae enter sbb ja lcall std decl push or or sbb add sti (bad) int test add andl push scas cmpsb dec dec clc mov jmp inc fwait push sub add inc ss inc xor (bad) mov lcall ljmp dec push pop add mov mov (bad) call or pop lret popf pop nop or scas mov and or dec fs add dec mov (bad) cld pushl push fistpll xor push adc aad mov clc (bad) mov lahf movsl sarb mov sub aas add push rol dec fdivp add push or je aad add jecxz or (bad) (bad) (bad) mov xor (bad) jae (bad) dec push jno outsl aaa mov fdivrs stc (bad) lcall cld cld or (bad) shrd sub rcl xchg arpl dec mov mov data16 lcall or mov cmp paddd (bad) (bad) (bad) ds imul fwait out stos pop xor cmp and lea popf mov decl add jne fsts mov mov or imul xor ds mov out aas (bad) je dec inc icebp ja clc (bad) cmc in sbb mov je ret add lcall mov sbb data16 insl add imul inc (bad) lock jp in enter lcall aas push sbb and pop cwtl jbe jp push ds ret sbb xchg jecxz (bad) (bad) call mov push inc (bad) icebp out outsl dec (bad) jb inc xor addr16 call cmc xor jecxz pushf shll pop cs sbb int in cmpsb add pop push mov adc (bad) (bad) lcall frstor dec test jne inc (bad) int fdivr pop jmp test lcall pop call test add pop js (bad) lcall add lret bnd mov pop adc lahf cmp sar lods scas sbb or nop xor pushf xlat popa dec hlt lret jle (bad) and lock mov cmp hlt dec mov lods push ds dec pop icebp lds add iret and clc (bad) (bad) inc ljmp in inc in ljmp xchg adcb adc rclb call mov dec cs (bad) arpl push (bad) (bad) (bad) ljmp cmp cmpl xchg adc push xlat jecxz (bad) push aas aam dec add jmp call (bad) push stos jmp inc iret bound cwtl xchg cmp in lret aas adc lods and jno cs (bad) fcomip push rcr ss dec push mov lock rcrb cs incl fwait repz cmp (bad) inc push mov pop loopne ljmp test movsb cmp imul cld push cld sarb es ret ja fcompl (bad) (bad) (bad) jg repnz sbb lcall test fsts sar loop icebp (bad) jg rcr ds out stc jno jmp popf in sub aas xchg aam (bad) loop mov mov (bad) (bad) (bad) lcall aam lock cmp fist ds mov leave mov leave into cmp cli push sbb cs push (bad) mov cs add sub or aas out out or hlt rorl mov dec icebp lea mov push ret cmp out mov cmc adc aas add (bad) out mov mov mov imul (bad) jns data16 shlb jge imul test jo imul mov (bad) cmp (bad) jg insl xor mov adc scas push dec arpl fisubr xchg adc (bad) (bad) (bad) jns (bad) adc popa mov (bad) dec mov add js adc pop push push int3 jb pushf int3 adc outsl mov (bad) cld js lret mov push mov hlt jg push mov scas jae outsb (bad) mov dec test call lock jg dec sti mov fldl pop adc jns and xor fcomip cmpsb sarl lods push decb fcomps dec stos insl dec dec cld inc cmc (bad) (bad) ljmp add nop mov xlat popf sbb pop (bad) loopne inc stos mov pop ret rcrl (bad) push out (bad) jmp mov push cltd or or pop in jl and (bad) decl pushf cmp outsb bound lcall jl cmpsb aam xor mov shlb ja and pushf loopne inc inc ja (bad) push dec loope xchg pop push jo test fisttp das sub mov cmpsl add shlb cmp (bad) jmp inc out (bad) fdivs ljmp (bad) (bad) cmp (bad) jne sti shl mov cmp loop mov cli (bad) (bad) mov (bad) cld cs inc xchg mov inc jecxz aaa std adc (bad) mov mov sub repnz lods sar (bad) (bad) jmp cmp add mul cli sti cmp dec pop pusha hlt pop mov inc pop ror fistl dec dec cld xor insb popl cmc mov out or adc (bad) (bad) jmp mov mov pushf (bad) icebp int push sbb push inc mov jg mov mov pop xor mov cmp and pop fstps imul mov sub (bad) (bad) (bad) incl jae cmc pusha scas cwtl ret jo into loopne outsl jne andb push (bad) (bad) fbld insb jmp or call iret ret in xor mov shrl xor or jns inc ror sahf xchg push cltd aas adc cmpsb adc mov cmp daa mov jae cmp or mov in fmuls mov mov push push push push out repnz add imul cmp (bad) (bad) (bad) jg inc (bad) in or jo inc dec (bad) mov cmpsb aaa fs mov out mov or mov (bad) (bad) jmp pop xchg inc push cmp cli fs scas mov lahf clc fs and (bad) jo ficomp mov add pop or pop (bad) (bad) lcall cmp mov mov add cmp dec shl mov inc mov cmpsb jno (bad) mov ret adc push sbb pop icebp out xchg ficomp enter fsub sub push movsl sbb sub in or jb inc ja sub xcrypt-ofb cmpsl test sbb cli in xchg hlt push test jge pop cld (bad) jg cmp jbe xor icebp inc ret in orl cmp push push (bad) push das mov inc cmp out dec fidivl decl aam je mov in push (bad) push pushl negl or jns pop (bad) (bad) cmc inc popf insl push popf test push imul (bad) (bad) fmuls incb mov fucomip mov or (bad) pushf out fs mov jg jecxz sbb push mov (bad) (bad) (bad) pop stc adc pop dec cmp pop in inc cwtl xor std je mov pushl mov jl sub pusha out loop outsb cmc test (bad) (bad) icebp add xchg pop dec loop repnz out push push fnsave shr inc mov ljmp inc pusha rclb xchg shl xchg clc dec mov js test (bad) jg xor fdivrp cld je pop pop push into mov iret mov das stos sub (bad) (bad) (bad) incl leave mov inc xor enter or inc bound push imul fwait (bad) aas bnd push jge cmp lret fstpl mov push sti inc (bad) (bad) (bad) decl mov mov aas in inc inc and es and cmp jecxz cmp jg (bad) aas mov sbb sub ja inc inc lret imul ljmp pop dec in mov xchg sbb mov cld add fnstenv (bad) das (bad) jg (bad) cmp or or mov in int3 (bad) mov sub cld in add (bad) (bad) (bad) incl xor ljmp aam dec jae dec lods fnstenv push xor (bad) in lock jmp lcall xchg sbb adc nop push aad cmpsl lock addr16 sub add (bad) ljmp (bad) mov lret push or sbb loopne jb fild jmp test mov negb lock (bad) (bad) ffreep sub push mov push lods inc popa ss (bad) (bad) lcall stc or inc dec xchg adc cltd popa cmp pop mov aas push inc push aad mov mov inc jmp popf add in lock push sbb jecxz pop ljmp adc push mov decl ret fcmovnb out ss pusha dec pushf push aad xor pop cmpsl insl out pusha (bad) (bad) lcall shrb (bad) outsl and adc dec mov ss pop push shrl das call cld decl ljmp loope jge pop adc out fmull (bad) call daa sbbl arpl inc sub fisubr mov daa xchg jnp (bad) pop hlt stos mov xchg loopne cmc inc sbb nop cli pushl inc out mov fbstp (bad) mov sahf push in cmp lcall push nop xchg mov dec dec loopne jns cli (bad) lcall sub repz push lock repnz (bad) and or cmc (bad) ljmp aad or push jbe cld loop (bad) (bad) iret sti fadds or insb cmp daa add jl xlat ret ret sbb push and sbb xor cs rcrl push push cwtl arpl inc jp and out jge push rolb (bad) (bad) (bad) out push push xor jae jg fisub inc mov movsb incb fmulp in sbb inc (bad) cmp add call push mov inc es sar cli jmp gs dec in lea pop cmp repnz movsb pop adc imull std (bad) incl cmc pop mov cmpsl out cs mov clc push adc (bad) (bad) incl (bad) in sub out push pop xchg pop push sti pusha dec dec bswap sub jnp rcll adc jne (bad) out pop jge pmulhw adc (bad) jb test cltd dec mov pop lock mov jecxz rcll sti movsl or cld adcl jae jg cmp scas imul mov mov sub daa add clc mov xlat stos in (bad) inc fistpl pop or sub xchg jmp into mov dec loopne sti cmpsl mov iret inc mov mov (bad) repnz add sbb sbb cld xor push dec test mov pop add aad mov ret push je lcall mov mov ss dec int3 rcll loop mov ss (bad) jg pop mov xlat imul out out push xor (bad) in or (bad) jmp xor (bad) repnz shl pxor adc insl repz push test pop das pushf cmp rcrb (bad) incl int dec and lahf jmp leave daa add jno and push notl (bad) call sti roll dec (bad) (bad) jecxz loopne pop push dec aas loope mov stos inc fidivl pop lea into in imul je push inc idivb push inc das clc (bad) (bad) js testl adc xor jne dec lods std jmp mov push jno xchg repz cltd in inc cwtl mov dec clc rcll inc dec lret aas jae jmp sub mov sti push leave dec fs lock gs adc and roll icebp popa pop push sub clc ja xchg (bad) mov and (bad) (bad) (bad) call lock xchg push mov mov sahf pop jle iretw fnstenv jp adc inc xchg fs das cmpsb xor cmpsb sbb jg (bad) mov or push push push push arpl cli addr16 test (bad) pushf mov nop jb or pop mov mov push mov sub push lahf inc inc sbb (bad) jmp repz xchg and popf clc cli sbb cmp das adc jl out in dec cmp std or jmp adc or ret (bad) sbb int3 sub test sub mov clc sbb arpl (bad) (bad) (bad) ljmp ja loope lock sar mov stc pop cmpsb mov jmp adc out fmuls cmpl call (bad) mov and out xor inc or rcr adc (bad) decl xor stos fs (bad) (bad) lock ror mov (bad) dec aas pop adc (bad) ss dec (bad) (bad) (bad) decl push add pop fs ret sub (bad) imul dec add lahf pop xor fimul mov push (bad) (bad) ljmp stos cmp push add adc pmullw xor add lcall fpatan frstpm(287 mov push push and push das mov sti mov (bad) out mov ja lret pop jae pushf dec pop mov and cwtl (bad) (bad) pushl roll mov outsb push into cmp mov add fidiv (bad) mov dec (bad) call adc insl mov pop ljmp mov and or jle add and sbb cmc clc adcl outsl neg and mov das xchg jg aam lock push push push cmp sub stos xor cmp (bad) (bad) fisttp ds push pop jb in stc mov adc loopne mov sub jmp ret pop dec push les (bad) (bad) aas mov dec dec call lods add lods (bad) lcall add (bad) ljmp mov inc inc jbe in repnz scas xor enter in les lahf sbb mov mov cli pop jae push adc decl dec mov cltd das mov dec popf idiv fstps push arpl jno iret call clc (bad) jns inc ljmp outsl jbe push push xchg sti sbb lahf sub (bad) (bad) decl mov jmp repnz fprem1 daa fcom adc (bad) jnp adc mov xchg (bad) pushl loope fwait pop jge int sarl mov insl int pop or jge dec adc jle xor (bad) sub lcall or jne stc cmpsb mov call jb push cmp sub ja std push out adc lcall mov dec adc push pop push push ja inc popf pusha cli mov (bad) (bad) (bad) decl (bad) cmpsb clc mov lods jno enter push xor or cltd sub inc enter ljmp push xchg mov scas mov pop iret int3 data16 push mov subl or (bad) call movsl idivl ss or pop or iret (bad) aas jnp pop fwait xchg mov sbb pop movsl cli mov pop movsl sub cli (bad) jmp adc inc jl pop xor js loop out jmp mov pusha mov lock mov jmp mov test call (bad) (bad) sbb (bad) dec adc ljmp call add sub pop outsl aad into and and data16 lcall inc xchg mov push add stos sti or (bad) dec pop fwait push push and sbb inc cld (bad) (bad) lcall mov lcall sbb pop or cmp cs (bad) jmp mov xchg mov sti inc outsb shr repnz lock mov (bad) (bad) jmp or mov push mov cmpsl pop inc mov repz push ret cld cltd hlt lods movzbl les leave jg (bad) decl ljmp and adc out aad push das or cltd dec dec xorb decl inc jb or push pop decl sbb mov xchg cmc test repnz aam popw (bad) xor add jg dec cmp lcall inc test ja outsb idiv call push aas loop or jge inc and imul add (bad) (bad) (bad) jg outsl or int3 inc aam hlt out pop aaa push outsb loope xchg xchg inc adc callw add pop ret popf in xchg pop jle hlt pusha pushf ja rorl fstps idiv testb test cmp cmc test jmp les push call lock test pop cmp (bad) lcall repnz pop (bad) icebp lock fnstsw rcrl mull cmp imul dec dec loope lcall push repnz (bad) ljmp insl xchg push add mov xchg sbb aaa out test test xchg cwtl (bad) bound (bad) decl jo sahf dec out fmuls loop xchg clc mov cmpsl jae aam push inc clc (bad) ljmp xchg adc sbb or loopne inc mov cli lods sahf adc sbb or dec out jge push lea (bad) (bad) mov xor loop inc dec jmp iret mov ljmp shlb sub jbe jecxz adc push incb (bad) faddp mov mov adc decl clc jmp imul fcmovbe lock decl dec imul sbb scas inc aaa jo lret rclb jb dec jl (bad) decl cs ja out jnp push enter inc mul pop sbb pop int3 mov add arpl pusha or outsl push jbe add mov ljmp gs push int aaa push jecxz and pop (bad) (bad) fcomip adc push add aad mov js fidivl sbb inc (bad) (bad) jmp or cmpsl (bad) hlt lahf lock cmpsl (bad) mov jne push cld (bad) lcall mov aad sub out pop mov out and add or jge in xchg enter decb sbb js out mov (bad) incl dec ljmp pop stc push adc mov jge hlt loop (bad) (bad) pushl push jns push cmp push in dec (bad) in pop or ss shll loopne add cld fdivrs into sub jmp ds mov sub pop or pop ja cmp xor mov push push jp loopne,pt xor push push push fsubl mov push pop jle push (bad) (bad) ljmp push dec mov adc movsb scas pop jmp out mov aas xchg fwait loopne cmc (bad) (bad) mov push pusha jnp inc jo (bad) into test inc loop movsb cmp jecxz decl test aam inc pop pop (bad) vpmulhuw lods cwtl std xchg insb insl jno (bad) (bad) (bad) mov lcall sub jge loopne push ds nop pop pop in adc mov ss adc (bad) (bad) mov add arpl out sub xchg fidivrl incl out das pop jg inc mov push sbb enter mov popa into jg lods and fisub push push out (bad) (bad) (bad) call cmc add mov inc ss xchg outsb repz jbe sahf data16 ja adc dec aas repnz call jbe repnz cs mov dec jbe aad jecxz ret cld stos lret mov (bad) (bad) call gs into loope (bad) stc je push leave out iret (bad) ds imul cli loope xor iret call fstpl inc lahf mov test movsb ficomp lock mov push fldln2 cmc add scas xor xchg out scas or sbb mov dec insl mov dec ficompl iret push in adc scas and jne mov lea int jnp (bad) dec mov cmp jg (bad) incl enter jne decb and (bad) scas inc lret ret repz mov iret (bad) push pop inc pop int xchg sbb adc mov xchg loope ljmp outsl clc add jns aas lret adc cld sti test (bad) call call loope sbb adc call fwait (bad) push pushf xor not mov push cld popf xor frstor xor pushf vpsubsb add jmp inc in mov pop jne (bad) scas mov fs mov enter jg or add mov mov lret adc (bad) incl or pop lods lret adc in imul mov insb mov iret fs xor mov xchg mov sbbl (bad) (bad) fidivr fcmovnbe bound nop jns (bad) fisttp adc (bad) pushl in repz (bad) ficoml dec sbb rorb add arpl (bad) (bad) lcall cmpsl jns adc or rcl outsb daa push sbb jl push (bad) mov mov in std cs mov lock jg test sub adc dec (bad) test (bad) (bad) jns les inc iret lcall add (bad) in add jbe,pn add dec fdivrl cwtl inc fs ja mov mov mov and cmc test rorb jae repz push jecxz pop insb mov jl stc (bad) incl mov pushf cmp push dec mov add xchg push pop leave (bad) (bad) ljmp out int3 hlt add pop cmp jae dec adc jne xchg subl out dec pop (bad) (bad) incl jo test adc xor pop adc xchg push pop loopne iret jl ret popf and ret rolb xchg addr16 lret sbb and out mov callw imul lods add sub fwait (bad) popf inc (bad) (bad) call fcom push pushl push std and out in jne add (bad) (bad) (bad) mov ret and sti dec sub aad mov dec pop sbb jmp (bad) (bad) dec cli movsb push or insl lret jb pop popf js xchg aad and xlat in int (bad) (bad) (bad) pushl and dec xchg shrl mov sub xchg cltd lcall sub (bad) (bad) dec dec and lea lea jecxz test cltd iret inc sbb fwait hlt (bad) (bad) (bad) pushl push scas sbb outsb test out jl sbb pop push inc mov ljmp scas incl push sbb mov cmc sub (bad) (bad) pushl out xchg sahf aam pop test xor adc cmp enter movsl mov sti xchg out push mov jae (bad) (bad) aas or adc sbb inc sub in mov mov outsb jmp sbbl or sbb xlat int3 dec insb jns jnp rolb jg call cmp loop cli pop inc addr16 cmp pusha ss incl test or push push mov mov les or inc add jmp mov push cmp mov mov fbld psrld jbe mov fnstsw sub aam mov add lret es (bad) cmp fwait ret push xchg jnp jg (bad) (bad) cmp ret pop iret xchg add leave xor xchg mov (bad) (bad) (bad) ljmp sbbl es inc pop sti xchg lcall jnp push (bad) cld (bad) pushl ret xchg leave (bad) stc push inc jecxz ljmp ret lds (bad) decl outsb mov pop push sub icebp movsl (bad) hlt xor sub out adc jb test dec std (bad) call fisttp xchg ret out push or loope dec (bad) or (bad) (bad) (bad) jg cmp sahf sbb lds jecxz xchg push or jae pop fstps inc xchg lcall stc jns icebp mov je jnp fs imul out shrl lock mov and inc enter mov (bad) (bad) (bad) inc ds imul lock lods das mov sbb loopne cmp (bad) cs sub (bad) jmp xor pop jmp jp jge leave mov icebp mov shll and or sbb mov mov mov sahf lods mov push imulb sar xchg (bad) aam mov imul lret insb inc sbb ficompl (bad) pop shrl (bad) cmp or mov ficompl orl in mov decl jmp cmp int3 jl lret fnstcw test out fisubr (bad) (bad) (bad) lcall and pop inc hlt fdiv cltd inc cmpl xchg sub fmuls pop add inc repz (bad) decl insb and hlt pop cmp sub or cmp hlt (bad) (bad) (bad) pushl lret addr16 enter aas lret outsb inc repnz ffreep stos scas (bad) xor adc jmp mov add cmpb cmc ret xor (bad) (bad) (bad) (bad) (bad) out popf xchg (bad) pop dec daa mov call mov in stos push loopne jle sahf js mov (bad) cld (bad) clc jmp insb lock fcoms sub mov cmp (bad) (bad) pushl pop fadds jmp jae dec dec jnp mov push imul adc sbb fdiv lahf cld inc pop rcr ja jno test jp dec in in in xchg (bad) (bad) lcall mov imul pop jo xor cmp idivl in push (bad) pop mov add or lahf mov jno jne (bad) (bad) (bad) jmp push xor (bad) add cmp (bad) cmpsb sbb lods jmp (bad) cld (bad) jmp xor int3 ret popf xchg sub add jnp pop dec mov stos (bad) (bad) call jne test (bad) faddp sbb lret clc and cmp mov incl es int enter add push fs test jp sbb mov push mov imul insl fmuls test push cld incl inc ja mov pusha push scas jns push xor or clc jle fs add mov or mov pop (bad) call fcomip inc (bad) or mov or cli iret mov lcall fs pop cmp cld mov (bad) lods adc nop sbb fildll aaa fnstenv xor pusha (bad) (bad) (bad) jmp inc fwait xchg lods pop adc insl repnz lods pop jnp cmp ljmp clc (bad) fnstsw dec jmp fucomi imul push mov das pop loope aam addr16 decl add xor in cmc jmp repnz nop icebp call int3 (bad) scas mov or icebp cwtl add sbb call ljmp sbbl notl arpl (bad) (bad) (bad) dec testl and cmpl mov mov lahf sbb cmp scas clc xor pop ds fs inc sbb or (bad) ljmp lahf dec loope or mov pop add cld jbe clc (bad) jle hlt (bad) (bad) (bad) (bad) sbb push insb sub (bad) sbb faddl push xor movsb roll pop int in out mov ss out out cmp adc pop cmpsl (bad) and fcomps das sar pop leave stos jnp imul dec adc sbb jle xchg fstps pushl mov xchg fnsave lods mov xchg pop and fcomip cwtl sbb sub std cli (bad) (bad) fldl fs sbb sar push loopne bound loopne call (bad) lcall push xchg sbb jo pop das stos cmp adc out mov sub pushl xor mov into add mov mov cmp dec repnz adc jbe mov xchg cwtl sub jne (bad) (bad) aas or jne xchg xchg insb adc pushf mov jmp call dec int3 mov push ret sar mov mov insb ljmp hlt (bad) jge or cmpsb call insb rolb mov (bad) (bad) call xchg rol imul adc sub xchg or pop or cmpsb lods mov and and pushl xor data16 sub scas adc xlat xchg mov decl (bad) jns sbb mov xchg mov cmp (bad) (bad) (bad) ljmp dec pop jg fidivl mov mov cwtl rclb mov loopne jmp xor or adc mov xchg outsb mov sahf mov pop sbb jns push ret (bad) dec inc add xchg (bad) jmp clc fmull js mov sub sub push or ljmp jle (bad) (bad) push sbb adc test add sbb dec dec fidivl (bad) xor cmp lcall dec or or stos mov jp test cmp iret xor (bad) (bad) call add and pop jb stos sbb out mov sub pop jo sbb pushf daa andb cmpsw cmp mov push mov fdiv mov or xchg and js or rclb hlt (bad) jg lcall addr16 in adc outsb movb (bad) aas stos dec ds test dec out idivb jns imul mov lods sbb and mov (bad) and xchg sbb call push mov xchg fadds iret popf in lcall imul (bad) (bad) sti mov or jle pushaw enter jecxz aad mov or (bad) fbld ss fst jo fadds ja cmpsl xchg adc adc (bad) aas test pop jp ds dec push dec xchg mov (bad) (bad) call sbb loop cmp dec out xchg dec fisttpl add int3 mov and (bad) lcall stc mov jg pushl aad aad adc mov add call fsubrs push icebp mov out icebp decl lods jg fcmovnu mov (bad) xor push daa cwtl test mov mov adc dec lret iret movsl lods push leave sti jbe rcrb sub (bad) (bad) dec orl (bad) fsubr push pop pusha jno stc mov mov addl mov movsb mov (bad) ljmp mov mov jmp dec (bad) movsl push or jo dec push and mov push adc leave mov pop outsb xlat popf xchg fsubs xor xchg sub add push (bad) dec (bad) (bad) lcall push (bad) mov dec mov inc hlt aam mov mov cld (bad) (bad) (bad) mov push sbb fimull int3 rclb inc in pop add dec and (bad) decl out stc cmp mov push mov sbb adc add jno notl adc repz (bad) adc xchg or movsb (bad) jmp sub popa test jmp jge pop in fcmovbe and (bad) (bad) call dec cmp (bad) xchg xor (bad) rolb mov mov (bad) incl into jp sbb cli (bad) jle inc mov fs movsb (bad) (bad) (bad) (bad) cmp dec push pop push stos dec push daa sub arpl inc insl insl push stos decl push scas (bad) scas sbb mov inc les ret push (bad) (bad) incl (bad) jno cld movsl mov dec jmp add mov or mov les sbb in pop (bad) (bad) lcall wrmsr jae insb pop jl mov xchg aam and push sarl js dec (bad) (bad) (bad) jg fstpt movsl call sbbl stc (bad) or js decl pop jno jp mov dec adc fistpl adc (bad) (bad) decl shlb cltd pop sti pop fwait pop jns xchg push pop ret jbe xchg push stos sub lahf jnp mov push jle pop adc fiaddl shlb push icebp and (bad) jno (bad) aam push loopne jns vmovlps dec sub push andl sbb sbb cmp inc sbb (bad) (bad) (bad) inc loope stc mov repz arpl sbb and lcall jo enter daa mov xchg lock decl push jle xor or aad ret pop (bad) jg aas daa adc (bad) in dec xor pop out xor (bad) (bad) (bad) incl cmp enter jbe shrd mov (bad) push pop mov bound (bad) call push cmp gs in (bad) jne cmc mov repnz (bad) incl rol cmp outsl and cmpsl dec xchg addr16 daa mov (bad) dec stc jb sub aam fstps aam dec into int je test (bad) lcall cs imul test rclb mov mov sbb (bad) (bad) pushl xchg loopne test jno sub xor sub adc mov cmp mov imul fidivr adc (bad) (bad) mov or mov sahf ror xor add ret mov xor push fcos (bad) ljmp xchg push mov jg cmpsb mov test lahf (bad) (bad) (bad) call pushf (bad) mov gs test adc test les add (bad) shlb lcall pop dec adcl rolb jno mov insl insb inc cli mov (bad) fldcw mov xchg (bad) dec push sub mov cmp (bad) mov (bad) xor ds or add out mov aaa xchg shr lds sub push ret pop sar push out inc add sub dec stos fnstenv (bad) (bad) (bad) decl cltd jb addr16 rolb and jecxz sbb or xchg dec ret mov daa stos cld add (bad) (bad) push or cs add mov fsub iret repz sahf pop mov cld jg lcall rcrl fadds and xor int dec and out add (bad) (bad) call xchg movsb dec cmp mov insb adc data16 push xor jbe stc loope decl aad sahf in movsl std inc or lds lods mov jg lcall or sbb add aam jecxz in dec cld lds ret fwait (bad) jg call mov into dec mov xchg leave cmp in xor (bad) (bad) decl and test outsl mov and test imul in push ss fcmovnbe jne shlb and (bad) jmp dec xor (bad) aad icebp (bad) jns dec shrl (bad) (bad) incl popf jmp bound scas lds push cmp int3 mov inc lods movsl push fnstenv adc imul or xchg xchg push out ja xor mov push push dec dec test cmp mov xchg (bad) lret xchg repnz loopne add lcall mov loope (bad) mov rol sbb (bad) (bad) mov into (bad) (bad) xchg add repnz lods (bad) dec pop push imul clc fidivl cmc (bad) (bad) decl bound pop test jge rol in xor (bad) pop leave fcmovne or jmp sub (bad) ljmp es nop loope mov xor xchg outsl jbe xchg cltd rcrl popa lcall incl dec lret inc fidivr pop jns std mov push mov loop mov insl das adc push test out jbe in inc hlt adc xlat mov arpl push push push push mov dec adc sahf mov out dec movsl add (bad) incl inc sub xchg lods stos dec or fist in (bad) (bad) jmp movsb sahf je arpl mov (bad) xor (bad) js ss jmp dec mov (bad) (bad) (bad) mov ficompl adc or (bad) dec mov add cwtl mov out jge cwtl frstor pushf test loop loopne add and or pop add jo mov and push jp inc mov fadds cmpsb (bad) jle xchg (bad) (bad) (bad) incl cmp jmp incb hlt pop or jne fdivs nop lahf cld (bad) decl mov xor cmp pushf fldl mov jle into push and add lcall mov repz fs in aam mov cmpsl jmp fs dec mov push xchg sti dec ja push adc clc fisub enter pushl inc (bad) push adc ljmp adc insb int mov ljmp scas mov adc inc mov insl inc and mov (bad) ljmp cli test mov xor in and pop jae imul fcomip (bad) (bad) cmp xchg (bad) jecxz ja test pop cli ret cmp mov les (bad) push mov dec dec xchg rcrl and dec inc cmpsl lock push dec mov pop add mov pop mov je dec les lock daa call scas fiadd push adc test inc mov sub (bad) (bad) (bad) push mov nop cmc enter xchg adc push sbb xor movsb push inc jecxz std iret (bad) lcall cmpsb mov pop ja (bad) (bad) jg cmpsl dec imul add inc nop jp dec lahf inc cltd sub (bad) (bad) mov cli cmp push jmp jne sbb call std adc loop mov sbb lret ret push (bad) decl or repz outsl scas daa cmc stos inc push or and fdivr leave iret mov incl mov jns lret adc xchg inc in mov fldcw push dec jns jns sbb in mov fistpl (bad) mov dec ds ret sub test pop call xor leave (bad) push (bad) and or jmp xchg sub insb outsl xor xchg (bad) (bad) lcall sub int3 lret popa sbb aam loop pop and dec or andl lret call add (bad) fildl push idivl (bad) (bad) inc cli test imul test inc sbb mov mov lahf movsb stos dec lock nop jle incl or rclb jnp and ret pcmpeqd aas sub push mov sub pop cld (bad) mov xlat or int3 xorl in mov cmp inc outsb (bad) (bad) dec or xor aad dec dec insb add (bad) mov (bad) lret pop adc andl push int (bad) (bad) (bad) mov xorl movsb (bad) ficoml repnz fimul cli incl mov mov push and pop (bad) (bad) call enter ffree xchg mov fnstenv xchg sti decw lcall mov push mov add xchg sarl cld lcall jp aam mov mov jg (bad) (bad) jg adc or add cli lret jmp lods cmp fidivrl (bad) (bad) jmp out lods sbb aaa sti xchg pop and inc stos hlt ss outsb jmp (bad) (bad) pushl mov jne xor xchg add lods or jle pop iret inc mov shlb (bad) (bad) jmp pop sbb ficoml mov xor push dec push cmp sub fldcw jp (bad) in gs insl cmpsl xchg insl (bad) (bad) (bad) call fnop and xor orl jnp es dec push aas cmp push pop cli cltd add adc mov xlat (bad) (bad) (bad) in inc movsl push push sbb adc jnp mov lods cmpsb push icebp ds xor add arpl sub sti (bad) mov mov cmp addl (bad) (bad) push (bad) push push mov dec mov lret bound dec in and (bad) jg cld dec out sub out jg pushf sub mov pop xchg (bad) (bad) (bad) pushl inc pop push (bad) jae test ret in cmp mov cmp (bad) lods xor adc xchg clc repnz mov pop xchg std ffreep outsb push mov or (bad) (bad) ljmp int3 stc and xchg adc sti push mov imul lret pop sub loope lcall shl shrl xor icebp mov lods jne (bad) (bad) jg mov push lea hlt cmpsb or xor mov notb dec enter icebp (bad) (bad) fbstp jae mov mov pop pop fstpl cmp mov sbb mov push push mov inc int fcoml xor mov (bad) (bad) decl or ljmp data16 dec jge and dec rcrl ret dec sti mov pop xlat sbb fild mov or (bad) incl xchg or je push pop xchg or push jle pop loope lods mov dec les pop add incl jg cwtl cld ret scas mov out adc or ret std (bad) (bad) incl dec fldcw mov or add xchg ds pop dec adc jmp push push insb xchg ret lock add repnz push sub (bad) (bad) incl stos add mov mov mov negb dec jp cld lock loopew (bad) sub ret add jae pop cmp testl ret dec dec xor ret or aaa insb xchg sbb cld fidivl sub sbb (bad) (bad) decl lcall push loope push dec mov (bad) jmp movsl cwtl aad pop scas push push ja test call lock (bad) (bad) cmp lea mov push mov fisttpll xor jbe out mov mov cwtl and xchg in out add fsub leave cld pop mov je cmp (bad) (bad) (bad) cld mov pop iret ret js sbb mov movsl divl dec int inc mov (bad) fcom fimull mov lahf test andl (bad) (bad) (bad) call out addl inc add fldln2 jnp dec hlt ret (bad) rorb or sbb mov test ret sbb adc cmpsb lock jae xchg mov (bad) (bad) pushl mov and fistl pop cld rcr fistp xchg ret mov pop stc lcall les loopne ret out int3 repz scas or sub jb fcmovnbe aam or pushf mov addr16 movsb mov push pop (bad) xlat xor or add mov xor mov sub push mov divl dec (bad) jmp cltd push mov xor outsl cmp inc stc lret scas or (bad) xchg fild ret sahf rcrb (bad) cmp int lock aaa in decl call push aad int push pushf (bad) rcll imul add mov out mov xor mov mov cld xchg or xor xor les mov or mov sti loop dec xor xchg imul into and and pop lods aam xor add int3 xchg and push sub xchg adc pop shlb sbb (bad) jg pop xor addr16 lret loop loope (bad) (bad) (bad) (bad) jnp add in pop mov (bad) enter cmp mov jae sub add clc daa es cmp lret test pop (bad) (bad) ljmp in fcmovnbe lods fwait cld sbb lret push add pushf sahf and add outsb sub mov adc mov lock push cmp inc mov ss stos (bad) (bad) (bad) (bad) fsts ret aam daa push jne pop inc std out pop repz push fst (bad) xchg pop outsb loope and (bad) decl add andb push or shll scas cli (bad) pushl mov ret imul mov mov mov je push cmc xchg jg ljmp pop fwait mov mov inc cmpl decl adc jo (bad) decl mov inc and dec rolb call cld aam lock sub ficompl fwait std xlat in cmp xchg mov insb hlt add push push hlt (bad) mov incl (bad) lcall xchg (bad) push out mov lahf dec sbb xchg out loope push call test cmp stc (bad) jmp in test cli xchg decl shrl push xor cmpsb mov fsubr fs aas dec xchg insl mov repnz xchg js leave sub es inc xor push test cmp stos icebp adc and fwait (bad) (bad) decl jns int3 cs cmp jnp mov dec fadd lahf in movsl loopne cld (bad) decl scas (bad) mov jo nop jge inc movsb andl dec push cmpb push pushf cltd cwtl xchg clc jb fimul inc stos jbe cld inc bound cmp cmp sahf das hlt scas sar (bad) (bad) (bad) (bad) and lcall jb test test adc cmp adc ljmp (bad) aas decb mov std int outsb and lods mov jecxz (bad) (bad) (bad) call cmp push pop jo leave in adc sub ds lods sbb or dec jge divb andb popf add cltd aam jne lret (bad) (bad) (bad) (bad) cmp xchg negl adc test in leave add mov push and cli incl leave outsb xor test (bad) (bad) lcall cltd mov mov fcoms in mov out test (bad) (bad) cmp and jb or sbb scas jmp sub push fs test xor das pop cmc int3 mov push test push scas lods dec ja (bad) (bad) lcall outsb daa and adc or into ja jbe loope mov cld ds lcall push jbe jmp lahf mov push (bad) call cmp jae xchg pop fwait push insl mov insl (bad) cmp mov xchg rcll (bad) (bad) cmp fstps outsl xchg sub iret outsb (bad) (bad) (bad) push push jns xlat test sahf ds sbb repnz sub cmp loop adc xchg inc scas ficompl cmp lods testl or clc (bad) jg mov dec dec icebp out mov push dec repnz (bad) jns (bad) (bad) incl insb jae push imul pop or imul sbb decl xor (bad) jo push inc idivl lods sbb ds out push or mov adc pop cwtl push sar push xor cld dec fmul inc insb inc stos rolb inc adc gs sar add xchg aam dec xor mov or (bad) pop or aas xlat inc inc jne mov call and sub data16 sbb pop cmp enter fistp addr16 (bad) ljmp scas inc cmp add test mov aas es xchg loopne lock ja (bad) decl ljmp mov (bad) or (bad) fnop lcall sbb ss jae nop mov inc push jl ret cli (bad) call dec lods mov or cmp (bad) je std mov (bad) (bad) jmp push jmp pusha ret mov or arpl out aam cmp dec test xchg stc mov jge hlt add pop ss (bad) (bad) call fmul ja jecxz daa push out pop push push mov jne and jp xchg (bad) mull lcall (bad) push addr16 and sbb or (bad) (bad) sbb (bad) (bad) push in jge daa push push mov popa or mov rcrb mov xchg fildll ljmp data16 js add cmpb aaa ret ljmp enter repz outsl nop in scas mov (bad) ljmp ljmp inc sti dec in cwtl rcrb repnz (bad) (bad) call xor lret lret push jp repnz jecxz and fisubl push inc cli lcall add in fmuls mov addb cwtl stos jp sbb push sub push xor shll es loopne mov (bad) lcall mov cmp addr16 stos mov push decb push out xchg push shrb add mov jg or (bad) and fwait je mov xchg sti lcall popa addr16 fisubr sbb mov jg and movsb pop pop sub add int3 sbbl (bad) dec push sbb (bad) and imul js or push xchg (bad) (bad) fisub fildll lds imul stos push popf lods pop pop sub mov aas mov dec iret adc mov mov je jb xor inc loopne cmp (bad) (bad) decl jecxz and test aaa ss lock push fwait ja adc movsl pop (bad) aas add inc mov lcall jg in sub (bad) push or jecxz stc pop (bad) movb mov jae (bad) ljmp daa push test mov mov ljmp shll je int push mov cmp mov sub mov clc loopne call mov dec pop or clc adc (bad) fisttp push add lock xor (bad) (bad) jmp dec (bad) pop ret test popa sub jge mov adc (bad) cmp sbb lcall lcall addb loopne dec loop (bad) ljmp lock push and adc xchg sub arpl (bad) (bad) out xchg dec jp les xchg inc xchg and or stos lahf fs pushl mov and std cmpsb mov dec add jo (bad) movsl int loope mov adc mov pushl jb (bad) shr clc movsb mov out and mov sarb sub fmull fdivs loop adc loopne mov test aas inc (bad) frstor leave loop loop adc lock (bad) cmp mov push and lret mov sbb mov xchg mov insb xchg imul and in aad hlt or sarb and fldcw loop aas and dec xor mov das and xchg fisubrl ljmp xchg rcrb imul mov (bad) decl (bad) cmc xchg jae rcrb test stos mov and dec sub in in punpckhdq jl faddl std mov arpl pusha xor and loopew decl mov popf push mov xchg cmp jmp in (bad) jg loope mov adc scas dec pop and push sbb (bad) (bad) scas movsl rorl aaa jnp jg shrb daa loope sub cmpsl jnp cmp mov pop ret pop inc inc or (bad) (bad) decl lcall sub inc jns jae std inc in adc xor mov outsb and in mov push mov sbbl mov mul (bad) (bad) aas xor fyl2xp1 mov inc out pushf fdivp dec mov cmpsl call cmp push mov int xor inc repnz jo add xchg jp xchg jns popf mov call push out mov pop int3 or cmp push call std call cmp cmp das pop push cld push and jns and lods push scas mov nop or (bad) dec hlt adc loop movl adc cmpsl mov push sbb and lahf mov mov cmp xor outsl jle pop (bad) push fdivrp call xor call sub pop pop lock iret pusha arpl pop (bad) (bad) (bad) jmp lock jnp subl (bad) adc dec adc inc lahf or std xor cmp xchg ljmp lods mov dec push mov push xchg mov mov (bad) (bad) jmp rclb das test dec xchg dec pop mov add outsb pop int3 (bad) aas sti jmp cmpsl jg scas lret loop mov pop lods mov leave lods sbb int (bad) frstor movsb mov int push xor fnstenv incl inc pop (bad) pop mov fidivr test (bad) mov and mov enter xchg jbe clc lea add (bad) (bad) (bad) decl dec mov pop test sbb xchg mov mov movsb scas jo,pn out xchg (bad) jmp dec sbb or std lock mov mov (bad) (bad) (bad) jnp cmp xchg in scas lds sbb xor jbe sub dec ficomp into and (bad) mov sbb jge les adc (bad) icebp and fist divl push sbb fldcw dec imul outsl pop inc push jg pushl mov xlat mov pop cmp ss xchg (bad) (bad) (bad) decl jle (bad) pop imul scas (bad) mov mov and (bad) dec cmpsl mov mov pop cmpsl and cmpsb or call cmp sub out ret iret xchg push in inc and jns (bad) (bad) lcall test nop sub iret stos (bad) mov aam xlat sub mov mov test pop int aaa je pop mov (bad) decl clc lahf mov push out icebp in aam xchg xchg (bad) (bad) scas mov mov mov (bad) ffreep jmp in std unpcklps stos mov out and cmp pop leave pmulhw xor pop hlt xchg push stos pop and in jo scas fldl and call pusha sti lcall sahf cli mov sub clc scas clc lcall movsl (bad) fdivs jb mov outsb arpl das fcos (bad) call jg aas rorb sahf jno test sub (bad) cs xchg (bad) (bad) jmp fs sbb sbb out mov push ja fstpl sub aaa push out mov mov out pop lock (bad) fildll loope ja shlb scas fwait insl mov fdivr jmp fadds inc notl pusha out ss mov int sahf fdivrl (bad) (bad) pushl and mov mov fdivr push ja adc sub push decl test movsl xor out into js jno in inc js pop dec cld mov (bad) fcomip cmp mov mov decl sarb call adc jmp (bad) dec imul push (bad) fs inc fcoms loopne imul jecxz scas fcmove and and jle sub (bad) incl add mov hlt and mov lds push xchg cmp mov jge pop into (bad) and decl mov push push cmp fsubp repnz sbb outsl or cmp xchg adc (bad) incl fsubs ror adc push insl rcrl mov ret mov xchg test lods add cmpsl popa addb cmpsl adc jecxz mov push les (bad) ljmp and shrb and or mov add xor arpl fcomip (bad) fnstenv in scas push xlat addb xchg push sbb fstpt es lcall bound arpl mov mov (bad) std pushl cwtl xchg iret mov mov imul push (bad) (bad) (bad) lcall dec mov movsl imul inc lds data16 cmp (bad) cmp xchg (bad) lcall add (bad) outsb dec and mov or outsb dec pop (bad) (bad) call lods mov mov xlat movl push (bad) aaa mov nop inc out mul jne div fildl jno outsl clc jg (bad) mov xor sahf call fdivrl add (bad) (bad) push arpl (bad) pop decl xor push cli mov dec adc xor out add mov cmp pop nop jmp lea and cmp (bad) (bad) pushl fsubrl dec push in inc mov cmp clc mov inc iret cmpsl mov pushl leave lds (bad) out adc cmpsb sbbl pop adc rolb ja mov inc gs daa cli mov iret test (bad) imul (bad) jae jg loop pop jle and enter xchg shrl push mov xlat icebp sub pop and mov sub cld (bad) pushl xor test mov out es (bad) (bad) dec push xor cmp in jge iret sbb cltd syscall pop out inc (bad) (bad) jg ret pmaxsw rcl mov into sahf les ret xchg or pushl jmp sub jecxz (bad) xor movsb iret std xchg (bad) (bad) mov sbb mov lods pop xchg sub adc (bad) rcrb push stc idiv (bad) cmpsl lock std mulb js arpl mov xchg jmp (bad) (bad) aas fwait shrb cmp and mov mov inc stos or adc (bad) (bad) incl mov sti add mov xchg mov push dec and (bad) ljmp cmp jns insb dec fbstp aam fwait inc cmp (bad) out sti push popa (bad) (bad) mov aaa mov jnp pop mov mov ds aas test (bad) and pushl cmp addr16 sub push mov inc stc hlt mov (bad) (bad) (bad) jmp insl jno pop (bad) lahf cmpsb dec and mov in jecxz add in scas xor cmc das test jbe stos movsb and (bad) (bad) (bad) pushl test movsl cmp sahf sub shlb repnz mov or repnz push xor jle into in hlt push cmc adc mov mov xor (bad) (bad) cli or jecxz cld mull fistpl push mov out pusha mov push or and mov neg sub mov or adc mov cmp pop fdivs inc jo or (bad) adc out inc pusha sub in lods popf mov das cli call add insl dec dec cmc cmp push jmp jbe mov (bad) out scas or lcall add pop jp push mov fcomip test incb out mov or add xchg dec test xchg or (bad) decl mov sub (bad) xor jg movsl stos inc in jnp jge add (bad) (bad) (bad) (bad) mov push xchg cwtl push and jmp rcll lahf (bad) cmp pop inc ds or xchg xchg loope loopne mov pop xor inc pop popl test or out mov (bad) decl xor xchg nop mov xchg call add pop roll ss mov stos mov mov pop nop xor (bad) (bad) pushl nop decl xchg mov mov cmpl clc pop lock decl int3 cs test sbb inc jne add mul adc aad add aam shl js cmp aas mov (bad) pop call cld pushl ficoml aaa jge add int3 jl out inc or mov imul test jo ffreep leave gs xchg popf fbstp (bad) (bad) (bad) jmp xor pop adc mov sub and dec pop cmpsl dec push mov sar loop xor xchg sub dec jle pushf and (bad) (bad) incl and out jl ror ret data16 xor movsl push mov out clc ljmp clc es mov jmp xchg sbb (bad) incl lea std ret push mov out loop xchg inc (bad) lods sar ljmp jno adcl lret sub fistl mov mov xlat ret aas push xlat sbbl mov xorl (bad) (bad) dec pop adc loope mov lock fwait cmp cmp movsb (bad) xor sbb and std imul jp (bad) mov (bad) xor xchg std dec xor test (bad) hlt test pop lods pusha xchg pushf sbb or and add add lock insb mov mov sub jmp insb mov (bad) (bad) out fsub fidivl or out adc xlat loope movsl ljmp pop aam or xor (bad) aas xor sti dec enter std in mov mov add jg clc mov rol adc inc pop out dec xor cmp ret push (bad) lcall mulb fmul movsl loope jbe mov push sbb (bad) out (bad) (bad) (bad) call orl es mov and fwait test xor int3 add shr fcomip idiv test sbb movsl jle xchg cmp loopne cs and push jmp pushf ret std jb loope mov mov lret pusha and mov in lock jecxz imul mov outsl ret dec xor fs (bad) (bad) in jb lret jge (bad) mov adc iret pusha dec sahf (bad) aam (bad) adc jne (bad) (bad) lcall ss int3 cltd sub cmp mov fadds into clc inc or push adc (bad) repz inc addr16 mov xchg in bound pusha je mov (bad) (bad) decl xchg cld int xchg jmp test out lcall mov fs cmp dec xchg add into and loop clc cmp mov (bad) call sbb sub xor (bad) mov mov inc (bad) cld adc hlt lcall test cmp in dec pop ja cmp mov (bad) (bad) mov shl outsl sbb or xor les lcall js cld (bad) (bad) lcall mov bound shr sbb push or dec in movsl and lcall dec dec ret push rcll nop std xchg lds (bad) fisttpl mov subb cmp push into out push dec add int xor (bad) loopne rcrl and or mov mov into imul leave fwait add (bad) (bad) lcall dec pop test jle push xchg js stos leave in (bad) lock cli (bad) out clc bound adc movsl mov aas mov (bad) (bad) ljmp ss pop scas cld xchg mov jne xchg sar subl cwtl in cmp scas dec aad dec loopne aam es add mov gs (bad) call je mov data16 div loope test jmp push ja mov sbb incl repnz scas mov cmp mov int stc outsl cmp add ljmp test icebp scas scas das push fwait add cs push cmp cmp add incl outsb movsb stos inc xchg mov mov cmp (bad) jg push lods fstl sub roll ffreep sbb in sub (bad) (bad) (bad) pushl dec mov repnz or (bad) pop call (bad) (bad) call and push jmp push sub (bad) sbb pop lahf mov into (bad) dec stos add jg adcb adc pop insl and push dec lret sbb mov icebp jp sbb add pop jns add int3 into movsb jb dec ljmp fsubl clc jg mov mov (bad) xor stos push mov loopne (bad) decl inc or mov add sub aas xchg xor ds decl aas cmp insb out lods push hlt fs addr16 jb or dec movsb imul xchg inc mov call xchg bound mov jae add hlt call sub cmp push ljmp (bad) ljmp and mov mov sub test ret (bad) (bad) dec ret sbb inc add iret stos xchg inc fidivr jns dec adc sbb (bad) (bad) lcall sbb fmull dec aaa out lret cmp je movsl fiadd inc inc repnz (bad) inc mov xor sbb inc int adc fdivrp into mov and lea (bad) jg pop jae push xchg out test pop xchg adc fs jae jmp mov sub adc dec dec popf pop addb out adc dec movsb sbb pop mov add push sbb loop ror or and push outsl cwtl or or (bad) icebp and jecxz cmc fsubrl or out xlat sbb push in inc mov cld in fidiv ljmp cmp clc or sahf adc aas (bad) or mov jo pop inc add mov adc xchg (bad) std jecxz jnp ljmp mov scas test jb loop (bad) call mov or shrb (bad) mov addb leave mov pop jnp stos jg xlat adc insl mov mov movsb (bad) (bad) decl inc std out adc ljmp jl mov gs mov call mov adc inc int3 mov shrl lods xor mov jns pop mov les cmpsb pop xchg cli leave sub das dec sar (bad) pushl enter xchg sub es or js mov pushl cmp jle ja mov enter mov lds popa adc sbb sahf pop fsubrs enter push sub enter ljmp adc cmpsb test scas dec sub mov cmpsb push stos (bad) (bad) (bad) lcall (bad) bound inc and mov call inc (bad) fidivr (bad) decl cmpsl and leave ja (bad) mov cmp mov pop lret (bad) decl outsl idivb mov dec dec ret xor decb mov adc call bound int xchg int pop and (bad) (bad) jg scas in imull sub dec gs xchg sub jle mov xchg pop xor popf cmp cmpsb pop push add jmp cmpb insl lcall inc cld dec movsb loopne or mov scas out lea pop jno loope (bad) pushl sub mov rcrl lret dec imul pop push pusha cmpsb lea inc add cld pushl push jbe jp cmp insl add and ljmp imulb or cmp imul mov enter and pushf sbb mov aas adc add xchg push leave jae leave xor add (bad) jmp clc inc test mov cltd and mov andb lahf add decl jp mov sbbl incl sbb es mov mov add in (bad) cld sbb pop dec aaa mov aad js dec jl rcrl mov popf es (bad) decl js sub fnstenv lahf add aas inc inc aaa (bad) (bad) (bad) lcall (bad) mov imul nop (bad) cwtd pop xchg mov pop (bad) mov aad stc mov mov or sar pop cmc movsl xor push loopne clc push popa cwtl jbe fdivl jl (bad) mov adc push movsb or mov dec (bad) (bad) decl adc jecxz xbegin jo jp jle sub fimul (bad) (bad) (bad) (bad) fucomi mov xchg bound cld xor adc xor push jbe mov lcall cmc cs std lcall (bad) jbe inc mov dec cltd mov push (bad) jg and lods cmp pop pop hlt test insl add icebp (bad) (bad) sti pop insb nop pop ret mov inc bound add out ror pop cmc (bad) (bad) fimul sub sti sbb jbe test movsb mov (bad) (bad) pushl sub sbb insb (bad) and repnz arpl clc out rcll pop jecxz mov ds fisubrl push ja xor sahf pop int mov (bad) (bad) (bad) fnsave bound faddl mov xor xor int3 inc mov and (bad) aas repnz sub aam das pop mov in and shrb (bad) mov pop icebp adc cmp movsl cld ljmp mov xchg call pop lret loop xchg fiadd adc xor (bad) (bad) (bad) decl add push pop dec pop cmpsb jno sbb sarb frstor (bad) mov scas dec mov call push xchg pop jp mov call clc (bad) (bad) decl jbe (bad) pusha or push incb lods push push mov sub (bad) and push ljmp fisttpll lea pusha fsubrl mov pusha loopne std sub and pop andl xor cmp leave aad hlt mov jg mov cmp (bad) lcall inc sub cld pushf sbb in sub loope repnz sub and add push andl ret (bad) (bad) lcall rol or mov xor leave addl cld sbb decl dec aas mov cld inc aaa dec rorl fistpl (bad) (bad) mov ljmp and or aam jns mov incl aad cmpsl imul incl inc push jno andb mov lock loop (bad) jbe adc add popf mov inc sub dec dec mov mov (bad) or mov and cmp mov (bad) mov mov cli ljmp mov lret push sbb sti cmc movl cld mov jns push outsl push lret mov ljmp aaa lcall dec insb xchg push popf arpl mov sar js lret cs xchg push dec jne test lds (bad) (bad) (bad) pushl mov movsl push cmp test scas sti (bad) cmc and jle xorl scas icebp mov iret pop popa in cmp cmpsl data16 push (bad) (bad) (bad) aas pop mov dec sub sbb mov out sti jmp jg (bad) lcall pop mov ret jp orb or rcll movsl lahf ljmp test pushf aam repz inc pop (bad) call cmpsb ret sti ljmp pushf fmull mov push sbb mov cmp xchg and xchg icebp leave mov ror imul icebp xchg incl xor push dec dec inc mov jle (bad) (bad) fnstsw std and sahf js cmpsl cltd lds nop test add mov (bad) mov fisubr jg cmp int3 loope iret push outsb adc jge stc dec adc xor mov mov sub sarb (bad) jmp das icebp in inc inc lret addr16 xlat push sbb cltd mov xor popf push (bad) decl sahf fiaddl aaa out int pop xchg ret push movsl nop stos es (bad) (bad) (bad) (bad) fildll insl lcall rolb xlat (bad) dec push adc test dec bound mov adc inc aaa push and dec push mov cmp (bad) (bad) (bad) cli js in fistp pop lahf mov js add lods in add push rcrb jmp (bad) fmull leave adc dec fstl imul xchg sub int jmp addr16 mov imulb les xchg iret (bad) mov mov sub sti cmc int3 outsl fistpll out jge cmp (bad) (bad) (bad) jmp add (bad) sbb lods sbb ret and in mov call hlt jmp dec or loope into mov fmul lods mov sbb cld dec adc lea mov mov mov imulb lcall call sbb or pusha inc xchg popa fucomp sti loopne jb sub pop lcall cmpsb fnsave neg (bad) (bad) xor lods jle add (bad) (bad) std sub js pop mov pop (bad) loope int3 cmpsb push inc add lock aad ljmp adc negl test mov popa adc (bad) dec lea mul lods mov test pop in (bad) or mov mov (bad) ljmp das pop leave addl or xor popa xchg fcomps fidivr arpl shlb mov (bad) decl add and scas pusha stos add xor int3 sub loope add (bad) inc pop inc or aaa imul nop sub mov decl ret fidivrl jns sbb ror sarb sar (bad) (bad) (bad) out loopne xchg mov orb in in (bad) mov icebp nop (bad) (bad) aas mov cmc jne add enter inc mov (bad) (bad) (bad) decl xchg xor cli outsl xchg mov mov ret xor push rcll sub mov cmp xor cld (bad) (bad) (bad) incl push lcall (bad) fndisi(8087 sbb push push out movb (bad) (bad) incl into jo out mov ds cli lret push outsl lret (bad) jmp (bad) (bad) (bad) decl mov insb (bad) mov (bad) lret ljmp movsl and mov jecxz sar ficom jp nop mov push in aas std adc pop adc (bad) jg fstpt and sub je into out (bad) (bad) mov push pop push jle xchg movb (bad) xor popf or loope add pop daa ret faddl scas fucomp (bad) (bad) (bad) (bad) cmp lock pop je inc cmp adc sub xor and mov aam xchg daa (bad) (bad) lcall sbb popl pop (bad) enter or mov aam subl fidivl add pop (bad) xchg mov pusha xchg mov cmp cli call cld pop test xor sub lods lds pop je je cwtl dec shrb aaa dec sbb mov inc scas (bad) (bad) lcall clc nop ds inc cmc scas xor jle daa or (bad) mov not cmp mov cmpb and push cmp add adc fs inc dec repnz xchg (bad) repz push ficoml int3 lods fidivr nop pop xchg xchg sbb mov (bad) pushl outsl in test (bad) icebp cmp pop jbe (bad) (bad) (bad) (bad) cmp aad dec aaa adc adc mov into sbb jbe push cmpsb repnz pop stc es mov cmpl rorl ljmp rcrb test (bad) mov fldl adc gs lods (bad) mov cwtl (bad) stc lahf dec sbb (bad) leave imul (bad) (bad) lcall fstpt mov push jns sub addr16 in clc push (bad) or je fwait mov imulb xor adc lock mov je bound lock mov jle cmp xchg pusha mov (bad) xchg adc popf aaa int insl int xchg ficoml xchg adc es lods jns cli sbb pop (bad) xor daa mov pop cmp or dec xchg mov dec jp sahf xchg mov push (bad) pushl mov test jne in loop popa paddw inc les mov sbbl (bad) (bad) jg push fcmovu stos fwait pop dec inc push and jge imul adc or (bad) (bad) (bad) ljmp fcoms jecxz out test dec icebp (bad) or test add es mov jl or add (bad) (bad) call (bad) fiadd fyl2x jl lods adc mov mov gs (bad) decl lahf ja lods xchg (bad) sti jns mov leave jg (bad) lcall cli loope jne sbb xor int jp fxch sub (bad) xor push lret ret (bad) ljmp loop xchg (bad) clc mov cmpsl jge sub sub xchg inc lds mov or xor jp test pop nop mov incb (bad) (bad) (bad) jg push push repz push rorb push xor pushf stos mov push jae mov fdivr (bad) dec xchg cmp ret insl gs pusha cmpsb xchg out inc sbb adc ds (bad) (bad) (bad) js mov add or pop mov xchg scas push dec mov or (bad) jg test add dec pop mov xlat dec scas cwtl sbb (bad) (bad) incl or inc loopne mov mov loop cwtl jl push mov dec ret mov mov (bad) (bad) lcall test call lods dec sub or inc sbb xchg (bad) (bad) jmp adc int jae sbb mov jnp es fcmovb inc sub insb xchg mov icebp aas repnz leave xor push mov cld push sar xchg rcl ret dec std sbb (bad) ljmp lds xor in and adc js sbb out inc repnz mov mov dec movaps imul sub rcrb pop test (bad) (bad) fmull popa lea scas add loop sub sar dec xchg jle lds out mov ret sbb lret jge pop leave (bad) pushl std div pop xchg and and lock das and negl add adc pop iret daa enter xchg xor jb mov scas icebp test push mov add (bad) aas xor jbe push or pop sub mov imull loopne inc push and pop cld (bad) (bad) fistpl (bad) orb bound mov mov ficomp dec jmp pop mov lahf hlt (bad) jg fwait ds pop fsubrl inc movsl (bad) mov (bad) fsub cmp (bad) mov test into lcall sub (bad) mov jno xor xor and cmp fucomip scas mov sub (bad) ljmp mov push stos fwait std push sub loopne insb cmp or xchg js xor movsb decb cwtl mov mov adc pushw (bad) lcall aaa mov dec mov pop mov sbb sbb mov adc std add adcl ljmp xor inc cli out mov dec sbb aas cmpsl insb enter pop adc stos (bad) (bad) (bad) jmp subb push jbe cvttps2pi and push xlat jbe mov and (bad) (bad) lcall dec pop mov out sbb mov cmp icebp xchg test cld (bad) (bad) call sbb lret enter push (bad) lods pop lcall push sbb dec stos dec das (bad) (bad) decl lds arpl lods dec xchg fidivl xchg sbb (bad) jmp movsl scas sbb cmp insb xor leave pop test in xlat lods sahf decl je pusha jle mov fbld jl adc cmpl xor sub (bad) (bad) fistl mov fidiv pop inc and xchg adc idiv inc pusha (bad) (bad) jg fist inc or ljmp and and mov push (bad) (bad) (bad) jmp xchg xchg cmp and sub adc xchg fisubl (bad) jb push mov lret int test inc sbb xchg push ficoml icebp ds (bad) (bad) in fldt jge jbe mov xor lcall add add (bad) (bad) (bad) jg rcll mov adc and sbb mov dec xor jbe cmpsb add (bad) (bad) inc pop or jbe (bad) xchg rorl add cmp stos pop or (bad) jmp punpckldq jge dec bound sbb imul mov mov xchg scas jnp xlat xor mov add cli push jl rcrl cli mov dec cwtl fcomps int3 stos add jmp xchg pop mov cmp xchg lods insl incl vminsd int3 adc ss add jbe inc inc push inc cmc xchg push pop (bad) (bad) out js pop loope addr16 sbb lock stos movsb sbbl push (bad) (bad) (bad) ljmp out (bad) mov adc mov pusha mov mov cmpl aas mov lds push (bad) sti mov ret shrb mov outsl cli mov scas fcmovb mov inc mov xchg mov add cmp cmp jp lret (bad) and sbb or ret sbb xchg test mov js sub mov lcall jl es or cmpsl jnp inc dec cmp pushf mov incl cmp stos leave scas sti (bad) repnz enter (bad) (bad) pushl push mov testl xchg rcr out repz push fldcw std sbb dec jecxz mov dec add sub push sub es and sbb ret cli and pusha loop sub adc sbb (bad) jg ljmp je mov add mov jge jo (bad) (bad) jg ret mov cmp rsm mov shrl mov inc pop clc jg incl and mov push add iret cmp fwait pop repnz mov es push out test push (bad) (bad) (bad) incl out int std (bad) jbe xor in and in scas xchg cmp arpl imul cli ljmp flds add out insb inc add addl dec (bad) lcall pusha cwtl shl or int3 ja jge pop inc cmp (bad) (bad) (bad) decl jns outsb push rorb in push jl test lret push test add popf les inc popa cmp (bad) (bad) call pop push xchg test xor xchg cmp ds outsl cli clc (bad) (bad) jmp iret mov dec aaa adc add ja scas sub loop cmp fwait lods push (bad) (bad) decl jno es sbb or mov orl test jmp fcoml jns lss cmp jle xchg subps mov cli dec push dec (bad) fcomip jg out jo test pop dec rorl pusha inc add sub cmpsl inc fmul loop (bad) jmp inc adc in mov inc fisub cmp lcall mov and xor call into jns inc xor mov ret stc or out pushf pushf adc (bad) push xor jmp xchg lret xchg lods call flds and dec fistl test cli out adc jmp je jmp pop aaa roll lcall jns xchg mov jns incl lcall sub xor (bad) fwait test mov xlat cmp (bad) (bad) (bad) call mov rol and rolb jne popf in aad sbb scas or cmp rcll pop sbb pop xor fcomip cmpl or xchg popa mov test sub push push mov jle sub (bad) jl incl cmp (bad) fcos gs xchg loop (bad) divb dec lea imul jle and (bad) inc aas jp in int movsl movsb repnz fbld fsubrl (bad) pop divb or push incb lods ror jne push cmp int fsub (bad) (bad) (bad) pushl mov add enter inc adc lea mov js daa jmp cmpl (bad) fisttpll jp lret inc cmpsb dec sub (bad) pop rcrl data16 or (bad) (bad) jmp xor adc xchg sti push and std pusha mov and inc pop adc jl mov ret pop sub fwait (bad) and add jae xor (bad) leave popa aaa (bad) (bad) (bad) call push add psrlq lods mov lods inc cmp and (bad) (bad) ja jmp cmp dec pop imul or jl fistp and dec cmp and add xchg repz (bad) jmp adc int adc mov pop aad or pop mov pushl decl fdivrs dec addr16 mov call pop sub les stos jne inc nop push cwtl lea mov pop mov ljmp sbb and mull sub jae ds push (bad) (bad) (bad) lcall pop loop ja test hlt out lcall add out fdivrl dec rclb icebp adc dec incl dec (bad) mov pushf jnp lea jb aam sbb std push iret xchg mov (bad) call fcomps cwtl in mov xchg inc mov add fisubrl leave (bad) stos mov dec cld pushl push push pop fsub jb out inc scas fistl test (bad) jmp or das inc out dec xchg outsl in push bound ljmp out xchg rorb cmpsl dec jg xchg int outsl in (bad) call iret xor add xor test test nop icebp push mov (bad) fildll ret inc ljmp mov adc clc (bad) fwait or (bad) cmp (bad) sub xchg adc out pop pop pop xor ljmp dec fldcw push movl inc call ljmp xor fistl out jnp xchg mov out test xor and std add outsl cli fisttp (bad) (bad) mov mov mov sbb sub mov scas aad (bad) push jbe sbb and imul add (bad) sti adc (bad) (bad) (bad) jg pop aam lcall xor sub adc cli xchg lret jnp movswl fwait (bad) cmp sahf inc ret inc insb jmp inc adc mov or mov out mov mov (bad) (bad) fild mov icebp jecxz mov pop add mov in push dec bound (bad) jg test sarb stos mov out or xor movsl mov xchg dec mov fisubr inc (bad) outsb cmp (bad) enter (bad) ljmp or addr16 sbb ret inc flds shr dec lods mov sti sub and jle (bad) lcall (bad) jmp mov inc sti test fs xchg or sub pusha mov lods fxam inc ja push (bad) (bad) ljmp push inc pop cmp enter mov adc lahf aad in lock (bad) jmp mov out das rorl es aaa enter cmp es sbb (bad) lcall dec add jnp jns pop mov fwait into (bad) jecxz add sti (bad) (bad) aas adc mov dec loopne mov mov cs clc lcall pop aas adc mov or cmp (bad) xor jle inc sub sub arpl test bound decl imul (bad) (bad) dec outsb leave sub sbb sub push xor or or dec lds lret in and das xchg aam mov test (bad) (bad) (bad) incl and inc loop incb xor mov icebp jno movsl cmp cmpsl cld sbb mov (bad) ljmp cli mov aaa psubq lret add (bad) mov aas pop mov aad xor std fdiv push movsb mov jl pushl cmp ret xor inc inc mov or mov and sub (bad) (bad) incl cld add popf dec mov xor loope push mov popf (bad) stos mov sar xor rclb int js in loope test cwtl sbb lods popf (bad) sbb test fistl jp xor mov adc sbb cli jmp rcr mov arpl jle mov sti adc or (bad) jmp cwtl shlb mov aad imul mov or daa cmp sbb pop jae mov das jae pusha add inc stos mov jle add (bad) (bad) jg jnp jecxz jp ret xchg push xchg push cmp idiv dec vminps push mov (bad) (bad) lcall jge mov sti inc pop int3 out test arpl mov xchg (bad) in rcrb pop mov lcall jo mov push pop decl ret adc mov pushl adc mov jecxz xchg das je mov xchg dec pop sarb sbb repz fdivrp stc pusha fsubs dec (bad) jnp sub cmp push mov add sub cld jmp popf stos sbb mov (bad) pop add (bad) (bad) (bad) call jno mov aas or cmp fucomi gs mov jp push adc jmp mov into jne jae or push inc stos fsubr outsb push (bad) (bad) jmp sub popf inc insb mov jle or dec addr16 cmp int3 sbb decl pushl sub jne mov cmp add icebp je and (bad) xchg out stos cmc adc lods adc bound rolb xchg es and sahf movsb sbb mov setg mov adc adc (bad) push mov mov push out into mov lcall movl jne stos mov and enter (bad) decl add or or xchg inc adc lds pop loope cli xchg mov inc call or aad jno mov (bad) (bad) (bad) pushl aam popa inc jo push inc cmpsb adc movsl pop pop nop cmp je xor dec sub adc xchg (bad) ljmp inc stos mov js or pop jnp hlt sub sbb (bad) (bad) call add and xor repz sbb mov idivb push pop incl aas (bad) ss xchg mov lea stc sbb inc orl sub mov insb inc inc in push cmp or (bad) (bad) incl (bad) mov lcall pop loope mov mov push (bad) fadds mov adc mov daa or or ljmp xor or push sti dec divb mov pusha int3 jmp aam (bad) (bad) mov adc lret push test das xor mov inc inc or clc pop (bad) (bad) (bad) inc (bad) ds jmp jge out scas mov adc and add ret pop lcall rcll aaa std sarl adc shlb out mov pop pop adc leave sub shll (bad) cmpsl aam call cltd push xchg or inc jp dec jnp mov sub dec clc (bad) (bad) jmp leave adc jo call or adc mov or mov ljmp in rol dec mov nop add (bad) lods mov stc insl inc sbb stos or lcall mov cmp (bad) gs mov nop call outsl pop jo sub xchg mov ja lahf scas xor daa sub mov mov cld fcos sbb mov in mov mov or sbb pushf mov push lret test lcall in (bad) pop xor cld (bad) out lcall xor andb cltd nop jmp decl and mov hlt xlat insb je jno (bad) cmp add fistpll cmp imul inc jg sti pusha mov xchg lods push stos popf aam push repz jg adc xlat insl mov aaa add adc inc add scas insl and (bad) lcall lea xchg in and fs nop fnstsw fldenv xchg dec sub fild out mov push and pop ficoml std (bad) call cld fdivrs pop aam out nop (bad) aad repnz scas sbb (bad) lcall lock sub testb outsl ds mov xor loop and lods cli mov clc shl and mov ljmp adc jbe mov mov int3 je orb xchg loopne and mov push ljmp int3 dec mov push ss (bad) lcall adc lods stos pop fisub lds push xor pop xchg mov mov into loope push pusha and xchg jno mov or mov aaa add (bad) adc mov mov clc (bad) (bad) dec jae adc loope test (bad) mov dec ret lods fcmovbe jle sub xor outsl lock sbb loope incl rclb cld mov aas gs (bad) (bad) (bad) sti add cmp repnz movsl xchg lcall ljmp and (bad) (bad) decl std cli out inc add and cmp pushf inc (bad) (bad) sbb (bad) (bad) (bad) jg insl inc inc cli pop int jge ds inc and mov sti lcall (bad) int3 push cmp (bad) (bad) pushl ffreep xchg pop xchg loop xor fcmovnb sub push xchg cmp aaa std (bad) jg xchg dec mov fcompl sbb mov cli lods jb (bad) (bad) (bad) incl jbe xor into movsl popa jnp daa mov xchg cwtl (bad) cmp jmp add rorl fs movsl mov in mov mov (bad) decl imul sar cmpsl dec aad dec mov stos xchg dec xchg jp jp push enter (bad) cmp ljmp nop xchg dec cmp jge jbe insl pop cltd xchg aad fsts std (bad) jmp (bad) stos lea sbb jle addl ficoml push adc adc pop lock shrl popf gs je or repnz sub (bad) pusha mov (bad) incl loopne mov jg xchg jb sbb loop cmp pop lods jp cli or mov mov movsl addr16 adc inc mov decl inc xchg xlat or in je test mov jg (bad) (bad) incl dec (bad) pop dec (bad) xchg sahf jecxz add arpl (bad) in cltd incl mov sub xor stos add stos into mov orl inc mov cmp xchg fs sbb rcrb xor lcall pop lds or inc test sbb add (bad) (bad) std mov and add ret push cmp mov jo and cmp mov and xchg aad outsb mov inc scas (bad) (bad) (bad) jg das sub adc xchg aam jl jl pop mov stc mov lret insl out test jnp cmp xor pop or cmp sub in test xchg stos cmp ret js jae test in adc sub xchg and mov call mov inc aad add lcall jmp int hlt add cmp (bad) (bad) (bad) mov ror inc enter shlb fldcw adc and lret fwait dec repnz lcall ret jge cmp pop push je fldt add (bad) inc push mov lahf mov lds (bad) call mov mov outsl aaa and mov add out loop jle push add incl test dec loop push mov or (bad) mov push insb add aam (bad) jmp lea pop out or push mov xchg xchg stos and (bad) (bad) (bad) call adc inc rcrb shrb mov addr16 jno push jae loope sub jg push enter add stos cld jo jbe jecxz cmpsb imul (bad) ljmp lret mov insl adc mov rcr push mov inc mov fadds xchg lods xor push adc mov jae jbe sub (bad) cltd pop or jbe aaa xor mov push push add idivl (bad) (bad) call xchg xor daa jecxz push in dec pop ret sbb mov mov cltd add cmpsb pop inc leave cmp popf in pop xor lcall aaa jmp cli pushf inc fstps pop aad cld add (bad) (bad) lcall or cmc outsb out mov adc inc inc xchg movsb imul call adc fdivr shrl in das es (bad) (bad) mov fmull sarl test xor fnop ja push in aas mov mov jno and dec or jmp xchg lds (bad) (bad) jg cli inc inc js push dec mov mov inc (bad) jbe and (bad) jle test (bad) jg jbe dec ljmp (bad) aad orl out mov xchg lcall or pop cltd ret pop pusha loop out (bad) (bad) jmp pop xchg jb scas (bad) mov and adc pop das aas stos aam cmp hlt push (bad) call sbb pusha outsl je mov push pop rcll stc std mov fdivr stc fst enter jnp scas mov into fcoms es lods sub outsb cmp mov movsl cmp inc ret sahf (bad) cmp (bad) (bad) aas dec and les or mov aas mov jb mov ret int ljmp sar cmc icebp add xchg mov iret mov dec jno jo rolb (bad) or out ss arpl jl rorl (bad) (bad) (bad) pushl cltd pop fdivs mov pop insb (bad) arpl xchg cmpsb cmp pushf pop pop inc inc mov pop mov sbb inc push imul xor (bad) lcall mov xor mov mov aas add push or push lret mov cmp jns xlat mov pop in imul test mov dec inc stc popf push sub sbb lcall ljmp xchg ds out cmp push sbb sahf jle (bad) daa pop adc ljmp and bswap ds mov push xor sub pushl cli xor js imul cmpsl mov (bad) ljmp jmp push sbb xchg cld and test add (bad) lcall xor inc (bad) fidivrl jo dec and mov insl inc add (bad) (bad) jg lods fiadd and add adc fistpl mov stos test std (bad) (bad) (bad) decl nop mul and xor sbb fwait (bad) dec push or sub inc (bad) (bad) call cwtl mov fwait mov sarl pop add daa fistp (bad) (bad) inc push pop xchg outsl pop loopne pop mov or adc frstor cmpsb inc pop icebp mov mov xor outsb std xor test out (bad) (bad) (bad) cmp or lret push fildll xor xor (bad) (bad) fnstenv xlat and push push sti ret imul inc dec loope lcall (bad) (bad) jg outsb xor push pop jge clc add fcomps jmp xchg cmpsl int (bad) (bad) (bad) (bad) aas adc sbb or movsl add ficomp adc ja xchg adc sbb aas add cmp outsb mov mov (bad) (bad) (bad) ljmp movsb inc mov mov push or xchg (bad) xchg out mov lret fsts stos popa adc call aas cld aad rorl cltd xor repnz (bad) (bad) (bad) jmp jne mov sarl and in mov cmp mov push (bad) pushl xchg mov dec imul lret in cwtl adc lret (bad) (bad) (bad) ljmp push mov jl jg jb cmc push mov add push and sbb ds (bad) incl xor stos xchg pop pop add ucomiss cltd xchg shlb repnz lcall pop test sub mov adc aaa out jne notl lea mov clc js and and cld pushl mov stos scas icebp (bad) (bad) push mov (bad) jecxz inc mov push jecxz jns mov loop (bad) (bad) std ljmp aam xchg cli icebp stos mov fcompl ljmp (bad) jp push popf and test dec sarl cwtl mov (bad) (bad) (bad) (bad) cli je movsb pop mov stos cmp hlt mov push sbb lods xor aad aas repnz dec jle outsb incb outsl imul jb leave (bad) fidiv (bad) jg fwait jmp cmp jmp inc and (bad) icebp mov mov lcall decl push push push jmp lods xchg cmp dec (bad) (bad) (bad) jmp aas pop andb and sbb inc popf xor mov test stos or call vmread insb repnz lcall cmpsb incb mov pop jbe xorl add (bad) (bad) push sub lods fsubl cwtl fstpl fidiv ret (bad) scas sarb (bad) fldcw mov add push (bad) sub (bad) (bad) (bad) (bad) lds inc ja (bad) ss pop cmpsb and dec stos jmp daa jp sbbb nop ja or test ds cs mov pop and lahf jae stos stc adc pop fs scas and jp cmp outsb sti sti jge and rcll mov lcall mov adc jle cmpsl add inc adc inc roll xor daa es ljmp insl jp xor push ja and addr16 jne (bad) (bad) inc mov test test stos sub pop xchg lods (bad) iret add (bad) incl loopne iret in xor loope cmp sub dec (bad) (bad) call insb mov fsubrs fisttpl xchg mov (bad) cld (bad) push and cwtl add xchg xor lret and (bad) (bad) mov fstpt pushl mov repnz xchg into xchg xchg xor mov pop in sub movsb xor add sar mov (bad) lcall (bad) mov or or push repnz adc in daa pop inc movsl cld pop out leave (bad) lock (bad) jmp sarb sub ss sub (bad) mov int nop jno jns cmp fdivrs insl xor sbb (bad) fcomps lods lea mov andl lock add idivb movsl incl imul and je fidiv jmp lock mov int adc (bad) ljmp cmc push inc test faddl xchg rcrl popf push mov adc loope push cmp test ja mov aaa add jbe mov pop decl sub pushl mov and or aaa fsubp lea inc jne movsl incl jg pop jb push mov or sbb cmp pop add (bad) jmp push push cmpsb arpl insb add mov lcall mov dec add cmpsb mov mov jecxz (bad) (bad) jmp add (bad) mov test in add stos cmc adc idiv incl inc rol leave repnz or or (bad) decl fdiv pop mov or fcmovnbe add xchg sahf ret (bad) (bad) incl and jns fnstcw add mov jb sbb les mov in jg mov xchg cmc out rcrb lock cli popa (bad) outsl loopne jl stc jno in push (bad) push inc sar add mov (bad) leave shrl mov mov add mov cmp xor insb push (bad) (bad) lcall cmp cld (bad) ja aad test sbb popf pop push push cli test decl lock rolb nop mov loope,pt hlt inc call out (bad) jg call jns loop mov and (bad) (bad) decl xchg mov add scas adc xchg and dec pushf pop pop push jnp in ror or popw std decl addr16 dec jnp stos xchg cmp jl push dec pusha lods (bad) (bad) (bad) dec xlat (bad) sbb fwait sbb popa and test and push ljmp add jae push repz js sub jmp out dec dec jl sub xchg (bad) pop xchg and add cmp lcall add jp insl hlt mov repz and mov adc mov inc jle add aam popa ret stos jns sbb mov or dec sarl (bad) outsl std call (bad) xor arpl rorl dec fldt fidivrl pop ret (bad) (bad) jmp ss dec xor (bad) jp mov add icebp int ret and ljmp je movsl fidivl sti in ss or outsb push (bad) (bad) (bad) mov mulb jae xchg xlat inc out mov xchg outsl clc jmp push pop pop inc jl clc (bad) sti scas mov dec add mov pop ds leave xor inc (bad) popa outsb lods imul (bad) push jg push fsubr sub mov (bad) mov out or sub pop add mov xchg (bad) in clc in imul shrl mov push mov clc leave arpl movsl cs jne lods push mov dec pop icebp (bad) call ret and cmc iret mov aad ljmp adc inc cs xchg fnstenv fsubrs xchg loop or (bad) (bad) push dec iret dec (bad) into fdivs pop jne lods loope cltd mov mov inc and pop loop lcall mov mov es push xchg jmp fisttp (bad) (bad) (bad) push or repz test inc insl lods sbbl sub mov incl mov aaa std dec divl xor popl (bad) (bad) adc jge mov imul jp cmpsl clc jge test imul daa dec fdivl dec pop dec (bad) (bad) call cli clc mov clc lods pusha dec add shrl push sar (bad) call sahf dec test out mov sub mov (bad) aas adc push (bad) mov stos jge fild push xor test lcall ret shr mov scas lcall insl jae xchg aas cmpsl (bad) scas mov mov push sub and inc fwait insl aam pop fisubl divb cld fst stos pop mov (bad) xchg lods pop out push xor cmp inc test std (bad) push jle in fabs lret cmp popa mov dec dec mov and xchg lcall sbb hlt (bad) mov push push add sbbl (bad) mov dec mov lahf mov jp (bad) out lahf das jnp dec in fnstenv or dec ret lahf pusha test (bad) mov mov das or (bad) (bad) (bad) ljmp popf push std xchg sub xor jmp fisubrl je popf mov xor (bad) incl sub or xchg or mov mov pop mov jecxz push adc notb fs xchg push std lcall mov and or nop cmc ljmp mov std adc dec jge es mov repnz outsb or inc test mov dec mov push adc jb sbb les jg in popl shl and shlb sub jmp mov aam cmp faddp aam orb xor mov pop scas popf add lods roll loope nop outsb add sbb ljmp (bad) pop les pop jbe sbb (bad) cmc jmp ds lcall xchg xchg out xor idiv (bad) mov pop pop dec cmpsl repnz stos and les or jge and test push sahf xchg mov add pusha insb cmp add pop hlt fldl2e cmp lcall movsb mov mov std ret adc push xor daa pop jg mov inc sub or (bad) (bad) (bad) call sahf ret iret push ret jge dec add mov add inc sahf push pusha xor ja cli test xchg movsl add in mov dec mov js (bad) ljmp cmp sbb pop push jge (bad) dec aas dec sar inc jl dec decb lahf jae pusha out and ja les imull call xchg push mov xor xchg push or cmp sbb cli aaa lods mov sub xchg pop in fs aas xchg je popf es cltd sbb or sar insb sub adc mov mov sbb cli (bad) (bad) jg lock dec inc cwtl iret adc sti xchg adc div dec call push cmpsb (bad) aas mov xor lods stos xchg into lds test fwait (bad) mov cmp in inc push (bad) (bad) (bad) out add inc mov fsubs pop or sbb clc dec lds (bad) pop sbb dec movsl jmp or push (bad) cmp shll push (bad) mov or fistpl cmp repz roll cli xchg or fidiv adc cli jg nop mov nop bound push icebp xchg add jp popa mov ljmp xchg movsb (bad) je xor adc idiv add pop xchg rclb jge dec movsl (bad) pushl scas xchg cmp xor mov imul (bad) (bad) call mov jnp out adc fimull mov ret pop aaa cltd je in jns xor popa out (bad) call and mov add aad adc mov cli test lock (bad) ljmp cmp scas add lret jmp daa test pushf sti cmp out mov mov inc jns subb inc out pusha mov test add pop add add add dec (bad) (bad) decl subl mov xchg inc (bad) (bad) (bad) call xchg lods jbe sarb mov pusha xchg xchg or cmpxchg8b sarb sub mov push das sbb xor test push mov cmp pushf scas mov lret push dec fsubr xor test add mov jmp mov sub jae push pop loopne ljmp sbb or imul es (bad) lcall (bad) jno mov pop adcb pop insl clc xchg (bad) in ljmp inc clc in out repz sbb sub (bad) and nop stos repz test call lcall pop pop mov ss ret and cli lods inc bound jo dec cmp divb push mov arpl pop out or pushl inc jb cld insb pop (bad) jns lret repz push ror jg (bad) (bad) (bad) aas fdivs sbb dec ljmp popf pop xchg xlat popf jnp stos enter lock fsubrl dec xchg int aas call mov pop mov jecxz (bad) decl out add repnz push jmp movsl add ss das xor xor (bad) bound sub repz xchg faddl push xor dec (bad) decl inc aaa pushf pop sub and les out mov mov mov add mov jecxz (bad) (bad) (bad) jo lea jbe sbb inc push into cld popa fwait into cmp xchg inc sub movsl or aas push leave xlat (bad) (bad) ljmp cmp lret gs sbb mov icebp mov test outsb cs xchg cld pushl sub aas inc mov (bad) cmp test call jmp add scas xchg sahf (bad) push mov mov orb stos jmp pop stos fnstcw repnz (bad) out cmp inc xor lods addl cmpsb (bad) (bad) mov test sti add lret stc stos ljmp push xor (bad) (bad) (bad) fstps xchg frstor add push mov lret icebp insl in (bad) jg test mov adc cli adc daa sub (bad) (bad) lcall lret and movsl outsb fstl insb repnz mov es fidivrl std jmp ljmp das ja imul mov dec cmp (bad) ljmp pop cmc notb je sarb (bad) inc fsubs ret mov stos repnz adc jg arpl add mov aaa dec mov mov cmp inc pop dec das cli ljmp test lea outsb xor iret popa cld (bad) (bad) mov cli sti cs cmp push out jno xor jg adcl lock xorl cltd shrb xor outsl imul (bad) (bad) ljmp (bad) mov (bad) mov pop insl insb or outsb arpl sti push sbb add or jg mov pop sar mov loopne push or ss cmp xchg movsl jle (bad) call mov orb faddp dec test mov (bad) dec mov in inc add sbb mov push pop pushl jne movsb in ret mov and jbe in outsb sahf push cmc iret cmp push dec test xor dec mov lret mov (bad) (bad) lcall insb fstl add adc push test scas int jle (bad) (bad) (bad) cmp and repz (bad) add add iret fisttpl sbb xor fildll sti sar (bad) pushl mov jb cmc in (bad) jno inc xchg lahf pop fcomps loop clc (bad) (bad) jg dec inc or daa cmp lods jp add clc pop out push (bad) push nop mov jb lcall pop cs cwtl ss mov insl cld pop mov (bad) mov icebp mov pop loopne cmp test pop pop cmp xchg xchg cmpsl lcall mov ret lods test or jge cmp mov rol inc rol jp (bad) (bad) call sub push orl pop adc mov mov shr fabs dec lret jnp das dec (bad) jg ljmp xor adc (bad) imul xchg jmp xchg push or push (bad) (bad) (bad) pushl daa js and dec leave aad and aad sti sbb sar repz jg loop shl and and sar inc (bad) cmp movsl sub (bad) jmp adc push cli dec mov scas inc (bad) repnz aaa cmp adc mov insb mov insl daa cmpsl fdivrl daa lea cmp aad scas jne leave push icebp cmp decl dec push adc mov (bad) jo mov sbb mov (bad) (bad) (bad) mov and fs mov mov pop cmp mov mov (bad) sbb mov jmp aam ss cwtl data16 (bad) (bad) pushl and imul jl adc jno std popf sub pop pop fmull ljmp daa (bad) decl push xor loop outsl call sar lods (bad) lcall jb (bad) mov fistp pop out ss aas lret lret add loopne (bad) (bad) pushl in dec cmp fisttpl movsb mov or jp out cmp adc fsubr and (bad) ljmp les sub dec xchg in (bad) inc cld inc (bad) (bad) (bad) (bad) ljmp test in aaa out xchg jle cmp cmpsb in test mov les into mov loopne incl sbb out stos mov loope insb insl add loop xchg call mov in cmc ja mov push gs push add (bad) incl repnz adc lcall fdivrs jp push call int idivl push loope call scas mov icebp (bad) ret add and ljmp outsb mov sub xor out (bad) aam xor cld fnstcw gs pmaddwd imul mov cmp repz xor loop sar js lea popa hlt adc mov adc pop and (bad) jg or lea pop ds (bad) hlt repnz bound mov mov jno adc adc xchg outsb inc mov ficompl xchg inc int3 rol pop in ret sub mov sti scas jecxz sbb push imul faddl or push mov mov jl inc pop xor cmpsl rcrl jmp scas jle (bad) aas repnz (bad) outsl push (bad) clc cmp sbb jns insl es (bad) (bad) jmp les inc push pusha out pop mov lods cmpsl mov outsb int in jecxz jne inc jp decl push ds fistl dec inc sbb (bad) (bad) pushl pop out lea lods fisubr shl mov paddw (bad) lret add out idivl addr16 (bad) decl mov sub in adc adc out gs and push lods add (bad) (bad) (bad) incl pop xchg push testl mov dec adc xor sub cmc sub mov cmp lret cltd aad addr16 incb mov arpl mov scas scas dec add call jmp or (bad) lock or rolb mov js int fs dec add ljmp add in dec into adc lcall push dec int (bad) pop inc out mov mov test (bad) (bad) (bad) mov sbb or cmpsb cmp jl out in lea pop cmc js pusha fldenv adc outsl repz sub aaa jb fiaddl aad outsl (bad) sub or (bad) (bad) in imul dec push test data16 jmp insl loopne sub (bad) (bad) incl jecxz or (bad) pop xor push loopne and in in (bad) (bad) lcall loopne outsb cmp leave inc fwait push push sbb mov add aas xor sbb xor test fimull or mov lahf insb int icebp adc imul jle or (bad) call mov inc loopne mov jle cmp jge lock xchg (bad) jmp roll ljmp nop enter cld ss test js jbe subl xor sub jp cmp loope xor cmp psubq adc leave mov xchg cs xor (bad) (bad) (bad) jg clc sbb mov or maxps iret rcl decb (bad) xor fwait sarb lock shrl mov movsb (bad) fidivrl xor ljmp mov xor cmp das (bad) dec jle pop sbbl stos loop sub ljmp adc shlb jb lods aaa mov xchg fcompl mov insl inc and (bad) jg mov jmp aam dec mov movsb (bad) mov mov (bad) jb (bad) (bad) (bad) call (bad) es push insb lcall or adc jbe adc xchg inc jae addr16 push lds push mov je test pop in xchg insl fnstcw pop aad pop insb mov (bad) (bad) (bad) decl mov mov push xchg lock jo repnz (bad) jmp out repz (bad) adc das fisubr fs hlt inc xchg jmp shlb ljmp (bad) jo call mov xor xor js xlat scas int sbb and in (bad) xor mov sub (bad) (bad) pushl addr16 addr16 in adc ret ret sub cwtl cmpsl or fild (bad) jg (bad) ss lock jecxz adc lods push mov (bad) decl and notl insl in fsubs pop mov lahf cmp jg ljmp sbb (bad) or xlat test (bad) ljmp loopne jp xchg xchg pop mull sub pop int inc pop icebp sbb (bad) xlat outsb loope inc pop stc and fwait sub out add jo adc (bad) imul sub rcr xor cmp std int3 lret cli push (bad) sub (bad) decl dec out lea stc adc sbb fdivr push jmp or jp rolb mov (bad) (bad) call jle and in loope push lock pop sahf push hlt or jmp add inc fldt lret xor lods push pusha bound cmp push popa (bad) decl loope jp mov scas in and xor std loopne mov or ljmp add cmc (bad) imul movsb dec lods dec (bad) adc (bad) jmp mov sbb je ror mov push and mov (bad) (bad) (bad) incl ljmp add flds (bad) sbb sbb cmpsb push loopne add jno jge outsb das cwtl and leave dec int3 loop ds shl mov ljmp out das lret mov je lods test sar cmp xchg pusha inc fildll dec push scas mov outsl aad mov jg (bad) cs pop aas xchg jmp jo or adc push jle (bad) (bad) (bad) jmp (bad) int xchg stc iret fbstp xor daa scas (bad) push xor (bad) imulb inc (bad) (bad) js test dec cld imul (bad) mov lcall aam aas pusha int3 (bad) mov into fadd popa clc out cli fs repnz (bad) mov icebp dec mov push mov rclb std imul sahf cmp aam lahf xor pop cwtl mov ds out cmpsb data16 int3 cmpsl call mov cmp pop testb (bad) dec dec into sub lcall mov or mov mov aad mov (bad) (bad) (bad) mov or xor xchg mov cmp xorb push sti lcall mov (bad) jg mov scas (bad) ss mov insw push aad inc xchg (bad) clc sahf les and push ret xlat or fisttp ror insl and xchg scas ds adc (bad) call mov push or aam incl imul add incl dec leave sub jmp (bad) jae sub adc pop adcb scas add out popa loope and aas cmp (bad) (bad) pushl or test popa popa xor mov ja pop sahf mov dec iret or ljmp add xchg mov dec (bad) (bad) jg push scas mov sbb fadds dec or xor cmp cs sbb (bad) ljmp mov (bad) pop or mov cmpsl and mov test loope adcb cmp enter add (bad) mov pcmpeqb jbe sti jae call ret dec mov adc mov lret sbb imul jnp or imul inc cwtl fisttpl sbb mov in cli addl (bad) out xor repz pop fsubs int3 xchg das sbb test (bad) (bad) aas rclb mov jne sbb pop lret out jle fwait sbb xchg (bad) repnz (bad) decl repz lret xchg movsl jle cmc call mov add pop jbe stos sub mov jg sbb sub (bad) mov mov fadd stos mov inc mov adc decl (bad) cli inc imul popl arpl and (bad) aas xlat push cwtl (bad) movsl mov push ljmp and (bad) (bad) jmp sbb fs push stc and cld fsubp add shrb mov adc mov in loop xchg and pop (bad) in cld xchg (bad) (bad) (bad) ljmp int3 aam (bad) push xchg fcompl jae mov std test fist mov lcall push loope rorl cld fucomip xchg icebp scas and xchg xchg call loopne inc push (bad) in imul mov scas fadds test std xor pusha pop (bad) (bad) jmp test pop sbb in adc and scas aam ds orl fstpt roll pop fimul sarb out push xchg (bad) cmp and stos addr16 rorl jle xchg rol lret or clc xor movsl into pushf iret xor jno test xchg ret mov jg scas test dec repnz sar jg call pop add aas test sbb sub scas jmp jmp xor mov clc xchg lahf cmpsl cmp rorl and decl (bad) jnp call imul frndint fstp add (bad) (bad) ljmp add ret pop scas add test sub popl xchg clc pmaddwd (bad) cmp (bad) movsl push xchg cmp add fisubl (bad) (bad) (bad) pushl inc rorl dec outsb cmp xchg sbb data16 icebp mov push pop movsb xor mov xchg int minps repnz aad add jecxz in push dec mov sbb (bad) lcall and push or inc (bad) push xchg inc mov dec cli sbb out mov aaa icebp (bad) stc xchg add nop mov test in mov jmp lock rcll fdivr or pop jl push testl fs add and mov adc pop inc icebp popf inc packssdw cmp sbb mov ljmp stc std adc pop mov int3 pop insb jmp xchg int (bad) add lret loop sbb sbbb inc lahf jmp xor push pop je sahf (bad) (bad) decl (bad) push roll pushf mov popf fcompl (bad) (bad) jmp and mov mov push or sbb das mov xchg aad jecxz adc paddusw cmc inc lahf mov push (bad) call cld push mov adc bound int3 xchg jmp push push pop repz push (bad) aas pop (bad) jmp fidivr jbe mov jo sub xchg jle in ja cmp (bad) (bad) (bad) mov or mov (bad) jne sub dec dec dec mov dec cmc sub call push inc std pop pop jp cmp xchg xchg (bad) sbb inc bound cmp lahf mov xchg pop mov ja add inc pop repnz pushf sub loop fcos (bad) pushl inc orl mov inc test fs insl push stos and jge (bad) (bad) (bad) jge gs bound adc aad mov aas cmpsl jne add jmp insb std bound clc lcall mull add out cli ret (bad) ljmp movsb call jmp mov adc fildll lret das (bad) (bad) (bad) incl jmp testl xor add adc mov mov loopne (bad) decl inc xor test mov mov scas push fdivp (bad) mov call adc aam push fisub pop stos xor inc out cli ljmp aam in inc xchg dec aad xchg sub mov push or jbe loope mov fadds push dec add push add xchg cmp or iret je add lahf loop push call mov arpl pusha xor fcoms inc aas (bad) (bad) fbstp inc or lret sbb adc out imul mov fdivr decl ss xor ds push hlt jg inc sahf pop clc insb imul dec cld pop xor xor sub test mov (bad) (bad) out rorl mov sbb push dec pop xchg rol repnz decl pop (bad) pop stos push push lret repz fmull add sbb addr16 jnp pushl testl sbbb std jnp ja jmp jmp pop insb clc fwait or popa xor dec mov scas add fcomip adc test not cmp sarl (bad) (bad) (bad) out sti push out adc mov sbbl pop mov lcall sub inc mov dec xor das mov (bad) decl lret fistpll mov mov out push pop sahf les test lea pushl outsb stos mov jp movsb jmp xchg ficoml jmp ret rcl fbstp sbb inc mov (bad) ljmp addr16 fwait aad icebp xor test sbb aad movsb xlat push pop loopne lcall dec xchg outsl jae cmp lret (bad) cmp cs stos cmp rcrb aas icebp inc pop ds inc and dec (bad) (bad) (bad) cmp cmp lock cwtl (bad) sub jle mov test enter daa ss add call cld fwait (bad) pop sub sbb mov int dec add loopne xchg pop mov pushf aas lret mov (bad) jmp dec xchg mov push add push rcrb jg (bad) js in sbb fcoml mov mulb xchg dec mov cld sbb jno (bad) fwait mov xor mov mov fild icebp push decb add push shlb or or enter pusha push sbb adc and xchg cmp cmpsl scas lcall add inc push into inc push sahf mov lret rol (bad) dec add jmp ficomp hlt cmp push movsl movl mov inc aad test test (bad) insb insl inc decl cmpsb push jecxz dec clc repz pop (bad) jmp scas outsl clc test cli mov jnp fistl mov adc fs cs cld fimul mov mov outsb insb rcrl lock gs push fdiv arpl je jle xchg lcall mov hlt popa inc inc dec mov call (bad) (bad) jmp adc mov dec push ljmp mov add mov sub fisubl cmp xlat std fmuls mov xchg fdivrl decl pop out mov inc pop ret mov aam icebp mov decl (bad) jge lret ja out in mov mov sbb arpl xor sbb jnp dec leave push movsb jne dec xlat out mov js (bad) (bad) (bad) ljmp cmp mov je (bad) mov testb aas loope cmpb add xchg jnp jecxz mov (bad) (bad) (bad) mov rcrl push lock jo,pn cld push and (bad) (bad) fndisi(8087 push mov mov adc push das mov inc mov and pop cmp (bad) (bad) mov inc jg sub mov aad jb mov in xchg in mov mov add lcall outsl jecxz mov mov xchg cmp cmp sbb push jo adc sub ret jnp dec xchg xchg insl mov mov (bad) aas jmp lods push lcall mov mov (bad) fimul fs adc inc xor adc test sbb xchg leave icebp or mov fmull movsl dec dec decl ficomp in add sti dec mov adc scas fisttpl sbb mov outsl mov cmp inc std mov mov ror mov std mov in mov push andps lock xchg rorb (bad) (bad) cli loope mov clc lcall adc cmpsb mov aad loop cmp rclb (bad) (bad) jmp mov clc dec fs (bad) mov push bound in insb xchg les repnz pop pushf inc mov or arpl and jmp jmp pop or xchg inc or jle loope das jecxz nop insb pusha cld (bad) decl loope inc jp xchg test or sbb add dec xchg sub into xchg bound cmp insl (bad) test out adc lods push mov push iret pop jmp out insb dec aad or popa jo ljmp jg jmp jns adc aam xchg out add lcall pop cli and into in hlt xchg mov push mov xor inc push lds adc js decl in cmc ds imul dec adc xchg aas pop sar (bad) call decl and mov jecxz das jbe adc in add mov xor dec xor aam popf jl cmpsl hlt cmp (bad) (bad) cmp arpl jecxz jge push mov lcall je lret xchg cmp push and pop std (bad) cmp nop (bad) (bad) mov jne out stos inc jae test popa dec icebp pop mov imul lds pop jno cmp movsb je sbb (bad) mov dec gs stos loop in inc lret iret hlt sbb (bad) decl clc ljmp (bad) int3 cmp mov ret lcall (bad) call aas stc cmp dec dec fbld (bad) imul mov mov xchg psubsb sbb mov (bad) lcall xlat fmuls (bad) jne sbb pop cmpsb icebp mov and (bad) call (bad) xor loopne insl mov jle stc mov pop pop jno andb (bad) (bad) pop ja lods stc rolb (bad) lds jle shr cmp cmpsl xor inc andb out inc orl push xor dec mov icebp (bad) (bad) (bad) aas imul pop (bad) xchg xor std repz dec push in ds lahf sbb (bad) sti adc jl or pop or movsl cld rcrb (bad) (bad) (bad) call mov mov xor or sbb cmpsl call jmpw fisubl sbb pop loopne dec cmp (bad) (bad) (bad) lcall xor mov and dec xchg (bad) loope add in or dec xchg jp inc cld (bad) cmp add and fisttpll (bad) (bad) (bad) incl mov mov stos add ret inc or divl mov aas repnz push movl dec mov sub dec xor jecxz (bad) (bad) (bad) jge pop popf mov xchg js xchg sbb imul sub inc pop adc fcomip incl push mov push pop scas pop push rclb push pop call out clc xchg xchg out pop jmp (bad) jmp jmp cld inc dec xor stos icebp fisttpll push arpl daa inc addl mov sub and cltd je pop ja (bad) (bad) decl mov pop lahf loope lcall cmpb fnsave icebp mov push imul ret lret jg in mov mov adc cltd mov (bad) aaa (bad) (bad) (bad) (bad) fldt test mov add cwtl leave mov pushf fcoml jae fldenv xchg popa mov (bad) cmp (bad) jecxz push or ret movl (bad) jmp xchg adc fsave dec (bad) (bad) (bad) mov clc inc call inc push (bad) repz imul and aas stos cmp (bad) (bad) aas mov rep ret or xchg shrb imul (bad) jno (bad) (bad) ljmp dec jnp mov and sbb push lret push cmc rclb sti fcompl jecxz scas add adc call cmp aam in jne sub outsl clc (bad) (bad) (bad) add or loopne push sti out (bad) out push pop cwtl or das pop icebp xchg mov ljmp sbb (bad) icebp outsl jbe cmc popa push cmp fadds ficompl (bad) (bad) (bad) call jno jns add or aaa das add repnz mov sti rorl incl (bad) stc (bad) out mov stos dec and xchg sbb ja (bad) or (bad) (bad) (bad) (bad) jge notb pop std icebp xchg add loopne adc (bad) icebp xor jae jae bnd push std std and inc add mov iret or jl add sti push push (bad) (bad) jmp sbb xor and push jl inc xchg inc shrb push inc jge mov sbbl ret add insb add mov (bad) in je dec xchg aam xlat cltd jge cmp decl rcll out pop hlt pop push dec stos inc fisubrl add pop and call or jno or adc bndstx (bad) decl dec push (bad) gs sbb leave xchg push pop std sbb (bad) incl std stos jecxz mov pop xor jb js sub incl das fcompl retw stc int3 mov adc aam ljmp mov nop xor adc pop call loopne (bad) mov aad addl pop addb (bad) sbb out arpl cltd sub lret clc inc mov scas lods dec xrelease mov lds aad adc in fsts or xor cli bound push mov cmc ror add push pop and incl lock pop ja call cwtl loop clc (bad) ljmp mov push inc test je inc lea xor sub clc push mov pop fisttpll (bad) (bad) push negb fidiv pop lcall psllq lds es aad cmpsb mov hlt insl inc repnz pop xchg enter adc xor and sbb push or adc (bad) jmp mov aaa inc cmp and cmp (bad) or movsl sbb pop stos xor push push pop (bad) mov inc and (bad) decl iret mov xchg (bad) dec dec fildll lods fnsave inc pushf lahf (bad) (bad) (bad) (bad) pushl fidivr dec adc popf xchg fcoml adc into rolb or outsl cmp iret test mov out jle in mov (bad) (bad) (bad) jmp push cs stc loopne rcr push fimull mov cmc js,pn dec push fild sub push jmp adc (bad) dec inc ja jmp mov loope test (bad) (bad) (bad) ljmp clc pop cmc clc orb fwait cmpsb jbe lahf in outsl dec dec cmc in ret pop ss in pop call clc mov les jge mov jbe mov (bad) (bad) decl pop fcomps cmp adc cmp outsb dec aas mov jbe jmp ret (bad) (bad) jmp mov pop mov and std ja (bad) movsl push repz fsubs ljmp rolb xchg or xchg push pop subb (bad) (bad) ljmp adc inc lods jle loop leave inc push mov int test fdivrl mov dec dec cmovo jmp dec (bad) (bad) jg push popf adc dec add jo ror mov sbb (bad) (bad) call in add lret loop or fcoms out addl std xchg xor jle dec adc sub mov (bad) (bad) jg pop mov or int mov (bad) repz inc movsb sar lahf dec inc jne fstps (bad) jmp jbe jno sbb cmpsb int or (bad) (bad) (bad) incl add outsl movsl jno xor scas in pop cmp insb xchg in cmp jno lret aam xor repnz mov ds movsb adc jmp ret lds cmp dec loopne cwtl sub xchg cmp les mov in (bad) call add ret fldt jg loope cld dec xchg push aaa gs lock (bad) (bad) fcomip mov fild adc mov sub jnp lcall call hlt push test xchg pushf jne pop mov test cmp enter push decl ffreep imul sub (bad) (bad) (bad) (bad) ljmp orb push in fisubl (bad) shl dec sub loopne mov inc fnstcw (bad) pushl pop jne mov mov das call scas mov in loope pushl mov sbb (bad) xchg sahf out sub sti lret push adc dec ficompl int idivb or cmp popa jo lcall adc mov (bad) (bad) (bad) call sahf rorl jns lret gs ret push add or pop dec pop lock popf push dec xor sub push out out repz or (bad) (bad) jg mov sub insb push mov fimull sub mov rcl pop mov mov lcall or mov push in add lods fwait pop or pop mov inc cmp push in xchg or adc or jo hlt cmp mov movl dec imul ret je pop decl aad outsl inc call out ljmp push adc (bad) repz and sbb js pop dec in fsub add mulb sahf mov hlt incl xchg lods insb imul loop lcall push (bad) mov stos icebp mov adc dec jno pusha sar dec mov mov pop and ficomp cli ljmp mov pop paddd scas outsb cmpsb mov (bad) lcall in flds add insl (bad) xor pusha andl mov xchg push (bad) fcomip cmpsb scas (bad) xchg roll pusha mov push sub lds dec cli mov call std pop loope (bad) ljmp ficoml adc xchg clc push ss (bad) (bad) (bad) ljmp xchg jnp dec mov pusha outsb (bad) inc imulb les or cld jno (bad) lcall add xor pop sbb cmp ret cli push dec outsl (bad) (bad) (bad) incl fmuls out scas fdecstp ljmp repnz mov arpl fwait call (bad) cld (bad) jb sub dec xchg scas shlb fcmovb pusha mov add (bad) (bad) incl daa xchg xchg lcall add jecxz sti inc jnp xchg incb cli arpl (bad) clc (bad) (bad) lcall inc mov lret mov adc mov push je push repnz xchg jns pop std idiv (bad) out cli jbe dec insl jecxz daa test xchg sarl arpl or mov xor call call ror daa push icebp dec inc mov cmp test cltd (bad) (bad) (bad) jmp push repnz add inc xchg (bad) cltd fsts stos ficom push out pop lock lcall cmp xchg or push push dec dec test pushf fs mov in or pop icebp lcall inc and mov jl jbe std fbld push mov xchg icebp popf inc sbb inc roll shll inc jno (bad) (bad) incl mov test inc repz lds imul sti mov loopne insl inc fmulp gs icebp jge mov push cltd and insl out (bad) (bad) (bad) pushl or pop pop clc jp mov clc pop bound xor push icebp xchg mov lcall jbe jno loop jne add sar lret dec push or xor push mov sbb sbb (bad) sbb mov loope out (bad) (bad) (bad) mov sbb or nop inc adc xchg mov jge sbb stos dec push push and mov lods inc pop clc incl out pop js inc xchg loop xor inc fcoms lds out cs hlt mov dec push jmp out xchg ljmp adc mov xchg outsl gs cmc dec mov mov adcl pop repnz add inc mov push cli (bad) (bad) jg ds ret dec adc or cmc shrb cmpsb jg jmp stos pop mov mov or xchg cmpsb sbb loope xchg aaa push fildl jl mov jns (bad) (bad) jge aas push dec repz mov pop mov pop jno push cltd jnp add rorl pushf sub xlat pop mov inc mov push sahf mov or or mov push mov dec push xlat fstps sub or xchg scas stc push dec pop xchg mov or fadd (bad) xor jns lret inc (bad) leave add cmpsl bswap pushf aad pop adc fildll test lds cmpsb in mov or xchg test stos push add dec test sbb insb jne cmp pop std pushl jge jne lea push xchg push out repz jle ja in (bad) (bad) (bad) (bad) mov rorl gs int insl pop clc dec xchg adc lahf mov (bad) adc sub jecxz clc xchg int3 cmp ret mov std fwait movsb xchg pusha pop (bad) ret mov gs call mov push cwtl pusha cmp pusha lods in pop jge ret (bad) (bad) (bad) call cld push iret test movsb lahf cmp mov jg sbb aam call les mov inc or mov jmp xor mov pop xlat gs hlt pop push jno add out jg pushf roll xchg xchg insb xor xchg sub pop cmp cmp and cmp fcomip inc lahf mov push pop adc les loope out xchg (bad) jg and lret decb incl mov addr16 cmp jmp adc cmp xchg cs movsb repz xchg inc lea mov pushf arpl (bad) (bad) dec call sbb lcall jne ja or out scas rcrl fidivr add xor ljmp cmpsl (bad) je pop sub dec xchg (bad) jg punpckldq xchg mov sbb xchg int3 jno cmp cmp xchg lcall ss mov scas cld push pop test pop out js or mov mov cmp dec adc pop xor cs (bad) xchg arpl aad idiv cmpsb rorl fsubl jge (bad) ds pushf out inc sbb and aas cld cs call out jl push mov xchg std lcallw movb xor rcrl sbb pop cs ds out ss out stos ror sub inc dec jmp mov cmp push pop pop xor rorb cld push sbb movsl or (bad) call je add jae mov lods call (bad) xchg popa (bad) or test lock outsb ljmp mov nop xor (bad) (bad) jl daa mov (bad) mov cs xor mov sub jg arpl (bad) je cmp xorl lea mov xchg in lods in add cld aas pop mov mov or mov daa and xor fadds es or or arpl cmp leave shll roll lret push add sbb pop adc xor outsl mov inc cs inc sti inc bound mov (bad) or push add sub clc inc add push mov cmp dec sarb cmpsb push add push or mov imul jns inc push add ljmp push inc pop or xchg dec pushf fistpll stc lret cli dec sbb lods push xchg jne addr16 cmp jne or lcall jnp (bad) call into pop decb scas pushf dec mov in cli fcomip jb pop nop jo pop pop sbb pop adc (bad) sti jns or imul sub fs jae shlb gs adc dec pop scas add js insb pcmpeqb testl xchg lcall push sarb str imul rcr sub push repnz inc push jo ss (bad) push xor or addr16 fildl or aas loopnew ds add outsb sbb mov sbb dec pop xorl in xor inc sbb push add or dec add lock add or mov (bad) inc push cmp inc ss insl push or jnp adc outsb push fbstp mov ja sbb imul mov fsubrl inc cmp push imul insl outsl popa pop or pop outsl mov sbb mov outsl mov push imul (bad) dec or outsb daa out sub je pop adc mov cmpsb mov (bad) xor xlat push rcll xor (bad) adc push test imul stos sub and out jo cmp add jae out jnp jae adc jo sbb push add int3 pop push outsb xor add fisttp aaa cs fidivr popa adc push mov fldl mov cmpsl inc push mov outsl and add add clc lock inc ds push insb fwait add sahf mov fwait pop jne,pt pop imul (bad) jno popa inc mov ret outsl cmp cmc cmp adc add bound push ss aaa cmp push lret daa jbe mov cmpsl arpl jo outsl in call data16 insl and repz dec lcall mov outsl jmp mov mov imul jmp pusha pop cli imull pushl add iretw jnp pop pop fs bound addr16 (bad) inc bound popa (bad) cmp dec outsl sub or inc je and rcll dec sbb lret (bad) rcl and pop stos jb cmp setg mov jp inc fs inc addb call push sub stos imul pop rorl adc sbb push arpl pop inc mov pop and sbb fisubr cmp rcr testl jns pop cmp out movsl add cmp js jmp jecxz xorl push data16 sti push aas mov mov jnp or xor pusha ret jbe (bad) push dec add ja jg xor mov fwait ret arpl cs mov add scas pop pop jg inc xchg add mov loopne push ret bound push icebp stos mov dec outsb mov mov dec dec sarb push out (bad) push mov cmp add push iret jae inc xchg add sub mov sbb (bad) (bad) jne mov lahf sbb push pop (bad) lock ja pop mov xor stos scas imul pop mov loopne cs ljmp lods cmp pop jg in cwtl es pop pop xor loopne (bad) mulb ljmp movl vpshuflw ss stos push push push cmp sbb outsl jns es outsb cmp add (bad) or test sub imull pop xchg ljmp pop fsubp call xchg nopl loopne imul out lea adc pop jo js hlt inc iret js xlat ret (bad) out push pop jae out addr16 shrl dec sbb jl insl sti imul scas or cmp jbe shll inc jecxz push dec xor mov ja jecxz mov dec sub inc add sahf mov shlb (bad) pusha in repnz daa out iret lods mov xor jecxz and outsl mov dec xchg mov imul jp addr16 aaa adc aad addb adc dec (bad) repnz popa nop loopne mov push cmp cmpsl (bad) mov sub mov lret subb pop loope and cs popa in push xor cmpsl mov jae,pt sarl and fwait mov ja sbb jae fwait mov xchg arpl popa dec pop jno aaa sbb jb js push out ljmp das jbe imul scas jae cs inc mov inc jo xor scas ljmp mov clc xor fwait sub push push jae or fucom or fistl mov dec out and adc sbb jmp and mov (bad) sti das dec loope scas aad jns notl or jb pop pop enter imul aad dec xchg sub inc push sub arpl dec cmp adc push sti push jmp (bad) test push repz (bad) ds fdiv (bad) jb cmpsl ja arpl pop iret push out imul iret xchg rol loop adc pop fsubs popa mov in insl imul outsl insb cmpsb stos mov imul fildl out ret adc out sbb daa outsl xor js popa add sbb daa scas out sbb xchg add inc inc orl repz pop aas mov pop xor and pushf dec inc cmpsb sub push gs lcall mov mov pop push or xor adc or arpl ja dec inc push adc notl xor adc cmp push out and (bad) xchg jae test (bad) jne cmpsl sbb stos sbb sbb mov mov push push and fs sti daa mov inc insb inc mov popf mov or or imul sub loop addr16 mov add daa pop sbb lcall and jne popa add push push mov mov orb fs imul and bound cmp cltd daa lods or ljmp inc icebp xorb pop push loopne scas mov add xchg push sbb out pop cmp xchg dec faddp dec sub jne,pn inc pushf je mov push push imul subb dec lret fldt push jae or outsb daa or mov ret aas iret inc and push aam inc jae outsl or pop and and or mov and mov pop dec jae or add lret daa (bad) mov mov imull sub mov js adc (bad) lret jne pop cmp push jb and jmp sub mov pop dec and and sub cmp stos sbb fcmovb sub push jnp xchg lcall (bad) ret lds dec pop inc jb ret out mov push and dec or pop pop jnp testl jnp xchg xchg jle adc arpl inc mov push bound repz jb mov (bad) imul and rep pcmpeqd mov pop roll cld addr16 and pop sbb push es das aaa cmp lcall xor lods arpl je fs push and dec mov scas adc shrl pop sbb xlat xor clc (bad) pop jnp mov push mov mov mov xchg push pop mov or pop movsb fdivs sub adc in sysret dec mov mov scas js incl repz lods or add shrl mov dec xorl or mov mov adc inc cmpsb dec inc pop scas jo jbe jbe mov mov jg fcom lea and inc shll sbb mov add je addb mov cmp mov cmp and push lds xor adc fsubrl or adc add adc inc mov pop sbb call pop add div sub jle outsb imul mov fstl add inc jae jnp pop push cmpsl dec fwait das ficompl sbb xlat je push bound ret mov xchg outsl or pop mov fwait clc ret repz stos outsl sbbl and mov addl rol xlat mov adc mov cmp jne mov or pop pop (bad) out je push xchg popa daa mov addr16 push jno pop stos xlat sub data16 pop xchg (bad) mov jo test xchg lock adc mov inc addr16 xchg outsb lods bound insl or ljmp sbb xor push or and dec adc xchg jae popa add xchg add mov push jbe push xchg dec ret xchg ljmp inc mov add imul pop pop repz mov movsb aam push mov ficoml adc mov xchg outsl add inc mov mov iret popa aaa rclb movhps dec mov outsb psraw mov mov or shlb and cmp lahf jb add adc jge or out jp outsl fcompl arpl push cmp and scas scas add (bad) mov lods sbb inc add fs bound sub pop jg std decl fbld cmp aaa mov pop fwait cmp movsl data16 mov mov add mov adc cmp (bad) dec inc fild adcl mov imul cmp js inc adc ja dec fistp sbb jmp popf notl lods push fidivrl popf adc xor bound sarl xchg or push jo test cld push adc sbb loope fs or inc cmp dec xchg adc shrl push and outsl jae push adc inc push inc and jl adc cmp repnz and pop adc std and mov cmpsb sub sbb push mov dec sub xor movsl push pop adc dec push adc lods xor leave imul mov mov cmp sub mull xor or dec inc insb addr16 or in or adc sub adc jl push aas in add sti movsb out push add mov push mov ss outsb int3 or insl mov jo and loope ret cmp jo pusha pusha jns fadds jle,pn or push js adc shlb xchg ljmp inc and fwait sahf (bad) mov or popf add pop insl inc outsl shrb sub dec xchg add push mov push (bad) add push (bad) xchg mov imul popa add jmp inc jns bound xor inc dec pop ss push dec push xor je xor jbe or (bad) xor cmp mov cs fsts insb mov addr16 jne adc or dec inc out or add or sbb jno push pop jg popf dec sub or lds ror adc movsl or das or sbb loope sbb or ss in add push jne nop test fimul ffree xor inc adc add orl or inc sbb cmpb or gs xor cmp inc jp imul jbe pop or sarl pushf add push jae (bad) insb sbb pop or in dec sbb mov xor or dec leave test jno popa gs sbb dec cmpsl add pop mov adc fisub add in jbe rorl cmpsl orb ret test int3 xor sub (bad) fwait add mov adc mov inc mov xchg imul adc mov mov and dec and mov imul or xor add mov xchg sub sub push or (bad) rclb insb gs xchg inc lret fisub jns adc mov adc subb jb xchg mov cwtl xchg dec in mov xor pop rcrb or (bad) outsl add push gs (bad) lret (bad) mov ret shll sbb xor lea sbb dec sbb sbb lcall dec add movsl in sbb jb jb add sbb adc sub inc and mov bound mov out xchg pop sbb sbb push arpl inc pop mov push pusha popa out or mov testb dec push pusha mov js pop push imul arpl xlat pop jmp pop and sbb dec sbb pop popa xchg adc add fld cmp xor jb fwait inc inc and or cs daa (bad) pop xor sbb fcomp fidivrl push or mov dec pop push and jb or testb fs xor arpl push jmp inc push push scas pop fadds vprotq sub adc inc add outsb inc inc sbb fldl imul subl out aam pop bound shll lea mov xchg inc sbb inc xchg push mov adc adc pop push or jae push je es and sbb adc lea sbb add sbb pop dec mov movsl (bad) cmp xor (bad) push movsb mov xorl test or sub add push outsl gs jns xor mov aas pop sbb sbb stos imul or loop das cltd call cli outsb sbbl push pop clc pop in mov xor scas inc clc push adcb ret adc sub ja adc scas mov push inc dec inc xor jp in inc cmc push ds mov test sbb sbb jo pop fdivr insb xor out pop xchg and aam mov add inc stc and push jnp jle mov dec sub jecxz or dec outsl mov imul xor jbe mov aam stos sub and das and or sub or ja inc (bad) ror mov dec stc in add insl adc sub leave sub and cmp hlt push xchg jmp push cmp or in das loopne outsl sahf arpl insb inc sub dec jb rcrb mov fimul mov mov sbb fiaddl rorb mov sbb jge dec push xor dec add mov inc dec inc lea test insb push mov imul (bad) insl lock je sbb pop add push outsb sbb aas sahf adc es insl (bad) adc je adc sub adc lock push pop jns (bad) jo mov (bad) (bad) lods add sarb mov jmp mov and mov mov add push es add and xor inc rolb and pusha test xchg mov mov inc adc inc xchg dec mov xchg cmp push inc and cmpl or inc call sub inc sbb sub dec mov sub jmp jecxz arpl int sub cmp daa sbb dec inc cmpsb (bad) xchg rolb xchg out or in or imul and and and sub popa jae inc dec test jl aad push mov dec daa mov outsl cmp outsl jo add adc xor push jp push pop xchg sbb dec loope gs push push (bad) inc mov dec data16 sub push nop dec int3 sub jne daa dec push sub addb inc pop call mov adc mov rorl adc enter jecxz bound sbb int3 and and lahf sub xchg push and jbe adc cmp add xor xchg sbb loope xchg push leave pop cltd repnz sub inc sub or es outsb lea dec sbb rorb ficomp xchg ret push ret jb or xor and dec xchg ret pop mov enter pop fs jae mov and inc and lods add sbb sbb fiadd push mov adc pop xor mov sbb add jo xchg es pop jp (bad) out adc loopne or rclb enter sub icebp add jp and pop insb and mov pop lods add push lahf cltd insl dec push arpl das push outsl sub andl fdivs jmp inc pop pop mov cmpsl shrl lods and mov icebp jbe push fs xor pushf push jne pop (bad) xor and push je sbb aaa testb data16 sbb xchg nop les dec popa sbb mov sub jno imul jmp jae test pop stos faddl scas pusha sub mov fmuls out xor sbb (bad) cmc dec jae dec imul pop xchg and sub mov jo mov imul xchg and lret sti pusha in push ret jne pop inc sub adc sbb popa jmp sbb push jb inc and mov sub xor imul fcmovbe pop jno inc das sbb adc ret imul sbb cmc and nop mov jne push daa inc cmp adc and (bad) cmc imul inc addr16 or sbb fldenv mov mov jne jne shll lods jbe mov push addl and dec xlat jmp jnp adc lds mov sbb lods dec out aas movsl es mov fildl (bad) jno and cmpsl sbbl and mov mov push sub jne sub and icebp sbb and sahf mov xchg ljmp imul mov push fistpl (bad) test jbe adc jnp sbb push mov loope push dec pusha mov inc rcrl add add xchg scas ja push mov mov lret sbb adc jnp dec mov push sbb imul and sbb (bad) mov pop or pop ret mov push pop outsl loope lock sub mov adc dec mov lock cmp lea mov adcb popa inc adc leave repnz aaa push jo mov dec addl cmpsb pop sbb inc mov (bad) xor stos sahf call adc sub inc jl clc xchg sbb ljmp fdivrs mov or (bad) inc inc push dec add add lahf sub loopne lock insb or add mov sbb add jl push adc jo pop jbe mov addr16 fsts jae inc cmovge jo or scas sub pop add xor xor lock mov aam or push jno dec inc dec inc inc adc fldcw xchg and inc inc push push mov notl mov push dec inc push rolb adc dec in in nop je add cs mov add mov ret mov jae rcrb sub dec loopne push inc jnp sahf push dec and repnz jb lahf pop sub jae dec pop add or fisttpll shrl into pop cmpsl jg dec xchg and mov inc and add add add inc add inc xchg push test int jmp nop nop nop nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jb dec add jne mov sub adc adc jmp add jne mov sub adc adc jmp xor sub jb shl mov inc xor je sar mov jmp add jne mov sub adc jb inc add jne mov sub adc jb add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov push dec repnz push call or je mov add jmp call mov lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp xor dec add dec add add add add add or add add push add addb add mov add jo add mov add lock orb add pusha or add add add pusha sldt add add add add add pop add add add add add add addb add call add add add addb add pusha add addb add mov add add add add add add add add add mov add test pop add add in add add add add add add add fadds add faddl add in add add add add add add add add add adc add in add add add add add add add sub add inc test add add in add add add add add add add push add add pop add add in add add add add add add add js add lods xchg add add in add add add add add add add mov xchg add add in add add add or push add add xorb add pop add or add fimul add in sldt decb add or add adc add and add adc sbbb add rolb loope add call add add add add cmp add pusha add add mov add mov add fadds add add add sub add push push add js add mov add add push add lock add sbb add inc pop add push add add add add add add pop add or add xor add pop or cmp add orb cmp add test add rorb add clc or cmp add and add dec or addb add add add add add add add add add and add adc pop add add add add add add add add add add dec add add mov add add add add add add add add add add jo add enter rolb add in add add add add add add add cwtl add add add add add add add add add add add rolb add pop add add add add add add add add add add call xchg pop add add add add add add add add add add adc add xchg pop add add add add add add add add add add cmp add xchg pop add add add add add add add add add add pusha add add add add add add add add add add add mov add pop add add add add add add add add add add mov add dec fwait pop add add add add add add add add or add add add pushf pop add add in add add add add add or add add pop add add in add add add add add or add add pop add add in add add add add add or add add mov pop add add in add add add add add or add add add pop add add in add add add add add or add jmp add in add add add add add or add add pop add add in add add add add add or add add or jae add in add add add add add or add push add rclb or jae add in add add add add add or add add inc daa or jae add in add add add add add or add add mov sldt in add add add add add or add inc or jae add in add add add add add or add push or jae add in add add add add add or add push add adc or jae add in add add add add add or add pop add mov jae add in add add add add add or add pop add cld orl jae add in add add add add add or add add jo or jae add in add add add add add or add mov add in add add add add add or add mov add add in add add add add add or add pop add int3 rorl jae add in add add add add add or add pop add inc rorl add add in add add add add add or add or add add in add add add add add or add add sub or jae add in add add add add add or add add pushf decl add add in add add add add add or add wbinvd add add in add add add add add or add or add add in add add add add add or add or add sub add in add add add add add or add or add add add in add add add add add or add or add dec or jae add in add add add add add or add add push pop or jae add in add add add add add add add mov add add add add add add add or add lock mov add in add add add add add dec adc or add add add add add add add add add loopne add push jne add add in add add add add adc call or xor add mov sldt loopne add or add xor add pop or xor add orb xor add test add rorb add clc or cmp add and cmp add dec or cmp add jo add cwtl or cmp add rorb decb add call sldt adc add cmp add add add add add add add or add jne add add add add add add add add rorb add inc jbe add add in add add add add add add add clc or add add add add add add add add add add and add jl or movsb add add add add add add add add add dec or add jp add add in add add add add add add add jo add cmp or mov add in add add add add add add add cwtl or add jle add add add add add add add add rorb add add add add add add add add add add call orl add add add add add add add add adc add add add add add add add add add add add cmp add add add add add add add add add add pusha or add mov add add add add add add add add add add mov add mov add add in add add add add add add add mov add hlt nop or in add add add add add add add add add fmuls add xchg or mov add in add add add add add add add add or in add in add add add add add add add sub or pop add add add add add add add add add push or or mov add in add add add add add pusha adc orb add xchg add add add add add add add mov popf or adc add in add add add add add add add enter xchg popf or addb add add add add add add add add lock or adc add add add add add pop add jg add add jo add cwtl push add rorb cmp add call jg add sldt cmp add add add add add add add add add pusha push add and or adc add in add add add add add add add mov add cmp add add add add add add add add mov add dec movsb or adc add in add add add add add add add fmuls add pusha movsb or adc add in add add add add add add add add add je or adc add in add add add add add add add sub add mov add add add add add add add add push sldt pushf movsb or adc add in add add add add add xchg adc cmpb addb add add add add add add add or add cli or adc add in add add add pop add inc add inc add push add add inc add dec add add inc add inc add inc add dec add add inc add dec add push add push add inc add inc add add add inc add inc add dec add inc add inc add dec add add inc add dec add pop add inc add inc add add add add inc add or push add inc add dec add push add dec add push add or inc add add add push add add add add add dec add dec add add inc add dec add inc add dec add inc add push add add push add xor or dec add dec add dec add dec add add enter sub add sbb add xor add add and add add pusha or add mov add add add add add outsb dec imul cmp pop pushf bound push (bad) pop lcall jno popf pop mov add sbb mov add add add add mov add or adc push mov jmp les ljmp jb cmp add add add add add add pop pop mov pushl dec jmp mov xor add xorl aaa lret dec pushl inc jmp test ja jns push mov popa incl push ljmp into cmp (bad) add add mov add add inc or icebp insb decl decl pusha jmp int3 cmp (bad) add add fwait pushf mov add add add hlt jne push in decl push decl pop mov add add into into add add add xchg xor pop idivb push jmp outsl call (bad) ljmp jb add add mov (bad) add add add cmpsb cmp pop cmc jns pop in je pop icebp je push shll mov add sub lcall jne pop hlt jne push shll scas jp (bad) (bad) incl add add cmpsb aaa into pop out jno pop out jne pop idivb inc (bad) pop (bad) pop cmpsl gs mov xorb jge add cli clc add add add sub dec in call insl lcall js inc rcrl sub gs stos push pushl je or fistpl dec fbld push jmp jb inc ret inc ret push (bad) js and sbb cmp add add cmp push add jne xchg and xor aad decl (bad) call insl jmp jge imul jmp jae add add add sub pop call mov lcall (bad) aaa ljmp movl xor dec (bad) cmp fisub dec loop jmp cmp popf dec pushl dec addl add add inc add pop lcall sbb cmp sarl sub inc pushl int3 dec (bad) cmp push incl arpl pop jmp adc outsl add or lcall mov aas ljmp movb lret inc out decl inc incl add adc pop add add movsb and push mov inc ljmp inc pushl jecxz decl and add add add outsb push sub test sbb inc lcall scas xor add inc add add or mov adc add push add add (bad) (bad) incl push aas add cld aas add clc outsl add lock add loopne add sar inc mov add rcrb inc incl inc testl inc (bad) inc (bad) incb pop add add add add add add add cmpb jmp jg push jg (bad) cld incl mov or add add add sbb add add and mov add add cmp or in cli or inc sti or or or push sti or adc or pop sti or sbb or imul or jbe or sub or cmp or mov or lcall add sti or (bad) sti or add add in or add add repnz or add add add or add add or or add add sbb or add add and or add add dec inc push dec inc dec xor cs dec dec add jbe jo xor cs insb add insl arpl xor fs insb add imul insb add gs jne xor cs insb add gs xor fs insb add jb imul add dec outsl popa fs imul add inc gs jb arpl fs jae add push imul jb je arpl push imul insb insb outsl arpl add jb jne insb inc jb add add imul jae add push gs insb outsl jae dec gs add dec insl popa addr16 imul add add jbe inc inc add push popa jb popa outsb je outsl jo add add je inc add add jb jne jb push popa insb jne inc mov adc add inc outsl outsl insb gs outsb add or add mov insb jae add jb lea sub add push outsl (bad) testl pop dec outsb je addr16 and rcrb xor add jns insb daa push outsl jb add jns incl imul add or push je sub in push lcall pop mov cwtl imul mov ret repz pop push dec bound arpl pop sbb loop jae insl sbb and or dec mov popaw arpl add decl dec pop inc add inc and clc jmp jle mov adc mov in popf pop xchg xchg gs faddp (bad) loopne jno add shr or mov add cmp pop push insb push adc scas dec jo loope jmp sets daa daa daa xchg nop mov mov daa jl je daa daa daa daa insb push daa daa pop test push daa daa daa daa push sarb dec ror daa daa daa daa enter clc lock daa cmp les (bad) outsl scas (bad) add sub je movzwl mov ss pop ret jb jb (bad) xor sub jb jb and sbb iret out ds mov add push add (bad) sub enter add mov mov mov add lea mov mov mov inc cmp jne mov mov mov push nop mov out (bad) push inc add scas mov mov xchg insb test xchg mov mov pop jnp push or mov mov adc add (bad) aaa push mov push or and sub ret mov push mov mov mov mov add loope insl iret rcrl mov add cmp jne int ficompl inc mov or inc add adc mov push jne aaa sub jne (bad) mov ror sbb pop pop pop push mov mov je sti mov xchg cmp jb in jbe jo into add call ja and mov mov or mov dec ret mov in fucomi aas pop mov add pop repnz sub or pop push sub mov xchg sub mov aam or sbb scas sbb sti jne sbb jnp inc nop es mov cmp mov fwait push add ljmp fisubrl add add and push jg mov mov test je sbb and (bad) adc (bad) cmp mov and push mov sti ds pop data16 rol push lahf push lods push movsl jne icebp push push (bad) add xchg dec pushf cmpl in mov popa clc ret fucomip mov (bad) or or lret and call faddl lds mov push jg mov out ja mov add cmp ja cmp cmp jae or or sbb out dec mov inc or add xchg jecxz fild mov mov add adc sbb mov adc or push adc hlt mov mov mov and sbb jbe cmp xchg sub mov mov jle add adc jbe mov cmp or or jbe loopne xchg scas adc sti push push cmpl jmp ss daa cmpsl movsl loopne and push cs inc add xor sbb add sub sub or sbb mov add sbb add cmp nop movsb add add inc mov dec paddd fdivs clc mov (bad) aas or add mov (bad) repnz (bad) xor idivb inc xlat jl xlat ja movsb push movsb in je mov inc cmc shll xchg xor mov (bad) pop add jne pop stos sti mov and push inc in hlt icebp mov xchg insl pop mov add out cli jl add lock mov je cmp inc jle mov mov sub push stos mov std mov icebp xor lea jno pop shrl mov pop fcoms gs pusha push out arpl sbbb data16 xchg jo xlat adc int3 imul jne push fcmovb loopne cmp js sti inc cmpl sub inc popf adc or mov pop sahf push (bad) incl mov cwtl aaa jecxz add add ret jg cmp jae mov out rorl jge xor push test je aad rcll ret addr16 or js add adc jmp jecxz lock jl hlt pop sbb add push push mov xor push cmp fistl loopne or inc test adc push scas shr mov or adc aad leave jle hlt inc cmp in mov mov add rcrb xor push adc sub xor ret mov mov insb jo pushf dec pop xchg test shlb or jo sub in mov adc loope mov addr16 add loopne mov mov sbb (bad) mov sbb in jo xchg fistpl push cmp sub jb or or pop test jns add sar mov or cwtl mov and fnstenv (bad) mov sub mov pop adc push push jmp dec fadd jb add or mov cmp das jne or sbb add sbb cmp jl movl stos repnz jb sahf es (bad) outsb inc or mov and add sub adc fdivr test cld dec adc adc shrl je insb or push or push rolb aas leave mov pusha xchg or ret (bad) popf inc jns push (bad) xor adc je jmp fisubl aad lods enter ret aas in das jo enter je mov sub cmp cmp cmpsb mov pushf add test out stos xchg mov xor add mov ja cli in clc add and repz bound nop and decb test add xchg jo xlat jmp dec (bad) mov or mov or sub cld jg clc sub jne outsl jp sub cmp jge mov out fsub or daa xlat cld lea mov inc add mov in mov aad (bad) lds stos clc add adc fisubrl test jp or and mov xchg iret xlat mov fisttp sub movl rol inc mov enter adc insl jle mov cmp jmp hlt inc ss lds adc add sub cmp or mov pop mov mov xor insb sbb inc inc mov inc adc or shrl movb daa or adc add or jo sbb lock std adc movsl movsl mov inc mov xlat imul mov cmp pusha xchg lods sub add adc repz mov sbbl adc out jge pmaxsw mov test aam mov insb (bad) loopne pop mov insb and pusha pop pop inc imul add rol pusha mov and or xor jmp sar cmp jl adcb or sub xor mov pop push dec cmp sbb push pop mov pop movd mov lock jg,pn pop mov pop je inc ja pop pop jmp sub cwtl sbb dec sbb jle push fcomi adc cmp movsb sub cmpl maxps adcb inc add xor stos (bad) loope sub xor jmp jmp dec and roll (bad) xchg adc clc repnz jne (bad) out cli js pop xor push xchg xlat test cmp loopne pop movsb pusha or sbb clc stos jle inc cld repnz pcmpeqd addr16 push push mov pop mov push add or sti mov mov push test jg xchg or or aaa xor test add pop inc scas (bad) jne push add jns mov jmp mov jge ja dec cmp mov pop lea add or mov int adcl jbe jmp push pop pushf add sbb out jg sub mov add bound sbb test lock mov or push pop aad pop sbb push sbb mov sub jne out jns in push sub jo xor or lock test jne test ja (bad) or movnti add loopne outsb orb or (bad) fcoml adc (bad) jge rcl insb add das add pop in ret mov cmp clc cmp stos in pop clc and and add pop fisttp mov test je or ret cli mul cmc jg or orl jmp mov cmpl or mov clc push adc or adc sbb and add inc loope dec adc outsl cmp pop jg add push sahf cmpsb fsub (bad) mov (bad) push cld inc lea loope add mov (bad) mov add jmp les pushf (bad) into push xor cmp adc test pop mov lea inc sub cmp mov add cmpsb ret cmp mov xlat mov sbb mov cmp mov add imul xor pop cmpl and iret adc xor sbb add mov add cmpsb or icebp jno loopne test add aad pop sub add mov jo movsb push pop mov loop fadd shr xchg or add xchg mov mov add cs ds or and fdivs nop xchg in lea cmp mov sbb fcoms push dec sbb fs cmc adc dec and test push mov adc add shll in ret (bad) mov (bad) jge ss adc jno push mov xchg dec sbb add inc cmp cld lahf cmpsb test jle call or mov add stos adc add (bad) dec sahf je je lahf (bad) or mov test je sbb enter or sbb push xor jne,pn sub bound shr or out mov mov sbb push mov ret rol add sbb mov dec lock pop or xor jg jge push out mov js popf mov mov jecxz cmp pop inc daa dec sbb push out das mov ja mov mov mov pop mov adc push enter daa pusha rcll roll pop jne xor pop mov xchg jp mov mov sub sbb ret loopne mov fdivrl sarl (bad) mov inc rep jmp mov fist in leave jmp mov jl pop cmp xchg hlt push lock pop adc loopew jno (bad) mov cmp divl adc js rep xchg subb inc je cld lea xor std xor (bad) jnp mov ds inc cmp jb cmp ja sub ret nop mov lar loop sub fstps pop js (bad) push sub fist fwait pop pop pop in or fldcw add ljmp fidiv (bad) fldcw pop inc in sub cmpb xor adc mov data16 jb mov repnz sub adc (bad) inc fsubr sbb scas pop out xchg je cmp xchg adc addr16 shrb mov push sbb sbb xor mov cmp idivb ja and adc jne call mov test adc and sbb sahf jmp cmp arpl mov mov (bad) jbe pop mov xor mov inc (bad) jb cmp ja pop scas clc push mov mov inc inc add ret mov sub jbe mov rcl pop sub leave mov inc xchg mov jp sbb lret mov inc and divb imull jg arpl push xchg inc inc and add push shr je aad shlb clc pop cmp jne dec mov fwait mov aaa bound or loop push adc in lcall loop je mov cmp jne push adc add or cmpsb imul add adc mov jbe cmp jne shr lods adc add ja mov push mov shr or jae jns pop cmp cld fildl rcrb and mov cmp jne dec imul sub sahf mov jecxz outsl cs fimul int loopne data16 pop or stos adc pop in xchg fsubl push push insb sub mov fnstsw cmp je mov or je or je ja jae and je pop je xor dec jg stos mov dec inc mov or ss outsl and ja cmp ja lea push add push incl dec je sarb jmp inc mov js pop sub sti xor inc inc jmp mov fild add push adc lods loopne add or aad mov pop xor mov xlat mov cmp cmp pop icebp jg cmp push inc mov dec jne pop decb jno sub xchg or daa outsb sbb sub fsubrs je adc lea sti out adc lea fldt and add push cmp mov add popa push in daa pop mov jmp pop xchg jge mov xor sbb mov push fstp fldt andl fldz mov cmp in jg aas mov stc in cmp inc pushf or ret psubw inc ds adc mov and sub sbb xchg and inc mov stc mul lret mov lock stc es test pop xor out sub pop jecxz add leave sbb sub cs jbe imul cmp mov aaa push and mov bound cmpb xlat fadds int nop lods outsb xor xchg push or push push int3 into stos (bad) (bad) lcall ret inc mov push pop test enter mov inc push (bad) (bad) (bad) jmp hlt daa (bad) lret into pop inc test xchg clc js aas sbbl pop (bad) mov addr16 (bad) (bad) dec leave repnz bound and cld gs sahf mov sub inc aad iret decl (bad) (bad) pushl adc lds stos mov cmp or mov pop out sub push mov inc imul (bad) divl jl xor cmp call mov (bad) (bad) lcall push inc mov push sbb sarb repnz test nop fildl (bad) (bad) (bad) jmp movsb lahf nop inc pop stos clc scas adc (bad) inc pop pushf mov pop pushf mov fs aam imul loope jp (bad) (bad) call xchg pop fnop ds push cmpsb scas mov pop or addl dec in xchg cmp xor in cmp sahf xchg pop cmpsb lock mov popa (bad) (bad) (bad) mov pop mov (bad) repz mov subb and jg (bad) jmp outsb bound xor jmp (bad) (bad) cmp sbbl cmp jne push pop and orl push mov outsb cmpsl fwait std inc js movzwl lea push push ret enter mov mov rclb xor (bad) imul xchg pop hlt push data16 add mov gs fidivl test out mov dec jmp push clc pop aas or mov adc push dec inc push push inc push inc pop inc outsl jb popa outsb fs inc gs lock ljmp imul push dec popa jae push popa insb jne push push dec mov (bad) mov mov aam leave mov inc pop cmc dec jo or or push mov cmc add mov jne dec mov xor out jne mov inc mov es fcompl or lahf jns,pn outsl pusha addr16 push mov pop aaa movsb or push ja rcr test or test push movups pop mov ret xor mov mov loopne mov or push cld mov (bad) mov stos mov xor push shr dec rep pop loope rcr (bad) mov pop faddl add sbb in cmp je pop mov add jae lock pop ds mov mov push sbb cmp mov jg outsl lods (bad) mov mov jbe mov pop cmp mov mov subl (bad) jb shufps loopne add jmp mov mov roll adc fcoml inc pop out pop clc inc nop cmp mov dec jl cmp xchg mov sub and or roll adc clc mov cmp push mov push add pop lea push sbb and fisttpll pop sub (bad) dec setne inc idivl in int3 popf or dec jno add rol mov xor xor imul push or jne lock (bad) cmpsb or push inc inc fdivrl lds pop mov call test test mov jg outsl decl push mov leave jne mov fwait nop push xchg jmp sub xchg lret push or (bad) call sbb scas je pop in negb pop add sub mov pop vpaddb push xchg add or pop ljmp pop mov dec xchg pop jne sbb mov das mov dec lds out les faddl les data16 (bad) mov sub ljmpw pop adc icebp pop mov fsubp test (bad) xor decl not js xchg adc mov cmp (bad) fbstp into dec jne icebp fucomi sbb add sbb icebp insl lcall add xchg lret rcr lahf push popf enter xchg (bad) mov rolb repnz sbb push scas jge jmp lahf in push pop add mov (bad) cmpsb push bound hlt xor push jecxz cld jg mov mov mov movl or fisubl pop sub cli test or or aad jecxz (bad) sub movups push clc (bad) pop pop test sbb mov sbb andl cmp (bad) mov int3 (bad) in push sub adc pop push mov enter push cmp cmp pop iret mov repnz add add rcrl sub or jae addr16 pop idivb fsts and sbb jmp push lods (bad) jmp or mov mov and addr16 jecxz push add and (bad) adc push xchg aas loop fdivrl adc jecxz pop mov hlt and testl in cmp (bad) fwait mov mov adc outsb add jl adc adc je mov fidiv mov cmpl je or movsl jb jbe test pop cmc subb dec jb add int mov enter adc jne push jne push lea ret pop cli push jns je sbb dec add out push sbb add push sub inc cmpsl mov (bad) sub decl jne fistpll call test jg hlt xlat cmpsl mov mov push and xor inc mov cmp outsl je dec or into test push add mov add mov jl add lds mov mov sub repnz addb popa adc cmp jne xchg mov std mov fbstp sbb je jg pushw rcrl (bad) dec jne pop (bad) xor inc jmp sbb movsb popa push daa mov mov adc adc insl or inc push cmove pop adc dec adc adc pop or paddw mov popf pop (bad) cmpsb movl ret pushf ret push (bad) test das xchg inc jg and sar lock push push push push push mov push jns and pop es mov cmp push cld cmp sbb mov inc or pusha add (bad) or sbb dec iret fdivl rcl orl adc adc js pusha xchg jae mov call lods pop insl movsb jmp push pop ret xor mov xchg in imul add mov add xchg inc jg je cmp push sub jbe sub je jmp add sub pop mov pushl je jmp cmp sub adc mov jmp sub cmp mov jmp mov jmp mov (bad) (bad) dec jmp mov jmp push sbb into jmp mov jmp mov jmp mov jmp or lret call test inc aad mov mov jecxz lea (bad) push je push outsl jp (bad) mov pop test mov inc push inc sbb cli (bad) adc out push inc roll or or mov jo inc cmp (bad) xor push mov mov or enter push mov mov cmp in jg jne add or cmp jne and push (bad) mov lods movsl or or jo loop dec sub test jle dec mov inc fiadd test jle call and jecxz adc lret mov imul push jg mov or dec mov lods js ret or cmp (bad) sbb fdivs es mov pusha dec mov add mov cltd lcall mov mov jmp xor rol add add bnd cmp sbb mov add add incl ss jne pop pop pop inc pop fadds pop sbb out setae pop add mov xchg or mov insb nop mov add ret mov add add rcrb rorl mov dec ja mov sbb add shrb xchg mov mov push push inc ja push rcrl out xor sbb add movsl pop sbb ja add dec aad hlt mov mov leave pop push push imul cmpl cmpl inc mov xor stos jmp push push add pop adc add cmp xor push jo jmp adc pusha cwtl outsb add sub push or pop sbb cmpb push addl test sarb or call out dec and xchg sub or add aas inc lea and mov sub icebp xor add sbb pop in inc adc cmp push mov inc pusha sub jne and in fcompl mov cmp jne cmp adc adc mov sti ret rclb clc je push sub insb push popf aas mov pop and mov sar mov adc decl push lea js or push push push xchg inc jle les push sbb add or mov dec jne push add dec and inc jg cmp int movsl jge push mov pop push dec sbb insb xchg pop xorb xchg xchg jle jnp aam (bad) jle push add clc push mov sti pop movw xchg mov cld sub pop fist jns cs cwtl mov sahf loopne mov das stc mov loopne rolb mov cmp cmp pop and inc or adc fadd mov cmp sub repz aaa mov mov (bad) cld sar cli jg insl fdivrs jb jmp lea cmp mov sub into mov mov jno (bad) mov and loop cmp fistpl xor fadds gs jnp pop jge xor dec push call loop or out xor ret cmp je sbb dec fs je add mov jmp inc add jmp jns pop sub and pop pop or or addr16 in add jae ja mov inc xchg push add test push sub scas jl das add pop pop xor push loop outsl push and pop cld add cmp adc fnstcw or pop or ret (bad) xchg aas pop add fdivrp ret push aas (bad) je jle sub mov push cld add cmp pop js push cmp (bad) mov adc mov (bad) jae sub cld cmpsl jmp popa cmpl je cmp mov cmpsl cs sub pop scas sarl jp,pn mov loopne cld add (bad) je mov in ja dec mov cli lds push sbb push and loope lret sub iret adc cmpsb dec fwait mov xor mov sbb in cmp add or ret mov cmp fs dec jne mov roll cld jge and aaa add dec jmp hlt lock push jbe pushf sbb add clc out into pop dec jne mov inc (bad) roll int3 add scas and add and jmp xchg addr16 lock push sub (bad) imul mov jg xor add and inc and adc or (bad) jae movsl or and out jle mov shr aam mov cmpsl push clc inc das xchg jle test add jno push mov (bad) insb mov adc pop adc and es mov int3 cltd adc xor lea adc es jl cmp jge sub lcall adc mov sub fnsave adc shr in jmp jmp push insl and and (bad) (bad) xor lods js mov mov mov add mov mov repnz inc dec movsb push cmp mov repz icebp pop cmp lahf cltd mov push mov cld in clc sti sub xlat adc imul add gs cmp subl mov lea lock sub pusha add mov jl add mov cmpsl pop decl dec js mov inc jb adc das loopne pop adc inc push cmp in pop fsubl pop mov (bad) out xlat sbb add push or out dec loopne lods and sbb cs push pusha xchg xlat clc pop sub and (bad) mov mov lods jmp out (bad) arpl cli pop cmp (bad) pop call ret push push test mov (bad) jb xchg cmpsl push push das loopne xchg mov and push loope (bad) cmpsl in cmpsl push fwait pop (bad) lock jp add sub push add in jno in stc inc xor inc jecxz iret sarb pop movsb fs dec sbb pushf push xorl or dec push das xor push jecxz mov add nop pop add sub cmp sbb sbb or cli (bad) inc pop add shr xchg je mov and push inc xor dec test cmpsb add xchg out pop pushaw and fisttpll pop das or pop add imul stc sar lock faddl pop dec cmp out inc mull pushf lcall sub cmp push out loop pop lods add add fsubrs mov data16 push lcall pop stos in pop test adc mov add xchg mov cmpb push mov dec lea jl push adc inc mov aaa inc stos xlat js sub jg das sahf sub xchg mov mov je cmp je cmp je cmp je cmp je cmp push test je mov mov rcrb mov add jge dec imul out jmp xchg aad push or add dec cs adc xor call xor lock cmp sbb or dec popa jl out pop call call push loopne mov cmc ret mov and mov fs push mov in sub cmp test int3 jg inc int scas leave and lret cmp jo jg emms xor push nop inc outsb push jmp xchg adc inc mov inc cmp jmp jae mov test cmp out cmp ds jmp stos pop daa xchg pop lods adc xor adc and fldl add cld add clc push ret inc push mov jle ret loope add pop push mov cmp rcrl push xor pop cmp sbb rcrl push or or sbb bound cmp add adc in popa jnp pop add jmp and lods insb lea add adc outsb popa movsb bnd add fimul cmp dec orb cmp pop jmp aas or (bad) (bad) add sarl xor xlat inc les popf adc and scas aam in jne arpl add clc sub add mov push sub popa jge inc push mov jno clc jmp mov loop shl and sub in shlb mov dec xor add es ja lock ficompl sti add add inc ljmp js icebp mov jo add je cmp push dec test ror or xor lock and sub jno mov mov xlat push fildll ror and mov negb and add (bad) adc pop pop ret sbb mov sete dec (bad) jne popa mov cmc xor out call loopne mov enter pop or sbb jg cs scas jnp xorl addb or shr or dec scas push push (bad) ja inc add (bad) cld push xor call inc push push movsb cs sbb mov imull dec in in cmp idivb inc call sbb lock cmp jne mov cmp jge pop sbb icebp and das cld adc ret lock add inc loopne push in lock jmp decl stos fbld fcomps in xchg jge or std pop jnp sub fwait xor dec sbb iretw shr int3 adc into stos push mov dec rorl fldl xrelease mov mov lock test cld (bad) fadds ret cmpsl cmpl jle cwtl or adc or jl inc out lcall lea addb out push insb icebp loop sbb mov cmp add dec test cmp xor lock jne pop mov les cmpsb push in xchg cmp xchg mov pop dec mov dec mov inc popa add adc dec push push push lock (bad) and lds out pop pop mov test push cmp pop in enter mov clc pusha mov (bad) je add sbb test add mov ljmp iret inc cmp xor sbb pop (bad) xchg lock mov mov inc add mov pusha inc adc lcall mov add inc sbb xor or ret xchg jecxz jmp jnp cmp sbb cli pop jne ds push inc cmpsl push mov push clc popa xchg les cwtl push pusha pop push imul jecxz push push ja das pop test rorl cmp les imul outsb pop inc inc ret cmp cmp sbb add and jl pop test scas cmpb mov movsb out mov mov jne movb fisubr cmp inc add loopne in sbb (bad) sub add inc cmp dec jg gs push mov (bad) in shll in and je xor loop mov lea ret fwait jg movb pop mov push push mov mov jg (bad) mov (bad) fcomps mov jae imul gs xor cs insb pop pop mov je outsl outsb addr16 popa je dec popa insl gs daa outsl loopne loope pop sub jecxz inc sti in scas jns movb int3 push inc lcall push jbe sarl add ja or inc arpl jl pop push stc push cmp or pop pop cmp ds inc stc int shrl mov dec ret add push repnz mov popa cmp push inc xchg test jno and popf push lods loope jmp repz js push xor cmpb test nop jge call enter sarl and in xor scas push add cmp stos pop cmp jne adc popf inc orb sub sbb add inc bound adcb les xor cmc add (bad) mov (bad) outsl data16 popa jb lahf lods data16 mov jae aaa jl jbe xlat inc cltd inc jo xchg jo ja nop addr16 mov pop sub cmp jbe mov push or mov push sbb mov or lds (bad) jp mov test sbb add mov dec or fnstcw sbb or mov bound lea scas cmp shlb inc dec add ret ds or sub mov movsl loopne test xorl fsubl jno xchg fistp cmp cmp cmp jno or mov pop mov adc mov cmp jne pop mov mov ljmp pushl les data16 add sub pop mov (bad) push orl sahf je sbb mov push mov cmp mov dec pop sbb mov pop pop ret sbb sub sti lock sub sub mov fcomps test add or mov xor lea hlt clc add mov add insb mov (bad) mov (bad) dec js inc (bad) or xor or adc mov mov ljmp (bad) xor sbb aad movzwl inc cmp ja mov inc jmp cmp and lea cmp ja fcmovb jmp or mov adc push and sbb and lret add jmp pusha add dec mov rolb dec or cmp pop test cld jb or dec movb and sbb or add cmp lea ret xchg xlat mov hlt std fwait xchg (bad) mov inc loop rclb (bad) push mov sbb jne incl mov xor roll fnstsw loop sbb loope and je cmp adc mov mov sti orb mov inc js cwtl and or mov jbe,pn lret dec dec dec cld mov std cmp inc inc lcall cmp or mov movl mov jbe jae ret xor mov int sbb cli xorb sbb adc jo or jb inc sbb or xchg mov scas jmp loope pop (bad) mov test call mov adc lea incl mov ficomp xor push sub dec and xor pop add gs or jmp adc enter add adcl popf pusha mov add aaa pop cmp xchg fadd jp add and (bad) adc xor int3 inc mov mov ja and lods ds cmp inc xchg rorb inc lock lea nop mov cwtl push cmp adc (bad) jge push add ds mov mov jle rorl fdivrl xor jns fldl push pop ret aas push lea push push shrb lock cmp jl xor mov xchg je xchg sbb rol lcall daa jnp daa stos pop loope dec cmp xchg and movntq mov in sbb or mov stos out ret clc subl add or add or fnstenv nop add xor out sub pop mov (bad) and push pop in divl call dec jo mov adc and call cmp jbe jo cltd movsb mov or dec adc mov sbb ja clc mov in daa mov dec loopne fnop push push pop ds dec mov sarl mov cmpl or clc loop pop adc out movsb inc or jmp push mov push push aaa pushf sub das cld mov es jns adc test xchg lret mov jbe and ret mov or or mov out (bad) dec test test cmp mov dec cmp jge sub aaa leave cmp jle sub sbb mov adc mov or aam or add jbe cmp xchg push inc inc add insl fnstcw dec push or sub cltd jo pop jo fwait clc mov xor or push lcall fs gs (bad) gs inc jb jns es imul std xchg (bad) fiaddl cmp inc outsl arpl inc gs jne je mov call outsl je imul mov gs outsl inc arpl lods or or or out mov jle inc xor xor (bad) outsl insl bound outsl js fs lock pop push imul hlt cmp andps outsb dec inc pop addl popa dec add leave mov xchg hlt lock dec dec outsb mov call dec dec dec dec fcom ror dec dec dec dec enter dec dec dec dec mov dec dec dec test mov dec cwtl xchg nop mov dec dec mov dec js jo dec dec dec dec push dec dec dec pop push push dec dec dec dec dec dec inc inc cmp dec dec dec cmp sub dec dec dec sub sbb dec dec dec sbb or dec dec dec or cld mov mov pushf fsubl movups mov add lahf clc (bad) jb jb lock call in fnop jb jb aam int3 enter jb sarb mov test jb jb mov jb xchg nop mov test jb je insb push fs pop pop jb jb push push dec dec jb jb inc inc cmp jb jb xor sub jb jb and sbb jb jb adc or cmp sbb cmpsb les cmp cmp cmp cmp cmp cmp cmp cmp cmp jo cmp cmp push cmp cmp push dec cmp cmp dec inc inc cmp cmp cmp xor sub cmp cmp and sbb cmp cmp adc or cmp cmp add cld movsl pushf pushf pushf mov hlt lock pushf pushf pushf pushf call pushf pushf pushf fcom ror cmp cmp mov mov cmp cmp cmp cmp cmp cmp mov cmp pshufw daa push jb pop pop push push jb jb dec dec inc inc jb jb cmp xor jb jb sub and jb jb sbb adc jb jb or add cmp sbb movsb clc hlt lock cmp in call cmp fnop aam cmp cmp int3 enter cmp cmp cmp lods test mov pushf cwtl xchg nop cmp cmp mov cmp jl je cmp cmp insb push cmp pop pop push push cmp cmp dec dec inc inc cmp cmp cmp xor jnp cmp sub and mov adc xor rol loop or jb adc outsl inc mov dec xor negl and or fimull nop xor cmc fbstp mov scas push mov movswl lods pop mov and xchg (bad) inc frstor mov mov js ds xor scas push mov pop or cmovle imul dec mov fwait cld or push add adc adc repz adc sbb and sti add scas push mov adc into and neg (bad) pop ret nop scas cmpsl inc mov and cmpb daa stc stc push loopne jb or mov popw push pop cs mov mov push sbb or add sub (bad) je push push mov pop xchg inc cli repnz sbb pop or inc movl cmp sti out add mov gs shlb push push dec inc inc dec add sti fnstenv outsl jb push and dec push (bad) jle inc push dec pop and rorb pop sub idivb inc dec pop dec dec dec inc push das jns and sub xor je or js inc xor push mov psllw repz cmc xchg xchg xchg xchg div clc stc xchg xchg xchg xchg cli sti cld std xchg xchg xchg xchg (bad) jmp loope xchg xchg xchg loop in xchg xchg xchg xchg out call xchg ljmp xchg out out rcl xchg xchg xchg xchg rcl aam xchg xchg xchg xchg (bad) xlat fcomp xchg xchg xchg xchg fcmovu (bad) xchg xchg xchg xchg (bad) rol xchg xchg xchg ret lds (bad) enter xchg xchg lret int xchg xchg xchg into iret mov xchg xchg xchg xchg mov mov xchg xchg xchg xchg mov mov xchg mov xchg xchg xchg mov xchg xchg xchg mov xchg xchg xchg cmpsb cmpsl test fs aaa popf stos pop jno jl xor js jl cs (bad) ret daa loop add ffreep dec pop add xor xchg and jmp or arpl je outsl outsb cmp mov adc test in (bad) pushf cmp jo nop xchg mov leave leave inc xchg in or sub incl jne dec dec gs outsl jb lock adc mov outsl pop or outsb mov dec outsl scas ret and sub scas lret add adc scas mov cld outsb adc adc imul inc xchg adc push sbb lcall mov dec and jbe jns gs mov adc jle mov repnz outsb or sbbb dec jbe divb push insb outsl ja fs dec shll push dec mov orl (bad) add xchg mov sar mov imul ds popa dec shrl insl jle gs scas insb cmp loopne (bad) rcl popa add pop mov outsb fs sbb scas ds popa or (bad) movsbl outsl imul jg mov inc popa jae (bad) mov cli or aam inc inc dec dec and ljmp jo and add lock push adc push and in jbe mov sub movsb enter nop sub and adc imul inc mov dec inc jne xchg je test (bad) pushf scas popl es sbbl lds pop mov loop inc popa fsubl jbe xor bound jb out mov add leave fldt adc inc push sarl or push stos push push adc pop adc popa data16 add jle add aaa or cmpsb les pop dec invd xor inc insb jae movsb inc cmp push test add and addr16 inc cld fldt dec adc jb popa fs push fs xchg les int3 sbbl mov test push rorb idivl in int3 adc pop push pushf out sahf xor inc dec hlt (bad) lcall xchg adc sbb push loopne sbb outsb inc lock mov andl cs adc fwait sbb push dec (bad) imul and (bad) push fsubrs outsb arpl cmp adc push shr div jp mov add mov push mov push lret mov test mov mov mov inc rcll mov loopne adc call mov cmp adc or mov mov (bad) js pop or std outsb fwait nop addr16 adc jne mov push and add sarb push dec fcoms pop pop stos mov adc std xor dec mov int add ja pop add and fisttpll hlt aas mov mov cmp jbe in jg sbb leave repz je movzbl push push call mov inc jmp loop push or cmpsl jne pop mov pop ret inc inc ds mov rorb cwtl pop test jg (bad) (bad) out and sti je jo mov loopne add in out mov scas sbb mov pusha or test xor jg push call aam sub add mov cmpsl mov push mov fnstsw cltd int lret push bound dec fild (bad) scas sbb and mov out jo add hlt pop (bad) mov push sete (bad) flds inc ja jecxz push adc adc adc pop addr16 and mov inc in (bad) cmp jl cmpb jbe adc test jecxz imul clc push sub inc pop xchg mov lock lcall movsl add add sub jb sub std pusha (bad) cmp jl inc mov xor sub jb data16 adc or sbb aas sbb pushl inc dec jne push mov leave (bad) movsl icebp mov sarb les sub scas mov mov (bad) div dec dec das mov movb mov idiv pushl ljmp jbe add mov sub jmp mov dec jne push mov out in adc leave push outsb cltd in repnz or sub push (bad) dec shrl enter pushl pushl mov negl add pop aam ja mov test cld sub int (bad) cmpsb mov mov or mov fstpl scas cltd mov andl push and (bad) (bad) pmaxub ret add add sub add rorl (bad) xchg pusha xchg jno stc mov add mov lods push sub rcrl loope mov ffree ffree ffree ffree pop add aam aad addl (bad) frstor push dec push cmp scas or insl push pop lds cmp add or popf push push mov push inc or sub (bad) mov dec setp adc dec mov mov sub or mov mov pop inc imul (bad) out dec push push insl imul xchg nop cmpsl imul dec cmp mov pop sbb or add enter jl jg xchg dec mov in orb insl mov mov daa add icebp je pop popf or test mov and movb repnz jl inc add loopne sub std sahf and imul add push adc subb mov adc add lea xchg pop adc and test fldt fcomps cld inc setne jmp outsb loopne jmp movsb mov xchg outsl jo addr16 inc mov or fldl fbstp int3 xchg insl mov sbb and out rclb sti inc test push adc and ss xchg movsb mov rorb and xchg cmp add pop clc or mov std add jo loop (bad) (bad) inc ja add push or push push pop jb mov test xchg in mov mov rcll xor repnz dec cmp add rolb pushl notl loope push dec xchg xchg rol stc push dec mov in jae add push push add pop out bound mov stos xchg push addb dec insb out enter cld fisttp aas and sbb pop into outsl rcrl add push dec xor sbb add test (bad) clc fisttp pop jmp rcrb (bad) pop je je pop jmp xlat popf jne dec (bad) jg scas add push cli pushf sarl (bad) (bad) and mov sub jnp icebp pop cmp (bad) mov clc sbb sbb adc cs sbb daa xchg insl pushf es or js,pn xor jl push cmpsb mov lea js jg push in xor imul hlt clc and push jnp das cld imull push xchg lods sarl mov hlt adc xchg add call dec or xchg out lods xor adc inc bound ret nop mov fisubl xor mov fmuls das lea daa rorl aas ss xlat mov dec not mov jbe ja loopne mov mov movsl loop pop add fsubl dec adc cmp inc sub pop lret fldl2t loop lods adc popl or or out (bad) pop adc ljmp jmp out incb cmp (bad) aas xor xor repz mov mov mov inc je and icebp pop cmp push or js fisttpl xor jp mov jl add mov xchg jmp push adcl add cmpsb adc or scas hlt inc cmp lods lods inc data16 insb aas divb inc dec je mov mov pop sub jbe sbb pop and pop push inc (bad) lods mov mov push add (bad) jne jo xor mov and lret sbb pop mov out je sbb and add mov and xchg scas ja pop xor aaa add (bad) lock push sti pop jbe mov cltd (bad) cli push push cmpb adc mov ret mov sbb les or mov and mov ja or push test adc outsb call add jg push pop sbb jb cmp into (bad) jle bnd ljmp repz mov cmc add or jne insb sub fiadd or jns sub jmp test mov mov cmp sub fsubrl ja cmp jne cs and lods jmp adc jns inc mov inc mov hlt fmull pop pop jp inc xchg jae,pn fildl sub jae ret (bad) call xchg pop mov rep sbb cmpb push ficompl pop jne and pop mov sub mov cmp imul scas outsb jae mov add and in dec push rorb adc push or or por xchg ret and mov cmp sub pop jne lea mov lcall xchg out or leave push dec push mov imul das pop nop push mov push repnz xchg push loopne mov jns mov dec fsubr cmp je test jne and ret fist inc je push pusha or sbb imul inc jmp push push lcall mov add xor stc push jne loope jl bound cmp jbe mov aad cmp jmp xor inc inc mov outsl and jmp mov mov fisttpl cld aas and std lcall in mov add inc mov cmpsb ss les dec fdivl or sbb ds jecxz rep out sub stc cwtl pop ds leave cmp jo dec lods out nop fisubrl pushf mov outsb mov int scas pop inc je mov or je mov inc je mov ret std imul mov pop push jl cld cmp jbe mov xchg adc adc adc mov ljmp bound lods imul iret dec jnp sar cmpsb cmpsl aaa mov xor and pop push pop lahf mov sbb ljmp push popf lock scas jl mov pop cld jbe lock je outsb cmp mov and arpl xlat jg outsl dec push inc (bad) or rorl jp (bad) fcmovnu sub add and inc cmp (bad) popf xchg std xchg clc dec cld lea add dec fbstp ret jmp add jbe lods mov jne adc ss nop xchg mov push lea shrl pop push xor stos or movsl es push or push std das pop jge mov neg jmp or enter xchg push mov out nop add ss fs adc cmp inc xor or jg dec mov stos cmp jne pop pop push mov xor mov sub lcall adcb outsb cs mov repnz aam jmp xor inc cmp add jge sbb jle mov cs daa push cmpl loop add rorb mov jge movzwl sub loop jae mov add lea mov mov sub adc sti mov add ja movswl mov add lea popf and negb or rorl out sub cld pushf jmp test jg dec dec dec inc dec inc dec lods or dec fiadd ret dec xchg jge add ret std loope fdivs jg cmp jl or sbb je mov stos imul xlat fcomi fstps rep jmp inc inc mov loop jo mov inc stos pop pop inc clc dec mov add push mov ss jnp mov sbb sub cld add sub add leave mov mov mov pop mov cmp cli adc mov mov sub scas je mov dec mov repz adc test jne sbb adc rcr add cli push sti mov (bad) sti add je inc jne pop mov ret fildl repz or repnz (bad) cmp lret js ret ja lea sbb out jle inc je push push cmp (bad) fmuls dec sbbb mulb loope pop inc loop push mov test pop mov add inc add and fcmovnu sahf out and adc and sub inc sub cmp mov sub sbb and negl sub sub out fs xor sub xor fnstenv xchg into inc cmpsl loopne mov add jmp fstpt jg xorb jle mov rorl ret movsb cmp test and inc push push fimull cmpl add movb or fldt je imul inc or sub out add ret loope adc pop frndint (bad) stos (bad) rcr scas push fnstsw fwait mov testb je call ljmp fbstp lea mov inc sub (bad) decl add in add push cmp jb imul xor stos mov add jns lcall outsl cmpsl or or cmpb jb movb scas loopne out js decb and pop data16 pusha xor rcr loopne adc cmp inc xor out push pusha push or shr mov add jno adc push inc adc push adc adc out pop push rorl je cs push out into neg sbb or or sbb adc jl mov (bad) mov fidivl repnz add mov inc loopne push in insl or dec and lcall push (bad) mov xor mov push sub add pcmpeqw dec sub cmp enter and pop lock push ljmp enter cmpb pop xor (bad) divl pop jmp jecxz rclb sbb inc adcl and mov fstcw mov ljmp mov cmp lods or daa push test pusha jne inc imull js cmp icebp je and fistpll sub clc xlat jnp pop add jg jne mov sahf movsl ret or add push pop jg frstor adc aas jmp fstpt push mov mov mov mov test insl and push add add int cmp mov (bad) jg sub add jae fimull movsl sub aaa mov negb jo jg es push inc imul push cmp seto aaa push iret inc rcr (bad) test mov in or adc out outsb sub add js leave mov in mov (bad) mov inc lcall aam int3 cli lahf scas fldt fstpl fwait cmpsb push add dec (bad) cmp pop mov mov fcmovnb fldl test (bad) jns jbe sbb adc mov xor push adc xor jmp mov lcall clc out xor mov jae or cmp inc stc bound sahf jae data16 (bad) cld data16 add pop adc ljmp in lret adc xchg fildl xor cmc rsm or sbb lock xchg outsb lret movsb dec outsl (bad) (bad) and jp rolb nop std adcl pop sbb stc dec sub lret loopne cmp aam repz iret and mulb jg push enter loopne fisubr adc insb mov imul jb xchg adc mov inc add aas int3 xchg or ud2 fsub fistpll (bad) les add (bad) fnstcw loopne (bad) cmpl jb mulb ja and jb or jb (bad) lods imul cmp ja adc ja xor push mull pop dec incb jne aam jo sub dec mov aas cltd idiv imul js shl add sub bound add stc add pusha ret or lock rol std std pop nop mov sbb xor dec in test rorb fnstcw jl clc push clc add or inc pop pushaw in test outsb lcall dec data16 stc mov add jl addl or inc inc and ret lds mov mov decw cmpl int mov push sub movsl mov pop stos shl cmp xor inc lods js cmp xor js mov adc cmp jb aaa iret popa jbe sub fbstp mov push mov clc xor hlt and hlt mov cltd sbb ss lahf rclb pop pop push cmpsl cmp mov stc xchg inc icebp sbb and push pop inc (bad) adc hlt test (bad) mov inc mov jo inc sbb ja adc adc sub sahf or add xchg jbe rcrl pop mov xlat or aas sahf orl rorb pusha in clc (bad) jmp movsb int3 push mov add lds outsb mov roll (bad) sbb add push and add or sti je fadds mov inc hlt out xchg adc pop push cmpb jne movl jo add push lea or xchg xchg fbld test jb jecxz insl or push in jge cmp ljmp jmp popf or ljmp jle inc cmpsb cwtl test jo inc push xor out out repnz add cmp push shll jmp pavgb js jb popa pop dec sub xor xlat in lea aaa ss mov mov mov je or jne cmpsb add add adc movsb fisttp sti pop add sub adc ljmp ret jne xor adc (bad) dec jp sbb mov ret dec mov test lods dec jp push ret sbb mov xchg pop cmp push iret in ret or test mov jg int cltd jmp jmp push ret mov jne xor xchg inc cmpb jne push or in add enter jns add add lods pop mov (bad) or push rorb mov iret push nop sbb sahf addb push pop mov into or sub incl sbb dec push jecxz inc xchg adc dec add (bad) call cmp aad or jae pop jmp insb or ja mov repnz jns jo mov mov lahf xor pop mov pop addb std sti dec jne mov xor xchg fisub cmp xchg subb in pop jbe or or or or or or or push fadd test incb or or jl cmpsl jge and push jae int pushf cmp out (bad) popf or out mov mov hlt fneni(8087 push (bad) mov or add sub test xchg and mov mov pusha out xchg and fcompl fmuls jns hlt dec dec pop pop cmc xor lock jo inc sub out dec or int pop push mov mov je add jmp out aad loop (bad) push mov les (bad) push mov pop bnd mov les and sbb pop mov cld xor mov jbe jl or dec jg je mov add (bad) sbb pop or je or je jmp cmpb pop jmp pop mov movsb jnp ss mov mov fs sbb add adc loope add lods mov ljmp outsb dec push data16 insl or aam call sbb jle cmpsb out sbb inc fcoml fcomip insb mov inc pop inc call push out add in cmpsb and jns add in ret mov inc test ljmp jg cmp subl (bad) daa xor xchg imul add out stos dec ja jns adc xchg cwtl inc jmp and add int3 pop stos push xor or lods in fwait sti out or test or adc out adc mov out into jge js loopne sbb popf add and and push imul xchg je inc xchg jmp pop aad popa sbb push test fucomi add pop mov or aam jae inc icebp insb sub mov or adc jnp shll mov (bad) push loope stos lea dec fcomp push mov mov fbld inc dec das push dec xchg or mov ja adc and inc jo shrd jo mov test sbb mov or mov jbe sbb lea mov mov push fistp xchg xchg js (bad) (bad) mov (bad) adc pop pop cmp imul aaa adc add je sub pop dec (bad) push sbb cltd call das xor jmp mov movsl mov add adcb xorl xor ret (bad) adc das lods lods hlt sub jae jnp int sbb pop pop (bad) sbb mov mov idiv mov adc call adc pop orb mov cmpl nop inc inc daa push sub or push mov mov dec mov sub inc add mov and iret and adc sub mov out (bad) stos ret jo fwait pop jl pop in ds push (bad) cmp jne incl cld pop lods adc in pop arpl scas adc (bad) jmp sub je dec je sub sub je mov adc push push es push inc mov xchg js clc jle fadd daa xchg sub pop inc add or std or adc les mov jg jl pop pop mov jg jle inc rcr mov mov loope test mov mov iret aam jb fs rcrb jl adc adc inc stos add and inc scas add movsb sub mov cmp jg mov dec incl ret cltd xor sub add xchg xchg sahf (bad) sbb jbe cli incb push adc pop and out cld ja xchg gs xchg psubusb mov loopne push jmp (bad) cmpsl and inc out add adc shrb pop xchg popf xchg mov mov push mov ds push out jp and xor xchg mov sbb or adcl (bad) fldt push popf mov cmp scas dec adc dec or mov mov xchg fcomps fisubr xor mov cmc fldt nop add add in pop in pop jmp aaa or add and mov jmp mov and in call mov jmp aaa int cmp repnz sbb jmp xchg and mov pop push movsb out xchg dec pop push jmp cmpb inc icebp call xor loop pop xor (bad) push fstps out or xlat fmull lock add insb neg incb and fs jne mov add or fldenv add jp push pop cmpb xchg mov xor cs mov mov and jmp out xchg jne cmpb frstor jne sarl add jne imul imul fsubrl fisubr pusha cmp fcomps adc test pslld dec adcl sbb into cmpsl add inc or jno inc (bad) add dec pop out sub jmp or mov lods faddl aam lds test jmp push pushf mov jb loopne mov inc loop pop lds inc push cs xor pop cmp inc add and cltd xor outsb sti push xchg lret iret je addl orl inc push enter add sbb daa mov subl enterw xor ds ret pop add mov xor rcll pop sub mov mov mov div ret out repnz xor or xor xchg into push xchg in add mov mov xchg cmp test movsl pop dec call int3 mov jno lahf jbe lret mov cltd mov xchg test fsubrp cmp cmp push les jne dec cltd fsubr fistpl aam sbb or scas fsubrl or fs sbb fisubl fstp push repz dec push push and dec daa adc push sbb mov sub jb or xchg sahf and out cwtl enter mov lea pop dec rorb xchg cmp in pop mov jmp or in loop loop aas sbb pusha or dec out addl add adc cld push lods xor movsl lcall jle add mov rorl dec push add mov xlat dec cmp push sar test inc clc sbb push mov mov rorl inc inc dec push fwait pusha pop xor inc (bad) mov in lock cmp movl lret or shr cmp xchg and pop add pusha scas xchg push in or add xor in ss out dec call adc and call adc sarl xlat lds xor lock push jl je xchg cmp js add xor pushf into or movsl mov xchg pusha inc jbe lods xchg sub mov dec push (bad) jnp mov cmp mov pop insl std push add in fxsave fist rcrl cmpsl mov pop mov aam fiaddl lods or jbe orl add cmp add fildll dec cli inc mov mov inc clc pop cmp hlt push push add loope scas mov adc fmul xor aaa push fs jne scas pop repnz dec pop mov or dec clc test (bad) inc add dec adc or repz xor xor ret jg inc je sub je scas ret pop arpl add sbbl jle lahf mov push sbb jo lea test sub pop arpl add jg mov scas je mov mov (bad) xor jmp mov jmp iret adc ret add push mov sbb jmp and xor jmp in mov leave in jle pop push stc scas in cltd orb cmpb cmp add add sub fmull mov cmp fisubr pop pop ds pop sub or jbe inc xchg (bad) mov sbb rclb mov sbb test dec cmp and add xor mov dec fsubr or popf gs sti ja ds mov xor jo rolb repz insl xchg mov mov mov push sub int3 fsubs addr16 (bad) nop lock jae and add cs ss pop loopne pop sarb push push inc add inc sbb test push fmuls popf insl adc nop pop sbb lods or jae pop and mov xor std mov add les mov stc push lea cmp jns mov data16 cs inc cmpsl loop or cmp pop mov or cmp pop mov sub and mov cwtl fwait or inc out mov inc push or dec push add jle xor inc sbb fstps jg adc add lds jmp push pop jg push inc push sysexit push ja sub lea fldenv test pop pusha imul andb test jmp mov inc or les mov inc sub mov or push add inc and scas adc test leave mov pop mov clc ret and and incb mull hlt ret dec mov or add insl es add mov lahf xor cld ja aad xchg add cmp jg cmp sbb sbb inc les fwait mov pop insl cmp xchg (bad) and (bad) or incb jo pop pop mov decl push loope js mov push adc cmpsl cli push sar lret adc ljmp add jmp push cwtl adc out andl inc or (bad) or pop push data16 movsb mov cmp sub cld push nop sub mov jbe test or lds lock add out cmp aad pusha push in or jne or jge clc push in js in xchg push loopne les xor in sbb inc dec pop xor mov xchg adc add jns xchg dec jl xor push add sbb js movsl loopne into jo jbe and mov add repnz xchg xchg pop push push cmp je jmp xchg lret leave rdpmc je jmp xor lahf lret jmp and add mov add lcall or or mov push push mov mov cmpsb and mov add or nop lret pushf outsb adc mov mov xor mov fldenv cld movaps dec inc xor bound jecxz jg inc or arpl shll fisttpl js pmulhuw push sub mov or scas sti loopne lea jno or pop mov and mov icebp jl jnp jae or enter cs mov xor add cld jo pusha ja,pt pop outsb in sub addl cwtl enter mov mov lcall sbb (bad) int3 or mov test dec inc add and gs mov ret mov std sub mov jae jae mov mov cmp mov outsb push jmp sbb hlt add mov push outsl sbb scas shl adc adc xor push jp sbb lea loopne cs push insb pop daa inc dec outsb mov and (bad) mov add aam mov fdivrs mov lods pop mov clc sahf fbld loopne mov mov jnp inc sbb add jle addr16 fidivr movb adc push add xchg lods pop inc cwtl inc or cwtl adc inc aaa mov sbb cmp adc loopne lock inc adc daa mov test lcall dec and in (bad) push xchg mov mov jl mov add mov hlt mov jle sbb adc adc add inc add mov fidivr add jne cmp (bad) (bad) mov fucomip clc mov mov test hlt cmp loope loope pop jne pop cmp or cltd jae jae and xchg mov xchg fdivrl mov inc pusha sahf and sbb frstor je in dec xor mov jbe imul fldt mov js pop push and (bad) mov cmpb mov adc add dec or (bad) dec jmp sti add adc aas or jb mov sub and jns dec andl loopne incb add add pop pop jle cmp add outsl sub and dec aaa insb movsl sbb stos xor cmp daa (bad) fstps xorb ja test or inc call decl inc pop jg mov scas das and inc sub push add and sti adc sbb hlt inc inc inc jge sarb popa mov and inc and add mov sub hlt jge fstpt fidivr and xchg dec push sub or mov add mov aaa fucomip (bad) (bad) cmp push inc xor rorb mov sub jmp decl add jb inc fwait movl jmp mov int jge pop mov jns push push nop sub sub xor push daa adc das pop and mov (bad) dec adc or shrb jae push fs push xor mov and push rclb push (bad) stos addr16 add add inc cmp nop daa push sub push test or aad std xchg or jmp pop push test js test mov aas testb in adc jmp stos push outsl idivb dec sub andb pop add mov sahf jge sbb imul xor jecxz jp es jo mov cmpb cmp cmp adc sub aad clc push (bad) push lods orb andb adc imul (bad) clc sub aaa pop cwtl mov add arpl pop add sub jbe fmuls jp sbb mov inc movsl insl pop into adc lock daa push mov loopne hlt (bad) xchg mov je enter adc xor adc inc inc (bad) and mov jne fidivr and stc dec rclb loopne stos and hlt ret jge mov in fsubs iret mov dec or or jge add inc jns fcomps test divb push mov sub jb inc mov jbe mov (bad) sbb lret jne fldl or iret cli xchg outsb push pop jne add mov icebp clc pop ja pop or xchg fstl push or movsl rclb dec adc pop jmp jg xor mov sbb data16 ja outsb xchg sahf mov or shrb ret pop xor dec jg add test cmp add mov mov push cmp ja mov or mov in ret mov popa mov (bad) lea inc cmp mov and bound punpckldq inc push scas movsl fmull out mov imul rorl nop fdivl out dec jne jbe stos icebp jmp push xor shlb or and pop arpl mov imul out clc movsl icebp sub jne push lock jne je (bad) cltd (bad) les pop popf je pushf or xor mov jo lcall adc mov add inc dec ficompl sti pop adc mov mov mov xchg xchg in push sbb das mov dec mov sub repz movsb add js sahf and movsl dec jb mov and fcomp mov jb cmp jle sub mov xchg in test dec inc test dec jge enter enter insb inc mulb and je xor daa sub pop repnz dec aas ret adc enter hlt mov mov cmpsb cld push adc xchg push jb jnp adc lods movsb push mov dec add aas xchg push mov adc ljmp movsb insl das fs out scas insl add fs inc mov mov jo push cwtl test daa and sub mov addr16 jnp mov int3 pop push cmp ss jo shl in in adc mov (bad) dec rorb adc pop lock in mov pusha es xchg xchg popf add push and test cmp fisttp sbb out (bad) in mov mov push int mov pop sbb lods mov sbb mov mov repz mov push adc pusha or movsl sarl pop push push jp mov in push and mov push ljmp mov test pop xor bound add inc jb gs jo dec les stos xchg lock inc and call dec ret xchg and lock mov inc out jmp add or adc or mov icebp pushl inc cmp jne mov and and test jle and pop jbe xor mov inc clc xor and mov (bad) pop fnstcw div sbb mov in xchg add ljmp ljmp fimull mov mov inc or mulb mov inc jle mov sbb sub mov jl add les fcomp add pop sbb std leave out lea roll je aas nop ret or movsb fsubrl push add (bad) push mov shrb adc inc inc call incl scas xor mov icebp pop adc sbb int test sub inc push add pushf mov cmovae std push or xor push imul (bad) jb negl mov dec test shlb in push sbb clc pop loop les add scas mov je push ljmp sub inc stc mov mov ret mov lea jae aas lods mov jmp adc ljmp add in inc mov in aam orb mov mov xchg sub lds xchg ret incl mov (bad) in inc decl cmpl std mov cmp inc shr mov cwtl or mov xchg sbb mov jo clc incl scas add cmp lcall xor jmp inc aad add fstpt mov inc lcall xlat xor sub dec or dec lahf xor test mov cmp rorl stos jmp hlt adc or xchg push lods lods adc pop xor and push or es inc cvtpi2ps add test daa push (bad) xchg movl mov cmp inc inc enter mov iret xchg and jne cmp fcmovne movsb (bad) lret js in (bad) aad arpl ss aaa push int rclb and cmc call sbbb inc pushf arpl repz je outsl imul js outsb pop je lret int add cld jb dec xor pop jo (bad) in push sub push xchg jns idivb je dec aam int3 sahf repnz jl push mov cmp repz add or add pushf or sahf clc test fdivrs cmp cmp cs outsl push pop cmpsl xor out adc pusha jg push ds mov push pop xorl imul jne pop ds loopne sbb int3 jle sahf xchg aaa adc dec adc push xor or inc in mov push adc cld jno dec fsubrp cmp xor cs lock xchg ja nop xlat in push sub leave jae dec in add mov repnz iret fcompl aam daa iret leave mov js fmulp cmp push loopne mov cmp mov ljmp (bad) mov fcoml test dec fmulp jae lods mov daa out out (bad) cwtl inc in xchg push andb leave cmp mov leave cmp push fs and push xlat lods rcl rcrl nop jb dec add ds mov test mov and les dec in mov jno xor lret add in or in cmp mov jl xchg cmpsl jge orb or and fcoms (bad) xor and and xchg inc push jb aam shl adc xor ja outsl sbb mov jmp (bad) (bad) movd subl int sub mov push cmp mov call push stos push mov rcrb and js hlt lea in call aaa cmpl add cs dec das sti pop faddp dec pop ret dec rclb cwtl mov sbb push ror or (bad) mov xor (bad) and mov fwait cmp decb cs pop sarl xchg xlat jb cld xor and xor shl leave adcl pop push aam push jb jb cmp jecxz aad rcrb clc clc lea jmp ljmp cmpb cmc sbb pushf xchg push push (bad) mov pop cmp clc mov and imul adc sub sbb mov add adc jns jnp push xor mov push or fistp (bad) daa nop add xchg aam (bad) loope pop and push call or mov mull jno lea jo out imul pop (bad) in fnop movsb test mov cmpsl rorl mov push pop scas sbb sarb add ret data16 push push ror mov mov sub sbbb mov (bad) and mov dec xor and and xor and sub xor and dec mov dec xor mov push int3 mov pop shrb aam (bad) je mov test lock pop aam dec push mov call dec aad in mov aam sub in jo dec hlt sbb sbb pop cmc pop xorl push jns mov daa dec add outsl je fs jne pop (bad) inc loopne sub dec adc outsl fs outsb dec jb pop outsl jb (bad) (bad) cld pop inc insl jo inc jb insl push je pop push and cmp mov sub (bad) jns mov pop shlb inc jae pop cmpl pop sbb dec sbb loope dec repnz xchg and clc xor sbb in ja adc and icebp mov push inc push dec fcmove cmp movsb loope or (bad) out mov rcrb bound add sti pop adc incl add iret repz adc or fdivp jnp (bad) cmp inc inc dec sub je pop or mov push adc dec dec aad push cmp nop and pop xor xchg inc andl or mov dec jecxz ja pop add mov jne sub int pop adc fild faddl (bad) adc and and mov enter in pop push cwtl and addr16 sub (bad) ds pop mull sub adc jb je nop nop sbb pop jb xchg fs pop sbbl and dec outsl and inc or out mov repnz fidivr iret insb andb inc jb sbb adc les jp insl jo movl ds mov sbb iret push and leave nop nop xchg push icebp cmp push outsb divb pop in repz hlt (bad) hlt pop sarb (bad) sbb push adc jg xchg cwtl je loopne xor inc cld ds mov mov adc xor and push rcrl cmp add in add out cmp lret cmp dec test adc or add daa call xorb jle in popf nop dec in loopne pusha cmpb add inc loope adc and xchg dec loope loope cmp push and add loope loop inc dec enter cmp test lock xchg cmp mov jg xorl and add jo std mov clc sub int3 (bad) std mov sub dec je sbb jecxz mov data16 xor lahf push nop es sarb add or pop add adc xchg out dec pop clc clc mov ficom sbb mov and lock in lock mov stc sbb js call push repnz fsubl je nop or jl jae cltd mulb add loopne fisttp movb mov enter aaa int3 or jb jecxz stos push les fcomp enter and mov jl js sarb mov mov push cmp sarb movl lret push je negb lcall adc rorl (bad) iret cmp add in jle ffreep add and fstpl xlat mov lea add mov adc roll sarl dec adc lahf ret es fldenv sarb pop push push repnz xchg mov mov add xchg jne pushf xchg lods xchg aad (bad) or mov test (bad) insl fimul xchg pop inc inc aad dec pop mov xlat test (bad) mov testb cwtl mov add or nop sub jmp mov in fild and adc lcall jmp mov and lock loopne hlt jl inc xor lea (bad) (bad) push call aas jp inc add inc (bad) mov stc lea mov xchg inc sub inc pop dec inc rorl aaa sahf jmp inc mov addr16 xor mov dec repz dec pop daa lock cmp sub in fwait or pop test mov mov in test push insl push nop pop pop sahf ret jge ret xor xchg (bad) adc or cmpsl aas jmp push jne out add xchg jbe cs leave push adc repnz div and les or jmp mov cld xor test jmp mov pop jb mov enter inc push adc pop ret aas aas dec cs or lea mov add (bad) into xorl cmp lds jmp sbb sbb loopne in enter in loopne popl mov push insl lock cwtl add mov and mov and pop inc data16 or adc in xlat fmuls rclb jb cmp push icebp pop mov inc call pop aad aam jmp push loopne in fildl xor dec ds cwtl sbb rcll inc (bad) ds lcall adc imul cmpsl dec dec rorb sbb push and dec mov and mov xchg jg lret xor inc (bad) adc xor fsubs movl out push sbb sub or pushf (bad) (bad) cmc pop out cmp je xchg dec roll jne push sbb push (bad) cmpsb imul or int3 jl jg neg cmp lods or xor pop xchg mov mov mov push add pushf add in outsl test pop (bad) pop sub jns xchg push in popf andb sti push mov mov mov and inc sbb jo cli adc cld in fstpl ss popf ss imul imul push add in pop in lock nop aad rcrb (bad) call in in jp xor std mov loopne push mov inc mov inc mov (bad) and inc lea pop orb jg fsubs call pop add mov xor cmp (bad) cltd xor mov inc jo sbb fucomp cmp ds test jo,pt sbb ficom adc xchg mov mov mov mov add adc or sbb nop xchg adc mov out loopne push push inc mov and pop daa mov adc or addb or cmp dec repz clc aas or movzwl cmp ja inc add dec mov sahf cmpsl stc cmp or sub dec repz outsl lock fidiv daa shr push or and pop test inc loop mov pushf hlt or mov and pop mov dec fimull (bad) xchg in movswl insl xor inc xorl ss sub (bad) xor add cs push daa xchg pop push inc fnop lock test and jae add sub push push xchg in sub call shr xchg dec loopne lahf nop push or call push fsubl test fnop movsbl xor inc neg aam push dec enter shlb sbb rorb sub (bad) call add enter xchg enter cltd fcompl push rclb in test sbb jg pop dec je jmp sbb add xor outsl enter xor test add inc push mov mov test mov push outsb sarl iret repz mov repnz inc add mov pop and jns xchg sbb les xchg mov xor aaa mov mov jecxz mov inc fldl mov dec xchg sbb insl cmp out rorl mov pusha xor sbb nop push aad mov jmp (bad) (bad) xor cwtl xor stos or xchg jmp add aaa nop dec mov jmp pushf mov jbe dec mov rclb mov mov push repz cmp movsb imul adc push sbb icebp mov in inc pop test add scas jo sbb repz pop mov in popa iret in repz mov rorb (bad) in xor adc data16 in ret and insl hlt loopne xor loopne aad cmc add adc mov nop xchg jne aad and out mov adc cmc cmp loopne dec ret mov mov mov xor jns lret (bad) sbb xor repz xchg scas mov movsb sahf fnsetpm(287 jnp push jp daa in or push aas pop aas and es push ljmp push ss aad xor fdivs push inc dec fadds push inc push push adc push jb cmp cmp in in test adc aaa loopne pusha inc pusha jnp aaa xlat test aaa fcomp xor bound aam aam pusha fs adc rcl imul add inc or inc jecxz insb enter pusha aaa cmp mov aaa dec jae arpl fs pop push clc outsb mov repz shr push aas cmp fcmovbe pop pop int3 pop pop cmp repnz repz mov shlb or rclb mov xor bound mov sbb pop inc ja mov mov jne ret pusha cmp aaa push es adc subb cmp cmp adc jno push rorb imul mov xor cmp cwtl jno xor outsl sahf adc mov nop xchg (bad) in popf nop ja (bad) cs jo push mov add add popa adc jmp xchg cmp test sbb data16 int3 loopne in adc test cs mov (bad) mov adc ret mov sbb pop jmp lcall push mov notl and test movl and inc pop xchg cs iret outsl and and mov or shlb xlat scas dec das push sub fstpl fwait stc xchg int3 push pop daa pop push add js mov test lret push (bad) (bad) adc xor push pop loopne add pop or fist repnz cmpl jb imul mov inc sub sbb xlat dec xor insl jo jns dec jne cltd jnp aas pop (bad) and popa inc cwtl nop (bad) ljmp roll fwait cld fcomps add inc outsl jne xchg mov jb outsb arpl and sbb xchg imul adc pop add pop fwait aas xor and push outsb imul inc arpl ss xor push xorl xchg sbb push adc aaa mov push add sub clc lock mov adc sti pop mov cli and dec ja test xlat push movsb add incb out push dec data16 inc sti pop dec mov in insb das add pushf cld lods dec cmp sbb mov cld stc mov adc jb xor dec push cmp xor lea add xchg and outsb inc mov sahf aaa adc pushf test leave mov push in or sub mov outsb pop and (bad) scas in mov lahf jecxz enter inc outsb jns xor test inc push push gs inc sub shrb add setle mov xchg in xchg xor fildl add test mov and inc fmull push or incl sub das pop fmuls xor insl or fdivp cwtl cmp inc (bad) mov jne out jb cmp and (bad) cwtl addl xor inc and adc add subb mov icebp sub jge inc lahf icebp test cmp les outsb (bad) adc lcall movsl cmc push lods inc pop pop mov lea test clc lahf shrb inc call ret movsl ja loopne inc add (bad) xor mov inc mov call and fstps adc ret xchg and jle outsl mov cs jno push dec jecxz addr16 test mov xchg les sahf push dec mov add out insb push ljmp inc jbe mov xchg mov cltd lods jle and push testl adc (bad) mov (bad) loopne push sbb cmp popf xchg rclb test enter enter pop fucomi pop pop aad inc fcompl adc pop or sbb sbb cmp and xlat cld push add jns rclb mov xchg setg inc mov add arpl call leave loope adc enter push sahf in andb decb and push pop sbb cmp leave mov cmp sbb sbb call dec pushf inc sbb cmp xorb rcrb ficompl add xchg mov cld or or sarl inc dec jne xchg and xchg aam push cmp add out cmp aad aaa ret pop js mov jne out add (bad) shll dec mov inc cmp adc arpl cld jno loopne stos xlat shlb lret sbb subl jae jne aam aam iret imul loopne adc add sbb out jbe aas mov jle ljmp adcl or jo bound cmpsl in repnz stos lods shrd in in scas nop xchg in in xchg xchg xchg xchg in in xchg xchg cwtl cltd in in lcall in lahf addb addl xchg test cmp xor cmp sub push ljmp add push add popa cmp data16 rolb adc loope jl jle push rol lcall ret pop adc xor test jne sbb mov dec jmp cs dec xor cmp jle sub xchg dec js xchg push in outsb insb insb inc adc addr16 mov jge xlat rcrl push loopne cmp mov (bad) lods sub lods add shl aam or int3 (bad) lea scas mov or aam sub fbld cwtl loope cld sbb mov dec jl or add mov sbb sbb in lret je mov and sbb lock add and jmp jle in je jl in sbb loop mov insb sbb test out jne ljmp mov mov mov cmpb je (bad) loopne ja lar decb cli adc ja jae jmp call jmp dec loopne add add dec (bad) push add add adc add ficoml movb pop pop (bad) into sti or mov mov push mov in push push adc pushl jne mov mov cmpb ja jb add add call in xchg out out mov mov sbb inc mov scas mov push fwait cmp jle push mov add cmp cmp pop dec lcall adc inc mov add testb cmp lcall adc or call xlat movsl xor inc rclb adc (bad) (bad) (bad) and lea aaa clc sub dec xor clc inc cmovl outsb sahf in inc test gs pop and sbb jmp ret xchg mov pop xchg sbb xchg or jo in or adc outsb push adc (bad) mov into hlt dec add loopne adc or ret or add or lret mov idivb cmp add lock lds arpl mov adc dec out dec in dec cmp add push (bad) dec push xchg add mov mov add mov xchg cmp add adc lods test add inc daa mov movb adc test faddl jnp cmp push push sbb inc aam xchg jge or dec fdivp lahf mov insl or sbb fisttpll cli movsb daa call jle mov add pushw or cmp or and (bad) and pop lret add fwait push test ret pop jge shrl jecxz xchg out sbb aaa or out add (bad) (bad) mov and push out sub sbb clc fisttpll and cmp adcl xchg outsl xor iret push mov and mov cmp jmp pop xchg sbb sub jmp and jb insl fs sbb inc ficompl cmp call jp clc push cmp js jno pushl jge mov sbb adc inc or adc jb popa or out insl ja jbe in sbb jne movsb stc add pop adc rcrb fbld clc dec or dec add lahf in fwait sarl jbe fnstcw daa fxch inc in cmp cmp or xchg and nop or fucomip cmpsb inc fwait or insl add sbb cmpsl outsb or aas pop mov push dec outsl pop jne inc insb loop xchg pop jb iret scas movsl inc aas mov or or (bad) incl imul lret idivl mov dec gs int (bad) pop push sbb push or jg gs inc insb popa push jae or fsub jnp xchg gs xchg add cli fldl xor push inc imul gs dec sub or out ficom sbb sbb adc mov push cmp outsl imul add insb jns push scas outsb out dec out mov call push push (bad) bound or jb or mov mov cmpsl or dec imul stc sbb push or imul test or test (bad) push dec jp inc xchg (bad) cwtl gs add mov sub ja aaa out cmp or dec gs sbb jae xor insb fldenv outsb lds and inc jne icebp js or bound adcl inc jbe dec or dec rolb push gs xorl push mov ds adcl shrb adc test adc mov inc inc bound mov mov cmpsl popa sbbl mov pop mov mov pop scas fbld push daa or mov sahf pop and adc std insl cmp or nop (bad) pop mov out inc pop add inc cs inc and push inc fiadd enter xchg mov cmpsl push and out adc mov dec imul mov addl scas int3 mov push stc push add push xor ds mov adc sub mov inc sahf dec outsb mov (bad) add or nop mov sub inc mov push imul ficom dec in mov mov dec mov push jo cmp mov outsb xchg xor push add test and pop mov (bad) enter adc pop pop mov push scas ds rolb cmp fcmovb or pop mov push outsb push add lock outsb aas push or add incb mov push add and movl rorb test xor imul adc int3 movsl jbe outsb call in mov inc jmp sbb push cmpl push pop data16 xchg xchg pop or sarb in nop add inc push mov adc adc or out xor cmp stos fist dec leave jae fs jo lds xor pushf jae push rclb sahf cmpsb add scas cmp dec inc mov (bad) sbb in push rcrb add push adc cmp orl add cmp testb inc pinsrw push mov fdiv mov pop and jbe push js sbbl call inc or inc imul movsb dec aaa fmuls or pop pusha clc mov or mov sbb and pop pop sbb iret or inc push or mov adc or aaa pusha sbb or pop dec and fdivrp xor pop fs jl jbe or push inc inc dec push inc ss xor push sbb push sub out imul dec pop push or test push pop movsb push loopne jnp mov lock pop xor push inc into sbb fstl or and mov push vmread and cmp out xchg sbb sbb push push cmp push adc fbld push je push push push xchg pop cmc (bad) mov mov sbb xor sbb out xor mov pop push inc in hlt fistp sub mov dec jb push pusha scas add mov jb mov out cmp add addr16 adc (bad) adc xor xchg pop inc dec sub in xor sbb ds cltd dec push fimul jae in cmpsb idiv push imull repz inc jnp (bad) int3 imul sbb inc pop and pop dec cmp repz cmp andl adc and jb sbb add pop and outsb dec lret les cltd pop inc push sbb in xchg sbb testl stc sbb sahf out ficom dec pop dec enter sbb int in cs push pop push ljmp test sbb pop popf dec nop push clc pusha sahf in dec repz lahf mov push iret repz push fucomip add dec mov aas or adcb cmp out add cltd push adc aad inc xacquire dec sub adc mov pop pop push stos pop sub enter sbb fisubl jl lock aam jge xchg gs push push addr16 data16 push mov imul jo push and movsb cmovp xor icebp or ds pop inc mov cmp or or push and inc xchg movsl dec sarb fist aas pop call rcll stos mov dec mov mov aas cmpsb add push mov mov (bad) mov adc aam pop push cmp aam lea fwait repz repz movsl test inc add pop sbb inc (bad) int dec (bad) inc push in shlb cmpsb aaa jne add ss clc into sarb and xchg add icebp mov sbb (bad) sbb jno mov addr16 mov xchg push push jo adc jnp pop jbe push addb push sbb push cmp sti adc cld push lcall sti inc cli (bad) stc (bad) clc push push push push push push out out fwait loop push lcall and sub out sahf je dec push pop fimul cmp push cmp dec push sub sbb or mov adc mov mov decb pop add cmp or pop pop std and push popa fsubs push aad dec clc ds cmpsl stc fsubp je mov test or sahf or rclb adc jl pop jp arpl sbb cmp pop and fiaddl push push push jb mov les cmpsb nop fwait and test iret jnp in push rorb out xor add xchg pop pop push mov sub and pop cmc sbb dec dec fs push sarb jns adc sbb add dec loopne jae js push data16 push fistl push cmp push pop test and in xchg lahf dec call cmpl jne add je in dec and dec shlb cwtl es sbb jb jne (bad) xor scas push xchg and fldl jae or mov sbb pop jg (bad) punpcklbw xor push mov dec (bad) adc push sub xchg ss addl xchg addl lret mov outsl es or js add add xor add je sub push xor or insb out fwait mov and jmp sbb adc fisttpll xor and cmp rorb fild lock stc mov push rclb adc adc cmpsl adc add adc mov mov or mov (bad) stc pop jl or rclb inc rclb add inc or test arpl daa mov ja scas mov sar clc mov sbb inc dec rorb (bad) push jne and push and pop sbb push fadds pop mov or push jb or push inc or les lds fsubr mov in add sbb hlt push adc cmp nop sbb loope add xor or jne mov outsl or adc loopne mov and sbb or pushf rcl ljmp xor fisub mov pop or sub and test les fcoms outsl inc cmp icebp pusha xchg sbb cmp xchg or daa dec test or pop shlb add ror rolb bound imul push test dec imul inc and xor int3 pop add adc imul outsl jne inc xchg sbb imul clc sbb inc adc xchg adcb jmp clc push (bad) lcall or ds mov ficomp nop mov sbb ret fcmovbe cmp inc adc (bad) xor je sbb subl mov dec mov push inc dec jne pop rcrl popf inc dec sub xchg adc push mov lock jg adcl ficom sub jnp iret dec cmpb dec popf es addl dec mov pop inc dec jbe daa sub movsb sahf xor push pop into mov std addr16 inc outsl es push aam sub lea sub popa cs (bad) popa adc adc sahf mov rol jl sbb adc lods jne push rcrl xorl inc inc mov jl inc push call or push in xor xorb inc pop sbb lock jae sub cmp push xor mov (bad) jecxz (bad) (bad) push push icebp dec call add adc sbb (bad) (bad) adc pop js sbbl aaa sbb fsubl inc test pop es dec mov (bad) in int sarb add loopne mov cmp xlat rol test pop les and ja mov dec xchg mov mov scas mov xchg mov andl mov mov pop mov sbb cmp add or xor outsb lods shlb mov adc fadds push mov or pop pop jo rolb xchg sub cmp or dec pop dec sbb jae mov pop sub sbb push and mov dec mov mov imul mov jb cs hlt dec arpl cmp push or add dec inc enter xchg xchg xchg lahf mov inc sti pusha das aad movsb xlat mov or call sbb ja das mov mov out enter aad push xor sbb mov js das inc push pop out dec pop add push clc sbb ss (bad) mov cmp xor sbb (bad) cltd dec push je push xor mov insb cmp shll jbe iret fist mov add rclb jb mov das xor mov cmpb mov mov mov cmpsb dec aad cld mov scas mov xor cmp sbb pop ds loope sbb aaa les rol ss addr16 xor icebp dec add or or push push or pop and add js (bad) outsb and hlt pop xchg outsb pop loopne inc fildll insb and enter xor hlt add jne loope mov or dec mov cmp lds (bad) jo js sub outsl sbb daa test push sub lea test out dec imul adc (bad) mov in inc lret scas pop pop clc sbbl loopne add sbb or sti sbb inc jp add or sub icebp insb sub pop int3 movsl inc pusha fdivl jb push mov (bad) mov loopne jecxz pop daa inc fcmove andb je rcr xchg cmp sub lahf dec inc je pop mov enter call dec jl xorb outsl push mov jbe idiv or add test inc dec inc push inc (bad) pop pop mov xchg push jo mov xchg push (bad) sti mov xchg dec push xor mov loop sbbb sub and push (bad) sbb adc mov sub mov pusha pop add test jbe or cmp cmp push sahf mov aam add xlat arpl pop mov and insb mov pop bound lcall mov or push xor sub or leavew mov push or dec cmpl sub (bad) adc arpl insb jb inc cmpsb aaa icebp sbb sahf gs stos jecxz jle push ss cmp je pop mov jo je mov int3 push or ret test xor sub pop lods or inc gs lcall or adc mov cmpsl adc mov movsb rcl into xor sbb and loopne cmp mov test xchg ds nop imul mov jae cmp cmp push (bad) aad fsub mov jge add das xorb rcll xor lahf (bad) jae loop inc std fwait jp adc cmp incl cwtl in and or leave test xchg aaa insb push inc outsb pop cld adc das inc mov push mov adc sbb call push inc decl iret jge mov enter loop adc or movl icebp push adc mov push mov inc loope or sub aaa jmp mov das add cmp mov into test mov cmp xchg ret xor dec or int sbb mov or sbb call lods push adc jmp insb gs shll push cmp add scas add mov aad lock js sub add dec or aam scas lcall sbb leave roll pop pop stc std jle cmpsl cmp push sbb inc sbb add and add add hlt jecxz mov mov mov cmp xor ror (bad) xor push add and sbbl cltd or sub push pop shll sbb out rolb scas dec (bad) shl adc push aas call pushf and cs (bad) push jns jle add fsub lock sbb pop (bad) inc mov push bound lods and dec mov sub adc xor jg dec hlt dec dec inc test ret outsl aam rol aaa add pop inc mov rolb and cmc pop pop popf rorb add shrl cmp push js nopl out mov xor mov push inc dec jmp pop add and adc lds cltd dec hlt or cli inc jne sub jne lds adc or inc (bad) pop dec sbb inc (bad) loopne xchg movsl pop das aaa or and add fadd lds cmp xchg push orl int3 test xchg mov add pop mov subl xchg add rcr mov fild add (bad) jnp inc xor mov or and pop sar mov shl jmp dec sbb call out je sbb push jae mov sbb add mov dec shrb push popf dec gs mov fcmovnbe adc fsubs jo outsl and push pop jecxz add cmp jae dec or je add add btr push add mov sub push inc adc ja mov addl pop bt sbb sub adc (bad) jle adc stos jnp dec inc mov cld push in sub mov xor cmp fildll push jb pop ja and lcall pop cmpsl add ljmp or push inc cmp jne inc decl jne les lds push pop arpl shlb adc xchg sbb bound ret fwait cs xchg inc rorb addr16 out dec mov pop sbb test xchg (bad) jno in sbb lahf movb and movsl xchg sbb call add (bad) jmp push enter ds outsb imul enter mov sub pushf cmp pop jg ret mov rorb mov (bad) adc and mov mov jge adc in jne aas addr16 or rcrb xchg add push jmp adc popf repz shrb mov bound dec push pop jp mov adc or mov adc sbbb mov or cmp jb xchg mov push jp push push repnz inc or push cmp cmp inc pop or jg lods add and dec popl pop ja lods test in fist rcrb jl,pn mov or fwait loopne lahf cmp test lret daa jp scas pop and jbe mov mov les add sbb mov icebp lock or push or jno enter sub lcall add or or inc jno loope mov inc ret inc ret xchg and mov mov mov push mov adc pop lcall inc jo fimull (bad) pop js pop (bad) hlt add lds sbb mov test addl push pop pusha sbb or add outsl add rcll movsb and lahf lea pop lret xchg icebp dec sbb jb push push and adc lahf jbe fcompl jl testl (bad) test es push dec sarl shrb (bad) jae in xor push popa dec in mov mov sub lret push cmp movsl xchg cmp das jmp in push in sbb pushf jne inc shll or adc into lret adc mov enter cmp adc les and (bad) iret lds stos push jb inc lret inc cmpsl xchg inc lock ss xor mov pop hlt adc test xchg enter lret stos and ljmp clc adc setno push shl mov std lock jb mov mov jne dec lret add adc add test (bad) test (bad) jb loopne daa inc ret or mov mov inc mov or xor xchg call xchg aam add roll mov (bad) push push inc lret insl dec inc popf push mov popa xor pop call je xor adc es add in push ret xchg fs mov cs sbbb loopne add and das xchg cld test mov lods xchg subl hlt mov lock loopne xor imul jl and fcoml xchg sbb cmp inc cmp add shr insl and (bad) fisubl dec adc adc adc ds in test dec scas scas les xchg or decb pop aas sub mov call test int jne xchg lcall cmp (bad) lods jecxz lea pandn mov and outsb adc sbb cmpsl out cmp insb out or pop imul and adc lock mov adc and jp and push inc subb insb xchg icebp mov pop das repnz jb clc clc add dec cmp fiaddl fsubrl sbb sbb jmp sub lea push push jmp sti test movsl pop and dec mov xlat and test cmpb sub dec clc bound scas add fs pop leave adc cmpsb ds sbb pushf rcrl mov add and mov jae jmp xchg dec mov and sbb or inc popa jl pop add repnz into faddp jbe lods in (bad) lods scas fwait dec jp pop sbb das push and inc add dec fild inc dec gs add mov sub dec dec (bad) jbe outsl mov loope loopne je insl adc movsb sub and xor mov fwait mov pop iret (bad) jo or cmp (bad) xor std jbe and nop dec into jae mov dec inc jmp fcoms xchg add or push insb (bad) je or lret sub mov pop int3 xchg and inc pop lcall or add int repnz dec xchg dec call dec push dec or les inc mov mov jo arpl ret enter sbb add imul testb add add cmp pop mov aas int3 mov push testb orb aam mov sbb (bad) aam lods mov add movaps or sbb xor mov adc inc or or push sub inc mov test ret cmp loope inc xchg cltd xor loope mov ss xchg sub mov (bad) sbb sbb adcb xchg cmc adc leave js or xchg mov (bad) xchg mov or (bad) call enter and sub sbb mov xchg test (bad) xchg mov inc shrl adc sub ja adc pop (bad) and test sbb clc inc stos mov (bad) outsb ja inc adc or shrl sub (bad) and and decl iret xchg negb sub sub mov xlat pop cld lock dec add or mov mov arpl nop jne cmp dec add jb jmp (bad) lock popa std adc cltd or pusha outsl outsl aas int3 cmp aas mov (bad) jmp gs rorb rol ja in out add xor test mov add addl in lcall xor dec cwtl mov outsl and mov es jno bound adc aas pusha mov add dec push sbb fadds repnz rol add decb mov mov cmpsl push scas mov inc mov push mov push xchg (bad) xlat testl or (bad) int je inc sbbb mov pop fwait push mov mov cmpsl add adc add jg insb or push notl push seto sbb push fidivr popa (bad) andb xchg xchg mov rorl cmp nop pop in and mov or cwtl jne cwtl icebp pop add inc hlt shr out test insb or and dec in dec (bad) jg into pop sub xor xchg cmp lock mov or or mov jecxz inc jge sbb jle jge les xor push nop pusha hlt jl pop inc mov add add out add jg je lret add or add loope jb inc shll insl pop sub clc lret or inc call js xchg inc push sbb add jle push jo addb dec out call (bad) push mov pop push mov mov popf add adc inc in sbb push mov ss incl pusha popa sub and insl bnd mov jno dec sub fnstcw push pop (bad) das mov js mov (bad) lock push movsb cmpl cmpl add sbbl adc mov adc les hlt (bad) aad pusha mov fs jo mov (bad) (bad) jecxz cmpsl dec and pop xor mov xlat adc xchg mov dec mov sub fwait sub out lea inc add adc xchg cmp adc orb fs or cmp cltd lret (bad) pop inc mov inc es aam or mov mov push mov pop nop arpl push dec dec aad mov sbb jo mov subb imul insb sub lahf pusha xchg xor pop xchg popl push xlat pop outsl adc sarb pop sbb jbe repz je pop int inc aam jbe and or (bad) jno ds or push add icebp mov cmpsb jbe push or cmp add push popa add call adc pop cmp add dec or jbe add in in jmp enter std mov loopne into push pop pop mov mov push mov mov aaa mov xchg cmc in xchg mov movsl mov js popa jb add pop push sub dec mov push clc cwtl cli js sbb xor out cld mov cmp lahf pop clc add sub stc sbb lods mov inc dec xor jno cmp nop popa or pop inc or pop inc ja add int cmp add dec xor sbb gs jg (bad) das loope xor mov inc xchg mov mov lods push test stc dec lods fwait adc adc xlat in nop outsb adc (bad) add lret xor inc icebp enter mov fstps pusha std cmp divb lcall (bad) icebp dec movsb cmpl xor and aaa out jb xor xor or mov or mov and cmpsb fsubr add cmp arpl xchg loopne pop jb (bad) mov or lret mov fdivrl xor rorl and add leave jno fmull movb or les jae sub mov pop cmp movsb icebp jg or or into iret jae ljmp in fildll add je dec or adc or push add sbb or outsl push dec (bad) loopne adc pop dec adc inc out push or mov inc xlat lock mov movsl scas ficom movsl xchg add cmp push dec aam rorb xor enter adc sub add pop aam idivl data16 cmp mov xor cmp adc or and cli add loopne push or cmp fidivr push push jne mov pop jmp adc mov adc lods jns or push or dec daa or dec imul xchg adc adc ds mov shll ljmp in out sti int cs add and cmp jle or lds in xlat test adc jne mov and push mov jno xchg add mov pop jecxz or push daa fwait push scas hlt enter jge enter sub in inc inc push insb xorb inc or mov and xchg push jmp and jle,pt cld or xor mov adcb lcall lock add push (bad) lds nop xorb (bad) add (bad) or sbb jg movsl (bad) or push (bad) push or mov or adc pop cmp jecxz mov nop pop daa mov sbb push dec daa mov and cmp pminsw push push jb push mov (bad) jo imul add pusha cmp into out inc pop aaa enter test inc push add and ret inc adc or cmp jmp jnp adc subl xchg sbb imul mov jne,pn mov fsubrp sub mov (bad) in mov inc mov shrb adc lods test lret jmp push inc or mull nop mov aas popa in mov dec and faddl push popa lahf or add push aaa push (bad) mov hlt dec add push cmpsl push fidiv mov dec push mov inc popa inc int3 or push daa loopne mov repnz sbb addr16 jmp mov cmc and pusha fsubr add scas pop shr inc xchg insb les cmp adc mull outsl fldt imul popa mov call or xchg (bad) and sub lahf int psubw xor and jl aam (bad) imul (bad) outsl pop jo mov mov xchg cld xchg arpl fs out add je gs movsl clc xor mov xchg mov lods sub mov sti adc popa push dec imul rcrb dec inc adc sti jp pop xchg movaps in ss mov adc xchg or shrl ret sbb push adc cli int3 clc psubq pop inc cmp jl or add movsb arpl xchg popa mov test jno push and push andw rcr mov jo mulb inc lcall sub or xor sbb ficompl mov sbb xlat fs cmp push pop pop inc out sbb sub lods fdivrs mov mov push adc les fstl pop out jo add mov sbb fisttp add imul push mov dec sub add enter xlat mov lret outsl movsl lods rcl loopne sbbl cmpsb dec mov mov sub dec mov sbb push pop sbb add cs cld mov mov push adc cbtw lock mov inc and add das pop and je cmp jle adc pushf dec movsb divl ret mov loopne jo pop or lds out add adc push stos cs fidivl icebp cmpsl cwtl mov adc mov ret mov mov pusha test adc push cmc out ds loop cmp adc push dec jo push xchg mov js adc sub mov addr16 mov and pop test fisttpll and sti xorl cmp loopne pop xor push (bad) pop add sbb adcb and mov dec adc push pop jo or std or cld push inc lret call dec pop jecxz xor cmpsl push aam subl (bad) lret imul add arpl les adc sbb insb les jmp xor mov lahf add mov push push sub jne push mov jne add out pop enter rcll pop in add inc test stc dec hlt imul addl imul ja fnstenv div pop or or in lea dec sbb clc arpl and xor divb movsl rolb xor das loope xor xor cmp fsubs xchg daa xchg pushf mov sbb imul sbb repnz movsb cmp adc hlt popa test sub push xlat mov dec jne and ja and fcmovnu fbld icebp (bad) jp ret call mov mov movswl ja xchg icebp iret or rolb jo push xchg pop fidivrl jnp inc cmp xor loopne nop int3 add daa mov sub push out inc je popa mov lret dec ja pop or xor dec aad (bad) mov inc add sub ret mov nop push jecxz or out mov aas push lret mov enter jmp add ja mov jg sbb fsts mov sub fsts lret adc insl xchg insb cmp lret test (bad) pop xor bound (bad) jge mov sub dec xchg sbb xchg adc inc adc and xor and or bound iretw imul cltd dec jle enter push mov or push outsl test adc pop cmp or (bad) jbe lods test adc pop add gs cmp (bad) out data16 jmp push insl divb lods and fwait inc insb leave addl and js and pop popf les adc pop lret and and adc sbb das mov sahf cmp inc in inc mov inc push push push sbb dec insl dec inc insl cmc sbb imul sub adc inc sbb std iret add add add jg fld jge push mov (bad) int3 out sbb or fs xor fwait mov and aaa int3 ret sbb pop dec xchg out or aam leave lock add sub jmp clc pop dec ja dec jecxz or push mov mov gs pop push popf js mov jae sub push inc pcmpgtd cltd int and repnz scas ret cltd xor shll inc dec in sub jnp jl lock int xchg jo imul adc mov xchg in dec add popa pop jno cld jl or in imul add (bad) test dec sub lret sbb jmp push or imul ss push jae in addr16 shll xchg outsl adc push sub mov sar lea sub mov dec aam adc or pmaxub in dec inc adc xchg pop push enter sub pushf pop mov adc xor adc cmovne xor inc and dec dec daa fcoms cmp sbbl mov inc fiaddl bound mov xlat cmp sub fcoml sbb fmul mov (bad) add movl fstpl sbb mov or in hlt ljmp jg jmp pop push mov push mov in xchg inc aas and jne pusha pop jle pop sbb adc add jbe sbb add addr16 adc fwait push jno in cwtl mov pop adc jnp inc pusha sbb push je fistp loope push push stc adc fsubl xor insb pop aaa rcrb pop xchg arpl cmp push (bad) and ja popa nop aaa int (bad) jo pop pop rcr sub push pushf pop jecxz and dec dec test fsubr sub adc pop fst call add aad or dec xchg push inc add xor inc push arpl addps (bad) in push or idivb inc xlat pop out or (bad) or sbb sbb in test sbb adc pusha push outsl ret add adc sub jae scas sbb cld imul mov or pusha pop inc in add js clc adc clc sub inc xchg xchg xchg in push mov push movsb add xor pop cmp shrl pusha push or fildll sub or dec js dec pop xor nop xchg (bad) repz add add sbb xchg xchg flds or adc jb or int3 dec add je popf push push sbb sub inc xor sbb (bad) fstpl fldl mov lahf cmpb out jne sub or and sahf out pop adc mov inc push js xchg push dec fidivr incb lcall je mov sub inc cmp nop out notl in les pop ljmp popa adc iret xchg sub es adc push ss (bad) addr16 jo movsbl rcrb dec xor mov out push adc inc adc dec mov cmp ret les cltd es pop xchg fwait out cmp push lods fnstcw aas mov mov and cmp sbb push adcl push mov jno xchg fldl2e mov ja cs sbb aam jno adc dec add das call jne sbb arpl daa adc xchg inc (bad) fsub mov fisubr in adc inc leave cwtl test mov cmpsl sbb sbb push stos lock das pop (bad) dec aad cmp (bad) in lret mov and fcomi push pop imul cltd jns inc sub hlt inc xor lret cmp sub std xchg push (bad) popa or push inc cli cmpb xor test mov adc imul cld idivb mov xchg std pop xchg les bndstx mov lock pushf add add lock fwait addr16 fsubrs sbb loop inc (bad) push add imul add mov mov scas lock mov add int sbb sbb loopne or popw rcl add dec xor ds out js push fcmovnbe and inc enter jns es test clc lret and sbb call rorb imul stos inc dec insb andl mov dec loopne hlt (bad) jns cwtl pop jle xor push and fildl xchg jp pop pop jnp ret add xor jae add jp xlat test adc pop data16 or jne sbb xorl mov gs jge inc enter xor adc sub xchg jnp mov mov mov adc jle movb inc daa add sub clc jnp std dec imul jne mov mov add in sub arpl insb push mov int3 ds repz adc push jge jnp testl pop pop push mov into inc mov inc sbb ljmp pop xor enterw pop inc or aaa cmpsb in mov loopne ret cmp mov adc movsl dec les imul clc fdivl bound arpl sub mov in cli sub (bad) inc sarb xchg sbb fisubr xor cs pushf inc push sbb imulb inc push pop or fwait xchg movsl cld cmp jo (bad) gs adc cmp addr16 inc pmuludq loop aaa sub pop jnp jnp push fistpll (bad) mov popa jno push push aas je xchg jg push pop adc or xchg faddl push mov es jno out ret xchg and jge mov jne into cwtl (bad) insl mov clc int3 sbb cmc jecxz jb call mov and cmpsb imul add fcoms or sbb lds fwait cmp sub stc sbbl mov xchg pop or popa xor lods cld sub mov add push sub add mov pop mov fsubr call mov sbb lret test daa jmp sub imul add outsb add sbb lods mov xchg push sbb add je pop imul out and or call xor adc (bad) aas xchg scas mov jmp xchg jge lods adc or mov lds xor xor das xchg daa pushf movsb into (bad) and or dec cmp xchg and pusha xor sbb or aam push fistp sub imul loopne jecxz push fcoms lock shrl jb inc cld mov jmp insl daa pop or push cmp or add andl sarb test mov push rclb inc or aaa test xor mov aam clc fwait inc or loope std inc sbb int mov ret jmp push lock movsl clc mov fnsave or loope js mov add (bad) data16 ret daa push or fwait sbb frstor ss pusha enter adc rcl add test ret jmp sbb push enter je push adc mov cld sbb cld es sbb xchg sbb and cmp cld sbb push rorb cmp rcr jae push push pop or int3 out sub add repz movb push rcrl inc pop xor aaa mov cmpl push dec xchg cmp mov (bad) cltd adc dec pushf jb mov xchg call ja mov mov in add test in test lods lock aas test addl ret cld mov (bad) insl add adc mov inc mov mov das and scas rol xor cmp mov or jbe repz pop test fs stos pop xchg ds dec das xchg dec jns out mov xchg push cmpsb mov jge ds in push cli add iret repz cmp fneni(8087 (bad) repz inc pop pop pop xchg mov cmp int3 (bad) adc jne sbb shrl xchg jmp pop in pop imul jmp mov test sub mov cmp popa mov xchg cmp xchg sub pop das roll in xor xchg mov ja hlt mov orl sub dec push lcall mov imul xor jmp shr push mov add les sbb dec inc mov or jb push aad jae popf repnz adc or imul push mov sub call rclb clc cmp jge (bad) aam (bad) push push int3 jg push mov sub jle push (bad) dec push jnp pop dec lret rorb test pop (bad) clc jle inc push clc inc push fmul cmp inc jmp or sbb in or xchg (bad) (bad) movsl mov jo pop fcomp push mov pop cmpsb sbb cmp dec xchg inc sbb inc and lret push add or push orb sarl jmp ret cltd mov arpl jle sahf xor jl jle cmp pop dec shrb push sub fistl andb xor in call es popa loope (bad) mov mov or push xchg pop mov xchg cli inc jle or cmp flds loope mov mov jo inc les inc mov rcll in push inc enter mov dec jp xor lock int adc lret mov inc out jg mov adc mov push xchg hlt adc add pushf inc push mov dec call adc mov lcall add (bad) inc pop sub aas xorl mov xlat xchg cli lea cmp pusha mov negl mov dec xchg push mov mov mov fistp push lea jle xchg repz adc sub cmp daa es stos jne je cs dec ss lret js rcl movsbl or ljmp pop cs arpl jmp daa fs pusha sbb nop push mov lock and inc clc xor std (bad) sbb nop jmp mov cmpsl mov pop sub inc push fist jp lods sub mov sub and cmp pop and dec sbb cmp pop pop orb fwait out (bad) (bad) dec or dec jmp ret push sbb sub push int3 inc fsubrl inc adc mov bound mov lock mov adc inc sbb or mov data16 mov xor pop dec add ret mov (bad) out add iret jle jl or sbb stos icebp xchg push cmp jle or sub cmpl fnstsw lret mov push dec fistl add add in add rclb js ja (bad) iret or das xlat nop insb sarb mov xchg push inc push dec fnsave add (bad) and add aaa or (bad) jp pop gs daa loope adc stc in dec outsl lcall ret and fcompl sarl test push push nop ja push mov sbb cmpl mov jg inc dec mov mov ds push push pop clc in pusha and movb mov adc pop xchg cmp je sbb aaa cld dec test test pop dec in call cmc sbbb daa and andb push dec push xchg or jae js or dec pop dec out je xchg lods leave ret cmpsb jno mov cmpsb mov cmpsl outsb inc pop dec sbb dec test mov test fstpl (bad) mov or cmp in mov mov sub jl sbb add outsl gs clc (bad) sub ja add or xchg test icebp jnp or mov and cmp clc in or add inc icebp iret mov xor mov mov sub dec pop add or mov and mov inc push mov mov out jecxz inc adc outsl pop mov mov movsb inc test mov cwtl xor mov push or flds in aas jnp xor inc add ss jb add adc fisttp adc cld xchg and (bad) sti (bad) in orl pusha pop (bad) mov jp addr16 movzwl xchg sub xor scas push sbb cmp repz in push lock fistpll loopne sub or pop adc repnz cmc loop lret lock and icebp jl outsb jge jnp in testb incb mov and movsl mov xchg dec cwtl sbb fcomip bound adc push andl jmp pop cmp fnop aam add mov inc gs adc enter jmp js xchg jne mov subl jle mov orl and les inc push adc into les pop xchg inc adc sbb adc aaa mov pop adc xor cltd scas or cwtl js,pn sahf or int push fcoms sbbb dec xlat and pusha fcoml dec and cmp jl test jge das add cwtl and ret imul or fisttp fisubr setne mov in cmpsb (bad) inc push jo incb adc inc add adc push push clc movsl push cmpsl mov inc and xchg cmc imul cmpsl add out fist fild push sub pop popa arpl je inc inc cs notl arpl incb xchg push dec pop bound push lret nopl adc inc jmp push sti dec jne cmp std mov lds daa call cs or jp flds dec loopne dec ret cli sbb mov push add sub nop inc xchg mov mov (bad) xchg es pop dec jnp (bad) ret aas lds cmpl imull push push sub xor sbb pushf inc aad imul loopne arpl inc dec jne in mov add ret push mov clc fsubrs dec push addb xor test mov das push sbb jmp sbb dec aad popa clc fbld jbe loope mov (bad) daa adc add add popl cmp out sbb pop cmpsl inc cmp pop sbb sbb mov push xor jp push sahf jge mov dec or (bad) jg push dec cmp mov xlat xor imul xlat clc inc pop mov lcall andb es icebp sbb clc scas push sbb sbb and push cmp push loop outsl sbbl test or add sub inc or aam icebp xlat jmp inc or add cmp movsb adc xlat push pop sbb fiaddl ret mov sbb test add or and and mov sti (bad) xchg jge jne es mov sub sbb outsl add scas pop adc or inc and jle pushf xor mov or mov scas aas or push and sbb and add push pop mov mov shlb sub and push (bad) mov push jle xchg rcrl jg cmp je int iret pop pop js or mov add or add add add push add mov andb ljmp jmp xor sarb and sbb pop out inc push inc andl aas cmpsl mov dec jns test add addr16 xor cmp arpl push ror pop push sub xor (bad) push arpl repnz and adc das test cmp fnstsw addl cmp fwait mov xor sbb xlat sub cwtl andl inc push stc and pusha bound mov loop or sub dec mov xlat (bad) fmulp sbb call call in or and push cmovbe sub xor jmp pop (bad) pushl sub or mov mov inc jle fldenv add push adc dec adc iret enter daa (bad) fistp lea add or jo adc push jge add sbb imul jns (bad) or and iret inc sahf or and adc add add test movsl imul sub fdivr add add inc lret xchg inc test mov sbb addl xchg (bad) adc or mov lahf pop xlat jp adc hlt sbb cmp jne xor sub cmpsb mov lds lods aas iret add inc cli movl mov push mov jmp movsb mov lea lret or xchg hlt sbb faddp pop or (bad) add shld std mov dec nop mov fsubl adc fstl mov lret fmuls sbb mov fwait xchg adc xor mov scas xchg sbb inc inc lock call fdivrs test cmp addl lods pop pop pusha sub pop loopne sbb and xor mov (bad) jo dec mov sbb cmp cmp in xor cld ja sbb mov (bad) rorb sbb rorl call dec movsb in mov push shrb push ds add cmp or insl loope sbb aas out jne rclb or sbb jbe mov jp xor pop fistpl jmp add inc add inc sub add jmp sbb in or pop mov add (bad) dec cld ss or sbb jecxz repnz nop fisub mov adc pusha arpl jo jo bound leave mov pop jg jnp cmpsl cmp dec scas xor inc stos and mov aaa sbb call xchg pop add sub ret aaa mov and insb push rorl sub (bad) pop dec call cmp push sub xchg push pop pop push push mov sub (bad) push xchg pushf mov pop or add add and or and fisttpl je fisttpl shr mov pop jo or xchg or or adc sub mov push jp mov xor adc notl mov bound push fadds pop pusha push mov dec dec and pop pop cmc add mov loopne push (bad) mov cli add mov rcrb or mov or adc in (bad) icebp movsb push cld push test and xor or sbb sbb subb pop push stc add cs push cmpl lea fcmovbe test sbb fildll orl xor xchg sbb test inc jge mov cmp xor pusha sbb adc nop ldmxcsr je mov jae cltd add pusha xchg and pop stos sti inc add sub ret pop or sbb ds mov pop adc ret sub and pop andb cmp mov daa daa daa mov daa (bad) jo jb daa daa daa jae jne daa daa daa daa ja jns daa daa daa daa jnp jge daa daa daa daa jg popa bound daa daa daa arpl daa daa daa daa addr16 daa daa imul daa daa daa outsl push push push daa daa daa daa push push push push daa daa daa daa push pop pop pop daa daa daa daa pop pop pop pop daa daa daa daa pop inc inc inc daa daa daa daa inc inc inc inc daa daa daa daa inc dec dec dec daa daa daa daa dec dec dec dec daa daa daa daa dec xor xor daa daa daa xor daa aaa cmp cmp cmp in adc test pop test mov ret push add dec popa xorl ds add mov (bad) fidivl arpl mov mov leave xor insl lea adc sbb or cmovo push sar xor data16 adc push loope xlat adc fwait fwait (bad) xchg mov fwait dec adc out jae mov inc adc cwtl push add in sbb jae je mov ja and push je insb or lock data16 enter je arpl mov xor gs or jle fisubr into jnp and cmc mov (bad) out jae xchg cs testl outsb int sbb jle push fiaddl jo outsl sbb push inc popa jae add imulb lret sbb or push inc jl (bad) pusha add jae outsb or inc stos (bad) testl sahf add xchg subb pushw push fwait idivb push je into insl dec outsl jo je push inc jns mov jnp adc adc and add sbb adc xor out in jnp adc loopne mov pop adc mov add jne pop jns rorl cmp bound loop mov add dec jl jp mov pop lods or push cli arpl inc ds inc inc xor pop inc sbb outsl jae es inc je lods mov sbb pop jo cmpsl mov test ljmp test inc jmp pop mov add push lds js call ficom insl (bad) or dec and mov cmpsl inc xchg pop or pop insl mov out xchg or iret repz and stos jl xlat dec loope rol push mov jnp and lret add jmp pop adc fcmovu push mov enter pop xor aas fs xchg fcomps (bad) cld les add jmp fadd ss aas and ja push push dec bound sbb add repz jne cmp cld scas sti xor mov pushf pusha xor push cs or enter loopne jl into scas cmp fwait cmp jp pop xor add idivl pop sbb lds adc loopne shr insl cwtl nop leave add jle test add add add mov cmp adc aas in ds and outsb lsl push inc je pop pop add (bad) scas lcall pusha dec pop adc lret mov jae mov push cmp (bad) loop xchg lsl add int3 arpl in int3 dec add rcrl int in add jb xchg mov pop enter xor fmul add rorl aad and jne js inc popa sbb pop sbb push movsl push sbb add mov and pop aas push int3 push ja bound xor ficoml sar shrb pop push xor into popl in gs fcoml push xchg les in add ret sbb dec push movsb mov int3 divl add push ljmp (bad) adc mov sahf rorb fstpl testl mov sbb sub inc cmp clc clc jmp mov fild mov out movhps in pcmpeqb mov push outsb xchg inc sbb lock pop adc or push sub dec dec add nop xchg sub mov dec fcomp fsub repz push push popa cmp int popa (bad) cmpsl outsb dec cmpsl lock xchg sbb stos loope popa add push and sub loop pop hlt hlt out mov hlt pop icebp retw push push arpl inc les sub xor je jb stos popa xor out pop and das repnz ja mov cmpsb js xor aas or subl popa fsubs popa addr16 cld mov add out loope push faddl push push in dec add je data16 ret nop pop mov stos mov sarb sub cmc pop cmc dec fucomi es push jg testb call idivb imull clc jle sti inc mov cmpsl mov cmp push hlt jg (bad) mov aam mov inc push add or sbb inc jg push pop and adc inc cmp jg push adc je and idivb jle mov aas pushf mov and cmp jg adc imul dec push jg adc pushf push jg ret popf insl push adc jg push in mov outsb mov push call jmp and xor mov push fldl movsb cmovb push push in adc (bad) push cld mov adc and cwtl addr16 sbb mov test idivl sbb lcall arpl pop loopne or mov inc xor mov push cmp push into jo sub sarl loopne xchg xchg sub je push jns in push mov xchg sub add sbb dec pop sbb push cmp and mov inc mov adc mov (bad) (bad) dec popa outsb nop and decl fimul shlb add jne or jle cmpsl mov cmc cmp and iret push push or pop fistpl test scas cmp ffreep push push movsl movzwl add cmpsl fdivrl adc mov inc mov inc cli or je pop add or jmp orb adc push pop inc aam lock inc and pop add imul sub add adc adc mov dec or jbe cmpl shll and push inc mov push push fwait mov add das repnz cmp dec (bad) lock adc inc test xchg push notl sub cmp add adc ficom in inc add sub lods in jle adc notl add push mov (bad) push cmpsl mov and mov mov dec (bad) push or into inc ds test push bnd jg pop mov clc inc shlb sbb inc fs roll mov mov enter (bad) int inc mov pop or pause loope or adc jge pop dec inc into push in add pop loopne dec mov pop cmc in or lock in mov push addr16 daa arpl mov mov insb lahf mov fmull adc sub pop cld cs pop xchg (bad) mov or int3 xor or push add shr mov test arpl in pop mov jb mov ficoml inc inc cltd gs dec insb add xchg jbe add sti insl mov xchg gs insb pop lods jge add addr16 imul xor fwait insl or addr16 outsl ja mov imul jne or inc lock arpl imul adc loopne movl push into jns add push imul xchg inc jo xor inc dec data16 mov or (bad) cltd pop dec add repz popa daa pop push nop fiaddl jo push pop imul mov push addr16 adc inc push xchg dec mov add das or jg js jg nop lods sub push lds xchg imul push add mov and or inc mov daa sqrtps rcrb jg mov adc repz adc aaa adc adc aaa pop or outsw inc adc mov jg imul pop outsb jne pop rcll bswap push das lahf dec dec mov ret cs push arpl add scas jecxz inc xor rcll lods outsl das cmp adc or push das or mov or cld cmc jg push push rol push mov or loope pop out pop and ret iret lock or test adc pop pop inc mov dec push dec pop inc dec inc push (bad) std xlat lock inc push add inc inc inc push dec push xor notl dec inc dec dec arpl sub jnp inc inc push adc inc push dec dec push mov and inc push xchg inc aas insb lods sbb popa out inc inc xor xor fcomps stc mov inc dec inc xor inc dec (bad) (bad) ja notl dec sub insl imul dec mov (bad) das int push sbb mov inc das dec pusha mov push test mov or push dec pop adc outsl incb push push push dec push inc scas dec inc dec mov cld and mov adc les add incb inc aaa insb jo imul push mov push idivb sbbb add mov mov add dec or sbbb add add enter add or pop mov lea push inc and mov dec aam jnp or dec sbb add dec (bad) push in inc ror dec (bad) or add add mov dec jne pop inc pusha xchg dec fdivs mov and movsb and out mov mov pop rcrl das adc test stos jae adc (bad) aas mov and push add xchg push xchg cmc pop ds loope adc or loopne push mov mov insb xchg inc ret das pop dec inc xchg inc mov stos je inc jmp xorl jl inc mov and mov clc mov loope inc mov sbb les sbb cmp jbe jl jo cli das cwtl jmp sbb add movsl icebp lret jae push jb test or push icebp push cmp or push push inc ret mov scas mov inc jbe cmpsb add mov add (bad) adc or adc fidiv std push push jno mov sub out aad je xchg dec mov inc or enter inc sbb mov ret jmp adc stos xor rorb lret enter or pop outsl aas inc mov adc lea incb lock mov ss mov mov in lahf sub jae jmp jo ds xorl push fcomp add push cmpsl sub lock jp jmp mov imul dec or mov pop or or mov js es jo inc pop cmpsl out out dec pop jecxz (bad) mov or es movsl dec out pop push sti mov aam mov xor xor push mov push ss xor nop inc pop or push repnz aam mov and lea push mov or inc or (bad) jbe jecxz push hlt mov push push xor les outsl xor fldenv fdivp ficoml jp test push sbb movsl in mov (bad) mov or cmp xor inc sbb mov xchg pop dec sbb sbb and xchg push jl js dec fadd inc sbb or or jb or jb daa inc leave fmull mov jo and add xchg (bad) ja and fcompl cwtl adc fmul pop lock and mov sub dec and in push test mov aas ljmp movzwl pop aaa jne nop dec xchg (bad) mov dec in mov lret jb or push mov sbb or inc (bad) mov or pop mov ret pop sbb dec push xchg or cwtl loopne (bad) adc in je imul enter loopne adc int3 sub or push adc js aas and nop push xchg int3 loopne (bad) enter out mov fisttpll inc ds cltd pop mov hlt dec and jne cwtl or xor enter xlat lock or roll mov int jnp jo das sub mov (bad) das dec pop shlb test sbb sub pop imul adc lock sbb sahf (bad) je push adc mov call jns enter ror loopne es or aas push adc mov and pop cmp nop lods mov and sti daa (bad) fildl mov mov xor or (bad) es lret test mov xchg adc mov push adc movl sub mov inc icebp fwait test or (bad) outsl xor insl sbb add lods and inc cmp adc les nop dec jge out call adc sar mov mov mov push mov sub mov sub or or fcomp pop (bad) xor push or push push xor add push inc mov xor add add or or arpl cmp inc sbb mov iret rcll xor push and mov sbb outsl or popa sub adc scas movsl mov pop adc inc adc loopne pop movsb clc push push in (bad) bound mov cltd or add sbb fsubs scas jns jge rcll fwait rclb push jo outsb or (bad) dec icebp incl sbb and inc inc push pop fwait jbe ss push mov cmpsl leave push nop loop pop sbb and xor jmp xchg and stos loop arpl pop pusha add xor popl add lea pop les mov dec sbb push insb add outsb dec out (bad) lock and jnp into cmp enter mov rcl (bad) adc jnp push inc sub lock push rcrb rol adc cmp jns adc dec xchg inc add or in in (bad) sbb adc sbb loope push inc (bad) xor bound sub int ss mov roll jecxz aas mov icebp xor aas aam mov je aaa inc push or add cmp sub inc jae pop clc sbb dec mov and mov or (bad) je mov in out shlb mov jne add fisub call push in int add aas es adc xchg mov xor add arpl (bad) and orb mov xor inc scas cmp add mov not and mov mov push test adc pop mov inc xor adc and addr16 je lds pusha in and jo mov imul xor call push ret mov xchg mov mov push adc push in adc xor leave call dec sbb mov xor xor adc pop jb orb pop fwait cmc lahf negb je xor sti mov ds push xchg stos in aas or cwtl mov adc in push push push jl mov jg xchg ret nop mov xlat push sbb jp or jg rcl arpl pushl and pusha in aaa dec jne lcall rcl dec dec sbb hlt ds push push adc lea pop dec lea into adc (bad) rolb enter sub pop add and int3 nop sbb add jge fnop lods inc fimull popa push pop adc in hlt and push push out add lods sbb add add lret hlt incl adc sbb or or fwait popf fsubrs mulb or push dec pop fsubrl inc sub adc movsl push pusha mov cmpsl pop hlt cmp sub fcomps sahf test in push mov out jle push out pop in sbb xchg inc or fimull push mov adc push fildl mov cmp pop fwait test add and sub add sub mov fst mov movsb loopne dec divl (bad) not and mov pop sar scas fcoml lods and leave or (bad) and cmp in pop sub test sub lds int3 pop sub out test push out xor push stc inc fidivrl stos or js or ret push movsb inc ret xchg (bad) push and or cmp fcmovnbe lahf jmp (bad) fdivrl inc pop xor pop hlt fistl push jge fcompp xlat inc daa mov fsubs sbb and fmull push sub dec jmp jns sbb pop cwtl dec add bound add sti enter add inc leave add lods (bad) in fucomip fs loopne movb mov movsl (bad) popl sub add (bad) rcll loopne leave push and call add ds dec cmp hlt (bad) cmp inc cmp sub decb mov push pop outsl fcmovu add mov mov or add jmp dec push faddp inc add rcrl pmulhuw cmp aas dec or push xchg xchg in mov fwait mov mov mov pop pop add sbb add jne fstpt (bad) jge adc adc adc rorb pop push sbb push inc mov dec and inc pop aam mov aam xchg or push inc movsb dec push stos inc and insb mov enter inc mov push dec jns jmp dec and (bad) mov add out fildll adc jecxz mov mov jmp aam clc movw add cli int3 xchg cld or inc stos repz push rcll jno cmp jl add jnp or hlt popa cmp (bad) rolb xor add (bad) adc xchg lea lea xor push cs dec pop ss jmp addr16 data16 adc cld lods loope rorl mov pop into mov pop cmpsl cmp leave mov cmpsl orb jl out ljmp mov adc ficom or leave in clc fiaddl pop mov lds cmp add xor pop push xor (bad) pop push push dec clc xor xor xor mov pushf orb jmp es mov fs pop cmp lret loopne mov cmp push movups movsl lods fs iret xor add adc and es jno sub pop jg push mov push push push jp pop or sub nop out jo fdivs jo inc push outsl call pop mov pop cmpsl mov inc pop outsl in shrl add sbb push push jns call leave pop sub lret and pop xchg pop push das cmp cmc test andl scas shlb (bad) jge add pop pop push and mov mov mov add movl inc push xor dec push (bad) fmull loopne inc sub out imul cmp push lods enter stos sarl movl dec sbb and in arpl insb pop cld push push inc pop repnz add adc add loope pop mov push lods xor sbb mov push pop pop daa sbb inc xor sahf add nop mov iret mov sub or pop dec movzbl sbb add cmp dec jmp jmp (bad) mov adc ror cmc (bad) cmp jg test jle cmp jl mov (bad) (bad) mov enter cmp jle nop pop add bndldx xor adc adc inc push add bound jle pusha gs add loopne sbb inc shrb push call and pop mov push sub pop fcomp cmp jno stc loop js (bad) flds movsl xchg sbb scas inc fadds into or inc arpl add sub jecxz and pusha and inc enter dec add (bad) jo push pop inc adc test iret popa imul inc js mov jg or jl push cmp mov dec jo jl (bad) popl jl mov cmpsl xchg std inc inc dec jne cmp add cmovle xor xchg xor cli lds sbb repnz push inc cli in add sub add dec mov (bad) pop aam imul dec push adc movsb nop mov ficompl int3 jbe nop out rolb pop cwtl cli mov insl mov sbb imul push sbb add xchg or mov jle andb rolb repz push ret insb jnp mov push mov (bad) mov mov mov push push mov sbb or rcll loope cmp lret repnz sarb movl push push movsb jge or add cmp sbb jge pusha shr nop hlt pop jp jmp xor cwtl mov fildll sbb push test fucomp sub aas sbb sbb mov jb ret ret push decb shr sbb sub or inc mov or ja lea (bad) or cmovs push jle add outsl sub jmp or mov jmp je sbb pop and imulw lcall cmp and xchg jbe add ss mov mov or sub pop add xchg add push les mov fdiv inc loopne push mov jne,pt aas in sub out adc mov imul add or jne and pop sub icebp roll mov hlt dec imul sbb pusha and push add nop or hlt sbb xor inc and loopne jns hlt movsb inc ds inc sbb ret insb and int pop xor jo mov mov jo push dec clc xchg out jecxz call out inc arpl ret lcall xor jg jecxz inc (bad) xchg addr16 xlat inc mov lods bound push in mov (bad) out sbb lods dec sahf lods adc or inc jmp inc jns enter jne lcall call or loopne sbbl cmp adc mov daa int hlt loopne fdivl dec dec mov imul shl jl mov push add adcl add and xchg data16 pop test inc fmuls fidivl mov mov mov sub shlb mov or push scas lods cmpsl mov mov inc outsb jle mov inc add dec hlt test sbb in in push aad or adc and in aad push hlt loopne fcoml clc call sarb int3 orl out sbb and pop movb scas adc loopne sbb icebp lods xchg jne inc aaa pop mov je jl cli push mov xor cs and or xchg adc pop nop jg jge inc xor push adc iret and (bad) fstps or ljmp ret push adc add dec shlb cmp inc inc je sub or xchg sbb test int3 mull jmp clc leave cs hlt pop hlt jmp adc rorb adc or cli popa mov pop jne cmp pushf push cmp pop add clc xor inc aaa test in gs cmp sbb clc mov lahf mov ret pop in inc repnz push jecxz imul push rcr sbb pop adc push adc les loopne fistpl popa out cmpsl pop ret push jo dec mull adc pop outsb in mov and mov shrb cmp add pop add add inc adc data16 cmp cmp adc clc clc cmp fistpl add jno jne xor rcrl in xchg xchg (bad) iret jo enter add rorl sbb adc or mov imul pop call (bad) jae bound mov push xchg or insb daa cwtl pop push fisubr push addb cwtl push xor xchg mov lods dec adc jmp stos sub adc outsb or or sbb jne pop lock or (bad) popa sbb add pop mov sbb data16 push sbb jmp xor pop outsb cli daa cmpl int and dec fldl mov ret add rcll dec xorb adc shrb push mov fnstcw cld cmpsl aas xlat cld add ficomp inc mov or lea dec xor pop push lock cmpsb and add das mov fincstp mov or in fist or mov xchg jnp es out and xchg test mov push sti in xchg lret ja push adc sbb sbb fs test jne adc inc adc popf mov xlat push push pop mov or add adc push adc and push add xor rcll pop sub pusha movsl jne xor out jbe push pop test or rolb add cmc (bad) pusha xor repnz ret adcl inc (bad) adc or adc cwtl das xlat dec pushf and insb out inc pop mov pop xor inc or jmp mov cs aaa add outsl add cs add sbb pop sbb negl and inc dec loope sub mov cltd mov hlt nop repz push push push or mov sbb xor imul xor nop outsl daa sub inc cmpsl shrl mov adc das xor add sub repz jbe lods (bad) dec and mov adcl loope ja es or lock jmp add lea adc out je (bad) fs cmp fimul stos and adc adc sbb sbb daa sahf inc adc xchg pop inc and and xchg cmp aaa fs jle lock jecxz cwtl hlt pusha jno test add push xchg push add add fdiv movb push and and popl jle cld sbb inc mov or xchg push and inc inc sub lcall call push sub sub adc push fwait lods out mov (bad) mov push clc push and or adc xchg (bad) and popa movsb negl icebp cltd imul sub loop cvttps2pi or push push popf ret aam add cwtl inc loop adc dec lea stos decl adc adcl arpl dec repz nop test push inc movl sbb pop inc dec dec pushf fcmovnu and pop pop call push imul jge cwtl jmp push push adcl fcoml sbb inc out adc push adc addr16 push sub fs dec das mov fdivr imul push sbb mov (bad) push xchg sbb sbb adc cld int fidivr ss pusha aaa add xor cli pop (bad) xor adc dec inc dec push nop or fildl cmpsl pop jg push aam std mov jmp lds push jns mov sub xchg jbe aaa jmp roll cmp jg stc rclb sub test iret adcl jl mov lret or or daa sbb pop adc (bad) mov and mov pop lret inc jmp daa adc imul ljmp inc je les adc pop sub cmp inc ja pop addr16 enter fs bound sbb add pusha or dec jne cld or ljmp scas cmpsb imul adc mov xchg mov dec (bad) mov mov les test rcrl loope (bad) int lcall push fisub sbb in loopne lret subl sar hlt dec fmuls mov aaa inc fidivl mov inc les add mov jecxz ret pop call ret repnz mov inc mov aam xchg out cld rorb (bad) fimull dec mov test jne mov pop fidivrl xchg data16 lock adc cld add sti fadd push push std cmpsl push dec movsb pop fisttpl lret sti or pop and sti sub or fdivl push int3 inc inc test je add cmp fcompl das pushf mov sti mov ss add mov pusha test mov loopne ja,pn data16 je cmpb fcomps add out mov out inc pop xchg mov inc jl cld cmp xor and aas cmp icebp push pop fs icebp inc add jno pop in and inc pop addl jg popf fistpll cli and jo je daa in mov test stos in adc ja add cltd nop or fildll dec push dec scas nop and push leave ficoml cmp jle sub push das adcl add adc movsl add sub movsl ret mov es and hlt xchg lahf jmp jp jle xor xor sub push pop imul dec cmp jp adc adc or arpl sti pop xor jbe sbb sbb and push rorb pop mov pop clc std xchg push adcb insl scas pop jo lods fisttpll (bad) call cmpb fstpl in xlat push xlat sbb orb (bad) in adc sub cmp popf xchg pop popa xor xchg adc sub aad or addl shrl adc lcall and data16 testb lret je mov or les and xchg and mov movsb xchg sub adc ljmp bnd ds in fidivr inc push sub lds pop sbb (bad) mov fadds std std ret dec xor data16 push test (bad) push aas xchg jmp mov pushf mov lock sti jnp sub add bound ss out lods adc mov ror inc xor mov or fmul data16 or js lods mov dec or lods mov nop jae orl test xchg (bad) (bad) fs int3 scas inc add adc or sbb dec imul or add jbe test add mov dec adcl sub lret fstl jo insl push xor mov inc sbb pop xor inc cmp sbb pop sub stos dec test jg add add adc cld xchg mov fs mov roll cmp cli fiaddl add or sub cmpsl add fcmovne push adc pop les mov sbb inc pop sbb cmpsb push aad jb fcomp and push adc aad pusha punpckhdq xor movsb push fmuls add sbb adc lret dec ljmp cmp inc pop shrb je andb into add sub ja push repnz or pop adc or push aaa (bad) mov pop dec adc cltd loopne int3 push fsubs cwtl or cmp pop pusha push loope aam push sbb rcll push test pop inc jecxz and test jne mov and ja or adc jno adc es sub push test insl aas in fidiv ja cmp je mov mov fnstenv mov push (bad) in adc or int xchg lock jl fidivr or popf inc lods jns or xchg dec aas mov stc ret loopne sbbl test jno and es ja lea test inc imul dec pushf lock adc rclb xlat out not add sbb cmp es or adc movl push or loopne dec pop ja lret sbb and add or lods inc xchg cmp fistpll inc lcall mov sbb and sub and inc mov add add sbb add jae movsl nop dec leave push js push push add pop jb in ss lods mov ljmp in fsubl ljmp jae test xchg push and mov jne decl dec mov xchg inc insb pop bound fist int3 add mov faddl and cwtl add nop add add and lahf or mov mov inc (bad) fmull in jns (bad) loopne xchg mov (bad) jbe lods ss fistpl stos pop sti push int3 sub sbb (bad) pushf ret push test push and adc and pop sbb lea cmpsl hlt mov cmp pusha stos aad outsl inc mov mov je lret fs sub lock cmp and or sbb push clc mov pop rcr popl mov pop daa sub loopne lds adc imul jno mov inc mov adc xorl jne sub gs ds push mov test dec jo dec dec cmp jne mov xor sub jp or mov and or inc lea pop imul rolb sbb aam fldt outsl jg outsb fcomps imul mov roll enter inc push sbb in into mov enter mov add orl and pop mov adc mov inc adc fdivrl jecxz test (bad) lock and and cmp addr16 enter repnz cmp or ret adc loopne repnz cmp jbe aaa or fsubs fcoms std xor and loopne loopne (bad) cmp dec and jo fist decl call push inc aaa sbb lods std mov or adc sub in sub loope add mov cmpsl push js enter mov xor and dec mov call mov into (bad) lock add xor pop addr16 clc xor popa sbb pop add push mov mov lahf add (bad) or (bad) les imul imul or mov mov dec fildl inc jb lods jno shlb push test out inc mov xchg push adc pop lods loopne ds inc in insb inc (bad) lock inc inc sarb jbe inc mov dec mov hlt mov shld fimul test (bad) into xlat or add or and psubsb mov (bad) push adc push rcll or cmp insb inc lods imul ss cmpb push xlat imul mov js cmp (bad) jo popa popa lcall sbb adc fcom inc mov pop shlb lds cli in push sbb mov cmpb in popl popl pop sbb aad sub dec xchg push add mov adc mov jno js adc pusha popa (bad) shlb fs icebp fdivr xchg test out inc and and xor cmp or push lcall sbb es sbb pushf sbb or call or outsl pop xor push sbb pushf and pop mov adc rcll js shrl out inc (bad) fcomp xchg clc mov inc push ss cmp xor sub or dec mov xor xchg shrb in mov xchg sbb lock cld cld or dec add loopne call sbb or hlt clc movb leave test fcomps lods or sbbl std mov or add pop jnp dec jo adc (bad) lret scas adcl aaa and in arpl adc mov loopne ret rol dec xchg jbe inc adc and xor int3 xchg ficompl xchg or into jg xor cli (bad) movzwl push dec sub scas (bad) mov cmp add cmp vpaddsb sbb cmp push fstpt orl push jno test jbe push xor push inc fdivs mov enter add xor push call push dec sbb inc sub jns sub dec inc or inc leave mov sbb pop and mov add cmp dec mov mov out mov sti cmpsb add andl ret pusha in mov adc xor or inc jmp add adc add aad out sbb pop sbb pop xchg jnp xorb push mov hlt fcmovnbe push or add inc and and insb push push ret sahf stos sub jge xor and sub jno inc xchg xchg cmp icebp jnp add clc sbb test ss iret inc add lock cwtl sub pop sub add adc pop shr movl push (bad) ss rorl popa hlt xchg mov mov push push xchg pop les jne sbb sbb pop rolb loopne in movb cmp fisttp or add mov mov pop inc pop dec add stos adc sbb cmp jecxz das aam mov and cmp jecxz pop pop sbb sbb add adc and sub loope pop movsb gs mov cltd pop fist pushf aaa adc and dec pop sbb movl mulb inc xchg loopne sub adc dec adc push ja jae add add repnz mov mov pop or cmpsl pop aaa shl adc jne imul insb int stos imul arpl ja adc xor ja xchg mov sub test jmp ja mov icebp sub xor xor dec push lods xchg add addr16 adc and jecxz push dec push sbb roll xchg dec movb push xor ljmp cmpb pop andb push jge adc adc mov cmpl dec fldl dec sub xor adc xor pushf xchg test sbb push push leave adc or sub mov mov ljmp or aad lcall adc adc movb imul rol lock xor fisttpl in pop stos adc test push push sub inc roll lock pop inc movb mov pop clc js and and es out ret lea js inc aas in cmpsl outsb push push popf loopne adc add sbb (bad) push movsl add cmp sbb shl dec test lret aas mov imul or inc mov lock popf mov add sarb pop rorb dec out pop push dec and daa dec test mov mov mov mov cwtl dec dec and ret movsb xor add xchg popa icebp or popa jmp push or rorb adc mov xchg sub data16 fild ret mov pop loopne or add cmp add jge mov mov add pop les push mov jle mov mov or push sub adc or mov sahf push call insl or or inc wrmsr scas push cmp jmp nop lahf mov inc adc sbb pop or push data16 and xorb rcrb dec add push mov cwtl push pop pop pop add (bad) jbe in (bad) aad adc insb or (bad) neg out inc test mov loop sbb add inc in or or lods or jne mov pop add std sbb into fiaddl push in adc dec lock inc add cli inc mov and sarl movzbl es xchg cwtl xor adc jbe imul push xor sub scas ficompl add mov mov in jg xor orl mov pusha sahf (bad) test push into pop dec mov lods rcrl movsl fcmovne sub aam mov iret inc jmp jbe mov and cmp lcall pop push mov push jmp mov nop adc dec push cmp popa popa cmpsl pop push sub jae push int3 movsl addl icebp sub dec mov add jge lods rolb sub sbb pusha pusha inc in cwtl insb rorb dec pop fs fadds pop sub les in cmpsb push or rcll add jbe adc adc dec and push fs cmc push test jno int pop sub sbb adc inc jae and test enter add and call out in insl push xor fnstenv or arpl or push mov dec lahf dec scas mov lds or push or cs test rcrb xor fisttpl lahf xor cmp inc stc int loop lea adc jo or add testb jmp sbb pop or scas hlt xor or xor push sbb mov cmpsl dec test nop push dec daa lods rolb xlat je cmp mov cmp sub jne or js sub sbb add sub or fadd push mov pop or jns lret push inc add ja les or or push movsb xchg loop push pop clc out jbe jo adc adc push jo sbb xchg int xchg mov aaa xchg mov dec adc pop cmp ja or enter nop lea or sar pop inc sbb lea add (bad) testl or xor jmp push sbb lcall pop jg and enter or (bad) mov ficomp push and test sbb adc fsubs xor or add mov inc cmp (bad) roll xor or adc call bound xor xlat adc lahf inc add adc adc test cwtl jecxz insb adc mov aad (bad) loopne stc jge and hlt lock add and lea mov iret jne add sar and dec sbb inc sub (bad) movb rorl push xor inc cmp cmp into clc sbb mov inc push sbb sbb jg rclb sarb push lods bound inc out xchg cmp leave sbb sbb add jnp add and adc jns adc sbb out add insb test hlt lds mov pop jb or fild jno popf dec pop insb sbb add adc leave stos jmp outsb sub loope aad inc jbe sbb push aam sub int3 push or es and dec xchg xor or fs push test adc xchg je (bad) add lcall fcomip daa insb push movsl insb in pop sub adc or sub cmpsl insl mov lock imul fadd jge jae inc arpl cmp inc bsr jb xor adc sub mov jbe adc jbe jo jl or and sbb lea in and test pop sbb clc pop or in daa and xchg push push (bad) adc add add mov push fidivl pop cmp dec jbe mov mov jb and or das jne and es mov scas sub dec add mov pop pop jmp inc push xor aas inc fidivrl testb je ss mov imul mov loope ret sbb sub push push sbb mov fimul push push jg inc les imul fcomps pop ret and arpl push push jae cld scas stos popl xlat push in add daa shlb sbb add xor add lds dec or aam adc fildl arpl rolb inc loopne or add mov mov dec push nop outsb add icebp imul mov iret sti mov arpl popf push cld jmp inc rclb mov cmp adcl les es movl cmp xchg add cmp inc add jge xchg add popf bound pop scas pop xlat sbb sub jne inc adc stos daa and in adc loop add jge roll pop sbb imulb das sub jmp mov call mov adc es js push lea movzwl adc rorb addb mov stos xor or mov push dec xchg or and adc (bad) push hlt fcmovb loopne add pop (bad) add insb sub adc push xlat push out mov leave stos pusha mov xor sub scas push les xor lock stos pop lret add inc mov inc jno test inc arpl movsb sbb (bad) dec xor cmp outsl addb ffree cmp sbb fildl aas (bad) xor and pop dec fdivrs cwtl add cmp cmp sbb mov push out (bad) xchg sub mov or negb mov imul sub (bad) fisubr add ja mov pusha push loope fcompl addr16 add push push js addr16 fmull fidivrl daa mov sub ficom add inc pop add pop and (bad) cmp push push add sbb push (bad) fstpt es sbb movsb aaa js stos stos xorb sub jne mov sub cmp jnp mov mov pushl ja insb (bad) jb (bad) outsl adcl bound add jp aas and dec adc inc xor mov test (bad) xor or or and dec push inc adc out call lods push clc mov sub lahf mov xor adc pop or push add les fsts test or pop mov inc andb and sbb out fs dec mov add lock adc push adc add mov mov xor add xor out mov imul adc mov lock push lea pop repz xor dec jg shrb shlb push dec or inc xor push mov inc cmp or loopne or xor lret mov lar push movsb adc cmc out pop push dec lds xor or xor sbb ret mov das mov or jne pop xlat lahf xchg test je popa sarl les xlat je call dec loope xchg sub ss inc xor jne push jbe das enter fsubl and fsub adc or andl mov jecxz adc and mov mov and dec js adc cs popa mov rorl cltd jge mov push cmp pushf pop sbb push or push lods jg enter enter hlt mov mov mov lock movsb sub fsub push scas out and and xchg inc sahf and outsl mov rcrb or sbb mov ret push cmp (bad) sarb (bad) leave and dec push jge inc in lcall cmp add cs ds inc mov push dec sbb (bad) lret inc xor add push ss ds mov rolb or imul leave (bad) lods iret mov leave inc mov psubw ss push push int3 add and xchg push js adcl lods jmp das adc push and add adc stos adc cwtl hlt jbe lods jae cwtl adc ret sub push lock adc inc xchg xor loopne aaa roll sbb and lock hlt dec or test jb pop iret sbb add (bad) fstl inc and leave add and mov cmpsl pushf pushf pushf fmull dec dec inc inc xchg pop mov and fs aaa cmp xor sub xchg xchg xchg xchg sbb adc xchg xchg xchg xchg or add cltd in lret divl aaa hlt pop or idivl add enter or incb cmp int3 cmpb adc sbb je push xor out iret and mov jmp add inc mov pop aas cmpl mov shlb es jle imul or lret add movb or loopne add fimul lret pop or outsl jb pop xchg scas inc negl cs or mov cld jbe pop pop push jmp and mov ljmp xor adc dec adc adc xor sbb jmp inc or pushf xchg rcrl in push jae pop jge test adc dec push add test jb inc in push cmp or and mov xchg dec add pop push sbb pop adc cmpl and (bad) fwait testb and or push popa insb aaa insl jg add push pop dec jle mov popa dec cmp lock ret sub add aam das pop sahf (bad) pop and and lcall daa jmp popf pop cmp sbb shr xorb push orb andl sbb nop sub adc adc xor shlb movsb shl pusha cmp add push fimul adc pushl dec ret mov push es pop ret daa add sbb pushf xchg jl inc or pop mov les das adc addl jge and and cmp dec in and call jne es cli push inc pusha cmpl jb shlb cld push cmp dec xor or or inc or pop (bad) pmuludq adc jle lea call pushl (bad) ds jb push sub jmp shrl mov dec dec push push dec xchg daa push roll and dec inc sub leave or iret jb inc mov es leave dec in push adc jb xor call adc jge cmpsb daa mov mov pop jne pusha add xchg push inc stos subb fsubs sub ss test inc flds inc dec mov lahf push shrb clc inc xor call mov mov pop jmp pop sbb push out pop pop and ss sub repnz je std xor jmp xor mov push push ja mov adc outsb jne loopne pop gs insb popa jns jae cmp fs cs xor andl repnz mov push mov daa or je or in stc dec cmp sbb adc push adc aas ret push push inc push cmp jns cltd pusha (bad) pushl outsb and mov scas dec outsb mov jo sbb mov stos jle aas decb mov insl outsl mov pushl mov pop rcll mov das sub cmp inc inc mov adc out stc mov push push mov adc xor cs enter fbld (bad) lret push push adc imul jnp xor test in ja xchg shrb or popa pusha and add in xlat sub or imul xor xorl xchg jg inc aad pop sbb (bad) adc int3 mov pop daa and nop mov jg dec sbbl xor or sub leave in add in nop ftst je adc inc into cmp mov dec add cmp cmp rcll push popa xor cmp repz repz mov mov mov sub mov xchg leave jae sub addb iret or add and fild es hlt cmp or and les or fsts push cmp popa imul aad ds out cmp out mov xor pop xor mov daa lea or adc inc in adc arpl rolb mov or popf testb xchg testl mov movsb sahf inc push rolb push cmpl andl adc mov jo or sbb les pop shlb adc pop arpl add inc iret aam inc ds es xchg addb fs sub or jmp fstps (bad) lock xchg or cmpsb pop (bad) adc hlt add inc hlt sbb sub rcll out pop loope push sbb mov loop movsb mov xchg adc insb repnz stc cwtl or xorl pop jg pop and nop/reserved or (bad) clc add dec out sbb xchg sub cmp lock pop jbe insb dec fdivl add sbb xor pop mov xor scas test in adc movsb pop imul or and xchg inc hlt sub jbe fidivr xchg sahf dec add js into mov jge dec jle les nop popf pop mov cli and rcrl (bad) daa and rcrl inc lock sahf popa sub adc mov aam jmp mov jne and sbb loop ja mov arpl pop cmp (bad) push xor xchg mov rolb sub dec jne mov sbb das push cli or repz inc xchg cmp je dec push xchg sbb xchg push cmp or lock lock call sbb cmp frstor das xchg jno jmp loopne fstps sbb and sahf dec sarb push lds shll loopne xor cmp inc mov xor inc lods pop addb pop mov inc xor out push or inc add rcll sbb push mov dec add (bad) xor pop insl jle loopne adc xchg mov push and push push (bad) ja fsubr into xor sarb leave mov dec pushf in sbb jno out hlt fadd cmp scas pop test aad dec gs fwait lea sbb inc js mov loopne pop inc pop jae cmp loopne and dec sbb lock and adc movsb push es sub loopne nop mov call lcall clc adc sbb aas negb inc adc jne mov into jno insl inc inc test pop cmpsb jmp in push inc xchg or ds sbb call call or mov mov lock fisttpll dec or inc xor mov sub (bad) mov and sbb inc pop pop push call push test jns dec out xor jmp inc ficompl sub stos cltd sbb inc flds clc les mov (bad) jno dec movsb shl pop dec dec pop xchg (bad) sbb js or loop aas fnstsw push add test (bad) mov mov add pop sbb dec push subb je or sbb push test jmp adc mov sbb jmp push inc leave adc add xchg lea aaa mov mov in cmp sbb adc mov lcall cmp push adc add nop or dec sub repnz aam out cmpl nop or arpl lds xchg pop outsl out push imul popa addr16 jne in pop cmp rclb dec subl out pop and push jbe das sub outsl gs mov mov sbb mov insb cmp dec pop or sbb push add arpl adc xchg cli neg sbb push insb push dec std lods fs scas push inc dec imul dec jb shrb imul movsb xor mov add xor inc and fwait (bad) push xor je mov cmp cmp inc jae add push cmp mov subb dec movsl xor cmp addl sub cld pop inc (bad) push push cmp dec add sbb arpl arpl pop (bad) mov pop mov inc push int3 inc xor push inc daa push sub pop imul ja ljmp pop inc outsb je jge xchg aad push sub test jo lods jnp fsubrs loopne jae daa jg mov mov push pop enter test pop dec or fs mov adc or mov adc push push push dec clc xchg nop mov sub pop mov cwtl push (bad) mov faddl call imul les push or push out mov push xor dec bound test jg pop xor dec dec dec add push inc insb mov pop cmpsl lds shll outsl push jo es push je push test sbb xchg lcall lock xor faddl add or dec ret ds rolb jl test xor mov push jl mov nop mov mov movsb test mov mov mov rorb fsub mov lock add add or mov and sub lcall sub clc adc fmuls pop mov out scas pop adc lock jnp pop arpl test jbe sub xor add xchg dec clc push int3 mov or fdivrl dec push push addb test sub and gs nop inc xchg and insb push push movsb xor lret mov inc sub push shrb cld mov pop gs sub test cmp xor xchg les pop lret push int3 jo add nop adc fmuls inc sub test fadds movsb xor call dec push add push push movsb xor sub cmp xchg lret dec pusha nop lret and sub push sbb jl mov gs adc test push movsb xor and pop xor xchg dec and sub sub in jge xor xchg inc pushl pop or mov push lahf addl jae xchg sbb mov (bad) test dec imul sarb push popa jb mov push fcompl aam or jbe mov addr16 xchg gs js mov scas popa add rcrl dec arpl jae push push fs mulb or jns jp adc jo inc outsl sub pop pop pop nop jbe sub add adc adc pop xchg push or or test addr16 pop mov and push (bad) sahf dec pop adc jbe pop cmpb dec outsb jnp (bad) adc out cmp in ss pop adc and (bad) in and dec and sbb (bad) lods sbb and cmpl jno inc ja and fs jg fcompl das adc outsl addr16 jne insl aaa ss in outsb das pop fs lea (bad) or mov pop dec arpl adc cmp pushf loop outsl arpl push sbb pop push xchg movntps inc pop outsl pop dec sub adc fmuls adc inc insl add mov hlt rcrb fisttpll xchg push add inc mov daa aad out inc or jbe subl cmpsb add xchg arpl test jno sbb mov pop jb mov push outsl dec add add xchg or and or dec lds and int3 push std xchg sbbb push orb pop pop leave sbbb pop insl jb add je or and xchg or xchg pusha frstor xor in cmp fidiv pop jl pushf sahf and add test mov movsb popa inc dec jl or fmuls shlb mov out adc (bad) imul decl arpl mov or (bad) inc nop roll mov push xor adc stos xor jp incl fnstcw sub add divps cmp pusha sub or iret fwait dec std je dec dec sarl loope cmpb push and lods push inc lds xor inc xor or add adc jno inc inc add xlat inc and push enter sahf pusha outsl addb inc adc adc pop test cmpl adc pop add add adc xchg sar popa sti cmp inc dec lock xor insl sub xor sub add sub inc xchg or mov imul hlt lcall popa in movb push or loopne and push out add pop pop (bad) push xlat inc mov jne inc jge lcall clc out or or and xchg arpl add add in dec cwtl je or mov cmc or inc loopne leave inc sub (bad) shlb jae mov rcll push nop cmp and sbbb rcr daa das or outsb popf lret daa push arpl arpl inc pop and pop mov dec pop les dec pop dec dec mov add fadds dec orl bound bound dec add push push add ret inc (bad) pop dec outsb inc gs movsb (bad) aaa faddp pop and xchg jmp mov adc hlt shrb mov mov es sbb jmp movb mov jo dec (bad) and clc pusha sub add stos sub and (bad) push stos mov insb addr16 push aas jno imul (bad) push mov adc arpl and adc sub nop mov add outsl push aas mov in lret daa mov out in cmp jl movsb js test int3 sub je pop jo xchg iret leave jae and (bad) ja dec sahf xor xor pusha jae inc sub pop push inc shr pushw mov sub test lock mov add dec and adc xchg mov pop clc dec sub mov popa inc in in mov mov pushf adc jne hlt xor pop lods pushf add fcoml in inc jno push mov cwtl outsl fistpll pop dec pop jbe jno sub imul mov sbb jo mov xchg sti and (bad) jo int jmp jae mov out xor ret lret in mov dec je lock (bad) lock daa sub fwait in push repnz test pop hlt in inc add fmuls int3 je xchg sbb mov cmp pop es lahf push je cli mov iret in jnp aaa cmp test les push rcrb mov push inc push pop adc or and cmpsl fnstcw movsl dec xchg out imul adc data16 insb lahf es inc ret test mov mov push out add push add xor push mov ds mov nop adc das jbe cmp or cld adc movsb jns out outsl mov and pushl push nop or test jne jg push daa mov outsl sbb jmp mov pop xor push int lds and es negl pop or loope xchg jl je or cmp test movsb popa les das and push push hlt cmp ljmp add je mov xchg insb aas add sub adc jbe inc ss (bad) adc pop or add in sub stos push dec fdivs push mov pop inc test sbb fisubl or je sbb scas mov fstl (bad) jne,pt into inc movsl or cmpsl (bad) push (bad) adc cld push stos jp pop sbbl or adc lods inc test cwtl push fwait rorb movsb mov adc repz adc (bad) xlat shlb adc adc push mov or add pushw andl addr16 sub dec sbb dec sub insb jmp loopne xchg mov stos mov bound cwtl fistp inc jae push sbb out je iret inc aas sbb push mov loopne xchg imul (bad) adc push xor fld scas fidivrl mov test mov enter push mov mov in dec sbb imul into and dec pop dec lcall mov fcoml xor cwtl xor xor scas push outsl jo xchg out pop rcrl mulb loop mov adc adc mov and in jns test movsb mov popf jge outsb or add push je iret push dec (bad) or sub lret dec and and push imul pop loope mov and mov enter cmp lahf es cmp add inc or popf or fadds push daa mov push insl push dec add lock repnz scas mov dec or pop stos enter sub fs enter imul sub scas sbbl jo mov loopne test pop cmp jns pop subb pop es add inc mov mov in pop dec adc cs push mov jb mov inc add push push mov add test jle sub adc and hlt xchg adc hlt loopne movsl outsl xor aas ret das inc or cmp sbb adc std nop pop inc sub jo (bad) fmul out or ret xchg push push pop add dec dec jecxz adc (bad) fiaddl xor push and and (bad) sbbb lret test push inc or or xchg lods mov xor push pop in pop sbb push and or addr16 imul add push outsl fisubl pop cmp dec push sbb mov ljmp bound jo inc in inc add add mov mov sbb add add inc inc sbb dec sub call jo xlat mov rorb or mov je pop pop inc arpl jmp mov xlat mov jnp loopne push (bad) sbb xchg cmp js dec sub adc xor mov mov or and push add mov jp mov cltd mov cmpsb fild mov cmp addb jae dec fwait dec data16 pushw or push mov sar int3 dec add movsb xor (bad) push (bad) cli add loopne lret add inc pop ljmp rcrl repnz adc fidivrl cmpb jne push and add lahf daa jmp fwait cmp lock pop inc nop mov pop shll push jne add test mov (bad) dec sbb xorl loop adc pop and inc and rorl adc push dec mov nop inc addr16 cmp dec xchg add xchg xlat add jne cmp mov lret pusha mov repnz pushf mov sbb sub add jne mov test mov icebp dec inc push addr16 jmp push and addr16 push and movl xchg test pop clc mov mov test shll mov insl jnp sub cld adc sar dec gs movsb rolb inc add scas mov push push (bad) xor pop popf pushf xchg (bad) fwait je loopne test (bad) out mov push jo or gs sub (bad) hlt enter sub sub add push movd test or hlt add push out push add js pop lahf add dec lock pop in (bad) sub jo sbbb outsl mov insl sbbb out stos sbb and cmp aad mov jp mov xchg test jmp cmpsb cmp shrb sub das imul jg and insl loop push dec sub jle mov lahf movb insl shl mov jmp icebp or (bad) bound (bad) cmp jle jne jp mov jge gs add setb sbb adc jle cmp (bad) ja xchg imul adcl push mov jmp out leave aam in (bad) jge dec stos (bad) mov imul or push out insb lock lock cmp je xchg test xor stos mov xchg dec mov mov pop insl mov in xchg inc roll in add xchg ret inc push shrb sub inc inc in lock xor es icebp xor mov pop (bad) fcmovne rorb push lcall cld jne adcl cmpl xor inc xchg dec pop (bad) mov movsb sub fs cld into fdivr and mov dec aaa sti or cmpsl sbb jl mov pushf faddl out and mov pushf pushf pushf pushf and pushf pushf pushf sub sub pushf pushf pushf sub pushf pushf pushf adc adc pushf pushf pushf adc pushf pushf pushf sbb sbb pushf pushf pushf sbb pushf pushf pushf add add pushf pushf pushf add pushf pushf pushf or or pushf pushf pushf or mov pop or push push sbb out ds js lock out lahf divl jp fdiv sahf out sahf shr enter jns out mov out sahf out mov out sahf nop test mov out js jo push andb jo out sahf push push jns out cmp dec sub jns out and sbb iret push pusha sahf adc (bad) js js iret repz ja ja jns out mov push loopne jns fdiv out sahf out call out sahf fdivrs jns out shlb inc sarb dec std adc das fild pop insl add mov pop pop loopne lea pusha cmp loope inc jge js outsb and dec jge pop mov cs pop mov fildll subl cmp sub inc outsb (bad) aam lret ret push in jbe push js or pop jmp xchg nop movl add add jecxz lahf dec adc and rcl sbb cs adc daa inc dec setae cmpb xchg cmp mov mov test sbb mov cmpsl or cmp jne jecxz xor fldenv jge or push push test or or fs jle insl sub add add xchg dec imul lea sbb add inc xchg das data16 and pop push adc sahf and mov inc insl pop lods mov or loope and stos push iret incl or push orb sub lcall mov inc adc and cld push pop inc or jmp xchg loopne ss dec mov outsb inc jg push lds sbb push mov pop aam addb fsubrs inc (bad) mov sbb or cld mov (bad) and mov bound add fs lcall pop fdivs inc pusha xor movq push push mov mov adc and getsec (bad) lock pop or xorl gs test test inc xchg mov test fadd (bad) mov movsb in adcl add gs xchg fs (bad) fild mov daa add sbbl es push mov cmpsl daa mov sbb daa (bad) lret cs sub mov sub jle add lods mov mov sub add movsl pop cmp (bad) int3 mull cmp jae or mov pop dec add addl daa push mov addr16 pop jle jecxz sub dec push adc push adc adc ljmp or outsl cmp fnstcw adc sub or xchg sti bound jns xchg or push or fincstp (bad) popa test adc pop xchg or mov (bad) mov (bad) xchg sub ret (bad) outsl lcall in cs xor add xchg pop (bad) sti std add push dec jne lds test das xchg sub push xor sub scas hlt push inc mov mov mov add cwtl push mov mov mov inc je and xor lods iret jnp jns pop or cmp push pop cmp cmp push pop dec addb test jnp insb push fcoml gs addb outsl fimull mov add add push test in inc dec pop daa push jb mov out mov dec or inc mov sbb data16 mov adc movsb jbe inc xchg inc adc dec adc push mov mov push les mov lcall add sbb and adc push hlt (bad) (bad) fcos xlat call call call (bad) jmp lods ret lahf out test mov fwait iret (bad) xor sub inc stos xor mov repz sub lods ret shrb sbb jbe fsubrs add sbb mov shll and push jl adc fisubl data16 inc xor inc pop mov push jo or push push sbb enter push push je mov pop cmp call stos adc in inc movlps enter adc and and jb and mov mov xor mov dec cmp sbb ljmp add repnz (bad) xchg xlat and pop or into sbb enter mov outsb leave jl sbb or stos sbb xchg or popa enter push jae leave roll pop or push fstl mov adc imul add xor out dec sub jmp push scas and mov fnstsw rolb add ret sbb cs dec fcomp and or xchg loopne xchg aaa xor dec push sahf sbb push or es or cmpsl lock or roll dec adc mov adc inc test xor outsl pop adc loop push mov push stos fs test cmp fdivrs in orl fsubrp push xor movsb fisubrl mov mov add shrb aas cmpl push fidiv iret addl push hlt test sub sub add dec addl testb (bad) jl mov add mov push hlt or pop mov push scas pop sbb sub sub sbb addl xchg inc adc pop cmp inc pop sbb loope inc push stc jo inc pandn adc les inc ret push dec rcll mov test enter mov jnp sub push xchg xor in inc fs daa vpmaddwd fiaddl xor add mov jl sub mov or push rcrb sbb cmp add jle test mov jbe dec jg add sbb or enter jo mov nop and push rol aas ss and sbb clc movsb mov loopne outsl sbb fildll test sub dec dec mov push inc inc dec inc inc dec pop dec adc pop inc adc mov inc dec sti cld fistpl push push push push inc push push pop dec inc inc pop (bad) cmp push inc inc dec mov xchg and inc push inc paddw cmp nop cmp das inc mov pusha adc and insb ja pop or test mov fs xor or push dec aaa or or test fadd add push jo mov add and pop dec push mov lret add in jp push outsb ss dec test sub xchg adcb and les imul jno sbb xchg mov ss add mov rolb sub sbb not mov dec push xor jo dec test sbb mov lcall fildl xor mov add inc (bad) xchg popf (bad) pusha das push aaa add mov movsl notl sbb je rolb sbb sbb add mov xor mov (bad) insl xor les push fdivr subl sbb clc push movsl add enter adc iret mov out push adc mov add sub pop dec daa pop cmp cmp movsl mov cmp add add cmpl int3 insl aam loope dec dec add call and inc ja add lock lock jae mov jo dec xchg sarb pop popl stos inc cmp in add movl adc sahf movb lock push jle mov movl jge mov nop jns inc loope loopne imul xlat fdivl enter mov cmc and pop sbb dec jmp cli fisttp or mov pop add fwait clc or or mov test (bad) fnstcw mov push or test mov das cmp jne sbb adc and cmp xchg and jmp movsb fcoms test dec ret ja dec pop sti pop adcl xchg push jle sub cmp mov add div sub xchg leave adc test lret (bad) or out cmp je or add (bad) mov mov xchg dec or int3 push inc out push and sub add add int3 out pop add (bad) nop cli pop repnz (bad) or jmp (bad) dec lcall lock or je insb pop je mov pop out call jno cs and xchg (bad) sub lds mov push fnstenv pushf xlat imul adc insb pop sub scas jb cs pusha or lock (bad) jge sti in xchg andl adc cmp jl xchg enter (bad) sub dec imul scas fisttp lock dec or sub int3 cltd jmp mov lods fstl popf es pop fs nop cmp cmp imul push push push inc jno ss sbb inc xchg mov mov mov fiaddl movsb rclb pop lcall jecxz inc ja lock cmp insb or push lahf pop add xchg enter cmp out mov jne sub cmp in adc cmc aam xchg mov jmp push add rol aam or aaa dec xchg push repnz inc pop loop push push add out inc mov add pusha add push push inc jo (bad) adc inc orb fsubrl adc in adc xchg cmpsl pop add das aaa imul popa xchg stos mov bound arpl dec push xor and add cmpsl ret pop sub dec add mov or and add push adc push (bad) scas test clc sub mov xchg inc adc fadds or adc sbb adc cmpl jne cmp dec fiaddl sbb std rolb fmull fmull cmp jnp xorl inc jbe leave add in or leave gs dec lods sbb fistp push jmp mov jmp mov push mov mov pusha aas pop das adc sbb xor (bad) fnsave movsl dec pop adc mov cmp jne sahf std pop or lcall arpl adc adcl cmp push addr16 arpl inc or iret sub test jge test jge ss inc loope pop xor (bad) (bad) (bad) xor xor dec mov add mov mov dec cmp ret sbb adc iret add dec and and xchg push sbb adc cwtl aam adc clc adc adc mov sub jae cmp mov jb or jle push inc mov loop add dec adc call insl or dec data16 imul pop test and mov add pop push mov or pop and aas pop jne popl or insb js imul das sbb fist fsubr sub pop mov and aas loopne push sbb add and sub inc ljmp dec test cs inc sar sbb mov mov inc call test and rorb adc rclb outsl pushl jnp pop ret add pushf je or scas std adc xor sub jmp and aam (bad) mov and test xchg arpl pusha ret xchg or rclb sahf bound push sub sahf cmp adc test ror adc fidivr and dec mov and push jbe pop dec inc or sub cmp dec inc sbb sbb add ja fiaddl loopne or sub mov pop es inc add in adc xchg in in dec fsubl add and add xchg pop cmp sahf inc sub aas cmp les jmp sub ficompl arpl pop mov inc hlt jecxz sub jo cmp rcrb mov jno mov jge mov inc adc push adc cmp jbe daa mov mov in aaa or cwtl js xchg add int pop xchg das add movsb inc sub mov cmpb sbb adc inc add lea cmp add dec push xchg mulb out push sbb stos sub cmp or (bad) lahf mov add fwait in mov lret sbb sub scas aas pushf jo pop test push arpl icebp sbb subl test sub pop std mov pop push (bad) sbb xor aas das cld nop out fwait movsb fist pushf sbb push push jg sbb xorl js mov add mov decl xor adc mov daa mov sarb and add jle lcall rorb inc movb sarl popa sub adc adc sub or jmp adc push or ret nopl push scas out sub repz add mov mov and adc sbbl sub cltd mov mov push aas pop mov add add dec sbb jae push mov mov cmp or push inc pop adc stc ds xchg inc mov cmp enter scas jmp aaa mov adc clc mov lock sub adc xchg sbb call xor mov cmpsb imul push les scas jl dec mov (bad) or sbb popa mov xchg jmp mov (bad) add add inc scas or mov xchg mov icebp test dec loope lret (bad) push push fs mov mov xchg mov jb stc and sub or rclb (bad) into dec dec sti push pop sahf mov push insl setb fildl clc xor push rol in add jmp js xchg outsb xor or inc loop,pt insl out dec inc out adc xchg pop and adc or sub adc add cmp add rolb cmpsl out cmp cld jecxz nop sub sarb adc subb fcmovb clc insl and and push adc mov ficoml andl mov add js sahf lock adc testl jnp inc jmp and xor or pop adc js (bad) mov rcl imul rorb dec add sbb movsl mov push pusha or shrb inc add es pop or fstps or jnp das loopne xorl sbb cmp cmp decb fidivrl inc add test nop das dec and push sbb or add mov cmp mov and std jmp icebp pop mov std cwtl movsb or sub jge lock lcall mov daa inc pusha dec mov leave (bad) repz cmp punpcklwd lea out loopne std cmpl jp mov push mov pop mov outsl or xor xor (bad) adc xchg sbb pop mov movsl int add mov pop pop add dec jmp shr ret scas int3 out dec icebp fwait adc repz adc mov fwait or cltd nop pop fistl test js (bad) jae jmp cmp lahf sub cmp je outsl mov mov xchg les add sub pop sbb xchg jo xor and xchg aam mov iret enter les int3 test push sahf and arpl imul xchg fwait mov or lret adc loope xchg sbbl (bad) aaa cmp pshufw cmp mov imul (bad) or cmp mov mov aaa aas movsl (bad) (bad) fidiv je scas js or outsl sub imull (bad) sub shlb inc push mov or (bad) mov (bad) push nop jb loope adc (bad) mov xor cmpsb xchg pop jmp aas jmp mov jmp jae icebp inc mov push xchg mov aaa and push je mov fldenv cmp negb sub add cmp xchg cmp scas xacquire scas inc test pop rcll ret lock sub jle mov cmp scas cmpl xchg or js cmpb (bad) jb movl dec dec inc out xor jno mov aaa cmpxchg8b ljmp mov lret xchg daa xchg mov and test (bad) sbb pop mov sub les jg push dec popf call jne mov mov in out ja nop aam cmp test add insb push or cmp push cmp fisubl pop sub in inc adc jb rolb add and stos and sub popa jae pop mov scas popa inc fwait pushf jbe xor fldlg2 sub inc lret aaa add cwtl mov outsb aam add lea pop dec push bswap or into sti (bad) mov je sbb inc xchg pop mov addr16 dec xor inc inc sub pop pop fstpl sub push pop add aam adc cwtl pop sub aas popf and lahf xchg movsb adc push sahf js sbb loop xchg add popa bound xchg xchg and (bad) ja lods movl push (bad) or int clc adc shlb lock shlb adcl ret dec fwait std jbe adc negb push hlt orl push clc fidiv wrmsr lahf mov sbb adc je push jne das imul pop adc jmp push (bad) mov pusha jmp inc adc ret jb gs subb xor lret leave adc adc pop sbb sahf dec dec mov mov adc into pop push mov mov push mov jle add add scas inc stos mov pop (bad) inc push ret mov or push movl mov sbb lods test sarb adc pusha popa mov mov stos cmp dec xor add xor sbb popa add es (bad) sub pop add push cmpb ret es push inc orl aam ss or adc mov insb lea ja sbb mov sub cs sub aam adc mov fcomip lock movsb xor push dec sub add int3 dec or les mov and aas xor cli adc fcmovne mov negl movsl (bad) xchg in sub cmpsb jnp negb sub xchg orl nop push push pop rcrl (bad) or mov data16 xor pop call mov cld popa or and mov or jmp mov std rcr add inc sbb xchg andl xchg sub and or dec inc popf dec or fistpll loopne add nop out mov adc adc cld add stos (bad) mov loope nop xor and ss mov nop daa rcrl and add xchg sub aam fild daa subl adc scas movsb sub imulb (bad) (bad) lods insb out (bad) cmp enter dec leave mov mov cmp inc push stos push mov outsb out or sti add sub or std mov adc leave les rcrl jae inc (bad) out jg jne lret cmp cmp adc mov sub add pop xchg fimul adc sbb cs test cmp jmp je xchg xor pushf xchg imul addr16 fistl out and dec hlt fstpt inc (bad) addl add ret xchg clc pop mov and ret push enter xchg adc mov pop jae lret or sub add mov xor mov adc jp out push pop cmp and test mov and in jb xchg push mov add cld imul test xchg and xchg xchg es test out mov les loop outsl ficompl inc mov outsl or adc mov or daa dec dec sub xor mov push xor ret test mov push mov mov cmp (bad) mov push (bad) repnz loope sbb mov mov pop and sbb add daa pop sbb add pop inc mov cmp pop push adc pop cs inc push xchg push pop fs cmp fisttp (bad) dec cwtl inc fmulp xor inc adc fadds or sbb out loopne xchg xor mov push pop sbb aaa aaa imul mov adc cmp or pop repnz fadd out lods jns adc or fistpll pop pusha push ror mov les cmp iret dec inc push dec lret dec mov (bad) enter negl cmpl push xor mov ja scas add fwait dec (bad) lret cmpb lcall lods cs sbbl loop xchg inc mov add pushf mov enter mov jl or ss mov push adc loop test mov je add test push out mov (bad) sbb call or or and test adc xchg lods leave (bad) jl adc in pop mov sbb or loopne in push push mov adc outsl into push cmp mov add (bad) mov sbb dec jae cmpsl fs sbb adc mov push lea test mov daa jg loope sub insl inc and jge xor xor xor dec imul or cld movb add jnp jle arpl insb push or adc outsl out popf (bad) pop js bound pop es jbe jge jb jb popa or push neg dec es insb bound jbe es sti pop pop scas gs pop jo addr16 jb addr16 add insl lods mov inc cmpsb insb daa push sahf out mov je outsb insb fstpt loop sbb and enter pop cmp cmp cmp pop je xchg jb arpl jns xchg mull das add mov lods pop or outsl pop hlt lock xor fadd add jne adc cmpsl add mov pop test pop scas in cmp add push fstpt add mov addb add mov je inc jl daa dec cmpl cmp pushf mov inc and push orb in pop pop clc rolb push or movsl push or insb insb push outsl or into mov (bad) mov mov stos jno push out jmp push daa pop pop pop jmp jge adc ud2 or jle or push mov xchg mov hlt data16 ja leave stos lea jbe pop xchg xchg dec es or (bad) dec push in hlt orl xchg xchg mov pop test sub adc subl mov cmp les dec push es int3 add and mov adc mov nop sbb or bswap mov mov add stos lods pop xor jge add dec jb or jb jmp inc fdivl and dec adc inc pop mov into cmp jmp sbb pop xor push sub mov sbb add or xchg or rolb inc nop sbb add jp data16 and push nop pusha sbbl push jle adc adc jb or sub pop xor push aas dec jmp or mov rorl dec gs lret add push push imul and and je ret add xor push (bad) or add add jg xor push pop pop or or or or or or push movups adc repz adc iret repz sbb sbb push pop jns imul and and loopne push fsubr repz out or sbb ds repz dec pusha jno xchg movsb cmp repz (bad) xlat call stc or sbb out jo xchg mov scas mov lods inc xor es mov fmuls add in or add push push adc xchg push cs and or dec in lret or push mov push and cs sub dec sub in lret cmp movsb jb cmp inc push cs dec sbb xchg push dec sbb lret sbb jmp pop sbb xchg push ja push popa imul bound and sbb push push test xor andl xchg mov sbb mov fdivrs xor or les das mov xor or ds test fadds js sbb inc dec push repnz mov lea adc push (bad) insb je or sub incb push mov push adc push out fs pop div mov xor div sub cmpl mov mov out sub jae jl loopne mov push or mov push mov mov dec jb pop jns mov shll mov add push pusha daa out inc dec jo in jg dec pop mov (bad) mov les out in adc jno rolb out lret add mov add fiaddl pop adc sub adc (bad) pop mov insl inc mov addl sbb push into adc aam add add add and (bad) jne jl popf outsl js addr16 add mov sub xchg mov fucomip push je push insb int sbb lock pop push mov push pop leave xorb arpl nop hlt int aaa leave mov into mov mov mov and jmp movl add pop inc (bad) push sub pop add push mov mov inc inc es lahf out push clc xchg or cmp mov or nop bound lds xorl sub insb or rclb nop cmp addr16 cmp lock nop inc ret jp insb or stc nop scas pop sbb push sbb les xor daa and mov sub in lcall and xor movsb ret adc mov pop push inc sub push adc mov inc jb pop movups adc inc inc cs dec adc adc dec mov test push mov ss or xorb mov or and dec scas push fwait sbb and cmp and pop jg les or cmp sar inc rorb sahf mov push push outsb cmp mov mov mov inc outsl test roll sti push fdivs mov mov leave add push inc inc jg inc sub push inc sub addl imul test dec gs jbe add loope sbb scas adc test ss adc or dec ret adc sarl push dec lods pop lods push enter sbb inc xlat add xor and nop inc jb push rolb test fmull movsb or push add push cwtl (bad) lar pop fimul pop mov sahf negb or push sbb imul orb ja dec ljmp adc adc in and push mov pop sbb adc or addl gs cs adc and mov adc mov add mov dec loopne mov movsl sarb (bad) mov les add pop icebp adc add pusha push inc test mov and add mov scas and push dec jae push test add imul sub add fmuls cmc mov cli loope fldcw xor int ljmp mov rcl cwtl jne int3 xchg enter xor fbstp iret fist mov sbb mov mov ficompl das cwtl ficomp or hlt in pop adcl pop pop inc lods adc cmc cmovb cmp cmpsl stc fidiv addb adc push xchg jne arpl andl push push mov (bad) lock add jge xlat pushf (bad) fcomi push mov dec push add jle in andb sub push inc das inc adcl or jb mov xor jmp sbb push sbb dec aam xchg pop dec insb (bad) inc mov push pop icebp sahf xchg pop sbb sarl xor add sbb add add lret cli sbb imul lods adc dec (bad) rcrl xchg xchg pop lea popa sbb jb sbb mov leave sbb movb rclb jno and and leave and es jl pop dec movsl cmpl out mov cmpsl sub mov push jae xchg call mov xor jb subl out add pop das xor adc push pop test test inc jmp je or push out int3 pop outsb inc push inc adc or adc test or lahf jecxz lock loopne push push adc or jno and pop ja repnz sbb sbb adc sbb imul jmp lret sbb xor add aam inc mov mov ret mov popl sub fdivrs mov inc icebp and pop add dec test inc shl adc cmp sbb jo js and fdivrl sbb or lods inc test loopne sbb or cmp add aad andps or adc adc test cwtl adc add stc xchg pop adc leave adc adc xor adc jb sbb push add add hlt adcl jb pop jb inc or sbb jae sub and jecxz in adc xchg es sub sub cmpsb xchg test xor sub push das xor xor xor xor ret xor or sbb add les insl loop in pop aam out jmp or and aaa cmp scas or lret loope sub stos pusha push in sbb dec or jb or and xlat addr16 and stos add mov inc and pop add push lsl nop or add jno xchg pop and adc push pop and push inc dec inc scas dec or push sbb mov pop push adc faddl leave and adc lds test and das orb xor add xchg or xor ret xor or pop rclb push sbb add or outsb sub adc rcrb dec mov and dec fs ret or (bad) mov popa insb adc fwait add dec pop sub es or inc xor mov add dec and addr16 sbb xchg mov sub or mov cmp popa loope repz adc jns add dec mov pop nop pop addr16 fidivl cmp ja scas add hlt loopne cmpsb insl insb cmc pop out push jl pop leave dec mov add aam andb test and nop pop test cmp xchg xor push add cwtl sub fdivs fsubl call push mov inc adc mov les (bad) xor sub daa mov test sub sub pop adc mov mov fsin lds scas call or sbb in sarl lcall lcall jl push cmp xor pop xchg push iret jnp push xchg push jno imul sub xlat (bad) ja mov das loop mov fmuls insl add out xor jp and or call pop cmpsb shlb adc adc sub lds pop adc arpl aam adc push outsl jo sti or inc jnp pop outsl insb int cmp lret and or add or or push cwtl cs add frstor push mull ficomp cmp push cmp repnz in or jno push jp mov xor push push lock test or test sbb cmp sub mov add stos and movups dec mov and test cwtl add or subb adc cmp sub adc dec movsb adc xor adc jo jbe pop ja push cwtl dec popa js adc pop inc and aaa pop cmp cmp add cltd xor and loop stc push in pop sbb sbb and aas or and xchg int adc test pop adc rorl stc push arpl and and mov sbb aaa adc stos in sbb scas daa sub xchg mov in cltd dec sub and pop sbb xor xor js jb and scas sbbb lock in and pop adc adc pop dec sub mov push adc clc sub and inc fimul sbb inc push push push inc mov jge adc es cld sub pop sub inc sbb loope dec mov jo pop prefetch arpl or push test sub popa lods pop clc aas push mov (bad) cmp add inc mov shrb mov xor imul pop jnp stos or pop aaa addb in or jne orl mov add pop push clc mov insl cmp push add movsl xor out incl imul add arpl ss hlt jo pop pop push mov inc mov xor mov cmp push mov and aam rolb lcall ja test xor pop xor faddp dec outsb je jb mov mov jne push or add mov sahf lea sub push sub scas lock repnz fistp cmp or push push fcmovnbe add inc lock push mov cmp sbb pop lahf shrb mov ffreep xor jo mov mov ror sbb rclb movsb add pushf xchg inc mov sub xchg mov lea clc xchg mov push inc popf sub movsl dec fisttp push jecxz dec mov push movl or arpl jno adc or int jecxz shlb inc jmp mov xchg cwtl cwtl or inc push mov stos sti rclb and jmp das mov imul test xor jmp sub (bad) jae sub xchg add lods or sub sub pop notl clc addb jle test jbe sbb mov add outsb or push nop push nop add out popf je sbb push ret lea enter cwtl inc mov movsb mov inc xchg out rorb fmuls add pop sub add mov shr add fcoml popa dec test movsb push lods add dec xor cmp clc nop add adc xchg nop fs rcrb add xchg inc adc and pop inc lret jo xor add popf sub adc and (bad) pop pop lea adc or cmp inc fwait nop test xor dec add out es paddsb xlat addl lods test pop int into or push cmp cmc stos add adc push shll test adc enter push inc dec sbb push inc loopne pop addl adc adc and arpl test dec sbb jge cli test mov icebp jnp pop inc inc pop adc adc rcll shrb mov cmp fidiv outsl mov jp push mov daa insb or push icebp movzwl insb outsb pop fsubrl jp jmp mov or movb mov xchg test add mov sub cmp pop cmp iret xchg scas adc inc sub iret cmpsb ds shr or or movsl xor lods xchg adcb inc enter push xchg les cltd push xor inc in xor adc test sbb mov push pop xor mov add push in repnz nop inc dec loopne add or push mov or dec inc shll lock xlat and popf add insb insb ret stos xor cmp adc testb ss push movsb andl mov mov leave jo add cmpsl jo fisub dec or sbb push into mov lahf xlat inc insb inc mov and insb cmp fstpt sbb push xor cmc dec scas add syscall lahf add fcoml xchg je sbb push das jge (bad) hlt les lds push nop dec test or add rclb dec pop inc mov cmp push mov pusha pop add les fisttpll daa mov data16 cmp addl cmp inc aam jl clc pop sbb popl mov mov sub inc xchg pop js mov mov sti mov sbb add lods mov mov hlt aam or (bad) push inc inc adc mov movsl push enter add iret cmp and inc lds mov lods and (bad) fmull xchg ja inc (bad) shrd je mov test xor in jae adc das ret xlat cmp jle sbb jl (bad) sahf jns (bad) arpl negl mov jmp push rclb sub and pushf (bad) addr16 sub sbb push push js pop mov lahf push or aam dec mov jge lock stos subl int3 or or nop popf rorl outsb or fstpl and mov push xor adc sbb mov and cmpsb inc push sub loope orps mov (bad) pusha sbb xchg movups sub ret inc pop pop lods fbld and dec cmp sti mov push adc mov aas push pop pop imulb or fnstcw stc pop ss add inc mov ss hlt arpl push lock inc jno pop adc cltd in inc dec pop mov or pop and push (bad) xor push cld cmp lcall mov and inc jno sbb cmp jbe jae fwait (bad) jmp xor jns mov dec int3 (bad) mov add cmp dec cld stos adc in cld subl into adc aas mov sbb arpl mov jo insb jle ret sbb dec or add rorb inc cmpsb push or imul mov cmp cmp adc sbb sbb orb (bad) and mov andl dec cmc orl dec push push pop sbb adc inc cmc inc call testb je mov xchg push loope jmp add or ljmp mov pop inc rorb out movb test and add jmp sub add add and nop pop adc add push inc adc nop cmp add push add pop inc dec movzbl cmc dec sbbl inc out sbb andl stos adc mov in pop cmovae dec or mov adc cld push add daa push sub xor dec ficoml inc cmpsl test sub push push daa mov (bad) out aaa outsb dec popf movl push fsubrs push aam out imul mov mov mov mov pop pop add icebp lds dec test mov sar cltd lock jae add stos scas ret cmp lahf xchg test inc sbb push jge or jns cmpsl jbe add pop jecxz mov adc lahf push nop fisub dec es mov inc frstor xchg sub cmpsl test inc dec add xchg add mov or cwtl nop mov mov std lret popa jge aas testb shrl or xchg pop pop aaa cmpw sub aas sbb (bad) mov cmp adc adcb dec pop cld inc pop std pusha pop (bad) mov jae add movsb push and loopne jecxz adc inc xor out jo fldcw call nop pop push push jle sbb rolb jg je xorl add daa pop aam adc mov ficompl arpl fwait add and daa pop adc movb adc or fsubl or or mov cmp pop ret adc popl jae xor inc lods rol add cmpsl pop mov pop sub icebp sti xchg insb or jmp jecxz inc js nop loopw xor insb jbe or adc lock jge or das jne fmull mov clc test aad and pop mov add pop (bad) mov iret mov test fwait mov mov movl mov out mov repz ss or or das sub inc push test dec pop out (bad) pop shlb mov lea xchg mov lock dec add out cwtl or test cmp pop lea cmp orl movsb loopne (bad) cmp je mov push sbb xchg adc push rorb sub adc sub pop pop mov xchg cld roll sub pop test test dec pop lock iret inc push push push dec dec xlat or addr16 mov test jo jmp out rcl push inc xor jne push jo mov sbb test xor (bad) xchg dec mov sbb cmp jne xchg adc add hlt adc incl sbb and xor pop dec sbb push sbb inc test fiaddl cmp mov jmp push hlt mov jnp stc xor test testl cmpsl pop push xor popa cli dec sub sbb xor xchg mov push pop lods movsb int mov pop movsb or sub test lret cmpb or jmp adc ret ret or lahf call aas andb ja adc adc xchg movsl addr16 movsb sti inc cmp inc mov cmp adc xorb inc stos (bad) mov xlat push les es dec xchg sbb adc nop je fwait imul addr16 inc inc stos fidivl ja stos or (bad) push aaa xlat mov movlps (bad) popa inc mov pop pop jbe cmc or xor (bad) mov xor sahf inc lcall inc or icebp cmp adc rorb add loopne cmp ret ja mov test jl sub inc fstpl xor cld xchg in sbb js mov std (bad) mov lret cmp imul push sub xchg lods sahf (bad) jo inc fmuls push dec jne xchg sbb add loope cwtl and mov sub aas and ss and sbb dec data16 push push mov pop mov mov arpl push imul adc pop cwtl jg push mov add adc pop and push dec adc and sbb (bad) fcompl lahf ss outsb mov mov loopne (bad) cmc mov or rol mov ret add push mov and stc mov or xor hlt ret rcrb inc mov movsl lea mov lods sub jmp lods push push xchg dec and jne mov push mov and add loop clc sbb mov rorb sbb outsl xchg mov dec mov inc cwtl pop and xorl (bad) aam pop or and lods (bad) mov and xchg inc call sbb leave add mov sbb xorb mov aam jmp xorl adc mov aad addr16 (bad) fwait dec push daa mov aad (bad) dec fisttpl dec popa mov sbb push push cmp and enter add add sub scas inc hlt xorb adc mov jo das sbb and into (bad) jge inc jmp inc loopne les push or jge jge lock bound aam adc pusha lds lods in and inc sub idivb xor cmp jo jmp ss xchg scas dec push mov inc addr16 push pop xchg (bad) push fsubs outsb and (bad) stc pop jmp popa in mov ficompl jno imul inc (bad) sbb pop and mov bound sbb subl cmp push addr16 daa insl loope xchg jp fcoms xlat ret fsubr and jne iret inc adc arpl mov outsb mov test cmp mov push pop inc or popf ret xchg sbb (bad) xor repnz mov js cmpb pushf sub int sbb scas fdivr add mov or ljmp jne xchg out fcmovne pop xor cmp js push jno inc daa add jmp push mov bound push dec test std test cmp adc ss jbe pop or sbb fs in nop cmp dec pop add popa pop push ret ret mov add inc test jb std inc sbb xor sub inc sub mov push movl cmpsb or cs sub repz loop dec mov and sub dec or inc add cmpsl jno jecxz add daa xchg pop mov sbb das dec loopne and xor or and sub daa clc dec xorl dec daa push lods adc inc lcall mov lods adcb bound mov popa push push test negb xorb sbb jp addb adc cmp xchg sbb popa loopne inc push icebp jmp test (bad) adc push and pop fbstp dec push inc sub test mov idivl dec mov cmp inc lods adc or push inc arpl daa push andl dec mov scas cli movb inc jne jmp xchg notb add inc je sbb dec call in inc push cmp xchg (bad) loope cmp aas dec sub sbb or xchg ss andb inc pop adc mov fsubs (bad) mov pop cmp addr16 push mov cmpl cmp xchg xor pop fildl aaa lcall sbb sbb jb mov inc dec xlat cmp (bad) je add sub jmp sbb movsl mov sarb xchg sbb sbb mov jbe cmp mov adc imull push inc jo mov je sbb in dec cmp jecxz xor ds cmp outsl cmovge push xchg mov daa push sub cmp mov add or add mov and in (bad) jo or js push addr16 mov (bad) insb add xchg push insb sarb dec sbb xchg cmp cmp or pop ss pop lea fisubl mov add rclb xor sahf or stc jl pop fxch int mov (bad) aas push or mov jp jmp dec cmpsb not sarb cmp or fwait lret (bad) lret jle,pt shr pop ret dec ret jb inc cmp outsl add (bad) push je push xor pop inc cltd in mov mov jb adc sbb daa or sub sub fs bound movsl push dec (bad) jle push enter scas inc add cmp push push mov adc pusha xchg xchg dec rcrl jae movsl fcompl scas push adc add imul add inc jno dec pop add sahf cs and cmp or fs push iret and and push aas and mov addr16 cs je push sub rcrb inc mov sbb jne push xchg mov icebp (bad) xor les mov sbb mov push jle xlat (bad) mulb loope inc adc inc dec sub jmp pop cmp std jle or and fwait test jne sti dec fisttpl add (bad) sub cs xchg mov jmp xchg cli cmp jle xor lods add add xor jne dec sub int3 mov lods dec and push xor xchg test test xchg mov sbb mov dec adc cld xor lret mov add (bad) loopne or ljmp sub sbb cs or dec and btcl fxch in inc inc cmp enter dec push and push and cmp scas adc (bad) hlt stos enter and inc arpl sbb push inc dec pop movsb add data16 adc jnp daa adc test cs movb push pop mov sub push adc push cltd adc lods dec clc shrb or pusha mov xor xchg cld mov cmp sbb sub stc xchg inc pop push mov sbb adcl push mov or adc fs scas xor xchg xor add ljmp test orl test jg dec lods test mov cmp jne dec std inc clc push mov pop hlt ja cwtl adc clc and mov test or mov jecxz inc cmp in stc imul gs popa dec bound or popa outsl or in push inc sti adc add sti add pop adc mov adc xchg mov lret lock push jae or fcoml inc mov xchg cwtl ljmp cwtl pop or mov pop or jmp inc xchg test nop push or adc (bad) js inc loope (bad) sub xor loop fcomp movl test push mov repnz inc mov mov fiaddl shrb (bad) mov nop xchg loopne pop aad jbe xchg lcall int3 adcb or adc mov sub sub sub lea leave adc adc shl pop dec lcall lcall aam mov mov shrl and and (bad) push jo (bad) mov mov lea std movsb sbb add inc push outsb andl pusha dec add and mov imul inc fistpll pop and mov lods sub loopne push test push mov push adcl sbb sub xor loope xor or or fucompp push jge add sbb lahf call sbb jns ss push pop adc test push push jmp push es andl xor push ret clc jb inc mov mov test xorl subl icebp mov sub push or mov adc xor xchg (bad) push add clc and lods outsb popf (bad) lds out pop adc sub pop mov js test push int outsl push pop adc push sarl add ret adc jl test jae call mov daa adc xchg xor lea shr cmpsb popa fcomi push clc push sub mov das dec iret loope adc inc jmp test inc dec rcrl xlat dec xchg jne xor nop jbe iret add ret adc adc pop jns xchg orl sbbb (bad) test outsb pop out adc xor nop xchg dec test sub fcoml xor dec insl pusha dec dec cmp lret das sti je mov inc fdiv test dec les add inc dec xorb ret jg clc sub or add mov push loop mov pop data16 shrb adc jp add mov pusha adc push inc insb das test inc adc mov test xchg jnp inc add dec loop sub adc sbb (bad) outsb lods nop mov nop or add loope jns push cmp (bad) sbb sti add mov xor mov mov std push lock jne push aam sbb and sub out jmp insb rclb shr xor push and push sub insl mov add sbb pop sarb test xor sub jmp (bad) loop sahf xor xchg add cmp dec out not mov int add cmp cwtl cmpsl push xchg lret push jmp sbb pop jp add mov xchg int push hlt test xor jb cmpsl lock shl (bad) fistl nop/reserved push bound push inc jb orl xchg arpl and fmull shrb scas push scas xor pop shl sub addr16 lds (bad) jne or dec out ret adc adc jecxz adc jg cmpl enter cmp and or inc add fiadd xor mov or nop (bad) sar jne inc stos loop fs (bad) jmp pop in add shrb aad add aam sbb xchg sbb ret movsl fiadd xlat (bad) fisubr adc js fld add nop test cmpsb add jae inc adc push mov xor xor sub fs addb push mov es testl sbb push dec xor fisttp mov (bad) and mov or dec fstpt rolb rorb and or cwtl jmp xor je xchg mov push mov add (bad) fnstcw jl sub popf cmp and or fidivr or pop aad in pcmpeqw loopne bound (bad) cmp aas lock inc mov xchg push or mov aas in sbb push inc jg mov fwait sbb nop in push xchg push cs add movsl push sbb outsl in xlat dec nop or cs sti sbb imull dec sub push sub sub xor adc cmp xor mov clc pop ja outsb in push or cmp xor xchg fwait mov xchg (bad) movzwl lock xor outsl dec and pop rclb xor jno or dec (bad) mov repnz jne or hlt mov movsl or (bad) icebp jns call lock push jle jg (bad) into int3 mov popl ret and das hlt inc lcall or mov xchg js sub aaa jecxz sahf pop ret pop cmovne xchg out xchg inc hlt dec xor dec int3 daa mov in add inc pop clc adc loop jbe test sub loopne xor xchg adc push add inc pop dec into mov xchg sub jne push flds mov push test lidtl pop and stos insl adc imul aas outsb jae xchg inc loopne (bad) jl inc cmpsl cwtl or jae add adc hlt mov inc pusha cmp xchg in iret lods inc clc mov lea push mov sar es cmp in cmp (bad) mov sbb xor pusha je sahf int3 dec mov nop xchg jg cmp popf fmull push setns mov les dec icebp inc stc add or jns out adc and xor out sarl flds loope leave add pop push and jnp dec mov fs inc push mov push pop add and push adc iret loopne inc or adc dec das cmp inc push push lret imul mov inc pop and mov or pop push lods popa clc push nop test add inc sbb xchg cmpl decb adc mov lcall cmp push or aad cld mov adc inc repz imul mov sub inc mov cmp popa adc push adc dec pop mov pop adc fwait push fistpl xor aas das sbbl jne xor adc mov rclb adcl imul or inc sub inc add xchg mov dec cmp sub dec or ret xchg (bad) loope dec inc cmp pop and mov mov nop jae movsb fisttp adc pushl add pop ret inc mov popa push add arpl add add (bad) dec in xor jb mov push adc scas push xorb inc test movsb aad nop inc push mov inc aaa mov lds in sub loopne adc dec cmp lcall pop fs cltd adc (bad) rcrl aam rcr xor add adc and or pop mov hlt js stc pop dec push in xchg xor or (bad) (bad) fisttp dec inc sub sub and sub push pop movsl mov fstpl xor jae sub sub and xor sub cs fdivrs ljmp test adc je sbb outsl xchg fsubl or or pop roll cmpsl aas mov dec mov inc mov test xchg mov or ja je (bad) dec insb adc loope add mov mov loopne push mov inc jne call loopne push fcoml addr16 lcall cmp inc mov inc sub call lock or lahf dec jne jo inc call bound dec adc rcll xchg pop jb adc jbe push test test mov rcrl ret bound inc test xor idivb push or mov push pop cmp add inc scas push jge mov inc adc pop or lcall and add out fwait imul adc or lahf add xor and aam and jns insl xor mov add inc sbb push mov fisub or or loope loope mov in adc inc and enter andb jb test mov and (bad) or mov pop loopne mov and je cmp ret add sbb mov ss push dec dec inc in push pusha mov cmp mov or or and xor aaa cmp or cmp jp or push idivb test (bad) and les test imul xor out add sbb addb cmp jne sub in sub jge sbb push adc jmp jo lea adc pop stos push orb dec mov test mov test loopne ret add or mov outsb jle pop jmp sbb mov call or pushf add xorb push sub mov popa ret mov sbb (bad) adc sahf add andl or xor ret add jmp xor test or inc or add dec push ja or insl jo jmp inc in add inc jg push enter fwait pop lret std push cmp add jne mov dec data16 adc inc cmp dec lods daa fistl mov add fsubr (bad) subl aam sahf hlt push dec xchg jns jp add (bad) aaa inc mov xor mov orb and movsb fstps add or nop add pop push jns ret sub adc cmp mov mov lock sti xchg rcrb add lret dec sub fcmovnu adc shrb inc jb outsb adc rcrb rcr in sahf add or push pop js loopne xor test push pop push lahf jnp fistpl jle in push loopne push dec push cmp jo test push lcall and mov sbb inc jmp mov mov cmp jl nop inc add adcb xchg enter rolb andl gs dec dec test pop cmp or sbb cmpsl test push mov push ds xchg and inc sub daa cmp subl adc mov fnop mov addl js leave inc push jl jo xchg insb xor andl fwait xchg (bad) andb inc push inc test sahf notl push js aas inc jnp push int3 push out pop sub xor push and dec adc inc push hlt push or movsb in adcl add mov int3 pop mov pop push xchg inc jl insl insl clc cs push sbb mov mov pop sub dec pop dec fbld aaa inc push mov ds shrb push jb rclb push sub fidivr adc fstpl subl aam add or imul rclb xor cld xor insl bound push or mov push push inc cwtl rol adc jle test and adc or or or or lds inc (bad) insl popa in arpl sub sub push ja cmpsl sub mov dec xor xor push ret pop cltd or add adc pushf por and or repnz imul mov add mov push push dec clc or jbe add (bad) popa popa imul enter mov adc out in sbb (bad) jae jns (bad) imul mov inc add sub mov add fimull and and outsl fcoms dec jae pushf push adc dec call pop xor jl cmp push pop sbb sub push and push or fistl or repz jnp or (bad) fnstcw mov notb dec cmpsb lea mulps loopne or jbe pop sahf or nop jl adc add push shr dec dec or mov popa push rclb lret aas lods pop rolb sti xor movsl test sbb out movhps add adc pop and or and fmull outsb add lcall xchg jnp push dec or incb nop add xor dec lock invd pop ja and push or into and push push in adcl or fisub sbb repz fnop pop adc add nop nop or xchg mov xchg add dec loopne push mov adc sbb dec or mov popf dec popa call mov cmp dec push (bad) je and dec xchg pop pop mov sbb mov test mov shrb iret out mov lods iret mul push xor (bad) mov push adcl outsb and mov js sbb mov xorl cmp in mov pop ret stos jecxz paddusb add push or xchg inc pop xchg adc jl jle mov sub or in jnp adcl and lock mov mov or sub test inc call ds mov push inc mov push cmp mov or (bad) (bad) xor and pushf arpl pop pop dec push (bad) mov gs add scas out and jbe cmp push pusha adc addr16 lock out pop adc gs imul sub or cmovg dec push dec lds pop pusha push push loopne xchg rclb test mov (bad) repz out adc test rcll mov pop test ret mov (bad) jo cld push test mov push (bad) ficompl xchg hlt adc mov push pushf inc les maskmovq testl inc sbb andps pop xchg dec loop outsl fst fbstp pop add add add or decl decl add add or mov mov mov pop pop clc and sbb cmp inc mov mov in (bad) in ljmp xor ljmp jmp jmp jmp jmp cs (bad) jmp jmp (bad) (bad) fdivrp (bad) fdivr (bad) ficompl push add or lahf mov sar iret mov dec clc int int3 dec outsb repnz inc mov ror lcall adcb in sahf cmpsl fnstcw ret sub movsb (bad) in out jl lds push pop jnp push jns (bad) xchg insb push cmp iret repz out int rolb lock repz inc sbb rolb into es push push and xchg mov shlb iret test idivb hlt push mov mov lahf out push adc cmpsl mov ss popf rcrw adc push mov mov idivb push mov mov shrl sbb push pusha scas push lock shll nop call adc inc xchg repnz fwait dec loopne or sarl cmp fcoml (bad) or aaa dec cmp shll addl pop enter enter mov inc xlat xor cmp cmp xor lret pop jo sub incl inc fdivs adc add mov add xchg je sub orl jns or dec in mov enter andb ds push shll pusha popa adc jle sub or imul or sbb es sahf sbb dec insl or or inc and pop adc push push out or xchg inc bound adc inc mov popa inc cmove cmpsl mov push dec popa je xchg inc push push addr16 xchg mov les adc sbb or inc add sarb jno ret rcll ja ss inc inc in pop add or or dec adc popa pushf adc out xor xchg iret xchg sbb mov (bad) ficom int3 dec xchg addr16 or cwtl fs mov inc push inc cmpl or outsl pusha rcrb mov je sub subl push imul cmp cwtl mov add xchg (bad) fdivs stos and push bound adc sbb mov jo fwait or push iret mov loop pop ss add and or cwtl (bad) in iret loope pop sbbb shr clc jo mov loopne or imul std pop mov cmp sub push push fbstp clc or (bad) add add add adc das fldl push xchg mov add mov sbb sbb incl push add aaa mov mov mov mov fadd pop push adc sbb jmp xor and and mov mov mov add or loope push mov xor cmp (bad) jg icebp repnz incl ret inc inc inc aaa mov into std (bad) mov (bad) mov (bad) mov pushl (bad) mov mov or scas sahf out mov push mov jl out mov cmpsl fstps clc push inc repz iret dec push and inc in add jns pop add mov inc and sahf (bad) into add push aam pushf ror sahf cmpsl push fsubp (bad) lock push (bad) fsubr xchg out jge and cmpsb push clc jo sahf out push or push dec repz or aam es sbb mov movsb push sarb push stc cmp repz sbb sub push or ds mov or adc out test ljmp or push sbb mov (bad) or int push push test pop cld sub fistpll xchg pushf mov sbb ds xchg nop pushaw add fdivp ds mov enter bound ds lret sub pop and mov push jnp push in insb fcompl rclb push add push mov out mov les aas subl inc addl aad adc sub aas movsl add in insl cmp add push in push and cmpsl jl mov inc pop xor add inc adc mov test cwtl loope xor dec sub lahf aas pop sub ja ret mov xlat lods outsb mov mov xchg outsl mov cmpsb push sbb or mov mov cmpsb js mov daa out frstor push pusha sub sub sub lock jnp add adc in pop inc int3 sub xchg push sbb inc pusha sbb and mov outsb scas sub and lds insb jl add and jnp ret adc (bad) dec pop pop mov cmpb (bad) mov dec jno add push fdivl xchg push sub or or mov and push or je push imul insl arpl or jbe adc inc mov test cmp push push dec add mov xchg jns lods and dec inc testb call lcall jmp insl loopne (bad) jle jl sub xor adc pop call mov nop or or push push daa sbb loopne or gs pop fstl xchg inc or inc out lock cmc fnstenv xor inc adc sarb adc mov orl ds test aam cmpsb adc js je je insb jecxz xlat mov push inc lret mov xor mov sbb and xor adc cli add and inc and mov ror pushf cmpsb cmpsb push mov out sahf out xor inc push pushf out sahf pusha insl jp xchg hlt outsb cmp mov cs iret je lahf aad mov aas cmpsl stc push cmp cmp push inc dec inc cs icebp dec adc push adc lods mov in in ret movb lahf testb popf push pop scas push adc test daa inc jbe sub add add sbb push ja adc mov movsb push inc adc jo lods ret jg xor jnp pop pop pop mov dec ds mov (bad) in je adc dec mov ret sbb xchg lods subl dec or mov mov (bad) fstpt push test add lods ljmp mov popf sub sbb clc pop push lea push fmuls test and sbb (bad) sbb pop lea add and sbb pop cmp inc add inc movl jo xchg cmp outsl push push jnp cmpsb and push (bad) sbb call adc sub lods push add popf dec jne loop fs and or clc mov jno adc mov inc jmp shl pop notl inc jecxz xor loopne test movups aas push or inc jmp sub mov mov mov jb ja inc push pop repz dec inc push xchg mov push fisubrl daa dec push ficoml inc sbb inc daa push jo jo jo daa or inc insb popa subl push ret nop xchg daa dec push jo imul mov andl jnp movl lret subl add lret jno xorl adc js test inc cmpsl mov pop xor jnp pop add jno daa pop add cltd cmp adc movsb inc ret pop xcrypt-cbc cmpsl nop imul and or int adc adc jo push iret pusha and mov push cmovo or lcall fwait cli sti inc xor push dec lea iret mov subl sbb pop mov dec adc adc inc (bad) mov add push sub daa xlat mov addl adc jo bound sbb mov ja push jmp push popa fdivrl adc (bad) or sub mov inc mov inc adc push push adc inc xor sub sub push or movsb and sub ss mov imul or pop pop lahf test aad and dec (bad) push (bad) adc insl sub add clc popa cmp jo hlt xor xor jge push adc (bad) and adc pushl dec sub adc insl cli push fwait sbb inc add (bad) aas add dec dec jne das xor push jg mov jmp jge push jge (bad) aad lock or nop push or push push dec add dec cwtl roll rclb mov addr16 inc add or adc adc sbb and pop xor shrl sub scas push push or inc in push push mov mov and out outsl and jo adc adc xor nop sub add sarl adc fldcw hlt add or inc or insl xor ds outsl mov je add add lock ret xchg mov sub bound inc (bad) pop inc mov addb dec mov xchg icebp sub and jne mov ret lods or sub (bad) adc les mov orl xchg outsl sub sub add mov mov cwtl push hlt (bad) jmp or incl aaa mov dec cmpsl dec or ss sahf pop sub pop ret or jno (bad) cmp or nop inc popa mov movsb (bad) test bound cmp adc movzwl aam frstor loopne mov mov adc mov call xchg mov adc fs lods subl syscall inc push dec jecxz rolb jp and scas sbb sahf jae pop push loopne aaa add aas enter add jo push test popa jae loope xchg sbbb mov sarb scas inc dec cmp cwtl and adc sahf in sub clc push mov or js add incb inc xchg out sarl mov lahf (bad) lds add mov adc push dec enter iret add adc test subl test insb mov cs sub imulb mov mov pop dec adc repnz sub dec or adc popa adcb mov or neg xchg cmpsb je movsl mov adc andl (bad) jae insb dec cmpsb test cs iret cmpsl mov push rcrb add cmp flds shrb mov mov add pop mov aas push outsl pusha sarl jb sbb inc adc jmp cmp jne inc and dec mov scas dec rcr les add sbb pop negl xor lcall test rol push clc xchg mov inc in sti jl sbb ss lret jecxz xor jne jne jecxz mov das lret mov or repz fdivl aad jge cmp das lock push clc mov adc add movsl pop (bad) test push mov mov dec movsl in mov lods inc scas fs jmp push mov pop xor insb push sub sbb mov mov pusha les test and xlat fwait sub add xchg pop sbb mov fcmovu (bad) je xchg fiaddl rol push mov imull aad and add or pop lea js jmp push stos (bad) fdivrs (bad) (bad) je jge or inc inc paddusb cmpl (bad) push roll add adc xor pop das pop ja pop pop (bad) mov jl js das sub mov lock lret add xchg jp jno pop jno mov test jne les fs shll aas fucomp test jle inc jo mov sub in test push daa (bad) push imul fmuls dec in mov push inc dec jne sbb xchg or cmp popa adc ret pusha addr16 hlt jmp mov lea unpckhps popf pop ret xchg push (bad) cmp incb pop and (bad) cmp or les cmp lock lods lsl sbb stos jge or in sbb cmp ss push xor das ret add push rolb (bad) lock push fs lock sarb scas inc shlb test cmp push adc add popa movsb aad or mov js dec shrl push push xchg rcll push test ret push pop inc ja mov inc add mov jmp sub jmp push ljmp or test sub enter pop lea pop push fisubrl fdivs test jb pop push sub push pop or nop xor xchg test jo pushf cmpsl push ds pop jae mov in adc pop xchg pop pop fist aas call jbe fdivp add je out ds andl push mov dec out xchg sub adc and cli jo sbb repz xchg lds ret test mov (bad) dec scas dec (bad) jge mov sub add clc mov sub or push xlat mov lret mov es sbb sbb or aad xor cwtl inc ja enter jns popf arpl inc pop jmp xchg add ss aas cwtl xor sti cmp je jmp mov in out cmp movaps or adc or xor add insl mov inc pop or adc mov add xor add add sbb sarl mov mov cmovae mov mov nop or test push sub out or pop adc outsb pop lea dec add cmpsl loope inc jmp in arpl out and test pop pop clc movswl test das mov push aad sub lock sbb push push push sbb sarb (bad) out pop (bad) jnp or pop cltd pop pop and dec or pop fadds sbb xor push int rorb orl xor inc loopne inc lret std push test shrl (bad) or pop loopne stos xor xor ret fdivrl das inc rclb sti inc mov jo cmp scas int pop push pop sbb pop clc ljmp add dec les out sub repz lea js or stc or mov mov sub cmp mov or sub adc push stc fstpl cmp or cmp inc sub and in adc sub imul loope mov mov sub rclb scas sub popa sbb jmp pop dec adc or in dec outsl jmp sub mov push adc adc lret loopne lea and or xchg bound dec or xor push addl stos dec xor mov push xor fdivrl dec out adc fiaddl pop cmpsb fsubl jnp imull popf add xchg das mov sbb loop mov add xor push bound mov mov dec pop push cltd popa pop in jne imul nop clc inc or mov sub jmp nop mov ds out inc nop push call push dec sub cmp push dec mov add pop jno dec inc dec rcrl sbb add lret je test adc fadds adc xchg cmp ror mov into push push jne mov mov sbb rclb add sub xchg mov mov adc push pop or push ss lcall (bad) or add sbb cmpsl sub xchg cmp das pop movb adc mov push cmp int3 lahf and push xor inc mov inc insb cmc and inc subb cmp popa (bad) or fsts sub cs sbb jmp and lea loop mov stc or sbb push insb adcb jge sub mov in (bad) arpl (bad) push pop outsl je lret popf adc adc sub cmp mov cmp inc pop and or sub add xlat sub mov mov ja (bad) mov or sub rorl xchg or cmp pop aaa ljmp add addr16 fmuls daa cmp xchg xor adc addl cmp inc xor inc mov xchg pop and cmp inc imul push notb movsl mov lss fisub mov insl sub mov pop icebp xor cmp ret jecxz fwait rclb repz rorb and movsb mov or or (bad) push (bad) lock adc ds push enter icebp shlb sbb (bad) scas add mov shll jle inc adc dec sub or dec push movl mov push sub pop push (bad) mov inc add (bad) push or (bad) mov jp out imul cwtl xchg cmpsb mov aam clc dec insb mov add mov sti imul add xorb out dec inc mov jmp xor mov cmp and xor mov inc xchg (bad) mov sbb imul and and or xchg push pop rcrb or jo pop loopne mov jmp add pop dec jmp pop add xor rolb lea pop jno and mov (bad) mov xor xchg out (bad) outsl xorb add add add add insl ds sub inc cmp mov cmp mov mov mov fldt xor cmp adc or andl push push pop pop fild adc jp mov (bad) xor mov mov fnsave dec adc pop or sbb arpl ja ljmp dec out pop jmp cmp je mov sbb leave jbe push adc xchg xchg xchg out jge cmp push or adc push mov pop je sub jbe cmp cmp cltd movsb popf sbb or adc cmp imul call in or adc in fisubr dec in test inc shrb addr16 clc dec jbe pop rorb jecxz fs cmc sbb cmp sbb pop stos push nop fldl cs pop ja rcll inc mov mov mov fisttpll imul frstor pusha pop mov mov int and lcall xchg pop and sbb arpl cltd add loop insb mov fldenv sub sbb cmpsb mov add call nop fldl sbb mov add push addr16 test and jl xorb sbb jmp (bad) scas and or and inc push gs jge (bad) ja add mov add push add in and push leave push add test sub sbb sbb xor push fistpll (bad) mov xchg inc or pushf jg or in arpl or sub adc and test lock pop in jnp je sbb xchg jne cmp movsl or add out mov cmp push mov (bad) lret xchg hlt aas loopne push mov fimull push test xlat or pop mov sub sub pop enter in repz jecxz push push aas mov inc popa sbb outsl shr ljmp je sbb mov sarl fadd inc push add pop pop pop out popf and or pusha push pop jbe sti fildl dec jp jmp (bad) xor inc add (bad) jo add stos lea psubb xlat xchg xor mov ret cmp cmp push aam clc and adc sbb mov in pop sub xor imul push pop jge xchg inc dec pop lea lcall adc ficoml mov nop xchg inc and inc xor mov fcom fisttpl adc inc pop mov insb xlat jl push outsl xchg push (bad) mov cmp cli insb cs aaa fadds cwtl cmpsl test adc dec loopne mov in push aaa push cmpsb lds fwait pop xchg lock insb pop cmp xchg adc fdivrs sub loopne push and lret inc aaa fcomps fistpl push and outsl adc ret bnd orl aam cs sbb lods (bad) mov mov inc and mov inc or adc bnd leave mov push cmp and or push sbb xor ds inc and mov push xor loopne call cli xor push adc sbbl popa sub dec dec test sub and leave push aaa xlat lock cmpsl mov push idiv push sbb add or mov test or and test add cmpsl mov cmpsl push dec ret (bad) pop sahf lret cli cmp jne inc lcall xor or (bad) in xchg imul nop mov mov pop pop push nop loope clc leave jno (bad) int3 fbstp or fsubs cmpl (bad) push movsb mov or dec xchg adcl cmp jne cs rorl pop inc mov inc cli scas inc dec push push dec sbb mov mov (bad) or inc xlat ljmp push pushf mov pop inc notl jnp jne dec dec jne mov dec and xor push push sahf ljmp sub or popa enter lret inc add ja and iret dec push cmpb add sarb (bad) mov outsl add cmp nop es xchg ficomp mov mov mov insl inc dec mov push adc adc fwait sbb sub sub xchg dec or dec mov nop mov fs sub push out imul cli push and frstor inc fisttp (bad) xor mov movsl push push pop jne out es sbb inc dec das pop dec mov mov ret inc (bad) rolb dec pop loopne mov cld mov mov push inc dec mov mov add push xchg dec es scas add push inc or clc or loope je xchg cwtl mov std inc adc pop rcr dec shrb push and add pushf xor inc mov sahf ds push jnp (bad) adc push sub jnp call adc inc mov in cmp cli clc dec and fstpl push mov push bound movsb lds or mov nop inc (bad) cli daa mov cmp test (bad) sti stos inc lods adc xchg add lds insl push push or mov xlat sub pop test push mov scas mov cmpsb (bad) or pop adc sub sub pop and add enter dec lret outsb dec add stos frstor sbb dec mov mov daa ret cmp inc add add lds int mov jo mov mov xchg idivb inc pop mov pop sub insl pusha pusha xchg add test cmp psubsw and cmpsl lahf xchg lods in jl (bad) lahf in rdrand hlt pop lret add andb xor or push in in movsb mov adc les and dec sub pop mov mov add pop mov add add test adc mov add xorl fnsave call mov nop mov pop (bad) jmpw orb mov test nop and lret imul lret mov xorb or or push add in mov ret cmp je imull sahf jg push mov rolb and daa outsb pop js add xor sub pop sbb mov cmp inc outsl addb pop lcall xor adc mov adc popf out ja mov nop add pop ret rolb in or push xchg addl push adc add mov outsb faddl jg and mov mov push pop lea sarb push dec mov pop cmpb and adc pop push mov rcrb repnz mov fdivl lock xlat sub cmpl pop je loope fcoms mov push jae roll ret inc inc xchg testb xchg daa rclb mov call or ja sbb shlb and std push sahf add ret xchg push adc test (bad) or fcoms inc mov cli push es mov sbb inc data16 popa jne add ficom xchg cmp insb orl adc enter sbb repnz int shll in mov xor mov xchg (bad) aas xlat movsb jmp je mov push mov or pop push add ljmp mov jb movsb clc and xor cmp cwtl (bad) jo add push and or aas push dec mulb insb mov mov cltd in and add mov sbb pop cmp and sub scas nop mov xchg mov cmp add or or out outsb pop je mov dec ds add cmpsb or xchg pusha add push add fwait adc inc bound dec aaa adc ret xchg push jnp,pn (bad) hlt out push cmp lahf mov sbb aas mov xor mov fs cs je mov in xchg pop pop sub sti jp js nop cltd lret mov (bad) mov fsts inc sub cld xchg cmp leave dec adcl or cs pop pop movsb rclb pusha jne dec mov data16 repnz out sbb and fmul nop pusha add dec add xlat mov sub nop push aaa test mov andb test out stos pop pushf xor enter xor mov adcb aaa mov les cmp lods sti rol xor scas pop mov leave je out jns notl xchg xchg dec push call inc mov pop adc scas mov out or mov mov inc das pop sub test movsl add shrl xor cmp mov inc dec mov mov lods js mov add (bad) lea int cmpb testb stos inc push xor push leave inc dec xlat (bad) fsubl dec insb imul mov popa pop xor outsb add mov adc fdivrp mov ja jmp or aad imul push add xor push (bad) sbb or lods dec add aas mov jge loopne lahf dec fs mov dec add bound add add push pop pop ja push loopne inc or mov adcl mov jae cmp jg rclb inc mov inc pop addb pmulhw pop or cmc mov or pop mov jne (bad) cmp ret sti xchg jne mov pop pop cmpsb cs dec bound xor mov shlb cli or out push pop cld add push popa int3 enter fiaddl mov pop clc out nop push fsubp mov dec fnstcw jecxz sub das and add mov push mov dec or pop das add or pop js xor lahf inc cmpsl ret adc ret inc ja cmp mov pop mov lea outsl js pop inc ret adc jne dec sbb lods pushf push js popa or popf add xchg mov popa test ffree test lahf loope jle add jle xor rcl mov or enter (bad) mov add cmpsb push xchg movb add add stos pop sbb mov adc dec or inc xchg imul and lock insb cs mov or in call push add adc insb lods mov add and xchg sbb fimull sbb xchg push sub (bad) popa dec loop mov insl fldenv sbb adc add fildl (bad) xchg mov inc or loope cmpsl sbb mov adc inc push clc fwait lea fstl rclb in adc add mov add mov lea dec sub inc push inc fmul xor inc (bad) push jo adc sbb lcall and xor imul xor shlb add add adc sub add add loop sub (bad) out push xorl sbb fwait stos je cmp push icebp divb (bad) xchg stos test mov jne add je push and mov out js cmp add je neg pop lea les pop sbb out and mov jmp sub mov sbb cmp jge mov dec cmp hlt push cwtl add xor or loopne xor scas outsb push or sbb (bad) inc inc fadds fdivrs xchg jb inc mov dec rol push inc mul or or cmp or outsl push cmpsb pop loopne out xchg movsl loopne or inc jno cmp ret mov jno sub imul cmpsl shrl cmp adc or and jl hlt mov (bad) sub in push dec mov jge jp jbe cmp movl ja out adc in or inc in push cltd inc pop push xor rorl pusha xchg lods sub inc lea dec js leave or inc cmp add mov sub or or adcl out daa adc aaa fcoms es add pusha je sub mov clc add je loop xchg add jmp ss or mov add adc inc push les fmulp mov les mov mov in sbb pusha xor xchg test mov int3 adc lcall add inc mov or pop mov sub test xchg adc add add call in or pop inc mov and push jne xchg xchg pop or inc sbb nop sbb mov aas fwait dec adc pop sbb insb push xchg jne,pn mov jle test push (bad) clc insb adc sbb inc loop and pop sub stos mov push mov es in hlt arpl mov orl mov xchg mov push sbb scas sti call add lock push mov mov pop adc js jne pop push imul js call mov mov (bad) repnz mov xor sti idiv nop and loopne mov jnp iret js push pop or out push or xor jge xchg shlb stos movsb mov adc jns insb mov mov and adcl xor test push push push ret pop loope sbb push popf les pusha fwait cmpsl add dec adc and outsl cld pop add hlt sbb std or xor push pop pop pop call push or sub mov mov (bad) jae add lahf and add xchg inc xor ds mov inc or popa xchg gs stos jo mov lret or cs cmp cltd int3 enter daa xchg outsl jne mov or add inc ja pop add fidivl jle cmp add rolb or mov out lock test push je fcom jbe out and insb mov or adc mov out jmp sub sub mov or (bad) lock pop adc or popa ds (bad) nop inc add and roll or or or scas roll push or int bound add jmp sub push in xchg add push or sub in mov adc or sub push ret cltd (bad) cmp test cmp or add add dec ljmp inc cmpb inc insb aam pop dec imulb inc jmp fimul inc in sub or mov dec scas imul sub xor sub jne cmpsl jmp int add or andb adc sbb cmpb sbb and adc mov cmp lret movsl add adc mov pop sti jle add xchg jg jb adc js andl mov add and add add or sbb cmp push js sub (bad) movsb in mov lret adc inc adc in sub push dec push add jle push (bad) jmp xchg scas sbb pushf insb adc or adc inc sbb push aam xchg inc and (bad) mov stc and or mov add add jp jg out and test push pusha mov add cmp aas xchg sbb add dec sahf (bad) in stc xor clc or dec test add jmp add in clc jbe sub mov dec rolb hlt dec xor ret inc outsb or mov jmp inc fsubr xorb xor and and or sbb dec mov jle xor pop cmp lea sbb xor pop mov addl pop lock push push add lods sbb push into aaa js xor mov dec les cmp jle invd cmp (bad) pushf movsl push lea inc (bad) adc bound sbbl pushf dec push cmp adc leave pop or sbb (bad) mov arpl add cmp xchg sbb jp push loopne xchg xchg std jge dec pop dec aam shrb sbbl push xor jg jg,pn add dec jle push stos adc (bad) inc arpl test adc movsb aam and sbb pop loope je iret (bad) jno add jmp imul loopne shll add and or nop imul xchg or rclb rcr xlat fsubrs lret lods cmp mov int jmp loop jbe jnp cltd or mov sub in shlb rcrb cwtl dec inc adc rolb push rorb mov lcall je ret pop jge loope (bad) repnz pop jecxz arpl mov pop bound jno (bad) jb xchg sub lahf add ret dec lahf outsl inc or and fisubrl sbb pop adcb (bad) fsub xorb add push stc push cmpl sub bound push je (bad) daa ret mov aam push rcrb xor or mov loop loopne xor mov xor rorl xor and pop dec test mov cmp std xor sbb int3 rclb mov out bound add out mov inc aas loopne sub add xchg jne jecxz and roll ret add push lcall xchg or stos or add lods mov add js adc repz ret mov add push xchg push inc (bad) xchg sub jle std adc and lock adc shrb lahf cmpsl es jle adc or xchg cmpsb xor adc (bad) sub divl mov outsb mov bound jne mov add js sbb push hlt jecxz add dec sub xor orb push xchg je popf cmpb push dec addb sub push fisubl dec inc jecxz btrl and (bad) dec jb mov lret sbb and (bad) fs pop push jo popf rcrb mov mov push pop xor mov add loop es xchg or je movsl push aad lods js icebp inc mov cmpsl int3 mov or jno mov push fildl ds enter push jl out pop fwait insb jge (bad) jbe sbb and pop mov std dec push pop movl outsl (bad) insb ret xchg orl sahf test out pop mov testb pop dec test insb adc (bad) fmuls or leave nop push add fild adc call xchg sbb mov jbe add ljmp inc or push dec sbb pop inc push mov or es pop je dec lock inc arpl or push sub jg jne loopne add push movsl jo aad push inc add push cld test xchg fcom add push loopne lods or cmp pop push sub add sbb insb loope js hlt add push xor cmpsb push adc sbb loope jl push (bad) and imul lahf inc stos push lret lea add test repnz pop push clc fstl push js cmp push fs jp or cmp inc cwtl add fs adc inc mov dec mov bound push jl cmpl xor stos pop lahf test ljmp mov stc adc verr adc xchg out adc or pop lret leave sbb bound cltd jo pop shr xchg outsb dec pop mov clc cs xchg mov sub mov mov mov inc or xor push adc xor (bad) jb ret lcall sbb xchg xor in ficomp fs mov loope mov daa (bad) fsubrs ja inc adc pushl popa or xor and imull pop or les and dec or mov rcr add fcompl enter fistl inc and jmp sub (bad) stos mov xorb dec add jg mov add adc loopne or (bad) (bad) push add insl cmp push add gs ss add adc or loopne push xor repz xor and and or and outsb std add test sub or je ficom jmp repnz aam sub push ret int3 push cmp dec aaa loopne push sbb ror (bad) dec loop cmp xchg mov xchg dec mov dec push push dec fcoml les out pop lea fs sbb pushl jne jmp and jmp sbb add add or call adc insl cltd out pop out test addr16 mov and cltd dec sbb and pop mov jg pop add pop loopne hlt xor push pop or dec lahf es movsb sbb mov pushf nop outsb cmp js adc cmp mov imul sub inc lds ret sub call mov cmp out jmp sub or or popa rcl jo cmpsb movsb aaa add fs sbb test mov push push cwtl dec nop insl (bad) jmp movl mov xor sub pop xor jbe xor adc xor or pop fcoml je mov add movsb sar out xor inc mov cmpsl call cmp bound lock scas push push sbb or orl cmc orb adc ljmp movb xor dec aaa test or adc orl sub mov adc xchg mov imul and lret inc mov jo mov dec cmpsl (bad) repz ret rclb test (bad) sti push mov jmp mov adc sub xor xchg xchg jo dec lea cmpsb pop mov fistpll call mov or xor test insb and inc rorb insb in sarl xlat gs mov dec jnp xlat (bad) jo or test push push adc subb test into pushf xor and dec popa and or mov adc dec cmp inc or cmpsb nop xor adc jbe (bad) pop jge enter mov outsl sbb sub ret hlt inc loopne adc inc out lock cmp add adc addl pop mov pop jp push loop cwtl cmp imul push bound lods cmp insb fwait insb (bad) pop push mov (bad) (bad) out ja jmp fcompl cs dec daa pop add (bad) inc setg jmp mov add inc add cmp setle (bad) xor cmpsb cmp es dec insb or dec inc dec adc inc (bad) test inc ret cmp mov shrb adc pop inc int3 aaa popa flds dec inc sti lods cmp inc aas push adc nop testl stos movsl stc push data16 adc mov int in dec stos pop mov xor out icebp and enter xor shlb je neg ret cmp adc or insb add (bad) mov cld adc sub push push aaa fstps xchg orl pop popa or sbb mov ret or and addl mov adc xchg in aaa lock fs add mov inc nop xchg jnp push sbb (bad) sub mov icebp inc into and mov pop lock mov dec sub aaa mov icebp cmp ret add pop sub ss pop imul mov mov pop add pop add lods lret push jnp (bad) (bad) adc cmp ja fcomi cmp dec mov sub push pop daa and mov jns and popa pop arpl or sbb popa lahf or fs add jmp sbb sbb rorl adc dec dec movsl push push adc xchg mov mov cmp xor stc (bad) sbb or xlat lods gs jl out setne test movsb cs pop inc cli add cmp jnp scas push inc pop outsl jle pop psubusw jno popa mov sub insb js mov adc imul add pop sub mov cmp rcrb inc das loop stos jbe pop pop (bad) (bad) push pop sbb subl (bad) sbb cmp jne in js pop cltd imul mov inc sub xor js dec mov cmpb push cld loop mov xchg adc sahf cmc les dec or dec push cmp insb je (bad) add in insl adc sbb adc sbb test loop dec in inc ret sarl iret sbb data16 (bad) clc add adc xor roll not sbb int into into mov ret je cmpsl jne add and imul or sub or pop rol mov js sbb popa jne aad popa mov adc add notl cmp jg sub adc loopne add fldl scas lds aas push cmp pop lret sub and inc insb add xchg cmc xchg enter mov pop fimull and pop adc and add push mov arpl test mull mov inc or mov in mov das jbe mov xlat inc aas insl gs pusha jne jmp push jb jnp xlat (bad) in fistpl mov loope cs pop (bad) pusha push out lods lods sti aaa xor lahf incw ret sub jne and push mov bound (bad) arpl jecxz pusha pushf in fcompl fld1 rcl jl adc in mov xchg lods jmp cmp and mov xor sub sub imul xchg mov add xor add jns outsl push in adc mov lahf and sub push mov or stos sub fadd add sbb cs cli rcrl aas adc mov inc dec jne mov or shrb mov fisubr test mov (bad) mov pop mov adc (bad) popf dec inc or fs out inc rclb pop fsubrp inc pop addl xor mov xor mov inc popa cmp (bad) push fisttpl pusha add mov cmc push push push (bad) gs cmpsb or arpl or lods push dec xchg insb sbb or xor push pop cmpsl (bad) (bad) jne shlb test mov dec lcall je mov mov (bad) sar xchg dec sbb cld sub xor (bad) fist cmpsl jne inc adc or adc lock ss jae pusha mov dec ss or sahf sti sti mov aas (bad) jmp push pushf jmp lds or sbb call subl xchg jbe test or mov mull stos fldenv and mov clc adc idivl jmp xchg push cmpl iret aas and mov je mov and sbb ja fwait and insl daa inc jmp inc xchg call pop pop adcb loop mov sub out pop sbb outsb popf xchg cmp inc add loopne mov movsl inc push or (bad) or daa push pop and pop sbbl jnp push mov and aaa push and pop dec enter nop push (bad) fild orl mov in xchg cwtl mov sbb divb iret adc inc adc and nop cmp sub (bad) stos adc testl loop push jmp and movl lea (bad) jge lock dec sub imul mov mov stos pop dec rolb or imul push add xor mov les and sub je add test mov dec xchg or cmp mov xor nop cmp or insl (bad) jae out adc bound pusha ja call pushf push cmc jecxz je dec sbb xchg nop sbb mov test inc mov add stos xor push and push stos mov jmp jge or mov jp test or mov pop repz push or mov dec dec scas inc test lahf cwtl fs mov fdivl je and mov (bad) arpl cmp push incl imul movb aaa mov or pushf out gs aaa inc push push cmpl hlt sub nopl repz xchg adc mov insb arpl mov xor iret outsb es cltd out insl cld mov (bad) aas popf sbb nop (bad) in fwait push sahf out dec mov or adc data16 je inc push add cwtl and adc push mov pop mov test movsb cmc dec arpl rorb adc cmpsb inc and xchg and add adc insl dec jae sti pop jle xchg cli sbb mov clc cmp inc mov movsl push mov push jp and pop and sbb movswl ret testb and pop aaa loop sub add pop clc cmpb (bad) mov in inc popa jne enter loopne lea or pop icebp or mov rcrb scas jl lret xchg cmp in loopne popa adc inc adc inc pop cmp mov mov aaa mov mov mov jmp hlt add cld arpl clc enter scas add adc outsl test add pop dec jle cwtl and sarb cmpsb andb sbb lcall std add push bound xchg or fsubp mov jecxz fiadd dec pusha pop in shl fdiv cli jo sbb mov lds fmul cmp push rcll andl sub pop or jnp push mov popa xor (bad) rorb popa xchg push sub mov cwtl ljmp push lea test sub seta xor mov sbb or cs gs dec pop mov cmpl pop xor mov and mov xchg or xchg adc dec packsswb adc or sbb push or dec cs and xchg daa lds and adc rorl add je adc cmpb je mov fwait ret and jmp int and stos cmpsb dec jo movsl xor mov bound and or hlt dec sub pop mov xchg test daa add pop mov data16 js mov mov fadds jo push arpl inc mov cmp loopne enter call shrl xchg mov daa aas out mov mov shlb jmp nop ljmp or scas sbb (bad) xor inc or xlat adc aaa hlt call sub inc insb fsubrl mov pop push lods and jo add add pop cmp int3 add pop push push add xor push sarb test dec xor sbb adc enter nop sub jmp xor adc or sub cmp in lods push and (bad) fs adc adc push jne push mov dec fisubrl into mov loop sub imul es sub adc gs aad push or pop lret fdivs (bad) pop xor fbstp mov sub ret or outsl roll mov pop lods sbb adc lods sbb pop inc das nop mov or pusha push daa push cmp mov shr adc je push or push pop or insl test fstp add (bad) aad imul popl xchg mov jmp push push inc and pop (bad) jmp outsb hlt test mulb jne adc add inc in fcmovb inc dec add mov add test cmp sub jno aam mov sbb inc stos sbb dec sub bound cmc inc jmp dec addb es jne xor adc (bad) (bad) std dec inc bound jecxz cmp jne aaa sbb xlat int dec add push lea in push rcll into inc iret inc jle jb add jmp add push push movl and bound into imul and (bad) pop xor jge cmp dec push lods jae pop dec push inc pusha ret or xchg icebp jecxz,pn inc clc or sbb popf add (bad) xchg lcall sbb inc add or sub mov and mov pop aam sub roll adc fstps lock push add rorl inc cmp cmpsb icebp loopne push jl pushf sbb dec cld mov adc jmp or inc xchg popf rorb jmp jae insl xor and and pop ret push adc fiaddl (bad) inc icebp push mov lea pop andl sbb xchg fsubl loopne (bad) pushf pop mov and addl adcb add movsl stos adc loopne ljmp pop add push fstpl dec mov ja adcl lds and enter incl aas sub call push sub (bad) jmp jl js lea fwait movsl arpl pop add rcrb inc movsb or sub add sbb push lock movsl lahf cli dec jbe mov (bad) xchg inc stos int str cs cmpsl mov sbb into pop inc imul add in imul aad push lock push sbb fldenv mov pop cmp sbb popa xchg arpl sbb dec jbe pop xchg adc rcrb mov mov inc fwait inc test adc add sub ret pop enterw arpl push movsb and fwait xchg mov (bad) ljmp in mov mov lea fs mov adc lret xor fs and ja lock negb in sub rolb (bad) or movsb push aad sbb (bad) dec repnz mov adc xchg cmp and ss mov inc sbb mov add push scas lock inc or arpl lds fadd add cmpsl xchg sub add ret aam rorl ret dec flds push stos mov in (bad) fildll cmp mov mov sub mov push adc push sub mov aad inc rcrb sub repnz mov cmc inc mov mov into pop mov xchg xor push adcl pop das in test mov pop aaa inc dec add aas xor ret sbb shll cmp jb sar outsl int3 test or fxch rcrl fisubr or and inc aaa or stos dec mov lcall fwait nop (bad) push jmp daa pop adc addr16 rcrb add nop inc push add dec cmpsb enter daa push and add hlt outsb test movsl shr push mov jmp decb inc repz cmp jne fcomps inc cwtl scas sbb sbb movsb mov xchg rorl (bad) push pop les push movsl cmp pop (bad) adc fs or and sbb xor mov xchg stos inc add movsb pop dec adc adc or pop and adc add and inc test stos sbb add push sbb shlb and pop (bad) mov adc daa fs adc sbb adc push adc push orl inc pop mov add jo adc enter addb repz sub lea cmp xor jbe es out imul dec call inc pushw dec jno sub and stos test add mov js inc or pop sbb pop movswl mov cld ja sbb jle add ss jne add sub rorb push push sub push xor xchg xchg cmpl ret jmp loop inc ljmp xchg subl mov ret cltd int3 das cld adc mov and (bad) (bad) repz in bound ja popf je rorl cmp test mov dec xchg test mov xlat or pop out push jno and ds mov jne or enter roll inc (bad) in sti jle add push (bad) je ret adc popf or push push inc cmp and xor mov jge iret cli adc (bad) repnz xchg leave xor shlb inc xchg lret enter arpl adc loop mov push jl mov dec add das popf push je in mov sbb fwait mov push xchg or mov dec mov sbb jo xchg pop dec pop ja xor lock push repz inc jnp jmp ficomp adc cmp xor mov rcrb outsl movsl call sbb pop add es nop sub and add sub jl (bad) or insb inc pop addr16 test clc clc sti cmp sbb sbb add rcll mov cltd sbb scas aam pushf dec in out vunpcklpd stos xchg and (bad) sbb fldl aad add xor push (bad) jg loop push xor addl adc sbb sbb mov out inc outsb movsl cmpsb xchg adc xchg add jne dec mov ds andl xor sbb cld and fstpl movaps sub ret sub mov pop push rolb mov ret lods mov dec stos insb dec outsb pop cmpsb or lods in and test in mov cmp adc dec rcrb or sahf hlt inc cmp xor jmp cmp pop mov mov cmp dec lock add xor add push lock push or cmp jb or inc inc fcos and test push mov cmp movl inc imul popa cmc push ds mov xchg js or inc add sbb sub mov jo pusha and inc outsb aam push jecxz dec rcll ret (bad) ja out mov pop out sub jae movsb and or fcomps push push rcr enter rcll mov dec sbb cmc push xor orl inc insl adc add cmp and add xor pop mov xchg push das enter or or adc push pop cmpsb in iret ljmp icebp mov test mov xchg or sub aas xchg lret push loop loopne iret subl jns addr16 and cs and faddl aaa add mov pop inc or (bad) sbb push pop and fistp cmp das adc add popf pop mov aaa mov rolb and loopne dec (bad) dec adc mov mov mov outsl adcl inc leave sbb sbb dec lahf aam adcl daa dec and insl inc icebp sub jge mov or je adc bound jae jns adc fnstcw pop inc pusha rorb inc push jbe adc xchg add fisttpl (bad) xor shrb data16 adc fimul xchg inc xchg pop xor (bad) mov adc or cmp ret push jo sbb ret cld xchg pushf and test std addr16 and xor mov addl inc pusha repnz mov ds (bad) lea xor movsl subl test jne std jo cmp js inc adc out or inc pushl (bad) in mov (bad) cli push popa add sbb les push cmpb add dec or and inc outsl mov iret pop cmp sub imul rcrl das es int3 push loope,pt jo lds mov push shr and cmp cmp inc sbb push sbb xchg fildl lock mov pop out sbb leave loop icebp jg adc pusha daa popf jns mov dec mov push aaa xor cld es mov mov mov push aam push sub push sub scas rcl push cmpsb shlb cmpsl lret jns js add pusha outsb and adc les pop cwtl jbe dec dec pop mov ret sbb sbb push add mov push and fwait mov adcb cmp pop pop outsl notl mov aaa xor cmp loope mov scas pop je test push lock and push jne push sbb add das xor adc or cli popa add (bad) mov xor idivl mov xorl into jnp add fiadd add test cmp test rolb movsb hlt cltd (bad) pop cmpsb mov xchg push rcrb add movsl jg sbb adc js dec adc pop ljmp int3 or push xchg aam inc cmpsl daa (bad) cltd (bad) or or adc and adc cli sarb cmp fcompl lcall (bad) mov rclb mov (bad) push mov inc out add mov addl jae mov (bad) mov adc lods dec add jae,pn movsb rcrl outsl pushl inc lods or stos xchg sbb cs punpckhbw add std imul fistl jb cs call or out and lock sbb cmp add add subl sub adc push add dec mov roll les add (bad) dec push sbb lahf xchg sub jmp add addl xchg adc pop add out mov xor bound lahf add loopne (bad) and and je push inc sbb cwtl repz sbb add and jne scas xor ret inc nop dec loopne adc pop sub insb shlb sub add jmp (bad) jo add dec jmp push and movsl fwait inc jmp rcrl das push or or scas icebp inc mov xor xchg out jecxz rolb popa div sbb xor mov push scas call arpl inc adc sbb xorb and cmp cld mov imul xchg push xchg (bad) out cmpsl leave addl xchg cmpb jo scas xor lahf (bad) or cmp sub pop imul cmpb shrl xchg xlat push and fcmovne dec mov or jmp lret jne and dec pop cmp out fcmovu jp add push inc or sbb rorb mov out aam dec iret or xchg sarb sbb rcr jno aam push inc mov sub pop test roll ds inc sub js popf xchg (bad) jg les decb ret pushf dec push adc pop lahf add push mov dec test or cmp jge daa jl outsl les or mov jmp sub and inc add xor adc addps xchg nop ds sub sub lods mov add add ss loopne aaa mov movsb nop add fsubs mov sub daa sbb sbb notb cmp pop mov push (bad) add jg pmuludq dec and dec xor add inc inc dec (bad) pop sbb xchg mov push pop fistpl stos or cltd jo cmpsb sbb out mov cmpsb insb ljmp inc jno fistpll xor out aaa loopne sarb xchg sub (bad) pusha pop adc dec imul mov pusha and adc jne test (bad) hlt xor daa push ficoml jne and nop out outsl add rclb and inc fsubrs sbb push push and jns int mov inc fwait mov and fwait bound and mov sub aaa clc js das rcrl inc inc push cs add inc sarb jb jle (bad) mov data16 pop xor add gs dec mov adc push or adc or or mov push or lahf dec ficoml pusha pop push lock inc cwtl jo jge mov fs jnp lds outsl loope,pn clc ret xor push loop mov fwait rolb rorb mov das cmp add cmp jle movb mov mov fcompl stos and (bad) push mul and or adc xchg enter add js adc and sahf mov stos arpl sub xor cmp pop xchg int3 mov dec add jo xlat scas roll pop lret add roll pop test cmp cmp sbb movsb xchg dec mov lret sub pusha xor and (bad) dec or mov mov outsl xchg popl adc iret xchg cmpsl das mov insl mov pop lock je out xorl imul adcl xorl and or jns imul xor sti inc cmp push sub or rolb adc imul dec add add and sbb add cltd push icebp inc les cmp cmp pop push flds xor inc pushl ret je mov pusha dec jne cmp or adc push sti or pop push iret add in push lcall mov dec sub lock cltd jmp jne ja scas adc fild pop lock inc xor paddusb stos pusha or push and loopne loopne xchg push or ficoml imul je pop stos or imul aad inc xor rorb enter outsl xchg xchg add cmpsb cwtl xlat mov sarb jg add ficompl push std push xor orl iret jle rol das cld mov in insl fcoml ret lds rorb and les push add or jl mov push fs arpl or push push jle ret mov ja xchg mov cwtl push stos adc imul addb mov and mov dec pop adc jne sub daa adc loop or adc xchg sbb or inc nop popa add and or and or mov xor jbe ljmp aad dec ficoml cmp adc (bad) jb inc cmpsb pop xchg lods push push rolb xchg decb sub sub cmp mov sbb imul adc clc clc lock dec jae or in or pop gs outsb cmp arpl or int3 fmul aam mov les mov inc imul cmp add pop daa mov mov nop mov fimull jo fcom or and pop xlat pusha std pop pop or push movb or adc add cmp add and sbb cmp or xchg push sbb je sub dec mov mov inc shrb or lret add clc or rcll insl jnp ret dec mov dec mov inc repnz or mov mov push repnz push dec or fstpt pop add sub push (bad) mov mov jmp inc and ja and adc inc jae pop or loopne adc xor or outsb adc jnp dec mov adc sub popf or add add dec sub dec or mov pop ja adc fmul adc movhps mov jo mov and into adc into inc dec add add (bad) mov adc loopne push ljmp sbb and jle sbb fsubl cmpsb cmp fmull fcmovbe insl xchg or dec fadds fstl imul mov rorl dec les sbb std jle pop xor sgdtl xor push jb push mov sub add ja mov xor mov (bad) shll pop pcmpeqw jo mov xchg aam rcr mov mov rcrb test aaa adc dec pop enter add push mov xchg ss jnp,pt pop add jne pop adc test fcomps insl mov cmp lahf adc jns mov repz push jns in and lret push push dec mov pop rorb mov pusha sub fisub or fmul lods cmp sbb inc or ljmp inc sub in popa push in jmp pop pop cli mov xchg push xor push dec addr16 push ret fs loopne imul inc dec or mov enter add xor push clc and mov sub test fcoml xor dec aam hlt add mov js dec sub push dec cld mov cmp push stc and fs fs xchg xor in adc fcmove mov push push mov xchg cmpsb jmp addr16 or iret dec leave subl add mov cmp add xchg adc (bad) push push mov sahf push dec adc lods fild add (bad) add sbb mov imulb iret push fldcw adc or mov jo pop or xchg lods into call adc insb jecxz xor mov inc adc push cmp inc and mov scas imul or fsubs aam add test xchg add imul inc push insl pop xor pusha cmp aam gs adcl and pusha add adc sub lahf push outsl sub pop aam es arpl jmp fdiv (bad) mov push arpl loopne dec dec xchg push adc idivl or test and or or xchg arpl fs cmp jg adc lods sub xor mov xor je test mov jne aad cmpsl mov inc test loopne sbb jne fimull jecxz xchg sbb jg lds ret mov adc dec fild mov out inc jno out adc adc mov add aad add mov dec pop shrl mov xor mov add adc cmp add imul add test cmpl or and call das jmp lea adc lock add jae cli xchg js mov jmp or or xchg add stos add je pop mov dec repnz rorb push push and insl mov int lea ljmp adc push adc jns sti and jno cmp dec sub fisttp fistpll addr16 imul mov jbe es adc pop daa push lods adc jg xorb imul and lock or fiadd addb int3 or cmp adc mov inc stos fcom push push push mov push push or js mov adc mov rcl xchg movsl and mov mov xorl mov sbbl dec or push hlt add bound jne mov push adc mov adc push stos ret inc outsb xor in sub sub fwait call push ret add cmpsl mov and jbe bound adc andb xchg cmpsl sti dec add cmpl sub ja xchg testb or mov add arpl scas and mov add jbe je mov sbb xor inc push push lret fsubs inc fwait xchg push add out aam add or repnz (bad) fwait pop fnstcw xor adc pop loop jl xor sub xorb addb icebp rcr scas jne jnp dec add cmp daa xor test pop es fcmovnu (bad) insb cmp jle pop sub or dec hlt pusha dec push pop cmp test push dec push sub jp addr16 cmp and pushf adc lahf rorl fs (bad) mov jno popf or xorb in inc inc lds sbb cs push sbb or dec mov fsts cmpsb xchg jle or inc mov push push mov stos dec cmp add loopne sti push xor pop rcll push sbbl fildll xchg and stos mov sub add ljmp rolb rolb add pop aas int lock mov sbb scas lds xchg or push or insl sbb fcoms xchg dec dec mov lock arpl push icebp add das sub daa cmp or ds add pop ret sub ret or and sbb mov xorl pushf loope push mov call lahf dec mov sub mov sbb (bad) push in je gs inc addr16 dec (bad) outsb adc test fucom nop or movsl jne pop add jmp or int push push mov push dec jl cmpsl cmpsl rcrb ret insl or adc ja arpl xchg (bad) sub pop cmp mov pop (bad) insb lods pop das loope mov mov mov or sub cmp adc in test push inc mov push test mov mov add mov add hlt lds cmpb push jnp mov stc imulb pop cmp or jbe lea mov push js sbb fistp mov cld cmp jmp push push rcrb scas jg nop ja ret cmp je pop push pusha mov mov mov xchg sub roll popl mov iret test xor out push lock sar jp adc outsl movsl test push fldcw and test pusha mov (bad) iret aam dec inc sbb mov das add sahf or lahf das shlb fs sbb fcompl cmpl mov pop mov sbb (bad) lock pop pushf ljmp loopne pop add loopne mov fs nop sbb add frstor (bad) pop (bad) mov jecxz andb not int rorb imul arpl jb dec bound and outsb (bad) mov pop or (bad) dec add xor out mov jp xrstor cmp jne js sbbb test inc cmp push inc sub lahf loop dec inc mov mov adc inc xor in jg xor decb add and nop rol inc add or fcoms mov dec cmp sbb outsb mov cmp sbb out gs ret push dec jg jno jne gs jmp xor cmp xchg or imul ss and adc mov (bad) cmc mov outsb iret xchg cmp push fdivs inc or add sub ds push loope (bad) xchg test cld sbb loop (bad) mov adc mov jp test ret sar into flds divl cwtl pop fs push mov inc sub mov inc outsl nop xlat dec and ss inc inc add sbb or aas add loop pop lods loopne add jl stos mov push jmp sub jmp aam ljmp adc fs jp or popa pop pop add sbb and mov pop sbb inc adc addl jmp add push stos scas in sbb imul and or pop movsl or fist aaa cmp add vpsubusb mov xor mov push mov lods jle mov inc and jno dec cld push and clc sub je fistl mov or decl xor hlt out mov pop nop enter fldpi aaa movsl daa inc cmp xor (bad) sub hlt mov inc add mov cmpsl nop std push add rcll adc jg sub adc pop adc lock push mov sub mov adc add dec push add jno sbb jp push test (bad) push pop push adc push push fdivl fdivrs lock inc xchg addb adc cmc ja test pop sbb pop in xorl adc jne push cmp pushw and sbb inc adc add fcoml jl je and add pop xchg add xchg xor xchg addb push xchg mov and add or out sbb ret inc fisubrl dec xchg mov adc and mov pop and int3 and mov prefetch fild je cmpsl pop or and sub push xor fs (bad) dec cmc test mov dec imul adc sub ss (bad) lods jle adc jmp mov scas sub push xchg jb mov mov cld addl xchg xchg sbb and jo dec inc popa (bad) sbb cli scas mov or xor cmp mov pop sub add inc mov sbb jle jb arpl mov popa lods mov pop mov adc sbb or sub inc cmp fldl push and or (bad) sub xchg mov adc fs movsl dec xchg mov inc or idivb mov dec cmp xor inc ret cwtl cmp cmp cmp push andb dec sbb mov mov pop pop test xchg or add sbb sbb push jne ret cmp cmp jo rolb ret or addl incl push dec insb cld test pop mov push in mov add pusha cmpsl or or or push add test imul mov sub aaa or inc in jg mov movsb and push mov pop xchg mov pop addr16 sub or cmp push aam adc mov pop mov lods inc mov push fs out sub and je jo int3 cmc sub jmp ja daa insl lret jne jne and mov inc scas ret inc xchg cmpl movsb sbb insl and and jp (bad) lock rcrb cmc jmp or es mov in push inc mov mov call subb (bad) inc inc pop add and icebp mov adc or aad rcrl lret sub sarb adc (bad) rol pop jns lret xor inc clc mov pop ret mov mov add iret ret lds cmp pop sub sbb ret test pusha sbb std push sbb cmp push jnp xor out cmp in jmp dec sub les testb movsb sti jecxz mov jmp push add cmpsl xchg test and test cld jnp push into push adc fidiv stos mov cmp cmp sub or xor sbb notl cmp mov push (bad) or test mov mov loopne pop scas inc pusha test rcll daa or inc dec cmp fstpt inc movl xor scas loopne mov or sub inc add pusha sti and dec push bound jne jns jmp or sbb test inc adcb xchg add mov ret stc aam push lcall pop or sbb xchg xor pop or or push xchg sbb lock aas pop adc push mov addr16 inc adc bound push enter sbb pop mov (bad) adc out lds dec inc sub daa (bad) push bound sbb push jp fidiv loopne cltd jne sbb sub pop les sbb push inc mov add sub xchg add cmp sbb jo push out and sbb outsb adc mov loope icebp adc mov add xor clc sub jle loopne xor add in aad cmp mov dec xor repnz add add dec pusha les mov xorb cmp mov mov jns out fmuls fcomps mov jg data16 jb cmp xor push or fwait cmp jle pusha add mov mov clc testb xlat sub aas adc cmp ja add lods add outsl fwait or add mov pop jg cmp insb (bad) xor popl sub (bad) loop add call dec and sbb or push push sbb lahf test dec sub xchg pushf or and (bad) loope (bad) fcoms addr16 hlt xor shl dec xor add pop test hlt addb add xorb clc cmpsl (bad) xor mov jg push mov xlat pushf add xor pop sbb adc ss rcrl dec arpl pop dec xlat sarl js jo and ret and sub push daa test arpl jne xchg push sub cmp ds lds adc pop cmc aaa adc add aas cmpsl jno sbb (bad) xor clc repnz adc xor pop pop inc jnp icebp pop int3 test rcrb jge faddl adc jge add xchg lock mov and xor pop adc rcrb sbb ljmp clc lock out adc jne sub (bad) dec cmpsb test or adc aaa xor add inc test xor sar lea loope and or jge loopne pop (bad) pop add and fwait sbb cltd push test jmp sbb lret xor or inc sub rcrb jae xor push and in add shll shl xchg cmpsb fincstp pushf (bad) inc inc pop mov repz xor iret push inc clc cmp mov or dec std push pop movsb aam mov faddp xchg add fstpl or and or hlt adc add ret roll adc mov leave out pcmpeqw inc sbb enter or adcb add dec and movsb xchg inc pop add mov test mov mov inc jo inc pop sbb add lret xor popl sbb aam mov roll out or jmp push insb out (bad) xchg sub inc mov or cmp lods popf ret dec sbb add xchg fmull push bound dec inc lret outsl push add mov push dec inc push stos xchg cld push inc sub test mov cmpsl sbb or (bad) popa inc insb mov mov (bad) inc mov push pop fdivrs mov xorl add aad in add sub mov inc call add imul or (bad) lock sbb test (bad) fwait adc (bad) adc imul or mov lret inc cmp dec pusha jb cmp xchg xchg cltd mov sbb pushf and imul test cld sbb test popa popa test test fwait jno and pop aaa sub push push or mov sub das add (bad) or add push mov mov sub dec dec mov movsb or lock and (bad) jns adc cmp or mov or es push jne jbe mov add hlt add add iret and lahf lock pop push mov pop scas sub mov shll jp icebp push mov or pop push dec iret adc icebp or js in sbb push or sbb mov rol mov fs lds xchg pop xor or inc push push xchg and xchg rolb and movsl pop dec mov push test cmp jne mov pop out xchg hlt jle loopne,pn sub adc push in hlt lock pusha movsb rorl or sbb notb inc dec aam cmp sub outsb add movsl and push inc stos sbb mov mov jp sub lret push je js and pop cmp pop xchg push (bad) adc and adc das cmp mov adc rcr divl (bad) notl fs adc test jecxz data16 pushf test sbb popf dec or nop enter es mov sbb (bad) fidiv push pop or cmp sbb cmp adc jo sbb sbb inc sub fstpl inc mov (bad) or add add pop adc mov push das sub jno imul cmp dec jp icebp or ja xchg or fldcw (bad) xchg cmc lahf pop jg pop push mov sub adc push sbb fildl out inc lea mov scas fcom push adc loop (bad) lods mov adc std inc push fsubl push lret cmp popa jle pop shrb sbb jecxz jg inc mov xchg (bad) loope sbb push fldt mov inc dec faddp lahf inc gs jnp dec inc mov adc sbb (bad) xor scas dec push mov mov push clc push inc cmp stos sbb sbb jne add stos mov inc cmpsl pop sbb std pop dec xor adc pop fisubl and aas icebp sbb daa mov int3 xorb pop inc sub sahf lods or daa leave sbb add pop in sbb xor movsl dec push dec mov test jmp mov add sub adc sub lods sbb rcl adc and mov fs push xchg dec sbb movsl test xor fdiv in pusha js loopne lahf push push inc push loope sbb mov in and nop out sti pop dec lock adc or mov sbb loope dec in es jbe js push sbb dec mov mov outsl xor dec jae andb cmp jne pop loope,pn popf jp adc xor add andl or push sub push or ds imul mov or inc outsl loope add jb push pop adc add xor fcoml cmp dec mov fs sub mov or cli pop push adc cli mov push mov push test pop add imulb cmp push push pop mov pusha jb aam inc lods jp cmp add andl add and adc sbb insb loop scas in inc ss je minps push adcl jne sub adc insb pop dec fwait negl (bad) daa cs lret (bad) lcall pop movsl sub rclb inc cld pop mov xchg push add lea push adc in jo movsl repz lods cmp test adc test mov leave lret sbb or mov imul jb add pop popa xor in mov or in arpl sub fs and sbb sbb add inc xchg cmp sarl sub cmc and clc sbb or rolb add fistpl fnstcw arpl insb aam push std bound mov jle push pusha add rcll mulb icebp in je mov jle jnp mov ss out fnstsw daa ss ss es inc daa mov push lahf test fdivs scas push inc mov adc and add push inc push and nop (bad) nop jmp mov push lds outsb jmp unpckhps pop inc mov xor inc sbb iret jae sahf pop aad and inc pop aas aad mov add adc add dec pop or sub insb inc xchg test mov jbe add inc jo xor ds cmp push pop insb adc loop (bad) sub cmp cmp data16 mov pop push and lds cltd pop jmp das mov adc fisubrl inc lods inc pop das fadds push mov or adc mov mov movsb adc pop hlt lret and push pop jmp adc push loopne aaa mov inc iret xchg inc in or add scas loopne inc enter inc mov or or dec inc mov nop or adc jo pop ss or pop cmp jl or pop repz mov pop mov sub jg test add dec sbb push xor adc adc stc mov inc cs sbb jg and xlat ds and and add sub inc (bad) dec dec mov mov sub nop pop fstps add jne (bad) fdivs cmpl pop mov sarb or pop aas xor or aad sbb sbb xchg push or lret mov xor dec inc dec pop push test or and fisubrl mov pop imul stos rclb inc (bad) fsubrs mov outsb push icebp popf hlt xchg sbb mov jne mov test mov cmp sub in push cmp pop (bad) pop add jecxz dec ja and popa mov nop jb arpl cmp xchg cmp sbbl jno push push push jo adc out test sbb das or cmp and popf xchg xchg push inc xchg sbb inc jmp in push out add mov and adc jecxz inc xorl add or inc jo push pop loope xor pushf divl jle inc and movswl xchg add test and inc xor push lock (bad) sbb cld int3 add fistp mov cmp lods dec add ja xchg xchg movsl sub aas imul sub imul imul int3 bound pop jmp adc xchg mov jae add daa shll js ret cmpb jmp pop xor sub outsl dec pop cld xlat and loope (bad) mov push sbb xchg test add ds xor test in or add sub push lods jl xchg jg adc orl pusha fwait inc or xor push xchg xor rsqrtps sarl (bad) xchg mov sbb adc mov popa fisttpll xor push cmp mov cld das push jno pop inc adc pop (bad) roll jo (bad) lea enter push and pop add imul and adc dec adcb pop mov mov push movsb xor inc adc or and push popa cwtl fs sub sbb jmp adc daa je cmp inc mov and loope adc add fs adc cmp cld or and add adc (bad) sbb adc sti push sbb stos cmp sahf fldt test add push dec andb aaa lcall jmp push jnp sub nop lret jo in sub je js test mov jb xchg or call mov mov (bad) in cwtl cltd or mov or push cld lahf leave scas inc and push add pop push fbld cmp imul mov push inc fstps imul push gs cmp imul adc jae push imul xchg shrb imul in inc out sub arpl pop inc xchg leave (bad) ss jae pop fidivl jo add insb cmc sbb push cmp xchg inc push es call jp (bad) out add mov push int mov add add mov jnp stos test (bad) bound push sub add or push mov jno xor popa xchg xor adcb je movsb hlt mov fldl jecxz ret mov push add es das or cmp movsl andb and pop sub cs inc pop daa and fsubs push fisttpl or sbb cmpsb push pop jo mov pop in rcll (bad) leave and popf test xchg xchg lcall sarl adc sbb or je xor xor fwait mov jg insb fisubl lock and sub test and sub lahf pusha cmpsl cwtl sub dec pop dec jno add int3 ja push inc fadds lahf andl iret push fdivs sub hlt mov cmp mov adc push popf and push push or or pop cs xorb cmp cwtl scas or inc fisub xchg pop stos data16 cmp ja outsb pop inc lods adc pop and mov loopne push inc cwtl test bound repz inc push mov cmpsb push or jnp cmp xchg nop push mov add sbb mov lcall add lods mov sbb dec call mov sub (bad) fs mov js xor ja push rcrl sahf imul push push fs push cmp aaa and sbb seto aas inc aas inc pop mov xlat xor daa jmp clc (bad) out jnp jne sti rcrb lock inc leave dec rclb popf addl xor xor pop xor mov cmpsb scas and and ja add (bad) jl fdivl inc je jmp mov lea and sbb adc loopne jl sub idivl loopne fidiv pop adcb jo (bad) adcl add or mov xchg stos mov mov inc enter insl inc cmp inc lods movsb mov inc sarb outsb xor push lret inc xor xchg jo out sbb cmp call insb or mov mov xor adc mov push add (bad) push or pop and clc or xor andb ss arpl popf push jbe mov jge fcomip inc inc je imul add dec mov ficomp js arpl adc xchg nop imulb (bad) fstpl jne fstl fs inc pop lds pop pushf add xchg push sbbb adc inc and adc inc mov cmp das movl xorb add add popf out fwait pop push pushf pop jp inc and dec mov add mov xchg add faddl vmread aad pusha add or push push lahf pop sub inc and popf pmaxub add jp shlb mov xchg test mov xchg clc push or repz shll xor pop pusha iret repz fs cmp repz addb outsb imul cmp mov movl push adc push xor lods inc or mov aaa js mov inc sbb xor adc sub cmpsb mov xchg jg dec aaa lea aaa test imull pop rolb mov pop mov insb inc inc xor xlat es idivl icebp push lea inc cmp add inc xchg pop sbb les dec adc xchg pop or pop (bad) (bad) movsb jnp loop push rclb les js repz xor fucom ror add lock (bad) sti (bad) in adc dec mov adc dec imul leave in xchg xchg pop out pusha add xchg sbb (bad) fiadd jp push xor or test cltd push add xor sub loope push (bad) rcrb les cmp cmp inc (bad) lret mov pop or and sbb rolb and xchg subl ja (bad) mov push ja aad inc mov sbb xlat leave xor mov sbb rorl cmpsl (bad) sbbb push xchg mov xor and jb call cmp jne and xchg sub pop mov repnz jle cmc rcrl cmp loopne inc (bad) jmp jno pop cltd aas add (bad) lock add (bad) xor (bad) adc inc aad inc daa or xor inc and and push clc cmp cmp mov mov arpl enter add rol (bad) in je push xchg or xor or pop clc mov int3 adc push and sbb out das add jecxz cmp addl jmp sbb push add test push dec add nop sarb fwait adc call cmpsb test sub dec aas push push pop xchg inc xchg push xchg inc and mov push ds das or mov or jnp and je add xchg pop in cmp inc ljmp out inc sti mov add dec jecxz adc pop dec sbb sbb orb adc inc sub leave inc cmpl and adc daa push or xchg pop sub inc js add pop mov push inc xchg mov shrb mov jle adc in and in or sahf jecxz add mov push sub xchg push mov (bad) jecxz adc imul push je mov adc js dec xor xor xchg in inc and lret outsl jae add add cmpsb inc dec or (bad) xor cmp cmp push push mov (bad) mov push mov popa ss rclb daa xchg mov shrb pop fs outsb push dec jne adc fmull loope jp xor roll mov scas out add adc (bad) pop xor std cmp pop loopne xchg or inc sub mov mov cmp out xor cwtl dec jne test push add out and add xorl movsl inc pop loopne mov jnp fsubrl je or xor icebp mov gs ja rol rcrl mov movsl mov and xchg add push pop jns outsb add sbb or dec incb adc add mov nop sub xchg (bad) ljmp into dec lods xor push add adc out adc aad pusha call ror js int jg and (bad) cmp je test lret out and xchg or jl and add and jmp je jne jnp push insb jns or js mov cmovne dec or jo jg scas mov adc call sbb xor lds mov out repz lds in (bad) push cmpb push cmp xor sbb fimull sbb push mov (bad) (bad) and (bad) daa add in orl pusha fisubl lret jno mov test movsl mov or xchg jg sbb or sbbb adc or and les fs clc or xchg sahf pop or rclb or add pop ds xchg xchg fsubl mov adc push rcrb test iret gs cltd (bad) daa inc inc in pop sbb mov pop sbb xchg inc imul jmp xchg cltd js pop xor aas mov shrb inc and lods push sbb pop inc sub push scas rolb push mov cs jle and fist pop jge ss fs mov xorl jo add cmp adc pop dec insl addr16 xchg faddl mov mov sub mov je push push movsb and stc xchg add rorl sahf sbb xchg test fs insb jp sbb aas jmp clc jnp or dec or (bad) out xor test push pusha mov (bad) push aaa pop xor add xorl sahf movsl add dec jmp add stos cwtl or mov fstpt inc scas mov push aas out sub inc movl xor xor dec gs das outsl mov leave cmpsb (bad) mov adc xor add xor inc mov xor ret pop sbb dec push fistpl das outsb in dec and sbb jecxz inc add orl (bad) jl ja add ds or sbb xor pop fs mov movsb roll inc cmp movb add cmp and int testb sub add sbb and sub pop bsf outsl sbb call pop bound sub lea rorl test ret inc add call jne jge inc push nop call les mov das icebp aas or mov sbb xor out jp sbb ror push lea jecxz adc pop xor jl repz add mov fnstcw mov xchg fs push xor popa divb je inc sarb xchg push sbb jno outsl and cmpsl xlat insl test inc push and sbb mov movsb movsw mov mov ds push pop adc mov fs aad es fs adc les cmpsb xchg mov je jmp or subb jg adc jecxz dec pop mov mov mov push cli (bad) lcall mov dec mov stc jmp insl cmp jbe xor adc cmp lock sbb lock or xor scas lods ljmp lock popf inc push addb xor (bad) jge jae push pop (bad) sti pop adcb fmuls jbe xor movsb (bad) iret xchg mov adc xchg inc sbb jmp shrl rol rcrb sti fwait cli xor lock jmp das inc cs (bad) cmc jo addl xor xorl push jge jno mov mov push push out faddl fsubs iret jecxz mov ds xchg enter nop adc jo nop out mov fwait incl adcl mov popf xor stos cmp sbb cmp dec xchg test dec inc or inc push hlt cmp lds and sub shlb adc dec xchg and in scas nop (bad) adc pop cmpl add cmp mov imul sbb sub jbe push push ljmp jbe sbb out jae aas rol push jns cmpsl lock adc xor dec adc and xor inc enter add push jmp mov push or jp jmp cmpsb push addl inc je enter mov inc mov mov (bad) loopne jl dec icebp orl outsb xchg repz stos cld push loope decl xchg jbe cmpl or popa call mov push movsb sbb xor xchg or setle xchg cs push pop out and fisub aaa es (bad) inc (bad) add pusha adc mov adc mov cmpsb inc lea xor test cmp mov push and clc or inc pop fsubrp or or jno lods xchg pop pop cwtl neg push icebp mov push inc push daa add add sub movsb add lahf test push data16 dec adc dec inc je cmp mov jno mov cmp jecxz xchg adc dec shrb lahf add cmp lods mov mov or xchg ds jl bound dec out fbstp dec loopne or in ds call sbb fadds mov cs arpl cmpsb nop ret addb gs cmp ror fcomps rol inc xchg push cli jmp add add popa ja jo jno insb aas jne addr16 aam jo cmpsb std jae jl inc inc mov or mov arpl inc ret bound scas sbb sub push bound loopne push cmc xor mov test les mov outsl and loopne or push inc mov outsl arpl mov push xchg xchg mov mov aam ror insb ret dec cmp inc jl pop sub loope stos inc aad pop add enter inc jbe push push je mov jmp adc lret push nop dec xchg pop fsubs push jb pop aam mov inc and sbb int neg es mov bound xchg and es aaa (bad) sbb adc daa es sbb inc outsl add dec fwait insb outsl inc dec xor and dec mov adc xor xor inc xchg enter xchg cs jnp and xchg inc sbb lods push sti das cmp fmuls add je ficompl inc insb cmp adc adc test adc rorb pop cmp hlt mov ljmp clc fisubr mov loop xlat cmp cs imul pusha xor and int3 xchg push xchg clc add jb dec jl test or pusha dec cmp or xchg adc icebp fistpll mov scas shl out add lea into (bad) fisttpl inc loopne sbb fistpl cmpsl sbb mov adc dec sub jecxz xor aam dec dec or arpl adc and in push in pop xor adc sbb fs jo xchg rolb (bad) loop sbb jmp and incl push xor pop outsb push sub jl cwtl cmp daa cwtl pop mov rolb sbb test and inc clc jmp pop mov (bad) push cmp mov adc decl inc push (bad) ret dec inc pop push fmull dec jmp push adc es fild nop sub xchg imul in daa push pop sbb push add sub cmc and sub aad test inc mov push dec push xchg nop inc mov enter leave jns and inc inc ret mov mov adc fsubrl cmpsb mov out pop sub out aaa lock aaa mov dec jne or jne dec cmp dec and scas es or xchg loopne inc pop pop dec push gs dec xchg or lock xchg mov scas inc lods xchg jecxz add imul inc add xorb stc xchg hlt cmc add adc pop mov mov and push cwtl mov arpl mov xchg adc dec (bad) xor cmp jne scas nop mov dec lods add dec inc popf cltd sub dec inc or push jg mov pop mov and push mov loope and push jo jno mov fs cmp jp inc fs add push out mov sub adc imulb jmp outsl sub sbb insb subb xchg adcl add and push and lahf les push mov push cmp add dec cld pop pusha xor pop lret or scas add push cltd adcb out xchg xchg (bad) cmp ret add add inc jo or (bad) adc nop xchg xchg adc and pop aaa push inc imul or sahf pop or xchg mov jb add std or pop enter add incl sbb data16 push bound insb push clts pop and cwtl into and dec (bad) push pusha scas adc cmp fs pop and adc sub mov xor out push into int3 xlat sbb js arpl shll test sub lock movb sbb mov int sub push xchg sbb cmpsb or (bad) mov add push sub add cmp mov or sbb or xchg adc aaa vpaddb ftst add insb xchg addr16 push xchg dec call adc pusha test inc jl inc scas shrb stos fiadd jecxz mov push fmul repz inc push mov nop pop mov pusha sbb out push andb (bad) (bad) pusha iret inc cwtl scas mov ss out loopne cmpsb shrb push mov (bad) mov ds mov (bad) xchg inc in push cmp push int3 mov leave imul iret mov inc add xor fdiv xorb call rcrl int pusha into lret imul sbb ss clc adc adc cmc dec orb lea test pop loopne jo insl or push fisub fs and add fisttpll imul dec cmp enter pushf fist mov (bad) ret add pop dec mov adc sub rorl cmp scas or lret inc dec or sbb add orl ss inc dec jns orb inc jo and xor adc pushf lea rcl popf mov mov jne cmpsl mov cmp nop pop push mov push outsb mov push inc outsb adc lahf or popa icebp mov push fnstcw or imul push pop (bad) in addb ss mov add (bad) pop xor push pand lock je push js adc test xchg add add adc loopne insl hlt cltd pop ror nop xchg or mov lea inc loopne out push dec mov mov aam adc sbb shlb nop sub nop adc test or adc pop inc adc sbb pop dec sub mov movsb push aam stos or mov pop iret enter mov fs add mov hlt push loopne in je das cmp pop adc inc xlat fdivs sbb roll adc mov mov popf jmp cmp dec add pop popf fisttp lds test cwtl popf das and adc sbb out lret add out mov in imul and mov or nop or test or mov jo add pop dec push add sbb rolb fidiv inc or out add xchg mov aaa pop movb leave push das pop iret inc in out pop int3 test icebp sbb xor inc and add pop adc mov mov out andps mov jns cmp jo add or inc or jo fstps loopne xor jle push pop mov or xor je fnstenv jnp xor jg rclb cltd bnd fdivs add sub pop mov jbe mov sbb jo fnstcw rcrl adc sub into (bad) mov sbb int fmul push push push gs mov cmpsl pop test call scas sahf jbe dec test sub push in pop addl pop pop and leave mov or rol es mov enter pop orl push and xchg and cmp dec cmc fbld cmpsb adc xor enter imul xchg or mov jns xor push dec pop or fs in jo jo ret or paddsb (bad) mov sbb (bad) aas cld out out insl imul enter ds pusha xor and pop mov shlb xor mov xor xor inc addb inc mov dec dec dec dec dec push push push push push pop xchg jb rcrb test imul (bad) push rcl dec insb sbb movsb cmp or and xchg dec pop sub push mov insb pop pop (bad) adc mov adc cltd xor int aas sub and std out mov out cli and add shlb add out mov jns sbb add fs adc or (bad) mov xchg (bad) pop cmpsb movsb into aam (bad) cmp pop add (bad) sbb test mov cmpsb mov cmp ret clc sub clc pushf push mov or sbb popf out xor jge rcrl (bad) mov sub sarb sbb cli push and inc lcall dec xor xchg dec ja lahf das icebp and test add cld jnp or sub loope push stc mov xor push inc inc ja pusha sub aam outsl adc ret mov dec mov jmp xor test sub xor xchg test dec push (bad) cli or mov inc mov add inc and pop xchg xor xchg lea lock pop dec push addr16 mov push push icebp in mov cvtps2pd sbb cwtl cmp cli lods iret fiadd bswap or adc mov fidivrl push rol (bad) mov push push lods or jno neg (bad) in pop mov mov (bad) lea pop push mov andb sbb out mov sbb iret popa inc xor and mov sub and xlat sub lcall jl mov xchg (bad) or jmp inc (bad) sti push add dec or add adc xchg lahf mov pop mov (bad) out daa xor jbe mov and add smsw adc ret dec inc movl push cmp pushl sbb add adc xor pusha je mov add or cmp jg mov pop push push mov sub mov loope jne (bad) pop add cmp insl clc and ficompl fwait (bad) mov push ljmp jmp adc mov pusha jbe arpl shrb in outsl sub sub insl aad cmp ja jo xlat outsb mov hlt pop xor jmp ss mov add xor in add pop leave pop nop pushl hlt mov jmp in xlat adc in push jb (bad) mov dec adc aaa inc stos (bad) pop clc or and xchg and or xchg xchg rorb test adc call add lcall imul push loopne insb or ficomp and daa imul xor mov cmp xchg addr16 sbb sbb push sarb ret gs iret adc inc or movsl inc pop inc xor insl dec pushw push add sub xchg dec mov or dec stos shrb xchg add js xchg adc mov adc aas mov mov aas sarb push mov add out add or dec cmpl pop cmp add enter add jmp fwait lods xor imul sub out mov add cmp add mov cmp aas aam cmp inc inc lret lds subl out fs movsb (bad) or adc sbb shrl mov outsl jmp int3 mov mov jle ret fiadd cwtl cmp pop cli pusha jne push pop inc adc jno jg mov mov dec and lcall pop dec scas (bad) insl movsb mov iret rol clc scas test dec cli xorl cmpb sbb adc fneni(8087 dec imul or sub or mov add test pop pusha jle add adc sbbb inc adc pushf adc lods mov pop cbtw dec xor (bad) mov sarb (bad) push add inc (bad) sub or push or lock cmpb or pop and hlt xchg push dec shrb ffree jo sti f2xm1 xor xchg push adc inc push cmp mov and (bad) imul bnd add xor test mov cmp cltd cmp rorl int inc into pop xlat or inc inc adc insb dec xor push dec js or dec push (bad) push jge test sti adc lock cmp cmp sub adc push xchg lock adc jg les mov into adc sbb pop inc push adcl dec mov and test shrb push lahf xlat push cmpsb pop test rolb dec sti xchg mov lds sahf sbb ja pop ret inc jp push ret xchg mov xchg xor lea into push pop adc mov fdivrs mov popa cwtl push nopl inc es inc sbb (bad) loopne jo jae and jge jle push dec pop sbb inc xchg les lcall and cld (bad) or insb mov mov sbb mov shrb push mov (bad) jl adc push push adc push push je jp jge dec lahf call test adc je je cmp cmp pop je adc and lcall loopne clc or push popa decb inc mov pop xor mov cmpb ljmp xor dec and pop lea and shll xor (bad) (bad) inc mov rolb push pop (bad) daa jbe jnp inc test movl mov mov pusha mov xchg shr xor sbb push popl inc es pusha and mov jp sbb inc jmp adc fdivr dec enter adc pop nop or xor push ds call push inc jecxz mov pusha add jo daa ss cs (bad) leave add or pop or sbb xor mov or loope shlb xor mov ret sti loop fdivl lret and mov and add cs addr16 sarb jge sbb mov jecxz mov and shll dec add push xchg andl dec dec inc movsl xchg push hlt jno cmpb mov cmc inc push push mov fucomi scas lcall inc cmp jl icebp insl cltd call mov xchg or rol xor adc add or std subl bound mov mov sbb test push mov in sbb xlat cmpsl mov popa rorb or and add rsm dec mov xchg mov arpl andb mov dec push pop xchg xor adc cwtl (bad) nop cmp (bad) call stos inc (bad) ja cld adc jecxz cwtl xchg fsubs scas fisub pand xchg dec imul popa push inc imul adc popa fs stos loopne stos inc ljmp movb cmp xor sub std mov movsb inc iret dec pop std adc lock call hlt enter mov popa das std push inc xchg pop dec jne cld nop cmp mov inc stos xlat cmp sbb xor out jle in int3 les and mov sahf mov les push sbb ss orl (bad) jne pop adc xor das sbb and hlt mov add sub lock mov inc xor sbb cmp xchg cltd inc nop push (bad) mov dec dec dec sbb or and out ret sub frstor jnp push fsubrs jns imul aaa dec fcomps bound inc lea mov push mov or jno or inc mov push leave inc imul pop scas arpl mov inc adc cmp mov icebp push fsubrs mov mov add mov push mov pop mov jge clc ss test imul cltd add add mov fwait pop push or scas mov (bad) sub fcmovnu push add inc push sub and scas pop lock roll js inc arpl mov cltd jns pop fs or and lea add test loope or lock (bad) xor sub shrb sbb lods sub pop les stc iret hlt cmp cmpsb ss hlt hlt pop into hlt sub inc add or (bad) mov movsb or imul or scas pop jns inc jne add xor sbb fbstp leave lock push lock jb dec add stc adcb (bad) ds or ds pop fildll push xchg inc pop adc xor dec add fadds sbb or sar loopne mov test xor ja popa fcoms or aaa fistp sub push adc cs push sbb add popf mov mov xchg or mov fdivs lcall ss iret push inc sub or imul mov sbb add or cmp and xor ret fisttpl dec push adcb xlat xchg pushf or (bad) or movsb add xor xchg xchg inc mov sub jmp add xchg std repz and pop aam cmp sbb pop pusha cs jno enter call ret pop lods inc sbb call adc adc pop xchg pushf sub push (bad) pcmpeqw adc sbb adc push dec daa call push clc xor xor or setl sbb clc leave push and xor or clc sub sub inc movsb nop (bad) xor pop xchg add repnz lock clc in repnz scas (bad) je dec sub add aad arpl rorb mov pop lret mov nop or movsb repnz call test add push and mov jae cmp pop cmp and push out loopne pushf pop adc cmp dec loopne outsl shrb and rorl and or fld div jge push push push testb outsl cltd stos add adc mov insl (bad) imulb arpl xlat insb lcall inc sbb jle xor cmp jge ds (bad) fbstp push and les pop sbbl lcall sbb aas mov add mov mov je loope inc sub fwait pop sub fisubl push sbbl and adc xchg fbld sbb adc cwtl outsl inc mov push cmp push xor jl int add pop jl or mov inc dec xlat out jge and movl pop es dec mov sub xchg lcall or push sbbl xchg mov pop fcoml sub add lret (bad) sub andps xor mov mov pop mov add (bad) ja push adc cmp xor adc loopne (bad) incl xchg push sub push inc call adc (bad) xor mov setge add pusha das xchg jmp dec dec lods ja inc movb pop mov lods dec pop xor push or pusha stc int es and int les xchg xor push leave cld adc mov sbbl xchg add cld jno stos popf ja sbb adc test xor or das sub or or cmp push and mov add xchg adc xchg ljmp lea incb add sub cld aaa push shl xor movsb fstl sahf lods aad fsubrl shrb sbb ret mov push cmova dec lea mov xor fidivr adc ret dec or test xchg inc mov dec jb pusha aad daa pop jg loope adc aas cmp sti add addr16 add xchg fstps dec sub mov adc je nop push les add popa outsl pop xchg add mov pop push and (bad) xchg mov fist outsl dec stos and cmpsl cmp mov cmp xor push add adc add add push push push out aas je hlt jae enter sar fsubrs subb enter xor outsb loope mov inc mov push jo outsl push sub or pop add jle test sbbb dec stos scas pop xchg pop popa or outsb ficomp ds inc push inc inc (bad) and inc mov je and mov outsb (bad) sbb test xchg mov sbb mov jnp jo rclb adc mov outsb mov cwtl inc add imul sbb pop mov mov lock sarb dec movsl or cwtl cmp fs divb orb popf subb nop push pop subl movb mov xchg es sbb mov sbb test (bad) xchg (bad) inc xor pop add out adc push inc dec scas push push jmp inc inc push aas jbe and lock cmp cmc clc int arpl cmp mov ljmp sub lea push jg adc test test dec out data16 mov pusha pop mov adc or pushf or out jmp out cmp and pop sahf gs loop je ret sbb and fmull add (bad) or lock lahf and sbb jnp pop and jmp enter jnp inc xor arpl xor jo or dec scas insl (bad) mov sbb lret or into adc inc adc dec aam fsubrs pop xchg adcl adc push sbb add push in mov (bad) adc js lahf ret adcl adc pop xor mov push adc add inc incl cwtl jmp ja or scas jno fidivr mov int3 test inc dec fsubl push push jo cmp mov icebp inc jmp mov out das and test mov xor inc cmpsl addr16 inc cmp xor push sub xor xor dec fnop imul aas and or (bad) jo loop ret iret fadd or int xchg aaa enter push gs cmp jl mov add lret and test in ja inc lret push cmp cmp inc dec movups and fsubl jb push and icebp dec mov mov or push ds fmull lock shlb or insb xor test push ja lods roll js push pop xchg rcl les lea pop lea aas insb push flds jae inc inc xchg xlat mov xor in pop xchg push imul data16 fstpt lcall cmpsb int3 sub fisttpl xchg lret insl pop daa movsl mov clc xchg adc dec stos xlat mov jl cli fild sub pop and cmp pop leave inc jb inc inc adcb push mov je or add pop inc imul in dec mov jne xor inc shlb pop adc push jno popf or jmp jmp imul mov dec fsubrl or pop enter xchg sbb xor dec or ja sub shrb ds add or inc xchg add push or xchg fisub or mov inc hlt or daa pop xchg cmpsb idivl sub clc es adc pop jmp and scas aad dec pop pop mov adc lds adc in and sub insl mov inc push sbb inc in stc xor inc call pusha mov inc dec jle mov push sbb adc and sahf mov cmp mov or adc add or lcall dec adc and (bad) add mov pop flds inc push xor loopne scas jno xchg push rep pushf jb out lock or cld push test (bad) push sbb aaa pushl mov inc add ss adc dec stc xor and andl pop inc incl xlat cmpsb inc ret cmpsl sub jo cmp add popf add xor (bad) (bad) jg outsl fcmove add call neg pop add out out daa sbb repnz (bad) jge xchg sbb test or mov (bad) add loopne mov add popa (bad) hlt sbb in loopne cmp loope add enter xor mov rcrb sbb jle fidiv les mov andl cld les jmp fmuls sbb jne dec push pop fsubr xchg cmp cwtl loopne fs jp aam sbb aam je push sbb inc cs repz xor dec and mov inc int lret xlat jecxz mov add lea imul repnz cmp push or lds mov mov cwtl shlb fisubrl adc insl mov ret int3 mov adc jmp inc jmp jnp sbb dec xor add je leave (bad) cli imul mov sbb and outsb xor cmp aaa sub dec jmp inc fcmovnu or shrb cmp sbb cmp jle scas adc stc (bad) jo xlat (bad) dec pop ficom jns cmp popa push fsubs or loopne adc test iret add dec mov movsl fmuls sbbb in inc inc jbe ret clc fdivs cwtl xchg addr16 add xchg (bad) (bad) jge push mov sub aas adcb mov jecxz xor cmc sbb inc sahf movb in test fsubr loopne and aad mov jecxz bound mov dec and push out fsubrs adcl call mov sbb cmpsl sub cmp pop cmp mov adc and xor xchg cmp dec or mov dec adc test add pop (bad) cmc mov ja sti jl inc test mov into test (bad) popf sub movb subl inc jnp push dec ret inc sbbl jnp dec js jge or inc test test xchg lret add pop jne or into or fcompl xor pop fmuls aaa dec and and adc mov test idivb jne mov mov inc pop cmpl mov push adc fstpl dec rolb nop and aam and cmpl sbb add cmp mov mov inc sbb inc cwtl lea lds inc cld fdivrs inc cmp popa call adc xchg add xor adc das inc inc jae ss dec sbb push xchg mov fwait mov stc daa dec and test adc push mov inc mov xchg push push addr16 sbb lahf push popa shlb sbb cs mov je dec add sub out lds pusha xchg mov xchg mov test lock movl push test sbb jae fbld adc hlt add cmp mov cmc pop (bad) and iret ljmp add sub inc loopne add andb imul xlat sbbl sbb dec pcmpgtd call pushf push int3 js and mov je cmp mov test dec (bad) cltd sub jle ds jge mov (bad) (bad) out mov push adc mov movsb out mov into aas mov push xchg cmp pop adc orl adcl dec cmp mov cmp (bad) push rcl push rcrb rcl addr16 ret (bad) insb stos mov dec mov adc push rclb jecxz and (bad) lods hlt and shlb dec (bad) mov push (bad) hlt push xchg fcompp xchg add nop pop pop cmpb xchg xor rorb add daa pop lods repz arpl sub inc jl adc ret fnop fcoml in mov lods lods add or lret xlat jge jecxz nop mov xchg int3 xorl pop nop loopne add and test cmp jp mov and add or sbb inc xor push pop inc insb inc fnsave icebp mov nop add scas inc and aas mov enter (bad) mov and push cli data16 cli add push stos push jge (bad) and and or je sub loopne outsl pop in in sahf or out xchg pop cmp mov rcl push mov ret mov xchg mov xor addr16 and push fdiv add in test inc test popa pop clc push sbb mov xor xchg sub popl dec lds dec dec rorl addb adc sar xchg adc sub add (bad) fstl pop (bad) imul je fistpl rcrb inc cmp je xor push shl xor lahf mov push rol mov popf dec pushf push fdivrs cmp test andb xchg cli ss add jp pop pop jecxz cwtl hlt add mov imul pusha add dec lea mov test mov xchg faddl jae adc lahf mov ret add push push sub add or dec jmp jne pop clc pop cmp jecxz xchg pop scas int add ja mov or das (bad) sbb pop cmp sbb adc les sbb pop push js or lea mov into or push sarb and movsl dec add xor add aaa adc jno cmpsl (bad) aam cmp arpl xor and inc mov mov xor push or call xor jecxz jae jl mov mov inc or fisubl lret or inc stos xlat fs ss cmpb push push inc mov sub push inc lods or inc cmc sahf add push ret xchg mov mov adc xchg sbb cmp xchg add (bad) pop jge cmc adc daa cmp aas in cmpsl push pop nop iret dec inc fwait or sbb dec jno fcomi xchg iret aas or scas cmp push nop or (bad) sbb inc nop mov mov adc sbb or jle sub lock xor fsts push mov push ret cmovl sub aam addr16 or pop sbb nop movsl pop add dec jnp sub inc (bad) out push test fiaddl fsubr sub shl add mov add dec test out repnz daa dec push jns hlt mov es rcrl popl sub adc inc xor jo push ljmp and lods mov mov call or lock (bad) movsb jbe fimul andl movsl adc mov mov adc (bad) mov fldenv or sarb les jmp sbb out sahf rorl pop addb (bad) int3 mov adc xor jne pushw xor fcompl cmp jb jns jno add ss or das enter js or and stos into or enter test push es in aaa in jmp pop icebp arpl shrl movl ss movsb push clc pushf lods dec int dec addr16 ljmp sbb inc adcb jnp,pt sbb sbb jae jmp jb lcall push cmp (bad) cmc cmpsl les movb or add addr16 inc adc imul push add mov sub push lcall sarb imul and mov xorb imul or push xor ret aas inc jmp xor ret sub adc push adc mov dec inc cmp mov adcb sub in inc pusha jmp add loope cmpl icebp sbb add shl in xchg ja or in enter mov std dec add nop ss dec xor or mov lods xor mov push cmp jno aaa lock jg (bad) lock and inc push inc (bad) inc or add sbb das hlt sub cmp dec pop pop dec call ljmp push daa sub mov idiv sub sti sub sub je inc pop add ja add jge cmpsb mov sbb movsl jnp cmpsb rorb fstpt sub loope pop imul pop loop out mov hlt testb add add and daa cmp jne cmc adc mov adc push add sahf jbe inc into and mov inc jl xchg leave hlt das test insl outsl and loopne inc lods mov lds adc adc sub ds mov mov inc repnz imul fcomps and and movsb inc xor xchg mov rclb cmp out jge lock sti push int outsb mov sub mov jecxz iret or inc mov mov cvtps2pd ror xchg lock in fnop test leave xor dec imul xor or add fmull xchg cmp mov xchg insb je xor mull fsubl add lods pop rorb call dec arpl cmpsb fsubr sbb hlt inc test push push lea movl dec pop lea pushf pop mov je movsb mov int sbb and (bad) sbb jns xorl mov loopne sbb adc sub fcmovu cmpb in arpl sub dec push in and adc jns sahf andb push inc push xchg in loope bound xchg jne pop mov pusha test (bad) or dec mov test mov dec aad pop pinsrw add xorb and lcall (bad) jmp push vmovupd jecxz loopne or movsb push xor ss add and inc sub mov push push xor jae dec jnp mov push or (bad) fdivs inc or and and and test inc pop lcall popa or cmp mov inc cmp inc popa add cltd js mov jbe fiaddl popa cmpsl mov pushf cmpsl divb mov je insl test push ret cmpsb enter xchg movaps xor sub cli mov cvtpi2ps jmp jge xor xor xchg ss xchg arpl pushf nop sub xchg lret or test fninit cmp or je je add ret sbb aas mov cmc pop xchg mov pop mov std in mov push rcrb incb iret lods int xchg test lcall xchg mov andl inc in lcall push add mov in pop imul lock mov mov inc push stos lds add test popf (bad) clc and push and fisub inc movsb sbb and adc loopne decl mov push sbb andl insb arpl sub lock adc cmp or dec (bad) psrld imul dec add les pop data16 add ss push sbb les imul and xor inc xchg pop jg add call cmp jne jmp sbb ds sub sub xor xchg push mov adc mov mov mov ffreep sbb pop inc jg adc outsl lock aam mull xor loope out cmp jl mov pop pop adc and jmp fsubs es push and sbb fistl xlat inc js ret mov pop adc adc jae jae push mov stc jmp and mov pop mov jns out jle loopne lods addl push call movsb shr jns out mov xor out xchg outsb in nop push mov dec sahf out sahf jl push test out push jl push pop iret mov pop adc test xor loopne cmpsb mov xchg or mov test outsl sbb and mov ret sub clc xchg xor adc pop faddl stc sbb and test add pusha and stos shrd push adc mov lahf insl cld push sub mov dec xchg mov outsb mov in jle sub outsb arpl mov mov or mov dec out and add fimul gs ss adc push jae je mov sbb rcll js mov push and inc add dec xor out mov shlb pop xor mov add test add add (bad) dec dec fisub out dec mov ja,pn inc aaa call pop je aas or jnp lock mov fisubr test mov add enter adc ret jns add or je xchg test ret scas stc and cmp inc push dec cmp lahf and adc pop pop (bad) pop push insl outsl fs inc ds or jns sahf push (bad) fdivrl cmp hlt pmaxsw test inc push push pop sbb sbb xor inc daa or and cmp mov adc (bad) outsl pushf std push pop fwait xor adc imul pop popa js arpl mov pop test sahf add push sbb fadds push call push adc add mov sub and and add push in sbb inc sub add inc ja cmp fisubr sub mov in jp stc push adc push push mov adc cmp pop jp nop add jne pop xor movsb or jecxz dec insl sub ja stos add orb je xchg dec add dec or or inc xor dec push js add mov add push bound mov inc outsb or cmp js or xor es adc outsl mov int inc and rorb add (bad) and or decl imul es jg sbb out mov das mov popa jno notl test dec dec cmpsb sub sbb inc fnop int cltd pop sbb (bad) mov or leave adc add xor mov or dec inc (bad) or cld adc (bad) in adc add nop cmpsb mov ja inc imul pusha aaa mov push adc ret mov jb push sahf push or jb xchg jae xchg nop insb iret inc clc jns or jo adc adc fsts cbtw into (bad) in adc inc and push or jl gs lar adc lea mov or xor (bad) sub mov and bound mov in ja test or int3 jbe mov clc jns adc or test xor outsb pusha popa and fwait es pop xor adc addb and mov inc add add dec outsl movsb add xor into aad inc mov setne inc push or out sub iret in mov or inc add push (bad) aaa xor pop fildl lods sbb add push jne jns js and outsb dec test or mov je push mov jg add addr16 push push dec push ficomp inc and iret inc in neg outsl add add mov sbb lock dec sub or test pop xchg mov addb add jns insl xchg dec add push adc loop jl lock fcompl out sub push loopne inc inc dec pop inc add pop push dec xor aaa and sbbl outsb in inc inc push stc sub daa test inc paddb nop mov inc das lahf add inc inc lods inc jo (bad) jno jnp push push mov or das mov xlat cld pop inc mov add jne inc lock sub fldcw test js fs jae pop test or dec mov (bad) sbb push dec add push andb cmp lahf mov addl pop add add dec or ljmp ret or (bad) data16 add xchg add inc je mov mov frstor push or mov es sbb adc inc sub or push xchg and or std ljmp push mov rcrb stos jb sti mov bound fmuls jo arpl out lcall lock ds shrb data16 addr16 xor and push test mov imul lcall dec jb ss sbb pop ja in mov push cmp mov mov sti mov mov fs cld cmp nop dec cmp dec push jl cs in mov enter sub push cmpsb jo in jnp movsb sub mov lahf pop and loope jp ficomp pop pop ljmp inc shlb je enter add sbb aaa cmp movsl call andb or inc fs data16 jl movsb mov xor inc inc jl or jo (bad) (bad) and lret loopne les pusha sub mov sub mov dec loope xchg xchg adc lahf cmpsl or adc loope adc dec (bad) lock fildll icebp and inc insl mov int mov sbb jno sub push add inc adc leave cmp push ljmp sub mov pop xchg mov jbe (bad) mov mov mov inc sbb mov cwtl (bad) std xchg inc xchg pop push movsl sbb in push xor movsb cmp xor jmp sahf out fidivl ret sbb dec fnsave mov stc add xor xlat mov in push in jge and push add sub add das add pop cmpsl stos adc and push push jae xor mov aaa sub add and test (bad) imul add xchg pop adc and enter es mov dec dec or and arpl das cmp dec pop int3 pusha dec jns adc xor lock fmull incl push mov adc sub fstpl xor clc jmp push jmp negb cmp pop lods mov sub addl repnz (bad) dec test sub xchg pop cs dec insb fs add dec jecxz cwtl mov out inc sahf pusha pop das push ret xchg mov subb xor xchg xchg jl lcall insl mov jae data16 repz test push adc loop xor dec xor (bad) xor out add and or in (bad) mov push aas int (bad) pop pop xor xchg ss and jo xchg mov mov or (bad) inc jne gs rol sbb fildll in lret fnop repz dec cmp data16 xlat test sub push cmp cmp push sub pop pop subb test push fiadd orl xor pop pusha aaa sub xchg int3 pop push rcrb dec sbb in cmp shrl pop dec xchg ret call pop repnz ret and inc cwtl cwtl mov ss inc insl cmp shll and push lldt mov fwait in add inc xor cli ror push pop js push mov mov inc pop enter (bad) fcomp jmp loopne or es jns ja in mov enter popa cmc nop pop jbe mov pusha loopne inc ffreep es repnz dec inc roll inc push sbb cmp loope popa pusha or daa dec dec dec scas cmp dec inc jo popl rcrb fiaddl jne dec xchg mov or dec ljmp and js dec inc inc test dec mov inc push pusha or push sub popa push inc inc mov push push inc dec push sbb push inc inc popa pusha and enter inc int3 pop mov cmp inc cmp rcrl push pusha dec inc inc push ljmp push dec lods popf or dec push push mov das mov cmp ret mov mov pop ja pop and rolb in mov pop in adcl enter push fsubrs into sbb lock imul pop and inc push sahf or xchg push pop cmp pop in adc push push aas inc dec push and lods jg jle dec loopne or and fmull ja or and stc mov in adcl dec sub adc fwait dec or ret ss pop sub sub pop rorb mov mov nop or xorb jg xor adc push pop cmpsb (bad) fidivrl sub pop push js stos sbb xor and xlat sub sub inc pop cmp mov pop pop and popa sbb mov cwtl and add sahf je inc xchg (bad) aaa add (bad) xor jl scas push sub or and cld xchg adc daa cmp inc or push andps push fwait pop xchg jo mov xor bound or adc (bad) cwtl fbld lcall rolb loopne cmp outsb jne cmpsb out jmp rcr data16 push je and push sbb loope lret out and mov fmull inc xor xor sub inc imul test cmp xor cmp fs lds je adc and jo adc dec push js mov shlb mov in es hlt mov dec mov sbb xor jbe sbb jb sbb dec add shll jo cltd and repz mov jecxz fs pop dec clc lds (bad) mov call rorb scas ret or push and ja mov sbb cwtl push cmpsb icebp cmpsl cmp pop or lods js push adc cs jmp and lahf shll pop push push repnz sbb jecxz and sbb push push dec test push or daa aaa xor lea clc enter xchg (bad) push inc and out std (bad) mov enter xor add sub repz pop push jp iret call or gs sub xchg sbb and lds je lods pop xor fidivl inc and sahf sbbl lds mov mov sub jae cs or adc add or pop sahf lret add adc adc test das sbb sbb je or cmpsl test mov mov nop push ja subl cmp sbbb adc add dec jae or adc mov mov xchg add xor push dec enter cld push lea pop je mov shrb cmp je aas testl mov jl cmovae inc fldcw movsb (bad) lock sub or cmp nop inc pop in stos or hlt popf add xor dec nop mov je mov or mov mov push inc or jae fistl and gs add or push sub fstpt sub push inc add and add fisttp or inc push dec sti sub mov pop ret push adc and imul mov or mov sbb dec mov and add fisttpl add jecxz xchg out push pop or ret fildll sbb inc sub add push mov and ret es push sub xor inc sti or push inc add int int3 and and xor push loope (bad) push hlt fiadd xlat xlat dec sahf lret push xor jae rcl inc imul ret sub push xlat push sarb addb test and sbb lret js outsl dec hlt mov aaa ds push js push push push xor lret jp dec lods dec mov (bad) sbb push faddl or in rclb (bad) testb mov or push fcmovnb ret pop adc inc sbb and lock or lahf or add stos mov push xor inc pop and repnz inc aaa insb adc rolb mov (bad) js jb js rcrb mov jmp fucomi sbbb je dec dec inc imul lfs inc pop pop add test inc jge adc xchg (bad) bnd mov int xor stos cmp sub mov inc cmp xor push nop mov outsb or mov cmp pushf rcrb sbb add adc sbb adc aad shrb mov ret shr add xchg jle jne xchg push adc jp pop js dec cmpsb pop dec ret data16 sub orl xor or jmp fs pop fcmovb test pop dec mov stos (bad) icebp mov xor or xor das dec cmp adc dec or inc mov or orl jl push mov sbbb push ret rclb dec shrl sti and lret test jb out out cmp (bad) xor push jmp mov and push mov cmc add pushl dec mov or je ss jmp pop or lock or stos fcoms inc sub cli sub and repz hlt xor jno scas fldcw iret iret (bad) cmp xchg xchg std aaa aaa xchg xchg nop add and add mov les mov mov cmp xchg test adc adc cmp test push push and lcall sub pop mov movsl adc aaa fistl push and add pop (bad) jne add arpl je je inc pop adc push sti dec add sbb push sti inc (bad) mov adc or add adc inc inc mov fs pushf repnz outsl pushf cmp xor (bad) lock test sarl push aam lahf nop cltd push add pop inc xchg push add cmp sarb pop das or mov add in ds jge xor enter insb pop mov adc adc mov and push cmpl ror sbb push cmp sbb (bad) jge xor in xchg xchg pop ds or outsl mov mov das mov xchg rorb add aaa xor mov push add ret cmp sbb int (bad) pop xchg (bad) cld jg and xor add lret sbb sbb pop add je jmp mov or push xor mov xchg cmp jb adc xor xor push sub movsl test xchg sidtl add fisttpl xchg aad adc stos lods (bad) jae lock pop (bad) and hlt push pop xchg push push mov pop stos push add sbb insl out jae sbb add loop out dec xchg enter xchg xchg pop add imul and inc icebp mov adc (bad) dec pop adc xor lea inc ret xchg int3 adc jb pop or add rcrb fldcw sbb jb pop out adc inc cld or and xor test movsb nop bound aas ret push sbb mov dec iret dec add sub and add mov mov dec (bad) aam leave xchg andb ds loope test push sub and and mov and andl leave js push xor sub movsb ss or lock add mov cwtl out aaa sub lea je roll sub push mov ret (bad) subl xchg inc jle lock add xor ss pop or out add cmp shl push xor push mov mov adcb cmpsb lods imul data16 mov aam or push xchg lock (bad) je mov insl test stos outsl inc nop out mov enter or es push xchg or mov inc fstpt lret push or dec mov aaa sub push in adc add cmp or pop lea sbb and pop dec enter outsl or ret mov icebp pop and sbb pusha push push push mov negl inc or aam pop dec loopne cld xor xor lret xchg sbb loope mov cmp or in xchg xlat sbb push or xchg sbb and add inc pop or push push lea push addb pop mov adc xchg icebp xor mov inc aas outsl or lds (bad) jge sbb out sbb pop mov jno push jle mov xor ja mov inc shrb xor sbb negb or mov and and push inc xchg jns xor rcll lods call adc jle sbb test adc fcompl addb rcrb jmp sbb sub in add push xor cmp add push lods std test xorb jle out out inc mov call and je rcll xor add pop and stos mov pop insl dec xlat pop and scas add sub fildll mov cmp or push cmpsb mov push pop (bad) ret cmc mov pop jns or jbe inc inc adc in ret inc or jp cs sbb cli arpl dec push adc movsl and shrb lcall sub fcom pop rclb mov (bad) in cmp mov inc daa inc xchg insb mov pusha pop jno add sbb dec xchg adc lods cltd in enter hlt jb or adc xchg xlat xchg or fist adc rolb inc ss add mov cmp add lea call xchg and xchg dec lret sbb stos orb cmp pop adc out es jne rclb or movsb scas and or jmp jp add mov (bad) xchg cmp or cmpb fyl2xp1 aam test fsubr push add or fstps dec sbb sbb dec jp adc in insb icebp testb push and lahf sub mov mov in cld int pusha adc adc jp mov notb xor popa and sub fadd daa orl adc push insb adc and loope mov (bad) mov sub sub xor dec repz out test movsb sbbl jnp adc mov loop lret sub and loopne push pushw dec arpl sub cltd clc jbe movl stos sub or add jl hlt push inc out out dec dec movsb iret mov add pop jp mov fs add outsb add stos xor xchg xchg pop sub fwait mov popa jmp dec push sbb jl cmp xchg outsl xor lock sbb pop sbb adc add add dec pop jmp loopne add test adc lret mov cmp addr16 daa imul addl mov cltd outsl add and gs inc add xchg jmp adc nop inc sub or loopne pop cmpsb mov loopne out xchg sbb pop xchg test xchg dec mov xchg sub popa arpl pop ja sub adc mov (bad) rdpmc mov testb call int3 subl jle jne pop iret cs fs add mov bound lods (bad) negl vmulpd lahf jae in push pop jo pop jl adc pusha pop add mov fldl movsl push sbbl cmp dec pop or push xchg fcoml mov pop lea push mov insb jge add mov in jo dec xchg sarb adc in roll push push or jo fwait lods (bad) into and dec call xchg fidivrl pop xchg repz inc aas adc mov daa scas loopne inc fnstsw jo std cmp mov aaa add and jae jae adc pop dec enter insb insb movsb inc repnz inc movsb inc dec fstpl inc or pop (bad) xor into and jecxz xchg xchg sub and mov test mov sbb and or and push cmp push rolb adc aad loope mov outsb mov xor mov popa and mov cmp inc push cmc push das repz add add addr16 mov nop push pop inc ds push adc rcrl enter inc shrb inc ret test jne xchg in pop or mov inc xor addr16 aas js test mov xchg push xor sbb ja add dec adc and rcl js xor call sahf loope popl xchg and call push sbb mov jp inc fnstsw cmpb hlt xchg dec fdivl cmp adc add mov scas pop ret push add sub cwtl sub repz dec jmp sets mov lock inc adc or cmp cmp into xchg add nop add aas mov sub int3 cmp sbb aas int3 enter mov frstor ds jp lock xor jbe cmp push pop lcall add adc inc imul pop (bad) xor lret inc mov test inc or ficom hlt and sbb ss dec ds cli xor icebp add gs xlat stc lods push (bad) or aad push or enter ret jno push push jmp mov push aam xchg fwait or vxorpd rcl jmp push mov mov adc and js aaa pop pop add fstps outsb add (bad) lods movb imul and out push inc insb add mov add pop xor ja (bad) cwtl aam fcompl mov mov orl int orb jb mov mov push mov (bad) sarb mov jmp andb bound cmp test push push dec push add or push addl xor repnz sbb fsts mov and cld mov cmpsb pop test aas push and mov lock xchg sarb push sub add or xchg push (bad) inc imul dec movsl xchg (bad) pop add cli inc jg sbb nop rolb cli test or lcall dec test xor sub dec stos sti out dec je daa cmpb push lea jne sbb cmp test add inc add les sbb pop or pop dec xchg sbb pop fwait ret or sbb jnp out cmpsb pop xchg push mov in jge sbb inc out je add inc and mov inc pushf lcall shrl insb push nop sub popa into sbb pop xchg xchg adc arpl mov sbb inc and dec xchg push fldenv test and movsb inc mov mov aam pop mov jnp cmp popa dec xchg adc mov bound add es clc cmp cmp inc hlt out mov push cmp lods cmpsb and cmp popa cmpsb ss ror or fadd mov dec enter nop add jp out arpl add inc pusha add add mov xchg bound in pusha daa imul lock (bad) and aam pusha mov jb adc jg xor pusha jmp data16 xchg sahf jge and and xor xor loop inc mov adc xchg xor lahf xchg xchg or add adc sub jl je add test or mov add or sub dec jecxz push js sbb lret add in jbe test cmovs xchg dec cmp xor inc cli push cmp cmp jmp sbb leave clc xchg pop popf lock dec sbb aaa movsb outsl pop int3 mov loopne and adc popf cmpsb test sarl and dec inc sti ss movsb add rorl inc xchg push inc imul add dec jns dec sbb sarb inc (bad) fnop mov xor test add mov nop (bad) sbb push jo fldcw lcall inc xchg nop andl ror nop sub inc or fisubl xchg movsb neg in add sub jns subl add xchg (bad) push loopnew cmp gs sbb cmc jo das add aam jg repnz sub push adc sqrtps test push push pextrw jnp xorl insb in data16 rcl push pop jg jno test and cmp xor sub pop and add pop push sbb ret dec movsl sub add push das mov in (bad) lods sbb imul outsl in jne push pop add sub ljmp adc fstps (bad) xchg or out movsb sbb adc cmp jmp dec inc add adcl adc fsubrs adc roll xchg cli push lods sbb ret popf pop add and sbb testb push cmpsl icebp scas inc loopne jnp pop mov pop aas or jl mov add adc cmp je outsb popa les roll mov xchg outsb push mov and xor push cli sub iret jmp fisttp frstor jo mov xchg mov dec cmc and sub and and scas lea fistpll aaa inc lcall xchg or add sbb movl inc cltd xchg mov fs push sbb xor int3 add pop mov adc test inc xchg arpl mov aam or popf sbb xchg enter mov and mov push clc sbb daa nop cmp movsl sbb inc cmp orl (bad) and add sbb ljmp adc adc inc mov int3 or and por add cmp out add xchg push add inc mov lahf popf mov mov int3 pcmpeqd imul insl hlt ljmp xor pop (bad) dec pop icebp aas rcl mov je aad add sbb addr16 xor jl inc in mov fistl add mov fldcw das sahf jecxz (bad) js cmpb and inc pop adc daa int les dec dec xchg pop andb inc push xchg cmpsb into push or push push fcoml adc cwtl pusha mov inc adc adc out inc cmp ljmp call (bad) cmp jmp dec pop push jo hlt movsb xor cld popa addb mov popf cmp fldl fdivs xor rclb clc js sbb xor icebp enter mov and or inc adc mov dec cmpsl aam js push inc ss movsl iret and mov std or pop push dec je mov rorl cs ret clc je cmp dec pop push popa rcrb jge jnp jnp jmp int adcl dec push adc aaa jno cs popf aam push sub gs movsb sbb mov add adc push sar or mov push push (bad) push clc xor (bad) jo out push (bad) pop loope mov fimul push cmp mov push test add add (bad) pop push daa dec (bad) aas fmul sbb xchg push add and js lods sarb or mov mov add mov jp ja nop cld aad es je inc jo daa ja orl pop add xchg sub rcrb jb fisubr xchg lret adc mov xor mov pop and scas sub pushf cmpsl sbb bound mov inc sub popa and or divl adc dec gs push and imul mov cmp jge andb outsb mov enter out push mov push cmp mov xor lret dec fidivr movsb lock add mov adc fisttp xchg mov mov shrb or jp repz push or xor inc orl pop pop pop imul jb mov js lds sti fdivrl cmp fwait mov sub dec loopne negb add mov cmp sti sbb js jg imul fimull xor lods and xor sub push sub add xchg add sbb dec mov inc pusha pop int or adc and orl push (bad) add test cmp cs loopne xchg xor bound add inc mov popf inc fsubrs push sbb adc pop push push cmpsb test cmpl push sbb sbb cld mov movl sub pop or add inc jbe fidivr inc ja xchg movsl sbb mov gs scas mov mov pusha mov or add add sahf jge clc fidiv and push inc add push push nop pop dec ficomp sbbl lods out pusha pop psrld frstors jo mulb lret pusha add jne adc dec sbb ret pop xor out das mov xor add cmc xchg addl push mov xchg mov fdivs jnp inc push sub add add xchg mov or adc or lock or lcall jo daa inc pop data16 sbb push lock adc adc fmulp jnp scas aas add push or scas inc push adc sbbb mov jecxz mov jo andl add xor and popf and lock subb test add subl repz (bad) das sub mov cmp mov jge js fwait pop es mov mov mov sub in adc mov (bad) sbb push inc (bad) jo sbb mov pop or or rcr imull mov push xor push add sub addl adc dec inc dec push ret daa decl and es stc pop out cmpsl lods test or xor jge test jne lea test pop mov je int3 fmull sti and inc or dec (bad) xor call sbb or adc gs jecxz and data16 std scas and sti pop insb sub sbb pop orb push mov sub push cli pushf pusha (bad) lea movsl pop incl idiv dec sub repz xchg insb call add notl pop pop or and (bad) push or mov push pop inc cmpl jne or push mov add cmp sbb pushl sub rcrl push pop pop stos cmp cli add or cmp je lock adcb jne xor and mov jecxz iret or sub dec (bad) and pop adc bound add xchg and int xor and test xor sarb test jnp outsl sahf cs movsl sub and xor incl subb cmp aam cltd (bad) and adc loop inc aam fs mov push dec mov pop sbb leave (bad) pop and mov jge jno dec adc push xor and int decb mov cli leave aam push or push or inc sbb mov arpl jb dec mov xchg pop (bad) mov imul ss pop jo mov push cmp addr16 sbb dec add mov sub insb cmp ja xor pop jmp dec adc jl adc mov lds sub mov add or cmp test (bad) add rorb cmp rclb std xchg jbe add ljmp inc pop ja jl and jle adc cwtl sub lds shlb push push pop mov test xchg fsubs adc and and or push mov outsb inc lock (bad) leave mov sbb xchg pop xor push decl inc xor aad fistp and push cmc sbb lods loope pop (bad) jne mov (bad) flds pop mov js or cmc sbb xchg dec les push dec ret jp sbb aas mov mov (bad) push adc (bad) sub sahf push mov jp mov mov pop mov cmpl inc inc je imul mov xor jecxz gs shlb jns test jmp push mov test (bad) push xchg dec cmc jmp loopne movsb fidivr sahf adc pop fild call push inc fisub mov add push cmp sub push dec mov mov mov mov enter add cmp xor and movsb and outsb mov mov pop dec pop or xchg cwtl dec leave jno or cmp xchg jl pusha inc cmp add push inc sti sub mov lods dec mov les aaa mov (bad) loopne mov xchg dec sbb xchg sbb scas or xchg mov xchg pusha mov ss das inc dec fs dec cmc inc pop fdivp test or test inc mov jno add in inc test push ja sti mov push cmp cmc inc iret adc adc shlb mov aam dec popa divb movsb xchg inc sub add xor imulb xor cmp inc test mov inc ret cmp mov sbb popl xor cmpsb das adc push adc push push pushf add pusha or daa push pop sub push fisttpll adc lcall movsb and shlb fbstp jmp and int3 insb add push js push push loopne movsb mov jne cmp pop inc call xchg adc sbb enter add xchg shll cmp ss xor xor aaa add dec push pusha mov sub push mov seto pusha xchg addr16 adc add adc jne fwait add cmp data16 (bad) ljmp inc out push lret loope dec stos jp movsb mov jns les push and dec maxps and adc add jo and mov adc inc jo sub (bad) fbld push and mov add add mov pushf push adc push imul dec roll pop add pushl in mov call sbbl or stc and ret gs loope xor xchg (bad) call dec call add add inc and shl cmpb aaa and imul cmp xor loope inc cmpsl inc dec sub rcrb rolb int3 aad gs rclb xchg or pop push std arpl push push mov jbe sbb arpl pop movsl fildll dec sub pop mov les fs inc lea mov mov push or push dec je scas xchg jp popa dec imul das ss js insb dec or dec dec cmpps dec mov cmpb or arpl arpl adc insb cltd fdivrl mov jnp jno mov call jb popw adc xchg cmp pop mov mov ja into movb fldenv xor insb adc jmp sub add dec clc cmp mov movsl lea add int mov adcl cmp arpl loop sbb inc aaa push and ret rorb jge movsl sbb ret mov (bad) mov or mov inc shlb ret es add sbb adc (bad) dec repnz pop lods ffreep add out add push add inc test lods pop add xor mov and outsl xchg add push add cmpl pop adc jo sub sbb pop jne call add mov sbb dec push aad cmpsb and dec mov adc inc push xor mov int3 dec jo fdivr fcmove daa lahf cmpsb sahf xor sbb sbb icebp add or fdivrl sbb xchg nop xor mov pusha add xlat sub mov lods out stos sub mov pop push sbb scas adc cltd (bad) push inc cmp xchg nop lock sub xchg or sub (bad) test test test adc dec sbb sub rolb pop add adcl push mov (bad) out dec pop popa sbb mov jbe adc imul adc mov sub mov sbb push and insl xor insb sarb je je adc jne and sub add jge sub mov insb (bad) xor scas fcoml or push incb dec mov jns lock mov cltd (bad) or mov and jg and cmp lcall mov inc add hlt and dec dec clc push lods push loopne adc xlat (bad) nop add jge mov lods add movsb inc gs jl pusha mov test das sub sbb xor addr16 in push lret jl sub setge mov or mov rcll push insb adc cmc cli daa mov sub xchg xchg imul rclb je es adc adc or mov push or ret cmp xchg mov xor jb mov dec add pop pushf add js adc sbb xchg xor pop push add rolb cmp mov and sbb pop dec sar pop add or roll aaa shrb add ret inc sbb push imul insb arpl aad or (bad) push repz enter mov adc lret rclb push jbe clc inc sbb cmpsl xchg or addr16 jne sub push loope loopne inc outsl pop dec lods loopne loop pop inc dec pop addb loop sbb add sbb test (bad) loop (bad) adc es ss jne cltd or cmc mov (bad) into inc mov inc sub adc or xchg lods add inc inc inc ret add push push in adc in fs pop dec aaa adc scas int sub rep aad mov or or jmp pop push push rcrl dec jmp cmp pop (bad) das mov and mov popf sub int3 fwait and cmp nop jmp das pop push xchg sbb rcll imul cmp test pop push sub clc mov mov les inc scas and cld xchg xchg lret ss cltd add les cmpb push movsl scas pop clc inc push adc imul jae or jecxz repnz xlat sbb (bad) pop dec add and roll mov repnz stos jbe push ljmp lret mov orl hlt aaa aad jmp fsts outsb mov jmp or and cmpsb dec aam mov sbb loop nop xchg or shr daa pop dec mov sbb daa and add and dec sub mov jae mov (bad) inc mov negl (bad) mov adc add add dec adc inc sub pushf out popa test lds stc les mov scas sbb fisttpl and por cmp inc xchg test nop lret xchg inc sbb dec dec das sbb ret loopne (bad) jle addr16 jbe add push outsb jg mov iret test mov sub lahf and add loopne jo inc push nop js sbb sub mov movsb add aas je or xor push push and inc je addb jle inc adc mov xchg or mov ds push js fist xor xorb js sbb sub pop push sbb out xor movl xor mov je dec add xchg xchg hlt out xor inc jle stc sub adc add test cwtl push adc cmc add pop aam and addb adc sbb shll in sbb dec (bad) flds and fadds adc inc xor mov sub (bad) icebp ret ss insl adc and notb sbb mov pop aam xchg lea sbb or pop add mov rclb or js jecxz (bad) push fsub adcl movl pop mov sbb pop jo sbb inc ja jecxz sub add outsl (bad) mov dec enter push bound push mov adc fistpll and push les insb rolb mov (bad) faddl push mov lds lea add lcall lahf les sub add push jmp nop ret xchg sarb add inc rcrb test mov cmp enter mov test dec push cs or dec sub add inc inc (bad) pop xor jae adc sbb imul (bad) enter mov aas and sbb cs imul mov push shrl lcall or dec insl dec call inc enter enter push addb subb add pop lock movsb sub call popf ja and cmp mov (bad) adc sub push jg sub test xchg ret rorl dec lcall mov cmp pop cwtl xor aaa add push out lods adcl or lods fcmovnb sbb and mov push push sbb and dec mov xchg mov movsl xlat gs mov dec sbb and cmpsl dec add and mov ffree jmp (bad) adc arpl sbb and lret into mov cmp pushf insl xor in nop or orps sbb lret add test call test in call and sub out movsl xlat test push cmp adc loopne add sahf das paddsw es repnz loope nop in mov test daa rorl call arpl aas je lcall push xor or jmp and or pop ret mov adc add out push mov mov pop sbb ja and and jg pusha dec imul and inc mov adc jns push cld or mov movsl mov rorl test int loop dec dec xor mov xor in fnstsw push fwait shr ret push insb or cmp inc dec adc lea push (bad) jne pop add inc and dec pusha add and fwait inc adcl rcrl int3 sub jle dec fisttpll inc mov dec fsubr xchg subb xchg sbb cmc sbb rorb bound sub scas dec in adc jge je adc (bad) pop pop fnstcw inc inc js push pop mov sub or ds add or cmp (bad) mov ss std dec adc std push jnp cmp out inc inc rclb out loop lea inc mov adc (bad) pop push rolb fdivr mov bound sub loop push cmpsl or sbb sbb inc push cld cld xchg and cld cmp cld push jecxz xor test pop mov out in pop imul or lods push gs add (bad) cmpsl fs jmp inc add mov inc pop popa dec pop das push mov addr16 cmp das or lahf mov ficompl aas fcmovb and xor lods pop fistpll lods sti jmp xor pop adc mov pop (bad) sbb mov movl sbb cmp in cwtl sub push cmp fs es sbb inc es jl add cmp push pop sbb lret push imul cmp mull mov add xor popa mov mov and inc mov jo rolb adc test cmp push dec xor cmp xor pop mov and int3 jns pop lds lret ja test bound adc lds cmc movsb push and add ret and pop dec dec cmovs dec dec (bad) dec repnz dec (bad) pop pop movsl mov or push push or test ficom dec ss inc dec xchg dec push mov inc push lcall fs xchg cmpsl (bad) jo xchg ljmp daa add rolb mov mov sbb dec adc pop loopnew lds and repz int loop lret sbb push xor loope das pop xchg iret add or aas inc aaa icebp fwait shlb dec mov addr16 sti out jl or jle es mov lock movsb adc movb dec xchg xchg mov pushl out daa sub (bad) pop cmp scas mov clc xchg clc or jmp rolb (bad) adc xor or fisub dec inc loop sub mov pop jg adc pop sub jo pusha dec fisubl outsb das dec mov std xchg adc inc xchg pop xor sbb add pop jnp mov imul scas sbb inc scas push mov in shrb add fs out dec clc sbb adc xchg jbe sbb cmpsb (bad) jns cmp fldcw cltd or adc lods insb pop mov jge test cli lods and insb popf lea cmpsb adc repz mov faddl notb cmp lea xchg es test push push pop fwait cmp and jo jne out jno je add rorl sbb call lock negb mov inc sbb push inc add pop xor cmp sbb jp frstor xchg and movups popa lods gs adc inc jl and jae sbb jl fidivr insb sbb add ja movsb jmp orb test or inc pop jo sarb int3 jne cmpl (bad) std mov mov (bad) sbb jb scas cmpsl push push xor data16 add sbb dec pop outsb add mov inc adc inc inc mov dec adc jo xor xchg cmp jb add jae divb adc shrb call fs cmc dec ljmp (bad) mov (bad) mov cmp aam aad mov jp and jmp movswl xchg add incl fldt dec pushf sbb insb insl mov push gs lea dec mov popa pop dec or push fcompl pop add and (bad) ja mov adc sub add sub test cltd dec sbb outsl imul popf in inc pop nop xorb mov pop xchg inc jbe dec mov out dec inc pop nop divb lods xor sbb popf push cld icebp xchg add push fisub callw ret push mov pop pop (bad) cmp push testb adc insb jl inc or adc aas jns popa and push adc clc sub cmp das and and wrmsr lock sbb cmp lods xor pusha inc cltd push jbe pushf insl jmp mov add subl aad insb shrl addr16 jl dec rolb loope push daa push bound lcall sub cmp pop xchg pop movsl mov mov add mov fisubrl fmul push sbb xor jo sub add fidivr sbb mov fcmovnu je jmp sbb xor outsl mov or sub push into push pop sub adc sbb cmc or jne sub wbinvd cmp inc (bad) mov xchg cmp je lahf or mov jns push mov sub push bound jnp sub inc add mov and xchg jmp sub inc sub pop add bound inc jmp sbb imul sbb leave clc hlt mov es roll rorl cmp push dec sub cs push cmp jne xor sbb in ds (bad) daa mov xchg fmull popa mov pop rcll push cmp cmpsl dec mov inc xor pop hlt je clc sbb in sbb push outsl lods ret sbb sbb lret (bad) or jne sub sub gs or cwtl outsb xchg call sbb xchg mov insb lods rcll stos icebp lock (bad) test subl popa and xor aaa lock orb jle add (bad) dec jle clc mov cwtl pop adc sbb add cmc sarl mov cmp add push (bad) xlat inc je mov jmp sbb pop add xchg pop or stc (bad) in jae push dec add mov dec add out mov xor dec add popf sub ja add xor jmp or and mov popa xchg pusha mov and mov mov sub pop pop cmp in and mov mov xor hlt fs iret xlat mov cmp jmp sub lods imul jo test cmp mov (bad) lock cmpsb js mov push mov inc cmp sub push add mov push mov fs clc xchg insb sbb sbb and jp push ja popa inc aas movsl (bad) bound adc mov fs movb dec jae cmpl cmp lret ja movsb mov les les push xchg or rcrb mov fisttpl loopne or subb lock jmp ret outsb in push int3 call adc ret add or dec or pop test leave or lods movsl adc pushaw (bad) mov pop cmp dec jmp aad hlt xchg dec dec xor mov je sbbb pushf movsl jo push push cmc and xor dec add call push dec test jp (bad) jae push pop jmp call pop xor lods subl pop (bad) mov mov and inc pop sbb out mov js mov ja cmp adc je or popf add cmp nop lock mov fmul cmp push sarb sbb mov mov hlt mov scas popf jmp fsubs or test stc mov mov daa cmp pushf xor push cmp cwtl add mov insl inc ret jne (bad) and xchg and mov add adc cmp xchg dec inc pop enter mov movsb pop or inc mov (bad) dec dec dec inc enter lcall (bad) cmc loop dec insl rcrb cmp in pop sbb xchg push or (bad) pop pop lods leave inc sbb sbb fs push xchg cs cmp and xchg dec jl pop pop jmp mov push cwtl (bad) lock rclb lea sbb jl in xor cmp xor fidivrl clc pop jb ss das mov xchg mov scas push xchg xor inc pop push rorl enter sbb cwtl daa nop bound sbb int3 cwtl pushf inc inc and add sub xorl push imull pusha push cmp or ret mov push mov and dec inc jmp nop push sbb and xor push push add lods repnz xchg rol orl and sbb lcall or sub xchg sub sbb add or cmp dec add xor or (bad) mov sub add rolb aam loope and roll or and dec push mov fs sbb sbb xor cmp push mov roll js pusha nop pusha or rolb popa test jb jmp or rcll inc adc inc add fwait mov je das js push andb push (bad) push or movsb or cli adc xchg push bound xchg mov aaa outsl or (bad) fcoms aad sbb xchg mov int orl inc add sub push mov adc and inc pop dec rorl fs push insb bound les push outsl pop mov icebp inc js mov cmp xlat cmp mov sub adc sub jl or movsb dec ret push mov ljmp xor aas aaa mov mov pop and mov adc imul inc test js jmp xor test or sbbl inc mov mov and inc jbe jne dec jns or xor and dec shrb pop fstpl addr16 fsubl adc shr pushf adc xor cmp xor and sbb or call adcb lahf inc xor or movsb call lods mov dec jo (bad) xlat xor inc adc mov mov pop fcoms or or gs popa add xorl mov nop push call and or ret pop jmp sbbb das cmp pop cwtl xchg sbb push (bad) (bad) scas cltd inc jle push and push mov push mov repz incl and popa dec cmpsb mov daa fistpl mov jg movsl lods mov bnd sbb inc lods subl sbb daa fwait mov stos sub test cmp pop jg push imul sub sti out or jb fisttpl add add sub pop insb xchg out fsts sbb add in xorl push lret or icebp mov cmp sub into lods sbb xchg mov mov jne inc sbb mov mov mov mov xor or dec pop jg movl adc mov js adc ret mov and mov and sti push test addl push bound enter icebp inc pushf add xor adc mov xchg push inc inc push lods imul mov push jbe sub jbe push xor sub mov push popf mov xor lsl pushf fdiv inc pop mov orb inc push ficom add push pusha ficomp rorl das dec jns adc roll stos imul sti mov int repz (bad) imull mov adc push jge rcll out and push shrb xor mov jo or xchg (bad) push loope xchg dec js sbb movsl and dec cmp and ljmp cwtl sub sbb jb mov xchg mov pop jp push and int out mov push cmp jae xor dec ret rcrb xchg aaa lret dec inc pop xor aaa mov xor stos fcmovnb int cmp pop pop add sti add inc ja cmpsl rclb pushf loope movsb push push add popf mov cmp jo jne int xchg mov outsl inc cwtl je js rcr jno xchg popf loop inc mov jmp arpl cli outsb ja sub mov sbb or mov sbb xchg test test or jecxz ret dec rcll and xchg xchg cmp je xor lea adc jno pop adc cmpb or je das insb movl cmp mov nop arpl jne sbb (bad) cmp xchg dec adc test and push inc push adc sub inc scas (bad) fdiv in inc push inc push dec icebp sub aas xchg pop push and sub push sbb sub and mov cmp pop pop jb or aad xor ret mov cs adc outsb dec sti inc fdivrs mov mov xor pop or or inc sub out adc push ret push xchg (bad) in std adc aam hlt xlat shlb leave pop popf pop and ret mov mov xlat dec add scas xchg in or mov imul xchg lea lock xor xchg mov pop in xchg mov cmpb push ficoml imul add (bad) xorb stc jb in sbb xchg (bad) orl or mov mov sub sbb pop popa fs bnd pusha jmp into add cmpsl add (bad) push push pop or and cmp pop mov cmpsl mov pop inc adc push pop pop xor fisubr test loope cmp popf xchg fdivl fistl add add ljmp sub aad ficompl aas cwtl jge inc add aaa (bad) adc adc dec xchg or mov xchg aam add sbb add jne adc rcl or mov ja xchg fdivrs fildl inc daa cmp dec sahf popa iret xchg adc sbb xchg xor mov rcll test ljmp pop (bad) in insl sub sbb xor dec shld inc lea leave dec sub test sub dec bound sbb rolb jb ret test xor pop or add push add popf out sbb and (bad) jne cmp sbb dec imul xor stos arpl mov mov stos and xchg (bad) and mov (bad) adc xor mov fldenv and aam sub dec jae ret push adc call jle xchg ret cmp pop mov or sti mov gs sub aas stc mov test stos xor clc sbb push and mov mov rclb jnp or dec in mov cmp add jno xor push jecxz mov xchg (bad) lea icebp jne xchg inc pop insl sub sbb movsb xor orl sub add mov inc xchg movsl inc daa fnstenv aad xchg mov ja cmp add sub test and add mov push sub cmp outsl lods add mov hlt fidivrl xchg and add push jno sub or jg jmp pusha movl insb sbb dec mov xchg mov cmp sub sar add xor push sbb insl jne or outsl mov sbb xor in sbb add xacquire movsb cmpsb cmp roll jno and rorb mov lods sbb and dec jae in test xchg decb movsb mov jg adc xchg fwait lods popa and fs sbb je xchg jno cmp or aad push adc dec adc pop mov loop xchg xor adc dec xor mov xor pop cmp setb or add addl dec xchg fisttp inc mov xor push cmp dec add xor dec rcrb mov add cmp dec mov and inc xchg xchg sbb mov pop ret jb das add data16 add nop push adc push mulb push (bad) inc adc (bad) sbb mov gs mov pop or pop cmp jae push pop loope mov pop jnp je je pop (bad) dec and (bad) es dec xchg mov inc shll mov outsb xor push notb push jns (bad) cmpsl les fidivrl movzwl push gs xchg adc sbb push (bad) iret js arpl fistpl cwtl inc xchg scas (bad) movsb or dec xchg add inc jg enter iret iret loopne sbb inc adc dec sub cmp sub adcl cmpsb sarl lock add pop fucomi adc add and add or sbb cltd add jb lock fdivl xlat and sub mov imul sbb mov mov loope jns ret cmp cmp je dec jmp cmp sub mov jae jne decl dec pop inc dec push sub or lcall ret xchg mov mov mov pushf clc test arpl sahf add and or out adc mov sti aas lea mov mov test xor inc inc lea xchg add lret or mov cwtl or adc add and and ljmp movsl jp and inc (bad) daa sbb mov inc addr16 pop adc iret push jbe or mov insl or aad imul push sbb ret or push push (bad) sbb mov push fs jo xor movsl pop call (bad) push in sarb imul xor sbb rclb push ds jl lock pop ja mov stos les and dec insb rcll or test and add xor pop or je jmp push pop out icebp inc mov xchg sbb push inc sub icebp and nop add cmpsb aas (bad) mov or or sbb and inc cli lahf mov cmpsb sbb (bad) cmpsl (bad) data16 leave or loopne out (bad) and push push mov (bad) sub ss add loopne jo mov or jno aad sti dec inc inc adc popa jge imul sub adc sub pop pusha jne xchg mov or cmp fs mov scas addb addb dec lock mov or das (bad) mov or and clc loopne or push add pop push cmc xor adc push leave shl movsb xorb xchg xchg mov pop enter xor pand mov xor test push sub mov inc sub sub dec shrb jle or lahf sub xlat cmc pop jo and std fnstenv push pop repz mov (bad) xchg dec or mov mov push shr inc cmova jle jo add sahf and push cld push nop scas add add scas add mov clc add cwtl ror pushf into xor imul loopne ja (bad) and jne mov inc jmp fldl add and mov pop sar adc cmp fldt jge mov sub shll pop sbb aam rolb and pusha add add inc jns divl aam jl loopne push jne mov into inc bound dec shr sub mov in pop faddp inc test add loop mov scas lds push fwait loope outsb call sbb lods popa dec loop jo mov cmp enter or jmp cs adc sbb pop clc sbb mov dec sub cltd rclb dec (bad) lret sub adc (bad) jo addb aas adc add xor inc sbb push mov push or jmp xchg jb push je and inc mov mov icebp aaa sbb lcall add adc and push add (bad) iret sarb mov fcmovnbe or mov add adc jo mov jp add movsb xchg or cwtl lods aas mov lea sub inc xchg pusha add in popa imul adc dec dec cmp jmp xor jmp jo,pn add push fwait (bad) (bad) shrb sbb push call mov dec mov or lea into int fsubl dec test fld xchg jl lea or xor jp ds mov and rcrb push aam js (bad) mov fcoml (bad) add mov cmpb aam pusha mov pop (bad) mov cs je xchg mov jl xor xchg xor push push push insb push jmp mov xchg push xlat or fdivrs xor jns adc add sub xor repz add mov sbb sub (bad) fdivs imul inc pop push or popa dec xchg adc pop jns fsubs xchg mov push add scas mov js xchg mov adc ss insb jo add adc (bad) imul nop popa aam sbb xchg stc add mov push add xchg jmp lods ss xchg dec push aam sbb mov mov mov add cmp das fiaddl adc xor xchg btc movsl movsb sub xchg adc negl push pop aas call test sbb gs dec sar or dec xchg outsb inc cmp je test adc lds imul push jne fwait sbb adc add mov repnz inc cmp nop push add sub dec ret inc add lret add mov aam jo in sub push insl in and fmuls mov add popa loop xchg inc je bound dec bound pop and ss and inc mov sub add mov test mov (bad) lods pushf popf or inc or jne mov es mov cmp xlat (bad) hlt cmp xor (bad) sbb stos mov adc jae or jbe push sub shrb ljmp (bad) push ret fimull adc bound std fs hlt ret cld push or push cmp xchg aam js mov dec sbb das and jne inc lret incl (bad) mov mov aas jle xor add pop cmp sub arpl push ds pop xchg cmp dec inc jne xor int adc xor adc jns jge pop scas add jbe sub pop call roll pop or mov decb imull fidiv sub rorb sbb ja cmpl sub lret dec mov add xor fimul xor or in xor add in iret mov xchg fisub cmp pop cmp mov call scas push icebp cmp jne bnd cmp jne aaa or and cmp pop das (bad) cmp pop pop mov sbb (bad) cmp or push arpl xor adc adc sub lock jae out mov adc xor sbb jg dec jl pop mov pop dec fsubrs push add xor dec add leave (bad) adc or andl mov cltd leave mov data16 mov or mov cmp pop or pop mov inc pop and jo push cmc shrb inc mov lods loopne mov mov sub lea or sub jb arpl inc push fwait rolb jmp roll and sahf xchg gs dec and or pop push in mov and pop std mov gs rolb xor xchg sbb nop cmp jg mov lods inc iret fwait sub shrl or fs push (bad) mov (bad) ja or adc mov inc pop push push dec xorl sbb movsb enter and mov test sub push cli push xlat inc rcll cltd or mov enter lock push sbb push jb push inc call (bad) in jge push xchg mov mov sti push jle and mov (bad) pop daa int3 rolb jge std or xchg stos jbe sbb add push js aam das adc xor jo dec or aaa jo dec cmp dec pop enter cld push lea shrl xchg imul adc pop or adc repnz (bad) jmp repz or shll sar mov push cmpsb and push cmp lret mov lods lods sbb mov enter (bad) loopne and out loope or xchg mov xchg dec fcomps call add xchg cs fcmovbe and adc add mov cltd test dec jo lds (bad) cmp mov sahf movsl clc add or xchg mov sub mov lods mov jb and push xor stc das or lcall lea idivl dec add sbbb or and sbb push push inc fcmovbe (bad) xor push loop sub xor mov cli in or movsl cwtl pushf in sub cmpsl and insb call xlat movsb dec call mov (bad) xchg in pusha test (bad) sub xchg xlat sbb pop les nop imul or in push jne fadds out (bad) jnp add mov add or (bad) mov mov add mov in or enter or iret xchg movsb faddp add or or sbb cmp pop andl test inc loopne (bad) sub jl and dec inc push insl mov xor cmp mov lret pusha cld push jne push lods cmp and scas mov nop cmpsl sub adc ret out push loopne push fadds test lods sbb int3 jbe cltd inc idiv jmp sbb jno sbb cmp add test inc (bad) add mov mov mov or inc lods (bad) lock cmpb imul adc test mull xchg adc test adc insl inc mov enter cs mov enter add jg or add leave inc rclb frstor xorb cmp mov add inc cwtl mov cmp (bad) jmp pop or pop sbb repz fisubl repnz and int3 aad cmp inc mov fiadd fwait out push mov out push out out xor mov dec insb bound add push xor jmp les add jle mov mov insl pop or cld aad sbb push js out ds fsub sub (bad) sahf mov out loope dec jo rcl sub xchg fdivrl inc xlat inc in add daa mov jg int3 test bound movsb int3 (bad) js movl xor xor (bad) sbb lret sbb dec sbb pop cmp inc repnz xor add mov (bad) mov push (bad) mov shlb arpl pop adc outsb insl fcoms pop adc ds (bad) dec je gs adc dec push loope sub mov and xchg adc ud1 loopne mov enter add nop adc jns cmp dec fmull push nop rcrl xchg es or pop sbb addb aaa sbb inc leave push mov sbb mov andb flds push mov pop adc (bad) lret pop ret fdivr mov pop addl adc faddp fdivrl mov (bad) and mov fildl aaa and (bad) sbb adc sub and inc sub out and es dec into push daa sub add or jl jae or (bad) jae pop adc cmp or pop inc inc xchg cmp cmp dec roll sub leave mov mov js xlat mov sub add push addl xor xchg pop push mov xor (bad) xor outsl xor pop and leave push xor or cmp cmp or cmp xor xor and xchg add xor icebp stc fsubs pop add pop mov pop mov add adcl adc jo les sbb mov mov and jne pop mov add bnd fbstp or jmp push es xchg aaa sti sub and jne divl jnp cmp cmp jne xchg dec or rol push xchg and popaw aam add into push mov icebp mov je sbb jne lahf push les scas repnz cmc add pushf sbb sub adc adc mov enter mov das mov pop and test stos and mov dec (bad) mov xor or and into push xchg out jno (bad) je xchg cmp mov mov les push sbb mov lods scas jne inc or xor push xlat push xor add xchg ficoml bound jb sti cwtl xlat pop add pop js es sub mov xlat aam mov pop ljmp mov movb push add pushf lret lahf xlat mov xchg js out add xchg push sub cvtps2pi enter inc nop leave outsl sbb dec mov subl push xor sbb test xchg cmp subl aaa das xor push roll sub rcl dec add lock pop add sbb xor cmp xchg ret movsl fsubrs jecxz add (bad) fwait xchg mov add add push push mov fnstcw push clc push cmp stc mov jle jb (bad) cmp outsb lock sub arpl sbb clc rolb (bad) sbb fisub xor fadds ffreep (bad) into ss lahf test jb inc rcr or sbb and pusha xchg imul dec or out loopne outsl sub lcall cmp mov sbb sbb inc cmpsl in xchg dec fsub xchg push bound mov scas add dec pop push sbbl xor inc stos adc and or dec (bad) sub sahf jne ss call addl insl cmp push inc sub cld adc or pop es lea add sub pop pop inc inc xchg sbb fisubr (bad) insl adc lahf pop inc mov popf mov xchg dec jae or in lock xchg dec fsubr js fdivrp add cmp add jl jae sbb fs stc repnz pop cmp mov sub jns clc add push rcr add inc (bad) lock jge cmp adc repz push xor mov or push mov lret mov lret sarb insl popl test notl and push mov or subl sarb add ds enter (bad) pop jle fldl pushf pusha push mov or xchg add fdivr in (bad) cmp aas dec bound (bad) mov push icebp call xchg jl cmp pop shlb in stos clc sti cmp sub push adc inc cmc mov push inc imul lods and mov cwtl mov push mov (bad) movsb pop lret fs sub mov pop mov inc in ret ficompl loopne sbb aam mov jle mov addr16 dec inc enter ja xor subl out mov adc inc (bad) or clc mov push loopne (bad) stos mov inc dec jle pop (bad) mov rcr xchg mov push mov in pusha inc or fwait sub outsl mov adc fsubl sub dec fldcw arpl mov add aaa or mov mov push insb sbb xor (bad) xor fsubrl out mov xor sbb orl shrl roll (bad) testl xchg mov xchg inc xor mov dec add cmp les xchg fistl nop push adc or mov push jb xor jb loope sub jno scas clc aaa push call imul add jne xor aaa xorl (bad) mov rcrb jge dec sub andl jne xchg jle test (bad) jae push cmpl ss xchg inc ja ret add lock mov subl mov and mov xor mov into hlt imul or insl jo jmp bound enter in in adc cmp stc jmp mov cmp xchg cmp push dec mov mov add je fistpll cmp lcall mov out add cmp clc and push adc sahf sub lds jne push dec je mov jge daa add fdivs xor test jle and dec dec ss pusha jne adc inc pop je adc (bad) jb jge jno or jns ret xor imul test add mov movsl mov mov lods int push arpl xchg xchg dec test stos jge sbb loop inc inc sbbl clc sub dec jbe movsb sarl and mov lods cmpsl ljmp pop dec (bad) adc or pop maxps push pop inc dec xlat mov rorl iret subl mov adc mov movhps pop lret sub (bad) jno jecxz xchg stos in inc and inc sub cmp enter cmpl in pop inc adc add sbb insl mov movsb or push push xor cmp mov mov push pop mov ljmp and and adc jl or mov push aaa inc ret sub orl jne cmp nop pop dec pop adcl dec (bad) cmp inc add jmp ja je dec jno out adc sub (bad) pop sub jmp push xor (bad) mov push sub clc lcall test inc daa inc push lds xor popa xor imull std std lock add lcall sub or lock adc mov adc push push mov sbb push add loop add sahf jmp gs bound sbb sti outsb mov inc xor dec sub add dec or mov cmp sahf hlt inc pop push xchg fimull fwait sub or sub mov adc xchg add movsb or (bad) dec or xchg cmp fwait ret test (bad) addl (bad) or pop push aaa fstpt dec (bad) jmp xor lcall mov cmpsb mov js xlat mov push aad and pop jmp pusha sub or test cmp and cmp jmp push add rorl dec pop mov sub je shlb in lcall xor mov pop cwtl mov inc dec or add movsl fstpt jne dec jmp mov dec popa leave out loop xchg in mov or mov iret daa popa loope (bad) adc jne add sub mov jnp test jg and cs cmp xchg out fdivrs pop mov add mov mov aam add cmp data16 je imul dec testb and cmp sbb xor push idivl dec push cmp in ret (bad) std testl in (bad) jae sub mov arpl mov (bad) (bad) mulb movzbl cmp icebp cmp push mov and or xor mov mov dec dec cld jbe dec mov push push dec sarl cmp jb or jbe mov mov mov adc pop lcall pusha xchg push push and ficompl inc imul pusha push pusha push clc xchg jns adc mov outsl sbb push and adc hlt pop sbb lock xor imul int faddl data16 idivb call push call inc add sub rcr test arpl adc xchg jne mov orb push ret adc popa jne imul xor dec jmp shl in xor xchg loopne sbb jecxz xchg (bad) push and mov pop or mull dec lcall or test rcrb test sub and xor pop add outsb jmp mov dec and and adc and sbb pop xchg sbb incl adc popa mov iret xchg push daa in or push mov pop dec out in sub sahf outsb in add sarb jmp inc loope xchg daa in pusha or cmp in in add push test add or cmp insb pusha add ret or pusha pop jno cs popa scas int nop fadds xchg mov mulb out mov cmpsb ja rorl mov (bad) loopne rcrl decl jmp jp (bad) and enter (bad) out add in sub adc lock xchg mov mov popf popf js jae popf cmp pop jle push xchg lahf push inc inc jmp pop inc test add inc jecxz push sbb in js bound jmp xchg notb test sbb in push sahf cmp popa sbb jg arpl ret jl inc mov dec insb comiss mov xor jmp push loope push or rcrl gs mov outsb fdivr add cld lds cmc xchg pop xchg xchg fadds cmp jae push pop mov sbb add mov lcall mov mov out pusha clc xor mov add dec hlt sub pop or enter adc int3 pop add jno lret imul inc fnstsw sahf mov cs or (bad) jp jno dec or fcmovb out jmp xor test lds mov inc aam repnz jnp sub repz hlt pop push leave add pushf sahf nop repz enter lock mov inc inc movsb mov cmp and add popa pop xchg push inc and aaa add inc or mov xchg jnp aad incl sub inc or inc or iret rorl pushf pop or cmp mov jl,pt or imul pop and and sub dec sub faddl cs or mov orb add test or cwtl mov leave push adc push xor fstps push and cs mov pop int3 jecxz sub dec adc add pop sbb cmc mov sbb int scas xchg sbb sub push pop xchg pop rolb enter mov and pop add lock xchg test inc jle add pop pop cltd and push sbb add jl sub ss xlat jb insb xchg fdivrs or movb and dec int3 sbb in rcll push orb add sub adc sub and cs or je out cmp sub or mov sub adc inc rolb add and lds cmp xor movsl mov xor icebp ss inc cmpl (bad) movsb lods mov nop cmpsl jge cmp inc push faddl je pop sbb mov jo mov into cmp push jb dec or loopne push leave cmp xlat sub jo sub ffree dec sub cmp jb aas inc jb or inc inc and push inc inc mov xor pop test outsl inc inc sbb inc push inc dec xor mov scas dec lea xor dec fdivr mov or js xchg imul add (bad) mov pushf pop pop jno push add add daa sub add es or (bad) jne inc xor dec xchg mov xchg and xchg sub das iret (bad) adc mov je lock xchg xchg dec sbb call nop stc push push cmpsl push push ret dec push and dec lea dec cmp outsl and verw mov adcl out mov aad inc je nop or add xchg xor lea xor add lock loopne mov sbb mov inc jg jg adc inc adc lods xor push xchg fsubl fcomps call xor out nop mov add test cmpsb out and mov das mov dec fmul fs xchg pop popa rolb xor pop aad adc nop jno aas int ret dec cmpl mov sbbl mov fimul adc push addr16 add imul stos jge cli sbb cwtl sbb inc int3 cltd inc movsl fnsave jne pusha int3 pop xchg pop push idivl ret inc and dec daa stc adc xor fwait out aam and mov cmp push cltd cld sti out dec int repnz jmp jecxz add test and mov add xor sbbl loope mov jl imul adc ljmp and or nop pop ja clc and (bad) movsl cwtl dec cltd adc jge adcl mov ja cmc and aas ret mov adc adc mov add or sub popf pop ret andl stos xchg (bad) (bad) repnz and push push push pop add xchg test adc adc dec xor loopne aaa sub loop add pop stc aam inc insl js arpl lret rolb test cmpsl popa push nop mov repnz push call or popa mov imul and popf fnop sub sub leave adc outsb js int3 les fisttpl dec dec fs xchg getsec adc mov cs bndldx jns xchg dec loopne mov (bad) xchg (bad) jmp cmp jne cmp lock jl push insl je in movsl jmp push or jne insb arpl pop (bad) (bad) notl lods jo cld mov push sub hlt daa ja (bad) jb cmc cmp dec aas mov jno xlat mov xor add or dec aam add mov insb sbb add popa inc fldt roll outsl imul andb sbb rclb push je mov (bad) stos addr16 adc mov adc jmp int3 add into es bound mov fidivrl add and add cmp adc mov xchg dec add sbb (bad) mov pop pushf cmp imul mov pop cwtl adcb arpl lret sub in mov jne jge mov push adc xchg js cltd pop lock ret mov gs loopne sahf (bad) je jne mov loope push daa jp aas ss cmc lret xchg rcrl lea das inc jmp dec xchg aam (bad) and dec sub sub cmpsb pop lods adc mov aaa xchg push sub popa xchg (bad) xor roll (bad) pusha sbb lret adc jmp cmpb test or sbb repnz enter and jl jbe pop mov (bad) fidivrl or inc test js jp mul mov adc arpl pushf sub push mov dec add cmp enter add popf mov andps aam les jge (bad) and inc mov jne add sub or out out adc out mov lea out xchg repnz mov aad jo (bad) loope push mov xchg (bad) nop pop (bad) int3 and cmpsl addl inc and popa and add hlt int3 pop pop dec popa mov cmp fidivr (bad) mov mull xchg push pusha enter sub or scas fsubs push into aam ja jbe xlat pop xor hlt into pusha add mov outsl ficoml adc and or and ud2 add or add inc clc add inc rolb mov or fcmovb (bad) xor cmpsl pop (bad) add add adc xor pop and and mov insb mov mov adc fnstcw mov pushf lds inc and mov xor and enter xchg xor and xchg hlt sub xor aam adc insl xor and fcomi nop xchg push lods in into push fs movsb fisubl mov insb es notb lock cmp jns push or pusha mov jmp lock jmp inc xor nop nop lea mov add mov lea mov nop xor or loopne (bad) fsubp pop out lret cmp xor push mov push call dec cld fs das sarb (bad) and cld jmp sbb outsl mov xor sub mov stos dec aad sarb stos lds mov pop dec inc dec sti jg outsl rorl inc pop aad (bad) jns fdivp rcl push sti (bad) int jo jmp and or cmp sbb std jle inc and dec dec shlb jbe popf jno inc jg xchg fs push cmp stos rcl mov cmp movsb xchg push jns lods or mov push sbb stc inc jl lds jp sub lahf imulb inc stc sub sub bnd test (bad) push xchg jno adc and movsb movsl aam (bad) sarl (bad) jae sbb push adc shrb mov test jo sbb imul (bad) sti insb shr enter mov fsts fisubl lods sti sbb lret mov push adc pop dec mov fcmovnu insb andl mov popl xchg stos in pop test cmp lret rorb js fnstcw cmpl sti lock stos shrb sub jns xchg mov jg fsubrs loopne add jle out fisttpl div and jl notl dec cwtl shlb pop cmp mul je inc pop rol jb mov fsub lods in aad jns lds sub insb push mov repnz jbe mov inc not or dec dec adc rcrb xchg lret jl adc popa mov loop xchg cmp jp loopne rol xor les out pop sub fs pop adc (bad) arpl das push es cs sahf negb fcomps stc or sti shll inc (bad) xor xor mov push sub mov mov sub movsl jmp dec or insl sti mov loopne pop insb pop clc pop mov jne rol jp lds in mov jg shld xor cli and pop outsl push jle sarb cmp xor dec ds out shlb sbb imul jp mov idivl std jp rcr (bad) xor test and adc rorb fwait mov es pop mov add or call ffreep xor or cmpsl xchg andl and cs push sub shl enter pop jne leave dec or mov js out rcrl das insl xor loope (bad) jle and sahf push dec movsb xchg jnp mov test jns jl sbb enter lea jbe ljmp fucomp (bad) or mov rol add jbe or sti push xor jb or mov jo shr sar test scas imul inc inc dec rcrb clc push je pop (bad) pop rolb sub cmp out out pusha sub xchg inc jp sbb jg push push mov pusha mov shll push jle sbb mov adc pop das cmovle jb and fidivrl repz mov or pop jo or adc cmp add shrb sub (bad) lea sub rcrb add cwtl sahf adc push sbbb ret cld sub inc mov jo inc aaa sti add dec divl (bad) jbe xor dec nop dec and rcrb xor adc movsl sbb cltd jecxz add pushf stc mov mov (bad) rep sub insb push (bad) cltd cmc or dec pop add fcmovb les or mov shlb push rcr adc and xlat xor faddl rclb mov jns inc pop adc call repz or inc rclb mov dec mov ljmp lcall stos add enter sub ljmp mov int dec push xchg mov int int (bad) sbbl rorb int (bad) mov in fbld or ret mov add call lcall test sub mov lock push (bad) stos lds cltd add xchg fldenv fildl push iret mov jns incl inc jno out push jb lods rolb pop and repz adc fdivs imul jp adc mov in insb cmp xchg roll loopne xor mov sub pop faddl out scas fldenv (bad) xor ja pusha or sub inc add addb add jne inc fs sub sbb bound push loope bound or lds fs jle sti or rorb add mov rorl fbstp addr16 inc sbb out sub dec sbb mov jecxz push (bad) xchg rclb (bad) ficompl int mov fadds inc lds push cmp sbbl (bad) xor mov js test mov jbe shrb pop int mov outsb sbb daa cmp jge loope and out rorl sahf testb sub pop mov mov insl xchg pop hlt cmp outsl les aad ret pop mov xor fmuls shrb and out pusha shlb cwtl shll stos mov lahf jbe (bad) mov mov mov jmp inc ljmp add push mov or pop sub xor sbb stos (bad) loopne dec insl sbb pop (bad) jno clc mov cli inc into cs cli sub xchg and push sbb or jbe pop mov add cmc xor inc cmp rorb pop xchg fisub adc test sbb repz imul (bad) mov jns inc or inc adc daa adc lock (bad) movsl jo or add cld jge sahf es shll jo test orl insl jo sub sbb outsl ds fistpll (bad) jo out jne dec push jbe mov xor sarl pop fildl daa push mov (bad) loope sub movsb mov sbb rcr shl push pusha or rorb pop scas cltd loopne push adc jg shl adc and loopne xlat or mov andl fs jo push loopne xchg gs jp roll mov sub jae sbb pop stc shr pop inc lods test sbb test shll and mov mov add std add add mov adc leave sbb sbb out das shrl inc jg sbb fbstp jne dec jecxz mov rorb sbb inc or scas push aam addr16 cs dec pop sarb dec andl inc and jge cmp inc test in adc (bad) mov fsubrl sub adc fcmovb jmp lahf or stos adc cmp in rcrb mov sbb sbb or rclb lret inc fs mov pop rol and (bad) mov push mov push daa cmp or or frstor jne js lods add or mov repnz aas inc data16 dec add adc mov mov test jb call sub and add adc push pusha and sub cmp std cmp mov add cmp mov (bad) cmc ja mul sar mov flds cld stos cli cmpsb sbb repnz test jmp inc push mov dec fstpl pop rorb daa ret shl (bad) adc insl xor ss das sarb aam sbb (bad) adc push gs jl inc or push or adc bound lds cmp jg pusha inc adc dec enter lock call sub pusha repz or xor sbb or lea lods sub pop cmp mov (bad) fstpt adc stos lret out cmp pop bound hlt cmp dec ds pop call xlat or (bad) xor xchg inc jae cmc jg inc iret or fdivl jb in pop jp,pt aad pop lods add lahf inc mov ret inc dec jne shrb ret pop sub push and int jo pop xchg rcl out and or xchg inc loope rclb lods jecxz pop in lret iret dec mov stos push and lods in call push dec xor pop dec sub loopne adc jge xchg dec push jg stos pop or mov sbb ret shrl std sbb inc jnp in jge mov cltd inc inc jb shll lahf jg adc mov test lods xlat pshufw ds inc lods rol sub je fsubl sub popf add adc cs pop jne jmp sbbl xchg jb push push bound jo xchg ror frstor cmp mov push xor outsb sbb fs fs dec pop or inc pop inc and icebp scas dec pop or rolb and jg dec gs roll jno fwait inc lock sbb ror mov xchg repnz sub (bad) jle cltd mov push (bad) jbe or pop cli arpl loope loopne xlat sub sarl ret (bad) xchg rcr xchg test push (bad) hlt and cmpsl ja push sbb mov pop rcrl sub cltd xor mov xchg cli (bad) repnz dec or or pop inc test fisttpl or shrb adcb (bad) lcall jo cmp fsubrs mov dec fcompl cmp negb movsl jmp adc loopne stos lea movsb inc enter test sti cs shl adc pop ffree repnz (bad) mov (bad) jg outsb sarb pop mov nop daa jg dec push cmp (bad) jae mov aas push and inc jle aas rclb faddl adc inc pop into stos repnz push test pop or pop ljmp std cmp sub shll push sarb or inc xchg mov jg cwtl jge jg sbb ja (bad) adc leave ror jbe shrl (bad) cmp push sbb ret push push cwtl les iret jns push clc and mov adc int3 fs mov mov gs fisub call sub inc mov rclb jle clc mov fistl xchg jecxz xchg cmc sarl (bad) pop je insl dec sbb cmp jl shl rorb fucomp mov nop fs sbb push ret jbe pop sub push mov jl aam cmp sbb ret cmc scas fsubs fbld stos out and jmp lea dec lds das shr gs xlat lock inc add mov jns rcr popf ja jp mov sarb push adc sub mov ds push pushf sahf movsl dec or lret cmpsb pusha jo stos jo aaa (bad) fs cmp jg rcrl jmp rcl push xchg inc jg sarl jo or xor xor sbb push int bound arpl daa (bad) cmp sub xor mov mov bound xchg lcall mov into and sbb jp jg xchg sub xlat loope ss mov sahf adc aad lods jg pop test fadds adc lds or pop mov insb adc xchg andb movsb les movsb lods (bad) in xor dec fwait or lahf mov (bad) stos (bad) adc inc in cmp xchg std mov or jno sub out test out iret adc jne fimull in pop cmp and insb andb jbe adc jecxz stos rolb pop adc jp test cmp push mov stos xor cmpsl xor xchg inc cs add add out mov rorb adc cli mov mov (bad) scas inc jg mov inc rorl cmp push out push outsb push dec int cld lret sub sbb loope sub rorb loop ss jbe ss cmp adc mov jp mov bnd cmpsl in jle xchg adcb loop outsl iret adc xchg mov pop nop inc lahf mov xchg out or loopne add mov mov out cmp ja inc in movsb xor push sbb stos push push jmp xor ffree out (bad) mov aad push ret mov adc iret jns adc lock imul loop and int3 imul mov and fmuls dec adc ja xchg inc ljmp and test mov sbb jb cmc adc pop adc stos into aam xchg lods add roll jmp mov mov xor dec lods dec into lcall sbb jmp lahf jne imul pop loopne lcall cmp push mov (bad) jns movsl cmpsb sbb pop std imul push push scas ds js mov call jo mov add fistpl ffree lret sub (bad) (bad) mov pop insb sub (bad) or cwtl pop inc mov inc inc rclb ret adc clc mov js xor lcall and sbb (bad) fwait sahf mov js (bad) call mov pusha adc xor fs rcrl and jl jmp test jae sbb outsl mov dec inc mov or test jns aam fiadd push dec jbe fst cmpsb imul jns je inc pop xor dec sbb xchg fs (bad) adc mov je sahf insb cmp ss inc loopne xchg (bad) jb cmp and loopne pushf inc (bad) add scas dec xor mov (bad) jbe ja mov xchg mov mov inc je in loop adc (bad) or adc xor cmp jnp shrl sti sbb lret mov js inc rcrb ja les rcrb imul push hlt mov (bad) mov push add xor push cld or sbb (bad) je mov cmc (bad) pusha into shrb daa xchg loope iret sar jne mov ffree or jg lods dec pop lea test pop dec jo pop dec ret jb data16 add int3 rcrb xchg les insb add mov push xor mov push jns pop andl test jmp or mov andl pop mov std mov test add mov sub push je or inc mov add adc mov mov mov xchg lret adc cld jge push out or mov aas ret jns mov dec jbe adc movswl push sub mov mov xor or mov lret lret pop push inc jle lcall (bad) subl cmpsb lret icebp repz mov push out fcmovnu xor push shlb (bad) or inc dec inc (bad) outsl icebp roll cmp shlb pop jns jbe dec clc iret push mov inc sbb scas imul je sbb rclb and adc or jne add xor out add cmp or sbb mov or mov loope push sub sub fdivr ljmp call call es adc sbb push lods fwait and movsb lret mov jl jns mov or push fdivs sub sarb push into mov call cmp mov shlb iret jmp add and mov pushf stos (bad) mov ret or mov sbb or arpl add jo mov push sbb cltd insl fistp add cmc aad cmp sub das pushf mov pushf xor add repnz jmp mov pushf or push scas sbb shll mov ljmp (bad) cli shrl jg mov cmp mov jo cld cmp inc inc testb jg mov rcrb or int mov or cwtl fisttpl push push lcall arpl add mov sub shl pop cmp icebp sbb imul les cs jg cli testl leave lods icebp sbb loopne adc ss inc insl icebp mov xor xor mov or add and ds or cmp ljmp push ret ljmp add fs sbb (bad) cmc xlat jbe mov lahf inc dec rclb add iret mov roll mov jge mov out stos jl leave outsl or mov and sarb incl (bad) out rcll add stos roll rorb sub rorl pusha mov fstl loop (bad) fdiv rolb mov pop sbb movsb aas insb cmp or xorl and or xchg mov jo xor rol lcall test pop sub jno add outsl gs les test (bad) mov cmp ja pop in inc movsb arpl fisubl sarl shld push push sub sub mov inc mov (bad) mov dec pop inc stc push lret (bad) daa loopne add hlt sbb cmc adc inc loopne hlt xor stos xchg or sub lods xor pop pop inc sbb out pushf sub or aam mov (bad) nop and dec scas and fistpl xchg rclb insl xchg inc mov in cmp xor fs out jmp mov adc push add jbe mov and lods or ss fadds sub xchg pop lock or cmp mov dec loope sub (bad) xchg scas int3 pop roll jg jae sub inc rorb cmp repz mov adc hlt fcmovnb dec shrb loop data16 add adc add adcl dec lahf push and mov insb push xor (bad) mov add add lahf push push sub mov pop jno sub hlt xchg push jb pop orb mov iret lods cmc cmp in cmp stos incb insb les jns jp lock pop jp or xchg (bad) repnz int or xchg add or push xchg iret mov rcrb out loope test jbe es xchg cmp sbb add inc inc mov and mov dec sub fadd adc cli cmp mov pop test push movsb push loopne add rol pop jge mov push mov sar leave jmp hlt dec push test js cmpsb jne jae inc adc mov xor or outsl jns sarb ret push leave (bad) sub push mov rcrb scas notl mov adc fistl pop sbb pop add je rcrb pop jmp mov rol nop sub fwait cltd push xor cs out jl scas stc call ret pop xchg xchg and dec ret fwait mov push cmp dec or rorl push stc jns out ljmp sub (bad) pop scas pop dec fidivrl rcr std xchg jg cmp ror test adc push (bad) icebp cmp or xor mov loop (bad) aaa push and dec sub loope jno imul mov mov cmpsl outsb jmp jno shrb sub jbe lock cmpsl fs decb and (bad) movsl popf in jg pop dec or pop dec pop add cwtl in adc mov imul (bad) notb rolb or lods add and and int (bad) pop mov rcl sarl dec lret add mov test push int3 push push nop push stos loope inc iret dec ucomiss ret dec les and shlb flds cs and cli bound mov mov shr cmc scas loop enter or sub pop pop or push jo push push cmp sarl jo push cmp sahf addl sarb sub add cmp push test mov outsb sub insl cmp jmp jl js add mov jne fs (bad) dec test (bad) iret aaa sub adc inc lds jno aam stos xlat or dec adc push push (bad) pop adc push popf rclb mov or xor pop mov das repz aad or push jecxz push loopne int mov cmpb lea inc pusha push in pop xor cmp mov cmp or stos add pop adc js add insl inc inc ss mov inc or inc dec hlt scas or adc shrb setae xchg idivl mov inc testl pop pop outsl push das sbb push ret les sbb es sub mov enter pop outsl adc adc mov inc out jo push leave insb enter fldlg2 jmp movsb pop cmp cmc fidivl clc or adc pusha mov sbb sbb imul xor mov stc and push xor mov push and add jnp rol movsb (bad) xor xlat fcoms pop orl cmp imul cmc mov or idiv add pop outsb test pslld dec mov push jo pop aaa mov repnz mov mov cmp mov inc lret jnp (bad) repnz or shrb mov insl lods loopne popf icebp xchg push add mov scas std sbb adc dec shlb dec in push js jecxz cwtl js lods icebp mov loope xchg pop inc bound jp jae outsb add sub ja dec adc lret sub aad add out shll cmp fcoml (bad) mov adc repnz adc sub arpl fs mov mov mov mov scas push and mov and push inc lds fildl xor rcrb fisttpll jl pop cmp mov mov jnp pop mov or daa (bad) dec or inc push xor push lea cmp or push pop js lds (bad) (bad) repnz and rcll and jle (bad) ds and xchg repz (bad) outsb adc (bad) shlb xchg push or leave roll shlb bound push scas add push call (bad) test icebp shll mov or stos cmp sub cli aad xlat iret and jne push sbb andl sbb inc or movsb outsb sub loope adc jns out jecxz cmpsl add jecxz pusha xor pop std push jmp out (bad) shr lret or pop push jle add cmp add push pop adcb or xchg cltd call jecxz (bad) mov insb ror pop insb push ret std jle aam adc xchg (bad) mov xchg mov sub cli rorl loop (bad) push xor sarb fwait mov jle pop xchg std stos push (bad) mov sbb rorb lret xchg xor push dec fdiv jb (bad) mov cli adc mov and insb test jne sahf cmc outsl roll cmp and aas xor push orl mov jmp adc bnd pop xlat jmp cmp cmp call mov mov xor shrb lock fcomp inc xchg xchg pusha jne mov insb sbb lret inc hlt js subb mov inc shl (bad) in scas mov (bad) adc cmp inc orl fmull cmp (bad) push popa and jns mov js shll cmpsl dec dec in jmp lcall push jmp add in out jae test xchg mov leave xchg lods scas pop dec or mov push mov jp rclb mov out push cmp or stos movsb pop std mov rcl xor loop add gs pop shlb mov fs pop adc test or (bad) shrl std (bad) outsb pushf inc xor jns dec push mov adcl cmp in lretw rclb xchg test out cmpsl or mov decb popl pop mov xor or pushf push mov inc inc pop ja inc jne jle xor mov inc push pop jge fdivl jno pop and push cmp fsts add lret ja aad xor cltd stc sbb loop pop push jle data16 pop test push sets stos mov sbb inc mov pop mov push xor rorb hlt das das add sbb and fmul inc push sub add dec xor jmp jmp gs aam pop mov loopne xchg inc daa mov movsl pop push clc push and and orl test jne aam sbb test imul add (bad) mov mov in rolb xor cmp xor rcr xlat inc sbb xor add (bad) aaa ret fwait push int (bad) jae shll sub inc jp and aas lea dec stos jmp adc dec outsl fildll ror push or sbb dec mov pop push imul ljmp fdivs inc ret mov addr16 push dec pop and push mov loop lahf (bad) lock pop cmpsb shll (bad) xor (bad) loopne or sbb insb inc inc fsubrs cwtl jecxz add adc test xlat bound mov or cmp cmp ret xchg movsb and or in js in addl jno or test dec jnp mov add xchg cs push jb es cmpsl or movb and fmul js pop andb add push xcrypt-ctr cmpsl sahf xor les gs jne ja jle sbbb jnp cmc out mov sarb inc mov xlat outsl sub insl stc sbb (bad) ljmp vmptrst js jns test out jae faddp jl ret cmc push lcall xor add (bad) mov inc inc loop sub sub ret add lods lods faddl or pop (bad) hlt fldl inc lds mov rorl cmp popf fldl and enter dec mov rorl adc adc cmp out (bad) mov fld jbe or dec fistl and in ret jge and add fsubs int cli in adc and lock (bad) push jg jle push cmp jle clc int3 rorl pusha mov jae lods loope inc test pop jl adc cltd adc dec xadd add shl pop xor or sub inc jg das shlb loope popa push ret loope jmp push inc fcmovb adc test or lahf lea push in (bad) sbb faddp push push xlat sbb jae (bad) loopne lahf mov xor inc xor leave jl mov rolb mov inc lock xor push cmpsb xor adc fnsave int3 dec xlat pop sbb es roll out mov add sahf hlt add imul or fidivrl jecxz push out adc out leave popa (bad) js mov (bad) in inc jg out ficomp fwait cmp adc add adc faddp (bad) mov xchg inc add incb push push pop imul sub imul mov jp mov js imul mov icebp rol jb sub mov push stos add stos dec test adc (bad) sar mov aam dec jle mov daa arpl test stos sub sbb xor push add insl es push lods stc mov jecxz inc or inc adc and scas push xchg out in and mov adc fneni(8087 xchg adc cmpsb out sub lds jo adc clc cmp outsb inc cmp or add jecxz in inc adc ret arpl xor pop sub mov ljmp scas rcrb loopne insl sahf out fist movsb (bad) rcrb jg jl roll adc mov loop movsb outsl mov jns loope rolb les xor dec inc push shr jecxz jns fs rorb pop inc pop or adcl stc lahf mov cli inc popa mov pusha or push arpl sub shr adc lret pop in and mov inc clc mov fisttp rolb pop mov mov cltd ret jge fwait mov (bad) repz ret cmp psubusb sub (bad) mov hlt test fs iret mov ret xor aam mov (bad) lret or and lret ja int3 mov mov jne inc das inc js hlt test add movsl out insb (bad) cmp mov push in cld (bad) ja or mov shlb enter add push lods adcl (bad) subb arpl cmpsb out rolb dec jecxz adc inc sahf clc sub push push push mov xchg and fnsave sarb sub xor push adc push subl pop nop adc mov push mov jne inc das or imul and pusha (bad) stos loop adc es xchg inc mov xor ds pop aad xor loopne or pop xorl icebp and data16 dec pop loopne xor in mov jmp fsubl mov loope add dec jl loop mov sbb sbb jge sbb mov (bad) mov imul inc fs data16 inc inc sub andb lea jns or cs outsb sub clc subl push mov ds mov fs xor jmp mov cmp pop movhps ffree xchg push adc (bad) mov fsts cmp leave jno dec mov sub call inc jne and push popa mov xchg shrb scas and xlat arpl gs dec jnp mov cs int3 dec cld in fsub sub ffreep adc rclb cmp push (bad) add clc shr and mov and mov adc inc aaa inc jo push jp dec cmp push pop jle sub ret pop cmp xor aad jl fbstp (bad) mov mov je or dec ljmp fisttpll push or aas jnp mov add push lds (bad) fistpll rorb js imul mov rcrb (bad) xor jo fwait movsb and loope inc sbb mov lods sub cmp pusha push imul je sbb (bad) icebp lock mov pop rorb pop sbb sbb mov repz es sbb pop inc pop fadd (bad) loop cwtl or add rclb lcall call adcb jo fstl or xchg mov fistp mov sbb cs loope out sbb cmc mov xchg cmp fwait sub add icebp or mov je inc adc fidivl push movsb push sbb dec enter js mov or pop cmp add xor pop dec mov sub jmp loope push pop mov ret mov xchg mov insb lods rorl (bad) lret adc adc mov outsl insl push inc or in cmp jo enter push rolb (bad) jae push hlt fs shrb in mov xchg in dec add rcrb push jmp mov aas push push sub arpl xchg lea xchg sbb xor fadds fnstcw stc or inc or je cld in pop sub push pop add shrb xchg enter mov test adc inc outsb shr xchg xchg lret inc and add dec sub pop adc (bad) not (bad) loope fwait sbb cmp and mov imul call inc das add inc dec (bad) adc mov ds sub jle lods fdivrs add jb shlb or test mov dec adc mov sub add add je jb test cmp cld xor add dec jne cwtl inc sbb nop or (bad) ljmp sub aaa test sub dec (bad) out roll bound ja cs mov stos mov stc (bad) call and les inc roll cwtl pusha ret mov or jns roll stos xor test js stos (bad) mov dec adc sub mov clc mov mov (bad) ror add pop aam stos adc dec test or push aad (bad) add (bad) or jo or mov idivb call dec jne lods inc ss inc loop mov (bad) jle (bad) aaa shrb rorb je jo cmpsb pop mov jo mov sbb xchg fidivr fwait pop adcl cmp pop inc xchg xor in add xchg rclb rcl pusha cmp leave mov push pop xchg sbb push scas shll pop aaa adc dec adc xor pushl lret rcrl aaa add sahf sub jp and out sbb idiv sbb jg aad dec jb mov add icebp inc dec scas ficompl popa rcr xchg xchg xchg cmpsb cltd add mov dec rorl test js rolb rorb iret push ffree sbb setnp mov icebp jb xchg clc inc adc (bad) xor lcall loop stos pop inc push js lret jp push mov sbb jne xlat shl das add aaa adc mov test pop push add mov pop pusha imul lea es adc test popa (bad) fldcw negb push loop popa test xchg push sub lcall jmp ret jg stos and pusha mov mov add add mov cld rcrb inc pop sbb xchg sahf orl out aam sub loopne insl mov inc sbb sbb sahf cli popa in fidivl stos add addr16 rclb and push rorb mov mov push cmp sahf rol push ss xor ret cltd or mulb jmp addr16 mov jle out popa aas enter es movsb gs mov dec adc dec xor jle adc xor adc pop or inc mul rol mov (bad) mov enter xchg jecxz push and or and sbb fdivl pop pop mov mov hlt xor repz arpl mov jmp ret xchg sbb in icebp std or fisub lea xchg sub stc and insb icebp and mov mov sub int3 push sbb and clc inc pop rol repnz pop icebp rol sub sub subl test and adc cwtl mov xchg clc or rcl mov cmp popf test dec sub loop inc outsb cmp cmpsl pop mov jae inc and dec std or or inc adc js loopne xchg dec mov cmp mov in dec rolb mov loope loope lea scas sub fstps and icebp rol mov sbb pop adc addb xor push xchg xchg xchg das jl jle stos push popa sbb fnstcw mov mov mov loopne,pn mov sbb out and inc ljmp icebp loopne shlb aas jae,pn add orl pop pop cli icebp mov enter repnz sti xchg in ret sub test sub subl mov fsubrs test aam (bad) fsubrs ljmp xchg cmp inc (bad) inc pop int lcall xchg (bad) rcrl adc xchg (bad) pushf adc sub test jg mov (bad) jns xchg cld inc push push dec outsl cmpsl xor push xchg les xchg dec xorl and rolb std and into mov popf leave (bad) repnz mov jg (bad) jno mov jb movsb add aam inc lods scas cmp test dec jecxz and and jno push (bad) adc pop sbb xchg orl es ss sub stos sub sarl cmp in dec cmpsl rorb inc fnstsw inc xchg lahf and lret xchg lock mov (bad) push sarl mov nop lods cmp shrl add mov xchg shlb xchg inc pushf cwtl push xchg push arpl movsl (bad) cli out cmp sahf movsb rorb outsb and push xchg leave gs fwait test mov mov lret or and inc dec aad lcall aaa add xchg mov dec scas data16 jp jmp in test xchg pop test pop js shll pop shrb dec xchg inc pop xchg (bad) mov fadds fisttp inc pop rcr cmp call popa xchg ss or adc and jl inc or jecxz loop stos sub (bad) mov rorl pop jecxz clc imul mov dec movsb jae shrb popa mov sub inc movsl into lods push xchg pushf rcl daa idivb (bad) imul cmpsl jo add dec ficoml inc adc mov loope idivb popa jo (bad) rorb imul imulb and lret mov std xor popf adc and sub (bad) jb mov or pop fcmovnbe adc (bad) mov and lods sahf pop pusha pop hlt hlt cltd xor cwtl clc jle rcr fnsave inc xchg test xor push clc inc mov push imul add xchg lcall cmp mov lock shrb push insb (bad) sarb pop mov cltd push sbb (bad) std (bad) xchg jo mov jecxz pop xor push sbb jmp sbb loop push in rol sarb loop daa roll imul pushf fdivr jbe or movsl (bad) adc sar mov push ja adc xchg out insb sbbb fadds sub mov (bad) leave addb leave dec dec pop dec shrb adc cmp daa mov aam test (bad) cmp mov and xchg sti xor scas mov push (bad) sub and pushf push add add lods les jmp dec xor fisttp ljmp inc shrb pop pop (bad) dec and dec add cmp mov xor cltd mov mov fcmovbe mov (bad) cmp inc js lods ds fs mov and or or xchg push pop sub test daa and test fs xchg movsb scas inc cld push (bad) sbb jle in cmp cld rol xchg push sbb xchg mov sbb push fwait or cmpsl in ljmp cld arpl mov aam mov (bad) (bad) jbe stos jmp outsb pop movsb cmp test stos roll push add cmpsb sahf lea mov (bad) cmp jg arpl aas lret pop rcl mov cmp pop jp jp cmc popa xchg sub fwait inc adc test jbe push add sub rcrb stos xlat pop mov xchg adc cmp ljmp sbb mov movsb ja rcr repnz out loopne test rcrl lcall mov ror cmp addr16 icebp cmp dec sub mov add xchg je cmp bound xchg lahf xlat mov push lret stos adc cmpsl sbb dec cmc negl ret orl jno (bad) cmc (bad) inc std rorb iret ret (bad) cmpsb scas adc movsb negb push or rorb pop xor pop jae icebp (bad) (bad) jo push adc pop pop popa pop push or inc les and stos cmp lock push pop sar xor sub xlat inc inc or test mov or aaa push sub adc cmp daa iret test rcll dec movsb ja rcr js add outsb sub xchg jae or out js xor xchg addr16 sbb cmp addr16 (bad) out lahf test popf push test cmp xchg cmp in in outsb xchg jmp rcrl arpl add aam sarl push sbb rcl call je rcrb pop pop add lods jne sub sub inc das loop (bad) shl pop (bad) int3 insl dec das out sbb insb (bad) xor lods push test std sarl mov cmpsl cmp xor (bad) nop and lods or pop ficompl fsub sub add incb inc push xchg ds ror aas icebp arpl stc stos jmp jge mov or aam dec adc lret es cmp les test pop hlt movl dec std sete mov loopne (bad) pop cmp mov outsb pop xchg psllq mov cltd or push inc push pusha cmp xor movsb ds xor adc nop lods adc push shr add aad nop add sbbl push lock and loope rclb cmpsb cmc mull dec pop lret clc (bad) clc add test jle mull movsl imul mov adc popf dec mov rclb push pop arpl mov jno pop sarb test mov and jge mov mov or jae cmc ss push cmc pop or inc repnz sub mov (bad) clc hlt adc movsb insl cmp adc ror (bad) xor lea inc pop sbb cltd insl cwtl xor loope lea xlat daa lock insl inc dec nop mov xor (bad) in xchg push and cmp pushf inc dec out mov sub clc xchg nop jmp int pop fcoml nop nop push icebp cltd add push push loopne cld neg pop in je nop aas push sub push push (bad) nop push insl std enter cmp push dec bound nop mov rol xor xor loopne sbb push ss clc addr16 mov adc mov (bad) (bad) lock or pop or divb in push enter cmp mov pop rolb into inc cmp jne cmp adc pusha push test das mov xchg jp pushf inc nop sbb inc and push daa nop adc inc jnp xor inc and or add mov and jmp push mov fwait aad push mov cmp ficom jb dec push xor jp fs jo lret jbe shl aaa pushf js pop inc pop js nop add push mov pop cmp mov and pop jnp scas sub into ds mov or rcrb mov pusha cmp sarl or add cmp and cmp jl fldcw push dec push mov and hlt (bad) imul pusha js sub sarl movsb inc mov sarl xchg push inc ss dec mov xor out mov or test das pop push sub dec xor js mov cmp push cld inc int3 push and push mov out mov add fcompl mov cmp repz or pop shlb repz mov in push inc inc xchg push sub push cld jo xor jns jnp mov addb mov int les jl pusha xchg xor sub int cmp mov add push in mov cmpsl mov push cwtl pop mov imul push mov push sarl push push jge sbb mov out lret lods call movsb js pusha in (bad) je push jbe push sahf push fwait int mov pop push adc in lods repnz adc xor add aam cmp dec mov xor ficomp pop pop aaa mov add or mov (bad) sbb lods mov inc in sub test add inc xor stos addb imul xor mov add fldcw pop dec call clc and lret int3 enter enter fcomp fxch (bad) (bad) loopne jecxz in pop xchg decb outsb je pop mov (bad) and and popa je xor xor insl int3 push lock xor insb rolb push adc pop (bad) ja cmp or into mov sbbb adc aaa (bad) out shl add add inc push roll inc shrl scas aas and pop or add and insb jle iret repz sub cmp dec repz repz pop fs je repz jl mov cmp mov (bad) int3 repz repz in hlt out lcall sbb out sahf and xor inc add daa mov cmpsl add add fs cmp movsb dec repnz mov jno sbb mov dec inc mov jae je inc jne bound pop call lods xchg add aaa add nop add add scas xchg rcrl and xchg lock clts decl dec popa add push adc pop or sahf push mov xabort inc cld push sbb sahf out cmp pop jo out sahf out movsb mov aam sarl hlt add adc xor out cmp call fs xor into mov sbb push push inc xor rolb (bad) pushf mov sub add add push mov push and pop gs push or popaw out icebp xchg mov jae jne sub push cmp and cmp mov add push insb aas push jl mov push incl fidiv aas adc adc aas outsl jnp mov in push clc aas push or clc xor lock (bad) sti inc mov mov bound add cmp repz mov repz bswap adc adc popf cmpsl stc cmp or sahf testl dec sbb push adc out mov jns out int3 or add sarl adc mov iret repz add push jo ds repz fistp sahf out mov push adc loope in add adc jne jns sub test add add dec lock jl roll iret xrelease push iret test cmp repz mov sahf out ficom out sub pusha insl sbb dec mov mov jbe negl fcmovbe cmp or or loop mov or pop mov jnp add cmp xor fsubrs sbbb out imul mov idivl (bad) jbe xchg int3 cmpsb data16 fsub push insl dec fldl aam loopne iret sarl clc or cmp repz push push out lcall and out sahf sub cmp add jbe,pn adcb and fildl adc bound sbb and xor idivl xchg das sti shld xchg add in or unpcklps or out prefetchw pushf pushf pushf pushf or adc lcall leave insl and rcll leave leave add nop iret repz ss push iret repz nop cwtl movsb out pop inc notl sahf out sahf jl movsb pushf xchg lods push fstpt or dec jnp call add out push push mov pop mov outsb mov xor in push out adc je cmp repz iret fsubr hlt or adc out sahf sub pop fs sahf out mov xor call rorl or mov xchg add and insl ja pop adc mov adc sub dec test lods push incl pop or add pop xchg jns test cmp repz std mov repz fdivr in clc add out sahf notl sub cmp sahf out hlt push repz repnz sahf out icebp mov pushf sahf out sahf out mov (bad) in aam sahf out in call mov and xchg mov or fdivs adc sbb cmp (bad) roll outsb into inc or or mov or iret mov inc test data16 sbb sub jne mov daa dec sbb mov sbb mov pop xor xchg add das adc enter adc aas adc pop adc mov add mov jne ret xchg add jnp outsb pop add cmp roll stc mov cmp sti cld std (bad) incb ds repz test pushf out xchg push add lahf rcll dec stos addb push cli jns pop push cmp xor or mov pushw pushf push rolb scas jbe mov xchg sbb inc idivl loopne bsf in mov jnp cli or jo or imul movsb mov jnp rorb mov mov lods push scas lods movsl fidiv jns out xchg push hlt push dec push mov inc outsb js mov sbb int3 jle push test sub mov jae pop sahf testb mov cld mov sbb data16 shr jl,pn sti or jg push dec add and jnp repz inc dec es test data16 mov push mov enter xchg inc xchg mov pop es push adc fidivr mov cs mov je inc xchg movsl (bad) sbb cmp loope adc and es jae js aam (bad) cs mov add idivl fidiv mov push in push into fadds mov mov push int3 jae pop xor cld push xor ja push mov loopne mov mov mov aaa jge dec add dec lock pop cmp movsb (bad) (bad) outsl sbb test hlt jle leave jecxz cmp outsb in push les xchg jle mov out out mov mov cs movsl mov xchg inc xchg pop mov xchg jno jle push cwtl ss ficomp daa pop les test jae repnz xor xor or loope mov (bad) iret data16 push pop addr16 mov daa adc adc out pop (bad) xchg mov or xor jae pop lods dec mov push mov push scas imul cmp xor mov call mov outsl es out frstor dec test scas xchg push jbe push int3 test jnp fbld push les in add fidivr cs inc adc test pop fbld cs adc ds scas iret call sbb xchg fidiv mov cwtl push add es fs jnp inc xor (bad) (bad) lock adc jbe enter mov xchg outsb pop insb xlat mov add inc adc or xchg mov test jo loopne add pop add or mov adc rcll add cmp inc inc push dec add mov pop dec add pop inc (bad) dec fidivr dec or pop dec pop push and jl mov push pop dec add insl out mov sbb push dec xchg imul push inc mov imul push mov push xchg dec xor or inc ja neg push push push cs and inc push negl adcl or inc sbb out imul inc dec testb push rsqrtps lock push dec or dec push dec push add add and xor inc (bad) and jmp add sub dec inc sbb push add stc mov je pop sub rolb sbb sbb add or ror xchg mov faddl cld jg clc iret leave repz push pop jmp rol and imul clts aas push or in (bad) jg add adcl (bad) test or pop jo pusha int (bad) shrb push orps leave psubb xor int add push out ficompl cmpsl loope (bad) cmp add loope lock sbb pop push (bad) aas (bad) fidivr pop andb mov iret xchg push xor call push mov pop std cmp loope ds jl (bad) push popfw out cmp jle rolb inc add jo xor jnp iret rolb mov lock xor jl push or push cltd pop xstore-rng cmpsl inc movsb (bad) jg add (bad) cmp (bad) decl jl,pn adc iret add add mov adc and out lods fldl add das aas dec pop add daa (bad) aaa fwait iret xor clc lock aas push pop clc dec add insl fstp ficom pop outsl clc (bad) sbb pusha addr16 jmp loopne pop mov lods sub mov inc nopl jo dec in ds jle add lds pop in fs adc adc out inc aas nopl aas xor add xchg push les cld push cmp mov insb push fsubrl aaa add lds lock aaa cs and iret inc fwait int (bad) jge cmp sbb push sub mov insb ss add inc addl popa push pusha xor sbb push push sbb cwtl loopne outsl aas jnp cmp jne ret roll (bad) cmpsl xor notb clc fcompl jl sbb insb ss cmp sbb or test subl jge stc mov adc push adc popf cmp add and add or add or mov mov cmp pop push ficoml subl mov daa sbb fnsave (bad) and daa and fidivr lahf and daa and iret daa push adc cmp clc dec push out int jae push mov push mov daa lret xor daa xchg jbe in or dec daa fs out fimul dec inc daa negl (bad) (bad) ja push out idivl daa clc push (bad) cmc sbb sub xchg mov dec xchg xor repnz jg daa cmovb mov xor and int3 mov inc pop daa inc push mov daa dec sub aas push xlat dec sahf cld xor mov dec sub in pop ret cmp jns dec and out fidivl push es and pop cmp push and and cmp idivl in push jmp pop push ss cmp push insl out fiadd push lret loope cmp push and push mov adc pop xchg or loop mov mov sub and inc mov pop mov div xchg in out js adc xchg inc inc inc or (bad) sbb and push pop movsb cld mov daa inc aad jns lods insb push push dec dec pop daa mov enter out in push xchg add incb cmp aas add clc daa add popa mov jecxz add inc cmp lods mov daa or popa and data16 sbb insb pop jg xor ds shll sbb out clc (bad) jae cmp lahf xor movl cmp (bad) push fcoms out fs cmp xor daa push fbld jbe cltd cmp lret ja es ljmp mov daa dec add or cmp jle xor in repz out jecxz test arpl adc fild nop in inc xchg idivl add stos movsb sub sbb jnp push repz daa xor repnz daa aas das insb jo fldenv js bound in cld ja cld push inc sub push daa xor insb ret sub call fidiv insb pop outsb data16 inc push cltd mov (bad) je push inc mov pop and je stos inc aas call mov sub pop lock or sbb dec push pop xor dec xor fildl daa mov dec stos xor ja pop and lahf jmp pop out and jne adc cmove popf jg int3 or sub adc cltd (bad) pop cmp sbb dec sbb sbb andl ja cmp and clc or jbe mov sbb xchg fcoms daa in mov pop dec xor dec xor dec daa (bad) jge mov clc dec push (bad) dec sarb dec jl inc jno xor dec rorl ja aas sbb (bad) lcall incl cmp cltd cltd call sbb ret jnp cltd and aad aas mull rcll sbb inc nop inc xchg mov in dec (bad) fadds cwtl (bad) jb or sbb sub inc es fadds or cmp push mov lahf adc xlat pushl inc pusha and cmp call es shrd push cmp push xor and fs and or rcr daa aaa out ss aaa daa and imul stos dec or aaa mull jbe daa insl mov jbe xchg lds push out lds and loop and pop jnp cs fnsave push jnp clc daa and fsubl jmp xchg add adc mov xchg and pushf aas lahf push xor aas adc popf sbb addr16 stos sub shlb invd pushf cmc jp xor cld in aas jnp js xor pop mov lock insb lret call add or orl out mov push mov sbb shl stc or idiv cmc inc mov imul shl push cmp xchg sbb mov pushf js sub (bad) (bad) (bad) call pop out fucom dec add pop dec inc ret mov jno jne xchg xchg push sbb (bad) jg (bad) call insb bound mov mov pop pushf cs (bad) fnstenv jge enter pop out (bad) ljmp (bad) jecxz lods insb cmp jo xor sbb jne in fwait std stc repnz daa aad ret mov pop mov (bad) xor mov mov pushf and das sbb sub xchg fwait mov xchg loop and or mov int lahf imul mov lds fwait popf inc jge xchg push mov jge in or dec xchg in fisttpll fnstenv push pop inc ds sbb push xchg jb cli lds jno insb mov jb mov xchg pop mov dec adc imul lret sub imul sbb jg stos xchg xchg fwait or mov mov jge cmpsb out (bad) ja push dec or cmpsb mov inc inc out mov sub ret mov jge mov shrl jge sub fbld jge cld call mov call lock int3 daa ja inc (bad) jp push int3 pop jns arpl mov ljmp (bad) jns mov pop jae popf sbb ljmp or mov int3 mov clc mov inc repz loopne cmpsb fisttp jno sbb jne out dec sbb roll ss (bad) (bad) (bad) lcall in repnz sub sbb jmp mov ds (bad) (bad) jg sarl aaa jl arpl dec stos jg in inc (bad) xor incl inc out mov mov int jae cmp xchg push inc xchg pop sbb (bad) aas bnd jo cltd data16 out jb stos pop (bad) inc cltd nop int stos mov insl pop and (bad) (bad) jmp repz out mov mov push jecxz inc sbb pop jg insl sbb (bad) mov (bad) (bad) (bad) call mov add stos and jae adc nop adc lret and mov or (bad) pushl jmp mov fcmovbe mov pop mov push fcomip mov or push and mov cmp inc xchg push addr16 (bad) lcall sbb ret cmp sbb test out push add (bad) (bad) jmp and mov in movsl push jmp out fisubl inc scas xor or (bad) add (bad) incl in adc push sbb in pop loopne aas test cmc stos mov sti icebp aaa fldl mov aad inc add ret mov mov in repnz clc fldenv incl jae test pushf scas lods dec xor lcall (bad) (bad) (bad) decl mov mov lahf push cwtl (bad) adc xchg cmp push andl pop aas aad mov lret ljmp (bad) lcall out test cld jle scas mov loopne pop ret push dec or jle (bad) (bad) inc cmpsb cmp mov test std xchg pushf icebp jns ds loopne sub test jmp decl fdivl push fcoml (bad) sbb dec adc add mov (bad) (bad) (bad) (bad) cmp nop (bad) cmp bnd aas adc pop jle jne repnz ds hlt leave pop pop out aaa rorl sub test adc cmp add mov lcall dec xor mov fldt sahf jl xorl fwait data16 inc mov out std lds pop xchg fiadd jge (bad) (bad) jg in dec pop pop ficom into stc sub ja repz dec stos cltd mov (bad) (bad) ljmp ret mov mov mov add ljmp std or out push rclb mov jns (bad) (bad) (bad) lcall repz xlat cmp loopne out adc jp cltd sarb sub cmpsb rclb (bad) (bad) jmp cltd fistpl int jno lea cmp fidivr sbb je es (bad) (bad) dec cs cld push fiadd jp jl push sbb and setb out lcall sub sbb stos call cmpsl out gs ss popf les sar (bad) (bad) push (bad) js je imulb adc inc fmuls and mov es inc leave mov ret jle add test mov or aas push jge hlt mov popf stos or hlt cld jl mov xor loop mov mov sub fnop scas xchg pop pop clc mov mov rorl lds in xchg neg push outsb adc xchg pop add ljmp call mov inc fldcw xor pop cmpsl dec (bad) lcall dec sbb pop and mov aas imul (bad) (bad) decl imul (bad) imul rcrb sbb bound push jge (bad) (bad) jg mov nop cmp mov inc fucom test and pop xchg sub ljmp or push inc push aas dec and stos stos aam lea lret jo loop jae jns popa decl imul hlt (bad) (bad) call imul sbb cmp cmp mov fbld pop jb xchg and pop xorb inc (bad) (bad) (bad) in bound jge imul movsl imul hlt inc jns movsl in sar (bad) (bad) lcall mov mov sub lea mov and into and scas les dec mov ds ror push push xlat xchg fcomps lds xorl ljmp pop loope cld pushl sbb (bad) ss dec push fucomi inc mov add dec or popf jge call clc int3 insl jle lcall out and push mov sbb bnd push xchg xchg jg jmp addr16 jmp shrb lret xchg mov dec or (bad) (bad) (bad) lcall sbb loopne icebp jmp lds cmp xchg int in fistp jo insl (bad) aas repnz adc mov (bad) jb xlat fs mov ret push xor jmp (bad) push cmp (bad) iret jbe (bad) mov call xor aas out mov sub xchg add flds mov cmpsl ret mov dec sbb mov mul pop test (bad) ljmp sti inc ret cmpsb enter repz pop push imulb fstpl dec lods into jbe xor lods jle fidivl lods fild (bad) (bad) (bad) incl (bad) sbb mov mov adc fistpl scas push push lcall (bad) call popf fsubr inc mov lock test (bad) (bad) (bad) lcall ret dec (bad) push in (bad) pop xchg sub in jg mov lods push ljmp jg (bad) push pop jno mov (bad) and push hlt dec xchg icebp mov mov push (bad) (bad) (bad) incl cmc das lock or dec fdivrl xchg cmp or xchg fidiv mov stc dec cmp in (bad) fidivl sbb mov sub dec loope lds (bad) inc test stos inc les xchg add lock scas gs out lods mov add (bad) jl in jno jmp pop sbb push (bad) (bad) (bad) aas les sbb jle popf outsl xor mov xchg xchg mov movsl (bad) cmc (bad) (bad) lcall or xor adc scas add fdivp sbb pop sub (bad) (bad) decl (bad) pop idiv loop mov (bad) in in mov push (bad) (bad) (bad) (bad) jge or add push inc scas cmp adc fs dec outsb mov popf xchg sbb (bad) jg dec or xchg add pop add andl ja or sub fwait (bad) stos jns mov pop addr16 call sbb jbe sbb sti add ss aas pop add jge fdivr (bad) (bad) decl pop mov dec jmp push mov andb addr16 xor or lahf cld (bad) lcall das shr mov imul inc mov (bad) (bad) (bad) (bad) mov imul sar je sahf cmc mov mov (bad) cld (bad) incl mov test jmp js dec je call sti mov out jnp inc jno adc push rcrb sub cmpsb mov (bad) (bad) stc pop adc insl add sub jns xor or mov lds (bad) (bad) (bad) lcall add cmc decb scas push ds popa mov imul mov or and (bad) jmp sbb int clc dec adc test and (bad) (bad) cmp jle loop rorl mov mov sbb lods iret cmp (bad) clc (bad) (bad) lcall sbb push out stos or jb jmp (bad) xor (bad) decl les addr16 fiadd push pop jmp negl jno (bad) jg call ror mov adc push aaa lcall lods int adc (bad) lcall mov aaa icebp pop xchg cmp mov sub mov nop pop (bad) (bad) (bad) decl ds sub fs mov popa pop sbb into push add (bad) lcall stc cmpsl in mov lret push loopnew ret shr int3 cwtl repnz and push pop or pushl popa dec lcall sbb fwait inc pop jge neg lock leave fwait mov aas ja sub jge leave inc ja push (bad) (bad) (bad) lcall fstp sbb xchg xchg sti ret adc pop shrl das nop divb aad (bad) jbe in decl aas mov jge jne fdivs jae mov and dec add (bad) ljmp or aaa add mull ret rorb test xchg sbb fistpl pop jg (bad) push addl in dec or push sbb enter pop lcall adc cmp mov leave insl fwait mov sub xorb push pushf push lods xlat or push arpl push push sbb ja roll mov xchg push das adc (bad) (bad) call pop mov roll hlt mov std xchg inc dec push lods sub fisttpll and incl add rclb enter and nop cmp (bad) (bad) aas sti jbe (bad) jp xor ficoml cmp inc test pop aaa data16 push fdivr inc (bad) incl mov enter vmptrld or xor push (bad) dec orb mov or outsl mov push sahf adc inc mov fwait sar std pop mov mov icebp movsb inc xchg fisttp sub call jecxz cmp mov (bad) fmull decl out lcall inc push xor sbbb (bad) decl leave sarb or dec mov pop push dec pop and in fimull add daa sti (bad) in outsl clc inc mov rorb mov icebp (bad) aam cmp (bad) jmp jmp xor pop sbb xor mov mov jbe leave dec movsl (bad) (bad) jmp cs pop push fcoml push adc std (bad) testb (bad) dec enter mov cmp pop add lea xchg jecxz fadds cmc adc test rcrl pop push fidivr into jge pop xchg (bad) jg mov cmpsb dec movsl aad mov test inc outsb pop bound (bad) (bad) jmp ret int push rolb scas xor icebp push loopne icebp or std pop sbb stos clc jle jl and (bad) (bad) (bad) inc lock int xor getsec jle adc cmpsb cmp arpl sahf push push iret repnz (bad) (bad) in dec mov inc icebp mov (bad) cmp jns adc jae (bad) (bad) (bad) aas push dec cmpsb xchg aaa mov pop popf push mov lods cmp ja aaa mov add (bad) incl sbb js or push push mull cltd (bad) xchg or addr16 push dec int add push incl out ljmp out push xor (bad) (bad) (bad) (bad) (bad) mov dec dec and mov sub sub pop push sti or jecxz decl fiaddl hlt push cmp adc mov pop (bad) (bad) (bad) call dec dec sti push add pop ljmp pop sbb pop or leave xor push mov (bad) jg pop mov dec xchg inc jne inc xor fsubrs int3 idivl pop hlt (bad) call adc cld repnz cmpsb loope popa inc insl mov mov lahf inc call jb pushf xchg hlt repz or cmpsl ret decl add in repz jge cmp mov mov mov sbb sub icebp lcall fcomps add adc jge (bad) (bad) ljmp adc mov andb mov xchg adc cs dec cwtl stos (bad) (bad) (bad) ljmp (bad) ljmp xchg mov cli sahf cltd dec sub mov (bad) cmp xor mov mov sub cmpsb cmp mov loop dec mov cmp stos jg (bad) out movsb insb pop cmp lahf mov pop (bad) inc cld jne push push add cmp sub pusha popf pusha push cmpsb push push popf test inc xor xor aas repnz push xacquire imul hlt push aam or mov (bad) faddl scas add cld aam stos jno (bad) (bad) call pop lret push adc mov cli xchg icebp dec sarl lods out cld call lahf inc jg or jle mov stos mov daa xchg call fisubrl out clc (bad) incl sbb ljmp lret mov insb dec cwtl out cwtl jo (bad) fcos incl or sarb jge,pn out cltd test mov dec int3 ljmp pop dec popf (bad) mov add adcl xlat loop cmpsl outsl cmpl mov dec insb mov out (bad) out add and out mov (bad) (bad) (bad) dec loop arpl jno cmp jecxz divl jle dec jmp pop xor out fbld add loopne or jl mov jmp cmp mov js roll cld add push adc inc inc and ljmp (bad) aaa fucompp fdiv int inc pop push xchg fimul add fisubl (bad) (bad) jg (bad) mov sarb cmc jge clc js add imul and (bad) incl iret stc inc push mov sub adc (bad) jae and push pop or (bad) jmp xchg nop es sahf (bad) jge xchg cmpsb jnp mov mov jg inc (bad) jbe xor cmc mov dec xor adc leave add push (bad) decl or ja mov xor fild dec push cmp cmp (bad) jg pop mov xchg int pop jb and and aam scas loope sbb mov jp (bad) mov lds add shrl sti call lds (bad) aas aaa popf lea push (bad) data16 adc std push sub mov (bad) (bad) call (bad) loopne cwtl mov pop pop inc sub stc adc je adc or push xchg in mov in push push popa roll xchg pop jne std mov pop xor jg decl sub outsl lcall sbb mov test dec mov jae test or call sbb clc std mov decl addr16 and mov mov imul push lcall jb xchg imulb xchg nop jmp mov push (bad) (bad) lcall aad jbe clc dec jns cmp stc gs pop mov fcompl fcmovnu or hlt mov gs fildl jge pop fdiv das xchg mov dec jns xchg (bad) in add popf imul clc pushl jle mov adc inc das in popf jmp jne (bad) jg (bad) jnp (bad) mov int or loop and test jo mov imul sub cmp (bad) and (bad) jb pusha xor scas scas (bad) xchg int3 decl (bad) ljmp (bad) sbb or xchg inc mov (bad) (bad) (bad) incl rorl nop adcb inc push mov mov fsub leave inc lods call mov stc aas repnz (bad) mov jl pop lret clc in xor push push fisubl cmpsl hlt pop lock (bad) fistl mov (bad) xchg push cmpsl lds fcomp (bad) mov mov std fstpt push mov cmp aas xchg (bad) lcall pop dec cmp into sbb leave jl mov (bad) (bad) js add lea rolb xlat dec jmp popf jle cs mov pop and adc idivb and jle (bad) (bad) (bad) (bad) pushl xor test test ljmp or xchg cs test mov and (bad) pushl mov pop ret mov repz cmp cmc pusha or pop (bad) (bad) (bad) pushl movsb (bad) mov loope aad sub sub lcall mov xchg sbb mov (bad) ljmp cli sub adc dec call or pop dec in (bad) jg jmp int3 mov (bad) mov sbb inc push xchg dec pop insb cmp cmp fcos (bad) ljmp mov aad imul mov mov lahf jo loopne sbb or jge mov pushl adc dec xchg mulb cmpsl fmuls outsl test cld cmp sub cld push std (bad) (bad) call imul mov scas cmpsl cld sbb jp in xchg ret xor mov lods cmp (bad) lcall push lods stos xchg ss in pusha push dec (bad) hlt insl sti test mov jns xor (bad) (bad) ljmp scas lea pop xor sbb shl lcall mov call outsb popf imul xor adc jle (bad) (bad) (bad) lcall decb loopne sub js mov dec ficomp or outsb fimul and mov (bad) ficompl push or jns js mov cmp aaa and sub mov sbb movsl sahf cmpsb and xchg pop mov pushl jmp jecxz xchg xchg sbb jecxz jo push add je inc mov lock mov cmpsb or xchg inc pop (bad) js add dec lret mov insl andl adc stc ret das outsb adc (bad) (bad) call loopne jo aam loopne mov cmc cmp mov dec adc mov call mov outsb mov test outsl jmp imul in cmp xor cmc fmull xchg xchg stos insb mov lahf aad mov xchg (bad) xchg (bad) cli cmp add rcrb and xlat jle inc pop insl push jae clc mov roll push or inc out test cmpsl clc and adc push cmp or decl adc jmp push xor jle (bad) cmp pop out jo pop repnz aas sti (bad) js and mov sbb das (bad) sti jge gs daa int3 pusha ds add (bad) (bad) jmp (bad) repnz adc cmp and and enter rol cmpsl dec subb in jb cmp xchg (bad) (bad) (bad) (bad) cmp push imul imull gs das ret xchg loop repnz cmp repz (bad) jmp lahf cld (bad) dec pop shrb js mov pop xchg (bad) mov jmp sbb (bad) (bad) lcall in stos divps add mov sbb lds jg shll xor xchg gs push lea pop (bad) jmp add movsl pop daa add adc bound stos mov lds call repnz push pop xchg mov jne lahf std (bad) call pop arpl call mov push jg push pop mov xchg (bad) (bad) lcall in push adc add pop dec jo mov mov jb jb xchg loop sbbb lcall jg mov mov cltd lds xchg in pop fs pop add (bad) (bad) incl jne xor rolb test data16 das mov pusha mov cmp cmp mov dec mov lods cwtl leave mov divb (bad) call ss pop enter inc xchg jmp incb jae or dec sbb mov stc (bad) lcall fild sbb cld mov dec add mov (bad) (bad) (bad) lcall mov jns xor in jnp inc or sbb push xchg mov inc fstl (bad) pop test mov sub bound pusha clc stos dec sub jne (bad) dec inc mov ret ljmp outsl movsl pop cwtl decl fcoms adc (bad) (bad) decl mov in outsb jp mov inc or pop sarl out clc in pop negb jg or dec call (bad) (bad) (bad) call loop or int3 push or inc movsb xchg mov dec sub sbb or adc dec (bad) jbe arpl loopne sti cmp dec sbb incl lods jae sti aas dec arpl mov (bad) (bad) (bad) (bad) out mov push and add xchg push inc pop pop std rorl push dec mov lahf cld push (bad) stos cmp jmp lret xchg adc addr16 cmp and push test xor loopne decl btcl aam loopne or adc dec adc icebp incl cmp ss and mov xchg sub pushl testl mov cltd sub xchg xchg movsb and xchg (bad) ljmp je stc push dec es fiadd lcall (bad) lcall outsl add test int pop ds stc jmp (bad) cmp (bad) fcomip imul cmp or test dec cmp (bad) (bad) decl pop mov bound jno pop test sub out clc aaa cld lcall aaa popa (bad) adc mov xor adc out mov mov jno imul addl push mov adc mov and xor add inc xchg jo dec sub jge sub mov dec sqrtps push std inc pop cwtl inc out xor je jge xchg xor incb push (bad) jmp push in es cmpsb push nop lcall imul pop push dec xor into mov cmpsb lret mov add jmp cmp outsl outsb jle push (bad) lods sub call or mov cmc mov jo inc push mov sbb arpl int xchg or loope (bad) fcmovnb dec pop pop icebp (bad) incl jmp add js inc clc fidivr xchg mov jl inc subb or push ds pop add pop inc xor (bad) (bad) (bad) cmp sbb adc inc aad or push add xor (bad) call cld jle xor icebp rcll mov sbb faddl xor incl pop inc out inc sbbb aad jecxz lahf adc push cld decl pop or add mull push ljmp mov testb push dec mov (bad) call insl or (bad) fisttpl (bad) scas mov aad cmc adc inc data16 bt repnz decl push loopne lods push push cmpsb or mov jecxz loop xchg (bad) (bad) (bad) decl cmp ss push imul sub pop (bad) add gs popa in rorb (bad) mov cmc call pop pop xchg std adc loope stos push outsl jbe cmpsb outsl jge or (bad) jg pushl xor adc in test fcompl icebp out mov (bad) mov add or xor in int xchg ja nop add dec out ljmp push cli sahf fdivl inc aas lds xchg mov loope (bad) (bad) (bad) (bad) dec popf fnstcw xchg fisttp mov popa mov mov adc mov cmp xchg call and push sbb movsb jae mov mov cwtl and mov (bad) (bad) cmp ljmp ret call or rol cmp cmp jp pop hlt stos and jmp imul jb inc addr16 (bad) (bad) ljmp mov cwtl dec aam daa and sub dec jp mov sbb add in clc adc mov pop and (bad) cmp outsb mov and ret repz cwtl int clc iret mov add hlt enter aas stc (bad) (bad) cmp sub aas push cmc pop cmc sbb inc dec push es lock cld (bad) incl sar add lcall insl or cmpl (bad) cli testb cmp push mov dec push cmp mov add add dec dec icebp cmp mov repnz test and lcall jp ja mov mov jbe fldt lock push cmc fild lret pushf xchg gs mov (bad) (bad) (bad) jg pop scas add cmpb mov mov mov fistp cwtl mov pushl stc cli or nop loope imul inc dec dec adcl incl mov pop adc lods push sub data16 cmpl (bad) decl mov ss jnp sbb gs mov pop mov cld add xchg xor sbb dec pushl or gs jne,pn cwtl xor mov lock (bad) jns inc fld int3 xchg sub mov imul shl (bad) mov cmp inc repz bound rolb test ja icebp (bad) (bad) mov xchg xor push cmp xchg push (bad) xor mov push (bad) call fisttp push push xchg popa sahf push or stc test sbb sbb (bad) decl or mov sub cmp ss cmp call repz push inc mov decl repnz outsb lret call push ret mov clc mov insl xor fwait pushf repnz mov ja call das pushl push lds imul stc jmp outsl push mov outsl xor jns scas (bad) jnp ret or or (bad) (bad) call pmullw repnz pop mov or test lret cli mov and mov jg push (bad) lret sti adc jl sahf in jp lret jge cwtl iret cli loope dec insb sar (bad) decl mov dec xor stos sub adc pusha inc fisttpll bound or idivl inc cltd icebp mov pop cltd in and into dec cmp ss mov cld repz lods fwait add pop xorl repz pop mov dec out shr lcall aas sarl jns loopne jb in xchg xor mov outsb test dec repnz ljmp mov dec sbb mov shll jmp mov cmp stos aaa lods sbb jmp cld sbb jno icebp mov int into ljmp xor inc and fsub loope add flds sub pop (bad) jg iret jge lret aam dec insb in (bad) out daa cs sbb (bad) (bad) (bad) fbld lock movsb subb pusha jp xchg mov inc stos mov out (bad) decl mov xor mov or dec stos inc out movsb push insb fwait (bad) xchg imulb sbb hlt in dec push aas sub ret fcompl cmpsl in loopne hlt or add push dec scas and sarl inc jl (bad) mov xchg call out xor ljmp dec (bad) (bad) mov mov fdivr jns lea ficoml push pop (bad) (bad) (bad) (bad) cmp ret aam jg jns mov lret inc xchg pop xlat call stc jb enter js adc sti (bad) and push leave insb aam cld sbb xchg decl add or fisubr cli fsts in es out pop (bad) xor neg lock lret popf sbb aad hlt mov js jge (bad) (bad) jg or in or sub pop pop push push mov fmull adc pop repnz cmp fwait inc lock add mov ret fdivl pop ret inc addb ss mov std dec js and lods pop mov jecxz jl (bad) in (bad) mov (bad) dec cmp jle inc test sbb popf nop das or lahf std sub fnstsw xor pop mov (bad) (bad) (bad) mov push xor cld xorb xor in ret arpl sbb (bad) decb jge,pt pop (bad) cmp cmp jmp lahf sub je mov (bad) (bad) (bad) mov js jp,pn push or xor rorb xor mov in ljmp (bad) ljmp ja test push or lcall xchg dec xchg outsl pusha push jbe sub fiadd test scas mov popa mov xchg cmc test mov dec xchg aaa sub sub adc (bad) dec dec cwtl test test gs sbb in sbb outsb mov aad mov (bad) (bad) fnstenv push int ss jp or adc dec adc mov repz (bad) (bad) decl pushl push mov cmpsl repz pop and cmp cmp mov mov push push les inc stos test aas sti decl lret fyl2x push insb lock mov out stos aam adc mov fcoml fimul cli aad add fild sbb mov and ja or sbb lock jge or lock (bad) call pushf pop (bad) sbb mov mov and dec jecxz je aad mov nop jg jg inc pop (bad) xor mov rorl cs aaa (bad) sbb fbstp (bad) enter mov jecxz or mov jmp movb add add cmp push cmpsb fistl std (bad) lcall jl dec aas fcompl push sbb jmp imul (bad) (bad) out cli xlat push push prefetch or inc test sub cli pop imul enter rclb cmpsb (bad) (bad) call lcall add xchg pushw imul cmp (bad) outsb dec sbb mov outsb (bad) push hlt sbb stos xchg (bad) (bad) (bad) dec dec hlt scas pop pop mov cli lds mov cmp ret mov fldenv (bad) lcall fnstsw loopne add hlt mov gs mov (bad) (bad) (bad) (bad) js inc pop gs sbb or daa mov in mov push pop in aaa cld (bad) cld push jnp cmc shll stos or pop int3 and in xchg ljmp clc call insb rolb xor pop mov add pop test imul addr16 dec push push and add rcll dec nop or (bad) (bad) (bad) pushl pop hlt in test inc imul sub jmp outsb push sub or incl jmp lds cmpb (bad) (bad) jmp repz insl xchg movsb lock fs es (bad) jle dec int3 inc pop stc mov (bad) (bad) cmp in add pop popf cmp jecxz outsb or dec addr16 mov (bad) (bad) mov ds mov inc add mov inc adc (bad) mov xchg int3 sbb mov push pop std lea sub lock mov jge aam push dec int ror or and movsl inc jmp (bad) (bad) pushl (bad) repnz dec push rcl xor in pop insl mov xor mov inc clc jecxz leave sbb cmovo insb mov imul mov adcl leave lds lcall xor gs cwtl or in mov cmc push fs (bad) aas ret mov xlat clc stos fistp lahf mov push cmc lods (bad) (bad) (bad) incl mov out mov stc mov popf mov and xchg xchg cmc (bad) jg xor popf xor pop rcrl xor (bad) (bad) lcall les sbb pop and das mov pop data16 add push mov xor pop mov mov dec repnz test push repz sarb notl jle push (bad) (bad) (bad) incl rcrb push pushf loope pop lock push add dec and sub movsb push scas (bad) jmp add subb aas lods mov lods in iret cmp (bad) mov add pop lock orb push mov stos adc push (bad) mov ja jmp or mov pop jp pop jne push add je outsb (bad) lcall rorl inc push negl push dec (bad) (bad) int ljmp jae rorb cmp push enter sub inc mov call in push and in push adc idiv mov push daa xor outsb das xchg xchg mov dec add jmp add push cmpsb cmp mov lcall arpl inc leave shll sarb cld (bad) mov adc (bad) les jmp and (bad) (bad) jg inc jbe dec jo in cmp das sbb cltd jo mov cmp dec stos data16 cmp lods inc scas les cld (bad) mov je test pop ds (bad) (bad) (bad) ljmp das sub or (bad) sbb dec fstpt push stc (bad) (bad) (bad) flds int3 xchg sub mov add pushf push out (bad) cmp lret push pop ljmp pop lret ud2 stc rcrb cmp push loop xor sub xor (bad) (bad) call popf xor mov push mov int iret push or jbe add dec sar (bad) (bad) (bad) dec cmp mov test pop sti fcomi jb subb in addr16 jmp (bad) (bad) lcall sbb dec fnop std jp ss in (bad) (bad) decl push fcmovnb loop pop ss lods jge push add sarb cmp mov dec sbb jecxz or ja inc cwtl loop mov shrl xorl repnz (bad) call testl sub push dec sbb enter (bad) call in mov pop sbb imul lods adc ja jbe,pn loop popa push test sub jge addr16 dec clc imul js ret mov out sbb cmp cmc scas leave mov mov dec retw xchg decl jb xchg mov imul (bad) lcall pop (bad) xchg decl jge lea or ret sbb (bad) mov cmp into cs popa pop (bad) xor lcall (bad) (bad) (bad) (bad) cmp pop inc aaa repnz sub inc xor into shrb hlt in loopne (bad) (bad) fcoms add fisubr data16 mov or jo je (bad) (bad) call in in aam lods out mov adc outsl push dec ds out pushf inc mov enter clc incl xor or adc loop xchg inc mov and popf movsb lock (bad) (bad) (bad) decl cmc popa dec xchg aas sbb mov adc xlat jnp insl inc movsl add lret and mov pusha mov add fidiv push sbb enter xlat shr (bad) (bad) jg dec lds inc sbb mov sub mov mov into jns cld (bad) (bad) (bad) jns call jmp test stos call dec bnd fsubs xchg mov jmp decb rcll lock out mov cs or (bad) jle negl push (bad) in lock (bad) mov pop mov (bad) sub or movl insl adc (bad) (bad) lcall push xor in ret mov xchg or jecxz out int3 mov sbb xor (bad) call inc loop sbb and (bad) sti jp dec repz movsl (bad) (bad) (bad) ljmp sbb inc xchg (bad) out mov cltd pop mov fimull repz mov push push ljmp iret ss fldl fildl jmp jg pop mov inc mov loop les stos outsb mov adc enter (bad) incl stc scas cs loop adc scas inc out pop repnz clc inc nop sbb push (bad) call jmp inc shr mov jp jns cli (bad) lahf fdivs push adc or mov push movsb or mov xchg xchg jbe fidivrl push sti test scas (bad) (bad) (bad) call push add push fldln2 xchg cmp xor xchg adc gs jge popf xlat sbb adc mov sub aad roll out pop cld ret mov and xlat jl xchg pop mov mov std (bad) (bad) jmp pusha or aad repnz dec mov cli pop sub xchg (bad) (bad) call js cmp call cmp mov mov (bad) (bad) (bad) jle mov mov cltd loop dec les xchg push (bad) xchg dec dec cmpsb pop push add icebp adc xchg loopne (bad) (bad) mov pop cmpsb sbb stos pop push push es (bad) xor xor (bad) or inc mov jg mov mov (bad) (bad) (bad) pushl (bad) pop sub out mov js mov inc xchg cmp outsb xlat loopne std (bad) incl adc jmp shlb xchg imul add ds xchg (bad) mov int (bad) (bad) push leave iret cmp and mov push ss jecxz ljmp aam les call jecxz and jnp mov inc gs icebp cmc (bad) (bad) (bad) (bad) mov sbb inc pop or pop in mov test int aaa aaa jbe xchg popa jecxz lcall scas mov sbb mov lcall cmp jns add jecxz test (bad) jmp ja xchg mov adc push or in mov call aas out (bad) jg dec adc mov mov sub sbb out (bad) mov dec jmp (bad) jbe sub test jb loope pop sbb sub add xor sub jg dec mov lcall loop jmp mov inc out dec lods mov call push xor sub xbegin adc mov jle add push out lds adc cmp inc (bad) movsb push cwtl push into sahf inc adc push push cld dec cmp or lods fcoml loopne push lods out cmpb hlt xchg push sbb mov inc out clc pop std lock js mov cmc add fsubp in insl or (bad) jno push push and inc sbbl inc loope pop popf cmp (bad) mov mov sar (bad) pushl jmp jecxz push cmp adc shll cltd imul imull (bad) mov enter sub mov test mov or cld mov insb (bad) dec xor xor (bad) test xchg xchg dec and out push push sbb xchg and in rcl je lods clc incl xor sbb insb mov cmp jle or loopne (bad) ljmp in sub and pusha mov add jg aas rcr imul es mov ret data16 cltd ret aad mov shll push (bad) push lods cmc repz loopne dec fs or xchg xchg test xchg hlt cmp (bad) (bad) lcall inc push jl jno jnp fmuls call addl lahf (bad) addr16 (bad) lcall fidivrl cs fs insl mov daa inc in (bad) in call add popf cmp jmp roll and mov (bad) call mov cs inc cmp pop cltd daa sahf pop adc cmpsb mov (bad) (bad) (bad) (bad) ljmp mov xchg push sub xchg data16 sub movsb adc int das pop orb fs ss fucomip clc fidiv inc (bad) mov jp sti mov push mov mov push cmp pushl xchg arpl dec lods cwtl iret sub pop and jp or jecxz and push out cmpsl lock aas cltd cmp es pop push movsb jmp call (bad) (bad) pushl sbb out xchg shlb adc int3 insl jne,pn ret jb lods mov test jno insl ljmp mov incl jl test pushf test (bad) mov add mov dec outsb cmpsl addr16 jecxz imul (bad) (bad) incl add arpl pop jae hlt adc inc popa jns fimul jno mov mulb push mov jbe ljmp jmp int stos das cmp ljmp jecxz sbb or ret scas in (bad) (bad) lcall lock inc loopne stos incb std jg (bad) sub outsl lret outsb nop inc iret cmp lcall sbb xchg push add sub and adc cmp xchg add xchg or add adc fwait js add mov push xor (bad) (bad) mov fldenv cmp fstpt ja inc lea sbb push subb and (bad) (bad) (bad) jg setl test dec pop push movsl ss mov stc fmuls or mov xchg (bad) (bad) aas bnd stos (bad) stc xchg sar (bad) scas (bad) or cmp (bad) (bad) (bad) (bad) cmp cmpsb fcomps mov loopne xor jmp in popa xor (bad) (bad) push test xor lret inc (bad) jmp repnz jns push add test ss xlat pop es mov (bad) mov hlt inc (bad) clc aas lcall and adc dec mov imull xorb xchg call (bad) call xchg jge sub mov daa mov pop mov xchg stos add decl sarl stos xchg (bad) dec dec dec push insl adc sub xchg add aaa cmp popf adc push pop push cmp and hlt inc call xor add inc (bad) lcall stos xchg cwtl sti mov mov mov xchg in xchg sbb in je (bad) (bad) (bad) mov inc mov mov xchg xchg jle mov push add fbstp pop sar int cmp cmc lcall sub (bad) (bad) aas mov adcl iret jp jecxz into rorb fnstsw jecxz or pop mov and out (bad) call clc incl mov ljmp xor sub push scas cmc in pop rclb pop std scas movsl cmc xor jbe jno push push stos cmpsb decb cmp mov das adc pop (bad) jbe inc jno sbb sbb ss (bad) call pop loope cmp jge push mov mov adc mov out pop lods mov sbb (bad) jmp and icebp cs cld dec outsb std mov jbe (bad) dec push jmp sbb jge or fcomp imul (bad) (bad) (bad) (bad) incl fwait mov mov sub in les stos xchg stc shrl cmp mov (bad) (bad) incl movsb fldenv in and cmc dec and cli mov js xchg ret mov pop sti ljmp repnz ret dec jb out icebp jp pop in notb add iret mov (bad) hlt sahf mov push cmp (bad) (bad) cmp test cmp (bad) out add fsubrl (bad) jmp (bad) ss data16 cmc mov mov (bad) (bad) jg out popf (bad) add mov mov pop dec mov test repnz (bad) incl inc in popf pop gs insb int repz ds add loopne sbb bound or imul push adc mov jb mov clc lcall mov push lods push test int mov les inc mov (bad) call popf dec incl and paddusb in loopne adc mov ret sbb cmpsb push imul cli jo mov mov aaa std inc push cmp fistl nop sub aam rcrb dec sub loopne ret (bad) (bad) (bad) std mov and jb lods ficomp sbb (bad) lds push rolb (bad) jg add mov movsl (bad) sub aad fucomp ljmp movsb int3 decl sbb ljmp das sbb pop sbb mov dec (bad) sub cmp loop push nop push dec push sub adc add pusha (bad) (bad) (bad) call push popa dec jne xchg (bad) sub cmp fidiv or push test mov lret mov ljmp (bad) and fistpl mov int mov ds (bad) (bad) jmp adc cwtl test add inc add lahf sbb sbb lret js mov add cmp (bad) call cli or mov fcomp or (bad) pop mov push push dec (bad) (bad) (bad) pushl lcall lods push jo mov xlat fstpl lret hlt mov cli inc stos ret sub lea lds cmpsb loopne insl stos icebp xor aad leave jbe adc das cli inc sub cmpsb sbb imul movsb lahf xor push push adc (bad) (bad) (bad) jmp out call mov adc dec mov aaa les divl in (bad) jmp xor dec mov loopne movsl jmp mov ds push sub (bad) (bad) decl roll pop sub cli out (bad) frstor jae mov (bad) in mov push or add in or (bad) daa mov decb add lret dec (bad) mov movsl int3 bound loop jb (bad) fcomip sub mov lock imul add (bad) (bad) dec jge fdivrl adc xor (bad) aas jno and bound or jmp add jp pop mov fs inc (bad) (bad) in dec adc int dec jp fiaddl xor xchg sbb add (bad) decl adc jmp fwait jnp in mov lock push cld lcall and test and lret (bad) and (bad) mov jecxz jb pop cmp mov imul stc pop test lods cmpsb xchg lock nop mov addr16 adc daa adc (bad) lcall cmc stos cmp popf ret (bad) jp fmull mov jmp sbb lret mov aam (bad) ljmp mov and mov mov jo inc mov rcll lcall lds sbb push or (bad) clc lcall pop ja jno dec jle lods or mov stos adc (bad) outsb loopne (bad) cmp mov in cmpl cmpsb (bad) jg dec sub popf es push xor pop xchg iret das lret fdivp xchg lock ret pop jbe mov mov call stos pop stos aas fwait lods mov movsb fild push (bad) (bad) lcall mov inc in sbb cmpsb xor xor jge mov decl cwtl dec int3 lret jbe xor push or fcomip adc mov (bad) push aaa sbb xor (bad) ljmp sbb mov sbb mov (bad) cmp xchg fucom pop repnz lods inc call call jmp inc add popf jns or mov (bad) (bad) inc repz (bad) js add xor call mov gs flds sahf fsub fcomip (bad) mov fdiv ror adc pop inc stos push mov mov (bad) pushl xchg push or jns inc lds (bad) lds push (bad) (bad) (bad) jmp mov xor cli stos daa xchg (bad) fs mov mov rol jp (bad) (bad) call (bad) ljmp or mov sub loop (bad) (bad) decl cmp sub (bad) (bad) xor add or ret fnclex and sub pop (bad) (bad) dec inc or lret shll lahf cli cmpsb mov mov and and clc (bad) ljmp clc xlat fsubr sub rcll mov mov mov decl xchg popf adc mov das popf stos push push aad lcall mov stc outsb inc mov enter push or stos push inc fdivrs fmull xchg (bad) dec (bad) sti int scas std jnp adc jb jne mov cmp lcall iret addl addl sbb pop xor add jg cld (bad) cmp xor cwtl (bad) mov pop or (bad) (bad) (bad) incl jns mov shlb xchg mov addl sbb sub fxch rcrl repnz decl jo and xchg pushf jecxz stos mov les (bad) ljmp or xor das aas xchg js aas cmp push icebp mov aam ljmp int3 hlt hlt loopne adc out sti push add add (bad) (bad) (bad) (bad) jge xor int3 sarb dec sbb mov and lcall imull sahf mov int shrl mov jge add push jle (bad) aas sbb icebp jmp sbb shlb lahf (bad) (bad) (bad) mov push aas adc pop loopne mov fdivl dec mov sbb and das sub prefetch or mov or movsl vmaxsd (bad) out or mov pushf aas aam mov into loope sbb scas enter push bsr push pop pop sarb hlt mov sub jge outsl stos ficom (bad) decl adc (bad) fstpl cli jle in dec mov mov dec mov aaa into or (bad) call or loop lret sub inc lock enter movsb inc or pop ds jge mov mov mov adc mulps mov pop adc int sub (bad) fisttp adc add mov mov (bad) (bad) (bad) jmp and mov testb mov push mov lods adc popf sub (bad) (bad) decl jmp dec ja jl iret adc pop push stos fisubrl (bad) mov cmc add orl add out xchg xchg out inc add (bad) (bad) ljmp add xor push cltd jmp out jno dec rclb mov mov (bad) ljmp test test gs push cmpsb rcrl cltd xchg sahf sub (bad) (bad) (bad) (bad) in pop lods cld je and lods loopne pop jmp pop xlat call pushf sbb xchg mov movsl or out xchg sub inc cli mov sahf mov aad sub test stc (bad) (bad) (bad) jmp es push push jae stc or jg pop jp sbb jns imul test aas repnz fcmovne mov (bad) daa xor out adc (bad) (bad) (bad) ljmp imul mov mov sub lock loope pop cmp add mov incl jl xor call xchg lods xchg mov cltd test (bad) ljmp mov xchg sahf push ret inc or pop jp mov out jne aaa mov inc ja jg shrl in inc xchg mov sbb cmpsb aaa (bad) pusha or xchg mov and cli orl out or loop and clc (bad) (bad) lcall jne mov ret xorl ret jb xor out lods (bad) (bad) inc adc sarb or pop cwtl repz jbe pop lret inc ret (bad) call fwait clc movsl pop or sub jns cmc xor fiadd in das lods pop add mov decl test sbb push mov jge aas lds ljmp mov xchg rcrl mov loop dec in rcl xor and jne xchg out sbb sarl inc inc ret outsb cli (bad) (bad) pushl test lret fdivs mov lret sub fcmovb (bad) std xchg jp rcll jbe rolb push dec pop push xchg sub xchg (bad) (bad) lcall imul and inc fcmovnb icebp sbb push incl jo add aad dec and inc cs mov (bad) decl xchg je mov xor jmp adc jno pop mov (bad) (bad) dec sub sahf push sets (bad) (bad) mov les in jle int3 (bad) rcr lcall int adc (bad) not xlat jle cmpsb int3 mov scas call hlt jns or jg test add sahf cli mov add sbb cld ret in into adc (bad) mov or ljmp dec mov mov jbe cmpb adc sbb inc es push and jg push add cwtl push fwait mov cmpsl xor xchg and mov (bad) jmp mov movsl dec (bad) lds mov int pushf lock inc mov jl imul cld cmp fidivrl aaa ret mov test push ficompl cmpsl dec (bad) (bad) (bad) call pop adc sub sub mov mov loope mov mov xchg dec push mov popf adc jmp repz (bad) (bad) (bad) call cmpsb leave mov sbb mov shlb repz std je cmc test inc loop sub inc add add inc repnz pop out popf mov lcall fsubrl and pop adc stos push adc mov jns fcomip (bad) ljmp pop call ja imul fmul cmpsl ja pop mov (bad) (bad) (bad) (bad) jmp sub std dec jns popa mov push cmp (bad) push mov mov fnsave dec push (bad) call cld jo cwtl jae add or pop cmp push mov negb outsl lret lahf or je mov rcrb sar (bad) lcall add jmp ja xchg sbb or mov sub outsb call scas addr16 inc xchg pop incl cld jg scas add test jg sahf xor push mov pushl jns jo in js sub adc lret lret ret out aaa pop cli cltd sub loopne mov lcall in iret mov popf in js and or cmpl mov shl add xchg mov mov mov and cltd (bad) (bad) (bad) decl dec scas dec mov dec test imul push xor test (bad) (bad) xor pushl cld sbb pop sti mov jae imul xchg pop jge lcall mov add xchg fwait xor out jle dec pop add (bad) (bad) decl or xor or mov add test lods pop or rcr andb inc sbb inc mov jle xor adc int3 sahf jne (bad) (bad) inc mov lcall (bad) mov shrb mov or (bad) jl test pop mov pop (bad) sub out dec and inc outsl pop xchg (bad) ljmp (bad) adc xacquire push mov dec inc add test pop jg call mov es mov jns (bad) (bad) (bad) jmp and jmp push xchg cmp aaa aad cs push imul mov lods cmp pusha jo dec mov and mov (bad) cmp jecxz or int3 fcom js lods xchg adc test mov int enter shlb (bad) (bad) ljmp sar inc xchg and push mov out sbb outsl jle jmp (bad) incl xchg dec sub loop fcomps xchg rorl (bad) cmp incl add push fwait mov mov xchg gs (bad) aas add idivl pop pop add (bad) into pushf icebp mov idiv jmp mov cld lret inc dec xor or lcall pop ret rclb mov push or cmp (bad) (bad) (bad) pushl sbb or mov dec dec sbb inc movsb mov dec add mov incl jge or dec in sbb loop insb mov ljmp cli (bad) jge stos fisubr xchg cltd xor jle data16 lds cltd fisttpll or inc mov inc aas mov imulb dec imul pop sbb pop mov adc movsl jno loop aas sbb adc dec push iret add es pop jge imul cmpsl sbb xchg enter or icebp dec jg cld (bad) (bad) add mov insl push insl repnz sub (bad) (bad) (bad) decl pop mov outsl stos mov push inc loope shrl sub sub xor imulb and and in mov inc jno (bad) (bad) (bad) aas mov aad jno mov add shll in pushf fstp test bound je inc out enter jge sbb cmpsb mov pandn es les incl cmc pop test xchg scas push sahf sti je sub incl ret and call jecxz push cld (bad) pushl jg cmp mov add ret and (bad) jg icebp popa or cwtl ds cmpsb mov mov in data16 xlat fdivrp mov dec xor sub lret rclb dec and data16 call add daa add cmp push imul dec clc pop fwait lock fsubp and mov clc (bad) mov inc xchg repnz jle inc sbb xor mov (bad) incl iret pop scas lock sahf ja add stos xchg xchg testb (bad) sub (bad) (bad) call ret movsl cmp xor sbb and mov or dec pop mov mov mov jbe lods push adc cli in cmp outsb sub popa shll (bad) (bad) (bad) cld enter cmp shl mov sti jg xor push sub pop addr16 sub ret aaa (bad) (bad) dec jno push popf adc scas popa adc aad (bad) popf jp fadds mov jo mov out mov lcall or pop decl gs inc aam xchg xchg jp in (bad) jmp gs adc iret inc sbb loop xor sub mov jno (bad) (bad) (bad) mov xor fnsave addr16 fwait inc daa in inc gs sbb mov cli iret pushl and lgs loop cmp (bad) (bad) lcall add sahf lds push or lods and cmp xor mov push loope sbb pop (bad) sub sbb ret inc pop ja fildll add xor push xchg xchg insb (bad) (bad) (bad) incl mov ljmp hlt (bad) gs flds xchg js imul rcr pop vpminub cmp popa enterw in hlt (bad) (bad) (bad) pushl shr mov cmpsb mov aam cmpsb cmp push and mov add push sbb xchg (bad) incl xor and inc mov out mov out mov (bad) (bad) (bad) lcall (bad) lock inc fnstsw sbb push in jns dec inc push aaa stos int3 clc ljmp loopne pop loop insb sahf out jecxz (bad) mov js pop and lret movb mov clc sbb sub (bad) (bad) (bad) fisttp sbb xchg popl inc jno js test out mov inc jecxz (bad) push popf xchg (bad) (bad) mov incl inc (bad) dec dec dec and movswl hlt js and inc cli dec mov cli or (bad) ljmp (bad) cmp xchg lret outsl xchg adc push push lods arpl dec (bad) (bad) (bad) incl lea and mov mov aad jae pop mov lcall hlt jmp jge rorb pop sub adc aam ljmp push push ror movsb lock lret hlt pop cmp and or int3 dec into push inc rorb (bad) jmp bound cli insb xchg jns in inc pusha xor pop iret ja nop push xor (bad) (bad) (bad) (bad) out cmpsb push out inc mov xchg in in pusha mov sbb (bad) hlt push fdivr adc decl jg cmp mov mov mov xchg popf loopne and (bad) (bad) ljmp xchg ljmp lret fwait mov (bad) xor pop dec int and jmp xlat repnz add sbb lock sbb lahf (bad) lcall sbb mov jg sub in dec cwtl dec loopne jecxz sar mov xor lds cli sub dec clc insb (bad) imul adc jle xchg loopne cmpl lcall lret dec aad mov mov pusha jl adc add mov jmp repz sub or pop fisttpl add fisttp movsl lods (bad) adc pop jbe sti mov addr16 (bad) call xchg mov cmpsb pop pop mov aam insb rcrb add fcomip pop jecxz dec (bad) stos in sbb in xchg repnz dec (bad) (bad) (bad) inc mov mov out fsubrs rcl mov sahf xor cli ror push sub xor mov push stc (bad) lcall xchg out jb std jg clc push fcomps movsb outsl cli (bad) decl sar xchg sub jbe add jnp arpl inc mov (bad) decl hlt popl enter mov jecxz mov and daa inc push (bad) fbstp fild mov rol lret fbld (bad) (bad) (bad) decl inc cmpl or rcrb mov hlt and test mov mov jae push pop sbb das push insl (bad) (bad) (bad) (bad) incl std push in pop divl aam adcb addb mov xchg addl push stc (bad) stc dec push inc loop fdivrp ja fwait add inc sar (bad) (bad) mov adc jecxz inc and jo mov (bad) dec aaa sti push jns sbb test fisub mov and mov in mov sub int xchg fldt pop cmp adc push mov xor mov sbb xor sahf and (bad) decl push nop addr16 jne popa mov leave pop add (bad) (bad) (bad) decl aas cli lods cld jmp nop adc xorl fstpl xchg push aaa mov into (bad) call lock jmp outsb enter add and std (bad) decl scas push cltd cmpsl push (bad) (bad) dec pop (bad) scas fidiv mov (bad) pushf cli lcall call adc rolb ljmp adc leave aas xchg or (bad) daa xchg (bad) xor mov es or cmc (bad) (bad) ljmp call test xor xchg sub das out (bad) stc (bad) (bad) ljmp out jl inc mov mov mov xor adc aad aaa pop in (bad) (bad) (bad) call clc ret roll scas std xor xchg arpl push jl sub pop scas (bad) incl stos pop sbb (bad) stos (bad) divb (bad) ljmp and lret es add jecxz cmc add lret addl push scas leave pop jge cwtl jno lcall inc xor gs les (bad) stc sub repnz das jl jae insl xchg (bad) jmp cmp int3 add repz dec sbb nop (bad) jg mov addr16 xlat fistl es push xchg (bad) lock (bad) ljmp (bad) xchg popf mov mov movsb xchg mov arpl (bad) mov ret add mov adc call sbb pusha xor loopne sbb or inc lods jmp adc dec push loopne xchg ds adc jmp (bad) ljmp mov gs push mov pop (bad) adc arpl aaa dec ljmp add rclb jg adc sub inc fisubr (bad) (bad) (bad) ficom xor int3 outsl addr16 inc (bad) jne andb ret clc pusha xchg (bad) in aam jg mov mov (bad) incl fisubr push out sahf ds shr adc sbb (bad) (bad) (bad) jmp xchg int3 push cmp sbb xchg mov outsl cs adc xchg cmp mov mov mov test insb and lock ds ljmp lock fcomp jnp (bad) jg mov popf sub cmp (bad) (bad) (bad) jg jle enter dec in out and shlb call adc int3 or (bad) (bad) dec push sbb imul fwait lahf and call arpl mov stos (bad) jg popl aam dec outsb in inc sbb jle mov mov mov lock decb push sub fadds sub sahf shlb (bad) aad in mov mov mov xor (bad) (bad) ljmp in jecxz nop div daa xchg or push sub mov lahf cld (bad) incl or xorl jne jbe cmpsb jne jmp (bad) (bad) cmp hlt inc jl push nop push xchg inc loopne mov pop cltd jbe and add (bad) ljmp in xchg into stos std fwait jp sbb mov scas sbb sbb addr16 jle push mov ficoml mov (bad) incl mov and adc out mov or mov pushl or or mov imul (bad) ljmp adc xlat cmpsb popf (bad) pop fwait xlat inc dec mov push fcmovu inc inc sub cltd gs cmp dec dec es (bad) pushl imul jg stos xor fisubr subl push fstps test into cmpsb fcomip (bad) (bad) fldl2e xchg sub mov outsl jb hlt dec movsl mov sub loop ljmp sbb ja and cmp test mov popa push cmp or push or (bad) (bad) (bad) ljmp push out inc jle or and inc movsl pop (bad) lock stc call mov out iret in push mov (bad) jp sub add mov aaa std fcomip mov out xchg cwtl movsl dec hlt faddl jge inc movsb adc test and frstpm(287 fcoml (bad) cmpsl loopne out mov mov outsl mov sbb icebp pushf clc in inc sbb (bad) (bad) (bad) mov repz ret mov aad ds mov (bad) popf push test decl or test imul loope dec std (bad) (bad) (bad) mov push arpl or loope rorb xor inc push mov push jmp stos in pusha pop popf push mov jl mov inc mov decl les je mov jmp sbb xchg (bad) (bad) (bad) (bad) out lds fdivl lods xorb (bad) jmp lds lahf adc popa (bad) decl mov adc sub jg inc push add (bad) jmp add xchg add icebp fcmovbe out cmpsl or into xchg sub dec or push icebp xchg xor inc (bad) mov or xchg pop add in add test fistp decl sbb sbb mov dec cmp mov add incl std decl imul rorb push push (bad) (bad) (bad) (bad) in cwtl mov cmpsl out jne pop jns or inc push mov out jo inc gs call fsubs nop test pushf js aam in push sarb outsl (bad) mov (bad) ljmp dec mov mov push scas (bad) ds or lds test popf push shrl int (bad) rclb arpl (bad) (bad) (bad) incl push mov sti xor sbb cmp fldenv pop (bad) lcall dec movsl outsb xchg or cmp mov mov (bad) aas loope sub mov negl std lds pop cmpb (bad) (bad) pushl cmp mov js jno pop cmp testb stc mov addr16 inc popf lcall (bad) mov insb push ret sub cmp cmp push in imul pop insb (bad) (bad) (bad) jmp cmpl loop inc insb popa mov jle ficoml xor pop pop and pop stc call xor stc xor das mov test xchg pop jmp jg mov ret jmp mov sbb adc loop push dec sbb mov decl jg dec mov xchg mov imul (bad) (bad) jmp movsb lret (bad) int inc and pop lcall jge xor dec imul ljmp jg (bad) jmp xor push pushf jne or sahf rcl lock dec imul mov push pop insb movsb test mov ja ret mov mov jp (bad) fild adc iret ret cmpsl out jns xchg scas loope lcall dec jge lret mov push les push sub ljmp pop (bad) or push push icebp decl jo dec jnp mov std and push mov mov clc jge imul push inc repz or lods jns mov dec cmpsl dec out cli (bad) (bad) (bad) je add jo fs test (bad) sbb mov fisubl movsl (bad) pusha in test addr16 mov cmc (bad) (bad) (bad) decl (bad) dec mov jno lods in cmp push test jnp jp add fsts sbb cmpsl loope loop add mov (bad) jbe pop movsl loop sbb inc jne xor inc jg test lret jne xchg mov jg (bad) call call sub dec mov scas fdiv or sbb add dec (bad) xor inc (bad) lock (bad) incl push jg lods cmp mov mov push push inc int3 popf call (bad) fild daa cmp sub pusha inc pop mov ror cmp jecxz xchg jns jmp cmc dec inc push add or pop and outsb lock (bad) (bad) incl and mov gs push sarb pop inc push dec dec std lcall fbld xor cld pop push push cmp js or sub xchg cmpsb or inc cs (bad) (bad) jmp mov add negb lahf les and arpl jbe adc movsl (bad) call aam insb dec lock (bad) sub psubusw (bad) mov test (bad) lock add fcompl jl (bad) mov cmp jb adc inc push pop and pop vmread int3 sbb aam cmp mov or cmpsb in (bad) std (bad) (bad) pushl daa mov imul xchg shrl mov pushf jg pop cli dec jno mov fisttp div inc xor (bad) (bad) incl cmpsb mov hlt call inc fdivr cmpsb rorb xchg and cmpsb movsl movsb jp jne out dec cmp lcall and sahf mov push jo pop cltd das (bad) (bad) (bad) lcall cmp aas aas or fmull mov xchg je jb sub test push imul cwtl (bad) (bad) ljmp pop popf sub xchg lret dec hlt xor es xchg test adc jbe leave fcos mov (bad) cmp (bad) insl scas mov mov stos and jge (bad) (bad) decl push jp add pop xchg xor popa push and mov and out ja cld lcallw imul es rcr and sub lahf xchg aaa notb (bad) xor mov int frstor cmpsl or (bad) incl scas fwait sbb pop cmp rorl sub incl sub pop mov aas sar ljmp cltd xor std mov cwtl cltd xor (bad) (bad) (bad) pushl sti inc sbb lcall es movsb (bad) sarb push mov adc jle inc xor lods mov frstor adc clc push pop (bad) mov addr16 mov loop out and pop mov (bad) fistp sbb jb adc loop aaa jne js out pop and and mov jmp cld lock xchg dec cmp je cmpsl mov aaa ret add (bad) outsl (bad) (bad) push sub jne scas imul fcmovb into stos push inc mov dec (bad) lcall imul aam adc outsb jbe das data16 (bad) (bad) decl loope xchg xlat loopne jle pop sub lret fcoml adc push xor jge int3 jle push jl xor (bad) jl xor mov jecxz or stos mov iret stos jmp (bad) (bad) ljmp inc mov lods mov inc lock out cmp jno cmp (bad) incl cld dec inc push lods mov jle jae js stos (bad) (bad) decl mov rcr fdivl in leave and sarb (bad) int3 push pop popf int3 sub push sahf pop xchg mov loopne sar (bad) (bad) jg dec jle stos and mov addr16 mov jnp (bad) (bad) (bad) decl cwtl lahf scas out std mov jbe mov loopne jp cmp mov lahf adc repz lcall xor dec test xchg ja pop fcoms ja int in iret push pop xchg (bad) (bad) (bad) (bad) clc das sbb (bad) fldenv jae cmp dec or inc stos inc cwtl dec stc inc pop xor jae sti inc (bad) lcall stc sarb fs rorb jae push lock cli xchg stc cmpsl daa push addb cld decl popf cmpsb (bad) je outsb adc loope iret mov push lahf mov decl movsl les lahf pop jmp adc (bad) in (bad) jmp mov xchg push add loopne iret or mov daa jmp stc cltd mov jmp fwait pop scas mov dec cmovs add addr16 loopne sbb aad pop decl lock mov ret mov (bad) sbb in pop xchg sar (bad) (bad) decl je vmovapd jl jno mov js leave sarl dec ret ja lock (bad) jg lods and out outsb out fcmovnb xor mov cmpsb notl push lahf stos xor inc or inc push jmp mov adc jg in (bad) sub fisub xor (bad) (bad) (bad) cld gs enter lret out ja add ds leave outsl jp or inc push xabort into and push scas jmp inc inc push ljmp inc dec lcall (bad) (bad) (bad) (bad) sti ss fs int3 cmp dec mov mov je inc outsb enter (bad) call xchg or movsb or xor xchg (bad) mov inc (bad) popa lock jns (bad) jno or push call imul int3 dec jge nop ret out loope (bad) jg cld push inc sbb push mov cmp and (bad) (bad) mov cmpsb mov ret dec std xor and xchg xchg mov lea dec (bad) incl inc xor xchg addb or outsl (bad) (bad) cmp (bad) mov call bound mov test ljmp sbb push push jp jmp ret sahf rorb add (bad) aas xchg or or xor dec inc or pop sbb pusha (bad) (bad) (bad) inc and loopne dec sub out and mov mov pop (bad) inc pop in xchg push decb lcall jge mov pusha fstps (bad) jbe (bad) (bad) pushl or push xor inc iret and outsb rorl or scas ret cmp lods sub mov cmp mov daa mov push popa pop add movsl (bad) ss ret inc std mov jl sbb xor fildl clc or pushl push std fisubrl adc jnp mov inc icebp in clc (bad) ljmp jns mov dec fisubl (bad) or (bad) in sar std out bound xor hlt enter mov inc cmp (bad) aas cmpsl icebp mov bound cltd sub jg test lea (bad) into cwtl lcall lock sti adc dec push cmp jae dec test mov (bad) (bad) call shll fcmovbe ret jp add popa adc xchg inc jmp inc (bad) (bad) pushl pop mov js popf sarl xor mov incl fwait cmpsb out lahf cld mov imul mov push fldcw jb xchg push (bad) lcall popw and jbe push adc mov data16 sbb mov call mov loop mov or cmp sub jno and lods mov fidivl lret xchg push fiadd dec call decl imul push adc in ficompl push mov fildl shrb test xchg test cmp push data16 ret dec jnp,pt aaa cld (bad) inc jge jl lahf cli mov mov clc bound mov mov pushf ds (bad) (bad) (bad) cli inc test bound mov out adc mov or (bad) call mov xchg std in je addr16 sub repnz push andl lock decl xor dec or test imul xor pop jae (bad) jmp ror repnz int push popf int3 add int3 dec shl pop push pop (bad) (bad) (bad) jmp inc jae pop cmp dec (bad) jb fwait ret cltd push lea int sarl lahf cld (bad) mov out inc inc mov inc jmp mov xchg es (bad) (bad) (bad) (bad) ljmp leave iret xor dec pushf push pop add inc dec sub insb movsb (bad) or jmp push mov mov fadd push xor fisubl lcall inc mov lcall inc inc pop push lret push in out scas mov ret dec sti or clc xchg (bad) ljmp sahf gs dec iret jne iret int push inc ret (bad) (bad) out faddl inc (bad) (bad) sub nop lret xchg jge popf repnz jbe enter jb inc aam outsl out pop inc (bad) daa cmp les sbb daa ret daa bound out inc les leave stos inc xorl dec dec (bad) (bad) (bad) jg push push aas sbb jl mov xchg int3 (bad) jnp jno push (bad) cmc loop popa push dec sbb jg xchg cli add rcrb (bad) add cli add pop flds xchg aad out sub ja orl std xchg mov cld jg pop xlat mov mov fnstcw jle push mov dec aas stos ret dec mov out cmp fbld les (bad) xor (bad) (bad) (bad) pushl imul cmp icebp mov in loope in cmp mov jl mov jmp (bad) mov js xchg mov add adc pop imulb (bad) (bad) (bad) inc mov loope,pn mov xor dec jge jge movsl jle insl cwtl out rclb cld xchg decl (bad) dec daa insl push repnz jl js sub inc ret idiv (bad) (bad) call scas fstpl pop mov mov aas cmp jecxz lods pop sbb xchg in xlat dec lahf sar mov and aam sub xchg inc pop jbe mov mov in mov out lcall sub nop push (bad) (bad) (bad) call pop dec push xchg ficoml loop leave jae push mov xchg jp jns (bad) (bad) jmp loopne cwtl aas or outsl nop xchg es push sub mov and in (bad) call or dec jmp mov pop pop sub mov pop jl sti cli jmp sub dec add adc mov (bad) call outsl aam xchg imul loopne push (bad) mov shrl (bad) (bad) aas imul stos (bad) mov xchg sub lret jg pusha push popf (bad) (bad) (bad) jmp in mov inc sub (bad) add lods sbb pop mov pop ret push or or pop call fdivrp aaa push aam add pop arpl cmp test mov (bad) mov and jnp push rorl inc gs mov ds ficomp sub and (bad) jp (bad) or sarl loopne das int3 fimull mov cmc lods adc mov sub sub pop pop cwtl xor fs mov out (bad) ljmp xchg (bad) fdiv addr16 inc out in add inc ret adc cmp (bad) in decl cld shl ret push sub mov or loope pushf xorl insl or nop pushf ja decl cmp (bad) in stc sbb lret push mov xor jmp inc outsb adc clc (bad) cmp jle lret insb sarb sahf out mov ss (bad) lcall shrl sbb (bad) jne and pop ljmp outsl jmp push xchg push push pop jmp bnd xchg jb mov mov iret fstps ljmp lock pop mov push adc (bad) (bad) (bad) pushl cmp int3 add or sahf fist cmpsb adc (bad) int mov xchg mov xchg mov push mov push aad scas sbb mov (bad) push int mov cmp sbb popf mov movsl in push pop dec das sar pusha xor and (bad) ljmp not jo call repnz sti jl aam fs das mov mov jmp push (bad) call mov jb jns inc (bad) pop adc sub sub xor push jmp push push pushf out sbb leave sbb (bad) (bad) pushl xor jae js or out or jnp cltd mov sbb push and test hlt (bad) jns aas add adc push dec jnp call loopne sbb jmp push subl adc (bad) (bad) (bad) out (bad) data16 mov imul xchg fiadd or adc add (bad) xchg add adcl lods (bad) (bad) (bad) incl mov pop sub iret lods stc push pop pop movsl or add sbb cld mov (bad) (bad) dec fsubrs into loope sti hlt inc push aad decb pop jge mov adc (bad) (bad) (bad) cmp (bad) sti clc or cli daa pop xor mov rorl mov mov (bad) (bad) (bad) (bad) lcall icebp push imul mov inc leave push pop fnsave mov gs cwtl repz (bad) jg or lock mov and xchg push movsl lods inc loopne push xchg push sahf sti (bad) decl data16 pop add imull repz mov mov mov mov push out outsl fcmove imul outsb cmpsb into int3 (bad) (bad) decl mov add out lock or mov rolb push (bad) dec fst fnstsw add cli inc loope sub xorb fidivr sub fimull icebp or iret and ljmp lock insb push into jl push ret mov fist cli mov clc pop inc and outsb in nop add (bad) inc adc jg (bad) cmp and loopne pop pop jl lea mov cli in push out sbb fucom sahf push loopne mov int aad mov (bad) inc or mov inc cmp out mov jecxz dec inc fwait mov repz (bad) (bad) incl loopne xor push xchg cld stos or pop call pop nop lods loop (bad) movsb mov aas repnz decl (bad) hlt cmp sti cmp mov push lea inc out push rcr or insb movsl inc (bad) (bad) (bad) lcall jne xchg mov imul bound outsb sti iret push push mov adc xor das dec jp adc pop repz ljmp call (bad) (bad) out dec inc (bad) mov dec jle inc (bad) into xchg leave mov loope or (bad) dec mov xchg add mov xor stos push mov sub mov mov xor sbb (bad) (bad) push stos jne inc (bad) (bad) jmp push int3 cmp jmp hlt xor lcall xlat clc pop and sub das (bad) lea (bad) (bad) (bad) decl ret sbb pusha lahf leave test xchg push push jg out aas js cli cltd clc add ljmp pushf mov adc mov xchg lret mov and out add jns pushl cld (bad) std ficom sar std dec jp sub stc mov scas lahf pop xor scas cli (bad) jmp push cmc outsl (bad) cli xchg adc cmc fld pop fs fs pop (bad) dec (bad) and jecxz xor and mov add dec loope cs dec cmp ret fisttpl es je es pop out push hlt pop icebp mov outsb dec (bad) call daa xor loop sahf push dec push xchg dec rcrb lock mov jg pushl cli sub add adc push lcall incl jmp inc push popa std push inc and (bad) cltd in (bad) (bad) (bad) lcall inc sbb jae inc (bad) rcrb (bad) testb push cli lock or mov popf imul or (bad) lcall pop dec movsl jge imul push xchg sahf add sub (bad) jnp (bad) (bad) (bad) out js scas int3 push insb add sbb dec cltd xchg cwtl gs mov inc (bad) popf and fisttpl cmp inc scas sub or jg inc cld and push jb fdivs and pop data16 in jmp (bad) (bad) jmp imul mov scas xor lret lods jbe jecxz ds jmp (bad) (bad) jg jnp lcall mov mov dec or leave stos pusha push lret mov stos cs push xlat xchg pop add sarl cmc aas pop popa push xchg mov imul loopne (bad) (bad) (bad) aas pop aad ljmp fwait lahf loope and push mov cmp sbb sub cmp add xchg lret jmp (bad) ljmp insb push enter in nop push inc scas or xchg fstl mov mov dec mov in movsl ja cmp cmp std jle jg aas fs xchg insb scas repz (bad) dec andl (bad) fild push pop jnp jge pop ds mov clc jnp mov (bad) nop repnz push or and add (bad) (bad) fldt xchg adc push loop xchg push iret xlat pop xor and dec std (bad) fbstp push push aaa cmpsb rcll out push (bad) (bad) es (bad) (bad) (bad) lcall idivl fdiv rcll mov sbb loope sub nop jnp pop add ljmp (bad) xchg stc stos mov inc pop mov cmp and decl and (bad) dec insb push mov mov xor movsl stos xchg xchg insl das xchg inc andl sbb pop (bad) jnp scas clc pop loopne inc or push lea xor in ja ja sbb call mov pusha sarb (bad) (bad) (bad) cld cli push push or mov adc inc out nop addr16 mull movsb jge jmp icebp lcall jmp aaa fdivs out push popf out (bad) (bad) (bad) lcall add ret xchg sbb cmc dec sbb dec jle data16 bound (bad) jmp (bad) push imul movl scas adcb (bad) (bad) (bad) call roll (bad) leave mov push pop fbld mov loop test xchg (bad) pushl cmp mov ret dec mov stos push sar int mov fildll jecxz xor decl insl mov inc (bad) pop cmpsb inc cmp mov adc add loopne push insl (bad) cmp daa cmpl (bad) (bad) decl and je ljmp cli enter pop out sbb push data16 (bad) lcall int into movsl push xor dec (bad) dec inc pushf or sub gs aas adc mov stos or xchg insl lea sti cmp (bad) (bad) pushl into hlt push arpl int3 ja leave mov data16 pop (bad) iret aaa int cmp mov (bad) cld mov cmp dec push push cld clc (bad) ljmp adc xor cmpsl mov inc sub (bad) enter jns int3 add xchg push (bad) in mov jge and pop movsb lods inc shr jmp int3 pop mov or jb sbb cs cwtl lret (bad) (bad) call sbb aaa (bad) jnp test push mov pop ss in pop jecxz xlat and adc (bad) mov in fdivrp or (bad) (bad) ljmp dec add mov push or lret clc dec test jb xchg incl lcall inc push test test adc or xchg sti dec pop xchg xor (bad) (bad) inc lods mov push pop inc cmovle cs mov aam inc push push les andl sub fidivrl sbb (bad) rcll daa lods jb nop xor jns fwait xor xor fiadd andb out lret in fs mov and lods jne (bad) jg std add fiadd lret insl fdivs pop mov stc dec mov (bad) sbb (bad) (bad) jg fwait push jp or xor sbb push sub and jns lock mov popa std call out mov jg push mov loopne cld (bad) decl mov roll fstl shrb push cli decl movsl and pop xlat pushf aad incl mov sub cmp loope jae mov (bad) (bad) (bad) mov push loope bound add mov in xchg mov sub adc and add (bad) dec mov lret (bad) jne fucomp pop inc outsl lods add add jle movsb (bad) (bad) (bad) push jmp fwait test lcall out pop jle ss jmp jle inc cld aaa std jo pop ret pop jns ja pop hlt dec in (bad) (bad) (bad) incl mov xchg cwtl mov inc neg (bad) and in jmp movsb repnz (bad) (bad) fistl lods test int adc mov sub es cli mov fs aas repz add cld (bad) cs ds (bad) (bad) (bad) incl addr16 dec xchg scas dec loopne xchg mov hlt movsl push and ljmp std cmp mov lret cmp xor (bad) (bad) (bad) ljmp pop mov push cmp clc shr adc shll lds ljmp sub inc xchg pusha lret fsubrp sbb xor ret (bad) (bad) jmp scas adc hlt add repz push lfs movsl dec lock out cmpsb (bad) push imul aam dec fbld fs push arpl (bad) (bad) push out sarb inc sahf into push notb insb int3 arpl sub and rclb call fcoms xchg lock mov jg and dec in dec cwtl mov (bad) mov in mov cld cmpl cmp mov add incl pop lods dec cmp shr jne xchg fldl test cmp into movsb xlat inc or negl mov in xor ljmp mov pop ret mov loopne fistp insb repnz rcl jnp pop pop jle std (bad) (bad) lcall and mov aam leave ljmp xor inc mov (bad) (bad) decl jnp dec xor flds out fstp gs loopne das into fiadd ja (bad) (bad) lcall jecxz push pusha (bad) ss std inc sbb mov xchg cmpsb and gs loopne adc push imul push jbe push xchg (bad) sub pop pop xchg jbe mov (bad) xchg lcall dec mov (bad) (bad) decl inc jne mov mov nop cmp or inc outsl rcll fiadd mov call test and adc (bad) (bad) jg rcll inc xchg (bad) sub add mov movsb out push in fmulp jns xchg mov inc (bad) decl je sarb xchg adc aas inc imul push popa (bad) (bad) decl movsl sti (bad) data16 lret jmp out push sbb mov (bad) dec cwtl rclb dec jl sub push dec std mov dec dec shl adc popa decl (bad) (bad) (bad) (bad) jmp rcll dec test push sarb pop lret jb inc sub push cltd xor push stc jmp and dec cmc lods insb push in fisttp (bad) (bad) jmp movsl pusha sub fwait cmp into sti icebp jmp pop scas mov xchg and inc loope add and out fwait xlat inc push xchg (bad) call std idivb cld sbb fcoms or es jmp frstor fwait ja (bad) repnz inc out ds scas cmp push push pop mov (bad) aas add ljmp scas add pop and jmp mov (bad) lcall rorl aad out sbb mov dec xorl pop cli jae aaa cld mov xor notb adc jg cmp mov pusha lcall mov push xchg (bad) jg call cmpsl pop aam lock out out iret lea push push cmp jne (bad) or std scas mov mov mov or push add cmp (bad) jg mov push addr16 call dec stos pop mov and push push icebp sub push movsb mov decl sar dec sub in (bad) mov fnstcw clc (bad) (bad) (bad) lcall inc mov jb xchg and lret rol dec xchg cmc pop imul jmp (bad) pushl jg inc cmp std incl jae adc (bad) (bad) (bad) lcall cmp or in push adc or (bad) rcll decb lock repnz mov jne ljmp pop cli iret out mov pop cmp int jno (bad) scas jg dec call pop ret mov mov or fwait lahf add pushl and (bad) daa jnp lahf adc push (bad) jns (bad) jg cld and arpl fdivr sub negb stos stos data16 mov jno fcomip incl or mov push dec add pushf aad lods pop fsubs mov xchg mov das mov jl or fcomip iret inc loop sbb or (bad) pushl push adc or push xchg clc lods imul loopne mov lods cli dec repz jmp dec mov (bad) (bad) mov xchg hlt lods xor xor sub (bad) (bad) decl mov or cltd mov stos dec pop pop push nop insl pop roll fistp pop stc pushl jmp or push xor add push and pop dec or jp ja (bad) incl loopne std and enter jmp repz pushf cmp sti outsb iret cmp xor lock or push into lock or pop icebp (bad) in dec stos xchg cli testl sti movsl add add in inc (bad) out pop jl sarb nop xlat mov pop das lcall xchg rorl nop jne pop xor pushl mov xchg out mov enter (bad) (bad) mov (bad) mov test popf loop adc mov ljmp (bad) jg test inc scas cmp cli mov lcall enter das pop pop push rorb fstpl mov (bad) decl push ficoml jg je push dec mov imul mov inc adc add test popa loop stc mov fdivr (bad) (bad) xchg scas ljmp hlt fs push gs clc mov inc sub and dec les sti and xchg or xor mov jmp fnstenv fcompl shrl xor mov fs mov inc (bad) jmp pushl test mov fiadd lret xchg inc ljmp pushf lahf in (bad) (bad) call cmp outsl xlat leave mov mov int mov sub add test dec jb in out jp stos sahf mov pusha push mov cltd or (bad) (bad) incl sahf xchg dec mov or fnsave lea addl sbb mov add cmpsl icebp cld (bad) call push jno cmp aad inc sahf stc add cltd xchg lahf (bad) call out lock cmp dec rorb (bad) incl xlat (bad) cld push out test mov cmp cli xchg stos cltd mov pop loope jp and jno xchg mov dec dec icebp (bad) (bad) push pushf mov movsl (bad) xor jns outsl es xor xorl (bad) (bad) jmp adc cmp lret ljmp add (bad) (bad) (bad) (bad) pushl push clc fcos scas fwait add jno enter and pop les (bad) (bad) jmp movl cmp dec test jae adc xor (bad) (bad) (bad) pushl mov or movsb or push (bad) lock jae (bad) lods cld mov (bad) in mov (bad) dec cmp leave xchg sub (bad) mov ficomp (bad) (bad) (bad) (bad) out xor cwtl pop and stc in rcrl dec fsubr lods jg jl inc (bad) jns xchg mov dec inc loope mov cwtl out and stos ret jg mov or (bad) (bad) call inc shl sbb (bad) jge mov sbb fistp arpl jmp mov or in repnz adc xor out jg ret es rcrb push xchg cmp mov cmp repz push add dec mov jmp test cld ret (bad) iret (bad) (bad) jg and mov or iret pop mov sahf stos mov decl pop adc cmc inc pop test cmp adc pop lret xchg inc and dec dec (bad) (bad) ljmp ret aad mov xchg vcmpps or push xchg arpl inc out (bad) and lret loop test ljmp call dec jne mov out xchg jp fsub loope xchg (bad) (bad) (bad) sti and jne lcall stos sub inc gs sahf repz adc xchg (bad) jg fsts mov daa fwait rcll cmp (bad) (bad) (bad) jl (bad) xchg xchg add sub iret pop fisubrl cld dec (bad) fistl out std add out sub call aaa add (bad) (bad) decl rcrl push adc into inc inc fsubrs cmpsb ja sar or mov pop and outsb fcomps (bad) pop lcall sub push lea sub jae lock jmp jg and imul rclb (bad) call loopne out nop jl dec lcall adc fisubr roll fiadd mov test push sub jno (bad) (bad) jmp cwtl lods popa out jg mov mov outsb cmp sbb cmp jle in lcall clc push bound inc loop lret add mov xchg (bad) (bad) (bad) lcall adc jg les or xor or lock sub pushl scas movsb jge hlt mov cli jb add inc loopne ds mov (bad) jo int xchg fwait xor adc testb fdivp jmp es mov jecxz cwtl add rorb cmp (bad) (bad) ljmp fisubr fstpt sbb xchg ja (bad) (bad) jmp xor lods iret jno inc lds xchg int3 gs xlat mov mov dec jmp (bad) (bad) jge sub mov ret clc (bad) aam sahf xchg mov hlt iret ja cs call loopne pop inc push add in pushl addr16 add (bad) pushl push lret arpl lcall sbb dec into clc mov mov rorl loope rcrb sahf push jne mov xor (bad) (bad) (bad) call mov fs sub inc cli dec push dec aas cmp push rcll cmp test sbb pop aam movsb or fimul out adc jmp popa vxorps rclb testb pop ljmp push lret stc mov movsl and lahf push cli stos xchg sar push pop rep test lds mov dec mov gs cmc cmc jo rolb in inc mov xchg inc (bad) and fildll cmp rcl xor je mov enter cmove (bad) (bad) aas pminub mov outsl repz dec gs cmp push ljmp lcall dec add jns dec dec dec push ljmp cmc sbb jp movsb push (bad) jg and push sub push call xchg das cltd rcrb (bad) (bad) (bad) call dec lahf (bad) cltd shrl dec pop (bad) popf dec pop or loope adc jle dec cli iret test inc enter jns mov pop icebp call xor repnz xchg xchg pushf xor (bad) mov mov (bad) decl dec ja out in xchg popa add shrl popa enter sti add sbb push cld decl aad xchg sti xor popa sub xor pop test (bad) fistpl negb push outsl in push pop xchg clc test aaa mov cmpsl out aad (bad) (bad) aas pusha in pop jl xchg clc cmpsl or push sbb ljmp rcll or hlt in or dec pop sub cmp lock add sub ret call loopne adc jge ret sti call jb idiv sub popf ret adc stc add loopne (bad) lcall int xor ljmp popa aad scas pop push fnsave mov fidiv daa pop popa push mov test jo (bad) in (bad) lcall (bad) imul sub fcmovbe bound cmp dec sub push lahf lret lds mov mov lahf fwait imul (bad) cmp divl push jae (bad) xor inc jmp push jb out dec (bad) (bad) js das pop rorb lds lcall fdivr (bad) (bad) mov les pop and sbb push fild add addr16 (bad) mov xor rol pop lcall cli insl ljmp mov pop (bad) lcall mov cmp (bad) (bad) jmp pop cld into aam pop push mov mov dec lds mov movsb rorl hlt test stc gs adc (bad) ljmp and sti pop adc rorb lret or mov (bad) call rclb enter dec shlb or add jmp dec ret rolb addr16 mov jg cmp test (bad) or cli int mov call push clc pop sbb ljmp dec lock mov mov fbstp (bad) mov repnz ret in (bad) call cmc stos imul int stc je jecxz xchg (bad) push jnp xlat movsl (bad) in cmp (bad) (bad) fcomip out lahf notl adc vpsubusb jg mov rcll xor mov mov adc adc add and ja or scas gs decl mov idivl add fwait push inc xchg (bad) (bad) jg mov add mov dec dec movsl (bad) dec inc outsb jne (bad) jmp (bad) stos icebp shrb bound dec ds (bad) (bad) decl sbb jne hlt jge xchg call mov cmp xor arpl call call mov fmuls addl ret pop cltd pusha jg mov or (bad) (bad) cwtl idivl fs (bad) or sar pop push xor and adc arpl push adc sub hlt inc lock xor cmpsl movsl testb (bad) (bad) (bad) aas (bad) mov and test fwait test inc push inc (bad) ljmp dec dec loopne lcall daa enter test lcall sub dec shrb mov jae (bad) (bad) (bad) lcall pushl call (bad) test push fistl fisubrl insb and (bad) mov aaa sbb stc decl scas sbb das cmc inc xchg sub pop outsb (bad) (bad) (bad) jmp popa xlat fmul mov pop outsl mov rcl xchg int3 mov ret movsl (bad) (bad) cmp mov leave aad lcall mov jne jnp dec add xchg xor outsl js push call sbb (bad) lcall xchg cs stos pop jl or xor and (bad) mov aas aad xor xchg and mov out mov xor (bad) incl call push scas dec hlt repz sahf cmp aam cmpsb loope add loope mov mov popf imul ja jecxz mov fdivs sbb test lock (bad) (bad) inc jp jge in call jle lds idivb adc push (bad) (bad) call cmp xor iret out mov shr popf popf xor mov (bad) (bad) (bad) call pop sbb xor push ljmp inc pop inc mov orl jl (bad) (bad) jmp push mov lds popa xchg aas fsubp cmp rcrb cld out (bad) stc loopne sub test mov mov loope popf jbe push pop push shrb adcl outsb rcrb add jne aas int gs xchg sti pop jno clc outsl (bad) fistp add add arpl in nop adc sbb movsl (bad) incl cld or pushf or add icebp add (bad) (bad) call call cli push stc mov fildl out jmp aaa add xor outsl pop rcrl sar testl rcrl add mov les in (bad) (bad) (bad) jmp add jo mov data16 pop pop jo sbb push aaa jg ljmp sbb pop gs pop jp jae js push mov (bad) call int gs cs jle out sub pop cmc xchg call ljmp adc and and pop dec icebp and (bad) jmp add xlat and and push xchg sarb pop (bad) insb xor (bad) ljmp jp jp call inc inc add mov cmp fimull repz push mov push js popf into clc adc pop stos (bad) mov dec jae dec add (bad) fcomip decl pop or push push push push mov ljmp add in (bad) incl ljmp jmp loope shrb fisttpl decl cmp (bad) in jmp fs push push mov incl repz pop sahf push inc fcoml aad and icebp push add ss pop subl pop lock push xor outsb xchg sub pop das aas insl pop enter jp xor ljmp lcall aaa das bnd insw pop jecxz adc aam sbb stc or cld sar scas pushf stos pop fwait jmp push mov sub jp cli mov cs js aam scas add stos xorb xchg aaa cmpsb push idiv scas fsubrl pop cltd negb fs and (bad) (bad) incl jl jnp fucom mov pop inc aas sti js popf jp fdivl daa mov test (bad) call jno adc mov int xor out dec push inc insl xchg out (bad) sti (bad) inc lock in clc leave xchg and stc lods into dec sub ds out inc mov aas scas jo loope int dec xchg jg and inc sar cmp dec in or nop sub jo sti mov pop ret in inc jne rclb mov int3 push sub pop aas add jnp call (bad) pop adc jmp lock outsl inc fcmovu lock (bad) mov and xor lret in sbb jecxz or mov adc movsl mov inc stos xchg lock cmp (bad) incl cmp mov (bad) (bad) jo jecxz loopne (bad) (bad) cmp xor call (bad) or cld pusha mov lock pop xor in mov (bad) (bad) ljmp cld lds and jle mov jo bound decb incl add adc imul cmc pop cmp sub pop cli repnz push sub jecxz jg (bad) (bad) dec popf in mov rcr lahf jmp mov push cmp push xchg fs pop lock aas (bad) jmp cmp shr cwtl (bad) xor or fcos (bad) (bad) decl xchg lret dec ret sbb dec lret inc enter xor and mov add inc (bad) jmp inc jns add add mov aaa loope sbb aad (bad) dec inc or xchg cmpsb push jne,pn and inc xor pop mov sbb mov (bad) jg xlat fidiv out jmp pop mov pop mov popa (bad) (bad) (bad) decl mov int test cli and cld jmp jbe jb sub (bad) (bad) dec iret sbb jle add imul sub in sahf mov repz xchg (bad) (bad) (bad) jnp idivl je xchg fwait mov mov ljmp out (bad) enter imul out sbbl mov xchg ret xchg dec xchg jne push pop out arpl mov push insl jne pop cmpsl xchg fiaddl data16 int3 sbb int3 test jno sbb (bad) and pushl dec push arpl push cmp das int3 mov hlt ss inc cmpsb fistp repnz mov ss mov bound (bad) (bad) (bad) decl insl xor mov sbb add cmc das mov xchg test loope (bad) (bad) decl divl addr16 cs dec push ror lahf push sbb aam fisubl ljmp out (bad) ss push (bad) jae or sub outsb mov scas insb jns ret popa fwait xchg sar into (bad) (bad) jmp or cld push sub (bad) mov inc cmp mov notl mov sub (bad) mov aam ret fstpt imulb out lcall sar int3 lret test pop dec push test test imul (bad) (bad) jmp lock es push (bad) or in inc push sbb loop xor mov jno ljmp test dec xor push in ficom xor (bad) popa sub fstpl (bad) (bad) (bad) pop jo push jnp cmp shrl fisubrl jmp xor std (bad) ljmp les std push fcomps pushf mov xlat mov add ja lret in sahf fucom fstpl xchg dec out push pop push test (bad) ljmp test xchg xchg and mov lds xchg mov mov mov pushl lods inc jmp aam mov test test xchg (bad) jg loop dec test mov add sub xor test cltd clc incl xchg adc pop mov push cld aad repz ret sub stc ljmp xchg adc lock idiv (bad) mov push add ljmp sahf not fdiv push fmull sbb jnp mov xchg mov lcall movsl (bad) (bad) pop loop lcall das and out enter outsb les flds dec cli ljmp decl js xchg xchg lods dec pop (bad) adc dec fdivrs les int3 dec fs clc (bad) lcall push lds push sbb jno pop jnp nop loope mov mov mov hlt inc pop inc jmp gs dec stos or fsubrp sbb (bad) loope (bad) (bad) (bad) ljmp test mov jmp lock push dec fdivp insb add mov mov imul std jmp sub xchg mov outsl jg dec loopne pop (bad) (bad) (bad) lcall push dec cld repnz movl adcb out stc push lret (bad) ljmp fisttp add sbb adc (bad) (bad) lcall pop xchg cmp and pop sub xchg jmp scas ret std dec sub fstpl jmp cmp or repnz jbe test notl (bad) (bad) jg cmp jecxz xchg mov loope mov xchg push cld (bad) jmp adc imul sbb pop inc andl aas cmp xchg or xchg movsb out mov lcall (bad) (bad) decl pop ret mov and rcr in outsb mov pop cmc inc scas push lea and push xor les mov rcll push (bad) out push lea imul mov out mov out (bad) ret aaa addr16 cmp decl push mov sbb aad cmp mov addb (bad) lcall test (bad) aad mov cwtl mov xor (bad) (bad) cld sbb leave pop inc cmc lods mov mov aad push add dec jl pop xor std push std pop stc dec dec jle arpl je adc xchg mov inc ret repnz mov cs (bad) ja out jmp int cwtl movsl pop push dec mov cmpsb mov (bad) stc add movsb test dec jge (bad) mov xchg jno jg incl repz scas (bad) fnsave adc gs sahf fcomi ret mov add (bad) mov jle aam (bad) in or (bad) (bad) call sub jp test dec adc adc (bad) cwtl lea (bad) inc inc cmp (bad) adc or ret lret inc aad shl xchg jp jae (bad) cmp jge or (bad) in push cmp mov (bad) (bad) (bad) (bad) call shr push dec jmp (bad) and mov fcmovne cmp aad add insb and mov sbb mov out push xor cld push xchg push (bad) incl out adc mov mov call ss (bad) decl mov arpl lahf gs cwtl (bad) test fnsave out jg xchg adc repnz inc add dec push cmp loopne lock les stos sahf data16 decb mov stc and jo pop push dec jg hlt ljmp pushl aas das lds repz int (bad) (bad) (bad) out lret add add push jnp xchg lods inc jb dec mov (bad) push fdivs push inc mov add arpl (bad) (bad) (bad) jg movsb pop pop mov aad inc dec jp shll scas mov test (bad) mov aad mov push out aad pop push add mov mov (bad) (bad) decl ds fisub aas int xchg xor loope pushf add (bad) (bad) incl add mov loop lds in push jo popa and pushf das sarb pushf pop mov jne add push xchg mov fs cmp sar popf stos ljmp pusha pop in sub cs jg mov or cld or mov (bad) decl repz xchg mov ret jle mov mov xor add popf imul jg inc mov mov (bad) sub mov xchg clc dec rclb testb lahf loope pop cmp jbe add loopne lods pop cmpb mov les pushf lret add lcall fs xor push mov cmp (bad) lcall cld or mov inc adc stc (bad) dec adc or lock (bad) decl push in sub mov jo arpl sbb loopne or shrl adc fwait pop rcll inc inc js xchg test (bad) add das (bad) (bad) (bad) (bad) out aas sbb call push out jg jecxz imul mov pop xor enter push inc mov xchg fwait xchg inc movb inc mov (bad) mov decl (bad) xchg jp adc test cmpsl cmpsl push bound stos sbb xchg xchg jno hlt (bad) jg cld outsl lret aam jecxz aas push inc icebp aaa in jne pop dec and es (bad) (bad) jmp pop insb shll push movsl xchg leave rcrb roll jg testl add lods cmpsl jo xor and jp adc out mov rcr dec shl hlt adc pop push inc jecxz (bad) movsb sub and incl sbb shrl cli scas mov arpl cmp cld daa lods mov pusha mov (bad) sbb (bad) push std clc pusha lock (bad) call sub and dec bnd shl mov out add rcrl add mov or pop int inc rolb sub push dec loope shrd (bad) (bad) (bad) call movsl inc push lea into cvtdq2ps pushf stos sub lahf dec pop (bad) daa push cmp push (bad) (bad) lock sbb lcall dec mov aas into out arpl xchg data16 (bad) (bad) jmp shrb lds gs in imul (bad) jo mov clc out dec and (bad) pop xchg sbb mov (bad) (bad) (bad) (bad) jmp xchg (bad) mov and push cltd out jo outsb loope fisubrl xor xchg test into jmp jg incl dec leave hlt xchg cmp jo loope xor mov (bad) (bad) mov jno or dec notl test inc in fnsave inc scas push into (bad) clc jae hlt or (bad) call and inc enter mov jnp iret cld (bad) (bad) jg cld pusha out loop fs cmc push mov shrl icebp pop dec lretw test aaa scas dec movsb (bad) pushl decb mov and movsl lea xor inc cs sahf in (bad) (bad) inc jl xchg cmpl std mov roll push cld adc inc add push repz push push shl js xor pop add xorb lcall mov (bad) jg sbb stos repz xor shlb sbb test pop (bad) (bad) (bad) incl dec push mov jp dec add das mov xor dec fcom (bad) mov les das xor or xor insl leave jmp jae mov ja jmp pop addr16 dec adc or into adc std dec mov call data16 jmp mov and loope mov sti cld mov shll aaa call (bad) (bad) (bad) call push push add push repnz mov or pop xchg mov insl and loope dec cmp aas mov xchg out popf rol or lock in in jle or sbb clc (bad) push cmc test or xchg or scas jle pop shl inc mov cmp push push jo ret push mov (bad) xchg xor (bad) push out pop (bad) (bad) pushl out les inc outsb push jle push xor mov in popf pop sbb and das (bad) (bad) incl mov mov sbb (bad) jge mov cmc out aad lret imul (bad) call or sti mov or and mov fiadd dec clc ljmp cld (bad) cld (bad) pushl inc mov xchg das scas fldcw inc popa scas xor sbb add idiv ljmp hlt push pusha jecxz arpl fldenv rolb test popf cmp ja (bad) (bad) incl rcrl icebp jmp dec or xor das (bad) (bad) (bad) aas pop in sarb mov sbb push stos xor insb mov cld (bad) (bad) call or loop mov sbb xchg icebp popa cmc adc test cmp (bad) (bad) decl mov pop or jno lods mov pushf cmp mov int in jg cmc jo repz shrb jle dec mov mov inc std decl push or push jne and sbb mov es (bad) pushl shrb mov cwtl (bad) xor daa pop stc in or dec jmp loop cmpsb mov jmp sarl shrb sarb (bad) (bad) decl push frstor mov int3 loop cmp gs xchg inc pop xchg push jmp jecxz cmpsb call push or punpckhbw pop xor dec jne enter adc mov sbb lods inc (bad) jnp ret nop jns cmc (bad) call jl pmulhuw loop pop loope sbb xchg mov (bad) mov (bad) aas mov popf cmpsb mov inc jns add rclb push dec std xchg mov (bad) inc std jmp sti lahf das sbb bound mov lcall or test ljmp jmp push push sub push icebp or adc test ja mov push add leave or lods loop stos push insl push fnstcw push fcomip mov (bad) call mov pusha test test popf jmp call add push push pop sti in cld jbe (bad) lock sbb push aam stc mov pushl xchg push or push jno or inc movd mov (bad) lcall stos cmpsb adc gs mov (bad) cli jno mov imulb les (bad) out int3 repz jae fidivrl repnz push add jno js cmp cltd lods push add mov adc jg std (bad) lcall stos jnp int3 les jae cs xor inc sub (bad) repnz out loope jb,pn fldenv ficoml imull (bad) (bad) jg fdivrl xor stc dec loopne jge es leave les popf adc out push xor (bad) call jo stos insb push add lcall popf lret stc lea lret pop adc lcall iret jge adc push inc or and jg (bad) (bad) (bad) decl pop fcmovne sbb jmp sub das dec inc inc adc push push xchg inc adc cmp movsb sub xor add stc rcrb cmp inc cmp and or pop pop out sbb dec sub js imul sti decl jge in out ss scas sub jge pop push sahf push (bad) push out xchg inc je lcall mov aam popf cmp sbb (bad) (bad) push push sbb adc dec jns or and icebp insb iret mov (bad) (bad) pushl jge pop dec pop ljmp lcall sbb jecxz sbb fwait (bad) (bad) incl jecxz pusha scas cmc or bound gs loop test lock sbb scas arpl mov outsl outsb insl std or rclb jns flds lods add sbb clc xor mov push pop dec popf xchg loopne xchg xlat mov sbb jne add cmp jmp xor ja popa push fcoms ret ja ljmp insb lock mov stc std (bad) out jne fcmove ret lea jmp (bad) xchg and or inc jne mov fs (bad) incl cmp aaa and movsl push inc xchg lods or fwait push in pushf in ja sbb mov lcall decl cmp ljmp lret outsl jno arpl push scas std subb rorl mov out pop sbb in (bad) mov inc mov xchg mov jl sbb xor (bad) (bad) (bad) (bad) mov dec xchg pop ljmp lret cs push enter roll and push add (bad) pushl mov jbe jmp int out loope lods sti loopne (bad) (bad) (bad) jg dec jnp sub ret adcl xor pop jle dec scas gs jae xor mov mov dec and push std (bad) mov rcl clc rcll mov pop stc push jl bound sbb call xchg adc ret loope dec dec adc insb loope xchg xor jl sbb (bad) lcall (bad) fldz gs lcall cmp (bad) (bad) ljmp sbb adc out in mov arpl mov leave xor add sbb test repnz (bad) jmp stos push xchg cmp call xchg xchg xor jge daa push (bad) data16 idiv aas aas pop mov jo fstpl repnz add push (bad) or (bad) incl arpl cmp rol mov fwait pop adc cmpsb js (bad) (bad) jg lods icebp (bad) std ja or sar or jmp and (bad) (bad) call (bad) mov lahf adc cmc ffree dec cli cwtl (bad) jg fidivl push hlt jg loopne mov push fnstcw lea lcall (bad) cmpsl inc or mov sub fildl pop xchg cli fcompl mov jp jge jae jg cld (bad) jns loope int3 mov mov pop loope mov es add pop adc pop and shll or lcall dec adc push std and pop cmpsb add push rorl dec leave jg pushl (bad) inc insb cmpsl mov aam popa adc push mov pop jbe (bad) (bad) (bad) pushl mov mov adc jl push xchg into xor (bad) notb (bad) mov cld mov daa loope fwait aam js push lahf fistpll cmp rcrb mov mov (bad) jmp push xor outsl adc mov into sbb das (bad) (bad) (bad) aas and cmpsb vmovdqu call sub out test (bad) aas inc scas pop int3 fistl mov lds jae int pop loope lcall pushf int3 repz call mov jl and stos rcrb out cmp (bad) (bad) ljmp cmp stc lds pop fnstsw mov mov fdivr cmc and inc pusha lods decl mov or mov or jmp adc xchg xchg (bad) (bad) (bad) decl or dec loope lcall iret mov icebp bound add (bad) (bad) jg out jl jge js loope,pn imul data16 sbb jo lret (bad) (bad) ljmp xor and add aad lods repnz outsb cmp out fs (bad) jmp mov in dec dec sbb push loop jl pop mov jmp xor pop dec (bad) aad xchg push int loopne or loopne call sti cmp push and out dec test jno and (bad) fwait jle mov inc push dec xchg pop icebp xor (bad) (bad) jnp push lods sbb push push and push xchg mov outsb mov adc pushl or pop inc sahf repz adc push outsb popa inc jne incl std adc sbb pushf repnz xchg scas (bad) (bad) (bad) incl inc inc leave in mov push xor int3 mov jl subps incl test fst mov push lret xchg mov (bad) (bad) decl lds in cmp lcall lret pop or (bad) push sar (bad) aas repnz inc jbe ret je xchg xchg push sahf les out imull mov (bad) (bad) lcall xchg lods add mov pop aam loope dec repz pop dec inc nop dec call nop xor out pop mov ret cmp movsl (bad) (bad) (bad) decl cmp pop push push add push jmp vpsrad cmp mov fcmovbe jb pop aam out xor mov xchg repz insb out jle pop in notb movsl cmc in insl fcmovnb lret cmp push roll xchg shr xchg jecxz sbb imul jmp pop int3 out insl adc es aaa dec ret sbb inc flds int3 daa dec (bad) notl jecxz sahf (bad) (bad) (bad) pushl fstps out (bad) out adc xchg xor cmp jne dec dec andb repnz sbb adc mov enter (bad) aam out jno fisubl jbe inc inc hlt xor shrl inc lcall jge les pop cmc cmp lret mov jge sahf pop push sub (bad) fnstcw sub or jl xchg aad jmp incl movsl or int3 push mov lahf fsub lahf ds fldenv pop nop dec ss cli (bad) (bad) cmp push push sbb jnp inc sarl stc mov cli lcall dec push add ja shr (bad) ret (bad) fisttp rorl cltd popa mov jns xor arpl es jg cld sbb movsl fcmovne pushf mov lock adc ret call cld incl mov sbb ror pushf aaa lock icebp or fldenv jp ret push (bad) jg aas add and (bad) ss xchg in (bad) pushl std in jmp das aam in jno jae iret lret lds imul mov add std aad xchg jmp pop jne (bad) ret pushf jmp mov (bad) jmp xor xor jge pop lds pop pandn aam inc pusha pop andl mov ret stc int dec add mov cmpsl (bad) (bad) (bad) decl jne test andl pop out push daa test in (bad) clc push xchg pushf add lret mov add inc dec xchg loope dec (bad) (bad) (bad) (bad) jnp cmp dec adc scas idivl sbb and (bad) (bad) (bad) (bad) out add or jp (bad) iret (bad) pusha and sahf jmp out (bad) (bad) inc frstor sub pushf lret aam dec enter mov jno jmp lret in sbb test xchg sub and dec xchg sub (bad) (bad) jg fsubr mov jmp mov out idivb push sbb rcll dec repz jge loope out cwtl inc bnd adc adc (bad) jmp push pop out and pop mov cmc jge pop call (bad) mov fdivrl dec (bad) lret cmc aad out mov (bad) xor jle or push aam add inc scas jecxz inc mov mov add xorl (bad) xor pop kmovd sti cmpsb stos int3 xchg (bad) (bad) jg xor dec inc clc pop xchg (bad) fbld jne int3 add cli lcall or xchg leave lcall (bad) (bad) ljmp cmpsl sub xchg les into mov std pop push push mov pushl dec mov dec dec xchg dec jmp cmpsb dec in fcoms mov add repz inc (bad) mov push ljmp call pop in push repnz loope aad addr16 aam dec cmpsb repz (bad) (bad) (bad) jmp mov inc jae or pop je push xor xchg mov or xor imul lds cld (bad) inc stos ucomiss pop pop fcoms or mov mov mov and insl push cmp pushf sub pop outsl mov jg lret (bad) (bad) call insb sarb rcll (bad) div pop mov mov into ljmp ficomp mov in stc mov (bad) mov (bad) adc (bad) xor (bad) (bad) lcall out sub mov repnz test dec dec (bad) ljmp cli fnop cmp xorl or xchg out into andl (bad) (bad) jmp or (bad) (bad) aad ljmp lldt repz mov sbb test incl sbb adc loopne les das (bad) fcmovu jmp push jl (bad) (bad) (bad) jmp pop lds or cs into push add and jb lahf sar jne (bad) je jns xchg ja inc mov outsb mov add decl loop out add outsb xchg je add loopne jmp inc and or mov arpl mov aad jb jmp adc stc or ficompl xor adc xchg pop lock mov ret ljmp rcll imulb fisttp std ljmp push js xchg sub lahf (bad) clc dec pushf lds (bad) (bad) (bad) mov mov push push push and push stc jg pop or sbb mov decl incb push inc mov nop mov and into sarb lcall dec cltd mov add mov repz push add jno pop cmc dec repnz adc roll xchg mov stc cmpsl (bad) decl pushf jb add (bad) outsl push insl mov shll pop (bad) std (bad) ljmp add fstps pop test stos popf int3 push ja cmc sub jg ror xor insl popa sbb decl jp dec xchg into xor push (bad) (bad) (bad) call push rcrw lret adc lahf dec jle (bad) mov pushf adc xchg xchg xchg iret fbstp xchg ret push mov mov (bad) jg cmp dec and cld icebp and adc mov fld jbe add pop frstor adc sbb jmp call jmp jmp mov les mov out fnop lcall push dec imul lods or (bad) dec xor rorl mov mov call cli cmp sub daa push nop mov xor test cmp ljmp sbb sbb mov das cli lods jno loop sub jecxz lcall push inc pop push lods dec jecxz mov dec pop or (bad) aas mov or fcmovb gs gs loopne,pt popf push jge mov aaa cld pop stos (bad) rcll inc (bad) fcomps dec popf ror xchg sbb sub jmp dec or push call movsb popa outsl push xlat push aad mov xchg mov pushl lcall cmp movsl addl ror arpl jb test (bad) decl hlt adc inc (bad) movsl mov adc in test xchg (bad) (bad) (bad) decl add hlt clc xor pop inc leave sbb pop jmp outsl rcll ljmp into clc stos in (bad) dec sub inc push aaa dec popa scas shrl (bad) jge jbe cli lcall (bad) (bad) jmp sub pop jg dec push cmp imul dec hlt (bad) pop and les fwait pop mov pop ret inc xlat mov xchg add push mov js and jnp mov mov (bad) (bad) (bad) (bad) mov jns out pop add mov add adc xchg cli sub mov push lahf add int3 rcrb ret iret sub mov iret push push (bad) decl outsb (bad) mov jle imull (bad) repz fistl das cld add xor cmpl inc call lock dec mov (bad) push (bad) (bad) (bad) ljmp push mov sub in lods (bad) imul test mov and std stos push std xchg stc (bad) lcall add clc pop xor push dec dec adc inc stos (bad) pushl dec jl fist test test push push (bad) (bad) (bad) ljmp mov mov xor adc ret mov jnp xor (bad) aas adc or ret enter adc mov aam fstpl (bad) ljmp sbb push dec xchg push divb add jae dec aam xchg in hlt shr adc sbb ret lods cmpsb in dec daa mov xchg adc decl arpl mov adc lret (bad) sbb or daa (bad) (bad) incl push scas mov pop and hlt int movsl rclb xor sub in cld outsb stos (bad) (bad) (bad) aas cs and jns dec pusha imul pop das jle push inc cmpsl pop xchg test (bad) (bad) (bad) lcall adc (bad) (bad) popf cmp jp mov mov cmp incl stos fucomp sbb xor pop inc mov lds push dec rclb clc xchg push outsl add mov mov jb dec (bad) popf (bad) out mov bound lock (bad) sub pop (bad) (bad) (bad) (bad) fisubrl aam aad inc jae (bad) mov int3 add adc outsb jnp fwait es (bad) lcall cli dec push adc in repnz into and sub pushl in fisttpl pop or scas scas popaw dec sub ja and (bad) (bad) incl test fdivs pop xchg out mov push push pop shr and into pop test ret adc mov jne mov mov (bad) (bad) incl dec cmpsl mov dec loope xor clc fbstp mov test ret and pop cmp jmp (bad) dec cmp loope add mov pop call incl mov push xor mov mov xor dec jb push jb into jns repnz std ljmp xlat popf jns fcmovnu test adc jl sarb nop lahf and cli jg cmc hlt out pop mov dec jl mov fs scas ljmp movsb jmp push jmp adc jle pop push cld sbb je in push mov lea in test (bad) fnstsw lret add or adc test (bad) pushl mov js fs inc lock xor mov add push jo icebp push sbb scas and loop pop aas fiaddl jmp out andb fild (bad) mov mov in jg imul and aad lret add sahf adc test data16 aam mov lock and add icebp sub push xchg add (bad) (bad) (bad) jmp ret inc jne loopne pop xor push cmc (bad) sbb jmp push adc enter jg pop fsubr push dec cmp int pop cmc mov (bad) (bad) lcall nop pushf mov in imul mov insb es push or sub jge popf sub (bad) fbld fdivrl jge fstps (bad) (bad) lcall dec cmp fimul test adc xor flds popf nop (bad) mull cmp inc push pop jno inc add out sbb imul pop pop add mov push (bad) (bad) (bad) (bad) call loope cmp jno pop push sahf fidivr mov or dec in in dec test (bad) jg ljmp iret imul adc sti add (bad) (bad) (bad) js push fiadd sbb stc das adc mov xor lods dec dec jle mov (bad) jg dec pop test mov fidivr dec (bad) inc popf test (bad) (bad) inc imul sbb inc ffree lds in test mov bound not (bad) in push mov (bad) idiv push push sbb pusha pop xchg clc inc lret test and enter sar (bad) decl mov mov or addl movb dec push pushf mov test or leave (bad) (bad) mov loope bnd xor push cmp loopne inc xchg jno aas fbstp adc test lds insl push pop loopne dec dec movsl lds (bad) js cld or jae push and jns fwait sahf aaa dec mov xlat lret (bad) stc adc fwait (bad) pushl adc sbb data16 xor test xchg mov cli (bad) mov adc ljmp je mov pop cld lahf mov (bad) (bad) ja stos inc xor (bad) (bad) (bad) (bad) jnp jmp adc sti jnp frstor cmpsl sbb adc je decl mov fcmovnu jnp outsl jb rcll cmpps adc push adcl aaa cld (bad) jnp mov mov scas adc ret sbb pop test aaa ret call push movq imul decl ss and out lret xchg jmp in dec dec fwait xchg cmpsb je hlt (bad) call inc dec xchg fimul stc pop imul cwtl and (bad) mov inc cmpsb enter mov test pushf ret addr16 decl cwtl or loope dec in (bad) xor mov xlat loope mov and xlat push add sarl and inc cmc (bad) (bad) (bad) jmp loop arpl lock mov cmp bnd inc dec jecxz xor (bad) jnp dec (bad) call cmc arpl mov mov das movsl mov mov repz or adc dec adc pop (bad) push roll pushl inc adc push test mov ret gs lcall and push imul (bad) scas mov ss sub in jecxz adc add loopne adc outsl (bad) pushl out iret (bad) gs mov les cmp (bad) call loope rolb lcall dec repnz jge inc loopne fs (bad) (bad) (bad) (bad) fistp fsubs rolb leave jns gs inc push or cmp (bad) (bad) call push outsl pushf aam into add mov push push (bad) xor and push clc aaa iret pop loope bound inc mov mov sbbl hlt (bad) (bad) aas add jge inc lea loope test fcmovne lcall sub mov aaa jnp pop dec outsb push adc (bad) clc aam (bad) jmp jns decl dec in and (bad) (bad) pushl or xor or (bad) sub dec pop gs hlt das cmp (bad) decl fnstsw leave stos pop push lret test mov sub ljmp mov jno (bad) and mov pusha cld inc add ss push std leave and dec dec sarl xor cli (bad) jmp or pop test lret dec lret add mov (bad) (bad) cmp mov cwtl mov (bad) jmp sbbl fsub leave lcall xchg (bad) (bad) jmp push fs dec gs loop cmc xchg mov jo test (bad) (bad) (bad) jmp out fwait repnz sbb pop sahf sbb pop loop pop mov jmp stos pop inc (bad) (bad) decl mov jne pop jb mov outsb fwait ds loop (bad) (bad) incl push xchg out sbb fisubrl or mov aad test in aaa sub out sbb pop fcomps loope out test push push stc jo js movsb rol adc sub or outsb (bad) into inc or jo (bad) mov call cli dec mov cmp ficoml cmp (bad) (bad) jmp cmpsb and (bad) repnz jnp js popa mov repnz pusha fiadd out ljmp xor push (bad) nop (bad) enter loope mov mov mov mov xchg sbb jge repz (bad) ja (bad) hlt mov cld in ficomp dec mov (bad) ljmp cmp mov out cmp mov ljmp stc cmpsb ds jp push lret pop mov dec mov in jmp ret mov pop sbb jg fistl adc lds je push scas mov jb insb imul (bad) inc iret inc pop nop cmc push frstor pop (bad) int push inc sbb sub add mov (bad) (bad) lcall jmp outsb push and shr dec aaa sar jae push lods mov cmp xor stc (bad) (bad) pushl add (bad) push dec push mov ss jne scas call sbb (bad) (bad) aas adcl dec arpl mov xchg inc cmp imul push jno and sbb adc clc out add mov dec sbb fildll scas clc fs jl mov fdiv ficom into call cmp (bad) (bad) push pop aad cmp xchg out inc push jo push jne repnz sub inc cli push loope into test xor lahf out lods and lods pop fcoms lock (bad) jmp test je push (bad) xor xchg pop (bad) jmp inc pop pop xchg fidivrl xchg fdivrs (bad) je ljmp pop ljmp inc push adc and popa cmp loopne sub jo fs mov (bad) jmp jno (bad) jmp cwtl int3 mov lahf jecxz xor jg das mov dec push enter or arpl outsl jbe mov mov enter decl adc add sbb outsl push test (bad) aas ret pop stos sbb stos hlt repz ljmp jmp (bad) (bad) decl jg sub (bad) mov or loopne pop sub mov sub stc mov repnz mov test cmp sbb mov call mov or pop stos pop cmp out add aam clc incl pop aad or loopne (bad) (bad) incl jmp scas movsb test jmp (bad) shll ljmp in (bad) ljmp loope cli icebp xchg lret or or imul mov adc scas xchg cli (bad) (bad) jg inc jae ficoml xchg outsl push int mov fbld xchg ljmp xchg ret data16 rcrb lea out (bad) lds xchg pop cld lahf ret (bad) lcall addr16 jmp xor xor xchg jg mov xchg mov pop fdivrp push lea aam push jl or jno dec in lret adc insb inc ljmp add or test sub jge nop je (bad) (bad) inc popa jne fcompl loope cwtl adc xchg sbb lahf ljmp (bad) jg std pop loope lds lds (bad) les lods (bad) (bad) (bad) decl xor sbb adc inc test sub sbb adc mov pop insb sar pop stc call add rcr sbb jg dec mov inc ljmp loop (bad) (bad) (bad) jmp loope popf fsubr sarl mov (bad) lcall push inc aad dec jl call push jmp inc arpl scas (bad) jne daa (bad) jg gs and movsb xor (bad) pop lods ret mov loope cmp (bad) (bad) incl loopne adc add call jno fistp add xchg aad push ds incl loop pop sub es xchg aad rcrl ret jb jge mov (bad) (bad) decl outsl xor mov outsb scas or fucomip xchg xor mov mov idiv call pop jnp push stc out sbb ret cmp dec bnd pop loopne outsb adc or out roll loope ljmp (bad) aaa pop test decl mov mov incl jmp push inc stos ret push clc or adc rclb ror test (bad) call jne inc adc xor daa push leave hlt push inc imul sar mov scas lcall mov repnz pop pop jp mov adc xor (bad) (bad) lcall andl pop outsl pop push pushf mov and mov xor inc (bad) jmp push fcmovu sub int push sbb and pop mov (bad) (bad) (bad) jmp call or fnstenv adc (bad) rcrl mov lahf cld or mov es adc fucompp (bad) lahf (bad) (bad) (bad) mov jp dec inc add (bad) push adc out push int add lcall shll je mov fstl (bad) (bad) pushl xlat inc dec rcll test dec imul popa mov push fs jmp loop rcrb jge cli pushl js mov push jne stc arpl or mov mov sub out popa jo mov fwait mov xchg inc nop hlt cmp or (bad) ljmp mov cmp test test ja imul jg loope push mov dec pop in sub popa jbe lds jecxz loop clc (bad) call lods les inc lret push hlt ljmp (bad) mov ljmp pop sub (bad) mov xlat cmp lock push push rol (bad) jns cwtl push scas test jecxz scas xor adc lds (bad) jge xchg repnz aam loope jb jns dec cmc jmp xchg les pop jns ret negb shll sahf and gs xchg push in or or jns int sbb mov push loope pop decl rcl test xchg test (bad) maxps pop out cld cmp (bad) (bad) stc cwtl pop sqrtps lock insb mov test or mov cmpsl (bad) (bad) loop lahf cld jmp or aam cmc mov imul pop jo in inc fdivs (bad) (bad) (bad) aas sbbb sbb push imulb (bad) jmp int3 loopne pop hlt out mov scas jp jg sub jb icebp enter (bad) decl cmp add mov mov mul sbb add fcomps cli inc inc aad ljmp push or jg xchg idiv add sbb cltd out dec ja jge test jp hlt or (bad) (bad) (bad) call (bad) aas in scas or push pop inc sub xor jg shlb popf shl inc pop jmp push shl test lahf or xchg dec cmp sub mov fldcw jmp push lcall icebp fs ss inc mov or cld fstl je jnp mov adc pop jg (bad) cs out mov mov scas xchg sub repnz push (bad) bound mov mov in pop es int3 jge xchg (bad) or pop out rorl dec int3 shld mov lret (bad) push call pop adc pop sbb inc call rorb add mov pop loop pop shr push adc (bad) (bad) cmp xchg mov xor lret mov out cli ja test inc (bad) fidivrl je pop pushf pop jns (bad) mov clc (bad) (bad) decl cmp sahf lock icebp push insl sub dec adc inc pop mov std cmp lahf add fidiv dec lret mov in adc ficompl inc dec sub (bad) (bad) inc popf out ja and movsl push fidivrl arpl aam sbbl mov (bad) jmp std dec xchg in adc xlat sbb gs pop mov ljmp cltd stc sbb cmc sub jmp pop inc mov or xchg mov nop (bad) xor lcall stc incl inc inc inc sub mov or ljmp jns out loopne mov cmovge jnp pop inc shrl fcomps je mov push (bad) outsb add mov fist insb dec jmp cmp les add outsl (bad) (bad) (bad) inc je jp and fldl and xchg bnd out enter (bad) stc (bad) mov jae out jb lcall stos sti arpl in cmp jno (bad) jge stos add jae (bad) cltd jmp (bad) (bad) (bad) incl rcrl mov inc xchg fwait mov xor mov pop out xor ror cmp jmp mov and loope popa (bad) mov pop popa fidivl push sub (bad) (bad) (bad) incl cmp in fisttpll rcrb cmp je loope or lods jbe jmp mov jmp ljmp in stc inc xchg or cmpl push lahf add insl (bad) (bad) (bad) mov mov dec in cmp in out sbb fwait mov fidivr lock iret inc cld pushl test mov aad es (bad) (bad) inc inc xchg and add jmp add lcall add adc (bad) incl mov call mov lock sub lcall dec inc xchg mov das mov lret (bad) (bad) jg pop inc push ja das add dec inc push xchg pop mov cmp cmpsl xchg jbe sbb into incl sar fsubrp jne pop (bad) cmp xchg hlt sbb jns (bad) (bad) (bad) (bad) call lcall int3 pushf mov lcall inc sbb lea das (bad) jmp (bad) call inc cmp clc or inc pop iret scas (bad) fist mov je mov pushf loope add push test dec (bad) (bad) (bad) call popf mov inc fs in push pop push cmp mov je jmp xchg imul sbb out dec lock (bad) call aam mov push xor sub adc lret adc pop sub sbb int3 sbb (bad) (bad) call mov inc test mov ret inc mov inc or mov (bad) decl xchg xchg ret std jnp inc jno pop call or and lcall fadds js adc ret and cmp xor xor stos or mov sahf je jge pop jl or fcomip and dec lret add jno add adc pop add lds sub fstpl in jge fcompl add xchg mov dec negb in sbb les jmp push mov push in add push je pop cmp push jg es inc scas clc ss cmpsl cmp imul jg jg mov mov xchg hlt xor stos dec adc jo rorl cmp out (bad) movsl arpl test ret rcll cli cwtl ja adc sbb mov testb cmpsl js test (bad) (bad) incl lods adc in xchg or jl sbb aaa (bad) (bad) (bad) (bad) fldl (bad) aad cmp or sub inc sbb xor (bad) fstps push xchg dec in cmp xchg sub jge scas mov xor cwtl jg ret add addr16 cld pushl mov aas mov fbld pop and xchg dec fs or adc (bad) pushl popf xor xchg mov les xchg lret call stos insl jo jge (bad) jg sub lcall sahf fmuls lods call add movsb xor inc sti lcall inc or mov out dec xchg inc cli dec das fnstsw aam je mov push lcall jmp (bad) mov pop cld cmpsb icebp jg add lock fsubp fwait popa fdivl (bad) (bad) lcall adc and scas sbb pushf xorl int in ja test xchg pop or pushl xchg pushf and push xchg cmp (bad) out (bad) (bad) incl mov adcb shrl notl jge dec mov cli mov jmp sar xchg jg jecxz ret loopne xchg jmp push je bnd cmpsb pushl cld lcall add cmp or (bad) notb mov sti (bad) ja je or pop mov clc dec cld (bad) (bad) (bad) (bad) jmp inc or or jecxz mov insb outsb (bad) pusha push mov out enter (bad) dec sub repz test mov mov scas dec lods pop std (bad) decl jns sbb loop movsb inc aad mov test addb adc nop stos inc pop mov (bad) (bad) incl cltd aam rcrl mov mov aad enter aam fstl repz fcomip (bad) out jmp ljmp pop dec push int3 xchg mov xor mov icebp pop adc int3 xchg test addr16 inc (bad) (bad) ficom ljmp cmc mov lahf mov call call xor (bad) mov jmp jmp int3 xchg movsl iret lds push push or lcall or out stos mov mov test jl nop cmp inc mov inc sbb and (bad) (bad) decl in pushf (bad) enter lret aam xchg or (bad) lahf mov outsb cld inc inc cmp cmp int3 lahf xor push xchg jo cli push lds xchg ret mov sub fwait loopne (bad) (bad) (bad) decl sbb cmp jne imul fsubrp pop push inc mov out js ret sahf (bad) (bad) (bad) in pushf fimul jns lds inc jnp mov lea jge fild jl popf mov sbb cmpsb add fistl loopne mov push inc inc out xor out rol or enter bound (bad) cmp dec inc and (bad) js push adc mov fbld jl inc xchg push or decb (bad) aam mov out icebp test loopne,pn or popf jmp std pop cmc mov fdivrs sub lahf sub push inc in (bad) (bad) (bad) (bad) jmp insl outsl std rcrl pop push jb push scas dec jo leave (bad) ds jg into in sbb jnp push push mov scas dec mov mov out mov and pusha js xchg pop (bad) (bad) ljmp xor andb mov inc fldenv cwtl (bad) jmp mov or fistpll (bad) pop sub dec cld dec xor outsl cli (bad) call test gs sub cmp jl inc stos push pushl hlt decl mov in adc inc movsl cmp jecxz dec ljmp sub cmpl dec dec xlat imul mov in (bad) aas pop mov insl jne sub lea jmp lods pop rcrl xchg xchg and (bad) (bad) (bad) (bad) cmp lock fisubrl fdivs jg shrl fnstcw cwtl cli or xchg (bad) pushl int aam and (bad) sub int hlt sbbl lret (bad) decl push aas (bad) fbstp add sbb pop call pop jbe in mov in repnz inc clc (bad) cld hlt pushf jmp lahf (bad) add or lcall dec and nop icebp dec mov jmp mov lcall fist sahf (bad) xor aas push mov stc jl popf pop mov mov lcall incl (bad) xchg mov adc inc in pop sbb imul (bad) lahf data16 (bad) (bad) ljmp sbb dec xor push jle aaa xchg push mov xor popa bsr outsb jo push clc repz dec and iret dec aas mov push (bad) dec in nop cli jmp mov push fisttp in or sbb insl std adc test pop push mov pop jecxz adc jmp adc aaa js nop or pop push dec insl (bad) repnz (bad) call ljmp out jle cmp sahf mov cmpsl cmovp outsb (bad) xor ret sub incl loop ds scas icebp mov xor (bad) (bad) (bad) ljmp flds mov sub cmpsb (bad) in es outsl jne mov cmp jnp add pushl movsl insb add sub mov xor (bad) (bad) (bad) jle lret int or ret adc subb subb fnop mov aaa inc dec lahf jnp ja shl out mov dec adc dec (bad) pushl mov out mov inc xlat mov sub (bad) (bad) (bad) (bad) mov xchg inc mov or repz jne aad cmp ds stos clc push rclb stos (bad) cmp gs (bad) ljmp mov loopne ljmp jl stos sbb lds mov lahf cld lcall push xlat imul dec add add inc pop mov lcall pop roll mov or es (bad) sbb or cmp (bad) inc divl pop pop jmp fisubr push mov mov sbb push dec (bad) (bad) (bad) lcall xor add xor mov (bad) repz into test jnp jmp sub ds jmp xchg fwait jmp and xor fildl out push push std imul mov (bad) insb mov cmc scas stc (bad) mov xchg and dec jecxz xor dec out insl out cmp pop cmpb jns or out imul mov (bad) jmp loope std or in std rorb cld dec push aad (bad) (bad) (bad) decl jle loopne rcrl (bad) xchg adc test call ja lea mov push movsl push pushf xor call out xchg sti mov daa pop aaa (bad) lea xor sub mov (bad) pushl push sahf fnsave (bad) ja cmc xchg imul sbb or cmp daa mov push jp push test js stos out in leave les out decl lock push or stos mov sbb subb add (bad) pushl xlat fildll push dec adc dec int xor sbb (bad) (bad) (bad) aas cmp mov xchg xor xor cmp (bad) loopne test (bad) (bad) (bad) call xor push pusha sbb xchg fistpll cmpsb inc dec inc sarl inc rorb jg sbbb ja xchg test adc js (bad) (bad) (bad) call ret mov mov clc jmp ljmp mov or or (bad) aaa test inc jb adc pop aad ficoml loop cmp int jge push pushf test mov mov dec pop aaa imul aad call test clc or mov (bad) decl jge in push adc hlt sbb ret pushf inc jne cmp outsl mov incl les jle and xor cli sub test inc cmc es or (bad) (bad) mov pop mov dec aas clc cmpsb mov and pop popf popf jnp sub inc add cmpsl ss dec inc sub add sahf fist cmc pop test fcompl stos mov inc sbb push mov or add mov into mov rorl (bad) js dec add test dec mov sub (bad) decl ljmp inc cmc pop mov jmp in adc (bad) ljmp fnstsw xchg sub fsubp push cs mov push jge (bad) (bad) jg or sub iret mul pmulhw and inc dec pop push xchg iret sbb xchg xchg cmc (bad) (bad) jmp jmp inc movnti aad jns mov mov test pop push or pop (bad) in int (bad) inc mov out pop pop cmpsl dec fimul not xchg mov lea xor (bad) (bad) pushl sti sbb jbe jle sbbl lret mov into or (bad) decl mov add imul std fcoms pop (bad) pushl jae or cmp loopne nop ds out ds out inc jnp fwait pushl std jmp adc mov addr16 jecxz aas arpl dec cmpsb cmp (bad) jmp jmp dec jecxz mov repz dec dec repz lret into popfw mov xchg lcall pop jo xchg ret stc das inc (bad) jae imul push fisub push (bad) fstpl addl push popf arpl push mov (bad) (bad) ljmp dec notb cmpsl xor orl out pusha xchg add mov (bad) aas and rcl mov aas lcall jge fiadd sbb pop xchg jb loopne (bad) dec ja mov call push daa cmp pop or clc jmp xchg scas aas inc mov fdivrp (bad) (bad) decl into cltd idivl pop std xor clc dec sbb dec in cmc jns pop fsubrp fcomip lcall in jecxz fisttpll push pop cli jb lcall (bad) (bad) ljmp pop dec cld mov jae insl pop (bad) mov rol and sub inc aam pop int (bad) (bad) (bad) fbstp stc sub andl mov add and adc jle or call add ss lods inc adc cli (bad) call movsb jle std enter loope xchg pop or pop je outsl fbld or (bad) (bad) aas loop sti add add insb xchg call adc cmp ds in (bad) (bad) fsubl adc cmpsb pushl jecxz cwtl jns pop push lcall (bad) sbb lcall lret popa das jno jecxz push rorb pop lods (bad) (bad) (bad) aas daa mov mov enter shrb cmp aad mov (bad) arpl imull (bad) (bad) call push pop pop insb rorb pop mov jmp movsb adc paddusb pop cmpl adc and nop mov adc andl mov mov inc rorl dec mov lods into insl arpl mov std int cli sub cld pop inc add or (bad) (bad) (bad) lcall pop add mov fs or mov repnz in ljmp das cli lods jb rcl enter aad lret repz ss adc pushf in (bad) lcall lea jmp sarb inc mov mov inc (bad) fwait and jmp movsb cli jo push loope pop mov (bad) pushf cli lea insb inc lret test test mov loope mov js inc loope push cmpsb sahf pop push (bad) (bad) (bad) call xchg clc das sbb cmp jo and mov jmp and pushl cld shrb jo psllq bound mov je mov jg (bad) push sar lcall das jle pop jg add push inc aas rcll xor adc pop test (bad) (bad) (bad) decl (bad) jg inc mov idivl pushf in insl mov push repnz cmpsl imul adc repnz ljmp xor jmp int mov mov cmp in imul popa push mov sbb cs pop mov call pop mov jb in jo push inc sub fnsave (bad) das dec sahf mov pop fsubrs cltd cmpsb inc xor mov out xlat repnz add repnz jge adc (bad) (bad) pushl jne lret lret sbb push jmp or dec popa cmc sub (bad) (bad) (bad) aas icebp and adcl cmp add pop mov movsl gs je pushf (bad) pusha sbb (bad) (bad) incl out scas adc inc inc loopne jle pop jl dec ret xor sbb (bad) ljmp (bad) ja add enter add ja ret (bad) (bad) (bad) (bad) decl pop enter xor lret dec push sbb sti pop imul mov jb andl lcall jp mov push outsb push imul leave cmp cmp mov incl adc in pop repnz rclb push call mov aam add loopne xchg push aam ret (bad) (bad) call sub jae adc push shrb bound lret adc stos push jg es add dec movsl in call mov loope add xchg movb mov add pop (bad) dec cmp pop loopne inc fwait cli adc imul xlat adc fucomip inc adc jg and jno dec out xchg dec jmp mov cmc fcompl adc lcall decl das repnz xchg cli pusha push (bad) (bad) dec ljmp dec pop icebp jg jecxz mov call xor (bad) jg fistl aam lock push out aad jle sbb dec (bad) (bad) (bad) out or sub rol call icebp (bad) aaa or lods push pop jnp sub (bad) lea cmp aas adc (bad) aas push outsb pushf cs jae repnz add (bad) decl mov push outsb addr16 sub cmpsl (bad) jl inc sarb (bad) sbb mov gs (bad) testl jbe out arpl mov pushf lret mov push xchg push sub enter inc aam sar (bad) call cmc mov je jne daa dec stos pop cli mov (bad) jae cmp push push stc xchg (bad) (bad) inc sub xchg cmp loope fchs addr16 sub pushf in aad dec lods pop (bad) (bad) (bad) decl (bad) dec pop push out rolb (bad) imul add pop push dec lret aam jmp and jmp sub mov fwait and out ret ret idiv (bad) pushl inc stos sar fstps inc insl (bad) or dec (bad) mov js sub inc rcr sub add push pop mov jne pop push cmp dec fildll sub and (bad) mov xor ret leave imul std decl fbld sub aad repz fnop (bad) mov fs dec mov (bad) sbb dec mov push scas (bad) (bad) (bad) incl jae push and xchg mov pop shl cli dec mov test sbb imul jmp pop fs (bad) call neg dec insb stc nop xchg and xlat cmpsb testl jle pop lea add into sbb push das in push daa (bad) (bad) (bad) decl push or pop cmp mov push loop clc shl xchg mov insb jne js call cs inc or sub pop enter mull cmp pushl cmpsl cmc arpl nop pop (bad) icebp mov mov xchg or mov (bad) (bad) decl stc and enter adc outsl fcoms jge rcrl or decl lods mov std mov imul dec fdivr (bad) (bad) lcall and pop add pushf mov loopne xchg sub ret pop adc clc out fwait and (bad) in decl xchg lcall daa mov psadbw (bad) pushf fwait jg and (bad) ljmp nop out movsl addr16 (bad) mov pop into outsl adc xor ja lea div iret xchg dec mov sub idiv (bad) (bad) incl fbld aaa push sub jno dec (bad) fbld js push and fcompl js or push sbb daa cld (bad) (bad) (bad) fldlg2 or mov pusha and push in in mov test mov and pop pop (bad) lcall push jne fwait aad mov mov das lahf dec inc mov popf or lods sbb push rcl jns das (bad) (bad) jg or in mov (bad) loopne fbstp push pop and rorl adc clc (bad) call outsb repnz aad inc bound push dec gs mov ret out sar std sbb das jb (bad) sbb jae out mov mov push in (bad) (bad) jg inc cmp mov adc sahf push push jmp jns jbe xchg fsubl (bad) (bad) incl gs push cld or cwtl inc shll mov (bad) jmp and push cmp inc negb pop sbb sub imul lcall stc or and in cltd pop cld or cmp mov (bad) jns mov jbe push sar mov les call sti lcall aam jecxz adc iret jmp fst leave adc pop ljmp lea loop (bad) fiaddl test (bad) in icebp (bad) (bad) jmp cmp mov and xor mov ret aam mov jecxz outsb sbbb dec dec jg mov jle jg (bad) decl mov push mov jge lods jecxz ljmp scas mov sbb and lods out mov jae jge ror xchg (bad) (bad) (bad) jg sbb in bound mov popa mov (bad) xor adc je lahf hlt icebp pop neg pop pop pop (bad) sti (bad) jmp or popa popa xlat mov adc hlt mov pop cwtl mov pop icebp adc shl sbb mov outsl icebp sbb (bad) (bad) push popf cld leave cld cli lds cli rorl jmp loopne lret sub loop (bad) (bad) mov cmp dec dec sbb push repnz cmc gs (bad) (bad) js cmp mov into xor cmc sbbl mov mov cli adc mov (bad) fstps push sbb (bad) (bad) (bad) call shrb lret xchg test pop inc push shl jbe push dec std and mov (bad) cld (bad) (bad) call insl xor pushf cwtl jg incb cmp and gs sar xchg stc cmpsb mov sti push fsubl push les jns bound (bad) (bad) jnp inc dec mov push push hlt lock insb xchg or call rcll push push inc nop push push sbb clc mov jne out adc mov (bad) incl bound push sbb pop xchg arpl pushf mov xchg pop pusha or (bad) sub adc adcb ljmp imul inc jle (bad) mov pop adc js mov aam xor (bad) fcomip decl ficoml cmpsl popf repnz call xor xor or dec cwtl or jns and mov cmpsl xchg xor (bad) jmp push nop int in jno jae lret xchg add and cmpsb pop adc sar incl jmp mov fiaddl push inc (bad) divb jne sbb loope (bad) stos jl cmp dec test push (bad) enter jmp das and cld dec xor in cmpb rorb aam mov sub jbe xor jg lock test sahf lock outsl into mov push cld push rclb lods dec dec out lcall mov (bad) (bad) mov loope scas xchg mov pushf sub jg xor mov fldt arpl jle pushl inc xor into pop rcr xchg push aas mov (bad) lcall adc push lret ret repnz push out jmp fs (bad) (bad) (bad) aas fldl adc inc push cmp int3 pop push or cli sbb test xchg push mov call inc pop push int jns mov (bad) (bad) dec das call jmp add js xchg out inc push popf mov (bad) (bad) (bad) incl dec in dec ljmp push in das cwtl (bad) cmp dec lahf cmpsb mov cld xchg pop push push (bad) call (bad) cmc fs xor (bad) bnd pop (bad) inc loope test (bad) lcall rcrl mov cmp scas movsb (bad) in ficompl pusha dec lea jg (bad) pushl adc enter aaa lret pop scas sub pop inc (bad) cmp clc sahf ljmp popa loop aas movzbl xlat stc call pop (bad) (bad) (bad) (bad) fsubs inc jg cmpsb mov xor cld mov or mov lcall add (bad) repnz jg sbb popa xchg push int3 (bad) (bad) (bad) ljmp mov mov mov xchg xchg sbb bound lock call push xchg in call sub mov aad notb jns das jbe das jns (bad) (bad) ljmp cmp cs pop inc jno ljmp or or mov cmp loope dec pop sbb icebp stc push xchg in movsl xacquire std int jmp inc cs adc ret mov loopne ljmp xchg clc call lret push mov repz add dec cli inc (bad) (bad) (bad) call repz arpl sbbb (bad) mov ljmp cmp pop (bad) (bad) (bad) mov std cmp pop stc mov cltd inc mov lcall (bad) (bad) (bad) (bad) ljmp adc jmp xchg lcall test adc in dec adc mov pop aam scas lcall mov xchg xor les (bad) (bad) push ficom kmovw xchg mov stc jo test xor mov mov push jg (bad) jmp xchg mov nop sbb dec xchg jecxz mov test xchg adc (bad) (bad) (bad) ljmp repnz (bad) mov test sub pop rcrb xor rorl sub mov cld and dec push (bad) call stos stos stc scas mov pop fsqrt add iret lock sahf aad or cli ss (bad) (bad) decl add jle xchg lcall insb repz add jns inc outsb jmp (bad) decl mov sub in xchg in fwait adc xor sub (bad) jmp dec jge xchg (bad) push add mov mov gs mov mov add lret inc jl adc movsl (bad) (bad) out cli jmp fsubp idivb push adc insl aam adc ds pop or dec cld decl sbb pop fldt cmp rcrl dec (bad) and fdivrl push aad rcr lods dec mov sti popf mov inc inc pusha jmp rcll (bad) decl scas xor push lock (bad) ljmp cld incl fsts push dec adc lods jae je (bad) (bad) call lret pop notb in out pop jns je mov pop push xor jmp in scas xor jae pop jg (bad) call call xchg jno hlt scas push jmp (bad) pop adc pop cltd xchg rcr ret (bad) (bad) jle es mov xor jp addl xchg sub pop jb (bad) sub lds dec (bad) (bad) std add inc cs push jbe mov sbb ret fldenv pop lcall call imulb xchg or mov (bad) (bad) incl cmp jmp mov jmp xchg into cmpsl stc rclb and cmp clc call xchg cmp repnz call adc or clc icebp cli loop cld xorb stc mov stos (bad) lret incl sub xchg cmp mov adc mov push xchg loop push cmp pop (bad) lock lret dec in cli shrl pop cld jg (bad) xchg mov cmp test scas mov push dec inc cld sbb dec scas iret dec pop add xchg pop (bad) fcmovnb clc pop lock inc xor std (bad) (bad) jg fistl mov movsl mov xchg and lahf jge cmpsb cmpsb cli jnp ret mov pop int inc add popa aas jno mov inc (bad) ljmp add lods repnz test or pushl xlat mov mov (bad) mov xchg mov (bad) push call imul out ja fstpt xor xchg aam daa in out mov test adc or inc iret (bad) xchg mov jb mov inc (bad) (bad) (bad) inc (bad) loop jne jmp fwait mulb push iret mov sbb add repz rcll and dec dec arpl lahf lock mov (bad) (bad) jmp jne pop or pop push push add jp push psubb push jnp mov test add dec mov mov out rorb jg stos enter decl sbb mov das mov movsl rol xor stos push pushf inc sbb jbe mov out je out sahf std or sar call dec mov fnop ret cmpsb xor mov lods (bad) (bad) (bad) call pop dec into test xchg aam mov mov jmp int3 dec test scas xchg (bad) (bad) push fadds and imul (bad) (bad) (bad) ljmp icebp cld js cs in push (bad) xor jno mov sub imul dec xchg sbb (bad) (bad) call dec popf (bad) stos dec xchg xchg mov insl test loop (bad) (bad) lcall int push xchg pushf in sbb in outsb push fwait jnp inc int3 enter outsl insl stc arpl mov (bad) sti push fnclex jmp sub test testb xchg inc fs (bad) (bad) (bad) jl rol sti ret pop mov pop push dec cmovo rol cli or enter int3 inc (bad) push pop mov cs lock movl add adc jl mov mov xchg clc push cmp xchg out xorps mov cmp test ja sub jge inc cmp push sbb aas dec ret scas mov inc pushf imul (bad) (bad) incl push out dec push inc jl repnz or popa push mov adc dec inc in sbbl call jmp xor loope (bad) lcall lret mov nop dec pushf fidiv orl jbe pop (bad) lcall pop dec (bad) mov repnz jne mov mov insb cmc call push sbbl jge mov (bad) fistp shll adc push inc pop mov adc xor call mov scas in adc xchg movsb jle icebp sub or sbb out out xor and (bad) jmp push inc xor sbb rclb rcrb cmc cmp xlat mov sar (bad) enter pop xrelease add mov (bad) (bad) call xchg dec sbb xor cmp cmpsb je adc or mov adc lcall jns cmp ljmp xchg jno inc xchg lcall adc push ja jne jmp push (bad) fcos outsl (bad) pushl push adc out inc push mov pop fadd int3 and xchg push into aaa not pop sbb loopne cmp xchg pop fstpt mov (bad) (bad) jmp fcomps xchg push sbb sbb push xchg setns (bad) dec icebp push sbb jno jmp push lods jnp inc mov or (bad) decl stos sbb dec jbe ss (bad) (bad) (bad) call mov in and add or sti ret (bad) subl mov jecxz jo (bad) lcall loopne loopne or out sub mov xlat or (bad) aas pop lret mov js lea sbb dec pop inc clc fistp ljmp in out and into mov outsl enter mov (bad) mov dec cs cmpsb out xchg (bad) (bad) (bad) aas (bad) jne mov in lahf xor push arpl icebp dec mov and fbld push mov dec fwait js push jl lods jmp sbb (bad) pop mov aam in scas push jbe sbbl and add icebp pop andl mov push les (bad) dec std int fsubrl (bad) pushl adc push lret les out xor sbb icebp (bad) jg bound or dec hlt test insb cmp inc xor (bad) (bad) inc dec subb pusha or push mov sbb push xchg out add mov (bad) cmp sbb mov (bad) xor pop aam push mov dec sti cmp nop inc fsubrp (bad) (bad) ljmp insl push sub dec in adc add cmp jne adc mov out (bad) stc out loopne imul int3 std (bad) (bad) jg lret dec in mov dec cli (bad) pop das cmp sbb arpl in and icebp pushl push mov cs lds inc push je lock decb pushl aas into push inc rcr test sbb lock xlat pop fcoms (bad) or (bad) (bad) lcall (bad) lahf iret enter lret adcl dec push cmp sub clc pop fsubr (bad) (bad) dec fcomip cmpsl nop adc cmp and (bad) call test scas push mov push int jno daa inc sbb ret dec mov jg mov lea out push jno lcall shl pushf and insl push mov (bad) (bad) fild sbb add in lods adc cmp adc int jmp ds inc enter cmp imul sbb xor fs or adc ja and (bad) or (bad) (bad) (bad) mov mov lock sbb mov jnp call (bad) (bad) jg loope cmc or xchg xor (bad) sbb push and nop sub addr16 pop (bad) dec daa leave mov push sub cmp pop adc push js (bad) call loopne cmp insb in push jecxz add mov mov xchg popl stos ds clc outsb dec mov loopne pop mov pusha jae clc data16 dec inc adc ljmp jno add outsl (bad) std (bad) (bad) ljmp test js ret test dec xlat ret lock lret js call ljmp dec push xor dec ss aaa into or sbb enter dec (bad) out decl rorb aaa cld lock pop adc idiv (bad) (bad) ljmp out mov repnz icebp push sbb jle daa jnp lret hlt inc (bad) (bad) sub loope lahf cld mov inc sub jns cmp orl sub fdivs fisttpl in sbb in repnz lds pop and pushl xchg jecxz adc movsb add sti ljmp cmpl loopne out mov sti inc pop iret lock shrl into cmp arpl stc (bad) (bad) decl sti sbb subb inc insb cltd ret sbb push (bad) (bad) lcall sbb push ljmp cmp loope cmp movsl sub leave pusha jno jecxz rorl cmp outsb dec jmp int3 lock jne pushw mov js inc lret decl xor sti imul mov enter cmpsl xor jg jmp clc sti dec sbb rcrb test push inc jl push mulb cmc outsl xchg cld and test (bad) (bad) aas inc popf leave inc ljmp fimull in xchg mov mov std adc push jne adc int3 cmc loope lcall pushf mov jl lea loopne dec inc call sbb idivl mov sub int3 outsb mov popf jge inc (bad) cli pusha mov mov cld push jle decl adc ror mov addps (bad) aas popf jecxz aaa push clc fsub xchg mov mov xchg test test push cmc (bad) (bad) jg push es inc out lret add je stc xor ds mov (bad) aas xor xchg mov mov add mov (bad) (bad) (bad) (bad) jle rcrl repnz insb mov fsin push fnsave xchg xor push mov add fst imul popl xor (bad) (bad) (bad) mov or jge lret mov mov in mov pop xor outsl xor aas sub rcl jge inc (bad) fistp adc push cli sub push xor negl (bad) (bad) mov mov ficoml (bad) (bad) ffree push cltd mov nop adc jmp cli push pop stc outsb sti mov inc push aam fsub (bad) jecxz dec mov cmpl lret jo adc push dec mov dec mov rorb (bad) (bad) pushl cmp mov movsb stc adc xchg mov inc pop cmp rorb js mov dec call dec pop fistp (bad) mov (bad) (bad) inc mov daa fstl jne call test xor push push sbb out (bad) (bad) incl xlat xchg outsb cmpsb lahf sahf jecxz (bad) into adc pop xchg dec mov (bad) jmp mov ret in mov hlt push gs xchg ss xchg push xor lods lcall cld aam adc sbb mov inc inc (bad) xlat jecxz (bad) insl or add push into cwtl ror in out into negb xchg movsb lock incl adc mov (bad) or loopne in mov (bad) ljmp sbb add and je sbb pushf jns sbb sub (bad) int3 jmp mov jle pop xchg push clc ja mov sub loope movzbl jp or add test adcb xor (bad) cltd aad out fimull cmp push xchg (bad) sahf mov clc incl cmc lods cld inc add lahf test mov adc popf ret mov pop push adc jmp mov stos inc adc xchg mov incb xchg push add (bad) mov pop sub mov clc xor ss stc out inc rcrl icebp (bad) ljmp jnp into mov clc cs pop sbb mov add ja (bad) incl cmp add (bad) negb sub push rcrl in mov popf cmpsb hlt ret jecxz jp sbb xchg stos (bad) dec or (bad) (bad) mov scas push addr16 mov (bad) add das sub push sbb inc (bad) mov ljmp mov mov sbb jp and sahf push fistpl jb test mov lock or mov (bad) fidivrl test mov (bad) decl (bad) lock mov out and movsl adc lahf leave mov pushf xor push cmp (bad) (bad) ljmp leave mov xchg movsb push bound shrl push mov lods adc jl lret cmp bound popf sub test mov (bad) (bad) jmp adc outsl int mov loopne or inc and push orl pop ret cmpsb scas aas repnz cli rclb std adc jb and fidivl cmp fs (bad) (bad) (bad) pushl lahf or ds mov aas adc dec sbb pushf push insl add push mov dec arpl cmpsl add pop imul popa cld (bad) mov arpl adc xchg lcall dec adc adc std xchg push fsubr mov push pop mov pop mov mov (bad) (bad) (bad) pushl jae test sub in mov cld popa nop and xchg dec pop (bad) pushl dec xchg bound adc push rolb mov push jno in or xorl cwtl test mov sti scas (bad) (bad) (bad) ljmp inc repnz xor subl mov es setge (bad) (bad) jg sbb inc cmp inc push int adc cmp and aaa std decl sbb mov pushf fmul cmp jb sbb lcall lret jp aam xlat mov adc jle fstl hlt ja xlat mov cld jo pop (bad) fnstcw push loop (bad) jg sbb cli mov fadds data16 out push sub icebp scas iret outsb (bad) (bad) pushl mov (bad) cmp adc bnd aas adc insl dec aas ret pop and mov inc lcall dec cmp (bad) pushl aad enter cmp daa sti (bad) jb leave test ds jns fist call push (bad) int stos adc arpl aas lods bound loope push mov lcall rcrb aas fstpt xlat fisubr loop mov hlt arpl mov cli dec xor arpl call data16 sub adc jle lahf (bad) (bad) lcall sbb mov sarb mov push (bad) (bad) (bad) call int dec dec xchg cmp xor cmp mov dec int3 cwtl push (bad) xchg inc (bad) (bad) incl inc lds sahf pop dec mov jbe jb xchg xchg shr (bad) (bad) push ds push clc mov fld push push cld push (bad) lods or pop cmpsl jl incl jno js mov lods outsl ret mov pop inc push outsb adc iret mov cmp pop push lods jmp loop and or dec decl in mov scas lahf mov jns push enter in aad jae sahf mov out adc outsl xchg movsl sbb fisubrl popa push xor (bad) (bad) (bad) mov dec das cs div mov jecxz mov mov inc mov clc jmp fs lcall stc decl sbb std call or je addr16 jg cmp addl jnp (bad) sub mov (bad) (bad) pushl sbb loope cltd pop xorl mov xchg pcmpeqw (bad) dec das push mov dec aaa aaa xlat lock idivb dec in xchg or (bad) (bad) call das aas stos fildl movsb mov sbb inc bnd xchg jp insl dec sub outsl fcmovnb fcomps nop stos pop xchg sub fstps jle jo (bad) (bad) (bad) incl int3 dec adc inc je data16 and dec xor imul aaa mov jae jmp ljmp popl mov (bad) (bad) (bad) mov stos test mov push fwait or cli cmpsl aas adc pop fcomps mov jg call mov in imul dec fdiv (bad) (bad) (bad) mov add int3 (bad) ficom xchg in mov dec rcr out popf or adc sti add dec inc xor inc mov pushl inc lods sbb es or cmp js inc mov orb cli (bad) (bad) incl (bad) mov (bad) aaa or xchg mov cmpl repnz aam (bad) cmpw gs repnz sti jle cli (bad) (bad) (bad) jmp hlt sub (bad) adc sti mov ljmp or leave fs inc sbb fwait mov mov in sbb incl xor lret ds test mov stos stc imul and fnstcw or int fildl out or (bad) (bad) (bad) (bad) clc or lea cmc cmpsb xchg frstor out mov xor (bad) std loopne inc jp (bad) in mov pop adc lcall jecxz,pt dec jge pop (bad) in je cld loopne test (bad) fcomip je dec dec out addl pop stc jns or xchg fmul jmp mov jnp xchg stos icebp les ss test ljmp add fild jbe sbb (bad) (bad) lcall das mov pop adcl loop ss xor mov sahf inc sub fadds sub push sub cmp pusha or push pop adc neg adc jmp mov adc pop cmpsb call call std pop mov pop adc mov jl push mov frstor push (bad) (bad) (bad) in out push jge xchg lods dec inc jge cmpsl dec arpl lods loop jo (bad) xlat outsl jmp jmp cmp (bad) std (bad) mov fadds pop xchg scas sbb icebp sub inc mov mov (bad) (bad) pushl push cmc or jle dec add dec xor pop ficom sbb js (bad) (bad) call add sub push adc jnp or mov inc lock (bad) incl cltd fwait jno out cmc movsb sti or mov (bad) (bad) decl lds (bad) mov cld (bad) and jge fwait cmp dec cwtl (bad) cmp sarl cmp jge add mov (bad) (bad) (bad) jmp pop leave imul orl xor sbb roll dec add incl sbb int3 push cmpsb mov (bad) (bad) lcall sti jg pop or or (bad) mov mov pop into out sbb test (bad) (bad) ljmp xlat out je das rcrl arpl cmp or mov pop cmp jb incl lahf cmp xchg add loopne leave mov pusha (bad) ljmp stos (bad) push cmp test xchg stos loop fidivr (bad) xchg (bad) (bad) (bad) lcall mov es test lea dec ss xchg ljmp in (bad) incl jg test mov repz push sbb shl icebp sbb arpl (bad) lahf push cld (bad) jg in pop pop push shr in pop mov push insb lcall adc lcall jg dec push aaa mov lods inc push aas ret call cld pop enter aad out leave and pop neg push pop jle sbb fcomip sti es inc shl clc and mov jne fdiv pushl cmp add in jmp xchg lret cltd loopne cwtl aas and dec nop cmpsl fs dec lods into imul mov mov or testl adc (bad) mov dec xor pop xor jecxz adc (bad) (bad) (bad) cli (bad) cmovg dec lcall icebp jmp jae ss (bad) (bad) (bad) aas js xchg mov xor inc cmp mov jmp ja mov adc popl into xor into fcomip adc cwtl stc cmpsl imul push jge pop mov (bad) (bad) (bad) ljmp inc pop movsb inc pop and ret and out mov mov enter xor jg xchg lret fsubs pop push repnz (bad) (bad) pushl leave sahf (bad) aam sub loope movsb or xlat fcoml cltd dec jne out sbb (bad) (bad) fistpl jbe sahf sbb inc into jl mov clc jl in xchg or sarl sbb divl cltd cmc mov in (bad) (bad) incl xlat sti push adc mov sub push xor inc cmp lahf (bad) aad xchg dec in mov and jb xchg out adc ljmp cs xchg and pop clc cld dec lods (bad) dec jle,pn pop shr jmp mov mov xchg loopne or sbb pop idivl xor jmp jae xlat (bad) (bad) lcall mov lret xchg movhlps xchg pop ja mov lret sahf mov sbb push sahf xor in cmpb icebp loopne adc mov jg push sbb jge ss lret movsl mov hlt add clc (bad) clc mov ror push push testl scas inc stc and incb jno push xchg rcrb scas out out lcall in adc (bad) scas add aaa aad jnp aam (bad) (bad) jg in loopne bound mov mov pop in mov dec les xchg mov in pop imul decl jmp lret mov mov insl es mov fisttpll (bad) (bad) ljmp rol jo sarl cmpsl pusha jno ficompl out insb fcomip xchg call mov test (bad) ljmp sub iret jg lcall mov and rcrl push dec sub into pop mov mov sbb sbb sub aaa jmp inc mov push fwait jmp jmp aaa (bad) call inc hlt adc in fwait movsb fisubl hlt loope xchg ss stc dec or das mov incl jns jmp iret hlt pop mov mov (bad) incl stos mov jb jmp cld mov js or jo (bad) mov xchg je inc xor cwtl cmp jbe cmp add lcall call jmp out push push pop pusha pop incl dec mov movsb mov sub (bad) (bad) ljmp lret enter cld push mov pop add mov mov mov lcall xchg data16 push mov movsl cli rcl push adc push inc stos xor push cld (bad) jg dec roll cld mov xchg or cli jb pop cmp insb addl ds fsub stos sub (bad) aas mov push mov aad dec xchg sbb (bad) (bad) jmp cmp sub insb and sbb fidivrl mov adc cmp sar lcall orl mov leave jp mov mov sub sti and fildll mov pushf lahf fnstsw adc dec (bad) (bad) js test push pushf cmp jecxz rol jg inc pop fisubrl pushf push addl mov inc or addb sbb pop pop and dec js fadds sbb pushl add xor adc jae in rcl push inc cld gs movsl int3 (bad) xchg inc repnz (bad) (bad) mov or data16 jle hlt xchg sti ljmp nop lds sbbl push cli push xchg xchg shlb and lcall shrl cmp (bad) (bad) outsb cmp (bad) push mov (bad) jmp cli cmpsl pop hlt scas inc xchg in in add repz mov cli (bad) (bad) (bad) pushl xor (bad) mov inc fisubrl jae push mov mov mov imul mov cli icebp aas repnz shl lret jb dec mov int cmpsb or (bad) ffreep pusha adc cmp idivb adc cmp or insb pop adc idivl enter ljmp aam (bad) ss (bad) (bad) lcall mov pop scas rcll bound push dec and clc (bad) (bad) decl adc push jecxz jmp cli int lods (bad) leave sub aam iret mov push leave mov or jno push repnz dec ja fcomip push pop cmp test push pop test or xchg mov (bad) jmp jmp mov lahf pop fnop sarb (bad) (bad) call insl xchg out jg mov inc push loope call mov mov stc (bad) (bad) decl clc loop push loope out je daa dec loope cmp out and jp inc mov (bad) (bad) jg incl psubb ja add sub cmp cmova jge repnz (bad) incl mov push mov fdiv (bad) iret cmc sub ret ror cli or (bad) (bad) (bad) jg movsl inc xlat jge sbb insb (bad) ljmp in and push (bad) pop (bad) (bad) stc jge push gs or push idivl outsb add out pop fwait (bad) aas adc sahf push (bad) jnp xchg bnd fildll pop inc das cli (bad) ljmp into push jbe scas lret mov mov lock rol (bad) cmp jmp call xchg in bound push sarb add ja jmp dec jb pop mov mov lret mov push fwait fs cmp loop das clc sub bnd push adc mov popf je mov (bad) aas aaa ret push cmp jl push jge stos pop out repnz push ds (bad) (bad) jmp in clc (bad) dec scas fild (bad) popf andl or inc lcall or (bad) fild xchg dec sub iret pop push sti fiaddl cli cltd inc mov in nop push mov cltd and ret insl cld add mov in pop insl xor ljmp cmpsb (bad) jge loopne mov sbb sahf jmp push (bad) cli dec dec in lahf sar (bad) call lea lds push xlat pop xchg dec and rol push adc js jge out cltd add inc shr add (bad) (bad) ljmp push dec xchg testl dec xor jl jle sub xchg inc inc sub cmp pop jge push lcall arpl mov push or (bad) (bad) inc cmpl in les cmc mov or insb fcomi in pop pop daa loopne xchg push (bad) jg (bad) test cmpsl push xchg lds add (bad) (bad) pushl aad mov xor call out xchg push xchg es push scas enter (bad) jmp clc out sub mov stos andl sbb in mov in cld stos pop out jp scas sbb das clc lcall divl mov or int3 add pop fisttpll mov mov lcall (bad) cmp cmp adc ss pop mov test movsl mov leave arpl mov sbb (bad) jg popf cmp jno mov loop and pop aam mov cs mov decl add ss popa push sbb rcrl xor mov sbb (bad) cmc daa and mov shlb cwtl cmpsb jg sti mov inc ljmp mov sub shll cwtl imul movsl jl int3 rorb retw adc jg xchg in daa ja,pt sub lret lock (bad) arpl push cwtl fldt call inc insl into xor push (bad) mov cmpsl nop (bad) sub cmp dec stos lcall lcall aad (bad) (bad) (bad) cmp orb mov out imull loop push mov mov cmpsl es dec push minps xor pop lret xchg stos dec arpl hlt inc (bad) (bad) (bad) jg push rolb push xchg pop fdivl jecxz push lds sbb add add (bad) das clc jmp pop xor adc jle mov xchg or jns cmp std (bad) (bad) (bad) mov lret into mov out adc mov mov mov push movsl lods rcr pop jb xchg pop xor repnz stos inc mov dec pushf jbe adc mov inc fwait mov jp xchg mov (bad) (bad) push jp (bad) scas xor jbe sub shrl mov and adc dec iret mov jge (bad) ffree rorb (bad) (bad) (bad) pushl cld negl push mov mov fisub out aas js sub pushf mov jne (bad) in (bad) (bad) mov les jbe cmp (bad) jge sub lahf cmp (bad) jg (bad) mov cmc aas outsl mov scas push loope cmp mov sbb pusha sbb inc dec jne cld (bad) (bad) mov sbb sarb xchg pop stos js clc jo cli mov lret cli (bad) decl jmp xor das mov mov dec jmp pop clc push (bad) (bad) ljmp sbb into xor inc jb popf (bad) dec test dec xchg stc lret sub popa dec mov jne outsl dec (bad) lcall nop add rcrl cmp addr16 (bad) (bad) (bad) jmp gs (bad) rcrl es lret push pop mov (bad) mov (bad) xor cmc loop andl fsubrp cli addb fdivl (bad) fldenv xor (bad) decl cmp pop pusha cmpsb adc adc shll dec jmp scas jle ds outsl pop repnz fnop mov call (bad) ja push adc cld negb or rcll int3 daa cld inc pop jge inc std test xchg mov cs push pushl sbb sub jbe push test out push jl pushl sbb movl pop mov jo call jae cs xor roll in dec out mov add or push jb push (bad) aaa popf dec cmp (bad) dec dec and jmp ret xlat mov or arpl into sbb cwtl aam pop jecxz scas shrl jns jns pop xor je (bad) (bad) lcall leave dec mov fcomi test ret cltd sbb jae dec xor fstpt repnz (bad) incl adc std dec rcll cmp sbb mov push (bad) (bad) (bad) jg fcom lret aas out jge sub dec adc lods ret enter inc add call loopne mov in sti xor call sar fildll dec in in gs jmp gs (bad) (bad) (bad) dec imul arpl call fidivl sub mov div lods les fnstcw xchg sub xchg inc outsb (bad) fldl ret cmp repz outsb inc lcall add scas xor cld (bad) (bad) call adc fcmovbe push pop push aam mov and (bad) (bad) in decl jg and iret (bad) sti cmp stc mov or pushl pop mov mov xchg and cli ja lcall ljmp push popf pop mov ljmp cltd adc push ret push push shlb inc ret or or iret add sbb (bad) (bad) dec inc mov push jge inc mov aaa int push cltd test or jle (bad) jg leave mov (bad) pop xchg outsl ret push adc sub add fistl pop pop sbb lock mov lret mov adc pop pusha in (bad) dec push pop push mov in pop leave xchg and adc mov stos add (bad) (bad) (bad) call fmuls into aam pop push push pop icebp dec (bad) xor cmpsb repz dec pop pop lods (bad) aas cmp xor cltd adc ljmp inc inc sti mov (bad) (bad) incl mov cld mov out rol in adc int pop test jg pop xchg cmp test fisubrl lock (bad) (bad) (bad) pushl stos loop jle rclb test addl or pushf jno repnz incl mov loope or in mov dec fptan (bad) xlat add inc (bad) (bad) (bad) (bad) cmp in js sarl daa or jge clc adc (bad) pop xor dec (bad) (bad) sti add sahf cltd pop jne repnz dec js mov sbbl fstpl jb jne test (bad) test pusha or add inc jmp (bad) inc cmp in loopne dec clc cmp mov mov or sti in sti adc xchg std lcall clc iret lahf mov aam jmp sbb push push jnp jo pop inc imul sub call cli mov sbb aas lods jmp pop dec jne cltd and decb lods cli add push push adc (bad) (bad) (bad) pushl clc push mov sti int3 pusha lds push out rcr and adc daa (bad) decl jg cs mov fisub loope adc js pop adc (bad) (bad) lcall push cmpsb sbb mov adc pop aam mov mov push jecxz xchg push jp xchg sar int3 dec push pushf test add sahf mov jbe imull adc inc pop out jle les adc fcomi mov mov pop cmc (bad) decl pop add outsl mov mov ja pop inc jle test les (bad) aas aaa popf fnstcw mov (bad) mov mov pop imul push mov addl cli pop pop sbb dec ret pop hlt jne or cmpsl enter jecxz sub cmp fcoms mov cmpsl ret dec or jmp stos movsb out sbb lcall or (bad) fldcw xchg and enter cmp roll notb icebp (bad) out pop jo leave loope mov dec rclb adc lahf ljmp dec fidiv sub in push test mov (bad) and lahf sbb (bad) mov dec jbe enter mov sub shll ret ljmp out scas sub test sub movsl xor inc cld (bad) xor (bad) (bad) incl jl sbb fwait js sub add sbb cmpsl xchg or (bad) lcall test rolb stos add push add ss mov inc aas idiv fsubrs out pop fimul incl outsl cwtl sbb jns icebp cmpsl cmp sbb mov sub add fdivrp lock stos je add loope fcomip mov iret xor int jo push in push stc fwait leave add mov (bad) (bad) jg pop cmp loopne adc push lds dec mov cmpsb dec mov (bad) incl es (bad) inc xchg test sti dec mov stc lea data16 or (bad) jbe sub call mov iret jecxz mov (bad) adc mov (bad) jg fisub pop jge es faddp ror arpl push pop ja add loope (bad) stc mov xchg and pop stc in dec (bad) decl out insb dec xor jmp clc fwait in jle push aam cmp call jo xchg mov imul add scas ljmp mov (bad) adc xor clc adc les repnz push sti pop loopne jmp fcomps outsl pop inc clc mov cmpsb (bad) inc loope ljmp cld insl push pop sub sub insb jb cmp imul sub push push in jne in lret lock and (bad) (bad) lcall mov addr16 aam subl out and dec (bad) outsb fwait imul adc jp mov nop pop push lods adc fwait jns fdiv idiv xchg ljmp and pop lret (bad) mov push dec push xchg mov nop pop test adc imul push pushf dec outsl shrl cmpsb jne add (bad) (bad) mov cmc add jmp out inc pop sub inc imul xor (bad) aas cmpsl or insl pop (bad) cmp shl mov cltd incl pop adc cmp shl mov (bad) mov mov xchg sub and (bad) lcall push hlt fcompl mov out mov dec push mov (bad) xor jbe ja (bad) mov std ds inc movl sti push cmc (bad) lea lods cmpsb inc xchg iret out pop lock les hlt pop pop sub dec lds lahf xchg push ljmp inc xchg pop lahf (bad) fstpl mov movsl mov in (bad) clc in pushf and dec in adc sub cld scas mov andb push push sub dec js add (bad) (bad) jg mov movsb inc mov mov sbb loop mov (bad) jmp hlt test pop (bad) dec xorl cs fwait daa jae jmp out das (bad) jg (bad) test cltd iret and inc ffreep push dec cmp (bad) pushl xchg ret aam cmp push push xchg sar (bad) fnsave xor lcall sahf pop mov ja inc or mov in shll push add push add inc push out push lahf fistl sbb lahf lea sub (bad) lcall cld lods ja mov ret xchg adc push jl popa icebp ret addr16 sbb mov lds dec pusha ret push scas test cmp lret xchg (bad) lcall js scas fisubl push push rorb mov fsubl cwtl push popf ret adc push aad test (bad) jmp test lock rcl das mov xor (bad) aaa and lock call std xlat out dec add pop fnsave and nop ret call add dec insb shll sbb in addr16 jne xchg xchg idiv outsb fnop sub fist (bad) hlt lea (bad) (bad) jg mov into jo mov js pop (bad) push jl and (bad) std fwait insb pop out mov mov cld (bad) aas adc shr (bad) int3 jmp andb push lds (bad) pushl insb in jns pop jbe (bad) stc sbb or add mov lcall fnstcw xchg popf pushf mov ss jl aas jl cmc ljmp call fnstsw add (bad) xor fnstenv inc inc or (bad) cld push mov ret mov jecxz adc inc rol lock (bad) (bad) decl adc cld lret das sbb popa movsb jne fcoml mov (bad) (bad) in mov xor jb jbe inc mov loopne es cs mov mov cmpsl aam pop cli mov fimul cltd rorb rcrl (bad) pushl mov jecxz mov and mov push lret jnp shll xor loop (bad) fneni(8087 movsl test call out icebp jge cmp xchg adc jbe (bad) call mov fsubp out push xor push rol jmp test cmpl (bad) jg lods cmp repz sub icebp stos inc cltd outsb pusha lret cmp (bad) (bad) jg lock inc push mov pop push mov bswap fnstcw xchg mov jg push sbb push js push add dec ss scas and (bad) (bad) (bad) cli mov movsl (bad) int3 inc xor dec xor lock mov movsl mov mov clc (bad) pop loope pop xor (bad) out cli lds xchg cmc movsb push push jmp and jmp jns (bad) lcall adc push popa jp jb leave mov jnp in or dec jle sbb add mov lahf adc (bad) (bad) fildll enter sub decl or adc jbe mov je jmp arpl adc rsm push mov mov adc out es jg cld outsb cmp insb jb mov pop loopne pop push xor jo (bad) (bad) jmp test xor jp dec jb in inc repnz imul pop jp cmp cld mov in pusha (bad) sbbl jno or sarb xchg int3 (bad) push in jp cld decl push jo outsl ja data16 std ljmp inc insb dec fsubp int3 pop mov (bad) cltd stos movsl or sub shr add insb xchg add loopne jbe insb inc fs into jb movsl cmp dec mulb sub jg (bad) push loopne sti xchg adc adc in (bad) (bad) (bad) decl mov push push xlat xchg pop (bad) ret (bad) out jge enter fdiv mov mov cwtl xchg xorl decl mov test dec mov js loope push inc cmc ficomp (bad) (bad) (bad) jg sub divl pop jae enter sbb ja lcall std decl push or or sbb add sti (bad) int test add andl push scas cmpsb dec dec clc mov jmp inc fwait push sub add inc ss inc xor (bad) mov lcall ljmp dec push pop add mov mov (bad) call or pop lret popf pop nop or scas mov and or dec fs add dec mov (bad) cld pushl push fistpll xor push adc aad mov clc (bad) mov lahf movsl sarb mov sub aas add push rol dec fdivp add push or je aad add jecxz or (bad) (bad) (bad) mov xor (bad) jae (bad) dec push jno outsl aaa mov fdivrs stc (bad) lcall cld cld or (bad) shrd sub rcl xchg arpl dec mov mov data16 lcall or mov cmp paddd (bad) (bad) (bad) ds imul fwait out stos pop xor cmp and lea popf mov decl add jne fsts mov mov or imul xor ds mov out aas (bad) je dec inc icebp ja clc (bad) cmc in sbb mov je ret add lcall mov sbb data16 insl add imul inc (bad) lock jp in enter lcall aas push sbb and pop cwtl jbe jp push ds ret sbb xchg jecxz (bad) (bad) call mov push inc (bad) icebp out outsl dec (bad) jb inc xor addr16 call cmc xor jecxz pushf shll pop cs sbb int in cmpsb add pop push mov adc (bad) (bad) lcall frstor dec test jne inc (bad) int fdivr pop jmp test lcall pop call test add pop js (bad) lcall add lret bnd mov pop adc lahf cmp sar lods scas sbb or nop xor pushf xlat popa dec hlt lret jle (bad) and lock mov cmp hlt dec mov lods push ds dec pop icebp lds add iret and clc (bad) (bad) inc ljmp in inc in ljmp xchg adcb adc rclb call mov dec cs (bad) arpl push (bad) (bad) (bad) ljmp cmp cmpl xchg adc push xlat jecxz (bad) push aas aam dec add jmp call (bad) push stos jmp inc iret bound cwtl xchg cmp in lret aas adc lods and jno cs (bad) fcomip push rcr ss dec push mov lock rcrb cs incl fwait repz cmp (bad) inc push mov pop loopne ljmp test movsb cmp imul cld push cld sarb es ret ja fcompl (bad) (bad) (bad) jg repnz sbb lcall test fsts sar loop icebp (bad) jg rcr ds out stc jno jmp popf in sub aas xchg aam (bad) loop mov mov (bad) (bad) (bad) lcall aam lock cmp fist ds mov leave mov leave into cmp cli push sbb cs push (bad) mov cs add sub or aas out out or hlt rorl mov dec icebp lea mov push ret cmp out mov cmc adc aas add (bad) out mov mov mov imul (bad) jns data16 shlb jge imul test jo imul mov (bad) cmp (bad) jg insl xor mov adc scas push dec arpl fisubr xchg adc (bad) (bad) (bad) jns (bad) adc popa mov (bad) dec mov add js adc pop push push int3 jb pushf int3 adc outsl mov (bad) cld js lret mov push mov hlt jg push mov scas jae outsb (bad) mov dec test call lock jg dec sti mov fldl pop adc jns and xor fcomip cmpsb sarl lods push decb fcomps dec stos insl dec dec cld inc cmc (bad) (bad) ljmp add nop mov xlat popf sbb pop (bad) loopne inc stos mov pop ret rcrl (bad) push out (bad) jmp mov push cltd or or pop in jl and (bad) decl pushf cmp outsb bound lcall jl cmpsb aam xor mov shlb ja and pushf loopne inc inc ja (bad) push dec loope xchg pop push jo test fisttp das sub mov cmpsl add shlb cmp (bad) jmp inc out (bad) fdivs ljmp (bad) (bad) cmp (bad) jne sti shl mov cmp loop mov cli (bad) (bad) mov (bad) cld cs inc xchg mov inc jecxz aaa std adc (bad) mov mov sub repnz lods sar (bad) (bad) jmp cmp add mul cli sti cmp dec pop pusha hlt pop mov inc pop ror fistl dec dec cld xor insb popl cmc mov out or adc (bad) (bad) jmp mov mov pushf (bad) icebp int push sbb push inc mov jg mov mov pop xor mov cmp and pop fstps imul mov sub (bad) (bad) (bad) incl jae cmc pusha scas cwtl ret jo into loopne outsl jne andb push (bad) (bad) fbld insb jmp or call iret ret in xor mov shrl xor or jns inc ror sahf xchg push cltd aas adc cmpsb adc mov cmp daa mov jae cmp or mov in fmuls mov mov push push push push out repnz add imul cmp (bad) (bad) (bad) jg inc (bad) in or jo inc dec (bad) mov cmpsb aaa fs mov out mov or mov (bad) (bad) jmp pop xchg inc push cmp cli fs scas mov lahf clc fs and (bad) jo ficomp mov add pop or pop (bad) (bad) lcall cmp mov mov add cmp dec shl mov inc mov cmpsb jno (bad) mov ret adc push sbb pop icebp out xchg ficomp enter fsub sub push movsl sbb sub in or jb inc ja sub xcrypt-ofb cmpsl test sbb cli in xchg hlt push test jge pop cld (bad) jg cmp jbe xor icebp inc ret in orl cmp push push (bad) push das mov inc cmp out dec fidivl decl aam je mov in push (bad) push pushl negl or jns pop (bad) (bad) cmc inc popf insl push popf test push imul (bad) (bad) fmuls incb mov fucomip mov or (bad) pushf out fs mov jg jecxz sbb push mov (bad) (bad) (bad) pop stc adc pop dec cmp pop in inc cwtl xor std je mov pushl mov jl sub pusha out loop outsb cmc test (bad) (bad) icebp add xchg pop dec loop repnz out push push fnsave shr inc mov ljmp inc pusha rclb xchg shl xchg clc dec mov js test (bad) jg xor fdivrp cld je pop pop push into mov iret mov das stos sub (bad) (bad) (bad) incl leave mov inc xor enter or inc bound push imul fwait (bad) aas bnd push jge cmp lret fstpl mov push sti inc (bad) (bad) (bad) decl mov mov aas in inc inc and es and cmp jecxz cmp jg (bad) aas mov sbb sub ja inc inc lret imul ljmp pop dec in mov xchg sbb mov cld add fnstenv (bad) das (bad) jg (bad) cmp or or mov in int3 (bad) mov sub cld in add (bad) (bad) (bad) incl xor ljmp aam dec jae dec lods fnstenv push xor (bad) in lock jmp lcall xchg sbb adc nop push aad cmpsl lock addr16 sub add (bad) ljmp (bad) mov lret push or sbb loopne jb fild jmp test mov negb lock (bad) (bad) ffreep sub push mov push lods inc popa ss (bad) (bad) lcall stc or inc dec xchg adc cltd popa cmp pop mov aas push inc push aad mov mov inc jmp popf add in lock push sbb jecxz pop ljmp adc push mov decl ret fcmovnb out ss pusha dec pushf push aad xor pop cmpsl insl out pusha (bad) (bad) lcall shrb (bad) outsl and adc dec mov ss pop push shrl das call cld decl ljmp loope jge pop adc out fmull (bad) call daa sbbl arpl inc sub fisubr mov daa xchg jnp (bad) pop hlt stos mov xchg loopne cmc inc sbb nop cli pushl inc out mov fbstp (bad) mov sahf push in cmp lcall push nop xchg mov dec dec loopne jns cli (bad) lcall sub repz push lock repnz (bad) and or cmc (bad) ljmp aad or push jbe cld loop (bad) (bad) iret sti fadds or insb cmp daa add jl xlat ret ret sbb push and sbb xor cs rcrl push push cwtl arpl inc jp and out jge push rolb (bad) (bad) (bad) out push push xor jae jg fisub inc mov movsb incb fmulp in sbb inc (bad) cmp add call push mov inc es sar cli jmp gs dec in lea pop cmp repnz movsb pop adc imull std (bad) incl cmc pop mov cmpsl out cs mov clc push adc (bad) (bad) incl (bad) in sub out push pop xchg pop push sti pusha dec dec bswap sub jnp rcll adc jne (bad) out pop jge pmulhw adc (bad) jb test cltd dec mov pop lock mov jecxz rcll sti movsl or cld adcl jae jg cmp scas imul mov mov sub daa add clc mov xlat stos in (bad) inc fistpl pop or sub xchg jmp into mov dec loopne sti cmpsl mov iret inc mov mov (bad) repnz add sbb sbb cld xor push dec test mov pop add aad mov ret push je lcall mov mov ss dec int3 rcll loop mov ss (bad) jg pop mov xlat imul out out push xor (bad) in or (bad) jmp xor (bad) repnz shl pxor adc insl repz push test pop das pushf cmp rcrb (bad) incl int dec and lahf jmp leave daa add jno and push notl (bad) call sti roll dec (bad) (bad) jecxz loopne pop push dec aas loope mov stos inc fidivl pop lea into in imul je push inc idivb push inc das clc (bad) (bad) js testl adc xor jne dec lods std jmp mov push jno xchg repz cltd in inc cwtl mov dec clc rcll inc dec lret aas jae jmp sub mov sti push leave dec fs lock gs adc and roll icebp popa pop push sub clc ja xchg (bad) mov and (bad) (bad) (bad) call lock xchg push mov mov sahf pop jle iretw fnstenv jp adc inc xchg fs das cmpsb xor cmpsb sbb jg (bad) mov or push push push push arpl cli addr16 test (bad) pushf mov nop jb or pop mov mov push mov sub push lahf inc inc sbb (bad) jmp repz xchg and popf clc cli sbb cmp das adc jl out in dec cmp std or jmp adc or ret (bad) sbb int3 sub test sub mov clc sbb arpl (bad) (bad) (bad) ljmp ja loope lock sar mov stc pop cmpsb mov jmp adc out fmuls cmpl call (bad) mov and out xor inc or rcr adc (bad) decl xor stos fs (bad) (bad) lock ror mov (bad) dec aas pop adc (bad) ss dec (bad) (bad) (bad) decl push add pop fs ret sub (bad) imul dec add lahf pop xor fimul mov push (bad) (bad) ljmp stos cmp push add adc pmullw xor add lcall fpatan frstpm(287 mov push push and push das mov sti mov (bad) out mov ja lret pop jae pushf dec pop mov and cwtl (bad) (bad) pushl roll mov outsb push into cmp mov add fidiv (bad) mov dec (bad) call adc insl mov pop ljmp mov and or jle add and sbb cmc clc adcl outsl neg and mov das xchg jg aam lock push push push cmp sub stos xor cmp (bad) (bad) fisttp ds push pop jb in stc mov adc loopne mov sub jmp ret pop dec push les (bad) (bad) aas mov dec dec call lods add lods (bad) lcall add (bad) ljmp mov inc inc jbe in repnz scas xor enter in les lahf sbb mov mov cli pop jae push adc decl dec mov cltd das mov dec popf idiv fstps push arpl jno iret call clc (bad) jns inc ljmp outsl jbe push push xchg sti sbb lahf sub (bad) (bad) decl mov jmp repnz fprem1 daa fcom adc (bad) jnp adc mov xchg (bad) pushl loope fwait pop jge int sarl mov insl int pop or jge dec adc jle xor (bad) sub lcall or jne stc cmpsb mov call jb push cmp sub ja std push out adc lcall mov dec adc push pop push push ja inc popf pusha cli mov (bad) (bad) (bad) decl (bad) cmpsb clc mov lods jno enter push xor or cltd sub inc enter ljmp push xchg mov scas mov pop iret int3 data16 push mov subl or (bad) call movsl idivl ss or pop or iret (bad) aas jnp pop fwait xchg mov sbb pop movsl cli mov pop movsl sub cli (bad) jmp adc inc jl pop xor js loop out jmp mov pusha mov lock mov jmp mov test call (bad) (bad) sbb (bad) dec adc ljmp call add sub pop outsl aad into and and data16 lcall inc xchg mov push add stos sti or (bad) dec pop fwait push push and sbb inc cld (bad) (bad) lcall mov lcall sbb pop or cmp cs (bad) jmp mov xchg mov sti inc outsb shr repnz lock mov (bad) (bad) jmp or mov push mov cmpsl pop inc mov repz push ret cld cltd hlt lods movzbl les leave jg (bad) decl ljmp and adc out aad push das or cltd dec dec xorb decl inc jb or push pop decl sbb mov xchg cmc test repnz aam popw (bad) xor add jg dec cmp lcall inc test ja outsb idiv call push aas loop or jge inc and imul add (bad) (bad) (bad) jg outsl or int3 inc aam hlt out pop aaa push outsb loope xchg xchg inc adc callw add pop ret popf in xchg pop jle hlt pusha pushf ja rorl fstps idiv testb test cmp cmc test jmp les push call lock test pop cmp (bad) lcall repnz pop (bad) icebp lock fnstsw rcrl mull cmp imul dec dec loope lcall push repnz (bad) ljmp insl xchg push add mov xchg sbb aaa out test test xchg cwtl (bad) bound (bad) decl jo sahf dec out fmuls loop xchg clc mov cmpsl jae aam push inc clc (bad) ljmp xchg adc sbb or loopne inc mov cli lods sahf adc sbb or dec out jge push lea (bad) (bad) mov xor loop inc dec jmp iret mov ljmp shlb sub jbe jecxz adc push incb (bad) faddp mov mov adc decl clc jmp imul fcmovbe lock decl dec imul sbb scas inc aaa jo lret rclb jb dec jl (bad) decl cs ja out jnp push enter inc mul pop sbb pop int3 mov add arpl pusha or outsl push jbe add mov ljmp gs push int aaa push jecxz and pop (bad) (bad) fcomip adc push add aad mov js fidivl sbb inc (bad) (bad) jmp or cmpsl (bad) hlt lahf lock cmpsl (bad) mov jne push cld (bad) lcall mov aad sub out pop mov out and add or jge in xchg enter decb sbb js out mov (bad) incl dec ljmp pop stc push adc mov jge hlt loop (bad) (bad) pushl push jns push cmp push in dec (bad) in pop or ss shll loopne add cld fdivrs into sub jmp ds mov sub pop or pop ja cmp xor mov push push jp loopne,pt xor push push push fsubl mov push pop jle push (bad) (bad) ljmp push dec mov adc movsb scas pop jmp out mov aas xchg fwait loopne cmc (bad) (bad) mov push pusha jnp inc jo (bad) into test inc loop movsb cmp jecxz decl test aam inc pop pop (bad) vpmulhuw lods cwtl std xchg insb insl jno (bad) (bad) (bad) mov lcall sub jge loopne push ds nop pop pop in adc mov ss adc (bad) (bad) mov add arpl out sub xchg fidivrl incl out das pop jg inc mov push sbb enter mov popa into jg lods and fisub push push out (bad) (bad) (bad) call cmc add mov inc ss xchg outsb repz jbe sahf data16 ja adc dec aas repnz call jbe repnz cs mov dec jbe aad jecxz ret cld stos lret mov (bad) (bad) call gs into loope (bad) stc je push leave out iret (bad) ds imul cli loope xor iret call fstpl inc lahf mov test movsb ficomp lock mov push fldln2 cmc add scas xor xchg out scas or sbb mov dec insl mov dec ficompl iret push in adc scas and jne mov lea int jnp (bad) dec mov cmp jg (bad) incl enter jne decb and (bad) scas inc lret ret repz mov iret (bad) push pop inc pop int xchg sbb adc mov xchg loope ljmp outsl clc add jns aas lret adc cld sti test (bad) call call loope sbb adc call fwait (bad) push pushf xor not mov push cld popf xor frstor xor pushf vpsubsb add jmp inc in mov pop jne (bad) scas mov fs mov enter jg or add mov mov lret adc (bad) incl or pop lods lret adc in imul mov insb mov iret fs xor mov xchg mov sbbl (bad) (bad) fidivr fcmovnbe bound nop jns (bad) fisttp adc (bad) pushl in repz (bad) ficoml dec sbb rorb add arpl (bad) (bad) lcall cmpsl jns adc or rcl outsb daa push sbb jl push (bad) mov mov in std cs mov lock jg test sub adc dec (bad) test (bad) (bad) jns les inc iret lcall add (bad) in add jbe,pn add dec fdivrl cwtl inc fs ja mov mov mov and cmc test rorb jae repz push jecxz pop insb mov jl stc (bad) incl mov pushf cmp push dec mov add xchg push pop leave (bad) (bad) ljmp out int3 hlt add pop cmp jae dec adc jne xchg subl out dec pop (bad) (bad) incl jo test adc xor pop adc xchg push pop loopne iret jl ret popf and ret rolb xchg addr16 lret sbb and out mov callw imul lods add sub fwait (bad) popf inc (bad) (bad) call fcom push pushl push std and out in jne add (bad) (bad) (bad) mov ret and sti dec sub aad mov dec pop sbb jmp (bad) (bad) dec cli movsb push or insl lret jb pop popf js xchg aad and xlat in int (bad) (bad) (bad) pushl and dec xchg shrl mov sub xchg cltd lcall sub (bad) (bad) dec dec and lea lea jecxz test cltd iret inc sbb fwait hlt (bad) (bad) (bad) pushl push scas sbb outsb test out jl sbb pop push inc mov ljmp scas incl push sbb mov cmc sub (bad) (bad) pushl out xchg sahf aam pop test xor adc cmp enter movsl mov sti xchg out push mov jae (bad) (bad) aas or adc sbb inc sub in mov mov outsb jmp sbbl or sbb xlat int3 dec insb jns jnp rolb jg call cmp loop cli pop inc addr16 cmp pusha ss incl test or push push mov mov les or inc add jmp mov push cmp mov mov fbld psrld jbe mov fnstsw sub aam mov add lret es (bad) cmp fwait ret push xchg jnp jg (bad) (bad) cmp ret pop iret xchg add leave xor xchg mov (bad) (bad) (bad) ljmp sbbl es inc pop sti xchg lcall jnp push (bad) cld (bad) pushl ret xchg leave (bad) stc push inc jecxz ljmp ret lds (bad) decl outsb mov pop push sub icebp movsl (bad) hlt xor sub out adc jb test dec std (bad) call fisttp xchg ret out push or loope dec (bad) or (bad) (bad) (bad) jg cmp sahf sbb lds jecxz xchg push or jae pop fstps inc xchg lcall stc jns icebp mov je jnp fs imul out shrl lock mov and inc enter mov (bad) (bad) (bad) inc ds imul lock lods das mov sbb loopne cmp (bad) cs sub (bad) jmp xor pop jmp jp jge leave mov icebp mov shll and or sbb mov mov mov sahf lods mov push imulb sar xchg (bad) aam mov imul lret insb inc sbb ficompl (bad) pop shrl (bad) cmp or mov ficompl orl in mov decl jmp cmp int3 jl lret fnstcw test out fisubr (bad) (bad) (bad) lcall and pop inc hlt fdiv cltd inc cmpl xchg sub fmuls pop add inc repz (bad) decl insb and hlt pop cmp sub or cmp hlt (bad) (bad) (bad) pushl lret addr16 enter aas lret outsb inc repnz ffreep stos scas (bad) xor adc jmp mov add cmpb cmc ret xor (bad) (bad) (bad) (bad) (bad) out popf xchg (bad) pop dec daa mov call mov in stos push loopne jle sahf js mov (bad) cld (bad) clc jmp insb lock fcoms sub mov cmp (bad) (bad) pushl pop fadds jmp jae dec dec jnp mov push imul adc sbb fdiv lahf cld inc pop rcr ja jno test jp dec in in in xchg (bad) (bad) lcall mov imul pop jo xor cmp idivl in push (bad) pop mov add or lahf mov jno jne (bad) (bad) (bad) jmp push xor (bad) add cmp (bad) cmpsb sbb lods jmp (bad) cld (bad) jmp xor int3 ret popf xchg sub add jnp pop dec mov stos (bad) (bad) call jne test (bad) faddp sbb lret clc and cmp mov incl es int enter add push fs test jp sbb mov push mov imul insl fmuls test push cld incl inc ja mov pusha push scas jns push xor or clc jle fs add mov or mov pop (bad) call fcomip inc (bad) or mov or cli iret mov lcall fs pop cmp cld mov (bad) lods adc nop sbb fildll aaa fnstenv xor pusha (bad) (bad) (bad) jmp inc fwait xchg lods pop adc insl repnz lods pop jnp cmp ljmp clc (bad) fnstsw dec jmp fucomi imul push mov das pop loope aam addr16 decl add xor in cmc jmp repnz nop icebp call int3 (bad) scas mov or icebp cwtl add sbb call ljmp sbbl notl arpl (bad) (bad) (bad) dec testl and cmpl mov mov lahf sbb cmp scas clc xor pop ds fs inc sbb or (bad) ljmp lahf dec loope or mov pop add cld jbe clc (bad) jle hlt (bad) (bad) (bad) (bad) sbb push insb sub (bad) sbb faddl push xor movsb roll pop int in out mov ss out out cmp adc pop cmpsl (bad) and fcomps das sar pop leave stos jnp imul dec adc sbb jle xchg fstps pushl mov xchg fnsave lods mov xchg pop and fcomip cwtl sbb sub std cli (bad) (bad) fldl fs sbb sar push loopne bound loopne call (bad) lcall push xchg sbb jo pop das stos cmp adc out mov sub pushl xor mov into add mov mov cmp dec repnz adc jbe mov xchg cwtl sub jne (bad) (bad) aas or jne xchg xchg insb adc pushf mov jmp call dec int3 mov push ret sar mov mov insb ljmp hlt (bad) jge or cmpsb call insb rolb mov (bad) (bad) call xchg rol imul adc sub xchg or pop or cmpsb lods mov and and pushl xor data16 sub scas adc xlat xchg mov decl (bad) jns sbb mov xchg mov cmp (bad) (bad) (bad) ljmp dec pop jg fidivl mov mov cwtl rclb mov loopne jmp xor or adc mov xchg outsb mov sahf mov pop sbb jns push ret (bad) dec inc add xchg (bad) jmp clc fmull js mov sub sub push or ljmp jle (bad) (bad) push sbb adc test add sbb dec dec fidivl (bad) xor cmp lcall dec or or stos mov jp test cmp iret xor (bad) (bad) call add and pop jb stos sbb out mov sub pop jo sbb pushf daa andb cmpsw cmp mov push mov fdiv mov or xchg and js or rclb hlt (bad) jg lcall addr16 in adc outsb movb (bad) aas stos dec ds test dec out idivb jns imul mov lods sbb and mov (bad) and xchg sbb call push mov xchg fadds iret popf in lcall imul (bad) (bad) sti mov or jle pushaw enter jecxz aad mov or (bad) fbld ss fst jo fadds ja cmpsl xchg adc adc (bad) aas test pop jp ds dec push dec xchg mov (bad) (bad) call sbb loop cmp dec out xchg dec fisttpl add int3 mov and (bad) lcall stc mov jg pushl aad aad adc mov add call fsubrs push icebp mov out icebp decl lods jg fcmovnu mov (bad) xor push daa cwtl test mov mov adc dec lret iret movsl lods push leave sti jbe rcrb sub (bad) (bad) dec orl (bad) fsubr push pop pusha jno stc mov mov addl mov movsb mov (bad) ljmp mov mov jmp dec (bad) movsl push or jo dec push and mov push adc leave mov pop outsb xlat popf xchg fsubs xor xchg sub add push (bad) dec (bad) (bad) lcall push (bad) mov dec mov inc hlt aam mov mov cld (bad) (bad) (bad) mov push sbb fimull int3 rclb inc in pop add dec and (bad) decl out stc cmp mov push mov sbb adc add jno notl adc repz (bad) adc xchg or movsb (bad) jmp sub popa test jmp jge pop in fcmovbe and (bad) (bad) call dec cmp (bad) xchg xor (bad) rolb mov mov (bad) incl into jp sbb cli (bad) jle inc mov fs movsb (bad) (bad) (bad) (bad) cmp dec push pop push stos dec push daa sub arpl inc insl insl push stos decl push scas (bad) scas sbb mov inc les ret push (bad) (bad) incl (bad) jno cld movsl mov dec jmp add mov or mov les sbb in pop (bad) (bad) lcall wrmsr jae insb pop jl mov xchg aam and push sarl js dec (bad) (bad) (bad) jg fstpt movsl call sbbl stc (bad) or js decl pop jno jp mov dec adc fistpl adc (bad) (bad) decl shlb cltd pop sti pop fwait pop jns xchg push pop ret jbe xchg push stos sub lahf jnp mov push jle pop adc fiaddl shlb push icebp and (bad) jno (bad) aam push loopne jns vmovlps dec sub push andl sbb sbb cmp inc sbb (bad) (bad) (bad) inc loope stc mov repz arpl sbb and lcall jo enter daa mov xchg lock decl push jle xor or aad ret pop (bad) jg aas daa adc (bad) in dec xor pop out xor (bad) (bad) (bad) incl cmp enter jbe shrd mov (bad) push pop mov bound (bad) call push cmp gs in (bad) jne cmc mov repnz (bad) incl rol cmp outsl and cmpsl dec xchg addr16 daa mov (bad) dec stc jb sub aam fstps aam dec into int je test (bad) lcall cs imul test rclb mov mov sbb (bad) (bad) pushl xchg loopne test jno sub xor sub adc mov cmp mov imul fidivr adc (bad) (bad) mov or mov sahf ror xor add ret mov xor push fcos (bad) ljmp xchg push mov jg cmpsb mov test lahf (bad) (bad) (bad) call pushf (bad) mov gs test adc test les add (bad) shlb lcall pop dec adcl rolb jno mov insl insb inc cli mov (bad) fldcw mov xchg (bad) dec push sub mov cmp (bad) mov (bad) xor ds or add out mov aaa xchg shr lds sub push ret pop sar push out inc add sub dec stos fnstenv (bad) (bad) (bad) decl cltd jb addr16 rolb and jecxz sbb or xchg dec ret mov daa stos cld add (bad) (bad) push or cs add mov fsub iret repz sahf pop mov cld jg lcall rcrl fadds and xor int dec and out add (bad) (bad) call xchg movsb dec cmp mov insb adc data16 push xor jbe stc loope decl aad sahf in movsl std inc or lds lods mov jg lcall or sbb add aam jecxz in dec cld lds ret fwait (bad) jg call mov into dec mov xchg leave cmp in xor (bad) (bad) decl and test outsl mov and test imul in push ss fcmovnbe jne shlb and (bad) jmp dec xor (bad) aad icebp (bad) jns dec shrl (bad) (bad) incl popf jmp bound scas lds push cmp int3 mov inc lods movsl push fnstenv adc imul or xchg xchg push out ja xor mov push push dec dec test cmp mov xchg (bad) lret xchg repnz loopne add lcall mov loope (bad) mov rol sbb (bad) (bad) mov into (bad) (bad) xchg add repnz lods (bad) dec pop push imul clc fidivl cmc (bad) (bad) decl bound pop test jge rol in xor (bad) pop leave fcmovne or jmp sub (bad) ljmp es nop loope mov xor xchg outsl jbe xchg cltd rcrl popa lcall incl dec lret inc fidivr pop jns std mov push mov loop mov insl das adc push test out jbe in inc hlt adc xlat mov arpl push push push push mov dec adc sahf mov out dec movsl add (bad) incl inc sub xchg lods stos dec or fist in (bad) (bad) jmp movsb sahf je arpl mov (bad) xor (bad) js ss jmp dec mov (bad) (bad) (bad) mov ficompl adc or (bad) dec mov add cwtl mov out jge cwtl frstor pushf test loop loopne add and or pop add jo mov and push jp inc mov fadds cmpsb (bad) jle xchg (bad) (bad) (bad) incl cmp jmp incb hlt pop or jne fdivs nop lahf cld (bad) decl mov xor cmp pushf fldl mov jle into push and add lcall mov repz fs in aam mov cmpsl jmp fs dec mov push xchg sti dec ja push adc clc fisub enter pushl inc (bad) push adc ljmp adc insb int mov ljmp scas mov adc inc mov insl inc and mov (bad) ljmp cli test mov xor in and pop jae imul fcomip (bad) (bad) cmp xchg (bad) jecxz ja test pop cli ret cmp mov les (bad) push mov dec dec xchg rcrl and dec inc cmpsl lock push dec mov pop add mov pop mov je dec les lock daa call scas fiadd push adc test inc mov sub (bad) (bad) (bad) push mov nop cmc enter xchg adc push sbb xor movsb push inc jecxz std iret (bad) lcall cmpsb mov pop ja (bad) (bad) jg cmpsl dec imul add inc nop jp dec lahf inc cltd sub (bad) (bad) mov cli cmp push jmp jne sbb call std adc loop mov sbb lret ret push (bad) decl or repz outsl scas daa cmc stos inc push or and fdivr leave iret mov incl mov jns lret adc xchg inc in mov fldcw push dec jns jns sbb in mov fistpl (bad) mov dec ds ret sub test pop call xor leave (bad) push (bad) and or jmp xchg sub insb outsl xor xchg (bad) (bad) lcall sub int3 lret popa sbb aam loop pop and dec or andl lret call add (bad) fildl push idivl (bad) (bad) inc cli test imul test inc sbb mov mov lahf movsb stos dec lock nop jle incl or rclb jnp and ret pcmpeqd aas sub push mov sub pop cld (bad) mov xlat or int3 xorl in mov cmp inc outsb (bad) (bad) dec or xor aad dec dec insb add (bad) mov (bad) lret pop adc andl push int (bad) (bad) (bad) mov xorl movsb (bad) ficoml repnz fimul cli incl mov mov push and pop (bad) (bad) call enter ffree xchg mov fnstenv xchg sti decw lcall mov push mov add xchg sarl cld lcall jp aam mov mov jg (bad) (bad) jg adc or add cli lret jmp lods cmp fidivrl (bad) (bad) jmp out lods sbb aaa sti xchg pop and inc stos hlt ss outsb jmp (bad) (bad) pushl mov jne xor xchg add lods or jle pop iret inc mov shlb (bad) (bad) jmp pop sbb ficoml mov xor push dec push cmp sub fldcw jp (bad) in gs insl cmpsl xchg insl (bad) (bad) (bad) call fnop and xor orl jnp es dec push aas cmp push pop cli cltd add adc mov xlat (bad) (bad) (bad) in inc movsl push push sbb adc jnp mov lods cmpsb push icebp ds xor add arpl sub sti (bad) mov mov cmp addl (bad) (bad) push (bad) push push mov dec mov lret bound dec in and (bad) jg cld dec out sub out jg pushf sub mov pop xchg (bad) (bad) (bad) pushl inc pop push (bad) jae test ret in cmp mov cmp (bad) lods xor adc xchg clc repnz mov pop xchg std ffreep outsb push mov or (bad) (bad) ljmp int3 stc and xchg adc sti push mov imul lret pop sub loope lcall shl shrl xor icebp mov lods jne (bad) (bad) jg mov push lea hlt cmpsb or xor mov notb dec enter icebp (bad) (bad) fbstp jae mov mov pop pop fstpl cmp mov sbb mov push push mov inc int fcoml xor mov (bad) (bad) decl or ljmp data16 dec jge and dec rcrl ret dec sti mov pop xlat sbb fild mov or (bad) incl xchg or je push pop xchg or push jle pop loope lods mov dec les pop add incl jg cwtl cld ret scas mov out adc or ret std (bad) (bad) incl dec fldcw mov or add xchg ds pop dec adc jmp push push insb xchg ret lock add repnz push sub (bad) (bad) incl stos add mov mov mov negb dec jp cld lock loopew (bad) sub ret add jae pop cmp testl ret dec dec xor ret or aaa insb xchg sbb cld fidivl sub sbb (bad) (bad) decl lcall push loope push dec mov (bad) jmp movsl cwtl aad pop scas push push ja test call lock (bad) (bad) cmp lea mov push mov fisttpll xor jbe out mov mov cwtl and xchg in out add fsub leave cld pop mov je cmp (bad) (bad) (bad) cld mov pop iret ret js sbb mov movsl divl dec int inc mov (bad) fcom fimull mov lahf test andl (bad) (bad) (bad) call out addl inc add fldln2 jnp dec hlt ret (bad) rorb or sbb mov test ret sbb adc cmpsb lock jae xchg mov (bad) (bad) pushl mov and fistl pop cld rcr fistp xchg ret mov pop stc lcall les loopne ret out int3 repz scas or sub jb fcmovnbe aam or pushf mov addr16 movsb mov push pop (bad) xlat xor or add mov xor mov sub push mov divl dec (bad) jmp cltd push mov xor outsl cmp inc stc lret scas or (bad) xchg fild ret sahf rcrb (bad) cmp int lock aaa in decl call push aad int push pushf (bad) rcll imul add mov out mov xor mov mov cld xchg or xor xor les mov or mov sti loop dec xor xchg imul into and and pop lods aam xor add int3 xchg and push sub xchg adc pop shlb sbb (bad) jg pop xor addr16 lret loop loope (bad) (bad) (bad) (bad) jnp add in pop mov (bad) enter cmp mov jae sub add clc daa es cmp lret test pop (bad) (bad) ljmp in fcmovnbe lods fwait cld sbb lret push add pushf sahf and add outsb sub mov adc mov lock push cmp inc mov ss stos (bad) (bad) (bad) (bad) fsts ret aam daa push jne pop inc std out pop repz push fst (bad) xchg pop outsb loope and (bad) decl add andb push or shll scas cli (bad) pushl mov ret imul mov mov mov je push cmc xchg jg ljmp pop fwait mov mov inc cmpl decl adc jo (bad) decl mov inc and dec rolb call cld aam lock sub ficompl fwait std xlat in cmp xchg mov insb hlt add push push hlt (bad) mov incl (bad) lcall xchg (bad) push out mov lahf dec sbb xchg out loope push call test cmp stc (bad) jmp in test cli xchg decl shrl push xor cmpsb mov fsubr fs aas dec xchg insl mov repnz xchg js leave sub es inc xor push test cmp stos icebp adc and fwait (bad) (bad) decl jns int3 cs cmp jnp mov dec fadd lahf in movsl loopne cld (bad) decl scas (bad) mov jo nop jge inc movsb andl dec push cmpb push pushf cltd cwtl xchg clc jb fimul inc stos jbe cld inc bound cmp cmp sahf das hlt scas sar (bad) (bad) (bad) (bad) and lcall jb test test adc cmp adc ljmp (bad) aas decb mov std int outsb and lods mov jecxz (bad) (bad) (bad) call cmp push pop jo leave in adc sub ds lods sbb or dec jge divb andb popf add cltd aam jne lret (bad) (bad) (bad) (bad) cmp xchg negl adc test in leave add mov push and cli incl leave outsb xor test (bad) (bad) lcall cltd mov mov fcoms in mov out test (bad) (bad) cmp and jb or sbb scas jmp sub push fs test xor das pop cmc int3 mov push test push scas lods dec ja (bad) (bad) lcall outsb daa and adc or into ja jbe loope mov cld ds lcall push jbe jmp lahf mov push (bad) call cmp jae xchg pop fwait push insl mov insl (bad) cmp mov xchg rcll (bad) (bad) cmp fstps outsl xchg sub iret outsb (bad) (bad) (bad) push push jns xlat test sahf ds sbb repnz sub cmp loop adc xchg inc scas ficompl cmp lods testl or clc (bad) jg mov dec dec icebp out mov push dec repnz (bad) jns (bad) (bad) incl insb jae push imul pop or imul sbb decl xor (bad) jo push inc idivl lods sbb ds out push or mov adc pop cwtl push sar push xor cld dec fmul inc insb inc stos rolb inc adc gs sar add xchg aam dec xor mov or (bad) pop or aas xlat inc inc jne mov call and sub data16 sbb pop cmp enter fistp addr16 (bad) ljmp scas inc cmp add test mov aas es xchg loopne lock ja (bad) decl ljmp mov (bad) or (bad) fnop lcall sbb ss jae nop mov inc push jl ret cli (bad) call dec lods mov or cmp (bad) je std mov (bad) (bad) jmp push jmp pusha ret mov or arpl out aam cmp dec test xchg stc mov jge hlt add pop ss (bad) (bad) call fmul ja jecxz daa push out pop push push mov jne and jp xchg (bad) mull lcall (bad) push addr16 and sbb or (bad) (bad) sbb (bad) (bad) push in jge daa push push mov popa or mov rcrb mov xchg fildll ljmp data16 js add cmpb aaa ret ljmp enter repz outsl nop in scas mov (bad) ljmp ljmp inc sti dec in cwtl rcrb repnz (bad) (bad) call xor lret lret push jp repnz jecxz and fisubl push inc cli lcall add in fmuls mov addb cwtl stos jp sbb push sub push xor shll es loopne mov (bad) lcall mov cmp addr16 stos mov push decb push out xchg push shrb add mov jg or (bad) and fwait je mov xchg sti lcall popa addr16 fisubr sbb mov jg and movsb pop pop sub add int3 sbbl (bad) dec push sbb (bad) and imul js or push xchg (bad) (bad) fisub fildll lds imul stos push popf lods pop pop sub mov aas mov dec iret adc mov mov je jb xor inc loopne cmp (bad) (bad) decl jecxz and test aaa ss lock push fwait ja adc movsl pop (bad) aas add inc mov lcall jg in sub (bad) push or jecxz stc pop (bad) movb mov jae (bad) ljmp daa push test mov mov ljmp shll je int push mov cmp mov sub mov clc loopne call mov dec pop or clc adc (bad) fisttp push add lock xor (bad) (bad) jmp dec (bad) pop ret test popa sub jge mov adc (bad) cmp sbb lcall lcall addb loopne dec loop (bad) ljmp lock push and adc xchg sub arpl (bad) (bad) out xchg dec jp les xchg inc xchg and or stos lahf fs pushl mov and std cmpsb mov dec add jo (bad) movsl int loope mov adc mov pushl jb (bad) shr clc movsb mov out and mov sarb sub fmull fdivs loop adc loopne mov test aas inc (bad) frstor leave loop loop adc lock (bad) cmp mov push and lret mov sbb mov xchg mov insb xchg imul and in aad hlt or sarb and fldcw loop aas and dec xor mov das and xchg fisubrl ljmp xchg rcrb imul mov (bad) decl (bad) cmc xchg jae rcrb test stos mov and dec sub in in punpckhdq jl faddl std mov arpl pusha xor and loopew decl mov popf push mov xchg cmp jmp in (bad) jg loope mov adc scas dec pop and push sbb (bad) (bad) scas movsl rorl aaa jnp jg shrb daa loope sub cmpsl jnp cmp mov pop ret pop inc inc or (bad) (bad) decl lcall sub inc jns jae std inc in adc xor mov outsb and in mov push mov sbbl mov mul (bad) (bad) aas xor fyl2xp1 mov inc out pushf fdivp dec mov cmpsl call cmp push mov int xor inc repnz jo add xchg jp xchg jns popf mov call push out mov pop int3 or cmp push call std call cmp cmp das pop push cld push and jns and lods push scas mov nop or (bad) dec hlt adc loop movl adc cmpsl mov push sbb and lahf mov mov cmp xor outsl jle pop (bad) push fdivrp call xor call sub pop pop lock iret pusha arpl pop (bad) (bad) (bad) jmp lock jnp subl (bad) adc dec adc inc lahf or std xor cmp xchg ljmp lods mov dec push mov push xchg mov mov (bad) (bad) jmp rclb das test dec xchg dec pop mov add outsb pop int3 (bad) aas sti jmp cmpsl jg scas lret loop mov pop lods mov leave lods sbb int (bad) frstor movsb mov int push xor fnstenv incl inc pop (bad) pop mov fidivr test (bad) mov and mov enter xchg jbe clc lea add (bad) (bad) (bad) decl dec mov pop test sbb xchg mov mov movsb scas jo,pn out xchg (bad) jmp dec sbb or std lock mov mov (bad) (bad) (bad) jnp cmp xchg in scas lds sbb xor jbe sub dec ficomp into and (bad) mov sbb jge les adc (bad) icebp and fist divl push sbb fldcw dec imul outsl pop inc push jg pushl mov xlat mov pop cmp ss xchg (bad) (bad) (bad) decl jle (bad) pop imul scas (bad) mov mov and (bad) dec cmpsl mov mov pop cmpsl and cmpsb or call cmp sub out ret iret xchg push in inc and jns (bad) (bad) lcall test nop sub iret stos (bad) mov aam xlat sub mov mov test pop int aaa je pop mov (bad) decl clc lahf mov push out icebp in aam xchg xchg (bad) (bad) scas mov mov mov (bad) ffreep jmp in std unpcklps stos mov out and cmp pop leave pmulhw xor pop hlt xchg push stos pop and in jo scas fldl and call pusha sti lcall sahf cli mov sub clc scas clc lcall movsl (bad) fdivs jb mov outsb arpl das fcos (bad) call jg aas rorb sahf jno test sub (bad) cs xchg (bad) (bad) jmp fs sbb sbb out mov push ja fstpl sub aaa push out mov mov out pop lock (bad) fildll loope ja shlb scas fwait insl mov fdivr jmp fadds inc notl pusha out ss mov int sahf fdivrl (bad) (bad) pushl and mov mov fdivr push ja adc sub push decl test movsl xor out into js jno in inc js pop dec cld mov (bad) fcomip cmp mov mov decl sarb call adc jmp (bad) dec imul push (bad) fs inc fcoms loopne imul jecxz scas fcmove and and jle sub (bad) incl add mov hlt and mov lds push xchg cmp mov jge pop into (bad) and decl mov push push cmp fsubp repnz sbb outsl or cmp xchg adc (bad) incl fsubs ror adc push insl rcrl mov ret mov xchg test lods add cmpsl popa addb cmpsl adc jecxz mov push les (bad) ljmp and shrb and or mov add xor arpl fcomip (bad) fnstenv in scas push xlat addb xchg push sbb fstpt es lcall bound arpl mov mov (bad) std pushl cwtl xchg iret mov mov imul push (bad) (bad) (bad) lcall dec mov movsl imul inc lds data16 cmp (bad) cmp xchg (bad) lcall add (bad) outsb dec and mov or outsb dec pop (bad) (bad) call lods mov mov xlat movl push (bad) aaa mov nop inc out mul jne div fildl jno outsl clc jg (bad) mov xor sahf call fdivrl add (bad) (bad) push arpl (bad) pop decl xor push cli mov dec adc xor out add mov cmp pop nop jmp lea and cmp (bad) (bad) pushl fsubrl dec push in inc mov cmp clc mov inc iret cmpsl mov pushl leave lds (bad) out adc cmpsb sbbl pop adc rolb ja mov inc gs daa cli mov iret test (bad) imul (bad) jae jg loop pop jle and enter xchg shrl push mov xlat icebp sub pop and mov sub cld (bad) pushl xor test mov out es (bad) (bad) dec push xor cmp in jge iret sbb cltd syscall pop out inc (bad) (bad) jg ret pmaxsw rcl mov into sahf les ret xchg or pushl jmp sub jecxz (bad) xor movsb iret std xchg (bad) (bad) mov sbb mov lods pop xchg sub adc (bad) rcrb push stc idiv (bad) cmpsl lock std mulb js arpl mov xchg jmp (bad) (bad) aas fwait shrb cmp and mov mov inc stos or adc (bad) (bad) incl mov sti add mov xchg mov push dec and (bad) ljmp cmp jns insb dec fbstp aam fwait inc cmp (bad) out sti push popa (bad) (bad) mov aaa mov jnp pop mov mov ds aas test (bad) and pushl cmp addr16 sub push mov inc stc hlt mov (bad) (bad) (bad) jmp insl jno pop (bad) lahf cmpsb dec and mov in jecxz add in scas xor cmc das test jbe stos movsb and (bad) (bad) (bad) pushl test movsl cmp sahf sub shlb repnz mov or repnz push xor jle into in hlt push cmc adc mov mov xor (bad) (bad) cli or jecxz cld mull fistpl push mov out pusha mov push or and mov neg sub mov or adc mov cmp pop fdivs inc jo or (bad) adc out inc pusha sub in lods popf mov das cli call add insl dec dec cmc cmp push jmp jbe mov (bad) out scas or lcall add pop jp push mov fcomip test incb out mov or add xchg dec test xchg or (bad) decl mov sub (bad) xor jg movsl stos inc in jnp jge add (bad) (bad) (bad) (bad) mov push xchg cwtl push and jmp rcll lahf (bad) cmp pop inc ds or xchg xchg loope loopne mov pop xor inc pop popl test or out mov (bad) decl xor xchg nop mov xchg call add pop roll ss mov stos mov mov pop nop xor (bad) (bad) pushl nop decl xchg mov mov cmpl clc pop lock decl int3 cs test sbb inc jne add mul adc aad add aam shl js cmp aas mov (bad) pop call cld pushl ficoml aaa jge add int3 jl out inc or mov imul test jo ffreep leave gs xchg popf fbstp (bad) (bad) (bad) jmp xor pop adc mov sub and dec pop cmpsl dec push mov sar loop xor xchg sub dec jle pushf and (bad) (bad) incl and out jl ror ret data16 xor movsl push mov out clc ljmp clc es mov jmp xchg sbb (bad) incl lea std ret push mov out loop xchg inc (bad) lods sar ljmp jno adcl lret sub fistl mov mov xlat ret aas push xlat sbbl mov xorl (bad) (bad) dec pop adc loope mov lock fwait cmp cmp movsb (bad) xor sbb and std imul jp (bad) mov (bad) xor xchg std dec xor test (bad) hlt test pop lods pusha xchg pushf sbb or and add add lock insb mov mov sub jmp insb mov (bad) (bad) out fsub fidivl or out adc xlat loope movsl ljmp pop aam or xor (bad) aas xor sti dec enter std in mov mov add jg clc mov rol adc inc pop out dec xor cmp ret push (bad) lcall mulb fmul movsl loope jbe mov push sbb (bad) out (bad) (bad) (bad) call orl es mov and fwait test xor int3 add shr fcomip idiv test sbb movsl jle xchg cmp loopne cs and push jmp pushf ret std jb loope mov mov lret pusha and mov in lock jecxz imul mov outsl ret dec xor fs (bad) (bad) in jb lret jge (bad) mov adc iret pusha dec sahf (bad) aam (bad) adc jne (bad) (bad) lcall ss int3 cltd sub cmp mov fadds into clc inc or push adc (bad) repz inc addr16 mov xchg in bound pusha je mov (bad) (bad) decl xchg cld int xchg jmp test out lcall mov fs cmp dec xchg add into and loop clc cmp mov (bad) call sbb sub xor (bad) mov mov inc (bad) cld adc hlt lcall test cmp in dec pop ja cmp mov (bad) (bad) mov shl outsl sbb or xor les lcall js cld (bad) (bad) lcall mov bound shr sbb push or dec in movsl and lcall dec dec ret push rcll nop std xchg lds (bad) fisttpl mov subb cmp push into out push dec add int xor (bad) loopne rcrl and or mov mov into imul leave fwait add (bad) (bad) lcall dec pop test jle push xchg js stos leave in (bad) lock cli (bad) out clc bound adc movsl mov aas mov (bad) (bad) ljmp ss pop scas cld xchg mov jne xchg sar subl cwtl in cmp scas dec aad dec loopne aam es add mov gs (bad) call je mov data16 div loope test jmp push ja mov sbb incl repnz scas mov cmp mov int stc outsl cmp add ljmp test icebp scas scas das push fwait add cs push cmp cmp add incl outsb movsb stos inc xchg mov mov cmp (bad) jg push lods fstl sub roll ffreep sbb in sub (bad) (bad) (bad) pushl dec mov repnz or (bad) pop call (bad) (bad) call and push jmp push sub (bad) sbb pop lahf mov into (bad) dec stos add jg adcb adc pop insl and push dec lret sbb mov icebp jp sbb add pop jns add int3 into movsb jb dec ljmp fsubl clc jg mov mov (bad) xor stos push mov loopne (bad) decl inc or mov add sub aas xchg xor ds decl aas cmp insb out lods push hlt fs addr16 jb or dec movsb imul xchg inc mov call xchg bound mov jae add hlt call sub cmp push ljmp (bad) ljmp and mov mov sub test ret (bad) (bad) dec ret sbb inc add iret stos xchg inc fidivr jns dec adc sbb (bad) (bad) lcall sbb fmull dec aaa out lret cmp je movsl fiadd inc inc repnz (bad) inc mov xor sbb inc int adc fdivrp into mov and lea (bad) jg pop jae push xchg out test pop xchg adc fs jae jmp mov sub adc dec dec popf pop addb out adc dec movsb sbb pop mov add push sbb loop ror or and push outsl cwtl or or (bad) icebp and jecxz cmc fsubrl or out xlat sbb push in inc mov cld in fidiv ljmp cmp clc or sahf adc aas (bad) or mov jo pop inc add mov adc xchg (bad) std jecxz jnp ljmp mov scas test jb loop (bad) call mov or shrb (bad) mov addb leave mov pop jnp stos jg xlat adc insl mov mov movsb (bad) (bad) decl inc std out adc ljmp jl mov gs mov call mov adc inc int3 mov shrl lods xor mov jns pop mov les cmpsb pop xchg cli leave sub das dec sar (bad) pushl enter xchg sub es or js mov pushl cmp jle ja mov enter mov lds popa adc sbb sahf pop fsubrs enter push sub enter ljmp adc cmpsb test scas dec sub mov cmpsb push stos (bad) (bad) (bad) lcall (bad) bound inc and mov call inc (bad) fidivr (bad) decl cmpsl and leave ja (bad) mov cmp mov pop lret (bad) decl outsl idivb mov dec dec ret xor decb mov adc call bound int xchg int pop and (bad) (bad) jg scas in imull sub dec gs xchg sub jle mov xchg pop xor popf cmp cmpsb pop push add jmp cmpb insl lcall inc cld dec movsb loopne or mov scas out lea pop jno loope (bad) pushl sub mov rcrl lret dec imul pop push pusha cmpsb lea inc add cld pushl push jbe jp cmp insl add and ljmp imulb or cmp imul mov enter and pushf sbb mov aas adc add xchg push leave jae leave xor add (bad) jmp clc inc test mov cltd and mov andb lahf add decl jp mov sbbl incl sbb es mov mov add in (bad) cld sbb pop dec aaa mov aad js dec jl rcrl mov popf es (bad) decl js sub fnstenv lahf add aas inc inc aaa (bad) (bad) (bad) lcall (bad) mov imul nop (bad) cwtd pop xchg mov pop (bad) mov aad stc mov mov or sar pop cmc movsl xor push loopne clc push popa cwtl jbe fdivl jl (bad) mov adc push movsb or mov dec (bad) (bad) decl adc jecxz xbegin jo jp jle sub fimul (bad) (bad) (bad) (bad) fucomi mov xchg bound cld xor adc xor push jbe mov lcall cmc cs std lcall (bad) jbe inc mov dec cltd mov push (bad) jg and lods cmp pop pop hlt test insl add icebp (bad) (bad) sti pop insb nop pop ret mov inc bound add out ror pop cmc (bad) (bad) fimul sub sti sbb jbe test movsb mov (bad) (bad) pushl sub sbb insb (bad) and repnz arpl clc out rcll pop jecxz mov ds fisubrl push ja xor sahf pop int mov (bad) (bad) (bad) fnsave bound faddl mov xor xor int3 inc mov and (bad) aas repnz sub aam das pop mov in and shrb (bad) mov pop icebp adc cmp movsl cld ljmp mov xchg call pop lret loop xchg fiadd adc xor (bad) (bad) (bad) decl add push pop dec pop cmpsb jno sbb sarb frstor (bad) mov scas dec mov call push xchg pop jp mov call clc (bad) (bad) decl jbe (bad) pusha or push incb lods push push mov sub (bad) and push ljmp fisttpll lea pusha fsubrl mov pusha loopne std sub and pop andl xor cmp leave aad hlt mov jg mov cmp (bad) lcall inc sub cld pushf sbb in sub loope repnz sub and add push andl ret (bad) (bad) lcall rol or mov xor leave addl cld sbb decl dec aas mov cld inc aaa dec rorl fistpl (bad) (bad) mov ljmp and or aam jns mov incl aad cmpsl imul incl inc push jno andb mov lock loop (bad) jbe adc add popf mov inc sub dec dec mov mov (bad) or mov and cmp mov (bad) mov mov cli ljmp mov lret push sbb sti cmc movl cld mov jns push outsl push lret mov ljmp aaa lcall dec insb xchg push popf arpl mov sar js lret cs xchg push dec jne test lds (bad) (bad) (bad) pushl mov movsl push cmp test scas sti (bad) cmc and jle xorl scas icebp mov iret pop popa in cmp cmpsl data16 push (bad) (bad) (bad) aas pop mov dec sub sbb mov out sti jmp jg (bad) lcall pop mov ret jp orb or rcll movsl lahf ljmp test pushf aam repz inc pop (bad) call cmpsb ret sti ljmp pushf fmull mov push sbb mov cmp xchg and xchg icebp leave mov ror imul icebp xchg incl xor push dec dec inc mov jle (bad) (bad) fnstsw std and sahf js cmpsl cltd lds nop test add mov (bad) mov fisubr jg cmp int3 loope iret push outsb adc jge stc dec adc xor mov mov sub sarb (bad) jmp das icebp in inc inc lret addr16 xlat push sbb cltd mov xor popf push (bad) decl sahf fiaddl aaa out int pop xchg ret push movsl nop stos es (bad) (bad) (bad) (bad) fildll insl lcall rolb xlat (bad) dec push adc test dec bound mov adc inc aaa push and dec push mov cmp (bad) (bad) (bad) cli js in fistp pop lahf mov js add lods in add push rcrb jmp (bad) fmull leave adc dec fstl imul xchg sub int jmp addr16 mov imulb les xchg iret (bad) mov mov sub sti cmc int3 outsl fistpll out jge cmp (bad) (bad) (bad) jmp add (bad) sbb lods sbb ret and in mov call hlt jmp dec or loope into mov fmul lods mov sbb cld dec adc lea mov mov mov imulb lcall call sbb or pusha inc xchg popa fucomp sti loopne jb sub pop lcall cmpsb fnsave neg (bad) (bad) xor lods jle add (bad) (bad) std sub js pop mov pop (bad) loope int3 cmpsb push inc add lock aad ljmp adc negl test mov popa adc (bad) dec lea mul lods mov test pop in (bad) or mov mov (bad) ljmp das pop leave addl or xor popa xchg fcomps fidivr arpl shlb mov (bad) decl add and scas pusha stos add xor int3 sub loope add (bad) inc pop inc or aaa imul nop sub mov decl ret fidivrl jns sbb ror sarb sar (bad) (bad) (bad) out loopne xchg mov orb in in (bad) mov icebp nop (bad) (bad) aas mov cmc jne add enter inc mov (bad) (bad) (bad) decl xchg xor cli outsl xchg mov mov ret xor push rcll sub mov cmp xor cld (bad) (bad) (bad) incl push lcall (bad) fndisi(8087 sbb push push out movb (bad) (bad) incl into jo out mov ds cli lret push outsl lret (bad) jmp (bad) (bad) (bad) decl mov insb (bad) mov (bad) lret ljmp movsl and mov jecxz sar ficom jp nop mov push in aas std adc pop adc (bad) jg fstpt and sub je into out (bad) (bad) mov push pop push jle xchg movb (bad) xor popf or loope add pop daa ret faddl scas fucomp (bad) (bad) (bad) (bad) cmp lock pop je inc cmp adc sub xor and mov aam xchg daa (bad) (bad) lcall sbb popl pop (bad) enter or mov aam subl fidivl add pop (bad) xchg mov pusha xchg mov cmp cli call cld pop test xor sub lods lds pop je je cwtl dec shrb aaa dec sbb mov inc scas (bad) (bad) lcall clc nop ds inc cmc scas xor jle daa or (bad) mov not cmp mov cmpb and push cmp add adc fs inc dec repnz xchg (bad) repz push ficoml int3 lods fidivr nop pop xchg xchg sbb mov (bad) pushl outsl in test (bad) icebp cmp pop jbe (bad) (bad) (bad) (bad) cmp aad dec aaa adc adc mov into sbb jbe push cmpsb repnz pop stc es mov cmpl rorl ljmp rcrb test (bad) mov fldl adc gs lods (bad) mov cwtl (bad) stc lahf dec sbb (bad) leave imul (bad) (bad) lcall fstpt mov push jns sub addr16 in clc push (bad) or je fwait mov imulb xor adc lock mov je bound lock mov jle cmp xchg pusha mov (bad) xchg adc popf aaa int insl int xchg ficoml xchg adc es lods jns cli sbb pop (bad) xor daa mov pop cmp or dec xchg mov dec jp sahf xchg mov push (bad) pushl mov test jne in loop popa paddw inc les mov sbbl (bad) (bad) jg push fcmovu stos fwait pop dec inc push and jge imul adc or (bad) (bad) (bad) ljmp fcoms jecxz out test dec icebp (bad) or test add es mov jl or add (bad) (bad) call (bad) fiadd fyl2x jl lods adc mov mov gs (bad) decl lahf ja lods xchg (bad) sti jns mov leave jg (bad) lcall cli loope jne sbb xor int jp fxch sub (bad) xor push lret ret (bad) ljmp loop xchg (bad) clc mov cmpsl jge sub sub xchg inc lds mov or xor jp test pop nop mov incb (bad) (bad) (bad) jg push push repz push rorb push xor pushf stos mov push jae mov fdivr (bad) dec xchg cmp ret insl gs pusha cmpsb xchg out inc sbb adc ds (bad) (bad) (bad) js mov add or pop mov xchg scas push dec mov or (bad) jg test add dec pop mov xlat dec scas cwtl sbb (bad) (bad) incl or inc loopne mov mov loop cwtl jl push mov dec ret mov mov (bad) (bad) lcall test call lods dec sub or inc sbb xchg (bad) (bad) jmp adc int jae sbb mov jnp es fcmovb inc sub insb xchg mov icebp aas repnz leave xor push mov cld push sar xchg rcl ret dec std sbb (bad) ljmp lds xor in and adc js sbb out inc repnz mov mov dec movaps imul sub rcrb pop test (bad) (bad) fmull popa lea scas add loop sub sar dec xchg jle lds out mov ret sbb lret jge pop leave (bad) pushl std div pop xchg and and lock das and negl add adc pop iret daa enter xchg xor jb mov scas icebp test push mov add (bad) aas xor jbe push or pop sub mov imull loopne inc push and pop cld (bad) (bad) fistpl (bad) orb bound mov mov ficomp dec jmp pop mov lahf hlt (bad) jg fwait ds pop fsubrl inc movsl (bad) mov (bad) fsub cmp (bad) mov test into lcall sub (bad) mov jno xor xor and cmp fucomip scas mov sub (bad) ljmp mov push stos fwait std push sub loopne insb cmp or xchg js xor movsb decb cwtl mov mov adc pushw (bad) lcall aaa mov dec mov pop mov sbb sbb mov adc std add adcl ljmp xor inc cli out mov dec sbb aas cmpsl insb enter pop adc stos (bad) (bad) (bad) jmp subb push jbe cvttps2pi and push xlat jbe mov and (bad) (bad) lcall dec pop mov out sbb mov cmp icebp xchg test cld (bad) (bad) call sbb lret enter push (bad) lods pop lcall push sbb dec stos dec das (bad) (bad) decl lds arpl lods dec xchg fidivl xchg sbb (bad) jmp movsl scas sbb cmp insb xor leave pop test in xlat lods sahf decl je pusha jle mov fbld jl adc cmpl xor sub (bad) (bad) fistl mov fidiv pop inc and xchg adc idiv inc pusha (bad) (bad) jg fist inc or ljmp and and mov push (bad) (bad) (bad) jmp xchg xchg cmp and sub adc xchg fisubl (bad) jb push mov lret int test inc sbb xchg push ficoml icebp ds (bad) (bad) in fldt jge jbe mov xor lcall add add (bad) (bad) (bad) jg rcll mov adc and sbb mov dec xor jbe cmpsb add (bad) (bad) inc pop or jbe (bad) xchg rorl add cmp stos pop or (bad) jmp punpckldq jge dec bound sbb imul mov mov xchg scas jnp xlat xor mov add cli push jl rcrl cli mov dec cwtl fcomps int3 stos add jmp xchg pop mov cmp xchg lods insl incl vminsd int3 adc ss add jbe inc inc push inc cmc xchg push pop (bad) (bad) out js pop loope addr16 sbb lock stos movsb sbbl push (bad) (bad) (bad) ljmp out (bad) mov adc mov pusha mov mov cmpl aas mov lds push (bad) sti mov ret shrb mov outsl cli mov scas fcmovb mov inc mov xchg mov add cmp cmp jp lret (bad) and sbb or ret sbb xchg test mov js sub mov lcall jl es or cmpsl jnp inc dec cmp pushf mov incl cmp stos leave scas sti (bad) repnz enter (bad) (bad) pushl push mov testl xchg rcr out repz push fldcw std sbb dec jecxz mov dec add sub push sub es and sbb ret cli and pusha loop sub adc sbb (bad) jg ljmp je mov add mov jge jo (bad) (bad) jg ret mov cmp rsm mov shrl mov inc pop clc jg incl and mov push add iret cmp fwait pop repnz mov es push out test push (bad) (bad) (bad) incl out int std (bad) jbe xor in and in scas xchg cmp arpl imul cli ljmp flds add out insb inc add addl dec (bad) lcall pusha cwtl shl or int3 ja jge pop inc cmp (bad) (bad) (bad) decl jns outsb push rorb in push jl test lret push test add popf les inc popa cmp (bad) (bad) call pop push xchg test xor xchg cmp ds outsl cli clc (bad) (bad) jmp iret mov dec aaa adc add ja scas sub loop cmp fwait lods push (bad) (bad) decl jno es sbb or mov orl test jmp fcoml jns lss cmp jle xchg subps mov cli dec push dec (bad) fcomip jg out jo test pop dec rorl pusha inc add sub cmpsl inc fmul loop (bad) jmp inc adc in mov inc fisub cmp lcall mov and xor call into jns inc xor mov ret stc or out pushf pushf adc (bad) push xor jmp xchg lret xchg lods call flds and dec fistl test cli out adc jmp je jmp pop aaa roll lcall jns xchg mov jns incl lcall sub xor (bad) fwait test mov xlat cmp (bad) (bad) (bad) call mov rol and rolb jne popf in aad sbb scas or cmp rcll pop sbb pop xor fcomip cmpl or xchg popa mov test sub push push mov jle sub (bad) jl incl cmp (bad) fcos gs xchg loop (bad) divb dec lea imul jle and (bad) inc aas jp in int movsl movsb repnz fbld fsubrl (bad) pop divb or push incb lods ror jne push cmp int fsub (bad) (bad) (bad) pushl mov add enter inc adc lea mov js daa jmp cmpl (bad) fisttpll jp lret inc cmpsb dec sub (bad) pop rcrl data16 or (bad) (bad) jmp xor adc xchg sti push and std pusha mov and inc pop adc jl mov ret pop sub fwait (bad) and add jae xor (bad) leave popa aaa (bad) (bad) (bad) call push add psrlq lods mov lods inc cmp and (bad) (bad) ja jmp cmp dec pop imul or jl fistp and dec cmp and add xchg repz (bad) jmp adc int adc mov pop aad or pop mov pushl decl fdivrs dec addr16 mov call pop sub les stos jne inc nop push cwtl lea mov pop mov ljmp sbb and mull sub jae ds push (bad) (bad) (bad) lcall pop loop ja test hlt out lcall add out fdivrl dec rclb icebp adc dec incl dec (bad) mov pushf jnp lea jb aam sbb std push iret xchg mov (bad) call fcomps cwtl in mov xchg inc mov add fisubrl leave (bad) stos mov dec cld pushl push push pop fsub jb out inc scas fistl test (bad) jmp or das inc out dec xchg outsl in push bound ljmp out xchg rorb cmpsl dec jg xchg int outsl in (bad) call iret xor add xor test test nop icebp push mov (bad) fildll ret inc ljmp mov adc clc (bad) fwait or (bad) cmp (bad) sub xchg adc out pop pop pop xor ljmp dec fldcw push movl inc call ljmp xor fistl out jnp xchg mov out test xor and std add outsl cli fisttp (bad) (bad) mov mov mov sbb sub mov scas aad (bad) push jbe sbb and imul add (bad) sti adc (bad) (bad) (bad) jg pop aam lcall xor sub adc cli xchg lret jnp movswl fwait (bad) cmp sahf inc ret inc insb jmp inc adc mov or mov out mov mov (bad) (bad) fild mov icebp jecxz mov pop add mov in push dec bound (bad) jg test sarb stos mov out or xor movsl mov xchg dec mov fisubr inc (bad) outsb cmp (bad) enter (bad) ljmp or addr16 sbb ret inc flds shr dec lods mov sti sub and jle (bad) lcall (bad) jmp mov inc sti test fs xchg or sub pusha mov lods fxam inc ja push (bad) (bad) ljmp push inc pop cmp enter mov adc lahf aad in lock (bad) jmp mov out das rorl es aaa enter cmp es sbb (bad) lcall dec add jnp jns pop mov fwait into (bad) jecxz add sti (bad) (bad) aas adc mov dec loopne mov mov cs clc lcall pop aas adc mov or cmp (bad) xor jle inc sub sub arpl test bound decl imul (bad) (bad) dec outsb leave sub sbb sub push xor or or dec lds lret in and das xchg aam mov test (bad) (bad) (bad) incl and inc loop incb xor mov icebp jno movsl cmp cmpsl cld sbb mov (bad) ljmp cli mov aaa psubq lret add (bad) mov aas pop mov aad xor std fdiv push movsb mov jl pushl cmp ret xor inc inc mov or mov and sub (bad) (bad) incl cld add popf dec mov xor loope push mov popf (bad) stos mov sar xor rclb int js in loope test cwtl sbb lods popf (bad) sbb test fistl jp xor mov adc sbb cli jmp rcr mov arpl jle mov sti adc or (bad) jmp cwtl shlb mov aad imul mov or daa cmp sbb pop jae mov das jae pusha add inc stos mov jle add (bad) (bad) jg jnp jecxz jp ret xchg push xchg push cmp idiv dec vminps push mov (bad) (bad) lcall jge mov sti inc pop int3 out test arpl mov xchg (bad) in rcrb pop mov lcall jo mov push pop decl ret adc mov pushl adc mov jecxz xchg das je mov xchg dec pop sarb sbb repz fdivrp stc pusha fsubs dec (bad) jnp sub cmp push mov add sub cld jmp popf stos sbb mov (bad) pop add (bad) (bad) (bad) call jno mov aas or cmp fucomi gs mov jp push adc jmp mov into jne jae or push inc stos fsubr outsb push (bad) (bad) jmp sub popf inc insb mov jle or dec addr16 cmp int3 sbb decl pushl sub jne mov cmp add icebp je and (bad) xchg out stos cmc adc lods adc bound rolb xchg es and sahf movsb sbb mov setg mov adc adc (bad) push mov mov push out into mov lcall movl jne stos mov and enter (bad) decl add or or xchg inc adc lds pop loope cli xchg mov inc call or aad jno mov (bad) (bad) (bad) pushl aam popa inc jo push inc cmpsb adc movsl pop pop nop cmp je xor dec sub adc xchg (bad) ljmp inc stos mov js or pop jnp hlt sub sbb (bad) (bad) call add and xor repz sbb mov idivb push pop incl aas (bad) ss xchg mov lea stc sbb inc orl sub mov insb inc inc in push cmp or (bad) (bad) incl (bad) mov lcall pop loope mov mov push (bad) fadds mov adc mov daa or or ljmp xor or push sti dec divb mov pusha int3 jmp aam (bad) (bad) mov adc lret push test das xor mov inc inc or clc pop (bad) (bad) (bad) inc (bad) ds jmp jge out scas mov adc and add ret pop lcall rcll aaa std sarl adc shlb out mov pop pop adc leave sub shll (bad) cmpsl aam call cltd push xchg or inc jp dec jnp mov sub dec clc (bad) (bad) jmp leave adc jo call or adc mov or mov ljmp in rol dec mov nop add (bad) lods mov stc insl inc sbb stos or lcall mov cmp (bad) gs mov nop call outsl pop jo sub xchg mov ja lahf scas xor daa sub mov mov cld fcos sbb mov in mov mov or sbb pushf mov push lret test lcall in (bad) pop xor cld (bad) out lcall xor andb cltd nop jmp decl and mov hlt xlat insb je jno (bad) cmp add fistpll cmp imul inc jg sti pusha mov xchg lods push stos popf aam push repz jg adc xlat insl mov aaa add adc inc add scas insl and (bad) lcall lea xchg in and fs nop fnstsw fldenv xchg dec sub fild out mov push and pop ficoml std (bad) call cld fdivrs pop aam out nop (bad) aad repnz scas sbb (bad) lcall lock sub testb outsl ds mov xor loop and lods cli mov clc shl and mov ljmp adc jbe mov mov int3 je orb xchg loopne and mov push ljmp int3 dec mov push ss (bad) lcall adc lods stos pop fisub lds push xor pop xchg mov mov into loope push pusha and xchg jno mov or mov aaa add (bad) adc mov mov clc (bad) (bad) dec jae adc loope test (bad) mov dec ret lods fcmovbe jle sub xor outsl lock sbb loope incl rclb cld mov aas gs (bad) (bad) (bad) sti add cmp repnz movsl xchg lcall ljmp and (bad) (bad) decl std cli out inc add and cmp pushf inc (bad) (bad) sbb (bad) (bad) (bad) jg insl inc inc cli pop int jge ds inc and mov sti lcall (bad) int3 push cmp (bad) (bad) pushl ffreep xchg pop xchg loop xor fcmovnb sub push xchg cmp aaa std (bad) jg xchg dec mov fcompl sbb mov cli lods jb (bad) (bad) (bad) incl jbe xor into movsl popa jnp daa mov xchg cwtl (bad) cmp jmp add rorl fs movsl mov in mov mov (bad) decl imul sar cmpsl dec aad dec mov stos xchg dec xchg jp jp push enter (bad) cmp ljmp nop xchg dec cmp jge jbe insl pop cltd xchg aad fsts std (bad) jmp (bad) stos lea sbb jle addl ficoml push adc adc pop lock shrl popf gs je or repnz sub (bad) pusha mov (bad) incl loopne mov jg xchg jb sbb loop cmp pop lods jp cli or mov mov movsl addr16 adc inc mov decl inc xchg xlat or in je test mov jg (bad) (bad) incl dec (bad) pop dec (bad) xchg sahf jecxz add arpl (bad) in cltd incl mov sub xor stos add stos into mov orl inc mov cmp xchg fs sbb rcrb xor lcall pop lds or inc test sbb add (bad) (bad) std mov and add ret push cmp mov jo and cmp mov and xchg aad outsb mov inc scas (bad) (bad) (bad) jg das sub adc xchg aam jl jl pop mov stc mov lret insl out test jnp cmp xor pop or cmp sub in test xchg stos cmp ret js jae test in adc sub xchg and mov call mov inc aad add lcall jmp int hlt add cmp (bad) (bad) (bad) mov ror inc enter shlb fldcw adc and lret fwait dec repnz lcall ret jge cmp pop push je fldt add (bad) inc push mov lahf mov lds (bad) call mov mov outsl aaa and mov add out loop jle push add incl test dec loop push mov or (bad) mov push insb add aam (bad) jmp lea pop out or push mov xchg xchg stos and (bad) (bad) (bad) call adc inc rcrb shrb mov addr16 jno push jae loope sub jg push enter add stos cld jo jbe jecxz cmpsb imul (bad) ljmp lret mov insl adc mov rcr push mov inc mov fadds xchg lods xor push adc mov jae jbe sub (bad) cltd pop or jbe aaa xor mov push push add idivl (bad) (bad) call xchg xor daa jecxz push in dec pop ret sbb mov mov cltd add cmpsb pop inc leave cmp popf in pop xor lcall aaa jmp cli pushf inc fstps pop aad cld add (bad) (bad) lcall or cmc outsb out mov adc inc inc xchg movsb imul call adc fdivr shrl in das es (bad) (bad) mov fmull sarl test xor fnop ja push in aas mov mov jno and dec or jmp xchg lds (bad) (bad) jg cli inc inc js push dec mov mov inc (bad) jbe and (bad) jle test (bad) jg jbe dec ljmp (bad) aad orl out mov xchg lcall or pop cltd ret pop pusha loop out (bad) (bad) jmp pop xchg jb scas (bad) mov and adc pop das aas stos aam cmp hlt push (bad) call sbb pusha outsl je mov push pop rcll stc std mov fdivr stc fst enter jnp scas mov into fcoms es lods sub outsb cmp mov movsl cmp inc ret sahf (bad) cmp (bad) (bad) aas dec and les or mov aas mov jb mov ret int ljmp sar cmc icebp add xchg mov iret mov dec jno jo rolb (bad) or out ss arpl jl rorl (bad) (bad) (bad) pushl cltd pop fdivs mov pop insb (bad) arpl xchg cmpsb cmp pushf pop pop inc inc mov pop mov sbb inc push imul xor (bad) lcall mov xor mov mov aas add push or push lret mov cmp jns xlat mov pop in imul test mov dec inc stc popf push sub sbb lcall ljmp xchg ds out cmp push sbb sahf jle (bad) daa pop adc ljmp and bswap ds mov push xor sub pushl cli xor js imul cmpsl mov (bad) ljmp jmp push sbb xchg cld and test add (bad) lcall xor inc (bad) fidivrl jo dec and mov insl inc add (bad) (bad) jg lods fiadd and add adc fistpl mov stos test std (bad) (bad) (bad) decl nop mul and xor sbb fwait (bad) dec push or sub inc (bad) (bad) call cwtl mov fwait mov sarl pop add daa fistp (bad) (bad) inc push pop xchg outsl pop loopne pop mov or adc frstor cmpsb inc pop icebp mov mov xor outsb std xor test out (bad) (bad) (bad) cmp or lret push fildll xor xor (bad) (bad) fnstenv xlat and push push sti ret imul inc dec loope lcall (bad) (bad) jg outsb xor push pop jge clc add fcomps jmp xchg cmpsl int (bad) (bad) (bad) (bad) aas adc sbb or movsl add ficomp adc ja xchg adc sbb aas add cmp outsb mov mov (bad) (bad) (bad) ljmp movsb inc mov mov push or xchg (bad) xchg out mov lret fsts stos popa adc call aas cld aad rorl cltd xor repnz (bad) (bad) (bad) jmp jne mov sarl and in mov cmp mov push (bad) pushl xchg mov dec imul lret in cwtl adc lret (bad) (bad) (bad) ljmp push mov jl jg jb cmc push mov add push and sbb ds (bad) incl xor stos xchg pop pop add ucomiss cltd xchg shlb repnz lcall pop test sub mov adc aaa out jne notl lea mov clc js and and cld pushl mov stos scas icebp (bad) (bad) push mov (bad) jecxz inc mov push jecxz jns mov loop (bad) (bad) std ljmp aam xchg cli icebp stos mov fcompl ljmp (bad) jp push popf and test dec sarl cwtl mov (bad) (bad) (bad) (bad) cli je movsb pop mov stos cmp hlt mov push sbb lods xor aad aas repnz dec jle outsb incb outsl imul jb leave (bad) fidiv (bad) jg fwait jmp cmp jmp inc and (bad) icebp mov mov lcall decl push push push jmp lods xchg cmp dec (bad) (bad) (bad) jmp aas pop andb and sbb inc popf xor mov test stos or call vmread insb repnz lcall cmpsb incb mov pop jbe xorl add (bad) (bad) push sub lods fsubl cwtl fstpl fidiv ret (bad) scas sarb (bad) fldcw mov add push (bad) sub (bad) (bad) (bad) (bad) lds inc ja (bad) ss pop cmpsb and dec stos jmp daa jp sbbb nop ja or test ds cs mov pop and lahf jae stos stc adc pop fs scas and jp cmp outsb sti sti jge and rcll mov lcall mov adc jle cmpsl add inc adc inc roll xor daa es ljmp insl jp xor push ja and addr16 jne (bad) (bad) inc mov test test stos sub pop xchg lods (bad) iret add (bad) incl loopne iret in xor loope cmp sub dec (bad) (bad) call insb mov fsubrs fisttpl xchg mov (bad) cld (bad) push and cwtl add xchg xor lret and (bad) (bad) mov fstpt pushl mov repnz xchg into xchg xchg xor mov pop in sub movsb xor add sar mov (bad) lcall (bad) mov or or push repnz adc in daa pop inc movsl cld pop out leave (bad) lock (bad) jmp sarb sub ss sub (bad) mov int nop jno jns cmp fdivrs insl xor sbb (bad) fcomps lods lea mov andl lock add idivb movsl incl imul and je fidiv jmp lock mov int adc (bad) ljmp cmc push inc test faddl xchg rcrl popf push mov adc loope push cmp test ja mov aaa add jbe mov pop decl sub pushl mov and or aaa fsubp lea inc jne movsl incl jg pop jb push mov or sbb cmp pop add (bad) jmp push push cmpsb arpl insb add mov lcall mov dec add cmpsb mov mov jecxz (bad) (bad) jmp add (bad) mov test in add stos cmc adc idiv incl inc rol leave repnz or or (bad) decl fdiv pop mov or fcmovnbe add xchg sahf ret (bad) (bad) incl and jns fnstcw add mov jb sbb les mov in jg mov xchg cmc out rcrb lock cli popa (bad) outsl loopne jl stc jno in push (bad) push inc sar add mov (bad) leave shrl mov mov add mov cmp xor insb push (bad) (bad) lcall cmp cld (bad) ja aad test sbb popf pop push push cli test decl lock rolb nop mov loope,pt hlt inc call out (bad) jg call jns loop mov and (bad) (bad) decl xchg mov add scas adc xchg and dec pushf pop pop push jnp in ror or popw std decl addr16 dec jnp stos xchg cmp jl push dec pusha lods (bad) (bad) (bad) dec xlat (bad) sbb fwait sbb popa and test and push ljmp add jae push repz js sub jmp out dec dec jl sub xchg (bad) pop xchg and add cmp lcall add jp insl hlt mov repz and mov adc mov inc jle add aam popa ret stos jns sbb mov or dec sarl (bad) outsl std call (bad) xor arpl rorl dec fldt fidivrl pop ret (bad) (bad) jmp ss dec xor (bad) jp mov add icebp int ret and ljmp je movsl fidivl sti in ss or outsb push (bad) (bad) (bad) mov mulb jae xchg xlat inc out mov xchg outsl clc jmp push pop pop inc jl clc (bad) sti scas mov dec add mov pop ds leave xor inc (bad) popa outsb lods imul (bad) push jg push fsubr sub mov (bad) mov out or sub pop add mov xchg (bad) in clc in imul shrl mov push mov clc leave arpl movsl cs jne lods push mov dec pop icebp (bad) call ret and cmc iret mov aad ljmp adc inc cs xchg fnstenv fsubrs xchg loop or (bad) (bad) push dec iret dec (bad) into fdivs pop jne lods loope cltd mov mov inc and pop loop lcall mov mov es push xchg jmp fisttp (bad) (bad) (bad) push or repz test inc insl lods sbbl sub mov incl mov aaa std dec divl xor popl (bad) (bad) adc jge mov imul jp cmpsl clc jge test imul daa dec fdivl dec pop dec (bad) (bad) call cli clc mov clc lods pusha dec add shrl push sar (bad) call sahf dec test out mov sub mov (bad) aas adc push (bad) mov stos jge fild push xor test lcall ret shr mov scas lcall insl jae xchg aas cmpsl (bad) scas mov mov push sub and inc fwait insl aam pop fisubl divb cld fst stos pop mov (bad) xchg lods pop out push xor cmp inc test std (bad) push jle in fabs lret cmp popa mov dec dec mov and xchg lcall sbb hlt (bad) mov push push add sbbl (bad) mov dec mov lahf mov jp (bad) out lahf das jnp dec in fnstenv or dec ret lahf pusha test (bad) mov mov das or (bad) (bad) (bad) ljmp popf push std xchg sub xor jmp fisubrl je popf mov xor (bad) incl sub or xchg or mov mov pop mov jecxz push adc notb fs xchg push std lcall mov and or nop cmc ljmp mov std adc dec jge es mov repnz outsb or inc test mov dec mov push adc jb sbb les jg in popl shl and shlb sub jmp mov aam cmp faddp aam orb xor mov pop scas popf add lods roll loope nop outsb add sbb ljmp (bad) pop les pop jbe sbb (bad) cmc jmp ds lcall xchg xchg out xor idiv (bad) mov pop pop dec cmpsl repnz stos and les or jge and test push sahf xchg mov add pusha insb cmp add pop hlt fldl2e cmp lcall movsb mov mov std ret adc push xor daa pop jg mov inc sub or (bad) (bad) (bad) call sahf ret iret push ret jge dec add mov add inc sahf push pusha xor ja cli test xchg movsl add in mov dec mov js (bad) ljmp cmp sbb pop push jge (bad) dec aas dec sar inc jl dec decb lahf jae pusha out and ja les imull call xchg push mov xor xchg push or cmp sbb cli aaa lods mov sub xchg pop in fs aas xchg je popf es cltd sbb or sar insb sub adc mov mov sbb cli (bad) (bad) jg lock dec inc cwtl iret adc sti xchg adc div dec call push cmpsb (bad) aas mov xor lods stos xchg into lds test fwait (bad) mov cmp in inc push (bad) (bad) (bad) out add inc mov fsubs pop or sbb clc dec lds (bad) pop sbb dec movsl jmp or push (bad) cmp shll push (bad) mov or fistpl cmp repz roll cli xchg or fidiv adc cli jg nop mov nop bound push icebp xchg add jp popa mov ljmp xchg movsb (bad) je xor adc idiv add pop xchg rclb jge dec movsl (bad) pushl scas xchg cmp xor mov imul (bad) (bad) call mov jnp out adc fimull mov ret pop aaa cltd je in jns xor popa out (bad) call and mov add aad adc mov cli test lock (bad) ljmp cmp scas add lret jmp daa test pushf sti cmp out mov mov inc jns subb inc out pusha mov test add pop add add add dec (bad) (bad) decl subl mov xchg inc (bad) (bad) (bad) call xchg lods jbe sarb mov pusha xchg xchg or cmpxchg8b sarb sub mov push das sbb xor test push mov cmp pushf scas mov lret push dec fsubr xor test add mov jmp mov sub jae push pop loopne ljmp sbb or imul es (bad) lcall (bad) jno mov pop adcb pop insl clc xchg (bad) in ljmp inc clc in out repz sbb sub (bad) and nop stos repz test call lcall pop pop mov ss ret and cli lods inc bound jo dec cmp divb push mov arpl pop out or pushl inc jb cld insb pop (bad) jns lret repz push ror jg (bad) (bad) (bad) aas fdivs sbb dec ljmp popf pop xchg xlat popf jnp stos enter lock fsubrl dec xchg int aas call mov pop mov jecxz (bad) decl out add repnz push jmp movsl add ss das xor xor (bad) bound sub repz xchg faddl push xor dec (bad) decl inc aaa pushf pop sub and les out mov mov mov add mov jecxz (bad) (bad) (bad) jo lea jbe sbb inc push into cld popa fwait into cmp xchg inc sub movsl or aas push leave xlat (bad) (bad) ljmp cmp lret gs sbb mov icebp mov test outsb cs xchg cld pushl sub aas inc mov (bad) cmp test call jmp add scas xchg sahf (bad) push mov mov orb stos jmp pop stos fnstcw repnz (bad) out cmp inc xor lods addl cmpsb (bad) (bad) mov test sti add lret stc stos ljmp push xor (bad) (bad) (bad) fstps xchg frstor add push mov lret icebp insl in (bad) jg test mov adc cli adc daa sub (bad) (bad) lcall lret and movsl outsb fstl insb repnz mov es fidivrl std jmp ljmp das ja imul mov dec cmp (bad) ljmp pop cmc notb je sarb (bad) inc fsubs ret mov stos repnz adc jg arpl add mov aaa dec mov mov cmp inc pop dec das cli ljmp test lea outsb xor iret popa cld (bad) (bad) mov cli sti cs cmp push out jno xor jg adcl lock xorl cltd shrb xor outsl imul (bad) (bad) ljmp (bad) mov (bad) mov pop insl insb or outsb arpl sti push sbb add or jg mov pop sar mov loopne push or ss cmp xchg movsl jle (bad) call mov orb faddp dec test mov (bad) dec mov in inc add sbb mov push pop pushl jne movsb in ret mov and jbe in outsb sahf push cmc iret cmp push dec test xor dec mov lret mov (bad) (bad) lcall insb fstl add adc push test scas int jle (bad) (bad) (bad) cmp and repz (bad) add add iret fisttpl sbb xor fildll sti sar (bad) pushl mov jb cmc in (bad) jno inc xchg lahf pop fcomps loop clc (bad) (bad) jg dec inc or daa cmp lods jp add clc pop out push (bad) push nop mov jb lcall pop cs cwtl ss mov insl cld pop mov (bad) mov icebp mov pop loopne cmp test pop pop cmp xchg xchg cmpsl lcall mov ret lods test or jge cmp mov rol inc rol jp (bad) (bad) call sub push orl pop adc mov mov shr fabs dec lret jnp das dec (bad) jg ljmp xor adc (bad) imul xchg jmp xchg push or push (bad) (bad) (bad) pushl daa js and dec leave aad and aad sti sbb sar repz jg loop shl and and sar inc (bad) cmp movsl sub (bad) jmp adc push cli dec mov scas inc (bad) repnz aaa cmp adc mov insb mov insl daa cmpsl fdivrl daa lea cmp aad scas jne leave push icebp cmp decl dec push adc mov (bad) jo mov sbb mov (bad) (bad) (bad) mov and fs mov mov pop cmp mov mov (bad) sbb mov jmp aam ss cwtl data16 (bad) (bad) pushl and imul jl adc jno std popf sub pop pop fmull ljmp daa (bad) decl push xor loop outsl call sar lods (bad) lcall jb (bad) mov fistp pop out ss aas lret lret add loopne (bad) (bad) pushl in dec cmp fisttpl movsb mov or jp out cmp adc fsubr and (bad) ljmp les sub dec xchg in (bad) inc cld inc (bad) (bad) (bad) (bad) ljmp test in aaa out xchg jle cmp cmpsb in test mov les into mov loopne incl sbb out stos mov loope insb insl add loop xchg call mov in cmc ja mov push gs push add (bad) incl repnz adc lcall fdivrs jp push call int idivl push loope call scas mov icebp (bad) ret add and ljmp outsb mov sub xor out (bad) aam xor cld fnstcw gs pmaddwd imul mov cmp repz xor loop sar js lea popa hlt adc mov adc pop and (bad) jg or lea pop ds (bad) hlt repnz bound mov mov jno adc adc xchg outsb inc mov ficompl xchg inc int3 rol pop in ret sub mov sti scas jecxz sbb push imul faddl or push mov mov jl inc pop xor cmpsl rcrl jmp scas jle (bad) aas repnz (bad) outsl push (bad) clc cmp sbb jns insl es (bad) (bad) jmp les inc push pusha out pop mov lods cmpsl mov outsb int in jecxz jne inc jp decl push ds fistl dec inc sbb (bad) (bad) pushl pop out lea lods fisubr shl mov paddw (bad) lret add out idivl addr16 (bad) decl mov sub in adc adc out gs and push lods add (bad) (bad) (bad) incl pop xchg push testl mov dec adc xor sub cmc sub mov cmp lret cltd aad addr16 incb mov arpl mov scas scas dec add call jmp or (bad) lock or rolb mov js int fs dec add ljmp add in dec into adc lcall push dec int (bad) pop inc out mov mov test (bad) (bad) (bad) mov sbb or cmpsb cmp jl out in lea pop cmc js pusha fldenv adc outsl repz sub aaa jb fiaddl aad outsl (bad) sub or (bad) (bad) in imul dec push test data16 jmp insl loopne sub (bad) (bad) incl jecxz or (bad) pop xor push loopne and in in (bad) (bad) lcall loopne outsb cmp leave inc fwait push push sbb mov add aas xor sbb xor test fimull or mov lahf insb int icebp adc imul jle or (bad) call mov inc loopne mov jle cmp jge lock xchg (bad) jmp roll ljmp nop enter cld ss test js jbe subl xor sub jp cmp loope xor cmp psubq adc leave mov xchg cs xor (bad) (bad) (bad) jg clc sbb mov or maxps iret rcl decb (bad) xor fwait sarb lock shrl mov movsb (bad) fidivrl xor ljmp mov xor cmp das (bad) dec jle pop sbbl stos loop sub ljmp adc shlb jb lods aaa mov xchg fcompl mov insl inc and (bad) jg mov jmp aam dec mov movsb (bad) mov mov (bad) jb (bad) (bad) (bad) call (bad) es push insb lcall or adc jbe adc xchg inc jae addr16 push lds push mov je test pop in xchg insl fnstcw pop aad pop insb mov (bad) (bad) (bad) decl mov mov push xchg lock jo repnz (bad) jmp out repz (bad) adc das fisubr fs hlt inc xchg jmp shlb ljmp (bad) jo call mov xor xor js xlat scas int sbb and in (bad) xor mov sub (bad) (bad) pushl addr16 addr16 in adc ret ret sub cwtl cmpsl or fild (bad) jg (bad) ss lock jecxz adc lods push mov (bad) decl and notl insl in fsubs pop mov lahf cmp jg ljmp sbb (bad) or xlat test (bad) ljmp loopne jp xchg xchg pop mull sub pop int inc pop icebp sbb (bad) xlat outsb loope inc pop stc and fwait sub out add jo adc (bad) imul sub rcr xor cmp std int3 lret cli push (bad) sub (bad) decl dec out lea stc adc sbb fdivr push jmp or jp rolb mov (bad) (bad) call jle and in loope push lock pop sahf push hlt or jmp add inc fldt lret xor lods push pusha bound cmp push popa (bad) decl loope jp mov scas in and xor std loopne mov or ljmp add cmc (bad) imul movsb dec lods dec (bad) adc (bad) jmp mov sbb je ror mov push and mov (bad) (bad) (bad) incl ljmp add flds (bad) sbb sbb cmpsb push loopne add jno jge outsb das cwtl and leave dec int3 loop ds shl mov ljmp out das lret mov je lods test sar cmp xchg pusha inc fildll dec push scas mov outsl aad mov jg (bad) cs pop aas xchg jmp jo or adc push jle (bad) (bad) (bad) jmp (bad) int xchg stc iret fbstp xor daa scas (bad) push xor (bad) imulb inc (bad) (bad) js test dec cld imul (bad) mov lcall aam aas pusha int3 (bad) mov into fadd popa clc out cli fs repnz (bad) mov icebp dec mov push mov rclb std imul sahf cmp aam lahf xor pop cwtl mov ds out cmpsb data16 int3 cmpsl call mov cmp pop testb (bad) dec dec into sub lcall mov or mov mov aad mov (bad) (bad) (bad) mov or xor xchg mov cmp xorb push sti lcall mov (bad) jg mov scas (bad) ss mov insw push aad inc xchg (bad) clc sahf les and push ret xlat or fisttp ror insl and xchg scas ds adc (bad) call mov push or aam incl imul add incl dec leave sub jmp (bad) jae sub adc pop adcb scas add out popa loope and aas cmp (bad) (bad) pushl or test popa popa xor mov ja pop sahf mov dec iret or ljmp add xchg mov dec (bad) (bad) jg push scas mov sbb fadds dec or xor cmp cs sbb (bad) ljmp mov (bad) pop or mov cmpsl and mov test loope adcb cmp enter add (bad) mov pcmpeqb jbe sti jae call ret dec mov adc mov lret sbb imul jnp or imul inc cwtl fisttpl sbb mov in cli addl (bad) out xor repz pop fsubs int3 xchg das sbb test (bad) (bad) aas rclb mov jne sbb pop lret out jle fwait sbb xchg (bad) repnz (bad) decl repz lret xchg movsl jle cmc call mov add pop jbe stos sub mov jg sbb sub (bad) mov mov fadd stos mov inc mov adc decl (bad) cli inc imul popl arpl and (bad) aas xlat push cwtl (bad) movsl mov push ljmp and (bad) (bad) jmp sbb fs push stc and cld fsubp add shrb mov adc mov in loop xchg and pop (bad) in cld xchg (bad) (bad) (bad) ljmp int3 aam (bad) push xchg fcompl jae mov std test fist mov lcall push loope rorl cld fucomip xchg icebp scas and xchg xchg call loopne inc push (bad) in imul mov scas fadds test std xor pusha pop (bad) (bad) jmp test pop sbb in adc and scas aam ds orl fstpt roll pop fimul sarb out push xchg (bad) cmp and stos addr16 rorl jle xchg rol lret or clc xor movsl into pushf iret xor jno test xchg ret mov jg scas test dec repnz sar jg call pop add aas test sbb sub scas jmp jmp xor mov clc xchg lahf cmpsl cmp rorl and decl (bad) jnp call imul frndint fstp add (bad) (bad) ljmp add ret pop scas add test sub popl xchg clc pmaddwd (bad) cmp (bad) movsl push xchg cmp add fisubl (bad) (bad) (bad) pushl inc rorl dec outsb cmp xchg sbb data16 icebp mov push pop movsb xor mov xchg int minps repnz aad add jecxz in push dec mov sbb (bad) lcall and push or inc (bad) push xchg inc mov dec cli sbb out mov aaa icebp (bad) stc xchg add nop mov test in mov jmp lock rcll fdivr or pop jl push testl fs add and mov adc pop inc icebp popf inc packssdw cmp sbb mov ljmp stc std adc pop mov int3 pop insb jmp xchg int (bad) add lret loop sbb sbbb inc lahf jmp xor push pop je sahf (bad) (bad) decl (bad) push roll pushf mov popf fcompl (bad) (bad) jmp and mov mov push or sbb das mov xchg aad jecxz adc paddusw cmc inc lahf mov push (bad) call cld push mov adc bound int3 xchg jmp push push pop repz push (bad) aas pop (bad) jmp fidivr jbe mov jo sub xchg jle in ja cmp (bad) (bad) (bad) mov or mov (bad) jne sub dec dec dec mov dec cmc sub call push inc std pop pop jp cmp xchg xchg (bad) sbb inc bound cmp lahf mov xchg pop mov ja add inc pop repnz pushf sub loop fcos (bad) pushl inc orl mov inc test fs insl push stos and jge (bad) (bad) (bad) jge gs bound adc aad mov aas cmpsl jne add jmp insb std bound clc lcall mull add out cli ret (bad) ljmp movsb call jmp mov adc fildll lret das (bad) (bad) (bad) incl jmp testl xor add adc mov mov loopne (bad) decl inc xor test mov mov scas push fdivp (bad) mov call adc aam push fisub pop stos xor inc out cli ljmp aam in inc xchg dec aad xchg sub mov push or jbe loope mov fadds push dec add push add xchg cmp or iret je add lahf loop push call mov arpl pusha xor fcoms inc aas (bad) (bad) fbstp inc or lret sbb adc out imul mov fdivr decl ss xor ds push hlt jg inc sahf pop clc insb imul dec cld pop xor xor sub test mov (bad) (bad) out rorl mov sbb push dec pop xchg rol repnz decl pop (bad) pop stos push push lret repz fmull add sbb addr16 jnp pushl testl sbbb std jnp ja jmp jmp pop insb clc fwait or popa xor dec mov scas add fcomip adc test not cmp sarl (bad) (bad) (bad) out sti push out adc mov sbbl pop mov lcall sub inc mov dec xor das mov (bad) decl lret fistpll mov mov out push pop sahf les test lea pushl outsb stos mov jp movsb jmp xchg ficoml jmp ret rcl fbstp sbb inc mov (bad) ljmp addr16 fwait aad icebp xor test sbb aad movsb xlat push pop loopne lcall dec xchg outsl jae cmp lret (bad) cmp cs stos cmp rcrb aas icebp inc pop ds inc and dec (bad) (bad) (bad) cmp cmp lock cwtl (bad) sub jle mov test enter daa ss add call cld fwait (bad) pop sub sbb mov int dec add loopne xchg pop mov pushf aas lret mov (bad) jmp dec xchg mov push add push rcrb jg (bad) js in sbb fcoml mov mulb xchg dec mov cld sbb jno (bad) fwait mov xor mov mov fild icebp push decb add push shlb or or enter pusha push sbb adc and xchg cmp cmpsl scas lcall add inc push into inc push sahf mov lret rol (bad) dec add jmp ficomp hlt cmp push movsl movl mov inc aad test test (bad) insb insl inc decl cmpsb push jecxz dec clc repz pop (bad) jmp scas outsl clc test cli mov jnp fistl mov adc fs cs cld fimul mov mov outsb insb rcrl lock gs push fdiv arpl je jle xchg lcall mov hlt popa inc inc dec mov call (bad) (bad) jmp adc mov dec push ljmp mov add mov sub fisubl cmp xlat std fmuls mov xchg fdivrl decl pop out mov inc pop ret mov aam icebp mov decl (bad) jge lret ja out in mov mov sbb arpl xor sbb jnp dec leave push movsb jne dec xlat out mov js (bad) (bad) (bad) ljmp cmp mov je (bad) mov testb aas loope cmpb add xchg jnp jecxz mov (bad) (bad) (bad) mov rcrl push lock jo,pn cld push and (bad) (bad) fndisi(8087 push mov mov adc push das mov inc mov and pop cmp (bad) (bad) mov inc jg sub mov aad jb mov in xchg in mov mov add lcall outsl jecxz mov mov xchg cmp cmp sbb push jo adc sub ret jnp dec xchg xchg insl mov mov (bad) aas jmp lods push lcall mov mov (bad) fimul fs adc inc xor adc test sbb xchg leave icebp or mov fmull movsl dec dec decl ficomp in add sti dec mov adc scas fisttpl sbb mov outsl mov cmp inc std mov mov ror mov std mov in mov push andps lock xchg rorb (bad) (bad) cli loope mov clc lcall adc cmpsb mov aad loop cmp rclb (bad) (bad) jmp mov clc dec fs (bad) mov push bound in insb xchg les repnz pop pushf inc mov or arpl and jmp jmp pop or xchg inc or jle loope das jecxz nop insb pusha cld (bad) decl loope inc jp xchg test or sbb add dec xchg sub into xchg bound cmp insl (bad) test out adc lods push mov push iret pop jmp out insb dec aad or popa jo ljmp jg jmp jns adc aam xchg out add lcall pop cli and into in hlt xchg mov push mov xor inc push lds adc js decl in cmc ds imul dec adc xchg aas pop sar (bad) call decl and mov jecxz das jbe adc in add mov xor dec xor aam popf jl cmpsl hlt cmp (bad) (bad) cmp arpl jecxz jge push mov lcall je lret xchg cmp push and pop std (bad) cmp nop (bad) (bad) mov jne out stos inc jae test popa dec icebp pop mov imul lds pop jno cmp movsb je sbb (bad) mov dec gs stos loop in inc lret iret hlt sbb (bad) decl clc ljmp (bad) int3 cmp mov ret lcall (bad) call aas stc cmp dec dec fbld (bad) imul mov mov xchg psubsb sbb mov (bad) lcall xlat fmuls (bad) jne sbb pop cmpsb icebp mov and (bad) call (bad) xor loopne insl mov jle stc mov pop pop jno andb (bad) (bad) pop ja lods stc rolb (bad) lds jle shr cmp cmpsl xor inc andb out inc orl push xor dec mov icebp (bad) (bad) (bad) aas imul pop (bad) xchg xor std repz dec push in ds lahf sbb (bad) sti adc jl or pop or movsl cld rcrb (bad) (bad) (bad) call mov mov xor or sbb cmpsl call jmpw fisubl sbb pop loopne dec cmp (bad) (bad) (bad) lcall xor mov and dec xchg (bad) loope add in or dec xchg jp inc cld (bad) cmp add and fisttpll (bad) (bad) (bad) incl mov mov stos add ret inc or divl mov aas repnz push movl dec mov sub dec xor jecxz (bad) (bad) (bad) jge pop popf mov xchg js xchg sbb imul sub inc pop adc fcomip incl push mov push pop scas pop push rclb push pop call out clc xchg xchg out pop jmp (bad) jmp jmp cld inc dec xor stos icebp fisttpll push arpl daa inc addl mov sub and cltd je pop ja (bad) (bad) decl mov pop lahf loope lcall cmpb fnsave icebp mov push imul ret lret jg in mov mov adc cltd mov (bad) aaa (bad) (bad) (bad) (bad) fldt test mov add cwtl leave mov pushf fcoml jae fldenv xchg popa mov (bad) cmp (bad) jecxz push or ret movl (bad) jmp xchg adc fsave dec (bad) (bad) (bad) mov clc inc call inc push (bad) repz imul and aas stos cmp (bad) (bad) aas mov rep ret or xchg shrb imul (bad) jno (bad) (bad) ljmp dec jnp mov and sbb push lret push cmc rclb sti fcompl jecxz scas add adc call cmp aam in jne sub outsl clc (bad) (bad) (bad) add or loopne push sti out (bad) out push pop cwtl or das pop icebp xchg mov ljmp sbb (bad) icebp outsl jbe cmc popa push cmp fadds ficompl (bad) (bad) (bad) call jno jns add or aaa das add repnz mov sti rorl incl (bad) stc (bad) out mov stos dec and xchg sbb ja (bad) or (bad) (bad) (bad) (bad) jge notb pop std icebp xchg add loopne adc (bad) icebp xor jae jae bnd push std std and inc add mov iret or jl add sti push push (bad) (bad) jmp sbb xor and push jl inc xchg inc shrb push inc jge mov sbbl ret add insb add mov (bad) in je dec xchg aam xlat cltd jge cmp decl rcll out pop hlt pop push dec stos inc fisubrl add pop and call or jno or adc bndstx (bad) decl dec push (bad) gs sbb leave xchg push pop std sbb (bad) incl std stos jecxz mov pop xor jb js sub incl das fcompl retw stc int3 mov adc aam ljmp mov nop xor adc pop call loopne (bad) mov aad addl pop addb (bad) sbb out arpl cltd sub lret clc inc mov scas lods dec xrelease mov lds aad adc in fsts or xor cli bound push mov cmc ror add push pop and incl lock pop ja call cwtl loop clc (bad) ljmp mov push inc test je inc lea xor sub clc push mov pop fisttpll (bad) (bad) push negb fidiv pop lcall psllq lds es aad cmpsb mov hlt insl inc repnz pop xchg enter adc xor and sbb push or adc (bad) jmp mov aaa inc cmp and cmp (bad) or movsl sbb pop stos xor push push pop (bad) mov inc and (bad) decl iret mov xchg (bad) dec dec fildll lods fnsave inc pushf lahf (bad) (bad) (bad) (bad) pushl fidivr dec adc popf xchg fcoml adc into rolb or outsl cmp iret test mov out jle in mov (bad) (bad) (bad) jmp push cs stc loopne rcr push fimull mov cmc js,pn dec push fild sub push jmp adc (bad) dec inc ja jmp mov loope test (bad) (bad) (bad) ljmp clc pop cmc clc orb fwait cmpsb jbe lahf in outsl dec dec cmc in ret pop ss in pop call clc mov les jge mov jbe mov (bad) (bad) decl pop fcomps cmp adc cmp outsb dec aas mov jbe jmp ret (bad) (bad) jmp mov pop mov and std ja (bad) movsl push repz fsubs ljmp rolb xchg or xchg push pop subb (bad) (bad) ljmp adc inc lods jle loop leave inc push mov int test fdivrl mov dec dec cmovo jmp dec (bad) (bad) jg push popf adc dec add jo ror mov sbb (bad) (bad) call in add lret loop or fcoms out addl std xchg xor jle dec adc sub mov (bad) (bad) jg pop mov or int mov (bad) repz inc movsb sar lahf dec inc jne fstps (bad) jmp jbe jno sbb cmpsb int or (bad) (bad) (bad) incl add outsl movsl jno xor scas in pop cmp insb xchg in cmp jno lret aam xor repnz mov ds movsb adc jmp ret lds cmp dec loopne cwtl sub xchg cmp les mov in (bad) call add ret fldt jg loope cld dec xchg push aaa gs lock (bad) (bad) fcomip mov fild adc mov sub jnp lcall call hlt push test xchg pushf jne pop mov test cmp enter push decl ffreep imul sub (bad) (bad) (bad) (bad) ljmp orb push in fisubl (bad) shl dec sub loopne mov inc fnstcw (bad) pushl pop jne mov mov das call scas mov in loope pushl mov sbb (bad) xchg sahf out sub sti lret push adc dec ficompl int idivb or cmp popa jo lcall adc mov (bad) (bad) (bad) call sahf rorl jns lret gs ret push add or pop dec pop lock popf push dec xor sub push out out repz or (bad) (bad) jg mov sub insb push mov fimull sub mov rcl pop mov mov lcall or mov push in add lods fwait pop or pop mov inc cmp push in xchg or adc or jo hlt cmp mov movl dec imul ret je pop decl aad outsl inc call out ljmp push adc (bad) repz and sbb js pop dec in fsub add mulb sahf mov hlt incl xchg lods insb imul loop lcall push (bad) mov stos icebp mov adc dec jno pusha sar dec mov mov pop and ficomp cli ljmp mov pop paddd scas outsb cmpsb mov (bad) lcall in flds add insl (bad) xor pusha andl mov xchg push (bad) fcomip cmpsb scas (bad) xchg roll pusha mov push sub lds dec cli mov call std pop loope (bad) ljmp ficoml adc xchg clc push ss (bad) (bad) (bad) ljmp xchg jnp dec mov pusha outsb (bad) inc imulb les or cld jno (bad) lcall add xor pop sbb cmp ret cli push dec outsl (bad) (bad) (bad) incl fmuls out scas fdecstp ljmp repnz mov arpl fwait call (bad) cld (bad) jb sub dec xchg scas shlb fcmovb pusha mov add (bad) (bad) incl daa xchg xchg lcall add jecxz sti inc jnp xchg incb cli arpl (bad) clc (bad) (bad) lcall inc mov lret mov adc mov push je push repnz xchg jns pop std idiv (bad) out cli jbe dec insl jecxz daa test xchg sarl arpl or mov xor call call ror daa push icebp dec inc mov cmp test cltd (bad) (bad) (bad) jmp push repnz add inc xchg (bad) cltd fsts stos ficom push out pop lock lcall cmp xchg or push push dec dec test pushf fs mov in or pop icebp lcall inc and mov jl jbe std fbld push mov xchg icebp popf inc sbb inc roll shll inc jno (bad) (bad) incl mov test inc repz lds imul sti mov loopne insl inc fmulp gs icebp jge mov push cltd and insl out (bad) (bad) (bad) pushl or pop pop clc jp mov clc pop bound xor push icebp xchg mov lcall jbe jno loop jne add sar lret dec push or xor push mov sbb sbb (bad) sbb mov loope out (bad) (bad) (bad) mov sbb or nop inc adc xchg mov jge sbb stos dec push push and mov lods inc pop clc incl out pop js inc xchg loop xor inc fcoms lds out cs hlt mov dec push jmp out xchg ljmp adc mov xchg outsl gs cmc dec mov mov adcl pop repnz add inc mov push cli (bad) (bad) jg ds ret dec adc or cmc shrb cmpsb jg jmp stos pop mov mov or xchg cmpsb sbb loope xchg aaa push fildl jl mov jns (bad) (bad) jge aas push dec repz mov pop mov pop jno push cltd jnp add rorl pushf sub xlat pop mov inc mov push sahf mov or or mov push mov dec push xlat fstps sub or xchg scas stc push dec pop xchg mov or fadd (bad) xor jns lret inc (bad) leave add cmpsl bswap pushf aad pop adc fildll test lds cmpsb in mov or xchg test stos push add dec test sbb insb jne cmp pop std pushl jge jne lea push xchg push out repz jle ja in (bad) (bad) (bad) (bad) mov rorl gs int insl pop clc dec xchg adc lahf mov (bad) adc sub jecxz clc xchg int3 cmp ret mov std fwait movsb xchg pusha pop (bad) ret mov gs call mov push cwtl pusha cmp pusha lods in pop jge ret (bad) (bad) (bad) call cld push iret test movsb lahf cmp mov jg sbb aam call les mov inc or mov jmp xor mov pop xlat gs hlt pop push jno add out jg pushf roll xchg xchg insb xor xchg sub pop cmp cmp and cmp fcomip inc lahf mov push pop adc les loope out xchg (bad) jg and lret decb incl mov addr16 cmp jmp adc cmp xchg cs movsb repz xchg inc lea mov pushf arpl (bad) (bad) dec call sbb lcall jne ja or out scas rcrl fidivr add xor ljmp cmpsl (bad) je pop sub dec xchg (bad) jg punpckldq xchg mov sbb xchg int3 jno cmp cmp xchg lcall ss mov scas cld push pop test pop out js or mov mov cmp dec adc pop xor cs (bad) xchg arpl aad idiv cmpsb rorl fsubl jge (bad) ds pushf out inc sbb and aas cld cs call out jl push mov xchg std lcallw movb xor rcrl sbb pop cs ds out ss out stos ror sub inc dec jmp mov cmp push pop pop xor rorb cld push sbb movsl or (bad) call je add jae mov lods call (bad) xchg popa (bad) or test lock outsb ljmp mov nop xor (bad) (bad) jl daa mov (bad) mov cs xor mov sub jg arpl (bad) je cmp xorl lea mov xchg in lods in add cld aas pop mov mov or mov daa and xor fadds es or or arpl cmp leave shll roll lret push add sbb pop adc xor outsl mov inc cs inc sti inc bound mov (bad) or push add sub clc inc add push mov cmp dec sarb cmpsb push add push or mov imul jns inc push add ljmp push inc pop or xchg dec pushf fistpll stc lret cli dec sbb lods push xchg jne addr16 cmp jne or lcall jnp (bad) call into pop decb scas pushf dec mov in cli fcomip jb pop nop jo pop pop sbb pop adc (bad) sti jns or imul sub fs jae shlb gs adc dec pop scas add js insb pcmpeqb testl xchg lcall push sarb str imul rcr sub push repnz inc push jo ss (bad) push xor or addr16 fildl or aas loopnew ds add outsb sbb mov sbb dec pop xorl in xor inc sbb push add or dec add lock add or mov (bad) inc push cmp inc ss insl push or jnp adc outsb push fbstp mov ja sbb imul mov fsubrl inc cmp push imul insl outsl popa pop or pop outsl mov sbb mov outsl mov push imul (bad) dec or outsb daa out sub je pop adc mov cmpsb mov (bad) xor xlat push rcll xor (bad) adc push test imul stos sub and out jo cmp add jae out jnp jae adc jo sbb push add int3 pop push outsb xor add fisttp aaa cs fidivr popa adc push mov fldl mov cmpsl inc push mov outsl and add add clc lock inc ds push insb fwait add sahf mov fwait pop jne,pt pop imul (bad) jno popa inc mov ret outsl cmp cmc cmp adc add bound push ss aaa cmp push lret daa jbe mov cmpsl arpl jo outsl in call data16 insl and repz dec lcall mov outsl jmp mov mov imul jmp pusha pop cli imull pushl add iretw jnp pop pop fs bound addr16 (bad) inc bound popa (bad) cmp dec outsl sub or inc je and rcll dec sbb lret (bad) rcl and pop stos jb cmp setg mov jp inc fs inc addb call push sub stos imul pop rorl adc sbb push arpl pop inc mov pop and sbb fisubr cmp rcr testl jns pop cmp out movsl add cmp js jmp jecxz xorl push data16 sti push aas mov mov jnp or xor pusha ret jbe (bad) push dec add ja jg xor mov fwait ret arpl cs mov add scas pop pop jg inc xchg add mov loopne push ret bound push icebp stos mov dec outsb mov mov dec dec sarb push out (bad) push mov cmp add push iret jae inc xchg add sub mov sbb (bad) (bad) jne mov lahf sbb push pop (bad) lock ja pop mov xor stos scas imul pop mov loopne cs ljmp lods cmp pop jg in cwtl es pop pop xor loopne (bad) mulb ljmp movl vpshuflw ss stos push push push cmp sbb outsl jns es outsb cmp add (bad) or test sub imull pop xchg ljmp pop fsubp call xchg nopl loopne imul out lea adc pop jo js hlt inc iret js xlat ret (bad) out push pop jae out addr16 shrl dec sbb jl insl sti imul scas or cmp jbe shll inc jecxz push dec xor mov ja jecxz mov dec sub inc add sahf mov shlb (bad) pusha in repnz daa out iret lods mov xor jecxz and outsl mov dec xchg mov imul jp addr16 aaa adc aad addb adc dec (bad) repnz popa nop loopne mov push cmp cmpsl (bad) mov sub mov lret subb pop loope and cs popa in push xor cmpsl mov jae,pt sarl and fwait mov ja sbb jae fwait mov xchg arpl popa dec pop jno aaa sbb jb js push out ljmp das jbe imul scas jae cs inc mov inc jo xor scas ljmp mov clc xor fwait sub push push jae or fucom or fistl mov dec out and adc sbb jmp and mov (bad) sti das dec loope scas aad jns notl or jb pop pop enter imul aad dec xchg sub inc push sub arpl dec cmp adc push sti push jmp (bad) test push repz (bad) ds fdiv (bad) jb cmpsl ja arpl pop iret push out imul iret xchg rol loop adc pop fsubs popa mov in insl imul outsl insb cmpsb stos mov imul fildl out ret adc out sbb daa outsl xor js popa add sbb daa scas out sbb xchg add inc inc orl repz pop aas mov pop xor and pushf dec inc cmpsb sub push gs lcall mov mov pop push or xor adc or arpl ja dec inc push adc notl xor adc cmp push out and (bad) xchg jae test (bad) jne cmpsl sbb stos sbb sbb mov mov push push and fs sti daa mov inc insb inc mov popf mov or or imul sub loop addr16 mov add daa pop sbb lcall and jne popa add push push mov mov orb fs imul and bound cmp cltd daa lods or ljmp inc icebp xorb pop push loopne scas mov add xchg push sbb out pop cmp xchg dec faddp dec sub jne,pn inc pushf je mov push push imul subb dec lret fldt push jae or outsb daa or mov ret aas iret inc and push aam inc jae outsl or pop and and or mov and mov pop dec jae or add lret daa (bad) mov mov imull sub mov js adc (bad) lret jne pop cmp push jb and jmp sub mov pop dec and and sub cmp stos sbb fcmovb sub push jnp xchg lcall (bad) ret lds dec pop inc jb ret out mov push and dec or pop pop jnp testl jnp xchg xchg jle adc arpl inc mov push bound repz jb mov (bad) imul and rep pcmpeqd mov pop roll cld addr16 and pop sbb push es das aaa cmp lcall xor lods arpl je fs push and dec mov scas adc shrl pop sbb xlat xor clc (bad) pop jnp mov push mov mov mov xchg push pop mov or pop movsb fdivs sub adc in sysret dec mov mov scas js incl repz lods or add shrl mov dec xorl or mov mov adc inc cmpsb dec inc pop scas jo jbe jbe mov mov jg fcom lea and inc shll sbb mov add je addb mov cmp mov cmp and push lds xor adc fsubrl or adc add adc inc mov pop sbb call pop add div sub jle outsb imul mov fstl add inc jae jnp pop push cmpsl dec fwait das ficompl sbb xlat je push bound ret mov xchg outsl or pop mov fwait clc ret repz stos outsl sbbl and mov addl rol xlat mov adc mov cmp jne mov or pop pop (bad) out je push xchg popa daa mov addr16 push jno pop stos xlat sub data16 pop xchg (bad) mov jo test xchg lock adc mov inc addr16 xchg outsb lods bound insl or ljmp sbb xor push or and dec adc xchg jae popa add xchg add mov push jbe push xchg dec ret xchg ljmp inc mov add imul pop pop repz mov movsb aam push mov ficoml adc mov xchg outsl add inc mov mov iret popa aaa rclb movhps dec mov outsb psraw mov mov or shlb and cmp lahf jb add adc jge or out jp outsl fcompl arpl push cmp and scas scas add (bad) mov lods sbb inc add fs bound sub pop jg std decl fbld cmp aaa mov pop fwait cmp movsl data16 mov mov add mov adc cmp (bad) dec inc fild adcl mov imul cmp js inc adc ja dec fistp sbb jmp popf notl lods push fidivrl popf adc xor bound sarl xchg or push jo test cld push adc sbb loope fs or inc cmp dec xchg adc shrl push and outsl jae push adc inc push inc and jl adc cmp repnz and pop adc std and mov cmpsb sub sbb push mov dec sub xor movsl push pop adc dec push adc lods xor leave imul mov mov cmp sub mull xor or dec inc insb addr16 or in or adc sub adc jl push aas in add sti movsb out push add mov push mov ss outsb int3 or insl mov jo and loope ret cmp jo pusha pusha jns fadds jle,pn or push js adc shlb xchg ljmp inc and fwait sahf (bad) mov or popf add pop insl inc outsl shrb sub dec xchg add push mov push (bad) add push (bad) xchg mov imul popa add jmp inc jns bound xor inc dec pop ss push dec push xor je xor jbe or (bad) xor cmp mov cs fsts insb mov addr16 jne adc or dec inc out or add or sbb jno push pop jg popf dec sub or lds ror adc movsl or das or sbb loope sbb or ss in add push jne nop test fimul ffree xor inc adc add orl or inc sbb cmpb or gs xor cmp inc jp imul jbe pop or sarl pushf add push jae (bad) insb sbb pop or in dec sbb mov xor or dec leave test jno popa gs sbb dec cmpsl add pop mov adc fisub add in jbe rorl cmpsl orb ret test int3 xor sub (bad) fwait add mov adc mov inc mov xchg imul adc mov mov and dec and mov imul or xor add mov xchg sub sub push or (bad) rclb insb gs xchg inc lret fisub jns adc mov adc subb jb xchg mov cwtl xchg dec in mov xor pop rcrb or (bad) outsl add push gs (bad) lret (bad) mov ret shll sbb xor lea sbb dec sbb sbb lcall dec add movsl in sbb jb jb add sbb adc sub inc and mov bound mov out xchg pop sbb sbb push arpl inc pop mov push pusha popa out or mov testb dec push pusha mov js pop push imul arpl xlat pop jmp pop and sbb dec sbb pop popa xchg adc add fld cmp xor jb fwait inc inc and or cs daa (bad) pop xor sbb fcomp fidivrl push or mov dec pop push and jb or testb fs xor arpl push jmp inc push push scas pop fadds vprotq sub adc inc add outsb inc inc sbb fldl imul subl out aam pop bound shll lea mov xchg inc sbb inc xchg push mov adc adc pop push or jae push je es and sbb adc lea sbb add sbb pop dec mov movsl (bad) cmp xor (bad) push movsb mov xorl test or sub add push outsl gs jns xor mov aas pop sbb sbb stos imul or loop das cltd call cli outsb sbbl push pop clc pop in mov xor scas inc clc push adcb ret adc sub ja adc scas mov push inc dec inc xor jp in inc cmc push ds mov test sbb sbb jo pop fdivr insb xor out pop xchg and aam mov add inc stc and push jnp jle mov dec sub jecxz or dec outsl mov imul xor jbe mov aam stos sub and das and or sub or ja inc (bad) ror mov dec stc in add insl adc sub leave sub and cmp hlt push xchg jmp push cmp or in das loopne outsl sahf arpl insb inc sub dec jb rcrb mov fimul mov mov sbb fiaddl rorb mov sbb jge dec push xor dec add mov inc dec inc lea test insb push mov imul (bad) insl lock je sbb pop add push outsb sbb aas sahf adc es insl (bad) adc je adc sub adc lock push pop jns (bad) jo mov (bad) (bad) lods add sarb mov jmp mov and mov mov add push es add and xor inc rolb and pusha test xchg mov mov inc adc inc xchg dec mov xchg cmp push inc and cmpl or inc call sub inc sbb sub dec mov sub jmp jecxz arpl int sub cmp daa sbb dec inc cmpsb (bad) xchg rolb xchg out or in or imul and and and sub popa jae inc dec test jl aad push mov dec daa mov outsl cmp outsl jo add adc xor push jp push pop xchg sbb dec loope gs push push (bad) inc mov dec data16 sub push nop dec int3 sub jne daa dec push sub addb inc pop call mov adc mov rorl adc enter jecxz bound sbb int3 and and lahf sub xchg push and jbe adc cmp add xor xchg sbb loope xchg push leave pop cltd repnz sub inc sub or es outsb lea dec sbb rorb ficomp xchg ret push ret jb or xor and dec xchg ret pop mov enter pop fs jae mov and inc and lods add sbb sbb fiadd push mov adc pop xor mov sbb add jo xchg es pop jp (bad) out adc loopne or rclb enter sub icebp add jp and pop insb and mov pop lods add push lahf cltd insl dec push arpl das push outsl sub andl fdivs jmp inc pop pop mov cmpsl shrl lods and mov icebp jbe push fs xor pushf push jne pop (bad) xor and push je sbb aaa testb data16 sbb xchg nop les dec popa sbb mov sub jno imul jmp jae test pop stos faddl scas pusha sub mov fmuls out xor sbb (bad) cmc dec jae dec imul pop xchg and sub mov jo mov imul xchg and lret sti pusha in push ret jne pop inc sub adc sbb popa jmp sbb push jb inc and mov sub xor imul fcmovbe pop jno inc das sbb adc ret imul sbb cmc and nop mov jne push daa inc cmp adc and (bad) cmc imul inc addr16 or sbb fldenv mov mov jne jne shll lods jbe mov push addl and dec xlat jmp jnp adc lds mov sbb lods dec out aas movsl es mov fildl (bad) jno and cmpsl sbbl and mov mov push sub jne sub and icebp sbb and sahf mov xchg ljmp imul mov push fistpl (bad) test jbe adc jnp sbb push mov loope push dec pusha mov inc rcrl add add xchg scas ja push mov mov lret sbb adc jnp dec mov push sbb imul and sbb (bad) mov pop or pop ret mov push pop outsl loope lock sub mov adc dec mov lock cmp lea mov adcb popa inc adc leave repnz aaa push jo mov dec addl cmpsb pop sbb inc mov (bad) xor stos sahf call adc sub inc jl clc xchg sbb ljmp fdivrs mov or (bad) inc inc push dec add add lahf sub loopne lock insb or add mov sbb add jl push adc jo pop jbe mov addr16 fsts jae inc cmovge jo or scas sub pop add xor xor lock mov aam or push jno dec inc dec inc inc adc fldcw xchg and inc inc push push mov notl mov push dec inc push rolb adc dec in in nop je add cs mov add mov ret mov jae rcrb sub dec loopne push inc jnp sahf push dec and repnz jb lahf pop sub jae dec pop add or fisttpll shrl into pop cmpsl jg dec xchg and mov inc and add add add inc add inc xchg push test int jmp nop nop nop nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jb dec add jne mov sub adc adc jmp add jne mov sub adc adc jmp xor sub jb shl mov inc xor je sar mov jmp add jne mov sub adc jb inc add jne mov sub adc jb add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov push dec repnz push call or je mov add jmp call mov lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp xor dec add dec add 