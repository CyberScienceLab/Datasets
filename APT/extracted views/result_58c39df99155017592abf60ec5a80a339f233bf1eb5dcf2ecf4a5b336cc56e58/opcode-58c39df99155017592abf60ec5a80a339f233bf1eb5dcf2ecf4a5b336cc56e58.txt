mov lods push fldcw sarl movsb ja inc mov pop aaa arpl stos int3 jge sti push cltd jl outsb inc int cmp jmp test out sub sub pop scas xchg in sub jmp jne jb inc stos cmp lcall sub fs insb jbe movsl fmuls stc outsl mov add xor scas call inc dec push out xor xor add sbb sub inc pop lea sbb or xor out jmp or insl inc push pop adc out (bad) (bad) (bad) xrelease sub push xor xchg je (bad) inc pop sub fcoms cwtl xchg mov inc and xchg dec imul mov adc inc and not push call inc push bt xor mov jmp call (bad) push rolb mov repnz test insb stos jle mov mov cwtl push sub mov (bad) or mov mov scas xchg jle sbb mull push insb mov fnstsw xchg adc shrl or add and sub mov cmp mov xchg lcall fistpll inc xchg insb stc outsl pop pop add sub push leave lock stos push cmp popf add sub or mov mulps fistp pop rcrl pushf push call lea jae jmp call (bad) sub or mov rcrb dec sbb push push int3 xor scas push pop cmpsb jae or movsb icebp jbe,pn push sbb mov ljmp mov jno ja adc repnz je daa out dec shrb (bad) mov enter xlat in iret adc arpl adc pop jb adc clc mov sub dec ja push movsb sub mov add sbb movsb push in (bad) (bad) iret imul mov test mov stc cmp stc mov or cmp xchg orl call sub adc lds or ljmp mov mov sti adc pusha jbe sbb sub and lods scas test pop mov sbb xor jne test (bad) (bad) fwait push loop fiaddl stos clc sbb loop mov sbb in add adc push and fs push sbb mov pop mov mov ret mov mov add enter cwtl cwtl data16 and or mov fidiv idivb cmp iret push add outsl divl xor (bad) in (bad) lret pop or dec xchg add xchg pop or dec (bad) lret shl pop jns cmp mov lods xor dec test pop mov xchg xchg (bad) in pop pop xchg popa and in mov lret cmc dec mov jb mov mov outsb int3 outsl notl sete inc inc cmpsl push pop or clc lock mov pop push mov jmp in jbe inc mov cld (bad) pand in js xchg popa sub (bad) (bad) repnz xchg cmp popa mov in fcoms sti div cmp (bad) call mov stc lods out arpl mov xchg xor pop fs stos or push adc iret arpl orb es in or js repz ficomp out push jo sarb mov aaa (bad) test mov sub daa jmp js xchg sbb cwtl lock ret shr xchg add lea cwtl lea push pusha movl pushl jmp ret dec int3 inc mov gs rorb (bad) in nop (bad) sbb sahf test fild pop daa jae xorl in insl or xchg push insl das out aaa mov sti cmp leave add jae scas or push xchg cmp jp test mov sbb stos jl ds lds loope fstps inc mov jmp popa push mov scas push popa sub inc xchg clc in fbld dec jb sbb push in andb pop xor and pop add push cmp xchg lret aaa cmpl movsb popa lods dec push and jp lea jne cwtl movb pushf mov jmp xor (bad) pop fs mov mov dec mov in xor lahf or mov pop stc stos cli pop pop push xor nop jae imul aad lock pusha and fmul adc iret cmp insb adc dec cmp aam sbb je aad or push push adc popf popa mov sub xchg pop fstpt lods (bad) mov push inc mov mov aam pop and xor mov push fstpt sub sbb or fwait in out fimull mov add mov scas pop stos lahf leave addr16 test cmc cmc xchg jp dec jle cmp mov xchg or (bad) (bad) xor pop incl aad ficompl es adc mov jmp sub inc mov xor aas pop dec fwait aas fild jnp lds fisubrl arpl push mov jle push jo in arpl and cmp (bad) mov adc mov std dec jno and jge fstpl pop loop lret sbb je stc mov push insl fcmovnbe ss mov sbb daa mov and pop xchg push add dec push (bad) cmp xor pop add add insl insl popa outsb fs imul addr16 add xchg dec xchg (bad) in inc mov sbb and inc mov fwait loop not pop dec lahf inc pushf fldl repnz inc sub lret and arpl sub test sti xor pop paddq and popa inc in mov jmp aaa icebp (bad) outsl inc ret jl ja fwait movsl ret mov sub xchg inc cld mov ss xchg aaa divb mov (bad) pushw data16 (bad) into jae sti aaa jle pop lret cmp mov inc dec mov iret push lea jbe clc mov setp rol bsf sar add xor xchg mov xor test xor add sub add movl pusha neg mov lea pushf pusha cmc cmp movb jmp lea call pusha pusha lea jb pushf pusha pushl ret push mov jmp imul mov sub mov xchg jb cli lods jo (bad) jecxz adc jno orl xor dec and jge inc push repnz cmc sbb shrb push mov sbb out adc mov hlt rcrb xor outsl int xchg aam les mov dec sbb mov stos jle test cwtl sbb fs mov push rcll jmp sub xor mov mov mov adc popf xorl jae push aam xlat xor push imul fldenv mov stc jge (bad) jne mov gs mov ret xchg xor mov mov xchg jo mov outsl sbb push jecxz sub outsl mov pushf jmp jb mov popa lahf repnz rcrl push fldl imul jns std jmp (bad) in add xchg mov xchg mov lahf test lahf cmpsl mov dec sti sti sbb pop add jmp ret cmpsb pop loop mov xor jmp push sbb clc enter dec aad jecxz lock int3 icebp cmp inc jge dec dec loopne jae jae jb pushf shl movb push lods call shrd dec mov testb movsb loop test out in das mov test inc jg push movsw daa mov push add (bad) mov jno pop xor cs or xchg aad pop mov scas fwait sbb pushf sub xchg negb sbb push mov (bad) stos sub dec dec xor xor inc lea ja movzbw push lea movzbw mov pushf pop mov mov pop pusha call inc bt call add inc gs outsl fs gs imul add mov and xor call lea jle pusha movl mov push movl movl pushl push push lea jmp add pushl pusha lea jmp movl movw mov lea jmp jmp push pushf lea ja jns mov inc call pusha test call pushl lea je pushf lea jmp add mov das out xor push popf fisubr repz xor inc rcll mov sbb pop push dec inc xor std inc out adc btc arpl test jmp jo sarb cmp cmp pop popa xor insl mov mov psubusb repnz orl xor push inc jecxz xor bound push test add fs jae cmp cmp call pusha movl pushf movl pushf lea jmp test mov xlat and inc push push in push repz mov inc lret jo je cwtl add xchg fbld testl jnp pop cmpl mov mov ret or in (bad) js mov mov pop imul xchg mov mov adc in xor push fistpl in push or ret inc imul push sub mov xchg or sbb and pushl call mov cmc cmp lea jle pushf pusha pusha lea ja stc mov sub dec cmp cmp clc add bswap neg btc setne mov and adc rcl mov cmc cmc stc repnz pusha jmp add add xor add jl add bound add add add out add test add xchg add jb add add add xchg xchg add jp add xor add pushf xchg add (bad) test add add movsb xchg add add adc pusha lea jae push pusha lea jne push stos pusha pusha push lea jmp stos pushf pusha lea jmp lea jne daa shl sub das data16 lock movl inc mov push clc cmp pusha test call push dec inc dec dec xor cs insb add mov pop stos push jg pop push js push pop pusha sub or sub and mov leave cmp gs and dec in pop push in scas and (bad) cmp std je ss aaa movsl push std fnsave and in ret scas lret movsl push hlt jl push xor lods inc pop mov mov push xchg lahf out lock cli add inc mov leave inc or cmp xchg je xchg (bad) lret lods push xlat pop fs jmp cmpsb dec lods push movb dec bt test pushf cmc not clc sub jmp jmp jmpw mov cs int3 or mov push jge inc addr16 repnz jb sub mov cmpl mov jle mov subl (bad) mov jg (bad) stos cmpl icebp or and lods fidivrl dec cs pop ret cs mov das cmp mov ret mov popl hlt fdivrl rcrb push movsb ds xor pop cmpsb jmp insb mov push clc inc add fs mov std stc lret (bad) pushl lea call call loopne jmp mov xchg stos push cmp pop stos mov sti cmpsb cmp xor insl out clc xchg inc out je mov inc stos jno add push jecxz and add mov into push pop fdivrs repnz dec fbld xchg outsb sub add not stos das inc mov fldt (bad) jb dec stos rcrb mov adc jge pop mov sub insb bound loopne jno stos lea dec fcoms shll cwtl jge je imul push sarl mov (bad) ss xchg adcb xor dec add icebp xchg nop std leave mov adc push call lock subb test mov cwtl inc (bad) jmp pop cld pop popa inc jb jae sti inc pop iret fstpl dec stos call xchg in (bad) push or add arpl and je pop das (bad) or out gs inc adc scas push inc popa stos jl psubsb test cmp push mov fildll clc andl test imul mov nop push push daa dec out push enter stos mov insl add pop adc and aas push jecxz pmaxub cmpsb push push xchg adc xchg fist scas push mov add sbb fs js push call imul into and xor add jg pop jae mov test jle stos mov and and xchg dec das and loope mov mov xor push xor jnp pop pop ret inc jne fcmovb movsb xlat jbe and dec adc ret pop jae mov outsb out push rcr sub pop pop sbb inc pop adc aam ja push nop jl (bad) ss cwtl jle dec push pop mov push cmp inc jae in add jb push adc les pop ljmp sbb and sbb pop es cmp add addr16 repnz dec xor lock data16 mov iret int3 cmp dec cs xor data16 push (bad) xor loop dec adc adc pop push inc xor repz adc xchg testb iret fidivl adc xchg and cs es gs jnp ss data16 jb push hlt clc outsl je jle add inc push sbb icebp pop out pop out or pop pop aaa stos inc cmp dec push dec sbb dec push jbe insb aaa mov and push jle pop (bad) push pop sub or jns imul ret push das cli dec insb aaa xor xchg sbb xor cmp and push and std push pop pop cmp sub cmp rclb xor outsb das xor pop inc jno iret cmp dec push aam push adc and rclb push outsb aad adc pop outsb xchg adc xor push inc add das lcall pop pop cmp repnz add shrb bound pop jb adc or pop push outsb aaa sbb dec int mov (bad) cmp pop mov push icebp push add jo jb sbb jnp dec or lret pop pop adc and mov jp gs push inc ja rolb adc in add popf das dec mov fisub xchg pushf ss mov jle xor cmp inc xor pop add pop int3 adc xor pop xor push push dec sbb int and sub divb lret or xor es mov cs and cwtl fs ds fs add lret fdivl jle repnz jl cmp (bad) enter cmp pushf jbe add pop mov loop jb ja push decb cmp bound jb jns mov notb ja or jbe jl add pop push ret mov push (bad) cmp js mov outsb cmp push cmp xor out lret add fimull dec add xor sub add mov adc lret adc jge dec std xor xchg xor iret xchg sbb out (bad) sbb adc push cmp push ret test inc push das leave push jg adc sbb popa popa ljmp lcall lock fwait cli pop imul pop fcmovne insb mov fisub sbb ljmp and jo add inc jno add (bad) jmp mov xor sub lcall fs movl fcomps push xor adc popf mov imul nop and and ss das cmp in adc jbe cmp or push hlt bound in lret mov aaa pop fidivl out (bad) mov aas push aaa pop es lret (bad) fild xor push out jne lds cli and jne pop push idivb pop jl or lcall pop lret push pop jb aam movsb mov pop jbe sbb inc ret into inc inc je push inc jp inc inc (bad) int inc jbe adc push dec (bad) repnz rorl bound push mov push dec ret bnd dec mov push dec and jae rol push xchg ret xor push sub jp scas jbe adc dec cmp lock xor add xchg jge dec pop add or push aas loopne ja sahf sbb js in outsb aam out or sbb sahf test and cmp push push jle inc or push sbb sbb insb rcpps push add xchg jb cmpsb jge adc mov je out push ficoml adc or outsb fcoml xor pop push mov push sub push pop push jmp push mov inc jb and push sub jp push push mov sub xchg dec sub aam stos (bad) iret rcl rcr (bad) stos (bad) fcomp fcmovb (bad) lds ret int into (bad) enter hlt cmc stos imul lock repnz cld std stos (bad) idiv stc cli jecxz in out loopne loop in in stos out out jmp stos xchg (bad) nop xchg xchg fwait pushf popf stos sahf xchg cwtl cltd lcall addb mov mov stos mov mov mov mov mov movsl stos cmpsb lahf mov lods pop scas cmpsl test subl pop pop pop pop push pop pop stos pop inc inc inc inc aas inc inc stos inc dec dec dec dec inc dec dec stos dec jae jne outsl jo stos jb jl jle js stos jp fs pusha popa stos bound insl outsb addr16 xor ss xor stos xor cmp ds cmp stos cmp and es and stos and sub push pop or add dec lret daa jbe sub add movups adc pop sbb sbb incl add jne or dec add sub ja das cmp add cmp jno add jecxz fsubs and cmp xor xor cld aaa dec cmp mov dec push mov cmp test pop add pop adc cmp movsl adc and pushl ss fildll jg sub test test push out dec cmp (bad) data16 fs repnz fidiv gs xchg push sbb je or xchg pop sbb fcmovnb aas xchg insb hlt add scas pusha pushw cmp xor push das pop adc cmp xor jbe jb es pop sbb add not inc cmp push xor hlt and pushf xor dec push daa and push ds sbb adc sub mov aaa inc in cmp adc aam xor not mov mov adc push ja das data16 pop mov aas adc push xorl pusha add push fcmovu (bad) cmc and loopne gs add sbb pop push ja jns sub outsl sbb push sti fiadd dec dec pop outsl movhps sbb insb out pushl pusha jge mov les test and sub jp and out mov ret jp imul push xor inc pop ss das push cli push daa xlat adc and push js inc jg push rorb (bad) xor aaa sahf push shl xor adc repnz jo and pop dec test fisttpl adc sbb mov adc insb push pop add loop push pop cmp xchg int3 dec dec outsb cmp mov xor add or xchg pushl xor push cwtl push imul pop inc push out sbb fwait mov mov stos push adc or pop (bad) rclb out dec and push xor sub and shrb sub pop and dec ret out in dec xor cmc hlt shlb dec fsub push aaa add add (bad) mov jg xchg test test aas jno js lds jo cmp ja and mov sub cmp push (bad) push and jge jno adc mov cmpsl ds dec push sub das pavgw ds mov dec and les sbb mov loopne jbe aaa add in and xor cmp pop add (bad) pop push inc add int3 dec (bad) or jbe jae push sub jl or add sub mov and ret jbe into mov dec sub lds jle add pop or out bound sbb cmc stos xchg mov push rorb and fimull pop dec jo popa dec lahf lcall xor mov mov inc mov and es adc sbbl jbe jae add repnz arpl adc ss sbb add adc dec adc sbb fist jl les push cmpl adc stos stos rcrb sti sbb hlt and fs sbb dec das xor mov mov sub sub push fs inc cmp dec iret cmp inc imul je xor mov inc xor pop or outsl dec cs jo outsb fcomps sahf push outsl dec jns pop ja jge jl mov es dec pop sub jnp jle inc xor clc inc outsb push sbb (bad) (bad) mov push rclb mov (bad) jl notb jge bound je popa jae addr16 mov push lds fstpl bound out or dec and sbb push cmp cli jmp xor pop repz lods inc data16 inc pop mov fistp jle push jbe aad dec ror add inc imulb mov push rcrl ret pop jle dec push inc push shrb mov rclb sahf inc xchg loop ss ljmp inc cli jbe adc ret into je push (bad) fcmovu fiadd (bad) adc ret je,pn push es ds xor adc ret push je push push sbb push inc adc adc outsb je push data16 jle jb jbe inc ret pop je dec mov fucomi inc lret adc ret push dec pusha scas stc sbb out into (bad) inc add adc ret outsb je rsqrtps adc push add push inc mov push xchg jbe adc ret adc push inc inc scas (bad) sbb or lea adc mov leave sub push stos inc xchg inc mov cmp popf (bad) imulb stos pop push mov and mov dec lret or push xchg int3 fninit mov mov pop sbb sbb subl in jb orl cltd out push jae je fidiv xchg mov push mov push pop bound (bad) ja push outsb ret rcll push rolb or imull (bad) jne (bad) or mov and clc or cmp xchg nop dec cmp loopne pop cmc rol adc ds jns jnp push int3 (bad) inc dec pop bound xchg pop xor cmp push xchg jo pop xchg andl mov rcrb jb inc js fisubrl out insb dec repz dec (bad) mov and mov bound outsl adc fimull mov pop or (bad) in sbb pop jmp pop je ss jno loopne fimull lcall and loop (bad) sbb jnp push xor and jae xchg push pop loope,pt xchg push sbb (bad) xor jle (bad) out lret es pusha inc imul and jp adc insb sbb dec inc xor push (bad) outsb loop push ret adc add shlb test out dec dec jns pop cmpsb ljmp jo stos adc xor (bad) mov pop sub sti mov lods xchg stos sar les jecxz cmc mov and std mov jl xor push sahf es sub mov cmp stos mov adc jmp pop inc cs jp dec in inc adc mov adc pop cli pop nop jbe adc in je push je fistl inc or cmp cs les shrb inc mov inc scas jo jmp jo bound adc push je dec (bad) ljmp inc (bad) cmc pop dec pop fs je add cmp fcmovne inc loop sahf adc pop pop push jo fistpl inc or xor es (bad) je push in sahf (bad) jmp ret add or sub fcmovne inc in jbe adc pop fisttpl jl bound push ret sbb cli lea jl (bad) rcrl add fmull ljmp lcall fistl add lds in aaa stos dec dec push inc fisubl inc aad cld mov mov sub (bad) repnz pop imul fbstp nop outsb stos cmp fs lahf stos arpl push adc and bound jle push (bad) sub mov pop lock stos cld scas dec or add xchg or int stos rolb sub xor stos jge or push pop test xchg lret mov sub or xchg or pop out les test ret mov dec insb push test inc ja mov push push rolb push (bad) (bad) cmc ljmp enter dec push jmp pop out push ljmp or stos sbb inc (bad) xor test stos push xor sahf sub mov xor scas or xchg rcrl notb jae cli sub xor inc js inc daa clc inc mov adc pop sahf decl push das rolb dec or mov aad xchg ficomp jb cld stos cmpsb xor ja cs xchg popf stos cmp rorl mov movsl test push push scas stos repz pop (bad) mov adc push or ljmp add jnp mov sbb adc arpl addr16 mov or push outsb ss push jp stos enter mov xchg stos test out jg stos ss cmpl dec xchg (bad) push jns arpl cmpsl hlt jb cmpsb and aaa (bad) mov sarb imul jo pop ret outsb push (bad) jno mov adc stc add sbb repnz test push je mov lea inc mov sub pop xchg jbe add xor inc xchg mov outsb fisttpl (bad) ret shrb into mov cmp das testb test in imul cmp subb in mov pop rolb fsts jb cld mov inc mov xchg std out scas stos add stc dec loop cmc dec lret rolb mov ss imull shrb out push es sbb insb dec or pop push cmp shlb fisubr mov and stos jge add dec push xchg pop or sarl lods and mov imul test mov sub idiv mulb std jnp sub adc mov data16 stos dec dec dec xchg jne mov stos push lret fsubrs adc xchg stos push in cmp stos add push xchg pop stos icebp in ret dec inc inc ljmp stos mov fisubr xchg inc jne in rorb cli out out movsb jns inc dec jl inc stos dec lret fdivr stos and (bad) adcl xchg pop sub mov stos das sbb cltd divl and pop mov jns sub popa stos jb lcall push jg call push cmp jge data16 adc mov mov cmp inc stos leave xchg dec push fimull fisttpll mov mov jno or in pop movsl or hlt stos sub push cmp leave xchg icebp or mov pop sub out push incl fdivrl push stos sbb push outsl stos and push cmp in test fiaddl pop push lcall xor and addr16 push test mov popf cmp sub test adc sub fs ljmp inc bound push xchg pop dec in xor movsb mov add stos mov aam or sbb loope adc call imul add frstor mov inc or daa sbb cmp pop push stos or imul test inc out and xchg lcall lcall push push sbb into xor xchg test fwait dec jae ljmp mov movsb push cli xchg loop lret push sbb stos jae mov ret push dec (bad) xor xor loop pop dec aam stos stos pop push rcll jnp inc push jmp pop and push cmp mov mov add fwait rclb lods mov in lcall ljmp cltd pushl jb cmp imull push xchg push sub push and andb sub mov stos fdivl dec test jae inc cwtl push xchg lea sbb mov sbb negl mov outsb mov shl lock pop (bad) push cld (bad) mov sub adc inc (bad) stos cmp orl adc dec cld xchg pushf mov das inc push ror dec lcall loopne call push dec xor mov dec bound xchg repz shrl out icebp mov jmp stos outsb adc hlt outsl push mov gs xchg repnz push dec sub sti into aas sahf js stos adc mov dec mov call adc stos mov xchg dec pop stos nop iret insl rorl dec outsb rorb sbb pop psubusw dec fsubr lret xchg sub sub movsl movsb dec cmc dec mov jbe hlt enter pop rorl inc mov lods movsb cmp mov dec outsb stos and jns inc push test stos inc mov jmp or inc push cmp movsl xchg imul sbb mov sarb xor mov lcall test out jp xchg mov jle xor pusha ljmp xchg mov sub xor sub pop mov cwtl rorl insl push add fcomi mov lret mov adc adc rcl push daa push jne cmpsl enter (bad) stos pop bound loope inc sbb sbb dec adcl sti fnstenv push imul icebp add stos mov cmpsl ss xchg ds push mov gs pop dec sbb loop mov loop stos sbb cmp cmpsl (bad) ljmp mov mov das add xchg mov (bad) out mov in stc in pop in sub jnp (bad) aad inc mov mov (bad) aaa cltd ss data16 mov sbb mov inc xor sarb (bad) mov mov cmp push mov std movsb out (bad) jo add lret sub lcall fdivl insb mov movl loope add jns pusha shl pushl lods push movb pushl inc clc stc jmp lods cmc bt neg jmp cmc jg push mov dec (bad) fldt lock push mov cmp ds jmp cmpsl in mov push dec sahf sub or aas nop shrb das adc inc popf mov notl loope and pop mov mov jne mov addl dec xor pop xor js inc adc mov lcall lahf leave xchg pop and adc add mov jns push jnp xor xchg jnp xchg pop sub movsb test inc inc jp insb adc int3 sbb jmp cwtl sahf lods mov push subl outsl lds mov push mov sbb xor or dec cld add and mov pop into inc sahf (bad) jnp (bad) or push mov mov sbb lret in jo aam sbb das mov inc mov xor in into (bad) mov or stos mov xor test sub aaa cmp test cltd out jb leave cltd xchg jbe xchg cli fimul loopne xlat sbb inc movsl data16 iret adc rcrl mov sahf xor fdivrl roll mov repnz dec sbb sbbl pusha lret inc push and das pop push mov int pop sub int3 mov inc movsb aas arpl xor push fwait inc ret mov out or cmp push push sbb out pop cmpsl cmp cmp lcall lahf xchg lods dec arpl shrb gs pop and shlb rcr cmpsl cmc dec test xchg push and pop in sbb and push sbb aam (bad) mov repnz push mov out frstor sub sbb sbb xor addr16 jge mov pop leave gs es test adc es stos cmc mov mov and jecxz pusha xchg lcall shll pop cmp mov testl add sarl push mov rcrl mov imul scas lds dec mov and adc cld rcrl mov les pusha in popa movsl add mov scas sbb call repnz push inc push fiaddl pop jns imul pop repz cmpl vmread addr16 pop daa push push xor stos jmp sbb iret ds (bad) aaa pop ret pop pushw popfw mov call bnd imul (bad) and jl xchg pop faddl or insl icebp movsl imul dec in int sub scas aaa xchg sub mov mov inc sbb add or xor rclb outsl and cs push mov mov mov lock pop xor ja test xor xchg rolb aaa movsb and sub ss lods jo mov cmp jne imul insb add sbb or mov sbb mov int3 xchg mov aaa mov cwtl push and cmp cmp int3 xchg (bad) sub pushf and push pop adc rorl fwait mov (bad) das stos adc push rolb in jae xchg or sti ss lds and das jns jecxz sub les jg loop dec in mov fimul mov push arpl ja test test lods out xchg pop and pusha and clc mov imul ds inc push inc push dec xor cs insb add pop and movw lea ja jmp loopne sub mov mov dec popf push push and lea mov ret out cmp mov pop mov stos stos and adc pop jbe pop out inc (bad) cmp pop fdivrs addl and outsl xchg xchg aad push pop mov sti sbb jo sbb sarb lock in mov loope outsb mov mov ss jbe ja (bad) push clc rcll jge (bad) call call movb jmp outsl adc jmp mov and daa stc rclb movsl mov sub or sahf paddq pop movsl test insl icebp loop fscale pop mov pop movsb imul (bad) mov xchg xchg adc sbb (bad) push mov dec inc pushf mov jmp mov in jl and cmc ret or mov jo mov in jle imul or or and push or addl pusha jle add cmp test cmp jmp xchg and outsl mov inc xchg aam mov sahf out mov sub lods jno imul add mov hlt jle cmp mov add fcmovnu popa adc add dec daa push clc (bad) push inc out pop imul cmp pop cmp xchg xor push lret jg (bad) icebp push movsl mov loop add stos divl cmpl sbb aas xchg lahf scas dec scas rcll xor call loope loop arpl test rolb push add pushf pusha pusha pushf mov push movw push lea jmp add inc gs outsl fs gs popa outsb fs gs add add jmp call mov sti loop xchg aad aad sub xchg pop fcmovnbe jbe inc fisttpll push cmc dec mov stos pop pop adc add xor push jb push jbe movsb fwait push es xchg sti fs jno push push es (bad) push pop dec iret ljmp add lcall jp adc dec adc mov push push sub ljmp fwait fwait xor xlat (bad) jbe push xchg pop add push scas xor fisub inc in adc aad pop xor dec jnp cmp add insb outsb in push pop out adc mov mov aaa fmuls shl xlat fdivrp inc add adc ret jnp inc gs dec add cmp pop inc (bad) xor mov push je,pt jno push das je jo inc aam push (bad) sbb dec fcomps es mov scas xor pop push and sub push cs insl sub loope mov test push (bad) mov pop fdivrs xchg add aad pop lret lahf pop jge andl push out pop mov adc push fistl fisubrl pop mov stc insb jb add popa shlb iret mov aas dec sbb pop dec jmp add xorl mov mov aad push sbb fstps adc cmp inc les lret (bad) clc adc push sbb adc or fist dec sub jb sti out loopne mov ret adc bswap sbb sti mov push add add push ss xor sub mov push shl pop and pop int add adc mov repz cs adc push ret fldl ficompl dec and dec push in mov xor je lods jbe push push or gs xor pop cltd pop scas pop xchg pop inc jb dec adc inc jp fldl push xlat sbb mov dec insl outsb (bad) push inc mov leave inc xor mov add aas scas dec inc cmp adc dec add inc sbb add pop dec jne sti mov xchg xchg addr16 or mov jne fnstsw pop (bad) xchg inc sbb aam loope lock jne adc les push adc (bad) sbb mov push sbb or inc add push cwtl out aas fstl pop hlt jle in leave (bad) dec xchg dec cmp out outsl out push cmpsl jle jb (bad) pop scas repz add pop add fimull fcmovne xchg outsb jecxz push adc jle lock dec test idivb jge add (bad) or push xchg fisttpl mov inc xlat int sub repz scas fnstsw dec popa mov les cmp and mov lods adc jmp out fsubp mov movsl out mov inc fnstsw mov inc mov pop fs (bad) lcall cpuid adc ret ss jns pop adc jbe or pop push loop cmp cs mov in sbbb lock add xchg popf sti test jmp test add test sti dec addr16 xchg in out xchg add adc fwait stc out ficompl mov je jmp sub test les (bad) cmpsb dec stos lock push cmpsb push mov adc push inc insl mov cmp mov push ja je xor jmp mov bound incl add inc xor insb iret mov dec dec dec bound inc (bad) pop iret lea sbb jb xor jg fisub (bad) push cmp push add mov jo jns cmpsb pop cmpsb dec push add push cmp sub or sbb add lea sub xor repz jle push fisttpl push xchg roll scas add imul mov xchg cmp xor aas adc cmp add or stc push and aad xchg ret xchg cmp xchg cmp xor adc les sbb inc out sbb push dec pop repnz fdivl cmc je popa (bad) xor add mov pop punpckhwd add inc push xchg inc ljmp pop pusha sbb fstpt fcmovnb (bad) in pop mov pop mov push mov cmp das pop scas push sub lret jle xchg test push xor cld addr16 jl xlat jle cmp lcall jnp repnz pop jae fnstsw push inc xchg mov mov addr16 xchg or jo adc xlat (bad) cmp add inc inc mov push shll hlt inc aam fs pop lods sbb adc jbe or pop mov cld push ds sbb fldt fcompl push push adc mov out push mov sbb test divps mov js sub rolb mov jno icebp pop es jne inc inc test add jbe inc popf lds inc gs push xor mov xlat imul (bad) (bad) bound sub in inc or ficom mov (bad) xchg mov and sahf jno mov mov sub xchg mov js dec mov inc (bad) movsb sbb cli xor adc add js ljmp test and or cs inc das sub (bad) ss sarb add fcmovb xor inc ret add lret divb repnz xlat sbb nop mov push xchg or shr add add and dec iret jbe lods or mov jle sub insl movsl es test dec xchg bound fdivp add xchg popa mov mov add mov mov add mov js sbb imul sbb repnz sti mov pushf pop add inc sub int adc cmpsl jl pop dec leave xor hlt sub jmp (bad) jge add xlat gs push jb adc push js orl fwait xlat pop out adc cmp ret inc in out pusha or aam xchg popf sbb dec mov sbb xchg jl jle mov call jb mov movsb jle mov mov xor adc popa add fs fucomp cmp setp push add ja cld dec mov jmp push add jmp out mov aam mov xor adc sbb (bad) ret pop rcrb mov ja jne inc pop pop xor mov push pop ss fs dec dec inc xchg cld adc push aas xchg xchg mov push cmpsb rorb mov mov adc jle lods fstl push lahf ds mov pop push dec adc mov (bad) (bad) xor lret jecxz in ja gs fs sbb push add iret xlat addr16 and mov je dec push roll inc xor and test mov dec pushf mov add fiaddl mov imul leave negb dec pop cmpsl in dec cmpsb pop (bad) (bad) dec mov call push sbb inc cmp sbb clc out movsl (bad) outsb push mov mov insb dec loop fs or push ret mov or out add cmpsb jnp cld inc mov push ret add inc es cmp dec ret adc mov aas pop pop ret mov xor das cmpsb fs xchg lret enter fs jnp outsb idivb ret repnz mov cli je sti sbb pop dec ja mov sahf ret cmp ljmp and (bad) in inc mov mov inc pop pop jb loop dec ljmp (bad) jb jae adc add inc push inc pop rclb in aas ret mov pop (bad) cmc push mov xchg xchg jns fwait and popf push mov push subl scas push mov or fstl cmpsb fistl sbb inc or or xchg mov push das ret neg or push xlat inc aad mov push inc push pop cmp pop inc cmp push dec fisubrl sbb adc popf sbb (bad) lds xchg (bad) dec push fmulp mov push mov mov sbb sub (bad) dec fidivrl and lods stos mov test sbb mov push pop jno mov das test dec adc pop or aam sbb jle int fstl nop fsts mov cmp mov int3 adc xor xlat imulb or out or aaa cmp jp rcll mov (bad) jle add mov in lds pop ds in fldl jo or pop fstl test add dec cmp pop xor frstor xchg je loop mov pusha pushf lds or push dec xor xchg negl lret outsl movsl pop fdivl in push mov out push aad test (bad) rorb inc (bad) dec jmp pop xor or xchg or push xchg push sub jp daa addr16 xor fisttp dec inc popf imul ret inc dec jbe push shll mov push jno rorb cmp and and mov lea jl push aaa push (bad) cltd pushf mov dec outsl cmp pop inc mov or leave pop or test cmpsl push divb xor push xchg pop or sub lahf push rsqrtps mov dec inc popa jmp pop cmp mov xor fistl outsl sarl pop ret push mov repnz xchg mov pop or into dec xor test push xor adc fildl aas pop data16 mov push gs pop cmp fiaddl jb push jle jl jns fistl sbb test adc lcall adc jbe jne outsb push pop add cli mov xor sbb (bad) in inc sbb push addr16 mov mov sbb mov cmp hlt cltd stos lock ret jp push push repz fadds aad cs jle mov adc jo dec pop adc inc jbe or subl inc inc xorl fcoml je add aam movsl cmpsl push cmp es sub and mov out in jbe inc inc sbb das cld dec xor mov push adc pop push jbe dec mov pop xchg fs stos mov movsl inc jne je push stos cmc lret xchg jmp ret adc pop pop fcmovbe ficomp xor aas loop push push (bad) arpl pop dec adc xchg ja adc (bad) inc dec out clc testb xlat scas mov sbb xchg jbe mov ror inc pusha push inc xchg jb rcrb ljmp call push adc repnz cltd test jbe dec cmp jbe into imul fwait insb push (bad) sub jb xchg sbb rdmsr inc push pop jo adc outsb arpl pop fwait xchg jecxz inc jnp push enter pop sbb rcrb pop aas out adc sbb dec jbe mov adc jbe jae inc ljmp (bad) jbe pop inc sbb lret (bad) inc push ret pop lock push aas aaa out cmp cmp jmp fidivrl (bad) inc pop dec fcomi ret fisubrl push xchg adc gs les adc sub inc push cmp xor pop sbb dec ljmp les xchg inc test xor jb push jns jae lcall cmp loop and ss push dec fisub jg es xchg cmpl jns fstps pop add cli orb outsl pusha in frstor ret jns sbb test hlt jbe shrb inc mov jne inc inc in mov dec (bad) sbb lea aad mov sub sub fstpt movsl sub pusha mov push sbb adc jno popf jle pusha push xchg adc jle inc cmpsb push jnp add pop jne inc data16 arpl out ficom push jne inc adc lret addr16 icebp roll pop add inc jno pop (bad) xor inc mov ficoml pop shrl sbbb dec es inc inc les and jne,pt add inc adc loopw bound je test aad js adc inc rorb dec adc pop flds fistpl push jl jmp pop fs pop les je cmc inc sbb jno (bad) and (bad) mov ffreep fs xorb jbe lcall andb xchg rclb mov sbb pop xchg add (bad) pop rcll jb inc repz in mov adc push cmc out ss xchg fs out je ret xor fistpl arpl fidivl enter xchg pop push les jbe cmovno or outsl mov lcall and add xchg fdivrl lahf adc pop lret je aas pop or imul jb jbe idivl pop insb divl mov pop imul es push xor and subl xor fcoms aad jle dec insb adc lods inc aam rcll mov inc or or es sti out pop pop mov fcmovb push pop js xor dec adc sub mov dec push or jbe mov mov adc or jno imul pop and and cmp xor (bad) mov inc insl aas enter mov mov lahf pop pop adc xor jae mov out and xchg lcall mov es sbb jge xchg int3 or arpl js ds mov dec jle aas mov pop pop dec xchg pop cmp sarb lret adc inc inc (bad) pop fisttpl inc mov repnz stos lret test jecxz pop or pop sbb inc inc aas cli enter int3 into rcl pop mov sub ss push test sbb and mov cmp push pop fidiv popf test imul add inc dec push scas or (bad) mov xchg adc sbb stc push sbb adc pusha pop xor adc ds push mov in xor mov aad stos test mov jbe xor xor fs mov jb inc aam pop rcrl sbb xchg jmp push and xchg mov or adc (bad) hlt mov jb add or mov sub sub (bad) fildl lcall ss mov jb pop (bad) aad or insl lods and and mov es dec push mov jno daa push add sbb inc inc adc dec ljmp and addl xchg inc mov (bad) push leave shrl inc xor and inc push mov fidivr mov mov lret and inc adc mov mov inc (bad) ja out dec dec sub adc icebp cld lcall push jo push arpl add negb outsl ret je nop rcr lea or (bad) fisubr imul xlat (bad) sbb jo sahf push cmp dec ret xor scas cmpsl push fwait insl xchg cmpb mov push xlat or or sub xchg and dec push adc xor (bad) push inc dec pop nop sahf jae gs pop jp push push sbb stos insl andb add imul mov pop idivb inc push (bad) ss add decb jl inc push xor cs fstpl daa cmp jno mov lods ds pop es dec dec dec dec xlat rcrb fs shlb or mov gs lret dec mov xchg push push cwtl mov test out xor push (bad) pop gs and push test (bad) pop test add fdivrl mov pop push pop pop push cmp shlb mov push dec xchg mov push iretw negb lret fcoml adc lret xlat mov ljmp test add adc shrl pop gs frstor and cs pop mov sbb nop fcmovbe push lret sub cmp add mov pushf lahf pop repnz outsl icebp pop dec and push (bad) test adc (bad) fldt adc adc mov inc push sbb pop push jno pop jle out push jno push xchg lret aad push pop fidiv daa aas ret cmpsb jecxz mov or cmp jmp pusha push (bad) (bad) jae cmp aad lcall push mov xlat sbb insl xchg and rcl mov es sbb shrl loop nop cli addr16 mov sub push sbb lea mov mov cmp adc jns test jae mov std mov mov (bad) jmp jnp adc add pop sub xor ficoml add or pop imul adc adc push movsl or (bad) sbb lock or or and xchg push je pushf outsb sbb mov dec push ds aad add repnz pop xchg push inc andps push es add dec inc das push (bad) sub sub outsb pop (bad) jp jno outsb test pop stos mov (bad) stos dec pop loopne sbb mov dec dec xor push pop lds dec push nop rclb xchg lcall sub pop sti sub pop pop lock mov test fcmovb btc cmp push test push sbb lock push repz test adc adc pop adc es clc pshufw decl xor pop xchg add sub jo fnstsw aas lea cmpl daa pop push push adc jmp mov idivb adc pop addr16 call aas mov dec scas xlat push push inc mov xchg sarl jne push lea xchg mov sub push arpl pop push pop adc or addr16 xchg fwait mov and pop add pop je sbb pop mov or push inc enter inc pop lcall mov fistpl outsl mov push bound push sub mov jg add mov pop test into ffreep addr16 and mov pop pop adc notb push pop ja and mov mov lcall test add fwait cmpsl jb inc cmc xchg movsb jno sarl pop fdivs call mov sbb push pop out rorl push mov ffree add push jge mov std lcall adc nop add mov or and push aaa cmpsb pop adc addr16 scas mov lahf dec je or imul push or lahf mov rcrl dec xchg mov adc add jp push sbb (bad) mov dec pop mov pop pop sub inc mov fucomp xchg mov jecxz popa out xchg sub cli xor pop xchg dec ss sub cwtl push jbe imul jge cltd inc add gs sbb das mov mov out in sti pop add outsl add sub fild leave repz pop add xor daa inc add push and push fwait push push nop pop rol add pop add dec push (bad) bound lods mov adc pop dec (bad) fcmovb push mov iret dec divb lock pushl or inc mov lods aam or sbb push shrl push sbb dec lret jno add movl cli push sbb mov inc cwtl sub fildl jbe adc (bad) std mov mov int aas cmpsb mov xchg jmp push mov stos shrl and pop aad push (bad) xor dec xor cmp push jbe pop mov jb aas inc mov adc into dec imul mov test xchg mov testb mov (bad) jne mov dec mov push push mov pop in ret into dec imul inc add mov popa mov xchg mov mov fs sbb ret idivb (bad) dec pop (bad) xor xchg (bad) jmp lcall rcll push popa push xor add iret fstpl push xchg fs adc lahf imul lods dec mov or mov inc push mov hlt mov lahf or imul lcall in jp ja jbe test sub popa imul xchg pop shrl or push sub fadds push stos lods dec mov pop rcrl addr16 rcl adc lds iret push sbb jb (bad) pop push pop js adc rcr push fist adc push pop addr16 push adc fsubrs incl push je add push lcall jbe lods sbb pop push mov enter (bad) fstpl or inc das mov add sbb fistp pop iret xchg rcrl lcall add lret jecxz cmc ret mov dec push das or daa rcl add inc dec lock sbb mov test mov dec fistpll (bad) nop push inc adc pop mov mov or mov mov into (bad) aam mov aad jp push imul sbb test das lret or jae pop adc xchg jno stc sar jnp stos mov push mov inc sbb add sbb and dec inc aad push push dec mov test test imul sub cmp sbb mov pop lret push adc pop dec jle cmp push jo in (bad) data16 ja mov sarl push xchg pop xor and (bad) aam daa mov adc inc (bad) sub inc mov inc int3 das and mov dec sahf xchg lret adc push xlat pushw jecxz dec dec es aad mov cld shrb pop push xchg aam sub stos mov add scas or jge pop les mov lea inc subl pop mov mov pusha xor xchg pop aas mov pop xchg or (bad) aad adc push jne (bad) xchg jns inc push or sbb (bad) (bad) fdivrl outsl add aam sti insl and jns dec ret dec loop out mov xor jp push jne sub dec loopne jp aad scas out fcoml pop notl xchg dec add fpatan rorl aaa nop std sub or roll jb stc mov adc outsb sub rorb xor add imul or loop inc fdiv sub sbb pusha addr16 jo hlt adc out movsb pop dec jae dec fs cli pop mov mov cmp shr imul push push xchg (bad) ja idiv pusha mov adc push sub xchg jo fs inc lret pop aad pop xchg bound inc dec imul (bad) jne jo mov cmp and sub sub iret pop jns or scas es inc fstl push inc hlt inc xor int (bad) mov mov es pop clc add adc jp aaa mov dec mov cmpsl add xor or iret test test fwait jb sbb aam or fisttp mov hlt sub mov (bad) iret adc es stos ds iret dec mov dec inc cmpsl mov sub das mov inc xchg mov cmp jecxz jge ds or mov negb lods add push mov ja push aad xchg mov dec nop pop push cmp les js inc popa xchg push jne mov sbb int xor pop push push xlat adc push jle dec dec push ljmp and ficoml addr16 pop mov pop test add push jmp neg jp pop or imul mov sbb mov dec call push or jecxz rcrl push add or xor push aad and bound pop scas jb dec rolb mov push lret cmpsb fsubl mov inc dec mov jp mov xchg push push insl sbb inc jge dec push xlat (bad) push inc dec sbb dec repnz fcoml lock adc and in mov sbb mov dec dec mov cmpsl add dec sub cmp adc push int fidivr movzbl shrl les (bad) fimul push xor dec stos pop sub push inc pop fdivl dec add inc jo es (bad) adc xor shrb les mov pop jne jmp (bad) xor xchg xlat fwait jnp pop fnstsw sbb push sub lods dec and je mov cmpsl lods fimull leave dec adc nop sbb inc insl cltd and mov or mov je dec pop mov (bad) aad sub frstor xor rcll outsb push inc jp mov fstpt insl inc pop mov sbb dec pop sub movsb (bad) jne arpl mov inc fistl inc fidivrl cmp scas pop std cmp mov outsl mov mov lcall (bad) in xor mov insl push mov xchg xchg adc std push mov scas add fstl pop lahf dec (bad) xor add dec enter xor push ja mov inc aad ds push pop mov push push inc jge dec mov add inc mov inc xor pop pop dec xchg dec pop outsl or repz pop cmp ljmp mov inc pop pop pusha pop pop jmp lea aam xchg lcall outsb push push (bad) int and scas jle dec jecxz mov add cmp (bad) mov pop xchg mov hlt dec dec mov inc imul ret ret test jp addr16 fidivrl adc jae mov push xlat inc insl inc mov lret jbe pop xlat (bad) ret lcall popa jno jnp jno dec push lret mov adc xor sub imul pop rcrb sub xor xlat pop mov dec seto adc jecxz mov ret cld sbb fnstcw mov jecxz (bad) gs mov fwait mov push xchg stos dec gs sub arpl (bad) push adc push (bad) aad push es lds mov and or and fstl push jne jo in sarl (bad) mov xor arpl ret pop sbb mov aam mov adc add pop xchg and add sbb xor dec jmp mov push (bad) push pop stos mov mov fsub negl mov shll mov mov (bad) push and imul add push or push inc mov mov sub popa add cmpsb in cmpsl push cltd inc pop insl mov sbb push pop xor ss mov mov leave imul cmp out outsl aad and and mov pop pop mov xchg sti xor jle pop push flds sbb repnz pop sbb push adc cmp ss dec xchg pushf pop push cmc jmp mov pop push pop cs pop push sub pop mov sub fidivl popa push adc jns,pt push mov jo dec push push fcompl dec inc dec rcrb jg inc mov inc inc jo bound orb addr16 xchg rolb adc xchg pop scas je bnd outsl out push jp lret xchg mov dec shrl jno or jns xchg jb jle push orl cmp leave inc daa push inc cmp mov cmc add jecxz ds (bad) dec push push xchg mov aad ja mov pop inc and mov bound push cmp or pop dec ljmp cli fstpl push loop jns lods jnp xorl lods mov add aad pop jae inc mov pop mov sbb scas (bad) (bad) fldl clc mov scas push scas sarb jp jo push pop or mov mov xchg sti mov adc push test repz nop or dec mov scas cmp stos lahf add pop and jb sbb pop test mov adc mov ljmp aam hlt push cmp mov es sub test test mov je push inc or movsb daa xchg pop pop pop pop pop scas es adc push fs (bad) (bad) pop add aam add (bad) sbb pop xchg push test push test cmpsb push std and daa xor xchg lods mov xchg jne mov sub adcl mov inc enter cld adc cmpsl dec mov xor or push lds cltd inc hlt xchg jbe sub cld (bad) xor pop sahf repnz xor lret sub faddl js mov or sahf daa pop sahf inc xor adc fsts cmc (bad) imull fimul fiaddl jge dec out pop push out repz mov out cmpsb ljmp fwait test or push ret movsb dec (bad) aam aam mov je loopne ret cmp fdivl pop pop sub push or xchg in pop push jle pop push adc xchg (bad) (bad) int3 inc mov je repz ljmp test mov xlat jecxz adc aad pop add mov mov mov out orb ret (bad) repz inc pushf mov cs idivb in cltd subb push loop (bad) clc pop daa (bad) push fwait sbbb dec pop inc push cmp push les push outsb mov scas xchg push jl pop test dec fstpl pop or pop xchg adc dec imul push sbb in mov push push pop imul dec cmp pop add push add fistl inc xchg jne cmpsb mov lea push push dec adc cmp mov mov inc jl mov push mov xchg dec fld jns xor out and inc sbb out mov push into lds xor sbb aad ss test mov shrb lret push xlat iret sub adcl and inc jp test sbb and cmpsb cmp (bad) jns movl xor mov adc xchg iret xchg arpl ljmp fxch mov xlat pop mov cmpsb sbb cmp add leave adc xor inc mov fisub push push popf stos out or cmp sub ret and shl (bad) push pop into sbb cmp pop lahf mov mov cmp jae cmpb cmp call jo push iret jns cmp lea cmp dec (bad) pop mov dec jo inc negb add push ret mov inc subb jle call xchg xor adc mov dec lcall (bad) icebp xchg lret pop sub js pop icebp xor addr16 sub sbb sbbb push mov cmpsb pop push movsl pop aam and lods xlat adc mov add (bad) jae insl (bad) and fwait rolb push or pop sbb outsl out sub add enter xchg mov sbb xchg jno dec rorl daa push out push fcoms push mov add mov inc cmp xchg sub sti adc push (bad) in sbb dec push ja mov cmp add idivb dec add aaa fwait dec aaa mov icebp enter stos (bad) ljmp les loope lahf adc push or pop scas jle je sbb push adc dec fcmovnbe inc pop mov sahf test xor cmpb or xor adc ljmp bound (bad) pop mov pop push stos inc adc (bad) xchg and or cmc push xorl pop loope inc (bad) nop pop and push add push push inc out sbb insl dec stos and aam push push mov sub pop adc ljmp jp leave and cmp test mov pop mov sub mov aad push sub cwtl fcmovnu ss xor pop nopl imulb push sti ret inc sbb dec out fs dec insb (bad) adc fwait mov add sbb push fwait shrl scas jnp lods icebp test adc (bad) out sub insl pop pop (bad) ror mov lds xlat inc and adc jno mov xlat stc les (bad) mov adc adc pop (bad) ds add jg subl adc (bad) out call (bad) hlt (bad) (bad) mov pop sahf inc pusha sbb adc inc shrl (bad) ret inc std xor iret cmpsl pop xchg mov dec xor mov mov dec in lods push cld dec cmp aad sub bound add jl push dec outsb and dec pop xlat push xchg jne fstl subl mov into mov fs jge ret roll mov inc or fcomip movsl xchg jnp add xor dec fidivrl movsb inc mov mov cmp mov rclb mov frstor add repz adc push out loope les mov add sbb (bad) push rolb lods mov fucomi dec inc push xchg (bad) ret sub push push inc lds cli (bad) testb cli outsb adc and pop cmp dec (bad) in in push jp add (bad) fcmovb pop inc aas mov cmpsb loopne inc or fstl rcrl push rclb scas movsb jge mov push test push es sbb movsl (bad) xor push lock pusha je aas ret mov (bad) mov test xchg push enter fcoml sti or add inc push in sbb divb push add pop in test xchg lods mov or in push psrlq mov movsb scas insb pop fs mov jbe test jmp imul fs xchg inc test adc xchg scas mov out xchg cmp mov dec dec cmpsb fdivr inc push (bad) push push inc pop dec or inc das insb sahf fistl adc jne mov push sbb mov push shl push adc or neg pop mov jecxz rcrl das aas jl mov rcl inc incl add fdivl mov das push aam outsl jmp jp (bad) pop jle dec test pop es pop es (bad) lods cltd inc push adc gs in repnz ljmp outsl sahf xchg mov inc sbb inc jbe mov xor mov imul les xor xchg mov cltd test mov mov mov pop subl fistl in pusha xchg (bad) fnstenv test sub add test shll iret ror mov or dec mov leave push cmp jo fwait adc ja cmp outsl or or lock and fs pushf add test test or insl fnop or cmp jno cmpb pop push dec push enter mov lret inc xchg ret and inc pop dec lods fcomi inc jbe rcrl dec xchg jl push and and push jl push and xor xor bound sbb shrl xchg jge inc push mov and inc push push xchg jo xchg or push push xchg inc dec add push shlb or jg ss mov xor (bad) mov cmp add dec cs inc je loopne cmpsl repnz aad mov (bad) pop mull hlt pop (bad) adc ficom ret pop into (bad) adc or repnz sbb out (bad) adc xchg xchg push jnp xchg inc dec pop sahf (bad) add in lcall xchg adc jl pop adc jae fimull je dec out je dec mov push not adc jae fisubl je dec scas push rcl mov and (bad) adc or push add pop (bad) push adc (bad) adc arpl dec inc dec pop jbe adc dec xchg jle lods test push mov mov (bad) mov outsb je dec push xchg rclb jae ficoml (bad) div in push fmul dec ficompl fadd pop fiaddl rcr add push push and xor or push and insl inc dec rorb or pop fdivp inc adc push adc jne pop jp loop pop test pop out lret mov test cmp mov mov adc aas addl inc into fcoms in inc adc jne pop dec jne ret (bad) dec inc repnz daa xchg jbe (bad) mov xor push ljmp mov xor push xchg and arpl push sahf imul rcrl dec shrl inc jge push idivb jno fnstsw and inc inc shrl cld sbb mov stos (bad) arpl push es jge rclb xchg cs and fstl mov pushf aad sub push es movsl std pushf in jb mov xchg push push push push add mov xchg shll inc nop sub add (bad) mov fisubr lcall inc hlt jmp dec and inc sahf sbb outsb cwtl sub popf cli aad test xchg movsl xchg push xor inc arpl mov cmp pop lock or fildll out das jp test pop mov xlat push (bad) out insb lret inc jbe sahf or inc inc add sub lods stos or xlat push imul and sbb pop inc fstl xchg pop sahf das inc mov mov popf (bad) sarb out mov incb nop lods add cmp std cmp mov jge test jae pop cmp sub rclb pop iret pop dec loopne pop xchg dec aas inc (bad) popa imul cmc jecxz dec sbb mov xchg lods sub out pusha stos insl xchg and or push push in (bad) int3 pop push mov xor push xchg shrb mov out je roll pop mov (bad) jno or xchg xor cmpsl mov and sub das mov ds aam fwait test jg pop inc jb setl add sti inc scas movsb sub jbe dec into add into push jnp push ss cmp dec push inc rclb jbe push stos mov test and scas jae pop cmp iret sbb ret push in fucom imul scas mov sub (bad) pushf ficoml out adc mov ja mov test mov xor mov and mov adc mov jno and mov mov mov es xor rcll mov mov push repz cld aam or xor and cmc mov mov aas push addl mov or mov mov push nop dec insl test in push ljmp stos lret cmp pop popa inc push in pop movsl mov sbb or pop push and mov js add add mov movsl out test or fstl iret aad pop std mov iret es xor gs (bad) pop cli xchg pop xchg jne fcoml lds mov push stc mov push xchg testb ja xchg fisubl jle jo mov ret jle divb pusha jbe mov push add (bad) jle jbe dec ret inc push fstl fdivs inc lss mov je mov jo imul cmp mov and lahf and adc icebp mov or pop xchg test inc xor std inc cmp cmc jle xlat arpl (bad) xchg jbe push cmpsl repz in mov mov (bad) in mov inc jge mov shlb scas fstpl push or mov mov jnp or sbb popa mov movsb fcmovb jb sbb out mov movsb jns push dec cli pop loop pop ljmp mov ds dec es inc inc in push inc (bad) adc push pop (bad) adc push push (bad) enter inc pop or mov jl or loop sti fidiv inc and out leave push repz xchg add cli dec sbb push add pop pop pop (bad) jo jnp push aad or stos mov mov daa xor repnz pop stos pop call xchg pop divb add popa xchg sub or iret lods (bad) mov jb adc cmc bswap outsb pop adc inc fs aas or dec inc push mov dec mov out (bad) mov dec xchg adc dec jle imul jg fcmove jmp sbb xlat test lods mov fs pop mov test mov pop push shrl cmp repz mov jnp xor out lret outsb repz arpl movsl mov lcall scas push mov (bad) jns push add jle add mov mov mov push mov test cli xor aad insb scas sub xchg pop push sbb cmpsb subb jge pop loope xchg bound std inc out stos loop sbb xor jle cld (bad) insb push in inc add push dec imul add cltd add xlat xor mov rclb ror xchg xchg mov stos inc insb pop aaa mov jno mov movsb jp push test popf pop ljmp cmc imul mov push test cmp js push sbb add mov mov cltd mov add aam andl hlt mov cs iret fimull jb (bad) (bad) or lcall lock mov inc out repnz jecxz dec cmp jp pop pop push pop inc inc repz fistl push mov jl inc jno popa fadd mov ret mov xchg pop mov pop (bad) push jns stos fildl scas inc call jb cwtl push jbe mov mov fistl test scas lcall (bad) pop inc mov sbb bound inc jb inc sahf movsb nop adc insb insb jmp push insl mov nop push fstpl fcmovnu (bad) notb xchg inc xchg push pushf out sbb ret or loope lds adc fstpl pop shrl push not sti mov cmp push mov icebp (bad) in (bad) ret pop mov lret push mov and cmp add pop les stos xchg xor ljmp mov mov aam mov xchg inc inc es mov cmp push pop adc pop dec dec (bad) adc jae pop sbb or cmp (bad) pop adc lcall mov insl in rcrl xchg data16 ljmp cli mov push sbb mov sarb or mov jge fmull mov dec push push adc xchg mov sbb adc add fst mov lahf cli icebp or sbb cld jge aad push pop push xchg dec fwait pop lret dec les inc adc rclb jg nop stos mov ret addl das pop mov dec cmp pop add or sub pop sbb add or cmp push cmp sbb push or xor xor mov lods fidivrl loopne add push push (bad) cmc fwait jae fbstp icebp cmp mov pop leave cmp adc or jbe push adc sbb push arpl pop movsl mov pop sbbl (bad) dec mov je pop fcmovnb iret mov adc cmp jae inc rolb int3 jae mov inc push dec pop test inc mov dec fstl xchg pop mov mov jbe cmp jecxz aad mov es pop inc xchg mov adc xlat jo daa mov negl mov movsl aam mov sub popa add sbb push jge jle jns fnstenv je aad or add outsb jge sbb daa insl pop mov or and fs je xor test push inc adc jae in or ljmp mov xchg aam popf xchg (bad) ljmp pop das push pop dec (bad) cmp inc nop jge ret (bad) popl (bad) sbb addr16 push cmp (bad) out or lcall mov mov push pop out lcall fildl dec rclb cld frstor add and pop dec inc xchg and xor sarl sbb pushl (bad) jns sub sbb aam sti aas stos sub xlat adc xor stos inc dec and aaa push mov insb cmp imul int je es sbb rcll dec xlat ljmp push decb leave jae es les push movsl mov jge pop cmp sub adc andl sbb sbb or sub add jbe sti push xor leave repz pop and push mov sarb push push adc sbb jecxz push mov push dec clc scas sbb repnz sub mov rclb adc sub ja pop sub pop xchg push pop std aam mov cltd pop arpl call nop (bad) cmc push and xchg dec or sbb push ret inc mov outsb aad insb push in outsb cmp outsl popf mov inc xchg cs mov xchg jge inc push movsl xor push mov shl xchg ficoml mov fstl es es hlt fidivrl fnstenv mov pop divb cmp and nop (bad) or mov mov push mov mov pop and sub movsb pop push xor jbe mov adc xchg jp loope adc or dec pop xor insb pop push es jne mov and aad and orl insl adc xor push push and mov mov add and push rolb pop inc test push addr16 mov arpl in nop sub cmpl push lcall lea movb movsl or aad mov push and insl add mov mov or pop sbb cmp (bad) jle push rcrb and insb (bad) aad jns pushf sbb sbb pop add inc int xchg rclb pop pop jae push mov pop icebp in push ret pop mov test les jb movsb inc sub push mov adc aaa scas scas xor push loope push add (bad) jae out inc mov xor fistpl out sbb dec sbb fldt (bad) push xor adc pop daa scas cs mov cmp or or icebp scas fadd insb loope jmp adc dec dec push pop incl outsl add push gs mov out sbb cltd push pop outsb jb mov rol (bad) imul shll push jne mov outsl cmp cmpsl jae pop das (bad) mov sbb jp dec and xchg (bad) gs rclb pop pop dec mov dec mov or cmpsb out dec test pushf mov xor push sbb xchg push push add sub sub xchg sbb addr16 int3 xor xchg pop scas ss inc ffree sbb pop fcmovnu imul lds scas and jecxz stos cwtl mov in in lret xor movsl enter jbe mov pop mov jp test inc push or pop arpl push push in jne and cmc fistl lock or scas adc sbb mov mov imul cmp xchg fwait cmpsl lds adc and sbb mov (bad) rcrl xchg sbb (bad) cmp imul daa dec insl adc dec pop es cmp bound test mov adc jp xlat ret insl or bound movsl ss std jbe imul or popf adc mov fist inc adc cmp inc aas jge ljmp and push cmp fldenv pop add insl stc push inc mov rcrl push (bad) sbb pop repnz push insl mov and cmp es jo fs test inc mov sbb lds add add xor outsb mov cmp push mov mov push xchg add (bad) mov fcoms mov cli scas jp (bad) and mov sub xchg mov mov (bad) out push cmp dec or fldt cmpsb sub das push sahf xchg addl push push stos mov jbe push sub adc jo mov mov cltd pop mov inc das pop lea ret loop pop addr16 jne es jmp sbb pop inc stc mov push jl insb loopne adc (bad) xchg jns fmull inc loop sub pop cmp mov sbb push pop xor loope scas lahf jbe daa test xchg add and pop jg fs (bad) aaa sub je insl mov es or or outsb jae subb shlb mov push or cs pop push es fcmovnbe insb mov gs inc mov pop adc mov or pop add push inc xor xchg fstpt mov sbb popa repz les stc mov inc bound push shll inc mov insl pop push mov inc shrl cmpsl ficompl rclb je pop inc adc fistpl out gs adc push jb (bad) out test lea test adc call xchg fistpl push add inc adc inc in ds (bad) (bad) jae sbb mov ficompl push pop rcll aad dec jnp mov sbb adc push pushf jbe fdivrl pop insl mov push jg loopne iret rorb lret lret push sub (bad) aam mov dec push hlt inc jle cmp dec sti adc fisttpl sbb aad push mov xor pop sbb lea mov pushf xchg jae aad adc push loop,pn mov pop sub jl aad sbb sti pop sub (bad) fisttpl add iret xchg jae push pop pop xchg push fnstenv inc nop in dec fistpl mov sub sahf inc jle xchg jae enter pop jge jne pop mov aam sub cmp jecxz xchg adc fisubrl cmpsb cs rol test pushf cmp ficomp pop dec dec mov lds es lods loopne ss mov stc mov cmp mov jnp movb pop push jb aas inc movl (bad) les mov and and cli xchg inc pushf sub dec push fsts pusha stos push add lcall mov ret add and xor out inc jmp (bad) jg push mov inc xor fistl push loop cmpsl pop lods insl or in rolb pop jge mov sub andl inc addr16 test jbe daa push dec leave xchg pop sbb hlt add sbb fisttp push jl test push cmp push repnz inc (bad) mov and hlt xchg push or mov jb pop dec in mov jo je les ja push xor scas mov pop in adc cmpsb test sbb das or movsb xchg aas mov inc xchg mov lods or cli pop pop (bad) push sbb jp push mov inc into xchg sub inc (bad) dec adc lret cld adc (bad) lret inc adc xchg fs mov shrb call scas sbb cs add into imul push mov arpl xor lds mov fstl sbb ss xlat sbb adc add mov jge jae pop cmovle push push dec pop outsl mov add mov dec outsl or jne jg rcr scas lcall cli xchg add daa aad fsubrl (bad) xor add and inc pop sbb inc add xchg movsb test pop jne adc dec les lretw aam (bad) xor outsl sub pop lahf outsb mov mov add sbb xor inc mov add fildl mov shll dec push dec xchg push add inc mov mov lds loop je cli cmp (bad) mov repz sbb lods push jb jge push pushf mov fcoml sbb aam push xor rcrl loop lret and stos fiaddl test idivl pop es xchg movsb sbb jne mov mov xor imul sbb fiaddl mov xchg cltd mov sub push lret mov mov insl inc insl pop cmpsb and mov xchg popa adc cmp sub push push pop dec push add sub scas push ja or outsl add frstor rcrb ds rol mov xor xchg jno repz jmp mov iret pop inc jmp stc les scas fcompl int3 pop cmp mov leave jno pop cmp (bad) push jmp push rolb push arpl push push stc adc xchg es mov fs or dec xchg je push inc mov clc je rolb mov sub xor add daa adc outsl add mov push pusha test cwtl out mov dec outsl cmp (bad) jb cmp incl pushf rdtsc sbb call (bad) inc jns xor cli add stos push or rcrl sub or or dec in mov leave fdivl (bad) iret mov repnz sbb mov push push pop sahf xchg pop or push lock push dec xor cmp push dec lods fucom push out push fs int insl push aam and xchg jmp imul cmpsb pop mov jmp jne mov sub lea pop fnstenv fdivrl sbb fisttpll push mov add or jb add sub mov lret jbe (bad) cmpsb aam mov enter mov xchg push imul cld and cmp call mov pop fcmovu mov push imul insl lds lds inc icebp (bad) insl lcall push mov stos push in es adc push int3 dec lahf out mov gs jbe dec dec ds repz sub das test or mov push cli dec std mov inc loopne data16 inc pop clc jbe fsub jo jbe in add mov mov cmp add lret pop lahf jno and cmp jmp je sub hlt push sahf test add stc xor push bnd sub mov popf pop (bad) mov xchg loop inc mov add lahf mov cld addr16 dec xor jp,pt call mov das inc insl push andl add sub jne insl test mov lods popa std repz and sub sbb dec mov loopne pop xrelease dec sub adc or ret es xlat mov lret and lcall adc add add out mov mov dec sbb or lahf fstpt jbe dec mov lds (bad) adc push add popl mov cmpsb mov or out arpl xchg jnp or (bad) imul fildl lret mov inc fwait mov inc (bad) loop (bad) psubw jns mov ja test xlat cmp (bad) lcall push jns sahf adcb or sub sub pop daa cmc jae incb aad jp adc sub aas jmp xor test add mov or lods push iret insl test jns sub lcall fstpl pushl xlat stc add pop mov mov jno mov fwait iret fcoms sub out adc inc mov xchg je pop aad pop add les or dec and jo iret mov sbb xchg or cmp loope jb mov ds shll push scas adc jmp icebp es dec fwait or cmp or fmulp push xlat daa mov inc pop or or cmp sub add sbb mov or push sbb sbb lods sbb jb cmp adc mov rorl jae rorb xchg mulb ret pop (bad) sbb adc mov adc mulb push gs cmpsb mov push mov jnp cli add roll jb pop data16 rcll add aam push loop jae rcl (bad) aam ljmp (bad) cli mov (bad) aam add push or pop xor inc and adc ret fidivl psubd (bad) jbe out push xchg pop push xchg (bad) pop xor sub push in inc pop lods outsl loope es mov insb push pop negl sbb es imul sub (bad) icebp sbb scas stos inc icebp pop xor xchg or pop and cmp lcall idivl lcall das dec ret jg std xchg out adc pop (bad) out outsl add arpl enter ret aas cmp cli das mov pop sbb popa add adc stos not pushf stos movb pushf setne mov mov lea jmp not pop setp lea movsbw lahf not lahf mov pushf pusha call stc cmp push call stc cmc cmp mov movb pushf pushf lea je call lea ja call sub pushf movl rep pop mov push lea jmp push out data16 mov jns cltd gs inc add stc jnp mov lods in fisubl mov pop (bad) pop (bad) cld (bad) arpl dec push push outsl sbb scas insb sub (bad) insl sub add and scas or cli shrb xchg cli push jg xchg xor mov mov cwtl jno mov pop jg movsl (bad) push sbb pop add jge push orl pop fistpll or xchg bound sahf in rorl or incl sub mov addr16 icebp and cmc lods cmpsb dec push xchg mov mov aas dec ds fiaddl jb lcall sbb xor sahf inc push or subb fcmovne inc push insl imul dec insl xchg lcall pop decb dec and (bad) cltd lock mov dec mov test pushl lea jne pushf pusha push mov pushf call pushl pushf pushf inc jmp xchg and aad mov push incl ret and cli in mov adc sbb xor cmp sbb jl pop lock in cmp jge,pt sbb lret dec fimul add pop mov (bad) pop fstps fnop inc mov ds pop aam je cmp repz shr mov hlt adc cmc or sbb daa cwtl jns rorl orl cltd notb jl dec dec push les movlps stc stc faddl cmp pop je sbbb push cmp sub icebp mov cld mov add (bad) jbe pop xchg cmp test aad and ret cmc hlt cwtl jns mov dec outsl dec adcl push out bswap mov mov loopne push add add aaa scas pop loop les inc rcrl mov jb jmp sbb imul outsl nop pop repz push addl cld out icebp popf and pop mov mov xchg aaa pop in (bad) xchg jb jmp xor data16 gs sbbb ja aad sbb in bound xchg cmp push test mov jo int3 mov aaa mov (bad) push sbb aad outsb mov push inc (bad) sbb jecxz mov pop mov shrl or lods (bad) jno pop lret dec lods mov lret aad fist or jle in sbb sub aad dec push movsb aad dec pop stos insl stos insb je push sbb inc (bad) or mov inc negb xor mov xchg aad notb fidivr cli sbb adcl sbb and jp jae (bad) dec push ss sbb cmp test xor mov test jo in xor cmp icebp cmpsl add mov in enter rcrb push cmp xchg push lret or jne icebp js (bad) jbe out or mulb push xlat cmp aad jmp push mov rcrb pop sahf push mov bound sbb dec roll dec push mov pop stc and xor push jecxz insl push leave mov lea inc out cmp adc mov sahf pop sbb mov mov cld loop adc xchg sahf pop mov hlt pop test and movsl ljmp jecxz loopne inc sub mov std xor inc and mov idivl inc adc mov movsl inc jg xlat jge dec add xchg fwait cli cli fsubs jmp pusha push lea jne jmp jb mov outsb sub sbb add jecxz sahf or push lahf insb xor ja push lahf sub or mov in pop ja popa aas push subb inc je push mov or rorb sti div (bad) adc insb push xchg sbb stos inc xor subl pop ret adc (bad) fistp xchg jne xlat test add sub or inc fildl mov jnp call cmpb dec inc add out andl adc add sub adc arpl push (bad) lahf rcr ja popa sahf stc bswap mov setnp push movzbw mov mov jmp jmp jecxz aaa fidivr imul cmp sub rcll int fcoml testb movsb insb rorb xchg js sub icebp cmp inc int3 add mov mov lods out mov fsubs sbb loop mov push (bad) adc sbb pusha ljmp cmpsl outsl mov test jle pusha adc sbb jo adc jge xor jbe sbbl lret xor fild icebp cmp pop lcall mov data16 je je lcall int3 mov jns rdtsc sbb mov sub push xor sbb insl and dec ret adc sti sbb in cmpsb mov dec mov dec cmp or movsb div inc dec nop icebp mov pop test mov mov lods push in pop ja cli cltd idivl push fnop jno jmp push pop sbb out ja jp cs jno jno adc mov dec sbb insb inc mov loopne dec cs mov es mov and mov lcall imul jae cld cmpsb lock (bad) movsb push lock add jge mov stc mov mov data16 into mov mov pop out ret mov inc fdivl jb mov ret sub push lods push lcall add dec data16 push bsf clc push clc mov and call pusha pushf lea call cmp sub call cmp mov divb mov pop stc xchg sti test dec adc outsl xor ds out (bad) aad popa xor scas and inc push mov mov int3 mov stos ja in xor sarb cmp lea out adc out imulb xorb sub xor clc push mov loop and sti cmp enter pop mov daa xor lret pop push pop sbb out ss js and mov xchg jnp pusha xor mov outsl xor addl mov (bad) mov enter in jbe mov push inc xchg fwait mov push (bad) mov lcall and adc add adc mull out test loop fstpl fsubs loope push mov into aad outsl cltd aas sbb in leave dec push loopne fnstsw mov adc and xor jo sti sbb xor aas into push lods mov out push push mov scas jns or push fdivrl fsubs clc sub movhps sbb roll pushf arpl insb inc in (bad) lods sbb leave push adc lods aam adc mov jns xchg fimull add lea wrmsr jmp fistpll xor add push dec mov fsubrl and xchg lea jae adc push pushf pushl ret add int xchg adc jmp imul (bad) negl mov ja ret (bad) sub lcall xor in cmp xchg mov mov mov add push pop ret pop scas inc in (bad) leave in lds and push xor add scas jg xchg ja cltd bound cli inc mov push sbb loop dec sub mov cltd in repnz or xchg leavew stc ss arpl add jo mov les cmpsl (bad) std popf pop push inc pop or popl inc sbb js mov fdivs fwait orb sti out or pop sbb pop mov imul not movsl lret rorb cmc cmpsb jecxz or jle mov gs add test push lock insb mov push dec lock xlat rcll int3 repnz xchg and in andb (bad) adc or or movb pushf pusha lea je sar bts bsf rcl add bsf rol call add add add mov add add xchg add add add add add add add xchg xchg add mov add adcb adcb mov add pusha adc add add add add add stos xchg add (bad) xchg add into xchg add aad add out xchg add inc imul popa bound push imul popa add dec push pop xor dec dec dec push pop xor push jbe push jne push imul popa insb jae push jae jb push jne inc insb insb push add inc push push fs insb add jmp movb and pushf add pushf pushl pushl pushf lea jmp jmp pushf cmp jmp bound dec sarb mov cmp (bad) in mov aam mov fcmovb add cs and in push xchg mov mov movsl lea push inc data16 mov mov aaa divl xchg call adc hlt mov xor in push mov push pusha movb push pushl ret rcrb sarb push jl or sub inc mov xchg popf aam jae iret sbb subl mov popf data16 and sahf xchg fidivrl xor xor pop mov repnz cltd adc mov lods xchg xor push outsb jle test cli ss ret add adc jns add (bad) adc adc mov roll lea adc lea jb push push pusha pushf pushl ret call pusha movl pushl push pushf pushl movl movb movw lea jmp jmp pusha pusha pushl push movl call push mov pushl adc lea pushf call pushfw setp sets call call addb sarl imul cmp popa pushf adc ljmp clc je gs sub sub (bad) jge js ja (bad) ret in ss sbb jmp lahf (bad) mov (bad) rcrl jmp or (bad) js andl or fisttpll xchg pop jmp aad sbb clc adcl mov sub mov (bad) je adc cli cmp sub js or and cmp lea mull adc pushl jl imul leave stos xor adc cli paddsw adc pop lods out ljmp int3 mov jnp (bad) mov dec adc pop std mov adc mov or mov daa icebp cmp test je fild cmp inc jns iret mov out popf dec scas xor loope pop leave mov data16 sub scas and sbb cwtl inc or js les jle dec fild repz and sub push in pop in sub arpl lods push jns cli ret pop ja mov cmpb pop push pusha lea jb push cmc cmp movb push movw lea jae call lea ja rcr test shr sub xor bt sar add bsr pusha shl shrd mov mov (bad) lock push jmp inc pusha test xor mov dec pushf call cmp movw pushl lea je cmp cmp pusha movw pushl lea je pusha stc push cmp pushf push pushf lea je pusha lea jmp push aad les add pop and mov xor outsl cmp movsl add and adc inc add aam cmc fldcw cmp xor mov mov dec nop icebp inc test arpl test mov (bad) mov std jae mov add shrl in xchg pop cmc and and mov xchg movsb mov mov mov and jae push pushf sub push pusha push lea call pushf lea jae call add icebp xor ss dec or mov adc xchg arpl mov rorl nop dec cmpsb jae adc imul push mov fwait push out adc std push aaa icebp mov pop in or cmovne movsl mov ja stc rcr in jge test cmp idiv xchg inc neg orl sub push fidivrl gs jmp mov adc pop lea je pusha mov pushf pushf pushf lea jmp lods xor lds out stc int3 adc or jo (bad) stos jg (bad) and inc imul mov pop movsl (bad) xchg lcall add mov add mov (bad) or cmp push test ss pop inc pop int3 insl jl jp jecxz addr16 sub mov mov mov jae add test loop jo dec arpl cmp call xor scas add sub mov pop (bad) xchg cs imul push loopne mov or movsl jecxz inc adc add das inc add js stc les dec xchg (bad) xor imul push loopne fnstenv lret adc pop loopne adc add adc lret inc je,pn (bad) fisubl std int sub cs imul aad dec xchg pop xor ret nop and mov inc lock (bad) xor cli xchg xorl inc xchg in xor loop (bad) jp scas out into fsts ja int3 (bad) mov push dec (bad) testb sub dec adc notb cmp mov push dec mov addr16 push data16 xor aaa loope in jmp in mov sbb mov sahf cmp in xchg jmp mov pusha push lods call call pushf test not clc pushw popfw pushf inc jmp pusha and mov bt test pushl cmpb pusha pushf lea jne sub aas xor pusha lea shrd btr mov and sub sar add not and mov stc test pusha mov jmp mov mov rclb add stc leave addr16 cwtl addl (bad) testb dec mov or popf cwtl in in (bad) mov rorl mov mov lods xor (bad) jnp sahf push ljmp or push xchg push stos or testb push ret adc je mov push sbb dec stos pushl push mov pushf lea jmp mov movzbw mov lea pusha movl call jmp out (bad) enter pop cmpsb repz cmpsl repnz push testl sbb scas xchg test inc sbb push mov jl repz ret xor gs in pop push iret idivb adc inc test add mov (bad) pop cmp es dec jne adc dec bnd adc jnp adcl gs jbe xchg jp xchg xor and mov mov not movzbw pop pusha push movb mov pushl ret sbb pop lods sti dec (bad) into or jae daa ljmp jo,pn adc leave xchg pop xor pop and mov mov stc fild popf orl js xchg xlat jns sahf (bad) arpl and xor pop add arpl push inc ja mov jbe xchg sub mov repnz ds cmp mov mov jg pop cwtl in popa lods outsl stos or je orb push mov pop lods lock mov movzbl bswap mov pushl jmp je bswap data16 testl add sub cmp shr pusha mov (bad) testl out add mov (bad) mull lods sti add mov cmc shr pusha clc pushf test cmp push call add inc gs outsl fs gs imul add leave add mov and sub sub ds (bad) jo adc inc ret imul fildll add jp repnz aas mov push addr16 movl addl scas dec popf adc xchg push pop jmp or xrelease ja outsb jle push (bad) std into xchg fidivl outsl dec fcom ss test jns orl push cltd out inc xchg (bad) mov ja movl movl rep lea pusha not lea mov push pushf lea jmp push movb pusha lea call call jns mov pop test sbb cli inc cltd loop mov into sti cmp outsl aam mov jo sbb mov jg pop insl addl fldenv adc pop leave push outsl or lds xchg pushf mov sbb dec clc push je pop mov fadds mov nop sbb ficompl push hlt clc jp iret mov lcall fwait loope testl mov int insl jle fldcw rcrl push int or sbb push mov pop les pop xor sarl addb andl aam jno inc and arpl mul xchg aaa sbb andl loopne mov adc inc jge mov scas mov (bad) jl ret push xchg jle test adc pop and mov xor daa add and mov xchg fstps and pusha xchg cld call jns xchg bound testl inc adc stc movsl icebp idivb inc mov xchg cmp or lds imul fildl fnstenv and jge insb bound mov cmp xchg mov repnz add (bad) stos xor cwtl adc pop xchg (bad) loope and dec xor inc or and mov or and lret mov sbb in xchg xlat movsl repz xchg pop sbb xchg pop in cld call mov aas fldt push pop and orl or mov inc in pop sub dec xor (bad) sub pop inc jle xchg ljmp aas or orl (bad) xchg aad rcrl cwtl negl lret pop sarl jl rcrl int3 mov or jmp push dec pop insb aaa idivb les and cmp fcmovb daa pop or (bad) into aam imul stos mov push comiss popf cmc mov das aam and xor scas lret lahf push pusha sub mov sub enter mov lahf imul mov and lds add xlat jno ret fcomps fcomps jle (bad) lods imul and xor lea movb pushf movb pushl not call adc push pushf lea jmp rclb mov pop sbb push imul mov and sarb push outsb inc arpl popf les aam push jl add sahf shlb push mov (bad) dec or int3 out ficoml jl nop pop xor jge sbb adc pop dec mov lcall sub sti mov xorl adc mov (bad) jmp xchg cmp jp enter cmp or fisttp jp pop jmp push lea jae test clc pushf call test cmp push pushl lea je pushf push movb lea jmp cmp call call xor jno mov test inc or cmpsb in mov rclb pop fstl mov in adc dec and into mov push jl jmp ljmp adc xchg or movsl jo lds stc in mov add xlat lcall pusha dec mov int mov cmp cmp subl mov sbb add or push pop jecxz and sub int adc repnz jmp xchg pushf call into je repz ljmp push xorb xor cli xor fadd push push sub inc cmp mov jg mov dec sbb pop aas xchg fs mov aaa mov adc xor pop loope cli movsl in lods icebp mov sbb jge xor cmpl add push dec push call add dec outsl popa fs imul add (bad) lret mov cmpsb jne xchg pop stos jae jl sbb orl aad stos mov and nop mov cmpl jne mov and xlat mov pusha cmp mov push adc cmp or (bad) pop cwtl xor dec jbe call addr16 dec mov mov insb inc sub mov pop mov insb jmp imul lea jne push stos pushf mov lea jmp pusha push call push push lea jae jmp call add add mov test pusha sub pushf mov pushf rep pop jmp lret jno lock push movsb hlt mov lret xchg in sti movb iret loope or int jne aas clc dec add cs ret imul sbb adc fldt imul and dec mov rorb inc (bad) lds push mull sub cmp dec and pop jp or into lret loope ds (bad) or rcrl jmp iret into add push repz icebp mov xlat and add arpl jge lods adcl jg (bad) fbstp scas pop cmp mov cmpsl mov mov int3 mov xchg dec call inc sub (bad) fs xlat fs jmp pushf nopl sbb std cli cli or test cmp adc in movsb mov push ss or push mov jmp in dec je (bad) sbb je icebp mov dec lahf jmp xlat out out (bad) inc movsb mov inc lea int xchg mov mov adc out (bad) stos xchg cld jbe (bad) mov call clc imul mov add nop push bound call movsl cmp lods jno fsubs movsb push fstpl jle addl rcrl pop mov lods xchg sub dec or cmp inc cmpsb dec cltd cmp stos mov xor pusha stos add xor xor test in dec xor lock std std test xchg outsb adc dec in (bad) outsl in sub pushf mov pop (bad) xor mov jae in dec dec dec adc mov add loop and test sbb mov (bad) in add je xchg mov in xchg push (bad) mov test jae xchg push enter fiaddl jl or lea jp pop push lea jns pushf mov lea not pushf push mov push movw pushl ret adc pushf mov jmp mov lea call pushf pusha lea jmp add dec jae bound addr16 jb jae outsb je jp test mov xchg insb mov dec xchg loope in jbe xor jl,pt dec adc adc xchg in mov pushf loope jge movsb les std in test cmp ss lret test cli pushf sub sti mov mov mov sub aas test dec mov and sub xchg in or mov in or outsl imul loop rcrb stos sub mov xchg adc mov cmpsl cli mov xchg aad fcompl sbb jnp dec mov and jbe rol sub movsbw shr call dec pusha mov lea jne push add rol shld mov cmc cmp mov mov call pushf mov pushf pusha pusha push lea jmp lea je test stc cmp push cmp pusha pusha pushl jmp bt sub push mov setb mov jmp dec in hlt mov frstor mov dec add pop hlt call jb pop int mov xor mov dec movsb sbb pop push enter gs inc jle cmp pop (bad) ds push popa jno out loope lods rcll sbb jae mov adc ret int (bad) mov pushf xor inc mov mov roll adc (bad) in mov in stc enter mov push mov mov test cmp mov or and or andb (bad) cmc mov frstor cmc mov mov jno xchg push movsl je sbb push or pop and jne inc or sahf or into jne add xchg jo pop pop repz lds ds subl mov or pushl subb fistpll call in sbb lods leave addr16 fnstcw jle (bad) sbb inc es arpl mov push and inc lock xor aas cld pop test arpl mov mov negl icebp bsr inc mov lea test mov sub neg not inc mov call pushfw sets sete mov mov call jmp lea je movzbw inc xor lea movzbw mov data16 icebp call pushf add lea jl pusha pushf lea jne js pushfw mov push pusha mov pushl call test jmp mov ljmp xor add xor mov dec rcll adc lret icebp mov std fstp mov and dec ret xor inc out std std call jb cmpsb jno in enter jecxz adc sti ss xor mov cmp notl sbb call mov push cwtl popa outsb outsb adc sub xor pop sbb mov sub push and and test cmp mov xchg fdivrs inc sbb dec push (bad) cs (bad) xor das cltd jecxz icebp lds mov sti xchg jnp cmpsl jnp out es jmp pop sbb mov jl jbe (bad) adc test (bad) lock xlat inc (bad) orl sub in and mov ret dec lea ds and jg mov lret stc int dec and push sar mov pop test mov scas stc inc test lods dec lea test and jecxz jb sbbl popa test add dec dec ljmp cmp fisub mov xor inc ja mov inc mov shlb inc jecxz pop in pop sub xor add and repnz mov mov iret mov add loopne out repnz js daa dec and enter push clc mov push popf jb add sti cltd push test out iret mov (bad) (bad) hlt xor push ficompl mov sbb mov or sbbb cmp push pop ljmp mov std loope psadbw pop aas fcmovnb jo stc ffree pop test pusha lock push and fildll leave fdivrp mov lahf rcrb iret aaa cmpsb push in pop ret orl jbe in addr16 mov lea add jo imul fs ja push cmc imul call sbb mov lods jle xchg aam push push mov mov push daa jmp lahf in jle jb pop jno mov gs data16 movsb pop ret jle cmp pop cmpsb int in adc sbb aas daa add dec repnz subl adc movsl (bad) arpl inc clc adc jbe jmp dec sub loop sbb shlb or mov pop test mov push jle cltd inc push lret outsl inc mov inc cmpsl xchg adc mov das jne push fstps sbb clc xchg stos rcll iret scas xor jns sahf lods ljmp xchg jecxz cs cs out adc xchg mov scas sbb mov jns addr16 jo sti mov hlt add add mov mov mov cli mov mov daa mov inc out jns cwtl ret fwait inc in inc fs push fsubs mov pop cli (bad) pushl shlb mov call push loope (bad) mov imul jne popa movsl push (bad) out (bad) cld xchg push push jb fwait sti mov ss cmp sbb fildl in les (bad) xor cmp and mov in jb int imul sbb cltd adcl imul (bad) mov xor outsl lret add xchg push mov mov (bad) xchg out (bad) jno cmp push adc mov push pop lea mov inc sbb mov ret sub mov pop cmp cld mov inc push lret push in jbe adc jbe subl push sub addr16 pop popf pop mov imul ss inc mov dec adc jecxz sldt pushf add lea stc jmp inc in addr16 mov inc or mov stc pop out ficomp inc mov pop arpl cmp mov push xchg in je sub sub clc mov xlat (bad) mov mov push imull test movsl xchg push ret outsl sub sbb addb push gs add pop dec mov stos mov inc sub dec and call pusha lea jp pushf lea je pusha or lea xor lea shl sbb mov pushf rol mov bsf movsbw test shr lea lea rcr shl stc mov test call pushf lea je clc add call lea pusha pop mov pop movsbw mov call push lea call jge stc push cmp pushf pushf pusha lea jae bt clc cmp pusha push lea jae pushf cmp jmp call pushf call push jmp pushf movl call call pushl adc pushf pushl push pushf pushl ret imul bt add pusha lea jmp mov jmp jbe xchg cld mov mov push pop cltd loope fnstcw (bad) ret mov jl insl jb cs push (bad) and push lret in dec std (bad) and xor negl pop lahf stos inc cmpsb lods jmp test ffreep mov and daa test mov les lcall enter rolb xchg (bad) mov in stos xchg aam mov and stos insb ret lods hlt mov scas sar mov and mov lea call call lea jge pushf mov push pusha pushl ret leave push sar mov shlb xorl cwtl pusha sub les push ret pop cmp or cmp xlat out sub test dec int inc fmul ret psubb push dec lea push sub lods push adc pop negl pop xlat push data16 push out call sub rcr jnp dec add arpl gs rclb test sbb lds dec outsl arpl inc jb add push loop mov and pushf jmp fcomps xchg sub push enter or fsubrs sbb pop sbb mov inc scas int cmp xchg cmp add push pop loop lds leave jne and xchg scas dec aam sbb xor movsb or scas jmp or sub pop cmpsl insb insb call mov shr dec ror mov adc xor lea pushf pushf lods sets call push inc movb jmp lahf push mov shr lahf mov rol bsf add sub sets sbb lahf push mov inc push sub btr push clc mov aas shr rol shr push setae mov pushf jmp call add inc js je jb arpl jae outsb or jecxz mov hlt push pop ds cmp bound sub stc pop mov mov xor in int3 mov mov mov ror mov mov jo mov fisttpl jo,pt adc inc add mov mov aaa add mov dec and test pop push cmc push clc mov mov decb ds add cmp scas sub popa fldcw popf ja sbb scas xor pop call cmp aaa lods (bad) mov mov enter and sub mov movsb iret xchg sub and pop inc xor inc cmpsl xor iret mov (bad) sbb outsb mov inc inc (bad) xor shrl (bad) lret adc sbb loopne jp in push les loop lea jg or jmp cmpb pusha call dec call or stos repz adc ja add cmpsb inc out and sub mov aad sub mov imul and xor cli ror push aad xchg xchg (bad) mov or sbb (bad) mov pop cwtl pop fstpl bound imul daa push mov mov jmp sub xchg orb or sbb loopne pop cmpsl out pop pop popl or (bad) call cwtl push loopne mov dec sbb mov inc adc stos repz or push and pop pushf shrb sub rcrb push xor cs mov (bad) mov jl loopne adc push cli inc xor jecxz fdivrl lods sub outsb jp sub lahf in add movsl out xor js add in dec lock xchg adc pop testl push ret mov test lcall std pop mov jle cmp push das cli mov add jmp xchg out out out mov lock jmp mov inc test xor or sbbl (bad) pop push (bad) cmc (bad) xor sub sbb stos inc out and ret je xor jg ss jge add (bad) mov cmpsl adc mov not pushf mov pushl jmp lret outsl (bad) mov push and jg xchg pop cmpsl out rolb pop cmp dec cmp in mov mov iret cwtl or bound int int movl push adc ss xchg mov lods adc add jb mov xor (bad) xor enter iret outsb test jle push sub or mov push lcall fucomip pop gs into mov jo push stc (bad) lcall dec out mov or mov inc adc ficomp mov add xor fsubrp cmpsb push sbb ss and adc pop clc popa loop jbe cmpsb (bad) mov call incl push das cmc int3 movsl dec jmp call dec dec outsb rolb sti cmp fwait mov test xchg sti rolb in ja inc or fnstsw out mov fldenv outsl les cld iret xchg mov popa es cmpsb xor mov adc orb cmp jmp fcomps (bad) sub ljmp ja and sub sarb cmp test mov (bad) (bad) xor pusha and outsl xor push jnp lret mov outsl mov xchg pop movsl loopne mov inc xor ret stc orl mov cmp push lahf dec lock (bad) pop into xchg je push mov pop jge rcrb jl inc and sub or (bad) jmp dec push jno xchg xor popa in fwait mov (bad) (bad) cmp push cwtl test dec adc pop xor inc push loope cmp xchg pop hlt pop in mov std inc mov push arpl insb std inc aad mov int sarb dec sbb xor mov xor pop addl sub cmp bt add push push lea jmp push lock std std mov xchg xorb xor in and pushf mov pop ds cmc out pushf pop jge mov dec ret aam pop lds call lcall xchg push and popf add int3 movsb inc inc aad in xchg push (bad) mov cmp mov sub (bad) pop or pushf adc inc cmp movl jmp sub and cmp sub lret cmpsl inc fsubp popa fld push jg or push sti mov pop int3 stos mov lret insb call or mov scas addr16 adc and (bad) in (bad) sub jne outsb mov sub xor orl push pop sti add fs mov ja mov ljmp jo jl cwtl inc test (bad) fst inc inc movsl xor cmp adc inc mul inc enter (bad) repz cmc cltd pushl pusha pushf inc rcr not xchg neg pop mov dec mov movw cmc cmp bt mov movzbw shld pushf mov test pushl test pushf sub call or test rorb repnz stos pop mov sub shrb cmp out sub shrb add cltd in outsl mov mov mov push mov and xor mov mov pushf push movb push pushl ret push mov imul pushf add pusha mov lea jmp xchg mov mov mov stos jl (bad) fldenv cmpsb cmpsl adc xor punpckhbw xor in adc call inc jne and rcrl and add insl out mov push aad ficompl test test xlat jg add dec xchg xlat cltd aaa cmovp ja je xchg xchg and pop loopne add (bad) xchg add mov pop mov stc adc mov mov not jmp xchg and jmp mov andl mov mov aad xor lahf pop (bad) push and and mov leave sahf bound add jae ret cmpsb sub jecxz mov xor cmc pop pop sub movb and je nop scas xlat mov or iret addr16 mov push mov movsb xorl or mov xchg loop xchg out mov sub mov sbb and scas dec add sub dec mov clc shr call stos icebp push test dec inc jbe push mov stos or scas mov (bad) movsl aad scas xlat ss jbe pop pop mov dec (bad) mov mov outsb pop cmc loop xchg dec dec push dec push or into ljmp aad xchg fadds ljmp pop xchg push jbe shrl push sub mov es push rcll inc jle push or sarb (bad) xor cs imul std push jl jecxz pop (bad) pushf stos xchg dec dec or lahf mov xchg jno loop xor mov cmp mov push mov mov pop sarl dec fdivr push push or (bad) push mov fistl jbe jle push fucomip xchg dec fsubl je push xchg push test pop fldcw jo xor pop imul pop fstl inc sbb movsl jg jp aas mov dec mov imul xor mov jne rolb pop test xlat adc mov jae stos adc lahf mov es cwtl or sub (bad) xor adc xor scas imul inc sub add adc cmp orl dec push aad push pop shlb (bad) (bad) pop arpl (bad) sbb test xor mov fcoms and rcrl dec inc push scas lcall push scas pop adc or test (bad) outsb lods pop stos mov xor data16 pop sub xor mov cwtl mov mov ret xchg fcoms mov pop fcmovbe ret add pop push mov into call dec sub cmpsb ja jns adc (bad) sbb and jo (bad) jno adc adc mov or cmp cltd add cmp data16 ret das nop cmp jl pushf xchg and ret sbb aad push jb and jg movsb test inc pop dec imulb add popa popa lea mov push push push lahf (bad) mov or or fiaddl cmp enter mov inc adc cltd sarb push mov push lods scas push fcmovu cwtl mov cmp or cmp xor mov push xor daa int3 pop ret js push xor rolb int out mov xlat sar xchg outsl fistl push sti insl add push push cld fstp (bad) dec cmp jp jo push data16 mov insl gs add sub mov dec aam in fcompl adc mov inc scas pop (bad) xchg pop out movsb jb in jae fnstenv dec sub decl mov ficoml or xor addr16 lcall push push xor mov cmpsl dec test jg jp into lahf xor adc test test dec mov push adc sub jnp dec mov repnz push jmp jne add sbb pop and sahf jo pop cmp mov pusha (bad) fwait adc fidivl or lock mov jecxz adc jae into dec inc adc push inc pop jns sub inc es jp orl cmp inc pushf (bad) dec pop fistp imul (bad) jb mov pop xchg ret xchg arpl aam pop ljmp inc pop xchg mov sarb data16 inc outsb mov fwait scas jne test dec xchg inc jp imul bound sub lret repnz jo push (bad) in mov fcmovbe fwait mov lcall cltd pop pop fidivr fisttpl pop xor fstps dec gs or dec stos push jbe inc les push lahf rol inc pop sub jbe inc out shlb push xor jne sarb jbe int3 xchg rcrl lahf mov dec cmc fimull dec fisttp push loop das rorl movsl and mov (bad) push adc xor addr16 add jle jns mov xchg sbb add push loopne movsl lds lret or test lcall cwtl pop shlb (bad) mov pushl loop jmp arpl mov dec mov movsb xchg int xor pushf mov inc stos inc sub sub sahf xor xchg mov je mov jbe push xor jmp jbe call add dec dec (bad) jp mov pop push in mov iret xchg xor adc std mov not imul mov rolb mov jb mov rcrb aam jnp or aas pop mov pop mov inc fmulp push notl jl push cld adc cld push xchg les push lods dec je mov lcall or inc jmp xchg outsl xrelease daa divb dec mov out adc mov cmp push add dec push gs mov xchg mov inc jnp (bad) mov sub xchg pop or notl outsb push mov mov sbb jae out jmp lds jo jl aad (bad) pop (bad) stos stos shll jmp addr16 mov mov rcrb lret into bound outsb add mov popf dec imulb add xchg or insb (bad) call std notb fs outsb iret xchg fsubp pop dec add arpl hlt adc and sbb imul and push push rclb inc or push inc aad andb add inc loop jbe jmp pop mov test cmp roll jp cmp std add push fstps (bad) lahf add pop cli add mov jp test xchg push int3 sbb test and push pop adc sub xor xchg mull (bad) loopne repz (bad) inc dec adc lahf les leave pop xor shrb sub iret pop ret pop ss enter mov mov inc mov push fbstp xor cmc push sub lds pop pop mov stos mov ret push xchg sbb sub in push dec (bad) mov iret or sub mov pop xor mov hlt pushf ja pop jp or pop jno loop inc jp fdivrs ljmp popf add push fisttpl (bad) mov cmc nop mov movsl fbstp ret rcrb outsb aas adc popa sahf jecxz pop aam pop add nop and aas ret std shlb mov test test jle jnp inc les push sub push jecxz fs cli sbb pop rcll scas xor pop cmc xchg xchg push push jmp push outsb lahf mov (bad) sbb mov insl cwtl into outsl test cmpsb (bad) sti (bad) push fstps mov sub insl dec dec aam in inc or cmp xor subl add xchg je push lahf xor nop inc fdiv fidivrl jns jo push cmp clc fld push adc add shll push sarb mov and mov jno jne pop lret cltd in lahf and bound cmp aas push mov sahf mov rorb enter out ret pop ds sub lret pusha imul stos scas sarb dec lcall push stos ss push add or stc adcl mov pop movsl push mov pop negb aad sbb push push pop iret pop orl sbb ja xor loope sbb pop jne and pop pop packsswb jmp xor arpl and add (bad) (bad) dec mov mov inc xor push outsb stos mov jb jecxz into sub or dec ds sarb aas xorb jbe out lcall or ret dec jp mov movsl fidivrl xor (bad) lahf pop pop into adc icebp or mov dec mov pop sahf sbb lret gs mov mov mov xchg dec pop sub test lahf cmp test sbb rep into xor push mov jo and mov iret mov pop push ss adc cmp cltd data16 push jmp mov out adc adc pand aas cmp pop addr16 mov imul inc adcl clc cmpsl test adc mov call push lahf xor mov mov fs push mov sti stos aam imul push mov (bad) sbb pop hlt mov inc adcb jge mov jae jp shll xlat inc add jne inc iret add sub push int3 inc inc aam aam sti pop mov (bad) jg jae jp popa ljmp test scas pop cmp mov (bad) lret mov sbb jp std test add les pop mov scas sbb xor sub lahf (bad) scas mov sarl pop jg stc lods lret inc pop nop les bound fcoms int3 fstpl dec adc xchg test scas add outsb inc addb pop iret sub push mov fdivl mov jmp push jmp lret mov in sbb mov aad imul jnp mov mov push inc add adc push push xor cli aas dec dec aas int3 arpl cmovo xchg dec repz mov outsl mov xlat hlt jl and pop std inc push pop stos xor or int3 mov pop pop mov das mov cmpsb cmpsb test dec jb in or inc inc push in movsl sub cwtl fsubl push pop scas das mov lock mov nop (bad) je inc mov xchg addr16 mov (bad) add dec cwtl and push push movsl jbe ret sti roll flds adc xor inc push out push mov rcrb jbe push aas (bad) dec xor push test arpl pop arpl outsb push int3 aas lret ljmp aam test into in adc (bad) xor pop pop les pop xor xchg xor in fild pop lds mov cli pushf push mov out or dec xchg popl sbb movsb pop or push mov std test jae push pushf push xchg push adc or aaa mov xor (bad) sub mov adc push mov dec adc pop dec into mov sbb out and gs xchg jo test outsl pop bound dec aam test push mov (bad) lock and jecxz xchg loop sti popa ret inc inc mov stos je jno nop sub mov mov or sbb xchg sbb ror (bad) pop test pop push daa xchg cmp cmp movsb call jp sbb push arpl call movsb jnp xchg outsb push test push je ja pop pop xor lods in rcr mov sbb lahf (bad) stos xchg sub add mov dec bound int3 orl xor scas inc je imul pop out addl jl sbb or mov push outsl ffree add pop cwtl std adc lcall popf mov mov push lock mov xchg repnz add or idiv flds and and (bad) stos bound mov sbb sbbl xor in jp adc mov sub call imull scas jg jle adc sbb test add xchg mov jo cmpsb sbb jp push mov xchg mov ss add add ja jl test mov cltd xor jb or dec pop test fisttpll (bad) in in and sub cwtl xlat adc mov test mov mov lret push xchg jmp movsb dec les push in dec and out xchg pop stos sub inc push (bad) inc push xchg pop push push pop jae sub dec aaa sub or push cwtl dec push and in push iret inc push lret call push stos inc push adc mov adc pop imul pop aad inc rcll int3 xchg inc push dec movsb lds xor inc mov fcoml jge inc rclb dec pop jb cmp (bad) pop ss push dec dec jge pop push lcall shrl dec idivb add dec mov add jnp inc loop mov out (bad) or fcoms loop (bad) inc adc jbe sub bound pop (bad) or aas inc mov or ret push add xchg ret xor sbb repnz adc idivb push add cs (bad) (bad) jae pop sub add ret and repz pop cmp dec mov push or (bad) push es lods sbb inc xor xor loop (bad) pop jb jbe (bad) push mov cmpsb pop outsl push jnp push stos jbe jae cmp xor pop push pop adc fsubrl sarb lret dec lahf pop inc divb je mov cmpsb jno je cs int jb (bad) push ret mov repnz rcrb adc jae push and dec aas or dec pop jo cmp mov jo jae dec cmp fiaddl xchg adc bound and mov or dec lahf sub mov pop cmpsb sub mov cltd scas data16 mov fldcw sti and lahf mov mov mov outsl (bad) dec popa adc sbb ret pop popa loop bound jg xchg push pop sti es mov jae push outsl or push mov xchg orb push sub mov ret fwait add push ffreep loop xchg mov inc mov mov iret js jo out add aas push adc mov dec dec shrb test dec in dec jl mov out cltd sbb cmp xor mov fisttpll push imul mov iret sbb cwtl (bad) stc aad xchg (bad) mov mov bound scas scas mov fnstcw test sarl jnp rcrl push jp sub pop jns mov mov add and loop xchg push push test sbb js cmp xor lahf xor (bad) enter adc add xlat or add or sub (bad) hlt jmp lret mov inc mov mov in nop xor (bad) xchg or outsl cmp jne data16 pop ljmp outsb sbb mov jge push jb inc adc dec add xor dec (bad) clc mov pop mov inc add xchg add inc inc (bad) sti dec fildl stos jmp testb ret and mov push mov xor cmp or inc add rcrb fwait loop sub insb pop inc test add int or fistl adc or les inc push jae nop outsb aad xchg inc mov lds test add out std pop xor in into lea icebp push cmp stos fadd insl out test outsl mov mov into adc push sub sbb xor popf fs inc stos shll jle xchg xor (bad) in shrb mov push xchg mov pop push add mov lahf ret mov mov mov std (bad) mov sub xchg pop sub pop cmpsb push pop dec rol or push adc bound ds inc mov sub jns xor jmp mov push or sub insb adc gs fidivl adc and ds jle jb jecxz pop ljmp pop lahf out pop push mov and (bad) (bad) idivl movsb pop std (bad) arpl or dec push inc dec repz mov aam xor or add xorl and data16 or (bad) out adc xlat cltd push lock sbb push dec adc cmpsl dec aas push push mov adc jecxz stos jge mov (bad) mov cwtl fidivl push and xchg xor xchg lea ljmp mov jb mov rclb test hlt test adc pusha jle (bad) mov test ljmp loope xor adc inc add or outsl xchg sbb mov xor pop xchg or cmp movsl jge scas mov adc pop inc lret jns out js fisub xor enter and push aad sbb (bad) outsl fwait pop sahf fstl test hlt push mov hlt lods mov inc scas mov cld lahf sub xorl push les stc pushf xchg scas (bad) push jmp jnp mov xor jne jle fwait les sbb mov les out mov aaa fisttpll dec mov adc jae into test (bad) xchg push data16 xchg js mov mov insl push scas fmull push or cwtl sbb fwait xchg sub insl popa xorl lcall mov outsb jecxz jge aas sbb push xor mov shll bound repz mov repnz adc into cli lahf lret loope stos sbb xor je sbb jle out inc fcomip or cmp xor shll fbstp ds adc jg push xor ret (bad) xchg incb push mov lahf out push scas (bad) mov out pushf ja add scas or mov xor push push xchg lret push dec mov sub push notl jae or aad add sarl lds sbb mov mov dec cmp jmp iret jb jns mov and ret (bad) stos lret xor mov jle push mov and push aad outsl (bad) sub in push in cwtl mov (bad) mov test lahf inc mov inc or and and cmp (bad) sbb subl add sbb sbb push push or data16 xchg cwtl jl sub push lret insl mov test inc add sahf out sbb (bad) bnd inc mov (bad) std push mov xor sub mov dec nop test pop cli fidiv mov sbb dec jg sbb nop incb dec add push lds in push xchg adc scas or mov push jp mov aas dec nop pop inc lods idivb repnz mov xor popl stos inc jp (bad) mov test aam rcll push jnp adc enter (bad) sbb jl mov and sub lcall xchg mov out xchg dec aam and or fisttpl scas hlt pushf dec mov lea mov imul int3 lods ret mov cmp sub sahf push cmc or adc ja xchg mov ret sbb mov pop push xchg testb add xor push leave ret jp jae jb arpl nop lods js aad xor push fisttpl pop xchg cmp (bad) sbb mov mov pop repz lea faddp pusha dec sbb lret sbb inc push jle xor sub test push ljmp push scas test test xchg out mov and dec into movsl dec stos in mov (bad) xor dec sahf push pop push aad mov sbb daa call inc add adc mov mov sub stos mov xchg (bad) subl pop push into fs jle or pop iret mov or iret pushf mov iret xchg fs insl mov mov arpl into pushf mov stos sub cmc popf jbe inc sbb mov outsl dec push imul dec or or aas cmp jo cwtl dec mov pop iret push push xchg in jp mov and xor pusha xchg adc fimull pop sbb sarl orb enter xchg fs add lods mov adc mov xchg mov movsb mov jp rorl or outsb scas mov out mov mov push scas add xor rolb sbb jl rcll and dec cmp scas cld sbb sarb push je subb loop mov push pushf mov inc lret repz test or nop add and sub sbb inc push mov mov mov jno ret mov lds rcl sbb cmp sub jg add mov sbb ret sbb fwait xor dec data16 dec jle inc mov push fwait xchg add mov cld popf add jb mov imulb cmp xlat xor xlat imul into ret out popa jo (bad) js dec arpl xchg out jno mov cmp sbb mov nop mov bound fsubrl lahf jns lock dec push inc xchg fstl lods out cmp outsb sbb dec dec in sbbb sbb insl inc test hlt inc sahf data16 lea lahf mov flds xor dec rorb dec nop sub insl jo jb lahf push add xchg addl insb negl mov sbb (bad) jo pop fsubrl rorb push sbb out pop push cmpsl arpl loope pop ja pop loop sahf mov movsb mov mov xor repnz sub in adc loope or xchg mov mov ret orl xor fs iret xor jbe dec mov push push push cld xor push xchg cmp adc cltd mov aas add movsl neg sub leave xchg mov bound mov (bad) lret add adc rolb push add mov jo pop add cmc loope add outsl mov cmpsl pop in cmp sub stos jbe push sahf (bad) jno cmp (bad) imul sahf add push xchg and mov mov jmp subl shrb xchg xchg pop lahf xchg insl stos arpl xchg hlt push test add mov mov sub subb jle inc scas push bound mov outsb lock stos push xor rolb scas ljmp ds dec lahf jne pop push lea or mov cmpl shrb xchg jns or ss jnp xor outsl fild mov mov xchg aas jecxz dec mov push fidivrl arpl mov fildl mov pop stos hlt fadd test cwtl sbb outsl xor dec dec push addr16 mov push push add mov mov test adc mov mov pop shrl dec out sub stos idivb ret stos fwait add mov xlat sbb push push jnp test cmpsb (bad) sub fwait mov pusha jbe jp xchg shrl inc mov mov adc add data16 mov pop and stc lds scas lods mov dec sbb dec or mov mov bound inc lock scas sbb es adc stos push rcrb popf scas lods jmp mov xchg push mov push stos add cmpsb jle mov lret (bad) mov lcall jmp mov dec pop imul iret inc (bad) ja je push xchg cmc sbb mov xor ja inc in dec sub fucom push dec mov test pop add bound mov scas push xor hlt mov bnd cmp je pop mov jge mov sub dec xor or inc (bad) add test mov sbb insb addr16 mov lahf bound movsb outsl rcrb push pop js js adc movsl mov pop (bad) out add push mov sub outsl adc ficom mov sbb jae inc shrb ja xchg cwtl mov add and (bad) jae daa pop fmull adc sti push lahf (bad) (bad) (bad) (bad) xor je cmp jno and inc mov or adc (bad) xchg adc cmp data16 sbb stos add cltd push out jbe ficoml add xchg imul xor imul jg pop in xchg (bad) aaa or fsubrs lds sahf jmp cmc xchg xchg sarl xor or jg mov mov fs pushf test rcrb pop popa call test xchg inc mov faddp (bad) popf shll into sub dec mov lds ljmp lods adc push cmp push adc movsl jmp inc and sar (bad) (bad) pop hlt rol add rclb sbb mov push int3 mov aaa or adc outsl in movsb push outsl mov xor loop adc pop push xor dec rclb add add mov enter mov das sbb sarl sbb jae loop into sbb lods push loopne mov sub mov rcrl mov pop xchg out xor cmp push add jmp test sub clc mov pop fs stc cmpsb mov pop popa push and sub push subb test adc pop lock pop (bad) mov stos xchg (bad) pop cld jne (bad) or mov xlat ret jae xchg ret (bad) mov dec pushf repz jmp insl mov stos push dec lss int3 mov push sub loope sahf adc adc pop cwtl enter xlat push add xchg xchg repnz sbb xchg cld pop ss mov adc ror je pop cld push sbb fisttpll (bad) cmp adc in pop mov push icebp ljmp stos int cmp cs sbb (bad) add or or inc pop mov dec popa mov xchg pop (bad) mov call xchg stos repnz pop fldenv push xchg sub leave rcll mov push lahf jno mov cmpsl xchg lock inc sbb mov push xor (bad) pop jmp fcompl fwait or lcall pop jae sub lods and in pop mov xchg ret mov (bad) lahf xchg xor cli adc outsb xchg push int xchg fimull nop xchg in xor popa push scas pop push fimull mov pop xchg sahf xchg adc push mov cli sub cmp bound mov xchg xor xchg (bad) dec mov sub push pop push ret decl outsb rcr xchg jp mov stos pop lahf cmpsb xor (bad) (bad) jne cmp mov adc in stos mov or xor in add xchg mul scas pop xor outsb ret pop mov mov movb dec adc cld imul fidivl mov mov aam aam adc rcll ror fs jp mov inc add jmp mov bound rcl xchg jbe fisttpl pop add stos jle inc lea movsb sbb push sar jb pop sbb les int pop mov xchg clc xchg and sbb sub mov xor push (bad) xchg or das jle iret add loopne js cmp adc jb adc (bad) mov lcall out inc shl jge xor xchg jmp sbb into jg pop ret mov mov or lods push pop sub push sbb adc test sub jmp dec sub data16 jg addr16 or rorl sub mov sbb cmp mov pop mov and push sbb cmpsb fsts mov ss faddl push icebp cmp js jle push push test cwtl (bad) ss xchg push mov pop xchg aad int pop dec je pop inc or aas adcb dec (bad) fstpl jb fisttpll adc in daa popl lods test rorb push nop jbe repnz (bad) std adc mov push push xchg sub jmp pop hlt cmc dec (bad) push jmp mov sbb std mov inc aaa (bad) and movsb in sarb add pop cmp inc dec ret (bad) sbb jge pop dec sbb out push (bad) sub jno mov rclb and pop mov mov add (bad) aam jb adc add inc adc or push push enter mov fldt outsb pop sarl cmpsl aam fdivs fidiv fcmovb or inc fisubr popa cmp xor pusha jnp into insl fnstenv dec ret cli add jecxz jo fdivs movsb xor mov jo mov arpl roll adc add sbb sbb and xor sarb push cmp push or pop cli pop cmp mov push push mov fimull jmp mov and jle dec rorl adc lock sbb popf in jb add jp push cwtl call daa push jo pop repz rclb fiaddl push (bad) pop adc into fcoms push rcrb inc xchg pop xlat fs xchg mov repnz shl inc pop sub push cmc jne sbb xorb push call fisubl adcl out scas dec add scas outsb cmpb add xchg cmpsb dec inc mov sarb pop les ficomp jecxz mov jp xchg mov scas jae (bad) cmp lret test cmp or mov and xor ret ficom imul fisubrl outsb repnz dec inc inc mov movsb repz cmp imul and pop add jg lds test pop and int icebp and in icebp js cmp aam sbb jecxz or add push rcrl inc call rcl das inc push cmp iret dec sbb xchg mov arpl cmp pop xchg pop push into stos daa xchg inc cmp aad aam adc rclb testl sbb mov lds lcall cmpsb dec cmp jo sbb in jmp into or sbb or pushf subl jbe push mov inc int3 aas stos rolb (bad) push or add fcmovu adc mov (bad) rclb rcrb aaa in inc add adc jle ljmp mov mov (bad) repz arpl cmp in push mov imul mov jp clc out pop push jb inc mov inc into call ret scas mov pop loop adc mov mov and inc lret inc in ds add sub test dec repz jno dec inc (bad) pushf lret fwait outsl adc and cmp cmp scas hlt jp jmp dec xlat sub inc mov jmp imul outsl cmpsl push mov sub sbb inc jb hlt lahf pop pop fcompl mov mov xlat sahf icebp test movsl pop scas ds in dec das aas mov xchg sbb arpl pop mov shrl mov add and xor les lret add cmp jp subl mov bound loopne push xchg and push pop add aas sti pop jo push in rolb mov fiaddl pop in push push xchg cli jbe sub ja test mov pop cmp xchg jb mov fildl int mov lret inc leave mov loop aam divb xor in shrl shll out mov (bad) int xlat dec jmp and xor jbe loop mov std je sbb shrb xchg pop and insl adc in xlat mov push leave fs mov sub dec xor sub scas dec pop or cs call inc loop sbb fiaddl inc xor inc mov test fildl and sbb sbb movsb inc outsl add jg sub rol pop push out sbb clc rclb mov and xlat (bad) mov and popl clc lea cmp lods idivl (bad) pop insl pop test pusha sub adc push xchg mov adc out es jp rcrl pusha inc add dec sarl mov iret (bad) cld lds add repnz (bad) adc and ret or pushf (bad) fisttpll icebp punpckhbw ret and push xor dec inc and shll data16 and fadds push leave jns mov (bad) mov cmp dec mov fwait aam add es popf rcrb dec pop mov movsl dec fcom push test out lock cmp pop andb nop iret mov cmp mov shr sub aam push push movsl sub xor mov xchg rcr mov push sub cwtl mov shr mov mov push or lret cmp or dec dec add (bad) loope fisubl fsubl mov por push mov xchg push jmp mov cwtl push in (bad) dec sub add les pop fwait stc add jp cmp hlt (bad) dec ficomp movsb pop pop pop xor mov mov cmp push mov add sbb lret out shl pop jp jmp sub jle movsb jmp mov add dec xchg dec leave xchg jae cmc inc and mov sbb fistpl mov jmp sub fimul pop clc in inc cs insb pop lret or mov movsl aad enter mov mov sub jge pmaxub and in jecxz sub cmc and scas or sbb fisub mov pop pop leave mov outsl or push lret arpl repnz leave cmp xor inc fcompl into std mov adc xlat push pop scas das jne jnp test jmp imul in lea call jmp mov xor aaa xor dec inc push mov cmpsb add dec jp pop inc outsl mov stos mov mov jb inc mov (bad) rol mov or je out mov mov loope inc (bad) cli mov movsb sub mov pop mov ljmp (bad) loopne aam pop adc cmp sbb les jle sarb dec mov bound pop xchg gs call mov js jle xorl out cmp arpl mov rcl fbstp and add pop ret mov inc pop (bad) sti jb fidiv sbb mov pop mov push xor aas ret psllw jge cmpb cmp (bad) push jo mov adc and add and xchg bound inc mov mov int stc xchg jg insl xorl adc and nop rcrb add in or jo andb pop push loopne jno adc cwtl out and sbb adc xchg shll sub fs xor sub push mov sbb adc in mov addr16 mov pop das lret or dec add pop rclb dec push fs jl ret xchg push fstpl aas in icebp or das dec jae push in je sbb outsb add (bad) mov (bad) imul push pop out imulb push add jp clc mov stc mov in or pop jno push (bad) cli out mov jle push push fwait push inc xchg add jle add sbb dec jge loope lds mov sbb pop ljmp sbb adc or inc mov pop sbb into bound push lods sub or mov stos xor fcoms cltd (bad) sti (bad) jp pop incl cmp cmp push dec jl mov test stos mov into in mov je lds xor int3 xchg mov ret xlat dec pop xchg incl aam sbb sarl cmp pop cld xlat fucomi decb shl scas cmc aad mov sbb lret dec shrl xor jmp (bad) or out imul int3 jbe or sub mov repz cmp xor xor dec pushf cltd pop pushf mov adc cmp cmpsb jbe notb xor inc sbb jns or xchg cmp into pmulhw into clc jne or ret inc sbb les push and ds cmp hlt jmp (bad) pushf add loop cld inc fwait incb jns push dec daa cmp ljmp mov mov sub ljmp xchg mov inc push xchg cli xchg or stc idivb stos mov lret addl cltd or fldl outsb xor jbe fldt push (bad) xor mov or jge jg nop dec sbb ror mov ss adc pop (bad) fisub repnz test hlt cwtl pop sub or cmp negb push push xor jb xchg inc xchg inc mov inc mov insl (bad) mov fidivrl (bad) pop inc mov push push mov push inc rol xchg nop jae fst stc push cmpl mov rclb and mov jmp mov pop mov insl add pushl incl test imull pop in push jmp xor repz sbb out sbb bound cmpsb mov adc sbb sub rcrl ljmp shl dec shrl and jmp pop adc fwait arpl aaa jg push repnz sbbl ret loop loop add sbb mov lcall lahf xor sbb jae addl and push nopl ret xor mov cltd lods insl scas inc jb adc out and jno loopne fsubs pop sub add (bad) mov dec sbb in daa popf sub pop insl data16 lahf add pop push or mov sarl ficompl or xchg loope mov mov dec xchg inc outsb into sbb daa ljmp adc mov flds repz lcall adc pop enter (bad) stos push out movsb ja test mov dec es pushf sub add pusha add out xchg mov pop jl sahf pop mov sub or clc mov mov mov dec dec jecxz push push mov adc or jle les xchg outsb xor push in aad aaa xor lods bound mov push lahf lds outsb pop shrl outsl cmp xor mov jmp xor andl push xchg insl jno and pop push inc mov add jno add loop sub dec jle test add cmp iret arpl push inc div into pushf sub inc gs add push fildl cltd (bad) push jae and movsl push call push icebp popa dec sbb (bad) xor mov repz pusha sahf inc arpl jmp lds rcrb cltd jno loop sub jp stos jecxz stos inc aas out mov jbe xor div pop push mov inc sub or and sbb mov or sub shll mov repnz push adc mov into xchg (bad) push jg (bad) cli add jnp pop inc dec icebp push sbb pop lods in mov sahf mov ss ljmp mov repnz rcll inc pop mov rclb popa xchg sti sub test push jae xor roll div pop push sahf xchg xor cli out xchg cmp int push ja sub pop cli push sbb dec pop fistpll push mov mov sub adc inc ljmp fwait inc push mov rcrb adc push inc es test sbb mov data16 jp push push movsb hlt vmwrite outsb push in mov jb mov and ss inc cmp dec mov stos out push and or out sub and adc imul adc fidivl push inc or notb clc and cmc adc insb dec mov xor or lock arpl (bad) push cmc adc ret pop dec dec jmp je push push divb fstpl lret pusha hlt lock in cmc out add xor pop jns xor add push inc outsl xchg outsb jp repz dec add (bad) jae adc adc sub xchg dec xor mov jns and sub push imul pop dec jl jecxz mov or or jo mov jp mov stc cmpsl inc jp jecxz jo inc test push jae rorl jg push jle jecxz lds pop dec jbe xchg aas pushf lret jecxz inc jp mov test sub sahf jbe imul cmc fwait lock aas repnz mov sahf push jo subl adc mov outsb xchg inc out cs xchg or or addr16 push out fldln2 jae pop push push mov adc (bad) pushf sub mov xchg aad xor xchg pop stos rorl adc dec lock push jae sbb sub gs (bad) jae push jge mov jmp pop sbb cmp inc popa rcll pop ret xor inc jmp mov pop mov inc jnp hlt daa xor dec jl mov jp pop mov pop rcrb cmp dec cmp or addr16 popa jne adc xchg xchg imul jle es in addl mov or jbe in cmp (bad) sbb andl rcll ret cmpsb mov pop (bad) pop inc into add push mov (bad) jae sbb outsb shrl sbbl dec xchg jg mov (bad) sbb push mov andl fcmovb or scas loopne push jbe xchg mov xchg xlat bound lret mov repz data16 push or sub int3 cmpsb ljmp jle (bad) repnz into sahf sub inc lds roll ljmp sarl push out pop mov pop xchg or jecxz dec scas lahf cmpsb mov cltd mov aam push cmp das clc jl or lods icebp push push cmp insl cmc mov sbb mov cmp fidivl and xlat dec mov les faddl (bad) outsb pop ret repnz (bad) or jle (bad) stc clc ljmp aam ret pop sbb sub gs adc mov out pop push inc sub popa aaa (bad) test ljmp scas push adc loope jno fcompl es push inc adc icebp or loopne mov add push stos mov int rorl adc or insb push sub push scas push push rcll jne jne stos orl or adc dec pop or fwait xlat pop push sarl jo insb cmpsb ljmp int3 push or and jmp fldcw imul sub mov jg,pt (bad) mov jp xor (bad) or xor pop push subb jnp add sti jbe xchg sbb sbb push inc sahf dec push inc call inc jns cmc sbb pop sub lock jo hlt in push aam fs mov mov or inc jnp pop and jp arpl clc aam cwtl cmp sub dec bound mov ss pop jecxz jg mov mov loopne or or xor sbb lret mov imul stos rcrl jae pop sbb adc pop js jnp lahf jp xor nop adc icebp (bad) ss mov pop repz mov enter stos or ljmp adcl ljmp es lret push pop stos and rol dec popa (bad) mov repnz bound push icebp xchg es (bad) in stos loopne cmp xchg repz push jg jno push out push mov add cmc pop rdpmc cmp in mov cli fisub out pop and cmp push fiaddl pop inc xchg jle inc shll mov cmpl xchg ret adc and inc jl out (bad) inc or or enter push pop inc add and inc ds movsl fdivr add roll sbb inc jne ss faddl sbb das dec inc jb inc jae imul jbe xchg ret jnp sub push pop sbb adc mov inc sub mov fiaddl daa sub pop mov xor push enter adc scas inc inc out inc xchg xor ret fisubl stos ret adc or add inc aad adc jb leave ljmp (bad) scas push mov dec pop and repz stos or mov and push xchg lret pop add into inc cli mov dec pop xchg lock iret mov call mov bound in (bad) mov jno and add mov lcall das aas loop mov cmp scas jae mov cwtl fisub fwait pop add cmpsb out pop stc cld dec sbb je jmp outsl push imul inc (bad) xchg ds (bad) push xchg jp sti and jb ret pusha pop sbb jmp jno into pop outsl jp inc shlb mov xchg cli add cld scas out jae sar addr16 xor sub pop pop aam mov inc mov out stos repz dec dec ljmp dec cli into jnp pop in pop jp xchg rorb aas pop js,pt stos addl mov data16 int stos jae or adc push dec xchg mov out inc pop dec mov xchg mov push and dec or in pop pusha and lods outsb or aad mov mov sub push (bad) push adc andl mov (bad) in mov push inc dec mov or sub mov not xchg xor shll push sub sbb xchg add lds je inc mov mov inc movsb adc (bad) ljmp nop cltd sub dec lcall mov jp adc pop inc ja add adc icebp ljmp xchg ret ret insl ret xchg outsb adcl testb mov inc in in push out pop jns jg or push fcomps cmp push icebp and hlt pop inc mov (bad) cmpsb mov loop (bad) out lret lret xchg and ss lds jne movsb pop subl pop push dec ret push fidivrl mov inc enter fs inc dec (bad) in xchg jns pusha cmp sbb dec fcoms (bad) sbb jbe dec dec add and xchg mov sahf outsb push xchg sbb xor mov add in (bad) decl outsb sbb push imul jmp push xor push ret std cmc sub mov dec xor jbe dec pop jae push repz pop xchg dec sbb dec xchg and js lds push adc in clc sar outsl cli (bad) xor cmp sub xadd pop push ret jne jg subl lds inc fistp push outsb push insb jge push sahf stos or shll std jb sub sub insb jge mov inc inc rclb sub mov inc test cli js mov ss mov js and inc pop push (bad) loope cmpsb dec mov dec sahf sub push ljmp testb pop mov mov mov push adc pop pop mov fisubr inc mov xor incb sarl add or sub xor ja xor data16 sub cmc nop lcall and cmp or dec stos cwtl push sub and insb int stos jb mov add (bad) out lock (bad) or scas xor pop fisub pop jne stos pop cmp imul jp push fistl dec loope popa shrb les inc mov xchg mov aam (bad) sbb add ret imul (bad) jecxz imul into mov sahf sbb (bad) pusha mov xchg nop push scas test inc adc ja je xor mov adc xchg (bad) push pop inc das lds xchg fadds mov mov or mov (bad) inc mov pop and sbb data16 mov inc (bad) push pop dec int3 mov (bad) dec pop pop inc ret in repnz push bound xchg inc ja jnp xor sub add mov sub push push call mov stos (bad) xor jb ljmp xchg lret push lds shlb flds loop jge ds repnz xchg dec ljmp sahf stos mov or jbe and test inc xchg clc mov mov and inc repnz sahf adc inc push dec pop xchg jp cltd daa mov cs popa adc repnz push xchg rcr icebp xchg addr16 push mov sahf sahf jb push int outsb mov repz nop jmp push pop loop mov imul pop loope jle push push jo loopne mov push jecxz mov mov push idiv sti daa (bad) jecxz or inc aad ret xchg mov movsl (bad) mov clc mov push fs bnd inc dec xchg sahf cmpsb xor je jb in daa push push scas pop pushl add push push jae data16 sti and add orl inc or mov jge jb sub adc xor je movsb xor xor mov inc fistl lcall push int ret xor push xchg jbe cmpsb inc movsb lret jne stos jecxz add mov shrl push loopne mov cli fimul mov lea adc data16 inc xchg mov xor les test in (bad) fwait mov repnz idivb add loop lcall imul out xor js adc mov dec dec js xchg out cmp pushf cmp jp dec dec push xor dec lock inc loopne out ds es sbb pop jmp xor or push mov cmpsb insl outsl push add (bad) ss or mov mov adc stc sbb mov pop add dec mov dec push xchg pop arpl mov sub jo ds pop jl sub call pop loope xor int xor daa jnp rcrb jno lcall bound (bad) fdivs mov outsl cmp push je sub pop dec cmp fisubr and scas mov dec push xchg fldl pop push xchg push test (bad) aad jmp sub sbb mov pop add bound jp push cmp mov ss adc sub push inc adc les (bad) mov cld pushf (bad) and push ret les repnz fidivr std inc rclb fistl jne dec xor push pusha xor mov add pop push mov or into mov xor adc inc fcmove mov lret repz (bad) jb js jbe cs xor xchg cmp cwtl data16 ret (bad) enter pop sbb (bad) fistl outsb mov popa in push mov push jo push jae dec inc inc mov mov ja jnp adc aam xchg inc lret sub push sbb push adc std test mov or xchg pop sub jge mov sub (bad) aas rdtsc push xor push mov jno pusha mov push mov aad xlat adc inc adc addr16 pop jne xchg add xor ds xchg jecxz mov mov ret mov sub (bad) mov into jne dec inc xchg sbb outsb push clc pop xchg add jle idivl inc xor sub or mov sub cli fistl xor jnp sub pop xor push bound lret ja jmp sub mov sbb inc mov add jle testb lea insb add mov push push mov inc xchg or mov mov jg push hlt mov fsubl pop inc add push push xchg jae in sub fbld xchg test lret jg fisubrl mov jp add ret dec xchg xorb jae or pop in imulb pushf adc jo clc loop and and rclb pusha clc dec sub xchg cltd fsubrl ljmp insl mov fidivrl or (bad) jle and gs push sub push rcrl out std pop aaa pop fimull ficoml enter mov or mov lods cli bound add jno push pop dec shlb xchg mov imul std inc pop xor and add cwtl pop std push rorb mov in jp xorl mov or sbb or je pop addr16 jp arpl outsb cmpl or xor sub fimull xor add mov mov stos and push scas mov xchg (bad) xor and cmc cmp add xchg mov pop mov shrl data16 pusha dec insl xor push jecxz sbb inc pop and aas mov xor dec adc or fcompl sbb xchg ljmp inc sbb ja (bad) jb cmp ret mov inc push in ja (bad) push xorl sahf ret dec dec inc das sub ja pop jecxz push scas sbb out cmp int3 adc imul jecxz push mov ror inc jecxz shll mov ficoml and imul and roll or in jecxz cltd mov xor mov mov ljmp adc push mov into and push add xor pop data16 push rcll bound xchg fsubrp sub sbb pop push into aaa mov pop rcrb iret dec sub loop sub mov and mov or or mov js ja,pn pop push es inc push xchg les sub mov jp out push adc xor pop push dec std pop xor ret inc push or xchg stos mov imul cli stos xchg and bnd scas cmp sarb mov adc inc daa inc stos pop jbe mov mov jb add add clc outsb pop pop ret mov les leave or pusha mov clc pop xor mov and call xor xchg fisubr and (bad) sub cmp cld repnz repz jge scas adc mov lds jge push rclb mov xchg inc jecxz xor mov jnp gs daa imul pushf jle call mull and add jne lds ret dec bts sbb (bad) push mov call (bad) push jmp imul push popa cmpxchg pop mov mov or cmp (bad) jp sti lcall sub cli inc inc mov pop jns push push sahf jo imul gs mov jmp (bad) jp in cs jbe pop negb cltd jnp ds pop mov dec adc inc mov inc inc int3 lea xlat das movsl bound mov pop gs ret sbb ret stos shll sub jle jecxz js sbb sbb in outsb (bad) mov (bad) data16 (bad) push xchg push dec mov jp jb mov cwtl pop pop ret sbb lods lcall mov lock xchg jo lcall repz xor mov test xchg mov or xchg ljmp pusha add cmp js sahf (bad) std or (bad) sbb out push and ret adc xchg mov test sub sbb dec arpl movsl popa popf test pop jge push ds push stos pop xor push aam inc push mov sahf inc sbb loope add repnz loop inc icebp cs (bad) push and sub mov sub or sbb xor inc and movsl into push mov jo mov mov sbb push and pop int sub sub pop and ljmp inc sub mov and lock push xchg jo bound fidivrl stos mov stos inc push add dec cmc push mov gs cld dec rorb adc bound sbb outsl jne or cmpsb inc out loop mov adc xchg and fsubrs imul pop rorb jp and pop pop xor cmpsb sbb xchg (bad) fiadd outsb inc (bad) pop inc add jnp (bad) dec cmp jl in stos pop orb jne lret lret mov xor in adc dec xchg outsl xchg dec nop stos push jae mov jne stos push xchg gs loop lock pop jae out sub xchg cmp pop movsl mov cmp (bad) mov xor into pop stos xchg or fcoml into pop pop and enter mov scas add jno jns push jecxz pop pop stc nop jle ds push out stos xor push fnsave mov cwtl ja adc inc cli sub mov sbb js jmp mov popa dec out shrl pop sub nop dec dec adc mov mov (bad) dec and pop push jbe fs rcll cmp fcoml adc and movsl nop inc inc idivb push mov dec cltd adc inc shlb fsubp mov jle in mov or sbb loope hlt in jb push dec xchg inc aas lret xchg mov mov cli inc lret push pop je jle movsl push jg fildl mov decb xchg and loopne out nop repnz adc push xor jns repnz inc js jp pop (bad) jae adc (bad) push inc mov adc bound inc sbb push aad gs add adc stos sbb (bad) sub ret bound xchg jecxz adc stos (bad) push jo outsl adc or xor xchg and movsb les sbb int pop xlat xorb outsb imul test loop xchg xor mov jae cwtl stos mov ss mov (bad) xchg int3 mov push pusha mov fidivrl in fistpl fisttpll ficompl add dec outsb fwait push out jnp jl jp dec dec jle das out inc cmc js jnp insb inc stos shrb xchg jge rclb mov nop mov scas adc clc mov es jns (bad) cli bnd mov adc and dec mov jle ljmp push enter jb xchg jbe loopne ret outsb xor xchg icebp bound pop scas cs inc lea push pop inc push xchg fstl jb adc and pop xchg push fidivr in inc push (bad) jp push jbe xor mov cli inc pop lahf out outsb jno mov out loopne xor jns ffreep es js ljmp (bad) je sub adc dec jmp or mov jp lods jl inc pop (bad) jbe fimul mov pop outsb sahf pop decl add add mov sbbl lret popf dec outsb and sbbl sahf push shr sub jae outsl pop mov das mov cmp (bad) repz sahf jp cmp inc sub fisub push into cld cmpsl (bad) pop add in mov adc cmpl in inc push push push xorl movsb pop inc shrl out mov push lret jbe mov (bad) mov fdivp in push push jbe outsl mov test cmp call sbb dec mov push pop sbb outsb pop cmp push add dec inc inc push inc push je out pop mov mov aas mov insl into bound or ss and ret cmp je fisub mov jmp scas or or repz mov adc xchg push inc cltd xchg jp scas ret push xlat (bad) fprem1 out push mov jp aam sbb insl in sahf inc push sbb push andl adc aas jns adc mov dec ljmp mov jno xchg cmp scas inc mov add mov sbb sub call sbb test push and rclb xchg mov xor mov data16 loopne or sub lret test or jns push mov push mov push xor hlt in jl push into or sar aad jle xchg scas push ljmp jl push add int3 (bad) outsb in dec in aam shlb pop mov popa rcll push out cs ret xor push mov push add ljmp jl jae pop xchg and (bad) inc loope fisubr cmp dec punpckhdq mov and xchg lret inc mov push repz pop cmp adc les mov sub cmpsl (bad) out mov mov ficompl xchg int testb mov xchg enter cmc out pop pop pop inc push sub lret xor push adc or into push mov mov (bad) adc je ret test mov (bad) lods push mov js fdivrl jae pop jecxz jnp stos push rcll push pop cld jge adc nop (bad) push lods sbb add popf pop inc loop movsl ficomp rcll fwait imul push pop outsb xchg xchg mov mov (bad) fwait inc stos xor frstor or lcall shrl push push inc aaa adc bound cmpsb rcll mov adc js add fcoms dec push sbb test adc aas jae xchg (bad) mov push or (bad) xchg sub stos sahf xchg inc push sti ljmp ljmp adc bound inc sub mov push jp (bad) push ret rolb lock push popf nop hlt mov lret or or (bad) xor push dec mov push lahf (bad) fcom mov cmp std adc insl out (bad) xor roll sub repz pop enter test mov add push or imul scas xchg and mov mov xchg or mov or jle aas inc (bad) in push xchg aas (bad) rcl push cmp xchg outsl (bad) ret mov xchg push mov fdivs test sub push les lds out dec adc pop xchg jb sub sarl mov sbb jp sbb les adc mov jbe cltd fisub push xchg ss pop jbe mov inc cmpl out mov or fmul inc pop push pop call pop sub lahf (bad) pop sahf jno (bad) (bad) ljmp mov push pushf lret cwtl jg mov mov (bad) les adc (bad) push or jp adc jno sub loope push in pop aad xchg mov fild sarb mov test stos push sub gs inc and inc repnz xor mov mov push inc movsb push fistpll mov mov mov push pop cmpsb scas nop mov and pusha movsl out push in ljmp cltd inc lahf mov mov (bad) pusha sub or enter ja sbb push jmp mov mov js add xor push pop sbb cmp cmc xchg push aam cs ljmp push sub xchg jne ret bound rorb (bad) stos inc lcall add adc xchg ljmp add ss scas push cltd mov push inc dec sub popf push outsl inc ds dec push int3 in mov inc mov pop mov mov cs add std sbb stos sahf mov hlt sub data16 call inc ljmp mov lds push mov bnd pop inc bnd add retw ret push add pop pop pop pop sub cmp jl mov cli cli pop jno push xor and movsb xor inc (bad) fnop inc popf xchg gs stos mov push cmp mov outsb ljmp sbbl sahf shlb xorl inc shl sub push add sbb or ss lcall dec ds push dec add or in inc add push jo mov jp sub mov out push and push mov les mov pop xor sar push inc add js stos jnp lock in or lret in mov cmc jl lea ret pop out stc or or inc clc or das fscale adc sub jecxz push test cmpsb test imul aaa into xor add inc add xor fdiv inc mov stos cs inc pop ret mov cmp jecxz std pop aad shll push lock xchg jb sbb xor fdivrl xor lret cmc subl stos and jno (bad) test push sbb push dec cs hlt mov xor pop sub dec lret fcmove sbb add (bad) cmpl pop fs jbe scas push stos lret xor stos dec push mov sub clc (bad) jp push into test stos pusha aaa out jne fwait jecxz pop adc fisttpl or push jnp dec ja pop fldcw aad adc movb mov mov push lret (bad) or stos mov scas (bad) pop cmp mov add ds mov cld pusha lcall loop or outsl inc ljmp sub mov push or fs pop mov xchg clc imulb lods hlt dec mov sti je mov stos (bad) push adc stos push rclb xchg cmpsb xor (bad) jmp xchg in or pop add ljmp push mov (bad) sahf aas stos pop hlt push jae aad negl ds push ljmp fadds xor sub sahf stos dec push repz push mov je mov push cmp scas ljmp data16 fisubl jbe insb and jno push pop stos xchg adc test lock mov push mov xor add leave gs lret aam outsb out fcoms push push xor add jle push stos dec sub push xchg inc inc mov xor pop cmp ret test push adc (bad) jbe mov fsts mov sarl hlt stos jge or mov or gs push cmc popa or xor pop push icebp sarl out dec inc mov in arpl push sub push mov enter dec lahf in mov icebp xchg sub mov push mov jp fldenv lahf dec insl pusha arpl stos inc add cmc ss icebp push (bad) lods inc ljmp stos push sets xchg lcall push mov push fcmovu stos push fs push add lock jle divl and pop outsb cmpsl (bad) (bad) loopew cmp xchg mov int mov bound cli push cmp test arpl mov stos adc jl cwtl xchg orl jg add movsl push mov mov bound rcrl fisubrl fs movsb js or mov into adc and stos dec mov mov and push sti dec jbe shrl jno mov pslld push aam imul outsb cmpsb or es lea jg push fdiv lods fndisi(8087 mov ljmp xor dec mov jbe push add aaa out xchg stos jns sbb (bad) push fbstp or sub icebp push test in pop adc jmp scas dec mov aaa test sub cli cmp stos addl add stos inc pop lods dec adc cltd js outsl inc push aad call imul adc rorl lock mov pop aas enter icebp stos xchg push int3 add inc scas (bad) nop insb ss lret es leave push ljmp pushf sbb fwait mov mov shr rorl add mov fsubrl stos test and (bad) ficomp int3 mov xor mov xchg inc sbb mov (bad) cmp int (bad) dec dec adc inc stos pop xor nop adc mov lret cmc and sahf stos add mov jge fwait dec loopne (bad) push sub ret icebp rcl in xor inc fs cli orb pop xchg scas mov sbb rol out fiaddl jecxz dec dec jae push aas xor stos push jbe push ja and mov popa ljmp hlt imul stos (bad) lods (bad) (bad) stos mov jl adc add test sub aas (bad) pop inc sub cld sti insb movsb stos add stos leave loop out xor inc aad mov outsl push mov je add inc cli xor pop mov add ljmp push data16 into outsl inc ret ljmp sub stos xor ret or stos adc mov enter fwait mov ljmp loopne push repz test stos mov shll sahf stos ret pop push loop sub fs push in xchg pop daa pop xor lret and mulb push imul pushf pusha je out out aam pop inc cmp loopne pop xchg stos dec jmp sbb imul and jle orb lods push push xchg es mov mov push int3 fcoml fist mov sarl stos dec inc mov out mov (bad) xchg and inc inc out js adc mov adc cmp dec dec pop inc push outsl and (bad) addb sub dec pop push sbb aam flds jo or lcall nop cmp jge pop sub dec push dec ljmp andl in jb mov sbb push jne cli xor pusha push push jle das dec pop in adc push sub pop xlat ror mov sub stos (bad) fsub inc xchg cmpsl add add add xchg cli sub xchg cli imul ss inc add mov push sub mov out lahf add lret mov imulb movsl sub lahf lods jg insb mov sbb push popf or jmp inc push sbb cmp test stos or movsb cli mov cmp loope push ljmp adc push repz xor stos lea mov jle in push mov mov pop mov out push hlt fs stos or mov jns jmp setp mov jp stos or outsb jle jae dec stos mov fistl pop ret ljmp add xor sbb push (bad) dec out add cmp stos leave cmp adc stos imul mov inc push mov jecxz fmul stos add ret add cmpsl push int3 push mov test add loop ja jmp bound hlt adc mov int jl jp fdiv js dec mov jo sub cmpsb sub jmp lret adc scas mov jo gs sbb xchg jbe cmpl test push lret dec outsl add stos call mov stos sar sub cmp mov sbb and cmp imulb (bad) adcl jns xchg repnz add jnp sbb and std stos pop xchg xor scas mov mov shrl push adc mov stos std and mov insb push sub jnp fs jo mov stos rclb dec and dec xchg aad int hlt stos jmp adc aam jmp sub jno lods addr16 add test mov stos aas pusha pextrw xchg mov mov sub pop (bad) xor adc pushf xor arpl stos jnp outsb push popf sbb stos adc (bad) out out sub stos mov sub popf push iret xor inc push ljmp mov aad mov (bad) aaa daa sbb or pop les jp ljmp pop mov push repnz and jae repz cld stos dec or loop push clc outsl (bad) fincstp rolb adc fisub pop cmpsb fdiv or jecxz jo addr16 pop test int inc jns pop popf pop call dec adc mov mov mov push xor jg push stos xchg xchg hlt adc icebp xor cmpsb cwtl xchg (bad) fwait pop or call jmp ljmp std mov in negb push sbb lret xor out inc ret andl adc add mulb push stos int3 je enter push pop mov repnz mov jnp pop stos leave test cs and and (bad) cwtl dec jno cmp enter mov adc sub push (bad) sti incl push leave push and loop nop out into sub push ljmp int3 mov scas dec cmp mov mov movl lods sbb ficom inc jle mov sbb push dec sub sti std or (bad) mov or mov mov mov xchg aad rolb or aam jb sub push nop fmull (bad) jno cwtl push pusha xor movsl push inc roll or or or bound push xor cld leave push mov dec or (bad) and and hlt fstl inc add cwtl push pop xor and je mov inc dec roll js stos inc lret sbb pop jp mov test add mov decl into movsl decb out pop mov aad and jo clc jmp mov mov mov nop inc add lods ret cmp xor xlat aad mov out mov movsl dec inc mov gs test pop push xor ss cmc imul mov lods dec cld push push icebp xchg pop les pop std jle xlat sbb jmp inc into or mov (bad) push dec (bad) push add jno (bad) pop fs pop aad add out fldt lret int3 sub (bad) xor push mov cmp in inc arpl nop push or cmc lods inc inc mov mov scas xchg dec adc call xchg sbb or ret adc pop xchg (bad) ret mov mov ss push pop inc jns lods inc jno scas shrb mov ja call iret inc insb cmc xor imul inc mov mov hlt mov cmp ret sbb call je jns push jmp jl pop mov pusha (bad) pop sbb xlat popw push inc (bad) loop mov rorl sub repnz test ficomp inc call loopne push stos sub addr16 out aam js jmp out ja xor inc mov xlat sbb fisttpl add repz cs imul jp pusha out push sub in jecxz push data16 stos push cmp jle leave mov mov adc jmp jecxz (bad) jo loop jno loopne mov jbe (bad) aas xchg or or xor sbb or inc fldt popf mov push aam fs popa bound xor xchg mov hlt add dec ljmp push fs inc cltd rcl fsts push push test jl xchg jl rcrb sub xchg mov call dec fstpt enter mov aaa popf add xchg or mov loope fs je fcmove xchg (bad) das mov xchg mov sarb ret mov mov (bad) mov into out xchg cs sub pop fstpt xlat jle inc (bad) adc mov dec or fwait bound mov ret pop xor xchg push mov sbb fistpl inc roll pop mov imul stos xlat fist mov ret xor mov (bad) shr jl or push ljmpw test out cmp xor imul inc outsl or aaa in cmpl mov adc roll sahf cld fbstp sbb add or mov (bad) shlb push into dec bound fsubrs mov dec cmpsl dec jecxz in pop call or dec inc xor pusha or xor stc mov ja xor jl clc push (bad) mov pusha pop pop xchg xor inc add lock lcall pop push inc xlat les sub popf jbe vhsubpd mov hlt push rcrl in xchg mov sbb add lds jnp inc pop mov lea and jnp add mov stc jb inc sub decb fisttp mov divl xor into adc adc aaa pop js popf add or shlb mov repnz mov repnz push cmpsl push fwait push push dec sti cmpsb arpl mov jge pop mov xchg mov fnstsw loop (bad) (bad) pop aam xor aam pop or pop push jecxz lahf mov sbb ss push jge jle out bound dec hlt mov pop sbb inc pop jno into mov dec (bad) ficoml rorl xchg adc push out dec into mov and push leave out lock jecxz xor and repnz insb loop sbb scas movsb push mov leave test and dec xor push cwtl mov or mov outsl mov inc sub ljmp xchg push sub nop ja push xchg add fadd adc jmp into sbb pop mov and test out dec por sahf iret mov pop out les mov mov jbe ds dec test fs adc jmp xchg (bad) dec ficom in fstpt sbb xlat jp stos sub popa dec mov jp lods mov ret and mov mov or aad cmp jp roll push iret in stos imul jns cmp scas jno mov fistpl sahf outsl data16 add aam in xor out pop outsl mov mov mov or xchg lret (bad) jo mov std xchg pop sbb adc data16 test pushf sub or or mov sarl (bad) inc popa lods cs xchg cmp sbb int3 sbb stc imull rol cld mov insl aad jne (bad) rolb mov xchg call fildl push (bad) je mov scas pop xchg sbb cmpsb in dec (bad) jmp out mov jl dec popf lea aaa je or outsl mov (bad) test jnp pop mov inc stc rcrl lret pop jmp repnz or adc push mov incl ds fisttp mov call (bad) frstor add lds stos roll mov pushl or add push loop or hlt push xor es stos fsubl into push jp pushf jmp push inc outsl push push dec xor clc dec lret adc mov enter jmp mov inc arpl negb jle mov sbb mov and hlt lret xchg in pop xor jmp addr16 fs mov mov in es pop dec xor (bad) fnsave sub push mov std mov mov adc ja sbb ljmp add cmp lret and fdivr lock xchg inc int dec fiaddl pop insl es dec loop fs incb or lret out outsl scas repnz roll push lods pop cmp mov push cmpsl lods pop mov stos adc pop or fs or out in dec rcr pop mov (bad) sar orl lea faddl add mov cmp mov lret jb mov mov out nop pop add xchg dec sbbl cmpsb rorl sti jl pop test push xchg mov and xor jle sub scas enter inc icebp fstpt fwait smsw jo mov mov cltd push lods mov mov adcl repnz ja dec sbb gs mov xor mov jne sbb iret mov je inc ds push jb dec sarb lcall dec cs insb in push push leave (bad) mov fistl fidivr in pop data16 outsb push testl jmp outsl and mov lret sbb or das (bad) scas push xor cltd (bad) mov les sbb jmp les data16 shlb and sti rcll inc sbb pushf push push sti mov adc push idivl aam mov xor daa mov imul stos and rcrl jl leave sub outsb adc jecxz and shl sub add fiaddl cmpsb shlb in pop jle push jle in aaa mov lods dec pusha mov std xchg jle int sub aas add les xor mov in fstp inc xor mov (bad) in push xor sbb int3 mov sbb dec sub (bad) (bad) aad pushf mov inc ficomp out in mov jb lods pop arpl xchg test xchg loop or faddl push push mov dec or loopne rorb popf mov cs les fsubrs cmp test lcall or cmp arpl push mov int pushf sbb xchg pop aas jmp repnz ret mov jle nop sbb sbb mov jle mov adc cmp fiaddl mov xor cld imul mov jl das or xchg and push or test std ret fs adc je ja test xor jl ret adc iret aaa ja cmpsl mov call decb adc jnp int3 clc imulb hlt mov pop cmc psrld repz arpl pop xchg xlat repnz ficompl sub add popf (bad) inc ds (bad) hlt movsb and fstps xor sbb pop sub mov and lods lds fiaddl mov sub dec je nop mov jmp jp sbb lret xchg jmp cmp add loop push mov mov test je pop push dec lock hlt push lret int xor xchg cwtl sbb adc sbb (bad) mov add (bad) hlt pop iret ficomp xor adc imul into mov dec or mov sti mov mov rcll pop arpl cmpsb pop push incb test movsl push sbb mov cmc lret sbb mov jns es push xor mov push fcomps adc mov adc lret out inc pop cltd push sub or push sbb push cmpsl pop into push in lahf sahf (bad) pop dec (bad) fisttpl xlat out daa pop fisubl push sbb data16 xchg bound push sar xorb mov sbb (bad) sbb lock mov xchg mov pop std fidiv cld stc adc cmpsb lret into xchg loop arpl in les xchg into sbb push call insb sbb scas movsl adc mov jae adc lret jb inc cmp (bad) mov je pop sbb sbb mov rclb adc repnz add fwait rolb mov std bound aad loop add lcall or mov fcompl mov xchg stos jp test sbb int xchg in ds xor jg adc mov jle jbe fcmovnu outsb ret and shrl inc sbbl in outsl add sbb (bad) cwtl dec pop outsl or xchg mov cmp fiaddl dec cmc push dec or test adc mov ljmp sar in and fcmovu adc jbe lods test dec push dec push jle in push sahf movsb fisub (bad) xor iret ds into mov fildll and sub sub inc (bad) outsl push xor inc outsl or cmpsl mov stos leave xlat rcrl pop sbb loop test cld add rcll outsb jnp add mov outsl stos (bad) (bad) xor mov pop push call push push add ffree push push rorb mov mov push inc mov adc in pop mov sub mov add pusha sub jp pop jae push les decl fimull loop adc jl lods insl rcrl inc in sahf adc adcl xchg mull mov and mov cmp mov inc fidivl neg sbb imul mov js cmpsb pop push jl lret shrl add cwtl and push inc xor inc jb les test (bad) aas add js or insl or jp dec push out push pop mov lods dec int3 outsl stos xor enter mov out xlat push int leave mov in mov cli and jnp mov out push or inc aam in jne leave or ss rcrb fnsave xchg loopne xchg jae mov push bound rolb out pop lock push imul dec push dec sbb dec lods outsb xor std jp mov mov push aas bnd xchg sbb jne jb xchg sbb adc pop int (bad) mov sbb into test mov lret movsb sub popa mulb vucomisd inc mov pop insb adc sbb fwait je add add or clc jg shlb test mov cmp xor mov arpl jecxz mov icebp sbb mov aad cwtl (bad) mov dec insb testb cmp movsl mov scas stos push out dec pop mov sbb (bad) inc add push xlat in mov xor (bad) outsl jle cmp test adc dec mov les inc out lock mov mov mov and test not (bad) mov pop add adc in xor mov ret mov lods mov cmpsb neg mov sub call (bad) loopne push mov fwait mov ret inc pop insb rol cld dec add nop (bad) aam sbb (bad) adc cmp rorl incl jns insb adc jge (bad) push rolb fistp sbb lcall stos aaa xor fstps in push scas call mov jp sub push leave pushf xor popa or or imul loope aam xor mov sub jbe pop aad mov mov adc jno pop ret xor dec sbbb mov dec outsl xchg xchg inc ja into testb jmp xchg xchg or xor xchg mov fstpl pop (bad) aam pop sub and push xchg pop loop inc mov movsb xor or push and dec fs ljmp and ret int xor das add add (bad) outsb push scas insl push mov pusha invd ret cvtdq2ps jge call xor xchg out cmc (bad) pop dec mov or mov mov jp xor (bad) jo sbb les mov sub jns pusha pop mov xchg sbb lcall test jge xor (bad) je push or push insl dec rclb lcall icebp mov mov mov or push push xor sub jbe lret popa sbb lcall in mov mov fbld packssdw jnp das lock pop loope mov loope test sbb and scas xor or fisubl (bad) rclb popa ljmp adc lret int3 mov insl rcr ret mov out pop push push sub mov iret add fisttpl (bad) (bad) rclb iret lret addl inc adc ss push and or fucomi in je jb pop or fstpt notb arpl ja rcl (bad) mov mov sub xlat dec mov pop stc cld lds aas fstpl rcll mov leave inc rolb mov mov jg cli jnp insl push xor sbb lds sbb inc ds movsl jge push (bad) pop fimull pop leave subl mov loopne testb lret sbb repnz int3 lods add mov mov mov push shrb leave fnclex imul movsb lods xchg dec cs sbb cmpsb js decl out arpl sbb lea xchg push cli inc popa mov stos nop xchg xor bound pop xchg xor adc dec fisubl sbb push push fbld adc in push stos or outsb xchg pop pop push sbb push and lcall mov cwtl xlat or lods les stos jle mulb dec xchg loop arpl aam cwtl jno mov insb inc (bad) icebp (bad) or call push push cltd inc and sub mov mov push dec add popf jo icebp push ffree pop popf sahf add mov jnp xorl into aam bound (bad) pop push push or mov mov xchg fwait bound or inc add mov cwtl (bad) imulb mov les out aaa mov push sub jle popf dec ss dec fistp dec push jmp cltd into push push loop imul adc adc bound mov xchg (bad) fisubrl cld push mov movsl stos mov outsb fisttp xchg sarb fisttpll jecxz mov insb push imul jb sbb pop call xlat sub (bad) lcall add test jns jle push dec xor xor rcr adc ret sarb mov pop leave sbb sbb ror xor popf mov mov inc mov pop adc mov pop fadds cltd ja and mov ja pop inc jns xchg mov cmp sbb xchg pop insl inc repnz jge jg mov jle std js sub xchg pop out or jl fsub cwtl push int3 jne ja or xorl andl daa mov jmp lea mov jb inc cmp pop ja neg and or (bad) in inc jle jmp sbb or leave mov xor push icebp jmp adc xchg fistl (bad) xor or mov les out add rolb dec stos xlat ret fs push daa adc pop add outsl mov pop fldt jmp sub popa loopne dec add mov (bad) test (bad) cli movsl ja cmc push xor jmp adc imul (bad) pop aam insb jp lods xor push leave (bad) or ret pop add push pop xor dec adcl dec daa mov ror popa cmp icebp xchg outsl dec ss loopnew stc push hlt dec xor int3 add je or frstor inc push jb js and (bad) jae out mov ret roll pop fnstenv popf sbb mov pop or shlb ja and inc aad mov scas rclb fidivrl arpl push dec sub push repz mov inc imul sub mov mulb loope xor hlt mov (bad) mulb mov xchg xchg das add lret xlat fnstsw jmp (bad) adcb hlt cltd mov inc arpl mov sahf insb push nop std or loop add dec xchg mov cmp shlb push imul add arpl les test mov sub add push leave aas repz ret dec mov (bad) movsb bnd xor sbb jae dec lock dec jo dec push shrb stos push mov cmc push fs or adc mov or jle mov sbb mov (bad) js test xchg jmp sbb xor (bad) clc int adc (bad) sbb or xchg test push nop jl sahf xchg outsl push rorb lods dec bound sbb sub loop sbb dec push cmp mov les push add adc cmp int cmc push inc or xchg aam pop xor sarl add pusha stos out cmpsb xchg (bad) xor es or fwait rcrl arpl push jl xor mov sub fcmovnbe iret push mov pushf mov outsl (bad) fisubrl jb adcl mov mov pop push xor lock fistl lret jbe test pop in mov lret pushf push outsl or loopne jle push stos pop stos mov pop test loopne jnp hlt xor aad out mov insb xchg pop (bad) and fwait push es inc or add stc je fisttpl jbe mov adc and push pop and xor ret cs ror cmp inc xchg fcmovnu push dec stos push add pop pop mov push repnz sbb mov lcall fs fildl jg cld fwait divb pusha adc pop out fisttpl xchg xor gs in jecxz lock enter pop clc in insl xchg dec sbb test inc out xchg sbb out cli mov inc mov loopne js js push jns jg into adc pop pop xchg cli lods leave dec loop jnp add push mov sub cmp lock aas sbb and mov pop adcl lahf mov pop push fisttpl mov push insb cwtl mov pop out test gs jae jbe je inc push xor jmp in movsb inc fcmovbe into mov scas mov cmp shrl lcall or jno sbb dec lret lds mov sub int3 (bad) jecxz xlat inc mov scas push popa cmc mov out rep rcl nop pop enter mov mov fcmove repnz fdivrs gs jmp mov ja sbb insb jno bound ret sbb sub mov inc fisubl movsb push insl pop (bad) mov mov clc ss cli jp repz push (bad) mov pop ja mov pop add xlat aad mov repnz mov inc fidivrl xchg pop push lods inc push jp test sbb ja push sbb rcrl add pop leave inc (bad) ficomp enter push sbb pushf dec pop call jns fcoml mov adc pop or arpl pop das (bad) je xor data16 or push in mov movsb mov (bad) mov fimul nop mov jns les test lret or add ljmp aas rcrb inc mov mov add data16 test xlat push adc in sub les rcl ja add pop mov push das aas push sti and mov xor and (bad) fcomp cmp xor in jl xchg mov fstl popf mov cmc and inc cmc (bad) jo or jae cltd or sti or mov sahf repz mov push or cs mov xchg pop or lahf mov sbb xor mov fnstcw in sub (bad) mov xor mov repnz jno fldl (bad) outsb out push xor testl loopne sbb or (bad) fcomi pop les and xorl adc (bad) fwait (bad) xor xchg es push into mov push fbstp mov je insl fiaddl pop mov mov xchg dec cltd mov adc inc mov sti (bad) pop cmpsl test add outsl stos sbb adc mov or mov lods cli les or cmpsl or fs jmp xchg test dec mov sti xchg scas (bad) mov mov mov leave or mov inc insb lds adc xchg adc (bad) ficoml cwtl dec fcompp jne into jl push pushf mov loope insb jne loope iret jbe pop mov sbb and dec fisubr xor mov mov xor insb or je sbb dec mov xor mov add and mov xchg test push mov fwait sub repz push push (bad) test stos xor xchg (bad) jo out call pushf call mov fidiv push jbe imulb loop (bad) leave std dec pop pop dec adc ret sbb fcmovb lds test add push insl pop lock cmp inc mov (bad) hlt lret mov shr jae loop insb es and aam data16 jo xchg ret pop sub pop mov jge std cld inc sbb dec dec xchg loop mov xchg mov imul popf jbe clc inc push mov (bad) cmp lock push mov rcrl sub icebp enter jmp jns inc xchg mov js fdivr push xor mov mov add sahf inc (bad) ret mov sub adc mov popw fcmove fstp or lods xlat out sbb outsl dec xchg movsb cmpl in xor leave add adc xor dec jb or data16 mov or pop pop aam arpl push in or push cmp adc sbb (bad) ja fisubrl call push imul les add inc lock out adc pop or mov pop (bad) and inc pop add mov loope das scas cmpsl mov or rolb lea ja mov cmc xchg jno inc aam push (bad) lret bound fisttpl pop adc (bad) cmp pop add outsb add push fwait mov loopne insb popf in imul xor test (bad) xchg sub or (bad) push mov (bad) mov int lock stc xchg in push mov shll stos xor aam xchg mov jbe add test repz mov fwait das cmp dec aad mov sbb ret mov lods or dec js stos push ret cmp jb inc inc xor mov loopne jne inc jp mov lods cmp ja repz dec cmc movsl inc fstpt xor or push or inc pop dec push push jecxz fucomi cmc loope add mov mov sub fstpt aam dec adc data16 jnp xorb cwtl ja nop sub std stos ret xchg jl cmc movsb loope fildl cmc and or cli (bad) cmp cmp leave (bad) bound pop std pop and adc rcr inc mov add jmp gs lret xchg jecxz jp add pop fs cli cs sub xor hlt pop push rcrb outsl or xor add push clc sbb xchg mov lret les push lcall push dec (bad) adc xchg inc inc fidivr out push int3 lret stos ljmp fmulp add lds cs hlt into js mov pop (bad) xchg insl push sbb push fcmovnu les mov fild loop clc cmc add xor jo xlat popf inc outsb inc xor (bad) lahf or xor fbld mov fstl pop add lods mov dec push xor xor push ret jp push adc cmc and mov add js pop push sbb mov cmp arpl into loopne push cltd jle es pop mov inc daa in add mov out insb mov mov push jno es int xor arpl (bad) (bad) iret lock dec or dec jo imul arpl insb xchg adc jmp pop adc or (bad) and lcall inc or adc sub int3 les inc ss inc lods sarl ss lods jmp sub jg jnp insl test mov mov xlat jmp rcr lods xor fcoml mov lds mov into loopne pushf int3 and adc int3 pop cmpsb and and dec jge sbb ret cs mov pop loope (bad) or lcall sti mov sahf sub fnop xor js sbb pop jnp aad test jb iret (bad) fisubr sbb xchg in inc pop hlt lds push xchg adc add outsb or adc dec push shrl add bound ficompl adc jns into lret xor das pop test (bad) jmp (bad) pop daa test push xor sub push (bad) sbb or mov mov cmp (bad) sbb mov add dec lcall push mov cmpsb xor js dec lock aas jcxz jae test sbb push out ss fimull or mov pop data16 mov push sbb push scas or mov jno jo or (bad) mov fadd pop js inc sbb jg jo ficompl fs test out pop lret es xchg ljmp pop es add addr16 inc aad push mov mov das xor insb mov (bad) sbb or std jbe fwait (bad) insl fstps mov repnz dec sbb mov test jle push xchg (bad) xchg rcl mov sub rcrb popf ret push fistl ret bnd xlat into lahf adc ja xchg cwtl add imul xchg push sbb push mov (bad) jb pop ss imul lcall enter loopne ret xorl mov dec adc jg fild mov pusha mov (bad) loope ret dec xlat iret sbb inc in mov mov movsb mov push add cmpsb sti loope pop mov jle pop mov movsl push insb lock xor jno xchg outsl cmp sub ja std add jae mov (bad) bound (bad) mov cmp stc and push shl jg call loop jecxz xor out out sbb ret mov xchg lods loopne xor xchg cmp lods sub pop outsl fistl shlb dec pop insl lcall jb inc or and fimull sub lcall fsubs lea arpl xlat enter ficom and jbe sub or leave sahf mov scas in dec fldl hlt into mov pop mov dec xor stc pop mov outsl adc pop jp pop dec out sbb (bad) xor ret and mov xlat push adc insb imulb aam jbe adc daa xchg movsl outsl in (bad) std sub mov xchg jle lret xor sub inc jecxz test popl push mov push addr16 dec (bad) push fcmovbe lret imul popf jmp imull sub push mov pop jmp mov aad scas mov insb stos jle add ja dec jmp dec xor inc loop pop sub jne xchg cs add add lcall mov mov loope movsb adc hlt mov jnp enter test adc jle mov movsb lcall js outsl add xchg stc inc es dec jnp jl or ljmp pop mov in add fnstsw cmp into fild and pop loop arpl fnstenv fmull pushl sbb add out (bad) jne or pop fisubl hlt dec jns xor sbb or rolb insb xlat insb push pop daa bound enter push mov jae (bad) dec fldt gs sub dec aas mov cmpsl sti dec or lret xor cmp bound movsl xchg mov in xor lret jns sbb (bad) mov push xchg xor std jno (bad) and adc stos int3 jge imul imul jae dec aam inc inc push mov bswap (bad) nop xlat sbb mov mov fwait pop mov rorb rorl out cmp gs mov out cmp lods or xor sub or jno xor adc shrl push sub xchg push into sbb cmp inc shrb movsl ret leave sub inc leave xlat xchg das fstps xchg jmp loop adc push sub inc adc mov cli pop fistl jno mov lret ficom mov and pop pop xor mov out jb adc sub xor enter inc (bad) or ljmp mov and dec mov (bad) mov or call mov aad adc scas leave inc cmp cld add and or mov push inc mov pusha lret inc or divl test jbe push mov adc aad fcmove push outsl loop jbe or aas sub push xor js stc add pop inc jb jnp decl fidivrl rcll sbb xlat in dec cmpsb in jle mov rolb les cmc mov pop (bad) popw leave je out mov jns mov gs sub das mov repz stos mov frndint lock push adc ret push aam rcrb cmpsb jae push rcrl jg pop push mov shrb sahf in jle mov mov add cmp jns inc mov sub fildl mov loop popa lds rclb loope push xchg lcall push add call add push daa xchg ret repnz cmp add add sbb cmp lret mov outsl in cmp mov fisttpll mov aad pushf fwait hlt sahf push fcomps decl (bad) cmpsb jle clc pop pop dec push xchg out jb in mov stos add jb push test lcall insb dec outsl sbb shrl cmc sub das push loopne fcoms (bad) mov les sbb dec and daa sbb xor inc dec or bts inc dec ret mov adcb daa inc jp incl test add out (bad) push mov ror or ds push fidivrl sahf les sahf mov dec pop repnz or xchg ret inc fcoml into dec out and (bad) lock pop dec mov inc push aas lds jg jae imul xor mov push not cli bound jl arpl mov push push pmaddwd or xorl mov fwait and mov xchg (bad) xchg in fnstcw push pop xor add dec (bad) out aam outsb daa inc fildl popf inc mov fwait push cmpsl ret push ret enter mov sbb fcomip mov push xlat insb fbstp sbb dec idivb int3 not pop xlat ret fwait jb dec mov xor insb enter outsl ficom fstpt mov sbb mov sbb ljmp inc pop jle push mov xlat sbb (bad) in enter jno and out cwtl lret in dec cmp cwtl adc imul dec jl lods icebp pop lods jmp sub mov mov movsl jbe cwtl cltd pop mov jecxz pop mov test movsb mov add push xchg sbb cwtl jo idiv (bad) sbb sbb (bad) sub xor jmp jbe jg jmp fisttpl iret sub popf lods mov rcr add rcrl mov jno mov shrb rcr pop mov add ss push shlb sbbb sub jne push mov pop sbb jp js xlat loopne inc (bad) jae mov into loope mov jmp mov xchg mov iret in ja (bad) inc out adc into mov mov inc sbb (bad) mov mov mov mov pop syscall mov mov sub pop sbb push or test jbe and push mov leave inc fcmovne mov or push add ja push in pop push and fwait xchg pusha clc or cmp pop mov sarl and test std fwait fwait cmpsl dec (bad) xchg xor enter adc jae and in pop inc push outsb fucom push (bad) test cmp inc dec jg mov (bad) xor mov test inc cmp nop fwait jg adc sbb mov xchg mov xchg or sti imul mov fwait inc test insb pop jmp mov movsb test loop cmp adc mov sub xchg jl xchg and loopne push lds jns adcl xor inc mov fstpl add mov ficomp sar fildl idivl adc dec and sbb outsb mov fwait pop inc lea or insl (bad) into out mov cmpsl jle lret cltd stos adc je out sbb mov mov outsl xchg xor inc fwait or ret add idivb mov scas stc or dec mov cs jle inc pop fimul or pop out add mov mov (bad) jecxz sub into leave mov dec notb push push data16 sub lods xor mov aam aaa inc adc push xor xchg iret mov jg and cltd xor xchg pop xchg sbb jne scas xchg test fcmovb cli push popa sahf insb mov cmpsb xor push jb fwait movsb imull xor loope sub clc fiaddl jno stos call fisubrl mov and mov or into or dec into fwait cmp rsm push (bad) mov xchg ficom enter out pop or and sub pop xchg add add (bad) xchg push out mov daa decl push mov inc call (bad) mov inc nop sub dec jmp inc pop mov je int and jl add add addl push mov mov in ss popf push repnz sahf sar push add pop adc jle test insl pop orl sti mov xchg dec (bad) mov cmpsb fs aaa mov in shlb adc push (bad) xor mov sbb mov cld xchg mov adc test sahf jg mov push adc ds sbb sbb jmp xor and dec cmpsb fisttpl jne,pn jae inc mov mov jecxz inc loope add pop les idivb push jp test ja cmpsb push add setae jecxz les and fcmove data16 xlat xor pushf iret pop cmp mov inc or lock popf outsl push fldt addr16 incl pop loopne xchg jo mov scas push lret cmpsl mov push fisttpl xor mov push sbb lock xchg xor mov cld inc pop inc out mov add in push fwait push movsl inc cmp and or std aad mov mov ficompl pop fcomi ss (bad) fwait lods or mov loop adc or mov popa leave push decl xor test insb jmp and jo cmp pop test dec (bad) xor xchg cmp adc lods rep add push test and jmp outsb pop rclb ret int idivl outsb lods outsl mov test sub int3 jl dec mov jns rclb repz xlat ret pushf fldt cmp hlt flds ljmp aas cmpsb jge xor inc arpl inc je,pt push inc mov pop add aad fstpt adc mov js sbb add jb mov mov sbb ret insl lar jmp push sbb dec nop push xor loop push xlat mov insl push or mov xchg mov push push mov call ret inc xchg (bad) pop sbb lret or push inc mov roll xchg sbb xchg or pop jle dec inc or sbb sbb aam mov inc mov fsubrp xchg fcmovnu xchg add inc push cs pushf mov mov push out mov stos pop xor ds mov push inc push jae push mov mov inc mov or ret dec pop loop test negl xor pop or (bad) les and dec sbb xchg inc sti mov cmpl mov stc and or push es lret dec sti in or dec rol hlt jge sbb cmpsl mov out sbb mov das lcall mov int3 fldt in repz mov mov xor push fdivs stos imul jne sbb pop test inc xchg xor inc aad sbb fwait movsb movsl inc (bad) and xchg leave push cmpsb dec push test adcb (bad) mov mov in and push into add mov jb xchg outsl mov (bad) or dec add (bad) out in xchg cmp jbe push cmp (bad) insb pop out stc jb mov sbb push xor sub aas mov data16 repnz add dec mov divb adc add and cmp push out add mov cmp outsl xlat lcall movsl or sub jl out cmpsb push mov in xchg ds pop hlt ljmp outsb adc xor mov adc insl lret lcall fidivl sbb insl lea sbb mov xchg arpl inc xchg inc addr16 dec mov push mov xchg jo add adc xor insl shlb cmp stos lcall lea pop call js push push xlat adcb ja (bad) imul idivb sarl pop aam dec inc jge inc sbb inc mov adc push push movsb and out or (bad) jns xchg fldl enter pop sti lods xchg data16 inc add repz pop mov rcr xor mov sub and hlt aad aad mov xchg ds sub pop in xor jns cmp cmpsb lds out jp xor popf mov (bad) cltd in fstpl mov inc push cmp pop neg push mov cmp and ja sbb sub inc jg xchg pop pop ret xlat rorl mov cmp inc or cmc ljmp leave loop cmp in xchg push add and scas jmp rol (bad) dec js fisttpll push sbb fild mov aam ret scas out cmp stos pop cmp xchg (bad) hlt push insl sbb mov jno scas lcall ret incl es xor sbb fimull movsl (bad) outsl ret pusha pop je cmp fcmovnu fwait pop pop xchg aas out adc stos sbb mov inc jne adc leave dec imul cmpsb pop outsl es fs (bad) fisubl mov sbb adc stc cmpsb in jbe,pn add enter out mov adc cmpsb and loopne test iret mov xchg adc iret sbb sub jnp pop pop xchg mov lahf stos sub push push push lret jne mov mov fdivrl mov push loope mov ljmp and mov jb mov jae jns mov jle mov and cltd in mov sbb pop dec aaa adc inc mov out sbb sbb and jecxz xor adc mov aad cmp mov sbb js sahf cmpsb pop and imul mov add inc pop cwtl aam pop sahf push mov push xlat lret pop sub fcmovb add cmp int xor pop xchg jle cmp mov pop pop clc testl adc cmp test add mov mov jg mov mov iret mov push fwait xlat (bad) cmp into xchg rorb cmpsb (bad) mov outsb hlt sub (bad) out dec popf jne ret (bad) divb enter fdivl mov fistpl push les inc ficom lret adc push xlat loop roll adc loope clc (bad) push (bad) adc jecxz scas xchg in fldt dec shlb (bad) lea add xchg lods cmp into test fidivrl fidivl push call xor scas push movsl mov adc push mov push jmp rcr in rol dec xor inc pop shl (bad) sub xor fbld out push mov xchg ds (bad) pop adc mov mov mov (bad) dec (bad) xor pop bound imul stos dec rclb push jae lahf xor jle stc xor or push mov add xchg mov rcll (bad) cmp mov insb add les inc hlt popf jnp jae jecxz sub out ret cmpsb in push pop xor mov cmpsl out insb sub xchg in jecxz pop imul daa lods bndstx mov incl std adc or cs mov push xchg and mull lret or adc dec cmpsb cmp cmc ret idivl push or adc ja jg les add jle iret inc adc and mov or imul loop or popl adc movl fistpl inc or scas cld call pushf cmp xor aad pop in mov int mov fist sbb (bad) aad lcall or in pop add jnp push cmpsb repnz mov adc mov call push into cmpsb icebp push sbb sti outsl call mov aam in lods mov xchg cli jle (bad) mov out icebp or xchg cwtl push leave and sbb adc iret push call cmp jnp add fmul aam or ds aam jnp aam inc mov (bad) jno into sub jecxz les outsb cmpsl scas or fldt ljmp jbe xor ss xor adc xor (bad) sub push andb jne inc add pop cmp js popf or fwait or sub mov cmpsl enter mov xor jo outsl sub adcl inc jne pop daa arpl fisubl outsl inc std stos push xchg mov pushl push pushf push mov and (bad) adc mov jno sub ss enter xor cmp jnp (bad) jne or xchg leave mov and cmc xchg sub (bad) fisubrl mov (bad) sbbb test nop in shl cmp pop mov pop aam data16 jns adc std pop in pop mov lret jg data16 lea push lods jo push inc loop shrl push mov pop ss sbb fsubrs cmp lahf (bad) je adc push fucomip fisttpl and mov in mov test or ffreep or or push or mov dec add cmp jae mov pop xor outsl xchg xor fs js lock push nop mov mov loop jb into sbb pop (bad) mov pop ss rclb in sub mov pop sbb nop cmp push iret ss dec (bad) dec fisubl mov push sub scas xlat rolb push scas mov xor jns cmp push fildl loop mov arpl jo xor push fnop mov xor shll jge jle xchg inc loop lcall out jns add popf push fdivl xchg sub ja popf xchg test sbb jp cmp pop lods xchg lods sbb bound in movsl jle sub dec rol mov mov xor mov inc or jae cmp lock xchg bnd out iret (bad) in push test clc jae sub push sbb pop jmp (bad) nop lahf pop mov rcll fwait add cli int3 (bad) cmc ss or (bad) ss jl fdivrl mov popf divb dec imulb (bad) push cmp mov out data16 in dec xor sbb loopne popf shrb mov std rorl leave xor jb clc std mov xchg frstor scas pop cs mov mov xor sub pop pop imul addb lret inc out data16 jmp or fidivrl add or inc add int push stc cmc mov (bad) jno fidivrl or loope fdivr push push mov xchg mov jge mov inc sub insb ja push call fisttp sub mov jns pushf xlat jmp add in lret add jl shrl cwtl arpl add inc xchg in sbb out sbbl mov pop lods xchg inc jge cmp and inc mov in pop cmp out fs jp pushf add jns xor es (bad) mov pop jge nop dec out idivb inc dec pop shrb mov clc xchg mov xor adc test fist das jle js loope xor imull jmp adc xchg cmp mov mov dec (bad) (bad) xor and es cmp xchg and aad (bad) pushf test std out pop out test loop mov inc and xchg aas call hlt enter jp subl sbb add pop mov sbb mov xor outsb jo and fwait aam add loopne fimul jp mov mov mov xlat les and vmread mov push sarb in and pmaddwd or das cmp xchg mov inc pop cmpsl addr16 push pop xchg adc rcrb pushf inc pop int shlb mov xchg xchg (bad) sub leave into add (bad) call sarb jmp mov cmp sbb cmpsl fisubr je mov rorl inc cmp (bad) iret push xlat sbb jecxz jae xor mov mov (bad) pop fwait sub push mov adc shl inc jno icebp mov jl (bad) stos or outsl repnz pushf or cld jp (bad) mov cmp pop or jno fmuls int test sub push pop lret scas sub or dec sub (bad) mov xor dec push xor fist inc jb jl in or push jmp stos xor ljmp shlb or mov (bad) call movsb scas pop mov mov outsl mov add mov cmp jmp adc jg jb or add jnp jno lds mov pop mov inc fsubrp outsl mov mov xchg cld stos mov cli ret inc les loop js cmpsl adc das stos (bad) aaa (bad) shll test pop sarb loope mov ret aaa or jns test dec xor negb clc in ss cmpsb push add or xor sti jae mov leave xor add in jge mov dec mov aaa dec ja add das or mov xchg rol imul jmp (bad) sbb pop xchg orb cmc call sbb dec mov cmpsb les xchg daa popf imul jae xor (bad) push out test outsb popl roll jle mov mov std sbb and jae mov lfs push push fisubr inc mov repnz dec lcall adc cmp mov lcall stos push out lret lret push fnsave dec cmpsl pop rolb mov lea out ljmp pop jns push cld outsl popf out arpl fisubl and lds add mov jmp es hlt sbb out sbb fwait add (bad) push movsb sub (bad) int dec lret fisubr rcrl pop pop sub rcrl push (bad) mov inc test jae mov xchg inc mov xor cmc dec xor cmp addr16 mov fidivrl push stos mov mov sub js cmpsl ror iret mov mov jne jo jbe adc xor sbbl dec sbb insb outsb out or xor mov mov mov fimul cwtl ret pop mov mov jno mov pushf cli lret notl insb jns or xor xor or scas sbb jno mov mov (bad) fstp popa (bad) mov add cmp dec xor xchg js aam out cwtl adc orl push inc pop iret adc gs notl xor push xor lret hlt sahf mov or xchg imul inc cmpl nop bound jae mov mov adcb push push fnop push sub jb fwait outsl or dec pop rclb fcomip iret rol jo push jecxz insb rcrb ficomp (bad) mov jno jl pop lds movd cld cmp dec mov stos jb dec ljmp notb popf inc jmp call inc add sti xor lds outsl fwait test mov fcmovnbe xor test ret pop cmc sub jb pop sub cltd call sub addr16 ss scas inc repnz test cmp sbb das in dec mov or ficompl fldt add cmp aam jecxz push adc into add (bad) jne ret pop movsb jo (bad) inc inc xchg push cltd test xchg mov (bad) mov dec jecxz mov fiadd adc inc sahf sti dec pop (bad) daa int sbb push (bad) js lods sub jo xchg imul lods fbstp and mov popa ljmp or sarl sub inc or insl addr16 and mov sar xor scas inc adc iret inc mov sahf dec xor mov (bad) push fsubrs inc mov inc mov cltd insb ret outsl mov sbb jmp rolb out push add fsubs outsl or lcall xor adc clc test out jbe in dec sbb mov jb arpl imul xchg pop int inc in pop xor sbb (bad) push fisttpl stos imul ficompl pop outsl lds xor les mov add insb shll clc ret jle push push icebp mov mov jb pop mov sbb in sbb pop test sti nop xor fiaddl (bad) push pop popl mov andl int3 in psubd popl in xchg pop out xchg out cmpsl cmpsb leave das in popa cmpsl out mov jge mov sub out enter or rorb jbe pop ja and sbb cmpsb gs and jmp cmpsl mov sub pop fimull out sbb clc inc movb sub inc scas or addl movsb or mov rorl test xchg (bad) mov dec sbb jg (bad) imul xchg scas lcall inc fidivl xchg pop inc test cltd sarl sub or or mov mov mov notb inc out (bad) pusha mov repz jmp jle insl ja dec jl std stos sbb xchg fisub add mov mov pop loop cmp mov mov scas xor xor xor pop ja mov jl lret and xor xchg mov add nop sub or fstps fisttpl mov stos aaa push fcoml fcmovnu sub es pushf (bad) leave movsb inc inc add out push out add jg shr outsl outsl add xchg pusha repnz dec jae (bad) movsl fdivl test pop mov lret inc notl xor push lods jecxz mov stc cmp sbb mov out pop mov ss add pop pop imul xor mov sub jle push and xor pushf sub mov cmp movsb pavgb or jae mov dec inc lock arpl out add lock sub (bad) adc or xor cmpsl sbb pop or or aam leave std push push sbb mov sbbl fstpt aam dec imulb enter xchg jmp cli fcompl aad out pop dec xchg add pop or lods loop shrl cmp pusha js leave out cmpsl int3 fcoml aam or js cmp iret mov loop fbstp outsl push cli xchg jmp test cmp and add or jae mov sbb cmpsl mov push lahf jmp into pop inc into mov and cmp mov fcmovne add and sar mov ja cwtl xor inc cltd gs adc mov (bad) or mov mov loopne lds mov adc movsl lods pop (bad) repz sbb xchg les outsb out stos xor je pushf xchg fnstenv xor into stos jmp inc mov pop pushf fadd lret (bad) stos xlat daa and scas arpl sbb xchg dec xchg push jmp mov push xchg (bad) push push mov int xor push push ljmp mov stos xchg punpckhdq push in (bad) fwait push bound mov sbb fistl les xchg std or stos adc push nop (bad) stc idivl cmp push xorl or daa xchg pop fwait stos scas repz adc incl xchg imul (bad) mov xor stos test adc repnz jne mov mov jge xchg scas call push ds lcall mov stos mov bt push xchg xchg cltd inc je xchg push push push icebp inc mov cli lods pop pop jle xor adc sbb xchg sbb jo inc int3 and (bad) mov shll pop push mov mov std ss inc stos pop (bad) ljmp mov dec mov fcmovnbe and xchg daa int3 movsl xchg sub cmp mov xchg push xor xchg sub stos scas (bad) mov push pop jbe lret pushf sub int icebp (bad) push adc out repz mov mov insb xor push ffreep dec es push and je cmp fabs les lods out stos xchg mov and idivl adc mov or daa and scas andl xchg ljmp ret adc loop cmp xchg mov push call lock and pop sarl ficoml (bad) les push (bad) aas lcall pop out xchg fisttpll and insb sti popf fwait stc cmpsb jae push add loope inc (bad) fisubrl ja sub jae dec jo push sbb add push aas ret and mov xchg and stos test push test adc and fist mov rcrl mov adc mov out xchg or stos adc test xchg imul loop mov push push rcll stc or (bad) daa sub (bad) jp mov sbb xchg stos mov fcmovb adc into inc and fsts daa xchg mov inc dec add fildll fcompl data16 inc jg xchg iret stos xor jge sub adc push fwait popf pop push adc push push pop push xchg inc sbbb mov sub mov loop xchg add sbb (bad) ljmp (bad) push mov and test inc adcw dec xor xchg xor pushf adc ficoml dec mov dec xor das ss xor mov stos cmp cmp popa lds stos sbb addr16 mov jne dec jmp push loope mov out and stos adc and add pop ret test cmpsb adc imul cld imul inc shll sub bound or add repz push inc std xor pusha in push stos or ret out adc xchg (bad) xchg into fs push xor mull test xor inc out dec stos dec fsubrs lea or pop lcall jnp push loopne xor cmp push pop scas testl push or xchg dec mov xor xchg aas incl pop or ror (bad) not sbb inc mov add (bad) dec cmpsl xchg ret sub push stos add mov xor pushf ret mov mov sub and loop bound lret push mov push sahf (bad) sbb lret pop pop xlat outsb aaa push xor cmpsb call ret mov stos sti or sbb pushf cmpsb stos subb cwtl pop jnp pop sub bound xchg icebp (bad) insb pop sahf jge fdivrl xchg lods lods addl in sub popf scas inc mov or fsts movsl pop pop adc pop out xor enter pushf in rol mov lret ljmp or out pop and push outsb fiaddl dec add js imul stos fbstp insl inc loope js lret movsb push mov ja cwtl mov xchg in pop mov imul in push stos inc call xchg js jmp mov cmp aam (bad) imul cmp inc push inc push push stos sbb sbb xor mov push push or xchg pop pop mov dec sub (bad) xor scas jge in lcall mov stos dec and sbb sbbl stos mov je lcall pop mov stos test outsl loopne push out pop out repz fild je push sbb fstps inc mov or and leave (bad) and push insb lret xor or int3 pusha sbb cli stos mov jo sahf neg push sub (bad) mov ret call data16 add in inc jle lret imul cmp rcrb outsb stos fistp dec pop mov inc lahf scas add addr16 adc ja mov mov stos jg pop add or xchg mov push push lcall pop dec cli aaa test dec scas outsb xor sti add jne stos loopne mov inc or je lods push lods cmp mov sub adc mov pop fldl lret jg stos xchg jnp aas icebp movsl xchg xchg sub loopne dec dec adc call xchg sub fcmovu ljmp pop hlt andl stos sub ja les aas pop movsl jnp mov mov xor mov (bad) pop xlat mov add stos sbb jecxz jp mov push xchg addr16 fildll test flds rorb mov lcall lods stos (bad) arpl jne pop jae jp sbb negl add gs aas sbb mov jle popa cmp mov out inc add in push ret cmp les repz dec adc inc sti stos hlt out pop nopl pop in mov out stos xlat add stos xchg popa adc sub push pop fwait call mov loopne xchg cmpsl dec mov jmp inc cltd (bad) mov sub jge rcl bound add dec and inc insl pop pop sub daa popa sti fidivl movsl inc addr16 cmc js mov and adc test shrb or inc lods adc adc xor ret xor xchg mov mov daa stos nop mov xlat cmp das subl fwait sbb (bad) cwtl mov call add stos push and (bad) pop ds das (bad) out insb test dec dec stos (bad) call movsl stos aam push xor out or adc stos pop cs mov push loope xchg and xor or cmp js fdivrl pop es lret stos stos and cld outsl out sub into sarb or stos lahf xor ficomp mov lods lret cmp push add int3 lret ret stos mov mov mov cmp jmp adc out sbb iret ljmp jno jne mov lock jb pop jp mov pop ja inc test pop jbe,pn (bad) push push loopne in sbb pop sahf push sub imul popa insl outsb jb andl data16 lds mov mov imul adc popa ds fadds (bad) fadd (bad) ret imul aas insb jne xor addr16 push inc sbb cltd (bad) pop xchg (bad) fnstcw lds add or int clc dec push push in repnz mov dec jp jno adc fwait jae mov fs xor out mov push gs es xlat mulb sub dec inc adc stc inc fnop in push xchg sub sub sub mov repnz sbb imul imul imul pusha pop sbb je jns imul fnstcw xchg inc popa dec lds cmc mov mov mov mov popf mov mov scas scas pop imul pop insl outsb adc imul imul imul imul imul imul imul cltd jge sbb (bad) (bad) cltd mov push sub fsubs cld sub dec add shlb enter leave enter jmp leave mov xchg sbb jno push xchg icebp lds movsl cltd movsl lods mov mov inc imul sarl mov push xchg lret test mov mov sbb mov out scas xchg scas shrl ret cs data16 cwtl insl test nop addr16 jo adc add cmp enter or xchg bound imul or ss sub sub test insb dec insb push movsb jmp addr16 (bad) out inc xchg rcll (bad) jno sbb aas xchg pop add sbb fsubr cltd xchg pop adcl rcr fidiv xchg xchg mov dec outsb fwait cmpsb lcall and (bad) sti inc jecxz jmp es jbe ljmp push cld loopne mov jno adc popa lcall and es and and xor and repz adc imul and sub cs sub xor and (bad) subl lret aad sahf xchg mov pop addr16 mov mov mov or sarl pop imul xor outsb shlb push movsl push push sbb repnz adc xchg fs ficom popa push jno adc xor (bad) repnz in xchg sahf mov lcall mov push leave cmp (bad) cli push or outsb xchg mov imul ss cmp fs stos cmpsb stos mov push cmpsb outsb pop addr16 or imul imul rol ja add fcomi ficoml into mov mov mov mov scas push or into cwtl push sbb xor sbb (bad) cltd lea lahf cltd test pop arpl jae jle xor (bad) divb or pop mov mov mov pop push (bad) shrb xlat addr16 (bad) cld rcr cmp mov arpl adc cmp ds cs pop xchg pusha movsl imul fisubrl test icebp inc xor rorl pop fwait pushf sbb xor inc jp fisubl mov sub (bad) leave idivb enter out leave ljmp inc inc enter sbb out loop cld xchg push push mov mov mov add (bad) stos cli stos out loop push gs push jnp (bad) mov cmp insb cs into outsb lret (bad) out es divb and cs sub sub sub sbb pusha dec mov data16 (bad) xchg sub jmp outsb adc ss mov cmpsl pop xchg cli and adc (bad) pop sbb fnstsw icebp (bad) es mov mov mov mov xchg push mov mov mov mov scas lret repnz idiv loopne ljmp lcall imul lods leave mov gs es and pop lcall dec xorb scas jp cmpsw jp outsb in mov sub sub sub sub sub fisubrl sub sub sub sub sub sub sub sub sub sub ret fimull movb sub sub sub sub sub sub sub sub xor lds push in xchg sbb (bad) movsl (bad) movsl ret movsl cli movsl ljmp sub lds cmc shl (bad) xchg cli test mov movsl mov mov mov mov ret scas (bad) scas cmpsb scas mov mov mov int3 scas sub xor and into test cli imul jbe jb jp push push push test or jl push aam cmp cld sbb adc adc ss (bad) icebp ficoml loop int3 stos sub pop cli push popf ljmp lcall mov mov mov mov mov mov mov mov mov push inc pop enter leave inc dec dec leave dec leave jp leavew (bad) lds pusha add mov add outsb and push sub mov add mov xor es or fisubr fisubrl (bad) sub sub sub sub sub sub sub sub sub sub sub sub insl dec aad or subl sub lret arpl xchg fistpl je ficompl dec mov mov imul cmp jbe push arpl bound sub imul aam in into adc (bad) imul imul mov adc jo or data16 sub pusha ljmp imul sbb insb push dec mov xor jmp aam imul sarb arpl or mov (bad) jb pop hlt xchg inc pusha and test push aad iret hlt xchg push imul mov sarl sbb rol (bad) lret sub push dec or pop inc (bad) jp pop (bad) aad imul sbb jbe test adc cmp dec mov dec imul push push adc sbb icebp outsb xorl dec (bad) sub data16 sub pusha and inc jo call ficoml cs pop insb jne sbb insl push (bad) push mov push call sbb jp fmuls (bad) stos inc sbb aaa jno cwtl jae pop in adc ficomp xorl mov insb cld jbe xchg mov lds (bad) into pop lahf push into sbb dec imul and pop imul lahf fucompp pop sub sarl popa movsl dec dec (bad) ljmp dec cmp rcrl cmp jno fistp sub fcmovne push lcall dec fsubl fs dec xor shl (bad) sub mov fwait xlat sub push insb mov or mov mov imul fbld mov push bound pop js aaa sbb arpl shrb jle in out pusha or jae bound fwait lock stos lcall and addr16 jp ficompl mov fisubr jle xchg jb pop inc or in jne rcll cmpsb pop data16 and add mull mov out cmp bt push xor cmc xadd push jmp xchg aaa xchg cmp mov jp add jb lcall adc jnp and mov es and int3 pop xorl lea lock push outsl fistl mov int xor (bad) or xchg cmc cmpsb shl (bad) stc push sub test test jecxz bound loopne int out add jp aas outsb xchg (bad) js dec or jb hlt mov sbb mov push push xor mov movsb and and mov or mov xor loope arpl imul xchg jecxz sahf jecxz aam mov push xor mov not mov pushf pushl ret ljmp or sub mov test aas xchg fwait lea ror sub and movsb mov xchg jmp in test sub xchg cs add roll xor lahf cmp add jge ja pop daa or bound jnp or jbe inc and pop cmp pop mov shll cmpsl sahf pop gs inc cwtl movsl fidivl jne sbb push dec adc (bad) insl inc push inc lret lods xchg test arpl push cmp call out out xchg sahf test (bad) (bad) dec fld jbe pop movsb (bad) mov (bad) mov push pop das jp sarl loop cmp adc sub test dec or sbb (bad) push adc mov lahf in out jmp jecxz (bad) jbe (bad) sbb test and jne pop push cmp mov inc movsl imul test sub fsubs pop daa out xchg repz mov out scas popf ret hlt inc subl repz cmp imul xor push cmp dec sahf add add icebp cmp aas sahf loope xchg fsubrs push sbb jmp outsb mov jl mov iret lea je pusha sub bt cmc jmp call lock and jo nop fstpl push cmp add lods cmpsl dec dec mov or (bad) xor cmpsl xchg incl mov sub pop lcall loop push nop fistl adc (bad) xor push lea je data16 negb jo and stc shl add rol mov bt test cmp test test jmp clc jns and xchg sahf jo add popf popa mov sahf mov cmc cmp fnsave mov addl cmp lret cli dec leave jo out stc aaa mov or pusha lahf arpl mov je xor mov dec jmp xadd sub push add shr ror cmp rcl neg mov bts add dec bsr xor bswap add lea shrd test rol mov cmp push call jmp lea ja inc inc inc pusha pusha inc add stc seta pushf xchg lea test bts mov inc (bad) repz mov test cmp push data16 div shrd call lea ja not pushf movb setg inc call repz xlat pusha lea je movzbw cmp push setge add adc mov test stc stc add mov stc mov movzbw mov movb jmp aaa rcll mov mov stos repz add and mov adc stos lods test sbb xchg inc or push sbb sbb jge or sahf shlb push jo insb pop adc fwait cltd bound lock pop jge add pop jmp loope push adc test jne movsb dec insb push jne in stc push jno and shrl xor clc fnstcw or cmpsl xor cmp inc adc dec bsf mov call call cmp lea jno push lea ja call xchg xor mov sbb mov mov in fld fsubr int3 clc cmp mov and shlb fldenv mov jbe insl inc in adc fildll stos cmp and enter fwait call xor fbstp cmc mov cmpsl inc movsl and arpl jecxz les push mov rcrl fsubrp cmp push pop imul and lock not call popf inc lea mov and sti int fs into in push shll adc inc out shrl or mov xor dec leave mov movsb jns sbb insl ror std dec cmc or dec sub or scas sbb sbb adc insl sarl loop mov lcall lret xor push sub int3 mov mov jp and xor movsb pop inc sub mov mov or hlt ret faddl repnz loopne es inc or sbb cmp push nop lock xor aas mov sbb mov loopne test push fiadd push repnz clc rorl popf bound loope divb hlt lahf sbb xchg pop mov outsl ja,pn aaa jns mov mov sub mov push out stc inc or fs out xor aad mov loopne push in mov lods test pop cmp mov nop xchg push sbb loope inc scas jo sarl (bad) out and mov cmpsl push iret and sbb scas repnz lock std das aaa pop mov dec jo xchg sti iret test adc fsubl dec addr16 jae js call pushf lea jne call inc stc ror cmc xchg aad aas shr xadd mov rol ror rcr shl mov cmc pushf cmp call pusha movl pushl pushf pushf movl pushf pushl pushf movw lea jmp jb push jmp xor lea js dec jmp jmp inc loop and mov sub or pop jecxz jl xchg fldenv xor fsubp mov push jge insl ja or rcrl pop lds andl jmp inc out adc push icebp lods or clc mov loop push pop sti icebp adc aas jecxz push push jg mov insl insl mov test div stc sbb xchg ljmp je aas dec and and mov push testl repz cmc cmp mov pushf pushl call bt mov xor stc call push repnz movw pushl lea jne setne movb push movzbl mov cwtl call es mov sub rorb adc jmp sub or adc adc aas xchg fnstsw into sbb sbb push in mull push rcrb sub xchg je jno inc pop jne xchg push lcall lret mov pop insl cld pmuludq popf fidivr sti arpl xchg and lret dec insb mov scas stos xchg mov xor out push mov jns adc inc mov sbb jne mov mov (bad) movsb cmp mov xchg loope insl cs icebp mov pop and dec mov iret and and aaa lea jbe add loopne mov in leave jle mov mov repz add lahf push cli inc xchg adc push ljmp lahf sub lret push push mov shll adc inc rcrb jbe jae jb mov sbb (bad) fs inc xchg sahf dec mov call cmp fs jle shr stc cmp push movb pushl lea je push push call mov scas sub pop bound push sub stos xor dec pop je movsl add mov cltd std adc and xchg sbb jnp jbe cmp xlat sti adc pop mov pop or fxam pop hlt lret rclb mov push sbb xlat xor xor movsl popa cmp lahf mov jecxz jb cld inc lods mov mov adc (bad) or cmp out jp sti mov (bad) shrl scas mov push testl mov cmpsl lock stos out sub xchg out fcomps cli push jb cmc ficompl push pop in mov and pop stos inc xor stc sarl jae lret paddsw inc movsb cmpsl ss pop mov jnp sub hlt mov arpl cmp movsl insb mov jle in cmp cmp and sub and xor rcll pop popa dec shll sub xor loop dec test xlat mov mov das cltd add inc stc lea jecxz xor sub mov or movsb cmc cld adc xchg aad jecxz sbbl or sbb lret fcom lahf pop rcrb jecxz inc sub adc mov adc adc in jnp mov cli ss push incl inc push mov sub std (bad) stc or pusha jmp pushf add ja pusha sub jmp pushf mov pushf push mov lea jmp pushl lea ja call rol mov bt stc sub pusha jmp pusha jmp jmp orb sub stos std (bad) xchg rcrl mov mov test in fcmovnb push (bad) fnsave out roll cmc mov aam frstor jecxz cli cmpsl ljmp mov je pop gs adc loope push (bad) dec and push mov jmp sub or sub cs cld mov mov mov je scas in mov xor int3 dec mov mov cmpl cs mov fnstenv mov ja or jo pop push in loope cwtl pop pusha pop xor outsb mov dec xor mov mov inc push pop ret jmp test and rolb loop adcl and mov rclb inc mov or inc adc or mov je jge rcrl popf hlt inc xor or stc add dec push sub mov loope daa fistp cwtl movl jae cltd dec jae dec outsb int3 jnp pop adc pop cltd mov jp bound adc ja cmp fndisi(8087 sub fstps pop push popa mov xchg push mov scas mov pop cmp movsb mov pop ss fwait out jno out mov mov jl imul dec cld sub test sub mov shld add push bsf pushf bsf shr shld and mov movsbw btr add bswap pusha lea not mov lea pushf pushf pushl mov mov jmp or int3 adc mov addr16 cld fdivrp sub or scas jnp rcll xlat movsb (bad) aam mov and mov pop ret repz sarl pop mov scas int dec mov cmp fs cmp imul loop arpl (bad) test mov dec mov (bad) mov pop sbb faddl mov jbe dec subl pop insl shr xchg loopne or int3 dec push pop mov mulb addr16 (bad) or outsb out int lea lea push inc dec pop dec out or aas add cltd push test xchg adc scas pop addr16 bound add je adc lea jae pusha pushf clc cmp push push call repz das mov sub test mov or inc jp pop and ret cs leave mov inc out cmp pop inc and mov loope fistp aaa sbb pop es fistl mov movsb fiadd int3 sub xchg sbbb imul adc stos hlt bound or inc xchg or xchg (bad) lret lds movsb cmp add mov dec or push cltd scas stos xor repz and pop add fsubl mov cmp sahf imul je mov jno movsl lock lcall mov inc xchg loop clc ret and dec add sub loope dec xorl cwtl adc test jnp cmp dec ljmp out inc and flds xor rorl xor (bad) (bad) add popa jmp shrl popf (bad) xchg mov xor outsl (bad) imul shlb xchg out (bad) mov adc in scas jmp inc loopne stos cmp hlt pop sub mov add fwait call mov dec pop je lods dec mov lret mov adc aaa sbb jg adc movsl inc sti mov adc add fiaddl into push lret mov mov fcmovnbe jns mov fstps es fs fildll pop cs add push (bad) int3 jmp pop je aam sti imul clc pop in cld inc push pop sbb sbb cmp das add push jb inc aam mov adc sub (bad) outsl push sbb imul out cwtl sbb js mov out cltd xchg jg clc les aam pop xor lcall xchg out frstor mov clc and imul mov xchg mov jb cli xchg pushl movl pushl pushl lea jmp or mov addr16 sub loopne sbb mov pushf jp (bad) hlt fwait pop das cltd mov fcomps out aaa js scas mov in cltd mov and mov mov nop mov sbb dec stos inc mov push xchg mov sbb cwtl mov mov mov sti mov repz add xchg dec ffreep insb push xchg push movsl pop mov int fnstenv in imul sti jns,pt test arpl pop sub mov sbb (bad) push pop outsl inc or fcompl pop mov in out cmp lock mov push xchg jnp or and sbb imul mov mov mov adc adc hlt pop sbb add fs (bad) xchg push push (bad) jbe cld in dec and jl cwtl in fisub cli into out mov and and mov lock pushf mov adc stos sub stos xchg sarl or cld or and icebp ds jge mov enter mov loop mov adc jno xchg (bad) aam add push push sbb shl xor into mov repz dec sbb decl dec pop push out leave or in sti and and mov cli cli xchg adcb rcll movsb cwtl sahf jmp xor sub and xor call inc loop andb push ds loopne or jmp or addl sub pusha add sarl push in jo rcpps mov mov lds (bad) ljmp mov push push cmpsl inc nop jae pushf xchg cmp jecxz dec repz xchg jo adc and jl jnp shr dec das js ret scas addr16 xor pop insl hlt (bad) cmc fbld test fadds xchg inc nop loope add push inc add xchg xchg push lods xlat push cmpsl mov lahf inc or out jecxz ret sarb pop xorb movsb (bad) jge insb mov mov cmpsl int repnz pop ljmp (bad) insb pop movsl das jl cmpl xchg xor fbld mov insb push and jns subl rolb mov xchg mov sbb xchg sarl cmp cmc add out lea jle je jne xor mov sbb das push push jecxz (bad) xor sahf jae sbb xor push into ror imul cmpsb repnz adc les out adc arpl je ss mov push lcall repz mov lods jg xchg loop inc pop lods mov test arpl into shlb mov jmp fild and icebp pop loopne imull inc jo js enter dec pop in mov dec mov addr16 pop in lret jg add cwtl aas mov loop stc mov fst stc jne inc fisub or fisubl sar inc add (bad) loope jno test and aas mov (bad) mov mov mov mov mov (bad) (bad) (bad) cld mov (bad) mov mov mov and and (bad) (bad) mov mov (bad) mov mov mov mov mov mov cmp and mov mov (bad) mov mov and mov mov (bad) (bad) mov mov mov mov mov mov mov mov mov mov (bad) (bad) cld mov (bad) xlat pusha inc mov mov jmp lea je call push dec (bad) mov (bad) popf jecxz or lds das jno loope pop dec xchg mov shll jmp mov lods fdivrs out lret inc outsb pop out push repz scas push push ret (bad) cld sub add push cmp add and fwait and lock lds scas (bad) or stc pop test fwait dec push xor pushf dec out cvtdq2ps repnz or push mov cld lcall imul inc add push movb mov (bad) ret outsb xchg adc pop test inc xchg fcompl or ja popa cmp js xchg adc pop test xchg cmp sbb sub mov mov push jecxz aaa jae push aaa mov pop arpl mov pop mov xchg add push xchg xlat adc jle arpl pop dec repz inc jle xor cmp ds dec mov pop lea cmp push sbb and mov sbb mov mov (bad) mov inc arpl sbb push sarl cmp popa mov push lcall dec xor inc cmp push ficoml aad outsl dec ja ja push enter iret push cli data16 push sub push lea call pusha mov lea jae push not mov setno setne jmp pushw popfw lea jo push push movb inc pushl jmp pushf adc push pushl ret add inc gs outsl imul outsb outsw jb popa je outsl outsb add jle aam mov pop sub xor xor mov subl aaa push mov fstp xlat pop mov (bad) (bad) daa push pop popa aas adc aam mov jp in dec or jl cltd adc icebp xchg das xchg flds lea sahf inc sub push shrb sti bound int3 test xchg mov into clc sarb addb test cmp mov xor lea jb cmc cmpb pusha jmp pushf push inc stc xor pushf dec cmc not clc bt shr pushf jmp push stos push pushl push movl lea jmp cmp cmp jmp mov mov shlb arpl add fbld aaa sbbl and pushf mov imul sahf lret xchg insb xlat cmp loopne aam sub xchg or sub daa push pop jmp adc cmp push stc subl outsb movsl and sbb lds xchg and add or fildll fs test mov insb dec notl imul bound js insl outsl fnstenv cmc outsb ret fwait jbe xor faddl mov jnp mov ret fnsave repz xor push and (bad) repnz pusha hlt out sbb ffreep xor outsb mov xchg arpl (bad) std push xchg mov mov mov pop lea lock nop daa sbb push dec pusha adc push sbb sarb cmpsb repnz cmp clc pop xchg add push (bad) loopne cmp (bad) jl xchg mov arpl cmp mov out loop pop xor xchg repz pop addr16 mov pusha bts cmc stc mov jmp nop cmpsb fidivrl xchg pop sub mov dec or xlat pop aam dec push mov lds and push out mov sti add test in adc outsl sbb ss ss fsubl addr16 mov mov mov fldenv adc pop addr16 iret xchg fcomps jo aam dec push sbb pop inc push test rol rol add push mov jmp jmp call call inc pusha pushf mov jmp cmp jae mov stos ja or stos je xchg push mov add mov dec out xchg pop test cmp loopne jmp insb push and mov push test mov mov fdivrs ss movsb jae popf cs xor mov sti adc sarl push sbb mov jbe es or in push jbe shrb mov addr16 pop sbb mov mov shrl scas xchg loop mov mov xchg out movzwl add rcl adc bswap test mov cmc add pushf bt mov jmp cmc pusha and call incl iret mov cs or repz mov (bad) xor ds dec xchg gs mov lret cltd mov int int3 mov cmp ds pop test pop or stc negl les jmp lods push dec (bad) repz sbb inc or pop mov push jno inc fdivrs loopne jo dec jne push loopne mov mov repz inc nop fsubrs sbb das into shrb push push in dec movsl (bad) mov inc into sbb cmpsb jbe std dec xchg test stc arpl fdivrs loop ljmp mov jmp pop lods mov xchg js shr stc pushf pusha cmp call arpl stos fdivrs jl pop fsubs cmp int mov dec xchg jp dec psraw dec loopne cmp test ja cmpsl adc pop test push inc jl cmp jbe pusha dec sub iret mov sub pop cmp pusha mov data16 ljmp test adc push xchg sub sbb push fdivs (bad) and and stos sub dec idivl sub and mov sbbl dec mov lea jmp call pusha dec test not cld mov jmp adc pusha inc fldenv xchg jecxz add sub loope mov cmp xor mov inc pusha sub ja lods sub js in mov cld es xchg xor pusha je pop pushf je inc sbb shrb fmuls xor add lods out mov out sub int3 dec xor loopne push inc (bad) in out in push rclb mov xor inc jmp cmp jmp daa cmpsl imul mov sbb add fldenv cltd fwait insl sub xlat notb pushf add xor insb stos cld mov add sub cli loope lock lock test xchg outsb push push mov and sbb dec lods push das ficompl mov mov mov push hlt rcr and cwtl iret hlt and pop add aaa cltd adc mov cwtl stc push mov pop cli pushf pushf pusha inc movb cmp cmc neg cmc cmc clc mov push cmc add jmp rep mov movzbw mov movb pushf lea jmp cmc xor mov cmp pusha cmp or movb mov pusha pushf lea je cmc or call sbb adc mov mov loope in xchg cmc jle jae insb cmpsl pop xchg jg adc (bad) push cwtl imul lret adc sub mov dec and lret in aas sbb iret (bad) dec cmp mov mov pop jae or pushf xchg outsb scas push popf pop lods out cld cld out mov fmuls stos xchg int3 aam pop in xor clc mov pop add mov jle mov dec mov push test add lret pop fmuls and aam pop xchg add divb xor xor aaa mov aaa cmp and add nop popf mov bound rolb push das lods cmp push xlat lods out lods (bad) ja add inc out lcall sub js xchg pop sub add pop bound fcoml lods adc jbe rclb mov xor rolb xor jo mov push cwtl cmpsl ret daa xchg xor xor pusha pusha dec out cmp popa popf test lods add xchg pop test sbb inc outsl js fwait mov add or out cmp sti test cmovb arpl leave arpl pusha cmp and and dec cs cld les pop xor mov mov and in lods outsl lods pop add out adc dec sarl data16 out mov stc jecxz mov dec cmp aas std fwait daa test add inc rorl repz addr16 cmp cmp loopne loope out fwait aad faddp and xchg imul and insb rcll add inc dec add mov loopne mov fdivrl sbb fdivrs jb mov xchg push lock and and jbe jle lcall mov loope ret (bad) pop ficom push popa popa pop sub mov lods jp out and out in movb jmp enter (bad) mov dec mov push loop stos inc jae faddl jmp into mov sub xchg sub movsb loop jns add pushf daa inc mov push out xor mov mov adc ficomp in or mov test lahf adcl jbe push ret mov hlt xor fldl2e stos fild push imul dec nop push and xchg jp add mov inc arpl es in outsb xor ljmp add push scas (bad) mov sahf bound ficomp lcall mov fsubs lcall ljmp xchg jnp pop push jnp ficompl cmp lret mov push mov xor (bad) mov loopne iret repz pop mov jbe std dec cwtl in jne and mov pop (bad) iret sbb pop (bad) sub daa out inc mov out inc pop dec adc loope push pop mov int mov pop ret mov test jecxz rcr sbb dec repz outsb insb sarb inc rcrb frstor fbstp idivl mov mov lret negb in jge insb nop scas outsl or mov mov mov lods icebp movsb mov leave pushf pop sarb xcrypt-ctr cmpsl (bad) mov pop addr16 leave rcpps xchg into mov das mov stos cmp adc push push (bad) cmpsb (bad) aas ret xchg loop fcompl fcomps xchg out pop (bad) incl mov mov (bad) jmp lea call push clc cmp movb pushf lea jae jmp push lods and mov jnp (bad) sbb ss cwtl faddl loopne sub shlb inc push add stos jne pop jnp outsl dec inc add aad cmc call dec imul in sub js pop jae rcr xor aaa fildll shl xchg sub or test pop add clc sahf bound inc or bts ret mov mov hlt cmp mov cltd fs movsb sub idivl cmp push mov xchg idivl lcall aam lds push sbb xchg jg arpl popf pop pop xor test add jbe xchg sbbb decb stos mov negb adc fildll les push push not (bad) inc test iret or iret mov aam fiadd jmp call and add mov cmpsl cli inc (bad) pop mov adc je mov adc cmp sbb std mov add icebp lcall ljmp pop aad sbb add outsl mov aaa fidiv out sbb and popa mov cmp adc test mov mov lret movsb mov push xlat sbb lcall mov inc adc pop sbb mov lea mov jmp int fcmovnb mov push cltd push jl (bad) pop pop je xchg sbb jg bts or mov push add outsl xor jns call jp outsb in repnz jl push int out dec and insl dec (bad) pop xchg fwait mov mov jbe mov hlt popa jle mov xchg movsb nop outsl into adc popf cmpsb adc push ss iret lgs ret mov pop hlt mov add xchg push lea call jmp jne gs xor fs insb add adcl ret add push repz push mov sub or std pop and dec jne test call mov cwtl and jns out jp push fcompl ja adc mov pop add lahf mov les daa jno loopne (bad) imul cmp cmp ss add or and xchg sarl cltd jb fdivrl addr16 pop fist pop imul ss fidivr fld1 or (bad) jmp iret movsbw jmp add add add add add (bad) stos add add add and add add pop add add add cmc fwait add add add mov mov add sub add aas mov add add add cmp pusha lea jae stc add call cld jge (bad) mov adc mov cmp sub sub push jb pop loope or mov movsl push add adc cmc out scas sbb and divl sub mov or popa push incl lds dec out inc lods inc out fstps sbb mov stc cmp jno dec jne xor jo or adc in andl inc push sbb mov push pushf pop mov jnp (bad) jg out faddl stos add mov pop stos jmp add fildll dec push das imul cmc cmp aas fisttpl enter (bad) fnstcw out mov lea sbb mov xor loopne mov sarb jle rcll jae divb jb fucomp pop jno jo sahf push mov loop or stos aad lock cmp xlat shrl dec std sbb sarb js pop or pushfw and imul dec pushf loop jl xchg rcrb xchg mov mov sub test add cs mov add pop sbb and adc pop adc mov (bad) loop scas mov cmc jae pushf cwtl jg sbb repz adc les fs out sbb std mov jmp xor mov mov sbb pushf inc mov jmp mov mov not not pop pusha push pushl ret jmp leave insl out mov or loop idivb push loope mov jg popa mov inc jmp cmpsl jns add xchg jae test fwait mov sahf sbb (bad) push pop sub push je repnz loop push imul popf jmp dec out faddl pushf cli movsb push mov mov dec mov ljmp aam dec or xor (bad) push pop out lret xor nop inc in repnz add movw movb not pushf movb lea call jmp and sub shl bsf sbb mov push cmp push cmc sub push clc pusha pushl popl jmp sbb dec jmp fsubrs pop inc lods jge push xor jae movsb dec jp dec fsts cmp bound pop scas mov ret mov mov xchg out adc ret bnd push lret ret jbe adc ret (bad) je push sub (bad) inc cmp adc movb xchg push ret push je push jp fisttpl (bad) ret pop je dec scas (bad) ss mov pop push fcoms xchg je xchg push out out incb mov or push inc outsb jbe adc inc daa fistl push shlb mov mov jbe adc ret ret sarl inc es adc ret push jle inc mov les pop loop leave scas lcall fcoml or mov mov les add sub mov leave push loop jne or stos xor ss xor xor stos cmp ds cmp cmp stos and es and and cmp stos adc adc pop sbb sbb incl add bound or in test sbb mov test push push push push push notb dec or sub jae (bad) lock repz inc rcrl mov dec repnz xor xchg push shrl ffreep jp adc jae hlt mov dec xchg scas mov fidivrl arpl dec pop mov popf insl ljmp test dec arpl es lock add push inc dec fistl push jbe adc pop jne ret pop pushf pop dec ss outsb inc lock rcll push add inc push inc inc lock roll dec pop lock adc jne (bad) sbb add das add or push cs push aaa dec fstpt inc dec outsl and (bad) push lret jp push out lock add (bad) (bad) adc enter ficompl loope lret dec sbb pop data16 or push iret push and cli add aam (bad) mov push movaps (bad) je mov push fwait cmp ds sbb jb push int mov lds pop dec scas or (bad) push push sar adc stos imul or imul sarl cmp cmp test sub dec mov push sub das or cmp cmp cmpl add (bad) jmp iret inc movsbw shld mov clc add clc cmc call cmc seto or cmp mov stc bt call test test mov adc mov mov popa sbb ds or arpl dec sub and test mov cmpsb icebp (bad) in jne add and inc imul in fisub (bad) icebp jns mov sbb and es test dec out sarb push sbb hlt cmp rorb das frstor ja out (bad) arpl pop mov mov test and push pushf push imul (bad) mov xchg pop popf add pop jno faddl insb out out dec out dec mov popa pop inc xchg faddl movsl push aaa mov or push leave test aam dec mov mov xchg fildll lret imul mov xchg aas jl test adc xor js inc sub fdivl mov jne (bad) push sahf fdivp cmc push cmc sbb xorl les decb sbb add and lock mov addr16 out xor in ja mov mov es (bad) daa rcll adc jmp dec inc xor adc bnd mov mov dec push in cmp (bad) jmp (bad) sarb ljmp imul jp mov inc test or pushf adc inc cmp cmpsb mov mov or movsb lock sub iret xchg jb jae outsb pop jns mov xchg cltd orl repz in xor outsb ds in (bad) mov xchg js daa sub cmpsb in ss adc mov (bad) mov popf mov dec inc mov sub in dec in adc adc (bad) outsb out into sbb mov pop cmp mov aaa or leave mov dec cltd xor gs push insl out jne mov mov pop push xchg (bad) mov scas aaa mov jl or pushf and pop jle loop outsb scas andl daa fisttpll push cmp mov push stc adc xor pop and lock lret push xchg or std add or les das push mov sub xchg shlb cli mov (bad) lret jno or rcrl sub add (bad) or (bad) xlat testb sbb mov movsb xor pusha or stc mov mov std sub mov aaa in add test into add out insb xchg sti pushf es rcrb fistpl ficoml dec jne xor stc repz or call ja jbe aaa cmc inc and mov bound jnp stos lret scas xchg mov pushf fstpl pop or mov ret cltd in push outsl (bad) pop std hlt adc mov mov clc repnz loope out lock sbb mov mov adc test dec loope (bad) sub add cmp and sbb (bad) pop xchg mov out or jg stc or lea sbb cwtl dec clc jnp dec pop xlat out nop lahf xchg ret lods cltd fidivr pushf cmp mov sub sti sti rorl fiaddl scas cmp (bad) shll cmp mov or pop rorl loop inc sub adc fucomip out pmaxsw dec in in cld dec xchg push cmpsb test dec cmpsl dec push in xchg pop lcall mov xor fistpll add sub and cmp mov mov mov mov mov (bad) (bad) (bad) cld mov in xlat les int mov pop pushf ljmp push push nop lret cmp ss xlat std lret fadds ret call sub and adc dec out jmp fld1 ja adc cmp pop or les (bad) outsb mov in lahf xlat ds mov push test xor push nop mov mov ljmp push lds int mov fcompl insb lods jle or ss in cli faddp adc add lock sbb fnop cmpsb push cmp sub popf hlt rcl jl es and aad js push sbb jae pushf in out les fistpl movsb mov stos jbe push in lds ljmp fs xor scas scas jb jp mov xchg cs push sti push pop push fldl xor cmpsl repnz adc call fild or sbb mov popf jg xchg push clc inc adc rolb stos push pop stos jae addb bound iret and mov movl out lea je push movb call mov pushf inc pushl xor pushf jmp test jns scas mov arpl arpl and and insl outsl fdivs out insb add jmp jle fistl xlat mov idiv xchg or jae sbb push sbb mov lret (bad) push mov (bad) mov (bad) call push sbb push out lret pushf mov mov xorb arpl lock (bad) and sbb iret xchg push shlb insl in jns jge sbb lods push cmp call shll iret xchg (bad) jbe rclb idiv xchg push add mov xor add pop pop add repnz push mov sub pop out movsl mov pushf pushf pusha push pushl ret xchg sbb repz mov enter jg xchg shlb cmpsl jge subl repz push gs xchg mov adc outsb adc stos xchg mov aaa add xor cmpsb (bad) adc lock or imul idivl lods lds cmp dec enter lret stos aam ficompl std sub jo mov sbbb cmp pushf push lea jae stc cmp jmp test jmp jne jae stos push lea jmp fidivl lock shlb out mov dec sbb and jo lret xor dec inc ret cmp mov xor fidiv pop push xchg push jns divb lea dec or mov mov xor ja jnp pop push mov push negb orb lcall sahf loope dec jae sbb push sub push aam sub xor jb inc dec xor out hlt xchg not inc sbb cmc xchg stc pop bswap daa mov bt mov clc mov neg pop mov bt stc push test sub call lea ret lea call pusha lea ja pushf lea jae inc mov pushf inc pusha mov lea pusha pushf lea call pusha pushf call pushf push lea je clc push sub push call cmp shrd push and ror movsbw mov or not bt push adc rol bswap push btc shld push xadd not shl not push inc xchg sbb sar push stc btc mov shld mov call shrl icebp mov test cmp push and sub jbe push cmpsb jno outsb push addr16 jmp int popa repz aam push sahf pop int popf and push mov dec jnp repnz lds dec rcll fildl loopne scas sub in lds inc int3 cmpsb insb inc (bad) ljmp (bad) or daa or inc inc insb imul adc aas sarl mov ficoml cld inc lods jb test rorl cwtl add or push pusha movl pusha movl pushf pushl push movb lea jmp adc pop dec adc mov sbb test lahf in and aas in jge sbb bound jo inc and daa (bad) je arpl cmp imul in xor push dec add (bad) sub adcl in dec and cpuid xlat mov sub (bad) int insl rolb pushf ret or movsb dec test es movsb iret imul jmp (bad) lcall or lea call call stos ss mov mov push sbb js or cmpsb icebp (bad) lds adc into mov push sub sbb test out mov or aam dec inc out xchg cs xor cmp test (bad) es andl jns int and cmp push push sbbl adc mov or mov cmp dec mov fidivl lods repz hlt mov idivl xor jns stc sbb pusha pusha int jae jno (bad) or cmp sbb adc mov mov test inc xchg pop ffree stos adc pop les jne adc das rol stos aaa test lds and stc (bad) xchg xchg imul jnp stos sub (bad) mov fwait addr16 ret push outsb and stos leave inc lods xor mov dec lea cmp inc and incl mov psrlw mov mov jns pop add fisub (bad) stos in adc movsb xchg and xor lds mov in rcr sub mov mov int3 xor add push insl cmpsl test faddl test inc or das iret jbe push push jns in cld out int3 test sbbl (bad) xchg ja das xchg fadd mov fidivl imul scas dec sbb mov repz mov hlt mov sbb lods icebp mov xor and gs mov push int3 cwtl aad xchg jo xor out scas insb or fnsave and lock push xor mov dec push stos rclb mov fidivrl push daa cmp dec les sbb xor sbb fnstenv orl adc pop cmp push shlb adc (bad) sub (bad) stc cmp clc stc sub jmp out jp cmc mov adc mov cmp aas frstor or iret gs addb inc daa cs cltd mov pop mov push inc cmp movsl cwtl fs mov inc (bad) (bad) addr16 mov cli jne dec mov jnp or pop out into or ss jge test arpl xor cs cld dec das bound andw out popf test mov add fisubr lds icebp imul push xor cs insb add mov jno add sahf fnstsw dec mov pushf lock inc sub or faddl pop mov dec xchg push and dec pop adc mov test test push add cltd add adc cld movsl jo idivb std pop xchg dec push stc popf mov fldcw add add add (bad) stos add add add and add add pop add add add cmc fwait add add add mov mov add sub add aas mov add add add add and mov (bad) decl test (bad) jmp mov enter sbb mov jmp jmp lea je pusha mov pushl cmp movb lea je bt call mov lea jae pusha sub movb lea call jno pusha pushf lea jae call jmp adc call lea je pushf mov push pusha lea jmp (bad) mov mov fsubrl jno orl xchg idivb mov or and xchg je push mov inc sub out cmp insl popf pop loope adc sbb or push shrl cmpsl push and mov inc fiadd (bad) sub cmp stos mov mov push jecxz mov jbe jg and loope call dec js mov push in aas cld shlb sti mov pop lods insb jle,pt lcall into push aad add cld shlb out out mov shrl mov leave (bad) faddl sti mov inc pushf cs mov pop add pop les mov mov and test mov push ja gs mov sbb cmp jp fisubr push jne arpl jns jp or daa shrb fwait loop push std dec mov mov xor das jbe adc and mov (bad) sub rorb rorb and xor mov push pushf mov dec call outsl aad outsl daa js xchg test sub or xor rcl pop push data16 mov add (bad) mov ficoml test inc mov aas mov orl pop push pushf pusha pushf pushl ret push mov push pusha lea jmp rcrb stc mov mov cwtl imul and pop mov (bad) pop cmp scas pop jns in cmp (bad) mov outsl imul mov int3 push das adc dec out pop idivl test mov mov adc sub fcoml add sbb xchg sub sub inc mov pusha dec jmp into dec iret stc mov std (bad) xchg fsubs cwtl fsubs ljmp push mov jns sub pop cmp nop push dec fwait jmp mov push lock mov dec pop (bad) fldl mov add push lock fistl int3 mov push fst mov jl add add inc popa xchg cwtl xor jne pop mov or sub cmp test pop inc movsl out adc mov arpl adc or (bad) cmc (bad) push nop cmp mov jl pop cmpsl cmp mov subl pushl inc add cmpsl jp xchg and jne sbb mov frstor and ds addl xor xor (bad) adc lahf mov das xchg es imul sbb xchg inc (bad) mov fbstp and subl mov (bad) or ljmp push mov sbb (bad) out fidivrl xchg sub mov xchg fs testb sarb pop mov loopne dec inc cli inc and sub (bad) cmp pop push insl pop mov jo js or mov scas fadd rcrl imul inc push stos out inc dec aaa sarl mov orl sbb es out (bad) imul sbb mov sbb mov mov daa cld cwtl add add sub sbb call pop dec xchg sbb mov dec pop mov push mov jmp ret push js out ja cld pop mov xchg push xor lds jb addr16 adc repnz pop mov and adc pop and adc add outsl and add xchg xchg add pop mov outsl pusha (bad) cltd or add pusha sbb inc (bad) cmpsl cld outsl pusha lcall mov ficoml mov xchg add xor imulb sbb test nop jecxz mov pop add xor stc outsl and mov sbb iret outsl mov adc ror lret outsl and out aam adc add lcall or std outsl and or push or andb outsl pusha adc push xchg add gs outsl mov and repnz pusha sbb push insl add push mov outsl pusha fisubrl inc lahf add lock pusha lcall xor aam and stos mov movsl iret outsl pusha lcall dec cmc fldt sbb pop jb add dec hlt aam pusha lcall or ficoml add cld outsl pusha (bad) push rolb add add imulb fimull add add add aaa add or inc loopne std outsl pusha sbb or das add (bad) in fsubrl pop movsl sarb cli outsl pusha fisubl or dec mov outsl pusha fiaddl jae lahf add sub adc add cli outsl pusha fimull movsb mov cmc shrl imul cli outsl pusha fimull movsb int add push add outsl pusha (bad) das lods testl outsl pusha fisubl add cmc outsl pusha fcmovu fcmovu pop add hlt cli outsl mov test andb orb add adc fisubr lcall xchg cmpsl fisubrl lcall pusha lock outsl pusha fcmovu je and shrb clc outsl pusha lcall movsl test mov rcrb sbb inc hlt stc outsl pusha fiaddl loope add loop stc outsl pusha lcall xchg std mov adc repnz push adc and mov repz sub scas notb fcomip (bad) mov test xchg sarl sbb js dec xchg add dec adc xor sbb pop push frstor push pop mov xlat js mov daa repnz and stos mov inc mov rol cmp jns mov xchg loop mov movsb outsl aaa test popa cs cs gs inc mov rclb adc adc repnz mov xor mov fs mov xor fwait out out push cmpsb mov (bad) out push repnz test mov cmp bound shrl in dec pop out push cmpsb dec xchg jb mov xchg push push xchg xchg push daa inc mov jo mov cmp jmp mov mov imul jne add sbb pop and pushf xlat aas jnp cs iret cmc cmp fildl or mov and ss mov ficompl out mov je hlt popa loope shrb sbb and lahf out push cmpsb adc jmp dec popf ljmp add jae or in out daa or sub (bad) sti pushf xchg pop adc loopne lret dec sbb mov sub adc jb xor dec ds insl dec lock pmovmskb data16 insb jno lods pop daa imul leave divb repz jle (bad) inc enter fmull rcrb orl (bad) (bad) call stos inc and addl ds jb pop sub ja mov movsl lock (bad) xchg fsubl mov mov jns psrlw repz push (bad) or fsubl push mov sub test ds (bad) into pop fnstenv pop lahf fsubl test aas dec and orl xchg mov sub mov and xor xor cmp push sti push out adc imul add (bad) mov icebp icebp fsubl repz movsb out loop enter inc and mov xor cmp mov hlt enter in ja aam shl cmpsb in xor repz stos fs mov mov push push cmp pop and enter adc in pop std or cmp mov mov jb dec xor mov hlt mov ret clc dec repz repz or iret lret xor std enter clc pop ljmp cwtl pop jge (bad) and inc in mov adc (bad) scas icebp pop cltd loope sub jo,pn ja jne add scas cli inc mov pop popl loope mov cwtl in (bad) mov cmp push pushf jmpw mov scas pop cwtl clc rclb xchg jle clc fidiv int3 mov xor jae repz fsubr sbb pop jno loope es push cmpsl lea inc mov jge rcr out or pop mov lret movsl lea jp popf dec pop adc cmp cltd inc leave xlat xchg cmpsb sahf pop hlt xchg je mov rclb fs pushf pushl ret pushf mov pushf lea call push movb adc lea jo pusha pusha pushf lea jae pusha mov pusha jmp dec inc push dec inc dec xor cs insb add stc pop cmp call inc inc not movb inc shr or pushl xchg cmc shr sets adc mov dec mov call lea jae push pusha movw pusha lea jne jmp ds jg mov (bad) loop outsl pushf nop add scas mov rorl jbe sub adc sub (bad) jno (bad) mov (bad) out mov movsb stos or fucomi call push push jmp test stos xchg xchg pusha mov mov mov adc out and push rolb push sti (bad) dec mov sbb adc test adc mov inc and std fwait sbb pop jnp loopne in leave outsb jbe xor xchg jecxz (bad) adcb dec dec and mov in stc xchg add adc push pop test jl cli pop push aas in pushf mov mov lds cld mov insb scas xchg push enter inc pop out mov sbb or mov js jmp sub xor aam fdivr or out daa dec sbb cltd pop call nop arpl mov sub mov and xor sub push scas insl mov fldcw xchg cmp aas mov sarb movsb dec cld xor jmp inc lea add stc std notl sub stos imul inc sub jle jno mov out xor popa xor sarb mov (bad) sub (bad) fcoms cld pop sti ret call out adc mov adc sub cmp fdivr in dec mul jae addr16 mov lret test mov pop mov mov mov sbb dec nop repnz sub mov setne sub push sub or sub aam arpl imul and nop mov pushf pushf lea jmp call mov mov mov (bad) mov mov mov mov mov cmp cmp (bad) mov and mov (bad) mov mov mov mov (bad) cld mov (bad) (bad) mov mov mov and and (bad) (bad) mov mov (bad) mov mov mov mov mov mov cmp and mov mov (bad) mov mov and mov mov (bad) (bad) mov mov mov mov mov mov mov mov mov mov (bad) (bad) cld mov (bad) xlat pushf pushl mov jmp movb lea jae pusha jmp dec out in mov and dec push xor add xor dec sbb or std inc stos inc imul sbb lret xchg (bad) jno and and loope cmc jae pop cmp cmp inc movsb push xchg jno and jmp push cli inc mov das pop sub lcall jmp xchg jge add and (bad) (bad) mov mov mov mov sub mov pop in inc sbb pop stos cmp sbb sahf mov mov sbb enter stos clc aaa std mov dec icebp notb inc or movsl loope je (bad) int cmp or or mov adc adcl ret push movw lea jmp (bad) gs ljmp mov mov mov add mov or push iret or push push jae add lods js cmpsb insb inc (bad) icebp cmp pop (bad) mov out in jae xchg cmp divb xor out insl cltd or (bad) bound cli sbb sub aam aam cltd mov cmp jb stc jl (bad) adc ffreep push jb mov cmpl daa scas test outsb xor inc xchg mov int3 gs lds shrl add popa insb inc insb insb outsl arpl jmp lock ds mov mov mov mov insl xor push iret xchg aam decl jmp mov paddb rcr jns je sub pop push in mov mov pop rcll test push sbb dec jnp fdivs lock repz sub cmc test lods jb lock sarl fcomps sti jnp popf fwait insl mov fucomi cmp test pop cld (bad) out sbb aas cmpsb in mov fadds push mov ja popa std and cmp rcll sti les sub mov lds adcb lods jg xchg (bad) lret xor xor arpl aaa add mov cmp test ret (bad) jmp cld sub rcll hlt test out fcomps mov std sbb out mov mov int3 mov dec cmpsb insb mov jle sbb pop pop cwtl jbe imul mov movsb or je mov push fisttpll pop xchg mov mov push out fstpt lock adc sub sub stos mov in mov adc adc jnp pop add addr16 inc push dec sub (bad) fcoms xlat addb add mov fs xor push cmp cltd (bad) bswap mov rol shrd mov ror mov test xor call test mov setbe movzbl shr bt shrd mov call dec int jmp pop pusha sub or cmpsl addr16 int es int (bad) clc pop outsl (bad) lret ret lret fwait loope (bad) leave adc test adc cmp mov dec xchg lds pop test cli aas sub xor mov xchg aad (bad) call int xor dec or dec (bad) inc or mov sub (bad) or sub test adc js mov notl pop xchg cs call scas xchg jae call repnz pop xor pop in mov dec dec out pop inc out push cli cmpsb lds jmp sub xor fist push fwait xlat inc les out add loope cmp sarb jae jns js (bad) loop dec rcr enter xor push icebp imul inc fs mov cmpsl sti mov subl jmp lea je mov add xor sub neg shr rol neg rcl xor mov rol add jmp lea jne pusha jmp mov (bad) mov jle fwait jecxz hlt xor lret xchg stc jnp imul mov add sub cmp add outsl jmp mov mov jge push fstps daa addb arpl push add repnz mov aas xor popa and inc in mov dec jno hlt jg xor test pop add push clc push clc push call mov movb mov mov lea jmp push mov pusha lea jmp cbtw rcr aaa xor notl aad mov cmp sub pushf pushf and pushf pusha mov jmp xchg movzbw pushl popl rcl movw movl movsbw mov movb bt ror pushf movb mov lea jmp jmp push jmp mov push pusha cmc ror pushf movw lea jmp mov push pushf push pushf lea jmp pushl popl push pushf movb lea jmp jmp mov call stc add pushf mov pushf mov mov mov lea jmp sub pushf push mov mov pushf pushf pusha movb lea jmp push push pushf pushf popl mov mov pushl popl pushf lea jmp mov call sub cmp cmc stc add push pusha call mov rol test xor pusha cmp cmc test sub lea jae mov jmp dec jmp rol pushf cmp sub clc test pushf cmp sub push pushf mov pushf push jmp movsbw mov cmc movb pusha call mov clc mov cmc pusha xchg btr bts cmc call pushl mov mov lea jl push cmc push call mov jmp push repz popl pushf mov pusha movw mov call pushf popl lea je push pushl popl pushl lea jmp sub clc stc jmp movw pushl popl mov movw lea jmp pusha sub pusha add jmp mov cmc bt mov pushf push jmp push call call pusha call mov push pusha movw lea jmp cmp bt xor clc test mov bt stc movb sub push jmp jmp xor not mov cmp cmp jmp ror push pushf lea jmp dec movsbw jns push movzbl mov inc add jns bsf (bad) repnz jmp repz call pushl popl rcr cmc btc not movl cmc call mov mov mov call shr movw pushl mov pushl movb push movb pushf popl call stc bt ror push lea jmp push bt mov call pusha mov repz popl stc pushf mov jmp bt push bt mov pushl jmp sar sub shl movzbw rdtsc clc sub call test stc call jmp pushf mov clc call mov mov pushf jmp jmp call or lret mov ds mov cltd loope mov xor lret mov or lret mov sub std lret mov push cli lret mov mov lret mov pop or repz mov push cli lret mov ds mov shr mov mov lret mov cltd loope mov push ljmp push cli lret mov lret (bad) mov adc lret mov adc lret mov sub lret mov push fmulp mov push jecxz mov or lret mov mov fmulp mov mov fmulp mov mov fmulp mov cltd fmul mov cltd fmul mov cltd fmul mov cltd fmul mov jl lret mov or lret mov or lret mov add lret mov (bad) mov mov lret mov sub lret mov add lret mov scas fmulp mov scas fmulp mov out lret mov out lret mov push jecxz mov shr mov (bad) jecxz mov jge lret mov in loopne mov adc lret mov mov lret mov out lret mov mov lret mov push cli lret mov (bad) fmul mov or lret mov ds mov push ljmp (bad) fmul mov jl lret mov jge lret mov add lret mov and lret mov adc lret mov or lret mov push jecxz mov add lret mov mov fmulp mov cltd loope mov enter ds mov sub lret mov pop or mov jecxz mov repz mov mov loop mov nop cld lret mov das (bad) lret mov in out lret mov or lret mov mov lret mov add lret mov mov lret mov (bad) jecxz mov int3 loop mov mov fmulp mov mov fmulp mov mov fmulp mov cltd fmul mov cltd fmul mov cltd fmul mov cltd fmul mov adc lret mov (bad) jecxz mov add lret mov add lret mov das (bad) lret mov cltd loope mov scas fmulp mov push cli lret mov (bad) fmul mov push jecxz mov adc lret mov mov out mov jge lret mov (bad) fmul mov out lret mov or lret mov mov lret mov or lret mov cltd loope mov mov in mov lret (bad) mov pop or ds mov xor lret mov out lret mov jl lret mov or lret mov (bad) out mov shr mov add lret mov push pusha call mov pusha clc bt mov call clc push ror pusha mov push movb lea jmp mov bt mov jmp push call inc push setb inc shl (bad) testb xor movzbw cmp sub xor inc add cmc test dec sub mov push cmp add pusha mov mov pushf push lea jmp mov lea pusha pop pushf popl call pushf pushl popl pushf pushf mov lea jmp neg cmc clc clc pushf not pushf bt movb jmp bt add jmp bt mov push jmp stc mov rol ror pushf sar mov mov movb not pusha movw jmp clc clc stc xor pushl add push mov mov push pushf pushl ret mov shld mov data16 icebp or rorl lret icebp adc lds cltd shll loope adc sub pusha sub lea mov cmp shl call push pusha pusha repz popl mov mov clc stc movb lea jb push cmc clc push cmc stc call jmp pusha sub cmc mov pushf shl mov call push or mov adc dec rcr mov mov pusha jmp pushl popl pusha lea jmp call lea movl bswap clc mov clc cmc clc ror push lea jmp push ror pushf pushf push mov lea jmp push sub mov push jmp pushl lea mov movl pushl pushf lea jmp pushl not pushl popl movzbw movl push rcr btr mov clc pushf ror mov pushl pushf lea jmp lea jns bt test add pushf movl pushl lea jmp pushl popl mov pushf pushf pushf lea jmp pushl popl mov lea jmp movl push mov movb push pushl ret bt lea jo push clc bt push clc stc push pusha jmp lea pusha call ror mov lea jmp movb call jmp mov pushf pushf lea jmp mov pushl popl mov mov mov lea jmp call movl sub jmp movw jmp mov pushf lea cpuid jmp shr (bad) icebp add lds clc shrd pusha lea jnp mov pushf pusha movl pushf popl movl call repz popl movw push movb mov push mov mov jmp rcl push rcr movsbl push push mov pusha push bswap bt xchg call sbb mov cmp pushf call mov cmc jmp rcl mov movb jmp movsbl jmp mov cmc pushf mov jmp call pushf cmc push mov pushl call mov clc cmc cmc push mov rcl push pushl popl bt btr call mov mov push pushf pushf popl pushl pusha push pushl popl pushf pushf mov mov lea jmp clc cmp neg cmc bt bt jmp jmp mov call cmc jmp call mov pushf mov pushf pushl movw pushf lea jmp xchg xor pushf btr mov sbb stc add pusha movb movb call mov clc call mov movb mov movw lea jmp test cmc clc sub call cmp pushf mov pusha pusha clc sub pushf pushf lea jne test cmp jmp push pushf sub clc jmp jmp mov mov mov call call mov push mov movb movb pushf movb lea jmp jmp push repz popl call rcr add mov call add cmc stc shld push mov jmp clc bt push jmp pusha jmp pushl popl movl pushf lea jmp sub pusha cmc cmc jmp pusha mov pushf movb mov clc stc bt stc mov stc clc call call pusha pushf movb mov jmp push pushl popl mov lea jmp call call clc sub call pushf pusha mov pushf push mov push lea jmp mov pushf pushf lea jmp pushf sub push bt test shr mov mov lea jb pusha pushf popl mov call mov jmp cmc mov bt cmc jmp jmp pushf mov pushf bt mov rcr movw clc movw pushl popl not pushf clc not movl movsbw bts mov jmp adc add pushf ror sbb and pusha shl shl mov mov sub call mov push movb lea jmp lea ja bsf shld aas test mov daa lea add sub rol lea lea and inc cmp sub jmp pushf lea jne stc cmc sub pushf xchg pushf pusha movl pusha mov mov pushl ret jmp clc stc ror pushf push pusha mov lea jmp jmp lea pushf movb call not clc pusha test pushf sub mov bt push cmc and pushl jmp inc shl xor bts bt bt sub shld sub neg add bt and mov stc clc add jmp movb pushf popl pushl pushl popl pushf pushf pusha lea jmp pusha jmp pushf mov mov lea jmp cmc bt stc xchg cmc push cmc mov cmc sub jmp rol xchg dec cmc mov pusha not mov cmc sub jae push mov sub bt shl movb mov jmp mov jmp xchg jmp mov pushl mov pushl pushl lea jmp cmc mov clc mov cmc clc mov mov jmp test neg jmp pushl popl call jmp clc rol shr mov pushf add call sub jmp mov clc ror pusha lea jmp mov pusha pushl popl pushf lea jmp bsr rdtsc aaa sar mov bswap bsr mov bt stc bt add je pushf mov pushf pusha pushl lea jmp (bad) lock lock pusha jmp pusha movb mov pusha push pushf lea jmp jmp cmc sbb mov mov test bsf bsf mov bt add push call mov pushf mov movb mov cmc push pushf mov call and mov shl xor neg xor cmc neg mov sub movsbw btr rol setge btc xor test dec test movzbl stc mov push or movb lea je jns bt push sub add jge test xchg pusha mov pusha call stc push mov movb mov pusha pushf mov stc pushf mov clc pushl mov mov mov ror pushf pushl popl bswap bts call not movl btc push bt movzbw mov pushf clc push ror pusha pushf push lea jmp movl rcr ror bswap mov pushl call pushf popl call call mov push jmp jmp not test test stc and call jmp pushf push lea jne add shld rcr test xorb pushf setp pusha movzbw mov movb lea jmp mov pusha lea pushf pusha mov pushl pushf lea jmp pusha pusha pushf repz popl pushf clc stc call rol movzbl pushf xor cmc test pushf test sub mov cmp cmc neg push movw pushf dec jmp jmp not call jmp pushf pusha pushl popl pushl lea jmp jmp daa movzbw shr btc mov call mov jmp push call mov cmc pushf cmc bt mov bt movb clc mov not call add mov lea jmp mov pushf movw push lea jmp clc cbtw stc cwtl bt stc sub jmp pushl movl push call bswap mov pusha mov call test mov clc clc sub pushf push call mov push inc pushf pushl push pushf lea jmp jmp call add movzbw rcl mov dec mov jbe bt not stc cmc clc not cmc and push mov pushf call call mov movw pushf popl jmp mov pushf mov pushf pushf clc mov mov mov stc call pusha jmp add add cmc pushl popl push rcl movl rol jmp push stc stc pushf mov stc call mov pushf pusha clc mov mov clc jmp test stc shr pusha or cmc stc xor call bt bt mov stc clc mov cmc jmp shr mov setae dec mov je sub pushf movb cmc call mov pusha pusha pushf push pushl ret xor add jmp mov call push bts mov inc inc sub call pushf popl jmp mov mov pushf call pusha pushf mov movb lea jmp shld mov not rcl pop inc aaa cmc call xor bt bswap bt stc pushf add clc jmp pushl stc mov jmp jmp mov call bswap dec shr movsbw not shl xor rcr mov stc add cmp pushf cmp mov movb test sub push push pusha lea jmp repz popl jmp call sub add or movzbl bt clc xor cmc xor pushf neg jmp cmc cwtl test clc call jmp xchg call mov movzbw movzbw mov pushf pushf mov pushf pusha push mov pushf mov lea jmp mov pusha pushf mov pushf popl call push pusha movb repz popl pushl bt clc mov pushf stc call call not pushf movw clc bt rol test sub clc cmp jmp repz push push bt clc mov bt bt mov mov cmc push pusha mov pusha call jl pushf repz popl pusha push mov movb mov stc stc stc mov mov cmc mov pushf cmc push mov cmc mov pusha mov push lea jp push cmc call bt cmc add movb pusha push call mov mov jmp mov cmc clc xchg movzbl btr pusha pushl popl ror movl movsbl clc mov cmc cmc ror pushf push lea jmp pushf pushf popl push pushl popl push mov lea jmp push call test sub bsf shrd mov rol cmp stc stc mov jo pusha pushl test add movb call mov cmp movb clc sub pusha shl pushf jmp mov pushf movzbw lahf movzbw mov jmp clc push stc stc mov bt cmc push clc stc stc clc push bt call push repz popl call jmp setno movsbl mov call jmp sub pushf call pusha pusha pushf popl movw call inc mov push lea jmp xor mov xor jmp pushl popl pushf lea jmp pusha push repz popl bt stc jmp mov jmp push bt jmp pushl popl not xchg rcl btr movl pop rcl btc mov bswap ror lea xadd sub jmp stc mov clc call pusha sar rol jmp mov pushf pushl movw pushf lea jmp pushf popl call inc jmp clc pushf call mov pusha mov call mov aas lea and adc mov xadd or mov pushf cmp mov cld mov bsf mov pushl mov or bt xor call jmp pushf inc stc bt xor mov cmp cmp call mov call shrd dec mov test pushl bt add pusha mov mov mov lea jmp mov pushl popl call data16 (bad) shll mov clc mov and pusha shr mov mov jmp movw push lea pushf jmp push repz popl cmc cmc push clc jmp pushf mov pushl popl pushf pusha push lea jmp mov neg mov bswap clc shl xor stc bswap or cmc sub cmc neg call clc bt mov bt pushf clc mov stc pusha mov jmp mov cmc mov pushf cmc jmp pushf movsbw setae movzbl pushf pushf inc not clc add pusha movzbw inc btc rcr shr push xor movzbw adc inc sbb sub rcl (bad) not movb jmp movb pushl pushf inc mov call pushf repz popl push clc call and sbb mov test jmp mov pusha call clc mov cmc bt cmc bt mov jmp pushf pushf mov push pushl ret pushf popl lea jo push pushl popl movb push pusha lea jmp pushf mov pusha call cmc test add jmp mov call cmp pushf shr call pushf jmp mov btr mov std std pushl popf pushl mov push pushl ret push push repz popl cmc pushf mov push mov call mov mov movb mov movw lea jmp pushl mov pushf lea jmp pushl popl cmc push rcr movsbw mov stc bt pusha ror pushf lea jmp not neg lea bt mov test stc pusha add pushl mov call rcl movl rcr cmc mov jnp stc push ror pushl pushf lea jmp pushf pusha mov movb movw mov lea jmp push bts stc mov mov cmc bt add jmp pushf divl jmp mov pushl pushf lea jmp jmp pushf stc cmp movb movb pusha call call shl pushf pushf mov mov lea jb pushf push pushl popl movl mov pusha lea jmp pusha jmp mov lea jne jmp cmc stc mov call pushf popl push jmp call stc mov cmc mov clc xchg bswap pop bt clc pushl popl bts movl pop mov mov call call movw push stc mov pusha mov call movl clc rcr mov jmp mov pushf mov pushl lea jmp pusha repz popl cmc mov call call pushf and bt pusha cmp jmp not cmp mov shld mov rcl call pushl mov mov stc jmp cmc mov pushf mov rcl pushl popl movw pop pushf movl pushf btc mov jmp clc cmc mov bt call add jbe neg cmc stc cmc rol push xor pushl sub push mov mov call push mov call test xchg jmp movsbl cwtl pusha movzbw mov movzbw call movb mov movw pusha pushl lea jmp jmp mov pushf pusha cmc mov mov pushf cmc mov ror pushl popl btc btr pop lea movl bswap mov bt rol mov pushf cmc ror pushf lea jmp pusha pushf ror cmc mov stc xor movw cmc stc clc sub stc cmp stc test mov jmp pusha call rcl mov pushf pushf jmp xadd rcr mov or shl shld mov cmp add pusha pushl mov mov mov pushf lea jmp pusha movw mov pushf pushf push pushf lea jmp pushl pushf mov movb pushl bt bt mov cmc push jmp bt mov pop pushl popl pushf mov rol call cmp call call pushf popl call mov jmp pusha mov movb pusha push lea jmp cmc call mov push pushf movb push lea jmp stc stc mov clc stc xchg rcl pushf bswap pushl popl stc movl pushf mov movb cmc stc clc ror pushl pushf lea jmp jmp cmc sub jmp bt add push push lea jmp pushf lea jne test jle pusha sub pushf movw pushl xchg call shr not add movzbw call mov cmc clc sub jmp pusha jmp cmc clc rol cmc xor clc cmp add clc call mov pushf btc rcl movzbw pushl popl movsbw bswap btr movl btc lea cmc mov call push shl call mov sbb mov rcr rol mov jmp daa mov (bad) icebp setbe cmp test mov pusha call pushl pushf popl push mov call jmp aam mov bswap btr mov bt call jmp pushf call bswap mov std bswap call decl movw call movzbl call bt mov bt xchg rol pop pushl pushl popl lea pushf movl clc mov stc clc ror movb push lea jmp mov push push movb mov movb jmp push movsbl mov push lea jmp shl ror or mov bt add push pusha movb mov movb jmp mov stc bt stc mov pushf pusha clc mov jmp call bsr movzww jmp pusha dec not stc add pop call pusha movzww clc bt sub clc call push lea push bswap jmp jmp stc push mov pusha clc mov call call movl push jmp jmp shl sub mov jno mov pusha add jmp cmp cmp jmp clc pushf mov clc push cmc push mov bt call movl movb ror movw lea jmp lea jne call cmc stc push pushf mov ror pushf bswap mov stc xchg push seto jmp cmc pusha pusha add cmp pushl popf movw pushf pushf movw lea jmp jmp jmp pushl popl mov lea jmp jmp xor ror rcr mov and rol pusha add setns call movb pushf popl pushf movb pushf pushf pushl popl mov lea jmp rcr clc test lea call rol pushl popl pushf btc movl call mov pushl push push lea jmp inc pusha push pushf pushf lea jmp pushf jmp pushf push pusha mov pushf movb push movb lea jmp cmp sub jmp xchg pushf mov call test cmp sub bt cmp cmpl pusha pushf pusha mov push mov push jmp bt mov add shr mov pushf pushf test add pusha lea jbe mov push mov pusha mov lea jmp mov stc jmp jmp movb mov clc clc push pusha pushf push clc mov clc mov bt xchg movzbw pushl popl pusha movl clc pop mov push ror pushf mov pushf movw lea jmp mov movw movsbw call btc ror and sbb bsr cmc and pusha clc cmp mov pushf clc pushl add push push call pushl popl push pushf lea jmp std pushl mov pushf bswap mov push std mov push cld movb rep shrd mov clc cmc shl cmp mov cmc pushl popf movb movb mov lea jmp clc pushf add movb pusha call mov mov lea call mov stc cmc clc bt xchg rol bt stc push pushl popl call jmp cmc jmp pushf popl jmp rol ror movzbw mov (bad) testl ror bts mov xadd shr pusha mov btc xchg push add sub (bad) icebp add rolb push movsbw bts push sub bsf ror shl neg sar rcr shl neg add and test cmp xor shrd pushf and neg sub pusha test sub clc movzbl movsbw not mov call bt ror mov pushf pushf mov lea jmp add add add dec rolb adc add pop add add push add lock add add push outsb add mov 