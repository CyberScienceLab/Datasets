scas fidiv sub push fstpl pop push pxor pop or out outsl xor fcomip xlat movsb clc push push adc mov inc mov push jl push pushf bound pop adc outsl add xchg sbb pop loopne enter (bad) imul test cmp ret test adc mov lock or jge lcall push mov ljmp loope div fs sbb cmpsb jmp sbb iret push mov inc jp js xchg call ror mov add mov mov adc mov es js mov std sarl xchg imul icebp sbb inc imul movsl mov js or imull jb push cmp add mov xchg bound fs jmp dec inc push dec inc dec xor cs insb add test roll pushf mov setb movzbw lea mov pusha movzwl movzbw pop bswap lea lea call push movl movb pushl popl mov pushl ret mov inc mov dec pushf inc neg xchg movsbw adc mov add inc inc pusha mov bt xchg adc not mov pusha stc sub push rep pushf mov movw movw lea jmp ss outsb fnstcw jmp addr16 inc sub iret stos xchg dec dec add and mov lret aam lret in (bad) push pusha cld sbb lcall les lods jno mov add adc adc ja add out popf jne push sub mov les jp dec and inc loop push inc jmp pop pop cmp (bad) jb sub push pop pop or mov inc in (bad) mov je ret push and fyl2xp1 sahf mov sbb ds iret mov pop loop jo inc dec dec add push lods roll mov pusha and fldcw and je push pusha push lea jmp sbb or jp fistp jp jnp divb mov xor popf aam xchg mov cs inc stos mov jecxz mov cmp mov arpl test xor int3 pusha inc add int3 movsb je stos (bad) mov inc cmp sub clc mov gs fcoml push test aam in jp sub cmp loope leave pop xor cmpsb (bad) int3 jl or mov mov pop sub movhps mov or ljmp jae cmc cwtl in push push fdivl jl adc push das repz mov dec push xchg jo loop leave into rolb das (bad) stos js pop ret pop sub push shrl mov bound pushf or mov es pop test sub pusha jmp xchg setne not setbe cwtl movl call stc add jmp mov jp sub movsl pop and inc aas sbb lcall aas add jp push jo mov rorb ret push repnz scas push jle xor push dec (bad) xlat mov cs jbe repz sbb jno xchg mov jg cmp ret js xor cld mov pop insl or mov data16 dec push (bad) mov aam mov cmp sub clc in dec or aaa cltd add cmp cmp data16 loopne aad loopne or into cli rcll push jge ljmp cmpsl (bad) xchg jecxz inc call mov sbb mov lea jae call call test cmc add push pusha clc cmp cmp call mov push pusha mov pushf xchg not pushf movl lahf mov bswap mov lea call mov pushf pusha pushf pushl ret pushf call and cmp btr sbb mov jmp stc push ror clc add jmp xchg mov dec adc push sub lea jmp pushl popl mov pusha pushl pushl ret into je push (bad) jp aaa repz xchg jnp add ficoml aas out cmpsl jne add lcall nop sti mov dec mov push sbb test push adc stc fdivl insb xchg test adc xor mov loope dec (bad) int jo (bad) push rcr ja jg lods fwait rol pop or popa pop add scas scas sub xchg adc sti lock pop dec or int3 push and push push (bad) popa xchg push nop dec into push insl repnz fsts negb dec jp xchg mov jb jle int3 das jne sub test add or add not lea pusha movl jmp jl rclb adcl outsb xor clc int xchg jmp jae movsb push push out call jge and cmpsl lret xchg sub cwtl jo cltd or xlat imul into mov addl inc lret lods cmp popf mov pop (bad) sub xchg push rolb xor cmp and bound mov jbe mov movsb out mov std add lret ja mov sbb inc lahf ja inc xchg pusha adc lret subl aad cmp add popa pushf test push xchg mov test dec popa sub ret (bad) leave mov jns mov daa jmp jmp into fistpl push in pop rcll ret ja push and cld jmp cli loope gs push sub cmp test dec push xor jae ffreep dec or jp and neg jmp mov mov inc cmc lret inc imul push pop mov rcrl or pushw stc push adc std pop mov lods imul loopne inc sbb stos jb dec xchg inc shr rorb mov xor lea push cmp call mov mov data16 sbb mov sbb sub sbb icebp out jp pop inc mov rcrl and or mov adc stc test pushl lea je bsf add cmp clc mov test pushf cmp add pusha movb mov neg btc mov pushf call lea jne bsf aad xor mov rcl das mov shr call pushf call inc dec setge call jmp lea je jmp setge clc shr call cmp cmp jmp push jmp in cmp fstpl push pop add mov stos ja inc lds mov aas fsubp dec push pop push dec adc cmp and out xchg (bad) jne sti lret pop (bad) dec dec idivl pop fucomp push pusha pop jb sbb test arpl lds icebp call ds or jno push ret push daa (bad) cwtl pop movsb sub loopne adc cmpsb add sbb popl iret mov pop jecxz mov cmp push aaa push aas pop ret mov into pushf outsl cltd popa imul shrl (bad) mov or lahf push hlt sub or popf sahf cmp fidivrl or pusha mov call lea call pusha call mov call mov sbb btc clc sbb shr rcl or lea mov test cmp cmp or pushf lea je data16 testl mov out cld ror sub (bad) not ret not shr inc mov xor add cmp btc sub btc add bsr setg mov call push or pushf sarl pop or mov dec or ret jg and mov outsl inc inc cld iret ja lret hlt cltd adc dec jns add aad jl jl popf clts ret inc loopne adc mov xor imul xorl subl sti mov xchg lret cmp popl or add aad or push lds or std pop inc xlat add aam push jne pop sbb hlt add xchg pushf pop add dec inc and sub (bad) jbe enter sub fsubl dec push mov imul js add or jle mov shr sahf mov jp jl sub ror xchg test jge mov sub sarb fwait or xor mov cltd xor dec repnz js add rolb mov jmp lret dec xor scas inc pushf and leave cmp ja (bad) mov or xlat mov (bad) icebp arpl dec xchg xchg add test insl test int jp (bad) rcrl test lahf lcall jae inc sub mov (bad) mov mov xchg lcall aaa sbb fxch jp sub push xor mov jnp dec xor stos movsb and pop imul je or out enter std test push ds cmp shrl out xchg cmp and (bad) fwait mov loopne out jns jbe add push dec add popf movsl sbb mov aaa cmp jne nop fstp out imul sub sub sbb xor into jp aas xor fbld inc add fisubrl in repz insl mov add push test sub jmp jp or mov adc movsl xchg outsl push adc cmp imul xchg inc inc sbb call stc mov push mov sbb dec imul adc pop mov dec xchg nop or lods xlat mov adc mov jns stc fcmovnbe and push nop (bad) flds aad inc adc mov mov cmp aad pushf and xchg pop cmp mov push imul mov or jle (bad) jne mov sbb outsl sub (bad) rcrb mov xchg (bad) fldt addl mov xorb jbe push cltd mov lcall dec pop jecxz pop xor (bad) pushf pusha xor loopne mov xor das lret mov cmp mov getsec pop lods fcompl and adc mov std fldt popa fs loopne jno nop jle push cmpsl lahf sbb inc cmc sbb popa pushf int3 aam mov jae xor jo add jne pushw (bad) pop sti inc xlat mov sbb movsb fs leave mov loope rorb ja or adc mov and test ret lea mov stc clc shl call clc pushf cmp pusha pushl mov push lea jae pusha cmp movw call push insb jbe int int and jmp les into test push and lahf cmp fst xchg xchg repz mov and hlt stos sub mov inc ds scas xchg mov cld mov cld cld and sbb ja out jl call add mov cmc mov (bad) xor (bad) dec gs mov (bad) in mov xchg mov rcl mov fwait or nop xor dec mov rorb and cmp lahf xchg les xor cmpsb inc js jp fstpl push cmp lea test sub je dec in dec hlt loope xor (bad) mov sub or xchg aam push insl mov je std scas sti and mov and pop cwtl cmp addl jle (bad) dec data16 xchg mov jb dec adc repz mov imul leave stos adcl mov xchg sbb push mov lret inc pop fmul inc pushf mov or (bad) (bad) xor stos cmp pop in int sbb jmp mov or jp pushl cmp mov push cs dec lods bound adc adc xchg add jne mov jmp das inc sbb jae fwait xor pop jge cmp lds pushf sbb mov jns,pt sarl jne imul adc in stos call mov mov jle add fisubr mov cmp add sahf push pop jbe aad mov orb cwtl outsb pop aaa sub cmp push jno (bad) sbb test arpl dec push (bad) pop into or int3 outsb cltd ret lock and fcmove jp jg jle sbb aam jno sub or fidivrl xrelease or pop push sub (bad) sahf pop arpl mov add mov insl out adc and jno cmp cmp cmpsb iret test mov pop adc sub mov mov fwait popf stc jl xchg repnz idivl test mov sub cwtl xor or mov sbb mov out sbb or das dec cld adc jecxz and ja repnz mov lock lds pop es lret jp push sub mov lods adc xor mov push push xor and test or in pop jns xchg push dec xor and dec bound iret jae sbb imul add or mov mov cmp lcall test (bad) pusha not rcrl in leave add (bad) nop test xor mov call or adc ljmp add jp mov cmpsb add mov cmp mov inc sbb lcall out push nop bsr mov data16 cmp outsl inc ljmp (bad) icebp shll out cld xchg jmp push jmp (bad) jns push add pop adc mov (bad) stos dec pop (bad) mov xor popf mov mov popa call icebp test shrl ficomp add xchg xchg jo aad add loope pop mov push or (bad) ja div cmp movsb jae lea jb pusha bt cmp call sub cmc clc pusha pushf cmp pusha pushf jmp lea jne bswap movb cwtl push mov movzbw cwtl pusha lea jmp call nop (bad) jo jp in inc dec adc mov (bad) mov xchg inc inc ret xchg sti or xchg adc and inc ja jmp mov out dec adc xlat movsl mov lret xchg stos scas jg pop sbb cwtl sti adc jnp pop and xchg pop xor fwait add loop jg pop jl sbb hlt jno or add loopne (bad) int ret leave sub adc add pushf jmp pushf bt stc cmp pushf pushf mov lea je call add inc jb popa je push popa insb gs gs sub (bad) jmp stc add leave mov call bswap xchg not pop call add dec outsl arpl inc jb add mov icebp mov pop push mov not setbe bswap movzbw lea call jmp mov lods jecxz jp jbe loopne jns push mov cmp mov cmpsl push dec or test jge pop xchg repnz mov rcrb int ljmp ret cs test mov inc add xchg repnz imul imul movsl addr16 leave push jb test or cwtl rclb mov sub imul bound out loopne sub and pop sub clc mov sahf mov add addr16 stc pop sar out sub fdivp icebp gs or cld cmovle pushf lret scas xor test and inc movb and bswap jne bswap setae lea jmp pushf call bt call mov movb jmp pushl popl pushf pushl ret mov icebp mov ret jbe and dec (bad) int3 mov scas in fadds repnz (bad) pop dec xchg cmp mov mov (bad) lcall dec js sti jl xchg cmp push xchg sbb lahf hlt jae sarl fs sub cltd jg fstps aaa pusha add add cmp sbb mov dec dec arpl fs pop aad arpl repz add out dec jp sub sbb test xor push pop dec aad cmp add push mov push cmpsl mov fmulp cwtl pop pop add mov sti scas mov ja pop xor mov cmpsb mov dec add cmp mov xlat lret inc cmp mov lea jne push jmp pushf pushf push mov pusha movb pushl pushl ret pusha pushf movb mov push movb lea jmp sub js neg call call pushf lea jae cmp bt call sbb push adc jp inc xchg push or lods push push scas fadds outsb popf push sbb roll push bound in cwtl inc adc test xchg icebp lret mov mov xor jecxz outsb cmp cmpsl jg sbb pop pop sub imul mov or pop push in cltd imul jno push pop add xorl xor jmp xorb loope,pt shrl adc std nop mov cmp jp sbb adc (bad) mov push xor mov dec jb repnz pop xlat popa xor and mov js push push ljmp mov imul push lock and mov or mov jp insb push add inc sbb dec loopne mov out xor adc icebp cli mov (bad) movsl loop xor xor lock sbb mov adc adc pusha sub cld push dec dec adc inc xchg push cli iret dec push inc ror inc mov add jae ss push sarb xor xchg mov pop in xor bound xor call inc fisubr jmp repnz or repnz jp inc add lret push push xor cmpsl jno das sbb pop mov jl outsl pop int3 in jl mov adc data16 insb mov inc aaa add int sbb test fimull inc insl pop jno sbb cld xchg push xor push lret adc (bad) leave xor xor decb movsb ret pushf xor push push mov lods inc (bad) bound jnp out sbb jmp cmp iret cwtl sub popf imul int3 mov popf xor or xorl cmp clc jnp rorb pop lods mov inc add dec pop dec cltd js adc adc adc out imul fistp sldt pusha add mov lea jmp xchg popa imull jp xchg stc rcr pushf jns cmc fnop (bad) je das out cmpsl imul pop pop das test and sahf ret das inc jb lock xor inc fstpt ret out mov cmp aad jecxz std jnp pop int3 or inc out pop inc xchg stc rorl faddl scas sbb aaa popa add mov loopne lret adc (bad) or cli jmp jae inc out fstps lret stos dec dec mov cmp pop mov pop inc movsl daa test pop outsb nop (bad) adc xchg jmp cmc popf rclb std iret call xchg paddq jmp scas dec sbb ret aad clc (bad) mov dec ret aam das mov int or mov and or push jge out addl leave in je xor cmpsw pop and loope test sti ss lret dec add bound sub jmp popf jg pop popa xchg das int mov insl repz les ljmp xor aaa mov add adc xchg push (bad) cmp (bad) jnp loope adc (bad) (bad) inc cs push es stc nop push lahf ret mov mov inc pop (bad) jno pushf js dec sbb into ficomp lahf fidiv ret leave lods shlb jnp push out (bad) xor rol jg push jge jmp jp call sub pusha pop cmc pop or lret shlb inc adc adc nop dec xchg push (bad) xor xchg arpl mov out mov setbe test lahf jge xchg cmpsl imul (bad) loopne cmp add mov test xchg les dec push mov xchg cmpsl rclb js or into lods jne sub (bad) mov test jo jecxz sbb mov xchg adc jmp dec outsb dec lret jle add add iret mov and (bad) fildll mov jnp push xchg arpl jle pop fistp (bad) movsb and sbb jle dec fs stc lods dec jbe xor in fs sub loop aaa sub test pop inc pop movsl push je iret scas movl pusha jmp pushf call call push push pushf mov call pusha movl call clc not pushl stc cmp bswap setle lea lea pushl movsbw movsbl mov pusha jmp (bad) push int movsl ja sbb adc mov loope push out gs lret jne push cld push in leave adc (bad) fimull mov jb,pn add jb mov cmp mov loop test std inc cwtl mov bound sbb pushf adc push cmp mov fs pushf lcall cmp or (bad) push (bad) dec jb cmc outsl push fdivp addr16 cli mov fs popf mov ljmp scas push jle push loop adc push add xor pop mov sub ds jp (bad) in cs (bad) xchg lods inc xor mov orl mov or into mov ss out push out enter sub fwait pop sub jle rcl sbb mov aaa repz xchg aaa push sub test adc dec lcall pop sub loope inc insb or mov out loop mov or (bad) xchg add jecxz sub cli pop xchg clc pop and lret (bad) sbb fnstenv mov es xor mov jmp scas dec jbe pop push sbb dec arpl push fcompl xor sahf mov and mov into mov cmpsb js sbb xor les cmp cmp loop (bad) cld and add sub out add push ljmp sahf ficom and notb mov pop test xchg xchg out xor scas adc cltd cmp mov cs int std ja stc mov aas std and int push inc pop and adc imul (bad) loop dec and jmp int3 call inc ret inc and mov jns into inc jmp lea jne pushf call push push inc push xor cs insb add not call sbb dec je jp in jns fsubs scas lcall dec push adc mov push sbb jle fisttpl xchg repnz add pop andl xchg dec ss hlt dec movsl xlat mov mov xor push pop (bad) pop jle pop xor jg mov int mov stc mov pop push jbe in xchg xor movsb sbb adc push xor dec jg addr16 dec ja (bad) add outsl and loop int and test jbe bnd add repnz aas inc callw mov dec std adc mov jbe dec insl cwtl rcrb repnz mov int xchg pushf lea je test cmc clc test add push mov mov push lea jmp cld fmuls mov fcmovnb mov inc lcall pusha dec add shl jae aas into out jb add sub mov pop push out xor jl out adc mov xor push pop std sub mov inc outsl cmp push lea fild push lods or push push (bad) imul mov add shl je shll repz cs stos dec mov mull dec add xchg or and mov loop or push jp repz nop push dec outsb clc out (bad) mov mov mov xchg test pushf lea js cmp push mov lea ja pusha pusha imul stc call rcr shld shld push and rcr mov shr test push jmp add inc gs jns je insl inc gs jne je popa outsb addr16 inc add ror add add xor pushl ret clc mov jmp clc cmp lea pushf pushl jne ret mov lahf pushl call lea call pusha lea jne not bswap mov pusha lea jmp test pushf pushl push lea je jmp jmp shrb movsb mov xor popf jnp adc mov cli fcmovb lcall mov adcl je pop adc adc inc ret (bad) mov (bad) mov adc or sbb or outsl add (bad) sti rorl xchg mov incb jno mov das lods xlat insb rclb push pop sbb rorb cmpsb test and mov xchg cmp sbb mov adc jge lock stos out insb popa leave stos (bad) xchg scas inc push stc add push inc dec pop sarb gs mov orl sbb call xchg pop cli les push cli shrb (bad) push and (bad) xor pop xor sbb pop push loopne add (bad) addr16 dec push sbb xor mov jno cld push push sub and mov mov notl loop fsubrl cmpsl cmp lahf popf (bad) testb sbb jp xor shr or repz xchg jb and emms stos sub icebp test sbb pop push cld fmuls mull fwait pop xor mov mov mov add sub add mov dec std shr pop int pop or push pop push dec cs pushf mov pop push push xchg dec xor and rcrl fmulp popf xchg push clc sahf jle cmp popa dec push fimull lret dec std stc iret ds rcrb stc test and mov cmc pop inc adc into test das jno loopne enter inc roll test sub jmp out jnp pop sbb adc lea cmpsl xor cmp rcrb or lahf bound rorl std xchg and xchg mov inc push xor mov xor out or pop shr jmp dec ficomp and daa fs scas ret data16 adc xor push ljmp daa in mov addr16 xchg jo or fsub xor lcall insl push call mov lcall cmp int dec sbb ror jb sub xor fisubr dec jp jp xchg jecxz pusha push xchg roll in jae inc das pop inc (bad) notb movsb jl arpl mov push xor cltd ja pushf fwait (bad) outsl xchg mov xlat jmp xor fdivrl sbb xlat test jp enter sub scas xchg and (bad) iret lea or in ja aam xor sti fs mov movsl sub xor repz imul pop xor mov mov sub inc xchg scas jl adc in mov dec inc adc enter outsb add lock stc fldlg2 cmpsl cmp scas loop (bad) push cmp and mov addr16 pusha pusha add movl testb jp (bad) fsubl xor mov add mov pop es push pop push mov jl mov pop out fsubrs aam lea or movsl aaa or (bad) popf jno dec ljmp inc pop fadd add dec pop mov cmp mov mov adc add and (bad) addr16 xchg pop loopne scas push aas cmp stc jo cld dec or cltd popa dec mov xchg jle rol cmp jnp xchg lcall scas or xor out xor xchg movl dec (bad) (bad) stos mov mov lods jbe push aaa sub inc add (bad) div icebp pusha jmp pushl pusha movb pushf pushl ret sub xchg sub aaa pop or add xchg pop sbb into push adc mov inc inc pop sbb jmp xor icebp jae repz cmp int3 mov ja sar mov ret pop sbb hlt lods adc ficomp lcall std lret pop mov xchg push aas test aad dec aad es pop dec sbb inc xchg push mov mov adc (bad) xchg jb mov push or inc pop adc sti psubusb mov imul call push sbb mov es cmc (bad) pop add dec and leave (bad) ss (bad) int ficomp ret xor mov shrb xchg int movl pop add arpl xchg xchg cwtl fmul push xor add arpl js loop ljmp fimull cmp push sub fcomp inc sub sbb test icebp push ret ret sar pop or dec fldl sar mov push negb outsl repnz jg sub addr16 jge call jns xor xor inc pushf test sbb cmp aaa stos orl add jle jl xor mov jae mov and (bad) pop stos or cmp pusha bt stc cmp push push lea jae ror bswap clc (bad) (bad) mov cmp mov btr rcr bt mov cmp clc jmp sub movsbl mov lea stc jmp pusha mov lea jne cmp ror mov shld ror sub bt test call lea call push pushl pushl adc pushl lea jae pushf pushf lea jne pushf pushf stos pusha pushf pushf lea jmp scas pushf dec sbb or mov add mov mov mull jno push push mov cmpsl and mov js xchg dec xchg xchg sub clc pop adc movsb or jo inc in scas jnp idivb cmpsb iret pop loope inc inc add xor bswap pop adc in mov (bad) mov call xchg pop cli push aad jg int pop arpl repz xchg adc ret dec dec or jle frstor lea jp and sbb mov sarl lret iret call adc mov mov fucomi dec loopne data16 into in fisttpl and jp int cmp (bad) js cs (bad) (bad) mov test fdivrl pop cmp push push or and sub (bad) dec pop daa jmp dec xchg adc sbb dec sbb mov pop mov jle and xchg jno data16 fwait inc dec sub mov and sub (bad) xchg jo inc fistp pushf jmp movzbw movzbw mov pushf pushf pushf pusha lea jmp mov jp pop fdivrl adc gs jge sahf push xchg sub cmpsb popa addr16 lock push pusha ds cmpsl jae adc jmp out mov xchg daa loop int3 add xor xor popf imul push rorl js xor js pusha pop (bad) xchg lods bound stos xchg sbb (bad) cmp lret out cmp push (bad) nop stos xor clc icebp aas xor aas lahf add stos loope fistl rolb cmpsl addr16 mov int jl fist sbb sub mov sahf mov out pop push xchg js mov add push push xchg inc mov add xchg adc jecxz (bad) mov fwait jns out xchg fldt add js mov push sbb mov and ret clc xor in jae cmp jg imul mov cmp adc mov or mov mov cld jbe xor sbb jmp adc stos jg push mov ds adc subl test push push clc cli sbb sub pop inc stos dec jae insb and jp ficomp cmpsb je hlt int jbe or aam addb loopne mov call mov aaa mov push cmc mov sahf mov inc mov ja push repnz push adc stos jge fwait pop dec xor jns iret push dec jp test int das cmp sarb jo or xor aas aas or mov pop xchg sbb aam fistp xchg aam sbb ret xchg lret sbb mov (bad) sub call sbb xchg sub ss dec shll or xchg xchg fwait inc fisubr inc jo out ss adc aad jp cmpb movsl jo loopne jnp or mov sbb int imul push aam or push lds adc stos xchg push inc loope jbe (bad) sub or sahf divl and push (bad) push js in pusha aad movsl out adc add movsl jmp pop insb les mov pop xor cli and add dec inc mov push shl loop in sbb fdivl shrb mov hlt add xor dec mov push push jo (bad) repz mov popf bound adc mulb rolb xchg or lods iret nop push add lea cmc add pushf pushl dec pushf pushf movw movb lea jne sbb mov xor movsbw mov stc pusha cmp jmp inc inc dec xor cs insb add aam or bound into lock jp gs in push stc fnstcw lahf popa xor sbb adc daa dec test repnz fs sarb add jae clc mov repnz mov rcrb and stos pusha outsl pop out bound cmp mov xor push (bad) sbb cmp xchg call adc or subl popf push cmp lea or xchg sbb ficomp jbe jg cld mov icebp push cli mov mov mov cmpsl jnp mov test jnp sarb cmp (bad) dec dec cmpsl mov lock sub mov lcall mov xlat dec outsb lock and js pusha mov gs rcll push scas jp (bad) mov (bad) shrl sbb test leave les mov inc or rclb xchg jns add out frstor std cmpsl loop sbb dec adc xchg pusha loopne pop stc jmp dec xor sbb mov add pop jl and imul insl insb stos pop negl or lcall call jmp lea je call lock int fildll add je inc push add xchg pusha push and jge int3 movsl mov enter mov add std xchg xor insb add mov lock aad (bad) std popa xor inc lods jge (bad) mov or out mov (bad) mov fsubrl adc fcmovne or xor je aaa call push stos jmp aam push pusha aam test jle jns lods jp ds mov push adc cmpsb data16 mov mov mov gs sub ret iret int3 mov mov xchg ret mov mov insb mov dec bswap (bad) cmp lret (bad) jo mov and push cli mov adc ss aaa jmp pop inc push cmc lret fbstp push loope outsl lret decb popf pop cltd xchg push loopne inc xor sahf pop and adc or mov dec and xchg xchg add lret divb push out daa outsl sbb fucom xchg mov in mov mov outsl xlat dec loope pop dec inc push (bad) test pusha lea je call pushf pushf jmp jb push sub cmpsb je dec ds rcl mov mov call gs fwait mov ss xchg xchg xor sub sub adc inc sbb adc mov adc push cmp cltd mov inc gs inc fldenv jo or stos jne in pop and icebp jecxz pop sahf cmpsl xor pop xchg mov fwait xchg jl das inc sub jecxz (bad) test (bad) pop jnp cmp sub aaa mov scas outsb xchg mov lret mov mov cli mov stos xor sbb lea jae jmp cmp adc jp out push and mov adc int jl or es xchg adc dec xchg ja cltd and in mov jno ret (bad) mov repnz icebp dec lahf push cmpsb adc lret cld sub and lahf add jnp xchg sub ja xchg push xchg out push pop shrb loop cmpsb pop sbb jns cmp lret daa aam xlat aad scas dec jno (bad) mov jle lods and imul push xchg lods (bad) das add cltd adc out push pop inc into push sbb ficoml adc mov aam lds jl (bad) (bad) jmp out scas pop dec stos jp mov stc rorb neg lds in pusha mul cmp xor cmc mov stos push inc in adc lret test jmp addr16 or insb pop add int sbb push jo (bad) xchg xor sub and cwtl sub sahf fldcw sti mov insb out into jp imul hlt fisttp mov outsb dec adc leave dec push out dec mov insl ss xor mov mov push stos pop xor sti ffree mov mov test fstps bound adc xchg sub fistpll ds pop xchg mov xchg mov sbb repz test adc jns,pn pop psllq pop insl or nop or adc or sbb or push fisttpll adc add add add jmp push sar pusha and mov jmp lea jne shld mov data16 testb bsr test mov call lods mov cmp clc not pushl neg cmp movb jmp dec aaa and cld rorl test push mov adc mov pop push es rcrl cltd mov jecxz push jne pusha outsl pop popa sbb stos add mov fdiv outsb sub fs mov mov jns mov lods mov jle sub into in push cmp pop ficoml pop (bad) (bad) icebp cmp in xchg inc bound xchg inc test jge mov (bad) jmp mov sbb jp cmp aas repnz pop and shrb fdivs sahf pusha or and adc inc dec dec xchg in add in (bad) mov (bad) mov bound bts xchg shrb (bad) mov xor pop pop arpl fwait xchg push das popf test dec or ret ljmp clc (bad) into dec or mov mulb push jp inc icebp (bad) mov jne rcrb adc test xor fwait add out sbb scas into cmpsl pop in inc test outsl outsb pusha les sbb add adc rclb fdivp jae call xchg lret sub sub and jb sbb js jl cmc stos jle jecxz push sbb or inc xchg repnz sbb mov nop push pop mov push aad xchg mov sets movsbw pushl popl call pop in jno cmpsl jp push xor les or fstpt ret mov pop call fs stos push lret daa jnp (bad) pop sub mov mov lcall and (bad) dec sub pusha push inc leave loopne wrmsr and inc repz aam cmp rcll ficom cmc shlb mov inc int push sub push (bad) lods xor add cmpsl add into cmpsb jbe mov cmpsb popa cmp popa sbb (bad) mov test and pop cmpsb iret jnp jmp mov iret in lea orb sahf dec push or sbbl sbb lods in sbb adc sbb data16 pop sub sbb pushl shl not lea jno lods pusha pushf pusha inc call sbb loope cmpsb jp mov fdivrs pop push int3 adc sub cmp mov pusha je (bad) in sbb out outsl sbb add (bad) les mov aam push adc mov movsb pusha ds jge push popl inc (bad) out loopne push push cmp mov add mov shrl push push jns es mov xor mov mov jne mov pop mov and cmp lds xor sub or dec popa insb repnz pop dec jno xchg mov jno push icebp or cwtl hlt fildll mov loope adc call add int dec or mov fisubrl sbbl rcll (bad) cld mov test cmpsb inc and int3 push xor cmc add test cs outsb mov dec int3 fisubrl imul xchg push push jns jge pop les ret jo negb jmp out call jmp sbb popa xor cmp out inc ss add lret out test and jns fsubr jae xor sti mov inc push and cmc mov cld add sbb mov scas call mov jp xor (bad) sbb daa adc fisubl mov sti (bad) mov andl jno lock mov ret repz es (bad) jno push mov mov addr16 (bad) les arpl fldenv sbb mov cmpsb push xor ja inc dec lret or xor dec add fiaddl (bad) into (bad) pop xor addr16 mulb ret sahf mov push push fwait pop sbbl test sub cmpsb mov xor mov arpl push loop repz cmp inc popf mov fs xor mov or sarl std ja scas sbb pop sub pop outsl push in jne jp lea pushf push inc mov scas popa aaa or mov xchg jns fsubl xor push add mov and lret sbb (bad) mov pop cld orl movsb push cwtl xor xchg cmc xchg or shlb mov fadds jo (bad) adc ja bswap popa ret xchg xchg cmp les clc aam fimull add jb repz and call pop cmpsl sahf call pushf (bad) xchg fdiv pop in arpl (bad) rolb (bad) mov jmp sbb pop pop push mov cmc add adc lret xchg lret or inc and sbb adc movb pushl popl movb push pushl ret call pushf lea je call stc sub cmc cmp jmp addb mov inc pop out movb add push repnz lock mov out xchg inc inc cmp test inc xchg xchg and adc stos add gs inc movsb insb (bad) out sbb or push pop push jecxz sub into fstl call loope int lcall rcrl add mov mov dec jae and adc mov lock addr16 (bad) jb push or mov aam pop sbb push daa adc sbb loope mov push inc adc dec icebp popa pop inc sarb add lahf pop xor cld mov jmp sbb mov js negl add cmp jns jle std cltd jne in jne aam cld mov xchg mov adc pushf xor mov pushf ret push jecxz sub enter and cmpsb js or mov or addl mov cmp inc push aam movsb data16 pushf pop fs sbb pusha and pop enter je mov push cmp cmpsb cmp sbb pop mov or leave rorb fsubs xor mov dec add cmc jge shrl into cmpsl daa hlt mov jecxz jmp cmpsl sub push es xor push ret ljmp icebp xchg lea add popa addr16 (bad) push negb test adc aam mov fist test loopne push adcl inc mov fsubl cvtpi2ps mov inc fcoml inc sbb fisttp add repz inc inc push pushf fcomi outsb cs pushf test cmp pusha lea jb cmc cmp push lea jae not sbb shld mov neg ror mov adc inc bsr mov push movb xor mov repnz call jmp jmp fisub int dec push sbb movsb fs push sbb mov dec dec or rcr lcall fidivrl aas in jb or mov pop xor lds into fsubl xchg and (bad) je xlat subl adc xchg inc test inc (bad) popa imul sbb popa sub xor imul and addr16 into xchg dec fnsave push dec icebp lods xchg and insl mov fsubrl shll and xor fisubrl sbb mov jno je sbb inc test aam test dec cs push fcmovne dec jne sbb pushf mov push insl (bad) mov mov mov push mov lea je pusha call jmp pushf mov bswap pushl call pusha lea call pushf lea jb push pushl ret pushf test sub jmp xchg jmp mov push mov mov pusha lea jmp xor push adc fnsave (bad) (bad) loope hlt mov xchg and (bad) inc xlat mov and nop jge call je lock lds cs jbe rcll inc outsl pop adc pushf hlt insb (bad) imul cmpsl out ds jno jl aas jns mov test test out xor daa repz rclb dec pop arpl shr or daa sbb test das data16 xor pusha mov xchg loopne aad in fscale outsl repnz movsl daa xor sub mov jns out movsl arpl jnp cwtl mov add mov mov or xchg add and inc dec xchg in cmpsb fdiv cmp xor mov add bound (bad) lret and inc bound in dec jb testb insl bnd or repz leave jne lods pop cltd sbb in mov test push push mov inc sti push pop jecxz mov cmp les mov xor pop jg mov leave repz iret (bad) xchg inc pushf push lret mov pushf movl jmp add dec outsl arpl inc insb insb outsl arpl ja pushf imul pusha add pushf lea jmp pushl cmp pushl lea jae pushf mov clc cmp push movb jmp movl pushl movb lea jmp push mov sbb jp cmp lret cmpsl ja xchg jl or mov sbb inc icebp xlat cltd ja push push pop and lea icebp mov mov imul pop adc testl dec sti xorl daa add out push dec sbb les dec sub roll adc dec jb jo in movsb jg and idivl addr16 inc jp out jp jmp int3 bound (bad) loop mov cli aam pop daa xor cmc and rcrb cmp es imul aas xchg pusha jle pop mov shll out add xor jge push xor adcl popf jp push ret pop pop cmp aas or ret pop and lock loopne fdivr or aad push idivb mulb mov adc xchg lea iret out push lret mov sbb pushf lahf add std sbb adc and mov sub icebp inc dec mov cmp xchg mov fldenv loop dec das pop xor and push inc arpl sub inc sub dec pop ror push ret aad test ret repz sub pop (bad) out xchg dec and lods fimull and xor aas dec clc pusha lea call pushf pushf lea jne pusha lahf lea jmp neg bts bt mov cmp pusha stc call in aam fwait jp movl xchg lock jb sub xor mov das hlt push push cmpl mov sahf pusha cmp loop bound or movb jb push mov cmp inc sbb in and in cmp fcoms movsb xchg cmc int3 and out mov sbb movsb jb fisub adc add out pop test jg push cli orl mov fwait push jnp mov mov add std test jge mov loope push imul xor or sbb add pop fs popf xor dec jbe and pusha lea jne xchg and mov sub push sub bsr and lea stc mov sub jmp cmp pushl lea ja xor ror sub rol btr bt shl add bt movsbw bswap mov shr xor rcr mov push mov push repnz pusha pushf lea jne movzbw movb movzbl push call inc add addr16 adc stos pop aaa adc fwait inc adc (bad) sub xor repnz push arpl aad pop adc popf jae xor lods arpl movsb cmp fldenv push sahf mov insb (bad) xchg sbb xchg xlat adc sbb sbb dec dec fiadd repz psubw add not pusha not mov stos not not pushf call les xor mov xchg cmp lret mov sahf (bad) inc push ss inc movsl jnp sbb cwtl xor sbb sub movsl jg and cli mov addl (bad) scas sti pop and movsb and fidivr inc sbb or cmpsl pop imul pop aad pop jns (bad) je (bad) dec inc push cmp lret inc jbe stos xor test or out mov test push add daa lods (bad) dec cmpsb (bad) mov jmp fidivrl repz addr16 pop mov jnp cmc sahf mov inc pop or xlat out test rdtsc shrb jns pusha aaa pop cmpsb push lock movsl inc push (bad) mov cwtl jp pop ss scas xchg jl cmp cmpsl jns mov nop jge idivb (bad) jbe rcrl cli and mov xchg lahf orl mov fidivl sti dec movsl sub lret cmp inc popf push xor mov jb mov sub push or adc jp pop and sub add bound addr16 cli call jg out and jl xor pop sub dec add dec mov test lret movsb xor xor daa inc push ljmp push sub scas jmp hlt cs lea jae data16 repz neg mov pusha shl lea mov cmc bt pusha cmc sub push bt pushf test repnz pushf pushf jmp mov xchg jp insl sub rcrb mov xchg jl cld dec sbb int mov mov out loope addl cmp push jne mov sahf enter inc ret int fwait rolb push gs je sub push add outsb jnp es xor mov cwtl in loopne dec inc in inc loope movsl sub and je loope mov out add rcrb xlat hlt sbb (bad) cld fldl sbb pop bnd dec or add adc pushf xchg jp enterw pop xor ret test insl jmp (bad) cld mov call add or clc dec (bad) mov mov popa popf jbe scas jmp ret in fidivr dec popf jp or int into adc imul js xor push inc or sbb stos cmpsl movsb sbb es xchg jne out lods std addr16 dec pop add enterw xchg mov xor xchg dec clc rol mov push sbb mov and arpl mov cwtl pop inc push gs aad push lock inc pop mov jno mov sahf cmp mov sbb mov dec pop sub jl cli ret pushf es mov addr16 xchg xchg adc fldcw mov addr16 stos jo cmpb jns xlat push roll out pop push sbb incb sub lret pop sub jge mov or mov push call dec imul pushf lea jbe sbb mov pushf add pushf mov pusha rcr add bt sar lea not movl setle push mov lea pushf cmc cmp call push jmp leave lea xchg jp cmp lods jnp inc push out in sbb lcall pop in cmp enter sub mov push mov sub lock inc add std mov je mov dec push push cmp cld fs dec fisttpll xchg xor (bad) mov int3 sub jmp jle add jne push in push adc les cmc jecxz imul mov les stos ret mov out mov stos daa pop nop mov lock xchg cmp mov sbb in imul xchg les mov jmp lcall loop adc adc xchg je and fisubr adc decb jg mov mov sub sbbb pop add (bad) mov push ds fisubl test mov push in jnp rorb leave icebp lcall and and mov fildll push mov ljmp test movsl (bad) or push push adc push pop lahf int3 in fisubr and ffree data16 push fwait mov bound pop cli add enter jmp xchg fs push mov or fs (bad) repz fiaddl gs xchg fs cmpsb enter pop loopne lods adc pcmpgtw mov leave fs data16 (bad) out testb inc dec adc inc mov cmp pop int3 inc push xchg or fwait adc or jae imul lcallw mov (bad) push gs push fldenv scas push ljmp lret adc enter les arpl popa lods mov nop fs add (bad) mov pusha int3 mov lahf outsl add pop outsb ret scas cmp popa and pop rorb add xchg jae mov sbb mov jb adc dec push les jnp adc mov fistpl ficomp dec and pop test cmp xchg es pop add in mov fisttp or mov stos add sbb int3 ljmp (bad) rorl shll inc push (bad) bnd xor push sti and movsl and in push aaa daa lock lret cmc push aam pop in arpl shrb cmp mov mov aad cmc push cmp rorl and pop lret adc (bad) daa push and xlat pop mov lea push aas rcll maxps or mov pop insb loop jno jbe in int3 (bad) or cmp mov stos pop xor (bad) xor sbb sub leave pop add ret push lret xor jo inc xchg ret sbb mov sub lahf addr16 sbb loop adc out cltd mov pop mov jmp sbb and cld add or cmpsl xchg jp mov mov cmp lcall push inc push pop pop shlb mov mov sbb cld inc orl test shrl std arpl (bad) mov ljmp cmp seta push fidivrl scas sub loope jl int mov push out xchg shrb push imul mov imul cmp hlt shll push lock xchg xchg jg (bad) hlt mov inc leave (bad) sbb lret icebp cmp pop pushf mov in mov adc clc mov mov fdivs xor dec add push cmp jmp sbb inc (bad) (bad) dec push sbb call gs js or cmpsb jle movaps inc inc int lods (bad) pop pop rcrl inc add hlt icebp sub (bad) aad jp push icebp sub and testb clc sbb cltd mov and movsl jne fiaddl int3 call pushf lea test pusha sub bt pushl popl clc test call not and rcl xchg push mov not setb mov add stc pushf pusha cmp xchg add mov cmp sub pushf call add inc js je jb arpl jae hlt int3 dec sbb xlat fcompl hlt rorb push jp (bad) xor push jb dec scas jecxz (bad) cmp mov sub mov cmp ret dec dec push add push or fstps or or dec test jecxz sbb fcos push pop push shrl cmpsb inc addr16 imul and test or jmp fwait cmp nop jp shlb rclb repnz push ret lahf jge adc mov sub in ja mov sub pop repz push hlt repz fidivr fs sbbl xchg pop fistp mov dec js inc out jg test loope lea repnz addb popa inc cmp mov add and sti pop lahf call dec push pop out sbb adc sbb push jnp hlt push out dec movsb cmp mov in and ficoml enter test cs in adc in (bad) movsl cmp in cmp lock jg push add in fsubrs out push adc fs (bad) jp outsb sub icebp cmpl cmpsl pop pusha xor movsb imul cmp mov jl adc push add js stos btc outsl dec call cmp mov cmp xor adc inc jbe pop sar iret inc jecxz rcrb lea and jnp fistpll popf mov mov pop cmp xor insb pop sub (bad) fwait jno cld scas xchg ja and gs add clc mov sbb loop mov xor fwait push mov repnz mov std or pop fdivs cli xchg mov adc cld pop mov sbb adc repnz xchg push cmp jmp cmp add (bad) dec aad jnp xchg inc insb push (bad) dec adc xor int and loopne jge sub fnstenv xor mov jp mov adc add push jbe sub frstor fs jne btr movsbw stc lea mov bt pushf jmp scas ja jmp cwtl and ror mov out inc cmpsb jo jnp mov cmc lds hlt sahf fcmovne fmull sbb add and cmp and xchg dec xor sbb fsubl fiaddl bound int bound mov mov dec out lock push cld sub ds xchg dec std test fsubrs pop aam lcall imul pop int3 mov fsubrs push push adc imul pop push repnz ss dec add xor out pop push bound dec movsb (bad) mov cmp pushf push mov out add pushf movl movl pushf movl push push pusha lea jmp lea jae bt jmp test jp out leave fmuls jb mov fwait insb repnz hlt loopne fimul inc inc rcr stos xor and mov xchg or popa sbb les popa and lahf mov push jp or push ret mov ret mov es mov cmp dec mov adc nop jp int mov mov lea ficom sbb es inc sub adc int3 mov ss jb cli shrb stc (bad) mov push bound jns movsl push hlt loopne dec clc les inc rcr xchg add test and rcll fcoml sti (bad) bound or xor rcrl call push imul dec adc call outsb mov test std pop sbb cmpsb jns repnz movsl dec insb sub inc adc push and out mov or mov jp adc inc adc loop pop sub orl adc or inc ret inc push or jmp sahf or int mov sub push xor cltd adc dec fucom pop pop jmp xor popl push sbb mov popf and int adcb notb shr out pusha sub es into repz enter mov int cld popa cmpsl fwait cmp out inc and or imul jmp gs adc mov bound nop or inc popf mov iret and aaa mov mov or int int3 jo or int3 mov fadd cwtl js push repz inc push or aam scas rcrl xor xor (bad) idiv add mov call insb aam std inc mull int mov clc imul mov mulb mov xor cmp sub mov jo popa ljmp fadds mov inc pop pop (bad) sub dec mov loop mov xchg les enter fisubr and jp out pop sbb fnop sub push and cmpsb outsb xor and ret je jae push push fdivrs in sarl cwtl stos and sti jnp jmp sub mov sbb fs xchg ret insl cs outsw (bad) xor xchg fnsave insb inc idivl int ret out shrb popf ja xchg add and out lea jmp mov jno push (bad) popa jne xchg sub mov ljmp xchg mov pop fisubr inc inc xor sub gs mov nop adc pop out mov and sbb out dec adc or mov enter pushf imul dec sbb cmp (bad) mov jecxz jne cmp int3 mov mov and adc cmp ret push or (bad) jne les aaa imul rorb repz add xchg aas mov adc pop cmc gs mov in cmp push popf scas insl and fdivs pop cwtl xor xor mov icebp mov xchg (bad) cwtl add fidivr bound sbb mov imul mov inc lock loopne test jl mov jg test jmp fnstsw jno jp call (bad) enter sbb imul test test lods aam jno sub incl xchg sub subl stc xor (bad) ds enter sub mov getsec in mov sub adc sub in xchg mov inc or lahf xchg aam sbb mov xlat leave cwtl test inc xor fsts aaa dec push popf inc mov xchg test lahf mov mov and (bad) pop daa icebp rcrb xor mov in nop xor insl pop dec inc dec dec add data16 out push roll (bad) lock dec pop xchg or lret movsb cmp ljmp inc jo pop movsl into sub gs scas jmp pushf or scas sbb ficompl loop xchg xor or or inc sub or out lea fdivrs pop jg pop or sub (bad) stos ljmp aaa dec sbb icebp or jle in mov ja mov and add xchg addr16 pop jo sub jp or divb fmull dec loop icebp movsl sbb (bad) mov sub mov inc adc cmpsb ja fmuls pushf mov push in ficompl sub lods xor in sbb addl xor repnz outsl dec fbstp mov mov sbb imul jne xor insl adc jmp jge sbb add sbb or push lock std std mov xchg pusha dec mov ret jl pop outsl ret cmp mov pop mov push inc push fildll xchg sub or add jmp xchg popw test insl xchg and jl,pn cmpsl sub xchg push out je cmp rcrb bound push fadds fs jne or dec mov cmc pushf test add pushl bt movzwl btc btr mov stc call xor movsb mov cmpsb data16 fistpl push (bad) pushf outsb es (bad) xchg call test clc ret mov dec test adc sahf cmp xlat mov xchg popa push xor and loop fwait mov (bad) ret enter mov mov or inc xchg add test push pop inc rcrl cmpsb push jnp xchg movsb jo ret cmp je or mov cmp mov (bad) jne push lret or call cmp imul (bad) mov xor fbld sbb mov int mov push jo sub sub push sbb mov movsl in aas jae lcall lea insb (bad) mov std cmp cld mov inc loop jbe aad faddp push or cmp mov popa cmp jne pop adc push addl gs jle fisubr int mov or aam pop (bad) popa inc push jmp mov dec ljmp jmp lds cmp loopne pop or aam push cmp or (bad) mov and imull dec outsb (bad) enter int cmpsl cmp xchg mov mov adc mov int repnz add mov dec pop fnop pop mov dec jg cmp mov fdiv scas jmp cmc jmp movb mov lea jae inc jmp add cld xchg test sarl icebp shll jg push cmp cmpsl arpl ss lret mov mov mov push rcrb stc ret iret test mov inc jl in jnp nop xchg nop jge daa mov addb int bound xchg fisubr mov pop jecxz fnstsw adc aad mov enter mov pop push std xlat and repnz or sbbb push and hlt icebp ja out mov enter sub mov loopne pop cltd fnstenv cltd mov mov push outsb cmpl lods insb dec add (bad) mov and stos (bad) pop xor shrb mov popf (bad) or sahf mov rcrb sbb (bad) mov and movsb xchg pusha orl sbb adc push not xchg repnz add mov jne lods xor movsl inc adc out xor mov inc pushf insb sub mov push jnp repnz lods call adc ret arpl mov (bad) cli movsb cld jnp pop cmpsl sbb mov dec jo sarl sub int (bad) scas dec addb mov test pop out push sbb jmp lea jmp pusha lea je pushf jmp push pushf pushf rol jmp xchg push int inc call add fs loopne ja packsswb add stos (bad) pop iret add jno mov jbe stc pop and mov dec sub pusha lock jmp sbb add test mov cmp or pop mov aas outsl bound or mov inc cmp aaa lret add adc lock push jge pop fimul mov mov repz mov inc aad push mov lahf fcmove or jp sbb inc (bad) loopne push pop push add shr pop or push ds popf (bad) iret cmpsb jo push sub mov popf rolb in not shll gs mov and ror xchg outsb cmp inc lahf jg or xchg or mov dec mov popf dec sbb imulb jl fidiv mov pop dec add xor pusha mov xlat iret mov ficomp sbb int (bad) std shrb jge out inc hlt and sbb nop mov jp out jle push dec pop dec dec (bad) daa leave fwait xchg lods mov jb imull sti test pop cli sbb dec xor mov cmp jns jp jne pop es cmp out bound pop fmulp pop push dec lret fs xor inc or cmp mov sub jmp lea jmp call push nop rolb push sub ds int mov xor pop jbe fcoms xlat ret mov cld roll stos fildll xor sahf pusha cmp into lahf and pushf and popf fwait scas pop jle lcall xchg imull or pop popf push add add or xchg jge repz fimul dec popa ss mov or add rorl cltd mov cmp mov in std or mov push fadd out int fwait jns push sub cmc movsb loope,pt ret aaa loopne cmp inc jae sahf lret adc push mov add lea jmp cmp call jmp cmp cmp call lea call pusha call pusha pusha push mov pushf push push pushl ret call pop fidivr outsl pop jnp out mov bnd inc jle pop fwait inc into aaa mov popl aas xchg and mov dec mov sahf add adc fisubr or lds pop inc push push (bad) mov or push test and bound cmp ret testl sbbb pop rol or cmp jge sbb pop mov rol ljmp aaa pop sarb inc push (bad) mov mov or cmp or jbe or nop sti lcall push cwtl pop jne xchg mov aas ret push ljmp sti fwait cli repz mov rorl dec test lret fistp stos pop mov dec mov xchg rcll ljmp add dec mov cmp adc xchg test movsb cmp outsl clc pop cmpl cmpl pop jg jp cmp fdivl cld sbb pop and in rorl add pop mov das pop cli mov xchg imul fwait pushf adc fidiv fwait jbe pushf ds std jnp fstpt outsl or out jl add jecxz ds jns pop mov clc ret pushf andb mov push add add popa subl stos mov jp scas fnstsw ret ficoml xchg lods xchg fwait das add stc inc test jmp pushf jle xchg ficompl scas stos fnsave inc mov pop fistp sub ffree cmc inc outsl mov (bad) fimull adcb (bad) into sub stos xchg or iret decb and sub pop fildll sti clc popf iret mov icebp repz add aad xchg cmp incb mov jg fcoml adc mov jl xchg (bad) stc sti les cmp jl xchg or mov push cmp mov jl or mov roll adc jnp mov mov je xchg out cmp xchg dec mov dec ja inc mov xchg mov mov jp clc mov xchg loope adc call les adc sti jg push pushf pushf (bad) mov jl test loop adc into (bad) loopne jg jp sarb pop and mov jecxz inc mov jnp cmp jg xchg jl pop in popf mov (bad) cli add mov sub jg ret mov push faddl cld inc cmp mov cld inc inc clc movsb add cmp add scas jg jg and inc cli js xchg xor cmpl or aas add push mov xchg and inc mov mov cwtl xor cmp cwtl inc (bad) jnp jl ret mov jg ret (bad) jecxz mov rep sbb xchg ret mov jnp add or cmp les inc inc cmpsb inc repnz jl pop xor shll mov dec decb mov jp sti rclb insb jge mov test mov or adc sahf lds jg shll add jle cmpsl iret les and popf mov (bad) cmp add aaa movsb insl insl (bad) or mov lahf pushf testl fstpl imull xchg cli out std in pop and es sub sbb out fisubr (bad) outsb inc xchg andl inc xchg cs loop cmc xor sahf mov dec (bad) lea cmp ds (bad) pushf or jecxz,pt add (bad) ficoml fldl add pop dec ja add nop xchg js bound (bad) loope cld lret aam inc mov mov sti mov lods push adc into mov adc push mov stos xchg mov pop sbb push and (bad) (bad) jg xchg mov cld xor sarl dec clc idiv cmp dec movl pop and mov pop adc ret cmp xchg sbb jle push mov dec inc mov das sbb push jge sub fstl ret mov or sahf daa je mov ljmp mov cmpsl fistp aas mov cmp add pop dec push test loop adcl scas mov sahf mov xchg pop clc loop aaa out outsl dec fiaddl ret loop aam cmp mov sbb imul in ljmp inc imul dec or daa or stc sub jp jne sbb aaa ret xchg pop stos fwait pop enter mov fmulp mov scas ja popf and lcall int jo jo sbb test push inc (bad) repnz sbb (bad) (bad) hlt sahf xchg imul xchg push sbb shrb mov lods and xchg (bad) sub or das push inc mov adc ljmp sar cmpsl cmp or cmp imul inc cld sbb push push mov scas xchg es cmp lcall arpl jo sarl xor mov cmp adc in in (bad) mov push jae (bad) push xchg clc pop into ljmp int cmp (bad) mov mov nop imul cmp fs aas pop aaa jge xchg mov and mov xor dec mov jecxz (bad) (bad) inc or sarb clc (bad) xlat xchg jo lods (bad) inc sbb in mov inc cmc jl mov push test add adcl icebp add fiadd iret or jge ret lea cmp jecxz mov (bad) xchg (bad) (bad) pop sarl mov test mov stos push in and ret pop add dec rolb mov outsl push js lea icebp jae cmp push inc stc mov and xchg aam add fidivrl lods and or mov mov call clc adc das add mov cld inc cmpb sbb imul inc sbb fiadd test xchg or or mov loope push xchg pushf call iret add xlat into (bad) movsb and mov dec push mov adc movsl je xor push xchg clc test stc aas mov js cld fmull in and in push aas outsl (bad) mov cmp jae cwtl cwtl addr16 ret loopne sti jl icebp insl std or imul inc dec sbb or jb rolb popf pushf dec pushf into test cmpsl inc outsb xchg fldcw cli ja aad outsl negb ja iret sti rolb mov fild faddl lahf pop push jecxz jg fiadd jno lcall push fild jp sbb and mov int fs mov add mov out inc jnp mov cmp inc jg add add aam mov dec dec test test test push clc call or (bad) fwait pop test push movsb and sbb dec lods fidivrl sbb or scas xchg pop hlt (bad) data16 test mov and (bad) (bad) add in mov in cmpsl scas push mov cli fisttpll fwait lret or pop sbb mov stos in cld stos pop xor dec pop jp mov aaa aas (bad) insb lahf cmpsb fidivr cmpsl sub scas clc leave (bad) sbb out js xchg jne adc cld rcrl or fstpl sahf mov aas mov orb subl push sbb pop push lahf adc nop adc pop dec and dec xchg sub popf dec jl add femms lret lret mov xor fld pop jmp je push icebp mov mov xorl add inc push (bad) incl inc daa sbb bound push (bad) iret test fildl pushf and and xchg cmp shl mov loopne jl dec xchg lahf jge mov inc (bad) movsb or test or jle,pn dec subl sbb mov dec clc mov mov jns or pop sbb test push jb adc push dec clc xchg pop jle pop jg stos rcl adc (bad) and nop push cmpsl mov or int3 shl outsl (bad) pop pop (bad) push add mov lahf mov dec jl (bad) das into rorl psubb cmp lea add xchg dec mov or inc imul add xor mov jle push leave jge add xor pop xchg or or cmp xchg popf fwait scas inc ret popf loop xchg push and xchg loopne sub aad jl (bad) adc xor cld xor adc mov pop dec push inc xchg xchg aad mov ds cmp sahf pushf fadd cmp sbb cli icebp mov inc jnp xor ret pushf pop inc add add push xchg clc int3 push mov pop mov verw fs add jb pop jno leave inc push (bad) push jns cs cmpsl dec cltd scas or loopne das sub aam inc sub jg add loope jns decb mov icebp sbb push push aas cs mov ret add cmpsl outsl dec pushf push jno push in les mov daa add faddp sbb add fadds inc fisub mov xchg (bad) ffree and ret xchg fs mov incb dec and jns xorb jl cmp cmovl add loop jge mov xchg mov sti clc mov xchg lahf or push aam lahf mov sahf inc mov daa or addr16 sub jae jl lahf adc sub add das aas push cmp movsb cmp or adc fsts adc out xchg jno ret into mov lahf add mov das dec les adc (bad) jmp cmp jbe scas pop sbb adc inc mov insl add scas add cmpsl xchg push clc sub cmp shlw pop or stc mov test mov xor int3 arpl (bad) cmc pushf pop jge lock sbb out add shl in jle das add mov inc add xor or sbb jmp sbb fwait sarl mov pop out (bad) repnz mov pushf negl aaa push lcall pop (bad) cli movsb push fsubrl sub or ret shl cmp push xchg fimull jle or pop clc loopne out mov push andb aam push xlat outsb subl movsl push xchg mov pushf mov movsb int daa out std inc int3 push jl repnz xchg cmp xchg cmp arpl adc imul ss (bad) pop add pop add mov (bad) sbb (bad) push into imul push jns lcall scas pop mov std pop punpckhwd cmpsb jp xchg lods pushf add scas xchg pop scas inc add outsb pushf or add mov or scas lret mov pushf test sub or into sti std js add and pusha xchg jle cmpl (bad) call sahf xchg mov in pop (bad) xor cmp fisubl sub adc cmpsb fs adc mov lods cmp jecxz data16 sahf dec xchg das pop stc scas or pop rol orl (bad) jg rolb sbbl adc (bad) xor and sbb jl cmp dec iret aas push dec sub add arpl mov paddd (bad) jg adc xor clc push daa pusha push movsl scas jg pop sub enter dec lds cmp adc fwait inc clc push cmpsb sbb out jns lahf or or mov (bad) out ss ds clc inc repnz adc mov mov push mov movsl lcall icebp jge jl cmpsl test out rol lret loop mov mov hlt jnp mov cmp das sarb movsl (bad) cmp fwait mov mov gs inc cs jg inc repz mov lods xor and fadd inc cmp (bad) scas dec xchg mov push scas aas dec pop inc cwtl xchg fistp jl (bad) pop outsl or lret loop out jp mov lret jle mov add in jae int3 call cltd xchg inc ljmp cli stos push dec or subl inc jg int or mov scas (bad) mov lcall mov add mov mov xchg mov sub adc js nop mov in into xchg fistl cmp in or adc cmp mov ret aas mov ret fmuls inc xor cmp incb mov xchg addb jge out test in aad cld cmp fcoms mov ds add inc dec xchg cmp mov mov fiaddl dec js cmp outsl xor hlt bound xchg fs and stc or dec cmpsb into mov loop and ret pop mov fnstsw clc sarl cmpsb adc sarb clc lcall add cmp inc xchg xorl or adc je (bad) pop cld cmpsb jmp outsb lods adc sbb lock sub jno mov pop loopne jne lds push test es lods adc addb (bad) test lods mov repz sahf clc jl or fiaddl mov ja xor sbb fimul (bad) lea add popf mov cmpsb iret test (bad) ds std test push xchg and mov add out int rolb ror stos rcll fisubl shr mov xchg jne outsl xchg jp (bad) xor sbb push add fwait pop cmpsl dec mov insb sub sarl cmpsb push sahf movsl adc out faddl les jmp push (bad) pop (bad) cmc mov mov mov aam dec mov loopne or call aas lcall mov ficomp sbb xchg or lds int3 call jecxz add outsl out (bad) aas cltd aaa mov faddp aas in retw cmpsb (bad) mov test sarl das cli out inc std js adc mov gs imul mov aaa aas ja stc mov arpl pop and jg cwtl jb out int3 loopne xor lret jmp rclb lcall imulb or sahf cmpsb jl cmp cmc pop int mov std sbb xchg into std mov and imul jbe ss push pop int3 (bad) pop adc das sar int shlb or rol dec lcall adc mov inc (bad) cmpsb push (bad) aad pushf push adc mov andb sbb and in mov mov pop cmp fadds popa clc (bad) lret cli ret pop inc call (bad) fsubrs mov sbb (bad) xor fcoml mov lds lods cmpsb ljmp test adc push dec mov (bad) add stos adc adcl js out loopne or fwait mov and jp mov jge ret add xchg movsb jp cwtl adc gs adc (bad) dec sarl dec xlat loopne and sbb sub mov xchg outsl pop test mov mov in scas inc add mov stos dec push inc mov mov or push ret jmp xchg and (bad) pop lret cmpsb mov add pop movb (bad) stc push clc mov mov pop in pop pop jge mov scas jge (bad) cltd cld pop pop out stos jmp and sub cli ficoml das lock add mov lret (bad) dec loope fcoms pop test or mov out fsubl lock cmpsb dec xchg sbb into add bound xor shr or clc mov pop fwait mov push add or outsl aas js pop stc adc jo sbb push inc add xchg data16 jns dec movsl push cmpsb pop xor adc andb xchg inc mov loop shll sub or inc push pop call mov add hlt add (bad) lret pop cmp push xor cmp (bad) push int out and std sub nop cmp push fwait adc jb pushfw imul xchg pop bound clc jae mov jl xchg test push cltd pusha scas movsl cmpsb ret addr16 jle cmp stos add jns test mov push outsb std fstl arpl (bad) insl ret sbb mov popf lar std clc jge int sub dec jle divb dec adc leave nop addr16 jp lea push sbb insl clc pushl ds or jmp ss push pop (bad) xor ret test mov pop cli xchg add daa ja outsb out pop in push rorb in xor repz cmpsl aas and (bad) cmp std call mov push aam pop lods dec pushf push shl cli pop imul adc mov and cltd sub stos mov xchg cmp add scas cmp pop adc jb pop mov repnz dec mov int dec inc jp test fdivrp adc mov rcll stc jle adc pop inc nop pop (bad) loop add mov or dec jp mov outsl fldcw clc dec inc mov lcall aas push push jb (bad) add sti mov outsl or out movsb and or and mov add aam stc jle test (bad) jecxz adc out push jnp,pt dec ud2 mov data16 js mov jl fwait and xchg cmpsb stos in sbb movsb (bad) cmpsl pop add enter imul (bad) lcall cmc sbb jo pop out xchg cli mov pop xor fcos mov fdivrp sub mov fwait mov push mov xchg bound mov clc rcrb mov sub xchg test rcll loopne xor pushf jnp cmp ret nopl out daa pop sbb push imul repz clc xor das test or mov mov jo arpl mov jnp dec fs pop mov dec popa mov sahf outsl and cmc fsubs cltd or inc dec clc or test cld xchg xchg mov (bad) les jge adc sbb ret cmp (bad) mov mov js (bad) inc add or pop cmp lcall inc add and fist (bad) movsl xchg int jl movsb adc notl add cmp addr16 inc add adc mov pop mov or lods cmp add sbb aad or inc pushf jnp aam jbe jb loopne insl mulb ss ret pop ret or nop push add mov cld add mov shl sbb jbe add or xchg aam lods mov in adc sbb jp inc pop mov dec repz mov cmp cmpsl adc mov and and mov jg ds xchg (bad) in fcompl mov in stos dec cld adc in sahf mov (bad) xor mov pusha mov mov enter (bad) call das cs adc subb test or out inc movsl cmp je dec aas jne pop fdiv jg fdecstp inc sbb ds fucomip mov clc mov fildll cs mov cmp xorl push in inc aam pop mov pop jl jo jge adc mov dec push jg mov (bad) inc jb lahf les aaa out std and rcrl xor mov jl (bad) stos sbb push pop test jns jle pop aas test xchg sub clc stc fiaddl mov mov outsl push push jnp dec xchg mov or and loop fmull test mov mov dec cli pushf sub mov and fwait int3 xchg xchg sbb push jle add (bad) daa and mov int3 clc sahf rol (bad) push outsb and int xchg lahf or js add incl or mov lahf or mov rcrb (bad) xor icebp sub xchg fwait pop mov stos sbb pop add jle xchg add jnp stc cmp cs xor sub adc stos imul pusha xchg push jb clc dec push mov arpl mov adc pop or (bad) lock jbe mov in inc leave pop clc std mov inc (bad) stos add jecxz add mov loop sbb mov inc in repnz dec jbe add add iret test fsts or mov cmpsl mov enter ret (bad) insb or (bad) imul pop mov scas ret bound add icebp fwait lahf mov out jno push movsl sbb adc or push shll xchg (bad) in push aas lds cmp mov pop rorb xchg mov js rcrl adc out mov add or cmpsl dec mov add push stos jno adc adc sbb inc sahf add jmp (bad) fidiv scas pop mov cmp clc setae into aas jno jnp cmp outsl inc jge cmpsl mov adc clc xor js or in or fadds jp or push mov jb push sub sub sti push pop xlat popl or add ret mov mov pop xor xor jbe fisttpl ret je or lcall add je nop ret xchg jmp xchg ret jle out jb inc sahf push fstl push loope mov idivl xchg loop cld rorl or jns push jp add xor mov jge or femms pusha outsl cwtl shlb rcrl (bad) add sub flds ret add pop mov fidivr stos mov rcl or add sub jp mov cltd imul dec dec dec inc aas xchg faddl ret sub daa sahf lcall sbb sar inc mov jne out aam jp addb mov add sbb dec or shl subl jg xchg test aaa fnstcw jmp fidiv mov xchg popf fnstcw pop mov js push outsl and sbb mov lods dec scas jb push clc sub mov add test loop mov xorl cmp xor and jg test push or mov cli adc adcb add pop shrl dec pop por imul xchg int3 (bad) mov lret jg std loop test sbb jno jp stc int3 mov jno movsl std aaa xchg (bad) sub loope xor (bad) xchg rolb scas pop ljmp lahf test mov xchg inc xchg mov push loop push mov pop mov jmp or cmpsl cmp jl mov (bad) bound cmc add ret (bad) push mov das bnd sahf jl popa fiadd fnstsw lret out rolb and fmull ret cvttps2pi testb adc in mov or sahf jg jg aaa pop fbld xor aam sarl aaa jmp cli push sub add lcall popa clc pop (bad) iret pop mov inc adc sbb notb jne adc aas int3 (bad) cmpsb mov sbb pop arpl stos je xchg sub loope and mov in int3 (bad) add out mov adc inc jp mov sub ret adc leave insl loopne mov (bad) pop popf movsl mov mov dec mov jge aas gs push popa mov clc push frstor add in out ljmp (bad) scas stc mov xor push dec cmp movsl and das adc das jle inc push add dec dec push imul add and gs cmpsb decb dec lea flds mov fisttp xor cmpsb pop rorl lds test (bad) cmpsb xchg shlb jge,pn mov jns rclb (bad) lcall add (bad) testb ret or push cld mov scas clc daa lods rcr dec xor mov or adc inc cld (bad) lcall adc jg pushf je inc std stc sbb nop dec jbe mov mov scas int3 push or pop lahf add xor test into add xor lcall jp cld add jns popa in call inc and int3 adc mov add dec fiadd xchg mov ficoml out test pop or loop fistl (bad) cmp and sti leave rolb (bad) push mov dec test jo cmp (bad) xor sub ret push fsubl jmp addb adc cmp sahf xchg xlat shlb inc loope dec push xlat pop ret add lret jp xor inc mov mov aas add mov aas xchg out repz add jl pop testl pop jp repz mov mov cld or push aas je and sti xchg pop dec jmp cmpsl adc mov je out sub mov add add sbb in mov ds cmpsl lcall (bad) xchg stc mov daa push dec push cmp (bad) cmp dec (bad) rorl stc cmp lret in loopne and lock or push mov mov pushf and je mov outsl divb sbb mov fwait in or enter subl xor iret inc into mov fimull and add stos pop mov xor enter clc sbb add xchg je fildll pop ret or test ja mov dec imul inc repz xchg cmpsl pop add js stc (bad) mov orb mov scas lods jl clc icebp jge sub rcrl xor cmp stos and das (bad) cmp inc les int mov jno or (bad) int3 mov jl jg sub add mov cmpb je and sahf std (bad) test jl (bad) lcall out jnp dec bound rclb mov dec sti (bad) mov and jle popa jnp (bad) cmp and repz add aaa (bad) add into (bad) int3 popa add sahf dec push and mov rcll xchg xchg jle and jnp or push and or jae (bad) inc mov ja ret jle adc scas mov jg in push sti cmc fisubr js or cmp popf cmc icebp cmp pop int3 sub jmp jb inc inc and push sub hlt jb mov sbb jle movsl loop mov pop in out into fld scas or mov mov and sub je cmpl add jle daa pop imul adc and faddl and mov and xchg and pop roll mov fisub mov jno sbb push sti (bad) je inc rolb leave mov push mov mov insb call shl and adc into adc xchg xor xchg pushf lods inc repz mov andl addl das push xchg ret jnp mov push and hlt outsl in addr16 mov cli jmp push jl pop adc and xor push mov movsl stc inc je add adc push insl pop cmp or mov cmp arpl jl lcall mov scas sahf les scas movsb jno lret dec test clc cmp pop jecxz cmpsl push mov ret lcall nop loope mov sbb icebp pop clc and nop sub sub test (bad) sub std mov adc orl (bad) push xchg out movsb xor pushf jg idivb xchg cld pop out clc cltd sbbl stos sahf lods loop push push icebp shrl dec xchg and push sbb int3 jg add mull movsl adc jbe (bad) cwtl sub (bad) out sbbb rorb cmpsl cwtl aam (bad) xlat sub cmp stos xcrypt-ofb cmpsl ljmp jp jecxz inc jle xchg add lahf sub int3 jp cmp sarb loopne in clc into cmp inc and imul in sbb mov add aaa push inc popa mov jo mov adc fdivrp paddb xor mov mov outsl sbb jg xchg inc stos xchg sti inc jle add sti xchg aaa pop lahf (bad) into mov push jmp into mov fwait add stc pop xchg lock nop or inc add push clc sbb mov aaa cmp mov insl test xchg (bad) lcall cli sbb stc cmp pop int3 xchg or outsb and jl clc insb in mov in std das lret fcompl sub xchg aaa push or into out push pop mov fcoms lock xchg jbe pusha xor ljmp xor lock std femms insl lahf mov (bad) faddl pop mov fidiv jp fisttpll iret ds dec (bad) clc xchg jns ja sahf cli mov je pop outsb ss jecxz inc clc jl xor popl aam imul and jge aas decl fnstsw pop sub ss cld push mov pxor mov and rorb outsl sbb mov push mov inc sti sbb (bad) push and mov mov stos fcomps outsl scas xchg shr mov outsb mov inc mov clc push je xchg sub and std ss mov sub push push xor aad loop out jnp or mov push stos mov das aas lcall and add jnp ficom pop jge popf jg and test add cmp rolb inc int dec das and adc mov xchg lods and jle sbb out stos leave push jle mov cs jle push insl sahf pop lret jle cmpsb push nop pop pop inc dec jle and lock test ss mov xchg inc adc add adc adc test jle,pt dec rep aad test inc cmp les scas idivl cmp hlt sub add jge (bad) mov pop andl jl test (bad) push and xchg dec cli cwtl add jle xchg xor pop add jle jbe mov or cmp inc and jle mov lahf adcb sbb or scas movsb mov stc ljmp test js or inc pop insl push pop fdivs mov repnz add mov lock cmpl xor out bound fwait mov in pop sbb les sbb sub mov jp stc and fnstsw mov out jle adc pop sahf divps jl xor jle sbb popf in and mov (bad) push je es test dec (bad) jle cmc mov incb jp mov lods sub sub psubb maxps arpl or mov or dec jle sbb jecxz jle (bad) (bad) pop dec pop js push outsl push xchg js mov add mov fstl add add xchg inc jmp cli push add stos add pusha test push mov xchg (bad) aad mov out mov push inc pop (bad) xchg stc ret pusha lea lret or sahf push xor mov faddl cmp pop inc stos cmp cmp mov scas addb cs nop in mov int3 xchg hlt pop sub dec xchg aaa out popa jmp mov ljmp jmp inc leave sub sahf jg clc packssdw xor mov (bad) (bad) and les cmp add ret das adc mov mov shll jg test mov xchg (bad) sbb mov jmp (bad) imul mov pop sti jle xchg lods and fdivrl add xchg js jg jle sbb es dec das jle adc xor sbb aaa sub fstl ss push inc loop arpl mov cmp adc sti in popf xor les push invd outsb clc dec adc push sbb and push jl test jb out mov xorl fldcw stos mov xchg insb inc xchg dec xor and mov push mov jle jmp sti (bad) arpl adc scas push rolb xor into xor jecxz mov in mov and xchg add jle mov inc cmp imul inc cmp dec cwtl sbb inc fnsave cmpsl sbb out ret or mov fldl or neg addb lods push je inc pusha cli xor stos (bad) stc ret mov adcl loopne clc cmp xor jo dec imul int3 movaps cs out adc mov mov arpl insb out ds jle xor mov and addr16 fs jno in sarl cli mov jle sub out or (bad) or mov xor push dec xchg cmpsl jle ret cmpsb (bad) lods mov jle ds jbe movsl push jle adc and pop fstl scas fdivrs xchg inc jmp loopne xor jecxz fistp in fidivr dec mov pop mov es xchg or movsl xchg jecxz sahf pop cmpsb jle xor cs jge outsl dec xlat add aad ds mov inc jmp xchg sbb mov push jne jle push cld mov push mov jp mov jle cwtl inc push imul bound cmc jle add mov xchg adc pop lcall (bad) lret loopne jle xor in outsb jle insl into ljmp mov fs fwait rorb sti pop icebp or js push cmp mov out movsb in pminub fs jle inc daa push push inc xchg dec push pusha dec sar (bad) lock in jnp push jbe jns push rorb das add icebp std and inc xchg test out (bad) inc imul out roll sarl mov out aad pop sub sbb nop out or js cmp push jle mov imul dec or add lock jnp mov jle pushf xchg jns loop inc jle push adc sbb or fildll cmp mov push dec inc adcb mov inc hlt aad jle dec mov cmp or mov fnstcw fisub add jle repnz or xchg push jae jno aas mov in dec xchg mov test lods lret jle (bad) jb jne inc das jle mov mov dec push sbb lods pop sbbb jmp test mov inc xchg inc mov jnp,pn mov push xchg push aaa xor std jle fs and cli out lcall test imul mov aam fdivrp ljmp (bad) (bad) jb cmp test jle mov mov jle ret in fs getsec pop pop jge pop shll mov jg movsl scas mov shrl sbb (bad) mov insl pop roll jle shr and xchg daa cmp pop sar push jle pop xor jne xor mov stc push nop jle int cmp mov rorl mov jo mov pop std pusha lods scas jle sub popa jb iret out mov (bad) dec test popf cli aaa add and fcoms mov fildl push sbbb subl pop test mov and mov pusha inc insl cli orb add pop mov clc test in lahf or sub std hlt jmp mov fildll dec and jnp cltd test clc adc aam and push int3 jnp inc fdivrs or pushl icebp addb adc cld insb push jno icebp loop cmp xor dec mov ja divl fdiv fmull fidivrl mov jg inc xchg or and fidivr pop adc rcrb hlt data16 jns xor xor std mov aad hlt adc clc data16 inc mov pop jno scas cmp cmpb mov ss fnstcw xorb jl pop or or (bad) cmp insb mov loope pop mov rclb into out lret notl js sub cmp xchg or jl enter dec fwait int add sbb shrb push gs repz push xchg jge mov mov jbe xchg test in add jle stos sbb fdivr (bad) jle push and jle xchg out cmpsb out dec outsl jle out push stc (bad) jle mov movhps cmp cmc (bad) sarl sub out xchg hlt mov mov fwait addr16 fdivr bound mov cltd call adc ret aaa xchg dec fisub clc and cmp dec xchg sbbl push rorb dec mov in mov cmp inc out sbb and clc imul add jns jle push popa mov (bad) aas pop mov iret ljmp jge jns pop jle push inc sub popa jbe (bad) cmp (bad) xchg fnstsw out dec jle ja jo out incb push or out jle mov lock and jne repnz out movsb adc scas and dec movsl pop stos xchg ljmp aaa push inc mov inc jnp (bad) lock add mov xchg pop gs idivb sub lds jge pop mov jle aam add xlat push jnp dec fwait addr16 xor push loop jmp add jb aas jl xchg jle mov (bad) push pop cmc imul sti lret cs je mov jl into fwait push jp ret and enter insb xlat ret outsb xchg nop pop mov inc mov cltd js arpl psubb cld xchg cmpsb cmpsl and lret lahf insl mov add dec dec cwtl add sahf ljmp or or test jo adc xchg pop xor mov and and aad ret dec sub je mulb rol lea (bad) cmc adc out jecxz jno adc fdivl fmull or data16 icebp add mov stos mov out cmpsb nop push or jg xchg fidiv gs xchg not (bad) mov in (bad) aam dec and popf (bad) mov mov clc (bad) dec cmp inc push adc negl fdivrl jg sahf sbbb sub inc sbb jle jmp add movsb xchg xorb cmp (bad) (bad) jb aaa sbb pop pop out clc repnz aad sti jge adc lahf mov pop jmp mov sbb sub inc ljmp pop jno pop xchg inc andl mov into ret inc xadd pop cmp mov fwait and hlt (bad) outsl rep fisubl fldt insl test jns pop jle hlt xchg aaa dec mov jp mov jle out cmp push sahf jle xchg scas lea pop ljmp stos xchg mov or xchg jno inc jle mov and ljmp and jb push inc test dec xchg idivl jp lods clc enter pop ficoml hlt sub inc aad leave xchg cmp mov xor hlt dec jae mov sbbl repz mov push xlat popf scas sbb repnz pop adc push scas clc jle adc xchg push add mov fdivr cltd in adc je or sahf mov add sub clc fistpl test xchg les aad sti je jbe fidivrl ror or imul (bad) scas push and dec outsl cltd add xchg dec fnstsw mov mov nop (bad) into jl movl or mov js lock push mov jge out cmp sbbl inc out cmpl sub clc (bad) push jmp mov add xor out jle arpl mull cmp popf das ret je adc aam lea into cmp jns mov cmpsl add outsl mov or data16 int (bad) clc or jp add imul or mov (bad) cli and mov pop pusha jle pop dec mov mov mov jns jle hlt mov std dec add into aad incl inc mov jle pop je xor cmpsb xchg fild inc addr16 in rol ljmp ficompl cmp jbe jle jb test mov xchg or aas xchg pop cmp or jmp int3 jle sub mov stc cld mov (bad) mov std mov jnp out mov pop push stos sbb jo inc jne rolb jno inc (bad) jg cmpsb mov xchg (bad) mov int3 adc out pushf pop mov dec les cmp movl (bad) mov or pop xor jae dec add popf jecxz push aaa out or ret sbb hlt adc jno mov repz push sbb das pop enter jnp jl mov add insl push out dec outsl nop lret ret sub inc hlt lahf fidivr xor imul xor sti aaa cmpsl in xor adc push fild xchg or fldt rorb test mov mov std (bad) data16 sbb xchg aaa pop or jne clc test fmul push adc cmp scas add scas leave add mov ss pop pushf fcmove outsl dec ret push cmp inc (bad) scas ja mov ret fisttpl sahf movsl xor mov icebp aad addl xor fmul mov jge clc lahf sbb addb and xor jle arpl xchg out adc mov out cmpsl pushf jb sub sahf (bad) aaa push mul (bad) cmpsb out stos add mov inc (bad) ss (bad) loop xlat inc sub jo jl pop sbb lret movsl mov or sbb dec fcomip lcall mov push lea or mov out mov inc inc test lahf call xchg mov pop xlat xchg or sub ljmp (bad) fbstp xchg xchg cmp adcb mov call repz aad das xchg mov rolb pop scas pop adc xchg js cmp cltd into (bad) mov clc xor or popf pop cmp (bad) mov in sbb jns mov sub insl jno fcmovb mov cmp fisubrl or stc jp mov jle ret inc sbb outsl outsb leave js shl sbb lret out (bad) les ljmp (bad) imul lcall je aas jg ja out lods jle cld loopne and jle mov push add clc sub jle,pt mov (bad) into jle mov mov or out (bad) mov dec push rcl and stos xor iret push push inc clc pop test hlt dec cmp out jle cli xor xor pop or and mov sbb jle mov out fildll pop jl les xor and fst inc popa mov add fnop in cld cmp sub sidtl dec test sbb cmp (bad) sbb or loop sub leave paddb jnp call mov xchg mov in pop incb js es xchg into clc or idivl ret push cmp push stc lret cmpsl sub inc popf jmp aam out movsb and flds jle mov mov outsl sub inc add pop sbb xor mov xchg outsl sub (bad) pop cmp or pop cltd sbb inc in ret daa into call xchg scas vpshld adc imul jnp dec cmpsb loop sti out dec inc (bad) mov call (bad) pop jle xor dec loop inc outsl jb test ret pop loope je pop andb and cmpl in push into mov jl pop aam scas jle cmpsl dec and in das or adc rcrb push pop dec or pop out mov lods jnp arpl out ficomp fwait das out add add xor mov jne and incb lods dec cmp outsb xchg jmp or add adc hlt loop and adc pusha test scas cmpsl mov mov xchg daa pop jbe (bad) and inc lahf sub aas pop fnstenv jle or mov push das cmp gs mov jle mov test cmp xchg push pop jle fisubl (bad) testl js jle cmp jne jge or std mov jp (bad) cmp sbb scas sbb lret pop mov out jb mov insb (bad) mov std divl inc jo lret mov mov inc into adc mov push movzbl jle cmp and xchg lret mov cmpsl inc push and push std out mov stc mov jle sub jmp repz shr lea jl jle inc enter mov jle and sub jnp adc movsb mov sbb pop stc pushf lods mov and call icebp mov (bad) ss mov xchg scas (bad) aad jo or int3 mov js dec add ror xor mov call cs orl (bad) icebp aaa inc je inc push sub lahf clc jg add imul ret jmp adc push jp inc adc pop jle cmpsl push sarl inc inc addr16 dec movsb mov sbb jae sbb (bad) xor nop icebp xlat sub jle fdivl xor and jle scas or or (bad) jle pop lret xor pop push aad jl cld je xchg jle pop mov jno incb iret icebp ljmp jnp pop sub fstl movsl push pop mov pop aas jp iret enter les push mov gs push rolb xchg cwtl jle push cmp sub sbb jnp mov in mov mov ret xchg jg cli andb mov sahf add pop push mov movl push sahf es test or das (bad) jmp xor (bad) mov mov jp dec adc mov inc out (bad) jbe xchg or fs insl and inc repnz popa mov out mov push mov xchg push fldcw jl cltd int3 cmp jle outsl add sbb mov push lods push fldenv xchg sub mov add xchg test pop adc lcall jl loop adc insb push ror dec jmp loop mov in pusha das inc rorl and setns cmp mov cmp and adc popa adc xor movsb push jbe icebp push jae repz xor loopne jno cmp mov addl mov insl pop and daa xchg cmpsb movsb (bad) fnstenv inc dec aad or stos shrb mov xor add mov jne jge in jge add clc mov mov pop clc loopne dec add stc xor jle leave pshufw mov addr16 jecxz rclb add xor popf cmp data16 insl pop xor jl sbb lods sarb pop jl clc call mov pop iret fnstsw mov js or imul rorb pop popf mov clc jns inc pushf das stos mov jle sbb ljmp inc popf lret add mov dec jle ss (bad) aaa xor jo lret jle ror movsb inc icebp in jle pop xchg jo mov mov pop pop (bad) sbb inc push fdivrs fs jle sbb adc imul jno lahf jns jns jmp push mov mov aaa rcrl js xchg aaa loop out dec pop jle repz cmp imul shrb outsb xchg popa or outsl mov rcrb loopne out clc (bad) lock movsl inc mov outsl fs mov and jne mov into mov rorl insb (bad) clc xchg movsl sti pop add mov aad sbb (bad) clc int sbb scas fisttpll mov jecxz aaa fidivr mov push je mov shrb out pushf inc (bad) fistp js clc or mov testb pop mov lcall ret add jp push push dec push mov test jns jmp jo cli (bad) mulb cwtl pusha mov push pushf mov mov inc add (bad) fcoml es add xchg loop movsb arpl rclb stc mov xchg decl mov ret jle mov jle pop insl outsb jp mov cmp sbb push aaa popl dec dec xor jmp adc xchg jle pop outsl js jp and lods ss mov jle dec popa out imul mov cmc fistpl inc das test xchg out ret jle ja adc aaa or scas daa sub inc xchg ret mov (bad) in loop icebp lcall scas adc out cmc mov inc lea cmpsl xchg push popa sub or push arpl andb insl mov movsb pop sbb push xchg jle cmp and add sub jbe mov add loop pushf scas fildl cltd rorb xchg ret dec fnstcw mov (bad) jle gs sub jae lea push and test int3 sbb cmp dec sbb or sbb dec add cmp test jle inc mov je cs or jmp jge rclb jle movq jle or fildl adc pop sub pushf dec outsl pusha pop arpl pminsw std out pop mov shll pop cltd jmp and orb sbb mov jg adc xchg lock mov mov jo push test cmp sti into fisttpl cmp xchg jge pop testb mov add (bad) test dec dec ss add and clc icebp mov jmp mov scas (bad) out sarl divl mov xchg fnstsw xor xchg in nop dec subl or sub movsl repz test xorl jmp (bad) cmpsl scas xchg jo out jg and ja xchg push xchg push and test pusha test fsubr add push jmp in cltd lret sbb jns xchg xor test or mov (bad) popa mov sbb xor (bad) sbb imul jmp ds and fistl test mov mov arpl adc jl xchg aad mov fstps pushf adc xchg pop mov fwait sahf xorl int3 mov ja pushf jle loopne std jecxz fist and movsl pop adcl in adc xchg aad test cmpsb (bad) add add shlb push dec rep or xchg pop das (bad) aaa push or ret sti test mov sahf pop inc mov stos inc and jecxz rcrl dec dec in mov mov ret mov mov (bad) jecxz (bad) or pop int3 insl mov sar add fsave clc and xlat bound cmpsl mov repz or inc jecxz push push mov mov mov clc push gs movsb aam scas push popf mov adc xor test push imul mov sar push cltd divps repz xchg add pop mov incl pop add clc mov xchg imul jno dec push lods sub fwait and mov sub lahf pop cmp sbb add sub ret in mov pop jge or mov xor mov mov test jl mov jl sti sbb int jg ret xchg es nop ret hlt mov pop adc sti jle mov (bad) add aas das ja pop jle push xchg outsb lcall pop sub sbb mov and push cld js hlt mov (bad) iret stos or mov into jmp ja imul jo jle lret adc xlat mov test cmp xor push pushf sub xchg or xchg mov cltd add enter adc hlt jle mov mov inc ds in ret jle pop jp push add invd cmp xchg xor mov scas hlt add adc mov aaa push xchg mov sub inc imul (bad) fnstsw jmp pop push sub mov (bad) mov mov inc pop (bad) les movsl add fidivr mov push cld fild mov leave xchg jmp lahf out xor mov ret inc adc aas adc xor cmp pop and inc mov mov mov movsl in out or shrl push push cli sti lret nop outsl push insl dec xchg xchg pop adc jle (bad) xor nop cltd test lahf or outsl jge jmp cmc enter jle push (bad) mov jle push cmp adc or sbb jge cmp xchg (bad) lahf or (bad) xchg jle mov notb pop push jecxz cltd das jo jl jle xor sbb push and push xchg je pop jmp (bad) shll xchg mov push cmpsl stc test xor mov sahf jp sbb les (bad) inc dec pushf fistpll mov fisttpl (bad) fnstsw pop mov or cwtl out mov pop sub les jp sarb js int3 outsb stc (bad) jno lcall adcb invlpg mov cwtl in daa inc adc paddusw jle stos outsl out dec test or push mov pop and mov cli loopne xor (bad) sbb pop (bad) inc jl mov (bad) hlt (bad) insb fs jle fcompl mov xchg adc in jle mov fcmovb mov fucomip push push jge pop loop lods out lsl lock or and jle xchg mov cmpb adc dec leave mov add icebp jne adcl and jnp loope inc inc sub mov jle fstpl xor push cmpsl jle in pop popa insb mov sahf jb jge imul xor pushf dec push fistpl push (bad) add adc mov stos mov cmpsb mov push and mov sbb cmpsb and daa jno shrb mov or pop cmp pusha (bad) out dec mov and iret int3 jg ja and and stos lahf jp (bad) sub das xchg push mov cs clc sub jb stc add shrb pop and fucomi test xchg sub mov adc out cmp dec mov jge or fstl clc cmp sahf lods add orb shr add pop cmp nop xchg bound mov cmpsl fldt pop adc cmp nop ret sbb xchg lock jp xor sahf push dec fisttpl sbbl sbb xlat jns fsubs enter outsl jle or add add in cmpl (bad) (bad) lret (bad) lea xchg lcall sbb mov add cld jo mov and imul cmp push xchg int3 idivl repnz mov incb sbbl add shrb das call jge xchg or clc mov incb hlt push (bad) and dec or mov sbb jle or mov out out lds nop cmp sub (bad) notl cmp popf xchg xchg mov xchg mov mov into scas dec jge xchg mov mov jp push jecxz cwtl sbb or mov sahf repz mov arpl inc fiaddl mov push jge mov shlb les ficompl or push cmp clc (bad) jb movsl shll hlt cs aaa mov jle or (bad) iret sahf in jne push xchg add add addl cmp jle sub push sub test ss std or out out or mov js or call adc jl sbb cmp stc xchg fcmove pop test jle mov mov cli scas inc js push mov mov cmpsl sbb ljmp out cmp jbe rorl mov or jns out jle pop and les push repnz sub pop add lods cmp sbb xchg and jno lds xor jp mov mov cmpsb xor adc int3 xchg add or or fwait mov js dec cmp (bad) das sbb jmp test mov pop jl sub aaa inc mov fildl lret push dec fldl mov mov or sub add sub add test xchg (bad) in scas xchg jbe mov sbb repz adc jns adc push int3 push push mov adc jmp jbe add cmp add cmpsb cltd inc paddw pop insb xorb arpl out out stc push xor fbld inc scas sub add sti xor (bad) jb mov mov push mov pusha xor mov xor ret jp xchg sub (bad) sbb mov incl jne pop fimull sub scas mov orl bound pop (bad) hlt sahf loop andb clc jbe mov and or dec bound xchg lahf push add pop and add inc or cmp xchg dec xchg movsl sahf xchg mov and ret mulb scas pushf fadds or shr lea fwait push sbb jle xor lcall jmp pop incb cmp and xor adc or fild outsl ret xor leave add std dec pop mov and dec or pop mov jge sub xchg cmp xor mov push test jae (bad) mov cmc clc xchg push fstps lahf push rorb pushf and pusha sbb and mov mov adc (bad) dec mov movl dec inc (bad) or clc insl iret addb or insl cmp xor ljmp daa repz add ja aas push mov fstl je fdivs add and cmp cli xor jae in pop xor jle mov lret mov or sti and jle in jne mov sub sub idivl add mov inc cli inc inc push jle sti mov jne sarb ret jle cmpsb lcall jle push push daa data16 jle mov inc aad es sub and or jle ds xlat inc pop or mov dec xchg and scas sti fisubl les clc mov cmp inc mov jbe add add jle rorl sahf push or js sbb popf sub stc (bad) jle sub sti mov mov jle mov pop pop push inc fnop xchg out (bad) jnp lods fsqrt jle push (bad) fimul mov mov push jns dec das jae sbb mov out mov negb add mov rorb adc xchg iret push arpl (bad) loope daa xchg inc fwait lcall fs adc mov shll inc sub push outsl add (bad) es adc sub pop lret clc aad adc jp stos fld inc sbb scas sbb xor fcompl int in sbb jl nop add (bad) out arpl rol outsl sbb pop pusha pusha cltd ds cli cmp mov popl xor pop mov icebp aas andl imul jbe cmp lahf dec dec cmp add inc out outsl roll xchg push (bad) loopne cld jmp xor xor scas loop adc fwait inc xchg push mov add (bad) (bad) push pop or and add popf mov mov add push es nop mov pop mov sub iret mov stos lahf sub adc push sarl int3 sbb jb fisubr std xchg repnz popf pop push rorb jo dec mov fisttp pop scas push loopne adc mov pop push clc adc fadd (bad) lcall add pop addl or loope fist jno jo mov mov dec pop sub std stc mov add dec xchg or push (bad) mov inc orl push cmpsb xchg mov cmp aad push ret add and mov test (bad) adc and idivl movsl scas add push nop xchg pusha aaa fildl sub sub testb push push pop or dec lret or arpl pop pop insb lods sub push scas (bad) jp clc fwait movups ja imul mov in xor test (bad) lcall xchg mov popf and inc sbb xchg rorl adc in and cs je or popa cmp jae add mov jp mov jl lahf jmp push (bad) pusha push insl mov push jb jp xchg (bad) mov mov enter sub mov std test (bad) (bad) or outsl scas jle xchg add and in jns dec jle fistpll in push jle rorl out nop enter fdivs jle loope push lret iret and xchg les mov jge in inc dec insb sbb mov adc pop divl cs (bad) xor outsb lret test add jle js jno add je leave inc xchg and out fdivs and out fistpl jle rcrb decl nop ljmp into pop icebp imulb (bad) pop in and jno push dec scas in xchg lock enter das sbb xor jle adc nop pusha jle xor stos mov loope enter fild inc and into js lret clc cmpsl loope jle push xchg loopne jno jle,pn addl or inc aad sahf leave mov xchg lahf sub mov in jbe (bad) ljmp call cmp mov inc push sbb hlt ds pusha push pop adcb xchg dec add add jmp mov pop xor je add push adc jo push (bad) and ret bound das imul aad (bad) dec fnsave cmp xchg inc mov lea sbb ss sbb repz jle mov mov sbb add sahf push bound arpl jnp rorb add mov adc sub inc mov mov sbb xor cwtl roll adc (bad) push in cmp (bad) ja sahf rcrb popf push mov sbb lds aaa jge mov xchg packuswb out xor (bad) pop jle fwait cli pop add and pushf mov loop mov orb mov ret mov push ja push movsb mov jg or aaa cmpsl push test pop cmp jge dec push mov xchg cmp add sub xor xchg cmp xchg mov mov test mov jb cs push inc pop stc jg clc dec iret inc jge imul or and ret daa loop fs mov mov movsb ror or hlt jns cs icebp xchg mov inc sbb adcb mov cmp add insb xchg pop sub notb lods int3 andl sub sub and ljmp pop mov pop cmp (bad) clc fsubrs push jne out dec dec xchg inc sbb (bad) jge vmwrite and mov push dec cmpsl fdivr jg push xor fsubl mov mov jmp sahf push push xchg (bad) fcomps adc incl add mov fs repnz mov mov dec pop aam push xor mov mov (bad) andb or push sbb cmp add mov loop xchg pusha mov ret xchg in mov imul movsb pushf inc sarl mov jecxz push cmp aam xor repnz cli xor inc ss test fadd sbb (bad) dec pop popf lods gs shll lret add leave xchg fstps push (bad) cltd or out inc and mov cld sbb xor clc mov das inc adc (bad) stc arpl arpl xchg in sarl test pop ret mov je dec ror xchg cmp and into pushf (bad) inc out xabort stc sbb std or (bad) int3 es icebp add pushf inc xor cmp aam es (bad) or push inc sbbb fchs sbb jo fwait sahf mov dec sbb xor pop imul clc rol cmpsb pusha movsl sahf mov jnp push xchg outsb jg lret and inc (bad) int adc add cmpsb dec leave push sub (bad) fisttpl andb push adc xlat jp xchg adc int sbb push or rol cld in insb movsl pop in sub test or mov cmp (bad) shrl adc xchg mov sub add mov push (bad) in push cmpsl stos insb cmc and pop cmp repz xchg repnz pop and fnstcw cwtl inc xor or dec popf dec mov clc lret out cmpsl in bound scas cmpl out mov or sub xlat jle dec mov mov jno int3 jp (bad) adc mov (bad) ljmp fistl xorb jle popa fcomip clc push push pushf jle call cmpsl xchg jle (bad) int3 loop stc push ror jp xchg fldl2t jo scas jmp (bad) cmp cwtl leave mov mov or (bad) test lret inc jae jmp clc xchg scas jle in jge addr16 jle pop inc push scas lcall adc mov inc iret lea cmp jb test mov cmp or mov (bad) dec pop mov cmc jl xor push out sbb lahf (bad) lds test jae cli xchg orb fnop cmp test or jge mov rcrl into clc sbb mov enter lahf or jp pop mov mov xchg movsl inc mov inc push (bad) ss (bad) mov ret or xorb loopne xchg push pop (bad) sub add stc add fcmove ss adc mov into cmc or test fildl notb cwtl pop jbe and push in div jo xor gs (bad) mov or insb daa sahf daa das sub jge mov mov insl loope pusha jo test sbb sahf (bad) aam mov movl (bad) mov in mov out lock push (bad) mov out sub iret jle out pop cmp outsb adc insl and sbb jle mov adc add cmpsl pop dec shl aaa jo cmp sbb mov imul jns xchg iret idivl add xchg lea xchg std out rcr scas cmpsb inc out mov sbb jle or cwtl xor pop mov jle push cmp xor mov repnz adc jne js (bad) out sub test fsubrp mov daa mov vmptrst mov mov push fisttp (bad) pop cld jmp cmp pusha (bad) or xchg fisttpll add adc ror cli cmp xchg pop fwait and push out enterw dec xor mov aaa inc sbb (bad) and mov sahf mov clc cmpb jbe insl mov add jle out push add lods scas mov mov xchg movlps xor jae inc mov jle push movsl and xchg xchg popf cs add scas jle movsl mov mov sbb loope mov mov sti adc and in jmp das pop mov dec inc inc jno xlat inc cltd xor jle xchg push outsl cmpsl std sti jle ss sub bound addr16 xchg xor dec out push and xchg test cmp add mov clc adc inc adc ss xchg in xor xor lahf pop fistp push clc or mov insb pop mov pop xchg mov mov and je add cmc pusha add mov std rorl in into xchg inc mov add (bad) aas jo in cld aas pushf jecxz mov and fildll xor xor jbe mov imulb xchg jge sub push jle jo cmp sbb jge fsub or or idivl in data16 pop jmp outsl xlat mov in pop xchg pop movsb mov pop ficompl mov aad lea lods push divl xchg lods bound mov lock add mov add jae mov sti pusha mov pop sbb test pop jne cld push les jle and xlat out pop fbstp dec inc jmp jle xchg andb lcall es or clc mov cmp inc in sarl loop jle andl addr16 mov cwtl jmp js mov roll cmpsl mov xor inc jp hlt mov or call jne scas in dec add mov rcrl push lret xchg jle iret cli in imul xor dec enter mov lret sbb add scas jle mov dec cmc negl addr16 scas (bad) cli mov rorl lret mov inc decl das xor adc mov aad xchg cmpsb xor cmpb mov lods cwtl out pop cltd mov out jecxz add mov out imul cmp add jmp mov jb cmp iret minps repz sti scas push cld testl sbb cmp sub movsb mov insl aaa jbe xor daa data16 adc movsl xor push xorb lret cs pushf xchg addl push xorl and fsubrs adcl nop pop xor inc ret xchg das xchg pop (bad) pop mov push jbe mov lahf fcompl (bad) mov pop push (bad) faddl or sub adc sbb xlat popf xlat xchg fnop imul and loope iret cmp sub inc cmp mov dec xchg (bad) incb dec (bad) jle test mov jnp rolb ror cmp and repz jcxz mov mov xchg cwtl in inc sbb or stc adc cmp pop je inc sti and sub aad inc dec xchg and inc adc pop aas or jo (bad) mov xchg rolb jecxz xchg mov pop jo inc ds mulb add leave outsb cmp cmp sbbl in mov cli fld add and pusha adc pop loope lea rcrl fwait pop sub xchg into pusha or popf sahf pop (bad) mov pop add repz pop idivl int3 test xor push sbb stos int3 std or fisub iret cmp add loope (bad) cmp fwait sub xchg movsb inc retw ds out ja in std adc xlat sub jp mov mov subl xor adc mov stos xchg mov xchg pop jbe cmpsl mov sub pop mov mov lods and inc cmpsb aas add mov mov xor xchg or pop pop cltd rolb inc aas fs aam sub pusha movsb (bad) or clc and xchg es int3 lret outsb cwtl mulb aaa cmp ss pop xor lds cmpsb fisttp jp adc repz adc jb jg popf sub mov test pop lods adc or jo sbb mov push add ret sub fstl mov and sahf sti dec lahf stos std insl in mov adc scas fs insb pop lcall push jno add add inc scas sarb adc jle in xchg jg xchg mov add xor and jp cmp xchg pop mov or outsb stos (bad) push mov or hlt inc inc mov mov pop (bad) dec inc cmp scas int xchg push (bad) (bad) (bad) mov cli loopne dec pusha lock sbb xor mov ja sub in sub cmpsl xchg popf xchg insl dec sbb jne fdivl mov pusha daa inc repnz iret pushf out xor in je hlt scas into (bad) xlat std xor lahf rolb int3 inc add movsb xor inc fldt cltd push jl mov repz push testl inc ret ds sahf je jnp aaa and mov sahf fnstcw sub cli sbb jnp pop jno xchg sub sub mov call fsubl mov dec push jge xchg fdivr and les sbb inc scas add push push das xchg into add orb pushf push out rcrl mov mov fild inc sbb push es iret (bad) fcomi cs fildll jp cli jle add das (bad) mov fsubr jl (bad) fsubrl push into add je stos cmp gs clc add sbb inc (bad) out clc jecxz mov scas xchg int3 mov xchg sahf jae jp cmp xor add out sub mov mov pop (bad) arpl cmpsl inc addl mov adc loop imul ret or int3 js push xor testl sub cmc mov cmp xlat sahf add dec jo lret cmp sub jne lahf jb mov add enter pushf iret xor jge orl pop divl enter int3 test std adc push sbb xor add ds daa nop adcl xor sbbb sub clc xchg jmp andl and test in cmp stc lea pshufw mov fimul xchg inc int (bad) and cmp push fs mov xchg addr16 std xchg stos and ds sbb lret in cmp std fs and in js mov in les int3 popa inc mov sub dec pop sti mov pop push and dec push jle push xor scas enter int3 pop iret push mov test mov lods scas adcb xchg cmp insl (bad) jle jl popf mov mov lea repnz scas jle mov stc cmp (bad) daa mov jle mov aad cwtl pop fisubr (bad) pop push data16 mov xor mov insb sub in push xchg pop jle (bad) sbb iret jle cmpsl icebp mov pop xor push jp fwait pop mov pop outsl stos adc out jle mov jnp jle aaa mov jo push adc xchg icebp clc mov js pop into xchg push sbb addr16 outsl jp adc mov jle hlt cltd ds movsb sbb jle dec addr16 pop scas ficompl loopne jle (bad) mov inc or into data16 icebp mov lea and out mov mov clc (bad) adc stos add xchg das sub add fistpll or push rorl sysexit clc add pop cmpsl pop jle idiv lahf xor and arpl inc mov (bad) mov push jp and jmp test mov mov mov clc push test das cli xchg sarl pop stos fiadd or mov inc das jns mov jo sub ljmp scas hlt ret shrb ficomp pop cmpsb int3 sbb push xor dec xchg xchg mov je cmpsl inc fidivr xchg sarb (bad) jle pop scas push inc xor loop test add orb jp cmp xor add das xchg jae out and sub jne loop inc decl or out xor dec dec jle popa mov cld jle scas add mov sahf or movsb push and ret (bad) jp (bad) fsubrs outsl jp (bad) xchg jbe mov (bad) (bad) mul data16 jle (bad) test add fcomp fsts arpl cmc xor inc mov push xchg mov scas orb clc sbb or add or imulb into and icebp cmpsl cwtl mov sbb pop lahf fidiv shl rcrl ret pop ret cmpsb sub sar mov xor lods sub outsl xchg pop (bad) rclb std inc push jle and push lahf pop sahf jle push fcoms push and mov xchg dec inc add jle (bad) and aam adc push aad mov sahf frstor ret pop cld jle dec push jno fdivrl dec jp adc in icebp jle (bad) and mov sbb pop jmp jle das pop out sbb in out jae std pop mov pusha xchg je and lea add mov mov movsbl lods sub add mov or push cltd push divps lock sarl out loopne or aaa in mov sarb inc add mov dec add lock dec test add ds sbb arpl pop push adc jle aas sub sahf negl pop into add icebp add add jnp push fsubl test pop test mov mov lret dec cmp cltd sbbb mov mov jle daa lahf in push mov jle test push es add ret sbb mov fldt mov sti jle jecxz sahf ficomp ja fcompl pop repz jns out and mov out cmc in push or lret call inc mov and jle xchg mov aaa jb cltd scas push out jg cmp push push enter adc mov ja lahf pop test in jns aad leave scas call jno mov idivb xor xchg (bad) xor mov xchg outsl jmp iret xchg lcall loope dec inc cwtl inc aam mov adc xchg in jle push mov add int (bad) jbe dec mulb jle add jle lds adc out jge jle mov and push xchg insl pop fs iret cmp jle add xlat mov cmp xor jbe mov inc dec xor jle test ret inc mov jns xchg xchg xor push inc jnp movhps mov pmaddwd inc push xchg push and arpl popf ret xchg xchg leave popf outsl add or dec jns (bad) mov inc push xor test fbstp ljmp pop je pop and add jno subb push lods and push adc inc adc mov lods call push xchg xchg xor pop mov movsb in and in bound mov mov pop cmp out subl hlt mov jbe mov (bad) jae sti jnp (bad) jno xchg repz push sarb inc mov and inc cmp push scas cltd add xchg push jp ja cmp and sub pop je,pt popf push adc cmp push sub (bad) in sbb cli fs add hlt subl lods cmp mov or mov ljmp mov lahf ja push or or ss data16 xchg subl divl xor stc test movsl mov je xlat xchg gs pop jb and adc xor or fmulp add idiv jae xchg call mov cmpsl rcrl inc push cld cmc pop push sub mov dec loope insl scas js pop add mov ffreep cmpsb add psubusw insl mov mov das add cmp push in adc lock fnop (bad) lret movsb das mov mov jbe test aad ljmp sbb sahf (bad) xor cld push loopne add inc sbb or insl fsubs pop sbb scas jne pop adc test push xchg xor jp push fstps xchg mov outsl push lahf iret aas (bad) imul les xor mov mov mov add je int (bad) push jns je popf hlt jg mov xchg pop inc mov xchg imul (bad) xchg add iret pop das xor ficom or arpl (bad) fxch xor add sub pusha pop pusha inc jne adc dec jbe out dec mov xchg pop mov shrb and inc faddl aam out mov fwait dec pop xlat cmp mov adc xor mov mov mov mov addl push mov mov ret mov sahf push int3 dec out popf push sub mov outsb push lret imul pop das xchg (bad) jb movsl sbb mov add imul clc adc test cli aad inc add cmp and inc repnz mov movsl mov xchg mov mov ss push cli fmuls cli (bad) enter dec sahf sub rolb sub pusha adc mov je mov jb shrl cmp lds cmc aas pop inc enter cltd out js adc in outsl sbb xorl aam (bad) add lahf fdivp push xor jl stc scas xor cmp scas icebp cwtl mov sub lds in ficoml pop mov or clc divb insb sub pop xchg ficomp and mov decl insb ret mov cmpsb mov mov mov add loopne jmp push mov fwait popf movsb cmc pusha mov lcall scas adc inc mov mov mov jbe push inc lea lahf insl orb sbb shll das imul dec or push mov jle sub insb dec pop outsl adc cmpsl sbbl lret rolb fildll mov mov lods dec stos cmpl scas mov jae aam pop mov jle outsl dec je cli test jle scas stc sti push mov (bad) in jae jp dec pop insb mov ret sub jge stos imul xor ss aad cmp push test or mov mov adc mov push call scas rep lret lock test jle loop add jle xchg inc popf insb adc in adc sbb fidivrl or cwtl jle icebp loope cmc addb jb pop and pop jg xor add insl or or xor dec invd inc jl xchg ljmp push or ljmp pop jle jne lahf std pop dec movsb jle loop dec int jmp sub jnp mov jle test pop jle jmp and jle (bad) push fmulp jno pop scas das hlt (bad) inc (bad) mov cmp lds and add dec addl (bad) mul in cs int mov push sub out or dec clc insl add clc test mov or rcl inc sbb pop aad dec mov test inc lahf shll hlt (bad) js jns mov dec dec out mov xchg sub fimull pop sub sbb mov or push scas fcmovnbe imul jle lea js cmpl lods aam dec or jns (bad) mov inc jle lds cli sbb mov dec pop xchg dec mov fnstenv insl mov jle and lret sbb cli xchg popl fcompl sbb mov adc adc inc mov sub push pop scas lea xchg and cwtl js xchg mov repz pop jmp sbb mov adc cli sub jl in jle and fsts addr16 inc or fstp dec jle test add sub adc lods mov loop sbb cmp out ror jp test inc les mov aad jle inc nop pop jns stos repnz sub adc pushl jmp jo pop push xlat xchg js sbb mov call into xchg inc cmp push lods add outsb les and in adc loopne rcrl jp jle mov popf arpl push add mov push gs movsl pop pop push adc xchg outsl popa cld sub outsb jae xor mov popf fistpl mov lcall pop aam dec jle xor cmp arpl jle or scas enter loope adc stos xor fldenv or jge aad and jle sub std (bad) jle xchg pushf cmp jle mov inc add sub jle pop mov xchg into mov push and push aas out fistpll jge pop cltd add test inc stos ret addr16 push jg aad (bad) aad jp pop outsl cs ror sub pop jle sbb or addr16 add test inc mov mov ret aad dec push imul adcb das std jle pushf fcomp inc inc sahf fwait push lret jle lahf sub test mov popa pop xchg mov push arpl scas insb test inc cmovno popf xchg xchg (bad) ljmp cmp jecxz jle pop cmp repnz jmp mov pop test out xchg sbb stos in sahf jg sub (bad) pop push jecxz fildll rolb fwait push mov push dec inc pop cmp cmp add pop scas popf inc cltd sbb addl sub adc pop std repnz jmp je add out and adc dec push pop andb inc fwait cmp cmc adc push mov cmp push out pop lret push sub leave enter mov jb dec jg rolb clc leave pop jle cmp cld push lret add xchg mov out inc cmpsb inc clc rdtsc inc insb jp mov mov xor cmp jle mov cmpsb loope sub out movsb add xchg rorb imul jle xor fstpl lds scas dec ret sbb popl sbbl stos pop imulb jle popa mov fadds pop or xorl inc jle iret ret cmpsl cld movl mov loopne out lods inc sbb pushf pop sar ret sahf scas loopne iret cmpl or mov jno or cltd ret test sbb ret mov cmc adc and add ficom mov data16 push cvtpi2ps xchg xchg arpl negb jns test stc cli (bad) or pop js and lcall cli mov mov cmp jecxz pop xor push stos dec ds lahf pusha clc push pop mov cmp inc (bad) test out lock jne inc cli in ret pusha loop je lcall aad les movsb es das dec imul xchg lds or ficompl sub cmp fcomps dec jmp jle mov pop imul stos jnp inc ret leave (bad) or jle or imul inc shll inc sahf scas in jecxz sub cwtl jle add jbe jle push mov sahf dec sbb cmp aaa rorb out xchg adc aas dec aam sarl imul pushf and jle mov and outsb insb inc and insb xchg xchg sub xor xchg mov xchg jp fimul push mov cmp jle mov movsl dec push adc pop addl cmpsl jp sahf (bad) mov movsl fldl jp add add loope mov lcall sbb cmpsb jecxz mov loope inc xor fwait (bad) sbb in sub jae ds push bsr (bad) sbb and push (bad) scas add xor lahf and sbb adc int3 inc or rcrl paddw (bad) pushf jnp push cmp clc pop dec mov cmpsb aaa inc lods mov mov fldcw cmp mov jecxz hlt inc psubb sub aas or loopne inc pop (bad) jmp ficoml scas das popa mov mov insl das out aaa push jg xchg notl ja scas and pusha adc push mov faddl xchg mov dec add mov test mov cmp push sahf mov inc nop or cltd push fcmovnb adc mov mov mov sarl stc add cmpsb scas sbb push jp cli iret fs dec xor in push jle xchg mov js mov jle fwait push xor aaa movsl add std jp xchg popa fnsave jne xchg xchg (bad) jle push xchg cmp dec sub jle sbb icebp addr16 adc jle sbb movsb mov or sbb movsl jb sbb or push (bad) inc push xlat ret push push inc jge clc mov int3 sbb inc rclb in or cmp push jge or cmp and and push clc in inc mov mov cli jmp jl and sub aam subb loop dec and scas add cmp ret pop in vxorpd mov roll je pop (bad) sti subb lret neg or add adcl (bad) dec inc clc insl imul sbb xor (bad) xor mov lcall out jns xchg dec or pop inc test mov or dec jne jge xlat mov mov cmp pop int lret pop jmp dec es int xor xchg outsl addr16 add mov fdivrl xor xchg aaa fimul xor mov clc arpl cmp icebp cwtl icebp cmova or and into enter pop jp (bad) mov clc insl push loop xchg mulb sub out jbe dec mov ror pop hlt adc xor jle push xor jbe sbbb sar sahf mov mov out add cmp mov pusha xor pop mov in jg leave nop mov out sub retw ficomp mov test push js das ljmp fcomps mov dec pop mov dec sti ret adc ret push lds xchg xchg mov mov clc adc push inc jle xor (bad) dec mov jle xchg insl sub loope xchg mov pop sub mov jo cmp aad jae ret ljmp jo push int3 mov jmp (bad) decb in pop xor repz mov ljmp aas imul and xor aam stc pop sbbl rolb mov sbbb ret orl cmpsl mov push dec pusha lea arpl ficomp jae lahf sbb xchg test jmp or and add adc mov pop mov hlt push and cmp insl mov cmc notl (bad) cmp fdivrs data16 xor aaa insl leave sarb daa mov (bad) into sbb cmovae mov (bad) jg or jae jmp jne arpl add iret daa sar jecxz in xchg daa ljmp add fs jp push jne fsubr popa out adc adc mov push cli add mov jle dec fsubs sub jle mov imul into cli add out jne (bad) mov mov hlt push and insb mov mov mov std sbb xchg pop dec mov clc adc pop jecxz in xchg mov ror mov fldl mov xor mov and into xlat cmpsb add (bad) xchg dec jp cld push mov inc and xchg xchg or push cmpl (bad) out mov cmpl sub cmp out jnp jmp jle or icebp in jle (bad) (bad) jae sbb fs fst ret lret hlt inc fidiv into sbb nop mov jae ss nop/reserved xchg cltd loopne mov (bad) movsl inc fbld gs jge aas xchg pop mov mov (bad) rolb sbb fimul or enter into jmp dec mov sub dec ret dec cmp adc mov movsb imul mov dec mov cmp jle xchg (bad) fldt stos xchg jle mov mov mov add out jle mov xchg outsl jle push dec shrb xlat or push mov mov xor dec push pop jge rcrl push sbb push jle cmp push inc mov aas xor mov mov shlb cmp push or gs add daa jle dec fisubl (bad) std push add movsl test scas aam popf sbb xchg repnz jns in adc adc jmp ss int xchg subb scas add adcb push sbb pop fdivrs into in dec mov out or arpl or and sahf cmp dec jle ss dec ljmp or push xor jle inc ds movsb loope iret pop adc into sub jle js addl dec xlat cmpb outsl clc pop out mov lds (bad) jle mov push mov les int movb jns in lods jmp mov hlt sarb xchg sbb mov loope test scas popa jle push mov mov ljmp (bad) xchg jns sbb push leave mov icebp out fldl jle xchg or pop or mov mov mov add add js (bad) ljmp cmpsb icebp test hlt cs test es xchg daa jecxz out jle pushw out fdivs out inc pop xor add jle mov addr16 jle jbe adc insl jo stos jge test test xor push xchg in clc cmpsl pop xor les adc test xor push repz aad or or sub loop outsl jle pop adc dec outsb jp out jb stos jns inc cltd sbb mov loope lods add bound pop mov aas ds jle mov je pop sbb push mov push xchg mov or call outsl aaa dec push movsb jle jnp hlt mov sbb jle xchg jp cmpsb divl jle enter mov dec cwtl jle sbb mov mov mov out scas sti and add std jle fdiv dec xchg push push or cli rcll pop jle add into (bad) into nop mov cmp imul and cmp xchg xor sbb xor mov or jp xchg inc loope dec jle ror shll jle jp xchg fs (bad) lret cmp in mov aas and test jle mov das out loopne insl clc movsl mov int3 mov or mov enter cli dec xor cwtl pushf ss mov jecxz push popf mov pop xchg mov or and addl repnz dec lret js xchg das ficomp pop addr16 add push push std mov das cmp add test cmpl jnp aad xlat shll xchg adc sarl sub test inc (bad) jle xchg lods cmp xor mov push loopne jno and add jns jle jg loope mov xchg cld jle cmc lods adc and jle lret sub add sub fstpl out arpl lcall jae sar xchg mov jecxz mov (bad) inc jle lret xchg sub fisub fs (bad) iret xchg push jnp jg (bad) out mov mov test aam jbe jge cmp mov sbb mov mov arpl pop mov lods sub sahf mov xor dec sbb (bad) jl mov enter jmp pop mov push or lock leave xor in pop outsl push cwtl test mov clc scas push cmc test xor and leave test xchg dec fwait cmp pusha mov shlb scas inc mov pop ss fstp sbb subl or (bad) outsb insb sub xor dec xchg push dec iret outsl xchg pop clc sbb mov nop jnp adc xchg push mov cmpsl (bad) push xchg in aad inc adc shll xchg roll call hlt adc adc or lea (bad) mov jle jnp xchg push mov sub (bad) js mov fcoms sbb jne jle std add lock fcmovnb rorl add mov mov int3 mov xchg or mov ja outsb and cltd jb (bad) out test pop in or loope jle jmp pop sub (bad) fildll fidivrl jb aam pop lahf xchg loopne xor loop jns movsb mov add ljmp sbb loope xor (bad) movsl adc xchg (bad) mov xlat push mov notl push or xchg (bad) (bad) jg imul jle scas and sub cmp or cmp push lcall (bad) jo push jp das stos js cld fstl clc pop xor push push mov jle outsb mov mov movsb cmp call cmp inc or mov test mov (bad) cmp das loopne mov fs mov ljmp nop aam mov cmpsl pop outsb lahf or xor dec add dec push stos inc fsts sub cmp js cmp push jle lret fisttpl lds add (bad) xor aaa cmpsl dec movsb xlat sbbl loop add icebp mov outsl xorl ret jge std inc (bad) ja cmpsb scas imul jl jmp fiaddl jnp int3 jp dec jl mov or test iret aaa pop movsl (bad) into cmc xchg push ds shl lahf mov loopne dec std dec push push int3 jle fidivrl idivb jle adc or jg mov and mov xchg cmpsl lcall jle mov stc in jle pop in or daa push aaa int3 cmpsb and scas lock loope push lds mov shll insl scas sub push mov cwtl insl (bad) bnd jno jle mov or jmp lea mov sub mov sbb xor inc jl lahf push pop pop cmp (bad) or arpl hlt mov adc and mov fldcw fs jb gs push pop pop xchg cmp push in stos out sti add add mov in mov ret movsl loop push lods mov popf jmp cmp mov fild jl pop mov inc stc xor inc mov faddl lahf cld jnp sub inc lret inc adc insl aas cmp dec movsb sub xlat ljmp mov pusha xchg mov orl push and jo dec jmp out push ja jmp mov dec mov pop jle xchg add idivl cmpsb nop hlt in xchg leave xlat popa test fwait imul lods rcl mov leave stos or and sahf lods cwtl jae andl add adc mov aad mov addl scas mov je (bad) out add pop je jg mov in add sub repz lcall sbb and aad sbb cmp loop fisttp pop adc pop mov pop pusha xchg lret dec popf insl jmp mov out data16 xor dec sahf add mov sbb xor xchg jecxz inc cli xchg cmpsb push les mov mov aaa jp or cmp pusha call mov mov jmp punpcklbw aaa sub cwtl or jns stos cmp inc mov out hlt fdivrp inc (bad) mov jg adc loop cmp xchg repz popf enter pop roll push test iret inc aam outsl fnstcw mov xor or (bad) loopne jo xchg add mov popf dec xchg aas dec inc mov or mov jbe cmc push xchg pop (bad) loope cmp rcr mov int ret aam mov (bad) mov (bad) jae sarb mov stc fcoml inc aaa jae clc ljmp jp cltd repnz fmull xor or int daa sarb add into icebp push push dec xor imul pop movl imulb dec mov fadds lods mov lahf sbb adc fiadd addr16 inc push mov lock dec add mov sbb andl je lea shlb pop jle add sub repnz scas fcoms mov xchg dec lcall cmc (bad) fidivrl (bad) in rol (bad) inc adc aad (bad) sbbl hlt inc jl scas lret or pop fistl mov push movsl cmp rcrl mov dec cmpsl inc insb cmp std fcmovnbe fs inc lahf in xchg inc jecxz jle out jmp addr16 jae cmp push mov mov mov scas sub xchg stc and imul icebp mov sub cmpsb in push out test lret fwait and or xlat sahf mov (bad) leave rcr cmp insb cltd mov mov fistp daa push sti add mull movsl cld sub jb adc in adc xchg stc pop add test fldl add jnp mov ret mov repz xor pop xor jns movsb popa outsl (bad) jl sub push jle mov fistpl sub sub jle mov push jmp mov roll sbb jl xchg jle dec pop stos xlat inc es dec imul in out xor push xchg mov (bad) dec adc xchg pop and out xor jnp jle xchg add inc jle mov jle xchg push std or jnp jl cmp repz pop add mov int push iret jle xor push loop fnstcw mov inc mov or mov mov xchg bound push fcmovnbe xor dec sub mov ja cmovle das jp jo mov nop out dec cmp mov jne jle bound out jo fdivrl cmp (bad) outsb adc mov push dec cmpl mov push and inc dec (bad) cwtl jp pop xlat adc std pop insb jnp hlt mov sub insl mov (bad) fdivs lea lods mov cld cli adc mov ss mov inc dec xchg mov sub imul push cli sbb pop jle or (bad) and les sub mov aas sti push out mov addl frstor xchg in fisubr dec testb lret (bad) mov mov and repnz mov aam lret lods gs jnp inc fstp dec fisub lcall push lods jle int xor aaa inc jle out clc in adc lret sahf push sub pusha or js sbbl test xchg mov std xchg sub shrb add jb xchg mov sub insb mov mov loop add or rclb shrl negl ret loopne jl mov add add or scas and stc ss shrb xor movsl or inc hlt rcrb push pop push movsw cmpsl xor push xor sbb dec jns cmp inc push adcl ds push xchg aaa mov pop (bad) jmp fist rdpmc jp jae push pop mov mov arpl mov or out mov (bad) xchg mov imul int3 push rcll jnp xchg pop shll fdivrs aas sbb jle adc into jle lret fdivrl inc (bad) cmc std insb es xor out push test addr16 and mov nop (bad) push movsl fnsave lods xor push lret rcrl push inc leave push scas add dec cmpsb and jle inc (bad) nop xchg xchg mov bound and das aaa mov sarb inc insl cmpl icebp xchg lds and push adc pop inc lods add rorl mov push mov pusha subl sbb mov pop into xor jle lock add pop clc jnp and std fwait sbb stos and (bad) out stos repz (bad) ret jle arpl xor mov mov pop jns ret lea mov cmp movl jle adc push adc sarb jle pop mov imul (bad) inc mov jle call xchg das jle push mov jns adc cmp sub jp or daa sbb cltd fist jecxz adc out push out incl or cltd sub pminub mov or imul or daa mov iret iret int jne jle lock jle sti push push ror mov in lods jp dec mov add sbb popa mov jle and xchg fidivr and inc aas insb jne pop jecxz or js icebp nop jl jle cmp (bad) xchg jne out jp xchg xor xor in jle dec ljmp mov push jl add (bad) mov push (bad) mov xor scas or xchg insl clc jns rcr jle iret scas add outsl (bad) mov and mov pop add jle jbe ljmp jp imul fs movsl xor pop clc or mov mov cld fdivs repz into xor mov dec fnstenv jle cmp shrl mov push (bad) adc pushl add pavgw pop mov je inc lds test pushf loop outsb shlb orl xchg rorl mov adc jns fcoms sbb jns not and int dec cli and push inc cmc icebp jo pop negb pop or lea into add arpl test mov das aaa push pop add pop xchg ret leave xchg xchg fisub in jle aas fstpl mov add push mov mov out pop and out or out xchg lahf js repnz movsb notl rcll dec pop xor movsb clc xchg add mov mov clc and sbb rolb sbb mov or clc push jg adc mov mov divl mov adc and jo xor dec outsl adc mov jmp scas xor add add push test pmaxsw cmpsl add jle test jnp jle and push jle cmp xchg sub cmp (bad) cld cwtl and jle xor jle jge adc jle or lock xchg pop popf mov pop cmpsb mov lea dec aam mov xchg jle inc mov clc outsl mov and xchg xor outsl jbe mov test and inc inc out pop imul stos sarl push jle nop sti cmp jle xchg popf jbe xor adc mov outsl test mov cmpsl clc adc cmp adc and repz (bad) pop jle mov xor jle scas push addr16 mov pop push sahf scas push dec (bad) sbb xor rorb adc xchg jle aas mov xchg xchg out mov jle fldt lea push jle frstor dec push pop pop mov out push inc cmp lret mov imul dec xor jp mov bound add icebp dec stos jne jle cmp rolb mov out push outsb jge xchg (bad) lret mov and lds mov mov cmp pop pop lcall dec call aad pop popf mov mov sahf sub in jle outsl cmpsb add sbb inc pop hlt jle xchg xchg aad scas stos mov xchg outsl js xchg cmp out (bad) sbb imul push data16 jle or cmpsb pextrw addr16 jo pop testb rcrb xor jns aam xor cmp mov sub movl cld out mov ss jmp and adc shrb and popa (bad) mov push xor jno or (bad) ret aaa and lods aas out call outsl push add jle sarl push cltd jmp fisttpl push ds mov dec or push xchg cmpsb sbb jb cmc sub lods dec les call fisubl and (bad) scas cltd mov std fxch and jp xchg scas movsl repz inc push outsl popf push stos pusha loop pop scas or ret mov clc pop sub orl mov int std adc movsb inc cmp jecxz gs cmc into mov ds mov xchg xchg mov jge jle mov jne leave cmpsb aas repnz test pop movsb adc xor cmp adc sbb jmp ja pop jp sub das mov mov dec push jl movsb push and hlt outsb sbb out icebp lahf test imul in scas pushf push daa lods xor jle cmpsl pop out push or fstpt cmovge (bad) clc add jle add movsb sbb (bad) insl sub cmp fdivrl xor push cmp outsb xchg push dec or ja fidiv cmp mov leave int icebp xor xor inc aad add jle dec adc xlat adc jle fiaddl dec scas jge aad pop outsl jle (bad) mov (bad) push or leave mov les jle cmpsl cwtl pop test aaa push mov jl subb jle mov pop sub xchg sbb xor mov mov or mov mov mov sub in sub lods and repz jae (bad) pop incb leave das inc push xor sub pushf mov xor push shlb xchg sbb ret (bad) dec (bad) push das mov xor popf pop pusha addb icebp addb push adc or sbb xor and loope lsl flds outsl fmull stos xor pop fcoml ds or xor jge xchg (bad) clc push add movsb jae cmp scas xor stc repz pop in adc dec mov cli subl cmp test fstl stos push sub sub mov cmpl cltd jecxz lcall mov test imul test out je ds jns sub test pop adc push test adc adc or mov sbb pop fs test das or cmp fwait push andps add push cld jne push adc lahf cmp pop xorb in mov jne xchg jns lahf jecxz push inc out jl stc xor pop or inc stc dec mov mov pop lret aad imul push rorl out loop insl (bad) xlat mov jne pop adc fucomip cmp stc cltd add (bad) lea pop clc test lahf and test lret xchg push (bad) pop xor (bad) add icebp push push int3 sbb xor je in adc mov adc adc movb adc pop (bad) fiadd xor push aas and ficompl roll push movsb dec roll inc mov mov aad jnp jmp sahf jmp dec aam xlat pop xchg clc push sbbb insb dec stc jl jle dec lds mov inc jno xchg divb xlat dec adc (bad) cmp mov dec stos jb outsl fnstsw cmp xchg push dec lds lods scas aas mov (bad) ss cmpsb sub lods dec mov dec insl push or sbb push in and dec jl out stos cmp ljmp imul dec out idivb sbb stos cwtl scas fyl2x mov sbb clc incl adcb sbb test scas cmp cltd and scas call cmpl std pop movsb inc pusha jle lret jo outsl mov dec xor scas lret lds mov or mov add push hlt or cli sub jle andb cmpsb jl into jle pop mov in test pop fwait cmp sbb fistpll stos frstor ss sub add pop and jle ds out call mov (bad) cmp jno shl (bad) jle daa rcll sub cmovae inc sub enter push cmpsb sub clc dec jne fwait ret push cmp fwait adc in mov xchg ja jp jnp jg cmp add xchg std scas cmp shrl test mov sahf pop aad push leave addl jle mov sbb imul push cld cmp out mov outsb aaa mov jle movsl mov dec jle cmp imul repnz mov mov inc aas and inc iret jle fsts cmp popa sahf enter cwtl push jle jae test lret jle jmp in dec insb cmpsl xor jle int3 ljmp popa leave in jg insb lret xor sub ss notb cmpsl inc subb movsb jae lods mov (bad) cmp jne jp lea pop popf and test jb (bad) mov fildl jle aas cmp or mov cld mov (bad) fnstcw jne das jmp adc push bound cmp cld into mov jp jns popa jle fdivr aad inc sbb jle cmpl out in (bad) daa mov mov jge les mov xor ret fsts loop cmc xchg or jmp xchg push out mov aad pop pushf xor testl cli out fdivrl aad push in pop or daa cmp inc pusha enter inc pop sbb jp add push xchg adc scas xor std les add lods add (bad) outsb ja call mov fdivl bound sahf fdivrs add jle xchg daa (bad) and repz outsl lcall jl jmp xor addr16 in aaa jbe cltd lret into pop mov jg add push and jno ret adcb add js and xchg repnz jle or adc mov in mov out jl jecxz outsb xor or (bad) jle sub jne addl xlat hlt jle xor jl lods loopne cmpb xorl stos aaa lds sahf sbb jae mov fsubrp jle fdivrl pushf add jle jo jmp adc push shll pushf mov out adc (bad) or cmpsl out jnp adc and mov int3 sub jmp or cmpsl out add ss xchg movsb mov das inc or cmp push dec push stos lret fisubr sbb ror cmp int3 xor lahf jo into addr16 cmp ljmp int3 out fwait add leave insl movq xchg sub adc pushf dec sti jmp pop daa data16 cmovo xor (bad) int3 jl mov mov (bad) lret add (bad) dec scas sub cmp je jge divb jno push mov add cmp add arpl leave and das stos mov jg cmp and enter jb nop or jl xchg sti pop lock pusha push insl mov in jmp dec std and mov rorl sub loopne sbb outsl jp loopne flds jbe or jle xchg ds call cmp and jb pop inc jle or shll mov and mov call insb push imul add pop lds out dec (bad) les lods subl cmp mov insb pop mov pop mov (bad) in cmp dec aas out mov stc jl (bad) test inc push dec mov jle or and xchg sarb cltd or lock jle or roll int3 lea std mov adc lcall sahf (bad) in mov add add inc int3 and loop das (bad) push dec test rcl cli int3 clc aaa fildl mov in cmp int3 jmp je fstpt jecxz rorl lahf mov inc sbbb sahf popf mov jnp in in arpl ss int3 pop mov dec rcrb mov mov sbb clc jb stc stos lcall out add cmp nop jecxz mov inc ret int3 xchg (bad) mov jae addb testl decb jne mov mov cltd adc leave jl cmc mov jb add std pop sbb nop add dec les mov jae lahf add stos sub ret xchg push cmp nop push push fistpll rcr add movsb xor cwtl rorl sbb mov sub pop and sarb rcr les mov sub jl mov sbb das push (bad) push mov pop mov movsl rcl ret ljmp out ds mov jo sarl daa or es xor xchg push adc sti notl pusha dec push repz jle nop sarl test mov sbb mov jle pop (bad) repnz mov fistpll mov outsb sbb lods jle inc jecxz pop jge sub adc cmp cmp test jmp int jge and mov sbb sahf data16 cmp roll gs sub jle lret mov add rcrl out je loopne dec jecxz inc repnz inc test iret xchg pop push jnp mov push ud2 inc pop push imul jne cmc pushf sarb loopne leave out jae add outsl out pushf flds aam inc lock test xor mov pushw fbstp ds sbb and xchg jb out mov mov pop jl iret xor and lahf scas mov pop jge pop sub insl inc hlt (bad) cmpsb es xor jne insl push dec loop jl mov adc jle in lahf (bad) cmp mov jl aam add inc mov subb enter xchg test sbb mov lods cs fwait jle rclb outsl out xchg loop ss xchg mov hlt in in xor scas (bad) jno sbb cmp jle push loope adc movsl out and jo,pt xor cmp jle mov jb dec fpatan pusha mov je fidivrl out stos sbb movd cs jmp rcr popa adc (bad) fistpl pop jmp cmpb jle push nop movsb cmpsb repz movsl inc insb int3 jle iret ja adcl adc stos xchg push scas mov mov in es aaa cmpsl cmc vxorps cmc or cmpsl sub xlat in inc sbb jmp in adc incb (bad) dec loope mov push pusha xor (bad) (bad) loope mov xor cmp pop je add jp mov jg jle jbe cmp xor data16 adc dec xor movsl jbe aad call jmp sbb jp int mov mov pusha mov push test and jns stos insl arpl repz fidivl mov aam inc movsb jle jo into cltd lret jle (bad) (bad) push sbb pop cmpl inc and adc pushf xchg loop jle es in in cmpsl jno jle and ss jle cmp dec push push dec pop out sub push stc xchg xchg sarl in dec (bad) in scas jle or jle xchg and cltd sarb daa and push nop cmp sarl lock mov or jbe test xchg mov std mov sbb xchg mov sub dec clc push jo lahf xor ret ja mov ret fwait mov fsts jns mov dec mov cs pop mov mov pop les pop test out or jp xchg repnz pushf add ljmp mov xchg in int pop inc mov or int3 nop jl mov jle movsl aas (bad) adc xchg jle push fdivp rep dec fsub and (bad) xor bound cmp sub xchg sbb loopne xchg or pop adc fldl test movsb scas add jle fisubrl xchg repnz cmp jle dec movsl xchg out fdivrs and cmc sub ja cwtl xor and clc and xchg xchg cltd push ret stos in rorl mov pop in sbb aad xlat pop into cmpsb fcmovbe and mov mov mov jb aam (bad) gs fstp jns adc (bad) cli xor add loope push mov (bad) xorb dec les mov xchg mov lock or pop fsubrp jnp or mov out scas pop lahf out pusha push test scas je sbb push rolb xchg jae ds sbb movsb aad hlt push das jbe in daa push aaa xchg sub cmp fsubs jecxz lock mov or add sub xchg jo pop scas xchg mov int3 sub ss pop ss or mov or in in addb aam xor cmp in or cwtl push nop inc xor xorl lahf or dec cwtl xchg out rolb dec inc push fcomp mov into xor clc ja sahf sbb test sbb call xlat test mov mov imul xchg rol jle call jle push push dec xchg push xchg cmp in test scas cmpsb cmp xchg sti mov movsl ljmp push cli inc dec inc in jg pushf iret mov mov stos scas xor mov stc mov mov test push (bad) in mov add aad adc mov cli mov push leave mov add dec pusha sub lahf ret in and push mov stc test leave sub mov xchg sub (bad) mov (bad) ja dec xor clc out and pop in jb (bad) popa mov mov stc mov (bad) stc outsb int3 lret insl lahf xchg inc or xchg xchg popf pop mov loope dec es mov loope xchg mov and lcall imul or int3 js add test mov add jns pop xchg push inc es adcl mov mov jmp (bad) mov js jle fldcw movsl bound mov int3 push xchg sub jo mov pop loope in sbb cli inc mov jp add push aas sarb xchg push add dec mov (bad) outsl clc xor loopne cmp test adc (bad) (bad) iret sbb push das mov mov and outsl jle mov push sub jecxz xor sbb sub lahf mov rorl mov mov fwait pop cmp in sub insl pop mov push dec ja xor dec into adc in sub push jno push fistpll push imul ds loopne and and sarb test push mov mov mov aad bound lahf jecxz jle mov loop jle adc (bad) pop xor inc jle lret iret lea pusha movsb fcom sub xchg js outsl dec lahf adc mov movsl es dec push jnp cmp mov (bad) mov test add scas mov fldt xor cli pop ljmp call dec jle test lock jle mov fmull insb (bad) sub in in xchg jae mov fwait loopne scas sti cmp xchg sbb xor jle mull add pop loop call cltd fcoml xorl xchg add aas call pop adc or push sbb rcl inc std fbstp test je push mov shlb cmp or cwtl out sbb sub cwtl sub jle arpl adc jecxz mov mov add or dec cmp sbb xor and (bad) mov cmp mov inc jo int3 clc pop jne mov fmulp loope xlat dec xchg jle add mov push sarl xlat cmp push dec adc arpl pop inc insb icebp cmp cltd scas testb scas xchg sbb dec icebp mov adc dec mov mov lods inc imulb in pusha aaa push add mov scas data16 add cwtl pop in xor mov mov cmp in scas test push sbb mov jle popa arpl or ja mov lret adc sbb (bad) jno or inc cmc insb jge scas loopne jnp jl sub jno push mov mov arpl dec repz sub pusha dec push or and cmp rorl or out sbb scas and roll jbe push outsl cmpsb sub stc js stos mov mov jae std scas sub dec adc sbbl add je rcl xchg mov dec mov (bad) ficom jno dec sbb cltd clc dec push xor rcl add lcall dec sbb inc cmpsb test or adcl push sbb loope cmpsl lahf inc pop cmp std xor loopne out sbb sahf cld mov push scas sahf pop mov adc jo mov pop or sti (bad) (bad) neg (bad) out push sahf or cli (bad) int3 nop outsl mov test mov mov mov cwtl inc mov mov push jle out stos rorl xor cmp jecxz cwtl mov add mov iret mov movsl push mov inc or adc dec (bad) aam push or shlb clc push sub stos pop inc not jb adc xor or cmp jp mov jecxz scas jecxz cmp cld bound and repz pop mov mov pop pushf cmp sbb jo sbb sub jnp lods xor outsb jge or int3 push outsb or cld out sbb mov jno jg mov xor jae or sub in mov sub test aaa push lds mov pop out popw pop sbb mov mov or sarb mov or hlt xor xchg lret (bad) fidivrl repnz int (bad) clc push psrad mov dec xor mov adc add cs imul inc mov enter jl mov inc xchg and add sbb call sub (bad) inc push mov xchg lods jbe mov mov and rdpmc sti mov push insl dec in jnp (bad) and add dec jo or ret push pop test xor (bad) jnp fdivl movsb or cmp jle push cmp ljmp je sbb cwtl or mov nop (bad) cmc pop js adc (bad) nop cld outsl sub mov add fmuls popf in pop push inc jae jmp out insl mov xor rorb or popf jle (bad) jg in scas addb pop pop pop ror cmp sub in sub jge stc in push es ret iret adc aas push arpl cmp pusha pushf les insb push xlat in scas ret clc aam arpl test mov jle aaa xor (bad) fldcw aas cmp dec cmp fs das es xchg int3 fidivr adc std (bad) imul pop dec mov test stos fildll divl mov push xchg cmpsl flds inc xchg adcl sbb popa inc gs inc adc fcomi popa rclb (bad) clc cld jbe pop cs stos mov fdivr or icebp add clc out mov xchg jp push stc jge xchg or xchg add jge mov stc mov sub cmc call out sti clc push push popf movsb pop jl sub xor xchg imul icebp xchg xchg fadd pop push mov adc pop cmpsb into fstp cmp inc mov xchg je mov add in cmp pusha mov ror mov push popf movsb out jb pusha rol add mov sub inc mov js pop add pusha call (bad) negl sbb into ret rcrl out xor addr16 (bad) jo cmovne adc xor cmp xor cmp aad les pop orb aaa add leave (bad) cmp xchg aad mov divl mov jl clc into in mov mov test push popl sahf xchg clc das fildl adc inc movsb in inc mov mov add fs mov (bad) xchg fistp add mov push (bad) push int in int (bad) jl ret add and mov xor or fsin and or int popf jmp sbb cmpb ja jge clc inc xor in mov imulb inc cmp jg (bad) xchg test loop mov jne cli (bad) push jmp (bad) xor nop ja mov shlb imul cmp jl mov adc pop clc faddp arpl test pmuludq lret cmp inc sub mov sarl fucomi mov cmp test xor lods mov dec iret cmc add and mov inc jle lea call scas jns xor mov sarl out jle or in mov pop add xchg test iret dec xor ss jl gs inc pop mov stos xor fdivl lcall icebp test mov push jle mov xchg jo sbb cmp in jle sub repz push jb jle dec mov jle subb pushf mov jle,pn aad in xchg icebp jle subl push repz mov pusha lret sbb mov push insl clc negb aas mov insl cltd jmp std inc outsl (bad) lods cmp jae stos sub out clc and unpcklps jle mov mov aad adc scas mov xor outsb imul notl pop inc xor test mov xchg lds xchg add push or in mov push mov dec cs or fistl pop shr jl loopne sbb shll out (bad) xchg clc xlat jge add or or out mov in xchg xrelease push pop push jno mov sub sahf push mov mov ret aad arpl jmp inc outsl pop sarl shr mov and int ljmp sbb mov dec aas rcrb inc jo jle test adc icebp dec subb in leave adc mov push xor pop and jle xor sarb repz sbb jl stos pop mov int mov fwait pop inc mov mov jle test push mov dec cs movsl (bad) jne fwait mov jle or cld js pop sbb out jg mov mov jle movlps loopne mov jle xor jecxz insl mov ds int3 icebp jle int push fnstenv jnp mov add clc pop add inc fwait lcall cld dec sahf into add or cli call ret (bad) sub push mov sahf test adc fnop ja xchg inc mov push pop das jge clc in cmpsl add cmp and aas aad lahf insb gs adc js mov loopne call mov lahf aas dec mov lahf inc fsubl push mov sub test sub adc and out mov or lret cltd insl cmp fwait mov sbb cmp xchg loope imul dec test xchg xchg xchg xor stos adc cmpl adc iret jle mov outsb dec imull out or aaa jb jp cmpsl test adc sub or je push pusha data16 imul inc jae add mov jbe xor xchg (bad) sbb fcompl push pop xor sbb (bad) jbe cmovno mov mov (bad) mov dec fdivs cmp jmp cmp adc ljmp rep xorl jns into sub sti sarl and jne scas jae fidivr xor lcall xchg test pop lock jbe pusha pushf inc and (bad) loope adc aam insl mov pop pop flds inc jecxz scas (bad) aam jle mov push mov aas and loope inc dec daa cmp roll test rclb cmpsb popa mov mov mov orb (bad) jb aad xor sub jne mov adc lods cmovnp leave (bad) sbb insl xorb lcall es sbb pop cmc scas ljmp fisubl jae dec lahf sbb adc sbb mov jp dec mov mov pop sbb jp aaa pop (bad) jmp pop jle push mov pop xor rcl xchg lret sbb push cmpsl das lret lock arpl stos out dec jne fsts or sub pop and outsl out sti stos cld fisttpll sub repz xchg inc mov mov inc push push dec cmp xor xchg dec xchg cmpsb (bad) (bad) ret lcall xor jmp sahf cmpsl and sbb fstps add outsb pusha das imul mov data16 sysret inc or adc add xor iret stc and cmp sbb popf clc loop sbb ret (bad) sbb mov hlt jbe pop fisttp (bad) jg andl jle sbb mov sbb xchg inc pop inc out jg inc popf sbb jle push jge cs adc or sti pop (bad) sahf sub scas add test ds (bad) fild mov popf inc cli xor leave cmp push lret and xor scas loope mov fisubrl (bad) test sub clc lahf dec movsb pop xchg mov cmpsb sar sahf sub xchg mov and fwait maxps mov inc and push xchg mov fwait mov cli sbb mov nop and sub pushf jne xchg push or inc pushf adc push adc mov ficomp jno test add ret addr16 cmc scas shr xor sahf aaa mov dec pop rorb jo (bad) (bad) mov mov sti in fistl pop int3 loop sbb cmp (bad) cmc and lds mov mov in lods push xor push xlat fstpt mov jge ret dec mov pop sbb stos (bad) dec xor xchg push test xor mov mov notb fs jo mov pop rep enter addl aas mov mov push pop sarb cmc cmp mov insl inc frstor ret xchg clc dec or sub pushf pusha add inc jb aaa mov or sub inc leave xor or mov jge inc xchg jmp pop imul cmp sub lods jle out inc mov mov dec loopne jmp pop add and cmp addr16 push pandn sub push lea js jle sbb mov iret sub jle hlt std inc rorb icebp scas dec xlat inc iret sbb je dec aas mov inc xchg jle sahf fistpl inc jne dec jle notb ss or jbe lods cmp iret adc sbb stos out xchg (bad) out cmp das xchg jecxz sbb jle scas ret scas lcall aam jle sarb mov into in test pop adc add (bad) fst adc jne sub add in add mov jmp add xor aaa adc xchg into popa insl or loopne jbe test cmp cmp cmp and iret xor mov int3 add mov mov clc out mov stos test xchg xchg das jge sbb sub (bad) aam mov repz sbb aas bound ljmp cmp jle mov out js out nop lods adc push sub pop mov mov adc jge jo jle pop jecxz mov movsb mov push jp enter arpl test inc and pop outsb jae mov sbb movsb and fdivrl and inc pusha (bad) cmp lods call lea repz scas scas popf pop dec xlat test jecxz jl loopne clc iret mov inc push fbstp fisttpll jle pop mov mov rorb jle jmp jo adc xlat jle jl shl inc xchg fnstsw out pop ret jg jle push data16 es dec push or dec dec clc xor (bad) je xor push daa jae out lahf in mov sub push lret pop test jle xchg into inc inc lock pop scas loop sub sub in (bad) ror (bad) mov in pusha scas sbb sub je clc adc push cmpsb xor out push daa fist jne sbb mov add inc mov clc mov mov mov idiv popa jo jle movsl pop ret pop xchg and insb lock (bad) jle or cs mov out int3 stc arpl sbb mov int test sti jle add dec out cs xchg pop ret inc aad jle sbb inc data16 fwait push movsl leave sti dec jle nop imul inc jp jle clc mov jle jb data16 fldl cli xchg mov add data16 jle or pop pusha and push leave jle test xor das jo xor std sub aaa fnstcw push xchg inc clc lcall cmpb dec or pop ret test (bad) mov and mov pop mov or inc sbb outsl mov test mov (bad) out rolb or adc scas push cmpsl lcall fsubr and sahf mov push mov jae testl (bad) jg mov or clc and sbb sahf je or adc push stos mov incb xor xchg push dec jb (bad) jg nop adc or push movsb sarl xorl adc inc xchg scas pop jecxz mov aad add insl cli cltd ret test and mov daa sub sub dec mov fsubrs inc inc jg je jmp arpl sbb imul imul jo ret inc push mov add mov clc or jns insl mov mov clc dec sub dec mov pop mov jno out jl fwait popa and mov sbb push mov mov aam out outsl xchg jg aam fild and jae aaa andl xchg aad rcpps cmp jl cmpsb and jo jecxz xor adc ret mov inc cmc push mov or imul pop push adc aam (bad) sbb mov xchg cltd pop inc jno jb pop loopne pusha in dec mov xor out mov push pop mov outsl fs sbb sub std adc jg mov adc mov loope pop movsl mov insb daa (bad) push cmpsb dec mov lods outsb (bad) int3 xlat adc je stc or push rcr and pop mov or std insl clc leave fwait enter dec push sbb or in mov loopne sbbb mov cld dec or sub loopne mov incb jecxz sbb mov adc sbb test sub scas movl arpl cmc mov mov scas jb aas int3 push movl lret lods fildll mov imul push repnz stc push jle aam xchg in fistp inc data16 add adc jle ret mov pop xlat je insb xchg push dec xchg stos mov adc jb es adc fidivr je sbbl lret mov (bad) xchg cli into dec push add jge dec leave js scas add xor repnz aas dec xchg fnstsw jle inc or lahf push xlat push movsl and add push clc ret outsl add jnp dec test push ja imull aad push mov (bad) stos nop push mov inc cmp xchg faddl push insl ret dec mov scas add or lcall lahf cmpsl push outsl xchg dec xchg sbb jl jmp movsb dec popa push add cmp in adc stos pop xchg out (bad) push hlt mov scas movsl push fbstp pop rcll aad mov sub fwait lcall pop data16 or mov pop mov pop dec gs cld sub sahf push stc std clc pop int3 iret scas das scas mov sub (bad) xchg test jge inc inc sub jne test cmp inc pop addr16 xor inc std fisubrl sub lods cld in in insl jo mov xchg adc repz aaa xor dec mov iret outsl jg or pop lret jmp (bad) insl jge jo add clc mov ret push pop xchg enter inc lods push (bad) cli test push mov push fcompl lret fiadd popa mov ret (bad) scas dec enter out sub add imul fdivr movsb leave movsb or mov ret pop sti cmp inc pop outsb mov pop jg and push int cmpsl movsb and lret les and or cld sbb or test pushf out scas add dec push sarl sub cmpsl mov ja dec fnstenv cs and fisub adc xchg xchg rcrl mov jbe hlt cltd jecxz mov sub aas stos aaa sub lahf sarl or push mov and je bswap mov dec int sbb frstor and aas inc jo xor xchg mov xlat or sub xchg test aam xor push (bad) addr16 add sub jle and dec push imul daa popf js lcall or gs int3 fs mov xchg sbb int pop add (bad) jle les add nop xor cmp dec dec jle lock rorl mov test and or inc xchg or push mov jb xlat sbb mov mov sahf (bad) mov movq lods in pop icebp jne jae add mov sbb lods (bad) in (bad) aam jg daa test jle add adcb fidivrl mov sbb int3 add mov pop or jecxz cltd aas pop mov fsubrs scas fldenv idivl xor out add aaa mov (bad) gs je lahf pop bnd out mov or mov cmpsb clc mov repz jle mov imul ljmp cmpsb jecxz rolb mov out jmp xor or pop (bad) int3 arpl xchg in lahf mov scas xchg adc arpl cmc loopne mov mov mov cmpsb or movd jo pushf sub pop mov ficompl insl pusha mov add pusha out push ljmp rcll mov lds insl push add nop fisubl clc mov dec add jbe sub add orl clc stos int loope or cwtl inc add cmpsb enter xchg cmp into js xor fdivrl int add push and mov inc pop and jnp jl stc int3 push movsl pop sub das outsl in inc xor sbb lret jmp cmp aad mov (bad) aad and mov jnp fbld jbe add push out clc shrl cmpsl xor jae and jns insb pop les mov mov mov je lods mov clc psubb mov pusha clc sarb iret inc jae and jp test clc insb fidivl xchg lret and movsl jne aam stc xchg ficom mov mov mov data16 adc (bad) lahf mov pushf rorl jb aam xchg ret xchg ds mov lods push inc hlt ret aaa test add fstpl movd xchg dec pusha jno lods decl or fdivr icebp xor pop inc xchg hlt inc or mov in add fxch sahf stos mov insl loop sbb out and stos push cmp pop or push mov push mov stc ret xor pop push fwait pop push ss add lahf cmp xchg push fnstcw test or clc push es mov fcompl into in mov js outsl sarl xchg add lret jmp jg loop mov testl shrl fdivr ds std sbb mov mov pop push (bad) fild jns idivb repz pop rorl loopne xchg rcrb js xchg into pop xor add nop mov std fnstcw fwait sub lods add or mov and push outsl lret imul clc jg outsb cmp or aas cmpsl jle add out fs mov adc sbb pop arpl inc icebp icebp add idiv mov outsl mov aas sub jle sub stos aaa pop es or ret pushf push add jle xor pusha aad and or ss xchg xlat push dec fild ret fnop push add and mov pop mov outsl ja adcl das (bad) mov popa (bad) push and mov enter mov fsubr push pop roll mov les jne jo scas ds dec xchg mov movsl out stos add cmpl push adc incl cltd add mov push pop clc xor pop adc xchg dec adc aas mov call jne mov lock leave out inc je push dec sub mov jle and add add imul dec loopne jl mov push dec repz pop inc sbb xor dec pushf pop add loopne fisub clc decb aaa cli pop xor por xchg hlt xchg adc decb mov push rorb inc inc add push pop cvttps2pi xchg adc jbe fildll jecxz push inc psubw jne inc fiadd add in stos add jnp push jno (bad) les lods sahf mov negl jbe clc repz inc jne sbb ja push sub iret pop inc jo add adc mov (bad) movsb lcall and aad movsl enter stc (bad) hlt int pop (bad) out adc fsubs dec inc aad sbb jl bts or dec xor mov call clc mov out mov push inc dec adc xor dec jae mov xchg mov jo xchg roll int3 xchg pop subb pushf sarl push add add push xchg in pop leave inc or pop (bad) clc leave lods or jno in or cld mov and js out sar jb xor cli or xchg pop mov nop xchg repz hlt cmp sub cmpl jb or mov or (bad) ss lret into fisubr repz or dec mov mov jo add cmpsl mov or xchg out mov ret inc inc cmp jle aam inc sbb mov (bad) in jle gs arpl popa sarb xor pop subl fstps rorb pop rep enter subb jle loop pop aas (bad) sbb (bad) js jle mov fstpt jecxz fwait mov lock jle pop pusha lods icebp call pop scas dec sub cmp push sbb es into cli fsubl mov fnstcw jge mov aaa movsl popa add nop mov test cmpl or and outsb cmp pop xchg loope push pop fdivrs cli adc out jb daa mov mov and pop enter push das movsb mov mov adc xor push call dec adc out sub sub and and and std pop (bad) es and pop ds dec xor clc (bad) dec xor sahf outsl inc (bad) enter test notl cld cmpsl sub add repz (bad) repz push lods xchg pop add ljmp leave mov sahf lods xor ja mov imul jg push jp and icebp aas rorb sub pop or dec jbe rcrb xchg xor stc push pop mov add inc and inc pop pop imul jno inc scas add pop inc sub dec sbb cmp lea movsl dec cmp fcoml clc adc or adc mov out cmpl mov jle push out int add (bad) add sarb jp mov test inc mov icebp sub mov dec scas mov cli sbb dec pushf push incb hlt in cld fbld or cmpsb jge or mov inc mov shl gs push cmp xchg mov das adcb out lahf xchg ficomp icebp jl aad fwait or ret push in rcr enter adc lahf add push mov les xor rcl lahf es das dec adc test add jmp or add (bad) fnsave jmp scas sub stc movsb insl mov pushf push cmp clc repnz sbbb test scas mov mov (bad) hlt jae out fs inc push pusha sbb xor jno loope and mov in int sbb cmp ja int3 xor movsb add xchg cmp imul adc push inc lret jo jo or and (bad) mov out lret imul clc lea test pop inc int mov fsubrp (bad) popf pop sar pop (bad) pop mov mov jge fwait sbb enter scas pop jp int3 aam xchg pop jbe cltd dec push cmp mov inc jne jl cltd fcmovb adc pop mov mov or jle mov ljmp cmpsl jp mov jl out into pop mov jp cli stos nop out es mov jns movsl pop jle out sbb jae shll in mov ret jle sub es ds sbb je sbb and scas sarb inc cli xchg rcr or xchg ret pop push insl inc sarl lods sub pop popf call ret mov clc cmp xchg adc push (bad) pusha scas inc add sbb dec call or lea jmp lods mov cmp iret add insl xor scas or pop pop leave xor in jmp mov andl or push or jb repnz in int push dec je loop cmp fdivrs cmp inc cmp lahf insb lods jecxz jbe cmp mov or sub push cltd mov mov mov add add jp jp stc loope push pusha inc mov ja inc fldl inc pop lods pop pop cld gs adc dec pop test nop rcr jl or scas jle push out dec mov in mov lds movsb add jle aas inc add pop cwtl sub jle popf enter mov xlat sti or stos scas xor mov jle jno imul push adc data16 daa pop jle scas push popa cltd pop das cmpb inc outsb idivb sub xor mov jns insb in sti mov and push std mov enter sbbb ljmp arpl mov mov inc sahf sub mov or xor cmp loopne jle inc sahf add mov jle mov aaa roll inc mov sub arpl mov xchg cmc xchg loope jnp mov sbb stos lret mov and push mov jnp xchg cmp xchg xor test xchg xchg clc mov mov popf push mov sahf (bad) cmp inc cmp mov jne pop adc (bad) mov fwait pop push aaa xor imul insl aam aas jl lods jge ds mov pushf idiv loopne dec inc add insl fnstsw or subl cli inc or pop cmp int3 cmp call mov jbe push jge xchg fucomi xor stos aaa xor (bad) lcall (bad) js pop pop or sub lahf add or pop mov (bad) je dec lods bt mov adc jno sub hlt pop pop cld (bad) push xor pop cmpsb test daa outsl sbb mov add loop es (bad) bound push test outsb xchg ljmp loopne or (bad) adc jle xchg pop cmp (bad) sbb in or es mov push pop pop add jp add pusha mov jecxz xchg movhps movsl loopne push mov gs adc jp and mov cmpl adc adc cli xchg jne add testl and aas dec sbb and (bad) push int adc cld add sahf sbb daa pusha sub pop jp sbb jg jae pop jl or (bad) cmp xchg sbb sarl or fwait jnp cmp cmpsl out cmp aas add cld rol test pop jnp loopne stc jge xchg clc stos xchg cmpsl push lods cmp mov lods pcmpeqw cwtl clts add and aas sahf lods cmpsb stc movsl mov mov lds push fwait loopne adc inc adc xor mov shrl xchg mov jg inc je repnz xchg scas daa cwtl pop ljmp iret data16 jo pmulhw mov add int enter imull aas (bad) xorb pop mov adc cmp mull push out pop jecxz daa push adc mov jle stos push insb or int fisttp cmp jp dec xchg inc jmp mov test mov ds jle jg lock adc test ret test inc movsb xchg or mov xor mov and jle jbe xchg loop adc into or sbb jle cmpl jle out mov push bound dec stc inc mov mull lods jecxz sub (bad) pop mov jle mov adc test jle push pop dec adc and inc jle clc mov mov (bad) mov mov lahf fmulp insb dec (bad) jle mov jle call mov pushf adc scas fisub insb jnp data16 adc sti gs cmp dec xor addr16 (bad) sahf mov xor lahf ret or add add mov fmull inc test jl psrad es loopne push aas int sub pusha pop ds mov scas push pop mov jmp jge rcrb dec and dec into and xor and mov test xor sbb outsl into and sub xchg (bad) jl adc dec aaa js jge lret ss das popf sarl or lret bound jl pop mov fbstp pop cltd inc (bad) ss ficomp gs mov sub mov jae outsl jnp fsubr mov xor or fistl dec mov sub adc (bad) lock lea popf out and jge xor mov clc inc sbb test and inc pushf lea lahf int3 jg inc sarb push mov add daa adcl clc ja movsl aaa dec cld jle fistpl xor pop test mov loopne arpl adc les dec mov jge shlb pop inc clc dec add cmp xchg mov dec jmp out and dec inc sbb inc (bad) lret mov push sbbb out dec clc fnstsw dec sbb (bad) jle mov je sbb xchg push dec cmpsb add insl into popf in ret in cwtl (bad) int cs das and inc xchg sub cmpsl (bad) or cmp ss aad sti jb cmp mov inc insb adc test scas movb add scas ja stos xchg pop xlat rcrl sbb je mov or jecxz pop out mul fstpt je pop jle pushaw dec lods addr16 in jle inc out xchg mov jnp ljmp into les aam jle stos dec add adc pop xchg ljmp mov cmp lods pop mov mov fucomp push cmp xor add js mov cmpsl into stos adc (bad) xchg jns mov in mov mov pop scas sbbb sub std outsb out sarb lods bound pop out (bad) sbb aam iret (bad) out xchg mov pusha clc rclb sar test mov gs stos pop or xchg stos faddl (bad) xchg xchg out xor adc push lret outsb shr pop mov and push and bswap sub pop jle gs jle lea pop daa xor in sub shrl jge clc movsl cmc insl dec dec mov mov scas lods movsl add sub add leave sbb lods lods mov scas (bad) ljmp push js data16 inc and aam repz sbb jle and jbe mov mov sbb mov cmp scas adc aad int xor jbe xchg or push cli jle push push xchg add lret and mov in jle mov (bad) adc cmp enter addr16 inc lahf jno test xor mov inc popa jecxz mov pop cli and popf dec gs sbb sub inc xchg push mov mov adc pop mov pop lret xchg pop jle jb ret in push ljmp push jle push jle repnz das pop nop xor sub loope adc sub shlb or popa push ret aad clc cmp mov jb push out test decb adc mov sti sub mov add sarl and clc jecxz mov aad (bad) mov fmull notl sub nop (bad) mov pop jl jl,pt push arpl sbb dec outsb (bad) mov nop sbb aaa insl cmp nop or and movsb int3 aaa push jge cmp test jnp dec ret pop enter push push inc push jge pop (bad) stc or negl mov mov bound int3 ret mov ss dec inc jmp sub bound mov xor insl cmp mov xchg fisub xor sub adc lahf int pop mov (bad) mov mov nop gs (bad) mov inc mov mov clc push xor rolb add pushf adc mov or mov cmc sub inc mov and clc ljmp xchg cld adc jae hlt rolb adc sub jnp xchg cmp sub decb je (bad) cwtl sarl jne,pn and jl (bad) pop add lods mov pop or jns gs xor dec (bad) adc or int3 loopne ret inc sbb pop pop mov jb and (bad) push out and insl divl cmc test or mov mov je cmp and dec add mov dec mov testl xchg sub mov sarb imul imul inc jmp and add sbb iret and or mov mov jle insl cmp out test ror dec jl (bad) je das ss lret dec and sbb imulb popa sahf lcall mov adc fwait push push jge pushw xor stos fmuls xor fst and xor or push (bad) pop lods sti mov cmp mov sbb sbb xchg pop mov push je scas insb scas cmp jne cwtl jnp adc bound xchg test cmp imul insb lds shrl jle mov addl (bad) in insl mov push pop jmp jl mov arpl and inc push sbb stc sbb jle xor scas or stos pop scas (bad) sbb adc or sbb pop push lods (bad) fwait les daa scas movsb cmp in faddp sarb pushf jb fildll lea xorl fwait jae (bad) jbe push xchg aaa (bad) leave loop xchg xchg xchg clc in std ret (bad) aas subl lret mov test jb jecxz and sub aas cmp jl adcl pop shll jl mov adcl or push push pop jge lock outsb xor pop xchg mov mov push aad mov addr16 punpckldq xchg xor and gs fisubl push xchg xchg jbe xor adc popa mov jnp mov frstor ja mov jo cmp loope stc add mov (bad) xor les xchg mov jle lea jne lds cmc data16 jge fcmovu push mov or mov rcl add push adc icebp rcpps dec fistpl fimul sub jge xlat push push jne jle mov pop jl ljmp hlt std test (bad) ret popf roll lret outsl aas mov xlat jle xchg test rolb pop push mov das clc inc loop ss jle daa lock fisttpll jle test push movsl cmc icebp xchg mov loop sub xor fdivrl jbe pop jge movsl in xor jo sub cwtl ds int3 sub jp sarb xchg push dec jp or lahf push mov bound ja add jle scas int3 (bad) in test jle push cmp or lret mov add stos adc cmp adc pop or or add mov jb call xchg and std test mov inc dec or jle sbb orb shrl pop incb cmpsl mov jb jle das dec leave xchg jle ror adc xor mov (bad) call mov jge xor cmp mov mov xchg dec dec inc loopne xor sti push push (bad) movsl stos jle jmp loop stos jne mov jo ljmp fisttpll ja iret jle cmpsb (bad) imul enter mov dec sub lods movsl rcr push jl mov gs sub or inc mov mov or sbb movsl add (bad) xor xor push stos jle push adc cmpsl or inc arpl jle cmp jle bound push inc cli jle cmpsb les push mov mov xor int mov dec pop xlat fsubs mov add mov dec (bad) mov ds add and ja pop adcl jecxz mov clc xchg mov (bad) out in repz jl push adc mov push std clc fdiv in or stos xchg jne inc pushf mov loope jecxz inc mov shll jge clc addr16 leave sub and shll or xor pop stos pop xor cmp (bad) in mov testb mov inc ret or stos mov mov adc lahf dec sbb lds jo xor std clc inc jecxz insl push pop xchg and fwait or scas mov imul sbb mov inc data16 pop inc pop sbb das popf cmp loopne outsb aam cmp jo lds nop xchg pop mov loop jg clc push arpl mov dec fwait negb ficom (bad) mov mov xchg mov dec int3 ud2 xchg xchg cmpsl pop and cs mov ljmp clc test es notl outsb sub (bad) jle cmp ss out push rorl fwait or add pop pop pop les loopne sub sahf xlat xchg in sbb jnp mov cli stos adc aad add cltd test mov jle mov xor cmpl test xchg sub and sub aad dec aam js int3 aas jle adc pusha scas or ss jbe fistpll fucomip sarb scas pushaw mov jo pop adc fnstcw push pop sahf stos jae cmc scas xchg (bad) icebp jle (bad) pop sbb xchg adc jle pop (bad) repz scas bound mov cmp jle mov leave cmc pop sbb (bad) mov into adc hlt outsl test aam push and adc je call push adc cmp pop sbb outsb lret mov adc mov lock pop hlt repnz or mov out out cmp xor addr16 cld push sbb std jnp outsl push cwtl cwtl arpl pushf jge inc call scas lret cmc lea mov psubq mov fs js mov outsl cmpsb jns pusha mov leave mov cwtl cmp cmp movsl dec pop or mov xor idivl fbld adc mov es jo mov sub adc dec enter add or aad xchg mov pop (bad) bound in loopne cltd sub movsb cmp or xchg jle in add mov sbb xor jns jmp cmpsb xor js push sarl cmp cmp icebp out jmp jge mov jno test dec dec xchg lods data16 stos mov pop (bad) outsl insl inc jl mov jl jle testl xchg pushl mov test push mov fisttp stos sub inc in rcrl or stos xor push ret jle inc mov loope xor mov xchg shrl sbb cli xor jecxz hlt dec fidivrl iret test xchg pop (bad) mov stc xchg pop add and add movsl repz (bad) fcoml fidivr lods xor mov pop mov push ds jbe cmp mov imull inc pusha pop (bad) cmpps xor insb dec fsubs xchg inc adc jns pop cmp incb addb iret push cmp cmpsb or aaa mov (bad) adc lahf pusha xchg pop pushf rcrl cmc or mov inc lahf or decb mov mov out mov xor rcll pusha mov ja test cmp in xor outsb fidivrl js loopne out test pushf mov or aad loopne jo clc imul jecxz xchg mov fiadd repz movsl lret sub int pop scas dec mov sahf out add pop inc cmp jmp pop stc jp and pop sar clc imulb inc cmp cld idivl add pop jge xor or les mov femms (bad) pop mov mov fnop mov adc cs (bad) xchg mov xor or mov clc jmp and push pop push leave cmp lahf mov pusha into pop mov aas stos jae mov lahf cltd pop pop sub adc add out inc js sbb stos mov clc inc (bad) addr16 push in mov test in or into mov imul call xor das or pop ficompl sbb xor or push fwait mov shll cmc and nop pop and ljmp out cmp dec pop cmp rolb daa push into xor cltd adc mov cmp mov hlt pop sti lahf int3 leave xchg sub jmp fdiv xorl xlat fnop ds or push sbb movsb jne or dec addr16 adc push xchg lods ja pop mov testb xchg sti ss jge adc jp push repnz adc sub outsl jg enter mov sbb loop push mov mov mov mov inc mov into sub sbb (bad) icebp sbb xor jo stos push rcrl and gs das lahf jecxz pop orl mov sub (bad) pop dec xlat (bad) hlt xchg or jg pop inc sub insb fidivr inc aad scas push in xchg (bad) jecxz xlat add ja (bad) adc setg mov push mov dec fdivl adcl jbe and cmp arpl inc push push jnp add inc std (bad) das loopne xchg movsl js xorb in mov in iret (bad) sub or icebp push mov hlt jne lahf arpl mov pop adc adc xor (bad) inc push mov or enter pop test jne cmp fidiv or xchg das cli dec push fistp fnstenv clc les into xchg stc (bad) mov clc in loopne sub clc pop cmp xor sub mov pushaw sub sub cwtl jge outsb adc in adc imul and ja push inc jg (bad) sahf cmpb pop cld jmp push rcrl or xor cmp negl xchg js notl cmp mov not sbb adc sbb hlt sahf cmp sub fmull mov movsb mov pop add or call imull jecxz out fucom pop mov test clc in push ret jno pop jo lea js xor pop bound mul fstpl ljmp (bad) mov sbb aam xchg sbb dec ror xchg ja sbb inc jae (bad) adc xor repz add mov push mov or mov adc add pop adc sub movsb or push dec lods movl (bad) outsl xchg test mov push lahf mov pop and lret xor inc sbb aaa lahf mov or pusha insb jns push mov xchg (bad) lahf pop or cs lret cmp repnz adc popa mov addr16 add xchg lods movsl bnd sbbl push xor mov mov mov ret cmp mov cmp push and jns sbb cltd pusha xor lds data16 iret movsl inc lea sbb jb cmpsl aad incb sbb push imulb ss mov stos and clc inc loop lahf jl lcall pop or test in pop inc pop sbb clc ss out dec jle cmp add in pop push lahf outsb and int jno data16 adc push out cmpsb fildl ret (bad) push test push sbb dec cmpsl inc jle (bad) push dec clc fdivl mov jl xor (bad) daa (bad) sbb cmp adc mov mov mov pushf dec mov and sarl hlt xchg scas loop shlb pop sahf mov ret cmp (bad) insb (bad) je ss jne lods int vmovlps jo rorb mov jns cmpsl pop pusha mov lock jl sbb or inc jg jbe pop jge or mov cmc pop rep (bad) addr16 dec outsl lahf jecxz ja pop or add clc xor lcall cmp sbb xor aaa sub sub aad jp pop stc ljmp adc add stos fildll pop pop add popf and sbb subb xchg aam fwait sahf jp jns jno xchg nop int in out jno popf into fisub mov adc andl jp (bad) enter fimul sub mov imul cmp mov je sub in add adc scas mov into xor sbb fcompl dec stc (bad) push inc aad mov dec mov sub sub imul pusha sbb or inc mov fld1 ja jp or cmp lock test lahf jge xchg js cmp in cmp xor cmpsl adc push (bad) jb push mov je outsl in popf mov cli stos and fdivrp add or and sub call mov aaa jle arpl (bad) or mov jp jae (bad) in jle dec dec xchg sbb divb js dec mov sub xor jge jp out in fmulp flds cmp mov dec fadds stos mov and das pop pop (bad) lret (bad) iret mov fs jno incb jne push ret cld jl xchg sub outsl sbb mov xchg fnstsw cli dec jne mov xor inc ficompl cld stos movsb and sbb pushf aad cmpsl arpl dec imul adc int add popf jmp (bad) and xor in jle and clc test jmp and add inc fisubrl sbb fdivrs cmp add push fnsave clc js cmpsl pop jp test sub mov fdivrl xchg xchg movhps jno jle je or mov imul xchg aad rcrl push jnp dec mov cmpsl call mov and adc data16 mov aaa ret (bad) int3 ljmp dec loope hlt sbb addb cmp fimull xchg jp inc clc not sbb rol push lods cmpsl iret mov insl jb pop mov jbe pop fdivl int3 push push std mov mov sbb xchg clc or and out cld lahf mov xor jle cltd leave jl repz pop ret add push pop insl push outsl xchg in add and aam (bad) stos xchg (bad) push aaa nop push enter cmpsl add cmpsl nop lea and int int3 test fcomi mov sbb jne imul or adc push pop test add xchg xor sbb aam subb or xchg (bad) ret pop mov shlb fs and jle (bad) dec sbbl test or mov jle mov and int and xchg adc scas mov sbb pop push jle pop lcall sbb stos mov outsb insb xchg inc mov test sbb adc mov ret pop pop inc adc lea adc jle (bad) mov dec adc jle sub ja mov mov mov pop les (bad) jl push push mov cmpsb inc cli xchg leave scas lret adc push inc push add imul jns push pusha inc xchg clc jmp mov mov insb clc mulps mov ljmp sub and (bad) sbb cmp fiaddl sbb sbb xchg ficomp or mov and push (bad) cmpsb xchg fild jmp clc iret sub mov cmp and sbb inc pop jg (bad) xchg or aaa jb inc lret adc lret mov sbb sahf repnz xchg fidiv icebp xchg mov das jg lods push shrl pusha ja mov jp add unpcklps jae push jl pop fucom pop xlat pop aaa cmpsl pop lods add mov mov cmpsl push (bad) out mov jecxz jmp daa jmp dec sbb add fcoms roll sbb mov enter adc mov inc jecxz mov cltd lahf or push dec (bad) mov cli fistpll jns push inc mov add imul notw fwait in pop jbe pop mov mov (bad) jbe jmp lods aam (bad) (bad) or daa ds jl inc aas jo add mov iret inc lret xchg jno cltd xchg mov jg xchg cmpsl pop std pop sbb xchg and or fsubl int mov jle push xchg push jo add movsl mov sub add mov (bad) notb or rcr xchg mov je arpl jl push jb jbe repnz dec cmp cli jl mov mov sti loop mov stos stc xchg add ja or add pop mov cmp sbb mov pop add mov mov arpl xor add cmp xlat dec (bad) leave mov je cld cmp outsl cli das push or mov into daa or lcall xlat and dec xor sbb incb mov iret pop dec and lcall das ja mov add cmp clc data16 dec sub (bad) lret popf add out xchg cwtl cmp lods add dec pop in mov or aas push loop in or rcll push jg (bad) clc adc sahf pop in js xor push mov cld out push xchg rclb test or hlt aad mov stc jo inc add jns push addr16 sbb lea jbe xchg (bad) pop mov loope push fs xchg insb inc gs ljmp das in add xchg dec push adc fs jae outsb mov dec push sub sbb dec bound outsl hlt push mov andb xchg jo dec mov jnp sub lret add mov mov pop push test mov sar jle and insb jle sub lea xchg sarl jecxz jmp jle sub fidivrl xchg in popf call jns inc add or cmc cmp lods hlt cmpl outsb out cmp mov mov shrb sbb dec cmp push inc mov dec jmp sti insl add in (bad) mov or jo push pusha movsl cmpsb mov clc pop test jg push into jecxz cmc jl mov fisubrl (bad) pop loop mov es fucomp popf or dec nop pop mov mov pop mov push fimull popf out pop mov aas adc rcrl jmp mov stc lret jbe add insl movsl hlt scas pusha lea sub mov adc pusha aaa xor popa scas jle rcl cmpsb icebp sub outsb insl scas orb push imull rorb or movsl lahf push adcl push add daa cli adc xor sahf add lret int3 js mov out dec cmpsl lds seto pop jl push push jg jae sub int3 in movb jl (bad) inc add dec (bad) jg into clc xchg cli loop dec mov jle aaa push jae out dec in pop stos pop mov push cmp mov xchg push or lahf scas aas xchg mov push add out lea in pop cs xor sub int3 outsb andb jp inc loop jmp push cli and dec popf outsb test pop sbb xchg clc jae out fadds ret (bad) sub and fwait or inc xlat xor xchg mov inc cmc xlat xor fisubr pop in pop lgdtl sub das dec mov sbb psubb int xlat es sbbb stos sub mov (bad) stos xchg xchg (bad) adc nop pop and stc add sub int faddl jo int dec sahf outsb mov fistpl mov or jp std (bad) jle lea jmp cmp daa cmp mov int3 jle add cmpsb push mov into nop xor scas jmp push sti ljmp sbb pop xchg mov imul adc insb jle testl sub and sbb jl ret jbe or jle addr16 je and push pop or mov insb push inc pop mov push scas insl imul int3 cld cwtl out mov jge mov aaa (bad) out test jle jno fisubrl lahf jle cli (bad) loop in add jle lods dec xchg jae sbb jle jge add push dec leave jle and mov cmp pusha sbb jle push jae fiadd cmp jle mov arpl jle sbb lcall insl repz sahf or cld add js loop into out sarl push addl pop add mov test xchg pop mov xor rcrl push push flds jle ret insb xorb cmp sub inc inc pushf mov pushf push and xchg mov mov xchg dec into and xlat mov cmpsl mov dec sbb sbb inc xchg and or xchg adc addr16 sub xchg repz xchg adc out pop mov test popa das sub or push arpl xor fiaddl outsl dec sbb test lret insl lods pop fildl mov js test out dec in dec jle gs jbe lods pop jle jg lcall aad sbbl xchg fistp add pushf mov inc out inc and add js cmp jae stc in sbb dec outsl inc clc icebp pop sbbb jne jle les xor (bad) scas push xchg mov mov add mov add jnp xor in fldcw idivb (bad) lahf imul addps pusha push ret imul lds jo fs in lret xor cmp xchg mov sub addr16 pop push jbe cmp sbb sbb sbb out test adc jmp rcrl xchg in mov movl out stos push fs jge mov pop (bad) arpl xchg or mov pop loop mov xchg test jb mov sbb cmp idivl mov push jg scas xchg ds jle cmp mov ss js in adc js out pop dec mov add dec push push test inc or adc jg inc mov adc clc mov xor lahf and adc cli pusha lcall or xorl clc test aas sahf sub push loopne xor jno scas push pop xor out inc mov xchg fdivrs push jne mov fisttpll leave xchg or arpl inc packuswb push mov add test in data16 jl (bad) jle les mov lcall xor jle or aam loop and adc fldl and aaa push xchg jae out out xor push dec hlt mov shrb cli sti stc inc leave jle repnz imul push data16 push addr16 xchg test arpl lea cltd (bad) shr cmp clc inc das xlat std mov out push fs ljmp mov pop xor sbb xchg xlat or cmp or cld sahf mov inc or add lahf cmpsl pop loopne fdivr and cmp add dec lock scas sarl sahf dec adc mov mov cmpsl (bad) clc dec push cmp or pop inc cmc adc out int3 (bad) jl lods or insb cmp xchg clc iret daa pop cwtl movsb push jl ds jge cld rorl xchg push jecxz enter push lock std mov fdivrl jmp sub or jno cmp inc mov sub adc jp imul push dec sahf inc dec into sbbl aas xchg pop pop rcr sub cltd mov and pop rcll js mov adc pop (bad) sbb mov add lds xlat push fnstsw (bad) outsl std mov mov ja mov and cmp xorb pop cmp int3 cmp pusha in nop mov xchg push add mov inc clc (bad) jno in jb lret or (bad) push sbb jo out add push test add mov lods es inc inc imul push lahf cmp and outsb jge pop and in push sbb and cmp xlat ljmp stos mov ret clc loop ret movsb xor data16 cltd jo dec push mov mov and xchg xlat mov pop (bad) jno mov sbb aad (bad) mov ret dec jl jge clc push and inc (bad) aaa sbb jle hlt jge in adc and and ss sub mov (bad) fldcw bound fcmove sarb fucomi ret mov inc outsl ja (bad) aam (bad) popf add mov jo cmp or dec cltd gs scas dec inc inc and mov loop icebp inc mov outsb mov pand cld xchg clc icebp loope pop mov mov push cmpsl addr16 sub add (bad) aad outsb inc fcomip cld outsl mov push mov mov mov lahf pop push test adc dec mov jg add das mov int3 inc jbe fs dec popa (bad) inc jmp es clc mov lods jg lahf mov cmp pop jno aad leave ret push scas movsb xchg ja jmp fadds push dec (bad) xor repz cmp sbb pop pop add pop add ds jb sarb lret pop jo add fwait xor clc stc rclb push imul scas mov jg mov std push punpckhbw and jle test cmp jle or pop out jle cmp jmp and xchg mov add lahf xchg jecxz popl dec jle add inc popa jbe stos jle jp xor test mov call sahf push mov js scas (bad) jle push sahf fisubl mov scas cmp inc xor insb xchg in sub sbb and test sub fucom or shll fstl loope xor inc mov idivl sti xchg fnstsw or push mul idiv out (bad) pop mov movsb (bad) lret mov sbb negl roll daa imul das inc ds imul jmp ret push into sbb mov jp movsb mov sahf jle pop ljmp pusha jl adc xor or push dec movsb scas mov push mov and cmp or inc ja xchg pop mov pushf aad and dec scas inc clc iret mov cmp fild aas jp sbb push jp dec xchg pmullw inc rcrb mov (bad) push (bad) jle js aam loop (bad) fsubr lret sbb outsl push or ljmp mov jle pop mov test sbb inc jg dec adc mov jle aas lret push bound int mov mov cmp (bad) scas xchg rorb fdivr fist inc cmp jle mov mov jns cltd dec jns insb ja pop pop jno xchg xor jle and pop adc cmp mov in jle adc push pop call test lds lock fbstp jmp jmp xor and push mov mov or movsl mov dec xchg out push daa scas add aad repnz jmp rcll out mov mov fs loop push daa mov jge sub cmp movsb push scas mov cmp daa loope cmp push das stos outsb adc lea or pushf jle cwtl test push jle and jbe cmp sub mov jp jle xor inc pop pop push popl mov adc or or xchg push data16 or out popf idiv pusha imul sbb outsb pop push push jnp sub popf and and call push movsb pop clc fnstsw movsb clc rcl insl cmpsb aaa mov lock fnstenv xchg or repz and loope addr16 test xor xchg adc into negb dec mov ret int3 fdecstp imul xor (bad) enter test mov xchg fcmove push out sub push ror rol stos in xchg adc add pop test ss iret ja movsb jge inc aad add pop sub frstor lcall lcall inc jg dec or xchg (bad) in push and jnp or xor into xchg jae gs out hlt fildll les mov mov push data16 ret pop dec loopne repz cld imull cmc mov or pop jne lods loop push xchg lock mov push inc xchg inc ja sub int3 lret jnp lea mov push jle mov (bad) xlat adc jb cltd not insl mov test test and inc and sub xor add mov add lret sti jb and bound je add cmp add sahf repz jmp pop push ret and sbb jmp sahf sub scas clc in ds sub dec and aas repz stos repz jle sbb mov or (bad) call pop dec dec (bad) test test stos sub ret xchg imul xchg xlat fiaddl xor mov sahf out stc jbe scas outsb mov mov mov jecxz inc imul and xchg fistp decl popa push add jo imul xor pop cmp enter data16 xchg or sarb jle cli in push (bad) sti cwtl push add or adcb sbb pop fdivrl (bad) mov push jle mov test ud2 jle movb idiv lods jle inc and push cltd js pop sarb jg jl pop push fildll mov cld mov mov mov int es xchg pusha rcrl ss hlt adc lock jg in ret push das dec dec lods cmp fsubrl jle insl loopne fbstp push dec dec xchg pop daa scas leave push sar jbe sti xor mov cmp dec outsb (bad) xor push stc movsl lahf ret mov add (bad) out nop xor jbe or xchg add cmc xchg fs inc sub push adc jbe in aaa outsl in xor add jge fwait fs mov mov das insb lds (bad) sbb movsb xchg or mov subb sbb push inc jge jl (bad) das loopne mov clc in sbb sbbb add stos rol sub lods mov out push lret js imul gs (bad) pshufw mov dec lret or inc (bad) daa mov das mov or jl lock pop sbb mov (bad) mov jg or push mov incl dec flds cmp mov addb jns je test add add cmp nop clc jne sbb pop clc hlt or enter xor aad dec fimul sbb je pop das clc mov mov mov push das inc push sbb std mov cs nop imul lods jne,pt out mov idiv inc xchg testl xor lds xchg pushl lock fbstp insb scas mov push lea iret je sar cmp or sbb pop jge jmp adc or clc and imul fcomps ret je mov (bad) lcall int3 lock test das test push cwtl push pusha mov fs cmpsb fnop outsb loop (bad) (bad) cmp or xchg scas decl jbe pop pusha and cltd fiadd sbb mov jno outsl notb sahf in cmp stos cs mov or fidivl mov dec or and inc fwait (bad) fistpll cmp sub sbb mov movsb outsl stos mov mov rorl mov fdivs clc mov sbb pop ljmp in mov cmpsb xor out xchg aaa push and pop mov add clc jb and push push fsubr xor mov push aaa cmpsb inc clc sub push and xchg fnstenv dec pop adc cmp adc mov mov and movsl cmp inc and push jmp lahf mov dec mov je icebp sbb mov add ds pop data16 add lods add (bad) mov loopne mov cmpl arpl jle mov or fadd add jae in push mov hlt mov int mov loopne mov in push inc enter outsl cmpsl cmp or adc jl sbb mov (bad) notl mov js fsts jo xlat add jo arpl cmpsl je inc addr16 je test stc jp addl aas sbb or push je stos mov addl sbbl enter or arpl std adc jae in xor add pusha outsb nop into pop add inc jecxz insb jmp mov js,pn sti fs add sbb repz mov inc fistl ret cwtl loope xor pop mov sahf insl pop adc incb pop push or mov cld mov mov mov out pop dec cmpsl pop sbb jge add add push pop pop cmp xor fnstenv adc hlt inc imul adc add cltd (bad) je lods push add icebp aaa (bad) lret clc insb ss xchg and xchg mov add xchg addr16 rorb xor jl ret sub in (bad) jg std adc mov add push dec cmp xor jno or sti jnp jle inc lea jle mov cmp inc inc cmp fcoms add pop xchg jno sbb js (bad) and rorl mov jne subb (bad) xchg mov into dec pop xchg mov mov lcall mov cmp pop fs jle aas pop ja add jle daa mov mov sub sbb sub sub int3 push popa mov sbb ret inc xor shrl clc xchg sbb push in fisttp lahf clc mov stos inc fild movsb inc xor pop lea pop fcoml push xchg ficom or dec dec jae fs and daa mov sub ret add out add psubusb pop lret test repz xchg mov movsb sbb out scas jmp jge inc fadds cwtl (bad) loop cli xor adc aas inc dec js xor lsl jbe inc int3 jmp insb imul mov mov rorb lret flds add jle adc add xchg decl push dec sti ljmp pop sti lcall cli add ret lahf sbb iret adc mov shll out mov inc test push xchg aam fsubrl in fiadd pop int3 xchg cmp rclb xchg sub mov xor mov sub mov pop mov jo out (bad) cs mov mov cs cmovle subl cmc xor mov inc inc add outsl dec xchg push xchg dec mov test add adcb mov shlb stos fistp push cmpsl test negl mov arpl fiadd iret fsubl add mov adc arpl lods lret cmp jae in cli (bad) inc bound (bad) or fsubr jo jle aas jns lret mov sti and sub xchg ja inc stos jle in in jle or jmp jmp dec repnz cld dec mov (bad) jle in push inc (bad) adc pushf cmp or jle inc sub cld add jle mov movsb (bad) push mov mov xlat insl mov cmp adc jl notb das sbb fidivl test pop mov js orb xchg imul mov sbb sub test sub xor enter insl nop cmpl cmc push add lahf ret mov clc adc pusha push jle jmp add in aaa xlat push decl adc jle and mov les es mov jbe adc and sarl test push rolb pusha xlat btc ret dec dec pop addb xchg int3 mov xlat ds xchg addr16 mov mov int sub inc xorl sahf movl dec add sbb mov ret aas and pop jne rclb shl lea mov roll repz add add dec mov stc aam pop imul push aad push (bad) mov roll mov push inc xchg cld or cmpsl sub jle add dec dec shrl mov jecxz aas cli ror std orb mov fnsave lods lds pop fcomps dec fucomip adc jae cmp lods in jne inc or mov push (bad) push popf pop out pop fcmovb xchg adc mov cli stc sbb mov scas add jns stos addl mov clc sbb ret loop fnsave aaa or pop dec sbbl std or les jae mov cmp dec jge sub sbb cmp mov add iret test movsl punpckhdq das jns jo dec lds je pop cmp sbb adc fisubrl xor pop testb sub hlt (bad) clc mov and add fs pop dec xchg stos lahf jg (bad) call arpl sub jne inc or ljmp rcl push xchg mov (bad) aaa fwait ret pop pop mov pop push daa adc pop sub push push push or dec pop xchg ss mov clc (bad) and fnstsw (bad) pop jmp xor cmp mov cli pop mov lcall pop (bad) rcr int3 mov jp push das cmp aam inc jne in adc sub push movsb cmp push push sub inc jg inc lahf mov mov fcomp jle mov mov mov dec and cmp lods jle (bad) imul mov dec cmp mov inc sbb sub pop cmp jle and repz and sarl aas pop xor push movsl jle add pop sti es jle (bad) (bad) push out jno bswap ret pop test jns xor popf pusha jle fs jle int in enter push into loope mov stos pop adc cmpsb and jl fcoms inc jle dec stos int3 or or lret scas cmp add push push mov lcall jge push inc jl mov or jge add pushf dec sub incb mov lds jl enter xchg cltd cld add ret outsb xlat inc loope pop cmp je jp leave xchg test jle sbb push mov mov clc sbb movsb fnsave lods xor jp std les (bad) jecxz mov stos fstpt push sub (bad) aam notl xor xchg lret cmc jle rol add out push jle ficom clc dec insl jle lds dec jle push in push add ljmp fsqrt mov jl push jle mov sbb jle mov mov sub jecxz xor mov fsubs icebp jb jle pop add adc add (bad) push (bad) pop mov mov aas pop xor mov out push lahf pushf sbb mov xlat rorl inc jmp fildll les test aam inc mov movsl idivb fisttpl push sahf jg xchg (bad) add rcl cltd xchg scas cmp sahf mov push add cs lret out shl cmp cmp add enter sahf mov fldt pusha pop xchg push call mov cs xor stc mov xor pop cli and xchg or jle inc lahf pop cli or sarl push (bad) mov mov jle jp push aad add das test sbb or (bad) mov dec dec push sub bound xor data16 sbb stc stos mov or ja sbb int3 pop jge xor dec mov push stc or lcall lret jp rclb mov dec ds jle cmpsb insw sar jle or fs xlat out fwait pop ds jle movsl mov test hlt in test xchg bound into lea mov mov scas push mov or aad mov int3 out cmpsl push repz xor add mov cmpsl (bad) in cmp cld shrl lahf sub (bad) sti nop out mov fisubr out or sbb mov inc jne cmpsl cmpsb sbb clc lahf xor push mov mov xchg jle aas push iret ljmp gs mov fidivrl inc lret sub sbb mov hlt (bad) std or ret insl push jecxz pop leave movsl mov stos test std clc add enter cmp inc sbb inc push dec mov add mov lcall outsb loop ss cs cmp add xchg add and sbb insl pop inc pop arpl stc xchg sti pop ficom xchg lds jmp push pusha out sub (bad) popa jns sti imul inc or xchg cmp movsb (bad) cmp stos insl loop jg or sahf add icebp sub mov std push lea (bad) sbb mov xchg adc ror inc push pusha ret cmp movsb push lahf xchg decb sbbl lods ret xchg xchg push sarl loopne pop inc mov lea or bound mov mov adc mov jbe roll pop orb sub mov mov js decb xchg add ret pop sbb (bad) mov jnp insl enter aad and testl mov movsb and mov jno pop (bad) fwait adc pop push rorb xor add push xchg (bad) repz pop push mov pusha data16 or xor rcll andb or negb subl push mov ljmp arpl add roll dec into dec inc loop ja mov cld or dec and mov (bad) xchg add rcrb test insl stos xchg scas jae int3 dec mov popf push popa lds ret imul sbb dec test out lock or mov push pop sub sbb xor imul je das pop and outsb ret aad dec jmp rorl das cmpsl push or sahf dec cmpsb out nop push fidivl mov xchg push mov push ret cmpsl scas mov rcll xchg xlat iret jle add dec mov xchg cld cmp jb mov push cmp jne imul xor xchg pop cmp xchg clc push mov mov leave cltd sarl out pop test or dec jmp clc int3 pop inc (bad) or inc in inc in mov inc sarb push loop inc push mov jo stos fisub imul pop fisubl iret cmp ljmp jbe inc jl jnp fisubrl mov cltd xchg jmp iret dec or leave jbe or pop or xor xor mov jle mov ret scas jle cwtl insl sbbl xchg jnp,pn insb pop (bad) push jle in sbb xlat mov jle scas outsb xchg je fwait dec fstl repnz xchg jle and in std push int3 jle pop xchg push adc sahf cli jle div repz popa (bad) out scas mov daa jl fcoms imull dec dec pop adc addr16 outsl out cmp jo or daa lahf mov stos sub test scas pop push mov jne les jp or (bad) repz jle out xchg push inc lahf jb mov fwait adc jnp insl push jle mov enter xorb fstl scas rorb mov pop add xchg sbb in jle dec js push and pusha mov int mov outsl divl in jle fnop sbb xor sub xchg jle cltd sti int and std gs add jbe jle xchg lret jmp pushf sub sbb fs js call jle scas mov cmpb movsb rclb jnp push cwtl mov jbe cmp jle and inc jle push cwtl js test movsb mov push shr mov cmpsl jle inc mov popf outsl mov sbb push inc mov ret pusha pop jle popl mov pop jae js jle in stos aam mov ds adc lar mov dec jmp mov enter sbbb jo adc xchg mov enter add out mov icebp xchg xchg inc (bad) insb sub lock cli (bad) hlt pop ja out sub xor pop imul clc inc orb insl sub cmpsb jae jnp loope xor jecxz pop sbb mov jl inc adc sahf dec ds testl inc insb xchg cld out fldenv out loope aas cmpsb clc jnp and (bad) xchg fbstp or mov cmpsb (bad) loope jae jne mov xchg or (bad) jmp and jo fxch mov cld sbb mov add dec xlat push mov mov xor js clc mov sbb push mov inc je xchg cmp xorl (bad) xchg repz xchg inc movsb clc in addr16 pop xchg scas inc add aas (bad) mov int int3 inc jmp adc or cmp sti xor lds inc ret pop sbb dec sahf adc inc push mov fmuls insb (bad) ja stos sbb rorb pop xlat je movsl outsl push mov sbb cmp aaa shrl and cs jecxz fildll idiv pop into push mov cmp test orl xchg jb xchg icebp xchg jl mov pop out cli or mov xchg test ret aaa pop adc fdivrp xor sbb mov mov jle loopne add inc in mov add push leave pop mov out jnp inc adc pushf jle (bad) repnz and jle inc cmpl nop push lock (bad) int3 adcb call popf sbb lds xor fistp jle orb lahf stos out sub clc mov popa jle xor fwait rorl jns out xchg inc add sarl repz push es adc push jge jmp sub xchg xchg inc fwait (bad) dec pop xchg add (bad) loope push push push out jb dec xchg sarb cmp cmpsl jle dec push mov sahf or jge loop cwtl and in es fstpt movsl addr16 gs flds pop dec jg jp (bad) lods lret jb aad adc cmpsb fistpll mull out push arpl mov fs or jp aaa outsl cmp mov push out bound jg pop stos jb (bad) je out xchg add sbb outsb add roll cmpsl imul mov inc push adc (bad) out lahf mov dec dec faddl push sahf push ljmp lock pop adc xchg lret cmpl es sub pop rorb data16 xor out xor jle add in out adc mov (bad) jbe cmp ljmp push and roll gs push test pop imul adc test lahf mov pop outsl xchg ss xchg (bad) pop push inc and jne fnstsw jg iret scas xchg dec icebp sbb out clc jge lret fwait popf (bad) ficomp popa cmpsl cltd aam xabort stos push es les in lret dec add bound jle mov xor jo adc xchg int3 insb xor mov rcrl popa in in adc cwtl or xor sbb mov jle,pt dec sahf gs jle out nop or xor pop mov add mov dec inc jl sbb inc ret xorb data16 xchg inc aas out int jp jnp clc add jle fistp xchg xchg out mov jle push pop mov jb lea mov test jnp jo nop and pop or sub iret sbbl sbb jbe pusha in mov sbb lret jle xchg mov mov faddl lcall out into sub jne lea pop jl repz pop ret pop cmp jmp in cmpsl call cwtl xor cltd fnstcw adc fadd jp outsl xchg fildll sahf cmp push shl loop pop sbb rolb jbe or jbe add push cmpsb cmpsl xchg push xor imul roll movsl push cmp jmp test cmp out push pop add and adc (bad) arpl in nop sbb loope mov jmp imul cmpl (bad) push push inc sbbb (bad) jbe std jmp mov push xchg cltd clc cmp out push inc jns push adc aam emms sub pushf int3 xor gs and pop not inc fs out xor mov mov mov call inc sahf jle mov arpl lahf imul (bad) fidivr push mov push push xchg mov jle icebp (bad) mov movsl repnz mov mov jle and add lds xlat cmp faddl jle popa arpl outsl imul jg pop aaa hlt in outsb jle sub (bad) lods mov xchg jb lds jle imul push pop xchg dec jle fisub cmp jns icebp xor out sbb adc mov das xchg ret mov cli (bad) insb les and xchg cmpsb jl sahf (bad) pop add sbb add clc push xlat sbb add jp jo jnp jb mov scas dec mov outsb xchg (bad) push lds push mov jp (bad) das cmp jmp rorl pop cmp repz sub or clc inc mov fnstsw out outsl xchg push (bad) loope jle sub pop insb jle mov xchg mov pop in lea cs insl jmp xchg loopne mov bound jns push jle imul jle push jl mov dec cmp fcomip mov movsb pop dec adc (bad) jp sarl mov in sub pop or out jp push push jle ret sahf and adc aad test sub les mov xor dec outsb jle mov cmpsb and aas jle,pt push loop sbb jle pop rorl aam jle fcoms mov sub movsb retw lds dec or push mov (bad) into enter jns mov push loopne jle mov xchg lret xchg jb mov add ds sarb cltd add and inc out adc sarb out adc or add repnz mov mov sub push cmpsl lock sar xlat jge in loopne xlat jg daa or sbb dec ret sysret cmp add add dec push es xor imul pop cmp cmpsl xor jecxz mov add popf push jae cmp add lea into xor and add call movl xor outsl and in std (bad) mov push outsb sbb lcall repz arpl mov push test push lcall (bad) mov xchg pop xchg add adc xor lcall mov jne pop push fsubrp fsubl test adc sbb inc jg insl out js cltd fmul nop dec or jnp dec incb push test dec sbb dec push (bad) jle add out sub lods adc inc push cmpsb mov cmp sbb cmp sarl (bad) popa or xchg xchg lock cmp xor dec (bad) and mov mov pop orb add aas adc (bad) std sarl js inc into add lods jp out pop sub jne lods mov in add xlat lret push or jge lock test cwtl shll xor rep insb lcall dec (bad) xor je lret dec mov mov sub sbb lods push push testl mov jl sub idivb sahf sbb xchg push fidiv aad insl jnp mov lcall xor pop loop jo or (bad) enter pop imul dec mov sbb leave wbinvd scas fwait dec pop and pop pop mov add xchg xchg push addr16 cmp out jp xbegin mov sbb or scas mov adc ret xor inc or add je aaa cmp clc mov sub incl int cmp xor add je cld pusha push data16 jno cs sbb pop clc jl std aad dec outsl mov xchg pop lods pop push push insl leave cmp inc out and ljmp jb repz dec mov jg push push pop inc push shrl xchg les pushf add scas push rorl inc jo and in lahf cmp or or xor adc fcmovnu mov sbb xchg mov mov mov repz es lahf imul cmpsb dec push fwait cld in or jmp (bad) mov sbb fistpll cld add cmp xchg push or add in insb push out jae cli mov xchg jle test add aaa mov adc xor and (bad) lcall cmp xchg sarb cltd scas jecxz clc push jg scas xor jb xchg adc jo pushf test and pusha out imul lret mov popa sub pusha repz mov scas into (bad) sub inc xchg into push leave sub sahf ret xchg fidivl fdivrl xchg pop fldcw adc sub jnp je or sar test add sbb pop add pop jae pop sub fnop sbbl xchg sub jmp xchg andb pusha push icebp (bad) jle adc aas bnd jle clc (bad) and rcrb insl cmc push ja dec sbb mov bnd cmpsl push jle pop cltd hlt push xor push movsl mov popa (bad) mov xchg jnp xchg push stc jle dec or adc add sub jle dec sub gs icebp stc pop lds clc insb jle jo (bad) mov push (bad) fsubr jne jge ss pop xor dec loop mov adc jo sub aad insl dec mov mov pop lahf inc cmp dec out enter jle aad inc sub scas sub jge lea rclb jg mov xchg pop rcl (bad) jno movsl jg mov cltd cld (bad) clc sub (bad) fist insl mov in iret out cmp jno inc cmp cmp dec fstl inc xchg sbb and add jecxz repnz imul fwait push into xchg push insb imul mov jg (bad) dec roll test popf xchg js sbb test int cmpsl cld xchg fsubs and iret fdivl add inc pop or push fwait inc xchg push jle (bad) jmp lahf in sbb jecxz nop pop rclb out add adc fnstsw stc aad jmp fcoml (bad) popa (bad) addr16 lret add dec xchg mov pop movsl xlat dec mov rcll jecxz sbb jge inc or outsl jnp mov mov sub orb push and out loop (bad) es stc add or sbb mov cli popa mov and sahf and js sub dec sbb das adc iret jns popa iret and mov push mov jbe arpl loopne pushf pop and fnstcw xchg jle jp xlat test jb movsb and idivl iret dec or and jle js ss je fs clc jle test pop movsb arpl std dec not cmp sub scas rol cmp xchg aam jle jmp popa in into pushf gs mov xchg leave pop add dec movsl jnp jmp mov out shrb jne je loop jnp lret aam fwait add mov and mov lods out jle cli cmpsb repz pop jle mov mov pop and out int les cli clc push sub aaa jecxz aad out stc xor inc mov mov in call cs dec out stos lret aas jle mov clc cmpsb lahf loop mov test das inc imul add dec fcomps jle std cmp inc mov shrb pushf push cmp fimul out push adc jle xchg lds mov xor dec repz mov cmp ret sahf push pop lcall jb or int arpl jmp xlat je fdivs sti repz insl (bad) pop jns sub xchg add out push sub jp mov (bad) mov hlt xchg xchg ljmp orb sbb ret mov sub cld mov cmc and nop push arpl xor adc test jle jge lret pop jg push outsl mov outsl xor fadd jle mov jae stos cmp inc into mov js sbb faddl push andl mov mov add mov or xor inc dec sti jle negw sahf push xchg jle cs stos mov inc icebp xchg iret pop mov jle scas mov xlat std clc mov sarb jle ja push mov inc push ret xchg (bad) mov les testl mov dec (bad) inc xchg sub cmpsb fwait das shlb icebp out sub imul ficoml leave push mov addb push mov jbe pop (bad) fisttpll push (bad) cmpsb jno mov stc in stos pop ret xchg scas xchg mov xor sahf jl dec fnstsw cmp cltd ds adc inc pushf mov aas jecxz outsb mov pushf enter mov fmul aad mov int3 push cs or rolb (bad) mov pop or cltd mov adc cmp sahf inc loop sbb clc push out fwait pop ror mov adc fbstp cltd push lods jle pop mov push mov and cli notl and add sub sub xchg ficompl sub lret xchg jmp and decb cmp lahf cmpsl mov inc jbe jecxz stos ret sbb arpl stc shrb push xor popa mov add addr16 pop jne cltd jge xor push insl clc (bad) xor into jb push sub fisub inc fcompl and test gs xchg test aaa mov les or adc inc xor add push (bad) fdivr pushf nop pop inc add ds les insl andb je add nop inc pop (bad) add dec outsl gs push mov cmp jecxz pop adcb or adc cmovne les int3 and xlat insl lret lods xchg add pop nop or lock add js jo adc subb sar sbb jns lcall call aaa shll sub in xchg repz jns add loop cmp add into add fsubs ret setl pop clc gs mov push or pop sahf pop lea movsl inc je adc xor js or push sbb add scas or cli cmp xchg in xchg test pop add mov mov rcl (bad) stc push lcall jmp xchg mov add mov mov cmpsb jnp rclb lret adcb arpl (bad) adc push mov add push outsl xchg lret xchg ret flds and sub in jle mov or jle mov (bad) (bad) lock add lds mov xchg data16 outsb iret mov fistp xor cmp lock outsl jl xorb jns clc jle out pop ds aaa adc push cli jb es sbb aaa idivb ss leave ret push sub sbb sub (bad) fistpl mov fstpl dec mov inc xchg mov aad jo repz ret cld mov add jg and (bad) lcall mov mov inc test mov jge pop mov sub mov adc jle pop (bad) jae push repnz outsl into movsl cltd fadd (bad) repnz test mov or mov dec mov jecxz imul xchg fxrstor stc scas lahf fsubs scas jle dec aaa inc cld mov fs in cmp sub jle adcl mov rcrl in leave inc or movsbl add lcall mov mov mov gs loopne push arpl cmp pop test in stos stc les jecxz dec xorl jle pop out pop (bad) pop jle nop cmp in sbb in (bad) leave (bad) mov mov aaa das mov call in jle xchg dec mov sarb push xchg dec mov jle (bad) mov fidivr mov mov jae inc xchg mov xlat outsb jle imul or pop xchg push lahf and xchg das (bad) shrl sbb pop cmc mov outsl aaa jb,pt fs inc frstor stos gs jl jp clc ror pop outsl or mov mov jl jb mov push test in int3 push (bad) clc loope movsl notl cmp sbb add (bad) mov sahf cwtl fbstp xchg xor and lret int rclb test dec sbb dec repnz mov sub lahf fistpl inc jle add scas dec cmc xor or lods jp xchg push sbb mov cli cmc cmp enter pop jns jle rcl pop inc scas ljmp dec and pop imul jo ret mov loope aad jp mov sti xchg push xchg jbe bound add int3 cwtl cmc xchg jg leave jle jl mov cmpsl cmp jle mov jge dec in and ss jp or popa pop or cld fsubrs icebp mov ret ljmp mov mov jb or std xchg je rorl mov inc jmp cld popf jle sub fidivl lret add adc pop bound in or lock mov pop (bad) mov decb mov fldcw adc lahf or xchg adc (bad) mov push enter addl lods mov add pop lods and inc sbb mov cli outsb arpl xor insl into and enter jne ds mov xchg repz jle aam xchg inc mov mov (bad) xchg mov in mov xchg inc leave lock inc and mov clc adc cmc mov mov jg aad mov cmp inc cmpsb pop adc daa aam flds call aaa outsb das test (bad) xchg lret clc xchg or sbb xor cmpsb addb out push (bad) sarl mov sbb adc jmp adc fidivrl push jmp gs dec cld sub cltd stos mov dec push inc fwait push cmp popf mov adc xor inc push xchg testb xlat dec inc mov lcall (bad) dec pushf and sarb mov jbe and jle rclb imul dec (bad) in repz fmul add in push or arpl aam out iret push fisub mov jecxz cmpsb add push jle xor lods gs scas inc jmp push push stos pop mov jle cmp adc lods add inc mov adc mov jl cmp xchg js ja fildll mov (bad) jge sahf scas idivb pop (bad) mov jle jo cmp mov out std xchg dec das sahf (bad) push fs in xlat insb into sbb pop pop cmpsb fbld ret mov cmp fstpl outsb pop cmpsb int das ja mov lret loop shl aad push xchg dec insl in pop pop movsl sarl pop mov insb sub xchg jp repz sub aaa sbb inc jle cmpsb lods test call ss lea in cmpl xchg ret mov cli push loope cmpsl add repz or lods pop or xchg adc or in add ja fcmovbe sbb jge ret xchg fstps bound xchg or iret jne cmpsl pusha push and out enter dec adc jge daa cltd lods imul nop (bad) or mov add lods aaa xchg inc cs incb (bad) add idivb dec movsl mov jb pop gs mov js mov push pushf clc xor js,pt inc stos out cs adc xor mov jg pop push mov mov mov xchg mov mov jnp or and adcl in loop ret sub cmp and aaa inc insl cmp push adcl clc (bad) frstor push or imul (bad) sub mov divl das push or mov inc js add xchg pop aas dec sub mov clc jge rorl pusha les push pop imul push pop nop or jbe push int3 adc addb cmp stos cld ror cmp mov mov lret adc arpl aas cltd push insl cli test mov xorb add icebp jle out adc pop les (bad) sub xlat xor and repz (bad) cmp add (bad) ljmp jecxz mov add add in push (bad) xchg xchg loop jle repz cmp mov aam jp xchg sub adc ja sub xchg push fwait lods loope leave repnz fsubrp stos sbb xchg inc push xor jl xchg jnp pop jle push push pop jle dec out add or jp inc or test or xor xchg jle out ljmp ss in lea jle addr16 in and aad bound sar (bad) lods and mov sub add scas (bad) or push adc aam fsubrl jle sbb jne xor push pop imul mov jle pop add lcall xor popf mov cvtpi2ps jle jbe (bad) fistpll mov fwait divl mov pop cld sub pop aam jle pusha adc and xchg into xchg clc sbb xchg add out je test jnp fistpl aas pop aad cwtl xchg int3 jns lret lahf ret pop mov hlt and outsb cmpsl (bad) mov sub cmpsl rep jne sbb jnp xchg mov mov adc mov push jae int3 gs sbb mov popa jl sub fidiv std push ljmp fisttpll dec inc cld lds sti aam insl notb push call js or aad mov sub add (bad) adc jp or pop mov adc insl or outsl pop loope push cmpb (bad) jle mov mov push aaa jle or (bad) mov inc xor lds (bad) mov cmp fwait jge push (bad) sbb add shrl leave push lods dec dec adc inc jle je ds jno in aam pop jle test stc jl or faddl jl pop lds dec cmp xor lcall je mov mov out and sub mov and dec sarb cld push mov lods out mov sub imul inc jecxz add xchg cmpsl scas cmp cmp add rcrb jno adc add jle cmp fcoml adcl bound xor scas es and cmpl ret inc cld cwtl jle inc push or (bad) xor pop pop inc mov jmp jne mov jle idivb popa in mov out cmc push (bad) add mov mov es sub mov xor mov pusha insl insb pop pop nop enter cmp (bad) push mov fldenv jmp sub jl xorb jle out imul das repnz mov pusha jle xchg mov xchg push andl dec je and arpl mov inc sbb mov jb cmp int3 testb addl lea lret inc das (bad) mov mov pusha iret dec xor nop in jge jno mov push clc jne (bad) repnz jp add pop and mov mov fwait mov clc leave test cmpsb mov mov jbe movsb pusha mov lods imul jle aam mov jle (bad) mov adc dec add jle push xor or jns jle sub xchg dec scas push lret fs jle jbe push fwait jnp (bad) xor clc iret pop dec add (bad) pop pop and xchg jle in decb mov inc jle fisttpll mov jle jge and jle pushf cmp push imul jge push addr16 cmp rorb mov jno aas xor inc jnp inc pop cmc fisubrl (bad) daa add adc js jle mov divl mov xchg gs dec in fstl fidivl jbe or mov add dec test pushf jmp lahf js mov push insl mov jnp lret jle cmp iret into pop sbb jle pusha push test lahf jbe xchg mov fdivrl sub (bad) int3 out imul lcall pop mov arpl jle aad adc cmp jle icebp loopne push fsubs cltd adc xorl adc push mulb outsb mov mov jnp aas push jle fwait outsl lret imul sahf or adc lods js test or and fsubp loop sahf pop mov add lock cmpsb inc pop arpl adc leave inc push jp iret xor std repz subb aam jl mov jecxz out inc add jmp insb jge addr16 aaa pop cvtps2pd test leave adc mov sbb shlb iret imulb loope scas dec cli mov andl push mov xor in pop test mov clc sub or add sbb jle add cmpsb test fpatan adc ret clc inc jle sub (bad) jb push mov xor arpl loop dec jl jle jno jp jbe mov cmpl mov pop mov movsl and mov dec jbe xchg test jle clc pop addl (bad) mov dec mov mov xchg jle jl inc mov sub mov sbb daa scas inc jae call movsl xchg xor jle decb aas push clc aad cltd sbb call lock lds (bad) popa pop mov jnp jle hlt dec mov in lret call insb sub mov adc imul (bad) sbb (bad) adc inc fs inc mov fwait pop xchg mov loop pop leave cmp mov pop pop push pop mov sarl int cli inc int3 pop (bad) (bad) xor jecxz mov iret nop push je push jno xchg jmp stos push push mov add xor dec imul fwait (bad) fimul ljmp cmpsl and lahf les mov cmp (bad) pop inc and push mov cmpw xlat jmp data16 scas sub ljmp out cmp clc add lret sub mov out mov jp cmp aad mov or stos mov leave les push sbb into insb movsl mov fiadd push fucom jecxz sbb xchg sub ret cmp in sarb adc push ret pop dec jecxz mov pusha iret add mov jecxz adc lock je aad mov dec xor inc adcb icebp push rorl scas xor pop stos sti cltd test enter pop (bad) lret pop arpl mov add pop ja enter leave ret jl pop out dec jo,pt xchg push sub iret leave xor repnz rcll push add (bad) cmc ret lahf aaa aad out cltd sbb mov and or add add jmp negl dec and pop mov adc mov mov cmpsl sbb push sub dec lret aam aas push jns in jnp stc push ret aaa pop and pop jno jmp mov or ljmp aas or (bad) aad adc xor jae popa into (bad) clc loop sub enter sbb pop add jne push and test test bound pop (bad) aam push or add mov inc adc xchg dec mov mov add mov movsb and das jmp aaa mov mov add call mov stos push icebp inc sbb and pushf push ja test in mov dec or cld pop daa adc lock mov jle pusha pop fistl cmc ja cmp adc sub dec int3 jle pop out out enter mov js jno mov push inc pop clc and in pop ret pop fisub outsb and into or loopne enter inc push cmp ja stos cli dec dec inc (bad) mov ss mov ret stc pop dec xchg or jge sbb testb inc lret mov add and rorb mov fs aaa das dec and mov mov push or jae cli pop inc adc aam ds inc inc data16 cli (bad) xor mov data16 push and test pop inc push add pushf ret push pop xchg repz pusha or divl inc push je cltd into jp jmp pop lock les fwait jb (bad) pop leave sbb add je repz mov xlat mov jmp pop mov jg inc lahf cmpsb or (bad) mov push inc push or mov loopne jbe jb lods outsb push push lcall jno inc dec clc adc inc inc insl inc ret imul lret and int sbb clc pop mov into fadds sar stc push lret mov push jo jg or fs push in lock bound out aam fisub inc mov bound mov dec jge push into push dec loop sahf js push aad pop mov sbb mov add scas and add sahf aas orl adc adc cmp mov push sub inc dec ljmp sar dec insb push cmp minps add sbb cmp cmp (bad) stc rcl push rcr sub add test push xor jl clc inc mov add mov xchg cmp (bad) push xlat adc insl outsb mov xor outsb or and push adc sarb xor inc and lods into ljmp clc dec jmp cmp arpl or clc lret push loopne mov xchg pusha lcall aas insl (bad) cmp fisttpll or xor test mov push fcomip in lret fnstsw cmpsl scas sbb push aaa lahf mov ret stc jns adc pop (bad) dec push out push je in pop bound jge or push dec dec data16 dec xor outsb push divb stc addr16 push adc jns pop ljmp addl xchg fnsave je mov mov dec les sub lea adc aad mov insl jg xchg test sti pop jnp icebp push (bad) push push mov push pop into jl jnp add mov cmc mov jg pop pusha add les jmp ret (bad) xchg arpl std cmpsb iret and cmp dec mov mov in pop outsb xchg xlat mov std jl imul xchg outsl adc stos pop inc ret or sbb push adc ret dec fwait push ret aas mov jg cli aas xchg test jmp stos inc jg aas jle add push pusha call jae mov sti test out fdivrs and mov scas xor das data16 sahf lcall xor and mov into (bad) cmp ret pop sbb inc add addl scas inc or jmp sub mov push push test add inc insl idiv cmp or and imul push and jge jg aas mov jo cmpl fsubrs mov addl outsl jbe pop pusha pop fs aaa fs sti insl cmp or je roll addr16 and pop aam pop pop adc aam jl push das adc ret ss xchg insb mov pop push arpl (bad) push test lahf sub cs jnp or cmc add dec push mov dec in push jle push adc out or sbb jle xchg adc pop int or dec loopne cmpsb test push mov sbb sub or and xchg xor (bad) loopne loope push lds insb cs fnstcw and mov out adc js push andl push jle fs mov push jle fcoml pop pop (bad) xor and ja (bad) mov out sti adc xor gs fcoms ja popa dec push pop cltd (bad) rolb cmp or add outsl xor fnstsw lods imul (bad) inc pop stos mov (bad) and jbe sbb lahf jl loope sahf xor xor ds mov fisttp cmpsl jp dec pop aad xchg push in cld pop fisttp pop add shrl int3 les dec sbb test mov insb cmp pop xor inc xchg ss (bad) ss insl mov pop push ret add xchg pop cwtl fiadd data16 leave pop das repnz or pop cli sub pop adc pusha jbe add fdivr mov jg mov inc in std and ror pop ljmp add push add pop (bad) sbb lret scas sarl sub insb adc nop jp leave jne push adc daa repz add or push and xlat lret xchg mov aaa sub ret leave cmp xchg or hlt add movb icebp lret pop in leave rclb ds or rolb jno flds mov push je mov arpl clc insl rolb inc sbb xor push push test daa cmovae add mov loop test jl jbe sbb inc lret or orl faddl out out pop or dec mulb inc sbb mov mov mov lcall xor loop dec mov sub stos add ret jmp popf stc adc cltd sahf xchg sarl sbb dec popa repz jne mov inc cli add sbb add and sub (bad) mov mov add movsb mov add cmp and enter cmp (bad) gs repz jl cmp scas add jmp xor inc jo mov lahf or jp xchg insb push (bad) cmpsl push and xchg jb stos xorb jle inc rclb les cmp inc lea jb movsl xor sbb repnz jbe scas addr16 lods xor push mov adc jnp clc jle sti subl nop mov ret jle xchg inc pushf jns xor xchg sarb pop inc mov dec push xchg out push adc lret jno jnp dec lock loope push out mov cmc mov push and dec sub hlt or jo (bad) and mov in (bad) (bad) popa or mov imul sahf adc sub cmp (bad) cmp stc jp add mov jmp or xor je outsb pop xchg scas sub add and adc add clc adc aad movsb in or fsubrs fwait sahf xchg add push (bad) arpl push (bad) (bad) clc (bad) js out pop fsts aaa hlt mov add xlat adc xchg cmp xor dec std and cmc cmpsb and movsb mov mov mov fdivr or into stc xchg test jp and or or mov movsb sbb dec (bad) fnsave cmpsl cmp es push xchg mov fwait xchg das fcoml pusha loope push inc ret sub and jle push insb dec aaa xchg mov jecxz sub cltd mov xchg mov shlb int jae jne mov mov jnp jno repz push sub sub jbe pop stc fwait mov std jns dec jo imul and cmp mull test mov movsl fildl mov push popf pusha mov push push mov jle aas lret adcl (bad) (bad) xchg jle push xlat xchg sbb or dec negb mov inc cli inc xorb icebp jg dec jle mov scas jle cmp daa add and push cmpb jbe jle push jecxz cmp sbb icebp lods sahf daa xorl (bad) adc stos je xor lods fcmovnb outsl (bad) mov pop bound xor hlt jle inc ljmp jle cmp fldenv jle dec mov mov pop fs std jle iret data16 dec push xchg mov push in mov sub sbb fldl scas mov (bad) add into xchg aam mov cld push inc mov push in test or jle (bad) daa pop in imul xchg in gs andl inc dec lds pop cld test dec fidivrl sahf or lret in or mov decb mov shl jo and test hlt xchg push dec sub clc cmpsb inc cmp scas jmp mov dec xchg arpl ljmp sahf cmp or pop push jp js jle in outsl adc pop cwtl jge push cli xchg xor xchg fnstsw daa push cwtl (bad) das or fcomps movsb in insl pop popf int3 jbe test stc pop dec (bad) pop mov arpl mov in adc push xorl jae cmpsb cmp dec mov add movsl dec pusha clc bound (bad) stc (bad) mov cmp mov (bad) outsb jge cmp or fstpl movaps js adc inc lahf add (bad) (bad) test sub daa lahf das stos pop adc ss (bad) cmp cmp inc xchg xlat lods aam pop jle and sbb jecxz (bad) mov inc cwtl and mov add (bad) fs push jl push clc inc mov cmp push dec (bad) dec stos (bad) les pop cmp and and pop cmp mov push inc clc jbe repnz sub daa push xchg jne pushf sbb ret push mov push xchg xchg lret addr16 and adc inc pop inc clc in pushl or or cmp push cmpsb lret pop rcl xchg mov sub xchg in xor jne jmp mov adc add aas add cmp pop jno jne les (bad) test scas or add cmp bound arpl aas push xor pop jmp sbb das sti outsb aas test xchg cs cmpsb loopne mov mov xchg (bad) xlat inc sbb into pop push mov ljmp cmc and sbb dec in (bad) dec and leave cs (bad) push mov les cwtl decl cmp (bad) mov scas outsl add jle and out ss add (bad) sbb hlt out les inc sarl ss cmpsb invd sub cmp in adc into rol pop enter xchg outsb cmp add jecxz lret add jmp jo mov push pushf aam ret dec pop loopne les push xchg pop aaa repz repz packsswb out inc cs pop sbb in xchg sbb add sub mov pop adc sarl scas aaa dec pop sahf cmpl and mov cmp xchg ja push stos mov lret inc popa (bad) insb notb roll xor pop cmpsl pop cli xor insl pop xchg sbbb or (bad) sbb add cld adc test pop into std out push dec jp ret cmp mov sti jle xor xor inc (bad) out lea push xchg pushfw scas sub xor sarb push adc aam test mov mov add xchg sbbl or ja push jle call bswap jle js sbb cs jle add dec jle (bad) add xor mov (bad) mov jne jmp fisttpl repz cmp lds out movsl mov out jecxz cld mov sbb dec mov push cmp pop mov xor das fsub (bad) (bad) out mov ret cmp mov sarb pop xchg push ret out icebp out mov cmp iret mov jp jle aam out enter jle and cltd and jle dec dec shrb jmp jle xor and jbe lret jecxz fnop jne (bad) jle lahf sub sub popf cwtl fsts jne sarb mov push fadd insb popa adc sub add idivb jle jae mov xor in add ds xorb jle dec push sbb lods jle cli cmp hlt fsubrp sti cltd jle,pt push jno and add jmp pop cwtl pop inc add notl das or sub rcrb fildl cli push dec push or int3 xchg addr16 mov mov sub in jb add pop and fnsave inc outsl pop addb (bad) (bad) push insb outsl mov out cmp pop out int (bad) xchg inc add ficompl mov and lds fisttpll test xor jl in cltd leave xchg pushl add adcb movsb jmp fidivl stos jge mov addr16 push cmpsb movsl push aam test sbbb icebp hlt pusha xor lret push adc jg loopne je fdivr push jno gs xlat mov xor std inc dec je dec push jge (bad) fcmovnbe jge sar adc mov fadd jmp loop inc jmp icebp jmp movsb cmpl mov divb jge testl sbb scas sbbl outsl cmpsb (bad) lods hlt jl dec push sub and sub jno stos (bad) cmp jle dec push adc lods (bad) cs (bad) sub xlat jle mov jo in and jle add mov jle and leave mov (bad) lret (bad) xchg mov and pop popf mov pop fisub dec les mov pop rcrl or mov mov mov push xchg cmpsl sti jg push nop push imul jle pusha fisttpl imul mov ret jne out ljmp dec push cwtl adc lods aam xor fldenv jle fs dec testl (bad) sbb sub ljmp jle insl test inc pop out in push arpl sub ret inc jle lods pop sbb xchg mov das jmp notb cltd call subl rcll jns sahf imul push jo stc push sub mov mov mov mov ret sub mov adc fnstenv lret loop add or or mov popf ss sub fnstenv in adc adc ja push pop addb mov jbe cmp mov ror (bad) pop outsl mov mov xchg cmp test sub scas adc dec js (bad) xor jb in cltd pop or aas aaa (bad) repz mov jl or clc out leave je cmp negb pop clc inc mov daa or test jnp lcall jo stos pop jl inc cmpl imul or mov ljmp mov das iret dec mov pop bound sub mov movntps mov imul or jecxz add inc in (bad) imul pop js inc dec fnstsw fsubl jecxz mov fdivs mov mov (bad) jmp lahf clc mov imul mov inc xchg (bad) add clc fidiv xchg aaa mov push scas and mov adc push shrl dec ja xlat mov ljmp sbb addr16 jecxz mov fsqrt movb mov adc push xor fldl jmp xchg ss ficom out mov clc mov in stos cli inc scas jle jp (bad) or popa mov pushf in mov movsl std adc or cli (bad) mov insb jl and repz and pop subl cmp pop and and jno pop push nop push xchg jle mov xlat je sub or jle ds inc fcoms mov es ljmp jle call ffree jle sub mov jle push scas loope (bad) aad adc pop xchg addb add pushf mov adcl mov cli ret flds inc ja sarb rol add aad (bad) fiadd or pop push xchg push repnz call and outsb sub les fwait (bad) and xchg ret leave adc add adc push stos scas (bad) lods popf pop lret test push pop xor data16 xor add xchg or sti fcmove dec lods add popa test mov (bad) pop fstpt adc ror lret sahf (bad) in pop test dec (bad) fnstenv dec xor hlt cmpsb jbe js fldt iret lahf adc pushf jle aas int xor dec sub pusha lahf std and pop js mov mov outsl mov aad icebp mov into shlb clc and xor or xor pop jle sbb jo or jle sbb xor jle jmp cmp xor cmp add and adc cmpsb lahf imul stc je xor pushf add jle sbb mov pop repnz (bad) sub jle lret xchg lock fiadd in hlt jle bound mov or test lret or cmp lods xchg and push stos pop mov imul mov sahf je inc mov test push ret in inc negb fcomps pop bswap loopne add bound mov add aad into jno addr16 jecxz push xor (bad) lods and (bad) add push and rcl addr16 cmp fucom pop mov insl inc xchg cmp xchg jne dec or mov out push ds and sbb jle cwtl cs (bad) clc in cmp mov jne mov cltd or lss (bad) je push or enter jg sti int3 aaa out push (bad) push (bad) cmpsb push pop pop insb into ficomp pushf popf adc mov in or mov inc test int sbbb ret cmp out pop imul daa repz jecxz xor rcl das stc lea fisttpl jge cmp arpl cmp outsl sub (bad) in fstps xor popa test icebp movb mov cmpsb in cmpsl aad or std out mov sub mov adc insl push mov fwait push sarl pop xlat jecxz adc ret mov xchg pop xor or test mov mov dec lds push inc popa and (bad) aam jno cltd stc inc mov ret xchg xchg rcrl (bad) or add and cmp in in jmp push sbb jno stc mov mov lcall iret fnstsw lret clc mov xchg mov pop les clc and pop jge aam dec jbe jle adc mov test adc in mov std mov jecxz add mov mov scas js push jle out cmp stos mov cmp xor jecxz (bad) sub inc xor lock push xlat xchg mov in ljmp hlt mov jle mov mov cmp xchg jle ljmp mov stc xchg push ret mov adc jnp leave jns mov adc cltd out movsb xor fdivr or sbb mov das inc pop cltd mov jb into sbbl clc divl out mov jbe clc mov mov lds shrd mov dec sub jp iret in or rcrl adc movsb pop faddl idiv cmpsl and outsb loop jl sbb imulb xlat loopne adc hlt xorb sub jge ljmp or jbe gs clc jge pop adc push xor adc int dec clc into stc movsb pop or stc ret add and adcb fldt ja mov repnz sbb inc cmp out jmp xchg mov lods (bad) mov (bad) movsb adc add cmpsb or mov xchg pusha jg testl rcrl mov cmp and clc cmp xor int (bad) adc inc cld into repnz jp mov inc jle nop fisubl push lds xchg cli sub rcrl insb fdivs das mov cltd pop cmp jle stos and cli (bad) jle icebp test cld jle jbe ds push or cmc sub xor das jle movsl (bad) icebp lret pop mov imul xor out xchg push push mov mov (bad) es repz imul les dec jl push mov sbb or mov push neg (bad) mov imul xorl shl and sub jle loop pop or jno cmp bound jle push aaa lcall lret dec mov and inc inc xchg adc ret sub bound movzbl dec and std pop fnop adc test cld push add or int3 xchg test mov inc sub lahf mov aad lahf or push jl aas hlt (bad) jo jmp add repnz je push sahf sbbb dec inc inc mov add jl fistp mov lods inc dec in mov popa mov or shrl les rol sahf pop mov fnop pop fadd pop in leave or adc jmp fsubs sbb xchg insl imul cli adc jbe mov scas dec cs test cld adc inc ret (bad) rolb mov pop fsubrl int3 iret ret mov clc fstp adc les xchg inc push shl mov andb jmp dec sub xchg cmp inc ret andb or leave cli jne loopne and or xchg or pop push insl fisubl loopne js add jns sahf (bad) mov sub pop out mov out jle adc jecxz lods insb (bad) xor jle and adc sub xlat inc sbb in sahf sti jle push pop and repz (bad) pop stos push adc add pop jmp test scas mov mov (bad) hlt (bad) into mov xchg cli outsl lods insl adc jns (bad) pop jle scas cs cmc push jle inc (bad) jns dec test jle sarb jp lcall fwait jle insl (bad) mov inc out cld jle lock shlb jbe jle in scas mov sarb jl push xchg jle ds mov inc pop scas jle sbb lock mov push push mov sbb mov add (bad) mov out cli mov (bad) cmp xlat loopne (bad) jmp call and (bad) arpl mov sarl xor add xor jg lds mov stos sbb leave cmpsl mov iret int3 pop jbe mov push cmp cltd sbb jecxz add nop cmp les add add jbe cmc popf stos fsubrl inc inc cmpb or (bad) ret arpl cld cmp out and fdivrl test push imul subl mov mov int3 repnz push paddd into lcall sti push out pop imul (bad) stos fmull mov sbb rcrb in sahf cmpsl or xor pop push xor scas xchg scas stos mov mov sub mov movsb lods mov add add fdivr pusha mov sahf mov (bad) lea test das add push stos dec jns xor outsl jb jnp push enter inc sub std mov jle sbb int3 sti movsb inc int movsl aas pop movsl addr16 jecxz jle push xchg mov pop jo push lods jle rclb push rclb iret and xchg mov cmpsb je jp xchg xor adc jp mov divb aaa cmpsl std add call sub repnz (bad) sub nop ljmp shlb arpl inc cmc (bad) push pop mov adc clc je push shrb adc or in rorb insl ret les cltd jno jge arpl fisubr inc out dec orl pop ret idivb pop adc je or add (bad) push dec push xor repz and jne xlat mov sub lea and add sbb jnp push mov lcall push int3 fildl inc in popa inc daa (bad) decb or or test mov push mov sbb div sar insb je imul and je aas or mov mov jl mov sub stos push cmp cvtps2pd pop cmpsl out and mov xor jns xor (bad) sub stos and clc add loopne in mov adc xchg pop push aam inc or jge std scas push dec xchg xor jecxz lods hlt imul dec dec lahf mov scas push in sub push sbb xchg or sbb xchg testl cmpsb adc sbb cmp jne jl add inc dec and mov mov inc js mov add xchg mov or test in mov outsb sub xbegin or pop xchg ss adc outsl andl out xchg in xor clc or shll lea jge mov mov int3 (bad) xor mov or dec add outsb sbb or ss in xchg push mov scas daa inc pop cmc sbb call loop movl cmp lcall jbe xchg xor lahf mov nop mov xor mov push (bad) ljmp in movsb pop (bad) in jbe cmp (bad) push mov pop fimul lcall rcrb add jle xchg mov jbe push jle pop sbb int3 pop inc jge in aas jle mov fisub fs push sbb or push cmp mov stos mov push rorl add adc xchg inc and std out and aas arpl xor movsb pop mov inc xchg push lahf pusha sbb jle inc push rcrl xchg inc jle pushf movb jg jnp inc inc ds popf adc mov fldt leave jp mov fcoml iret push xchg xchg out mov movl jle mov fistpl iret mov inc add jle fs repz add (bad) mov out (bad) call movlps dec sahf fsubl push jo ja fldt ror aad push mov xchg jnp scas (bad) dec sahf or clc fwait xchg ret cwtl in push mov (bad) jmp sub pop daa push ds (bad) je mov fstpl jne mov or jb adc cli in in rorb and mull (bad) test testb xchg cmp repz pop jne stos or sbbl pusha scas call fnsave jns or (bad) xchg mov add roll pop inc xchg and loope inc aas mov inc test aad stc das mov movsl mov insl pop jle shrl push aad mov into mov xchg mov dec out add cmc pop popf cmpl insl adc ss jp (bad) test xchg jbe sti fnstcw dec jle jp and xor enter jbe mov in inc stos inc cmp (bad) dec or mov xchg test mov xor sub jo jle jecxz into (bad) addr16 sahf mov icebp sbb mov jo int3 iret jle in fiaddl jle jge add (bad) scas and insb jle mov daa (bad) into jle dec lock mov sti aaa leave inc cmpl imul jmp sti add ror clc leave int3 jg repz sub repz lret jle ficomp js jle xchg pop jle incl lods lods lea lret push cmp out addr16 (bad) xorl fadds hlt lock pop sti movsl rcr xchg mov dec pop sbb in mov cwtl add out inc (bad) jge sbbl sbb repnz jle test mov jae sub or mov arpl dec jle test xchg pop sahf lea add mov mov jnp jmp mov loop push cmp ret xchg rolb outsl pop fdivs xor xor in jne imul mov outsl je (bad) stc fcmovu dec out xchg sub andb xor mov insb into fisttpll ret sbbl scas cli push cmp cmp movsl out enter gs sub (bad) cmpsl aas cmp pop push in lret loop xlat xchg orb mov aaa push cmpsl xor sti jge mov mov xchg adc or mov mov enter push fstpt loope push cli repz jl mov add fdivrl sahf add pop add insl aam jle scas in or cmpsb out adc bound int3 inc out sahf fnsave cld cmp imull mov loope dec dec sub lret push jbe je jbe stos jno stos push xor lods sub jmp xor xchg push fidiv clc rsm sub imulb or and jbe das repz (bad) (bad) stc xchg sarl mov iret add hlt in add out divps jo negl dec cmpsl mov (bad) scas sbb add sub mov stc inc pop jmp xor clc ljmp insl pop shlb or or aaa mov mov pushf add out jo xchg movsl cmp je push lahf xchg push sbb or xchg loop notl jle jae aaa or pusha mov subb cmp (bad) sbb shl jne inc or cmp (bad) fimul pop lods cmpsl xlat sahf mov jae xor lcall sbbl mov inc addl add jnp stos mov mov (bad) xlat xchg aaa jl xchg pop das mov jno jae jle mov notb mov test or push (bad) sahf lahf cltd lret in jl pushf je in out cmp mov insb cmp negb jns sbb loope jle pop or xchg bnd dec mov mov dec inc add ret jp xchg push fs js rolb (bad) das or jle addr16 adc and xor (bad) inc leave int insb add cmc inc mov insl sub (bad) fstps push jle push arpl (bad) out mov in insb arpl clc int3 jle in sub fisubl in adc sbb xchg or push into pop xchg push fisub lret lahf imul push inc or dec pusha and jo pop jb cmp inc (bad) repnz pop (bad) popa pop iret (bad) mov jne xchg pop lods xchg pusha out push decl inc push aaa jo je aas repz iret jge loopne jb fisubr adc arpl test les mov dec cmp jmp adc iret push sbb push inc xor lods cmp jne nop in sbbl jo lods fbstp inc sbb ljmp fadds (bad) sub push movsb cmpsl pop fcmovnbe adcl add ss add sub iret ja int lcall bound pop xchg lahf repnz mov pushf mov add and outsl inc es mov sbb scas cmp stos popa lea aad lcall lret adc faddl jle aad mov adc fdivr and (bad) ficompl jle and in cld push push dec jle jae sub xchg fcmovbe xor arpl xchg jle or cmp inc xor out mov into push sub mov mov jns inc int mulb cmp push xchg dec cltd gs (bad) mov xchg insb rolb xchg or (bad) and outsb jle sarb sti mov dec pop ficoml pop repz ret addb mov and stos mov stos aaa inc test mov sbb pop inc cmp divl mov lea mov (bad) icebp test (bad) movsb cwtl int3 jecxz mov xor cwtl arpl sub sbb mov or ret loopne or imul (bad) sub mov inc and push mov clc addr16 movsb aam scas out and pusha mov adc jne add xor fwait mov inc stc ja pop scas inc add pop (bad) xor fmull stos ja and in or shl xorb jle push aas mov adc xchg pop (bad) fistp data16 (bad) mov insb hlt push adc add mov mov xor pop jle cwtl negl inc lahf jle jno je cmp in add cmp sub popl cmp jle inc imul js fnstenv scas mov xchg mov dec sbb (bad) incb jle in inc pop mov stos cli jle sti mov test mov mov jae dec and mov movsl mov xchg jl dec mov xchg mull decl iret mov jnp (bad) negl cmp push jg cld cmpb add cwtl push out sahf push and scas push clc inc jmp mov or pop push (bad) cmp sub mov and mov mov inc clts pop (bad) test lods mov inc leave mov add loop lahf in push out (bad) and push sub mov pop (bad) shl aaa pop rorl movsb inc scas scas push inc cmp je mov xchg sbb (bad) xchg mov mov movsl icebp inc mov test fld (bad) cmp lcall cmp xchg je add pop movb fnsave into stos into inc mov pop mov cmpsb movsb clc cs outsb push pusha mov jg jge,pt mov cmpsl loopne dec cmp shrl and push clc inc stc movsl and ds sbb nop dec iret mov arpl in pop jl popf pop pop into xor ficomp rol push dec and test add rcrb in add adc cmc inc pop and bound scas mov rorl out fbld inc fldt xchg mov mov imul clc ja pop or (bad) decb cld test lock les stc arpl mov xchg inc cmp xchg mov orb es inc pop mov clc push int mov cltd inc jle rcrb das scas inc inc dec xrelease out fdivl or outsb xchg test cmp out dec pop sarl push push dec idivb lods int3 inc adc inc cmp jp mov push xor (bad) mov and inc sbb fucom jmp mov cmp jl adc jae pop ret xchg test lahf (bad) (bad) in int3 jmp inc inc jbe xorb addr16 mov add or fcompl jns lcall xchg int3 enter mov fwait dec adc jle mov and das cld jle xchg dec enter test lret sahf xchg push jae stc es inc jecxz lods jmp pop xchg push xchg pop lods xchg fdivrl enter addr16 stos sbb pop in jle dec notb jecxz fs mov cmpsl mov xchg add cmc lods out lods fldl leave mov out (bad) jle inc mov subl inc arpl and push js in fild xchg (bad) xor push xor add gs or dec dec lea xor sbb inc jp sbb add (bad) cmpsl (bad) jbe notb scas pop pop test fistpl adc mov dec push es orb mov jle in and cmc jbe add jle loopne std dec jbe dec jle pop mov cmpl mov mov xor out xorl add (bad) das je lea adc xor sbb aaa lret xchg jle aam icebp sub inc mov cmp cmp cmp lahf or jle dec imulb lahf mov and jns jle insl or jle inc sbb outsl nop lahf fsubrl and dec rcrl pop xor fisttpl (bad) das or mov or dec je mov jl mov movsb and pusha sub das cmp and ret mov inc mov cli sub cmpsb pop mov push or dec jl js and add ss xchg sarl or push inc cli outsl adc loope orb rorl sbb sbb pop js sahf adc fisub push jbe fdivrl xchg mov stos jle xchg int pop inc lods lea cmp in fstpt jae lds jle sub lahf mov (bad) mov out repnz nop dec jb (bad) outsl fdivr mov js loope std insl or jge mov push cmpsb repnz sarb test ja xor jb cmp enter sti xor andl mov add arpl xchg dec rclb rcrl jle pop stc xor ds lds fcompl xchg sbb sub mov rcl dec mov icebp sub mov inc (bad) and add jle xor rorb or adc inc jp inc popf pop mov jle test in mov jo push fs and xchg lret push inc sbb sub xchg jle add int3 jmp push jle and sub cmp jle sub ja (bad) mov pop ret push movsl das sahf (bad) mov add incw js xchg test mov (bad) nop mov mov push pusha lea inc xor clc jae mov imul aas stos fbld push push xchg sar lods repz add xchg sbb enter lcall pop dec out dec mov fldt mov mov pop loopne push sub lret aam ds xchg cmpsl scas cmp je cmpsb outsl idivl jl popa mov mov sub add out insl mov xchg jbe (bad) sarl lods xchg add enter clc fadds mov push (bad) int ret inc adc sbbl jo loope xor (bad) jne or stos scas fld int insl movsl xor out cs add (bad) xor mov dec xchg and mov je test xlat or (bad) in push and scas pop or mov inc fs xchg cli cmp in sub add pop in lret jl xchg clc jns gs mov aam jp sbb int3 stos fstpl out in mov notl into or clc adc xor mov sbb movsl jg fcomps (bad) xor jecxz add incb or shll add mov cld repz xchg mov das stos sub popa dec (bad) idiv nop and inc sbb ror es test or lods fdivrp xor push movsl cmp push mov mov pop ret jbe icebp add lahf popl sub repz mov clc mov or std lcall cltd les jp fstpt add or mov mov mov cmp inc lods mov add mov in ret mov insb xchg pop inc pop into add mov ja or add into inc testb and xor jno lcall in mov jne mov daa cmp (bad) cmp arpl jp push das push (bad) aaa inc adc or repnz dec (bad) scas popa mov jbe push adc jnp int3 inc ds cltd inc in or push test or adc push mov add dec xor dec pushf fs push mov test stc xlat sbb pop cmp push int3 push daa (bad) sub test (bad) movsl lahf je out outsb or popa pop mov (bad) negl in fwait jp cli (bad) mov outsl jns fstps xlat (bad) int3 or push mov insl mov sub fdivrs inc insb push out xor or mov call rcrb arpl pop or ret or aam mov fcmove jb pop jns leave xor pop ja ret aas data16 mov into ja jge push sub lods nop mov aaa push mov bound xchg mov js lods xchg push jg adc and fs (bad) jp xchg in sbb jle mov imul out jg jbe pop cli jno pop test repz (bad) fcomps inc popf pop addl in jl jns enter mov out insb cmc push dec gs jle fwait mov test sub lret xor jle jp das jo les fdivr cmp (bad) add iret pop lds jns jle dec incb jnp scas (bad) xchg and dec mov movsl mov aam jb dec jne xchg cmpsb loope shrb sbb cmp mov pop cmp add (bad) lahf add add (bad) in and mov dec inc sbb jnp lods (bad) sbb ljmp test xchg int3 dec pusha test jle addr16 pop cmp mov jle mov inc sarb pop hlt push (bad) icebp lcall sub mov push lret jle mov faddl lcall mov or sub mov jp (bad) mov push es jle or stos test jle in or mov jb fmul mov mov lcall jg out mov sbb hlt mov push lds xchg nop (bad) sbb and lahf addr16 test xchg add xlat cmp mov inc xchg fcmovnbe fstpl dec pop into xor jl fbstp mov dec sahf ret dec jno and mov xchg out push mov push cmp popf sarb add mov popa fisttpll xor fisub cltd cmp inc inc push aas ret sub sbb add movb out clc das popf pop lret add xchg and out sbb std ret lea mov add sti in clc sbb inc xchg scas test iret insl mov pop xor mov pop pop (bad) cmc dec (bad) mov clc mov xchg or test je sti push in sbb lret mov mov test leave ds ja adc cmp mov pop out and int3 lds scas or jp outsl out arpl xor cmp xchg test stc fisubl stos out aas cli pop jg leave decb cld sub std push jae pop jl clc xor inc or stos pop jmp out aam negl or xchg dec jle and adc leave in gs add pop mov outsl scas testb fdivrs movsb insl subb add pop loopne cmp push mov repz pusha mov jnp xor mov ss js cmp mov cmp out sub add xor jbe sahf outsb mov out push sbb xor push mov scas mov lea or (bad) leave mov jo sub jne xchg inc add push outsl pop sbb pop clc stc mov fadds mov scas nop clc xor xchg mov mov scas xchg (bad) pop movsb mov cmp aaa xchg insl sub pop cmp cmp adc cltd into clc inc xchg test iret lods std mov mov aad adc ds fwait bound pushf push jle or sub in sbb jnp sbb leave jo clc add (bad) pop and pusha out out (bad) test mov popf pop into testb lods cmp mov mov mov mov aas push jp ficompl sub xor push in cmp jb xchg cmpl lret jle and lahf mov (bad) in jle inc fwait popa push sbb xchg inc scas jns out std jle aas push scas xor pop loopne xchg clc pushf fdivrl adc out inc or and or xor or mov or clc in jle ret sbb adc inc cmp out stos test ljmp push sbb inc rcrb (bad) jle push arpl repnz enter aam cmpsl jne sub push (bad) cli jl jle xor mov add push mov shrl js jp and jle insl sbb cmp aam lahf mov mov adc test inc xorl mov lcall ret clc jo pop or or (bad) insl pop rcl cmp repz mov (bad) outsl (bad) lret adc sahf mov xlat add pop loop fdivl add mov inc mov lock jmp (bad) cmp clc mov jg movb sahf mov jge (bad) out mov mov notb push inc push clc (bad) add dec lock mov aam sbb cmpsl inc lret jnp xor dec xor jo mov mov add shll cmp inc adc sbb xchg lods inc fidivr push jp xchg cmpsb pusha test pop xchg dec dec cmp (bad) clc xor xchg and xchg jl dec add mov jmp scas sbb fstp popa cmp int3 iret adc roll imull cwtl jle popa scas fs hlt jbe fidiv cmpsl mov jle in sub les cmp mov dec pop gs and clc xchg xchg scas dec insl das insb lcall jbe inc sbb inc enter jle mov out popa sarb add into popf les (bad) imull ret dec pop mov pop popf or dec pop cmp loop (bad) cmp or push add (bad) mov cltd xchg (bad) out (bad) mov icebp imul lcall or dec add sbb outsl and into sar inc clc cmp aam imul dec das pop mov push int ss test scas mov jle movsb out (bad) pop inc push in jle fistp dec cli pop add xor popa jle inc push or insb and jp and mov data16 jmp std lret and pop xor push stc fmull dec daa fnstenv aam fildll inc and push xor and shrb clc cmpsb sub sahf add inc in int mov or sbb push int3 enter sub loop sub sbb mov dec shl sarb or jne fcoml add sbb xor in inc sub movsb inc inc push adc mov dec add iret jle jge sbb sub rcrb jle nop cld mov dec pop bound lods cmpsl mov or xchg jle adc (bad) orl test mov cmp aaa jb test std div icebp shll pop rcrl stos loope dec gs sti xor imul pop mov jle or or shl flds cmpsl push lock stos mov js mov jp iret mov mov xchg push xchg repnz push jle arpl add inc add push xchg pop jmp fstps popa test ss cmpsb out ret aad or fmull daa cmp add push ret push xchg xor cld dec add clc mov xchg (bad) cltd push cwtl jbe adc or adc sub fdivs insl (bad) mov xchg sub aaa sbbb mov sahf mov mov lock and outsl outsb loop dec imul jns jmp sbb jp or dec sub cmp adc jb (bad) cmp or fisttpll or je push cmpsb fwait mov add add mov sbb sbb out aas popf repz adc outsl mov test push int lods cli jb into or mov sub lahf and sbb jmp xchg das mov enter fs repnz cli addr16 mov sahf lret pop test or mov push mov mov add test push pusha pop (bad) or int xor fdiv mov sarl jg (bad) loop jg mov or clc in mov popf fcomps mov add fcoms ret stos popa enter clc imul dec jecxz sub stc fstps scas xlat or clc xchg jno dec loopne fs in mov insl jmp (bad) ficomp sub rol clc (bad) or fisub ret leavew (bad) or push pushf xor xorl int daa test mov in jbe adc adcl cmpsb push rol (bad) mov dec bound wbinvd popf daa xchg inc cmpsl jp xchg bound dec sbb push fwait inc (bad) out cmp pop popf sbb or cli in sbb test movsl sbb pop cld nop rcll cli fnstsw adc popa add and movsb imul pushf sbb adc and adc cmc cmpsl mov xchg aaa in fldenv inc mov sub (bad) mov lret pop fstl out or daa int3 or cmc test xor cwtl jp adc lea sbb or add push push mov inc sahf insl xor or mov data16 test cmpsl inc sub ror jecxz jle pop jmp xor (bad) stc test mov lahf incb ret xchg or shll jbe scas clc cmp ret or push hlt push jge popa jae cmc jbe int3 jg pop cmp repz int3 ljmp mov push popf dec bound (bad) jbe pop cli out hlt outsb cli pop or testl pop xchg inc jo xor push scas pop shr sub or aad mov jl (bad) mov pop xchg mov call jl ss fldenv subb dec ja or cmp enter add xchg inc or pop sbb fidivl or pop mov sub jb dec mov push cmpsl dec mov add repz cld jge loopw sti and sbb aas in out pop inc lahf mov xchg ficompl imul ror nop xor mov inc xchg (bad) sahf lods bound das dec add cld jo subb dec clc lock ss scas xchg sarl xchg movsl mov aas xor or push sahf and push ficompl mov pushf sahf mov ret pop repz cld lods clc jge lods jge (bad) repnz dec mov xchg xchg inc lcall ss sbb pop inc inc mov adc cmpsb mov lahf mov jg inc jge mov cmp mov mov or adc ret mov je enter in cmpsl jb or fistl and test xor shll cmp (bad) push clc jno insb or sbb pop popf imul xor jne jg sahf add into jo jb insl jnp pusha ljmp repz pop addr16 lret jmp jbe hlt out push sbb jl add into sub nop mov cmp movhps xchg and aam adc add fdivl cmpl dec mov (bad) mov test aaa jno cmp cmp xlat sbb pop dec das or mov ret jle mov and jle dec call (bad) repz aam sub (bad) js push (bad) pop sbb xchg pop and in push add fdivrl test adc jle out into inc ret aad cmpl xor arpl add dec mov jo adc in or test mov sbb js js and repnz inc out dec repnz cli push xchg (bad) outsl call pop or mov jle push sbb sub dec pop dec (bad) jle popa add xor jle push push pop daa or or mov and add lcall lods cmp cmc add outsl push lea pop jle push rorb xchg mov mov stc mov popf cs mov pop push mov adc orb (bad) xor pop int3 xchg lods add sbb arpl in jbe aad insb jo dec cmp xor popl cmp sbb mov inc repz and push or ja (bad) sti pop ss jo outsb aas nop clc add es in mov daa sbb sarl mov push cmpsb or mov scas push int3 sub clc and add or (bad) gs insl ficoml mov xchg mov mov add sub into jbe aas sbb (bad) (bad) lea jl fimull add or jbe std outsb and dec jle mov xchg movsb mov jne pop cmp out jle push or push adc (bad) mov fnstsw jno scas movaps ljmp hlt lock imul lea mov rcrl out sub pop repz sbb cmp int ljmp mov (bad) mov and cmpl into aad inc xor sbb or cmovnp sub mov cmpsb ret push xchg int lds fsubrs inc scas movswl xor decl xchg lahf repz mov cmp je insb jbe push lds arpl movsl xlat push jg jo push pop fcomip je push gs lock dec pop cmpsl (bad) add jo fldcw fnstenv inc jecxz arpl dec adc xchg mov scas loopne ret xchg add pop movb loope repnz movsl xchg pusha push shrb fldl test cmp mov inc inc jle push movsl cmc (bad) fisubrl out in add jge pop pushf push xchg rorb dec and pop jle jo dec mov xor jle std loopne stos fwait inc push outsb inc pop mov push iret mov mov lcall sarl jle sbb ret push shrb jns and jp jmp enter es iret dec out out mov add jbe out repz sbb mov mov and cmp xchg mov inc jle mov aad jle movsl aam pop pop xor in cs mov cmp adc cmp inc daa sub mov push add test cmp gs push xchg xor addl mov sar in stc (bad) or or in push cmp mov jnp dec fistl push add mov (bad) cld dec inc or push es jae sbb dec jecxz inc inc mov adc xchg adc popl mov lahf jle mov add push mov fidivrl fs jl cmp pop mov push sahf test mov stos leave push jle jge pop mov sbb int xlat jns cmp xchg shlb idivl mov inc mov pop cmpl ror scas jae cltd cmp add xchg adc sbb add cmc sbb sub mov cmp adc cmp fcomps stc popa push xchg add ds xor (bad) mov pop pop xchg xlat and jbe arpl jmp ret in in add (bad) daa pop sub push push (bad) mov adc outsl push stos in and dec fsubr xor xchg scas sub pop (bad) ljmp jle add pop or jl mov or pushf jle fildll negb sbb sub xchg mov pop sbb pop inc pop cltd movsl es repz in loop cmc fisttpl int3 adc add xchg aaa ljmp mov push scas enter incb call mov cmpl andb push idivb or (bad) mov int3 leave mov pop aas add jo (bad) pop scas sub dec pop mov jg scas jmp outsb fistpl sar pop int3 and push and dec push jecxz outsb cmpsb rcl xlat lahf das push sub (bad) lock test jbe push inc inc clc jge cmpsb orl cmp mov js xor xchg mov fsubrl aaa pop cmp fstpl or cltd lret insl mov (bad) and adc test and divl inc xor bound xor mov outsb adc lret cmp repnz aam cmpb jle ret sbb mul add jle (bad) dec out jmp divps stos sbb mov fisubl inc std dec in stc adcl jp mov mov shrb out jle push xchg in mov jge into mov outsb sub push push jle (bad) pop dec in stos or mov outsl les pop mov push fistp int jg or ds jle push loope xchg test gs sbbl subl mov cmp pop jl mov adc cmp jno clc push xor sti jo pop mov push fsubl mov data16 loop mov js cmpsl sub xor xor or out xor (bad) and jecxz cmp push add mov scas jo sti jns clc jge inc pop add dec cld mov pusha xlat pop stc in call leave xchg adc pop add int3 jle xchg xor push push or pop sub cmpb mov push jl mov pop daa ret pusha out loope mov inc mov pop mov scas inc bound mov in push lds fs jl in scas cmpsb nop rcrb mov rcll jle sbb pop add sbb insl stos pushf addr16 jle mov xchg dec neg fildll scas in jns jns gs jle pop jg in sahf sarl xchg push mov scas push sub xchg std mov cld shrb xchg push add cmpsb addr16 call bound sbb mov mov cltd scas pusha punpckhdq mov add ret mov jo cmp pusha pop and mov inc out or jp clc fisubr pop stc adc ret xchg push enter out test into sub or lret fidivrl fisub fs mov lahf sbb xor fstpt sbb outsl xlat mov test add mov add jbe int cmp ret push repz iret mov roll sahf jl mov mov ret jle push stos pcmpgtw jge pop mov push (bad) mov jl dec pop jo xchg rcrl mov jle lea xchg leave mov clc inc and inc jle xchg scas roll fdivrl (bad) insb (bad) gs lock ss fsubrs xchg (bad) xchg xor es mov scas xchg cwtl xchg cmp and jle cmpsl out adc pop gs out xchg xor inc jp call lret pop insb mov jle inc xchg or jle movsb xchg push pusha loopne bnd xor sbb fistpll std cmpsb clc int ja dec mov sbb xchg mov ror lock nop cwtl mov clc int3 add xchg cli cmp jg xor mov fcmovnbe adc pop jp ficoml lods xlat add clc pop mov stc mov xchg ljmp out fwait out pushf addb cmp ljmp nop fstpl push pop faddl jb roll lds pop dec pop scas pop inc in pusha pop popf push jne loop leave lods add hlt lods sahf cmpsb ret in test mov lcall cmpsb stc neg xor clc jecxz mov mov (bad) js or into jne ret loop,pn cli jmp in xchg cltd xor sahf ret dec xor add iret cmp xchg (bad) inc outsl and sub jne xchg fdivrp xchg mov je in (bad) mov jbe cmp mov lods clc cltd loopne fildl adc cld pushf pusha out pop mov pop fwait test push dec sbb adc or cwtl jb add loop push loopne lahf clc pushf fwait les jle fsubrl mov pop sahf test out and mov (bad) cli data16 clc in mov jae mov lods dec pop arpl sub in arpl sbb dec mov pop cmp movsl and xchg add (bad) jge cmp sbb test scas xchg add lods or in mov aas xor cmp aad sahf xlat gs lahf jo add cmp xchg ljmp fadd mov cmp push (bad) in add sbbl push (bad) xchg cli (bad) sti popf jle aas sbbb inc pusha jecxz add daa xchg jle adc inc mov sbbb or xchg mov ja cmc idivl cli mov jle inc xor lods leave aaa lock fiadd jno push repz mov (bad) jo mov imull stc lds push pop cwtl or mov mov add lret in mov std test ret sbb lods dec add jmp xchg enter xchg xor fwait ret jp int scas and pushf test inc movsl add ret jl outsl mov sbb jle test fs mov and stos mov das lahf xor mov xchg dec xchg scas add in dec xchg sarb stos xchg inc in dec mov xor mov push xor push cmp sarl adc add xor xchg dec bound and add dec and push (bad) cmovle fnstsw push movsb jecxz jb fild xchg clc push insl test or fadd and lcall sahf jmp repz sahf sub lods sahf pop or jle push dec clc sub movsl jb adc sahf add test mull jge adc jmp xlat scas inc mov sahf mov mov mov or notl test lahf add xabort subl add stc lret mov and dec (bad) push gs pop dec and int in and pop rclb jge add in insb sti cli (bad) mov adc sbb mov pop out xchg nop clc xor jo rcrl out aas pop jge mov (bad) inc shufps cmpsl enter inc mov ret mov stos or lahf jne and cwtl (bad) push jge aas clc int3 jne loopne pusha sbb inc js and (bad) (bad) mov mov mov mov movsl enter sub xchg (bad) pop cmp pop mov add xor pushf mov aad stc sub les fwait je (bad) idivb pop pop mov je aad test xchg push out (bad) in enter (bad) and aaa cmp movsl out insl xchg mov cwtl lods (bad) sahf xchg add js push inc scas push ss dec mov andl xor mov ret xchg jge je mov dec cmp test (bad) imul mov cmp adc sti movsb lock xchg ljmp push outsl int std gs mov and push jge hlt lds pop mov mov repnz mov jle enter (bad) leave xor jle je ss pop stc jl out popa loopne in pop into sahf push pusha xor inc jg sbbb leave mov shll mov andl pop and jmp leave insl movsl cmc int3 mov pop xchg je xchg inc pushf repz mov xor dec inc outsl push idivb add jbe pop jb mov sahf mov jbe mov (bad) sbb test pop push pop push and jl cwtl add cmp add int loop stc (bad) mov jne movl imul pop jo mov adc xchg jge cmpsb or bound clc out adc cld pop xchg xor pop xor cwtl (bad) in inc (bad) adc dec jno mov sbb xor jle iret enter xchg dec jle jmp xorl repz fistl mov jle in jecxz add in mov xchg push sub icebp inc sbb cmp ljmp (bad) pop xor aad or jle sub (bad) jle sub push jle gs call inc lahf adc push add jg cltd cli mov cs xchg test stos js pop sti (bad) pop jle into popl fldl hlt jle in add sub cwtl jae es mov icebp push lods cmp push rolb fcomp cmp aad jle inc pushf imul fnop jmp and pop mov je adc ret sahf sub jle repnz add lea jle and fldt (bad) mov jge aad jp dec cmp addr16 pop mov and adc cs xchg cmc xchg movups jl adc inc xor outsb lret fnstenv cmp inc cltd or mov jecxz sub cmp xchg stos inc sbb movmskps add imul add jp loope and sub sbb mov ret cmp inc xor mov sub and movsb aam cmp adc adc (bad) pushf jb jle xor (bad) mov es les mov xchg or fimull dec cld inc pop pusha cmc (bad) xlat mov mov jns sahf sbb (bad) lock repz add add adc aam and and fxch repz jbe addb cld les jnp popa jnp inc jge aaa decb call ficom rol pop push dec push (bad) jl out and xchg sti add xchg jge xor adc dec into push aaa push push lret bound ja mov (bad) jle cli outsb mov and cmpsb divb imul sti gs pop mov outsl sarl lock (bad) lods lcall fnstcw jle repnz pop sbb inc scas in in stc adc jle mov inc mov and pop rorb outsl xor in gs mov inc push jle test clc push jle mov and sub mov and lea push scas jnp cmc scas pop mov lahf and (bad) loopne push ds adc inc bound dec bound cmp and jmp jo lea decl mov (bad) ja pop pop rol fwait xchg in lret or inc mov mov mov insb arpl or mov mov int3 pop inc push rolb lahf shr into push xchg mov cmpsl adc sahf and jl or out movsl test in mov mov (bad) clc enter xchg jns fwait and mov pop push rolb mov sub jmp ja cmp aaa adc cmpsl push fldt xchg xchg jl add test xchg lcall or punpckhwd mov sub xor clc push pop mov rorb and ret lret int3 push popa mov jmp int add or sub xor mov dec sbb mov das mov les cmove dec inc or ret jnp xor sti cmpsl loope stc dec xchg imul fdivrp clc mov (bad) ds add scas cmp clc rcrb aad dec or rcr ss xchg adc sbb ret xchg dec addr16 xor or mov push sbb (bad) sahf sub test unpckhps sub push and pushf stos or lret rolb xor add decb inc popa int3 jge sub outsl inc or mov xchg gs adc add les ljmp add mov or or outsb test int3 inc icebp jle,pt jb (bad) push jmp jge test mov jp push stos cmp int aaa popa mov sub in jle sub int and sahf notb xchg or mov call std adc shrb (bad) loopne push mov pop in dec fdivrs ret das (bad) aam icebp jle js or jle les xchg add jle sbb pop in out push mov push or mov mov sahf xor imul xchg sub icebp mov pusha push ds jl push data16 or cmp add imul cltd sbb jmp jp aas push jne jno dec xchg push clc pushf pop jl jg stc in pop xor mulb pop jns daa dec pop cld or jl pop inc into xchg xchg fwait aas adc pop inc dec xchg dec clc xor jl push insl je imull push rorb fstps flds dec push jecxz pusha jne mov out (bad) jnp push inc jmp jae add xor sahf or ret push (bad) adc cld mov jnp sub leave sub add popa scas or call dec mov mov and (bad) into or dec test mov xchg cwtl or xor mov cmp push cld (bad) dec pop sub and jo dec int3 xchg xchg adc sub fcomps add std roll jmp push loop das and sahf int or adc jle xor xchg movb cmp aas sbb pop fs insl js push fwait inc lahf in nop add and outsb fucomp add test out in lahf das pop into sbb lret ret fcom sahf cmp push js jecxz (bad) adc add mov stc mov mov sar xor iret aam insl push mov mov test adc aaa mov das imul jle test ret adc rcrb fsubrl sbb cli into sbb andl popf call jg mov lods imul jle aas (bad) cmp movsl data16 sub add pop pop repz loope pop pop les out divl stc jo sbb insb loope sbb pop push jle (bad) lods add add jae jle push xchg sbb jmp call fdivrp sarl sbb jge cmpsl test and cmp popf cwtl jge int3 dec pop movsb cmc dec mov in xor jl aad setno jle bound repz inc cmp test (bad) jb jmp inc xor inc jle enter call adc inc icebp push dec sti cmp es clc or pop cmpsl shll test test data16 xchg jmp out mov xchg adc out repz stc into in test sub aam pushf sti inc dec ret jne push sub mov mov and arpl rcrl add or sub and dec cmp loopne and test lock dec jle ljmp jle mov push add hlt test mov xor inc insl xchg rorl cli orl lret adc mov inc and je add inc ds pushf ljmp mov idivl adc fild mov sahf rclb mov jnp test xor lea mov stos mov adc mov test ret ljmp sbb mov mov jge popf pop ret mov dec and pop mov iret lret (bad) cmpsl and js jp mov sbb jle ljmp insb lods enter adc push inc inc mov jle fcompl jecxz adc test add mov jle xor pushf and sarb or je jle and out mov lds add xchg sub mov fnstcw ror xchg movsb dec pop das (bad) and inc jmp dec push sub dec or movsl push cmp xchg arpl xchg jl pop clc jnp stos pushf xchg lahf mov push bound in inc int aam into add inc pop in mov shrl popa and bound inc clc mov sahf (bad) cmc or sbb orl mov scas or jbe mov mov dec mov iret mov into aaa pop lret pop loopne add sub sahf jg mov jecxz adc xchg xor adc pop xchg xchg out xchg mov mov pop mov mov stos mov nop add xor dec mov jge (bad) outsl dec in ret mov xchg int3 or sbb movsb mov lods mov and repnz pop add adc ljmp pop test mov add or xchg sahf sbb jbe pop loop mov push adc jle daa pop sub in sahf jle xchg and das push test xor stc push adc inc fcoms bound push mov mov mov inc pop cmp jle xchg notl mov dec mov lods mov push pushf cltd out dec (bad) mov mov mov dec mov sub cli push pop push test scas xor jle fs mov (bad) dec push pop xchg jle aaa xor xchg jle xchg iret icebp cmpsl (bad) adc pop mov inc fisubrl test sti sbb repnz jle pusha inc call jle xchg lahf cld push dec movsb out arpl mov fisttpl xor cmp je inc push mov mov mov jno call lret ja cmp xchg push mov xchg in xchg mov add scas mov pop add and decl (bad) mov xor pop jnp push movsl cld and pusha lahf cwtl fbld and jne xchg imul mov ror jns xor into add mov inc xchg stos into push icebp (bad) xor popf pop mull daa sbb into into or dec aad pop scas and and imul pop mov or cs add inc (bad) jg imul sarb push daa push or lods adc inc jp pop mov mov ss jnp mov es pusha mov add cli xchg jne mov add jae sahf or pop push orl or xchg add frstor ret cld fiaddl adc jae or insl and call hlt lcall lods add mov out xchg imulb jo adc xchg mov imulb inc cwtl das sbb pusha add ret es dec adc jns (bad) out inc cmp mov (bad) or pop jo and xchg dec jl pop int ss dec ret call jge mov xor add or mov inc pusha das stc pop cmpb popf lcall movsl aad fildll mov (bad) sub mov enter lds pusha sbb jmp inc push (bad) xchg adc movsl lock dec (bad) test jne inc mov lret jno mov xchg adc mov adc and aad add aas xlat js leave out jle les ljmp xchg mov jle repnz test jle cli lds test pop mov mov outsl jb jle adc cmpsl mov fildll adc mov sub fdivrl jnp cmp mov daa xchg ja out sarb int cwtl ss jle jno cmp jle dec inc inc xchg pop loop jle into jns adc add inc mov jecxz xor pop push scas stc jbe test ds pushf fcoml or lcall outsl xor roll dec enter in or insl repz gs xor out mov mov cmp setno mov popa subl push or dec or scas ficompl mov lret and (bad) je cs mov inc dec imul sub push adc push adc push in pop push xchg sub jmp dec pop cltd aaa leave mov in jp or adc jae add mov mov cmp jbe fldenv (bad) jae mov divb sbb xlat jecxz xchg int3 xor jne movsb cmp add inc xor std jnp clc nop mov dec jp xor cmpl int repnz es xchg adc sbb pop sub (bad) cmp xchg or test dec cmp mov (bad) fcomip mov popf (bad) or pop std push xlat ret xchg adc cld or or mov pop jae sub mov and decb iret inc add xchg xor gs clc cmp lahf test aas mov fyl2xp1 loopne inc lods add movsl mov fsubrs loop add pop fistpll hlt adc sbb sub pop xor adc frstor into cld or push mov (bad) int3 xor int push mov js (bad) jo add add sahf clc cmp add jne add ljmp into sbb inc mov mov popa test jns inc xchg fisttpl aam lahf clc sub shrb aas pop loope cli or and bound add or xor adc jl in idivb fldcw inc outsl xchg xor in movsl pusha getsec pop jne aaa ret and xchg push cltd adc cmpsl adc adc lahf rol or in gs mov xchg in inc fs clc nop push mov xchg xlat popa mov lds mov jbe adc sub ljmp movsl (bad) mov adc lds rcrl mov cmp ret hlt adc pusha cwtl lods pop dec cmp jne mov out pusha xorb and enter and xorb push sbb push (bad) jo test in xchg clc xchg (bad) and xor jge jg sarl add cld repz (bad) clc scas insl push adc xor (bad) push jmp sub jb pop je mov clc sub (bad) loop xchg xchg xor sti cmc scas cmp or push movsl pop lods call and clc js lret aam shl iret inc pop mov cwtl jge pop cmp fdiv xchg ret sub mov push sbb dec push ret jle stc sbb (bad) jle mul out xor jle lret sub jl out pop (bad) jge insl xchg cmp cmpsb jle fbstp add loopne jle sarb jle out and push stos jbe rorl xchg push in sbb jle add push jbe rolb or jl jns mov pop mov add jg jle roll mov jle xchg and fstl shlb jle int3 pop stc pop dec ja out out mov (bad) jmp jae mov mov in cmpsl push mov inc aam cli pop in add or addr16 in lcall pop inc ljmp das pop sbb hlt dec lods clc xchg sbb scas or imul dec std movsl loopne js jns adc xchg jae,pt dec lds lea and fistl push inc xor sbb sub mov (bad) jo sbb or movsb xchg inc insl fnop jg xor mov jg iret leave es pushf or mov cmp gs ds lret icebp add add mov xchg in push test stos add ss pop (bad) sbb cmp gs sub cmp jae adc inc clc inc insb inc mov jp mov mov mov push scas sahf fcomi scas mov lds add inc mov sub popa inc jl,pn fsubrs cmp repz xchg rcl sub xchg sub loope icebp lock out loope fldcw mov int in test cmpsl repz pop xor aam mov pusha fwait xchg cs mov jb es into xor push dec jle bound pushw inc jle mov mov jle ret insl push lods xor cmp xchg adc jle stc xor outsl jle fnsave int3 and pop gs xlat push xchg dec fistp mov pop ret (bad) (bad) in data16 mov cmp mov cmpsl mov repnz mov sahf in fwait inc arpl arpl (bad) push xchg test es and pop repz mov outsb sahf ljmp lods sbb (bad) js jle pop dec mov adc inc bound jle mov jnp xchg cmp ret mov fs (bad) (bad) fidivr sub cmp xor pop daa (bad) sub mov add dec jle cmpsb arpl adcl test add mov add sbb repz loope xchg mov and int es pop or scas cmp cli dec push adc pop jne shr jle mov cli mov dec mov int3 jle inc stc pop aas pushf and test dec negb mov push and pop scas mov sbb sub (bad) push aas cmpsl push cmp pop push lret clc pop xchg ljmp inc loop jecxz dec xchg push mov stc out push push (bad) cmp jge jle xor cmpb adc (bad) mov and sub lcall cmp scas pushf sbb aaa add push test icebp out test add mov test inc dec insl sub fwait add imul mov jle mov jge js adc arpl dec mov mov (bad) out scas sub push pop stos xlat insl inc inc pop jle daa test jle lods (bad) jle or mov jle mov fwait mov mov enter clc out test lret repnz aas stc rclb push in stc fidiv add sub lods add push lods pop xchg imul call pop xchg int3 xchg jns or jle fs push icebp sahf dec lret cmp cmp xor (bad) fcomi lods les sub fwait jbe xchg inc (bad) dec imul adc movsb test imul xchg sahf addl pop jle pop (bad) fsubrp into pop and stos insb push cltd lock jle push mov fidivrl mov adc inc push or scas sbb jno arpl xlat in push mov das xor scas out adc dec jecxz jle popa ret mov mov fisubrl xor adc sbb jae ds jp add lods and jne scas inc adc pcmpeqb daa fildl (bad) pop jp inc dec xor inc sub imul pop idivb comiss cmc or hlt cmp mov ror jle out stc mov insl push das repnz cld jl and push insb idivl lahf out jp push addr16 push pop push add cwtl add jl pusha out add test orl jp rorl clc aad mov xor adc cmp jg cmpsb mov mov insb sbb or mov in jmp mov lahf sub fs pop mov rep imul cmp inc in pop das jl (bad) inc incl xchg pop stos push orl xchg or mov and and fsubl aaa mov jle out incb adc insb pushf push mov and outsl mov cmp jne call push dec mov mov xchg outsb sbbl mov mov je mov jle xchg les movsb pushf in jle pop leave cmpb lahf adc xchg (bad) jle call xchg fcomps fs ljmp pop adc push jo cmpsb pop in push imul push movsl cmpsl cld mov test cli add mov lahf in cmpl mov (bad) mov cli inc xrelease int stc or jle fldl movsb xor iret jle fldl2t adc dec add cmp mov sub pop addb dec push inc inc adc fcmovnbe or out jp or sbb scas imul xchg sarl mov pusha fdivrl jg push mov sub mov in in xor or ljmp nop add popa lcall cmp or jns (bad) fimull dec aaa dec dec add roll mov fisttp mov pop push in jge sbb inc jo js mov xlat lods pop cmp jae jp jmp cmc addr16 mov in mov pop pop dec lods sbb jmp iret mov push data16 mov es jne mov rcrb inc stos stos dec pop test lahf add (bad) sbb jle inc jmp push bnd out mov aaa jle stos fwait jb gs (bad) fimull nop mov adc (bad) scas sub jle in bound fist or stos adc dec xor xchg aaa fidiv mov daa fyl2x sarl jl push (bad) mov ds push jle dec pushf in imul call mov (bad) cmp (bad) mov mov int3 sysret jmp scas add insl or in sahf pop lcall dec add mov leave add xchg add jle ret clc push sbb pop adc inc sahf aaa xchg in (bad) sahf add repnz pop sbbb int fsubrp test xor pop pop sub jp jae in inc jle push call test inc inc inc xchg insl call ret cmpl pop dec xchg or fnstenv cld js cmc or dec sub mov sbb mov bound dec loope mov and mov rolb insb leave pop mov adc bound mov rolb sbb imul stc into shrl xlat loopne lahf std mov pop xor das jp adc mov imul or sub xchg fildl dec das push movsb adc mov xchg into inc ret and mov or xor hlt movsl dec std cmp and mov inc out dec jo ret loop in sbb leave cmpsb pushf int3 push fnstsw and popf test add sbb pusha out jecxz insb xchg mov push fsubs mov in out imul mov push (bad) dec xor lock iret int3 xchg adc xor into pusha orb dec leave ret push inc push ror pop pop jge add push jo jle fucomp outsl imul leave add or ret es mov into sbb push mov pop cmpsl cmpsb or inc in (bad) mov imul xlat mov aad and inc mov mov pop and cmpsl ffree js push jae inc and cmc xor jecxz cmp pop addb lcall (bad) or cli (bad) ss xchg xchg dec jae push pop mov dec or jecxz mov fldcw cmp imul mov test jno and movsl and cmp inc push push clc and pop jmp daa jg mov cmp insl rcrb pop pop sub cmp addl fdivrs ljmp fsubl jle xchg inc mov mov mov adc push adc xchg (bad) (bad) xor (bad) or aad insl inc rcrb imul cmpsb or sahf inc mov leave (bad) or clc iret dec push push xor jae sbbb mov lds hlt lock test (bad) fildll test sub ljmp jmp cmp jno mov jle scas or push daa mov adc adc pop testl mov push jle loop int pop jecxz outsl jno,pt push addb xor (bad) and lods clc mull jle test xchg xor xchg jmp or pop dec lcall addr16 lock iret data16 mov out mov push jp (bad) repz jle mov adc int3 test mov ret aam jns jle inc or nop inc arpl pop push sarb xchg (bad) (bad) lock jle mov stc cmp imul jo sbb push out mov add scas imul ja daa and pusha add xor mov hlt xchg inc sti dec xor cmp mov dec loopne inc lods cmpsb jb xchg (bad) hlt mov insl pop enter sub cmp inc adc cmp fwait mov jg or repz outsl cli xchg aam push add push rolb jmp add cmp add and pop cmp test scas mov bound das jb lret in push push pusha ret push out fbld jne (bad) scas mov cltd mov push shlb in test mov pushf fisttpl out jmp cmp ret sbb jle inc mov sbb jo loop cmp cwtl jle pop nop hlt rorl push mov xor mov loopne mov jle mov mov fimul jmp movsb cld adcl mov je inc ror inc std (bad) scas insb jae test outsb test cmpl outsl mov adcb mov gs jle sbb aaa jge xchg mov popl cmp mov test arpl xchg mov outsl mov dec jns dec xor (bad) or mov cmpsb aad pusha lds orl (bad) ds inc orb xor xor xor cmp mov dec notb dec cmp pop fbld lcall jg or bound jge or insl mov or sub inc mov clc bound mov test mov and mov imul mov fisubrl mov imul mov mov movsl into dec rorl arpl or dec pop popf add or adc lea stos xlat fiadd pop loop out xor (bad) int mov clc pop je push cmp pop loopne js mov test or scas fild mov inc cmpsb mov fldcw les loope clc jne add std mov jge daa loopne imul sbb jg in rol mov sbb rol push aam xor add int3 or pop (bad) cmc sbb pop js lock insb mov or mov ret clc adc push loopne pop pop movl add cmpsl leave dec mov arpl and cmc insl jae in lahf inc or fdivl xchg stc in sub cmp daa das mov lock mov fcompl lock mov je out (bad) addl dec movsb mov mov mov pmulhw (bad) push popf bound push jbe aad ret sbb roll test xchg jge pop xchg mov enter (bad) clc es in cld dec and or cmp jle xchg jne and (bad) inc or std test stc cmp jle fs push lods mov jb jb stc xorl aad dec cmp aam fistpl add test mov cld mov inc mov adc repnz jne mov mov and jnp scas (bad) lds aaa add jle lret push push (bad) dec jle in jno mov aam cmp dec imul mov fmul jle and in dec test jle stc mov or ret jae xchg outsb (bad) hlt ret ja xchg imul rclb pop and inc aaa xor pop js xchg push mov dec jle aad xchg rcrb or pop sbb pusha add sahf jmp mov mov fild scas fadd jle rol ds (bad) out cmc or into inc xchg int mov cli mov addr16 push bound xchg repnz jle dec xorl outsb pop sbb jle inc mov sti sbb xchg xchg repnz and (bad) dec cmp sub push sahf add jle mov roll pop and push stos mov and push shrb sbb adc jle sbb pop or fdivrs xor push jle (bad) in imul sbb cld cli addr16 dec outsl frstor cmp push push xchg adc js mov movsl jle sub sbb jae push jnp jle cmp xor add rep test dec mov out jl mov dec scas add movsl jmp push cmp or inc jg add adc int dec in mov imul (bad) stc rcrb lahf dec fistp lods mull insl jbe sbb ret cltd push pusha mov out pop aaa mov push push add repz repz lret inc pop (bad) aaa mov xchg push sbb jge add dec sbb leave jno sbb and mov pop jns shlb rcr cmp sbb test in loop out mov dec fildl gs mov imul and add fidivr xchg push sbb outsb nop iret clc push bound imul mov mov lahf jp inc (bad) fstpt rcl sbb mov push imul push adc jle add mov (bad) ss daa add scas xor ficompl pop sbb stc mov scas stos pop aad sbbl mov ljmp push jle sbbl push cli jo fldenv xchg mov daa and xor movsl fsubrl xchg sub cmp repnz out test stc sub es push aad xchg or push movsl in xor mov mov or cwtl or les pushf mov xchg and xchg das dec clc pop stos push pop and int mov xor and (bad) or stos dec adc cld push hlt data16 pop jg repnz pop arpl (bad) idivb jbe pop add xor inc pop and sub daa mov pop fwait cmpsb aad pusha das outsb pop and cltd mov mov jno fcomps push inc jle leave inc or xorb or mov shlb jnp icebp add cld dec pop jge and xor lcall rolb les sbb movb aaa mov adc dec (bad) xchg mov mov jge ret mov fsubrl mov adc sub push xlat fwait aas lahf inc in add xchg wbinvd bnd sub sbb mov cld ss adc iret lret pop jl outsl or aas push or add stc mov mov mov inc xor ljmp cmp sarb lret jnp or clc sti and mov sbb xchg cmp add lods add shll clc xor mov or sub fstps jecxz jns aaa push mov add dec push cmpsl cmp (bad) jmp ds inc outsl sub lods or push in imulb xor js dec jle or out mov lret mov loopne add sahf jle adc dec data16 lock xlat xchg jnp push (bad) pushf mov sbb test pop in les or cmp cltd hlt jle pop fldenv pushf cld scas sub xchg mov pop (bad) jle mov mov jle nop jge cmp loope outsl push in ljmp mov fstpl int3 jmp adcb data16 push adc fistp fcoms jp push or sbb divl in (bad) dec sub jl xchg addr16 push jae jge and sarb lcall mov mov divb pop add popa lret mov sub cmpsb dec xchg xor clc int call cmpsb or and sub adc lds test dec push clc xchg ror xor roll and fdivr mov lahf sub mov mov fstpl dec inc mov (bad) (bad) pusha mov in mov jge ret outsl addr16 loopne mov shll out sbb or (bad) ret cwtl inc es aaa lahf pop mov cwtl push mov or cwtl xorl outsl outsb (bad) in xchg leave int3 mov or jecxz sbb mov sub (bad) fiadd xor sub test sbb iret (bad) bound inc int lds dec arpl inc xor xchg jecxz push scas jg pushf pop pop push jp aaa push adc cwtl push cltd in jg xor cmp loope pop leave scas jge jnp insb add ret mov stos test lret lcall out or sbb cmpsb clc mov (bad) jmp or or or repnz loopne and clc xchg out mov loopne lea sarb movsl das fmuls fs (bad) sti cltd mov jle add xor cmp ja ret jle and jmp jge das out stos pop mov lahf cli cmc fimull fidiv and rorb jge cwtl movb sub pop jle xor cmp int mov jbe add daa hlt sahf push stc pop shrl cwtl sbb mov push xor out popf in mov sub add clc jecxz pushf xchg leave imul push mov xchg jle adc mov movsl xchg out mov aas add sbb clc jg add mov push scas push push jle push sub mov mov inc mov sub mov xor shrl scas pop mov pop js cltd es push insl fnstsw pop daa inc rcrl (bad) mov movsl subl jle fldenv faddl fidivrl push xchg out loopne inc jbe jl cmp enter imul lods mov jo add adc icebp dec subb scas (bad) jle call (bad) stc insb (bad) out xchg in jno lcall stos or or jmp mov (bad) mov jp or pop test cmpsb pop aam adc fwait cwtl add inc aad dec xchg movsl (bad) mov push pusha jns les iret jle cmp movsl mov xor stc mov xchg pop inc sub hlt hlt and push pop jle cmp lahf imul inc in int jp lea ret ss adc jmp sarb mov fcoml adc (bad) out dec mov mov test xor mov addl and inc adc mov sbbl xor (bad) ss lods sbb jns aad mov push cmpsl stos jno jp out cmp mov xchg scas arpl clc jl jle and mov and movsb pop mov adc icebp xchg outsb sbb add mov pop sbb xchg jl hlt cmp add cmc jle mov or jg jle ljmpw mov inc movsb je in dec jle pop (bad) arpl lods jbe scas and add (bad) jb add out xchg inc xchg test xor andb push scas jle stos test and mov lret mov lds inc jle cld mov idivl bound lahf aaa cmpsl jg jg mov scas xchg or ds cmpsb xchg sti pop jns dec ljmp cmp xlat dec (bad) cmp cmp mov cmpsb xor addr16 popa repnz or lahf ss sti adc inc jo dec push rorl xchg cld mov out jp mov ss gs out xchg fcompl push lods lret aad jle iret cmpsb stos mov hlt ret out inc cs sti pop fsts lea rorb lahf xor xchg add add lcall movsb popa xchg jle lret xorl adc dec into std add jl jnp cmp xchg push test jns mov fnstsw ds or dec cwtl fs sahf mov sar adc daa jle sti gs mov fadds cmp jle cwtl js call sub repz mov or arpl iret jbe mov xchg sub je adc fldl scas insl pop jne or pushw push mov movsl jns mov xchg gs xor jp in cli fucomp xchg mul sbb lahf jge dec (bad) add xchg sbb rorl cwtl cmpsb sahf add mov jo inc test (bad) lret enter push out (bad) out int pop add xor add adc inc push push insb pop or or call jg js add xchg shlb sahf or std or mov fstpt inc lods int3 out jle add jae push ret push xor jle sub cld add stos jo out or jg fidivrl aad sahf pusha jne cld testb push xchg clc mov and cltd cmpsl push insb mov push clc lods cld aad pop icebp sub inc adc loop out jge ret fadds dec xchg lahf cwtl fisubr std in and daa and test mov (bad) dec dec notl jp mov inc xchg fxch mov cmpsl jl int3 sbb lret sub jl ss jle adc lea movsb lret loop pop (bad) adc pop loopne pop jle and out fs jle xchg cmpsb aaa fnstenv iret ja in adc or inc xchg and cmc jle add add stos cmp or fwait mov mov out fdivrs mov lock or push in clc xchg into loopne dec stos pop xchg lret insl (bad) jle (bad) mov cmp jle mov cmp lock xchg imul jp bound rclb mov push aad mov test jl push cmp inc xchg dec in adc cmp in mov lea push lock rolb mov into clc dec data16 cmp cmp out out push mov jecxz rorb repz daa out mov jge add mov ss mov pop sub pusha xor ficompl add out ja pushf andl ds push scas or aas pop sbb or push push jnp cmpsl das stos xor rcr push xor xor stos inc arpl push and mov out pop push rolb test (bad) jge popf into or push mov cmp ds int sub add rcrl mov xchg fsubrl scas sti dec xor or test ja mov (bad) sbb jle jo test lret add cmp repnz cmp pop sbb jle,pt lcall mov imul jp xor pop sahf movb sbb mov stc jnp push and lock fdivp xor mov in pop pop xor xchg push jle xor jnp inc xor stos add jb push test fist pop movsl mov scas repz pop dec dec mov mov and repz cmc fcmovne inc stc ja testb dec mov (bad) cmpsb sbb in fild clc dec imul mov add stc xor test pushf push lods aaa mov aad push and andl js cmpsb (bad) into xchg lock pop shll xor jb adc lahf sub test adc mov mov gs inc adc inc mov enter mov icebp sbb int3 clc movsb push insl mov cld sub pop das repnz movsl and sahf sbb mov and mov and push mov mov inc add lock or fidivrl xor shl cmpsl jp jns xchg ds push sub pop mov xor divb aaa repz ret imul scas pop mov (bad) clc int out jge push mov xchg jle jmp imul fcmovne out cmp xchg gs aam (bad) cmp mov jp mov or xchg jo das pop jnp aaa in jle les jecxz mov outsl jp and pop adc jns lahf and jle scas fstps or sar scas std (bad) jle repnz and cwtl loopne sub out loop mov in je addb sti stc jge lcall je testb jle out adc fldenv idiv mov outsb out lret stos xlat loopew push mov sub and adc add mov ud2 std cld fadds fmull add cmp fistpll jp add cmpxchg and xor xchg inc xchg dec aas pop clc add movsl mov pop dec push dec add pusha movups rolw (bad) daa mov data16 push sub fbstp mov fstl dec popf sbb xchg pop in sbb push pop out pop js lods roll (bad) push add shlb mov fsincos pop add sbb clc cltd repz adc cmc arpl std scas or pop cld cmc mov sbb cwtl sbb arpl cli mov aaa mov xchg into popa jne test pop add or (bad) repz sbb xlat negl sub mov mov outsb adc leave mov repnz sub pop mov push xlat lret pop jmp or xchg xor scas mov sub pop sub mov ret jl jl jp sbb mov dec cli sub lahf adc xchg push mov daa mov push (bad) div or sub pushf adc adc jl xchg setae or fsubp imul cs hlt adc dec jecxz push dec mov push imul fs clc jo xchg add mov (bad) or clc pop addl ret pop push lret sub fs loop pop cwtl ret xchg bsf aad or push lret dec scas lods imul test push stc jle push arpl movsl xchg mov sbb outsl pop andb lret cli movl mov loopne pop or cmp fidivr inc xchg js xor (bad) jp cmpsb jle pop shr ret lahf xchg mov push pop enter js pop lcall cmc and jp pop bound inc (bad) cmp dec mov xor cs pop mov setl xchg jl inc mov inc dec jle jbe shrw dec hlt loop pop mov insb sub sahf fwait lods dec (bad) sbb xor iret int addb pop loopne cs xchg dec sbb jle pop inc push add jle orl andnps (bad) jle inc dec pop cwtl cmp sub mov ret (bad) or call outsb jp pop jmp test aas shrl mov mov imul jle ret rdmsr sbb mov jge mov leave push add add dec jle int addr16 setle mov xchg mov (bad) loop lods xchg rcll xchg cmpsb aas push jp xchg rep loope hlt xchg sbb cmpsb push icebp jle adc test jle inc jecxz mov int3 dec in push aaa cmp idivl adc (bad) xchg or pushl xchg psrld mov xor scas jl xor stos pop fsubs jle mov imul xor jo dec lods xchg test push enter xor cmp mov add imul (bad) xchg cs in or add push andb testl mov or dec mov add js cltd mov xor aad xchg pop inc (bad) cli push jp and jle adc data16 add jle sub push jle das pop mov dec push inc in mov lods testl loopne mov dec jle xchg or or mov pop jle mov outsl mov mov mov or xchg mov jle jb jge cmp imul test xchg pop sarl icebp (bad) nop push ljmp jle pop cmp movd movsl mov and sahf adc into jp leave mov pop lret (bad) mov or xchg xor add shll popf add pop pusha mov jnp out dec add ud2 arpl sbb lods cld lock sbb gs int dec clc pop adc into fistpll mov xor mov sahf inc add or pusha mov push mov out fistl scas pop fwait xchg gs das sub dec sbb sahf mov out mov enter or adc sarb shrb adc fcmovnu scas cmpsb push or hlt les enter popf mov sar mov inc and xor jnp jle add (bad) in movsl leave cs movq aad sub fnstenv notb and mov fildll mov xor mov scas pop je mov dec add add xlat sarl or pop mov dec pop inc aam jp dec icebp inc xchg imul mov incl dec dec ror pop inc mov pop jno (bad) popa sbb mov cli or in lahf sub jbe or mov mov pusha outsl pop mov in insl popf jns fist or insb pop mov inc adc jg pop cmp outsb and lret xchg jb ret xchg fbld scas xchg pop lea arpl lahf loop fsubrs aas mov ficomp cmp or or enter dec ja and jmp (bad) fisttp add inc mov (bad) scas push data16 xchg test mov jo ja xor pop adc xor int3 lea jo pop add orl loop lret pop test in les sub (bad) repz scas clc out mov dec push loopne cmp movsl or xor add push jle push push (bad) cli jmp scas insl das dec sub sti xor scas mov adc cld sarb stos mov jle sbb inc and repz sub test jle clc sbbl xchg xor xchg push inc jle leave or jecxz dec inc out rorb inc mov loope andl daa rorl repz jnp (bad) movsb jnp ljmp xchg pop iret insb jo inc mov movb clc cs mov sub mov jnp test out sub jns jg inc rep pop jle sbbl mov mov cmp mov or lea cmpsl sbb std aam jo sub jbe outsl or test jle xor (bad) int3 mov and pop lods sub test xor add push xor cwtl clc mov stc ss rcll xchg mov movsl je pop lcall rcl (bad) outsl inc adc xchg in pushf inc into les add pusha jnp cli mov add aaa push shl fnstcw push rcrb lock mov xchg sbbb sbb movsl inc js stos out adc loop pop (bad) cmpsl pop jnp xor movsl or and aas push test pop xor cli or mov adc or pop addr16 cld (bad) repz sub test and cmp in add in scas add and pushf adc inc mov jns adc imul std jae mov adc pop xchg push cwtl inc mov xchg add popa (bad) cli fwait or fildl or xor (bad) mov jg leave or int3 pop decb clc xor add and jp lods add push xor repz jns jl cmp roll push jecxz add xlat cmp clc pop cmp shlb leave (bad) inc out sub cltd es pop inc xchg cmc adc aad dec xor cmp add add lahf pop fs pop xchg fs cld mov inc (bad) mov mov jl,pn (bad) imul data16 stos xor sbb mov cmpl push in (bad) jo outsb adc pop lahf (bad) or mov jb or jae xor test mov (bad) cli inc push pop xchg aas insb or and and ja sbb mov addr16 sahf inc hlt nop xchg dec int and xchg push mov mov sti sbb (bad) inc mov jne xchg jle lods cmc cltd xchg aas jle repz xchg add mov mov pushf bound mov jle shlb jge int3 lods pushf stos pop and retw jo inc jle dec gs insl stc mov sbb aaa and jle push sub and das out jbe cmc sub xchg jg cs into das aas push andl xchg xchg in adc and mov movsb rcrl pop dec ret or mov add push inc fstl ds (bad) aad cld repz test xchg test adc or mov lahf test xor push xchg rcll cmp dec ss mov mov outsb daa test clc outsb lods iret scas pop inc cs inc jb clc insl insb xor fisubr or fnop repnz add insl pop sbb xchg push cmpsl inc lds mov hlt push or dec or push mov fstpt mov addb push jp push ds imul fwait ss pop outsb hlt shrb and (bad) outsb (bad) movhps add pop xchg jo pop outsb popa push loopne sub cs stos jo (bad) clc and (bad) (bad) cmp pop rcr inc jne xchg rcll mov out fild push cmpsl cli lock mull mov (bad) ja jne js rcl cld or mov jne shld xor sbb outsb and pusha out int sbb fnstsw pop mov xor push mov and xchg data16 stc or mov out adc aas jg or inc inc out add out ds add movsl cs inc mov je pop test mov out xchg xchg (bad) out cs jmp xchg mov cltd inc sub in sub sbb daa and (bad) fidivl arpl in xor divb pop dec mov and movups outsl mov adc or (bad) xchg adc push ds shrl lahf (bad) cmp int3 push fstpl push adc fist push into xchg mov xchg das jnp cltd jg jl roll mov cmp arpl rcl sub jg push sub inc aas data16 fstpl idivl pop jae or cs pop push mov dec mov push pop and cltd mov push (bad) enter cmp pop (bad) frstor orl arpl xchg mov mov out sub sub flds add call sbb cmp mov daa cmp movsl (bad) jle jne add aas stc jle mov jns inc pop mov pop sbb cmp movsb xor add (bad) enter mov popa cmp or arpl dec sti fwait ljmp cmpsl xchg lret push jle (bad) mov sub xchg pop jle push sub adc jle xchg iret inc mov cmpsb (bad) or pop jle into or jle ja adc sbbb lds cmp movsb jle jg icebp ss sub rclb fldenv jle aas enter mov cmp xor cmp mov fidivr or (bad) (bad) xchg lret and pushf in sbb xor xchg xchg or lret inc jns jle or xor cmp add dec adc pop mov out push dec js (bad) scas dec sbb popa mov movsb scas rcr std sub js push mov jle lret xor push push std or sub xchg (bad) sbb int3 mov add jle xor daa and sub (bad) into jp pop rcrl stc scas andb addr16 push (bad) pop test movsl sbb test jbe pop in pop and dec pop xchg fiaddl movsb add daa dec or add jno icebp and push push fsubl or dec dec xchg push pop jle push lcall pop pop dec cs fwait sbb xor xchg xchg (bad) push icebp jl mov dec xlat mov clc sbb or lret jle lcall jle out push add pusha sub jle stos mov dec jle xorl mov jae insl mov fmul divl scas (bad) dec lea mov sbb insb fisttpll insb push xchg jg lock dec mov cmp mov dec (bad) mov cmc gs inc adc in mov xor adc pop in jne push xchg push mov add cmp jae shl mov sbb (bad) lret mov xchg push mov rcll sub test mov ret inc push fcmovbe leave loop fisttp fcompl cmp jl jge roll xlat and cmp mov shrl mov out xor das hlt mov rolb cs dec insl push dec sbb jb add aad stos stos fwait aaa ja add aas (bad) aaa sbb cmpsl xor cmc mov mov cmp pop pop adc mov imul test xor and (bad) ret es and cli and rdtsc or dec xchg mov jle clc add rclb outsb es ds in push jbe notl jle dec std xchg push push jle mov dec pusha jg call (bad) ja xchg jle mov movsl idivl (bad) jle push xchg shlb and push jle sbb cmpsb or addr16 in scas add ljmp daa push xchg jl inc pop mov push (bad) in mov add add insl add jl mov inc sahf jno arpl lret in xchg inc out fistpll jb lcall int3 sti lahf or adc ret sbb and cmpsb or add fldenv in push mov cmpsl mov pushw cmpsl xchg jle add aaa inc scas or cwtl push cmp cwtl pusha jbe sub ds sub call or xchg nop ret jae or mov movsl xchg adc push and clc mov int fdivl leave out js js lahf mov rorb jnp mov adc xchg jae pop lret fistpll daa inc sti adc push loopne sbb jecxz cwtl dec push push mov dec leave ja mov cmpsb mov jle mov iret pop lds jle push adc mov add jle jmp inc (bad) jo jg cmp out cli sub dec jb add xchg mov bound jo pop cmp data16 or movb cmp shrl mov or pushf jo xchg cmp in jp push sbb sti pusha xlat aam mov das (bad) das xchg pop xor decb inc ja add incb and (bad) mov scas pushf je sbb mov pop and push aaa je clc je fdivl movsl das pop clc (bad) popl loop or gs cmp int3 mov (bad) dec (bad) cltd and cli lcall faddl jns pop mov aaa jge stos lcall cmp lcall mov clc lock lret dec (bad) cmp dec fcmovnu jecxz push xor mov movsb pavgw rolb push mov jecxz ljmp cmpsb or mov pop fisttpl adc stos sahf jl outsl repnz sbb movsb je add outsb and fs lret mov in jle xchg aas jle fnstsw (bad) xor sbb jle aaa out cld out pop ja mov imul xorl xchg sub mov rorb mov int3 das or mov dec mov add mov ficompl adc outsb jp ljmp sbb fidivrl jle jbe sub addr16 int3 jno clc cmp sub sbb pop jg iret jge lret repnz mov xlat jne fcoml or scas inc repz xchg imul dec sub movsb mov (bad) mov int dec jnp ja subl cmpsl xchg jae fadds mov fimull outsb movsl in xchg or mov xchg daa or xlat in xchg (bad) and cmpsl out sarl or sbb xchg and lcall and xor inc sub mov addr16 mov jl cmpsb or sar addb test pop push and ret xor pop sub xchg dec sbb popa push or ljmp xlat xchg out cmp jae gs push push jne aas cmpsb jmp mov ja je add add mov jecxz mov in les aad sbb push add mov push je adc scas or cmp (bad) movsb dec ja xor push inc mov add paddusw push xchg sahf and das xchg sbb (bad) adc xchg xor bnd xor jle jmp inc add imul xchg sbb stos pushl mov test sarl pop xchg xchg mov movd into repnz mov insb fiadd xchg pop mov jmp jle jno stc rorb (bad) jmp (bad) out mov mov (bad) jle dec loopne xor enter outsb sbb xchg adc les scas mov mov (bad) mov inc jg jl fsubrs mov jl mov rclb mov sbb fwait jecxz jmp mov mov (bad) (bad) movsb stc push xlat add xchg mov inc out not js xor pop (bad) mov push scas cwtl adc pop mov pushl xchg sbb data16 jl scas call adc cmp ret mov mov fldt ljmp (bad) and inc std aaa mov popa pop sub xchg jp or sarl stc mov into call jl aad jb mov jnp push sub cmp mov rcl scas jge bound ret movsl dec pop mov jbe setp aad negb stos movsb adc xchg xor je cli cmp lcall sbb std pushf push popf movsb (bad) shlb jle pop loope sub mov sbb lds sahf into push arpl insb jge ja mov outsl dec adc fdivrs movsl xchg mov ljmp add jo push mov ds jle mov cltd or xor adc jp sub out rcrb dec repz popa icebp jle addb pop jle dec adc push jle int3 cmp test mov add jle add stos push inc lret pop aam or inc bound jmp or lea into fnsave jle mov mov ds dec xchg xchg jo sbb mov fiadd stos (bad) jle adc and mov cmp addl mov xlat in jne in inc mov mov pop push clc inc cld fistp addr16 lahf and fisttp add insl inc push repz mov mov daa sub and adc insl and cmpb das mov mov fidiv pop adc lods pop adc and enter aam mov mov add outsl lea mov cmp sbb lds or dec cmp sub dec aad jle js imul sahf lds lods mov mov std stc adc (bad) int (bad) pop das cltd out pop clc test xor cmp or adc add out cs jl mov dec pop cmp imul imulb lods call mov push jle push js push lret in repz lret hlt loop jp (bad) jle test call js ljmp jb sub push daa sub add mov add sbb mov mov jle xchg pop fist adc fstpl and js jl out push mov mov sub jno mov sarl cli stos into mov das testb lods (bad) mov cmp into cmc fild sub jmp or arpl imul mov (bad) test inc and mov cli stc lea jl mov or mov mov stos inc outsl mov mov jmp imul psrlq dec sub pop adc repz mov mov mov inc popa ja scas pop cmp daa inc outsb addb aam xchg cld loopne dec fdivl enter inc add push or mov mov jge dec clc dec and xchg add add sub cmp sbb xchg lahf pop adc stc and lock (bad) jecxz jle xchg pushf or sbb insb sub mov push fbstp les mov inc cmpsl lods cs or imul dec mov scas imul or sarl sbb in ret hlt std call fstl sbb mov mov cmpb aaa xchg sub test pop gs (bad) (bad) pop scas daa in push or xor jp scas sbb idivb push mov mov pop cli mov aaa cmpsl mov mov sub dec mov fisttpll sbb inc clc fwait mov pop xlat pcmpgtw cmp incb fisubrl add aaa dec fild mov add and ja adc gs xchg test pop clc das cld lret mov adc fsubl adc stos mov sub data16 xlat aad pusha (bad) jae pop mov lods xchg enter dec call jo fldl jnp int3 mov adc (bad) int (bad) sub pop pushf xchg sub dec scas popf ffreep or repz shlb jl xor scas les (bad) push lea pop int xor andl iret xor or pusha jge pop mov rol (bad) clc push and shl cld cltd adc clc mov xchg movsl mov gs aaa push ss adc ja aam das (bad) jle and and sbb add (bad) inc sbb push fmull mov ss pusha mov jns ljmp cmp inc dec jb sarl jle jbe mov jle add pushf jle (bad) jnp sbb mov and jle xor cltd out mov cmp aad out mov stos dec popa std in out dec sahf sub mov cs sub bound jge das aas stc out xchg adc insb das and jb jg fdiv pop aam sub cltd push pop jge add dec sub rolb adc mov cli adc jl mov mov sbb (bad) xchg leave outsb mov (bad) cmp cltd mov idivb inc dec ret cmp push lods into pop add icebp xchg leave jg std cmpl xor or stos xchg ds sub push leave adc jae sub pop icebp popa (bad) push test movl aas shr mov cld pop fwait and mov sbbb in (bad) inc cmpsb adc testb lods leave ret (bad) cmc jle cs jo jle mov nop or push (bad) push sub mov daa out add pusha int3 pop inc and (bad) mov push sbbl call pop and or das jle sbb cmc out push jns (bad) hlt popa inc mov dec jp push ja js mov cmpsl jae loop cs (bad) (bad) cvtdq2ps insl js aam into push inc sub (bad) scas dec adc lcall rol mov js lea pop mov fwait out xor or pop lahf sub dec mov outsl cmpsb and into or and out push iret repz sarb or arpl shrb enter into outsl (bad) push jg jae (bad) pop ret iret cmp stc lock clc lods std jne mov push pusha fnop inc (bad) test icebp ret data16 jp mov push mov mov (bad) jb fs leave sbb mov cmc sbb adc dec je daa out cs xchg add ret mov jge arpl rcl loop add and data16 sbbl mov aad xchg addl popf adc pop idivl jg sbbl ret movsl (bad) in jge sar xchg sbb push mov fisubrl clc fisub mov dec shlb jne push daa outsb xor (bad) sub movsb jnp xor inc out mov xor rorb xchg xchg and stc jp mov imul push push push xchg dec cmp jle dec sub in outsl test test into mov mov adc add jne and dec jp and jp (bad) lret out jle jno adc jle dec in cwtl xchg xchg jno xorl or je in insb addl jns les jg or pusha xor lods inc cmpsl pop jle inc movsb mov lret lea in fistl insl xchg lcall xor aas stos jbe in inc xorb xchg jo scas icebp std inc dec fbld insb mov adc rcrb or or insl mov notl push (bad) cmc push sub loopne cs sbb inc les in mov insb inc push scas fcompl jo dec sbb xor lret je cmpsl mov sub sbb leave mov xchg push gs in mov jle fwait inc adc and fidivrl or in xchg dec imul add sub push into xor mov bound lcall inc ret (bad) (bad) adc and cmp cmp movsb int3 adc vunpcklps dec jp pop in jle (bad) loop jmp outsb ja pop test xchg into out sar push push pop js bound jle jmp scas cmc mov mov jle aas out iret insb sar inc push ret xor sub inc outsb out cld mov pop lret sarb jne clc pop outsb out ss out or popf mov mov inc in adc iret xsha1 cmpsb or insb pop dec loopne (bad) loope sti and jae out andl add jle out stos jmp jle jp add out mov xor cmp add jno mov out sub jle mov sbbl lds jle xchg mov jb arpl test cld pushf mov sbb test call pop jg jle cmp js xchg ficom add cmp jp pop scas ljmp pop push shrl into (bad) add jle,pt in stos jmp out out mov and adc ficomp inc inc or cltd mov imull subl clc jge in cmp push xchg adc dec push sbb es or mov mov lods push bound sahf cmp lods addb repz movsl adc pop rep lret outsb loop into add cltd push xchg mov mov mov cltd lock leave ss xchg out test sbb addr16 stc pop rcl imul mov cmpsl jl mov inc sub fisttpl pop dec fisub inc scas or pop je stos mov stos popa sbb adc mov pop dec popa insb jo cmp jne adc in and clc fiaddl addr16 jle add xchg adc jg jl sysexit int3 push or call and out mov stos das mov shrb cwtl int out jmp out stos popf xchg push adc pop dec xlat rol mov xchg mov decl mov arpl fstps jbe test sti inc lahf sbb mov aas xchg cmpsl jo push inc iret jb sahf mov stc repz aaa xchg push (bad) lahf cmp fmuls push aaa xchg pushf sarl dec sbb pop in fwait xchg test mov pop cmp push add outsb ret movsb dec jo int3 jl xchg (bad) cmp add nop (bad) hlt cmp jl lret and inc push cs push push inc sub push aad jecxz cmpsb push dec cmc and and xchg (bad) mov out outsb mov mov push int3 ficompl pop scas dec scas addr16 mov mov dec (bad) data16 out jge sarb and sbb mov popa adc add inc pop sbb push mov idiv mov sbb mov sub aaa cmpsl push int3 int push xchg clc mov jne or pop mov out testl pop mov pop (bad) lods push fwait jb clc and mov pop clc inc (bad) sbb or daa repz test test mov lahf clc cmpsb aas rcl push insl mov hlt nop or pop subb fucomip and cmp cmpsl aaa push repnz int jp rorb or mov jle cmp cmp sub sbb or mov into outsl cmc dec push fs loopne jle out lods cwtl and jle insl fcmovnu insb mov mov ret jne daa jg push xor sbb insb jge out fcmovnbe adc jns mov xor sbb cmp jle push adc adc leave adc mov repnz sbb inc jecxz insb pop insl bound cmp dec sub dec (bad) cmp bound mov scas adc addr16 leave xchg ret adc cmpl sub outsb mov xlat push lahf (bad) loop or jg push pop xlat sbb adc inc xchg leave lahf sub sti loop cmpsb cmp xor inc aas xlat enter mov lcall lret js sbb sbb xchg ret adc rclb adc xor cmpsb cltd ja mov into fwait or cmp fs addr16 dec pushf xor aas inc hlt std jo pop pop imul dec xchg aas jge arpl imul dec les lea push xchg jl outsl cmpsb lock flds pop in clc (bad) arpl jmp mov mov jnp loop fs sub sbb jo xchg clc lahf fnsave adc xor cmp roll pop jp pop jne int3 enter adc pop lahf out jne dec sub repz subl sub add jle cmp jne jo les dec dec xor cmpsb dec cmpsb repnz pop xchg (bad) ds push imul pop cmpsl xlat ds sbb clc xchg mov rorb push sbb idivl jb clc nop xchg sub sub and or mov clc iret add movsb mov std jbe shrl inc cs ja xchg push lods testb icebp sub dec adc int3 std push scas mov fldt xor xor clc mov das int sbb push jo addr16 jp ret sbbb cltd in insl aad jns int3 dec pop dec popl fldenv or adcl mov mov insl push in or xchg xor push cvtpi2ps push ret and xchg mov pop ret cltd fistp arpl jl fisttp cmp mov jb mov push cli and lods negb and aad pop xchg gs pushaw and clc pop lahf fcmovu mov notl shrb mov lahf add or incb push daa mov xor cmc leave or (bad) je flds pop clc jl dec mov cmp and je lods aas sbb push adc pop and cmpsb clc sbb adc push xor mov pop test push inc ret insb jne push clc pusha jb push xchg pop mov aaa aas ret stc pop dec sbb (bad) and xor mov add add (bad) decl pusha mov shlb adc loop sbb mov fmull adc mov clc push lret or pop or cmp out js insl pop dec aam in pop sbb (bad) icebp push mov in sub cmp add pop lods pushf jp ret std xchg mov rdmsr jo bound lock dec (bad) jecxz test lcall nop lock insl mov les and inc cmpsb xchg jo mov decl test mov (bad) jnp dec mov jle lcall jle adcl pop ja xor sbb in dec inc ror or insb (bad) jecxz clc adc negl in inc repz cmp test xchg and or mov mov jle in sub test rorl js imul pop jmp jns add test xchg mov lcall xchg stc jo or and pop fwait ljmp lds imul jge (bad) divb nop aas clc lret fidivl mov push mov subl and xorb inc jg sbb outsb cmp jl mov clc popa ss mov (bad) das stos xlat pop pusha mov into xchg mov and mov lcall sbb pusha ss jg adc add cmpsl jnp or aaa je mov xchg clc dec fimul cs (bad) add or push (bad) repnz add add xchg sbb inc outsl mov cwtl test pop cli adc dec push jge xchg (bad) adc jl call imul imul xchg xchg cmpl (bad) dec sub add jl mov mov btc inc ffree xor gs movsl cmp sbb les in xchg pop dec push mov in jnp and hlt cmpb rorl cwtl aas rolb subb cmp adc sub cli outsb xor jae jecxz repz fidivl mov mov aad jge dec xlat add mov test or inc jb adc faddp cmp or jns jl test inc and test or xlat xlat and xchg bound arpl scas dec fbstp or clc test push ss add sbb in adc push int3 insl sahf mov inc jne hlt adc xchg xchg andl arpl xchg pop int clc mov cmpsl outsl divb or addr16 jnp or and test add lret mov pop imul cli pop jno cmp ret add xchg stos inc mov cmpsb xchg cmp (bad) fs xchg push jno pop rolb pop lock pusha cli ss adcb mul or jo and xchg adc adc popf out mov cmpl jmp or popf xchg sbb stos (bad) outsb cwtl jp or push cltd addl rcr mov scas addr16 (bad) dec xor mov ret jp xchg cltd inc jle popa jo xor jl mov clc lds insl jae mov (bad) out xchg leave jbe jl jp insb hlt dec sub clc aam cmpsb popa push insb inc fadds mov gs jecxz fidivr cmp pushf lcall mov xchg jle stos jae into arpl jle adc sub cs jle or sub mov mov jmp inc (bad) adc insl mov jo mov or lods lret jle mov xor pop mov mov xchg sub inc cmc clc cmp xor inc bound dec (bad) pop and mov mov jo lret xchg pusha cmp negl imul adc dec outsl (bad) mov sahf add xchg fist test int3 mov clc test arpl add sbb inc xorb xlat sahf das fsubs mov cmpsb jge fimul sub insl mov mov mov xchg (bad) mov mov sbb out or and push lea add cmpsb not mov xor jnp in fwait mov cmp int3 jmp lods mov cmc ret add sub push push sub std pop adc mov repz cmp jl fdivrs jle sub cwtl popa in jle cmp add jle push (bad) adc and arpl push mov scas cmp cmpl insb push (bad) fildl lds jle fs cmpsb xor dec aam loop fildl jo lea sbbl repnz cmp sahf mov mov cs jge cltd in mov clc mov sbb inc jle,pt sub sub jle lea pusha lahf pop pop dec and scas out adc outsb outsb dec rorl mov cli js push add adc lea out cmp mov fs adc xchg sbb cmc sbb add aaa mov fstpl add test push out pop inc (bad) xchg mov jo fcoms std cmp or ds imull add rolb in and lock sarl adc repz mov add cmp pop sub rcl cs loopne sbb cmpsl rcrl mov push popa push pop outsb xor repnz aam inc adc movsb cltd int3 pop cmc pop sub mov mov out out in push lods out clc fs das int3 sti or ss idivl call ror push cmpsl test jnp mov in imul in leave cmp pop das xchg adc rcll and andb out and icebp add mov inc mov dec icebp sub stc xchg push imul sub aam inc test inc xchg xor and fistpll xor in dec arpl mov pop push jle ljmp sbb and scas clc xchg data16 jl lcall dec and mov xor inc push jns pusha repz push jnp into int shr mov in outsl (bad) mov push xchg dec add or pop xchg dec xchg stos xchg lahf mov sbb gs aad xchg (bad) clc add inc inc fs testb out dec (bad) jnp cmpsl scas dec or lea mov sahf (bad) clc lds mov adc push inc pop inc std call test push dec sbbb stos adcb (bad) jne lcall sbb adc aam add xor or clc dec inc mov sbb sbb or pop xchg fnstsw adc pop addps ds push movsl xor push lds add cmpsb cmp xchg and jle inc sti push jle push cmp inc aam cmpsl adc into inc xchg repnz insb jno sub mov insl ret xchg jbe rol and or or pop jg aas jl mov fistp pop fidivrl (bad) sbb test inc cmp iret stos or addl hlt xor mov xor jle into in sub mov mov and push mov and xchg dec mov clc stc adc divb faddp or add in or (bad) pop scas icebp (bad) roll fwait or xchg mov cs call xor jle stos outsb sbb adc and mov cmp pop xchg or jle dec cmp xlat xchg xchg popa or icebp ret test and frstor jle adc mov in fidivrl aaa ret cltd or sbb scas lock push std sub fdivrs lea leave or sub int sarl cmpl das test jmp cmpl inc mov cld inc test and mov cld jl add dec inc inc mov pop mov je loopne xchg pop outsb inc pop inc (bad) mov shlb push inc int3 sbb inc leave xor xchg sub clc push add lods nop fbld cltd in add inc mov mov test stos int push cmp shl fcomps mov push cmp icebp or in xor lahf outsb push iret (bad) xor ds xchg jae pop js push test (bad) and jle cmpsb mov jbe in or push cmp fstpl movsl pusha sar addr16 loop sbb fwait cmpsb xor mov inc pop subl jns mov adc std divb mov sub das fstpt rol push pop (bad) arpl inc jle mov decl push out bound mov adc pop sbb aad or out bound imul adc sbb in jle lea fldenv xchg jle call push pop jle addr16 rorl jae das fstpl jno adc fsubl push shrl mov jle scas adc jle xchg jno push pop stos inc (bad) outsl loope das jle lret shl jle (bad) push adc mov sub adc jle out jg push or nop sbb sub and dec lods lcall add mov push lahf add repnz sub jp movl (bad) testl mov sub je ret sub push xor and popf fldl cmp fwait mov push xchg cmc cmp jecxz adc clc mov sub rcll dec jno xchg sub lahf cmp outsb jmp or jle jnp out adc dec pop (bad) repnz adc scas ljmp xchg cmp dec jle movsl lcall test xchg jbe sahf fnstenv cmp dec mov sbb in sub rep jae cwtl or movsl jp xchg lret pop out (bad) jns xchg push xchg xchg dec jbe cmc xchg inc pop test mov ret clc in call das js imul push jmp cmp mov cli (bad) or fwait xlat testl cwtl fadd lcall add pop pop mov or pop (bad) fldl pop push (bad) pop rcrl sbb pop mov call (bad) push cmp lahf push push pop test call sbb pop xchg or add pop sub cmpb sbb push std std add lcall repz mov inc cwtl (bad) cli rcrl iret data16 test je shl and mov (bad) idiv cwtl insb xor int popf fisttpll sub lret sub cmpsl adc jmp sbb adc inc dec out xchg (bad) push cmp ret notb rol sub in inc pop adc iret xlat das repz hlt sub xor xor cmp std or lahf or mov leave or jbe lar cmpsl and mov inc or jnp add and fstp adc xchg stc dec in xchg nop xchg push xchg add adc mov inc ljmp xchg mov outsl ljmp lcall push cmpl nop or int out cmp fdivrl mov rcrb pop sbb shl out inc inc xchg lock cltd pop adc pcmpgtd cmc inc mov sarb rclb inc je xchg (bad) scas add mov inc sub mov roll or inc test in mov jne xor loop emms push andb movb pushf push sbb (bad) loopne and add (bad) mov jle xchg mov jl dec int3 fs ret inc jle cli add and pusha push lahf add xchg push (bad) in loopne inc dec sbb cmp test and popf out rcrb push fsubrp sbb mov xor into jp ja in push mov jg notb cwtl ret clc (bad) sbb add or data16 sbb aad cmp xchg in mov dec sti mov pop mov push aam mov pop inc daa sbb sub popa mov fcoml dec aaa jle arpl cltd jle xchg xchg xor pop sbb jno (bad) xchg scas cmpsl xchg jle pusha rcl push jge out jmp arpl in or fistpl loop cmpsl jl aas pusha mov lret xchg jl push fmuls inc jge jbe ret and dec sub push arpl out inc xlat cmp movntps cmp lds xchg jbe mov repz cmpsl scas xchg outsl pushf popw pop jl lret mov clc cmp xchg and ficompl push popa sbb mov addl jmp xor out je inc nop push pop clc sbb pop scas lcall jle inc stos xor or andb add das stos bound jle xchg mov fs ds das stos fnstcw pop jae adc loop cli sub outsb adc mov mov sti mov mov (bad) dec cmp andb jle les subl jle ljmp out bound add jmp jle adc and arpl jle fs cmp inc aas jle xor lcall add mov incb mov lea popa jle (bad) push sub sub cld xchg xchg scas or js cli push jle xchg mov int out cld sarl lret std pusha add dec (bad) mov rorl push push rorl xchg push fidivl movl lea into hlt sub xor ja add rclb dec jmp pusha test out or stc movsl jnp xchg sbb aaa dec add out fldl2e adc orl ret mov movsb push fisttp cltd or or jne in inc xlat data16 mov addr16 outsb out push push mov xor popf psubw mov les mov pop pop bound add mov scas and clc in nop or mov es test popa push fidivrl dec xbegin or leave fildll lock leave lret jle mov addr16 lods loopne mov and mov repz mov add leave inc mov sbb stc jne add push das jnp rolb scas xchg das (bad) nop ljmp mov mov stc adc push jbe lahf add push ret dec pop int shrl sbb clc cmp or enter jle lcall jecxz push addb adc std push inc aam cmp lcall and sbb cli imul push push mov (bad) jl mov push scas adc mov insb movb scas xlat cmp sub jle push dec int cmp scas inc (bad) cld lahf add and les jle fist push jle cmp or and cmp xorl sub movl jle subw scas iret and gs adc shlb mov lahf jb jne xchg cmpsb pop fild loopne jg les out or shrb scas adc movb jle jb xlat aam jle fnstenv scas in xchg push mov push dec inc enter jle mov pop inc scas imulb cs jns dec mov or call insb add xchg bound sub lods mov adc add sbb (bad) cmp outsb lock push mov fwait mov sahf dec sti cmc (bad) (bad) mov dec push in adc cli cmp mov cmpsb outsb dec mov bound add cwtl and jge,pn daa cmp jmp jp fsubr xchg sbb sbb and scas jmp das clc (bad) inc je jle inc ds jl cli jle daa out mov push dec fildll scas jbe std movsb data16 jg stos cli out and out inc mov jle ja jmp push out repz ror adc mov call push jle mov lahf es fst mov mov xlat les and popa jle jg hlt rcrb dec xchg leave idiv mov jge inc mov das sbbl and cmp aas mov xchg adc push xchg fisubr inc jle cmp inc cmp xchg stos mov xchg leave aam loop xlat add lret sbb adc jnp push sbb sub cmc jle push xchg and iret mov mov mov in jle imul jge dec xchg jle mov adc test es out mov popa add jle jno (bad) push rcpps mov or jo into jle icebp mov lds mov ret out mov mov sub sub pop fmull pop rorb and jl adc mov dec sub cld mov dec pop es jmp lods scas mov mov stos mov mov add jle xor push jmp ss test or pusha lock fisubl push jae stos pushf xchg inc cmp stos mov addb sahf and clc push enter or scas pop mov jbe push jecxz dec sahf push ss jns or sbb push push notl ss jbe pop lahf in mov aas (bad) sti or push add repz out mov cmp mov (bad) in sub cmpb negl int3 pop mov adc clc mov stos xchg jo out or out add sarl ja ret mov lods test enter movsb mov push fstl clc arpl clc xchg xor sub inc dec in push sub add aaa inc pop and inc jecxz mov insl add pop sub jmp pop xlat dec ljmp fcmovbe pop and inc lret aad addr16 int dec xchg jle inc or jae sbb mov shll pop ret jle stc sbb aam test add imul jecxz push (bad) push icebp lods scas mov or xor test jnp add idivl mov cmp mov inc inc ret jmp cltd jns shll clc cmp or outsl (bad) flds jb dec jle cmpsl xchg cmc das jle cmp rorl mov xchg out adc push mov in dec cli inc xchg insb jle mov cli outsl (bad) lea lock push push lods cmpsl fstps jle and push dec int3 pusha add int3 lds popa rol test xchg push push aad icebp or je cld xor mov (bad) fisubr or pusha sub ljmp dec in xor (bad) loop push scas (bad) mov inc cmp adc lea xor mov mov arpl mov fwait jae cld ret mov lock jmp inc aam jg movb insl adc mov repnz aas inc push inc pop push stos pop add fwait in mov inc mov dec lahf and test repz int3 xor jl pop mov xchg adc sti pop das aaa xor jbe jg jge ljmp fist jl in mov (bad) lods xchg rcll ds imul mov jnp sbb xlat add dec clc ja sbb cli (bad) pushl das clc lea sub pop cmp lea stos sub sub or xchg bound mov std dec mov or mov add xor xchg pop (bad) mov lea mov int pusha aas mov jge or mov stc cmp cmp test pop lock add imul sbb push dec in or (bad) ss xchg movsl mov loop js repz and in mov clc and mov jg sahf in push nop scas (bad) or mov shlb cltd mov add or aas mov cs xor or test imul inc fmull mov or sbb clc xchg lods dec cmc cmp pop pushf pop jg roll dec (bad) pop enter pop pop push dec cmpsl notb adc test lahf or or mov or sbb repnz add aad inc pop push push in pop and popa mov rclb outsb push add xor add and in sub lock or adc cmpsb (bad) fsubs xchg das subb mov mov in fisubr xchg jle or dec (bad) loope mov flds mov mov jnp test xchg xor add fld1 or or pop mov imul adc jmp dec test leave jp,pt or test inc lds push loope mov js jle ja pop xchg dec lods add test sbb aam loopne xchg push xor daa enter imul repz xchg outsl outsl cmpsl mov nop out mov lahf cltd gs ficomp les mov sub mov mov add jnp or ds mov (bad) out lahf ficoml mov add clc sbb rcr mov es pop aaa inc mov and push pop addr16 push notb xor nopl daa outsl sqrtps lret adcb test jnp movsl fmulp add xchg inc mov je xlat cmpsl mov xchg mov add cmp mov mov mov cmc ror clc pop mov pop push (bad) roll mov int3 adc cmp testl mov (bad) add jne add jmp es mov lods aad add mov xor or dec inc mov xchg or movsl repz clc xchg sahf jne mov fldt lods cmp fistp add jne out cmpsb int3 jbe sub int3 pop lahf out cmpsl leave mov xlat jno push std shll xchg fcoml cmc insl pusha repz cwtl jle jge mov jle ret cs pop jle jne cmp push sub scas add jg (bad) jno mov inc arpl mov add xor xchg mov (bad) xchg and int dec pushf pop dec ret lods push fwait inc jle lods fadds inc pusha jb in scas sbb mov dec test scas xchg mov pushf jmp scas int cltd cmc sub or mov cs xor cvtps2pd popa dec jg inc push xor cmp scas inc call aam and cmc ret adc mov sbb out push push push movsb and add insb scas js in test fadds cmpsl dec add jne mov test cmp es insb aam jle aaa lahf pop mov mov aam jle rorb cmc lods enter adc push adc dec lock sbb cmpb movsl mov jle xchg ds sbb ss frstor cwtl mov js lds cmp sti xchg jae dec xchg dec pop (bad) jle push ret push cmpb pop mov jle subl mov arpl das decb pop mov scas in jcxz shll jl or pop (bad) mov and dec add sbb push mov mov push rorb jg jbe mov (bad) fistpll jle mov xor sahf sub inc js pop mov arpl fwait pop xchg js jle nop add xchg jo mov mov outsw push stc (bad) xadd dec adc (bad) jle jbe mov jle or mov pop and pop lods ret add xchg inc cld push jle jo or popa jl lret dec int3 out test dec sbb jle subl jle lret sub cmp jle inc inc (bad) jmp popa mov sub adc mov sbb mov jle js loope test and mov fistp aam xchg lea arpl in stos jne inc sbb dec xchg bound rep gs bnd cltd push push mov aad mov pop scas mov and sub daa mov je outsl pusha test add pop sbb aam mov adc mov xchg push mov jle lret pop push cmc test (bad) or lds inc jle jne dec sbb sub jae jle arpl test lds mov cmp mov lods fstpt insl mov aam mov int3 arpl jp cmp sbb and repz jle movsb addr16 fwait stc sbb jle stos mov aas out mov add out dec jp jp xor jge jle xor add sub xchg mov sbb mov lock jle pop idivl in inc mov xchg frstor stos idivb cmp xchg jle mov mov or sti cmpsb sbb fld in das sub mov dec sbb test sub push ja inc popf int add add dec xor lret inc mov ret mov jle out addr16 cmp (bad) out mov pop aas pop js mov cwtl insb je and sbb outsl icebp mov jl mov jle sahf out out outsl jle pop lds insb or lock mov popa cmp cs jno data16 jb xchg push out or push lcall fisttpll fwait popa xor std cwtl imul sbb mov push jmp bsf jle xchg mov mov lds daa and adc push mov jle or or jns bswap adc or jle lahf ss xchg (bad) xchg lahf (bad) inc jle test mov or and or inc mov lahf test out adc xchg cmp out inc inc xchg lahf sbb int3 mov inc jae jns mov sub mov std push or cmp outsl mov sbb mul (bad) xor nop add scas xchg push add sahf push scas jno fnstenv (bad) aad dec add pusha or add mov rclb (bad) insl pop mov dec clc pushf mov in notl aaa repz aas es js xor lret sbb cmp out inc add (bad) jae jne test int3 mov jge dec pop ss into pop mov dec pop scas mov movd mov mov repnz add sbb inc subb cmp cs fsubs (bad) aaa dec cli jmp (bad) nop pop mov in insl mov inc sub xchg popf inc and orb stc add fisubl clc mull sub bound outsl inc adc or clc fs mull bound lret scas and es inc pop inc xor lods and (bad) jo mov jbe push inc aad xchg into adc test inc cmp aas arpl add cli cs aaa xchg je jge and fwait xor or push xchg pop ret adc jae sbb inc xchg rorl sub into jle add movsb testb shr xor jo add popa xchg add sbb stos arpl add adcb jl push das clc (bad) jmp add and xor clc dec fiadd add mov sub lcall xor or cmpsl (bad) aas stc aam movsl lds sbb arpl mov sbb popa inc dec enter lods idivl popa pop mov aas inc sbb repz roll iret mov scas (bad) lock mov xchg xchg mov clc adc push mov cmp mov and sub test push sbbb xchg in jle sub js test fidivrl mov jle jmp inc in test dec lret aam push sbb pop jbe (bad) add dec fadds jle lods inc out fbld mov mov sbb xor mov loopne js addr16 xlat mov subl or fs jle gs orb test push jle mov xor jle (bad) lods es cmpsb and mov inc jbe lcall lret mov dec aam sbb mov jle lods fisubr push jl lret sar jle cmc xchg add push jnp fcoms adc mov lret aad push mov mov xstore-rng cmpsl sarl push aas xchg mov in repz jo lea enter lods loopne dec pop cmp call pop lret mov pop xchg aaa adcl push stc cmpps jg push push jp dec mov sbb jnp outsb lcall out xor mov jp add jecxz jge cmp lea (bad) mov mov xlat mov scas ljmp dec cmpsl cmpsl mov clc aad or rorb mov icebp jle xor cwtl or scas jl es sahf stos jecxz test mov adc xchg insb test (bad) mov subl arpl cmp dec jle sarb outsl out out ret mov test fdiv mov xchg xlat adc fdivrs pop jle imul loop movsb in mov sub push arpl enter js mov inc add gs outsl sahf xor ss sbb mov push in jle rcl leave movsb arpl fildl jle (bad) stos cmp popf or xchg jbe out negl and insl mov in arpl pop xlat add shlb fidivl popf in cmp add aas inc and inc out jo sub sti sahf sub cmp std pop or pop push adc lahf (bad) hlt pop data16 (bad) idivl cwtl push out (bad) push (bad) jne push pushf insl sub mov bound cmp pop push adc mov pop loop and add push (bad) shrb jmp gs pusha fdivr stos arpl sbb push mov jecxz jle mov dec xchg ja outsl jbe aad lahf pop xor adc call (bad) push frstor outsb dec jle mov cmp adc xchg out sahf xchg out (bad) int pop jne (bad) cmp iret jle lahf rcll mov pop cmp hlt jp es jle repnz mov xchg pop mov in add mov (bad) enter sahf jg out xchg icebp scas aam dec sar xchg sub in mov lock jb inc add jle (bad) and adc addr16 scas (bad) cwtl cltd imull push xchg lret jne js adc jle es cltd cmp in scas xchg lods (bad) arpl add add xor cmp scas fxsave inc sti ret jb mov adc dec mov lret scas pop jb pop jle test dec daa jle mov fnstsw out je pop ss mov push int fs jle mov jl and scas cmp scas mov mov clc in sbb mov sub push mov int xor xchg outsl aam xor (bad) fimul jp jbe int3 mov xchg in adc adc aas cmp rcrl mov sub pop mov lods outsb imul test rorl into push mov xchg dec mov mov insl data16 stc mov hlt mov fildl popf jle imul lds inc mov xchg add push jle rorb pop sbb scas mov fwait xlat xchg push clc jns sti mov aad cli mov dec mov jmp push lret add xchg mov out cmp adc sub cmp fisttpl fdivrs xchg jmp je std sbbb sbb in xchg outsl enter adc loop dec mov jge xor jge test jle daa xchg push xor mov mov bound inc sbbb xchg lahf mov jns clc data16 mov rorb cmp lret jae loop in mov sbb out stos push out or cmp jnp xchg out incl sub outsb jmp cltd loopne jp pushf repnz add or insb aas jle mov (bad) mov rol jbe lds out xchg fildll mov jle mov mov sahf int sbb xchg lahf inc repz add test cld clc jp lret inc jo sbb mov lods mov push cmp es sub outsb aad movsl insb stos enter stc ficomp leave jecxz sbb clc (bad) dec mov fisttpll mov addb icebp jmp imul cli aad std clc loop repz js and pop mov aas out mov cmc push inc xchg mov lcall or test pop xor arpl arpl pusha daa xchg mov xorb or (bad) andl clc pop (bad) sub mov cmc ljmp ret outsb lahf jno icebp mov jae int3 adc push xchg getsec cmp inc mov cmc adc ret aad xor cmp test movb jg movsb lahf mov (bad) pop mov out cmpsl lcall icebp lahf negl mov push int sbb mov mov test (bad) imul jg fldcw xchg das (bad) ja bound mov xor sahf and cmc pop and dec dec and outsl idivl std jb pop pop les xor sub out push (bad) mov xor cmp add leave xchg stc lcall hlt fistpll dec pop push (bad) ret pop sbb les mov adc push push repz sbb dec push cmp jle cmp and mov fcoms add jle cs bound or jl aad xor cmp push lcall (bad) cmc icebp outsl jae inc or lret repnz jle jbe mov jle xchg ficoml add out jno (bad) xor mov and cmpsb (bad) nop call arpl jle cmpb fs ljmp mov jle pop jno xorl cmp and cmpl xor fs push je push stc push dec fsubrl jmp ret pushf mov or insb js or incl enter lcall mov (bad) xchg in inc insl or jecxz pop imul inc xor sub pop out in outsb or das sbb repz mov insl xor xbegin aad cmpsl add cltd pop dec sbb arpl imul add pop xchg mov pop add pop int3 pusha repz cli mov dec aaa mov push push aaa insl loopne fisttpll cmpb mov pop ret shlb sub in insb out jns hlt xchg sbb into adc cmpsl cmp xchg jne into (bad) fnop dec pop mov and ror inc ret pop cli pop fiaddl clc sbb inc push xor jb cli fucomip fiaddl mov xorb xchg shll ds xchg pop (bad) insl xchg scas aad push and test faddl dec jmp dec cmpb jne aad ds jle fcompl aaa cmpl loope bound xchg sub jle mov fmull xor jnp pusha scas cmp pop stc sbb jle cmpsl pop mov pop mov out loopne push add jle repnz addr16 scas (bad) sbb scas ljmp pop addl xor mov cmp int inc pop pop or sub bound cmp mov in popf in outsl jae sti mov adc xor and ret fdivl into and bound ss test ret or xchg jno lret add test fsts cld data16 cmpl frstor mov in loopne and test jecxz test jns and in mov or aas sahf addl mov lret pop cmp dec pop sahf pop inc pusha pop cmp push pop aad lea sub lret or shrl gs inc sti mov fwait in lahf push sbb jl and push mov or addb pop mov add arpl into int ds loope dec sbb inc insl sbb or jl repnz call adc cmc sbb fmull pop cmp xchg iret sub andb (bad) loope mov jge,pn mov mov xchg test xor mov fadd fisubrl in out enter clc and jp fistpll sbb lock lret sub jle xlat xchg (bad) jbe cwtl jle push xchg aas sbb xor outsb je sbb jle mov push dec data16 (bad) mov loop fmuls cmpl rcr jle dec cwtl adc pop jle mov clc stc pop mov jb mov sub jbe jle cwtl xor bound mov add xor pop mov call jle fcomps daa scas aam sbb or sti or push dec or cmp sbb nop fmuls xor ds in push das repz test dec scas nop mov clc mov dec push leave push (bad) xor pop mov fisubl xor hlt (bad) jle push lahf cmp and inc jns add mov mov ficomp rcrl mov mov (bad) std test shrb subl fnsave xor jb mov ja cmpsb mov mov std shrb stos push mov fisttpll (bad) pop outsl mov cmp dec repz inc xchg movl int3 mov das or (bad) aas rcrb insl idivb adc cli call mov add hlt insb push adc fxtract push std mov je cmpsl es cmpl clc inc inc jp lea jge pop je lret push inc int3 es jae ss aam xor mov cld mov aas dec add mov daa jl mov or adc sbb ret outsb out and cmp mov pop cmpsb les iret add ret xchg outsl gs cmp and xchg jle or call push jl inc jle loope aas mov pop into cmp push adc fild (bad) xor cmp out xchg jecxz gs and inc jle mov xlat xchg jb outsl add ja jo sub mov dec movhps jle pusha sbb aaa jge jne hlt mov jge lods ds push jle popf and mov loopne pop je std das jl and mov xchg or xlat es cmp xor aaa push or sub ret stc mov adc maskmovq notl push das (bad) sbb xchg add pop xchg sar das lds cmpsb mov aad repz ss fisttpll lahf pusha mov push mov adc or pop test sub lret xchg test lock xor inc sub popa jno mov mov jle fldenv cmp sbb xchg test jb jg scas mov xchg jge mov dec add jle lock jae enter dec loope mov in out jne mov stc jp jle push or mov jle dec jecxz imulb sbb loop and fsts int sub xchg jle shl mov and pop jg hlt cmc cli clc cmc push jle cs push adc sbb lea add decb (bad) mov popa test jle mov in iret or push or inc mov push dec push in sub lcall and pop jle jns cltd in sahf scas jle xchg sbb push push cmc jle cmp shlb loope pop adc iret fs or jle xor leave jo and push jg adc jge sahf jle sbb sub int3 inc (bad) jbe xlat call notb jge testl clc orl sbb push sub push mov jg xchg and clc push xchg pop pop push sarb add xchg lahf xchg ljmp out mov int dec bswap (bad) dec ds mov int3 mov sub inc mov or jno sbb sbb xlat sbbl frstor mov add push push mov ret jmp jl jmp outsb (bad) jl add adc xor adc cmpl out mov cmp lahf adc jle out or scas repnz xor call cld cwtl and mov add push cmpsl xlat and fdivrl mov or pusha (bad) dec xchg pop jae fldl push notl mov andl lds (bad) fisttpl pusha xchg sub scas xchg in mov fwait (bad) sarb lcall push ret arpl loop,pn pusha mov dec xor sbb xchg lds popa fwait cmpsl outsb push aaa lret lcall mov ret jmp sahf or rcll jp inc sar adc bound ret pop pop scas pop loopne sbb fiadd mov push mov ret add lods into jg mov cmpsl mov mov xchg mov fimul test pop mov out sub xor jle jmp jp jle mov sub xchg out jle pop mov outsl lock push out or cwtl inc push jle mov and push push bound add repnz mov inc and test icebp cmp mov add xchg dec cmp adc out mov jecxz clc sahf fidivr ds cmp cs fisubrl jle es cwtl xchg xor addl and loope insl jp jns shr jle sbb jecxz lds gs into xchg into xor test arpl aam cmc and hlt sub decl inc cwtl imul sarb pop loopne cltd leave lret sahf mov lock ljmp sbbl bndldx insb (bad) addr16 mul sub jecxz nop mov pop das std sbb push xchg imul mov sbb jmp (bad) idivb pop test stc cmp cli mov into or lea and cmp xchg cli and jne decb sbb andb mov outsl jl sbb mov movsb sub mov test into pop xor mov imulb push push inc push mov into or mov ret add daa test movsl adc aas stc xorb test out shll push push mov int3 rclb jbe pushf aas pop dec jle xor dec mov push jge fucomp push subl std xlat sub clc stc movsl jo mov add mov aaa fldenv lea cmp pop mov cmp test int or arpl scas push call arpl out push lds clc jnp arpl xor pop push (bad) (bad) movsl mov jecxz lcall into jmp arpl or dec inc pop sahf add pusha test and lcall adc cmpsl (bad) fadd fbld sub ja push jl cmp jno adc mov push out pop add add sbb cmpb mov inc repz mov aas outsl inc inc cld subl or imull and mov ss xor popa scas push xchg fmuls pop inc fimul es xchg or (bad) xor mov mov jg push mov adc xchg arpl cwtl add test jp mov mov sahf sarb push (bad) sbb loop or and pop dec dec xchg je jp out jl add xor lods or xchg outsl jns sbb jge cmp mov clc jle dec das mov ret xor cld stc aas test pswapd aam cmc aaa inc orl dec jle dec mov aad push mov xor (bad) mov inc xchg jle mov xor clc mov (bad) xor (bad) mov mov ror mov adc mov inc pop mov sub push cs mov fsubrl mov cmpsb add push jo idivb or (bad) dec fidivr into jmp push pop cli cmc lods insb push dec xor jg inc int3 mov lcall xor sub lret lret call push inc xchg jae ss mov (bad) mov cmpsb xor inc pop mov in into clc into jns out xor xor mov aas lret daa (bad) not fnstsw call xchg xlat popf (bad) cld adc mov adc (bad) aaa enter add aas insl stos xchg and adcl test jge out stc sub rorl sbb int3 jae js inc lock inc mov mov or push rep mov out sti xchg jl andps lahf loop sub daa test outsb add mov mov lret cmp and ss jb div dec fnop xchg pop jns mov rcrb dec xchg and subl test push jle repz std iret rcrb jle in or inc sahf sub daa xchg dec (bad) mov pop and cmp fldenv or dec mov xor dec in stc loope jl enter jle jns or jo jle scas out hlt int3 stos mov add jle (bad) (bad) fnstenv xor fsubs dec icebp push addr16 and not arpl inc or pop cli ret andb mov test pop jle clc mov sbb pop mov pop (bad) xchg subl sbb imul clc fiaddl in mov inc mov aam inc (bad) jmp xchg in popa xlat in lods in leave ficomp cmp push test pop pop push roll imulb adc aam movsb adc mov ret int repz add aaa push cmp mov popa clc test or lcall popf mov jo mov cmp jne mov insl push xorl mov sbb fisttpll adcl inc popa clc push inc or and adc or cmpsl imul in clc (bad) and ds push mov fstp (bad) xlat lret push inc out mov or inc push dec jp inc test adc or getsec mov and pushf in add mov adc out inc addb je idiv mov in add jecxz fidivl leave dec inc mov test xor (bad) push sti scas push arpl movsb xlat aad or ror xor (bad) pop add (bad) lahf mov (bad) sub repnz mov pop out inc or jnp popf gs in xchg xor jae insb int3 pop cmpsb sbb adc and jo cmp fs or int fnop cmp dec push mov xchg jne add aaa mov scas pop orl clc sbb ds jb mov jbe lods push push std (bad) pop les pop rcrl push or sbbb add jb mov mov cld push fbld aad push inc or nop mov mov pop mov sbb mov or or movsl pop addl sti cmp rcrb push sbb int3 clc ds scas add cmp das cwtl jbe loop jo inc cmc movsl (bad) push ret inc pop les shll jl sbb jge (bad) outsl cmpsl adc shll jg icebp cmp rorb or loop fbstp int3 pop in jne and data16 mov cld jle add adc mov fcos pop sarl xor sbb (bad) das fistpll out test cmp and add loope sbb in mov rorb insl je push leave push mov pusha arpl fsubrl lsl pop pop clc xor nop mov mov icebp call pop inc and outsl dec push roll sub dec xchg sarl xorl das shrl mov sub pop sbb jg pop mov cmp mov dec int3 jle pusha lea pushf lret mov jle xor cmp xchg mov add jle sti stc inc xchg adc addr16 push pop inc or sub inc sbb mov (bad) cld scas loop push pushf in aaa add mov jo jnp lret paddd (bad) mov dec fidivrl lds mul aad jle or in test jle decb lret ja jle inc leave outsb pop ret stos xor clc les xchg mov inc jnp stos jmp jle mov imul sbb push in push movd out jno jle mov jl jb or or inc mov mov push (bad) jbe outsl lds dec mov (bad) mov (bad) fistpll pusha pop pop mov and inc stos out (bad) mov jle imull incl mov mov addr16 jge (bad) jmp mov jle inc fnsave sahf inc stc sarl loope jp adc dec jle mov es clc adc leave mov dec or icebp fidivr push xlat dec inc ret mov dec pushf sbb divl jle ljmp jle adc out lods jle jns int pop sbb pop push nop push xor pop mov les and cmpsb (bad) push push dec jns scas or jp aad sbb idivb test adcb sub jle roll fcoml nop inc fucomip jle test sbb xchg mov in or aas lret ret and arpl xchg push pushf mov outsl loope (bad) sahf xchg push mov xor xchg aam adc insl mov mov mov jno push adc jge sub and mov jle push (bad) stc jmp or add repnz fdivrl and (bad) jle xor aam jg aas jle fimul int3 jl jmp cmp jb addr16 jne jle jmp sbb js jle mov mov add outsl pop adc mov mov mov jecxz mov jl xchg loopne cli add jle paddusb js test xor xchg cld lcall movsb mov pop outsb jle test xor cmpsb mov into test pop pushf inc jle cmp sub out rcrl lods lea mov mov add test in sbbb ret ja aam add mov xor (bad) inc loopne lahf les jle divl jmp div dec imul mov inc lods push (bad) sbb addr16 loope mov cmc nop dec call inc fmul pop arpl mov xchg adc jge insb imul pop jp scas mov lods add xchg pop jl add jmp cmp dec or fild stc into out jle mov ret mov sub jmp scas pop and sti ss push mov mov mov imul cmp iret jp mov dec add jle hlt xchg (bad) leave in ficomp (bad) mov (bad) push ss dec cmc sub outsb jp jle xor mov test lret (bad) dec jg jle movb out fcoml cmpsb dec jmp (bad) push jp jbe loope jecxz sahf cmpsb pop stos movsb pop xchg aam and dec mov sub mov inc jno pop loopne vmwrite aaa mov sub movq clc push hlt fcmovnu jb (bad) jp je and das mov add pushf gs xchg daa add bndldx push sub inc leave ret push jae aaa pop push daa mov mov sbb out orl xlat or sar (bad) aaa cmpsl popf jae stos dec sub or and inc stc sbb test push push mov xchg test or (bad) idivb rorl xrelease push fcompp lcall (bad) mov je insb xchg mov mov push pop popa jl inc xlat ljmp pushf addl adc inc test jnp int3 jl fcmovbe cltd or sbb lcall xor idivb jle hlt (bad) movsl push push pop fldl or mov jle fisubrl loop iret xchg push jle push into lcall addl mov outsb mov and xchg push or push lock cwtl jb jle inc (bad) mov push adc jp frstor cmpsl adc movsb ds cmpl stc jns mov dec mov je ficomp test cwtl lock insb fs aaa or mov cmp (bad) cs and bound ret cmp lret jg popf dec sbb add inc pop cli ss ret jbe add loop and sub xchg (bad) dec jle hlt aad in mov push or mov jle int3 adc rcrb jo cs popf jnp jle mov into and mov mov js test jo jle mov pop jne mov inc jle xor cld xchg push add (bad) jl scas xor int push arpl fwait xchg add inc adc jle popa fstp cmp jae nop jle enter mov inc jle adc loopne cs cmp dec mov pop pmulhw sahf and mov lcall and sahf jo mov insb and rcll cli js dec rcll cmp loop aad decb fwait aam (bad) sbb cmp dec (bad) decb mov movsb in in (bad) imul rcrl mov js adc mov xor pop cwtl (bad) mov minps jp mov inc inc cmp jne js dec popa addr16 mov mov test std push pop jg ret cmp out mov cmp inc mov leave xlat aaa rcr out adcb insl mov in pop dec aad divb mov sub pop mov xor jle sti sub jl mov jle add cmp xor pusha loope ret pop mov (bad) outsl test dec push idivb mov xchg push jle pop ficomp mov stc lret jle in lcall and jle leave jmp cmp cltd (bad) into mov out idivl test lods xlat fnsave sbb fs add in xchg cltd lret scas sub out in jb add and add mov add add gs mov mov fdivr cmpsb xor outsb mov in into stc hlt int cli add adc clc sbb xchg out mov (bad) xchg or jp push stc clc gs mov fstpt or mov outsl in fs xlat jecxz mov repnz pop xor sub sub pusha inc sti out clc lahf sbbb mov push dec or mov sub negb push movsb pop xor lret or xor ja and xor push push add int3 inc sub push add out aam imul flds cli cmpsb daa xorl push cltd clc sbb (bad) pop mov (bad) sub jle xchg sub and sbb jle out int3 mov (bad) jmp adc mov (bad) mov xchg cli dec dec sbb xorl mov sarl pop pushf mov push inc xchg lods fsubs dec mov jp adc pop and imul rorb jle fistl mov outsl jnp shl in cmp test es push fsubrp fwait lret xchg sub mov aaa cmp jle or xchg push movsl fisttp lods mov jp sub das sub js jno jns leave pop shr stos mov push stos add js sti adc xchg addr16 mov xchg rcrl fcomi (bad) jo imul pop inc inc cmc fistpll sbb shrb incb out cli addr16 xchg pop add int3 cmp and sbb enter push add inc xlat into pop fisttpl rcrl jns scas push movsb cmpsb aaa scas sahf clc fwait adc fcmovu aad cli push or push cmpsb push repz ret outsb (bad) mov mov dec or outsb jl push and ljmp movsl inc xor mov into (bad) lock push enter aas popf mov mov dec sub das jb inc int3 inc sbb scas aad sbb cld mov into imul popf pop mov jle or out adc outsb xchg sub cmp std mov jne ds jle push rcr (bad) xor mov xor sti int3 lcall into rep jle fnop cmc and pop aam xchg pop and (bad) stos mov daa lahf pop loopne pop xchg push rcrl jle popa (bad) lcall scas cld pop or test xor cmpsb cmp mov mov in or fs (bad) (bad) xchg mov loopne lds adc movsl sti in lahf or mov je call inc mov mov in std sti inc jle in insb push movsl divb sub iret js jge pop jmp xchg pop fmuls jle mov xor fistpll imul cmpb js mov pop mov scas sbb inc xchg xor mov loope sarl jle push or ds mov test into cmp or sbb scas lret push outsb scas stc cltd push hlt pop pop jp jle loopne dec mov cmpsl add sub mov rolb insl or and das loop nop jno sbb icebp (bad) cmp cwtl jns shrl lret adc push ret aad xor pushf (bad) mov int3 leave ret fsubrl xchg xchg xor dec add inc push into sbb mov rolb test xchg and fwait gs shl fistpl xor jl mov push aas xlat adc incb mov dec clc xchg into mov jecxz sahf lahf add xchg mov xchg test mov stc jl adcl sbb std lds mov dec out stc jp mov jl,pn mov adc or pop adc jmp movb jl,pn (bad) (bad) lods xor mov ret shll add cmp xchg je mov pop cs subb sbb fstl ret adc xchg add out clc jno push sbb lea addb scas xchg push cmp jns ss stc movsb pusha leave clc lret std movl mov daa test incb je mov sbb or jle cmp push adc xchg mov sbb pop loop jp lds inc jp sti cmp test mov mov popa (bad) mov xor mov insb add cmp mov scas imul adc xchg mov int3 mov data16 not gs jmp stc std shr stos xchg adc mov fistpl mov movsl push lock fwait jle lret rcr test xchg inc jle pushf or push jle sbb pminub leave and femms inc pop sti mov adc insl mov xchg (bad) lods inc mov jbe ret mov jns add mov dec mov cmp lds add clc hlt jno pshufw es scas and call fdivrp or pop mov cltd inc push sbb pop lods mov and insb xor adc xchg fistpl leave das jp movsb test fwait es inc push lret fisttp cwtl mov enter dec popa fild das cld addl push mov pop jbe jae pop in fadds or push inc sbb push ret (bad) lock (bad) in repz pop ret or mov outsb pusha cmp (bad) jle (bad) cmpsb mov out rdmsr cmp sbb sbb xchg (bad) mov mov in stos mov test xchg adc cmp push scas jmp aas dec test rolb xlat test adc push push inc ficom jle xchg int cmp dec adc dec mov fdivrs pop pop cmpsl pushf cmp jae (bad) push stc movsb and jle sub xchg xchg shld stos push ret cmc sub inc jns inc loopne xchg leave in jbe inc pop movsl push xlat jle mov push mov cltd pop popa scas (bad) inc jl lods cmpsl cmp jecxz cwtl xchg mov xchg jb sti fild mov mov adc jecxz jne jg jo std cmpsl add sti or nop cmp in jge stc adc xchg sti arpl xor movhps (bad) sbb incl push xchg insl dec or sbb movsb jb pop ficom sub (bad) (bad) mov fdivrl jae or add enter jle mov xchg mov int cmp ds and push dec jle sbb mov push cltd jle or jle,pn enter jmp or aaa mov test cmp ljmp out jnp,pt jg inc push or add cmc pop lahf jns jle pop cltd inc in (bad) in jle dec xchg lea jg scas cltd aad movmskps je lods jle push cli adc popf lcall mov fdivrp clc add jle dec push scas lret and cmp cs js xor jle jne icebp addr16 jle inc cwtl sbb jns mov rcrb xchg jle or cltd xchg sub in out adc gs jge test lods xchg std fisubr aaa scas icebp mov (bad) mov xor add js pop lods xor int mov mov (bad) into and xor push fnstsw add dec out jle mov scas mov cmp add les cli sti cmc dec jle test dec xchg jle dec cmpsb out enter imul orl sahf out (bad) jmp aaa push mov into mov in or jmp jno scas dec mov mov movsl inc add xchg push mov movl and inc jge lret cmc lret leave or test icebp mov loope adc sub ss mov arpl rcrl push insl mov mov pop sti scas push pusha stos mov idivl roll dec push clc lea add fwait mov jle (bad) movsl inc and adc lret movsb std dec sub out cmpsb xor jg addl xchg out dec mov mov mov adc insb aas sbb jle push (bad) stos (bad) mov xchg mov xchg lahf sub rcll xchg outsl sti in xchg fidivr jne pop inc test cmp xchg dec adc mov mov gs lahf imul in jp mov div dec lcall pop cmp xchg data16 jle movsl xchg out fildll dec insb inc movsb xchg push jle add mov dec xchg pusha mov jle push xor js push ja pop fcmovb (bad) clc dec outsb cmp xor push cmc aad jl sarl cs lds adc xchg jae rorl leave negb sub jle fidivr and push out jl idiv xor push and das dec push mov jle xlat jmp mov out jp movsl dec cmc inc jle (bad) or jns int jle jmp outsl pop out aam push aaa pop pop dec add cmp jecxz pop mov iret repnz jns jg pop add push movl mov ss scas shr xchg jo clc sbb out sbb in jle lret pop and sbb pop dec lods faddl add push cltd clc cmp ljmp inc stc adc push sbb inc cmp lret out dec dec sub (bad) xchg inc lcall adc bound mov inc sbb sbbl jo mov or jle test dec insb mov lcall cwtl mov mov (bad) jle add bound add divl jnp popa sub push gs movsb pusha jle cmp jle mov jns jle pop aas rcl lcall (bad) mov mov sub test xor dec bound or pusha aaa mov aas push jne add std mov adc insl clc int sbb cmp lahf jecxz mov mov fiaddl xor aaa repz movsb andb repz or (bad) xor push and pop jl fscale clc (bad) iret add stc (bad) cmpsl pop pop in and movsl jb sbbb push xor sbb xchg aam fistl out pop dec enter rorb adc test ds (bad) int xchg jne fwait and jle or xor lds push je movsl ficomp inc iret rorl mov insl mov xlat and das shlb jo pop sub adc popf test add out push sub shlb jl pop cld or mov leave add jl stc test mov jg fmuls dec pusha sub call push add lahf mov repz sub xor in or shrl rolb int3 inc shrl jo xor xlat aas outsl cmp popf movsl ljmp xchg mov xchg les push dec int3 (bad) xchg mov (bad) loopne add cwtl xchg sti int mov andl adc mov xorb shrl cwtl xchg add ret (bad) jae into jo (bad) dec in hlt pop xchg push inc leave push out cmpsb stos push sbb ret xor ret push in xor add xchg or jbe fild das cld push cmpsl rcrl dec ds insl shlb decb sub pop (bad) ret sub frstor stc leave cmp adc aaa rorb sub notl repz fistpl inc mov data16 or ret sahf push sti inc ds xor mov xor repz jle popf (bad) mov jle dec out mov pop fsubrl mov pop jle sbb movsl mov scas push mov xchg add mov inc jle push xchg decl push cmp fistl iret jmp enter jo add jle loop repnz cld mov lea push or xchg xchg xor cmpsb jno add push xor ret std pop or xchg dec cli test mov jmp jmp sbb cmp cmpsb lods scas mov mov jo clc int3 cmpsl pop jae cmp out cmp cmp xor sbb mov or fnstenv mov or stos shll out das push xor sbb aas xor decl lock xor (bad) dec add (bad) test mov aas lahf repz cmp test xor scas sub mov cld setns push mov outsl mov xchg add (bad) jo outsl enter mov lret test aas push jle stos into inc inc or pop jle mov sub jle divl mov cmp mov or push jle test xchg mov call jle sar or (bad) mov mov push dec push inc mov jle jno inc mov (bad) jle push push dec popf lret jle xorl (bad) lahf stos sbb push mov mov ds mov aas daa loope jae add adc lcall push addl repz ds push pop jbe mov insb (bad) sub clc subl arpl ds pop mov sbb mov punpckhdq and and mov xchg int mov adc in xchg addl in xchg jo jnp jecxz mov popa xchg dec fcomps icebp int3 roll fs (bad) pushf push inc lret or xchg mov cmp jmp xchg (bad) mov xor lret lds sarb jo imul adc dec in dec out lods int3 ss scas cmp mov roll (bad) aaa xor sbb outsl das popf aas xchg adc sub mov aaa push in lret push outsl aas and xchg aaa imul lock sbb test add enter or scas aam jb mov int3 in std sarl fnstsw ret or or insl sti fbld and lea gs cmp int3 test sub clc push cli add pusha mov mov or add sub subb iret test ret inc jp aas push cmp mov aad push push fisttpl movsl jl (bad) ffree (bad) movsb pop aad xor add cmp (bad) push cmp inc in test ja das imull fwait mov insl push scas and lret dec ret scas push fstpl pop sub xchg stos outsl mov push ljmp jmp ss scas nop ss or sub cld jle stos add fiadd mov gs cmpsl incb scas sti mov out loope shlb pop lds push pop ss rcll jp out shl or ret idiv pop clc test ljmp sub push pop es mov cli sbb cmp lods inc gs xchg jbe (bad) push sub mov dec mov mov roll call xor mov push xchg or inc jl inc (bad) (bad) jb lahf push loop inc fmuls cmp or ret jbe in fwait rcr imul mov fwait mov cmp inc sahf je stos stc push (bad) add jge push cmp cmpsb (bad) inc lock pop mov mov dec add or jmp stos dec jecxz inc and mov dec sahf xor popa xlat (bad) xor repz sti push cltd xor or xchg negb rcr les insb add int3 jl lret xor or or fiadd and adc push jecxz fwait test lcall stc adc ret jl lahf clc push xchg xlat fadds in jmp fwait cwtl inc xor fstpl in xor cmpsb xchg add ja cli stos fsubrs pop repz scas subl and bound push adc add aas aaa (bad) stc inc (bad) div jbe cwtl pop jmp jb aaa dec adc addr16 jne lods xchg inc in inc popf mov outsl ja cmp clc jg mov pop pushl lods das roll jmp aas (bad) cmp xor pop into test in mov ja lods sbb fidivrl sub pushf jne insl scas mov enter pcmpeqd mov scas or aaa sbb ljmp add ret adc dec rcll push fistpll (bad) sbb and cmp lret fistpll nop sub pop xor mov and dec inc inc xchg pop mov clc cmpl (bad) jo pushf inc xchg ja mov sar iret fnsave insl pop push xor fldl jmp inc (bad) pop inc movl jnp cmc mov mov rcrb sub repz mov lea cmp outsb inc mov (bad) jp imul sar sub out leavew out or insb nop pop cmpsb cmp cmp adc and xchg iret (bad) stc push pop outsb pop pusha (bad) repnz dec sub pop add and jne sbb jle (bad) dec (bad) jns int3 jne pop push cmp dec mov out jle add mov jle add out push stc push in jle jo sbb in stos inc push imul mov lds jle outsl cmp imul push xchg ja inc or push cmp xchg int3 xor in adc pusha jle sub push adc jne xchg jbe sbb mov mov das lods faddl std add sarb lea pop ret fdivrl mov and andl xor jle pop sbb jne cmp jle jmp xor cmp sub inc loope xchg xor decl jle mov repnz jle lods pop add mov mov mov mov dec rcrb (bad) fisttp pop mov mov xchg add cmp push sub pop int3 push testb cmp inc jle adc ja jl and jne push sbb xchg out sbb mov mov add int (bad) inc and xchg inc (bad) lock jle push js leave loopne cmp out nop je fs pop ja dec aas mov jmp jle call out jle mov movl scas cwtl or add sbb test fwait inc mov jle add mov mov pushf jle out stos xchg leave and jle cltd xchg sti js int adc cwtl cmp repz adc inc js,pn int3 jle stos das pop out std and fisttpll test pop lahf jle (bad) jge jb jle bound stc adc xchg push clc call pop gs int fwait push jle or adc insb sahf sbb adcb cli or pop int jmp lcall aaa xchg add dec insb js mov and jns ret outsl xchg add or push fs (bad) jno cmpsl jle cld pop xchg pop jle xchg mov fs icebp push jl dec push std and push mov lahf popa test pop and imul mov xchg cmpsl cld mov add ss pop repz lds movsb pusha pusha push (bad) enter (bad) or hlt mov push pusha popf jae xchg fcoms ds arpl mov jmp stos scas loope gs cltd (bad) int3 loope sbb inc rorl mov (bad) jno inc add jl add adc clc ja add cmp mov rol nop push enter into aas or pushf rolb inc inc push mov cltd clc sbbl inc cmp pop push sbb scas xor mov pop in jo in popa (bad) int3 ss sub out fisttp cmp dec push xor or lds mov rorl cmpb mov sub xor push clc adc cmp loope mov xor and adc cltd sti sbb sbb std mov mov test add ret mov or inc add add test iret mov lods adc pop cmp xor rcll push mov pxor inc into lds mov mov aad xchg dec loopne daa inc jl sub inc cmpl jbe aad jle popa and sbb jmp mov je mov shl mov enter push mov arpl lods fisttp mov sbb fdivrl cmc push pop mov fldl (bad) enter and xor add xchg push jle pushw dec clc fcoms je push jle jp add and idivl insb dec xchg shrl mov shrb or arpl bound or lcall clc stos int3 mov fcoml pop inc loop fnop or shlb lahf aas faddp sahf or push inc sbb (bad) lock mov cmc (bad) pop sahf fisubr mov pop punpckhdq sarl cmpsb jbe or rcrb enter lcall xor bnd dec sub mov inc jle jns scas adc xchg jle (bad) push jge adc jle ret cmp jmp leave push scas lock inc ja pop pop test xchg pop fs outsl push insl fwait movl jp data16 jle sbb xor xchg out and xchg cmp mov cmp dec and pushf jle mov xchg jno sbb (bad) cmp outsl push and xlat cmpsb xchg push cmc xor int3 sbb test dec lahf movups jno cmp jne sub lahf dec mov jp or mov scas cmp push dec call inc adc xchg ret jle mov xchg pop stc dec pop jle mov sub ss push dec cmp in (bad) push into pop xchg scas lret repnz dec test jp jns out jae outsl jne push rcrb pop or pop lcall dec mov cwtl mov loope sub pop imul scas (bad) lfs std mov push jp clc fstpt mov add addb scas xchg repz cmc jp ret cmc loop (bad) clc fldl stos or data16 sbb addb mov sub jle pop jo std in or jle mov aam pop cmpsl jle xor mov leave pop jp lcall cmp add mov mov jne mov lret ds (bad) (bad) and stc mov sub shlb outsl push push in jle in add pop push jge movb fdiv mov cwtl sahf (bad) (bad) sub ljmp iret sub and fucomi je cs push fdivrl (bad) mov inc mov pop jle mov inc sbb pop jle ljmp pminub (bad) aaa les (bad) sbb arpl push ljmp jge cld add scas scas js adc mov out lret push fbstp pop in cmp xchg inc das in push xchg xchg inc sti jnp lret push jp jae jne mov push in jle ds (bad) loopne cmp leave jno ljmp stc rcr mov lret jle mov or jle mov push stos sub out subl sub insl jns insb and jle loop sub pop pop inc shll mov scas and out sub dec sub jle inc add idiv fsts xchg (bad) push subb pop jl mov cmp in idivl inc imul mul and pop add out and divl hlt cmp (bad) cmpsb lcall fcmovnb js adc ss xchg rol fwait movsl out movsb pop lcall xchg push scas stos xor movsb jle (bad) adc inc cmp (bad) jg outsl outsb movsl cmp xchg test cmp sub mov mov int3 daa outsb cmp sbb sbb pushf into push mov in jmp divb xlat mov fstpl lahf es adc mov or stc or mov (bad) jle add dec add in shrb arpl iret cmovns sub mov inc push inc hlt hlt pop shl loope cmp push notl lretw fsin or add jbe or dec lcall mov mov loopne insl mov and int3 (bad) repz mov sub adc mov psubd mov mov add addr16 jg jno xchg mov clc xchg jecxz mov fdivrl adc mov ret out xor les lea cmpsl or inc je or xchg stc in cmpsb ficompl add in int3 movlps or inc scas sbb push sbb int3 mov hlt xor fs adc jne jecxz shll into dec js mov xchg cmpsl pop lods test daa mov or push (bad) xlat fdivr sub loope and iret xchg sub ds hlt mov fldcw loope out push out mov push hlt lahf arpl jl or icebp fistpl out pop aad sub shr cmpsb cmp dec and add xchg mov xor xchg popa mov or xchg sub mov dec mov ret scas xor jl clc pop or xor sar rorb rcl pop loop (bad) sub dec in jo rcrb into or mov mov cmpsl mov aad xchg ds dec or pop push adc clc enter mov pop inc push jbe jb aas test insl mov dec xor adc into push mov push add adc mov out int3 orb (bad) clc lcall fwait mov jne sub les fs jo (bad) sbb inc ss push rorl adc mov mov out xchg push fldl xchg and andnps mov jle (bad) inc mov jmp lea jle pusha in jae jmp scas aaa adc std movsl aam sbb cmp scas add das jmp clc and push ljmp add cli xor outsb sub (bad) xchg imul out shrl out loopne sbb mov xchg jae clc lock dec test xlat sti sbb mov pusha pop outsl mov mov cld stos ljmp jns ja inc roll push out (bad) sahf push or stos add mov push mulb outsb movsl ja mov jmp mov inc push pop pop out jg jbe jge add sub inc imul movsb jle lock push jp data16 scas fstpt sub dec dec mov jle das fisub jle add into fild mov jle loopne sub jl push push pop stos (bad) and loopne adc sub pop fdivrl int3 cwtl mov out aaa (bad) (bad) bnd cs mov lret fnstcw or rorb and push jle xor pusha movsl pop dec sbb int3 aam cmp add or jecxz cs inc jle mov mov jle (bad) cmp fstl test addr16 sub xchg mov jle jns movsl xchg cmp outsl cltd (bad) in notl xor lret xchg out sbb in xchg jle aaa xor ljmp or xchg mov lods repnz jp sub sarl jp adc cwtl test (bad) xchg pop cmp pop into ljmp outsl stos jle popa inc es std and cwtl sub push in jle push (bad) outsb jle push mov repz pop in jne loope mov push mov jp outsb push call adc add or jle cmp push data16 or shl in cld push test inc pusha shrb mov jmp add sub dec pop mov or call add dec lea dec adc or lock lock mov sub cwtl pshufw in fsubrs or xorl (bad) dec add aam popa js aas inc jge mov jle,pt add aad jnp movsb data16 push inc dec add and mov repnz push add ds loopne jp mov mov sbb mov or movsb jg std xor dec push adc pop pop sbb mov jno mov arpl decl lahf mov out xchg and jle jne push or add lret inc xor shll movsl sbb cvtdq2ps jmp mov fwait jle repnz mov pusha (bad) sbb stos mov inc out sub xor jmp fdivrs lret xor repz pop xor cltd mov push hlt insb jbe roll add mov inc movq ljmp or push sub sbb std and mov mov gs sti loop enter pop mov adc fimul gs cmc shrb loopne clc pop into jle test mov jle out mov mov lcall jecxz jle pop jl dec adc (bad) clc (bad) loopne out loope gs addb jbe scas push cltd fs (bad) adcl adc cmc imul clc adc sbb dec push jl fistpll pop cmp xchg inc and sbb cwtl mov mov popf or jg adc or pop repz hlt aad mov dec push in (bad) fisubrl jl mov pop lods sub loope xchg cwtl subl push pusha sti mov pop dec loopne mov mov jge lods add xchg bound (bad) enter rorl add inc out pop orl js or xchg popa mov and mov sbb push xchg std sahf pop pushf (bad) or sub sarb mov lret pop lret sbb mov and out mov dec lret xlat jnp push aad sbb and add adc sub pop dec clc dec (bad) mov mov sbbl into cld clc fstpt into xchg ret cmp pop out pop jp dec inc lock leave cmpb roll xor rcll mov xorb bound fdivl idiv pop jo (bad) lret out add add jmp scas mov out and mov adc dec add pusha jg jl add jo lret push inc clc test test sbb jns in jle in jnp xchg outsl dec dec hlt cmc xor push ret jle in and nop jle addr16 push ja xchg clc dec mov pop rorb cmpsb lock out test jle imul xor inc inc lock mov inc xor mov insl ret pop ud2 sarl add loope jge repz push mov les mov cmpsb mov pop and jle and mov jle mov aad jns fnsave test cltd xlat dec cli (bad) push sub out jb test push or xor ret test rcrl decl pop ret and xchg push repnz and call pop or out xor jge ret jle inc sti repnz push mov xchg outsl adc cmpsl cmp or xchg push fiaddl push sbbl push xchg add mov data16 mov shrb jle mov xchg pushf mov jmp push mov or pop lret dec shrl xchg dec into push jbe mov test pop sub in pushf test adc fcmove add notb sub cmp cmc jle cli fisub push inc int pop sbb push mov ljmp mov das or cmpl or stc mov and repnz pusha dec adc add push or adc xor mov adc mov and in and jo pop xchg clc mov lock add push fbld mov stos jmp or inc or mov (bad) jne inc sbb fcmovne cmc jg add or mov push adc add ret out arpl sub pop xchg outsl int fidiv in sub rcr jns fildll mov add test mov lret jg add mov adc popa inc push ss clc mov stc adc xor jo insl mov and jb pop fwait pop leave movsb pop xor repz xchg mov data16 test clc jbe imul (bad) leave xchg add dec push ret mov dec movsl ja dec ss xchg sbb cmc gs mov mov scas outsb mov pop mov push data16 jecxz insb lea cs add jnp push leave xchg jo jns push jle out mov push (bad) cmp movsb fadd (bad) jle jbe mov in mov js jmp add jle sbb fcmovnbe jbe add jnp adc mov ds cmpsb mov jle lea xor icebp sarl aaa sti mov jg xor mov aad inc cltd lcall inc flds pop (bad) jle in lret test jle popf lret sahf dec push inc sbb mov ret enter sub sbb mov daa xlat outsb jg je insl xor sbb sub or xor dec mov stos xchg pop into in cmp sub adcl clc rep addb add inc sti iret or insl clc stos xchg cmp ret pop pop leave xor pop pop dec xchg or push push adcb and jno clc popa jae and fwait out loopne lahf sbb test rcrl cmovne ret scas loope sbb into dec sub leave adc dec sbb jecxz loope and insb dec pop scas ja or ss int fs xchg push sbb mov loope xchg outsl and lret mov push mov je std mov data16 out ljmp jle add dec push movsl idivb stc cmp in pop inc jle mov sbb ror in test scas adc js fadds push jbe jns or je and loop jg loopne and fcompl stc sahf add adc jno or out mov sti jg mov jbe cmp mov sbb cmpsb stc call gs add pushf lret movsb data16 inc jb cs (bad) pusha mov mov inc add repz es leave ret pop push in pushf pushf or pusha mov jl sub xchg (bad) adc pop fisubr dec push push jle sbb sbb test ret jle mov or jle cmpsl jno sub roll mov sarb test negb jle dec test fdivs mov frstor insb mov xchg and cmp sub mov xor in (bad) mov (bad) lds or dec outsb ljmp test inc xchg xchg je aas lahf jbe mov cmp mov jle sub mov jge or mov cmp inc jns add mov jne and (bad) mov mov fucomp cmp pusha jnp idivb fwait dec jle int inc sbb push je push gs push aaa mov (bad) out cli cmpsl jno inc adc movsl sbb and sub aad sub pop add cwtl xchg or or aad mov incb jbe int3 repz (bad) les jbe shrl clc lcall (bad) or stc xchg imul and ret daa repnz xor dec sbb loope in cld pop mov push in into add sbb push pushf stc movsb test (bad) dec jnp frstor outsb popf test sbb inc jo cmp mov gs xlat push lock gs jno int3 jb jge cmp (bad) mov cwtl aas enter jns in mov pop stos add sbb pop jo inc and dec jge fs add xor dec mov mov push mov mov aad aaa cmp testb scas popf int3 inc or insl into test push ja mov dec mov dec loopne inc (bad) bswap (bad) xor sti test shrl jg popa scas (bad) mov jb and jecxz orl ret fdivs pusha sub arpl and push das cwtl (bad) jecxz mov mov movsb iretw or dec (bad) lahf cld outsl xor stos push pop in inc pop inc mov jl push jle (bad) add sub test scas sbb sbb add outsb jle enter xor jle jp mov leave and mov rorb pop jg and call sahf gs daa inc jle mov sbb jo setg xlat insl jle (bad) push mov cmp jle lock add jle mull pop jle (bad) test loopne outsl je adc inc and stos sbb jle outsl sbb dec in lret jle fwait (bad) clc test push jle push movsb repz cmpsl and adc loopne test inc sub and mov clc cmp jnp push aaa and insb js inc jb jle loop neg fdivs mov xchg sbb inc mov iret imul dec or mov shlb push aas (bad) jns shrl cld stos arpl scas int3 inc daa popa test cmc jle push or jmp add jle or insb leave mov (bad) push stos inc xchg in int cmp xchg adc add jnp test imul lds fldt leave (bad) arpl adc mov jne addl fild jae jo es rcll add inc rolb data16 mov nop ds push repz test add sbb and inc faddl push push mov aad mov (bad) sbb jl dec or addr16 stc mov pushf cmp sbb (bad) cwtl or sub repz xchg in ss scas jecxz adc je xchg movsl fldcw xor mov jge jge xchg push xlat out int dec inc in jno insl push jge jge cmp adc rcr jmp adc mov and jbe scas nop jb,pt add cmpsb sbb xchg outsb mov add mov lock bound insb stc sti jb cmp es ret iret dec xchg jl ljmp outsl iret out mov (bad) (bad) pop pop push cmpsw sar cmpsb adc std clc int3 xchg xchg lahf cli fnstsw les in das mov pop pop lahf add je cmpsl fbstp pop or pop sarb xchg movl mov dec nop data16 cli (bad) mov out jl adc fdivr xor xchg jg out dec lds leave xchg mov les mov xchg lcall les popf jle dec jne rep ret cmp outsl dec add dec xlat (bad) adc lods das mov xor mov xchg aas sbb cli (bad) dec fxsave fmull pop xlat push and in test loop scas out jns je or push popf cmp pop inc jle sub jge clc inc stos push mov mov jno jo test cwtl movsl jbe inc pop sbb jge add (bad) clc dec mov (bad) je inc repz fistpll add jge mov cwtl inc sbb ja,pn pusha shl xlat mov lahf or sbb jns imul scas ret fs lahf clc xchg es add jg xor imul mov xorb or aam xor sahf fnstsw in cmp jo inc lods stc dec rorl dec mov scas cmpl loope rcl movsl add roll jl out xor addl sbb (bad) mov jl in in call aam sub lods cmpb cmc xlat lds pop ret loope les cld js adc lcall idivl mov mov (bad) xchg idivb cmp dec mov sahf or and shrb insb fwait sar mov add mov cmp or test jns cld xchg mov ficom cmp jg pop sahf jecxz lret jno sub icebp scas bound adc push les lock xchg push pop into fidivl push repz and bound movsl xchg (bad) ffreep incl inc and mov cld lea (bad) out mov xor cmp sahf dec sbbb cmc lea push arpl icebp mov cmp dec sbb repnz inc push mov sarl fdiv pop mov jle test notb fnsave gs das push push xchg jp popa scas push push push int sub pop lcall dec jle sbb loopne int3 sub pop mov in out das dec imul adc les aad aas jg mov cmc dec mul inc fstps into ljmp outsl cmp mov push xchg mov sahf xchg mov sbb inc jle repz cmpsb mov inc pop arpl stc add test aam jae leave pop ss push aas push ficom imul leave mov cmpsl sub lret jge shll mov or pop fsubr int shrl cmp arpl xor jo fnstsw stc out (bad) and fisttpll int pop adc cs sub add lea std dec lcall push fildll inc test jae add jae jg xor loope int3 mov cwtl (bad) lcall repnz push cmp mov pop cmp out and out xor mov popa push xchg in roll lahf (bad) daa add dec sbb dec in mov and pop sti insb fisttp push out pop lea insl sbb or sarl mov stos push lahf xor push fcmovb xchg (bad) data16 mov nop ljmp add mov arpl maskmovq idivl into sbb ficomp mov scas push mov or in or int mov add jp sti stc data16 cwtl inc add fbstp xchg js xchg add lea rcrl pop cltd shr (bad) mov clc repnz mov ret addl fist in mov leave arpl imul xchg ds mov add pop jne inc push sahf and push jecxz arpl cmp in lret jbe test dec adc push jno andl mov add std insl mov leave adc cmpsb jl xor mov nop lock jno cwtl jp clc and adc cmp pop mov pop rcrl mov xor in bound xor sahf loopne sbb ja or push in (bad) pop outsl dec jb cmp or sbb out lea in loop es out pop (bad) (bad) mov pop std lcall inc popa add je outsl or or jle clc xlat push js pop mov loopne (bad) call into pop int3 xchg sbb mov pop jecxz xor jp pop or mov add cmc jno imul ljmp rcrb pop outsb dec pusha mov add mov es div jle,pt dec or jle insl push std mov in leave movsl cmp and ljmp rcrb jl add repz loop (bad) icebp aas movsl stc out push push les les add lret gs negb into fisub sub add mov xorb rclb jne (bad) insl xor xchg aad cmp mov jbe punpckhbw push (bad) and add or and out push js ret inc pop jbe ret (bad) (bad) cld repz (bad) push push push arpl push xchg movsl push xorl jp xor lahf push jo dec into push add in dec mov push gs int jb xchg xchg mov test or pop xchg repz pop push jae mov in mov fnstenv popa das xchg pop mov mov xchg sub or call aad (bad) pop mov loop inc jle push mov mov sahf lret add insl xchg aaa cmpsl jnp aad and mov xchg cmp inc adc xchg (bad) lock or jl add xchg repz mov in out clc out inc pop iret xchg fwait inc insb fistp insl sbb ds outsb cmp sub mov jbe mov aaa aaa (bad) or outsb out and jae inc jge pop push push pop push mov rcrb imul cmp popf stc sbb lret ljmp mov pop xchg insl xchg sbb dec xchg cmp jle sbb loope out push icebp jle sarb add repnz xchg nop jge rcrl fdivrl xorl xchg sbb js mov mov jae sahf fistp jmp xchg and jno jle int sbbb fdivrs sub sahf fmull mov inc mov insl xor push dec jbe add fdivrs test sahf in lds test jge fstpt dec push jg loope jle imulb gs push out inc push stos int3 mov sub xlat jle xchg push and jo jle rcrl inc (bad) mov ret sahf adc xchg iret je and dec add clc add test loop movl dec mov out insb js jecxz sub pop inc flds je sub int jle stos and jle inc adc mov lahf and mov mov push out inc cmp and pop lahf jle stc pop pop or lds lret jmp scas lcall xchg stos cmpsl scas in dec iret inc cmp mov inc dec lret push jno xor bound mov or fwait cmp dec xchg lret sub mov jnp fs in push in or sahf subb mov fnop cltd aas int3 jmp inc mov pop (bad) jo push js cmp xorl clc hlt imul out daa (bad) nop je stos add std pop es pop int3 dec mov ja call loopne (bad) bndstx sbb pusha push (bad) mov aas jmp dec mov cmp pop cli retw pop outsl mov sub and ret xorl dec sbb push mov enter xchg arpl xor lea pusha lahf mov aaa inc mov add jmp xlat imull cmp or dec add push js mov jl and xchg outsl pop popf sbb xchg sbb ret popf outsb jle jne lahf fwait mov imul jae les pop add mov fisubrl inc adc cmpsl bound jle leave xchg test sub test or cmp (bad) jle,pt pop sbb (bad) xchg into insl jle mov mov jg movsl jle xchg enter adc jle sbb in jle (bad) cmp aaa cmp ss push enter scas cmp jle (bad) cmc (bad) out test imul jle aas add mov sahf fstpt je in xor out jg jmp push and clc fsubrl dec int3 push loope imul lcall sbb mov cpuid mov out inc adc and std lods ss mov xlat push sbb (bad) movsb movsl mov push les das (bad) clc jmp xchg cltd sub mov pop sbb inc sahf add pop outsl fcoms inc mov xchg fdivrl cld sahf xchg adc add jecxz fcmovnb sub divb xchg (bad) cmp jle pushf js out mov jle aam mov arpl outsb jle repnz test in xchg xchg test xor ja mov cs jle xor es pop pusha jle adc or out stos sub lds insb lods pop pop xchg jmp pop mov mov mov loopne ss je inc pushf jle xor cmp xor mov cwtl std std sub pop pop adc cwtl jne or mov mov jg cmp jnp mov fwait sbb xor sti popa mov push (bad) rcpps lret or in push pop push push ds dec lea xor inc jb (bad) pop dec push (bad) (bad) lock mov jle dec xchg loopne sbb push xchg jecxz mov repnz push sbb or lahf outsb inc jp mov pushf ds cltd subps aad jle push and mov jb test pop dec je (bad) addr16 scas imul pop xchg push push dec ja out outsl jbe sub mov clc movsb pop jle adc arpl jns jle outsl sbb data16 leave loop (bad) repz pop rorb jle fistpl dec jle arpl cmpsl (bad) dec mov ret jle out jg lods cmpsl cmp int addb scas mov sub movsl adc stos jbe mov xchg sub cld in mov pop mov cmp jle push clc (bad) (bad) scas jle push sarb adc scas lea jle xacquire mov add mov rolb mov lret movsl dec ret int scas pushf fmull mov mov repz roll fimul xchg mov cmpsl mov mov loopne push xor xor dec or xchg or dec cmp add push or add sub pusha push inc xchg mov mov nop mov push cmpsl repnz int3 or jmp cli dec jge cmp pop aam lret mov pop pop imul hlt push inc cltd inc xlat jo int3 inc insl out lea jne fdivl jno repz fisubl pop add xlat clc mov add or and andl jnp or movsb imul arpl inc outsl sub mov xor negb cmpsb ret or push int and stos inc adcb jo call test ret xchg jge mov ret in xchg add dec fnstsw loope,pn push mov add pop arpl pop icebp jge push dec (bad) fwait jmp incb mov lahf clc loop dec add test lods lahf clc imulb movsl dec xor push adc cld inc push xchg mov xor mov lcall test pop (bad) clc movsl btc test dec loop lds mov and (bad) push mov add add xor stc xor fiadd dec jmp fistpll lret jp adc xor testl imul pop pop clc push ror lods xor into dec sbb lcall rorb cmp shl mov add and movsb test idivb push (bad) sqrtps jno and mov adc bswap test cmpsl xlat aam repnz push dec sbb mov popf push imul add out (bad) sbb (bad) into push cs pop mov mull add in ljmp dec cli push jle (bad) cmp cwtl test (bad) dec mov xchg fs dec iret pop or sahf scas repz or dec adc push inc mov xchg rorl and fisttp jo movsb push xor add leave into cmp stc sahf mov call outsl bound mov pop mov lea int xor mov adc sbb jo in aaa jg push es cmp jg out adc (bad) mov xchg cli int cwtl (bad) (bad) or (bad) sbb cltd lods mov xor jle mov dec notb dec dec cmp fistpll sbb stos xor mov xor inc and jle inc push push push mov bound pop ja push es and add (bad) and mov sbb inc pop (bad) insb aam jp repz push jecxz jmp daa and mov jle ja add xor jle stos (bad) cld (bad) ss cmp jne jle jo xchg sbb or (bad) mov cli js add sub inc cmpsb das or xorl fistpll push add xor int push fwait vmovd sub or lahf pop enter stos arpl mov jae movsb sbbl push mov fidivrl inc jg push push sarl out mov push out cwtl lock (bad) test outsl add lret pop insb mov stc inc clc mov clc add aas aaa mov adcl or cmp bound repz sbb clc cmp pop lret pop or jl fwait jbe pop pop mov mov movsl lret xchg loope xchg sbb lods xor and test dec pop imul fstpt jp not cmp jae repnz cmpsl xor xchg sbb or mov mov mov xchg cld cmpsl in mov idiv nop or pop test adc mov mov cld aaa cmp dec dec into add jp jne pop das or jge sub xor jbe cmc inc icebp loopne cwtl jle andl sub aas adc ja push inc sbb cmp js (bad) or jle and cwtl test jle dec jbe loop cmc in jle fcmovnbe push rorl mov (bad) leave packssdw jp mov sahf cmp push rcll push xchg scas lret jle push pop es inc cmp jle pop inc cmpsl push cmc sub addr16 fcoms pop loop test icebp loope xchg cwtl dec mov leave xor add mov jae inc xchg mov test xor sti std fistpll mov and outsl in and repz mov aad movsl pop cmp xlat lret jl sbb mov jp insl and ret sbb xchg mov mov inc mov push scas lea jle push cmp movsb popf mov les add pop in or sti lret jg bound out jl or cmp (bad) mov xchg inc jae inc test jne call pop cmp add in dec add fistl push add nop jle out mov lea mov (bad) fmul (bad) push rol mov push mov fdivrs or jle and jbe sbb fistp out sti mov or popa test out out mov bnd and loopne imul jmp push sub fistpl inc aam cltd sbb xchg stos cwtl jns in movsb fisttp adc leave cmp clc (bad) lods test and push test outsb cmp cltd into arpl pop mov repz aam andb sub add mov stos inc out push xchg movsb lods inc aas mov xchg (bad) out cmpsl arpl fmul (bad) and ret das dec or std and add int3 push sbb xchg mov cli pop inc pop fnstsw sahf movb lock lcall inc push mov orb add mov pop jae pop mov daa cli add mov test add or sti push dec paddsw jge fnstsw ja cmc cmc scas inc inc repz fstp pop pop (bad) aas pop mov sahf cs pop les dec fildll jns cmpsl je inc sar pop push movsl adc xor repz add inc cmpsb adc or xchg and movsl push pushf sub adc push into fisttpll les jg mov pop (bad) fildll shll fsubrs sahf mov inc cmp outsl leave pushf ljmp push mov xchg xchg lea cmpsl mov jg cltd incl movsb jmp scas ja sbb xchg xor adc clc scas pop cmp andl cld xor mov push mov outsb stos jnp test and gs xchg andl xchg jns lcall out adc lret sbb mov and sub cli pop push jb or leave out scas mov mov pop jle ja je mov dec (bad) push lds pop adc scas scas imul and hlt movsb bound movsl mov jle lret mov inc jecxz or iret mov and mov jae add mov fs leave xor jb in (bad) adc mov movsb sub mov mov popf insl in ss jae flds aaa pop stos push mov ficom pop mov cmovp test (bad) mov inc popa pop into xchg and insl iret shr movsb jge xchg dec mov lahf or roll rcpps inc mov pop mov imulb clc pop (bad) bound or sbb fwait lods nop subl jb out fisttpl (bad) (bad) call mov daa and mov pop pop add or inc xchg mov sbb push mov mov cld repnz jb pop pusha pop and sub or flds fbld mov or (bad) fdiv clc in dec pop shrl js mov rcl orb add jle dec push jnp out xchg adc scas enter mov repz jns inc in cmpsl lret pop xchg aad bound dec xor inc sbb loope jns push out mov cmp sahf push insl bnd aas jno inc adc sub outsl or (bad) jno imul lret jecxz add add loopne jns add into mov xchg sub fmuls imul insl je int dec testb (bad) jle mov out dec mov pop xchg lods movsb out mov sbbl sahf inc gs insb (bad) repnz sbb outsl mov int3 loopne das jb jle xlat and add dec sub xchg xor bound insb imul dec into cmp mov cmp jne iret sub jg clc sbb mov arpl xchg into test jge xchg fistl (bad) xchg insl adc mov aaa lcall insl cmpb scas addr16 stos mov dec ret cmp mov push adc mov (bad) orb mov mov push in (bad) (bad) lods (bad) jo mov ficoml aad out scas jl lahf mov or and add jns imul cmp jge pop scas sub and pop vmaxpd mov mov mov aaa movsl adc jle popa pusha ret fsubr mov pop mov sahf lcall test (bad) mov test ljmp jle jg dec insb cs xchg jle cwtl push out jno bound pop jle jnp push out mov jle pop or stos inc dec jle sub inc rcl popf ret jge repz cmp mov sbbb dec adc push push push mov (bad) sbb mov insb ds (bad) mov and test jle add testl add movsb ds xlat rclb add push adc or pop dec sahf cmp mov mov test scas mov dec mov add jge ljmp cmpsb (bad) outsl out cmp pop sar mov add mov cld push div or jne fdivrs inc add arpl lahf and xchg leave imul pop cmc out (bad) jle fistpll add incb inc cmpb xchg inc mov xchg pop jle (bad) cwtl mov jle pop dec out das or sahf mov pop (bad) leave test jle sub (bad) xor jle push xchg sub jne (bad) and push mov jle pop or jle jo jge fstpl lea test aam in mov adc jg push xor mov cmp jle cmp fcompl jp hlt stos sbb fldt mov test negb js add mov aas aas (bad) pop push idivb mov loop iret das mov push or fs aaa jle lret (bad) insl out jle adc repnz mov mov mov jle shrb out mov addr16 xor idivl scas or pop push xchg cltd je adc jp fcompl fldcw pop or subl xchg inc cmpb lds test mov xchg lock dec jle mov mov jle sub test dec cs cmp pushf pop mov dec scas jg iret fwait jle and lret jle daa inc lea mov mov mov es call roll lahf push cmp xchg and push (bad) xor jo fbstp adc cli in and lds or sub and fist push pop pusha cmp lods jg clc xor lret ret pop inc nop aas lods (bad) jae pushf add ror jge push xchg jge,pn ja test inc cmp pop jge mov insb or push mov test sar inc inc mov imul pop sarl sbb out scas cs mov lods pop xchg (bad) mov subl in lcall push lods (bad) mov popa ljmp ficomp jmp sbbl inc decb mov cmovae bound pop xchg in jne mov lar les push adc add stc jnp mov mov fnstcw lahf cmpsb repnz lret bound std mov jp int push sbb xlat leave pop fbstp jle and add xchg or nop mov int3 push rclb les arpl xchg ljmp inc insb emms sbb pop jnp or inc jmp dec dec or cwtl pop jne pop jecxz loop stos (bad) aaa je adc mov jmp shrl xor sbb cmpsl jp js pop sti jle cmpsb arpl clc addr16 decl aas adc outsl mov into pusha sbb clc lahf jo jne add iret add mov or out jge sub adc aad fistpl push stc fmul inc mov or aas (bad) fnstenv inc mov jo aam hlt cs xchg jmp fwait xor sarl xor outsl in push popf pop mov mov clc shll or cld repnz daa por jecxz lret rclb xchg mov xchg aaa movsl fwait testl add mov sub sub and inc test mov mov push and mov mov inc sub cmpsl xorb sbb mov and (bad) fistpl lret and add jge in dec sbb add mov jmp (bad) pop push in scas add mov pop ret je lahf adc mov pop decl sbb int3 stos cmp je inc test mov pop test push addr16 movsb sbb jl or jge clc mov (bad) cmp xchg xchg add (bad) pop std pushl xchg pop inc adc aas cmpb sub push and orl fdivr dec sti cmp xchg push mov cmp jo adcb movsl jne pop jl clc jno,pn popa test (bad) out cmp ret sub push aaa clc inc sub add rorl fmull ret scas pop add sbb jb out mov pushf mov repz dec xor xor int3 (bad) fistpll ss pop cmp dec or mov jl clc rcrl gs mov add adc add inc ret mov int3 je lods js inc jp movsb jnp add (bad) out aas jne icebp or sub cs cmc jmp pop xchg or outsb xor int stc xchg push out add lods inc jne pop test cmp bound and mov sarb jno,pt or and les bound fwait popa lods add clc jl jae js xchg int3 jge dec decl mov mov push lcall and mov add cltd mov add out mov inc cwtl pop mov mov (bad) fdivrp outsl adc stos sub mov inc sarl dec imul pop lods cmp leave cmpsl mov xor cs scas sbb sub jp and dec cs ret push (bad) ja add jecxz scas or enter inc xlat or mov xchg inc xor jbe lret adc push inc mov lea sub rcrb ret leave xchg xchg (bad) sbb leave dec cmp cmpsl lret clc xchg push ss push test push add push pop add imul and mov fiadd bound jnp (bad) fmull mov rcll jns dec rorb (bad) sbb arpl call test and jns lods adc jne cmpsl cmpsl jle mov aad pop rorb jb (bad) iret test sahf add mov rcrl popw loope pop daa (bad) in mov aas or js outsl stos xchg dec in jl add insb xchg ss (bad) pop jle imul xchg iret dec and (bad) mov pop and aas push bound js push fstpt (bad) in shlb ds add sahf sbb enter cli mov mov mov ss and (bad) dec andl (bad) jle or arpl push jle push push sbb sti mov lods jle aas sar and loopne out jg jle scas jb sbb sbb jle cmp test jle sbb out mov cmp jle inc movsb shrl cwtl pop jle test mov pushf call xchg mov xchg ret stc push and int3 and lods leave xchg mov imul jg jne add xchg mov bound jo pusha mov vmovddup ret rcrl and (bad) jno pushf clc aam adc xchg into sub fcompl cld push mov mov jae add jmp fdivrs dec sbb or jo std and inc (bad) repnz std dec scas push jle sar jecxz je std xchg cld arpl (bad) mov (bad) clc and mov add and rol dec xchg jno sar mulb cmpsb orl popa pop push in mov lret cli (bad) ja into adc mov cwtl iret (bad) test dec adc fisttpl ljmp lock test aaa flds mov mov imull enter stc and clc xor lods nop or cwtl mov scas mov add mov jmp xchg inc xor jo add push aad adc repz pop rorb clc addr16 dec and cmp inc sarb jns ds jo or jnp jecxz jl inc clc cmp mov into pop or fistl mov das sbbl test sbb xor gs (bad) dec imul enter and mov push pop xchg (bad) lock mov mov jp mov mov jae cmp jge sbb cmp xor jns mov cmp das cmpsb inc mov pop js cmp jle inc fdivrl dec push dec das jle cmpsl jne jp mov jle sub bound out cmc jle mov lahf ljmp divb push scas bound stos xchg push jle fistl dec outsb test or add mov cmp cmp mull into (bad) lock ret js data16 stos add int3 imulb push icebp scas int lret jp pop cli sbb cmc stc into imul pop adc jle inc push out dec jne jle inc adc mov into mov mov and jle in pop (bad) jle adc add xchg mulb inc cmp push mov xor ret dec xchg test add mov dec test int xor test (bad) jo dec jecxz ret cmp (bad) cmp pop add xchg jnp xor scas xor mov mov (bad) push adc mov sahf lock jae pop mov or lahf pop sahf js,pt lret lock xchg lea scas ss ficomp mov divps or jecxz aaa xchg cld inc test inc in in lahf mov cmp lahf stc sahf adc popf int push mov into clc push mov jno mov popa fistpll xchg xor int3 or pop and add lahf cmp jle inc xor stc ret pop cmovne xchg call out xchg dec and xchg mov out xchg mov test jnp sbb cltd sti movsb daa arpl xor cmpsl adc insl jle call ss mov lods dec ds push jle inc arpl sub and outsl jno ja test adc cmp (bad) jl push xchg ja add jle fwait mov mov xlat dec mov jp mov mov mov xor test in pop mov cld lahf cli fnstsw stos js jno push aad stos icebp ja rcrb mov xchg ds fldenv mov adc mov push add push jg clc jae sbb or mov int test aas add and adc popf cli adc into insl imul test cli mov hlt xchg js jns pop (bad) inc xchg clc clc inc or xchg sbb ss (bad) clc dec rorl pop adc cli xchg (bad) in add jne pushf inc cltd leave or insl andl cmp mov lcall add cli cmp or sbb jge pop mov insb xchg jle jbe lods push lret das pop cmp jle loopne adc jle outsl inc int3 or dec jle pop lcall xor or dec (bad) mov jmp mov add and xlat mov jle adc mov cli (bad) insb and dec std rclb loope xchg out sbb adc mov fs aaa jle cmp ret cmp cmpsb fwait sub repz mov int3 add mov or jle add push fcompl jbe,pn push insb mov mov rcrl (bad) out add (bad) adc std jmp lock jp jbe jle mov das dec xor xchg dec nop mov sbb incb das clc mov or jmp dec cmc das mov (bad) fiadd or les pop lds or cmpsl stos ljmp insb in mov aas pop imul mov clc cwtl add jle movsl push dec (bad) sub (bad) jno out js ret jle in dec mov out or sub fdivrl stos jle (bad) xchg dec gs or test adc fisubr hlt loop sub cli pop xor lods mov mov sbb xchg outsw push cmp pop cmp or xchg push mov dec cli mov pushf aad stc mulb mov mov iret pop cmpsl mov push hlt aam out add sub add outsl mov pushf mov flds jle stc cli sub xchg mov sahf add subb xor adc fidivrl xor mov repz xchg insl sub fsubrl lret push mov sbb clc icebp or add xchg (bad) arpl test sbb popf aaa push push add faddl jne divb lods jmp or das repz adc clc insl (bad) mov dec out neg mov jmp push das adc test jb push aad and lods cld pop push pop jmp pusha mov jb into cmp test repz das inc jmp stc push jl in stos mov jnp jns dec pop inc mov jle fiadd (bad) enter push scas fbld lods loopne xlat or jle neg aad pop scas (bad) hlt sbbl adc pushf or xor cmc push mov add inc pop and psubb stc mov gs out clc pop imul push sub xchg cmovs xchg push cmp push push xor mov sub and push mov add and add jle pop in inc shrb lahf mov pop hlt adc mov outsl mov mov sbb jle loope cmp push int3 jle test dec aam pop jbe jle dec hlt xchg data16 xor xor outsl imul lods in xchg inc mov cld dec add loope pop outsl std cmp mov inc fiaddl fcomip cli psubq out adc fldl out jbe mov sti cmc pop out in lods ss rcll out aam jb push mov sbb cmp ret mov mov lahf or sub pop mov mov mov sub sbb mov pop sbb adc fstp test outsl fldt loop push jne fiaddl mov add xchg push clc sahf dec stos les sbb scas in int3 pop sbb and aad adc adc cld je xor outsb cwtl popf (bad) pop mov lock dec xor rcl lahf cmp sub inc adc dec jge mov cmpsb lds cmp or sbb mov pushl fdivrs outsb lods std sahf add push mov push lret cmpsb pop clc xchg sbb jo and add clc movsb lds sub (bad) ror bound mov jo inc inc out jo mov xor in cmpsb adc mov or sbb push lret loope add addb jle pop inc je or aaa scas jb push nopl jle icebp jge xchg and sbb popa ss mov push and jge outsl pop and ljmp jle xor scas push mov nop jle xchg je add or adc ret stos jnp out sbb inc or push je enter bound movsb mov insl (bad) xor in idivl adc insb pop out xchg rolb sbb push dec mov sub mov mov jle aad (bad) pop rcr jle nop and mov sahf int xor mov cmp ds sub pusha jle and call pop (bad) jge mov insl andb add cmpsl enter sub mov xor fs sbb pop (bad) jecxz jmp rcrl or enter adc in dec inc fldenv jns fwait in sub push or inc lds adc ret adc adc int3 xor or rolb mov stos cmp jbe mov inc adc and xchg jl cmp incl sarl jnp mov (bad) jle fnsave nop in jle (bad) mov shrb sarb aaa push scas push mov dec lret es jle jp adc mov push rolb aaa jle,pt popf aas sbb out es mov subl aaa xor sbb jp fucomip jle push push mov test sub mov sub pop cmpsl icebp xor popf int sbb or jle (bad) jne fisttp pop out imul and outsb xlat lods testl pushl lret cmc mov fadd testl jecxz rol xchg scas inc fmul mov outsb icebp mov imulb or adc icebp lahf mov pop xchg aam adc shrl sub loop insb jb js (bad) push jae and mov push or mov push lea jb test and outsb nopl jle scas imul iret xor mov sbb sahf jp jg clc and out dec add pop (bad) cmpsb add push jmp sti sahf dec xchg cmpsb cmp mov adc test mov cmpsl scas jle dec clc lods dec or xchg push sub inc sbb roll cld jb das mov mov and andl or movsl mov jp shrb jp enter lea loope xor (bad) sbb cwtl jp mov sbb adc ficompl int3 jo or inc push mov adc out add or popf out clc adc inc es sti fmul mov or rcll test xor fildl dec mov xchg cmp jmp and std add xchg pop push aad sub jnp in xchg jge scas lods and sub inc jg bound mov outsl inc adc xor inc xor lods cmp jle sbb nop dec enter push jo es sbb mov rcrb mov jle ja daa incl popa jle repnz sbb imul dec push sbb sbb notl lcall decb pop mov xor jl dec fs add (bad) mov (bad) dec jno lcall fisubrl aas repz je jmp dec xchg (bad) (bad) test lods fs stc je sbb mov orl addb mov jo rol pop fisttp push pop out mov lods mov pop jbe mov adc mov lahf mov ret and arpl push sbb mov and mov add (bad) dec jle mov and add jle mov push jle jge cmp inc out pop cmc or aam ret js loopne adc in call lods xlat jecxz scas jp jle push je inc xor in jo mov jle pop mov repz mov cmp sbb fsubl adc sub fwait push rcl xchg and sarl mov aaa ret repz jbe ds push push arpl (bad) idivl sbb dec jnp fiadd notl dec jg inc xor mov sub push inc and jne mov jmp xlat das repz sub fldenv ret fdivrp lcall loopne daa mov push stos mov adc pop rorb mov and xchg cld mov out sub lret adc jle (bad) mov mov fistpl sub jp imul loope mov add rclb xchg jb sub fldt add cmp insl mov sbb push mov cmp xor ss mov jg std jns xor jb sub and xchg jmp adcb jns push jle inc popf dec aad out int3 mov push in cltd xchg leave adc popf jo fs ss (bad) dec or das mov mov test (bad) and mov rcll arpl das jecxz cltd sahf mov in xor scas sbb jle adc jo das cmp dec jle mov lods mov inc lods loop stc jle das dec cli adc in jle rcrl stos push ja jle cltd lods xlat jbe sbb jb jno xchg dec fstl jle pop fimull shrl jle repnz fisub xchg test data16 cmp push subps lock aaa inc (bad) or cmpsb imul and mov cmp mov std pop cmc dec sahf ret fdivrs (bad) or push test xor scas inc pop lea mov sub sti inc scas xchg or mov scas int3 and aad cli aad and ds fwait sahf cs jge test xchg fmuls push out imul cmc jmp push leave out ss inc pusha (bad) and add sbb mov lods jns scas jb lahf clc gs and mov stos fidivl pusha inc inc xchg or aam fstl (bad) aas clc or xor fs push mov and dec imul scas lods add mov mov jl or int3 mov push in popa sbb mov xor pusha inc lahf jle xorl adc adc jle inc and or divl insl js cmpsl (bad) das es dec ja sub popf bnd pop cmpsl pop hlt jle dec fisttp jb cs gs adc pop sarb mov push cmpsl cmp sbb mov cmp pushf xchg jmp data16 adc lods jle pop lahf xchg out shl in out mov jle pop mov out inc arpl adc jle imul lods (bad) mov dec bound movsb xchg jle (bad) dec div jl push mov out (bad) ljmp arpl push lods pop cmp stos mov jno stos lret test inc and push mov push fs xchg and lock clc stc out mov sub adc enter pop out out xchg in jp ficomp xchg outsl sub push testl inc pop cltd (bad) pop hlt adc dec adc int mov loope stos sub and das movsb cld shrl xchg mov fwait in jle inc popa push mov inc sbb enter xlat jnp add sub dec adc push mov fidivr and and into cmp mov das cmovg mov add (bad) in dec outsb or divb hlt lahf repz negb push mov int3 xchg sbb xchg and xor sar fistpll xchg add int3 mov flds daa xor movswl add dec scas jnp shll pop imul lahf xor adc cltd nop insl testl cmp fwait rolb sbb loop xchg movsb aaa push mov xor fbstp test xor jnp (bad) jl dec push add sbb aaa cmpsl cld in xchg pop std mov dec addl loopne push xchg pop lods (bad) jo adc mov or aaa mov bound cmpsl or inc arpl into xchg fucomip stc outsl je add (bad) in scas mov test and fwait push mov sub push mov lcall aaa repnz fcom (bad) das (bad) clc xlat pop lods sbb xchg xor sbb or add cmp hlt pusha lods (bad) mov iret pusha adc xor arpl xor fsts (bad) je inc sub popfw push mov sub lret stos scas lea dec jne test pop in pop jne jmp mov mov jp mov push mov mov cmpsb xor (bad) sub push out jnp jns (bad) fild ret push nop cmc jl sbb jno inc clc xchg test out mov test cmc mov lods mov int setge dec (bad) mov ljmp xchg jno push (bad) cmp das leave int sbb test lods pusha sahf subl push inc imul sti xchg mov dec jno loop mov adcl test xchg dec jle cmpl jle std cmpsl enter and adc test (bad) movsb gs push jl (bad) and xor xor jmp rorb or jg mov add sbb repnz sub cmp dec popf push mov loope scas mov test sbb jle pop es pushf scas mov jle (bad) mov add (bad) pop scas test jl lret insb call dec inc stc nop push es inc jb mov push rcr int xor push mov bnd stc mov sub mov mov movlps mov pop (bad) mov inc sbb cmp pop in sub out ss xchg xchg ficoml lret pop add push push pop xchg loope inc data16 and inc xchg mov fnstcw repz mov sbb aas xabort adc test cmp mov cmpsl mov (bad) je xor rol jno sbb adc xchg inc cmp mov add push lret outsb movsb cmp sub dec inc stc scas aaa cld in adcb mov push in repz das (bad) gs out jle divl cwtl mov jae mov cli jp cmpsl ja ret pushf aas and mov dec mov xchg mov out fldenv mov mov sub jle out add cmpsl imul (bad) or (bad) xlat xchg push sub inc jle scas add dec and jle enter shl fistpll adc xchg stc jb or jle sub cmp outsl outsb mov mov inc scas pop jge ja sbb (bad) adc lock movsb and movsl xchg xor test and popf jle into stos in dec add test mov pop mov xchg and (bad) jle dec inc add lea jle pushf mov sti mov ret add sbb js lods int3 mov enter xchg dec jae dec insl xchg bound dec lds iret inc es xchg mov pop inc scas pop cmc jge shrb adc (bad) out cmpsl xor add pop dec mov or or mov pop dec push xchg fidivrl notl in out xor pop pusha sarl mov (bad) pop mov mov arpl idivb sti ret add sti dec jmp xor lahf xor pop dec clc icebp jmp std ja or das mov ljmp divb dec rorl adcl nop pop popa lds or pop jmp jmp pop mov lret subb das sbb (bad) (bad) jecxz dec lcall mov cs repz sarb jmp leave add clc xchg clc jl pusha adc push mov data16 jae aam fs sub (bad) bound addr16 and out mov clc arpl pusha cmp cwtl mov cli jo addr16 xchg test imul mov fwait bound pop shrb wbinvd xchg mov pop jle jmp fsubrl pop jp inc addr16 out sbb inc out mov mov gs call inc pop (bad) rclb enter dec dec stos xlat in cmp arpl push mov jb mov test jle pop sbb jae aaa stos jecxz js jle sbb fnstsw cmp imul in mov add dec mov xchg pop jo adc pop aaa scas xor cmp mov jne gs push fisub jle insl ret fs adc jle xchg lret lods pop inc sbb fisttp jno jno push repz fwait adc loope jg out orl aas stc scas push pop scas push sbbb dec out out jb sahf out jnp nop or pop push mov push mov imul stc add jge stos jmp aad mov in sbb xchg mov out inc fs lock xor dec int cmp mov jns adc cmpsl out jo dec popa (bad) test addr16 paddq xor clc (bad) hlt cmp inc jns pop imul lock imulb xor inc jp sbb or hlt loopne (bad) outsb mov add (bad) popa hlt pop mov lds and mov mov mov out mov out frstor cmp xor xchg and inc or lahf mov shrl mov jmp nop jle addb repz push fistpl aaa aas push inc int3 call inc int js xchg mov out stos or arpl inc inc cmp jle movsl fistp jle mov psraw pop (bad) push enter mov cmc outsb jp lret cli inc scas pop mov sub and outsl sub lock cli addr16 xchg lahf fdivs jle cmpsl cld pop test jle in mov outsl repz fwait jnp mov fldenv ss jle (bad) inc dec pop bound jle movsl fmull mov into into lret xchg in jp xchg add stc jae (bad) (bad) jne sarl insb notb cwtl dec scas jecxz pop adc sti ret cltd cli push mov fisubr sbb xchg mov sub loopne imul or xor xchg jp adc xchg push sub jle loop or scas jle mov dec ja shlb scas jae out stos mov push jae inc or jle jg movsl ss jle aas add dec ljmp fnstcw jg cmpsl push fcompl mov jns jle mov xor jle cmpsl adc (bad) jnp lret (bad) pop mov sahf xchg push sub mov jmp enter js notl out sub insl imul test outsb clc push int3 inc xor jns into add dec mov jl ds aaa and adc fsubl jne cmpsl inc test cmp sbb xchg mov sub lea dec popa cmp jp in jle xchg xor or mov adc add and jbe cli sbb jb (bad) fidivr mov into scas jle cmp shrl or dec mov out xchg movl mov fmul push push jle dec push mov fnop cmc jle inc add mov push (bad) pusha cmpl push sub movsb jle js mov jne aam lea lahf push pop jge or test pop pushf inc fildl je fwait dec and add scas jle mov cmp ja inc pop push mov jle lock sbb adc add mov cmpsb xchg dec orb pushf std jle cmpsl inc das dec inc and jle fisub inc or sarl test sbb jle mov pop inc fldenv jle popf mov and lahf enter aam (bad) dec insl adc jle push fcmovnbe or sbb mov cmpsl mov jle add (bad) adc pop fdivrs adc adc jp inc add jae xor or nop pop shll mov pop or mov aad cmpsb dec repz pop divb jo,pn fdivrs xchg jle in insb cmc test aad in dec ret test sbb jae out test call mov std ss lds or mov mov xlat inc cld clc icebp stc cwtl pushf shr cmp shrl out lock (bad) loope stos jle add (bad) mov shll das ficomp dec ds imul test pop shrb lods inc adc ret (bad) in (bad) mov add sahf adc ja arpl jae mov sub and mov lret stos movsb imul dec jle jge repnz out pop mov push add push pop mov dec rorb inc out scas cmp cltd test inc cld fnsave adc jle (bad) out adc test xchg jle jne mov or pop adc add imul xor (bad) xor clc mov adc pop inc nop sbb adc sbb int dec int3 fucomi and ja mov aam xor cmp pushf cmpsl addr16 pminsw jae push cltd (bad) and mov pop xchg or jp pop or ljmp ffreep andb scas and push xor mov lods dec fcomip es ret incl leave push fs or test mov repz rolb jg mov inc lods aas mov dec adc push push mov inc imul sahf xchg add stos mov cmp out cmp fsubs pop jl clc add push add fwait push rcl mov rorl jecxz jp,pt ja mov push xchg mov call dec mov pusha movsb cmp mov int cld int3 clc push add mov pusha add fstps mov xor mov lods mov mov inc jo pop cltd mov or in mov mov pop add lahf sbb rcrb mov sbb imul scas or cltd mov ret pushf and dec in cmpsb pop lods scas pusha add or pop mov cli clc cmp out pop in xchg aas push push shrl push cmp xor push jecxz in and stc pop ficompl jl jge or movsl and inc pushf adc cmp jge add jp lds (bad) pushf (bad) stc clc hlt xchg jne xor cmpsb push lock sbb inc add push xchg mov or mov push scas rorl insl (bad) dec jnp adc pop inc mov push je or js jmp arpl sub hlt ss mov add mov mov cmpsb xchg xchg sbb pusha jge add dec (bad) and nopl jl fcmovbe iret mov rclb mov dec cmpsb add ss or xadd mov mov int jecxz xchg repz inc ss jnp arpl sbb pusha jg or adc dec loop aas (bad) fstpl sbb imul mov incl fnsave stos sub ret loopne jns sub stos xor push jo das je sub cld add inc test rorl ret push adc aas mov or insl sub dec add add xor pop adc cli insl lret ret sbb inc or test xor mov adc shl popa stc in stos mov mov xchg fstps or jle clc out cli stos repz xchg mov (bad) xchg ds xlat and flds loope cmpsl lcall add in cmpsl cld push cmpsl and xchg mov xchg mov scas jp xchg sub jl sahf ficompl cld dec xlat jle jbe fstl aaa in jmp (bad) lcall add movsb rcrb lods jle dec fcomp push fmull dec push pusha pushf int3 mov pop lret xlat push jle jl or rcrl add jle adc sti cmp testl mov xor arpl repnz imul add jle stc mov adc idiv test test scas or std (bad) lcall lret (bad) jmp inc jle pop jnp mov lahf adc and xor pop xchg push adc mov jle pop jnp or cmpl ja mov push subb mov push imul lds adc stos popf pop or jle mov je clc (bad) out es cmpsl addr16 sbb jl add add jge loop mulb jg sub clc mov sub js push or xchg pop and inc ror inc mov movsb mov clc movsw push mov (bad) in rcrl mov inc mov sub out or outsb (bad) faddl aad enter dec aad fdiv idiv add adc xchg pusha int pop mov dec aaa xor sahf andb dec pop jmp dec idivl fwait push push mov shrl pop jge cmpsb roll or add adc outsl push stos xchg sub clc in pusha aam clc cltd or and mov xchg add fucomi sub jbe out (bad) int3 bound comiss pop fcomps outsb stos decb cmp add sbb pop pop pop and mov add and and mov ljmp mov inc cmpsl and (bad) fnstsw cmc lcall push imul (bad) movq das pop lea push sub repz pop cwtl xor stos xor clc dec push loop cmp jb xchg aam jg std push mov insb jns mov ljmp loope jo jo (bad) clc ror jl or pop cld xchg fs pop and pop dec mov das lcall mov scas add jl add xor das xchg inc sbb mov push aas sarb ss (bad) fisttp mov jp sti pusha aaa pop shrb push mov stos or test add (bad) (bad) cmp inc sbb clc add pop and fistpl or out movsb push jo ret cmpsb pop fwait pop mov dec add (bad) push jp mov push mov fisub pop data16 arpl dec pop pop iret jo jle ja jns jle sub inc lcall (bad) les icebp dec inc jmp outsl cmp jne add or mov pmulhw pop movsl xchg sahf bound jp sbb jp or loopne insb jle out push lcall pusha pop cmpsb stc aas xchg out sti dec fldl dec add (bad) mov loop mov add mov ja insb mov jns mov or pop xchg rorl ds sub push sub fisttpll clc adc mov sbb jge movsl addr16 es fisttp jb sub and insb int gs jmp (bad) lods neg push jle mov push repnz push push and pop clc inc mov int cmp xor mov sub out (bad) xchg (bad) ret (bad) push mov mov (bad) ds shrb xchg sbb inc sub clc std cwtl scas xchg mov clc loop fstpt push or cltd jle out mov jle out ss dec aam xchg jle xchg jae aaa jno and loopne,pt (bad) push mov dec push add stos mov jl xchg ss das gs add push into sahf iret xchg pop movsb cld inc adc (bad) aaa and jns inc pop inc dec jge cmp add adc mov and outsl insl cwtl pusha outsl jo in cmp in add (bad) rclb sub idiv lret or xor dec mov shll add test or add jbe xrelease ret pop inc shr clc jne shl add cmp insb mov mov and (bad) and push in (bad) lcall in dec inc pop outsb jg push jo insl stos lahf lock jle and xor jle add pcmpeqb jle cmp ss mov pusha fidivr sub xor sub cwtl jle repz testb pop pop sbb mov adc outsl mov jle lods mov xchg outsl adc push out jl inc mov inc add sub int cld jle lds mov mov out mov jle xor popa icebp lods ljmp rorl lret sub dec xlat inc loope aam shr ja pop jnp lahf out push lods mov dec je jp dec stos sbb jl mov push cmpsb mov cmpsl xor (bad) ds popa jle into ljmp xor out push adc test in aas xchg mov jecxz (bad) mov sbb xor cmpl push push cld jle rol inc push adc sub or (bad) test pop mov inc pop cwtl sbb pop fwait pop sbb lret movsl lret mov popf (bad) xchg outsb rorb shr mov sbb or les xchg xorb in inc jbe xchg xchg xchg aaa jl je or dec pusha out jmp pop arpl cmp cld pop or sarl mov sti (bad) stos inc sub ds out jmp jle xchg jge pop enter sar mov xchg mov fcmovnb sahf inc adc xchg mov pop dec aas push int lods movsl jbe sub mov outsb cli test iret pop jle cmpsb and std jmp add sbb test enter rcrb jle cmpsb insl repz or jle insb sub adc or push aaa xor insl das xchg daa mov js jle jmp inc cmp mov mov fstp cmp push and iret xor lret jle sub pop mov xor call data16 xchg shlb lret pop in xor (bad) leave es lahf jle dec xchg push sbb aad jle or mov xor inc js jl fwait add out inc gs sarl cltd jae jle mov fidivl jle outsl gs imul mov mov inc inc sbb xor xchg nop jb shrb and (bad) mov adc jle ds pop outsl mov and jl data16 cmp jle mov addb jle fild (bad) sti (bad) sbb jg std mov aam pop ljmp fs mov and int mov xchg aas rcrl sbb adc into jg out pop mov xlat and push add or out sbb dec or test int3 inc pop iret insl loopne (bad) (bad) (bad) movsl jno fwait push das loopne loope sahf or mov adcb push test clc in xor or xchg add scas mov out push jne clc mov adc repz sti cmp sub sub or cmp inc nop insl pop pop mov fcmove leave xchg jmp and adc push fwait shlb test rcll popf cmp test clc sbb push (bad) mov jnp xchg fldl mov sub fidivr aaa add mov xlat mov push les cwtl gs mov jle mov rclb mov jb sbbb mov mov in sub out jp xor jle adc movsb aaa out (bad) mov test jle or fwait dec cmc adc es rcr xor mov inc mov test gs push sbb dec pop xchg adc jg push cli mov mov (bad) ljmp into add cwtl daa ret adc and pop cmp mov loopne lidtl sarb mov pop shr out repz push lret adc cwtl inc (bad) lcall iret adc or leave leave xchg and les sub xor add mov and pop lahf xchg stc imul and jae mov xchg sbb xor xchg orb rcrb cmp pusha inc sbb test stos fdivrl sbb inc jle push mov test xchg or mov add loope jle addr16 in xor insb push cmp mov cmp jmp testb jp jne jle call lds jle subl loop call add lret mov jae jg insl jle ds movd ficompl mov icebp sub and iret jle xchg add mov cwtl subl test ret (bad) movsb ret mov inc jnp sbb loop cs sbb jle repz fidivrl mov adc outsb xlat ss jge push jle or in xchg dec dec int3 stos aam adc dec cmp hlt dec jg adc xchg xor movsl inc jl pop enter mov mov cli mov into js loope xchg outsl fwait lea push test fidivr aaa push inc mov or pop std pop sbb sbb (bad) jle mov lods test xor jmp nop sub jo xchg sbb nop dec jge inc aas push sti xor int dec mov inc (bad) pushf lds imul push jl xor test pop daa data16 xchg int sbb sahf cltd mov pop xor xchg jle aas dec inc (bad) std out arpl ret addb popf (bad) mov jle push xor mov mov push adc into sbb out and aad inc cli jmp out cmc cmpsl int3 xchg sub sbb sahf jo sub dec sahf (bad) sub (bad) dec inc (bad) out mov jno ljmp dec jle sbb jle stos sbb inc shrb jle dec jbe es dec dec pop jnp pop scas cmpsl pop mov test stos adc adc pop incl add jle jo adc outsb xor pop shlb sarl sub fildll loop jle out jbe jle dec mov aad sbb add jle movsl or mov mov loopne mov (bad) xor jns (bad) sahf jae jle test imul bound mov lcall jle dec lods lock sbb out scas int jle (bad) aas push jmp add (bad) into dec imul push jnp and bound roll lahf imul lret cmp fist (bad) pop jg cmpsl cld mov ret fldenv test std not andb push xor out mov cmpsl pop (bad) (bad) mov ja cmp mov adc adc cmp cmp sbb jle jns fisttpll (bad) ja flds push mov pop xchg or test insl push rcll dec sub jp ja push mov aaa inc inc loopne pop adc and mov sub cld repz jle,pn dec or mov sahf lods testl dec ljmp push shll aas ret inc jb jle xchg arpl cltd sarb in outsl and into out sub mov cmpsb bound jnp,pn mov (bad) icebp (bad) ss add cmpsb xor jp xchg xchg les or push xchg popf inc jle adc aas inc mov pop out or adc dec fwait pop cmp add or push lret push popf sahf rep (bad) int data16 inc ret push xor clc aad movsb lret dec and push lods or xor (bad) je push (bad) imul aad ds adc sub push jg lea (bad) sub clc lret pusha jmp dec mov pop jns out inc addl outsl mov dec push test sbb aam andb xchg adc sbb icebp int jmp gs outsb into dec mov inc adc and clc js mov mov fidivl or sub test icebp daa stc mov xlat popa (bad) lods add in (bad) lahf mov fnstenv cmpsl (bad) lcall aam fdivrs mov aas mov ds nop or popa scas idiv addr16 dec xchg cmp mov xlat cmp mov adc (bad) xchg dec dec mov fistpll jle push xchg sbbl push xor jge cmp (bad) jb dec scas mov dec adc imul add test jns addl test fs sub sub mov adc pushf jge aam (bad) fcmove rcrb jle sbb adc lcall (bad) xor push jp sub pop add iret (bad) sahf test inc or mov mov jge push mov push repz push jnp sarl dec jl int and iret jne popf mov sub in mov (bad) or push xchg add sbb mov mov jle mov push stos js adc outsl mov stos inc fwait gs or jns jle cmp mov loopne sub jne push push into jle or gs scas fimul jp test jle jne imul pop jbe aas or out push in jle mov aaa stos and imul cmp sbb jbe xchg add cwtl jno and xchg mov adc add sbb and lahf jno cld jle daa pop jae pusha into mov pop jp (bad) sub push push cwtl cmpsb mov mov cmp adc mov icebp sub stc push es stos xchg sub push sbb cli lcall jecxz mov jge xchg inc mov dec push xadd insb loop dec cmc add pop les sahf sub inc dec add add fsubrl in jns and sub or inc xabort fnstcw jnp jne loope mov out popw lods sbb inc xor clc add lcall jp popa cmc xchg add and push sti cmpsl lds cmc inc insb lods jns in bound jo sbb imul gs lods jg xchg adc and (bad) (bad) loop dec (bad) add inc adc jo pop scas (bad) push sbb mov fild jnp cld lea cltd stos xor sub arpl and out mulb mov incl and repz idivb xor inc dec mov insb sbb pushf hlt push sub pop clc jae jp jmp or mov leave adcl pop pop jle pop outsl dec lods and mov xor bound jge mov jle lods int sub and cmp mov ja jge adc sub in mov bound enter jle aad sbb movsl pop jle stos jmp popa out inc pop mov outsb xor movsl adcb inc dec jp cld iret mov cmc jle sub fcom sbb jle psrlw pop mov mov add inc test mov adc jge pop aad fisub jg mov sahf jmp int3 test jp jle aad cmp andl mov (bad) push ret int3 jle lret dec das pop cmp inc jle add cmpsl jle lret pcmpeqb adc jle mov pop fistl or cmp shrb lret nop xchg outsl or or xor jle mov xchg ret jle push mov rorl add adc clc push stos in cmc add sahf out xchg jp rolb outsl mov out cltd dec out ds xchg push and cmc jne lods lea addr16 mov or sub pop ret mov dec (bad) dec sub ret sub test push nop mov add jecxz stos sbb pop push clc mov adc (bad) jl fwait xchg stc mov (bad) xlat jo pop and lods mov (bad) mov clc sub jl add clc leave dec fwait and scas and pop je test dec cmp lret or and sbb test lahf das fsubr cwtl mov repnz outsl sub (bad) dec ret add test sub mov test pop jle pop push es sbb popf int cmp adc in dec or mov hlt in mov and shl jl std arpl scas push adc (bad) push sahf or jnp jge (bad) in xlat les dec mov pop into inc dec or daa mov xor sbb xor cwtl push push outsl (bad) std cmpl xchg nop lock adc mov pop pop hlt (bad) aaa cmp cmpl int ljmp in and imull fisubr and xchg and insl test aaa mov mov pop mov bound scas sub jle jnp mov push daa fdivrl add lret notl lahf jnp mov test sbb xor out mov xchg sub sbb shlb add repz cld adc jp int3 aam jg out lods pop test out test (bad) adc cli xchg in test scas sahf out jp (bad) or sar (bad) jp shll xor or add leave fsubr mov jnp sti jb lret add jbe add push push cltd loope in rcll xchg subb test add pop jbe mov popa push adc mov lahf dec stos lock cmp xchg bound xor dec xchg jg aad (bad) jl (bad) mov sub and pushf sti and mov inc sub (bad) call inc data16 xor dec dec lds (bad) mov inc jmp mov fcoml repnz jae js shrl movsl cld cmp push cmc je test jp fnop cltd pop negl rcrb fcomip xchg addb cmp aas mov dec or xchg inc into icebp sub pop int std pop inc xchg out test inc mov inc fisub sbb int3 or push rolb mov jg test add jo test scas (bad) movsl pop cmp (bad) je int3 mov adc and les jl fidivr add or aad cld sub cltd xchg movsb or pop pop ret xchg inc xor aaa loopne std hlt jbe jp addb sub bound lahf adc fiadd xchg call testb ret mov push icebp scas das jo sahf sbb and mov sub int3 xchg (bad) fstpt call dec dec jmp sti dec lahf mov or push imul push orl mov push jle inc repz sbb test fsub jle mov mov mov enter jne call mov mov sbb mov les insl sub out xchg in je xor cmp add mov (bad) mov loope inc push mov dec cmp pop loop int3 clc jle push stos push fnstcw xlat xchg mov sbbb lahf pusha pop test pop cmpsb pop fsubrs push pmaxub xchg insb rclb scas (bad) adc cmp repz stc scas or hlt fsub xchg test xchg mov push xchg or add add ja icebp push dec jmp scas xchg mov test xor idivl int adc or pop fcmovnu in pop or aas scas lahf mov xlat mov and lgdtl or jbe fsubrl outsl inc lock xchg sub (bad) cwtl mov jns aam fldl and cmp cmpsl in test sbb cmp xchg mov mov pop stos adc sahf jecxz xchg dec adc cmp inc cld pop jns cmp stc stos dec cmp sub hlt xchg push sub addb out pop jge aas jp push mov add mov mov sub jp push and xor sahf fidivrl out sub (bad) jle fs push dec in movsb push sub add rcl out dec mov loope adcl dec nop jle pop arpl stos mov int cld or add and pushf push jle inc inc fnop sub inc xlat dec shll das stc pop xchg aaa mov add scas (bad) jb (bad) mov addr16 push cmp mov leave inc test fidiv inc mov in mov pop adcb jl inc jle icebp jg (bad) repz pop jle (bad) loopne xchg mov cmp add push cltd out jle mov pop mov adc insl movb xor adc daa loop xchg cmc mov jae mov mov popa mov mov xchg xchg dec jle fstpt stos xchg cmpsb mov inc jnp int3 in fwait inc jo cmp popa hlt roll pop jle push ja inc add push pusha and jle ret push lahf into imul mov mov push pop test cmp sarl add jp jle mov je xor cltd jle shrl xchg xor jp scas sbb incl jp popa pop push daa jecxz sahf das mov (bad) rclb ja inc push rcrl jle pushf idiv gs scas jle push aaa pop dec add push jle xor sub jmp outsl dec xchg jo movsb cmp test lea sahf popf clc and sahf cmp cld jecxz fisttpl jp mov add add pop popf test jbe test jmp movlps xchg or and das push dec in dec add (bad) popa stc push jmp mov sub cmp adc out add sbb jle push xlat mov pop mov sub sub stos bswap aaa stc icebp dec mov sub movsl and cmc pop fstp cmp scas mov sbb sbb jle push mov inc cmp mov aad jle fistp (bad) scas lods xor jne adc cmp adc xor add in aad lahf idivl mov inc jle sbb adc jle jno insb jbe inc les pop mov loop leave jno and jg pusha scas stos push xchg dec das or ficom ffree andb xchg xchg cmc dec pop loope (bad) add cltd jle mov cmpsb lret cmp xchg jle std push or leave or repnz out mov (bad) int stos xor (bad) js jle xchg mov push js fdivrp jle jb cwtl push xchg stc loopne mov les fsubrs jmp push jle stos enter mov hlt push mov adc jle inc pushf frstor mov rorb hlt jno adcl push mov dec jle sub jle push mov in stc xchg lock mov cmpsb inc insl mov adc pop test sbb mov arpl jge pop ds xor push outsl jecxz mov aas and sti popa cld mov dec sub jle aad dec mov aad jle insb sub adc mov cmp test pop jle push stos jne sbbl adc sub cmp push mov data16 adc and or pushf in push jle das (bad) outsl mov lea ljmp xor sub pusha jle dec ret push dec cmpl loopne jne cmp jle sub mov xor or mov call je fsubrs movb divb mov xor push mov cmp out jle (bad) loop jb add (bad) mov cmp pushf leave push adc add das or add cwtl xchg jo dec ffreep mov stc push and dec cmp xchg jle notl add mov dec cmpsb mov and insl mov aas gs arpl xorl xchg sbb jmp mov mov mov ror sub mov adc outsb imul mov pop lds jle ja in xchg inc add or sbb stos aam jnp xchg jle pop mov popa inc mov mov pop xchg pusha pop cli clc jae adc cwtl sbb lock (bad) test cmovb scas dec jmp lret (bad) outsb mov jle mov inc adc int3 dec imul mov arpl mov int3 loope in scas cmp cwtl (bad) push fdivrl out pushf add push mov sbb nop das pop lods or (bad) sbb jno sarl or stos xchg jle push (bad) fmull sub mov mov popa sahf das and in sahf stos jno loope sub xor popf jp fs repnz and sahf es sub js mov dec (bad) call dec xchg adc add pop xchg and sub mov pop dec cmp pusha sbbb mov jp popa fcompl or fcomps xor jle loope lock (bad) scas jb fcomp or decl popa add dec pop mov std out in sub out mov addb (bad) clc bound cmc pop inc or into insl sti rorl xor xor jle jmp and add jns jle fcoml pop inc (bad) mov andb sti popa sahf adcl jle mov out (bad) mov sbb repz fistpll je push jle pop add pop cmp and and adc inc std lahf clc pop push idivl push fucomi jmp push loop cltd jle es mov add jle popf jecxz sbb mov loopne xchg push pop cmp call jp push pop and jle pop pop ljmp dec or xlat das hlt in adc and sarl mov rcll aad push mov push xchg mov decl sub clc mov test push and cmp jmp inc xchg xor adc jle divl or andl inc out stc sbb sub mov push mov and push scas mov sub scas scas mov clc iret pop inc inc outsl mov push fnsave clc leave es fimull lret sub inc cmpsb cmp add jne pop pushf into lcall inc pop cmpsl push (bad) and loopne cmp in jbe aam xor cmp sbb fimul xchg repnz mov inc (bad) mov stc aaa and inc add dec pushf or repz mov xlat jp lcall lods mov push call adc push inc jle fnstsw lcall sub in jecxz xchg sub das test and int jle mov push cmp sbb loop fisubl push (bad) pop cmp insl call dec adc aad data16 jle rsm xchg or divb mov jle and lahf (bad) bswap jle mov mov mov mov or test push jle or out inc pop jecxz in jle mov out scas repz out mov out das lods js xchg mov lahf mov push out (bad) push cwtl and fwait xor xchg sub sahf jp movsb ds jle push jno dec out (bad) jle inc add into sbb mov (bad) sti popa fiadd adc lods cmp sub divb repnz push enter inc imul push push cmp (bad) add repnz inc adc inc cmp frstor je cmpl dec popa lods and cmp mov jp enter dec xor ficomp mov scas pop fsubl rol cmp pop xchg clc adc inc push rcl mov ljmp test xchg mov adc add mov cmpsb mov test adc mov xchg ret cltd or cmp push (bad) fildl pop int3 orl stos bound jl,pn repz cmp push sahf cmp mov hlt cs sbb xor pop pop xchg les test cs mov inc jle (bad) stos pop fdiv mov test xor and xchg jle movsl pop jbe lcall adc insl xchg xor lahf jb cmpsl ljmp out xchg jle pushf clc cmp test push mov int sub push sbbb imul scas mov out shrl (bad) mov ljmp data16 add scas inc inc pop jle inc dec jno jbe push mov fcoml xchg fdivrs pop mov rolb hlt cmp cli lock xchg stos xlat out pop test int3 lods mov xor jae in jp push bound inc data16 and mov or iret mov leave jl dec mov jle in jne sbb test dec fcmovnb lds lahf jle scas andl mov mov cmpsl push shll jle nop int cmp pop dec pop dec pop aam sti pop test fs scas or std dec xchg lock popa les sbb cmp or pop test xchg out mov sub cmp fcoms imul leave dec add jle sbb dec mov (bad) jle xchg mov push pop loop (bad) cli notl push cmp or data16 pop and scas js sub test shrb push out pop in cmpsb push sbb bound rolb jo jl push scas add test clc mov (bad) xor adc cld outsl xor lods fsubrp shll pop fiaddl sti sti add lea xchg add rcrl inc sahf clc pop xchg xchg pop out push adc neg xor add stos mov int3 or lret fwait inc pop add pop inc mov sbb bound cmp mov fldt push dec adc cmp or lea mov pop inc out mov or push ds movsl push mov cmpsb stos inc rcrl jmp fbld add jecxz mull (bad) or and adc les es jmp mov or or push push wbinvd lcall mov je (bad) aaa dec mov pop cmpsl outsb call imul cmpsb jno inc clc in je mov sub mov pop push clc fidivrl and xchg test addr16 (bad) ljmp mov push sbb xor jne add dec out dec cmp adc add mov jle nop fistp movsl dec je mov dec ret movsb pop data16 scas xorl xchg cwtl mov sahf mov lods je adc out jmp xchg (bad) pop jle mov sarb jle pop xor pushf movsl jae cmp push bound sub repnz xchg (bad) pop mov inc mov idiv arpl ficomp sub adc push (bad) and xor lcall jle test jl pop inc mov xchg jle pop mov push push cmp scas mov jle pop xchg jb lea xchg stc lret insb aas pop repnz add pop pop (bad) push jo jmp test mov cli pop aaa lahf cmpsl ss sub pop jp in test gs out popf dec negl mov inc jge das (bad) jg lds pushf cwtl stc sub push push mov insl enter pushf fsubs pusha mov lahf jle int3 imul xchg xchg (bad) jge in jl stc xchg addr16 adc sarb xchg (bad) enter sbb hlt xchg and cmp out dec movsl mov push in jle mov fwait adc int mov jnp or mov rol (bad) lock (bad) ljmp jp scas jp loop dec inc pop test xchg xchg jle fdivr rcll (bad) pop inc jle sbb shrb mov iret mov xorb sahf push push int3 call lods leave jle jo es (bad) xchg jae mov loopne jg cmpsb xor push fsubl or mov ss sbb jle cmp mov mov and adc sbb xchg subps or mov push stos xor cmp lea cld push sub push cli out adc cmp push in enter dec jg test jle mov mov jle and inc adc jbe sbb adc mov sbb inc inc lods imul pop sbb mov dec push fist les out mov add or ret add orl jg push cmpsl xor or imul mov test mov add in aad in sub bound push mov jle fs cmp ds (bad) cmp push add dec mov add repnz push dec jle push jbe iret (bad) int cmp fldcw jle inc ret popf push cs add fistpll mov ja or js and inc cmpl pop sub add mov xor jo rcll cld and sub mov push cmpl fldl sbb push into mov clc xchg je xor andl pop bound xchg and mov clc xor ret mov add lahf inc in sub lret outsb pop hlt in sbb test mov xchg inc dec scas mov loop dec enter jle (bad) pop sub mov or test jle and mov xor jle adc je jle dec out pusha fimul lea jl dec mov pop out pop outsl mov fildl lea cmpsl and jle push mov fdivp cli mov add xor mov push mov cltd in mov xor lods push add mov push ss jns andl movsl push fidivr sahf xor pop lds push jge inc in jle fiaddl jle aaa jno push iret jnp jle arpl and je pusha (bad) mov jb jecxz mov rcrl lds arpl sub sbb std icebp jle aas xor mov (bad) adc jle insb shr stc pop or xchg inc push arpl add lcall dec test push adc lret push test je push clc (bad) fiaddl or and sbb jo add jo jge das pop clc mov arpl sub pop fwait imul pusha outsl push cli jl shrb fstpt push ret cmp lahf or hlt push out shr stos sbb (bad) xor jle mov sahf pusha sar pop in movsl jae inc pop jle (bad) clc hlt das pop lods jbe mov fs rolb popa dec or jae jle push mov scas js sahf out nop mov movsl cmc sarl popa mov push int loop inc js (bad) (bad) jle dec pop jmp outsb push jle cmp lahf test test jle fisttpl jecxz data16 mov ja sbb aaa jle fcoml jmp adc and push add jle xchg iret and xor adc mov pop inc cmc sbb fsubl pop dec mov ror orl or sbbl sub xchg mov add rcrb mov cltd add imul cld mov push jns out add jo (bad) repz js repz (bad) xchg jb mov js js test push pop push and mov pop inc push std adc out mov adc mov pop dec xchg sbb ds jno mov aad mov sub out jg push push jae cmp xchg lahf or mov or es push clc aam sahf les mov hlt dec cmp insl or push mov inc xor into in das jg pop (bad) clc pusha shl xchg or push loope cwtl loop (bad) sub mov movsl stos lds clc (bad) iret bound xchg adc test clc dec push jmp jp outsb push push out jle aad xor mov sahf cmp add jle sbb jne loope and fiaddl sub dec sub pop cltd jmp sbb bound add in jle or sti addr16 jl sahf insl leave mov js aam cmpsl incb (bad) xchg out in sub ljmp (bad) and jle lock mov pop mov push jl dec rorb mov add lea jle sbb adc out (bad) loop push in sti scas ret rdmsr jmp and jp movsb test sub adc mov inc fdivrs in mull fildl fmull adc push or jle jge repz push int3 lcall cmp scas aam leave cmp out ret aaa in adcb repz and test mov cli daa jl rorl add sarl push ja es jle and test mov jns mov pop cmp mov jle das mov push cmp jp lcall ror enter xor mov lds test sub jne fwait add inc lds pop jp (bad) aam aas je call test cmpsl orb lret add cmp jae xchg jle add push mov pushf jle adc pusha fimull dec xchg cmp (bad) inc cmp mov loop cmp push ds pop jnp push push adc lret cli sbb mov fiadd xor or in adc jb add push adc subl test sub rolb jno pop cwtl jl jnp mov mov sbb add mov imul xchg and (bad) out push das out clc push mov mov mov cwtl out insl cmp jl out pop xchg push hlt es gs int3 pop cmp aam pop sbb adc rcrb add xchg add inc loop and ficompl daa cwtl and add dec mov addr16 mov jo mov fwait pop ss add or mov cmp bound pop dec xor aas sbb lahf or rcll in (bad) sub lds lahf xchg int3 sub movsb xlat pop test inc stos add mov inc or aas add jmp xchg mov mov addb pop test lcall adc mov sub cmp or jge mov stc xchg dec push xchg stos inc and lea push dec pop stos dec sub pusha rorb mov insl rcll push jp mov cmpsl cmp dec sahf mov clc xor cmp xchg xchg imul fadd outsl in adc das lret decl lds mov adc add or cs in int3 stos inc xor xor sub adc leave (bad) xchg add ds jp lcall and inc lret add pusha pop in inc lcall lahf aad sbb jp add sbb xor adc jmp pop fndisi(8087 (bad) mov cmp in ret ret jmp mov and (bad) scas fidivrl pop sub jmp stos in sahf jo sti sub ret jmp test out (bad) xor push pop pcmpgtb incb xor xor xchg cmpsb and mov shr ss and scas cmpsb pop cmp mov nop jl leave mov sbb les xchg cmp inc popa push pushl sahf push sbb clc mov dec cmp aam add add sbb xor fs lcall xchg inc mov push getsec fisubrl mov mov dec xchg mov negb enter mov or ret fidivrl (bad) imul sahf daa add cmpsl adcb (bad) push rcr clc in outsl add or nop (bad) jne pusha pop or scas je (bad) fistl fidivl bnd imul test fst adc jp out and das and (bad) icebp cmpsl mov cmpb dec sarl cmp and loop shrb cmp lfs mov clc sbb or fs dec pop int xchg fstps movsl pop mov scas add add stc sbb cld xchg lods lahf push (bad) sbb jecxz mov jge fildl and rorl sub inc add and sbb cmpsb lock in test fiaddl add jle ror into ret push lahf pop lahf pushf stc or scas sbb notl fild inc into pop fsubr jmp mov fs cld inc and ss (bad) repnz int mov rcrl cmp xor lret adc xcrypt-ofb cmpsl das ret (bad) cmpsl pop fist mov test jl fisubl jnp cmp cmovno mov mov ja clc faddl lds adc or in cmp inc movsl (bad) fiaddl lock sahf cmp scas stos ss popl js in aam aas jb test scas dec movsb es dec jnp push into mov xchg pop fdivrs insb jp lret or imul xchg mov jle or sub mov adc sbb subl and mov jl frstor jecxz xchg xchg push out in stos pop jle dec add xlat int3 push sbb and add dec addr16 jo sub add insb (bad) xlat cs jne adc les xchg ss push enter pop rorl dec xlat pop push pop jle or mov sahf (bad) in mov pusha adc mov push cmpsb pop jle dec adc lcall jb cwtl push lret mov cmc xchg mov adc mov cli mov pop pop push mov jo pop inc push push std cmpsl push push add pop xchg andps aaa (bad) dec int pop fiadd outsl testb mov in push in js aas clc inc fs cmp xorb enter cltd pop fwait xor rcr lret movsl jle dec imul fadds lret dec mov enter cmp enter cmp incb jbe int3 in notb div lret lret jmp popa dec jb fsts movsb mov xchg pop leave xchg sbb cmp xchg mov imul cmp pushw push mov test pop loopne test jnp sbb pshufw jne mov mov jno jmp jnp sahf fcoml imul lods test push xor cmpsl fwait (bad) jp lods arpl sbb push in lret cmp cs scas es lock pop dec xchg js imul jmp int fucom xchg fadd mul inc mov xchg jb sub jp push les adc or lahf jb sub aam shl dec xor jmp pop add push cli addl push mov pop sbb push movsb push bound repz mov mov lcall push les movsb adc add mov iret je cmc cmpsl xchg sarl or cmp mov sar iret sbb and stc inc cmpsb jl adcb fbld jle push dec scas outsb stos jle addr16 clc test fistpll inc and xchg sbb std (bad) sti (bad) jle xor inc xchg mov or int3 int test pop sahf pop test and in dec mov push cmp incl cmc js fs jle adc (bad) mov jnp (bad) scas shll pop sbb scas push repnz sbb fildl movsl ror mov in push (bad) sbb xor cs xchg icebp fstpt and loopne (bad) movsb mov xchg btrl cmpsl repnz sub xchg dec cltd and mov mov test push insl jns adc iret imul outsl mov sbb xchg cmc sub xchg jbe xor in sub stos mov aas pop xor mov cli pop dec adc in jle or push das or and cmp push pop shrl cmpsb jle sub or gs std cmp jmp jns stc jle sbb dec jle cmpsb sarl faddl dec jle cli inc adc mov lahf fs sub add ds sahf jnp stos jo push outsb pandn inc rolb frstor mov add fidivrl mov and stc icebp arpl and lods jmp add jecxz xchg cs add and scas jne cmp ja test incl hlt jne xchg cmp int3 or xchg clc cltd push jl mov jmp fsubl mov ficoml mov pushf or xchg js daa mov xchg into aam in jp pushf adc sub pop dec cli inc (bad) je jge movsl jl cld pop mov jecxz insl xor mov fistp pop pop mov jle nop or (bad) out (bad) jns movsb loopne lret shrl dec dec push sti jle sbb (bad) cld jbe cmp push shr mov orl (bad) mov cmc jle sub insl pop (bad) stc mov xor mov shrb out stos lahf roll jge ldmxcsr mov es add pop mov fildll pop les imul xchg or xchg xor mov (bad) fs mov (bad) or fs pop push or lahf andb fs mov jb test int3 jge add cmp xchg add and ds adcl adc jo outsb jp or and jp clc stos mov (bad) mov pop jmp sti xchg hlt dec mov push jle mov imul sub xchg add sub mov jle mov imul push clc xchg cmpsl inc stos jns fiadd stc popf inc xor adc add fdivrl aas mov dec int3 into sub sub or xor test in mov orl and aas inc push roll ret outsl das ret das xchg or bound inc (bad) xor daa pop or cmpsw daa xor and push jno inc xor pop nop add inc stc pushf int pop mov pushf insl or push adc (bad) stc in jnp int3 and jae mov ror ss xlat inc and xchg fwait nop push subb cmp jecxz pusha cwtl push xlat cmp lcall and inc test mov leave stos gs inc cmp xor mov aas xchg loope add pop lds clc (bad) or aad int3 lret es adc (bad) stos push xor incb add (bad) and adc dec or incb add cmc cmp pop sti jecxz in and sbb jo push fcom lds push sbb ficompl adc mov add sub mov aam jmp or inc fs and int dec jle push roll (bad) mov out jbe lahf andl mov jecxz xchg push clc gs mov cmp jl loopne (bad) xor pop test xor push mov jle addr16 mov clc cltd arpl dec popa testl les jae inc ja lods pop stos lcall xchg xor cli add xchg jo test arpl pop jle inc mov test lds and test pusha mov sarl xchg push cmc sbb std cli pop jle lods pop fbld jle add jp and dec popf in add inc mov mov sahf dec dec (bad) jle jl mov outsl lahf (bad) aam sub gs push pop and xor cli jne dec mov jp icebp sbb iret add outsw out sahf mov pop jbe sbb mov clc xor xchg stos sbb mov xchg sub cmpsl inc jne jns pop stc push lret lcall xlat aad sbb (bad) out adc mov test sbb insl xchg push rorb jno sub jle xchg mov or jle mov sbb loopne das ds xchg xchg mov pop mov mov fadds sub out imul lret int3 jle scas push add loopne (bad) jle ja jecxz stos cmp mov daa ret scas inc int3 push xor fldt sub mov pop xchg xlat jle aad jg lods shrb inc (bad) xchg and or push clc xchg push sbb cmc mov fnsave jle cmp and jle pop (bad) inc cmp aaa or rcll mov mov mov stos adc xchg xor xor xchg dec or push adc or xchg repnz test andl mov (bad) into jno movsl sbb jp test mov aaa xchg int3 insb add push or xor sar dec inc pop in jnp pop add add fiadd sbb (bad) js test repnz mov int sbb lret or subl adc cmp push and push xchg and mov push jmp outsl fcmovu inc jecxz lcall int3 into (bad) (bad) adc jecxz mov inc loop inc mov aad sbb movsw daa mov and inc int3 je fwait mov jl jae sbbb xlat mov sar cmp jle fidivr gs cmp mov sarb enter pusha push test sahf dec adc push sti fmull sbb sbb xor sarl fs push sbb popa sbb out pop mov jnp dec mov fidivr movl sub or sbbl popf cltd fwait jle nop mov sbb sbb jge aad jle adc inc fucomi lret addr16 jp std divl or loopne stc rol into sbb out mov int3 cmp js cwtl inc push xchg mov jge aaa cmp int3 xchg ret mov pop xor sbb call jge test inc movsb stos int3 in jg (bad) cmp aaa pusha add loop cld pop loope ja icebp bound xor push jge mov and call mov outsl aad mov cmp popa inc or pop sub mov into cmp jb push mov icebp and rcll (bad) aas xlat xchg xchg sbb cltd cmp outsb jns pop test xchg cmp jle out ret stos push std lods jle jg repz xchg cmc ljmp int3 icebp test jle pop jne enter jle dec mov cmp aaa jle divl lret jecxz pop sbb or fcmovb jge addr16 adc inc xchg scas out push mov das dec les jns fstpt jp mov adc aam inc (bad) pop movsl xchg jle pop out shl cwtl jle,pn faddl test add scas in jp lds jne ret inc lods subb dec outsb mov (bad) punpckhdq mov cmpsb addr16 sarl pop repnz inc int mov and push ret les (bad) add imul in mov add fadd or int3 aam push das inc pushl or or rolb mov fstpl leave cwtl add sub push leave mov xor push stos mov cmpsb sahf mov mov jmp push test sbb in lods jne subb push fistpll jmp shll sbb xor stos and test pop add cmp sti jae sbb aam pop mov (bad) sub orl add mov adc out (bad) leave loope inc js ss push jle jae movsb dec xor jl test aad arpl mov bnd sub inc cltd iret jle xchg xchg and fmuls jle insb xchg add push inc mov xchg push loop hlt leave js push jle jecxz adc fiadd jl xor ret add mov push pop (bad) and mov xchg inc inc sub clc xchg xchg jecxz mov leave mov fcompl sbb mov xchg adc and pop es adc inc xchg loope add std mov inc xchg iret lahf ficompl out pop ret std lods lods xchg popf std jle sub mov aas sbb repz cmp adc lahf hlt jle push je jecxz imul call jae fsubrs push add xadd mov int3 push cwtl mov out repz std jle push mov inc lahf fnstcw cs inc cwtl ljmp mov xchg dec and jle cmpsb icebp sub daa bound mov cmp sub push ror sahf push gs int3 fdivrs sbb jle aam inc cmc jmp test jl xor xchg (bad) xor xchg add in fwait out fstpl xor mov or and fwait inc test andb mov cmpsb xor mov jae xchg aaa enter addr16 lcall das pop movsl jl (bad) cmpsb mov add inc out add dec je addl fs das pop mov movsb mov push ds test xchg push mov test int3 lcall and stos lahf inc pop ret cwtl mov aas jecxz push mov mov bound inc cmpsl aaa ret mov mov jecxz jl addb out and stos lds mov push lahf sbb into mov movsb testl jl pop xchg jge mov test je addb mov and int3 cmp fsubr cmp cmp loopne shrd push pop bound (bad) adc enter sub pop mov sbb or push jecxz (bad) pop ror push or or and out stos ret jo mov mov dec jo xchg subb sbb clc es xor das xor xchg lods dec fisttpl das les pop outsl mov xor jg insb xor outsb arpl mul cmove jp scas ss es sub jno push push rcl xchg add cmpl push test out fisttp enter jne push xor xlat mov fbld orl aas xor insb or out mov or jne mull fwait in xchg mov push mull cwtl mov push wbinvd add (bad) sar pop mov (bad) sbbl cmp (bad) iret dec lock js int3 push gs mull push jmp decl adc jno (bad) fucom mov sahf test and add jp shlb ss mov cli js leave fisubr mov inc xchg imul pusha and pop (bad) lret mov dec daa shll imull bound cmpsl inc lods mov push ret mov je mov push int xor sbb hlt lods call outsl lods cmp (bad) icebp stc jp out ret xchg outsb loope (bad) cmpsb jle sub or orb adc sahf mov sarb sahf lcall fnstsw out mov fsubr jl lret js mov jle pop je dec frstor jle jae repnz fs (bad) jle stos inc mov jle jge outsb sbb push dec jle ret js push adc bound inc test jg int3 (bad) fnstsw inc inc inc add and pop adc inc cmp xchg adc fild cmpsb cmp lahf notb in leave xor push imul add xchg adc cmc jg btr and fidivl fsubrp icebp or jbe add popa imul inc pop clc pop std cli xchg add (bad) lahf inc pop icebp xlat or cli pop in dec push hlt daa cmpsb dec pusha dec fistp mov adc std push pusha push test mov gs adc cmpsb pop insb xchg sub add xorl scas scas lahf sahf loop mov cmpsb cmp add ds xchg mov add jle cltd in jl outsl jle or dec or frstor ss mov add call stos lock add jb jne jbe push mov (bad) add dec idivb out das pop push add mov jg mov xor mov sbb (bad) idivl fs lret lahf icebp inc xor mov pop pop or je pop aaa test clc jb sbb xchg in cmp data16 and or sar jns push push mov enter movsb add inc fimul mov cmp mov pop mov add inc (bad) fldt loopne int and and pop ljmp inc sub es orl xchg mov lods pop jp sub cmp jl stos add jbe adc jle dec xchg orb xchg mov adc (bad) (bad) xchg dec mov pop inc xor cli xchg cmp add lcall or sub adc movsl loop mov jle incb dec sub dec xchg test jns push xchg andb mov inc pop int3 push xchg jle int sub movsl mov pop push pop pop insb lods out and sbb bound push push js lret mov repz add cmc scas xor dec and sub daa jge cs xchg xlat jle mov push xchg jle outsb cmp pop repnz out scas lret pop test add rclb xlat mov mov aam dec pop fisttpl lret test mov cs ficomp inc push xchg jp mov arpl sub addr16 jo in ss in (bad) outsl loop in sub test roll sbb xchg repz xor loope es mov orl lcall cmp fnsave mov jecxz hlt push stos and fimull bound jl inc in jnp lcall or xor push and faddl or push mov data16 inc hlt xchg fmul pop es sbb repz jo sub xchg or push movl sub pop ja aam mov cmpsb mov cld outsl cmpsl sbb jnp pop xor cmp dec xlat xchg (bad) or aas add dec sub add into mov clc rcrb dec outsl (bad) push stc xchg out dec das add fsubrs imul xor leave fidiv (bad) cmp jl push xchg cli mov clc jnp aas inc or sub test std (bad) mov aam push mov sbb sub pop rcrb or and or dec mov jl xchg push (bad) out pop jle cpuid jmp outsb lret mov (bad) xchg pusha push jmp dec xchg lods insb push cwtl add clc mov jnp sub rcll movl xor jp push xor mov inc ret fisubrl push dec push jle mov in js xlat shl fsubrs cli loopne ret test es mov int3 jle jg sbb mov mov cmp js into push dec mov mull rcr lea (bad) xlat pop fdivrl dec sahf cld mov popa jo mov or stc ficompl or cmc xchg stos (bad) xchg into jle fildll adc mov mov jp,pt notl call mov pop nop xchg fldenv xchg jle ds repnz cmp adc or rol push add das xchg insl out xchg loope jo push sbb or jg adc xchg (bad) push sti int adc or or xor (bad) loopne clc and les xchg cmp push sub push xchg cmpl push dec into inc shrl push jb push pop cmp inc jp nop iret jae jle shrb push and dec cmp inc sub imul push or and cmp cli add repz jle cs fadd pop mov jle nop fistpll aad out push xchg stos jle mov and mov out jle,pn jnp push xchg (bad) mov sub push sbb xor scas fisttpl xchg inc test push (bad) jle shrb hlt xchg jle push test jle mov test outsl je imul sub cli jle,pt mov fsubrs decl adc mov js mov xchg movsb and sarb jg adcl adc sub jle xlat mov sbb push cmc inc add out shrl sahf cld xchg fcomps ret lret and int and test sub in dec adc mov cmp xchg or lret mov jne cmp fwait sbb pop stc and js push sbb repnz (bad) adc mov cltd cmp clc (bad) jle hlt sbb add jo push lret js pushf (bad) shrb sbb sbb mov and dec mov (bad) pop push jle pusha mov es dec sti lcall add scas sub jnp les stos jmp enter cwtl je lret jle add out (bad) cmp (bad) xor pop xchg idivb js push inc loopne jmp out and pop jle pop xchg jbe pop rorb adc dec push (bad) mov popa push xor adc rclb out pushf cmpsl leave and pop add test adc rorl mov cmc cltd out sub or xor xchg int mov cmp test pop mov mov adc sbb sti jp push adc sub pusha sbb aas add aaa lahf clc cli bsf mov test popf xor and cmp cltd dec lahf or xchg xorl (bad) daa ret outsb mov addr16 pop incl mov divl arpl xchg mov mov xorl movsl jle xlat je rcl mov sub xchg cmp rorb sbb ret loope cwtl test push js (bad) lcall pop loopne insl cmp frstor inc movsb and stos je leave add pop jle add cmp lret (bad) pop dec mov mov or jo push xlat testl fwait pop imul jl dec inc pop les and inc dec lock stc lcall fiadd iret sti mov jge inc mov aaa push aas stos xchg or dec pusha adc repz adc imull shufps fcmovnb lret (bad) inc and repz (bad) or and xor adc imul jns push mov mov sub xchg sub mov lret pop (bad) sahf pushl sub fstpt jb std mov das pop xor adc push pop pop das cmp (bad) sbb lret clc out mov dec cmp call cmp pushf movsl fisttp add fwait cmc mov iret mov clc adc mov push aam jne mov sbb jp inc mov xchg pop mov adc aad fnstcw movsb push mov mov jle mov imul icebp mov shr js popa jo pop jp push jle pop adc mov add mull fs or sub (bad) je shll pop stc test mov mov mov subl mov push xchg loope dec jle,pn ja jmp loopne sbb xchg movsb shrl rcrb out cmp and out inc jle sub (bad) jle or add or fwait int pop sbb daa add (bad) je add xchg mov div jle push flds sbb jg cwtl xchg sahf lds or jle jge clc cmpsb adc out cmp jle and jb sbb pop jle stos or adc mov aam (bad) inc adc xchg cs mov lea mov mov mov jle out sub mov scas inc add or jle dec sub gs test sbb cs hlt jle and lds leave xchg jle inc inc mov les mov or or add cltd pop fnstsw and sahf push stc iret sti dec cli test add dec mov mov je mov inc pop xchg xor clc lea pop mov sub inc and jnp xchg mov sub inc push or mov outsl cmpsb shrl mov fldcw inc clc jae jnp or daa push dec frstor cmp push pop lcall incl lret jge sbb xchg jle lock jmp fs movd imul sub mull out jle add mov mov cmp adc rorl test jle cmp dec hlt cli push (bad) into fdivp or pop sbb push pop fcompl sbb jle inc imul xchg inc repnz cli mov testb ret cmp sbb lds jle and xor dec xchg movsl gs mov sbb stos add jle loopne out int3 sub jae adc shlb add mov jle addr16 cmp cltd adc repz xor cld inc mov mul jns sub (bad) clc test xchg callw pop js or (bad) mov xor cmp loop add inc scas sub mov jle ss jp xchg test pop int cwtl aaa psrld jle imul push fucomp jg out sbb sub mov xchg pop add add jg push pusha jle clc and jg divps fistpl lock fnstcw pop in fadds ffree lea xchg movsl inc pushf fisubl pop pushf jae ds aad aas cli inc imul pusha jns cltd hlt cwtl jg cmp sti stos aaa cmp imul mov dec xor cmpsb rcr repz in add adc cli xchg push sahf out add mov or clc aaa and aaa mov sarb imul test insl pop sbb or pop (bad) jo gs ret inc mov inc les jbe cmc xchg xor inc (bad) and lds lret jbe sub push cltd fistpll or sub clc lea xchg outsl std data16 mov pop (bad) jge leave aas push rol add sbb repnz mov lahf cmp push sub (bad) jle and stc xor jmp int (bad) mov jecxz push aam rcl inc xor flds dec (bad) imull dec and xchg call mov inc or movl repz movsl dec fstpt punpckhdq or mov (bad) dec push outsl sbb dec add clc mov sub (bad) mov inc and pop cltd decl insb add sub or xchg add mov lds adc jge (bad) mov mov xor js and sti idivl mov les into push dec (bad) shr hlt lahf pop jl or xchg xlat mov ret push fldl xchg cmpsb or sub lods lods orb dec gs sbb cmp mov sahf mov loop cmp jmp ss sarb ljmp dec aas or pop int3 mov inc (bad) cmpsl jle lods dec test push xchg or or pop fbld push mov or push pop sbb int pop ja pop ds add sbb pop popf (bad) popa adcl stos rolb out je aaa rolb test or scas bswap in insl or imul mov xchg jne push iret negl jge outsb jb pusha stos in popl aaa cld (bad) dec mov clc movsb sub pop mull inc test inc add mov xchg ror xor and add pop pop xchg jmp pusha jecxz cmovno dec comiss jl push (bad) or cmpsl mov sub sbb xor in mov inc arpl or cmpsb or mov movsb je cmpsb mov iret and dec or aaa sub cmp fsub inc lods lcall mov rcr sti xchg test popf or enter aam cwtl inc fnstsw xchg ss inc cmp clc xchg insb add rcll jg popf scas pushf add jo inc in jge loopne sub fwait clc mov and fiaddl jg add jecxz inc rcll dec cmpb iret insl inc add stos mov dec dec push jmp mov aam mov push dec popa jge test jmp xor pop mov push fistpl xchg jl out adc jecxz sub jb jg iret mov jnp push jle (bad) lahf and jle movsb (bad) mov pop bound cmp outsl add push (bad) ret push movsl gs fcompl addr16 cli xchg das sub dec mov push ja push je xor jl mov lret xchg jle call add jle in mov xor jle cmpsl inc xor iret dec cwtl in xchg jl sub scas popf sub pop inc mov (bad) nop fnop (bad) out es mov (bad) frstor push int3 xchg (bad) xor popf in push cld nop xchg jne arpl or jb pop icebp jle cmp adc push jle daa sbb mov and and cmp mov fild scas out pop pop aaa dec js stos push jle test mov subl aam cmp (bad) mov in xchg jae xchg xlat mov mov stc scas fscale ljmp and rolb pop in dec nop or xor inc mov jle lcall jle test cwtl das ljmp outsb cmc mov insb fs cmp xor in xchg dec sub adc addr16 mov mov test sub pop call in jle lods add push dec push cmp sub jle movsl mov push cmpsl bound push lock and (bad) int xchg and jle repz pop movl push fild jbe and jle (bad) lock jg push xor enter fistp jp lods mov ds dec cs pusha movsb xor and fdiv scas ret and icebp jae xchg cmp fbstp add sbb sub das cmp into cmpsl imul hlt sbb outsb xor icebp scas pop mov pusha inc mov je mov and shrb add mov cmp lret fadds ja fcomp jecxz inc xchg jno (bad) pop mov push cmp jbe add outsb rclb pop push cmp xlat or vmovups rcl sub pop jae test cmc pusha mov lret es and rcl out pop jno loop push pop xor sub or stc jno lds add call ror sbb clc sti ds dec add addl mov push xchg add pushf repz and fwait or jl push int repz dec jae mov cli out add pop outsb cltd push mov (bad) mov add mov das daa insl push les dec jmp aas jb jge and push cmpsl jl rorb enter arpl iret xchg sub adc pushf adc jo pop daa lcall add add pop leave int jl (bad) push jecxz adc xor and mov pop outsb mov divb cwtl pop pop lret fidivl xchg sbb cwtl and out sbb gs push repz sbb out or outsb xchg xchg jo inc xchg cmpl jnp push pop and cmpsb imulb aaa push sub lret dec dec cmp jmp fstpt mov ja xchg inc xchg or ss sub mov sahf jg stos cmpsb jno or mov mov add jnp dec push jle cmp por and ja jle add imul pushf cmpsb lret neg pop jle aaa xor mov dec mov add test fdivrs pop mov sar jle mov sub add aad insl sub pop scas test popf jns jle jnp (bad) sahf loope xchg jle fmuls mov test dec adc fdivl je sti xlat sub inc jecxz xchg test lds mov xor adc sbb xchg inc sub jnp jo jo mov pusha add jle leave jge mov sti cvtss2sd or jnp jl lods enter or xchg popa jl pop andl or in push faddl adc add mov cwtl jge jo sbb aas jne mov out (bad) nop or pop inc jo (bad) jbe xchg mov fwait aam sti cmp (bad) aad dec jg xor push fs and push jg scas cmp (bad) push shlb in into (bad) clc inc or jmp stc xor mov shll and or nop dec (bad) mov jbe and scas enter insl pop mov jg in daa loop and mov push into xor jb add lock mov lods dec ss loopw scas jle cltd (bad) out (bad) fsubrp jle jnp cs fistp fldenv dec add loopne loope jns cmp pop stos mov pusha xchg add hlt push jno es es xchg (bad) lahf pop jecxz push and push jle jne push int pop cltd jle mov add jle mulb cld or pop pop out std pop jno push scas pop pop mov push pop mov sbb fwait jle mov mov inc pop xchg sbb pop mov xchg subl add loopne,pt push inc xchg xor mov jle lret ja adc mov cwtl inc fs lahf jp mov jge stos xchg push xchg mov mov int3 or (bad) xchg mov jle and pop outsl (bad) add jmp out fisttp lret test adc or ds xor mov xchg arpl mov cmc test jmp jp jle or jle,pt adc test pop add mov mov fwait xchg pop jle cltd test mov in add cmpl popa push sbb (bad) mov dec jle pop test inc mov inc xchg push xchg orl int3 jmp jl and into xlat mov cmpsb in mov out stos aam es pop pop jae cmp and in daa movsb imul aad aas in adc ss jecxz sti repz pusha mov cld outsb sar pop dec cmp pop sub cmp sbb dec xchg mov pop inc add les je or mov xchg pop xor mov fstpl and sub push pusha out (bad) mov push mov jo or push inc dec pop negb jbe sbb jg inc sbb clc clc jo mov inc test (bad) int or jae popa xlat xor popa insl mov cli inc sbbl jl adc sub xor in jnp push sbb sahf jg mov movsl pop push cmp test push push and dec aam jecxz cmp or pop sbb sbb cli push jle sahf pushl clc sbb mov mov push repnz mov jmp popa pop into sbb xchg xchg out (bad) aam aad mov movsb (bad) ret lock (bad) sbb sub xchg test shrb outsl cmpsb cld inc cmp xor dec fcomi xchg aas and mov bound jne pusha jl and ret mov sbb mov and test add mov jmp out insl lea add int3 hlt (bad) lret jns setp mov xor fidivrl es lsl xchg (bad) and pusha pop jae addr16 movsb bound add xor mov pop sub or jae cmp aaa jle inc add nop lods xchg clc ds dec xchg stos jge ret (bad) push fcomps pushf cld jmp in (bad) dec scas and repz adc popa pop jg rcrl sbb outsb sbb mov sub das mov int test popf push sub lret cwtl popa push les sahf sti pop leave inc cwtl lds add pusha jbe mov (bad) sub push outsb adc shr mov add iret jns int pusha ret or cltd xchg sti xor loop (bad) ror adc add addb jmp inc repz or mov std mov sbb cmpsb les add lahf icebp mov inc loop and cmp or pop dec sbb xor or rcr cmpsb xlat pop jl xchg in into xchg pop mov decl pop out into jl aaa jp or movsl jle into mov cmp mov xchg jbe adc jb pushf js push pop pop dec leave dec ficoml jno push jns pop out pushf xchg mov loop xchg dec or (bad) mov lret ds inc ds out out mov (bad) jecxz push mov inc mov and xchg jge xchg jle les adc scas scas ret movaps js cmp jbe add cmp inc pop scas shrb xor add jbe fs div scas jg js adc or jle push (bad) ja scas jecxz sub rep js adc or jmp out jle ret adc push nop (bad) jge sub and clc sti loope mov fdivrl pushl jle ret cmpsb (bad) xchg jae out xchg mov sti ss or in outsl jnp xchg ja pop test inc out in jb mov xchg or dec xchg das jb mov pop call dec ret cmp and clc test mov and jbe xor ret sbb xchg fiaddl push jae mov ja add (bad) arpl out dec enter lock aas (bad) fisubrl mov es cli inc pusha xchg add and adc call jo ljmp and fwait jns arpl cmpsb sbb push (bad) jmp sarb jne fwait xchg sar mov jns insb xlat es sbb inc xchg and out out (bad) xor pop pop shr jns push or adc fistp insb mov push (bad) pop mov stc push dec inc lcall jle sbb cmp enter mov mov mov fwait jge xchg mov inc and test jbe mov outsb mov dec divb aas inc test mov cmp lock fiadd insl and sub movsl inc lret jp mov pop sbb jle inc pop adc mov stc lret stos cmpb sahf pop imull inc mov into (bad) clc push mov orb pop jb cwtl (bad) pop adc sbb mov and ffreep enter or xchg in lret ja mov pop sbb adc xchg cmpsb das add push cltd sub int3 push popf push loop mov push aam jns fs cmpsl inc push mov xchg inc dec jno or movsb xlat add sti out mov inc movsl sbb pushl jle (bad) push xor cltd xchg inc adc repnz icebp andb notl mov jle popa int3 aam in lret add jge test enter and int mov cmp xlat jp add cmp jle repz jp push fstpt dec xchg mull out insl pop scas rcll ljmp add sbb jle mov push adc repz jle mov jb pop insb das faddl test cmp mov xchg scas sbb fcomi aam sbb adc mov cli jo pop xchg push push cmp inc jp je testb (bad) pandn int pop mov push push cs mov cmp cld in mov (bad) mov leave ja jp (bad) jle push jo sbb add pop std jle aam xchg or imul push mov jb add cltd mov arpl outsl das lret testb sahf adc jle mov insl sbb out lahf rcr and xchg or jle std fimul xchg and nop xchg (bad) jle push lods cmp fs xor sarl mov xchg cmove pop jb jnp adc and jle jmp cltd push (bad) ljmp ret pop jle inc movsl add dec push mov std pop into mov push daa lret out jo out push out sbb jb scas jnp push xor mov jle sbb lods push add dec into cmp mov pop scas dec push cld enter adc jle xor lahf lods add pushf aad rcrl jle sbb in xchg lcall xor jle divb mov dec push sbbl xor cmpsl xchg xchg ds outsb xor jle (bad) lret les fnop decl ss dec rcrl out clc mov loopne cmp stc test (bad) inc jle lods sub jle cmp jge mov retw aaa lret mov test jbe inc lds cltd jecxz add ljmp push pop fs pop out dec and pop cmpsl xor mov inc mov inc into cld lods add sbb jns std push pop sbb stos stos mov or add (bad) pop aad (bad) mov push push cmpsb pusha aaa push pop gs imul xor gs cld mov mov lahf out dec xchg mov push sub inc mov fs imul ret popf outsb jmp sub bnd cwtl fisub data16 pop lret lret (bad) dec inc rcrl jle and test push jl insb lret jno mov std adc sahf dec add jp ret xchg call jns dec cmpsl jle jo add jne scas js ds pop cmp dec mov call das or fs adc clc xchg sub outsl (bad) jg jle in nop outsb jge mov mov add imul mov mov mov fbld lds scas movsl cmpsl out pop xchg cli mov xlat fldl mov add out ret pop xor aaa test cmp cwtl xchg xchg xorb clc mov or jae ret sti pop cmp mov xchg sbb hlt add scas mov in sbb fs aas je jecxz std push in pop xchg out adc sahf out push dec iret movsb jle loop cli (bad) je fistpll sub mov cld pop push fmuls pop fucompp jb ja loope or dec jle movsl in mov and movsb cmp cltd loop fsub or std scas add xchg mov add sti xor mov mul and xchg add jle push movsl and das mov inc ret out mov xlat push iret jns das jge dec jo sbb cs ds enter movl adc jmp jbe mov pop pop pop popa dec pop das es lods lahf cmp movb sbb fnstcw or wbinvd aaa jecxz test inc gs outsl or nop sti popf dec adc push popf hlt (bad) xchg stos push push dec leave xchg inc cmpsl ljmp cs idivl outsl xchg jns jno jg xchg jns xchg or repz fwait jmp inc repnz adc jnp or xor cli mov xor pusha cwtl cmc fistpll push ret mov xchg hlt stc std xchg cmp loopne out (bad) insl or pop lea in mov cltd mov out mov jle subb lds and add es add aad lret faddp in mov push data16 pop jnp mov xchg jl jmp push jbe push jg add inc ja mov xchg ljmp mov mov push mov push inc data16 in orl add add scas lret and clc es lock adcl or into fwait sbb dec add incb ss xchg cmp mov cmp xchg inc jne int3 nop mov outsb sub inc mov add std mov les xor xor xor jne mov mov cmpsl xlat jae and mov stos or sub mov dec and jle push inc js inc xchg fstpt dec inc orl rclb shrb mov dec pop test jl test push inc jle mov mov out aam sahf add cmp divl cld out jo in std lret lahf ret cmp dec mov cmp outsl fwait mov enter jle into fbld scas cmp (bad) add scas scas inc inc mov movsl xchg rorl mov xor or les clc in adc mov adc ljmp and push pop adc jecxz mov inc pop cmp xchg inc lods testl mov xchg sub sub xchg mov jo mov clc in out and outsb (bad) stc jns jns rorb les cmpsb cld clc or loopne cmpsl inc ffreep fstpl js mov lahf lret push (bad) jle cmp mov xchg pop sbb inc lret push or ret lds test pop mov jb mov in xchg scas jns daa mov std stos xchg andl adc lea mov mov inc add mov sub adc jmp or aad bnd out pop xlat jle sub out cmp push repz sub aaa jae mov adc popf mov xchg push imul rorb mov cwtl jb dec jl ror xchg mov in jle out mov mov adc xor lcall or xor fidivr or sbb dec pop mov push stc sbb test and addb jo adc push jb stc and jp idivb lcall rol pop out add xor mov mov pop test mov dec adc mov bound inc mov mov push andb mov loope mov mov and cwtl xchg jno call mov mov addr16 js lock lahf into mov mov icebp xchg adc jle aad test addr16 stos mov les push mov (bad) lret dec scas roll js (bad) jnp mov ret and and dec jmp in scas mul clc jl xchg leave sub out jle fnstcw xor xlat jo push mov mov inc cmp fwait pop adc mov ljmp mov or mov dec shll (bad) in loopne dec or pop cmp aad mov subb sti jmp sub inc cmpsb stc mov cmpsl inc lea stc xor insl cmp mov fisubl es stc (bad) psubb jle cmp jmp (bad) mov lods int jle xchg outsl pop pop push lahf fwait pop lahf into adc dec jp jnp aaa jle out xchg adc int3 test lahf adcl jmp jle or push mov jne insb int ja cmp jle movsb and aad cmp inc dec mov (bad) and xor sahf (bad) enter xor in lds mov jo (bad) into or sbb inc (bad) lock pop clc push xchg lret fwait std mov sbbl xchg clc xchg aas (bad) (bad) gs lods popf push adc xchg jno mov cli nop sub xchg pop mov call adc mov test in xor sub mov fstp and mov in push and enter push jle mov cli inc lods jl data16 mov push sahf inc push pop xchg adc (bad) fcomps scas mov ret mov jmp inc out int3 out pop gs cmp dec or sahf scas icebp pop addr16 stos mov in fldl mov adc sbb adc mov fldenv aaa push test ja jge and or jne in mov fldl das mov out add or dec or ret (bad) sti jb push sub pop cltd inc jle arpl sbb icebp sbb hlt sub aaa inc add fistpll (bad) icebp sbb push xor cli pushf jle leave jno cs cmp add mov xchg xbegin imul out sbb jle cmc jae xchg hlt push xorl and dec lahf ficomp mov sbb ss in stc and pop jle dec add add negl jo arpl leave mov pminsw test mov out (bad) or jle outsl cmp insl fstpt dec rolb imul jecxz sub popf clc in push push arpl insb sub mov cmp jmp in stos dec mov mov (bad) jge sbb data16 ss and loopne and push es clc xor (bad) dec or scas xor lcall (bad) jle pop pop and jle cli lods sub clc ret mov stos xor jle icebp aaa mov jp jle mov dec sbbl cmc out out test and pop mov jle sub mov inc out mov inc mov xlat pop (bad) ss dec jle stc sbb jle in lret or popf jle jb mov and pop (bad) insb dec push shrl add add sub jle cwtl hlt dec pop add xor mov (bad) pushf clc in mov test ret push shl xlat lahf inc mov adc fwait lcall mov ds clc imul or dec xor xchg leave xchg dec cmp (bad) or jae xchg adc xchg loopne test mov into push out loope js mov mov cmp jns xor stos pop sbb faddl cld and andps in cmp sbb arpl out lret mov sub xlat jg mov movl jle and push jns scas call sbb mov and mov inc dec (bad) and mov loop aaa mov lahf push xor inc push jl inc inc add das sbb xor xchg pop fstl aaa push lahf in mov in data16 jle push inc sbb sti push push sub inc insl and xchg mov test add mov insl cmc out arpl js adc ja mov movb adc push lret jo sbbb push ja xchg daa out and ds scas or pop jp enter cmpsb xchg fs lds mov into sub cmp and in xorl mov out test adc xorl gs (bad) (bad) mov scas (bad) pushf fnstenv sbb test idivl add push fdivs shl (bad) dec les cltd scas jmp add pop (bad) lret lsl sbb cmpsb lock pop daa adc jle xchg or or test repz sbb movsb mov inc je mov mov or clc and cmp push adc mov into jle xchg jo jns cmp add in scas or push xchg dec add sbb inc jmp add sar das sbb test repz mov ja into call imul cltd inc test jle jbe add adc mov jns bsf mov jle lret mov push fild jle adc add call aaa cli in push lret xchg pop dec test xor jge push jle push rcrl or lret enter divb mov pop cmp jbe es in lahf adc and clc sub loopne pushf enter dec movsb test adc cmpsl cmp pop mov in test aas jbe and (bad) adc mov inc jp lret aas lahf fldl aad jge push xchg push or jle add inc cmpb pop sub insl fbld out out dec in xchg (bad) rclb imul or scas inc lcall push mov addr16 int jle jno push pop int3 adc aad cmpsl imul xchg das cmp popa arpl push push xor jg stos sti mov out push dec jge mov mov outsl sub ret daa and jle scas cs xchg xor pop out add mov cli dec cmp stos jle xchg cmp imul inc int3 mov adc daa loop test nop icebp jle or addb lret mov addb out jle data16 jnp cs push stc popa addb std inc sub divl sar outsl mov in jae mov ljmp dec push test jle scas pop ljmp xchg mov popa (bad) leave jne inc das jle sbb rclb cltd pop push jle outsl stos mov daa pop xor mov cmc xor stos mov jb mov jle or fistpll push sbb cli pop add (bad) movsb jmp shrl jns in jle mov push in (bad) jle adcl adc lret and add pop ret test push ja outsl and popf inc imul cmp mov mov insb and out (bad) sbb push jb ljmp lret shlb das push scas xlat mov mov mov push repz cli xchg leave pop and sbb xchg bnd lcall jle sbb push add fstpl fwait sub cmp iret or sub dec jl pop add sbb mov (bad) mov push sub movb adc xchg sub test in dec jge imull movsl mov mov aas pop das mov inc outsl (bad) mov popa jle cmpsl or push outsb fwait mov aad arpl shll (bad) sahf aaa and (bad) mov out fist int3 mov lret xchg jmp test xchg jle lds cs jbe jle jns inc push sbb insl outsl xchg jo sbb mov adc iret push leave or and jle out xor push jle cmp pop or movsb jle pop outsl cmp and in test push int3 mov ret or xor aaa jbe outsl sti movsl inc sahf js imul scas cmp ja xor in jle rclb xor out xchg test int3 popf push clc outsb aad shll stos (bad) out mov call ret (bad) and fstp inc sahf movsb pop mov jno andb fisttpll dec enter xchg mov gs mov lods sub sti mov xchg dec out cmpsb es mov xchg jbe mov xor jge add or xchg pop dec cs pop in mov jno bound leave adc mov sub movsb in jns pushf mov jmp fisub sub bound mov xchg mov dec mov xchg mov (bad) imul outsl jle fwait lods xorb adc insl outsl adc inc xchg mov shl cli adc xor add das push or sahf test xchg add stos clc dec pop lea (bad) mov lods out xchg popf and sub xor loop enter xor stos pop sub stc mov ja call outsb pop xor xchg scas rcl lret pusha inc ret pop daa jle inc in loop cli (bad) mov rcrb mov inc mov xchg icebp into xor xrelease (bad) fildll mov mov sbb cmp mov push xchg mov mov lcall les inc imull fs xchg add inc or mov aad sbb jo inc and cld adcb jbe jmp das pusha mov cmp pop or call (bad) test int3 popf lods jnp cmpb ljmp clc adc dec xlat cmc or or popf fbld push repz lahf aas and insb jae (bad) sahf add or xchg leave mov shrb es ret stos xor xor inc jl sub lods fwait imul leave xor xor pusha adc stos sbb scas clc sbb push ljmp or loope xchg repz lcall jnp dec xchg xor push push imul pop jb xchg sub lcall add jle movsb xchg imul pushf mov addl (bad) (bad) daa pop xchg cvtdq2ps mov hlt jo sarb ljmp pop xchg jle sbb (bad) mov add dec jle xor push xchg sbb jge jns (bad) adc jl sahf pop call (bad) pop ror sbb (bad) or inc lret mov dec jge cmc mov lahf popf out aam insl ficompl lock je nop (bad) iret outsb dec adc mov and gs scas loopne mov dec xor sbb dec out (bad) xor sub sbb test sbb mov lcall or lahf aas clc xchg js pop mov push sbb lods in jno loopne jne test int3 dec adc lret push add mov mov pop movsl push lret xor add out mov mov aam inc leave jl cmp into add mov pop cmp add push out (bad) cli dec arpl xor mov add jp mov pushf lret fidivl hlt bound sarb leave inc sub dec fisttpl dec pop or sbb in das aam inc or dec ret xchg and leave pop fcoms icebp popa pop (bad) neg xor pop je cmpsl mov sahf sahf lret dec aaa mov dec sub lds sarl push int3 scas jg cwtl pslld adc jl pop pop clc js push aaa mov mov xchg cmp (bad) jl iret outsl xor or mov out aas inc aad mov fldcw ds adc popa int cmp push (bad) fimul xchg roll push les in mov out pop xor (bad) mov xchg fidivrl movsl mov or xorl call jmp inc and in movsb std inc xchg lret cs pop aaa shll jg sub sub loop loop xchg das call imul rorl mov js lret and jo outsb jg jno test add jle cs in lcall cmp dec sub jle cmp push jg scas jbe sbb bnd stc inc nop insl sbb xchg jle loopne push into stos (bad) out in outsb xlat jno sbb jle add sbb jge jl push xchg data16 test jle pop push cmovnp rclb push pop ds call insb fisub aas jle cli xchg into ds in push jle dec lcall xchg push jno pusha or test ret jl push es scas hlt and mov jle xchg call jb scas jecxz imul pop push fcmovnu pop lods out jle,pn cmc jl or xchg adc xor aad xchg cmp in mov push lahf mov push xor mov dec push or dec jg sub jp mov push ljmp dec popa test wbinvd in lcall pop sbb mov sub mov xor and arpl jns or fildl cmp int3 mov fiadd jle jmp pop xchg clc (bad) insb (bad) mov adc xchg jg xor or xor pop lcall add dec es mov cmp adc insl fild notb inc jle movsb dec xor pop mov into mov mov mov add sub or sub cmp rol in dec push int3 jg jecxz add pop aam push pop inc xor ljmp lret lods add xchg inc sbb adc je (bad) repz fs adc jo jo repnz or fnop int3 aad pusha out dec dec imul cmp mov dec inc mov cmp jle xchg xchg fimull xchg pop fwait sub cmp jae pop inc jb jmp pop loopne insb js inc ljmp mov cmp xor sub rorl push dec push push popa mov add out frstor bound push jo imul loop push imul das int3 inc jg or xchg and cltd test pop mov add sub ret loopne jg arpl wbinvd add adc push out jno sub pop xchg ret movsb jb jge pop inc cmp sahf mov stc pop jo xor mov mov cs ret xor or les xchg jmp out sbb xchg dec idivl std out push popf add push out mov inc or jg clc add jno jmp cld rolb jge mov add mov leave push dec push xor mov pop psrld dec sti mov lret and lret cmp xchg cwtl xchg ja clc dec xlat loop mov inc bound pop (bad) scas pop stos push popf ret cmpsl (bad) jne dec rclb fsubl pop xchg or int3 cmp jne adc mov xchg repz sbb or popf jo add xor pop sbb push adc sub or cmp sbb out cmp inc aaa xchg xor inc adc xchg sbbb pushf imul and imulb cmp sbb mov mov sahf (bad) add pop leave jo ret les aas (bad) call es jno outsl jle jnp adc jle adc jle xlat dec sub push sbb dec adcl push adc movsb adc jp fiaddl sub out pop push xchg ja mov out fcompl jl dec inc (bad) cmp inc je,pn jle loope (bad) fstps cltd jo jb mov dec mov sbb mov test in andl sbb jle mov daa jae mov pushf mov inc stos jle fisub (bad) jle imul inc mov add addr16 adc xor scas lds jne dec fsubrp addr16 out xchg cmp mov or hlt mov mov xor xchg cs (bad) jno insl lahf inc mov sbb inc (bad) dec push addl jae jg add push push dec ret dec dec xchg ja scas (bad) adc lcall or pop ds dec inc je mov out (bad) dec push das jno adc mull faddl cld dec sub popa xchg pop imul vmread sbbl mov adc xor scas mov fcompl xchg jle or insb jle jo push cmpsl ss add into sbb jecxz inc test pop jno xchg jle xchg push cmp psrlw dec jbe mov jle dec mov popf xbegin mov bound or xchg cli and cltd or inc js xor xchg xlat cmp mov pop (bad) in xchg pusha lahf pop ja jle adc mov and inc aas hlt jle adc (bad) xor cmp das cld push jle (bad) jl mov xchg add push aam dec pop int movhps pop add mov jmp cmp or cmp xor ret jge shrl or (bad) adc out mov ffree pop (bad) push fidivr data16 sbb pop xorl jbe je (bad) (bad) or sbb cmp jo xchg arpl and ljmp imul iret lea xor out dec popa loop pop int3 fisub jae fpatan mov or push xchg mov inc mov xor (bad) sub push divb cmp std cli inc iret inc shr xchg popa cmpl push out leave pop sub sub dec ret add or rorb sarb shld mov clc xor pop stos popf flds pop lcall ds int3 mov pop mov mov jg sub sbb sahf mov and jl sbbb (bad) out dec and mov inc cmp lcall ds xchg dec int3 (bad) std or jmp in xchg mov cmc mov in cld clc inc pop je lea pop test insb jecxz cmp sub add jp mov mov mov and mov push outsl pushf cltd sti fnstcw sbb fbstp lods lcall ljmp jle cs jmp inc jle lods repnz arpl dec add jle add les and push or push jle popa or call mov jo dec adc dec (bad) jle aad dec dec and or out in daa and (bad) jmp fsts push addr16 imul add pop xor ds (bad) jg push jns jle xchg dec neg lcall dec adcb movsb leave mov inc je inc jle dec xor jnp adc into add jae mov mov ret sysenter pop rorl fisttpll hlt test (bad) xchg mov jp sub ljmp cs dec fiaddl mov ja cmp bound push sti jle adc pop fdivr mov movsb cld push test jle push ds inc cmpsb lods jle (bad) lret loope jle ss (bad) and jno out add mov mov xchg pop pop dec stc xor movsb cmp jle mov lahf out mov xchg push dec movsl out xchg lea fsubr (bad) fiadd push cmp pop int3 mov (bad) mov xchg scas lds call aad cli add out mov dec leave test or fiadd xor push cmp (bad) mov jge out push std cli xor ja or push cwtl dec mov call mov xchg rorb gs sahf jns pusha sbb mov out ja in pop jo mov jnp add (bad) jae push xchg inc sub pop dec push cmpsl jbe cs fldt xchg jno data16 cwtl xchg xlat add xchg fcomp jnp clc fwait inc adc push inc into outsl dec dec sub jns rcll xor add notl fsubrl test (bad) fwait insl jg stos sahf aam fmuls mov mov repz std sub push mul xchg das jb sub push stc dec add jmp mov test mov mov sub into jnp dec insb push lret addl imul addb fsubr mov out lret (bad) pop jno push push xchg sub jne dec data16 push ja push cli dec das or fldl dec xchg scas (bad) leave mov in push push sub and aaa ret xchg cmpsl xchg dec pop xlat pop or jg and jne rorl adc pop in mov and pop and subl pushf pop and in mov int3 push adc push (bad) (bad) sub mov lock call mov mov xor into aam (bad) js mov push xor pop jmp movsl outsl sub cs cmp or and xchg push nop pop inc xchg das sti dec push jle push cmp popa cmp push push mov gs jmp jns sahf fs jbe sbb adc loopne call loope test xor mov ja outsl fs sarl insl sub ss push fbld sub xchg add push out cmpsb jle cwtl fs adc jle mov pusha std movsb dec push outsl mov xchg lock outsl cltd ss push jmp mov scas dec aad mov shrl bound mov mov mov and jno inc jle dec mov pop and pop jle out iret mov stos dec or or mov mov pusha movsb jne fwait adc mov cmpsl std mov sarl hlt pusha aam int3 inc das lret xchg cld pushaw jmp mov jo fnop add loop nop mov mov into cmp mov or mov cmp jl fidivr or sahf addl xchg xor scas insb daa loop jp adc cmp adc xchg push out ja sub jle notb cmp gs das popa cmc xchg frstor add cmp in jle pop pop enter pop jle jne sub je jle cwtl mov or push fdivrs scas mov jmp or sbb into or mov mov leave lds (bad) xchg pop pop or mov mov bound fld mov inc divb add outsb pop or or push in sub lahf sub adc push mov (bad) cld mov and int3 (bad) ret xlat cmc xchg sbb sbb pushf aas sbb jp cltd pop xlat cmp or scas incb xchg les and sti aaa imul mov mov cmp pop inc inc sbb aam imul fmull or test xor fistl pop jns jle pop xchg mov cmp push pusha lea in add outsb jae or ficomp arpl push cli jecxz and insb stos pusha in sub or sub je mov xchg jne jo pop rcll adc sub sbb jb sub repz jne jno xor (bad) inc lods push daa dec cmp dec sub out xor (bad) inc arpl mov out mov scas jp jge aas aaa cmpsl pop and out mov lret jecxz sub fwait adc cmp outsl out rorl push mov rorb nop jae add or (bad) jle mov sahf clc xchg daa pop and mov push mov or orb adc cmpsl pop inc mov jnp and jo lea jle insb push mov dec or add push jle mov addl (bad) jle mov test pop sbb cmp sbb mov out xchg mov jle add lret outsl out jb xchg xor and push (bad) mov outsl mov into cmp mov out or adc or push or es out or jae jae js dec into or inc je cli jns push (bad) cmc sbb cmpsl movsb ror pop sbb ret lret sbb (bad) mov popa jmp stos nop sub pop adc jl nop jle cmp xor xor leave cmp out xadd push sbbl push mov and sub call mov fucomi xor fistpll jle pop into dec adc push orps jle int3 xchg pop cmc inc mov into pop shrb sbb loop mov xor fucomi sub (bad) es or fsubrs sarl inc cmp sahf fsts lret xchg stos inc in mov insl pop pop fdiv js repnz add dec icebp arpl aaa push pop mov dec pop outsb mov fwait scas inc retw inc lahf push out and jl je lea aas xor push jne push pop pushf out outsb mov push sahf inc dec mov shl je pushf ror push cmp out sub cli and (bad) vcvtss2sd cmpsb adc nop add clc loope mov cmp inc xchg out insl cltd cs data16 adc in push shlb push mov fidivr decb cmpsl rcll jns fucom es fucomi sbb int3 adc jbe or inc add (bad) dec inc cmp (bad) jge gs test lock pusha jecxz fsts loope mov sub jo popf aad xchg jb inc (bad) sbbb pusha pop add or xchg adc stos and fsubrl in int3 cmpsb mov mov insl jp clc add ds psllq dec or inc xchg stos addl outsb push shlb push clc jecxz mov fildl ret push adc pop rorb leave xchg and mov adc dec out xor mov int3 xor imul je jo (bad) add xorb mov mov stc lret aam addr16 or ret test cld add mov push jle ret dec outsl inc lcall add (bad) je mov jp jnp push push das or ds jl (bad) mov gs frstor in cmpl push outsb popf sti das pop test data16 pop (bad) jecxz mov (bad) jmp pop push mov mov or push jmp push push lds int xor pop lds test add out cmp add loope es push shrl adc mov les shrb mov and mov jne cs je sub push jge sti enter call mov fisubr pop dec xchg nop loopne adc xchg adc sub ja pop mov mov stos push ds das jl adc sbb ljmp andl jle mov data16 ret sbb pop jecxz mov leave cmp sub (bad) jae jmp dec cmc insl mov xchg shr jle loopne cltd ja adc cwtl jmp and cmp jle mov push dec data16 dec fadds or imul mov mov je aad cs mov mov loope in fistp popf pop test add or cld movsl aad jne in pop sbb loop inc add pop dec addr16 shll outsl xchg push jp push fbstp outsb (bad) insb int sub xchg sub mov in inc add cmpsl ds mov jae mov jle mov pusha fcomps pop add inc cmpsl cmpsb popf fmulp and shl (bad) stc mov insl in add cmp inc lahf cld insl sub je cmp sub pop repz cmp adc fildl push cld ss add or mov ret std out int3 mov jmp push mov dec mov dec push jg bound jge sub in pop mov mov inc mov imul jl out sti adc xor pop aas inc pop mov sub mov pop (bad) jno xchg xorb inc push push jle or and ret movsb (bad) das punpckhbw xlat fs pop lret sbb and movsl mov mov sarl sti fnstenv mov mov mov sbb xchg or lods pop xchg xchg aad jle movsl popf mov add hlt cmp and xchg jle cmp mov stc xor inc mov mov cli mov insl jp adc fldt inc add scas les jle sbb clc mov fidivr outsl xchg ljmp add clc (bad) daa dec mov pop mov jle inc es repnz push sarb sub dec pop sub aad and sub mov (bad) adc dec jle mov mov cld push pop mov js clc jmp add call out cli xor mov arpl ds adc out loop std sub shlb cli adc inc fwait adc ja test stos jge inc adcb xor xchg and out cmpsb pop adc mov jle mov dec lods stos (bad) maxps ret out lods jns mov push (bad) cmp clc mov jle mov les pop mov cmp jle push (bad) sti stos xor cmp lret cmp sub std jle shlb iret (bad) daa aam into sti in decl jp inc sarb (bad) xchg xor loope fdivrl gs jnp mov cli mov jle pop xchg insb icebp iret jle pop sbb mov mov cmp mov shr cmp subl jp call or pusha pop notb mov jp mov insl scas movsl mov mov mov xchg lods jne jmp jae (bad) std add pop movsb jbe lret xor jmp movsl mov dec jp push xor or cmpsb incb xchg fimul or add xor ret clc sbb in push mov cld das incl xchg (bad) jle cmp fdivr popa push xchg aam inc xchg add (bad) int3 or decb mov in incb jbe pop andb or scas or mov inc mov aas or xchg cmpb inc cmpsb cmpsb push aaa imull dec push cli mov rcrb fstps xor add sti add dec and jg aaa push fwait popf mov inc or pop mov xchg xchg dec add ret adc xchg push sbb xor add je (bad) jo in jbe int3 mov inc and and xchg xchg xor pushl cmp mov fwait out add jl cmp or mov mov inc int3 pop dec adc cmp mov push (bad) and insl mov fwait jne in clc pop dec push cmp push ds clc ja xor test xor lea hlt dec sbb jb xchg mov jmp (bad) ret push int3 test jo and push stc or jnp jmp jle cmovbe mov cmp (bad) in jo push push enter mov fisub in (bad) xor mov adc addb jle cmp xchg test push pop push and int3 sbb xchg or xor (bad) jns inc and rol cmpsb xor inc jle push aad sbb jmp in push out addr16 mov lods test xchg inc out (bad) pop mov (bad) cmp jbe inc jns ret mov xchg jb lcall out xlat out cltd jne jle lret push pop cmp sub jp test and cmp roll cmpsl je push mov aaa sbb push xchg xchg arpl or data16 lcall nop xlat jp int push mov out cmpsb mov (bad) imul insb mov mov cld cmc pop jecxz sbb jle into add fwait out sub xchg push popa pop pushf xchg push (bad) xor sbb decb cmp add in (bad) pop lret pop cmp stos pop adc jnp add xor rcr clc mov xchg (bad) inc sbb repz dec jle mov popf clc and cli jle and jp scas hlt in cmpl sub dec xor push add outsl shll neg js cmp jle clc add out ficoml sbb sbbl pop xchg fildl jl cli jp xlat dec popf stos scas ja inc xor add sbb ljmp sarb stos cmp add cmp xchg pusha movsl cmp adc inc leave andl mov xchg jle icebp int hlt cmpsl jmp bnd sub dec (bad) int3 (bad) popf mov fistpll sti das xor or xchg dec push test out std fildl pop pop sub les jmp flds jle cmpsb out and aam scas scas das xchg lock dec test jle lret in je add mov fwait add mov lahf scas fcom mov (bad) movsl lods cmpsb xor scas js or mov and cs dec cmp cmpsl push lret imul adc bound lahf sbb add jnp mov adc subl inc outsb mov nop repnz dec pop jl cmpsl add lods test push mov mov repnz insl dec cmp push pop inc pushf mov inc push mov shrl pop cs inc pop push sti out loop stos push inc mov pop mov std stc popf dec adc mov cmp outsl into scas test testb je mov stos push mov subl out jns,pn addr16 or lcall cmp fildl unpcklps insl outsb inc jp in repz xchg jnp out add mov mov and in shll rorb mov dec call jge fwait scas pop dec mov jp mov sti mov inc mov or and mov jle ja mov insb icebp aam jg leave dec jnp out mov jbe in sub sbb int mov ret dec and ds sarl jb lret data16 aas ret (bad) or stos jle and lahf or in cmc add movsb bound xchg fisttp out cmp aad or jle xor pusha pop jb clc push ja jnp cmp popf jecxz jg pop and mov test sarl out inc pop or into test or mov or lcall iret sub je rorb pop into xor mov xchg nop in dec pop sub mov mov inc adc fisubr pop lret pop loope movsb xchg out push push outsl sub xchg adc mov nop mov test wbinvd mov fsts test enter aas sub mov stos mov ret sub mov push mov mov jns aas pop xor inc sub dec leave pop loope mov je stc mov jnp or pop pop and push in inc dec xchg push xor sbb or lods aaa in sub xchg xchg inc pushf inc stos xlat fwait pop mov stos inc stos sbb cmp insl mov pop push cmpb imul nop dec test adc scas pop xchg adc or jmp jle (bad) cmp push mov sub out insb testl inc and jle xor fdivl stos xchg adc sbb mov sbb out mov out sub decl push je dec add mov jle jecxz out adc sbb cwtl cmp outsb lret pushf mov jle pop out (bad) fcomip mov aas mov rolb scas stc jnp addr16 adc fiaddl adcl jae scas les ds out jnp jle push in or das mov push jle mov and aad cmpb and pop inc test pop sbb jle sub scas inc lds jle mov push adc mov sbb jle mov (bad) mov and clc jnp adc daa stc js pop cmp jp xchg outsl jl cmpsl jle and push or in mov push js fwait test mov cmpsb (bad) mov es leave std ficompl or mov pop sbb rcrb mov fnop mov sbb inc js cmc (bad) hlt icebp pop inc xor insl lcall gs sub inc ds lock and cmp sahf jge pop ffree por add push roll daa sahf sbb leave mov or out add std jmp pop (bad) int mov push sbb push or push dec xor mov cmp cltd or scas test xchg addr16 push sbb mov lret es (bad) out frstor shll sbb pop xchg mov pavgw dec out pop cs imul cmpsb clc push repz jmp mov xchg lds fwait mov push jle fistp (bad) test add sbb jle shrb push fistpl or jne test dec cmpsb js push ljmp cmpsl pop sahf dec jecxz and inc inc add divl jle lock inc jle rcrl mov push or mov jle cmpb cmc repnz outsl fdivr cli pop hlt cmp enter mov jne jp jle roll outsb jno fs imul dec dec (bad) call insl loopne jecxz mov or dec jg adc jmp lods addl mov out decb sub jle out mov test das lahf sub out cwtl jge or jle lcall jle stc add hlt jae aas jle ljmp jle xor fisttpll push push xchg orl popf jle push pop in push dec xchg adc out pop (bad) in rclb jae insl lock jle fildl cmp aaa jb push fldenv jle dec or mov and jle xchg adc inc (bad) jle lock mov lcall xchg addr16 and push das clc stos jle arpl jb movsl jle and lret inc cltd push sub jg scas jp mov sub lds sti jo les enter ss and inc cmpsb (bad) pop (bad) dec xor and add int3 inc rcrb jne and (bad) stos jno xchg xchg xchg fadd mov int inc push and sbb outsl popf test sahf popf orb xor sub add mov test fisub xor pop mov xor inc mov andl ds add and jo (bad) sub cmp outsl addr16 mov xor add push lds aas mov or adc mov add (bad) adc or jns out clc insb push and insl ret mov arpl lods mov ja clc dec fildll fs mov sub fcomps sbb aam cmp xchg push movhps in inc andb fdivl test or push (bad) mov sub lds or xchg xor xchg rolb push add or daa xchg fimul dec ret xchg scas mov sub stc call dec adc movl das cmpb testl dec add add or cltd xor sub mov test cmpsb ficomp mov mov out mov fiadd or lret clc cltd js sbb inc sub add or cld and and enter mov mov push jg arpl lret ljmp xor and dec mov mov push clc repz int3 loop add adc test lods movsb adc xor dec ljmp mov sbbb add insl mov push ds jle (bad) cltd out jle iret lods (bad) out cs out fisttpll jae fwait xchg stc in ss ds jle fldl pop jecxz sarl clc cmp mov adc mov sub vmread jbe lea xor ret ss xorb mov dec sub (bad) pop ret rcll inc cwtl jo sub lret pusha push int aaa mov sbb sub mov sbb cltd cmpl add cltd jle scas cmp sub and fwait gs mov out lret add scas dec testl jle cld pusha rcrl jp add mov repz pop jle leave and xor inc addr16 es xchg punpckhbw sahf fstpl mov sbbl nop sahf add xor pop mov fldl js fisttp jno sub ljmp push insl push add mov cmc cmpl notb andb pop pop pusha cmp insb (bad) rorl out and pop or fs mov (bad) aaa jecxz sbbb xor mov inc jge and enter pop (bad) jle testb scas leave in aas std lcall lods add fnstenv sub pop jno pop ds data16 adc inc push cmpsb (bad) jb (bad) lods sahf cmp or jp add jg push leave adc (bad) lods std jle xchg mov in (bad) mov popf pop jnp lods adc fildl adc cvtpi2ps lret shlb or (bad) out scas incb add and mov mov loop je scas rcl aam mov out pop cli iret or (bad) aaa add xchg clc jbe sbb andb popf cmp xor (bad) sti and add jg das jp add and (bad) insb pop or insb lcall xchg adc das sete add cmp scas mov js jbe push (bad) in add xor cmp add insb mov lds pop mov cld mov add push arpl push push lahf pop sub out add jno xlat loopne or cmp out cs pushf ret add movsl lcall testl nop xor lcall xor cmp pop xlat lds cmpsl movl insl in lret jbe scas (bad) mov cmpsl test or arpl pop in je mov cmpsb mov adc arpl call jge mov cmp xor lods push inc jmp enter fiaddl fcoms outsl stos mov leave mov icebp test push and sub clc stos pop jbe lods xchg xor out in jle sbb cltd inc dec push outsl mov dec dec js pop fs sub idivl jl mov inc (bad) fldcw cmpsb inc test push inc jle mov je lds mov pop int mov jp xchg mov jns ja pop ds (bad) mov cltd jle adc and jb cmp adc (bad) pop fildll aas out dec or cmc pushl ret ret mov or test sahf pop sbb push push jle out nop inc cli or lahf scas dec jp rcrl jle sub cmp and ss js and js mov test cmp mov (bad) pushf lret enter cmc sub xchg jle repz ds call pop flds or mov jle cwtl sbb cld daa and cmp ljmp mov lcall jle and rep dec aas mov mov popf inc mov std (bad) jle enter mov mov jecxz test mov inc lods mov cmpsl sbb cmpsb mov sti es movsl aas jg mov popf jbe pop xchg mov fiaddl add and je rol daa rcrb incl test pop (bad) pop push xchg jle bound sarl jo imul cwtl addr16 xor out in loop or cmp sahf dec das inc loope loopne add xchg bound inc and jle xlat (bad) test push jle add out hlt add out jbe xchg jo lcall jp out inc sahf or sub jle dec xchg jl outsl hlt sbb sbb arpl in out imul mov data16 sub (bad) lret push xchg cltd in mov popf jmp mov add xchg add aad pop jb ljmp enter out jp sub cs cmp fnop mull imulb mov sbb sub sbb push add decb pop outsb es clc dec ds scas dec fstpl inc dec js ds add cmc xchg push insl push jg dec lods scas clc xor cltd nop jle push aaa jmp imul sub (bad) adc adc fistpll je xchg insb xchg cmp ret push cmp adc in mov dec pop adc fstl mov add rcr mov stos stc mov fistp std lods pushf (bad) mov in mov jae add mov adc or (bad) test orps mov pop shlb sbb data16 cmpsb cwtl lcall sahf js lea dec insb outsl push add sub xchg inc mov jle jo sahf push mov rcrl sarb pushf or das jle lret jnp fsubl mov imul xor jns xor and sub cmp fstpt stc je add jle push ja insl enter jne pushf pop test sbb mov sbb xchg fxch repz mov loop in das fldt sti jp sbb mov lds into lcall jg pop clc add call xor loopne leave cmpsl les scas push jg popf mov sti cmpsl sbb jb into or scas and xabort cld sahf mov mov pop adc sahf imul jp data16 in dec notb xchg jle in sarb loope cmp cmc jle cwtl movsb mov jo lret (bad) nop jle out clc pop shrb push movsl xor jo jle pop (bad) mov or out add jle test dec sub jo out (bad) outsb imul adc (bad) (bad) dec or iret add mov or int3 mov jp jle jmp insl lcall dec test inc mov stc icebp sub cmp mov sahf fist lcall jle adc jbe mov fwait lret shlb dec mov movl jmp xchg gs sarb enter push dec sub aaa in cs cmpsb pop xor addr16 jmp jle fild lock jg or add jle aaa (bad) push call cmp aam cmp jmp aam lret xor mov mov stos adc int and dec (bad) fnstcw outsl sti inc out ss jle int3 mov daa sub inc add cli das cmpsb lds xchg inc xlat repnz lcall stc fs ret bound jle push and xchg inc sbb add outsb sti and cs dec xchg lock xchg (bad) inc cli xchg aaa jle rcll sti scas das or (bad) jnp mov stos pop add xchg jle fidivrl dec jle pop std dec jae aas cmp and rcrl sbb enter lahf cmp cmp aas aaa cmpsl int3 aam jle or ja cmp ret jg lahf fdivr sti xchg push sbb ret sahf clc outsl mov fisubl das lahf mov cmpl xorb inc cmp and fild jle mov dec sub mov jle ja stc pop fisttp adc jne cmp jle push mov xchg push inc out lahf mov out test push mov inc int3 cwtl jmp imull movsl popa pop mov adc jle clc and loop cli cld jle add into (bad) scas sbb xor jb mov sbb jle sbb xchg and jns pop outsl push pop pop jbe call pop scas fistpl das jb (bad) mov stc test jle mov dec jge cmpl test cwtl test mov (bad) cmpsb and nopl inc push divb lea scas or les fildl out shrl push adc call fmuls or and clc push adc aam lock cld jp mov iret dec mov xor jge (bad) out (bad) call movsb aaa test ds inc pushf or pop iret mov lods xchg out orl lret and jle cmp xchg adc xor inc jg out aaa mov cmpl jns and mov lock mov sub in (bad) sbb lahf adc loopne imul out stos mulb fimul dec cwtl add push mov jle in pushf clc mov jle pop lea into cmp loop nop jne pusha cltd sbb fwait xor sub pop jle mov mov jle test movb mov mov ds scas mov kmovb lds sahf mov mov sbb das lock mov pushf adc out mov jae and aaa jle cmp outsb test fimul xor push mov repz ret push or sti inc pop je fcoml aas push in cmp testl or clc test cwtl test lret gs pop xor adc mov add push rorb push jl popa cmovg xchg insb (bad) shlb cwtl add mov call mov jge mov add aas aam dec pop jg or and cmpsb inc icebp fldcw sahf and jnp xor outsb ret cmp sbb pop aas and cmp aaa and pushf stos inc lret jl add sub aad pavgb icebp notb dec sub (bad) xchg sub stc bound aaa popa cmp jmp nop loope cmp and hlt xchg insb fnstenv pop jl ljmp aaa push imul xor leave mov loopne mov clc xlat rorl jno mov mov pop cmpsl push std stos jl f2xm1 idiv clc pop adc xchg cmc std popa xchg pop cmp cmp push aas adc (bad) fs xchg rcrl and test (bad) int jecxz mov dec mov (bad) jmp cmp mov mov jle xchg xor cmp outsl or mov mov cmpb dec lret das push cmp scas xlat hlt mov sar clc mov mov inc lock mov jp xchg imul jle sub pop pusha shll or adc cmp not ja add js xor cmp mov hlt aad movsb icebp repz ret lods pop inc outsb outsl and xlat or jnp xor fsub xchg cltd mov into sub ret cmp (bad) cmp shlb add pop push mov aad lcall popf mov jb loopne pop dec jl (bad) lret repz mov sahf (bad) enter pop sbb out sbb pop sbb add (bad) mov or ja or jns xor sub (bad) out xchg pop data16 jle mov sub aas push andl fstpt push in or stc inc push clc lahf test push fwait cmp push lret pop movsl or lock jle aaa daa pop sbb (bad) inc jle add mov das adc sbb aam addb mov cmpsb jnp loopne lcall lds push xor ret es stos lret je js in jle mov cld rcrl jle ljmp mov outsl dec xor leave dec push std and mov inc sub les sub or pop mov fs add (bad) cmpsb jns (bad) sbb clc fisttpll push xor jg cmp mov int xchg pop mov add adc jge aas dec aaa fbld lds aaa jl pushf cmp fistpll int push pop jge fdivrs push sub pop dec mov fwait jmp mov mov push jmp dec aaa pusha ret add pop sbb add cmpsb int movsb in mov or popf xchg subb test cmpsb inc or cld or dec out sahf (bad) cli adcb clc out nop jl cld dec pop sbb dec aaa enter (bad) clc fstpl lahf (bad) sbb cmp jmp fistl test jge jle,pn lea push jle int3 rol iret lret xchg mov cmpsb jne xor adc jbe es jle repz sti lret lock in outsb imul xchg fdivrp and nop xchg sbb dec jle mov pop negb int mov popa cmp jle jbe rcrb jle mov inc jecxz insl jle fiadd or test rolb add dec test mov add jle out cltd pop push jmp jle call mov gs pop mov and lock xlat mov and jno scas lcall mov ret mov flds xchg pop xor jge movsb lcall xchg xchg aad (bad) fucomi xor inc lret xchg sbb (bad) outsb ret push mov call sub aaa push xchg (bad) lock movb mov mov movsb mov mov sahf xor cmpl fucomp ret add dec jp or mov and push sub jecxz clc mov aas in lret ja jg popf shl pop adc dec jle xor push mov out add mov xchg mov or jnp pushf cmp (bad) xchg pop cmp (bad) push cmp xchg sahf sti xchg ja push scas cmp or bound popf sbb cwtl sbb jle icebp xlat in or gs mov inc sub xor jle outsb mov sbb inc loope js outsl sbb jle (bad) movsl lock out out mov cmp test push scas cwtl and mov out push dec bound jge fwait (bad) idivl scas stc push lods icebp mov jle push adc mov mov pop ret outsb test jne jl jb std and push sbb mov or dec data16 adc mov adc jp in aas lahf mov sbb stos (bad) in xor (bad) lock movsl jns (bad) loopne push dec in jmp add xchg jo mov shr xor xchg in cltd fs sbb xlat mov call in push jg jl mov adc loop xchg push pop das xor fistp sbb cltd negl push jp add or sbbl (bad) sub and inc (bad) sahf mov push xchg xchg sub add or and clc call pop push stos cmpsb or add mov add incl xchg xchg xorl mov lds and pop inc pop jnp sahf push cmp xchg mov cs sti pushf or xchg js std xchg add repnz divb mov movsl fmuls mov shrl je cmp dec jo repz leave cmp aas mov leave mov fnsave cmpsb inc and fisub add jecxz lock nop pop jb cwtl int jnp test fcmovne and or test imul jnp push mov dec pop sbb mov or ds sahf mov dec aad jle std and pop xor aaa sarb mov lret mov ja pcmpgtb mov xor sarb cmp leave xor xor ficompl cs dec movlps loopne clc ret pop jge movaps mov push or mov jle int fildl ljmp pushf dec sub add out add push dec jns add jle jo pop cmp roll test add in imul insb add jle mov jle jg jecxz lock daa mov inc pop jl clc pop push cmp cld incb and mov jns mov movsl adc jl stos repz adc mov push cmp cmpsb and cli in stos and push jl add outsl sti stos jge int movsl inc adc sub cmp push and out jecxz mov cmpsl mov mov mov hlt scas test (bad) jecxz sub mov loope rol mov mov test clc or fstpl push (bad) pop cli xor mov dec stos sti inc jle in push addr16 pop aaa jle xorb scas push mov and mov sub jle fisttpl imul mov shl shrb xlat (bad) into mov dec jmp xchg scas xor je cmp jle dec dec leave lss pop jge jne mov adc lock xchg (bad) scas fwait jle das iret inc inc rsqrtps out cltd xor sub mov jbe sub pop popa cmpsb dec inc pusha push imul iret ljmp add in jne sub cmpsb repz add clc pusha mov mov jnp stos clc shll or lahf imul xchg jge inc xchg cmc into in aam mov xor popf sahf mov cld or adc leave insl jmp push scas cld insb inc daa inc xchg sub jecxz xor adc idivb mov cmpsb js add inc (bad) and ret add sbb jne scas pop decl lret mov inc or pusha or fisttp andb sub fildll out inc or lcall loope push movsb ljmp stos insl pop jecxz add mov jecxz aad jae addb pop sahf xor daa movsl je xchg dec setg addl repnz hlt dec in std mov mov insl scas hlt and test movntq xor xchg jle insb dec push jle and pop cmp int3 dec jle nop icebp sahf and pop or aam loop sbb aad movsl orl push jle dec push inc cmp aas jge dec adc or jle andb xchg push scas fsts jp adc jmp mov pop lods or js in arpl sbb jle mov pop add xchg ja pop push cmp jle xlat mov pop xor ja adc dec call cmp push or pushf enter js bound jmp orl movsl bound xchg cmpsb add loopne dec addl clc daa sub scas push push mov cmp daa fisttpll out imul pushf push sbb popa xchg push pop js mov mov int3 xchg int mov mov dec sti or aaa fldenv mov jl sti push add sub xchg cmpsl ret repz dec dec push xchg add out pop int3 xor pusha xchg cmpsb frstor mov lea aad out js add cmpl repz fisubrl jg imul add aas arpl mov jge outsb loop xchg out jle jne inc js jns jle add push stos testb dec xchg jno cmp sbb rorl adc dec mov out lea mov lods cmp clc push jno jle sahf dec jne xchg movsl and cwtl std cmc pop push (bad) jae sub jo adc pop xchg jmp push mov loopne int mov mov mov test js jo in mov add aaa and imul clc (bad) jg insb sbb push int jg mov popa add idivb pop mov clc or mov icebp mov sub xchg (bad) xchg push imull scas add xchg cltd aam jns into and mov insl mov in cwtl out push scas mov pop hlt add mov shl inc fildl mov push int push bound sahf or cld outsl xor shll (bad) cmp clc cmp ret pushf sbb push je pop das or pushf outsb jge negb xor push add lods jg imul xor incb jbe mov sbb in cs fimul jne (bad) or push xchg xor sbb pushf enter xor jo js xor adcl inc dec or leave mov mov scas and cmp inc or jge adc movsl adc sub clc sub nop or enter je xor xchg jecxz fbstp mov fs pop jmp ret cmpsl jle mov lret xor clc pop dec mov inc adc fucomi mov bound and mov inc jle insl adc in xor xor test jp push test test jle jmp xor mov out mov push xchg pop xchg and or hlt adc adcl push cmp icebp push xchg hlt fldcw dec xor or xchg jle in jb mov inc xchg test jle out mov sbb cmpsb add push mov popa jl xor push lea add pop inc jle xor cmp xchg mov bound jne (bad) sbb mov cmp in clc outsl inc repz pushf jno (bad) aam cmp stos fmuls add loope (bad) cs mov das mov xchg add arpl mull bound insl add jp sub ret jg (bad) push xor frstor jo jmp jg inc sub test jo mov pop stos aas std xor and pop pop push mov push or mov sarl pop out jle test mov push ljmp cmpsl jg rcrl (bad) hlt repz cld jl or clc push insl sbb (bad) pop (bad) jno adc mov mov sbb ljmp push add mov fldl push aad cwtl sbb or mov jp add lock addr16 repz push push inc subl push fs jl std clc dec pop cli lahf ret sub sbb dec cmp inc add or push pop (bad) fldl std mov cmp dec sbb jbe add xchg xor dec sbb fwait popa cmp or adc orb (bad) in sti adc or ret insl movsb jl adc inc insb lahf or (bad) mov in daa clc mov fistpll loope fidivrl (bad) jge mov es imul xor lods pop adc sbb call mov out jecxz mov push scas iret dec push jle jmp or mov push js jp fdivrs cmp push mov jle lcall cmp pop aaa (bad) cmp sub sbb fcoms mov sbb pop fistp jnp,pn and jle sbb leave or dec pop jle cvtps2pi xchg add xchg adc add jle cli ret (bad) or inc je andl add btc mov or outsb mov cmpsl sub push sahf xchg or lret pop es lds adc jo xchg xor aaa cmp and ret sbb (bad) nop or imul imul cmp push outsl mov into fistp jae mov and aas movsl inc mov mov push iret add mov not jns jle iret lods imul cmp jno ds pop inc ret jp mov add sub popa fcmovb xor js or and and jle fiadd inc jle xchg dec mov (bad) pop int xchg xadd outsb roll pop lret das xlat add or idivb push sbbl push sti mov jecxz fwait push pop out (bad) fcoms (bad) repz lahf sbb into clc idivl adc icebp sahf pop or mov hlt aad pinsrw fstpt orb cmpl jo add stos and xor outsl insl mov mov pop stc mov lahf pop call cmp lods xor js fmulp popa insl xchg aaa iret add xchg pusha add test sub cmp xor call test jp fcmovnbe xchg incl xchg adc (bad) push xchg je cld ja movmskps lcall add xchg daa insl xchg adc sbb popa dec into xor mov call dec inc (bad) psubd scas mov mov lret ret movsl mov jno mov jl pop adc pop in imul pop std xor (bad) lret repnz lods sbb outsb sar cmp scas lock mov xchg fmull and out pop xchg add cld push mov imul hlt add movsb jbe jle push loopne sub arpl jae ljmp int3 dec mov mov nopl jae clc test cmpl xor xchg pop iret xchg (bad) dec imul xor push std (bad) jle into pop inc lods mov sahf stos mov das jmp and repnz js adc dec sti cmp mov pusha sbb jbe popf insl pop out pop jb inc adc sbbb lcall out xchg and jge mov mov cld mov sti sar mov cmp (bad) jp stos mov xor das sbb insb push iret jns loopne pop jle rorb ljmp and loope mov mov push and pop cmpl movb jle mov out mov push jle data16 mulb into repz mov (bad) ss test aaa outsl cmp jle pop jl repz pop and mov jne sub stos fs jge repz ljmp movntq out cmp arpl jne ret push shrl add or cs mov movsl dec sbb add cmc sbb cli (bad) xchg xchg xchg sbb pop das or gs adc jp dec cli xchg lahf clc imul sbb add lcall add sbb sub xor jne mov lea xor clc jbe or insl add ds push dec mov stc out jb sahf xor sub aad pop jnp dec dec pop negl pop or in or std push call sbb xchg jmp cmp inc outsl jp mov subb push movsb jle push imul arpl sub or out dec mov test mov cli mov jle addl jle add lret sets xchg data16 int loop cs cmp enter stos jl (bad) mov adc cmp loope sarl sub pop stos add leave push movsb movsl ss adc sbb test jae pushf gs jle sub jge or out arpl inc bound push adc dec push push enter stc nop adc sbb frstor sti xor push jle mov sbb pop data16 pop xlat add jle movsb icebp cli jg sti popa addl inc pop pop imul sarl cmpsb orl xchg loop jne fadd jae ds jle dec cmpsb aas imul xchg mov js fsubrl add dec and stos scas mov cli sar rclb lcall pop jge imul in mov cmpsb (bad) push sub fisubl pop in fnop push rcr mov inc xchg and imul pop dec (bad) mov jge (bad) clc in push jp sbb dec pop out add xchg or xchg add rclb xchg cmp push pop pop xlat xchg call rorl jle imul xchg pop jo push sub sub adc (bad) stc jb cmpl sub pusha xchg and sub cmp push jbe mov dec pop insl jle pop adc jle xchg pop imulb jle rcrb adc daa xchg cmp ss je jne cmp enter pop lahf cwtl push aam cld and scas sarb sub jnp mov cmpsl test sub push ret add imul lock jle mov push cmpsl pop mov mov fwait pop lds pusha (bad) in jae mov iret ret cmp in and jmp jle mov push cmp outsl scas fistl or mov lahf mov int jbe out push jle iret jno sbb jle pusha (bad) push pop sbb pop add repnz mov push sub rolb cltd rorb fisub fwait test lret push jle sub mov loopne enter cmp lcall pop push lods outsl sbb loopne push movntq pop int mov stc js adc cmp cwtl hlt cmc inc sti into dec js into jp pop ljmp aas add or mov cmp ss pushf xor test (bad) cmc mov mov cltd flds es stc cmpb mov jnp xchg in mov push les insl scas pop and pop add mov adc popf mov cmp push jp sub xchg jle shrb mov and std cmpl dec jo jno cmp mov popa xchg mov jp aam and call ficompl jo ss ret lea je movsl imul sub std gs jmp inc or mov mov cli enter sbb aas fist jno pop pop gs xchg pop mov fistl in dec dec mov sbb cmp sub sahf xchg sbb jbe jge push xchg sub cld push or in notb jecxz popa or in pop mov mov pop inc push or (bad) fmull jp sbb pmaxub data16 pusha dec dec mov or push sbb clc dec pop jg push push mov stc int3 repnz cmpsb bound mov loopne pushf fisttp scas xor fistp or and jecxz inc fiaddl dec jg sub test or inc rcll mov push dec lahf repz (bad) dec or shrl jl and xorb lcall push jbe sbb push pushf xor in js lret sbb sub aaa xchg int3 jns sbb mov cmpsl repnz popf and in jl aas clc inc int jns push push pop das (bad) outsl pop js sbb insl repz fwait int push (bad) lret pusha in cmc pop mov pop add clc les push xchg add push mov and or mov add imul ja inc clc call and xchg es imul imul stos hlt xor fldt pop enter xchg sbb push fwait aad je loop dec rdtsc mov cmpsl pop pop aam cld mov and aad inc idiv in cwtl je dec jbe lahf mov (bad) jne or jle add sbb clc dec out push jg loop xor cs dec lods xlat int xor in int test popa xchg mov lods movsb sbb add sbb iret mov xchg imul cmp jo addl lds outsb jle in stos (bad) mov lret stc arpl jle and mov sahf cmpb add (bad) or pop jle movsl test push (bad) loop lock stos sbb pop sbb imul into ret cmp lea xor xchg insb cmp pop xchg inc sbb xchg push pop aas call dec lods or pushf pusha push add mov xchg add sub les and adc or mov psubb add jno jo push add push lret push loopne or pop ss mov or pop (bad) cli sbb jl push loope sbb pop xchg xor dec call inc pop jp out lahf cmp jle int cltd mov push mov lret and (bad) stos out addr16 cwtl push and pop pop outsb test mov sbb xchg outsl repnz sbb sub bswap push inc cld cltd xor sbb shrb mov in push (bad) jmp or mov roll and (bad) jecxz movq test rcll dec or clc or jbe ljmp xchg clc push dec in inc mov (bad) sbb addps sti push or cmpsb jl and sbb imul nop jecxz rorl aaa mov clc push mov outsl scas repz out test mov pop or rcrl popa daa adc (bad) lahf movl add pusha sbbl mov aad ret xorl das clc add ds xchg pop lahf mov cmc scas (bad) out insb incb mov stc shrl jg mov mov inc mov add movsb out sti gs jo popa popa sbb flds leave rolb sbb or fdivr arpl lret jno dec aam ret xchg pop neg jbe add sbb xchg cmc subb jg push icebp cmpsl pop jne in das aaa cmpsl mov xor cmp add sub inc mov aam mov jae cli mov scas sahf mov cltd shr pop stos out and cmp out ss jmp pusha into fs or arpl das adc scas and clc mov pop sbb mov and outsb mov sbb jo jl xchg push cli add sub jge (bad) daa add fwait out repnz xor xor jae repz mov es sbb (bad) mov imul je fiadd adc jo jnp out ret cmp cmp jle xor jle scas icebp dec jne into mov movsl and inc or jge aam incl int pop push dec xchg cmp daa test iret jle mov jno pushf scas pop shlb enter shl scas xor cmp popf cmp and popa xchg add lea js mov pop popf into stos push mov ret incb daa jle mov pop mov inc les and jle or mov test dec popl test nop sub mov mov mov out popf sbb fdivl adc mov mov nop jmp ror or cmpsl pop andb sahf pushf out or xor xor inc (bad) outsb dec cmp add pcmpeqw xchg inc adc mov pop mov hlt (bad) or push pop into test fwait test out mov or jge xchg cmc aam sub cmp mov mov jb (bad) sahf pop repz sub arpl cmpsb (bad) jmp push mov cmp mov movswl cmp cmp cmp pop pop idivl adc (bad) xchg test cld shl inc dec lock fucomip loop roll stc fnstsw (bad) stc sbb out pop pop and mov xchg subl and or lds pop rcrl mov les add scas add dec or cmp out or cltd aas xchg data16 pop ds jne lret jmp (bad) bound pop fwait xchg outsl daa test add mov loop mov add into lret and into jne mov jns cmp lret inc jecxz pop mov in xor cmp fidiv scas jg incb mov cmp xor imul or pop roll xchg inc hlt xchg mov in insb pop mov and loopne (bad) push push nop jae call cmpsb push cmpsl ja repz mov pop and lret cmp shrl js push (bad) insl ja addl add aam or jne sbb int3 ss outsl inc push outsl push jb imulb push mov xchg leave popf jg (bad) pop push jl and je inc cltd cmp xchg insl pop lret add ljmp addr16 jle int pop cmp xor and xchg outsb dec aam nop cltd push jmp subl pop std adc mov popf jb xchg jle xchg icebp pop push hlt mov adc stos add adc jge mov lret and ds inc jmp les mov repnz movsb jle call cltd lahf pop pmaxsw inc bnd out xor in inc jle add ffree jno inc ret and pop and (bad) es (bad) or adc rcl pop push cmp sti pusha outsl clc lods loope and test mov push add sub sub fisubrl in gs enter push (bad) xadd push and (bad) aaa push dec clc cmp icebp in fisttpl notl adc (bad) iret clc mov out xchg imul mov cmpsb jbe icebp outsl popa mov xchg mov or xchg cmp mov scas xchg push dec jp imul xor iret pop in (bad) fildl sub bound mov pop mov das adc mov mov sahf inc adc cmpsb fcmovne mov jns and mov mov xchg lds scas jle mov mov add pop cmp push mov cmp insl iret jns mov or xchg inc stos pop lods jns pop mov lods mov in mov jp aaa xor adc or shrl or or sbb out ljmp inc rorl inc pop jle xchg testb in arpl (bad) fld jle scas dec push xchg and jecxz movsl mov push in jle dec push shrl jb (bad) imul jle pop xchg jnp mov insb jle lods push mov int3 test jle cmpsb mov jle cmp std icebp and daa movsb (bad) lcall mov cmp adc pop je jnp aad jle cmp xlat lahf jb lahf out push data16 inc push imul pop pushf (bad) sub mov inc call dec add add cmp lcall popf clc pop xor ret idivl ljmp test xor outsb scas xor je into push xor cmpb pop push scas mov stos (bad) aad test jecxz sbb test dec jg pop adc clc ljmp sbb iret mov mov in ds das out mov dec xchg add mov xchg cwtl imul cwtl lds gs push ds add rcr mov insl xor jbe xor (bad) (bad) pop addl out cmp stos in jge mov mov xrelease adc jb and nop dec push (bad) jle lds xlat test jmp dec dec cld (bad) test sti cli xor jge pop inc jns ja push (bad) jae sbb (bad) inc push xchg dec and arpl scas mov int3 jge add repz fwait or mov enter mov push (bad) lcall add lods into cmp repz sbb ror sub inc sbb cmpsb sub imulb imul repnz fadds and mov rcrb push jge ror mov push pop mov fmuls nop mov enter jl int3 repnz xor mov jle,pt jge fcmovbe and loop stos movsl push (bad) xor addr16 adc scas mov cwtl inc fnop or xchg mov hlt scas js mov jb cli mov jle adc add inc imul pop clc xchg sahf fwait insl cmp addr16 repnz add loop jp mov mov mov mov pop mov add lahf jb lds dec mov cmp xor imul movsl xchg sahf push jg ficom repz rol pop rcrb mov stos jecxz insl pop xor int ret pop push out add sub jo and fs and (bad) mov scas addr16 imul cmpl xor lret jle mov sbb cmp adc sahf add cmp inc dec idivb lock or addr16 fistp inc cmp popl and xor mov mov popa add cltd cmpb add jle and xor jbe mov data16 jl cmp bnd out (bad) addr16 push cmp in cmc ret inc and add cltd scas mov rclb push loop pop das jb out push jae xchg jecxz fucomip mov mov push arpl sbb lret push jle add pop mov aaa add aas (bad) xor xor add push sahf cmp xchg push add (bad) (bad) cmp scas cmpsl stos mov lods add iret into data16 mov fiadd lds jl cmp jbe fmul scas jle inc mov addl aad xor sbb stos out pop (bad) jle inc rclb or cmovg loopne pop insl lret fistpll pop or dec (bad) loopne imul test mov inc xchg mov mov outsl clc or and sbb jbe sbb insl fidivr and mov push xchg int cmp pop out dec leave mov pusha outsl fsubrl mov test inc sbb popf jle int3 lret xor jle mov and jns add lahf (bad) insb push imul and mov dec aam out mov push jmp (bad) or sbb inc mov movsl cmpsb push push arpl jne jnp rcrb jle sub add xchg dec cmp lfs jle je shl and xchg insl adc adc jo inc xchg int ss int3 xor pop push push dec clc cmp int inc outsl out test std dec pusha mov inc insl cld pop addb dec xchg mov adc jmp fadds test pop add mov jb xor movsl lcall xor jecxz jg or sbb movsb cmp popa cwtl loope pcmpeqd test dec int3 add (bad) sbbl rcrb xor dec in stos mov mov xor addr16 jno mov pop test dec mov out fistpll cmp std sbb test push pop mov aas xor dec stos xchg add mov scas lods push inc sbb jle repz cmp add mov sbb mov adc adc jle lret xor sbb jle or jle lea rorl repnz dec mov scas mov adc mov in mov push enter jp dec cs xchg adc or daa adc mov pop dec mov inc insl bound out ret je (bad) cmp inc faddl adc jne bound pop mov fildll ret adc aaa (bad) ja mov and scas pop pop into cwtl push mov inc cld push push lods pop (bad) xchg or out adc jnp push loope clc and push and jo pop outsl in inc ljmp xlat dec ss movsb stos and jl addr16 andl ret jp,pn or orl loop bound adc jl (bad) mov fstps and jns lahf icebp clc loop mov out dec and mov jle push mov cltd pop push xchg cwtl jnp push lcall cltd jg mov jbe in test sub add sub xor and sub mov jo push imul movsl add pop and mov in jmp lahf outsl sahf imul and dec je (bad) push xchg lret hlt ret lock das into inc jne sub add clc push jp pusha mov aad dec ljmp (bad) aas mov cmpsb out add aas clc data16 adc mov and sbb jmp jmp add sbb fnsave aaa xchg fisttpl mov add xchg jo and push and in aas and in mov int3 int xor cli cmpsb orl push dec lret jno (bad) aas xchg jnp mov xor sbb repz (bad) dec add xor int3 sbb int loop icebp or xchg imul bound jns sbb xchg xchg cmpsl divl sub and cmpsb mov test pusha or aam jle push ret insb into jge neg jnp xlat dec ljmp mov adc cmp and pop (bad) inc clc scas mov addb cmpsb aaa jmp ret push pop push cmp pop mov je ja fdivs dec sbbl movl xor ret jg or push cs das jp cmpsl repz jle (bad) insl pop inc mov scas ret jg hlt out pop fmul push andl icebp in xlat jle fs ret jle pop xchg mov lods (bad) mov cs (bad) test pop cmp mov out aam stos xor pop jle jo add jp mov sbb sbb dec pop jge cmp xchg aam (bad) xor call out adcb cmp mov adc dec test mov fiaddl inc aad dec jle mov les xchg popf and jle adc cmp cmp iret mov std movsb loopne jb mov jle cmp test scas pop (bad) (bad) movzwl test mov out xchg or add inc or xchg cltd jle jo mov push aam mov sahf out rep jmp xchg xlat and push cmc pop jecxz cmpsl std jecxz aam sbb push xchg into xor sub cs les add jg into inc outsl xlat mov xchg mov bound (bad) adc sbb add (bad) std sub jno lea (bad) sub clc daa fistpll or loop dec jns je sbb dec inc add in arpl add ret outsl idivl cltd popa movsl idiv stc mov jmp add jns aad cmp das or (bad) dec pop imul mov xor std push jp add popa add push (bad) iret nop sub push test mov in stos clc inc adc jns jge pop fs push (bad) push xor jb fmull xchg jo clc mov mov (bad) incb push adc ja sbb jg repz or sti cwtl mov push out cmp push xor clc xchg test and ficomp dec xchg push xchg xchg jle push inc or test pusha pop push dec jbe xchg cmp jle mov rorl mov pop mov mov mov fstpl mov jmp mov inc out (bad) (bad) js mov fiadd adc cmp int outsb jp popl mov xchg dec in sahf repnz lahf push dec mov fistpll enter subb xlat mov mov jnp and xchg in push xchg inc (bad) divl jnp push (bad) sbb int3 sti les jle cmp cwtl cmp lods je push pop add jl es ret cld das push adc adc std test adc mov push jle (bad) xchg fsub scas or stc pop fildl call js cmp ljmp push cmp xchg jle or lret mov fs scas ljmp loope add incl mov dec lret pop xchg sbb mov push dec les inc jle imul fmull jle andps int3 outsb cmp jo sbb cmp lods jle loope sbb xorb outsb out mov jle sub movb iret and mov je scas add cld movsb sbb rcll add fidivr sub mov fsubs in inc cwtl pop mov je dec ret push arpl pop sbb sbbb arpl xlat pop imul jns fwait jne cli add out enter das or add shrb xor xlat ret daa ljmp and das repz sub jo decl out xor cmp js and outsb or mov inc dec jns jge xor xchg jb jmp jne or shrb repnz sar aas repz jg jge dec loope incl lods and (bad) dec jp dec jmp xchg mov and jbe inc push loop or mov jo cmp dec fsubrs mov jl xchg pusha mov mov imul mov je mov clc add inc je aas int3 mov push icebp push icebp int3 lds mov les fisubrl pop popfw dec or mov xchg arpl or push (bad) push pop (bad) shll dec enter or cmp clc fldl nop or jns fldl scas add sbb movsb cmp mov add in adc xlat cmpsl int3 xor inc jb leave mov mov (bad) xor outsl out adc add (bad) repnz dec pop mov lahf clc and jge add pusha dec xchg mov sub sbb mov xor fsubrs xchg lahf nop cmp xor mov push mov fadds mov aad xchg cmpsb and and sar scas lock into nop (bad) or xchg outsl mov fstpl bound insl fsts in lret and cmp in fiaddl das sti or pop outsb lahf movl sbb push negb cmp enter sar jge outsb mov lret stos push xchg xor inc xor jle xchg sbb (bad) ficoml sti ficomp in out jo loop imul movsl add fwait jle cli ljmp dec add xchg xlat sarb jle add or jns add rcrl andb rcll scas sbb (bad) jmp lcall arpl jae pop aam xchg xchg mov (bad) addr16 mov sub scas add movl mov and out ret nop pusha popf xor mov mov outsl add dec adcl jle out mov pop sahf or (bad) push movsl shl jle,pn jae jl jge mov dec lret mov mov pop push idiv mov fsub xor dec mov add (bad) jae mov xchg sub arpl in cmpl jg out cmpsl inc bound mov push xchg loop add xchg xor adc repz jo rcrl test jle out inc dec push push adc xchg pop arpl mov ret jp or push fs (bad) stos pop push jle xchg xchg pusha jae xchg sub loop fdivrl (bad) pop out jle rorl sarl imul movsb les cmp popa jle mull jle sbb mov pop sahf jp dec insl rorb jg jns lea push push orl xor mov out js or loopne (bad) in in je nop mov scas cmp pushf fidiv pop rcrl mov outsb cmpl mov mulb jle mov ss mov ljmp mov lea jp ljmp enter arpl cmc jp mov cmp iret (bad) xor fucomp (bad) insl dec scas xchg ds mov gs rcrb pushl sarl cmp fwait add out cmp jle scas lcall xchg cli cmpsb insb push mov xchg xchg popa in out aaa (bad) idivl pop push adc mov arpl mov pop jle je in (bad) shrb xchg popa shrl mov fnsave inc loope mov cmpl jle or pop lcall lods mov xchg (bad) mov mov lret stc test std aas push jnp cmp lea ljmp mov add fildl cmpsl mov cmp (bad) loop popa mov in ret xlat outsl ror sub add cmp dec ret push popa jle mov xchg xor and push pop adcb (bad) jle jnp jne push push aad adc mov mov xchg or cmp fdivl in (bad) sbb dec scas das sahf xor loop in pop aam ret lock sti inc lret aad jne cmp pop addr16 lods lcall fstp mov xchg xchg sahf (bad) icebp out es repnz insb jl dec lahf push enter xchg cmp or out (bad) jbe push xlat xchg outsl mov scas test shl sub mov es pop lret xchg sbb cmp movsb push jl aas cmp mov or jge jns pushf bound sbb test xchg popa push aas addr16 and jle (bad) loop mov movl xchg pop jle xchg mov pushf cmp mov mov mov rolb or outsl mov addr16 xchg out jle add push dec out add jl or inc das pop test jl adcl and pop lea int3 mov mov xor sahf outsl and dec xchg (bad) setbe fcomps or cmp cs adc inc xchg sbb jbe (bad) pop test outsb cmpsl lret or lcall dec in jae fwait lret mov iret loop add mov (bad) xlat test xchg orl cwtl jle inc fnsave lret inc addr16 xchg xchg jle rcll cli shrb push jle xor cmc pop addr16 sbb mov xchg jl sarb in popf adc mov sahf inc and out test jl adc xchg adc pop fcoms ficom subps (bad) jle std dec dec aas mov fucomi jl and sbb inc call (bad) icebp push or stc jle outsl loop push dec xchg mov rcr jle add push adc push jle jl mov cld xlat fucomi pushf and sub push in mov fiaddl cltd sahf dec xor rol testl xchg insb mov test hlt stos (bad) sti (bad) pop jb push jecxz cmp jb repz jle cli mov (bad) cs inc das (bad) jle pop test insb cld jg out push cs sub jle mov lods lret pop aaa and in cmp mov ja (bad) jno ss pop mov mov leave imul (bad) jp jl jl out push xchg jmp add aam jae jo sarb outsl jg push pop adc pop xchg lock jle rorb icebp xor fwait jo aad sahf xorl call ret jle lret clc popa cltd pushl inc insb xorl fimull std xlat and xor shr popf outsb js and daa jnp add xchg test jae sub lods mov cld jo dec push add mov xchg add jle mov imul add jmp dec sti dec adcb xor jne sub movsb mov mov cmpsl jno outsb inc lahf scas push fnstcw xor fstpt fmuls jns mov jnp cmp cwtl pushf rcrl add mulb jle mov in xchg aam mov push xchg cld sahf sbb xchg adc mov rolb inc push cmpb cmp sarb mov (bad) scas mov mov mov xchg lods je mov and cltd jle lret test xor outsl mov test pop lahf jle mov dec ds mov adc inc sbb sub jg shrb mov xor (bad) mov mov ss fdivrs xchg pop stos dec adc add addb jnp out bound pop mov fstpt fcmovbe sub clc adc sahf addl sbb and addb xor call or adc jle push pop (bad) jle or repnz push and xchg xor push scas adc jle add push xchg dec jb jg sbb inc pop xchg rclb push insl ss inc jl push or ret fsubs bound (bad) popf fs inc jge mov dec into sbb test xchg push pop mov cwtl xchg lods jle push sahf cmc mov aam repnz mov (bad) dec xchg and mov call imul inc addr16 dec xchg add jle rolb mov sahf push xchg jge pop js outsb sub add lods mov jecxz ja sbb shr pushf inc adc scas mov cmpb jle popa adc loop addr16 pop pop jp push sti das mov insl std ficomp mov dec shlb (bad) call jg mov xchg push jo sbb outsl mov add lods mov jg sbb adc sahf inc add dec aam jp popf cld pop jns mov inc mov cmp (bad) sub sti mov xchg ss loop dec jle jnp jae mov test ficompl ds fstpl arpl xor leave pop je ret (bad) call leave gs inc js call fnstcw (bad) cli fiadd popa mov stos sub lods jg or adc inc fs jle iret mov scas jle js push sub setb mov insb jl mov imul jp mov push xor pop das mov outsl sub xchg jg out jl xchg pop (bad) cld sti sahf test mov cli inc jns (bad) mov lret jne mov jle lcall clc in mov dec jns loopne scas push inc xor mov (bad) ss jle jmp and incb ja push sbb lds fsubrs idivl mov pop or inc xor mov push or mov and dec in mov (bad) bnd dec jl test inc adc lock aad push or in rcll dec iret in mov jno add cltd outsb or aaa leave fdivrs not scas jg sub (bad) (bad) movb push dec imul lock sub mov bound cmp lret test outsl mov cmp sub aas shl (bad) lods xor xor xor das pop xor ja rclb fwait arpl cld test dec pop sub mov ja bound xor mov outsl mov sbb mov adc (bad) pusha sub rcr add stos pop sub mov movsb mov add cmp test cmc lds xchg mov out cmp adc imul and pop out mov cmp add inc test add mov fistl cmp dec add std cmpsb enter dec das add es jo inc int jb cmp popf addb enter xor movsb pop and loopne (bad) jecxz jno jecxz or ret daa decb pop out or pop loope clc cmp mov (bad) and adc enter test imul adc xor jecxz push sarl mov addr16 push mov adc add loopne popf popf scas sbb mov sbb scas push sbb daa pusha mov call bt sar mov push pushf clc cmp pushl mov pusha lea jb jmp pop pushf push call aaa shl bsr bts mov jmp loope cmp add flds aam cmpsb xchg dec push push cli fmulp cwtl ja pop shll dec pop sub mov or mov ss xlat es ss xchg mov mov cmpl out add push hlt lahf gs ja btc addr16 in into dec imul mov (bad) mov mov scas rcrb insl xor cmp jmp inc inc jno sbb add fist adc mov inc lods imul inc fdivs inc call mov cmc adc out sbb scas adc ja dec std fstpt iret stos lea cmp aad (bad) cltd jns jmp dec pop ljmp xchg les adc inc xchg (bad) or flds or mov das ret rorb imul fwait mov jnp and jae add test loopne and mov pop sbb or sbb test lret jmp lret call (bad) xchg mov lds in and rclb or dec insb lds push test xlat mov and mov inc adc cmc mov call in pop fs jbe cmc (bad) loopne or stos jg adc mov into (bad) jno jp lea adc adc cmpsb push and rcrl mov inc push imul and jno fbstp push pop mov into adcl (bad) test add out xor adc push sub mov pop aad cs repnz lods and flds lock orb in insb push lcall xchg insl (bad) pop (bad) dec les and sbb cmpl sub loope lock out sbb xchg pushf lahf bswap bswap mov pushf lea jmp push pushf mov bt clc repnz mov push lea jne movsbw pushf cwtl seta movb lea pop lea push movsbl setne cwtl lea pusha pusha pushf movl pushf push push mov mov push pushf movb mov pushl ret pushf pusha lea ja add cmc sub push sub add test mov ror call dec xor arpl jbe repnz xor fldenv and ret pop (bad) shrb dec jmp repz sub xor jmp push cmp mov xor addr16 stc in sub inc incl xor mov push insl sti push cmp sbb add or leave int3 mov icebp int3 sbb lret pop (bad) jp push mov inc fdivs sbb mov mov lods test movsb add adcl enter fistpl nop cli jno lcall xchg inc inc sub mulb rorl int and scas stos imul and xlat xchg pop and aaa or xchg cmp int cli int es or or mov jo fldenv test std mov sbb xchg stos mov push inc in jge stos fsub enter test sub insl pop adc jg push sbb push jo aaa ret scas cmp inc (bad) adc mov sti scas cmpl test pushf sti jbe rclw sbb sti enter cli ror mov (bad) xchg in (bad) dec pop (bad) rorb mov stc popa or aaa repz mov insl cmpsl in (bad) out aam xor lds jb adc mov sbbb fisubrl inc or add sbb jb inc mov dec popa addr16 (bad) mov in data16 adc ret addr16 xchg add mov loop xchg ret cmp je (bad) sub out xchg lret sub movsb cmpsb xchg or fdivr movsl aas jbe dec ja mov iret stos loopne dec lods ljmp jae stc (bad) icebp push mov jmp data16 sti jbe sbb aam jne adc mov push in jb xor xor iret and or ds mov xor push clc icebp and lock lods dec and xchg push ja inc out mov xorb jecxz xchg xchg gs xor ljmp int3 pop icebp mov xlat pop lods add push xor pop sub jecxz sahf cmp or jno bnd cmp mov (bad) lods adc sbb inc decl fs push cmpsb clc hlt mov gs clc sar jne mov pop mov and popa mov roll cmp jg loopne mov mov pop movsb rcrb shrl pop or shlb adc fbld (bad) cmpsb sub fwait orb mov push mov sub xchg shrl sbb cmp cmp xchg xchg arpl loopne ja sub in pop (bad) lock cmpsb jle mov adc add test add in in popf popa or pop subl bound inc add mov mov fcmovne xchg dec sbb adc loop jbe jae pop add mov xchg arpl adc adc (bad) mov or inc push inc test push cmp cmpl popf jno add lcall das addr16 call sub scas ja lds pop cmp pop rcrl loope push lds mov jae dec inc mov xorl int jle rolb add inc lret sbb mov mov (bad) repnz adc mov push sub mov outsl dec lret inc pop and jle dec loope mov jg dec jo (bad) mov jns pop insb pop sub mov pop pop incl dec adc adc lods mov inc cmp pusha push test neg lea jle push pushf pushf rol pushf add test bt neg call jmp fimull int jmp cmc mov clc test pop add leave push push rep arpl sbb imul add outsb mov mov (bad) js jne arpl loop mov xchg mov je test (bad) (bad) ja sarb (bad) in pop cmp pop or mov in add int3 mov daa addr16 ds loopne push adc jmp (bad) int3 and scas pop outsl mov add int sub cmpsb dec jno or xchg nop (bad) out pop std pop out add jbe aad daa and cwtl sbb cltd ja lret pop pushf jmp mov pusha movzwl sub bsr adc inc mov cmc pusha add bt add jns cmp mov call push lea jbe bts cmp sub sar pushf pusha mov lea (bad) cmc mov pusha add shr bsr shr not sar bsr bsr mov inc add jmp and jae divl data16 aad jns hlt cmp mov ret pop sub int mov mov inc and idivb adc pop sub lea pop mov das xchg std leave aam outsb in test repz mov mov adc inc rclb cmc test icebp popf popa fildl in jnp in ficom jnp aam xchg insl pusha aad into add pop xchg (bad) mov mov push jnp mov imul jns stos loop sub push or push flds lods daa in push pop or sbb cs pop xor sub inc lret pop and jge stos mov dec sahf ja sub outsb jg out adc fs ja pushf bswap xchg call adc fs divb add das lock jb addr16 cmp ffree cltd (bad) les jle jle dec icebp sbb rcrb and ljmp aam xchg jo iret (bad) xchg pop ss push aas xor push push inc jne faddl scas arpl popa jecxz mov sub movsb aad jg flds dec fstl hlt test dec adc test iret adc repnz mov test (bad) (bad) pop xlat pop (bad) mov fs cmp mov stos enter push movsb scas fbstp xchg xchg mov sbb rolb cmp out mov and mov xchg pop (bad) in jg push jbe mov cmp ds add adc add add push xor xor xor xor xor cltd xor xor xor xor xor xor xor xchg xor xor jno jmp jno call cmp push cmp arpl jo cli cmp cmp cmp cmp cmp cmp or aaa fdivrl lcall and add add add xor xor xor xor xor jbe mov xor xor xor xor xor xor xor xor xor xor xor xor xor sub push xor ja xchg xor les push ss jg scas ss ss aaa push aaa pop aaa push aaa lea mov aaa lock sub imul cmp cmp insb cmp cmp cmp pop cmp test sub cmp cmp cmp cmp cmp cmp cmp cmp idivb cli ds add push aas or push aas adc push aas sbb push aas and es sub cmp mov add add add mov xor jle lcall xor xor xor xor xor xor xor xor xor xor xor (bad) xor test fdivs push aaa push aaa imul aaa mov cmp mov cmp cmp lcall cmp cmp cmp pop cmp int3 cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp ja (bad) cmp nop ds aas mov xchg aas movsl aas mov mov mov aas int sarl out out aas cli aas add add or push xor xor xor xor dec xor xor jnp xorb xor xor xor xor popa xor xor xor xor xor dec xor jp jg cltd xor xor xor xor xor xor xor mov mov xor xor xor xor xor xor xor xor xor mov xor mov aaa mov push cmp cmp cmp cmp cmp cmp cmp int3 cmp cmp mov scas aas fstpt cld aas add add xor jg fidivl push xor arpl jns (bad) xor xor xor xor fdivs hlt xor xor push xor xor xor xor xor xor movsb xor repz das ss aaa mov cmpsb aaa loopne jmp inc cmp jge lods cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp mov loop es xor cmp pop aas fistpll add add add add add or jg fwait xor xor xor xor xor xor xor jns mov xchg lods add push aaa xor push aaa insl aaa push cmp xchg loopne adc sub xor cmp pusha cmp jb jg mov xchg cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp push cmp jg scas cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp jae (bad) cmp cmp cmp lret cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp dec cmp jae (bad) cmp in cmp and cmp outsl je,pt lret or push aas xor pop aas jle xchg lea out in aas repz add add add popa xor outsb xor xor xor xor xor xor xor xor xor adc sbb and xor xor xor dec xor push xor jo lods xor xor jno test xchg xor xor xchg xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor inc xor or enter mov clc aaa xor cmp cmp cmp cmp cmp aas aaa aas add add add add push xor (bad) xor xor xor lods xor xor xor add or ss push cmp cmp ret cmp iret cmp cmp cmp cmp cmp cmp cmp and cmp mov fidivrl loop mov add nop add push add add xor xor xor imul cmp aas cmp test cwtl cmp cmp xchg cmp fistpll xor inc ds jnp,pt int3 add pop aas xchg test mov add add enter std xor xor xor jge xchg xor xor xor xor xor push xor popa xor (bad) xor xor xor xor xor adc xor xor xor xor xor xor xor xor xor xor xor lea mov ret ss ss ss jb jge (bad) ss or lcall cmp cmp cmp cmp cmp test xchg cmp or sub das cmp push cmp test mov xchg cmp cmp cmp cmp cmp adc insb cmp mov cmp cmp cmp ds mov add sub push aas push aas pop aas insl aas jae jge (bad) aas xchg aas cmpsl aas mov aas hlt aas add add add adc xor pop xor xor xor xor xor xor xor xor pop xor jae jnp xorb xor xor xor xor xor xor xor cmp xor push xor mov mov xor xor xor jge popf xor xor xor xor push xor (bad) xor movsb xor sbb and daa ss ss imul cmp aaa leave aaa divl push cmp cmp stos cmp cmp cmp pop cmp cmp cmp push cmp test lods cmp cmp pop cmp mov mov cmp cmp cmp cmp cmp mov ds fidivrl out ds aas dec aas jb fdivrs in aas add add add pushf add add xor xor xor xor xor xor dec xor mov scas xor xor xor sub xor xor xor xor xor xor pushl pop aaa and aaa jge mov icebp aaa and push cmp cmp cmp mov sahf cmp cmp cmp cmp pop cmp cmp xchg cmp cmp add pop ds aas mov mov add push xor xor aas xor jo xorl xor xor xor xorb xor xor xor xor xor xor xor xor xor out xor inc mov mov add push aaa and aaa push aaa pop aaa jo lahf aaa (bad) aaa xor cmp je mov sahf and xor dec aas imul aas sarl add add test add adc push xor xor xor xor xor xor xor xor push xor jbe xorl les (bad) xor xor xor xor xor xor and cmp imul aad sub cmp inc xor (bad) xor xor xor xor xor ss ss sub ss cmp leave cmp cmp jbe push cmp cmp cmp cmp cmp cmp cmpb ds sbb push cmpl aas add add add mov add aas xor xor xor sbb and xor xor out xor xor xor movsl xor pop xor xor xor xor xor xor xor xor outsb ss xchg ss aaa fbstp add sbb xor push cmp test lods cmp cmp cmp daa cmp push cmp mov mov cmp cmp cmp les push cmp cmp cmp cmp cmp cmp cmp cmp je fistpll dec ds lods ds adc xor inc aas fstpt cli aas add add in add inc xor dec xor data16 xor xor xor xor xor xor xor xor xor xor dec xor je xchg xor xor xor xor popa xor xor xor pop xor mov cltd xor xor xor xor xor xor xor xor xor xor xor xor fwait xor mov mov ss les or je xchg leave aaa lods cmp cmp jecxz cmc cmp cmp cmp cmp fnstsw adc sbb cmp push xchg sahf ds ds aam sti adc cmp cmp aas jno jle test (bad) aas xchg aas fwait aas les fistpll icebp aas idivb add add mov xor xor inc xor insl xor xorb xor xor xor xor xor xor xor xor xor xor xor push xor imul xor jnp xorb xor xor xor xor xor xor test mov xor xor xor xor xor xor lea sahf xor xor xor xor xor xor xor ss aaa mov adc insl cmp cmp cmp cmp cli cmp cmp (bad) cmp cmp cmp cmp cmp cmp add and add add add xorl xor xor xor xor xor cmp lea add add mov xor xor xor jo jns lret xor adc and sub movsb fidiv out pushl or sbb and sub xor pop aaa bound jb jns jle xorl aaa (bad) aaa xchg aaa lcall aaa mov mov aaa (bad) aaa call aaa or mov cmp int3 cmp cmp cmp cmp pop cmp cmp cmp cmp cmp cmp cmp cmp cmp test push aas add add xor xor xor xor xor xor xor xor xor sbb and sub push xor pop xor xor insb xor je js jl xorb xor xorb cwtl xor xor xor xor aaa jmp cld aaa sub push cmpb cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp repnz mov test sarb hlt add pop aas popa aas xchg add add add xor xor (bad) xor xor xor movsl xor xor xor xlat xor xor xor xor xor movsl xor ret cmp or cmp cmp add pusha add inc add add xor xor xor xor aaa or sub cmp test cmp es push aas or push aas adc push aas sbb push aas and es mov add add xchg cmp xor xor xor pop xor xor xor xor xor xor xor xor xor xor xor xor ljmp cmp mov jmp sbb xor cmp cmp cmp enter sarb aam fdivrs fdivrl ljmp add add xor push xor and cmp dec xor xorl mov add add push xor xor xor xor inc ss ss fnstsw imul cmp cmp cmp lret cmp cmp cmp cmpsl cmp cmp cmp cmp cmp cmp cmp cmp sbb and dec ds fidivr repnz ds aas push aas insb aas cmpl into aas fdivrs out add add or mov (bad) xor xor xor xor int repnz xor xor es sahf or xchg (bad) aaa cmp cmp cmp cmp fdivrs jmp cmp cmp cmp cmp cmp cmp mov (bad) cmp add pop cmp inc ds ds ds xlat fdivrl aaa aas aas aas inc aas push aas pop aas gs insl aas jne jp cmpb mov add mov xor xor xchg xor xor daa xor xor xor xor xor dec xchg mov mov cmp cmp cmp cmp jl xchg cmp cmp (bad) cmp cmp xor xor cmp cmp inc cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp xor cmp mov mov cmp push ds xchg pushf ds add xor add icebp xor xor xor xor xor xor pop xor pop cmp jbe enter cmpsb add add add je add jmp xor xor xor xor xor xor xor xor xor sahf xor ss ss ss mov mov ss xlat fidiv in in ss add or pop aaa and and aaa ds dec aaa pop aaa outsl aaa jnp mov cmp cmp cmp mov (bad) cmp cmp cmp add cmp add ret xor xor xor xor xor pop xor push xor jne push cmp pusha add sub dec aas fnstsw in out aas add add movsb add add xor xor push xor (bad) xor xor xor xor xor xor xor xor xor xor xor xor dec xor xor xor xor pop xor xor xor xor xor or scas aaa fdivs divl push cmp cltd cmp cmp cmp pop cmp (bad) cmp cmp cmp cmp pop cmp cmp cmp cmp cmp cmp cmp cmp mov cmp push aas mov mov add add call xor xor xorb xor xor xor xor xor xor xor xor xor xor xor push cmp inc ss ss ss xchg ss lods ss (bad) ss aaa (bad) aaa sbb insl cmp cmp (bad) cmp cmp cmp cmp cmpl cmp cmp cmp cmp cmp cmp cmp cmp cmp test cmp cmp cmp cmp cmp jbe jl mov movsb cmp sarl add pop ds and sub cs ds ds ds ds ds ds jne test lcall ds ds loop,pt call aas pop aas add add add nop add add push xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor arpl outsb xor xchg popf xor xor xor xor xor xor xor xor xor xor xor jp xchg xor in repnz iret sub xor repz cmp cmp cmp cmp jne mov (bad) cmp repnz ss lcall add and add add xor xor ss push cmp pop cmp cmp outsl cmp inc cmp mov mov cmp pop ds jl,pt cmp mov xor add add mov xor xor xor xor jge and sahf aaa cmp dec cmp cmp cmp cmp fnstcw add add add add xor cmp push ds arpl push ds ds ds ds ds ds add dec aas push aas push aas pop aas pop aas ret aas call aas clc aas cld aas add insb add add xor xor cwtl xor lock xor xor xor xor inc ss ss cmp cmp cmp cmp cmp cmp cmp pop cmp cmp cmp cmp mov mov and fdivrs mov mov add add add xor xor xor xor sahf xor xor xor ss (bad) ss add sbb lea mov into aaa ljmp cmp cmp cmp cmp cmp push cmp nop cmp cmp popf cmp cmp push aas je add add add dec xor mov xor add aaa xor cmp cmp cmp cmp addb je add movsb xor inc ss ss mov aaa loope jmp cmp cmp cmp cmp cmp cmp cmp cmp inc cmp xchg cmp cmp cmp cmp cmp cmp cmpl scas cmp xor aaa jno,pt jbe jge (bad) mov mov std ds aas or xchg aas cmpsb aas add add dec xor xorl (bad) xor xor xor xor xor xor xor xor or sbb daa xor jl xchg xor xor cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp fidivr sbb loopne add add add mov out xor xor xor xor cmp add mov add add cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp out add add add addb add xor push xor jbe add sub xor push ss xorl push cmp cmp (bad) popa cmp stos cmp cmp cmp cmp cmp cmp js mov sub push cmp lea movsl cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp sahf ds aas push aas bound add add add pop add add xor xor xor xor xor xor xor lahf xor mov ss call cmp cmp cmp cmp cmp cmp cmp stos aas mov mov aas (bad) aas add add add sub add outsb xor or cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp jno,pt add add add sbb add (bad) xor adc sbb and sub sbb cmp add and add aas xor xchg mov inc xor test cmp imul add adc add add add ss aaa sub xor cmp outsb cmp mov jmp cmp cmp cmp cmp cmp cmp adc sub inc cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp jb add add sbb add (bad) xor aaa ss ss ss ss cmp xor add add xor xor xor xor xor xor xor xor cmp cmp cmpsl cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp add inc add adc add les lret ss add add add add or repnz xor xor xor xchg xor ret aaa jecxz xor cmp cmp cmpl cmp ja sarb fstpt add add add or cmp inc xor xor pop arpl ss ss ja jnp xorl nop ss ss ss ss xlat fbstp lock pop aaa loop (bad) aaa fnstsw jecxz jnp sarl pop cmp jo add add add cmp cmc xor xor inc cmp cmp loop call aas aaa aas inc aas push aas pop aas mov addb dec add add aad pop xor xor xor xor xor aad in xor popf aaa movsl aaa push cmp cmp cmp cmp jl mov cmp cmp add nop add xor add sbb push xor xor xor xor xor xor xor xor xor inc xor adc xor mov cmp test add xor cmp xor xor xor xor xor xor xor xor xor xor mov in or cmp (bad) cmpsl ss add dec aaa fs test mov cmp cmp cmpb cmp cmp cmp imul cmp cmp cmp cmp cmp cmp cmp cmpl adc cmp cmp cmp cmp cmp cmp or pop lea ljmp aas mov aas mov ret aas fnstcw in in aas repz sti aas add add or sbb pop xor xor xor outsb xor test xchg xor xor xor xor xor xor xor xor xor xor sub xor xor jns test nop xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor add rolb pop add add inc xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor or adc xor add sbb add xor cmp inc xor xor xor xor xor movsb xor les int3 xor xor xor dec xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor cmp cmp cmp cmp cmp cmp nop cmp mov cmp mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp loopne add add add js cmpb cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp dec cmp pop cmp push cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp sbb jo je js jl cmpb cmp cwtl cmp movsb cmp mov mov mov cmp aam fdivrs lock cld cmp adc adc sbb sbb and and sub push ds ds ds add add or add test lods xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor or adc sbb and sub xor cmp inc xor dec xor pop xor fs jo je js jl xorb xor cwtl xor movsb xor mov mov mov xor int3 xor fdivs in call xor cld xor or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc ss ss ss ss ss ss ss ss ss ss js jl xorb mov mov nop ss xor xor cmp cmp push cmp add adc mov xor pushf xor test lods xor mov xor int3 xor fdivs in call xor cld xor or or adc adc sbb sbb and and xor xor cmp cmp inc ss ss ss ss ss ss ss ss ss ss js jl xorb mov mov nop ss ss ss mov lods ss mov mov add sbb add push xor xor xor mov mov add add add cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp adc inc cmp pop cmp push cmp test mov enter fdivrl hlt cmp and sub cmp cmp inc ds ds jo,pt je test mov mov nop ds ds sarb ds fdivrs fdivrl in cld ds adc and and sub xor dec aas pop aas pop aas insb aas jo je jl xchg aas movsb aas test mov enter fdivrl in aas lock hlt aas cld aas add add add adc and sub cmp cmp inc xor pusha xor je test mov mov nop xor les enter fdivl loopne in in xor adc sbb sub sub xor xor cmp push xor xor xor mov mov mov xor xor xor xor xor xor xor xor inc xor dec xor push xor pusha xor mov mov pushf xor xor xor xor xor xor xor xor xor xor xor xor xor cmp push xor xor xor xor int3 xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor fs ss ss add and inc aaa pop aaa pusha aaa xorb aaa (bad) aaa loopne add and inc cmp cmpb cmp lock cmp cmp inc cmp jo nop cmp cmp cmp sbb cmp push cmp je js cwtl cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp adc sbb sub xor inc cmp push cmp cmp cmp cmp adc cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp and sub inc cmp push cmp js cmpb cmp mov cmp loopne call cmp sbb and sub dec ds ds movsb lods ds mov ds sub dec aas push aas pop aas jl mov sarb aas hlt aas add add add add or and sub xor cmp inc xor xor cwtl xor lock xor xor jo js test movsb xor xor xor xor xor and inc xor xor cwtl xor xor xor and xor inc xor pusha xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor push xor mov les cld xor dec ss ss ss xorb ss mov mov ss xor inc aaa push aaa pop aaa mov pushf aaa test mov enter fdivs in add adc xor cmp je mov xchg cmp les int3 cmp cmp cmp and sub xor inc cmp cmpb cmp cmp cmp cmp cmp cmp cmp cmp pop cmp jo mov cmp cmp cmp cmp cmp sbb and sub cmp pop cmp mov cwtl cmp cmp cmp cmp cmp or sbb cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp xor fs cwtl cmp mov aam loopne add add add xor xor mov mov mov xor xor xor xor xor xor xor xor xor xor xor xor xor cmp cmp adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp cmp cmp cmp cmp cmp nop cmp mov cmp les enter sarb aam fdivrs fdivrl loopne in call cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp inc cmp dec cmp jo je js jl cmpb mov mov nop ds ds mov loopne add and inc aas fs nop aas mov aas lock hlt aas clc aas cld aas add add add xor xor enter (bad) xor xor xor xor xor xor xor xor xor xor xor xor xor or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc xor xor xor xor xor xor xor xor xor enter (bad) xor fdivl call xor add add push add add js jl cmpb cmp cmp mov cmp mov and add add nop xor xor push xor xor xor xor xor inc xor jl cwtl xor addb adc add call cmp add nop push add add push xor add mov add (bad) xor xor xor mov inc aaa ret aaa out aaa cwtl cmp inc cmp lods cmp sarb cmp sarb pop aas aad add add stos xor xor xor fnstcw add push cmp cmp add push add add jns into xor adc xchg xor xor addr16 cmp or and (bad) cmp pushf cmp push ds add cmpl push add add jecxz adc daa xor xor xor xor xor xor xchg enter or dec cmp cmp cmp cmp cmp cmp cmp cmp add push add add xorl xor xor xor leave xor pop xor xor sub cmp cmp cmp mov add add push add add add xor (bad) xor xor jle aas bound popf ss aaa mov cmp cmp cmp sbb xor inc jno,pt add add pop add add mov (bad) xor xor pop xor sarb add pop cmp sahf cmp cmp add pop add add add xor mov ss and mov cmp and add add add lret ss ss cmp cmp cmp cmp cmp mov add xor add add wrmsr sub in adc ss ss inc aaa xchg mov cmp cmp cmp pop cmpsl ds aas add add add add add xor push xor xor xor xor fwait aaa divl cmp sub mov ds sbb test add add add ja add xor in (bad) xor xor sub pop aaa fnsave inc cmp cmp cmp mov cmp cmp add add add insl xor xor xor cltd xor xor xor xor jnp mov lret cmp in or sbb cmp test sbb add add add add xor xor test cmp cmp cmp jnp lret ds aas in add addb xor add fwait xor xor xor xor xor xor xor into cmp pop cmp cmp cmp mov add add xor xor xor les xor push cmp sbb cmp aaa cmp cmp cmp dec aas add add mov xor aaa cmp bound mov mov cmp cmp ds aas jno add add add and pusha xor xor xchg xor xor xor xor sub pop cmp cmp ds jp fstpt add add pop add add add xor xor lret xor out cmp cmp cmp cmp cmp cmp add add pop add add add xor xor xor xor xor cmc aaa jno popf cmp cmp cmc aas add add pop add add iret xor xor xor xor xor xor pop cmp icebp cmp cmp cmp cmp cmp jno lahf aas hlt aas add pop add add cmp mov lcall xor mov int3 xor fwait les pushl xor mov cmp jno int push aas add or xor add cmp jmp xor sbb dec ss fnsave pop cmp cmp cmp cmpsb ds aas (bad) aas add add or cmp add xorb xor xor xor xor xor aaa mov cmp cmp cmp cmp lahf ds das aas test add and add add add xor xor outsb ss daa cmp cmp fistpll push cmp cmp add xor add add sbb adc inc xor xor xor jp int3 xor xor (bad) divl aas cmp cmp cmp out adc xor jo cltd cmp cmp cmp cmp cmp add add add inc xor xor jnp xchg xor inc aaa xchg cmp cmp cmp cmp and cmp movsl aas sarb add add add add or mov fnstenv and xor xor xor xor daa ss aaa dec cmp ds ds adc nop aas add add add add add dec xor insb aaa jnp cmp iret cmp cmp stc cmp cmp (bad) sub add add add add jecxz fdivl xchg aaa loop push cmp cmp pushf cmp add add cmp enter (bad) xor xor xor xor xor lahf aaa adc xchg call cmp cmp cmp cmp aas pop aas outsb aas aam in aas add add add inc xor xor fidivl xchg xchg push cmp cmp jg pop cmp cmp or xor add adc xor xor dec aaa addr16 into aaa xchg cmp cmp cmp cmp add add add outsb xor xor inc xor xor (bad) aaa cmp pusha cmp cmp cmp add or and add lods xor xor xor mov fdivrs out push cmp cmp xor rorb add add add (bad) xor xor jecxz inc aas pop aas mov add loopne add add jge mov xor xor mov adc xor xor xor divb mov divl (bad) aaa lods aaa sarl pop cmp cmp cmp xchg cmp mov add lock and add cli xor stos xor aaa dec cmp cmp cli cmp add add or cmp add or pusha xor lods xlat ss cmp sahf cmp cmp cmp jns lret cmp cmp lock xchg aas add or sub add js mov aaa test cmp cmp cmp int fdivrl insb aas add add or xor add xchg xor xor insl xor xor mov ss pop cmp cmp out cmp cmp cmp cmp or xor add pop xor adc xor xlat ss cmp cmp cmp cmp insb aas lods aas add add add add xor xor xor xor cmp stos cmp cmp cmp add add add add xor xor mov add inc ss ss aaa les add inc cmp cmp lds sbb mov (bad) cmp add add add add add dec xor xor xor xor inc aaa imul cmp cmp cmp cmp sub add add add add rdmsr xor sahf xor xor xor xor cmp cmp xor mov (bad) cmp cmp cmp cmp add orb and add lcall xor xor jne mov cmp add add or sti xor xor lods xor xor xor (bad) fbstp cmc cmp add mov add push pushf xor xor xor xor xchg xor int3 cmp cmp add add pop xor xor xor sahf xor ss out aaa xor mov sub mov add or sub add pushl pop xor xor xor aaa cmp and cmp cmp cmp cmp cmp add or and add outsl xor xor movsl xor xor xor ss ss cmp cmp cmp add loopne add add add xor xor xor xor jmp aaa jb into aaa pop cmp cmp cmp cmp lock xor add push jge icebp xor mov xor xor inc aaa jnp sbb cmp jl push cmp cmp inc cmp add add add add add movsl xor xor mov ss ss ss sbb cmp cmp cmp jae mov add adc add add xor or lcall xor xor lds aam add pop cmp mov es cmp add xlat aas repz add or xor add test jmp pop xor xor aad or (bad) aaa ds cmp cmp jb,pt test cmpsb test sahf aas add add or and add leave xor xor cmp mov cmp cmp cmp cmp add add add add arpl es xor xor (bad) aaa adc and add cmpb cmp cmp cmp or and add xor xor xor ss cmp cmp cmp pushf fdivrl add add add add add jns push xor xor xor xor xor lret aaa adc push cmp cmp cmp in add add add add sbb jae stos xor xor xor ja mov xchg mov cmc and pushf neg xchg cmc push rcl bts setp push mov inc mov dec ror mov xor call pushf pushf mov pushl pushl ret pushf lea jae jmp pop es les xchg stc lret movsb jb (bad) sbb (bad) ss mov jb add lods (bad) push push mov pop and xor dec and jg loope pop xor fcoms sub lds mov mov clc outsl pop pop pop dec fnsave fnstsw out scas in dec test push pushf mov mov out mov scas (bad) mov rorb and ret or add inc outsl ss xor or xchg jp das ffree push orl dec push cli xor iret or pop or sbb ret xchg mov sub int lea cmp adc xor mov in mov or into cmp cltd xor out out ror or in hlt js sti adc ljmp push push movw lea jne lahf movsbl movsbw movb movsbw not call mov jbe lcall xchg pop and lods mov sub testb xchg lret mov jl mov push push int3 lods shrl and loop aaa inc lcall jle pushf lods mov (bad) std test and (bad) scas push jbe adcl pop sti mov xchg lods mov lds push mov mov jmp xor xchg imul or loope push cmp cltd mov bound in mov (bad) stc clc push (bad) bound lds ljmp push das pop mov cmp cmp (bad) ljmp addr16 leave jmp outsb add sub push adc cld mov sub (bad) mov jae or sub cld inc fnstsw mov sbb fidivr mov xlat mov sub data16 aad mov push inc sub icebp das and inc lcall fistpll repz out sbb test jp adc dec add sti fsts mov out lahf nop mov pop or sarl xchg imul and xchg scas rcl out pop and pop (bad) or outsl loop sbb iret insl push sbb mov mov pop aam dec inc shlb leave ja jno mov rolb mov jbe lret scas fwait scas inc push cli lds sbb cld enter push and jns pop pusha jmp adc add xchg std outsl sbb sbb xchg pop jb lock lret mov loope in fistpl dec mov push in aaa jnp pop and fmull mov mov mov es popl hlt inc in pop inc or inc test lcall jnp sub cmpsl loop xlat jno (bad) rcrl add data16 aaa xlat mov loop ret and fnstenv sbb cmp mov add push cmc mov bt pusha cmc cmpb movb lea jne aam jmp pop std pop ja jbe ficomp fcmovne and pop icebp ficoml clc stos jg jecxz xchg clc negb push sarb push scas mov in or sarl xor arpl pop mov or sbbl or (bad) cmc mov ljmp mov xor loope pop xchg mov fidivrl js movntps popa imul sbb rclb xor iret out cmp stc lea jb pusha shr call add add add sub add js push add add add add add add add mov push add add inc leave add (bad) pushf add dec fild add jecxz add pushf add in dec add add add add add add add add add add mov push add mov push add mov push add push add push add je outsl fs gs imul insb insb add jae popa insb insb add fs gs inc outsl jne je jb gs push je imul gs arpl jb add jb imul add insb outsl popa fs gs inc outsl jne je jb gs push je imul arpl outsl js pop insb insb add das repnz xor add cmpsl data16 xor sbb pop or aas ret idivl incb or inc enter stos and in in loopne sbb xor addps sbb push ljmp test in sub pop adc jmp shlb pop xchg call xor sub pop outsb out mov pop push jo jne jae or fsubl cmp lret (bad) pop lods sub xchg push sbb inc outsb and adcl sbb or repz jae std fistpl cmp arpl int3 test data16 in dec (bad) (bad) sbb ja mov movsb jmp sub scas fdiv xchg jne sbb lret and jmp sar mov cmp data16 outsl mov mov mov and push push adcl cmpsl lahf test push pop repz lahf js mov jne sub mov das movsl inc mov addr16 xor shlb jle imul scas jecxz dec cmc sti mov stos in int3 and mov fnstsw (bad) jle jae push hlt nop insb mov push out sahf (bad) and sub rcl push mov sub or cmp xchg faddp xor push mov test inc movsl push jbe popf lcall xor fimull jo add pop jbe add lahf push sti rclb loopne popaw cmp imul in dec aad mov xchg sarb addr16 rclb bound enter push loop dec lret sbb xchg push out lcall pop outsl and and (bad) cmp xchg mov in sbb sbb ret sbb or sarl pop xor movsb sub leave sbb dec jo xchg or jbe std xchg shrl inc lock addr16 mov ss dec sarl inc jne je (bad) xor xor (bad) int or sub sbb cmp mov divl dec inc stc ret xor cltd fs in add and call or std cltd cli dec (bad) enter xchg and mov mov mov mov inc cli xlat stos pop push scas aam pop or insb and sub loop lods dec xchg sbb jp mov cmp jno enter sub (bad) xchg int3 mov sub fsubrp sbb xor in jo repnz loope cs dec (bad) push sbb xchg lds outsl ss push mov xchg xor mov mov cmpl pushf call leave lock mov ja stc or rclb sbb xor jo sub jns xchg jno xchg roll popf xchg ja cld inc dec or loope push sbbl cmpsl inc shrb sarb inc push std dec adc push push xchg stc xlat xchg icebp xchg pop mov mov divl or bnd dec mov mov sarb dec mov xlat and or imul and or imul int pushl out pushf xlat test inc and lods xor out xchg sbbl mov jne rolb ficompl add in (bad) nop or cmp stos (bad) loope cmpsb adc mov xchg addr16 rclb std and fdivrs test inc fxch in stos (bad) loop xchg out xchg push icebp mov mov xor leave dec cmpsb xor cmpsl (bad) cmpsb dec jb cwtl and xchg pop fisttpl nop mov adc push mulb pop idivb or sti out dec jmp jnp in jmp xchg mov adc xlat sub test dec in push push rcrb imul bound repz bound outsl iret xlat insb ret mov stos push xchg jnp aas negb add push fmulp xchg aaa (bad) dec push (bad) loopne dec repz jae iret nop test clc outsb outsb xor ljmp pop inc xor mov pop dec cld xor fimull loope mov call push mov and inc pushf push pop and fstp mov cmpl add lods scas pushf (bad) mov pop inc adc pop mov xor mov lods (bad) lret into insb add and mov ficom inc xor adc insb or arpl mov cmp (bad) dec xor or push push decl lea cmpsb cmp sbb ficom and jno fcomip pusha pop sbb jns adc mov pop sub adc mov xchg mov jle xchg mov pop fiaddl or ds mov mov aas adcb lret fwait inc mov pop mov push pop adc xlat std adc dec jle (bad) jno sub inc xchg xor pop aas sub cmp push rcrb (bad) int enter movsl in sbb push cmp jmp mov clc addr16 stos ss test ret xchg repz cmp sbb (bad) lock mov push stos (bad) jne fdiv bound jmp (bad) out xchg imul sbb xlat leave imulb sbb and and insb (bad) out or arpl out loopne xchg lahf ljmp add sbb xchg sub mov jl xor mov clc out lret into popa cld mov in inc (bad) jnp mov jb sti xor dec out loopne arpl add inc sbb movsl jae leave mov sbb add imull bound (bad) jmp mov or adc push fwait (bad) out push in sbb aad mov pop sub push sahf mov rolb aaa jns sbb xchg or jle jl xchg ljmp or pop in out enter nop xorl adc mov insl cmpsl addr16 pop cwtl push sub mov stc push mov mov cwtl pop jp test fdiv pop iret xchg subb jnp dec mov lret fadd pusha pop ljmp scas call xlat push push repz or notb sbb cld and insl push insl jmp and mov pop push pop and fidivrl cwtl test cmp sbb mov mov xor popa scas rolb and inc fisubl dec cli fbld into leave test push imul mov sarl mov leave add push into aaa icebp loopne cmp icebp nop cmp lods jle push adc cmp testb jbe sbb cmpsl test adc (bad) mov je sub cmp imul jp std adc pop repz mov sbb std pushw js hlt mov popf arpl (bad) push or and enter jmp mov std xchg fistpl (bad) sahf add notl test in ret inc int3 mov negb cmp pop scas jno pop fdivs int sbb push cmc mov lock mov jbe pop pop xchg popf adc dec test mov dec inc out rcll jp and push push loope popa mov pop sbb lods jg aas cs aas ds pop imull jecxz dec xchg cmp clc int cs push nop xor xchg out (bad) (bad) sar mov adc mov push movsb in ljmp outsl aad jb outsl fucomi mov adc (bad) lea test lods (bad) outsl ss pusha mov cvtdq2ps mov xchg adc sub imul aad xor sti not cmp hlt inc pop xor (bad) (bad) push sbb hlt inc mov xor aas jb cmpsb mov jle xchg (bad) push jbe mov mov or mov push mov xchg cmpsl mov ljmp mov ljmp fwait clc xor cmp mov dec jnp rorl lock jae dec and add mov mov or push xchg jge cmpsb or mov push jle (bad) (bad) jbe pop push lods add add pop jle mov mov cli pop or rorb cs js mov aas xor aaa bound push push shll (bad) sahf cmpsl insb fnstsw pop loopne ret ljmp inc dec ffree rcrb jnp and sbb aad xor pop insl fisttpll adc sysenter inc je lds dec pop std scas jb je cs jle or hlt mov xchg dec pop fs mov fisttp cwtl and adc mov jge test sbb sub mov lds inc ret shlb lret icebp test jnp xchg std scas mov or fsubr mov add push (bad) repz mov xchg add leave ss push or out fs sbb xor out data16 mov mov xchg in cmp aad mov cmpsl lea das jb cmp js in test jmp pop jne enter cmp fsts incl jl sbb mov xor or xor mov mov pusha pop iret xchg (bad) sarl jl (bad) mov xor push nop sub addr16 cli push (bad) cld adc and xchg cltd jmp out ret jae push aad adc add mov leave scas (bad) cld hlt ss add pop rorb xor ds int3 (bad) in lret and mov xchg jg mov test pushf or xchg sbb dec popa daa xor add imul cs insb add add enter push add call movb jmp add jbe inc inc loope xchg and lahf jae in mov cmp (bad) fidivr sbb lret or and mov loop les (bad) push insl adc xor adc cmp add mov cmp xchg imul sbb lret rcrb sub push int dec push shrl sub sti enter sub adc imul xchg cwtl mov lahf inc xchg leave xchg add cmp fsubs scas scas and loopne ret orb rol (bad) pop mov mov jmp int3 popf pushf pusha push movb movl call lea jae push cmp movw pusha pushf lea jae cmp cmp pusha movl push lea ja jmp push in jo jbe xchg adc mov cmp mov sub fsubrs inc inc or lock dec add mov xchg mov les mov sti mov inc jae ss in sti and xchg and xchg push jbe xor cli lret mov imul jbe sti ret orl loop push cwtl ret scas push clc das test aas pushf je call inc loop inc add fisub xor das or dec push add xor inc nop mov mov ss adc test xchg cmc addr16 ljmpw mov int sbb movsb jle cltd adc aam inc or (bad) into hlt neg test mov (bad) cmp sub mov cltd jae out xor rclb xchg lret rcrb push or xor in xor pop test and sarb testb frstor idivl xchg test xchg cmpl bound out addr16 inc push sbb mov sbb and jbe orl push (bad) jecxz mov pusha call shrl inc (bad) iret pop sbb int (bad) sbb fbld push mov (bad) push fsubs push lahf push lods xchg sbb fwait inc jge jbe fcoms ret jl stc mov mov hlt int lahf pop je nop int negl clc mov jne ss cmp push es imul or sbb in xchg insl cltd jb popf cs push jle icebp pop mov aad jg add loopne (bad) aam inc fsub cli mov (bad) stc push pop xor push lret cmp cli (bad) jno cmp dec inc push jle popa iret jnp popl cmp bound (bad) mov outsw loope les push data16 in adc ret jg and jge pop sbb sbb xchg aaa sbbl scas jbe insl iret scas sahf jp push xor sbb mov popa pop push or mov test adc imulb add (bad) dec pop repnz add cs shrl xchg inc ss pop shrl mov stos jge mov dec (bad) in enter adc gs (bad) cmp popf aam mov cmp rorb repnz pop cmp sarl jne or mov in aad leave fstpt stc enter cmpsl roll mov rcll and xor mov stos js sub mov mov loopne movsl cmpsl push lea jb pushf pusha cmpb call push aaa popf lds xor mov xor hlt das popa les mov inc scas js ljmp (bad) (bad) lds in sahf push or neg jae mov adc cmp inc xor rol mov mov sbb add jbe mov test repnz xor mov imulb dec xchg rolb jb lss push jbe fmull ret push mov mov lcall adc mov xchg inc or xchg jbe imul add jmp cmp push jo lcall (bad) xlat addr16 int pop or push pushf pushf call pushf lea ja push push lea jb push mov clc cmpb call pop sub jle adc mov test xor dec and and xchg pop cwtl in out or mov aas fwait and or in lahf lahf push fisubrl out mov in mov rclb mov sbb xchg push lods sbb dec add out cli push jmp jnp mov loop outsl fsts xchg out icebp and mov rcll std xchg mov imul clc mov adc aam mov jne lcall cmp flds repnz loope dec mov mov cmc mov lods jbe xchg fcompl out int3 mov xchg gs cmp mov and or mov mov dec sub dec pop js mov mov pushf mov cmp fmul xchg hlt pop mov sub stos int adc sbb cli sbb subl fwait cwtl mov sbbb (bad) jns jmp addb cld (bad) (bad) fdivs adcl fcomps loop cmpsb xor movsb or leave jle dec jecxz push ja inc cmp or push dec imul imul in pop mov outsl cmp dec cltd push xor aaa ljmp int loopne popf fistpll adc ret lret das or fldcw fisttpll cld cmpsl or mov jg loop sub or mov sbb clc xlat out sbb mov subl outsl xchg je mov fsubr adc pushf jmp jo les (bad) xchg insl sub fsub ja add push or (bad) cmpsb xchg pop pop popa pop dec ljmp cs push push add (bad) ja movsb pusha and (bad) movsl push mov adc fidivrl insl inc addr16 lret (bad) std daa dec (bad) mov dec cmp scas adc jmp shlb mov lods xor pop xor xchg arpl lcall xchg or sub xor fabs fcoml xchg outsb mov push out call jno xchg jne inc and jbe push aad push cmp inc push add mov stc fsubs test lea in mov ret xchg lret nop mov pop iret gs mov mov fwait cmc pop outsb sbb mov movsb cld mov add lods (bad) (bad) jbe aam ret imul sbb mov dec ret add incb outsl jne and addr16 sbb out inc sarb pop stc imul int3 rcrl insl inc add dec insl ss push xchg movsl mov out sub mov and flds cld nop mov cwtl and dec or push dec imul stos test test cmpsb imul jl (bad) push inc aam cmp mov sub lods jno cmpsb lret fcmovnbe orb pop cmp cld clc sub jecxz insl add mov pop aaa ss adc jnp mov adc add leave jge call clc xchg push outsl ds sub mov aas fwait mov jle das stc cwtl mov xchg push jmp adc lds inc lahf xor lods inc jg jnp push mov cmp xchg adc add cmp stc pushl popl bt stc test cmp jmp lea jae jmp outsl insb xor cs insb add add rorb add add movb test add pusha lea jmp movb lea jb clc stc clc push cmp pushf pushf lea jae rol rcr xadd mov not mov jmp stc not test add test pushf pushf cmc neg cmc bt xor test test add test neg push test not call call inc add (bad) test int cs mov ror (bad) mov mov sub push pop xor cwtl dec jg out lea addr16 mov insl pop call adc mov lret gs mov pop xchg cs inc xor out adc rcrb cld fcomps ret test xchg jbe or inc mov jo xchg add mov imul or push imul lods sub lret (bad) aaa push das add inc fs in data16 ror gs or insb out adc lods push push sub daa scas bound mov jp pop push mov data16 add xor test data16 loopne stos pusha gs sub test dec sbb rcl ja sub (bad) cmp pushf xor pop (bad) shr loopne addl push sbb stos dec lds stos push lods das jmp stos inc lret call push cmpsl loope mov xchg (bad) cmc outsl scas outsb data16 push icebp push int push lret push (bad) lahf sub fs ljmp jbe mov in or lods mov rcrb dec push xor stos push gs js stos mov (bad) push or and push bound fidivr ret popa jecxz push inc add outsl (bad) call scas and sbb pushf adc (bad) cmp sub ss mov push dec pusha movsl and lahf frstor movsl stos jno mov xor push fcomp or pop bound dec xchg movsb gs roll imul jae cmpsb enter add push pop jg (bad) fldenv bound iret insl loopne push jo mov movsl cmp rolb push test jl pop js xor fprem1 mov xchg lret in mov sbb xor (bad) jp cltd aad sbb sub mov jle dec cld or icebp ds inc (bad) out mov outsl adc mov mov js cmc lds pop icebp mov insl sub mov cmp outsb sbb adc xor push movsb sbb jb pop inc hlt fdivrl mov adcl push push test (bad) notl lea leave sbbl xor movsl pop mov cmpsb sub mov lcall in movsl and stos mov dec pushf aas mov imul (bad) xchg stos pop jp inc adc rol mov imul xchg and dec je xor popa pop push test mov lea jne shrd rcr mov shl rol sar sub pusha sbb lea pushl call mov jbe mov ret fldl adc sbb lds cmp mov cmc cmp js out loope lcall mov inc pop and loopne pop adc scas fs test jbe popa lret out shrl adc imul lahf xchg out dec inc push out mov and imul push xchg or gs mov (bad) or aas es cmc daa (bad) mov lcall insb pop call cs lcall test sarl push and insl sub inc daa and push and sbb or sti imul jo pop cmp push and xor jmp jle es mov xor iret mov jge dec (bad) mov xchg (bad) scas popf aas repnz dec jge mov out jo and inc hlt jge cmpsb (bad) dec pop clc lods mov adc test call sub pop and jg cmp xchg in roll sahf je mov cwtl pop jne inc fwait int cwtl addr16 jo xchg sbb add jmp fidivl or xchg sub jbe sbb sbb (bad) push cmp cmp fnstcw test mov out repz bound xchg insl cwtl ret lock fistl rclb dec aam imul scas jno jle daa and lea adc pop lret pop adc loope cmp test add movl cmp call xchg jne xchg push xor (bad) rorb fucompp xchg sti leave cmpsb xchg sub addl mov inc popf push push or inc lea mov in bound pushw mov fnstcw lds xor push add movsl inc xchg or sbb push cmova xor insl loopne push rcll nop mov add push test scas push sub add aad popf pop xchg cmpsb sub cld lcall jns (bad) adc loop and xchg sbb mov xchg mov push xchg into (bad) jnp int3 fadds (bad) in (bad) lods push enter movsb jns outsb je xor je add movzbl lea movzbw pop lea pushf mov call jmp mov xchg mov cmp jns adc lods pusha sub adc xchg xor ja and movsb push ds (bad) xchg cmp xor mov push decl cmp jge cmp incl bound inc xchg (bad) jg cmp scas bound fstpt sub shlb (bad) pop pusha or sub xchg xor pop ret mov push pop (bad) jnp insb sarl sub or sub loope xchg push push in sbb mov scas jbe scas pop cmp not sbb and sarl xchg jg pop outsl fimull xchg (bad) mov fisttpl bound xor pop or (bad) jl xchg mov sbb cmp mov (bad) xchg add scas test mov sub jbe xchg push pop push (bad) sub cmp cmpsl nop inc or push adc notl int3 in cmp pop fs fwait cmp jmp in adc cltd mov lods inc insl xor scas sarl xor stos jno cli mov (bad) jno pop or clc stos arpl cs test dec pminsw mov pop int3 or and push pop fmuls sbb xor sbb icebp popf outsl xlat pusha aad out hlt mov sub jl hlt arpl icebp rolb pop mov rorl aam imul fdivrp jp aad dec stc lar mov lea jb pushf cmp pushf pusha pushl pushf lea jae and shld mov setnp shrd shr mov ror mov cmc xor cmc push clc pushf repnz pushf jmp mov jbe mov jl call sub lahf int3 jl xchg movsb xor jl mov cmp test xchg xchg jne cmc fcompl mov xor jge inc jl imul mov jle (bad) stos jbe inc pop rorb push lods bound xchg jge jp sbb inc sbb xor mov inc ficoml stos loop pop pop lods mov cltd mov dec jl leave add mov or fs ja rcl add clc add adc add mov call pushf jmp clc stc test movb mov jmp xchg xchg sahf jbe sarb lahf addr16 pop stc enter pop cmp or or add sub pop dec or dec jg daa (bad) mov daa in dec jne xchg push std push and icebp add das add cmp ficomp pop andl int jnp repnz mov stos jge das fdiv add in push fstpl inc ja rorb mov xor adc andl mov cld pop mov xchg push xchg xchg jne mov ret xor shr dec int3 jge lods xor jne xor cmpsl cmp sysret cmp lds cmp ljmp movb jmp jmp push movl pushf call xchg aaa pop xor test fistpll add int fwait cmpsb xor mov std xchg jnp pop xchg (bad) neg aaa adc sti fcmovnu jo sbb xlat mov (bad) jnp push loop push and inc mov mov mov and cmpsl insb xor jge jmp ljmp sbbl pop push sub popa and push sahf pusha ja xchg (bad) imull aas repnz dec pop (bad) into sbb hlt int sbb adc (bad) cmp jbe sbb stos xchg or test lret (bad) imulb and adcl xchg (bad) notl les fbld sbb jne adc lods lret in push ja rcrb das and test jbe inc xor call sti xchg int3 clc xchg mov orb pushf jbe frstor leave lds pusha adc fdivrs (bad) mov cmp mov xor xchg inc push aam push or je lea das out je ds jae and pop out or jne in leave rcll scas sbb jg and add xchg xlat or pop clc xchg lods mov jnp add push ja sbb fidivr fadds jne xor pop push cwtl into data16 stos dec (bad) nop mov outsl xor and cli xor pushf ds stos sahf sti fstpl push add rolb loopne pusha add clc cmc neg push cmp sub jmp lea lea jp pusha mov pushl movl call push push xor xor fs insb add jbe stos pop cmp (bad) lods xchg (bad) mov push ss jb sbb hlt jbe push adc not and pop lahf cmpsl pop sbb lods mov and scas xor jp mov add cld or icebp sbb fidivrl xor xchg ficoml pusha push (bad) jmp dec and (bad) pop adc fldenv xchg je (bad) ja jl mov sub icebp pop push add adc fmull jae push and mov jbe jmp mov in push cmp in mov hlt or lock xchg pop jnp call fs jae call jb inc ds jbe pop sarl lods add test dec and aam mov int3 je and cs pop and ror test lea sub sub xorl or ret sub inc dec jbe pop jecxz jno xchg push lret into mov and mov lock aas mov dec aam popf bound in nop stc mov cmp push sub fstl xor mov jne fildl and clc cmp add add mov icebp add mov inc cmc cmp pause insl sti scas fiadd pop and movsl inc jns jbe fsubl xorl stc xchg mov out mov jno jecxz push mov adc sub aad out in mov xchg clc aad cmp mov jbe in sub clc pusha into clc mov and movsb imul cmp mov out jne test iret nop jnp push jne jl rcl pop in fcmovne rep adc xchg dec dec or xor fistp or lods ret fcompp in not mov push xor repnz stc lds loope js or loop std call int3 rorl neg roll inc mov or adc mov push add (bad) mov js xchg popf jbe (bad) mov add mov jle adc xorl popf lahf add enter vrsqrtps jae aad ret xchg insl push test mov rcl push adc shl sub pop push je pop push mov pop mov mov les pushf call bound (bad) cli cltd jbe or fwait pushf inc gs stos push stc (bad) mov in int sub (bad) mov enter push xchg mov fld js or sahf es cmpsl (bad) jno (bad) dec adc mov sub jge leave fs ret dec mov adc lods in gs (bad) sti xchg addr16 fisub mov test add test xor lret xor (bad) je mov push outsl mov outsb xor mov test pusha jnp gs add mov pop jno add dec push es xor nop popa popa push sub adc clc popf test add cltd sti shrl inc or nop dec xchg pop repz jns add push adc fdiv jg jns jmp mov push jp dec mov fisttpl stc xor jne test mov inc insb mov adc add popf xchg add lods aaa es pop js stos sbb xchg sbb jb add mov aaa pop jp xor xchg and push (bad) hlt xchg scas inc sahf xchg inc pop sub cwtl pop mov xchg xor mov and adc movsl sbb in je xchg push sarb push push pop sbb loope cmpsb inc lds xor lods leave adc add sti mov and lea je add push test or cltd add sub call cmp mov pop rorl add mov ret mov repnz popf and lea add movsb stos dec jnp xchg cltd mov lcall mov inc shrl cld xchg and test sbb jns push push test fwait arpl cmp insb lcall and rcr jg loope mov mov or pop pop or mov mov xor jnp xchg gs scas mul nop mov imul shr pushf (bad) in jns loopne lds inc fdivrl fdivl jne lea ja pushf test add lea test or push lea je push pushf push cmp pusha pushf call sub push adc int lea (bad) cmp lret dec mov mov mov adc sub pop lods pushf inc jl lods nop test push mov xor push add notb sbb mov and and test ret (bad) aam das or insl test lahf dec adc add hlt inc stos bound daa ja sarb lahf jl imul lret cltd dec in jmp mov add outsl enter add and ja dec add not inc and pop jp inc or in lcall mov and std addr16 enter mov cmp rcr mov les cltd sub sub push and cmpsb jo or aam cmp jg test add lret sub adc lock mov cmp aaa outsl inc mov xchg fwait (bad) loop (bad) mov sub imul clc mov (bad) je dec sub xchg outsb lret jl push rcrl dec ret aaa or and je pushf pop ds pushf fwait call push (bad) mov pushl nop popa arpl sbb repz push (bad) xor inc (bad) pop in insb or mov push lods leave add test mov add mov popf insl and lret inc push es pop xchg cmc xchg xlat insl sub jmp jl push push aaa scas gs loopne pop inc insb dec pop fnsave jno mov insb pop pusha mov sbbl ss cltd in mul jmp shl cmp ljmp pop jb ret push ljmp add jo shlb lcall insb sbb sbb mov cs jmp pop xlat lods pop jl pop shlb sbb imul ror clc add imul stos cmp cmp (bad) jmp rclb stc imul mov sbb in xor and clc mov je mov (bad) pushf jae cwtl dec xor pushf fwait inc inc add rcrl mov jl xor gs inc jle dec or lock xchg push bound jmp pop inc dec movb dec (bad) imul xchg dec sbb add xor daa loope push out cmp stc test add xor icebp mov cmp in rcrl mov pop xor cmpsb fstp stos jp xchg (bad) std mov les add mov xchg jbe notl dec pop sub mov mov add xchg jbe mov and fistpl cwtl cmp int pop in xchg cmpsl rcrl lds lret xchg push inc fsubs add cmpsl aaa sbb scas sub pop or pop in imul les sub mov fsubr movsb insb mov add (bad) rorb inc push add xchg jno fnstsw clc jb sbb add cltd stos cmp insl pusha fmuls xchg jbe sti mov sahf mov adc ret jp cmp (bad) leave xchg sahf push mov dec in lods pusha ds int3 in sub cmpsl dec lcall das data16 xor lahf sbb rclb add jnp adc or or dec scas in sbb dec imul and shrb jle sahf popf xchg dec mov cmp (bad) out push icebp xor sub pop (bad) std push or inc mov inc inc inc cmp outsb (bad) dec loop out lods pusha idivb lea loopne fyl2x scas (bad) stc jno call mov cmp ret nop cmp aad sahf dec call movl movw push mov lea jmp fldt addr16 xchg jbe stos cs scas addr16 adc loope test shrl mov jecxz mov xchg pop adc cs xor ljmp mov hlt int ss mov insl clc cmpsb cmpsl pop and mov mov gs sbb mov push fldt fcoms cmp fs mov fnstsw jnp loop xor xchg hlt inc imul push pop loope outsl xor push cs imul pop mov dec gs or push insb and je,pn fist call mov push push xchg add dec pop adc mov or add add addr16 adc add add repz add add add adc add add aam sldt add add addb add adc add add add inc adc scas push adc xor or and or sub add add push cmp aam fist addr16 cmpsl xlat or mov mov dec stc inc and or xchg add pushf mov out cmp add sbb push mov push leave ja repz adc cs adc mov lret int3 add push call xor iret (bad) and jo lds loopne add lahf stc and ret repnz mov jno pusha in xchg dec jno jns xchg lds arpl mov mov mov xor lret lahf hlt out fidivrl aad in je pop jnp cmc fbld adc mov cmp or js loop iret add xlat insb sarb addl push adc iret in fmuls sarl icebp (bad) outsl loop adc clc pop adc ja ja inc add xchg inc inc mov inc leave push xchg out sub iret scas inc mov gs lock xor shll push xor mov push adcl or mov into push pop inc pop arpl sub stc pushf jp movsb pop lods mov or rcll call and aam test or hlt add mull ss das pop cld dec cmc pop test movsb in sub adc lock fdiv or inc fmull fsubp inc mov aas mov push or js cmp cmp cmp inc mov movsl cs jbe and dec ret push adc or push lods push outsl lods push cmp mov dec cmc push mov xor add xor (bad) lcall int xor jmp mov out int xor cmp cs cmp fwait xchg cmc leave (bad) dec jge and xchg dec sar out jno push lods mov daa xor mov mov push insl addl shrl outsb mov stos mov repnz lods xchg pushf test mov pop mov dec movsb sbb xchg repz pop push les inc (bad) test and jp push xor hlt jge mov and (bad) aaa mov jnp pop pop lock mov push sub push adc xchg out xchg push xchg fistpll jp add aaa lahf inc fistl subl out push pop lods js mov fwait push and adc in push dec mov addr16 or push je test mov cli mov sub imul repnz adc or dec nop bound outsb push mov int ljmp test addr16 (bad) mov out inc dec fcomp jecxz sub jnp clc xor mov hlt or add int pop cmp jle cwtl xchg mov imul and xor hlt hlt dec sub subl (bad) nop mov mov shrb not mov lret inc adc xor aas (bad) fcoml fist mov aad mov popa sub test sbb adc jecxz repz lahf cmp outsl jecxz int dec mov int cmp ret sub sub mov jnp cmpsl ljmp fwait inc arpl sti jns jle mov lods out adcl inc mov pop ss jecxz mov mov adc out add jns push mov fistl push arpl adc dec cmp mov jecxz mov lcall add arpl cmp movsb bound repnz pop sbb rclb xchg jg rclb popf fistpl cli cld shr aad call xchg pop dec lcall lock fsubrl xor dec addb ret adc daa mov mov sub (bad) out popf in imul xorl (bad) hlt and in and push loope test fisttpll cli jl mov cwtl push xor push jge dec das aaa in or jne push or dec movsl gs (bad) inc or xor sub mov int xor adc jno (bad) pushf add nop in cmp lock push es jnp lods andl cmc dec add icebp jecxz flds fwait pop jae (bad) cmp out subb das or mov pop xchg mov fmul push das jo mov movsl xchg jmp pop (bad) inc fisttp mov pop test sub adc sbb dec xchg sub inc daa lods mov lea movsb adc negl push jmp pop sub bound or add add and add aam jmp cmp jle rcr adc repnz push cltd cld ds cmc sbb xor fdivr push test dec mov pop test inc ret or mov mov inc sbb lds xor lcall xchg jne mul mov cmpsb inc pop inc repz sub xor fmull call sub imul xchg stos (bad) cmc call lea mov gs outsb dec pop xchg or dec adc shlb stos ret lcall getsec mov sub popa push stos ja pop out lcall push and ja test add dec ret sbb int jnp jb sub jl cltd scas or adc (bad) sub pushf addl jg nop stos cs or sub xor push cmp dec inc stos outsb pop mov xchg mov mov ss push adc dec or loop fistp neg dec ja ds jns ficom scas pop dec xor push pusha fnstsw mov mov sbb inc jae (bad) and mov sbb pop mov mov dec or mov bnd xchg add shll mov repnz and mov jp lret jne xchg daa gs int pop imul fwait sbb bound out cmp sbb cli xchg jg push cmp pop jmp pop repz xchg (bad) popa dec insl pop lock cmpl dec inc add lahf cmc test cli ss sub push cmpsl mov sbb inc std cmp mov lods sahf inc jo fwait stc adc imul std mov inc clc xor push ja jp sub xchg push cmc repnz aad inc cld inc xchg add loop fidivl incl andb stos jl clc mov stos (bad) je cmc mov lds mov xchg ds mov pushf in mov repz sub popf in in inc xor lahf fidiv inc inc push aas in mov adc dec (bad) sbb test push xor xchg scas leave test pop push xchg mov gs inc aaa xor loop and pop repnz lret mov xor hlt dec xchg lahf (bad) pextrw add pop and jno int pop into xor dec xchg ss ljmp jae,pn jg mov sbb and cltd mov cli xchg or addr16 jnp mov mov or add xchg cld (bad) push scas xor mov lds popf out jne out outsb jnp mov mov sbb jo jge dec mov push sub jae push or andl mov lcall mov call fnstcw mov cld cwtl jb xchg add and xchg sub xchg lds fucomi (bad) inc mov test int3 sub les sub insl dec bound (bad) das movsb push xor loop mov mov stc mov mov mov xorb xchg daa sbb cmp int arpl hlt cmpsb push cmc popf call cmc mov das jbe mov sub jmp out lret pop xor adc push xor test push mov loope (bad) fldl mov mov jecxz bnd push jo (bad) (bad) sbb imul xlat imul cli bound ret inc lds nop leave adcl add jl xchg out ds (bad) repnz mov test ds sbbl xchg repz mov hlt ret add dec pop sub inc inc sahf shrb arpl push das (bad) cmpsl sbb xorl lea mov andl pop sbb inc and (bad) cli ja adc push sbb pusha sub cmpsl mov push imul cli imul adc cmp cmp addl push in incb gs jnp insl pop add mov mov push dec pop jo xchg sub iret mov mov fsubl or jp std push cmp (bad) aad or insl hlt aad ds and js mov mov jge xchg pop fnstsw push adc jns mov jecxz movsl dec sub jns mov ja notb adc imul add inc repz cmpsb jp test mov imul mov add cltd jne out xchg mov sub xchg add pop pop enter lds insb sub into cmp test repnz inc mov mov out jle rorl add cwtl loop aam jecxz dec pop jl bound (bad) fsub jl jmp scas pop mov movsb and call sub pop sbb (bad) subb in aaa jl add (bad) ja popa es inc flds in xchg mov lea jg imul scas test mov mov movsb pop cmp or jl mov pop push and jg sti dec hlt add int3 jle out jmp cld in cmp push imul daa bound (bad) jmp fs push out subb int mov jae (bad) dec out cli jb mov clc jecxz jo pop gs fwait inc jg mov (bad) mov ds xchg hlt aad aas push cli xchg add cmpl (bad) and sahf fdiv in out mov (bad) and fidivrl push mov repz mov repz int3 xchg loopne (bad) lds gs ss outsb mov out or cmp (bad) outsl push jecxz cli out xor sti fidivr xchg jg (bad) mov mov int3 test cmpsl nop mov (bad) cld aas sarb dec addr16 xor mov or leave mov lahf sqrtps and inc push dec sbb loope sbb dec test rcrb aaa dec pop xchg nop test mov out fbstp scas fmull mov mov add arpl jno movsb or ret into pop arpl cmp xor sub (bad) pop test add lods aas aas ja ds sbb or orl popa push cli add adc xchg dec mov or int3 jle iret popf sub loope mov mov sub arpl mov icebp inc aas shl dec scas inc inc negl sbb inc popf sub adc rcr ljmp push mov jge pushf dec inc clc and dec dec ljmp or shrl rcrl jg adc and sbb nop sbb and out sub inc jns jl scas fwait lahf in and push dec mov ret xchg jno int3 ss rorl cmp xchg (bad) insl and push xchg ret outsl mov aaa fimul dec ror pop outsb ret cmp push mov sti xor adc sbb push cmp in lcall cli dec cmpsl loopne,pt mov cltd lods push inc cltd mov pop add xlat stc push xchg test nop js add jl sbb rcrl sbb mov pop push loope test pop lahf jmp lods xchg fldl imul cld popf loope sahf adc insb inc (bad) jl dec sbb sbb dec test arpl inc xchg into fdiv xchg icebp dec pop mov stc sbb (bad) mov pop cmp pop clc inc inc flds cmp or fs inc mov leave ds push dec xor jae data16 or jne aas mov dec cli cmp les add xlat or lea mov mov mov xor or add mov (bad) out lahf fldpi rcrb (bad) std mov or pop fldenv add call call mov cmp mov or movsl fs dec ja push sbb pop and addb je mov jle pop sub jnp dec lds adc rol (bad) je push jle or mov inc or cli sbb add pop out out push scas add pop jmp jecxz adc cmp cmp push add nop imul movsl ja rep stc push adc outsl jnp pop sbb jecxz psubsb pop or add pushf gs (bad) lds (bad) popf jmp xchg clc arpl jb stos pusha call dec shlb mov jnp push gs xchg test das sbb mov ds cmp insl imulb cmc addl sbb fistpll dec mov fst mov sub in (bad) push sti loopne shrl mov xor inc mov jl cmp out jle or out and stos xchg aas or leave out dec fstpl cs addl xchg int3 out lods rorl dec imul test nop mov dec jbe jbe mov sarb pop and (bad) sbb dec aaa pop or push aaa sbb sbb xchg addr16 mov sub fsubr fisttpl jge jne cli pushf mov add cmp push lock outsb inc push xlat (bad) sti aam repz (bad) cmp (bad) cmp cmp jbe xlat stc push cmp incb push sbb scas das xchg xor movsl outsl lret cld sbbl push fsubl addr16 mov scas loope add push imul xor shrb pop sbb aam and test pop pop outsb jbe cli mov dec or push das call into je stc in cmp into sahf data16 mov loopne mov or or cmp cwtl push push jge adc xchg das xor fnop xor mov push add jmp sub mov pushf fisttpl ljmp test insb repnz push jbe sub insb push insb mov out pop xchg pop jne in repnz jge mov fidiv es and inc add pop xchg cmp pop sbb out sbb cmp movw pushf rol mov add push neg cmp sub bt ror push jmp pusha movl mov movl call test not test bt jmp lea jne push xor mov pusha call clc mov test test pushf movb jmp inc add jmp xor mov outsb jbe pop in nop jle aad insb sub scas sahf xchg call iret imul mov add ja enter push sub jmp cwtl xchg mov (bad) sub mov decl adc jmp scas add arpl out pop mov icebp lea je test mov jmp rol mov mov adc icebp push in cli cmovg das mov dec cli (bad) int3 mov add cmpl mov stos jg data16 push sbb into and lods (bad) dec ret or in or icebp jmp xor mov pop and pushf popaw aad sbb shll int fdivrl enter push pop loope js add jmp pusha in stc mov push outsl mov push push icebp pop out stos mov or pop aad bound pop mov dec add out inc fadd dec mov mov aad push adcb jge daa pushf push jae dec adc pop (bad) mulb pop (bad) nop test ds in pop push add repnz mov mov movsb nop leave inc out xlat stc sub pop sbb shrb ret xchg mov call push shl jmp call pushf push rclb jnp and aaa add mov stos sbbb fisttpll fistpl cld icebp push shr movsl addr16 jmp in lds inc dec pusha dec pop iret int push bound push in sub or sub mov xor mov push adc and fdivrs cmp jno jl fnstcw scas fsubrp insl xchg ficoml push dec pop mov dec ljmp in out ror add xor icebp in test sub decb dec out pop pushf nop xor mov mov int js pop je adcb fisubrl gs ficompl pushf test cmp sub call lea je bt jbe test push add stc cmp cmp pushf jmp add add adc bswap push pusha xadd neg ror lea dec sub jns shrd push mov bt btr push pusha rcl daa mov or das sub pop bswap lea lahf lea mov mov pushf xchg movzbw pushf lea pushl mov bswap movsbl lea pushf pushf xchg setg cwtl movl pusha setae lea pushf movl jmp xor pusha xor int xor or mov insb sbb call addr16 iret mov pop sub mov cwtl pop dec ror sbb mov (bad) dec mov cmc xchg fisttpll (bad) mov and jge test test bound in fwait sub mov jnp lods popa scas data16 sub (bad) pushf fdivrs dec sbb dec fwait add push add sbb cli or xchg mov push mov jmp int3 mov mov lds pop add sub xchg cltd rclb jmp push jg leave enter mov arpl repz imul clc das stc int3 dec popa and ret hlt mov add sarl out push lock sub (bad) inc pop pop pop cmpsb ret lcall rclb inc ljmp mov je scas cli les outsl int3 gs xor pop stos inc fdivs sbb dec add push adc (bad) mov and sub sub mov cld lock dec mov inc cmpsl cmp ja fidivrl and xchg outsl lea pop jno dec data16 fucomip cmc push inc dec mov mov or pop xor add jl mov pushf lods clc lea jg stc not clc neg stc pushf sub cmc xor cmp bt bt cmp neg call or jbe push mov mov sahf push lret cltd mov into mov jbe outsb rcl xchg bound sbb imul pmaxub push sub push jle icebp xchg dec push aam xchg cltd not ds xor mov or test inc (bad) pusha dec shlb out inc and cmp jno xor cmp or shlb xlat std mov sbb ret xchg scas pop ja or push jb cmp cs jo sub sarl into mov add test movb addr16 jmp mov dec cmp cmpsb jo aaa jns nop gs pop out scas jbe icebp sti mov push add sbb clc fidiv fwait or cmp loop mov jbe xor (bad) psubw loop push mov rclb mov rcrl cmp cmc lods pop cmp shrl rcrl add xchg cmpsb or push jp pop xor fadds clc cmp push sub sahf jl inc adc loop repnz and xor xchg callw pop mov aas pop (bad) jnp push outsb test mov sub adc movsl sub in test sbb mov and jne call inc push inc cmp sbb pusha adc xchg sbb aam shr mov ror not and mov test mov mov ror mov rcl movzbw mov cmc push stc test sub mov pushf rep lea ja bswap push mov movb lea jmp pusha mov movl pusha push pushl lea jmp stc sub call add inc outsl inc jb popa je dec outsb jae popa outsb arpl xchg push pusha movl pushf movl pushl pusha pushf pushf lea jmp jmp jno bound data16 daa in test dec xor xchg mov sub mov adc adc pop (bad) xchg push adc xchg outsl and bnd and dec push dec xor dec adc mov cmc mov mull addr16 pop fidivl fcoms pop stos mov sbb out mov and test pop incl xchg (bad) adc lret arpl xor cmp push mov mov inc ljmp sub setns sbb xchg das xor jb shll (bad) sub xor outsl sub xchg pop or fsts shlb adc data16 sbb mov inc std lret mov lea hlt mov in gs ss jb dec loope mov sub in pop add sarb inc lret pop xchg jb inc pop jo xor sarb dec and je ret push test mov test dec lds aaa sbb (bad) fs jo pop bound lret std mov cmp cmp or pop test fwait push clc push subl xor sbb mov xchg out sub cli mov mov add xor mov in pushf lea call pusha pusha mov pushl lea jmp call bt cmc test push or pusha pusha mov lea je sete setno not jmp dec adc (bad) ss dec cmp (bad) pop sub out mov dec or (bad) pushf pusha sub aad (bad) sbb mov inc inc push ss jnp or and lret pop push adc cmp lock pop fidiv imul dec cli xlat add jno popf xchg aas cmc aam push add pop mov mov sbb imul notb outsl aad cmp pop xor and lret dec js lcall sub lds inc pushf jne dec pusha jge lock sub in inc mov imul pushl popl pushl pushl ret movl mov jmp sub dec adc inc inc fsubs and inc dec ljmp icebp ret mov sbb inc leave xchg stos add sub rcr aad ljmp and push push call xor cmp loope lret push lcall dec mov ss pop idivl shrb movsb pop gs xchg pop xorl test mov loopne sahf xor push push cli adc jmp movsl in rorb xchg aaa rcr push popf mov sahf push sub fs push mov mov adc push lods aad push cmp xor imul mov inc arpl adc xchg jb push ret test in test push std movsb outsb loope dec outsb xor push mov mov aaa or hlt jmp or sub ret adc jae mov les sahf jp fbstp out fidiv adc xchg (bad) les (bad) mov dec xchg stos rorb dec adc pop lods xchg sub stos addr16 cs sbb (bad) jne jno push cld sarb loope mov lods cmp js xchg movsl add sti and iret (bad) jecxz mov inc dec cmp jbe push lcall lea (bad) cmc xchg dec add aam movsb nop push arpl cmp inc fadds in mov or negb lods in push lock aad xchg sub add jecxz xchg inc inc (bad) fmuls inc mov inc jnp iret mov jae,pn fist (bad) xchg shrb (bad) in jno rorb popf dec addl inc pop (bad) imul lods lods aaa mov sub (bad) pop sbb push fiadd popf fs std xchg pop inc and das mov mov jb jge pushl call jge adc lods push outsl push sub cmc xchg mov push sbb jmp or lds cmp les lods loopne cs dec add dec inc (bad) (bad) push or adc or and outsb sub sahf fstl mov rcrl mov loope mov pop (bad) repz les adc lea insl adc mov stos jbe ljmp test rcrb xchg scas mov pop bound add in inc adc xchg jmp insb xor cli mov mov mov (bad) mov addr16 push xor stos popa mov iret movups xlat lret jno scas in fadds notl (bad) pop or xor aam cld mov lahf into sarb xorl dec xchg adc frndint mov ds lock sbb mov jle cmp mov add or loope out dec inc fs push mov bound pop roll jmp add push dec daa adc (bad) mov or lea ds aad popf lahf (bad) cs or neg lods jecxz dec cmp out out int or pop cmp sti and fdivl fldenv cmpsb mov repz xor out (bad) mov faddp frstor rclb fs ja stc ror shr sub movsbw inc add movsbw mov adc mov pusha cmp test repnz call ja cmp jbe adc mov stc leave lahf imul push sub ljmp ret cltd gs push or or arpl push test jmp push jl cs mov popf movsl push cli sub or adc jns mov mov mov int scas xchg int3 fidivl stos data16 inc inc cmp ret push das mov stc add xchg jbe sub push nop (bad) jmp lret clc cli cltd movsl out or push lock mov fadds not xchg movzwl pushf pushf lea movw pusha pop mov pushf call call cmp jbe lcall push loopne mov or in or mov dec inc sbb and xchg inc test mov and iret lcall lahf fs xchg daa jg rcll inc mov add out xchg mov cs pop aam and (bad) adc dec fs inc ret fcmovne movsb mov add insb sbb fnop decl cmc mov jo push or imul or inc mov cs cli mov jle movb scas loope sub lods scas inc out push lret xchg ror mov insb pop or jl pop jbe jae jecxz jnp cmp mov jle push mov lret pop mov pop mov data16 xchg xlat lock test mov fadd sbbb xor pop xchg jecxz mov xchg sub or lahf popa inc int3 mov test pop mov cvtps2pi pop xchg mov mov fild cmpsb es jno xchg mov dec jl lds cli addl addl jg jbe addl (bad) dec pop cmc (bad) xchg ja add mov lcall pop jp cmp cmpb mov test loopne ja fbstp out cmpsb push outsl xor or inc pop or cltd in adc mov cmp fcoms fwait jno fadds scas mov xor pusha add xor lds push stc fimul movsb test and sbb lret xchg and mov mov mov push rcll mov fistpll lods lcall add mov jno mov xor sub cmc out arpl jb ljmp push pusha call push lock std std andl fs mov ret je xlat outsl int pop pop and pushf mov pop std ss xor jbe in pop dec inc dec and aam pop iret add in sub ja imul in test xor jbe xchg push (bad) or data16 mov in enter xlat dec call pusha movl pusha pushl popl movw mov pushl ret jmp call inc psrlq pop jbe pop (bad) push xlat lahf jg cmp lcall sbb or loope lea cmpb mov fild fldt mov xor loopne mov add or aas outsb popf push int3 cmc adc fist adc int xchg lods push sbb push sub mov add movsb xchg cltd fs sub mov inc push fwait jne data16 mov fwait (bad) out (bad) leave daa loope push das in push aaa les cmpsl sub ja pop (bad) inc cmpsb data16 sub iret xchg or (bad) mov divb jnp mov or ja add and adc std mov aad dec fsubrl lret mov notb xor test lods test inc inc jle push js add sti lcall test roll dec mov cmc clc or jmp dec xor lret int inc adc mov aam ja or ljmp sub popf mov push and gs clc ror mov lret imul push or test scas push test inc dec fstps in cmpsb test test mov xor jecxz insl aaa (bad) out popf (bad) mov pushf mov pusha push lea jmp cmp movb pushf mov jmp push cmpb pushf pusha mov jmp or int popa jnp pushf xchg aaa pop out mov sub (bad) enter xchg scas or lcall inc mov add mov mov sbb cld mov and push mov pop xor mov insb dec mov or loope push test scas adc in jp and dec gs shlb dec decb cmpb enter push fiaddl into push pop (bad) mov cmp ds jo gs stos data16 mov xchg mov loop mov fsubrl movsb xchg aad sbb es bsf cltd mov sbb aaa mov xchg insl pop test xchg cmp orl mov lea jmp mov movzbw movl movzbw pushl setl push lea mov call adc call add jbe jb hlt rclb pop push sub cmpsl jno dec or shlb lret int3 scas push dec aaa repz ret popf insb xchg cmp cmp pop and mov inc dec loope and mov mov sbb pop je jmp mov mov xlat or pop cmp stos jp cmp pop push fs jo xchg xchg fdivrl mov clc push lret (bad) outsb push js pop xchg adc jno push das jg xlat addr16 pop mov add xor movb les int or mov test dec ficom outsb mov imull popa xor add mov mov sub inc push sbb pop daa sahf push dec outsb sahf push pop add mov xchg imul and fs std jmp mov fs imul sub into mov fwait mov in jns cmp test pushf rol dec or setns in mov jmp pushf pusha movsbw call mov (bad) pushf push jbe mov mov or fidiv repz fistpl sub mulb scas inc cmp fnsave cld lret cmp pop inc out mov or imul inc sub faddp inc lahf cmp and hlt fdivs sub xchg sbb (bad) push popf pop data16 jne mov clc dec or lcall lcall cmp cmp xchg dec jecxz pop xor mov stos and inc iret shrl fdiv mov mov jl and mov or aam scas std out data16 inc pushf neg clc push pushl rol pushf add clc push neg movb sub pushl ror test add test cmp pushw popfw push call nop pop int3 xchg push jbe mov dec push test aam sub aaa adc in pop loop xchg sub push xor dec jno xor bnd jle outsl sub fisttpl lods ss rcrb ret enter pop jp add sbb and inc mov outsl xchg sahf mov lea mov imul shrb (bad) xchg ret push adc mov dec pop (bad) in jns mov jae dec icebp push fadds loop stos mov sahf and xchg push jae mov sub xchg sar js insl popf mov sbb jp mov mov push int push push cmp cwtl push test (bad) mov xchg pop dec gs cmp or push add mov sub mov mov sahf test push ficomp pop xor movb ret loop das out jnp sub lret repz lea in addr16 inc adc push adc sar jle test scas pop pusha clc add lret add cwtl cmp dec movsb in mov push adc xchg jmp (bad) adc jb loope pushf stos aad repnz pop pop pop fcoms inc mov shrb movw lea call stc cmp pusha lea jae stc clc jmp das pop lds xchg das push int3 mov jmp pushf mov mov jne sbb shll cli mov ljmp and and cltd ret push pusha ret push cmp leave inc insl xor or pop jae mov flds icebp sbb xchg sbb inc inc push xor mov cmp jecxz cmp sub dec inc xchg or lods mov add cmp das loopne inc mov mov or push adc loope adc mov push dec imul pop fs std nop mov jge add xor call out int stc push jbe pop cmp ret daa fbstp les outsb mov pop dec or mov outsl sub lds xor pop push test push xor test mov xchg xchg xchg das mov ret pop lret mov inc or lret popa stos int pop sub movsb cmp leave xchg mov fwait sbb mov xchg jecxz sub scas pop cli sub gs f2xm1 xchg (bad) xchg inc inc pop inc cmp cld dec mov xor jno scas adc mov dec ss mov pop push mov jb mov mov cld sbb push insb cld push fisttp inc fstpl pop jbe cmc pushf add pusha pushf lea call stc bt push cmp pushf jmp stc leave dec adc int cli enter stc fdivrs daa mov cmpsb insb cmp lods xchg jnp and scas popf pop sbb mov leave dec fdivrl and xchg cmc es loope fisubr cmc push and lahf dec leave pushf jge push (bad) outsb insl out dec call in (bad) aaa pop sub sti ret mov sub int3 movsl aas jbe inc inc and leave in dec sbb adc jecxz lock mov (bad) dec ljmp jp sbb lods cmpsb cmp loop push adc add inc call mov imul int mov mov jmp jp test imul pop call mov mov bound mov shll scas lds les addr16 and jle jns stos mov enter cli pop mov or mov adc jmp test mov in xor sbb and cmp fcomip in adc push stos jns sarb jae data16 mov pop (bad) das ret cmp rcll adc test popf push aas pushf push movl pushf mov pushf push pushl mov pushl ret mov jbe in cmc loopne mov out jns loopne cwtl outsl mov iret (bad) mov test add pop shll notl fnsave ja pushf add or xor out or ret mov jnp outsl adc in mov push out in ljmp andl fldenv xor jns sbb dec int push mov iret xor in mov sub sbb leave add leave int3 imul ja cmp mov jle jg into pop stos mov loop inc and bound cmp leave mov pop clc xor jmp ljmp pop inc add stc add stc cmc stc cmp pushf lea jb jmp pushf insb pusha push push jbe in push fdivrl xchg mulb push sbb sbb stc xor inc (bad) mov push push fdiv roll mov jmp push in outsl and rclb xchg push inc jl orl pop loope push (bad) (bad) xor jno in mov into mov inc pop (bad) popf and loop fwait insl outsb mov lahf xchg dec sbb call jne nop or repnz pop (bad) jo cmpsl call push dec pusha sub fwait movsl push push int3 pop test jge xchg jns les inc loop xchg orb in inc sbb (bad) mov jae fdivs inc and iret neg pop push push sbb and jecxz add push daa lods cmp cmp scas jg scas pop jb jle lds adc loopne (bad) push mov pop sahf cmp in ret pop into lahf dec mov out pushf aas repnz lods xrstors cmp das push fist sahf (bad) outsl adc jg mov mov roll xchg addr16 add mov (bad) repz adcb inc inc inc call jl cmpl or in repnz movb xchg pushf or xchg xchg les mov jmp jmp cltd pop add xchg lods ficomp (bad) nop sar outsl mov clc arpl or ret jl sarl mov jl outsl jge bound pop lahf jp popl daa mov mov push rol mov xchg jg lcall adcb loopne add and inc jle popa jno xchg mov in push push es jge mov loop add and jle push arpl xchg mov jecxz add and shll js into jg sahf (bad) mov andb push mov jl data16 mov xchg pop lret dec idivl xchg mov mov or mov sbb xchg into nop/reserved xor inc and pop js mov shrb addb decl sub jg cmovne aas xchg (bad) pushf mov sahf jns clc add xchg jnp pop cmp test les movl mov adcl pop add inc xchg jge mov cmp ds cmp js sti pop jnp cli mov add lds sbbb xchg cmp mov pushf fidivrl mov stc pop inc lahf test jge (bad) popl xchg clts pushf rol (bad) pop cmp add push js xchg hlt pcmpeqb push mov jg mov mov mov jp (bad) clc test (bad) push cmpl mov sbb mov xchg mov sahf ja scas cmp xlat mov into mov sub rol add in xor rcl js inc jno adc std fadds and jl shlb lds push mov jo loopne mov pop jl adc mov lds lock push mov mov rolb cmp pop mov dec xchg cmp shlb mov test mov (bad) mov push jle jno adc (bad) inc pop pop nop daa rol mov js jno push test lock lds or popf dec or sar push push adcl and jl mov cmp mov rcrb push sahf xor push cmc nop inc mov inc xchg sub mov ret mov (bad) hlt insl popa jecxz ret inc mov addb add aaa sub add jmp pop mov xchg cmovae jns mov mov add ret lahf add pushf aas jl pop ret pop cli lahf add test or (bad) out sti push mov into mov faddl xchg ret inc ljmp cmp jl rcll das iret in adc scas movhps call jbe test cli into aas mov inc mov outsl fistpll mov add fist (bad) mov sarl cmp pop insb lcall leave subl push dec int3 mov sbb jae sub jmp mov into push or push push ret lahf ja cmpsb inc or inc mov in outsb adc es fidivrl or mov xchg cmp xor in adc cmpl addr16 push push sub and in cmp or ret jg and lret std sub mov and xlat imul cmp xchg pop in scas test mov dec clc out aas aad xchg out in add mov adc sar movsl dec push mov enter lret aaa cmpsl and in xchg jle jp aam icebp nop mov aaa and push sub and push push cli jle xchg or jl daa sahf mov add dec add mov xchg push pop pop jmp or (bad) xor push out mull mov jp stos cmp add jmp outsl pop lods (bad) repnz inc lret jns in fsts inc jne dec icebp out sub push cmp insb push call pop nop (bad) (bad) cmc insb cmp xor (bad) xlat fmuls ljmp jb mov pop lock adc pop push pop xchg imul lods ficompl insb nop aaa and adc insb lahf sub jmp insl push ficomp cmpsl (bad) iret cs aam or mov sbb sbb jle cmp inc loop dec sarl mov fidivr lods ret cmc out mov xchg xchg push jge and jle int3 mov jp inc mov repnz jp jmp xor pop add sub clc outsl test in xchg (bad) shlb aad sub mov xchg cmp lods jle pop adc negb repz push cmpsb jle leave popf cwtl add je adc jg int3 jle mov mov push pop xor jp lcall fs xchg inc push mov scas jmp shlb fdivrp (bad) push popl je pop fwait cli mov xor test sbb dec xchg xlat jns jg test movsl and cmp repz xchg fstpt lea icebp das add sub mov arpl xchg ret jl mov pop cwtl inc stos xchg jnp insl lea and mov fild xchg inc aad add pop es push inc cmp dec sub popf aas mov dec push mov rcr (bad) mov mov ljmp insl jge pop roll jl add (bad) mov mov mov int add rol pop add xor aad adc cld (bad) lahf (bad) pushf std daa mov stc loop std shr adc hlt psubb xor jns inc add outsl add add les rclb insb int3 jb xchg movsb mov mov cltd insl xchg inc aaa mov sar jnp into xchg out sbbl add scas mov movl adcl jl test or (bad) jl js (bad) ficom add addr16 cli xchg xor jnp xchg mov cld cmp in call mov jl jns xchg mov inc rorl sub cli cli mov mov xor or xchg (bad) mov jl lahf ret mov inc cmp mov xchg out cli inc mov jg inc incb mov jl std xchg lahf inc jle repnz lods mov mov pushf cmp addr16 lods cmpsb xchg mov cli and mov repnz scas cli and pop cmp repnz into cli jecxz fist jp stc mov xchg mov in loope (bad) cmp repnz lods loopne fdivr inc mov loop cmp cmp addr16 lods inc xchg mov mov cmp sub popa addr16 lods cmp arpl repnz fmull jle xchg xchg (bad) cli lcall movsb lods mov cwtl inc adc or cmpsl mov fwait insb lods adc xchg cli pop mov repnz mov aad shll lods int3 xchg and mov lods push xchg dec cli and push cmp addr16 push mov dec cmp addr16 lods push clc add sub mov mov fisubrl xchg lods cli in cmpb fdiv jle xor repnz xor sub das lods aaa xchg xor fisttpll repz idivb pop insb lods lock in cli gs repnz ja jo insb mov bnd pop mov pop cmp addr16 jae pop mov ja xchg jbe mov xchg insb cli mov xchg cltd mov or adc adc repnz outsb lods lret insb cli enter cltd lret jb leave ds push dec insb cli push pop repnz cltd push jb dec ds ja dec jbe stos pop repnz test xchg mov stos ja test repnz ds mov push cs cltd ljmp mov push jmp xchg imul ja imul cli push ret adc test repz mov mov add xor xchg mov jg pushf rol xchg push (bad) mov mov ret mov inc (bad) jl mov fmull push jecxz (bad) mov (bad) iret sahf xchg xchg mov mov nop or xchg jge dec (bad) (bad) aas pop mov insb lcall mov mov scas mov stos jg inc xchg int mov mov or mov mov pop aad shrb aam dec inc mov pop mov or inc mov jg lds inc ss push mov mov outsl fwait rcr lea pop mov cmc mov out jg js aad pop mov add push mov sti movsl mov push xchg cld imul mov in sti cli cmp (bad) mull jnp jl rolb jno int3 mov pop xor cmc inc add cmp rcrl arpl xchg inc (bad) dec mov sub xchg cmc lds cmp aad pushf nop inc popa inc ds cmp mov inc hlt pushf sub mov popa (bad) mov cld xchg addr16 in mov (bad) cmp es mov iret add aas cmp inc lock test mov mov push mov jg add das ret or (bad) mov dec ret fcomp adc ret mov adc mov repnz ficoml pusha jmp add or mov aam cwtl out aas (bad) mov hlt inc adc mov jmp mov or adc lds inc lahf inc pop inc mov jmp shlb dec sbb shrb out mov js (bad) dec daa paddd sub (bad) mov cltd xlat sub movq rorb mov (bad) cmc repz cmpsl sbb mov push jl mov mov inc (bad) fdivrl mov inc jb add mov mov xchg mov or pop jno data16 mov xchg pop mov cmp pop outsb xchg xor insb mov mov add mov in sbb outsl lahf repnz mov inc pop cwtl pop mov ljmp or andl pop cmp mov dec pop mov mov push mov mov and aad xchg (bad) mov cld and movb cmp mov inc inc mov mov (bad) dec sbb (bad) pop rcll stos sbb in cmp add (bad) (bad) ja lock push pop add inc ret push int3 inc pop mov ds int3 in je pop ret xor push mov mov rcl pop jmp pop inc push arpl mov cmpsl jo mov punpcklbw dec push mov das mov es aas mov mov inc aas daa popf mov mov stc add add mov mov mov ds add mov movsl pop mov aad adc mov push adc mov mov adc push pop jg mov (bad) xchg mov push mov lcall (bad) adc jle dec mov seta aad push stos popf add fist arpl mov cmc (bad) lock xchg fnsave aad sub mov jmp jecxz int3 inc iret xchg addl fistpll jae mov xor mov xchg inc mov cmp test cmp sbb mov iret jno (bad) sbb aas in mov repz lret cmp lahf inc (bad) mov or mov xchg cmp adc pushf dec xchg rol adc test pusha rcrb xor sbb xor mov adc adc (bad) (bad) xor nop pushf adc xor lods les aam sbb aad movsb mov add lds ret iret adc in cmp in sahf inc adc add push fmuls adc rorb adc lds dec add nop fdivl xchg loope mov addr16 mov mov jno lret pop jle xchg mov push mov sbbl out sti push std (bad) fistpll pop js mov out fcompl pop movsl insl pop jle das outsb xlat cmp dec test pop test rcll pop hlt push lods negb pop cmp pop cltd insb movsb jle sbb add jle dec lea scas clc movsl push outsl adc je jl sbb mov fildl rol ds movl data16 jle pushl mov outsl xchg scas lock and dec adc dec icebp jecxz jle test gs sub jle dec pop fisub mov push rclb push jecxz mov out push sti bound orl aad loopne insb adc push push jmp sub sahf cli movsb jo push inc in outsl mov jle testl lret fwait sub or mov popa jecxz mov lret mov xchg adc jle (bad) cli in daa mov jle popa xchg and add (bad) or mov jb ss dec add sub aad inc add xchg popa inc add and sti ud2 enter inc cli mov dec scas stos mov push in jnp mov (bad) lods repz jle rdtsc jbe in fimull mov sub ljmp jle or ja fmul pop sbbl sbb or hlt sysexit cld jp jle xchg add jle aas int jnp inc sbb (bad) sbb add fbld pop (bad) out fisttpll fstpt lods add and pop lret in lods lock jecxz andl aad inc insb mov cmp adc jle xor xor or push pop jmp cwtl or out fwait int3 lea (bad) pop fidiv sti inc pop out (bad) mov inc test push jp out out out leave idivb loop test in mov add or mov daa inc push dec clc jle pop jl mov cmpsb cltd jle jp cmpsl xor adc dec imul sbb jle daa fidivrl mov popa cmp (bad) sbb mov loop inc or dec cmp cmp mov outsl fimul aam xchg call outsb xchg adc stos (bad) in xchg sub cmp sub mov mov mov (bad) popf sub ficoml int3 out in sbb add ror addl inc (bad) out ja mov xchg fwait xchg xchg cmp mov in dec cmc les dec inc pop jle test and or jno lret xor data16 test repz outsl cltd in xor xchg into pop add fisubl jnp fstp mov je scas xchg and loop cmpsl js les push jbe jbe mov pop ret jle std and or cmpsb jl mov (bad) jle jo cwtl rorb int3 or mov inc cmovb xchg pusha lcall ljmp mov in aam loope arpl pop sub mov adc xor sbb pop rcrl cmp (bad) mov push jle (bad) fiaddl fnstcw or faddl bound jle ret test in push call fimul and cmp pop jle mov cs jmp das xchg sbb sub push mov fs hlt jle or (bad) shlb mov fisubr ds mov sarl mov and sub jle cmp inc outsb jle add lock pop xchg add es pop mov movsl push or aas pop sub jle in cmp jmp push jb fstpt out inc (bad) mov pop push int xchg cmp jle loopne and pop adc dec ret sarb fimul inc aad inc lds daa fld jmp sbb jle jecxz pcmpeqd lret outsl add and push insb inc pop out cmp pop es insb add jp xchg pop sbb add inc dec sbbl push lods insb jae lea push scas popf mov add addr16 push inc imull fistl dec fldenv dec roll xchg std loopne xchg sahf jp in jle ret and mov lock (bad) mov mov cmpsb aaa insb orl and push pop jle adc dec xchg or jle sub adc dec outsl inc jle adcb sahf and mov xchg jp jle jne fldt push jmp pop js dec ljmp lds pop add nop ja jl inc pop xchg mov in jg jle inc cmpsb and repnz ds idivl and (bad) cli jecxz cmc pop jle int3 jae cs aaa jle sub orl push xchg mov int jo mov cmpsl jle pop or daa lret jle xor jae hlt sbb or adc lods and pop int3 jle rorb and not jg mov jb xchg jge dec (bad) ret mov (bad) pusha adc or add fwait popa mov jp cmp mov (bad) sahf inc sbb in lods jle adc adc idivl mov adc out (bad) push lods js add lahf das or orl inc jae push hlt jns in jle fdivrl mov push repz cmpsl mov arpl ss cmp fs dec aad cmp xlat sbb outsb (bad) ds in das jmp loope ret jle shlb (bad) mov clc xchg es lock lahf rcr loop cmp sbb (bad) add sbb pop and push sbb jle mov bound jbe jle aam scas stos add pushf jle dec data16 addl inc test loop lret jle sti or subb dec jle js std cmp add and inc inc lret nop xchg push xor xchg cmp loopne enter ss and fcmove jl or sub aam mov enter mov out data16 cli mov jle mov in dec shrb insb js sub loope mov lea jns lds mov pop arpl test mov cmc and scas movsb jbe dec mov xchg mov pushf mov imul or mov sbb jmp out pusha jb xchg sahf stos into dec mov js sbb push mov dec mov jge mov test xchg imul pop int3 jle ss or iret cmc es repz gs push fwait or fdivrs mov aaa bound add stc add fidiv and inc mov popa in lret js femms inc jle adc int3 jo pop jle movl cwtl and mov sub lds jo (bad) cmp jle int xchg outsl pop jle sti sub pop addr16 jp aaa fmull lahf enter mov mov xchg call jle add aas scas lock scas adc jp dec push sti sub adc (bad) ja sub sarb and sbb mov (bad) jl inc xchg loope and scas push xchg inc or sbb pop lods ljmp xchg xchg les dec xor js xor jle adc mov cmp out lods sbb sub sub mov pop xchg mov push jnp in lock mov jge and push mov popf push dec fwait jle mov add mov insb in push int outsl and mov xchg sti xchg adc stc out dec clc cmp lea lret out subl xchg or fstpt dec xchg repz xor je fwait xchg iret dec dec mov inc xchg xchg movsl (bad) repz or cmp or pop xchg lds clc sbb int3 push xchg jle outsb rcrb lods adc mov cmpl in push jle mov out xor jle pop mov outsl repz jp cmp pop loop mov imul idivb jo push jmp cwtl je clc es (bad) jle aas call mov pop mov std inc jle pop imul loopne mov sbb aad sti cs fldl bnd jo mov dec js cmp dec inc inc js jp lds inc mov mov sub nop jno sub sahf xor sbb jp pop loopne push cmc idivl push inc xchg andl adc xchg arpl push scas dec in mov ds mov fidivrl sbb jnp lock icebp aad dec out sub cli xchg ljmp mov js inc and mov (bad) pop pop lahf jp fdivl jle fnsave cld dec dec add xchg cmp jle and call xchg imul lods inc scas sbb mov ja cmp sarl leave xorl lods pop repz xor insb xchg pop icebp sbb jle fs (bad) xor jle in jno movsl pop jbe pop out sub push jb shl into xchg or aaa stc dec ss scas jle cmpsl inc sbb pusha cmp cmpsb fmuls jle bound imul sahf out aad cmp and call in inc fiadd mov or pop ljmp xor loopne adc ljmp sbb cmc push jle mov mov in loope inc or jo inc fbstp sub xchg sbb jle pop (bad) add (bad) outsl or ljmp repz adc dec fldl lods jle (bad) mov jmp lahf les dec pop jle nop cmp out add adc hlt (bad) mov jno dec mov scas jle aad pop repnz pop mov cmp orl pop aas jle int inc add mov lds sahf in loop out clc pop mov fwait adc sbb add adc aad push test pop pop dec jle jge or cmpsl jle pusha outsb add clc sbb push or pop int3 ds icebp xor xor push es sahf jbe jle (bad) pop fs bound cmp jle pop push pushf (bad) mov pop nop mov ret inc out fmuls sbb (bad) jae enter push jle loope jl mov add jle dec inc popf dec mov cli inc rcl lret jle (bad) fbstp out test jne dec jge testl sub push enter mov mov mov (bad) sarl in jp movsb mov xchg jle,pn outsl push int3 loope insb bound adc insl into lds popf stos cld jge push out in mov jle (bad) call ljmp cmp mov or data16 clc xchg jecxz,pt subl (bad) out fnstcw ret add scas xacquire js adc sbb cs jg pop sbb insl cmpsb pop int3 inc mov (bad) mov xchg shrb in test xchg adc sbb mov into jle enter mull lahf xchg nop jle and jle xor add scas xchg gs dec jle dec aaa add fstl inc mov or jle and out inc adc daa and push lret lea jle sbb (bad) jle xchg and jle cmpsl loope ret mov sub push mov notb cwtl ja and xor hlt movsb mov out fs icebp jae out jnp (bad) je pop jbe sbb mov imul adc subb inc and jle jbe xor jbe in jp pushf jle test xor cld xchg addr16 ret cmp rorb cmpsb sub cmpl sbb stos mov jmp arpl (bad) pop sti jne pop xchg jmp mov fwait mov push jbe mov mov jnp adc imul out add pop or lahf test leave mov add mov int3 stos bound xchg out sar mov sub call mov scas (bad) (bad) dec jg std shrl into jle popf pop mov ds pop aas pushf or jle lods xchg fnstenv dec vmaxps push mov mov adc dec mov fdivrs insl data16 into je push lcall xchg xchg xchg lds mov pop pop sbb mov movsl push jb jl (bad) bnd adc fnop fldt bound movsl mov gs leave jle xor imul dec ret and adc pop das adc jle fwait xchg testb test rorb dec fildll mov lret out lds loop mov jle sarb je fadd inc out stos pop mov push lods add or sub int cmp rclb fist dec and and xchg shrb scas int3 inc fadds pop mov jle sbb sahf scas cwtl mov mov sahf jne mov jae mov aad cs (bad) addb jmp ss jle lret xchg scas pushf cmp jle add jmp xor push jle popa aam std lahf movsb repz sub sub jbe into or cmp stos jb xor jnp mov cmpl pop or jle fisttpl outsl dec mov mov push cmc push int3 jle mov imul cmp gs dec dec stc pop jle jl cwtl rcl dec stos jle cmp dec repz mov dec (bad) xor outsl pop push inc push call adc inc nop aas jecxz push cld inc jmp jb push sbb bound xchg mov sarl jle enter cmp inc adc add inc popf loope jl xchg inc jns cmp stos mov push movsb xor lret jle or xchg sub (bad) jle push imul in lods sarb and test push push inc movb sahf cmp jbe add or inc dec xchg jbe es cmpsl movsb frstor sub jmp jle aam ret mov jle dec xchg cmp adc push cmp lods sahf jmp cmp dec jle inc mov push jle rcll or nop xchg (bad) faddp lea dec insb adc jp in bound iret xchg or xor ret or pop jle lret xchg out frstor fs xchg (bad) jnp or cmp popf pushf test mov sbb lea pop popf imul push (bad) push mov mov inc js push or (bad) cmc push js push adc daa jg sbb mov xchg sbb test pop into stos in cmpsb push inc jle xor mov push nop pop (bad) lock loop into sti mov xchg ret jle in mov add cltd push push scas pop cmpl inc imul adc mov xchg cmpsl jmp gs sbb js stos jle enter lods xor mov cmp (bad) out insl idivb addr16 gs xor push clc in push push daa pop mov enter or insl adc cmp jle cmp outsb daa jle dec or jle push push and push ret es insb (bad) shufps call xchg sbb push fs push scas repz mov ret pop mov out and xchg popa jb imulb push pop jle int pop xor inc xor xchg aaa imul mov push jle (bad) cmp data16 pop sub lahf imul jle mov mov mov mov cwtl insl push push pop bound stc call dec lret jns jle xor sub fnstsw cmp jle push mov jle or jg dec or mov and insl cmp push es int fldcw mov xchg jle cmp movsl test (bad) jle or sbb mov cli imul pushf test loope jge jnp adc ficompl pusha cmpsb dec imul mov jne inc jle jp into mov xchg sti cld popa mov jle and xchg jle fimull inc cmp pop (bad) into pop (bad) cmc mov and stc mov call insb (bad) xchg push scas into dec pop adc ja jbe mov push sti sbb or sub hlt cwtl xchg inc aad and mov cmp xchg and or leave push jmp add ljmp imul mov jle sub inc dec mov push fcompl jle notb movsb jle lea roll xor sub sub and in fcom sbb jmp mov jge shufps ret add xor mov outsb sahf ret das mov sbb pop add adc mov in icebp jle shll rol repz shrl jae adc xchg mov shll repnz (bad) push icebp inc mov cvtpi2ps add (bad) mov jge mov lea loope cltd inc inc mov adc rclb mov pushf scas cmp rolb mov ja into xchg mov pop fisub add mov ret repz adc pop sbb add mov movsbl mov ret (bad) push xor clc dec pop mov das xchg mov sti mov loop int mov arpl sub push adc dec and mov jge jb std cmp jge popa aad mov sbb repz aas inc pop jl test orb loopne pop ljmp mov scas mov call cmp fisub loope stos mov out jl rcrl mov lds lds (bad) andb mov pop jbe cli xor cltd xchg mov mov add ret mov and and (bad) repnz push push and pop mov lret adc mov lock adc jo dec jne into adc pop sub std mov pop jl add (bad) pop rolb rolb jae cmpl cmp fimul cld test dec aas mov xor fisubr fnstsw pop mov pop fadds fdivl xchg call pop adc enter sub lcall adc loope mov out sar adc fcmovb cmp mov xchg pop ret in sahf and mov and mov imul dec rclb test daa cmp xor cltd lds push lahf mov sbb mov pop je inc fcompp jns and jbe loop add fdivrs fldcw ljmp decb mov loope loope cmp xchg pop sub sub scas ffreep cltd jns inc fisub iret lea test mov mov mov dec shr sbbl lock xor cmp dec add test dec pop sub inc cmpsb jle cmp adc xchg xor lret inc mov jecxz lret add (bad) mov dec push and lods mov cmp outsb mov jbe and pop push test xor jo mov arpl aaa dec sbb and adc popl sbb lahf das add add lahf xor call in adc ficom mov inc cmp ret cmp pop fnstcw in jb in jo sub mov inc inc cwtl push cmp mov (bad) in jb xor fs xor add pop mov fimul inc in call pop aam fnop cli adc fcomip insl iret mov mov mul adc shrb hlt test push xor data16 aam jns in test loopne pop cld adc sbbl mov mov icebp pop cs add or imul push jnp jne leave jae xor popf pop std cmp add rep enter xor nop repnz xor inc mov rorb jmp lea ja rcl clc sub shld movzbw stc add bswap cmc dec adc mov add not and mov push pushf jmp pushf bswap mov lea jmp push test add mov movzwl bsf mov clc cmc add cmp mov cmc test jmp and and push and cwtl push dec adc sub pushf mov cmp xor movzbw pusha movzbw lea mov movw call push ljmp mov or imulb int in test push rcl lods mov arpl movsb jo or push cs cmp call jns mov iret xor out das xchg loopne (bad) outsb (bad) (bad) mov pop stos cmp (bad) mov sbb test nop xor push adc aaa inc mov fwait jbe dec pop push mov and cmc sbb in adc sub mov push pop out fsubr sbb xchg or xlat cmp ljmp jne arpl insb mov imul push push and rol addl push or lods add aad outsl and xchg es xchg adc pop mov or andb jae push es adc std fisttpll jle mov fidivl clc dec rep es out jle mov (bad) lock bound xorl jmp sarb nop das out mov std or movsb mov sbb je cmp ja lock int mov jae cld in jnp add jb aaa popl clc stc test cmp call pusha movl movb pusha jmp lea ret or pushf jmp movl pusha lea jmp cmc test jmp in int3 nop cs int jecxz adc mov push std mov movsb pushw out jne push pop mov stc jmp loopne add adc jl push mov and mov add inc fldl (bad) xchg mov or andl mov inc ret push sub inc sub hlt dec mov pusha sub mull popa es and mov ds xchg stos xor cmc sbb in push daa sarl popf mov out mov (bad) push jno in ljmp in lahf loop jmp mov dec add pop imul push sub or test out add stc bt call pushf pusha mov mov lea je pushf lea jmp add fs add lock add adc lea push add adc stc lret or adc push add add add add add mov add push add add add add add push add push add add add add add fisttp add push add add add add add lock add add add add add lock add jmp cmp and imul push arpl fsubrl cld rcll pop notl out fucomi xchg jle sbb repnz imul push mov stos push std ljmp xor sbb mov pop imul dec jb inc mov cmp ds cld pop ret pop pop push sub lret ret mov nop (bad) testl adc je cmpsl sub push inc dec pop pop std mov ret pushf push ret out xchg jo insb lods aas sub dec cli in cltd pop xor insl pusha dec int3 mov adc pop jne aaa inc and push pop adc out aad addb lret (bad) xchg scas inc sub mov mov insl jno xchg mov sarl aas inc cmp inc cmpsb je jg dec jp sti lcall dec lea add push out cmp cmpl mov add aaa xor cmpl jg push movsl fsub mov dec ret popa movsl mov pop push (bad) jne test pop dec out push and scas jmp mov add mov xchg sub pop repz sub data16 and pop adc sub sarb mov push or add stos aas dec ljmp push arpl dec and jle jle fistp push lret std lods mov mov push fsubr xchg pop or repnz (bad) nop inc sbb imul or les sbb sbb test xchg cmpsb fistl mov out loope (bad) and push push icebp adc push mov jbe jp test scas sub loope xchg popa pop xor sarl fsubl pop outsl enter out loopne gs dec inc mov stos test imul fnstsw cmp inc xorl inc mov dec or lds movsb xchg mov movsb lock jnp adc in pop adc push push rorl ds adc into mov fisub out push adc add test fs adc fidiv cwtl insl adcl movsl gs ljmp sub int xchg cmp fstps or ret idivb push mov mov scas stc xor jecxz inc loopne lret push call pushf and in mov hlt int3 mov aam fildll aas inc sbb mov mov adc (bad) js imull nop pushf add in mov test les into dec (bad) push fsubrs in jo mov pop cld outsl rcrb xlat lods push xchg lret out aad pop ss cmp mov (bad) and lods arpl (bad) mov cmc lds mov mov dec lds push imul das mov and stos cli inc dec adc mov loopne xor adc test mov stos push inc shll enter or mov sub stos insl adc mov in outsb inc std or add faddl (bad) add cmc xor cwtl cltd jae test dec jno rolb stc mov scas je lret int icebp xchg shlb orl sbb std scas fadds es aam mov mov mov cwtl adc inc popf mov daa repz sub jecxz pushf lods cmp loopne pop outsl sbb test xor sbb outsl push aas jmp mov decl mov lods push fdivrl rorb fcoms lds mov mov mov inc pop jne sub mov out in stc pop xor cmp cld sbb lea dec sahf adc (bad) gs test xchg in dec inc mov cmp popf nop out pop or sub mov ljmp push push js adc jmp cmp test mov cmp mov (bad) test cltd adc loope pop xchg addr16 dec push out adc scas cmpb jl cmp dec adc call pusha jge scas fsubl scas insb ss sbb lods call jmp out and sbb test push and leave pop xor in aam imul insl mov xchg sbb (bad) mov popf jge in inc dec mov mov sbb cs pop dec (bad) (bad) mov sub adc xchg ret add dec sbb adc adc cwtl aaa inc dec or mov jne or imul mov inc adc lret mov push not push jne xchg mov inc or push daa negl pop adc scas cltd mov pop adc cmpsb cmp push dec leave mov cmp fs sbb pop out ja inc push (bad) (bad) repnz pop or loop dec (bad) mov std mov movsb scas mov xchg sbb dec popa icebp ds and repnz jne xor sub jne neg bsr ror clc mov push movzbw pusha sub call not setne not lods mov call adc jbe sbb imul lock iret out test add (bad) (bad) pop and stos xchg push add aam rorl push (bad) call push hlt rorb mov lcall lret mov sti xlat lods dec roll loop ret loopne sub stos aaa cmpsb xchg adc or pop or mov add hlt xchg mov seto cld ss push pop loope push or dec pop rorl popf or push test mov xchg adc loop fisub imul push je jecxz es mov fcmovb or fcomps and sub movl call cmp cmc pushf add pushl mov pushl stc shr pusha lea je pusha pusha adc push push movb pushf lea jmp pushl movb pushl pushl popl pushf movb pushf push pushl ret bsr not adc push mov jmp pushf pop lea push pushf jmp pusha push call pushl popl pushf pushl ret pusha call jg adc data16 mov inc push das adc lods push gs (bad) sbb fwait aas outsl cmp mov cwtl movsl and js test loop fwait popa sub insb sbb pusha mov addl mov lret or cmp push dec arpl std arpl out stc lods xor dec and ficompl (bad) cmc addb outsl or rcl lcall adc dec outsl mov xchg loopne push sbb rorl stos adc clc or mov add addl xchg add push jmp push outsb sbb mov clc shl add sar mov cmc bt test call push xor xchg push and lds cmp stos jle aas (bad) ss in loope das popa and adc out test lret std push add dec rcll mov xor lret jnp push jb xlat xor cmpsb mov repnz jge inc jl cwtl xor pop or dec jmp (bad) call adc add int3 adc int3 fisubr mov jg xor (bad) std pop mov mov push jp (bad) aaa jbe imul lods (bad) mov fbld adc dec adc jbe inc std rcl js xor hlt (bad) into mov shrl stc fst (bad) mov aad jge test xor push push js test in push mov xor test scas je nop dec pop sbb inc xchg mov pop pop mov cmp cltd jp leave lock rcrl test mov das mov ds in mov fsubrl ret dec and jo sub test ds sbb sub mov sub mov int sub mov mov stos shll shll stc in jbe popf test pop xor xor inc xchg es es jne xchg hlt cmc test xor inc test inc sub cwtl in loopne sub pop test aad cmp xlat dec add sub (bad) xchg scas dec lcall or mov mov push lret sbb aam xchg add mov dec popf pop jo xor (bad) cmp and scas adc pushf lahf add mov mov jbe int3 mov out mov test adc pop jmp imul add (bad) xor adc loope push and hlt mov and xlat nop or inc (bad) popa pop mov insl fldt stc push ljmp iret xchg fstl adc dec insl rdpmc add jo dec and xchg dec aad hlt jns lahf jae sub clc pushf insl out rcrb jmp jns cld jmp mov mov outsl adcl sbb nop mov sub cmc out stc push sub jp add pusha mov mov pushl push lea jmp pop mov pusha seto lahf lahf movl setle setne call movl pushf jmp xchg sub int rolb jno pop add aam jb dec or push (bad) xchg mov add pop sarl icebp or sub xor (bad) pushf or sbb mov int3 fstpl mov xchg inc or add popf scas aas rcrl lea mov loopne pushf int3 imul out xor (bad) pop test xlat loopne and xor or popa mov xor xor das rorb repz jb call (bad) adcl test or lret adc imul cmp mov lods add jne adc mov inc or cmp inc fidiv in lret mov imul paddw out (bad) stos jo add dec iret loope sub insl insl out popf int3 es mov (bad) leave daa and fwait cs addr16 aaa jmp xor xchg push cmp mov push test int3 js (bad) ljmp and loop xor mov jp sbb add pop inc lds loopne jb push je aad rcrb fild sti add and je pushf pusha lea jmp adc jbe popf jp fidivr mov lea in lds jecxz ficompl mov xchg rcrl aaa fstps in (bad) mov popf (bad) cs mov inc adc mov nop dec inc stc fistpll mov fiadd shrb popa sbb mov sub lock repnz rclb in xor js inc in shrl fadds (bad) mov mov cli xor ret hlt adc mov push mov out pop push icebp lods sbb push dec fwait add adc test int3 ja xchg or jecxz xchg in adc jnp inc daa negb mov xchg lods es test sub cmp jmp pop mov int pop stc loop push loopne gs cltd pushf and ret mov sub add rolb (bad) push jno addr16 popa mov and hlt cmp mov lock scas cltd and popf loopne loopne jnp (bad) xchg mov loop movsb cmp add add xorl aas jge add inc inc mov and cmpsb std adc mov aad inc sbb in test pop adc into fidivrl adc jl cmp or dec jno mov lds aas mov aaa mov insb dec pop (bad) hlt (bad) fstps jbe mov jge in push pushf adcb fsubs jge jo jnp movsb mov lret jne push mov adc mov push cld repz clc (bad) insb les scas addr16 mov and repnz stos lret mov pushf push xor (bad) jbe cli cmc jl jl inc xor lods pop insl mov mov inc xchg cmp fisub fistpll ds das popf cmc sbb iret sarl pop add ret xchg rorb adc cld jmp outsl add xor sub push xor movl call add inc gs outsl fs gs imul add adcl add fs jmp xchg bound adc divl loop (bad) lea (bad) les xor inc push pop fnstenv pop xchg sub mov cmpsl jno push push cltd xor xor sub imul sbb mov cmc cmp push fadds mov clc inc sub popf and dec sub ret xor pop pop or mov mov out orl shll jmp fsubrs push pop mov sbb push out xchg fnstcw pop insl push into xchg mov mov sbb mov mov or push cmp pusha movb and test stc call push mov stos addr16 mov cs jbe dec or mov lret out mov pop sbb stos add jbe pop outsl in js push mov xor xor push sbb rorb inc adc adc sbb cltd movsl movsb xor stos aas icebp dec test popf push add dec mov psrlq mov add gs test cltd fldl adc inc push cwtl push mov mov xchg mov jnp dec jl aas shr xchg movsl sahf pushf cmp push mov mov call daa out jmp adc ret daa std shrl mov cwtl push ss jp subl sbb mov xor sti arpl ja xchg std rcr mov sahf scas push add pop (bad) fmull gs jmp pop ja sub (bad) jb cld outsl dec out rorl fstp pushf and enter adc add out fmuls (bad) fiadd and xchg push aaa and addr16 call mov or loopne jnp movb (bad) cwtl sbb sahf add push sbb mov mov fisub xchg mov (bad) push adc addr16 sub push imul jno jle and stc stc stc add call adc jno nop je iret rolb rclb addl sub sbb pop or mov xchg xchg popa in or (bad) aaa jecxz and leave (bad) xchg ljmp push cmc mov (bad) nop jno aas cmpsb addr16 fildll inc rclb mov dec insl inc or cmp (bad) (bad) lret movsb sub cmpb ja hlt ficomp or popf adc cmpsl imul aas jle mov mov and nop scas pop jge clc or in scas lds xchg popf adc jmp jle add ret dec sarb int movsl ja out (bad) jp fidivr sbb aas icebp leave mov orl xlat sub (bad) and out and arpl ficom pop and lds mov lret add xor jno pop loope ja sbb out out cmpsl ror push (bad) fldl stos stc mov or (bad) insl in (bad) jno jg push sbb xor push mov push add lret mov jns mov jge int3 fsts cmpsb mov shrl cmp push sti rclb repz call mov adc jbe inc pop test lds cmpsl and leave xchg imul pop addr16 push pop or sub xor loope pushf addb in sahf cmp rcll sub pusha adc das arpl out sub out mov loopne (bad) mov es insb repz ds pop out adc lea out iret cmpb or cli gs call aam sub hlt dec andl mov jno sti or test fdivl inc push adc cmp test hlt int3 js (bad) ljmp mov insb xchg dec aaa int adcl jns jbe mov mov (bad) adc sub or (bad) sahf or enter (bad) sbb add lea jnp pushf movw pusha lea je pushf push add pushf pusha lea jmp mov jbe fisttp adc lods mov cmpb push pand mov pop fildl pop mov mov jmp push mov cltd imul ret adc jmp adc cmpsl push jmp xchg dec dec sbb inc jnp in sarl fisub mov out jne (bad) shlb sbb movsl jg sub (bad) pop jp or lods and cmc mov sar (bad) xchg lea (bad) (bad) loope test aas mov push push sti bts lds pop and test sbb mov not test int3 jl sbb sahf out cwtl sub scas test rcl sarl adc mov out and or mov mov and push sub leave fidiv sbb add mov stos jae dec dec outsb bound pushf and mov and loop mov and (bad) or fs (bad) outsl mov fnop jb sub fidiv addr16 push loopne mov mov fldl sub lret xchg xchg popa insl cmp mov pushf rep mov mov mov mov lea jmp push sub mov pop cs aad nop mov xchg jae push cwtl pop mov inc adc scas mov mov xor popf popf or mov mov mov clc or mov jo mov test leave add adc test adc dec pop mov icebp sub adc cli xchg jo sbb lods xor pop (bad) xor in call or cmc loop pop aam adc lea jbe fwait push or stos je push or data16 push les dec xor ljmp ja insb (bad) push sbb sbbl rcrb mov clc pusha call xor imul sbb jmp push aas icebp shll shll sbb jl das jecxz mov mov pop push scas mov sub shlb dec ljmp pop cmp addr16 (bad) push nop in jp sub (bad) addl (bad) xchg inc aam push std mov and repnz xchg mov fcomps mov loope mov loopne inc dec and push dec mov cmp stos movsl jle sbb out inc dec adc sbb (bad) cld call sti mov dec mov inc sbb imul les jno cmp push jmp mov movl pusha mov lea jmp jmp bt bt add pushl movl pushf lea jmp cmp int3 or lea ljmp pusha sub scas ljmp xor mov sbb push push xchg dec or jp sbb lcall inc xor sub mov push push cmp fcomps in jl xchg pop inc ret mov jg sub sarl or clc mov out ja or fistl fidivrl repz aad imul adc cmp sbb push pusha or (bad) cmc mov insl repz fwait and lods jno jnp and xchg jg pop jecxz push and adc fs xor jae repnz mov or (bad) jno out std mov mov das push fsubp test outsb add xor dec mov dec or stos add jmp push data16 adc aam mov mov or iret addr16 add sub neg inc stos mov inc cwtl ret push cmp test push or repnz mov pop push dec sti mov inc or adc stos mov add lret pop not mov fwait inc inc prefetch or xchg mov lret inc jb das std int3 xchg add xchg mov cmp ljmp ss in fs in ret jb inc xor pop (bad) in inc test or shlb dec fnop dec int mov (bad) sbb into mov fs cld aas ficomp lds cwtl dec xchg aas xchg or shll add hlt push cmp pop fidiv adc int3 in jne (bad) icebp cmp in push dec fwait mov daa mov outsl shr mov inc push shr sub lea ja cmc sub bt rcr bsf add pusha shrd jmp addr16 int mov cltd jno adc jno inc fisubrl scas jnp in mov mov (bad) decl rcrl sbb xor jle cmp imul sbbb loope out fistpll sbb sbb sbb in pop jno imul fwait adc jge adc outsb icebp xchg pop outsb xchg imul pop and mov lods iret dec pop insb hlt fadd jns ss repz movsb pop outsl pop faddl movd scas loopne lea out sub cmpsb pusha das inc or lds jmp mov lods pusha inc pusha push clc jmp or call cmc pushf sub add pusha jmp pop and lret int lcall cli (bad) mov mov repz stos jo adc sarb pop mov stos je push fbstp (bad) cmp xor sahf mov (bad) and or add (bad) jae pop and mov sub data16 sbb xor nop or mov insl and mov int (bad) lods mov and rcl jle sub iret popf arpl push hlt mov fcmovnb sub rorb mov cmp mov (bad) repnz fmull imul loop sbb mov repnz lea pmulhuw add test lock fdivp jne pop and add shll and (bad) mov and fs jno push movl jmp popa sub int cmp adc repz pop cs (bad) push sub pop divl lret xchg clc in into mov jecxz push add jns xchg into mov or lea mov mov mov imul xor adc mov mov arpl cmpsb sub insb into jae inc jbe into jl insb inc stc inc jmp (bad) sarb inc adc fiaddl icebp mov mov adc insl inc out int3 roll lock shlb nop (bad) xchg mov sbb lds mov in lret jne mov call mov adc or xchg dec inc or sbb jae inc push dec sti mov xor js jmp or jle mov sub add ljmp jle (bad) pop mov cmp add push push stos cmc or sbb xor pop sbb inc jle fdiv insl dec in inc inc jbe jle mov movsl cmpsb ss stos scas or std and aam inc sahf insl hlt jge fs ret div clc cld stos es push shll jp sahf xchg daa orl inc inc cld ja push mov and dec hlt imulb and clc aad jle sub les push pop jle daa mov cld nop inc call push out jle mov stos and pop cmpsb xor mov cmpsl pop inc jp push js stos jle xchg cmp sbb sub mov mov mov outsl mov lds loope aad dec icebp test mov mov jbe cltd mov aaa iret idivl jae sbb push jle jns (bad) ss (bad) jle das cmp fdivrl sbb or jno jle adc jns scas mov int hlt mov popf cmp adc je push pop mov icebp pop cmp out ds pop and fistpll mov daa xchg sbb in cmp lock jbe or pop sub out and in cmp push xchg (bad) pop out ja jle sub scas pop rcr mov and mov mov jecxz inc inc push roll mov js pop sets cwtl xchg jle mov push shrl jle mov push out jae es jle and cltd cmpsl xor mov insb sub out scas add outsl aad cld mov xchg or pop mov loopne xorb int jle push or push pop push jle xchg (bad) fisttpll int3 aaa jle ja rorb repnz push mov fs jle pop cli xchg adc push mov loopne jbe and mov fnclex aad sbb push mov sti out dec stos inc cltd sub xlat pusha jle lods push jl sub or sub ds loope push test (bad) (bad) call jnp es fist cmp in jle stc push into sub mov pop pop push outsl clc or jl mov jle xor hlt adc sbb push icebp cmc std adc dec cmpl cmpsl add lods test (bad) repnz cmpsb mov adc pop cmpl sbb mov or (bad) cmp xchg fcompl push mov ljmp mov xchg in das cmp sahf ljmp ret sbb pop rorl jb cli xchg and je sbbl push stos xor jle push jg add into sub mov test int jle leave movsb jge cld outsl mov jl daa ret mov jle adc dec or and jp mov pop add in hlt push test add test mov sti aam pop push (bad) dec jmp movsb test fdivrs lret fs jle (bad) mov push mov cmpsl cmp out sti push add jle sbb lret fwait mov (bad) dec faddl js sub inc pusha insl test jle mov mov jle jmp in jo push faddp dec jle pop imul xchg loope jg imul jle jno mov (bad) cld cmpl jp xor and jbe cmpsl inc mov in inc push jle sub (bad) jb dec jle (bad) sub (bad) pop inc scas xchg sahf in push xor addb jle sub imul mov jno lock jae and inc jl insb shl add in insl mov scas jg rclb imul pushf jmp push jne mov pop mov lea xchg inc test lret mov out sahf jns (bad) (bad) nop xchg imul into mov jmp cltd addl mov cmp add das xor repnz jns into inc jg leave addl jg xchg or mov (bad) shll xor jno idivb mov add mov ja out mov nop ja xchg inc inc jno mov subb add aad inc into or mov fimul mov scas xchg scas push jg inc mov mov jge xorl (bad) js xchg jge xrelease mov repnz mov add scas ljmp adc outsl and pop outsl pop mov mov rol loop add loope shrb arpl mov ret add and ret adc dec cmp sahf sbb lahf push push sahf lcall push sahf sahf test (bad) xchg mov cmpsb rclb unpcklps dec mov jno in lock lds popl add into in adc and push inc aas popa js in loopne nop adc out inc nop or add or xchg mov mov popf jmp lahf inc test les movb push movb push inc loop loop loop xchg add (bad) xor mov mov pushf pushf mov xchg push and mov jg (bad) clc mov sti aad jg push orl (bad) adc add mov dec jge scas cmp dec movhps pushl sarb ret jge push mov jno stc aas jae lds iret xchg adc lock scas rol pop jg rolb ret push nop pushf mov pop loop mov mov mov xchg inc mov push ret (bad) inc xchg shl inc insb aad shlb add pop pop inc ret add mov mov push dec mov push nop dec (bad) (bad) mov push incb jge jl mov mov (bad) cmpsb ret mov inc add mov clc inc mov popa rol incb sub repnz pop lret mov jge (bad) into mov or jle jno rolb adc in or (bad) and sar pop mov into cmp mov adcl adc out jl and dec js xor mov arpl mov adc cld adc stos fdivrl adcl xchg jge mov (bad) dec xchg sub mov inc sbb rorb mov fwait xlat sarb cmp sarl pop pushf movsl (bad) xchg les cltd lock (bad) aas nop push cli in inc mov loope xchg aas mov cld add xchg bound aas mov jl xor xor cmp mov jno in xchg pop xlat mov push pop sarl jnp jno iret jg sbb mov mov sbb aaa mov and xor dec roll mov cld fisubr dec cmpsl push or mov (bad) xor sbb sub js add xchg ret rcrb aas add xchg mov das rolb popf pop shlb dec cmp js pusha icebp test pop sbb lods mov jno sbb add subl sbb mov pop lcall cli adc or jecxz (bad) mov cmpsl aad fwait cli fnop mov push add test push cmc adc and jecxz cmpl aad jno,pt nop mov movsb in and adc push aam subl jecxz mov sub fcmovb pop jp fnstsw cmp push jl fidivr clc mov add add shll mov (bad) cmc jns xchg icebp cltd push pop fadds adc sarb icebp jge and and mov les ret adc add cld add mov rcrl cmpsl sbb in inc sbb rolb sbb push jg lds inc nop fisttpl inc mov popa mov (bad) adc les aas lds addb out rcll aas mov jnp mov pushf (bad) psrld sti jnp jg xchg (bad) lahf jl lahf ret (bad) scas xchg xchg jp mov sub js pushf cmp xchg lahf insb pushf pop cmp mov sbb pop aas lahf push pushf jns mov ds cmp outsb inc pop push mov shll cmp fbld dec sub fs roll mov arpl rcrl inc sahf inc iret andl push loopne push xor cmpsl xor bound mov mov movl pop out xchg test scas jg cmpsb mov sub sahf mov adcl add in add repz sub pop jno cld or repz sahf (bad) addr16 push orl inc sahf mov ret adc cmpsb (bad) arpl out mov data16 ret xchg xchg adc cs mov sub xchg ret dec repz push (bad) jg sarl sahf aas cld or inc sub mov add ljmp es ds inc (bad) insb mov mov pop mov outsl jp lahf scas mov decl sub jle pop insb jl pushf lods mov cld or dec pop insl jge popf mov jle loope add and inc jle bound xchg mov loop add and inc jle arpl xchg mov jecxz add and inc jle pusha jo nop mov loopne add and inc jle popa jno xchg mov in push push es cmp data16 jo cmp xchg lss sub cmpl out xchg push lods incb mov cli xchg push cmpsl outsl mov mov jmp inc xstore-rng cmpsl xorl jno addl xor xor test cmp jmp adc ds ret imul add xchg mov adc in mov mov pop lods pop jl push ret push push mov in inc adcb imul pop shlb popa push cld adc int push and pop mov mov rclb rcll cmpsl jl xchg inc push loopne jnp mov dec pop fisubl rcrb jmp jl (bad) mov xlat jg cs js add testb and popa mov and xchg mov dec (bad) xchg jl pop movsl andb pop test dec lock xchg bound cmc lahf cmp dec shll sbb mov ret scas inc rolb sub aad mov (bad) sub sbbb mov and icebp and ret fld lgs sub mov dec and sbb mov mov adc and and repnz (bad) mov mov fadds mov decl js loopne ret fwait cmp loopne fisubl inc inc fcoml inc ljmp or insl cmovge sub pop adc nop lea paddb jo fist int3 (bad) jg bound insb aas in scas rcrl sub test mov add mov xchg mov xchg jo aad fneni(8087 lock rorb outsl je xchg incl popl jg push mov roll push adc sbb sub mov add data16 in vpaddb cld scas add scas jg pushf xadd cld cmp cmp mov mov pushf bound mov (bad) cmp add cli lahf mov ret mov add xchg inc popf add add popl xchg pushf xchg inc clts add xchg sbbl adcb adcl lahf add pushf add cmp xchg aas jg or (bad) lahf lds mov test inc xchg add mov jmp cmp cmp ret fistl pop add (bad) mov cmp ds lret xchg (bad) (bad) sbb sahf mov call mov rcrl xchg (bad) lret sahf sahf (bad) push lea popf sahf sub and sahf push insl fwait adc jle ds outsl or jge sahf sahf add xchg jle out pop pop daa aaa inc jle addr16 xchg cmpsl mov jle out add and inc jle fs xchg movsb mov jle in add jle gs xchg movsl test jmp cmp pop push mov (bad) cli or sub jle pop imul stos mov sti or sub jle pop push mov clc or sub jle pop imul int in std push push cs pop outsb int3 jae push mov push mov aam shrl nop push sarl repz js adc cltd cmc jbe xlat fimull ljmp push mov sbb mov mov popf adc sbb add arpl aam inc push mov cmpsb mov popf xor jo rol dec sub xor lock out jl and negb jl (bad) and adc mov aad add ja rclb arpl jl mov in xor push lret loopne dec insl push add jl or (bad) (bad) cmc dec inc xchg repnz into add lock roll lods dec sub jl xchg dec inc push pushl rclb lcall mov (bad) popl insl cmc adc sarl ret aas xchg jg or cld add (bad) adc lds jnp sbb mov rorl mov es push fwait jg pop mov fsubrl mov (bad) sbb jg push pop push sub call adc add mov frstor add lret mov aad es pusha xlat pop or dec mov xchg sub lods push pop inc mov jne inc enter sarb sbb loop jg mov inc mov add cmp push and stos mov cmpl mov or xor rol xor and daa jnp mov cwtl adc cmp insb add inc aad call lock (bad) jb adc shll dec push shll mov mov jnp lret adc mov out add data16 stc mov xor mov xchg call aas movsb and mov jmp gs cmpsl popa pop mov inc and leave inc clc xchg hlt mov into mov test xchg iret lds dec push add lds pop inc gs xor enter cld stos in dec mulb lret mov mov test in xchg mov mov mov addr16 sbb sarl mov mov into jmp mov mov (bad) in (bad) adc mov mov lret cmp ret rolb lods addb mov mov add xchg mov and pop add jp clc mov sbb repnz rolb lods loop sbb test (bad) movsl jnp inc incb xchg xchg inc decb (bad) sar fs inc sub test pop jae mov std call popl (bad) popa xlat cmpl sarb ret add jae js sarb and ret incb pop js test ret cmp add clc rcr test jnp (bad) xchg xchg ret (bad) pop stc mov mov add incb adc (bad) lock jnp daa sti ljmp lea inc incb add shlb jns pusha iret and xchg call sub add test ret je jns mov xchg (bad) mov andl xchg and dec mov repnz (bad) xchg ret lods mov enter movb or out pop loope pop decb scas aas sub dec xchg jae orl (bad) es cs setns or ficompl mov push lcall mov jg sub bound mov pop rorb fcomps mov cld mov mov pop ret xchg subb popf rclb adc (bad) and jl push push push pop fmuls sti outsb inc mov xchg mov (bad) enter inc and mov xchg mov push cmp scas mov inc or inc movsl adc (bad) xor mov pop bound inc jge pop push lahf lock push popf ret lods adc (bad) lahf xchg mov inc or add pushf push ret pop add jo mov mov inc add mov repz std or inc cmp (bad) imul in mov into sbb adc inc fcomps jl call clc into test shll mov lea fisubr xchg jle popf xchg xchg xchg (bad) lods mov mov sbb mov insl sbb lods pop insl and lods fs loope and in mov mov mov mov add adc xchg in or cmc or pop dec jle ficomp nop xchg scas pushf into (bad) mov mov lods mov jns sahf mov int3 mov mov sbb fisttp idiv pop xchg sbbl cmp mov test push clc fdivl push popa mov or jge add hlt in lahf add xchg lcall pop sub (bad) mov (bad) repnz clc arpl push sarb hlt xchg push pop fidivl jge push int3 sbb out mov loopne jecxz pop int3 push loope push ret loop mov cmc cmp mov inc (bad) aad inc dec cmp loop jne inc in mov push aad inc mov jmp mov loopne sub bound sbb cwtl lock out pop add popf int3 aad push ret mov mov cmp pop push lret lods jnp add dec leave loope xchg dec push sbb xor mov add cmp sub addr16 cmp mov xchg imul sub lahf push sub xor xchg jno (bad) cmp loop clc iret dec add push adc xchg loope mov add scas cmp out add pop adc mov add add jg mov add xchg popa xchg shl fnstcw popa sbb mov loop inc dec add (bad) jmp push ret sbbl mov xor mov jbe cmp add jns xchg (bad) xor add sahf mov sbb icebp icebp dec adc jae loopne adc ss jl mov fdivr jl push inc in xchg mov adc mov and xor adc shrb ja xlat das mov outsb jbe inc cmp (bad) push (bad) stos adc fsubrl sub push pushf fcmovnu jg cld inc or sub cmp push lods add lret pushl mov jne jl mov call jns fiaddl clc test xchg dec add xor or and sbb fadds int3 shl mov adc rclb mov lret or mov adc xor sub (bad) int das mov adc sub in es (bad) enter aam adc push add inc xchg or aad addl lret push fwait lods jo push inc enter dec popa mov out jae cmpsl xchg ret mov addr16 pause jg jp adc and fcoml repz jbe les ljmp cmp in lds lea mov inc mov insb or fistp jge cld repz loop or (bad) jge int push or add mov loopne mov sbb lock sarb mov aad jle loopne sbb scas cli popa in test push xor pop and fnstenv push loope ss popf icebp dec push mov add xchg push jl fisttpll retw stc mov jae pop push inc cli dec adc mov loopne aam lea mov scas dec mov adc loop and lea pusha xor push ret dec cs lahf jecxz jno mov pop jle clc std pusha ret push push (bad) xlat adc add in es sub fcomip fs mov or dec movsl sahf cmp mov cmpsl in cmp outsb adc (bad) loop movsb loop sub push mov loope out pusha fs lret xor ret pushf cmp loop cmp xor adc leave cmp aaa rorl jnp mov inc dec push adc rclb dec xchg subb movsb loop xchg adc add les push (bad) sti push add pushf adc das cld xlat imul or push adc cmpsl adc add jo insb cld aaa nop mov add int pop into mov mov dec add cmc cs mov shlb iret mov or in rorb cmp stc fsubl cld xor aam xchg (bad) push iret insl push sbb das xchg adcl mov hlt mov ljmp rclb push les cmc bound les (bad) jo xchg enter sbb xchg in xor pusha push xor rcrb popa inc fwait aad push in and jbe inc loopne dec loopne xor lds es (bad) and mov push mov aad lods in dec insb test push cmp test push rclb iret fcoml sub dec mov and idivb pop add movsl cmc int inc xchg ljmp aaa sbbb inc mov fs cmp and cmpsl repnz cmpb hlt popf sbb repnz les push dec inc idiv stc (bad) test push adc and ret pop sbb xchg lock ret ret push xchg pop adc repnz mov roll loope decl jmp push xor jl and dec inc popf cmp push mov add lea cmp icebp iret xchg pushf stos sub icebp push add mov or jno sub inc mov mov shl push adc mov xchg pop es stc lcall int3 sub and xor (bad) xor xor stos repz in mov repnz stc lret sbb popa lret lds test adc cmp and out push loopne xchg xor (bad) mov movsl test sbb pop mov sub fsubrs add cmp popf inc cmp dec inc push sbb test pop xchg scas lock adc subl nop adc sarl and mov mov lock in popf out enter ret (bad) movsb adc add pop push sbb lcall or xor sub xchg push std aam push push cmp and jecxz and fwait dec pop mov cltd ss pop pop inc push push dec xchg add sub lahf shll pushf mov out and xor das adc arpl sbb lods mov mov scas add hlt ss movsb jns adc and shll inc mov jg ret xadd aas pop jns (bad) jnp test pop add sbbl sahf (bad) mov rolb pushf cmp xchg sbbl jp add add lahf cmp mov psubd les rcrl (bad) pop cmp add add pushf stc ret pop sbbl sti add ret (bad) cmp inc lahf cmpl pushf sysret ret pop mov push (bad) cmp mov std (bad) cmp addb add sti push sti in adc ret pop cmp xchg stc lahf test push pop mov les pushf cld ret (bad) mov jl aas jo lods pushf cmp pop add mov jp les inc xchg (bad) pushf mov mov scas (bad) ficomp inc pop mov or mov cmp push sar and adc ss aaa scas lds or sbbl push dec mov add or int3 mov out ffree pushf iret xor inc sbb jno inc popf jbe jp jno (bad) fistpll fldl cmp fld pushf rol paddusb insb xchg in pushf pop pusha roll push pop loope mov lret mov add xorb adc (bad) cmp ss rorb jge incl mov xchg push ret mov sub lahf out ret mov cmp add cld stos mov sbb cmpsb in icebp sub dec push cld inc sbb push addr16 inc subl push jb nop add jle jno xchg gs popl mov jl push hlt jp mov ljmp push xor repnz jl fiadd mov rorl cwtl push sti incb inc jecxz xor or inc ret and call popa xchg aad add jmp push (bad) aad or push insb cmpsl scas xor push adc and ljmp push inc mov jp cli aaa mov movsb mov sbb aad rdmsr imul pusha inc sarb cmpsb dec in cmp mov cld loop (bad) out int3 sbb shll pusha adc mov int3 scas inc in imull mov movsl pushf jnp int3 ret adc fildll mov in adc mov test inc mov inc stos push in xchg inc adc shll sbb cmp vaddsd pop test push fwait push jae jo pop insl jae (bad) dec adc loop (bad) icebp in sbb (bad) mov or pop mov aad (bad) adc aad mov mov xor ds cmp jns cmp (bad) rcrb gs icebp mov imul fiadd ficompl inc int3 mov call call mov add in cmpsl shr add inc and in add push (bad) lret jl rcrl xchg xchg daa sub pop sarl mov insl fs cli rclb or sbb and mov inc inc addr16 jg inc lret mov daa pop add sbb and je sub lea (bad) adc mov ret mov mov and stc data16 scas nop jle popf call scas mov sub int3 pop popf pop jp mov push dec pop jmp push and cs sarl (bad) jl adc (bad) call pop pop mov stc and test mov je push test test cmp mov lods dec mov mov andl cmpsl dec mov sub ret bound cmpsl mov mov pop rolb xlat push pop jl inc enter pop movl outsb sbb mov adc jmp ret cli mov adc mov outsb jbe sar lock push test add adc loope sbb cmpsl cmp cmpsl rol dec cld add hlt pusha pop pop jle push mov mov push jo jecxz das inc ret inc push add fwait cmp imul in push out iret aad or push cs xlat jl mov je jle push mov jb mov movl mov mov lods jnp mov bound jmp das (bad) push add clc adc xor inc or cmc incl pusha ret out mov dec xor lcall (bad) mov jl (bad) xor test aad adc ja dec nop in mov fildll pop pop insb push jg shrb push (bad) jns inc add sahf mov in mov add jnp (bad) sbbl pop sahf ret lds cli lods mov xchg inc dec push xchg mov jg seta jg cli or scas sahf xor ficom push cmpsl cltd push ss push and fisub shll shl xor cmp pop call pop movlps dec mov fs or fwait or push dec fstl jbe jnp cld jecxz xchg xchg arpl adc xor adcl jb flds jbe fnsave cmp gs scas jns add and cmp adc lea cld dec test lods mov xchg adc xor ret repz (bad) push rorl ret xor add pop add loop test or aaa cmpsb sub xchg add lods aaa aad xchg lds jecxz and inc xchg sbb mov cld shll (bad) rolb test mov add adc sub cmp in test cs pop sarb int3 add lahf inc inc in iret cmp pusha out jnp push lods stc out mov fisubl lret push out fisttpll scas push push call lea mov cli scas shrb xor add aad pcmpgtd imul and sarl ds (bad) inc dec inc mov imul cmp (bad) inc pop testl rorb and aad in movsl push rcr movsb xor pop and pop push jmp cld sahf jae js xlat lods and mov sahf fstl jnp xor adc pop pop push in mov aam test adc cmpl pop test das jg inc push sbb lds (bad) mov les cmpsb xchg inc lock lahf and fs (bad) push cmp mov ss inc mov jge idivl adc rclb bound mov std xor mov popf scas lea ret outsb test rol xor jb jbe adcl popf jg adc sub jmp cld ret in aad cmp je sti pop in (bad) dec xor cmp xchg mov mov cmp rorb xchg inc cwtl cmp mov pop xchg mov pusha sbb mov (bad) push mov mov pop (bad) push inc (bad) es movsl mov or cli cmpsl xchg scas inc or xchg inc sahf (bad) lea mov mov nop ret (bad) xchg inc jl rclb inc pushf or std fadds add mov sub psubw out sar xor mov adc xchg inc jg pop pushf popf jl out cmp jg adc cmpsl pop negl repz mov or mov pop shlb inc out xchg subl cmp inc jecxz pop mov xchg add sbb dec dec daa and mov cmp stc adc arpl outsl (bad) jne inc test add ror mov add bound xchg ret add bnd jae adc aas ret dec adc fildll rol sahf sahf cmpsb pusha fwait ljmp insb ror les cld in push ss aaa add mov cmp pop popl or jae rolb sti xchg adc add inc fistpl test inc loop inc adc stc rolb mov jg (bad) jmp sarl or mov mov pop mov and cmp sbb cmp adc push mov ljmp cld mov mov and popf cmp insl rorl gs mov add insl (bad) push mov loope out (bad) into cmpsb ljmp xlat scas add into jb or ljmp mov push add mul cld (bad) add cmp add test std addr16 adc or xchg pop jp (bad) mov push insl mov mov notb iret mov imul test mov sub repz aaa xchg mov mov add in outsl mov xchg push xchg pop mov inc je mov sar (bad) cltd movsl test mov xchg shll add (bad) jl out pop stc add and icebp or adc mov cld out cmp inc clc (bad) jno lods xchg inc mov mov add das cmp xorl xchg lds cwtl in testb pop adc test inc ret inc lds ret xchg pop or inc bound test (bad) mov enter push jg dec mov mov or cmp je pop iret inc push les (bad) mov popa mov js sbb roll push das xchg xchg pop add pop sbb pop (bad) xor dec xchg jg into mov mov out xor adc push rclb inc lcall mov mov sbb jno rolb cld roll in cwtl pop movl mov loop loop lds (bad) test push dec jp loop mov mov call cmc leave or call movsl push cld inc mov xchg add inc dec in cmpsb loop push (bad) gs inc inc (bad) jg adc pop lods (bad) mov add add xorl add push (bad) and xchg push arpl cwtl inc popf sbb inc mov dec (bad) push cmp (bad) pushf cli mov xchg (bad) daa test mov mov mov jl (bad) pop cmp xchg std push xchg sete jnp adc push xchg mov lds mov add rcrb and and fmuls mov fistpll insb mov sub jo push in push dec scas cmp (bad) mov pop xchg popa (bad) xchg rclb cli pop rcrb xchg arpl push or mov inc push push mov insl mov (bad) mov xor into pop jo xchg add (bad) xchg rclb cli pop rcrb pushf mov sbb xor nop cwtl jnp mov cld pop in sbb mov pmullw mov lcall cli pop shlb mov mov insb pop insl ficoml rcrb xchg stc push cwtl insl xchg inc aaa jo,pt cli xchg jg rcrb mov cli pop rcrb mov push inc in push push sub mov pop shlb adc inc daa outsl sbb imul ljmp iret push xchg aaa mov std pop xchg loope cmp adc (bad) pushf push sbb mov les mov pop popa (bad) xchg inc dec mov lds out dec mov jo mov pop popa (bad) xchg orl mov and lea test pushf or (bad) mov and mov (bad) adc mov xchg outsb inc xchg dec (bad) icebp xchg cli sbb xchg and into mov data16 add sub mov mov cltd jmp jo icebp das fimull jo push out clc push pop insl xchg data16 jo,pt push out cli gs or aaa dec mov out (bad) addr16 icebp mov pop into out adc ss (bad) pop push (bad) mov push push movlps psllw push push push push push push add in movl addr16 xchg pop rcr insl xchg push aaa cmp cs sti pop lret xchg inc aaa mov cli pop rcr insl xchg push aaa cmp mov sahf inc decl inc stos lret jl push cld push push or fdivl pop psraw mov lcall dec fwait pop xchg rcrb mov push mov (bad) (bad) fwait inc jno cld cvttps2pi adc leave or sbb push setbe mov cli pop rcrb popa or inc mov xchg repnz popa or mov inc pop xchg rcrb mov or or insl xchg (bad) jb lods jmp mov out pop pop ror stos in xlat sub mov mov inc mov pushf sbb subl mov out pop pop ret mov aam cltd sbb bound ret out sub inc jno push int3 push cmp cmpsb xor add sarl adc ret rclb leave dec enter test inc push jno jns add in or dec loop aas and orl adcl arpl pop pop cwtl shlb gs lea int lock (bad) loopne fistpll in inc dec mov jae std mov cld cli out push fcompl ss or xchg sbb jp mov jl (bad) mov bound mov pop jge xchg cmp int3 xor jns dec insb adc andl pop mov jne int and movswl loope or mov xor les sub aad inc xchg sub in rolb and pusha push jno mov out popf mov sbb loopne pushf (bad) cmpsl and enter sub mov add dec pushf out adc cmp adc loop pop daa sahf aas jge loope (bad) mov in push mov sub mov jns xchg jge aad push jmp shld mov sarl dec xor and movsl test rclb xor enter jno in pop (bad) into dec bound pop mov xchg inc jno push (bad) jno js ljmp sbb outsl arpl or pop jecxz cmc mov out nop pop and push aas cld (bad) out popa cmc ret rclb (bad) fimull mov (bad) pop sarb shl dec xor sub jle aad or repz jge and push jae xor add mov mov add pcmpeqb mov inc cli shlb in dec dec es andb sarb aas lock mov xor cmp or sbb imul aam mov shrb adc fbstp dec lea fnstenv lahf lock mov mov mov and (bad) and int mov xchg aad xor iret popl mov mov add or es xor (bad) mov outsl ret cmc inc xchg dec pop das and add shll push jnp sbb negl cmp (bad) mov sub xchg insl push cwtl mov jne pushf jg les lods add jg and xlat mov fidivl push mov push add hlt xor aad sub jl int dec cmp adc jae cmp jecxz ret add in addr16 xor xor inc jo ret add mov mov addl and hlt int adc inc mov xchg repz fldcw mov popf adc add mov jl xchg into xor jnp cmpl push jo sub push sti sbb lea clc arpl pusha lds shr rcll or adc popf cld adc data16 xor mov mov push push aas enter les movsb mov ret lret mov lret add jnp cmp mov inc or pushl jae or xchg stos arpl add mov (bad) and loop adc add mov dec mov pop add in push cld add mov ja pop inc jno daa lea ljmp dec rolb sub inc xor dec xchg rorb fstpl pusha mov xchg xlat cmp dec sbb bound xor int3 popa mov insl push mov cmc adc mov adc xchg pop or push adc cld cmpsb push dec and push dec push jl (bad) (bad) mov lret in (bad) mov in roll mov add mov incb xor (bad) lods xlat mov inc or mov lret inc call xor js sarl adc repnz (bad) movsb inc jbe jmp lahf test (bad) adc aam mov xchg lret out into cmpl adc pop xor xchg mov add mov jnp push mov repz pop stos cmp add mov sbb cmc push sbbl and or mov jb xor lods repnz add jnp mov dec lods sub pop push lods add mov rclb sbb pushf loope jmp fnstenv jle mov xchg adcl add je pushf pop cmpsl dec inc sbb out mov orl jnp mov pop ss or mov sub in icebp jmp add mov xor mov les inc lods ret xchg cwtl xchg rcr push mov add mov add shll jo adc aas sahf cmp add (bad) jecxz or inc fadds push inc jl imulb iret cld adc fstp push pop xchg add mov repz fs or ret push aas leave mulb push jg jae mov jnp add jg xorl setl in sub push cmp js mov mov mov inc or inc xchg add dec xor lcall js scas shlb inc rdtsc or lcall fcmovnbe jns cmp add lea push cltd push push into jae sbb cmp push mov int3 repz pushf cmp loopne cli add jle aad dec xchg dec xchg and (bad) xor mov mov add ret jne pop mov dec shlb adc pop gs repnz clc clc jb jecxz add repz fldl jb loopne popf jno xchg inc mov (bad) jge adc insl jno push sti xchg adc mov mov out and push and loope mov lea ret repnz cmp adcl je pusha ret scas (bad) imul and jmp xchg xor mov mov add mov insb inc je sub scas pop bound iret jmp or push cmp jae mov (bad) jo mov push xchg (bad) mov test iret adc inc xor xor icebp lcall aas and xchg mov xchg add cmpsb dec sets lret inc inc mov inc cmp mov repz fidivl mov aaa jl adc add pop jecxz or or aaa fild lahf ret stos inc jb push mov add sbb adc pop cmpsl xor daa dec and sahf cld (bad) subl repz xchg out jmp popl mov or inc adc pop loop and lds out bound mov push mov lret movsb cmp xor mov xchg mov std jae sbb ss sub cmc jne push jmp push test mov mov ja sbb ja mov and xchg test lea movsl sbb enter in mov imul inc loope leave test mov test cmp jbe jbe xor les cli inc rclb aaa lret fwait sbb hlt mov enter pop mov add pop mov lcall clc adc ja inc in mov mov mov cmc rorl enter push mov or mov mov (bad) cmc arpl adcl mov cmp push cmp mov je add push ljmp sub push bnd inc cmp hlt (bad) aas mov addl (bad) push adc and sti mov jnp mov rclb int3 les sub xchg out loop push loop xor or dec cmpsl dec mov cmp dec xchg repz int inc inc adc inc pushf jo aaa xchg lea ret dec rclb mov loop test outsb inc je cmp jg mov mov push mov fdivs or imul inc sbb hlt jp mov xchg mov adc jecxz pusha sarl nop cmp frstor sbb pop insl mov pand or adcl (bad) call cmpsl cwtl cmpsl xchg (bad) mov pushf mov cld sub mov (bad) mov icebp jle stos imul mov cmp arpl push mov push xchg dec aas or add arpl loop cltd and sbb inc (bad) ss push stos decl jae (bad) sarl scas pop arpl lret jecxz xchg sbb test mov jecxz dec mov and sbb ffreep pop jge jl loopne aaa xchg int insl lahf mov sbb outsl int fisttpl lret aas or jnp hlt pop add xchg push ror push leave rcrb jl add xor and push ret lret (bad) jmp cltd cmpsl and push insl lods sbb sbb sub setb cmp jne mov mov pop xchg xor (bad) jne pop shrl push loope pushf popa int3 sub or stos mov dec int xor cmp es inc aas and pop (bad) lods pop pop mov cmc imul or arpl adc in dec cs pop add pop test daa push dec ret add incb cmc es xchg xor push mov mov cmp ret invd cmp cld mov mov inc dec or cmp inc adc roll lahf dec adc and mov push jbe outsl dec mov popf mov orl inc mov mov (bad) cmp or in jmp sarl adc daa dec pusha js loopne push or sbb xchg stc orl adc popa aad (bad) (bad) int3 dec inc or mov sahf cli scas push mov mov mov pmaxub into das jle aas scas dec sahf pop mov push clc add stc jle (bad) je mov xchg pop cli das mov jb cli inc xchg out mov outsb aaa aas popf dec inc cmovae pushf inc ret pop inc lahf inc mov cmp add lcall cwtl pop lahf lahf cmpsl mov popf pushf movsl ret pop pop lahf daa mov sbb sbb sbb and and sbb es pop ficomp ficoml loopne pop fistp fistl in pop pop lahf addr16 pop pushf gs pop pop lahf fs bound mov mov nop mov (bad) lahf xchg mov lea setg mov or or or adc adc or push push pop into lahf (bad) mov int3 pushf aam ror pop iret lahf xlat mov rcrl dec lahf push mov dec pushf push ret pop dec lahf push mov push pushf dec ret pop scas repz pushf (bad) mov lahf stos pop xchg pushf mov lahf test or das or xor lahf sub pushf sub xchg pushf xor lahf sub pushf sub lahf xor xchg pushf xor lahf sub pushf xor lahf sub pushf or out or repnz in or lock out or repz icebp or cmc or outsl or jae lahf imul insl or jno lahf imul je xchg pushf jo lahf push or jbe lahf outsb pop xchg add inc (bad) (bad) pop sbbb xchg sbbl add add ret rcrb xchg lds (bad) ret pop mov mov test or jmp pop mov cmp sahf ret pop sbb fidivr pushf mov (bad) movhps aas sahf iret cmovg dec lahf scas mov sub out shr jb cmp push int xchg scas out lods (bad) xchg psubd push das insb lods aas push dec insb cli pop outsb xchg outsl outsb and fucomi scas fistpll addr16 lods (bad) mov mov pop repnz dec jb cmp sarb das or mov mov (bad) mov mov fild ja (bad) ds sbb inc test add fisub pop push inc aaa pop inc inc mov sahf push jl ljmp orl pop xorl (bad) js cmp adc aas inc add je push mov and outsl push xlat xchg xor mov rcrl shrb rorl stos pop in pop xor pop gs stc mov test xchg out push cmp xor pop sub popa aas (bad) mov mov mov mov mov stos test loop (bad) mov mov jmp cmpl mov xor das in rorb aaa cltd insl mov fimul (bad) xor in jno inc popa sub pop ljmp jg add jns ficom into cmp repnz cmp dec jg lahf pop sbb pop cmpsl dec jno mov repnz enter std into mov push (bad) mov xor adc incl mov int ss adc pushf jl je aas pop mov xor push or xchg out jle cmc cmp xchg out unpcklps push jnp mov aam or pop sub stc cmp pop push lret js or movd xchg data16 dec stc call xchg jg sti cltd jl test add jle (bad) push mov outsl dec push xchg leave jl ljmp inc scas jp xor jle push mov daa jle inc mov cwtl push jle push int (bad) push cli jl popa xor adc xchg mov movsb mov mov dec fwait scas xor pop aam add jle mov (bad) push insb cmp (bad) sti popf aad push fstpt adc xor fsubl mov xchg jmp jle nop jnp leave mov mov sbb outsl aam stc fs cld incb jle jo or fidivrl inc jno popl add xor dec jle flds xchg jle mov jl add jg lret imul leave (bad) jle mov stc clc sahf movsb or push rorl push out add mov dec jle jbe push push (bad) testl mov mov mov jge (bad) arpl push fidivr aam sub mov mov test jle or lahf sbb pop aaa jle pop or push adc iret lods jnp inc rolb mov push pop jl and cwtl jge mov and xlat sti mov cs or mov or loop pop lock jnp sbbb jle mov mov jle pop and inc pop xchg into xorl das pop out jl or leave add test btc or jle pop push pop pusha add or or mov out push test pop xor jle push inc sbb mov mov test or lds repnz sbb mov sub lahf jle mov (bad) xor (bad) (bad) out and add imul into outsb movzwl xchg ret jns mov testb cltd mov ficom push jle mov xchg call sub jle js stos pop and sbb cmp dec lock or addr16 jmp cmp mov xchg mov mov lock cmp cmp dec fmulp jb loope jle sbb pop outsl jne and xchg stos in adc dec lock push pop adc inc test loopne cmp add xlat cmc aas cmp or sahf pushf insl fmul scas rcrl sbb cld std dec movsl cmpsl jle mov inc hlt jle jmp lea leave aaa jle or test sarb cltd mov inc mov jle pop mov sahf adc jle pop sub lock mov jle and mov gs fnstcw xor fwait cmpsl dec pop lret jle jmp push imulb mov test mov insb dec fistp xchg xor or mov test (bad) fsubs jp andl xor loopne das mov (bad) jle (bad) ja mov inc nop lret fild cwtl pop test fwait dec jmp mov arpl nop fdiv hlt in jle cmpb adc sub popa bound and fisttpl loopne push sti icebp mov cmp pop jbe movsl repnz pop jge cltd dec mov lcall mov mov mov cmp jmp dec or lock pop es stc and add sub pop das mov stos sahf push sahf js fwait lods insb test mov das add ljmp pop test test mov jae xor xchg (bad) outsl add js clc mov jns pop jle insb add sub xor xchg repz cmp cmpsb inc popf adc cld in scas jl out inc outsl lahf (bad) iret mov pop (bad) outsl sub mov ja pop popa jne xchg dec jns idiv xchg jp in sub mov jg jmp jle inc dec lcall mov xchg inc stos pop fidivr sbb scas mov mov jp mov inc es xor mov and hlt stos pop testb xchg cmpl jbe mov jns clc xor push scas push test mov jne jb (bad) add jns or mov out xchg mov fisttpll mov js je std mov ja sbb adc cmovb xchg pop xchg out jo cmpl push mov jl (bad) out inc (bad) lods add or add xor sub cmpsb jns jle sub imull sub xorl movsb pop jg fbstp ja cmpsb jnp imul add mov jbe mov jno sub jl inc scas pop outsb add mov test add jae xor out add outsl stc scas lock xor scas jnp sti mov jp cmp pop sub jle mov jp cli mov pop and sub xor xor xchg pop call test cld test sti movb outsl add stc mov cli mov fwait mov pop outsl pop jbe add (bad) mov adc scas ja mov outsb jg mov cmpl xchg mov (bad) jle sbb cwtl jae jp push mov add mov jl mov jnp insl jl mov xorl ljmp sbb jle and ja sahf outsb std inc jle jbe mov cmp jne and jle jg and test imul inc jle (bad) ss les jns jg jne adc jle jle mov fwait and jle adc jle jne jle push sarb jle jle dec push cld jle mull push pop sbbb cmp sbb mov cltd pushf (bad) mov xchg fmuls pop cs pop lock sbb mov pop outsl ja nop mov mov fs push std mov or pop das fnsave ss cmc inc jle loopne mov jle jbe sbb out jmp mov jl mov mov mov mov mov (bad) or mov mov mov ds sbb sub cmp int adc lods pop (bad) adc jecxz loopne loop inc mov jle mov dec push iret push pop ljmp insb jmp mov mov ret jle dec in lret jecxz and add (bad) repz adc pop xchg xchg fdivrl mov push pop in clc jle,pt imul pop jle cmc sub and lahf cmp dec inc jle push jecxz ljmp adc and jle pop and out bound pusha clc addb push mov and dec ljmp (bad) orl fadds cmp mov jle in push jle jge xchg cltd jnp insl outsl dec outsl rcrl daa mov out mov sbb jno ret sub or push popa ds out push jle popf test jns ret pop jle adc pop mov inc (bad) aaa (bad) lock mov mov (bad) cld pusha inc xchg fidivr out idivl and aad jle ds cs lock jle inc notl bound jmp popa fdivrl mov sub push inc mov pop push sti outsb enter stc sbb inc xchg jle loop sbb mov das push movsb jns mov mov jle inc jge addr16 dec or (bad) jle ret push push jle add inc mov (bad) fistpll bound xchg flds scas inc cmpsl jo (bad) push leave lret shrb out loope sub adc ss jo rolb cmp mov ret jle mov aaa and xchg sub mov mov jle (bad) ja shl pop loope cmpsl or or in ret ja aaa inc scas fwait or dec jns jp sub (bad) cmp imul lret (bad) sub cmp pop ret xor aam call jle lock cmp mov add lahf and inc repnz mov bound inc out mov xchg inc jle pop rol aaa mov mov pushl out lret xchg or jle es push jle mov push or and sbb jbe pop xchg fdivrl inc popf mov jle rol dec cltd jns lahf mov jle jb out or push xor xor mov je aam std push das jle push sbb les pushf out add (bad) scas cmp lods jle pop test int jle pusha xchg test xchg and add xchg nop cltd sbb add xor lea dec cli jle les shrb (bad) scas into mov js xlat inc jle jmp xchg cmp push lods scas inc fadds cld xchg cli outsb cmp jns,pn add inc sahf int push jle or jno inc loope frstor jle shll jle adcb dec cmp jle mov fistl outsl pop arpl pop (bad) push adc test jp inc inc movsl bound mov adc or outsb dec mov cmp jle pusha jns mov and pop or lcall stc cltd lret es and outsl (bad) ljmp das movntps or into jno mov pop mov add andb jle (bad) jae jbe lods xchg jle jge sbb sub std jg ss cmc push loopne fcmove pop jle icebp add dec sub jmp xchg add adc push mov in aad movsb clc dec jmp mov push insb cmpsl mov jle (bad) je inc gs pop sub xor and pop fcmovb mov mov xchg es fildll inc pusha adcl mov mov les jle cltd or test sub xchg jle insl or mov sti scas jne movl stos dec inc pop pop push in jle jl inc loope adc js aad test jle xchg in and stos adc lods sahf xchg in pop sbb movsl jle insl adc xlat mov mov mov inc movsb mov insb adc imul pop lock xor insb leave xor and xchg or sub loope xchg scas out jo sbb testb jle jmp xor mov jle mov mov sub pop mov js xor pusha mov lcall mov loopne clc cmp jnp js popa push call sti ret push jle mov add pop jge add (bad) pop jle clc dec xor icebp mov fdivr imul subb push add (bad) mov loope outsl lods adc bound xor ds je sahf inc mov jp lret push daa (bad) clc popf xchg (bad) sub push mov jnp orl xchg fadd int jle fcmovnb cmc in inc push lds inc in cmpsl jb mov test adc push jle movsl cmp fldl lret jo ss test fidivr mov (bad) andb test imul in add cli out xchg icebp popf aas testb cmp jle aad mov mov (bad) mov mov cmp leave call mov jle into adc pop (bad) jmp mov incl mov and mov leave mov mov in movsl outsl jle fsubr inc xorl ljmp popa stc jle repnz xor jle jmp jp jle inc and scas (bad) mov jle or jl es add aas ljmp scas push (bad) ss add ret in xchg and outsb jle scas mov pop test nop lcall fnstcw pop jnp push enter jle push popa (bad) repnz sarl es into cmp inc jle call sbb jle ja cld (bad) mov adc xor or (bad) jbe rcll jns push or faddl mov inc int3 lcall jle fsubrp (bad) sbb int out adc xor jp push jns jle dec loope lock or push cmpb movsl xchg ret sbb ds (bad) jne cltd (bad) xchg jmp in hlt and push and mov xchg mov inc arpl jns xchg icebp jle test adc xchg sti sub stos rol and and ja lods adc in aad inc cmp push xchg push jb xchg push in xchg jle out inc test lods inc lahf jo das jle jne imul cmc dec sbb scas mov in stc mov add push add sub xor in insb dec gs js lds lods mov rolb fcoms stos jp dec lods int ja ljmp jle,pt inc cmc std hlt mov sahf mov push mov or mov mov sub inc sahf sahf inc je out fistpll notb sahf inc das jb xchg dec jle ds (bad) insl mov or xchg jle inc out ds and mov mov ret int std sub jmp mov setns aad sbb jle repnz jns jl imul cmp jmp jae aaa iret mov jb dec jle mov inc cltd subl mov push cld test jecxz mov pop aaa pop nop movsl adc jb test aam sarb fsubrl push je jle mov popa push mov xlat aad jle outsb repz ss adc xchg adc sub movsb popa in (bad) in fisttp dec or scas jle,pt movsl repz fs push jle xchg adc call orl shrb pop addr16 sahf pop cpuid add loopne mov pop mov jle data16 jae jmp jle adcl jle ljmp jbe jle sub sub jnp cmp fcompl mov sbb fwait and mov mov stos sbb lret daa sbb xor lahf mov pop (bad) jbe test lds cmp ss sub fprem fcomps xchg ljmp jle call sbb pop gs adc jle sub jmp jle push iret lds jne pop out cmpsb in dec adc fs out xchg jnp xor mov outsb adcb outsl daa sub lcall movsb mov sbb jmp pop xor push push mov hlt push add cli jns jle fldcw cmp aas cmpsl fwait in bound mov mov cmp and loopne jle jecxz push fisubr ljmp movsl jle fidivrl cmp adc mov mov jle shll out pusha xchg jle jecxz arpl pop inc bound aaa out mov push movb pop in fisttpll aam jl mov push test or stc jle mov lds lock rorb or dec xchg and sarb mov test lock pop scas imul pop fldcw pop push pop sbb inc imul sahf popf cmp add or pop jp cltd fiadd nop pop test popl mov sub adc lret jle jge push push pop mov arpl aam sets and pop rcrl enter lods pushf sarb (bad) orl push mov outsl sbb in pop mov nop mov sarb jbe fs lcall ljmp jg loope cmpsb fs jle decb push push pop jb,pn mov nop (bad) sar cmp push xlat pop ja xchg jle clc or cltd dec pop jle dec and lahf pop push adc add fistpl cmp aam enter (bad) fwait (bad) mov out inc jle out out mov arpl cwtl jp adc jle or cmpsb jle dec mov jae test pop lcall dec xchg ja mov mov int in ds jle xchg les jle pusha decl jle pop sub mov xor pop sub mov fidivr insl jg scas mov lea push pop push (bad) cmpsl data16 clc xor and scas (bad) aam jle inc xchg inc das mov xchg hlt xchg jnp jns in jle (bad) enter sahf mov dec jp (bad) push jle dec popf push sbb lcall mov jle (bad) repz add push adc pop push pop out mov sbb clc push xchg lods and push fsubr push enter loopne push sbb xorb (bad) fmull movsb imul jle mov daa sbb pushf cmpsb pop jmp jle adc popf cwtl int3 jle out lahf mov into fnstcw repnz adc outsl dec cmpsb rcr stos js adc les mov pop bswap jge mov jle jae pop mov scas lods cltd dec (bad) xchg enter repz lea mov aam loopne cli jle scas adcl popf idiv rcrl xchg dec push mov mov push xor out inc test sub subl dec insl mov or jle fs xchg pop (bad) pop fidivrl mov aas movsb jle pop cmp jle mov cmp pop mov add inc mov jae sub popf xchg jle fsub sbb jle ret mov mov loop or test in movsb aad insb inc adc mov or xor push popa mov mov pop mov mov push jge jle adc vpunpckhqdq out fwait jmp xor xchg int dec jne adc mov jle cmp jle movsl dec push pop push sbb jle mov adc dec mov int lods data16 add mov ss repz div cltd jbe popa dec xlat popl jle jecxz mov xchg imul push sbb (bad) jo in add scas xor int xchg dec jle mov fmull adc xchg movsl pop nop jle xchg sbb les daa mov mov orl xchg add pusha (bad) pop mov sbb xchg jp sub dec jle hlt bound jle enter rclb jle lret call outsb mov or xor xchg mov int3 fisubr nop add fwait jae and push jle in and sub add ljmp (bad) jbe pop addr16 testb pop mov fidiv (bad) int3 add pop lock lds fidivrl test or mov je pop int mov pop inc pop add fstpt sarb in push pop ss sarb push mov icebp mov fiadd addr16 cmc stc jle imul xchg mov push lods add (bad) xchg jl jle shlb sbb jle mov pop jb cmp sub adc fidiv pop cmpsl mov sbb dec add jle cmp (bad) jecxz xchg pop stos dec jle addr16 stc sti into jno jle sarb mov stos lret or pop std lcall mov jle fdivrs pop data16 push fwait adc inc push mov jl les jle int inc cmp jns jle (bad) call and pop inc adc jl mov daa in and je (bad) pop mov xchg and pop inc bound popa jle fcomip push mov inc in (bad) int mov cmp ss (bad) outsl or test push fidivr jge cld jne jle cmp clc inc out xlat sti push adc imul out sbb sub adcl push test shll rolb and in mov jnp dec mov frstor out push dec adc mov (bad) cmp jle (bad) push mov out adc and test fnstsw loopne inc jle mov and mov xchg jp jbe dec mov hlt push mov jle fucom into pop mov pop out add gs lods jle daa aaa mov out jbe inc mov and inc out (bad) dec in pop test xor add leave cmp dec ja push inc push push in xor loopne aaa pop iret test (bad) adc test xlat jge call js push decb aas cmp cli cmp bound mov cs jle inc pop lds (bad) xchg inc (bad) imulb aaa push pop xchg jle loope aad and bound push dec popa jae arpl cmp loopne jp push mov je inc iret xchg inc fdivrl repz lds xchg pop xchg push dec jp xor pop pop andb pushf sti pushf jmp jle cld jecxz mov fimul xor ret arpl lcall jle das mov enter jge or je (bad) mov push mov ret into loopne jle nop or xchg jg mov pushf mov xlat jle push dec scas popf push jle (bad) es or mov sahf loope nop adc jl pop lret daa jle fidivrl mov cld inc das jb into mov loope mov (bad) loopne enter jle fsubr call mov mov jle loop cli test pop data16 loopne mov push imul and sbb jle ss repnz jle lahf mov and sbb scas adc sbb xchg jle mov lods mov mov int sbbb push xchg xor jo mov loop xor or xchg sti cmp movsl addr16 mov mov int cwtl dec pushf (bad) mov jle push pop pop push in push jle jae fidivr ret jle mov inc mov mov loope mov movsl ss pop int add push call xchg jp mov push (bad) mov jmp test push adc fildll jle movsb frstor fs jge and mov sub js mov movsl jle add push pop sbb cmp inc arpl sbb adc xor sub out mov jbe cwtl ja cmp in and jne pop sub cmp repnz imul pop sub sti jle mov cltd stos jle scas sbb aam sbb cli mov cmp enter decb dec mov lret fstpt ds cmp popa into mov sub out pop xchg xchg scas and shlb sbb dec jle add stc lcall xchg loop aam shll mov xlat fdivrp jle sub mov flds jge push roll jp,pt adcl movsl inc mov push add outsb rcr jle negb lcall testb test push jge cmp insb sbb adc (bad) loop cltd rorl dec lret movsl subb divps aas jle xor out imul dec mov jle dec xor adc add jge add jle lock inc mov in and insl fstpt jle dec inc jns pop add sahf pusha pop loope rorb xor daa xchg shrd out ds mov icebp lret mov xor aaa jle and in mov shl adcb jle insl sub push xchg jb outsl sarl adc iret out jecxz leave popa mov dec ret loopne and and stc jle sub fsubs add ljmp int cwtl jle sub mov aam shlb dec cwtl mov mov fnstcw dec lret jle xchg fiaddl lret sbb dec push and xchg in xchg (bad) push jle loopne jns sub jle js inc adc adc and adc jle (bad) jb pop or nop outsl fucomp pushf xor js insl pop dec fiaddl sub lahf jle or or jle or cli mov dec adc push add dec scas jl loope pusha mov jp inc xchg xor mov cmp and dec fmulp scas mov daa add xor pop cmp scas xor sar repz dec clc fs les in jge sub mov xchg inc mov lret ja mov jle pusha cli loop pop sub jb cwtl jp jle mov pop aad pop cld and mov dec repnz loopne fiaddl jle mov mov scas and scas popa mov xor xchg or fist add dec adc aaa push insb lahf repnz xchg jle and inc int3 sub out adc sbb mov jns or les xchg imulb cmp jno int fidivrl or leave sbb dec mov cli fs inc sahf (bad) jle cmpsl divl js or sbb and mov adc push (bad) (bad) dec inc in inc jmp (bad) mov or div pop loop fbld jle mov and jecxz std xchg out sbb mov jl jno in jle or sti sbb cltd repz jle int3 mov jae ds jge mov stc jle scas int mov (bad) sbb xchg ja mov int lds in mov das xlat xchg loope rcll mov adc dec jle jmp movsl and lods pushf jle jg fnstcw mov fmull sbb dec sub dec aaa inc adc cltd shr addr16 pop mov jg jle stos mov xor or pop xchg js push pop lds mov fldcw in std inc push xor mov jp push enter jle sbbl sbb inc repnz out imul aaa pop or call dec push test jp stos jle es adc or mov or pop cmpsl mov push adc insl xor jle mov lahf cs jo das add push mov jb cli xchg fucomi jle mov jecxz mov jno test addl pop adc inc jle movsb cmp push mov or jle xor sbbl js mul outsb cmp mov (bad) mov pop leave pop outsl sarl mov out loop push pop pop or repz or jle jecxz pop pusha test fs cld es push ja addr16 and sbb jle mulb or cmpsb ret out scas aaa inc pop pop js bound popa jle adc pop push jle mov stos pop ss imul fdivl xchg push xor ss aas sbb clc sub inc push xor sarb in loope cmp in jle mov icebp pushf push add das in out insb out gs cltd std dec adc mov jle mov repz pushf pop nop jle ret inc clc pop jns or adc adcb push ret pop jle icebp inc lret mov into ja mov mov mov das punpckldq xor or lcall mov stos fwait jl test outsl (bad) mov sbb jl fmuls sbb cmc inc mov es jle fadd (bad) adc andl out ret jle (bad) jae (bad) jmp outsb jle je push or imul mov add xorb daa sub ror jle nop (bad) out pop adc jne pusha xchg xchg push inc jle push mov and adc hlt cld fstl cmp or pop rorl jmp jle xor add sub xchg jle pop (bad) leave nop cmp outsl pop xchg dec cltd or js jle dec jbe xor dec mov or push test leave xchg cmp inc fdivrs cmp jbe (bad) aas mov xchg xor xchg frstor push sub jnp xchg jmp das fs out rcll mov adc pop mov cmp cmp lea inc pop iret jle pop mov mov dec fwait mov popa inc mov sarl xor adc jmp inc push adc lea cld popa xlat fldenv dec lock xchg dec jge shrb jle mov mov ss loopne push sub cmp cli mov ds jle je dec sbb lea jle add ss jle ficoml fisttp cmp ret or test data16 rcl sub jle push lods add iret popa sub adc ja outsl mov ds hlt mov orl (bad) test jle mov leave jle (bad) sbb jle in mov mov and sbb xchg (bad) sbb jno enter (bad) popa out pop jge pop jmp lahf lds clc pop scas shrb and add dec mov and fdivrp test jbe adc sub clc das push pop fstpt testl jle push ljmp movsb sbb mov jle test jmp scas push xor test inc aas jle pop add bnd rol aam insl stc int3 clc xchg dec and and das xor mov (bad) and adc pop aaa dec out loope jp jne lods (bad) cwtl negl das push xchg inc push aam lea jns push mov out xchg dec insb out inc adc sub mov inc stc mov cwtl xchg push push cmp jle in jl cmpsl mov lahf jle adc fisubr in cld cli adc push jle dec and jle fisub inc fadds out mov push sbb and jbe mov lret repz stos dec jle imul mov loopne enter mov addr16 push (bad) jp cmc mov xorl js jnp mov insl jge aad shr jle push fadds nop lahf loope cld outsl adc sub xor cmp and insb jo jge cmpsl andl pop add inc mov sahf call cwtl imul aam sub pop cmp out sub lahf sarl iret and sub lds nop push or jne int3 movq sbb adc cmp xchg imul add scas arpl scas movsl sbb xchg fisubl sub inc or sti xchg mov push or cld call push mov repz xchg jle cmp movb iret out nop scas cltd adc push mov xchg stos pop push sar pop jb scas nop mov iret jge add (bad) xchg cli inc mov jmp mov xchg fsts insb dec jbe jle pop in xorl test (bad) pop jmp in inc push mov (bad) out std shl xlat data16 jbe jl push pop jge bound (bad) xchg clc xchg pusha je lret scas out push mov jns ret mov ficom cmp jle scas (bad) rorl nop popa push ret jo imul push jmp fstpt jle test ds nop es das mov enter xchg ret sbb xor cwtl jp movsl repz mov xchg stos arpl fsubrs push sbb lret (bad) fimull out jo (bad) js fdivl mov jle push mov aaa jle xchg add in dec orl repz stos inc cli cmp jae cmp (bad) xchg jne lock add jle pop xor faddl lods jp ffreep movsb xor and outsb mov or sarl insb jecxz add jmp xor leave xchg fwait inc shlb jle je push add dec and adc fistpll sarl pop xchg push xchg (bad) loop testl adc xchg sbbl dec popa jmp jle lcall fdivp inc ret js xor mov int3 mov jne out rolb adc jle leave out gs xorb pop and pusha mov jle push cmpsl lds outsl add xchg xchg bound dec fidivr jle xchg (bad) gs insb repz add xchg je lret mov lea int push or jmp dec loop dec pop popl jle data16 push dec sbbl addb popa adc xlat sbb jle fldt dec push cmp push stos mov std int3 movsl sarb orl cmc (bad) jg jmp pop lock fldcw outsl cmpsb adc movsl scas loop addb sbb jno xchg inc test jle push loope sbb sub and sbb dec fstp test push ss lret lock loope cmp sarb push jle orl fisubl fnstsw fsubrl pop mov leave mov das mov mov dec (bad) aam test push jbe inc inc mov or mov je jle jecxz ljmp mov mov jl inc outsl es add sahf test sub lods in jle dec push repz mov dec sub insb xchg rcl (bad) test dec outsl adcl cltd inc jg (bad) mov mov lahf (bad) repnz mov ret cltd clc push stos jle fdivs scas cwtl scas repnz pop (bad) jle fcoms jmp lock cmp lret fnstcw dec jle jae cmpsb cmp lcall pop out std mov jle in sub xchg dec lret addl pop mov scas loop repnz dec xor idivb cmpsl or daa or push outsl das add xchg pop xchg mov sub push jle push mov jo arpl insb cmp xchg stos clc xchg cmp pop in popf xor jle scas add jns fidivr push iret or add xor mov fs daa out push sub xchg push jle divl push jle add lods mov rclb jne jle mov add fldcw pop jp sub xchg (bad) adc xor pop xchg or cmc dec pop movntps sub push test and std mov jecxz lods repnz mov pop jle lret add out mov push or and inc stos std mov loopne,pt (bad) and jle lea sbb jle xchg mov jle sub icebp je cmc aas scas xchg and sbb ds mov mov inc mov int3 cmp cmpsb out test clc dec xorl sahf scas xchg jle jp jne push test pop in and shlb push icebp jp pop xor mov imul jo sahf mov jle in sub inc pop push aam sbb dec cmp sbb mov jle in (bad) cld cmc push fnstenv jle and dec (bad) mov sarl imul cmpsl jbe popf imul jle xchg push mov jle add sub xchg out es sarb xchg push scas or fstpt clc stc call push jle cmc aam lods mov sbb xchg xchg or outsl sbb outsb xorl jns ret mov or cmp jl lock into push cld lahf xchg add inc jle xor jecxz xchg aam mov pop dec jle cltd push sahf fbstp add jmp prefetch fs jle clc jl arpl pop icebp (bad) scas bound test pop add (bad) ftst jle rdmsr (bad) inc nop dec jle and and js jle pcmpgtd out in lret push xchg pop adc lahf aam jle sbb push andb jnp sub push outsb pushl test and ljmp dec ss in adc test sbb std insl jle dec fcmovnbe jp xor push mov (bad) push jle push push out loope mov pop dec mov movsb sub pop push xchg push cmp lcall rcl movsb aam jle mov or dec push insb lret xchg outsb and jmp test dec int xchg xchg js rorl cmp lret sub bound dec or jle xchg xchg frstor test jle mov push sarb subl and push pop and jp and je mov test jg push mov rolb loopne movsl das insb inc mov jle push imul pop scas (bad) loop movsb mov std pusha movsl mov test mov roll xor jle (bad) xlat push add fistl outsl jae and ss jle dec jmp pusha insl adc push out mov movsl jle addr16 mov push xchg inc cmpb jle lock enter dec inc cmp jle movsb shlw dec fsubs sub sub lods or inc test sbb fs jle sbb in push pop scas rcl jle pop pop je mov insl jg fucomip jb mov mov rorl pop sbb cli mov xor lods xor or mov aad pop je stos lea (bad) jmp xchg pop mov jle ret repz lock mov or (bad) shrb xchg loopne (bad) int3 push scas xlat shlb cs out sbb pushf rolb (bad) jle push adc xchg jle push ret (bad) (bad) hlt jle cmp aaa dec jle cwtl pop jmp xchg push (bad) pop (bad) nop aam (bad) dec jo popa repnz int3 xchg ja jns aas les gs add dec pop xor shll pop es xchg (bad) mov cmp scas insl mov inc lods out push in fidivrl xchg sbb gs or lea test xor cmc mov mov jl aad mov dec js repz popf sbb shld pop cld jle (bad) mov mov push jle mov (bad) out sub mov (bad) sahf push push ret out dec add cmpb (bad) lods mov into outsb xchg jle or flds cwtl jle repnz push jae fist shll imul add loope std xchg rorl out js lds movsl insb xchg (bad) scas test mov sbb testb dec ret ja outsb xchg jle aaa and popa mov cmc pop dec fsubp lds jle loopne lret (bad) mov pop ret or cltd ret aas in jle sbb mov jle xchg (bad) adc pop and daa cmp inc sarl mov add in in fadds enter jecxz jle addr16 push pop stos jle mov aam add pusha js daa int3 jmp loope in hlt fist test add add dec (bad) mov (bad) (bad) mov adc jle outsb dec and pusha jle dec cs jle data16 jle or in lock aas mov dec cld fs xor into clc fwait jle jae in fcom add outsl pop icebp mov mov mov bound flds loop ds ljmp pop mov sub pusha bound sbb scas enter dec sub sar iret cmp ljmp or xchg mov sbb test outsb scas jle mov push out jo loop dec lretw jne,pt sbb adc in andl outsl jle or sbb gs mov sub push push jle cmp push ja arpl (bad) shrb or rclb (bad) jns push jl push stc and mov pusha sub cwtl fidivr jge gs lds jle ror (bad) mov sub sbb jmp sahf dec push lcall jle mov dec dec test movsb push std aad adc inc (bad) dec stos mov stc (bad) mov icebp jle mov jle xchg cmp stc in jle mov cmpsl pop int3 inc push jle xor or xchg xchg sahf fidivrl jae addr16 iret test loope imul jle jl popa in (bad) test push fldt push sub and jle jo loop pusha pop sarl out cld lret mov cltd xchg jle sbb cs movsb pop les mov mov cmc mov or decl xor cmp out mov mov mov out sti cmp push or addr16 pop mov test add cld loopne lcall or idivb xchg and jp fcom mov cmpsl insb xor or repnz ss insb push cltd xchg mov push out lds icebp pop xchg sti imul gs and xor and div cs iret mov je (bad) in insl jle data16 inc loop xor and ret cmp cmp push sahf int3 jg adcl scas cwtl cmp jmp dec pop inc in pop push mov jle lea mov xchg stos mov lock inc add shll cwtl mov adc xlat lea ret mov data16 pop push mov hlt out arpl mov cmpl dec ljmp sbb cwtl dec scas (bad) fildl (bad) pop mov and xor mov enter in or movsb movsl mov pusha not ret mov in pop clc xor add cwtl and mov xchg imul sub je das xchg call xchg pop jle pusha mov notl jle mov or popa sahf pop jle lds jg gs xor leave lret test iret mov lret sbb jp outsb jle or loop adc sbb sti mov data16 xchg sarl imul inc jle shlb dec dec les mov int3 jecxz,pt sbbl lds cmp push push jmp idiv daa sahf push repz push lahf (bad) mov jns mov pop nop shlb mov ss (bad) sub lahf jl test into scas jle lock dec jmp iret (bad) jle enter stos les mov cld sarl mov and xchg inc jle addr16 insb mov les lret xchg in je mov push add sti fisttp cmp mov es sub outsb jns xchg pop inc mov out push fldl xchg mov icebp mov jecxz std js repz fdivrs je shrl es mov jns pop sbb out test mov cmc and cmp cmp jbe movsb sbb xchg lret and pushf in cmp push sbb idivb jge fimul jle mov les pop aad mov movsl cmp cld push pop mov sti sbb push mov add jle cmpsb (bad) icebp or lcall (bad) repnz (bad) pop inc arpl jle or dec (bad) shlb movsb icebp rcrl mov dec xchg int nop and stos jle lret aad js (bad) int lahf (bad) jp xor ljmp flds or fist in insb pop push es jae lret cltd pop out stos call pop xchg addr16 and ret lahf or jle cmp sbb inc rorl (bad) push sub jnp mov fwait cmpsl in jle mov into mov mov xor test jg out jmp stc push notl js fstpt lds inc mov lds mov dec pop xchg mov mov jmp (bad) mov mov popf out fbld jnp rclb jle mov fistp outsb mov jge cmp or in in stos mov cs push movsb add jle pop xlat add jle mov mov in pop jle sbb xchg insb push sbbb jle xchg mov jle lods or xchg adc jle push mov jno push jge jnp dec or rcrb scas inc icebp pop pop mov xchg loope cld in (bad) (bad) fs sbb stos adc add pushf mov aam outsl sti orl add cmpsl jle push cmp ds imul bound add mov je gs jle mov jecxz push notl jle sub cmpb (bad) ljmp jmp mov jle xor sbb dec out sahf ja push jnp js dec out xchg pop fldenv cmc movl lahf push push lcall xchg jo and sub jnp pop lea pcmpgtw jno inc mov adc sbbb add fstps jle xchg mov enter les add mov js pusha pop xchg dec sub std je jle pop dec inc push sbb outsb icebp fidivl xor jle mov (bad) (bad) bound jle mov mov push jle loop dec dec mov pusha adcl jle jo mov jnp mov mov pushf jle sbb stos push pop mov jl sahf popa jnp cmc and ret insb lcall inc lahf inc (bad) xlat pop push in sarl push mov dec lds mov ds xor mov ret sbb adc outsl jae xlat push clc dec adc xchg cmp sbb clc pop and int3 mov out hlt dec inc mov fwait mov pop orl and int3 lods shlb les adc stc sarb loope out repnz push xchg and mov repz and leave jle mov mov jle jl cmp data16 fcmovb mov rol clc pushf push sti jle loopne mov jle mov push fmull jle,pt add xchg jle pop (bad) mov jle rclb cmp ljmp pop mov jo or jb push test ret jle jecxz jbe dec out jle (bad) pop and movsl fucomip sbb cmp rcr jge or xor pop aas dec jns inc mulb imulb xchg repnz lahf cmp and inc cwtl ja cli in sbb jle outsl mov jle,pn in shr xchg push ljmp mov sbb pushf or xchg lret mov test js imul pop mov movd jb pop frstor sbb pop daa sub add arpl or sbb cmpsb out das sahf inc scas (bad) lea fisttpll jecxz pop cmpsb ljmpw mov sahf andl outsl push mov jno and cli jp cmc jle jmp (bad) in out dec jle and (bad) (bad) mov jle pop adc adc popa jo cld sbb sbbl dec mov cli out and sbb xor jle or je aad jle enter pop sbb inc dec inc ds je inc (bad) in jnp (bad) out cmp rcrb xchg xorb movsb jle loope xchg insl sub lods das jg ficom ret inc add pop sbb jae test (bad) cmp add test adc pusha enter orl out push popa xlat mov lds xchg scas lret test rcr movsb scas enter in bound push push scas scas sahf (bad) jmp push fisubrl stos xor mov cld test cmp jle xchg and into movsb cs pop inc push xchg adc xchg repz xchg movsl outsb vmread fwait jle mov loopne cmp cmpsl jle ljmp jle (bad) repz repnz jle lahf inc rcrb jle pop sti mov and repz test adc je mov rolb sbb cmp push xchg pop inc jle push repnz dec mov xchg fnstsw insl (bad) sbb add daa stc adc arpl andl inc jae cs test adc mov jle test sbb jle imul cpuid fsts popf xchg jle adc sbb insb ljmp in mov dec popf add lods xor jle push addr16 jmp fwait stc cmp pop inc incl or xchg popa shll (bad) mov and lret leave pop lods mov mov and sbb cmpl fsubrl pop ret push les daa jle lret nop movsl divl popf imul js mov data16 mov mov int cmp and and sbb (bad) dec jle push and cmc jle lods pushf fisubrl cld scas jae and xchg (bad) jle test cltd nop aam fadds inc mov mov (bad) (bad) fbstp inc jnp aad jle mov fsubs out cmpsl fistpl cld mov fdivrl xor mov fidivr imul push jle frstor push mov mov xchg cmpsb repnz lea (bad) pop popa jle ss xchg dec xor jl nop loope enter sub push push (bad) mov mov lahf or push mov repnz fisubl in adc xchg push dec adc jle repnz dec mov and stos jo add xor (bad) pop push jle into pop shll lea xchg jle push or imul cmpsl shll jle enter fdivl mov mov lret cmp imul mov cmp lret ds stos jle pop pop int pop call enter fmuls mov adc jle in xchg fdivrp std add js add or sbb ja test or inc ds mov fadds jecxz inc stc sub mov add js lcall xchg fs ret jle int3 aam popf cmpsb stos and mov jns test sahf jle xlat cld ljmp add stc pusha xchg lahf push dec jle mov xchg outsl ret push sub inc test xor movsl jmp cli push adc ficompl test lods mov hlt jle mov out pop ret lret add xchg hlt ret xorl lods adc mov pusha (bad) jae cwtl xchg jle (bad) push push je and out imul loop test popa insb shr push outsl popl or adc cmp add mov jp pop mov (bad) sahf sbb int3 movsb test das js out xchg mov in enter and jmp inc pop mov pop mov cmp in push outsb shr xchg bnd gs jl fdivrs mov das jg push flds cmp leave sbb jle sbb inc (bad) mov outsb imul lret lahf mov jle in push pop aam les mov and subb sbb jle cltd pop movsl test rcl jle push insb sub jle ret or pusha out bound xchg in lods mov pop aam inc pop stc inc add mov sbb push jbe and jle push inc xchg movsl ret jle xor xchg dec or push ds add sbb cmp mov sarb data16 cmpsl cmp jle aaa loopne push push movsb inc cmc mov adc xorl in fidivr cmc cs andb mov (bad) out ret jle jno lret xchg mov arpl cmp jnp les jle jno test fwait and out sti loopne xchg ljmp inc (bad) outsl imul mov dec nop scas dec fisttp pop aaa fs jnp cmpsb notl cld jle cmp mov rcr mov fisttpl test jle add (bad) pop mov insb pop sub and outsl popf mov sbb stos adc mov test mov sarl mov push out push inc shl sub inc jge leave inc fidivrl iret mov and mov cli in sbb and (bad) (bad) imul pop cwtl daa sbb loopne mov jmp dec out push adc shll aad jle jmp dec rcll jle cmpsl mov pusha pop addr16 xchg inc cltd ret orl (bad) jb jge dec out pusha inc add mov inc pop ficompl adc ret xchg sti xchg add jge and in gs int3 aad push mov push stos jle dec lret movsb imul xor bound imull mov jle mov push pop inc (bad) push out xchg fistp jle stos insb xchg out in outsl (bad) xchg sahf jp mov into push pop (bad) xlat (bad) sbb out and or js aam ret jle adc fs and push xchg aad fisttpll push mov pop xchg push xchg cld mov int3 mov or and hlt xchg in jle sub pushf pop jle das dec test push aam jle mov call jle enter push insb jns add cwtl add xchg sub hlt push push xor ss mov sub (bad) jle nop xchg lcall dec xchg fcoms pusha sub jle repnz inc scas mov adc xlat popf dec add nop jno xor stos mov jle ljmp scas pop sbb cli int3 cwtl outsb jle lods sub xchg inc scas jl nop jle addr16 fidiv dec ds clc jp out xchg push jle dec insb pop mov loope insb add ret repz out mov jno in jle mov mov mov mov scas jg pop add sbb je cmp test divl jle (bad) jne cli pop mov push xchg (bad) iret mov stc jnp lahf data16 jle lods dec dec xchg xchg jle mov adc jle roll jle in cli mov add cwtl or fbstp sbb xor mov cmp bound push adc into shr pop or sbb (bad) pop je mov rcl fs jo xchg fcompl (bad) lahf mov sarl ret (bad) (bad) stc sbb mov inc pop inc roll hlt andb xor out pop push rorb jg cmp idivb hlt (bad) (bad) stos insl fs jle imul dec bndstx mov sub push (bad) jle loop fstpt mov adc push cmp and lds out inc dec popf fbld xor xchg mov pop inc ficomp sbb leave mov scas fcoms cmpsl lds cmp lahf jle dec ds lock outsl jle out pop pop jne sub mov ds fmuls (bad) mov inc jmp cmp mov fistpll xchg xor addr16 add xlat stos push sub add out movsb lock mov inc into out mov cmp push inc jle cmpb push rcl ret jns into bound xchg test dec jle inc dec gs jnp cmpsb jle scas pop iret xchg (bad) negb sahf packsswb jno sub jle gs icebp mov (bad) xlat mov rcrb sahf pop scas cs popf mov fdivrs in lods mov and rcrl dec cmp push (bad) lods insb (bad) jle loop fnstcw add mov push jle test insl jle movsb and loopne jo jle sub push dec jle jno (bad) inc mov and push and out cltd pop xlat aas cwtl (bad) hlt insl imul mov add je mov mov jle dec mov sub pop sbb enter mov push cmp jp pop jle mov jae jecxz pusha jle or sarl inc loopne jle cmpsb das int3 nop (bad) xrelease mov sub out mov sbb ss fadd cltd jge jmp pop xchg rolb lcall out negb loopne cmp dec rcr sbbl xor ja sbb jle fldcw test mov (bad) sub cli jle jl lock jnp aaa frstor lret and jle aad inc push dec mov xchg out adcb repz out out jecxz mov and mov (bad) xor call mov inc xchg sti ss ljmp fwait mov pop pop insl xchg add mov sub push jle cld jbe xchg data16 jle mov mov pop jl pop xchg data16 das jle jb sub mov pop andl iret lcall xchg jle mov jne push sti jle pop or jae ljmp lock fildl loope mov cmp imul sbb cmp xchg mov adc push out sub mov rcrb sbb xchg jp mov cmpl push dec mov nop fisubl inc rcrb jle insb sbb outsl lds add cld jle cwtl mov pop mov add cmp fwait aad jg stos cmp mov jecxz arpl jle sbb add aad jp dec jbe in dec paddq push adc aad ljmp pop jle ds adc pop loop jns jle scas stos in or bound jle dec cwtl loop xlat enter sub xchg imul (bad) pop push (bad) repz int jle scas dec lock mov rolb push aas jle cmp ss jl hlt jmp sarb dec add cli inc mov popa fidivrl pop scas call or cmpsl inc mov jle or loopne sbb (bad) push xor pop jae decl orb sbb cld std mov xchg lods enter add repnz xchg icebp pushf test cmpl mov ds in fs xchg sbb push cmc pop jle xor shrl jge (bad) int movsb mov loopw lds xorb outsb sbb rorl fimul repz xchg xchg mov popf jle data16 leave and push mov xchg mov insb push or jmp leave (bad) in les sub sub mov xchg mov out mov ljmp sub pop aas insl pop pop jle or dec in jecxz jle xchg push fs popf sub pop cli mov test stos outsl int jb dec bnd xchg xor and push jle subl out icebp lea jl ret (bad) sub loop and dec addr16 rcrb imul das inc dec inc call orb in jge in and jae movsb insb push and push (bad) jmp cmpl test daa xor adc push mov mov inc aad and jle rorb jge or lods scas xchg enter popa in jle ss into xchg (bad) jo out cmp jl cmpsb add test (bad) ret xchg xchg inc popf movsl dec or outsb sub inc sbb inc jo xor jle ljmp xor leave icebp jle jb mov sub jle xchg pop mov jle jnp mov push lods scas mov fdivrs cmpsl jnp loope jle cmp (bad) xor jae add ja daa pop sub cmpl rorl pop cmp test inc test push movsb dec lahf int3 sbb mov out inc lcall loope inc cmp xor clc fistl and (bad) xlat das lock sbb jns push nop mov fldenv jle iret add je xchg jle push xchg ficomp sub pop dec imul sahf push in outsb into add stos jne lea out xchg pop (bad) and faddl sub outsl std inc xor mov cli cmp cmp sub pop imul jge mov cwtl jmp sahf cmp adc xchg mov icebp and ds hlt aas inc jno jle jmp cmp out xchg inc dec addr16 mov dec (bad) (bad) je lods xchg mov cmp xchg sub inc sub scas aam mov rcll mov sub sub lock inc jp aad jle mov cmc jbe inc aaa jle lods add add lcall lods lods or clc (bad) xor in sub jle mov inc pop jle icebp leave or xchg inc or inc lods fistpll xor sbb jle test cmc clc mov add out push push ret sahf jns sar ja sub lret xor adc cmp es data16 jle xchg jnp or sbb dec xor imul push sub xchg cmc jb test jle sub test por jmp or and scas mov pop mov sti jno jle push sub mov lods jne test outsl inc jle inc cmc cmp sub shr mov sub out pop test or jge js cli mov jle and aaa test xchg es jle fild ret mov mov outsl (bad) daa shl hlt popf inc in add mov pusha jle inc out sub mov mov ja inc gs push js xor adc dec pop cli mov push out jae xchg jnp sbb hlt dec xor and scas pop add js dec inc jle xor jge and xchg sbb and add ds mov into fdivrl pop or jmp push in into pop push repz lock dec xchg jnp jp pop fildl jmp loop shrb cmpsb sub mov dec rorb mov les or jge sub push adc jb out or inc push xchg mov adc loopne addb (bad) mov sbb inc (bad) lcall jle and stos jle ja pop aad ret mov sbb jle mov xchg sub jno outsl or mov inc mov mov ret fcoms insb shr lea iret jo (bad) or mov xor pop inc rclb cmp jle lcall bound in xlat push int jnp js fsts subb adc test fdivrl popa scas (bad) jb stos in pop jle add inc jle (bad) imul shrl and pop jae jl lahf jge out mov jns scas test mov into and insb js push jle test jle jbe jne mov mov jge cmpsb mov sub sbb outsl and fcmovnbe jns jp out clc stc jno (bad) jle mov mov push jnp jo jne jle inc outsb mov clc mov jge mov add mov mov jge dec out imul xchg push add cmpsb dec outsb fildl mov cmc jp xor jle mov cltd test repnz ljmp (bad) fsubl call jle xchg stos xchg pusha movsl clc cmpl inc nop push cmp aad xchg jbe iret xor (bad) xlat sub mov mov insl int ret lock xchg mov cmp jl (bad) push add dec cs jmp xchg jle (bad) pop ret xor (bad) scas jge pop imul sub jne (bad) fwait inc cmc and bnd mov inc pop icebp stc scas sahf jns push mov jle aas out outsl mov cmp (bad) dec test xor lahf mov out jle hlt push xor jne lahf add nop jns mov sub cmp xchg dec stc add jle cmp push ja jp cmp mov fdivl lea mov stos mov cmc cmp cmova inc insl push jle (bad) mov hlt roll xchg enter ja icebp out js clc pop mov mov xlat cmpl or xchg push fcmovu add arpl mov repz pop repz ret in int ret mov jnp mov push jae insb adc inc jl scas inc bound cmpsl xchg jp dec inc out popf jle decb sbb mov ljmp fstpt jle loop inc out cli and jle mov jb jle ret icebp ret lret mov xor cmp sub jbe je outsl out imul push sub insl push imul push lret adc inc xor add cmp cmpl mov (bad) mov pop pop mov cmpsl sti cmp jle xor (bad) pushf jle push jns int3 loope stc scas les into inc add sti fwait jle jecxz and adc jle adc into in mov mov and out loop lds push std arpl cmp xchg jle lods or shrb shrl es mov sub rolb jle lret movsl div test cmpl adc outsb dec inc movsb cmp inc mov jmp imul mov mov xchg sub and push mov jle mov gs mov xor call mov sbb jl inc out dec lock or push sbb and dec jo and mov mov out mov int sti or xchg iret sbbb sahf and mov popf xchg jge std out in or jnp js xor in mov ret and jns inc adc mov hlt dec repnz and or add cmp (bad) aaa mov mov cmp push jle xor loopne jle in mov test cmpsl (bad) stos push xchg mov push leave mov cmpsb cmp loop or test adc (bad) dec jle pop mov sbb out add in or inc jle in inc inc dec call dec stos jp mov xor jle out mov mov jle ret and jb jle jp int3 mov mov mov pop sti jle out mov test jb sub cmc (bad) sub out xchg mov inc mov (bad) jle outsl add push mov ds pop or jle xchg push scas mov mov mov mov jmp orl repz stc loopne lret cltd inc out mov xchg add xchg mov or fisub sub pop jle xor std jle inc imul sbb sub jae movsb (bad) cwtl jle or mov cmc add ljmp insb mov lock test imul jmp out ficompl (bad) mov insb mov scas mov mov fcoms dec cmp rcrb mov (bad) jbe fnstcw adcl pop out cmp cmc enter lret jecxz,pt stc cmpsb (bad) jle xchg in je data16 jle push cwtl ret loope movsl fistpll mov push xor popf lds fpatan in jle add (bad) push xchg add pop jle sbb sbb fs neg and and jle rcrb sbb dec jbe scas jle add outsb push jle dec and or out jle lods nop icebp xchg mov aaa das (bad) loopne dec in inc add jle cmpsl fnstenv gs mov psllq mov xor jg sahf jns scas imul shrl push ljmp dec ja jle add loope xchg in jg jno fist pop scas ret movsl jle out test mov add mov jle mov popa data16 jns (bad) rep jge out mov mov xchg (bad) fstps outsl mov loop jl dec inc push jle cmp mov loop lcall (bad) mov adc push test popf scas cs out insb clc dec mov jne,pt jle aam mov mov in fisttpl cld inc add push lret dec xor or lea mov jg fsubs insb js out ss adc jle and jle pop push inc mov jae mov orl jp rorb or ja jmp lds cmp mov jle test and daa cmpl repnz xchg pop or mov jns jle jb test (bad) xor xchg xor hlt inc faddp fstp out add pushf test ja test pop push (bad) adc add and pop and repz gs sbb cld cmp ret inc leave lcall dec sub shrl jbe orl loopne out icebp adc jl jb push mov stc cmpsl stc mov nop idivl popf addl jl (bad) movsb les out clc xchg (bad) out mov pusha cld pushf mov adc dec sub and ljmp cmpsb mov mov add mov and out mov (bad) rorb mov je mov xchg (bad) dec ja outsl cmp push lret dec inc mov into pop xor cmpsl mov jns scas push jle inc popf sub jle,pt mov jg or js fidivl jle out leave es jno pushf jge sub cmp sub sar fiaddl out jle jb icebp dec mov pushf cmp cmc nop fsubr scas cs es cmp out notl jle adc cli loopne lahf xchg push jle xor cmpsb aas out jle jge xchg insb jmp mov xor daa jle int3 clc xor sahf cmp jle jns pop inc jge test jp cli inc shrl jle daa or jne pop les ja inc jns (bad) jle jo sub (bad) (bad) fsts stos xchg idivb popf lret gs mov test andb test mov or dec scas iret sub cs sbb add jle pop sub fcmovbe dec pop jle daa shrb out pop push add test pushf add jle leave cmp cmp pusha mov jecxz xchg push add lea hlt xlat jp maxps aad adc sbb stos xchg loopne rorl xor pop (bad) xor pop notl repnz inc mov ja (bad) pushf std lcall cwtl add or iret pop mov pushf add sbb mov scas xchg jle ret ret jne (bad) out in sbb cmp inc cmpsl sub dec push push or (bad) jp push add xlat movsb xchg sbb mov add les jle outsb or jge sbbb xlat mov xor push push and jle lods xchg mov jle jecxz adc mov loope pop je das test es jle jbe insl jle ss mov jge lret mov icebp add call js cmpsb jle insb inc orl das pop cmpsl mov out cmp mov mov in pop mov scas shll rol test and pushf ds push fld push mov roll outsb imul imul adc inc into mov push in or movsb mov (bad) push mov mov xchg sbb je jle jns stos shrb jecxz xor sub mov cmc xlat mov sub mov add (bad) mov test cmpsl cmpsb push mov jge xchg dec jl shr out fidivrl mov call cmpl pop mov out lret cs mov xor push ljmp mov dec jb stc jle and lret repz int3 mov mov scas std pop xchg imul out mov or aam cvtpi2ps jle fimull cmpb or jnp mov pop jle inc mov push mov arpl inc pop jle (bad) mov jb mov lods jle mov aaa pop jle fldl test cwtl cmp sub scas xchg jle loop dec insl cmp push (bad) sbb fstpt pop jns xor fsubl addr16 out xchg jle lods sub ficom jmp (bad) popf out aas jle lds (bad) jle inc es movsb cmp xchg dec jae sub out jle push push je mov xor shrb push jle movsb inc mov jle or jle outsl arpl jge sub xor jle ret jmp stos iret imul sbb cmc movd lret add in xchg xlat mov push push jle das into sbb dec in sbb mov cltd popf jnp mov iret pop je mov aad pop pop mov cmc xchg sub pop cmp insl movb mov xchg test pop adc ret sbb jle sti in and fnstenv out fild (bad) mov hlt adc jle mov push sub das cwtl popf lahf cmp jle sbb mov cli ficom ret pop in std sbb xchg jne sahf mov mov fwait jmp mov hlt outsl mov imul subb jae jle dec sub xor and push outsl adc pop add pop xor mov stos dec inc popa cmp jmp dec imul jmp or jl jae and sbb dec dec pop push imul mov (bad) jecxz ret sub shr mov xchg mov shll push arpl sbb fstpt in mov jo lcall adc (bad) mov jnp fistp push and mov pop ret stos into mov jl das xchg jnp sbb lahf cmpl mov sbb push lock push pop xchg outsl and push sbb (bad) sbb bound jle mov dec decb push iret subl je jle mov ljmp test cmp push mov mov xlat outsb stc mov (bad) push cmp imul enter dec cmpsl dec hlt lret inc jle fcoms xchg jle push in and dec and fistl or cmp and xor jl xor les jno out repz aas lods sti scas sbb xchg pop hlt jle cmp (bad) movsl ret xor mov cmp mov dec mov jns dec scas xor xchg (bad) jmp jle xchg repz cmp (bad) jle out dec inc fidivrl mov add sarl nop loope loop push lods jle jns add jle mov push cmc lock (bad) and lahf mov (bad) lods jle jmp fwait jp arpl sbb and jle cmp les inc xchg lock jle int (bad) and jecxz bound push inc sarb (bad) call pop mov mov (bad) mov and rcrb cmpsb scas mov roll mov mov cmp pop adc scas fldcw pop jle and (bad) and cmp sbb dec in and inc enter mov mov ds mov repz xchg sub loope push pop lds outsb xchg mov popf lea (bad) or (bad) fcompl fstpl lock xor xchg pop jbe (bad) jp rcrl pop (bad) das lods iret orb adc sarl sub dec xor mov xor xchg in iret inc push fnstsw pusha test leave loopne popf fstpl pushf jl hlt jp bnd stos dec aaa les xchg jle adc in dec call pop xchg jmp mov mov ret mov popa jp push inc mov notl test mov mov sahf mov xor jle (bad) repnz mov insl aad push ficomp xchg jo and add sti xchg jle std out mov cmp inc mov mov clc sub (bad) cmp pop mov xor scas mov lods stc dec out in (bad) jle je data16 jp mov and std inc fimull stos jle les and xlat scas mov push jmp bound pop jle mov hlt push and je jle mov ss out inc out cs mov jnp icebp ret cld ret push lret je aas cltd inc repnz loope jle outsl mov mov and enter int add jle sarb add lods test jo insl jle pop nop jp in sub mov popa jle enter jle add test add outsl scas subb jle jns aad jle cli xor push inc pop add xor into push sub ja jle cmp fdiv fidiv xchg repnz aas insl dec sub arpl mov push (bad) xor outsl cmp jl montmul cmpsb xchg mov mov sti (bad) jbe jmp xor mov pop pop hlt dec xchg dec jle call sub cmp stc outsb or xchg sub out cli pusha and sarb sub pop mov test ss hlt gs jmp out fdivrl jle in jge test mov scas xchg inc xchg jo (bad) jle mov (bad) fldln2 in sbb stos lret ds jle imul das mov out lock std js xchg pop scas jle jmp incb shll xor jle adc dec popa or add xchg xchg (bad) xchg out mov fiaddl (bad) idivl xor popf jle sbb push inc pop scas iret sub sti dec out dec jns jle (bad) pushf pause jo ret push cwtl jle mov (bad) mov push push jno xchg mov jns sar ss dec adc xchg mov sub adc cmp addl push ss lods push push jle mov std inc jle pop jg (bad) insb add out jle inc in sbb stc das cmp mov (bad) xor sub rorl in xchg mov push adc out es sub pop (bad) out mov xchg lea jle xchg dec push (bad) xor sbb repnz loope pop mov icebp xchg push cmp (bad) cltd clc jle mov mov dec icebp push jb add in mov ljmp shrl dec mov push cmp mov hlt dec test stc bound ja or (bad) dec sub jp push pop cmp dec mov out mov jno orb mov pop test fistpll sahf jle pop inc cmpsb sbb out iret jle dec aas stos (bad) bound sub insb roll jp adc push xchg sub jle imul pop lret xchg arpl pop js nop mov inc pop (bad) pusha jle jo lock and jle pushf jbe xor pop mov add lea inc test mov jg add mov jns stos fildll dec in mov pop addl (bad) mov arpl dec jmp or (bad) jle enter fadd insl cmp adc xchg push imul pop int sbb xchg xor hlt aad bound cmp scas inc lods push and cmpsb mov jns add inc mov pop adc sbb xor jmp jb call fsubl inc mov icebp dec jle lds dec in jle loopne loop (bad) sub testb jne pop ja jle sti fwait mov pop loopne jle shll add push dec xor jle dec xor hlt lret jle push lcall es jo je lods push outsl (bad) int3 add js rolb fstl cli mov inc out push mov xor adc mov idivb insb mov adc (bad) cli bound out cmp or dec jl pop pushf cmc jle mov dec bound testb rcrb pushf jle pop jg mov into mov xor faddl movsl pop add mov adc in movsb int3 aaa push sub les cmc inc mov data16 imul sbb (bad) sub xlat jb ror jle fstpl xchg scas xor aad or fwait js jle push mov cmpsb add xchg jmp cmp cli leave jle les or xor xchg cmp cmpsl jle call mov jle xchg xchg subb lea push push insb imulb dec mov jge inc xor pop push and sti stos jle cmc inc dec cmp fmuls inc pushf add inc mov lock rcrl fcomps test jb sahf jg or outsl add stos inc xchg movd sub mov into push pop lret jp lds xor ss jg and pop or push clc ja adc ficom idivb dec out pop mov mov mov mov jnp test aad xlat out loope cmp dec xchg mov sub js inc rcrl (bad) dec insl not imul js push jns jno out out repz bound xchg cmp add jle lret jge adc lcall vmovd aam mov add cmp les xchg jle fisttpll loop sub sbb stos xchg scas push cmpsl add jle push andb add and mov fdivrp ret and (bad) push jle ja out (bad) (bad) sub std mov fsts divb inc xchg sbbb jecxz jle sub pushf sub cmp sbb jle xor rcl repz lds lock jle pushf ret jge jle and pop sub das aas jp lock scas jge cltd inc fstl shrl in add scas xchg fdivrs jle jl mov vmovq icebp das push cwtl mov in movsb sub cmc orb adc fild mov mov sbb out into (bad) or loope xchg push mov xchg jns mov mov cwtl mov stos mov (bad) aam jle ret (bad) or jle cmp adc pop aam mov callw add (bad) jle daa mov sub push repz pop lret mov scas push jno cli es jle pop les jle mov sbb pop dec push push pop ficompl setno mov jns jns sbb xchg sbb fdivl or cmpsl pop inc add repz mov outsl cs sub pop fistpll jne sahf cmp adc jp int adc in loopne aas repnz jl add fbstp jle sub lret lret scas (bad) jmp cmc inc lcall and insl cli ss xchg notl sub cmp mov mov mov and add adc sub fnstcw movsl lods out insb mov ds js imul div jae cmp inc add sbb scas sbb or sbb jle mov inc js pop fs jno ds xchg inc jne dec xor sub scas out test sbb call das data16 sub mov and push notl jle outsb cmc (bad) adc xchg out je (bad) lcall lret jne sub sub loop and das iret insl or test push jle jmp xchg mov icebp outsl cmc popf xlat test push test mov daa jmp mov mov jne adc jecxz ficom jmp lret inc int3 xor jle jg sub cmpsl xchg lcall cmp in pop xor inc popf jb mov jns pop inc test std adc xchg cmpsl cli mov outsb jle pop pop inc xor sub sbb xor or mov xor inc les repnz jns lock andb jle imul jle andl loopne sub push cmp jle ret jo xchg (bad) imul push repz adc push jl sub fldt ds jmp jg cld jmp cltd mov imul ja test inc das je cmpsb jmp in (bad) mov insb fildl xchg jle ds mov call xchg out rdtsc in and sbbb jle push mov fisubl nop stc xchg imul jle roll jle mov cmpsb xor mov jle push mov xor ret (bad) stc rcr jp aaa push cwtl push cld jle fstps add jle (bad) dec fwait test cmp lahf scas popa scas xor pushf test pop jp je xchg fdivrl fwait cmpl adc jnp test sahf mov test loope scas adcl sbb inc (bad) lds pop sbbl aaa push (bad) jle jg stc adc or aas mov jle movsl mov jp ljmp add int mov jns jle jbe mov cmpsb loopne das inc xchg pop jno fucomp ja inc mov mov (bad) (bad) push pop inc sbb mov je inc aaa in mov pop outsb cmpsb jle mov xchg jl cld call js add jle and xchg jle insl adc push aaa ficomp incb cmc inc leave jle mov mov push push adc (bad) mov or dec dec jle enter int dec jle fcmovb pop daa (bad) jp inc in test das inc push out mov out (bad) notb cli adc jae jle or test js cmp je xchg in pop dec pop inc imulb sub xchg std scas test jb jle bound int ss mov sbb mov sahf cmpsb xor jp inc in xor mov or movsb push aas cmp aad push xor jle pusha leave lock fdivp (bad) sub imul scas scas and adc push jle cmc mov and mov pop sub xchg mov outsl (bad) nop push rcrb lock outsb xchg mov jp mov std mov cmp jle mov xchg jnp aas mov mov daa adcb dec xchg lods popa mov jle cmpsb cmp insb mov jle insl pop inc imul mov jne adc mov jnp stos mov (bad) mov mov jne mov push testb sbb xor paddsb lahf jnp jle sbbl into and jge push xchg mov add sahf aam jo xchg sbb mov stos test jbe push call pop jp mov adcb mov bnd test jg daa adc jmp sub or test dec xchg sub mov stc jle cltd sub clc stos std pop test mov jle inc loop imul cmp mov adc dec jle cltd sub fistl push sbb cs jl add sub lea jle mov fidivrl xchg cmp dec insb and and jle xor cmp add imul clc addr16 pop cmp and pop jl (bad) jns jb jbe jp or push push mov sti mov cmpsb lret lds xor jbe nop pop gs lahf sbb fbld sub xchg mov adc scas xchg data16 ficompl jnp mov jge or push aas test or mov (bad) dec sti cltd mov xchg xor sub nop jle push inc jno pop mov sti dec mov xchg xlat jnp outsl insb push fdivr (bad) mov push xor rolb cs pop jle (bad) scas (bad) mov test scas test cld push idivl and cmp jle adc out fildll cmpl or jle repz (bad) pop stos test pop add cmc daa sub cld scas leave hlt jns out and out sti (bad) dec mov push jle inc mov push (bad) jb (bad) adcb mov jg inc lcall inc xor aad xchg lahf cmpb shrl xchg add push jle ljmp jle ljmp test push cmc movsb cmp jle clc sbb stos dec out adc shr push daa mov cmp adc jl fs xor pop addb dec jge pop push xor ljmp outsl clc jle lea in xor mov pop mov ss mov mov jle inc int3 lahf test sub in sub pop jle cmpl and imul sahf incl pop cmp jno xchg pop mov inc jle xor idivb mov addr16 sub dec stos rcr ja push mov sub push js jae cli push imul and cmp mov insl jns repnz js test push jle xor and cmp push sti or inc outsl je das pop pop in sahf mov push jp stc jnp and mov mov mov cmp les cmc inc jns jb hlt jle lock jnp mov out outsb and loop xor jle add lods cli jle lcall jle pop (bad) sub mov scas sbb ds ljmp push fldenv sub inc jle mov clc loopne cmpsl test (bad) cltd imul test jg cmp inc lods jle push jb dec imul xchg out xchg jbe sahf into stos mov inc adc jo,pt je pushf jle pop mov mov adc pop mov fidivr out jb sub xchg out cmp pop jge fildll scas mov inc push js cmp test (bad) fnstcw sti sub jnp sub push sub aas jnp cmpsb mov dec ffreep pushf cwtl lods xchg js cmp out repnz rolb jle (bad) sub add cmp mov xchg andl jnp jecxz mov stos jle imul mov cmp scas inc jp imul mov mov shlb sub or mov stos shll mov lret mov dec lock or xchg dec xor sarl mov cmpsb push clc fcomip mov pop incb xchg test jno sbb jmp out (bad) in xchg jmp scas add testl jo jae or lds out jle popa and sub dec inc jle enter fsts stos jle aaa fldl les jle ss insl cmp jle dec fs jno scas fucomi call xchg or push cmp repnz stos fiadd les adc es cltd mov pop inc xchg push jge icebp push lock fnop outsl popf add mov (bad) sbb jle jecxz iret jp push mov pop ret cmp jle cmp mov int3 arpl leave add repz loope pushl cmp test pushf stc push xor jo xor lods aad jle mov jmp movsl aas test pop (bad) pop xchg push and fmul addb and add mov cltd dec xchg xor flds outsl or xchg loopne out flds or push adc xor inc cmpsb in push add aas pushf jle ljmp out leave fistl dec jp and insl jle popf add adc jecxz ret into sub xchg jne xor mov cltd fnop jle cmp cmc je inc addb sub jle pop out adc cmp jmp mov mov xchg outsl fcomp mov xor and pop pop jle jge mov sbb (bad) das mov sarl xchg cmp addr16 mov outsl cmpsb push jp mov out into pop dec pop outsl add mov mov or sti xor pop jbe push push cli jle test dec jle mov mov sub adc fadd mov aas add inc roll scas enter (bad) insb pop shrl bound xchg ret ret sbb lret lea popf inc xchg (bad) mov pop mov test adc dec dec pop pop mov mov insb dec scas or lret mov jle pop (bad) je (bad) push sarl inc xchg xchg mov pusha test pop cmpsl repnz imul jno xchg insb sti jae sub test es scas fwait inc sbb push sbb scas inc daa add or mov scas sbb cld adc cwtl shl out sub jne mov push xor pop jecxz mov movsl adc xchg js mov leave adc mov pop out movsl sub les and adc adc push scas pop jg sahf pop cmp (bad) and lds scas sbb call push sbb jle xchg push mov jns or outsb jle xlat sub push aas fdivs jno cmpsl push jle clc jecxz leave (bad) fdivrl aad jle push insb xchg repz in sub pop aas pop rcrl push fdivrs push lock ss outsl lret cmp dec and mov femms cmpsl inc in inc popa pop jle cli cmpsb das (bad) mov jle mov out jle rcrb cmp adc jle sbb xchg call push jle mov popf je daa cmp cmpsb jo sub jle sbb mov jle aam xchg (bad) cmp push xchg repnz ja jnp jo aad xor mov xlat lods mov push cmpsl jle subl loope jmp test test xorl lods jle push aaa sbb xchg jmp outsl dec fwait cmp jge (bad) ds cmp add popa fidivl cmp js lea clc add inc jp out xchg xor push sti mov inc test out insl inc outsb enter mov std xchg (bad) xor inc fcoms jle adc jle push sub aas xchg mov jle mov clc out mov pop mov (bad) xchg jnp (bad) sbb movsl push scas push push mov nop in fdivrs mov mov rolb out pushf xlat das negl cmpsb mov xchg outsl mov cltd xchg fildll jb sahf adc push lock fwait in fild cli (bad) cmp std add inc dec xchg add jge sub arpl stc push mov loopne mov sahf cmp and or jp jb jb pop xchg arpl idivl push add aas dec sahf or pop stc aam (bad) mov push cmpsl out loope movsl jle xchg mov in scas jle daa jecxz xchg dec mov pop leave jle xor dec (bad) mov xor jle dec loope in inc rcll jle adc (bad) xor ljmp in inc mov rcl pushl jle hlt (bad) iret dec sbb cmc cmpsb pop notl jle dec push fisubr aad push roll lock sub pop xchg push fnstsw fistp mov js hlt lea xor pop push mov mov sub jnp and pop mov pop lods sub xchg dec inc (bad) mov mov outsl push or sbb jle out and pop xchg cltd jle pop cmpsl pop cmp or out fadds mov mov add jle or mov dec out leave push pop aad jg push jl xchg cmpsb jle pop or sarb outsb and stc std outsl incb lds mov push ss sbb pusha js fistl das jle mov outsl or addr16 mov inc notl jle or aam and add jle dec leave fsubs pop lock aaa sbb hlt jb pusha adc imul jge scas add and mov xchg (bad) mov xor sub inc in push xor jle out pusha fmuls xchg outsl je std pop hlt and pop repnz jle jae rcr fldenv jb xor push jle pop scas sub es js inc out mov mov mov out cmp jle decb jmp into jge test jo and (bad) dec jne dec imul sahf jg push cmp sbb push mov ret adc test (bad) test popl xor ss lret mov popf add jmp std sbb adc mov adc sbb arpl insb loopnew das idivl xchg inc jle into jb mov mov mov mov jecxz mov mov push fsubr cmp sub push jle cwtl pop aas add and in adc testl mov xchg jge jle popa jmp rcrb mov jnp jmp or jle pop ss pop mov mov popf inc ja rolb idivl cmc loope jno lock jle xor in inc (bad) mov mov das add inc pop xchg xchg les jle mov xorl pop mov jle fldcw pop adc insb inc push mov (bad) pop add aam push nop cmp jle fisubrl cmp mov dec cmp jb jle hlt xor out and imul loop into outsb orl xor lea jle pushf faddl cmp jmp cli xchg adc jns call xor mov cld dec push mov sub cmc cmp cmp pop in sahf cwtl xlat testb jle jb mov mov lods loope orb jg fist jle test scas adc pop cmp jle gs (bad) xor mov jle sub pop ret loopne (bad) popa jp jbe cmpsl stos sti js adc ret mov mov out push pop dec inc jge add jp les pop insl in in imul mov mov call loope rolb pop fcmovb dec outsb lds pushf (bad) sbb xchg icebp and push js idiv fs jle sbb sarl push adc lcall inc lea aam jae mov daa dec xchg imul or cmp lods lcall and (bad) ja aaa clc sub dec test stos mov jp inc das sahf push mov lret lea mov (bad) jno xchg notl inc insb lret jp rcrb icebp push jns push sbb push or test jmp das sarl iret mov out int3 imul lods xchg testl testb enter hlt jle mov xor and mov or (bad) mov (bad) inc test movlps pop les xchg addl fnstsw ljmp les mov cmpsb sbb adc sarl sbb cmp (bad) aam in mov mov cwtl sub mov mov cmc mov lods pop minpd push in insl daa aas ljmp push (bad) mov and sbb dec push mov scas xchg jo mov jle fs hlt fwait inc adc das not or sub jle jbe scas jmp lock jle dec mov push xor insb or outsl lods pop je lahf ret (bad) sub std jle cmp (bad) pushf out pop mov hlt movsb mov jle fbstp add sub jle arpl std xor xor (bad) jle pusha xorl sub jno cmpl arpl dec sbb jmp jle push inc stos jle cli and hlt int mov xor inc fwait inc in movsb lds inc jno aad aaa dec js pop dec xchg scas fsubrs mov cld in mov push jle idiv lods adc or push pop addb out iret outsl inc sahf mov jl inc sub pushf jle push pop add hlt lds or jle xor addr16 addl emms add lcall lods cltd cmp xchg ret sub test mov mov sahf (bad) repz sub jp and jle adc pusha mov imul mov sbb mov adc arpl std push jle push jmp adc ds test ldmxcsr sarl sub leave inc fldcw jae add jmp dec jb mov jne lds sahf jl clc inc sub add xor mov fdivrl test out jle call push bnd jmp xor mov cs push lret jp jbe stos sub or sets cmp xor mov jnp sbb fcomps mov cmpl icebp inc and arpl fld pop cmp sbb push jle and mov repnz insb dec scas push jle and mov ljmp jle stos faddl clc xchg mov jecxz xchg push adc test jle jecxz out pushf inc fsubs push jle sbb mov insb sahf (bad) aad (bad) ja imul adc cld jp jne jle push mov sbb jecxz inc les inc jle push inc push jl pop add jle mov jle popf mov ret and mov fnsave adc pop mov imul mov mov mov jne inc cmp data16 scas inc icebp out es and pop imul repnz sti arpl clc dec jle aaa adc fnstcw sub jne xchg cmp jle test (bad) and jbe xchg sub js bound dec add push lahf stc sub jle inc test bound mov jecxz test cmpsb loope nop jg js aaa jle or mov jle clc xchg sbb and mov cwtl or inc sbb jle xlat or cli outsl or out or hlt iret jp outsb jle jp add jle inc sbb inc mov cwtl mov add jle mov nop insl push lods aad sub add push push data16 (bad) ds pop dec (bad) mov andl cmc test das cmp aaa orl inc dec orb dec stos and cmp in inc pop inc fs jle push icebp pushf cli shrl (bad) cmc daa jle jb in dec test pop mov je jle lea jge outsb iret bound inc mov subl enter cmp pusha jle lods mov leave mov adc test mov (bad) lret xor and mov idivb and fwait jle fldl lret int sbb mov aaa ucomiss cmp sbb inc mov (bad) sbb add adc dec push jg aad jle mov sarb cmp or jle push cmp xor mov pop mov xchg cmp adc cli movsl mov lret sub icebp daa push loopne xchg xchg fstpt shl mov push jmp les cmp jl jp xlat loope stc jle mov out sahf out stos cmp cmpps sahf addl pop jle xor insl jle out mov sbb pop sahf jle mov jo sbb les outsb jle xchg sub cmp out mov pop pop push fstps inc or negb lcall hlt cmp (bad) and das push in js add mov hlt arpl xchg lock and scas loopne inc mov sub dec xchg push mov mov inc scas pusha inc arpl jnp cmp imull stos sub fbstp add jle (bad) in sbb adc dec mov mov orl call cs xchg mov dec aas lret cld into cmp cli mov popl cmovg lods mov pop (bad) jle and adc lods dec jle mov addr16 movsb mov out sbb xchg dec push js sbb notl pusha mov jle push rclb enter jle pop ds jle lret sub sub push cmp das scas pop fiaddl xchg ret rcrb xchg adc push xor add pop jae xor cltd fisttp mov out inc jle outsb push mov push sahf out or dec js test (bad) mov mov jg ret out sbb push jle push sarb (bad) clc push adc out ffreep xor in sub xchg mov dec jnp jle pusha and jae gs xchg cmpb insb inc inc ja and fiadd mov sub add loope xor js ljmp mov mov jo pop (bad) js fwait (bad) std inc and outsl inc mov out rcl mov test jle xchg je scas loope addr16 fstl jecxz xchg adc xor imul cmp inc lret jle jne mov inc cmp adc xchg xchg sub xor int ss push push adcl xor adc mov or cli not xor aad loop jp js imul xor xchg cltd jmp jb adcl fs decb pop adc lds orb adc or jle rcll pop aas jle jnp insl or mov push pop call mov xchg fs jle jecxz fadds sub js mov mov (bad) inc cmp mov add cmp fmul mov aas lods testl mov cmpl negb dec int sahf fisttpl insb jns jp fbstp mov push inc or (bad) je jmp sbb std clc jle cltd sbb or fdivrs xor andl aam xchg sahf mov pop inc scas bts jle add les (bad) push jle aad xchg shrb jge xchg sbb and mov fdivs xor pop jmp pop and jle mov push shr pop jle cmp lds adc push jns mov js mov ljmp repz pop adc fs movsl cli cld fdivp gs ljmp cmp jle clc dec out mov inc xchg jle or outsb jecxz rol adc mov xchg out or rsm js fildl pop out (bad) and mov ljmp lods xchg xor cltd jle jb imul push push mov adc sbb pop fwait lret jle jg lcall out jle popf adc jbe and dec xor push jle popa xchg pop inc cmp push (bad) mov sub jnp sbb jecxz leave and inc jle notb cmp decl pop hlt pop std data16 mov out sbb stos mov scas dec xor jmp mov mov lock addr16 push cmp enter adc add bound mov jle stc aad xchg xor in mov xor push test scas xchg jp mov jne stos fcomip rorb cwtl push mov jbe push cmp mov mov jp insl jmp mov in repz out das cmp and in mov jns popf pop sbb push jle xchg andb add mov out inc pop movsl inc outsl jns jno int pop das jmp jle jge nop mov mov fsubrl call mov (bad) pop adc pop insl mov ffreep std jns jg movsl or or push test cmp push mov cmp mov push dec jle icebp cwtl jb daa sti sub cmc xor jle insb xor pusha inc addr16 mov push or jnp mov icebp mov lds jg mov jle stos push jle je nop xor fisttp stc xchg jle (bad) loope cs jle adc mov les add sub lods mov (bad) mov mov (bad) jle nop mov fadd mov inc out in test jae push mov cltd add cmp mov jle mov movsb jle mov sub lods fisubr js imul sbb lret xchg mov pop cmp sub test mov std fnstenv xchg jo mov jae xor in inc adc jmp outsl dec jle sub rol mov inc pop fild adc push jle and repnz dec bound xlat lods mov out rorb jle rcrw imul or jle sbb dec ss add push push mov clc ljmp imul idivb inc sahf test add insw pop sti xor inc fldt js jnp inc mov or orl adc mov js ret inc jno mov or jae popa insb jle fwait (bad) out (bad) push xchg inc jle jge sub cmp dec stos jle ss out ds adc cli mov lods repnz adc outsl sbb subb push dec ss jle daa test (bad) jbe ds mov mov jg jle add idiv clc mull push or (bad) add fiaddl repz jle imul lods xor xchg sti (bad) idivl (bad) je xchg cmpsb scas sub sub arpl fwait cli fcoml jle dec sub jmp jae mov inc in loope inc and xchg (bad) or cmp push nop sti hlt (bad) and mov je jl (bad) es fmull jnp jp jle pop clc mov int fwait xor into cmpsb mov out mov fstps mov shll lods jle ja fs je pusha scas cmp (bad) popa jnp sub cmp mov mov mov sub scas sbb cmp clc andl xchg jge jle mov xor mov sbb inc jnp jns jle sub negb xchg xor push lds dec sahf shlb jle fimul movsb out inc cmpsl mov cwtl test jle out (bad) push ret jle in repz hlt xchg xor jbe gs ret push push mov aas cwtl data16 mov and adc lock add jle outsl mov add arpl xchg repz mov sub or outsl into addr16 mov bound xchg outsb xchg adc cmp mov jp pop cmp inc jno jle dec flds jmp jo rcr xor imul adc cmp jle gs ret emms shr jle push int3 cmp movsb repnz jp adc jle ret add dec scas shr cmpsb mov xor cs xor xchg std adc ljmp pop xor add test jle inc imul cld sbb scas xchg imul sbb adc mov mul cmp push push insb rolb and aam xchg add gs (bad) sub adc lahf clc popa add inc fwait inc movsl push fildl lret jle pop sbb mov ret jne subl jnp add mov jae data16 mov jle fdivl cmp (bad) fstpt jnp daa call inc mov sti js jle int popa (bad) sahf mov sahf lret jne in jle ficompl out fnsave mov sbb mov add jle sbb jp jle push punpcklwd (bad) ret mov outsl bound jmp testl add cmp (bad) dec push cmp xor data16 or jle ljmp jle movsl mov fdivrs pop rcr aad adc popf (bad) lahf in cmp clc pop pop leave mov push mov fistpll in mov mov jp adc dec ret xor sub lea or mov jle leave iret adc mov push jge mov dec aaa subl loope outsl jle in inc sbb fstl mov mov adc fdiv out sub hlt pop aaa or aad ret push xor sub imull push fadd scas xor fwait test outsl lods push dec mov cld test jle js inc add rol adc adc (bad) test push ljmp scas inc jp clc mov jle mov or cmp pop pop and cmpsl mov add into pcmpeqw stos clc pop sti (bad) jle sbb cmp arpl mov mov pop jle inc mov into adc xor jle enter stc jle mov nop scas inc cmp adc jl jmp cltd mov clc arpl jle in fs popf or add jl stos shrb cmp aaa or jle dec inc add mov jo arpl shl repnz cmpsl lret ret mov mov leave cmp std mov add mov rclb pop jbe jle and xor popa movsl jge jl imull (bad) int3 stos xchg xchg push xor in cld sub jle adc popf stos cli pop and mov cmc sub sbb (bad) jbe inc cmp ficom repz xor push outsl push pushf cld rcrb pop cltd pop (bad) sub and add subb xor mov test add jle out lods fstps rorl lock xor mov mov sub movsl into and sbb push imul jle jge std and pop into xor outsb jp clc jmp pusha and pop mov mov out or insb int fadds insb mov into repnz mov jo lds mov mov jle cmc jmp add xor lea imul ss aaa mov add test push jle imul test pop sbb popa xor mov jle pop xor test cmc xchg cld data16 jg jb mov (bad) jle enter and jne out insb jle xchg pop xlat jle sub cmovp stc adc das (bad) lock inc (bad) test xor bound (bad) mov pop sahf roll int cmp add scas (bad) push inc scas lock cwtl jle (bad) xchg aas xor adc je out (bad) and and imul aad mov int jl (bad) cmc xchg ja mov sub jp lcall xchg pop jp mov pop pop sub in and jle mov cmp pop hlt add xchg or fistl loopne stos push ljmp sub cmp int mov push inc pop jle xchg mov jne sti xor mov sub sub out cmp rcr inc movsb insb jns pop lahf mov jle cmp mov mov jp out ja jle outsb ret xor mov sbb sub stos inc fbstp xchg pop add test repnz push scas ja and js sbb test das jmp call pop into jb xchg adc das jbe cli addb mov push or stos mov (bad) (bad) jnp sahf cli psubusw or dec jle das out lods out std rcpps cli jle mov pushf jle call xchg out ds and test sub sbb insb dec stos aad (bad) xor inc sbb out scas inc xchg sbb lret mov sbbl loope jle jb pop repz and sub xor jle std addr16 mov add jp inc adc fidivl cmpb sbb pop nop jle pop jns std or jle push daa add rorb mov jle rol clc mov and std cltd xchg outsb push mov sbb cmp cmp sbb sbbb xchg lcall xchg jle not aaa les test cli push xchg push xchg add stos xlat mov aad jle mov jp xor ret sbb dec sub jnp out jle fdivs shrb repz outsb fidivrl scas mov sti mov jg xchg mov cmp dec jb popa js test sub dec sub push cwtl push add imul test add data16 xchg in mov jle aaa dec lods inc sbb (bad) in sub sarl icebp movsb scas mov pop mov adc push (bad) jne jle aas in ss mov scas aad and lcall xor test xor dec insb jle cmp loop jle jl mov pop test (bad) sarl repz fidivr jp or (bad) push les into fs aas push lret js push sub scas mov mov adc mov (bad) repnz clc pushf cli xchg test enter jle add cmpsl add push jle fs fstpt mov test jo (bad) hlt push push mov mov xchg inc sbb mov jnp mov push push movb mov sub sbb cmp mov pop dec mov pop lcall xor enter jbe std jle or and iret xor cmp jle and mov jge pusha jle lock xchg je xchg xor mov sub icebp sub add mov gs jle pushf push pop dec fidivrl in push das add dec xlat mov aad xor inc arpl fsubrl int3 cmp or or xchg call mov scas or sahf test enter (bad) enter jg sbb cmp mov pusha push stos cld push jle add sub mov mov jp and imul ss sub add xor in sarb cmp xor ficoml cltd jnp sbb sbb sub aaa dec ss pop out stos lods cld sbb jle loopne push mov mov push xchg (bad) mov pop mov jo push test push pop out pushf jb adc popa jle push repz int3 lret inc jle (bad) aas test insl fucomi sti adc fdivr xchg mov imul dec (bad) dec xchg xorb jle (bad) insb scas sbb xor jle cmp mov idivb clc jnp push repz xchg jle iret scas mov push and xchg ss lret pop lods out gs dec jle xor cli jle scas dec lcall stc jle stos xchg pop sti stos jl jle fs mov ret std fstpl mov hlt (bad) push jle pop jnp fsubl jle inc in push sbb and jle mov testl es lcall sub push pop push xor popa and mov jle and mov jle mov (bad) jbe ljmp out push cmpsb dec xchg aas xor add jle sub loopne jecxz sbb jbe inc jle les sahf test pmaxsw (bad) jle,pt sub add inc jle inc movsl cmp inc fisubrl mov enter pop push jle mov inc popa mov cmp mov mov push cld cltd adc sub (bad) jle xchg add mov mov xor push jle hlt dec mov scas mov mov pop adc lods cmpsb jle and lret add dec es outsl inc mov xchg sbb cld aas lods jl jns sahf mov loopne (bad) mov sub or repnz fidivrl jle or sub sub jae xchg (bad) sahf inc cmp jnp xchg and inc push xchg imul xchg mov xchg jle das test loopne mov mov jecxz popw in or mov ret adc push mov outsl dec repz jle adc lods cltd jg in fadd xchg pop inc lret jle mov and out cmp js enter mov inc jle sbb cmp jle repnz pusha jle mov add jle out lret pop fistl mov jle add mov jecxz sub or test cmpl sar hlt mov push xchg add dec idiv push cmpsb rolb in add sub and jle sub pop loop push mov cmp xchg lods jle mov jmp jle sbb repnz scas sub mull push jns dec jg mov outsb adc ficoml jl,pt imul inc sbb inc mov scas mov xor test sbb and pop (bad) lock scas in dec jle mov into or int3 stos cmp cmp xchg clc mov mov add jle test sub cli xor pop jbe jle lret out pop push jmp iret jle cmc sarl ss push pusha push cltd inc jle ret fs or aaa jle pop adc xchg sub xchg clc jae and mov sbb fidivrl mov xchg dec jae add jl jns dec ds jle decb test out jle mov cmpsb mov mov push xchg out arpl jle xchg dec (bad) movsl cli jle,pn push mov aad cmp dec (bad) outsl bound test sub mov jae jbe push das popf adc jle mov les loope push mov pop (bad) lock sbb mov sub sub inc jle (bad) data16 dec fs fdivrl xor push (bad) adc loope add pop inc mov cmp xchg lods loop insb (bad) xor jge std scas xlat pop jnp pop xchg ja test inc fistpll push mov neg aam jle xor jne js add mov loopne cmpsl sbb jle xchg in sub popa scas stc in clc lcall cmpsl inc scas xchg xor sbb xor cmovae cmp (bad) mov xor cmp or call movsb push mov sub xlat fstpt push add mov lods mov xor sub xchg mov jle sbb sbb out stc mov ss jle sub jb sahf (bad) fnstcw jne cwtl lock pop out dec push imul mov jmp add icebp inc jle push or adc dec inc daa pop push rcrb jle arpl shrl pop in jl dec jecxz scas sub inc dec mov jle inc pop inc dec in lea insl (bad) in sub mov cs dec and addr16 jp stos leave test pop mov dec ljmp pop pop je addr16 notl add js mov js in aam push push jne adc xchg jmp pop xchg add fbstp insb data16 mov sahf and negb inc xchg jle imul stos push adc mov and cli push jle sbb daa data16 add fistpl push add movsb jle mov outsl les inc push enter in mov das in pop dec ja jle xlat adc outsl jl sub loope out jp mov ja sbbb xchg jle stc sbb jae (bad) popa sti loopne push je push jg es mov xchg mov dec adc fwait cli ret int outsb mov repnz or dec cmp out jle imul jle aaa outsb (bad) mov mov sbb jp sub movd xchg xor mov cmpl xchg imul call out sbb ljmp jne jle inc sub add out pop hlt insb jl push shrb inc ljmp scas mov lret dec movsb push jnp inc hlt mov xor add and mov ss jb lahf xor arpl cmp jmp jns pusha les insl inc je push ja dec jle xor jle pop add push mov dec cmp jle xor sub outsl xchg pop std jle test mov dec aad and jle cmovbe test jne or pop call in pushf out jle iret mov or out xchg cmovbe jle addl test stos cmc add notl or xor das jle sbb jg pop xchg lock in adc push xor lods mov pop inc and fdivrs call pushf lret sub mov xchg jle shr mov jle adc inc (bad) mov outsl jle repnz push jle cwtl out xor dec jb sub das (bad) ss icebp or inc test (bad) jle,pt das or cmp inc stc mov dec xor pop hlt mov jae ljmp ret adc dec hlt mov push mov scas xor xchg jl sbb or fisttpl mov in jge push push js xchg out out neg mov xor (bad) mov push inc jne cmp xor sub mov add push stc fcomi or fistpll push out jle add popf cmp lea xor shlb mov cld frstor adc in adc cmp jle cmp xchg cld imul mov pop mov sbb jle or pop mov push jle fisttpl mov scas roll pop or mov xchg mov push mov jns pop add hlt xor mov cmc push js inc jle fwait cmp cmpsb sub jmp xor mov cli outsl xchg jne jg xor rcll push mov or clc mov jmp jbe cmpl js mov or dec sbb push jle sahf xchg test sti sub adcl xor or mov push clc popf sub out push idivb adc sbb popf rol xor jno and movsb push push lret repnz push out data16 dec jle inc jns cli or pop aam imul jns inc imul push call aaa and jle cmp hlt xor sub push imul mov clc sub dec push mov lods or in jbe,pt jle adc and push insb jge in leave pop mov mov mov call orl cmpsl cmpsb jge out mov adc repnz jle in subw jle mov inc jle ss jmp das sahf lcall imul ret cli pop test inc (bad) mov cmp jno dec xchg ret scas mov out mov lret lahf inc std lahf test lahf adc push jle push sahf inc adc inc dec aaa cli int sti push call sbb lcall fcoml sub test fcmovnb fldl daa or aad add adc and cmpsb (bad) jno cltd popf jle daa pop sbb push sub push push ret sbb insl scas mov outsb subb xorl aad div aas jle fs aaa sti lods es mov adcl add adc mov add cld inc pop je push insb popa xchg stos outsl jmp call jle fstp inc push sub jle les mov js fwait jle es lahf stc pusha jns jle mov xor test sub add push mov or jle inc push fs pop jle sbb loope cmp lock jg push out int lret scas leave jb add pop inc jp push xchg mov xor sahf cpuid jl jle sub or inc xlat inc mov inc mov sahf cmp cmpb aad jle shrb sahf cs js mov aaa js outsl daa xchg xchg pushf rolb mov or jp mov pop inc adc sub jle push pop ret jle mov cmp push imulb fiadd sarl jle and xchg mov adc rcl cltd inc cmp xor pop std mov xchg mov jle xchg fadds (bad) les pop push popf shrl pop push mov arpl mov loope dec jle hlt xlat add jg inc jle fwait insb mov pop inc sbb jle pop jp hlt out imul jle push pushf add pop push xor cmp stos jle,pt fdivrs repz sub or jl xchg xor or mov jle gs int3 pop and jns mov mov cmp scas adc sahf pop xor jp test (bad) fwait sub mov mov mov (bad) jle dec mov push jle test shl mov aad jle out fisttp jbe popa stos sbb lret xchg (bad) pop xchg push out test mov jle fs inc mov lds cmp jle mov nop pop add mov inc adc incb mov ja in adc dec dec xor mov or jg push push cld pop inc jle ds sub xchg stc jle xchg sbb jbe (bad) sbb mov pop scas cmp scas (bad) xor jle insb cmc xor dec lcall test add sub ss in jg lods jge clc cmp cmp pop jns cmpb jle xchg sbb jl out jmp test mov ljmp jns mov inc popf jp xorl out jnp add scas jnp aad ret dec cmpb xor mov sti outsl scas enter sub jle rorb mov ljmp into jge add insl adc xor imul mov pushf xlat mov xchg cmp add sbb sbb adc jle cmp repnz jle repz lds push pop into jb lcall sbb mov mov ret repnz in std xor inc mov or push cmp cmpsl cmp imul test inc outsl aas push or nop xor clc jle rorl jmp mov push add lahf inc add adc sbb in out ret js pusha pushf dec jle sub sub mov (bad) jle or call jle ss test jle cs negb loope jle mov adc pop (bad) stc xchg cli jp out or jle adc and pop jle jo xchg rol jno pop imul jle mov dec rcpps push pop roll dec in sub pop cmp jle inc sahf rolb push mov inc mov cwtl xor pop xchg (bad) mov push mov xchg stos add sub push insb xchg int3 xlat add stos jle dec add add out pop shlb aas flds fistpll cmp in pop mov leave jbe jp add dec (bad) (bad) inc fidivr xchg leave pop int daa repnz mov jle and sbb (bad) ret and fsqrt mov loope xchg imul out mov (bad) lock lea (bad) popf mov xchg sbb icebp jle and movsb dec lods jle mov pop cmp xchg mov mov or dec jo test call jae sub nop mov fidivrl or inc mov mov in fild outsl sbb lods jle loopne add mov cmc or push cmp jp sahf lahf lcall inc sbb andl jecxz cltd pop je mov subl std pusha jle stos nop daa mov xor inc fsubrl cwtl cmp push insb push inc sahf mov xchg cmc mov mov xlat hlt jnp fildl jecxz rclb jle push xor sub fild jo mov fs in mov bnd sti xor sub jle outsb push in jp test stos or push inc sarb imul jle push andl xor cld mov out add (bad) jmp ret andb sahf jne inc jle jmp repnz jle dec call mov xchg cmp es push xor dec adc ljmp adc and pop int3 inc inc ja mov jle and sub inc test sub xor mov popl mov (bad) inc stc jbe jle xor jmp cmp add pop lods jnp in add cmp pop jge insl std push out xor push sub hlt mov in xchg and sub std or ljmp loopne andl ss idivl mov jle fscale jns or adc xchg jge cmp inc jle rorb test pop ret push mov or or ljmp push jmp cmp dec mov pop (bad) scas loop rol aas les xchg pusha cltd mov sarb sub flds mov std sbb inc mov add scas sub ss mov jns cld popf outsl cmp mov jp jle mov add out enter mov outsl std push jb add jae out and idivb lea lds mov pop jbe adc dec out and xchg fldenv inc scas shrb vmread mov dec xor jle cmp nop mov xor fisttpl jge int3 clc dec sti adc push mov sbb sahf mov xor jl lea and and fistpll in stc pop cmpsl bound sub fcom scas lret stos movsb aas jns mov out jp in lret cmpb test inc push call jmp xchg cmpsb mov cmp adc jno jle sub jns fild cmc ret xlat lods jle mov les sub xor call pop jmp jle lahf lock adc cmpsb pop stos sbb je add xchg cwtl add ja cmp mov mov mov sbb mov sahf adc sub push pop jle out inc push sub imul (bad) pop les das xchg xor js mov mov jns call mov and test lret popa mov loop mov clc adc jmp pop mov push (bad) jle or xlat cmc mov mov lfence bound mov fildl scas fnstcw dec mov jle in hlt push fnstsw jle dec dec and rclb js mov push jle mov out jp push sbb mov ja sub cmpb push mov sbb lods adc scas test jo insl hlt pop inc (bad) jmp jle jg dec mov inc in and addr16 xchg (bad) xor jle jno fistpll ds jle adc jmp mov ljmp cmpb icebp (bad) jne cmp je test jle jne aas adc test hlt add mov into rorb flds outsb jne jle insl aaa dec bound jge icebp mov aad jmp movsl jnp xor imul dec jne pop aam out aas mov clc bnd test movb out inc jmp pop jecxz and jae mov mov mov icebp out push sub outsb (bad) mov adc xor in inc sarb sub or cmpsl xor inc mov lock xchg cmc cltd mov mov dec sub xchg (bad) mov xor add loop test cmp repnz jle neg jle cltd idivl ret jg mulb mov jle movsb movsl mov repz mov (bad) aad loop dec das sbb es pop sub addb (bad) adc jle push std hlt ljmp push mov popa inc aad jle movsl cmp mov add mov sar cwtl aad stc ja rorl jle cmc pop packssdw adc mov cmp sub jecxz ud1 hlt sti les push into (bad) pop push fwait sbb mov bound subb mov jnp adc andl jle add mov lcall mov xchg push cs add ja cmc (bad) icebp retw dec mov mov test mov scas fildl leave je mov dec (bad) adc mov fisubl stos es push xchg dec out mov icebp pop push or popa (bad) nop jo out jle mov sub scas dec add jnp and dec or into fnstenv sub aaa and bnd shlb cmp pop pop outsl push dec jle push dec scas fisub inc inc aaa es jbe stos xor loope movsl inc push cli pop outsb mov lods inc mov dec movsb scas jle or xor fcomip sti jle fstpl mov xor insb mov inc dec dec push ds sub ss leave pop xor sbb (bad) (bad) jle movsb xchg fisttpl int mov xchg clc movsl jle adc push jle data16 xchg addl and ja push pop scas xor push (bad) (bad) mov push dec (bad) addr16 ljmp arpl pop jge jle aas dec insl push pusha test ss jp cmp mov mov jl pop jle ljmp jle add out lock aad jle (bad) imul scas arpl or ds cmp mov aas stc ret jle cmc dec fcoml scas or icebp add cmp adc in sbb pop cmpsb mov jle pop fidivrl pop aad jle mov xchg mov pop add jle out jno aaa gs jle inc adc sbb sarl clc repz mov ja loope dec mov insl dec jl test push sti jle dec sub aas lds mov mov into decl jle cmp movd mov inc idivl mov mov (bad) xor inc fs push lahf jle pop or jle mov add movd cmp loope xchg shr jge mov testl std dec rcll jle enter and xchg out inc aad xchg sbbl sbb jle pop loop jne ret jnp fldl jle jb (bad) dec lods inc cmp cmp sub cltd bound xchg ljmp pop pop mov jle jl ds dec out test jle jge inc and adc scas xchg test push stos addr16 jecxz fwait adc xlat jb cli jo test mov or cltd inc fnstcw jbe jle jmp dec les inc xchg jp add push out cld mov fiaddl jno lcall jle das mov fidivr inc inc gs xchg mov jo and add xor scas aaa mov mov push jge cltd xchg cmp cmp les into test or xor outsb inc jne fdivs mov sbbl dec or les sbb stc popa xchg bound jb outsb ret mov sahf xor scas js gs (bad) (bad) mov push fidivl je sub mov arpl mov lret xchg adc sub cmp jne pop jg xchg in cmp mov cmc cmpsl jle sbb push push jle arpl sbb in lea jne rolb out inc popa and mov ret enter jle pop data16 out jmp loope in stc dec jle cltd cmp jle push (bad) cmp cmpsb ss pop add fwait stos or inc jmp mov jg mov out outsb fucomip enter mov sub and sbb jno pop popa xchg push jmp xchg jle dec push sarl fisub cld sub lock jmp popf outsb daa jle in addr16 lods push dec jp cmp sbb mov cmovg push push mov test bound inc frstor scas xchg rol adc push lahf push clc test lahf and adc cmpsb mov shlb or out mov inc mov or mov sarb mov push or pushf jge jle or mov std xor sbb aad xor mov push mov (bad) ja insb jecxz dec mov adc mov xlat adc dec lds jle dec mov out mov lods outsl ja sub movsl xchg ret dec mov jp cli sub cmc jle mov xor jmp into rclb enter rcr jb jle fcomps aas scas push ds scas mov cmpl movb enter mov out pop call (bad) test cmp inc daa pop jle pop dec movsl mov in inc push jmp jge mov or or fwait jg adc and jle adc mov jle std jbe insl adc aad repz add push or add rorb pushf (bad) mov jle push jno and std out dec mov shll ror push jle and pop lods fsubrl sarb lods jo mov push xchg sub out fdivrs jle adc out inc xchg (bad) shl mov mov cmp push sbb cmp sbb test (bad) dec pop fwait jle repz leave inc mov cs fisub ds xchg adc jle push test jecxz bound mov jno cltd jns push pop cmp jne aaa pop xchg push les das into push icebp in pop jle insb mov sub mov push xchg add pop es mov xchg in mov daa adc xchg cltd idivb icebp adc adc movsl insb sbb pop lods bound cs std scas pop jg les frstor aad jle aaa push call pop sub adc arpl sbb push inc fnstsw sbb jle inc (bad) adc orl movsl jl lods sub adc adc sub jge call jle push sub jle and (bad) (bad) call ficom sti into xchg shl cmpsb jp cmp xlat mulb in dec mov inc fucom inc and jp or and push xchg out and outsl push sub xchg or out push movsb popa mov int3 sub gs jae pop mov adc cmp mov add js test ljmp cmpsl (bad) clc les add (bad) jle outsl or xchg jnp insl mov and adc xchg xchg mov pop inc loopne cmp mov ret lds aas push push push ss ja cld sbb jg outsl clc pop cli movl inc pusha mov lods pop loopne adc imul mov cmpsl adc mov xchg mov inc push inc inc movsl pop jle jecxz mov leave xor xchg mov add enter mov into add add jle leave adc fs and cmpsb sarb jle push adc and nop int3 mov jb cmp scas pop or test cwtl das test xchg cltd js sbb or inc jp adc lods cli notl push mov lcall xor dec mov xorb mov sbb mov xor sub and ja fistp dec jle dec pop adc divb iret (bad) and pop lds pushf (bad) ljmp dec and jle fsubl cmpsb mov aaa mov shrl ja pop xchg add or cltd jp dec lret imul mov jle mov int jp adc push aam pop test (bad) and sbb adc xor mov push jle and fbld fidivr in lcall js push xor jge lds mov in add mov mov loop inc gs sub (bad) adc xchg std and pop xor mov mov js into pop pop outsb dec data16 jp jle lods or test jle,pt ror and fnstsw sbb jno scas jns mov mov mov addr16 (bad) gs pop jle js (bad) jbe push sbb scas les test mov lods leave push sarb (bad) fs loope jb ret cmp jle adc push jp sarl jecxz add ret pusha sarl add xchg adc (bad) fyl2x fnstsw mov jle pop push mov jle inc fdivrl jb loope mov inc add inc scas or mov movsb jns jl mov mov pop mov xchg jle loope pusha xchg jmp fmull cwtl out push dec in mov fldl scas lahf xchg mov dec xchg jle sub jnp iret inc cld jle pop movsb daa mov jg xchg cmp (bad) loopne mov push cmp int sbb pop jg movsl gs arpl jle and adc jecxz lcall les inc dec pushf imul pop aad add (bad) test or inc or jo imul push fs ljmp sub pop lret jle (bad) hlt sarl insb adc xchg jp (bad) mov mov xchg xor mov rcrb add jecxz or ljmp xor dec aaa jle mov mov jle push and jle shrl jle mov sbb or repnz sarl and test push xchg out push imul pusha push push pop jle push dec dec daa (bad) sbb jns push (bad) mov insb jno fiaddl mov inc lret (bad) js in jmp (bad) mov adc test jle arpl outsb das mov push push (bad) dec js mov or inc xchg scas sbb std sbb lock jg out test jle sub lahf jo sbbb (bad) addl rorb dec or (bad) dec stos dec adc cmp aam lahf (bad) aas jp cmp jle xlat dec nopl xchg pop out roll xchg cmpsb push sub add std daa int3 test jle adc dec insb sub sub mov movsb adc cmpsb add push rol push iret pop xchg lea jle ret imul pop adc jle cmp or jle jp stos lds add xchg out (bad) fdivr das bound jb xchg xor loope (bad) mov in sbb daa call test adc cli mov or fistl inc mov mov pop push insl jle cmpl and pop sbb and xchg sbb stc sarl or jmp aaa movsl insb mov adcb jge gs push push lcall xor mov push int3 add sub lret push std jo sub jle cmpsl popa mov sbb mov sub cwtl (bad) push xchg ja jle and enter mov cmp jle mov xor arpl jle jns mov jle mov (bad) fisubr out (bad) fstpt jle or adc jge sbb xlat jle and jae sbb jle adc push push popf and movntq adc sti pop fdivs jle xchg sbb xchg addb pop sti mov imul jle fildl loope push jmp sahf fsub popa and in jle mov lahf rcr mov adc test leave or pop xchg inc add popf inc mov out jl jle xlat sbb push and aas (bad) and cmp jo mov add and in repz xchg adc aam push xor jle orl popf ret mov mov xor inc out xchg enter jo adc (bad) cmp jge (bad) ret (bad) add xor cli jle (bad) xor push aas lret push stos sbb es mov imul jle push pop aad (bad) fnstcw (bad) popa addb jns int lock rorl test aas (bad) imulb dec mov outsl sub (bad) jle rcll lcall out sbb js lea add adc movsl sbb lods cmp jle test mov and cld xchg jle pop mov adc out push xchg jnp jl jle add push out inc mov das or cmp insl lea push jp scas jle xchg add inc repnz stos add jle xor mov jle rcrb sbb (bad) jecxz jp add jle push lods sbb imul sarl push sbb cmp pusha subl sarb inc imul jle adc in xchg pop xchg mov int3 sbbl adc mov add pop fadd push fidivrl fnsave adc and and stos fidivrl cmp push mov sar jle xchg cli dec xchg add (bad) out test jle pop aam inc ret out push data16 pushf jp fistl lea (bad) mov xor test jle les aas testl cld outsb lods pop and scas sbbb imul idivl and fistp fnstcw inc dec das loope push (bad) das cwtl push push jle,pt jae test pop ret mov mov mov out rcr test mov and jle sub loopne scas mov jb cmp orl lods insb ds jle push jle fdivr jmp cmp jle insl adc jmp fadds mov mov jg push imul xor jle (bad) (bad) cmc in je sub cli xor out pshufw stc or dec fwait lds addl or out sarb cwtl pop sub aam jne iret fcmovb pop out mov insl fdivrl cmp add lcall inc (bad) (bad) pop cmpsb imul or dec imul cmp cld mov popa dec ja aam jle add jb xor jle movsl inc outsl mov roll push (bad) jle negb jle jne ret add idivl xchg mov jns iret ds icebp lahf nop rolb jle out jne outsl mov lcall sarl push ss xor and loope fldcw enter call cmpsb loop outsw push xor iret js idiv pop lea inc pusha add jle add or out popa lds sub (bad) (bad) (bad) test cltd add add in and shll sbb insb sub jle arpl repz xchg stos cmp out rcll adc push call adc mov jmp add jle pop and sbb sbb aaa lods (bad) iret or lcall outsl fst mov mov xchg movsl jge and xchg imul push insb jle lods aam popa clc movsb add inc daa inc stos dec xchg sbb adc adc xor lds push jle shr dec jo out leave jle jns xor outsl sbb (bad) dec mov inc jae cmpsl jno js test jle jmp outsl shrb inc lds pop sahf mov push and cmp mov mov stos cwtl pushf or xchg dec xchg cmpsl adc daa out xchg cli out (bad) loopne ds (bad) and sub fldt js add jecxz jle imul sbb mov hlt push push lock outsl mov adc xchg call pop xchg test subb jb jmp mov fistl lahf add xor cmovg inc sub inc pop js jle cld popa sub sbb jle clc repnz jne rorb int mov and fnstcw movsb adc jmp pop mov lods mov jle sub jle jns jecxz aad adcl jnp sbb or scas call and inc scas jle in mov les inc andl adc fstpt lods stc xchg mov es jle addr16 rcll lods push out jge mov ds cmpl in sub outsl jle pop ja or cld inc bound lods gs jle jo mov cmp loopne jbe (bad) sub stc in pop and jp cmpl jns mov repz jae ret cmpb lds out or jp (bad) out fldl pop xchg outsl aas ja stos jp mov mov fisubl xchg mov pop mov rorl cmp push push jle and loopne out push mov sbb and jg icebp (bad) js pop xor xor inc jge loopne cmpl jle fsubs xchg dec mov sahf lret jle fmull sbb push out call (bad) push lahf out xlat cwtl jecxz out jle add (bad) mov pop jle js and addr16 inc sub xor pop push hlt dec inc in jle ret cmpsl jmp mov movb fldenv aam cmp in int3 outsl mov pop inc jle dec into test cli pop jmp push pop ret and scas dec jne push aam js (bad) jle test (bad) lret adc and mov pop jbe sbb sub sbbl fs mov pop pop stos js cmp push push out adc pop jg add mov cmp add xchg (bad) mov dec jle push out and popa stc adc in inc jle pop in aad bound adc stos push aam insb jle pop inc out adc pop and arpl pop mov add (bad) sarl mov cmp inc nop (bad) adc popa push add xchg lret out aas sbb mov jle xchg inc (bad) dec dec mov mov xor fcoms jge push sbb push mov xchg inc leave pop xor mov push test sahf ret add push mov xchg or xchg std imul in iret jle ret xchg stc cwtl loope sahf enter jmp push inc fsubrp out bound push jle movsb or fsubp or lea fstpt fstl out adc and xchg push ss pop adc mov aad pusha adc xchg icebp mov sbb clc addr16 je sbb pop aaa std jl cmpsb inc jle xchg mov dec push arpl les jns sub pop std xchg adc into nop inc cmp adc push bound sbb jecxz fisubl mov (bad) addr16 jle bound sub popa notl mov fist inc jbe scas js ds cmp xchg jo addl push and mov daa int or jle jge cs hlt rolb cmpsl jmp subl lcall int sahf rorb sub jle je cmp cs pop jle fiaddl sti mov pop sahf hlt inc cmp jge jle in mov jns icebp jmp jle sar jge mov add std xchg jp call mov dec adc divl sbb cmp dec in push ss icebp jle daa test jb gs jle push addr16 pusha jae push out mov push jp xor insb out mov stos aam les jecxz sub inc (bad) (bad) out xchg subl call dec repnz mov fidivr je insb cmc pop xrelease std imul (bad) cli sub sbb repnz xor pop scas lret mov aad push mov icebp jle out push shr sbbl mov xchg add in (bad) pushf adc inc inc jle fiaddl jp push idivl movsb cld mov and mov inc mov out in or inc adc jnp inc cmpsl shll movsl jle xor dec out push cs lds push repz sub data16 mov cmpsl add cmp daa sti cltd lock mov sbb mov fiaddl insl lea jnp shrl cltd bnd cli sbb inc pop movsb adc js add std scas sbb cmpsl cmp or jge or mov xor fwait or add pop (bad) sub in pop xor adc fwait stos fnop aam das xchg jno jge imul add aas fistp out pop push lods sahf lcall push jne mov call roll outsl mov jle je andl lea jge jle repz movsl inc mov push jle xchg sahf sbb xchg (bad) into jle (bad) mov aaa sbb pushf jbe jle popa fcoml aas in mov xchg ljmp mov xor fbld jle test or sbb popl ja cmpl lcall cvttps2pi or mov or pop mov js in mov orb and movsl jge int loop out or xchg (bad) push push scas sub push and add and fstps imul adc and pop stc push inc pop xchg pop inc mov mov push jp stos push insb jle jbe jl mov push dec xchg sbb cltd jle mov cmp loop ret loopne jle rep in sub in lds js xor jg outsb sub into repz sub cmp mov and mov push jmp sahf inc hlt jns pop mov jle lock mov jmp jne xchg bound andb lret icebp push lds test jle inc mov mov mov ljmp jle add mov dec js xchg mov loop cmpsl les jl jno aad dec lcall dec imul push jle and mov rorl jmp outsl sub add jo in lods jle sbb popa add lret loopne scas fisttp jle pop inc add mov mov mov (bad) jle and sub (bad) lds outsb push out pop js dec into jp daa mov sub add jns sarl pop std aas pop inc jo mov loope loopne sub in xchg (bad) mov jbe fistpl inc pop inc jp push inc daa dec jle dec pop test (bad) sbb jle outsb in dec xacquire xchg push (bad) aaa je jle das mov xchg jle lds (bad) fdivrl stc jle lods movsb pop mov inc xor in insb mov sub jmp jle inc mov push in fnstcw into mov test jle push xor cltd loop jle pop inc jge mov mov jl icebp mov jp and pop jle dec lret xor scas pop insb xchg mov sub jle stos jno xor add push or mov jb xor out rcll imul xchg mov sub xchg add jle adc add scas mov mov mov stos jecxz adc shll inc outsb pop fwait mov jle out adc xchg lods dec insb mov sub xchg imul fbld ds mov ss jo jle xor cmpl cmp inc lret jle cmpsb mov and push add inc pmaxsw jns lret jle (bad) (bad) (bad) iret mov push jle repnz adc pop push mov lret mov call xor (bad) mov (bad) lea lods inc fnstsw rcrl jecxz test pop jle data16 popf push stos sbb jle xchg sbb inc data16 in out adc or addr16 daa pop sbb sahf stos lods test mov repnz mov mov in xor sahf mov repnz ficom mov mov stos daa push jnp (bad) je xchg int3 lods aas xchg mov cmp or and mov aas pop inc pop inc jle add (bad) sub jb fdivs push adc jle bswap in test into jle adc in orb jle dec (bad) dec jnp cmp cmp in xchg xchg pop (bad) scas or jle sub mov insb jle lods scas cmp jle cmp xchg jle push cmpsl movaps pop and mov push das mov push adc shl cmp jno xor insl jge jg stc dec inc jle sub or stos cli jle xorl js,pn xor jle insl push std fildl push mov out fcoml stc or xchg ja xchg jle cmp xor out std mov in mov xor repnz jge sti daa add std fidivrl cmpl mov push jle icebp jne sbb test test dec out mov sbb out jle test adc adc and sbb jle out adc (bad) mov jle movsl pop icebp jp sbbb mov ljmp push mov jle lods insb push (bad) fistpll dec jle and int adc pop popa daa jle jg std call xchg not test loope lahf push mov lock clc insb push adc sbb movsl test test jle ds sbb mov clc jle lret outsl (bad) popa cmp jle or mov pop mov insl out push cmp mov push repnz xor pop xlat mov jle lea push dec xor (bad) xchg movsb std mov (bad) test sti sbb jg adc add dec data16 pop lods pop insl xchg out pushf dec icebp neg push sahf adc cmp mov dec out jle adc push js daa lods mov scas sub mull add mov jl mov notl jle xlat movl inc das xchg jle (bad) test or mov mov xchg inc fimull pop dec je adc sub jle ret cmp pop and popa jle push jb mov or outsb shld adc sbb sub or out pop das inc loopne jle xchg mov inc out and bound pop test pushf ret xchg jb cmp mov sbbl out arpl icebp jle mov call pushf mov mov icebp (bad) arpl shrb inc mov xchg dec call arpl and mov cmp sub out or sbb cs sbb jnp mov jno sbb addb (bad) mov jbe jmp add shlb js sub scas and hlt xor pop test push jl pop jns pop jle hlt inc dec xor inc imul nop jle pop mov enter or lahf inc outsl (bad) jp add jl xor push leave cmpl cmc mov cmp inc sbbl jle mov mov jp jle inc (bad) jmp std cmp bound mov fildll js jle,pt out push mov jns jle jp out xor cmp xchg or lods iret mov jle test adc and addr16 cmpsl sub cmc push jl mov sarl sbb add scas mov jbe mov int3 xchg xor test arpl push out les mov mov sbb or sub scas xor xchg sub movsb lock push jae adc mov push mov pop pop out les add jle xor pop pop out (bad) (bad) lock lahf andl or xchg test clc pop ret mov and std aas lret mov (bad) jne js jp jle call inc out fisttpll and sub jp dec loop into pop and jle dec mov pop dec scas mov pop js mov sbb stos mov jle sub inc repnz std outsl mov add mov stos cmp or hlt orl leave pop xor daa inc stos mov int3 ja lret ljmp ret jle in scas daa into sub pop adc lock jle je mov cmp xor xchg fwait mov add jns test stos das or jp out negl add scas inc divb fnop sub (bad) outsb cmp gs mov sbb dec add movsl insb aas outsl ret jmp test mov (bad) clc repz lock aaa jle push imul hlt jge add mov and aas or call mov jge jae dec lahf mov ds xchg jle mov mov pop clc imul push jmp mov or jle push ja mov cltd inc scas fwait leave out outsl push push xchg insb cmp inc jle cmp fsubrs xchg xchg cmc scas loope push in xchg push loopne ds (bad) js pop xchg jle (bad) jae loope adc xor int icebp les ss jle cmp dec pop fidivr lock pop hlt cwtl push mov cmp or and data16 push cmp jle xor push scas push sahf jle mov mov nop fadds aas vmovd roll test mov push lcall add jle add sub clc sbb fwait jle fildl (bad) and mov insl in js orb jle xchg mov inc mov inc jecxz push jle jns stos ret pop mov js cmp cld pop fmull addr16 jns pop push popf scas mov dec pop mov adcl xchg mov pop ret (bad) or popf fbld mov dec repnz movsl jae lret js insb mov lahf inc loop pushf outsb push (bad) pop (bad) ljmp or pop int3 jle out jnp imul les jnp mov outsl add mov jle rolb mov cltd testb jp mov jb mov scas aam inc test sub mov nop xor es out jnp call cmpsb jle sbb jmp mov xchg sub xlat test outsl testb jp mov mov outsb cmpsl fprem1 test sbb mov cmp scas (bad) adc push dec xchg xchg sub leave scas adc jl sbb dec cmp inc aaa add addr16 dec out iret loope in arpl roll xor jno cmc loopne adc mov cmp repz (bad) dec cli mov subl rcrb dec fs mov ss adc mov cld jle (bad) xchg punpcklwd dec das lret adc test inc fwait add xchg inc jae leave fdivrs lods inc addr16 lcall jb mov mov mov sahf in stos (bad) jmp jp loop fnstsw out jle mov ljmp sbb lea lods xchg pop (bad) int mov out mov into pop test repz sub inc (bad) pop fldt aam jle mov sar jle jg lock pop pop (bad) or or cwtl adc cmpsl idivb xor xchg jle mull loope inc imul aad xor jp jns jle in (bad) jo jbe insb js push daa jle mov cmp test xchg (bad) mov mov inc call das push mov bound cld xor fcomip mov and in xor jp loope std pop jle pop ljmp sahf mov mov repnz pop adc mov icebp jle xchg negl sbb mov and xor data16 and daa jb jle sbb inc lret jle push jmp pop sti dec insb hlt dec mov mov jge lret mov push jle xor (bad) or pop mov jle in pusha jne mov jle mov adc fdiv sarl arpl sarb mov cmpsb jo popa (bad) fcmove mov mov jp jle push sbb rcrb leave andb das pop push jle in cmp xchg add jne testb jp jg mov lods jns sarl aad loope and xchg dec jle mov adc xor das push repnz cmpsl jle cli xor stos arpl jno xchg ss lahf lds addr16 or or aam lods jle inc ret test in out mov xchg xchg icebp jnp pusha jae jle test dec dec sti movsb mov cld gs jl jle xchg sub inc xchg mov cmp subl jle,pt cmpsb (bad) xor dec jle add sub jle repnz cmp popf push enter outsb sbbb popa sarl les out insl sub rorb xchg dec aaa fldz (bad) int aas pop jp (bad) ficoml (bad) fisub push mov cmpsl jl shlb das dec lods adc loope lds push mov not xchg sbb (bad) hlt push jle aas in add mov es cmp pop jp not in inc js enter jecxz mov test mov mov inc cltd out mov lods jle mov scas aas xchg je lret xor mov leave arpl adc or sub jns (bad) out movsb aad test jmp adcl jl xchg jae jle mov xchg dec pop jmp sbb inc dec scas inc push inc fcmovnb jle push ja sub imul pusha popa mov xchg scas and in add push fnop push stos inc loopne jle (bad) inc lret lcall mov xor clc pop mov push ficompl adc xor sub add cld (bad) mov outsl jmp xorb insb fnstsw cmp adc idivl into push (bad) xor jbe or mov mov ret mov pusha jg adc jo mov push jle test pop mov mov fcmovu and aad mov jle ja insb push push mov push (bad) out jmp ds inc cltd test loopne test lcall cmp fsubrs (bad) jmp xchg cmp push icebp xchg loopne fucomip scas mov std and lods sarl rcrb bound jge xor sahf mov pop cwtl pushf mov cmp fidiv xor lods cmp and jle add je mov (bad) cmpsl jge ljmp or jle lcall jle push or push sub jle ja inc lahf out dec out mov pop add int3 insb cmp aad test jp sbb mov ljmp movsl jne pushf sbb or sub xor cmp sub xchg fstpl cmpl sbb mov sti lea sbb out rcl jle outsb ss jle jb test scas jle or pop xchg mov cmp iret in hlt pop jle xchg mov pushf outsl cld jmp or stc jle xchg push mov repnz test test leave ret testb pop jp mov js and sbb jle xchg fistp mov popf jle in cmc xchg int3 mov jmp insl jle xor cmp xor mov sub cmc pop mov pop les mov loopne popa insb pop jp out aam pcmpeqd mov dec jle mov push and fisttp cmp push jo insl lret dec das jae mov xchg in add sahf mov enter dec cmpb (bad) sbb dec xchg push pop test mov icebp outsl mov jo repz pop inc push cmpb in icebp scas jo cmp out adc imul repz and xchg pop in out rorb lret mov or sahf mov out iret jae rorl sbb mov rsm inc insl dec bound inc and xchg jae (bad) or jo test das fwait mov add sti sub cmp call mov (bad) mov repnz cmpsb cmp xor mov sbb jg add cmp shrb or mov add in das out cmp and (bad) add cmp jle mov (bad) loopne xchg clc push insb inc outsl incb call jp ljmp push cmpsb jl dec jle cwtl popf jnp dec sbb pop mov sar mov and mov hlt (bad) jne scas jle or xchg js cli jle gs sbb in (bad) mov xor mov xchg inc js cmp aam ljmp jns jle push sub jae loop jle cs jmp mov shrb jno xor mov shrl xor sbb xchg das flds cmp sbb xchg les stc xchg or adc std clc pop jp fs add dec mov aas fwait xchg out xchg fdivrs jno leave mov repz cs xchg jp xchg push pop jae cmpxchg push jl js sbb movsl stos (bad) repnz (bad) arpl jle movsb mov mov xchg cs mov imul nop xchg inc (bad) cld data16 sbb fidiv inc mov jae dec and popf jle loop in xchg sbb sub es outsl (bad) xor inc push stos jle pop aaa into add sbb add jb rolb dec jle jo js loopne out insl and es les sub sub (bad) sbb mov outsl jle xor sub push (bad) stos inc and mov inc adc dec repz (bad) jle pop cmp out fcmovne jle in add mov nop insb faddl mov imul fldl add leave insb mov inc inc adc jp cmpsb (bad) (bad) mov jp data16 imul jp jo pushf push clc push dec mov mov pop fs jle cli lcall xchg ret imul fldz lods sub cli in mov xchg stos jle cmpsb int cmc dec jae dec xor pushf cmp jge es ljmp stc cmp (bad) and adc sbbb jge lret insb inc jle mov dec mov dec pop ffree ror cli and popf js xchg push and jle pusha sti cmp mov or adc imul jns sub nop jle aas sub jmp fwait lds push mov jge mov mov sbb int jle in dec dec je enter lahf xchg mov sub or imul xor mov aaa int3 hlt inc dec pop xchg out lret gs cld mov call cli mov inc nop add jg jle add movsb fcoms xor (bad) push dec jle push inc int mov movsb mov xchg jp dec repnz popf clc dec repnz xorb js jle cli sarb push aas mov push dec fbstp test push add cmp cmp jecxz mov stc add cmp xorl outsl inc sbb sahf int call test inc pop jge hlt les mov stc pushf or jle jae add push mov jle dec jnp xchg ret jle push lods aam insb cmpsb inc jle cmp (bad) dec js jle stc daa std mov in ret mov out addl sahf aaa cli sub jp cmp xchg pop test loope mov adc outsl mov jo cli sub test mov lret mov call pop push jle xchg loope movl jo push idivb in fldt sar xlat jle mov repz pcmpgtd jno enter mov jmp test ss pop cmpsl mov jb in push mov adc fndisi(8087 pop sbb lds (bad) mov inc (bad) or andb in daa pop dec lods add inc lahf stos loopne jle or jp cmp mov jae,pt fcoml xor repz jle and enter jo cmp cmpl jle call and cmp out shrl inc and push cmpsl aad jge dec jg mov cld in mov ret jle scas scas mov test jle test imul add jle (bad) cmp loop loopne sbb fildl lods shr (bad) out std and sbb push pop jle mov or jle add hlt movsl sub pushf mov (bad) sub mov fdivrl dec shlb pusha cmp jle inc mov dec jle aas inc shll test jmp insb mov sub (bad) push (bad) fstpt fwait dec xor ds sub jg mov mov hlt shr sbb jle repnz out dec mov mov imull pop xlat jle pusha ljmp lock and in jle jno ja push mov fs sub inc lcall lret jbe bound dec fs push ss sbb xor or cmp jg dec pop mov (bad) sti mov ret repnz rorl jle push fs mov mov outsl xchg mov jl cwtl clc imul sahf jmp push add out jb xchg shrl add pop jl pop je mov dec test hlt inc adc mov jge mov cmp jle out out xchg mov lds jns lret mov jle lcall out jno jp mov or inc mov inc cmp or jbe or add cmp jle (bad) mov pop call and jle mov sub jle xchg in inc mov and sbb lock lret xchg jl and lods mov call dec push pop imul outsl test pop out push jle cmp cmpsb adc aam (bad) ss (bad) frstor dec xor ficoml xor nop and push dec cmc sub jg in mov ss movsl push or mov xor test shr jl rcrl jle cmp dec out out shr adc xchg repnz add sub mov mov outsl call rorb add cli push jns mov xchg adc dec add jae xor enter and and lock push out mov push aas cmpsb in andb jle movsl sbb pop jb xor jecxz cs inc jle xor xlat jle jb insb mov mov pop push xchg pop sub mov dec and cltd cld mov jle pushf push outsb fdivrl (bad) sub dec jns mov pop or jp mov push jbe test xor push add jle jecxz mov es push mov pusha sbb mov call stos scas jle cmpsb mov mov cmp cltd (bad) fadd sub shrb dec (bad) or jg jmp jle mov jb mov pavgb lods or aad mov jle inc xchg test scas in dec pop mov sti jle xlat cmp lahf xor into stc inc les add sub and pop cmpb or dec cmpsb pushf in jle ljmp jle ret add mov jb insb push (bad) bound insb jmp cmpsl inc in jle lock xor push and loope (bad) int3 ljmp inc jle dec out xor daa sub jle idivb jle mov dec pop jle inc jno mov jle pop (bad) fiaddl je jle out test ds sbb jp outsl cld popf pop jns xchg xlat ret add dec outsb jo arpl fwait in inc pop in test rcll out fstl jle shl xor fildl add out movmskps mov insl cmp (bad) into push scas sbb mov push xchg lahf (bad) add inc (bad) jle mov mov divl push pop daa xor aam mov jp pop stos cltd pop xor dec lret and xor rclb mov adc mov mov fsts pop mov sbb dec push outsl mul xchg (bad) repz cmp jle pusha jp push jle out and jle je jmp pop jne jle mov in inc cwtl push ss push ljmp pop xchg test bound xor inc fisubl lret aam jg outsl pop jle add pop jns xchg jle push lret cld or push imul xor jle pop mov jns insb and xor int xchg loop mov dec out or jp add js mov (bad) push les mov cmp loopne jle cmp dec js sahf lahf enter bound pop push sbb iret mov jle and jl fstpl mov add shll cwtl pop cmp pop mov out addr16 jg push jle ja lret dec mov lret andb jae adcl fisttp jle imul stc out jmp jbe mov cmp or std or (bad) outsl icebp lret lret outsl loope loopne pop (bad) stos out ret xor rcr icebp lds xchg out mov xchg mov jle push ret je cwtl pusha fstpt scas sbb xor cld jle lds xor jno dec das add jmp jle xchg xchg mov orl pop push jle stc dec adc xor inc xor sbb lods mov fnstcw fistl test or push wbinvd rorl jle cmp cmp lods sbb jnp cwtl mov jle test adc jno jp nop out insb add pop mov std pop stc shll cmp jle fmull insb rorl mov push loope pop outsb jle add aad xor pop loop jle and imul or fnstenv jle push icebp add les xlat mov jae rcrl leave out mov in jle or adc imull imul out adcl xchg adc jle ljmp jle xchg test outsl sbb inc fbstp mov stc repz out cmp insl push or (bad) scas xchg repz xchg add rolb aas sti jle rcrl out jle lods mov jo dec pop push jle mul or test xlat sub mov imul xor jle popa stc movsb add cmp iret lds cmp (bad) push dec (bad) in pop adc jle test ror jle ja int3 out fwait mov pop dec jp loope xchg or jle mov mov fcomps notb sbb mov add flds xchg pop call leave lea cltd aad pop in jns xor (bad) repnz jle and pop imul jle imul jle or ficomp data16 sub lcall loop cmp lock push (bad) mov jp fcoms xchg inc jle testb dec jle add shrb pop jle sbb jbe (bad) sbb xor cmpsl leave jg xlat insb mov outsb jle jo test test jb or sbb pop test xchg dec ret mov xchg inc xor xorb add sbb inc push push mov aad lock push fidivl aam popa test mov movsb out mov and push mov jge add repz daa jle mov (bad) out out jb xor in xchg daa movsl data16 jle aam andl xchg in out jo outsb lea mov xchg mov mov stc pushl pop jle inc jp and or cwtl fisttpll fiadd lret rcrl jle sub xor jecxz pop mov jle mov iret push add jle sahf push movsb jae (bad) (bad) jb cmp enter push add jle sbb mov jle pop add cmpsl cmp dec ret icebp ss movsl shrb push (bad) push jle mov inc (bad) shrl dec in adcb inc mov fdivrs cmpsb push cmp aad jns lret pop mov fimul loopne jle rcrl xor pop cld sahf into sbb inc sbb pop pop dec or mov pop insl xchg leave nop push jle ret mov stos ss hlt jp lret or fidivrl insb fs push orb push xchg fstpt pop fsubrl outsb (bad) jle shrb or xchg hlt (bad) jb or jle ficom popa loop iret jle fcomps scas pop arpl cmpl jg sbb outsl jl (bad) xor dec in xchg sub jle jbe sarl repz jp xchg fidivr cmp (bad) bound jle in hlt les dec jle,pt add jae das call cmc mov lds xchg jns xor xchg idivl and fsubrs jle fsubp dec mov mov xchg cmp add pop mov popa cmp inc jae lds loope scas push insb lea daa cmp imul leave pop pop or jle dec pop cmp jmp adc in ljmp cli insl in imul (bad) out cwtl adc popa mov add mov jb mov jle addr16 inc jno dec jle ss icebp jl cld jle and pmaxsw movb jb shl mov push out mov jg jne sub popa lods and fs (bad) jle cmc out xor sbb jle call (bad) mov xchg fs sbb aad adc enter push out cmpsb into stos lock mov pop aas roll or addr16 jge sahf ljmp (bad) jecxz jb push push jno movsl out pop and hlt xchg jle inc outsb push push mov xor add loope jle js sti pop jp sarl (bad) mov jle sbb add mov add jle mov in ret add gs adc adc push push xchg mov add adc cmp jp je inc pop into test jmp or mov loop mov jg xchg cmpsb cmp jle adc cmp pop jmp test pop inc cmp iret hlt mov mov jle daa ljmp and cmp mov or cli fwait push pop jmp sub fisttpl inc mov inc frstor addl insl xchg or cmp aad xchg mov jae or stos popf faddp mov mov psubq push sub mov jmp cli fwait outsl pop out pop jle in adc outsl lahf inc fucomip xchg xchg in mov (bad) mov push jle leave or sub push scas std mov test fcompl sub int jnp (bad) push cmp inc cmc cmpsl mov push push jns popa scas or or sbb xchg int3 jge jl cltd addr16 dec loopne sbb mov add scas leave sub add idivb les jle in ljmp inc (bad) xor scas jle das sbb jle push add test xchg rorl stos push pop or pop jp xchg nop pop push rorb dec scas or adc jle lea and fidivr dec mov inc mov push out xor out paddsw (bad) ja jle faddl xchg pop arpl addr16 xchg pusha and hlt fnstcw mov dec call jne imul mov out ret mov cmp pop (bad) testl in xor lods jnp nop jno test mov mov scas imull or outsb pop loopne jnp inc cmpsb jle adc add or sahf insb test fiaddl sub insl jnp clc jb cld sbb cli sub xchg jle or fiadd call push setle dec mov adc (bad) jecxz pop adc fcmovnb mov mov or (bad) dec jns jle sbb test xchg je ja xor add les mov ja add cmpl mov subb (bad) jp out rorl xor add push jle hlt loopne inc xchg or jns in mov mov or lcall out xor xchg vpcmpeqw daa insb roll mov xchg jecxz jle (bad) jbe xchg jle out lret (bad) out jle pop mov mov jmp push lods cmp in shrb sub adc outsl aad cwtl leave rclb jl jo xor icebp ljmp inc jg stc xchg mov popf mov scas inc jle call add mov popf xchg pop mov xlat fdivrs (bad) or adc jle or xor aad xchg leave sti mov xchg sarl in insb clc sub push mov mov xchg pop mov clc inc int3 jle rcll out mov mov out jl fcmovbe in mov jle or cmpsl into outsl xor jle fcom jle jns nop dec pop insb add stos sahf pop test and cmpl mov cmp imul and repz push bound lods mov xchg or sub hlt adc or jle push push mov je xor push jmp insb adc icebp (bad) sti jo call aad pop ret pop cmp push jle,pt lcall adc (bad) ljmp out (bad) js jge add loop jne xor sub mov jle je or iret xor outsl jbe lsl jle xor jle iret add cltd jle dec std sbb clc sahf scas and add jle daa mov pop outsl cli sbb sub and lock es aad (bad) fwait scas mov inc stc std jle repnz cld push sahf addps push xor loopne daa push sar mov and imul bound sbb jp inc add sahf cmp sbb cld test mov jne jge add sbb dec add es mov jle rolb int add bound cmp sbb xchg es mov mov mov and js push push mov push lret outsl add push inc icebp js std inc jle daa fdivp add pop xchg popf pop in clc sbb iret out lcall lcall sbb adc bnd jl xchg (bad) dec jle lret jae out cmp in (bad) xchg (bad) and inc pop (bad) jne (bad) mov ljmp sbb jp (bad) jmp (bad) jl (bad) mov (bad) addl in ljmp pop (bad) fnop (bad) jb xchg in nop aas xchg jle aas mov rorl mov out (bad) arpl scas mov jmp and mov or je add in or bound push mov std mov movsbl lea dec mov pop dec jnp jg jb (bad) mov pop mov int xchg or insl out notb xor mov add loop incb cmp aaa dec dec sub sbb inc xchg aaa xchg push xchg enter xchg mov leave cltd sahf adc sahf mov sbb lcall mov lock jg aaa jg add fdivp jg xchg (bad) sub les mov scas aas les pop jmp incb xchg test in or add decb js xchg fiadd sbb add test jl sbb jl add cmp jne jno xchg notl in leave and push cmp ja (bad) xchg cmp incb (bad) and incb in (bad) cmp incb pop bound add jne insl rolb (bad) lret dec inc (bad) and aas ret (bad) ljmp fwait (bad) and lcall push hlt sahf sbb cmp lds pop fldl lock sahf xchg imul (bad) mov (bad) xchg jl mov or cli xor push pop jle sub sarb add mov in jmp jno jp push sub adc xor movsl adc cmp xchg xor (bad) jbe data16 sbbl pop repz test jmp jle mov mov xor int3 out fcoml std imul test jle adc jae jle ret bnd outsl std xchg ret data16 mov xor scas cmc outsb sub cld mov adc pop inc (bad) jle sub ds das (bad) movsb jle jecxz jno iret je insb add add xor dec or scas pop stc mov ret jle pop fbstp pop xchg fs clc in subb ds mov sti (bad) mov jmp aad sbb mov jecxz push jne jle ds cmp mov repnz xor std jle dec adc sub test adc cmpsb mov (bad) (bad) mov in cmpsb fnstcw test frstor imul pop add push jle les sub mov push xorl loop mov pop lds mov mov lods jne,pt fidivr test jae out inc jmp out jbe js xor jle pop push out imul mov adc inc ja cmp xor jle sub push xor insb pop jb inc out mov add xchg out js jp inc outsl add mov push jnp xchg xchg mov cvtdq2ps pop xchg outsl xor jle push mov sbb jle out je,pt es lret jne test jg xchg out inc (bad) ret das stc jl (bad) jle neg pop pop mov jle cli jns mov jns pop fdivrs das test push imul cmpsb (bad) mov addl xor push movsb jp,pn cmpsl mov stos xor call dec in cmp sti fstpt xchg scas loop cmp xchg or fistp add dec xchg mov sbb js push roll sahf mov movsl xchg je mov incl std sub push inc inc out push sub cmp (bad) or fisubl addr16 lret push in pop push jle or mov pop test (bad) xchg push lods xchg (bad) ret das dec xor insb pop xchg jno xorl jle ds cmp pop inc and cltd mov mov ljmp les ds pop stos inc je push cmp cmp aas hlt xchg xor sarl push mov cmp ja pop mov aaa mulb xchg outsl repnz add jae jae daa test xchg out (bad) out jno mov cwtl jl aam xchg mov adc jle mov fnstenv jle sub and pop jmp test jmp mov mov jo xor inc jle addl jle pop mov and push inc xor mov mov inc hlt dec imul imul jle cmp jb fcoml xchg (bad) jle imul cmp cmp cli nop inc inc std insl add ret sbb inc cmpsb cmp (bad) jge jle mov add das cmp jle sbb in mov out mov inc es mov jge adc sub in mov fs jle imul pop into xor ficom pop (bad) jle pop lcall mov mov vmovq mov inc and jno js test (bad) sarl push xchg cmpl xor out jle jnp dec jb xchg push outsl out mov mov xor adc aad mov sub cmc xorl jle ret out lea imul jno push mov push sub xor pushf sbb in jge cltd (bad) jb mov sub mov xor fcmovnbe cli jle setbe out sti loop movsb out push xor pop out in xor jle stos mov jle jecxz,pn push jb mov push jle xor sub jle jmp in subb mov cwtl cmp xor mov xor sti lock cmp aam in (bad) pop adc or (bad) repz lds mov add mov jle inc pop ret inc dec sahf jle hlt orb inc lods inc cld arpl (bad) lcall mov idiv and fs dec fildll daa repz repnz jle stc cmc mov add inc jle jnp jmp jle addl fdivrl cltd jle cli adc xchg mov cmp adc mov mov stos bound and jle out in ja inc out iret pop adc mov cmp stos fisub adc (bad) mov mov test jle repz movd sub jle sbb clc out sub mov pop mov adc jne push ficoml pop jp sub mov jle int mov and jge out jle jnp ret icebp mov push jle xor dec daa js ja jle cmpl pop out insl xor xchg jno std inc clc xor pushw mov (bad) lcall jle call inc jle jle repz cmp add push imull add clc mov push add fdivl cmp into xchg lcall cld aas cmpsl sub lea insb mov int3 cli ret mov decl jle mov repz cld mov xchg or mov jle scas jne sub and ss das jle mov arpl mov mov push cld jle fcomip (bad) xor test inc cmp jmp add xchg (bad) pop clc insl pop add mov jmp xchg sbb js xchg pop sti xor icebp sbb data16 pop and jge mov sahf jbe cli mov mov shrb notl dec jle repnz push fiadd andl mov cld or cmp mov lods adc adc add or je and push scas pop add xlat cmpsl or pop inc pop and mov cmp adc sub imul adc addl mov daa add das inc in mov movsl test test inc stos jle and jle lods xchg pop outsl test ja popf cmp xchg es xor ffree repnz fdivr (bad) outsb imul outsl pop js test jmp pop (bad) jo and jle adc sarl popa outsb iret stc push cmp pop repz pop xchg jp sub cmp or or jle addr16 push push jmp pop sbbl (bad) stc (bad) jb insb mov (bad) xor pop xchg push cmp xchg add repz ficomp push daa jecxz sahf jl jle mov pop xor divb jle dec scas fstpt pop vmaxpd loop jae jle mov or jo cltd hlt jnp scas add dec sbb in out mov xchg jge,pn sbb shll add push pop xor (bad) enter flds push xorl add jle in pop sbb in ret jp mov jle adc shrl ja idivl mov jle pushl inc imul jle sarl add jne cld xor out sub add pop lahf jno mov xor pop fidiv adc (bad) ss pop das jno mov out xor in imulb push arpl into fidivrl je mov test mov movb inc or add or lods repnz daa out cmc inc push mov icebp movb (bad) in add jle inc mov ss in outsl mov data16 pop mov push jle sub xor jnp idivb loopne dec scas stc aam into xor ljmp das shrb jl addb xlat cmpl push mov stos jg add ret aaa jle push sub (bad) ja dec mov test roll jle lods jecxz xchg in mov mov inc sbb test out xchg cmp les inc ret test fwait cmp (bad) (bad) outsl jle cmc mov test into cmp jle cmp out and aam adcl xor jle test mov sarb out in mov jle pop pop mov adc adc xchg hlt loop ret test jle cli mov and inc pusha xor sbb (bad) fs jle cmpl faddl cmp push (bad) clc hlt fidivrl pop scas loope aaa dec cmpsb push dec (bad) mov sub xor inc inc enter or xchg or bound jg adc cmp mov jle jne xchg inc lcall lret cmp cmp push bnd rcrl icebp add jg pop push adc fdivrl cmp dec es mov loopne sub jmp xor push adc jb or icebp cmpsl jle sub cmp mov jns out rorb loopne jle xor mov adc pop jge fcmovnu je ss cli jp xchg jb jmp xchg jns mov adc xchg cmp test add negb xchg push jle aas pusha cmp dec jecxz jle dec xchg dec in fdivs xor jle xor mov loope insl add push jle inc rolb (bad) push sti xchg sbb lock push sub pop xchg sub out lds pop mov add pop pushl ja adc mov jle jle mov dec jo jns xchg jle or lcall scas mov movsb jge ja xchg (bad) stos mov pop push pop inc js scas scas testb jns daa lea daa (bad) insl imul cmp ret xor mov (bad) cmp xlat shll pop test in mov add insb push cmp outsl repz mov and ja test cmp test bnd mov jae sub sbb jne mov cmpb andl (bad) cmp scas xchg jge loopne fldcw mov mov addb cmp inc in insb push mov ds xchg xor push ss jle fcmovu (bad) test test scas xor out jne jp jmp fimull cmpsb inc insb sbb jle adc mov je lds test stc and mov mov cmpb imul jle std mov cli insl ret jo push add push xchg push faddl enter stos (bad) fimul jle jno,pn out and jbe dec leave loopne jg jb jle mov pop and add or inc out mov jle stc je xor mov enter lods mov jle pop pop ds xor xchg push fdivr jle leave jle jp ret rcll sub jle mov sbb jb js cmp mov pop mov ja jge mov mov or les cmc xchg jns jle in inc imul repz lock jle stc sar and test mov jp cmc mov iret outsl jge scas loope and mov inc fistpll lcall jle xchg xchg dec push ljmp gs and in inc clc scas mov mov jge xor jmp inc test sti pop ret test loope out cmp pop outsl jns stos jle iret cli icebp popa mov jle gs push jg addr16 lret add jg sub or mov adc pop fdivrs jbe sbb mov or out cmp mov hlt mov jp cwtl int3 jl pop mov mov addr16 inc cmp mov jle,pn xor int lahf jl shr jle js,pt ret scas inc mov jne pop (bad) jle mov and ja stos pop cmp (bad) in mov (bad) dec scas dec cmp test cli adc std scas (bad) jmp cmp xorl movsl xchg (bad) scas lcall mov xor jle cmpsl sti or fcoml orb sbb ret loop cmc cli movsl (bad) lods jb push push pop sti or jle fs popa inc out add icebp or (bad) fcmovnb dec xor xchg sti xor test xlat icebp jne dec cltd mov sub loope sarb repnz cwtl mov push cli push jle or inc out jle repz call jb cmp add or repnz jbe mov sbb aas or sbb fisttpl sub jle out ret test xchg jbe add or inc ret jp jle cmp stc push lock push push xchg jle pop pop sbb jno inc call jp (bad) mov jle sub (bad) test ljmp mov cmpsl std mov mov push cmp sbb leave xor cmp pop add jle sarb jle out adc imul lcall insl int sti xchg ds in dec pop xor jns mov (bad) sub mov jno jle jg push sub repz enter jno js in jle hlt mov lods test ret inc leave cmp stos dec aam outsb push scas xchg mov add loopne scas add mov xchg or push sub mov sarb xor cs inc outsl fisttp add cmp scas mov fisubr lock into mov pop jp loop fsubr and ret sbbl xchg add repz adc loop test jo test adc test or test xchg cmp out push ss mov inc icebp dec xor jbe xchg (bad) inc ja sbb jle push push pop leave imul sbb ja test jl in jne fucomip cmp push jle adc inc inc jae dec mov (bad) stos andb xchg data16 in xor je mov (bad) ret dec sbb or xor jle sub xchg mov adc or mov xchg lea cli jle push (bad) dec in mov xor andb dec outsb cld (bad) xor cmp add std ljmp jno jle push adc xor add out faddp mul xchg cmp clc ds lret aaa jns fsubl mov lcall jae cmc cmp faddl jno (bad) pop les ftst add xorb jp insl lds cwtl fcmovu push jb jle js enter mov (bad) insb lds jmp xchg rcr stos mov mov repnz das jne scas inc insl ds jle jg pop add or mov adc push xchg jle inc mov pop mov push repz mov inc bnd jmp jle xor loop cmc cmp aaa push lret fpatan in test out pop sub push mov jle xchg xchg andl test pop mov mov jle cltd out aad sbbl push adc jns jnp (bad) dec jle xchg add dec bts jle mov out repz cwtl outsl fnsave jge inc movsl pushf cmc aad mov les push mov cmp push pop jle xchg fldl jmp xor sbb test pop test test repnz xchg mov add aad test out stos loope (bad) out mov push sub jne dec out lds add fdivrl inc sub cmp or mov (bad) jne in ds (bad) je sbb addl out mov dec xlat sub mov cltd jge sbb push inc ja cld lea popf pop es sub fs mov add cmp mull add out pop jl aas jle xchg int3 pop test jns xchg jmp sbbb pop jle lods mov fwait je jle lcall jp call mov xchg arpl sbb xlat out and ret push mov jle ret pop aaa cmp cmp add pusha test jle imul mov mov outsl xchg and jle (bad) mov clc inc mov outsb (bad) loopne in sub pop cmc mov cmpl stos push imul inc cmp jle ds jle add gs xchg test jle inc int push sub (bad) fsubrl mov inc test add mov outsl push xchg mov (bad) jbe cwtl jle jo (bad) or out je cmp jns push jle repnz test jp shrb pushl mov or mov lds fidivr sub mov aad or lea mov and jle jl mov push sahf add jle insb sub pop std push mov data16 ja mov xor lcall push cmpl mov push adcl jle and adc pop scas pushf jle xor (bad) repz add jle inc jae data16 (bad) jle and shrb je test sub mov jne jle or push mov jbe add and sbb aad xchg jle xchg das mov sbb jp insl imulb jmp jne call jle (bad) lea roll test xchg rcrb cli sahf pop sub roll xchg je ljmp stos lret test (bad) cmp lret clc aaa in out scas std push mov gs jle (bad) jae insl mov int3 jns xchg push ss and pop rolb out (bad) inc in aas out inc and lods std psrlq and inc aas sahf fmull add push (bad) jle lret jle mov (bad) icebp jb into idivb lock mov inc and scas add xchg jno dec or cwtl test xchg xor clc jle dec xchg mov arpl jmp jle out inc movsl mov sbbl fldt dec xor mov mulb jle popf sbb xchg (bad) mov cmpsl jle inc (bad) xchg inc adc out jmp jle push ret mov inc xor mov ret xor cmp js jle aaa and jmp aas into sbb gs scas or ljmp in mov (bad) out jle adc or scas adc in xchg jle dec addr16 sbb sti or sbb scas sub cmpl mov jo imul dec push icebp repz mov insl jle in ss vcmpps and jle clc push jb jae pop sahf inc pop cmpb scas ss imul inc test inc seta (bad) xchg ret sub test shll pop mov push lock or inc outsl pop stc jmp and mov incl into jle cmc scas cmpsb pop lahf and mov push loopne test jge (bad) jns outsl or adc js mov inc adc lods jle imul test mov fnop jle jge stc paddw scas inc (bad) repz adc fwait cmpb cmp scas stc aaa mov incb add sahf jp cli and test mov xor xchg icebp inc push jle lods fnsave push add jle stos pop jne cmc mov cwtl fist or ja loope idiv or jmp lds mov idiv sbb jle ja mov decb pop cmp cmp mov jle sbb dec xchg imul test mov jnp setns add insb lock mov mov je xchg jge pop scas inc stos push inc call (bad) vmovupd jle fnstenv shrb orl inc and loop ds pop and in ret addr16 push add bound jle out ja xchg call cld scas jecxz aaa pusha mov rorb sti mov push outsl in std cmp push dec sahf pop sub jge outsb stos out jnp in mov pop dec mov cmpb (bad) jmp cmp js lcall and bnd sub fistpl push jle test sbb adc jle cmp pushf jp (bad) leave pop xchg push mov jle pop adc cmpl adc mov xchg add mov mov cmp mov cmp xchg mov or fisttpll xor jl adc in fnstcw outsl inc mov xchg jle xchg sub into mov jnp daa jle test es test jmp push push jno std sti push jle jmp std jle imul insl jle (bad) hlt dec (bad) sub ljmp flds cwtl data16 and ss mov out jle pop lods lock mov insb cmp les jae pop jp stos outsb jle repz out mov ds sub stos in mov pop mov push xor cmp clc sub rcl call pop cmp jnp out inc movups push sub pop jne xchg jl scas in ljmp jle inc jge xor int mov xchg daa sub cmc jle out inc imul mov mov repz shrl add mov loop or ljmp mov dec pushf dec xchg negb and flds inc out subl cmpsb push cmpb pop cmc adc dec pop jle add mov insb insl sub hlt jp adc or jle (bad) push jl call aaa int3 lock ljmp push add or lds shll and jns gs jp das nop pop repz jle adc mov jle,pt movsl (bad) xor (bad) lods mov pop mov sub sahf sub jle push pop test sub xchg clc ret pop xchg push scas ja xorb inc jle or sbb mov iret jp push enter jle mov jnp pop cmp ss jle adc aad and imul inc jle in rolb add dec shrb push mov call jle push js and outsl hlt mov repnz xchg jmp jle inc (bad) jg sbb inc sub add xlat jle int3 xor inc addl adc cmp (bad) or pushf jle or out dec xor fwait jle mov (bad) sbb jle and or mov jmp jle pusha inc daa xor adc or mov jp addr16 cli cld (bad) ss push push (bad) jne push jb mov (bad) mov cltd out gs xchg (bad) out pop jnp cmpb jle pop dec in jp cmp xor mov push cmpsl xor lods lds sbb add xchg movsb inc out xchg jne and je add lea adc jg and jle pusha mov inc cmc into jno push sbb insb inc fsubl add jl and in lcall test sub jl sahf mov iret and mov jnp mov insl fiaddl lret mov imulb add cwtl popf test or push sti sbb jl jle sbb pop mov and in jmp add jg ss cwtl lock dec idivb jp jg incb jnp (bad) mov cmp or cmp lcall bound fidivr pushf push (bad) in xchg jg lahf popf add or jnp ja ja jle incl adc cli dec jns clc insb dec js pop imul cli (bad) sarl jg push outsl arpl aaa cmp cmp jle xor xorl jle cld aam pop cli clc jp jns pop xchg sbb test inc loopne lret jp cmp cmp test inc push bound jle addl (bad) push pop add js in adcb xchg (bad) jle add (bad) data16 int3 sbb std ljmp inc add xor jl lret loopne test jp std jle jnp sti stos test jle or scas sbb or mov iret cmpsl jle sarb add aas and cld or and pop roll sbb jle jp stc dec xchg mov fiadd or sarl cli popa jns outsl fwait js pop in mov jnp clc shlb bound je jle xchg fldl jle add xchg cld jp jg cli sti ljmp insl scas test add jno cmp (bad) jle push sbb test ds in je into inc xorl (bad) jle jg pushl scas jns pop add clc mov cmp popl js inc jle push sub adcl xchg out mov data16 div stos cmpsl jg (bad) and sbb (bad) jle add add jg add fwait cmpl scas jge cld push jl test jp add js add and mov jge mov stos inc js jnp cmpsl jle inc stc xchg jle add andl inc jnp jle arpl cli out jns outsl clc push js aaa fdivr jle cli mov inc clc out add notl idiv sub xchg jle xchg mov lret cld cmp mov fild adc scas mov mov stc (bad) xchg jl cmp fwait bound aaa jecxz jle add iret mov jg inc js clc loop jns pop jo adc add mov sbb sahf lret add mov push lds out imull (bad) jle std lret jnp inc sti add add pop addl (bad) mov push insb jle repz push add jle (bad) jp stos paddb jl fs fdivrl xor cwtl out and dec pop push xchg mov negb push pop jne test sbb movsb bound dec cmp mov cmp out lock adc jl insl xchg push sahf jne xchg das std nop jp push subl cmp dec push mov popf xorl pushw inc jae sub inc push mov jp xor ja (bad) mov out inc xor addr16 xor nop jne xlat iret (bad) (bad) jle rorb (bad) test sti push add test push loop inc mov fwait add or lods mov xchg stos push add mov mov gs or sub imul shll jle add and daa dec mov jp mov sub sarl and dec lods push movsb lahf mov fdivrs dec hlt add (bad) cmp aas jp mov clc xchg outsb jle cmpsb mov sbb pop jle dec or fidivr divl push (bad) jb leave jle or mov xchg xchg int mov ret jl icebp jle lods mov and pop adc ret pop imulb inc clc aad mov sbb jmp cmpsl jle add gs mov xchg jle das lods pop add mov push and xchg insb movsb (bad) dec outsl clc and cmp mov jle fs lret mov mov movsl fiadd lock sbb into mov push xor mov fcmovbe sbb aas repz loop hlt aad lds out dec insl mov jae orb adc lds ss (bad) loopne pusha js cmp push insb xchg int jne scas fsubs push clc cmp hlt push cli mov xchg out xchg addr16 out cmp and lea or pushf inc xor xchg sbb jle mov push ret sti mov les (bad) fimull cmp movsl and lods in lds je outsl out sbb (bad) xor push push cmp jle xor jl cmp or sub rcrl loopne repnz mov jl sbb les pop (bad) xlat ffree in sbb insb sbb jnp adc test aad mov mov xor sbb (bad) movl sti std jle out addr16 xorl pop cli mov mov ss jge insb add cmpsb mov push movsl rcr or jle pop or jb jnp into fwait pushf loopne jnp lds and jle test push fldcw mov jp add add jle iret mov mov test xchg and mov addr16 lods pop mov fidivr aas dec pop pop cs test lock lret dec test js inc mov dec push insb es scas add sbb scas mov shr lahf rcrl jo xchg push pusha jnp sub les test js ja je cld gs rorl jno (bad) cmc xchg jle pushl mov ja push mov leave lahf inc mov jle xchg test xlat add inc scas pop (bad) out push mov add je mov jle push xchg xchg cld inc jle rcr pusha mov adc inc mov out cwtl push add push pop (bad) xor mov fistpl bound inc jp pop adc pop jle xchg cmpsb outsl cs es dec arpl in jnp or test xchg lret aaa xchg and inc fwait push imul jns js xchg push xlat dec pop rcrl loope (bad) aam scas pop push scas test fisubrl jle xchg repz leave xor dec (bad) call jle fcoms iret push lret mov out xchg in nop es cmp jg mov jle mov bound fstpl adc bound pop xor rcrb mov mov (bad) mov int flds sbbl xchg mov cltd not pop shlb jle xchg sahf dec sub int push aas bnd sub mov rcll dec aad (bad) fwait xor aaa int3 cli sub seto (bad) cmp stc (bad) outsl jle rorb inc jle je inc sbb mov add sub shrl jb test xor jp (bad) mov push jg fsubr dec jle ja (bad) faddl jmp std or jle xor fnop fiadd dec jbe pop jmp sub pop mov cmp in out jbe mov push xchg jmp nop insb push lods test mov jl mov sahf lcall xchg fcoml sarl adc inc jle je inc and lods pop out shrb xor xor jle fmul popf pop xor (bad) ds mov (bad) dec mov clc adc in dec jmp mov enter jle xor fnop fidivr jle es jbe push repz jle jnp cmp std jle add loope jno sub lock inc outsl mov fild or fcoml inc jle sbb mov out sbb mov mov sarb sarl mov popa aas add jle (bad) jbe into push lret insb scas adc imul or xchg stc xor jle fldenv add push dec jle mov jmp jae dec shr mov sarb es cli xchg imul cmp cmc iret fldz pop sub xlat push jl xchg lea das ja movsl sbb imul pusha sarb icebp jle stos shl or mov aas fwait cld out pop (bad) jle inc add sarl adc movsl push dec mov jle mov fsubrs jp pop adc jmp xchg pop addr16 inc les jle test repnz (bad) arpl scas mov xlat jle lret es jle test add cmp dec pop in bound jo aam faddl jl fpatan js pop cli out scas movsl lret into nop js clc and jle or jns stos pop jge pushf jp,pn test mov push test mov gs rol add push mov dec mov out fiaddl je adc (bad) ss nop xchg add out test dec cmp test add in mov xchg and inc xchg push add pop xor mov add mov jle ret mov lock add xor ret es jle daa push movb sub and jo scas mov outsl cli arpl sti pop xchg jle inc pop mov xor dec mov sub (bad) lods push sbb pop dec cmp aas jecxz inc incl jle xorl inc jb sub out dec ret push bnd fild adc and cmp fisubr jle xor inc insl jge stos jle lret pusha std inc ret jle sti xchg out ds imul mov lods dec push cli ja cmpsl sbb jle aaa pop push xchg inc xlat ret lahf xor jle mov dec jle (bad) jne gs push adc stc inc out dec fidiv in xor sbb fsubrs mov cmp ja ret cmc mov scas push or jle mov enter xchg data16 jle sub mov mov stos aad jle outsl negl push shrl cwtl leave pop sbb mov pop inc sbb push in cmp push ss cwtl mov jle loop (bad) xor inc jle pop push or mov pop movsl decb jle out lods addr16 pop mov pop out stos xlat cmpsl jg in cmp outsl pop xchg mov jle lods (bad) jo jle jmp popa and pop jle stc mov (bad) adc jle inc mov jmp mov mov stos sbb (bad) mov xor pop push sbb jns jp add lock xchg dec inc mov jle cmc cwtl xor pop (bad) lods jle test inc pusha pushf lahf jle lret sub lcall fnstcw or int sbb mov ds js inc jle xchg cltd insb mov xor inc fwait in ss fidivrl cmp insl cld xor jle sbb lods fwait das dec xor mov adc inc les insb rol pop std insl lret and jecxz lret jle or nop pop push in jg pop insl (bad) (bad) cli daa outsl fstpt push jne inc and jo rcll fidivrl jecxz es mov jle aad insl xchg push mov jle mov shrb pop lods stc loope push mov cmp inc dec arpl aam cmp and lds xor (bad) mov aas jl scas dec inc in mov or fbstp (bad) jle in (bad) ja mov jle ret arpl (bad) mov sti ja ljmp test adc xchg int3 add (bad) jle dec mov jle jp clc fnsave scas and jg jae xor je inc jle in mov std jbe cs xchg std sbb mov jle nop cltd mov js mov dec sub xchg adc orb (bad) mov and outsl push scas mov cmp icebp add jle jb inc add hlt out mov xchg pop dec jle mov xor xlat inc jle mov cmp jle push mov rorl loope push imul push sti xchg push lds xrelease scas test enter loopne xchg outsb js push mov fbstp jbe mov xchg cmp xchg das idivb fs adc xchg sub inc pusha mov sti sbb cmp pop sbb xchg fsubrp pop lds adc lea xor fs fwait xchg lahf mov add jle movsb test ja inc call out mov adc add pop mov enter jge xchg fcoms clc inc insb es cmc mov js push cwtl (bad) scas iret xlat jo aad imul sahf jns cld mov push pop and dec insb (bad) sti cs decb lock sub xchg adcl jle mov out cmovbe add (bad) mov aas insb push dec ljmp rcll or sub or scas fsubs cli scas shll sar or fsts jl lahf orl mov jle adc ffree (bad) push jle add sub jle insb xchg inc fcoml add nop fisttpl fidivrl andb loopne jnp rorl inc pop jl cmp sbb jb sahf ljmp xlat test dec add xchg mov cmovne mov (bad) mov pushf out insl jle jb scas lret aaa out xchg adc ss sbb jg pop pop adc jp mov and lods jecxz sarb inc out bound sub divb mov jle flds jle push xor jle (bad) vmread push insb addb fmul jle push push cmp push sub mov out inc scas repnz jecxz pop and inc xchg adc clc jns cmp jge int3 pushf dec insl jle lahf iret sti mov imul clc les sbb sub test clc lds int outsb aaa jle adc mov jne out js imul jle dec xchg jp sti in cld mov pop cmp pop xchg out xchg jmp ja cmp jp idivl xchg jle jle and jecxz sub icebp xchg loopne insl mov inc sub or test jg into lahf xchg jae test test popf daa mov fnstsw jb iret push sbb dec jno rcll insl pop lods jle adc je scas push ds adc pop imul xchg push jbe xchg movb jl or pop cmove jns (bad) stc popa jle sbb sbb test and outsb pop mov adc aaa aas add jnp je inc mov sahf (bad) cli xchg fimul clc loope mov mov adc sahf cmpsb pop lods adcb dec jg dec xchg push sbb fild cmpsl out jns das mov adc std cmp cmp jle leave lahf sbb adc iret repnz loopne les cltd push mov (bad) (bad) and mov aam sub je mov pop jmp popf mov inc inc jle push pusha aad mov mov punpcklwd ds xchg xor add mov mov sahf dec test cmpsb es jp inc jo inc repz jnp int3 push das (bad) jle add popa sbb loopne mov std push push dec pop cmp mov dec mov cmpxchg mov sbb pop out jns jnp lahf aad push call int mov sahf fs loopne jnp mov imull lret js xor dec push or xor xchg jle fwait dec lcall jle jnp shrl out add dec xor push add pop add leave aaa pop xchg stos outsb or (bad) jne mov xchg lret adc sub xchg push xlat out ss scas repz jo shrb xchg pusha sub jge mov lret pop add lcall jle push gs outsb mov xchg sarb sub xchg xor pop fdivl (bad) jle xor fldenv jle and jecxz and adcl (bad) adc movsl adc sbb pop jle mov push and mov jle and adc xchg push neg inc sbb pop lahf push aam jle push loop sbb fwait mov jno cmp jae aad mov clc sarl scas test or adc jno or inc (bad) std and cltd jne push stos popf and ss add jl or jle std push aam xchg jge scas (bad) out jp (bad) scas lret sub test jle xchg and dec xchg jle xlat sub cli jle pop stos mov (bad) mov inc add (bad) mov jnp ficomp cli test scas lret mov or imul dec or in jl,pt sub mov cmp jb mov adc lods repz cld adc (bad) fucom movsb push mov adc pop xchg pop adc inc pop sbb nop (bad) and jle ljmp pop inc int push mov js mov push xor push clc mov pop leave add and pushf inc jb or or adc xorl add popa mov dec js,pn addr16 adc xor add fsubrs test or inc mov rep test jns fidiv xor aaa lods adcl dec inc xchg push pop lret dec rep hlt mov adc loope mov sbb fdivl xchg imul jle pop push pusha insb movsl dec daa dec mov (bad) jp sarl adc jle and xchg mov icebp out fiadd stos push jle insb adc enter scas push jo push (bad) pop cmpsl jle cwtl test das jle push leave jge add inc jle inc dec addl into jle jnp sbb mov mov mov add jle in dec in (bad) sub push mov jmp test rorb cld test jle jb cmp fs (bad) dec mov aam jle repz sar push cmp das or dec lock cmp jle loope das subl add fstps mov and dec jle data16 aam cs jle jnp push js sti nop into (bad) out add in les jl inc push jle in gs (bad) js jnp sub xorb sub fucomp jns test sub stos sub rorl cs mov jmp mov or inc or sahf inc push xchg add jle fsubl pop insb (bad) bound aas and mov mov xor pop sbb mov push mov sbb cld cltd jle mov in or push xchg out iret mov push sbb test cmp dec pop out cmp xchg loop inc xchg push jle inc adc jle xchg test repnz rcll cmpsb inc sbb add out call dec cmp lcall cmpsb sbb jb pop scas dec xchg jle sub mov lds inc push xchg and push jle enter cmp jne mov inc push addr16 xchg mulb or scas ret mov dec loopne neg inc cli xchg cmp mov lcall lret mov cli sub mov pop mov add stos mov mov jle pop insb in fldl cli add push adc xchg lock mov or jle inc sub ret pop jle out xchg (bad) mov out bound xchg inc mov cmpsl adc fwait rcrb ds mov fs out sub cmp and aad add mov stos aam push adc cld iret loopne outsb (bad) (bad) jle pusha cwtl movb push jle mov push jle inc int3 jmp jle cs in pop ljmp push inc jnp leave xchg (bad) fistpll sti flds test add movsb push sub out xchg pop add dec xorb pusha out aad jle sub jle xlat aas push cmp pop xor std jo std mov (bad) ret inc dec insb popf mov in adc xor jle int3 aaa pop push fbld test push jp push mov fidiv or and jne loopne jle stc xlat sub out das loope out rorb cmp add std add adcb sbb push xlat push pop sub xchg outsl shrb adc pop repnz mov nop xchg jl pop lcall sbb jle test add inc dec negl fisttp pop nop insb jge incb xchg sbbb dec mov das fdivrs and mov sarl and mov clc jns jle imul adc mov scas add jns clc das fnsave fisub (bad) mov xor js clc aad push pop cli and scas xchg faddl push jnp ja jge fstl fidivrl ds add jle or adc pop jne jmp jnp mov jae std popa lcall sbb test jp mov stos pop cmp mov popf loopne inc es add jb fnstsw insl insb test int3 jo mov cmp test ficoml jle outsb or nop roll out loopne dec repz es mov jle mov adc jle push out and imul mov lods xchg jle inc jl pop stc (bad) ss scas sbb inc xchg sarb inc adc cmp jns push cmp dec mov das jbe push jle and data16 sub adc pusha scas and mov jo jno or mov jle jl js cmpsl jle adc gs sub ffreep or xchg cli jbe inc push push test dec int dec mov clc fbstp jle sub mov inc pop js jle fcomp cmp jae and jle pop cwtl and xor stc sbbl dec jle mov add jbe jle imul cli lock adc pop adc in mov sahf cmp loop push jle iret pop add (bad) jle xor jecxz push icebp mov push xor in cwtl repz jle dec inc xlat mov stc pop pop (bad) mov xor mov iret and mov fisttpl js mov and out cli repnz pusha mov imul out mov das cmp sbb sti popa pop loop jle sti dec daa jb fistl repnz add mov jns cmp lahf jle lock (bad) fsub dec cmpsb jle mov dec cmp fs inc or inc add ljmp out jle jbe dec ret jno data16 mov push mov fistpll insb hlt pop mov cmpsb outsb jg pop pop shlb add cmc fsub jl xchg inc loope jle xor mov sti xchg jp stc adc cmp adc jle mov xchg scas popa notl ds fldl outsl push dec cmp xchg or test push add jle sbb movsb addr16 jne sti sub mov cmc cmp std icebp lahf in jle pop pop inc jle popa insb inc add xor or xchg mov pushf in jle xor mov call imul sbb jle inc lock push jle mov xlat mov xchg je push or dec jp pop pop sub jl lret add in jle (bad) cli aas xchg lahf add jnp sti mov jle cwtl or roll push mov ja push insb lret xchg and xor loope int3 xchg sbb xchg push out test pop cli jp lods daa orb dec fcoml jo mov cmc loop push xor je adc into into in lods sar jle addb ret movsl jp std in arpl sarl cmp inc sbb arpl dec mov (bad) cmp xchg das cmp push std nop outsl cmp mov jnp inc leave stc jle arpl (bad) adc jge fdivl rolb ret sbb pop insb mov push jl mov sub pop jb bnd mov (bad) rcll jle adc loop test dec cvtpi2ps push js push sub popa xor adc (bad) fisttpl es sar sti jle fadds mov or push pop mov adc xor sbb inc push aad jg pop jle shlb jle paddusb jle bound sub or add sub fcoms inc inc test imul ret insb xchg clc scas jle lcall jle pop and or cmc dec lahf adc jle add lcall jne xor add xchg lock push imul sarl insl xor cmpsb shlb jbe cwtl outsb inc imul cmp pop pop nop jle das adc add push fisttp jle adc dec and jp jno in ret pushf jle adc xchg mov outsl xor loop lods lods jle sbb repnz pop pushf jle inc mov dec xchg cwtl mov in sahf scas lds test (bad) std mov inc movb dec mov idivl mov jmpw fdivrl sahf inc (bad) fsubp out mov mov std mov scas pop mov mov jns lret mov pop test outsl sarl pop insl jp iret lcall mov sbb jle test jge dec xor aam scas mov pushf jle mov icebp jle test dec in jle pop push sub mov adc clc lds outsl xor sarl jl jl pop add (bad) aaa cltd xchg dec or cmp cwtl pop jle,pt movsb outsl push dec scas sbb push data16 mov xchg inc jmp sbb ljmp and jle (bad) faddl in lds dec push jae jp addl (bad) xor mov lds add jle (bad) fmul xlat dec xchg clc mov mov repz push scas std inc jle sbb popa (bad) pop mov sbb cltd mov rorl jnp xchg jg hlt imul aaa push in orb call mov add dec test (bad) jle les scas mov or mov adc jle inc and xor subl mov lea test jecxz jle dec decb push xchg loopne xor jp inc sbb std and mov mov test inc jle pop mov pop je push out pop les mov jle mov mov xchg xchg (bad) pop rolb (bad) lea aas cmc xchg sbb cmpsb movsl xlat subb jge (bad) hlt movsb jle mov orl mov pop stc ficoml cmp cmp in loope lahf xchg sub aad scas sub pop imul and xchg mov (bad) jns iret ss lcall add jle sbb rorb mov sar xor mov mov jp clc or jno aas les add sti jle (bad) hlt push fwait dec mov data16 xor jb xchg mov and mov shll push pop jle out fs in sbb and stos outsb jo test inc push push jle call js ss jle and sub sub lahf push jle fidiv dec inc xchg ds jmp lds data16 jle push fmuls jmp outsl dec jle mov out fldt inc xor in gs sbb out push arpl subb push outsl sbb mov mov jl sarl adc lahf push mov sub dec jno jle or or lahf mov std scas fidivl and push test sub dec jle adc or jp inc pop stc jle cwtl test ds xchg mov fdivs outsb out repnz jg mov pop pop xor movb test lret pop ss addb sbb mov addl stos and scas scas popa scas add addb mov sti ljmp sbb add push rol loop mov jp add (bad) adc xor adc pop inc push pop jno jl jle cmpsl sbb movsl inc or aam hlt jle addr16 xor gs xchg pushf sub add add jle fldl fildll cmp pop and sbb xchg inc out pop das outsl mov scas cmp jle or push pop jle popf aad aas adc push outsb sub lret jle rclb xchg inc bound ret mov inc je loop or xchg imul mov scas mov inc mov adc das jge call lods enter pushf dec cmpsb fstl icebp cwtl add add and loop push arpl fdivrs xchg jecxz push sub hlt jle xchg cli out mov jle paddb xchg jle or jle jns nop in ds scas inc cwtl mov pop int std xor negb mov fs imul inc pushf (bad) and pop out das push cmpsb xchg das scas mov push jp mov xor xorl lods insl xchg loop popa adcb test jle add push psrlq xor xor mov orl mov fwait cmpb mov and (bad) jg aas popa imul imul ds dec jno nop push sbb xchg push pop popa push in (bad) aam sub xchg nop (bad) jno push pop fldl and lea push xor adc dec xor jge pop dec pop xchg add cmp shlb mov roll sarl adc xor jmp or lahf push jecxz pusha int mov jno mov std jb inc adc outsl and shl sbb icebp stos gs mov pop jmp add pop mov sbbb xchg jecxz pop sbb cmpsl aad leave ss cld insb xor dec mov aad mov outsb push decl sahf jg cld lcall lcall xchg popf popa push add dec hlt pop jbe fimul jge add pop nop sbb ja sti into sbb movsl data16 lahf sbb (bad) mov xchg mov mov mov pop adc aad std sarb pushf cld and es push cmpsl lods pop add pop or add xchg ljmp (bad) in pop popf jl cmpsl arpl orl mov pushf xadd fistl lds inc rol es push scas out mov mov jmp jne loopne push pop sub or out add cs mov pusha add dec and movl sub inc in scas loopne lahf cmc addr16 ror push in adc cmp jae inc xchg daa xor push cmc in dec lods mov mov (bad) es idivb movsb push adc cmp nop addl mov repnz fstl popa mov (bad) cmp cs add icebp dec ficomp sub mov negl jge repz jno xor mov jge ret sarb or adc dec ret or jge aas mov fadd loop loop mov mov ret jecxz pusha mov fisttp jp dec mov imul or add (bad) shr lock xchg clc or mov into jg orl mov mov ljmp mov pop dec add mov jo sub mov add and stos pop movsb loopw arpl dec dec sub mov xchg pop or xor pop mov rclb fisttpl gs cwtl push push mov add sbb vpaddd xlat mov cwtl shrb dec xchg mov ds sbb mov jne inc mov sbb outsl mov add addl sbb cmp push sbb xor outsl ret add fwait pop mov shl or cmpsl sahf jno push aad imul adc popf out push and inc pop imul rcll les push jo lret lods inc add push cld lods add mov testb pop or fwait aad push and scas fistp jbe aad or test fmuls xchg leave cmp pushf dec mov ret jge sbb and adc cmpsl fwait jnp add lret xor xchg jmp sbbl xchg xchg idivb ja stos and pop jb es std jmp jle jl test ljmp mov scas or std sbb mov imul ret jl dec es js push fwait add jle jg xchg scas aas lock and test int scas scas in xorl jp mov xor leave addr16 add inc fwait (bad) outsb mov inc mov mov scas mov rorl add mov fidivr cld cli sahf adc mov mov mov js jecxz inc cli cmp inc mov sahf std pop ret (bad) push decl and add inc jl add popl lods add push cwtl (bad) mov add jl (bad) movsb add add sarb inc sarb ds das cli js xchg inc mov aam inc xchg cwtl cmp push notb add inc mov push cmpl push sti lahf mov (bad) js mov xchg mov pop mov add (bad) hlt inc mov les xchg cmp ja push ffreep rol mov mov jl sub add adc lcall js or mov mov aam inc test cwtl cmp lods mov cli mov mov inc cmp les (bad) pop cmp sarl add add decb cmp add mov lret add pop mov cli add fimul xchg aas mov mov cli (bad) std ds xchg cmp pushf ds cmp add loop or or cmpsl aam push ret mov add cmp incb jge mov les cmpsl les cmove lea (bad) push cmp movsb cmp cmpsl jno mov jnp inc cltd mov mov cmp (bad) xchg inc lods sahf mov mov cmp (bad) mov js (bad) mov dec (bad) jae and jae or mov xlat pextrw add mov lods inc mov add inc mov inc pop daa (bad) cmp shr pusha inc js dec mov (bad) lods les xchg mov lods inc jecxz add add cmp lea jnp jle inc mov fadds jle pop mov adc jle test jnp inc addr16 sub or and jae xchg andb cmp pop jle jns mov (bad) lods (bad) jle push mov fs jmp or sarl bound nop shll or cmp aaa icebp je (bad) push outsl sbb test gs or insb (bad) roll ret mov jp and and adc fmuls push cmc xlat imul lock test cmpb movsl jle lret adc mov jle out push inc and (bad) mov pusha pop xchg jo xlat stos push and add mov lcall jle cmp les inc lock mov pusha inc sbb stos xchg jle mov (bad) in ret push out cmp test hlt jne arpl lds in sbb fistpll pop in jge cmp movsl mov adc mov insb jl xchg jns leave ja jne jb inc lret insb iret cltd mov fildl mov jl jnp (bad) add jl sub test repnz (bad) (bad) push std mov lahf (bad) pop (bad) mov bound ja sti mov das mov ja (bad) repnz xchg mov aas sub mov sub repnz js mov dec and jge push nop popw cwtl cli bound push adc (bad) incl mov subl add (bad) mov and nop (bad) ja add pop sti gs aas (bad) cmp andl pop cmp aas and repnz (bad) (bad) fiaddl mov repnz jl (bad) aaa jle lock jns lahf into mov stos add xchg pop ja xchg cmpsl inc rcrl add jg and (bad) pop (bad) cmp (bad) ret add inc jnp mov or cwtl mov mov (bad) pop cmp test dec push inc loopne (bad) jecxz or mov (bad) fdivr xchg push adcb jl popa adc mov lock cmp mov js ret rclb scas push cmp jecxz push xchg and mov or cmp repnz test push mov scas lcall inc add daa (bad) lahf inc push movsb jle add (bad) cltd cmp mov jnp inc stc jnp repnz (bad) dec clc mov mov mov cmp sub pop das push jnp push fisubrl inc pop inc fs faddp pop pop jl mov and jg mov call rol push xchg mov bnd mov data16 mov daa cmpsb add inc je (bad) mov cmp add addr16 fildll out in jns mov ja xchg ja jg sahf subl (bad) ja (bad) ja jg mov aam add xchg cltd (bad) jb xlat cltd jp xchg cltd cmp aam xchg ss jae mov cmp repnz (bad) imul test pop daa lds lret cmp arpl out shlb ret cmp aaa xorl cmp (bad) add pmuludq mov test lahf (bad) jb aas mov cmp xchg lcall jg out arpl pop test xor ret add inc xchg jnp cmp bound mov popf cmp bound push scas jg mov mov (bad) daa lret sti pusha cmp jns mov add mov hlt inc xorl inc mov addl inc mov add ds aam pop mov sahf jg bnd add cmp in cli (bad) pop inc jg jge add ds arpl xchg (bad) jnp add xchg ds cltd xchg ret std mov in inc incl add lcall in repz inc movsb push jnp and jne rcrb jg cwtl add mov in mov and mov roll add or ds and xchg shlb mov and insb daa mov mov add add inc push mov pushf xor push mov and inc cwtl lock cltd daa adc cmpsl inc (bad) and lods inc (bad) jl shr push jl aas jg cmc fmull repnz (bad) mov jne mov add adc inc add idiv jg or ljmp inc and inc cwtl insb lcall xchg movb (bad) enter xor pop mov (bad) adc push inc jg inc dec (bad) outsb mov xor xchg mov pop (bad) loop inc mov pop inc mov daa mov push sbb (bad) adc cwtl and mov addl cmpsl mov mov inc std dec in mov cli add scas gs pop sub adc pop cwtl (bad) loope cmp inc inc xchg loopne lods shll cmp lods fs in xchg (bad) rcrb push mov pop repz or cli icebp les inc pusha ret jne cmpl mov xchg and imul stos test aaa imul jle rcll in daa mov mov stos dec lds in jle sub cs out fdivrl xor scas repz call push mov (bad) jle sar fnstcw cmpsl fisubl xchg repnz sub (bad) sbb cmp jle jge push push pop pop dec jle cmpsb inc mov out jno rol cmp lret mov cmpsl add xchg (bad) in lds push (bad) push push sbb pushf out out pop sbbl pop mov sbb test (bad) lahf inc mov jge ffreep (bad) fldl nop psubd fstps inc xchg and mov inc add cvtps2pd add add outsb push jg jp (bad) pop xchg sets out xchg pushf sbb mov sbb adc loopne jg cmpps mov (bad) cld xchg and xchg cmpl incb (bad) mov pop (bad) gs (bad) ret pop loop and fsts lcall cmp sbb lahf out push add and mov add loop and pop xchg pushf pushf fbld or jns cwtl popf cvtdq2ps jl movsl loopne (bad) and ret pop cmp (bad) pushf std leave mov cmp push lahf and pushf inc (bad) fldl lahf pop mov and addr16 pop and sbb test pop pop and add xchg sbbl xchg jp lcall sti mov cmpsl pushf retw pop sbbl push pop jp xchg bndstx xchg aas stos mov test mov stc or pop (bad) or cmp or jb mov and inc ret pop js cltd pushf pop sbb and (bad) lahf add add or pop sub addb inc jae mov sahf pushf bswap ret pop mov add xchg negl outsl lahf mov aas add xchg das pushf dec ret pop add jno ficom mov (bad) or xchg maxps rcr lea cmp dec (bad) jle mov leave rclb sub mov jle and pushl out mov mov jnp mov fidivr xchg (bad) mov ffreep and (bad) pop push test outsl pop iret mov es dec jle (bad) rolb xchg int3 jle cwtl push popf adc jns jns add leave imul jl push out jmp adcb cwtl in stc mov out movsl (bad) aad cmp or inc out cmp movsb fldt sbb js inc test pop dec pop repz jle mov cmp scas or (bad) aam ljmp mov cmp push pop test adc add in aam mov pop andl mov std xor pop (bad) cmp rol lret jp mov push std int xor sbb add inc cmp sarb test adc jae mov push sbb dec mov cmp in adc ss enter add jle mov gs ds jecxz inc push mov call cmc pop fldenv out (bad) cli adc jle pop hlt add lock mov iret popf mov cltd test scas mov lahf test add out mov aad test (bad) xchg mov jp adc push stos sub cmp test mov jbe dec jle sub push jle cmpl pop sti and inc pop pop cmp add (bad) popf hlt insb xlat out or cmpsl data16 jnp fwait push test movd inc movsl adc cmp cmp in inc in shr fldenv mov ja jns jl mov inc mov xor das mov test cltd jle or push lods mov jle popf movsb push xor mov stc mov and mov int mov jle lcall add icebp jle dec mov data16 mov aam mov fs scas push popa (bad) adc aas jle jae stos inc mov fiadd sub pop xchg and pop cmp xchg pop popa sahf sti adc ljmp in push lds jle cmpsl mov enter fidiv xor jp leave daa in inc lret pushf fsubl sub add (bad) les push aad rcll (bad) push jp inc mov xchg mov lods push int pop and lea jl dec int3 mov mov sbbl lds pop repnz pop insb enter (bad) rcll mov test test icebp jle cmc pop jns loope xor xlat ljmp ds mov dec ror jl push mov inc repz lods and mull or jle mov mov jle dec jmp bound pop lds decb je shrb jge cmp out push iret pop cltd lods or mov adc ds adc xchg push popa addr16 out addl xchg jle and (bad) mov lods mov push jno das add (bad) scas jb jnp stc mov jle mov scas jle pop lret popf push iret cmc mov adc jo and pop rorb in cmp jle sti cltd (bad) adc cmp jle push lret (bad) jecxz jns gs test or enter (bad) out and movsb sub movsl mov add jle lods in mov xor fwait add jo jmp sarb sub or cli lods jecxz aas push dec cmp pop pop cmc mov es jle imul cld imul in cld xor es mov push dec xchg inc cmc add dec jge in out (bad) jle mov lret push inc dec sub dec and stos popa jp adc sub mov sbb inc pop fwait add cs into inc push std ljmp push (bad) jle int3 mov fnstsw mov (bad) out xchg jnp or push (bad) sbb push pop pusha jle stos xor and popa add mov jmp divl loop sbb stc pop pusha sbb rcrl (bad) lock orl dec pop mov data16 cwtl fstps jle or inc and cmp pop in jne cld jle sub jecxz xchg add push (bad) (bad) (bad) aad test jle into jno jle outsb popl xchg es test int3 out jmp mov mov push push jnp cmp cmpsb mov pop xchg push bound mov pop cmpl jno cmp mov mov push xchg cltd pop cmpsb jo inc pop pop jp cmc jno stc add xchg dec push (bad) neg mov jp sub dec ret or enter cmc popf clc ds jle out aas cmp lret cmpb jno sbb or xchg and or jecxz jle loop jns call out push loope sbb pop xor sahf mov xchg cwtl outsb or jb fdivrs dec sub std mov mov inc sbb xor in cltd lret stos adc out into pop or insl test out pushf sahf jp stos add jle mov pop sbb cmpl xor mov aam sbb clc push test mov push jle and (bad) out mov jp cmp xchg xor cmp mov scas mov jle pop ret jle and and je aaa jle outsb xor into lcall scas inc xor jb leave jle dec lods je cwtl out jle add or adc fdivrl xchg push cld and jle das mov aas mov (bad) and aad jle adc inc xor rcrl scas sub cmpsl nop inc imul faddl fcmove mov js and jle leave fisubr cmp mov add mov mov in or lea inc repnz cwtl add jle pushf je and inc leave sbb vpaddq and jp (bad) jle bound adc ficompl (bad) mov pop imul data16 in push add (bad) test in dec je leave push movsl decl xchg pusha (bad) and test (bad) adc mov jle fs mov jle mov xor outsb popa hlt ljmp (bad) xchg lods xchg inc sbb mov pop jle add (bad) lea jmp jle stos lahf (bad) cmp pop jl cmpsl mov jp clc jle fsubr xchg lea cmc pop in lods cmp pop sub lods adc xchg add adc jle mov or jae je or inc out cmc mov adc in sti std add mov clc jp mov push cltd mov ret in pop arpl mov fmul (bad) jle repnz inc js sbb (bad) mov add xor cmpl icebp jle xchg xchg jg inc flds jmp add xchg mov outsl sbbl sub xor in lret loope stos xchg roll sahf xchg jae aaa (bad) xor iret jle dec and cmp sbb mov sahf inc xor pop inc mov scas and popa mov ret xchg sar lret stos das jle and sub jle nop or inc sarb aaa add imul jb inc fmull and xchg pusha ficom mov cmpsb repz jp test dec scas mov xchg inc stc call mov mov testb gs jge jle repnz in insb movsb cmp xor jle lods fdivs sub jle mov jne jecxz xor inc sub roll cmp in mov mov inc js,pt pop push cmpsb and fmull push lea daa stos xchg push inc std clc fstpt fisubr loopne mov in jp pop xchg dec sarl jl mov cmp mov lcall xchg cmp (bad) mov popa pop das push add sbb mov popa shlb mov mov aam jle icebp pop xlat push sub outsl sbb xchg in jb movsl cmpsl pusha and pop jle es inc mov xchg test add xorb sbb jne movsb rolb (bad) aam jmp mov stos bound dec fisubl std into lock scas push das imul idivb add xchg and fisttp dec loope mov jle ret insb sbb jle fst or movsl popa mov lods jnp xor (bad) xor in inc mov sub ljmp push jno ds sahf jge stos (bad) stc dec aaa cmp aas push add lcall fldl pop pop daa clc and loope lahf in lcall je shrl jle xchg cmp add or decl js mov into jp test cld add sbb nop jle jo bound pop jge push jle push enter pop jno rorl scas and outsl jp js fcmovu dec das xchg jle popa mov mov pop ja jp icebp cld push bound jecxz xor pop mov outsl das out pop lds cltd test aaa nop pusha pop push arpl leave js addr16 sub pop cmc call jle aas push sbb push nop enter or and insb add inc out stos mov jg addr16 and pop jle cmpsl cmpsb sub cmp inc mov clc mov outsb notb xchg lock adc add cmp push mov scas aam dec fbld jns xchg cmp mov pop addr16 jle stc push insb mov ret xchg scas dec ds in cmpsl add inc jle xchg int sub insb test push pop mov ljmp jle push jbe xor dec adc adc cld scas sub sub orb push bound test sbb mov push xchg in orl mov xchg add xchg sub rcrb lcall pushf or stos (bad) cmp dec clc std cs scas sbb bnd jns lcall test lds test mov sub jle int fs (bad) xor inc mov inc cltd scas sbb iret aaa xchg out divsd xlat jae pushf mov fwait jbe jns pop into push (bad) mov pop addl push in xchg xchg jge adc jle sub mov adc sbb xchg add jle dec lcall mov dec lret fs add sub jbe sub jle sbb pop loop insb scas jle cwtl mov or movsl push icebp dec sub dec cmp mov enter sarl jle adc cmp in clc jb mov test scas cmp shrl add scas or les xchg inc mov popf sub inc cmp xchg pop xchg rcrb cmp movzbl movsl xor pusha test jle aam mov lea dec leave mov jge pop jle (bad) shrb loope inc sahf ficom xor js pop sub sub adc xchg jl mov daa cltd sahf xor mov adc ret push mov mov rolb decl ja mov xchg jl lea mov dec push xchg ret scas inc jo mov in leave inc mov inc cmp mov sub cmp and cmp in push jle cli cmpsb push xor jle mov scas hlt inc sbb jle mov mov cmpsb stos test shl jecxz adcb mov insb inc cmp (bad) push lea negb fldt mov jbe test jmp pop insb mov push jge push arpl mov pushl or adc xchg jp jb xor or add and lea push sti out icebp sub mov pop push xchg notb push add outsl xchg clc pop xchg inc push cmpsb mov xchg pushf mov push in mov xchg sahf outsl flds es mov add movsl nop arpl sub jle mov in cwtl sbb or jge push pop adc inc xor fiadd xchg popa out sti lods inc jge mov ret jle mov mov inc inc mov jge jle jmp std das (bad) insl imul imull push jle and sbb fdivl mov jmp cmp (bad) pop add test mov jbe xorl lods pop int3 out leave fldcw (bad) sub pop xchg (bad) mov xor out pop sbb iret test pop fwait out call (bad) pop inc jle add mov mov cmp inc xor add inc cli test scas mov in aaa pop jp push sub aas cmp out lea jae push ss xchg cmp out cmc jbe push stos aad xorb ret enter out mov scas pusha sbb jne (bad) sbb push loopne jle out dec mov mov mov cli test iret repnz jge int3 inc pop jle movsl out jmp scas and mov imul js lcall rorb jle les je sub (bad) test xchg dec out sub jecxz ret imul and repz xchg sbb push xchg lret jle xchg pop and cmc mov sbb pushf jns jbe cmp pop jle aad and jle or dec insl push cmp and jbe in mov sbb push fcoml je jle popf into mov shll mov pushf add fstps std add xchg mov xor fdivl subps pop and inc cli inc push movb in mov jp stc jge rcll cwtl jle adc or hlt mov (bad) daa dec push jle mov inc or popa mov out dec or jne int3 mov cmp sub clc test popa fmul xor jle lods and dec (bad) and adc push cmc xchg enter pop fadds scas push sbb mov aad xorl aaa lea into aas mov movsb dec jp inc scas or sahf aam pop pop int xor jle loopne xor jle fsubrs push fiadd inc jle lods int cli pavgw inc add shr mov data16 xchg sarl xor mov orl dec pop jle or push cltd (bad) sarl fidivr sbb cs dec mov push and and into adc jnp int cmp jle and mov (bad) lds scas pop ror push (bad) insb push pop imul or and jle iret dec stos (bad) or fiadd mulb sub sarb mov in inc and cwtl ds jbe jle inc sub mov and fwait rep xchg push pop xchg (bad) test push adc push outsl out in jle mov movsl jecxz dec lods icebp push js (bad) adc loope sahf sub xor or sub xchg inc aaa lret arpl addl ds inc addr16 sbb xchg add jle aad popa cmp repz push repnz xchg (bad) xor fidivrl cmp xchg repnz ret mov loop lock cltd (bad) pop popa test push pushf xchg jle jbe or lods in movsl jle push push data16 sub sahf pop (bad) jle xchg ret xlat lret out xor orl hlt sarb fwait xlat mov jle adc in jp pop arpl mov leave pop outsl mov jle ja lods dec es andl and jge push scas cmp fsubrl aaa add testl cs jbe mov cli push jno out bound jp mov jle rolb jg pop cmpsl lds push or fcoms ljmp push hlt dec lcall xchg imul imul mov (bad) popf jmp ss jle hlt ds (bad) fildll jmp pop stc mov icebp mov fiaddl (bad) cmc scas jl (bad) lock jle adc sahf jp fldenv inc adc repz aad mov out ret jg xor lods call scas daa pop jnp int jns push jle mov cld mov adc fsubr mov adc leave jno pop pop jp push xor and enter mov xchg adc xchg or daa jb mov bound inc push rolb mov inc mov arpl sub jle dec and xchg jmp inc pop repz and mov jle add fs imul add loopne repnz je arpl loope mov pop push call movsl jne sbb pusha mov adc stc sub ljmp inc adc addb jne cld xchg jp dec sbb jae test jne cmp or lock je cmp mov mov mov xchg and and fnstsw mov or push fisttp pusha adc ret pop ret and xchg in loopne pop movsl outsl or test sub test int jnp inc add (bad) mov or sarb xchg mov and lods fs stc insl pusha adc cmpsb pop rcl xor cmp xchg mov or sarb xor pushf mov dec popa rcl xor sbb insb mov mov stc mov add call mov imul or xorb dec loop notb sbb push xchg mov mov sub lret pop mov add mov movl pushl movl movw pushf movw push lea jmp push pusha lea jb call xor call (bad) pop fild jb adc cmc lea jo and sahf repnz cmpsl inc aas sbb lods int3 (bad) je add test stc pop lds mov sbb stos mov pop inc inc xor loope cmp pop int3 lock and mov inc dec repz xor jp fs jae in fsubs clc (bad) (bad) pop adc mov jns jb out stos mov xor aas sbb push adc mov push jmp je jne ds mov jne ds mov gs push sub stos int3 xchg dec gs cld lret fcoml xchg stc mov outsl imul add xlat lods addl fwait int xor divl dec adc ret js in fsubs xor in sub ljmp je not lods sub movsb int popa les dec shrl jge cld roll adc mov lret inc pop sub sarb popl mov inc pop jae cmp into in push stc and sbb inc das clc mov stos mov pop xor jnp mov mov cmp adc out lds push mov imul lcall push cmp imul mov in or fbld mov outsl xchg insb xchg cmp push sbb les xchg pop pop out sub ss ret addr16 mov mov rcrl popa loop pop jle mov jp shll js lea bnd dec in add mov pop jg add dec out cs push or pop (bad) movsl push imul outsb pushf push insl add pop pop dec fdivr jae cmp mov push sbb mov sub mov imul in cmp movb jmp out stos aam je test mov lods dec ss outsl inc add mov ss xchg addr16 mov out lods imul mov cmp repnz daa fimul imul add (bad) adc inc idivb xchg jbe (bad) mov mov jp ret or adc popa ja hlt jns dec jbe jg pop and roll push jno mov stos mov je sahf arpl insb adc mov dec inc jb mov mov push inc ret dec inc or sub mov lea dec sar fs push mov in mov imul pop inc loopne loope push nop std jne and xlat popl outsl dec lret les push push mov sub loopne sbb inc adc test outsb mov and ficoml pop loop sub pop mov push cmc shrb inc arpl fs or test bound dec add imul mov aam mov cmpsl repz jb subb mov dec int lret lock in and or jge push and sbb dec dec imul test scas icebp sub fbstp bt sub mov jmp stc sub clc pushl stc pushl popl cmp cmp push call not not movsbw mov pushf pushl pushl ret lea jae cmc mov bsr inc mov btr dec shr shld mov pusha call ret pop and je shrl mov fsubl jle pop and xor pop shll fadd idivb fisubr add stos (bad) sahf dec stos push (bad) cwtl loop inc int push popa sub jo xor daa test cli scas mov inc enter cmp shl push insl cmp push fdivr scas ret cli pop mov jl repz inc mov adc mov cwtl lcall je mov jnp inc or cs and call ja nop pop cs jae pop xor or jmp in popf cmpsl dec jle add fsubrl and pop xor jns fcmove fs icebp sub fadds pop jmp xchg xchg arpl cmc xlat fcomps sti ret mov lock mov addr16 imul mov dec jp sbb (bad) pop xchg mov cmp repnz add rorl shrl inc int3 and imul xchg and cmc mov lods call add jns inc push dec scas xchg jl sub xchg data16 lret leave mov insl and daa icebp (bad) cltd (bad) scas data16 jmp out fistpll lock push scas std ljmp into cmpsl push push in daa popa (bad) mov lahf adc hlt arpl mov cmp sbb adc sbb cmp ja jecxz dec bound sub in or fwait insb cwtl add cmpsb inc ja inc pop or lret push sbb and mov dec notl ljmp fsubrs leave lret jns mov int3 mov pop repnz loope inc and loop bt jmp pusha mov bt cmp lea jnp jae push jmp lods inc lock je jecxz bound fs stos jl out mov xchg xchg (bad) shlb pop jg mul mov cmp mov aas adc xor orb or loop jnp or cmpsb lods mov inc test lret leave sbb pop cmp pushf xchg mov popf mov sbb cmpl pop out add mov test je aaa repz (bad) xchg or jmp xchg pusha xor leavew xchg push and ret mov push adc mov lret cmp fucomip aas and dec or adc push scas scas out mov adc xchg mov sbb jmp sub sahf mov fidivr pop mov leave inc lret popa and arpl push lds pop pusha pop xlat or mov push add add sahf pop ds pop xchg push inc push movsb mov dec sub mov loopne jge cmpsb dec out outsl pop dec (bad) out aad fs sti orl adc push fninit xchg lret (bad) ljmp mov popa popa dec cmp mov mov fcoms sub push jnp shr rcll and rcll les ds cmp loop test mov mov lds outsb push jae ret popf cmp loope jae push daa packsswb test and mov cmc or adc popa cmp cli push test pop pop and aas or movl fstps push in rcl fwait repz mov jo gs dec push xchg lret jmp add dec pushf into in cmp jns fldt xchg aaa les scas into sub jbe lret in mov add dec sbb lods jne sbb and jg jecxz xadd clc or jo loop sbb cli popf xchg xchg lret xor push xchg jl repnz iret jl ret pop mov call and jecxz push cs xchg mov xchg movsb mov outsb and int xorb add fstps rol imul int3 rcrl in cmp xchg fsubrl add cmc rolb fs pop test xor jg sub lahf mov add fistpl hlt addr16 adc cltd sbb mov and mov adc mov cld push in add xchg fsts or jne outsb xchg lret fs data16 fcmovu in add xchg loopne scas into cmp stos xchg lea (bad) pop loopne scas xor aaa xlat out je outsb inc decl mov ja fbstp xchg dec dec cs inc push ljmp jns add mov lcall cltd iret (bad) inc pop jle test les loop leave sub sub cmp or inc insl pushf es or push pop andl lcall jecxz data16 cmc jns out rclb dec iret rclb clc adc daa push xchg jne (bad) xor push aad pop sbb push mov lcall jmp mov ja (bad) leavew adc xor lods cmp pushf pushl call jmp xor or mov lcall in jg pop in mov cmp fsubl sbb rcl push std push scas lods lcall sbb outsb shll and fprem1 leave stc and scas outsl and test jle ljmp jae cmpsl (bad) xor sub jo xor out dec adc jecxz addr16 push lret mov xchg push lds add rcl adc sbb movsb aas sub mov jle cwtl xor mov out pusha xchg xlat jl cmp psrld daa daa xor sub xchg jo mov inc or jns ds mov push inc mov stc mov cmp jecxz jle jns into jg fmulp pop (bad) xchg jecxz mov mov mov test pop outsl rolb mov incl arpl out add stos mov jecxz inc mul aaa jns jg ffree stos xor outsl aad addl (bad) mov cmpsb add add mov or int (bad) lods aam mov aaa ljmp fimul clc les xchg lret or stos jns mov mov out mov jl outsb in fsub sbb outsl (bad) jp jge jge push loop ret subl stc mov inc cld adcb xchg (bad) mov aad or jo xchg push mov test and (bad) loop out cmp cmpsb sub pop mov stc pop jb (bad) mov or incl loop or jns mov aas add and mov push ds movsb ja adc mov cmp int mov arpl or dec sbbl in jg mov fimull mov dec push xlat mov xor or scas xchg (bad) sub cmp addr16 lahf dec (bad) scas jne ja lahf mov push mov pop mov mov mov (bad) or (bad) pushf inc mov aad pop jo xchg and out fnstcw mov repz xor add (bad) push adc add insb shlb xchg imul adc jle iret sti rorl aaa mov xor cmp loop mov aam mov xchg aaa push (bad) jecxz repz jns pop incl cld jne into pop jge pusha cmp xchg rol mov mov std xchg cmp adc inc mov gs (bad) adc (bad) cli notl addr16 fucom nop jg (bad) cmpsl or adc jecxz shlb xor fwait (bad) xchg sub pop popf jg add lds push (bad) daa and inc adc inc jecxz in xchg test fsubrl imul (bad) mov movsb adc mov dec ret inc jo push sub lret or mov ficomp clc mov ffree mov stos cmpb pusha lcall lahf repnz jo pop insb into xor jb mov xchg mov mov loop (bad) cmp jmp aaa mov pop insl sbb cmpsb fcompl aas shr mov pusha push mov mov xchg dec int3 adcb outsb sub cmc pop add outsl clc fdivl (bad) sahf (bad) sub mov rolb andl jmp test add clc sbb pop arpl mov cmp inc add jge pop stos xchg mov pop and mov sahf fsubl (bad) push outsb inc das mov sub push push sbb xor inc cmp (bad) pushf push aas cwtl mov or mov and sub stos clc push push stc test inc jno (bad) popf ret sbb mov scas cli cmp xor mov mov stos mov dec sub popa xchg rcrl (bad) sub dec jle mov scas mov jnp test pop (bad) jmp (bad) cmp aaa xchg mov das outsb xchg test cmpsl xchg sahf sub fwait add mov (bad) mov arpl jns lods cmpl jl aad sub and pop (bad) nop ret sub in sti lahf int3 and sarb icebp (bad) xorl add sub xlat add cmp (bad) mov mov shll xlat stos xlat cld cli pop push pop scas add mov xchg push std xor data16 sahf aas repz jne aaa mov xor push sbb push and pop es pop jb aas mov or jecxz inc jg pop lcall lahf stos pop push mov xchg loope pop shll subb stc cmp stos (bad) cmp and pop aad cmpsb mov outsl dec outsb jl into mov aaa and lods or insl out push cmp jp jnp pop and lcall out pop mov ds enter je sbb rcll (bad) ss inc aas sarb cmp (bad) mov jnp sahf clc pop mov lds cmp dec out fistpll rclb inc jae lahf mov mov rorl jg ds mov test add dec sbb ja mov in xchg repz push rol push pop cmp cmp xchg mov mov ljmp rclb lods xor pop test loopne adc inc orl inc (bad) jl test loop jecxz repz xor pop xchg das fistpll sub adc mov mov mov sub jo xchg add mov xor sbb imul in mov mov loopne xor and fiadd lds mov add push into jno pushf dec sbb (bad) mov int3 xor movl adc andb stc mov jb mov (bad) xchg sarb mov sbb and roll stos inc push ss mov fadd (bad) scas mov adc mov add mov fisttpll fmul lods sub cmpsb cmp movb or jno gs loop in mov outsb and (bad) jp pop mov clc jp addr16 mov fmull mov ljmp push cmp dec jg fs sub outsl ja std sub adc test jcxz aas bound bound pop mov aam mov mov xchg sbb cmpsl jmp scas add pushl lds cmc jg mov push adc mov aas add pop inc adc stos dec test mov mov mov stc popa (bad) outsl cmp jp inc adc mov cli dec js mov cmp (bad) adc lock xor dec nop/reserved pop fimull adcl mov jnp jg xchg adc clc fwait ljmp xor xchg loope mov aaa jns sub (bad) (bad) mov push (bad) (bad) lea mov cld mov lret adc add lods or inc xchg mov cli jmp (bad) xchg pop push mov sbb inc int3 js (bad) sbb (bad) mov and adc xchg mov repz cmpb cld cmp inc jns icebp clc out idiv add jns loop adc inc xchg jmp mov pushf addb and je fmulp jb sub mov pushf pop cmp add sbb xchg popf loop aam mov mov mov test incl pop sti push add in aas push cli in sar test cmp das test jge jg cli jecxz mov push xlat xchg adc sub pop aas jg and aad lret mov mov orl (bad) sarb lahf mov lds sbbl cmp inc shrb rcrb push adc pop pushf push inc mov dec mov cli popf shl push js (bad) mov subl (bad) ds outsl pusha outsl xchg mov (bad) mov clc dec sahf jg loop xor arpl push lods in sbbl movsl rcrb push mov xor test scas and adc push clc std sahf lds fcompl or add jg fnstsw mov cmp aad imul clc ret xchg iret adc xchg aam sbbl sub xchg mov es dec jno xchg loopne mov pusha (bad) push lods lds aad mov inc lods fisubl xchg mov pop xlat int3 cld movsl mov loop push pop mov mov loopne and addr16 stc clc out shll loopne jg and out or test pop fdivrp sahf std adc scas or ret mov mov pop scas lcall mov pop enter aad stc sub fisubrl xchg mov aas mov push jns cmp sub lea mov clc mov inc mov stos mov mov pusha mov xchg imul int shr (bad) cs pop xchg fmuls xchg cmp fcoml and mov stos and insb push into jecxz mov (bad) lea ret jnp mov lea mov jp add lcall addl hlt sahf (bad) (bad) or push ja mov clc xor xchg ret adc xchg xchg add mov incb loop jle in aaa jnp sbb adc sub pop mov sahf scas lcall cmc xchg jo pusha stos sub clc dec sbb (bad) outsl dec inc xchg int mov ret cmpsl js sub (bad) mov int jge rorl push jns xor (bad) pushf insl mov scas xchg xchg or arpl mov jp popa clc jo ret lahf sbb out (bad) aaa pop stos mov fild leave lret (bad) xlat popa cld adc and lcall dec cmp sub cmc pop inc mov jp cmp lds aad jne sbb xor cmp dec lods mulb lahf movsl pop aas pop sub xchg mov pop jns cmp and sub cmc pop xor xchg clc aas jae cld and aaa les das push aaa les mov pop push in and pop add divb fimul clc inc cmpsl lea xor xchg insb aas shlb cmp xchg aad pop cltd add aas cmpsl dec in pop sub push cwtl fstl and test mov (bad) leave (bad) add sbb ret xlat xchg (bad) sti mov sbb mov scas mov rcrb and out fist leave jo sbb xchg repz clc or ds pop xchg add sbb incb xor adc loop xchg jge jne sar xorl cli cwtl iret xchg inc arpl loop jmp insl popl addl test jmp test pusha fstp ret xor pop cltd jl es sbb jnp insb xor or mov loopne stc add pop (bad) ljmpw jp push (bad) (bad) push or or push clc pop iret push xlat leave mov xor pop mov xchg mov pop js xchg jecxz insl add pop and xor jno inc jmp cmpl cmc (bad) mov aam dec pop incb lea fsubl (bad) cmp pop sarb out jnp add scas es addl xchg inc in or add neg (bad) int3 nop mov insl xchg pop add xchg pop mov or push pop jo rorl leave enter scas mov lods sbb stc das and pop aaa adc push movsb mov sub cmp mov mov sbb sarl xor int3 or scas mov fucomip fidiv aad xchg mov (bad) cli mov cmp (bad) mov popa fcompl mov leave enter cmpl mov ss xchg add mov jnp xchg mov mov sub dec pop mov (bad) dec jecxz cmp adc repnz mov inc pop shrb sub inc jge xchg jnp clc icebp mov adc outsl xchg aad in xchg es push mov lods inc (bad) jnp mov mov (bad) out clc push or xchg inc mov mov jg xchg pmaxub pop pushf cmp jge xchg data16 out xchg or adc fcmovb pop pusha dec and add pop mov mov stc adc xor lret inc adc jecxz insl cmp out inc xchg jle clc push aam pop jg hlt inc sti imul mov imulb mov mov pop test fidiv dec movsl and hlt rcrl (bad) adc es (bad) movsl fbstp data16 lcall mov aad add push addl daa clc jbe add incl mov push lock sbb xchg popa orl and mov imul or into add pop cmpsl sbb stc cmc (bad) mov xchg or sub jo mov adc sub add sub outsl (bad) lea mov in dec cmpsb lock dec test jg,pn aad daa lock ret lods dec cs jbe negb add int3 mov inc sub mov (bad) ljmp sbb cmpb xor aas xchg dec adc or push push into and push fstpl rcr out add pushf dec inc or or and sti mov jge fldt or xchg mov inc bound sbb push xor pop pop mov scas subl das push pop dec out aad mov into push test clc dec or inc adc dec outsb mov test mov fsub or xor int mov clc comiss aaa enter je mov std mov repz inc mov cmpl sub sub (bad) mov dec pop outsb pushf cmp jmp out (bad) jp (bad) aas mov ja pushl inc mov pop jl arpl push jle aaa jnp sbb jg jle mov test jle std mov jo jecxz out pop add fnstcw in sti xchg insb sub int3 xchg test mov mov mov std mov add jo dec scas mov sbbl (bad) cli xor mov stos (bad) jl (bad) jge loope jg je cmp adc repz push daa and lds xchg subb jge mov aad jo mov sbb cmp jge cs mov call dec inc int3 clc push add pop (bad) clc mov jl push jecxz jg clc sbb xor mov mov pop sub pop mov pop mov mov jl mov ret mov sbb mov pop outsl notb lods mov leave cltd pop xchg fnstsw sbb test and jo push xchg xchg xchg aaa push or adc fsubrp fdivrs leave mov xor jp mov (bad) sub das and or cmpsl fbld jecxz mov inc jl (bad) out scas out ja (bad) pushf aad aaa dec add sub mov movsl pop scas sub cmc mov je xchg push dec inc sub iret stc cmp and or inc aas cmp push out pop pusha add mov popl movq jae mov inc jns mov push ds jg and mov insl mov sub mov out cltd cmpl cwtl xor faddp dec jno xorl fwait fs (bad) jo aaa addl mov mov push cmovbe cmp and ja repnz inc repz or clc in cmpsl mov aam inc in lods add and mov xlat cli jmp das adc add lds (bad) rorl jns (bad) out sub incb mov arpl pop mov shufps or add sbb mov jge pandn (bad) mov lods (bad) xor fcomip inc push out sahf cmpsb push mov xchg pushf movzbl out (bad) dec test (bad) pop xchg dec out std xchg bound pop lahf mov lcall xchg loopne inc pop sarb xor sub scas clc pop dec adc ljmp pop (bad) movsl in lods mov (bad) sahf mov imul pop lahf out (bad) dec clc repnz xchg xchg les push pop daa push ficom adc (bad) faddl mov lds inc xchg xchg sub mov clc lret cmovbe ficomp popf push mov dec pop lods out in cmp cmp push mov push sub cld mov jno ds lcall sub (bad) pop pop repnz mov push mov jg xor xor test jns inc ds testl icebp leave jae pop pop mov les cli popf inc or aas xchg mov mov xchg inc mov add clc xlat cld les sub or out js popf mov cmp (bad) enter and and lahf aad rol sbb aas mov sub pop pop popa add or dec cmpsb sbbl pop cld pop xchg data16 stos mov int3 inc mov sub in sti sub add sbb aas add pop mov jae scas pop aaa leave add or push dec adc xchg sbb sar aaa call fstpl out pop fstp mov add adc fdivrl aas (bad) les iret (bad) mov and xchg or (bad) fisubr push pusha sbb loope repnz es and mov xor clc push xlat mov push lea jl inc mov xchg outsl cs dec lock clc test (bad) xor lds cmp pop into test outsb loop fiadd ds outsl xchg inc aad ficoml sub add or jae jl add lea in in or movb fisubrl data16 js jp pop std cmpsb xchg (bad) pushf or int3 xchg nop inc (bad) call lea repz mov pop or pusha dec rol mov repnz sub jecxz or cli shrb into xchg aam jnp cmpsb adc push int3 adc dec pop popf (bad) cli inc or imul popf mov mov out jbe sub out pop cli rcl adc xchg pop or or mov stc mov xchg cli inc sarb or aas (bad) test cmp pop aas inc cmp test pop inc mov int3 jle cmp test or iret out jg cli fwait sarb xchg pusha xchg ffreep mov loop popa aad insb lcall xor jp rorl pusha pop push xchg cmpl fstpl xchg loop addl out (bad) mov sub rcrl in shl aad in pushf mov dec jecxz (bad) dec cmpsl sub jp push inc add imul push mov mov (bad) ss lcall ret sub inc cld cs mov sbb adc ds mov or mov out shl (bad) clc sub sub mov clc or fistp and ret adc out out cmp ljmp cltd ret mov dec mov add or pop or (bad) leave jge clc popf xchg pop inc out js out mov and xchg fnsave ds clc scas push (bad) enter hlt imul jo into (bad) rcl iret push ret faddp (bad) push cs ret (bad) lcall mov push cltd inc rol fdivs (bad) mov insb or mov in pop stc aaa xchg jo xchg fidivr clc stos data16 cmp xor mov or scas cwtl fldt sub adc setae clc (bad) aam sub mov sbb jmp aad xchg sub repnz sahf mov aaa push push jle ja mov cltd and inc or mov cli add adc jmp (bad) sti mov inc jae pushf cwtl mov jmp cmpsl repz push imul and inc scas lcall mov adc fs dec mov scas std pop xchg movsl mov dec enter xor dec mov mov scas push inc push daa insl mov lock pop jl iret repz cli cmp xchg push lret inc loopne push xor lods and lahf (bad) mov daa adc adc hlt adc pop add in sarl push adc movl jg outsl and pop pop pop repnz les addr16 (bad) loop mov addr16 pop (bad) jns fdivrp xchg test adc icebp decl into rorl sbb icebp jg push lahf (bad) mov test inc (bad) cmp repz addr16 pushl sti mov dec das fsubrl shr cld clc in mov jecxz test xor pop stc jl cmp jp cmp test andl (bad) sub inc push cli xchg and mov ljmp mov dec pushf fstl push (bad) xor push stc pop ret sbb mov sarb push add aad jmp mov push decb nop clc pop lahf add mov push cld cs loope aam add xor mov push push addl sub mov lret add loope das fist pop dec into popa adc std mov js in xchg fstl xchg andl clc push cmpsb pop (bad) aas sub into push add int3 or js mov push cli in mov lss cld mov std in mov call add mov cmp mov mov mov lds stos add xchg jo in imulb push inc lods pop leave jp clc jl mov mov loopne push int3 mov and mov scas and mov xchg jg cmpsb outsl add push xchg xchg mov sahf fadds inc push (bad) nop sti (bad) jecxz cmp jnp mov adc pop and inc add mov in into sahf pop xor mov repz (bad) add inc iret lea mov sub dec xchg push std cmpl add sti shrw pop mov (bad) fs mov (bad) (bad) cmp xchg aaa iret xabort xadd adc cmpsl mov outsl mov cmp pop xor cli aad in stos mov and dec xchg push mov and aad jl mov add xchg and jae movsb in lds cmp jae and cmp (bad) dec pop cltd push jbe dec jo movb fucompp xchg je add pop lcall scas push fcompl sub stos mov mov aas or cli or jle jb fidivr pop or cmp mov hlt sub xchg cld addr16 (bad) data16 aas add push out pop sarl pop mov jb sbb in jg inc dec ds iret sbb std hlt fildl ret push rol andb cmp stos jns lahf adc in lahf add shrl xchg and (bad) xchg cmc jecxz jp push outsb rcll int3 test and out pop push mov in pop pop mov daa push and rcr insb repz adc mov scas push pusha xchg dec cmp lods xor mov push xchg xchg xor sahf aad (bad) out ljmp movsb adc scas or scas aad push or aaa mov mov dec push push jne pop pop pop les mov into repz daa (bad) push dec add ja fistpll mov jecxz xchg sbb inc jge rorb frndint xlat sahf mov pusha mov mov movsb (bad) les lods dec (bad) inc into jns aas out jge jl out pop push mov mov pop or mov push cmpb mov jg in clc mov scas add push aad nop ds lods jnp dec jg adc and lock add lcall aam (bad) jge mov inc push shll mov movsb inc aam xchg pusha rcrl hlt das fbld ficom (bad) mov daa jl ret sub cli rorl inc lods or xchg rcrl into inc insl stc repnz fiaddl les mov push pushf aas add add clc (bad) xchg xchg pop push (bad) clc pusha pushfw cmp inc adc xor fstpt bound mov ja lods rclb pextrw xchg add clc lcall inc pop add out lds clc xor jae jg gs cmp ret mov aaa xor add ret (bad) push ss aaa (bad) outsl jns pop aad fnstsw clc inc xlat fiaddl int3 aad push nop scas (bad) mov insb sahf mov ljmp pop cmp sahf sub pop psubw cmp stos (bad) cmp inc add (bad) ja jmp pop and mov mov mulb or ljmp test nop in jno jmp imul insl movsl inc (bad) nop lods sarl or push mov pop cmp aam cmp jnp mulb popa cli lahf xchg add xor xchg and add cmpsb stos push add std pop xor sbb jmp dec adc or push gs inc aas mov fisttp pop mov mov add pushf cmp popa push pop sbb fisub xchg not (bad) jg nop mov push pushf popf mov push cli cmp hlt mov adc pop fistl mov out mov (bad) fimul sbb xor mov sub bound rol enter and mov dec sti iret mov mov pop push mov clc mov test or add pop insb push mov adc or (bad) lahf stc cmp jl xchg out sarl (bad) in pushf test clc mov rolb dec xor mov fidivl jnp dec cli cld and in psrlw arpl adc mov pextrw push mov pop cli sti sbb xchg dec sarl push mov out push int pusha sahf cmpsb lock mov (bad) ljmp mov push lahf gs mov jnp jmp dec pushf stos inc mov pop and sahf movsl or mov clc popf stc adc addl dec gs cmc lcall (bad) mov sbb adc or inc ret mov inc in int3 add inc dec cmp imul cmp clc inc stos push clc and popa test loope lock and ret (bad) xchg leave or mov das jmp rcll (bad) adc lods jae mov mov sahf or sub repz sub push xchg mov dec movsl inc aas jge mov push mov clc repz pop jae ljmp mov jnp and lods dec popa out outsb cwtl les or frstor add int3 push mov push add cmpsb mov psubq clc jne sbb rcl subb sarl loope ret xor outsl jmp xchg aas pop ret mov popf add imul loop jl out mov mov pop mov dec bound test daa shrb cmovae dec jo lods cs dec enter push adc movsl sarb cmpsl test (bad) incl inc jns shll mov mov adc or ret mov push add add jg stos push add int3 cmpsb push add xor xchg push lcall mov mov jg ss jb (bad) testl out jbe push (bad) push popf arpl pop lea ja xchg cmpsb push in dec (bad) mov in sbb into lahf out mov mov jecxz lcall push mov pushf mov aaa and in pop pop int jecxz cwtl fcoml add ljmp aas inc addr16 in data16 leave ss cmp jge lahf dec xchg scas cmp lds insb es shrl cmp sbb aaa mov mov pusha pop jbe (bad) xchg data16 jecxz rcl pop xchg mov mov mov call sub sahf jecxz sbb add fisttp ret mov out (bad) je xchg jo add cvtdq2ps mov mov cmp jg xchg mov (bad) jge fdivs loope or (bad) mov sbb xor and dec test mov mov xchg dec mov cwtl mov mov adc jnp ss roll (bad) lock inc add (bad) clc inc push pop pop (bad) jb loop fild ret jns mov inc add clc add fcoml cli hlt paddsw push xchg (bad) pusha mov mov aas (bad) jno (bad) (bad) adc loopne gs call mov cmp lock pusha nop mov cmc jne fistpl adc inc (bad) mov and mov pop push mov scas mov addl mov scas int3 clc jbe popa sub mov fldl pop xchg inc lcall and stos (bad) and add sar mov das fisttp mov in rorl gs mov lahf pushf mov in (bad) js (bad) cld ljmp fsts push mov pushf cmpb xchg add int3 dec or cmp std iret lahf adc sti stc jnp,pn mov xchg sbb repz mov pop mov and insl aaa inc mov leave test or jg sub (bad) adc and stc lds aaa icebp dec adc pushf mov das pop out repz mov (bad) shlb adc pop inc sub jo mov xchg ds push inc mov mov push aam jmp jae or mov popf outsb adc mov aas and xor stos inc ds xchg sub lret sbb aaa into pusha xchg (bad) loope xor mov or jl shrl stos push adc mov aad movsb mov pop xchg out adc or jno pop add dec gs mulb push test mov cmpl clc (bad) ret fsubrs stos inc jae jge mov or or arpl nop mov or std sub out (bad) and add (bad) fsubrl arpl or cmp cmp mov xchg mov cli and sti cmpsb xor adc mov frstor pop push mov aad mov jo jecxz (bad) cli fidivl js loop pop jb jo jo popf test jbe fmul pop pop inc mov sti add inc call negl pop aad outsb iret cmp adc lahf mov lods lock lcall lds add fldenv clc push push or xor movsb js lret or fbld scas (bad) push lods addr16 jge in jp sub in out fsubrs pusha loop mov insl out in outsl fld sub js stc nop (bad) scas pop int cs lea mov movsb jecxz mov jecxz sbb xchg or push iret mov cmpsb pushf mov icebp repz std jo dec cmp push sti adc xchg aaa leave pop adcl jo sub and jmp ja (bad) push push cltd cs aaa push mov inc ds pop add pop loop jg dec cli (bad) lret sbb je sbb jecxz inc dec (bad) daa mov cmp das ret sbb rcl inc adc sbb aad sti pop pop mov mov aam xchg mov sbb (bad) fnop dec or loop mov cmpsb mov jecxz test pop gs rorb add mov lods mov mov lahf js mov aad cmp inc addl push mov daa aad popf inc add or and mov cld and adc xor (bad) mov adc inc cli subl add ss jne pop scas add inc or adc inc xor or stc or jne xchg sub cmp mov mov pushf repnz jp add pop and std fstl mov mov jge clc mov xchg cmpsl (bad) sub idiv push adc sbb inc adc pop cmpsb mov repnz mov mov (bad) cltd outsl (bad) push lret inc or inc cmovg popa insb imul outsl push sbb mov sbb data16 repnz jnp sub (bad) sub ret lahf add aam jb outsb stos add pop outsl push iret adc es inc xorl fldenv dec nop sbb dec pusha sti jnp in rcrb insl cmp imull xor jae sti cli inc xor (bad) mov inc push adc sub sbb push add push sub scas stc dec push jl aad and jge sahf incl (bad) repz dec lcall mov jl icebp sub es ljmp mov lock mov mov mov xchg aas add imulb jne test xchg mov xlat pop sbb ds sub cli xchg jle xchg into jg pusha pop cmp (bad) xchg push ret (bad) bound rclb pop cli mov hlt andb mov fsubp dec push mov das das ja sbb ffreep lcall mov neg add mov mov lahf push dec or or mov jbe add (bad) jl rorl jo movsl mov xlat adc mov fisttp sub mov negb and loopne pop push pop pop mov (bad) jg cmp jg mov aaa sarb mov (bad) fisttpll daa or popf mov sarl or adcl mov hlt ja mov jo lahf adc andl popa testl mov outsl (bad) gs sub (bad) xchg pop or fdivrs push inc js push mov xchg fs jo cli jp jl or pop cmp outsl inc (bad) sar fistpl cmp aaa fidivl jns push test daa pop and leave xchg or data16 sarb lds add dec call sbb add mov cmp adc (bad) arpl (bad) pop pop test aaa pop in cmpsb (bad) into lret loopne adc adc call popf add cltd pop sarl cmp (bad) notl add lret adcl test aam scas clc push jecxz cmpl mov es pop push mov add jmp add mov and out mov mov aad nop add pushf bound cld xor dec imul (bad) mov pushf add mov movd movsb loopne adc (bad) fisubl fldl in pop fwait push sub imul lods sahf orb hlt mov xchg imul inc mov lret mov aaa jno push scas call cmp dec pop (bad) jle xor js inc cmp aas add stos cmc subb lret xor mov (bad) xchg or outsb in (bad) lcall jo adc cwtl dec stos sti xchg inc repnz lcall add sbbb pop mov mov or outsb rorw cltd jl lea int xchg dec pop fs xchg (bad) mov or loop pop roll ljmp orl cmp pop xchg add scas out pusha stc test fwait ud2 mov mov pop mov cmp insl xor and mov jmp clc out sbb scas sti pusha push adc es (bad) inc xor sbbb stos sub dec ljmp jge mov cmpsb pop adc dec cli add cmpsl adc (bad) mov jne inc int fs xchg mov shr and jmp sbbb inc pop ljmp or pop mov jecxz adcl push xchg mov mov jne mov outsl cmp add sub dec ret and jne lcall xchg fwait dec jb,pt leave roll mov das mov jg jge fisttp mov dec repnz divl movsb aad mov mov xor adc cmp lret iret iret jle mov mov shrb (bad) xor data16 lods std xchg mov mov inc sarb xor fsts cmp fisttpl xchg inc and je cli pop clc inc cmp cmp or cmp packssdw adc rol jnp mov dec or cmp into je inc (bad) mov and popa xchg movsb and push int xchg jns xchg (bad) pop lods xlat pop std push loopne adc out (bad) repz xchg lahf xchg inc je mov add mov sub mov aas inc xor fmull loopne or mov ret dec sbb in pop dec aaa ficom bound xchg mov xlat out cld jns fcomip arpl sbb mov or shrl xchg xor in repz jb mov test mov ss pusha stos int sbb xchg dec lock fidiv test repz cld fisubr xchg insb ss popa pop and iret std stos and pop nop movsl imul xchg inc aas sub pop pop lahf aam lcall (bad) jnp mov sahf popa sub pusha add and ret push and inc mov mov adc adc push add xor jns in adc repz (bad) pusha mov aas aas jl (bad) mov jl add aas aad dec pop mov clc inc pop push mov adc mov inc aaa xchg add lahf xchg or or and out jmp mov and sbb jecxz push mov ret lahf cmp loopne mov ds mov popw aas call inc dec lahf mov push lahf lret arpl sub daa cwtl adc dec (bad) sbb sbb mov clc shrl outsb into js xlat mov daa sbb mov pop lret adc jecxz cmpsl insl (bad) mov mov (bad) mov fwait pop nop push or xchg add pop addr16 cmc mov pop sub mov fs push clc test pop mov ret pop test cpuid out (bad) clc test adcl cli push lahf pop jge xor xchg fidivr aad add lds pop xor (bad) (bad) xchg xchg test aaa pushf icebp sar jmp loop cmpsl notl cmp rol aaa mov pop jg or (bad) jle pop aad push add xchg rorl inc cmpsl fbstp pop sbb hlt aad xorb or mov loop sti and dec divl stos mov cwtl outsl xchg jns jg inc mov jl std sbb rorl jg clc push jecxz sarb (bad) data16 packsswb push scas (bad) sbb inc stc mov add pop outsb push xchg xor lds bound bound ficompl xchg jge xor inc aam fwait mov imul dec aas cmp (bad) xchg xor add lea fildll popa jl push ss mov xlat repnz fist mov sahf mov imul ljmp test pop out inc cmpsl mov lahf leave andl mov xchg adc mov xchg pop cli lcall test add jecxz mov sbbl fyl2xp1 mov sub outsl jmp subl mov das arpl inc mov mov lods dec stos mov push clc add in outsb in adc aas outsl dec repz push xor dec out push mov fistl add jg ret clc (bad) (bad) (bad) (bad) adc sbb ret jp incl xor cmpsl stc dec sbb mov xchg mov jo mov or pop pop (bad) repz fiadd push mov out loop ljmp pop movsl push inc dec fwait and sub ljmp mov pusha lahf daa or pop mov rolb ja jl xor jae aad push aad std pop push sarb mov pop (bad) repnz cmp repnz aaa lcall aaa lret adc mov xor add cld add inc and cmp jg fstpt jle loop mov xchg mov xor ljmp roll btc leave std fldt popf ds (bad) fild and cmp sub pop sub clc int pop ret stos sarl jo pop sbb push jno imul ret jne fucom hlt mov arpl aas pop (bad) xor movsl arpl fidivrl xor mov mov inc das repnz fnsave xor and cld clc movb adcl stos mov mov pop (bad) cli lahf push xchg jns outsl sbb (bad) and fwait cld orl pop movsb (bad) xor sub in and rep fadds mov data16 ljmp repz xor mov xchg lods jp,pn scas push adc popf sub or or aad xor out outsb in mov jbe int cmpsl adc push xchg outsl (bad) and add adcb std scas mov sub push add mov mov lods (bad) nop clc daa dec psubd mov ja xchg jae mov into mov fstpl and (bad) or inc jno out sbb inc sarb jo pop dec (bad) mov and flds jmp loop xchg fisubrl pop jns decl pop and and jmp sbb std fmul scas cmpsb sbb mov addb dec xchg ret cmpsl dec mov test test stc lds test sahf xchg test ljmp imul cwtl sub (bad) rorb cmp movsb in leave or mov sarl pop adc xor aas jne daa fidivr mov xchg cmp into xor mov pop sbb aaa (bad) out push xchg and mov jbe inc dec jg mov in adc mov push imul inc xchg mov dec (bad) mov aam push enter ret inc (bad) sub dec (bad) aas in mov into (bad) lahf and jp mov push test ss les nop or mov push data16 jb addr16 lea add or sbb int cs xor adc sahf and stc pop ret lods imul pminsw dec and push jnp sbb mov cli xor xor sahf and popf xchg and adc (bad) js mov add clc popf movsl shrb sub inc sub or fsubrp sbb ficom out dec sbb mov popf ss sub das add rclb scas xchg (bad) jl xchg dec ret mov mov mov (bad) push movsb bnd lock out xor repnz andl push cmp xchg mov std iret cmp mov out out outsb roll mov pop mov sahf cmpb adc sahf aam into testb push pop dec dec sub jo mov mov jb rcll mov stos cmpsb lds cmp call pop mov (bad) repnz mov (bad) aaa shlb pop and cld jg jecxz ret ret sub jecxz mov fsin add cmp inc jo push je inc aas jbe push push lahf add repz push pop mov aas inc push adc enter jecxz and jl (bad) rcrb push add addr16 icebp sahf lods jp pop ret inc insl test call inc fdiv inc lods aaa ret inc xchg mov cmpsl mov mov or adc fdivr add bound dec shlb popl (bad) add push popf std ret rclb sahf test xchg add cmc jo insb cmp gs lcall sub inc popl (bad) mov (bad) jo enter in fwait mov push push adc rclb add lods clc push outsl das push aas add sbb mov lods ret rolb jl inc pop mov (bad) inc sar rorl les adc mov je mov shr mov std adcl pop sub dec pop mov cli add pop ss jns (bad) mov xchg lcall mov cmp pop jl mov outsl pop (bad) mov jecxz lret (bad) adc inc add (bad) fdivrl pop push cwtl pop cmc cmp add shll push cltd jo pusha ret ds sbb gs push sbb mov (bad) xor mov and xor (bad) push test mov lods push push jnp cmp clc cltd xor cmp and jmp adc cld mov pop mov fldl sbb sahf dec (bad) jecxz aas or lcall gs pop leave jae jmp rolb (bad) (bad) jb aaa mov ret mov xor jl mov (bad) pop jbe mov incb out pop xlat add cmpsl push std cmp pop icebp sub rol mov add arpl adc (bad) and repnz out cltd sbb mov push xchg hlt ret xchg inc (bad) pop lahf ret out add movsb pmaxub (bad) cmp mov xchg (bad) and sysret (bad) aaa lret out adc push test mov xor aad imul ja aaa out add les ja or pop xor lahf push jge pop lds test movsb data16 xchg lods mov ret repz sub (bad) pusha mov mov mov int pop aaa pushf mov pop repz xchg ss lahf and inc xchg push xor (bad) daa add (bad) (bad) jno out inc lds xchg push lahf sbb test mov push mov addl jno pop ret clc dec xor xchg dec out xchg fsubl add mov mov mov mov fiaddl rcll ret lds dec mov orl cmp inc cmc (bad) out mov mov out lahf clc lcall mov jno ret call mov mov mov jmp xor sub arpl clc dec wbinvd into stos sub dec xor jmp in add mov pushf add mov adc xchg es mov mov clc mov pop pop (bad) mov das nop cltd pop and sub and into std repz les add adc cwtl stos in add jl fcomp aaa mov push fcoml sarl pop pop mov xchg fnop pop repz fistl rol adc cwtl lods (bad) out push jecxz jp xchg test sub movsb outsb loope mov lods push mov or cmp int3 xor cmp mov loopne inc mov scas clc mov adc in stc mov jae cmp inc pop incl rcrb cmp mov nop or iret clc aaa aaa in mov cld daa mov xchg (bad) mov or mov pop (bad) test fwait icebp jecxz mov inc mov cmp jo xlat lret sbb pop outsl addr16 ljmp std sahf inc std add fidiv test arpl popf das cmp into (bad) mov loope dec jmp in xchg mov mov into jns sub dec pop mov cld mov pop aas mov jb mov cmp negl and psubusb mov add jecxz xchg cmp and stc sbb aam mov push push pop sub fistp mov cmp addb pop ljmp iret lds stc fs mov xchg jns lahf stos xor fwait jnp loop mov into mov jmp jp clc push adc xor xchg jp jns dec jmp popa sub cmp add xchg loope push test push cmp test mov sbb incb incb dec insl jp aad in (bad) dec ror sti cmp scas mov sub mov mov xchg dec clc and push and xchg outsl rcrl into and jnp cwtl xor arpl fwait lret pusha pushf lods xor xchg or sbb jle cli in adcb mov lods sbb std jmp roll sahf aad out or jns clc rcl sub insl mov lret pushf xlat push dec rorl fist pop (bad) mov or gs int3 pop cli cmp jp add push xor add pushf mov add xchg cmpl test add or inc leave cmpsb pop xchg std jecxz addr16 leave imul stc pop ret movb adc int3 in je nop clc test lcall incb inc sbb sbb add mov orl sbb (bad) mov mov jle adc pop push sti outsl jmp lea andl fs push mov fldt and mov sub or (bad) aas mov adc insb aad (bad) js pop mov andb or add stc dec and push js or xchg adc mov jb leave jp cmp cmp mov dec aaa ljmp (bad) stc pushf mov nop xchg xchg cmpsb mov dec pop inc fnstsw jmp cli (bad) adc sub xor dec repnz jp jge clc roll pop mov sub jnp pop mov dec gs adc add lret cmp jno xchg mov lahf mov clc sbb add mov pop scas fimull push js rorl ret js jl cmc insb add jg (bad) mov and je lahf lcall mov xchg push andl mov mov ljmp and jns add fiadd sbb (bad) and mov mov push arpl pusha or mov cmp (bad) (bad) shrb xor stos dec (bad) (bad) or addl jge (bad) pop lahf lret xchg sahf pop data16 shr lods insb in lcall or sub jbe popf adc inc and cmp aam pop xor test mov jge xchg adc jns jno xor pop inc xorl in in adc push jg popl fisub clc aam ljmp (bad) push inc loope int3 outsb lea push negl ja (bad) fistpll xor inc pop test sub scas cwtl push mov jae test (bad) out test cmp loopne lret (bad) xchg sarb sbb add or pandn es out sbb mov jbe xor aas repz mov xor stos pusha fadds (bad) jae sub cmpsb cwtl lea mov or mov pop ret lds add pop mov lcall or cli fidivr jb lcall mov or (bad) jg ret and repnz cmpsl cmp aad movsl jl add adc outsb das and loop mov (bad) dec pop cmpsl jmp mov sub sti test inc mov dec push pop pop xorl mov outsl repz adc dec iret xchg mov sub cmpsl adc movsb cmpsb sub mov or jne push push inc js fucom leave jp push fwait mov inc test cld inc jl int xor in jo ds adc sbbb cmpb fwait aad int3 sub mov cltd fdivl fdivr pusha popa mov (bad) cmp jnp jns lahf test fdivrs mov xchg arpl or push mov or pop js clc std int3 add imul cmp mov js clc dec and fisubl lcall into jge mov cmpsb mov (bad) pop or inc mov setno push jl (bad) repz push sbb jecxz xor lcall jb push push pop (bad) daa push sub sahf fstl stc inc xchg stos cmp xchg pusha adcl cmpsb ds loopne xor out bound test xchg mov jl or in or lds xchg rorb mov mov push loop decl scas cmc sub xchg clc or into and fsubrl adc outsb inc loope mov or scas sub fdivr cmpsl jae mov push pusha jo rcr mov iret mov sub mov xor sub mov loopne jg das sbb scas jp rcl out sbb jl repz out jge mov sbb inc push inc test xchg adc mov aas clc xor (bad) cld sbb pop jnp (bad) aaa xchg test ret lds movsl jge test in movsb pop sbb fidivr sbb pop xor jl dec outsl int3 sbb and jno fisub xchg jl arpl jl (bad) pop jecxz lahf movsl cwtl cmp les xchg and adc out out cmp adc xchg bound adc aas mov xchg xchg xchg jge pop pop mov test pop pop fcmovb dec (bad) (bad) idivl xor shlb mov and cwtl lahf xchg repz xlat in ret scas sbb mov fnstsw inc cmp nop and insl test xor cmpsb fmull push add aad xchg pushl jge xchg jl std sahf (bad) ror sub adcl xor out and sarl fst jmp mov mov sub mov xor fs xchg out or or call into lret imul call into pop dec cmpsl (bad) (bad) xor aas (bad) ss sub push cld jb,pt push mov cs js jb jbe xchg das mov les adc jmp cmc adc pop push scas push or mov sbbb sbb movb cld xchg hlt add inc mov popf clc adc out push xor in push (bad) mov stos mov mov fimul xlat ljmp pop pop cmpsb jg mov mov ljmp das stc mov push sbb inc repz sub mov pop das mov pusha mov ljmp adc mov js,pt sbb mov or xor clc daa dec adc mov inc mov mov xorb outsb sub xor jbe xor push mov in fadd aaa mov sarl jl jns xchg jbe adc xchg add push and (bad) sub in enter ret cli dec in adc ss enter add add or dec (bad) adc clc fisttpll xchg xchg aad hlt (bad) sahf mov lret inc mov cmp sbb sbbl ret icebp nop fdivr jo jp push xchg std divl pop (bad) sbb mov mov jp mov cwtl and mov (bad) in dec dec jle push push test cmc dec int3 std nop inc inc xor std cmpsb les (bad) repz xchg push testb mov ds cmp dec jne (bad) int3 mov push adc mov addb fisttp aas jl or cmpl jp xlat cld xchg rol add fcomps test cmp pop (bad) jo cmpsl scas in cs ficomp out icebp xchg xchg leave fldcw dec fdivrp jp icebp pop push xorb je mov shlb addr16 test sub in (bad) jg mov aad mov repnz xchg mov sar scas cmp mov cmc nop push push inc out push pushf jae push scas jl sub mov xor xor mov andl inc and test sbb leave pop cmp (bad) imul fstpt (bad) cs or sbb psubd out xchg xchg push mov icebp iret sub adc call dec mov imul xorps mov imul xlat shrb pop pop das mov and pop mov insb lcall scas push jp outsl mov mov fmul popa jecxz adc cmpsb lds sub pop or (bad) adc or mov (bad) and mov xor vmwrite add sub (bad) sbb inc xchg and stc movsb sub jecxz inc addl cmp jp test lcall rcll sbb ret mov sbb arpl push xchg sbb xchg ret jmp movsb mov jg movsb mov add loope es aad pushf jl xchg daa jge push lahf jecxz out mov sub adc push push mov outsb lods sub insl out add mov xchg dec ds push add movsb jge stc pop xchg ds aas mov pop pop out sarb add adcl mov jecxz mov sub or fstpt inc add add pusha add ljmp sub cmp outsl pop repnz push add nop cwtl lods sbb repz jge pop fisttpll aam xor mov fwait movsb ljmp ret stc mov sarb sub hlt jl inc dec repnz ljmp into cmp adc jg mov repz dec fimull sbb mov test cltd dec or int3 cmp mov rorb jp dec mov inc mov pop sub push add lds clc lcall (bad) fisttpll ljmp or stc and sarb sti adc inc scas ret fs stos in mov mov pop xor xchg sbb int3 jp jp (bad) lds data16 add fcmovne test push int pop enter rorb outsb dec cmpsl fcoms icebp rolb mov popl jecxz and xlat outsl push mov sub or inc push lock ds mov movl sub pop push movsb sbb mov rolb fs idiv jecxz xchg inc jbe inc sbbb mov xor cmpsb sub iret mov inc jl pop cmp inc sub jp jge leave or cmp pop daa jp mov sbb ret fmul cld sub jge cld clc jno jae dec inc jecxz sar and in mov lcall pop dec das cli sub add pop ret xchg mov sub and hlt fsubl xor aas cltd icebp roll fdivrs pusha repnz pop xchg gs lahf and dec daa stos adc enter jns lcall and inc test aad pop and mov or aaa or outsl mov sti in lods cmp sub inc sub dec mov xchg mov test (bad) fwait das js mov jns jge push dec into test jp sti or mov or fnstsw add mov fisttpll mov inc scas mov sub inc psraw cli add and loop popa pop jl pusha mov jo fdivrp or sub loop clc decl mov cmp jnp mov cmp fwait inc divb call fidivr into es in mov not popf repnz inc movb jg mov nop dec xchg mov frstor leave push outsb xchg mov push jnp pop loope jnp lds jp xchg lea cmp mov std into addb inc xchg sub mov popf add (bad) cmp scas mov cmpps ficom xchg cli pushf mulb xor add xor pop dec jo cli adc movsl xchg movb push je out dec cmpsl pushf icebp pop (bad) push dec negb out sub scas hlt xchg movsb test mov mov mov pop movsb inc cmp add add sub iret das addl cmp or popa or jecxz pop nop cmpxchg sbb lock mov mov loopne fnstenv xor xor shrl mov fsubrs xor mov lds scas sti and dec lahf js jp adc cbtw mov dec lret jecxz sub sub add in imul daa mov inc loop add clc scas push sbb out pusha notb mov ja inc xchg ret sbb imul sbb stos addr16 scas arpl insl (bad) in mov in jo jge (bad) mov aas pop incl cmp jl mov mov gs js xor std dec mov jecxz fimul xlat and jnp jg gs bnd ja add outsl sarb xchg lret add dec lea jns or adc and adc cmp rcrb or aaa popf xor mov fadd mov add sub pop cmp add clc mov push jnp pop push aaa fistpl dec jecxz and and xchg adc jg sbb les (bad) cmp jl cmp mov jg cld xchg jge aas mov shr aad iret hlt mov into jge ja mov jne fcmovnbe add pop ljmp xorb jo add pop fist fldt aas fwait adc mov outsl and lret ljmp fwait xchg cld mov mov (bad) stc add fidiv sub or loopne or or cmp bound clc add into push push cmp insb xchg test jl xor data16 sbb pop lret aaa dec in and rorl stc fsubrl movsb jno add repz mov xchg es inc cmp xor xchg mov daa push xchg (bad) rcrb mov cs mov sub clc adc xor ret mov (bad) fcmovb cmp mov inc mov or fiadd int3 inc pop mov ljmp xchg lahf mov loopne xchg pop sbb mov pop push lods lahf sbb mov iret xor (bad) nop mov or lcall (bad) xchg mov inc stc mov es cmpsl or test aas mov (bad) add xchg inc mov push lahf mov movl fstps xor cmp mov ret sahf or in pop das inc xor aam arpl pusha mov jmp dec in imul cmpsb ss ret jge pop cmp inc inc daa out adc xor jne sub out gs lcall test lock adc cmp in mov pop and stc cld lahf cltd sub int adc cmp add rol jne iret jno in xchg push mov sbb xor mov ret sub (bad) sbb (bad) scas lea sub fwait mov push mov (bad) push xchg pop pop daa sar sahf mov add push movsb xchg xchg outsl mov mov push ret je push fcompl cli (bad) clc jl sbb push aaa out inc jne das inc (bad) mov fbld addl int and std xlat fsubrs int3 push outsl mov cmp data16 daa scas pop inc jbe fwait and jo out mov jo inc push popa lahf adc fdivrl add jge les mov mov sbb das dec andb clc pop insl push test jnp loopne mov jnp adcl roll in push xor pop test push xchg xor stos mov push mov pop mov test or mov fimul (bad) je mov add adc repnz (bad) popf push sub adc sub fcomps je test lcall popf add bound cmp mov mov cmp sbbl aaa dec lcall (bad) xor mov adc add test mov addl add mov dec xchg inc xchg mov (bad) cmp lds or add cmpsl fisttpll push or rorl sbb (bad) push mov xchg pop test pop mov cli xchg (bad) movsb add sbb xchg xlat push push int add pop or jg and dec in jl xchg (bad) push movsl repnz data16 aam pop (bad) xor jae stc add lcall jae mov sbb jle inc mov inc fwait into clc push sub (bad) das das adc xchg sahf (bad) mov scas scas jecxz cltd xchg fadd inc xchg in pop and (bad) cli or roll es das jp scas fstpl int3 sbb lea and inc stc lods ret and mov sub outsb push clc mov movsb fidivr cltd xor mov mov (bad) or pushf add adc pop pushf movsl and (bad) aad jo add push sub add jae mov adc scas push sti xchg jl pop jnp addr16 xor iret lds inc cld mov add sub fucomi push int3 xor mov clc addl sub cwtl cmpl pop fcmovbe sti add aas icebp nop (bad) ret test shrl insl lret cwtl cli movsl loop outsb and mov daa (bad) mov mov bound mov jp in sub loopne pop xor mov pusha push xchg (bad) clc push mov int3 stc mov popf clc jl (bad) mov adc inc int3 jecxz das movsl rolb or push push int3 clc popa (bad) loopne pop or loopne and jl pop rcrl push xchg int3 ss shr cmpsb clc xlat sbb ret int3 sarb and incl stos jne fisub lret add out lret in pushf cli aas js lahf pop roll push rcll (bad) loop pop fidivrl push fcom push (bad) in aas add adc mov in ljmp mov and mov dec popa adc loopne daa sahf into pop xchg rclb mov xor adc out enter mov push sti hlt or pusha dec movsb mov push inc jb mov pop fistp add jns add cli jns (bad) mov fiaddl dec ret add ret in (bad) aaa xchg (bad) jg sahf and dec jo repnz stos pusha add inc jns mov pop aam pop mov mov outsb jecxz push lahf std clc pop pushf pop incb lcall out lds movsl test jl mov das xchg jns jg clc sbb pushf mov repnz sub arpl ret jo pusha pop xchg push inc (bad) rorb xor iret mov js inc adc les mov in add leave mov cmp icebp push jns icebp fs repnz mov pusha fwait out sub xchg leave pushf jo or xlat sub and xchg push js sbb xchg cmp scas pop ret aad test roll push push idivb cmp xchg cmp and inc add aaa ror mov add in sti in fisttp out sbb jl sub je pop aas mov out mov js sub (bad) clc lahf sub mov mov mov push xchg adc cmc inc ja inc arpl sahf int in mov ret arpl jge mov stc fcom lds sub shlb jl mov dec pop stos cld cmc (bad) mov lods inc cwtl pop enter scas incb ljmp or repz inc jge mov mov in imul in insl mov rcrb insl (bad) jg add lcall xchg adc jns (bad) mov adc mov sbb add (bad) jg push lods pop js mov lcall xchg cwtl cmpb (bad) mov sbb mov xlat in out stc push jmp sub aad mov cld or xor cmp inc jbe sarl push pop inc mov jl int3 jecxz jne pop xor ss jne pop test jecxz and outsb mov xor pusha dec mov dec or pop add in and jg cmp push lods cmc int3 jecxz jns xchg or sti pop push mov addl mov adc (bad) cwtl mov add sub in cmpsl pushf (bad) cmp sbb fs ja inc sahf in daa scas test jp (bad) xchg pushl in xchg add int test scas push decb aam cmp sbb mov out pop icebp outsl (bad) loopne aas enter repnz pop test je jg cld and nop push add popf rcll or jno (bad) lcall push ret jmp insl push sub push scas out jecxz pop cli subl mov and pop prefetch outsb fcompl movsl jmp and dec sahf inc and movsl jp pop jp jmp sub imul repnz fisttpll add dec outsl repz adc xor mov push ficoml or inc lds sahf clc fcomi jo fsts jp stos mov lahf repz cmc and dec adc pop jbe and std jle jg cli enter and das out jns int3 mov lods sub jae js sbb xchg sbb pop bound data16 jnp lahf mov mov fistp hlt js jne xchg sub clc xchg pushf sub pop inc or out std sbb dec clc jg inc jns jg inc jp sti adc into fwait std fisttp xchg jge jp das cs mov pop icebp js mov das push (bad) ficom (bad) or aas dec test fmuls sub adc (bad) sbb push nop sub xlat test jnp movsl mov stos sbb ss sbb stos add cmp sub fisttpl dec mov sarb ficomp das cltd sarb add xor (bad) jmp fsubrs mov pop sub bound lret (bad) xlat sahf repnz adc hlt pop nop pop xchg jl xchg mov stc add scas mov sbb add daa verw add jmp inc dec popf data16 jle aas (bad) arpl js std aad cld cmp cmp mov sub (bad) pop mov cld inc cs out adc xor cld mov in shr xchg or sbb jns pop pop pop test jmp rcrl add sub insb xlat push cmpsb pop outsl les out ret or mov inc in (bad) mov jbe add lods loopne pop xor sbb (bad) jo push or and popa fs (bad) repnz dec fild mov pop adc sub add outsl jb cli (bad) cmp iret cmp push (bad) mov inc sbb or movl and aad out sarl mov and or mov int3 outsl scas pop jnp lahf pop cli aas pop cmpsl movsb setbe sarb shrl lcall ljmp dec imul sahf mov sub and push scas fwait mov lods ljmp jecxz outsl fidivrl jmp in ret fdivl (bad) xchg push lcall xor (bad) sub daa mov orl and fcompl (bad) lret xchg out jle aaa loop movsb stos sub fwait mov xor xchg xor clc popa stos mov mov sahf xlat out mov inc cwtl mov mov xorps inc add cld jnp in push mov outsb and dec mov mov adc aam add shrl arpl inc lahf mov in pushf jg,pt pusha idiv sahf jecxz dec pop cmp sbb and xchg fcmovu sub mov and mov mov push repnz sahf lds mov xchg scas sub mov xchg ljmp inc (bad) sbb out popf xchg and int3 add sub xchg mov movsb jp insl aaa sbb mov mov arpl addl jecxz std sahf sub pusha stos or push (bad) popf es push in push mov and ljmp clc mov push lds mov xor push out adcl sbb aam in pop dec popa xchg mov push jl loope cli es leave mov incb gs mov adc and ret adc mov insl and add pop mov movsl (bad) lahf push (bad) pop xor mov jecxz xchg (bad) (bad) roll adc or adc mov cs jo sbb fdivrl sbb lock inc pusha ficoml mov and insb pop or mov cmpb clc movsb mov add dec mov (bad) data16 and cmpl push and loope test push mov sub aas std push clc lahf sbb femms and in mov xor icebp xchg xlat mov pop andl incb jbe pop dec push and fisubl jns ret movsl mov jecxz add xchg xchg or int3 mov or push jge xchg push out movl xlat mov sbb nop jl outsb xchg (bad) outsl or (bad) jne add arpl adc mov test mov or pop push or xor jbe jg dec jb mov dec xchg aad inc fadd cmp pop xchg xlat or sub into adc loopne inc loop mov insl pop loopne cmp push cmpsl lcall add mov sbb inc rorl and mov fiadd pop sbb lret mov sarl out xchg cmp mov mov dec cld push pusha cmpsb xlat (bad) aaa cmpb out dec add out dec test ss sahf jns sbb shrl mov fsubrp add xor rol les inc xchg add jmp push add mov out xorl aas test daa nop mov mov dec outsb into inc mov jg xchg inc xor aas lds rcll lsl mov movb lds cmpsb pop lret inc gs les les into mov sub sub inc pushf rolb mov das lret les ja xchg and fiadd xchg jo jnp repnz xor pushf sub or mov mov add in xor sbb cltd stos xchg inc mov (bad) je mov (bad) cltd add mov pop add sahf mov fdivr xor imull daa fbstp rolb jp cmp leave and imul lahf add (bad) add push jl stos insb insb dec push xchg xor insl mov fidiv add cli es mov inc push add jl pop data16 xchg daa xchg xor jl pusha jo inc fwait iret xlat cmp cmp stos js pop push adc stos (bad) sub out jl lahf mov xchg mov pop adc sub inc (bad) pop mov jnp ret push dec sbb xchg inc fwait mov rorl dec push btc ror xor fs nop pop and mov lret (bad) jp inc jge test das inc add pop cmc insl frstor mov cmp (bad) fistpll sub sti (bad) mov scas and adc je mov inc sahf push incb mov leave mov mov cmp int3 push inc jne mov mov or add movsl (bad) jl add divb mov mov mov popa js stc xlat fcmovnb out and xchg jge sbbl xchg cmp adc ret call xlat mov add add (bad) nop pop xchg add add loop jns pop mov xor rolb mov adc sub data16 faddl test les push es scas push add adc cmpsl add lods mov xchg cmpsb xor inc stos mov push sub (bad) clc sub xchg adc (bad) (bad) sub insl inc pop add repz loop cmp jmp add lahf sbb dec sbb aas jge pop fdivrl loopne push test adc pop and les cld mov pop sbb (bad) mov sarl xor jecxz je jl mov jl mov cmp dec jp scas mov push xchg cmpl push adc insl add xor aas mov std hlt pushf fadds jno or enter sub dec sar (bad) dec fdivl into xchg mov jns cmp lahf imul adc repz mov xor ljmp xlat jnp dec sbb mov xor xor inc mov out add mov mov test aam add (bad) sub push or clc ss aas sahf ret sahf aas clc jns add dec xchg sub push add xchg pop (bad) or stc loope iret lret sysret cmp outsl aam mov jecxz cmp cmp pop add aad or or lahf ljmp inc jbe ret mov add mov movsb das cmc hlt outsb mov mov adc jo (bad) push push scas (bad) xchg loopne or fild xor or pop cmp jnp (bad) pop into int3 push stos sbbl or dec pusha (bad) lret xchg fsub mov pop and inc or jg fiaddl jl loope xchg divl pusha cmp mov (bad) push popf lahf outsl subb pushf rol inc cwtl xchg push jmp sub pop cli mov inc mov mov (bad) cmp out lds mov inc fsubs add cld int3 mul push (bad) int3 cmp jecxz cwtl cmp or pop xchg popl fmul testl and add repz pop mov jo jns (bad) jbe xchg in mov adc mov ficomp fs out mov xchg ljmp pop xor outsl sahf inc les mov or cmp jmp add ja and clc push in ds je xchg stos xchg inc jg push jno and push pushf mov adc xchg or repz (bad) rolb lcall mov loope ret mov sub lcall add dec sahf mov call aad add inc mov dec (bad) aaa sbb das dec fmuls rolb adc push inc add mov mov push jnp pop ds outsb cmc iret mov fstpt out mov lds insl jl (bad) sub xchg out jbe orl cld test out mov cmp scas cmp les jbe xor pop lods pushf popa aam cli fisubr or call in (bad) jbe scas test (bad) cmp xor inc add lods std insl ds leave cmp mov lods jge inc arpl dec stc dec mov add outsl mov addl out rcll loopne mov das div ds mov xorb inc cmp push enter or dec xchg cmpsl cmpl push aaa mov mov std cwtl inc arpl mov fwait addr16 icebp pushf inc mov stos add mov mov jecxz inc (bad) mov das mov (bad) cmc jl cli popf (bad) fbstp cmp push test sahf xchg sub aas pusha gs sbb (bad) call jl cld cli ficomp cmc jb out movsl adcl dec mov or incl dec dec call movsb int aas test (bad) mov movsl mov pop repnz aaa movsb outsb add ret mov xorb fcompl loop fiadd add popf mov lea loopne and in inc mov test mov movb loop (bad) mov out repnz stos rcrl lds dec fstpt daa int3 inc inc add test movsb jl mov (bad) ficoml (bad) clc push mov cs dec xor lods into sahf jb inc aam mov outsl or sub fildll mov mov sbb adc ficom test nop add mov inc or xchg (bad) cld sbb adc adc mov add in enter xchg adc mov mov sbb loopne mov push adc cwtl mov adc lret mov jnp (bad) pop pushl adc and cmpsl xchg or mov hlt out sub mov push add lds add mov bound cmp sub (bad) jb dec cpuid lahf orl sub in jae les sbb xchg pop (bad) xor cwtl jns jae pop je push stos mov out mov (bad) xor sub fs pmaxsw or iret lods mov inc sbb jp sbb lcall xchg fdivrl popf iret mov dec mov dec mov inc call mov fnstsw jg stc je or mov in imul mov lods mov js mov pop cli nop aaa and lret dec pop shlb daa dec in sbb push pop jmp es jnp lahf ficomp scas lret rcll sarb cmpsl loop adc or push dec roll sub cltd mov pop sub mov xchg adc mov (bad) loope aam clc push sbb outsl jecxz ret jnp mov es add xlat mov int rclb dec xchg popa push mov sbb dec pop (bad) (bad) mov inc jmp cmp or jno testl inc xor lea pusha push cwtl jo adc jns mov (bad) fstpt (bad) sbb or or lret add mov cmpsb (bad) push dec mov inc outsl jg cmp cmp addb mov inc aaa stos push insb add mov jg (bad) in sti sub xchg fmuls cltd add clc les testl cmpsl fs aas jne mov mov cmpsl leave mov sub mov mov mov lods dec sbb adc jno xor mov xchg mov mov pop leave js push (bad) sti xor mov add aas pop in pop inc ljmp outsb repnz cmc inc dec addr16 in ds mov inc mov xor fisubr les push dec xchg cmp lods jnp mov ret add pop and (bad) push inc pop mov pop jns cmp jb xor stos mov pop js mul ja inc xor mov add (bad) clc cld mov arpl enter push jecxz push rorl inc outsb ficoml xor clc pop mov pop sbb in int3 push push xor std js lods les jmp push (bad) mov jmp (bad) push int3 push pushf pop or or lock sub pop mov pop pushf sti inc adc dec or js pop mov sbb cld lcall rol mov cmp int3 inc sub sti pop sub mov arpl repz mov or or add fistpl adc mov scas les add aas or (bad) call inc mov or xchg daa xchg jg lods mull jmp sub fstpl insb push sbb pusha mov js int3 push lahf mov jns scas or psubq jp jae or sarb popf jns sub fwait xchg mov aam inc sti push jmp cmpsb jo paddsb jecxz incb mov or out int cmovnp adc cli in outsl addr16 sarb ljmp fiadd (bad) scas or pop dec xchg push inc stc (bad) and add (bad) jb pextrw sub cmpb lock cmp scas pop lcall scas sub add jl mov test push das sub adc jo xchg lahf mov or ret add ja cld ja lds ret enter xor add pop ja adc pop arpl add dec inc es xor (bad) xchg out shrb add sub mov pop mov dec outsb and cmpsl dec xor enter orl mov nop fldt loop pop cld cmp and push clc cli fidivr mov mov repz mov dec sub mov mov into dec (bad) movsl outsl ret xchg sti dec adc add mov adc jbe xor pushf xor sti adc daa inc cmp inc icebp or mov fmull jmp mov mov dec out add jg adc movhps ret push cmp mov mov pop test sarb fdivrl mov sub and add (bad) dec out or inc pop std cmpsb mov das cmp mov imul sbb mov sarb mov sbb sub xchg bound mov mov adc (bad) insb xlat sarb mov pop idivb mov lods iret or push add dec aaa push mov pop or lds jl enter mov sub add insb mov loope mov hlt xchg sysret adc aam cmc or aaa pop pushf das and mov loop push mov les adc aam std pop or aam aad loopne push and movsb mov pop out pop mov loop shrd stos mov ret add pop xchg ljmp lret cmp lock xchg repz icebp dec (bad) jne pop add jne cltd mov rcrl pop xchg das js test clc in or out jmp orl sti leave insl (bad) pusha ret pop add fsubrl int3 lods (bad) outsb push mov pop movb xchg xor jge pop fmuls test aad aaa orl xlat mov cmpsl push adc adc cld ret movsb fdivs clc lahf mov (bad) aas test out aad hlt mov dec mov sbb inc hlt jnp xchg (bad) fs fwait and xchg icebp mov xor lea add cmpsl sbb sbb and inc pop add aaa repz imul adc inc xchg lcall jge mov ficomp adc jnp (bad) fucom mov jge notb test and cltd clc (bad) out cli loopne cld mov int3 arpl add xchg aam outsb daa pop pop dec mov adc out mov inc fisubr pop movsl jae into push and or push stos das clc cltd popf jmp dec sub sbb cmp jns jnp pop aam pop std das sub outsb mov xchg add or add imul mov ret fstpl cli test insb lock xchg jae push jmp jg repz and jp jmp mov loop lds (bad) clc imul (bad) mov jge insb hlt push inc leave sub (bad) xchg add out (bad) add jg int3 fcmovne and mov or adc pop (bad) sbb mov lahf lds outsb popf dec xchg mov and int (bad) mov into cmpsl roll lods jg daa (bad) js cmpsl (bad) rol jl adc mov push in mov or lahf inc sbb jge or jg xchg sub ss xor xor pop jecxz test mov cli call jbe mov repz lret mov mov (bad) stc sti dec addr16 (bad) sbb mov rolb sbb lcall mov xchg lahf out stos aas cmc divb xor lcall adc cltd xchg pop jo orl dec or lcallw imul fidivr mov stc les daa or jne,pt (bad) adc dec xchg cmp scas mov test mov movsl into lods aam js std into out imul cwtl lret lcall daa inc jbe inc add add cmp ds aad imul pop xlat enter mov xor adc daa push pop adcl aam loopne les lds add pop sub dec jo lea imul xor mov mov xor aas or mov xchg outsl scas pop in mov xchg fdivr mov cli daa into sub pusha add movzbl pop lahf outsl ja sbb loopne sbb mov cld (bad) cmp clc cmpsl cmpsb push pop scas pop sarb (bad) loop insb push loop xchg fiadd ret xchg mov cmp xorl push xchg mov cmpps sub (bad) fisubl pop js lods jmp mov popl xlat pop rcrb pop adc daa ss mov int popf mov and scas sub lret lds imul sbbb pop in ret mov mov je add sub imulb incb cs cmpsl out stc xor pop sahf cmc adc js cwtl dec incb loope stos xor mov mov xchg jecxz in inc jb bound scas cwtl or scas jg or les pop pusha icebp incl push adc (bad) push outsl out xchg sbb leave add mov stos aas std xchg dec xchg (bad) jne pop xchg mov xor jge add mov iret mov bound daa adc mov inc pop mov cmc fisubrl add incl outsl sub xchg xchg scas ljmp aam mov xchg jecxz inc out mov popa lds aad pushf mov or outsl or pushf inc cli sbb mov cmpsb loope mov add cli (bad) ljmp dec mov inc cwtl loop jns push add cmp sti cmp sarl xchg adc aas add pop clc scas push (bad) sti popl rol mov mov (bad) lahf push sbbl xchg dec imul jbe insl pop sub or test fsubrs jmp mov enter cmp pop mov movsl bound aad xchg (bad) inc iretw cmpsl in jae jle call push inc iret in cld push dec rorl (bad) in test icebp mov addr16 xor daa pop xor notb pop (bad) fnop or or mov fstpl mov popf in mov xchg xlat cmpsl sub sar mov out pop in mov cmpsb mov add (bad) nop test std dec and pushf ds or xor test add (bad) ret inc adcl arpl pop nop sbb adc aaa addl out aad lahf add test lahf lds js icebp add xchg cmp rcrb mov ja popf hlt lret or cmp pop aam xor cwtl dec popf out xchg mov call lods cli push lods jmp aaa dec jbe pop dec out daa and dec daa (bad) icebp and add mov (bad) ja les rorl dec push xor adc jge pop daa popf adc cmpsl mov mov arpl mov mov adc jnp xlat cmp flds cmp loope mov cld setge hlt das mov aas repz mov or aaa movb inc std (bad) or rorb (bad) push cmp pop add mov lds adc cmc enter or aas decl inc mov adc idivl scas int3 dec aam aaa push inc (bad) mov push mov fisub into adcl or xchg mov jg pop cmp or (bad) scas cli pusha aas xchg or inc push mov lcall and es mov negb add or orl nop fldenv push fwait movswl inc into loope pop pop jg mov scas fidivrl cmp jle (bad) xchg pop (bad) insl and pop push pop inc bound adc ja (bad) pop jge lds push lods dec add cmp fidivr mov iret (bad) jnp mov cld xchg and add (bad) fwait cmp inc leave add cmp cmp dec (bad) js jge (bad) mov pushl or les add jl or inc stos js imul fldt xchg jns pop subl ret xchg lea adc les sbbl clc dec pop (bad) scas pop dec dec dec std mov loopne sub gs test hlt movsb rcrl out (bad) mov sti les orl dec xor outsb (bad) pop cs pop (bad) adc fistp pushf (bad) fisttp mov int3 int jnp sub inc ret ret mov jecxz lea je (bad) mov or scas sti adc jp sbb cmp mov lret sub stos inc call (bad) cmpsl pop xor pop pop clc ret inc stos sub movsb iret sub push add rol rcrb je pop mov clc ds iret mov push push ja jp sbb outsb loop pushf mov lret xor cmp lahf inc (bad) mov decb push rol mov inc jle outsb fildl mov dec mov and lret adc pop leave (bad) sbb (bad) jo clc cmpsl sbb mov daa pop inc testb or dec lahf xor dec out cmpl and scas mov mov sbb add push aas cmp push adc push (bad) mov addl add and cwtl push push mov jae mov push jge clc dec loop orl dec mov sahf aad clc out sbb cltd (bad) jae pushf inc addl cmp stc dec mov jne push jg mov mov (bad) add andl jg adc fimul jl mov xchg adc sbb add push insb mov push mov addr16 mov das bound (bad) jne clc fcmovnbe clc dec pop andb ds add fcomps mov pusha insl mov mov test push cmp and (bad) aad add pusha stos jl aaa sarb int in jg mov outsl jmp cmpsl aaa jb push (bad) fistpll dec repnz inc sub insb mov cmp movsl push (bad) shrl push loope adc push rorl fisub scas lds call ljmp test enter sub (bad) fistpll pop rorb rorl xor roll cmp popa push push inc add in mov push lahf out add fwait (bad) jge mov mov iret bound ja (bad) cld (bad) pop xor xchg aas clc ss jl lahf ljmp daa out clc xor fdiv jns mov scas inc cli (bad) pop mov call jle push mov sahf fstp cmpsl addl fcoml aas pop fsub pop pushf fstpl xchg fnstcw or lea push aas push mov mov or sub outsl add jne call testb or daa xor jns pop jbe ret or jecxz fwait cltd scas loopne dec je (bad) sbb (bad) sahf js mov stos outsl sbb pmaxsw fnstsw sti loop mov or jne jl inc or sti add mov pop or and fsubrs xchg xchg rcrl xchg mov pop rorl lahf xchg mov ret xchg mov rorl jbe sahf pop cld outsl mov push xchg inc int mov inc dec (bad) aad mov cmp adc sub jbe jge nop lahf outsl xchg jne mov divb popf ret outsl xchg adc adc shlb clc pop test jns daa js fdivrs jnp cmc add data16 fidiv or xchg int xchg js,pn xchg out inc (bad) cmp sub into inc pop outsl adcb jg pop lds es push or mov mov add out fimull pop inc pop fiadd cmc rorl push (bad) aas or data16 int aas cmp mov sub outsl sbb dec ljmp push inc mov pop jbe (bad) loopne in fistl addr16 (bad) cmp aaa inc dec dec inc push outsb (bad) and sub push in add ret pusha xchg cwtl lods (bad) mov sbb fcmove inc imul repz aas add push daa gs or (bad) and (bad) test fisubr cli std daa (bad) push fwait jns push out scas push sahf mov pop mov stos mov sbb aam and mov push xchg sub nop in fsubs and xchg aam (bad) mov cmp js test mov push cmc xchg lods xor lods mov repz imul push or sti mov add insl daa shll mov iret adc sar pop test ret pop jg dec dec jp add sarl scas mov push push adc xor lret add das pop idivb mov cmp dec lahf leave lahf out xchg pop lods clc jge lcall faddl inc lahf jnp mov lret fsts mov mov push std les adc (bad) mov fimull cmp mov in mov mov mov xchg cmp sti clc fcmove movsb arpl int3 (bad) adc jg or (bad) jne je (bad) mov adc add (bad) (bad) in push push xor aad mov loop sarl mov mov add je xor pop mov jle outsl push sbb inc test call test aaa inc mov jecxz out jne (bad) adc out add mov jp sahf (bad) inc dec jnp mov pushf in sbb clc dec and aaa popf add xchg cli push lock mov je lods add adc cli stc pop (bad) jae rclb xchg rolb jb cld ljmp cmpl add insb scas pop cld jnp lock stos outsl test out pushf leave cmpl adc jnp push sbb (bad) pop arpl fisubr mov push jns imul inc or mov std sbb jmp cmp push mov add (bad) (bad) lahf cmp addr16 sti push mov ja xchg imul in xor in roll mov cmp sahf (bad) pop arpl pop out (bad) cwtl mov in cmp (bad) stc (bad) jl add paddb mov cli (bad) int3 add popa jp jns sahf ljmp data16 sbb push inc xchg aad cmpps in sub xchg aaa jge popf xor in mov xor push fs pop addl add clc lods push mov lahf xor xor or scas mov mov push movl push mov in cmpl add push cmpsl inc and stos outsb xchg adc push sbbl lahf and daa push loopne mov subl mov in mov lods (bad) sub das sbb cwtl jecxz mov inc adc dec xchg out cwtl int3 push cmc mov jp jecxz clc cmp jmp sub rol inc lcall mov clc gs (bad) mov inc shrl add cmp cmp jo mov out sub add jbe rorb lret inc xorb sub iret sub cmp mov pop popl mov pushf lret outsl xchg or sub dec sbb call rol mov clc xor jne jmp aas cmc fdivr js xchg js add lcall loop dec movsb ds movsb stos aad and push adc lret (bad) mov sbb lock adc add sub mov aad mov pop les lods mov push adc and add mov aad clc mov sbb js xor (bad) sub (bad) mov mov fist mov mov mov mov add movl je jmp xchg mov fsubrl (bad) pushf lahf imul pop or sahf push cmp mov pop loope lea add cmp stc mov sarb inc andl (bad) sarb aaa roll ljmp adc std inc xlat mov push rcll (bad) negb repnz lahf jg das jae mov repz xor sub fidiv scas adc stos je scas xchg adc pop out cmp sub push out cmpsl popf mov xchg and xor pop cmp mov jne mov xlat inc jmp xchg sahf clc rorb add push (bad) xchg call pop jg sahf cmp std and or ds es push out outsl xchg push pop jb or addr16 cwtl cltd jecxz xor mov add jge jnp aas data16 xchg cmpsl push js loop ljmp rorl mov fisttp outsb outsl test jmp popl mov jle clc jg test int cmc ss push daa pop xchg sub ljmp clc lea aam push cltd and inc ljmp movsb aas (bad) aaa inc and jb inc mov popf stc mov add jp inc popf mov mov add cmp push mov jo lds aad mov xor cmp mov mov insb mov inc outsl test lahf sbb popf cltd cltd jb mov aad sub clc pop mov fsubrs push xchg push cs movsb xor in sub mov (bad) xchg in adc jne mov xor loopne shll or mov clc ret dec mov dec (bad) mov xchg or ds inc adc pusha fidivl sbb aaa sub adc sbb (bad) fiadd pop adc outsb mov xor scas sub out push mov scas imul sbb pop ffree shll sbb cmpsl jmp fstpl push aad iret pop push (bad) rcll icebp jmp push pop outsl add cmpsb scas pop sti mov cmpsl insl mov mov xchg das pop or (bad) insl mov mov mov push fdivs imul imul push out aas sbb (bad) outsl gs fdivr ret out mov lds popa outsl ss xor popf jecxz mov outsb ret mov (bad) mov inc mov scas in das or rcr fild mov ret subl sti sbb xor pop add push cmpsl xchg or jnp cmovg xor mov gs int3 popa gs mov cwtd jge int paddsb (bad) mov js popf (bad) jne std dec (bad) mov sarl rolb lret lcall xor in aaa mov rolb and adcl gs push push sub orl or out cmpsb call push xchg clc incb popa push or outsb xchg out and pusha clc test jge movsb push aam and mov (bad) fiadd xlat rolb cmp xor pop stc adc cmpsb push cli clc or inc icebp leave xchg out add pusha stos rclb sbb xchg mov std xor aad test cmp dec into cli cmpsl sbb lahf daa inc pop cltd mov xchg mov arpl out xor inc cmpsb adc loopne adcl xchg cs aam cwtl out sbb jnp push jbe xchg outsl (bad) pop addl add sbb in pop jecxz ss mov sub adc clc (bad) cmp jge push dec data16 insl push ljmp fldenv ficomp (bad) jl notl pop arpl aas cmp aas pop mov mov js cmp sahf jl and mov dec or stos pop sti pusha jmp popa sahf xchg and out outsl stos cmc (bad) xor dec push or jae imul xchg pop push jns sbb cmp sub lcall in movsl xor cmp ficomp shlb add test lock and jecxz mov mov sbb mov mov std fidiv jns jb repz cli mov push lahf repnz push mov or jne and mov ficoml sub mov mov and ret push jns movsb fcomps ja (bad) loop les stos mov clc repz lods leave pop cmp int3 sahf pop arpl imul adc mov dec xor cmp pop mov (bad) and sub jl mov mov jp inc pusha leave mov sbb icebp stos stos xlat loop mov fadd mov push ja adc push decb mov (bad) scas lahf adc scas jecxz outsl mov pop or inc shrb mov sub pop test (bad) fs adc mov jp sub xor add cli mov pusha jp clc add mov mov addr16 fwait mov sbb das inc sahf jo ja mov int3 push add cmc jle mov mov scas dec lcall cmpsb addr16 ljmp xor mov mov push pop and cmpsb jbe js rcl movsl xchg xchg in xchg xchg jg addl clc das sbb stc scas and aad push adc jae xchg lds inc xchg daa ljmp xchg mov or clc sub pop sarb dec test (bad) cmp and mov bound mov int3 (bad) (bad) mov xchg outsl sbb mull daa push loopne mov xchg mov cmp push mov pop jnp stos std add cmp or sti sahf ds lcall andb push stos (bad) popf mov notb mov push mov cli mov add or int3 repz and mov mov xlat fucom loop outsl push aaa inc clc in jns push pop in xor xchg das mov rcrb enter js cmp scas add call mov rcrl clc mov xor lds pushf xchg jecxz call clc jb test dec sub add push aam clc push sub daa lahf sub inc aad add sub das aaa jno mov cmp sub sbb aad insl gs icebp xor (bad) push xor out sahf (bad) xor call mov add out mov (bad) rorb es dec in cmc xor shlb lods inc sbb sbb popf popf cli (bad) in sti adc imul int3 pop fs int3 inc fsubrl fwait pop dec (bad) ret out xor push pop adc cli movb iret pop aaa out add (bad) aad lods in cld jmp inc sbb mov mov imul inc mov push scas jecxz int sbb cs jge mov clc push mov add pop add add cmp aas aas lret loopne xor or adc add out ss mov pop jns fst sbb das mov push loop cmp mov int3 jmp out insl inc dec push aad loope or scas (bad) (bad) or movl loope dec test pop std sar (bad) rcrb jo pop lds push pop std out fwait dec std repz mov rcr mov add mov pop xor jmp shlb and adc movsl rsm scas ss dec and adc movsl loop iret aad pop adc repz pop std clc pop and (bad) lock dec cmpps aam cmpsl jl xor inc mov insl popa add insb lds add add loopne es iret pop (bad) push jg dec jmp dec cs xchg sub cmp scas sub push or mov xchg (bad) adc enter lret std push xor jns nop ret xor fcmovu stos xor rcr scas ret fnstsw pushf test insl or (bad) cld inc inc add shlb sub pop ret mov aas inc js dec andl xor inc inc sub movl test dec mov ret cmp rcr cltd jbe repz mov sahf mov int3 pop pusha mov pop mov and rol insb out lds int3 cltd dec or mov mov gs jno,pt jge lahf or mov sti (bad) mov jnp test aam xchg lods jbe lahf jmp enter in dec adc cmpsl pop andl add xchg sti mov dec sbb push (bad) and fwait pop lcall lahf inc mov stc lcall shrb jecxz cmp cmp mov les mov xor popf popa les cwtl cmp pop or sahf mov outsb out dec push imul sbb cmp sub mov (bad) sub int3 js push sbb xlat popf addl adc leave loopne sarb (bad) cmp jl (bad) jp xchg cmp inc pop repnz psubusw clc ds cmpsl pop inc jmp mov mov xor mov cmc es dec and pushf mov sbb cmp negl mov sbb xor adc jg cmpsb popa fistpl or xchg je mov test pop mov (bad) push xchg jae inc cmp stos or mov int3 jge out aaa jae mov and jp jg pop jnp cmp jo mov mov test mov xchg scas into pop fisttp leave addl aad pop adc mov mov clc jo clc mov sbb sarb aas fwait into and dec or jle cli sahf dec (bad) fldl clc mov mov dec int3 sbb rcrb mov hlt clc insb cli and pop push sahf mov jge pop pop pop and leave xchg std lock inc cmp sub jecxz adc ljmp outsl mov mov mov xchg (bad) jl xor mov xchg fbstp fisubr addr16 (bad) rorl and inc cs jo addr16 aam loopne xor jne mov stos push jno jmp add jmp inc push imul mov pop dec mov jl aam and mov out orl int3 (bad) dec xchg mov ret cmpsl xlat fisttp add mov test cltd jbe push sbb cmc iret aaa cmp cmp push inc cmp cmp mov scas outsl (bad) mov mov and cmc push or outsb pop mov mov aas sub icebp loop sbb (bad) clc fdivrs jb or push pop repnz mov outsl mov or add inc cld aam data16 scas xchg cltd iret push mov iret inc mov mov fstpl or rorl sahf cmpsl inc icebp sahf mov mov shl loope xlat inc (bad) repz add push mov lock inc cli mov sub lock sub xchg iret pop sub ret mov pop add pop gs adc outsl jmp das lcall add pop lea ja hlt fdivrs fstps add pop aas inc stos xor mov or ret fcoml inc xchg (bad) lahf cmp mov (bad) dec fidivr xor addr16 push sub pop ja cmp movsl (bad) lock test add imul cmp push add fxch (bad) lahf and pop push mov arpl xor pop aam out ja nop sti or lret inc inc lcall int3 mov das mov loop sub pop xchg (bad) mov out aas push cltd loopne jns xor add ret sti xor arpl xchg lea sbb bound hlt mov leave cmpl add mov pop mov sbb ds sbb and mov mov nop enter rorl push call add add clc push fs test sbb jl xor mov inc arpl xlat and mov mov pop adc (bad) xchg mov sub mov (bad) sub jo push iret sahf sub pop sub or pop xorb mov (bad) mov mov pop mov loop pushf mov in daa arpl sub lahf movsl (bad) inc repnz int add mov or cmp inc inc popf jns mov sub lret adc aas xor mov mov push aam jl mov fwait add fisttpll mov leave mov jp aaa mov lods sub inc sbb incb pop loope jl cmp mov mov inc xor (bad) add jae (bad) dec les mov xchg cmp dec mov movsl popf loop test (bad) mov fld dec add jle in (bad) pop lods dec push aas nop mov dec lret pop fcmovnb stos inc adc aas lahf stc (bad) lds fiadd jecxz sbbl (bad) adc mov cld ret add sbb pushf sub scas jp subl repz xchg jne cmp pusha outsb dec jg mov (bad) pop mov add outsl (bad) gs lds fiadd (bad) dec orl cmp cwtl cmp pop inc pop mov pop das (bad) jns push out (bad) clc aas out movups das daa inc out ret mov (bad) fst jecxz aaa pop shl and sbbl test xlat pusha mov out mov mov in movsb mov sbb outsl inc jns mov pop (bad) push rol pop sti outsl sub mov sub and clc adcl jecxz iret jl movsb ret aas aas fsubrs iret mov (bad) fnstsw enter cmpsb rcll call fisubr sbb inc cmpsb or into push mov in rorb ret ret loop rcrl jl dec cld lretw les dec mov lds addb or inc das mov loope push inc out cmp jp pop rolb jecxz rcl out xor push repz dec mov xchg mov pop xchg or cmp aas (bad) loopne into call ror pushf dec ret aad repz jmp fdivrl push lahf (bad) outsb jbe add jae ret mov xlat mov lods mov pop xchg sahf les mov rorb and dec sahf dec jae sub jg mov or xchg mov cld nop jae and movsbl gs and cmp fs mov fidivr mov jp mov xor mov jae (bad) sahf and imul sub pop sahf or xchg mov sbb ljmp adc pushf lahf (bad) int push mov cltd adc push pop addr16 and adc mov mov jg and scas mov cwtl lods (bad) cwtl clc int3 lock add mov mov push pop (bad) lock dec shrb scas mov dec ficompl and stos jmp pop iret repnz (bad) rcl popf (bad) call xor lret sub aam or (bad) inc mov das pop or push xchg hlt push (bad) hlt xchg jmp xchg iret test rorl adc and psubb shrl mov jg clc insl inc data16 fsubr (bad) dec and cmpl movsl push scas out jo jno dec iret clc push ds dec mov pop mov into or inc stc push aaa (bad) push add dec ret (bad) xchg ljmp inc add dec ja jmp stos xor add ffreep (bad) dec add gs loop jne rcrl cmpsl lcall xchg jnp mov inc and add sub pop adc std mov (bad) sbb mov push xor enter sbb sub push cmp scas dec xor pop pop clc xor int3 pop aaa jns mov push loope or pop sahf out clc cmpsb pop jecxz arpl ja push in scas pop cwtl adc call jns pop icebp push push fsubs mov xchg scas xchg cld repnz cld sbb lcall fisubl (bad) negb or loope pusha cmp xchg in dec fwait loop,pt add jg mov into adc mov mov cltd cmpsl leave fisttpll add nopl ret fucomi and sub push rcrl dec aaa and out cs pushf xchg ret bswap ss aas sahf cltd pop pushf daa out in cwtl mov in (bad) arpl inc push lds (bad) or xchg call in or push in sbb (bad) das jp cli mov adc adc cmpsl mov jbe pop fsubl xor subb (bad) sahf inc jmp ds fs add xchg loop add aas shlb and push (bad) jl repz mov xlat pushf test and (bad) daa jo (bad) sub fidivl mov mov mov add icebp scas ljmp sub xor mov scas mov sbb cmc rcl mov add psubb repnz push std fsubl pop and sbb (bad) fwait lds imul add push xor push sti outsb mov pop test pop test sahf push jge into mov or pop in (bad) xchg add insl jg (bad) or push je rolb mov xor popw jnp mov (bad) in dec (bad) fucom xchg ljmp lret sbb jno insb jo fimull xor test arpl xchg dec fadds pop jge lret daa fidiv inc or jge (bad) cli scas (bad) push mov adc ret mov adc shlb pushf mov aad dec jae repnz int add push lods (bad) (bad) ret and lods adc xlat js (bad) inc pop daa mov das xchg cld jbe (bad) sahf mov jb lods ret pop sub sbb and sub pop sub movl mov testb js jnp or sbb xchg (bad) lahf pusha shl or clc push mov gs jbe in add in sbb ds fbld pop push or jns js out andl push shll xchg scas inc mov mov loopne cmp push cli imul test sub cld lock jo xchg gs dec inc mov (bad) xchg adcb (bad) in adc dec jl js pop leave adc shl jb int3 inc pusha ljmp inc popf inc icebp aaa in ret pop adc repz xorl mov clc mov and nop in rcr add lods and jg ljmp jg sub pop int3 mov jecxz dec xor push addb test jo testb mov add clc mov pop inc rclb pop pop cmp mov mov mov mov sbbb call in mov outsb inc jg stos cld mov push and pop pop sub pushf sbb iret jg mov decl push or stos xor ja pop and jge lret int3 paddw lahf inc pushf gs push jmp aas stos movsb mov push stc (bad) sarl (bad) push pushf mov mov out mov clc inc lea or and adc mov scas or leave cmp jmp mov inc inc popa adc mov stc jge jl out adc push mov repz or adc inc nop jg dec lds ss cmp sub int loope or fistpll cs ds hlt add outsl inc movsb lods xchg ud1 test xorl sub ljmp cmp (bad) push push les adcl or mov pop into into pop int xchg mov dec lods mov bound add dec cmpsl test shlb arpl aas das sahf cmpsl ljmp sbb mov push xchg mov int3 cmpsl mov leave inc out add jnp push and mov or mov js outsb daa adc fild in test loopne mov int pop add mov cmp stc sub pop test inc (bad) les fildll xchg sbb pop adc arpl mov stos add push or pusha or jne lahf mov dec stc add xorl mov lods jle mov sbb lds push mov adc imul and mov add vunpcklpd mov hlt xchg je sub mov sub push imul fidiv loopne (bad) cmc (bad) movsl xchg (bad) sbb in and mov das xchg dec enter sub in jge adc pop cwtl test repnz mov jne insl mov loop (bad) cmpsb lea jmp jno sar cmp dec negl outsb cmp lods inc mov sub add sti arpl into cld cmp adc sbb ljmp jmp test in popa insb xchg addb sarb rcrb lods (bad) cld rcrl add sbb lods (bad) pop aad (bad) mov aas (bad) or jecxz xchg (bad) in test stos and sub in sbb inc cmp iret inc or xchg mov arpl mov add (bad) aaa popl aaa std mov mov cmovs sbb mov push adc jns and das mov lcall push montmul cmpsb add mov jbe push fsubr sbb xchg int3 sub and sahf cltd adc cmp lahf out movsl mov cmp ficoml fcoml in lcall loop push add pop push adc sahf clc jno mov lahf pop inc or pop stc ds adc fildll xchg pop int3 jl mov add jl add add (bad) popa xlat subb mov aaa dec push fisttp jno (bad) mov stc and mov fisttpll jnp pop cld (bad) (bad) stc inc dec mov cld add mov mov mov pop or sub jmp xor mov ret push dec mov jl cmp inc mov inc inc add sub push imul adc rolb add dec (bad) pop leave sbb xor adc int3 out ret xor das clc or xchg xchg xrelease je ds adc jge sub push pop iret in inc jo sub lods js cmp mov jl call leave data16 faddl pop lods push insl aas and nop gs (bad) popa add inc les jnp dec popf push mov push das nop mov out out lods or mov dec mov xor lahf clc sub (bad) addr16 (bad) into iret ret sbb xchg gs scas sub xchg pop inc insb mov ljmp dec cmpsl mov ljmp sbb inc sbb inc in repnz mov jge add add clc lods or cmp mov or sti pop (bad) fimul push and jg pop daa mov dec aad mov xchg rolb shrb (bad) scas pushf popf divl aas pop add jno out repnz pop fcom jge,pn nop stos aas lods test sti mov mov pop mov (bad) in inc or inc and push mov xor dec hlt push jg push aas mov inc add pop xor push push in sub das lahf cs in andb clc add enter jns loop inc bound sahf aad cmp dec cmc mov test mov mov js fiaddl std sub es es daa out dec (bad) mov mov xor aas outsb outsl aaa jecxz arpl pop adcb into adc insl lds loope aaa (bad) mov push int xchg mov lahf ds (bad) cmp mov loop xor fucom mov sbb sbbb xor adc enterw jo xchg push jl stos jbe je popf pop aaa jp in mov shrl iret or push xor je lds and lock jae mov rolb cmp pusha push out xor scas cmp mov idivb loop add pop jge pop inc fdivrp ficom dec push les sub scas repz pop ret jbe aaa pop jo mov jnp repz add incb xor xor aad pop mov mov mov push sbb pop mov mov adc pop in scas into xadd cwtl sbb je pop jge repz fwait pop jo lods mov jns adc jmp mov inc cli lahf aas (bad) clc and imul sar cmp inc add out inc push leave les mov xchg fs jg jne mov jg loope add js mov xchg and outsb clc push pop sarb push xor xchg cld cs outsl mov xchg mov ret nop (bad) lret xlat loop jnp andl ficom fcmovnu push loop arpl mov push xor dec or dec pop into sbb es jle lea xchg xor push mov ljmp lcall pop xchg daa outsl ja js jns adc dec jle pusha in incb outsb cmp jp push push in into imul imul (bad) mov movsb push repnz xchg pop out pop pushf adc xchg in scas pop pushf mov imul jg outsb lods je les lds aas scas fst add pop add addr16 (bad) cld ja pushf sahf xchg pop pop xchg cld mov repnz pop jns cmp mov add ds out cmp (bad) iret test mov out fisubl inc or out add mov and stos bnd icebp sub dec gs jmp lahf inc movsl add mov out mov pop shll fadd div cmp add lea push (bad) pop jo pusha jg test push mov and cmp das loopne jbe daa lds push adc sti and and pop das mov clc int js in mov aas xchg add mov sub xchg clc aam mov jo sub sub add and jmp aad mov dec test popf mov and je (bad) outsb aam outsb or jo gs insl dec sbb inc lret xor mov sub adc lds add fist lar add cmc out push outsl loop nop xor loop (bad) (bad) ja push xchg pop (bad) popf movsb imulb sub jl and in mov out add clc mov scas pushf sahf mov push add sbbb test jge (bad) sbb jg xor ret add ss insl inc cmp pop sbbl clc cld shrl sub or xchg sahf aaa aad ret addr16 mov je jge rol jge iret push adc lock mov mov iret xchg jl add dec push movl inc pop shl cmpsb sbb div jmp xor sahf sub cmp fldl mov cmpl add (bad) movnti movsl xor push sub lcall push aaa push pop sahf dec aad (bad) xor (bad) and xlat cmpsl inc jbe jne pushf or aam push mov or pop les mov incb jg pop jl jo fwait lds xorl or and test mov fistpll cmpsb fwait mov out mov dec and (bad) fs negl fnstcw (bad) jo fist das imul inc mov sub (bad) jb adc arpl dec stc ret jg push sbb mov dec mov stc cld dec mov and mov pop cwtl test (bad) es jge roll clc or add dec data16 xor inc mov sahf (bad) ljmp jne cmpl adc pushl aas sar mov mov xor (bad) pop pop arpl jbe divl scas nop add inc stos jle mov jecxz clc (bad) pusha and aaa mov lods fistpl ds sub clc mov sub fisubrl mov cld push incb (bad) mov cmp cmp add loop mov sub out dec xchg std aad pusha xlat jbe jbe xor (bad) push data16 or or (bad) fucomip dec mov lods mov cmpsb mov inc insb xchg pop lcall cwtl ljmp inc push jnp sarl or insb data16 into movsl ficomp imul push jmp adc jo dec lods mov aas or lock cltd scas lahf popa add movsb mov cwtl int (bad) imull outsl cltd test cwtl xchg inc sahf cmp loop mov jg cmp and outsl inc dec insl mov inc outsl xor xchg add xchg fadds xchg rcll xchg push jb stos dec repz push (bad) (bad) aad (bad) rcr mov jg push aas inc cmpsl jecxz in pop test outsl int3 stos rorb mov ficomp comiss mov inc pminub pop inc or push shll mov adc out pop cltd push and sbb out cmpsb jg add push jg rcll (bad) sbb lret mov jg push mov mov pop out mov das mov movsl mov lds popf adc pop int3 jl push adc and fidivr mov cwtl out or sub outsl jne aas mov push jp scas push inc incb adc jecxz lds xchg or pop (bad) or aas adc ficomp out xchg jnp pop idiv incl or add mov outsb faddl xchg negl dec xchg dec xor addb fiadd (bad) pop aas aad mov (bad) fdivl fsub mov fidivl sub cld loopne (bad) pop xor jg ret addl rcll clc sub fnsave adc and push xor lods mov lcall cmc addr16 les lods or inc int add sbb popf jmp test gs jns je jns hlt mov add add xor not cmp mov push dec sub mov mov out mov jg xor or jae xor and idivb push and movsl dec (bad) mov testl bound sbb ficoml mov jb cmc mov imul sti jg arpl (bad) iret mov sub fwait mov fwait in mov arpl das push mov inc faddp fdivl mov clc cmp ja aas add in fidiv adc add aad push into aas icebp dec in mov jne jne and mov cmc fildll aas scas pop mov cmp std push cli scas faddp inc add (bad) ljmp push fs je add sahf jg adc mov mov out insb xchg xchg jb mov or es mov leave dec (bad) sub jbe aad and sti outsl div and cmp mov pop cmpsb xor or sahf and pop mov xchg into or test jg inc mov or push lahf push or sahf ds out pop rolb lahf sahf icebp pop xchg (bad) pop aas scas or push (bad) int3 jb add fimul ret cmpsb ret (bad) or inc pop in cld lock jns fsubp mov cmp sarb cld jg jl (bad) roll inc sahf (bad) scas ret xchg inc repz add ljmp pop popl addr16 pop rolb test clc jo sub loopne push arpl clc in sub lcall (bad) pushf or pop lds mov fwait into sarb pop pop and dec mov andl outsl sbb fcmovb dec out je xchg inc inc sti mov rcl mov mov sub xor stos mov lcall jb popf mov daa jle jg,pn into (bad) pusha aaa xchg add or ret fimul push jne cmp cltd jns bound imul mov and mov jbe mov aaa mov ljmp (bad) jnp xchg xchg aas or clc rcr cli out pop out outsb in popa (bad) xchg pop push inc mov mov mov outsl (bad) popf jne (bad) push js scas stos (bad) dec (bad) xor lods jl inc mov fsubrl cld xchg and into sub std mov sbb jecxz push xchg movl repz sbb test mov cmpsl cli into (bad) stos cmp stos call add (bad) dec pop inc dec out lret cltd scas jg dec jns mov push movsb cmpsl push mov inc in xchg pop adc out sbb jl jl scas cli lahf mov popl add sbb loopne xchg (bad) mov mov (bad) std add sbb (bad) repnz jl mov pop in into push jg mov ret jl jno mov jb inc jecxz jnp jg addr16 push mov lods aas (bad) adc mov ficom sub arpl mov mov mov inc sbb cmpl mov jns cmp call fs out jns ret lods cmp and and std add rcrb inc incl aad jns sarl js mov push insb popf inc sub arpl (bad) std cmp stc outsl inc ficompl aas (bad) and fisubr mov js decl mov int push jp stos push outsb xchg loope mov mov sbb std (bad) cmp rcrb outsb mov push mov push fnstcw adc fistp cmpb rolb stc pop addb lods aad cmp push fisubl stos fmuls sub in pop pop ficom leave push jp inc mov xchg les cmp imul sub mov and inc js mov fwait jle mov cld push aad aam sahf aaa xchg ljmp (bad) xchg insb push add pop in clc jg emms movsb sub hlt stos or cwtl and pop inc scas xchg mov jg jg cltd xchg dec cvtdq2ps pop mov pop mov inc cmp inc jecxz shrl std nop sub (bad) loope xchg mov lds sbb andl jns rcl xchg xor cmp add movl sub sub and cmpsl pop push mov pop negb xchg bnd mov test jecxz nop jecxz inc adc sub push test cli movsb aaa nop cli mov mov xor mov fsubrs lock mov xor into sub stos das sbb sub (bad) sub adc clc sub comiss sub lahf bound ss push ret sub scas sbb sbb fist (bad) xor push and mov data16 aas mov dec daa and xchg pop mov (bad) jg daa jl aaa testb mov movq mov push jne (bad) (bad) or or aad shll add xor lret xchg fimul xchg outsb scas lcall mov or fcom pop std mov push jo mov jbe or cltd sub or stos push lahf clc enter sbb mov inc inc (bad) je (bad) and jb aad (bad) fcmovnbe jno data16 fist xor xor push jl mov cmp repnz inc sbb push data16 sub jl enter xchg cltd icebp mov mov mov (bad) mov cmp mov cs push jne fstps unpcklps mov aam mov daa mull xor mov add pop int3 push scas lods sub daa pop add lds inc pop lret divl mov fstps ficomp xor push scas pop xlat fidiv mov cli adc loopne (bad) sub insl into cmp das (bad) rolb xadd cmp mov xor out jmp mov dec (bad) lea imul xchg adc bound fnstsw adc addr16 xchg dec dec ja outsl jae (bad) mov xor sti orb push xchg mov test inc sahf jp adc sbb add movsl or mov add jo fnsave pmovmskb fild mov push lea or and mov mov in ds outsl push cmp add fs sub inc dec jmp adc je stos aam loop add icebp (bad) into jl cmp sbb or push aas and jae mov mov xchg mov fcomip add push cs cmp data16 les add jae test push (bad) mov mov dec aaa repz add inc repnz xchg jnp flds rol iret loopne repnz lds sar ljmp test dec xor mov (bad) jmp fistpll repnz jnp sub aas pushf push mov push sub pop mov dec out sbb push fisttpl mov cli mov fcmovbe xor out test (bad) pop imul ret aad (bad) dec push lea xor jnp cmc clc cmp insb lds lods cwtl xor xchg dec and pop and sbb jno,pn nop test insl aas cmp faddl jb repz inc cs inc pop lcall sbbl mov fcomip mov inc setno fdivrp sub scas cmpsb in sub mov cmp (bad) sti clc inc pushf mov and aad inc mov enter or adc mov ja and xchg arpl push adc clc je es add xor repz jecxz lods dec push jl push ret push ss (bad) jge jnp pusha les mov aaa ficomp push (bad) mov orl aaa mov push xor jnp jbe ljmp in in or (bad) xchg sahf fdivr jns aad push mov adc adc aaa data16 lcall and aas out adc neg loop sbb int3 xor xchg sbb insb cmp mov pop les jl cmp adc daa push xchg mov jno inc add sub xor int3 (bad) outsb jecxz mov mov imul pop outsb fsubr std pop mov fldcw jl push inc sahf stos lds (bad) clc in or adc cmp sti sub mov (bad) (bad) je shlb mov mov ret lock notb pop xor mov and icebp jg cmpsl ficom sahf into scas xchg jae fnop xchg pop mov dec call je fwait xor lods lcall mov in inc mov sub dec scas stos adc jecxz mov push inc sbb mov cld lock pop jp aaa mov add sarb pushf xchg int scas or lea sahf les (bad) fstpl repz daa fidivl jb arpl stos sub lds sub jg daa add push rcl lea test loopne es clc clc (bad) std mov pushf dec test (bad) xor jnp sub gs mov and lds movsb cmp outsl xabort push mov in imul and add sub jl mov stos pop cld shll sbb repnz ja les pusha mov mov mov les jne rcll leave cmpsb push ss scas sbb mov ja mov mov clc insl cmpsb sub in jo jmp mov mov mov addl lret inc outsb je cmp sti decl pop jle aas scas jns xor inc cmpl test mov add add ja cld lret lock push ss das cmp arpl pushf cmp jecxz shufps xlat insb das add jnp jmp rcl and add and mov xchg into push dec inc mov cmc mov push test sbb fisubl push addl jnp adc jmp adc aad icebp pop mov pop ds jnp xchg test insb inc cwtl jg mov pop xchg push push (bad) out (bad) pushf lahf jne mov xchg into sub sarl mov popa push lcall inc andl mov aas insl or cmpsb push dec rcr pop and push pop adc lds mov dec data16 and inc mov fwait out das test and jno push repnz aad mov and pop add sub cwtl adc mov fidiv mov push rcrl mov add and outsb fistpl pop mov mov inc roll aas mov lods pusha pop push mov jae addr16 or stc in adc lds (bad) fidivl and stc call stos sub movl test orl rcrl stos mov sub les jnp sahf insl stc ficompl pop xchg jl or roll int3 inc fwait xorb ret (bad) cmc mov test sub mov mov jns aas and mov fstpl or inc mov xchg mov add adc pop add out mov (bad) fisub mov (bad) pop inc ficoml pop push dec ret ljmp xor mov mov pushf xchg jg sub inc fisubrl icebp or xchg stc mov add fwait mov mov dec (bad) bswap lock jl pop aas cmpsb mov inc jns pop leave mov pusha subl push xchg addr16 aad dec in sbb roll popa adc sub dec das icebp psrld push or pushf mov stc in shrb xchg fs (bad) fimull jbe (bad) sub sti lret pop stc cmpsb mov push popa pushf cld lcall int fbld sbb jecxz in push cmpsb pusha mov movb shlb sahf (bad) xor mov ffreep incl lcall sbb inc je pop mov mov mov or mov jbe sub shll int3 sub cmp mov add lods jae jns scas movhps cwtl ficom aas cmp pop xchg idiv (bad) push lcall call lahf pushf call outsb push (bad) rcll xor (bad) sub sbb push pop out mov pop dec add (bad) xchg push push mov or movsb outsl movsl pop dec jge xorl repz insb pop ss xor dec jl in mov cmpl mov mov add fildll fst inc out into adcl sbb sub push inc sbb mov lods cli pop cmp data16 mov mov jl popf leave pop orl jg push loopne cwtl or push (bad) jne pop pushf pop and lcall lahf in arpl leave pushf cmpsl repnz call and xchg xchg (bad) jp mov xchg inc dec iret jg sar sub mov mov (bad) adc ljmp add mov cld mov pop pop or daa xchg (bad) rolb push lahf mov dec inc dec dec stos xor stos dec insl lcall fstpl cmp faddl mov or stc jge test ja inc jge push cli or cmp jl ret xchg inc int3 std popf cmp clc sbb add je mov scas cltd inc daa das push lods and xchg popa lods add stos scas mov scas xor push or jl test mov lds and dec aas inc aaa inc mov mov test aad jmp jbe (bad) out sub mov mov out add das add mov push js push fwait push enter cmp cmp xchg mov iret mov iret inc pop sar insb fcompl xlat (bad) insb or (bad) pop add xchg jg or pop xchg enter mov cmp and add mov sahf jne leave rcll (bad) pop xor stos (bad) lahf lock out jmp adc sub pushf sub push mov sbb out and mov pop push sbb jg jge mov fidivl xor incb or dec in pop sarb or stc shll xor mov push jne ds cmp push std repnz cli push fistp pop jg iret test rorb fcmovbe jecxz and mov mov pop imul xchg das cmp inc ljmp push hlt mov mov dec xor xchg xchg jp sbb cld mov into push sbb arpl inc push dec movb (bad) mov pop fiaddl dec (bad) xor xor cmp pushf mov jl cmc push je or std jo add cmp das sub js stos mov fwait dec or lds scas add add std mov xchg outsb xor icebp clc in clc mov cwtl cmp cltd dec or inc pop or iret lea std pop outsl inc aad and clc cmpsl push fdivl mov out sbb (bad) iret mov fwait dec mov or add stc js orl hlt jo dec sub mov adc repnz aam (bad) pop movsb ret mov mov add in icebp fdivrs mov mov in xchg fcompl xchg test jg sahf lods sub loope mov (bad) data16 mov jl sbb (bad) mov and mov xchg jo wbinvd push push mov cmpsl inc pop cmpsl mov xchg push mov mov adc jae sub in push cmp cmp outsl push inc xorl cmp inc pushf faddl inc cmp insb cmpsl mov iret adc mov pslld inc mov push lahf xchg or cli push orb jl xor mov mov sub sbb fwait mov push push dec loope mov xlat jp out mov cmp aam jmp and jge or rorb sub xchg add clc nop rcl shrl jg scas inc push push adc insl stc push icebp in out inc add push mov in stos fistpl push push arpl cmp sbb fldt out dec cld add aaa dec lret out cmp add rolb div outsl xchg mov and movsb jge push mov pop dec sub int3 pushf cmp out or in jbe jl ds frndint sub icebp (bad) (bad) mov jg jmp popf outsl out imul pop lahf xchg mov aas jge jbe mov ret ret xchg mov adc lahf lret popf incb fstl mov (bad) aaa pop mov stos ljmp cmpl mov jo data16 movsl cmp jge jbe sbb jo repz fisub xor fdivr xchg push push cmc into push add insl movsb dec scas stos mov icebp mov fldl cmp sbb addb xor inc xor fidivr ljmp sahf clc fwait aaa jmp sbb mov out cld pop iret or (bad) push dec xchg jle push jg sbb or (bad) aaa in sub mov rcll sbb fisttpl cmpsl mov mov shrl lret (bad) fidivl aaa jnp push jae pop cli cmp mov mov dec lods test pop test enter ficomp and xor xor clc jge inc and bound mov ret sub xorl add lret es sbb aaa cmp pusha cmp xor ret aad mov mov out mov lds add scas (bad) out mov dec mov mov aaa jo daa out dec clc jl cltd sbb je xlat negb jle xor (bad) sub inc mov movsb jmp aas adc jbe sbb aam (bad) push clc ds lcall idivl pop dec ss sbb std out sbb (bad) ds jl mov mov cld fsub xchg sahf jno or push (bad) aad lahf jmp dec repz daa jns dec mov add xor adcl fimul pop mov jmp xor clc test cmp fwait jge mov stos clc (bad) cmpsl cmp sub daa push or xlat in xor incl scas divb pop mov adc pop inc mov mov clc xor mov pop sub insl xor mov in pop fldl mov mov aaa fwait aam test clc aad fs ror mov pop cmpsb adc mov and jo sub outsl inc mov mov mov sbb out inc or jb in hlt jae sbb mov (bad) repz pop imul cmp push (bad) jl xchg nop cmp sbb mov ret cmp enter xchg adc adc mov xchg add sub mov mov lret dec add cmpsl mov das mov (bad) testl jl sbb adc rcrl mov dec pop xor pop addl roll and scas mov aas xchg dec scas fwait insb loope and and xchg sbb sbb sar cmpsl in cmp popf iret xor sbb jecxz mov sbb int3 fldt jns mov dec int3 sti (bad) cltd xchg icebp mov jo inc pop pusha and or xor popa mov negl or cmpsl cltd sbb add mov jae in cli pop add mov lock in sbb fcoms and sub lcall loopne mov jo lock sub test pushf std lret jg mov jo jl rcr outsb jmp jecxz test sub inc pop mov cmp lods sahf sar add clc popf jne ret and sarb cmpsb scas mov popf cmp lods ss xor fwait sub cwtl aaa cmp notw orl lahf pop punpckldq (bad) sbb clc jns idivl mov aaa hlt cli icebp (bad) lods sbb call push push push mov push pop lahf js fcmovbe (bad) gs mov test mov mov sub scas xchg xchg dec adc or inc hlt pop cld mov (bad) mov mov jb xor inc (bad) pop xchg sub adc bound pop enter fsubrl pop mov adc push xlat pusha or dec testl (bad) or imul scas jg add xor mov scas adc shlb sahf cmp das pop and in mov sbb mov scas sbbl xchg adc cmc cld add inc out rorb stos and lret fistpll les jae std lods mov push out sbb cmp jge mov fwait dec xchg pop data16 (bad) jns test add inc pop jbe push inc xor ds in call pop push add pop pop add loope out cld mov dec add imul adc push mov ds ljmp add mov mov pop leave ds push aas cmp lea lret inc hlt cmpsb mov or jo push mov mov js scas les mov sti sbb add mov cli add mov popa pop and cmp jbe adc ds pop outsl (bad) (bad) jp lds pop (bad) jl aaa or aas les jne ss jno scas pusha mov pop sbb add or ret jbe xchg clc (bad) movsb sbb xlat andb dec out aaa popa mov (bad) rcl jge lcall mov test pop adcl mov aad sub push arpl mov sahf pushf mov mov mov inc mov sbb pushf cmp push idiv (bad) or pop add or jge aas stc cmpsb popa data16 dec sub dec mov mov pusha push stos clc mov mov mov pop jns mov aas sub sbb dec daa js push decb scas add inc push inc testb test fcompl lcall and (bad) cmc or pusha fiadd mov int3 mov jnp movb cmpsl (bad) imul mov and dec out xor lock adc cld imul rolb adc mov jg sub mov mov sbb test add xchg ss nop mov mov or clc sub imulb xchg sarb and iret (bad) notl dec incb inc lcall repz cld mov outsb stc cld cmpsl cmpsb cmp inc mov lds mov sub insl aam cld fistl mov or ds int3 mov adc cmp les mov idivb test jg imul push push xchg xor repz inc faddl cld pop das push jae sub inc mov mov pop add add test sub (bad) into fmull leave inc aam lcall nop lea popf (bad) aas dec adc int3 inc fidiv popf fwait clc insl push mov jecxz or cmp in xor loopne fs pop out clc pop or inc mov xchg mov inc pop jb fisttpll mov lcall and (bad) (bad) xor vpunpcklqdq ja push xor push mov sub inc push cmpsl pop nop mov push (bad) in lret mov jg sbb push jno pusha push sbb out in sub push cmp pusha rcrl rcl sub dec xor fstl dec arpl (bad) mov mov ljmp outsb xchg lea lcall pop (bad) mov xor aas in jbe rclb pop movsb push dec imul dec ljmp pop ds (bad) in insb jae insl or divb pusha inc int (bad) adc scas movsb hlt mov adc pop lret mov xor add cmpsl pop (bad) (bad) lahf xor mov xchg pop sbb cmpsl aas movsb push xchg (bad) inc dec (bad) pushf in push xchg jg dec jno int ret add call mov cld xor outsl arpl out pop dec sbb aad or sub cmp cmp aaa ljmp pop outsb xchg ds pop sahf data16 leave jnp mov cmove and fistpll xor mov fwait mov push sbb xchg adcl orb jg leave sbb mov (bad) mov fldl (bad) je popf aaa sahf sar jo push mov cmp punpckhdq fiaddl cmp das cmc pop test cmpsb addr16 std xchg sub xor and mov dec xchg adc add repz outsb xlat ljmp adc arpl int outsb push add and mov (bad) stc cwtl mov repz dec nop and or pop mov aam xchg (bad) ret stos adc and dec pop xchg adc jl arpl inc aad outsl mov xchg pop aaa xor mov arpl movsb in (bad) lds repz mov pusha sahf xor call sbb xchg push jbe ds fsts movsl leave outsl faddp mov cmp pop add gs jg inc out ljmp pop je inc xor ljmp sti jl add es clc xor ficom and mov iret pusha xchg insl jg pavgw inc or push out iret mov xor dec mov imul cld xchg (bad) jl cmp and mov test je add mov sarl ss jbe popf jnp movsl cmp hlt cltd xor out sbb mov imul scas pop jmp das enter testl std xor stos lahf (bad) pop test push arpl clc or dec xchg sbbl aaa int3 (bad) dec mov and jo or mov sarb add lods push out jnp add jecxz out inc test push xchg (bad) (bad) mov in loope rcrl fmulp sub cmp add in cmp sub jmp js stos fwait pop fidivr in pusha jo subl mov es into pushf lods sbb scas pop pop inc sub jg pop (bad) push fwait ret and push ja loope (bad) stc mov inc ja push rolb pop lds dec stos ds insl fcomps jbe rol inc daa inc sahf and push ja hlt jnp xchg cmp in jmp fwait dec sahf pop mov add xchg inc jle outsl jmp pcmpeqd push scas (bad) or outsl jge js mov test aad popf mov or outsl inc xlat push xchg dec std (bad) outsl (bad) lods ja adc sahf push into mov (bad) cmp addr16 lods das xchg aas cli dec mov (bad) jl jg into mov pusha das jnp idiv jns cmp sub inc mov insl jbe cltd pop pop adc outsl negb pop xor xchg xchg and popf add push (bad) cld jge mov jecxz cmc adc and mov fildl (bad) xor pushf imul ljmp cmpsl outsb mov adc testb scas dec cwtl dec outsl rcll fldpi push sti xor test xor (bad) cltd or pop pusha call xor jmp xchg popl push movsl cld pop mov rorb sete adc cli inc add pop pusha sysret ja movb fistp mov sbb mov and or stos xor data16 outsl and pop stos push jo jne in icebp lods jo adc mov lahf add ret ljmp and mov (bad) pop (bad) ret cmp test out sub aaa ja xor mov aas xchg (bad) adc lds inc pop mov aaa or scas mov push cmp mov je in cld ja fidiv inc push notl test mov aaa pop mov sbb insb xchg mov (bad) clc jne ljmp add dec idivb sbb xchg aaa xchg cmp leave jecxz xchg jl inc pop mov sarb xchg cmp cmpl adc fildll out test ficompl jge test jl lahf and mov inc sbb xchg (bad) jge push cmc mov sbb jb add fs or aaa sarb loop cmp arpl outsl xor in dec pop xchg je sbb outsb loopne dec adc inc cmp jg mov insb lock adc jl inc out mov xor (bad) mov jecxz dec add ret xor int fbld adc lahf mov rcrl lods sbb jg lahf xchg sti mov cltd or movsb mov xchg xchg pop mov sbb (bad) cmp leave inc or cld repnz in fcmovnu fmull fisubr cli adc stc shrl or jbe insb xor pop push mov stos fildll jbe daa into in lahf mov repz push or js outsl push decb out out mov das out mov jl js leave xor int3 mov aam scas sub add fmul repnz pusha std jge rolb aas adc mov adc or cmp aad cmpsb mov mov aad shll (bad) lods shl int3 loope outsb or inc inc push push xchg push mov jb movsb loope rcll xchg test loope or xchg xor popa inc add das xchg adc xor xor xchg lcall js test pop xchg sub pop icebp mov (bad) in aaa adc orl loop adc faddl mov sbb das xor lea sbb pusha faddp mov daa leave pop add outsb jge shrl ret in xchg xor test testb nop inc clc and dec jecxz (bad) push pop adc xor pop arpl iret add arpl cs sub pusha mov jg arpl lds mov rcr sahf inc mov orl incb push lds jge cmp sub pop mov icebp scas fstpt push cmp sub mov int push js cmpsb sahf test cmp daa ret pop push dec mov or xchg inc mov lea adc add jl jns imul lahf add je outsb insb ret sbb jl and lea push cld aaa push xchg and or daa cld aad (bad) push mov add sbb ret fdivr into jns out fidiv pop imul mov xor mov in push mov xchg sahf xor data16 aad movsb xchg add xchg jl ficom push sarl cli rcr ljmp mov add mov lcall xchg in cmpsb in or leave cmc das js jbe int3 mov mov insl lds rcrb mov lcall add scas ret lds movsb imul out xchg popa scas xor mov dec das aas add in imul addl pop push mov arpl mov xor sub mov adc ret add jmp (bad) push add or in mov mov aaa das bound (bad) idivl inc mov test sti lahf jo cmpsl push mov push dec xor and sub pop js push ljmp fsubrl add inc ss pop das cld ret ret push clc les and decb xchg xchg mov rcr movsb cli std xchg cmpsl ja (bad) stos js and sbb nop xchg ficomp push adc jne adc arpl xchg mov cs (bad) ss or cmc jg out fwait sub in add faddl ljmp sbb mov xor pop inc fildl rclb out bound adc xchg mul inc inc pop fnop xor mov vmovss loope hlt jns inc push cmc cld rolb aam mov (bad) cld sub mov xchg and xchg cltd dec in stos retw aam inc cltd jl ret pop outsb les nop add xor xchg add push clc cmp push adc cld cmc arpl sti mov mov add inc pushf out (bad) xor pushf mov sub mov ss insb jmp lahf das jns jmp stc pop jl (bad) aas mov out je mov add sahf (bad) not xchg xchg ret add pop push inc inc jo mov (bad) jl cmpsl sub mov xchg push sahf lds mov insb aaa mov nop scas outsl cmpsb pop jecxz in arpl cmp add pop mov jmp repz or inc xchg mov outsl cmpsb out movsl mov cmp or loopne sbb rclb aas mov cld mov mov pop cld clc out aas roll mov mov aaa cmp sub mov jmp rcll push cmc push mov xchg outsl add aam outsb adc pop cmp ret lods lret enter lret cmp repnz add pop lcall mov add sahf push daa in mov jge daa mov pop inc les xchg (bad) das ret mov imul imul mov push adc lods lods stc insl mov inc dec loope xor add inc push jno insl (bad) sbb mov fidivrl (bad) sbb adc popl mov je inc and and lods stc push bound and cmp mov dec sbb es jbe movsl cmpsl shlb and sbb stos pushf imul cmpsl decb mov jmp mov (bad) out fdiv pop clc mov mov aad int3 in jecxz je fstl fwait (bad) decb adc dec cld adc mov fild dec xchg jg daa in mov mov rcll out movsb sbb loopne pushf pop xchg sub mov pop cmpsl jl loopne rdmsr jmp adc mov adc mov inc fsubp ljmp sbb add xchg pushf dec sbb push mov es in arpl repnz jae pop xor ds add mov add mov cltd lods mov cmp rcr lea cwtl popl insb jg std ffreep xchg xchg dec inc (bad) pusha in sub cmp push pop mov aas adc pusha add scas xor lahf dec imul fcmovb add (bad) repz or jae inc roll out or mov pop jmp xchg stos (bad) rorb std mov das pop js adc repz pop pop mov fidivr mov (bad) mov jge add pop or and jl mov scas sahf outsb jnp outsl loop add jge decl clc mov jne mov test mov (bad) adc mov cmpsw xlat jecxz (bad) sub pop jg pop jmp mov (bad) mov aas scas stos mov mov scas sbb sbb jae xchg cmp xor gs (bad) aaa mov xor movsl cmp and jge psubsw mov add inc mov clc cwtl push loope push pop push (bad) ds mov cmp jb jae (bad) jge jns clc dec sbb loopne push pushf stos movsb add das and cli cmp and sbbl aas cmp shld in sbb adc xor jmp std js mov (bad) loop pop mov enter add lds add mov adc sub in push jmp repnz (bad) sti lcall sub lds scas jge mov sbb scas and mov dec fisubr mov faddl or sub and mov out mov pop fimul dec adc nop or pop movsb mov sbb aas cmp mov mov push in pop mov and (bad) mov arpl dec scas rcll add aad adc pop lds in mov scas or push inc xor and clc cmpsb jo xchg test adc sbb mov xor call jbe cmp add leave push popa sbb mov repz and or mov adc jge mov and and fidivr clc jl adc or mov mov lahf es movb mov fstpt jnp pushf lods dec loop fisubl push movsl pop jg scas xor fidivr (bad) mov or out clc out rolb out leave pop adc mov dec xorps or mov idivl adc sbb mov insl js scas cli insb stc jne loopne (bad) pop sub addl mov adc xchg scas popf enter sub cmp fidiv scas jb shll sti aas push (bad) mov shl jo mov outsb mov xor mov pop (bad) cmpsl pop ljmp les mov (bad) pop xor mov xchg mov mov push adc mov sbb xchg in ljmp iret ret push adc lahf (bad) sahf rorl in or (bad) rcrl cwtl psrlq push inc jl,pt std shrl pusha add mov mov mov stos (bad) mov fidivr mov or jae cmpsb lods out jle push mov insb xchg in cmp dec outsb les (bad) xchg (bad) mov pop mov sub mov jecxz addr16 (bad) rorl sarb xchg xor pop sub pop xchg cwtl rorb mov daa push imul pop push cmpsb cltd xchg incb ds int3 fxch daa mov xchg std clc mov or (bad) shlb out out mov jp lock add add add push int jg push ss dec test xchg xchg stos mov push test adc mov stos mov lea xchg mov sti dec mov sahf leave stos arpl (bad) fildl push int3 add aaa pop cmpsl sub jbe mov pop fisubrl (bad) rorl icebp sar add push (bad) into cli and mov loope orl or js (bad) dec ficom mov (bad) jl mov mov clc jae out test or das int lock adc (bad) std and movsl xor add loopne dec or mov inc out sbb lods int3 mov bound lds outsl lahf (bad) jmp jle repz or jo jns mov push mov add xor or addr16 setns sbb jge mov xchg jg inc and stc ret lret test setge loop mov es jb fwait test add mov rorl adc inc mov sbb cld in add sti jge adc or imul (bad) and xor je loope aam (bad) es enter xchg xchg fimull pushf adc scas and popf outsb orl xchg mov mov pop add iret (bad) pop (bad) xchg aaa repnz fdivrs fs jl cltd js out shll pcmpeqb and leave setg mov jge and pop cmp iret outsb mov repz (bad) ss stc sbb jns mov jns mov and call aas mov rorl int3 ja mov (bad) cwtl incb xchg ret pop sub and push adc out test inc out adc cmp mov pop and insb jl xor pop insb inc (bad) mov sub in jmp popa cmp jnp mov jns scas push sbb push nop lods fwait ret out cmp mov cmp pop sahf out push js std cld loopne (bad) xor in fiadd movsb xchg lcall add pop repz popf movsb aas add or sbb xor rorl or insb sti cli adc fptan push ret fcoms sahf adc pop jmp test jg sahf sbb push cmp jl ret inc push mov push (bad) outsl jo pop scas pop mov out lods sbb (bad) mov lea sub mov (bad) loop aas js inc mov loop mov mov inc test jl cmc add jecxz adc out lds int3 mov lock mov je sub hlt fldenv adc cmpsl andl dec insb mov lahf add out popf and push or daa pop sysret pop mov add mov sahf cmpsb outsb xor lods stos lcall arpl mov clc lds lahf les inc pop mov push das xor mov and popa clc cmp aaa and enter aad inc mov and add sub lods add jmp add pop mov call repnz pop insb adc mov ret arpl dec lahf jns mov push outsb mov out cld aam fnstcw inc cmp aaa sbb mov sahf (bad) je dec stos rcrl and js mov push mov pusha jl mov loop cmp pop pop adc js sub sti xchg cmpsl adc das push sti jmp pop cmp mov mov adc pop stos sbb sub inc into sub push aas loope out sub or jl add stos sub (bad) xchg xor mulps icebp xor sub and mulb mov push sub dec fnstsw ret push fistpll not add lahf cmp pusha xor push mov dec outsl sub and aad test jge in sarl mov or jge adc aas into jnp pushf mov sbb mov pusha cld and dec sbbb (bad) mov mov mov orb in or lods inc xchg (bad) btc int cmp sarb push inc sub hlt repnz pop cmc xor aas dec cmp sbb mov daa sbb push cmp movsl pop rcr ljmp in or repnz adc xor cmpsb pop stos xor repnz dec scas addr16 mov pop (bad) fdivl xor jnp xchg out add je jb and stc jae dec loop movsb sahf fist xor sub mov ret (bad) shll out loop sub xchg or jecxz mov and and inc and nop push cmp data16 and movups xor cld mov es xchg test aam xorl not mov mov jecxz mov xor jns fs adc (bad) adc (bad) lahf cmp sub push and add repz aad add call sbb pop lahf and dec in cltd ss jp push push ds and aas inc scas pushf outsl cmc aaa in clc jnp int3 dec shl mov subl clc (bad) mov jp xchg mov aam mov adc mov xchg xchg cs enter daa adc call pop in mov push nop dec xor or sub and xchg jne cli int3 add xor fs dec jge fldt adc sbb mov neg pop daa or dec int sub arpl inc (bad) (bad) aaa enter adc mov loope xchg add xchg scas push mov or jp pusha in (bad) nop push iret loop sub mov and jl outsb cmpsl (bad) mov aas (bad) shrl js mov xchg adc xchg dec sbb pop or nop mov dec pop aad sbb sarl aaa adc loopne push (bad) sarb fistp das test aam mov or mov jnp mov pop mov jecxz mov inc adc inc int3 mov or (bad) sbb sbb fldt push or jge ret add outsl out pop sbb test or sub shr mov lods icebp mov xchg lds (bad) sbb sbbl mov cmp xchg mov lret add mov inc out pop popf jae add pushf and pop pushl (bad) cli mov and mov lods add xchg push inc push mov scas in jg insb ss repnz scas test popf lea (bad) sbb por daa cltd (bad) cld push (bad) in jl jmp sbb inc jle mov sub clc push dec leave aam sti push add sar fidivr mov cli jl (bad) jnp xchg sti sahf cmp xor jl jns mov pop push inc or enter mov (bad) scas aad adc add cltd cmp (bad) (bad) out jne popa outsl pushf sbb dec xchg pusha adc pusha nop sarb pop in pop les fidivr scas scas arpl dec mov in and aaa xor fwait mov sub pop sete xchg scas fwait cmpsb and imul stc movsl or out loope rcl cmpl nop pop arpl scas cmp scas lahf inc dec cmp or mov aad in jnp or stos xchg fcmovnb inc addr16 mov lods push inc cmpsl push xchg pop cmp sub lret int3 lahf mov popf inc mov repz push add aaa sbb ret sub daa inc adc push aas cmp mov movq sbb pop aas lret int3 pop xor xchg xor jae push mov fs scas mov ret scas adc aas lds or das mov mov push add mov mov sub addr16 daa (bad) push lahf sub xlat mov in mov movl test mov nop xchg das jl ficom ljmp mov jmp out sub cwtl adc mov popf ret int3 xchg out jns cld mul cmp leave lcall add or mov lods and dec arpl pop pop cmp xlat jecxz daa adc pop mov adc push inc sbb dec arpl movsl jle sub add mov hlt mov adc cmpsl add mov bound sti lahf daa mov dec add sub pusha xchg lods lods dec ret cld fcmovbe mov insb push jp aas mov xchg pop push xchg mov xchg dec sub sub daa (bad) xchg xchg jg inc cltd mov (bad) and mov in (bad) (bad) mov mov xor add ret aas xchg jp inc adc cwtl cmpsb in scas cltd test hlt stos push mov mov ret rcll hlt cmp sub mov pop (bad) mov std (bad) jg lahf addr16 test dec lea arpl popf pmullw adc repnz rclb jno andl addr16 aas mov dec pop mov (bad) pop add call mov aad push cmp and out sar pop xchg (bad) and add or xor jne push aad cmpsb mov repnz mov push pusha hlt rolb (bad) jns pop out push (bad) addl icebp lea lahf cmp les js cmpsb jbe leave imul xchg movsb ds xchg out mov cmp imul jg jnp das adc pop mov push aaa movsb pop or mov pushf xchg inc (bad) mul lock ds jmp ret je aas in xchg loop xlat nop and clc (bad) ret rorl and jg mov mov cmc dec loop jp jp pusha xor in pushf xchg pop cmp outsb cs xchg ret aaa push (bad) lahf cmp jg mov std pop pop cmpb mov cwtl jo lods int stos push or aas sbb mov ds xor test sub bound mov jnp xchg cmpsb mov jo sub aaa loop mov scas mov inc add mov test clc dec subl or aas sbb pusha mov sub in loop push sub jmp or fldenv push sbbl or (bad) movsb scas push pop shrl dec mov ficompl mov sbb or ljmp repnz mov jge aas fcomps int3 inc dec fs push stos xchg (bad) mov (bad) fisubl fdivs sbb mov mov adc inc pop mov loope (bad) leave aas mov mov push cmp (bad) sbb pop xchg sbb scas or sbb imul add cmp jle mov mov dec (bad) fiadd mov mov decb jge stos mov int3 add in fdivr pop sbb jbe mov cmpsb pcmpgtd jo lahf mov push cld je fucomi jecxz mov dec rcrb sti sub cmpsb dec jg adcl cmp in jecxz and push lcall (bad) aaa adc inc test (bad) repnz (bad) fsubl push push xchg mov outsl push ss inc mov std cmp jns mov and sahf lea inc or mov push xchg xor data16 or clc jp inc insb sahf xor pop js jae outsb (bad) and mov mov loope sub shr les insb mov mov jne scas ljmp mov out scas sub popf lahf sti mov jl mov jns mov inc mov push ds insb leave dec lods mov adc xchg das sub sahf loopne or fstl jecxz popf and xchg pop loope outsl inc mov pop inc (bad) jbe push (bad) mov jmp adc (bad) pop mov and jg dec pop sub xchg jecxz mov sub inc cmp mov mov incb outsb popf adc stos lcall ja adc lret ljmp xor outsb cltd cmp cmpl cli push repz cli pop cmp or xchg dec ljmp jnp cmpsb mov into fdivrs insb aaa out addr16 (bad) lods jge sar fcmove mov sub jle sahf (bad) xor jnp inc cmp leave stos and ret dec dec mov call mul shl lahf mov cmpsb adc xchg xchg sbb bound xor sub jp sub mov cmpsb dec mov lods xor dec push jb mov bound nop rolb nop mov mov cld addr16 loope push push cwtl xchg push (bad) out xor mov movsb loope sbb scas (bad) dec mov cmp cltd mov pop rcrl jmp mov ja inc pop scas dec cmpb sti mov sub scas pop jp mov (bad) xchg pop ljmp mov out pop daa xchg mov inc bound adc lods adc mov daa and bound jecxz mov xchg fcoml mov ficomp ret xchg mov negb adc sti inc sarl insl int3 push ret je cmpsb mov fisubrl inc inc lds stc int das mov fsubl (bad) fnop mov je xor out mov mov push mov gs aaa out inc (bad) out sahf and lcall push cmp scas sbb (bad) bound inc test jo xchg pop jmp mov mov push loop pop mov jns cmpsl int rcr das xor push pusha push in add insl lahf mov insl ror dec lds (bad) xchg call mov jb jbe dec stc (bad) out cli scas cmp in cld and iret pcmpeqd in hlt fisub cltd lods movsb mov push (bad) fsubrl mov in mov adc push nop andl xor inc dec mov jnp mov pop jmp das dec xchg sbb xor cmp std mov and or dec push mov xlat (bad) into insl add sub (bad) aaa movsl test rcrb ret fcompl ret loopne cwtl addl rdpmc xchg daa add sysret cmp xor xlat pop xchg push dec int or push cmp sbb popf jns lock outsl push or xchg mov aaa scas pop aam pop jecxz cmp lret pop and sub incb rdmsr push fs mov jmp push mov pop imul xchg cmp or xor sub and xchg scas mov push clc daa or pcmpgtd inc nop (bad) dec xlat add aad cmp (bad) cmp pop xor mov pop sarb or or jg scas lahf outsl ja lea jg idivb int cli dec jo lods push dec mov test mov stc cmp (bad) in cmp pcmpgtd int std in push daa sub in test push xor add test pusha (bad) mov inc cs xchg aaa int3 addr16 xchg jecxz arpl ret setl adc sbb in jle lahf add pop cmp sahf mov addr16 add stc jae clc mov (bad) mov out je ljmp inc int (bad) fsubrl adcw ret sbb leave push mov inc jl dec or scas dec sbb mov (bad) cmp ret test fldl out inc lahf aas and daa sub mov data16 cmc jo,pt cwtl mov repz jns addr16 mov data16 out outsb fistpll xchg push scas sub movsl imul ljmp (bad) sbb (bad) jge loop paddsw jno or (bad) adc fscale (bad) jg mov adc sub and fcompl add jecxz sarb xchg mov out ret jno lods scas (bad) push mov clc or add subl daa mov fsubs inc (bad) sub daa xor shlb and clc fs xchg cltd ret rorb js inc pop sar xor leave clc and rcl adc (bad) mov call aaa and out loopne test mov push pop stos and push pop mov aad cltd xor aaa mov mov mov cmp lds xlat imul adc cmp push stc jl repz sahf lcall out fs out icebp outsb add or add (bad) cli jle mov xchg out out jmp dec push adc pop add and push pop cmpsl dec fwait outsb into dec or stos ja out mov xchg cld mov inc out sbb xchg push (bad) out fs mov and decb push das int3 xor mov out les mov movsb mov in movsb mov mov jnp (bad) adc (bad) sub sbb aas es and popf mov test xchg in push mov sahf sub xchg mov and cwtl ds hlt les lahf movsl movsl test inc sahf or mov lcall mov mov and cld mov sbb sar out loop pop and mov xor inc negl test mov arpl pop xor push dec push clc idivb mov mov dec daa mov aas jns or jnp inc adc jbe ret pop adc cld lods inc add lea cmpsl mov lret mov cld jae (bad) clc adc xchg (bad) fsubrl das cmpsb iret dec ds negl roll decb std scas mov xor ja lods jo pushf pop inc dec mov add add xchg inc jl pusha ret jb,pn mov jne push cld add push sahf das inc sbb sbb xor bound jb mov xchg cmp stos push cmp scas push pop cmp movsl mov int3 and (bad) daa (bad) js add pusha ret or ret dec push frstor (bad) push push and push mov aad mov jns int3 stos or mov out add aaa ret ret ficomp push mov mov mov add xor stos lcall out xlat in lahf (bad) push lahf enter cmc and cmp std orl js loope aaa stos leave push jbe dec mov subl mov or mov xchg inc out mov std (bad) (bad) icebp aaa jae test lock mov fildll clc mov lds ret (bad) xor jecxz ds push inc jmp add mov clc call mov repnz push sub inc je push cltd fbld pop (bad) popa dec pushf xor rcrb scas push pop sti (bad) in jae add shl pop lcall daa xor lcall imul mov scas sbb dec popa dec and push (bad) rolb xchg or imul inc inc ret pop femms jns leave mov dec mov cs test dec (bad) xor pop addl jns fwait pushf add movsb mov inc (bad) clc push xor mov arpl inc and jecxz xchg and and inc mov jbe lahf repnz mov xor int3 (bad) inc xchg inc lret add cld loopne add lds in (bad) xor jb xor fs cmp adc pop (bad) iret enter aam xchg and dec js add ds test js mov xchg daa iret inc clc cld inc adc sub out dec push jno xchg pop scas pusha scas js movsl dec fadds aas clc movsl in xchg and lea push jo jns xor insl or les adc sbb (bad) lahf inc xchg mov inc mov jbe mov jo (bad) fisubl xor sub push sub jo jne sbb (bad) mov cli clc pop push ret mov and fldenv (bad) icebp jo jne jge (bad) out inc and jae cli xor sbb in sbb test mov clc xchg (bad) adc mov test mov push sbb outsb popf ljmp mov sbb mov cwtl xor push dec in jbe fcmovnb cmp sarl aas jns leave sub pop adc aas data16 test clc push sbb sub scas jns adc jb pop jg scas cmpsl push adc dec push (bad) jg jle aas mov mov or aaa or push dec lcall add or inc pop cmp (bad) aam adc ret divps (bad) popf aad add loopne sahf pop mov aam inc ljmp idiv scas sahf jecxz pop cwtl nop fs mov clc or (bad) xor inc mov in pop jae xor aad dec pop mov jo mov mov das pop mov mov mov adc (bad) push pop mov jl daa inc jg lahf movb in or (bad) mov mov fistp ficompl push rcll add xor push loop fadd or pop (bad) adc in outsb ja movsb stos aaa (bad) mov das inc jge push (bad) lahf pop pop lea scas sbb aaa sbb stos lods pop (bad) add adc sub ljmp pop jge mov mov sub and jno cmpl rcll rcrb sbb fmull xchg jbe repz ss daa sub mov test pop sub push aas rclb mov pop jecxz sbb mov or (bad) jge jp repz in jno vmwrite out pusha jl subl jecxz clc mov out mov into inc mov mov fistp xlat mov adc mov mov adc mov pop pop mov sbb and js aad loope sbb cmp mov mov xchg out push out add in aaa stos pusha jnp nop pop out push pop (bad) aaa aaa cmc sbb das rolb out and std and arpl mov ljmp sahf mov adc push sarb xor mov mov lret sbb mov popf cmp aad mov push cmp xchg jno (bad) sub fs aaa cwtl push pop dec repz push divl or and adc jle pop xchg add add sub xlat or hlt repz cmp xor adc mov xchg out inc xchg enter test lahf clc test and or (bad) loope sbb daa aad imul pop cmp mov xchg pop (bad) mov cmp lcall ret leave push xor stos pop insb loop sub jbe xchg pop dec fwait mov imul pop cmp lods ljmp mov je or scas mov pop std fwait xor and cmp gs push fisubrl decl lar mov push out loopne (bad) scas mov mov repz sti sbb (bad) sti into jg aad and outsb inc push outsl mov ret sub jp (bad) mov hlt sahf inc (bad) lret aaa sub pop push and sub loope inc jecxz mov inc mov insl push mov push mov mov pop insl loop sub jge and ret ret push pop push jae js roll and jbe loop stos push inc jg inc aad call movsl jo stc cltd jae in push cmp pmulhw add in int jg lds jmp mov lret xor or je sub pop or sub lds sbb aas dec mov movsl dec mov xchg pop lahf and jg pop xchg pop mov mov sbb in fidivrl sbb movaps enter cwtl and pop fcmovb das std icebp adc or fcomps lcall addr16 sub fstpt mov or sahf mov push push push scas xchg aaa insb adc adc jmp stc push and pushf inc lods aaa sti jl rcrb je push inc sbb (bad) mov out mov aas or pop repz or (bad) cmp lods mov or and mov fstl xor mov cmpl aad and enter push fwait jl inc pop stos lret sahf or ret lahf leave cs add cld repnz rorl and shlb outsb sbbb fisttp rcrl add ds cmp cmp lds clc inc rcll cmpsl mov aas add push scas cmp sbb xchg rcrb mov xor dec loop out push aad lcall mov incl cmp sub mov call andl sbb xor sub shrl (bad) (bad) ds pop out subb jecxz add xchg dec fcoml aas pusha pop cmp movsl adc imul xchg aaa xor sub aad mov jne or aas jno arpl sahf pop sti cs and test (bad) mov mov pop cli cmp out sarl repz scas (bad) fiadd add push loope mov add lods mov out fistpl (bad) pusha repz sbb fisubrl xlat aaa stc cmp (bad) mov mov movsb jns push cld push inc cmp lea dec jbe dec sub jnp dec (bad) jge pop inc (bad) xlat int (bad) mov test cld into stc das xor push xchg subl enter je lret jne dec arpl mov std cs sbb push xor xchg pop scas jns push (bad) mov scas mov dec jp outsl cmpsb in push aaa fcmovne ljmp dec stos fwait sub clc cmp and aam xchg sub jo lds dec rcl mov jns leave clc aaa dec mov lea sti add inc xor inc xchg adc adc in sbb jp rcrl gs mulps jb stos out aaa sbb lahf jge sub in rdmsr stos jbe mov sub pop lahf push add mov jg outsl outsb test ljmp add into data16 dec mov push leave cmpsb pushf in jnp outsb fdivl (bad) cmp jnp pop mov cld call scas bound jnp aad mov decb xchg xor mov mov dec sbbb movsb push cmpsl inc lahf jecxz jb mov and mov sbb sub or out jae inc out pop and pop insb or jg or out cmpsl sub lahf (bad) popa or mov loope add pop mov xchg and and inc adc mov dec push loope mov or ds dec jle std lods aam or imul js (bad) iret je dec test daa dec jp mov aaa lcall lds lahf (bad) daa (bad) cmpsb pop lods ret or xchg orl pop cmpsl lret call scas mov (bad) out xor movsl inc les je (bad) enter loop pop inc imull push in sub es lea jbe ret out sti daa fimul aad mull mov mov mov outsb sahf sub ret xchg arpl in imul mov out jg out (bad) iret sahf les or xchg dec enter fidivrl test out mov push in lret inc in insl jge (bad) pop mov in pop mov mov mov je push xchg inc mov push push sub mov adc cltd and push sbb sbb dec pop mov (bad) dec cli in scas pop mov push mov insl pop push jbe cli cli sub hlt pop test lahf (bad) lahf cli loop and rcll sti mov and mov mov mov inc mov cld aaa stos inc movsl stc (bad) imul mov dec aad xchg imul (bad) (bad) call sbb xor dec insl dec or je jae or repnz fwait jo (bad) push pop add loopne leave mov sahf dec pushf out mov negb stos dec cmc cli rolb pop call mov sbb and adc lahf loope fcomps imul cmpsb hlt nop dec mov into xchg and icebp xlat jae repz jge add inc dec les cli push xchg mov int adc xor ss sahf push cld mov mov enter repz fldenv insb jae in add inc sub cmp and leave add fisub aaa dec jl leave mov or xor cmp fcmovne mov and mov stos or lods adc pop dec sub lahf sbb movhps test or adc xor xor imul addr16 ljmp mov ja or sarl inc repnz ror push dec sub aas jl (bad) icebp loop (bad) repnz xor pop dec cmc or das xor xchg sahf outsb inc sbb mov push lods xor inc mov aas cld push jecxz pop or scas xchg (bad) mov mov mov aaa bound xor jbe jbe sar addr16 in (bad) jbe mov jns xchg sbbb push int3 push dec popf es cmp push loop sub dec out adc jecxz fbld out adc pop ret idiv js clc push stos fsts loopne mov sbb (bad) xlat or or jae lret aad lods stos jge,pt mov (bad) fdivr test in jo int3 mov aas aad iret clc mov xchg mov rcll fwait in add mov aas (bad) js (bad) push adcl pop cmp lahf mov scas jns cmp js out test cs test fwait mov cmp ret test push mov out (bad) xchg mov pop (bad) jo (bad) ljmp xor arpl fcomps dec sbb cmp jge xchg (bad) jp imul mov dec scas sub outsb jo mov aas fsubrp add insl fsubrp packuswb or stc (bad) jae insb in (bad) mov shll mov test (bad) out fdivrp xchg popf movsl in and cmp and jb neg ds out xor xchg mov jge mov xchg test pop fist vmovhps (bad) jecxz ljmp mov aaa mov mov insl adc (bad) aad aad scas adc in mov cmp (bad) repnz add dec psrld dec ss pop das loop (bad) jo ret js jae roll pop mov inc popf mov fs lahf cmp xchg stos xchg dec or lahf add add lahf fstl mov and sub (bad) test repz gs incl cmp mov stc gs sub inc pop ret jp pusha outsl xlat dec jnp xchg js ljmp jo mov bound popf stos xor pop inc es loope insl or int3 fwait xlat inc aas and shl jl fdivl out mov xor pop fidiv pop in (bad) mov jl mov shrb fistpll add scas jmp sbb mov movsb mov xor lcall loop lcall rolb pushf lds adc pop pushf das stos mov imul shrb sbb iret jl aas push jmp pop mov int3 sub push in adc jb and loop fldl pop js stos cli (bad) stc mov test clc out das lahf xor test adc inc sbb clc cmpsl and sub aad mov lods repnz pop xor clc mov in frstor fisubr dec in test sahf fstl (bad) sub inc mov pop jecxz xchg mov stc aas (bad) mov mov lea jmp test pusha push shr jg sti scas jl mov out rolb xchg (bad) bound loop mov and add test xor rcrb lea push in mov dec xchg inc cmpsl jo mov xchg ljmp fucomi enter pop xor je sbb icebp add (bad) jge std sub ret inc pop add std mov and aad loope mov scas (bad) sub (bad) popf lret out (bad) loopne push dec (bad) cmp clc mulps iret mov aam loopne jg dec xchg cmpsb jge dec ljmp pop pushf push inc mov sbb outsb imul sub mov inc dec pushf pop leave nop cld movsl or out mov into in js movsl fwait mov mov aaa mov xor (bad) mov mov sub out or jns or icebp js cmp push mov and (bad) ficompl xchg cwtl mov movsb ret sub inc rcrb mov push dec push hlt jae jb sub int sbb mov xor (bad) sbb fildll and test xchg add sbbl popa jmp adc sbb cmpsl (bad) push push jns adc dec fbstp sub pop pop aas or push (bad) mov dec sbb push loopne out mov or js clc xor inc rolb daa (bad) popa js fucomp ret mov fnstenv (bad) das arpl mov (bad) (bad) (bad) scas pop and sub rol lock ljmp ret add mov (bad) lods js add (bad) stc pusha clc (bad) aaa xchg cmc adc mov mov pop sbb dec ret sub adc into ret bnd (bad) jae insb and imul jg xchg sub data16 cmovs aad imul ret jp rcr and (bad) iret ljmp jo clc movsb xlat adcl scas gs clc in adc aas pop aaa imul lahf sub cltd out push or ss loop jnp xorl mov pusha mov mov imul mov clc sbb int3 and lods adc cmp mov dec adc (bad) mov int std outsl xor push les cmp push (bad) mov inc fucomp outsw mov mov or shl push ljmp mov mov outsb mov mov mov pop mov pop jge jge les mov pop push test dec (bad) mov lea mov test out negl jne or sahf fnstenv mov push cmp xor pop repnz jnp (bad) mov shl mov ret adc lds inc lahf sarb ret inc addr16 lds (bad) clc sbb cmp les jns ret les std sbb ds mov xchg scas jns std pushf pop fs mov jno fcompl xchg rcrl outsl cmp dec jnp adc orl mov in or mov sub cmp or cmova mov js add cli imul xchg mov rorl paddusw cld sbb inc mov mov and sbb vmwrite std stc loopne decb cs lods sbb cli (bad) lcall ret les jg ret les (bad) sbb mov jecxz mov dec ret ret rolb xor push inc iret jg pop pop mov sub inc jg mov xor outsl sarb add lcall or push dec pop cwtl cli aam cmp mov imul mov (bad) clc cmp add roll or repz fwait or mov pop aad (bad) int3 sub inc test bound scas pop roll insl (bad) imul jecxz outsl mov mov cmc mov push insl sub sub (bad) push push rcrl repz inc cld aaa aas loopne addl and pop add xor pop aam int3 cwtl sbb outsl push mov or sub and jns mov pusha adc dec btr leave mov bound out lea xor out mov mov and or inc cmp mov ret xchg in sub inc pop pop in lcall es mov clc outsb push (bad) ffreep aad sbb fstpl mov out jg sub cmc sahf (bad) lds popf (bad) jg cltd xor aaa pop mov push pop mov mov bound loop xchg mov test lds aaa and push lods mov dec or sub out aas je xchg cli jo mov pop dec (bad) fimul mov xchg ljmp outsb xchg movsb push mov jbe dec inc iret cmp sarl aad lahf scas cmpsl push xor fs lods adc cmp push jbe push xor cmc imulb xor and push mov jnp push or adc sahf sub fs jns out out ljmp (bad) and rcr xchg xchg out jl xchg lds into in rclb mov mov mov bnd mov out mov pop sbb adcb scas add xor cmc int fbld aad les mov les xor es aad jns or xchg (bad) loop pushf sub mov stos or fiaddl add outsl pop fimul idivl loop iret daa fiadd insl fcmovnb push inc push incb pop jp mov push mov imull sub ljmp out mov (bad) pop mov test xor push mov mov ret iret mov dec or in inc sahf cmp stos and sbb mov into cld in jecxz sahf dec mov sbb sub inc jg fsub movsl out cli mov sarl aas leave rcrb in lods (bad) popf insb call cmp jl loop mov pop clc mov das pop and pusha lods in mov aam ds aad and (bad) mov xchg in or leave adc shrb mov jg dec mov xor cmp xor (bad) mov xchg repz cmpsl lcall lods cmp outsb pushf xchg das lcall in push int3 cmpsb mov add cltd scas sub sbb cmc xchg insb nop mov sbb scas in mov (bad) icebp cmp ret xor inc xor xor sbb daa lds fisttpll loopne incb pop out mov sbb or jnp xchg push mov enter mov push shll cmp pop mov outsb cld fidivrl (bad) and adc cwtl aad test pop aaa mov call jecxz jp add pop mov lret (bad) xchg fnstenv arpl mov jl inc arpl xchg mov dec mov dec jg cmc xchg dec add movsl add fbld pop adc mov push (bad) fdivr add fdivrp pop pusha (bad) cmp inc pop aas xor xor xchg pop xor cmp lret xabort fwait out pop cmp jg shl fstpt xor push mov adc cmpl push repnz (bad) cmp pop adc sti xchg mov mov xor enter std adc outsl pop repnz (bad) mov dec mov lods ret add sahf adcl clc inc and push mov jo enter push incl jg push and sub xlat jns jb clc pop repz jns mov ret (bad) mov mov add out fsubrl (bad) aas lahf add idivl pop xchg dec mov dec out je arpl (bad) push dec jo pop roll cmp jmp cmpsb adc push jecxz pop arpl in jg mov or mov cs cmp out sub mov and and (bad) sbb push xchg clc lea lods imul cmp loop inc xor clc and outsl push mov pop inc jno add add int3 clc sahf (bad) dec and (bad) xchg add jno pop aas mov dec clc xchg sub (bad) out adcl pop sahf mov mov inc push cmpsb mov cmpsb std std aad clc ret push mov aaa sbb rcll lods xchg push das or mov iret add sub sarl jg and mov loop icebp aad inc xchg sub pop out fbld lods dec mov jae xor cs sub addl sbb or and (bad) popl (bad) jle mov clc inc aam negl aas (bad) dec nop mov pusha pop add idiv test xchg adc int3 push jnp pop fdivr jb rclb inc cs push repz (bad) fistpl add ja mov mov sub xor jge dec pop and (bad) je cmp sbb out jg pop fisub test cmpsl sub and xor cli sub push mov inc popf jg mov sahf sar in out sarb rorl (bad) (bad) sub pop adc mov repz xor inc shr mov movsl fdivrp stos mov int cwtl sub (bad) jnp mov mov dec out (bad) lcall pop push or jns adc mov xchg imul inc outsl dec xchg adc pop stos pop mov mov xor insl pushf (bad) sahf pop int in jnp sahf outsl xor jne out outsb lea fisubr xchg mov mov aaa rorb sbb inc in roll loop mov or jnp je pop push outsb outsl jb push mov out add adc lods jns push (bad) pop cmp mov mov mov sub movaps je xchg push inc in (bad) imul pop push pop mov popa xchg std and mov xor test mov sub adc int (bad) cmp in negb sar adc scas out arpl daa lds in repnz (bad) in cltd clc inc mov rcrl add mov mov push aas fisubl mov std mov and and adc mov jl je out add mov dec repz mov fimul fimul ljmp xlat pop lahf lahf add pop pop push ds sahf xchg fisub popf mov add ss adc ficomp in sub setl or push loopne jne ljmp add add (bad) xor test mov xchg dec nop stc andps xchg mov (bad) fildll fimul sahf (bad) xor sub push xor xchg (bad) push jno push mov push clc cli sbb mov or cmp test pushf sahf inc add or inc in or sub sbb mov daa sub mov fsubr dec pop cltd ds ret cmpsl sub mov xor jecxz clc sbb adc xor lahf adc xchg test rclb mov orl jbe mov lcall in mov aam aam aam bswap repz daa (bad) shr mov out imul test lcall fimul pop into aad cmpsb dec jo ljmp push data16 jns sahf inc mov and scas pop push (bad) cmp cmp sub jge daa lcall xor and andb push leave subl mov xchg js jp xorb xchg cmp clc jg mov loope je sub mov stos aaa cltd movsb fwait in or rcrl dec ljmp inc xor push fistpll jge add cs test sbb xchg std int3 sahf mov int lahf decl inc scas push js add loope add adc (bad) push js jo mov (bad) in pusha or loopne pop outsl negb popa psubq (bad) ja pop out aas (bad) pop lahf fisubr insl jg or sbb add inc add sub mov pop dec fisubl inc push mov push mov lcall scas mov out sti lea fcomip mov xor sarb in inc (bad) idiv add and or and shl out cmp jne outsl mov pop add push mov add es sub cld jae jmp mov mov jnp rcl xor dec test (bad) mov into cmpsb lods je into fistpll and call mov pushf daa inc dec mov sub cmp xchg (bad) push in inc xchg jnp pop int3 mov pop xlat addl clc inc aam and pop mov add lahf sub fdivp dec (bad) in mov out pop (bad) fisubr aad or mov and jp clc int std fist pop shrb pop adc pushf sbb cli xchg dec mov push hlt out lahf (bad) dec cmp mov inc mov cmp cli add mov int3 xchg inc xchg insl and push pusha movsl mov cmp movsb cltd pop popf movsl in ret mov sti sub inc enter rorb mov add loopne add pop add mov call and std sarb int3 daa xorb fs scas arpl dec iret out and mov xchg bound test jae mov jecxz lahf arpl or mov scas jns cmpsl cmp mov movsl mov out lds in push push xchg mov aaa mov dec mov imul xchg in iret pushf cmp fidivr cwtl pop fs fisubrl mov jg das scas aas clc scas fwait (bad) add pushf xchg add scas and jge mov loop call subb push mov pop jo (bad) push mov dec fidiv jl loop xchg vmread data16 add clc std je jo or (bad) mov mov add sub popa jne or jp add cli mov sub les mov mov jecxz mov mov lea and jmp sbb and daa orl inc push add xor (bad) mov jg rsm das push adc mov test pop (bad) adc iret pop out jae inc xchg dec lds xor shlb sub or dec jb (bad) and mov mov bound orl cltd and add jecxz pop or dec and add xor movsl push xor adc mov pop adc jg or sub fdivs pop sub and mov aad es pop mov mov mov enter jg jl xchg cmova and pop (bad) into cmp or cld nop or xor push ljmp ret dec (bad) jae icebp pushf xchg cld inc add jb cmpsl shrl jbe lea das pop push bound push movsb out lods or sahf pop mov ret jns xlat mov sub push je in shr add mov idiv imul aas pop into xor push rcll xchg mov scas jnp imul fcoms cmp mov add arpl jge test dec or cwtl std scas xchg int3 repz icebp clc push fwait out jo inc lcall mov leave dec scas push cmpsl cltd jmp push (bad) lods scas mov iret mov add lret xchg inc jle into cld pop in pop xchg cld mov xchg jnp ljmp xchg int3 clc mov mov xchg pop pop dec jno sbbl adcl or scas loop mov ficomp xor test dec pusha push adc roll scas sbb dec in pop cmp idivl sbb mov leave ror sarl (bad) xchg aas mov stc stos jo xlat cmpsb std sbb aas clc and lods xchg pop cld sbb lahf mov mov mov dec cmp shll outsl loopne iret and out decb mov (bad) shr pop int3 sti mov ja (bad) jnp aam gs test mov popa pop aas dec repz ljmp hlt xchg mov jl lods cmp jns jno mov lret sub (bad) sti lock inc jns mov pop (bad) mov mov sahf cmpsb dec add rorl xchg mov add xchg mov rcll push xor mov fldt or std loop adc cmpsb cmpsb fadds cmp push cmp add push cmp insl sub mov fist pusha cmc mov xor adc pop cld loop cmp imul in pop adc clc xor ret jl mov xlat xor xchg adc xchg mov popf push (bad) xor cmp push cmp jp ljmp cwtl leave nop in dec lea add push cmp cmpsb push push out xor enter mov jo mov push dec jl and jns sub push int3 ljmp sub repz jno das and cld insl sub clc movsbl ret jo add test mov and xor divl add insb fisubr bound in daa lds aas data16 daa add stc mov ret pop mov bound and xor and push lods sub xchg sahf ds out movsl mov xlat cmp dec mov inc jecxz mov cmpsb fimul jg mov cli xchg cli cmp cmp dec das jecxz xchg jg iret mov sub faddp aas dec scas xchg inc rcrl pop aaa outsb (bad) ja das dec or das loope mov pusha jl fcmovb mov push bound data16 into movsb bound xor xor insl mov push into and rolb ret (bad) push lock push sub daa scas pop push cmp fdivrp mov (bad) fwait dec ret mull jns push mov xchg or sub add push mov xchg add and movsb cmp mov stc std mov arpl fstps jl rcrl mov ret inc pop invd cmp mov jns jns out or mov and pop scas lret loope (bad) nop addb lods iret (bad) dec sub stos jb cli mov aas je jg test xchg rorl dec testl xchg add xor aaa jbe cli lahf cli jne jns push inc mov iret or mov xor (bad) add push ret jnp stos or icebp leave clc (bad) mov rep fdivrl mov xchg lods clc loop pop xchg ficom (bad) aad (bad) ret jmp (bad) and int ljmp mov iret jl inc jne or jp jg test aas jl (bad) jg scas inc mov aad xchg mov or bound inc cli xchg orl sbb pop pushf shlb nop lods loop (bad) adc loope aad pop pushf push mov pop ret mov outsb dec insl testb imul lret cmp fs lds inc cmp mov mov test mov xchg jle loope cld std (bad) sbb (bad) cli pop mov sbb inc popf dec xchg mov inc xor xor jl lods lea jno dec fdivr or jecxz in mov sbb fs inc mov mov aaa loop stc push test lahf push and or pushf js je mov das xchg or iret aaa add fimull cmp cmpsb stc movsb bound sub mov mov sbb adc scas repnz loopne add (bad) clc jbe push cmp lds cmp fwait pop or pusha pop jecxz sbb loop mov out mov add xlat out sar sahf aas outsl push push mov loopne mov sub icebp iret lock fnstcw fldl cmpsl (bad) mov iret mov cmpl int3 loop inc rolb lock orl mov inc pop popa and (bad) call jbe (bad) das cmp inc mov test (bad) pop mov cmpl outsb pop fsubs add shl cmp (bad) inc (bad) fsubrl mov (bad) into aaa mov popa ret add ret js jo cli repz sub mov adc (bad) or adc push aas ljmp and add mov cld add push fdivrp aaa xchg adc mov shll aaa mov xchg ficoml mov out inc mov pop stc inc movsl mov aaa sti shrl movsl (bad) jb jne jl js push movsl shlb adc inc jg (bad) xchg and (bad) mov lahf clc daa fild cmp jge cmp pop pop jo fwait mov (bad) mov mov repz mov jg jae mov (bad) addr16 adc or (bad) mov pop xchg gs pop mov add sarb mov clc mov (bad) popa mov out xchg mov pop (bad) sub (bad) cmp lcall rolb mov popl jge mov xchg cmp popf cmp (bad) mov outsb jge pushl sbb lcall (bad) adc inc aaa cmpsb fmulp scas fucomip mov sbb mov fild cld adc mov ret scas (bad) sbb sahf aaa push xchg adc push mov sbb mov out loopne mov jp stos das ljmp push sbb xchg sti pop jbe test dec inc in adc mov xchg ret jge adc inc cmp or and lods mov sub shrb add mov adc ret pop or jge repz dec (bad) (bad) mov sub adc (bad) out (bad) fild sub sub fcomps insb das sub adc sbb int (bad) and xchg stc add shr fcmovnb jge movzwl dec or cmp ds xchg sahf push (bad) or sub addr16 shrb mov aad int3 aaa inc xor test jl clc xchg and sbb mov push add rclb sbb xchg xor add (bad) aaa push gs loop sub or and and adc sbb out (bad) test aad push bound mov mov mov andl data16 fadds clc int3 lock dec aad rcll fild add and xchg out aad cs xor and mov pop inc nop clc push push push arpl lret lods lds adc dec sar (bad) (bad) and movsb adc clc fisttp outsb aam aas aaa inc cwtl xchg daa scas pop inc out mov pop scas stos fs jge mov mov test jg incb loop sbb sub sbb lea pop mov in jae mov fsubr (bad) (bad) rep xor out sahf jl es push mov and jg pusha scas and (bad) mov aam inc sub jge sub loop sub aas push jo add cmp loopne sbb push cmp push cli mov jp pushf push cmp or and adc fwait popf pop enter sbb lahf jg int3 inc cmp dec xchg pop clc arpl stos in nop es test push jmp xor fsubrl idivl int aaa push or jmp jecxz mov stc insb adc jno std jge ds cmpsl add into lods and push lds (bad) xor mov cltd push mov jne mov jae jne int3 cmp push jle push fdivrp mov sub gs xchg ret sbb pop ror bound mov push pop cmc mov push insb clc stos cmp icebp add imul push cld movl std into cltd pop btr (bad) mov cmp insb mov xchg inc add (bad) cmc stos adc dec xchg xchg adc mov mov mov movl or ret sbb outsl data16 jmp push cmpsl aaa lahf pop push rcr outsl (bad) adc (bad) scas aas arpl mov clc or mov (bad) rolb test fisttpl add addl (bad) xor in cmp add jo inc stc pop sahf mov aas add pushf jl int3 clc sub mov xchg (bad) xchg jg dec adc out and inc inc (bad) insb daa dec rcl xchg mov pop sbb das mov mov or cmp push outsl ljmp add sarl (bad) xor stos pop sub outsl pop (bad) into clc add add test insl (bad) or inc (bad) xor jg aam mov (bad) ret mov add popf sar xor daa pop mov mov int3 xchg mov outsl dec jns icebp mov mov jmp bound and (bad) push fwait mov jg pop lret int3 les mov xor iret mov push (bad) test xchg pop add outsl inc fldl add mov dec ret mov cmp dec test movsb test adc cld mov subb or jne test mov mov mov push in imul lock aam and xchg xchg adc lahf rcrl push orb push hlt dec (bad) cmp xchg dec loop xor (bad) outsl insl cmpsb push faddl pop daa scas mov shr pop ret or arpl ret sbb popa jl (bad) xor mov and push and jno rorb mov xorl mov sbb jl xchg pop aad mov fcmovbe inc pop or jg xchg and lret (bad) mov pop cmp push ljmp sbb cld mov aad cmpsb mov dec (bad) or xor push xchg leave dec pop pushf add mov mov pusha dec pop mov xor pop add pop sbb mov pop loopne pushl out push scas (bad) mov mov (bad) pop add stc (bad) std dec test mov mov nop in insb mov iret xor stos xchg aad scas xchg or (bad) aaa xlat cmp fcompl mov iret pop lret xchg imul fidivr mov stc jge jns sub ret fwait ljmp push fsts inc repz out and fistpll pop ljmp mov cmp into mov jbe inc sub clc (bad) aaa cmp int3 inc adc or mov (bad) jb out and adc leave loop gs add fbld ds push (bad) lret dec ret push jp bound lahf mov ret inc mov into inc pusha adc jb iret xchg (bad) cmc jmp adc rcll js je fwait insb cmp mov (bad) lds adc xchg sbb xchg pop mov cmp adc mov cmp mov sub cmp push lcall jno (bad) lea (bad) aad adc sahf ja ja add (bad) sub (bad) lahf xor stos mov lret in pop sub mov push inc cmp fcomps (bad) mov outsl pop ret int xor push ss xor fisttpll cld loopne shr std and cmp out ret xchg and nop cmc xor mov xlat push in (bad) dec xlat xchg mov (bad) lret shrb xor sbb les mov test add clc mov in sub ds pop sahf mov pop ret mov cmp cltd fstpl mov mov (bad) jne mov fimul imull mov ds pop and cmc clc outsb lds popf jo cli das push (bad) dec mov mov arpl push pop stc or add test mov mov pop mov ds out mov cmp repz (bad) mov clc faddl pop mov std xchg iret scas mov fisubl push mov lahf clc ljmp (bad) xchg pop jl lret cmp cld xchg nopl scas andl rolb insb clc cmovno push cmp movb outsb bnd test adc sub test fmull xor (bad) (bad) popa mov in mov sub and mov mov stos and andl cmp insl push jge adc lods aas (bad) fimull cmpsl pop mov sub movsl pop sub andl popw pop sub sub cwtl jb cmp add jecxz push sbb push das add mov mov in jbe inc loope xor and pushf (bad) add mov mov xor push jmp sbb mov insb mov dec pop lcall decb push into and jns mov fwait or sub aas add and inc sbb popf pop pusha sarb stos fistp mov push loope pop xor (bad) sub hlt sahf mov lea (bad) xchg mov push aaa push sti inc or loop cmc mov (bad) ja sarb push js xor pushf jge xchg lret in add xchg repz xchg arpl lret mov int3 jl in clc dec mov in mov push aad and inc loope xor xor rcrb mov stos push or xchg call repnz xor das sbbb push (bad) mov push or aam arpl int jge std push rol les xchg push lcall inc (bad) push ret pop fdivs mov adcl sub sbb jb ja jne adc imul mov dec mov xchg nop or lret insl cli mov rol cmpl push add push ss jg mov repz scas imul cmp cld dec std pop or (bad) out pusha jp loopne (bad) push or cwtl into aam mov xor lock lahf fisubrl stos cmpsb jo adc mov mov popf jns xor mov out sub mov (bad) (bad) jbe fs dec sti dec aad pop clc pop daa mov dec sub clc dec sub mov or xchg adc and mov xchg (bad) clc stos in les push outsl push jp and call fmull nop lcall notl add lds pop cmpsb (bad) mov pop lock repz mov add xchg mov into sahf sbb inc scas adc mov repz sub mov or or (bad) xchg insl adc movsb xor xchg xor xchg and mov cmpsl daa mov mov orb add sbb aad mov out sbb int3 ds aad jl clc sub xor pop out xchg (bad) scas push loop clc xor ficomp (bad) fidivr (bad) jbe popa pusha pop jbe rcll (bad) in xchg (bad) xor sbb inc mov mov aas xchg jmp int mov xchg loopne rcrl xchg cmp int3 dec jne mov adc jle xchg cmp (bad) dec and (bad) in gs sub sbb mov nop lock div js clc cmp mov out pop or xor sub mov push cmp sub inc or (bad) repnz sub mov pop jp popf mov jl fucomp imul mov push push dec pop pop mov dec daa adc inc ss cmp ljmp or in outsl inc fst (bad) bound jmp or iret adc xor push xchg enter pop loope aas pop sub or into pop lds stos cmp lds and pop add xlat jo out (bad) sahf mov in sbb stc shrb sbb mov xchg sarb enter sbb int3 psrlq lahf lret rorl int3 lahf stc jl (bad) sti lds outsl pop lahf mov and (bad) jne xor scas jecxz inc mov in inc adc mov or (bad) pop push aad rcrl js inc sbb sub int3 jb or stc insb icebp push jg pop sahf mov add fisttp add setg mov adc add (bad) aas mov dec sarb mov pushf fsubp stc and imul lcall bound mov cli mov sub cwtl add stc pop in cli sbb roll aad adc adcb add sbb cmc lahf jg std inc in daa cltd dec jecxz loope add insl test call inc cwtl ret or loop sub divl sub push dec xchg mov mov arpl xchg or or mov mov clc mov cmpsl jg pop cmp sub mov mov inc test lret cltd adc or gs pop loopne pop mov and ss pop or out dec xchg dec or push ret int je jnp out call mov sbbb (bad) les stos mov inc and jge add push adcl push lahf mov pop push push mov inc test mov test aad push gs and dec pushf (bad) into sub repz xor add xchg rcr int3 stc fdivrp lds push into cli clc or outsb mov ljmp rcrb jg mov lods daa mov stc scas fwait xor and or fdivrp jle clc iret in negl aaa inc sbb cld fcompl mov push mov push decb xor xchg in inc fcoms jae jp add dec sti add add add inc lret xchg sbb or inc jb inc jecxz cli cmp push push xchg fbld mov insl xchg rorb mov push xchg out xchg inc pop rcll mov mov into add outsb dec loopne (bad) add insb scas fisubrl pop lret sar jge (bad) push pop subl ficoml dec mov pavgb push fcom inc pop jne sar inc inc (bad) scas das popf jmp stos pop loop mov inc sahf aaa movsb adc movsb scas push xor mov (bad) mov mov dec jl and mov sub sbb insb imul mov test dec jl push adc mov pop test xor xchg mov inc movsb repz in fstp scas mov pop inc adc repz daa setnp mov lret add aaa in xchg pop mov inc (bad) jo lods scas shrl test daa das pop loop or push cwtl jp sar in push adc adc xchg push arpl inc add mov shll scas clc xchg fsubrs popf xchg fiaddl (bad) fldl push pop insl push mov sarb int cmpsl push add (bad) arpl and mov mov (bad) out mov bound mov sub cmc insl movsl or (bad) xor sbbl sarl cmp mov cs sub inc add cmp jle rcr incb xor movsl pushf push xchg mov gs out xchg loope pop adc xchg popaw fcmovne sbb jbe xchg or push jle mov outsb icebp insl clc rorb inc (bad) lahf adc xchg mov jo pushf sar es xor mov pop dec xchg (bad) hlt add arpl push out inc sbb xor pop mov jo or xor inc fimul int mov mov jnp lret jae pop nop push out mov ja inc mov and sbb or lahf int3 enter jb fistl sub or loope fwait aaa inc sub mov xchg outsl mov sub inc xor cli jge xchg (bad) loopne dec mov pop sbb orb sub notl and push jge adcl xchg xchg or lahf das bound ret mov repz pop scas ret loopne jae aas and xchg movb inc pop mov in imul scas rcr inc f2xm1 call inc cwtl mov andl lret insb cli insl or mov adc in aaa arpl xchg lods ret or leave pcmpeqd mov or xor flds mov and ret xlat pop lods pop mov lods out add popf gs jnp jecxz fisttp xor xchg fimul pusha fisub dec les in loopne pop dec push arpl cs adc cmp (bad) (bad) cltd or adc cld rolb push cmp xchg push mov sub outsl mov imul xor add aas lcall daa mov jns push mov dec insb pop (bad) add pushf pusha cmp repz or lahf jl arpl mov xchg pop mov pushf sub (bad) cmp mov push repz insb jge push nop imul fildll xor (bad) dec test das mov popf fbld mov mov and outsb pushf cwtl ds fsts mov push mov rep pop leave xor pop stc and push ret (bad) les mov sarb lds pop jle inc fimul inc into test sub mov mov ds ret out roll cmp mov (bad) mov test xlat test push movb fsubl jl fimul jg xchg hlt sub push pop mov jl sub es pop xchg xor in call out movsl cld add cli jns mov push pop out std xchg clc or repnz pop mov aaa cmc add lahf lea lret fdivl push dec pop mov js xor add pop lods out loope inc add les shrl fcoml arpl cld nop xchg int3 pop pop repnz pop fnstenv and cs addr16 mov adc (bad) shll mov dec inc xlat int3 adc ljmp (bad) dec outsl decb iret shrb (bad) icebp inc loop aad cmp clc sbb lcall lahf (bad) lock mov mov or or sbb fistpl std sti push push add clc int3 sbb ret xchg xor test mov pusha inc mov (bad) out mov dec mov (bad) decl popf add add mov adc int3 dec push stc (bad) jl mov adc mov mov jecxz jecxz adc test ss mov adc jb out roll das iret push aad push scas in fidivl lret and push or sbb in stos mov jge or adc sub loopne and mov mov daa jge aas xor ret dec push mov stc std in je mov ficompl (bad) or js push pushf push add (bad) mov inc clc mov (bad) jbe adc aam ljmp pop mov aaa lea jge adc and mov xor mov scas dec mov in jo data16 in jge add pop or (bad) xor test clc (bad) popa lock (bad) mov ljmp cmp hlt adc pop clc and ret test fsubs add push push push aad lods nop xchg int sub jne add mov imul repz aad sub in add jmp push lods jnp insl sub cmc mov mov bt mov mov int jb ficoml cmp in imul (bad) aaa loop push loopne xchg ja stc mov pop pusha add insb loop jmp loop sahf and es lods mov sbb add cli mov lcall mov or into push mov push jb test adc jle dec daa inc (bad) cmp test sti into cli mov pop jg xor add or fsubrs fnstcw mov jmp or arpl (bad) xchg dec mov fwait jg daa jge pop and fs stos int3 push xchg jl cs mov mov dec pusha ret xchg mov and cmc cmp adc push xor ljmp jecxz adc xchg lods sarb in out (bad) loope insl mov notb test inc push movl and imul xchg ss adc aaa scas jge mov mull xor mov mov (bad) aad mov cld into mov dec scas arpl lds not dec sbb sbb mov cmpsb jb mov jo (bad) jae out push sub inc sub mov cmp mov pop out push sbbb ja rcrb jbe js out inc mov mulb push popf sbb (bad) bound inc mov (bad) adc ret cmp pop dec mov adc sub mov pushf mov and loop out mull lahf push (bad) jl sub add mov lret decb lahf cmp cmp jno out (bad) das daa adc add int3 movsl jo cmc (bad) pop repnz (bad) mov push ret sbb inc mov je scas cmpsl shrl jno mov inc and sub fucomi mov mov pop mov push test int push add repnz fidivl xchg clc mov outsb pop mov (bad) fs lcall call add ficoml inc sbb and mov or pop pop push fnop gs lds inc ret mov or or push and push jg scas mov test pop mov push add xchg mov fisubl cld xchg ret mov clc aas fild pop (bad) xchg xchg jns mov dec sbb xchg add jl pop iret push mov or sbb pop les mov or mov pop scas ljmp loopne cli lds mov cli adc xor (bad) movsl jecxz dec fdivrs clc adcl xlat (bad) shlb lods mov push adc loop fwait cltd add out clc sub test jno ja movsb imul ret add cmp push add ret fisubr (bad) xor jnp insl pusha arpl add mov dec push les pop std mov decl loope arpl orl dec add aas into movsl dec mov (bad) push dec pushf je cmpsl pop das push repz in add cmpsl out dec (bad) and sbb call add std mov pop loopne stc xchg scas cltd cmp roll lods inc (bad) addr16 (bad) mov mov rcrb cs (bad) insl xchg pop xchg data16 jl sbb jl fnsave and paddw (bad) add in mov sbb lea sub jbe mov jno or mov jl pop test cwtl xchg and fsubrl ficompl dec jae add xor sbb sti pop aaa cli cmp jbe mov jne in mov push sub fild mov adc cmp clts lahf xor cmp sub or push inc xor mov jo xchg movsl xchg push jge out roll mov mov add or or incl out test js mov fisubl mov lahf test push lods mov mov xchg inc pop ljmp int rorl xor ss int adcl or inc cld scas fist mov mov (bad) aad adc dec push mov lret xchg mov xchg jge ret arpl jmp (bad) mov ret cld bound mov aas insl xchg sub and pop cs xor pop (bad) popf and sbb inc mov mov xor mov xor and mov mov (bad) or dec mov push cltd jmp or clc aas fimul pop notl addr16 mov mov mov mov int3 lea (bad) aad and push outsb jg out xchg aaa mov mov push xchg and jo jno clc aaa xchg ds clc mov or sbb dec push xchg push loopne sub pop cli dec adc cmp movsb jnp aaa mov sarb mov shrb ficom xchg ss jno decl arpl jecxz pop pusha jge jbe dec (bad) in enter jo jno (bad) das popa ret ret loopne mov or cmc push scas adcl test js or js mov icebp lcall add xchg sbb jmp (bad) jns rcr arpl adc adc insl data16 adc and shl (bad) in add dec sbb pop sub aaa lcall lret inc mov xchg or das and fisubr dec push mov cwtl add (bad) dec clc mov push pop rcrb gs iret push pop jo xchg fcmovnbe xchg and adc shlb aam fiaddl jo jno rcrb das dec mov mov mov fmuls jns mov mov (bad) and jo rolb xor shlb adc inc push hlt xchg mov sar mov into mov cmp or call xor (bad) (bad) insb dec jns sbb into leave mov cli jnp adc ret cmp xchg cmp sub mov pop lock push fadds arpl push test fidiv (bad) dec imul sub jo cmpsl pop ret outsb jp fidivrl jo sbb sbb mov cmp add iret movsb scas adcb add xchg ds outsb leave inc jge ret xchg sahf mov inc sbb pop inc das push mov fcoml cmp mov mov mov insl adc aas popa ds mov inc adc jl sti mov pop in dec inc add cwtl adc and pop (bad) sti shll cmp daa stos sahf movsb pop (bad) mov push adc inc cmp jl adc xor lds and or mov sti mov mov mov fnstsw sub or ret mov stos push mov mov dec inc aad jae sti sbb icebp pop push fucomip jecxz fildll inc xor jae xchg dec sti stc outsl mov popa aaa jl mov lea fsubs jp fdivrs jl loopne mov xor xchg outsl outsl cmp dec dec dec inc mov (bad) dec push sub adc sub out push ret cmp push pop clc pop jg int3 xor sub popf push popf enter pop pop mov jl cltd sbb aas lret js pop (bad) into mov fbld ror rcr cmp fnsetpm(287 pusha in or fisubr adc dec mov ret add add (bad) out les xor mov lcall jmp rdpmc add (bad) (bad) mov clc mov int3 and (bad) jne cmpsl mov sbb pop sbb loope mov loopne pushf sub sahf inc sub push sbb inc mov xor mov and dec lret xchg jnp popf pop sbb in sbb jg mov stos pop sub push add ss or add aad dec add jecxz js inc jge aad outsb mov out xchg mov aad js insl mov sub ret (bad) out and mov push jmp xor adcl pop inc into (bad) outsl adc adc das outsb (bad) in add mov mov decb sub (bad) aad (bad) das lcall jb hlt adc and out sub or mov clc int3 adc aas aaa sub push sub pop cmp xchg sub faddl ret sahf pop jge in cmp imul push jns movsl add cli mov dec sahf pushf inc jnp mov (bad) les jp mov inc sub jo push sahf lahf outsl (bad) fild sub cwtl xchg cli mov xor js lret xchg daa insb repnz jle cs aad mov pushl sahf lock fildll mov jae jl divl test sbb xor inc es out inc push cs movsb add scas (bad) lods lods mov push stos mov fdivrl xchg gs in in xchg cli xchg add cld sar inc (bad) sub arpl lret cwtl mov imul jo lret xchg inc fsubrp xor cmp lock jge jge or push iret mov (bad) aad lcall in pop mov mov (bad) jl ds mov jecxz dec shll jne dec in cwtl pop mov aam test aad cmpsl (bad) push into lcall cwtl nop inc cmc mov push in fdivr xorl lds outsl int3 mov scas and push int3 sbb fsubr mov pop pop ds mov and fistpll adc in das out add mov mov in ss inc mov jecxz mov (bad) rolb sub int3 in clc stc lcall dec fild push jnp lds or or xchg xchg push mov decb imul mov push xchg jne loope jl sarb (bad) int adc mov jl xchg aaa xchg pop stos mov pop cmpl dec int (bad) arpl dec les mov test and lods sar icebp inc mov adc aad movsb sbb fs xchg xor adc xor and clc test push mov aaa fs scas push cmp daa movsb fcmovne movsl mov popa popa push mov push fistpl adc (bad) clc jl sbbl xor clc mov xchg mov mov (bad) scas aad idiv inc ljmp push cmp cmp outsb mov add inc jg int3 jnp dec fldl fidivr xchg xor sti js jo xchg scas mov jns std daa popa mov faddp sahf test sub push xchg pushf in mov mov or fiadd inc fmull jns in (bad) (bad) outsb in add push add pop mov jns lret fnsave aam out pop or aad jg mov in (bad) mov scas in sti mov mov or push add adc add inc xor sbb jns clc bound xor adc into ret mov inc mov cld subb scas aas arpl and pop clc adc dec xchg mov incl dec push aad xorl fist xchg mov mov in in cmp jg outsl or lahf lcall dec jns into sbb xor std xchg inc popa mov xchg xor and test cmp mov push (bad) (bad) xlat cmp arpl es out mov and xor aam inc mov in in dec fwait cwtl aad iret clc adc sub pop cli or cmpsl adc (bad) xor test and sti mov push das aaa popl sahf cltd mov xchg pop aas xor (bad) fist pop mov fidiv mov push xchg mov incb add xchg dec adc mov nop push call push pop adc dec sbb cmp rcrb inc enter sub stos flds aaa push rolb xor test cmpsb mov mov popf xor test movsb xchg adc call sahf mov inc mov xchg or sub xchg shrl mov push dec leave ret aaa in push popa pop cmp in lret (bad) mov inc cli mov cs and std lods (bad) xchg dec outsl cli lret mov sub xor mov mov repnz mov pushf jg adc mov inc pushw or push imul mov repz rcrl add sbb cs push or mov test and push (bad) rolb out rol cs cs sub (bad) mov mov cmp (bad) mov mov lods in jns ja mov adc scas pop aaa adc std (bad) repz sbb and pop stc add push std cmc mov ds std movsb test add outsl xchg xlat push std push inc incl rolb inc sarl sub pop push add lds push mov xchg sub out rorb int gs xlat mov ds pop xchg and jg sub xchg in lods cltd cmp fwait push or jg ds test pusha mov ret xorl cwtl in mov dec xchg loop movsb add ja mov or (bad) in outsl aaa outsl jge mov xlat std lods ret pop cmp mov das das push mov cmp mov out xor push insb jg pop jl and fstps and repnz mov cmc loop xlat inc imul gs inc pusha ds arpl fadd leave cmpl sub sub push and xchg jb pop sbb cmp fwait pushf mov cmp jl mov jne test sub inc jg clc lahf jae jg or ds lret lret pusha mov add lahf out xor sahf loop and rcrl cmp mov and std jg ljmp lret loop idivb add aad push mov inc repz xor inc jecxz bswap lret xor mov scas mov cmp ret cmovg sbb div mov ret je stos xlat loopne mov mov dec xor sbb pushf jecxz stos sub fadds mov push das repnz push jg test nop jmp and rcrb jmp je aas xchg sub inc out scas mov fdivp pop test pop jp lea mov and out mul gs in cmpsb (bad) xchg or je cltd sub int3 add or movsl jg inc out xor sub jp jge lahf insb aad mov dec xchg xchg inc xorl lock (bad) sub shlb (bad) (bad) xor lds add scas mov pop (bad) adc mov (bad) sub lock (bad) cmp ds mov mov xor iret adcl sbb addb jb (bad) enter insb xor or inc push xor xchg lret adc repz mov cld xor push lahf (bad) xchg pop fild and jg push add mov (bad) add mov daa sub ljmp into mov pushf jle fwait xchg jl repz push mov ljmp or sub xchg iret roll xchg sub jecxz loop pop dec jne fbld and add fs adc add dec into jns and rolb std push pusha ds test test and cld mov (bad) aas and and insl mov sbb push movsb cmp add (bad) inc mov push and (bad) (bad) inc dec jg mov cld add jne ret push out std clc xchg out sti mov push stos cld incb fwait data16 ljmp jmp in sub sub pushf xchg sub push mov decb mov cmc add pusha lods jl inc (bad) addl or (bad) imul data16 push mov hlt mov es orb inc cmp pop mov popf (bad) cli insl loopne cmp into xor rolb mov mov repnz repz push jp xchg aad sbb test mov out sbb cld push in testl sahf daa movsbl notb sbb movsl jp inc mov and fldenv xchg push repz dec push fwait xor xor mov jecxz mov shrb out dec mov movsb push mov pop push sbb jecxz js xor and cld out rolb mov cmp ret adc lret popf int3 repz dec ds cmpsb lods xchg aad (bad) pop das jmp xchg and inc adc (bad) pop int3 and out lds das (bad) clc imul ffreep and jg jbe pop (bad) ss jecxz pushf pop cmp xchg test jecxz in or js enter mov mov and lahf push sbbl adc int decb add mov cmp jg push xchg data16 pop mov mov lea sti fmul into aaa mov sub ja jp adc sbb xchg sbb adc data16 sub insl popl iret aaa fldenv mov fidiv jp scas fidivl pop movsl add test xor sbb or daa lds inc aaa enter mov in jns js push dec sbb dec pop sbb mov pop xchg mov xor xchg clc push add stos jg xchg pop sahf shll push lds sub mov repnz xchg mov jecxz xor xor or mov (bad) aas cmpw cmc push inc (bad) (bad) jnp lods ror jle inc lret aaa and push (bad) ljmp (bad) mov es dec adcl mov push dec sub std jbe pop (bad) adc pop or jl inc jl or sub loopne inc rclb sbb mov pushf pop cmpb mov xchg dec aam movsb fwait pop divb lds add pop inc enter out xor dec inc pushf push lock rcrb sbb pop lea sbb (bad) nop inc roll clc into daa sbb adc ret mov pop jecxz add pop aaa (bad) ja ljmp stc sbb int inc icebp fildll cmp pop jne ret (bad) mov inc enter lods pop sti add ljmp rorl adc movsl dec jp or cli and dec mov nop push mov pusha lcall or loop adc inc aaa ret jbe fmuls ljmp xchg lds jns inc pop xchg (bad) inc jge sub lods mov mov (bad) cmp out add lret jecxz je cltd sub sbb pop sub and xor clc aaa lods sbb pop xlat mov dec fcoml leave into loope (bad) sbb jg jae mov adc pop div sbb xchg inc pop or jge clc push mov loop mov cmp pop jle into jbe cmp sbb sahf push scas lock push pop (bad) sbb sbb pop (bad) push int3 inc int lds rorl lods scas or test lods (bad) jecxz,pt clc jge mov or cmp test sub fbld (bad) or sbb test inc push add nop hlt rorl add js ljmp js cmp xlat cs lahf mov mov ljmp lret sbb popf xchg jp mov pop mov jecxz cmp mov jecxz cmc mov pop and or fdivs jns dec fst (bad) fwait rcll dec mov or clc psubusb outsl mov imulb dec sub dec enter sbb pop in test insl adc pop lods int3 movsb and mov mov push es mov aas mov rorl mov fcmovnb sbb ja inc xchg test push dec (bad) loop addr16 jns pop xor mov pop mov (bad) pop xchg ret and dec xor adc or mov jle jne inc aas adc movntq into (bad) mov jg mov sbb arpl mov or mov fadd cmp rcpps pop jne arpl cmpsb mov lods int (bad) hlt and adc daa dec jmp xchg cmp inc cmp sub ficom jmp push out push in stc dec out mov (bad) int mov loop jmp jmp add jae mov mov adcl pop dec clc mov pop pop xchg mov jnp pop stos jne jg cwtl (bad) pop stos vpsrld aaa in mov fsubrs aas sub cltd fwait pop jbe shr lcall sbb mov mov subl inc pop clc cwtl add push pusha (bad) cltd inc out xor dec sar mov stc sbb loopne adc sbb mov and or rorl or push stc xchg lea or mov (bad) xor or pop push cmpsl pushf sbb daa (bad) cld and push dec fcmovu pop sbb andb cmp mov or pop dec dec xchg aam lods and sar into scas mov (bad) mov xchg mov xchg scas rcr rclb xchg mov test into sbb pusha dec and mov daa popl fnop int3 push leave sub out mov jbe push cmpsb push lret andb add cwtl jb shrb test and push in pop mov insb jb mov scas (bad) xor or inc add push popf mov std adc mov xor faddl lahf repnz sbb daa xor xchg mov sti mov xor test xor cld and mulb and fwait add mov jb push push (bad) add scas add test push mov xchg add jp orl jl cmp push push fsubr lds outsb aad push popa adc pusha clc fmul rcrb (bad) jg or vpmuludq mov (bad) or jnp int3 sarb icebp sub mov or adc loop aaa push inc mov cltd loope int inc jp lret xchg ds lds out xor sbbl mov es pop movsb adc jns and jmp push mov ds (bad) into in xchg adc adc sub pop pop and std sbb push in sarb mov inc std cltd es (bad) xchg cmc enter jo clc mov fidiv (bad) fnclex push xor sbbl lahf adc mov adc aam jmp (bad) fcomi mov xchg or js xchg out lret mov mov mov add jns pushw cs pop call aad andb outsb and pop ret xchg pop bt addr16 mov test fdivrp arpl mov pop popf inc stos addr16 or std fdivs sbb push mov xchg push xchg push push call in inc pushf popf inc cmp mov dec jge cmp xor jl clc int3 mov mov fildl (bad) outsl psrlq jmp repnz mov (bad) sti mov mov mov sub xchg (bad) mov mov cltd arpl jle daa (bad) (bad) xor and ror aas rcl dec ret aaa fs fprem movsb arpl xchg adc or in and movsb in clc xlat rorl dec pop lret (bad) jo aad or jmp mov aas iret add mov inc pop cmp pop cmp inc xchg je add sbb ficom out mov mov and xor mov int xchg fadds dec ss lds xor add or push or neg add mov sbbl jae adc jg inc aad pushf loopne or int3 xchg add pop push repnz das add lcall sbb arpl inc inc sub mov aad mov scas std inc cli inc pushf (bad) mov repz adc push outsl push clc add aad sub adc and inc test cmc out or pushf inc mov xor xlat push pop in cld xchg aaa stos dec adc lea outsb (bad) out sarb mov (bad) or fldl (bad) push add add inc lock je aad das int3 mov rclb push inc test cs popf lds pop mov pop fwait ss dec les sub rcl clc repz loop jmp aas (bad) aaa in xor cwtl push ret (bad) or stos rolb lret jbe jno inc add mov pop lahf iret mov xor xor xor xchg sbb repnz rorl in fimul aaa xor jg adc das ret lods mov pop and fisubr or or sub lahf mov ss mov aad inc inc add das lahf dec add fcompl xor (bad) rcr mov add adcl das dec enter jo jg mov dec push lods repz mov pop xchg xchg xchg std push pop inc movsl mov daa xchg cmp test jbe loopne or sub (bad) hlt xchg push pusha mov sarb push add out cmpl cld and repz (bad) out ret rcrl rcl xor mov lcall scas shlb cli mov jo mov push mov pop std xchg loop (bad) mov xor cwtl inc pushf jg out adc inc push rcrb pop xchg dec outsl ret inc jno in shrl xor mov test addr16 aaa hlt adc add xchg in push mov sbb push (bad) mov add jle add roll mov clc fsubl jns popf and xchg or sar nop bound fs push ljmp enter movsb lea sbb in mov scas add mov xchg scas cmp aad fmull inc adc dec adcl mov sub ret arpl stos cwtl out mov scas cmp mov or nop icebp (bad) mov sahf (bad) dec and cmp add test fldl lods mov stc cmp sbb inc jb mov mov pop fmull push mov mov mov stos mov adcl xlat fdivs jecxz (bad) pop add arpl mov into outsl mov or xor jp inc aam pop or add adc pusha pusha xchg sbb pop aaa pop sahf fisubl repz mov cmp les jge bound aad movsl mov fcmovbe call add xlat insl inc mov add mov push jmp inc push jge loop and lea daa mov xchg pop sbb fidivr adc aad ljmp dec push ret out (bad) push and or int adc movsl loop pop insb jg aas sub sbb bound push dec inc mov popf jo adc mov mov rclb andl mov mov or sti ljmp int sti pop out mov outsl pushf jg mov mov jo add out or jle inc pop lds cmp mov ljmp pop push mov sub rcr cmp jg and xor out push cwtl inc cld add (bad) mov jo mov mov das pop fsubp fdivs ds fs dec repnz mov mov xor mov lods loopne arpl lds and mov xchg imul push shll dec dec stos mov aad test into xchg mov mov lods cwtl dec cld cmp push lahf fs (bad) and lds jno mov (bad) sub jno aad mov adc cld popl outsl (bad) in scas mov cmp xor out enter cmp (bad) mov xor jns push sub ret sar jecxz (bad) fidivrl or adc mov scas push in sbb sarb icebp vunpcklps jg cltd mov mov insl in pusha mov cld into or aaa cli cmp cmp push dec xor movsb scas dec aas or icebp mov xchg fdivr cltd jno ds xchg (bad) mov call xor lret jl fdivrl popf mov add push inc or xchg add orl mov arpl aad xor mov lds cli jg adc fiadd jg (bad) adc bound scas loopne pop xor inc add mov int3 das sub push mov xorl xchg jns lods mov rcll inc fbld inc inc xor loop or xchg arpl movsb fistp popa std mov out enter pushf pop sub xor sbb dec lret jno adc bound xchg jp pop push add or sti roll lret icebp in aaa inc xor dec push sarb pop cltd test or insl stos ja sbb roll scas mov cmp aas jne hlt jo std inc jnp mov sub into or (bad) in aaa push mov scas mov push data16 sub in aad sahf imul adc sbb jmp popf lods xor sbb inc stos jo dec mov gs out repz lods cmc lock xorl lcall imul lds test sub sahf iret test jae jno ret outsl rcrl mov mov sbbl pextrw add aam leave jp cmp data16 jns mov mov mov sub cmp cmpl jnp cmp xchg stc pushf jp cli jnp test sub lea dec mov paddb sub les lahf lahf arpl cmp push mov sub xor cmc je add data16 push loopne clc dec add push scas sub cmc rclb stos xchg call test clc mov mov xlat sbb or iret aad jmp out gs outsl call das push (bad) aad sti inc adc jmp imul daa jp adc stos clc pop mov outsb in ret (bad) inc xchg aam dec aad loope (bad) cmpsb xor ffree or xchg xchg inc add lds incl repz sbb aaa sub pop sti sbb adc adc outsb inc or inc (bad) out lret or jl mov test (bad) ljmp pop imul pop jg aaa pop outsb dec arpl xor int3 push mov ljmp add add cmpsb and in (bad) mov scas clc (bad) xchg pop mov int3 mov push (bad) mov and jae ljmp rclb dec ds pushw mov out adc test pop lahf aaa out ret inc fildll xchg movsl mov push push scas sub xchg sub pop jb xor mov dec js adc (bad) xchg das mov mov pop add mov aad jns in jo push ljmp jnp in int3 mov jl aad clc mov xchg fbstp ret sbb sub loope mov das scas repnz push xchg cli fs bound and sub pop popa mov add outsl addb inc cld incb xor test pop xchg mov es adc inc pop jns dec mov pop push jns pop nop das loop mov jb push mov (bad) ret pop dec ret int3 dec mov out pop (bad) fsubl sahf inc cmp pop aad xchg pop sbb mov (bad) fcompl push jns clc rcll addr16 (bad) pop cmc xchg lods sbb repnz pop push out rcrl out mov mov add or sahf xor mov pop and fnstsw (bad) mov add loopne jns sub jg insb scas mov sub sbb inc fidiv push clc pop scas mov mov dec xchg call xchg out out jno cmp scas push and outsb pop das mov sbb orl push dec loopne lahf aam xor shrl jg aam outsb decb addr16 jne sti pop faddl inc icebp into sub xor aad or test jecxz bound mov nop mov jge clc outsl cmpsb loop jge iret lea (bad) adc sbb mov jns xchg daa enter stos (bad) push mov daa das mov push fidiv mov fxch sub mov mov das (bad) xchg cmpl jge pop movsb outsl pusha adc pop add into adc inc scas sti les (bad) int3 pop mov ret dec add inc push pop sbb jg scas aad fsubrl cmp sbbl sbbl jnp sub or fbld (bad) fmulp mov mov hlt mov ficomp fistl int3 pop cs and fdivrs je insl sbb aaa pop pop cmp jns xchg xchg je adc dec dec das (bad) sti pop dec xlat mov fildll mov iret lret jb fs out or loopne pusha das adc push jo mov jg jp mov or add jbe sbb js rol pop mov mov jg xchg mov fdivrs sar cld mov in movsl int (bad) (bad) scas sbb pushf push (bad) int3 fisubrl sbb dec (bad) mov mov sub xchg (bad) mov add sarb fiadd lar aaa mov stos or (bad) xor das adc xor aad push lcall out pop jge and push outsl and negl cmp sbb inc cmc je xor cwtl xchg xor fldenv ss mov aam or sbb adc (bad) aas fild sub inc (bad) pop jb,pn jg push mov fucompp daa pop push mov cmp push jl sub loop push mov (bad) or mov push jge jne push leave (bad) idiv aad loop mov insb js scas sub (bad) jp,pt mov loop popf mov lret insl mov ror jmp jne sub test sub fisubrl sub lret mov in or loope inc add and sbb test jmp push jge inc push lds leave scas push inc push leave sbb aad and jo lods push pop pop push jp hlt jnp mov sub mov mov pushf or push lcall fnstsw push mov xor repnz clc jg clc add int3 push jp ljmp adc cmc roll clc mov mov stc adc cltd mov pop jecxz cmp insl sarl push lahf or movups sub int3 scas adc mov jge test loop mov das fwait (bad) xchg sahf mov pop and psrad and (bad) test add leave nop insb pop mov push int adc jl,pn lock mov shr subb mov inc (bad) mov cmp lods arpl test pushf jnp push dec jl loop add mov jge xchg loop lds les fsubl xor lds sbb in lahf mov gs cltd ljmp or sahf inc mov mov xchg (bad) sar add subl xor rorl push sbb jnp popf mov scas push mov and jno cs (bad) pop popf into lea adc dec int3 xchg fadd aas sub adc inc (bad) mov dec mov clc (bad) (bad) stc int3 xchg cmc xchg rcll sarl sbb add call scas dec push iret sbb mov add ret jge dec jb and ss inc xor mov sahf fist outsl cmpsb (bad) loope pop inc push jae adc lcall cld repz mov dec (bad) add mov sbb pop sub lret sti mov adc out cmc loopne lcall jge std lcall out push cli jo stos sbb fwait mov pop jnp fcmovb add addr16 ja adc aad sbb enter and (bad) ds xor sbbb nop into xor fs rsqrtps rcl mov stc shl jg pop into repz or stos ret inc (bad) sub sar cmc push push or les insb arpl rorl fnstsw jp lds vpmuludq out imul stos orl inc decb xor mov push into cli sbb or sbb adc adc arpl fcomps pop and xor adc add push addb aaa inc data16 in add ljmp push jecxz jg xchg mov mov pusha push mov (bad) jg push mov into fs jg jg push mov pop push leave sahf addr16 pop push mov outsb in cmpsb pop fwait mov out xchg mov xor stc mov dec or (bad) aas xor iret fs sar add mov out push fadds (bad) fisttpll push (bad) inc ljmp repnz and icebp push sbb add mov pop fildll jns pop mov jl inc ud1 sbb xor mov xchg sbb xor xchg stc pop jae leave sub lods in scas fimull repnz xchg add jns call fstpt int3 dec test adc repnz sub popf jg cmpsl mov xlat cmp cmpsl or aad mov je push por and add ds imul and lock scas fwait dec insl (bad) adc lret sub xor jo pop mov mulb outsb pushf cmp insb jmp clc and jl pusha stos clc lcall clc mov lea (bad) fildll mov push pop cmp inc hlt xchg cld jns outsl xchg xchg mov in ficom cmp mov test mov sub sbb add jg cmp js push xchg jl xchg ret inc lahf aam dec dec and sub sbb es inc les dec ljmp sub push sub mov aas mov mov rcrb lods into outsl clc rorl cmc mov lcall pop (bad) aad negl jns xchg (bad) aam xchg push popf ret movsb jecxz push fstps jmp cmp cld pop idivb movsl push fsubrs cld mov mov clc mov push inc xor (bad) ucomiss dec push pop jmp scas mov (bad) mov in cmp nop xor loope ret (bad) jmp dec (bad) fcomi push xor adc mov sbb pop std (bad) fdivp in pop pushf lds das repz (bad) sbb into mov in (bad) rolb aaa pop lods fidivl push shl fistpl mov mov and or mov pop ficom and xor mov aas xchg sub xlat outsl dec dec mov pop ror notl mov in and push lds je sub clc lea lahf xchg imul xchg (bad) mov sbb dec sbb in int3 fldt mov cmp mov or cmc shll or xor or xchg xlat cmp jecxz sbb inc das sub dec inc fucom ret or mov iret (bad) lock mov add aam (bad) scas or sub or push int3 mov or sti das or mov push mov fadds mov decb in arpl imul dec mov fwait sbb daa or out pusha lcall push jnp in pop cmpsb popf dec adc lret xchg fisttp xlat cmp int3 repz dec das cmpsl es inc (bad) sbb das in scas loopne sbb cwtl mov decb popf les jle ja pop or pop or pop rorb mov cmp aad popa dec xchg nop pop hlt push jbe popf lahf (bad) sub out loope leave das add dec ficoml fadds and dec mov int3 mov aas xor (bad) sbb xlat lcall rdtsc pop sbb xchg out into jecxz push je and mov inc sub lahf pop cld es inc mov imul sbb mov out sub jmp pop pop and or jg popa cmpsl cmove fwait fwait xchg and xor sbb lret repnz add xchg push (bad) les push mov mov lcall (bad) push lea xlat pop (bad) imul or adc inc int3 mov lahf sarb outsl div outsb inc pop js push mov int3 cmp lcall bound out scas mov mov sbb fdivl sahf out pop cmp xchg jmp sub jo,pt or lock sbb push jo,pt sub mov (bad) cmpsl jp fwait xor fwait xchg loope pop ljmpw dec sub cmp test clc ljmp push aas jmp or mov test sbb (bad) clc lret push push and aaa xchg sbb xchg inc mov xor test das inc out je in mov aaa sbb jae jnp fwait cmp cmpsl enter push fcoms decb jno sahf pop push pop int mov jg jno or dec dec or out mov test adc mov mov push ret mov push fistp imul sub pop push sbb add push mov out push fidivrl add (bad) mov scas pop xlat xor das jl imul inc adc rorb ds fidivr xor aaa rorl arpl nop xchg movsb iret lahf pop cli (bad) xor jns mov adc cld icebp mul xchg data16 add push ret pop adc add gs popl into cmpsl add iret push dec and loop ret arpl imul loope ret inc aam fiadd rcrb out and mov int3 stos loop fcomp jae jge sub pop adc js scas lds mov push repnz movsb lcall lds sub (bad) or sub out cmp mov sbb xor dec jg jmp imul xlat test fiaddl cli (bad) mull jg jae out add loop dec je gs loop scas pop div jb scas jo jnp xor cmp inc lret (bad) adc orl sahf mov ljmp inc cld dec mov js clc xor pusha out clc (bad) hlt fwait xorl add cmpsb test pop test mov xor lahf mov add scas mov cld aad push std cld das mov ljmp lcall mov cli outsl jmp jecxz xchg fidiv (bad) pushl push fdivs out push mov scas or cs (bad) jo fcoms cmp pop and (bad) das xor sbb jo ret mov sar pop mov pop xchg pop insl adc sub jg and loopne ret ret add xchg mov or jg aaa (bad) sahf mov jnp jnp sbb xor ret aam jle xchg adc sbb jp adc call adc cmpsl jge (bad) fst jg xchg inc jns inc pop fistpl mov jnp fistpll pop sti data16 jg sub sbb sub cmp loopne fmuls fdivrp fs pop mov lahf in stc pop cmp out in pop xchg push sub inc mov pop test sbb xchg mov sbb fiadd xor ja jae jecxz iret jb fisttp pop movsb mov mov cwtl ljmp inc adc data16 cmp inc mov adc ret aaa scas sbb (bad) aad adc inc cli dec cmp sub scas lock iret cli scas sahf sarb sub add jg test ret rep xchg xor mov out push (bad) jno je or aad es mov ret mov nop mov rcll sti or cwtl ja adcl cmc into (bad) out or lret pop (bad) je fbstp dec test test mov out push sti sbb xchg push cmp mov cld inc fidiv arpl orps jl sbb das xlat sti add dec xchg add mov jecxz test out xchg inc cltd out aaa js arpl sbb popf dec jns cmpsb inc mov push scas sub lock add insl inc push fisub lods cli jns sub aas int3 xchg sarb add adc lahf icebp aaa loope or pop mov cli or (bad) aaa cwtl add into inc std or mov clc int3 xchg add stos xchg clc dec mov (bad) loope mov jo push (bad) es rorb test sbb gs sbb (bad) jne add mov in lods fisub push dec xlat pcmpgtd scas daa (bad) dec or mov sahf xchg mov in mov inc add insw fisttpll cmpsb mov mov mov and cmp or dec ret into (bad) sbb (bad) lds mov sbb mov pop and dec dec sbb scas aaa ljmp arpl mov mov xchg ss outsb cld out pushf movsb or hlt neg mov (bad) les push enter and (bad) stos pop sahf sahf vrsqrtss inc xchg pushf dec sahf or lea aad pop xor mov dec scas mov or dec test daa mov pop cmpsl (bad) lret adc xor ljmp loop in mov cld xchg (bad) cli add sar div test hlt in pop pop mov inc xor test add inc pop sub (bad) (bad) repnz setae lcall out repz dec ljmp jg das divl mov mov ja sarb mov in (bad) cmc pop dec lds sbb sbb movsb adcl mov inc inc mov sti lahf adc sarl data16 dec xor frstor dec (bad) lret cltd in pop or push cmp mov lods ljmp aad xchg dec inc xchg scas das shll jp jo jnp enter repz adc dec pop jbe bound loopne sbb or out sbb call int jge push in mov ss fisttpll cmc scas mov dec sbb mov and popf push pop xchg pushf (bad) int outsb test add xchg hlt dec xchg pop (bad) xchg in dec shrl mov les adc data16 xchg clc (bad) imul fisttp int3 mov clc scas pushf into divb aam rcrl and add or in cmp movsb cs pop and ficoml lcall movsb mov data16 cmp leave xchg and mov in jle aad xor xlat orps arpl mov mov sub mov ret je push add lds mov mov or addr16 lods es (bad) gs inc mov mov ja push cltd aam cltd (bad) mov xchg pop js and and pop cltd out add in inc aam clc mov (bad) call dec int3 sub ret mov cmpsb mov js scas add mov mov push push (bad) adc mov xchg mov adc jae test pushl or repz inc jae or jecxz pop adc loopne xchg mov scas xchg cwtl lods dec xchg icebp shl cmp or shrb test lds mov jecxz cmp loopne aaa lods or (bad) and stos push jle std sub mov das sbb shr or jno idivb cmpl cmc fisubr lea aas dec push int3 int3 sbb sub std xor dec or jb aad outsb lahf (bad) repnz xlat ds dec call out cmpl or add jnp mov inc out (bad) idivb pop mov pop lods add mov invd pop inc bound adc adcl sub cltd sub rorl xor dec inc data16 push jge cmp mov (bad) popf in and jg inc fs mov int3 cmp mov addr16 mov ret scas and jo arpl sub jcxz popf mov jecxz aas mov add jl fimul adc mov sbb scas (bad) lods xor mov pushf cli inc mov fidivr loop and jl subl mov sarl jg scas jp jns aad (bad) pop xchg push sbb call sub arpl adc xchg insl test xchg add cmc sahf jg int3 fidivr mov jne xchg ds mov jns cld mov sub mov cmp shll sub in push roll sbb in cli cmp inc push cld clc add push cmpl xor pop fidiv test dec push (bad) idivl or out out sbb (bad) mov pushf jo sub jmp rclb add jg xchg push mov xchg mov mov in stc lea cmp test sub adc aaa xchg inc xor dec mov mov cltd shr xchg addl push lods xor in imul mov addb fwait (bad) mov test (bad) jl sbb xlat xchg cmpb cmp jo inc xorb xchg pop jns adc sbb xchg pop jg ret adc jb rolb stos mov jbe rorl out orl push xchg sub and jp mov xchg xchg push loope mov sbb cmp cmp mov mov push ret loopne cmp sti xchg out jbe push pusha gs lea fs std cld (bad) (bad) popf xchg sub (bad) mov out cmp xchg rcrl scas mov lret mov dec pushf sub sti imul or ljmp pushf test sub cmp inc sub or mov lds adc jg sub sub movsb rcll add jl mov xchg (bad) out add ret mov adc (bad) adc sti jg movsb mov ret sahf xor mov inc (bad) push xchg lock jl mov rorb add cld addr16 inc adc jg cwtl cmpl xor or xchg lret cmp xchg push pop pushf mov mov adc mov (bad) out mov xchg lods push xchg xchg xchg mov xchg aas mov (bad) (bad) cli add cld cld sbb mov mov out insb mov aas cmp mov (bad) jl movsb pop adc movb test aam and lock mov lock in lods out popl mov adc aas rcl pop repnz mov xlat rcrl mov loope or stc cli icebp xchg fdivrs out sbb xchg cli sub js mov sarb push out pop daa xorl (bad) jecxz mov addr16 mov ret sti rcl (bad) notb stos mov mov aas repnz mov mov add mov jo decb mov mov movsb xchg adc inc (bad) push repnz xchg (bad) aas arpl (bad) adc cmp nopl stos or jl add das mov out lret pop inc jo out and sbb cmp stos addr16 mov inc mov or popf bound xchg rclb dec sbb xchg add or pop lods into dec mov cld mov aas or rorl popf lret mov pop pop sbb sbb rolb or movsb jg fiaddl sbb mulb inc dec int dec inc lock outsl mov scas rcrl ljmp mov fnop jg pop mov lcall loope hlt adc mov mov cld (bad) ja in cmp lcall cmp jno push add jo and or cs ret scas ret adc icebp imul sar ret mov or mov mov aas add imul and (bad) mov lcall int3 mov pop daa ret fistpll xchg pop stc rolb or (bad) movsb out (bad) mov xchg inc rolb test in mov add pushf rorl (bad) and mov cli pop rol pushf or mov stc pop jg sti pushf into or (bad) push mov imul cmc (bad) mov mov jg cli mov (bad) stc aas mov std jg cli ds mov mov (bad) in or aas mov jg push les mov (bad) repnz cmp inc xchg sarb out cmp pop into rol push add fisttpl mov mov ret add inc (bad) mov mov aas add mov mov pop cli adc ret pusha and data16 repz lds add push es cltd xor sub shlb jae adc or lahf mov xchg jg adc add xlat pop stc dec cmpsb sahf aaa outsb fmul push es xchg into out jno addr16 sub or pop add xor add dec add pop icebp daa dec mov lods cmp lods test cli cli add sarl sbbl fdiv mov aam js mov mov pop lcall jg jg std sub ret orl out xchg push or and lods aam clc lret xlat enter and cmc (bad) jl ficom popa and mov ret mov addl mov fbld ficoml add mov pop pop das mov add (bad) pop sub lock xchg jg lods inc xchg inc jl sar mov iret mov jb insl (bad) aas mov outsl out jno dec pop pop adc aaa in lahf lds pop xchg jge std pop adc dec or jmp inc sub xor push mov mov pop jmp aad int enter pop scas pop inc movsb out outsl aam test fs jg imul and test loop or xor clc pop (bad) and jne fucomip and gs and jl jmp sbbl rcl adc std mov cmp adc push mov es mov cld les xchg insb loop mov mov inc (bad) incl cmp mov lods stc xchg faddl mov mov sahf mov jns aas (bad) xchg sti cmp inc (bad) ret loop jl bnd sbb in (bad) pop mov mov decl sahf mov inc scas cmp cwtl ret cwtl js push sahf jg cmpsl test xchg cmp ljmp mov out scas iret cld xchg aaa push into or jg mov mov mov xchg mov ret mov mov jl sti xchg mov xchg cld jg (bad) cld sbb mov or cld mov pop enter sahf ret xchg sub xchg rcrl lods dec xchg cld mov xchg repz cmpsl in (bad) pop mov cli insl jg hlt add jl mov mov lcall sub mov sub and sub mov sub lcall jg mov lret ret mov jns,pt aaa add (bad) out stos dec pushf and jg or int3 aad xor sahf push or pop daa movhps pop mov in inc outsl push cmp mov (bad) jo cmpsl call push into adcb repz adc or sbb lods pop es cmp cmp lea test sar adc sbb clc adc mov lcall cli xchg mov push dec xor mov loopne (bad) pop (bad) jb push dec cmpsl fbld lret jnp out and jns ret shll popw (bad) inc leave (bad) loope mov (bad) in shrb (bad) jo or (bad) adc iret adcl cmpl sahf inc scas daa cmpsb cltd pushf mov loope fild popa add into jg pop (bad) pop pop das dec cmp xchg cmc adc mov fnstsw fldl pushf in outsl xor mov push push pusha leave mov mov int jl inc xchg bswap add in xor das inc shrb add fdivrp int nop das jbe xor iret movsl (bad) sahf push mov xchg or mov inc lods loope xor jns mov (bad) into sub outsb das cmc inc aaa stos cmc clc xchg adc adcl lds mov int3 lahf aaa sbb aaa mov or (bad) xchg mov test enter into bound mov add mull jb cmpsb ret js cmp or aad push lods xchg mov pushf lds mov xchg (bad) fwait mov into aaa jae and push popf bound scas jnp in xor inc mov push jae sbb pop les scas push or rcrl xchg sti repz scas pop ret outsb sar sub dec and frstor lahf insb mov fs sub imul fwait jg nop iret adc jg,pn (bad) mov jl jnp sarb and inc fstl fdivrs jp mov sahf inc sbb xlat dec xchg lods outsl or addr16 lds add mov sub das es icebp jns push or pop (bad) sarb test sahf daa leave adc clc icebp mov mov mov and xor xchg add lahf sbb movsl push or popf stc mov mov xlat jno lea or xchg mov dec mov pop out test pushl lahf (bad) mov xchg xchg mov dec loope dec or and mov dec addb dec rcl fdivs mov dec cmpsb stos or push push cmp ja jmp imul lahf inc fcomi xchg pop push addl stos jmp push adc or (bad) loopne repnz (bad) stos pushw xchg lcall jbe push clc arpl mov ds sbb mov pop out or sub adc mov sub sbb mov and pause cmc jge fcompl inc enter std fistpll xchg sahf jo add (bad) add push and jg cmp in add pop (bad) or mov (bad) inc jg out pop cmp iret cmp out clc mov xchg mov cmp repnz inc (bad) jb (bad) and das mov mov push fs or sahf sbb jno mov mov (bad) sar and jg stc pop sub fidivr or sbb mov inc sbb outsl or popa iret cmp jnp mov sbb add and outsb test repz repz sahf iret clc xor in mov mov int aad push fstpt mov push jb lcall call mov jmp or fstp xor and lcall xlat xchg and js mov dec aam fwait (bad) adc push aas and fimul (bad) mov dec sar sahf fnstsw out cmp cltd lcall cltd sub mov (bad) std sub jmp fisttp jne xlat jae add mov xchg push cwtl pop mov iret adc pop ret pop add rolb clc insl hlt sbb dec push loopne and push mov add push mov mov sti into ret push pop test aas sahf in xor imul cmp test pop mov push sahf data16 pop scas test mov dec in dec lcall mov xchg inc sarb pushf jbe adc ror cmc jnp mov jae push (bad) mov xor pop ja movsl std mov pop pop jo js das popf mov xor or adc jl sahf jg shrb mov in in fst mov pop lods jl ret mov cli les decl mov mov lock mov scas pop pop mov popa movsl sbb jp inc adc jns xchg or push inc jl push cmc aas jae cmp pop cld test je outsl loope pop into imul std test iret (bad) clc iret or or mov stos or adc daa fidivr or mov aad daa jecxz loopne (bad) jl mov iret lods sub dec push or outsb push clc pop xchg repz mov lahf mov add out divb cmp push testl mov (bad) lret and ljmp jne push add mov pop pop xor stos out sbb out dec idiv ss pop and adc in (bad) ficompl das clc cmovge cwtl imul ret and lahf jae jne repnz dec xchg pop inc jge cmp add mov mov outsl repz out dec sbb or cli jg xchg cmp jg scas mov adc mov mov jecxz ljmp mov lods (bad) inc scas push leave jecxz add pop xchg test imul outsb aaa (bad) subl mov xchg mov pop xchg aam sbb mov das std add iret mov mov or incb jg xchg pop scas mov fcomps movsb inc repz xchg xchg jns cli fidivr jbe jge mov test (bad) or or aad addl jg rcrb stc fstpl int3 sbb fbstp mov movsl push inc add clc dec jg inc (bad) rcrb jmp repz fs sti movsb cli cmp fistpll xchg notl or scas push adc mov add sti popl adc incl test pop add inc cltd or xor loop push lcall shrl idiv and pop jnp jle pop add jge or inc and sub decb sub xchg jb mov xor int3 mov add cmp leave into rolb and cmp add inc mov test or shl daa cmp repz mov outsl xchg mov mov mov out cld pusha or lahf dec sahf adc mov js pop pop les mov sahf sbb push mov movsb pop jo dec and or cmp daa loopne cli cmp shrw lcall mov adc js sbb push or sub out hlt sbb aam data16 cmp mov scas data16 out mov fldenv andnps js sub add in imul cmp int3 mov mov fwait ds idivl test (bad) mov inc (bad) fs test scas dec fistpl inc lahf cli out mov cmp sahf jnp mov pop clc and jmp stos sub xchg sub jo (bad) stc shlb inc gs (bad) mov cmovs mov test fs (bad) aas sahf push ljmp int lds cwtl movsb iret aad clc test mov cltd (bad) mov mov and arpl neg jg or popa popf mov imul shlb lcall pop sub jo ss inc rclb stos aaa dec movsb mov xor scas mov mov loop xchg inc fwait add das or (bad) cli test jle cltd daa pop pop aas fbld jae sti dec sbb dec mov xchg movsb hlt (bad) jae cmp sahf or adc (bad) xor outsl jl pop inc (bad) fldl jo jl (bad) clc xchg jae cmp je mov loop shrb scas jo clc stos add mov pop push inc mov push mov dec dec ds ficompl movsl push push pop adc jg adc arpl push pusha mov mov arpl cmp hlt or (bad) xor add dec jne or sbb pop and ret int3 mov les das sub jp outsb cmc popa cmp cmovle jnp or pop in adc or movsb add into aad aas push subl mov xor or add lds pop jge rorl xor mov inc jecxz fnstsw push xchg je inc into cmc mov test or dec push outsl pop xor pop lds sahf test clc dec fisubl xor mov inc add or nop jg and repnz imulb xchg add jg push add repz inc ja cmpsb std and cmpsb lcall and int3 into jns clc sahf out repz sbb push popf gs aaa dec sub (bad) sub mov movzbl pop in movsl aas mov mov sahf push pushf pushf mov data16 xchg pop iret repz push out ret dec sub or mov rcrl pusha mov push scas jg adc add sbb push cmpsb push std adc fcompl mov xchg pusha or mov in pop push sbb out mov shrl sbb mov jbe sub daa lea mov mov xor into les imul fucom std sahf mov jae aas mov mov (bad) cmp inc sahf mov cmp ds adc daa mov cmp jecxz fstpl packsswb (bad) movzbl mov cmp stc (bad) jne popa outsl (bad) je mov mov inc push les adc dec popa or pusha cmpsb sbb dec mov sub jb aas movsl inc xor mov add push and cmp stos push mov mov aaa ljmp outsl and mov sub pop imul and stc ds jnp dec pushf mov xchg stc cld ficompl adc sbb mov rorb pop test sbb (bad) or push fiaddl jb cwtl pop mov mov mov or mov push mov insl ret fwait push sbb pop xchg in jg out (bad) jg cmc inc and (bad) sbb jno jno and mov jmp lea jge mov mov das imul movsb stos lret inc mov (bad) mov jg sbb incl inc lret insb es mov sub pop add xor clc and (bad) adc jae push pop out mov cld push jo out scas (bad) jnp mov fildll sbb push loope mov data16 outsb cmpsl mov mov incb lahf mov xor jbe outsb loopne scas repz pop sub sub notb loopne mov xor cltd adc add aaa adc pop iret (bad) lret mov or pop frstor mov scas ljmp (bad) and sar fidivr xchg loopne cmpsb cmpsl xchg (bad) lods push jns stos push pop xorl jne sub repnz aas or test jp mov pop xchg aam sbb lcall lahf push out pop mov lahf rcll mov jmp popf outsl cmp add pop xchg sub add popf inc das or aad add inc mov mov pushf lahf pop dec push add cmp fistl and popa add jmp mov sub insb jecxz adc xchg mov xchg sub and jnp push pushf imul into add lea add int3 ret scas mov popf mov (bad) lds fimul sbb push push sub scas cltd mov mov or sahf aaa les outsb out insb add pop pop aaa mov lods sbb xchg mov in repz dec sub into (bad) rol ficomp cmp inc shr fwait je xchg push aaa cmp inc rorb fwait out pop ds rcrb mov dec add aam pop inc sbb fsubrs cmp fwait xlat insb sub pushf pop or cli shrl push hlt pop mov xorl and insb mov out add dec pushf scas or mov pop xorl (bad) mov iret pop (bad) insb inc rolb fwait out xchg rolb out sbb (bad) out add push (bad) call push mov cmp insb sbb les dec (bad) lret pop inc and jg mov lds lods out sbb cmc icebp dec out add inc pop aaa les xchg shrb inc (bad) aad scas jp sbb outsl mov ljmp std xor int jne out dec jnp scas stc test dec dec stos cmpl xor cltd fidiv lahf sub lcall enter pushf cmp fcomps call popf cmpsb pop clc pop jno lea scas pop dec inc pop push mov or jb mov xchg pop inc shrb fwait push mov jle pushf cmpl testb pop xchg dec (bad) fstps testl dec stos jl call arpl insl inc mov les jg lods (bad) cwtl dec dec (bad) mov jno jo and mov pushf int and imul in pop movl std pop shrb mov push out and jl push or cli mov std pop ds sub cmpsb lds enter pop mov aad aaa dec aaa aam sub sub pop fwait inc jbe sub mov jmp mov aad (bad) je push ret jbe sbb aad xor xor xchg fs mov vpunpckldq aas mov mov repnz (bad) in rcrl pop xchg mov push or adc clc insb dec pop ja frstor mov push pop xor cmp (bad) cs or push xchg idivb push (bad) xchg imul adc jns dec mov mov mov lods mov bound out add push push cmp lods sub add lds or cmp fucomp (bad) xchg and std insb dec pop mov push add lds pushf outsl je push pop add ds sub sbb mov lret mov movsb adc adc add jl dec aaa or adc cwtl out and mov insl or jb pop std cmp loop jnp or idivb mov bound call in ja fs loope mulb out add fildll jb (bad) loope cmp loop jnp clc mov inc or lock insb (bad) jne and idiv push out cltd pop mov lret mov xchg cmp cs notb fcomi fwait add lcall movsl test pusha loop pushf push or cli pusha rcrb mov scas add and inc jle int mov push mov jmp repnz and pop stos lods (bad) lret push inc inc iret out fldenv out stos insl mov std adc mov fucomp xlat xchg cwtl je pop xor add rorb pop enter rcrb mov mov leave lods mov lods pop or lcall mov push push lods (bad) cmp lods jnp clc das out dec pop mov cltd call cmc (bad) xchg hlt cltd sub notb inc dec dec fsubrs cmp cltd es out bound cltd mov mov int cli outsl hlt cli pusha insl fisttpl mov inc insb loop xor push and mov xchg mov bound mov jge sub sti vpshlb jnp jns aas adc sub sub aaa std or (bad) push dec dec add sahf inc fildll pushf ret int3 mov jecxz insb jecxz lcall mov scas and push loop mov loop mov mov shl push sub adc addr16 sub es dec arpl adc icebp adc jne dec jge in push aas sahf jg test test stc inc test and pop fwait jne les push xor mov mov (bad) jbe (bad) ja (bad) push pushf outsl jl leave ret mov xchg mov mov pop jnp add aas orl cmpsl sbb or outsl scas mov lds pop adc daa xor out movsb lds adc push xlat lds mov and (bad) push in jg xlat adc test add mov and imul lahf push dec add mov sbb test jg mov ja shrl int3 pop insb (bad) mov mov mov mov push pop insb jae dec ss pop lahf into outsb fwait and push popf mov xlat cmpsb fcmove arpl ret xchg rcrl fistpll negl fdivr outsl xor cltd sti std add jp push call inc cli xor xchg (bad) movsl les cli jbe ds mov (bad) mov and add cs lods sub outsb je js imul cmp xor outsl imul in jbe dec aad ja pop cwtl push clc out vorpd mov cld xchg jg mov (bad) pop add jl push pop xchg push add jnp mov icebp fcmovnb inc fisubl test adc rcr movsl jge cmp mov mov sahf inc (bad) pop or mov jns mov lcall sti in sub stos loopne mov mov mov pop rcrl rcrl xchg clc dec jecxz outsb sbb mov scas xlat out add (bad) inc clc push add fisubr loope dec and xchg xchg out addl movsb dec sbb mov jns jmp pop or jl xchg je leave jo dec jns cmpl adc mov mov lods sbb xchg lret cmp mov sub pop ficoml lods int cltd shlb pop adc mov je clc repz out mov div jne pop into pop sbb push out aaa (bad) pop mov jge iret mov std jp inc pop jbe mov stos add push pop cld test in leave pop vunpcklpd push fidiv sub (bad) std and sub inc pop inc aas and and incb jmp add aad movsb cs in jg sub xor jbe inc imul jne aad xlat outsb mov (bad) push hlt call fld (bad) sub cld add and and clc inc cmc jo (bad) out xlat jp lea and pop add adc cmp sbb clc (bad) xor xor xor push push pop in arpl jbe pop std push mov jbe pop dec aas (bad) pop daa xchg sahf jp pop outsl fsts mov cli loope push std and sbb xchg mov (bad) sahf sahf pop lahf add xchg call lea xchg pop sbb fisttp clc jns xor jae mov aad stc adc sbb xchg xor (bad) into mov fnstenv push imull shrl inc sbb dec divl or mov lds or pop cmpsb das dec dec loop inc in mov jne insb mov mov push (bad) adc in mov incb xchg dec int3 insb add out sub sti mov lds imul fidivrl add mov cmc outsb inc inc xchg lret insb push loop or cli fwait mov push dec ret loop mov loope dec repnz mov cmc das sub leave cwtl in cmc inc mov push mov xor insb and dec mov movsb xor mov das dec sub into ret push fldcw das adc into mov (bad) jecxz add loop sti out and imulb xchg inc aas xchg rorb pop call das sbb dec push int3 push inc aas push pop cltd and mov clc mov (bad) xor jg sti sub jmp add test pop xor data16 outsb adc orps push les cmp pop (bad) ljmp mov sbb sti loopne mov mov gs dec jl adc lcall mov gs inc xchg ret or movsb sti cli mov xlat in or push outsl ficoml mov mov sbbl ret std lds lahf aad mov (bad) jns xor nop pop sbb adcl adc fldt mov aad or sarl push fistl psubb sub hlt cli mov ss push cmc or xchg fcmovu dec push arpl mov scas aaa push push pop mov into xchg pop jge nopl mov fildl sub jne lods cmp daa out gs test push pusha outsb shrb enter push push fnop push dec sub pusha jp mov push push mov jecxz pop mov jg pushf cli lcall or outsl jnp add jg outsb pop inc stos cli mov std sahf mov cmp je in dec push lds (bad) mov mov (bad) cwtl pop xchg aas or mov je pop pop push mov push (bad) int mov xchg pop mov mull sbb out mov movswl lods mov cld jae daa aam arpl xchg (bad) dec (bad) sub mov sub lcall add xor cmpsb stos popf mov mov dec jmp jg and lds (bad) mov jmp fnstcw fcompl mov in mov ljmp test sahf cwtl fmul in pushf iret stos es js das imul fistpll out xchg mov ds inc leave mov clc jmp sbb fmulp lds dec push sbb fxam adc mov pusha stc mov pushf adc ljmp outsb into pop cmp push daa out xchg cmp inc (bad) and (bad) jecxz stos cltd mov push or cltd and cmc xor mov into repz (bad) std ja ja lret push pop loopne insb jmp sarl mov mov xchg mov out popf adc pop mov ss stos and lret aas leave fdiv mov adc je scas je lret pop gs and add sbb jnp push adc and mov insl aas mov test (bad) loopne sahf adc adcl adc divps xor ja jns popa cs lock fidivl mov mov mov pop mov or sub dec ret push jb mov stc jns mov and mov mov mov movsb xchg xchg int3 shl dec sub xchg jl dec test fiaddl clc (bad) jge xorl test xchg cmp insl dec ret or (bad) call mov roll aas cmpsb outsl cmp pop loop aad and daa mov ljmp mov cld lcall cmp sub add cli out pop pop or aaa pop mov jge pop sbb dec (bad) (bad) dec cmpsl dec or add mov mov mov push cli loopne mov mov mov and jbe in mov mov and xchg jmp adc mov sti xchg sbb pushf mov int3 pop das scas hlt pushf rol mov rclb dec aad add adc xor fcmove pop mov jmp dec mov push mov mov cmc or test es mov jmp sub sub jp push mov mov pushl pop dec cmp jge movsl hlt xchg mov mov sbb or pushf movb inc mov stc jb or ljmp sbb js (bad) popf es adc rolb sbb pop pop psubb insl je fidivr bound inc popf out lods hlt add xchg js (bad) adc outsl push sub dec into (bad) xor mov ficom das movsl fucomi (bad) xor push jnp lret cmc mov into stc pop mov ljmp icebp pop lds cmp inc adc clc pusha or fbld push stos stc pop addb (bad) ljmp incb dec push in aas ficomp mov nop out or inc ret push push (bad) jl inc fwait daa sbb loope jecxz cmp insl mov push add or loop lret push (bad) cmpsb push test push jg mov fwait push lea frstor mov jecxz repnz out xor test and test mov dec mov jg jb mov xchg ret les pop aaa adc mov xchg repnz out das aam cmp jl xchg repz add js ret dec jno notb fimul les fisubrl xchg pop orb stos sbbl adc add movsl dec int3 cmc lock cld pop je cmpsb dec push outsl xor into pop das xor mov mov scas pcmpeqd and pushf add jns mov fild cwtl adc mov lahf outsl lods cwtl inc pop cmc pop leave lea and mov (bad) das mov mov mov sbb and sbb mov rorb lahf push inc xchg push pop aas rcrb lock andl jmp stos dec scas aaa add jg loopne inc aaa push cmpsb lret (bad) xchg pop jmp cld pop pusha xchg (bad) je pop xchg or xchg cmpsb shrb in shlb adc cltd imul cli cmp pop clc into in jecxz mov add movsl inc adc mov xchg sub sub mov adc inc mov add inc pop fcoml jecxz jae pop mov mov cli mov cltd push add and (bad) clc test aam adc jae leave jg pop loop shrb repz jns,pt clc in and test std test sub nop int3 mov pop sub roll mov lcall lahf lret (bad) in (bad) xor or dec (bad) mov pop cli mov cmp xor std mov stos mov adc mov in frstor xor ljmp aas aam out pop cli js sbb int3 aad int adc ss or sarb in cmp lret lahf imul and mov (bad) (bad) and adc jmp lds pop loop jl cmp int pusha dec int jno scas fbld sahf jg,pn shrl dec xor movl bound std lods inc sub gs mov cmp imul pop stos cmp aaa xor aas je jae inc loope xor cwtl jg cmpl and or jge mov cli jge jae repz repz mov xor popl mov lea mov repz sbb sbb pop mov jne adc add dec test and test fdivrl (bad) mov push xchg pop fildl mov mov mov add push mov push clc lahf adcl pop fsubrl or xor mov pop enter sub mov jge cmp jns (bad) arpl and test aaa add push xchg xchg movsb jg mov and sbbb and pop mov jae ret popf push (bad) jg sahf cltd and jg sbb ja cmpl jl adcl ror sbb jmp adc das dec mov pop xchg jno pushf add outsb mov mov pop addb ljmp jb and fwait jb out add fiaddl cwtl sub ds (bad) and lret je jae fisttpll ljmp sub xchg in or mov push int fistl faddl pop data16 push jg push add jae int3 (bad) negl pusha icebp ret roll xchg pop mov sub outsl out fwait test and mov xchg pop cltd cwtl lahf outsl inc test sahf inc mov pusha ficoml push xor das clc jg test addl pop scas or mov outsl imul mov sar dec jbe (bad) stc pop scas jp or popl out shlb adc stc (bad) into sub iret popf or mov mov gs repnz ljmp pop mov (bad) mov test xchg (bad) and aad es xchg out mov jecxz orl fadd loopne sarl push (bad) mov pop fstl ror or sahf test pop xchg lds pop and jge pop out mov (bad) sahf sahf pop mov mov mov jbe,pn push mov xchg popa xor push jg in sub (bad) mov decb pop jbe xchg (bad) cmp ret add cmpsb cmp pusha (bad) enter lds adcl jecxz mov hlt call arpl mov jecxz mov incb inc push inc add lahf jge sbb mov mov jne fisubr out (bad) fidivrl out xor jg jmp hlt sahf scas outsb mov jg add pop andl pusha inc aaa in sub (bad) ficom mov pushl mov popf cli cmp add and cmp adc (bad) fiadd loopne rcr add push test ljmp addr16 mov mov pop lcall sahf out sub frstor not popf faddp mov ret push xchg movsl aas stc jo shrb loope mov scas xchg cltd mov mov sub adcl mov xchg jecxz (bad) pop add add pop icebp add xchg je xchg ds xor push xchg sarb mov aas jg sarb or mov das inc mov jno movsl mov jg jo popl inc rdmsr stos inc into xchg jecxz mov rcrl arpl lea cmp adc cmpsl pushf lcall sub mov inc dec xchg pushl xchg loop cmpsb rol ret rol dec rcr roll or and (bad) add cld xorl clc jg inc or or cltd jns scas sbb cmp jl mov ja ds jg mov testb sbb iret setl insl inc daa push test int mov cmp mov popa add pop ret lock sahf dec add pushf clc xor mov hlt jg mov movsl into inc addb add dec ljmp lods sbb add cmp mov data16 jg decb jecxz test nop pop lret jbe int movsl (bad) je into clc xchg popf fs add (bad) push xchg mov ret bound xchg add cmp push ds xchg add fwait bound inc or pop push cmpsb push and (bad) in (bad) aas pop pusha jg clc jg or mov (bad) jl ret pop mov push add add cmpb lds cld jge mov xorb xor sub or xchg out js testl xchg adc sarb dec adcl js mov iret add fildll (bad) aas mov mov mov ret adc aas pop loopne cmp lock mov xchg sub std out jp xor jl scas adc xor (bad) lret mov movsb outsl scas xchg dec jne test dec enter jl adc mov mov movsb xor push sbb clc out (bad) or sbbl mov aam (bad) ljmp sub mov or test addr16 pop xchg int3 fwait loopne push movb lds adc aas mov mov clc lahf scas fmull aas pusha push imul push aam adc das xchg inc clc and les xchg imul pop stc rcl (bad) psraw out adc xchg jnp mov push pop cmp mov mov mov lea xor xchg adc cld or add adc push cld pop sub inc in push jg inc sub jo xor sahf mov xchg sub sub mov movsb fcmovnbe mov (bad) iret sbb lahf sub push mov or bound push xchg cmp xchg push xlat add cld sahf mov loop xchg push test add stos scas das fldl pop cwtl dec sti mov lret jg mov cmp push pop add xchg stos dec inc and rolb cld xchg repz or mov jbe xorl fistpl push inc sbb cmp inc xor pop rcl dec inc push ljmp jnp or inc daa mov daa jl fcomi push fldenv aas cmp pusha in mov jge pop cmp add (bad) jmp pop shr cld addl sub and sar mov xchg mov and int3 or or jne test pop sahf inc jg iret mov (bad) out aas jnp clc xchg xchg xchg fnstenv mov mov mov fiadd sarl push jp push neg cmp or std loopne cmp mov gs js adc xor add cld sub sub xchg jo arpl loopne out add insb xchg aas fiaddl mov mov loop mov movsb lock xchg aad jbe sbb mov lds fcmovnb sahf or in stos sahf aaa stos clc cmp pusha push mov or or scas push pop ret ret jp sahf cmp (bad) or rcl mov lahf adc sti outsl mov or mov xor jne mov sbb std sub cli scas add idivb (bad) into push aas bound ficoml jno push fimull mov pushf sahf loop ficom bound lds std push orb aad cmc lahf fsubr loop cmpsl pop cmpsb out aas movsl inc fwait jmp test sub daa ret mov imul push lcall ds mov shrb pop lods cmp cmpsl cmp or out jb xchg push jae xchg cmpl aad or inc loope pop pop push xrelease push push inc repnz pop in decb lds jns pusha add js pushf jnp popa (bad) add stc les push jbe scas pushf (bad) loop xchg pop cmpb les (bad) or cwtl xchg jecxz push test push jnp sarb aas aad in push sub int3 lahf sarl jne sub push and imul mov scas roll stos adc jl inc jl lcall pop test test jg,pt cmp jg mov jmp aas sarl xchg or ljmp js (bad) xchg and mov push sub aam pop cmp sbb xchg xchg mov fimull ret add mov sub cmp push xor push repnz into dec cmpsl repnz add or cmpl fimul mov dec xor fs (bad) fmull mov out cmp addr16 dec repnz xlat xor dec fcoms jg inc out add pop xchg pop adc pop push cltd dec (bad) jbe sub inc lds cwtl data16 xchg in mov (bad) mov int3 addr16 fsubrp mov arpl xor loop mov sub xchg insl push bound pusha sub mov andl mov mov dec mov and xchg in rclb cltd add subw neg mov vshufpd pusha xchg push jecxz rcll push movsb adc push cmc cmpsl fisubl in or inc out adc pop and ret jecxz cli imul shll mov mov push fisttp sbbl popa jl xchg stc das adc sarb (bad) (bad) mov lds pop fnstcw cmp mov lahf loop aas sbb (bad) in cmpsb mov nop mov ret (bad) addr16 mov out mov fwait cmp fildl (bad) repz cmc pop lret loop and daa push mov mov aad mov xchg add mov xchg jns xor in push xchg (bad) dec out shlb outsl int3 (bad) repz add xchg jno push push dec mov push pop jmp cmpsb and sahf mov sub clc sbb scas mov sbb leave (bad) adc sub das mov sar movb popf mov adc add std out sti xor mov leave push mov js xor outsl cmpsb repnz pop mov push xchg mov (bad) xchg push mov aad flds (bad) adc stc add cmp arpl dec mov ret lret lds jecxz sub daa mov aaa outsb jecxz cli push xor or arpl clc je dec cwtl ljmp pop data16 (bad) mov pop pop jae xchg inc xchg xor int3 lea xchg inc insb out add adcb xor mov out sbb ret mov mov das rol mov rcr movsb add mov adc (bad) daa pop xchg adc das pop push jg xor pop and ret pushf xlat in mov xchg std dec outsl aaa repz jae aas mov bnd add jbe fcmovb aad mov ret push jge jae repnz cmpl mov pop inc mov fdivl add das add pop adc mov das cmpsb mov jecxz or ljmp sbb bswap aaa outsb ror add addr16 xchg add pop mov sbb or lea push lods aaa repnz mov ljmp mov xchg out mov sub clc xor mov (bad) sbb jno xor lods dec adc vcvttpd2dq xor out pop fidivr mov loop mov aas aas mov mov (bad) jns cmp call or mov xchg (bad) jge cmp inc mov fiadd clc push sti bound add scas jb cmc xchg int3 mov mov scas push shrl mov add rorb push clc pop js rorl dec data16 pop jl push mulb or adc stc ret mov lahf cmp or int3 roll jnp or pop (bad) outsb mov aad (bad) cwtl (bad) aas push nop les adc ljmp jp cmpsb cmp adc fild jb cli movsl mov ret mov popf mov inc pushf xchg call xchg xchg andl pusha push inc pop out pusha dec sahf mov aas pop xor sarl xor (bad) xor adc pusha ds adc arpl scas sbb lahf (bad) (bad) mov mov jp mov out ljmp inc dec add test fnop mov cmpsl stos outsb pop roll jbe or lahf xor fmull lcall test push outsb test scas outsl jmp pop mov (bad) out (bad) mov outsl jb jnp lea lds (bad) lret cmpsb (bad) mov sub xchg or inc out aaa mov jns sub pop inc pop add xchg out push (bad) jp sub xor adc rcl ds push pushf mov mov outsl flds aas jg sbb inc sarl outsl sahf xchg std ss mov fildll and das pop stc into movsb dec (bad) and inc mov icebp sub jg sbb insl xchg adc ss mov aas inc sbb dec xor inc pop jmp daa (bad) pusha repnz cld inc cmp outsb (bad) out xchg dec or lahf cmp jle dec cmc mov or aas push ret lock add leave pushl pop cmp xor jg or add xchg jl ret cld xor iret pop rolb dec leave dec pcmpgtd push stos sbb jnp mov repz aas xchg and pop scas clc aas add ret xor add jecxz sbb (bad) xchg jns je popf sub mov mov (bad) cmp jmp outsl fild pop repz fs cmp repz add ffreep (bad) decl lds cmp adc shr das cli add mov jmp cs sbb (bad) mov test xchg out (bad) into or out lods gs jo inc pop aas addr16 dec mov scas pop divl sub out jl js cmp mov ljmp out jb mov insb adc mov insb xchg ret and and sbb dec (bad) addr16 sbb xorl add or jno pop sbb nop lods and push add lods test inc cmp pop lea in xor rcl push jno movsl mov mov push les les popf scas cmp repnz scas lds sahf sarl (bad) mov mov gs inc mov cmpsl test fmull out test pop ret (bad) mov adc int mov subb fwait movsb jno repnz stc mov pop enter fistp roll adc data16 ficom xchg ljmp ss (bad) (bad) cmp cmp jo dec fidivl or dec lods jge xchg mov or jne mov and subl xor adc in jg fsubr and (bad) icebp push pusha inc mull std pop mov dec scas fisttp in nop pop fdivs sub dec or (bad) dec fistpll adc cmp aas add scas stc or push inc popf popf adc lcall mov mov or jnp imul outsl (bad) xlat in pop adc (bad) outsl popf addr16 dec mov mov xor aaa mov xchg jne sub mov cmp les fistpl jnp in insl pusha or enter inc dec xchg rclb add (bad) aam and cltd cmp or sub cmp mov out jg repz or jle aaa add les in jnp dec ja xor ljmp pshufw adcb orl in loop lcall mov xchg sbb mov cld (bad) and mov mov inc ret mov stos cltd test add jl outsb mov pop jge imull jg fcmovnb repnz mov push xchg out mov mov add and mov ret lcall je mov aas push push jl mov add push mov (bad) ficompl scas sub cld xchg out jg cmp pushl notl movsl sarb and test jl cmc adc es jb call jmp ss cmp jge push (bad) clc and pop xchg cmp cmp lods js push jg andl add jl jnp ja push xchg lcall ret inc into dec out test dec jg push inc cmpl push gs pusha sub (bad) jne mov push rcll xchg sub or add mov adcl fdivr jmp leave cli inc sub test mov cmp cltd push aad call lret shrl dec mulb mov outsl mov lea pusha aas jge (bad) mov int3 out adc ret adc jecxz mov std lcall aad aaa jo cli mov loop pushl jns dec (bad) aaa ret pminub fisubl (bad) sbb scas mov mull mov mov int3 mov xchg test lea (bad) std cmp (bad) fisubrl xchg lds cmpl mov inc mov xchg in xor std adc push (bad) sbb xor jns inc cltd mov fist (bad) popa xchg inc pushf pop arpl std imul incl or out mov or cmp xor movsl adc roll stc jle inc inc sub adc add setle xchg mov test pushf rclb jecxz sub pusha mov ficoml jb lods fidivr pop pop lods xor lahf jge movsl addr16 or std or jno subl pusha and pusha or clc ja std xor inc andb andl sub add xchg divb ret adc loopne xchg mov aad cmp loope push clc mov or xor ret mov cs loop jns std mov loopne mov int3 cmp push (bad) jo and adc jb scas andl mov add int dec xlat xchg pop and sbb mov (bad) sbb mov push or dec lahf (bad) jle scas mov mov pop lea lahf pop add stos dec mov dec ds pushf js sarl adc adc push shl sub sbb pushl (bad) cmpsb ljmp cmpsl sub scas xchg loope sub mov pop cmpsb xlat js std in daa pop xor or pop cmp mov mov sbbb xchg mov jl sti dec sbb push fcoms jl sahf xor xor call lahf xchg jnp push ja inc test mov aam mov outsl out or sbb inc push test ja fwait xchg push pop bnd jo lret jp (bad) mov cwtl jae or cltd data16 shrl faddl push adc sarl mov inc ret nop xchg push (bad) xor jl jecxz inc adc jnp cmp ret lcall loopne outsl push cltd rcpps mov push clc pop and test (bad) mov sahf mov shrb and push and rcll aam clc lcall lahf data16 les int3 mov sti ret (bad) cmp mov mov mov arpl fwait pop sub or pop fdivp int3 mov xchg jecxz mov mov xor add or ss jb clc fcom mov cmpsl push xchg xchg rolb pop push sbb repnz pop pop (bad) arpl inc pop insl imul push sahf loop sbb jne push aas adc iret xchg or cmpsl pop xchg add ret stc pushf adc adc push je aam clc ret mov lahf jae xchg add mov sub xchg jo cmp or leave jl add enter cli or js je push adc (bad) mov ret lds sub jl ljmp scas fwait pop cmp mov incb cld jno dec cltd psadbw sbbl sub mov es cmp rcll aam insb mov mov dec in (bad) (bad) repnz aas andl xor cmp negl or mov jns push out popf push mov xchg jno push cwtl test fcoms pop pop mov xchg aad xchg popf inc jns imul mov call inc cmp ds (bad) scas push adc mov push les pop jmp mov or jecxz (bad) ss mov xchg in nop (bad) flds mov call ficoml push mov scas mov adc aam adc hlt mov mov fldt add jns add push pop cmpsl test ret xor or repz sbb clc inc ds sub xchg mov cmpsb xor jge jne js and xchg ja add aaa arpl aad cltd adc (bad) fisttpl mov add js sahf jg mov (bad) jg out (bad) add add sti jb sti inc adc jecxz mov scas js push inc (bad) cmp aas popf inc imul and test jecxz addr16 jo jb mov jg insb pop enter loope je mov xor push pop sub pop adc adc sbb sbb mov adc add add sbb xchg call xor sbb xchg scas movb ljmp adc in daa dec jg jl adc aam (bad) mov test xchg xor mov popf xor mov adc pop add pop jae addr16 push mov popf mov pop mov inc add push xchg aam xor and (bad) pushl cmp lds lods imul fucom sub sbb push (bad) dec xchg push xchg mov push mull lds pushf (bad) push mov das js shlb jae xchg insb (bad) adc daa (bad) test outsl pop push sti shll fstpl mov movb push jl add jnp out ret push push das ljmp int jb cmp jns into sub repnz add sub xchg cmpsl dec push scas xlat scas cli mov lcall sbb aad lret pushf sbb or ret test cmp mov in sub xchg test jmp stos cwtl adc mov ds outsl inc mov and lods loope aaa stc xchg add sbb daa movl aas stc pop lret rorl jb lahf jl jl cmp leave stc test cmp push rolb imul xchg mov shrl cmpsb out push in mov mov jmp xor xchg scas sub fsubl push lea xorl jae push pop mov gs mov out xchg aad in clc shrb out jb cs aad scas aaa out fimull lret sub xor inc scas std out test mov xor cmpsl jbe not jmp mov lret loope add bound (bad) into outsl push sub push gs (bad) arpl fnstsw repnz aad orb pop push into add movsb aad xchg lods mov addr16 xor mov pop (bad) stc xchg mov pop cmc daa out xor adc mov popf cmp icebp mov dec (bad) dec lcall outsb adc inc and aad loop pop jp mov outsl data16 jle sbb xchg jns rolb repz dec lds pop jg jbe mov push cmp fadd sub pop jnp pop xchg sbb fcomi inc push lods lret xchg fiadd test adc in inc (bad) not adc jg and das (bad) cmpsb dec jg cli jmp mov mov jl fcmove sarl lcall movsl add mov es leave jnp and push mov fisubrl mov mov or mov xchg sub add ret sbb repz jl imul push mov push jecxz shll aam in adc cld sub cmp cmp repnz and sti mov (bad) xlat movb (bad) cmp clc insl jl scas push pop (bad) mov (bad) (bad) mov popa test sti dec lahf jge (bad) arpl rcll je sahf xchg nop push ja movsl (bad) in cltd adc sahf mov xchg idivb ret out cwtl adc cmp (bad) clc lcall adc xor push push movb sbb xor or sbb inc add pop and jae cld cmp in push lcall mov cmp or mov cmpsl lret sbb sub mov sti xor xchg out mov jp cmp stos inc mov mov test adc bound repz aaa repnz cmp cmp jl xor push addr16 std sbb adc mov dec fwait add loopne add pop outsb mov push mov (bad) (bad) repz stos (bad) jae cmp jns inc inc shlb sub sahf insb mov inc xchg jl pop int3 mov push cmp push inc xor or into aad loop mov mov sub jns dec lret (bad) sbb push sub ret mov or sub repnz adc pop test in imul les adcl jb mov and add inc pop (bad) mov mov sub lcall mov adc out pop dec and xchg (bad) mov pop and xor sti lret mov leave js pop sbb inc addr16 fwait add cmp cltd ret inc and ja xchg in movsl in adc inc not js pushw dec shlb cmpsb mov (bad) int3 and dec nop leave (bad) push loop ret and pop cmpsl rcrb in cmp jns cmp cltd out add mov sahf jne inc jmp pop lcall fdivl push jg mov mov dec mov xor sbb jo jns rcrl sub dec push (bad) fcomip mov loope mov clc pop mov outsb push mov shrl lds loop jbe push cli xchg pop dec mov jge in pop pop test aas mov mov in xor mov xchg into int3 inc mov xchg sbb mov mov xlat (bad) pop (bad) push bound (bad) mov push clc or ret ds or mov fnstcw and push adc in sub pop ret push insl pslld lret mov jge xchg cmpl out cmp xchg lahf pop aad mov add std dec ret pop inc xor dec sahf push inc sbb lahf cmc sub mov iret jg leave popl add rolb rorb stos mov sahf insl js lods add dec sahf fistl pop (bad) aas pop inc sahf lahf fwait out add jge aad pop ret (bad) mov sbb pushf sbb xchg (bad) pop sub xchg inc daa fwait or insl fwait xor std jge outsl addr16 sbb and test and add xor inc mov jmp pop and stos xor jl adc sbb fstl push mov inc add das aad dec in add pop xor popa adc inc (bad) mov dec popf sub loop (bad) pop jg hlt int3 aad pusha cmp out pop dec xor call test outsl (bad) js xchg pop pop mov xor out std (bad) mov mov or and aaa outsl jp (bad) jmp mov xchg xor popf je push dec xchg loope mov dec mov add fucomip fdivrs xchg ret sar (bad) iret leave sahf pop leave (bad) loopne or adc pop inc sbb sub mov pop cltd jge push inc neg inc xchg cmpl insl std (bad) mov add jl inc inc int or xor aam enter mov (bad) cld jo mov mov ret inc in ljmp pusha mov scas inc jl inc (bad) (bad) jge sbbb pop cmp ret insb mov mov mov jl sbb jle adc arpl cli inc loop inc add (bad) sub jo stos sub and push loop outsl call xchg pop and push stos jo lock mov push (bad) insb cmp imul scas jp in sti lds mov or push (bad) sar (bad) mov mov mov mov adc jle call aad fldcw pop sti and dec dec fldcw jl mov push mov dec das jp pop inc aas outsb mov add in cli jecxz fistp (bad) cli pop aas jae mov fimull xchg and jo jns (bad) idivl fldcw int3 xchg loop aad sub inc aaa repnz sub mov lods cmp add jns xor xchg fdiv push push pop xchg (bad) faddl jg jg loopne pusha inc mov cltd inc loope xor mov and cmpb mov add xor aas ds mov ret into clc push and mov ret imul aad (bad) mov mov push arpl xchg or popw jecxz add inc out mov mov xor jae les sbb lds pop imul int3 mov inc mov push push mov ja rcrl dec in mov icebp lea push mov cmpsl aad sbbb pop lret daa xchg pop stos push cmp ficoml ret getsec std mov jle lods fildl fidiv xchg aas add mov lea jg inc in mov mov mov fdivs outsl cmp outsl xor xlat das test cmp ret jbe mov add jo imul aam sahf int3 sbb xor ss xchg push in mov mov mov sbb adc cmp mov xor insl lahf popf int3 cmp mov mov ljmp (bad) mov jns leave jae cpuid lret fprem iret jp dec in push or rcr mov cmp cmpsl daa pop adc in sub sub outsl xchg scas and sub sbb adc sbb inc and xchg lss stos cmpsl jl jnp imul (bad) fidivl stos push rcrb cltd mov pop or cs scas mov mov and nop rcrl or add inc aad jno adc je loop jecxz data16 loop pusha int arpl out pop in test add ret or movsb push push ds in adc add inc push or nop push xchg pop lcall rcrl jmp sbb (bad) mov xchg mov leave inc cli mov cmp push mov fbld stc xor cmp scas add adc mov adcl clc sbb jp out jnp ficomp cmp int3 popl clc xchg (bad) jns leave jp and arpl jne xchg adcl mov pop pop mov pop xchg dec cld repnz (bad) lds cltd cmc imul ds mov fwait cmpsb fldln2 mov xchg mov adc sub insl insl xchg and pop push mov pop loopne jbe and jae negb push jmp aas mov mov adc push jbe push add (bad) mov pop mov jae fsubrl mov movsb push mov rorl adc mov mov clc cmpsl std in (bad) mov jo sub bound loop jbe inc out mov ljmp (bad) std push and xchg notl adc and dec sti nop xchg push xor xlat jno int3 mov mov loop stos push sbb dec in mov sub jns std aam adc cmp (bad) mov push das cmp xchg setns jae cmp pop lods sti out mov pusha (bad) (bad) insl mov fs imul mov sahf das jecxz pop ljmp inc add pop out cmp cmp xor shl sub cmp or daa shrl add mov jns mov jl stos mov pop ret dec lea and pminsw aas repnz scas xchg scas pop in pushf jge ret mov pop cmp clc clc push mov jmp (bad) jge nop out mov pop push mov (bad) dec push mov call (bad) pop in out lret ja sbb lds enter sub rcll add jl push jmp pusha sub adc and adc (bad) cld mov aaa scas fcoml and sub jmp dec xchg or fidivr int3 rolb xchg subl xchg fiadd int3 adc fsubr jbe mov mov jno jg jmp addl ret cmp pop (bad) mov out xor outsl testb mov mov dec into jp mov cmpsb scas std jecxz rcll xchg jl add add jno,pt into add shl xchg pop idiv jne mov sub subb aam outsl push mov mov add or roll inc test mov jecxz arpl dec mov lahf xchg jl movsw enter jb pop mov xchg push sti or mov add mov sti or push xchg mov mov sub lea pop xchg dec pop jae mov xchg pop cltd outsl lods add mov inc clc fst loope add cmp jns push mov pushf pop add push pop or aas pusha or inc shlb sbb jle pop outsl push pop or push push mov mov mov jo std pop sbb dec pop cmp jmp fsubp negb adc mov (bad) hlt cmpsb mov ret fs push mov add sub hlt stc push lds pop mov or (bad) mov adc dec shlb add ret mov xchg jbe dec pusha jmp add lods mov add or jnp pop mov or movsl mov sar mov dec out pop lcall mul mov jmp insb mov repz nop push lahf push push in pop (bad) out and scas push int and stos xchg mov iret sahf cli incb mov cli mov adc add jl sarl adc mov rolb inc or (bad) cmp movsl inc fbld cmp rol cmpb inc fbld push das int3 inc orl arpl xchg xlat (bad) mov mov out or mov inc (bad) xchg push fisttp mov push sub inc notl xor pop mov sub dec scas mov mov hlt in mov xacquire outsb outsb int3 pop mov sar adc cwtl out and or in push rcr xchg (bad) fisubrl xchg sarb sbb out push rorb pop mov std (bad) ret pop cmp sbb cmpsl addr16 in in mov scas cmp inc dec enter push jge scas xchg fsubrs push push std data16 mov orl jg in mov loop cmc notb aas (bad) fdivp sub jp push ret adc mov adc dec sub jg outsb inc jl mov xchg cmp sub (bad) mov popf rcll pop inc inc mov jg stc inc (bad) imul ret inc add mov xchg shrb add inc cwtl adc lds push das pop inc jecxz push jne pop push (bad) idivl pop jne pop push inc xchg jns xchg xchg mov aaa dec add pop iret push inc (bad) cltd test (bad) cli add test jmp cli cmp jp lods mov ja jnp cmp mov mov (bad) mov jl js (bad) mov clc jo popf cmp out inc pop push (bad) in lret out inc mov into cli loopne fchs mov or dec (bad) insb sti aas or inc mov clc pop mov mov cmc sbbb push inc mov sti dec (bad) push jl mov xor mov (bad) jns pop jmp jp dec scas jg dec push stos lds push adc iret rcll in sti jl test cmp xchg pop sub loop incb lahf xor mov jo gs jl sbb cld jl jae imul jp mov lret pop mov adc pop (bad) repnz jne or popf pop add ja cmp inc push xchg xor ret insl or and mov dec jnp or test movb movsb (bad) and mov call outsl mov adc fwait data16 cmp jg pop inc flds movzbl add xor dec mov imul push ds je outsl dec cmp jg jmp add adc mov aad xor shrb push adc sbb enter push lahf test and rolb js xor xor jns std dec and aas stos test in ds mov add aad int3 arpl gs (bad) mov insl xchg repnz add in jbe cli iret scas xor pushf cmp mov fcom xor sti jnp out jno xchg xchg adc aas sar sbb pop xor fiaddl or mov (bad) push test (bad) inc daa clc popa repz jmp cltd lcall sbb jnp fist mov packssdw push imull daa cmp mov pushf sbb fstpt jo sub xlat sti dec adc pusha pop xchg inc mov movsl dec mov rolb xchg mov shlb or jae mov jne test mov hlt pop std rcrb clc aad pop jge adc nop scas sti data16 jne std mov arpl jmp bsf mov push jmp xchg cwtl push mov (bad) sbb jecxz test xchg (bad) mov mov mov fucomi repz jecxz sarl adc mov sbb xchg std (bad) repz and and adc add add adc inc xor or xchg rcll mov (bad) sarb ret mov and xor (bad) fimul aaa jmp fidivrl std mov mov iret fwait leave stc sub movsb jp sbb in pop loopne mov cmp fldt jb push clc push xchg jg xor sbb adc adc sbb or mov xchg xor and pop paddusw ds fimull scas stos (bad) mov xchg add bound mov imul jns enter clc mov test add std fcoml clc xchg in mov or test jmp test ljmp test fisubr outsl cmp clc push jmp mov in jae sahf xchg mov push xchg mov and add es adc in or xchg mov jmp pushf ficompl xor jo xchg jmp jp xchg jp sub cmp aad lcall daa inc decl sbb xor jl inc loope loop inc dec pusha jo xchg dec sbb insl dec (bad) fnsave sbb outsb adc aad rclb push fiaddl in xchg or fidivl shr and jae enter mov or sarb cmp ja cltd and loop xor ljmp xchg (bad) popw or fnsave je jns pop mov popf and push sti dec jns sbb jns xor adc add xor push jg jbe mov movsl ret or adc jmp mov mov or xor daa jae cld cmp cmp inc idivb clc cmp mov inc sbb push cmpsl iret jns cmpl mov xlat cltd addl out pop mov xchg cmpb (bad) scas jmp push addb je movsb imul cmc push cli xchg cmp inc cltd fcompl xchg jne mov test out (bad) push and sub push ds loope clc or pop jg xchg cmc or mov jbe and cmp addl inc int3 ret test jg cmp enter and and movsl pop mov (bad) dec and fdivp mov push jnp jge pop dec into pop mov mov data16 outsb mov pop pop jb sahf stos clc jo (bad) pop and pop jecxz jecxz repnz fistpll mov xchg aas lcall add xchg call out sbb mov push mov jae call mov cmpsl dec lcall lcall mov fistpl xchg imul adc add jmp dec xchg pop sbb push and movsl dec icebp add pop cli sbb xchg push les push xchg xor push mov pop pop loop gs lock mov aas xchg mov out and add xlat stos cmp pop test mov cmp mov out mov mov xchg fxch das clc setns jnp cwtl dec lret mov aas inc inc ds adc adc add mov pop movsl mov pop loop mov push out (bad) into stos mov cmp in repz mov mov jg jl (bad) out std call sahf lahf (bad) mov mov packssdw push pop or jl inc lahf pop lock call adc jnp jg iret xchg les aas mov inc add lahf jae andl jne mov loop outsl ds (bad) cmp test mov jg adc test mov clc notl (bad) imull faddl inc mov popl aas sbb (bad) sahf (bad) pop and mov mov mov in in out add jne inc stos stos cld mov jne (bad) mov out or xchg shrl movl mov gs loop or imul fdivrl shrl lret clc movsl lods pop shl sub mov adc jbe sbb aas jecxz scas push cmp pop push or (bad) jo int3 sbb (bad) push inc sahf sbb and pusha test mov gs (bad) inc fistp (bad) jmp dec out sbbl mov xchg cwtl jno mov push cld inc or mov cmpsb mov ds pop cmp mov pop insb in clts std xchg aas daa adc fsub and inc adc lea mov (bad) jo in repnz stos bound (bad) fwait sub rcll iret ret popf adc xor ret loop cltd outsl divl xor jl aaa push sti and adc (bad) sti sub mov or movsb jp sub lahf lcall push mov xchg cmp dec insb pop and outsb out pop jge push mov repz sbb ljmp sarb out jge push add pop outsl (bad) mov xlat fcom out std lds sub sub cmp mov pop push push cmpsl ljmp test pusha dec scas (bad) jnp mov cmpl movsl cwtl sbbl pop pop sbbb cmpsb ret orb jnp dec adc sub loop push (bad) repnz sub les sub jge sub (bad) subl popf lret das xchg ficoml xor (bad) bound xor cli fcompl aam (bad) das cmp and mov inc pushf cld out int3 xor jbe ffree popl mov jo into jb fdivrs xor test pop (bad) pop xchg sub xor or and lahf jns cltd stc xchg cmp pop xchg push rorb inc add or ds xchg and std or jg mov mov data16 mov test mov decl aaa xchg inc int3 mov out imul popw fnstcw jmp xchg movsb push cmp (bad) cld outsl xor cwtl (bad) inc popa xchg fadd je sbb push outsb out negl jb cmp dec xor dec icebp cwtl rcrl jg push movsl dec inc add arpl lods and out out rorl int3 adc das cmp jae stos adc ficom pop xor aaa inc mov scas sbb mov mov enter (bad) mov pop mov jno adc loop xchg pusha test sarb cmp cmp repnz inc in sbb popf clc in outsl push cltd inc (bad) (bad) mov pushf addl loop push inc sbb int3 repz insb jo xor movd popf pop and dec xlat jp fwait lds and leave and out (bad) (bad) fs or pop (bad) sbb inc (bad) das jl,pt scas xor mov cs je mov roll lods repnz xlat mov or ret fiadd or jg out inc je decb test cli (bad) aas cmp shll inc adc pushf std xor lret mov jecxz jl xchg clc data16 je out rcrl jns sub pop mov mov inc out lods mov stos or daa into mov aam ret pop test pop repnz jo,pt xchg movl push pushf jnp loop ret xor inc out pop dec scas ficom fsubl adc (bad) dec test into cmpsl cmp adc lods js pop in push cmc and dec xchg cmp test jecxz mov fs pop aam jl mov jp jae test rolb adcl imul into mov out adc push dec mov sub mov popa push adc aas (bad) sbb jecxz inc das sub fdivrs pop mov sub ficomp or scas sbb jl js mov mov cmp rcll mov das xchg pusha jo jle mov pop pushf aas (bad) sbb andl add fbstp pop xor pop jnp fimul (bad) mov pop sub ficom movaps (bad) push add loopne jmp inc das scas push out stc icebp sub std loope cmp sahf aad cmp je icebp cmpsb mov pop mov insl jg jl in int sti popf cld sahf add pushf scas mov xor xchg (bad) jbe jge pop xor (bad) movnti mov jge lods mov pop inc aaa push jnp (bad) (bad) into lds bound xor sub inc xor mov mov ljmp cli jbe cli add (bad) repz andl aas int pop rorb jl stc cmp push in add out loop dec arpl lahf stc fcompl add mov sbb and shlb xchg cmp mov mov push outsl hlt scas addr16 pop ret shlb mov xor aam jl std insb mov out into out adc (bad) jno xchg xor sahf mov outsl mov ds fcmovb jmp std or int dec js (bad) mov ljmp lahf out repnz fwait pop sahf push mov aaa repz pop repnz and xor jb mov clc jnp dec jae xchg mov adc adc jnp int mov test (bad) mull paddw jecxz xlat das outsl inc ss lcall pop and cld fbstp stos push xchg ss cwtl call scas dec jno cmpsb jae xor es stc inc and mov xchg out mov and or lahf push mov out (bad) xchg mov in mov ficomp or lahf and rorl fsub adc mov xchg sahf xor mov mov cmp push xor pop push orps jnp inc inc mov mov inc int3 (bad) sarl in xchg lret lods xchg and xor cmpsl mov xor test push sbb jle je xor in pop dec xchg jmp pop movsb and jb out xor inc xchg scas test push popw mov data16 (bad) lret fild xchg mov ja aad sub into into jnp (bad) sbb jnp stc rcl xor pop jl sub cmp jns adc cmp mov dec pop push push jnp sbb sub mov fdivrs inc jbe es movsb push pusha je push mov ror jge jns fiadd adc js sub mov pop les sbb les xor outsl (bad) and clc aas (bad) aad (bad) xor repz out idivl sarl mov mov adc mov das adc scas pusha daa push dec cmpsb aaa aad lds mov (bad) mov push xor inc inc lods lds adc push lahf (bad) cmpsl inc fcomps xchg stos dec push push mov movb sahf aad lea es mov repz sub mov fcoms jp mov pop addr16 incl insl push pop pop xchg cmp ret scas pusha ret pop insb mov paddd aaa cmc sahf dec out daa (bad) in inc jge or jl lar cmpsb in push jg mov stc add sbb das in sti cmp lods sbb pop jmp mov pop cmp cmp aas rcrl ljmp mov (bad) rol inc loopne mov daa xchg stos aad add addr16 xchg test xchg addb cmpl push adc sbb sar add inc mov sahf jp xchg add fmuls or push scas lds repnz inc xchg out inc add (bad) lahf lcall aaa pop mov fwait addr16 loop mov add ds rcrb cmpsb cmp in hlt xchg std and inc pop sub ja mov aas xchg pop lret cmp outsl jne push inc mov mov in mov ret mov lret imul xor in (bad) fucomi jae (bad) or outsb out (bad) fild jbe cmp mov mov jno movsb mov or js dec cmp in ret mov data16 jo xchg clc insl cmc or add ja in xor sarl mov out push addr16 lds outsb bnd cmp mov cmpl xchg fidivl push sub xchg popa sahf fldl jmp subl (bad) mov imul insl test push in ret pop rcrb clc nop (bad) es mov pop popa lret xchg ret aad xchg cli mov (bad) adc add arpl cwtl or addl cmpl mov js scas les (bad) out inc push cmp scas hlt push dec jae mov xor lcall imul loop adc jmp adc insl xchg push and pusha clc jle testb mov shlb dec inc lahf loop mov clc cmpsb or in sub (bad) aad add ret movsl jg test fcmovnu add mov sahf dec popa mov or call inc mov scas ret loop fmuls dec clc mov or js shl in sbb pop pop mov mov add lds or stos shlb xchg add lcall xor cmp (bad) jmp (bad) aaa (bad) data16 repnz jae,pt es pop cmp lahf js cwtl (bad) out jae in repz push sar sub jp cmpl adc imul cmp mov sub scas or movsl jl mov dec push mov add (bad) in rep add or add hlt jmp sub xchg xor push inc das je ljmp mov xchg fist mov xor or fiaddl bound fildll xchg int3 cmp xor jge sbb test test mov dec push (bad) clc fidivl mov add setbe sbb jge xchg mov das jge sub ret mov pop push or mov outsl loop pop mov sbb xchg icebp mov push add push aas arpl cwtl xchg jl insb push cmp fs mov pop jg pop test mov cmc cmpsl out adc js adcb pop jl sbbl push inc das sahf mov daa addr16 jp (bad) mov cmpsb mov (bad) (bad) outsl pop pop (bad) push cmp or push cmpsb out (bad) pop jg mov mov outsl adc jnp addb mov and adc and push xor adc lahf adc mov jl mov mov out cld aad jae mov (bad) jl mov std (bad) and xchg jns mov inc fimul (bad) jl (bad) cmpsb mov lcall inc insb push std xchg test jl,pt mov or call pushf inc sub xchg sarl push cwtl out ret push hlt icebp mov and out (bad) xor sub add dec add mov in xchg sbb scas cmp push cld mov lcall rol cmp cmp mov inc stos inc xchg sarl mov aas ret pop jnp or popa stos xchg (bad) popl pop out or stos arpl and out add (bad) ret pop (bad) mov mov xchg fs add xchg orl xchg lret out sahf dec pop mov push rol movsl (bad) pop roll ds call aas sahf outsb pop js aaa aaa push (bad) and js inc out dec jge or aas jl in sub jp add adc mov andb jl mov (bad) pop cmp mov dec cli rclb dec dec popf pop ret push ficompl mov cmpl or xchg sar sahf mov les add inc or add cld movsb cli jb xchg imul lock add inc adc arpl out push cmp fstpt mov add aas mov cld push sarb (bad) jmp addl inc daa push mov lods mov clc pop pusha push or clc popf push mov std sti dec mov popl mov out cli jg inc aas jns jg inc icebp jl jg popf mov setl aas jp (bad) ds jbe popa or sbb fistpll hlt and mov std sbb cmp (bad) sti sbb fstpt lcall add or cmp (bad) (bad) clc adc (bad) aaa sbb cmp sbbl shr fdivrl insl popf or imul pop (bad) xchg notb test mov outsl mov (bad) add in xchg xchg imul push inc psllq jl sub lahf call inc jmp sbb lahf cpuid js rcr outsb dec mov dec fidivrl ljmp add pop je sarb pop (bad) add mov push scas dec sti jge jecxz inc and rcrl lds inc and (bad) jo sar xchg nop sub add lahf jb mov xor lds inc clc pop icebp je ss sti xchg jns xchg mov mov and sti in sarb xchg inc outsl shrb repz push add data16 inc push fistpll xor sti add sbb mov inc (bad) rol movsl xor xor and scas jg xchg xchg xor ret iret out mov push ficoml xchg xchg push dec inc lock mov jno aaa xor mov hlt rorl jbe inc pusha out inc jge xor sbb jl std dec lock aas or jecxz xor mov clc cld inc xor in in fdivrs dec ret mov inc mov sbb push (bad) lods jbe out stc jmp rorl je or push (bad) mov jl jecxz fldt push push sti mov bound pushf lods mov cmp mov xchg adc cmpb pop pushl cmc pop or adc test mov push cmp fldenv mov mov push outsb jge xchg cmpsl or out xchg (bad) notl and xchg mov cmp ds xchg add and sub (bad) mov test fsubrs mov (bad) in outsb cmp mov das adc push lods or insl jns das (bad) dec add ds lods int3 loopne sahf jb xchg mov outsb or pusha lods adc sbb dec cmp leave cmp or cmc mov js sub xchg pop loope xor fidivl jp scas jp adc mov cli sub insl fs addr16 cmpsl bound loop jge arpl mov out mov push jmp inc sub lahf clc pop mov loop js,pt dec jg cmpsl jne push iret clc sub xor lds arpl xor mov sbb (bad) clc mov sahf arpl push clc cmpsb adc dec outsb mov sub outsb insl mov addr16 imul lock dec add cmp mov cld xor mov sarb stc call cli xor into or fsubr push ret sub pop cld aaa ret clc jno add shl jg and or mov pop js loope mov mov push mov jl xrelease dec (bad) sub mov ficoml out enter aaa ss test adcl out stc mov pushf repz lret sub sub int push stos inc ret fidiv lcall and mov lea jno mov sub icebp push jle ljmp outsl sbbb fisubr dec (bad) jmp fnstenv sub pop out leave xchg outsl das jb or mov lcall add enter jge cltd xlat mov pop imul shr rcrb sub inc lahf sub aaa mulb scas push mov insb pop push lock decl in mov mov xchg in (bad) std cwtl cmpl out data16 icebp fwait dec mov and add xor into clc fadds mov insl xchg mov fisubr mov cmp adc aad mov inc loope (bad) xchg std insl mov or das cmpsl inc sahf xchg popf scas cmpsl jae out mov inc js add mov jl,pn lds scas adc mov outsb outsb pop fdivr sbb mov nop pop sub jmp outsl (bad) scas mov sub fisttp sub adc and sub mov inc fist ret sbb sti lods test icebp (bad) sahf xchg add mov in xor jl into mov lds jg (bad) (bad) xchg pushf (bad) aad out cmp dec fldcw ss xchg sahf dec aas sahf getsec mov (bad) aad data16 xor lret mov repz sub mov cmc mov sahf xchg (bad) clc stos std (bad) sbb add outsl xlat dec adc mov push xor scas fidivl pop push xchg push adc cwtl pop mov mov mov mov shll inc (bad) cmp pop pop shlb cmpsb adc data16 loop (bad) aas xor fisubr mov ss sbb jl adcl scas sub outsb fnstsw pop xor jbe sub pop loopne lahf out add jg fucomip inc stc dec cmp and mov decl push jg xlat cmpsl shll outsl rcpps (bad) inc push lahf inc jne insl aam ret cmp cmp cmp ret out or gs andb mov cmp and fdivr fistp stc call mov add mov jnp ficomp cs xchg jg inc xor in pop pop pusha es aad jg sahf mov dec mov xchg jno sub adc stc in adc aas sahf test ret mov das movsl jae add jg int in jp mov out push sub add ja ljmp jnp xchg xchg jecxz pop sbb xchg daa sub dec pop jg sahf mov lcall add nop cld cmp bnd stc mov out shrb mov popf jnp xchg bound (bad) mov inc scas pop mov cmp js dec mov mov subps cltd ret mov ret shrb sbb int3 or dec dec dec jnp mov sub das jns pop sarl dec outsl (bad) dec imul jae xor and mov push sbbb lea mov add into ljmp pop lea dec loop mov cltd adc mov push adc (bad) fwait or xchg push js aas fdivrp or sub push mov (bad) insb into lds clc or mov sti inc (bad) adc mov dec mov outsl adc (bad) cmpsb mov inc and inc lds inc ljmp or nop mov dec int test fadd adc andl adc shrb mov pop mov fucomp mov xlat mov cli mov (bad) dec mov pop jmp mov mov adc lret (bad) jo nop jns sub pop cmp adc push int3 pusha jl loop pop pop add insb adc pop sbb aaa mov hlt dec mov popf mov sbb xchg add call inc cmp dec jg xchg xor xor pop jge push jl or jecxz out jg clc fldt stos test hlt push and xchg stos push cmp lea mov movsl xor int pushf cld adc subb lahf mov cs jg (bad) jl pop insb stc pop xchg lock adc mov dec test (bad) lods pop push test (bad) out mov jbe jmp inc ljmp ja shrb std and fcoms int sub nop mov sar push inc push pop icebp and push adc sub xchg mov mov push adc inc scas (bad) sbb repnz out sahf std and add aaa push (bad) ds mov jmp xor sbb int3 (bad) repz nop push call (bad) push arpl daa movsb adc mov lock cmpsb je addl adc cwtl push les lahf aaa sub mov sub inc adc (bad) mov jg out mov jmp int3 aas inc test clc adc int3 sub (bad) push sub lret stc push scas clc add shrb repnz sbb fcoms mov cwtl das inc and push aaa adc in adcl lahf fldcw and test jg adc (bad) cmpsl cmp lahf insb insl dec mov jo (bad) js insl in aas icebp dec dec xorl mov dec or rclb push ljmp jmp lds mov sbb gs loope lods aam popf mov cmpsb mov mov jns adc adc pop fstpl outsl dec or xchg sbb jns sub (bad) outsl ja stos insl xor pushf lahf xchg leave es add out popf jp mov inc mov lds in scas cmp mov mov inc stos sbb (bad) cmp mov dec dec mov stos clc pop sub daa push movsb sti dec aas arpl cmp mov clc out inc xor and pop test cld xor outsl cmpsb cmpl sbb pop xchg clc dec fstl xchg scas gs test sub cld pusha inc lahf add xor push aam pusha push in sbb fadd add xchg hlt lret mov inc or mov in mov push movsl add xchg mov incl mov test int jg ss or or outsl cmpsb sbb movsb push cmp xchg sbbl pop push je movb cmp in pop pop outsl in sarl mov push test clc add arpl jl sysexit push xchg jge pop call xchg (bad) xor lds sbb push fcoml sub (bad) stos mov orl xchg mov dec arpl outsb sbb (bad) and cmpl inc loop movsb xchg mov add adc mov out adc cmp in stc push xchg mov outsl fstps in jecxz mov adc into jl insb int3 incl jb scas cwtl repz lahf stc les sbbl dec and and iret push xchg inc xchg cli xchg adc (bad) out pop cmp mov inc mov pushf xchg push add sti in out pop push decb fsubrs cwtl hlt std int3 push jo in outsb movlhps cltd pop push jg mov push outsb xchg nop adc cli jg mov insl cmp add loope (bad) mov jg add sub sbbl xchg xor in pop fimul aad repz push cmp pop adc aad sbb jns ret mov mov inc jl aaa idivl psubb push cmc jbe scas sub mov stos xchg test ficoml jle mov in pop pop jbe jno push cs push lock cmovae pop aaa (bad) xor fwait pop (bad) in dec fcmovu pop mov mov sub push mov jbe (bad) std (bad) lds jns rol mov jg inc dec sub or ret movb jp push pop or and aas popf xchg mov pusha cmp cmpl into sub sti lea out and pop in lcall (bad) add xchg xor lahf in (bad) (bad) jo dec ficom clc push or and jnp jp dec push or inc inc fdivrs pop in outsl sahf push adc mov mov mov aaa jp or sbb call push (bad) mov add ret lret mov mov jb loop fldcw test mov jnp xlat std push dec scas ss aaa mov icebp pop cmp xchg (bad) fisubr test pop loop imul mov pusha insl add movl daa enter pusha push (bad) in repnz loope (bad) jge jno aas add loope pop das xchg sarb aas pop rolb outsl imul jge push (bad) andb scas and aad add (bad) mov push (bad) pusha cmpsb add cmp in xchg es dec testb adc push xchg pop mov bound (bad) in jg adc adc psubb fcomps pop je push adc addr16 xchg cmpsb cmp adc orl pop (bad) insb pusha or push lods and int shlb sti clc add inc jnp xor aad pushf in repz test dec inc int push movsl enter mov in pop pop aas data16 leave aam mov fisttp arpl xor decl pop std stos and ljmp in and ret ljmp mov lret dec xchg lods aad fisubrl mov iretw daa push arpl and push sbb loop out push xor scas pop fdivrs repz test gs sub add mov xor arpl xor fidiv js sub jg add outsb subl jle rolb and xchg call lcall ficomp into mov xchg stos mov add outsl and mov arpl shrb rcr or cmp mull cs jbe jg push xchg leave mov xor incb mov mov xchg jne (bad) jb mov jns xor incl sub push pop cli mov push pop js mov xchg and pushf xor sub mov xchg scas adc pop (bad) dec arpl int3 cli into fnstenv pop jg repnz mov mov add ljmp push jmp insl push out lods imulb pushl out rcrb mov mov cmp (bad) push es pop jae pushf loop mov scas pop arpl out jmp in (bad) lods clc std jecxz jo pop push scas cmp sti xchg sarb sti imul scas sub test lcall mov or scas mov sbb popa cmpsl sub jg fdivl adc pop add mov xorl dec mov lcall add add or xor push ror sbb mov mov andb mov sub xchg xor or inc xor or xor int3 or sbb pop jl addr16 sbb (bad) adc jp jns cmpsl or stos in cmpsb fwait das mov mov jnp frstor mov or dec into ss dec sub sbbl lea aas add cmc (bad) sbb in jg rcrb xchg sarb hlt pmaddwd pop lret insl aad lock leave push lcall inc aaa repz jecxz push pop fadds popf clc sub add add std adc in scas stos jne loop ds inc push cli xchg jbe ss stc dec imul gs daa inc xchg mov mov pop std push dec lea cmp pop pop (bad) stc sahf jge sub pop sub jbe out adc out subl divps (bad) mov and and pop js (bad) xor pop mov lcall loopne andl sub lods stos sub adc push outsl jbe xor stos mov pushf sti sub mov scas outsb sahf es pop and pop mov mov mov jns sbb pop cmp loop mov stos dec jle (bad) fwait inc pop jbe sbb rcr repnz fsubrl pop mov sub xchg loopne dec inc idivb ret inc es data16 sahf or stos mov jbe enter cld shlb in stos fisttp or mov sarl sub fwait mov scas fnop ljmp xor ror cmp testb cmc inc mov or frstor pop lods sub jg movsb mov pop into movsl cltd jns pop and add sub fsubr push adc mov aaa out stos int3 clc sbb repz pop push (bad) push or loope flds pusha mov movb (bad) pop test fisubrl inc mov ret shll pushl sti int3 lds xor mov push cwtl cmp dec mov adc mov addb jg cmp jp in clc arpl pop divl jmp bound cli aas push dec fbstp mov aad scas pushf sub lds add test adc xor out inc es push ds or push or hlt and cmp (bad) sbb mov pop ds dec push mov pop daa int3 out bnd push pop cmp sub aaa pop mov aas sarb sbb ror fiaddl clc mov in mov mov std rol jo pop int and in aad popa dec (bad) repz in pop (bad) mov lds lret or sub (bad) fcompl or jno mov fs (bad) cmpsl cmp fwait mov xchg jecxz push cmp shrl push mov xchg inc dec ficom imul mov clc jmp adc bound or jb pop cmpsl shrb or ja mov jmp outsb sbb or lret jecxz xchg pop in or push loop jb pop mov and mov and jmp sub pop bt in adc add sub inc jo pop jbe dec or sbb push lahf push leave into insl xchg (bad) cmpsl in lar icebp pop ret stc xchg pop ret xchg lods clc imul mov and and icebp fcoml cwtl cltd and (bad) adc movsl add xchg lret inc rolb xchg jle movsb xchg sub (bad) mov movsb dec cli outsl xchg pop (bad) xchg adcb cld bound mov pop insl push xchg clc xor mov ror cmpsb fldt pop mov repz pop loop jl iret dec pusha cmp je mov aas cld fnstsw aad jns sbb cld inc and scas add insl fstp (bad) cmp mov add dec cli add push and mov (bad) insb decb push ja neg push adc leave cld gs xor fnop jl push xchg (bad) mov xchg cmpsl enter pop das fidiv jnp mov (bad) xchg lods cmc pop clc mov lret mov add sbb daa das xchg hlt test and adc sbb (bad) and or push push lahf xchg roll hlt add addb vdivpd aaa inc sahf sub lahf js int3 add push aam inc mov aam add aas pop outsl jmp sti pop scas repz mov fstpt fmuls lret pop les mov jnp scas xor push cmpsl stos fiadd lahf sub push sarb mov fwait xor sub pop cmpl arpl aaa pop mov das out jnp rcl pop push mov lcall insb scas fwait dec stos into or (bad) fidiv (bad) fcmovnb mov jne loopne in test jge testl repz jb jnp pop pushf and arpl mov jle aad aaa ds aam loopne clc test int3 pop mov inc rcrb or mov aad mov mov pop pop mov pusha lahf stos in call mov mov (bad) mov and cli ficoml iret repnz jg in sti int3 sbb inc insb xor test mov (bad) mov fsubrs mov cli ljmp sbb sbb or sub call xchg mov add jg mov push pop jae aad scas push pusha jo jg cmp iret pop jl addb mov lcall clc (bad) mov enter in lods inc cli push fs (bad) xor dec lret mov loopne idiv int3 jnp cmp or insl sub sub xchg psubb jbe jecxz pop in pusha push push outsl in xor or out es jb imul and sbb or jae sbb sbb stc (bad) lods stos jns faddl lea js sbb add scas inc mov dec jl scas xlat push lahf hlt xor cmpsl cmc outsl leave mov xor jge sahf add sub divb int outsb stos loopne lods push ss ss mov xlat (bad) mulb mov adc pop xor clc sahf mov stos lds (bad) orl inc es mov pop (bad) in hlt mov ret rorl xlat jg cmp sahf aas sarl or sub sbb ds insb push cmp pcmpgtw xchg sti push mov xchg xchg push movsb (bad) data16 jbe call jle (bad) xor cmc scas (bad) clc push movsb xchg rol and xor lret xchg test xchg lahf mov incb and imul popf pop insb adc xor js inc test mov xchg movsl jo xchg mov cmpsl lea aad out xchg scas mov ds scas fwait lret dec mov stos dec jno mov sbb scas sar pop inc (bad) jne das mov cmc mov sarl lods lods dec mov fwait xor outsb (bad) and add ret mov mov stos adc mov aaa sub clc jae jg add movsb (bad) loope mov jb sbbl into dec xchg outsl jle jbe bound das sub mov cmpsb inc dec fnstsw fisub mov dec (bad) insl fild mov into xchg lea subl fadds dec cmp movups pop inc adc mov pop test pop in jecxz movsl int jne and fldln2 fsub cmp mov pop iret sub data16 repnz xchg or data16 dec xor fstl cmp movsb mov int jb cmpsb mov cmc mov sub jmp repz or clc clc xor push cmp lcall push (bad) jo jae sub aam jnp jl outsb (bad) mov cmpsl sbb dec pop scas xor push jns and outsl mov xor ret xchg testl mov mov cmpsl or icebp inc dec pop mov iret xchg sub cltd pop daa push jle inc mov arpl xchg sbb add ljmp dec pusha mov mov repnz stc pusha jmp mov and repz or sub add push xchg inc jmp leave push movsb add andl inc aaa pop add rcrl cmp pop (bad) aaa adc enter push mov mov das sbb inc pop popf mov inc or ljmp mov ficompl jp pop incl or mov lcall ja mov mov test push nop inc pop pushf sub das adc stos mov adc fist gs and mov jo stos enter jmp (bad) or jl outsb movsl fidivr jns sahf popf js and add aas mov jg popf imul fidivl cmp adc jns sarl scas inc mov sub xor add pop mov add mov mov push pop push add jle adc cwtl insb scas lcall xchg (bad) mov mov into and push lds adc je jnp fisubr movsb inc inc sahf addb fwait (bad) ret loop into push inc fwait aas (bad) jns (bad) lods lcall adc add js repnz inc sub push push addb adc js lcall mov sub sub cmc sub popl mov fisubrl mov jb cmp add aaa ret nopl movsl pop jg sbb jle and add ror push pop push shlb lods xor lds mov add xor push adc jecxz aas ja (bad) sub sub arpl rorl mov aam cwtl hlt inc (bad) imul out pop or jmp push js (bad) and mov pop lods pop stos in sbb das aad cmc fdivl mov cmpsl dec scas bound mov rcll and inc mov pop (bad) xorl xchg mov push jns (bad) xchg add add push cltd jecxz sub jno les sbb jmp fiaddl fadds arpl mov (bad) hlt in sahf inc fbstp pop mov (bad) sti (bad) pop arpl xchg leave sub pop mov pop mov cltd add fcomip mov lea imul pop cmpsl arpl mov jnp ss ss sbb daa push xchg js insl xchg popf dec andl fadd iret mov loop dec xor xor mov rclb fs mov (bad) aam scas (bad) hlt xor ret mov cld jns xrelease fcoms (bad) and push hlt imul int3 das push movsb aam iret sbb and fwait sti (bad) xchg hlt or out (bad) in and xchg das adc mov mov (bad) inc mov mov sub into out mov (bad) bound xchg clc test xchg inc cli test test (bad) cmc mov ret mov lods add inc insl cmp idivb mov dec or in aas loop mov inc xchg add mov xchg test (bad) adc aad clc int3 xor shr (bad) jge pop ret fimul push fadds daa sahf pop jl aas addr16 (bad) outsl pop outsl mov mov test push das outsl idivb mov cmpsl scas subb (bad) cmc fidivr and push nopl orl sub outsl pop jp clc sub es dec dec adc sub xchg jle les dec xor scas sbb jae mov inc (bad) pushf clc dec test sub mov insl xor shrb pop cmp orb and das jecxz push scas outsl out mov or push pop pop add fiadd jg jp sub adc jl mov dec dec xchg sub scas mov push cwtl jne xchg add (bad) addr16 daa or sub ficom (bad) les fidivr fstp dec mov mov add mov lock aad sbb aaa mov push push aad xchg out and or lret sub jg push lea mov add fucomip adc or jg outsw inc test mov stc pop and push sbb push (bad) jecxz cwtl outsb data16 (bad) xor jp (bad) sti scas xchg (bad) cld add or mov scas pop imul loopne dec shrb adc pop add xchg sub fstpl xchg add xchg lea xchg push cmpl jecxz cs xchg mov xchg or (bad) mov imul cli rorl int3 mov jb xor mov sub dec psraw cs add xchg (bad) orl test jg xchg les loop and test cmpsl bound dec (bad) es lcall dec xchg jg pop adc fidiv fild mov push sti js inc mov ja push int3 add jp push cmp popa push xor loopne scas mov daa dec inc inc (bad) mov cltd push lods jge pop or lea into xor aad or pop adc inc dec (bad) xor push aas mov xchg jmp mov movsl dec lahf ljmp pop scas imul jb pop pop cmc dec mov or insl test insb xchg in in sarb xchg in outsl iret adc cmp mov and dec movb aad mov adc xchg cmpsl pop adc cmp cli fiadd mov cld add add xor out fnsave add jmp into mov out test xchg out cmc scas leave lahf inc fnop adc jle lcall sahf pop lods mov mov cmc lds push es pop push test pop nop fildll int fcos cli pop inc add xchg mov jp adc aaa push cmp aam pop aad sti fwait mov clc inc insb out fldt sbb outsl movsl dec lcall pusha lret pop pop into push fild push push mov inc jns scas pop frstor mov cmp gs mov push cli mov cmp das std sub cwtl mov pop push push (bad) aad add test into loopne push or (bad) and (bad) jnp mov sbb jnp outsb leave xchg or in sbb sbb mov xchg sub mov pop sbb movb mov cmpsl test push ret cli adc cld add (bad) and popf into sub loopne xor das out mov mov pop loopne sbb pop sub orl add xchg and loop pop cmpl xchg add aad rcrl xchg mov neg inc ja neg jmp outsl scas rorb addl pop or rolb outsl inc fdivp pop inc movl mov stos and popf addl mov (bad) adc xchg pop (bad) scas pop lcall xchg add (bad) je ljmp shl insb xchg outsb jecxz jnp nop es push mov cmp sti mov jb inc xchg mov dec sub (bad) mov or jg (bad) xor adc imul push icebp fimul jl mov mov jge into mov incb hlt jnp xor dec lcall xor mull jecxz in mov inc stc and sub xchg ret into test ss repnz jp xchg push (bad) rorb les cld pop mov test add inc lea jnp fistpll (bad) sbb (bad) jle into sub (bad) aam jg movsl xor mov or out (bad) int3 sbb mov inc mov fdiv fsubr out mov out imul aas dec cmp mov std arpl loopne outsl jge mov lahf in sub mov adc and imul sub (bad) stc les add jne xor in scas ret aaa sub out xchg mov bound cmp nop mov mov jl stc test xchg mov jns mov out mov add cmpsb add pushf lods fcomi pop aas rorl pop aaa fcmovnb push hlt jecxz fcomps sahf xchg xchg cmc jo rcl cli fidivr mov clc xchg mov sbb inc or test out movlps jge mov pop aad pushf jp in push cs movsb scas or inc dec js sbb (bad) lcall jo scas jecxz fnstenv mov (bad) movb in mov sahf loop ficomp test lret cmp addr16 mov push xchg ljmp in sub xor pushf add mov jnp scas jp or or sahf jl lcall jbe mov adc pop ss xchg lret pop jns and mov aad xchg cmp out jp pop das mov push pop cmpsb mov push inc ret movsl pop (bad) mov ficompl push pop cltd popa mov jg push dec xchg push cltd or js sahf add insb int3 clc outsb mov mov movq es ret je sahf subb adc fidivr mov (bad) js das mov lods cli cmpsb rcll pop xchg icebp cld in dec fdivr subl sahf mov sub mov loop dec xor mov pop test add sarb (bad) std or jl jge and fcomi les (bad) rcrb pop add or imul scas ret (bad) pop add (bad) fmull cmpsl rcrb jnp decl dec pop mov (bad) in lods and sahf push outsl out adc dec in mov rcrl adc mov sbb inc cmp pushf sbb jp inc pop lcall stc pop andl notl mov aaa cmpsl sbb (bad) pop adc adc aad fimull insl mov pop jns mov imul ret cwtl loop mov daa neg (bad) (bad) (bad) notb sahf mov (bad) out pmullw (bad) mov lods mov inc mov inc mov mov add xchg arpl mov test ljmp data16 mov sti aad iret dec data16 and jo stc scas sahf pop jg and and cmp lret (bad) mov (bad) out divl fcomps jnp and xchg mov add cmp and popf in aas pop xchg fsubrs add repnz push xor (bad) sub loope scas aaa pop inc shll push adc sti bound cmp mov jb dec xchg mov push aad ret test mov aas (bad) out (bad) mov fwait dec inc fisttpl divl sbb icebp cli sbb sahf mov clc sbb mov lock cmpsb sar scas sub dec xchg cmpsb cmp mov xor dec mov or movsl fisubl mov ljmp mov (bad) mov jns (bad) mov mov fcmovbe sub insl xor cmp inc rcll insl xchg pushf ret jp pminub xor sub cmpsb (bad) mov pop scas sbb mov sub add fcmovb mov inc ds jecxz (bad) inc jge into in and dec cmpsb imul roll dec scas lcall push mov and mov jg jb aas incb cmp bound movb in lock (bad) pop das ficomp jle sbb jo imul outsl fbstp pop addr16 aaa sbb rorl stos fwait sub push mov pop into jl fwait add or lds xor aad das fimull mov xor popf push jg xlat addr16 or addb mov outsb (bad) inc mov and or test ljmp xchg insb sbb sub inc (bad) jl jp scas jo mov xor (bad) fstpt outsl dec pushf shlb std (bad) or fs push fadds inc xor cmp push mov and add sbb inc pusha mov (bad) sahf jl lcall mov jns pop xchg in into lods fisubrl and sub imul sub lahf das jmp or icebp lahf mov pop lahf aad add stos adc pushf fcoml mov shrl jecxz jne in sti clc out or int3 jmp cltd rorb subb pusha cli mov pop pop sub aas push fbstp data16 pop mov mov lea mov shll xlat clc inc out (bad) jb test iret insl gs fwait fs (bad) jp movsl scas pusha adc pop (bad) gs mov inc es js inc mov cmp outsl inc lods cmp sbb cmp mov jp sub pop push addr16 push out scas lods ljmp jp xor or daa or movsb mov xchg add fistl das fstps out stc xchg pushf test lahf sub out sub adc imul or and mov mov fbstp fwait push loop fbld xchg addr16 add (bad) add aam ja pop mov out iret ss pop or mov or sub cmp rcrb das mov sarl mov rcrb or hlt add (bad) cmp xor inc xor inc and pop jle add xor outsb ret popf cs push sub inc xchg sbb (bad) daa push pop cmp mov std sti in or sub mov mov xor adc out int mov xchg mov shlb xor notl mov xor xchg (bad) mov (bad) push dec out out mov or leave jg inc clc cmpsb cmp cli add xlat jnp call or imul fwait or std in push (bad) clc scas fisttpll xchg fistl jge push pop cmp (bad) nop mov stos jae add pop jns vpaddsb mov adc xchg lds jbe cmp (bad) icebp xor inc pop and lods add fcmovnb popf inc std lret adc mov les adc cmpsl (bad) mov outsl pop lea xor sbb mov ret push cmp mov mov mov fucom in aaa sbb pop das shlb pop shrl scas in sarb sub push repnz jo mov sbb jmp outsb std push mov test (bad) loope sbb cld lds fdivs ljmp idiv cli xor mov stos in stos or out pop cmovno mov cmpsb lds rcrb sarl out xchg cmpsb int add mov (bad) inc fidiv pop aam std gs (bad) sub sub mov lds xchg (bad) dec dec ret sbb in cwtl mov pop jge add (bad) push jne cmp dec add in stos cmp xor movsb out pop mov aas stos in sub lahf jg aas insl mov xchg xchg aas in arpl mov sbb jo les push sbb scas popa pop inc pushf (bad) push int3 sub jg and jo push lret (bad) aaa mov cld sub jns (bad) je mov aas iret or or bound decb (bad) jle cmp push stc add in adc cmp scas (bad) mov decl repnz pop mov inc jg xchg xchg test leave jnp pop aas lret dec xchg fsubl cmp loopne pop push inc ret daa xor mov or mov das aas xchg sub das mov cmp and mov jae mov js mov aam aas and repnz das inc push mov cmp ret je hlt cwtl lods out ret pop stc ret (bad) je pop lock std pop cmp gs incb lods and pushf cmp jnp dec cmp cld mov in das push cli lcall mov xchg adc addr16 stc fcoml hlt fdiv sub pop stc addl add (bad) lret jl ret (bad) xchg and xor mov mov add daa pop fistp fbstp pop cld aad mov jbe mov sarb mov mov inc xorl mov mov xchg push sahf pop pop (bad) jle xlat in sysexit and or cmpl cmp dec sbb lods xchg mov cmp add sub xchg int3 mov lahf scas sbb cmp xchg fadd decb push lret add cs rorb cld and xchg xchg mov mov (bad) pushf inc (bad) xchg mov cwtl icebp add loop fs fstpt sub jg jns or (bad) fisttpl add aad jns mov xchg pop js sub loopne inc repnz pop pop mov add mov push sub jnp inc inc mov xor rcrl lcall int3 (bad) mov add dec std sbb aaa cmpsb aam and pop lods dec out sarb pop iret les imul pop cmp test mov xchg out movsb cmc (bad) bound repnz bound xchg cmpsb mov lea cmpsb std pop addl inc in repnz lahf lret dec push pop enter mov iret xor (bad) inc in jae fdivrl daa xor lods or incb (bad) mov or stc mov and or mov fisub pop mov mov push add add pop mov popf (bad) jecxz mov pop xchg lret mov rorl xlat loopne sbb jg (bad) es ljmp roll (bad) hlt mov sbb daa and jbe vmovq into cld ljmp pushf mov inc lods pop cmp mov ja inc add jbe aaa sbb mov rolb (bad) mov mov sub (bad) xchg daa jg and cmpsb mov imul xchg mov xchg inc sub mov outsl sar mov daa or xorb adcb mov adc xor inc pop pop sti (bad) cmc int3 mov jmp js xchg xchg mov cmp (bad) and mov mov mov mov test loopne ret jmp add loope lods xchg mov scas mov (bad) insl (bad) fs cltd (bad) roll push push daa stos inc sub scas cld lahf daa test jge pop sbb pop sarb mov ret ror jg pop lret adc jg pop movsb aam stos sahf sahf aas lea repz sbb les cli jbe ret cmp push add popa dec repnz pushl aad xchg xchg pop daa (bad) test mov add leave xchg mov lds sbb ja bound jg sahf movsb out xor mov in inc cli aam pop ret or ret xchg cmp and cli add pushf test pop enter xchg push lret inc ret dec incb mov push subb mov push mov sbb jge dec ret dec jg inc xchg lcall push pop outsl sbb stos jns (bad) clc cmpsl nop test out mov mov xchg adc jnp aam ja jecxz fs push lods mov leave mov cli fistpll (bad) das xchg sbb jp mov or push lcall cli jno lock add mov add pop fcmovb sti pushf fdivrl daa pop jo ljmp movsl (bad) push add or insb xchg stos add mov into pop adc mov scas fistpll cld xor mov aas xchg sarb jp mov repz sbb sub xchg jecxz xchg in mov pop (bad) pop shrl sbb aas jl mov xchg into cld jg flds adc aas xchg push sub scas jno cmp fistl xchg jns add es cs mov cmp jecxz xlat jne inc mov xchg mov xchg xchg dec ja out add je aas std mov (bad) xor push out mov mov inc movsl dec inc mov cld pop aam pop pushf adc or xchg cld add add inc mov cld loop mov mov aaa xchg mov pop jp das push inc mov pusha scas jge and jae pop add (bad) stos jo in push xchg pop adc rolb ljmp lea mov inc (bad) in icebp pushl popf ja push mov clc add outsl into cmp cmp daa mov sub push mov or sub pop jge fwait cmp xchg icebp inc ret sub iret js mov mov (bad) ljmp gs clc push popf jb (bad) das mov jge repz gs jmp pop outsl lods (bad) jge orb popf mov insb cmp mov sub mov jb cmc push sub push adc lods pop cmp leave popf icebp push add lock pop cld fnstsw dec pop nop stos mov add (bad) jne and movsb outsb lss mulb pop aaa out pop (bad) inc mov mov pop cmp mov shlb dec cmp mov icebp ret adc test adc fwait repnz cmp (bad) out or dec xor sub out xor pop xchg lret push pop pop xor (bad) sbb out cli dec aas adc pop ror xor dec bound push mov in push mov pop outsl aad pop xchg shrl enter jp out imul stos pop dec sbb mov cs das cmpsb inc and mov jmp mov rcrl and sti insl and cmpsl xchg push call push xchg inc and push inc xor fildl addl mov rclb mov pop (bad) push xchg push clc adc pop and cld outsb push pop frstor mov push inc out movsl xchg dec jns clc jle inc add gs stc out adcb inc (bad) loop mov pop sbb insb fcmovnb mov fwait jno inc hlt (bad) jo mov sbb pop xor test loop das rorb xor in jmp insl orl std std pop xor and jb cli mov sbb addl sub scas mov xchg push out cvttps2pi xchg stc clc push sub fldt xchg int3 scas xchg fs rorl sub ret xor lret jmp lods bound inc adc test int push or repz jle mov in inc sti mov or xchg inc jo subl mov jmp arpl fadds or insb cltd fisttpll popf xor in (bad) push push sub or ja sbb mov es mov sbb mov lods test nop int3 repnz push in shrb lea pop adc (bad) xchg stos cmp mov push jp xlat mov add (bad) repnz pop add jecxz int3 movsl aaa out ret fbld jmp pusha loopne nop inc jb lds test jmp popl incb mov in cld or (bad) ja sub aam popa inc lea test mov add popf xchg call and lret rolb mov dec dec cmp jmp daa sarl jmp pop ja or jl pop xor in test push ljmp xchg xchg ds mov mov add cld cmc aas fsubp jecxz mov jecxz test jg inc xchg push and pop sbb pop movsbw lea mov movb pushf pusha lea ja push pusha lea jb pusha test cmpb pusha jmp cmp jb or (bad) add enter cli fadd (bad) jp cli aam movsb mov shrl pop pop pop out mov xlat (bad) mov add pop aas and jle dec or fcoms or inc (bad) aas mov dec into clc xchg orl sub jo xlat stos or mov push add xchg push movsb and call mov cmp dec cmp mov pop add dec mov repnz leave mov xchg pop or fcmovnbe xlat js fistpll jae xor or (bad) mov aaa or jno cmp mov loopne movsl mov mov fs dec sti rclb outsb hlt inc jb popa sbb out pop and sahf jl add push sub out mov inc rolb scas xchg mov das mov std push adc jle jb imul aad sub loop xor sahf ljmp (bad) ret push repz movsl aad outsl repnz or les hlt mov mov std js mov pinsrw jge mov shrb in outsb push imul push xor adc add cmpsb mov jnp mov lods cmp and (bad) cmc mov jg jb (bad) xchg insb imul xlat mov pop aas and lret hlt xchg xor cmp rcr stos push ja fiaddl je data16 sti xlat mov cmp pop xor xchg push aas sub js dec gs aam sbb or push aaa int addr16 scas data16 xchg mov orl and mov (bad) mov pop push notb sbb mov insl (bad) vxorpd push sbb cmp mov in pop ficom shlb dec repnz add lea jne sets add btr not mov cmp cmp jmp push cwtl bswap mov pushf pushf pusha push lea jmp (bad) xchg adc or insl xor addl loope scas pop xor (bad) (bad) cmc xor int lahf add add (bad) rolb mov rolb pusha cmp ror scas xchg ja sbb js,pn nop xchg movsb xchg inc sbb (bad) mov cmpsl ja pop add ss cmp xor lahf arpl jl xor xor inc in mov cs fwait mov cmp and mov cmp jo sub cmp inc shll or rorl ljmp push aam push jl dec dec repz and add jbe push dec stos addr16 or mov stos xor xor movb out lret inc inc sbb mov scas clc clc mov or sub scas aad sub fidivr aam sub mov mov mov gs xchg dec aas ret mov sub scas les pop rclb popf pop jmp int in fs jmp jae clc xchg inc jg ljmp mov ss cmc aad popf cmp jnp (bad) lcall add stos popa sarb iret xchg jae mov pushf push fnsave fisubr xchg mov pop cwtl scas andnps mov daa out test test xlat (bad) pop add dec in outsl xor (bad) mov test mov pop jb,pt movsb push (bad) movsl gs cmp mov mov mov pop out scas sbbl push imul sub dec (bad) add inc es in pop aaa outsb stos jg inc push jp imul jbe dec mov (bad) (bad) inc lds aaa sbb jge cmp jl or add and dec xchg mov cmpb orl imul je ds into loopne sub mov jmp lock fcos lock sub lods iret lds div xor mov scas cmp and je jmp arpl int xchg jae ret xchg pusha dec or bound and xrelease std add mov shr mov cmp ljmp sub mov jbe pop jecxz sbb xchg ja out xor movsb les jmp pop add pusha push xchg les cmp mov sbb xchg outsl lret aaa js loopne dec pop jne rorb (bad) and mov adc (bad) push mov mov (bad) (bad) adc lahf inc push outsl mov push adc push fldt (bad) cmc outsl add inc and xchg mov pusha mov pushl pushl pushl ret inc sbb sarl sbb (bad) out xchg lahf ja js lock rcrl mov pop xor dec stos or mov aaa mov movsl movsb cli xchg mov or cmp dec pextrw jne sar and cwtl das mov repz mov lods fld jmp aas ljmp rcr pop cmp xchg inc cmp in mov leave sbb test std mov dec sti lds pop dec call mov ret scas cmp mov pop mov lret scas shrb lods in jb jno sbb pushf inc inc adc ret popf gs clc test inc adc lret or xchg and pop rcll lcall dec adc pop add lods cmp mov mov orl jp jbe pop gs movsb sub cmpsl cmp js jae and out mov dec adc repnz cwtl out stc mov mov or jg cmp (bad) pop (bad) push mov lea stos outsb sub pop mov mov jle pop xchg in sbb cmpsl xchg adc out ret ljmp mov sub insl sbb popf mov not pushf inc xor xor neg call shlb std cmp add lret rol popl mov outsb dec cmp lds sysenter adc inc push and jb jns add (bad) stc xchg mov fdivrs xlat jbe jbe xorl mov dec or xchg in and xchg (bad) pop cmp sub dec or dec (bad) xor mov jne daa mov repz stos pop jae les xor xchg dec or (bad) shrl loope jp and mov je in aas adc imul adc mov lea pushf and hlt cmp gs mov and iret jge call pop adc movsl xchg jns repz outsl fsts cltd xchg jmp outsb repz cmpl stc ret adc mov xor xor cmp std lds mov push nop mov mov lahf fcoml (bad) test or jmp push sar cmpsl mov rcrl mov stc pushl pop xchg mov pushf shrl cmp enter jns ds jno hlt icebp aas jb jno push add mov cs aas cmp out stos imul inc mov xchg shr rol mov adc shr shl rcl mov pushf cmp mov or rol movsbw not mov cmc pushf stc movl sub pushf lea je push pushl rep pushf movzbl mov pushf push pushf mov lea jmp rcrb dec or lds mov mov adc lret fwait ja call jb outsl xchg mov das sbbl lods sub imul and jo xor xchg rcrl and xor imul sub out adc addr16 outsb sub cli mov int scas out es test dec lret mov and test lret aaa and pop sbb scas lock jecxz ljmp cwtl jne pop mov pop dec or rcr fwait mov into fcomps rcr pop and mov stos (bad) cltd test add jb push sub faddl mov xchg scas inc mov inc lret ficoml popf mov aas aas or repnz mov aas nop add scas jb or mov bound pop cmp xor sbb or js (bad) call pushf je je mov dec adc test xor movb (bad) sarb (bad) lock jp jb xor mulb test popa dec aas jae data16 mov add add push mov shlb pop sub adc clc pop add pop clc jp cmp adc mov pop mov lret shrl ret xchg pop bound in leave stos insl xor jo or pushf mov dec jge daa fild jb jmp mov jns mov or push (bad) jns xor pushf push mov mov mov xchg lcall js jle pusha xor lods push das jmp xor rclb inc js mov (bad) rcrl push out mov xor stc xchg mov pop jae scas fsts ss fiaddl inc xchg mov sub adc sti mov sub jb cs addr16 dec int pushf xchg dec dec adc mov jns in mov xchg imul mov lret xchg (bad) outsl xor (bad) dec push int3 scas shrb repz pop sub inc int sub movsl inc and dec pop sub sarb rcrl (bad) pop xor lahf stos adc arpl mov jg dec loope imul fdivl movsl push mov sbb sub cmp scas add ret mov ss and daa push enter add adc push cmc pop out mov cli sahf aaa pop clc push mov push in call (bad) popf sub aaa jb push jecxz jnp sbb or mov and mov mov addr16 in xchg mov std push ljmp int sarl divl imul (bad) push jnp loop daa popa scas and stos or idivl pop pop push mov (bad) dec and push jno stos outsb mov scas push scas add jmp pusha call jmp popf jae add cmp mov (bad) (bad) scas cs and mov xor sbb int3 xor (bad) pxor mov daa adc leave xchg jae pop das and cmc ss adc mov sub inc out mov xchg insl aad xor ret mov add xchg pop or aam mov aaa mov sti push or imul sub adc adc and ret lea sbb pop or out rcrb insl jp cltd das adc stc inc mov nop int es or int add out and (bad) mov mov xor int and fbld push mov cld mov add mov daa pop add movl mov pusha pusha movb lea jmp add pushf movw lea jmp xchg cmp lcall sub mov jb icebp rolb adc addr16 jl xchg sub jns inc pop mov movsl mov in sbb sub loop movsl rol mov loope fcomps xchg xchg xchg rcrb push mov dec push jb je or jns data16 jae dec jle cmp out mov js ffree scas sarb xor mov es xchg cli (bad) cltd bsf xor cmp mov pushf and mov pushl pushl jmp pusha pushl mov push jmp lea ja clc imul call add inc gs outsl fs gs popa outsb fs gs add cwtl sbb xor int rclb stos ja sbb cmp lods (bad) fbld mov xchg dec das cmp test dec dec imul jecxz ss cmp clc mov jmp gs cmpl iret stos (bad) icebp jnp enter loopne das mov call adc mov mov in jnp scas out cmp mov ret or push test add adc out scas scas cs sbb in lock xchg int (bad) outsl decb out add mov xchg add or add push lea call and or mov cli enter xor movsb jle sub ret into xchg cltd lcall int3 push cli jns push enter sti subl and cmp xor jb out insl pop and sub dec jo dec out pop jbe clc and fsts mov push test repnz subl fdivrp popa dec aam push sub push pop outsl sub mov sbbl repz jp and int3 pop jae push mov dec mov (bad) sti repz fs cwtl cli ficompl stos cwtl mov pop dec sbb cmc ror push add push lea call bt cmp call and int xor bsr std (bad) mov push xor and lret mov cmp jg jne and push cmpsl jle mov popf mov inc add fstpl fidivrl outsl cmp rol sbb and fmul or stos shrb adc imul jnp pop adc cmp dec rcll push push xor mov fistp dec decb test jbe pushf enter std mov inc dec or push (bad) aas push dec ret insb lcall pop into scas fstpl mov in or popa push pusha in adc mov xor movsb xchg pop inc add cld mov imul xchg pop dec icebp cmpsl sti pop sub je adc cs xchg ror dec mov xchg cmc loopne jl jo aaa in mov push cwtl daa dec gs std fdivr pop jne imul lock jmpw xchg data16 xchg mov pop leave ret cmpsb stos std js insb sti or loope pop sbb pusha xchg in push call cwtl mov jns stos int3 mov cmp inc push push ficompl loop sub stos push push imul add pusha cmc add test clc call mov bswap setle cwtl lea jmp inc cli mov aaa test adc fbld cmp sbbb (bad) push xchg mov jmp push fistl mov shr push lea push xor xchg add fwait mov push add js divl mov jno dec leave sbb lock mov jl mov push ret ja mov pop cmp fcoms bound xchg les pop test dec cmc (bad) mov pop or lret sbbb sub jge scas fimull rcll loope lcall dec or push jo dec pop fucomip pop mov push inc gs call pusha push call mov jbe xor call js inc add std ret pop push or cmpsb jle or and jb out hlt in stos idiv or mov aaa sahf pop and fimul cwtl and fistpll push (bad) jne push cmp xor loope sbb mov shld add push fimul or jmp push adc adc adc xchg xor je and adc push scas mov jo insl xchg test and add inc xor lods xlat fild inc or add lock stc add pushf push mov pushf pushf push lea jmp pushf pusha lea je shld sub mov (bad) repnz add add shr call pushf movl lea call call call jmp rorl lret ss mov int inc push sub push mov jns loop add jmp fs lret xor js push sti arpl int3 (bad) jecxz imul push inc or cmp fucomip loope lcall fidiv movsb xchg and pusha ss ficomp mov test push cmp jmp loope outsb mov (bad) add ja cmpsb dec fwait repnz and int3 loopne test inc aaa jae and daa rcl lea jl pusha pushf lea je push sub clc cmp pusha pusha pushf call xchg js jle jb xlat xchg jnp adc pop mov mov jbe in jns sub xlat mov out pop pop pop outsl jno jns and pop bound mov sub xor sahf cli mov sub xchg xor arpl mov push rorl inc adc test lea mov insb pop mov xlat mov sub adc les popf pop loop add arpl out mov adc xchg pusha in data16 mov jp das int3 popfw movsl cwtl adc in fisubl ret xchg xor cmpsb bound popa inc insb out push aas fwait (bad) sub fwait nop inc insl stc int mov (bad) int3 jb clc into mov jecxz mov std or mov roll xchg lret gs iret mov push and push and ret xchg mov daa out inc ljmp or into push add cmp xchg jbe out push fdivrl fs das aam addr16 cmpsb jns repnz cmpl into std xor das sub add inc sbb ds jae or sahf adc popf (bad) dec cmpsl test mov mov (bad) nop xor arpl jp movsl sub push call mov pushl popl push pushf pushl ret cmp clc bt repnz push pushl pusha call inc sbb inc add gs out fucom test gs or inc adc mov adc repnz sahf mov dec int3 nop mov jle in xchg movsl inc or lcall pop in (bad) jmp lock sub sub push mov clc nop imul push sbb or xchg mov cmp fcomi sbb les data16 out imulb std fcoms pop scas xor ret cltd xor inc test cmp lahf mov jle stc or inc adcl in ret jge pop aas popf out dec pop ret lock ja mov jl nop rcrb sub xor cmp ret jg add adc pop sub out sbbb mov dec pop out sub out rcrb adc lods mov leave adc mov insb repnz insl ss xor jno dec mov out xor imul push xchg cmp inc pop inc push adc rolb sub adc jno pop jle mov sbb cmpl mov push sub inc (bad) lock lahf sub and mov fnstcw xchg lock cmp jp lea cmpsb js lock jnp loopne loope testb pusha or mov inc into lahf and stos (bad) popa cmpsb scas aas pushf out mov out push and mov fidivrl pop xchg cld into cmp adc push xchg enter push jne (bad) inc or js repnz aaa mov inc mov mov sahf sub loope nop pop out mov sbb loopne mov add loope and pushf inc cmp lods test dec push mov jp pop (bad) mov sbb das adc (bad) xor pop cmp ljmp subl les pop mov jne movsb adc cmc lahf cbtw xchg lods push movsb aam jnp das push out sbb sbb data16 inc sbb ja (bad) std lea xchg lret pop repz (bad) adc inc jecxz push stos dec add sarb xchg pop aaa cltd in loope and cwtl stos pop test push and jmp mov arpl lock mov mov mov ror dec pushf xchg xchg movzwl lea js not mov lea lea jae lea movzbl mov mov pushf call add inc gs outsl fs gs imul add insb sub (bad) jmp mov rcll jl push or rcl stos (bad) dec dec add rol xchg adcl or out push mov xor scas xchg adc fiaddl fstp sub sub stos addb pusha sbb push add xchg lret sub or or dec jo or xor fisub mov push das movsl iret mov test cmpsb and pop lea movsl rcr sub mov and jbe daa dec dec fistl aad sbb icebp cs scas inc push das leave mov cltd mov and dec mov scas and add popf aaa clc mov mov lret pushf mov push sub add imul test inc and stos ds inc lock int3 imul loopne xchg or lret adc sti xchg and nop outsb cli dec je or xor fs dec xor cli cmpsl pop push mov flds jo push push and cltd jp loop xchg pop xor out jecxz (bad) hlt int jg pop adc xor cs jo daa jb arpl jae cwtl mov inc add (bad) xchg jb neg mov or movsl fisubr sbb lcall rclb clc and out add negb popa imul (bad) je push jns xchg mov pop test rcrl popf lds repz mov int push arpl out and mov test adc sbb aad jne pushf lods das test pushf jns jp repnz lods pushf lea xor and dec sbb and adc repnz adc cmp cwtl outsb inc adc int subl stos fsubrl (bad) xchg rol sti aaa push mov xchg cmpsl mov (bad) mov pushfw outsl fwait or out sbb cmp (bad) mov add je ret (bad) imul imul std add push das and andl jno sarl sub xchg jl or pop loop fs cmp xor jmp xor cmp add subw mov add jo fnstenv fild popa or fs fidivr imulb jg or in movsb pop imul cmpsl les push je inc or lret in or ret shrl mov mov xor rol inc ds (bad) mov les xor addr16 pop xor fcomps (bad) mov pop push cmp inc and mov fldl out cmp inc mov dec and add jp fidivr or mov scas and sbb test adc (bad) stc adc mov dec std inc mov test (bad) repz leave (bad) mov repnz adc aam mov and mov sbb and outsl int xor xrelease cld scas fnstsw arpl cld xor in lea lea lea mov pop pusha pusha push push pushl ret lea ja inc jmp cmp bt cmp jmp pusha movl pushl movb push pushf movl pushf mov mov pushl lea jmp test call call cmp stc test repnz call pop movsl mov and int inc cwtl repnz push sbb test jae cmp movsl insl dec xor mov adc push sub adcl (bad) stc fwait lret jmp in mov call js mov popa testb shl sub mov aaa cmpsb pop adc cmpsl cmp lahf rcrl xchg sbb mov jb (bad) stc ret imul inc mov push sub cltd cltd dec dec jge (bad) pop mov das xchg jne adc adc mov cmp and sub je add daa jge add setb movzbw pushf lea call lret pop and std mov in mov stos jg sbb mov test popa arpl or rep ja cli mov inc sbb mov (bad) daa dec lock test fbld out and mov and mov pop outsl jns adc jmp jo dec out sbb movsb dec push push xor cwtl push js,pt insl sbb and aam inc inc or dec jl adc mov xor test fadds lcall aaa dec outsb cli lds cmp aad push lahf xchg mov daa jge sbb fstl test sub add je gs imul mov movsbw mov movsbw mov pushl bswap mov call bt neg cmc sub sub jne not push cmc cmp cmp movb push bswap lea bswap not setb bswap mov pushf pusha mov lea ja call inc aad or jb negl add fnstenv cli shr xchg test jb xchg or mov rolb sub sbb fadd jl sbb jge fidivrl sbb dec add pop sub mov fidiv jo inc or mov stos aam je movsl push push and es sub adc sub xchg lret mov push dec jecxz and jl and mov sbb mov mov xchg jge sbb jmp sub sub add dec dec lods sbb mov clc dec repz movl cmp cmp leave in mov lahf mov add sub jnp js popf mov jecxz jb jb jmp jo imul stos jb test (bad) pop sti in daa xor jg (bad) xor inc pop adc out js addr16 xlat mov lea cmp stos sbbl mov jae mov adc aad push push mov fidivrl cltd popa sbb mov repnz sbb aas (bad) loop dec rolb in ret test inc jae pop pop lret fdivrs aam outsl jecxz fsubrs icebp mov in jae sub jne sub sub in dec mov jecxz adc (bad) pop add dec stos jmp add int3 nop test mov mov cmp ret jne iret popa call jae and in mov sub call push jle clc stos jmp or jg xor jp bound inc pop roll inc fnstsw (bad) adc mov xchg pop hlt push xor faddp lahf cmpsl int3 into lea push shr pop push ljmp mov and lcall jge adc mov mov call mov (bad) test or inc and lcall lods in ds inc sbb inc adc fstl mov addr16 fistpl mov xchg mov xor inc stos bound daa and xchg mov sbb xchg add (bad) gs dec lds int3 mov pusha or pop or out pop in adc nop daa jae movsb mov test lock test cwtl arpl stos arpl sub test or push push call sbb sbb jb jbe jmp in stos mov and jne stos adc mov sbb out test push jno std (bad) jg or (bad) jae jecxz insb sarl add mov lock adc ja mov and xchg dec xor stos jecxz arpl insl iret mov cltd mov add jecxz or jae adc fidivl sbb (bad) aad mov mov push add pusha cld xor add (bad) push jp sub pop xor sbb mov int3 (bad) pop dec jb push sbbb jo and mov jmp mov lea lea pop mov setp jmp stc iret push nopl inc or dec loop jns stc fcoms cmpsl popa sub les sub add fiaddl shrl push imul mov nop sbbb pop inc mov xchg jns daa (bad) ds xchg lahf sbb xchg enter or mov xorl outsb and ret jb ficom ljmp sbbb aaa push divb mov xchg push ret mov inc jnp insb sahf insl xchg (bad) mov jnp enter adc (bad) inc pop sub negb outsl (bad) divl mov bt pushl popl stc call lea call jo push pushf pusha lea jne mov movzbw push mov push lea jmp pop mov int inc movlhps (bad) mov ds clc mov cltd js cld les in stos sbbb shl mov cmp inc jg (bad) je cmpsb int3 cwtl nop sti pop add mov adc pusha (bad) das movsb nop add mov mov test in xchg (bad) icebp enter icebp mov adc dec sbb adc mov lahf pop mov mov popf outsl shll jnp shrl dec adc stos std push fs or inc mov js mov negb xor out push das (bad) stos jp sub mov adc sbb inc pop ds jne cmpsb fisubrl jge fs dec and (bad) sahf add int xor out test jae adc rorl adc cmp aad cli cld push in call jle shrl std (bad) notl fisttpl movb call out cmc add push lret pop lcall sbb xchg movsb ds (bad) imulb out movsb pusha push xchg mov jnp fs das pop xchg adc sub sbb sbb push inc jmp sbb dec mov outsl mov mov sub inc pop push test stos leave faddl (bad) jns rclb lahf pushf dec cld sbb repz jge movsl call mov xchg nop cmp mov cmp sti and sbb fidivl inc in cmpsb ss (bad) and mov fwait je and mov std bound jno xor rol mov lret push cmp or add iret pop sbb fcos lock xor jmp sbb int pusha xor cmpsb jae xor in test repz mov dec dec jecxz xchg pop sub add (bad) lea imul dec lea jl sbb in jg mov lahf test dec (bad) lods add inc mov hlt les jbe lea xchg pop ljmp jle loop jg stos add add sarl arpl sub aas mov jnp dec add inc je fwait push daa inc roll xor mov (bad) leave nop dec ds daa fbstp comiss mov (bad) stos hlt hlt and ljmp lcall sub push sbb add mov adc shrl sbbl mov mov psubsb pop stos mov std sbb shlb cmp sarl rep stc mov (bad) repnz dec pop xchg mov and test pop lock mov dec xchg je roll loopne fwait cmp ds int cmc lods int3 pop push pusha inc loop push test xchg ljmp mov sbb push lock fiaddl pushf dec inc ficom mov adc lret mov faddp lahf jbe lea in sbb dec aas mov iret cmp inc mov push and pop lds stos pop xor lcall (bad) mov pop clc fwait aad (bad) pop imul mov icebp insl jo jl mov imul aam daa mov std (bad) xor sbb sub cltd popa cmp movsb pusha and mov lcall dec dec mov sbb dec pop pop mov push bound push add pushf popa xor cld ds pusha call mov into (bad) aaa lock pop in mov bound mov (bad) jbe lock loopne pop dec (bad) aam xchg mov data16 sbb (bad) test inc mov outsb inc outsb adc mov je std mov pop mov orl pop dec ss jecxz mov lahf or in fs mov (bad) jmp jb in test mov add lcall loop (bad) lea sbb xorl fwait mov inc lret add sarb in push sbb dec pusha mov addb mov mov in or dec xlat sub les sub fcompl aam cmpxchg mov rep or mov leave mov jg mov pop outsl test ss sub data16 mov adc test das lcall fs add sbb aam lahf xchg imul cld scas pop add mov fildll test sbb test and and mov mov popa f2xm1 xor insb and push adc xlat push adc jbe sbb out outsb dec in sbb dec adc and jb loope mov icebp mov sahf movsb aaa push adc aas cmpsl inc inc sbb in or leave xchg mov jae scas xor outsl push jp stos mov nop xchg dec adc int jge rcll imul (bad) loopne jb and sti lods mov lods and pop or push jbe jo mov mov add adc movsb fdivrl adc lea sti xchg cmp int3 aaa ja es hlt pop or xchg xor pop push out in loopne sbb cmp pop movsl fmul rol rolb or in push cs adcl mov rorl into jmp rorl jg and adc icebp jle lods stos dec xchg lods out ffreep in fcompl (bad) iret xchg cmpsb add dec cwtl int3 subb mov ds cmpsl dec outsb xor pushf seto pushl popl bswap call inc jmp subb (bad) push jb jg mulb push pop mov scas jo std mov push push repnz mov out ljmp fisub adcb pushf call cmp dec cmp popl lret subl test or addr16 pusha mov (bad) ss or sub repz outsb fisubr jne jae inc sub xchg mov mov daa (bad) scas jne xchg (bad) dec pop add push aam pop mov mov rorb adc test (bad) dec mov xchg gs inc in outsl (bad) rolb int3 add arpl add icebp pushf mov dec adc dec lret arpl std sub sbb bound jmp shr adc inc stos push and fsts scas dec cmp bound push rorl divb mov lds clc mov sub test push and mov je rol decb movsb iret pushf out leave inc mov cmp aam and iret jnp pushf popa imul andl xchg pushf lret xor and aas jmp pop or test sbb enter shrb dec push mov shl sbb sub ds pop hlt mov je mov inc fisttpl adc xchg adc int pop and sub xchg jne push sbb imul mov dec push mov mov xchg addr16 adc lods xchg push cld mov ja sarb pop pushf lcall dec or (bad) mov cmp mov addl out insl pop out sub mov pop xor call cmp jae inc fildl mov clc cwtl mov add cwtl inc in xor mov push ficom loopne inc shr xchg pop jle dec pop pop xor mov cmp cs lret adc ja les in push adcb daa mov mov cld addr16 pmulhw mov dec cld test repz xor call and std shrb push lret lea in jns stc mov adc inc sbbl add lock mov aam mov adc add mov mov mov fsubs sub mov pusha and lahf jns push mov inc adc test out scas pusha sbb push adc mov lret imul pop add ja cmp faddl call inc inc ja cmp xor xor idiv and fwait fs cmpsl fdivrp jle mov lock in cmpsl cmp int rorl add lcall or clc mov rol dec inc lock or int gs in add clc mov cmp aad xorl movntq (bad) xor cli rorb dec and dec jmp insl pop jmp and into or push dec rcll data16 push stos and add mov (bad) cld fwait inc adc jb push adc xchg pop ret mov into push cltd (bad) lcall mov int3 inc adc fmull xchg movsl sti decl jmp clc ror add je clc pusha add push pushl mov lea call stc call movl jmp neg clc jmp mov push movzbw mov pusha pusha mov movb lea jmp lea je push cmp or push lea je test sar shr xor not movsbl mov jmp mov jb mov fnstsw sbb pop xor (bad) nop je push icebp scas lea fimul or test push and (bad) mov outsl mov outsl xchg mov mov int3 addr16 es mov fmul rolb scas xor mov cmp mov inc mov adc inc out cmpsl adc iret push or pop inc sub lret inc dec dec adc inc lcall mov je shr sbb in fcoml rorl and stos sbb mov addl adc movb pushf mov mov pushf lea call jmp pusha repnz movb jmp xchg inc add jb cmc mov addr16 mov es rolb xor into in xchg xchg xchg bound fidiv mov dec sbb das xchg xor cld (bad) mov cltd outsb andl movsl jge sbb shll sahf insl pop into fcoml xor cmp lahf stos test clc mov sub jb das jecxz jb or movsl jae in xchg xor ret xor cmp xorps xchg mov popa mov xchg ljmp test pop rorl adc push gs cmp test in mov jmp roll nop insb inc and add adc lods rclb inc sub pop pusha adc mov pop or std jno hlt mov push jne adc dec cltd inc sub jo sbb cmp cmp je and mov dec mov push dec sbb dec jg mov mov push and inc ret sbb lret stos push scas dec jae pop jns icebp fistp cmc out sub lea lea cmpsl xor mov lret xchg gs (bad) into xchg mov sub leave sahf movsb aaa dec sbb xchg xchg inc adc and sar es mov loop mov sub or and dec or cmp (bad) mov aas push dec std add cmp jb sub (bad) fistpll dec test jns xor xchg jbe inc or test or cs lods cltd mov enter es cmc mov pop jnp mov idivb jne insl stc gs jbe or clc shrl popf mov negb and fwait and ljmp adc lret clc push cmc ret xor mov idivl and mov bound aad xor fs ja xor xchg fwait lds xchg ja cmpsl or xchg (bad) pop push or cmp dec test movsb jle and fimull (bad) out mov js inc push jb imul pop add shl inc das int3 push or movb push jmp inc pusha pusha pushf pushf lea jmp inc pop lods mov jb mov xchg addr16 cmp test cmp mov enter xchg inc sbb test sub cmp mov pop mov aam test and bound xchg daa mov and mov mov (bad) adc pop out inc or mov pushf mov xlat divl pop jg cld adc fs push outsl push arpl aad xor push jb es sti (bad) (bad) jle movups aam xchg jbe adc aam mov sub jnp mov scas cmp fwait insl dec or loop (bad) ret pop movhps dec jae jecxz (bad) push sahf jp clc mov add jecxz movsl popa (bad) int dec fidivl adc addr16 addr16 test push (bad) fisttp sub mov pop notl aam sbb push sbb xchg popa and popa mov pushf or pushl lea je call add cmc push stc stc mov cmc pusha test jmp pushf movb cmp pusha neg pusha rol jmp sahf data16 or (bad) mov inc add mov jle jecxz fs adc jno adc data16 jae loopne cmpsl fs mov lods test xor jbe adc or mov jb jmp mov mov sbb push je mov test sub sub jno push flds xor daa ret pop xor aad fbld mov mov mov pop stos push sub sub outsl sahf stos ja (bad) int3 jg inc stos into repz ljmp into (bad) mov pop pop lret roll pop popa (bad) lock mov setg cwtl lea lea ja pushf mov jmp xchg sub int add sti lret stos pusha imul pop sub lods xchg mov pop jle add sub fidivrl fidivr inc pushf inc repz xor insl mov leave roll dec mov insl lea pushf iret clc lods popa std loopne aas xor iret addr16 cmp mov xchg inc or mov sub test push jg xchg cltd or cli xchg les sti sub (bad) (bad) pop insb or xlat fnop nop xchg or sub mov mov (bad) fyl2xp1 or mov xchg cmp push add mov sub stos in mov cld or push mov fsubrl push out or mov add aam dec pop out inc xor push pop iret lret fimul outsl nop dec sub xchg icebp dec dec inc movsb mov pop (bad) ljmp sti rcr das sarl rolb jecxz xor mov (bad) sbb cld mov cld pusha push (bad) mov xchg movsl mov and outsl jge pop repnz push push stc or mov jae mov (bad) inc pop scas push faddl xchg dec lret and lret cmc jle xlat setp inc inc sub setno pop movsbw pop not pop bswap mov mov pop call movl sub cmc xor stc bt jmp pusha pushf rep jmp daa stc mov or jl add mov xor sbb mov cmpl clc add adc cmpsl aas xchg adc iret jmp push repz lds xor mov mov and out pop shll pop sub add jae xor mov (bad) faddl jge out mov and nop (bad) and mov fs nop mov xchg bound fidivl aad or test loopne mov jae cmpsl daa jle dec insb movnti and jle fldcw int mov (bad) push sub push fidiv mov test xlat andl flds push sbb ret lods lahf mov ret xchg adc mov pop jb xchg (bad) xor or iret (bad) mov lods test jecxz pop test fidivrl outsl adc mov popa jne xlat (bad) repnz std mov cmp add aam pop std mov jmp imul cld mov popf adc mov outsl sbb fcomip and addr16 jmp sbb fwait mov js inc push dec (bad) mov mov stc jae add (bad) cmpsb ret adc xchg pusha outsb into mov jno or mov into sub inc and mov js sbb mov outsb dec push in xchg xchg out call xor das pop mov fcmovu lods or mov mov jnp sbb popf (bad) nop push pop inc inc dec ljmp inc aas pop and xchg (bad) out adc xchg and scas sahf cs lock scas fdivs popw adcl scas jns out push jno aad insb repnz inc mov push fldcw mov push lods pushf movsl ss inc sbb mov jns mov jge mov cmp add dec and rorl add sarl and (bad) call fwait jns xchg pop jb les mov lret outsl cmp movsl daa cli mov pop arpl mov lcall sub lret scas and (bad) enter in imul nop xchg cmpsl dec and jg xor icebp les xchg jp std xchg push sub out (bad) lahf mov or push aas push lret fidivr jns psubsw scas dec lret jmp icebp les sub mov sub jg sbb lret lcall adcl into mov push and or pop jb jp mov mov mov push or mov cmp lock dec addr16 (bad) outsb mov test sarb lds repnz bound clc iret mov push sub sbb mov or sahf push mov aad fwait les inc xchg jae jmp cltd shll push jbe sub jno xchg imul pop lcall mov xor lcall lea loope addr16 repnz sbb aad fstpt and xchg push shrb cmp jb or push mov inc dec sbb and mov icebp sbb (bad) iret ret in fisttpl or ret pushf or sbb jbe test push cmp icebp mov in cli dec fbld rorb cmp out call (bad) inc mov ja fbld sub cmpsl sti out (bad) (bad) jo xchg mov jl push cli dec dec (bad) shlb aad jo int3 notb (bad) push xchg sbb lret fcomps gs jb or jne xor cmp cmp inc loope imull mov inc dec sub mov jmp fildl inc mov fcmovne inc (bad) faddl jbe movsb pop shll sbb popf imul dec add push cli dec insl pusha scas jb cmp mov lods js movsb pusha stc push cmp jbe cmp leave xchg jg pusha imulb lock cmp sub mov popa sub ja push cmp jne ja inc pop jo pop pop in popf insl fimul (bad) aaa lock (bad) jo icebp loopne in addl push pop inc and outsl pop rcrl pop fsts in pop fstl jmp mov adc in pop jo mov repnz out dec sbb xor cmc sbb aas pop or and mov (bad) icebp imul pop adc mov or add add addr16 adc add add repz add add add adc add add aam sldt add add addb add adc add add add inc adc scas push adc xor or and or sub add add push out out jb sbb iret mov jne sbb data16 das repz mov mov nop pop mov pop xor pop les push push and cmpsb jae nop pop mov cmp and popf jns mov mov (bad) pop std pop xor cld (bad) repz arpl out pushf mov mov pop xor sbb jl jge subb xchg je lret add aaa pop add aas mov cmp das addr16 lock pop jle (bad) push hlt pop hlt mov mov mov rcpps int mov add add add mov test adc rclb push or xor or inc scas insl cmp jb mov xlat addl dec outsb adc insb sbb (bad) jns or sbb lods mov dec xor add cmp in mov test jmp jno adc jmp ds jge shrb iret test shr bt cmp pushf pushf lea je clc stc push cmp mov lea je cmp test stc jmp mov pushf jmp lea ja shl rcl sub btc rcl cmc rcr add dec ror ror mov mov pusha mov mov stc repnz call jmp add adc mov jb lods imul ljmp xor test cs lret cmp cwtl dec cmp push sub loopne jo xor or xchg ja push es mov (bad) lock inc mov add inc push or insb cmp sahf int fcoml ficompl lods mov in call test add sbb mov test out mov sti pop enter and scas fstpt xchg mov cmp cmp push fidivl add fscale hlt repnz cld xlat inc xor pop jbe pop sub mov inc nop cmp add jb push adc fmull dec loope pop inc pop mov xchg (bad) sahf movsl xor bound aaa call cmpsb cmp test sub or sahf jae leave jnp pop addr16 nop jbe outsl stos mov loope insb and mov sub pop lret add shr xor xrelease sbb (bad) mov add mov or push push mov lea jmp sub push movb pushf mov rep jmp push pushf bt movb xor lea push movw inc lea pushf pushl pushf pusha lea call call push movsb scas mov jb movsl pop aaa repz mov sub or aas adc stc mov mov or push and test bound sbb movsl jle ljmp sub mov lods popa cmp test bound dec or mov cmpsl lret cltd jbe xchg cmp lcall mov push cmp inc mov jbe mov aam mov aaa sub rcl lahf push bsr shr sub push shld inc lahf push pushf sbb shld xor mov movzbw aas stc test mov cmp jmp sub out add pop xlat imul add int3 sub mov xlat in xchg adcb in lret addr16 rcrb stc xlat shll pop clc add and mov fchs pushf data16 outsl sub das scas pop popa addr16 xchg sbb popf mov sub jecxz sub mov add jbe xor andb test jne test add xchg mov or (bad) rcll arpl pop lahf add mov rcr hlt push mov xchg cs mov fildl mov inc stc rorl jno bound xlat xchg movsb jae insb adcb lahf xchg xchg mov mov fs jne clc bts shl movzbw mov pusha cmc add cmc stc movzwl pushf mov call daa out adc clc fcmovb popf lods push dec pop in ret rcrb sbb fisubrl dec add testb mov es cld cmpsb insl push (bad) pushf enter mov jbe pop shll sbb (bad) sbb mov int ret leave mov (bad) aaa add dec lret aas fxch mov std pop loopne fiaddl push push mov xor outsb xor cmp data16 divl inc xchg inc add out dec push lahf inc or cld mov into xchg mov fs rcr popa shr and mov ds mov movsl ja sub xchg and imul in pushl lea jmp movw movl pusha pusha push lea jmp jne gs xor fs insb add inc and movzbw movl movb pushf lea jbe lea jb pusha movl push call addr16 (bad) std jno mov sbb int3 mov pop (bad) lock test xorl add cmpsl lahf push sbb mov push popa sub cli aam inc in sbb cltd mov in xchg pop push lahf lds cmp popa xchg mov add rcll mov push mov dec push and mov cmpsb jae clc mov pop inc cld aam jecxz in clc cwtl call push cmp icebp mov popl daa mov aaa inc mov jg add mov push jno and jmp insb xchg pop jge (bad) fisttpl xor mov dec push mov jmp movsbw pusha lea lea pusha push movb movl pushl call imul int pop cmp cmpsb jbe cmp sub push (bad) xchg cmp aam cltd xor ss data16 scas mov push inc or or scas insb ds call push sbb cmp inc adc inc pop scas inc (bad) stos fs repnz repz pop aaa rcll rorl xchg xor pop pop loop test lds cmpsb adc pop adc cmp outsb nop fistl mov cmp sti test xchg outsl sti inc rclb mov jge std jno adc xchg pop xor pushf pop sub adc lret pop jns insb or scas sahf bound adc mov jle lcall add dec jle call pop sub dec movswl lcall sub aas inc cmp mov mov les xor lcall push or lock xor ret dec xor push enter movsb sub cmpsb push loope hlt shl cwtl dec or dec jae repz pop xlat addb (bad) cmpsb int3 fstpl jmp cmpsb js lahf stos test shrb int jbe loop insb dec dec ret mov cmpsb mov add push shlb into lcall repz in push cmp mov pop xlat dec add negb mov mov int movsb jge ret add mov jl fdivrl sbb lcall stos aaa int3 out sti jge clc icebp jnp (bad) jns rcrb inc xchg inc cmp inc xchg js in jp aaa push fsubr stos insl push sti jno add mov pop jmp mov mov mov adc in push es and repz andl xchg std (bad) loopne cwtl jbe (bad) fmull in pop inc xchg push in rcrb fucomi test std sbb ret sub fldt ss push test (bad) pop adc xchg jns fs popa imul ljmp xor mov cli jno pop cmp iret test iret push jae (bad) pop pop mov adc mov cmpsb sbb hlt xchg mov dec cmp cmp mov dec sbb sbb inc in ror xchg stos sbb (bad) data16 xchg movsb (bad) dec push stos leave mov arpl rorb xchg dec adc or rcrl lods mov push sbb lcall rolb xchg mov pop test lret sub shrb push stos stos fisttpl call pop idivl mov fsts cmc ja in test xchg leave mov popa aaa icebp arpl stc jno add repz or iret jnp nop push mov mov jl sbb push xor add popf jae adc (bad) into mov (bad) int arpl cmp or sbbl repz bound mov xchg and sbb pop hlt roll (bad) std push popa cmpsb nop sti test jle test mov lret pop cmc decb adc out mov dec dec sub or mov push lods or dec mov or or cwtl adc and sti or jge or and jbe xchg xchg inc pop or push int3 lods fistp push stc xchg dec cmc insl clc jno call jb popa loope (bad) je or lret pop and mov test xchg sbb sub xchg imul xor scas ja aam dec jmp mov outsb ja cs cld negl and scas das adc shr cmc mov sub scas xchg pop mov das pushf out pop mov push jnp adc xchg cmp ret lods in mov mov or or push (bad) xchg std cmp sbb mov cmp stc aas movb pushl popl pushf pushf pushf mov pushl ret dec sub stc jno and lods mov mov and cmp mov stos fnstsw mov mov mov imul cmp cld inc stos iret test adc movsb add xchg xchg mov test adc and pusha iret test adc adc scas lods dec inc test mov fdivrl flds xchg lret or cld in jg push and aam pop fisttpll push out lock jp ret dec ja ljmp sub (bad) jge (bad) and ret push dec or dec mov jo fmuls shll int3 insb div jno arpl fcompp outsl inc sarb cmp les in jno and sbb das cmp mov cltd mov push in pop xor hlt xlat jnp lock add mov cmp loopne mov jl in mov push pop or popf jns cmp jb xor imul push iret xchg dec push cltd fildl out adcl and ficomp inc mov (bad) pop and ret outsl ret int popf fldl das add cmp jbe mov adc cmp fistpll cli xor dec push not mov cmp (bad) nop jge cmp in inc lea push lret push xor inc sub nop jbe cmc lahf addr16 ljmp sbb aaa hlt mov popa es jg sub std rolb mov jg les dec sbb movb neg push push movw sub movw ror stc add push pusha lea call call mov pusha movb mov pushl pushf pushl pushf lea jmp lea jne lahf push movsbl movb push mov movb lea mov movl call rorl cmc jno clc lods xchg xchg mov test dec shll pxor mov and mov sarw push and mov cs mov cmp loopne mov out sbb fcoml mov int3 stos sbb out stos jns adc mov incb push add push add fbstp inc cmp imul xchg scas imul ss lods adc insb or push in pusha ficom flds fnstcw or mov push sub mov lds rclb mov sbb mov dec mov insb xor mov mov mov inc and pushl movb mov pushl ret jmp sbb jno or (bad) mov ss stos lea jp sbb add lds stos dec dec push sbb inc bound aad xorb cltd ja pop or stos bound lock adc jp in jno jmp stos pop mov xchg and push into movsb jnp mov insb pop mov adc loope and lret dec inc or mov and pop jb repz jnp sbb and mov and out mov leave jge push pop lret push lret icebp test lock shll cmc cmp inc mov sbb jecxz mov push push xchg lret pop add xchg mov (bad) jge sub add in js or int3 test xor sbb lods mov ja xchg dec push shrb xor add fwait aas pop lret dec and add in enter movsl outsb jmp (bad) dec inc sti mov stos adc lea sbbb dec add lock mov jp cmp add mov cs pop adc in (bad) mov mov fimul mov (bad) jg mov in bswap lock cmp mov or or xchg leave sahf scas sbb mulb hlt jno pop sub ret push inc sbb xchg imul cmc int insb push pop mov les out or rolb es ss sbb leave in or test adc push rcrb fisttp fiaddl movsl loopne nop push iret enter xor movsb pusha sbb dec hlt les movsl sub in and push xor sub sbb inc popf lock pop les fldl mov fstl out adc lods cltd and aam mov mov leave ja dec (bad) push aam movsl cmp scas cmp inc adc subl mov push push (bad) dec adc les bswap bswap mov mov pusha cwtl lea jmp stc add jmp lea jne dec mov pusha or pusha lea je movzbw lea bswap lea push xchg xchg xchg movzwl movsbw lea bswap call lock cmp bnd sub cwtl jl hlt push pop adc xchg pop mov test outsl in mov push aam pop shrl out mov repnz lods test mov jl fprem1 jg mov imul scas into imul mov ds mov add aas xchg test in dec add ret inc inc sbb loop gs mov pop jb push aam and xchg mov or aam in (bad) xor fsts ja mov rorl ret pop mov lret adcl lea andb and cmpsl inc dec xchg cld push mov jecxz popa push cs push shl call pushf call inc inc push inc push dec xor cs insb add inc dec bnd mov std mov adc jecxz xchg mov and and por mov lret popf lahf mov int fmull push adc cmp push out outsb cmc adc data16 dec mov fdivl loopne sub jnp icebp lret nop mov cwtl ret dec aam or mov sub mov cmp (bad) adc inc repnz mov lcall add and and sti pop (bad) nop sub dec mov and fistp movsb push cli push shrb inc add stc add push loopew cmp xchg or push shrb lea push cmp xor cli mov imul nop data16 in cmp mov ss aaa popa xor mov leave sub pusha jl mov cmp enter jmp icebp insb rcrb dec cmp add or sbb scas cmpb sub fwait notb jmp pop xor outsb xchg sub ja sarb sti lret cld pusha lds fstpt aaa mov in push and in mov mov mov add fsub xchg mov addb mov sbb stc sbb in jle mov movl call dec push js jno frstor movsb data16 shlb repz insb jl pop loopne xchg cmp fwait dec (bad) ljmp jno add (bad) imul adc imul pop pop dec ficomp repz and imul mov cmc add call insl pop sub xchg aas repnz jmp xchg push xor mov lret add xor jnp addl movsb cmpsl (bad) pop mov std popf cmp sbb fs jge sti ret xlat pusha data16 ja addr16 sub (bad) jae pop jmp (bad) or ljmp daa fmull aam push (bad) mulb inc in in or fwait pop mov loop int mov std ret adc cmp out jno push psraw xchg mov pop cld lds (bad) iret cmpsb push add sarl pop int3 push iret insb (bad) popa es pushf lahf pop mov xor icebp pop jecxz fwait push fcmove xchg inc sarl into xchg pop push and sahf adc mov xor cmp nop cmpsb mov in jns adc rcrl pop inc outsb hlt xchg mov add pop lret and jo xor mov enter pop les mov mov es out lods sbb inc fnsave insl dec rorl mov inc andb xor fs (bad) es popf mov clc jge xor inc dec push dec clc dec mov adc cmp movsl gs iret inc loop (bad) lret mov jb dec add test cmp adc and add push jnp sub icebp and repz jg sub aam inc scas fdivrl int pop fsts mov mov int3 mov sti test (bad) ret pop cmp or stc sub cmpsb je loop test push xor cmp dec imul mov adc (bad) jns inc dec sub pop adc push dec dec xlat mov je sets lea jmp lea ret mov jno movsb and xchg push ljmp lds fnstenv aad sub mov xor mov mov pop pop sub fldenv push iret in mov cmpsb mov pushf xor dec pop cmc mov cmc jmp sbb enter xchg add in stos xor xchg imul dec std jae outsl lret mov lods jno jnp and push popa adc jo push popa aaa inc mov or sub adc jb imul icebp jae mov sbb dec lods fdiv jmp jae mov (bad) pushf mov fstpl and jmp xchg and sbbl pop (bad) imul movl mov loopne hlt imul lods push mov (bad) (bad) js leave outsb and mov pop mov sub mov inc fs mov std imul sbb ficompl pop loope push (bad) leave inc setg mov cmp aam adc into outsb test jne push in push bound out pop jge xchg imul ds mov xchg (bad) int3 cmp testl mov dec imul jp adc fsubrs pop iret in stos aaa xchg pop sbb int pop mov adc or jb sub dec arpl xchg not lcallw arpl mov push jns pop in sbb push fistp adc mov mov push push xor xor shll (bad) mov fs pop jo aaa cmp push mov add ds mov fcoml pushf es mov mov dec mov jbe mov in or adcb adc jg clc or xor insl pop jge js push push jbe pop call or (bad) and jmp ficomp ret js loop push out outsb adc mov inc xor fsts xor push xchg scas xchg ds mov lds rcrb adc xor scas out cmp mov lahf mov out cmc pusha lea jae pushf cmp pushf push call movzbw movzbw mov mov lea jmp movsb js lods jmp and movsb js dec pop cld mov mov pop aaa add in dec insl dec hlt dec xchg pop mov or jnp push mov pop push lret das loope jno adc fldl std sti cmpsl das into mov push jbe shll inc cmp mov xchg arpl mov movsl out lcall insl and jp push and mov push arpl (bad) pop (bad) pop js lock mov adcb test xchg fs dec sti or jle popa push sub out lods mov std hlt pop adc jno inc push add test daa add bt clc sub jmp neg cmc call jnp xchg lret call adc fcmovbe xchg pop sub insl and incb ljmp jg mov lock jnp push inc fadds pushf js out jne cmp adc mov std xor addr16 xchg mov or repz (bad) jle pop bound jecxz mov fcmovnu jl movsb cmp repz push cld movsb jl sarb and jmp dec or test xsha256 cmpsb xlat xchg arpl out scas scas stc dec loopne lea or dec std aas or arpl or mov dec add pushf jl rcrl sbb sbb and mov imul pop sbb fcoms pop push cmp out shr jno test sti shr xchg jp inc rol (bad) addl incl (bad) nop stc mov push (bad) cmc mov pop dec ss fistpl cmpsl daa and cmc ja or pushf arpl aam or test jb (bad) repz shl jmp outsl sarl insl sbb dec jle test iret hlt or pop imull pop icebp decl xor out data16 or cmp shlb xchg out sbb in cmp mov inc mov xor fnstsw test cs sub (bad) xlat xlat xchg mov or mov jns pushf sbb xchg adc mov sub jno sub inc jno loopne movb lea je pushf movl push pushf lea jmp inc or pushf out int enter sub push aam push loop xchg daa (bad) mov pop lcall jmp ljmp cmp xor jbe sub int3 (bad) cmpsb sbb rcll and loop jle dec adc xchg pop add mov sti xlat fisubl mov pop ja dec push imul push mov and push lahf inc push inc shrl dec jmp push ljmp add lcall xchg lahf in pop adc adc daa jmp inc and jno loope mov mov decl or sub jge inc xor sbb imul (bad) fdivrl cmc mov mov add nop insb dec xor rcrl movlps rep fsts jg addr16 mov mov mov and out int3 enter mov mov int insb inc mov lods xchg repz ljmp imul lcall sbb data16 jl mov or jb mov cs enter test jp ja call xchg jmp xchg xor sbb and mov pop test or fistl fmuls (bad) aaa icebp mov jb xlat sahf push xchg jb inc (bad) mov pop sbb outsl aad push adc gs sarb rorl push jnp mov lcall test orb out push in mov les rcl (bad) jne cmpsb (bad) jnp xchg sbb lahf xor lret jno rorb lea inc and ret sbb adc xchg cmp inc inc and fmull push mov lea jmp and mov mov les xor (bad) ja inc or aad das xchg enter pop sbb lret dec cwtl into jl cmp and sbb ljmp fistpll lret ds mov lcall test daa xchg sbbl insl stos ds arpl outsb cmp hlt pop add mov mov xchg dec aas xchg call dec aas (bad) push mov push call push sub out fdivp fwait push or decl (bad) lcall pop (bad) in sub sub mov sub (bad) scas aad xor xlat out jno sbb sub movsl jge pop jp out movsl jl add inc negl mov sub sbb or jnp or divb cmp xchg push daa fstps mov sub je in mov insb xchg insb out rcll pop insb icebp out shrb push icebp icebp inc hlt clc xlat jno insl dec pop (bad) jae push repz out xor insl jnp cmp inc adc jns (bad) lret jno push sub mov mov push or and pop inc xchg cmc call pop inc (bad) repnz cmp inc add push mov jno fcmove outsl sti mov sub jno sub test popa es stos jo loope cld push cmp mov (bad) fdivrs pusha dec fisttpll sbb xlat sbb cmp leave sub and dec jne mov popf les inc jnp movsl loopne lahf xlat (bad) aam (bad) loopne xlat outsl popa insb add addr16 fwait xor insl data16 cmp inc mov push mov ss push aam scas mov fimul sbb mov aam pop jbe mov add sub mov (bad) out xchg or xlat mov add xlat lret mov mov into dec inc iret loopne xor dec pop enter push dec imul add push gs outsb je imul insb inc add xor xor les (bad) imul mov push pop jmp lret aaa pop ljmp clc pop sub (bad) loope or cld xor outsl pop dec xor mov imulb ljmp insl sub add lock sbb test hlt jnp cld xor insb xor in stos data16 sbb insb xchg cmp jg jnp add push repz adc and pop out mov ret mov nop clc das inc fcompl cmp sbb insl mov and vmwrite adc sub pop stos jb shll movsb xor adc and or mov fild sbb stc pushf pop xor pop dec insb out mov jno sti rorb dec push out shrb jbe pop lods imul mov dec rcll loope mov cmc popf arpl pop fwait inc jo push or inc pop sub jle lea ljmp cmp jne nop pop cs scas imul push call ficompl xchg mov pop test cmc sbb push sub xchg mov in popf mov mov fildl or jnp pop test cltd lods sbb cmc outsb decl dec rcrl (bad) inc sub jae stos pop in xorl sub out inc imulb mov jmp cmp jbe into popa outsl adc stos jne push push mov lahf push (bad) fidivr cmpsb sub pop outsl pop jle jp push es dec iret adc into lods jne mov aam jns mov lahf test xor mov inc rorl xchg mov pop loopne int rorb sub xor lret mov inc pop or sahf fs sbb sub sbb and sub sub testb cmpsb repz sbb int3 lds fwait insb xor sub insl pop pop popf div inc arpl stos in outsb jp in push and mov jae sub iret lods xor in stos (bad) jns sbb pop jl fscale cmpsb into leave push aas leave jo cs sarb lock mov dec push add mov gs popa jns inc xor mov out mov mov dec pop ds add call add inc gs jb arpl jae imul popa je outsl outsb add mov int cld (bad) (bad) sub adc mov incl (bad) ja add (bad) mov (bad) cmp jae fsts push add mov into jle sub loopne and sbb leave xlat (bad) jb loopne adcl (bad) cmp lcall loope es jns clc jo pop insb repnz mov push adc out in aas sti (bad) xchg lods bound mov fidiv mov inc in add mov movups lds xor dec inc adcl clc movsb jle inc lret cmp outsb and lahf imul repz sub stos jge adc jecxz cmp out js adc jno adc rcr leave repnz je dec shr fwait and outsb repz push in aad mov sbb mov mov mov pop lcall nop push xor test sbb adc or sub insl cmp inc mov nop sbb lahf dec or fimul flds popf add loop push insb lock mov push out inc and cmp jno mov dec cmp out addb or cmc xor mov mov xchg std scas pop cmp mov aad jg jge test inc dec add lret lret xorl call add adc or mov push scas push (bad) frstor hlt inc push mov roll cmc mov mov test repz sbbl jb add pop sbb loopne mov or in pop leave aad xor lea test mov arpl sub jnp adc pushl push pop pop andb push mov (bad) pop mov cmp add clc call lea ja pusha mov push pusha lea jb jmp pushf lea jne mov sar pushf mov stc or pushf push call pushf cmc mov not clc bt cmp mov lea call lea ja pushf pushf jmp xchg jbe adc jno inc or mov mov sbb lcall and sbb push xor mov push and sti movsl popa inc into jmp jmp js cmp rol push dec xlat enter int dec inc call pop test paddusb cli aaa mov or push rcrl push push cmpsl sub dec imul stos mov mov fwait pop jo das push xchg ljmp rdmsr xor or out fdivl addr16 mov adc xor xchg pop add mov sbb fdivp (bad) jae add inc jge inc (bad) es push add mov fdivl xor xchg or fwait mov outsb sbb stos ljmp cmp lahf movsb sub or ljmp sbb int inc sbb into mov inc add mov mov push adc call pop int3 into adc (bad) pushf into add enter adc (bad) stc and mov cltd lock out pop fsub xchg mov (bad) ficom arpl es sbb or and push bswap mov push pushf movb movb pushl ret pop jmp (bad) pop xor loopne cmp stos push add shrl or sbb or popa dec add mov push mov stos es dec push or pop mov xor sub dec jbe femms (bad) fisub outsl add (bad) cli out xor test cmp cmpsb outsl adcl jbe div sbb push rcll neg jmp insl jmp and out ss ljmp inc mov dec aam lods jb mov divl cld mov jnp mov clc fidivl pop cmp mov inc movlhps mov in or mov bound xchg pop inc or lea push or mov xor mov push and dec or scas fstl fild xchg in add dec into lea insb mov lret scas fisubl ja fucomip jg (bad) call add fbstp adc fldenv idiv (bad) (bad) hlt hlt add (bad) jecxz icebp shrb and (bad) or sbb add ret test jno (bad) out jp (bad) int3 mov add int out leave ja movsb and in daa (bad) fcoml sahf outsb push stos std ret shr add int inc fnop fsubl ljmp sbb daa jle jne je mov jae fs pop out pop cli xchg xchg test out mov test (bad) mov addr16 ds in mov jno sahf cltd aas lds adc and imul lds (bad) icebp xchg mov push jnp je lret inc (bad) push jmp clc cmp daa je cmpsb std xchg ljmp pop loopne cmp push dec (bad) or mov xor sbb mov push movb cmp lea jne pushf pusha lea je pusha cmp cmp lea jge pusha push movb lea je push pusha pushl pushf lea jmp movl pusha mov lea jmp push pusha lea jmp pushf movzbl movsbw pushl popl push movzbw mov lahf push lea jmp call jno in insl pop std rclb cmp inc iret pusha sbb mov das insb sbb (bad) out lahf jne mov shl rorb lret cltd popf mov loopne movsl test hlt fsub mov cmp imul (bad) push add ret sbbl fwait xchg cmc leave ljmp leave mov add not cmp imulb mov jns xchg push pusha test jmp jl test je jle mov int iret out sbb test lret movsl leave nop push add cli push outsl repnz push fisubl and int pusha call sub push xchg mov jg pop addr16 mov sahf in decl loope pop mov jo outsl mov mov xlat jno daa mov pop add pop pop repnz inc cmp ljmp imul mov imul jl cmp xor scas insb and shrl adc dec (bad) insb adc push inc xchg movsb daa adc fcoms mov out insl push daa and mov in jg sub adc adc scas pop aad inc lret std mov in xor stc mov repnz xor rorl outsl stc lret or in pop cmp inc push outsb cmp cmpsb cmp fcomps (bad) jno mov add fsubs mov mov (bad) mov test and lds and mov xor pop (bad) (bad) lret push dec int3 outsb cwtl add into adc (bad) jl adc in and out lahf pop mov aaa fldenv lcall (bad) divb dec clc sbb mov sar dec pop in mov std pusha nop add sahf cli test and lahf cmp (bad) push sbb lret and lret divl xchg arpl push add (bad) in and xor adc cld jge jbe inc outsl (bad) adc xor xchg mov mov leave lea call push lea jne pushf bswap pusha mov pusha pushf pushf pushf lea jmp insb ss call jl inc adc mov gs loop push and dec mov (bad) pop sub in mov or or mov sub repz push out adc jle push and cli dec je pop ret dec cmp xor out mov or (bad) adc pusha stc pop repz in mov mull jg loopne movsl scas cmp push pop adc test cmc test ret aad int adc inc pusha ljmp lea call mov xor cmp dec push jle in mov ss add xchg je mov push sub call jl loope clc lods xchg gs sbb test arpl call test mov jge or sub push adc push test mov and add xchg and push mov call shll or lds rclb jle ljmp das pusha mov cmpl adc mov (bad) daa xor mov test stos dec js xor imul cli cltd stos cmp roll pop inc rcrb mov sbbl inc and lcall (bad) pop pushl pushf lea jmp pop stc xchg aad int fistpll paddw lret enter jae adc mov dec into lcall mov jbe aas cmc lods pusha pop (bad) cmp push cli xlat inc mov mov cli and ret sbb jo mov xchg cmpsb cs arpl pushf ljmp adc push sub subl in cmp xchg sub adc lret cmp jecxz setnp lock mov sbbb call add push rep jo mov rcrl mov sti scas mov notl rcl int mov xchg popf pop push mov xchg in cmc xor call push xor cmp (bad) ficompl loope jo cmpl dec adc pop repz outsb sbb mov dec clc push outsb xchg mov xor test mov mov in adc and sbb movsb mul clc sub addr16 jbe lods cmpsb cld pop push test ds int es imul inc sbb xchg xchg push ss test fsubr and icebp lods xchg pushf and icebp push leave xor (bad) xchg dec popa cmp aam sbbl inc (bad) fild push ja and pop iret imul (bad) cmc arpl xor cli fadds or movsl jae cmp cmc test and (bad) pop or loopne pop push ret test pop ja in movsb xchg sub mov je repnz add add sti lahf cmc add dec (bad) dec add cmp add cmp pop jmp jecxz jno jbe repz mov aam jns jo add (bad) mov xchg dec jmp sti ljmp mov leave xchg movsb lret subl push mov data16 xorb cltd xor std aaa add pushf dec push mov loop push mov (bad) adc cwtl fidivl xor cmp lods cmpsl stc in and cmpsl int3 lret pop insb pop cmp scas mov insb xchg lret test cmp sub jmp mov lret xchg (bad) jno ret jmp (bad) xor scas push xchg gs rolb fidivl sub js jmp jmp jge push xor scas data16 mov inc rorl push pop mov or sbb cmc or stos dec xor lods xor fstps mov ficoml ret ret pop and mov jg cmp loope mov pop sub test lock inc aad out jae hlt (bad) test (bad) out jb inc idivl adc mov mov sbb adc inc fildll jp mov int3 inc dec (bad) fcom fwait insb ds fildl int3 negb xchg and jp out pushf insl xchg (bad) cs stos jl and pop jle hlt mov push imulb sub mov lods push (bad) sbb scas ss leave in and out jle out push push sub inc mov imul cmp xchg pushf adc call nop lret fstl movsb cmp add pop pop sti aas xchg cmp adc ret aad movsb repnz sub sub ja mov aam mov jle in stos pop jb test or test inc lea push mov mov mov orb sub sahf sub mov pop (bad) mov xlat movsb push pop and sub rcl int xor aas sti fld xchg stos pop dec sbb mov in jae and cmp jne sti or lock add or push pusha jb cmpsb (bad) pop inc shrb xchg jne push push xchg push test dec aas sti (bad) push movb add jle fwait out in movl sahf push inc jg lcall sbb lds mov jp or push mov stos loopne adc ljmp inc sbb inc pop in lds jl push push ret xchg push cld sbb push push xor ret mov jno adc (bad) (bad) enter cwtl sbb divl imul jnp lret or inc cmpl push in (bad) fimul loop ret mov scas adc lcall ret cwtl sbbl ss (bad) jl div je repz xor pop adc into mov das and mov int3 dec jae dec mov pop mov call pop xchg es jmp pop mov dec (bad) or cmc mov pusha es sub or lcall sbb in push cmp mov stos sarl xor adc pusha jae sub cmpsl push mov add mov mov pop loope mov mov addr16 pop test inc cltd clc lods arpl mov stos push push jmp loopne mov imul data16 push jle pop dec push movb aad push out inc adc in into jno insl and les rcll lret rcll xor add mov cmpsb out jns daa mov imull sub push jmp inc icebp popf pop jb sti shrl jecxz insl aaa dec clc out pushf into dec xchg sub pop lock (bad) cmpsl pop loopne mov addr16 jbe xor mov insb and push pop gs mov xchg test lret xor mov and mov mov adc clc inc jb lcall sarl data16 mov js imul repz xor lea jne jmp adc add jno fisttpl push popa mov sbb (bad) mov and pop cmp mov cli jmp enter and (bad) (bad) adc push clc jmp sub (bad) lahf and mov int3 xor inc les pop add (bad) stc mov push incl imul pop cmc xlat mov xchg clc push xor push dec or test dec test fidiv mov lock loopne pop inc dec sbb mov mov movsb (bad) js (bad) push nop imul mov lea or ret je mov pop push and inc and mov xor push pushf lea jmp push mov int xchg jge jmp pop cmp rorl mov jp jns mov push dec add pop lea js sarl jp xor lret ss xor fxch test pop rcrl lahf cmp daa mov hlt mov add or repz loope rcr bound pop mov ret xchg std mov dec mov cmp sbb mov (bad) negb ja cmpsb loope loopne sub stos inc fs daa sbb pushf popa sub sbb cmc lcall pop and lcall jne call mov movb lea jmp not seto inc inc pusha setne not mov lea push pusha jmp pushf bt cmpb jmp add loope lret jno stos pop sub movsb ja pop cmc mov mov pop dec or xor imul inc sbb nop insb sub sub pop mov cmp rdtsc sbb outsb cmp inc popf and jno jnp roll inc dec push in lds xchg sub xorl mov add fdivl mov jo rcr xchg ror push xor fsub aad jg lret mov xchg rorb cmp arpl push sub sub call push pop xor pop popl add mov inc sbb jecxz divl mov ret adc lea in and out (bad) imul sti mov idiv pusha sub aas bswap mov stc add shl stc mov mov stc stc call or push jmp push movb rol neg add cmc adc neg sar rol dec cmp sub stc jmp lea ja cmc clc call dec pop jmp lret (bad) inc sbb rcr jns sbb stos jbe jmp xchg nop pusha inc add lcall es jae fdivl xchg inc sub jnp test ljmp out or mov dec xchg repnz sub push or mov add mov sub (bad) imul pop leave cli jp repz lods inc jae into jnp les add pusha std mov cmp sbb mov mov xchg lods cwtl xchg push push clc test daa jecxz test cli cmpsb bound std mov test aam jp ja push xchg push fsts add cmp mov xlat mov sbb mov or adc addr16 pop mov mov inc pop sbb cmpsb push (bad) cmp adc push cltd fisubr lret cmp (bad) fistpl dec (bad) aaa das out jge xchg jge pop nop pop jmp std rcl lret xorl adc inc bound ljmp test sbb mov dec xor adc mov (bad) jge or sub cld test add mov lea jmp cmp jmp cmp pusha call mov jno mov pushf insb and movsb jb out outsl ds (bad) push add xorl dec mov mov adc xor cli ret imul (bad) scas xor in hlt inc sub repz lods add outsl addl sbb xchg adc shl jae cmp inc cmp push lahf dec pusha push les (bad) xchg ss pop cli push out add pop mov outsl cld and lret or pop loope lods test sbb aad in cwtl in and mov rcr push std push mov adc mov mov dec and lcall icebp jle pop jne inc mov push pmulhw inc mov inc or jmp call pushl jmp rorb inc out jbe std fidiv outsl cmp xchg js clc call adc or movsb jle and sub fnstsw outsl sbb orl cltd repnz jl cmp sbb frstor sbb xchg fldt test stos ja nop mov and insl mov shlb das jmp pop add add push in ret sbb sub mov bound sub jle push out lods insb cmp shll shl stos rcrb sbb aad and aad mov jmp inc pop lds in je adc leave adc lods fimull push or fisttpll sub lcall jno je mov cmpsl add cmpsl jg push fisub mov pusha gs mov push xlat pusha push lret add lods fiadd subb in ds cmp mov arpl lahf push out sbb cwtl jno inc mov daa fildl push add cmp loope imul ss sbb scas sub push sbb (bad) addr16 sbb enter inc sar push and sbb xor dec jl aam test ffreep popf mov aam xor or push xor cld mov dec vpcmpgtb outsb loope dec aam cmp mov lcall addr16 (bad) nop mov push hlt hlt inc pop (bad) dec add lret pop and xchg mov cmp call pusha mov lea call jmp pop pushf setl push mov mov jmp mov sub jl inc pop or jmp push adc shlb ret dec cs rcr stc xor (bad) pop push xlat and xor popf xchg mov inc int3 addb adc jb jbe xchg pop lea xlat call add xor (bad) in xor xchg push loop xchg mov mov sub lahf adc add lcall outsl mov push xchg pop adc rcrl shlb and aas dec jp ja cmp test cmpsl mov (bad) popf scas ds dec jb les jae,pn hlt or dec add push sub jno xor icebp fcmovnbe mov or stos insb cmp fistpll lahf mov lds push ja and mov and loop jle pop sub aaa bound push fs mov xor pop incl lcall add jne adc repz fwait lcall clts mov ja ret int jbe sar pushf pop sub enter fisubl fisttp jae xor mov (bad) (bad) gs dec loope int jo mul sub rcl movsl out sub inc push mov mov and test ljmp in mov cmp mov and cli fwait push sbb cld fucomip test add movsb dec outsl movl repnz xlat pop aas (bad) mov jmp dec popf or inc sahf mov jge dec jne inc call push shrb sti mov jbe frstor jge and sub push lods sub aam mov jb xchg addr16 ja push push lock ja add jl inc push mov mov cld xchg push lods movsb inc sub ret je mov arpl sub jge and sbb mov dec jge fisubl add xchg aas inc scas imul out fiadd xchg cs fnstenv jno and jle mov xchg fstl sbb push pop bnd or mov cwtl push and mov int mov or fiadd sbb test or xchg jno fdivs cmc arpl pushf and xchg fiadd add ret fwait imulb sub lock ds outsb adc add and incl add jb es mov imul mov mov aas into in xchg mov outsb xchg pop jmp test daa jne and lea ja pusha pusha inc pushf inc mov xchg cwtl mov neg dec adc mov pushf pushl cmc mov neg mov jmp cld mov int in scas inc sub mov (bad) jo repz test leave push and insb lret dec data16 hlt mov inc pop pop push inc xchg lods add outsb cli lds dec adc fimull leave inc daa jecxz pop xchg cmp scas in jmp jnp fidivl stos mov ds xchg dec iret (bad) push and jne fisubr test cld call mov stc mov cmpsb cmp xchg or jno push or push mov mov inc push add aad outsb dec adc and cmpsb data16 ret xchg popa out mov stos outsb cmp in scas lcall sbb mov or lock lods std sub pusha call inc lcall adc mov and push jecxz lcall pop insb xchg xchg pop xlat jp test dec xor jae (bad) adc arpl xor aam jmp data16 jne jmp sbb xchg cmp inc (bad) dec add inc mov inc nop xchg in cs mov ret in mov dec mov (bad) mov out pusha dec adc bswap and mov lea btc dec inc mov pusha (bad) lock push pushf jmp pushf movb lea jne mov pushfw mov not mov jmp pushl lea jne not lea pushf push movb cwtl mov pusha lea lea lea mov pusha push jmp out xor sub mov fs int3 mov les sub xor or push xchg cltd lods sbb int3 imul (bad) popf mov push enter cmpsb js movsb daa pop dec or in fcmovnu add cmp mov pop xor fs mov std mov lea lods xor shlb fidivr addl xchg cmc adcb (bad) cli mov lods push mov (bad) test leave pop mov stos dec ds xchg pop cmp dec loope mov pop sbb and test fsubl and hlt mov fst xchg popf outsl andl xor push xchg (bad) or shll jp test xchg sub mov mov mov push out rorl cvtdq2ps xor and stos inc test add movl lea repnz push out xor ret xchg mov pop cmc je jns sbb aaa cmc imul jno bound inc mov (bad) mov jno or mov das in leave mov inc dec add cld jmp jecxz push sub int int3 rorb ret enter in or lock push stos iret inc gs out lock call cmpsb sbb outsl xchg insl push btc mov out repz fucom jecxz cmc fiaddl psraw je iret fwait xor into jno jb imul adc popf or dec enter outsl pop stos mov mov fwait sti xchg add rorb mov js pop (bad) push jecxz js imul (bad) jo sbb test bt cmc neg push bt sub clc pushf pushf clc not mov pushf cmp movzbw lea pop not setb sete mov pushl jmp call pushf pusha call lea jne shl stc mov movsbw rol adc bsf sub neg data16 mulb mov inc sbb out bt cmp pusha sub jmp lcall sub sbb aad mov call sbb leave rolb pop ja mov iret mov or mov mov insb xchg jle xchg aaa mov pop repnz xchg lar gs dec je lret dec mov pop ds sub lea mov sbb and xor xor outsl dec (bad) outsl and aad call or mov add and std das pusha call lea jno test add clc clc shr pushf pushl movb lea je pushf adc mov pusha lea jmp call bsf bswap lea mov dec clc xor bswap setb lea inc pushf pusha dec bt rol jmp clc xor pushf xor cmc cmp mov bt clc push sub pushl clc clc add call pushl popl pushl pushf lea jmp stc ror pushf clc not cmp add pushf test cmp xor movb stc sub jmp cmc cmp neg stc pushf pushl cmc rol pushf stc cmp clc add clc jmp call lea je cmp bt call pushf not call xor mov xor bt pushf bt cbtw mov mov bt push cwtl mov pushf call cpuid pusha pushf mov bt sub movb bt cmc cmpl call call ror mov call push pushf movl call push pushf mov call shl mov cmc cmp lea xor jle xor sub mov btr neg btr shrd xor clc xor inc not bswap call call push pusha push mov call call jmp xchg mov jmp mov pushf mov pushf push lea jmp adc aaa btr mov pushf call shrd sbb mov jmp shl mov stc setae add mov cmc call pushl popf movb movw lea jmp lea jne adc btr xorb not setge setns pop pusha mov push lea jmp lea push jmp xchg cld pusha mov mov call lea push push pushl pushf mov push pusha pushf mov push movw push pushf mov jmp pushf jmp movw mov pushf mov push pushf mov jmp movl push mov pusha lea jmp sar xor mov clc jmp sub cmc push aas lea bswap mov inc and inc stc sub not pop bswap mov jb lea pushf lea jmp jmp pusha mov pushf mov lea jmp mov call pushf jmp mov pushf movsbw std jmp pushf pusha movw mov push repz popl jmp pushf mov call pusha jmp jmp push pushf popl push pushl popl mov push lea jmp bt pusha add call clc add pusha call call lea push call movl pushf pushf mov push pushf pushl ret cmc xchg bt clc mov add and add setg pusha jmp movw shr jmp lea jno push pushf popl pusha lea jo popl pushf pushl lea jmp lea jl pushf mov pushf popl jmp pusha mov jmp pushf lea mov pusha mov pusha mov jmp shl mov push pushl mov push mov pushf popl push push push pushf pushl popl movl pushf lea jmp add lea jl pusha pusha push movl call inc setnp mov jmp pusha call pusha pusha mov push repz popl push push lea push jmp jmp mov movb pusha pushf repz popl movb jmp push pushf lea push pusha jmp cld push movzbw bswap bswap mov jmp mov mov rcl mov bt add jmp bswap mov neg mov clc call push mov pushf pusha mov jmp pusha pushl popl pushf pushf mov lea jmp cmc cmp add call or bt cmc mov add mov call mov pushf pushf mov mov pushl mov jmp mov mov call mov mov lea jmp lea jae mov jmp mov mov movb lea jmp bt mov push push push test or mov lea je call jmp push pushf popl pushf movb push pusha pushl popl pushf mov pushf mov lea jmp mov pushf pushf mov jmp pushf mov pushl pushf pushl call pusha pusha mov pushl mov pushl movb pushf lea jmp xchg pushl pusha jmp xor xadd (bad) cmc adc pop mulb xadd pop neg rcr ror btr lea jmp pushf mov mov pushf pushl lea jmp movb call sub movb mov call rep add data16 (bad) mov shl shr test mov test clc cmc test pushl popf movb movb lea jmp stc add stc pushf ror jmp repz popl jmp mov push pop mov mov pushf mov call jmp call push pushf push movb lea jmp call jmp repz popl jmp movb neg call call mov movl repz popl pusha call cltd neg call rcl movzbl jmp call pushf mov mov pushf pushf popl push pushl popl pusha push push lea jmp cld cld pusha rep clc clc rcl jmp jmp mov mov movb pushf movb lea jmp pusha call pusha mov pusha jmp test pusha stc sub test pushf add call mov jmp pusha jmp movzbw mov cmc mov (bad) icebp add mov lds jmp pusha pushl mov mov pushf call dec jmp pushf pusha push lea push call call das lea stc pusha jmp mov movb mov mov lea jmp pusha pushl popl push lea jmp mov movb cmp pusha jmp mov pushl popl pushf pushl pusha mov lea jmp (bad) repnz lahf xor mov neg sbb mov cmp bt bt bt not cmp not bt sub cmc test and pushf jmp movb jmp pushl pushf mov pushf movb mov call push call stc push xor cmc xor cmc cmc stc cmc sub mov mov mov mov pushf mov lea jmp jmp lea jne inc call pushf popl jmp pushf pushl pushl mov pushf lea jmp push pusha mov pushf pushf repz popl call bswap lea jmp call pushl popl movb push pushf mov lea jmp cmp pusha not test bt cmp not pusha jmp pusha clc push sub cmp stc cmp add pusha jmp mov pushl call sub jmp call push lea push push mov push pushf mov jmp mov jmp repz popl push push jmp aad lea mov cmp sbb stc clc mov sub jae push add pushf mov pushf pusha lea jmp mov pushf mov pushf movb push pushf mov push lea jmp jmp mov pushf pushf lea je push mov jne push mov pushf lea jnp pusha movb mov mov jmp jmp mov jmp pushf mov call pushf mov pusha mov pushl jmp pushf mov pushl push lea jmp mov pushf pusha lea jmp push pushf mov pusha pushf mov jmp pushf mov mov movb pushl push mov lea jmp call pushl popl mov pushf pushf lea jmp mov jmp cmc (bad) lock mov bts neg pushf xor call push call xor mov bt call movb lea jne pushf mov bt cmp and sub je stc cmp call pushf mov bt add pusha lea jbe mov call jmp mov pusha mov movb pushf mov push pushf pusha movb lea jmp jmp pusha pusha jmp mov pushf lea jmp pushf mov jmp push pusha mov jmp jmp jmp pusha mov pushl lea jmp mov pushl pushf pushf lea jmp sub pusha movw call jmp jmp call mov pusha push mov push pushf mov mov pushf push lea jmp cmc rcl movzww pushf xor cmc call call jmp mov jmp jmp pushf call repz popl call call pusha mov push mov lea jmp jmp pushf mov movl pushf push pushf pushl ret lea push pusha call lea pusha pusha mov jmp call call push movw mov jmp test clc add pusha jmp push pushl popl push pushf mov lea jmp mov mov movw push mov pushl ret lea jne sar dec xor movsbw xorb call clc pusha clc mov pushl stc movb sub movb add movw mov pushf lea jmp mov pushf pushf lea jmp lea push pusha call pusha mov call pushf call pavgb adc lds adc adc add adc std rcll shl adc aaa mov adc jno adc hlt mov adc std out adc adc aaa mov adc rcl adc shl adc jl adc adc adc sub adc xchg adc shl adc hlt lds adc fsts adc (bad) adc aaa mov adc pop ret adc std out adc lds adc ficom adc fsts adc loopne adc rcll jp adc mov adc cld (bad) adc je adc mov loopne adc (bad) adc adc adc mov adc mov aam adc aam adc lret mov adc jl adc rcr adc mov adc je adc mov lds adc lds adc lds adc lret adc rcr adc loopne adc fstl adc ret xchg lret adc mov adc mov adc lahf fist adc jecxz adc adc add adc mov jecxz adc fsts adc adc bswap adc inc (bad) adc xchg lret adc shl adc add adc shl adc mov adc pavgb adc lds adc lret add adc je adc inc (bad) adc mov (bad) adc jl adc popf fsts adc adc mov (bad) adc mov adc jecxz adc hlt lds adc adc cld (bad) adc aaa mov adc jecxz adc hlt lds adc lret mov adc add adc cld xlat adc bswap adc jecxz adc adc adc inc (bad) adc pavgb adc fstl adc mov adc inc (bad) adc lahf fist adc mov adc inc (bad) adc jp adc std rcll mov adc pop ret adc hlt mov adc mov adc cld xlat adc popf fsts adc ret mov adc ljmp adc lds adc loopne adc adc pop lret adc rcr adc adc add adc pop lret adc pop lret adc xchg adc push out adc mov adc mov adc mov ret adc jno adc popf fsts adc xlat adc sub adc sbb adc adc addr16 adc mov rcll adc lds adc fist adc adc mov adc add adc xchg adc mov lds adc adc adc lahf fist adc mov adc xor adc mov adc jecxz adc je adc mov mov adc pop lret adc je adc add adc xlat fsts adc out adc fstl adc out adc adc mov xlat adc xor adc cld lds adc (bad) adc xchg adc cld lds adc out adc adc rcr adc adc loopne adc adc popa fist adc ret ljmp adc adc mov adc cld (bad) adc mov mov adc inc (bad) adc add adc shl adc xchg adc pavgb adc rcll inc (bad) adc rcl adc xor adc sbb adc lds adc rcll adc (bad) adc shl adc mov adc addr16 adc hlt lds adc jecxz adc ret adc pop ret adc jecxz adc hlt lds adc rclb mov adc sbb cmc btr xor mov bt pusha jmp mov pushf movb repz popl jmp push pusha mov push pusha mov call jmp rcr shld rcr movzbl neg call pusha pushf repz popl pushl lea push pusha mov pushf jmp bsr cmp pusha mov inc pushf shld stc mov stc jmp call mov call inc movsbw movsbw rol add xor pushf push mov jmp jmp call push call push movzbl cwtl lahf mov movb pushf mov push mov push movb lea jmp call pushl pushl movb mov push push movw mov pusha lea jmp clc push xor cmc clc cwtl mov bt sub push pushf mov mov mov movw pushl pushl push lea jmp cmc push mov bt bt push sub push jmp push lea ja lahf xadd aad mov jle daa shrd lea aaa das clc sub ror lea aas lea shl bswap lea and bsr mov sub lea mov mov bswap push mov pushf popl movsbw push not std mov bswap ja not pusha lea mov pushf call mov pushf repz popl jmp call mov pushl jmp call pushf inc pusha jmp bswap bswap pushf mov movb call push shl lea jle mov jge push pushf popl push pushl popl movb push lea jmp mov lea push pushf mov movb pushl lea jmp lea jns pushf mov call jmp mov pushf pushf pushf push lea jmp jmp add setp movb mov jmp ror rcl mov jmp xor call push lea jp pushf pushf pushf pusha jmp push pushl movb mov call mov mov pushf mov mov lea jmp jmp cld call mov movl push pushl pushl ret add call mov movw mov movb lea jmp repz popl movl jmp shl pusha mov push mov mov call xor jmp stc call mov push pusha call pushl mov pushl mov mov movb movb call call push lea jle cpuid jmp jmp mov pushf pushl pusha mov jmp call jmp push jmp pushf pushf mov jmp call pusha call shr pushl mov push movw pushf pushf popl pushf jmp stc shrd jmp bt cmp jmp mov pushf mov jmp inc bsf neg adc add cmc ror clc neg movsbw dec bswap sar add bts or mov cmc jl add jmp pushf jmp cmp jmp pushf popl pushf pushl pushf pushl popl movb pushf movl push lea jmp push mov call shr mov rol test mov cmc add pushf jmp mov not lea lea std push push mov pushf call cmc push jmp shr add btc mov cmc push sub movb call pushf mov pusha jmp bts dec jmp pushf pushf popl pushf jmp pushf call movsbw and bsr test mov adc shr mov jmp jmp mov pusha pushf mov mov push jmp movb test sub pushf shr pushf jmp pushf pushf popl pushl mov pushf pushl popl mov pusha pushf push lea jmp mov pushf lea jmp pusha pushf movw mov pusha pushl lea jmp jmp lea jne adc shld or ror mov bt pushf pushf and bt call shrd mov call setge mov mov jmp pushf pushf popl call ror pusha jmp mov mov call lea jne jmp cmp xor call mov jmp pusha mov call aad mov pusha sub stc pusha add lea js pushf pushf popl pusha pusha pushl popl movl lea jmp bt and mov push movl mov push call pushf jmp pusha mov mov push mov lea jo pushf mov pusha jmp bsr das mov sar dec bt bt mov pusha jmp jmp call lea jne shl dec mov clc stc cmc and pushf stc cmp pusha call lea not mov pusha call pusha mov mov movw repz popl jmp pusha not bt sub call pusha lea jae pushf jmp cmc movb add jmp pushf pushf mov pusha pushl pushf lea jmp mov mov pushf pushf pushf push lea jmp repz popl pushf lea push pusha call pushf pushf mov pushf push lea jmp call xchg movb pushf movl pushf call bt lea push stc add pushf movb pushl mov pushf lea jmp mov call mov push pushf lea jmp pushf pusha mov mov movb movb movb lea jmp mov push pushf mov call pushf mov pusha pusha pushf jmp mov jmp call shrd mov push add pusha push lea jmp pushl mov pushf push pushf pushf lea jmp jmp push mov mov pushf mov lea jmp pushf push push pushf mov movw jmp xchg mov adc pushl stc adc mov stc add push shld pusha mov mov jmp mov mov jmp mov pushf pushf lea jmp call pushf pusha movl pushf popl jmp pushl popl push pusha push movw lea jmp adc shrd rdtsc stc sub call mov push push lea jmp add add pushf push mov mov mov pusha movw push pushf lea jmp and test sub jmp pushf xchg test pusha mov cmc pushf stc sub pushf push lea jne test bt cmc xor jmp pusha mov pushl push mov lea jmp lea push pusha mov pushf pushf mov pushf mov pushf mov jmp stc shrd neg add movsbw xor xor lea btc xor movzbw mov not inc setbe ror movzbl call lea call dec mov or push bt mov pushf sub movb pushf call mov pushf pushf jmp push jmp stc xadd clc mov sar shl mov push cmp mov movw sub pusha call push pushf mov movb jmp pusha cmc add jmp mov mov call mov push movl pushl pushf mov pushf lea jmp rep shl or neg sub mov cld dec mov cld call movl lea push pushf pushf pushf mov movb pushf mov lea ja pushf mov pushf push jmp jmp pusha jmp std mov std movzbw lea jmp mov call mov pushf popl mov pushl popl pushf push pushf push lea jmp pushf movw pushf mov mov pusha push pushl ret jmp push push mov jmp bt add lea sete clc neg xor call popl pushf pushf movl lea jmp call pushf mov mov lea jmp push mov jmp mov movb lea jmp push call pushf pusha mov pushf movb push lea jmp jmp rcr bt lea call cmp sub jmp call pusha lea jns pusha lea cpuid cmc sub clc pushf cmpl movw call cmc or rcl movzbl pushf xor cmc movb sub movl neg call sub movl rol dec sub mov shl rcl add call push mov pusha mov mov mov jmp mov call bt cmp std popf pushf push lea jmp mov pushf lea jmp pushf mov pushl mov jmp clc add push push mov pushl lea jmp jmp bt call bt test shr bsf mov xor setno rcl push mov bt call pushf divl mov pushf mov pushf mov jmp push push pushl popl push pushl mov lea jmp mov jmp xorb lea pusha lea mov pusha lea jmp cmc cmc cmp pushf pushf pushl lea jne call sub push mov mov pushl pusha movb pushf lea jmp movb pushl mov mov movb jmp lea mov cwtl setno lahf mov pusha jmp pushl mov push jmp call lea push push mov call rol sar movzbw mov shr call mov bt or push pushl call pushf mov call mov pushf pushf mov mov push mov jmp pushf mov push call pusha mov mov pushf pushf lea jmp rcl rcr sbb mov bt pusha add mov pushf sub cmc pusha call push jmp pusha jmp movw repz popl mov call jmp movb pushl popl movl lea jmp pusha mov pusha lea jmp test or mov clc add pusha pushl mov movb mov lea jne mov pusha pusha lea jmp pusha pushf call mov push push pusha mov pushf jmp daa shrd mov not pushf adc push mov test sub bt jmp call mov jmp mov push mov pusha pushf lea jmp aas mov pushf shrd jmp mov pushf pushl lea jmp mov mov pushf pushf pushf movw lea jmp mov lea push call jmp push pushf pushf pushl popl pushf movb push pushl lea jmp movsbw xor mov jmp ror sub cmp xor movsbw stc xor or sub movsbw inc mov sub jnp push test add call mov pusha movw mov pushf mov mov mov jmp add clc ror push stc jmp jmp pushf mov call jmp jmp mov jmp stc add jmp bt clc xor mov bt pushf bt not cmc call add pusha pushf popl movl pushl popl pushf movw mov lea jmp and call bt sub call pusha mov mov pushl mov jmp mov bt cmc jmp push mov mov push lea jmp mov pushf pushf popl lea jl pusha mov movl pushl popl pusha pushl pushf push lea jmp mov jmp aam mov jmp mov call pusha cld mov rep not bt bsf mov pushf cmc inc mov std pushl popf pushf push lea jmp jmp movb mov call call pushl mov jmp xor clc xchg pusha jmp clc pushf add push push jmp call push pushf mov mov call pusha pusha lea jne pushf lea dec or xorb bswap pop call push mov call pushf jmp mov pusha pushl pusha lea jmp call jmp shr cltd cltd mov bswap sbb cwtl pop sar stc std pop adc xchg pop movzbl cltd pop shr bswap rdtsc pop sbb pop aas pop call neg sub movzbl and sbb xadd mov sbb not dec bt mov bsf bts add lea cmc movsbw mov setp clc sub movsbw push sar add shrd movzbw not rol neg neg stc test lea pushf xor cmp neg sub pushf movzbw movzbw dec movzbl not pushf pop mov movb pushl pushl inc call dec rcr rol lea inc bt bts xor btc neg push mov jmp mov mov mov jmp lea jbe mov call call pusha pushl popl pushf push movw pushl lea jmp pushf popl lea jge pusha mov movb pushl popl pushl pushf lea jmp pushf mov movb jmp push mov mov lea jmp pushf jmp std cld std push pushf mov call jmp repz popl pushf bt pushl add push bt push stc neg rcr push data16 (bad) or sub inc push sar mov push or push and xchg pushl rol cmc call sbb movzbl stc clc pushf mov xor bt cmc cmc add movb pushf bt bt sub test pushf clc bt neg call jmp movb mov call jmp cld call call pushf mov mov push jmp lea push call call setno mov jmp mov shld rcl mov pushf pushf pushl popf movb movw mov lea jmp cmc test cmp cmpl mov push pushf mov pusha mov jmp push mov mov call movsbw mov cmp clc add jmp cld mov rcl pushl popf bswap bswap mov pushf mov push pushl ret call cmc push cmc pushl popl test add jmp cmp add pusha mov pushf mov lea jmp sub push mov mov mov push movb movb lea jmp inc sub movsbw movzbl stc cmp mov jmp add pusha mov pusha push add cmp lea jmp pushf mov cmp pushf cmc add lea jle push mov pushl mov pushf push lea jmp call adc notl call repz popl jmp movb movw mov call pushl push mov movw pushl pushf lea jmp mov movb mov call mov pusha movb movl pushl lea jmp push mov pushf call mov mov movb mov mov mov lea jmp mov pushf pushf lea jmp call jmp pushl mov movb lea jmp pushl mov pushf mov lea jmp push lea jbe mov push pushf popl jmp cmp bt sub push push jmp add add add lock adc add mov cli add loopne add stc push add add add add popf mov add fisub add pop movsb add mov add movsb add daa movsl add dec movsl add jp add mov movsl add mulb add jo add xchg cmpsb add mov cmpsb add sub add jb add popf cmpsl add int add clc cmpsl add and add outsb test add test add test add pop test add mov add ljmp add stos add jns add lods stos add fildll add inc stos add outsl stos add mov stos add (bad) stos add daa lods add inc lods add jns add mov add jecxz add push lods add je add movsl lods add out lods add ds add outsb scas add lret scas add sti scas add inc scas add jne add out mov adc xor add dec adc 