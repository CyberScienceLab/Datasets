xchg pcmpgtd push xchg jo xor sub push xchg push push bound data16 adc add inc or data16 push in push data16 or mov mov push data16 add popfw dec push data16 lahf or data16 pcmpgtd les data16 jo ljmpw dec push data16 jge data16 or xchg xchg push data16 or data16 mov or and data16 pcmpgtd sbb xchg xchg pcmpgtd inc push data16 sbb mov pcmpgtd jne pop (bad) or pop push or data16 mov push data16 pcmpgtd add dec insb push add outsb add test data16 or data16 dec push mov data16 ja mov data16 mov adc jne dec mov data16 data16 outsb push data16 pcmpgtd out push inc xchg pcmpgtd sbb push data16 imul scas lahf or data16 add add add add and add inc add add add inc add xor add xor sbb xor stos xor in xor xchg inc add xor int inc add inc add inc add inc add add xor inc add add xor inc add xor inc add inc add ss add aaa inc add inc add inc add cmp and inc add cmp bound inc add cmp call cmp sub inc add cmp enter enter or inc add cmp test inc add cmp dec cmp dec cmp dec cmp jo inc add cmp add cmp add cmp add cmp add cmp add cmp add inc add add add ds add inc add inc add inc add aas inc add inc add inc add inc add aas inc add aas inc add aas inc add inc inc add inc inc add inc inc add inc add inc add inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc inc add inc add inc add inc add inc inc add inc inc add inc add inc inc add inc inc add inc inc add inc inc add inc add inc inc add inc add inc add inc add inc add add dec inc add dec inc add dec inc add add dec inc add dec inc add dec inc add dec inc add inc add dec inc add inc add inc add inc add dec inc add dec inc add dec inc add dec inc add dec inc add dec inc add dec inc add dec inc add dec inc add dec inc add inc add inc add inc add dec inc add inc add inc add push inc add push inc add push inc add inc add push inc add push inc add push inc add push inc add push inc add push inc add push inc add add add inc add push inc add push inc add push inc add push inc add push inc add push inc add push inc add push inc add push inc add inc add inc add inc add push inc add inc add inc add add push inc add push inc add push inc add push inc add inc add push inc add inc add inc add inc add pop inc add inc add inc add inc add pop inc add pop inc add pop inc add pop inc add pop inc add pop inc add pop inc add pop inc add pop inc add pop inc add inc add pop inc add pop inc add inc add pop inc add pop inc add pop inc add inc add inc add inc add inc add pop inc add pop inc add pop inc add pop inc add pop inc add pusha inc add inc add inc add popa inc add popa inc add bound add add inc add inc add bound or add arpl jp inc add arpl mov arpl loop inc add arpl cld arpl ret add fs add inc add inc add inc add inc add add aas add add test insb inc push add add add sbb add imul out sahf jno push add add add movsb insb inc add and jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp add push call add add add xor add inc add add add add sysret xor mov mov cmpsl jo add add add add add dec add inc addl gs outsb je add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add inc add add add and pop sbb add pop add inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add sub sbb add pusha and xchg sbb add sbb dec and add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add inc add (bad) inc add add add jne int3 sbb add adc dec and add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add daa inc add add add or add inc add add add inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add inc add add add or cmp inc add add dec and add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add add addb add add or je inc add add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add inc add add add or lods sbb add push add inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add inc add add add or add in inc add add add inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add and inc add add add add add inc add add add inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add inc add addl mov add add add add add inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add add addl cmp add mov inc add add add inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add add inc add add add or add les inc add add add inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add inc add add add jbe cld sbb add or dec and add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add es add inc add add add add add inc add add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add inc add inc add add add or add add add add inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add inc add add add jbe movsb sbb add str inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add or add sbb add adc dec and add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add inc add add add or adc inc add add add inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add daa inc add addl clc or dec sbb add add add inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add inc add addl cmp add adc dec and add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add add addl fmuls add sbb dec and add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add sub push add add and hlt sbb add add add inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add inc add add add and sub inc add add add inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add inc add add add and fs sbb dec and add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add add inc add add add jne pushf sbb sbb dec and add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add add (bad) inc add add add and aam inc add add add inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add and add addb add add inc add inc add or sbb add (bad) decl (bad) incl add add outsb jne add add add xor (bad) decl (bad) incl add add gs mov add add add sub add add add add add add jo inc add add add add call add add add inc xor add add add xor add add add add add inc add add add xor pop add add xor pop add add inc add add add xor pop add add xor pop add add inc add add add xor push inc xor add or or add add add xor or inc add sti hlt add (bad) (bad) decl add add add add add add add add add inc add pop inc add add addl add mov add push outsl outsl insb insb gs add insb je addr16 jb outsb je add add push add add xor dec sahf jae sub js cli addb add add add add add imul push add add mov inc xchg add or add add subb add lds add add add push add add dec and add add add das inc add (bad) (bad) incl add add inc add add add or jl inc add add add add add add add add add add andb add add test inc add add add inc add add add add add inc add pop add add movsb sub (bad) (bad) (bad) incl add add add add inc add test mov inc add (bad) (bad) incl add cmp add xor inc add add add test inc sub add add add add cmp add xor inc add add add and clc test dec sub add add add add inc add add inc add add add and clc test push sub add add add add add inc add pop inc add pop inc add inc add pop inc add pop inc add and add inc add pop inc add pop inc add and add inc add pop inc add pop inc add add add add add inc add add add insl inc add add or inc add addb add add add add add add add xor (bad) (bad) (bad) incl add add inc add xchg pop pop scas jne inc mov or xchg or sbb add add pop sub or add add add add add add add inc add (bad) (bad) lcall add inc add add add or (bad) incl add add add inc inc add (bad) (bad) pushl add add sub add add sbb jbe (bad) incl add add add sbb (bad) (bad) call add add addb add add sub add add add add incl add addb add add add inc add (bad) (bad) (bad) mov add add addb add add inc add incl add addb add add cmp inc add (bad) (bad) (bad) mov add add addb add add sub (bad) incl add addb add add je inc add (bad) (bad) (bad) mov add add addl inc sub (bad) incl add addb add add lods sbb (bad) (bad) (bad) (bad) mov add add addl push sub (bad) incl add addb add add in inc add (bad) (bad) (bad) mov add add addl pop sub (bad) incl add addb add add sbb inc add (bad) (bad) (bad) mov add add addl sub (bad) incl add addb add add push sbb (bad) (bad) (bad) (bad) mov add add inc add add add add incl add addb add add mov inc add (bad) (bad) (bad) mov add add inc add add add add incl add addb add add les inc add (bad) (bad) (bad) mov add add inc add add add add add add (bad) incl add addb add add cld sbb (bad) (bad) (bad) (bad) mov add add inc add add add add add add (bad) incl add addb add add xor inc add (bad) (bad) (bad) mov add add add add add add add (bad) incl add addb add add insb sbb (bad) (bad) (bad) (bad) mov add add add add add add add (bad) incl add addb add add movsb sbb (bad) (bad) (bad) (bad) mov add add add add add add add (bad) incl add addb add add fcompl inc add (bad) (bad) (bad) mov add add add add add add add add incl add addb add add int3 sbb (bad) (bad) (bad) (bad) mov add add addl les inc add incl add addb add add adc inc add (bad) (bad) (bad) mov add add addl aam inc add incl add addb add add dec sbb add (bad) (bad) (bad) mov add add addl loopne inc add incl add addb add add test add (bad) (bad) (bad) mov add add addl in sub (bad) incl add addb add add and inc add (bad) (bad) (bad) mov add add (bad) inc add add add sub (bad) incl add addb add add hlt sbb add (bad) (bad) (bad) mov add add (bad) inc add add add sub (bad) incl add addb add add pop sbb (bad) (bad) (bad) (bad) mov add add (bad) inc add add add sub (bad) incl add addb add add xchg sbb (bad) (bad) (bad) (bad) mov add add (bad) inc add add add inc add incl add addb add add pushf sbb (bad) (bad) mov add add inc add add add sub (bad) incl add addb add add fs (bad) (bad) mov add add inc add add add sub (bad) incl add addb add add sub inc add (bad) (bad) (bad) mov add add inc add add add inc add incl add addb add add mov (bad) (bad) (bad) mov add add inc add add add inc add incl add addb add add dec imul outsl fs dec jb imul push jae popa add inc imul outsl cmp add jb popa imul popa cmp inc imul jns add dec popa outsb imul add push outsl bound add add gs add add je arpl inc popa je push imul inc outsb arpl jb add imul jae push je insb outsl insl jns outsl imul jb push gs add ja bound outsl outsb aaa add jb jne popa jb jp xor add dec imul jns add dec insl jo jae imul outsb fs outsl outsb imul add dec popa imul insl add outsb insb cmp inc outsl jne popa push add inc jns outsl jo jns imul arpl imul add dec jb push jae add add add dec jbe insb insb jns add js add add push gs outsb je add add pop ss fdivl sahf sti fcompl psubsb sbb lods mov das inc pushf xchg sbb imul mov dec sahf jae sub js cli jo (bad) mov das mov pusha (bad) sub loopne enter xor or stos add xchg inc outsl jb add add cs push add xor inc cmp outsl addr16 insl and insb gs sub sub arpl jae data16 push imul je imul pop push inc ss dec inc add add mov add add add add add add sub or add add inc jb sub xor or stos add xchg push imul push imul push imul or dec add xchg loope fiadd inc mov sub jecxz arpl dec mov jg mov dec mov inc xchg add or out aam dec cmpsb dec mov imul fimull xor or stos add xchg inc outsl ja jb add sbb xor or stos add xchg inc jne gs outsl outsb outsl imul dec jne jb add add dec lods xor or stos add xchg inc popa bound fs push aaa add add arpl popa insl xor add add dec lods xor or stos add xchg dec jne je jae outsl jb gs add repnz lods xor or stos add xchg inc jae imul lods xor or stos add xchg push jb insb insb imul cli dec lods xor or stos add xchg push gs imul add inc outsb imul add xchg dec lods xor or stos add xchg dec outsl outsb jo outsl je imul bound insb je ja add add ljmp adc pusha rcll fs inc push addr16 insb gs add add inc fs add dec popa jae ja outsl cmp add inc gs je bound je add add bound xor or stos add xchg inc insb gs add push outsl insb imul add dec outsb jae outsb jne je outsb add jb xor outsb je jb outsb add dec lods xor or stos add xchg dec popa jb outsl insb fs add push jb jbe insb gs add jne push add add bound fs insl outsb je add add dec lods xor or stos add xchg push push insl jo add add fs je outsb xor add push outsb outsl bound outsl insl gs add jo imul popa insb popaw jb push jne jne je popa jb add jo xor add jb gs outsb xor add je jb outsl jne add inc jb outsb arpl je jae add arpl gs add inc imul jae xor inc push outsl data16 add inc data16 aaa add popa insb insb imul inc imul push gs insb jne insb jns add inc imul add add imul xor inc jo gs add dec arpl gs add push gs imul add ja jb jo push data16 imul inc gs insb insb imul outsb popa jo gs add gs jb arpl insb jns add add jb bound jae popa xor add add add add jb insl jns outsl jne cmp add add imul add inc popa jb popa outsb imul push outsl insb outsb outsl jae gs imul outsb je ja insb imul jne popa jae imul jne gs outsb je add popa jae imul inc insb gs gs add push outsb addr16 imul add insb popa outsb arpl insb add dec popa jb imul add je popa outsb outsb add add dec popa insb imul outsb fs push push insb add popa insb jne add push gs gs gs imul add add add add add add xor add add xor add or adc add add adc add or or add add or add or imul cs add add push add add fs outsl outsb imul add in inc add xor add add pusha mov mov or je jmp push mov call jmp add add inc push inc push dec xor cs dec dec add add pop add add popa outsb addr16 gs imul imul add add inc xor push xor add add insb mov mov or je jmp push mov call jmp add add add add jb imul insb insb add add add inc gs imul outsl outsb dec outsb outsw inc add xor add add js inc add or je jmp push mov call jmp add add add add jb jne jb push popa insb jne inc add test inc add xor add add test add add add mov or je jmp push mov call jmp add add add add jb gs xor add add push add add insb dec outsl jbe dec gs outsl jb add add inc add inc add add nop mov mov or je jmp push mov call jmp add add add add je imul outsl outsb dec outsb outsw push imul inc add add pushf mov mov or je jmp push mov call jmp add add add add gs xor add add inc outsb jne push imul popa je outsl outsb jae add add add add jae add add clc xor add inc add add test inc add or je jmp push mov call jmp add add add add je jns je insl dec outsb jne add clc xor pusha xor add add mov inc add or je jmp push mov call jmp add add gs jne jae jb outsl jae add add xor test inc add add rorb add add add or je jmp push mov call jmp add add add add arpl outsl jo jo outsb jne add xor lock add add int3 mov mov or je jmp push mov call jmp add add add inc gs jb jns outsb jne clc xor cmp add add fmuls add add add mov or je jmp push mov call jmp add add add add gs je push outsl jo jo outsb jne clc xor jl inc add add in inc add or je jmp push mov call jmp add add add inc jo outsb fs outsb jne add add add outsl add popa add push add add add xor les add add lock mov or je jmp push mov call jmp add add add add popa jb outsl ja jb add clc xor and add cld mov mov or je jmp push mov call jmp add add add add popa jb jo gs add clc xor fs add or add add add mov or je jmp push mov call jmp add add add push popa je dec popa insl gs inc xor push xor test inc add add adc inc add or je jmp push mov call jmp add add add add add add add add add add add add add add add add add add add add add stos xchg add add add add add add push add add add add add jae and imul popa add add add je and and add add or add inc add jb imul add add add adc add inc add jb add popa add imul add add jne add add add add inc add imul popa add imul xor add add push add add add add add add add push add add jb imul inc add jae insl add add outsb add insb add add add add add add add add add add add add add outsb add jne outsb add je imul add add add add jne jp outsl add add add add add add add je imul add adc add inc add arpl popa add add js add add add push add add jne add add jb add inc add add imul insb add xor add add push add add add imul insl add outsl add jae add adc add push add add je add outsb add add add outsb add jae imul add insb add add push add add outsb add je imul outsb add jae jae add or add inc add add add add add add add add add add add popa add jne add add add add popa add jne jo data16 add add add add push add je add add add add add add data16 add add add add popa add popa add add add or add dec add insb add add add push add imul imul add add sbb add dec add je jb outsl add add imul je xor add adc add inc add add imul add jae push add add add add add jb jns xor add or add push add add add add add inc add add add add add inc add insb add imul add jo popa add add add or add dec add jae push add add add add add popa add add jb jne xor add add push add insb add add push add add jne insb add add jne insb add xor add add add outsl add add add popa add add add add insl add outsb add imul add add add add jne insb add je add add add add add add popa add add bound imul add add add add add arpl add add push add outsb add add add add outsb add outsl add insb add add xor add add adc add inc add add add add jb imul add add add add jb imul add push add jo push add jae popa add arpl add sbb add inc add outsb add popa add add popa add add add add add add popa add add je outsl add imul add inc add outsl add add jb popa add add add inc add imul xor add add add imul imul add adc add inc add add imul add add add add add outsl add push add jne jae add or add inc add add add add add adc add dec add outsb add outsb add insl add add add dec add add imul add add add add add outsb add add add arpl imul add or add dec add add outsb add add jb imul je outsl add insb add add add add add add add imul add arpl imul add add add dec add insb add outsb add insl add arpl xor add add dec add jbe popa add add push popa add add add add outsl add jae je jne jo jb popa add add add add add popa add jne outsb add jae add add add add push add arpl imul add add add add add add imul je bound add add add add add add imul jne insb add add add add add add imul ja popa add add add add add js popa add add add add outsl add je imul popa add insb add aaa add add add add push add jae jae ja add add add imul popa add add add adc add dec add imul outsb add imul add add sbb add push add jae je jae popa add jbe imul add add add insb add jae bound outsl add add add push add add ja outsb add outsb add add add add add popa add add popa add insb add add push add add jne add add outsb add insb add xor add add outsl add je jae jne jo jo insb add xor add push add add jne insb add add imul outsb add insl add cmp and add add add add mov add add jns add push add add add add insl add je jb jns xor add push add add add outsl add jae je jb popa add je add push add add je add popa add outsl add jae imul add add add add jne bound insb add outsb add je add add dec sbb mov cmp add add add mov sbb add inc add arpl push add jae jae add xor add add push add outsl add add add add add add add add dec add and push add jb jae imul and dec add data16 and popa add popa add insb add bound insb add and add add adc add inc add push add add xor add add add add add sub add xor xor add sbb add dec add das add add add add dec add add add add add push add add add add add dec add add add add add push add add xor xor add add push add add outsb add outsb add ja outsb add add add add jo jo add push add add add add add inc add imul jb add add push add add jb imul add and add jbe add sbb add dec add jns bound outsl add jb add add add add add sbb add dec add outsb add jne popa add add add add add add push add add add jo insb add jns and add jbe add adc add dec add jne jae add add add add push add add add add jb imul add add add adc add push add jae je add and add jbe add add push add add outsb add je popa add add bound insb add add adc add push add jne outsb add add add add adc add inc add insl add and add jbe add add or add inc add outsb add add add add add popa add je add and inc add outsb add add add add add je outsl add and inc add outsb add add add add add add add add add outsl add je add push add add js inc add add add add add add push add add je jb outsl add bound imul jb insl add add add add inc inc ss dec dec add add pop pop jbe popa dec outsb push popa jb pop pop jbe popa push popa jb imul pop jbe popa dec bound outsb add jbe popa push gs popa jb jb add pop pop jbe popa push bound outsb add jbe popa inc jb gs je dec imul pop pop jbe popa push je inc popa je pop pop jbe popa inc jb outsl jb jbe jb insb outsl ja add add add jbe popa dec popa je dec gs inc popa insb insb add add pop pop jbe popa dec bound gs fs data16 add jbe popa dec bound gs pop pop jbe popa inc jo xor add pop pop jbe popa push popa jb jae inc jno add pop pop jbe popa dec jae je imul pop jbe popa push dec xor add pop pop jbe popa push je inc insl jo pop pop jbe popa push cmp je xor add add jbe popa inc jb gs popa jb imul pop pop jbe popa inc jb gs bound add add jbe popa dec popa je dec fs popa insb insb dec add add jbe popa dec xor popa jb add jbe popa push jb outsb je bound add pop pop jbe popa push popa jb fs jbe popa push je push popa jb outsl jbe add jbe popa push je dec outsl jbe add add pop pop jbe popa push popa jb outsl jo add add pop pop jbe popa push je push outsl push outsb imul add jbe popa dec outsb inc jb outsl jb add add jbe popa push popa jb outsl jbe add add pop pop jbe popa inc jb gs popa jb add add jbe popa dec popa je dec gs inc popa insb insb dec add pop pop jbe popa inc jns popa jb add jbe popa inc jb gs je add add pop pop jbe popa push je push outsl inc outsb jae add pop pop jbe popa push je inc outsl jo add add pop pop jbe popa dec jb jae insb je push bound add add jbe popa dec gs add add jbe popa push gs jns je insl inc jb outsl jb or or add add dec and add add add xor (bad) (bad) (bad) incl add add and add inc add add add add add inc add add add inc add add add inc add add add inc add add add add add dec inc inc add add add dec inc add inc add add add inc add add add add test inc add add add dec inc add test mov add add or cmp add shrb cmp add cmp add test shrb add add add or cmp add shrb xor add add add add inc add test loopne inc add add add add call add add test clc sub add add add add inc add add inc add add add push inc add test add add inc add add add test inc add add add add add inc add test or inc add add add sub add xchg push inc add test sub add inc add add add cmp add add add xor dec sub add inc add add add inc add add pop push inc add xor pusha sub add inc add add add insb sub add aam inc add xor jl inc add add inc add add sub add sub add test mov add inc add add add xchg push inc add xor movsb sub add inc add add add (bad) incl add add add add push inc add test mov inc add (bad) (bad) incl add push sub add add je inc add test mov inc add add inc add add sub add nop push inc add sub add inc add add add cmp add fcoml dec test fsubrs add inc add add add cmp add xor call add add or add add test add xor hlt sub add inc add add sub add rclb add test add inc add add inc add add cs add add add inc add cs add add add adc test add call add add xor sub inc add add add add mov add xor inc add add add inc add test xor inc add add add sbb mov add push sub add sub add xor inc cs add add add sub add mov test dec cs add add add adc xchg add add inc add add or inc add cs add add inc add add sub add add add inc add test insb cs add add add or add sub add rcrb add cs add add inc add add sub add add sbb inc add test test inc add add inc add add inc add add add add add add cs add add add sub add add add pop inc add test mov inc add add add or lods add add sub add add add add add inc add test mov add add sbb mov add push sub add sbbb pop test enter dec add add adc mov add cmp add clc pop inc add xor aam inc add add inc add add cs add add add add cs add add add or add sub add mov test call add add or add sub add add inc add cs add add add adc les add push cs add add push pop inc add cs add add inc add add add add inc add add add xor or inc add add add push add add add cs add add add xor adc inc add add add adc rolb add xchg cs add add add xor and inc add add add lldt add add add add add pop inc add xor sub inc add add add ltr add add add add add add xor cmp inc add add add push add add add cs add add add test inc das inc add add add adc loopne add push cs add add sbb add das inc add add inc add add add jl inc add xor push das inc add add add or add add enter js xor pusha das inc add add add adc in add add inc add add adc inc add das inc add add inc add add add add inc add add js inc add das inc add add inc add add add add add add pusha inc add test jl inc add add add or add add cmp inc add xor test inc add add add adc cld add add add add test nop das inc add add add adc add add test inc add add call test pushf das inc add add inc add add add push sub add dec bound pop test movsb das inc add add add str add add add add add bound push das inc add add add push add add adc inc add add add inc add das inc add add add or adc add shrb xor add test add test enter xor add inc add add add les add xor fsubrl inc add add add add add inc add add add fs add test in das inc add add add or add sub add sub inc add das inc add add inc add add add add sub add add js inc add test add inc add add inc add add add shrb and add fsubs sbb inc add add add adc add sub add sbb add test and inc add add add verw add insb sub add test add xor sub inc add add add adc xor add push cs add add fsubs add xor push add add adc xor add push cs add add add inc add xor or add inc add add sub add mov test push xor dec add add add cmp add xor inc add add add inc add test pop xor xor add inc add add add cmp add sub add xor push add add sbb inc add add inc add add add xor je inc add add add or add sub add cld addr16 add xor cmp add inc add add add add add add add add inc add xor mov inc add add add add pushf push xor nop xor inc add add adc push add add sub add add add push xor cwtl xor daa add add sbb pop add add inc add add inc add xor mov add add add add inc add inc inc add pop inc add pop inc add inc add inc inc add pop inc add pop inc add inc inc add pop inc add pop inc add inc inc add inc inc add pop inc add pop inc add inc inc add inc inc add pop inc add pop inc add inc inc add inc inc add pop inc add pop inc add inc inc add inc inc add pop inc add pop inc add inc add inc inc add pop inc add pop inc add inc inc add pop inc add pop inc add inc inc add pop inc add pop inc add inc inc add inc inc add pop inc add pop inc add inc inc add inc inc add pop inc add pop inc add inc inc add inc inc add pop inc add pop inc add inc add inc inc add pop inc add pop inc add inc add inc inc add pop inc add pop inc add inc inc add pop inc add pop inc add inc inc add inc inc add pop inc add pop inc add inc inc add inc inc add pop inc add pop inc add inc inc add inc inc add pop inc add pop inc add inc add inc inc add pop inc add pop inc add inc add inc inc add pop inc add pop inc add inc inc add pop inc add pop inc add inc inc add pop inc add pop inc add inc inc add inc inc add pop inc add pop inc add dec inc add inc inc add pop inc add pop inc add dec inc add inc inc add pop inc add pop inc add inc add inc inc add pop inc add pop inc add inc inc add pop inc add pop inc add inc inc add pop inc add pop inc add dec inc add inc inc add pop inc add pop inc add dec inc add inc inc add pop inc add pop inc add dec inc add inc inc add pop inc add pop inc add inc add inc inc add pop inc add pop inc add inc add inc inc add pop inc add pop inc add inc inc add pop inc add pop inc add dec inc add inc inc add pop inc add pop inc add dec inc add inc inc add pop inc add pop inc add dec inc add inc inc add pop inc add pop inc add dec inc add inc inc add pop inc add pop inc add inc add inc inc add pop inc add pop inc add inc inc add pop inc add pop inc add inc inc add pop inc add pop inc add dec inc add inc inc add pop inc add pop inc add dec inc add inc inc add pop inc add pop inc add dec inc add inc inc add pop inc add pop inc add inc add inc inc add pop inc add pop inc add inc add inc inc add pop inc add pop inc add inc inc add pop inc add pop inc add dec inc add inc inc add pop inc add pop inc add dec inc add inc inc add pop inc add pop inc add dec inc add inc inc add pop inc add pop inc add inc add inc inc add pop inc add pop inc add inc add inc inc add pop inc add pop inc add inc inc add pop inc add pop inc add inc inc add pop inc add pop inc add dec inc add inc inc add pop inc add pop inc add dec inc add inc inc add pop inc add pop inc add dec inc add inc inc add pop inc add pop inc add inc add inc inc add pop inc add pop inc add inc inc add pop inc add pop inc add inc inc add pop inc add pop inc add dec inc add inc inc add pop inc add pop inc add dec inc add inc inc add pop inc add pop inc add dec inc add inc inc add pop inc add pop inc add inc add inc inc add pop inc add pop inc add inc add inc inc add pop inc add pop inc add inc inc add pop inc add pop inc add dec inc add inc inc add pop inc add pop inc add dec inc add inc inc add pop inc add pop inc add dec inc add inc inc add pop inc add pop inc add dec inc add inc inc add pop inc add pop inc add inc add inc inc add pop inc add pop inc add inc inc add pop inc add pop inc add inc inc add pop inc add pop inc add int3 xor add xor dec sahf jae sub js cli add js fdivl sahf sti fcompl psubsb cmp xor or stos add xchg scas add add add or dec imul outsl fs or jb outsl gs outsb jns add add inc add add (bad) (bad) (bad) jmp add outsl gs outsb jns add xor or add pop add inc add incl sbb add add add gs xor or test pop adc add add add add pop add gs xor add pop add incl sbb add add add gs xor or push or add das add add dec xor push add mov inc xchg add or aaa fiadd inc mov sub xor or stos add xchg mov add mov add add imul dec je jae insb gs jae jae add add inc add xchg add push add add add add add add add add add adc add add dec mov add lods push push push outsb jmp loopne mov roll push inc int sbb mov je mulb cli out in ss shr mov sbb dec jno ret jo cmp ret std pop push mov outsl dec xor add mov xor adc test pop imul dec push jbe lds cmp xchg jl jle cltd rorl mov int3 insl dec pop (bad) repz inc inc das push pop sub daa dec mov fs popa push push stos pushf pop push popl pop xchg pop mov dec lcall data16 fcmovnbe mov jle lahf (bad) adc cwtl xchg lods pop test hlt pusha cmp xor mov jge lret loope cld leave and cmpsb push sbb gs jg stos cmp fnstcw sub pop lods push add adc mov mov scas (bad) xchg jecxz mov ret mov aad divb bound ss (bad) jno mov dec jbe ret fsubrl pop push ret std or xor cmp mov xor inc insb mov imul dec push pop dec (bad) mov scas cmp and cltd sub sarl insl dec scas (bad) repz inc inc pop push pop aas movsb push das jae sub dec inc (bad) xor popa xchg push stos js push push add (bad) xchg pop add dec pop ljmp adc fcmovnbe imul or mov nop cwtl pusha cmp xor mov ja lret loope cld leave test xchg or push inc xchg outsl adc push stos arpl sbb add (bad) jge jmp (bad) jb mov and out cmp push pop xchg xlat (bad) cmpsl cmpsb sbb fsubp jl daa cmp mov pop sub mov push in dec pop xchg imul cli lods cmp xchg into adc (bad) or and add pop add pop mov cmp ja,pn lahf adc clc mov insb mov add dec add test mov dec das aaa inc pop std adc and push sbbl inc mov pop fistpll dec out jns dec test pop mov fcmovnb pop push outsb stc lret out mov popf add dec cwtl imul loop nop mov movsl mov in cltd adc mov inc xchg lcall sub arpl sbb add (bad) stos lahf jmp (bad) jb mov xor mov (bad) scas and push pop ljmp rcr jl sbb popa out pusha daa sub mov pop in dec inc xchg imul pop cmp sub into lods ret movl stos add pop pop mov cmc data16 mov mov clc ja insb adc mov add xchg add pop ds mov das aaa xor xchg inc xor pop aas lods mov sbbl inc fwait mov push jg mov jns dec test pop cmp fstpt lret les out add dec cwtl and sub and nop orl loop movsl mov in mov or push inc outsl lea adc push stos bound pushf inc bnd das pop fnstcw sbb or lods iret mov icebp scas arpl loop mov push in insl cmp xlat pop aam sbb or xlat push cmp lock sbb jecxz mov je fwait sbbb push std fsubrl mov push inc repz bound mov push in rcll cmpsb daa fwait inc pop imul stos mov outsb int adc addr16 ja les xchg inc dec inc outsl (bad) out rorl xorl mov js dec insb jns lcall clc sti hlt mov sub fidiv mov cltd adc adc add (bad) cmp inc popa mov mov lahf inc (bad) pop orl fistl and jb,pt or lods iret sbb mov mov cmc fist aam sbb or lock jecxz mov je cld sbbb push sub push mov std inc repz bound (bad) mov xor mov in rcll cmpsb daa into inc pop sub imul outsb int adc lea ja addr16 cs dec les xchg push roll out mov lret cwtl push ss out aaa adc insb jns lcall clc or mov roll fidivr mov cltd adc adc add (bad) sbb inc xchg popa lret stc lahf mov pop inc fistl and jb,pt or fxch sbb data16 adc scas arpl loop cmc fist pop sub mull loopne (bad) pushf sub pop orl xchg insl fs jo sbb inc dec adc int3 jecxz cmpsl push inc xor movsb sub jl and pop push test dec ret pop mov cmp xchg stos xchg outsb and mov fdivrl insb rolb push push aas push cmp xorl pop int inc mov jno mov es adc imul sti fidivr and jmp (bad) xor push sub mov nop inc mov add icebp mov fnstenv mov sub jne (bad) lods mov xor xor mov and leave cs clc rcrb repz push fcom sub iret inc fstpl in pop les test idiv movl pushf addb sbb insl rorb mov dec inc out int3 pop out adc jecxz sub lret das and and push aad dec ret test pop mov push pop test outsb and mov jge,pt mov push insb push addr16 mov aas xorl pop push xlat inc mov je inc jno mov es lahf mov imul test in xor push sub mov outsl inc mov add icebp lea mov mov jne cmpsb lods mov xor xor cmp and negb (bad) repz push fadds sub sahf inc fst sub iret pop les test cld jb mov mov loopne or roll sbbl cli (bad) lret jge repnz ret xchg xchg flds hlt jnp push (bad) sub sbb test je or pop std inc (bad) outsl loope enter pop ds orl jns outsb gs cs or out int call lock out jge and imul (bad) adc scas dec les rorb push cmp (bad) pop stos rcrb aas lret jb fnstsw insl roll push pop push cld pop imul icebp mov pusha mov inc mov jae push pop push xlat adc push es cld fistpll sbb in xor adc adc test mov inc inc mov mov jne fidivl mov jbe nop scas ja fsubr or mov aaa int3 sbbl and lret das or cli ret xchg xchg push add loop push (bad) sub sbb test lds or pop std je outsl clc add inc jmp pop orl jns outsb gs nopl out int call in out jge lock jmp cmp and (bad) dec les push sbb or lods (bad) sub ror fwait xchg jb aas jle mov push insl pop imul cmp pusha push fadds cmp mov daa pushw xlat push add adc push mov and in in xor adc adc iret cmpsb jp mov jo inc pop mov xchg dec add (bad) fldt jg mov ficoml mov jbe cmpsl scas ja fsubr nop xor aaa int3 test cmp mov ljmp mov rolb imul (bad) divl out fs call sub out clc dec fnstcw dec cs lds cmp pop jo jl hlt or add and fcom add js push fcoml pop pop sub movb aas inc or sub pushf jg push ret test shrl mov int inc pop rcrl adc psraw movsl push inc xor mov arpl pop push pop (bad) pop (bad) lock push push add pop xchg jnp xor push jmp fldln2 aad and faddl mov pop mov xchg cltd xchg ds test (bad) xor js lret sbb jecxz jb xchg gs stos and push xchg inc addr16 fiaddl out and daa add lea lods push and ljmp mov rolb imul (bad) xor or jne fs call pop shr mov cs lds cmp (bad) (bad) pop push movsb jl hlt or add mov icebp and push (bad) adc fcompl in add mov cmp or fidivr lcall das mov int push pop (bad) cmc inc dec inc in mulps movsl adc loope sub enter gs arpl lods pop rcll dec push movl push mov dec push jmp fldln2 shrb or aad and pop add add cltd xchg push test (bad) xor js xchg sbb repz lret xchg gs lret cmpsl adc stos xchg inc popf in push sbbl and jmp sbb adc mov mov insl addl inc leave ret sbb or jne mov sti jbe out fs sbb call pop sub push push cltd push test lods dec das cmp aam daa and test and pop xor inc pop adc xor cmc outsl in loopne iret cmp cvtps2pi pop mov bnd pop sahf jg icebp and aas mov inc sbb xorb rcrb stos gs ret test (bad) mov jl inc xor mov stos mov inc or cmp (bad) lcall nop bound rol mov and mov scas cs mov (bad) xchg dec ficoml int xchg (bad) (bad) into xchg push cld or pop sub movsb mov mov dec adcl sbb loope add lcall lock cmp (bad) sbb addr16 add sub push mov repz dec das mov cmp cmp test adc pop xor cmpsl adc inc jno mov cmc xor iret outsl je loopne sub int3 scas jp repnz pop jmp std sahf jne icebp mov inc sbb xorb rclb stos clc xchg ret test (bad) mov jl inc xor mov stos mov inc or cmp out mov (bad) insl nop fldenv xchg ret mov and sar dec outsb adc (bad) xchg ficoml int dec (bad) (bad) jb push xchg or pop sub movsb push dec sbb mov dec sbbl jmp sub ja mov and repz pop lock dec movsl movsl sub push addr16 add call pop sub mov repz cltd das mov cmp sub sbb add hlt clc je adc divb jnp add and mov pop sbb (bad) lahf push loop mov fisubrl mov loope pusha push dec lds arpl ret lcall push (bad) jbe int3 jp aaa insb es adc xor or stc or sub cmc rolb fistpll and mov mov sbbl mov pop adc xchg jmp popl test ljmp mov mov mov sbb xchg inc pop or xchg lods cmp sub or aas sbb or scas lea repnz fs push out sub xchg sbb inc sbb outsl push adc or fcoms dec icebp dec sbb pop imul std mov jne pushf ds sub les sbb je adc mulb lea dec add and out aam rcrb sub (bad) sbb mov fisubrl mov loope in push pusha lds or jo call lcall repz jbe out adc xor or stos or stc cld cmc mov sub and fbstp mov push pop (bad) mov pop adc xchg jmp popl sahf push ljmp inc bound mov mov pop sbb xchg lods cmp sub int aas jae or scas lea cmpsl roll repnz mov mul sbb sub jg outsl fcoms dec icebp adc imul in mov jne std ds jle les pcmpeqb add mulb adc lea popa daa jnp out and mov scas int push or out pop pop push ljmp lds sub sbb mov and add jae ss cltd xor jge push out sub aad rcll push sub pop add mov fldt nop sub imul xor ret dec jb jmp lcall hlt cmp call mov stos push outsl js pushf mov icebp lea mov loopne fucomp and mov mov (bad) pop mov mov pusha adc xchg add inc enter mov xor sti sbb leave xchg inc or add xchg scas cmp das and faddl mov movsb test iret ret and adc (bad) inc sbb fadds cli or pop insb push ljmp mov xchg lds sbb mov loopne add cltd add ss push xor sub movsb out aad rcll shrl in add daa mov cmp jecxz lods movsl xor nop sub imul xor push add dec jb jmp fwait push inc mov int hlt cmp call mov and cmp js lock (bad) lea call sti loopne mov lret (bad) pop cmp mov pusha adc xchg add inc enter inc pop mov rorb leave sbb sbb xchg scas cmp das and faddl mov xlat test rol rep and adc (bad) sub xchg xchg adc fsts or pop insb dec ljmp mov xchg lds sbb shrb add cmp and insl cmp pop mov push aad out push sbb sbb rcrl sti lret sbb adcb push pop and and divb mov xor mov addr16 pop shlb adc sub push out xor fsubrs shrb fist stos test sub movsl xchg inc add push hlt popl jbe mov in test in xchg mov or test sub repz pop xor mov jle scas adc cwtl xchg mov pushf aam movsb roll (bad) sbb xchg stc pusha add jo mov pop aas or (bad) dec dec inc fistl and sbbl iret mov lock arpl cmp cmp xlat push sbb (bad) pop push sbb dec out nop sbb sub sti lret popf (bad) jae fiadd push pop push std and mov push inc repnz bound mov addr16 pop rcr adc sub push loope xor fsubrs shrb fist stos test sub dec xchg inc dec mov popl jbe (bad) xor test and in or mov repz test fs enter lahf jle cwtl adc adc add (bad) aaa or enter leave add stc lahf aas or dec pop inc fcmovnbe out jp outsl and xorl rolb lock mov push in es and sbb xchg xlat cmp mov test jp ds fldt ffree pop adc int3 lds lock pop push lcall daa imul pusha rcll mov or push inc jno pop sub cwtl fs fsts lods arpl popf std repz sbb xlat stos adc rcr mov cmp aam jg mov and cli or gs aas ficom fcomp test leave sbb push jmp and mov pop sub mov push out cld pusha xchg (bad) in scas (bad) enter adc inc (bad) out pop push sbb add (bad) dec cmp addr16 stc xor sub in cmp or mov jl push rcrl inc lahf mov mov dec xor sbb inc xor imul ret or mov test icebp and dec fldt ffree inc adc int3 lds sti dec lock pop mov cs and out test jecxz bound in mov or push inc mov jno cwtl sub lods fs fscale repz popf stos adc fcmovbe jle ljmp xor jg mov call ficom fdivrs test cmpsl sbb fucomip cmp sub push std mov pop sub dec pusha xchg insb out cld scas neg inc repnz adc enter push pop aam xor dec sbb cmp clc mov sbb mov push mov jl or pop stos inc lahf push in pop ss mov xor add (bad) rcrl xchg inc xor and push (bad) sbb inc dec mov cmc push icebp aaa ds test and inc fildl ffree pop adc int3 lock dec scas loop jns push inc mov (bad) inc je adc pop (bad) stos stc pop ret pop push stos push xchg mov xor dec movb jg sbb popf push add leave pop in insl lock in add lret dec fcmovb sub test and mov push push fadds enter xchg aas mov cwtl sub movsl push sbb adc movsb mov test in push out xlat jecxz sahf mov xor xor and out sub call and sbb imul popl lods dec xor es out cmp test and roll jb inc pop push inc cmp test daa sarb jne push cs lret pop mov repz mov add cmp jns dec inc mov inc push bound pop pop (bad) je pop rcrl stos push ret inc (bad) clc mov jge inc xor dec sbb mov leave pop popf push insl clc (bad) in in or (bad) fwait add ret outsb dec fs lds cld dec mov mov fcoms into inc xchg aas enter mov sub sub ds in push test xlat aam sahf out xor xor and out sub push nop sbb mov imul gs mov dec xor es out int3 adc or xor test pop push inc jb mov divl in cmp shrb cmp pop push mov add mov sbb cmp lahf ja scas mov inc push inc adc (bad) (bad) je pop rcrl pop stos add mov clc aaa hlt test mov divl imul cmp mov mov jp xchg add mov jb js std mov xlat inc jne adc pop subl lods addr16 mov mov push jle mov jns dec (bad) dec mov push fstpt lret ret in outsb scas (bad) out add dec cwtl jg xchg jo imul insb movsb std je rcll xchg inc pop (bad) xor aam inc outsl lea adc cmpsb push sbb fild test aad push jmp lahf jb ss rol mov and out pop ljmp xlat fsubrp and out mov mov fwait insl nop inc mov push in cli pop xchg and daa int cmp xchg and ret xor jae add add hlt mov mov mov divl imul cmp pop ja mov add xchg add mov mov mov inc pop arpl pop xorl aam push lods addr16 les lods push push mov mov jns jle dec out bound fstpt lret ret sahf push outsb stc (bad) out in or cwtl jg xchg jo gs loope movsb std or je xchg xchg pop fstl iret inc cltd inc lret aam leave outsl adc sub sub dec sbb repnz pop (bad) fucomip push test fcom jge jmp (bad) jb mov and out cmp xchg pop xchg xlat sub fsubp jl push pusha cld mov fwait insl inc mov push in nop pop xchg scas sub cli lock xchg int ret xor into test add jae mov clc aaa mov jbe,pn loop das (bad) int3 pop imul push cmp lea lahf jnp imul in add (bad) jae push adc dec inc popf jmp mov mov jl iret outsb in fildll cmp jns icebp mov pop jmp cld sahf jg lock mov xorl rclb in clc popa rcrl xchg test mov and jge sbb xchg inc cmp iret xor dec enter fld es insl mov test mov lods in mov adc sub xchg (bad) jno push xchg xorl mov in mov xor sahf inc pop ljmp loopne mov and repnz lcall call movsl ret out sbb out dec pop add jp cmp lea lahf shll push (bad) xor add dec jae jmp mov inc pushf pop inc js mov outsb in fildll cmp jns pop mov icebp jmp pop sahf jg lock mov andl pop push xorb rcrb gs roll xor mov jge sbb xchg inc or iret xor jbe out (bad) fldl ror insl (bad) bound mov test cli dec jecxz lods sub fmuls push jno xchg push sti or pop insl push in mov xor sahf inc fsubr dec adcl pop mov loope add lcall out sub jle movsl call sbb out out add pop in jl stos shrl ror lcall mov cwtl imul xorl mov jg int3 xchg mov es (bad) lods cltd (bad) sahf out adc fdivr fisubr jecxz je sbb int mov mov outsb test nop add icebp mov xchg jbe mov cld ja out gs hlt fucompp (bad) das cli dec jae dec xor cmp adc jno lock cmc pushf mov repz push xlat add jns inc fstl sub adc or test cld mov mov mov (bad) or sbb ret mov jmp or dec inc sbb pop inc cmpsb adc xor out push inc lret and xchg adc push ret leave pop dec icebp dec xchg pop add dec sbb jl stos rcrl rclb cmp add rcrb bound sbb xchg addl je sbb jg lret xchg test (bad) lods es sahf adc adc faddl call mov ljmp mov movsl (bad) outsb mov aam add icebp mov fcoms ja out gs pusha jmp jmp fidivrl dec das lret (bad) jae cmp adc jno jge cmc push mov pushf loopne (bad) add jns push fstl sub adc pop sub mulb (bad) or or ret mov mov into jo sbb inc dec adc adc out push inc xor movsb sub jl and sbb leave pop aad dec ret pop add sbb pop in rclb cmp and rcrb add lcall push test in xchg mov fs stos pushf push push mov add int3 jb cltd jmp scas adc fcmovbe cmc fs lahf (bad) adc xchg xchg lods pop test hlt mov ja xchg sbb test movsw push pop in flds in push jg test and mov sub out push add (bad) clc loopne mov scas (bad) leave inc lock roll push sbb xor dec sbb mov imull je in cmpsb mov out cli xor (bad) mov ret fldt mov mov add xchg add rclb sbbl imul inc add ds repnz or dec fsubrl rcrl mov sub repz mov out das jae sub test xor outsl fs stos mov (bad) pushf mov mov pop add pop jmp cltd gs fcmovbe scas fs lahf (bad) cmc inc sbb test xchg mov hlt mov ja push sbb test cmpsl pop in addr16 fist push fstps jg ljmp mov pop sub add pxor bound scas clc leave inc mov roll imul aad div dec stc je in cmpsb push xor (bad) mov lea ret mov jge push ret cld mov aaa or dec xor (bad) sbb mov insb daa adc or mov xchg repnz or insb jnp rorl xchg mov lret mov pop mov das push and out test in fs stos mov jbe (bad) lahf aas mov scas cmp xchg jl jle lcall cs int3 outsb dec pop (bad) hlt inc dec inc xor pop sub mov xor bound lods popf sbb popl movl pop mov dec lcall adc (bad) mov jg mov cltd xchg lods pop test xorl sbb xchg and stos xchg inc pushf in push sbbb and es push add outsl adc mov mov mov xchg in popl sbb (bad) xor dec sbb mov jne in arpl aaa sbb lea dec ja (bad) (bad) pop push ret jl std or movsb xor cmp mov ss xchg sbb mov insb sub dec pop pop dec mov mov scas cmp and lcall sarl outsb dec scas (bad) hlt int3 dec inc pop addps push xor daa push inc enter gs lods jns pop push push (bad) popf mov (bad) xchg pop add dec pop ljmp adc (bad) imul or mov nop cltd pusha cmp mov js lret sbb xchg test stos and push xchg sahf stos in fiaddl sub es push add outsl adc jmp xchg in addl push xor ret sbb (bad) divl in arpl call sub out clc lea les cmp ret frstor pop jo jl cmp fisub xlat sbb mov insl sub test pop insb mov mov dec cmp and lcall rorl test mov dec xor inc and adc and push (bad) sbb inc inc mov or xor lock dec test and fadd pop push outsl cli int3 out mov popf add orl jno jecxz xchg mov cmpsb mov in lcall xchg fwait aad lret xchg sub sbb adc repz inc cmovae xlat stos mov jle jae mov xor mov (bad) mov movsl or out pop jmp (bad) frstor cmpsl xchg rcr jge sbb (bad) call addr16 mov pop out dec inc xchg insb push sub pusha cmp sub iret lods (bad) (bad) mov es test add stos add dec pop sbb mov das movsb mull sbb cmp dec push pop test mov in cmp xchg inc xor pop inc scas mov imul cmc mov jp dec test and mov imul mov int3 lds out add push mov in sub xchg orl jecxz cmpsb mov in mov or push inc jo fwait sub lret xchg fs sbb dec popf inc repz pop add stos pminsw fldenv aaa loop ret mov and ds test movsl pop jmp (bad) fstl xchg fcomp test or jge sub addr16 mov pop sub mov push out sti pusha xchg and sub lods cmp mov es test xor (bad) jne add sbb cmp dec cmp mov movsb data16 imull cmp dec push mov jnp xchg add mov mov dec xor sbb (bad) call ficom mov lret cltd aaa aaa jne out stos adc insl jp lcall stc sti hlt mov sub and data16 mov cltd push (bad) mov mov cmp add (bad) enter popa mov mov mov dec pop inc fcoml and (bad) xor fidivrl jae or scas rcrb cmpsb roll repnz mov mul sbb outsb sbb ret xlat push (bad) dec icebp adc lods cmp in mov je std sbbl pop pop sub imul incb idivl arpl add xor push mov inc pusha sub imul jle dec fldcw lds loopne pusha push dec les xchg push ret fsubrp (bad) mov lret cltd push aaa jne out aaa adc insl jp lcall stc or sub and inc ds int data16 mov jg cltd push xorb ljmp movsl rol enter xchg lret cli mov dec pop inc fcoml and lods xor jno jae or fcmovbe sbb shrl cmpsb call fs loop mul push aad cmp sbb mov push (bad) ret xlat lods cmp in push pop xchg jecxz,pn mov jle ret fwait sbbl and (bad) divl mov xor (bad) movsb inc jnp dec in es insb out pop aam iret pop pusha sub imul stos into lds loopne pusha push dec les xchg inc mov pusha into fadds cmp gs adc push imul jnp and in in xor push cs mov inc mov add repnz mov sub jbe nop scas mov xor ss (bad) pushf insb mov and lret icebp stc rcrl hlt loop push (bad) sub rolb sub enter or mov clc add inc sub popf addl jns outsb rorl inc dec dec out int out adc jecxz sub lret out xchg xor cmp pop push imul les xchg sbb cwtl stos mov ror fwait xchg mov jle,pt mov push insl pop push test fadds cmp mov daa gs lahf movsb imul mov and in in xor push cs cmpsb mov jo outsl inc mov mov xchg xchg add repnz mov lods data16 cmpsl scas mov xor ss sbbl and stc negb (bad) hlt loop push flds sub lahf inc (bad) sub rorb lds test std jae mov mov loope or push aam jns xchg jno outsb xorb pop inc cmpsl adc xor out push inc lret out movsl xor imul les xchg sbb cmp cwtl fwait xchg outsb and mov fdivrl insl shrb pop arpl xor test aaa jne fdivs cmp xlat lods daa add push sbb dec out nop pop stos rcrl inc lret jae fidivr outsb rolb push pop push cld and mov push inc repnz popa mov inc mov jae push pop pop fcoms push add es std loopne xor sbb out xor adc adc stos cmpsl jnp mov xchg inc inc mov popl jne (bad) jns and mov ja xchg scas js fsubr or mov aaa int popf sub and lret xor cli ret xchg cwtl pop add jecxz push fcmovbe sub sbb xchg (bad) aaa or enter leave dec jmp pop (bad) dec pop inc pop aad jp outsl data16 das adc push lock sbb gs xor jle icebp push in and sbb (bad) push lds push sbb push pop stos cmp ror pushf xchg jae inc jg rcl ficomp outsb and mov cld inc repnz popa push flds jbe,pt inc jae push addr16 fsubrs add adc imul lcall in out xor adc adc shlb stos jb jno inc pop mov xchg dec add xor push fistl mov ja test js fsubr xchg xor aaa int popf sub push adc lret xor clc lahf jle cwtl pop ret xchg push fiaddl aam out or sbb aaa jo pusha leave dec enter or dec pop aas pop aad jp inc data16 das adc mov or sbb adc xor add jle and insb cmp (bad) push lds push sbb out push sbb pop daa rcrl xor into outsl inc pop ret dec adc adc sub mov arpl sbb enter dec pop push add pop xchg jl xor pop in adc in (bad) insl and or add imul xchg lcall bound int3 sbb jecxz jae xchg gs stos imul fildl out and daa add push and call dec mov roll nop inc iret les xlat (bad) xor jbe fs cld jmp pusha (bad) lock das stc lds cmp pinsrw add movsl jge cmc or add mov repnz outsb jns inc fcompl movb ja (bad) mov cmp or cmp orb mov mov into outsl push pop ret dec inc in adc cmpsb adc mov xor arpl lods pop aam dec pop enter pop xchg push mov dec pop in jl in shrb adc fst mov cmp add lcall bound (bad) xor jns xchg sbb hlt jg int3 xchg gs imul push sbbl and ljmp push add mov mov outsb test nop inc lret insb (bad) xor jbe mov cld jbe out fs cmp sub jb dec xor (bad) cmp push les add cmc loopne or push add and outsb jns inc fcoml or movb mov mov (bad) dec fwait sub ret mov xor mov cmc into dec inc pop adc cmpsb adc xor sub jae (bad) xchg ret stos add mov jge inc xor mov mov inc or push pushf push insb cmp xor xor (bad) fwait (bad) fcmovb lret nop arpl rol mov and mov scas cs mov xlat xchg dec fistl int xchg or cwtl pop cld or push fsubrs sbb push in movsb mov mov push test sbb mov loop add jne and shlb dec or sub cmp push nop sbb addr16 add sub imul fs cmovle (bad) mov cmp xor push add test (bad) or jb mov divb in jge (bad) jo cmp adc cmp pop push scas jnp repnz pop ljmp jbe icebp mov inc sbb xorl stos stc xchg ret stos dec xchg jge inc xor mov lods mov and ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss ss (bad) mov lock mov mov mov retw test sar add adc movsb (bad) pop pushf cltd call movsl xorb in (bad) in xor into mov jg add rcrb dec xor pop dec inc cmc xchg lcall lret in outsb xor bsr sbb sub mov leave pop push in adc push dec lds popf lds lahf mov call aam xchg jg lcall aaa add sbb (bad) int3 dec sbb adc sub shlb push in xor pop pop in stos jb pop xor or or mov adc mov add cmp add push ffreep rcrb dec mov lea mov insb mov lods addr16 (bad) mov lock mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor jp sahf cmp ja ret test sar add adc movsl int3 pop lcall aad xor in (bad) fs fs or jns test mov out xor xchg and push adc xchg mov dec jno cmc sbb pop xor and jno dec fcmovne push jl inc movsl das mov lea inc sub push xchg leave sbb mov or cli (bad) bound inc pop adc pop stos sub push sub imul push pop sbb mov nop push pop lcall mov insb jno loop test mov dec sbb gs data16 jle xchg sarl add push pop mov lock fmuls inc jp or inc jno cwtl sbb (bad) test pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor std add adc movsb (bad) pop pushf cltd call movsl adcb sub lret lahf test test call out xor xchg and push cmp lock and insb insl (bad) cmc sbb in ljmp rolb cmp fcmovnu (bad) int3 lret popa mov out jl cmp mov fldcw je mov les loop (bad) jb pop push outsb and sub cmp (bad) jnp cmpsl js pop insl imul mov arpl nop add jl jmp and aad pop daa ret lods scas cmpsb mov (bad) xchg test das loope xchg clc leave fwait loopne mov cs mov lods addr16 (bad) mov lock mov mov cmp jno mov retw test sar add adc movsb (bad) pop lret lret lret lret lret lret lret lret lret lret lret lret cltd call movsl xorb in (bad) in xor into mov jg add into add push xchg xchg and push adc xchg mov dec popa (bad) cmc sbb pop xor xor popa or lret int3 push jl inc movsl aas mov lea inc sub mov mov mov je cli (bad) bound inc pop adc pop stos sub push sub imul push pop sbb mov nop push pop lcall mov insb jno loop test mov dec sbb gs data16 jg xchg pop sarl add push pop mov lock mov mov cmp jno mov retw test sar add adc movsb (bad) pop pushf cltd call movsl xorb in (bad) lret lret lret lret lret lret lret lret lret lret lret lret xor into mov jg add into add push xchg xchg and push adc xchg mov dec popa (bad) cmc sbb pop xor xor jno pop fcmovnu bound push popf pop push cmp mov fsubrs je mov les loop (bad) jb pop push outsb and imul (bad) jnp cmpsl js pop insl imul mov arpl nop add jl jmp and aad pop daa ret lods scas cmpsb mov (bad) xchg test das loope xchg clc leave fwait loopne mov cs mov lods addr16 (bad) mov lock mov mov cmp jno mov retw test sar add adc movsb (bad) pop pushf cltd call movsl xorb in (bad) in xor into mov jg lret lret lret lret lret lret lret lret lret lret add into add push xchg xchg and push adc xchg mov dec popa (bad) cmc sbb pop xor xor popa or lret int3 push jl inc movsl aas mov lea inc sub mov mov mov je cli (bad) bound inc pop adc pop stos sub push sub imul push pop sbb mov nop push pop lcall mov insb jno loop test mov dec sbb gs data16 jg xchg pop sarl add push pop mov lock mov mov cmp jno mov retw test sar add adc movsb (bad) pop pushf cltd call movsl xorb in (bad) in xor into mov jg add into add push xchg pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor xchg and push adc xchg mov dec popa (bad) cmc sbb pop xor xor jno pop fcmovnu bound push popf pop push cmp mov fsubrs je mov les loop (bad) jb pop push outsb and imul (bad) jnp cmpsl js pop insl imul mov arpl nop add jl jmp and aad pop daa ret lods scas cmpsb mov (bad) xchg test das loope xchg clc leave fwait loopne mov cs mov lods addr16 (bad) mov lock mov mov cmp jno mov retw test sar add adc movsb (bad) pop pushf cltd call movsl xorb in (bad) in xor into mov jg add into add push xchg xchg and lret lret lret lret lret lret lret lret lret lret jae ja mov dec popa (bad) cmc sbb pop xor xor popa or lret int3 push jl inc movsl aas mov lea inc sub mov mov mov je cli (bad) bound inc pop adc pop stos sub push sub imul push pop sbb mov nop push pop lcall mov insb jno loop test mov dec sbb gs data16 jg xchg pop sarl add push pop mov lock mov mov cmp jno mov retw test sar add adc movsb (bad) pop pushf cltd call movsl xorb in (bad) in xor into mov jg add into add push xchg xchg and push adc xchg mov dec popa (bad) cmc lret lret lret lret lret lret lret lret lret lret sbb pop xor xor jno pop fcmovnu bound push popf pop push cmp mov fsubrs je mov les loop (bad) jb pop push outsb and imul (bad) jnp cmpsl js pop insl imul mov arpl nop add jl jmp and aad pop daa ret lods scas cmpsb mov (bad) xchg test das loope xchg clc leave fwait loopne mov cs mov lods addr16 (bad) mov lock mov mov cmp jno mov retw test sar add adc movsb (bad) pop pushf cltd call movsl xorb in (bad) in xor into mov jg add into add push xchg xchg and push adc xchg mov dec popa (bad) cmc sbb pop xor lret lret lret lret lret lret lret lret lret subl lcall lret int3 push jl inc movsl aas mov lea inc sub mov mov mov je cli (bad) bound inc pop adc pop stos sub push sub imul push pop sbb mov nop push pop lcall mov insb jno loop test mov dec sbb gs data16 jg xchg pop sarl add push pop mov lock mov mov cmp jno mov retw test sar add adc movsb (bad) pop pushf cltd call movsl xorb in (bad) in xor into mov jg add into add push xchg xchg and push adc xchg mov dec popa (bad) cmc sbb pop xor xor jno pop fcmovnu (bad) lret lret lret lret lret lret lret lret lret lret lret push mov lds popf pop push cmp mov fsubrs je mov les loop (bad) jb pop push outsb and imul (bad) jnp cmpsl js pop insl imul mov arpl nop add jl jmp and aad pop daa ret lods scas cmpsb mov (bad) xchg test das loope xchg clc leave fwait loopne mov cs mov lods addr16 (bad) mov lock mov mov cmp jno mov retw test sar add adc movsb (bad) pop pushf cltd call movsl xorb in (bad) in xor into mov jg add into add push xchg xchg and push adc xchg mov dec popa (bad) cmc sbb pop xor xor popa or lret int3 push jl inc movsl aas mov lea inc lret lret lret lret lret lret lret lret lret lret lret (bad) das mov enter xchg mov push je cli (bad) bound inc pop adc pop stos sub push sub imul push pop sbb mov nop push pop lcall mov insb jno loop test mov dec sbb gs data16 jg xchg pop sarl add push pop mov lock mov mov cmp jno mov retw test sar add adc movsb (bad) pop pushf cltd call movsl xorb in (bad) in xor into mov jg add into add push xchg xchg and push adc xchg mov dec popa (bad) cmc sbb pop xor xor jno pop fcmovnu bound push popf pop push cmp mov fsubrs je mov lret lret lret lret lret lret lret lret lret lret lret mov or jb pop push outsb and imul (bad) jnp cmpsl js pop insl imul mov arpl nop add jl jmp and aad pop daa ret lods scas cmpsb mov (bad) xchg test das loope xchg clc leave fwait loopne mov cs mov lods addr16 (bad) mov lock mov mov cmp jno mov retw test sar add adc movsb (bad) pop pushf cltd call movsl xorb in (bad) in xor into mov jg add into add push xchg xchg and push adc xchg mov dec popa (bad) cmc sbb pop xor xor popa or lret int3 push jl inc movsl aas mov lea inc sub mov mov mov je cli (bad) (bad) lret lret lret lret lret lret lret lret lret lret dec inc pop adc pop stos sub push sub imul push pop sbb mov nop push pop lcall mov insb jno loop test mov dec sbb gs data16 jg xchg pop sarl add push pop mov lock mov mov cmp jno mov retw test sar add adc movsb (bad) pop pushf cltd call movsl xorb in (bad) in xor into mov jg add into add push xchg xchg and push adc xchg mov dec popa (bad) cmc sbb pop xor xor jno pop fcmovnu bound push popf pop push cmp mov fsubrs je mov les loop (bad) jb pop push outsb and imul xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop mov inc cmpsl js pop insl imul mov arpl nop add jl jmp and aad pop daa ret lods scas cmpsb mov (bad) xchg test das loope xchg clc leave fwait loopne mov cs mov lods addr16 (bad) mov lock mov mov cmp jno mov retw test sar add adc movsb (bad) pop pushf cltd call movsl xorb in (bad) in xor into mov jg add into add push xchg xchg and push adc xchg mov dec popa (bad) cmc sbb pop xor xor popa or lret int3 push jl inc movsl aas mov lea inc sub mov mov mov je cli (bad) bound inc pop adc pop stos sub push sub imul push xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor mov pop sbb mov nop push pop lcall mov insb jno loop test mov dec sbb gs data16 jg xchg pop sarl add push pop mov lock mov mov cmp jno mov retw test sar add adc movsb xchg or fnstenv mov dec (bad) in mov mov adc repz mov out xor into repz outsl fbld lea cltd (bad) mov test (bad) mov xchg cmc lahf sub push inc pop xor iret fldl ret jmp dec lds nop jle addr16 mov and mov xchg lea jecxz (bad) sub jle mov ds cmpsl jae mov aaa mov inc mov insl out in pop mov repz mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop push call mov mov (bad) imul lds stos push mov mov pop dec (bad) test (bad) pop int clc inc push pop push mov sbb in (bad) hlt xchg cmpsl mov test push add mov subl loopne arpl sarl pop lahf leave adc divl mov mov in push (bad) into mov lock mov mov sub cmpsb or mov mov lret jl fsubr and dec fcomp cmc sbb pop (bad) or xchg mov xchg cmp and cmp xchg pop pop mov jmp stos iret rcrl roll jmp add or sbb xchg jmp call jnp push push das test into lods ja (bad) push fninit or dec sbb mov sbb lret lret lret lret lret lret lret lret lret lret lret insb jno and lods mov inc fcomip pusha lahf xchg scas gs cmp les dec es inc mov inc adc les icebp push mov xchg jne pop sub nop sub (bad) cmp jno popf inc bound inc cmp pop cmp pop in loopne or jbe xorb mov fucomp xor adc xor push jno sub dec add fwait xchg or out push ja pop shrb shll jns sbb ret xchg aam sub lods repnz sbb fistl mov adc les ficompl movsb xor push repnz lret shr out dec or (bad) jb push stos mov dec bound cmp mov fmuls orl fwait rcrb lods sti lods lods mov int mov (bad) xchg xor dec call pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor daa dec std stos and push inc lret dec ret (bad) mov sub cltd sbb ja sahf sti inc lock jle (bad) push in addr16 mov lock pop push mov (bad) je xor (bad) popf sub adc dec ret cltd add or pop lock mov sub xor add jnp test jnp push inc out movsb dec push xchg mov jb int3 push adc lahf xchg mov dec popa shll jl loopne cli mov rcl and and es fist jl and aas mov dec mov jns das pop push mov mov in mov (bad) sbb inc popf cld xor cs push sub xchg sbb or andb push mov mov cmp cld xchg push out nop jae inc cmpsb or and push lea movsl lret lret lret lret lret lret lret lret lret lret mov jle sti sbb mov orl lock mov (bad) xchg repz sbb (bad) test pop inc xchg jae daa rcr jl push loope xchg mov fyl2xp1 mov push cmpsb inc push add (bad) and push push add repz adc xchg push sbb dec push inc into and outsb and jmp mov dec ret dec pop fstpt fisttpll dec fcompl test pop ret pop mov sub dec mov mov pop xchg jb dec int gs ss clc (bad) mov mov cmpsl (bad) mov subl rol aad push sti pop jmp sbb or pop je and (bad) nop fist call fcom hlt lods out (bad) pop ljmp mov cmp (bad) lret lret lret lret lret lret lret lret lret lret lret lret push mov movsl popa cs in addr16 cmp cwtl clc push and inc repz xor jl fstps dec bound push mov dec loopne dec cmp fcompl or adc iret dec into sub fidivr mov xchg in dec (bad) fidivrl mov clc jecxz mov push xor hlt push clc mov out cli cld cmp test addl xor sub dec fisttp mov add sar lods bound cmpsb sahf mov dec out in stc jbe sub iret push bndldx out pop lds ficomp jg pop rolb cmpsl out (bad) ja pop into sbb rcll imul or jge pop shr imul mov or pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor dec jp mov jae pop in mov loop inc jno dec adc cmp repz notl fldenv pop movsl add aad les into fwait xor es idivl subb mov xor push or xor fdivl sub cwtl push pop lret outsb lods shll movmskps sub or (bad) adc push jecxz subl fs pop lcall sbb pop popf xchg sbb mov push inc mov xor mov pop xchg jb jle mov inc insb outsl jp or aam push xor cmp mov lock stc pop dec into inc and inc sbb scas mov stos (bad) sti jns (bad) jne xchg xor and pop into dec jl out dec je or fs jae std jge cmc and imul lock addr16 lret lret lret lret lret lret lret lret lret lret js aad data16 repz sbb imul test inc (bad) dec pcmpgtd pop leave adc in pop movsl andb pop popa imul mov popl pop (bad) pusha inc xor vmovups jbe clc les xchg add popa adc sbb push mov lods test cmp ljmp xor pop mov or fbld (bad) mov fwait jne cli cmp mov nop ret out (bad) cs ret xchg cmp cmp xor lahf aas push aas cmp fdivs mov push aaa cmp xor sub lcall cmpsb dec test pusha adc add cmp ror sub cltd ja cs xchg xchg mov pop pop sub xchg rol mov popf push cld cmp push cmpl das call lret lret lret lret lret lret lret lret lret lret xchg adc xchg std push lahf int3 xchg in rcll stc pop add (bad) jae imul insl xor insb jg mov outsl in mov mov iret pop (bad) adc fildl xchg inc ss xor inc mov mov (bad) mov in in mov stos jnp jecxz lret sub jae pop push cltd xchg fistpl loope loopne inc nop jle mov dec mov xor scas mov pop sub imul mov add mov adc add cmp rorb jne in imul jp jb inc iret outsl adc in out xchg cmp jmp dec mov mov push pushf and std out cmpsb mov push sbb test jle int3 cmc aas int3 jge push mov jg mov push cwtl stos xorb add jp jnp mov jae and push hlt push (bad) iret lret lret lret lret lret lret lret lret lret lret pusha pop xchg xor dec fistp out flds imul push jg jmp icebp pop or cmpsb scas incb xor (bad) (bad) and and repz jcxz ss sbb je icebp pop lods adc mov jbe ret push fdivrs arpl inc add aas or dec inc inc mov loopne imul push xlat mov xchg jae andnps rclb fist fsubs (bad) pavgw jnp dec dec lret sbb sub or lods and test dec sub andl mov leave adc cs data16 jg ret xor fsub (bad) in subl mov sarl or inc cmp pop popf mov es mov mov pop cmp sbb mov xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor mov adc ficom mov inc add push inc jae pop or adc scas imul int shr clc sbb shll cmp popf cmp jnp sub dec (bad) cmp mov push lcall fistpl (bad) loopne adc xlat jns push jle test scas mov adc test outsl mov data16 jmp shrl out hlt out xchg sub mov mov mov push mov (bad) and mov push pop adc aad (bad) lods push mov ja jbe out sbb test das mov lds cld dec mov mov cs jb lds cmp mov icebp int adc std cmpl mov sbb ds in push mov cmp mov inc aaa movsl mov xor xor inc loope into add pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor cs divb int aas outsl out mov dec xchg jp outsb and lahf idivb dec mov mov jg (bad) jbe jge fnsave xchg daa jnp nop repz xor push movsl aas mov lret or data16 mov fistp movsl xor cwtl je xor jae push or xlat arpl inc js cmovo cmpsb push or enter jecxz xchg call gs jnp into pop popf xchg pusha push mov fldenv lods imul lock xor pop mov mov adc mov jb fstl cmpl scas lods insl jae inc sahf stos inc xchg aas jp xchg pop inc inc pop test mov cmp sub dec adc lods push inc notl (bad) std lcall push pop lods add push sub add pop imul lea mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor xchg add jp pop addl and xchg sbb mov mov out mov daa cmp aaa mov jge inc loope test imul out out dec outsb sahf fdivs pop call pusha test or addr16 pop push cmp les test jl pop and sub js dec stos jmp insb sub push stc aad pop and inc pusha mov mov add sub sub enter xor retw inc xchg mov mov mov and stos mov jge dec ret addr16 xor pop rorl (bad) mov add outsl jmp dec cwtl xchg and lods dec cmp lds loope or pop cmp or or ds les loope insb arpl testb inc mov dec (bad) fidivl xchg lret lret lret lret lret lret lret lret lret lret lret lret sbb jl xlat xchg mov add push adc mov add mov rol xchg push lret cmp inc movsl push mov int3 movups jne mov mov xor aad jne inc push bound jecxz or std pop sbb push inc mov pop cmp jg lcall cmpsb ret adc icebp xchg repnz ja loop inc and push out and lahf adc adc out cltd sub icebp or fstl mov inc sub test add or mov dec jecxz pop retw sub push xor popf adcl fsubr stos (bad) or and lods divb lret (bad) jmp inc jns,pt inc call inc pop sub cmpsb dec xchg mov andl jg inc ss cmp or pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor cmpsl fldenv pop dec aad ret (bad) and dec inc fbld mov ljmp pop xchg xchg mov pop (bad) fs in iret (bad) xor vminss ds cmc mov ds push in aam leave ljmp das sub out xor outsl stos std es pop add in adc and adc es jne lods sub xor aaa or jae test ret jmp insb jae fs dec mov cmp mov lods in mov push inc and inc cmp dec jmp fstl idiv icebp daa sub cmp mov hlt (bad) xor xor adc mov cld mov ret xchg into add lret lret and sbb jno ja hlt jne pop add and js dec add mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor out cs jle (bad) jb mov repnz dec movsl push lods (bad) das mov lods jmp out insl mov fdivs or mov out push lret xchg and inc dec xchg dec xchg aas adc dec xchg or ljmp add jmp js mov cmp dec roll mov das mov pop notl in mov out lods loopne add cli fwait (bad) mov xor add jae adc repnz xchg std add hlt dec sbb add aam pop es mov cmpsb adc fwait fwait in push adc (bad) movsb scas out and ret test push (bad) (bad) andl mov (bad) lds enter sbb in addr16 cmpsb and cmpsl js fsubrs (bad) jae pop push lret lret lret lret lret lret lret lret lret lret lret xchg (bad) jae add fildll pop sbb inc daa and inc cmp leave push outsb pop jg pop push outsb jnp xor sbb es jnp dec push pop add mov testl arpl push imul push pop jmp jns mov jle shr dec mov lcall leave mov fnop inc inc test movsl jno push cmp sub lock jle or cmp jecxz lock es mov xor movsb (bad) or jne lods subl loopne bound sub popa data16 or lret add int3 andl dec jne push jle push fwait push adc and and cmc lock xor cmp mov xchg cmc (bad) in adc or lods stc push mov mov ror pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor int3 adc test je inc fs mov je sub bound popf inc aam cltd or out std mov xchg aas mov mov push push mov xor mov jbe inc int daa mov sti pop xor dec cmp sbb insl mov or testl mov subb addr16 xchg mov lock jecxz xchg push jp pop int inc dec mov push push out lock xchg adc dec icebp (bad) jae mov out mov mov (bad) outsb mov xchg xchg dec ficompl daa lea jnp ja enter push dec popa mov dec add jg data16 pop (bad) aad lret pop mov push fstps cmp sub or cmp aas xor mov mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor int3 add out loop mov xchg lcall sbb and mov das sbb sbb push push jns mov insl jmp out or adc out out movsb cmp mov xorl or jle (bad) cmp imul daa mov scas clc leave fwait mov stos cmp jnp stos xchg jmp and mov out xchg lock leave aas cmp inc cmp inc jno add shrb (bad) jo sub (bad) lock rcrl daa sbb add add repnz ljmp adc pop jmp jne push cmc cwtl push dec and ljmp hlt cltd fnsave rol sub je dec mov add lcall (bad) rolb aaa push add jae inc and mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop (bad) mov xor jnp push cmp or out pop inc mov das dec dec add pop mov nop push fcompl xlat cmc addb aad push pop xchg cli xchg ljmp (bad) gs and sbb inc push xchg jns xchg ljmp mov les subl lds shr scas mov sbb push add lahf aam inc das int or jbe jge sarb cmp fwait test pop xchg data16 jmp stc sub cld mov sahf mov test dec or icebp cwtl push dec addr16 push int fisttpll push clc mov or push mov jno mov cltd xchg adc mov dec xchg dec negl add push xchg loop mov dec jns cmp jecxz (bad) sbb jmp (bad) lret lret lret lret lret lret lret lret lret lret lret jl int3 xchg faddl xchg xchg jle das repnz jp jb inc adc test push fild push repz xor fcoms inc (bad) push jle lcall adc inc ficom mov fwait out mov lods dec rcrl push add movl inc out inc mov sbb mov pop push dec sub (bad) sbb adc mov int3 cmp mov icebp xor mov adc sbb mov (bad) pop jg lods and xchg pop mov std test out cs data16 (bad) inc jns inc mov sti inc sub cmp pop lret insl outsb jg or pushw int mov jnp xchg out add and or outsl sub adc test fldt xchg in lret lret lret lret lret lret lret lret lret lret lret lret or stos xor xor pop sub repz mov pusha cmp test inc out cmp xlat scas xor sub test cmp lret aad insl sub push shr dec mov in mov mov add ja jle push pop push jl cmp gs and (bad) jae imul dec into add and fwait es xor pop pusha dec or dec popf cmp mov pop dec mov push aaa pop mov cs mov or mov fldl jge fmuls mov jecxz cs popf pop aad insl mov push imul xchg sbb out dec mov push cmp mov sbb mov add jnp sub inc sti movsl loopne fdivrl enter mov lret lret lret lret lret lret lret lret lret lret lret fsubr mov mov mov or orb dec outsl stos out cmpsb out sbb mov in iret or mov mov loopne cmp sarl push in addr16 aam xchg mov sarl fimul inc xor xor push shrb mov mov mov xchg in andl and lret mov or sub pop push jns aad or repz push dec dec ss mov cmp ljmp mov rol sub sub add mov add notl add insl jp sub into pop fs aaa xor dec inc cmp mov movsl push cld decl inc fucom push and xchg das or mov test (bad) js jg hlt xlat lret lret lret lret lret lret lret lret lret lret lret lret mov lcall xchg mov mov pop fwait xchg cli out scas in dec outsb or xchg mov (bad) mov add (bad) push outsl mov xor imul pop idivl ja mov mov xchg sub sub mov xchg sub mov xchg sbb jo fwait orb test cmp inc inc int push push dec xchg mov scas and push std aaa int ds mov add scas lods ljmp cmp incl push das test push mov lds sbb sbb xor fiaddl cwtl xchg jl in adc fmulp push outsb and cmpl and jno cli pop mov xchg dec cs add enter dec lock push fcmovb mov lret lret lret lret lret lret lret lret lret lret lret lret mov push out jp xor ffreep rclb jle fldcw mov sbb mov cmp nop mov or cld push inc and inc cmp mov xor and cmc push (bad) sub clc dec (bad) imul sbb xchg cmp sar push fwait (bad) aas cli xchg dec int push outsl push xchg test push and shrl aad les imul cmc sbb pop xor negb xchg xor jno pop pop xor (bad) cmp add mov inc mov test mov and pop jnp inc popa dec dec les ss xor (bad) repz test inc ret lahf insb cmp lahf rcrb pushf sub addb push pop xchg (bad) sarb shll cwtl insb jne loop cmp mov adc call xor lret lret lret lret lret lret lret lret lret lret mov xor cltd cmpsl sub mov pop enter rorl aad mov je mov mov icebp jno push test sub loope dec in sbb xchg add cmp scas lahf fcoml pop daa xlat sub dec sbb out mov stc jno test xor mov pop icebp or fdivs fdivl outsl cld outsl cld jnp ja xor push aam sbb scas leave and ja lret cmp dec popa push test popf ja lds repz (bad) mov push ret sub add into enter or jecxz mov scas cmp pop ss scas ljmp add rcr pop movsl mov out mov sbb lret sub push mov (bad) jb jo (bad) lret mov out dec xchg test dec loope sub pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor jp div aas cmp mov lods aaa divl mov in mov jb add add xchg xor xchg std push lahf dec shl in into test cmpsl (bad) xor dec (bad) insb popa xor loope mov cld mov cmpsl dec dec jmp mov or and repz inc adc xchg out insl lock or repnz lods pusha scas in insl pusha inc loopne subl pop or (bad) in inc xchg pushf lcall mov in inc imul pushf stos out arpl mov ja mov push ss ret sbb insb test cld add sti push cmp mov sbb or pop leave ss jbe icebp mov jns and scas aad stc add xchg jge pusha orl add hlt idivb (bad) jl mov cmp pop test lret lret lret lret lret lret lret lret lret lret lret mov pmuludq mov mov mov jp ret movsl inc jo adc loope fbstp arpl pop push fbstp mov mov cmpsb lea adc scas mov out mov cs (bad) jo inc es cwtl push inc lahf mov adc repz fildll adc push xor jno aad (bad) out leave xor push int mov xchg aas jns cld mov jno inc jae jge shlb pop push (bad) mov pop pop mov fst jnp icebp das ret ljmp and pop push sub xor nop (bad) mov or hlt dec xchg popa and and xor es lcall cwtl in xchg pop (bad) sbb xor jle fiaddl test pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop mov lds ret mov retw movsl inc fs js or cmp das sbb call sub xchg stos lret or sub test mov andps pop icebp add pop or pusha jp sub outsb inc or loopne scas lods ljmp cs jle (bad) mov xor inc sub jp enter rcrb test lret xchg xor and mov jo pop ja arpl test das jmp sub idivb pop or inc hlt roll (bad) mov xor in mov mov (bad) popf stos popa pusha imul jg inc xchg sub push popf fcmovnbe std cmpl lods in pop xchg sarl in push cld sarb mov in lret lret lret lret lret lret lret lret lret lret lret lret add das add mov mov ljmp int and imul xorl clc sbb pusha dec or jo andl and nop inc in negl lods sbb mov iret mov xor xor pop fs jae add push mov fcompl test lahf fwait xor repnz add jns cmc xchg in in adc cmp inc push push cmpl aad rcl jecxz xchg pop cli pop jmp add rorb jge or adc ja sub pop inc mov sahf mov jae test pop fcompl push mov rcll cmp jnp fnop add inc repnz cwtl xchg stos dec mov lods jmp movsb lret lret lret lret lret lret lret lret lret lret lret lret in xlat push jno clc or fisub sub popa xchg sub into addr16 or cmp and xor fdivr mov jp fdivl mov xchg scas insl inc jp ret aad pushf sub dec and les ret scas dec xor ret mov lods addl cmp lret push jg pop mov insl mov ret leave in dec inc movsb sarl inc pop adc popf mov dec jge mov push pop rclb andl pusha push mov sub fldt or inc cli (bad) dec test pusha sbb add bnd data16 sti leave pop pop xor inc je push cli scas sub dec sub dec push dec push jmp push dec sub nop mov jp test insl subb dec flds gs add xorb pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop pop and popa mov aaa repnz stc inc mov test jl sbb sbbb dec addl mov mov dec movsl mov push xor xor jmp jle inc (bad) lret mov (bad) jecxz and mov loop loopne sub sbb and mov fwait inc imul sub and mov and ret (bad) jnp daa bound (bad) dec call (bad) repz mov sahf mov out out rolb adc mov ret cmp dec push ret pop mov mov rclb pop mov sti js fnop sahf cmp add pushf lods addr16 aas int sbb scas inc leave add (bad) mov fcoms cmp pusha lret or jno xor (bad) popa mov in adc inc orb xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor ja addb roll mov bound push scas jmp jg push ss xor or cmc dec push clc jbe or inc xchg rolb pusha scas sahf sbb leave lea (bad) dec pop sub int3 bswap gs inc push dec jne jmp pop stos cmp dec sub xchg pusha or adc push shlb or decb imul mov pop (bad) push xor mov push mov (bad) rcrb stos (bad) repnz mov mov mov cmp jb cld mov xchg add aad xor inc push and (bad) loopne dec repnz xorb fimul inc xor fsts push jp ficomp mov mov sbb int3 fwait xor inc into sbb lds (bad) call nop pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop clc mov or fcompl cmp lods add insl out stos cmp and push stc push sahf sub mov mov xor push sbb pop mov sub int3 cltd sub aad lret loope loop (bad) stc inc cs das and in mov les into cmp inc mov test and imul pop jle lods xor pusha inc pop xor icebp les jl mov int3 or add jbe add mov xchg clc dec pop in inc xor mov mov mov imul fimul inc xor arpl inc adc adc adcl pop xchg xchg movsl dec pop and aad repnz pop mov stc int mov push (bad) repz mov and xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor inc ret push and xchg clc test negl mov and jp xlat ret shlb push bswap pushf mov mov pop movsl iret lret lret pop fwait js and sbb mov jne jle bound enter aam rcl test fldt add push sub pop mov outsl adc cwtl and add push pop sub fistpl xchg scas xchg dec fsts add add jno (bad) stc mov in aad cld (bad) xchg test pushf xchg mov mov mov mov pushf adc jnp fmull add and or push push sub push addb pop lcall js sbb cli or jno,pt ja xor fidiv lret lret lret lret lret lret lret lret lret mov xchg pop lods imul dec or inc sub mov mov pop je inc lds push sbb pop mov imul daa add outsl cmp loopne (bad) call push stos jnp inc sub jae mov sbb loop out leave dec enter mov jbe popf roll cmp mov fsubrs aaa add jb adc pop mov jbe out adcb js test loopne inc xor cmp push es xchg lret sbb call dec sarb cli mov sbb jecxz cmp notl dec in mov or xor jmp in xor jns cmp and push xchg sbb dec or xor dec xor push pop lahf call sub popa dec xchg lret sub or inc lret lret lret lret lret lret lret lret lret lret lret lret stos (bad) mov jno pop jb sahf ljmp xor cmp mov lods adc mov leave cmp fnsave (bad) jmp sbb and mov xchg push sbb (bad) sar into (bad) fs out add push jns adc jge and rolb repz enter gs push lcall out mov sarl push scas lods loopne movb inc dec jmp fiaddl mov es push dec retw jbe das cmp (bad) das adcl fldenv bound call and stc inc dec dec and lods (bad) in inc mov gs mov jne lahf xchg mov mov push imul mov mov or sbb es lahf cmp push lret lret lret lret lret lret lret lret lret lret lret lret pop lcall lahf xchg loope push push jns mov (bad) cld inc xchg or dec mov add mov test imul adc aam sbb mov xchg (bad) aad rorb aam pusha sbb test outsb dec ljmp (bad) sti lock sbb and cmp add and xor pop dec dec cmpl loopne je movsb adc mov mov cmp mov pop or in cmp pushf ja sbb push mov mov test cs test and add adc pop and lods dec fbstp mov daa popa jg xor lcall add push bound bound push insl cltd scas imul xchg inc nop jne adc adc mov aam push cmpsb pop int lret das xor or sbb ljmp xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor dec lea lock jnp fmulp pop fs aam mov popa cmp (bad) (bad) or push cmp or push or cs je xchg fisttp cmp xchg or cmp jg mov lods add inc add shrb fcomps xchg imul push repz int jg call sub push xlat insb scas ja imul adc jbe imul xchg jno mov mov fcompl or fmull (bad) mov addl (bad) out pop xchg (bad) testl mov fnsave mov ss mov or jno movsl dec (bad) jns or jecxz (bad) imul dec pop lcall sbb push push pop (bad) repnz mov leave jae fdivrs pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop pushl (bad) dec ret gs lret pop pop add enter (bad) xchg mov pusha jp fiadd inc repz jno sbb lea mov nop push push and aam push fnstsw daa aaa pusha mov div clc out popf cmp (bad) adc (bad) je or push in aaa mov mov mov sub and mov add push add ffreep push cmp lds std push mov or dec insl cmp loopne bound icebp sbb mov sahf je pop jge test out inc or push mov out cld cmp (bad) add fnstcw clc dec jg xor xor test inc pop dec lahf inc rcrb not subl mov pop jl in mov xchg mov mov in test dec punpckhdq or mov je push mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor cmovne leave (bad) int jmp pop cmp push loope stc jmp jecxz cld cmp pop mov popf shl push cmp pusha fdivr addr16 mov or fnclex nop decb mov mov push int3 dec inc cltd mov repnz cmc ja cs (bad) pop cmc icebp scas cmp sub add sub inc cmp pop ss aas (bad) es aam add imull scas pop gs jmp cltd mov rcrl inc adc inc xor and sbb bound xor aaa push jle sbb cwtl shrl dec push mov cmp xchg call sbb sti jnp arpl lret mov test and into lcall pop xchg xor jnp fisttp lods aad les lahf repnz mov push fsubs and lret lret lret lret lret lret lret lret lret lret lret sub inc push mov cmp xor imul adc adc stos repz push adc push cmp push adc subl call dec jmp lods lods mov out sbb sub jae loopne jp stc cli mov add push lods subl pusha sbb ss test push cli dec ficom push lcall mov and addb or popa jg repnz adc jns fmulp inc fsubrs iret inc out ja or vpmaddwd cwtl add mov xor (bad) arpl mov dec es outsb ret es jmp adc or jp inc repz push out stc inc add mov sbb icebp (bad) xor in in push xor pop dec add mov stos jp push cmpsb addr16 jae pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor xchg cmp push pop sbb mov dec int3 mov out fs lahf lods mov xlat mov cltd push jno mov test mov xor sbb pushf iret sbb insl mov stos fwait out je pop das inc jl lods mov lods pop stos xchg fldcw mov push sbb add xor mov or shll mov out rcrl pushf jo sti or xlat loopne mov aaa into jno jg inc test jbe pop outsb pop cmpsb inc bound sarb test mov mov jge inc jp subl orl pop xorl cmp adc ja enter dec xchg movsl loopne (bad) insl sub mov push adc fidivrl jle (bad) fidivr xchg fcmovne in rol or aam mov pop pop out jp cmpsb mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor popf mov jo inc adc adc subl sub xor scas out cmpsb xor imul mov or mov inc push sbb inc inc xchg xchg sub loopne sub mov lock pop jne inc adc enter dec pop ja cltd (bad) cli xchg xor mov sub outsb or es jmp inc inc es daa jnp test xor push lret pop icebp outsl mov cmp xchg dec jne mov mov sub or (bad) aam push or jl add mov mov mov add xlat xchg ja push test add lcall cmc push stc pop outsb cmp push ja clc sarl cli dec pop sub xchg int xchg das xchg jnp push (bad) hlt roll rcl mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor add lcall movsb test or fadd xlat scas lea add dec sti leave pop push test mov js mov pop repnz loope (bad) push push dec (bad) in das ret mov cmp fcoms cmp adc notl add xlat call dec xchg in mov ret or jle test mov out jg icebp xchg mov mov repz es mov jae inc jp mov mov adc sub es fucomp (bad) outsl push push adc dec inc ficom aas ficompl xchg adc mov dec mov sbb pop adc test les xchg aas stc inc pop adc (bad) sbb dec (bad) dec sub mov pop push pop add push js movsb in shrl imul lret lret lret lret lret lret lret lret lret lret lret dec mov and inc mov (bad) cmp fldenv push xor add mov (bad) mov xchg dec test xchg rcr dec mov mov mov ret cmpsb mov add adc sahf sbb sbb bound mov fdivs and aad xchg inc fsts mov mov or mov (bad) mov lock adc stos mov and xchg cmc dec and jne mov lret iret popa or xadd icebp lcall pextrw jg or lretw mov jnp dec cld pop lods enter cmpsb inc ret enter cmpsb inc inc leave test fistl ja dec dec nopl inc sub (bad) js imul sbb pop pop js mov subb dec in rcrb lret lret lret lret lret lret lret lret lret lret lret adc (bad) cltd div mov (bad) dec jmp lods out out mov xchg pop sbb ds adc int3 push stos lock mov in sub cmp cmpsl inc add xchg add pop add jg xchg pop mov mov adcl sub sub adc lret xchg mov int3 push addl lods cs mov cmp stc push adc fwait cmpsl iret push or pop sub push paddb mov push push hlt dec inc repnz aaa (bad) lock mov fisttp adc (bad) sbb insb sbb pop ds (bad) xor mov xchg mov push popa out dec dec and dec pop inc jmp mov in mov lock xchg mov int3 mov and sub adc daa jbe dec add hlt lret lret lret lret lret lret lret lret lret lret lret lret mov ja jns xchg movsl xorb cmc xor out mov lock xor stos lret aas jno inc jnp xlat (bad) cltd push cli es test std add adc popf in leave jp lahf or mov xor jge add stos cli lea pop inc xor data16 dec xchg lock push in and pop and push ret xchg pop mov std xchg mov pop mov aas adc add pop int3 push jl or mov js bound xchg stc mov stos and ljmp xor add pop ljmp lret mov shrb das dec dec aas push pop mov test mov shrb outsl push pop movsb push adc pop repnz iret sbb lods sub jno (bad) stc mov daa push scas daa adc pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop (bad) xor push sub push fcomip (bad) lods push mov cmc loope or sub rclb sbb cmp pop aam xorb fwait jno cltd cmp mov into test push arpl into and ds out pusha dec push lahf xlat jb xchg sub jle (bad) xor aad (bad) mov icebp out stos cmp popf cmp mov push addr16 lock mov mov push lret or cmp aas loopne rorl mulb xor nop mov pop sbbb (bad) gs sar mov sub movsl cmp pop xchg cmp pushf sbb dec js jp jb inc jbe decl (bad) mov lock xchg push cli cwtl sahf mov out cmpsb inc push pop je (bad) sbb and shlb rclb jl rcrb cwtl pop cwtl add rcrl pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor mov aad imul fiaddl fidiv sti data16 addr16 sub inc scas out lcall lret fist (bad) fildll sbb add mov pop scas call out daa fisttp (bad) pusha (bad) roll fildll jae and lods and (bad) adc adc (bad) sbb and (bad) jmp (bad) inc pop imul push fs mov dec add mov mov mov cwtl mov pop stos pop shrl cmpsl mov or ja es sub out int3 test push dec fistpl (bad) mov aaa imul mov call and cmp cmp cmpsl mov mov adcl cmp jmp lahf and std or mov cld mov dec xor jg mov out push test dec lea mov fmulp pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor ss fidivrl test sub stos dec cmc jg cmp pop push add js test cmpsb jge and clc int jmp add aas fiadd cmc add lods loop fldenv iret adc imul jmp lcall fistpl test sarb dec lds aad and add push out xchg dec lods sub in push sbb test sub xchg ss dec dec lahf aam or js fmull xchg scas shll pop cs cltd pop inc lahf nop mov lret sub jg push sbb sti lret dec mov add (bad) push jg sbb mov mov aad pop inc es sub or mov int3 sub dec push jg lds xor add pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop testl mov pop mov lods (bad) xor sub in mov call pop xor mov incl push scas dec mov ja fisttpl mov sbb orl xor out cs mov or call daa sub dec and jbe int mov sub push or rcl adc mov adc cli (bad) xor or addr16 add sub imul leave cld pop dec rcl dec lret mov cmp pusha add lds dec add shlb add pop xor lahf xchg scas push hlt cld jg add mov orb xchg enter ret pushf in xor adc lods inc (bad) mov jge mov mov mov popa hlt retw xlat in and out or scas or fistp lret lret lret lret lret lret lret lret lret lret mov cld mov (bad) push jg (bad) test mov lods and ret or jle fnstcw (bad) push lcall and mov inc jo cmp mov cmp js pop xor mov pop cmp cs jno (bad) ret push aad jne test in aad or jmp adc das dec sbb call mov call inc dec sub add cmp dec int test xor fidivrl pop cmc mov jns xchg loop and fwait cwtl repz dec mov adc scas sbb in push or pushf sti cld rcr clc mov lock lods andb leave cmc xchg pmuludq mov popa (bad) enter divb jl mov xor js notb (bad) daa mov movb mov mov adc xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop add adc jns push jle orb ret les dec xchg rol mov mov xchg xchg push mov dec push sbb xchg adc mov (bad) push outsl rcrb lret cmp lret int3 push das aaa add pop push push ret scas out das mov dec divl push loope stos mov stc xchg adc lds ljmp sti mov xchg imulb fidivl sbb xchg test sbb mov mov repnz xor popa cld xchg lods je jge and dec fnstenv inc jne stos lods pop rorb mov shr push lods push or and push sbb xchg lock inc leave lods ret (bad) lods fnstsw push rolb leave sub flds xchg rcr jl push sbb xorl test inc inc clc xchg jns test xor lret lret lret lret lret lret lret lret lret lret lret lret addr16 xor push jle push das fwait xchg fwait xorl inc and sbb test sbb sub rorl repnz (bad) (bad) fild pop int3 sub push sarl or hlt jne (bad) adc sub mov gs adc rcll (bad) cmpsl stos jns repnz outsb jl scas cmp cmc punpckldq jnp loope mov lods inc mov arpl adc out xor adc jmp fidiv mov pusha (bad) bound inc mov mov or cwtl lods lahf clc xorl pop test inc popf insl mov xchg scas jae or ss inc (bad) enter js setno es mov mov testl mov pop mov lods (bad) xor test in (bad) jmp add mov push (bad) mov add fidiv test lret lret lret lret lret lret lret lret lret lret lret lret and fnstsw sbb arpl sub push mov (bad) pusha scas ror mov and cmp sub mov xchg jp movsl aas out enter xchg movsb insb cmpsb pop mov iret jge fmuls and sbb xacquire mov aam ret test pop fucom inc jmp les sbb rcl hlt mov sbb inc mov fnsave fnclex test daa mov int3 cwtl mov lahf loop in (bad) jg repz or shrl div lock lods lods insl jns pop lods and mov mov push test adc out lcall sar add mov and rcr pop movsl sarl cld mov adcl push stos (bad) mov lods and ret dec xchg jo adc clc fsubs stc adc lret lret lret lret lret lret lret lret lret lret mov cltd inc ss std lret shrl mov mov jp mov cmc mov mov push outsb sbbl (bad) out jp test pop pop aaa mov mov or js les (bad) lock dec pop push mov sbb stos jo add adc mov jl adc movsl mov pop jbe movsb das mov repz (bad) mov pop adc call and mov (bad) ljmp sub add push cmp pop mov xchg jecxz adcb mov pushf cltd mov dec nop mov in and mov sub inc inc jge ffree add int loop outsb sub jo adc clc fsubs stc xor pusha (bad) cmc dec and lret lret lret lret lret lret lret lret lret mov cmpsb mov into or popa or inc mov repz fs inc sub and nop test stc aas cmp stos pop test sar xchg out push mov xchg sti inc push jb push les into (bad) (bad) repnz push fcoml jecxz jns pop lcall jmp ja aam fild adc hlt mov sbb xchg xchg out push push xchg arpl mov ret sub pop mov jae inc ss add or mov arpl fadd jbe cmpsl js lods xchg mov dec nop mov in and push push mov out mov stos or (bad) outsb mov mov or nop push addr16 add ljmp pop cmp (bad) loop dec mov clc jnp je (bad) pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop sbb lcall mov repnz push xchg pop xchg mov push mov ljmp das and cmpsl push mov jne in jnp les mov lds dec (bad) int (bad) sub mov repz and outsl stos jo lods lods in clc xchg bound shrb sbbb lret daa nop and inc cmp inc std (bad) fbld (bad) mov das loope (bad) jne jge ljmp bound inc lea out mov rcll fmuls jno pop sbb jne sub jl xchg int3 fwait pop fstpl pop (bad) or (bad) addr16 xor insl lret lret xlat add and or outsl pop out and (bad) fcmove pop push jle mov ss jge push in push cmp sub ljmp cmp dec insl jp or mov and lret lret lret lret lret lret lret lret lret lret clc inc stc ss pop stos addr16 int3 jmp iret jl fmuls and sbb xacquire add rcll fiaddl mov mov popa sbb rcl dec hlt es jnp neg jbe fdivr fucomip int xchg repnz aas cld sahf adc imulb ja lds and dec leave iret dec icebp leave pop cs pop int xchg adc inc add mov or mov (bad) sti jbe sahf cmp rcl add es cs sub mov in (bad) fcmovnu call (bad) fldl2e add leave push lret je or lds in dec cmp mov sub insl jnp jge inc and pop or mov lods sub ja idivb les insb pusha jge jnp push fcmovnb sub lret pextrw pop aad push fidivr pop xchg mov lret lret lret lret lret lret lret lret lret lret lret lret jb stos les mov outsb (bad) add jns push pop gs dec bound insl cmp add ret sub xlat call and fadds push dec scas sub stos repnz cld xchg xor insl subl dec (bad) fcomp jmp das pop xchg clc add idivb mov es pop xchg out jnp add jne adc jno mulb sbb fcoml cltd pop out inc fstpl movsl add leave outsl mov adc xor cmpsb mov and mov montmul cmpsb inc mov add cmp mov cmp push pop mov cs mov mov inc or push fldenv jns and xchg lods imul inc inc lock jl outsb mov enter sbb cwtl xchg push aas lret lret lret lret lret lret lret lret lret lret lret lret lret out lock cmpsb mov imul addr16 (bad) xor or mov sbb mov mov shlb dec sti sub cmp out fsubs cltd mov xchg cmc movsb aas stc rcll cld jbe out mov xchg sbb lock and std mov mov lcall std je (bad) das or jge movsl sarl in push push push (bad) cli out mov inc inc fstpt push xchg mov or mov mov sbb xchg or sbb jne pushf rcl aad ljmp sbb popf jae or xchg dec push repz imul test popf dec lods outsl iret sahf out xchg jle cmp jo xchg xor lret lret lret lret lret lret lret lret lret lret lret and xor push sub sbb push sub cmc mov sub xchg cmpl or in fildl or bt inc (bad) mov inc (bad) int3 mov arpl gs fsts xchg enter cmp jle (bad) pop in addr16 mov lock push sbb call cli dec (bad) xor std add fs mov negb mov or mov (bad) push push cmp popf and montmul cmpsb inc int inc test dec or lret fs mov lods xchg and bound (bad) cmp jno sub mov out xchg idiv js popf mov lea pusha imull pushw stos mov cmpsl xor sbb dec dec lea aad xadd mov push mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor xchg xchg das xchg mov pop xchg in pop fsub xchg mov subl shlb out sbb cmc or pop mov ficompl cld sub jge jmp ja lds sub loope xor adc inc sub mov xchg data16 scas popf orl int3 jno add (bad) jae imul and std ret icebp mov inc or mov adc mov test dec or mov cmp js nop adc test mov sahf mov int3 dec mov xor jno xchg dec jne cld cmp jp push (bad) cwtl aad nop addr16 fwait sahf movsb dec add ss repnz loope imul and das inc out sbb dec pushf out jge enter xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor cmpsl inc mov bound adc insb out sbb xor xchg popa aaa add xlat jb jle insb not mov popf mov xlat dec (bad) test mov shlb jmp outsl insb cmp stc hlt xchg jo push leave test jl adc and std gs es dec xor std push cmp mull movsl cli fdivp push movsl inc aad repnz dec negb jg ja jne xchg sbb out or inc or cmp jl push repz int stos push push ret mov jns pop mov xorl ljmp repz or movsb aas mov jb subl cmpsb gs aad jl xchg inc out jmp lds bound sbb jo sub cmp xchg aas push orb sbb ret push xor ret lret lret lret lret lret lret lret lret lret lret lret lret mov xchg out sub mov jno lds lock fs sbb cmp dec inc (bad) out sub add jmp sub jecxz or paddw ljmp pop repz xor inc mov dec test dec std add fwait mov les push pop movsl cmpb fldenv xor shll lock push mov out xor into push and lea jo outsb jae sbb push jno mov scas mov mov push imul repnz adc adc mov fcmovnu bound push mov xchg sbb xchg (bad) xor xlat mov ds add (bad) jb pop (bad) test aad add pop adc cltd js or dec mulb or outsl stos jo (bad) adc xchg mov and lret lret lret lret lret lret lret lret lret lret lret mov inc sarb das lret idivb inc inc xor int3 and sbb in fs adc and pop lea (bad) loop stos es jl pop xor in hlt daa mov mov push sbb mov cwtl rclb add cmp mov push fisttpl je addl (bad) adc add repnz or test xchg sub cmp push jg out shrb fistpll cs cmp dec cmp mov pop into das add push (bad) push iret in add (bad) (bad) or push daa pop dec test sahf sbb enter fiadd dec cmp out cwtl inc sub ffreep popf scas dec xor pusha loopne imul mov pushf xor out xor (bad) sbb out cmp fildll xchg cmp ljmp test imul sahf lret lret lret lret lret lret lret lret lret lret lret cmpsb enter cmp stos jge fchs add inc mov mov int3 push es xchg jnp outsb ds inc xor add sub jle cmp cld or fistpll notl (bad) das mov (bad) addr16 adc push push arpl pop and fisttpll int3 and jp (bad) loop dec aam je sub and xchg jns push ret xor jle mov outsb xor (bad) or adc mov push push cltd inc add push dec pushf mov fcomps inc xchg sbb out sbb fstl dec mov lods pop insl mov dec dec jnp cmp out and mov push lods (bad) aad xor lahf test sbb adc mov jns and in jbe dec jmp out cmpsb out sbb mov int iret or lret lret lret lret lret lret lret lret lret lret lret orl mov jle jl lods addr16 aas int fldt inc jmp les ret push sub xor imul cmp mov roll in mov fwait lcall int fisttpl add sbb shll dec outsl sub mov jne mov and mov cs mov mov (bad) negb mov aaa cmpsb mov lea scas or pop pop sub inc mov adc test ss stos ds das sbb xchg jmp inc mov jno push jge sub test (bad) or ds or fxtract roll movhps push mov loope pop sbb add or lcall cmp pop (bad) xor popf and std andl lret lret lret lret lret lret lret lret lret lret lret lret test icebp pop inc mov sbb fnstenv cmp jno rol push cmp add push or enter mov xor push add out pop out loope repnz sub test sbbb icebp xchg sub (bad) ficompl xor mov pop xor cs mov inc ja cmp xor xor or inc in test adc mov xchg mov sub fistp or jmp jo loopne (bad) lcall mov add xor cmpsl jae mov pop lods cmp xlat or sub scas lock addr16 jo (bad) pop pushf mov or subl add xlat jb stos mov jmp adc or imul mov mov data16 xchg in arpl insb xor aam lret lret lret lret lret lret lret lret lret lret lret loope inc and cmp out out xchg and push (bad) aas lods pop cmp cwtl test loopne mov hlt ret pop inc (bad) dec into je xor test js or int mov fisubl add ss add nop sbb dec push or mov pop pop test lret fdivrs lret int3 in movsb mov movsl mov jp lock jne aam repnz cwtl sbb xor jne test dec mov push lds popa mov cmc push or lret out or scas push sbb es push aad pop inc inc xchg mov (bad) sbb mov sub subb pop jge jle in addb xchg and mov pop cmp push inc je cpuid in insl jp pop mov lret (bad) sbb test pop jns and pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop dec aaa mov fs add adc xor cmpb xor out addb sbb inc movups lret and xchg jb push das jmp lahf jmp test int inc in sahf dec dec push clc mov or out cs jle (bad) mov stc jecxz (bad) fisub mov dec fcompl test call shlb aam lret inc scas jnp imul xlat xor xchg popa mov std (bad) xor jl inc out adc dec and sarl jmp pop movsl push pop add stos xor pop in dec lock push movsl pop aaa enter pop or ret lods inc mov dec (bad) scas mov (bad) pop jmp fnop data16 xor jb rcll sub mov lock mov xor push mov fs pcmpeqd dec cmp pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor jmp pop (bad) in in iret test pop jg lods sbb ret cwtl xor out push add (bad) xor mov jae or mov mov int3 push into xacquire fnsave push mov cli lods ljmp push outsl cmp push dec xor push jle inc sbb jecxz (bad) out idivl adc aam aaa push adc inc dec inc and mov mov stos mov jns jbe dec test xor mov sbb rorb (bad) push rcl test and (bad) mov pop mov xchg and and fcmovnb push imul shlb xor (bad) cltd notl in pop roll mov and xchg loopne lea inc (bad) aaa push cld insb pop push data16 push push mov ja xor addr16 jns add dec ftst addr16 add xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop dec call xchg mov adc (bad) movsb jne xor pop cmpsb inc bound popa or push outsb push fnstcw or jg push ss cmp fnstenv or and out or cmp jge pop xor arpl loope dec test addr16 lock jmp icebp pop scas dec jae mov hlt sub and imul mov icebp push sub ja out mov push cmp (bad) inc mov ja sbb out aaa jne,pn mov daa ret lods adc mov mov push cmp idivl repnz out mov insl (bad) pop in daa cmp rclb stc push sub add jnp mov popf orl and movsl add aad les xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor mov into mov ss cmpsb inc mov sbb (bad) or jno,pt ja hlt dec ficomp dec and movsl out mov lock cs push xor daa cmp ret dec mov addl dec dec icebp cwtl aaa inc imul fwait lahf in jne inc xchg push stc xchg add mov jl push ljmp test push xchg sub jg out dec out pop xchg push dec xor (bad) hlt roll rcl test and (bad) mov pop xor xchg imul addb arpl fistpll jns jno mov inc jl int xchg add loope aad dec pop jecxz dec stc pop pmuludq mov xlat mov andb cwtl mov daa test xchg add popf mov dec int3 fwait test in pop and or popa je mov das dec fadds mov dec lret lret lret lret lret lret lret lret lret lret dec (bad) (bad) int3 jg pop js sub mov push ja cld imul or adc lock ret jmp mov mov push dec fwait inc loope (bad) cli cmp xchg (bad) mov jmp jo jecxz (bad) (bad) fiadd xchg scas ljmp dec mov mov push xchg in push dec cmp stos jo rcrb (bad) movl pop add not int3 dec imul scas pop jg adc call scas inc and repz sbb outsl insb aaa xchg flds sti dec icebp imul mov loope xor jno popf push fs es call dec adc std scas or adc sbb add cwtl pop xor and xor or gs xchg lret lret lret lret lret lret lret lret lret mov stos shrb cs jl push lock adc xchg stos das mulb fstp fcmovnbe (bad) jmp test (bad) dec icebp add rcl inc insb mov iret insb xchg fidivr ljmp dec xchg jae push inc outsb jo inc (bad) cld ss jecxz add dec sub mov or test mov jno fs mov stos mov xchg fwait mov xchg test (bad) sbb icebp cmp jmp mov ret jmp jo out pop (bad) stos mov mov mov sub jae mov ret call notl (bad) into test decb mov pop mov cmpsl inc jno jns sti test or add sub jecxz or scas outsl push xor jle ja push lret lret lret lret lret lret lret lret lret lret pusha dec add scas sub inc scas lods ljmp xchg sbb cwtl sahf scas (bad) out leave ret pop xchg loope inc push jns outsl out pop lahf sahf fcomps mov fistpll mov arpl fwait push add cli ds jae mov sbb sub sub pop rcrb movsl push lret fisubl and dec rorl xchg shr xchg aaa enter inc or ret inc sbb mov jle mov or movsb or and (bad) mov outsb repz movsb adc mov into mov cmp fcompl daa ret jae test pusha xchg in or adc adc fmulp pop xor add jmp ds xor repz mov xor xchg mov ja call and xchg cmc xchg call pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor xor push mov jecxz and in push int3 push (bad) jle cs pop fmuls mov pop shlb push (bad) mov mov (bad) xor lds ljmp movsl jbe xchg sbbl push or mov push or push mov cmc jo jl xor xor outsl pop jne lods push movsb test sbb mov (bad) scas out mov (bad) stc and push add fldl inc loop pop sub jecxz mov int3 fidiv jns (bad) or jns (bad) daa add aam nop or jnp jg mov adc leave dec into add jnp test std sub inc bound in (bad) cmpsl or jle mov (bad) pop xchg xor sahf (bad) lods sbb in mov push jae fisubl pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor cmp lcall mov fmulp pop push mov (bad) fcom int sahf mov jno (bad) mov (bad) jmp and ret imul cmp sub ret and ja repz mov inc mov dec das (bad) imul add push push mov cld push jno icebp xchg das jg and clc lahf push xor xor mov (bad) outsl repz std cwtl imul mov push mov pusha repz or cmc push (bad) sti hlt pushf ret adc daa ftst dec andl inc dec xor shrl add add cs pop das insb (bad) pusha movsl mov and cmp in xchg mov icebp mov rcr cli jnp jl (bad) sub sbb leave lea jns pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop sub pop cmc push gs fildll (bad) jbe imulb enter xchg (bad) xor scas mov je out (bad) bound into mov mov sub and stos push xchg sbb int int3 xor pusha lods adc (bad) mov cmp cwtl into loop test jmp mov lcall cmp iret push lcall mov cmc sub dec cmp mov sbb mov jnp test adc jno push jp ss sub mov adc xor addr16 fidivrl mov loop mov inc xor xchg mov sub mov cmp call shr std mov add cmp mov adc push ss loope add dec pushf jle aaa xchg lret lret lret lret lret lret lret lret lret lret lret lret lret pop ret data16 iret (bad) out fwait dec sub (bad) jo pop aad xor sbb push cmp sbb push cltd stos leave jnp sbb and push jmp daa xor cltd mov subl add xor mov notl nop inc cmpsb ds out cltd call outsb loope xchg clc leave sbb mov add loope cmpsl push jb stc xorb push add lahf in mov inc pop nop imul int sub sbb mov jmp sub dec into fistpl das int dec shr mov ret and xchg jb mov cmp mov cmp pop xor push in sub sub mov cwtl push cmp dec sbb or push mov cmc mov mov xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor mov xor jns jb xchg adc inc data16 mov and fs cld xor sub mov mov std hlt nop push fbstp jns popl xor out and jns int3 gs scas cmpsl cltd pop pusha lahf xchg scas ss add pop dec cmp es lret fldt imul insl aad inc pop jecxz xchg dec xorl leave es (bad) int3 xor jecxz jno lcall add xchg add mov movsl add aad cltd subl cmp and lcall insb inc mov lret mov xchg cmp push in out cwtl ss cmc xchg arpl jno jnp arpl and and mov lret pop test push in das sbb mov stos sbb pop data16 into into loopne xchg fs out dec xchg xor ficompl xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop test fstpt in ret cmp xlat xor jge repnz mov and xor jmp insl fsubrs nop push mov (bad) cmp sub cmpsl lds popa mov ret mov (bad) cmp clc cltd enter mov arpl out addr16 mov hlt mov test mov jbe (bad) int fs dec loope mov pop aaa xchg scas xorb and popa je fwait in push adc (bad) movsb scas xor inc aam mov dec mov cwtl xor mov out hlt mov add scas lods ljmp xchg jae add iret stos js or xadd mov mov lea hlt dec lds jne out pop stos in mov ss and test add shlb mov (bad) lret lret lret lret lret lret lret lret lret lret lret lret imul repz movsb or mov lds push push lcall lock xchg and dec les call dec dec pop mov xchg add in xchg adc add cs pop ss lods sub loopne mov cmp aaa pop psrld xor ret enter data16 fsubrl shrb mov mov fsubr stos pusha cmp int orb push je xor test xor dec aad mov lret jb push icebp cwtl push pop xchg shll movmskps sub or and mov and and rcr and dec test push and sarl cmp daa inc mov aad inc sbb push adc lcall (bad) cmp push xchg insb adc adc subl lea xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop enter mov xor icebp in mov lock xchg addr16 push push test dec mov lods sub mov fidiv jmp mov mov inc (bad) sub mov loope cmpsl std (bad) xchg push fs inc leave lods adc repnz xchg sub fsts lea pop fstpl dec icebp (bad) jae imul dec into push pop out xchg cld cld stc int andl xchg or xor es push ss jmp dec in xchg out dec std test or out cs data16 (bad) jge and push and popa xor or push rcr mov cwtl xchg and rcll stos mov mov stos dec daa jmp lods adc scas jle test push imul lods cs std movsb or mov sbb bound lret lret lret lret lret lret lret lret lret lret add inc pop shlb adc nop jae inc cmpsb dec imul xchg push test cmpsl repz loopne inc jmp mov rclb jnp scas mov mov xlat lock push xchg push testl popf in (bad) es mov xchg hlt dec adc mov call adcb fmul dec into or pop (bad) incb lods popa dec popl icebp js pop jg bound jg push ss out jp xchg sbb jns ljmp roll aaa cmp lds xor pop push dec xchg xlat inc and and mov test xchg add jb dec fisub jg fimull push cmp inc pop cmp cmpsl js dec into in push cmp sbb push out fbld mov pop mov add aad lret lret lret lret lret lret lret lret lret lret xchg mov sbb call lods adc cs sbb dec or pushf sti add loopne stos lock rolb push lods xor adc xchg lock sub push enter cmp push push cmp fwait test in gs or repz xor cvtps2pi fldcw cmp test xor mov out int3 inc (bad) fidivl in repz mov divl and mov fsubs push mov scas nop sbb cld mov pop into adc imul push (bad) dec inc js stos mov dec and adc sub lahf pusha or pop adc fsincos jns ljmp inc stos inc and movsb je mov nop stc dec mulb xor sub xchg sub nop or mov (bad) lret lret lret lret lret lret lret lret lret lret lret lret xchg decl (bad) xchg std movsb aas stc rorl icebp outsl pop lods (bad) rolb cld loopne or mov xlat (bad) mov xor fcomip fisubrl std sbb lds xchg inc or cmp arpl push mov mov fs or jns mov sahf cli xor mov lock and add pop push aam out and lds or sbb mov aad mov jl cld xchg outsb and popf jae fs lds xchg aas mov mov pop xchg xor vcvtss2sd mov jge inc mov cmp aad adc and sahf testl adc or push aas inc pop repz lahf adc mov sub int3 bound xchg addr16 nop xchg int3 movsb ja call xchg bound jecxz lret lret lret lret lret lret lret lret lret lret lret dec cwtl mov popf cltd mov (bad) outsb repz sub aam mov cmp add adc sub fsts push jp or iret push fstpl pop movsl add aad les (bad) into mov cld xor inc popf movsb adc sbb sub (bad) adc xchg cmpsb mov and mov pop lods mov xor (bad) mov ljmp dec dec pushf inc pop mov mov gs leave sub sub adc mov push mov mov inc pop xchg repnz es test das jmp int cmp ds fisubr pop xor clc roll pcmpgtw push pop mov and xchg inc aaa xor mov cmpsb pusha popf xlat scas cmovae stos bnd data16 sti leave pop adc mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop add shrl icebp push mov mov pop ss lods scas mov cmp dec pop ficomp ret aas inc fiaddl push (bad) dec sarl test movsl addl xor testb sti (bad) mov inc out and adc pop push repnz cld ret test ret lods in push cmp mov in dec aad ret (bad) and xor mov xlat jno inc and adcb inc jne in mov mov xor inc and pop imul xor dec cld aam shll mov cmp sub xabort movsb mov jmp mov clc push mov xor cmp addb lods sub lahf cmc outsb mov fsubl mov repz push (bad) mov insb mov imul lret lret lret lret lret lret lret lret lret lret lret xchg jnp lods test push add pop repnz xchg stos add add xchg xor xchg test mov xor xor fwait pop lea jg subb cmp mov int3 pop icebp out fs xchg jae push and pushf xorl dec and movsl dec push clc (bad) cmp pop mov sub in mov xor (bad) mov pop mov mov mov loop (bad) xor push mov sahf out pop xor popl outsl sub aaa sahf cmp jg sbb or sahf je push lcall stc test cmc xchg fs loopne test inc push int3 push mov sbb mov das rclb dec adc pop lods (bad) inc scas and (bad) dec or mov lcall and xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor adc das mov xchg inc ss std lea cmp mov or stos add fsub dec pop fldcw push and mov dec sahf cli xor lea or jbe xchg mov cli fsubl ficomp dec and movsl xchg call sbb sti push pop cvtpi2ps cld pop mov xor add push in inc cs loopne push xchg xor cmpsb cmp ficoml sub (bad) call es pop push jecxz lcall out inc inc stos mov pop pop adc subl test and pop push sub das inc ficom xchg jae jmp enter adc stos xchg dec mov add cmpsl push dec jno jo insl int3 xchg jnp (bad) insl pop bound outsb ret aas sbb imul pop inc cmp mov and push pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor insl push cmp (bad) dec sbb adc dec fisttp dec dec mov loopne jmp aam jns clc jae std mov cli mov shrb push xchg mov imul jge nop jne adc xchg std dec std pusha scas aad cmp ljmp daa scas mov pop ret mov add orl mov out pop mov jo fsubl (bad) mov je mov popf pop sbb adc fcompl (bad) and aaa sahf cmp orb adc hlt inc jne push rclb push lods lret in xlat mov sub (bad) jno adc (bad) gs dec fildl jae jl xchg pop imul (bad) xor fadds das cld mov xchg adc mov loope lock push mov inc fidivl dec lret mov push cmp mov lret lret lret lret lret lret lret lret lret lret sahf pop stos ja,pt mov arpl mov mov jg daa sub cmpsb loope add dec add pop pop jb andl insb mov mov and (bad) mov fcmovnu sahf sbb lds aam bound push mov sub mov sarl repnz add xchg mov sub daa cmp idivl ret imul cmpsb std cs out out movsb xor jbe cwtl sti pop int3 dec jae in scas sub test or mov gs mov cmp push aaa adc into cmc xchg pmuludq mov add nop mov xchg stos shll inc pusha lret rcl jne add cmpb pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop mov andl push add (bad) xor (bad) fnstsw and mov xor test xchg or in sahf sbb mov bsr mov jl pop sahf es daa xor mov sbb sysret sub fildll test fwait incl cmc push and mov dec pop adc adc sarl ss pop sub cmp dec or xchg push rdmsr push in roll movhps js aad sbb clc mov add (bad) push packsswb jmp rol xchg int aas stc add mov jecxz xchg aas in sbb imul fadds pop add mov andl sbb jno adc xchg test insl lods sbb mov and into mov sub out stc jae lret lret lret lret lret lret lret lret lret lret lret lret lret mov bound inc lahf mov sbb and repz cli adc enter pop adc adc push add fnstcw mov mov fdivl push push fdivrl popf loope mov cmpl fdivs and xchg add xchg pop push xchg inc imul mov pop ffreep sub in fildl push out jo xchg rcrb std lret shr and mov dec inc (bad) sub mov (bad) push into dec (bad) push mov sub sti jmp adc in aad push in addr16 mov lock ss test push cli dec fsts jne lods jmp inc (bad) in xchg pop icebp scas mov mov or fnstcw and adc jns and cmp add hlt pop outsl lret lret lret lret lret lret lret lret lret lret dec xchg mov es inc mov pop sub add mov lea dec aaa (bad) mov out mov jl addb int rol iret pop test sbb inc lret jb mov dec test jmp aam lcall fistp lods ss aas sbb or jb adc rclb es nop jae inc cmpsb dec imul xlat scas push mov enter iret iret jle cwtl pop pop leave jnp lods repz xchg stos pop mov shl in push cld fiadd sub leave sbb xor xchg add adc cwtl inc pushf cltd imul pop lcall (bad) addr16 ficom lret adc test cmp ret fs xchg mov subb inc cld lret lret lret lret lret lret lret lret lret lret lret nop inc dec adc sbb or sbb xor or imull je fsubrs mov imul and mov cmp mov xchg inc sub or das and dec stos jg loop imul cmpsl js fildll dec jb sub outsb stc push outsl and add in mov lock xchg fild outsl mov mov push (bad) les (bad) jne jae push inc (bad) test fwait loopne xchg pop stc ret test cmp push in addr16 mov sar iret fnstenv cmp test hlt mov inc push test jmp (bad) rorb mov call pop and jno jg add incb out int in or sbbb fsts mov dec loope and pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor shrd imul repz lret or stos in push xor or sub sub mov inc jns scas in aas popf mov mov cld cmpsb inc ja push cmp js push inc lods mov push dec outsl push pop mov xchg lea fdivs out cli adc add push cmp add push aas mov pop xorl test les pushf add cmc xchg sbb mov jno mov or lods dec addr16 loopne push (bad) dec xchg (bad) arpl xor lret (bad) xor dec mov cwtl push sub sub add and mov int push push mov xchg cmp dec call jp push push or or stc mov movsl les lret lret lret lret lret lret lret lret lret lret lret lret lret aad ljmp xchg push hlt dec xchg je xchg popf shlb dec mov pop jbe mov adc lea xor imul aas stc inc push cltd iret mov ret aam ss sbb popa cwtl xlat fbld mov pop fldt cmp loope mov lds inc pusha addr16 (bad) scas test out mov lahf adc pop in xor sub mov xchg divl into and mov pop leave mov push sub push bt mov or sahf fsubr stos (bad) (bad) shrl js sbb decl (bad) mov adc iret or pop xchg gs insb jb push lea cmp cwtl push fisttpl dec cmp xchg cmc mov mov push inc xor daa lods lcall lret lret lret lret lret lret lret lret lret lret jo test bswap out cmp dec lds push xchg mov fidivr or cmpsb xchg jmp mov cmovg mov (bad) xchg aad sub push cs push (bad) sti jo popa mov mov les call dec out or xlat scas and cmp data16 mov xchg add les sahf mov push (bad) mov test inc stc dec repnz out pop test mov or mov pop fstpl cs ljmp into fwait dec loope add das xchg enter movsb jne out mov push mov and or add mov mov sbbb mov ljmp daa add popf (bad) stc into ds shlb push outsb jp xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xchg call and in cmp lcall xchg scas cmp pop in cmp arpl out (bad) lret xchg cmp pushf sbb outsb cmpsb push outsl rolb ja cltd dec sbb cmp subl popa repnz xor pop inc (bad) fwait mov xlat dec (bad) test in inc or adc in stos mov shlb adc inc imul push movsb sub pop inc xor mov int3 mov popf cmp mov push fstpl movsl rcrb outsl (bad) movsl test je dec jnp test mov mov jmp mov jle es push ss xor xchg mov sbb xchg cmc dec adc mov repz nop cmpl mov pop inc pop mov outsl ffree test movsl (bad) jmp outsl shl mov mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop mov cmpsl in xor das or dec inc fst cmp out jnp pop xor jmp int cmp ds push fsub mov or negb adc lret mov lret outsl push popa lods je pop rolb mov pop shr stos (bad) inc add andb add mov out lods aam out pop dec jge,pn imul pop hlt mov inc push test lahf inc daa in or data16 nop push push xchg dec shll adc leave dec into or jle push (bad) test int3 and in inc fs icebp push or adc mov mov clc test mov lock mov mov sub push cmpsl cli xlat mov dec popf jae pushf dec pop icebp sbb pop fdivrl ret jmp pop add aam sbb std (bad) ljmp jo pop fsubs lret lret lret lret lret lret lret lret lret lret nop mov mov xor (bad) (bad) xchg jnp icebp xchg (bad) ljmp add xor cmpsl xchg je (bad) das fs xor fistp pushl add xlat jb ja mov or popa mov sbb movsb sub xchg lret fnop xchg xchg aam push cwtl and mov push sbb xor add popf mov and cmc push movb cmp fmull push (bad) (bad) dec (bad) popa jl xor lcall add insb xchg push dec mov popa rcll xchg adc (bad) ja adc cld test movsl mov xor xor and xor test cmpsb xchg inc shl imul add xorl mov xor adc cmp cmp pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop int3 xor pop xchg das sub pop out xchg mov stc sub inc dec mov icebp sub clc cmpsb adc movsl les popf or mov je fildll inc jl dec and cld push fsts das xchg dec imul dec in test dec mov mov sbb ret jg sub cmpsl out rol lds (bad) lret (bad) xor inc mov inc xchg push jle add test add push js (bad) mov and push cs loope test mov dec in orb sarb gs sahf scas sub mov jb lret pop test (bad) int3 push movl fmuls xor rcrl bound pop stos mov push (bad) lret pop push std test fidivr pop xchg xchg mov lret lret lret lret lret lret lret lret lret lret lret pushf sbb xchg mov outsl stc rcll ficom cmp xchg stos bnd mov in fcoms jne push sbb dec xor in iret or mov inc nop popf mov arpl push mov movsl (bad) aam mov or fsubrs jno fimul inc fidivrl lret mov xchg into (bad) mov or (bad) jae imul or fs test push pop call xchg or outsb add adc xchg roll popa pop mov and (bad) mov pusha insb jae jge lret sub and and dec icebp jb mov xor mov cmp pop mov adc push sarl pop sbb jmp xor push dec mov sbb lret lret lret lret lret lret lret lret lret lret popa adc sub jg sub (bad) daa mov (bad) pop imul addl and pop shlb (bad) cs pop xchg loope pop scas and xchg lock inc sbbl jbe jns and push cmp je in rcl pop pop out pop fstpl movsl or sub pop dec sti mov adcb or mov mov int3 push xchg pop fsubrs cltd xor aad cwtl or mov in ljmp imul daa mov jbe bound push int inc nop xchg jle rcr imul xor rolb rorl xchg jge in xor sub inc push mov cmp cmp or xchg call test arpl rclb movsl mov scas sub lret lret lret lret lret lret lret lret lret lret repnz idivl daa test jge arpl lea xchg and xchg lcall sbb in lea aaa jmp jl xchg cmp clc push inc adc adc int3 fisubrl pop je cltd xchg fsts pop jae lahf rcr mov cwtl call pop xchg data16 fwait xor andl sub int3 rorl mov in shrb pop fldt jae cli mov inc mov insl loop cmc dec pop xor mov push cmpsl sbb sahf sbb mov jae cld jecxz iret xchg dec mov pop jno repz notb loop stc pop sarb popf mov mov ljmp jns xor orb clc pop loop xchg fisubr mov into sbbb insl daa and test push sub xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor dec mov xchg out adc shlb mov jmp test sti sub dec or push shl icebp loope cmp mov push ret sbb cmp mov arpl out jnp adc popw add cmpb xor push repnz sub inc xor pop cmpsb inc mov sbb and cld jge rorb cmp xchg cmc jb adc lods dec sbb and xchg sub (bad) mov ret jno mov lret dec dec out bound fidivr sarl cmp pushf out pop jmp inc test sbbl outsb and jl jp,pt shrl xor testb sub sub not shlb sub out inc push pusha inc lahf sbb bound (bad) mov neg aad xor test xor sahf add dec xchg and pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor dec add scas push push add inc inc push cmp test jle dec imul sub or xor lds jle sub sbb dec fstps and (bad) jae mov fisubr xor fildll (bad) mov mov pop icebp xlat mov xchg jb (bad) xchg (bad) cld mov or sbb pusha adc push inc cmp lret jno sahf repz and cmp mov icebp jb push rcl mov cwtl xchg and out mov dec mov or sti (bad) pop add scas insb and xchg lds pop xor sbb and pop lds lret xor xor test adc clc aad mov sbb cwtl sbb data16 xor adc xor ja adcl lret lret lret lret lret lret lret lret lret lret lret lret (bad) mov dec mov ds mov xor add mov mov push or stos leave test fs push (bad) sub arpl add cmpb xor out addb dec inc dec imul rorb fdivl and cli fdivl xor push or js push adc ljmp jae ret jno adc ja enter dec bound test push xchg cmp test mov fiaddl fdivp sub gs in and jne cltd sub inc lahf aam (bad) xchg shrb test and pop push idiv push (bad) jo rcrb jecxz std adc jle stos and aaa inc pop mov cmp iret movsb (bad) jne cmp jo ret stos (bad) mov push lods inc ja (bad) cli xor lds push jb pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop sub xorb push add and retw or mov sbb push fcompl movsl add aad or popa jl mov subl mov inc int push push dec xchg rol jae adc add ja jge jno adc outsl lods in imul cmpsb cs dec aaa (bad) mov lahf into adc imul inc movsl iret xchg pop pop shlb lahf xor rclb mov popf mov or jae sti sarl sbb sub jle xchg sub bnd or mov push mov pop xchg pop xor movsl testb push lahf mov push add pop mov lahf cmp mov or lret adc adcb adc (bad) push xorb lods xor xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor out inc xor sarb imul notl jno in stos add ftst dec pop and out inc repnz fcomip mov xor jb mov mov (bad) adc jns test dec rorl in roll iret push jge imul fdivr bound sbb push and and mov lds insl sarb pop imul pop xor or stc adc scas movl cmpsl adc mov stos sub (bad) xchg test fildll mov nop push jecxz int3 pop push jl jmp mov js inc pop iret pop cmp xor push std inc andl dec mov movsb das and dec ss xor rcll ret outsb ds (bad) jnp (bad) xor insb enter sbb jbe pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor cmpsb fdivr std add cltd subb push test test push mov push ds addr16 int add push shrl push (bad) popl and jae int jmp rcll test cmc or pop jg arpl xor cmp adc out test sub lahf and pop (bad) cmp jp jle pop lds lcall rcrl jp push ret fsub and and inc sub sbb sub icebp add stos (bad) sub adc sub fwait dec div sub push aam loope mov push pushf sub es mov fistp data16 les add gs je cld push mov shl mov push lods in leave inc adc (bad) mov mov add aam and orl cmp lret lret lret lret lret lret lret lret lret lret cli push push xchg pop xchg push movsl dec xchg pop xor xor and xchg add inc dec mov mov test dec or lods fldcw lahf mov (bad) sbb push in out adc inc or add cmp push jge dec pop lcall add push popf inc fnop insl sub pop aad into push scas jl pop xor sbb sub insl sbb rcrl (bad) fistl mov dec ret fcoml inc into ret adc dec and in sarl (bad) mov and shr lods adc ljmp inc in mov ffreep rolb out xor das loope push hlt cltd push movsl (bad) out push dec dec shrb jbe es sub mov lock sarb and pop jno mov stos leave ror test jmp ljmp daa (bad) out pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop or popa jl xor xchg mov sub mov push push int inc imul js outsl (bad) adc push out aaa call fs mov cs imul lock sbb and in dec mov inc es mov jo outsb mov enter sbb hlt in loopne xor mov adc aam xchg outsl sbb insb test subl daa ret push jg adc jecxz sti iret dec xchg cmpsb sbb lods (bad) fisttp xor mov scas adc daa call mov jecxz fidivrl decl mov mov lock (bad) and ljmp aaa push cld push inc and inc cmp mov imul incl popf mov enter test (bad) ficomp lret sbb test pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop jne popf dec popl orl mov and mov cmp cltd scas insb inc jp pop movsb dec and js jne adc test cmp mov sbb out push aaa stos dec pop add push test pop (bad) mov sub daa (bad) xor or mov addl mov (bad) iret jg mov cmp mov xchg aad pop jmp mov cmp xchg (bad) popa xchg mov int3 mov or imul clc fidivr hlt jo push cwtl mov ss repz push mov hlt ljmp hlt or pop mov add jnp insb sarb cmp or and mov stc shll dec dec push sti loopne test xor scas mov xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor and popa push aas repz clc in sbb fstp mov mov push adc push cmpsb cmp pop xor or lret inc fbstp mov (bad) dec inc movsl emms pop mov dec addl xor mov push lds dec ret enter cmpsb inc fsubr test cmp repz (bad) xchg push pop xor push jo push lcall stc pop jg out mov dec xchg push pop push dec dec jb adc sahf push lcall cltd div je loope inc jl dec mov aam loope mov ret cmc xchg je pop cmp xchg pushf into cld lret cltd xchg loopne xchg xor push (bad) into rcl shlb sub sub mov adc data16 mov mov xchg mov sbb and xchg stos gs mov lret lret lret lret lret lret lret lret lret lret cltd cli stc inc jp mov lods arpl add mov push add gs xchg imul in stos dec mov (bad) lahf pop push outsb jp rcrb adc mov xor mov fsts movsl pop and cmp and mov jp cmpsl xchg ret sub mov pop stc mov insl jmp out enter dec sbb xor cmp push or sbb cmp inc and xchg mov push pop stos test pop faddl push mov rcll cmp or popl mov dec sbb sbbb fsts pop scas xchg push into (bad) push sbb cli or or sub jmp out das shrl mov scas mov in add sti mov xchg mov clc test andl lret lret lret lret lret lret lret lret lret lret lret jbe mov cmpsb iret push cmpsb cmp inc xor xor int3 aad movsl mov add rol add test pop aam fs ds xor or stos cs inc push mov pop pop xchg push or or xor mov xchg jl adc xor outsl pop pop fsubrs (bad) push sbb ret inc jmp xchg (bad) xchg int aas stc add mov and xchg aad loope testb sbb lods inc leave mov mov xor mov out xchg sbb push fstpl adc int mov fwait hlt popa xor jns push cmp into add add sbb push std aaa aad (bad) push scas rcll dec push lret movsl fbld rorl (bad) lret lret lret lret lret lret lret lret lret lret jp fbstp pop fistpl sbbb bound xchg cld aas mov push mov gs xor and fisubl or inc ljmp ret lret cmp mov xlat cmp sub stc pop jmp inc adc xchg dec lock in push fild pop jle fcom clc lods out clc push fdivp lcall je hlt cwtl xchg mov inc inc (bad) (bad) outsb repz and fs dec imul fmulp inc jbe ret mov dec stos lods xchg lret das add dec shll add (bad) xor sub into ficomp lret xor push jmp iret or int pop test dec or icebp cwtl push pop dec outsb lods shll movmskps sub or adc imul or mov push cli es pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop int3 push jl mov test push add aam lahf dec xor movl mov into (bad) and xor into cmpsb mov insl (bad) idivl pop add xor or lock repnz bswap jg cli (bad) fistp cltd mov insb mov inc adc jae mov ljmp js mov xchg mov movsb lods jl mov lds scas in insl aad adc push mov loope dec cmp andb push cmpl lret xor jo sti xlat sbbl pushf cltd mov movsl ljmp cmp lret mov xor sbbb int pop in pusha daa xchg jmp jg adc xchg inc lock xchg cmc xchg call movsl lret push or xor ljmp test push push pop pop icebp push lret lret lret lret lret lret lret lret lret lret lret lret mov pop xchg fsubrl je in adc mov or pop push mov inc mov adc add subl shrb test xchg pop cmp adc dec adc (bad) movsl aad scas sub jle xchg push aam cmp enter fnstenv mov cli inc sbb jne rclb inc push fs mov add scas out inc ljmp push daa mov inc pusha jp sarb dec jmp xor movsb sarb cmp fwait test pop cmc push mov cmp adc sbb mov xchg jne xor add jnp rorl aaa jb sub cwtl push xlat sub in lods add xchg pop lods fildll mov inc jnp (bad) jp out sub pop imul jl test adc sub rolb and in xchg pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor outsb stos adc ljmp popf pop jle pop adc scas movsb mov pop push ficomp sub push jecxz stos xor mov roll ficompl jns add in frstor and add mov mov and sbb sbb cld cmp outsl test cmp inc adc pop out das inc jno mov comiss and daa popf leave es xchg mov mov and stos or add dec in lds (bad) sti test push sub sub push data16 or push mov sbb testb and repz test xor or rcrl (bad) ds iret mov mov push cmp test dec pop fstps fcompl mov lahf leave jb (bad) je dec fiaddl xchg out push loop lret lret lret lret lret lret lret lret lret lret lret and xchg scas outsb cmp pop scas (bad) rcl dec xchg jnp mov dec (bad) fwait scas (bad) mov repnz adcb outsl inc jne inc lahf jns mov add mov sub xchg push mov int3 dec ja in scas outsl jl xchg out (bad) mov push pop xchg loope sar ss xchg aas shrb pop inc lods addr16 dec pop (bad) jge lods add or jp sub mov movsl stos ficoml push adc fsubr add sbb in (bad) add fwait add cs inc push inc test or bound out call jns push dec mov test insl xor call cmp sub (bad) (bad) xor xchg adc (bad) in pop push out inc jno xchg or lds jne xor mov cmp sub cld inc imul lret lret lret lret lret lret lret lret lret lret lret rcll xchg imull orb jp or sub (bad) add nop ss xchg sub ja inc xchg test fimull xor (bad) js loop std mov shr or imul pop pop push (bad) mov lock inc inc sub mov les mov xor lods push movsb popf addl sbb pop mull or jg rcrl pop ret fs int iret pushf cmp movsl test inc out daa out or pusha sbb scas andl and xchg inc fcom scas pop lods mov jno jnp dec aad into and ret mov out nop outsl bound xor xchg mov push jbe xchg daa mov movsl or cltd adc xchg nop in repz mov scas sbb dec fisttp lret lret lret lret lret lret lret lret lret lret lret cli rorb loopne lock sub xor sbb jb ljmp aaa pusha mov (bad) lods sub lock ja pop shlb test pop cmp fnop nop jp lock xchg movsb mov xchg ds imul pop mov dec jmp mov std add sbb mov in mov mov inc out addb dec inc inc or mov sbb push aas repz fsubs sbb or mov popa (bad) jbe mov pop pusha push jecxz subl je dec mov fcomip idivb (bad) dec ret jno in loop lods jne push mov xchg out push mov (bad) push rcl push (bad) cmp (bad) sbb ds (bad) cltd and lds in popa lret lret lret lret lret lret lret lret lret lret lret lret jecxz cmp nop stos loope mov lcall pop cmp pop sbb pushf adc repz fsubs cs jl in mov mov mov ss push push lods loop lcall inc lcall add mov std inc pushf vpxor pop and inc mov pop xor sti mov int3 dec into test mov pop (bad) fidivl xchg ja xor adc xchg mov lds popf sub (bad) das ss sub add or enter popa out push pop xchg mov push data16 mov inc imul fwait jp dec add aaa out outsb add aam adc xchg pop add dec enter mov pushf (bad) pop orb lret lret lret lret lret lret lret lret lret lret jmp and enter sub jae (bad) lods sub lock (bad) mov push pop and xchg (bad) mov mov sub les adc inc sub cmp jno loopne aas (bad) es xor mov sub mov out fldenv fidivrl cltd ja jns insb bnd (bad) push mov xlat push inc add xchg mov jmp mov cs imul add sub in dec repnz and sbb pop add lock xor mov cwtl mov push dec stos and pop mov push inc pusha mov dec sub xchg and lahf xchg test test lds loop xor (bad) hlt roll rclb or lret in xlat mov xchg and and inc xchg mov sbb pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor fistpl mov lahf sbb stc mov xchg mov popf dec sar andl das push cli scas sub cmp xchg mov lock pop push leave inc adc enter ja mov ds lds sbb pop out rcr sbb or adc leave dec into (bad) add sbb pop sbb and std pop leave out clc cld gs sub push and xorl xchg roll imul pop fistpl xorb push (bad) xchg test mov sub xlat test test and cwtl or (bad) cmpsl stos pop jmp xor mov mov xchg shrb shll inc nop mov sbb divl subl pop pop xchg test push ljmp repnz or pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor fldcw insb mov jns mov arpl (bad) jle sub punpckldq js lahf shrb in or xchg xor xchg std mov jp imull mov dec add add add dec dec adc imul mov dec (bad) fidivl push repz mov dec ficomp dec and movsl jb pusha cmpsl aad push dec push or cmp add bswap and addb sti movsl pop sarl inc mov mov push fdivl or pop add inc fdivrp enter mov (bad) fildll xor ss sbb sbb scas inc hlt push (bad) mov arpl or loope nop ds in sub dec hlt pop out je jbe pushf lahf adc adc pop xchg mov std or xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor add cld and mov mov push lods xchg and sahf mov stos scas xchg sub adcl xchg cltd mov in pop fldt cmp cmp push add mov xor inc imul mov mov pop xchg clc test cli stos mov push xor std adc rcll xor xor jae pop push xchg mov ds test (bad) dec dec push mov fsubs inc adc loope and sbb aaa jae bound inc int3 push sub movsl cmp or fstl nop mov ret push (bad) (bad) mov or sahf jp int3 dec inc shr dec jne lods mov or popa mov nop test sub cs jbe lret lret lret lret lret lret lret lret lret lret std xor and add outsb mov aad inc and in lea pusha xchg fsubr lods pusha xchg dec in bound stc sub in mov (bad) pop cltd arpl sbb mov in inc out mov icebp js add insl mov jle mov fs int3 mov out ljmp cmp push lret in je dec mov add mov jne pop daa push sti mov ret outsl or push inc pop jo sub inc mov mov jmp cmp (bad) ffreep mov lds pop sbb sbb sub fdivr jo test jae cld xchg push clc insb push inc cli and jecxz mov lods and mov test js arpl pusha aas and jl jge cmp scas lods insl inc mov adc jl imul or pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor cmp out fs test das add lds test es push adc leave dec into fstpt hlt dec inc push cmp push mov sub xchg xchg jmp (bad) jo mov mov xchg jb pusha cmpsl aad push inc push or aad ret (bad) mov xchg xor (bad) and ret xchg push loopne pusha nop jle paddd stos (bad) xor fsub dec (bad) and pop fsubs enter rol mov mov pop and sbb js out cmp (bad) repz jmp xchg loopne pop cmc (bad) jge mov jge (bad) jb ja fmul cmpsb mov fsubs mov fs jae xchg inc inc lock sarl push in addr16 xchg ret cmp sbb ljmp (bad) fs xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop dec imul cmpsb add je (bad) das or mov daa jns es into add dec addr16 cmp and rcrb sub dec xchg movsl cmpl mov mov loopne xchg cmc lock push cld inc ret rolb inc adc dec fwait xor xor sub repz xlat leave mov sbb in pop sbb stc mov popf rolb stos jle jnp sbb inc and js mov mov int int outsl stc fcompl add lcall in mov and lret sbb call push (bad) xchg out scas loopne ret std cmpl das test clc sbb mov xor jmp outsl adc dec push ret mov jae and push negl lret lret lret lret lret lret lret lret lret lret lret lret test clc loopne das pop jg adc pop push in jo inc add push jg add cli mov cmpsl in push (bad) lock in (bad) ror lret stc and mov out xchg clc test (bad) mov and and jns jae ret jge lahf mov push daa inc inc test jnp pop popf dec je,pt jle (bad) jnp fsubrs negl lahf adc jge test fcmove repz adc int3 ja inc (bad) mov xchg cltd sub inc lahf aam (bad) xchg shrb pusha pop xor fwait and roll out mov inc mov fadds jge sbb xchg sti and push push rorb pop iret fmull movsb sbb ds sti adc (bad) lds jl adc fadd mov fnop (bad) cmp push xor mov in sub ds mov test xchg je imul daa lret lret lret lret lret lret lret lret lret lret lret lret or xchg or lcall sub inc inc add cli repnz ds dec sbb mov repz adc sti mov dec mov out cs or sbb inc jg subl pop sahf sbb push dec lods adcl aas mov cwtl cmovbe xlat movsb dec push or jno cmp lret xchg out lret psubq scas or push inc mov push ret push jmp imul mov pop sbb mov inc pop int jp inc push push rcll test adc (bad) gs popf jae jmp (bad) movsl stos gs jg js sub mov mov jmp and push sarl jnp dec int add out dec imul push xchg xor mov cmpsl (bad) xor (bad) or repnz lret lret lret lret lret lret lret lret lret lret jmp iret or inc mov xchg push outsb cmp jae cmp nop jne adc aas in call xor mov jl jns cmp xchg nop xor pop pop dec ror loopne pop nop jle rclb int daa aam jb lahf inc sub add xchg (bad) leave xor outsb popf jbe sti shrl fstps pop ds mov cmpsb xchg sbb push pop arpl pusha outsl jmp stos nop xchg pusha jo,pt and push ret xchg inc mov mov add jno outsb loope xchg xchg leave jae popa inc inc div aas cmp push lods aaa xchg jbe mov jne pop cmp push inc jp insl je cli loop cmpsb sbb pop int shrl cmpsb xor pop push imul sub sub (bad) xor adc mov sub mov xchg push lar pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor push or fist jle jns mov hlt imul jge adc stos cmpsb pop dec aad (bad) and mov insb push cmp dec sbb or sub xchg fwait jne scas pop jb cmc push int test bound fiaddl xchg add pop sub xor int ficoml mov pushf loop dec lret lcall adc cltd in mov jae cli adc inc push pop rolb sbb adc jmp fldt mov jg mov data16 xor push push bound lock (bad) call adc add add loopne jne es js mov cmp mov push fistp inc ds sub ret mov and gs add cmp mov and push out jno orl pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor jno ja fmull and lds pop mov inc inc sarl xor mov jno mov lret pop dec push sub outsl sarl dec dec hlt mov fsubs adc mov xor loop ret cs pop push aas test push repnz cmp xor sbb xchg enter mov sahf mov scas add jo sarl enter jg fdivrs inc aas hlt jne das push fucomip (bad) clc (bad) mov mov ss cli jge nop mov cwtl sub sar xchg lock rcr xchg cmp sbb arpl cmp cld in (bad) sub xchg add mov enter fadds call popf pop inc subb int data16 or mov dec sbb xorb inc sbb and lret lret lret lret lret lret lret lret lret lret mov andl mov les fadd daa sub inc dec pop (bad) inc mov lea (bad) jg lret jno dec mov mov add popf mov lods jmp ljmp enter xchg into push or push js push lcall and cmp pop mov or dec mov iret jle cmp data16 xor adc xchg pop ja adcl mov loope pop pop sub iret lock jns add jmp dec iret inc retw movsl inc fs js or cmp das pop lds or add xchg cmp sbb add sbb es mov rolb fidiv cs xor hlt push mov lods lret insb mov sub lock mov cmp popf cmp jnp pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor push jg lret aad sub pop sbb inc shr mov loope divl fwait cwtl loope pop inc mov lahf lods in jecxz gs es xchg fisub stos xchg fistl orl pop call mov scas jmp lcall sbb jmp jl or adc ja sub pop inc mov sahf (bad) xlat dec xchg sub pop adc pop cltd jae dec mov jle aaa mov subl sarl add call ret mov retw movsl inc fs js or cmp das imul call sub xchg cmp or hlt xchg es mov rolb fidiv cs xor hlt push mov lods lret insb mov sub lock mov cmp jnp lahf xlat lret lds xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor dec dec or in lods js mov xor sbb (bad) lods fs movd data16 jne xor out dec stos popa xchg xchg ret jns jmp cmpsb mov (bad) xchg daa ret push jg rolb loop xor (bad) hlt roll rclb cmp lret in xlat mov xchg loope and in pop out test pusha imul pop addl andl sub push push js mov pop das lret imul adc add sarl es test add or adc pop mull movsl mov xor iret fwait xor fcmovnu adc jns and xor mov jae orl mov and mov out call xor push or js push adc ljmp fadd xchg and out nop xor dec mov dec lahf pop push lret lret lret lret lret lret lret lret lret lret lret lret pop arpl imul sub aad cmp jb sarl fstpt lret pop jmp mov and test jp (bad) dec loopne rcl dec and icebp add push loop mov adc out out movsb icebp sub and stos cmp and or vxorps (bad) lea lea in inc inc push aas fiaddl mov xor sub mov lret lds sub mov pop fstpl movsl or sub and leave dec into push pushf repz push add push pop pop icebp js pop inc fsubs (bad) mov (bad) lds fs sub out mov xor call push iret (bad) sahf repz divb (bad) xor inc sarb mov in mov lret lret lret lret lret lret lret lret lret lret lret lret lret sbb pop (bad) dec stos and out arpl dec sbb aam sub sbb les mov aas mov jecxz lods jp jne lahf mov inc xor pop mov fnstsw (bad) add pop mov adc mov xchg mov cmp xchg mov lret push mov fbld dec cmp and inc cmp pop ja jae and push loop (bad) in mov je movsl pop push out test stos jae adc stc int pop outsb sbb cmp fidivl inc loop cwtl push aam xchg mov pop in (bad) mov and iret push pop xchg jnp lret roll popf les fdivl fiaddl mov loopne (bad) pop inc test imul out aas ffreep and sbb pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor dec push push das and test data16 adc rcrl out leave arpl out jnp cmpsb mov push lahf cli cwtl and rorl or xchg inc (bad) xor ret and push push (bad) cmp dec dec fwait imul sahf sti pop adc loop jle inc addr16 test xlat (bad) jnp rol push shll cmp fdivrl xchg das cmp jno mov lds in xor insl addb or add icebp js sbb push std aaa aad ds (bad) roll andl mov add mov rol int3 leave daa sub inc dec addw xlat push pop lea (bad) jg lret jno dec mov mov add popf mov lods popf inc ss sub daa lret lret lret lret lret lret lret lret lret lret lret lret vmovaps xor cld jbe or xor insb add dec mov xlat mov insl test add pop mov pop lcall (bad) or sub mov lds in insl cmpsl cmp mov xor sub mov lret lds sub mov pop fstpl movsl or sub and leave dec into push pushf adc cltd dec popl icebp js pop inc fsubs fnsave outsl es push ss xor popf mov sbb xchg cmc jb pusha cmpsl leave mov pop dec aad ret (bad) cli and fcomps xor xchg mov mov push jl out aam out test mov insb dec ja lea scas lahf mov arpl push mov inc int mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor (bad) in pop and movsl hlt lock lahf nop imul jle sbb repz lods lcall sub mov sti inc std test das or push mov (bad) mov call push cli dec stc data16 inc leave shrb fs sub nop push push daa lret rcr jns (bad) push sahf pop cmc jg andb cwtl inc push leave addb push jne xor pop cmpsb inc bound dec push or xor dec scas xorl fsubrl ja inc adc cmc dec (bad) in addr16 mov ret or or lret das xor sbb cld pop jl movsb imul cmp aam xchg iret pop fsubrl mov ljmp ss cmovne mov cmp aaa sahf cmp jo in sbb leave int3 xchg push lret lret lret lret lret lret lret lret lret lret sbb gs fdivr jo test xchg sub mov pop inc loopne xchg decb lds jae jge xchg sub xorl mov aam aad loope xchg inc xorb fimul mov jae and push mov mov sbb bound sub into fidiv lret hlt jnp add pop xor cmpsb inc add xchg sbb xchg repz es cwtl push jl xchg clc test inc hlt bound adc mov and cmpsl js into sbb jecxz sahf cmp insb fist les adc mov popf and nop icebp xor mov pop mov pop add popa dec loop outsb mov xor ret mov xchg pop xchg fist and adc push aas inc fidiv inc lahf adc mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor and pop jbe ja and cmpsb mov fsubs mov cld leave mov inc inc lock sarl push in addr16 mov dec andl test ret push and dec dec jnp lret das call das cli rcrb pop movsl or ret lods xor ficom and pushl cmpl and scas test adc enter inc push dec in xchg adc cmp cmpsb jecxz jb ficompl jb xor in ret icebp jmp pop mov push lock xchg sub icebp push in aas popf mov mov mov mov mov dec cs int3 das ds movsb iret inc daa or add lds xchg pop sub out sub mov pop lret lret lret lret lret lret lret lret lret lret lret lret lret xor repnz jbe cmpsb gs jmp lahf push adc mov inc mov (bad) mov outsl push jbe mov shl and outsl (bad) int3 fidivl sbb mov adc sarb or in mov xchg in je xor dec xchg rcr into push sbb adc in fisttp fnsave add in jmp sbb xor push or or mov pop (bad) lret xor jecxz (bad) pop mov dec dec push insl divl pop insl (bad) xor aam cli mov adc insb cltd xor jb rcll mov mov xor sub inc mov dec dec mov scas and cwtl adc out adc stos repz dec mov enter mov and imull insl push pop inc clc push xchg arpl pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop fistpl test stos and mov call arpl jo dec subl pop jge shrb fs mov sub push lahf push shl (bad) or dec mov enter add sbb outsb jb xchg lret lahf jo add int3 roll icebp xlat fsts fwait and sbb cwtl push push pushf (bad) xor shll pop and movsl out mov stc adc into fcmovu jmp les mov out and imul mov sub sub lahf sarb (bad) mov mov fisttpl mov push rol ret sub dec daa (bad) push (bad) inc xlat xchg lahf pop sbb mov test (bad) xchg stos std shrl push lret ljmp xchg arpl fcomip pop lret lret lret lret lret lret lret lret lret lret icebp sub dec fdivrl pop out pop mov clc scas inc leave fiadd add ja aas inc out sbb imul jo std or xlat loopne pop fyl2x or mov push shlb rol mov cli sbb in or rcrl mov int dec dec fldl push adc stos or out je dec cmp (bad) stos ret push popf xchg adc cli jecxz push xchg loope or pop clc mov sub cmpsb sub pop push xchg xchg inc outsb (bad) mov push mov jns dec xchg sub les and dec cwtl cmpsb push outsl daa xor inc mov std cmp clc inc mov das sub sahf push mov mov sub jmp mov dec jbe or mov sbb jns std jge iret stos or pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop mov lods or push pop push lods push gs mov sub mov sbb cmp fucomp hlt mov test in mov call lods (bad) mov fwait mov ret dec test push jae inc sbb adc js jns fwait and and jno adc xchg cmp in cmp aam lret or jl mov sub lods imul xchg add movsl iret xchg pop pop shlb adcl stos dec out mov mov jnp,pn pop es jmp loop jge jge pop (bad) push mov mov mov scas popf lods lret test sub out sub fldcw sub sbb adc notb mov js jmp mov daa ljmp xor std mov cmc xchg jo pop mov lret lret lret lret lret lret lret lret lret lret int es jno and or in sub add int3 adc sub lret (bad) xor cmp orb and fiaddl mov push xchg mov pushf bound cld push mov mov mov jge or xlat sub jo mov or popf bound xchg pop push adc cli cmpsl movsb push xchg loope or pop clc rol mov xchg xchg fistl add jp aad adc adc add jge cwtl xchg cmc out sbb repz dec adc mov push add jp ljmp and rolb lods mov jnp (bad) test rcrb xor xchg jle stc and adc dec andl hlt testl ja pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor or shll xor pop jp xchg pop cmp pop and sbb lret or jns test xor sbb dec xchg rcl fdivl out es and sbb jnp mov pop test mov and (bad) mov iret mov pop sbbl xorl pop sub adc clc iret enter test ss stos in mov or rcrl ret fnstsw test cmp dec or popf xchg fisubr mov jo jl add xor outsl pop cmp lahf mov into test pusha movb cltd add outsl or sbb mov das push lret sub xchg mov lock aaa jg inc and in sub loopne daa ret movsl push mov inc nop into lret lret lret lret lret lret lret lret lret lret lret lret lret push (bad) pop add or mov into xor addr16 push pop (bad) xchg mov add sbb mov pcmpeqb mov mov scas jg cli adc jp mov mov cs imul cs shll cmp push pop push jae stos in ds popf pop aad sahf outsl cmp daa jnp jno iret inc test cmpsl xchg xchg cmpsl (bad) gs lock ficom dec imull mov scas jmp stc pop xchg stos mov test movsb add loopne (bad) cmpsb and aaa inc cwtl lret movsb fcom clc lods out clc ficomp hlt jo push cwtl mov ss inc mov sbb sub xorb lods push mov ja xor addr16 or negl arpl or xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop int xor and gs jg cld jnp cmp adc xor ja (bad) shrl and outsb lods loope movmskps popa xorl dec test fistl imul rorb dec adc (bad) das aam pop dec sahf inc pop fadds xlat les mov sbb mov add inc fiadd mov (bad) fild subl lods ss mov sbb jnp mov and and mov inc les sarb test lock fistpl ss xchg lods rcrb shr ret xchg xchg dec or mov cwtl pop dec std ss sbb ja jp fnstcw jno xchg jo push (bad) hlt cmp jl movsl mov pusha cwtl in (bad) mov aaa je lret lret lret lret lret lret lret lret lret lret repnz rcrb xor mov push repz mov jle (bad) ds or jp lds pop lods mov pop test mov fadd or and je xchg sbb jp in mov ds loopne adc insb popf xor (bad) fcomps imul mov test and pop je repnz mov stos (bad) jbe fwait roll dec rcrb push and aaa and and jecxz (bad) jne mov (bad) int3 push lock loope xchg jne imul into out cmp (bad) xchg out test in jmp js pmuludq mov add int3 stos xchg (bad) ja in shld cmc push (bad) into (bad) rcl imul es and sbb stc push data16 mov push mov adc pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor insb lea sbb bound mov add mov hlt jge push in push scas pop add mov inc pop cmp mov hlt sti jbe repz lcall fisttp cld mov sub punpckldq out std jno nop lods jne out pop stos in popa cmp bound mov outsb or push in inc stos imul push jg dec negl pop mov mov lods out add stc mov sub shlb shrb jb mov test sbb add std cmpl cmc bound (bad) cld (bad) int3 mov push leave cmp and pushf pop cmp jae dec imul add cmpsl popf subl stos pusha dec push in int orb push je xor test xor lods add mov or lret lret lret lret lret lret lret lret lret lret lret lret mov push sarb hlt cmp pop add and js xor ljmp sbb cwtl add arpl fsubrs fidivl pop mov pop ss loope xchg sahf movl cmp mov inc mov push stos jnp inc sub cltd mov stos mov ret sub outsb lods add stos and ljmp iret push iret jbe adc fcom and sbb add mulb insb mov adc aam xor xor cmp insb push inc icebp xor inc sub adcb fmulp sbb loop cmp jae movsb (bad) fistp gs and (bad) jae imul dec into loope adc inc fcoms inc out mov mov iret jg adc mov lret lret lret lret lret lret lret lret lret lret push int3 mov pusha cmpsl leave mov pop dec aad or dec inc andl sbb sub das lock jo in lahf in mov sub ja dec add xchg fimull imul test sarb fidivl lds nop (bad) hlt push test pop (bad) js imul notb ja (bad) incl adc pushf sbb xchg stos jae add push pop imul aas loopne rolb scas lods cmp push scas cmp imul or mov js sbbb call hlt lods pop arpl sbb ss ja or std ret icebp mov pop test jmp js jnp adc es mov shll xchg call sbb lret lret lret lret lret lret lret lret lret lret lret add scas cmc ret push outsl call xor aad stos xchg or sbb addr16 (bad) fistpl xchg mov xchg mov mov push or ret push sub movsl cmp cmp jle sbb mov inc adc loope or jle stos movsb push outsb (bad) xchg jb xor sbb aaa or dec leave and jle jo mov dec mov cmp sarl in xchg nop xorb or sbb (bad) (bad) ds xchg pop repnz (bad) repnz adc mov push imul mov addr16 je cmpl adc (bad) add lret (bad) xchg and iret arpl aaa adc sub push push in sahf add lods adc fisubrl and pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor ss mov les push stc push int3 movups fcompl cwtl in rcll out je lods nop xor xchg enter loope outsl sub mov je notl push xor and outsl xlat mov xor aad lret xor rorb pop cmpsb vdivsd mov lahf cld scas call pusha js sub push popf mov jmp lods xchg aas or sbb imul cmp les mov jns fs cltd cmp dec xchg and ds push mov cmpsb sub outsl mov and cmp loop or add vmread test mov add pop ss jmp mov fdivl lods in ljmp nop subl jno mov lret cmpsl (bad) pop popf lret lret lret lret lret lret lret lret lret lret lret lret lret movl sub inc rorl (bad) or pop imul sarb xchg inc out iret jo push fstpl shll test lea add pusha xchg aaa dec sarl subl push into dec jg (bad) jno adc add fs push pop aam sub hlt jecxz mov insb pop dec fisub hlt mov xchg into into dec das adc or cmp (bad) mov or sbb aam mov mov mov popf rorl mov adc cwtl or cmp push in insb dec outsb push jg lods in adc cmp cmp popa in aaa xor dec cmpsb dec lea sti fldt lretw lret lret lret lret lret lret lret lret lret lret lret mov mov addr16 cli xchg popf cwtl pop rcrl cmpsb aaa mov xor and push cmpsl cmp xchg xchg idivb rcr cmpb popf (bad) icebp lock xchg jp stos cmc cmc dec in jb out jo sbb pushf jge xchg lahf push ja adc je push lods in insl cmpsl std out mov sbb dec sbb lods inc leave lods push mov dec inc scas add test pop adc movsb xchg or sbb pop mull or sbb jo repnz adc jns push add mov repz sbb push das mov pop ret clc test js test inc fucomip subl pop sub xor push xor pop mov xlat jno xchg xchg fdivs mov pop jne mov gs iret inc test mov lret lret lret lret lret lret lret lret lret lret lret lcall roll mov data16 jmp shrl out mov das repnz outsb stos jo add dec push jle jmp gs pusha adc aad (bad) mov out clc push sahf hlt lcall (bad) jmp lea sahf repz (bad) das add sub (bad) mov fsubrs mov push fs cltd (bad) push xchg xor jo das out rol lds (bad) lret (bad) xor cmp lods xor dec push xor xchg add mov cs dec xor add mov ss jmp lds movsl lock ljmp or aad (bad) and cmpsb xor push jle inc sub icebp cwtl pop inc imul adc adc lods pop push dec das inc push std ss ja sti lret lret lret lret lret lret lret lret lret lret jg (bad) or pop cmp jae cmp cltd push dec nop out pop jge lods push pop sbb lock repnz out inc ror add cmpsb lds (bad) lea add imul and test out lods loopne or dec testb sbb push add lahf xor fs mov dec imul dec cwtl decl lahf leave adc in pop movsl andb les xchg fstpt jno test lods orl cs (bad) jmp xlat and repz das lahf inc lahf dec mov in xchg or push pusha cmpsl aad push fdivs movsl jl,pn std xor xor push xchg fidiv sbb daa push jns mov jecxz mov cltd sub loop loope loop (bad) (bad) fimul xchg fistl add shrl pop daa cmp ss div lret lret lret lret lret lret lret lret lret lret lret fwait cmp jecxz push aad loope add mov add movsb subb inc dec shrb ret das inc mov xor (bad) leave mov or mov aam jnp movsl nop loop call cmp mov lods inc pop mov aam dec mov jbe sub lret adc daa add adc jb aaa xor inc xchg into or jae xor mov cli sbb jg icebp xchg xor (bad) fisubrl lea adc sbb jp mov pop xor mov xor negb lret das xor data16 push icebp (bad) clc int mov (bad) fldt in xchg sub leave in aaa mov xor outsl add das cmpsb aaa movsb mov inc xchg sbb push cmpsl cmp xchg (bad) lret lret lret lret lret lret lret lret lret lret lret lret adc jg mov mov mov and dec add loope xchg scas and fstps gs subb ucomiss push xor mov das push push sub loopne test sub or inc jno int push wrmsr lds das sub rcrb adc push loopne or mov hlt ret into jno jg dec inc push je mov xchg push mov sub push repz mov imul (bad) xchg sbb in cmpb adc inc push cmpb aaa mov and dec mov cmc mov pop mov rcl or lcall cmp dec xlat jb or push or cmpsl in test mov cmp test ret cmp dec pop stc lock add ja push dec sbb pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor movsb cmp inc ss cwtl std jo xor pop mov add sub pop adc pop repz loopne jp sub dec test (bad) mov xor add jae adc repnz sub push pop inc mov lea mov data16 fwait xor xor and lcall js sbb mov int3 jno,pt ja cld jp add in in addr16 or mov adc je mov jae int3 (bad) cmpsl into pop iret fildll out lret outsb (bad) and jnp add xchg (bad) xor cmp ja dec add cltd jnp push cmp and push sub das aas (bad) mov loop xor jmp pop mov pop xlat mov xchg loope and lret lret lret lret lret lret lret lret lret lret lret inc pop out test bound call cs cltd testl mov add lods loopne pop (bad) dec repnz sub inc jp mov sbb ret jbe jge sarb pop mov or cltd mov xor mov repnz pushf cmp push inc insl xchg int sahf mov lods pusha dec add xor cwtl and daa jns stos and lds or (bad) adc push jecxz subl jno (bad) xchg and pop sub popa lret mov mov sub mov ficompl out icebp js inc cmp bound cwtl aas xor (bad) jnp movsl cmc pop arpl aaa and shl push pop jns dec add stos jo sbb xchg mov or stos cmpw gs aad cli repz jmp mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor inc push and push mov mov push movsl mov in (bad) das or sub sub test jge sahf in fsubp js mov dec cli push or shll mov aam in or mov stc dec (bad) jge lds mov test into xor sub int3 cli iret and lret dec (bad) fidivl mov lock hlt imul or sbb add (bad) fcom icebp movsl sub mov sub jle test ret push jge pop daa and iret enter xchg xor ret xor xor jae inc fst cmp imul aaa dec add sbb insb sbb and pop lds pusha (bad) icebp cmpl cli xchg repnz dec xor fsubrs (bad) push sbb ret inc jmp pop (bad) js pop imul pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop (bad) xor jo sahf adc out lods loopne cmp dec bound mov mov lods mov aaa jcxz dec cltd adc fistpll notl (bad) into vpsrlw push inc and mov jb xor cltd loope repnz inc sub xor bound scas pusha dec xlat push push add mov cmp push in fildl in in mov ljmp out ret jno adc ja enter out xchg rol test pop pop pop mov test insl lahf mov test mov and mov inc or aam xor xchg popa icebp pop insl out stc sub jne lahf sar mov add pop lret cwtl sti cmp popa push push and inc pusha or sbb sub sub mov xor cltd push lret lret lret lret lret lret lret lret lret lret lret lret lret mov hlt ljmp mov mov mov pusha out cmp pop test xor add negb mov jg pop or and fisubr lret jnp in push push add cli lods and ret movsl push repnz out clc lahf sub jp int pop ljmp cmp imul push fsubs repnz push xchg mov loopne (bad) dec inc js stc stc lret inc clc cli jmp push fcompl sbb inc push jmp lds add enter jg xchg das sub dec and mov xchg lahf inc popa (bad) (bad) icebp decl cli aaa arpl or mov push out int3 adc add cmp adc test ja jno jl shl (bad) inc scas les out dec cmpsl xchg lock inc lret lret lret lret lret lret lret lret lret lret sbb inc and sbb dec daa ret lods dec xchg and inc testl fwait test sarl es mov into jmp shrl fcomps int3 inc out ja or sbb adc test inc nop jns adc pop or dec mov cmp adc xchg shl frstor inc adc mov xchg push xchg loope xchg sti mov ss jnp pop aam pop rcll mov shrl pop daa cmp addl xchg sub push enter jo push cmp das jo mov mov pop not arpl push push mov es fadd and cli repnz push icebp pop ss insl pop outsb inc push aas sbb cmc xchg jge cmpsb xor adc int3 sub lret lret lret lret lret lret lret lret lret lret lret lret lret pop xchg into scas xor sti xchg push stos inc rcrl sbb or push mov cmp sbb mov pusha int and mov imul xlat sti mov loop add sahf (bad) test std inc aam or movsb mov and fs int3 fistpll push sub sub push fucom arpl das and cmp xchg cmp push inc dec or movb mov mov pop or cmp mov xchg lds push loop mov out and xlat subb mov fldenv cli mov or sbbl movsb sub (bad) sti leave pop push jl aam imulb add lcall inc xorb addr16 cmp repnz jnp xchg mov jmp lret lret lret lret lret lret lret lret lret lret lret mov clc fwait test pop xchg data16 and out dec hlt inc adc mov mov popf in xor or mov mov mov jne mov or leave out stos cmp adc push jecxz subl fs pop lcall sbb pop popf scas push ror rorb cmp mov scas idivl lcall push stos sbb jl cmp cmpsl adc cmp mov imul pusha push pop stc pop push pusha cs arpl outsl je push xchg stos bnd and lahf sub movsb sub xchg add mov mov push out sbb sub cmp mov add inc in addr16 test (bad) sbb sbb add clc adc inc loop cmp xor (bad) fistp mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop or add in adc mov into fucomi push add (bad) xor mov jae or mov mov int3 push repz jne mov pop xor mov xor idivb das sub daa faddl mov push jb pop sub das and nop nop loop in sbb faddl xor or mov add stos lods out jbe add push push into (bad) call and dec pop xor or xchg pop insb mov cmp les out gs scas cmpsl fwait pop mov rcll adc subb ja sarl xor add hlt mov loope jmp push lods sub test lea cmc addr16 test notl cmp pop out xor sbb pop and cmpsl sahf xchg lret lret lret lret lret lret lret lret lret lret lret std cmpl lods out lcall pop icebp outsl dec sbb cwtl lods jle mov sbb cli fdivl pop cmp mov std pusha addr16 jecxz subl mov mov lret inc inc pop sahf pop push mov fwait cmp daa jnp (bad) dec int sub or add sub mov jmp jbe imul cwtl ret jnp loop loop ret fisubl in fsubs imul nop cltd xchg in mov xchg jge stc adc push aas jmp rcrl rcrl or sti jmp xchg clc ja mov mov (bad) push mov movzwl loopne add sbb out jae dec stos adcb out rorl pushf lret or movsl pop jg sub pop xor jo inc dec and pop shrl push push mov pop lret lret lret lret lret lret lret lret lret lret lret cmpsb inc mov push or sbb add jle (bad) and lahf loop test pop or aaa sub lock adc mov in dec push popf pushf fistpll mov cmc imul xlat ljmp in sub jnp dec xor mov inc pop xchg repnz sti mov sub aaa into inc scas ds in pop dec mov loop xchg jne or pop in lret jo mov sbb mov mov add cli pop xchg int3 lcall xor (bad) js dec mov js mov inc sbb mov cwtl scas pop dec xor push lods in fdivp outsl jp push clc dec and or aam mov aam hlt dec (bad) aaa fimul inc xchg push xor xor stc or test jl sbb addb add xchg mov lret lret lret lret lret lret lret lret lret lret lret mov ja jge lods ret les stc adc es jl,pn cmp in xchg and out mov rorb pop push mov sub imul sub aam cmp jb (bad) mov fstpt lret pop jmp sub lret cmpb cmc (bad) mov out pop movsl mov pushf push lret xchg inc mov (bad) cmp cmpl je jbe cwtl cmp int3 movsb fdivrs sti movsb (bad) jne cmp (bad) mov pop fmul loop mov rcll cmp pmuludq mov xor jecxz xchg sub xchg cmp xchg std test je (bad) cli or fstps test lret xor icebp inc into in cmpb vmovapd mov mov and jo cmpl outsb lods lret lret lret lret lret lret lret lret lret lret lret and push (bad) or push add subl pop stos mov and mov sbb and dec sahf inc pop jl insl add mov stc xchg ret sbb outsb dec ljmp test or cmp dec jo sbb rcrl cmp mov dec push xor (bad) sbb insb jno es pop loop cmpsb sub adc cmp pop fs pop imul and sahf test out lods pop icebp cmp ds subl mov jbe aam and xchg sub fsts lea pop fstpl dec icebp (bad) jae imul dec into aam mov in inc mov inc stos out xlat mov mov fldcw dec mov mov pop ljmp mov lret lret lret lret lret lret lret lret lret lret lret lret cmpsl fstpl or insb add les adc adc arpl pop ds push mov xlat cli call pop sub sub int3 ja int3 shrl xchg or dec loop ss push dec cld out sub lock stos inc lea sub pusha pop jmp into push js (bad) sbb data16 jo call push std test int3 movsb lods sbb scas movsl loop fdivrs test rclb xchg pop push mov cmp rcrl mov notl push mov lea inc dec cltd mov jnp cmp push add adc ror xlat push data16 (bad) loopne cmp jg xchg loopne nop loopne movsl mov xchg int add leave movsb dec arpl mov cmp mov divl mov inc test push lds js cs xor pop inc inc cmp lret lret lret lret lret lret lret lret lret lret lret sub sti mov or xor add in inc movsl xchg sub push aam inc and mov roll repnz outsb rclb mov lahf clc jb jns or mov cmp and xor sbb cli xchg pop push jno (bad) lret jl stos mov lock das cmpsb lds pop mov dec test scas xchg mov cwtl xchg aad sarl scas das test std sbb pop fiaddl mov dec xlat test xchg lods dec xchg inc rclb (bad) dec nop sbb mul cmp loopne insl xchg out daa pop inc (bad) sbb or fnstenv int push outsl inc dec xchg mov lods xchg sub test and adcb mov cmp imul mov mov xor in adc lret lret lret lret lret lret lret lret lret lret lret lret popf dec fst sbb sarl adc (bad) rcrb popa out out xor xor stos out mov add stos int3 sub addl cmpsl push mov in lret (bad) sbb sbb sarl movsl push dec lret pop aaa sbb and push jbe rorb jl inc in and mov fs ss movsl sbb pop fs lods and xchg test cmp sbb es add add lahf xchg pop in mov mov cli push sbb fstp jae or xor dec add ret mov into (bad) jge icebp add pop cmp rsqrtps push xor (bad) ret js movsl pushw imul pop (bad) ficompl xor jb in loope push (bad) jle cmc imul inc and test xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor adc aaa in (bad) popa inc and cmc push push rclb into xchg cld sub push shll cld xor int3 mov fnop loope int ret jnp push or in push lret add popa lock mov scas adc daa call dec out clc pushf xlat scas cmp jmp fildll dec mov or fucomp push lods push fstpt roll shr out mov xor mov inc sbb lret insb sarb cmp or sbb mov mov mov bound pop icebp xlat mov scas fisubl aam repz xchg mov mov mov call pop imul inc xchg subl adc or mov lret (bad) dec fisttp mov xchg push hlt push fldcw je sub data16 lret lret lret lret lret lret lret lret lret lret push jge sbb ret mov mov test imul pop aad imul (bad) fistp lea adc (bad) pushf das pusha outsl je sbb outsl sub push nop adc aad push lret cmp mull fisttp test pop xlat dec jg inc ficomp cwtl jb adc dec inc loope cmp jmp push mov aaa data16 out (bad) and push idiv fsubr cmp mull movsl mov xor into jno jg cld mov inc dec (bad) mov pusha adc adc fcomp xchg jo pop and enter push xor js lods ljmp rol sub in psrld or insb xor (bad) lock dec subb push out inc roll test or pop xchg repnz lret lret lret lret lret lret lret lret lret lret arpl adc stos xchg enter jg xchg das pop mov pop xchg pop inc movsl mov mov (bad) fnstenv mov xchg adc fcomps inc cli and jecxz mov lods and or bnd jno inc push ja cmp je arpl mov sbb push add lahf int3 stos movsb in out mov jnp pusha sarb add add test fldenv stos mov ds rolb dec cmpsb mov add pop sbb popa or mov cwtl adc mov jecxz push fs (bad) loopne in push pop xor lds push roll dec dec sbb fsubrl mov dec scas pinsrw out fwait inc hlt sbb sbb fbstp sub sarb rcl pop mov cmp insl les ret decl pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop cmpsb js fsubrs in in repnz ljmp add jp hlt arpl adc (bad) scas int3 mov ffreep adc mov or out jmp fs (bad) mov (bad) push hlt arpl insl sub mov imul add mov cmp mov fsub adc fyl2x in lret lds loope fstps outsl or pop iret or mov mov mov cmc jg add mov idivb inc sbb push sbb (bad) adc dec push dec call adc test orl cmp jns xor lods cmp iret loopne pop int cvttps2pi imul mov in xor popa push (bad) int3 frstor xadd les mov pop lahf in lret lret lret lret lret lret lret lret lret lret lret lret (bad) idivl (bad) pushf lods pop dec or insb jno mov mov fistpl lahf xchg scas mov cld jg xchg out push lods ret sar addl ret mov lahf sbb cmc xchg pinsrw mov cmp jp mov ffreep jge push mov scas ficom sbb jno fmull fild cmp (bad) movsl dec sub fldenv or jns movsl (bad) mov daa sbb out sub xchg repz adc enter adc dec mov mov cmp fnstcw mov mov fdivl push push fdivrl in jg mov xchg sahf fdivs and loope xchg pop push xchg inc imul (bad) (bad) cmp xchg shrb out fcmovne int3 in dec mov xchg mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor icebp in lret shr stos jns and in fs into imul hlt lcall lret cmpsb mov fwait mov cmp and test ficomp test mov sub popf push data16 es jne popf sbbl popf cltd call pop xchg (bad) fldenv insb inc dec xor jle add fidivr xchg mov hlt pop rcrl jb xchg jae,pt ja jns sub adc sbb xor push andl aas insl lcall inc mov aas ds cmp jmp dec test mov mov xor cmc inc repnz dec inc xor insl aas nop in and int3 push sub or sbb leave aad (bad) fdivrp inc mov (bad) or (bad) push or fisubr fnclex adc pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop push bound mov shrl lock testl adc enter (bad) mov jge in nop xchg sbb idivl divl jbe mov pusha xchg out rcrl (bad) sbb xlat stos inc sub int xlat and mov gs (bad) xchg pop icebp bnd cmp int daa jle mov push fisubrl mov (bad) int les lret nop cmp mov and ret loope daa cmp cltd xchg jmp pop dec sbb pop pop sbb cmp jl sub out mov push jl adc inc imul aas stc inc push xchg test ljmp insl sub or fwait and jbe popf roll cmp rcl out xchg jbe jg cmpl movsb dec pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor jne xor add popf lcall (bad) sub inc test loope fwait and shrb push inc inc mov jge and loope (bad) es fcomps notl pop adc adcl sbb jo inc inc jb add jnp test cmc add xor dec (bad) aas adc adc fcomp xchg jo data16 lods or pop fs shll not insb ret push cmp fidiv jge mov clc or loopne (bad) out jnp jbe outsb nop (bad) cmc mov pop dec cmpsb push dec pop mov shll cmpsb fisub aam mov pop stos jbe popf out repnz sbb xor fcomp push sub je sbb jno xchg xacquire rorl push inc push int push insb xor shl mov cmc lret lret lret lret lret lret lret lret lret lret lret adc mul push xchg cmc add repnz lcall inc jp adc popf and ret xlat pop out jmp (bad) repnz sub xchg out sub ftst les mov lret lcall xchg inc out sub add sbb (bad) fcmovu cwtl adc fnstcw mov xor or popa pop mov std add imul movsl cwtl cmp les lret add jns outsl dec dec sub fnop js pop sub mov jl push aam pop rcl and mov popf sbb sbb cld andl fwait loopne dec rorb movsb pop sub push cmp lahf (bad) cmpl sub lock popa dec sub pop daa ret lods es mov call stos mov push gs inc inc (bad) lret lret lret lret lret lret lret lret lret lret lret lret push mov cwtl xchg cmp out xor lods mov adc and leave andb or cmp dec mov rorl xchg inc popa mov cmc pop xor in addl cmpsb inc (bad) cmc icebp shrb and pop andl fs cmp pop mov cmp pop pusha push jecxz subb jecxz dec jl adc int3 pop stc jbe movsl aas push into xlat dec inc mov jnp or ret (bad) xor push aas sahf (bad) jbe bound jl xchg mov push enter mov cmp cmp aad aam rclb lods add mov mov and loop test cmp stos xchg test mov das mov xor pop sarl inc in push push aas push push xchg jp into inc mov mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor mov mov mov icebp (bad) es lock pop and and sbb mov adc leave dec into push pop roll int sbbl xchg add xor mov clc loopne fdivl cltd add popa andl dec jno cmpsb cmp xor mov xchg sbb mov aad mov add int adc mov sbb and dec repnz sub lret pop mov sub mov lahf or jl lret test jp (bad) dec and sarl out pop movsl mov (bad) nop mov sbb adc repnz aaa add xlat jb js mull ljmp lahf and mov fwait jae mov adc pushaw out xchg mov loop add mov mov lret lret lret lret lret lret lret lret lret lret lret lret movsb je daa ret jbe sbb out (bad) movsb sub je lret push sbb or xchg out daa pop inc jp pop jns test std lds add xchg movb dec push jle push xchg and mov adc js mov mov roll mov popf or inc mov dec mov xor inc sub movsb outsb cmpsl test je mov or faddl mov stos sub decb sbb pop sbb pusha cwtl cmpb push ficompl push mov out (bad) fldt mov shrl ds jmp stos or jg xlat adc xor fisubr mov test dec imul mov mov test dec cli fs inc movsb lret es fcomps or pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor jle ret pop pushf int3 arpl mov dec add xor cmp jecxz sub push int3 or jae test pop daa fsubs push mov lcall xor push or mov cmp pop pusha push jecxz subb iret pushf jns jecxz (bad) push das jl inc loope test adc movl pushl and das mov subl dec out jb test call js (bad) xchg pop and add nop xor (bad) fldcw mov aaa mov daa xor pushl pop jo shrl jne int3 push mov fs cmpl dec inc cmc gs dec mov int and int mov pop (bad) xchg dec mov rclb std dec sbb mov lret lret lret lret lret lret lret lret lret pop push pop or dec addl loope (bad) cmp (bad) push lret cli insb mov mov test dec pop loop (bad) aad repnz adc sub fnstsw mov aam pop or jl and insb jb int3 inc dec fwait push jl leave loopne cmp rcl mov xchg mov xor pop adc cmp adc mov adc stos ja (bad) sbb cmp mov push aam cs mov push lods lret adc xchg pushf (bad) and out nop (bad) mov inc out int3 sahf xlat scas fistl aas mov mov sti leave pop xorl rolb cld loopne call push imul adc test mov leave cmc fcoms faddl mov or imul mov jo lods in mov mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor addb jmp inc dec pop adc mov test dec or mov cmp push inc push or movsl fistpll pop mov jno jnp or and and xor push das jl inc in dec test int fistpl dec mov sub xlat imul xor add outsb je in rol cmpsl jae mov es xchg insl sub stc pop jmp inc adc icebp dec lock in push fild pop mov push mov ja jbe ret aad jno adc lods lret fnop dec loopne mov xchg movsl and pop cwtl or rcrl push test xchg sarb cli insb pusha mov cmp fidivl daa out xchg jnp sbb andb (bad) mov add or and mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor icebp fidivrl cmc js push or test push mov adc sarl inc or (bad) mov clc push jecxz subl scas in sti xor or js push pop insb movb in dec popf out mov lock push lcall inc rcrl cmpsb mov add pushf imul pop sbb out pop lea xor js jg lock mov xchg sub mov push fsubrs lea scas out jle std cmp (bad) aaa dec add mov jge jl mov xchg sbb test mov add dec insb outsl stos into xchg das sub daa sub movsb lea add fsub dec mov pop xor push jmp into or int into or pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop imul pop xchg pop jne mov or std inc in in addr16 cmpsb cmp xor and jae mov push fistpl pop mov into xor lcall sub pop mov sbb jecxz mov ficomp cmp test subl pop dec and pop adc adc stos std shll mov add lea push inc fisttpll pop pop retw sub cmpsl lret jb into dec sbb arpl cmp lret sahf cmp (bad) lds jle incl xorb lods adc repnz mov jnp push sarb cmp dec (bad) sub int sbb lret out push pop stos xchg lock stc int inc dec and pusha ror fcompl cmp xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor and sahf (bad) popf inc in in add add sub adc mov aaa rolb xor call mov outsb stos insb sbb mov mov les dec pop sub je pop stos jle lods mov movsb fsub cld jg adc dec (bad) xchg jecxz sti iret dec xchg cmpsb outsl adc cltd and out sbb add fsub adc xor out pushf es repz pop ret and rorb dec jle pushf push movsl mov popf scas loope pop (bad) in xchg ficoml add cld repnz inc icebp (bad) fidivl adc mov lock adcl js mov iret pushf bound into jno or mov shrl inc inc out ret push loope or test jo mov out lock mov sbb addr16 lret lret lret lret lret lret lret lret lret lret scas xor pushf rolb cwtl daa cmp adc fildl inc lahf pop push push xchg inc inc ret jmp insl jns lods sub adc das and jl aas jp or aam cmp cmp xchg out lods shrl (bad) xchg push (bad) or nop add popl adc subl mov push testb je (bad) or ret push cld sti mov stos dec jl sarb test outsl icebp mov dec subl mov pushf xchg add int scas add test adc aas fldenv cli or or lds stc test into in cmp test mov push mov jne xchg push es (bad) pop mov push cmp jns cmc out push call out inc orl xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor iret test int rolb iret dec dec mov push lea mov popa mov inc and test repnz mov clc push xor push mov imul cmp ja mov inc inc gs nop outsb adc mov pop sbb popf rol add sbb pushf iret sbb xchg mov xchg sahf push popf dec sar addl int3 imul inc sbb push push add xchg fcoml cltd xor cwtl in and in rcl jns out pop fstpl movsl or imul jg cld mov inc inc out mov testb dec xchg cmp cltd push adc outsb lods mov movmskps and jle gs push xchg mov jg jbe insb add pop pop mov dec lret lret lret lret lret lret lret lret lret lret pop sub mov (bad) cmp push pushl and sbbl insb gs add fs and adc cmp mov push rcrl push aas push gs inc ficom scas sub xchg outsb xchg ljmp push das fs dec mov dec jno repnz inc (bad) or or jle (bad) cmp inc push cmp (bad) jb lods pop xor adc jno (bad) (bad) jb sub mov addr16 xlat jo hlt fisttpll fbstp outsl or mov dec out add cmc (bad) test cmpsl dec inc xor push push push mov scas daa int3 push sub and inc lock adc push (bad) (bad) jne stc push and xor jno cmp inc pop insb ljmp addr16 jb xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop mov pop jno arpl xchg cmp outsb scas lea movsl lods dec popa dec or cld iret dec stos mov and inc cmp fistl aam in inc into hlt loopne arpl and pop inc cmp xchg mov or jbe xor and pop (bad) mov movsl idivb adc outsb clc mov dec push movsl mov imul aas outsb jns fnstenv mov cltd enter sbb xor fwait repz ds movsl jae ja mov out daa mov (bad) adc cld mov inc mov mov bound mov inc negw sbb jp ret aad pushf sub dec push clc push cmp pop mov jg jbe insb sysenter in sahf and mov push in shlb pop push movl mov sub cld outsb jg lret lret lret lret lret lret lret lret lret lret lret enter or cwtl and xor ds pmaxsw iret subl ret dec cli fsubr pop jbe fstpl sub inc in (bad) jbe popf roll fdivs out scas sub mov xlat or (bad) cld lods out clc push mov mov insb mov adc inc push jmp insl ds test fnstenv inc cwtl js sar push (bad) mov jbe sub add loope push pushf cltd call movsl xorb mov mov and mov scas lea lahf mov fisubl lea mov test insb mov sub or ret push or or adc (bad) dec subb ds ret and rcrb jnp (bad) lret fcmovb in pop sbb out cmp add inc push lret lret lret lret lret lret lret lret lret lret lret lret inc leave dec pop cs int inc pop ss les xchg lds pop sbb mov push pop pop and mov out jns mov jae dec popa mov jecxz sbb xchg lcall leave pop or ret mov push xchg xor (bad) daa shl mov push lods in mov sub ja push shll mov test in rcll leave pop add (bad) jae and in fdivr lret mov (bad) jbe cmp mov cmpsb inc popa hlt or mov cli and push cmc incb xor nop mov push dec push dec sahf loop push mov jns ljmp ja pop adc mov push push hlt dec xchg xchg sar test pop sbb daa aam gs inc imul xor and fs mov dec (bad) lret lret lret lret lret lret lret lret lret lret lret lret inc das and insb mov xchg call das add lock les lods pop not mov push dec addl xchg lods push cwtl movsl loope mov rcr ror mov lock lods ljmp jno in leave inc fdivrs shrb inc ja add addr16 jns add dec sbb hlt (bad) dec fisttp pop xchg or movsl dec (bad) mov movsb inc ret mov add (bad) cmp inc xor xchg jb adc es push ss jmp sbb sbb stos cmp sar push jecxz subl je dec mov add out imul or mov push test (bad) sbb rcpps cmp dec add xchg into pop es je,pt in xchg movsb cwtl cmp jmp cmp cltd push xchg lret lret lret lret lret lret lret lret lret lret repz add roll rcl shrb cli push xlat xchg fs loopne test in test dec movsb ret outsl adc cltd cmpsb aas stc loop cs xor lods or inc scas push sbb push rorl xchg loop loopne inc icebp mov pop std in cltd adc push jge or cltd cli pushf sub lcall or pop insl push cmc gs rclb adc and sahf mov mov add das fstp cmp (bad) fcomps ja cmp push fisttpll mov push pusha push sbb mov inc jge adc ja enter mov sarl cmp mov xor aad nop addr16 fwait xchg movsb dec add in xor lahf or jl int3 fdivl into ret js repnz ljmp inc cmc lret lret lret lret lret lret lret lret lret lret lret (bad) movsl icebp add bnd and adc aad fwait jno cmp sub mov repnz cmpsb and fnop jns (bad) jl rcl mov out fnsave imul bound popa fstl call popf sbb fs shl inc sbb lcall inc sub insl mov inc (bad) sbb mov popf rorl or pusha mov jl xchg sub jmp mov fs and loopne scas lods ljmp cmc subl je dec mov fnstenv mov pop sub mov pop mov mov out (bad) mov ja mov mov ds ja es test das jmp sti push cmp dec xchg push scas sahf pop sbb jne aaa into andb test push lret lret lret lret lret lret lret lret lret lret lret cld jp enter scas push adc mov sub hlt loopne jp imul add jnp push imulb xlat pop int3 add repnz ss fiadd adc cmp in jne jo sbb (bad) lock push addl or cmp mov fsubr push add (bad) xor ja dec insb mov ficom push sahf dec xor clc out mov mov lret adc mov mov iret mov mov mov jg fistpll adcb (bad) push push flds int jbe mov les outsl dec es push push add sti ds test sub lahf aam pop scas daa adc or xor rep mov cs pusha test mov add sbb pop mov (bad) (bad) fsubl loop pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor mov push lcall cmp sar cltd int pop mov push cmp movsl aaa sub mov lock pop dec leave inc adc enter cli out adcb sarb rorb sahf fsubr jno xlat add inc addr16 or cmp addr16 mov sub push and xor stos inc jae mov stos clc pop repz jne mov ret mov lods ljmp fisttpll ds and mov dec sub pop jb es das sub pushf sbb inc cmc jge and inc mov enter or arpl test das jmp mov sbbl jecxz out sarl or (bad) cmc addb mov jo mov mov lods jmp call scas pop jae mov decb aam pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor stos push fcoms inc sahf dec add lods cmp mov ret cmc xchg jge sahf inc and inc cmp out push dec mov and loop (bad) in pop pop adc testb cwtl in cs stos (bad) in incb push mov dec movsb test pop cmpsb inc bound inc imul fnsave aas es push ss xor int sbb sbb inc aam ja cmp das xor cltd mov and out shll mov xchg sbb mov xchg aaa mov xor adc in sbb xor ds inc jmp inc pop and mov jo stc xor (bad) inc pushf inc pop bound mov xchg sbb xor xchg mov jl sahf xlat fnstsw aas mov pop daa cmp mov cmp ficomp push cwtl lods pushf les dec jge pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor out (bad) inc arpl rorl mov es inc jp (bad) sub mov fnstcw xor std add dec mov test scas or mov push inc into push das hlt xchg xor out or pusha mov ljmp jnp ja inc lock xlat cmc sbb (bad) cmp pop mov aad xchg and dec fwait xor jecxz movsl mov add rolb push lds test xor and mov popf pop repnz pop adc sbb out das ret mov jp cmp push popa or dec ret sbb adc std loopne mov popf movsl add rcl outsb and into fadd stos adc cmpsl fistpl mov insl inc out std add xor rorl lds sbb add lret lret lret lret lret lret lret lret lret lret test popa jge push pop mov mov mov cmpsb sub mov and call pop xlat mov fcomip jmp out (bad) xlat hlt jns inc inc lea es sub or mov cmc cmc cmp stos lock je sbb dec ljmp rol mov loope xor (bad) int cmc pop sub inc inc roll loope (bad) push lret ss push pop jp jbe movsl mov inc test ja sub xlat jecxz jb sti or adc cmp mov and inc push loope xlat sub popf add test inc inc (bad) cltd cmpb ljmp ret cmpsb fdivrs or inc pusha addr16 (bad) jae and jbe sbb loopne xchg jne outsl push in inc aaa mov add cwtl mov gs aaa fadds xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop movb or jo inc in cmp mov xor sbb mov in xor dec (bad) xor xchg imul or xor jnp faddl fwait mov mov dec jnp mov mov es pop (bad) jo mov xchg mov aaa xor jae mov mov mov pop or inc imul mov mov popf pop sbb mov test popf push push int lcall fsubrl cmp lods aas jmp mov addl ds sub icebp xor (bad) lcall cmp sbb addb dec cs push ret ficompl pusha mov loop ja push lods inc cli hlt sub ja cltd cmp jl and xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor cld inc imul mov cmp cwtl test insb inc int sbb ret cwtl xor ljmp repnz sub sub dec into outsl out xor in (bad) mull pop fldt jae repnz jp lret nop cmp mov cmpsb iret and ljmp iret fisub mov cmp mov (bad) loopne lods push shlb call iret (bad) cmp inc (bad) mov ret xchg pop pop push in adc pop jecxz mov paddq sub imul in and (bad) mov in bound (bad) stos and aaa cwtl inc dec shlb retw push lcall arpl or mov insl lcall aas cmp mov lods aaa xchg stos push dec imul sub adcl lret jno jbe cmpsl out rol lds xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor lods es aaa das pop jg pop and mov cmpsb xchg out cmp fmulp mov es push push out dec and push outsb popa scas imul sub jp mov cmp jno pop into mov ljmp lcall nop inc push icebp cmp dec xlat xchg jnp push test dec adc sub fistp sarb dec cmovne in mov push sbb cld or add and xchg imul add mov adc jl cmp fldt (bad) fsubrs sti sbb lret xor repz cmc add pop mov das push and loope repnz push cmp sub inc cmp rorl sub xchg lret pop mov das add ret decb mov dec (bad) mov add lret lret lret lret lret lret lret lret lret lret lret xor sahf add xchg jl test out mov add pop or movsl push push fdivl or push pop jnp xchg jbe and icebp lock xchg fcomps jl,pn rcrl inc pushf rcr aaa pop es xchg xchg cmpsl outsl sbb aam mov sahf lcall test jp,pt mov gs (bad) ja cltd ret sarb js cli je inc sub and sbb fs mov outsb int3 adc scas (bad) (bad) xor inc cmp int3 movsb push shll popa das cli mov es insb push push out add nop mov mov or sub jecxz test adc dec loopne or cltd leave lods lret cmp pop jb pop push loopne xchg jbe cmpsb fsubrl ret decl shll mov es (bad) mov fwait int outsl sbbl mov pusha lret lret lret lret lret lret lret lret lret lret lret lret test dec add push or push sbb mov sbbb xor cs sbb sbb adc fsubp pop dec add out jbe aad add pusha pop rorb lock jge test out mov cwtl mov icebp popf xor sbb outsb popf lahf clc or movsl test mov cmp push cmp in pop sbb (bad) fldl mov pusha push xor mov addb sbb adc lods push mov int push adc xchg adc mov outsl js xchg out adc pop shl mov (bad) pop xor aas pop pmuludq mov cltd cmp sbb mov movsl cmc je xchg stos mov fbstp arpl in cwtl in mov dec (bad) dec mov mov out xchg clc dec xchg lret lret lret lret lret lret lret lret lret lret pop (bad) cmp or xchg mov adc rorl cmp mov cmp cltd fnstenv sbb (bad) cmp lret mov push jne push cmp ljmp mov les mov in gs xchg scas jle lret pop ss fist or lods pop std sbb das nop popf mov in (bad) sub adc dec xchg jbe std and xor ja out cmpsb xor mov hlt jo (bad) pushl mov xchg clc leave pop in in jge shrb jne insl cmp sti (bad) mov lock inc jge adc leave jno sbb mov test cld mov xchg mov or cwtl in (bad) in xor adc inc push lods mov inc add bound mov imul xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop adc aam aad pop xor mov outsl sbb inc jg jbe (bad) xor pop and call int3 push mov pop pop sub push push ljmp jp cli hlt sub mov jbe inc mov mov scas insl test mov loope fwait dec dec jae pop mov mov or or negb das dec cmp and xor mov mov mov (bad) popf ficom xor imulb jb adc mov cs lcall repnz leave and mov outsb cmp les adc notl (bad) das (bad) dec mov ljmp xor into adc gs (bad) adc aad mov cmp add pop jnp lahf pop mov jle lods bound adc in jp mov dec sahf out inc in lret lret lret lret lret lret lret lret lret lret lret lret sub pop jno sbb shll fs lcall dec cmp xor insl sub inc jge xchg arpl imul (bad) lea push das and jl cmp mov mov dec sub and (bad) cmp mov sbb push pop add xor test and out inc test stos repnz xchg pop enter push andl dec pop xchg cld cmp mov int3 xchg stos lahf int3 pop push xchg mov (bad) jmp pop insl out xlat lock mov pop adc jbe xor mov es test adcb ret inc fstpl sbb dec in mov je loop call dec data16 fs sbb lahf and adc dec mov mov faddp xchg ret xchg pop push xchg xor push (bad) mov fldcw pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor push pop movsb int3 jno test aaa ficom jl mov inc fbld aam xchg packssdw scas lds ss dec loop popf mov movsb pop out out ss ret pushf fild rcrb xchg mov imul out mov push inc push pop xchg cmc cli adc push pop push adc dec lahf aad mull mov adc imul out push lods fwait sar adcl pop rolb push dec mov std mov lock ja xor inc test lods jno (bad) es pop sarb xchg fs dec fbld dec dec (bad) in push xor jns,pt lea mov xor mov (bad) fcmovu test jg fsts mov mov jnp pop lods adc mov xor jge imul daa lret (bad) push adc scas (bad) popa lret lret lret lret lret lret lret lret lret lret lret stos dec mov xchg pop inc xchg cmp rclb push push (bad) loopne mov mov pop pop push aaa out jne jg loop cmp stos lock xchg jp popl addr16 rol stc pop dec int jmp test addr16 es lret shr add dec lock mov mov cmovnp test jecxz popf scas clc fstps jne aam test sti (bad) mov jne outsl mov gs hlt enter xchg xchg movaps cmpb movsb inc dec loopne inc xchg pop popf loop xchg jle or hlt jp sbb out adc mov test ret push mov or movsl and mov dec jb lds xchg gs sbb daa mov aaa pop jp or call xchg in ds cmp pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor mov add pop stos (bad) hlt je cli (bad) xor (bad) pusha pop adc pop sub inc sub add outsl imul andb dec push mov insl jae into orb shl pop insb cli (bad) (bad) dec les xor pop mov xchg xchg and out hlt fisub fsubs (bad) std addl mov add push sub lock inc popf xor cmp inc jno and ret dec and jne adc add popa mov ror in in adc push pop inc into subl inc fsubs out xchg repz xchg dec xlat fwait and jle fldl2t mov (bad) mov pusha rcll es cwtl sarb sub and jmp pop xor and and mov fucomp sbb in cmp inc cmp jl mov lret lret lret lret lret lret lret lret lret lret lret mov xchg sbb lds mov int3 out add aam sub sub sub pop dec outsb pop stc sub cli (bad) jbe pushf roll cmp mov test data16 mov xor jle daa lret add mov mov stos dec fwait outsb loope mov lret in fwait mov rcl xchg push in addr16 (bad) mov cwtl loope mov mov sbb cmp mov (bad) xor cmp or jns popf test mov mov lods xor adc mov cmpsb inc int mov incl cld into ja ja pushf jge (bad) mov and pop lods adc rorl xor xchg gs jbe or out add cmp mov (bad) lock xchg mov jno mov fwait scas inc mov lea cli cmp dec lret lret lret lret lret lret lret lret lret lret lret lret lret fdivr loope xor jp js push enter mov nop mov jne (bad) mov out dec addr16 lods stc inc cmp adc cmp sub mov dec pushf lahf xchg scas gs data16 jg xchg pop sarl add push pop mov lock ss jnp fcoml inc jno mov test cli cld add cmp movsb jno popf cltd dec rorb (bad) popl (bad) mov gs jg mov call test xchg int3 dec into add ja xor lock nop mov cwtl dec (bad) cmc faddl xor fnop subl lcall clc frstor out push mov loope popf aas jb xchg sete repz mov (bad) in jecxz inc push pop pop cmc dec and cmp addr16 xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor aam data16 js stos ret insl outsl or leave movsb push test outsb stos inc inc inc lahf shlb in lret loope repz leave adc mov lcall inc mov loope mov leave mov adc adc mov out jge cltd xchg xchg lock sub mov jno scas sbb add add jp cltd add or scas addl xchg jnp lret mov pop add mov out pop orb cmp xchg gs push jle cli imul nop mov dec inc (bad) cmc (bad) (bad) in ljmp rolb test or jmp inc movsl inc xchg jge jns dec test lods leave sbb nop mov dec push sar mov dec dec dec jl ss stos cs ja sub mov xchg push lret lret lret lret lret lret lret lret lret lret lret lret lret sbb adc xchg negb cmp dec outsb xor stos mov aad lahf sbb jecxz cmpsl mov test lahf test fs add cmpsb jle lret add jmp scas test sub pop notl sub mov js jno int stos arpl add push (bad) movsb adc (bad) or int3 cltd xorl add gs cmpsl cmc mov pop inc add out sub inc inc (bad) ja cltd mov imul nop mov mov sub mov pop xor rolb inc lods jo mov frstor cli push mov cmc pop popf frstor xchg aas sbbl ljmp les jecxz push inc pop pop xchg dec mov cmp imul je aam jbe js mov sub (bad) movsb push hlt and aam lret lret lret lret lret lret lret lret lret lret inc lahf push fldcw jl (bad) and leave adc mov lods scas inc mov xor mov mov stc leave xlat fsts mov rclb popf pop jge scas mov ss cmp jno iret sbb outsb test cwtl cld add pop (bad) movsb fistl fbld mov gs fisttp add jl out xchg in xchg or jle sahf imul nop mov sbb (bad) cmc push ljmp cltd mov addl fwait daa xor int jbe inc movsl aas bnd ret out test leave sbb pop stos mov xor cli imul ss in das sub push push sub adc push cmp mov hlt inc pop lcall mov insb lret lret lret lret lret lret lret lret lret lret lret (bad) lock adc out and lahf dec out inc data16 jg cmp push rcll jmp scas mov je inc stc pushf xchg lock jp ss adc jno mov test clc cld add cmp movsb imul or or test xorl loopne gs adc mov dec push add pushf sub inc push mov xchg fs test (bad) imul nop mov and cmc dec mov ljmp rolb rep jo pop fcmovnu bound (bad) pop popf inc sbb xchg or pop xchg mov fsubrs sbb mov (bad) ror jecxz mov es cmp adc mov inc cmpsl clc jle ret sub xor sbb sub arpl xchg add cld bnd mov ds xor mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop lods scas pusha divb inc mov loopne mov shrl loope (bad) leave (bad) test cmp mov jge (bad) mov lock mov mov in dec cmpsl dec call add out cmp dec fcompl adc (bad) jbe movsl sbb inc xchg iret inc cmp xchg adc icebp inc les les cmp ret and sbb pushf mov cmc mov xor xor pop insl and daa rcll xor xor (bad) dec shrl enter mov int add dec and pusha push pop stos sub into les shrl push pop in or in pusha push xor lock repnz push (bad) stos mov mov out idiv enter mov push lret lret lret lret lret lret lret lret lret lret lret cltd cmpsl jle out mov out fmuls sbb push ret sub rolb and in cmp jno in insl add push mov scas shlb or sbb in lahf xchg sub dec stos call sbb (bad) mov mov push loopne ljmp xor push pushw xchg mov and mov insb int3 in ljmp mov daa inc out jg fcmovnu bound jg jle dec repz les xchg ljmp scas ss out push mov or inc imul add pop sbb or sbb sbb sbb enter mov outsl mov cmc rcl add aad pop aas push ljmp sbb push outsb std dec sarl lret lret lret lret lret lret lret lret lret lret adc dec add xor (bad) xchg mov leave push cmp loopne pop daa pop (bad) cli jl cmpsb push lock frstor jle shll fbstp in (bad) mov movsl jns cld arpl jnp (bad) mov xorl push (bad) xor adc std (bad) push es push and pop lret addl inc inc add or mov and dec (bad) arpl inc repnz into adc into jecxz jp out xchg mov ss xchg test cmp aas ret sbb and aaa into les xor pop pop sbb mov jecxz ds out lahf (bad) movsl xchg stos jno pop fnclex adc inc fnstenv lods push aas jns call inc imul sbb aad fstpt gs dec fdivl roll pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor mov xor pop cmp dec inc jno (bad) bound push loope adc pushf jae jb shrl sub stc mov mov sub jns test (bad) mov cs rorb xchg xchg sbb push and mov jnp (bad) cmc sub in ljmp roll inc (bad) jno jl fsubl lret lds popf and xchg pusha mov xchg (bad) sahf fsubrs dec lcall dec test or jb pop or inc dec mov cmp (bad) cmp js pop insl inc sub mov sbb stos dec arpl aaa add jl jmp and aaa enter xor ret lods scas sti mov (bad) mov imul adc into insb mov inc addr16 xor ss lret lret lret lret lret lret lret lret lret lret lret mov cmp jno rcrl sahf push test mov movsb out fisubl jp movb mov and cmp stos adc inc cltd int3 in dec out pop mov xchg ret mov roll xchg mov adc imulb xor adc daa cmp jmp push pop loope xlat push fstpt das inc sub (bad) sbb lret push push sar out pop sub sub pop stos sub add pop into les lds pop pop movb sbb mov out add mov fwait outsb xor loop movsl jl data16 push push cmp xor add pop cmp in insl mov push iret fstps dec in ds mov addl sub mov xor mov data16 (bad) sbb pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor (bad) xlat inc fwait scas pushf sbb cmc test mov testb jg or mov test sub shlb das call and fldcw push sub xlat loope and push iret (bad) mov jns into mov daa sbb mov dec lods lret iret lds popf aas or xor xchg sahf fsubrs push (bad) repz pop xlat cltd inc test or js sbb add push rcll stos sub inc int3 addr16 or sbb add inc (bad) mov jne ret add sub loop mov mov test jp cmc push aaa dec mov rol adc outsb idivl movsb mov mov mov ror sbb inc or cmp inc sbb xor push xor pop in repz inc jno rcrl mov jmp outsl test call xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor negl test pop lods mov lret pop mov insb into xchg aam dec xchg inc xchg xor jp cmp call cmp rcl (bad) dec and push test je nop mov inc inc (bad) imul bound lods es out dec in sub pavgw jmp out push pop jle xchg sbb outsl sbb ss lock inc or cmp je stos add sbb adc sub jb mov inc das ljmp iret mov mov sub mov jl jnp insl aam dec cs out cli in and adc (bad) or in adc mov insb fldcw sub and push pop das sbb adc in js cmpsb inc movsl xor stos jnp (bad) jb sti call leave out push mov cmp lret lret lret lret lret lret lret lret lret lret lret inc or push push add mov sbbl aas loop outsl loop pop popf stos dec sbb ljmp cmc inc in popf lcall mov inc popa iret push data16 mov add mov in push dec std pop fnstenv icebp ret sub out ss (bad) mov dec inc sub pop pop stos cmp pop fnstenv cmpsl js in lods add inc dec (bad) repz or loop (bad) mov push out sbbb ret xor lods enter jne cs (bad) popf repnz sub inc mov cmpl maxps cmp mov mov fadds cs add in inc xchg dec loop inc mov gs pop scas (bad) mov out (bad) mov in scas xchg adc scas arpl lret lret lret lret lret lret lret lret lret lret lret lret (bad) nop in xor imul cli jo xor sbb adc lret mulb dec push or mov ljmp xchg out dec push call pusha and scas cmp dec xchg sub dec les into jmp int3 mov sbb pushf mov daa daa daa pop adc aas fiadd pop sub push test into les adc pop sbb gs divb decb push out hlt nop mov sbb mov shll stos push and mov sub (bad) and jmp sbb lock rolb jnp incb mov aaa iret push xor inc jno sti jl stos dec in sbb sar add fcom mov (bad) hlt push mov jnp cltd inc add push sbb int cwtl int popf push xor lret lret lret lret lret lret lret lret lret lret lret lret out mov xchg lods ss sbb (bad) repnz outsb push sbb nop subb test cmp fcomps repz push in push jae xchg (bad) fbld push popf jp dec (bad) push ret lahf sti mov iret pop inc fnsave mov xor bswap bound add xor xchg push xor sbb sbb fdivl dec outsl stos adc or pop movsb fcmovnbe sub mov mov adc push add mov mov dec adc add jp inc dec fcmovne mov lock rolb inc jp mov add jmp in xor std add or or xor mov mov das out in jle push and fwait enter movntq (bad) bound add lret lret lret lret lret lret lret lret lret lret add in test dec push adc mov mov ja lret subl push dec push or hlt add push xor jge aam lods imul je cli mov sub inc ja push dec jp push sub pop push mov pop sbb lods jg test xor adc pop leave jmp fistp insb sub push and inc shl loop or cld jg (bad) lock cmp cli fwait int mov dec mov sbb inc loope movsl ret aam jp jp repnz inc (bad) ljmp addr16 mov loope adc cli lcall gs sub test enter data16 mov test mov mov call xor sbb mov daa adc pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor mov stos not cmpl push dec jecxz jns fcmovnu (bad) fildll jge insb and xor fdivr mov mov sub mov mov sbb adc dec das pop mov adc sub ss cmpsl sub jnp mov push pop cli add cli jecxz mov imul enter inc xor mov sbb jbe (bad) fsubr push cld mov leave push jg cs mov ljmp pushf test pop ss sbb mov cmp mov inc testb mov stos enter cltd mov mov pop mov dec (bad) stos push adc sbb push fwait imulb xor call pop mov push push addr16 mov or popa (bad) cmc dec fild adc lahf lret lret lret lret lret lret lret lret lret lret lret lret lret pop imul add movsl cltd mov lea aad into sub (bad) std xchg dec sbb sub aam sbb dec push xor cs adc jae sti dec mov pop or jne gs in dec (bad) mov dec adc sub movsl notl mov fidiv xchg dec and lret xor adc aad nop out (bad) in in test call ds ret push iret addr16 ret (bad) xor pop ss enter push lock cmp lock out mov (bad) jl sub notl nop sub pushf inc adc pop push jo fwait sarb imul jmp jle push jle xchg sub adc xchg mov add nop cmpsl sbb sbb not andl push (bad) jno sub mov lret lret lret lret lret lret lret lret lret lods push mov mov push negl pop xchg ret sti mov mov gs or push xor (bad) ds xor dec fnstenv mov pop cs js movl inc mov push and cmc insl fildl repz je aad pop push cmpsb lret rcl sbb gs in shr insl icebp pop loope cli mov fisttp push scas inc dec fnsave adc mov leave inc sub adc repnz sub shl or (bad) testl mov aam decl xlat out xor lods jg cltd xor mov ja lcall add test mov sbb dec inc es stos pushf mov daa jo sub ljmp mov inc or scas scas es fisubrl into sub pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop push lods add mov int3 push push sar scas or cmp sub cmp and sub or push cmp shrl push pop lcall int3 mov add int3 lretw sub out sti xchg scas gs add xlat sbb jmp call fdivr pop inc (bad) xor into sub mov lock leave gs in mov cld jl mov pop inc mov add aaa pushf cltd sbbl inc ftst dec (bad) addl adc or mov stos mov ret adc call pop add xchg mov cmp in ljmp roll dec out jne mov xor cmpsl push popf insb and push fnstcw shr lods pop push jmp lret lret lret lret lret lret lret lret lret lret fsubs movsb pop pop pop xor and fistl jmp cmp stos mov das lret adc pop insl sbb (bad) mov bound lret add inc lahf hlt jbe mov dec push sub mov das daa ret lods scas cli xchg jne adc cmp fcmovnb loop jmp loope lcall (bad) adc dec or xor add sahf mov push mov out pop aaa push (bad) out jne lods inc call add cmp lock xorb nop cmpsb sbbl arpl add mov int in or xchg dec jecxz or ja mov cmp mov ljmp roll inc adc xor fldenv lea dec in dec les test mov rolb fcmovnb and movsb or pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor and push xor sub xor dec lret pop mov sbb (bad) xor jp int3 mov imul sti out add fwait mov add fnclex adc inc (bad) jb stos inc and mov lahf cmc ret or add sarb in imul mov inc (bad) jne into sub mov lock and push aas sub std sarb jno in insl push mov out pop mov mov stos xor std mov jecxz mov es pop add imul mov xor add in sbb adc leave in daa es lods in ljmp roll cmp mov pop jmp push popf jp dec int fildll sti sar dec sbb pop aam push loope js sbb or or ds cmp xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor xlat sub js out sbb pop dec mov jne fs jae ficomp inc aaa cli (bad) pusha fldl in repnz pop cmp lods scas ret add dec in fldl2e outsl icebp inc test loopne mov dec or xchg lods fcomi xchg loope mov mov mov scas dec negl mov (bad) movsb mov mov roll (bad) mov jg std je jns test enter popa xchg xor jl adc xchg test and pop mov xchg mov cmp mov ljmp mov dec inc add cmp into and dec fistpl data16 dec (bad) sub in rolb sarb mov mov xor pop stos sub sub cmpsl mov push in cmp pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor mov sub shrb jne stc add inc cld xor aad mov mov inc shlb and jge stc cld xchg scas gs or ret adc idivl clc lds pop (bad) js (bad) and (bad) sahf loope mov fstps jmp adc pop rclb movsb mov cli js aas movsl out ftst dec (bad) cltd in and mov sbb xchg mov addb and inc lea (bad) xchg mov jnp std xchg je in ljmp movsl lret out push je pop jae fcmovnu (bad) shl push mov lds popf xor inc idivl mov xchg fldl2e lods pop sub leave stos sub stos adc sbb inc inc or pop pop out add sub enter mov push pop pop lret movsb popa movsl push aad or lret lret lret lret lret lret lret lret lret lret arpl repz inc aad jl xchg adc daa ret lods scas hlt ficompl xor js dec ror ret int negb imulb leave mov pop aad les sbb and cli mov inc jno test inc adcl fiaddl (bad) mov cmc in xchg aam mov stc into imul ss out in jmp inc pop mov (bad) fcmovu jb xorl lds mov jo pop push not sbbl (bad) sub lret int3 push addl aas mov lea inc sub mov mov mov je cli xchg jnp dec inc pop adc pop stos sub push sub xor (bad) push pop sbb mov nop push pop lcall mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor insb pop daa mov add shl fstpl cltd add jle mov sarl rolb scas lods insl sub (bad) mov lock lods inc leave push inc jp into cmp jno je retw test sar add or cltd push movsl xorb sbb (bad) in xor xlat lret jl mov mov cmpsb inc xor (bad) fisubl lea repz adc xchg mov dec popa (bad) cmc out adc stos not subl lcall fcmovnu (bad) (bad) rclb popf pop push cmp mov fsubrs pop mov mov or jb pop stos xchg fstpt mov cmp jnp cmpsl js pop insl xor insb mov sbb stos jo inc lahf call ljmp and aad pop lret lret lret lret lret lret lret lret lret lret lret fldln2 scas cmpsb mov (bad) xchg test rcrb int3 xchg clc leave fs in inc mov insb mov lods addr16 (bad) mov lock mov mov cmp jno mov lretw ja push mov pop jo push mov dec (bad) hlt sub adc add xor sbb lahf mov and repz adc xchg mov dec popa (bad) cmc sub pop xor xor popa or decl cmp pop imul mov mov je cli cmp adc cmpsb push rcl jp push sub imul push pop sbb mov nop push pop lcall mov insb push or sub lds mov scas gs scas out pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor cmp mov sarl cld push lods insl sub (bad) mov lock mov mov cmp jno mov and std add adc movsb (bad) pop pushf cltd call inc (bad) xor xor into mov insl pop add sub push xchg xchg mov fisubrl pop push mov dec popa (bad) cmc push xchg ljmp rolb cmp lock lret mov pop popf pop push cmp ja fldcw enter in xor les loop (bad) jb pop jne and cmp inc (bad) jnp cmpsl js enter das sub push cmp jo inc lahf inc dec mov (bad) jmp jl lret repz aad pop leave mov push fisubr mov test das loope (bad) leave lret lret lret lret lret lret lret lret lret lret lret lret cmp adc cs mov lods addr16 (bad) xchg lock andl sarb jno mov shrw cld aam add pop pushf cltd call out xorl in xor into mov jg add into add ja sub repz nop mov orb scas xchg ljmp rolb dec pop pusha or loope push cld nop inc movsl insl sahf jge adc leave sbb nop mov mov dec dec dec xchg ja ss (bad) das sub popa push sub imul push mov sbb iret das xchg testb xor mov mov insb das jmp adc add dec mov fs aam jle inc mov push rcrl jmp scas test sub xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor lock ja adc mov lods sbb add cld add (bad) movsb jne popf cltd fisttp fisttp dec (bad) in pop gs pop call add test out push ja pop stos push jle ljmp (bad) push nop mov cld inc (bad) cmc fimull pop xor rolb aas movsl jo es frstor jmp pop popf xchg jne xchg inc xchg pop xchg fistpll mov les jecxz lock pop pop inc dec and cmp cmp mov cmpsb js lods ret insl ret push sub inc cmp or inc lahf cld and jl leave repz divl pop aas loope scas rcrb mov test loope,pn lods stc leave inc ficom mov add push jno jge dec mov ss lret lret lret lret lret lret lret lret lret lret jns jnp push jl jno enter test xchg cld add push (bad) movsb aad popf cltd mov xorl push jae lret (bad) test sti int3 dec sbb inc adc ja jmp pushf imul nop mov dec daa (bad) cmc lret ljmp rolb lds or lock adc inc movsl in sahf jge pop mov aaa mov nop mov popa pop sar push dec dec dec mov adc sub push sub inc sbb mov mov sbb in xchg negb ss lcall mov insb out ljmp xchg mull lahf inc popf fs inc iret jle sti stos cmpsb jle mov jmp scas sbb mov imul ss jne mov mov lret lret lret lret lret lret lret lret lret lret test out add (bad) movsb and cltd rol or (bad) popf xorl ljmp adc inc add (bad) aas out pop cltd ja lret mov jle fldcw sub nop mov jb (bad) cmc xor in ljmp rolb rol jo (bad) pushf frstor lea mov cmp adc frstor les ret jecxz mov pop pop or and cmp pop addr16 dec add ret insl jne sub leave pop movsb push stos push outsb stos jo inc lahf inc mov out test repz leave adc popf test push aam mov out mov fisubr loope aad leave loope adc outsb sub sti movsl repnz lock mov mov jno mov test sti cld add adc movsb lret lret lret lret lret lret lret lret lret lret lret sbb (bad) (bad) xorl add gs (bad) mov imul (bad) nop int3 dec imulb ja dec movsl push jle icebp imul nop mov mov cmc mov in ljmp rolb and or loop push dec xchg inc movsl jg jge dec mov (bad) nop mov fsts cli mov jns ss push sub sub mov pop sbb mov fmuls cmp xor mov mov insb sbb mov dec outsb sti popf lahf push out inc clc mov cmp shll (bad) mov call cs insl sub or (bad) mov jo push mov or cmp icebp rorl test cltd cld add (bad) movsb add or mov lods lret lret lret lret lret lret lret lret lret lret lret (bad) (bad) js lret push xchg test icebp int3 dec out out xor xchg and sub jno in rorl xor lods stos (bad) dec push ss ficomp decb ret jno enter jmp lds jbe insb cli dec aad lock cmc sub call ljmp mov outsb ljmp aaa adc shrl mov adc in mov pop sub sarl or add inc lahf mov testl clc push enter jne dec cmpsl out ret leave int3 adc or and int jmp in imul rcrb jl pop pop (bad) adc or lods (bad) mov repnz iret pop cmp sbb mov sub (bad) jmp xlat or cltd fs movsb scas pop iret cld pushf mov hlt inc stos lea mov or pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor cmp out xchg aam or push (bad) jp adc fidivrl lea adc cmc aad and sbb lcall cmp test sub or cmp fild in jg inc out out sub enter sbb movsb mov and xchg xchg stos pop push das xor ljmp fsubl stos or or sbb cs sbb mov fsubrl call xor aam mov xchg push notl ja lds sti fmul sbb pop (bad) cltd xor loope mov ljmp leave sub mov pop out mov clc xchg movsb cmp pop and adc mov aaa and cli jo movsb push lds sarb int cmp cltd int3 sti dec mov lods mov test test push jg and mov xlat lret lret lret lret lret lret lret lret lret lret lret lret leavew add loop and movlps fmul icebp inc adc ds push fisttpll push (bad) mov adc lret loope outsl sub mov mov les jo pop loope subl in stos pop je in iret pop pop fisub mov push pop je aam dec stc xor dec mov sub sbb sbb sarl and adc pop cli jecxz lds inc ljmp lds lods scas add outsl (bad) push outsb loope xchg mov fstp adc inc or push lods addr16 (bad) stc xchg test into add cmpsb imul mov lods inc loope inc jecxz inc sahf bound lcall out jae in xlat stos push adc sub jae mov ja and pop cmc ucomiss test lret lret lret lret lret lret lret lret lret lret fsubrs (bad) bound and mov pop (bad) cwtl mov daa mov test daa into aas mov mov inc loopne int3 push call mov (bad) (bad) pop pop rcl ss cli addb or aaa fistpll adc jle les aam pop push (bad) cmp jne (bad) scas jg test push pop lcall aam mov jne es adc inc int3 inc iret test out div ficoml es cwtl loopne (bad) les aad mov iret mov pop ret lds mov lock aaa leave jne xor in mov jmp adc data16 jne jne int3 mov std std call (bad) hlt data16 sub mov movsl jns repz ljmp push xchg cs (bad) jge sub hlt push jle fstpt add fsubr pusha and add pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xchg lea lods icebp call sti test push out push outsb daa fstpt loope mov cld jnp push cld dec aad loopne sahf arpl and sarl or lea jb pop adc dec and (bad) js out cmp xchg mov es push imul mov imul push ficom fs xchg add xor mov jo aad pop ja leave (bad) call pop out repnz pop mov divl fstpt xlat flds sub mov xchg lock push repnz ss mov mov xchg add mov je pop cmpsl lret stc cltd adc dec mov stos andl scas insb stos mov jp outsl fisttpl imul or xlat test out xor jae sbb (bad) out and cmp mov scas imul lret lret lret lret lret lret lret lret lret lret lret lret jmp inc pop lcall scas fwait cmp fisubr sarb sbb leave dec fldcw push add sbb mov sbb sub or addr16 cmp dec push dec aam cld inc scas stos sbb sbb xor sub (bad) int mov xlat add xchg loope nop fisttpll add dec iret jbe stos dec and fstpl or out adc cmp int3 mov in adc les movl add or xor inc lock pop mov mov (bad) (bad) mov pop movsl mov sahf cmpl jg cs lcall das pop int3 popa in aaa and mov pushf mov ss ja mov sub iret (bad) mov pop xor xchg out jbe dec dec loopne jge mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop cwtl add stos push mov les jp jnp push sarb push cwtl repnz xor lods adc push pop aas and and fnstsw pop jle cs mov and sbb (bad) adc push inc (bad) mov (bad) iret popa sbb or sahf frstor arpl mov xorb jo sahf push and int ret sub jle push test iret or mov lret sub dec or pop sahf mov fist sub adc std movl jle lret mov push cwtl mov shr (bad) lea mov insb iret int3 je cs lcall push xor repnz in sbb ret inc pop cmp cmc inc lods scas cwtl pop sub out inc fistp jb or bswap and jl outsl dec pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor ret das mov mov ficompl ljmp add sub out inc cmovs das cld inc scas cmpsl add sbb (bad) cmp or xchg in xor add lahf les push fistpl adc inc int3 inc (bad) mov and jecxz in xchg scas loope and ret adc ret fiadd add jb mov xchg lea leave push pop add cmpl add std add adc fildl movsb (bad) push lods stos sub into mov sub jno mov movsl push mov mov in insb out cmp nop lods push cmp inc cmp jns test fistp mov pop cmp xor popf pop and repz aad sti fsubr mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop int add les mov cmp sub ja mov inc lods aad daa (bad) aaa cmp lods es push push pop bnd out adc dec aad inc out jb rorl mov pop pop ret shr ss fldcw sti (bad) lret jno das loope xchg stos lods cld mov lret push mov sub push lods addr16 xchg (bad) icebp mov aaa faddl or lock cmp jo in jle cmpsb dec loope push xchg lods pop into cld (bad) mov loope lods orl scas push in adc sarw add and bnd adc mov loop sbb jbe fsub bound jge test js dec xor xchg mov dec inc pop subps mov rorb inc sub pop rcrb (bad) enter add hlt jmp adc xchg sti lret lret lret lret lret lret lret lret lret lret lret lret mov and fcomps adc aaa push les jecxz dec sbb adc jno hlt int aam movb push popa sbb in popf mov add mov push std inc (bad) mov iret div ret or push cltd sbb repz lock mov out test repz fcmovnu or pop pop fildl fdiv pushf lea sbb fwait pop sub jecxz add xchg sbb mov jg in pop iret shrl mov pop mov aas rcl push add xor popf out cmp pop mov push shlb xchg mov add lret push adc pop notl aas ss jmp xchg mov jne push pop ret sbb mov enter nop les mov jg push aad rcrb lods and notl push adc sbb rcrb aad lret lret lret lret lret lret lret lret lret lret lret pop (bad) xor or iret (bad) cmp fbstp jns ljmp lock stos imul stos or jns mov cmp (bad) leave int and outsl iret or call jns std sarl mov pop sbb cmp cmp lcall fnstenv adc int3 xchg jge daa xchg mov fwait imul fs lret mov popf insl lahf sub in cltd mov xchg lods imul cs push jbe mov mov push jecxz repz (bad) mov adc mov push push jbe loop out cmp xchg pop jmp xor test out push insl and scas mov sub popa out outsb xor outsl in mov into stc pop and xchg mov gs negl sbb dec imul imul xor in lret lret lret lret lret lret lret lret lret lret lret lret rcrl dec aad scas and (bad) or push out hlt sahf rclb xor jmp or leave test xchg sbb repz ds fld1 mov pushf push push sarb lret and (bad) loop mov jbe adc and std cld imul push imull jo mov xchg clc js cmc test bnd movsb jnp lods inc adc cmp inc ljmp mov push xlat popa cmc and (bad) jmp int jle fsts and push daa xor adc stos jge data16 sahf mov jne call pop sbb adc jo jg jae pop repz fildll imul stos add ljmp jb pop push jnp sbb cmp dec shll cmpsl wrmsr into push sub or mov ja pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor push fiadd and (bad) jne movsl inc mov sahf dec notb jp xchg ja adc (bad) sbb in out aam cwtl xor repz mov sbbl pop add push xchg scas rcl mov insl cltd push cmp or cmpsb dec and (bad) sti pop and nop stos aas (bad) jno enter in xchg (bad) jb nop sub mov lret dec jg inc test xchg jae xchg pop rclb aas out mov int sub std or jne into int inc daa and and stos jns data16 lcall pop xor and fiadd dec add mov loopne fisub mov adcb lret pop mov and push arpl dec inc sbb or push cmpsl mov jb sub (bad) sbb lods addr16 cltd repz adc jno mov loopne lret lret lret lret lret lret lret lret lret lret lret lret lret pop sub lcall out sbb (bad) int3 scas jo pop ret aaa dec repz out mov mov push repz pop ret lds test test inc or or mov enter les or pushf insb fwait jg lds mov (bad) jae mov out add or inc dec fisttpl inc fadds fs sub add out mov lcall popf out das and adc sahf stos jge sub xchg aad adc dec push in adc mov and mov pmaddwd pop adc imul sahf lock lahf cmpsb add mov add sub add sub xor dec out lods mov ss push iret mov (bad) insl in aas les jns lret add aaa (bad) inc (bad) movsl inc pushf pop sbb stos mov push repnz lret lret lret lret lret lret lret lret lret lret sbb mov lret xor jg cmp in idivl das xchg (bad) test sub ficomp test fsts shlb xor and add mov loopne je mov xchg xchg (bad) mov inc (bad) in pop stos orl mov or jno lahf aad or ret adc out push (bad) adc mov push pop push aaa ror icebp inc push adc and ljmp movsl out or outsl adc enter mov and cmp shl push inc jle hlt adc and ltr push pusha push or insl repnz xchg push inc repnz jg jl movsb push sub lret aad test add push clc inc out push das pop repz loop and lret lret lret lret lret lret lret lret lret mov xchg dec mov out shr mov pop out jl shll addl dec mov pop and lret jmp add mov loop scas cmp imul lods jno mov cmp scas cli mov pop out and ds int3 cwtl cmp xor adc cmp mov mov lret negl repz dec ret sub pushf imul aaa dec std dec lock sbb sbb jecxz jne sti xchg daa shlb push insb xor rcrl pop jl js mov xor sbb inc dec repz dec lcall pop aaa (bad) stc jne movsl inc scas pop or stos mov stos adc cmp fsubrp loop inc adc cmp or incl mov xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor jge movsb xchg jp fnstcw sarl cmp (bad) mov clc xchg mov and call ret loope adc inc mov inc mov xor cli mov rolb movsb cmp dec mov dec and xchg pop rclb aas out mov int sub std or jne into int inc daa and and stos jns data16 lcall pop xor and fiadd dec adc mov loope rclb mov mov add das ss ja sub pop inc adc push imul push in dec or pop out js xchg rolb movsl inc xor out xchg shll jmp faddl xchg pushw daa repnz out sub cmpsb jg out cwtl adc cmpsl mov clc mov pop fxch pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop jo loop xchg mov imul dec add andl adc cmpsl shrb enter shl jb (bad) add mov imul pushf scas sub inc xlat jl push sub sahf jbe je fwait mov lock icebp push push adc adc aad sub testl xor mov lock popf inc popf lock pop lods push ret sub icebp fiadd lea adc mov add sub add sub xor dec out lods mov ss push iret mov (bad) insl in aas les jns lret add aaa (bad) inc (bad) movsl inc fildll ret scas mov xchg aaa iret adc mov adc pop push fsubp outsb fsubrs repz mov into sbb mov sub pop ficom sbb cmpb pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop rcrl and out jl xor inc les gs mov movsb cmp lds xchg add sbb (bad) fisubl jno add jge add (bad) mov xor lahf mov adc jecxz shll or cmpsl xchg pop in mov je mov subl inc inc sbb dec jno scas xor shll cli dec sarl push out out mov (bad) inc imul sahf xchg sbb pop ss cmp push add repz lock pop pop cmc cld cmp mov cs or xchg lods jo cs (bad) in dec fild nop sbb (bad) in leave fistl and mov rcr or cmpsl mov out pusha iret fadds pop lock sbb pop add in ja add lret test xor rcrb lretw lret lret lret lret lret lret lret lret lret lret fldenv push jl mov lahf in sbb imul jno sahf xor call fmull mov (bad) and mov adc aaa (bad) stc mov push pusha or xchg mov jns pop xor imul mov pop icebp sbb test adc movsb xor or pop loopne les imul sarb pop mov cmp and push push cs or lret pop clc pop (bad) xchg ds cmp or je addr16 sbb fnop pop mov call aam inc hlt inc mov sub lret out loope dec ja arpl cmp ffree out pusha in pop mov jmp pop lods inc add (bad) push mov mov add enter sub inc fistpl inc mov lret lret lret lret lret lret lret lret lret lret lret scas aas ret ljmp (bad) addr16 sub jg loop or inc call mov gs iret (bad) call push int rcrl stc aam or or mov push je inc fist movsl data16 inc outsb das mov xor push fldt dec adc cmpsb dec enter cli mov pushl fadd xor lods clc inc sub sub ja sub or pop mov jp lock inc sbb xchg (bad) bound movsl inc xor xchg jmp push fwait movsl inc mov mov aas push cmc jmp out and adc iret cwtl pop cwtl in mov stc nop inc out sahf sub loop nop cmc shll push inc dec (bad) in pop es lret out pop out in pop mov jae bound int3 xlat fisubr cmp fild pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor jno mov out push aas das cmp lahf aam and jecxz (bad) push or adc mov xor jecxz and ja fwait xchg stos pusha or std leave cmc loope inc repz (bad) mov and lahf imul and push les neg stos pop adc loope jnp fisubrl mov cs push sub push or jnp loope jne notb dec dec (bad) mov cli jne fs les and lret rorl repz push lds xchg mov rcrl cmp push daa in repz cmp outsl xchg mov mov or outsb cmp adc cmp test adc and loopne arpl pop sar imul dec les out fldenv jno sti mov std lock mov sbb hlt push cltd movsb or pop (bad) lret lret lret lret lret lret lret lret lret lret lret lret daa and test mov xchg and pushf sub add out mov xchg aad mov adc dec or ret push jmp pop jle mov add imul push pop cmpsb dec sarl clc hlt ficomp out loope push mov cmpsb adc aaa aas jge sub push or insl call jb cmp repz sub sarl pop push or in lret mov loopne push adc lret jno mov leave mov adc or lock enter lret mov jnp pop sbb (bad) mov sub loopne jl push rcl jnp mov les nop cmpsl add stc shlb lds xchg add cs sbb mov mov xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor jb dec hlt adc (bad) lcall cmp push dec shr mov adc mov dec dec ss lahf mov dec jge push jle test add mov jnp jb jl add pop push sti enter incl xor sub cs sub popa jne add lods inc loope dec jge sbb cld stos push xor dec shrb sub dec inc es jae xchg jo inc or stos mov out lods push notb in (bad) out xor or test jo repz test mov rcrl dec mov or cmp and (bad) in (bad) xchg xchg or push cli xchg js add in pop adcl je lods inc mov sahf inc pop rcrb sub rorb push cmp sbb mov insl xchg insl xlat jl or hlt lcall pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor or add stc lds adc shrb push jmp mov imul adc jg test cmp pop fmuls pop jns loope sarl adc sar je fnop adc and sbb ja std adc sbb and mov pop stc (bad) out jg jne mov outsl sub and jne hlt xchg loopne movsb loopne or in xlat ja andl cmc gs jle inc push hlt (bad) enter pop out cwtl loope lret pop ror pop ret iret pop test test inc or or mov enter les inc movsb cltd inc mov test cwtl adc ret call lcall test movsb imul call lods insl xchg insl xlat jl or hlt lcall sub addr16 stc lds adc pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor or xchg mov in mov out data16 ret data16 int3 xor in add mov push jbe pop sarb pusha mov idivb scas sub les or inc sub aaa adc cld pop in xchg cmp dec or ret sub mov and shll das adc in stc outsl xlat movsl inc mov xchg push lret je mov (bad) ret add sti (bad) aam jge pop mov fistl imul and cli pushf mov faddl xor int or pop arpl inc in push push nop ret jno int add in lcall or sahf outsb adc aas cmp lea cmp and popa in cmp test leave adc sbb jo shr (bad) fs add and cmp pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor fist (bad) dec inc outsb das mov aaa rorl outsl loopne add or daa in sarl je jmp and xchg mov add and outsl cmp push sub pop or fstpt add imul xlat push pusha mov fild push ss xchg fs clc push cltd loope daa je (bad) (bad) loop pop add mov rcrl mov ret test iret rolb sarl int xor out adc inc mov add ret sti jo pushf push lock lcall xor jmp mov xor repz movsb cmp xor ljmp xlat mov add jp and adc ret call mov push adc lret leave mov xor test addr16 dec cmp pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop cmp mov insl fstpl dec out lock ret mov scas xor test (bad) rorb add cmp sti jg mov add jns mov push pop dec insl repz dec lock sub xor ret mov pop or (bad) pushf inc aad popf sub pushf fcomp (bad) (bad) add ss iret cmp int into pop cmpsl or cli xchg jl cld cmp outsb sub pop in cmp test push xor and lret jmp adc push nop mov int3 cmpsb cs in lcall jb nop sub out insb mov ja mov mov inc cmpsl xor dec (bad) xor fwait (bad) (bad) mov and push xor jecxz and ja mov stos push outsl cmp lahf mov pop inc call dec sbb call cli dec (bad) lret lret lret lret lret lret lret lret lret lret lret lret outsl in xor cmp loope sahf and jmp rcrl lret push xchg mov sub sbb outsl outsb cmp add ja xchg and and mov fs hlt or xchg lahf pop cmp cmpl movsb dec aas imul (bad) fildl add stos inc sbb cmc lret adc ret lods stc mov or dec sbb into stos loope mov insb and out mov ljmp inc mov (bad) icebp clc js icebp mov jmp xchg lahf inc add push adc mov add jecxz hlt adc (bad) lcall xor adc mov mov push mov mov cmp (bad) mov arpl push jg mov xor fstps dec idivb or lret lret lret lret lret lret lret lret lret lret stc sarb mov dec movsl push aas push adc sti push jg push sahf mov lds jmp inc shrb push push mov add div pop ret xchg jo inc sbb scas cmpsl pop mov mov sub fcomp out xor or xchg xchg out gs inc (bad) lods out mov cld cmp repnz out and lock or push in xchg jl xor (bad) pop and sbb arpl xor fldcw int inc xchg pop mov clc sbb inc inc pushf lods and int3 jl daa or adc mov sub adc lret mov insb add cltd dec cmp pop int3 mov (bad) adc add js stos movsl psubd in shrl adc cmpsb dec int3 and ret je lret push pop jmp and lret lret lret lret lret lret lret lret lret lret lret lret xchg mov add and sbb outsb jno dec (bad) sub inc in add jne cld mov popa pop fnsave nop rorb add push int3 popa out jb cmp lock int3 add or out mov jnp cld shrb lahf sahf sub mov (bad) xchg rcll jg jmp dec sub std sti insl adc dec jecxz jae ret js (bad) cwtl sub clc orl or popa mov jno mov jbe and and xlat push jle fist fs stc mov or adcl ja leave cmc loopne push call jne test and jne push (bad) push sarl loopne in cwtl insb xor loope aaa pop fild jb pop push dec sub pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor call sbb pop or xchg push dec dec inc shrb jg fnstenv daa add movsl push rorb inc hlt inc cmpsl notb addr16 ret add (bad) sbb in inc dec ret push xchg (bad) imulb cmp (bad) fiadd cmp mov (bad) mov adc jbe sbb fstpt ja mov in pop inc (bad) lahf popa test xlat mov (bad) mov incl jmp arpl addr16 mov inc aas mov (bad) mov in subb cld lds push ja in xchg jno mov fcomps call dec sbb call cli dec (bad) outsl in xor cmp loope sahf and jmp rcrl lret push xchg mov sub sbb insb outsb xor adc cltd add lret lret lret lret lret lret lret lret lret lret push xor cld mov imul out repz ret mov mov pushf data16 movsb push adc sar loop and pop (bad) fyl2x inc fucomp jae shl mov in inc ljmp movb in mov add jb add mov jl,pt ljmp sub xchg stos aas (bad) jb xlat scas aas ret ljmp (bad) addr16 sub jg loop or inc call mov gs iret (bad) call push int rcrl inc arpl popa js xchg scas sbb add (bad) xchg mov inc push lds sbb fwait cwtl aaa mov aaa (bad) mov jmp dec lock ret imul jmp inc xlat stos push in movsb xor push addr16 fistpl and out in push out dec (bad) fisubrl adc test pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor push push jmp pop popa std icebp jb xchg pop push call (bad) divl aad push sub fmulp iret lret push adc dec cld cmp jmp dec lea (bad) popa (bad) clc cmp repnz and (bad) stos loope sahf xor loopne pop add ljmp inc mov (bad) icebp clc js icebp mov jmp xchg lahf inc add push adc mov add jecxz hlt adc (bad) lcall sub adc sarl and sarl sahf sbbl inc fstps iret sbb adc insl cmp mov (bad) jg dec (bad) jnp push in loop js (bad) dec je jmp adc and pop pop sbb adc je dec dec imul or fstpt add imul xlat push pusha mov fild pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor mov stos push ss xchg fs clc push cltd loope daa je (bad) (bad) loop pop add mov rcrl mov shrl scas mov cmp js (bad) testl mov add popf lods jp mov mov je push and test aaa sti cmp in pop mov jno mov mov bound sbb mov inc mov sbbl cmp int3 std or addr16 repnz push cmp es xchg mov xchg leave mov sub test pusha jge add pop test cmp and js jg pop aam ljmp or test xor or dec out sbb insb cli add js fcoml mov push xor or and in fadds fdiv and xor xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop fbld xchg nop xchg fimull and (bad) (bad) into pop fldcw (bad) shrl mov push adc aas fisttp or xchg cmp pop push inc jne in add sti leave dec daa fwait outsl les xor or test mov stos pop mov mov movsl and test xor leave jle stc ja adc (bad) mov test pop xlat addr16 cmp jae sub sar cmp and leave orl pop inc cmc dec inc adc stos and fild mov in arpl inc loope mov mov mov cmp cmpsl pushf (bad) bound push xor sub pop mov push adc sub cmpsl or xchg in xor pusha push xchg pushf stos jg fnstcw inc (bad) fs mov out cli test pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop or sti aam xchg (bad) jl mov mov lret sahf mov cs sub and pop and sbb int sbb jne sub shll (bad) movsb leave pop mov scas aas cli jmp xchg mov xchg mov sub negl pusha lahf sub mov pop in jle fnstenv mov sub cmpsl mov rcrl hlt xchg mov dec pop hlt daa gs cs cmp cmp cmp push addr16 push fldcw loopne in mov negl iret mov loope addr16 xor daa sbb inc hlt mov adc sbb js (bad) popf xor jae (bad) mov enter outsl stos pop arpl shl out subl sbb push push sub fcom (bad) fidivl rorl sub mov xchg lret lret lret lret lret lret lret lret lret lret xchg push leave in andl dec push (bad) push or lcall fcomps inc loope movsl pop xor add mov add mov mov aad mov xlat in mov xor lret jp std je pop push (bad) mov test scas ja or push adc ficoml sbb add mov ds fwait dec flds jns mov mulb ss insl cmp add push (bad) jp dec inc jnp arpl push aam mov (bad) in push inc cwtl xchg mov dec adc jb faddl adc jno test jae push xor xor mov pop sbb or jb hlt mov pop add mov jne push jmp fsubl (bad) (bad) fbld adc loop lcall mov lds pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop inc lds (bad) es jecxz loope adc adc adc sahf push and cmpsb pusha testb orl insl pop (bad) orl sub sahf pop or adc inc in mov mov je imul dec or fs sbb jnp hlt lock popa loope pop leave test into mov lcall stos popf push loopne aaa mov les jbe imul aad stc sar mov mov xchg or and insl sub fstpl in sqrtps inc mov or pop sub mov jne arpl js fidiv cvtpi2ps cmc dec rorl imul mov jnp mov ljmp or es (bad) in pusha xchg test mov jae pop or cmp adc mov xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor add das jno mov mov lock mov jle lret xchg mov jl cmp dec (bad) in xor into mov jg add into add push xchg xchg and push adc xchg mov dec popa (bad) cmc sbb pop xor xor popa or lret int3 push jl inc movsl aas mov lea inc sub mov mov mov je cli (bad) bound inc pop adc pop stos sub push sub imul push pop sbb mov nop push pop lcall mov insb jno loop test mov dec sbb gs data16 jg xchg pop sarl add push pop mov lock mov mov cmp jno mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor sbb test sar add adc movsb (bad) pop pushf cltd call movsl xorb in (bad) in xor into mov jg add into add push xchg xchg and push adc xchg mov dec popa (bad) cmc sbb pop xor xor jno pop fcmovnu bound push popf pop push cmp mov fsubrs je mov les loop (bad) jb pop push outsb and imul (bad) jnp cmpsl js pop insl imul mov arpl nop add jl jmp and aad pop daa ret lods scas cmpsb mov (bad) xchg test das loope xchg clc leave fwait loopne mov cs mov lods addr16 (bad) mov lock mov mov cmp jno mov retw test sar add pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor adc movsb (bad) pop pushf cltd call movsl xorb in (bad) in xor into mov jg add into add push xchg xchg and push adc xchg mov dec popa (bad) cmc sbb pop xor xor popa or lret int3 push jl inc movsl aas mov lea inc sub mov mov mov je cli (bad) bound inc pop adc pop stos sub push sub imul push pop sbb mov nop push pop lcall mov insb jno loop test mov dec sbb gs data16 jg xchg pop sarl add push pop mov lock mov mov cmp jno mov retw test sar add adc movsb (bad) pop pushf cltd call movsl lret lret lret lret lret lret lret lret lret lret xor in (bad) in xor into mov jg add into add push xchg xchg and push adc xchg mov dec popa (bad) cmc sbb pop xor xor jno pop fcmovnu bound push popf pop push cmp mov fsubrs je mov les loop (bad) jb pop push outsb and imul (bad) jnp cmpsl js pop insl imul mov arpl nop add jl jmp and aad pop daa ret lods scas cmpsb mov (bad) xchg test das loope xchg clc leave fwait loopne mov cs mov lods addr16 (bad) mov lock mov mov cmp jno mov retw test sar add adc movsb (bad) pop pushf cltd call movsl xorb in (bad) in xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor or jns test mov out xor xchg and push adc xchg mov dec popa (bad) cmc sbb pop xor xor popa or lret int3 push jl inc movsl aas mov lea inc sub mov mov mov je cli (bad) bound inc pop adc pop stos sub push sub imul push pop sbb mov nop push pop lcall mov insb jno loop test mov dec sbb gs data16 jg xchg pop sarl add push pop mov lock mov mov cmp jno mov retw test sar add adc movsb (bad) pop pushf cltd call movsl xorb in (bad) in xor into mov jg add into add pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor out xor xchg and push adc xchg mov dec popa (bad) cmc sbb pop xor xor jno pop fcmovnu bound push popf pop push cmp mov fsubrs je mov les loop (bad) jb pop push outsb and imul sahf aam push out sub aas insl mov pop in xor das stos sbb lahf or lock iret imul mov cmp xor dec pop lret (bad) mov sti outsl loope loopne leave loope push mov enter mov cmp movsb and std ss sarl mov scas add sbb sarl mov movsb ljmp (bad) jae xor or add and leave sub adc addl push std cmpsl inc xor xchg lret lret lret lret lret lret lret lret lret lret lret push jle fldcw add mov pop xchg mov dec aas xor mov cmpl (bad) sub hlt lea aad int3 pop ljmp pop aam (bad) mov sbb sarb jnp xchg lods test aas adc cmp cmp dec dec cmp and ja les (bad) push jne sbb mulb push xor aad fistp insb jno loop test mov dec sbb and adc leave sbb sub mov add push pop mov lock mov mov cmp jno mov retw test sar add adc movsb (bad) pop pushf cltd call movsl xorb in (bad) in xor into mov jg add into add push xchg xchg and push adc xchg mov xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor dec push dec popa (bad) cmc sbb pop xor xor jno pop fcmovnu bound push popf pop push cmp mov fsubrs je mov les loop (bad) jb pop push outsb and imul (bad) jnp cmpsl js pop insl imul mov arpl nop add jl jmp and aad pop daa ret lods scas cmpsb mov (bad) xchg test das loope xchg clc leave fwait loopne mov cs mov lods addr16 (bad) mov lock mov mov cmp jno mov retw test sar add adc movsb (bad) pop pushf cltd call movsl xorb in (bad) in xor into mov jg add into add push xchg xchg and push adc xchg mov dec popa (bad) cmc sbb xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop cmp xor xor popa or lret int3 push jl inc movsl aas mov lea inc sub mov mov mov je cli (bad) bound inc pop adc pop stos sub push sub imul push pop sbb mov nop push pop lcall mov insb jno loop test mov dec sbb gs data16 jg xchg pop sarl add push pop mov lock mov mov cmp jno mov retw test sar add adc movsb (bad) pop pushf cltd call movsl xorb in (bad) in xor into mov jg add into add push xchg xchg and push adc xchg mov dec popa (bad) cmc sbb pop xor xor lret lret lret lret lret lret lret lret lret lret lret lret pop fcmovnu bound push popf pop push cmp mov fsubrs je mov les loop (bad) jb pop push outsb and imul (bad) jnp cmpsl js pop insl imul mov arpl nop add jl jmp and aad pop daa ret lods scas cmpsb mov (bad) xchg test das loope xchg clc leave fwait loopne mov cs mov lods addr16 (bad) mov lock mov mov cmp jno mov retw test sar add adc movsb (bad) pop pushf cltd call movsl xorb in (bad) in xor into mov jg add into add push xchg xchg and push adc xchg mov dec popa (bad) cmc sbb pop xor xor popa or lret int3 push jl inc movsl lret lret lret lret lret lret lret lret lret lret lret mov lea inc sub mov mov mov je cli (bad) bound inc pop adc pop stos sub push sub imul push pop sbb mov nop push pop lcall mov insb jno loop test mov dec sbb gs data16 jg xchg pop sarl add push pop mov lock mov mov cmp jno mov retw test sar add adc movsb (bad) pop pushf cltd call movsl xorb in (bad) in xor into mov jg add into add push xchg xchg and push adc xchg mov dec popa (bad) cmc sbb pop xor xor jno pop fcmovnu bound push popf pop push cmp mov lret lret lret lret lret lret lret lret lret lret lret je mov les loop (bad) jb pop push outsb and imul (bad) jnp cmpsl js pop insl imul mov arpl nop add jl jmp and aad pop daa ret lods scas cmpsb mov (bad) xchg test das loope xchg clc leave fwait loopne mov cs mov lods addr16 (bad) mov lock mov mov cmp jno mov retw test sar add adc movsb (bad) pop pushf cltd call movsl xorb in (bad) in xor into mov jg add into add push xchg xchg and push adc xchg mov dec popa (bad) cmc sbb pop xor xor popa or lret int3 push jl inc movsl aas mov lea inc sub mov mov mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor sar (bad) bound inc pop adc pop stos sub push sub imul push pop sbb mov nop push pop lcall mov insb jno loop test mov dec sbb gs data16 jg xchg pop sarl add push pop mov lock mov mov cmp jno mov retw test sar add adc movsb (bad) pop pushf cltd call movsl xorb in (bad) in xor into mov jg add into add push xchg xchg and push adc xchg mov dec popa (bad) cmc sbb pop xor xor jno pop fcmovnu bound push popf pop push cmp mov fsubrs je mov les loop (bad) jb pop push outsb and imul xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor cmp inc (bad) jnp cmpsl js pop insl imul mov arpl nop add jl jmp and aad pop daa ret lods scas cmpsb mov (bad) xchg test das loope xchg clc leave fwait loopne mov cs mov lods addr16 (bad) mov lock mov mov cmp jno mov retw test sar add adc movsb (bad) pop pushf cltd call movsl xorb in (bad) in xor into mov jg add into add push xchg xchg and push adc xchg mov dec popa (bad) cmc sbb pop xor xor popa or lret int3 push jl inc movsl aas mov lea inc sub mov mov mov je cli (bad) bound inc pop adc pop stos sub push sub lret lret lret lret lret lret lret lret lret lret imul push pop sbb mov nop push pop lcall mov insb jno loop test mov dec sbb gs data16 jg xchg pop sarl add push pop mov lock mov mov cmp jno mov retw test sar add adc movsb (bad) pop pushf cltd call movsl xorb in (bad) in xor into mov jg add into add push xchg xchg and push adc xchg mov dec popa (bad) cmc sbb pop xor xor jno pop fcmovnu bound push popf pop push cmp mov fsubrs je mov les loop (bad) jb pop push outsb and imul (bad) jnp cmpsl js pop insl imul xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor movsl push mov arpl nop add jl jmp and aad pop daa ret lods scas cmpsb mov (bad) xchg test das loope xchg clc leave fwait loopne mov cs mov lods addr16 (bad) mov lock mov mov cmp jno mov retw test sar add adc movsb (bad) pop pushf cltd call movsl xorb in (bad) in xor into mov jg add into add push xchg xchg and push adc xchg mov dec popa (bad) cmc sbb pop xor xor popa or lret int3 push jl inc movsl aas mov lea inc sub mov mov mov je cli (bad) bound inc pop adc pop stos sub push sub imul push pop sbb mov nop push pop lcall xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor aad fistp insb jno loop test mov dec sbb gs data16 jg xchg pop sarl add push pop mov lock mov mov cmp jno mov retw test sar add adc movsb (bad) pop pushf cltd call movsl xorb in (bad) in xor into mov jg add into add push xchg xchg and push adc xchg mov dec popa (bad) cmc sbb pop xor xor jno pop fcmovnu bound push popf pop push cmp mov fsubrs je mov les loop (bad) jb pop push outsb and imul (bad) jnp cmpsl js pop insl imul mov arpl nop add jl jmp and lret lret lret lret lret lret lret lret lret lret enter xor ret lods scas cmpsb mov (bad) xchg test das loope xchg clc leave fwait loopne mov cs mov lods addr16 (bad) mov lock mov mov cmp jno mov retw test sar add adc movsb (bad) pop pushf cltd call movsl xorb in (bad) in xor into mov jg add into add push xchg xchg and push adc xchg mov dec popa (bad) cmc sbb pop xor xor popa or lret int3 push jl inc movsl aas mov lea inc sub mov mov mov je cli (bad) bound inc pop adc pop stos sub push sub imul push pop sbb mov nop push pop lcall mov insb jno loop test mov dec sbb xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor xchg scas gs data16 jg xchg pop sarl add push pop mov lock mov mov cmp jno mov retw test sar add adc movsb (bad) pop pushf cltd call movsl xorb in (bad) in xor into mov jg add into add push xchg xchg and push adc xchg mov dec popa (bad) cmc sbb pop xor xor jno pop fcmovnu bound push popf pop push cmp mov fsubrs je mov les loop (bad) jb pop push outsb and imul (bad) jnp cmpsl js pop insl imul mov arpl nop add jl jmp and aad pop daa ret lods scas cmpsb mov (bad) xchg test lret lret lret lret lret lret lret lret lret lret lret lret das loope xchg clc leave fwait loopne mov cs mov lods addr16 (bad) mov lock mov mov cmp jno mov retw test sar add adc movsb (bad) pop pushf cltd call movsl xorb in (bad) in xor into mov jg add into add push xchg xchg and push adc xchg mov dec popa (bad) cmc sbb pop xor xor popa or lret int3 push jl inc movsl aas mov lea inc sub mov mov mov je cli (bad) bound inc pop adc pop stos sub push sub imul push pop sbb mov nop push pop lcall mov insb jno loop test mov dec sbb gs data16 jg xchg pop sarl add pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop lods insl sub (bad) mov lock mov mov cmp jno mov retw test sar add adc movsb (bad) pop pushf cltd call movsl xorb in (bad) in xor into mov jg add into add push xchg xchg and push adc xchg mov dec popa (bad) cmc sbb pop xor xor jno pop fcmovnu bound push popf pop push cmp mov fsubrs je mov les loop (bad) jb pop push outsb and imul (bad) jnp cmpsl js pop insl imul mov arpl nop add jl jmp and aad pop movnti or mov das popa int3 xchg clc leave fwait loopne mov cs mov lods addr16 mov lret lret lret lret lret lret lret lret lret lret lret xchg jo push mov mov cmp jno mov sub test mov adc movsb (bad) pop pushf cltd in cli or pop movsl xorl dec xor into mov jg add into add push xchg dec xchg and push adc mov dec popa (bad) cmc shrb pop xor xor pusha or iret int3 push movsb mov jge lret movsb dec test out mov mov sar (bad) bound or stos sub aaa into les les jg pop nopl or test pop lcall mov insb jo cli adc leave and sbb gs data16 jg xchg pop sarl add push pop mov lock mov mov cmp jno pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop mov test test xchg cmc aad mov pop movsl xorb in (bad) in xor into mov jg add into add push xchg xchg and push adc xchg mov dec popa (bad) cmc sbb pop xor xor or movsl jmp and test dec mov ljmp mov les loop (bad) jb pop push outsb and imul (bad) jnp cmpsl js pop insl imul mov arpl nop add or fld pop mov cs ljmp xor push test and xchg movsb in out out out adc cs mov lods addr16 (bad) mov lock mov mov cmp jno mov retw test ror pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor add adc in mov fdivl subl push int3 jge jecxz cmp push pop enter mov stc jno mov xor xor push jb fidivr dec sub mov dec popa (bad) cmc sbb pop xor xor popa or sahf cltd sub out aas out aaa cmpsb and and jg jle je in xchg xchg pop test test push sbb and dec inc cltd stos and (bad) js xchg jp insb scas and inc jnp scas insb lock cmc push pop lcall mov insb jno loop rcrb es cmpxchg8b cmpsb or stos or xlat jo push mov lret lahf in mov (bad) add icebp jb test lcall cmp das divl cmp jne daa mov mov jne (bad) mov cli or lret lret lret lret lret lret lret lret lret lret lret lret xorb in (bad) in xor push addl ja pop in xchg sbb (bad) jge dec in nop mov scas orl jge iret int sbb pop mov inc add ret sub ljmp adc gs out insb xor aas mov fsubrs je mov into inc push out sub inc inc cld push pop popa sub mov ss movsl pop xchg push xchg cwtl repnz inc dec cmp inc pop and aam in cmp cmp and aam es jno sbb test ret xchg cmpsl cmp mov clc leave fwait loopne mov lods xor cld bound call cmp cwtl imul mov call je fildl aaa xchg sbb clc xchg add out jecxz xchg xchg fcomi out aam fwait lret lret lret lret lret lret lret lret lret lret lret lret fsubs int3 mov dec or cli jp push hlt xor xchg cmpsl lea repz xor sub pop out jnp (bad) xchg xchg je or fcom jle subl addr16 fstl lret push push mov mov test xor bnd cmpl (bad) loope xchg xchg js loop mov xor pop jnp sbb pushf and push das jge sub lds jp mov push and dec mov mov lock mov dec mov dec add mov movaps in add rorl retw test push clc and pop in int dec xchg iret sub (bad) mov out push cmp repnz xchg lcall (bad) jns pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor sbb pushf cs rcr push mov inc jmp lret pop in xchg stos sbb inc sub adc sub in cmpl (bad) jno pop fcmovnu lods add xchg add negl arpl cmc xchg jp movsb cmc inc cmp inc (bad) dec fs ja lods adc lahf jae je movsl leave repnz outsl js das mov gs outsl mov sbbb daa add cmpl aaa enter xor or push popf jae inc dec mov mov add jb sub in inc inc jp dec cmp bound mov mov jne sub dec cmp outsl shrb cmpsb (bad) repz xlat add cltd push pop sub mov xor inc dec lds lret or mov mov mov sub or xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor shrb adc xchg mov jno les mov cmpsl or adc mov sub ljmp mov movl insl test popf push sbb xchg lods xchg sbb jmp lods dec outsb mov clc pop mov cs push sub mov je ficomp sub inc jns fucomp pop rorb mov sbb fcmove mov mov xchg mov repz bound (bad) dec dec imul adc insl sub or add mov inc insl std andb jnp lret shl xchg repz sub add xor pop xchg push cmc pop xor or and push xlat add sbb jae push mov push or sahf ret jl dec push mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor subl (bad) mov jno xor sbb mov addr16 cli mov enter div cltd das mov mov mov cmp clc gs xchg lods pop fs inc or (bad) pop jl outsl sub mov mov add fdivrl add jle sub mov pop dec add ljmp pushf addr16 xchg cmp cmp sub testb (bad) fs movsb fadd mov push push jmp stc pusha push call lea test data16 sahf sarb jno adc subb xchg test jo sti sbb test xchg push xor pop lods jg xlat out (bad) test push (bad) fdivs je loop jbe cmp xchg int les dec mov ret add outsb icebp fdivp pop je imul pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop pop push mov loope sbb data16 pop xor xor pusha pop xor out push lods xchg push add sub int test femms out into mov (bad) pusha addr16 jg popa or jns pop sbb jnp mov sub cwtl pushf rorl fucomi repnz outsl cmp inc mov jo jl sahf xchg jecxz pushf js flds addr16 loopw mov jl adc fnsave shld push clc xchg imul sub or jne add and out call push cmp adc repnz xchg aas mov sbb js ss call jb sub push out inc pushf mov adc push xor add ljmp ja mov nop nop mov loop pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor clc inc add sti add les test hlt ja push cli inc into and sub or adc pusha or add push lret fldenv inc mov ja mov sbb inc push mov adc les sbb test inc test sub jno js cmp out push pushf repnz sti int outsl negb xchg lods jmp or dec call test lret mov mov lods addr16 (bad) mov stos sbb ss ficomp pcmpgtd dec roll jmp leave pop (bad) out xchg or (bad) mov xlat add pop mov gs rorb sbb iret pop inc push bnd xor repz std cmc popf loopne les adc sbb pop xor xor in (bad) jo neg push lret lret lret lret lret lret lret lret lret lret lret movsb lret gs aaa lcall ret (bad) xor dec ret sti roll adc jecxz cmc shl and jmp mov in mov divb lea nop push pop lcall mov insb jno loop test jl inc cmpsl fisttpll cs cmc outsl in fisub imul scas add dec jne jge and aas pop inc xor mov lcall arpl mov into arpl sub (bad) movsb (bad) pop pushf cltd call movsl xorb in (bad) in xor popf fadds sbb xchg aad ds inc in push mov dec push out sahf imul xchg xchg fwait popa and mov or bound lret daa dec hlt stos (bad) (bad) outsb jbe xchg (bad) jo in mov xor cmpsl lds popf pop push cmp lret lret lret lret lret lret lret lret lret lret lret lret mov fsubrs je mov icebp push mov adc adc mov adc mov cmpsl js pop insl imul mov sbb jmp push scas lds out iret xor inc and test xor jbe (bad) xchg test das loope xchg clc leave fwait loopne xchg xchg push push in adc imul data16 pop in mov inc jno mov retw test sar add adc movsb (bad) pop jne vmwrite scas inc jg sub iret lcall addb (bad) mov out xor xchg and and pop pop mov repz das or pop sbb movsb mov jbe roll sub lret int3 push jl inc movsl aas mov lea inc sub and dec xchg ljmp pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor jne mov bound inc pop adc pop stos sub push sub imul push pop test cs fisub jne sbb and sbb loop test mov dec sbb gs data16 jg xchg pop sarl add push pop mov lock lods mov lods mov jbe mov sbb and test sar emms adc cmpsl inc pop pushf cwtl push movsl xorb in xlat insb xor into mov (bad) jns test dec add push xchg xchg and push adc xchg mov dec popa (bad) cmc sbb pop xor roll ret (bad) jno mov lret test mov loopne loope (bad) insl test pop mov push imul add mov cmpsb popf jge mov enter xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor (bad) dec mov test out movsb movsl gs fsubrl daa mov xor (bad) es mov mov mov loope fsubr jb out fwait jl dec sub add mov leave cmp outsb sbb pop cmpsb lahf add sbb fnsave movsl enter or adc pop lods clc cli xor add cmp insl fwait out xor xchg cmpsb rcrl std push pop loop mov int3 or xchg into mov and mov and arpl push daa pop mov sub pop out imul fstl add mov mov popa push mov cli pop pushf lds lahf sbb mov fstps les lods lods lcall push faddp test push xor jno or daa les push out addb lret lret lret lret lret lret lret lret lret lret lret lret adc pop sbb in jae adc mov xor pop or inc cmp dec ss xchg push in sbb popf fdivrl dec cwtl jl (bad) jno mov fcomp sahf iret lock push stc lret push imul arpl shll in sub sbb inc repnz data16 mov pop les mov mov in popa (bad) ftst dec (bad) in xor into mov addr16 movsb (bad) mov mov fistpll sbb push cmp cmp loope jno adc sub scas jo push push outsb jl pusha insl ret xor cmp lcall dec pop jl jbe sbb jmp shr mov incl mov sbb adc push cmp jp ret push and pop lahf nop aas or aas sbb xchg and jmp pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor test inc in and and add (bad) mov lds mov fwait je jg in jmp idivb adc dec lret or and xor inc dec push pop popa push jp mov mov loop repnz add adc add xor inc dec test mov loopne icebp stc add adc and xor inc dec push pop popa imul mov lret loop repnz add adc sub push pop gs jne xchg mov (bad) into (bad) (bad) out idiv pop movhps daa das aaa aas inc dec push pop outsl ja xchg mov loope icebp cli add adc and xor inc dec push pop arpl jnp mov (bad) int3 aam in cmc std add cs dec push pop outsl ja mov mov loope icebp stc add adc and xor inc lret lret lret lret lret lret lret lret lret lret lret lret lret pop bound jp mov mov in hlt cld add adc and xor inc dec push pop gs jne test mov (bad) into (bad) fsubp out idiv push push pop pop daa das aaa aas inc push pop pusha add jp mov mov in hlt cld add adc cmp data16 jbe xchg mov (bad) iret xlat (bad) out idiv or sbb sub cmp push pop popa imul mov lret loop repz add adc and xor inc dec push pop fs je test mov out idiv push push push pop daa das aaa aas inc dec push pop outsl ja xchg mov loopne icebp stc add adc and xor inc dec push pop arpl jnp mov mov in cmc std add sub push pop data16 jbe xchg pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor scas mov enter call adc and xor inc dec push pop popa imul mov lret jecxz repz add adc and xor inc dec push pop gs jne jle mov mov out clc add adc and xor inc dec push pop popa imul mov leave rcr loop repz add adc and xor inc dec push pop fs je test mov out idiv push push push push daa das aaa aas inc dec push pop outsl ja mov mov loope repnz add adc and xor inc dec push pop arpl jnp mov (bad) int3 aam in hlt std add cs dec push pop outsl ja xchg mov enter call adc and xor inc dec push pop popa imul mov lret aam in hlt cld add lret lret lret lret lret lret lret lret lret lret lret and dec push pop gs jne test mov (bad) into (bad) fsubp out idiv pop movhps daa xor inc dec push pop popa imul fwait mov int3 aam in hlt cld add adc and xor inc dec push pop gs jne test mov (bad) into (bad) fucomip lock add adc and xor inc dec push pop popa imul mov lret jecxz repz add adc and xor inc dec push pop fs jne xchg mov (bad) into (bad) fsubp out idiv pop movhps daa das aaa aas dec push pop pusha push nop cltd mov leave rcr loop repnz add adc and xor inc dec push pop fs je test mov in cmc std add cs dec push pop outsl ja xchg mov loope icebp stc add adc and xor inc dec push pop bound lret lret lret lret lret lret lret lret lret lret lret (bad) mov mov jecxz repz add sbb sub cmp gs jne test mov ror fsub call adc and xor inc dec push pop bound jp mov mov in hlt cld add adc and dec push pop outsb jbe xchg mov (bad) into (bad) (bad) out idiv pop movhps daa das cmp push pop popa imul mov lret rcr jecxz repz add adc and xor inc dec push pop fs jne test mov vpmullw in idiv push push push push daa das aaa aas inc dec push pop outsl js mov mov loope icebp stc add adc and xor inc dec push pop arpl jnp mov (bad) int3 aam in cmc std add sub push pop data16 jbe xchg mov (bad) into (bad) lret lret lret lret lret lret lret lret lret lret fsubp out idiv push push push pop daa das aaa aas inc push pop pusha push nop cwtl mov ret (bad) ljmp and xor inc dec push pop fs je test mov out idiv push push pop pop daa das aaa aas inc dec push pop outsl ja xchg mov loope icebp stc add adc and xor inc dec push pop arpl test mov in cmc std add cs dec push pop data16 jbe xchg mov (bad) iret xlat loopne icebp stc add adc and xor inc dec push pop bound jp mov mov in hlt cld add adc cmp data16 ja xchg mov enter call adc and xor inc dec push pop popa imul mov lret jecxz repz add sbb lret lret lret lret lret lret lret lret lret lret lret lret dec push pop data16 jbe xchg mov movl icebp stc add adc and xor inc dec push pop popa imul mov lret rcr in hlt cld add adc and dec push pop gs jne test mov (bad) into (bad) (bad) out idiv pop movhps daa das cmp push pop popa imul mov lret jecxz repz add adc and xor inc dec push pop fs je test mov (bad) (bad) out idiv pop nop/reserved sub cmp push pop pusha push xchg cltd mov leave rcr loope icebp cli add adc and xor inc dec push pop arpl test mov in idiv push push push push es dec push pop outsl ja xchg mov (bad) rcr loopne lock add adc and xor inc dec push pop bound jp mov xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor stos mov ret lret aam add in cmc incb push push push es dec push pop outsl ja xchg mov loope icebp stc add adc and xor inc dec push pop bound jp mov mov in hlt cld add adc and dec push pop data16 jbe xchg mov (bad) iret xlat loopne lock add adc and xor inc dec push pop popa imul mov lret rcr jecxz hlt cld add adc and xor inc dec push pop gs jne test mov (bad) into (bad) fsubp out idiv push push push push daa das aaa aas inc push pop pusha push nop cwtl mov leave rcr loope icebp stc add adc and xor inc dec push pop arpl jnp mov (bad) int3 aam in cmc std add sub push pop data16 jbe xchg mov (bad) iret xlat (bad) out add add pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop or sbb sub cmp push pop bound jnp mov mov in hlt std add sub push pop gs jbe xchg mov (bad) iret xlat (bad) out idiv pop adc and xor inc dec push pop popa imul mov lret loop repnz add adc and xor inc dec push pop fs je test mov out idiv push movhps daa das aaa aas inc dec push pop outsl ja mov mov loope icebp stc add adc and xor inc dec push pop arpl jnp mov (bad) int3 aam in cmc std add sub push pop data16 jbe xchg mov (bad) rcr loopne lock add adc and xor inc dec push pop bound jp mov mov jecxz repz add or xor pop lretw lret lret lret lret lret lret lret lret lret lret lret outsl ja xchg mov (bad) rcr loopne lock add adc and xor inc dec push pop popa imul mov lret loop repnz add adc and xor inc dec push pop gs jne test mov (bad) into (bad) fsubp out idiv push movhps daa das aaa aas inc dec pop pusha push xchg cltd mov leave rcr loope icebp cli add adc and xor inc dec push pop arpl jnp mov mov in hlt cld add adc ds dec push pop data16 jbe xchg mov (bad) iret xlat (bad) out clc add adc and xor inc dec push pop popa imul mov lret rcr jecxz hlt cld add adc and xor pop gs jne test mov (bad) into (bad) fsubp out idiv push push pop add sub cmp push pop bound jp mov mov xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor fninit jmp sti add adc and cmp dec push pop fs je test mov out idiv push push push push daa das aaa aas inc dec push pop outsl js mov mov loopne lock add adc and xor inc dec push pop popa imul mov lret rcr in hlt cld add adc and xor pop gs jne xchg mov (bad) into (bad) (bad) out idiv pop adc and xor inc dec push pop popa imul mov lret loop repnz add adc and xor inc dec push pop arpl jl mov vpmullw out idiv push push push push es dec push pop data16 jbe xchg mov (bad) iret xlat loopne lock add adc and add cmp pop fs je test mov in idiv push push push push es lret lret lret lret lret lret lret lret lret lret lret aaa aas inc dec push pop outsl ja mov mov loop repnz add adc and xor inc dec push pop arpl jnp mov mov in hlt cld add adc and xor pop data16 jbe xchg mov (bad) iret xlat (bad) out clc add adc and xor inc dec push pop pusha imul mov leave rcr loop repnz add adc and xor inc dec push pop arpl jnp mov mov in cmc std add sub push pop gs jne test mov (bad) iret xlat (bad) out idiv pop movhps daa das aaa aas dec push pop pusha push xchg cltd mov lret loop repnz add adc and xor add push pop outsl ja xchg mov (bad) iret fsub call adc and xor inc dec push pop popa imul pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor cltd mov lret rcr jecxz repz add sbb sub cmp dec push pop gs jne test mov vpmullw out idiv push push push push es inc push pop pusha push nop cwtl mov leave rcr loope icebp stc add adc and xor inc dec push pop bound jp mov mov in hlt cld add adc and dec push pop gs jne test mov (bad) into (bad) fsubp out idiv pop movhps daa das aaa aas inc dec push pop push xchg cltd mov leave rcr loop repnz add adc and xor inc dec push pop arpl jnp mov mov in cmc std add cs aas inc dec add push xchg cltd mov leave rcr loope repnz add adc and xor inc dec push pop arpl jnp mov mov in cmc lret lret lret lret lret lret lret lret lret lret lret std add cs dec push pop data16 jbe xchg mov (bad) iret xlat (bad) lock add adc and xor inc dec push pop bound jp mov mov jecxz repz add adc and cmp dec push pop fs je test mov out idiv push push push pop daa das aaa aas inc dec push pop outsl js mov mov loope icebp stc add adc and xor inc dec push pop arpl test call das aaa aas dec add bound jnp mov mov out idiv push push push pop daa das inc push arpl jl mov (bad) int3 aam in hlt cld add sub push pop data16 jbe xchg mov loopne icebp cli add adc and xor inc dec push pop arpl test mov lret lret lret lret lret lret lret lret lret lret int fucom in cmc std push push push push es aas inc dec push pop addr16 orb mov loop repnz add adc and xor inc dec push pop arpl jl mov (bad) int3 aam in cmc std add cs dec push pop outsl ja xchg mov enter call adc and xor inc dec push pop popa imul mov lret rcr jecxz repz add adc and xor dec push pop fs je add scas mov (bad) iret xlat (bad) out idiv or sbb sub cmp push pop bound jp mov mov jecxz repz add adc and xor inc dec push pop gs jne test mov (bad) into (bad) fsubp out idiv pop adc and xor inc dec push pop pusha push xchg cltd mov lret loop repnz add adc and lret lret lret lret lret lret lret lret lret lret lret lret xor inc dec push pop fs je test mov vpmullw out idiv push push push push es dec push pop outsl ja xchg mov (bad) iret xlat loopne lock add adc and xor inc dec push pop bound jnp mov mov in hlt cld add adc and dec push pop outsb jbe xchg mov enter call adc and xor inc dec push pop bound jp mov mov (bad) int3 aam in cmc std add sub push pop outsl ja xchg mov loopne lock add adc and xor inc dec push pop bound jp mov mov in cmc std add sub push pop data16 jbe xchg mov (bad) iret xlat (bad) lock add adc and xor inc dec push pop popa push jp mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop fwait mov lret rcr jecxz hlt cld add adc and xor inc dec push pop gs jne test mov vpmullw out idiv pop movhps daa das cmp push pop pusha imul mov lret loop repnz add adc and xor inc dec push pop arpl jnp mov (bad) int3 aam in cmc std add sub push pop data16 ja xchg mov ror fabs jmp adc and xor inc dec push pop arpl test mov in cmc std add cs dec push pop data16 jbe xchg mov enter call and inc dec pop popa imul mov lret loop repnz add adc and xor inc dec push pop arpl jl lea mov in idiv push push push push lret lret lret lret lret lret lret lret lret lret lret cs dec push pop outsl ja xchg mov (bad) iret fsub call adc and xor inc dec push pop bound jp mov mov jecxz repz add adc sub cmp dec push pop gs jne test mov (bad) iret xlat loopne lock add adc and xor inc dec push pop popa imul mov lret loop in hlt cld add adc and xor pop data16 jbe xchg mov (bad) iret xlat loopne lock add adc and xor inc dec push pop popa imul mov lret jecxz hlt cld add adc and xor inc dec push pop gs jne test mov (bad) iret xlat (bad) out idiv pop movhps sub cmp push pop popa push jp mov mov jecxz repz add adc and xor dec push pop fs je test pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor mov mov out idiv pop movhps daa xor inc dec push pop pusha imul mov lret loop repnz add adc and xor inc dec push pop arpl jnp mov vpmullw in cmc std add cs dec push pop outsl ja xchg mov loopne lock add or sbb sub inc dec push pop fs jne test mov (bad) into (bad) fsubp out idiv pop movhps daa das cmp push pop pusha push nop cwtl mov lret loop repnz add adc and xor inc dec push pop arpl jnp mov mov jecxz repz add adc and xor inc dec push pop gs jne test mov vpmullw in cmc std push push push push es dec push pop data16 jbe xchg mov (bad) into (bad) fsubp lret lret lret lret lret lret lret lret lret lret out idiv pop movhps daa das aaa aas dec push pop pusha push nop cwtl mov enter call adc and xor inc dec push pop pusha push xchg cltd mov leave rcr loope icebp stc add adc and xor inc dec push pop bound jp mov mov loop repnz add or xor pop outsb jbe xchg mov (bad) into (bad) fsubp out idiv push push pop pop daa das aaa aas inc dec pop pusha push xchg cltd mov lret loop repz add adc and xor inc dec push pop fs je test mov vpmullw in cmc std add cs aas inc dec push pop push nop cwtl mov enter jmp adc and xor inc dec push pop bound jp mov mov in cmc std add sub pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop data16 jbe xchg mov (bad) into xlat (bad) out idiv pop adc and xor inc dec push pop bound jp mov mov jecxz hlt cld add adc and xor inc dec push pop gs jne test mov (bad) into (bad) (bad) out clc add adc add sub cmp push pop arpl jnp mov mov in cmc std add cs dec push pop data16 jbe xchg mov loopne icebp stc add adc and xor inc dec push pop arpl jnp mov mov in cmc std add cs dec push pop outsl ja xchg mov loopne icebp stc add adc and xor inc dec push pop bound jp mov mov in cmc std add sub push pop gs jbe xchg lret lret lret lret lret lret lret lret lret lret lret lret mov out idiv pop nop/reserved sub cmp push pop bound jp mov mov jecxz hlt cld add adc and xor inc dec push pop gs jne test mov (bad) into (bad) fsubp out testl sub add inc dec push pop bound jnp mov mov in hlt cld add adc and xor pop gs jne xchg mov (bad) iret xlat (bad) out idiv or sbb sub cmp push pop pusha push xchg cltd mov leave rcr loop repnz add adc sub cmp dec push pop gs jne test mov (bad) into xlat (bad) out idiv pop movhps daa xor inc dec push pop pusha push nop cwtl mov lret loop repz add adc and xor inc dec push pop fs je test mov in idiv push push push lret lret lret lret lret lret lret lret lret lret lret lret push es inc dec push pop outsl js mov mov loope icebp cli add adc and xor inc dec push pop bound jp mov mov in hlt cld add adc and add pop outsl ja xchg mov loopne lock add adc and xor inc dec push pop bound jnp mov (bad) int3 aam in cmc std add sub push pop data16 ja xchg mov enter call adc and xor inc dec push pop bound jnp mov mov in hlt std add sub push pop data16 jbe xchg mov enter call adc and xor inc dec push pop popa imul mov lret rcr jecxz repz add adc and xor pop gs jne lret lret lret lret lret lret lret lret lret lret mov mov out idiv pop movhps sub cmp push pop pusha push xchg cltd mov lret jecxz repz add adc and xor dec push pop add jbe xchg mov (bad) iret xlat (bad) lock add adc and xor inc dec push pop bound jnp mov mov in hlt cld add adc and dec push pop data16 jbe xchg mov (bad) iret xlat (bad) lock add adc and xor inc dec push pop pusha push xchg cltd mov leave rcr loope icebp stc add adc and xor inc dec push pop popa imul mov lret rcr in hlt cld add adc and xor pop gs jne test mov (bad) into (bad) fsubp out idiv pop nop/reserved sub cmp push pop popa push jp mov mov jecxz pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor jmp sti add adc and xor inc dec push pop fs je test mov (bad) into (bad) fsubp out idiv pop movhps daa das cmp push pop pusha push mov mov jecxz repz add adc and xor inc dec push pop data16 jbe xchg mov (bad) iret xlat (bad) out idiv pop adc and xor inc dec push pop popa imul mov lret jecxz hlt cld add adc and xor inc dec push pop fs jne test mov vpmullw in cmc std add sub push pop outsb jbe xchg mov (bad) iret xlat (bad) out idiv pop movhps daa das aaa aas inc dec pop pusha push nop cltd mov leave rcr loope repnz add adc and xor inc dec push pop fs je test mov in idiv push push push push es lret lret lret lret lret lret lret lret lret lret push pop outsl ja xchg mov loope icebp cli add adc and xor inc dec push pop arpl jnp add mov vpmullw out idiv push movhps daa xor inc dec push pop pusha push xchg cltd mov lret loop repz add adc and xor inc dec push pop fs jne test mov (bad) iret xlat (bad) out idiv pop movhps daa xor inc dec push pop pusha push nop cwtl mov leave rcr loope icebp stc add adc and xor inc dec push pop bound jp mov mov in hlt cld add adc cmp data16 jbe xchg mov (bad) iret xlat (bad) lock add adc and xor inc dec push pop bound jp mov mov jecxz repz add adc and xor inc dec push pop gs jne xchg lret lret lret lret lret lret lret lret lret lret lret lret (bad) into (bad) fsubp out idiv pop movhps daa das aaa aas inc push pop pusha push nop cltd add lret jecxz repz add adc sub cmp gs jne test mov (bad) iret xlat (bad) out idiv pop movhps daa xor inc dec push pop pusha push nop cwtl mov lret loop repnz add adc and xor inc dec push pop arpl test mov in cmc std add sub push pop outsl ja xchg mov loope icebp stc add adc and xor inc dec push pop bound jp mov mov in cmc std add sub push pop data16 jbe xchg mov (bad) iret xlat (bad) out idiv pop adc and xor inc dec push pop pusha push xchg lcall rcr jecxz repz add adc pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop sbb sub cmp push pop fs je test mov (bad) iret xlat (bad) out idiv or sbb sub cmp push pop popa imul mov lret jecxz repz add adc and xor inc dec push pop fs je test mov out idiv pop movhps daa das cmp push pop pusha push xchg cltd mov lret loop repnz add adc and xor inc dec push pop gs jne test mov (bad) into (bad) fsubp out idiv pop movhps daa das aaa aas inc dec push pusha push nop cwtl mov lret loop repnz add adc and xor inc dec push pop arpl jl mov (bad) int3 aam in cmc std add sub push pop outsw ja xchg mov loopne lock add adc and xor inc dec push pop bound jp pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop (bad) mov mov fucom in idiv push movhps daa das aaa aas inc push pop pusha push nop cwtl mov leave rcr loop repnz add adc and xor inc dec push pop fs je test mov (bad) into (bad) fsubp out idiv push push push push es inc dec push pop outsl js mov mov loope icebp stc add adc and xor inc dec push pop fs je test mov in cmc std add sub push pop gs jne test mov (bad) into (bad) (bad) out idiv pop nop/reserved sub cmp push pop pusha push xchg cltd mov lret loop repnz add adc and xor inc dec push pop gs jne test mov (bad) into (bad) fsubp out idiv pop movhps daa das aaa aas dec push pop pusha push nop cwtl mov leave rcr add pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor in hlt cld add adc cmp data16 jbe xchg mov (bad) into (bad) fsubp out idiv push push push push es dec push pop data16 ja xchg mov loopne icebp stc add adc and xor inc dec push pop bound jp mov mov in hlt cld add adc ds dec push pop data16 jbe xchg mov (bad) into (bad) fsubp out idiv push push push push es dec push pop outsw ja xchg mov loope icebp stc add adc and xor inc dec push pop popa imul mov leave rcr loope icebp stc add adc and xor inc dec push pop arpl jnp mov (bad) int3 aam in hlt cld add adc and xor inc dec push pop fs je test mov out out clc add adc and xor lret lret lret lret lret lret lret lret lret lret lret dec push pop popa imul mov lret rcr jecxz repz add adc sub cmp dec push pop data16 jbe xchg mov (bad) iret xlat (bad) out clc add adc and xor inc dec push pop pusha imul mov leave rcr loop repz add adc and xor inc dec push pop fs je test mov (bad) into (bad) fsubp out idiv pop movhps daa das aaa aas dec push pop pusha push xchg lcall rcr loop repz add adc and xor inc dec push pop fs jne test mov (bad) into (bad) fsubp out idiv pop movhps sub cmp push pop popa imul mov leave rcr loope icebp stc add adc and xor inc dec push pop popa imul mov lret rcr jecxz repz add cs dec push pop data16 jbe xchg xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor cmpsl scas mov (bad) iret xlat fucomip lock add adc and (bad) aad repnz and cmp push jb jle mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa jnp xchg scas mov mov fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl adc xor cmp inc dec push pop pop arpl jae jle mov stos mov mov fcomp jecxz out repz incb unpckhps and inc inc dec push push pop arpl imul nop xchg fwait mov lret lret lret lret lret lret lret lret lret lret lods mov mov (bad) in lock sti add or pop sbb sub dec dec push pop pop gs jne addb cmpsl lods mov mov fchs in lock add or sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov test vaddsubps fndisi(8087 out repnz add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add push adc pop and inc inc dec push push pop arpl jae jle mov stos mov mov fcomp jecxz out repz add and sub aaa ds dec dec push pop pop gs lret lret lret lret lret lret lret lret lret lret lret lret jne addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pusha imul addl mov aad loopne in icebp idiv add or sub xor aas inc dec push push pop pusha data16 jb jge mov stos scas mov rol rcl fsub out repnz std add push adc push and das xor push push pop bound jb jge mov stos mov mov xlat fucom call add unpcklps and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl je jg add cmpsl lods mov mov (bad) in lock sti add or pop sbb daa sub xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor inc dec dec push pop pop imul addl mov aad loopne in icebp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov test vaddsubps fndisi(8087 out repnz std add push adc pop and das xor push push pop bound jb jge mov stos mov mov xlat fsub call add unpckhps and inc inc dec push pop pop arpl jae jle mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out repz incb unpcklps sbb daa sub cmp pop pop fs jne addb cmpsb lods mov mov fcomp jecxz out hlt stc dec pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor add unpckhps and inc inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub ss inc dec push pop pop arpl je addb cmpsb lods mov mov fcomp in out hlt cli incl and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add or push sbb daa sub aaa cmp pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop arpl je addb add (bad) lret fneni(8087 out icebp idiv add or pop sbb cmp inc dec dec push pop pop fs jne addb cmpsl lods mov mov lret lret lret lret lret lret lret lret lret lret lret aam (bad) ljmp adc sbb sub dec dec push pop pop gs jne addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aam loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb sub dec dec push pop pop imul addl mov aam (bad) ljmp adc sbb xor inc inc dec push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out icebp idiv add or sub xor push push pop popa insl jb jge mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor stos mov mov (bad) fsub out repnz std add push adc pop and das cmp dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp inc dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out hlt cli incl and sub aaa cmp pop pop arpl je addb cmpsl lods mov mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb daa sub dec dec lret lret lret lret lret lret lret lret lret lret lret lret lret pop imul nop xchg fwait mov mov (bad) in out cmc cli add and sub aaa cmp pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt cli incl and sub ss inc dec push push pop bound jae jle mov stos scas mov rol rcl fsub call add unpcklps and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom jmp add unpckhps and sub ss inc add pop pop imul xchg xchg pushf mov mov fcomp jecxz out hlt stc add and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc sti add or lret lret lret lret lret lret lret lret lret lret lret lret lret and sub dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb es dec dec push pop pop fs jne addb cmpsb lods mov mov fcomp jecxz out hlt stc incl unpckhps and inc inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out repz incb unpckhps and inc inc dec push push pop arpl jae jg mov stos mov mov add fsubp jmp add and sub aaa cmp pop pop imul xchg xchg pushf mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop gs jne addb test mov mov lret lret lret lret lret lret lret lret lret lret fnop in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne in icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl mov test vaddsubps fsub out repnz std add push adc pop and das xor push push pop bound jb jge mov stos mov mov xlat fucom call add unpckhps and inc inc dec push push pop bound imul nop xchg fwait mov mov fcomp jecxz out hlt cli incl and sub aaa cmp dec dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc sti add or pop sbb daa sub dec dec push pop pop fs jne addb pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor mov fcmovu in lock sti add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and xor push push pop bound jae jle mov stos mov mov xlat fucom call incl and sub aaa cmp inc dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop arpl jne addb cmpsl lods mov mov fcomp jecxz out hlt stc incl unpckhps and inc inc dec push push pop (bad) lret lret lret lret lret lret lret lret lret lret lret lret insl jae jle mov stos mov mov fcomp jecxz out repz incl unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add push adc pop and das xor push push pop popa data16 jno jl xchg test mov mov fneni(8087 out icebp idiv add or pop sbb cmp inc dec dec push pop pop fs jne add popf mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pop gs jne addl mov aam loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or lret lret lret lret lret lret lret lret lret lret lret lret lret xor aas inc dec dec push pop pusha imul (bad) xchg test mov mov fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov test (bad) aad loope in icebp idiv add or sub xor push push pop popa data16 jno jge mov test vaddsubps fndisi(8087 out icebp idiv add add adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl je jg mov stos mov mov xlat fucom call add push adc pop and das xor push push pop popa insl jb jge mov stos mov mov (bad) fsub out pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor in repnz std add push adc pop and das xor push push pop popa insl jb jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and inc inc dec push push pop arpl jae jg mov cmpsl lods mov mov (bad) in out hlt cli incl and sub cmp dec push push pop bound jb jge mov test (bad) lret rcl fsub out repnz add push adc push and das xor push push pop popa insb jb jge mov test (bad) (bad) fsub out repnz add or sub xor aas inc dec dec push pop pusha imul addl xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop lods mov mov fnop out icebp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov rcr fsubp jmp push or push sbb daa sub cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add add sub xor ds dec dec push pop pusha imul addl mov rcr fsubp jmp add and sub aaa cmp pop pop arpl je jg mov lods mov mov fcomp jecxz out repz incb unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub out repnz std add push adc pop and das xor push push pop bound pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor insl jae jle mov stos mov mov xlat fsub out repnz std add push adc pop and xor push push pop bound jae jle mov stos mov mov xlat fsub out repnz incb or adc pop and das xor push push pop popa insb jb jle mov add (bad) int fcomp jecxz out hlt stc incl unpckhps and sub ss inc dec push pop pop arpl jae jle mov stos mov mov xlat fucom call add unpcklps and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and inc inc dec push push pop bound jb jge mov test (bad) (bad) fsub out repnz add or sub pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor xor inc inc dec push push pop popa data16 jno jl xchg test (bad) lret fndisi(8087 out icebp idiv add or sub xor ds dec dec push pop pop gs jne addb cmpsl lods mov mov fcomp jecxz out cmc cli add and sub xor ds dec dec push pop pop fs jne addb cmpsb lods mov mov fcomp jecxz out repz incl adc xor cmp inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out repz incb movhps and sub aaa cmp dec dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul nop xchg pushf mov mov fcomp jecxz lret lret lret lret lret lret lret lret lret lret hlt stc incl unpckhps and inc inc dec push pop pop arpl je jg mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl je jg mov lods mov add (bad) in out cmc cli add and sub dec dec push pop pop fs jbe addl mov rcr fsubp jmp add and sub aaa cmp pop pop arpl je jg mov lods mov mov (bad) in out hlt cli incl and sub aaa cmp dec dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt stc incl unpckhps and inc inc dec push push pop arpl jae jle mov stos lret lret lret lret lret lret lret lret lret lret mov ret rcr fucom call add unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out repz incl unpckhps and inc add push pop pop imul nop xchg fwait mov mov fcomp in out cmc cli add and sub aaa cmp pop pop imul nop xchg fwait mov mov fcomp jecxz out cmc cli add or push sbb daa sub cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out hlt cli incl and sub aaa cmp pop pop arpl je jg mov stos mov mov xlat fsub out repnz std add push adc pop and inc inc dec push push pop bound lret lret lret lret lret lret lret lret lret lret lret lret js orl stos scas mov rol rcl fsub out repnz incb or adc pop and inc inc dec push push pop arpl jae jle mov stos mov mov rcr fsubp jmp add and sub ss inc dec push pop pop imul nop xchg fwait mov mov (bad) in out hlt cli add and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop arpl je addb cmpsb lods mov mov (bad) in out cmc cli add and sub cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or push sbb daa sub lret lret lret lret lret lret lret lret lret lret lret cmp pop pop fs jne addb cmpsl lods mov mov fcmovu in lock sti add or pop sbb daa sub dec dec push pop add imul addl mov aad loope in icebp idiv add or sub xor aas inc dec push push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop pusha data16 jno jl xchg test (bad) lret fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl mov test (bad) aad loope in icebp idiv add or sub xor inc inc dec push push pop popa insb jb jge mov test (bad) lret rcl fsub out repnz lret lret lret lret lret lret lret lret lret lret std add push adc pop and xor push push pop popa insl jb jge mov stos scas mov rol rcl fsub out in repz incb unpcklps and inc inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out repz incl unpckhps and inc inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and inc inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp dec dec push pop pop arpl jne addb cmpsb lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop arpl je jg mov lods mov mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop ret enter fsubp ljmp adc sbb daa sub aaa cmp pop pop imul mov scas mov mov fnop in lock add or pop sbb daa sub dec dec push pop pop imul nop xchg fwait mov mov fcomp in out hlt cli add and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out cmc cli add and sub cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in out hlt cli add or push sbb daa sub dec dec push pop pop gs jne or xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor mov mov (bad) in lock sti add pop or sbb and cs aas inc dec push push pop popa data16 jno jl xchg test (bad) aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha data16 jno jl xchg test (bad) aad loope in icebp idiv add or sub xor inc inc dec push push pop bound jb jle mov stos mov mov xlat fsub out repnz std add push adc pop and inc inc dec push push pop arpl jae jg mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp dec dec push pop pop arpl jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub aaa cmp xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop dec push pop pop fs jne addb mov mov fneni(8087 out icebp idiv add or sub xor aas inc dec dec push pop pusha imul (bad) xchg test vaddsubps fndisi(8087 out repnz add push adc push and das xor push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out icebp idiv add or sub xor ds dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or push sbb daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in out cmc sti add or pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor adc sbb and cs aas inc dec push push pop popa data16 jno jl xchg test (bad) aad loopne in icebp idiv add push adc push and das xor aas inc dec push push pop popa data16 jno jge mov test vaddsubps fsub out repnz add push adc push and inc inc dec push push pop popa insl jb jge mov stos scas mov rol rcl fsub out repnz add or sub xor inc inc dec push push pop popa insl jb jge mov rcr in nopl cmp fs mov lods mov mov fsubp jmp idiv add unpckhps and cs inc inc dec push pop pop imul orl lods mov rol rcr fsubp ljmp adc inc dec push pop pop arpl je jg mov lret lret lret lret lret lret lret lret lret lret lret mov mov fndisi(8087 out repnz add push adc pop and inc inc dec push pop pop imul xchg xchg pushf mov mov fnop in icebp idiv add or sub xor push push pop bound jae jg mov lods mov mov (bad) in lock sti add or pop sbb cmp inc add push pop bound jae jg mov lods mov mov (bad) in lock sti add or sbb cmp inc dec push push pop popa insb jb jge mov stos mov mov fcomp in out cmc cli add or pop sbb sub dec dec push pop pusha data16 jno jge mov stos mov mov fcomp jecxz out hlt cli add and sub inc dec push push pop popa data16 lret lret lret lret lret lret lret lret lret lret lret lret jge mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp pop pop gs jbe addl mov (bad) fndisi(8087 out repnz incb or adc and inc inc dec push pop pop imul xchg xchg pushf mov mov fnop in in repnz std add unpckhps and sub aaa cmp inc dec push pop pop imul xchg xchg pushf mov mov fcmovu in lock add or sub xor push push pop bound jae jle mov lods mov mov (bad) in out cmc sti add or pop sbb sub xor aas inc dec push push pop popa insb jb jge mov stos scas mov rol roll fcomp jecxz out hlt cli add and sub lret lret lret lret lret lret lret lret lret lret lret lret dec push pop popa data16 jb jge mov stos mov mov xlat fucom call add unpckhps and sub aaa cmp dec dec push pop pop imul xchg xchg popf mov mov fndisi(8087 out icebp idiv add push adc pop and das xor push push pop arpl je jg add test mov mov fndisi(8087 out icebp idiv add push adc pop and xor push push pop bound jae jg mov lods mov mov fnop in icebp idiv add or sub xor push push pop bound jae jle mov stos mov mov (bad) in lock add or sbb cmp inc dec push push pop popa insl jb jns test cmpsb lods mov mov (bad) in icebp idiv add or pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop and cs aas inc dec push push pop bound jb jle mov stos mov mov fcomp jecxz out hlt cli add or pop sbb cmp inc dec dec push pop pusha data16 jno jge mov stos scas mov rol rcl fucom call add unpckhps and add dec dec push pop pusha imul (bad) mov stos scas mov rol rcl fsub out repz incb unpckhps and inc dec dec push pop pop fs jne addb test mov mov fneni(8087 out icebp idiv add or sub xor push push pop bound jae jg mov lods mov mov (bad) in lock add or add push and das xor push push pop bound je jg mov lods mov mov fcmovu in lock lret lret lret lret lret lret lret lret lret lret lret lret pop or sbb cmp inc dec push push pop popa insb jb jge mov stos mov mov fcomp in out hlt cli add and sub dec dec push pop pop imul addl mov rcl fucom call add and sub aaa cmp pop pop fs jne addl mov (bad) fsub out repnz incb or adc pop and inc inc dec push pop pop arpl je jg mov lods mov mov fneni(8087 out icebp idiv add or sub xor push push pop bound jae jle mov stos mov mov aam (bad) jmp idiv add or sub xor push push pop bound jae jle mov stos mov mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop rcr fsubp jmp add and sub dec dec push pop pusha data16 jno jge mov stos scas mov rol rcl fucom call add adc xor cmp pop pop add jge mov stos mov mov xlat fucom call add adc xor cmp pop pop imul addl mov (bad) fsub out repnz incb or adc and inc inc dec push pop pop imul xchg xchg pushf mov mov fneni(8087 out icebp idiv add push adc push and das xor push add arpl je addb cmpsl lods mov mov fnop in icebp idiv add or sub xor push push pop bound jae jle mov lret lret lret lret lret lret lret lret lret lret mov mov (bad) in lock add or sbb cmp inc dec push push pop popa insl jb jge mov stos mov mov fcomp in out cmc cli add add sbb cmp inc dec push push pop popa insl jb jge mov stos mov mov (bad) in out cmc sti add or pop sbb cmp inc dec dec push pop pusha data16 jno jge mov stos scas mov rol rcl fsub call add and sub aaa cmp pop pop fs jne addb test mov mov fndisi(8087 out icebp add incb or adc xor cmp pop pop fs jne addb test mov mov fndisi(8087 out repnz add or sub cmp dec push pop pop arpl je or xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor mov mov fnop in icebp idiv add or sub xor push push pop bound jae jg mov add leave iret aad loopne jmp idiv add or sub xor push push pop bound je jg mov lods mov mov (bad) in lock add or sbb cmp inc dec push push pop popa insb jb jle mov stos mov mov (bad) in out cmc cli add or pop sbb sub dec dec push pop pusha imul (bad) mov movsl stos mov mov fcomp in out cmc sti add or pop sbb sub dec dec push pop pusha data16 jno jl mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp pop lret lret lret lret lret lret lret lret lret lret lret pop fs jne addb cmpsl lods mov mov fneni(8087 out icebp idiv add push adc pop and inc inc add pop pop imul xchg xchg pushf mov mov fneni(8087 out repnz incb or adc pop and inc inc dec push push pop arpl je jg mov lods mov mov (bad) in lock sti add or sbb cmp inc dec push push pop popa insb jb jge mov stos mov mov fcomp in out hlt cli add and sub inc dec push push pop popa data16 jno jge mov stos mov mov fcomp jecxz out hlt stc incl and sub cmp inc dec dec push pop pusha imul addl mov (bad) fsub out repnz std add push adc pop and xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor cmp dec push pop pop imul xchg xchg pushf mov mov fneni(8087 out in repnz incb or adc and inc inc dec push pop pop imul xchg xchg popf mov mov fneni(8087 out icebp idiv add or sub xor push push pop bound jae jle mov lods mov mov fcmovu in lock add or sbb cmp inc dec push push pop popa insb jb jge mov stos mov mov add (bad) ljmp adc sbb cmp inc dec push push pop popa insl jb jle mov stos mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pusha imul (bad) xchg test (bad) (bad) fucom call add lret lret lret lret lret lret lret lret lret lret lret lret sbb es aaa cmp inc dec push pop pop imul lea scas mov rol rcl fsub out repz incb unpckhps and sub ss inc dec push pop pop fs jne addb cmpsl lods mov mov fnop in icebp idiv add or sub xor push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt cli incl and sub dec dec push pop pusha imul jge mov stos mov mov xlat fsub out repz incb or adc pop and inc inc dec push pop pop arpl je addb cmpsl lods mov mov fnop out icebp idiv add or sub xor push push pop arpl je jg mov stos mov mov fcomp lret lret lret lret lret lret lret lret lret lret lret lret jmp add and sub xor aas inc dec push push pop popa insl jb jle mov stos mov mov fcomp jecxz out hlt cli incl and sub dec dec push pop pop imul addl mov xlat fsub call add unpckhps and sub aaa cmp pop pop fs jne addb test mov mov fneni(8087 out icebp idiv add push add xor cmp dec dec push pop pop fs jne addb test mov mov fndisi(8087 out repnz add push adc pop and xor cmp dec push pop pop arpl je jg mov lods mov mov fcmovu in icebp idiv add or sub xor inc inc dec push push pop popa insb jb jge mov stos mov lret lret lret lret lret lret lret lret lret lret lret mov rcr fsubp jmp push or pop sbb cmp inc dec push push pop popa insb jb jge mov stos mov mov fcomp jecxz out hlt cli incl and sub dec dec push pop pusha imul (bad) mov stos scas mov rol rcl fsub call add unpckhps and sub ss pop pop fs jne addl mov rol rcl fsub out repz incb unpckhps and sub aaa cmp dec dec push pop pop gs jbe addl mov (bad) fndisi(8087 out repnz std add push adc pop and xor push push pop arpl je jg mov lods mov mov fnop in lock add or sub xor inc inc dec push push pop bound push test pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop nop xchg pushf mov mov fnop out icebp idiv add or sub xor inc inc dec push push pop bound jae jle mov stos mov mov (bad) in out cmc sti add or pop sbb cmp inc dec push push pop popa data16 jb jge mov stos scas mov rol rcl fucom call add and sub aaa cmp push pop pusha imul (bad) mov test (bad) lret rcl fsub call add adc xor cmp pop pop fs jne addl mov (bad) fndisi(8087 out repnz incb unpckhps and sub aaa cmp pop pop fs jne addb test mov mov fndisi(8087 out repnz add or adc xor cmp pop pop fs lret lret lret lret lret lret lret lret lret lret lret jbe addl mov (bad) fndisi(8087 out repnz std add push adc pop and inc inc dec push pop pop arpl je jg mov lods mov mov fnop in icebp idiv add or sub xor inc inc dec push push pop bound jae jle mov lods mov mov (bad) in out add cld add or sub xor push push pop bound jae jg mov lods mov mov (bad) in out cmc sti add or pop sbb cmp inc dec push push pop pusha data16 jno jge mov stos mov mov xlat fsub call add unpckhps and sub aaa cmp dec dec push pop pop fs jne addb add (bad) lret rcl fsub out repz incb unpcklps and lret lret lret lret lret lret lret lret lret lret inc inc dec push pop pop arpl je jg mov lods mov mov fnop out icebp idiv add or sub xor inc inc dec push push pop bound jae jle mov stos mov mov fcmovu in lock add or sub xor inc inc dec push push pop popa insb jb jge mov cmpsb stos mov mov (bad) in out cmc sti add or pop sbb cmp inc dec push push pop popa insl jb jle mov stos mov mov xlat fucom call add adc sbb daa sub cmp pop pop imul addl mov (bad) fsub out repnz std add push adc pop and inc add push pop pop gs jne addl mov (bad) fndisi(8087 out repnz std add push adc pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop and inc inc dec push pop pop arpl je addb cmpsl lods mov mov fnop out icebp idiv add or sub xor push push pop bound jae jg mov lods mov mov (bad) in lock add or pop sbb xor push push pop bound jae jg mov lods mov mov fcmovu in lock add or sub xor aas inc dec push push pop bound jae jle mov stos mov mov (bad) in out cmc sti add or pop sbb cmp inc dec push push pop popa data16 jb jge mov stos mov mov fcomp in ljmp adc sbb cmp inc dec push push pop popa data16 jb jge mov stos mov mov fcomp jecxz out lret lret lret lret lret lret lret lret lret lret lret lret cli incl and sub dec dec push pop pusha imul addl mov (bad) fsub out repz incb unpckhps and sub aaa cmp pop pop fs jne addl mov add fsub out repnz std add unpckhps and sub aaa cmp inc dec push pop pop imul xchg xchg pushf mov mov fnop out icebp idiv add or sub cmp dec push push pop bound jae jg mov lods mov mov (bad) in lock add or sbb cmp dec push push pop bound jae jle add cmpsl lods mov mov fcmovu in lock add or pop sbb cmp inc dec push push pop popa insl jb jge mov stos mov mov xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor rcr fsubp jmp add and sub dec dec push pop pusha imul (bad) mov stos mov mov xlat fucom call add and sub aaa cmp pop pop gs add (bad) mov stos mov mov xlat fucom call add and sub aaa cmp pop pop gs jne addl mov (bad) fsub out repnz std add push adc pop and inc inc dec push pop pop arpl jne addb cmpsl lods mov mov fneni(8087 out icebp idiv add push adc pop and sub ss inc dec push pop pop arpl je jg mov lods mov mov (bad) in lock add or sbb cmp inc dec push push pop popa insl jb jge mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor movsl stos mov mov fcomp jecxz out hlt stc add and sub dec dec push pop pusha imul addl mov (bad) fsub out repnz incb or add sbb daa sub dec dec push pop pusha imul (bad) xchg test (bad) (bad) fsub out repnz incb unpckhps and sub aaa cmp pop pop fs jne addb test mov mov fnop out icebp idiv add or sub xor inc inc dec push push pop bound jae jg mov lods mov mov aad loopne jmp idiv add or sub xor inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt cli incl and sub cmp pop pop gs jbe pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop jnp xchg test vaddsubps fsub out repnz incb or adc pop and inc inc dec push pop pop arpl je jg mov lods add rcl fndisi(8087 out repnz std add push adc pop and inc inc dec push pop pop arpl je jg mov lods mov mov fnop out icebp idiv add or sub xor push push pop bound jae jle mov stos mov mov (bad) in lock add or sbb cmp inc dec push push pop popa add jae jle mov lods mov mov (bad) in out cmc sti add or pop sbb cmp inc dec push push pop popa insb jb jge mov stos mov mov fcomp jecxz out hlt stc incl and sub dec dec lret lret lret lret lret lret lret lret lret lret lret lret pusha imul (bad) xchg test (bad) lret rcl fsub out repnz incb or adc pop and inc inc dec add gs jbe addl mov (bad) fndisi(8087 out repnz incb or adc and inc dec dec push pop pop imul xchg xchg pushf mov mov fnop out icebp idiv add or sub xor push push pop arpl je jg mov lods mov mov (bad) in lock add or sub xor push push pop bound jae jg mov lods mov mov (bad) in out cmc sti add or pop sbb daa sub dec dec push pop pop imul addl mov (bad) fsub out repz incb unpckhps and pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor xor cmp inc dec push pop pop arpl je jg mov lods mov mov fnop in add idiv add push adc pop and inc inc dec push pop pop arpl je jg mov lods mov mov (bad) in lock add or sbb cmp inc dec push push pop popa insb jb jge mov stos mov mov fcomp jecxz out cmc sti add or pop sbb sub dec dec push pop pusha data16 jno jl mov movsl stos mov mov fcomp jecxz out hlt cli incl or push sbb daa sub dec dec push pop pusha imul (bad) mov test vaddsubps fsub out repnz incb unpckhps and sub aaa cmp pop pop fs jne addb test mov mov fneni(8087 out icebp idiv lret lret lret lret lret lret lret lret lret lret or sub xor inc inc dec push push pop bound jae jg mov xchg xchg pushf mov mov fnop out icebp idiv add or sub xor push push pop arpl je jg mov lods mov mov fcmovu in lock add or sub xor aas inc dec push push pop popa data16 jb jle mov stos mov mov fcomp in out cmc cli add or pop sbb cmp add push push pop bound jb jle mov lods mov mov (bad) in out cmc sti add or pop sbb sub dec dec push pop pusha imul (bad) xchg stos scas mov rol rcl fucom call add adc xor cmp pop pop fs jne addl mov (bad) lret lret lret lret lret lret lret lret lret lret lret lret loope in repnz incb or adc pop and cmp pop pop fs jne addb test mov mov fndisi(8087 out repnz incb or adc pop and inc inc dec push pop pop arpl je jg mov lods mov mov fcmovu in lock add or sub xor aas inc dec push push pop popa insb jb jge mov stos mov mov xlat fldl in out cmc cli add or pop sbb cmp inc dec dec push pop pusha data16 jb jge mov stos mov mov fcomp jecxz out hlt stc incl and sub cmp inc dec dec push pop pusha imul (bad) xchg stos scas mov rol rcl fucom call add unpckhps push jo jg mov scas mov rol fcomp in out cmc sti adc lret lret lret lret lret lret lret lret lret lret lret sub ss inc dec push push pop arpl jae jle mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub ss inc dec push push pop arpl jae jle mov stos mov add (bad) in out cmc sti add or push sbb daa sub aaa cmp pop pop imul nop xchg fwait mov mov fcomp in out hlt cli add or push sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out hlt cli incl and sub aaa cmp pop pop imul nop xchg fwait mov mov fcomp in out hlt cli incl and sub aaa cmp pop pop fs jne addb cmpsb lods mov mov (bad) lret lret lret lret lret lret lret lret lret lret lret in out hlt cli incl and sub aaa cmp dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add or push sbb daa sub aaa cmp push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test (bad) lret fnop out icebp idiv add or sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor ds dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl lret lret lret lret lret lret lret lret lret lret test mov mov fnop out icebp idiv add or sub xor ds dec dec push pop pusha imul addl mov add fndisi(8087 out repnz add push adc push and das xor aas inc dec push push pop popa data16 jno jge mov test (bad) aad loope in repnz add push adc push and das xor push push pop popa data16 jb jge mov test (bad) aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov test vaddsubps fndisi(8087 out icebp idiv add push adc pop and das xor push push pop bound jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and inc inc dec push push pop bound pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor insl jae jle mov stos mov mov xlat fsub out repz incb or adc pop and inc inc dec push push pop add je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp dec dec push pop pop imul nop xchg fwait mov mov (bad) in out cmc cli add and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub dec dec push pop pop imul xchg xchg pushf mov mov (bad) in out cmc cli add or push sbb daa sub aaa cmp pop pop imul nop xchg pushf mov mov (bad) in out cmc cli add or push sbb daa sub pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor cmp pop pop imul nop xchg fwait mov mov (bad) in add idiv add or pop sbb cmp inc dec dec push pop pop gs jbe addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aam loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor ds dec dec push pop pop gs jne addb cmpsl lods mov mov fcomp jecxz out lret lret lret lret lret lret lret lret lret lret lret stc incl unpckhps and sub aaa cmp inc dec push push pop bound jae jp test cmpsb lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul nop xchg fwait mov mov xlat fucom call add push adc pop and das xor push push pop bound jae jle mov stos mov mov xlat fsub out repnz incb or adc pop and xor push push pop bound jae jle mov stos mov mov xlat fsub call add unpckhps and inc inc dec push push pop bound je jg mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and inc inc dec push push pop bound jb jge mov stos mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor mov rol rcl fsub call add adc xor cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out hlt cli incl and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out cmc sti add or push sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov fcomp in out cmc cli add and sub aaa cmp inc dec push pop pop arpl jae jle mov stos mov mov (bad) fsub out repnz std add push adc pop and xor push push pop bound jb pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor js orl movsl stos mov mov xlat fucom call add adc xor cmp inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt stc incl adc xor cmp pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt stc incl adc xor cmp pop pop imul nop xchg fwait mov mov fcomp in out hlt cli incl and sub aaa cmp inc dec push pop pop imul nop xchg pushf mov mov (bad) in out hlt cli incl and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl sbb daa sub lret lret lret lret lret lret lret lret lret ds dec dec push pop pop fs jne addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor ds dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop pusha imul (bad) xchg test mov mov fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop pusha imul (bad) xchg test mov mov fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop pusha data16 jno jl mov add (bad) lret rcl fsub out repz lret lret lret lret lret lret lret lret lret lret lret incb or adc pop and xor push push pop popa insl jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and inc inc dec push push pop bound jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and inc inc dec push push pop bound jb jle mov stos mov mov (bad) fsub out repnz std add push adc pop and xor cmp dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and cmp inc dec push pop pop imul nop xchg fwait mov mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor (bad) int fcomp jecxz out repz incb unpcklps pop and inc inc dec push push pop bound jb jle mov stos scas mov rol rcl fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl xchg stos scas mov rol rcl fsub out repnz std add push adc pop and das xor push push pop popa insl jb jge mov stos mov mov xlat fsub out repnz add or sub xor aas inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb daa sub dec dec push pop pop imul nop xchg fwait mov add (bad) in lock sti add or pop sbb daa sub dec dec push pop pop gs jne lret lret lret lret lret lret lret lret lret lret xchg lods mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pop gs jbe addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pusha imul addl mov aam loopne jmp idiv add or sbb cmp inc dec dec push pop pusha imul (bad) xchg test (bad) lret fneni(8087 in icebp idiv add or sbb cmp inc dec push push pop popa insb jb jge mov test (bad) leave iret aam (bad) jmp idiv add or push sbb daa sub aaa ds add push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp lret lret lret lret lret lret lret lret lret lret lret lret inc dec dec push pop pusha imul (bad) xchg test mov mov fnop out icebp idiv add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test mov mov fneni(8087 out icebp idiv add or sub xor ds dec dec push pop pusha imul (bad) xchg test mov mov fnop out icebp idiv add or sub xor aas inc dec push push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov add fsub out repnz add or sub xor aas inc dec push push pop popa insb jb jge mov test (bad) lret rcl fsub out repnz add pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor push adc push and das xor aas inc dec push push pop pusha imul addl mov aam (bad) jmp idiv add or pop sbb daa sub dec dec push pop pop fs jne addb cmpsb lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov fcomp in out hlt cli incl and sub aaa cmp pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt stc incl unpckhps and sub aaa cmp inc dec push pop add push jne addb cmpsl lods mov mov (bad) in out hlt cli incl and sub aaa cmp pop pop arpl je jg mov lods mov mov lret lret lret lret lret lret lret lret lret lret lret int fcomp jecxz out hlt cli incl and sub aaa cmp pop pop fs jne addb cmpsb lods mov mov fcomp jecxz out repz incb unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub call add unpcklps pop and inc inc dec push push pop bound je jg mov stos mov mov fcomp jecxz out repz incl unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz ljmp adc sbb es aaa cmp pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop mov lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt stc incl adc xor cmp inc dec push push pop bound jae jle mov stos scas mov rol rcl fndisi(8087 out repnz std add push adc pop and das xor push push pop popa insl jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and das xor push push pop popa insb add jle mov stos mov mov (bad) fsub out repnz add push adc pop and xor push push pop bound jae jle mov stos mov mov xlat fsub out repz incb or adc pop and inc inc lret lret lret lret lret lret lret lret lret lret lret lret lret push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc sti add or push sbb daa sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add pop or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test (bad) aad loopne jmp idiv add or sub xor aas inc dec push push pop pusha data16 jno jl mov stos scas mov rol rcl fsub out repnz add push lret lret lret lret lret lret lret lret lret lret lret sbb and das xor push push pop popa insb jb jge mov stos mov mov xlat fsub out repnz std add push adc pop and inc inc dec push push pop bound jb jge mov stos mov mov xlat fucom call add unpcklps and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push push pop bound jae jle mov nop xchg fwait mov mov fcomp jecxz out hlt stc incl unpckhps and sub ss inc dec push pop pop arpl jae jg mov stos mov mov fcomp jecxz out repz incl adc xor cmp pop pop arpl je jg mov lods mov mov lret lret lret lret lret lret lret lret lret lret fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt cli incl and sub aaa cmp dec dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt stc incl unpckhps and inc inc dec push pop pop arpl je jg mov stos mov mov xlat fucom call add unpcklps sbb es aaa cmp dec dec push pop pop imul nop xchg fwait mov mov fcomp jecxz out repz incb unpcklps pop and inc inc dec push push pop popa insb jb jle mov stos scas mov rol rcl fndisi(8087 out icebp idiv add or sub xor ds dec dec push pop pop gs jne addb lret lret lret lret lret lret lret lret lret lret mov mov fnop in lock add or pop sbb cmp inc dec dec push pop pop gs jbe addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov rol rcl fsub out repnz std add push adc push and das xor push push pop popa insl jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and das xor push push pop bound jb jge mov stos scas mov rol rcl fsub out repnz incb unpcklps pop and inc inc dec push push lret lret lret lret lret lret lret lret lret lret lret bound jae jle mov stos mov mov xlat fsub out repnz std add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub out repnz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub out repz incb or adc pop and cmp dec dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub ss inc dec push pop pop imul nop xchg fwait mov mov (bad) in out cmc cli add and sub aaa cmp pop pop imul xchg xchg pushf mov mov (bad) in out cmc cli add lret lret lret lret lret lret lret lret lret lret lret daa sub aaa cmp pop pop arpl je jg mov lods mov mov (bad) in out hlt cli incl and sub aaa cmp inc dec push pop pop arpl jae jg mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov add fcmovu in lock add or pop sbb daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov fcmovu in lock sti add or pop sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lock add or pop sbb cmp inc dec dec push pop pop gs jbe addl mov aam loopne pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor in lock add or sub xor aas inc dec push push pop pusha imul (bad) xchg test (bad) aad loopne jmp idiv add or sub xor push push pop popa data16 jb jge mov test (bad) (bad) fndisi(8087 out repnz add push adc push and das xor dec push pop pop arpl jae jg mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop arpl jae jle mov stos mov mov xlat fsub call add unpcklps and inc inc dec push pop pop arpl je jg mov stos mov mov xlat fucom call add unpckhps and inc inc dec push push pop bound je jg mov lret lret lret lret lret lret lret lret lret lret lret lret lret mov rol rcl fucom call add unpcklps pop and inc inc dec push push pop bound jae jg mov stos mov mov fcomp jecxz out repz incl unpckhps and sub ss inc dec push pop pop arpl jae jle mov stos mov mov add fsubp jmp add and sub ss inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and inc inc dec push push pop arpl jae jle mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor outsb jae jg mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp inc dec push pop pop add jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub dec dec push pop pop gs jne addl mov aam (bad) ljmp adc sbb daa sub cmp inc dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in lock sti add or push sbb daa sub cmp pop pop gs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor cmp pop pop gs jne addb cmpsl lods mov mov fcmovu in lock sti add or pop sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in add idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop pusha imul (bad) xchg loope cmp dec push pop popa addr16 xchg mov ror loopne in repz incl and das xor push pop pop fs jbe jle mov mov rol rcr fsubp ljmp adc pop and inc dec dec push pop pusha data16 jb jge mov scas mov mov xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop rcl fucom jmp pop or sub ss dec dec push pop pusha imul test cmpsl lods mov mov fucom jmp sbb and inc inc dec push push pop bound jb jge mov stos scas mov rol rcl fndisi(8087 out repnz add push adc pop and das xor push push pop popa insb jb jge mov test (bad) aad loopne jmp idiv add or sub xor aas inc dec push push pop pusha imul addl mov aam (bad) ljmp adc sbb es aaa cmp push pop pop gs jbe addl mov aam (bad) jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl lret lret lret lret lret lret lret lret lret lret lret lret (bad) leave iret aam (bad) ljmp adc sbb cmp inc dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pop gs jbe addl mov aam (bad) ljmp adc sbb sub dec dec push pop pop gs jne addb test mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pop imul addl mov add fndisi(8087 out repnz add or sub xor aas inc dec push push pop pusha data16 jno jl xchg test (bad) (bad) fndisi(8087 out icebp idiv add or sub xor aas inc dec dec push pop pusha imul pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop jl xchg scas mov mov fnop out icebp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov rcr fsubp jmp push or push sbb daa sub aaa cmp pop pop arpl je jg mov stos mov mov xlat fsub out repnz std add unpcklps pop and inc inc dec push push add imul (bad) xchg lcall rol rcl fucom call add unpcklps and sub ss inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor cmp inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub ss inc dec push pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt cli incl and sub aaa cmp inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub ss inc dec push pop pop arpl jae jg mov lods mov mov fcomp jecxz ljmp adc sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop fs jne addb test mov mov fcmovu in lock lret lret lret lret lret lret lret lret lret lret add or pop sbb cmp inc dec dec push pop pop gs jne addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop imul addl mov aad loopne jmp idiv add or sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop pusha imul jge mov stos scas mov rol rcl fndisi(8087 out icebp idiv add push adc pop and das xor push push pop popa insl jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and inc inc dec push push pop bound jae jle mov stos scas mov ror xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor lret rcl fsub out repnz add push adc push and das xor push push pop popa insl jb jge mov stos scas mov rol rcl fsub out repnz add push adc push and das xor push push pop bound jae jle mov stos mov mov xlat fsub out repnz incb or adc pop and xor push push pop bound jae jle mov stos mov mov xlat fsub out repnz std add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub out repnz std add push adc pop and das xor push push pop popa insb jb jge mov stos mov mov xlat fsub out repz incb or adc pop and das xor push push pop popa data16 jno jl lret lret lret lret lret lret lret lret lret lret xchg scas mov mov fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul (bad) xchg test mov mov fneni(8087 out icebp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov mov fndisi(8087 out repnz std add push adc push and das xor push push pop popa data16 jb jge mov test vaddsubps fndisi(8087 out icebp clc std add push adc pop and das xor push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz add push adc pop and das xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor dec push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out icebp idiv add or sub xor push push pop popa data16 jno jl xchg test mov mov fcmovu in lock sti add or push sbb daa sub cmp inc dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop imul addl mov aam (bad) ljmp pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor or pop sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or push sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop fs jne addb mov mov fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl xchg test (bad) (bad) fndisi(8087 out repnz add or sub xor aas inc dec push push pop popa data16 jno jl mov test (bad) aad loopne in icebp idiv add or sub xor aas inc dec push push pop pusha imul (bad) xchg test (bad) lret xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov test (bad) (bad) fndisi(8087 out icebp idiv add or sub xor push push pop popa insb jb jge mov test (bad) (bad) fndisi(8087 out icebp idiv add or sub das xor push push pop popa data16 jno jl xchg test mov mov fcmovu in lock sti add or push sbb daa sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out hlt cli incl and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub cmp pop pop fs jne addb pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor xchg xchg pushf mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop fs jne addb test mov mov fcmovu in lock sti add or pop sbb cmp inc dec dec push pop pop gs jne addb test mov mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec dec lret lret lret lret lret lret lret lret lret lret push pop pusha imul addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pusha imul addl mov aam loopne jmp idiv add or sub xor aas add push push pop popa insb jb jge mov test vaddsubps fsub out repnz add or sub xor push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out repnz add or sub xor inc inc dec push push pop popa insl jb jge mov stos scas mov rol rcl fndisi(8087 out repnz add or sub xor aas inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop sbb and das xor push push pop popa push orl stos mov mov xlat fsub out repnz std add push adc pop and inc inc dec push push pop bound jb jle mov stos mov mov rcr fsubp jmp add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl jae jg mov lods mov mov fcomp jecxz out hlt stc incl and sub ss inc dec push pop pop arpl je jg mov stos mov mov (bad) in out hlt cli incl and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov fxch pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor in out cmc cli add and sub aaa cmp pop pop imul nop xchg fwait mov mov xlat fsub out repz incb unpckhps and inc inc dec push push add imul nop xchg fwait mov mov fcomp jecxz out hlt cli incl and sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub cmp inc dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop fs jne addb pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop mov mov (bad) in out cmc cli add and sub aaa cmp pop pop imul nop xchg fwait mov mov fcomp jecxz ljmp adc sbb daa sub dec dec push pop pop fs jne addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop fs jne addb test mov mov fcmovu in lock sti add or pop sbb daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pop imul (bad) xchg lcall ret rcr fsubp jmp add and sub aaa cmp pop pop lret lret lret lret lret lret lret lret lret lret arpl je jg mov stos mov mov (bad) in out cmc cli add and sub aaa cmp pop pop imul mov lods mov mov (bad) in lock add or pop sbb daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in out cmc sti add or pop sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor daa sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add pop or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test mov mov fnop out icebp idiv add or sub xor aas inc dec dec push pop pusha gs jno jl xchg test (bad) aad loopne jmp idiv add or sub xor aas inc dec push push pop pusha data16 jno jl mov test (bad) (bad) fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aad loope lret lret lret lret lret lret lret lret lret lret lret lret icebp idiv add or sub xor aas inc dec push push pop pusha imul (bad) xchg mov scas mov rol rcl fsub out repnz std add push adc pop and das xor push push pop bound jb jge mov stos scas mov rol rcl fsub out repnz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub out repz incb unpcklps pop and inc inc dec push push pop bound jb jge mov test (bad) aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov test (bad) (bad) fndisi(8087 out icebp idiv add or sub xor push push pop popa insb jb jge mov test pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor scas mov mov fndisi(8087 out icebp idiv add or and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov fcomp in out hlt cli incl and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt stc incl and sub aaa cmp dec dec push pop pop arpl lret lret lret lret lret lret lret lret lret lret lret je jg mov test mov mov fcmovu in lock add or pop sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov fcmovu in lock add or pop sbb daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov fcmovu in lock add or pop sbb daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in lock add or pop sbb daa sub dec dec push pop pop gs jne addb test mov mov (bad) in lock sti add or pop sbb cmp inc dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub lret lret lret lret lret lret lret lret lret lret lret lret aas inc dec dec push pop pusha imul (bad) xchg test mov mov fnop out icebp idiv add or sbb cmp inc dec push push pop pusha imul (bad) xchg test (bad) lret fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl mov test (bad) aad loopne in icebp idiv add or sub xor aas inc dec dec push pop pusha data16 jno jl xchg test mov mov fneni(8087 out icebp idiv add or sub xor aas inc dec dec push pop pusha imul (bad) xchg test (bad) aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov rcl fsub out repnz lret lret lret lret lret lret lret lret lret lret lret std add push adc pop and das xor push push pop popa insb jb jge mov stos mov mov xlat fsub out repnz incb or adc pop and das xor push push pop bound jb jle mov stos mov mov xlat fucom call add push adc pop and inc inc dec push push pop bound jb jge mov stos scas mov rol rcl fsub out repnz incb or adc pop and xor push push pop bound jb jge mov stos scas mov rol rcl fsub call add push adc pop and inc inc dec push push pop bound jb jge mov stos scas mov rol rcl fsub out repnz incb or adc pop and inc inc add pop pop arpl je jg mov stos mov lret lret lret lret lret lret lret lret lret lret ret rcr fucom call add adc xor cmp inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul nop xchg fwait mov mov fcomp in out hlt cli incl and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out hlt cli incl and sub aaa cmp inc dec push pop pop imul nop xchg fwait mov mov (bad) in out hlt cli incl and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov add loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop imul lret lret lret lret lret lret lret lret lret lret xchg test mov mov fnop in lock add or pop sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or push sbb daa sub dec dec push pop pop imul nop xchg fwait mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov fcmovu in lock sti add or pop sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pop add jno jl xchg test (bad) lret fnop out icebp idiv add or sub xor aas lret lret lret lret lret lret lret lret lret lret inc dec push push pop pusha data16 jno jl xchg test (bad) aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov test vaddsubps fndisi(8087 out icebp idiv add or sub xor push push pop popa insb jb jge mov test (bad) aad loope in icebp idiv add or sub xor inc inc dec push push pop popa insb jb jge mov test (bad) (bad) fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out add clc incb unpcklps pop and inc inc dec push push pop arpl jae jle mov stos mov mov (bad) fsub out repnz add pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop or sub xor ds dec dec push pop pop gs jbe addl mov aam (bad) ljmp adc sbb daa sub push outsb jne addl mov fndisi(8087 out repz incl and das xor inc inc dec push pop pop fs mov nop xchg fwait mov mov fcomp jecxz out hlt cli add and sub aaa cmp pop pop imul xchg xchg pushf mov mov (bad) in out hlt cli add and sub dec dec push pop pop fs jne addb cmpsl lods mov mov fcomp jecxz out hlt stc incl unpckhps and sub aaa cmp inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl unpckhps lret lret lret lret lret lret lret lret lret lret lret and sub aaa cmp pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt stc incl adc xor cmp inc dec push pop pop imul nop xchg fwait mov mov (bad) in out hlt cli add sbb cmp inc dec dec push pop pop imul addl mov aam (bad) jmp idiv add or pop sbb sub dec dec push pop pop gs jne addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pop fs jne addb test mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop gs jne addb cmpsl scas mov mov fnop lret lret lret lret lret lret lret lret lret lret jmp idiv add or sbb cmp inc dec dec push pop pusha imul addl mov aad loopne in icebp idiv add or sub xor ds dec dec push pop pop gs jne addl mov mov fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl mov test (bad) aad loopne in repnz add push adc push and das xor push push pop popa insb jb jge mov test (bad) (bad) fsub out repnz add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub out repz incb or adc pop and inc inc dec push push pop bound jae jle mov lret lret lret lret lret lret lret lret lret lret lret lret mov rol rcl fucom call add unpckhps and inc dec dec push pop pop imul nop xchg fwait mov mov (bad) jecxz out hlt cli incl and sub add ds dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha data16 jno jl mov test vaddsubps fndisi(8087 out repnz add or sub xor aas inc dec push push pop popa data16 jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and das xor push push pop popa insl jb jge mov stos mov mov xlat fsub call add push adc pop and inc inc dec push push pop bound lret lret lret lret lret lret lret lret lret lret lret jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov rcr fsubp ljmp adc sbb daa sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb sub dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb cmp inc dec dec push pop pusha imul addl mov aam (bad) jmp idiv add or pop sbb lret lret lret lret lret lret lret lret lret lret lret inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sbb cmp inc dec push add popa insb jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and das xor push push pop bound jae jle mov stos mov mov xlat fsub out repnz std add push adc pop and das xor push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub ss inc dec push pop pop arpl je addb cmpsl lods mov mov fcomp in out hlt cli incl and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out hlt cli lret lret lret lret lret lret lret lret lret lret add and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) add jmp idiv add or sbb cmp inc dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop arpl je jg mov stos mov mov xlat fucom call add unpckhps and inc inc dec push push pop arpl jae jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl jae jg mov stos mov mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop ret rcr fsubp jmp add and sub aaa cmp dec dec push pop pop arpl outsl jne addb cmpsl lods mov mov (bad) in out hlt cli add and sub dec dec push pop pop gs jne addl mov aam (bad) ljmp adc sbb sub dec dec push pop pusha imul addl mov aam (bad) jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test mov mov fnop out icebp idiv add or sub xor aas inc dec dec push pop pusha imul (bad) mov test (bad) (bad) fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop pusha imul or xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor mov mov fneni(8087 out icebp testl adc pop and das xor push push pop popa insb jb jge mov stos mov mov xlat fsub out repnz std add push adc push and das xor aas inc dec push push pop pusha imul addl mov aad loopne jmp idiv add or sbb cmp inc dec dec push pop pusha imul (bad) xchg test vaddsubps fsub out repnz add push adc push and das xor push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repz incb or adc pop and das xor push push pop popa insb jb jge mov test (bad) lret fnop in lock add or sub xor aas inc lret lret lret lret lret lret lret lret lret lret push push pop popa data16 jno jl add movsb stos scas mov rol rcl fsub out repnz std add push adc pop and inc inc dec push push pop popa insb jb jge mov test (bad) lret fnop in lock add or pop sbb sub xor ds dec dec push pop pusha imul addl mov aam (bad) jmp idiv add or pop sbb daa sub dec dec push pop pop gs jbe addl mov aam (bad) ljmp adc sbb sub dec dec push pop pusha imul (bad) xchg test mov mov fnop out icebp idiv add or sub xor aas inc dec dec push pop pusha data16 jno jl mov test (bad) aad loopne jmp idiv add lret lret lret lret lret lret lret lret lret lret lret adc pop and das xor push push pop bound jb jle mov stos mov mov xlat fsub call add unpckhps and inc inc dec push push pop arpl jae jle mov stos mov mov fcomp jecxz out hlt stc incl adc xor cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out hlt cli add and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop gs jne addl mov aam loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov mov xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor (bad) fndisi(8087 out repnz add push adc push and das xor push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out repnz add push adc pop and xor push push pop bound jb jge mov stos scas mov rol rcl fsub out repnz add or sub xor push push pop popa insl jb jge mov test (bad) aad loope in icebp idiv add or sub xor aas inc dec push push pop pusha imul addl mov aam (bad) ljmp adc sbb daa sub aaa cmp pop pop fs jne addb cmpsl lods mov mov fcmovu in lock sti add or pop sbb daa add xor aas inc dec dec push pop popa data16 jno jl mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor scas mov mov fneni(8087 out icebp idiv add or pop sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub aaa cmp inc dec push pop pop arpl jae jle mov stos mov mov fcomp jecxz out hlt stc incl adc xor cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc sti add or push sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov aad loopne jmp idiv add or sub xor aas inc dec dec lret lret lret lret lret lret lret lret lret lret push pop pusha imul (bad) xchg test mov mov fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop pusha data16 jno jl xchg test (bad) lret fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl xchg test mov mov fcmovu in lock sti add or pop sbb cmp inc dec dec push pop pop fs jne addb cmpsb lods mov mov fcomp jecxz out hlt stc incl unpckhps and sub ss inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out repz incb unpcklps pop and add dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add or lret lret lret lret lret lret lret lret lret lret lret lret lret and sub dec dec push pop pop gs jbe addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pop imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul (bad) xchg test (bad) (bad) fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl xchg test (bad) rcl fsub call add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat lret lret lret lret lret lret lret lret lret lret lret lret call add unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul nop xchg pushf mov mov (bad) in out hlt cli add and sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub dec dec push pop add imul addl mov aam loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor mov fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out repnz add push adc push and das xor push push pop popa insl jae jle mov stos mov mov (bad) fsub out repnz std add push adc pop and xor push push pop bound jb jle mov stos mov mov xlat fucom call add unpcklps and inc inc dec push pop pop arpl jae jle mov lods mov mov fcomp jecxz add cmc sti add or pop sbb daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov fcmovu in lock sti add or pop sbb daa sub dec dec push pop pop fs lret lret lret lret lret lret lret lret lret lret lret jne addb cmpsl lods mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pop gs jne addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in out cmc cli add or pop sbb daa sub dec dec push pop pop gs jne jl xchg test mov mov fnop in icebp idiv add or sbb and cs aas inc dec dec push pop pusha imul addl mov rcr fsubp jmp add and lret lret lret lret lret lret lret lret lret lret lret lret sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out hlt cli incl and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub cmp pop pop gs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop arpl je addb cmpsl lods mov mov (bad) in out cmc cli add push or pop sbb daa sub dec dec push pop pop fs jne addb test mov mov fcmovu in lock add or pop sbb daa sub dec dec push pop pop gs jne addl mov aad loopne jmp pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop pusha imul (bad) xchg test (bad) lret fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl xchg test (bad) aad loopne in repnz add or sub xor aas inc dec push push pop popa data16 jb jge mov movsl stos mov mov xlat fsub out repnz incb unpcklps and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl jae jg mov stos mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop mov rol rcl fucom call add unpckhps and inc inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc sti add or push sbb and xor ds dec dec push pop pusha imul (bad) mov test (bad) lret fneni(8087 out icebp idiv add or sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sbb cmp inc dec dec push pop pusha imul pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop jnp xchg scas mov mov fnop out icebp idiv add or sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor ds dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb daa sub aaa cmp pop pop arpl je jg mov add into rcr (bad) ljmp adc sbb sub dec dec push pop pop imul addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor lret lret lret lret lret lret lret lret lret lret lret lret aas inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec push push pop pusha imul (bad) xchg test (bad) aad loopne jmp idiv add or sub xor inc inc dec push push pop popa insb jb jge mov test (bad) aad loope in icebp idiv add or sub xor cmp dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps and inc inc dec push push pop bound je jg mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and inc inc dec push pop pop arpl je jg mov lods mov mov fcomp in out hlt cli dec pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor add and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out hlt cli incl and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out cmc cli add and sub dec dec push pop pop fs jne addb cmpsl lods mov mov aad loopne jmp idiv add or pop sbb daa sub dec dec push pop pop imul nop xchg fwait mov mov fcomp in out hlt cli incl and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov lret lret lret lret lret lret lret lret lret lret into aam (bad) ljmp adc sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push add bound jae jle mov stos mov mov xlat fsub out repz incb or adc pop and inc inc dec push pop pop arpl jae jg mov stos mov mov fcomp jecxz out hlt stc incl adc xor cmp inc dec push pop pop imul nop xchg pushf mov mov (bad) in out hlt cli incl and sub aaa cmp pop pop arpl je addb pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor lods mov mov (bad) in out hlt cli incl and sub aaa cmp inc dec push pop pop arpl jae jle mov stos mov mov fcomp jecxz out repz incb unpcklps pop and inc inc dec push push pop popa insb jb jge mov stos scas mov rol rcl faddl loop in repz incb unpcklps pop and inc inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp inc dec push pop pop arpl je jg mov stos mov lock add pop imul mov fsub in clc push adc pop and lret lret lret lret lret lret lret lret lret xor cmp pop bound je addl mov fsub call or unpckhps and xor inc inc dec push pop pop fs ja orl scas mov rol rcr (bad) in repnz add adc sbb sub ss dec dec push pop pop imul orl lods mov mov fucom jmp push or sbb and xor cmp dec dec push pop popa insl jae jg mov mov ror jecxz out cmc sti add push adc daa xor push pop addr16 xchg (bad) rcr in sti add cmp js xchg stos mov mov fndisi(8087 out repz incl and das ss dec dec push pop popa insl jae jg mov scas mov ret aam loopne in repz add push adc and sub pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor aas inc dec push pop pop imul xchg mov mov fcomp in icebp clc incb and xor ds dec push push pop bound jne addl mov fucom jmp pop adc dec pop arpl adcl mov fcomp jecxz out cmc sti add or sub cmp pop bound je addb test (bad) int fcomp in icebp idiv add adc sub cmp dec push pop pop imul xchg lcall ret leave iret aad loope hlt add adc xor aas inc dec push push pop bound je addb test into (bad) in repz incl and das xor inc inc dec push pop pop fs jne addl rcl fucom jmp pop or lret lret lret lret lret lret lret lret lret lret pop and inc dec dec push pop popa insl jb lea scas mov mov fndisi(8087 out repnz add or sub xor aas inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz add push adc push and das xor inc inc dec push push pop popa insl jb jle mov stos mov mov xlat fsub out repz incb or adc pop and inc inc dec push push pop bound jae jg mov stos mov mov xlat fucom call add push adc pop and das xor push push pop popa insb jb jge mov stos scas mov rol rcl fndisi(8087 out repnz add push adc push and das xor push push pop popa insl jb jge mov stos mov mov xlat fucom call xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor stc incb unpcklps sbb es aaa cmp dec dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov fnop in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov test vaddsubps fndisi(8087 out repnz add push adc pop and xor push push pop popa insl jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and inc inc dec push push pop bound jae jle mov add lret lret lret lret lret lret lret lret lret lret lret ret rcr fsubp jmp add and sub cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in out hlt cli incl and sub ss inc dec push push pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp dec dec push pop pop imul xchg xchg pushf mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pop gs jne addb test mov mov fnop out icebp idiv add or sub xor cmp dec push push pop popa insb jb jge pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor sahf movsb stos scas mov rol rcl fsub out repnz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl je jg mov stos mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov fcmovu in icebp idiv add or sub xor aas inc dec dec push pop pusha data16 jno jl xchg test mov mov fnop in lock add or sub xor aas inc dec push push pop pusha data16 jno jl xchg test lds lret rcl fsub out repnz std add push adc pop and inc inc lret lret lret lret lret lret lret lret lret lret lret lret push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp inc dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out hlt cli add and sub aaa cmp pop pop gs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop gs jne addl mov aam (bad) ljmp adc sbb cmp inc dec dec push add data16 jb jge mov stos scas mov rol rcl fndisi(8087 out icebp idiv add or pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop adc sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop pusha imul (bad) xchg test vaddsubps fndisi(8087 out icebp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne out repnz std add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov lret lret lret lret lret lret lret lret lret lret lret lret fucom call add unpcklps and sub ss inc dec push push pop bound jae jle mov stos mov mov (bad) fsub out repnz add or sub xor push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and das xor push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop arpl jae jle mov stos mov mov (bad) fsub out repnz add or sub xor aas inc dec push push pop pusha imul js orl stos mov mov xlat fsub out repz incb or adc pop and das xor push push pop popa insb jb jge mov lret lret lret lret lret lret lret lret lret lret lret lret movsl stos mov mov xlat fsub out repz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lock add or sub xor aas inc dec push push pop popa data16 jb jge mov test vaddsubps fndisi(8087 out icebp idiv add push adc pop and das xor push push pop lret lret lret lret lret lret lret lret lret lret lret lret lret insb jb jge mov stos scas mov rol rcl fsub out repnz incb or adc and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add push adc pop and xor cmp dec push push pop bound jb jge mov test vaddsubps fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl xchg test (bad) aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha data16 jno jl mov mov mov rol rcl fsub out repnz std add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor and inc inc dec push push pop arpl jae jle mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp dec dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add or push sbb daa sub cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or push add cmp inc dec dec push pop pusha imul (bad) xchg test (bad) lret fndisi(8087 out repnz add or sub xor inc inc dec push push pop popa insb jb jge mov test (bad) lret fnop in pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop jmp idiv add or sub xor aas inc dec push push pop pusha data16 jno jl mov test (bad) (bad) fndisi(8087 out repnz add push adc pop and das xor push push pop popa insl jb jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push pop pop arpl jae jle mov stos mov mov fcomp jecxz out hlt stc incl adc xor cmp pop pop imul nop xchg fwait mov mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pusha imul (bad) xchg test (bad) lret fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop popa insl jb jle mov stos mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop mov rol rcl fsub out repnz add push adc push and das xor aas inc dec push push pop popa insb jb jge mov stos mov mov xlat fucom call add adc xor cmp dec dec push pop pop imul nop xchg pushf mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov fnop in lock add or pop sbb cmp aas inc dec push push pop popa data16 jno jge mov test (bad) (bad) fsub out repnz add push adc push and das xor push push pop popa insb jb jge mov stos scas mov rol rcl fsub call add unpcklps pop and inc inc dec push push pop arpl jae lret lret lret lret lret lret lret lret lret lret lret lret jle mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub dec dec push pop pop fs jne addb cmpsl lods mov mov aad loopne jmp idiv add or pop sbb cmp inc dec push push pop popa data16 jno jge mov test (bad) (bad) fndisi(8087 out icebp idiv add or sub xor inc inc dec push push pop bound jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and das xor xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop inc dec push push pop popa insl jae jle mov stos mov mov xlat fucom call add unpcklps and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop sub cmp push pop data16 jno jl mov test vaddsubps fndisi(8087 out repnz add or sub xor aas inc dec push push pop pusha imul jge mov test (bad) xlat fsub out repnz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub call add unpcklps and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add and lret lret lret lret lret lret lret lret lret lret lret lret lret aaa cmp inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl movhps and sub aaa cmp dec dec push pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt stc incl unpckhps and sub aaa cmp pop pop imul nop xchg pushf mov mov (bad) in out cmc cli add add pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb daa sub dec dec push pop pop gs jbe addl mov aam loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop fs jbe addl mov aam (bad) jmp pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor idiv add or pop sbb cmp inc dec dec push pop pop gs jbe addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov rol rcl fsub out repnz std add push adc pop and xor push push pop bound jb jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jb jge mov test (bad) aad loope in repnz add push adc push and das xor aas inc dec push push pop pusha imul (bad) xchg test lret lret lret lret lret lret lret lret lret lret lret lret mov mov fcmovu in lock add or sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop pusha data16 jno jl xchg test (bad) aad loopne in icebp idiv add or and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out repz incb unpcklps pop and inc inc dec push pop pop arpl jae jle mov stos mov mov xlat fsub out repnz std add push adc push and das xor aas inc dec push push pop pusha data16 jb pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor (bad) mov test (bad) aad loopne in icebp idiv add or sub xor aas inc dec dec push pop pusha imul (bad) xchg test (bad) lret fneni(8087 out icebp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov rol rcl fsub call add unpcklps pop and inc inc dec push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out repnz add push adc push and das xor push push pop popa insl jb jge mov stos scas mov rol rcl fsub out repnz incb or adc pop and xor push push pop bound jb jle mov stos mov mov xlat fucom call add unpckhps and sub ss lret lret lret lret lret lret lret lret lret lret lret inc dec push pop pop arpl jae jle mov stos mov mov xlat fucom call add adc xor cmp inc dec push pop pop arpl jae jle mov stos mov mov (bad) fsub out repnz std add push adc pop and cmp inc dec push pop pop arpl jae jle mov stos mov mov xlat fsub out repnz std add push adc pop and xor push push pop bound jb jle mov stos mov mov (bad) fsub out repnz std add push adc pop and xor cmp dec push push pop bound jae jle mov stos mov mov xlat fsub out repnz incb or adc pop and xor push push pop bound jae jle mov stos mov mov xlat fucom call pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor incb unpcklps pop and inc inc dec push push pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub aaa cmp inc dec push pop pop arpl je addb cmpsl lods mov mov aam (bad) jmp idiv add or pop sbb cmp inc dec dec push pop pop gs jne addl mov aam (bad) jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loope in icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl mov test (bad) (bad) fsub out repnz std add push adc pop and das xor push push pop popa insl jb jge mov stos scas mov ror xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor lret rcl fucom call add unpcklps pop and inc inc dec push push pop bound jb jge mov stos scas mov rol rcl fndisi(8087 out repnz std add push adc push and das xor aas inc dec push add bound jb jge mov stos scas mov rol rcl fsub out repnz incb unpckhps and inc inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc sti add or push sbb daa sub dec dec push pop pop imul addl mov aad loopne jmp idiv add or sbb cmp inc dec push push pop pusha data16 jno jl xchg pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor lea scas mov mov fndisi(8087 out icebp idiv add or sub xor push push pop bound jae jle mov stos mov mov xlat fucom add out hlt cli incl and sub aaa cmp pop pop imul xchg xchg pushf mov mov fcmovu in lock sti add or pop sbb daa sub dec dec push pop pop gs jne addb test mov mov fnop in lock add or pop sbb cmp inc dec dec push pop pop gs jne addb test mov mov fnop in lock add or pop sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov fcmovu in lock sti add or push sbb daa sub aaa cmp pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor push pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt cli incl and sub ss inc dec push push pop bound add test cmpsb lods mov mov fcomp in out cmc cli add and sub aaa cmp pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul nop xchg fwait mov mov fcomp in out hlt cli incl and sub cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc sti add or push sbb sub dec dec push pop pop fs jne addb cmpsl lods mov mov fcomp jecxz out hlt cli incl xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop adc inc dec pop pop fs outsl jp xchg cltd lahf movsl scas mov icebp sti push adc and cmp data16 test test mov rol rcr (bad) out clc add inc dec push popa outsb jp xchg rcr out cld or inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and sub cmp inc dec push push pop bound je jg mov scas mov rol rcr (bad) jmp idiv add unpckhps and sub cmp inc dec push push pop bound jae jg mov scas mov rol rcr fsubp ljmp adc and sub cmp pop popa add je addb stos mov mov (bad) in icebp idiv add unpckhps and sub dec lret lret lret lret lret lret lret lret lret lret lret push pop bound je addb test (bad) int (bad) in icebp idiv add push adc and sub cmp inc dec push push pop arpl jne addl mov fcmovu in icebp idiv add unpckhps and sub dec push push outsl jne addl mov aam (bad) jmp idiv add or pop sbb sub dec dec push pop pop gs jne addb test mov mov fcmovu in lock add or pop sbb sub dec dec push pop pop gs jne addb cmpsl lods mov mov fcmovu in lock add or pop sbb add aas inc dec dec push pop pusha imul addl mov aad loopne in icebp idiv add or sub xor aas inc lret lret lret lret lret lret lret lret lret lret lret dec push pop pusha imul addl mov aam loopne jmp idiv add or sbb cmp inc dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in out idiv add or pop sbb cmp inc dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub dec dec push pop pop fs jne addb cmpsl lods mov mov fcomp in out hlt cli incl and sub cmp pop pop imul xchg xchg pushf mov mov aam (bad) ljmp adc sbb daa sub cmp inc dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in lock sti add lret lret lret lret lret lret lret lret lret lret lret or pop sbb daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in out cmc sti add or push sbb daa sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop imul xchg xchg pushf mov mov (bad) in out hlt cli add and sub aaa cmp dec dec push pop pop arpl je jg mov lods mov mov fcomp in out hlt cli add and sub aaa cmp push pop pop gs jne addb test mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pop imul addl mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop gs jbe addl mov aam loopne jmp idiv add or pop sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop imul nop xchg pushf mov mov (bad) in out hlt cli add or push sbb daa sub aaa cmp pop pop fs jne addb cmpsb lods mov mov add (bad) ljmp adc sbb cmp inc dec dec push pop pop imul addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop imul addl pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xchg xchg popf mov mov fcmovu in lock sti add or pop sbb daa sub dec dec push pop pop gs jbe addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pusha imul addl mov aam loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop gs jbe addl mov aam (bad) jmp idiv add or pop sbb cmp inc dec dec push pop pop add jno jl mov test (bad) lret fnop out icebp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor ds dec dec lret lret lret lret lret lret lret lret lret lret push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop gs jbe addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop gs jbe addl mov aam loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop gs jne addl mov aam (bad) ljmp or sub xor aas inc dec push push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or lret lret lret lret lret lret lret lret lret lret lret lret sbb cmp inc dec push push pop popa data16 jb jge mov test (bad) aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jno jl xchg test (bad) lret fnop out icebp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pop imul jl xchg test (bad) lret fneni(8087 out icebp idiv add or sub xor aas inc dec dec push pop pusha imul (bad) mov test (bad) aad loopne in icebp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aad pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop pusha imul (bad) xchg test (bad) (bad) fndisi(8087 out repnz add or sub xor aas inc dec push push pop popa data16 jb jge mov test (bad) lret rcl fsub out repnz std add push adc pop and das xor push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz std add or adc xor cmp inc dec push push pop bound jae jle mov stos mov mov xlat fsub call add unpckhps and sub ss inc dec push pop pop arpl jae jle mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push push pop arpl jae jle mov xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop mov mov xlat fucom call add unpcklps and sub ss inc dec push pop pop arpl jae jg mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop arpl jae jle mov stos mov mov xlat fucom call add push adc pop and das xor push push pop bound jb jge mov movsl stos mov mov xlat fucom call add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov (bad) fsub out repnz std add push adc push and das xor push push pop popa data16 jb jge mov stos scas mov rol rcl fndisi(8087 out repnz add or sub xor aas inc dec push push pop lret lret lret lret lret lret lret lret lret lret lret imul (bad) mov test (bad) aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul (bad) xchg test (bad) aad loopne in icebp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop add and cs aas inc dec push push pop pusha imul (bad) xchg test mov mov fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop pusha imul (bad) xchg test (bad) lret fnop out icebp idiv add or sub xor aas inc dec push push pop pusha imul (bad) mov test (bad) aad loopne jmp idiv add or pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop and das xor aas inc dec push push pop popa data16 jb jge mov test (bad) aad loope in icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl xchg test (bad) aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov rol rcl fsub out repnz std add push adc pop and das xor push push pop popa insl jb jge mov stos scas mov rol rcl fsub out repnz add or sub xor aas inc dec push push pop popa data16 jb jge mov test vaddsubps fndisi(8087 out repnz add or sub xor aas inc dec dec push pop pusha data16 jb jge mov test (bad) aad loope pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor in icebp idiv add or sub xor aas inc dec push push pop pusha data16 jno jge mov test (bad) (bad) fndisi(8087 out repnz add push adc push and das xor inc inc dec push push pop popa insb jb jge mov stos mov mov xlat fsub call add push adc pop and cmp inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt stc incl unpckhps and sub ss inc dec push pop pop arpl jae jle mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub ss inc dec push pop pop arpl jae jle mov stos mov mov fcomp jecxz out repz incb unpckhps and inc inc dec push pop pop arpl jae jle mov lret lret lret lret lret lret lret lret lret lret lret mov rol rcl fucom call add unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add and sub ss inc dec push pop pop arpl je jg mov stos mov mov rcr fsubp jmp add and sub dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in lock sti add or push sbb daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in lock sti add or push sbb daa sub cmp pop pop gs jbe addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop gs xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor jnp xchg lods mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop fs jne addl mov aam (bad) ljmp adc sbb daa sub dec add pop pusha imul addl mov aad loopne in icebp idiv add or sub xor aas inc dec push push pop pusha imul (bad) xchg test vaddsubps fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop pusha data16 jno jl xchg test (bad) (bad) fsub out repnz add push adc push and das xor inc inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz std add push adc push and das lret lret lret lret lret lret lret lret lret lret cmp dec push push pop popa insb jb jge mov test (bad) aad loope in repnz add push adc push and das xor inc inc dec push push pop popa insb jb jge mov test vaddsubps add loop in repz incb unpckhps and inc inc dec push push pop arpl jae jg mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl jae jg mov stos mov mov fcomp jecxz out repz incb unpckhps and inc inc dec push pop pop arpl jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub call xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor clc incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound imul nop xchg pushf mov mov (bad) in out hlt cli add and sub aaa cmp pop pop imul nop xchg fwait mov mov fcomp in out hlt cli add and sub aaa cmp pop pop imul nop xchg pushf mov mov (bad) in out cmc cli add and sub aaa cmp pop pop imul nop xchg pushf mov mov (bad) in lock sti add or push sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov lret lret lret lret lret lret lret lret lret lret lret lret leave into aam (bad) ljmp adc sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lock cld add or sub xor aas inc dec push push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul (bad) xchg test (bad) lret fnop in lock add or sbb cmp inc dec push push pop pusha imul (bad) xchg test mov mov fneni(8087 out icebp idiv add or sbb cmp inc dec push push pop pusha data16 jno jl pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor (bad) xchg test (bad) lret fneni(8087 out icebp idiv add or sbb cmp inc dec push push pop pusha data16 jno jl orl stos scas mov rol rcl fndisi(8087 out icebp idiv add or sub xor inc inc dec push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out repnz add push adc push and das xor aas inc dec push push pop popa data16 jno jge mov test vaddsubps fsub out repnz add or sub xor inc inc dec push push pop popa data16 jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and das xor push push pop popa insb jb jge mov stos mov mov xlat fsub out repnz incb or adc pop and inc lret lret lret lret lret lret lret lret lret lret lret push push pop bound jb jge mov test (bad) lret rcl fsub out repnz std add add adc xor cmp inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and inc inc dec push push pop arpl jae jle mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out repz incb and sub aaa cmp inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub aaa cmp inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop or adc xor cmp pop pop imul nop xchg add mov (bad) in lock sti add or push sbb daa sub dec dec push pop pop gs jne addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop gs jne addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop gs jbe addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor rcl fneni(8087 out icebp idiv add or add das xor push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out repnz add or sub xor aas inc dec push push pop popa data16 jb jge mov test (bad) (bad) fsub out repnz std add push adc pop and das xor push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out repnz add push adc push and das xor push push pop popa data16 jno jl xchg test (bad) aad loopne in icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl xchg test (bad) lret fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xchg cwtl sahf mov mov xlat fsub out repz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps and inc inc dec push pop pop arpl je jg mov stos mov mov xlat fucom call add unpckhps and inc inc dec push push pop bound je jg mov stos mov mov xlat fucom call add unpcklps and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub ss inc dec dec lret lret lret lret lret lret lret lret lret lret lret lret pop imul nop xchg pushf mov mov (bad) in out cmc cli add and sub dec dec push pop pop imul nop xchg fwait mov mov (bad) in out cmc cli add and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out cmc cli add and sub aaa cmp pop pop imul nop xchg pushf mov mov fcomp in out cmc sti add or push sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov aam (bad) ljmp adc pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor sbb cmp inc dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop gs jbe addl mov aam (bad) ljmp adc sbb daa sub aaa cmp pop pop fs jne addb mov ftst ljmp stos mov leave aam jmp inc dec imul lods mov leave aam out cli add sbb sub outsl jle pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor mov stos scas mov rol rcl fsub out repnz std add push adc pop and das xor push push pop bound jae jle mov stos mov mov xlat fsub call add unpcklps pop and inc inc dec push pop pop arpl jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound je jg mov stos mov mov xlat fucom call add unpcklps and inc inc dec push push pop bound jae jg mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and inc inc dec push push pop arpl jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec lret lret lret lret lret lret lret lret lret lret lret push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop popa insl jb jge mov test vaddsubps fsub out repnz incb or adc pop and inc inc dec push push pop bound jb jle mov stos scas mov rol rcl fsub out repz incb or adc pop and inc inc dec push push pop bound jb jle mov stos mov mov (bad) fsub out repnz std add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub out repnz std add push adc pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor sbb and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub out repnz std add push adc pop and xor push push pop bound jb jle mov stos scas mov rol rcl fsub out repnz std add push adc push and das xor push push pop bound jae jle mov stos mov mov xlat fsub call add push adc pop and das xor push push pop bound jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and das xor push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov xlat (bad) pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor loop in repz incb unpcklps pop and inc inc dec push push pop bound jb jle mov stos mov mov xlat fucom call add push adc pop and inc inc dec push push pop bound jb jge mov stos scas mov rol rcl fsub out repnz incb or adc pop and das xor push push pop bound jb jge mov stos scas mov rol rcl fsub out repz incb or adc pop and das xor push push pop popa insb jb jge mov stos scas mov rol rcl fnclex out repnz std add push adc pop and das xor push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out icebp clc std add push adc push and das xor push push pop popa insb jb jge mov lret lret lret lret lret lret lret lret lret lret lret test (bad) aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jno jl xchg test (bad) lret fnop in icebp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aam loopne jmp idiv add or pop sbb daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub cmp pop pop gs jne addb cmpsl lods mov mov (bad) in out hlt cli add and sub aaa cmp inc dec push pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt cli incl and sub aaa cmp inc dec push pop pop arpl pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor outsb je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt stc incl and sub aaa cmp inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub ss inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub ss inc dec push pop pop arpl jae jle mov stos mov mov xlat fucom call add unpckhps and xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor cmp dec push push pop bound jae jle mov stos mov mov xlat fsub call add unpcklps and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub call add push adc xor cmp dec push push pop bound jae jle mov stos mov mov xlat fsub out repz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub out repnz incb or adc pop and das xor push push pop bound jae jle mov stos mov mov xlat fsub out repnz std add push adc pop and xor push push pop bound jb jle mov stos scas mov rol rcl fsub out repnz lret lret lret lret lret lret lret lret lret lret lret std add or sub xor aas inc dec push push pop pusha data16 jb jge mov test (bad) aad loope in icebp idiv add or sub xor aas inc dec dec push pop pusha imul (bad) mov test (bad) aad loope in icebp idiv add or sub xor aas inc dec dec push pop pusha imul (bad) xchg test (bad) (bad) fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop pusha imul addl mov aad loopne in icebp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov lret lret lret lret lret lret lret lret lret leave iret aam loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pusha imul addl mov aam loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sbb and cs aas inc dec push push pop pusha imul (bad) xchg test (bad) aad loope in icebp idiv add or sub xor push push pop popa insb jb jge mov test vaddsubps fsub out repnz add push adc push and das xor inc inc dec push push pop bound jb jge mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop mov mov rol rcl fsub out repnz std add push adc pop and das xor push push pop bound jae jle mov stos mov mov (bad) fsub out repnz std add push adc pop and das xor push push pop popa insl jb jle mov stos mov mov xlat fsub out repnz incb or adc pop and das xor push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and das xor push push pop popa insl jb jge mov stos mov mov xlat fsub out repz incb or adc pop and xor push push pop popa insb jb jge mov test vaddsubps fsub out repnz add or sub xor inc inc dec push lret lret lret lret lret lret lret lret lret lret push pop popa insb jb jge mov test (bad) xlat fsub call add unpcklps pop and inc inc dec push push pop bound jb jle mov stos mov mov (bad) fsub out repz incb or adc pop and inc inc dec push push pop bound jb jge mov stos scas mov rol rcl fsub out repnz add push adc pop and xor push push pop bound jae jle mov stos mov mov (bad) fsub out repnz add or sub xor push push pop popa insb jb jge mov stos scas mov rol rcl fndisi(8087 out repnz add push adc push and das xor push push pop popa insl jb jge mov test (bad) (bad) fsub out repnz add push adc lret lret lret lret lret lret lret lret lret lret lret sub xor push push pop bound jb jle mov stos scas mov rol rcl fsub out repnz std add push adc pop and das xor push push pop bound jb jle mov stos mov mov (bad) fsub out repnz incb or adc pop and das xor push push pop popa insl jae jle mov stos mov mov xlat fsub out repnz incb or adc pop and xor push push pop bound jb jge mov stos mov mov xlat fsub out repnz std add push adc push and das xor aas inc dec push push pop popa data16 jno jl mov stos scas mov rol rcl fsub out repnz add push adc push and das xor push push pop popa insb jb jge mov test vaddsubps fsub lret lret lret lret lret lret lret lret lret lret lret lret in repnz add push adc push and das xor push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop pusha imul (bad) xchg test (bad) lret fndisi(8087 out repnz add or sub xor aas inc dec push push pop popa data16 jno jl xchg test (bad) lret fnop in icebp idiv add or sub xor ds dec dec push pop pop gs jne addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt stc incl unpckhps and sub aaa cmp inc dec push pop pop arpl jae jle mov lret lret lret lret lret lret lret lret lret lret lret mov rol rcl fsub out repnz add or sub xor aas inc dec push push pop popa data16 jno jge mov test vaddsubps fndisi(8087 out repnz add push adc push and das xor aas inc dec push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out repnz add or sub xor aas inc dec push push pop bound jb jge mov stos scas mov rol rcl fsub out repnz add push adc push and das xor inc inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz add push adc pop and das xor push push pop popa insb jb jge mov stos scas mov rol rcl fndisi(8087 out icebp idiv add or sub xor ds dec dec push pop pop gs pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor jnp xchg test mov mov fnop in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul (bad) xchg test (bad) lret (bad) out icebp idiv add or sub xor aas inc dec push push pop pusha imul (bad) xchg test mov mov fnop out icebp idiv add or sub xor aas inc dec push push pop pusha imul (bad) xchg test mov mov fcmovu in lock add or sub xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop cmp inc dec push push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov test vaddsubps fsub out repnz std add push adc push and das xor push push pop bound jb jge mov stos scas mov rol rcl fsub out repnz add or sub xor aas inc dec push push pop popa data16 jno jl xchg test mov mov (bad) in out cmc cli add or push sbb es aaa cmp dec dec push pop pop imul nop xchg pushf mov mov (bad) in out cmc cli add and sub aaa cmp pop pop imul xchg xchg pushf mov mov (bad) in out cmc cli lret lret lret lret lret lret lret lret lret lret lret lret add and sub aaa cmp pop pop imul xchg xchg pushf mov mov (bad) in out cmc cli add and sub cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pop gs jbe addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop imul addl mov aam (bad) jmp idiv add or sub xor aas inc dec dec push pop pusha imul (bad) xchg test (bad) lret lret lret lret lret lret lret lret lret lret lret lret aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sbb and cs aas inc dec push push pop pusha data16 jno jl xchg test (bad) aad loopne jmp idiv add or sub xor inc inc dec push push pop popa insb jb jge mov test vaddsubps fsub out repnz add push adc push and das xor aas inc dec push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out icebp idiv add or sub xor aas inc dec dec push pop popa data16 jb jge mov test vaddsubps fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xchg cltd sahf movsb test vaddsubps fndisi(8087 out repnz add or sub xor aas inc dec push push pop popa data16 jno jl mov stos scas mov rol rcl fndisi(8087 out repnz add or sub xor aas inc dec dec push pop pusha imul addl mov aam (bad) jmp idiv add or pop sbb cmp inc dec dec push pop pop fs jne addb cmpsb lods mov mov (bad) in out cmc sti add or push sbb daa sub dec dec push pop pop imul nop xchg pushf mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lock add or pop sbb cmp inc dec dec push lret lret lret lret lret lret lret lret lret lret lret pop pop imul addl mov aam loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop pusha data16 jno jl xchg test (bad) lret fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl mov test (bad) aad loopne in icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov test (bad) aad loope in icebp idiv add or pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor and das xor aas inc dec push push pop pusha data16 jno jl xchg test (bad) lret fneni(8087 out icebp idiv add or sub xor aas inc dec dec push pop pusha imul (bad) xchg test (bad) aad loopne jmp idiv add or sub xor aas inc dec push push pop pusha data16 jno jl xchg test vaddsubps fndisi(8087 out icebp idiv add or sub xor aas inc dec dec push pop pusha imul (bad) xchg test (bad) aad loopne in icebp idiv add or sub xor aas inc dec dec push pop pusha imul (bad) xchg test (bad) (bad) fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl xchg test (bad) lret fneni(8087 out pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor icebp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov rcr fsubp ljmp adc sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov fcomp jecxz out hlt stc incl and sub aaa cmp pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt stc incl movhps and sub aaa cmp inc dec push pop pop arpl je jg mov stos mov mov xlat fsub out repnz std add push adc push and das xor push push pop bound jb jge mov stos scas mov rol rcl fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop pusha imul (bad) xchg test pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop scas mov mov fnop out icebp idiv add or sbb cmp inc dec dec push pop pusha imul addl mov aad loopne in icebp idiv add or sub xor aas inc dec dec push pop pusha data16 jno jl mov test (bad) (bad) fndisi(8087 out icebp idiv add or sub xor aas inc dec dec push pop pusha imul (bad) xchg test mov mov fnop in icebp idiv add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test vaddsubps fndisi(8087 out repnz add or sub xor aas inc dec push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out repnz add push adc push and das xor inc inc dec push push pop popa insb jb pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor ja orl test (bad) lret rcl fsub out repnz std add push adc push and das xor push push pop popa insl jb jge mov stos scas mov rol rcl fsub call add push adc pop and inc inc dec push push pop bound jb jle mov stos mov mov (bad) fsub out repz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub call add unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov (bad) fsub out repnz std add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps and lret lret lret lret lret lret lret lret lret lret lret dec push pop pop arpl je jle mov stos mov mov (bad) fsub out repnz add or sub xor aas inc dec push push pop popa data16 jno jl xchg test mov mov fcmovu in lock sti add or push sbb daa sub aaa cmp inc dec push pop pop imul nop xchg fwait mov mov (bad) in out hlt cli incl and sub ss inc dec push push pop bound jae jg mov stos mov mov fcomp jecxz out repz incb unpckhps and inc inc dec push pop pop arpl jae jg mov lods mov mov fcomp jecxz out repz incl unpckhps and inc inc dec push pop pop arpl jae jle mov stos mov mov fcomp jecxz out hlt cli dec pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor add and sub aaa cmp inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and aas inc dec push pop pop push jbe (bad) mov testb push and inc dec pop outsl jp (bad) cltd mov xlat loope testb adc dec pop outsl jp nop lcall loop testb adc dec push pop imul cwtl mov fsub out stc add sbb cmp pop data16 xchg lret jmp sbb sub pop pop imul orl lods mov mov fucom call add or sub aaa cmp pop popa data16 jb jle mov scas mov rol rcr fucom jmp pop or sub ss dec dec push pop pop gs lret lret lret lret lret lret lret lret lret lret lret lret ja orl lods mov mov fsub call add and xor cmp inc dec push pop pop imul orl lods mov mov fsub call push or sbb cmp dec push pop pop fs jbe (bad) mov lods mov mov fndisi(8087 out repz incl and das xor push pop pop fs jbe (bad) mov lods mov mov fndisi(8087 out repz incl and cs inc inc dec push pop jno jge mov stos scas mov rol rcl fsub out repnz incb unpcklps pop and inc inc dec push push pop bound jae jg mov stos mov mov fcomp jecxz out hlt stc incl adc xor cmp inc dec push pop pop arpl je jg pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop test cmpsb lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp dec dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out cmc cli add and sub dec dec push pop pop fs jne addb cmpsl lods mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pop imul addl sahf mov mov fnop in icebp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb sub lret lret lret lret lret lret lret lret lret lret lret lret lret push pop pop gs jne addb cmpsl lods mov mov fcomp jecxz out hlt stc incl and sub aaa cmp pop pop arpl je jg mov stos mov mov xlat fucom call add push adc pop and xor cmp dec push push pop arpl jae jle mov stos mov mov xlat fucom call add unpckhps and sub ss dec dec push pop pop arpl je jg mov stos mov mov xlat fucom call add add adc xor cmp pop pop imul nop xchg fwait mov mov (bad) in out hlt cli add and sub aaa cmp pop pop arpl jne addb cmpsl lods mov mov (bad) in out cmc cli add pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop or push sbb daa sub aaa cmp pop pop arpl je jg mov lods mov mov (bad) in out hlt cli incl and sub ss inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out repz incb unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp inc dec push pop pop arpl jae jle mov cmpsb lods mov mov fcomp in out hlt cli incl and sub ss inc dec push pop pop arpl jae jg mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp dec dec push pop pop arpl je jg mov lods mov mov xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor int fcomp in out cmc cli add or push sbb daa sub aaa cmp pop pop arpl je jg mov stos mov mov xlat fucom call add unpckhps and inc inc dec push push pop bound jae jle mov stos scas mov rol rcl fsub out repnz add or sub xor push push pop popa insb jb jge mov test vaddsubps fsub out repnz add or and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl je jg mov stos mov mov xlat fucom call add push adc pop and xor push push pop bound jae jle mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor stos scas mov rol rcl fsub out repnz add or sub xor aas inc dec dec push pop pusha imul (bad) mov test (bad) (bad) fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl mov stos scas mov rol rcl fsub out repnz add push adc push and das xor aas inc dec push push pop pusha imul addl mov rol rcl fndisi(8087 out repnz add or sub xor aas inc dec push push pop popa data16 jno jge mov test (bad) lret rcl fsub out repnz std add push adc pop and das xor push push pop bound jb jle mov stos mov mov xlat fsub out repz incb or adc pop and inc inc dec lret lret lret lret lret lret lret lret lret lret lret lret push push pop bound jb jge mov stos scas mov rol rcl fsub call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add and sub aaa cmp dec dec push pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt cli incl and sub inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb daa sub aaa cmp pop pop gs jne addl mov aam (bad) ljmp adc pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor sbb sub dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop pusha data16 jb jge mov stos scas mov rol rcl fsub out repnz add push adc push and das xor push push pop popa data16 jno jl mov stos scas mov rol int3 rcl fucom call add unpckhps and inc inc dec push pop pop arpl jae jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp dec dec push pop pop arpl je jg mov lods mov mov (bad) in out hlt cli add and sub aaa cmp pop pop imul nop xchg pushf mov mov fxch pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor (bad) ljmp adc sbb es aaa cmp pop pop arpl je jg mov stos mov mov xlat fucom call add adc xor cmp inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp add gs jne addb cmpsl lods mov mov (bad) in out hlt cli add and sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc sti add or push sbb sub dec dec push pop pop imul addl mov aam (bad) jmp idiv add or pop sbb cmp inc dec push push pop pusha imul (bad) xchg pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop mov mov fnop out icebp idiv add or sub xor aas inc dec dec push pop popa data16 jno jl xchg test (bad) (bad) fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov stos scas mov rol rcl fsub add out repz incb unpckhps and inc inc dec push pop pop arpl je jg mov lods mov mov fcomp in out hlt cli add and sub aaa cmp pop pop imul nop xchg pushf mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop fs lret lret lret lret lret lret lret lret lret imul nop xchg fwait mov mov (bad) in out cmc cli add and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock add or pop sbb sub dec dec push pop pop gs add (bad) xchg test (bad) aad loopne jmp idiv add or sub xor push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz std add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor xor cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pop gs jne addb test mov mov fcmovu in lock add or sub xor inc inc dec push push pop popa insw jb jle mov stos mov mov (bad) fsub out repnz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl adc xor cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub cmp pop pop fs jne addb cmpsl lods mov mov fcmovu in lock lret lret lret lret lret lret lret lret lret lret lret lret push or pop sbb daa sub dec dec push pop pop gs jne addl mov aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul (bad) xchg movsb stos scas mov rol rcl fsub out repnz incb or adc pop and xor push push pop bound jb jge mov stos scas mov rol rcl fndisi(8087 out icebp idiv add push adc pop and das xor push push pop bound jb jge mov stos mov mov xlat fsub call add unpckhps and inc inc dec push pop pop arpl je jg mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push pop pop arpl je jg mov stos mov mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop ret rcr fucom jmp add unpckhps and sub ss pop pop imul nop xchg fwait mov mov (bad) in out hlt cli add and sub xor ds dec dec push pop pusha data16 jno jl xchg test (bad) lret fnop in lock add or pop sbb daa sub dec dec push pop pop fs jne addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop gs jne addl mov aam loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb daa sub dec dec push pop pop imul xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop test cmpsb lods mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop gs jne addl mov mov fsub out repnz add push adc push and das xor inc inc dec push push pop popa data16 jno jl xchg test mov mov fnop out icebp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc lret lret lret lret lret lret lret lret lret lret lret lret push push pop pusha data16 jno jl xchg test (bad) aad loopne in icebp idiv add or sub xor dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps and inc inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb sub dec dec push pop pop gs jbe addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop pusha imul (bad) xchg test vaddsubps fsub out repnz std add push lret lret lret lret lret lret lret lret lret lret lret lret adc pop and das xor push push pop popa data16 jno jl mov test (bad) rcl fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul xchg xchg pushf mov mov fcmovu in lock sti add or pop sbb sub dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop pusha imul (bad) xchg test mov mov lret lret lret lret lret lret lret lret lret lret lret out icebp idiv add or sub xor aas inc dec push push pop add insl jb jle mov stos mov mov xlat fsub out repnz incb or adc pop and inc inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop imul xchg xchg pushf mov mov (bad) in out cmc cli add and sub aaa cmp inc dec push pop pop arpl jae jg mov xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop mov mov fcomp jecxz add cmc sti add or pop sbb daa sub dec dec push pop pop gs jne addb test mov mov fcmovu in lock sti add or pop sbb daa sub dec dec push pop pop imul nop xchg fwait mov mov (bad) in out hlt cli add and sub aaa cmp pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb cmp inc dec dec push pop pusha lret lret lret lret lret lret lret lret lret lret lret imul jge mov test (bad) lret fnop in lock add or sbb cmp inc dec push push pop pusha data16 jno jl xchg test (bad) (bad) fndisi(8087 out icebp idiv add or sub xor push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz add push adc push and das xor push push pop bound jb jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop arpl je jg mov stos mov mov xlat fucom call add unpckhps and inc inc dec push push pop bound jae jg mov stos mov mov xlat fucom call add or adc xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or push sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov fcmovu in lock sti add or pop sbb sub dec dec push pop pop gs jne addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in lock sti add or push sbb daa sub dec dec push pop pop imul nop add mov mov (bad) in pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop ljmp adc sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sbb and cs aas inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sbb cmp inc dec push push pop pusha imul (bad) xchg test mov mov fnop in lock add or sbb cmp inc dec dec push pop popa data16 jno jl mov test vaddsubps fndisi(8087 out icebp idiv add or and inc inc dec push push pop bound je jg mov stos lret lret lret lret lret lret lret lret lret lret lret mov rol rcl fucom call add unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out repz incl unpckhps and inc inc dec push push pop arpl jae jle mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in lock sti add or pop sbb sub dec dec push pop pusha imul addl mov aad loope in icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl xchg test rol rcl fsub call add push adc pop and inc inc dec push push pop bound jae pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor js orl stos mov mov xlat fsub out repnz incb unpcklps pop and inc inc dec push push pop arpl jae jle mov stos mov mov xlat fucom call add adc xor cmp inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub aaa cmp dec dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out repz incl unpckhps and inc inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop ds dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb daa sub aaa cmp pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop fs jne addb test (bad) int (bad) in testb bound je jg mov scas mov rol rcr (bad) ljmp daa sub dec dec push pop pop imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop popa data16 jno jl mov test (bad) aad loope in icebp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov lret lret lret lret lret lret lret lret lret lret lret cltd sahf movsb test vaddsubps fndisi(8087 out icebp idiv add or sub xor ds dec dec push pop pusha imul (bad) mov test (bad) (bad) fndisi(8087 out repnz add or sub xor aas inc dec push push pop popa data16 jno jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and xor push push pop bound jb jge mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl jae jle mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop arpl je jg mov stos mov mov xlat fucom jmp add and sub aaa cmp inc dec push pop pop lret lret lret lret lret lret lret lret lret lret lret lret outsl je addb cmpsl lods mov mov fcomp jecxz out hlt cli add and sub aaa cmp pop pop imul nop xchg pushf mov mov (bad) in out cmc cli add and sub dec dec push pop pop gs jbe addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pusha imul (bad) xchg test mov mov fnop in lock add or sbb cmp inc dec push push pop popa data16 jno jl xchg test (bad) aad loopne in icebp idiv add or sub xor aas inc dec push push pop popa insl jb jge mov test vaddsubps fndisi(8087 out icebp idiv add or sub pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor ds dec dec push pop pop imul (bad) xchg test (bad) aad loopne in icebp idiv add or sub xor aas inc dec push push pop pusha imul (bad) mov test vaddsubps fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz incb or adc pop and das xor push push pop bound jb jle mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov (bad) in lock lret lret lret lret lret lret lret lret lret lret lret add or pop sbb daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov fcmovu in icebp idiv add or sub xor aas inc dec push push pop pusha imul addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov test vaddsubps fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov test vaddsubps fsub out repnz add push adc pop and das xor push push pop bound jae jle mov stos mov mov lret lret lret lret lret lret lret lret lret lret rcl fsub out repz incb or adc pop and das xor push push pop popa insl jb jge mov stos mov mov xlat fsub out repz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add push adc pop and xor push push pop bound jae jle mov stos mov mov xlat fsub out repnz std add push adc push and das xor inc inc dec push push pop popa data16 jno jl xchg test (bad) (bad) fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop pusha imul addl mov aad loopne jmp idiv add or sbb cmp inc dec dec push pop pusha imul (bad) xchg pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor lea scas mov mov fneni(8087 out icebp idiv add or sub xor inc inc dec push push pop popa data16 jb jge mov test vaddsubps fndisi(8087 out repnz std add push adc pop and xor push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push lret lret lret lret lret lret lret lret lret lret lret lret imul (bad) xchg test (bad) lret fnop in lock add or pop sbb cmp inc dec dec push pop pusha data16 jno jl xchg test vaddsubps fndisi(8087 out repnz add or sub xor push push pop popa insb jb jle mov stos mov mov xlat fsub out repnz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out cmc cli add or push sbb lret lret lret lret lret lret lret lret lret lret lret lret xor cmp pop pop fs jne addb cmpsb lods mov mov (bad) in out hlt cli add and sub cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov test vaddsubps fndisi(8087 out repnz add push adc pop and inc inc dec push push pop bound jb jle mov stos mov mov (bad) fsub out repnz std add push adc pop and xor push push pop bound jae jle mov stos mov mov xlat fsub call lret lret lret lret lret lret lret lret lret clc incb or adc pop and inc inc dec push push pop arpl jae jg mov stos mov mov fcomp jecxz out repz incl unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt stc incl and sub aaa cmp pop pop imul xchg xchg pushf mov mov fcmovu in lock sti add or pop sbb daa sub dec dec push pop pop imul addl mov aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul (bad) xchg test vaddsubps fndisi(8087 out repnz add push adc push and das xor push push pop popa data16 jno jl xchg test mov lret lret lret lret lret lret lret lret lret lret lret lret lret fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop pusha imul (bad) xchg test (bad) (bad) fsub out repnz std add push adc pop and das xor push push pop popa insl jb jge mov test vaddsubps fndisi(8087 out repnz std add push adc pop and das xor push push pop bound jb jge mov stos scas mov rol rcl fsub out repnz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov (bad) fsub out repnz std add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps and sub ss inc dec push pop pop arpl jae jle lret lret lret lret lret lret lret lret lret lret lret lret (bad) xchg lcall rol rcl fucom call add unpckhps and inc inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or push sbb daa sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out hlt cli incl and sub aaa cmp inc dec push pop pop arpl jae jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out hlt cli add and sub aaa cmp pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor push pop pop imul nop xchg fwait mov mov (bad) in out cmc cli add and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov fcmovu in lock add or pop sbb daa sub dec dec push pop pop gs jne addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sbb pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor and cs aas inc dec push push pop popa data16 jno jge mov test vaddsubps fndisi(8087 out repnz add or sub xor push push pop popa insb jb jge mov test (bad) aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov rcr fsubp jmp add and sub aaa cmp inc dec push pop pop arpl je jg mov stos mov mov xlat fucom call add push adc pop and das xor push push pop popa data16 jb jge mov stos scas mov rol rcl fndisi(8087 out repnz add push adc push and das xor push push pop popa insb jb jge mov stos mov mov xlat fmul pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor call add unpcklps and inc inc dec push push pop bound jae jle mov lods mov mov fcomp in out hlt cli add and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out cmc sti add or pop sbb daa sub dec dec push pop pop imul addl mov aad loope in icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl xchg test mov mov fcmovu out icebp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov test (bad) lret rcl fsub out repnz incb or adc pop and inc inc dec push push pop bound jae jle mov stos lret lret lret lret lret lret lret lret lret lret lret lret mov mov fcomp jecxz out hlt stc incl movhps and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out cmc cli add and sub dec dec push pop pop imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz incb or adc pop and inc inc dec push push pop arpl jae jle mov stos mov mov fcomp jecxz out repz incl unpckhps and sub ss inc dec push push pop arpl je jg mov lods mov mov (bad) in out hlt cli incl and sub aaa cmp inc dec push pop pop arpl jae lret lret lret lret lret lret lret lret lret lret lret mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp dec dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub cmp pop pop fs jne addb cmpsl lods mov mov fcmovu in lock sti add or pop sbb sub dec dec push pop pusha imul addl mov (bad) fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov test vaddsubps fsub out repz incb or adc pop and das xor push push pop bound jb jge mov stos mov mov xlat fsub out repnz incb or adc pop and inc inc lret lret lret lret lret lret lret lret lret lret lret push pop popa insb jb jge mov test (bad) aad loopne jmp idiv add or sbb and cs aas inc dec push push pop pusha imul addl mov aam (bad) ljmp adc sbb sub dec dec push pop pop imul addl mov aad loopne jmp idiv add or sbb cmp inc dec push push pop popa data16 jb jge mov test vaddsubps fsub out repnz std add push adc pop and das xor push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop popa insl jae jle mov stos mov mov fcomp jecxz out hlt stc incl adc pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor xor cmp inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop popa insb jb jge mov stos mov mov xlat fsub call add push adc pop and inc inc dec push push pop bound jb jge mov test (bad) int3 rcl fsub call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp dec dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul nop xchg fwait mov mov fxch pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor fsubp jmp push or push sbb daa sub dec dec push pop pop fs jne addb cmpsb lods mov mov fcomp jecxz out hlt stc incl adc sbb es aaa cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out hlt cli add and sub dec dec push pop pop fs jne addl mov aad loopne jmp idiv add or pop sbb cmp inc dec push push pop popa insb jb jge mov test vaddsubps fsub out repnz add push adc push and das xor push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl je jg mov lret lret lret lret lret lret lret lret lret lret lret mov ret rcr fsubp jmp add and sub aaa cmp pop pop imul xchg xchg pushf mov mov fcmovu in lock sti add or pop sbb sub dec dec push pop pop imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop pusha data16 jno jl mov test (bad) lret rcl fsub out repnz std add push adc push and das xor aas inc dec push push pop pusha imul (bad) xchg test mov mov fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov test vaddsubps fsub out repnz std add push adc pop and inc inc dec push push pop bound jae pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop js test movsl stos mov mov xlat fucom call add and sub aaa cmp dec dec push pop pop arpl je jg mov lods mov mov fcomp in out hlt cli incl and sub dec dec push pop pop fs jne addb cmpsl lods mov mov fcmovu in lock sti add or pop sbb sub xor ds dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor inc inc dec push push pop popa data16 jb jge mov test vaddsubps fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov test vaddsubps fsub out repnz add push adc push and das xor xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor push push pop popa insl jb jle mov stos mov mov xlat fsub out repz incb or adc pop and inc inc dec push push pop bound jb jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push push pop bound jae jle mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov fnop in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne in icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov test vaddsubps fsub out repnz std add push lret lret lret lret lret lret lret lret lret lret lret lret sbb and xor push push pop bound jae jle mov stos mov mov xlat fsub call add unpckhps and sub ss inc dec push push pop bound jae jle mov stos mov mov (bad) fsub out repnz add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out hlt cli add and sub cmp inc dec dec push pop pop gs jbe addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop gs jbe addl mov aam lret lret lret lret lret lret lret lret lret lret (bad) ljmp adc sbb daa sub cmp pop pop fs jne addb test mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha imul (bad) mov test vaddsubps fsub out repnz std add push adc pop and das xor push push pop bound jb jle mov stos mov mov fcomp jecxz out repz incl unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov fnop in icebp idiv add or sub xor aas inc dec push push pop pusha imul (bad) xchg test pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor lret fndisi(8087 out repnz add push adc push and das xor inc inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz incb or adc pop and inc inc dec push push pop popa insb jb jge mov test (bad) aad loopne jmp idiv add or sub xor aas inc dec push push pop pusha imul addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz std add push adc push and das xor push pop pusha data16 jb rcl lret lret lret lret lret lret lret lret lret lret stc add cmp bound jle xchg popf cmpsl mov ret int3 (bad) fucomip repnz or sbb push pop push cltd mov rcr out cld push nopl sub pop outsw jns mov enter out clc add inc dec pop outsb js mov enter lock add sbb sub addr16 test enter repz pop adc xor inc dec pop bound (bad) mov lret jmp sbb dec push pop addr16 test (bad) out sti add aaa inc dec push popa push jle xchg popf test mov repnz pop adc xor inc dec pop arpl orl out testl xor dec push pop outsb js lea lret (bad) loopne cmc decl adc sub cmp pop fs lret lret lret lret lret lret lret lret lret lret lret xchg (bad) into fsub jmp add sbb xor inc pop bound mov (bad) rcr out cli add sbb sub pop push xchg mov mov fnop out icebp idiv add unpckhps and sub dec push push pop arpl jne addb stos mov mov fnop out repnz std add unpckhps and sub dec push pop pop fs jbe addl mov (bad) fsub call push or sbb cmp dec push pop pop imul orl scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insl jae jg mov scas mov rol rcr (bad) jmp idiv add unpckhps and sub dec push push pop bound je or xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xchg scas mov rol aam (bad) jmp idiv add unpckhps and sub dec push push pop bound jne addl mov fnop out icebp clc incb adc sbb sub xor inc inc dec push pop pop fs jne addl mov fnop out repnz incb adc sbb sub xor inc inc dec push pop pop imul xchg cltd lahf movsl stos mov mov (bad) fsub out repz incl and das xor push pop pop imul test cmpsl lods mov mov fucom jmp pop or sub aaa cmp pop popa insl jae jg mov scas mov ror rcr (bad) jmp idiv add unpckhps and sub dec push push pop bound je jg mov mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor mov ret aam loopne in repnz incb adc sbb daa sub dec push push pop arpl jne addl mov fndisi(8087 out repz incl and das xor push pop pop imul orl lods mov mov fsub call push or sbb and xor cmp dec dec push pop pusha data16 jb jle mov add int3 rcr fsubp ljmp adc and sub dec push push pop bound je addb stos mov mov (bad) in lock add push adc and inc dec push push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and sub aaa cmp pop popa insl jae addb test (bad) int (bad) lret lret lret lret lret lret lret lret lret lret jmp idiv add unpckhps and sub dec push push pop arpl jne addl mov fndisi(8087 out repz incl and das xor push pop pop fs jbe (bad) mov lods mov mov fsub call push or sbb and xor push pop pop imul orl test mov rol rcr fsubp jmp or adc pop and inc dec dec push pop popa insl jae jle mov scas mov rol rcr fucom jmp pop or sub aaa cmp pop popa insl jae jle mov scas mov rol rcl fucom jmp pop or sbb and xor cmp dec dec push pop popa insl jb jg mov scas mov rol rcr fsubp ljmp lret lret lret lret lret lret lret lret lret lret lret lret sbb daa sub cmp inc dec push push pop bound je addl mov fnop out repnz incb adc xor aas inc dec push push pop arpl jne addl mov fsub call push or pop sbb cmp dec push pop pop imul orl test mov mov fsubp ljmp adc pop and inc dec dec push pop pusha data16 jb jle mov scas mov mov fucom jmp or sub aaa cmp pop pusha data16 jb jle mov scas mov mov fucom jmp pop or sub aaa cmp pop pusha data16 jb jle mov lods mov mov fucom jmp push or sbb and xor cmp pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor dec push pop pusha data16 jb jle mov lods mov mov fsub call push or sbb and xor cmp dec dec push pop pusha imul test cmpsl lods mov mov fucom jmp push or sbb and xor cmp dec dec push pop pusha data16 jb jge test test (bad) int3 rcr fsubp ljmp adc and sub cmp inc dec dec push pop popa insl jae jg mov scas mov rol rcr (bad) jmp idiv add push adc and sub cmp inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and sub cmp inc dec push push pop bound je addb test (bad) int (bad) in lock add push adc and sub cmp inc dec push push pop bound pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor jns test test (bad) int (bad) in icebp idiv add unpcklps and sub cmp inc dec push push pop bound je addb test (bad) int (bad) in lock add push adc and sub aaa cmp pop popa insl add xchg mov mov fcmovu in icebp idiv add unpckhps and sub dec push push pop arpl jne addb stos mov mov fnop out repnz add unpckhps and sub cmp inc dec push push pop popa insl jae jg mov scas mov mov fsubp ljmp adc pop and inc dec dec push pop pusha data16 jb jle mov scas mov mov fucom jmp pop or sub aaa cmp pop popa insl jb jle mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xchg pushf mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and sub aaa cmp pop add outsb je addb stos mov mov fnop in icebp idiv add unpckhps and sub dec push push pop bound je addb stos mov mov fnop out icebp idiv add unpckhps and sub dec push push pop bound je addb stos mov mov fnop out repnz incb or adc xor aas inc dec push push pop arpl jne addl mov fnop out repnz incb unpckhps and sub dec push push pop bound je addb stos mov mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor enter (bad) in repnz incb adc xor aas inc dec push push pop arpl jne addb stos mov mov fnop out icebp idiv add movhps daa sub dec add pop fs jbe (bad) mov stos mov mov fndisi(8087 out repz incb adc sbb sub xor inc inc dec push pop pop fs jbe (bad) mov lods mov mov fndisi(8087 out repz incl and cs inc inc dec push pop pop fs jbe (bad) mov stos mov mov fndisi(8087 out repz incb adc sbb sub xor inc inc dec push pop pop arpl jne addl mov fndisi(8087 out repz incl and cs inc inc dec push pop pop fs jbe addl mov fndisi(8087 out pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop in repz incb adc sbb sub xor inc inc dec push pop pop fs jbe (bad) mov stos mov mov fndisi(8087 out repz incl and das xor dec push pop pop imul orl lods mov mov fucom call push or sbb and xor cmp dec dec push pop pusha data16 jb jge mov lods mov mov fucom call push or sbb and xor cmp dec dec push pop pusha data16 jb jle mov lods mov mov fucom call push or sbb and xor cmp inc dec push pop pop data16 jb jge mov lods mov mov fucom call push or sbb and xor cmp dec push pop pop imul orl lods mov mov fsub call push or lret lret lret lret lret lret lret lret lret lret lret and xor push pop pop imul orl lods mov mov fsub call push or sbb and add aaa cmp pop pusha data16 jb jle mov lods mov mov fucom jmp pop or sub ss dec dec push pop pusha data16 jb jle mov lods mov mov fucom jmp pop or sub aaa cmp pop pusha data16 jb jle mov lods mov mov fucom jmp push or sbb and xor cmp dec dec push pop pusha imul orl lods mov mov fsub call add and das xor push pop pop imul orl lods mov mov fsub call push or pop sbb cmp pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor inc inc dec push pop pop fs jbe (bad) mov lods mov mov fsub call push or pop add and xor cmp dec dec push pop pusha data16 jb jle mov lods mov rol rcr fucom jmp pop or sub ss dec dec push pop pusha data16 jb jle mov lods mov mov fsubp jmp pop or sub aaa cmp pop pusha data16 jb jle mov lods mov mov fucom jmp pop or sub ss dec dec push pop pusha data16 jb jge mov lods mov mov fsub call push or sbb and xor cmp dec dec push pop pusha data16 jb jle mov lods mov mov fucom jmp push or sbb and xor cmp dec dec push pop pusha lretw lret lret lret lret lret lret lret lret lret lret lret insb jb jle mov lods mov mov fucom call push add sub aaa cmp pop pusha data16 jb jle mov scas mov rol rcl fucom jmp pop or sub ss dec dec push pop pusha data16 jno jge mov lods mov mov fucom jmp push or sbb and xor cmp dec dec push pop pusha data16 jno jge mov lods mov mov fucom jmp pop or sbb and xor cmp dec dec push pop pop imul orl lods mov mov fsub call push or sbb and xor cmp dec dec push pop pop imul orl lods mov mov fsub call add and das xor push pop pop imul (bad) mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xchg lcall (bad) lret fsub out repz add or sbb and xor cmp dec dec push pop pusha data16 jb jle mov lods mov mov fucom jmp push or sbb and xor cmp dec dec push pop pusha data16 jb jle mov scas mov mov fucom jmp push or sbb and xor cmp dec dec push pop pusha imul orl lods mov mov fucom jmp push or sbb and xor cmp dec dec push pop pusha imul orl lods mov mov fucom jmp push or sub ss dec dec push pop pusha data16 jb jge mov lods mov mov fucom jmp pop or sub aaa cmp pop pusha data16 jb jle mov scas mov lret lret lret lret lret lret lret lret lret lret (bad) xlat fucom add lock add push adc and sub cmp inc dec push push pop bound je addb test (bad) int (bad) in lock add push adc and sub cmp pop bound jae jg mov scas mov rol rcr fsubp ljmp adc and sub aaa cmp pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and inc dec dec push pop popa insl jae jle mov scas mov rol rcr fsubp ljmp adc and sub aaa cmp pop popa insl jae jg mov scas mov rol rcr (bad) ljmp adc and sub cmp inc dec push push pop popa insl jae jg mov scas mov rol rolb fcmovu lret lret lret lret lret lret lret lret lret lret lret icebp clc incb adc sbb daa sub dec push push pop arpl jne addl mov fnop in icebp idiv add unpckhps and sub dec push push pop arpl jne addl mov (bad) out icebp idiv add unpckhps and sub dec push push pop arpl jne addl mov fcmovu in icebp idiv add unpckhps and sub dec push push pop bound je addb stos mov mov (bad) in icebp idiv add unpckhps and sub dec push push pop bound je jg mov mov mov fnop out icebp idiv add unpckhps and sub dec push push pop bound je addb stos mov mov aad loope in repz incl lret lret lret lret lret lret lret lret lret lret lret pop sbb sub xor inc inc dec push pop pop fs jbe addl mov fnop out repz incb adc sbb sub xor inc inc dec push pop pop arpl jne addl mov fnop out repnz incb adc sbb sub xor inc inc dec push pop pop imul xchg cltd lahf movsl stos mov mov fnop out repnz incb unpckhps and sub dec push push pop arpl jne addl mov fcmovu out icebp clc std add unpckhps and sub dec push push pop bound jne addl mov fnop out icebp idiv add unpckhps and sub dec push push pop bound je addb stos mov mov ret leave iret aad loopne in repnz incb adc sbb sub xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor cmp dec push pop pop imul xchg cwtl sahf movsb stos mov mov fnop out repnz incb adc sbb daa sub dec push push pop arpl jne addb stos mov mov fnop out repnz incb adc sbb daa sub dec push push pop arpl jne addl mov fnop out repnz incb adc sbb sub xor inc inc dec push pop pop arpl jne addl mov fnop out repnz incb adc sbb sub xor inc inc dec push pop pop fs jbe (bad) mov stos mov mov fndisi(8087 out repnz incb adc sbb sub xor inc inc dec push push pop arpl jne addl mov aad loope in repz incl and cs inc inc dec push pop pop lret lret lret lret lret lret lret lret lret lret arpl jne addl mov fndisi(8087 out repz incb adc sbb sub xor inc inc dec push pop pop arpl jne addl mov fndisi(8087 out repnz incb adc sbb sub xor inc inc dec push push pop arpl jne addl mov fnop out repnz incb adc sbb daa sub dec push push pop arpl jne addb stos mov mov (bad) in icebp idiv add unpckhps and sub dec push push pop bound je addb test (bad) int (bad) in lock add push adc and sub cmp inc dec push push pop bound je jg mov xchg cwtl sahf movsb stos mov mov fnop out icebp idiv add unpckhps and sub dec push push pop arpl jne addl xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor mov mov (bad) in icebp idiv add unpckhps and sub cmp inc dec push push pop bound jae jg mov scas mov rol rcr (bad) ljmp adc and sub cmp inc dec dec push pop popa insl jae jg mov scas mov rol rcr (bad) ljmp adc and sub cmp pop popa insl jae jg mov scas mov rol rcr (bad) jmp idiv add push adc and sub cmp inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and sub aaa cmp pop popa insl jae add sahf movsb stos mov mov (bad) in icebp idiv add push adc and sub cmp inc dec push push pop bound je addb stos scas lret lret lret lret lret lret lret lret lret lret lret lret mov rol rcr (bad) jmp idiv add push adc and sub cmp inc dec dec push pop bound je jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insb jb jle mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa data16 jb jle mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop pusha data16 jb jle mov scas mov mov fsubp ljmp adc pop and inc dec dec push pop pusha data16 jns test test mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insb jb jle mov scas mov mov lret lret lret lret lret lret lret lret lret lret lret lret lret jmp pop or sub aaa cmp pop pusha data16 jb jle mov lods mov mov fucom jmp push or sbb and xor cmp dec dec push pop pusha data16 jb jle mov lods mov mov fucom jmp push or sbb and xor push pop pop imul orl lods mov mov fsub call push or sbb cmp dec push pop pop fs jbe (bad) mov lods mov mov fsub call add and das xor push add imul orl lods mov mov fucom call push or sbb and xor push pop pop imul orl lods mov mov fsub out repz add pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor add and das xor push pop pop gs jbe (bad) mov lods mov mov fndisi(8087 out (bad) or push sub dec push addr16 jg mov stc or pop and inc dec dec push pop popa data16 jb jle mov scas mov rol rcr fucom jmp or adc and sub cmp inc dec push push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and sub cmp inc dec push push pop bound jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp unpckhps and sub xor aas inc dec push push pop arpl jne addl mov fnop lret lret lret lret lret lret lret lret lret lret lret out repnz incb adc xor aas inc dec push push pop bound je addb test enter loopne jmp idiv add unpckhps and sub dec push push pop bound je addb test (bad) int (bad) in icebp idiv add unpckhps and sub dec push push pop bound je addb test (bad) int fcomp in lock add push adc and sub cmp pop popa insb jb jle mov lods mov mov fsub call add and das xor push pop pop imul xchg cwtl sahf movsb stos mov mov (bad) in add clc std add lldt sbb sub xor aas inc dec push push pop arpl jne addl mov fnop out repnz dec pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor add adc sbb daa sub dec push push pop arpl je addl mov fnop out repnz add unpckhps and sub dec push push pop arpl je addb stos mov mov fnop in icebp idiv add unpckhps and sub dec push push pop bound je addb test (bad) int (bad) in icebp idiv add push adc and sub cmp inc dec push push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and sub cmp inc dec dec push pop popa insl jae jg mov scas mov rol rolb (bad) in icebp testb add unpckhps and cs aas inc dec push push pop arpl jne addl mov fcmovu in icebp idiv add unpckhps and pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor sub dec push push pop arpl je addb stos mov mov (bad) in icebp idiv add unpckhps and sub cmp inc dec push push pop bound je addb test (bad) int (bad) in lock add push adc and sub cmp inc dec dec push pop popa insl jae jg mov scas mov rol rcr (bad) jmp idiv add push adc xor ds dec push push pop bound je addb test enter (bad) jmp idiv add unpckhps and sub cmp inc dec push push pop bound je jg mov scas mov add enter loopne out repz incl and cs inc inc dec push pop pop fs jbe (bad) mov stos mov mov fndisi(8087 out repnz incb adc sbb cmp lret lret lret lret lret lret lret lret lret lret lret lret dec push pop pop fs jne addl mov fnop out repnz incb unpckhps and sub dec push push pop arpl jne addl mov fnop in icebp idiv add unpckhps and sub cmp inc dec push push pop bound je addb test (bad) int (bad) in lock add push adc and sub cmp inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insl jae jle mov test movl out repnz incb unpckhps and sub dec push push pop bound je addb test (bad) int (bad) in repnz add unpckhps and sub dec push push pop bound pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor jp xchg test (bad) int fcomp in lock add push adc and sub cmp inc dec push push pop bound jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insl jae jle mov scas mov mov fucom jmp pop or sub ss dec dec push pop pop data16 jb jle mov lods mov mov fucom jmp push or sbb and xor cmp inc dec push pop pop imul (bad) mov nop xchg pushf mov mov fcomp in out cmc sti add or sub ss inc dec push pop pop imul (bad) mov stos mov mov fndisi(8087 out repz incl and cs inc inc dec push pop pop fs jne addl xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop lea mov mov (bad) out repz incl and cs inc inc dec push pop pop imul xchg cltd lahf movsl stos mov mov fnop out repnz incb adc sbb cmp dec push pop pop fs jbe addl mov fnop out repnz incb adc sbb sub dec push pop pop arpl jne addl mov fnop out repnz incb adc sbb daa sub dec push push pop arpl add (bad) mov cmpsb lods mov mov fsub call add and das xor push pop pop fs jbe (bad) mov lods mov mov fsub out repz incl and cs inc inc dec push push pop arpl je addb test pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor into aam (bad) jmp idiv add unpckhps and sub dec push push pop bound je addb test (bad) int3 rcr fsubp ljmp adc and sub aaa cmp pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and sub cmp pop popa insl jae jle mov scas mov rol rcr fsubp jmp pop or sub aaa cmp add outsb je add sahf movsb stos mov mov fnop out icebp idiv add unpckhps and sub dec push push pop arpl jne addl mov (bad) in icebp idiv add unpckhps and sub cmp inc dec push push pop bound je addb stos scas mov rol lret lret lret lret lret lret lret lret lret lret lret lret (bad) jmp idiv add push adc and sub cmp inc dec push push pop popa insl jae jg mov mov mov (bad) in icebp idiv add unpcklps and sub cmp inc dec push push pop popa insl jae jg mov scas mov mov fucom jmp pop or sub ss dec dec push pop pusha imul orl lods mov mov fsub call push or sbb and xor cmp inc dec dec push pop popa add je addb test (bad) int (bad) in lock add push adc and sub cmp inc dec push push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop cmc sti add or sub aaa cmp pop pusha data16 jb jle mov scas mov rol rcl fucom jmp pop or sub ss dec dec push pop pusha imul orl lods mov mov fucom jmp push or sbb and xor cmp inc dec push pop pop imul orl lods mov mov fsub call push or pop sbb ss dec add pop popa insl jae jg mov scas mov rol rcl fucom jmp pop or sub ss dec dec push pop pusha data16 jno jge mov lods mov mov fsub call push or pop push and xor cmp inc dec push pop pop imul orl lods mov mov fsub call add xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor sbb cmp dec push pop pop imul (bad) mov lods mov mov fndisi(8087 out repz incl and cs inc inc dec push pop pop fs jbe (bad) mov lods mov mov fndisi(8087 out repz incl and cs inc inc dec push pop pop imul xchg cltd lahf movsl stos mov mov fndisi(8087 out repnz incb add pop sbb ss inc dec push pop pop imul orl lods mov mov fucom jmp push or sbb and xor push pop pop imul orl lods mov mov fneni(8087 out repz incl and cs inc inc dec push pop pop arpl jne addl mov fnop out repnz std add movhps sub lret lret lret lret lret lret lret lret lret cmp inc dec push push pop arpl jne addb stos mov mov (bad) in icebp idiv add unpckhps and sub cmp inc dec push push pop arpl je addb stos mov mov (bad) in icebp idiv add push adc and sub cmp inc dec push push pop popa push xchg test (bad) int (bad) in icebp add incb adc cs inc inc dec push pop pop fs jbe addl mov fndisi(8087 out repz incb adc sbb sub xor inc inc dec push push pop arpl jne addl mov fndisi(8087 out repnz incb adc sbb sub xor aas inc dec push push pop arpl jne addl mov fcmovu out repnz incb adc sbb daa sub dec push push lret lret lret lret lret lret lret lret lret lret lret lret bound je jg mov scas mov rol rcl fucom jmp push or sub aaa cmp pop pusha data16 jb jge mov lods mov mov fsub call push or pop sbb cmp dec push pop pop imul (bad) mov lods mov mov add jecxz out hlt cli add pop or sub aaa cmp pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and sub aaa cmp pop popa insl jae jle mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insl jb jle mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insl jae lret lret lret lret lret lret lret lret lret lret lret lret mov scas mov rol rcl fsubp ljmp adc pop and inc dec dec push pop popa data16 jb jle mov scas mov rol rcl fucom jmp pop or sub aaa cmp pop pusha data16 jb jle mov lods mov mov fcomp in jmp idiv add unpcklps and sub cmp inc dec push push pop arpl je addb stos mov mov (bad) in icebp idiv add unpckhps and sub cmp inc dec push push pop bound je addb test (bad) int (bad) in icebp idiv add push adc and sub cmp inc dec push push pop bound je jg mov scas mov rol rcr (bad) ljmp adc and inc dec dec push pop popa insl jae jle mov xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor mov rol rcr fsubp ljmp adc pop and inc dec dec push pop pusha data16 jb jle mov scas mov mov fsubp ljmp adc pop and inc dec dec push pop pusha data16 jb jle mov add int aam loopne in repnz std add adc sbb sub xor inc inc dec push push pop arpl jne addb stos mov mov fnop out icebp idiv add unpckhps and cs aas inc dec push push pop arpl jne addl mov fnop out repnz add unpckhps and sub dec push push pop arpl je addb stos mov mov (bad) in icebp idiv add push adc and sub cmp inc dec push push pop popa insl jae addb test lret lret lret lret lret lret lret lret lret lret lret lret (bad) int (bad) in lock add push adc and sub aaa cmp pop popa insb jb jle mov scas mov rol rcr fsubp jmp pop or sub aaa cmp pop pusha data16 jb jle mov test mov mov fnop out icebp idiv add unpckhps and sub dec push push pop bound je addb test (bad) int (bad) in lock add unpckhps and sub cmp inc dec push push pop bound je jg mov scas mov rol rcr fsubp ljmp adc pop es cmp inc dec dec push pop popa insl jae jg mov scas mov rol rcl fucom jmp pop or sub ss dec dec push pop pusha data16 jb jle mov lods mov mov fucom lret lret lret lret lret lret lret lret lret lret lret lret jmp push or sbb and xor cmp inc dec push pop pop imul orl lods mov mov fsub call add and cs inc inc dec push push pop arpl jne jl mov cmpsl lods mov mov fucom jmp push or sbb and xor cmp dec dec push pop pop imul orl lods mov mov fucom call push or sbb and xor push pop pop gs jbe (bad) mov stos mov mov fnop out repz incb adc sbb sub xor inc inc dec push push pop arpl je addb test (bad) int3 rcr fsubp ljmp adc pop and inc dec dec push pop pusha data16 jb jle mov lods mov mov fucom call lret lret lret lret lret lret lret lret lret lret lret lret or sbb and xor push pop pusha data16 jb jle mov lods mov mov fucom jmp push or sbb and xor cmp dec dec push pop add insl jae jg xchg mov mov (bad) in icebp idiv add unpcklps and sub cmp inc dec push push pop bound jae jg mov scas mov rol rcr (bad) ljmp adc and sub cmp inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc pop and xor cmp dec dec push pop pop imul (bad) mov stos mov mov fnop out repz incb adc sbb sub xor inc inc dec push push pop arpl jne addl mov fnop out repnz incb adc sbb lret lret lret lret lret lret lret lret lret lret sub xor aas inc dec push push pop arpl jne addl mov fnop in icebp idiv add unpckhps and sub cmp add push pop pop add ja orl lods mov mov fndisi(8087 out repnz incb adc sbb sub xor inc inc dec push push pop fs jbe addl mov fnop out repnz incb adc sbb daa sub dec push push pop bound je addb stos mov mov (bad) in icebp idiv add push adc and sub aaa cmp pop popa insl jae jle mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc lret lret lret lret lret lret lret lret lret lret lret lret dec push pop popa insb jb jle mov scas mov mov fucom call push or sbb and sub aaa cmp push pop bound jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insl jb jle mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insl jae jle mov scas mov rol rcl fucom jmp pop or sub ss dec dec push pop pusha data16 jno jge mov lods mov mov fucom jmp push or sbb and xor cmp dec dec push pop pop imul orl lods mov mov fsub call push or sbb and das xor push pop pop gs lret lret lret lret lret lret lret lret lret lret jbe (bad) mov lods mov mov fsub out repz incl push and xor aaa cmp pop pusha data16 jb jle mov lods mov mov fucom jmp pop or sub ss dec dec push pop pusha imul orl lods mov mov fsub call push or pop sbb cmp inc dec push pop pop imul orl lods mov mov fndisi(8087 out repz incl and das xor push pop pop fs jbe (bad) mov lods mov mov fndisi(8087 out repz incl adc sbb sub xor inc inc dec push pop pop arpl jne (bad) xchg stos mov mov fnop out repnz incb adc sbb sub dec push push pop arpl jne addb xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor mov mov mov fnop out repnz incl sbb cmp dec push pop pop fs jbe (bad) mov lods mov mov fsub out repz incl and cs inc inc dec push pop pop fs jbe (bad) mov stos mov mov fndisi(8087 out repnz incl and cs inc inc dec push pop pop arpl jne addl mov fnop out repnz incb adc sbb sub xor inc inc dec push pop pop arpl jne addl mov fnop out repnz incb unpckhps and sub dec push push pop arpl jne addb stos mov mov (bad) in icebp idiv add unpckhps and sub cmp inc dec push push pop bound je addb test pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor scas mov rol rcr add out repnz incb add and cs inc inc dec push pop pop arpl jne addl mov fneni(8087 out repnz incb adc sbb sub xor aas inc dec push push pop arpl jne addl mov fnop out icebp idiv add unpckhps and sub cmp inc dec push push pop popa insl jae jg mov scas mov mov fucom call pop or sbb and xor cmp dec dec push pop pusha gs jno jge mov lods mov mov fsub call push or sbb and xor cmp dec dec push pop pop imul orl lods mov mov fsub out repz incl and cs inc inc dec push pop pop imul (bad) mov lods mov mov xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop lret rcl fucom add lock add or sub aaa cmp pop pusha data16 jb jle mov lods mov mov fucom jmp push or sbb cmp dec push pop pop fs jbe addl mov fndisi(8087 out repnz incb adc xor ds dec push push pop bound jae jg mov scas mov rol rcr fsubp jmp pop or sub cmp dec push pop pop gs jbe (bad) mov stos mov mov fnop out repz incb adc sbb sub xor aas inc dec push push pop arpl jne addl mov (bad) in icebp idiv add unpckhps and sub dec push push pop bound je addb movsl stos mov mov aad lret lret lret lret lret lret lret lret lret lret out repz incb adc sbb sub xor inc inc dec push pop pop fs jbe addl mov fnop out repnz incb adc sbb daa sub dec push push pop arpl jne sub inc push pop fs ja mov rcr in stc add inc dec push pop push lcall loopne cmc decl adc dec pop bound mov enter icebp sti push adc and cmp insb ja mov enter repnz add xor inc dec pop bound jle xchg fwait movsl scas mov lret fsubrp icebp cli add push pop sub cmp dec pop arpl mov ret int jecxz clc push adc es cmp pop bound orl ljmp xor inc dec pop arpl (bad) mov lret lret lret lret lret lret lret lret lret lret lret lret lret lret jmp add sbb aaa inc dec push popa imul xchg lahf test fsubrp repz adc xor push pusha imul xchg sahf stos mov leave rcr jmp sbb push pop push jg xchg sahf test mov icebp sti pop adc xor inc push pop addr16 mov lret ljmp cmp pop arpl orl rcr out decb push and push mov fsub icebp cld or sub inc push pop addr16 mov rcr out std or sub inc push pop push cltd movsl mov leave aad in testb sbb xor inc push pop imul lcall in clc add and cmp pop imul lcall in stc add cmp push pop imul cltd cmpsb mov lret in stc add cmp lret lret lret lret lret lret lret lret lret lret lret lret (bad) mov lret rcr fsubp ljmp adc pop and inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insb jb jle mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop pusha data16 jb jle mov lods mov mov fucom call push or sbb and xor push pop pop imul addl nop xchg pushf mov mov fucom ljmp adc pop and inc dec dec push pop pusha data16 jb jle mov lods mov mov fsub call push or sbb and xor cmp dec push pop pop imul orl lods mov mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor (bad) lret fsub out repz incl and das xor push pop pop imul (bad) mov lods mov mov fndisi(8087 out repz incb adc sbb sub xor inc inc dec push push pop fs jbe addl mov fnop out repnz incb adc sbb daa sub dec push push pop arpl je addb stos mov mov fnop out repnz incb or adc xor aas inc dec push push pop bound add addl mov fndisi(8087 out repnz incb adc sbb sub xor aas inc dec push push pop arpl jne addb stos mov mov fnop out repnz add unpckhps and sub dec push push pop arpl je addb test (bad) int (bad) in pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor lock add unpckhps and sub dec push push pop bound je addb test (bad) int (bad) in lock add push adc and sub cmp inc dec push push pop bound jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insl jae jle mov scas mov rol rcl fucom jmp pop or sbb and xor cmp dec dec push pop add insl jb jg mov scas mov rol rcl fucom jmp pop or sub ss dec dec push pop pusha data16 jno jge mov lods mov mov fucom jmp push or sbb and xor cmp dec dec push pop pusha imul orl lods mov mov fucom jmp push or pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor sbb and xor cmp inc dec push pop pop imul orl lods mov mov fndisi(8087 out repz add or pop sbb cmp dec push pop pop fs jbe addl mov (bad) in icebp idiv add push adc and sub cmp inc dec push push pop bound je jg mov scas mov rol rcr fsubp ljmp adc pop and inc add push pop bound je addb test (bad) int (bad) in lock add push adc and sub cmp inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop pusha imul orl lods mov mov fucom call push or sbb and das lret lret lret lret lret lret lret lret lret lret lret lret xor push pop pop imul (bad) mov lods mov mov fsub call add and das xor push pop pop fs jbe (bad) xchg stos mov mov fndisi(8087 out repz incl adc sbb sub dec push push pop arpl je addb stos scas mov rol rcr (bad) jmp idiv add push adc add inc inc dec push pop pop imul xchg cltd lahf movsl stos mov mov fnop out repnz incb movhps and sub dec push pop pop arpl jne addl mov fnop out repnz incb adc sbb daa sub dec push push pop arpl jbe addl mov fndisi(8087 out repnz incb adc sbb daa sub dec push push lret lret lret lret lret lret lret lret lret lret lret lret push xchg mov mov fnop out repnz incb or adc xor ds dec push push pop bound je addb test (bad) int (bad) in icebp idiv add push adc and sub cmp inc dec push push pop bound jae jg mov scas mov rol rcr fsubp ljmp adc add daa sub dec push push pop bound je addb test (bad) int (bad) in icebp idiv add unpckhps and sub dec push push pop bound je addb test (bad) int (bad) in lock add push adc and sub cmp inc dec push push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insl jae jg pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor test test mov mov fucom jmp push or pop sbb cmp dec push pop pop fs jne orl mov fndisi(8087 out repnz incb adc sbb daa sub dec push push pop bound je jg mov scas mov rol rcr fsubp ljmp unpckhps and sub dec push push pop bound je addb test (bad) int fnop out icebp idiv add unpckhps and sub dec push push pop bound je jg mov scas mov rol rcl fucom jmp pop or sub ss dec dec push pop pusha data16 jno jge mov lods mov mov fsub call push or sbb cmp dec dec push pop pop imul orl pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor ret leave iret aad loope in repz incl and cs inc inc dec push pop pop fs jbe (bad) xchg stos mov mov fndisi(8087 out repnz incb adc sbb sub xor aas inc dec push push pop bound je addl mov fnop out add clc incb adc sbb sub xor aas inc dec push push pop arpl jne addl mov (bad) in icebp idiv add unpckhps and sub cmp inc dec push push pop bound jae jg mov scas mov rol rcr fsubp ljmp adc and inc dec dec push pop popa insl jae jg mov scas mov rol rcl fucom jmp pop or sub aaa cmp pop pusha data16 jb jle mov lods mov mov lret lret lret lret lret lret lret lret lret lret (bad) fsub call push or sbb and xor cmp dec push pop pop imul (bad) mov stos mov mov fnop out icebp idiv add unpcklps and sub cmp pop bound je jg mov scas mov rol roll fcomp in lock add push adc and sub cmp inc dec push push pop popa outsb je addb test (bad) int (bad) in lock add push adc and inc dec dec push pop popa insl jae jle mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa data16 jb jle mov lods mov rol rcl fucom jmp pop or sub ss dec dec push pop pusha data16 jb jle mov lods mov mov fsub jmp pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor cmc sti add or sub ss dec dec push pop pop imul orl lods mov mov fsub call push or sbb and xor cmp inc dec push pop pop imul orl lods mov mov xlat fucom jmp push or sbb and xor cmp dec dec push pop pusha data16 jb jle mov lods mov mov fucom call push or sbb and das xor push pop pop imul orl lods mov mov fsub call push or pop sbb cmp dec push pop pop fs jbe (bad) mov lods mov mov fsub out repz incl and cs inc inc dec push pop pop fs jbe addl mov fndisi(8087 out repnz incb adc pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop push sbb daa sub dec push push pop bound jae jg mov scas mov mov fucom jmp pop or sub aaa cmp dec dec push pop pusha data16 jb jle mov add int3 rcr fsubp ljmp adc and inc dec dec push pop popa insl jae jg mov scas mov rol rcl fucom jmp pop or sub aaa cmp pop pusha data16 jb jle mov lods mov mov fsub call push or sbb and das xor push pop pop imul orl lods mov mov fsub call add and das xor push pop pop fs jbe (bad) mov stos mov mov fndisi(8087 out repz incb adc sbb sub xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor inc inc dec push push pop arpl jne addl mov fnop out repnz incb adc sbb daa sub dec push push pop arpl je addb movsl stos mov mov fndisi(8087 out repz incl adc sbb sub xor inc inc dec push push pop arpl jne addl mov fnop out repnz add adc sbb daa sub dec push push pop bound je addb test (bad) int (bad) in icebp idiv add unpckhps and sub dec push push pop arpl je addb stos mov mov (bad) in icebp idiv add push adc and sub cmp inc dec push push pop bound je addb test (bad) int (bad) in lock add push adc and sub cmp inc dec dec push pop lret lret lret lret lret lret lret lret lret lret insl jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop pusha data16 jb jle test test (bad) int fcomp in lock add push adc and sub aaa cmp pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop pusha data16 jb jle mov lods mov mov fucom call pop or sub ss dec dec push pop pusha data16 jb jge mov lods mov mov fsub call push or pop push and xor push pop pop imul (bad) mov lods mov mov fsub out repz incl and das xor push pop pop fs jbe (bad) lret lret lret lret lret lret lret lret lret lret lret mov stos mov mov fndisi(8087 out repz incb adc sbb sub xor aas inc dec push push pop arpl jno jge mov lods mov mov fndisi(8087 out repz incb adc sbb sub xor aas inc dec push push pop arpl jne addl mov fnop out repnz incb adc sbb sub xor aas inc dec push push pop arpl je addb stos mov mov fnop out repnz incb or adc xor aas inc dec push push pop bound je addb test (bad) int (bad) in icebp idiv add unpckhps and sub cmp inc dec push push pop bound jae jg mov scas mov rol rcr fsubp ljmp adc and sub cmp inc dec dec push pop popa insl jae jg mov lret lret lret lret lret lret lret lret lret lret lret lret scas mov rol rcl fucom jmp pop or sbb and xor cmp add insl jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop pusha data16 jb jle mov scas mov mov fucom jmp pop or sub ss dec dec push pop pusha gs jno jge mov lods mov mov fucom jmp push or sbb and xor push pop pop imul (bad) mov lods mov mov fndisi(8087 out repz incl and cs inc inc dec push push pop arpl jne addl mov fnop out repnz incb adc sbb daa sub dec push push pop arpl jne addb stos mov mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop rcr (bad) jmp idiv add unpckhps and sub inc dec push pop pop arpl jne addl mov fnop out repnz incb unpckhps and sub dec push push pop arpl jne addl mov (bad) in icebp idiv add unpcklps and sub cmp inc dec push push pop bound je addb test (bad) int (bad) in lock add push adc and sub aaa cmp pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop pusha data16 jb jle mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop pusha data16 jb jle mov lods mov mov fucom jmp xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor add or sub xor cmp pop popa insl jae jg mov scas mov rol rcl fucom jmp pop or sub aaa cmp pop pusha data16 jb jle mov lods mov mov fsub call push or sbb cmp inc dec push pop pop imul orl lods mov mov fsub call add and das xor push pop pop imul orl lods mov mov fndisi(8087 out repz incl and cs inc inc dec push pop pop fs jbe (bad) mov stos mov mov fndisi(8087 out repz incb adc sbb sub xor aas inc dec push push pop arpl jne addb stos mov mov fnop out repnz incb adc add pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor cmp dec push pop pop fs jbe (bad) mov stos mov mov fndisi(8087 out repz incl and cs inc inc dec push pop pop imul xchg cltd lahf movsl stos mov mov fnop out repnz incb adc sbb sub xor aas inc dec push push pop arpl jne addl mov (bad) in icebp idiv add unpckhps and sub dec push push pop bound je jg mov scas mov rol rcl fucom jmp push or sbb and das xor push pop pop imul orl lods mov mov fsub out repz incl and das xor push pop pop fs jbe (bad) mov lods mov mov fndisi(8087 out repnz incb add and das xor lret lret lret lret lret lret lret lret lret lret lret inc dec push pop pop fs jbe (bad) mov lods mov mov fndisi(8087 out repz incl adc sbb sub xor inc inc dec push push pop arpl jne addl mov fndisi(8087 out repz incb adc sbb sub xor aas inc dec push push pop arpl jne addb stos mov mov (bad) in icebp idiv add unpckhps and sub cmp inc dec push push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and sub aaa cmp pop pusha data16 jb jle mov lods mov mov fndisi(8087 out repz incb adc sbb daa sub dec push push pop arpl jne addl mov (bad) in in repnz incb adc sbb sub xor aas inc dec push push pop lret lret lret lret lret lret lret lret lret lret push jne addl mov fnop out repnz incb unpckhps and sub dec push push pop bound je addb stos mov mov (bad) in icebp idiv add unpckhps and sub dec push push pop bound je addb test (bad) int (bad) in icebp idiv add push adc and sub cmp inc dec push push pop popa insl jae jg mov scas mov rol rcr (bad) ljmp adc and sub cmp pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and sub cmp inc dec dec push pop popa insl jae jg mov scas mov rol rolb (bad) in icebp idiv add push adc and sub cmp inc dec push push pop bound je addb xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor mov scas mov rol rcr fsubp ljmp adc and inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop pusha data16 jb jle mov scas mov rol rcl fucom jmp pop or sub ss dec dec push pop pusha imul orl scas mov mov fucom jmp pop or sbb and xor cmp dec dec push pop pop imul orl lods mov mov fucom jmp push or sbb and xor push pop pop imul (bad) mov lods mov mov (bad) fsub call xor dec push push pop arpl jne addl mov fnop out pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop in repnz incb adc sbb sub xor inc inc dec push push pop fs jbe (bad) mov lods mov mov fndisi(8087 out repz incb adc sbb sub xor aas inc dec push push pop arpl je addb stos mov mov fnop out repnz std add unpckhps and sub dec push push pop bound add addl mov fndisi(8087 out repz incl and cs inc inc dec push pop pop arpl jne addl mov fchs out repnz incb unpckhps and sub dec push push pop arpl je addb stos mov mov (bad) in icebp idiv add adc sbb daa sub dec push push pop bound je addb stos scas mov rol rcr (bad) jmp idiv add push lret lret lret lret lret lret lret lret lret lret adc and sub cmp inc dec push push pop bound je addb stos mov mov (bad) in icebp idiv add unpckhps and sub dec push push pop arpl jne addl mov fnop out repnz incb adc sbb daa sub dec push push pop add jbe (bad) mov lods mov mov fsub call push or sbb and das xor push pop pop imul orl lods mov mov fucom call pop or sbb and xor cmp dec dec push pop pop imul (bad) mov lods mov mov fndisi(8087 out repz incl and das xor inc inc dec push pop pop fs jbe (bad) mov stos mov mov fndisi(8087 out repz incl or sbb and das xor lret lret lret lret lret lret lret lret lret lret dec push pop pop imul orl lods mov mov fsub call add and xor cmp dec dec push pop pop imul orl lods mov mov fsub call push or sbb and xor cmp dec dec add popa insl jae jg mov scas mov rol rcl fucom jmp pop or sbb and xor cmp inc dec push pop pop imul orl lods mov mov fsub call push or sbb and das xor push pop pop fs jbe addl mov fndisi(8087 out repz incl and cs inc inc dec push pop pop fs jbe addl mov fsub out repz incl and das xor push pop pop fs lret lret lret lret lret lret lret lret lret lret jo jl mov stos mov mov fnop out icebp idiv add adc sbb daa xor aas inc dec push push pop arpl je addb test (bad) int3 rcr fsubp ljmp adc pop and ds dec push push pop bound je addb test (bad) int (bad) in icebp idiv add unpckhps and sub dec push push pop arpl jne addb stos mov mov fnop out repnz incb or push sbb daa sub dec push push pop arpl jne addl mov fndisi(8087 out repnz incb adc sbb sub xor inc inc dec push push pop arpl jne addl mov fndisi(8087 out repnz incb adc sbb sub xor aas inc dec push push pop arpl jne addl pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xchg cltd lahf movsl stos mov mov fnop out repnz incb adc sbb sub dec push push pop arpl je addb test (bad) int3 rcr fsubp ljmp adc and ds dec push push pop bound je addb test (bad) int (bad) in icebp idiv add push adc and sub dec push push pop bound je addb stos mov mov (bad) out icebp idiv add unpckhps and sub dec push push pop arpl jne addl mov fchs out icebp idiv add unpckhps and sub dec push push pop arpl jne addl mov fnop out repnz incb adc sbb daa sub dec push push pop arpl jne addl lret lret lret lret lret lret lret lret lret lret lret lret leave iret aad loope in repnz incb adc sbb sub xor inc inc dec push push pop arpl jne addl mov fndisi(8087 out repz incl push and das xor push pop pop imul orl lods mov mov fsub call push or sbb and xor cmp dec dec push pop pop imul orl lods mov mov fsub call push or sbb and xor cmp dec dec push pop pop imul orl lods mov mov fsub call push or sbb cmp dec push pop pusha imul orl lods mov mov fsub call push or sbb and xor cmp dec push pop pop imul orl lods mov mov fucom lret lret lret lret lret lret lret lret lret lret lret lret lret hlt cli add or sbb and das xor push pop pop fs jbe (bad) mov lods mov mov fndisi(8087 out repz incl push and xor cmp dec dec push pop pop imul orl lods mov mov fucom jmp pop or sub ss dec dec push pop pusha data16 jb jge mov lods mov mov fucom jmp pop or sub aaa cmp pop pusha data16 jb jle mov lods mov mov fsub call add and das xor push pop pop imul (bad) mov lods mov mov fsub call push or sbb cmp dec push pop pop imul orl lods mov mov fsub call push or pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor adc push and das xor push pop pop gs jb jge mov lods mov mov fsub call add or sub aaa cmp pop popa insl jb jle mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insl jae jle mov scas mov rol rcr fsubp ljmp adc and sub aaa cmp pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and sub cmp inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and sub cmp inc dec push push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and sub aaa lret lret lret lret lret lret lret lret lret lret lret inc dec push push pop bound je jg mov scas mov rol rcr fsubp add icebp idiv add unpckhps and sub dec push push pop bound jne addl mov fcmovu in icebp idiv add unpckhps and sub dec push push pop bound je addb stos mov mov (bad) in icebp idiv add unpckhps and sub dec push push pop arpl je addb stos mov mov fnop out repnz incb or adc xor aas inc dec push push pop bound je addb stos scas mov rol rcr (bad) in icebp idiv add unpckhps and sub dec push push pop bound je addb stos mov mov (bad) in icebp idiv add unpckhps and sub dec push push pop arpl pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop imul xchg cwtl sahf movsb stos mov mov add loope in repz incl and cs inc inc dec push pop pop imul (bad) mov stos mov mov fnop out repnz incb unpckhps and sub dec push push pop bound je addb stos scas mov rol rcr (bad) ljmp adc pop and inc dec dec push pop pusha data16 jb jge mov scas mov rol rcl fucom jmp pop or sub aaa cmp dec dec push pop pusha data16 jb jle mov lods mov rol rcr fucom jmp pop or sub aaa cmp pop pusha data16 jb jle mov lods mov mov fucom jmp pop or sub ss dec dec push pop pusha data16 jb jle mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor nop xchg pushf mov mov fcomp in lock add push adc and sub cmp inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insl jae jle mov scas mov rol rcl fsubp jmp pop or sub aaa cmp pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insl jae jg mov scas mov rol rcr (bad) jmp idiv add push adc and sub cmp inc dec push push pop bound je addb test enter loopne in repnz incb adc xor aas inc dec push push pop arpl jne addl lret lret lret lret lret lret lret lret lret lret mov fsub call push or sbb cmp dec push pop pop imul orl lods mov mov fsub out hlt stc incl or sbb and xor cmp dec push pop pop imul orl lods mov mov fsub call push or sbb and xor cmp dec dec push pop pusha data16 jb jge mov lods mov mov fucom jmp push or sbb and das xor push pop pop imul orl lods mov mov fsub call push or sbb and xor push pop pop imul orl lods mov mov fucom jmp push or sbb and xor cmp dec dec push pop pop imul orl test mov rol rcr fmulp pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor in lock add or sub aaa cmp pop popa data16 jb jle mov scas mov rol rcr fsubp ljmp adc and sub cmp inc dec push push pop bound je addb stos mov mov (bad) in icebp idiv add unpckhps and sub dec push push pop bound je addb stos mov mov fnop out repnz std add unpckhps and cs inc inc dec push push pop arpl jne addl mov fnop out repnz incb movhps and sub dec push pop pop arpl jne addl mov fndisi(8087 out repnz incb adc sbb daa sub dec push push pop bound je addb movsl stos mov mov fndisi(8087 out repnz incl lret lret lret lret lret lret lret lret lret adc sbb cmp dec push pop pop fs jbe (bad) mov lods mov mov fsub call add and das xor push pop pop imul orl lods mov mov fsub call add and das xor push pop pop fs jne addl mov (bad) in icebp idiv add unpckhps and sub dec push push pop arpl jne addb stos mov mov (bad) in icebp idiv add unpckhps and sub dec push push pop arpl jne addl mov fnop out repnz incb adc sbb sub xor inc inc dec push pop pop fs jbe (bad) add cmpsl lods mov mov fsub call push or sbb and xor lret lret lret lret lret lret lret lret lret lret lret cmp inc dec push pop pop imul test cmpsl lods mov mov fucom jmp push or sbb and xor cmp dec dec push pop pop imul orl lods mov mov fucom call push or sbb and xor cmp inc dec push pop pop imul orl lods mov mov fucom call push or sbb and xor cmp dec dec push pop pusha data16 jb jle mov lods mov mov fucom jmp pop or sub aaa cmp pop pusha data16 jb jle mov lods mov mov fucom jmp push or sbb and inc dec dec push pop pusha data16 jb jns test test mov rol rcr fsubp ljmp adc and inc dec push push pop (bad) lret lret lret lret lret lret lret lret lret lret push test test (bad) int (bad) in lock add push adc and sub cmp pop popa insl jae addb test (bad) int (bad) in lock add push adc and sub cmp inc dec push push pop bound je addb stos mov mov (bad) in icebp idiv add unpckhps and sub cmp inc dec push push pop bound je addb test (bad) int (bad) in icebp idiv add unpckhps and sub dec push push pop arpl je addb stos mov mov (bad) in icebp clc incb adc sbb daa sub dec push push pop arpl push jbe (bad) mov lods mov mov fndisi(8087 out repz incl and das xor push pop pop imul orl pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor xchg lcall (bad) lret fsub call push or pop sbb cmp dec push pop pusha data16 jb jge mov lods mov mov fucom jmp pop or sub ss dec dec push pop pusha data16 jb jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop pusha data16 jb jle mov scas mov rol rcr fsubp jmp pop or sub ss dec dec push pop pop imul (bad) mov lods mov mov fsub call add and das xor push add imul orl lods mov mov fucom call pop or sub ss dec dec push pop pusha data16 jb jle mov lods mov lret lret lret lret lret lret lret lret lret lret lret lret lret rcl fucom jmp pop or sub aaa cmp pop popa data16 jae jle mov scas mov rol rcr fsubp ljmp adc pop and inc dec push push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insl jae jg mov scas mov rol rcr (bad) jmp idiv add push adc and sub cmp inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp jmp pop or sub ss add push pop pusha data16 jb jle mov lods mov mov fucom jmp pop or sub aaa cmp pop popa insl jae jg mov scas mov rol rcr fsubp lret lret lret lret lret lret lret lret lret lret lret lret ljmp adc and sub cmp inc dec push push pop bound je addb test (bad) int (bad) in icebp idiv add unpckhps sub dec push push pop arpl jne addl mov fnop out repnz incb adc sbb sub xor inc inc dec push pop pop fs jbe (bad) xchg stos mov mov fndisi(8087 out repnz incb adc sbb sub xor inc inc dec push pop pop imul xchg lcall ret leave iret aad loope in repz incl and cs cmp dec push pop pop fs jbe (bad) mov lods mov mov fsub out repz incl and das xor push pop pop fs jbe (bad) mov lods mov mov fsub call push or lret lret lret lret lret lret lret lret lret lret lret lret and das xor push pop pop imul (bad) mov lods mov mov fndisi(8087 out repz incl and cs inc inc dec push pop pop fs jbe addl mov fndisi(8087 out repnz incb adc sbb cmp dec push pop pop fs jbe (bad) mov lods mov mov fndisi(8087 out repz incl and das xor push pop pop imul orl lods mov mov fsub call push or pop sbb ss dec dec push pop pusha data16 jb jle mov scas mov rol rcl fucom jmp pop or sub aaa cmp pop popa insl jae jle mov scas mov rol rcr fsubp ljmp adc and sub aaa cmp pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor dec push pop popa insl jae jg mov scas mov rol rcr (bad) jmp idiv add push adc and sub cmp inc dec push push pop bound je addb test (bad) int (bad) in icebp idiv add unpckhps and sub dec push push pop bound je addb stos mov mov fnop out icebp idiv add movhps sub xor aas inc dec push push pop arpl jne addb stos mov mov (bad) in icebp idiv add unpckhps sbb sub xor inc inc dec push pop pop fs jbe (bad) mov stos mov mov fndisi(8087 out repz incl and cs inc inc dec push pop pop imul (bad) mov lods mov mov fsub call push or pop sbb cmp dec push pop pop fs pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop jo jl mov lods mov mov fsub call push or sbb and xor cmp dec push pop pop imul orl lods mov mov fucom jmp pop or sub ss dec dec push pop pusha data16 jb jle mov scas mov rol rcl fucom ljmp adc and inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp unpckhps and sub dec push push pop bound je addb stos mov mov (bad) in icebp idiv add unpckhps and sub cmp inc dec push push pop bound je addb stos mov mov fnop in icebp idiv add unpckhps and sub dec push push pop bound jne addl xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor mov fnop out repnz incb or adc xor aas inc dec push push pop arpl jne addl mov fnop out repnz incb adc sbb sub xor inc inc dec push pop pop imul xchg cltd lahf movsl stos mov mov fndisi(8087 out repz incl and cs inc inc dec push pop pop fs jbe (bad) xchg stos mov mov (bad) out repz add push or sbb cmp dec push pop pop imul orl lods mov mov fsub call push or sbb and xor cmp dec dec push pop pop imul orl lods mov mov fsub call push or sbb and das ss dec dec push pop pusha data16 jb jle mov lods mov mov lret lret lret lret lret lret lret lret lret rcl fucom jmp pop or sub ss dec dec push pop pop data16 jb jle mov scas mov rol rcl fucom jmp pop or sub ss dec dec push pop pusha data16 jb jle mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp unpckhps and sub cmp inc dec push push pop bound je addb stos mov mov (bad) out repnz incb unpckhps and sub dec push push pop arpl jne addl mov fnop out repnz incb or push sbb sub xor aas inc dec push push pop arpl jne addl dec push pop push test pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor rol rcr (bad) jmp idiv add unpckhps and sub dec push push pop arpl jne addl mov (bad) in icebp cli add or sbb and inc dec dec push pop popa insl jae jle mov scas mov rol rcr fsubp ljmp adc pop and inc dec push push pop popa insl jae jg mov scas mov rol rcl fucom jmp push or sbb and das xor push pop pop imul add rcl fucom jmp pop or sub aaa cmp pop pusha data16 mov mov fndisi(8087 out hlt cli add or sbb and xor cmp dec dec push pop pusha data16 jb jge mov lods mov mov fucom jmp pop or sub lret lret lret lret lret lret lret lret lret lret lret lret lret inc dec dec push pop popa insl jb jle mov scas mov rol rcr fsubp ljmp adc and inc dec push push pop bound je addb test (bad) int (bad) in icebp idiv add unpckhps and sub dec push push pop bound jne addl mov fnop out repnz incb adc sbb sub xor aas inc dec push push pop arpl jne addl mov fndisi(8087 out repz incl and das xor push pop pop fs jbe (bad) mov lods mov mov fucom jmp pop or sub aaa cmp pop popa data16 jb jle mov scas mov rol rcl fucom jmp or adc and sub cmp inc dec push push pop popa addr16 lret lret lret lret lret lret lret lret lret lret lret jae jg mov scas mov rol rcr (bad) jmp idiv add push adc and sub dec push push pop arpl jne addl mov fnop out repnz incb adc sbb sub xor aas inc dec push pop pop fs jbe (bad) mov lods mov mov fndisi(8087 out repz incl and das xor push pop pop fs ja orl lods mov mov fsub call add and cs inc inc dec push pop pop arpl jne addl mov fndisi(8087 out repz incl and das xor push pop pop fs jbe (bad) mov lods mov mov fsub call push or sbb and xor cmp dec dec push pop pusha imul orl xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor mov mov fucom jmp pop or sub ss dec dec push pop pusha data16 jb jle mov scas mov mov fucom jmp pop or sub cmp inc dec push push pop bound jae jg mov scas mov rol rcr (bad) jmp idiv add push adc and sub cmp inc dec push push pop bound je addb stos mov mov fnop out repnz add unpckhps and sub dec push push pop bound je addb stos mov mov fnop out icebp idiv add unpckhps and sub cmp inc dec push push pop bound jae jg mov scas mov rol rcr (bad) jmp idiv add unpckhps and sub dec push push pop bound je addb stos mov mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor fnop out repnz incb adc sbb sub xor inc inc dec push push pop arpl jne addl mov (bad) in repnz incb adc sbb sub xor inc inc dec push pop pop fs jne addl mov fndisi(8087 out repz incl and das xor push pop pop imul orl lods mov mov fsub call push or pop sbb cmp dec push pop pusha data16 jb jle mov lods mov mov fucom jmp pop or sub aaa cmp pop pusha insw jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insl jae jg mov scas mov rol rcr (bad) jmp idiv add pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor or adc and sub cmp inc dec push push pop bound je addb stos mov mov fnop out repnz incb adc sbb sub xor inc inc dec push pop pop fs jbe (bad) mov lods mov mov fnclex call push or sbb and xor cmp dec dec push pop pusha data16 jb jle mov lods mov mov fucom jmp pop or sub aaa cmp pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec push push pop bound je addb test (bad) int (bad) in icebp idiv add unpckhps and sub dec push push pop bound jne addl mov fnop out repnz incb adc sbb sub xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop aas inc dec push push pop arpl je addb stos mov mov fnop out repnz incb adc sbb sub dec push push pop arpl jne addl mov fndisi(8087 out repz incl and das xor push pop pop gs jbe (bad) mov lods mov mov fndisi(8087 out hlt cli add or pop sbb cmp dec push pop pop imul orl lods mov mov fsub call push or sbb and xor cmp dec dec push pop pusha data16 jb jle mov scas mov rol rcr fsubp ljmp adc pop and inc dec push push pop popa insl jae jg mov scas mov rol rcr (bad) jmp idiv add unpckhps and sub cmp inc dec push push pop bound lret lret lret lret lret lret lret lret lret lret jnp xchg stos mov mov fnop out repnz incb adc sbb sub xor inc inc dec push pop pop arpl jne addl mov fndisi(8087 out repz incl and das xor push pop pop fs jbe (bad) mov lods mov mov fsub call push or sbb and xor cmp inc dec push pop pop imul movsl lods mov mov fsub call add and xor cmp dec dec push pop pusha imul orl lods mov mov fsub call push or sbb and xor cmp dec dec push pop pusha data16 jb jle mov scas mov rol rcl fucom jmp pop or sub ss dec dec push pop pusha insl jae jg mov scas mov rol pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop int3 rcr fsubp ljmp adc and sub cmp inc dec push push pop popa insl jae jg mov mov mov (bad) in icebp idiv add unpckhps and sub dec push push pop bound je addb stos mov mov fnop out repnz incb adc sbb sub xor inc inc dec push pop pop fs jbe addl mov fndisi(8087 out repz incl and das xor push pop pop fs jbe (bad) mov lods mov mov fndisi(8087 out repz incl and xor cmp dec dec push pop pop imul orl lods mov mov fsub call push or sbb and xor cmp dec dec push pop pusha data16 jb jle mov lods mov mov fucom jmp pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop or sub ss dec dec push pop pusha insl jae jle mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insl jae jg mov scas mov rol rcr (bad) jmp idiv add push adc and sub cmp inc dec push push pop bound je addb stos scas mov ret aam loopne in repnz incb adc sbb sub dec push push pop arpl jne addl mov fnop out repz incl and das xor push pop pop fs jbe (bad) mov lods mov mov fndisi(8087 out repz incl and xor cmp inc dec push pop pop imul orl lods mov mov fucom jmp push or sbb and xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor ss dec dec push pop pusha data16 jb jle mov lods mov mov fucom jmp pop or sub ss dec dec push pop pusha insl jb jle mov scas mov rol rcr fsubp jmp pop or sub aaa cmp dec dec push pop pusha data16 jb jle mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insl jae jg mov scas mov rol rcr (bad) ljmp adc and sub cmp inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp jmp idiv add push adc and sub cmp inc dec push push pop bound je addb stos mov mov (bad) in icebp idiv add unpckhps and sub dec push push pop (bad) lret lret lret lret lret lret lret lret lret lret lret push xchg mov mov fnop out icebp idiv add unpckhps and sub dec push pop pop arpl jne addl mov fnop out repnz incb adc sbb sub xor inc inc dec push push pop fs jbe (bad) mov stos mov mov fnop out repnz incb unpckhps and sub dec push push pop bound je addb stos mov mov fnop out repnz add unpckhps and sub dec push push pop arpl jne addl mov fndisi(8087 out repnz incb adc sbb sub xor inc inc dec push push pop arpl jne addb stos mov mov (bad) out repnz add unpckhps and sub dec push push pop arpl jne addl lret lret lret lret lret lret lret lret lahf movsl stos mov mov fnop out repnz incb adc sbb cmp dec push pop pop fs jbe (bad) mov lods mov mov fsub call add and das xor push pop pop imul orl lods mov mov fndisi(8087 out repz incl and cs inc inc dec push push pop fs jbe (bad) mov lods mov mov fndisi(8087 out repz incl and das xor push pop pop gs jbe (bad) mov lods mov mov fsub call push or sbb and xor cmp dec dec push pop pop imul orl lods mov rol rcl fucom jmp pop or sub aaa cmp pop popa insl jae jle mov scas mov rol pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor int3 rcl fsubp ljmp adc and sub aaa cmp pop popa insl jae jg mov scas mov rol rcr fsubp jmp idiv add unpckhps and sub dec push push pop arpl je addb stos mov mov fnop in icebp idiv add unpckhps and sub dec push pop pop arpl jne addl mov fndisi(8087 out repz incb adc sbb sub xor inc inc dec push pop pop imul (bad) mov lods mov mov fsub call add and das xor push pop pop imul orl lods mov mov fucom jmp push or sbb and xor cmp dec dec push pop pop imul orl lods mov rol rcl fucom jmp pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor add or sbb and xor push pop pop imul (bad) mov stos mov mov fndisi(8087 out repz incl and das xor push pop pop fs jbe (bad) mov lods mov mov fsub call push or sbb and xor cmp dec dec push pop pusha imul orl lods mov mov fucom call push or sbb and xor cmp pop pusha data16 jb jle mov lods mov mov fucom jmp pop or sub aaa cmp pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and sub cmp inc dec push push pop bound je addb stos mov mov fnop out repnz incb adc sbb daa sub pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor xor aas inc dec push push pop arpl jne addl mov fneni(8087 out repnz incb adc sbb sub xor inc inc dec push pop pop fs jbe (bad) mov stos mov mov fsub call add and das xor push pop pop fs jbe addl mov fnop out repnz add adc sbb sub xor inc inc dec push pop pop fs jbe (bad) mov stos mov mov fneni(8087 out repnz incb adc sbb daa cs inc inc dec push push pop arpl jne addl mov (bad) in icebp idiv add push adc and sub cmp pop bound je addb stos mov mov (bad) in icebp idiv add unpckhps and sub dec push push pop lret lret lret lret lret lret lret lret lret lret imul xchg cltd lahf movsl stos mov mov fneni(8087 out repnz incb adc sbb sub xor inc inc dec push push pop arpl jne addl mov fndisi(8087 out repz incl and cs inc inc dec push pop pop arpl jne addl mov fnop out repnz incb and cs inc inc dec push pop pop fs jbe (bad) mov lods mov mov fndisi(8087 out repz incl and das xor push pop pop imul orl lods mov mov fsub call push or sbb and xor cmp pop pusha data16 jb jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insl jae jg mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xchg popf mov rol rcr fsubp ljmp adc and sub cmp inc dec dec push pop popa insl jae addb stos mov mov (bad) in icebp idiv add unpckhps and sub dec push push pop bound je addb stos mov mov fnop out repnz incb adc sbb sub xor aas inc dec push push pop arpl jne addl mov fndisi(8087 out repnz incb adc sbb sub xor inc inc dec push pop pop fs jbe (bad) mov stos mov mov fndisi(8087 out repz add or pop sbb cmp dec push pop pop imul (bad) mov lods mov mov fsub call add and xor cmp dec push pop pop imul orl lods mov mov lret lret lret lret lret lret lret lret lret lret rcl fucom jmp push or sbb and xor cmp dec dec push pop popa data16 jae jle mov scas mov rol rcr fsubp ljmp adc and sub cmp inc dec push push pop bound jae addb stos mov mov fnop out repnz incb unpckhps and sub dec push push pop arpl jne addl mov fnop out repnz incb unpckhps and sub dec push push pop bound je addb test (bad) int3 rcr (bad) jmp idiv add push adc and sub cmp inc dec push push pop bound je addb test (bad) int3 rcr fsubp ljmp adc and sub cmp inc dec push push pop bound je addb test (bad) int (bad) in lock lret lret lret lret lret lret lret lret lret lret add push adc and sub cmp inc dec push push pop bound je jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insl jae jle mov scas mov rol rcr fsubp ljmp adc and sub aaa cmp pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop pusha data16 jb jge mov lods mov mov fucom jmp pop or sub aaa cmp pop pusha data16 jb jle mov scas mov mov fsubp ljmp adc and sub aaa cmp pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and lret lret lret lret lret lret lret lret lret lret lret cmp inc dec push push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and sub cmp inc dec push push pop bound je jg mov scas mov rol rcr fsubp ljmp adc and sub aaa cmp pop bound je addb test (bad) int (bad) in lock add push adc and inc dec dec push pop popa insb jae jg mov scas mov rol rcr (bad) jmp idiv add push adc and sub aaa cmp pop popa insb jb jle mov scas mov rol rcr fsubp ljmp adc and sub aaa cmp pop popa insl jae jle mov scas mov mov fsubp ljmp adc pop and inc dec dec push lret lret lret lret lret lret lret lret lret lret lret pop pusha data16 jb jle mov lods mov mov fsub call pop or sub aaa cmp dec dec push pop pusha data16 jb jle mov scas mov rol rcr fucom jmp pop or sub aaa cmp pop pusha data16 jb jle mov lods mov mov fsub call push or pop sbb cmp dec push pop pop imul orl lods mov mov fsub call add and das xor inc inc dec push pop pop fs jbe (bad) mov stos mov mov fneni(8087 out repnz incb adc sbb daa sub dec push push pop bound je addb stos mov mov fnop out repnz add unpckhps and sub dec push push pop arpl je or xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor movsb stos mov mov fnop out icebp idiv add unpckhps and sub cmp inc dec push push pop bound jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop pusha data16 jb jle mov lods mov mov fsub call push or sbb and xor cmp dec dec push pop pusha data16 jb jge mov lods mov mov fsub call add and das xor push pop pop imul orl lods mov mov fsub call add and das xor push pop pop imul (bad) mov lods mov mov fsub out repz incl and das xor push pop pop fs jbe (bad) mov lods lret lret lret lret lret lret lret lret lret lret mov mov fsub call add and das xor push pop pop fs jbe (bad) mov stos mov mov fsub call push or sbb and das xor push pop pop imul (bad) mov lods mov mov fsub call add and das xor push pop pop imul orl lods mov mov fsub call pop or sub ss dec dec push pop pusha data16 jb jle mov lods mov mov fucom jmp push or sbb inc lods mov (bad) in icebp idiv add unpckhps xor inc inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repz incb unpckhps and inc inc dec push pop pop arpl pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor outsb je jg mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov fcomp in out hlt cli add and sub dec dec push pop pusha imul addl mov rol rcl fsub out repnz add push adc push and das xor push push pop bound jae jle mov stos mov mov xlat fsub out repnz std add push adc pop and das xor push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub lret lret lret lret lret lret lret lret lret lret lret lret inc inc dec push pop pop arpl je addb cmpsl lods mov mov fcomp jecxz out hlt cli incl and sub ss inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and daa sub cmp pop pop fs jne addb test mov mov fcmovu in lock add or pop sbb daa sub dec dec push pop pop fs jne addb cmpsb lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt lret lret lret lret lret lret lret lret lret lret cli incl and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out cmc cli add or pop sbb daa sub dec dec push pop pop fs jne addb cmpsl lods add aad loopne jmp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov test (bad) (bad) fsub out repnz add or sub xor push push pop bound jb jle mov stos mov mov xlat fsub out repnz incb or adc pop and inc inc dec push push pop arpl jae jle mov stos mov mov fcomp jecxz out hlt stc incl adc xor cmp inc dec push pop pop arpl je jg mov lods mov mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor ret enter fsubp jmp add and sub aaa cmp pop pop imul xchg xchg pushf mov mov (bad) in lock sti add or push sbb daa sub inc dec dec push pop pusha imul (bad) xchg test vaddsubps fndisi(8087 out repnz add or sub xor push push pop popa insb jb jge mov stos mov mov xlat fsub call add push adc pop and inc inc dec push push pop bound jb jge mov test (bad) lret rcl fsub out repnz std add push adc pop and xor push push pop bound jb jge mov stos scas mov rol rcl fsub out repz incb or adc pop and inc inc dec push push pop bound jb jge lret lret lret lret lret lret lret lret lret lret lret lret mov stos mov mov (bad) fsub call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov rcr fsubp jmp add and sub aaa cmp pop pop imul nop xchg fwait mov mov fcomp in out hlt cli incl and sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec lret lret lret lret lret lret lret lret lret lret dec push pop popa data16 jno jl mov test vaddsubps fndisi(8087 out repnz add or sub xor aas inc dec dec push pop add insb jb jge mov stos scas mov rol rcl fsub out repnz std add push adc push and das xor aas inc dec push push pop pusha imul (bad) mov test (bad) aad loope in icebp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb daa sub dec dec push pop pop fs jne addb cmpsb lods mov mov (bad) in out hlt cli incl and sub aaa cmp inc dec push pop pop arpl jae jle mov stos mov mov fcomp jecxz out repz incb lret lret lret lret lret lret lret lret lret lret lret lret adc xor cmp inc dec push push pop bound jae jle mov stos mov mov (bad) fsub add out hlt stc incl adc xor cmp dec dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out cmc cli add and sub cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out hlt cli incl and sub dec dec push pop pop gs jne addb test mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov aam loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov lret lret lret lret lret lret lret lret lret lret fnop in icebp idiv add or pop sbb cmp inc dec push push pop pusha data16 jno js orl stos scas mov rol rcl fsub out repnz std add push adc pop and das xor push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out repz incl unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt stc incl and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop imul xchg xchg lret lret lret lret lret lret lret lret lret lret lret lret pushf mov mov (bad) in out cmc cli add pop or pop sbb cmp inc dec dec push pop pop gs jbe addl mov aam loopne jmp idiv add or sbb cmp inc dec dec push pop pusha imul (bad) xchg test (bad) lret fnop in icebp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov test (bad) aad loopne jmp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov test vaddsubps fndisi(8087 out repnz add or sub xor push push pop lret lret lret lret lret lret lret lret lret lret lret lret lret insl jb jle mov movsl stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out repz incl unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub ss inc dec push push pop bound jae jg mov stos mov mov fcomp jecxz out repz incl unpckhps and inc inc dec push push pop arpl jae jle mov lods mov mov fcomp jecxz out hlt stc incl and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add add pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop and sub dec dec push pop pop imul addl mov aad loopne in icebp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pop gs jbe addl mov aam (bad) jmp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb sub dec dec push pop pop gs jne addb cmpsl lods mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov rol rcl fsub lret lret lret lret lret lret lret lret lret lret out repnz std add push adc pop and xor cmp dec push push pop bound jb jge mov test (bad) aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha data16 jno jl xchg test (bad) aad loope in icebp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov test vaddsubps fndisi(8087 out repnz add push adc push and das xor push push pop popa data16 jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and das xor dec push pop pop arpl jae jg mov lret lret lret lret lret lret lret lret lret lret lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out cmc cli add and sub aaa cmp inc dec push pop pop arpl jae jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl je jg mov stos mov mov fcomp in out cmc cli add and sub dec dec push pop pop imul nop xchg fwait mov mov xlat fucom call add adc xor cmp inc dec push pop pop arpl je jg mov lods mov mov rcr (bad) ljmp adc sbb sub dec dec push pop pop gs pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop jo jnp xchg lods mov mov fcmovu in lock add or pop sbb sub xor aas inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov test vaddsubps fndisi(8087 out repnz add or sub xor aas inc dec dec push pop popa data16 jno jl mov test (bad) aad loope in icebp idiv add or sub xor aas inc dec dec push pop pusha imul (bad) xchg test (bad) lret fnop in lock add or pop sbb daa sub dec dec add imul addl mov aad loopne jmp idiv add or sub lret lret lret lret lret lret lret lret lret lret lret cmp inc dec dec push pop pusha imul addl mov aad loopne in icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl mov test (bad) lret rcl fsub out repnz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub aaa cmp inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp inc dec push pop pop arpl jae jle mov stos mov mov (bad) faddl jecxz out hlt cli incl and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out repz lret lret lret lret lret lret lret lret lret lret add adc xor cmp dec dec push pop pop arpl je jg mov lods mov mov fcomp in out hlt cli add and sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb sub dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul js orl stos scas mov rol rcl fsub out repnz std add push adc pop and xor push push pop bound jb jle mov stos mov mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop rol rcl fsub out repnz std add push adc pop and das xor push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl and sub ss inc dec push pop pop arpl je jg mov stos mov mov fcomp in out hlt cli incl and sub aaa cmp dec dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add push or pop sbb cmp inc dec dec push pop pop gs jbe addl mov aam (bad) ljmp adc sbb cmp inc dec push push pop pusha imul or xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor mov mov fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov test vaddsubps fndisi(8087 out repnz add or sub xor push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out repnz add push adc push and das xor push push pop bound jae jle mov stos mov mov (bad) fsub out repnz std add push adc pop and das xor push push pop bound jae jle mov nop xchg fwait mov mov xlat fucom call add push adc pop and das xor push push pop bound jae jle mov stos mov mov (bad) fsub out repnz add or sub xor aas inc lret lret lret lret lret lret lret lret lret lret lret lret dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop pusha imul (bad) xchg test (bad) aad loopne jmp idiv add or sub xor ds dec dec push pop pop gs jne addb cmpsl lods mov mov fcmovu in lock sti add or pop sbb daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov fnop in lock add or add push and das xor push push pop popa insb jb jge mov test (bad) (bad) fsub out repnz std add push adc push and das xor push push pop popa insb jb jge mov test (bad) aad loope in repnz add lret lret lret lret lret lret lret lret lret lret lret lret lret sbb and das xor push push pop popa insl jb jge mov stos mov mov (bad) fsub out repnz add push adc pop and xor push push pop bound jae jle mov stos mov mov xlat fsub out repz incb or adc xor cmp dec push push pop bound jae jle mov stos mov mov xlat fsub call add push adc pop and inc inc dec push pop pop arpl je jg mov cmpsl lods mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pusha imul addl mov aam (bad) jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov lret lret lret lret lret lret lret lret lret lret lret lret aad loopne jmp idiv add or sub xor ds dec dec push pop pop gs jbe addl mov aad loopne jmp idiv add or sbb cmp inc dec dec push pop pusha imul orl mov aad loope in icebp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov stos scas mov rol rcl fsub out repz incb or adc pop and cmp inc dec push pop pop arpl jae jg mov stos mov mov fcomp jecxz out hlt stc incl and sub ss inc dec push push pop bound jae jle mov stos scas mov rol rcl fsub call add push adc pop and inc inc dec push push pop popa insb jb jge mov lret lret lret lret lret lret lret lret lret sahf movsb test (bad) aad loope in icebp idiv add or sub xor aas inc dec push push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop gs jne addb cmpsl lods mov mov fcomp jecxz out hlt stc incl adc sbb es aaa cmp inc dec push pop pop arpl jae jle mov stos mov add fucom call add unpcklps and inc inc dec push push pop arpl jae jle mov stos mov mov fcomp jecxz out repz incb unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov (bad) fsub out repnz add or sub xor aas inc dec push lret lret lret lret lret lret lret lret lret lret push pop popa data16 jno jge mov test (bad) (bad) fndisi(8087 out repnz add or sub xor aas inc dec push push pop popa data16 jb jge mov test vaddsubps fndisi(8087 out repnz add or sub xor inc inc dec push push pop popa data16 jb jge mov stos mov mov xlat fsub out repz incb or adc pop and inc add push pop pop arpl je jg mov lods mov mov (bad) in out hlt cli incl and sub aaa cmp pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop imul xchg xchg pushf mov mov fcmovu in lock add or pop lret lret lret lret lret lret lret lret lret lret lret and xor ds dec dec push pop pusha imul addl mov aam loopne jmp idiv add or sbb cmp inc dec push push pop pusha imul (bad) xchg test (bad) lret fneni(8087 out repnz add or sub xor inc inc dec push push pop popa insb jb jge mov stos mov mov add fucom call add and sub aaa cmp inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul nop xchg pushf mov mov (bad) in out cmc cli add and sub cmp pop pop fs jne addb cmpsl lods mov mov (bad) lret lret lret lret lret lret lret lret lret lret lret lret in out cmc sti add or push sbb daa sub dec dec push pop pop imul addl mov aam loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha data16 jno jl xchg test (bad) (bad) fndisi(8087 out repnz add push adc push and das xor push push pop popa add jae jg mov stos mov mov fcomp jecxz out repz incb unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out repz incl unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov (bad) in out hlt cli add and sub aaa cmp pop pop imul nop xchg fwait mov lret lret lret lret lret lret lret lret lret lret lret stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop gs jne addl ja orl scas mov rol rcr (bad) ljmp adc and inc dec dec push pop popa insl jae jle mov scas mov mov fsubp jmp pop or sub ss pop pusha data16 jb jle mov lods mov mov fucom jmp pop or sub ss dec dec push pop pusha imul orl lods mov mov fsub call push or sbb and xor cmp dec dec push pop pusha data16 jb pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop js test cmpsl lods mov mov fsub call push or pop sbb cmp dec push pop pop imul orl lods mov add fucom jmp push or sbb and das xor push pop pop gs jbe orl lods mov mov fsub call add and das xor push pop pop fs jbe addl mov fndisi(8087 out repz incb adc sbb sub xor inc inc dec push pop pop fs jne addl mov fndisi(8087 out repnz incb adc xor aas inc dec push push pop arpl je addb test (bad) int (bad) in lock add push adc and sub cmp inc dec push push pop popa insl jae jg mov lret lret lret lret lret lret lret lret lret lret test mov rol rcl fucom jmp pop or sub aaa cmp pop pusha data16 jb jle mov test mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop pusha data16 jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop pusha data16 jb jle mov scas mov rol rcl fucom jmp pop or sub ss dec dec push pop pusha data16 jb jge mov lods mov mov fucom jmp pop or sub ss dec dec push pop pusha data16 jb jge mov lods mov mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor lret rcl fucom call pop or sub ss dec dec push pop pusha data16 jb jge mov test mov rol rcl fucom jmp pop or sub aaa cmp pop pusha data16 jb jle mov lods mov mov fucom jmp push or sbb and xor cmp dec dec push pop pusha data16 jb jle mov lods mov mov fucom jmp pop or sub ss dec dec push pop pusha data16 jb jle mov lods mov mov fucom call push or sbb and xor cmp inc dec push pop pop imul orl lods mov mov fsub call add and das xor push pop pop fs jbe (bad) mov lods mov mov fsub call pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop out hlt cli incl and cs inc inc dec push push pop arpl jne add lahf movsl stos mov mov fnop out repnz incb adc sbb daa sub dec push push pop bound je addb test (bad) int fcomp in lock add push adc and sub cmp inc dec push push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insl jae jle mov scas mov rol rcr fsubp jmp pop or sbb and xor cmp dec push pop pop imul orl lods mov mov fsub call add and das xor push pop pop fs jbe (bad) mov lods mov mov fsub out repz incl lret lret lret lret lret lret lret lret lret pop sbb cmp dec push pop pop add ja orl lods mov mov fucom jmp push or sbb and xor cmp dec dec push pop pusha imul orl lods mov mov fucom jmp push or sbb and xor cmp dec push pop pop imul orl lods mov mov fsub out repz incl or sbb and das xor push pop pop fs jbe addl mov fcmovu in icebp idiv add push adc and sub cmp inc dec push push pop bound jae jg mov scas mov rol rcl fucom jmp push or sbb cmp dec push pop pop imul (bad) mov lods mov mov fndisi(8087 out repz incl and cs lret lret lret lret lret lret lret lret lret lret cmp dec add pop imul orl lods mov mov fsub call add and das xor push pop pop fs jbe (bad) mov lods mov mov fsub out repz incl and das xor push pop pop fs jbe (bad) mov stos mov mov fndisi(8087 out repz incl and cs inc inc dec push pop pop fs jbe (bad) xchg stos mov mov fnop out repnz incb adc sbb sub xor inc inc dec push push pop arpl jne addl mov fnop out icebp idiv add unpckhps and sub dec push push pop arpl je addb stos mov mov (bad) in icebp idiv add unpckhps and sub cmp aas inc dec push lret lret lret lret lret lret lret lret lret lret lret lret pop arpl jne addl mov fnop out repnz add unpckhps and sub dec push push pop bound jne addb stos mov mov fcmovu in icebp idiv add unpckhps and sub dec push push pop bound je addb stos mov mov (bad) in icebp idiv add unpckhps and sub cmp inc dec push push pop bound je addb test enter (bad) jmp idiv add unpckhps and sub cmp inc dec push push pop bound je addb test (bad) int (bad) in icebp idiv add unpckhps and sub dec push push pop bound je addb test (bad) int (bad) in icebp idiv add push adc and add xor inc inc dec push push pop arpl jne lret lret lret lret lret lret lret lret lret lret addl mov fnop out icebp idiv add unpckhps and sub dec push push pop arpl jne addl mov fnop in icebp idiv add unpckhps and sub cmp inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop pusha data16 jb jle mov lods mov mov fucom jmp push or sbb and xor cmp dec dec push pop pop imul orl lods mov mov fsub call push or pop push and das xor push pop pop gs ja (bad) mov lods mov mov fsub call push or add pop and inc dec dec push pop pusha data16 jb jle mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop cmpsl lods mov mov fucom jmp push or sbb and xor cmp dec dec push pop pusha data16 jb jle mov lods mov mov fucom call push or sbb and xor cmp dec dec push pop pusha data16 jb jge mov lods mov mov fsub call push or sbb and das xor push pop pop imul orl lods mov mov fsub call push or pop sbb cmp dec push pop pop imul (bad) mov lods mov mov fsub call add and das xor push pop pop gs jbe (bad) mov lods mov mov fsub call add or sbb and xor cmp dec dec push pop pop imul (bad) mov stos mov mov xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor aad loope in repz incl and cs inc inc dec push pop pop fs jbe addl mov fnop out repnz std add adc sbb sub dec push push pop arpl jne addl mov fnop out icebp idiv add unpckhps and sub dec push push pop arpl je addb test (bad) int3 rcr fsubp jmp pop or sub ss inc dec push pop pusha data16 jb jge mov lods mov mov fucom call push or sbb and xor push pop pop imul orl lods mov mov fsub call add or sub ss dec dec push pop pusha data16 jb jle mov lods mov mov fucom jmp lret lret lret lret lret lret lret lret lret lret sti add or sub ss dec dec push pop pusha imul orl lods mov mov fucom jmp pop or sbb and xor cmp dec dec push pop pop imul orl lods mov mov fndisi(8087 out repz incl and das xor push pop pop fs jbe (bad) mov stos mov mov fndisi(8087 out repz incb adc sbb sub xor push pop pop fs jbe (bad) xchg stos mov mov fnop out repnz incb unpckhps and sub dec push push pop arpl jne addl mov add loope in repnz incb adc sbb sub xor aas inc dec push push pop arpl je addl mov fnop out repnz incb unpckhps pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor sbb daa sub dec push push pop bound je addb stos mov mov (bad) in icebp idiv add unpckhps and sub cmp inc dec push push pop popa insl jae jg mov scas mov rol rcr (bad) jmp idiv add unpcklps and sub cmp inc dec push push pop bound jae jg mov scas mov rol rcr fsubp ljmp adc and sub aaa cmp pop popa insl jae jle mov scas mov rol rcl fucom jmp pop or sub aaa cmp pop pusha data16 jb jle mov scas mov mov fcomp in lock add or sub ss dec dec push pop pusha data16 jb jle mov lods mov mov fsub call push or pop sbb cmp pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor inc inc dec push pop pop fs ja (bad) mov lods mov mov fsub out repz incl and das xor inc inc dec push pop pop fs jne addl mov fnop out repnz add unpckhps and sub cmp inc dec dec push pop popa insl jae jle mov lods mov mov fucom jmp pop or sub aaa cmp dec dec push pop pusha data16 jb jle mov lods mov mov fucom jmp pop or sub ss dec dec push pop pusha data16 jno jge mov add lret rcl fucom jmp push or sbb and xor cmp dec dec push pop pusha data16 jb jle mov lods mov mov fsub call push or sbb and das xor push pop pop lret lret lret lret lret lret lret lret lret lret lret lret jno jge mov lods mov mov fsub call push or sbb and das xor push pop pop imul orl lods mov mov fsub call push or pop sbb cmp dec push pop pop fs jbe (bad) mov lods mov mov fsub call add and das xor push pop pop imul (bad) mov lods mov mov fsub call push or pop sbb cmp dec push pop pop fs jne addl mov ret leave iret aad loope in repz incl and das xor inc inc dec push pop pop arpl jne addl mov (bad) in icebp idiv add unpckhps and sub dec push push pop bound je addb xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop mov scas mov rol rcr (bad) jmp idiv add push adc and sub cmp inc dec push push pop bound je jg mov scas mov rol rcr fucom jmp pop or sub ss dec dec push pop pusha data16 jb jle mov scas mov mov fucom jmp pop or sub ss dec dec push pop pop imul test cmpsl lods mov mov fucom jmp push or sbb and xor cmp dec dec push pop pop imul add test mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insb jb jle mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insl jae jle mov scas lret lret lret lret lret lret lret lret lret lret lret mov fcomp jecxz out cmc sti add push adc and inc dec dec push pop popa insl jae jle mov scas mov rol rcr fsubp jmp pop or sub aaa cmp pop popa insl jae jle mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insl jae jle mov scas mov rol rcl fucom jmp pop or sub aaa cmp pop pusha data16 add jg mov scas mov rol rcr (bad) jmp idiv add push adc and sub cmp inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insl jae jg mov scas mov rol rcr lret lret lret lret lret lret lret lret lret lret lret ljmp adc pop and inc dec dec push pop pusha data16 jb jle mov scas mov rol rcl fucom jmp or sub aaa cmp pop pusha data16 jb jle mov scas mov mov fucom jmp pop or sub aaa cmp pop pusha data16 jb jle mov lods mov mov fucom jmp push or sbb and xor cmp dec dec push pop add outsb je jg mov scas mov rol rcr fsubp ljmp adc and sub aaa ds dec dec push pop popa insl jae jg mov scas mov rol rcr (bad) ljmp adc and sub cmp pop popa insl jae jg mov scas mov rol rcr fsubp ljmp xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop or adc pop and inc dec dec push pop pusha data16 jb jle mov lods mov mov fucom jmp pop or sbb and xor cmp dec dec push pop pusha data16 jno jge mov lods mov mov fsub call push or sbb and xor cmp dec dec push pop pop imul orl lods mov mov fsub call push or sbb and xor cmp dec add pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec push push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and sub aaa cmp pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc pop and lret lret lret lret lret lret lret lret lret lret lret lret cmp pop popa insb jb jle mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insl jae jle mov scas mov mov fsubp ljmp adc pop and inc dec dec push pop pusha data16 jb jle mov scas mov rol rcl fucom jmp or adc pop and ds dec push push pop bound jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insl jae jg mov scas mov mov fucom call push or pop sbb cmp dec push pop pop imul (bad) mov lods mov mov fndisi(8087 out repz incl and cs inc inc dec push lret lret lret lret lret lret lret lret lret lret lret fs jbe (bad) mov stos mov mov fndisi(8087 out repz incb adc sbb sub xor inc inc dec push pop pop arpl jne addl mov fneni(8087 out repnz incb adc sbb daa sub dec push push pop arpl je addb stos mov mov fnop out repnz incb unpckhps and sub xor inc inc dec push pop pop fs jne addl mov fnop out repz incb adc sbb sub xor inc inc dec push push pop arpl jne addl mov fnop out repnz std add adc sbb sub dec push push pop arpl jne addl mov (bad) in icebp idiv add unpckhps and sub cmp inc dec push push pop arpl jne lret lret lret lret lret lret lret lret lret lret addl mov fnop in icebp idiv add unpckhps and sub dec push push pop arpl jne addb stos mov mov (bad) in icebp idiv add unpckhps and sub dec push push pop bound je addb stos mov mov fnop out icebp idiv add lldt sbb sub xor aas inc dec push push pop arpl jne addb stos mov mov fnop out repnz add unpckhps and sub cmp inc dec push push pop popa insl jae jg mov scas mov mov fucom jmp pop or sub aaa cmp dec dec push pop pusha data16 jb jle mov lods mov mov fucom jmp pop or sub ss dec dec push pop pusha data16 jno jge mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor (bad) xlat fsub call push or sbb and xor cmp dec dec push pop pusha data16 jb jle mov lods mov mov fsub out repz incl and cs aas inc dec push pop pop imul xchg cltd lahf movsl stos mov mov fnop out repnz add add and das xor push pop pop fs jbe orl lods mov mov fsub out repz incl and cs inc inc dec push push pop arpl je addb stos mov mov fnop out repnz add unpckhps and sub dec push push pop bound je addb test (bad) int fnop out repnz incb or adc xor aas inc dec push push pop bound je addb stos mov mov xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor int (bad) in icebp idiv add unpckhps and sub dec push push pop bound je addb test (bad) int (bad) in lock add push adc and sub cmp inc dec push push pop bound je jg mov scas mov rol rcr (bad) add repnz add unpckhps and sub dec push push pop arpl jne addl mov fnop out repnz incb unpckhps and sub dec push push pop arpl je addl mov fnop out repnz incb unpckhps and sub dec push push pop arpl je addb stos mov mov fnop out repnz incb adc sbb daa sub dec push push pop arpl jne addb stos mov mov fnop out repnz lret lret lret lret lret lret lret lret lret lret lret add adc sbb sub dec push push pop arpl jne addl mov fnop out repnz incb adc sbb sub xor inc inc dec push push pop arpl jne addl mov add loope in repz incl adc sbb sub cmp inc dec push lea fnclex out repz incl and push pop bound jae jg mov scas mov ror aam loopne in repnz incb adc sbb sub xor inc inc dec push pop pop fs jbe (bad) mov stos mov mov fsub call pop or sub ss dec dec push pop pusha data16 jb jle mov scas mov rol rcr fsubp jmp pop or sub cmp inc dec push push pop bound je addb pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor ret leave iret aad loope in repz incl cmp dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc sti add or pop sbb daa sub dec dec push pop pop imul (bad) xchg test (bad) (bad) fndisi(8087 out repnz add push adc push and das xor push push pop popa insl jb jge mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov lods mov mov fcomp in out hlt cli add and sub cmp pop pop fs jne addb cmpsl lods mov mov fnop out icebp idiv add or sub xor aas inc dec push push pop add insl jae jle lret lret lret lret lret lret lret lret lret lret lret lret lret xchg lcall rol rcr fucom jmp add and sub aaa cmp pop pop imul xchg xchg pushf mov mov fcmovu in lock add or sbb cmp inc dec dec push pop pusha data16 jno jl xchg test (bad) (bad) fndisi(8087 out repnz add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl and sub cmp pop pop gs jne addb test mov mov fcmovu in lock add or pop sbb cmp inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repz incl and sub aaa cmp dec dec push lret lret lret lret lret lret lret lret lret lret lret fs jne addb cmpsl lods mov mov fcmovu in lock sti add or pop sbb cmp inc dec dec push pop pusha imul (bad) mov test vaddsubps fndisi(8087 out repnz add push adc pop and das xor push push pop popa insl jb jle mov stos mov mov fcomp jecxz out repz incl unpckhps and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in lock sti add or pop sbb sub dec dec push pop pusha imul addl mov (bad) fndisi(8087 out repnz add push adc push and das xor push push pop popa insl jb jge mov (bad) xchg lcall ret rcr fsubp ljmp adc sbb lret lret lret lret lret lret lret lret lret lret daa sub dec dec push pop pop fs jne addl mov aam loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jno jl mov test vaddsubps fsub out repnz add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and sub aaa cmp pop pop imul nop xchg pushf mov mov (bad) in out cmc cli add or pop sbb daa xor ds dec dec push pop pusha imul (bad) xchg test (bad) (bad) fndisi(8087 out repnz add push adc push add inc inc dec push pop pop arpl je jg mov lods mov mov fcomp in out lret lret lret lret lret lret lret lret lret lret lret lret hlt cli incl and sub aaa cmp pop pop gs jbe addl mov aad loopne jmp idiv add or sbb cmp inc dec push push pop pusha imul orl stos scas mov rol rcl fsub out repnz incb or adc pop and inc inc dec push push pop arpl jae jg mov lods mov mov (bad) in out cmc cli add and sub dec dec push pop pop fs jne addb cmpsl lods mov mov fcmovu in lock sti add or pop sbb cmp inc dec dec push pop pop gs jbe addl add xlat fsub out repz incb unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor (bad) int fcomp in out hlt cli add and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock add or sub xor aas inc dec push push pop pusha imul (bad) mov test vaddsubps fndisi(8087 out repnz add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub aaa cmp pop pop imul nop xchg pushf mov mov (bad) in out cmc cli add or push sbb daa sub dec add pop popa data16 jno jge mov test vaddsubps fsub out repnz std add push adc pop and das xor push push pop bound jae jle mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor stos mov mov fcomp jecxz out hlt stc incl adc xor cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc sti add or push sbb daa sub dec dec push pop pop imul (bad) xchg test vaddsubps fsub out repnz std add push adc pop and xor push push pop bound jae jle mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul xchg xchg pushf mov mov fcmovu add in icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov test (bad) (bad) fsub out repnz std add push adc pop and xor push push lret lret lret lret lret lret lret lret lret lret lret lret lret push test movsl stos mov mov fcomp jecxz out hlt cli incl and sub ss inc dec push pop pop arpl jae jle mov stos mov mov xlat fsub out repnz incb unpcklps pop and inc inc dec push push pop arpl jae jg mov stos mov mov fcomp jecxz out hlt cli incl and sub dec dec push pop pop gs jbe addl mov aad loopne jmp idiv add or sub xor push push pop popa insl jb jns test movsl stos mov mov xlat fucom call add unpckhps and sub ss dec dec push pop pop imul xchg xchg pushf mov mov (bad) in lock sti add or pop sbb lret lret lret lret lret lret lret lret lret lret lret daa sub dec dec push pop pop gs jbe addl mov aam (bad) ljmp adc sbb daa sub aaa cmp pop pop imul xchg xchg pushf mov mov fcmovu in lock add or pop sbb sub dec dec push pop pusha imul addl mov aad loopne in icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov stos mov mov xlat fsub out repz incb add adc xor cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc sti add or pop sbb daa sub dec dec push pop pop gs jne addl mov aad loope in lret lret lret lret lret lret lret lret lret lret lret icebp idiv add or sub xor push push pop popa insb jb jge mov stos mov mov xlat fsub call add unpckhps and inc inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt cli add or pop sbb daa sub dec dec push pop pop imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg movsb stos scas mov rol rcl fsub out repnz incb or adc pop and inc inc dec push pop pop arpl je jg mov stos mov mov fcomp in out hlt cli add and sub aaa cmp pop pop gs jne addb test mov lret lret lret lret lret lret lret lret lret lret lret lret mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha data16 jno jge mov test vaddsubps fndisi(8087 out repnz add push adc push and das xor push push pop popa insl jb jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl je jg mov lods mov mov (bad) in lock sti add or pop sbb sub inc dec push push pop pusha data16 jno jl xchg stos scas mov rol rcl fsub out repnz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp pop pop fs jne addb xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop mov lods mov mov fnop out icebp idiv add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test vaddsubps fndisi(8087 out repnz std add push adc pop and das xor push push pop bound jae jle mov stos mov mov xlat fucom call add adc xor cmp dec dec push pop pop arpl je jg mov lods mov mov aam (bad) jmp idiv add or pop sbb cmp inc dec push push pop pusha data16 jno jl xchg test (bad) (bad) fndisi(8087 out repnz add push adc pop and das xor push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push lret lret lret lret lret lret lret lret lret lret lret pop arpl jae jg mov lods mov mov fcomp in out hlt cli incl and sub aaa cmp dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb sub dec dec push pop pop gs jbe addl mov aad loope in icebp idiv add or sub xor aas inc dec push push add insl jae jle mov stos mov mov fcomp jecxz out repz incl unpckhps and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc sti add or push sbb daa sub dec dec push pop pop gs jne addl mov aad loopne jmp idiv add or pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop and cs aas inc dec dec push pop pusha imul (bad) xchg test (bad) aad loope in repnz add push adc pop and das xor push push pop bound jb jle mov stos mov mov xlat fsub out repz incb unpcklps and inc inc dec push pop pop arpl je jg mov stos mov mov xlat fucom call incl and sub cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc sti add or pop sbb sub xor aas inc dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb es aaa cmp pop pop fs jne addb cmpsl lods mov mov fcomp in pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop jmp add and sub ss inc dec push pop pop arpl je addb cmpsl lods mov mov (bad) in out cmc cli add and sub cmp pop pop fs jbe addl mov aam loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul jge mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc sti add or pop sbb daa sub dec dec push pop pop gs jne addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov test lret lret lret lret lret lret lret lret lret mov mov fsub out repnz add push adc pop and das xor push push pop popa insl jb jge mov stos mov mov xlat fsub call add adc xor cmp inc dec push push pop bound jae jle mov stos mov mov xlat fsub out repnz incb add adc xor cmp inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt stc incl and sub cmp pop pop fs jne addb cmpsl lods mov mov fcmovu in lock sti add or pop sbb cmp inc dec dec push pop pusha imul (bad) mov test (bad) (bad) fndisi(8087 out repnz add push adc push and das xor push push pop bound jae lret lret lret lret lret lret lret lret lret lret lret lret test movsl stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha imul (bad) mov movsl stos mov mov xlat fucom call add unpckhps and inc inc dec push push pop arpl jae jg mov lods mov mov (bad) in out cmc sti add or pop sbb daa sub dec dec push pop pop gs jne addb test mov mov fnop in lock add or sbb cmp inc dec dec push pop pusha imul addl mov (bad) fndisi(8087 out repnz add push adc push and das xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor push pop bound jb jle mov stos mov mov xlat fucom call add adc xor cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in lock sti add or pop sbb add aas inc dec push push pop popa data16 jb jge mov test (bad) aad loopne jmp idiv add or sub xor aas inc dec push push pop pusha imul addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pop imul addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop gs jbe addl mov aad loopne jmp idiv add or pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop adc sbb cmp inc dec push push pop popa insb jb jge mov test (bad) aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul (bad) mov test add int3 rcl fucom call add unpckhps and inc inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub dec dec push pop pop imul xchg xchg pushf mov mov (bad) in lock sti add or pop sbb sub dec dec push pop pusha imul addl mov (bad) fndisi(8087 out repnz add push adc pop and das xor push push pop bound jb jle mov stos mov mov fmul pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor fucom call add unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov (bad) in lock sti add or pop sbb sub dec dec push add data16 jno jge mov test (bad) (bad) fsub out repz incb unpcklps and inc inc dec push push pop arpl jae jg mov stos mov mov fcomp jecxz out hlt stc incl and sub cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc sti add or push sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sbb cmp inc dec push push pop popa insb jb jge mov lret lret lret lret lret lret lret lret lret lret lret mov rol rcl fsub out repnz std add unpcklps pop and inc inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz add cmc sti add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test (bad) lret fnop in lock add or pop sbb cmp inc dec dec push pop pop fs jne addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop imul xchg xchg pushf mov mov (bad) in lock sti add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop gs pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor jo jnp xchg cmpsl lods mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha imul jge mov stos scas mov rol rcl fsub out repz incb or adc pop and inc inc dec push push pop bound jae jg mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul xchg xchg pushf mov mov fcomp jecxz out hlt cli incl and sub dec dec push pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt stc incl unpckhps and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out cmc sti add or push sbb daa sub lret lret lret lret lret lret lret lret lret lret ds dec dec push pop pop gs jne addb test mov mov fnop in lock add add sub xor push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop imul xchg xchg pushf mov mov (bad) in out cmc sti add or pop sbb sub dec dec push pop pop imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov stos mov mov xlat fucom call add unpcklps and inc inc dec push pop pop arpl jae jg mov lods mov mov fcomp jecxz out hlt cli dec pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop add and sub aaa cmp dec dec push pop pop imul nop xchg pushf add mov fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov test vaddsubps fsub out repz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out cmc cli add and sub cmp pop pop fs jne addb cmpsl lods mov mov fcmovu in lock add or sbb cmp inc dec push push pop pusha data16 jno jl xchg test (bad) (bad) fndisi(8087 out repnz add or sub xor push push pop bound jae jle mov stos mov mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor rcl fucom call add unpckhps and cmp pop pop gs jne addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pusha imul (bad) xchg test (bad) aad loope in icebp idiv add or sub xor inc inc dec push push pop popa insl jae jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc sti add or pop sbb daa sub dec dec push pop pop fs jne addb test mov out clc adc cmp inc dec pop outsl jp xchg pushf cmpsb mov enter jecxz out cmc sti add or lret lret lret lret lret lret lret lret lret lret lret sub cmp inc dec push push pop bound je addb mov fcmovu in lock add or pop sbb dec push pop pop imul orl lods mov rol rcr fsubp ljmp adc and inc dec dec push pop popa insl jae jg mov mov mov fsubp ljmp adc and sub cmp inc dec arpl je jg mov lods mov mov fcomp in out cmc sti add or push sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add or pop sbb sub dec dec push pop pop gs jbe addl mov aam (bad) jmp idiv add or pop sbb xor push push lret lret lret lret lret lret lret lret lret lret lret lret insb jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and das xor push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps and inc inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt stc adc pop and inc dec dec push pop pusha data16 jb jle mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop je jg mov stos mov mov fcomp in out hlt cli incl and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out add sti add or pop sbb cmp inc dec dec push pop lret lret lret lret lret lret lret lret lret lret lret pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jno jl xchg test (bad) aad loopne in icebp idiv add push adc push and das xor push push pop popa insl jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop fs jne addb mov lods mov mov fnop in lock add or pop sbb lret lret lret lret lret lret lret lret lret lret lret sub dec dec push pop pop imul addl mov aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul (bad) mov test vaddsubps fndisi(8087 out repnz add push adc push and das dec dec push pop popa insl jae jle mov scas mov rol rcr (bad) jmp idiv add unpckhps and sub dec push pop pop fs jbe (bad) mov lods mov rcl fsub call add unpckhps and sub aaa cmp pop bound je addb test fnop in icebp idiv add or pop sbb cmp inc dec push push pop popa data16 jno jl add movsl stos mov mov xlat fucom call add unpcklps pop and inc inc dec push pop pop lret lret lret lret lret lret lret lret lret lret lret lret arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop fs jne addb test mov mov fcmovu in lock sti add or pop sbb sub dec dec push pop pusha imul (bad) xchg test (bad) aad loopne in icebp idiv add or sub xor push push pop popa insb jb jge mov stos mov mov xlat fsub call add unpcklps pop and inc inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz std add push adc sbb and inc inc dec push pop pop arpl je jg mov lods mov mov (bad) in out hlt cli incl and lret lret lret lret lret lret lret lret lret lret lret aaa cmp inc dec push pop pop arpl jae jle mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl je jg mov stos mov mov xlat fucom call add adc xor cmp inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt stc incl and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out cmc cli add or pop sbb sub dec dec push pop pop gs jne addl mov mov fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov test vaddsubps fndisi(8087 out lret lret lret lret lret lret lret lret lret lret lret lret idiv add push adc push and das xor push push pop bound jb jge mov stos mov mov (bad) fsub out repnz incb or adc pop and xor push push pop bound jae jle mov stos mov mov xlat fsub out repz incb or adc pop and inc inc dec push push pop bound je jg mov lods mov mov fcomp in out hlt cli incl and sub aaa cmp dec dec push pop pop arpl je jg mov lods mov mov (bad) in lock sti add or pop sbb daa sub inc dec dec push pop pusha imul addl mov aad loope in icebp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov stos scas mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor xlat fsub out repz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push push pop arpl jae jle mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul nop xchg fwait mov mov fcomp jecxz out repz incl adc xor cmp inc dec push pop pop arpl je jg mov lods mov mov aam (bad) jmp idiv add or sbb cmp inc dec dec push pop pusha imul (bad) xchg test (bad) lret fneni(8087 out icebp idiv add or sub xor push push pop popa insb jb jge pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor orl stos scas mov rol rcl fsub out repnz std add push adc pop and das xor push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop arpl je jg mov stos mov mov xlat fsub out repnz std add push adc push and das xor inc inc dec push push pop popa data16 jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and das xor push add bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl adc xor cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add or push sbb daa sub lret lret lret lret lret lret lret lret lret lret lret lret lret push pop pop fs jne addb cmpsl lods mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pop imul addl mov aad loopne in icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl xchg test (bad) aad loopne in repnz add push adc push and das xor push push pop popa insl jb jge mov stos scas mov rol rcl fsub add out repz incl and sub ss inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add lret lret lret lret lret lret lret lret lret adc sbb es cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add or push sbb daa sub aaa cmp pop pop gs jne addl mov aam (bad) ljmp adc sbb sub dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sbb cmp inc dec dec push pop pusha imul jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt cli incl and sub ss inc dec push push pop bound jae jle mov stos mov mov lret lret lret lret lret lret lret lret lret lret lret fcomp jecxz out hlt stc incl adc xor cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub cmp pop pop fs jne addb cmpsb lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add pop or sub xor aas inc dec push push pop popa data16 jno jge mov test vaddsubps fndisi(8087 out icebp idiv add push adc pop and das xor push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and inc inc dec push push pop bound jae jle mov xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop lahf movsl stos mov mov xlat fucom call add unpcklps and inc inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl and sub ss dec dec push pop pop imul nop xchg fwait mov mov (bad) in out cmc cli add and sub cmp pop pop gs jbe addl mov mov fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov stos scas mov rol rcl fsub out repnz add push adc push and das xor push push pop bound jb jle mov stos mov mov xlat fucom call add unpcklps and inc inc dec push push pop arpl pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor jae jle mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp inc dec push pop pop arpl jae jle mov stos mov mov fcomp jecxz out hlt cli incl and sub ss inc dec push push pop bound jae jle mov stos scas mov rol rcl fucom call add unpcklps pop add sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov fcomp in out cmc cli add and sub cmp pop pop imul nop xchg pushf mov mov (bad) in out cmc sti add or pop sbb daa sub dec dec push pop pop gs jbe addl mov aam (bad) jmp idiv add or sbb and lret lret lret lret lret lret lret lret lret lret lret lret lret cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sbb cmp inc dec push push pop popa data16 jno jge mov test vaddsubps fndisi(8087 out repnz add push adc push and das xor push push pop bound jb jge mov stos mov mov rol rcr fucom call add unpckhps and inc inc dec push pop pop arpl je jg mov lods mov mov (bad) in out hlt cli add and sub aaa cmp pop pop imul xchg xchg pushf mov mov fcmovu in lock add or pop sbb sub dec dec push pop pusha imul addl mov (bad) fndisi(8087 out icebp lret lret lret lret lret lret lret lret lret lret idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov stos scas mov rol rcl fsub out repz incb or adc pop and inc inc dec push push pop bound jb jle mov stos mov mov xlat fucom call add unpcklps and inc add push pop pop imul nop xchg fwait mov mov (bad) in out hlt cli add and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or push sbb daa sub cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out hlt cli add or push sbb daa sub dec dec push pop pop fs jne addb test mov lret lret lret lret lret lret lret lret lret lret lret lret leave into aam (bad) ljmp adc sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sbb cmp inc dec push push pop popa data16 jno jl mov test vaddsubps xlat fsub out repnz incb or adc pop and inc inc dec push pop pop arpl jae jg mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop fs jne or xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pop gs jbe addl mov aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha add jb jge mov stos scas mov rol rcl fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl adc xor cmp inc dec push pop pop arpl je jg mov stos mov mov fcomp in out cmc cli add and sub aaa cmp pop pop arpl je jg mov stos mov mov xlat fucom call add unpckhps and sub ss inc lret lret lret lret lret lret lret lret lret lret push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out add sti add or pop sbb cmp inc dec push push pop popa data16 jno jl xchg test (bad) aad loopne in icebp idiv add or sub xor inc inc dec push push outsb jbe (bad) mov lods mov mov out cmc cli add and sub dec dec push pop pop fs jne addb test mov mov fnop in icebp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov (bad) fndisi(8087 out repnz add or sub xor aas lret lret lret lret lret lret lret lret lret lret dec push push pop popa data16 jno jl mov test (bad) (bad) fsub out repnz add push adc push and das xor inc inc dec push push pop popa insb jb jge mov stos scas add rcr fsubp jmp add unpckhps and sub ss inc dec push pop pop arpl je jg mov stos mov mov fcomp in out hlt cli add and sub aaa cmp pop pop imul nop xchg fwait mov mov fcomp in out hlt cli add or push sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add lret lret lret lret lret lret lret lret lret lret lret lret adc push and das xor push push pop popa insb jb jge mov stos scas mov rol rcl fndisi(8087 out repnz add push adc push and das xor dec push pop pop arpl jae jle mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop imul nop xchg fwait mov mov fcomp in out hlt cli incl and sub aaa cmp pop pop imul xchg xchg pushf mov mov (bad) in out cmc sti add or pop sbb daa sub dec dec push pop pop fs jne addb test mov mov fnop in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov lret lret lret lret lret lret lret lret lret lret fndisi(8087 out icebp idiv add or sub xor inc inc dec push push pop popa insb jb jge mov test (bad) add fucom call add unpckhps and inc inc dec push pop pop arpl jae jg mov stos mov mov fcomp jecxz out hlt stc incl adc xor cmp inc dec push push pop bound jae jle mov stos mov mov (bad) fsub call add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add and sub aaa cmp dec dec push pop pop arpl je jg mov lods mov mov (bad) in out hlt cli incl and sub dec dec push pop pop fs jne addb xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor mov fcmovu in lock sti add or pop sbb sub xor aas inc dec dec push pop pusha add jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and xor push push pop bound jae jle mov stos mov mov xlat fsub call add unpcklps pop and inc inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt stc incl and sub aaa cmp inc dec push pop pop arpl je addb cmpsl lods mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pop gs jne addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop pusha lret lret lret lret lret lret lret lret lret lret lret imul (bad) xchg test vaddsubps fsub out repnz incb unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul nop xchg pushf mov mov fcmovu in lock sti add or pop sbb cmp inc dec dec push pop pusha imul addl mov aam (bad) jmp idiv add or sub xor ds dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop pusha imul addl mov aam (bad) ljmp adc sbb daa lret lret lret lret lret lret lret lret lret lret sub dec dec push pop pop gs jne addl sahf mov mov fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl mov test (bad) aad loope in icebp idiv add or sub xor inc inc dec push push pop bound jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and xor push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jae jg mov stos mov mov fcomp jecxz out hlt stc incl adc xor cmp inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out lret lret lret lret lret lret lret lret lret lret lret lret stc incb lldt sbb es aaa cmp pop pop imul nop xchg pushf mov mov (bad) in lock sti add or pop sbb daa sub imul cltd movsb mov (bad) in cli add sbb and inc dec dec push pop popa insl jae jg mov scas mov rol rcr (bad) jmp idiv add unpckhps and sub dec push pop pop imul orl scas mov rol rcr (bad) jmp idiv add adc sbb sub xor inc inc dec push pop pop arpl jne (bad) mov lods mov mov fucom jmp pop or sub aaa cmp pop popa push xchg stos mov mov hlt cli add or sbb and inc dec dec push pop popa insl jae jg mov lret lret lret lret lret lret lret lret lret lret lret lret stos mov mov fnop out repz add or sbb and xor cmp pop popa insw jae jg mov mov mov fsub jmp pop or sub cmp inc dec push push pop arpl ja (bad) mov lods mov mov (bad) jmp idiv add adc push and xor cmp dec dec push pop fs ja test test leave rcl fsub call pop or sub aaa cmp pop popa outsb je addb lods mov mov fnclex call push or sbb and xor cmp dec push pop pop imul orl lods mov mov fucom call push or sbb and das xor push pop pop gs jbe (bad) mov lods mov mov fndisi(8087 out lret lret lret lret lret lret lret lret lret lret lret lret lret incl and das xor push pop pop fs jbe (bad) mov stos mov mov fnop out repnz incb or push sbb daa sub dec push push pop arpl je addb stos scas mov rol rcr (bad) jmp idiv add push adc pop and inc dec dec push pop popa insl jae jg mov scas mov rol rcl fucom jmp pop or sub ss dec dec push pop pusha data16 jb jle mov rol rcl fsub out repnz add push adc push and das xor aas inc dec push push pop popa data16 jno jl mov test vaddsubps fndisi(8087 out icebp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop or sub xor aas inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop gs jbe addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aam loopne jmp idiv add or sub xor ds dec dec push pop pusha imul addl mov aam (bad) jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pop gs jne addl mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop into aam (bad) ljmp adc sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop fs jne addb cmpsb lods mov mov fcomp jecxz out hlt stc incl unpckhps and inc inc dec push push pop bound je jg mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl jae jle mov stos mov mov fcomp jecxz out repz incl unpckhps and inc inc dec push push pop bound jae jle mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor mov rol rcl fucom call add unpcklps pop and inc inc dec push push pop popa insl jb jge mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jb jle mov stos scas mov rol rcl fsub out repz incb or adc pop and das xor push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out repnz std add push adc pop and das xor push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out icebp idiv add push adc push and das xor push push lret lret lret lret lret lret lret lret lret lret lret lret insb jb jge mov test vaddsubps fndisi(8087 out icebp idiv add or sub xor push push pop popa data16 jno jl xchg test (bad) lret fnop in lock add or pop sbb daa sub dec dec push pop pusha gs jne addb test mov mov fcmovu in lock add or pop sbb sub dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop gs jne addl mov aam (bad) ljmp adc sbb daa sub aaa cmp pop pop imul xchg xchg pushf mov mov (bad) in out cmc cli add lret lret lret lret lret lret lret lret lret lret lret lret daa sub cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc sti add or push sbb daa sub cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add or push sbb daa sub cmp pop pop imul nop xchg fwait mov mov (bad) in out cmc cli add and sub aaa cmp pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt cli incl and sub aaa cmp inc dec push pop pop arpl je jg mov stos mov mov xlat fucom lret lret lret lret lret lret lret lret lret lret lret repz incl unpckhps and sub ss inc dec push pop pop arpl jae jg mov stos mov mov fcomp jecxz out repz incb unpckhps and sub aaa cmp inc dec push pop pop arpl jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop arpl jae jle mov stos mov mov xlat fsub call add push adc pop and das xor push push pop bound jae jle mov stos mov mov xlat fsub out repnz std add push adc pop and das xor push push pop bound jae jle mov stos mov mov xlat fsub out repz incb or adc pop and inc inc dec push push pop bound jae jle mov stos lret lret lret lret lret lret lret lret lret lret lret mov mov xlat fsub call add push adc pop and xor push push pop bound jae jle mov stos mov mov xlat fsub out repnz std add push adc pop and das xor push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and das xor push push pop popa data16 jb jge mov stos scas mov rol rcl fndisi(8087 out repnz add or sub xor aas inc dec push push pop pusha imul (bad) xchg test mov mov fndisi(8087 out icebp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aad loope in icebp idiv add or sub xor aas inc dec dec push pop pusha imul xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor addl mov aam loopne jmp idiv add or sub xor ds dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pop gs jbe addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pop gs jne addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out hlt cli add and sub aaa lret lret lret lret lret lret lret lret lret lret lret lret cmp inc dec push pop pop imul nop xchg fwait mov mov fcomp in out hlt cli incl and sub aaa cmp dec dec push pop pop arpl jne addb cmpsl lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov xlat fucom call add push adc pop and das xor push push pop pusha imul addl mov aad loopne jmp idiv add or sub xor ds dec dec push pop pop gs jbe addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pop fs jne addb cmpsl lods mov mov fnop in lock lret lret lret lret lret lret lret lret lret lret lret lret lret or pop sbb cmp inc dec dec push pop pop gs jne addb cmpsl lods mov mov fcmovu in lock sti add or pop sbb sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or push sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out hlt cli incl and sub aaa cmp pop pop arpl je jg mov lods mov mov fcomp jecxz out repz incb unpckhps and sub aaa cmp inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub aaa cmp inc dec push pop pop arpl je jg mov stos mov mov lret lret lret lret lret lret lret lret lret lret lret lret rcl fucom call add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub out repnz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov (bad) fsub out repnz std add push adc push and das xor push push pop popa insb jae jle mov stos mov mov xlat fsub out repnz std add push adc pop and das xor push push pop popa data16 jno jge mov test vaddsubps fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop pusha imul addl mov (bad) fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop pusha imul addl xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor scas mov mov fneni(8087 out icebp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sbb cmp inc dec dec push pop pusha imul addl mov aam loopne jmp idiv add or pop sbb sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc sti add or pop sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub dec dec push pop pop fs jne addb cmpsb lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor push pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt stc incl unpckhps and sub aaa cmp pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt stc incl unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt stc incl unpckhps and sub ss inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out repz incb unpcklps pop and inc inc dec push push pop bound jae jg mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jb jge mov stos mov mov (bad) fsub out repnz std add push adc pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor sbb and das xor push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz add or sub xor aas inc dec push push pop popa data16 jno jl xchg test vaddsubps fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop pusha data16 jno jl xchg test (bad) (bad) fndisi(8087 out repnz add or sub xor push push pop popa data16 jno jl mov test (bad) aad loopne in repnz add or sub xor aas inc dec push push pop popa data16 jno jl mov test (bad) aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jno jl xchg test (bad) lret fcmovne pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop loope in icebp idiv add or sub xor push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out icebp idiv add or sub xor push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz add push adc push and das xor push push pop bound jb jge mov stos scas mov rol rcl fsub out repnz std add push adc push and das xor push push pop bound jb jge mov stos mov mov xlat fsub out repnz incb or adc pop and xor push push pop bound jae jle mov stos mov mov xlat fsub out repnz incb or adc pop and xor push push pop bound jb jle mov lret lret lret lret lret lret lret lret lret lret stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jb jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out repz incb unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out repz incb unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub out repz incb unpckhps and inc inc dec push push pop bound lret lret lret lret lret lret lret lret lret lret lret lret jae jle mov stos mov mov (bad) fsub out repnz std add unpcklps pop and inc inc dec push push pop bound jae jle mov stos scas mov rol rcl fsub out repnz add push adc pop and xor push push pop bound jb jge mov stos mov mov xlat fsub out repnz incb or adc pop and xor cmp dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps and inc inc dec push push pop arpl je jg mov stos mov mov fcomp jecxz out repz incb unpckhps and pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor inc dec push pop pop arpl je jg mov lods mov mov (bad) in out hlt cli add and sub aaa cmp pop pop imul nop xchg pushf mov mov (bad) in out hlt cli incl and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out cmc cli add and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out cmc sti add or push sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor push or pop sbb sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add or pop sbb cmp inc dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add or pop sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop into rcr fsubp jmp add and sub aaa cmp pop pop imul nop xchg pushf mov mov fcomp jecxz out hlt cli incl and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out hlt cli incl and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out hlt cli incl and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out cmc cli add and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out cmc cli add and sub aaa cmp pop pop imul nop lret lret lret lret lret lret lret lret lret lret lret lret xchg fwait mov mov fcomp in out cmc cli add and sub aaa cmp pop pop imul nop xchg fwait mov mov fcomp jecxz out cmc cli add or push sbb daa sub cmp pop pop imul nop xchg fwait mov mov fcomp in out hlt cli incl and sub cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out hlt cli add and sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out hlt cli incl and sub cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub aaa cmp pop lret lret lret lret lret lret lret lret lret lret pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop imul xchg xchg pushf mov mov (bad) in out cmc cli add and sub aaa cmp pop pop imul xchg xchg pushf mov mov (bad) in out cmc cli add or push sbb daa sub aaa cmp pop pop fs jne addb cmpsl lods mov mov fcmovu in lock sti add or pop sbb daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov fnop in lock add or pop sbb lret lret lret lret lret lret lret lret lret sub dec dec push pop pop gs jne addb cmpsl lods mov mov fcmovu in lock sti add or pop sbb sub dec dec push pop pop gs jne addl mov aam (bad) jmp idiv add or sbb cmp inc dec dec push pop pop imul addl mov fsubrp repz adc cmp inc dec push pop pop arpl jbe (bad) mov stos mov mov fndisi(8087 out repz incb adc sbb sub xor inc inc dec push pop pop fs jbe (bad) mov mov fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl mov stos scas mov rol rcl fsub out repnz incb or adc pop and inc inc dec push push lret lret lret lret lret lret lret lret lret lret lret lret bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out repz incb unpcklps pop and inc inc dec push push pop bound jb jle mov stos mov mov rcr fucom jmp add and sub aaa cmp pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out cmc cli add lret lret lret lret lret lret lret lret lret lret lret lret lret sub dec dec push pop pop gs jne addl mov aam loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne in icebp idiv add or sub xor aas inc dec push push add push test movsl stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound je jg mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop arpl je jg mov lods mov mov (bad) in pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor out cmc cli add and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out cmc sti add or pop sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov fnop in in repnz add or sub xor inc inc dec push push pop popa data16 jb jge mov test (bad) aad loope in repnz add push adc push and das xor push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz incb or adc pop and inc inc dec push push pop bound jb jle mov stos scas mov rol rcl fsub out repnz std add push adc pop and inc inc dec push push pop bound jb jge mov stos lret lret lret lret lret lret lret lret lret lret lret mov mov xlat fsub out repnz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub out repnz incb or adc pop and das xor push push pop bound jae jp test cmpsb lods mov mov fcomp in out hlt cli incl and sub ss inc dec push pop pop imul nop xchg fwait mov mov fcomp in out hlt cli incl and sub aaa cmp pop pop arpl jne addb cmpsl lods mov mov (bad) in out hlt cli incl and sub aaa cmp pop pop arpl je addb cmpsl lods mov mov (bad) in out cmc cli add and sub dec dec push pop pop fs lret lret lret lret lret lret lret lret lret lret jnp xchg test mov mov fcmovu in lock sti add or pop sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov fcmovu in lock add pop or sub xor aas inc dec dec push pop pusha imul addl mov (bad) fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop pusha imul (bad) xchg test mov mov fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop pusha imul (bad) xchg test (bad) lret fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov test (bad) aad loope in icebp idiv add or sub xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor aas inc dec push push pop popa data16 jb jge mov test (bad) lret fnop in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov rol rcl fndisi(8087 out repnz add or sub xor push push pop popa insl jb jge mov stos scas mov rol rcl fsub out repnz std add push adc push and das xor push push pop bound jb jle mov stos mov mov xlat fsub call add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub out repz incb or adc pop and inc inc dec push push pop bound jae jg mov stos mov mov fcomp jecxz out repz lret lret lret lret lret lret lret lret lret lret lret add unpckhps and inc inc dec push push pop arpl jae jle mov stos mov mov fcomp jecxz out repz incb unpckhps add daa sub aaa cmp pop pop imul nop xchg pushf mov mov (bad) in lock sti add or push sbb daa sub cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add or push sbb daa sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out hlt cli incl and sub aaa cmp pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli add and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor ret rcr fsubp jmp add and sub aaa cmp pop pop imul nop xchg fwait mov mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pop gs jne addb cmpsl lods mov mov fcmovu in lock sti add or pop sbb daa xor ds dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop gs jne addl mov aam (bad) ljmp adc sbb sub ss inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out repz incb unpcklps pop and inc inc dec push push pop popa insl jae jle pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor orl stos mov mov xlat fucom call add unpckhps and cmp pop pop imul xchg xchg pushf mov mov (bad) in out cmc cli add and sub aaa cmp pop pop imul nop xchg pushf mov mov (bad) in out hlt cli incl and sub ss inc dec push pop pop arpl jae jg mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub ss inc dec push pop pop arpl jae jle mov stos mov mov fcomp jecxz out hlt stc incl adc xor cmp inc dec push pop pop arpl jae jg mov stos mov mov xlat fsubp jmp add unpckhps and sub ss lret lret lret lret lret lret lret lret lret lret lret lret lret push push pop arpl jae jle mov stos mov mov rcr fsubp jmp add and sub cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out hlt cli incl and sub aaa cmp pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt stc incl and sub aaa cmp inc dec push pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt stc incl pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop or adc xor cmp inc add pop pop gs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop fs jne addl mov aam (bad) ljmp adc sbb daa sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc sti add or push sbb daa sub cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out cmc cli add and sub aaa cmp pop pop imul nop xchg fwait mov mov xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop int add (bad) ljmp adc sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb sub dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb cmp inc dec dec push pop pop imul addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pop gs jbe addl mov aam (bad) ljmp adc sbb sub xor aas inc dec dec push pop pusha imul addl mov aam loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha add jno jl mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor lea scas mov mov fneni(8087 out icebp idiv add or sub xor aas inc dec dec push pop popa data16 jno jl mov test (bad) aad loopne jmp idiv add or sub xor ds dec dec push pop pusha imul (bad) xchg test (bad) lret fnop out icebp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aam (bad) jmp idiv add or pop sbb sub dec dec push pop pop gs jne addb cmpsl lods mov mov fcmovu in add idiv add or sub xor ds dec lret lret lret lret lret lret lret lret lret lret lret lret push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop gs jbe addl mov aam loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in out cmc sti add or pop sbb daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub dec dec push pop pop fs jne jnp xchg lods mov mov fcmovu in lock sti add or pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor adc sbb sub dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb daa sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub cmp pop pop gs jbe addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop fs jne addl mov aam (bad) jmp cmc sti add or pop sbb sub dec dec push pop pop gs jne addl mov aad loopne jmp idiv add or adc push and das xor push push pop popa insb jb jge mov stos scas mov rol ror pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor fsub out repnz std add push adc pop and xor push push pop popa insl jb jge mov test (bad) lret rcl fsub out repnz std add push adc pop and das xor push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and das xor push push pop bound jb jge mov stos scas mov rol rcl fsub out repz incb or adc pop and inc inc dec push push pop bound jb jge mov stos scas mov rol rcl fndisi(8087 out icebp idiv add push adc push and das xor push push pop popa data16 jb jge xchg movsb stos scas mov rol rcl fsub out repnz std add push adc pop and inc inc dec push push pop bound jb jle mov lret lret lret lret lret lret lret lret lret cltd lahf movsb stos scas mov rol rcl fsub out repnz std add push adc pop and xor push push pop bound jae jle mov stos mov mov (bad) fsub out repnz std add push adc push and das xor push push pop bound jb jge mov stos scas mov rol rcl fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out repnz add push adc push and das xor aas inc dec push push pop popa data16 jb jge mov test vaddsubps fsub out repnz add or and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add push adc pop and inc inc dec push push lret lret lret lret lret lret lret lret lret lret lret lret pop bound jb jge mov stos mov mov xlat fsub out repnz std add push adc pop and das xor push push pop popa insb jb jge mov test (bad) lret rcl fsub out repnz add push adc push and das xor aas inc dec push push pop popa data16 jno jge mov test vaddsubps fsub out repnz std add push adc push and das xor push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out repnz std add push adc push and das xor inc inc dec push push pop popa data16 jno jl mov add (bad) lret rcl fsub out repnz incb or adc pop and inc inc dec push push pop bound jb jge mov stos scas mov rol rcl fsub out repnz std add unpcklps lret lret lret lret lret lret lret lret lret lret lret sub xor push push pop bound jae jle mov stos mov mov xlat fsub out repz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out repz incb unpckhps and cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop imul xchg xchg pushf mov mov (bad) lret lret lret lret lret lret lret lret lret lret lret lret lret out cmc cli add and sub aaa cmp pop pop arpl je jg mov lods mov mov (bad) in out hlt cli incl and sub aaa cmp dec dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub aaa cmp inc dec push pop pop arpl je jg mov stos mov mov (bad) in out hlt cli incl and sub aaa cmp dec dec push pop pop arpl je jg mov lods mov mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in lock add or pop sbb cmp inc dec dec push pop pop gs jne addb lret lret lret lret lret lret lret lret lret lret cmpsl lods mov mov (bad) in out cmc cli add or pop sbb daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov fcmovu in lock sti add or pop sbb cmp inc dec dec push pop pop gs jne addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in out cmc sti add or push sbb daa sub dec add pop popa data16 jno jl xchg test (bad) lret fneni(8087 out icebp idiv add or pop sbb cmp inc dec dec push pop pop gs jne addb cmpsl lods mov mov fcmovu in lock add or pop sbb sub dec dec push pop pop gs lret lret lret lret lret lret lret lret lret lret jbe addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop gs jne addl mov aam (bad) jmp idiv add or pop sbb sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or push sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov add loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop gs jne addb cmpsl lods mov mov fcmovu in lock sti add or push sbb daa sub dec dec push pop pop imul nop xchg fwait mov mov fcomp in out hlt cli incl and lret lret lret lret lret lret lret lret lret lret lret aaa cmp inc dec push pop pop arpl jae jg mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl jae jg mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov (bad) fsub out repnz std add push adc push and xor push push pop add outsb jae jle mov stos mov mov xlat fsub out repz incb or adc pop and xor push push pop bound jae jle mov stos mov mov xlat fsub out repnz std add push adc pop and das xor push push pop bound jb jge mov stos scas mov rol rcl fsub out pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor repnz add push adc push and das xor aas inc dec push push pop pusha insb jb jge mov test (bad) (bad) fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop pusha imul (bad) xchg test (bad) lret fneni(8087 out icebp idiv add or pop sbb cmp inc dec dec push pop pop gs jne addb test mov mov fcmovu in jmp idiv add or sub xor aas inc dec push push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor ds dec dec push pop pusha imul addl xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor leave iret aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pop fs add addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in out cmc sti add or push sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov fcomp in out hlt cli incl and sub aaa cmp dec dec push pop pop arpl pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop outsb je jg mov lods mov mov fcomp jecxz out repz incb unpckhps and inc inc dec pop data16 test enter loopne in repnz incb adc sbb daa sub dec push push jbe addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop pusha imul addl mov aam loopne jmp idiv add or sub xor ds dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in out hlt sti add or adc sbb cmp inc dec dec push pop pop imul addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pop gs jne addb pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor xchg xchg pushf mov mov (bad) in out cmc cli add and sub aaa cmp pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt stc incl unpckhps and sub ss dec dec push pop pop arpl je jg mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos scas mov rol rcl fsub out repnz add or sub xor aas inc dec push push pop popa insb jb jge mov movsl stos mov mov xlat fsub out repnz std add push adc pop and das xor push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz add push adc push and das xor aas inc dec lret lret lret lret lret lret lret lret lret lret lret pop popa data16 jno jl xchg test vaddsubps fndisi(8087 out icebp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aam loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop gs jne addb cmpsl lods mov mov fnop in lock add or pop sbb cmp inc dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in out cmc cli add add sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc sti add or push sbb daa sub dec dec push pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt stc add lret lret lret lret lret lret lret lret lret lret push sbb es aaa cmp pop pop arpl jae jle mov stos mov mov xlat fsub out repnz incb or adc and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub out repnz std add push adc pop and xor push push pop bound jb jge mov stos scas mov rol rcl fndisi(8087 out repnz add or sub xor inc inc dec push push pop popa insb jb jge mov add vaddsubps fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov test (bad) lret fneni(8087 out icebp idiv add or pop sbb cmp inc dec dec push pop pop imul addl mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor aam (bad) ljmp adc sbb daa sub aaa cmp pop pop arpl jae jg mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fndisi(8087 out repnz add or sub das xor push push pop bound jb jge mov stos scas mov rol rcl fsub out repz incb or adc pop and xor push push pop popa insb jb jge mov test vaddsubps fsub out repnz std add push adc pop and das xor push push pop popa insb jb jge mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor test vaddsubps fndisi(8087 out repnz std add push adc pop and das xor push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out repnz add push adc push and das xor aas inc dec push push pop popa data16 jno jge mov test (bad) aad loopne jmp idiv add or sub xor aas inc dec push push pop pusha imul addl add aad loopne in icebp idiv add or sub xor aas inc dec push push pop pusha data16 jno jl xchg test mov mov fnop in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb daa sub dec lret lret lret lret lret lret lret lret lret lret lret push pop pop gs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop arpl jne addb cmpsl lods mov mov fcomp in out hlt cli incl and sub aaa cmp dec dec push pop pop arpl je jg mov lods mov mov (bad) in out hlt cli incl and sub aaa cmp inc dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out hlt cli incl and sub aaa cmp inc dec push pop pop arpl jae jle mov stos mov mov fcomp jecxz out repz incl unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add lret lret lret lret lret lret lret lret lret lret lret adc pop and inc inc dec push push pop bound jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and das xor push push pop popa insb jb jge mov test (bad) aad loopne jmp idiv add or sub xor aas inc dec push push pop pusha imul (bad) xchg test mov mov (bad) fndisi(8087 out repnz add push adc push and das xor push push pop popa data16 jno jl xchg test (bad) lret fnop in lock add or pop sbb cmp inc dec dec push pop pop gs jbe addl mov aam (bad) ljmp adc sbb daa sub cmp inc dec dec push pop pop fs jne addb cmpsl lods mov mov xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop into rcr fsubp jmp add and sub aaa cmp dec dec push pop pop imul nop xchg fwait mov mov fcomp jecxz out repz incl unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add push adc pop and das xor add pop bound jae jg mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jb jge mov stos mov mov xlat fsub out repnz incb or adc pop and xor push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz add push adc push and das xor aas inc dec push push pop popa data16 jno jl xchg pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor test (bad) aad loope in icebp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop gs jne addb cmpsl lods mov mov add loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop fs jne addb cmpsl lods mov mov fcomp jecxz out hlt cli add and sub aaa cmp inc dec push pop pop arpl je jg mov stos mov mov xlat fucom call add unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov (bad) fsub out repnz add push adc pop and das xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor push pop popa insb jb jge mov test (bad) aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop add imul (bad) xchg test mov mov fcmovu in lock add or pop sbb daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt stc incl unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor or adc pop and inc inc dec push push pop bound jb jge mov stos mov mov (bad) fsub out repnz add push adc push and das xor inc inc dec push push pop popa data16 jno jge mov test vaddsubps fsub add in repz incb or adc pop and inc inc dec push push pop bound jb jge mov stos scas mov rol rcl fsub out repnz std add push adc push and das xor push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out repnz std add or sub xor aas inc dec push push pop pusha data16 jno jl xchg test (bad) lret fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop pusha imul addl mov xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor iret aad loopne jmp idiv add or sbb cmp inc dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb sub dec dec push pop pop fs jo jl xchg lods mov mov fcmovu in lock sti add or push sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out hlt cli incl and sub ss inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out repz incl unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub out repnz std add push adc pop and das xor push push pop popa insb jb jge lret lret lret lret lret lret lret lret lret lret mov mov rol rcl fsub out repnz add or sub xor push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz incb or adc pop and inc inc dec push push pop popa insb jb jge mov stos mov mov (bad) fsub out repnz add or sub xor aas inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop gs jne addb cmpsl lods mov mov fcmovu in lock sti add or push sbb daa sub cmp pop pop imul nop xchg fwait mov mov fcomp in out hlt cli incl and sub aaa cmp lret lret lret lret lret lret lret lret lret lret lret lret lret push pop pop arpl je jg mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl jae add mov stos mov mov fcomp jecxz out repz incb adc xor cmp inc dec push pop pop arpl je jg mov stos mov mov xlat fucom call add push adc pop and inc inc dec push push pop bound jae jle mov stos scas mov rol rcl fsub out repnz add push adc push and das xor inc inc dec push push pop popa insb jb jge mov test (bad) lret fnop out icebp idiv add or sbb cmp inc dec push push pop pusha imul addl mov aad loopne jmp idiv add pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop or sub xor ds dec dec push pop pusha imul (bad) xchg test mov mov fnop out icebp idiv add or sub xor aas inc dec push push pop pusha data16 jno jge mov test (bad) aad loopne in icebp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aad loopne ljmp adc sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or push sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop arpl je jg mov stos mov mov lret lret lret lret lret lret lret lret lret lret lret lret rcr fsubp jmp add adc xor cmp inc dec push pop pop arpl jae jg mov nop xchg fwait mov mov fcomp jecxz out hlt cli add and sub aaa cmp pop pop arpl je jg mov stos mov mov xlat fucom call add unpckhps and inc inc dec push push pop bound jae jle mov stos scas mov rol rcl fsub out repnz add or sub xor push push pop popa data16 jno jl xchg test (bad) lret fnop in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop gs jne or xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xchg cmpsl lods mov mov (bad) in out cmc cli add sbb cmp inc dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb daa sub aaa cmp pop pop fs jne addb cmpsl lods mov mov fcomp jecxz out hlt stc incl and sub ss inc dec push pop pop arpl jae jg mov lods mov mov fcomp jecxz out repz incl unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jb jge mov stos mov mov (bad) fsub out repnz std add push adc push and das xor xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop inc dec push push pop popa data16 jno jl mov movsb stos scas mov rol rcl fsub out repnz add or sub xor aas inc dec dec push pop pusha imul addb cmpsl lods mov mov (bad) in out hlt cli incl and sub cmp dec push push pop bound jb jge mov test (bad) lret fnop out icebp idiv add or sub xor ds dec dec push pop pop imul addl mov aam (bad) ljmp adc sbb sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add or pop sbb sub dec dec push pop pop fs jne addb cmpsl lods mov mov fcomp jecxz out hlt stc lret lret lret lret lret lret lret lret lret lret lret lret lret or adc sub dec dec push pop pop fs jne addb cmpsl lods mov mov fcomp jecxz out hlt cli incl and sub ss pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt stc incl unpckhps and inc inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov (bad) fsub out repnz std add push adc pop and das xor push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out icebp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop mov (bad) fsub out repnz add or sub xor aas inc dec push push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop gs jbe addl mov aam (bad) ljmp adc sbb daa sub aaa cmp pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub ss inc dec push push pop arpl jae jle mov stos mov mov xlat fsub call add unpcklps pop and inc inc dec push push pop bound jb jge mov stos scas mov rol rcl fsub out repnz add push adc push and add cmp dec push push pop bound jae pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop js orl stos scas mov rol rcl fsub out repnz add or sub xor push push pop popa data16 jb jge mov test (bad) aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in out hlt cli add and sub aaa cmp inc dec push pop pop imul nop xchg fwait mov mov fcomp jecxz out repz incb unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov ret rcr fsubp jmp add unpckhps and xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor cmp inc dec push push pop bound jae jg mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jb jle mov stos mov mov xlat fsub call add push adc pop and xor push push pop popa insl jb jge mov stos scas mov rol rcl fsub out repnz add push adc push and das xor aas inc dec push push pop popa data16 jb jge mov test vaddsubps fndisi(8087 out repnz add or sub xor aas inc dec push push pop popa data16 jno jl xchg test mov mov fneni(8087 out icebp idiv add or sub xor add dec push push pop popa insb jb jge mov test (bad) (bad) fndisi(8087 out repnz lret lret lret lret lret lret lret lret lret lret lret clc std add push adc push and das xor aas inc dec push push pop pusha data16 jno jl xchg test mov mov fnop in lock add or sub xor aas inc dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in out hlt cli add and sub cmp pop pop imul nop xchg fwait mov mov fcomp jecxz out repz incb unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov rcr fucom call add unpckhps and inc inc dec push pop pop arpl je jg mov stos mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor rcl fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov (bad) fsub out repnz std add push adc pop and das xor push push pop popa insb jno jl mov test (bad) (bad) fndisi(8087 out icebp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop gs jne addl mov aam (bad) ljmp adc sbb daa sub aaa cmp push pop pop gs jne addb cmpsl lods mov mov fcmovu in lock sti add or push sbb daa sub aaa cmp pop pop imul xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor je addb cmpsb lods mov mov fcomp jecxz out hlt stc incl unpckhps and sub ss inc dec push push pop bound jae jle mov stos mov mov xlat fsub out repz incb unpcklps pop and inc inc dec push push pop bound jb jge mov stos scas mov rol rcl fndisi(8087 out icebp idiv add push adc push and das xor aas inc dec push push pop pusha imul addl mov aam loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop gs jne addb cmpsl lods mov mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addb cmpsl lods mov mov stc and cmp dec push pop popa insl jae jg lret lret lret lret lret lret lret lret lret lret nop xchg popf mov rol rcr fsubp ljmp adc pop and inc push pop push js test test mov mov fsubp ljmp push adc and sub aaa cmp pop popa data16 jb jle mov lods mov mov fucom call push or sbb and xor cmp dec dec push pop pop imul orl lods mov mov out cmc cli add and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub dec dec push pop pop fs jne addb cmpsl lret lret lret lret lret lret lret lret lret lret lret lret lods mov mov fcmovu in lock sti add or pop sbb daa sub dec dec push pop pop gs jbe addl mov mov fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop pusha data16 jno jl xchg test (bad) (bad) fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop pusha data16 jno jl xchg test vaddsubps fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl xchg test vaddsubps fndisi(8087 out repnz add or sub xor aas inc dec push push pop popa data16 jno jl xchg lods mov mov fnop in lock add or pop sbb cmp inc dec dec push pop pop gs pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop jo jnp xchg lods mov mov fcmovu in lock add or pop sbb cmp aas inc dec push push pop popa data16 jno jl mov test (bad) aad loopne in icebp idiv add or sub xor aas inc dec push push pop pusha data16 jno jl xchg test (bad) lret fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop pusha imul addl mov aam (bad) ljmp adc sbb es aaa cmp pop pop imul nop xchg fwait mov mov xlat fucom call add push adc pop and das xor push push pop bound jae jle mov stos mov mov xlat fsub out repnz incb or adc pop and lret lret lret lret lret lret lret lret lret lret lret lret cmp dec push push pop arpl jae jle mov stos mov mov rcr fsubp jmp add and sub aaa cmp pop pop arpl jne addb cmpsl lods mov mov (bad) in out cmc sti add or push sbb daa sub dec dec push pop pop fs jne addb test mov mov (bad) in lock add or pop sbb cmp inc dec dec push pop pop gs jbe addl mov aad loopne jmp idiv add or sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aad loope in icebp lret lret lret lret lret lret lret lret lret lret lret idiv add or sub xor aas inc dec dec add popa insb jb jge mov test vaddsubps fndisi(8087 out repnz add push adc push and das xor push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz add push adc pop and xor push push pop bound jb jge mov stos mov mov (bad) fsub out repnz std add push adc pop and inc inc dec push push pop bound jae jle mov stos scas mov rol rcl fsub out repnz std add push adc push and das xor push push pop bound jb jge mov stos mov mov xlat fsub out repnz std add push adc pop and das xor push push pop bound jae jle mov stos mov lret lret lret lret lret lret lret lret lret lret lret mov xlat fldl jecxz out hlt stc incl and sub aaa cmp inc dec push pop pop imul nop xchg fwait mov mov fcomp in out hlt cli incl and sub aaa cmp pop pop arpl jne addb cmpsl lods mov mov (bad) in out hlt cli incl and sub aaa cmp pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt stc incl adc xor cmp dec dec push pop pop arpl je jg mov stos mov mov fcomp in out hlt cli add and sub aaa cmp pop pop imul xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop jnp xchg lods mov mov fnop in icebp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor ds dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or push sbb sub dec dec push pop pop gs jne addl mov aam (bad) ljmp or sub xor lret lret lret lret lret lret lret lret lret lret lret lret aas inc dec push push pop popa data16 jno jl mov test (bad) lret fnop out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl mov test (bad) (bad) fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop pusha data16 jb jge mov test (bad) aad loope in icebp idiv add or sub xor aas inc dec push push pop pusha data16 jno jge mov test vaddsubps fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb daa sub dec dec push pop pop imul mov lods mov mov fcmovu in lock lret lret lret lret lret lret lret lret lret lret lret or pop sbb sub dec dec push pop pop gs jne addb cmpsl lods mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop pusha imul (bad) xchg test mov mov fnop out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl mov test (bad) (bad) fndisi(8087 out repnz add push adc pop and das xor push push pop popa insb jb jge mov test (bad) lret fnop in lock add or adc push and das xor inc inc dec push push pop popa data16 jb jge mov test lret lret lret lret lret lret lret lret lret lret lret fndisi(8087 out icebp idiv add or sub xor push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out repnz add push adc push and das xor push push pop bound jae jle mov stos mov mov xlat fsub call add push adc pop and das xor push push pop popa insl jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jb jge mov cmpsb lods mov mov fcomp jecxz out hlt stc incl and sub aaa cmp inc dec push pop pop arpl je jg lret lret lret lret lret lret lret lret lret lret lret lret lret xchg fwait mov mov fcomp in out hlt cli incl and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub dec dec push pop pop imul nop xchg fwait mov mov (bad) in out cmc cli add and sub cmp pop pop imul nop xchg pushf mov mov fcomp in out cmc cli add and sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out hlt cli add or push sbb daa add xor aas inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sbb cmp inc dec lret lret lret lret lret lret lret lret lret lret dec push pop pusha imul (bad) xchg test mov mov fnop in icebp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb daa sub aaa ds dec dec push pop pop gs jbe addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop imul addl mov aam (bad) ljmp adc sbb daa sub aaa cmp pop pop fs jne addb cmpsl lods mov mov aam loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop imul addl mov aad loopne jmp idiv add or pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop adc sbb cmp inc dec dec push pop pop gs jne addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loope in icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl xchg test vaddsubps fndisi(8087 out repnz add or sub xor aas inc dec push push pop popa data16 jno jl xchg test (bad) lret fndisi(8087 out repnz add or sub xor inc add push push pop bound jae jle mov stos mov mov xlat fsub out repz incb or adc pop and inc inc dec push push pop popa insb jb jge mov test (bad) lret pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aam loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov iret aad loopne jmp idiv add or sub xor aas inc dec dec push pop popa data16 jno jge mov test (bad) aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop fs jne addl lret lret lret lret lret lret lret lret pushf mov mov (bad) in out hlt cli incl and sub ss inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add push adc pop and das xor push add bound jb jge mov test (bad) (bad) fsub out repnz std add push adc pop and das xor push push pop bound jb jge mov stos scas mov rol rcl fsub call add unpcklps pop and inc inc dec push lret lret lret lret lret lret lret lret lret lret lret lret push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl jae jle mov stos mov mov xlat fucom call add adc xor cmp inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl adc xor cmp pop pop fs jne addb cmpsl lods mov mov (bad) add ljmp adc sbb sub dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aam loopne jmp idiv add or pop lret lret lret lret lret lret lret lret lret lret lret lret sbb cmp inc dec dec push pop pop imul addl mov aam (bad) ljmp adc sbb daa sub aaa cmp pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt stc incl and sub aaa cmp inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp inc dec push pop pop arpl outsl jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub aaa cmp inc dec push pop pop arpl jae jle mov stos mov mov xlat fucom call add unpcklps and inc inc dec push push pop bound jae jle mov stos mov mov fmul pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor fucom call add unpcklps and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub call add unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push push pop arpl jae jle mov stos mov mov xlat fsub call incl and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc sti add or push sbb daa sub cmp pop pop gs jne addb pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor mov fcmovu in lock sti add or pop sbb daa sub dec dec push pop pop gs jne addl mov aam (bad) ljmp adc sbb sub dec dec push pop pop gs jbe addl mov aam (bad) jmp idiv add or pop sbb cmp inc dec dec push pop pop fs jne addb mov scas mov mov fnop in icebp idiv add or pop sbb cmp inc dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pop lret lret lret lret lret lret lret lret lret lret lret lret push jne addb cmpsb lods mov mov (bad) in out hlt cli incl and sub ss inc dec push push pop bound jae jle mov stos scas mov rol rcl fndisi(8087 out repnz std add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add add push sbb es aaa cmp pop pop imul nop xchg fwait mov mov fcomp in out hlt cli incl and sub cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc sti add or push sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add or push sbb lret lret lret lret lret lret lret lret lret lret lret xor ds dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb sub dec dec push pop pusha imul (bad) xchg test (bad) lret fnop out icebp idiv add or sub xor aas inc dec dec push pop pusha data16 jb jge mov movsl stos mov mov xlat fsub out repnz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out repz incb unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl adc xor cmp inc dec push pop pop arpl jae jle mov stos mov mov xlat fucom call pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor in repz incb unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and inc inc dec push pop pop arpl jae jg mov stos mov mov xlat fucom call add unpckhps and cmp pop pop imul xchg xchg pushf mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb cmp inc dec dec push pop pusha imul addl mov aam loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor mov mov fneni(8087 out icebp idiv add or pop sbb cmp inc dec dec push pop pop imul addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pusha imul addl add aad loope in icebp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov stos scas mov rol rcl fsub out repnz std add push adc push and das xor push push pop popa insb jb jge mov stos mov mov (bad) fsub out repnz std add push adc push and das xor push push pop popa insb jb pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop ja orl stos scas mov rol rcl fsub out repnz std add push adc pop and das xor push push pop bound jb jge mov stos scas mov rol rcl fucom call add unpcklps pop and inc add push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub ss inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub aaa lret lret lret lret lret lret lret lret lret lret inc dec dec push pop pop arpl je jg mov lods mov mov fcomp in out hlt cli incl and sub aaa cmp pop pop imul nop xchg pushf mov mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aam (bad) jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test mov mov fcmovu in lock sti add or pop sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti lret lret lret lret lret lret lret lret lret lret lret or push sbb daa sub dec dec push pop pop gs jne addb test mov mov fnop in lock add or pop sbb cmp inc dec dec push pop add insb jno jl mov test (bad) lret rcl fsub out repnz std add push adc push and das xor push push pop popa insb jb jge mov test (bad) xlat fsub out repz incb or adc pop and xor push push inc imul popf test nopl xor pop pusha data16 jb jg mov scas mov rol rcr fsubp jmp pop or sub aaa cmp pop pusha imul mov sbb dec push pop imul scas mov out hlt stc incl adc xor cmp pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop inc dec dec push pop pop imul mov scas mov mov fnop out icebp idiv add or sbb cmp inc dec dec push pop pop imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jno jl mov test (bad) lret rcl fsub out repnz incb or adc pop and xor push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out cmc sti add or push sbb daa sub dec dec push pop pop fs jne addb cmpsb lods mov mov fcomp jecxz out repz incb pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop add adc sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or push sbb daa sub dec dec push pop pusha imul addl mov aam (bad) jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha data16 jno jl mov test vaddsubps fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov movsl stos mov mov xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor int fcomp jecxz out repz incl unpckhps and inc inc dec push pop pop arpl jae jle mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp dec dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add or push sbb daa sub cmp pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out cmc cli add and sub cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or push sbb add xor ds dec dec push pop pusha imul addl pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor xchg xchg popf mov mov fcmovu in lock add or sub xor ds dec dec push pop pop gs jne addb cmpsl lods mov mov fcomp jecxz out hlt stc incl unpckhps and sub aaa cmp inc dec push pop pop arpl jae jle mov stos mov mov (bad) fsub out icebp idiv add or sub xor aas inc dec push push pop pusha imul addl mov aam (bad) ljmp adc sbb es aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub dec dec push pop pop imul addl mov mov fneni(8087 out icebp idiv add or sub xor aas inc dec lret lret lret lret lret lret lret lret lret lret push push pop pusha data16 jb jge mov test (bad) (bad) fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov test vaddsubps fsub out repnz add push adc pop and das xor push push pop popa insl jb jge mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop popa data16 jno jl xchg test mov mov fsub out repnz add push adc push and das xor aas inc dec push push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb add inc inc dec push push pop popa data16 jb jge mov test (bad) (bad) fsub out repnz std add push lret lret lret lret lret lret lret lret lret lret lret lret push and das xor push push pop popa insb jb jge mov test (bad) (bad) fndisi(8087 out repnz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub out repnz std add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out repz incb unpckhps and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov fcomp in out hlt cli incl and sub cmp pop pop imul nop xchg pushf mov mov aam (bad) ljmp adc sbb daa sub dec dec push pop pusha imul addl mov aam pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor fcmovu in lock sti add or pop sbb daa sub dec dec push pop pop imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul (bad) mov test (bad) aad loope in icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl mov test (bad) aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in lock sti add or push sbb daa sub dec dec add pusha imul addl mov aad loope in icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl mov xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor mov aad loopne in icebp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov test vaddsubps fsub out repz incb or adc pop and inc inc dec push push pop bound jb jge mov test (bad) (bad) fsub out repnz std add push adc pop and inc inc dec push push pop bound jb jle mov stos scas mov rol rcl fndisi(8087 out icebp idiv add or sub xor push push pop bound jae jle mov stos mov mov xlat faddl jecxz out hlt cli incl and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub dec dec push pop pop lret lret lret lret lret lret lret lret lret lret lret lret jo jnp xchg lods mov mov fnop in lock add or pop sbb cmp inc dec dec push pop pusha data16 jno jge mov test (bad) aad loope in icebp idiv add or sub xor aas inc dec push push pop pusha data16 jno jge mov test vaddsubps fsub out repnz add push adc push and das xor push push pop popa insb jb jge mov stos mov mov xlat fsub out repz incb or adc pop and inc inc dec push push pop bound add test cmpsl lods mov mov (bad) in out cmc cli add or push sbb daa sub cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and lret lret lret lret lret lret lret lret lret lret lret lret aaa cmp pop pop imul nop xchg pushf mov mov (bad) in lock sti add or pop sbb cmp inc dec dec push pop pop gs jne addl mov aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov rcr fsubp jmp add and sub aaa cmp pop pop arpl je jg mov stos mov mov xlat fsub out repnz add add unpckhps and sub ss inc dec push pop pop arpl jae jle mov stos mov mov xlat fsub out repnz std add push adc push and das xor push push pop popa insl jb jge mov test (bad) aad loopne lret lret lret lret lret lret lret lret lret lret lret lret jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb daa sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out hlt cli incl and sub ss inc dec push push pop bound jae jle test cmpsb lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt stc incl and sub ss inc dec push pop pop arpl jae jle mov lret lret lret lret lret lret lret lret lret lret mov mov fcomp in out hlt cli add and sub aaa cmp pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub cmp pop pop imul nop xchg pushf mov mov (bad) in lock sti add or push sbb daa sub dec dec push pop pop fs jne addb cmpsb lods mov mov fcomp in out cmc sti add or adc sbb cmp inc dec dec push pop pop fs jne addb cmpsb lods mov mov fcomp jecxz out hlt stc incl and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub dec dec push pop pop fs pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor jnp xchg cmpsl lods mov mov (bad) in out cmc cli add and sub dec dec push pop pop imul addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pusha imul addl mov rol rcl fsub out repnz add or sub xor aas inc dec dec push pop pusha imul (bad) mov test (bad) aad loope in icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl xchg test vaddsubps fsub out repnz add push adc push and das lret lret lret lret lret lret lret lret lret lret lret xor push push pop popa insb jb jge mov stos mov mov (bad) fsub out repnz add or sub xor aas inc dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb daa sub aaa cmp pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt cli incl and daa sub dec dec push pop pop gs jne addl mov aam (bad) jmp idiv add or sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop pusha imul (bad) xchg test (bad) lret fndisi(8087 out icebp lret lret lret lret lret lret lret lret lret lret lret lret add or sub xor push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out icebp idiv add or sub xor push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz incb or adc pop and inc inc dec push push pop arpl jae jg mov stos mov mov ret rcr (bad) ljmp adc sbb daa sub dec dec push pop pop gs jbe addl mov aad loopne jmp idiv add or sbb cmp inc dec dec push pop pusha imul (bad) xchg test (bad) lret fneni(8087 out icebp idiv add or sub xor ds dec dec push pop pusha imul addl mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop mov fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop pusha imul (bad) xchg test vaddsubps fndisi(8087 out repnz add or sub xor aas inc dec push push pop popa insb jb jge mov test (bad) lret rcl fsub out repnz std add push adc pop and das xor dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp dec dec push pop pop imul nop xchg fwait mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl jae jle pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor movsl stos mov mov fcomp jecxz out repz incb adc xor cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out hlt cli add and sub dec dec push pop pop fs jne addb cmpsl lods mov mov aam (bad) jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov rcr fsubp jmp add and sub ss inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov fcomp jecxz out hlt stc incl unpckhps and inc lret lret lret lret lret lret lret lret lret lret lret lret inc dec push push pop bound jb jle mov stos mov mov xlat fucom call add unpcklps and inc inc dec push push pop bound jb jge mov stos mov mov xlat fsub out repnz incb or adc pop and inc inc dec push push add imul (bad) xchg fwait mov mov (bad) in out hlt cli incl and sub aaa cmp dec dec push pop pop imul nop xchg fwait mov mov (bad) in out hlt cli add and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out cmc cli add and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add lret lret lret lret lret lret lret lret lret lret lret adc sbb sub dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb cmp inc dec dec push pop pop gs jne addb cmpsl lods mov mov fcomp jecxz ljmp adc sbb cmp inc dec dec push pop pusha imul (bad) xchg test (bad) aad loope in icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl mov test vaddsubps fndisi(8087 out icebp idiv add or sub xor ds dec dec push pop pusha imul (bad) xchg test (bad) lret fneni(8087 out icebp idiv add or pop sbb cmp inc dec dec push pop pusha data16 jno jl xchg test (bad) pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop rcl fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop pusha imul (bad) mov test vaddsubps fsub out repnz add push adc push and das xor aas inc dec push push pop pusha imul jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and das xor push push pop popa data16 jno jl xchg test vaddsubps fndisi(8087 out repnz add or sub xor inc inc dec push push pop popa data16 jno jl xchg test mov mov fndisi(8087 out icebp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop fs jne addb pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor nop xchg fwait mov mov fcomp in out cmc cli add and sub cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc sti add pop or sub xor aas inc dec push push pop pusha data16 jno jl xchg test mov mov fcmovu in lock sti add or pop sbb cmp inc dec dec push pop pop imul addl mov aam (bad) ljmp adc sbb sub xor ds dec dec push pop pop gs jne addb cmpsl lods mov mov fcomp jecxz out hlt stc incl adc xor cmp inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp dec dec lret lret lret lret lret lret lret lret lret lret lret push pop pop imul xchg xchg pushf mov mov (bad) in out hlt cli add and sub aaa cmp pop pop fs jne addb mov mov fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl mov test vaddsubps fsub out repnz add push adc push and das xor push push pop popa insb jb jge mov stos mov mov xlat fsub call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add or push lret lret lret lret lret lret lret lret lret lret lret lret sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop add cmp inc dec dec push pop pusha imul (bad) xchg test mov mov fneni(8087 out icebp idiv add or sub xor inc inc dec push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out icebp idiv add push adc pop and das xor push push pop popa insl jb jge mov stos mov mov xlat fsub call add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov (bad) fsub out repnz add or sub xor inc inc dec push push pop popa data16 jno jl xchg test mov mov fcmove pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor loopne jmp idiv add or pop sbb daa sub dec dec push pop pop gs jne addl mov mov fneni(8087 out icebp idiv add or sbb cmp inc dec push push pop pusha data16 jb jge mov test vaddsubps fndisi(8087 out repnz add push adc pop and das xor push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul nop xchg pushf mov mov (bad) in lock sti add or pop sbb sub dec dec push pop pop gs jbe addl mov aad loopne jmp idiv add or sub xor ds dec dec push pop pusha imul addl lret lret lret lret lret lret lret lret lret lret lret scas mov mov fneni(8087 out icebp idiv add or sub xor cmp dec push push pop bound jb jge mov stos mov mov (bad) fucom call add unpcklps pop and inc inc dec push push pop bound jb jge mov stos scas mov rol rcl fsub out repz incb unpcklps and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl adc xor cmp pop pop imul nop xchg fwait mov rcl fucom jmp xor dec push pop pop fs jbe (bad) mov lods mov mov lret lret lret lret lret lret lret lret lret lret iret aad loope in repz incl cmp dec push push pop arpl jae jg mov stos mov mov (bad) in out cmc cli add and sub aaa cmp pop pop fs add addl mov rcr (bad) ljmp adc sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or push sbb daa sub cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pop gs jne addb lret lret lret lret lret lret lret lret lret lret lret mov mov (bad) in out cmc cli add and sub cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add pop or pop sbb cmp inc dec push push pop pusha imul (bad) xchg test (bad) lret fneni(8087 out icebp idiv add or sub xor aas inc dec dec push pop popa data16 jno jge mov test (bad) aad loope in icebp idiv add or sub xor aas inc dec push push pop pusha imul (bad) mov test vaddsubps fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl xchg test vaddsubps fsub out repnz add push adc push and das xor push push pop popa lretw lret lret lret lret lret lret lret lret lret lret ja (bad) mov test (bad) aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop fs jne addb mov mov fnop in lock sti add or push sbb daa sub aaa cmp pop pop arpl je jg mov stos mov mov xlat fucom call add unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub call add unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub call add unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub call add unpcklps pop and pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor sub cmp dec push push pop bound jb jle mov stos scas mov rol rcl fndisi(8087 out icebp idiv add or and inc inc dec push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out repnz add or sub xor inc inc dec push push pop bound jb jge mov stos scas mov rol rcl fsub out repnz add or sub xor push push pop popa insl jb jge mov stos mov mov (bad) fsub out repnz add or sub xor ds dec dec push pop pop imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop fs jne addl mov rcr fsubp lret lret lret lret lret lret lret lret lret lret lret out hlt cli incl and inc inc dec push push pop bound jb jge mov cmpsb stos mov mov fcomp jecxz out repz incl unpckhps and inc inc dec push push pop arpl jae jle mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub ss inc dec push pop pop arpl jae jle mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub call add unpckhps and inc inc dec push push pop bound jae jle mov lret lret lret lret lret lret lret lret lret lret scas mov rol rcl fndisi(8087 out icebp idiv add push adc push add inc inc dec push push pop bound jae jle mov stos mov mov (bad) fsub out repnz add or sub xor push push pop popa data16 jb jge mov test vaddsubps fndisi(8087 out icebp idiv add or sub xor push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out repnz add or sub xor inc inc dec push push pop popa data16 jb jge mov test vaddsubps fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov test (bad) aad loopne jmp idiv add or pop sbb cmp pop pop fs lret lret lret lret lret lret lret lret lret lret lret lret jne addb cmpsl add leave iret aam (bad) ljmp adc sbb daa sub aaa cmp pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt stc incl and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp dec dec push pop pop arpl je jg mov stos mov mov (bad) in out hlt cli incl and sub aaa cmp pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and lret lret lret lret lret lret lret lret lret lret xor cmp inc dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop imul nop xchg pushf mov mov fcomp jecxz out hlt stc incl and sub aaa cmp dec dec push pop pop arpl je jg mov stos mov mov (bad) fsub out repnz add or sub xor push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out icebp idiv add or sub xor inc inc dec push push pop popa data16 jb jge mov test vaddsubps fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl xchg test rol rcl fsub lret lret lret lret lret lret lret lret lret lret lret lret in repnz add push adc push and das xor inc inc dec push push pop bound jb jge mov stos scas mov rol rcl fndisi(8087 out icebp idiv add or pop sbb cmp inc dec dec push pop pop fs jbe addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out hlt cli incl and sub ss inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out repnz add or sub xor aas add push push pop bound jae jle mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor rol rcl fsub out repz incb or adc pop and das xor push push pop popa data16 jno jge mov test (bad) lret fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aam loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov rcl fneni(8087 out icebp idiv add or sub xor push push pop popa lret lret lret lret lret lret lret lret lret lret lret lret lret jno jge mov test (bad) lret fnop in icebp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in out cmc sti add or push sbb daa sub aaa cmp pop pop imul xchg xchg pushf mov mov (bad) in out cmc cli add and sub aaa cmp pop pop imul xchg xchg pushf mov mov (bad) in out cmc cli add or push sbb daa sub aaa cmp add gs jne addl mov aam (bad) ljmp adc sbb lret lret lret lret lret lret lret lret lret sub dec dec push pop pop fs jne addb cmpsl lods mov mov fcmovu in lock add or pop sbb sub dec dec push pop pop imul addl mov aam loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop gs jbe addl mov aam (bad) jmp idiv add or pop sbb cmp inc dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in out cmc sti add or pop sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) add jmp idiv add or sbb cmp inc dec dec push pop pusha imul addl mov rcr fsubp lret lret lret lret lret lret lret lret lret lret lret hlt cli incl and sub aaa cmp pop pop arpl je jg mov lods mov mov fcomp jecxz out repz incb unpckhps and inc inc dec push pop pop arpl jae jle mov stos mov mov xlat fsub out repnz std add push adc push and das xor aas inc dec push push pop popa insb jb jge mov test (bad) (bad) fsub out repnz add push adc push and das xor aas inc dec push push pop popa insb jb jge mov test (bad) (bad) fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 js test movsl stos mov mov xlat fucom call add unpcklps and inc inc dec push push pop bound jae jle mov lret lret lret lret lret lret lret lret lret lret lret mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jb jge mov stos mov mov xlat fsub out repnz std add push adc pop and das xor push push pop popa insl jb jge mov stos scas mov rol rcl fsub out repnz incb or adc pop and xor push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jb jge mov test (bad) aad loopne in repnz incb or adc pop and inc inc dec push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out icebp idiv add push adc push and das xor aas inc dec push push pop pusha lretw lret lret lret lret lret lret lret lret lret imul addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop imul nop xchg fwait mov mov fcomp jecxz out repz incb unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop arpl jae jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl je add pushf mov mov fcomp jecxz out hlt cli incl and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and lret lret lret lret lret lret lret lret lret lret lret lret aaa cmp inc dec push pop pop arpl jae jle mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and inc inc dec push push pop bound jb jge mov stos mov mov (bad) fsub out repnz add or sub xor aas inc dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add pop or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loope in icebp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov test (bad) lret fnop in pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor icebp idiv add or sub xor aas inc dec push push pop pusha imul (bad) xchg test mov mov fnop out icebp idiv add or sub xor aas inc dec push push pop pusha imul addl mov aam loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb daa sub cmp inc dec dec push pop pop gs jne addb mov mov fcmovu in lock sti add or push sbb daa sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop fs jne addb cmpsl lret lret lret lret lret lret lret lret lret lret lret lret lods mov mov (bad) in out hlt cli incl and sub ss inc dec push push pop bound jae jg mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub out repz incb or adc pop and das xor push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz std add push adc sbb and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push push pop bound jb lahf movsl stos mov mov add push adc pop and inc inc dec push push pop bound jae jle mov stos mov lret lret lret lret lret lret lret lret lret lret lret mov (bad) fsub out repnz add push adc push and das xor push push pop popa insb jb jge mov test (bad) aad loopne jmp idiv add or pop sbb daa sub dec dec push pop pop gs jne addl mov aam fsubp jmp add and sub ss inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz add cmc cli add and sub aaa cmp pop pop arpl je addb cmpsb lods mov mov fcomp jecxz out hlt stc incl unpckhps and sub ss inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop popa insb jb pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop ja (bad) mov stos scas mov rol rcl fsub out repnz add push adc push and das xor aas inc dec push push pop popa data16 jno jl xchg test mov mov fneni(8087 out icebp idiv add or pop sbb cmp inc dec dec push pop pop imul addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop fs add addl mov aam loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc sti add or push sbb daa sub aaa cmp pop pop arpl jae jle mov stos mov mov xlat fucom call add unpckhps and xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor cmp dec push push pop bound jae jle mov stos mov mov (bad) fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl xchg test (bad) lret fnop in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov aam (bad) ljmp or pop sbb cmp inc dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb daa sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out hlt cli incl and sub aaa cmp inc dec push pop pop arpl je jg mov stos mov mov xlat fucom call lret lret lret lret lret lret lret lret lret lret lret incb unpcklps and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub out repnz std add push adc pop and das xor push push pop popa data16 jno jl xchg scas mov mov fnop out icebp idiv add or pop sbb cmp inc dec dec push pop pop gs jne add popf mov mov fneni(8087 out icebp idiv add or sub xor ds dec dec push pop pusha imul addl mov aam loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop gs jne addb cmpsl lods mov mov fnop in lock add or pop sbb cmp inc dec dec push pop pop fs jne addb cmpsl lods lret lret lret lret lret lret lret lret lret lret lret mov rcr fsubp ljmp adc sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out hlt cli add or push sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov fcomp jecxz out hlt cli incl sbb sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out hlt cli incl and sub aaa cmp pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt stc incl unpckhps and inc inc dec push pop pop arpl jae jle mov stos mov mov (bad) fsub out repnz add or sub xor aas inc dec push push pop popa insb lret lret lret lret lret lret lret lret lret lret lret jge mov test (bad) lret fneni(8087 out icebp idiv add or sub xor ds dec dec push pop pusha imul (bad) xchg test (bad) lret fnop in lock add or pop sbb cmp inc dec dec push pop pop gs jne addb mov mov fneni(8087 out icebp idiv add or pop sbb cmp inc dec dec push pop pop gs jne addb test mov mov fcmovu in lock add or pop sbb sub dec dec push pop pop gs jne addb cmpsl lods mov mov fcmovu in lock sti add or pop sbb daa sub dec dec push pop pop fs jne addb cmpsb lods mov mov (bad) in out hlt cli incl and sub pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor ss inc dec push pop pop arpl je jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov (bad) fsub out repnz incb or adc sbb and inc inc dec push push pop bound jae jle mov test (bad) aad loopne jmp idiv add or sub xor ds dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop fs jne addb cmpsb lods mov mov fcomp jecxz out hlt stc incl adc xor cmp inc dec push pop pop arpl je jg mov stos mov mov xlat fsub out pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop in repnz std add or sub xor aas inc dec push push pop popa insb jb jge mov test (bad) aad loopne jmp idiv add or pop sbb daa sub dec dec push pop pop gs jne addb mov mov fnop in lock add or pop sbb cmp pop pop fs jbe test rcr (bad) ljmp daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov fchs in lock add or pop sbb cmp inc dec dec push pop pop gs jne addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pop imul addl mov aam (bad) ljmp xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop push or pop sbb cmp inc dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in out hlt cli incl and sub aaa cmp pop pop imul nop xchg fwait mov mov fcomp jecxz out repz incb unpckhps and cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop gs jne addb cmpsl lods mov mov (bad) in lock sti add or push sbb daa sub dec dec push pop pop gs jbe addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop imul xchg xchg pushf mov mov lret lret lret lret lret lret lret lret lret lret into rcr (bad) ljmp adc sbb daa sub dec dec push pop pop fs jne addb test mov mov fcmovu in lock sti add or pop sbb daa sub dec dec push pop pop gs jne addb test mov mov aad loope in icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov test vaddsubps fsub out repnz add push adc push and das xor inc inc dec push push pop popa insb jb jge mov test vaddsubps fsub out repnz std add push adc pop and das xor push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out repnz std add push adc pop and das xor push push pop popa data16 jno jl xchg pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor test mov mov fcmovu in lock sti add or pop sbb sub dec dec push pop pop gs jne addl mov aam (bad) ljmp adc sbb cmp add push push pop popa data16 jno jge mov test (bad) (bad) fndisi(8087 out icebp idiv add or sub xor inc inc dec push push pop popa insb jb jge mov test (bad) aad loope in repnz add or sub xor aas inc dec push push pop popa insb jb jge mov test (bad) aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop imul addl mov aam (bad) jmp idiv add or pop sbb daa sub dec lret lret lret lret lret lret lret lret lret lret lret lret dec push pop pop gs jbe addl mov rcr fsubp jmp add and sub ss inc dec push push pop bound jae jle mov stos mov mov rcr fsubp jmp add and sub aaa cmp pop pop imul nop xchg pushf mov mov (bad) in out cmc cli add and sub aaa cmp inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt cli incl and sub ss inc dec push push pop bound jae jle mov stos scas mov rol rcl fsub out repnz std add push adc push and das xor aas inc dec push push pop pusha imul addl mov aam (bad) ljmp pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop or pop sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov fcomp jecxz out cmc cli add or push sbb daa sub aaa cmp push pop pop gs jne addb cmpsl lods mov mov (bad) in out cmc cli add or pop sbb daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in lock sti add or push sbb sub dec dec push pop pop gs jne addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop gs jne addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pusha imul addl mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor aam (bad) ljmp adc sbb daa sub dec dec push pop pop gs jne addl mov aam add out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov test vaddsubps fndisi(8087 out repnz add or sub xor aas inc dec push push pop popa data16 jno jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and xor push push pop bound jb jge mov stos mov mov xlat fsub out repnz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub ss inc dec push push pop bound jae jle mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xchg cltd lahf movsb stos scas mov rol rcl fsub out repnz std add push adc pop and das xor push push pop popa add jns test movsl stos mov mov xlat fucom jmp add and sub ss inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out hlt cli incl and sub aaa cmp pop pop arpl je jg mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul lret lret lret lret lret lret lret lret lret lret lret lea scas mov mov (bad) in out cmc cli add add daa sub dec dec push pop pop fs jne addl mov aam (bad) jmp add and sub ss inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub out repz incb or adc pop and inc inc dec push push pop bound jb jge mov test (bad) (bad) fndisi(8087 out repnz add or sub xor lret lret lret lret lret lret lret lret lret lret lret lret lret dec push push pop pusha imul addl mov mov fnop in icebp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aam (bad) jmp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sbb and cs aas inc dec push push pop pusha data16 jno jl xchg lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop arpl je jg mov stos mov mov (bad) fsub out repnz add or sub xor aas inc dec push push pop popa insb jb jge mov test (bad) aad loopne in icebp (bad) lret lret lret lret lret lret lret lret lret lret lret or sub das xor push push pop bound jb jge mov stos scas mov rol rcl fsub out repnz add or sub xor aas inc dec push push pop popa data16 jb jge mov stos scas mov rol rcl fsub out repnz add or sub xor aas inc dec push push pop popa data16 jno jl mov test (bad) aad loopne jmp idiv add or sub xor ds dec dec push pop pop imul addl mov aam (bad) ljmp adc sbb daa sub aaa cmp pop pop arpl jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jb jge mov test xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop mov rol rcl fucom call add unpcklps pop and inc inc dec push push pop bound jb jge mov stos scas mov rol rcl fsub call add push adc pop and inc inc dec push push pop bound jb jge mov stos scas mov rol rcl fsub out repnz incb or adc pop and inc inc dec push push pop bound jb jle mov stos mov mov (bad) fsub out repnz add push adc pop and das xor push push pop popa data16 jno jl xchg test mov mov fcmovu in lock sti add or pop sbb daa sub dec dec push pop pop fs jne addl mov aam (bad) ljmp adc sbb daa sub inc dec push push pop popa data16 jno pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop ja (bad) xchg test mov mov fcmovu in lock sti add or push sbb daa sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out hlt cli add and sub aaa cmp dec dec push pop pop arpl je addb cmpsb lods mov mov (bad) in out hlt cli incl and sub aaa cmp dec dec push pop pop arpl je jg mov lods mov mov (bad) in out hlt cli incl and sub ss inc dec push push pop bound jae jle mov stos mov mov rcr fucom jmp add unpckhps and xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor cmp dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add push adc pop and inc inc dec push push pop bound jb jge mov stos scas mov rol rcl fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos scas mov rol rcl fsub out repz incb or adc pop and inc inc dec push push pop bound jb jge mov test vaddsubps fsub out repnz add push adc pop and das xor add pop bound jae jle mov stos mov mov xlat fsub out repnz lret lret lret lret lret lret lret lret lret lret incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub out repz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov (bad) fsub out repnz add push adc push and das xor push push pop bound jb jle mov stos scas mov rol rcl fndisi(8087 out icebp idiv add or pop sbb cmp inc dec dec push pop pop imul addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop gs jbe addl mov aam fneni(8087 out icebp idiv add or sub xor ds dec dec push pop pop gs jne addb test mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor mov aam (bad) ljmp adc sbb sub dec dec push pop pop fs je jg mov lods mov mov fcomp in out hlt cli incl and sub aaa cmp dec dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp inc dec push pop pop arpl je jg mov stos mov mov (bad) in out hlt cli incl and sub aaa cmp inc dec push pop pop arpl jae jle mov stos mov mov (bad) fsub call add push adc pop and inc inc dec push push pop add outsb je jg mov stos mov mov fcomp jecxz out repz incl adc xor cmp inc dec push pop pop arpl jae pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor test movsl stos mov mov xlat fsub out repnz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub out repnz std add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call incl and sub aaa cmp inc dec push pop pop arpl je jg mov stos mov mov xlat fsub out repnz std add push adc push and das xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor cmp inc dec push push pop pusha imul (bad) xchg test mov mov fneni(8087 out icebp idiv add or pop sbb cmp inc dec dec push pop pop imul nop xchg pushf mov mov (bad) in out hlt cli incl and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt stc incl adc xor cmp inc dec push push pop arpl jae jle mov stos mov mov fcomp jecxz out repz incb unpcklps and inc inc dec push push pop bound add test cmpsb stos mov mov fcomp in out hlt cli incl and sub aaa cmp dec dec push pop pop arpl je jg mov stos mov mov xlat fucom call xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor incl unpckhps and sub aaa cmp inc dec push pop pop arpl jae jg mov stos mov mov fcomp jecxz out repz incl and sub aaa cmp inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out repz incl unpckhps and sub aaa cmp inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out repz incl unpckhps and inc dec dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc add add and sub aaa cmp pop pop gs jne addb cmpsl lods mov mov (bad) in out hlt cli incl and inc inc dec push pop pop arpl jae jg mov stos mov lret lret lret lret lret lret lret lret lret lret lret lret lret (bad) int3 rcl fucom call add unpckhps and sub ss inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out repz incb unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps and inc inc dec push push pop bound jae jge mov stos mov mov (bad) fsub out repnz std add push adc push and das xor aas inc dec push push pop pusha imul addl sahf movsb test (bad) lret rcl fsub out repnz std add push adc pop and das xor push push pop bound jb jge mov test (bad) lret rcl fsub out repnz std add push adc push and das xor aas inc dec dec push pop pusha imul pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop jnp xchg lods mov mov (bad) in lock sti add or push sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lock add or pop sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add or pop sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add sbb cmp inc dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop imul addl mov aam (bad) ljmp adc sbb daa sub aaa lret lret lret lret lret lret lret lret lret lret lret lret cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub aaa cmp dec dec push pop pop fs jne addb cmpsb lods mov mov fcomp jecxz out hlt stc incl and sub ss inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp inc dec push pop pop arpl je jg mov cmpsl lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out cmc cli add and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out cmc cli lret lret lret lret lret lret lret lret lret lret lret lret lret or push sbb daa sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out hlt cli incl and sub aaa cmp pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt cli incl and sub ss inc dec push pop pop arpl jae jle mov stos mov mov xlat fucom call add unpckhps and daa sub aaa cmp pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt stc incl adc xor cmp inc dec push pop pop arpl je jg mov stos mov mov xlat fucom call add unpckhps and sub aaa cmp inc dec push pop pop arpl je jg mov stos mov mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor (bad) int fcomp jecxz out hlt stc incl unpckhps and sub ss inc dec push pop pop arpl je jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl jae jg mov stos mov mov xlat fsub out repnz std add push adc pop and das xor push push pop popa insl jb jge mov stos add int3 rcl fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add push adc pop and das xor push push pop pusha imul addl mov aad loopne jmp idiv add or sub xor ds dec dec push pop pop fs jne lret lret lret lret lret lret lret lret lret lret test cmpsl lods mov mov fcomp jecxz out hlt stc incl unpckhps and inc inc dec push push pop bound jb jge mov test vaddsubps fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl xchg test mov mov fndisi(8087 out icebp idiv add or sub add push push pop bound jb jge mov stos scas mov rol rcl fsub out repnz incb or adc pop and inc inc dec push push pop bound jb jge mov stos scas mov mov fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl xchg test mov mov (bad) in out cmc cli add and sub xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor inc dec dec push pop pop fs je jg mov stos mov mov xlat fucom call add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov (bad) fsub out repnz std add push adc pop and das xor push push pop bound jae jle mov stos mov add fucom call add unpckhps and inc inc dec push pop pop arpl je jg mov stos mov mov xlat fucom call add unpcklps and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov (bad) fsub out repnz lret lret lret lret lret lret lret lret lret lret lret add push adc push and das xor inc inc dec push push pop popa data16 jno jl xchg test vpmulhuw lock add unpckhps and dec pop gs mov rcr jmp and inc dec push pusha imul xchg mov (bad) icebp cld or push sub dec push pop push popf cmpsl mov leave rcr jmp and inc dec push popa insb ja lea iret (bad) lock pop adc push pop addr16 test rol rcr (bad) jmp idiv add adc and sub cmp inc dec push push pop arpl jne addl mov (bad) fsub call pop or sub aaa cmp pop popa insl jae addb stos mov mov fsub call pop or sub aaa cmp pop lret lret lret lret lret lret lret lret lret lret lret lret bound je addl mov fsubp ljmp adc xor inc inc dec push pop pop imul test lods mov mov loope out hlt cli add push adc and sub dec push push pop arpl jbe (bad) mov lods mov mov fsubp ljmp adc and sub dec push pop pop fs jbe (bad) mov lods mov mov out hlt cli add or sbb and xor cmp dec dec push pop pusha data16 jb jle mov mov xlat fldl in out cmc sti add or sub aaa cmp pop popa insb jb orl mov mov fucom jmp pop or sub ss dec dec push bound jbe (bad) mov stos mov mov fcmovne pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor out repz incb adc sbb sub aas inc dec push push pop bound je addb test (bad) int3 rcr fsubp ljmp pop and inc dec dec push pop pusha data16 jb jle mov lods mov mov out cmc cli add or push sbb daa sub dec dec push pop pusha imul addl mov aam loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha data16 jno jl mov test (bad) aad loopne add repnz std add push adc pop and das xor push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps and inc inc dec push push pop bound jae jle mov lods mov mov fcomp jecxz lret lret lret lret lret lret lret lret lret lret hlt stc incl unpckhps and sub ss inc dec push pop pop arpl jae jg mov lods mov mov fcomp jecxz out hlt stc incl adc xor cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out hlt cli add and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out hlt cli add and sub aaa cmp inc dec push pop pop arpl je jnp xchg cmpsl lods mov mov (bad) in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov aam loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul (bad) xchg test lret lret lret lret lret lret lret lret lret lret mov fndisi(8087 out icebp idiv add or sub xor push push pop popa insb jb jge mov test vaddsubps fsub out repnz add push adc pop and xor push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl or push sbb daa sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or push sbb daa sub dec dec push pop pop fs jbe addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop fs jne pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor xchg scas mov mov fnop in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor ds dec dec push pop pusha imul addl mov (bad) fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop pusha data16 jno jl xchg movsb stos scas mov rol rcl fsub out repz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli add and sub aaa cmp pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop inc dec dec push pop pop imul nop xchg pushf mov mov (bad) in out cmc cli add and sub dec dec push pop pop gs jne addb cmpsl lods mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or add das xor push push pop bound jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and das xor push push pop bound jb jle mov stos mov mov (bad) fsub out repnz std add push adc pop and das xor push push pop popa insl jb jle mov stos mov mov xlat fsub out repz incb lret lret lret lret lret lret lret lret lret lret push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl adc xor cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc sti add or pop sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov aad loope in icebp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov test (bad) xlat fsub call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom jmp add adc xor cmp inc dec push pop pop arpl je jg mov stos mov mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop rcr fucom call add and sub aaa cmp pop pop imul nop xchg pushf mov mov (bad) in out cmc cli add and sub dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in lock add or pop sbb sub xor ds add push pop popa data16 jb jge mov test vaddsubps fsub out repnz add push adc pop and das xor push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps and inc inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp inc dec push pop pop arpl jne addb xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop pushf mov mov (bad) in out cmc sti add or push sbb daa sub dec dec push pop pop imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jno jl mov test vaddsubps add loop in repz incb unpcklps and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp pop pop imul nop xchg pushf mov mov fcmovu in lock sti add or pop sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lock add or pop sbb cmp inc dec dec push pop pusha lret lret lret lret lret lret lret lret lret lret imul addl mov aam (bad) ljmp adc sbb cmp inc dec push push pop pusha imul (bad) xchg test mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha add jge mov test vaddsubps fndisi(8087 out icebp idiv add or sub xor push push pop popa data16 jb jge mov test (bad) (bad) fndisi(8087 out icebp idiv add or sub xor inc inc dec push push pop popa insl jb jge mov stos mov mov xlat fsub out repz incb or adc pop and xor push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps and pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop sub cmp dec push push pop bound je jg mov stos mov mov fcomp jecxz out repz incl unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add and sub aaa cmp pop pop arpl je jg mov lods mov mov (bad) in out hlt cli add and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out cmc sti add or push sbb daa sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out cmc cli add and sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lret lret lret lret lret lret lret lret lret lret lret lret lock add or pop sbb cmp inc dec dec push pop pop imul addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pusha imul addl sahf movsb stos scas mov rol rcl fsub out repnz add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub out repnz std add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub out repz incb or adc pop and xor push push pop arpl jae jle mov stos mov mov fcomp jecxz out hlt stc incl adc xor cmp inc dec push pop pop imul nop xchg pushf mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop mov ret rcr fsubp jmp add and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add sbb cmp inc dec dec push pop pusha imul (bad) xchg test (bad) aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha data16 jno jl xchg test vaddsubps fndisi(8087 out repnz add or sub xor aas inc dec push push pop popa data16 jno jl xchg test vaddsubps fndisi(8087 out repnz add or sub xor aas inc dec push push pop popa data16 jno jl mov test (bad) (bad) fsub out repnz std add push adc pop and das xor push push pop popa insb jb lret lret lret lret lret lret lret lret lret lret lret lret mov test vaddsubps fsub out repnz std add push adc pop and das xor push push pop popa insl jb jge mov movsl stos mov mov xlat fucom call add adc xor cmp inc dec push pop pop arpl jae jle mov stos mov mov fcomp jecxz out repz incb adc xor cmp inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt cli incl and sub cmp pop pop imul nop xchg fwait mov mov (bad) in out hlt cli incl and sub aaa cmp pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor inc dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc sti add or push sbb daa sub xor ds dec dec push pop pop imul addl mov aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul (bad) mov test (bad) aad loope in icebp idiv add or sub xor inc inc dec push push pop popa insb jb jge mov stos mov mov xlat fsub out repz incb or adc pop and inc inc dec push push pop bound jb jle mov stos mov mov xlat fsub call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor or adc xor cmp inc dec push pop pop arpl jae jle mov stos mov mov rcr fsubp jmp add and sub aaa cmp pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out hlt cli incl and sub cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out hlt cli incl and sub cmp pop pop fs jne addb cmpsb lods mov mov xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop int fcomp jecxz out hlt cli incl and sub aaa cmp dec add pop pop gs jne addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or push sbb daa sub dec dec push pop pop fs jne addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop gs jne addb test mov mov fcmovu in lock sti add or pop sbb sub dec dec push pop pop gs jne addb test mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pop gs jbe addl pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xchg xchg popf mov mov add loope in repnz add push adc push and das xor aas inc dec push push pop popa data16 jno jge mov test (bad) (bad) fsub out repnz add push adc push and das xor push push pop popa insb jb jge mov test (bad) aad loopne in repnz add or sub xor aas inc dec push push pop popa data16 jno jl xchg test (bad) aad loopne jmp idiv add push adc push and das xor aas inc dec push push pop popa data16 jno jge mov test (bad) aad loope in icebp idiv add or sub xor push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out repnz add push adc push and xor push lret lret lret lret lret lret lret lret lret lret lret bound imul (bad) xchg fwait mov mov fcomp jecxz out hlt cli incl and sub aaa cmp dec dec push pop pop imul nop xchg pushf mov mov (bad) in out hlt cli incl and sub aaa cmp inc dec push pop pop imul nop xchg pushf mov mov (bad) in out cmc cli add and sub cmp pop pop fs jne addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop gs jne addb test mov mov fcmovu in lock sti add or pop sbb daa sub dec dec push pop pop gs jne addb test mov mov fnop in lock cld add or lret lret lret lret lret lret lret lret lret lret push and cs aas inc dec dec push pop pusha imul addl mov (bad) fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop pusha imul addl mov aad loope in icebp idiv add or sub xor aas inc dec push push pop pusha data16 jno jl xchg test (bad) lret fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl xchg test (bad) aad loopne jmp idiv add or sub xor inc inc dec push push pop popa data16 jno jge mov test (bad) aad loopne in icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl orl stos mov mov xlat lret lret lret lret lret lret lret lret lret lret lret lret lret out repnz std add push adc push and inc inc dec push push pop bound jae jle mov stos scas mov rol rcl fsub out repnz std add push adc pop and xor push push pop bound jae jle mov stos mov mov xlat fsub out repnz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add add adc xor cmp inc dec push pop pop arpl je jg mov xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor mov mov (bad) in out hlt cli add and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out cmc cli add or push sbb daa sub cmp pop pop imul nop xchg fwait mov mov (bad) in out cmc cli add or push sbb daa sub cmp pop pop imul nop xchg fwait mov mov (bad) in lock sti add or push sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or push sbb daa sub dec dec push pop pop fs jne addb mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pop lret lret lret lret lret lret lret lret lret lret gs jne addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in lock sti add or push sbb daa sub dec dec push pop pop gs jbe addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop gs jne addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pusha imul addl mov aam loopne jmp idiv add or pop sbb add cs aas inc dec push push pop pusha imul (bad) mov test (bad) aad loopne jmp idiv add or lret lret lret lret lret lret lret lret lret lret lret sub xor ds dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop gs jbe addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov rol rcl fndisi(8087 out repnz std add push adc pop and das xor push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor in icebp idiv add push adc push and das xor push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out icebp idiv add or sub xor push imul fwait movsl ret cmp imul (bad) add cmpsl lods mov mov fucom jmp pop or sub aaa cmp pop pusha data16 jb jle mov scas mov mov fucom jmp pop or sbb and inc dec dec push pop pusha data16 jb jle mov lods mov mov fsub call push or sbb and xor cmp dec dec push pop pusha data16 jb jle mov lods mov mov fucom jmp pop or sbb and xor cmp dec dec push pop pusha gs jb jle mov scas mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor mov xlat fucom jmp pop or sbb and xor cmp dec dec push pop pusha data16 jno jge mov lods mov mov fucom jmp pop or sub ss dec dec push pop pusha data16 jb jns test test mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insl jae jg mov scas mov rol rcl fucom jmp or adc and sub aaa cmp pop popa insl jae jle mov scas mov rol rcr fucom jmp pop or sub aaa cmp pop popa insl jae jle mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insl jb jle mov scas mov rol rcl (bad) pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor jmp pop or sub ss dec dec push pop pusha data16 jb jle mov scas mov mov fucom jmp pop or sbb and xor cmp dec dec push pop pusha add jb jle mov scas mov rol rcr fucom jmp pop or sbb and xor cmp dec push pop pop gs jbe (bad) mov stos mov mov fndisi(8087 out repz incl and cs inc inc dec push pop pop fs jbe (bad) xchg stos mov mov fndisi(8087 call add and das xor push pop pop fs jbe (bad) mov stos mov mov fndisi(8087 out repnz incb adc sbb cmp dec push pop pop fs jbe (bad) mov stos mov mov fnop out repnz incb pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor or push sbb sub dec push pop pop fs jbe orl mov fndisi(8087 out repz incl and cs inc inc dec add pop imul orl lods mov mov fsub call push or sbb and xor cmp dec dec push pop pop imul orl lods mov mov fucom call push or sbb and xor cmp inc dec push pop pop imul orl lods mov mov fsub call push or sbb and xor cmp inc dec push pop pop imul orl lods mov mov fsub jmp push or sbb and xor cmp dec dec push pop pop imul orl lods mov mov fsub call push or sbb and xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor ss inc dec push pop pop imul orl lods mov mov fsub call add and das ss inc dec dec push pop pusha data16 jb jle mov lods mov mov fsub out repz incl and cs aas inc dec push push pop arpl jne addl mov fndisi(8087 out repz incl and cs inc inc dec push push pop arpl jne orl mov fndisi(8087 out repnz incb adc sbb sub xor inc inc dec push push pop arpl jne addl mov fneni(8087 out repnz incb adc sbb sub xor inc inc dec push push pop arpl jne addl mov fndisi(8087 out repz incl and das xor inc inc dec push pop lret lret lret lret lret lret lret lret lret lret pop fs jbe (bad) mov stos mov mov fndisi(8087 out repz incb and add ss dec dec push pop pop imul orl lods mov mov fucom call push or sbb and xor cmp dec dec push pop pusha data16 jb jge mov lods mov mov fndisi(8087 out repz incl adc sbb sub dec push push pop arpl jne addl mov fnop out repnz incb adc xor aas inc dec push push pop bound je addl mov fnop out icebp idiv add unpckhps and sub dec push push pop bound je addb stos mov mov (bad) in icebp idiv add unpckhps and sub cmp inc dec push push pop bound je or xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor mov rol rcr (bad) jmp idiv add unpckhps sbb sub xor inc inc dec push push pop arpl jne addl mov fnop out repnz add adc sbb sub xor aas inc dec push push pop arpl jne addl mov fnop out icebp idiv add unpckhps and sub dec push push pop arpl jne addl mov fnop out icebp idiv add unpckhps and sub dec push push pop arpl jne addl mov fnop out repnz add unpckhps and sub dec push push pop bound je addl mov fnop out repnz incb or adc xor aas inc dec push push pop bound je addb stos lret lret lret lret lret lret lret lret lret lret lret mov mov fnop out repnz std add or pop sbb sub xor inc inc dec push pop pop fs jbe (bad) xchg stos mov mov fndisi(8087 out repz incl and das xor push pop pop fs jbe (bad) mov lods mov mov fndisi(8087 out repz add and das xor push pop pop fs jbe (bad) mov lods mov mov fndisi(8087 out repz incl and das xor push pop pop fs jbe (bad) mov stos mov mov fndisi(8087 out repz incl and cs inc inc dec push pop pop fs jbe (bad) mov lods mov mov fsub call push or pop sbb cmp dec push pop pop imul orl lods mov mov lret lret lret lret lret lret lret lret lret lret lret fsub call add or sub aaa cmp dec dec push pop pusha data16 jb jle mov scas mov mov fucom jmp pop or sbb and xor cmp dec dec push pop pusha imul orl lods mov mov fucom jmp push or sbb and xor cmp inc dec push pop pop imul orl lods mov mov fndisi(8087 out repz incl and cs inc inc dec push pop pop fs jbe (bad) mov stos mov mov fndisi(8087 out repnz incb adc sbb sub xor inc inc dec push pop pop fs jbe (bad) mov stos mov mov fndisi(8087 out repnz incb adc sbb daa sub dec push push pop arpl jne addb stos scas mov rol rcr fild out repnz lret lret lret lret lret lret lret lret lret lret lret lret lret or adc xor aas inc dec push push pop arpl jne addl mov (bad) in icebp idiv add push adc and inc dec dec push pop pusha data16 jb jle mov scas mov rol rcr fucom jmp pop or sub aaa cmp pop pusha data16 jb jle mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop pusha data16 jb jle mov scas mov mov fucom ljmp adc pop and inc dec dec push pop pusha data16 jb jle mov scas mov mov fucom jmp pop or sub aaa cmp pop popa data16 jb jle mov scas mov rol add fcomp in lock add push adc and pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor inc dec push push pop bound je jg mov scas mov rol rcr (bad) ljmp adc and sub cmp pop popa push test test (bad) int fcomp in lock add push adc and sub aaa cmp pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insb jb jle mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and sub cmp pop popa insl jae jg mov scas mov add (bad) int (bad) in icebp idiv add unpckhps and sub dec lret lret lret lret lret lret lret lret lret lret lret push push pop arpl jne addb stos mov mov fnop out icebp idiv add unpckhps and sub dec push push pop arpl jne addl mov fnop out icebp idiv add unpckhps and sub cmp inc dec dec push pop bound je jg mov scas mov rol rcr (bad) ljmp adc and sub cmp inc dec dec push pop popa insl jae jg mov mov mov (bad) in icebp idiv add unpcklps and sub cmp inc dec push push pop bound je jg mov scas mov rol rcr (bad) jmp idiv add push adc and sub aaa cmp pop popa insb jb jle mov add int3 rcr fsubp ljmp adc pop and inc dec dec push pop popa insl jae pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor test test mov rol rcl fucom jmp or sub aaa cmp pop pusha data16 jb jle mov lods mov mov fsub out repz incl and cs push pop pop fs jbe addl mov fnop out repnz incb unpckhps and sub dec push push pop arpl je addb test (bad) int3 rcr fsubp ljmp adc pop and inc dec dec push pop pop imul orl lods mov mov fucom call push or sbb and xor push pop pop imul orl test mov rol rcl fucom jmp push or sbb and das xor push pop pop fs jbe (bad) mov lret lret lret lret lret lret lret lret lret lahf movsl stos mov mov fndisi(8087 out repnz incb adc sbb sub xor inc inc dec push push pop arpl je addb test (bad) int fcomp in lock add push adc and sub cmp pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and sub cmp inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec push push pop bound jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa data16 jae add sahf movsb stos mov mov fcmovu in icebp idiv add push adc and sub cmp inc dec push push pop bound je jg mov mov mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop rol rcr (bad) jmp idiv add unpckhps and sub cmp inc dec push push pop bound je jg mov scas mov rol rcr (bad) jmp idiv add unpckhps and sub cmp inc dec push push pop bound je addb test enter (bad) jmp clc incb adc xor aas inc dec push push pop arpl jne addb stos mov mov (bad) in icebp idiv add unpckhps sub xor aas inc dec push push pop arpl jne addl mov (bad) in icebp idiv add push adc and sub cmp pop bound outsl jne addl mov fnop out repnz std add unpckhps and sub dec push push pop bound jne addl mov fnop out pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop in repnz incb adc xor aas inc dec push push pop arpl jne addb stos mov mov fnop out repnz incb adc sbb sub xor aas inc dec push push pop arpl jne addl mov fndisi(8087 out repz incl and cs inc inc dec push pop pop fs jbe (bad) mov stos mov mov fndisi(8087 out repz incl and das xor push pop pop fs jbe (bad) mov lods mov mov fndisi(8087 out repnz incb adc sbb sub xor inc inc dec push pop add imul orl lods mov mov fsub call add and das xor push pop pop imul orl lods mov mov fsub call add xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop pop sbb cmp dec push pop pop imul orl lods mov mov fsub call push or sbb and xor cmp dec dec push pop pop imul orl lods mov mov fucom jmp push or sbb and xor cmp dec dec push pop pusha imul orl lods mov mov fucom jmp pop or sub ss dec dec push pop pusha imul orl lods mov mov fucom jmp pop or sub aaa cmp dec add pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc xor ds dec push push pop bound je jg mov scas mov rol rcr (bad) ljmp adc and sub aaa ds lret lret lret lret lret lret lret lret lret inc dec push push pop bound jae jg mov scas mov rol rcr fsubp ljmp adc and sub aaa cmp pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and sub aaa ds dec dec push pop popa insl jae jg mov scas mov rol rcr (bad) jmp idiv add push adc and sub cmp aas inc dec push push pop arpl jne addb stos mov mov (bad) in repnz add unpckhps and sub dec push push pop arpl jne addb stos mov mov (bad) in icebp idiv add adc sbb daa sub dec push push pop arpl pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop outsb je addb stos scas mov rol rcr (bad) ljmp adc pop and inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and sub cmp pop popa insl jb jle mov scas mov rol rcr fsubp ljmp adc pop and ds dec push push pop bound je addb test (bad) int (bad) in icebp idiv add push adc and sub cmp inc dec push push pop bound je jg mov scas mov rol rcr (bad) jmp idiv add unpckhps and sub cmp inc dec dec push pop popa insl jae jle mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor mov mov fsub call push or sbb and xor cmp dec dec push pop pusha data16 jb jge mov lods mov mov fsub call push or sbb cmp inc dec push pop pop imul orl lods mov mov fsub call add and cs inc inc dec push pop pop fs jbe (bad) mov lods mov mov fndisi(8087 out repz incl sbb cmp dec push pop pop imul orl lods mov mov fucom call push or sbb and xor cmp inc dec push pop pop imul orl lods mov mov fsub call add and das xor push pop pop fs jne addl lret lret lret lret lret lret lret lret lret lret ret aam loopne in repnz incb adc sbb sub xor inc inc dec push push pop arpl jne addl mov fnop out repnz incl and cs inc inc dec push pop pop fs jne addl mov fnop out repnz incb adc sbb sub xor inc inc dec push push pop arpl jne addb stos mov mov fnop out repnz incb add and cs inc inc dec push pop pop fs jbe (bad) mov stos mov mov fndisi(8087 out repz incb and cs inc inc dec push pop pop imul xchg lcall ret leave iret aad loope in repz incb adc sbb sub xor inc inc dec push push pop arpl jne addl mov fndisi(8087 lret lret lret lret lret lret lret lret lret lret lret lret repz incb adc sbb sub xor inc inc dec push push pop arpl jne addl mov fnop out repnz incb unpckhps and sub dec push push pop bound je addb stos mov mov (bad) in icebp clc incb adc sbb daa sub dec push push pop arpl jne addl mov fcmovu in add clc incb adc sbb sub xor inc inc dec push pop pop fs jbe addl mov fneni(8087 out repnz incb adc sbb sub xor inc inc dec push pop pop fs jbe (bad) mov stos mov mov fnop out repnz incb adc sbb sub dec push push pop arpl jne addl mov fndisi(8087 out repz incb lret lret lret lret lret lret lret lret lret lret lret sbb sub xor inc inc dec push pop pop arpl jne addl mov fndisi(8087 out repz incl and das xor push pop pop fs jbe (bad) mov stos mov mov fsub call add and das xor push pop pop fs jbe (bad) mov stos mov mov fiaddl loope in hlt cli add or pop sbb cmp dec push pop pop imul (bad) mov lods mov mov fndisi(8087 out repnz incb adc sbb sub xor inc inc dec push pop pop arpl jne addl mov fndisi(8087 out repz incb adc sbb sub xor inc inc dec push pop pop fs jbe (bad) mov stos mov mov fndisi(8087 out repnz incb adc sbb sub xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor cmp dec push push pop arpl jbe (bad) xchg stos mov mov fndisi(8087 out repnz incb adc sbb sub xor aas inc dec push push pop arpl jne addl mov fnop out repnz incb adc sbb daa sub dec push push pop arpl jne addb stos mov mov aad loope in repz incl and cs inc inc dec push pop pop imul xchg cltd lahf movsl stos mov mov fnop in repnz incb adc sbb sub xor aas inc dec push push pop arpl jne addl mov fnop out repnz incb or push sbb sub xor inc inc dec push pop pop arpl jne addl mov fnop out repnz incb unpckhps and sub dec push push pop lret lret lret lret lret lret lret lret lret lret lret imul xchg cltd sahf movsb stos mov mov fcmovu in icebp idiv add unpckhps and sub dec push push pop bound je addb stos mov mov (bad) in icebp idiv add push pop pusha imul orl lods mov mov fucom jmp pop or sub ss dec dec push pop pusha data16 jb jle add test (bad) int3 rcr fsubp ljmp adc and sub cmp inc dec dec push pop popa insl jae jg mov scas mov mov fucom jmp push or sbb and xor cmp dec dec push pop pusha imul orl lods mov mov fndisi(8087 out repz incb adc sbb sub dec push pop pop arpl jne addl mov lret lret lret lret lret lret lret lret lret lret into aam loopne in repnz incb adc sbb sub xor aas inc dec push push pop arpl jbe addl mov (bad) out repnz incb adc sbb sub xor aas inc dec push push pop arpl jne addl mov fnop out repnz incb adc sbb sub xor aas inc dec push push pop arpl add (bad) mov stos mov mov fndisi(8087 out repz incl and das xor push pop pop fs jbe (bad) mov lods mov mov fndisi(8087 out repz incl and das xor push pop pop imul (bad) mov lods mov mov fsub call add and das xor push pop pop imul orl lods mov mov fndisi(8087 out lret lret lret lret lret lret lret lret lret lret lret lret lret incl and cs inc inc dec push pop pop fs jbe (bad) mov stos mov mov fndisi(8087 out repz incl and cs inc inc dec push pop pop fs jbe (bad) mov stos mov mov fnop out repnz incb unpckhps and sub dec push push pop add outsl jne addb stos mov mov fnop out repnz incb adc sbb daa sub dec push push pop arpl je addb stos mov mov fnop out repnz incb adc sbb daa sub dec push push pop bound je addb test (bad) int (bad) in icebp idiv add unpckhps and sub dec push push pop arpl je addb stos mov mov (bad) in icebp idiv add unpckhps pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop sbb daa sub dec push push pop arpl jne addb stos mov mov (bad) in icebp idiv add unpckhps and sub dec push push pop arpl je addb stos mov mov (bad) in icebp idiv add unpckhps and sub cmp inc dec add pop arpl jne addl mov fndisi(8087 out repz incl and cs inc inc dec push pop pop fs jbe addl mov fneni(8087 out repnz incb unpckhps and sub dec push push pop bound jae jg mov scas mov rol rcr (bad) ljmp adc and sub cmp inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp jmp idiv add push adc and sub cmp lret lret lret lret lret lret lret lret lret lret lret lret dec push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and sub cmp inc dec push push pop bound je addb test (bad) int (bad) in lock add push adc and sub cmp inc inc dec push push pop arpl jne addl mov fnop out repnz incb adc sbb daa sub dec push push pop arpl jne addl mov fnop out repnz incb adc sbb sub xor aas inc dec push push pop arpl jne addl mov fndisi(8087 out repz incb adc sbb sub xor inc inc dec push push pop arpl jne addl mov fnop out repnz incb adc sbb sub xor aas inc dec push push pop arpl pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor jnp xchg mov mov fchs out repnz incb adc sbb sub dec push push pop arpl je addb stos mov mov fnop out icebp idiv add adc cs inc inc dec push pop pop fs jbe (bad) mov stos mov mov fnop out repnz incb adc sbb sub xor push pop pop fs jbe (bad) mov stos mov mov fndisi(8087 out repnz incb adc sbb sub xor aas inc dec push push pop fs jbe (bad) mov stos mov mov fndisi(8087 out repnz incb adc sbb daa sub dec push push pop bound je addb stos mov mov (bad) in icebp idiv add unpckhps and sub dec push push pop bound je addb lret lret lret lret lret lret lret lret lret lret lret xchg popf mov ret rcr (bad) jmp idiv add unpckhps and sub dec push push pop bound je addb stos mov mov fnop out repnz incb adc add cmp dec push pop pop fs jne addl mov fnop out icebp idiv add adc sbb sub xor aas inc dec push push pop arpl jne addl mov fnop out repnz std add unpckhps and cs inc inc dec push push pop arpl jne addl mov fnop out repnz incb adc sbb sub xor aas inc dec push pop pop fs jne (bad) xchg stos mov mov fnop out repnz incb adc sbb sub xor aas inc dec push push pop arpl jne addl mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor leave iret aad loopne in repnz incb adc sbb sub xor inc inc dec push pop pop arpl jne addl mov fndisi(8087 out repz incl sbb cmp dec push pop pop imul (bad) mov lods mov mov fsub call push or pop sbb cmp dec push pop pop imul orl lods mov mov fsub call push or sbb and xor cmp dec dec push pop pop imul orl lods mov mov fsub call push or sbb and xor cmp dec dec push pop pusha data16 jb jge mov lods mov mov fucom jmp pop or sub ss dec dec push pop popa insb jb jle mov scas mov rol rcr fsubp ljmp lret lret lret lret lret lret lret lret lret sti add or sub aaa cmp pop pusha data16 jb jg mov scas mov rol rcr fsubp ljmp unpckhps and sub dec push push pop bound je addb stos mov mov fnop out repnz std add unpckhps and sub dec push push pop bound je addb stos mov mov fnop out repnz std add unpckhps and sub dec push push pop bound je addb stos mov mov (bad) in icebp idiv add unpckhps and sub dec push push pop bound je addb stos mov mov (bad) in icebp idiv add unpckhps and sub dec push push pop bound je addb stos mov mov (bad) in icebp idiv add unpckhps pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop sbb daa sub dec push push pop arpl jne addb stos mov mov fnop out in repnz incb adc sbb sub xor inc inc dec push push pop arpl jne (bad) mov stos mov mov fndisi(8087 out repz incl and das xor push pop pop fs jbe (bad) mov lods mov mov fsub call add and das xor push pop pop fs jbe (bad) mov stos mov mov fndisi(8087 out repz incl and cs inc inc dec push pop pop imul xchg cltd lahf movsl stos mov mov fnop out repnz incb adc sbb sub xor aas inc dec push push pop arpl jne addl mov fnop out repnz incb adc sbb sub xor inc lret lret lret lret lret lret lret lret lret lret inc dec push pop pop arpl jne addl mov add loope in repz incl and cs inc inc dec push pop pop gs jbe (bad) mov lods mov mov fndisi(8087 out repz incl and cs inc inc dec push pop pop imul xchg lcall ret leave iret aad loope in repz incl and das xor push pop pop fs jbe (bad) mov lods mov mov fsub call add and cs inc inc dec push pop pop fs jbe (bad) mov stos mov mov fndisi(8087 out repz incl and cs inc inc dec push pop pop fs jbe (bad) xchg stos mov mov fndisi(8087 out hlt cli incl and das xor push pop pop gs pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor jo jl mov lods mov mov xlat fucom call push or sbb and xor cmp dec dec push pop pusha data16 jb jge mov lods mov mov fsub call push or sbb and xor cmp dec dec push pop pusha data16 jb jle mov lods mov mov fucom call push or sbb and xor cmp dec dec push pop pop imul test cmpsl lods mov mov fucom jmp push or sbb and xor push pop pop imul (bad) mov lods mov mov fsub call push or sbb and das xor push pop pop fs jbe (bad) mov stos mov mov fndisi(8087 out repz incb adc sbb sub dec push push pop bound je addb lret lret lret lret lret lret lret lret lret lret lret lret mov mov fnop out repnz incb adc sbb sub xor inc inc dec push push pop arpl jne addl mov fnop out repnz incb movhps sub xor inc inc dec push push pop arpl jne addl mov fnop out repnz incb adc sbb sub xor inc inc dec push pop pop fs jbe (bad) mov stos mov mov fndisi(8087 out repz incb adc sbb sub xor inc inc dec push pop pop arpl jbe (bad) mov lods mov mov fndisi(8087 out repz incb adc sbb sub xor inc inc dec push push pop arpl jne addl mov fneni(8087 out repnz incb adc xor aas inc dec push push pop bound je jg mov stos mov lret lret lret lret lret lret lret lret lret lret mov fnop out repnz incb adc sbb daa sub dec push push pop bound je addb test (bad) int3 rcr fsubp ljmp adc and sub cmp inc dec dec push pop popa insl jae jg mov scas mov rol rcl fucom jmp push or sub ss dec dec push pop pusha data16 jb jle mov lods mov mov fucom jmp pop or sbb and xor cmp pop pusha data16 jb jle mov lods mov mov fsub call add and cs inc inc dec push pop pop fs jbe (bad) mov lods mov mov fsub call add and das xor push pop pop fs jbe (bad) mov nop xchg fwait mov mov (bad) pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor jmp push or sbb and xor cmp dec dec push pop pop imul orl lods mov mov fsub call push or sbb and xor cmp dec dec push pop pop imul orl lods mov mov fsub call push or sbb cmp dec push pop pop fs jbe (bad) xchg stos mov mov fnop out repnz add adc sbb sub xor aas inc dec push push pop arpl jne addl mov fnop out icebp idiv add unpckhps and cs inc inc dec push push pop arpl jne addl mov fnop out repnz incb adc sbb daa sub dec push pop pop arpl jne jl mov lods mov mov fndisi(8087 out repz incl pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop or pop sbb cmp dec push pop pop fs jbe (bad) mov lods mov mov fndisi(8087 out repz incl and cs inc inc dec push push pop arpl jne addl mov fnop out repnz incb adc xor aas inc dec push push pop arpl jne addl mov fnop out repnz incb adc sbb sub xor inc inc dec push push pop arpl jne addl mov fnop out repnz incl and cs inc inc dec push pop pop fs jne addl mov fndisi(8087 out repnz incb adc sbb sub xor inc inc dec push pop pop arpl imul (bad) mov lods mov mov fsub out repz incl and das lret lret lret lret lret lret lret lret lret lret xor inc inc dec push pop pop imul orl lods mov mov fsub call add and das xor push pop pop fs jbe orl lods mov mov fsub call push or sbb and das xor push pop pop imul orl lods mov mov fsub call push or sbb and xor cmp dec dec push pop pusha data16 jb jge mov lods mov mov fucom jmp pop or sub aaa cmp pop pusha data16 jb jle mov lods mov mov fucom jmp pop or sub ss dec dec push add insl jae jle mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop lret lret lret lret lret lret lret lret lret lret lret lret lret insl jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop pusha data16 jb jle mov lods mov mov fucom jmp pop or sub aaa cmp pop popa insb jb jle mov scas mov rol rcr fsubp ljmp adc and sub cmp push pop bound je addb test (bad) int (bad) in icebp idiv add unpckhps and sub dec push push pop bound je addb xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop mov mov mov (bad) in icebp idiv add unpckhps and sub dec push push pop arpl je addb stos mov mov fcmovu in icebp idiv add unpckhps and sub dec push push pop arpl jne addb stos mov mov fnop out icebp idiv add unpckhps and sub dec push push pop arpl jne addl mov fnop out repnz incb unpckhps and sub dec push push pop bound je addb stos mov mov fnop out repnz incb adc sbb sub xor cmp dec push pop pop fs jbe (bad) mov stos mov mov fsub out repz incl and das xor inc inc dec push pop pop fs jbe (bad) mov stos mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor aad loope in repz incl and das xor push pop pop gs jbe (bad) mov lods mov mov fndisi(8087 out repz incl and xor cmp dec push pop pop imul orl lods mov mov fsub call push or sbb cmp dec push pop pusha imul orl lods mov mov fsub call add and das xor push pop pop fs ja orl lods mov mov fndisi(8087 out repz incb adc sbb add das xor push pop pop fs jne addl mov fndisi(8087 out repz incl adc sbb sub xor inc inc dec push pop pop fs jne addl mov fcmovne pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop loope in repnz incb adc sbb sub xor aas inc dec push push pop arpl jne addl mov fnop out repnz incb adc sbb sub xor inc inc dec push push pop arpl jne addb stos mov mov fnop out icebp idiv add movhps sub dec push push pop arpl je addb stos mov mov (bad) in icebp idiv add push adc and sub cmp inc dec push push pop bound je addb test (bad) int3 rcr fsubp ljmp add xor ds dec push push pop bound je addb test (bad) int3 rcr fsubp ljmp adc push and xor cmp dec dec push pop pop imul (bad) mov lods mov mov fndisi(8087 out repz dec pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor add adc sbb sub dec push push pop bound je addb test (bad) int (bad) in icebp idiv add push adc and sub cmp inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and inc dec dec push pop popa insl jb jle mov scas mov mov fucom jmp pop or sub aaa cmp dec dec push pop pusha data16 jb jle mov lods mov mov fucom jmp add or sub cmp inc dec push push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and sub cmp pop bound je jg mov scas mov rol rcl fucom jmp push or sbb and pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop sub xor push pop pop fs jbe (bad) mov lods mov mov fndisi(8087 out repnz incb adc sbb daa sub dec push push pop bound je jg mov scas mov rol rcr (bad) ljmp adc and sub cmp inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insl jae jg mov scas mov rol rcl fldl in lock add unpckhps and sub cmp inc dec push push pop bound je jg mov scas mov rol rcr (bad) ljmp adc pop es cmp inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec lret lret lret lret lret lret lret lret lret lret lret lret pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop pusha data16 jb jg mov scas mov mov fucom jmp push or sbb and das xor push pop pop fs jbe (bad) mov lods mov mov fsub call add and das xor push pop pop fs jbe (bad) mov lods mov mov xlat fucom jmp pop or sub ss dec dec push pop pusha data16 jb jle mov lods mov mov fucom call pop or sub ss dec dec push pop pusha data16 jb jle mov lods mov mov fsub call push or sbb and xor cmp dec dec push pop pusha data16 jb pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop ja orl lods mov mov fsub call push or sbb and das xor push pop pop imul orl lods mov mov fsub call push or pop sbb cmp dec push pop pop imul orl in repz incl and das xor push pop pop fs jbe (bad) mov lods mov mov fsub call add and das xor push pop pop fs jbe (bad) mov stos mov mov fneni(8087 out repnz incb and cs inc inc dec push pop pop imul xchg cltd lahf movsl stos mov mov fnop out repnz incb adc sbb sub xor inc inc dec push pop pop imul xchg cltd sahf movsb stos mov mov (bad) lret lret lret lret lret lret lret lret lret lret in icebp idiv add push adc and sub aaa cmp pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insl jae jg mov scas mov rol rcr (bad) jmp idiv add push adc and sub aaa cmp pop popa insl jae jle mov scas mov rol rcr fsubp jmp pop or sub ss dec dec push pop pusha imul orl lods mov mov fucom jmp push or sbb and xor push pop pop imul orl lods mov mov fsub out repz add or pop sbb cmp dec push pop pop imul (bad) mov lods mov mov fndisi(8087 out repz incl lret lret lret lret lret lret lret lret lret lret sbb cmp dec push pop pop fs jbe (bad) mov lods mov mov fndisi(8087 out repz incl and cs inc inc dec push pop pop fs jbe (bad) mov stos mov mov fnop out repnz incb or adc xor ds dec push push pop bound je addb test (bad) int3 rcr fsubp ljmp adc pop and inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop pusha data16 jb jle mov lods mov mov fsubp jmp pop or sub aaa cmp pop pusha data16 jb jle mov scas mov rol rcl fucom jmp pop or sub aaa lret lret lret lret lret lret lret lret lret lret inc dec dec push pop popa insl jae jle mov scas mov rol rcl fucom jmp pop or sub aaa cmp pop pusha data16 jb jle mov scas mov mov fucom jmp push or sbb and xor cmp dec dec push pop pusha data16 jb jle mov lods mov mov fucom jmp push or sbb and xor cmp dec dec push pop pop gs jb jle mov lods mov mov fucom call push or sbb and xor cmp inc dec push pop pop imul orl lods mov mov fsub call push or sbb and xor cmp inc dec push pop pop imul orl lods mov mov fsub call push or pop sbb cmp dec push pop pop gs lret lret lret lret lret lret lret lret lret lret lret jno jl mov lods mov mov fndisi(8087 call add and das xor push pop pop fs jbe (bad) xchg stos mov mov fnop out repnz incb adc sbb sub xor aas inc dec push push pop arpl jne addb stos mov mov (bad) in lock add push adc pop and inc dec push push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop pusha data16 jb jle mov lods mov mov fsub call add and cs inc inc dec push push pop arpl jne addb stos mov mov fnop in icebp idiv add unpcklps and sub cmp inc dec dec push pop popa insl jb jle mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor scas mov rol rcr fsubp jmp pop or sub aaa cmp pop pusha data16 jb jle mov lods mov mov fucom jmp pop or sub ss dec dec push pop pusha data16 jb jle mov lods mov mov fsub call push or sbb and xor cmp dec dec push pop pop imul orl lods mov mov fsub call add and das cmp dec push pop pop imul orl lods mov mov fndisi(8087 out repnz incb adc sbb daa sub dec push push pop arpl jne addl mov fnop in icebp idiv add unpckhps and sub dec push push pop bound je addb stos mov lret lret lret lret lret lret lret lret lret lret lret lret mov fcmovu in icebp idiv add unpckhps and sub dec push push pop bound je addb stos mov mov (bad) in icebp idiv add unpcklps and sub cmp inc dec push push pop popa insl jae jg mov scas mov rol rcr (bad) jmp idiv add push adc and sub cmp inc dec push push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and sub aaa cmp pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and sub aaa cmp pop popa insl jae jg mov scas mov rol rcr fsubp jmp pop or sub aaa cmp pop popa insl jae jg mov scas mov rol rcl fucom lret lret lret lret lret lret lret lret lret lret lret lret jmp pop or sub ss dec dec push pop pusha data16 jb jle mov lods mov mov fucom jmp push or sbb and xor cmp inc dec push pop pop imul orl lods mov mov fsub call push or pop sbb cmp dec push pop pop fs jbe (bad) mov stos mov mov fndisi(8087 out repz incl and cs inc inc dec push pop pop fs jbe addl mov fnop in repnz incb adc xor aas inc dec push push pop arpl je addb stos mov mov (bad) in icebp idiv add push adc xor aas inc dec push push pop bound je addb test (bad) int (bad) in lock add push lret lret lret lret lret lret lret lret lret lret lret lret lret and sub aaa ds dec push push pop bound jae jg mov scas mov rol rcr fsubp ljmp adc and sub aaa cmp pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and sub aaa cmp pop popa insl jae jg mov scas mov rol rcr (bad) ljmp adc and sub cmp inc dec dec push pop popa insl jae jg mov scas mov rol rcr (bad) jmp idiv add push adc and sub cmp inc dec push push pop bound jae jg mov scas mov rol rcr fsubp ljmp adc and sub cmp inc dec dec push pop popa insl jae jg mov scas mov rol rcl fucom jmp pop or sub aaa cmp pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop inc dec dec push pop pusha data16 jb jle mov lods mov mov fsub call add and das xor push pop pop imul orl lods mov mov fsub call push or sbb and das xor push pop pop imul orl lods mov mov fsub call push or pop sbb cmp dec push pop pop gs jbe (bad) mov lods mov mov fsub out repz incl and das xor push pop pop fs jbe (bad) mov stos mov mov fndisi(8087 out repz incl and das xor inc inc dec push pop pop fs jbe addl mov fnop out repnz incb adc sbb daa sub dec push push pop arpl pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor jnp xchg stos mov mov fnop out repnz incb adc sbb sub xor inc inc dec push pop pop arpl jne addl mov fnop out icebp idiv add unpckhps and sub dec push push pop bound je addb test (bad) int (bad) in icebp idiv add push adc and sub cmp inc dec push push pop bound je addb stos scas mov rol rcr (bad) jmp idiv add push adc and sub cmp inc dec push push pop bound jae addb test (bad) int (bad) in lock add push adc and sub cmp inc dec dec push pop popa insl jae jg mov scas mov rol rcr (bad) ljmp adc and sub cmp inc dec dec push pop popa insl jae jg mov lret lret lret lret lret lret lret lret lret lret lret test mov rol rcr fsubp ljmp adc pop and inc dec dec push pop pusha data16 jb jle mov lods mov mov fucom jmp pop or sub ss dec dec push pop pusha data16 jb jge mov lods mov mov fsub call push or sbb and xor cmp dec dec push pop pusha data16 jb jge mov lods mov mov fsub call push or pop sbb cmp dec push pop pop imul (bad) mov lods mov mov fndisi(8087 out repz incl and das xor push pop pop fs jbe orl lods mov mov fsub out repz incl and cs inc inc dec push pop pop fs jbe addl mov lret lret lret lret lret lret lret lret lret lret aad loope in repz incl adc sbb sub xor inc inc dec push push pop arpl jne addl mov fnop out repnz incb unpckhps and sub dec push push pop arpl jne addb stos mov mov (bad) in icebp idiv add unpcklps and sub cmp inc dec push push pop bound jae jg mov scas mov rol rcr fsubp ljmp adc and sub cmp inc dec push push pop popa insl jae jg mov scas mov rol rcr fsubp jmp pop or sub ss dec dec push pop pusha data16 jb jle mov lods mov mov fucom jmp push or sbb and das xor push pop pop imul orl lods mov mov fsub call lret lret lret lret lret lret lret lret lret lret hlt cli add or sbb and xor cmp dec push pop pop imul orl lods mov mov fsub call push or sbb and xor cmp inc dec push pop pop imul orl lods mov mov fsub call push or pop sbb cmp dec push pop pop imul (bad) mov stos mov mov fnop out repz incl and cs inc inc dec push pop pop fs jbe addl mov fndisi(8087 out repz incb adc sbb cmp dec push pop pop fs jbe (bad) mov stos mov mov fnop out repnz incb adc sbb daa sub dec push pop pop imul xchg cltd lahf movsl stos mov mov fnop out repnz incb or adc lret lret lret lret lret lret lret lret lret lret and sub dec push push pop arpl jne addl mov fnop out icebp idiv add unpckhps and sub dec push push pop bound je jg mov mov mov (bad) in icebp idiv add unpckhps and sub cmp inc dec push push pop bound jae jg mov scas mov rol rcr fsubp ljmp adc and sub aaa cmp pop popa insb jb jle mov scas mov rol rcl fsubp ljmp adc pop and inc dec dec push pop pusha data16 jb jle mov scas mov mov fucom jmp pop or sub aaa cmp pop pusha data16 jb jle mov lods mov mov fucom jmp push or sbb and xor cmp dec lret lret lret lret lret lret lret lret lret lret lret lret dec push pop pusha data16 jb jle mov lods mov mov fsub call push or pop sbb cmp dec push pop pop imul orl lods mov mov fsub call add and das xor push pop pop fs jbe (bad) mov lods mov mov fndisi(8087 out repz incl and cs inc inc dec push push pop arpl jne addl mov fnop out repnz incb adc sbb daa sub dec push push pop bound je addb test (bad) int3 rcr (bad) jmp idiv add push adc and sub cmp inc dec push push pop bound je jg mov scas mov rol rcr fsubp ljmp adc and sub cmp inc dec push push pop bound jae pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor test test (bad) int3 rcr fsubp ljmp adc pop es cmp inc dec push push pop bound jae jg mov scas mov rol rcr fsubp ljmp adc and sub aaa cmp pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop pop imul test cmpsl lods mov mov fucom jmp push or sbb and das xor push pop pop fs jbe addl mov fndisi(8087 out repz incl and cs inc inc dec push pop pop fs jbe addl mov fndisi(8087 out repz incb adc sbb sub xor inc inc dec push push pop arpl jne addl pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor movsb stos mov mov fnop out repnz incb adc sbb sub xor aas inc dec push push pop arpl jne addb stos mov mov (bad) in icebp idiv add push adc and sub dec push push pop bound je addb test (bad) int (bad) in lock add push adc and sub aaa cmp pop bound jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop pusha insw jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop pusha data16 jb jle mov scas mov mov fucom jmp push or sbb and xor cmp dec dec push pop pop imul orl lods mov mov xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop rcl fucom call push or sbb and xor push pop pop fs jbe (bad) mov stos mov mov fnop out repnz incb adc sbb daa sub dec push push pop bound je addb test (bad) int3 rcr fsubp jmp pop or sub aaa cmp pop pusha data16 jb jle mov lods mov mov fucom call push or sbb and xor cmp dec dec push pop pusha data16 jb jle mov lods mov mov fucom call push or sbb and xor cmp inc dec push pop pusha data16 jb jge mov lods mov mov fsub call push or sbb cmp dec push pop pop fs jne orl mov fndisi(8087 out repz lret lret lret lret lret lret lret lret lret lret add and cs inc inc dec push pop pop fs jne addl mov fndisi(8087 out repnz incb adc sbb sub xor inc inc dec push push pop arpl jne addl mov fndisi(8087 out repz incb adc sbb sub xor inc inc dec push pop pop imul xchg cltd sahf movsb stos mov mov (bad) in icebp idiv add unpckhps and sub dec push push pop bound je addb stos mov mov (bad) in icebp idiv add unpckhps and sub dec push push pop arpl je addb stos mov mov (bad) in lock add push adc pop and inc dec dec push pop popa insl jae jle mov lods mov mov fucom jmp push or sbb lret lret lret lret lret lret lret lret lret lret lret and xor cmp dec dec push pop pusha data16 jb jle mov scas mov rol rcr fucom jmp pop or sub aaa cmp pop pusha data16 jb jge mov lods mov mov fucom jmp pop or sub ss dec dec push pop pusha data16 jb jle mov lods mov mov fucom jmp pop or sub ss dec dec push pop pusha data16 jb jle mov lods mov mov fsub call push or sbb and xor cmp dec push pop pop imul (bad) mov lods mov mov fndisi(8087 out repz incl and das xor push pop pop fs jbe (bad) mov lods mov mov fndisi(8087 out repz incl and cs inc inc dec lret lret lret lret lret lret lret lret lret lret lret pop pop fs jbe (bad) mov stos mov mov fndisi(8087 out repz incb adc sbb sub xor inc inc dec push push pop arpl jne addl mov fneni(8087 out repnz incb adc sbb sub xor aas inc dec push push pop arpl jne addb stos mov mov fnop out repnz incb adc xor aas inc dec push push pop arpl je addb stos mov mov fnop out repnz incb or adc xor ds dec push push pop bound jae jg mov scas mov rol rcl fucom jmp pop or sub aaa cmp dec dec push pop pusha data16 jb jle mov lods mov mov fsub call push or sbb and xor cmp dec dec push pop pop imul pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop jge mov lods mov mov fndisi(8087 out repz incb adc sbb sub dec push pop pop arpl jne addl mov fnop out repnz incb unpckhps and sub dec push push pop bound jne addl mov fcmovu in icebp idiv add unpckhps and sub dec push push pop bound je addb stos mov mov (bad) in icebp idiv add push adc and sub aaa cmp pop pusha data16 jb jle mov lods mov mov fucom jmp push or sbb cmp dec push pop pop fs jbe addl mov fchs out repnz incb adc sbb daa sub dec push push pop arpl je addb pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop movsb stos mov mov fcmovu in icebp idiv add adc sbb daa sub dec push push pop arpl je addb stos mov mov (bad) in icebp idiv add unpckhps and sub cmp inc dec push push pop arpl jne addl mov fnop out repnz add unpckhps and sub dec push push pop arpl je addb stos mov mov (bad) in icebp idiv add push adc and sub cmp inc dec push push pop bound je jg mov scas mov rol rcr (bad) jmp idiv add push adc and sub cmp inc dec push push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insl jb jle mov scas mov rol lret lret lret lret lret lret lret lret lret lret lret lret fcomp in lock add or sub aaa cmp pop pusha data16 jb jle mov scas mov mov fucom jmp pop or sub aaa cmp pop pusha data16 jb jle mov scas mov mov fucom jmp pop or icebp stc incl and das xor push pop pop fs jbe xchg fwait mov mov fcomp jecxz out hlt cli incl and sub cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out hlt cli incl and sub aaa cmp pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt cli incl and sub aaa cmp inc dec push pop pop imul nop xchg fwait mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor ret rcr fsubp jmp add and sub aaa cmp pop pop arpl jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop imul xchg xchg pushf mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop gs jne addl mov aam (bad) jmp idiv add or pop sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov fnop in lock add or pop sbb cmp inc dec dec push pop pop gs xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop jo jnp xchg lods mov mov fcmovu in lock add or pop sbb daa sub dec dec push pop pop gs jne addb test mov mov fcmovu in lock add or sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov test vaddsubps fndisi(8087 out repnz add or sub xor push push pop bound jb jle mov stos mov mov xlat fsub call add unpcklps pop and inc inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub ss lret lret lret lret lret lret lret lret lret lret lret cmp inc dec push pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pop fs jne addb test mov mov fcmovu in lock add or pop sbb daa sub dec dec push pop pop gs jne addl mov aad loopne jmp idiv add or sbb cmp inc dec dec push pop pusha imul (bad) xchg test vaddsubps fndisi(8087 out repnz add or sub xor inc inc dec push push pop popa insb jb jge mov test (bad) lret rcl fsub out repnz incb lret lret lret lret lret lret lret lret lret lret push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl adc xor cmp inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out cmc cli add and sub cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc sti add or pop sbb cmp inc dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pusha imul (bad) xchg test (bad) aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov test vaddsubps pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor (bad) fndisi(8087 out repnz add push adc push and das xor push push pop bound jb jge mov stos scas mov rol rcl fndisi(8087 out icebp idiv add or sub xor ds dec dec push pop pusha imul (bad) xchg test (bad) lret fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop pusha data16 jno jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fndisi(8087 out icebp idiv add or sub xor push push pop popa insb jb jge mov xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop lahf movsb stos scas mov rol rcl fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp in out hlt cli incl and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc sti add or pop sbb sub dec dec push pop pop gs jbe addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa lretw lret lret lret lret lret lret lret lret lret lret lret lret ja (bad) mov test (bad) (bad) fndisi(8087 out icebp idiv add or sub xor inc inc dec push push pop bound jb jle mov stos mov mov xlat fsub out repnz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out repz incb unpckhps and inc inc dec push push pop bound jae jg mov stos mov mov fcomp jecxz out hlt stc incl and sub ss inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop fs jne addb test mov mov fnop in lock add or pop sbb lret lret lret lret lret lret lret lret lret lret lret ds dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul (bad) xchg test (bad) (bad) fsub out repnz std add push adc pop and das xor push push pop popa insl jb jge mov stos scas mov rol rcl fsub call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push push pop arpl jae jg mov stos mov mov xlat fucom call add unpckhps and sub aaa cmp dec dec push pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt stc dec pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop add and sub aaa cmp pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul nop xchg pushf mov mov (bad) in out cmc cli add and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop gs jbe addl mov aad loopne in icebp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov stos mov mov xlat fsub out repnz incb or adc pop and das xor push push pop popa data16 jno jl xchg test (bad) pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor rcl fndisi(8087 out repnz add push adc push and das xor inc inc dec push push pop popa data16 jb jge mov test (bad) lret rcl fsub out repnz std add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl adc xor cmp inc dec push pop pop arpl je jg mov stos mov mov fcomp in out cmc cli add and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc sti add or pop sbb cmp inc dec dec push pop pop gs jbe addl mov aam loopne jmp idiv add or sbb and cs aas inc dec push push pop popa data16 jno jge mov xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop sahf mov mov fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl xchg test (bad) lret fnop in lock add or sub xor aas inc dec push push pop popa data16 jb jge mov test (bad) aad loopne in icebp idiv add or sub xor aas inc dec dec push pop popa data16 jb jge mov test vaddsubps fsub out repnz add or sub xor aas inc dec push push pop pusha data16 jno jl mov test vaddsubps fsub out repnz add push adc push and das xor push push pop popa insb jb jge mov stos mov mov (bad) fsub out repnz std add push adc pop and das xor push push pop popa lret lret lret lret lret lret lret lret lret lret lret insb jb jge mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl jae jle mov stos mov mov fcomp in out cmc cli add and sub dec dec push pop pop gs jne addb cmpsl lods mov mov fnop out icebp idiv add or sbb cmp inc dec push push pop pusha data16 jno jl mov test (bad) (bad) fndisi(8087 out repnz std add push adc pop and das xor push push pop bound jb jle mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt cli incl and sub lret lret lret lret lret lret lret lret lret lret lret lret lret inc dec dec push pop pop imul nop xchg fwait mov mov (bad) in out hlt cli add and sub dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb sub dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test (bad) aad loopne jmp idiv add or sub xor aas inc dec push push pop pusha imul (bad) mov stos scas mov rol rcl fsub out repnz std lret lret lret lret lret lret lret lret lret lret lret push adc pop and xor push push pop bound jb jle mov stos mov mov fcomp jecxz out repz incb unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub ss inc dec push push pop bound jae jle mov stos scas mov rol rcl fsub call add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom jmp add adc xor cmp inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt cli add and sub aaa cmp pop pop imul nop xchg pushf mov mov xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor rcr (bad) ljmp adc sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb sub xor ds dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sbb cmp inc dec push push pop pusha data16 jno jl mov test (bad) aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov test (bad) (bad) fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop popa insl jb jge mov stos mov mov xlat fsub out repz incb unpcklps pop and inc inc dec push push pop bound jae jle mov lret lret lret lret lret lret lret lret lret lret cmpsb stos mov mov fcomp jecxz out repz incl unpckhps and inc inc dec push push pop bound jb jge mov stos mov mov (bad) fsub out repnz add or sub xor aas inc dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop imul nop xchg fwait mov mov fcomp jecxz out hlt stc incl unpckhps and inc inc dec push push pop bound jb jge mov test (bad) (bad) fsub out repnz add or sub xor aas inc dec dec push pop pusha imul addl mov aam (bad) jmp idiv add or pop sbb daa sub dec dec push lret lret lret lret lret lret lret lret lret lret lret lret pop imul nop xchg fwait mov mov xlat fucom call add unpckhps and inc inc dec push push pop bound jb jge mov stos scas mov rol rcl fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop pusha imul addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop imul nop xchg fwait mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub call add push adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor and inc inc dec push push pop arpl je jg mov stos mov mov fcomp jecxz out repz incl unpckhps and sub ss inc dec push pop pop arpl jae jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp dec dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop fs jne addb test mov mov fcmovu in lock sti add or pop sbb sub dec dec push pop pop gs jbe addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pusha imul addl mov aad loopne pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop out icebp idiv add or sub xor aas inc dec push push pop pusha imul (bad) xchg test (bad) lret fneni(8087 out repnz add push adc push and das xor inc inc dec push push pop popa data16 jno jge mov test (bad) aad loope in icebp idiv add push adc push and das xor push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out repnz add or sub xor push push pop popa data16 jb jge mov test (bad) lret fnop in lock add or pop sbb daa sub dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa insb jb jge mov stos lret lret lret lret lret lret lret lret lret lret lret lret lret mov (bad) fsub out repnz add or sub xor aas inc dec dec push pop popa data16 jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and das xor push push pop popa insb jae jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push push pop bound jae jle mov lods mov mov fcomp in out hlt cli incl and sub aaa cmp dec dec push pop pop arpl je jg mov lods mov mov (bad) in out hlt cli add and sub aaa cmp pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop arpl je pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor test movsl stos mov mov fcomp jecxz out repz incl unpckhps and sub ss inc dec push pop pop arpl je jg mov stos mov mov xlat fucom jmp add and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli add and sub cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add or pop sbb cmp inc dec dec push pop pop imul addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop gs jbe addl mov aam (bad) ljmp adc sbb daa sub pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha data16 jno jl xchg test (bad) aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov stos scas mov rol rcl fsub out repnz add push adc push and das xor inc inc dec push push pop popa data16 jb jge mov stos scas mov rol rcl fsub out repnz std add push adc push and das xor push push pop popa insb jb jge mov stos mov mov xlat fsub out repz incb or adc pop and inc inc dec push push pop bound jb jge mov stos mov mov xlat fucom call add lret lret lret lret lret lret lret lret lret lret lret lret push adc pop and das xor push push pop popa data16 jno jl xchg test mov mov fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl xchg test (bad) lret fndisi(8087 out repnz add or sub xor push push pop popa insb jb jge mov test vaddsubps fsub out repnz std add push adc pop and xor push push pop bound jb jge mov stos scas mov rol rcl fsub out repnz std add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub out repz incb or adc and inc inc dec push push pop arpl jae jle mov stos mov mov lret lret lret lret lret lret lret lret lret lret lret loop in repz incb unpcklps pop and inc inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out repz incb unpckhps and inc inc dec push pop pop arpl je jg mov lods mov mov fcomp in out hlt cli incl and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc sti add or pop sbb daa sub dec dec push pop pop gs jne addl mov aam (bad) jmp idiv add or pop sbb cmp inc dec dec push pop pop gs jbe addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor mov mov fneni(8087 out icebp idiv add or pop sbb cmp inc dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub aaa cmp inc dec push pop pop arpl je jg mov stos mov mov xlat fucom call add unpcklps and inc inc dec push push pop arpl jae jle mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp pop pop arpl je jg mov fucomp out cmc sti add or jle xchg mov (bad) int loopne hlt incb adc and pop fs mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor in testl xor inc dec pop popa imul xchg pushf cmpsb mov (bad) into xlat loope testl xor addr16 test ret int jecxz testl xor insl jb jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push push pop arpl jae jle mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub ss inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl unpckhps add daa sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out hlt cli add or pop sbb daa sub dec dec push pop pop gs jne addb cmpsl lret lret lret lret lret lret lret lret lret lret lret mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec push push pop pusha imul (bad) xchg test (bad) lret fneni(8087 out icebp idiv add or sub xor aas inc dec dec push pop pusha data16 jno jl mov test rol rcl fsub out repnz std add push adc pop and xor push push pop bound jb jle mov stos mov mov xlat fucom call add unpcklps and inc inc dec push push pop bound lret lret lret lret lret lret lret lret lret lret jae jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb sub inc dec push push pop pusha imul (bad) xchg test mov mov fnop in icebp idiv add or sub xor aas inc dec push push pop pusha data16 jno jl xchg test (bad) lret fneni(8087 out icebp idiv add or sub xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop cmp inc dec push push pop popa data16 jno jl mov test (bad) aad loope in icebp idiv add or sub xor inc inc dec push push pop popa data16 jno jl mov test vaddsubps fndisi(8087 out repnz std add push adc push and xor push push pop bound jae jle mov stos mov mov xlat fsub out repnz std add push adc pop and das xor push push pop bound jae jle mov stos mov mov rcr fsubp jmp add unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp inc dec push pop pop arpl je addb cmpsb lods mov mov fcomp in out hlt cli lret lret lret lret lret lret lret lret lret lret lret lret add and sub aaa cmp pop pop imul xchg xchg pushf mov mov (bad) in lock sti add or push sbb daa sub dec dec push pop pop fs jne addb test mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pop gs jbe addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push add data16 jb jge mov test (bad) (bad) fsub out repnz add push adc push and das xor inc inc dec push push pop popa data16 jb jge mov test vaddsubps fndisi(8087 out repz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov lret lret lret lret lret lret lret lret lret int3 rcl fucom call add unpckhps and inc inc dec push pop pop arpl jae jg mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub aaa cmp pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub cmp pop pop fs jne addb cmpsl lods mov mov (bad) in jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop popa data16 jno jl mov test (bad) aad loope add or sub ss dec dec push pop pusha data16 jb jge mov lret lret lret lret lret lret lret lret lret lret lods mov mov fucom call push or sbb and das xor imul (bad) xchg test (bad) (bad) fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop pusha imul addl mov aam loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop gs jne addb cmpsl lods add iret aam loopne jmp idiv add or sub xor aas inc dec push push pop pusha imul (bad) xchg test mov mov fnop out icebp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aam (bad) jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor lods mov mov fcmovu in lock sti add or pop sbb daa sub dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec push push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp aas inc dec push push pop popa insl jb jge mov stos mov mov xlat fsub out repz incb or adc pop and inc inc dec push push pop bound jb jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out repz incl unpckhps and sub ss inc dec lret lret lret lret lret lret lret lret lret lret lret pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp inc dec push pop pop arpl je jg mov stos mov mov xlat fucom call add push adc pop and das xor push push pop popa data16 jno jl xchg test mov mov (bad) fsub out repnz std add push adc push and das xor inc inc dec push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out repnz std add push adc push and das xor aas inc dec push push pop popa data16 jno jl xchg test mov mov fcmovu in lock sti add or pop sbb cmp inc dec dec push pop pusha imul addl mov aam loopne jmp idiv add or pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor sbb and cs aas inc dec push push pop popa data16 jno jl xchg test (bad) lret fneni(8087 out icebp notl push sbb cmp dec push pop pop imul xchg pushf mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop gs jbe addl sahf mov mov fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop pusha data16 jno jl mov test vaddsubps fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov stos scas mov rol rcl fsub out repnz add push adc push and das xor aas inc dec push push pop popa data16 jb jge mov test (bad) lret rcl fsub out repnz incb lret lret lret lret lret lret lret lret lret lret lret lret push adc pop and inc inc dec push push pop bound jb jge mov stos scas mov rol rcl fsub out repz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub call add lldt sbb daa sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out cmc sti add or push sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb cmp inc dec dec push pop pop imul addl mov aam (bad) ljmp adc sbb sub xor ds dec dec push pop pusha imul addl mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor iret aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl mov aam (bad) ljmp adc sbb es aaa cmp inc dec push pop pop imul nop xchg pushf add mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pop imul addl mov aad loopne jmp idiv add or sbb cmp inc dec dec push pop pusha imul (bad) xchg test vaddsubps fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl mov test (bad) (bad) fsub out repnz std add push adc pop and das xor push push pop popa insb jb jge mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor xchg cltd sahf movsb test (bad) lret rcl fsub out repnz incb or adc pop and xor push push pop popa insl jb jle mov stos mov mov xlat fucom call add unpckhps and cmp pop pop imul nop xchg fwait mov mov fcomp in out hlt cli incl and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out cmc sti add or pop sbb daa sub dec dec push pop pop gs jne addl mov aam (bad) ljmp adc sbb sub dec dec push pop pop gs jne addl mov aam (bad) ljmp adc sbb cmp inc dec dec push lret lret lret lret lret lret lret lret lret lret lret lret lret imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec push push pop popa data16 jno jge mov test rol rcl fsub out repnz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound je jg mov lods mov mov fcomp jecxz out hlt stc incl unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov fcomp in out hlt cli incl and sub aaa cmp pop pop imul nop xchg pushf mov mov (bad) in out cmc cli add or push sbb pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop and sub cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out hlt cli incl and sub ss inc add pop pop imul nop xchg fwait mov mov (bad) in out hlt cli add and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov aam loopne jmp idiv add or sub xor aas inc dec push push pop pusha imul (bad) xchg test (bad) lret fneni(8087 lret lret lret lret lret lret lret lret lret lret lret out icebp idiv add or sub xor aas inc dec push push pop pusha data16 jno jl xchg test mov mov add loope in repnz add push adc push and das xor push push pop bound jb jle mov stos mov mov (bad) fsub out repnz std add push adc pop and das xor push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out repz incl unpckhps and inc inc dec push push pop arpl jae jg mov stos mov mov fcomp jecxz out repz incl unpckhps and inc inc dec push pop pop arpl jae jle mov lret lret lret lret lret lret lret lret lret lret lret lret mov ret rcr fsubp jmp add and sub ss inc dec push push pop bound imul nop xchg fwait mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop gs jbe addl mov aad loopne jmp idiv add or sbb cmp inc dec push push pop pusha imul (bad) xchg test mov mov fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov test (bad) (bad) fndisi(8087 out icebp idiv add push adc push and das xor push push pop popa insb lret lret lret lret lret lret lret lret lret lret lret js orl stos scas mov rol rcl fsub out repnz incb unpckhps and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt stc incl adc xor cmp pop pop imul nop xchg fwait mov mov (bad) in out hlt cli incl and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or push sbb daa sub dec dec push pop pop imul xchg xchg pushf mov mov (bad) in out cmc sti add or push sbb daa sub lret lret lret lret lret lret lret lret lret cmp pop pop fs jne addb lea scas mov mov fneni(8087 out icebp idiv add or sub xor aas inc dec dec push pop pusha imul addl mov aad loopne in icebp idiv add or sub xor aas inc dec push push pop pusha data16 jno jl xchg test vaddsubps fndisi(8087 out repnz add push adc push and das xor aas inc dec push push pop popa data16 jno jl mov test (bad) (bad) fsub out repnz std add push adc pop and das xor push push pop popa insl jb jge mov stos scas mov rol rcl fsub out repz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov (bad) fsub out repnz lret lret lret lret lret lret lret lret lret lret lret lret lret or add xor cmp inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt stc incl and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out cmc cli add and sub dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in lock sti add or push sbb daa sub dec dec push pop pop imul addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pusha imul addl mov aam loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg movsb stos scas mov lret lret lret lret lret lret lret lret lret lret lret lret lret lret rcl fsub out repnz add push adc push and das xor push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and das xor push push pop popa insb jb jge mov stos mov mov xlat fsub call add push adc pop and xor push push pop bound jb jge mov stos scas mov rol rcl fsub out repz incb or adc pop and xor push push pop bound jb jge mov stos mov mov xlat fsub call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom jmp add adc add cmp pop pop fs jne or xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor test cmpsl lods mov mov (bad) in out hlt sti add or pop sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub dec dec push pop pop fs jne addb cmpsl lods mov mov fcomp jecxz out hlt stc incl unpckhps and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop fs jne addb cmpsl lods mov add fnop in lock add or pop sbb cmp inc lret lret lret lret lret lret lret lret lret lret lret lret lret push pop pusha imul (bad) xchg test (bad) lret fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop pusha imul (bad) mov test vaddsubps fndisi(8087 out repnz add or sub xor aas inc dec push push pop popa data16 jb jge mov stos mov mov xlat fsub out repz incb or adc pop and inc inc dec push push pop bound jb jle mov stos mov mov xlat fucom call add unpcklps and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub ss inc add pop pop imul nop xchg fwait mov mov (bad) in lock sti add or pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop adc sbb daa sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc sti add or pop sbb cmp inc dec dec push pop pop gs jne addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pop imul addl mov aam (bad) ljmp adc sbb sub xor ds dec dec push pop pusha imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test (bad) lret add loope in repnz std add push adc pop and das xor push push pop bound jae jle mov stos mov mov lret lret lret lret lret lret lret lret lret lret lret lret xlat fsub out repz incb or sub xor inc inc dec push pop pop fs jne (bad) mov mov fcmovu in lock sti add or pop sbb cmp inc dec dec push pop pop fs jne addb cmpsl scas mov mov fnop out icebp idiv add or sub xor ds dec dec push pop pop gs jbe addl mov aam (bad) jmp idiv add or pop sbb cmp inc dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop fs jne addb mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov lret lret lret lret lret lret lret lret lret lret lret lret aam (bad) ljmp adc sbb sahf test loopne cmc std pop adc cmp outsl jp mov lret out sti push adc and addr16 test mov out stc adc dec push pop popa addb pushf mov mov (bad) in out cmc cli add or pop sbb sub dec dec push pop pop gs jne addl mov rcl fndisi(8087 out icebp idiv add or sub xor push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps and inc inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp dec dec push pop lret lret lret lret lret lret lret lret lret lret lret push jne addb cmpsl lods mov mov (bad) in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha data16 jno jge mov test (bad) aad loopne jmp idiv add or pop sbb cmp inc dec dec add pusha imul (bad) xchg test vaddsubps fsub out repnz add push adc pop and das xor push push pop popa insl jb jge mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps pop lret lret lret lret lret lret lret lret lret lret lret lret and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out repz incl unpckhps and sub ss inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt cli add and sub aaa cmp pop pop imul xchg xchg pushf mov mov (bad) add jmp idiv add or sub xor aas inc dec push push pop popa data16 jno jl mov test (bad) aad loopne jmp idiv add or sbb cmp inc dec push push pop pusha imul (bad) xchg test (bad) aad loope in icebp idiv add or sub xor inc inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fndisi(8087 out pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor repnz add push adc push and das xor push push pop bound jb jle mov stos mov mov xlat fsub out repnz incb or adc pop and inc inc dec push push pop bound jae jg mov stos mov mov xlat fucom call add unpckhps and inc inc dec push push pop bound add addb cmpsl lods mov mov fcomp in out hlt cli add and sub aaa cmp pop pop imul xchg xchg pushf mov mov (bad) in out cmc sti add or pop sbb daa sub dec dec push pop pop fs jne addb test mov mov fnop in icebp idiv add or sub xor aas inc dec dec push pop pusha imul addl pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop mov mov fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov test (bad) (bad) fsub out repnz add push adc pop and das xor push push pop popa insb jb jge mov stos scas mov rol rcl fndisi(8087 out repnz std add unpckhps and sub ss inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out hlt cli incl and sub aaa cmp pop pop imul nop xchg pushf mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pop gs jne pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor jnp xchg cmpsl lods mov mov (bad) in out cmc sti add or push sbb daa sub dec dec push pop pop gs jne addl mov aam loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg movsb stos scas mov rol rcl fsub out repnz incb or adc pop and inc inc dec push push pop bound je jg mov stos mov mov fcomp jecxz out repz incl unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov (bad) in out hlt cli incl and sub aaa cmp pop pop imul nop xchg fwait mov mov (bad) in out hlt cli incl and sub ss pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor inc inc dec push push pop bound jae jle mov stos scas mov rol rcl fsub out repz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov fcomp jecxz out hlt cli incl add daa sub dec dec push pop pop gs jne addb cmpsl lods mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pop gs jbe addl mov aam loopne jmp idiv add or sub xor ds dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor push push pop popa insb jb jge mov test (bad) lret fnop in lock add pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor or pop sbb sub xor aas inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jno jl mov test rol rcl fsub out repnz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub call add unpcklps pop and inc inc dec push push pop bound jae jg mov stos mov mov fcomp jecxz out repz incl unpckhps and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add or push sbb daa sub dec dec push pop pop fs jne addb test mov mov xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor iret aam (bad) jmp idiv add or pop sbb cmp inc dec dec push pop pop imul addl mov aad loopne jmp idiv add or sbb cmp aas inc dec push push pop popa data16 jno jge mov test (bad) (bad) fsub out repnz std add push adc pop and das xor push push pop popa insl jb jge mov stos scas mov rol rcl fsub call add unpcklps pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add and sub aaa cmp dec dec push pop pop imul nop xchg fwait mov mov xlat fucom call add unpckhps and inc inc dec push push pop bound jb jge mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor scas mov mov fneni(8087 out icebp idiv add or pop sbb cmp inc dec push push pop pusha imul (bad) xchg test les lret rcl fsub out repnz add push adc push and das xor inc inc dec push push pop popa data16 jno jl xchg test mov mov fcmovu in lock sti add or push sbb daa sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb cmp inc dec dec push pop pusha imul (bad) xchg test mov mov fneni(8087 out icebp idiv add or sub xor inc inc dec push lret lret lret lret lret lret lret lret lret lret lret pop popa data16 jno jl xchg test vaddsubps fndisi(8087 out repnz add or sub xor aas inc dec push add bound jae jle mov stos mov mov fcomp jecxz out hlt stc incl adc xor cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add or push sbb daa sub aaa cmp pop pop arpl je jg mov stos mov mov fcomp jecxz out repz incb unpcklps pop and inc inc dec push push pop popa insb jb jge mov test (bad) lret fnop in icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jge mov test vaddsubps fndisi(8087 out repnz add push adc pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop sbb and xor push push pop bound jb jle mov stos mov mov xlat faddl jecxz out hlt stc incl unpckhps and sub aaa cmp pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub cmp pop pop imul nop xchg pushf mov mov (bad) in out cmc cli add and sub aaa cmp pop pop gs jne addl mov aam (bad) ljmp adc sbb daa sub dec dec push pop pop imul addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop gs jbe addl mov aam lret lret lret lret lret lret lret lret lret lret in lock sti add or push sbb daa sub aaa cmp pop pop arpl outsl jne addb cmpsl lods mov mov (bad) in lock sti add or push sbb daa sub aaa cmp pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt stc incl unpckhps and inc inc dec push push pop bound jb jge mov test (bad) lret rcl fsub out repnz incb or adc pop and inc inc dec push push pop bound jb jge mov stos scas mov rol rcl fucom call add unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom jmp add and sub aaa cmp inc dec push pop pop arpl je jg mov xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor mov fcomp jecxz out hlt add add or pop sbb sub dec dec push pop pop imul addl mov aam (bad) jmp idiv add or sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor inc inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz add push adc push and das xor push push pop bound jae jle mov stos mov mov xlat fucom call add unpcklps and inc inc dec push pop pop arpl je jg mov stos mov mov fcomp jecxz out hlt stc incl unpckhps and sub aaa cmp inc dec push pop pop arpl pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor je addb mov mov fcmovu in lock sti add or push sbb daa sub aaa cmp pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov (bad) in out cmc cli add or pop sbb daa sub dec dec push pop pop gs jne addl mov aam loopne jmp idiv add or pop sbb cmp inc dec dec push pop pop gs jbe addl mov aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul (bad) xchg test (bad) aad loope in repnz add push adc sbb and pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop sub cmp dec push push pop bound jb jle mov stos mov mov xlat fsub out repnz incb unpcklps pop and inc inc dec push push pop arpl jae jg mov stos mov mov fcomp jecxz out repz incl adc xor cmp dec dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub cmp pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add or push sbb daa sub cmp inc dec dec push pop pop gs jbe addl mov aam (bad) ljmp adc sbb cmp inc dec dec push pop pusha data16 jno jge mov add (bad) lret rcl fsub out lret lret lret lret lret lret lret lret lret lret lret lret repnz add or sub xor aas inc dec dec push pop pusha imul (bad) xchg test (bad) (bad) fndisi(8087 out icebp idiv add or sub xor inc inc dec push push pop popa data16 jno jl mov test (bad) (bad) fsub out repnz std add push adc pop and das xor push push pop popa data16 jno jl xchg test vaddsubps fndisi(8087 out repnz add or sub xor aas inc dec push push pop popa insb jb jge mov test (bad) lret rcl fsub out repnz std add push adc pop and das xor push push pop bound jb jle mov stos mov mov xlat fucom call add unpcklps pop and cmp inc dec push pop pop arpl je jg mov stos mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor rcl fucom call add unpckhps and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl jae jle mov stos mov mov xlat fucom call add adc xor cmp inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt stc incl and sub aaa cmp pop pop imul nop xchg pushf mov mov (bad) in out cmc sti add or push sbb daa sub dec dec push pop pop imul addl mov rcl fneni(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno lret lret lret lret lret lret lret lret lret lret lret mov test (bad) (bad) fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop pusha insb jb jge mov stos scas mov rol rcl fsub out repnz std add push adc pop and xor push push pop bound jb jle mov stos mov mov xlat fsub out repz incb or adc pop and inc inc dec push push pop popa insb jb jge mov stos scas mov rol rcl fndisi(8087 out icebp idiv add or sub xor ds dec dec push pop pop gs jne addb cmpsl lods mov mov fcmovu in lock add or pop sbb cmp inc dec add pop popa data16 jno jge mov test vaddsubps fsub out repnz std add push adc pop and das xor lret lret lret lret lret lret lret lret lret lret lret lret dec push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and sub ss inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb cmp inc dec dec push pop pusha imul addl mov aam add out icebp idiv add or sub xor push push pop popa insb jb jge mov test vaddsubps fndisi(8087 out repnz add pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor or sub xor inc inc dec push push pop bound jb jge mov stos mov mov xlat fsub out repnz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add unpckhps and inc inc dec push pop pop arpl jae jg mov lods mov mov fcomp jecxz out hlt stc incl and sub aaa cmp inc dec push pop pop arpl je jg mov lods mov mov fcomp jecxz out hlt cli incl and sub aaa cmp pop pop imul xchg scas mov mov fnop out icebp idiv add or sbb cmp inc dec dec push pop pusha imul addl mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop rcl fndisi(8087 out icebp idiv add or sub xor aas inc dec push push pop popa data16 jno jl mov test (bad) (bad) fsub out repnz add push adc push and das xor push push pop popa insb jb jge mov stos mov mov xlat fsub out repz incb unpcklps and inc inc dec push push pop bound jae jle mov stos mov mov xlat fucom call add adc xor cmp inc dec push pop pop arpl je jg mov stos mov mov xlat fucom call incl and sub aaa cmp pop pop fs jne addb cmpsb lods mov mov (bad) in out cmc cli add and sub cmp inc dec dec push pop pop fs jne addb lret lret lret lret lret lret lret lret lret lret lret pushf mov mov (bad) in lock sti add or pop sbb sub dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push pop popa data16 jb jge mov test vaddsubps fndisi(8087 out repnz add or sub xor aas inc dec push push pop pusha imul (bad) mov test (bad) lret fnop in lock add or pop sbb daa sub dec dec push pop pop imul mov lods mov mov fcmovu in lock add or pop sbb cmp inc dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec push push lret lret lret lret lret lret lret lret lret lret lret data16 jno jl xchg test vaddsubps fndisi(8087 out repnz add push adc push and das xor inc inc dec push push pop popa data16 jb jge mov test (bad) (bad) fsub out repnz std add push adc pop and das xor push push pop popa insb jb jge mov stos scas mov rol rcl fsub out repnz incb or adc pop and inc inc dec push push pop bound jae jle mov stos mov mov xlat fsub out repnz incb unpcklps sbb es aaa cmp dec dec push pop pop imul nop xchg fwait mov mov (bad) in out cmc cli add and sub dec dec push pop pop fs jne addb cmpsl lods mov mov (bad) in out cmc cli add or push sbb pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop and sub dec dec push pop pop gs jne addb cmpsl lods mov mov (bad) in out cmc cli add and sub aaa cmp pop pop gs jne addb cmpsl lods mov mov (bad) in lock sti add or pop sbb daa sub dec dec push pop pusha imul addl mov aad loopne jmp idiv add or sub xor aas inc dec dec push pop pusha imul (bad) xchg add (bad) lret rcl fsub out repnz std add push adc pop and das xor push push pop popa insb jb jge mov stos mov mov xlat fucom call add unpcklps pop and inc inc dec push push pop arpl jae jle mov lods mov mov fcomp in pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor jmp add and sub aaa cmp pop pop imul xchg xchg pushf mov mov fcmovu in lock sti add or pop sbb daa sub dec dec push pop pop gs jbe addl mov aad loopne jmp idiv add or pop sbb cmp inc dec dec push pop pusha imul addl decl and cmp jle lahf stos mov int loop testl xor ds dec push push pop bound je addb stos mov mov fnop out repnz incl and xor cmp dec dec push pop pusha data16 jae jg mov mov mov fnop out repnz incb adc sbb sub xor push pop pop imul test test mov rol rcr lret lret lret lret lret lret lret lret lret lret fsubp jmp repnz incb or adc xor aas inc dec push push pop fs jbe (bad) mov lods mov mov fsub call sbb es cmp inc dec push push pop arpl jbe (bad) mov lods mov mov fsubp ljmp adc xor aas inc dec push push pop arpl jbe (bad) mov lods mov mov fucom jmp pop or sub dec push pop pop imul test stos mov mov fsub call or adc and sub dec push pop pop imul test stos mov mov fsub call pop or sub cmp inc dec push pop pop fs jbe (bad) mov lods mov mov fsub call adc xor cmp push pop imul xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor jg mov mov mov fndisi(8087 out repz incl xor dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp sub xor push pop pop fs jbe (bad) mov lods mov mov in stc add or sbb cmp dec dec push pop pusha data16 jno jge mov mov leave aam loopne in repnz std add unpckhps and sub dec push push pop arpl je (bad) lea mov fsub call push or sbb and das xor push pop pop imul (bad) mov lods mov mov fsub call push or pop sbb cmp dec push pop pop imul (bad) mov lods add rcl fucom jmp pop or pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor sbb and inc dec dec push pop pusha data16 jb jge mov lods mov mov fsub call pop or sub aaa cmp pop popa data16 jb jle mov scas mov rol rcl fucom jmp pop or sub aaa cmp pop popa insb jb jle mov scas mov rol rcl fucom jmp pop or sub aaa cmp pop popa insl jb jle mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop pusha data16 jb jle mov scas mov rol rcr fsubp ljmp adc and sub aaa cmp pop popa insl jae jg mov test enter (bad) jmp idiv add push adc and sub aaa lret lret lret lret lret lret lret lret lret lret lret lret dec dec push pop popa data16 jb jle mov lods mov mov fucom jmp pop or sub ss dec dec push pop pusha data16 jb jge mov lods mov mov fucom jmp pop or sub aaa cmp pop pusha data16 jb jle mov scas mov rol rcr fucom jmp pop or sub aaa cmp pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and sub cmp pop popa insl jae jg mov xchg cwtl sahf movsb stos mov mov fnop out repnz std add unpckhps and sub dec push push pop arpl pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor push xchg mov mov fnop out repnz incb adc sbb daa sub dec push push pop arpl je addb stos mov mov fnop out repnz incb unpckhps and sub dec push push pop bound je jg mov scas mov rol rcr fsubp jmp or adc pop and inc dec dec push pop pusha data16 jb jle mov lods mov mov fsub call add and das xor push pop pop imul orl lods mov mov fsub call push or pop push and das xor push pop pop imul jle mov scas mov mov fucom jmp push or sbb and xor cmp dec dec push pop pusha data16 jb jle mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor nop xchg pushf mov rol rcl fucom jmp pop or sub ss dec dec push pop pusha data16 jb jle mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insl jae jg mov scas mov rol rcr (bad) ljmp adc and sub cmp inc dec push push pop popa insl jae jg mov scas mov rol rcr (bad) jmp idiv add unpckhps and sub dec push push pop arpl je addb stos mov mov (bad) in icebp idiv add push adc and sub dec push push pop bound outsl jne addl mov fndisi(8087 out repnz incb adc sbb sub xor aas inc dec push push pop arpl jbe addl lret lret lret lret lret lret lret lret lret lret lret lret lret enter loopne jmp idiv add unpckhps and sub cmp inc dec dec push pop popa insl jae jg mov scas mov rol rcr (bad) jmp idiv add unpcklps and sub cmp inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and sub cmp inc dec push push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop pusha data16 jb jle mov scas mov mov fucom jmp pop or sub aaa cmp add insl jae jg mov scas mov rol rcr fsubp ljmp adc and sub cmp inc dec dec push pop popa insl jae jg mov scas mov rol rcr fmulp pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor in lock add push adc and sub aaa cmp pop bound jae jg mov scas mov rol rcr fsubp ljmp adc and sub cmp inc dec dec push pop popa insl je addb test (bad) int (bad) in icebp idiv add push adc and sub cmp inc dec push push pop bound jae jg mov scas mov rol rcr (bad) jmp idiv add unpcklps and sub cmp inc dec dec push pop popa insl jae jg mov scas mov mov fsubp ljmp adc pop and inc add push pop bound jae jg mov scas mov rol rcr fsubp ljmp adc and sub cmp inc dec push push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor adc and sub cmp inc dec push push pop popa insl jae jg mov scas mov rol rcl fucom jmp push or sbb and xor push pop pusha data16 jb jge mov lods mov mov fsub jmp push or sbb and xor cmp inc dec push pop pop imul test cmpsl lods mov mov fsub call push or pop sbb cmp dec push pop pop fs jne addl mov fndisi(8087 out repnz incb adc sbb daa sub inc dec push pop pop fs jbe (bad) mov stos mov mov fndisi(8087 out repz incl and cs inc inc dec push pop pop fs jbe (bad) mov stos mov mov fnop out repz incl and cs lret lret lret lret lret lret lret lret lret xor inc inc dec push pop pop fs jne addl mov fndisi(8087 out repnz incb adc sbb cmp dec push pop pop fs jbe (bad) mov stos mov mov fndisi(8087 out repnz incb adc sbb sub xor inc inc dec push pop pop imul (bad) mov lods mov mov fsub call add and das xor push pop pop imul orl lods mov mov fsub call push or sbb add inc dec dec push pop pusha data16 jb jle mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop pusha data16 jb jle mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop lret lret lret lret lret lret lret lret lret lret popa insl jae jg mov scas mov rol rcr fsubp jmp idiv add push adc and sub cmp inc dec push push pop bound jae jg mov scas mov rol rcr fsubp ljmp adc xor ds dec push push pop bound je addb test (bad) int3 rcr fsubp ljmp adc pop and inc dec dec push pop popa insl jb jle mov scas mov rol rcl fucom jmp pop or es cmp pop bound je addb test (bad) int (bad) in icebp idiv add push adc and sub cmp inc dec dec push pop popa insl jae jg mov scas mov rol rcr (bad) jmp idiv add unpckhps and sub cmp inc dec push push pop popa insl jae jg lret lret lret lret lret lret lret lret lret lret lret lret xchg pushf mov rol rcr fsubp ljmp adc and sub aaa cmp pop popa data16 jb jle mov lods mov mov fucom jmp pop or sub aaa cmp pop pusha data16 jb jle mov scas mov mov fucom call push or sbb and xor cmp dec dec push pop pusha imul orl lods mov mov fsub call add or sub aaa cmp pop popa insl jae jle mov scas mov rol rcl fucom jmp pop or sub ss dec dec push pop pusha data16 jb jle mov scas mov rol rcr fsubp jmp pop or sub aaa cmp pop pusha insb jb jle mov scas lret lret lret lret lret lret lret lret lret lret lret rol rcr fsubp ljmp adc pop and inc dec dec push pop pusha data16 jb jle mov lods mov mov fucom jmp pop or sub ss dec dec push pop pop imul orl lods mov mov fsub call add and das xor push pop pop fs jbe (bad) mov lods mov mov fndisi(8087 out out hlt cli add or sbb and xor cmp dec dec push pop pusha imul orl lods mov mov fsub out repz incl and das xor push pop pop fs jbe (bad) mov stos mov mov fnop out repnz incb adc sbb daa sub dec push push pop arpl jne addl mov lret lret lret lret lret lret lret lret lret lret lret fnop out repnz incb unpckhps and sub dec push push pop bound je addb stos mov mov (bad) in icebp idiv add unpckhps and sub cmp inc dec push push pop bound je addb stos mov mov (bad) in icebp idiv add unpckhps and sub dec push push pop bound je addb stos scas mov rol aam fndisi(8087 out repz incl and cs inc inc dec push pop pop arpl jne addl mov fnop out repnz incl and cs inc inc dec push pop pop fs jbe addl mov fndisi(8087 out repz incb adc sbb sub xor push pop pop fs jbe (bad) mov stos mov mov fndisi(8087 out repnz dec pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor add adc sbb sub xor aas inc dec push pop pop fs jbe (bad) mov stos mov mov fndisi(8087 out repnz incb adc sbb sub xor inc inc dec push push pop arpl jbe (bad) mov stos mov mov fndisi(8087 out repnz incb adc sbb daa sub dec push push pop bound je addb stos mov mov aad loopne in repnz incb adc sbb sub xor inc inc dec push push pop arpl jne addl mov fneni(8087 out repnz incb adc sbb sub xor aas inc dec push push pop arpl jne addl mov (bad) in icebp idiv add unpckhps and sub cmp inc dec push push pop popa insl jae jg mov scas mov rol rcl fucom jmp push or sbb and pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor xor cmp dec dec push pop pusha data16 jb jle mov lods mov mov fucom jmp push or sbb and xor cmp dec dec push pop pusha data16 jb jle mov lods mov mov fucom jmp push or sbb and xor cmp dec dec push pop pop gs jb jle mov lods add fcomp in lock add push adc and sub aaa cmp pop popa insl jae jg mov scas mov rol rcr (bad) ljmp adc and sub cmp inc dec push push pop bound je addb test (bad) int (bad) in icebp idiv add unpcklps and sub cmp inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and sub aaa cmp pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop push pop popa insl jae jle mov scas mov mov fucom jmp pop or sub aaa cmp pop pusha data16 jb jle mov scas mov rol rcl fucom jmp pop or sub ss pop popa insl jb jle mov test (bad) int (bad) in icebp idiv add unpckhps and sub cmp inc dec push push pop bound je addb test (bad) int3 rcr fsubp ljmp adc pop and inc dec dec push pop pusha imul orl lods mov mov fucom jmp push or sbb and xor cmp dec push pop pop imul (bad) mov stos mov mov fsub call push or pop sbb cmp dec push pop pop fs jbe pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop jl mov lods mov mov fnclex call push or pop sbb cmp dec push pop pop fs ja (bad) mov lods mov mov fndisi(8087 out repz incl and das xor push pop pop fs jbe (bad) mov (bad) xchg fwait mov mov fsub call push or sbb and xor cmp dec dec push pop pusha data16 jb jle mov lods mov mov fsub call push or sbb and xor cmp dec dec push pop pusha data16 jb jle mov lods mov mov fucom call push or sbb and xor cmp dec dec push pop pusha data16 jno jge mov lods mov mov fucom jmp push or sbb and xor cmp dec dec push pop pusha data16 jb jle mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop cmpsl lods mov mov fucom jmp pop or sub ss dec dec push pop pusha data16 jb jle mov lods mov mov fucom jmp pop or sub ss dec dec push pop pusha data16 jb add mov scas mov rol rcr fsubp ljmp adc and sub cmp inc dec push push pop bound je jg mov scas mov rol rcr fsubp jmp pop or sub aaa cmp pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and inc dec dec push pop bound jae jg mov scas mov rol rcr fsubp ljmp adc and sub cmp pop popa insl jae jg mov scas mov rol lret lret lret lret lret lret lret lret lret lret lret rcr (bad) ljmp adc and sub aaa cmp pop popa insl jae jg mov scas mov rol rcr (bad) jmp idiv add push adc and sub cmp inc dec push push pop bound outsl jne addl mov fndisi(8087 out repnz incb adc sbb sub xor inc inc dec push pop pop arpl jne addl mov fnop out repnz incb and cs inc inc dec push pop pop fs jne addl mov fneni(8087 out repnz incb adc xor inc inc dec push push pop arpl jne addl mov fnop out repnz incb adc sbb daa sub dec push push pop arpl jne addl mov fnop out repnz lret lret lret lret lret lret lret lret lret lret lret incb adc sbb sub xor inc inc dec push pop pop arpl jne (bad) mov lods mov mov fndisi(8087 out repz incl and cs inc inc dec push pop add imul orl lods mov mov fucom jmp pop or sub ss dec dec push pop pop imul orl lods mov mov fucom jmp pop or sub ss dec dec push pop pusha data16 jb jle mov lods mov mov fucom call pop or sub aaa cmp dec dec push pop pusha data16 jb jle mov lods mov mov fucom jmp push or sbb and xor cmp pop pusha data16 jb jle mov scas mov rol rcr fsubp jmp pop or lret lret lret lret lret lret lret lret lret lret lret lret xor cmp pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec add pop bound je addb stos mov mov (bad) in icebp idiv add push adc and sub cmp inc dec push push pop bound jae jg mov mov mov (bad) in icebp idiv add unpcklps and sub cmp inc dec push push pop bound je addb test (bad) int fcmovu in icebp idiv add unpckhps and sub dec push push pop bound je addb stos mov mov (bad) in icebp idiv add adc sbb daa sub dec push push pop bound je addb test (bad) int3 rcr fsubp ljmp adc pop and inc dec dec lret lret lret lret lret lret lret lret lret lret push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc pop and ds dec push push pop arpl jne addl mov fnop out repnz incb unpckhps and sub dec push push pop arpl jne addl mov fneni(8087 out repnz incb adc sbb sub xor inc inc dec push push pop arpl jne addb stos mov mov fnop out repnz incb adc sbb sub xor aas inc dec push push pop arpl jne addl mov fndisi(8087 out repz incl and cs inc inc dec push pop pop fs jbe (bad) mov stos mov mov fndisi(8087 out repz incl and das xor push pop pop imul lret lret lret lret lret lret lret lret lret lret lret lret mov lods mov mov fsub call add and add ss dec dec push pop pusha imul orl lods mov mov fndisi(8087 out repz incb adc sbb sub xor aas inc push push pop bound je addb test (bad) int fcomp in lock add or sub aaa cmp pop pusha data16 jb jle mov lods mov mov fsub call push or pop sbb cmp dec push pop pop fs jbe addl mov fndisi(8087 out repz incl and cs inc inc dec push pop pop arpl jne addl mov ret leave rcl fndisi(8087 out repz incl and cs inc inc dec push pop pop fs jbe (bad) mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop movsl stos mov mov fndisi(8087 out repz incl and das xor push pop pop fs jbe addl mov fnop out icebp idiv add unpckhps and sub dec push push pop arpl jne addl mov fnop out repnz std add unpckhps and sub dec push push pop arpl jne addl mov fnop out repnz incb unpckhps and sub dec push push pop bound je addb stos mov mov fnop in icebp idiv add unpckhps and sub dec push push pop bound je addb cmpsb stos mov mov fndisi(8087 out repz incl and das xor push pop pop fs jbe (bad) mov lods mov mov xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor rcl fsub call add and das xor push pop pop fs jbe (bad) mov lods mov mov fndisi(8087 out hlt cli add or sbb cmp dec push pop pop imul (bad) mov lods mov mov fndisi(8087 out repz incl and das xor push pop pop imul orl lods mov mov fsub call push or sbb and xor cmp dec dec push pop pusha data16 jb jge mov lods mov mov fsub call push or pop sbb cmp dec push pop pop imul addl nop xchg fwait mov mov fucom jmp pop or sub ss dec dec push pop pusha data16 jb jle mov scas mov rol rcr fsubp ljmp pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor cld add push adc pop and inc dec dec push pop popa insl jae jle mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and sub aaa ds dec push push pop bound je jg mov scas mov rol rcr (bad) ljmp adc xor ds dec push push pop bound je addb test (bad) int (bad) in icebp idiv add unpckhps and sub cmp inc dec push push pop arpl je jl xchg stos mov mov fndisi(8087 out repnz incb adc sbb sub xor inc inc dec push pop pop arpl jbe (bad) mov lods mov mov fndisi(8087 out repz incl and pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop sub xor inc inc dec push pop pop imul xchg cltd lahf movsl stos mov mov fndisi(8087 out repz incl and cs inc inc dec push pop pop fs jne addl mov fndisi(8087 out repz incl adc sbb sub xor aas inc dec push push pop arpl je addb test (bad) int fcomp in icebp idiv add unpcklps and sub cmp inc dec dec push pop popa insl jae jg mov scas mov mov fucom jmp push or sbb and xor cmp dec dec push pop pop add jb jle mov scas mov mov fucom jmp pop or sub aaa cmp pop popa insl jae jle mov scas mov rol rcr fsubp ljmp adc pop and inc dec lret lret lret lret lret lret lret lret lret lret lret lret push pop popa insl jae jle mov scas mov rol rcr fsubp jmp pop or sub aaa cmp pop pusha data16 jb jle mov scas mov rol rcr fsubp jmp pop or sub ss dec dec push pop pusha data16 jb jle mov lods mov rol rcr fsubp ljmp adc pop and inc dec dec push pop pusha data16 jb jle mov lods mov mov fsubp ljmp adc pop and inc dec dec add bound jae jg mov scas mov rol rcr fsubp ljmp adc xor ds dec dec push pop popa insl jae jle mov scas mov mov fucom call push or sbb cmp dec dec push pop pop imul xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor ja (bad) mov lods mov mov fndisi(8087 out repnz incb adc sbb daa sub dec push push pop arpl jne addl mov fnop out repnz incb unpckhps and sub dec push push pop arpl jne addl mov fnop out repnz std add unpckhps and sub dec push push pop bound je addb stos mov mov (bad) in icebp idiv add unpckhps and sub cmp aas inc dec push push pop arpl jne addl mov fnop out repnz incb unpckhps and sub dec push push pop bound jae jg mov scas mov rol rcl fucom jmp or sub aaa cmp pop popa insl jae jle mov lret lret lret lret lret lret lret lret lret lret lret mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa data16 jb jle mov lods mov mov fsub call add and das xor push pop pop imul (bad) mov lods mov mov fsub out repz incl and das xor push pop pop imul orl lods mov mov fucom jmp push or sbb and sub aaa cmp pop pusha data16 jb jle mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insl jb jle mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop pusha data16 jb jge mov lods mov mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor (bad) lret fsub out hlt cli add or sbb and das xor push pop pop imul orl lods mov mov fndisi(8087 out repz incl and das xor push pop pop imul (bad) mov lods mov mov fsub out repz incl and das xor push pop pop imul (bad) mov stos mov mov fnop out repnz incb adc pop sbb cmp dec push pop pop fs jbe (bad) mov lods mov mov fndisi(8087 out repz incb adc sbb sub dec push push pop bound je addb stos mov mov fnop out repnz incb adc sbb daa sub dec push push pop arpl jne addb stos mov mov fnop out pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor in repnz incb adc sbb daa sub dec push push pop arpl jne addl mov fnop out repnz incb adc sbb sub xor aas inc dec push push pop arpl jne addb stos scas mov rol rcr (bad) ljmp adc and sub cmp inc dec push push pop bound je jg mov scas mov rol rcr (bad) ljmp unpckhps and sub dec push push pop arpl jne addl mov (bad) in icebp idiv add push adc and sub cmp inc dec dec push pop popa outsb je jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop pusha data16 jb jle mov scas mov rol rcr fsubp ljmp lret lret lret lret lret lret lret lret lret lret lret pop and inc dec dec push pop popa data16 jb jle mov lods mov mov fucom jmp pop or sub ss dec dec push pop pusha data16 jb jle mov lods mov mov fucom jmp pop or sub ss dec dec push pop pusha data16 jb jle mov lods mov mov fucom call add push adc and inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp jmp pop or sub aaa cmp pop popa insl jae jg mov scas mov rol rcl fucom jmp pop or sbb and xor cmp inc dec push pop pusha data16 jb jge mov lods mov mov fsub out repz incl and cs pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor inc inc dec push push pop arpl jne addb stos mov mov fnop out icebp idiv add unpckhps and sub cmp inc dec push push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and sub cmp pop popa insl jae jg mov scas mov mov (bad) in lock add push adc pop and inc dec dec push pop pusha data16 jb jle mov lods mov mov fsub call push or sbb cmp dec push pop pop imul orl lods mov mov fsub call push or sbb cmp dec dec push pop pop imul orl lods mov mov fsub call push or sbb and xor cmp inc dec push pop lret lret lret lret lret lret lret lret lret lret lret insb jb jle mov lods mov mov fucom jmp push or sbb and xor cmp dec dec push pop pusha data16 jb jle mov scas mov rol rcl fucom jmp pop or sub ss dec dec push pop pusha data16 jb jle mov scas mov rolb int (bad) in icebp idiv add unpckhps and sub cmp inc dec push push pop bound je addb test (bad) int fcmovu in icebp idiv add unpckhps and sub dec push push pop bound je addb test (bad) int (bad) in icebp idiv add unpckhps and sub cmp inc dec push push pop popa insl jae jg mov scas mov rol rcl fucom jmp push or sbb and xor cmp dec dec push pop pop imul or xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop mov lods mov mov fndisi(8087 out repz incb adc sbb sub xor aas inc dec push pop pop fs jne addl mov fnop out repnz incb adc sbb sub xor aas inc dec push push pop arpl jbe (bad) mov stos add rcl fsub call push or pop sbb cmp dec push pop pop imul (bad) mov lods mov mov fsub call push or sbb and xor push pop pop imul orl lods mov mov fucom call push or sbb and xor cmp dec dec push pop pop imul orl lods mov mov fsub call push or sbb and xor cmp dec dec push pop pusha data16 jb jge mov lods lret lret lret lret lret lret lret lret lret lret lret lret mov mov fsub call push or pop push and xor cmp dec dec push pop pusha imul orl lods mov mov fsub call push or sbb and xor cmp dec dec push pop pusha data16 jb jle mov test (bad) int3 rcr fsubp ljmp adc pop and inc dec dec push pop pusha data16 jb jle mov lods mov mov fucom jmp pop or sub aaa cmp pop pusha data16 jb jle mov scas mov rol rcl fucom ljmp adc pop and inc dec dec push pop pusha data16 jb jle mov scas mov mov fsubp ljmp adc pop and inc dec dec push pop pusha data16 jb jle mov scas mov rol rcl lret lret lret lret lret lret lret lret lret lret jecxz lock add or sub aaa cmp pop pusha data16 jb jle mov scas mov rol rcl fucom jmp pop or sub aaa cmp pop pusha data16 jb jle mov xchg xchg pushf mov rol rcl fucom jmp push or sbb and xor push pop pusha imul orl lods mov mov fndisi(8087 out repz incl adc sbb sub xor aas inc dec push push pop arpl jne addl mov fnop out icebp idiv add unpckhps and sub cmp inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and sub aaa cmp pop popa insl jae jle mov lods mov rol rcl fucom jmp pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor add or sbb and xor cmp inc dec push pop pop imul (bad) mov stos mov mov fndisi(8087 out repz incl and das xor push pop pop fs add orl lods mov mov fsub out repz incl and das xor push pop pop imul (bad) mov lods mov mov fsub call add and das ss inc dec push pop pop imul (bad) mov lods mov mov fndisi(8087 out repnz incb adc sbb daa sub dec push push pop arpl jne addl mov (bad) in icebp idiv add push adc and sub cmp pop popa insb jb jle mov scas mov rol rcr fsubp ljmp adc and pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor sub aaa cmp pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and inc dec dec push pop add outsb je addb stos mov mov fnop out repnz incb adc xor aas inc dec push push pop arpl jne addl mov fnop out repnz incb adc sbb sub xor aas inc dec push push pop arpl jne addl mov fnop out repnz incb or adc xor aas inc dec push push pop arpl jne addl mov fnop out icebp idiv add unpckhps and sub dec push push pop arpl jne addl mov fnop out repnz incb adc sbb daa sub dec lret lret lret lret lret lret lret lret lret lret lret lret push push pop arpl je addl mov fnop out repnz incb adc sbb daa sub dec add pop arpl jne addl mov fndisi(8087 out repz incl and das xor push pop pop fs jbe (bad) mov stos mov mov fsub call add and das xor push pop pop fs jbe (bad) mov stos mov mov fnop out repnz incb adc sbb sub xor inc inc dec push pop pop fs jbe addl mov fnop out repnz incb adc sbb sub xor push pop pop fs jbe (bad) mov stos mov mov fndisi(8087 out repz incl adc sbb sub xor inc inc dec push pop pop fs jbe pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor mov mov (bad) fsub out repz incl and das xor dec push pop pop imul test cmpsl lods mov mov fucom jmp push or sbb and das xor push pop pop fs jbe (bad) mov lods mov mov fsub call add and das xor push pop pop fs jbe (bad) mov stos mov mov fndisi(8087 out repz incl and cs inc inc dec push pop pop arpl jne addl mov fnop out repnz incb adc sbb sub xor inc inc dec push push pop arpl jne addl mov fnop out repnz incb adc sbb sub xor inc inc dec push pop pop imul xchg cltd lahf lret lret lret lret lret lret lret lret lret lret movsl stos mov mov fndisi(8087 out repnz incb adc sbb sub das xor push pop pop imul orl lods mov mov fsub call add and das xor push pop pop imul orl lods mov mov fndisi(8087 out repz incl and cs inc inc dec push push pop arpl jne addb stos mov mov fnop out repnz incb unpckhps and sub dec push push pop bound je addb stos mov mov fnop in icebp idiv add unpckhps and sub cmp inc dec dec push pop popa insl jae jg mov scas mov mov fucom jmp pop or sub aaa cmp pop pusha data16 jb jle mov lods mov mov lret lret lret lret lret lret lret lret lret lret xlat fsub jmp push or add and sub cmp inc dec push push pop popa push test test (bad) int (bad) in icebp idiv add unpckhps and sub dec push push pop arpl jne addb stos mov mov (bad) in icebp idiv add unpckhps and sub dec push push pop bound jne addl mov fnop out repnz incb adc sbb daa sub dec push push pop arpl jne addl mov fnop out repnz incb adc sbb sub xor aas inc dec push push pop arpl jne addl mov fnop out repnz incb adc sbb sub xor aas inc dec push push pop arpl je addb test (bad) int fcomp in icebp lret lret lret lret lret lret lret lret lret lret idiv add or push sbb sub dec push push pop arpl jne addl mov fnop out repnz incb adc sbb sub xor inc inc dec push pop pop fs jbe (bad) mov stos mov mov fneni(8087 out repnz incb adc sbb sub xor inc inc dec push pop pop fs jbe addl mov fndisi(8087 out repz incl and cs inc inc dec push pop pop arpl jbe (bad) mov stos mov mov fndisi(8087 out repz incl adc sbb sub xor inc inc dec push pop pop imul xchg cltd lahf movsl stos mov mov fndisi(8087 out repz incl adc sbb sub xor inc inc dec push pop pop fs jbe (bad) xchg stos mov mov fndisi(8087 out repnz add or pop lret lret lret lret lret lret lret lret lret lret lret lret sub xor push pop pop imul orl lods mov mov fsub call push or sbb and das xor push pop pop imul orl lods mov mov fsub call add and xor cmp dec dec push pop pop imul orl lods mov mov fsub call push or pop sbb cmp dec dec push pop pop imul orl lods mov mov fsub call add and das xor push pop pop imul orl lods mov mov fsub call push or sbb and xor cmp dec dec push pop pop imul orl lods mov mov fsub add out cmc sti add or sub aaa cmp lret lret lret lret lret lret lret lret lret lret dec dec push pop pusha data16 jb jle mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop pusha data16 jb jle mov lods mov mov fucom jmp pop or sub aaa cmp dec dec push pop pusha data16 jno jge mov lods mov mov fucom jmp xchg sahf movsb stos mov enter repz cmp push bound test ror fucomip repz or sbb xor jb mov leave (bad) loopne hlt decb adc push pop addr16 xchg enter repnz or sbb push pop push mov xlat jecxz testl xor push pop pop imul orl lods mov mov fndisi(8087 out repnz incb adc sbb lret lret lret lret lret lret lret lret lret lret lret lret sub dec push push pop arpl je addb test (bad) int (bad) in icebp idiv add push adc and sub cmp inc dec push push pop bound je jnp xchg stos mov mov fnop out repnz std add unpckhps and sub dec push push pop arpl je addb stos mov mov fcmovu in icebp idiv add unpckhps and sub dec push push pop bound je addb test enter (bad) jmp idiv add unpcklps and sub cmp inc dec push push pop bound jae jg mov scas mov rol rcr (bad) jmp idiv add push adc and sub cmp inc dec dec push pop popa insl jae jg mov scas mov mov fucom jmp pop or sub ss dec lret lret lret lret lret lret lret lret lret lret lret push pop pusha data16 jb jle mov lods mov mov fsub call push or pop sbb cmp dec dec push pop pusha add jb jle mov scas mov rol rcl fucom jmp push or sbb and xor cmp dec dec push pop pusha data16 jb jle mov lods mov mov fucom call push or sbb and xor cmp inc dec push pop pop imul orl lods mov mov fsub call add and das xor push pop pop arpl jne addl mov fnop out repnz add unpckhps and sub cmp inc dec dec push pop popa insl jae jle mov lods mov mov fucom jmp push or pop sbb cmp dec push pop pop arpl pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop outsl jne addl mov (bad) in lock add push adc and sub cmp inc add push pop bound je addb test (bad) int3 rcr fsubp ljmp adc and sub cmp inc dec dec push pop popa insl jae jg mov scas mov rol rcr fucom jmp pop or sub aaa cmp pop popa insl jae jle mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop pusha data16 jae jg mov scas mov rol rcr fsubp jmp pop or sub aaa cmp dec dec push pop pusha imul orl lods mov mov fsub call add and cs aas inc dec push push pop arpl je addb pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor scas mov rol rcr (bad) ljmp adc pop and ds dec dec push pop popa insl jb jle mov lods mov mov fsub call push or sbb and xor push pop pop fs jbe (bad) xchg stos mov mov fcmovu in icebp idiv add unpckhps and sub dec push push pop bound je addb test (bad) int (bad) in lock add push adc and sub cmp inc dec push push pop bound jae jg mov scas mov rol rcr fsubp ljmp adc and inc dec dec push pop bound je addb test (bad) int3 rcr fsubp ljmp adc and sub cmp pop popa insl jae jg mov scas lret lret lret lret lret lret lret lret lret lret lret mov rol rcr fsubp jmp pop or and inc dec dec push pop pusha data16 jb jge mov lods mov mov fucom jmp push or sbb and das xor push pop pop imul (bad) mov lods mov mov fsub call push or pop sbb cmp dec push pop pop fs jbe (bad) mov stos mov mov fndisi(8087 out repnz incb and cs inc inc dec push pop pop arpl jne addl mov fnop out repnz add unpckhps and cs inc inc dec push push pop arpl jne addl mov fnop out repnz incb unpckhps and sub dec push push pop arpl jne addl mov lret lret lret lret lret lret lret lret lret lret lret (bad) jmp idiv add adc sbb sub xor inc inc dec push push pop arpl jne addl mov fndisi(8087 out repnz incb adc sbb sub xor aas inc dec push push pop bound je addb test (bad) int (bad) in icebp idiv add push adc and sub cmp inc dec push push pop bound jae jg mov scas mov rol rcr (bad) jmp idiv add push adc and sub cmp inc dec push push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and sub aaa cmp pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc pop es cmp inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp lret lret lret lret lret lret lret lret lret std add push adc and sub cmp inc dec push push pop bound je addb test (bad) int (bad) in lock add push adc and sub cmp inc dec dec push pop popa insl jae addb test (bad) int (bad) in lock add push adc pop and inc dec dec push pop pusha imul orl lods mov mov fsub call push or sbb and xor cmp dec dec push pop pusha data16 jb jge mov lods mov mov fucom jmp push or sbb and xor cmp dec dec push pop pop imul orl lods mov mov fsub call push or sbb and xor cmp dec dec push pop pusha data16 jno jge mov lods mov mov add jecxz out cmc cli add or sbb lret lret lret lret lret lret lret lret lret lret lret sub ss dec dec push pop pusha data16 jb jle mov lods mov mov fucom call push or pop sbb cmp dec push pop pop fs jbe (bad) mov lods mov mov fndisi(8087 out repz incl and cs inc inc dec push pop pop fs jbe (bad) mov stos mov mov fndisi(8087 out repnz incb adc sbb sub dec push push pop arpl jne addl mov fnop out repnz incb unpckhps and sub dec push push pop arpl je addb stos mov mov fnop out repnz incb adc sbb daa sub dec push push pop arpl je addb stos mov mov aad loope in repz incl and cs inc inc lret lret lret lret lret lret lret lret lret lret lret lret pop pop arpl jne addl mov (bad) in icebp idiv add push adc xor ds dec push push pop bound jae jg mov scas mov rol rcr fsubp ljmp adc push and xor cmp dec dec push pop pusha data16 jb jle mov lods mov mov fucom jmp push or sbb and xor cmp inc dec push pop pop data16 jb jle mov lods mov mov fsub call push or pop sbb cmp dec push pop pop fs jbe (bad) mov lods mov mov fsub out repz incl and cs inc inc dec push push pop arpl jne addb test ret leave iret aad loopne in repnz incb unpckhps and sub dec push push pop popa addr16 lret lret lret lret lret lret lret lret lret lret jns test test mov mov fucom jmp pop or sub aaa cmp pop pusha data16 jb jle mov lods mov mov fucom call pop or sub ss dec dec push pop pusha data16 jb jle mov lods mov mov fndisi(8087 out repz incl adc sbb sub xor inc inc dec push pop pop arpl jne addl mov (bad) in icebp idiv add push adc and sub aaa cmp pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop pusha data16 jb jle mov test (bad) int3 rcr fsubp ljmp adc pop and inc dec dec push pop pusha data16 jb jle mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor nop xchg fwait mov mov fucom jmp pop or sub ss dec dec push pop pusha data16 jb jle mov lods mov mov fucom jmp pop or sub ss dec dec push pop pusha imul orl lods mov mov fsub call push or sbb and das xor push pop pop imul (bad) mov lods mov mov fndisi(8087 out repz incl and das xor push pop pop fs jbe (bad) mov lods mov mov fndisi(8087 out repz incb adc sbb sub xor aas inc dec push pop pop fs jne add mov mov fndisi(8087 out repz incl adc sbb sub xor inc inc dec push push pop arpl jbe (bad) mov stos mov pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop mov ret leave iret aad loope in repnz incb adc xor ds dec push push pop bound jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop pop imul (bad) mov stos mov mov fndisi(8087 out repz incl and cs aas inc dec push push pop arpl je addb test (bad) int3 rcr fsubp ljmp adc pop and inc dec dec push pop pop imul orl lods mov mov fneni(8087 out repnz incb adc sbb daa sub dec push push pop add outsl jne addl mov fcomp in lock add or sub aaa cmp pop popa insl jae jg mov scas mov rol lret lret lret lret lret lret lret lret lret lret lret lret rcl fucom jmp pop or sub ss dec dec push pop pusha data16 jb jle mov lods mov mov fucom jmp push or sbb and xor cmp inc dec push pop pop imul orl lods mov mov fucom jmp push or sbb and das xor push pop pop imul (bad) mov lods mov mov fsub call push or pop sbb cmp dec push pop pop fs jbe (bad) mov lods mov mov fsub out repz incl and das xor dec push pop pop imul orl lods mov mov fsub call push or sbb and das xor push pop pop gs jbe (bad) mov stos mov mov fnop out icebp lret lret lret lret lret lret lret lret lret lret lret add unpckhps and sub dec push push pop bound je addb stos mov mov (bad) in icebp idiv add push adc and sub cmp inc dec push push pop bound je addb stos scas mov rol rcr fsubp ljmp adc and sub aaa cmp pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop pusha data16 jb jle mov scas mov mov fucom jmp pop or sub add cmp pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp jmp or xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop pop and inc dec dec push pop popa insl jb jle mov scas mov rol rcr fucom jmp pop or sub aaa cmp pop pusha data16 jb jle mov lods mov mov fsub call push or sbb and xor cmp dec dec push pop pusha data16 jb jge mov lods mov mov fsub call add and cs inc inc dec push push pop arpl jne addl mov fneni(8087 out repnz incb adc cs inc inc dec push pop pop fs jbe (bad) mov lods mov mov fndisi(8087 out repz incb adc sbb sub xor aas inc dec push push pop arpl jne addl mov fnop out repnz std add unpckhps and sub pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor inc dec push push pop bound je addb stos scas mov rol rcr (bad) jmp idiv add unpckhps and sub dec push push pop bound jae jg mov scas mov rol rcr fsubp ljmp adc and sub dec push push pop bound jae jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insl jae jle mov scas mov rol rcr fsubp ljmp unpckhps and sub cmp inc dec push push pop bound je addb test (bad) int (bad) in lock add push adc pop and inc dec dec push pop pusha data16 jb jge mov lods mov mov fucom jmp push or sbb and xor cmp dec dec push pop pop gs lret lret lret lret lret lret lret lret lret lret ja orl lods mov mov fsub call push or sbb and das xor push pop pop imul (bad) mov lods mov mov fndisi(8087 call add and das xor push pop pop fs jbe (bad) mov lods mov mov fndisi(8087 out repz incl adc sbb cmp dec push pop pop fs jbe (bad) mov stos mov mov fndisi(8087 out repz add or pop sbb cmp dec push pop pop imul (bad) mov lods mov mov fsub out repz incl and das xor push pop pop imul (bad) mov lods mov mov fndisi(8087 out repz incl and cs inc inc dec push pop pop arpl jne addl pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor xchg cltd lahf movsl stos mov mov fndisi(8087 out repnz incb adc sbb daa sub dec push push pop arpl jne addl mov fnop out repnz incb adc sbb daa sub dec push push pop bound je addb stos mov mov fchs out icebp idiv add unpckhps and sub dec push push pop bound je addb test (bad) int (bad) add in repnz incb adc sbb sub xor inc inc dec push pop pop fs jne (bad) xchg stos mov mov fnop out icebp idiv add unpcklps and sub cmp inc dec push push pop bound je addb test (bad) int (bad) in lock add push adc and sub aaa cmp pop bound je addb test xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor mov (bad) in icebp idiv add unpckhps and sub cmp inc dec push push pop bound je addb stos mov mov (bad) in icebp idiv add unpckhps and sub cmp inc dec push push pop bound je jg mov scas mov rol rcr fsubp jmp idiv add push adc and sub cmp inc dec push push pop popa insl jae jg mov scas mov rol add fnop out repnz incb adc sbb sub xor aas inc dec push push pop arpl jne addb stos mov mov (bad) in icebp idiv add unpckhps and sub dec push push pop bound je addb test (bad) int (bad) in lock add push adc and sub cmp inc dec push push pop bound jae jg mov scas mov rol rcr fmulp pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor in lock add or sub aaa cmp pop popa insl jae jg mov scas mov rol rcr fsubp jmp pop or sub ss dec dec push pop pop imul test cmpsl lods mov mov fucom jmp push or sbb and xor push pop pop imul orl lods mov add (bad) lret rcl fucom jmp pop or sub ss dec dec push pop pusha imul orl lods mov mov fucom jmp pop or sub ss dec dec push pop pop imul orl lods mov mov fsub call push or sbb and das xor push pop pop fs jbe (bad) mov stos mov mov fnop out repnz add pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop or adc xor aas inc dec push push pop arpl jne addl mov (bad) in icebp idiv add unpckhps and sub cmp inc dec push push pop bound je jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop pusha data16 jae jle mov test (bad) int3 rcr fsubp ljmp adc pop and inc dec dec push pop popa data16 jb jle mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop pusha data16 jb jle mov lods mov mov fsubp ljmp adc pop and inc dec dec push pop pusha data16 jb jle mov lods mov mov fucom jmp pop or sub pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor aaa cmp pop pusha data16 jb jle mov lods mov mov fsub call push or sbb and das xor push pop pop fs jbe (bad) xchg stos mov mov fcmovu in icebp idiv add push adc and sub aaa ds dec push push pop bound jae jg mov xchg cwtl sahf movsb stos mov mov fnop in icebp idiv add unpckhps and sub dec push push pop bound jne addb stos mov mov (bad) in icebp idiv add unpckhps and sub cmp inc dec push push pop bound je jg mov scas mov rol rcr (bad) jmp idiv add push adc and sub cmp inc dec dec push pop popa insl jb jle mov lods mov rol rcl fucom jmp push or sbb and das xor lret lret lret lret lret lret lret lret lret lret lret pop fs jbe addl mov fnop out repnz incb or adc xor ds dec push push pop popa insl jae jg mov scas mov mov fucom call push or sbb and xor push pop pop fs add orl lods mov mov fucom jmp pop or sub aaa cmp pop pusha data16 jno jge mov lods mov mov fndisi(8087 out repnz incb adc sbb daa sub dec push push pop arpl jne addb test (bad) int fcomp in lock add or sub ss dec dec push pop pop imul test cmpsl lods mov mov fucom jmp push or sbb and xor cmp dec push pop pop gs pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor jo jl mov lods mov mov fsub call push or pop sbb cmp dec push pop ja nop xchg popf mov rol rcr fsubp ljmp adc and sub cmp inc dec push push pop bound jae jg mov scas mov rol rcr (bad) ljmp adc and sub cmp inc dec push push pop bound jae jg mov scas mov rol rcr (bad) jmp idiv add push adc and sub cmp inc dec push push pop bound je addb test (bad) int (bad) in lock add push adc and sub cmp inc dec dec push pop popa insl je jg mov scas mov rol rcr (bad) jmp idiv add unpckhps and sub cmp inc dec push push pop bound je addb test lret lret lret lret lret lret lret lret lret lret (bad) int (bad) in icebp idiv add unpckhps and sub cmp inc dec push push pop bound imul xchg cwtl sahf movsb stos mov mov fndisi(8087 out repnz incb adc sbb sub xor inc inc dec push pop pop arpl jne addl mov (bad) in icebp idiv add unpckhps and sub dec push push pop bound je addb test (bad) int3 rcr fsubp ljmp adc and sub cmp inc dec push push pop bound jae jg mov scas mov rol rcr (bad) jmp idiv add push adc and sub cmp inc dec push push pop bound je jg mov scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insl jae jg mov scas mov rol rcr fsubp ljmp lret lret lret lret lret lret lret lret lret lock add or sub aaa cmp push pop bound jae jg mov mov mov (bad) in icebp idiv add push adc and sub cmp inc dec push push pop bound je jg mov scas mov rol rcr (bad) jmp idiv add push adc and sub aaa cmp pop pusha data16 jb jle mov lods mov mov fsub call push or sbb and xor cmp dec dec push pop pop imul orl lods mov mov fsub call push or sbb and xor cmp dec dec push pop pusha data16 jno jge mov lods mov mov fsub call push or sbb and das xor push pop pusha data16 jb jle mov lods mov mov fsub call add xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop pop sbb cmp inc inc dec push pop pop data16 jb jle mov lods mov mov fsub call add and cs inc inc dec push pop pop arpl jne addl mov fnop out repnz incb adc sbb sub dec push push pop arpl jne addl mov fnop out repnz incb unpckhps and sub dec push push pop bound jae jg mov scas mov rol rcr (bad) jmp idiv add unpckhps and sub dec push push pop bound je addb stos scas mov rol rcr (bad) jmp idiv add unpckhps and sub dec push push pop bound je addb stos mov mov (bad) in icebp idiv add unpcklps and add lret lret lret lret lret lret lret lret lret lret lret cmp dec push push pop arpl jne addl mov fnop out repnz incb adc sbb daa sub dec push push pop arpl jne addl mov fndisi(8087 out repnz incb adc sbb sub xor inc inc dec push pop pop arpl jne orl mov fndisi(8087 out repz incl and cs inc inc dec push pop pop fs jbe addl mov fsub out repz incl and cs aas inc dec push push pop arpl je addb test (bad) int fnop out repnz incb adc sbb sub xor inc inc dec push push pop arpl jne addl mov fndisi(8087 out repz incl or pop add and xor cmp dec dec push pop pusha lret lret lret lret lret lret lret lret lret lret lret jno jge mov lods mov mov fsub call push or sbb and xor cmp pop popa insl jae jg mov scas mov rol rcr fsubp ljmp adc and sub cmp inc dec push push pop bound je addb stos mov mov fndisi(8087 out repz incb adc sbb sub xor inc inc dec push pop pop imul orl scas mov rol rcr fsubp jmp idiv add unpckhps and sub cmp inc dec push push pop arpl jne addl mov fucom jmp pop or sub aaa cmp pop popa insl jae jg mov scas mov rol rcr (bad) in repnz std add unpckhps sbb sub xor inc inc dec push push pop arpl jne addl xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop lahf movsl stos mov mov fnop out repnz incl and xor cmp pop pusha insw jae jg mov scas mov ret aam loopne in repnz incb adc sbb cmp dec push pop pusha data16 jb jle mov scas mov rol rcr fsubp ljmp adc and sub dec push push pop bound jbe addl mov fndisi(8087 out repz incl and das xor push pop pusha imul orl scas mov rol rcr fsubp ljmp adc pop and inc dec dec push pop popa insl jae jg mov scas mov rol rcr (bad) jmp idiv add unpckhps sbb cmp dec push pop pop fs jbe (bad) mov lods mov mov lret lret lret lret lret lret lret lret lret lret lret lret fucom jmp pop or sub ss dec dec push pop pusha data16 jb jge mov lods mov mov fsub jmp pop or sub aaa cmp pop pusha data16 jb jle mov scas mov rol rcr fsubp ljmp adc and sub cmp inc dec push pop pop arpl jbe addl mov fucom jmp pop or sub cmp inc dec push push pop bound je addl mov fucom jmp pop or sub aaa cmp pop popa insl jae jle mov scas mov ret aam loopne in repnz incb adc add cmp dec push pop pop imul orl lods mov mov fsubp ljmp adc pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor pop xor and sub aaa cmp pop bound je addb stos mov mov fndisi(8087 out repz incl or sbb and inc dec push push pop arpl je addl mov fndisi(8087 out repz incl and cs push pop pop fs jbe orl mov fndisi(8087 out repz add or sbb and das xor push pop pusha data16 jb jle mov scas mov rol rcr (bad) jmp idiv pop js and js and dec je (bad) mov lock mov mov cmp jno mov retw test sar add adc movsb (bad) pop pushf cltd call movsl xorb in (bad) in xor into mov jg add into add push xchg xchg and push adc xchg mov dec popa (bad) cmc sbb pop xor xor jno pop fcmovnu bound push popf pop push cmp mov fsubrs je mov les loop (bad) jb pop push outsb and imul (bad) jnp cmpsl js pop insl imul mov arpl nop add jl jmp and aad pop daa ret lods scas cmpsb mov (bad) xchg test das loope xchg clc leave fwait loopne mov cs mov lods addr16 (bad) mov lock mov mov cmp jno mov retw test sar add adc movsb (bad) pop pushf cltd call movsl xorb in (bad) in xor into mov jg add into add push xchg xchg and push adc xchg mov dec popa (bad) cmc sbb pop xor xor popa or lret int3 push jl inc movsl aas mov lea inc sub mov mov mov je cli (bad) bound inc pop adc pop stos sub push sub imul push pop sbb mov nop push pop lcall mov insb jno loop test mov dec sbb gs data16 jg xchg pop sarl add push pop mov push push pushf push push sti (bad) mov cmp add cmp mov test pushl cmp pop cmp jmp test cmp push cmp test xor test cmp pop cmp test ret cmp cmp test cmp inc cmp rdtsc test cmp jne test pop test add cmp push test ret daa xor mov sbb cmp sti sti (bad) jmp jns,pt xor pop iret jg sarl shr pop xchg in movsb test cmp cmp cmp test test call cmp jmp test pop test clc adc cmp mov test mov cmp inc test inc cmp inc cmp sub cmp test mov cmp test call test test push cmp test test jne mov test add cmp mov cmp add cmp call test jmp cmp pop cmp push cmp push cmp push cmp mov test call test pop cmp cmp jl cmp mov test sub test mov cmp sub cmp call cmp mov test inc cmp inc cmp inc cmp inc cmp inc cmp inc test inc test inc cmp inc cmp inc test inc test push cmp mov cmp add cmp push test push cmp sub cmp sub cmp push cmp call cmp jmp test pop test cmp inc cmp mov test xor test mov cmp cmp jne cmp mov cmp test sub cmp mov cmp call cmp or cmp test jne cmp jmp test sub xchg jnp jne inc inc ficompl data16 pop xlat addr16 scas (bad) (bad) cwtl push loope mov cld cmp lret gs cmovns or inc jno call add lret into (bad) ficom push sub cmpsl mov movsl mov popf pop fisttp (bad) ja fwait sbb fstl sbb test shrl mov sbb out mov (bad) jp mov cmc or stos stos xor and xchg in insb in and arpl imul push mov movsl inc sub cmp or push lods mov pop nop cmp sti sti (bad) test push cmp pop cmp pushl test pop test mov cmp mov cmp push cmp mov test mov cmp push test pop test add test cmp jne cmp push cmp pop test add test cmp jne test pop test mov cmp mov cmp mov cmp add cmp mov test mov test add test mov test add cmp lods cmp test je cmp add cmp mov test cmp jne test mov test cmp jne test mov cmp push cmp pop cmp push cmp push test push test push test push test push cmp push cmp push cmp call cmp add test ret jmp jns,pt xor pop iret jg sarl shr pop xchg in movsb sub xchg jnp jne inc inc ficompl data16 pop xlat addr16 scas (bad) (bad) cwtl push loope mov cld cmp lret gs cmovns or inc jno call add lret into (bad) ficom push sub cmpsl mov movsl mov popf pop fisttp (bad) ja fwait sbb fstl sbb test shrl mov sbb push in and arpl imul xor mov movsl inc sub cmp mov xchg mov xchg rol lret aaa mov ds push stc add aad xchg inc int3 ds data16 and in mov cmp add aam scas insb into ss jb sub jb cmp add jmp movsb hlt push loopne xlat scas or pushf test out ret out mov (bad) jp mov cmc or stos stos xor and xchg in insb in and arpl imul push mov movsl inc sub cmp or push lods mov pop nop cmp sti sti (bad) jmp jns,pt xor pop iret jg sarl shr pop xchg in movsb sub xchg jnp jne inc inc ficompl data16 pop xlat addr16 scas (bad) (bad) cwtl push loope mov cld cmp lret gs cmovns or inc jno call add lret into (bad) ficom push sub cmpsl mov movsl mov popf pop fisttp (bad) ja fwait sbb fstl sbb test shrl mov sbb out mov (bad) jp mov cmc or stos stos xor and xchg in insb in and arpl imul push mov movsl inc sub cmp or push lods mov pop nop cmp sti sti (bad) jmp jns,pt xor pop iret jg sarl shr pop xchg in movsb sub xchg jnp jne inc inc ficompl data16 pop xlat addr16 scas (bad) (bad) cwtl push loope mov cld cmp lret gs cmovns or inc jno call add lret into (bad) ficom push sub cmpsl mov movsl mov popf pop fisttp (bad) ja xchg stc (bad) jmp adc mov test mov test inc cmp mov cmp mov cmp ret xchg adc jno push das sbb test shrl mov sbb out mov (bad) jp mov cmc or stos stos xor and xchg in insb in and arpl imul push mov movsl inc sub cmp or push lods mov pop nop cmp sti sti (bad) jmp jns,pt xor pop iret jg sarl shr pop xchg in movsb sub xchg jnp jne inc inc ficompl data16 pop xlat addr16 scas (bad) (bad) cwtl push loope mov cld cmp lret gs cmovns or inc jno call add lret into (bad) ficom push sub cmpsl mov movsl mov popf pop fisttp (bad) ja fwait sbb fstl sbb test shrl mov sbb out mov (bad) jp mov cmc or stos stos xor and xchg in insb in and arpl imul push mov movsl inc sub cmp or push lods mov pop nop cmp sti sti (bad) jmp jns,pt xor pop iret jg sarl shr pop xchg in movsb sub xchg jnp jne inc inc ficompl data16 pop xlat addr16 scas (bad) (bad) cwtl push loope mov cld cmp lret gs cmovns or inc jno call add lret into (bad) ficom push sub cmpsl mov movsl mov popf pop fisttp (bad) ja fwait sbb fstl sbb test shrl mov sbb out mov (bad) jp mov cmc or stos stos xor and xchg in insb in and arpl imul push mov movsl inc sub cmp or push lods mov pop nop cmp sti sti (bad) jmp jns,pt xor pop iret jg sarl shr pop xchg in movsb sub xchg jnp jne inc inc ficompl data16 pop xlat addr16 scas (bad) (bad) cwtl push loope mov cld cmp lret gs cmovns or inc jno call add lret into (bad) ficom push sub cmpsl mov movsl mov popf pop fisttp (bad) ja fwait sbb fstl sbb test shrl mov sbb out mov (bad) jp mov cmc or stos stos xor and sub (bad) lcall sbbl jb dec cmp cltd dec cmp cltd dec cmp cltd dec cmp cltd dec cmp cltd dec cmp cltd dec cmp cltd dec cmp cltd dec cmp cltd dec cmp cltd dec cmp cltd dec cmp cltd dec cmp cltd dec cmp cltd dec cmp cltd dec cmp cltd dec cmp cltd dec cmp cltd dec cmp cltd dec cmp cltd dec cmp cltd dec cmp cltd dec cmp cltd dec cmp cltd dec cmp cltd dec cmp cltd dec cmp cltd dec cmp cltd dec cmp and xchg jbe cmc lock repnz jo fsincos ljmp jbe add xor fsincos (bad) cmp jb push dec jbe test and js jb push dec out test (bad) out lods fdivs rep inc je jb cmpsl pop lock fsts (bad) cltd inc cli rcr jae sub inc jp push aas jle pop pop jp sbbl sub mov jb (bad) jp (bad) jp fnstcw test lock test fstpl and jnp test ja js rorl fnstenv push fdivrl mov jb inc xor bound leave bound leave bound leave bound leave bound leave bound leave bound leave bound leave bound leave bound leave bound leave bound leave bound leave bound leave bound leave bound leave bound leave bound leave bound leave bound leave bound leave bound leave bound leave bound leave bound leave bound leave bound leave bound leave bound leave bound leave bound leave bound leave bound leave bound leave bound leave bound leave bound leave bound leave bound leave bound leave bound leave bound leave bound leave bound leave bound leave bound leave bound leave bound leave bound leave bound leave bound leave bound leave bound leave bound leave bound leave bound leave bound leave bound leave bound push aas jle add test lcall inc jb test sbb rcr jp mov jp fstpl jp lea and cs fist cmp movsb fdivs inc mov test lcall (bad) jae test sahf jp fnstenv push or (bad) test mulb fnstenv (bad) fstl test fnstenv push dec jp test icebp (bad) test idivb fnstenv (bad) aad jne adc popa pop mov add mov inc ss test ror push leave sbb leave sbb leave sbb leave sbb leave sbb leave sbb leave sbb leave sbb leave sbb leave sbb leave sbb leave sbb leave sbb leave sbb leave sbb leave sbb leave sbb leave sbb leave sbb leave sbb leave sbb leave sbb leave sbb leave sbb leave sbb leave sbb leave sbb leave sbb leave sbb leave sbb leave sbb leave sbb leave sbb leave sbb leave sbb leave sbb leave sbb leave sbb leave sbb leave sbb leave sbb leave sbb leave sbb leave sbb leave sbb leave sbb leave sbb leave sbb leave sbb leave sbb leave sbb leave sbb leave sbb leave sbb leave sbb leave sbb leave sbb leave sbb leave int3 push outsl dec test jb repz cltd fcomps or fxch jnp fnstenv or mov test pop mov mov push push jnp fyl2xp1 aaa lods xor push test sub and jp push aas bound pop jp sbbl in popf stc aaa lods xor push test sub and jp repnz push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor aaa lods xor push test sub and xchg sbb and ja test aaa inc and jp xor jg fsincos incl jb and jp xor jg fsincos ljmp xchg jbe jb jb repnz test sti (bad) mov xchg jbe and jb repnz jg fsincos pushl xchg jbe or jb repnz test sti pushl jbe call xor test sti decl test stc jp pushf dec xchg dec fnstenv jl cmpsb scas jl cmpsb scas jl cmpsb scas jl cmpsb scas jl cmpsb scas jl cmpsb scas jl cmpsb scas jl cmpsb scas jl cmpsb scas jl cmpsb scas jl cmpsb scas jl cmpsb scas jl cmpsb scas jl cmpsb scas jl cmpsb scas jl cmpsb scas jl cmpsb scas jl cmpsb scas jl cmpsb scas jl cmpsb scas jl cmpsb scas jl cmpsb scas jl cmpsb scas jl cmpsb scas jl cmpsb scas jl cmpsb scas jl cmpsb scas jl cmpsb scas jl cmpsb scas jl cmpsb scas jl cmpsb scas jl cmpsb scas jl cmpsb scas jl cmpsb scas jl cmpsb scas jl cmpsb scas jl cmpsb scas jl cmpsb scas jl cmpsb scas jl cmpsb scas jl cmpsb scas jl cmpsb scas jl cmpsb scas jl cmpsb scas jl cmpsb scas jl cmpsb scas jl cmpsb scas jl cmpsb scas jl cmpsb scas jl cmpsb scas jl cmpsb scas jl cmpsb scas jl cmpsb scas jl cmpsb scas jl cmpsb scas jl cmpsb scas inc add test divl push fadds jbe cltd jae test lcall movsb jle popa pop jbe test repz lret fnstenv in sbbl data16 fwait nop test jb cli mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub mov sub push aaa and and sub arpl push aaa cs adc push jns fstps mov xor test sub test aaa cmp and sub jo test sqrtps xchg imul and sub jo test aaa cs push insb jp push pcmpeqd push push test and jp dec data16 fstps test fnstenv test repz test jb jmp out test repz lock mov test pop dec jp and jbe sbb jns fyl2xp1 aaa cld xchg fwait cmpsl test jb out lahf xor out lahf xor out lahf xor out lahf xor out lahf xor out lahf xor out lahf xor out lahf xor out lahf xor out lahf xor out lahf xor out lahf xor out lahf xor out lahf xor out lahf xor out lahf xor out lahf xor out lahf xor out lahf xor out lahf xor out lahf xor out lahf xor out lahf xor out lahf xor out lahf xor out lahf xor out lahf xor out lahf xor out lahf xor out lahf xor out lahf xor out lahf xor out lahf xor out lahf xor out lahf xor out lahf xor out lahf xor out lahf xor out lahf xor out lahf xor out lahf xor out lahf xor out lahf xor out lahf xor out lahf xor out lahf xor out lahf xor out lahf xor out lahf xor out lahf xor out lahf xor out lahf xor out lahf xor out lahf xor out lahf xor call and stc push flds mov push push mov xor nop out (bad) outsl (bad) test stc aas movsb fdiv jns fldcw and imul pcmpeqd push push test sbb fnstenv test jo test jo test jb jmp daa xor lods jle outsb jmp jbe test stc daa mov dec jp fidiv repnz test xchg icebp xchg lods es test mov mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov mov adc fstps jp mov icebp in (bad) icebp (bad) test (bad) dec push lea push aaa and jp fyl2xp1 cmp stc and mov pop pop or fnstenv jp xor or push inc pop test push jbe test pop pop xlat sub fstl nop mov xchg sub jbe push pop popf repz adc mov test mov imul icebp call sbb pop movsb push aas pop and inc icebp out sti xor and jnp fyl2xp1 pop movsb push mov imul jp imul mov test jb out fwait cmpsl test jb insb sbb mov insb sbb mov insb sbb mov insb sbb mov insb sbb mov insb sbb mov insb sbb mov insb sbb mov insb sbb mov insb sbb mov insb sbb mov insb sbb mov insb sbb mov insb sbb mov insb sbb mov insb sbb mov insb sbb mov insb sbb mov insb sbb mov insb sbb mov insb sbb mov insb sbb mov insb sbb mov insb sbb mov insb sbb mov insb sbb mov insb sbb mov insb sbb jbe push (bad) jb repnz push lea adc pushf pop xchg sar jb icebp push mov (bad) jb and sti jb scas jp (bad) sbb fstps jle fstps jp (bad) push push dec jb test icebp (bad) test lea icebp push aas jb mov lcall in stc aaa mov fldcw xchg pop and test sahf push inc cmp test aas jb enter cmp mov fldcw icebp in fwait xchg mov jb inc adc (bad) mov jb fnstenv cmp jmp cmp jmp cmp jmp cmp jmp cmp jmp cmp jmp cmp jmp cmp jmp cmp jmp cmp jmp cmp jmp cmp jmp cmp jmp cmp jmp cmp jmp cmp jmp cmp jmp cmp jmp cmp jmp cmp jmp cmp jmp cmp jmp cmp jmp cmp jmp cmp jmp cmp jmp cwtl les repnz jo jb inc dec push jp cmp jp fyl2x (bad) test xor in fwait mov inc data16 and mov dec test stc jne sbb sub fsincos subl mov lcall jne std jl test and push test cltd (bad) int fdivs push scas jbe out lea dec fidivr fstps cmp flds test lds test mov test push neg test jb test jge pop mov jp es fisubrl (bad) sub inc stc aas mov jb outsb cltd jae inc xor test stos mov jo stos mov jo stos mov jo stos mov jo stos mov jo stos mov jo stos mov jo stos mov jo stos mov jo stos mov jo stos mov jo stos mov jo stos mov jo stos mov jo stos mov jo stos mov jo stos mov jo stos mov jo stos mov jo stos mov jo stos mov jo stos mov jo stos mov jo stos mov jo stos mov jo stos mov jo stos mov jo stos mov jo stos mov jo jb cmpsl add push lods push test (bad) sub inc icebp (bad) test (bad) int3 movsb fnstenv in std mov in jb test scas jbe call lea mov push fnstcw cmp into adc loop adc into mov jp into repz into bound into (bad) frstor fcmove stc and sub xchg and and jne lea test sub mov iret icebp out mov scas fnstenv sub test jb sub jae test aas jb fldt test lcall leave stc sub push or (bad) test imull fnstenv out rcrl add je xlat add je xlat add je xlat add je xlat add je xlat add je xlat add je xlat add je xlat add je xlat add je xlat add je xlat add je xlat add je xlat add je xlat add je xlat add je xlat add je xlat add je xlat add je xlat add je xlat add je xlat add je xlat add je xlat add je xlat add je xlat add push mov imul icebp (bad) leave stc icebp or jb sub jp and mov pushl xchg imul test cmp xor rcrl and mov and lea sub xor test sbb rcr jp mov push fstps jp mov lcall repz mov jb call in mov test fnstenv and jp xor push sbb sar xchg sub lret fldenv test push and stos inc aaa jb test sysret aad sysret aad sysret aad sysret aad sysret aad sysret aad sysret aad sysret aad sysret aad sysret aad sysret aad sysret aad sysret aad sysret aad sysret aad sysret aad sysret aad sysret aad sysret aad sysret aad sysret aad sysret aad sysret aad sysret aad sysret aad sysret aad sysret aad sysret aad sysret aad sysret aad sysret aad sysret aad sysret aad sysret aad sysret aad sysret aad sysret aad sysret aad sysret aad sysret aad sysret aad sysret aad sysret aad sysret aad sysret aad sysret aad sysret aad sysret aad sysret aad sysret aad sysret aad sysret aad sysret aad sysret aad sysret aad sysret aad sysret aad sysret aad sysret aad movups pop mov test jb and test repz sti push and sub lods push cmp xor fnstenv inc pop mov test jb and test repz sti push and sub mov popa jb test stc out fnstenv sub jbe test and call lea mov jno jb lock out lret jb lock jp shll test push and sub test sub test push sub ret fyl2xp1 sub inc fwait and fstpl and test test jb inc fnstenv icebp subb icebp subb icebp subb icebp subb icebp subb icebp subb icebp subb icebp subb icebp subb icebp subb icebp subb icebp subb icebp subb icebp subb icebp subb icebp subb icebp subb icebp subb icebp subb icebp subb icebp subb icebp subb icebp subb icebp subb icebp subb icebp subb icebp subb icebp subb icebp subb icebp subb icebp subb icebp subb icebp subb icebp subb icebp subb icebp subb icebp subb icebp subb icebp subb icebp subb icebp subb icebp subb icebp subb icebp subb icebp subb icebp subb icebp subb icebp subb icebp subb icebp subb icebp subb icebp subb icebp subb icebp subb icebp subb icebp subb icebp subb icebp subb icebp push aas jle subl sbbl sub push aas jle mov aaa lods xor pusha test sub inc data16 andl in and fadd sti aas fdivs jb in and test jb not lea dec idivb fyl2x lds jp lods daa icebp in fwait mov fnstenv inc push xchg and lea or aaa lods xor insl test sub ret stos and repz sti mov adc scas jbe not lea dec fidivr fnstenv jp fnstenv and jp xor (bad) push es xchg test jb inc aaa pushf xchg inc aaa pushf xchg inc aaa pushf xchg inc aaa pushf xchg inc aaa pushf xchg inc aaa pushf xchg inc aaa pushf xchg inc aaa pushf xchg inc aaa pushf xchg inc aaa pushf xchg inc aaa pushf xchg inc aaa pushf xchg inc aaa pushf xchg inc aaa pushf xchg inc aaa pushf xchg inc aaa pushf xchg inc aaa pushf xchg inc aaa pushf xchg inc aaa pushf xchg inc aaa pushf xchg inc aaa pushf xchg inc aaa pushf xchg inc aaa pushf xchg inc aaa pushf xchg inc aaa pushf xchg inc aaa pushf xchg inc aaa pushf xchg inc aaa pushf xchg inc aaa pushf xchg inc aaa pushf xchg inc aaa pushf xchg inc aaa pushf xchg inc aaa pushf xchg inc aaa pushf xchg inc aaa pushf xchg inc aaa pushf xchg inc aaa pushf xchg inc aaa pushf xchg inc aaa pushf xchg inc aaa pushf xchg inc aaa pushf xchg inc aaa pushf xchg inc aaa pushf xchg inc aaa pushf xchg inc aaa pushf xchg inc aaa pushf xchg inc aaa pushf xchg inc aaa pushf xchg inc aaa pushf xchg inc aaa pushf xchg inc aaa pushf xchg inc aaa pushf xchg inc aaa pushf xchg inc aaa pushf xchg inc aaa pushf xchg inc aaa pushf xchg inc aaa pushf xchg inc aaa pushf xchg inc aaa and inc mov sbb mov fcmovu lea sub push aas jle jmp lcall push jae test mov imul inc test int scas fnstenv test push int cmpsl fnstenv cmpsl pop push jns fyl2xp1 aaa lods xor bound sub bnd fyl2xp1 sub js aas jle repnz test lcall mov aas jle mov lcall movsl jae test xor jp push cmc cli test mov jp hlt jb test sti std sub jb inc pop jb test outsl mov int3 outsl mov int3 outsl mov int3 outsl mov int3 outsl mov int3 outsl mov int3 outsl mov int3 outsl mov int3 outsl mov int3 outsl mov int3 outsl mov int3 outsl mov int3 outsl mov int3 outsl mov int3 outsl mov int3 outsl mov int3 outsl mov int3 outsl mov int3 outsl mov int3 outsl mov int3 outsl mov int3 outsl mov int3 outsl mov int3 outsl mov int3 outsl mov int3 outsl mov es and ja test dec or fyl2x lds fdivs test fnstenv das inc jae test (bad) jp sbb push pop mov test fnstenv cmpsl pop fdivrs (bad) scas fnstenv sub jae test mov test jge cmp jb xchg les push fnstenv inc fnstenv (bad) mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov cmp push jb test push jp sbb sub jb xchg dec jb push fnstenv fsubrl mov (bad) in xor xchg mov adc fnstenv cmpsl pop sub (bad) test in jp sbb int jb xchg fdivs sub testb xchg lahf pop int test std sbb dec out test sbb fdivs pop inc jae test (bad) fnstenv aas movsl jae test imul lea nop adc jnp es fnstenv pop dec jae test in test xor movsb jbe lods movsb jbe lods movsb jbe lods movsb jbe lods movsb jbe lods movsb jbe lods movsb jbe lods movsb jbe lods movsb jbe lods movsb jbe lods movsb jbe lods movsb jbe lods movsb jbe lods movsb jbe lods movsb jbe lods movsb jbe lods movsb jbe lods movsb jbe lods movsb jbe lods movsb jbe lods movsb jbe lods movsb jbe lods movsb jbe lods movsb jbe lods movsb jbe lods movsb jbe lods movsb jbe lods movsb jbe lods movsb jbe lods movsb jbe lods movsb jbe lods movsb jbe lods movsb jbe lods movsb jbe lods movsb jbe lods movsb jbe lods movsb jbe lods movsb jbe lods movsb jbe lods movsb jbe lods movsb jbe lods movsb jbe lods movsb jbe lods movsb jbe lods movsb jbe lods movsb jbe lods movsb jbe lods movsb jbe lods movsb jbe lods movsb jbe lods movsb jbe jbe test fdivs push outsb out test (bad) in aam jb inc xor jo test fdivs push outsb out test (bad) in aam jb inc or test leave jge js lea sub mov imul jle fldenv test add test fnstenv push pop mov test cltd (bad) int fdivs push outsb bnd fyl2xp1 and cmp mov jp (bad) jp outsb out test (bad) in aam jb adc jp test icebp subl out test jb fnstenvs xchg out inc xchg out inc xchg out inc xchg out inc xchg out inc xchg out inc xchg out inc xchg out inc xchg out inc xchg out inc xchg out inc xchg out inc xchg out inc xchg out inc xchg out inc xchg out inc xchg out inc xchg out inc xchg out inc xchg out inc xchg out inc xchg out inc xchg out inc xchg out inc xchg out inc xchg out inc xchg out inc xchg out inc xchg out inc xchg out inc xchg out inc xchg out inc xchg out inc xchg out inc xchg out inc xchg out inc xchg out inc xchg out inc xchg out inc xchg out inc xchg out inc xchg out inc xchg out inc xchg out inc xchg out inc xchg out inc xchg out inc xchg out inc xchg out inc xchg out inc xchg out inc xchg out subl fldenv adc fnstenv pop pop jae test sub out add jb inc lea icebp call lea mov jp lea push fnstcw pop fdivs int3 js jp fyl2xp1 cmp cltd cmp in leave icebp xchg stos xor test sub mov sbb and jp and jl xchg or xchg loope (bad) stc push sbb sub jp (bad) mov outsb push pcmpeqd push jb test sbb outsl fnstenv test lea fpatan mov lcall jp fnstenv push dec push test stc pop movsb pop mov lods fnstenv push out jp sbbl xchg stos fdivs jp insl (bad) into sbb (bad) into sbb (bad) into sbb (bad) into sbb (bad) into sbb (bad) into sbb (bad) into sbb (bad) into sbb (bad) into sbb (bad) into sbb (bad) into sbb (bad) into sbb (bad) into sbb (bad) into sbb (bad) into sbb (bad) into sbb (bad) into sbb (bad) into sbb (bad) into sbb (bad) into sbb (bad) into sbb (bad) into sbb (bad) into sbb (bad) into sbb (bad) into sbb (bad) into sbb (bad) into sbb (bad) into sbb (bad) into sbb (bad) into sbb (bad) into sbb (bad) into sbb (bad) into sbb (bad) into sbb (bad) into sbb (bad) into sbb (bad) into sbb (bad) into sbb (bad) into sbb (bad) into sbb (bad) into sbb (bad) into sbb (bad) into sbb (bad) into sbb (bad) into sbb (bad) into sbb (bad) into sbb (bad) into sbb (bad) into sbb (bad) into sbb mov fst repz and jp sub xchg popf int3 jb lock idivl pushf fdivl and sub pop fwait js sbb aaa mov es mov adc mov lods jp dec sub jnp fnstenv and lea xchg push cmc enter xor xchg push es daa movsb pop mov lods fnstenv test sbb or adc mov adc pop and and push (bad) (bad) out mov jb and jb testb and xchg testb and xchg testb and xchg testb and xchg testb and xchg testb and xchg testb and xchg testb and xchg testb and xchg testb and xchg testb and xchg testb and xchg testb and xchg testb and xchg testb and xchg testb and xchg testb and xchg testb and xchg testb and xchg testb push fldenv test xchg ja jmp es test mov sub lods sbb jp push sub add add xchg jg,pt cwtl jb and jp push lods je push lcall notl sti outsb fnstenv test jb test jae test jo test jb (bad) es xor pop sti (bad) sub bound test lea test and mov sub mov xchg popa fnstenv mov push pop mov push pop mov push pop mov push pop mov push pop mov push pop mov push pop mov push pop mov push pop mov push pop mov push pop mov push pop mov push pop mov push pop mov push pop mov push pop mov push pop mov push pop mov push pop mov push pop mov push pop mov push pop mov push pop mov push pop mov push pop mov push pop mov push pop mov push pop mov push pop mov push pop mov push pop mov push pop mov push pop mov push pop mov push pop mov push pop mov push pop mov push pop mov push pop mov push pop mov push pop mov push pop mov push pop mov push pop mov push pop mov push pop mov push pop mov push pop mov push pop mov push pop mov jg (bad) sub jb test inc mov (bad) icebp mov sub jo sub jb inc mov icebp (bad) xchg jge test fwait js xor mov cmpsl scas jb imul adc sbb outsl fnstsw test mov into push jbe test stc pop movsb push mov outsb fnstcw test jb test jo test jo test jb (bad) es xor pop mov fstps and pop mov test fwait popf mov push jb test lcall sbb mov cmpsw cwtl repnz mov push fwait xor outsb jae test stc pop movsb push mov outsb fnstenv test inc mov lds flds jno (bad) repnz xor mov out and xchg lcall jnp fldenv test pop jb test sub je and mov sbb pop pop jne inc add test mov stos js mov stos js mov stos js mov stos js mov stos js mov stos js mov stos js mov stos js mov stos js mov stos js mov stos js mov stos js mov stos js mov stos js mov stos js mov stos js mov stos js mov stos js mov stos js mov stos js mov stos js mov stos js mov stos js mov stos js mov stos js mov stos js mov stos js mov test pop mov fstps jp mov jle fyl2x mov push fdivl push mov test and test daa sub bound xor icebp in fwait stos movsl fnstenv inc add sti outsb fnstenv test jo push or test pop jb test sbb fstps jp mov adc aam xchg cmpsl fnstenv sub jae stos xor test lea and cli gs lods xchg and (bad) cmpsl fdivs sub jo push flds xchg imul test pop push jnp fstps and ret test jb inc cmp test ljmp inc ljmp inc ljmp inc ljmp inc ljmp inc ljmp inc ljmp inc ljmp inc ljmp inc ljmp inc ljmp inc ljmp inc ljmp inc ljmp inc ljmp inc ljmp inc ljmp inc ljmp inc ljmp inc ljmp inc ljmp inc ljmp inc ljmp inc ljmp inc ljmp inc ljmp inc ljmp inc ljmp inc fwait mov fnstenv and sti out fdivs ret jp fnstenv sbb mov adc out test jb sub push testl xlat jb repz imul cwtl fnstenv and dec data16 fnop jp fnstenv mov push jo in jp pushf into xor inc sub nop test jb and pop lods push imul xchg lds push xchg icebp subb jbe movsl popa jb test sti aas lock jnp fyl2x mov cmpsb fnstenv and sti out fdivs and test sti out fdivs into push inc jb ljmp sub jb movsb mov mov sub jo dec pop mov sub jo cmp mov jb and test enter jb xor loopne jb pop inc jnp fprem data16 fwait adc cmp jmp cmp jmp cmp jmp cmp jmp cmp jmp cmp jmp cmp jmp cmp jmp cmp jmp cmp jmp cmp jmp cmp jmp cmp jmp cmp jmp cmp jmp cmp jmp cmp jmp cmp jmp cmp jmp cmp jmp cmp jmp cmp jmp cmp jmp cmp jmp cmp jmp cmp jmp cmp jmp cmp jmp cmp sti inc fsts jp push mov jp push pop jnp flds jnp fnstenv jae stc bound sbb sub push out dec test push inc jnp fstps test pause test jb and jp fnstenv std std lret fnstenv in xorl aaa mov mov and ja mov push mov jae lods xchg jnp jb lret sbb mov adc lret sbb mov adc lret sbb mov adc lret sbb mov adc lret sbb mov adc lret sbb mov adc lret sbb mov adc lret sbb mov adc lret sbb mov adc lret sbb mov adc lret sbb mov adc lret sbb mov adc lret sbb mov adc lret sbb mov adc lret sbb mov adc lret sbb mov adc lret sbb mov adc lret sbb mov jae cmpsl mov jne sarb imul icebp mov push push jbe sub jae jb add jle fimull fstpl mov ret repnz mov cwtl stc outsb mov frstor repz pop mov test cltd sbb fnstenv ret out add jb repnz cs lods pop jno jmp popa mov inc lea int push sub mov pop fldt add test push xchg push es jp fnstenv dec xor push es fdivs and sti mov xchg jp cmpsb push cmp xchg jbe call fstl inc fdivl test stos pop or fnstenv lret mov adc lret mov adc lret mov adc lret mov adc lret mov adc lret mov adc lret mov adc lret mov adc lret mov adc lret mov adc lret mov adc lret mov adc lret mov adc lret mov adc lret mov adc lret mov adc lret mov adc lret mov adc lret mov adc lret mov adc lret mov adc lret mov adc lret mov adc lret mov adc lret mov adc lret mov adc lret mov adc lret mov adc lret mov adc lret mov adc (bad) lods push push (bad) fstps sub lods aaa or mov aaa (bad) mov movsb test pop or mov lcall mov sbb (bad) sbb fsubrl adc (bad) push lea leave stos push aas fisubrl fldenv fcompl add (bad) stos jb scas cmp or lods pop sub stos push bswap mov pop lds in lods push es sbb lcall jns jb nop loope inc nop loope inc nop loope inc nop loope inc nop loope inc nop loope inc nop loope inc nop loope inc nop loope inc nop loope inc nop loope inc nop loope inc nop loope inc nop loope inc nop loope inc nop loope inc nop loope inc nop loope inc nop loope inc nop loope inc nop loope inc nop loope inc nop loope inc nop loope inc nop loope inc nop loope inc nop loope inc nop loope inc nop loope inc nop loope inc nop loope inc nop loope inc nop loope inc nop loope inc nop loope inc nop loope inc nop loope inc nop loope inc nop loope inc nop loope inc nop loope inc nop loope inc nop loope inc nop loope inc nop loope inc nop loope inc nop loope inc nop loope inc nop loope inc nop loope inc nop loope inc nop loope inc nop xor push es std mov sbb (bad) sbb fist push adc mov xchg mov lods es fidivl shrb nop dec lea lcall shrb jp adc xor fidivr fwait push es jmp mov add fnstsw sbb lcall icebp stc sub stc sub stc sub stc sub stc sub stc sub stc sub stc sub stc sub stc sub stc sub stc sub stc sub stc sub stc sub stc sub stc sub stc sub stc sub stc sub stc sub stc sub stc sub stc sub stc sub stc sub stc sub stc sub stc sub stc sub stc sub stc sub stc sub stc sub stc sub stc sub stc sub stc sub stc sub stc sub stc sub stc sub stc sub stc sub stc sub stc sub stc sub stc sub stc sub stc sub stc sub stc sub stc sub stc sub stc sub xchg mov lea fldt pop leave mov lea fcompl or cld mov pop leave mov lea fcompl or cld mov pop leave mov lea (bad) mov sbb mov and test pop push clc stos sbb ds mov adc test mov pop fcompl push int add test loopne push xor int push pop clc stos sbb sub push es lret sub lods and (bad) mov sbb les push jp add rcr or (bad) jp (bad) jp (bad) jp (bad) jp (bad) jp (bad) jp (bad) jp (bad) jp (bad) jp (bad) jp (bad) jp (bad) jp (bad) jp (bad) jp (bad) jp (bad) jp (bad) jp (bad) jp (bad) jp (bad) jp (bad) jp (bad) jp (bad) jp (bad) jp (bad) jp (bad) jp (bad) jp (bad) jp (bad) jp (bad) jp (bad) jp (bad) jp (bad) jp (bad) jp (bad) jp (bad) jp (bad) jp (bad) jp (bad) jp (bad) jp (bad) jp (bad) jp (bad) jp (bad) jp (bad) jp (bad) jp (bad) jp (bad) jp (bad) jp (bad) jp (bad) jp (bad) jp (bad) jp (bad) xor push es lret cmp lods sbb mov and fisubrl add in mov lea in adc leave stos or test push scas push es fisubrl push push (bad) mov mov mov orl sub mov orl sub mov orl sub mov orl sub mov orl sub mov orl sub mov orl sub mov orl sub mov orl sub mov orl sub mov orl sub mov orl sub mov orl sub mov xchg test adc fcompl adc iret pushf add (bad) lods jb and pop sbb mov push pop cld mov pop leave mov lea fidivl add fldt lea fidivl or les cmp push and int add pop xchg test sbb bswap popf pop sbb mov push jp js test add leave lods pop cmp mov sub push es cmp mov jp andb fstpt pop test in xchg push and jmp pop sbb mov adc (bad) stos or rorb jb mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push mov push inc sub aas test jb test jb call mov push (bad) ljmp push mov push out mov pop jmp mov and test pop sbb lahf sbb int lcall mov pop sbb lods pop sub push es adc mov push rclb xchg cmpsl or add (bad) mov push int add test sub fcompl sbb int lcall lods es lds and jp test add fsubrs add fsubrs add fsubrs add fsubrs add fsubrs add fsubrs add fsubrs add fsubrs add fsubrs add fsubrs add fsubrs add fsubrs add fsubrs add fsubrs add fsubrs add fsubrs add fsubrs add fsubrs add fsubrs add fsubrs add fsubrs add fsubrs add fsubrs add fsubrs add fsubrs add fsubrs add fsubrs pop mov data16 fstps xor fidivl add lds ja mov push mov pop push (bad) stc dec pop jmp pop sbb mov adc cmp sub stos sbb fdiv and int push pop adc pop add xchg xor hlt mov or test adc stos sbb pushl add jmp add int push sub stos add (bad) mov sub mov adc mov pushf test jg ljmp push push xchg sbb int pop add mov lcall sti and out xchg and mov adc mov push cli lods sbb mov lcall fnstenv mov fnstenv inc adc jb test stc test es test lcall fnstenv mov nop push es mov adc mov push int pop jp gs test add lret push int3 mov lahf test pop sbb sar cmp sar cmp lds test mov pusha mov inc xor mov (bad) or cmp test adc jp fstps jo fnstenv ljmp lea insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp insb cmp inc or jge shll aas loopne mov lret sbbl mov pop adc nop add push jmp mov test lret inc bound mov mov or inc fstl and fildl add or rolb rep gs in mul sbb sub inc orb fstps dec repnz push pop insb dec das in mov jbe (bad) ds jg lds sub jne add clc mull adc mov dec out es insl pop shlb rolb push sub imul test dec fidivl adcl (bad) data16 jns imul (bad) jno push push ret dec xchg int push cmp call daa and jnp pushf stos push lock xor push (bad) mov std and inc aas loopne mov and lret xor add dec jb ljmp inc js into jl cmp jmp mov lods push jo push popf mov icebp mov jmp pop loope fdivp and mov mov sbbl pop lcall xchg in test add inc enter mov xor cld sbb lret or iret das es out kandb ror mov movsl test mov cmpsl in dec loop lods sub xlat dec push xchg jno test orl or pop insl push jmp add sahf inc and xchg (bad) adc pop mov loopne add lcall xor sub movsb out (bad) cwtl rcrb shrl pop add sub repz lods cmpsb test or shr push cmp jnp (bad) xor push add dec jb ljmp inc mov into fwait cmc cmp jmp mov and cmp popf lods lret icebp jns icebp mov (bad) mov jle aam cld loope mov lret mov sbbl pop sbb mov pusha push lcall fucomi test enter inc and rorb lret or or es dec out iret fldl ror mov fsubrs movsl and adc aad sub test or adc sbb pop insl push jmp xchg mov xor xchg (bad) sahf sbb fildll adc mov and add ss push xor sub movsb out (bad) cwtl sub rcrl sub dec pop mov stos lods cmpsb cmp roll lahf jnp push rdtsc add (bad) jb push adc dec inc pushf ljmp cmp jmp jecxz and cmp jns icebp mov (bad) mov jmp cld loope mov and stos test cs xchg inc push mov nop test cwtl cmpl and in xchg mov or xchg sub hlt push test gs enter mov (bad) mov mov movsl rolb (bad) sbb jbe push cli popa add lret stc pop inc or orl fistl and (bad) sbb or lods iret mov icebp repnz daa cmp and in insl cmp fcoms sbb (bad) (bad) ret sbb cmp lock sbb in int3 popf (bad) je fild push pop pop (bad) and mov push inc repz bound mov push sub fsts pop add cmpsl sub test loope xor lds shrl loopne in stos test cs xchg inc dec mov nop test cwtl xor ss adc mov or xchg clc sti hlt into test gs enter mov (bad) mov mov cmp add mov push mov jbe jno mov lahf inc or dec pop inc fcmovnbe out jnp jo xchg mov adc (bad) mov or lods iret sbb data16 mov mov push in daa cmp and sbb xchg fmuls mov push (bad) dec lock in int3 popf xchg je cld sbbb pop fistp sub imul incb idivl bound add movsb es rcr insb pop add sub inc pusha sub lea test out xor fldcw lds loopne mov inc dec or mov lret fcompl mov js test sbb bound cmp (bad) mov pop sub inc mov pxor popa xchg fucomip in scas clc leave inc repz lds lock imul aad cmc (bad) dec ds xor cli xor cmp or mov jl push shll inc mov aaa dec add xchg add and sbb inc xor and push orl les inc idivb xchg icebp and dec fsubrl rorb lret pop adc repz mov push and out test in arpl mov or push inc mov jno cltd sub lods gs (bad) hlt fs sahf lods adc fdivrs jmp cmp mov and mov cmpsb sti in data16 push flds sub cmp sub (bad) mov pop sub inc mov pxor xchg insl call fild rclb loop roll push pop aad xor dec sbb sub iret in cli mov sub jp jne shll inc mov aaa dec mov xor add add sbb xchg sbb mov push or mov testb cmp dec xchg rorb lret pop adc sti int movsb adc mov pop mov cs lcall in xchg mov arpl out fwait push pop mov inc mov pop (bad) push lret jno cltd sub lods adc ficompl hlt fs sahf std adc fsubrs jg je mov ss and callw in flds sub cmp sbb bound sub (bad) mov pop out dec inc xchg insl pmulhw popa clc fucomip repz loop roll push pop imul lds cmpsl andl fucomp and sub push gs notb fwait insb nop inc mov push xor mov int cmp xchg and ret xor adc inc pop push inc aaa cmp out loop sarl jbe imul cmp pop mov hlt jmp mov add jecxz jp dec inc mov inc pop arpl pop (bad) jne and pop push lods addr16 les stos push dec mov stc mov jle inc xor dec sbb mov (bad) lret push insl clc mov in or enter ret lret xchg outsl dec fs jo stos movsb std dec mov mov fcoml iret inc cwtl inc leave rcrb psubusw push sbb sbb movsl pop (bad) fucomip push test fcom rcrb add dec pop shll cmc or repnz cmp cmpsl cmpsl and ljmp jnp push pusha sti mulb mov push xor daa ds cmp xchg int ret xor adc inc jae lea divl out cmp shrl das cmp pop imul cmp mov sbb jecxz mov jb inc pop inc adc xlat (bad) jne and pop push lods cli push les stos addr16 mov mov and inc xor dec (bad) lods mov add fimull popf push insl clc lret push or mov outsl dec fldt xchg lds std dec jo mov cld mov fcoml iret inc pop inc leave xor rcr sub cmpsb push dec sbb movsl mov test aad lahf call add rcrb xor out or sbb mov sbb sub mov mov fwait xor daa mov int jb aaa loope rol mov and out pop ljmp xlat fsubrp es jl imul mov pushf outsb xchg inc mov push in sti pop xchg and sub lock xchg and xor iret je add sbb cmp mov stc mov clc ja insb adc cmp pop js mov push mov jnp xchg add mov mov mov inc and pop xorl aad push lods push lods pop pop mov mov jp jg dec lock fdivrl lret les out out push scas xchg xchg jo imul mov loop movsl decb mov jne xchg cwtl or pop xor inc cltd inc lret aad lret fldt sbb dec sbb add out push xchg (bad) jge jmp (bad) jb mov and out ds xlat (bad) jmp cmpsb sbb fsubrp jl imul mov pushf outsb addr16 mov push in xchg pop xchg scas sub sti lock xchg into adc (bad) or and add sbb je mov cmp ja,pn jecxz xor int insb mov jnp dec add test mov mov inc and adc fs pop push lods sti push lds lods push lea fistpll dec lock dec enter mov fadd lahf push outsl cli lret out out push scas (bad) popf add orb in xorl or insl movsl mov in fstpl rolb inc lret aad lret fldt sbb dec sbb add inc push xchg (bad) out mov jge jb mov xor (bad) or repz or out pop ljmp rcr jl sbb call addr16 mov pushf in xchg inc xchg scas push sub pop sub sbb mov and repz fwait lock jle or sub lcall rcrl and addr16 pop add jnp ds push cltd imul cmp aam imul jl enter add jmp mov inc pushf pop inc jns mov imulb cmpsl loopne sarb mov jp pop mov repnz sbb es js lea mov test push pop pop xorl out gs ret test (bad) int and lds sbb mov inc or cmp xor jbe out (bad) fiadd ror insl nop arpl mov test sti dec jecxz scas cs mov xlat fmuls push jb xchg push cld or pop outsb push in movsb mov mov push adcl sbb loop add fwait mov or sub jle cmpsb jmp sbb call and mov ds mov hlt push xchg das mov cmp jl enter add jmp lds popf pop inc mov mov jge shrb cmp push jno lret int3 scas jp repnz pop ljmp jbe icebp mov test push pop aad jae (bad) pop xchg out clc xchg ret test (bad) int and mov mov mov inc or cmp out rcr inc jbe leave (bad) insl nop fldcw arpl sar dec mov scas out mov xlat fsubrs ficoml int dec (bad) (bad) jb push xchg or pop outsb push in movsb xchg mov xor mov sbbl adc mov and repz or fs dec cmpsb jmp sbb push addr16 add call mov imul mov cwtl insb shrb push xor test jp int jb cmpb (bad) lods daa add mov sbb cli and sti in jbe sbb adc jne into scas mov movsl nop outsl mov aam add repnz (bad) ret or data16 push mov lods cli dec fstpt dec xor (bad) jae cmp and pusha jb jle (bad) push rorb push rcrl repz push fstl sub adc or test pop mov or mov loopne or sub sahf orl xchg mov mov jno add sub add add sub add add add add add add add add and add add add or add adc add add add add cmpsb adc add and add add add sbb add adc add add add add mov add sub add sub add push add add add add add add add add cmp jle inc add add push adc cmpsb pop push add popa adc mov dec and orb xchg inc and xchg dec and cwtl pop and add push add push xor add insb das add push cmp ret add pop adc add add lds add imul into jb add jb add jp add pop and (bad) pusha and add ja add jns add jge add xor (bad) je add jle add dec inc add dec dec add inc add inc inc add dec dec add dec add dec add pop push add dec dec add dec add dec push add push push add push add push push add push push add pop add fs add pop add inc add jne add outsb imul xchg jne add jae add je add data16 arpl mov jl add js add jb add push pop add push pop add pop pop add jne add jg add add les add bound int3 gs gs ret push imul imul insb insb add outsb jo (bad) jne add jb add jbe add jnp add jp add jno add je add js add jne add jbe add jns add js add jnp add jl add andl add mov (bad) test add mov add xchg les push add xchg inc add xchg dec add lcall in pop add cmpsb push add movsb pop add test lret add cmpl mov add scas jbe repz add mov add jle add mov add mov mov popl mov xchg xchg add cwtl xchg add lcall scas lahf lcall movsb lahf add mov add jl add mov add mov add xchg add mov add lcall rorb xchg add xchg xchg add xchg cltd add fwait lcall addl ljmp add mov add mov add mov in popl loop xchg add popf cltd add popf popf add xchg xchg add xchg xchg add cwtl xchg add fwait lcall mov lahf add mov mov add test add stos test xlat mov add scas mov enter les mov add test add test add stos test sti lods test add scas lods add mov add mov add mov add mov add add add mov add mov add mov jl mov mov repz mov add les add ret les out lret les test rolb int3 les clc lret not lret add fmul add sar add (bad) incl add test fldl add add add fcompl dec dec dec inc cmp jl mov add add push insl jge (bad) leave enter outsl addr16 xor dec lahf pop jo fsubrp out jmp loop aad ror enter xor stos fs call jmp loop (bad) rcl into mov add add gs sti cmc cmc repnz stc cmc cmc cmc cmc lock enter jae cmp mov jne cli sti sti cmc stc sti sti sti std cld cld cld std std std cld sti cmc aam (bad) jnp addr16 cmpsb add js cli cld sti sti stc sti sti sti sti sti cld cld cld add std std std std cld cli out jp dec xor lods add jl add add mov cli cld sti cmc cmc cmc cmc stc stc stc sti sti sti sti cld sti cld cld std std std std std hlt lret inc xor add add add repnz cmc cmc cmc stc stc stc sti sti sti sti sti cld cld cld cld cld clc int3 jb ds add add add mov out out out lock cmc cmc cmc stc stc stc sti sti sti sti sti cld cld sti int3 insb inc ss add add add mov in jmp out out out lock cmc cmc cmc stc stc sti sti sti sti sti hlt mov add add xlat fdivr jmp loope loop in jmp jmp out out lock cmc cmc cmc stc stc sti sti out jbe das add add add out aad aad (bad) loope loop loop in jmp out out lock cmc cmc stc cmc add lods add add (bad) in (bad) rcl aad aad jl (bad) loope loop in jmp out out out lock jmp add add int iret rcl rcl rcl rcl aad (bad) loope loope loop in jmp out out out lock push add mov iret iret iret iret rcl rcl rcl rcl aad aad (bad) loope loope in jmp jmp out out lret cmp or ror into into into iret iret iret iret rcl rcl rcl rcl aad (bad) (bad) (bad) loop loop in lret add sbb adc jl addl vshufps rcl rcl aad (bad) (bad) loope loop aas mov sbb and and and and and and push mov rcl rcl rcl rcl aad (bad) ffreep inc add push test mov xchg add sarb rcl rcl aad rcrb imul rcl rcl rcl xchg push dec add into into iret iret iret rcl rcl ror je add imul rcl rcl rcl rcl rcrl jg enter into into into iret iret iret ror lds add popa mov fwait fwait fwait fwait fwait fwait fwait fwait fwait lcall rol (bad) leave leave leave into into leave jp add add pop xchg xchg xchg xchg cwtl cwtl xchg cwtl cwtl cwtl cwtl cwtl cwtl cwtl xchg mov push add (bad) (bad) enter add add push sub xchg xchg xchg xchg xchg xchg xchg xchg xchg mov dec add jp (bad) mov rol (bad) ja add add add adc (bad) nop nop nop nop nop nop nop nop nop nop nop nop mov add mov add add add add sub mov lea mov jnp addb add add mov mov es jp jnp jnp jg add and test sub add je jp jae (bad) push adc and and and and je jns add add and and and and pop mov push push sbb sbb mov add add push xchg (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) incl add clc add incl add push add incl add jmp add jg add incl add incl add pop add add add add add add add add add add add add add add add add add add add add jl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add aas add add add jg add lock incl add clc add add add add add (bad) add add add (bad) incl add incl add push (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add sub add and add inc add add add add add add add add (bad) incl movsl jnp add test mov add pushf pop arpl movsl imul cmp (bad) jae add add cmp movb mov dec push add push pop add pop arpl pushf cmp add inc inc add cmp add push add push add pop pop add cmp mov add arpl (bad) imul arpl fidiv add imul jnp add test test add mov call add jnp notl add test jmp jae ljmp jnp pushf imul xchg xchg add jae add mov add movsl add lods lods add mov add mov jnp out mov add imul mov xchg jae add mov lods mov imul test jnp imul movsl movsl add cmp jmp mov ljmp lods add lods movsl add mov inc add pushf xchg add lods movsl add inc cmp jae cmp inc mov add into movb inc xor arpl xor fidiv movb cmp add cmp add inc add (bad) mov add (bad) into add cmp add cmp movsl cmp add and neg (bad) add and lods push xor pushf push cmp lods inc sbb movsl cmp add or movsl inc adc jae sub movsl cmp add inc or lods dec adc mov sbb (bad) imul neg into add dec or mov add arpl add dec add (bad) pop or jl or mov sbb (bad) imul (bad) test (bad) pop add into imul (bad) jae add xchg push add arpl add imul mov jnp add test add mov add xchg dec add pushf push add mov add (bad) xchg add imul (bad) arpl add jae add mov add xchg inc add movsl pop add lods arpl out lods imul mov add imul out or (bad) jnp add test add pushf inc add pushf dec add lods arpl out pushf cmp idivl test add add ja ja dec dec dec add add add add add add add mov mov mov mov mov add add push pop pop push pop push add add cs cmp adc outsb mov add inc cmp sub and pop outsb mov add mov pop fs inc push cmp sub sub and add pop pop inc imul jb inc push sub and pop bound add add inc pusha pusha pusha fs imul pop xor cmpxchg add add inc pop pop pop pop inc pusha pusha add imul jb and adc jl dec jb cmp cmp inc pop pop pop pop inc pusha pusha pusha fs pop push outsb mov add add push xor cmp cmp inc inc pop pop pop inc pusha pusha pusha fs add add xor xor xor cmp push push inc inc pop pop pop inc pusha pusha cmp mov add dec push xor push xor xor push push xor cmp cmp inc inc pop pop push sbb add add xor xor xor push xor xor push push xor cmp cmp cmp sub sub sub sub xor xor xor xor xor xor cmp push and sub das sub sub sub xor xor xor xor xor xor adcb and and and and and sub xor xor push xor xor push or xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg pushf mov xor sub sub xor xor xor or fwait fwait fwait fwait fwait fwait fwait fwait fwait fwait mov sub das sub sub xor xor mov add scas scas scas scas scas scas scas scas scas scas movsb js add daa sub sub sub sub sub mov add andl movsb movsb (bad) mov dec dec es sub sub mov add add stos stos stos stos stos stos stos stos stos stos xchg push sub es add add add mov cltd cltd cltd cltd cltd cltd lahf jae add and sub add add mov mov mov dec and and daa mov pop mov lahf xchg add add and add jl add add pop mov test test xchg mov add mov add add sahf sahf sahf sahf sahf sahf xchg mov add je addb add add inc inc (bad) (bad) (bad) (bad) (bad) clc add inc add incl add incb add cld add psubb add jl add lock add add add add add add add add add add add add add add add add add add add add jo add loopne pusha jg add cld add incl jg push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp add add add add add add add add add add add add add (bad) (bad) incl movsl jnp add test mov mov pushf pop arpl movsl imul cmp (bad) jae add jnp add cmp movb mov dec push add push pop add pop arpl pushf cmp add inc inc add cmp add push add push add pop pop add cmp mov add arpl (bad) imul add fidiv add imul jnp add test test add mov call add jnp notl add test jmp jae ljmp jnp pushf imul xchg xchg add jae add mov add movsl add lods lods add mov add mov jnp out mov add imul mov xchg jae add mov lods mov pushf test jnp imul movsl movsl add cmp jmp mov ljmp lods add lods movsl add mov inc add pushf xchg add lods movsl add inc cmp jae cmp inc mov add into movb inc xor arpl xor fidiv movb cmp add cmp add inc add (bad) mov add (bad) into add cmp add cmp movsl cmp add and neg (bad) add and lods push xor pushf push cmp lods inc sbb movsl cmp add or movsl inc adc jae sub movsl cmp add inc or lods dec adc mov sbb (bad) imul neg into add dec or mov adc arpl add dec add (bad) pop or mov or mov sbb (bad) imul (bad) test (bad) pop add into imul (bad) jae add xchg push add arpl add imul mov jnp add test add mov add xchg dec add pushf push add mov add (bad) xchg add imul (bad) arpl add jae add mov add xchg inc add add imull imul mov add imul out or (bad) jnp add test add pushf inc add pushf dec add lods arpl out pushf cmp idivl test add add ja ja dec dec dec add jl add add add bound mov add add add cmp or bound mov dec pop pop fs cmp add lea xor imul and add imul pop pop pop fs bound lea xor pop pop pop bound and es push xor push xor add and and and xor xor xor bound addr16 addr16 sub sub xor bound lods lcall sub mov add daa sub cmp lahf lahf lahf lahf and and xor mov add add cmpsl xchg xchg xchg and and mov add add add add add add pop add lock add loopne add rolb add add add add add add add add add addl add popl add incl add incl add add add add add add add sbb add add orb add jl add popf lea jl (bad) jl (bad) jg xchg xchg xchg cmpb pop mov mov mov mov cmp ds aas cmp dec inc insl pop dec jl pusha xchg cmpl add add add add add mov push jne fstps lock xchg jmp mov xchg push pusha mov inc mov cmp cmp push xchg cmpb add add cmpsb push push lret bound sahf pushf idivb sti mov cld scas lods std stos cmpsl (bad) movsl mov lcall nop ljmp push push mov cmp cmp bound lods mov popf cwtl (bad) int3 xabort mov mov cld scas stos cld mov cld lods stos std cmpsl movsl lcall (bad) (bad) (bad) out mov jp leave arpl pop pop data16 ja pop add add mov mov clc int stc enter mov mov into (bad) not int xlat into neg (bad) neg (bad) cmc (bad) not leave hlt mov out (bad) fistpll fdivs (bad) pusha pusha mov xor imul add add outsl jbe ret ror clc int3 vshufpd enter ret clc int3 (bad) (bad) int (bad) iret (bad) not leave not lret lret not int xlat into neg (bad) neg (bad) cmc (bad) lock mov imul dec pop inc cmp mov mov aad stc lds sarb mov mov enter ret clc int3 (bad) (bad) int (bad) iret (bad) not leave not lret lret not int xlat into neg shl lods cmpsl (bad) popa popa mov cmp push add add xchg xchg leave addl mov mov cli mov cli mov cli mov stc sarl clc mov enter ret clc int3 (bad) (bad) int (bad) iret (bad) not leave not lret lret in movsl mov dec fs cmp add lds sarb test lods stos cld scas lods sti mov sti mov sti mov sti mov cli mov cli mov cli mov stc sarl clc mov enter ret clc int3 (bad) (bad) int (bad) iret (bad) loop lahf mov dec mov cmp arpl add add jl aad std mov std cmpsb movsb std test cld stos cmpsl cld stos test lods stos cld scas lods sti mov sti mov sti mov sti mov sti mov cli mov cli mov stc sarl clc mov enter ret aam xchg mov inc jno push enter mov (bad) pushf pushf (bad) sahf popf (bad) mov std mov std cmpsb movsb std test cld stos cmpsl cld stos test lods stos cld scas lods sti mov sti mov sti mov sti mov sti mov cli mov cli mov stc sarl mov push addr16 dec rclb (bad) cwtl cwtl lcall lcall (bad) sahf popf (bad) mov std mov std cmpsb movsb std test cld stos cmpsl cld stos test lods stos cld scas lods sti mov sti mov sti jg sti mov sti mov cli mov sti mov mov push jp inc roll stc xchg xchg sti xchg xchg cld xchg xchg std xchg xchg (bad) cwtl cwtl lcall lcall (bad) sahf popf (bad) mov std mov std cmpsb movsb std test cld stos cmpsl cld stos test lods stos cld scas lods lds sti mov sti mov aam jl dec inc add add sbb push and imul mov mov nop clc xchg xchg stc xchg xchg cli xchg xchg cld xchg xchg std xchg xchg (bad) cwtl cwtl lcall lcall (bad) sahf popf (bad) mov std mov std cmpsb movsb std test cld stos cmpsl cld stos test lods stos cld scas lods (bad) jge jg dec add add add popa or data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 mov cltd cltd lcall (bad) sahf popf (bad) mov std mov std cmpsb movsb std test (bad) jp (bad) pop push add add add data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 lds pop inc xor add enter jno cli xchg xchg cld xchg xchg std xchg xchg (bad) cwtl cwtl (bad) cltd cltd lcall (bad) pushf pushf (bad) sahf popf incb (bad) mov mov add add jl dec xchg dec xchg dec xchg dec xchg dec xchg dec xchg dec xchg dec xchg dec xchg dec xchg dec xchg dec xchg out movsl push imul add add xchg mov xchg xchg clc xchg xchg cli xchg xchg sti xchg xchg std xchg xchg (bad) cwtl cwtl (bad) cwtl cwtl lcall stos push pop add add add jg inc clc mov clc mov clc mov clc mov clc mov clc mov hlt mov mov add add add mov js mov mov (bad) notl stc xchg xchg sti xchg xchg notb add add add mov (bad) jne mov repz repz repz repz repz repz repz repz repz repz shrl jg add add pop pop lds ljmp xchg mov mov pop insl mov (bad) out test out test out test out test out test out test outsl push inc add add cmpl jnp jg out sub test test mov cmpl add add add add and sahf push call push call push call push call push call inc js daa add add add mov insb loopne jp jnp lds in jle addb xchg mov dec mov inc jecxz inc jecxz inc jecxz inc jecxz inc jecxz inc jecxz inc jecxz inc jecxz inc jecxz inc loop inc mov add add rcrb pop pop fidivl jbe fnsave fistpll fistpll int3 jns mov mov add add fisttpll fisttpll fisttpll fisttpll fisttpll stos inc or add outsl outsb mov imul jo jb (bad) jo shrb ret (bad) jb pop daa ret sbb jle fdivrs fdivrs fadd and jle fdivrs fdivrs fdivrs mov push add add mov int3 push movl add mov cmp psrlq (bad) jae (bad) jae (bad) jae (bad) jae (bad) jae lret mov add add add add daa scas push push scas push push mov add add pop add pop add lds add (bad) xchg inc mov pusha mov test add add add add add add add (bad) (bad) (bad) (bad) cld (bad) jmp add incl add cld add psubb add clc add add add add add add add add add add add add add add add add add add add add add add add add add pop addb pop addb xadd rcrb add lock cld add incl jg push (bad) (bad) (bad) inc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp add add add add add add add add add add add mov mov add add subl cmp aaa xor cmp outsb pop dec add nop fsts xchg nop aad jp jb cmpsl dec dec bound sub xor jg rcrb stc lds ror not leave stc les jle lret gs das push cmp add mov std movsl mov enter (bad) clc iret enter not into stc les data16 sub add add lds popl stos test stos test mov stc les int3 (bad) enter cltd cmp add add fwait fwait jmp xchg fwait fwait (bad) cltd cltd cld stos test lods stos sti mov sti mov cli mov stc sarl pusha push aas xor add fidivl jp lock lea mov std cmpsl movsl cld stos test lods stos sti mov sti mov fisubl les fidivl je aam imul (bad) outsl imul jo test pushf (bad) mov std cmpsl movsl (bad) (bad) outsb es outsb es outsb es outsb es outsb es outsb es outsb es inc (bad) jo lock cwtl cwtl lcall iret xchg (bad) pusha idivl idivl idivl cwtl outsl dec (bad) jbe loopne jns mov (bad) (bad) notl add add popf (bad) roll jmp inc jmp pop jmp pop jmp pop mov imul gs jl addb (bad) add je fisttpll lea loopne cmp lea int3 ja js push int3 gs xlat jno into test add add xchg jge jae fildl fldl cmpl test add enter mov mov lds (bad) aas add clc pop add lock add add add add add add add add add add add pop add clc incl add incl add jae insb gs jae jae add add add leave sldt mov add incl push add add or inc js insb jne gs add adc add sub add incl dec add add or inc push outsl data16 or or push add insl add jae jae outsl add push add add add sbb add popa jae outsl xor and add add add add or push jne jne je popa jb add add sti or push jb jo outsl jae push adc add add or push popa je jb outsl jne add add add jae jae imul cmp or add incl sub add add outsl je imul cltd add add push pushw or add bound je arpl adc add add add push or inc insb insb jne gs outsb je add add or push add popa add add outsl add adc add add add add sbb add popa insb popa imul sbb add add add add or add gs gs push add add popa jae jne xor add xchg or incl sub add or add imul xor push add add insl gs add mov add add add or dec popa jb imul add pop add jb jns xor add push sbb push adc add add add adc add popa jo gs add adc adc adc add add jb arpl jb imul cmp adc add add add add sbb add fs jb gs add add and add add add add or js jb arpl insb jns add add or adc adc or add add add add or inc jo insb popa je jb xor sldt or add incl and add adc je jae outsl jb gs or adc push je fiaddl adc add add pop add insb popaw jb add or push arpl outsl insl popa je arpl add subps add add add imul jne add or push jne popa imul insl imul add add pop adc add add add add or inc gs insb insb imul rorb rclb adc or add insl xor adc add add add sbb add arpl aaa add add adc add add adc add add add add sbb push add add add add add or inc outsb imul add adc mov or incl and add sbb add insl jo gs insb je ja add pop das add add clts add incl dec add add outsb fs add dec add or push add imul outsl add xor adc add add add add sbb add imul add and add add add push or push gs gs outsb xor add or dec gs jb add scas add push adc add add add add or push outsb je ja insb imul shrd add incl sub add and add insl popa insb outsb gs xor pop add jl and or add outsb popa gs add adc incl daa add add jb xor or adc adc add or push popa outsb imul add add add add push add popa insb jne add outsl popa outsb imul rclb push test movlps incl sub add sub add bound fs push jne data16 cmp in adc adc add add push add jo xor add or push jne jae insb jbe outsb add pop or add add or inc gs popa outsb outsb add add push jp mov xor or add gs jb outsb je xor adc add add add add outsl bound outsl insl gs add add cmpsb pop pusha adc add add add cs add gs add add adc add add add add add pop add gs add or dec outsl jne je outsb addr16 add xchg adc add add add or inc push gs adc or or sbb incl sub add xor add insb imul add add gs insb imul pop add test adc add add or inc popa jne popa jae imul adc or incl push add add or inc popa insb popa outsb arpl insb add pop jae add or add and add xor add jb bound jae popa xor or scas add adc or incl sbb add xor jb add add add aas adc and incl sbb pop add je jb outsb add add or or and incl and add cmp add bound push outsb outsl imul fist or and incl sub add cmp add outsl outsb arpl je jae add pop cs push pop add imul and add add pop add insb imul or push popa insl jae popa insb xor add cmp call incl pop add add or dec outsb jae outsb jne je outsb add pop add push add incl sbb or push jns push aaa add pop cmp add or add incl and add inc or inc gs je bound je add add add loope into add sub incl sub or push jb insb insb imul mov add adc or push jo outsb outsl jae insb jns add sub incl sub push add jb jae add add popa outsb outsl insb gs imul repz add test adc add add add add add addr16 imul add add add add or sub incl daa add add add jae jae add pop add jb outsl insb add add push pop add pop adc incl sub or inc popa jb popa outsb imul add jo imul add je sbb add add add add outsl insb outsl xor push add add addr16 gs add testl add add add add push gs gs gs imul and call push arpl imul das add add add add add jb outsl insb fs push add add outsb fs gs add and stc add xor incl sub add dec or push outsl jne push add add add jb insb gs lahf adc adc xor incl add add add jo imul inc or push or or dec gs push js aaa add xor incl add add add popa jae imul push add add outsb data16 outsb je add sbb sbb adc add add add push or push gs imul and or add pop adc add add add add push add add add sbb gs add and add add add add add insb outsb outsl jae gs imul add je outsb popa jne add adc xor add add pop add gs gs add add push inc adc add and add or add jne je add add add or add push mov add incl daa add add or push jne jb je jae add add and add add push lods adc add add add add or inc gs imul add pcmpgtb (bad) or adc add add add jb insl jns outsl jne cmp sbb inc or fmull aas adc add or dec outsl outsb jo outsl je imul or or adc add add add or push gs imul add add add mov add add sbb add jbe insb jne insb jns sbb pusha adc adc cmpsb pop incl sub add sbb add ja jb jo push add add imul les pop add adc add add or inc fs add or add add add add push add push add or dec outsl outsb insl outsl jne push pop std or movlps add add add and add jae jne imul pop xchg mov add add and add jae ja outsl cmp sbb push add or add add add or push gs je outsb xor add pop add insb insb imul xchg adc or adc incl daa add add or push jne imul insb jns pop add add add add add add mov add incl xor add sub add bound fs insl outsb je add add inc insb outsl bound imul add or mov adc add add add add or push jb jbe insb gs add add inc bound je outsb je outsl outsb outsl add pop push fadds adc add add add add push add ja jb add add add jb jne popa outsb imul stc push or or and incl sub add cmp add gs insl outsl outsb addr16 add add xchg add add push movsb add sub add cmp arpl popa insl xor add or dec imul add push or or daa add add add add add jb outsb popa insb add add add adc add add add add jne je jb popa insb insb jns push add adc mov incl and add inc add insb jae pop add add add add add push sub add add add add add insb imul add add add add add add push jl add incl push add add add insl jo outsl insl imul adc lock or add add add jb imul add or push jne jne bound imul aam xchg or xor incl sbb add push or push je popa addr16 gs push add adc or add add add add jb push gs add add add add sldt add push jecxz add incl add add add add inc add (bad) (bad) incl add add das inc add add add das inc add das inc add das inc add add add add add enter (bad) (bad) (bad) incl add add das inc add add add das inc add das inc add das inc add add add call xor dec lcall (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add inc add (bad) (bad) incl add add inc add (bad) (bad) incl add add inc add inc add inc add inc add inc add inc add popl or inc add sub add inc add inc add sub add popl or inc add sub inc add inc add sub inc add inc add inc add inc add inc add add inc add inc add inc add inc add sub inc add inc add cs add add inc add inc add inc add inc add inc add int3 int3 int3 jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov push mov mov call push push push mov movl movl movl movl movl mov lea call movl mov push lea push call push call call mov push lea push call lea call movl mov push lea push call push call call mov push lea push call lea call movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov movl mov mov movl lea lea call movl push call movl movl movl lea lea call movl movl movl lea lea call movl movl movl mov lea call lea push lea push lea push push call mov lea call movl movl movl mov lea call lea push lea push lea push push call mov lea call movl push lea push call lea push call mov mov call lea call movl mov add jo mov movl mov cltd idivl mov xor mov mov mov movl mov and jns dec or inc xor mov movl cmpl je jmp movl lea push lea push lea push call mov lea call movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl movl call movl movl movl cmpl jne push push call movl jmp movl lea push lea push lea push call push mov mov push push call add lea call movl lea mov movl lea push call cmp je jmp movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl push push mov push lea push call add push call mov lea call lea call movl push mov push call mov lea call movl lea push call lea push push push push lea push call lea push call mov lea call lea push lea push push call add movl fldl call mov movl push push lea push push lea push call lea lea call movl movl movl lea push call mov lea call lea call movl mov push push call test jne movl mov lea call movl mov call push lea push call lea push call mov lea call lea call movl movw movl movl movl movl movl lea push lea push push push push push push push call fstpl lea push lea push push call add movl lea push call lea push call mov lea call lea call movl mov push mov push push call movl mov mov movl lea push call lea push lea push call mov lea call movswl test je movl mov lea call movl movl movl or test je movl fildl fstpl fldl faddl fnstsw test jne call mov movl mov cltd and add sar mov movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov movl lea lea call movl mov push mov push call mov call mov mov movl call push lea push call mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl xor cmpl setne neg mov lea call movswl test je movl call push lea push call mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call lea call movl movl movl mov lea call lea push lea push lea push push call lea call movl cmpl jne push push call movl jmp movl mov mov push lea push call movl push push mov push call add fwait push jmp lea call lea call lea push lea push push call add ret lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call ret mov mov pop pop pop mov pop ret jmp call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov push mov sub push push push mov movl mov xor lea xor rep lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push lea mov mov push lea lea push push mov call mov mov lea call mov push push call mov lea call push push lea push lea push push call mov lea call push call lea lea mov movl call lea lea push lea push push push call lea lea push push push call add push jmp lea lea push lea push push push call lea lea push lea push push push call add ret mov lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call ret mov pop pop mov pop mov pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov lea xor push mov mov mov mov mov mov mov mov mov mov mov mov call mov mov push push call mov lea push mov call mov push push call mov lea add lea push push push push push push mov push jo push mov mov mov mov mov call lea lea push push push fstp call mov mov add push push push call mov call push lea push call lea push call mov lea call mov lea call mov push call push fstp call fldl call lea lea push push lea push push movl mov call lea lea call lea call lea lea push push mov mov call push lea lea push push call push call fwait push jmp lea lea push push push call add ret mov lea call mov lea call lea call lea call lea call lea call lea call lea call lea call ret mov mov pop pop mov pop mov pop ret call nop nop nop nop nop nop nop nop nop nop sahf sahf sahf sahf cmp pop add (bad) (bad) (bad) (bad) (bad) (bad) decl add lcall add add add pop add outsb pop add outsb pop add outsb pop add outsl pop add outsl pop add outsl pop add pop add pop add outsl pop add add outsl pop add outsl pop add outsl pop add outsl pop add outsl pop add outsl pop add add adc add add andb pop add pop add pop add pop add add andb add add jo add jo add jo add jo add jo add add addb add jno add jno add jno add add pop add jno add pop add add addb pop add jno add jno add jno add add sub pop add add or add jb add jb add pop add add pop add add add mov add xchg jb add add andb pop add add addb add dec push push inc push dec xor inc dec dec add push add dec arpl add mov pop popa fs data16 popa outsb add js pop pop jbe popa push popa jb outsl jbe add mov pop pop jbe popa inc jb gs popa jb add pop pop jbe popa push je push popa jb outsl jbe add bound jb gs popa jb imul pop pop jbe popa push popa jb imul popa fs imul xor mov pop popa fs data16 gs xor xor pop pop jbe popa push je inc popa je out add jbe popa dec jae je imul add jbe popa push gs jns je insl inc jb outsl jb rolb pop jbe popa dec jb jae insb je push bound add add jbe popa dec outsb push popa jb test pop popa fs imul xor add pop pop jbe popa dec outsb inc jb outsl jb add add jbe popa dec bound gs cmpsl add fs imul imul pop jbe popa dec bound gs fs data16 pop imul xor imul jbe popa push gs popa jb jb add push add dec jae outsb add outsl add jbe popa inc push add bound jns popa jb add add inc dec push pop push dec dec dec pop inc fs data16 pop pop jbe popa push je inc insl jo xchg add jbe popa push popa jb jae inc jno push add jbe popa push jb outsb je bound or inc insb insb inc jne arpl outsb inc popa insb insb add add jbe popa dec bound outsb add push data16 je outsb add add jbe popa dec popa je dec fs popa insb insb dec add dec push pop push dec dec dec pop push gs gs jae add dec add jbe popa push dec xor add push add dec jae jb add inc push inc dec push pop push dec dec dec pop push jne jb dec outsb je jb popa arpl mov pop pop jbe popa inc js gs dec popa outsb fs gs add pop pop jbe popa push je push outsl push outsb imul add fs data16 gs add scas add fs imul ss add bound push inc js gs imul pop pop jbe popa push bound outsb add pop inc dec insb outsl add lea pop pop jbe popa inc jb outsl jb jbe jb insb outsl ja add add jbe popa dec gs add push imul xor add push imul xor imul jbe popa push je inc outsl jo add mov pop pop jbe popa inc jb gs je dec imul pop popa fs imul xor add stos add fs imul iret add jbe popa dec xor popa jb add pop pop jbe popa push popa jb fs add jbe popa dec popa je dec gs inc popa insb insb add inc add jbe popa push je push outsl inc outsb jae add pop add jbe popa push popa jb outsl jo add test bound jo xor fild pop pop jbe popa dec popa je dec gs inc popa insb insb dec add push add dec popa je outsb add add jbe popa push je dec outsl jbe add sbb pop pop jbe popa push cmp je xor add insl jne add pop inc dec je outsb add push add dec gs add scas add jbe popa inc jb gs je add lods add jbe popa inc jb gs bound add 