test or data16 or data16 push xor sub push data16 adc add inc or data16 or je or popfw dec push pushw push data16 lahf or data16 pcmpgtd xchg pcmpgtd push data16 push ljmpw fwait or lahf sbb xchg xchg push data16 push test data16 mov pcmpgtd fwait or xchg xchg pcmpgtd jbe data16 data16 mov pcmpgtd jne mov sub data16 mov pcmpgtd add dec insb push add outsb add test data16 or data16 retw mov dec mov dec mov pcmpgtd insb push data16 in out push inc xchg pcmpgtd fisttpll data16 imul scas lahf or add add add add add xchg dec add xchg dec add add add add xchg dec add add add adc int3 add add xchg dec add dec add add xchg dec add dec add cwtl dec add cwtl dec add cwtl dec add cwtl dec add dec add cltd dec add lcall mov dec add lcall cmp dec add fwait dec add fwait dec add pushf dec add dec add dec add pushf dec add pushf dec add popf dec add popf dec add dec add dec add popf dec add sahf dec add dec add sahf dec add sahf dec add lahf dec add dec add dec add lahf dec add lahf dec add mov dec add dec add mov dec add mov dec add dec add dec add mov dec add dec add dec add mov dec add mov dec add dec add mov dec add movsb dec add add dec add movsb dec add movsb dec add movsl dec add dec add dec add dec add movsl dec add cmpsb dec add dec add cmpsb dec add cmpsb dec add cmpsl dec add dec add dec add cmpsl dec add cmpsl dec add test add add dec add test add test dec add dec add test dec add stos dec add stos dec add stos dec add stos dec add dec add stos dec add dec add stos dec add stos dec add lods dec add lods dec add add lods dec add lods dec add lods dec add lods dec add dec add lods dec add lods dec add scas dec add scas dec add scas dec add scas dec add dec add scas dec add dec add scas dec add scas dec add mov add mov add add mov add mov add mov add mov add dec add mov add mov add mov add mov add mov add mov add dec add mov add dec add mov add mov add mov add dec add add mov add mov add mov add mov add dec add mov add mov add mov add mov add mov add mov add mov add mov add mov add dec add dec add dec add dec add dec add dec add mov add mov add mov dec add dec add pop repz jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp add push call add add add xor add inc add add add add mov and add add add add dec jns gs outsl insb jne add add add add add add add inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add and add add add add xchg add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add inc add add add cmp add mov add add inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add pop inc add dec add add add cmp add add add push inc add add add and add add add inc add add add inc add add add add add add add add and pop add add add add inc add add add inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add rorb add add inc add inc add add add add add mov fwait add add add add add xor add or or add add add xchg dec add sbb and xor and (bad) decl add add add add add add add add inc add inc add inc add add addl add mov add inc gs gs xor dec outsl outsb gs imul jns gs outsl insb jne add add add sbb dec pop jmp mov mov push repz dec dec addb add add add add test inc add add add mov fidivl movsl sbb lea pop add add arpl add add add sub pushf add add add add inc add add add (bad) (bad) incl add add rorb add add xchg add add add inc add add add and add add cmp inc add add add add add add inc add add add add add add add add add add inc add and inc add add add cwtl and (bad) (bad) (bad) incl add add add add add lcall (bad) (bad) incl add add add sbb ficom inc add adc add hlt add add inc add add add xchg dec add mov add or dec add inc add rorb add add push inc add add add add add inc add add add dec add (bad) (bad) incl add add inc add rorb add add xchg add add add add fsubs inc add add add add mov add add add add mov push sbb dec add add add mov add and inc add add add or inc add add add add lcall add add pop add add add (bad) (bad) incl add add add add lcall (bad) (bad) incl (bad) cmp add mov inc add add add inc add lcall add add adc inc add add and add add movsb push inc add and add add add add mov sbb add adc inc add adc add in inc add inc add adc inc add adc add or inc add inc add adc inc add adc add xor inc add inc add adc inc add adc add mov dec add xchg dec add (bad) (bad) incl add add jl outsl lods mov jns (bad) rol add add add add inc add add or add add add add add inc add (bad) (bad) jmp and js inc add add add cmp add add add sbb (bad) (bad) (bad) pushl and test inc add add add xchg add incl add add add pop inc add (bad) (bad) (bad) cld and add add add rorb add add add add add (bad) incl add addb add add mov (bad) (bad) (bad) js inc add add add dec add add add add add add add incl add addb add add dec push inc add (bad) (bad) (bad) js inc add add add add add add add add add incl add addb add add adcb add (bad) (bad) (bad) js inc add add add add add add add add (bad) incl add addb add add dec jne insb imul dec push xor dec imul add add inc popa bound gs push je insb outsb gs add add jae outsb jae je jbe add add dec jns gs outsl insb jne gs push add dec mov aad repz cld xchg pop enter (bad) dec test loopne mov (bad) rcrl dec pop jmp mov mov push repz dec dec adc mov inc or jns jmp cltd iretw adc pusha rcll insb xor add cmp push add xor inc cmp outsl addr16 insl and insb gs sub sub arpl jae data16 push imul je imul pop push inc ss dec inc add add and inc add add add add add add add and insb and clc les mov dec lods xor or stos add xchg inc outsl jb add add cli dec lods xor or stos add xchg inc jns outsl arpl insl add add dec lods xor or stos add xchg dec popa outsb gs add or dec add jecxz repnz jb mov jmp and push and xchg out dec sti sub fidivl movsl sbb lea pop fmul dec ja push hlt dec (bad) movsb jae popa lcall or add imul gs xor add add adc gs outsl outsb jae insb gs jne jae jb outsb outsw add add inc and push and add add cld les mov or je jmp push mov call jmp add add add add gs xor add add add jae outsl insl inc jo add add and add add or dec add or je jmp push mov call jmp add add add add je jo outsb inc insb imul push imul mov and add add adc dec add or je jmp push mov call jmp add add add add je jb outsl jb je inc insb popa jae add add adc add push add jo popa add jae add add add add add mov inc and inc and add add and dec add or je jmp push mov call jmp add add add inc outsb jne push imul mov and add add sub dec add or je jmp push mov call jmp add add add jne gs outsb jbe fs insb add add add je jae jb jb imul arpl jns add add lock add add add cmp dec add or je jmp push mov call jmp add add add add jbe jo xor add add adc add dec jo outsb push jb arpl jae outsl imul add add add add add inc lds mov or je jmp push mov call jmp add add add add je jb imul jb arpl jns add add and mov inc add add push lds mov or je jmp push mov call jmp add add cmp add add add add add add add add add movsl push add add add add add add add add add add add jo add jae outsl add aaa add add add add add jns insl add outsb add jo push add insl add add arpl imul add insb add jb add push add outsl add add add push inc inc ss dec dec add add pop pop jbe popa inc jb outsl jb jbe jb insb outsl ja add jbe popa dec bound popa jb pop pop jbe popa dec popa je dec gs inc popa insb insb add add pop pop jbe popa push popa jb gs bound fs data16 add pop pop jbe popa push gs jns je insl inc jb outsl jb pop pop jbe popa inc jns xor add pop pop jbe popa dec xor jns add pop pop jbe popa dec popa je dec gs inc popa insb insb dec add pop pop jbe popa push popa jb jae dec add add jbe popa push je inc insl jo pop pop jbe popa inc jb gs popa jb imul add add pop pop jbe popa dec bound gs fs data16 add jbe popa inc jo insl jo jns add add jbe popa inc jb gs bound add add jbe popa dec bound gs pop pop jbe popa dec gs add add jbe popa inc jns xor add pop pop jbe popa inc jns fs pop pop jbe popa inc outsb add add pop pop jbe popa push popa jb outsl jbe add add pop pop jbe popa inc jb gs je dec imul pop pop jbe popa dec jb jae insb je push bound add add jbe popa dec outsb inc jb outsl jb add add jbe popa dec outsb push je inc add jbe popa inc jb gs je add add pop pop jbe popa inc jb gs popa jb add add jbe popa push je push popa jb outsl jbe add jbe popa push je dec outsl jbe add add pop pop jbe popa push je inc outsl jo add add or or dec xor add dec pop jmp mov mov push repz dec dec stc push add dec mov aad repz cld cmp xor or stos add xchg cld add add add add add js imul or push jne arpl imul add inc add add (bad) (bad) (bad) jmp add bound bound popa insb xor xor in add repz add out sldt inc add incl push add add or inc jns outsl arpl insl add add adc or or dec add add add imul xor adc add add add add sbb add insb gs fs sbb add add add add add push add outsb gs add popa jb popa add lds repnz paddsw adc add add add add push add gs xor add push add gs xor add leave add add add add dec xor add inc outsl dec movsl sbb lea pop fsub loop mov jb mov jmp and dec lods xor or stos add xchg or add pop add imul or inc popa insb arpl jb jo jns sbb add and or insb je add or add push or add add add add add add add add add add add add add add or jge jmp (bad) jb mov and out cmp push pop xchg xlat andl imul mull adc outsb imul jle lret adc or imul mov mov test mov cmp jno loop xchg pop or ror movsl pop jne xchg cmc in cmp mov movsb or push insb jo xchg mov push adc jl popf sahf pmulhuw sbb in push adc sahf gs div or test rcrl and ljmp mov movsb push outsb or adc xor ss repnz mov jno data16 addr16 mov cld fistpll sbb in xor adc adc test mov inc inc mov mov jne fidivl mov jbe aam mov jne enter jp (bad) loopne add cmpsl jg cmp jae ss loop xlat fistpl cwtl push sbb adc sub dec or leave mov cmp andb dec popf lds adc push cld insb and cmpsb mov dec xchg lahf pushf xchg cmp cltd lret jl jle push and mov outsl outsb out pop pop loope mov mov xchg daa ret bound or pop notl popf jne xor inc sub sti fcomps das mov mov push and inc cwtl gs inc xor cmp inc xlat addr16 mov enter sub dec jmp out or jge dec sub loop mov pop adc xchg jmp popl sahf push ljmp inc bound mov mov pop sbb xchg lods cmp sub int aas jae or scas lea cmpsl roll repnz mov mul pop sbb fnop push (bad) mov dec mov lcall cmp sub int xchg mov ret loopne pop jo insb push mov cmp arpl inc mov js dec jne push mov sub fidivl insb adc jne adc mov add xchg dec cmpsb xor daa fldcw out aad sarb pop mov test inc fimull movsl and iret inc rorl jge jns (bad) repz xchg test (bad) cwtl mov sbb mov sbb repnz push ds scas xor lahf cmp xchg arpl mov into aam push std and and mov (bad) movsl loop arpl popf std adc fcmovbe stos pop ljmp ja loop pop jg mov and cli or gs push jmp aas fisub cmpsl dec rcr cmp sbb push call and mov pop out dec inc xchg insb push in pusha neg out adc or adc lods inc jne (bad) pop sbb cmp (bad) aam sub cmp xchg lret mov addr16 shll dec adc adc jmp in jge ror je loopne sub sub sbb fstp xor lea adc sbb mov cmpsb mov xlat test jg or ljmp ret dec incb inc insl pusha in mov cmp xor xchg lock fsubp ja push imul (bad) in je and jmp sbb adc mov mov insl addl inc leave ret sbb or jne mov sti jbe in fs call sub cs dec jno dec xor vpunpckhwd pop push (bad) shlb mov xor cmp dec sbb inc ss mov and sub dec lahf nop or cmp hlt jge dec mov inc mov outsb int3 ffreep pop pop pop std iret enter mov repz cmp mov jmp cmpl test scas add pop and insl pop mov inc sub les arpl out ret jmp mov fimull or sbb add scas add xor add push fdivrs sub lods dec push mov sub xchg and dec subl pop sub imul pop xchg push cmpsb cwtl adc mov sar ljmp xchg in shl lret push push (bad) iret lock jp lcall test movsb mov lahf jnp jo jb mov in js or les mov cmp fbld (bad) aad sbb mov and lret dec std xchg imul fsub lods mov fmulp int ret add gs cs dec push (bad) mov repz jo call mov cld jecxz xchg cmp rorl sbb ss add movsl (bad) adc lcall dec in xor xlat bswap adc mov into inc call dec bound xchg (bad) mov cmp xchg xchg sbb pop cmp xor and mov push push fadds enter xchg aas mov cwtl sub movsl push sbb adc movsb mov test in push out xlat loop sahf mov xor roll xor and out sub call and sbb imul popl lods dec xor es out cmp test and roll jb inc pop adc cmp loope sarb jne push cs lret pop mov repz mov add cmp jns dec inc mov inc push bound pop pop xorl push ret inc (bad) clc mov jge inc xor dec sbb mov xchg lcall mov cwtl imul xchg lcall mov jp int3 sbb jg lret xchg test (bad) lods es sahf adc adc and and ds sub mov dec mov fs jecxz call dec mul sbb inc lret insb aam rorb sbb push inc mov movsb cs std cmp sub pop jge jae or lds arpl jmp add cltd add and mov jns jne ret fisubl sahf dec adc mov ja push jns jecxz lahf imul xchg call dec and pop ss mov push lret (bad) pop cmpsb sti outsl or lock add daa adc sub push out xor fsubrs shrb fist stos cmpsl dec sub call mulb outsl xchg cmp (bad) and (bad) sti mov repnz mov repz dec fnstsw xor leave jne aas cmp loope add test sti clc adc or pop pop jecxz fcomp fiaddl sbb push inc or lret mov inc dec or hlt test sbb sub adc sub aam push out xlat sahf jnp jo xor sarl or and in push call movsb nop aad jmp pop in mov mov lcall jmp pop xchg and es out cmp leave xor push push (bad) dec je in adc inc jp sarb cmp jmp push cmp jnp lahf mov repz sbb jp adc loope and outsb fdivs sbb mov cmc ljmp inc pushf pushf pop mov adc pop fiadd add push and cwtl pop popa pop xor enter mov fidivl bound sub inc mov lock or cli movl push cmpsl dec fcomps jge call and dec add push out sti pusha xchg and sub icebp cmp mov es test xor adc adc sbb cmp call cmp xor into pop mov cmc add int3 stos sbb mov test adc mov js sub xor jge ficompl sbb sahf or mov mov ja push xor and push call dec and pop ss mov push lret xor jns inc jecxz and pop shlb into pop pop sub push mov test mov fist mov mov (bad) xchg xchg repz fistl add icebp sub push mov scas push mov and imul enter dec fs pusha inc lods pop repz xor push dec iret cmp imul movsb xchg cmp fbld jp movsl ss aam sbb and dec std dec imul fnsetpm(287 stos mov fmulp mov cwtl out (bad) cld jl add outsb out pusha aad adc (bad) popf inc jecxz add test push fisubrl jo loop movsl lods stos push xor xchg inc or xchg xchg lcall cmp adc jp xchg mov or cli push lock sbb xor mov mov lds ret mov cmpsl aam leave pop jmp mov ja adc arpl pop lret jae mov pop inc or inc fstl mov test or scas shll hlt gs outsl cmp inc addl jno test mov jb dec xor cmp adc sub loopne dec fstps xchg sbb outsb mov insl sub dec or mov cmc cmp or dec fildll popf les ret mov xor into lea mov cli cmp mov aaa (bad) sahf xchg jge loop cmp sub ret mov jle cwtl mov adc mov incb cli aam movsb xor and mov mov lahf sbb mov (bad) and stos (bad) int3 int adc addr16 jl ja ret rorb icebp add push arpl cmc adcl pop and mov aad push and data16 std dec mov mov cld mov fcoml iret mov leave je sbb (bad) adc add je dec mov gs mov cs inc sub int jge hlt sbb pop dec cmpsb popa dec mov inc (bad) in xrelease js inc cs jp sbb dec sti ret cwtl dec push bound and lret icebp stc rcrl repz push fcom sub iret inc ficomp sub test les jae outsb idiv movl pop addb sbb insl rorl mov pop add int out adc xor popa in jge out push jmp cmp and imul ret xchg sbb xchg es popa xor js push notb pushf je in add mov xlat mov into imul jo dec aam and or inc xchg gs inc xor aaa addb sbb inc (bad) data16 mov mov dec jmp and enter pop jg push push (bad) mov pop adc add movb test mov mov push sbb dec jo (bad) mov (bad) mov dec dec icebp rcrb stos adc inc push loop stos inc cmp (bad) jae in ficompl bnd lea pop jmp cmc out adc fdivrs mov (bad) jns stos adc xchg mov xchg iret sub jecxz add pop cli inc imul clc mov sub js je rcrb and sub mov jae inc and pop fadds in add sbb fimul pop js lea add mov fidiv popa je repnz ret xchg test push mov and or jne shrl std mov or cmp enter pushf adc push xchg inc addr16 fiaddl out and add mov lods or sub mov es rcll (bad) lret sub pusha sbb clc dec pop mov aas sub xor adc push sbb gs rclb sti (bad) jne arpl mov pop jo out fwait lea or lods fdivl ret jg mov cmp push mov ffreep aam sbb ss pop imul mov xor nop les sbb jne adc mov mulb dec cwtl add xor daa jl mov rclb shrb in (bad) sbb mov fisubrl sub popf shr imul xor jno jmp fwait push aas mov int3 lcall adc and aaa or stos leave lock out mov cmc mov out (bad) and fbstp xchg pop cmp das xor sahf nop jle out jne (bad) push insb fistpll movb and cltd packsswb xchg fwait fs xlat jge movsb hlt sbb movsb mov mov push or sarl loop add push mov ret lock cmp movsl pop xchg push (bad) sbb and sbb lods mov (bad) xchg jae in lock nop ja inc and sbb mov imul lcall lea or cmp push push push pop push out mov xlat jnp jle cmp in and adc in push inc xor mov pop xchg lods jp sbb enter dec ret inc dec pop xchg jl xor push jmp xchg test (bad) cltd mov mov fstp (bad) pusha out jnp movsl fadd ja mov sub mov lret test loope sbb inc lods sub cmp push or pushf or gs movsl mov ret aas cmp push dec aaa fwait dec daa imul inc cmp mov pop mov jo push dec sti mov mov es push loope and xchg mov cmpsb pop mov sbbb call fwait js insl mov fcmovne mov push push in push mov loope xchg xchg mov (bad) push or out (bad) pop stos rcrb cli lret jb fnstsw sub cld and mov push inc icebp idivb sbb int jae push mov inc imul fiadd std and in sub jbe adc adc data16 cli into orb pop lds push idivl pop sbb sbb int3 dec mov inc mov mov inc adc push push cld ret lds mov fildll or jp mov pop arpl mov imul lahf clc add push nop xchg add push sub inc xchg cmp mov aad dec adc adc cmp pop pop stc (bad) dec or (bad) ja jecxz xor mov push push mov shr loop in mov sarl mov jbe gs imulb lods (bad) dec out pop lea xor or pop movsl leave jle std push adc outsb out mov repz sub fisttpll repnz push test mov std sbb mov jae stos xchg cmp sarb pop sbb push dec cmpsl cmc dec mov add fnstcw inc ljmp pop mov (bad) mov vpandn test xchg sti das jp jg dec xchg arpl mov pop fsubl clc add addr16 mov pushf nop xchg out push push lret cmp sub aad mov daa or adc pop mov sbbb call fwait ja insb mov fcmovne push mov shr loop add push in jl and jbe adc sahf gs xchg xchg aaa jmp mov cwtl je imul pop jecxz aaa test dec jmp adc test nop lods or mov aaa inc jmp adc sub testl mov fsubs mov push ds scas xor lahf cmp xchg arpl jne loopne pop into xchg lret and and inc mov (bad) movsl sahf shrb mov fistl out pusha ja jae mov inc inc imul mov jge jb xchg xor jo loope movsb or push or mov cs xchg and cmp mov sub pop jp xchg adc xchg shl xor std cwtl sbb mov les pop mov subb add hlt fwait cmp push jle pop inc xlat mov lea insl cld add mov popf pop jecxz inc xchg mov add and js mov int mov sti sbb mov bound cmp fwait xlat test ret xor int3 ficom ljmp pop jno xchg inc inc mov mov jne fidivl mov jbe xchg scas ja cwtl ljmp stc repnz sbbl fdivl mov sahf jge xchg adc mov lahf adc add (bad) lds or pop (bad) je outsl clc mov sahf or dec pop inc (bad) in jns outsb and xorb call mov mov push jmp cmp and (bad) or xchg push mov push aam out or lods (bad) sub shlb repz lret (bad) je in ss xorl cltd dec dec (bad) mov xchg mov sarl jo repnz fs loop call jmp inc insb repz or dec sahf jbe xor push cs fnstcw xor ficoml or sbb and inc add rcrl cmp and xchg mov adc mov test dec push mov sub push and dec cmp dec mov pusha je pop push push cmpsb cwtl adc mov ret ljmp xchg in aam lret push push (bad) iret lods sbb or test movsb mov pop cmp jae mov in js lds les bound cmp loopne dec jnp movsl aaa (bad) aad sbb and dec decb or mov hlt fsub lods mov (bad) mov ret adc jb or mov mov icebp aaa ds test and inc fstpt adc mov lods mov pop mov cs daa out test jecxz xchg mov bound test pop fsts pushf add fild jmp loope js sbb xchg (bad) mov and xor mov mov xchg add (bad) pand mov push repnz dec fucomp dec xor push mov enter cmpsb pop in les push mov jecxz fsubs pushf dec cmp sub pop mov jno cmovge push lret call ds push mov daa (bad) dec loop shl int3 arpl xor (bad) imull popa (bad) nop mov pop mov pop movsb int3 testb test rclb enter ret insl xchg adc stos cmp imul sti sbbb push sub push mov std inc repnz bound mov xor mov in rclb cmpsb daa into inc pop sub push mov outsb int adc lea ja addr16 sub popa xchg push rolb out mov lret ss out xsave and test out mov repz roll fnstsw mov pop jle cwtl adc adc add (bad) sbb inc xchg pusha leave add (bad) pop ljmp jp inc and jno,pt or fxch sbb data16 add cmp ficom insl cmp pop mov push aad out push (bad) stos cmp imul sti xchg adcb push pop and fdiv divb mov xor mov addr16 pop shlb into pop pop sub push mov stos int xor lea fist addr16 sub popa xchg inc rolb out mov test lret ss and and test insb mov out mov roll fnstsw mov int3 jle scas adc cwtl xchg mov pushf aam movsb roll (bad) sbb inc xchg jne leave mov mov mov clc (bad) pop in loopne cs pop push lret mov movsb insb dec imul add test and aad jae jo mov dec test jb mov out sub push xor jg and pop push ret cld or xor aaa fnstsw and xchg sbb mov imul inc add ds scas cmp and dec cltd sub sarb insl dec lods mov pop push push aas mov sub dec inc (bad) xor popa nop push stos js push push add pushf mov mov pop jmp cltd gs fcmovnbe push jle lahf (bad) mov sbb test xchg pop cmp xor mov ja lret loope sti leave test cmpsl pop test gs xchg popf stos in fnstcw cmpsb cmp cmp pop sub add shrd lea jecxz (bad) inc (bad) lock xor rcrl mov je in bound out mov mov shr (bad) mov dec jo ret jo cmp ret cld pop outsl mov mov frstor rcl sbb mov insb daa adc les jne cmp and or dec adc pop adc mov lret insl inc pop mov das push and mov mov popa nop sub js push push push (bad) pushf push out mov add mov into cltd jmp push jle (bad) mov sbb inc (bad) xchg xchg cmp test hlt pop xchg xorb ja lret loope mov test and push pop push xchg inc stos in fnstcw cmpsb cmp sub pop sub add shrd outsb call loopne mov roll imul dec sbb bound out in xor mov sbb dec jo ret jo cmp ret cld pop push mov outsl dec xor add mov xor ficom sbbl imul inc add ds scas cmp or dec cltd rolb mov lret insl dec pop mov das push push sub mov xor inc mov ret xor and or lods or inc ds in mov (bad) xor push lret leave loopne fadd sub stos rol dec mov mov std mov cld ficomp int and mov notl mov pop ljmp add and jp in pop xor add imul xchg loope stos inc les loopne in or sbb das lods (bad) (bad) jl mov and or outsb daa or mov dec fucom jecxz push loopne jg (bad) mov lret sarb jo pop and dec mov mov int hlt inc aam inc sub shrb das xchg add pop ds scas jecxz aaa xor std inc das xchg inc pop arpl push aas xor lods and addb pop push inc hlt mov jns jle dec out push cmp fldcw fstpt lret les outsb stc (bad) out mov pushf add bound test sbb int imul lahf pop imul fldl cs sub push pop jbe adc in ljmp out xchg hlt pop insl xchg jnp or or cld xchg inc mov jmp std jb ss shll mov cmpl ret push add es pop popa mov fsubl mov pop lret dec mov das icebp (bad) mov mov mov pop stc les (bad) and jmp mov mov out lods sbb fisttpll inc xor jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp sbb fwait mov sub (bad) (bad) cmc lret and push mov imul dec pop insb inc mov dec scas cmp enter lock fisubr mov jne test mov and or jae shl mov dec out test mov insb mov xchg (bad) int3 test or xor mov xor lret lods iret mov int das mov add fidiv (bad) enter xor cmpsb mov mov sbb jne out dec ret inc insb and sbb push inc mov fwait mov mov jle es xor jne or add mov dec scas cmp enter lock push fildll jae xor xchg inc jae aad jmp mov mov pop aas iret fdivrs negb ljmp pop fstl push dec pushf mov xchg cvtps2pd in fidivrl mov inc inc (bad) icebp aas mov add adc stc push add fsin push xor (bad) and leave jmp mov stos into pop mov mov fbld sbb push inc mov fwait mov mov jle daa mov int xor sub sub add dec pop insb inc mov dec scas cmp enter lock fisubr arpl dec cmpsb xchg pop jae lds mov pop ds fdivrs fsubrs inc mov (bad) enter push pop sahf mov push or lcall ret inc inc (bad) icebp das cltd sbb popf mull cmp fsin push xor (bad) and leave jmp mov stos into pop mov add add mov fbld sbb push inc mov fwait mov mov jle daa mov int xor sub sub add dec pop insb inc mov dec scas cmp enter lock fisubr arpl dec cmpsb xchg pop jae lds mov pop ds fdivrs negb ljmp pop jge push dec sahf mov xchg cvtps2pd out lcall ret inc inc (bad) icebp das mov add adc stc push add fsin push xor (bad) and leave jmp mov stos into pop mov mov fbld sbb push inc mov fwait mov mov jle daa mov int xor sub sub add dec pop insb inc mov dec scas cmp enter lock fisubr arpl dec cmpsb xchg pop jae add add lds mov pop ds fdivrs negb ljmp pop jge push dec sahf mov xchg cvtps2pd out lcall ret inc inc (bad) icebp das mov add adc stc push add fsin push xor (bad) and leave jmp mov stos into pop mov mov fbld sbb push inc mov fwait mov mov jle daa mov int add add sub sub add dec pop insb inc mov dec scas cmp enter lock fisubr arpl dec cmpsb xchg pop jae lds mov pop ds fdivrs negb ljmp pop jge push dec sahf mov xchg cvtps2pd out lcall ret inc inc (bad) icebp das mov add adc stc push add fsin push xor (bad) and leave jmp mov add mov pop mov mov fbld sbb push inc mov fwait mov mov jle daa mov int xor sub sub add dec pop insb inc mov dec scas cmp enter lock fisubr arpl dec cmpsb xchg pop jae lds mov pop ds fdivrs negb ljmp pop jge push dec sahf mov xchg cvtps2pd out mov aad ret inc inc (bad) icebp das mov add adc stc push add fsin push xor (bad) and leave jmp mov stos into pop mov mov fbld sbb push inc mov fwait mov mov jle daa mov int xor sub sub add dec pop insb inc mov dec scas cmp enter lock fisubr arpl add dec cmpsb xchg pop jae lds mov pop ds fdivrs negb ljmp pop jge push dec sahf mov xchg cvtps2pd out lcall ret inc inc (bad) icebp das mov add adc stc push add fsin push xor (bad) and leave jmp mov stos into pop mov mov fbld sbb push inc mov fwait mov mov add lret daa mov int xor sub sub add dec pop insb inc mov dec scas cmp enter lock fisubr arpl dec cmpsb xchg pop jae lds mov pop ds fdivrs negb ljmp pop jge push dec sahf mov xchg cvtps2pd out lcall ret inc inc (bad) icebp das mov add adc stc push add fsin push xor test jmp mov stos into pop mov mov fbld sbb push inc mov fwait mov mov jle daa mov int xor sub sub add dec pop insb inc mov dec scas cmp enter lock fisubr arpl dec cmpsb xchg pop jae lds mov pop ds fdivrs negb ljmp pop jge add adc sahf mov xchg cvtps2pd out lcall ret inc inc (bad) icebp das mov add adc stc push add fsin push xor (bad) and leave jmp mov stos into pop mov mov fbld sbb push inc mov fwait mov mov jle daa mov int xor sub sub add dec pop insb inc mov dec scas cmp add enter lock fisubr arpl dec cmpsb xchg pop jae lds mov pop ds fdivrs negb ljmp pop jge push dec sahf mov xchg cvtps2pd out lcall ret inc inc (bad) icebp das mov add adc stc push add fsin push xor (bad) and leave jmp mov stos into pop mov mov fbld sbb push inc mov fwait mov mov jle daa mov int xor sub sub add dec pop insb inc mov dec scas cmp enter lock fisubr arpl dec cmpsb xchg pop jae lds mov pop ds fdivrs negb ljmp pop jge push dec sahf mov xchg cvtps2pd out lcall ret inc inc (bad) icebp das mov add adc stc push add fsin push xor (bad) and leave jmp mov stos into pop mov mov fbld sbb push inc mov fwait mov mov jle daa mov int xor sub sub add dec pop insb inc mov dec scas cmp enter lock fisubr arpl dec cmpsb xchg pop jae lds mov pop ds fdivrs add negb ljmp pop jge push dec sahf mov xchg cvtps2pd out lcall ret inc inc (bad) icebp das mov add adc stc push add fsin push xor (bad) and leave jmp mov stos into pop mov mov fbld sbb push inc mov fwait mov mov jle daa mov int xor sub sub add dec pop insb add inc mov dec scas cmp enter lock fisubr arpl dec cmpsb xchg pop jae lds mov pop ds fdivrs negb ljmp pop jge push dec sahf mov xchg cvtps2pd out lcall ret inc inc (bad) icebp das mov add adc stc push add fsin push xor (bad) and leave jmp mov stos into pop mov mov add add or scas and mov fwait mov mov jle daa mov int xor sub sub add dec pop insb inc mov dec scas cmp enter lock fisubr arpl dec cmpsb xchg pop jae lds mov pop ds fdivrs negb ljmp pop jge push dec sahf mov xchg cvtps2pd out lcall ret inc inc (bad) icebp das add mov add adc stc push add fsin push xor (bad) and leave jmp mov stos into pop mov mov fbld sbb push inc mov fwait mov mov jle daa mov int xor sub sub add dec pop insb inc mov dec scas cmp enter lock fisubr arpl dec cmpsb xchg pop jae lds add add add mov mov pop ds fdivrs negb ljmp pop jge push dec sahf mov xchg cvtps2pd out lcall ret inc inc (bad) icebp das mov add adc stc push add fsin push xor (bad) and leave jmp mov stos into pop mov mov fbld sbb push inc mov fwait mov mov jle daa mov int xor add or add dec pop insb inc mov dec scas cmp enter lock fisubr arpl dec cmpsb xchg pop jae lds mov pop ds fdivrs negb ljmp pop jge push dec sahf mov xchg cvtps2pd out lcall ret inc inc (bad) icebp das mov add adc stc push add fsin push xor (bad) and leave jmp mov mov out mov inc cmp cmpsl or scas and mov fwait mov mov jle daa mov int xor sub sub add dec pop insb inc mov dec scas cmp enter lock fisubr arpl dec cmpsb xchg pop jae lds mov pop ds fdivrs negb ljmp pop jge push dec sahf mov xchg cvtps2pd out lcall add inc inc (bad) icebp das mov add adc stc push add fsin push xor (bad) and leave jmp mov stos into pop mov mov fbld sbb push inc mov fwait mov mov jle daa mov int xor sub sub add dec pop insb inc mov dec scas cmp enter lock fisubr arpl add xor cmpsb xchg pop jae lds mov pop ds fdivrs negb ljmp pop jge push dec sahf mov xchg cvtps2pd out lcall ret inc inc (bad) icebp das mov add adc stc push add fsin push xor (bad) and leave jmp mov stos into pop mov mov fbld sbb push inc mov fwait mov mov add in jle daa mov int xor sub sub add dec pop insb inc mov dec scas cmp enter lock fisubr arpl dec cmpsb xchg pop jae lds mov pop ds fdivrs negb ljmp pop jge push dec sahf mov xchg cvtps2pd out lcall ret inc inc (bad) icebp das mov add adc stc push add fsin push xor (bad) and add sub jmp mov stos into pop mov mov fbld sbb push inc mov fwait mov mov jle daa mov int xor sub sub add dec pop insb inc mov dec scas cmp enter lock fisubr arpl dec cmpsb xchg pop jae lds mov pop ds fdivrs negb ljmp pop jge push dec add add pop ss lcall ret inc inc (bad) icebp das mov add adc stc push add fsin push xor (bad) and leave jmp mov stos into pop mov mov fbld sbb push inc mov fwait mov mov jle daa mov int xor sub sub add dec pop insb inc mov dec scas cmp enter add lock fisubr arpl dec cmpsb xchg pop jae lds mov pop ds fdivrs negb ljmp pop jge push dec sahf mov xchg cvtps2pd out lcall ret inc inc (bad) icebp das mov add adc stc push add fsin push xor (bad) and leave jmp mov stos into pop mov mov fbld sbb push inc mov and aaa mov jle daa mov int xor sub sub add dec pop insb inc mov dec scas cmp enter lock fisubr arpl dec cmpsb xchg pop jae lds mov pop ds fdivrs negb ljmp pop jge push dec sahf mov xchg cvtps2pd out lcall ret inc inc (bad) icebp das mov add adc stc add push add fsin push xor (bad) and leave jmp mov stos into pop mov mov fbld sbb push inc mov fwait mov mov jle daa mov int pusha ljmp xchg xor movsl (bad) sbb mov xchg mov push hlt jbe inc repz sub jns jnp lea mov inc jb es xor mov (bad) mov popa add add mov sub mov bsr or mov hlt iret enter push xchg icebp fsubrp add (bad) cmpsl repnz nop push mov and mov jne or flds or lods fisttp cmp pusha dec sub xchg add stos mov test out outsb pop lret sub outsb xlat cmp iret insl mov push inc xor add adc inc push xchg dec hlt jle xor mov out cmp loopne jb fs cmp cmp mov xor pop mov out mov dec xchg jp xlat int test cltd xchg cmpsl (bad) mov (bad) (bad) ds (bad) mov shrl xor jg test sub push pop pop lahf jns subl sbb add add scas mov add xor add and mov mov fs sub stos icebp add dec or enter and dec scas cmp lods inc jne pop lock adc movb lcall push mov sub iret mov mov add (bad) mov inc cld inc clc rcrb bound mov js fiaddl das inc inc (bad) jp mov rolb add add (bad) cmpl mov cltd xchg aaa nop (bad) push int mov scas pusha pop pop lahf jns adc lahf data16 and movsb (bad) (bad) fisub pop mov fsincos movsl stos cld pusha dec pushf les in std mov mov pop outsb ljmp lock jg pop insb inc (bad) xor adc scas cmp rol cld xor jbe cmc mov in push das sar clc imul jmp fcomps popa xchg pop ds pop inc (bad) negb fsts movsl ljmp or or pop mov adc inc dec mov xchg mov pop test jp adc lds push dec xchg loope pop xor or xor inc adc out add inc cld in pop cmp dec push push loop xchg cli adc sti flds sub sub fs popf pop popa fs add loopne scas add (bad) push out xchg or mov sahf enter mov stos cltd sbb xor dec cmpsl xchg pop jae sub jmp add call sub adc (bad) cmp jge mov pop lret inc imul cmp out mov add vpsrlq outsl adc pop cmp imul loopne inc or lods mov pop push xchg lds add mov out pop fidiv int in movsb and jmp push or sub xor loop cltd mov and cmp stos sbb mov pop popf sti or sub dec xchg (bad) jecxz pop push xor flds in pop insl xor popa xchg jmp cmpb inc xor aaa flds mov or iret fdivrp mov fstps bound xor cltd cmpl mov fbstp int3 and aam repnz mov pop fcompl cwtl fwait xchg out mov gs cmpsl (bad) sbb mov push pop sbb sub ds or fidivr pop outsl pop jne pop jnp lods cli dec pop out xchg lods repz shrl pop mov push loope xchg daa cmpsl xchg test daa add call das xor jno cltd data16 (bad) jge mov sbb push xlat xchg pop test cltd jo fstpl js addr16 lcall jne imul sbb icebp (bad) aaa sti imull (bad) dec and xor fisubrl data16 sbb stos jmp pop lods mov add das mov popf push pop (bad) lods sub add cli or xchg mov mov push xchg cltd mov in in rcrl mov (bad) mov push xchg jmp or mov cmc loop dec mov loope sbb js push int jne push pop mov mov jo mov imulb dec jecxz bound (bad) mov inc in add fsin push outsl not stos int3 xchg sub add mov push popf inc mov add xor stos inc outsb mov sti add inc pop (bad) mov adc movsl xor shl push cmc sarl imul cltd jmp xchg aad ret cmp or xor jbe push in cwtl loop loopne jecxz (bad) insb clc mov fucomip aas mov ds mov pop test adc sub pop jge xor or inc add imul movsl mov insl imul inc hlt xor jge aad pop mov les movsl mov jae inc lcall ret sub mov loopne push push xor mov push jle stos fidiv fwait jle in adc cmp (bad) pop fs leave subl in test out cmp or div test mov fidivr les cltd stos mov cmp mov xor sub xor xchg clc jno mov xchg lahf int fidivl aaa out pop stos push lock fsubrs or sbb popf div jle jo or mov and mov stc es sahf out ss test fcomi sbbl scas mov add es mov call mov adc sahf fwait mov leave add dec pop test stc inc les fadd insb bound fistl gs cwtl and xchg cmpsb mov rorl dec mov jecxz jnp clc add ret jb jb ds cmpsb (bad) inc push cmp ja push mov decl out jle xor cmp dec aad jbe cmc popf xor sbb push jmp add add fnstcw cmpl jo dec leave jmp mov movsb inc mov push inc cwtl xchg aad test xchg scas loop inc add and popf out inc mov jle daa dec lods or xor jecxz sub add or and in cmp in xor aad mov mov jmp (bad) imul push into fdivr pop repnz retw ret add push cmp xchg fwait cmp and (bad) mov in rorl cmc xchg jl leave out dec aad ljmp subl jae and inc fs adc xchg mov stos and mov cmpsl nop lods pop addr16 xor pop clc pop dec jne popf iret (bad) addr16 mov inc fnstenv in scas (bad) or sub add int3 faddp scas push pop jae mov in dec xor push jb addr16 lret ja cmp sub xor sub mov cmp inc sbb lcall insb or add pop imul mov sub dec aad push imul movsb xchg add fwait xchg add inc pop xlat (bad) ss addr16 push or fwait mov test push repnz add (bad) cld int xchg push inc xor mov pop mov popa lret dec mov fs or add aam mov mov jge pop jae jae int3 pop (bad) xor mov pop jl cld mov aas or aas iret fcoms fistpl lods (bad) push dec sahf cmp ss push mov mov cs (bad) jl jge mov rcll add imul inc sub jp cmp popf incb and in leave jmp (bad) ret mov dec sbb xor inc and lea cmp xlat movsl mov sub adc inc mov dec sbb jne or inc mov mov add adc xchg mov out and mov in out xchg pop and lret ja jecxz sldt add fdivr pop mov mov (bad) mov pop lret pop ss cvtps2pd add out dec mov ret and sbb push jns pop (bad) stc popf xchg mov fsin push data16 addr16 enter aaa adc inc test cmp cmp test and loopne add movsb fidivr pop outsb mov in (bad) lea pop jne or add ret insb lods sbb cwtl daa jecxz ds icebp and sahf in enter dec mov sbb jae inc dec in sub (bad) (bad) xchg mov (bad) cmp xchg fisttpll mov sub jp out xchg jnp mov pusha popa (bad) icebp jl popf mov (bad) add nop ret add push jno adc (bad) jno pop xchg and test pop or cmpsl testl out mov fldt cmpsl pop mov jb push lds sbb std iret out aaa scas (bad) shrb daa mov int xor sub cmpsl push xchg jmp (bad) or pop scas cmp call jo lea in add mov scas pop std enter or pusha roll mov mov mov fistpll jae sahf mov xor lods push outsb sahf mov loopne (bad) mov std push aas roll add (bad) icebp pop mov cmpl cmc fstps test nopl hlt dec out (bad) outsl cmp mov mov pop mov popa inc testb scas je adc mov fstpl jl push push shrb daa mov int xor sub sub add cmc pop insb inc mov sbb test fdivrl mov cmp sti fwait push add divb lret ds ds dec mov negl ljmp movsb (bad) in cmp jbe pusha repnz leave out int lea inc inc (bad) mov aad push in adc sub ljmp jecxz add xlat mov test jp pop stos jns mov lcall jbe jge mov fild outsb (bad) pop push jg daa mov dec mov cmp cmc push popa aam push mov outsb imul xor iret and loop (bad) std lds aaa sub or mov pop mov rclb fistpl push cmp xchg mov cmp icebp movsl leave mov mov or dec adc pop inc in js jbe mov rcll popa cmp (bad) dec (bad) mov cmpsl jo inc popf mov add add xchg rcl mov pop pop xlat popa adc gs stos pusha stos cmpsb or scas test cmp inc pop popl add test xlat stos pop popf xor xor aad sbb sub mov push insb inc push inc in cmp push mov jb fisubr call push shll clc mov scas mov stc or ds xlat push (bad) xchg addr16 dec push xchg mov mov lods mov pop mov add add jae loope imul int dec aad addl (bad) stc jle or xchg push pop test in inc outsl mov cmpsl lcall xor loope mov fstl inc movsb in inc mov fwait jecxz cmp pop in jle lods outsl mov inc cmp repnz or out call leave mov jle xor sbb mov arpl arpl dec sub (bad) xlat std mov movsl lret cmc push ficom xchg jecxz mov xchg jle mov xchg (bad) imul lret aas cmp jo icebp sbb sbb stos nop pop stc push add xor or sub jmp mov push xor iret sub jb jecxz inc rcr ret and adc lcall add test mov jo or inc into imul in mov push push push les pop add lock xchg (bad) in fisttpl ja cmp lret repnz jae sbb jecxz push negb (bad) push pop pop adc dec adc addr16 bound mov push lret in call jmp icebp lahf sub inc push mov add add jns lods xchg mov ret mov sbb ja ror mov mov push fdivrs dec adc nop jnp fwait pop mov xchg xchg jmp push flds push adc xor inc (bad) cmp dec pusha (bad) in inc and jecxz ficomp inc mov repz repnz cmpsb ds push or jb ljmp fst adc enter dec sti gs (bad) pop fs aam dec or push outsb fldt (bad) mov mov mov or in incb pop (bad) int negb adc sub das cwtl insb fwait shll mov add fldcw cmp and movsl ret test scas es or mov (bad) push jo call jle sub add rclb mov inc and xor sti ja ss mov aas add push xor pxor fwait ret dec or push and cli ljmp orb ret lods out cmpsl movsb int3 adc lods sbb cmpl cmpsl add imul jae sub push pop flds mov sub pop popf and mov xchg fdiv enter xor add sbb and out mov fsubrp aaa mov (bad) and fbstp cmp push insb inc int push cmp pop inc jns lock out sub mov pop nop das ljmp xlat add lea (bad) cmp pop scas cmp adc add push aaa out pop jmp bound push xchg push jp xchg icebp sarb divl add negl add (bad) mov and or lods js in (bad) add xor push dec mov pop iret repnz les fs pop push sub (bad) sbb daa loopne inc aam or outsb fdivl fs mov mov mov xchg ret xchg pcmpeqw sbb mov das movsb ret xchg jg sub icebp pop push cmp iret push add ret jp call lahf xlat into arpl les dec test add imul hlt mov xor pushf push outsl xor popl pushf adc mov jle xchg es adc icebp hlt fsubs cmp sub inc movsb and mov icebp mov data16 out addr16 daa or adc sub add fistpll cld cmp dec pop jb negb and popa mov xbegin and rcl cltd push or outsb mov cltd (bad) (bad) pop ja mov xchg ucomiss mov sbb xchg dec inc (bad) js inc adc popf (bad) dec adc push cmp popa incl xor sarl hlt sbb popf jbe add jae mov mov mov xlat shrb add sti push int xor inc stos pop cmc mov push int mov lahf adc (bad) cltd mov push inc or push inc jns sbb pop fcomp xor sti cmpsb sbb sbb adcb add xchg pop and push adc ja shrl fidivl xchg jb jmp cmp movsl lods cmp jns xlat mov pop mov orl pop or mov mov sub or sub je cmp test push xor xchg scas pusha lret sub sub push push shrb insb jns repz cs lds pop pop xor fmul repz inc pop pop sub icebp inc fsubrl jle daa pop mov mov sub dec xor push push sbb add lock arpl xor bound add jle jae dec mov mov cmpsb dec add fidivl jp push int mov ss lcall cwtl lret movsb lcall addr16 inc cmpsl and push out (bad) (bad) lock stos (bad) fdivr fldcw outsl push fidiv jl (bad) or rcll dec xchg scas and jb push arpl call push jae adc dec xchg mov add add pop jne mov lret movsl cmp inc mov push clc rorl outsl enter shlb bound adc xchg pop jae sahf out sub fnstsw mov dec (bad) (bad) repz xchg dec (bad) push dec sahf (bad) mov cmp ret stos xchg insb jmp sub jl movsl dec pop and xor pusha add bound push repz sub call xchg push mov dec leave lahf test sbb in (bad) pushf popl (bad) mov mov in jle movsb mul int mov gs jne jne rorl sbbb in pop mov std and push xchg cwtl mov sbb iret dec int leave clc xchg pop clc cltd int insl out icebp mov mov test testl push cmpsb ss aad xacquire into and add sbb add das mov push pop jmp test fsin insb xor ret inc jl xchg les in sub pop leave lcall cmc clc pop arpl stos mov movsb fisub in sub adc mov add cmc xor push pop clc outsb clc jl mov mov test push sbb js lock sbb add pop jg lock fwait xor or mov jecxz ficomp int3 imul pop cmovg add jecxz lcall dec adc rcrl fidiv jg cmc inc dec outsl or push js aas test jmp cmp into cwtl jecxz inc dec aas cmc out out and inc stos inc or testl jb mov fsubp addr16 add xchg jne popf iret mov iret subl sub cli or xchg aad out push push or div test lea in loopne dec mov inc stc leave mov mov insl lods jbe orl xor jno dec scas or lahf loop rcl or aaa sbb mov stos xor ret adc das jl mov ljmp loopne dec mov pop mov add jecxz int inc outsl mov loop insb (bad) nop adc cmp mov jno enter xchg fldcw dec loopne out pop and notl jle adc popl pop in sbb jns test bts pop push in cmp xchg mov sahf and xor mov mov sbb ss cmp sahf sbb lds pop adc add add std setge jmp mov or mov negl shrl inc inc pop iret popf mov roll nop push mov and mov outsl dec xlat (bad) ja das cmpsb loopne pusha mov mov and fstp and dec fucomp mov aam sub cmpl dec insb mov lret pop es test cmp into mov cmp add pop lock jbe or sahf add (bad) ss mov test dec mov nop pop push iret pop cmp xchg adc pop mov mov xchg enter mov decl mov dec mov inc jns jl sbb movsl adc stc jl mov mov stc lret clc fxch pop xchg jmp ljmp loopne iret pop adcl and repz int or mov pop and push add or ss loope mov idivl rclb pop insb sarb xchg mov push push add sahf push subb sbb shrl cld mov xchg pop add icebp cmp lds daa sub dec fildll lahf fbld gs inc (bad) push in sbb rcll (bad) xor (bad) jge jmp sahf mull add dec add fsts (bad) ss mov ror divb mov push mov fsubrl lret push rcrb adc fisttpl dec jno xor arpl bound dec sbb inc negb (bad) aad lock dec pop mov (bad) mov aas sti pushf loop cmp xchg mov (bad) sti jo (bad) cmp lock pop mov mov and add dec mov (bad) mov adc je (bad) out push mov cmp xchg pop jb mov sarl push out jno sub insb notb out (bad) hlt mov movsb inc cmpl std int adc xor mov pop repz inc nop in mov xor pop cli sub mov or or mov pusha rol add sbb add add add inc scas cmp push (bad) mov inc aad addr16 jns dec fsts sbb in lds and nop shrb mov ffreep (bad) dec inc imul mov das mov rorl sub shr repnz addl ss or jmp scas (bad) push leave outsl es and or pop pop lahf jns push imul add add xor fisubrl test (bad) scas mov jae stos jmp cli hlt push sub pop rolb inc mov loope cmp fisubl insb fcompl loopne xor cmpsb xchg ds mov shlb test fdivrs negl ljmp pop hlt push dec dec sbb mov prefetch adc hlt mov inc ret cmpsb out push lea jmp xchg dec cmp xor xor or and pop insl inc lds popf mov adc lahf pop pop and cmp stc push subb fisubr lods push push outsl or inc and in ljmp jge dec pop out xchg mov xor jecxz jbe and mov push gs dec je xchg jmp add ds ds (bad) movsb js,pn push jge dec cmp ss pushf int3 jbe mov sub inc ret cmpsb daa jle sub lds (bad) (bad) clc sar push movsb test and push inc outsl cmp test pop mov leave pop stos inc shrb loope jb pop (bad) mov lcall ss daa bound lret cltd xor add add push adc into lea loope mov mov jge fimul aaa sub ljmp sbb test cmp imul adcl add lods (bad) mov dec sahf mov lret mov out mov cmp inc fmuls icebp js push mov rcrl cmc push add mov ja in (bad) es popa add or sbb mov inc (bad) or mov scas and jmp sbb lret push xchg lcall ljmp dec emms or leave ljmp ret fwait mov add cltd sbb pop imul jg and xor mov or mov lret add mov movb xchg and mov lret insl insb imul or add pop mov add jno shrl stos jnp notb scas sti inc push aam (bad) incl mov andl mov (bad) xchg adc mov dec imul mov and in mov mov aaa and je,pn loope push xchg fisubr pop add add or cmp scas mov repz jbe fwait mov sbb mov add add inc and push jae stc out mov fs pop inc (bad) push (bad) repz pop inc sbb repz inc imul cmp add and add int mov loope jge mov jmp push sub xor add lret xchg jle lods hlt push mov inc (bad) sub push repnz sbb inc xor mov xchg fisubrl pop dec frstor push lcall inc (bad) push mov sub push and mov add int loope mov dec scas cmp insb imul call (bad) cmp dec xchg push jb inc jbe mov pop mov or adc inc movsl pop jge (bad) mov mov ss mov inc pop nop sbb in sbb lcall ljmp cmpsb or ss lods inc mov mov push xor xchg cmc xlat int3 (bad) dec inc jecxz fisub (bad) (bad) xorb adc pop xchg mov jno add xor out jns lret sub stc into cwtl push imul imul sbb cmpsb and cmp arpl dec and (bad) pop rol ja xor push mov jge loop (bad) mov xchg sub dec sahf add add jns mov ss pop mov xchg es dec mov lret movsb int3 push mov inc push cmp test xlat jno sbb xor xor outsl mov and inc pusha sbb dec or push mov cwtl mov lods pop out push je adc bound inc push jmp jle daa fnstcw push xchg jbe jmp loope mov out sti in or scas xchg mov add cld sbb push sub or and mov sub je mov pop aad loope (bad) stc lcall xor sahf mov xchg test cmp mov and adc jno mov xchg xchg xor call xlat and sbb sub bound addr16 xchg inc mov jne adc out mov sbb cmp jno add add movsl fsubrp mov sub mov add sbb mov jns gs or and and push jae iret cmp add (bad) pop sub mov sarl xor ret cmpsb fildll roll ret lret xor jl or fisub adc mov xor lods js inc or lret call add add sbb (bad) popf test icebp sub nop aaa xchg mov iret data16 sahf ret push aaa sub pop into rolb sub mov and sub pusha pusha pushf pop das cmpsl xchg mov push loope and aas push inc inc jge mov cmp jecxz push bound mov lock or js negb mov add add cld (bad) cmp mov xchg ss or fs aam dec or jmp add inc (bad) (bad) sbb xchg adc inc pminsw push gs pop mov sahf xchg out rclb (bad) lret and mov (bad) sub fdivrl pop or stos fistpll adc in push leave xchg add movb add push push mov sbb dec int dec dec xchg in dec aas mov in (bad) insb test jnp mov xchg sar das adc pop lods xor pop fcomip call mov push sub fwait das ljmp roll stc jl outsl (bad) push js cmp jmp (bad) or shl stos popf dec sub sbb mov fild add add cmc mov jae fadd dec cs mov mov sub xchg int js out and jg dec xor arpl dec scas rcl gs jge add out or mov pop and adcb or sub cmp notb adc adc mov pusha enter icebp mov ljmp jg push inc outsl movsb add pop fiadd adcl imul lods mov sub orl aas in inc aaa int3 cmpsl inc cmp and inc jb jle shr aaa testb in jle jecxz mov ret cmp jo cwtl adc mov jp pop and les lock and or dec dec mov mov adc mov add add faddp fdivrs pushf or (bad) cmp (bad) ret xlat mov fidivl (bad) repz (bad) lcall xchg cmp lret mov or mov enter imul jo lods or popl cltd and sbb fimul lcall stos stos xchg cmp stos out test xchg mov adc insb or stc addl add add enter mov cmp stc push fisub add mov ds mov xor mov pop push negb mov cmp or fwait xlat mov dec inc jl adc repz pushf add cs xchg jnp bound repz sub pop add push fnop ss call mov loope pop hlt stc xor rcr cmc or clc xchg push cmp mov push in repz bound xor movsl pusha or fadds rorl cmp les ret lods push popa (bad) loope jbe (bad) jmp mov cmp add ljmp xchg cli mov dec add js mov jecxz lcall add aas aaa dec inc (bad) icebp js sahf mov add (bad) notb jge les insl mov cmp cmp inc fisttp js mov dec cmp cmpsl add daa sbb fidivr mov fsubrp aaa scas sub cwtl adc or sar vpsrlq push fwait (bad) fiaddl and scas mov adc outsl mov push and xchg mov les cmc mov dec sbb outsb daa and mov mov and adc add pop cmp js movsl leave punpckhdq decb adc push sbb js rcl mov sub cld mov in mov movsb inc add push ja rorb lahf bound es jecxz lret sub and stos xchg cmp mov pop push and daa add popa movlps add or xor adc or cmp nop mov pop adc ja sub fwait mov inc mov xor and dec mov (bad) mov inc sbb mov adc loopne add ret inc in js xchg bound hlt jb insb repnz ret outsl xor test jmp add aas rcl out ret mov cwtl cmpsl (bad) out mov mov fucom and jo mov and (bad) lret mov pusha mov jge subl loop mov in push pop les faddl sbb xor add sub mov loope scas sbb clc mov or in mov jo out mov es cmp cmp and lock sbb aas stc jmp int pop std das mov jae andl outsl or inc (bad) add and int3 cmp xor dec sub adc inc in in adc or scas pop repz jae call pop sub ret lods fndisi(8087 popf out and or push cmp insb (bad) mov push lds loop mov mov add and in push xor push aam mov pop dec sbb (bad) and jns dec inc ljmp sbb out lods mov push bnd pop scas add or jle adc das xor mov out jle bound xchg adc dec cmp daa and int3 aam push push cmp xchg pop ret mov fistpl lret inc jo fbld (bad) lcall fidiv pop mov or or pop push movsb add into push out and repnz add add mov cmpsl std cltd shr mov lds mov gs dec xchg pop jae jp mov outsb (bad) cli xchg js jb ljmp push stc fstl sahf xor fmuls push mov mov fucomp ret sub (bad) or mov add xchg ds (bad) out inc (bad) sbb sbb add or add fdivrl push xor mov and repz imul jns aas fsts (bad) pop mov jp,pn fidivl into pop js or (bad) cmp lods aaa out movsl sbb stc push scas xorl mov push sbb stos sbb push inc xchg dec bound mov inc movsl mov mov xchg add fcom pop jge xchg outsb movsl ja mov jnp fist stos and mov (bad) xchg pop push nop mov xchg ljmp lahf and add shrl pop cli into aas adc movsl dec cmpsl mov mov ret cmpsl or cs push sti push ret jbe mov sbb test push mov push dec pop xor nop mov in pop dec pop insb enter fidiv add popf loopne std xor jge xchg xchg repnz iret (bad) mov lret mov popa stos jmp mov dec shll push and pxor sub cmpsb enter test ds push scas add inc xchg ret (bad) jl mov loop dec sub xchg add sahf sti cmp fnstenv lods mov push sbb test xchg aaa lods xchg std or ret out fmul pop jae cmp add jae sbb mov inc fcmovbe sub mov mov repnz cmp or cmp std dec fsubrl xchg mov mov pop xor xchg pop xor cli clc xor sub cli mov xchg subl mov arpl cmp maskmovq idivl inc pop cmpsb (bad) in push dec sahf mov sar sub mov addl jle fiaddl add popf div cltd subl inc xlat insl sub (bad) mov pop popf dec icebp enter mov sbbb jmp inc pop and mov adc data16 leave pushf ret lahf aaa enter pop push popf inc popa data16 add push sub and pop add scas mov mov cmc out mov add add fnstcw xor mov jle clc dec aam cmp flds xchg jmp jg mov hlt mov xor inc dec lods sbb mov jp add cmp lods hlt sub mov dec mov xchg jns and lahf cwtl mov mov inc scas or movsb or mov mov jp cmc mov or xchg xor jnp mov add fwait push jno,pn scas cmp les inc ljmp inc repnz pushf jne mov popa mov jmp dec movsb mov imulb or sub pop das push pop sahf mov mov je push loop test lret push ret fwait das call or push decl xchg ds aas mov xor fbld mov add sti (bad) icebp dec inc jg,pt cmpsl (bad) sbb inc xor (bad) mov arpl addr16 inc inc push pop add mov mov std cmp enter pusha dec or sbb or in push loopne pop mov inc jae popa mov cli mov dec (bad) cwtl inc sbb xchg push pop sub xchg push adc daa xor mov cmp add add xchg pop stos outsb es mov int3 jp mov jb lcall cmp ret mov loope pusha test inc cmp cmpsl lret (bad) add scas mulb mov sub jle loopne sbb mov inc out (bad) mov mov dec (bad) or cmp jb add push adc xor push into jbe addb add add mov aas fisub int3 js,pt sahf jae mov cvtpi2ps pop xchg psrlw or arpl mov inc (bad) icebp lods (bad) ljmp popf jb sbb push add nop ret stc in shrl xchg xchg aaa pop push push xor bnd icebp lret mov mov push sub out stos push dec hlt adc dec pop cs clc and pop mov sahf add leave fs icebp orb or xor mov dec push rol and xor (bad) push mov push jno movl mov loope add xor ret and mov data16 movsl dec fldcw cmp insl insb imul lods sub pop sub aam or xchg jge daa xor cld dec xchg push into xchg and and insl mov add add xor push lahf mov xchg imul insb lock ss push mov arpl cltd push insl xchg sbb sub pop cld pop or cmp dec ds loop rcr push inc hlt add out add ds mov add jmp jmp cmp packssdw inc rorl fstpt xchg mov add add sti nop (bad) cld stos xchg sarb jnp mov add mov jo pop mov mov ss inc out fildl fcmove push cmpsb lahf mov test fisttpl pop lock push call mov xchg pop pop dec aam pop ja (bad) xor loope sub sub cmp mov inc (bad) push sub daa or jecxz cmp xor jl outsb and out dec ret jno shl dec (bad) pop adc mov pusha or (bad) mov push arpl sbbl pop into (bad) cmp shll jmp dec pushf loopne jae nop jmp (bad) (bad) aaa addr16 fiadd push xor pop adc imul jl das fmull (bad) push iret (bad) mov inc add add mov xchg mov lcall clc icebp cmp jae lock loop rcr shrl jno cmpb xchg jns xchg inc mov scas ja cltd lret mov xchg push xor xchg xchg movsl (bad) xor cmp dec xchg stos es (bad) cli cltd jbe stos data16 mov enter mov adc push divb int data16 adc add add and sub mov aas cmp cmpsl mov mov leave leave sub rcl andps sub lret and push lahf int out aas aad out ja jno cli ja xor jp in das pop or sub into or lods mov popf dec leave lcall cmp ss inc lahf out push in ret or dec sbb mov aam and push jb pop add bound mov jle mov mov fwait xchg (bad) lret lret (bad) stos into out aad int3 (bad) mov data16 adc add lret xchg inc push or cltd dec sbb out iret into mov ficoml loopne push lcall add fsub add cmp scas loop jbe lds popf jp sub pop adc jp sub ds jge dec xor jge jb dec inc add lods mov push in stos popa xor adc xor pop js mov mov packsswb mov sub scas clc daa lcall push stc int mov out add mov lock dec lods lret jns outsl mov cmp push dec jmp fidivl xor jbe pop iret pusha pop addr16 mov stos cmpsb popf xchg sahf sbb nop (bad) in ret xchg adc mov fiaddl add add inc fistl int3 mov lods push (bad) in or scas (bad) inc leave cmp sub pop sub inc xchg loop ret loopne shrl jo loopne sbb dec xor mov xchg mov mov sub sbbl (bad) mov pop std jmp cmp inc in lret pop out xchg dec dec mov cmp into hlt sbb lock push xor push add adc cmp inc inc loopne test push mov dec mov stos xor stos push xor xlat xlat lods cmpsl push aas adc dec pusha mov stos icebp in add in mov insl inc cs lret mov xchg int pop addr16 cmp inc dec adc in (bad) mov add push out adc (bad) mov xchg cmp test es pop loopne adc xor pop lret mov (bad) mov enter mov aas pop or dec mov add lods cld (bad) and jbe pop lret imul fldenv (bad) in into aam xchg adc stos scas xor outsb stos mov and and xchg mov sbb adc pop cld jnp lods cmp mov add cmp xchg nop test stos dec pop lods cwtl cmp cmp es loop cmp pop sbb jno aad adc cld repnz pop mov jg loop dec rcr mov jno inc cmp push movzwl ljmp jnp mov dec imul push sub pop mov mov rcrl ror (bad) mov lret cmpsb mov add add dec icebp and push lock sahf push cltd xor stos pop push jmp ljmp add cmpl adc inc (bad) push (bad) or add in lds jecxz outsb sti pop out dec loop mov shrl loope scas in mov xchg xor sub inc xchg xor imul sbb hlt (bad) in xchg inc mov add notl mov sub add arpl mov dec mov jo mov test aam xchg adc test adc add inc pop and sub test adc pop dec cmp clc push stc cmp adc inc mov iret clc jge negb or dec das movl add call jmp hlt mov imul loop fmul add jno (bad) pushf bound adc dec inc xchg lea scas mov adc call jmp push (bad) mov inc pop jmp jns adc fidivl xor mov out lret mov ret or sbb cli iret sub (bad) mov sbb sub cmp xchg (bad) and add cwtl pop jne or cltd testb aam dec aaa mov jle (bad) cwtl fcom or jbe sbb push test sbb imull sbbb insl fcomi push arpl mov fdivrl mov sbb mov mov dec lods inc (bad) xchg push cmc sub xlat mov test test (bad) jge and nop les aas add add add add xchg jle mov mov pop sub and jp jo sbb fs aam push cmp sub cltd xor sub dec push lret loope pop pop insb lret ffree repz enter fistp xchg and jno popa (bad) jecxz add xlat cmp repnz push ret repz (bad) sub out add sub notl arpl (bad) out add fildl not (bad) rorl mov xchg jmp xor sbb push jmp jae,pt and sub xor mov ds shlb sub pushf adc pop xchg out mov cmp out jb fldt fistpll scas in jle jo xchg lds jp out aad or je sbb in xchg inc mulb cmp and mov es stos pop mov add mov jmp xchg mov xor ret or orl mov gs lds call daa sbbl pop (bad) aaa sarl xor (bad) add data16 stc push cmp pop or cli sub loope xlat mov push xor repnz stos push add pop push and cld (bad) push inc cmp (bad) adc add or daa ja fs addr16 ss jge incb xor sbb push push std pop stos enter mov jmp pop int cmc das mov mov negl add pop (bad) fnsetpm(287 jns jnp mov dec dec cld dec outsb pop das cli (bad) or mov xchg (bad) pop into mov jb mov out imul bound push cmpb inc das (bad) jl sbb pop xor add rcrl jmp stos into pushf (bad) sub testb add cs mov mov xchg pusha lret sub push cltd xor rorb sub orl dec push and jl xor jbe sarb in adc mov scas dec stc lret movsb ftst pusha dec cmpb imul adc jnp out add js mov add (bad) in inc push xchg (bad) pop jbe mov out cmpsb dec inc ret pop cltd xchg cmp js cmpl stc push jo sbb fnsave pop adc mov mov (bad) (bad) mov add dec aam ljmp and arpl and or inc fdivs xor and or vmovupd sbb sub inc daa add jo mov pusha test jns mov push pop in cli out shl stos dec pop (bad) lods data16 sbb mov pusha xor clc lods loope arpl sti lahf int3 dec std mov sarl mov lret popf mov xchg stc push (bad) ja cmp (bad) xor dec into xchg xchg (bad) nop (bad) cmc (bad) aam xchg or stos mov mov add add add add fsubrs mov lods push std data16 scas ret arpl insl aad daa andl mov push xchg jae loopne or aas test xchg js push jns cmp clc stc mov cld hlt cmp (bad) jbe pop (bad) sub xor hlt pop pop (bad) (bad) mov ds xchg mov in leave lret xor int3 adc bound jecxz nop testl add jmp jle jb mov out shll (bad) xor xlat cltd data16 (bad) sub ret andps xor repz push int out aas aad out dec loope lds ret nop or jo icebp (bad) not mov lret sahf mov stos mov sti jnp negb sub ljmp out cmpl cltd fmuls mov xor adcl add into mov dec jb hlt mov dec aaa ret or int3 out lahf jbe sub xor xchg cld cmp dec xchg (bad) xchg (bad) mov sbb or lock not mov jecxz xor sub call test js lods lods push (bad) ficom repz movsl pushf xchg ljmp insl repnz xchg push dec arpl inc xor mov in cmp add add inc aas push mov add out add ds inc lahf fist push in cli pushl or dec sbb mov sar and mov dec or addr16 ja mov mov adc xchg popf mov in leave (bad) xor mov nop sub ja cwtl mov lahf dec cmp and jb and sub cmp fiaddl es lcall add and sti fist mov frstor test sub cltd ja outsl xchg mov adc push data16 lret sbb fidiv cmp add test jns push mov (bad) rclb cli sti mov (bad) jbe jecxz scas jmp mov mov sub sub inc jmp test pop das aas faddp mov or out orl int add iret fwait jle sbb push add lods std (bad) jl mov pop aam packssdw xchg xchg (bad) xchg (bad) cmc fcmovbe adc and scas and dec scas out mov dec (bad) mov popf lret adc in adc mov loopne pop push sahf dec pop xchg jae loopne or and add sbb mov loopne test (bad) cmp or enter add into mov mov jo or imul lds out mov jmp es add aad outsb mov lret inc call cmc xchg stc mov and jle xor mov (bad) lret mov ret cmpsb cmpsl lods mov aaa pop ss scas scas dec ljmp in (bad) outsb int (bad) mov lock (bad) xor gs add and clc dec icebp cmp or pop ficompl ret mov test call cmp (bad) xchg lods testb cld cli out dec pushf enter xor nop je cld daa mov mov push dec in or jle push pusha cld clc mov mov fmul addr16 or scas movsb mov pop adc loopne adc rcll jmp adc ret aam add notb ds xor loopne jmp pop pop push inc mov jae xchg fucomip mov mov xchg lods outsl mov adc out adc jl push in add jle in inc mov pop sbb gs adc mov cwtl loopne repnz and shrl cmp out dec in xor repz shll and in shlb lret inc cmp je pop shrb jb push pop add sub pop dec les test push dec sub jb xor lahf cmpsb dec mov int std icebp mov mov loop dec mov sub push es stos sub sub out add sub jb cmp mov jle jecxz orl cmp or sarb inc divb fadd push bound mov add sbb mov (bad) mov je pop or mov cmp dec fcomi xchg cmpsl mov lock adc jbe mov jg dec imull add dec inc (bad) icebp jl sub addl pop ljmp and stc lret inc in sub addl jbe,pn popf dec sub sbb pop hlt clc jbe fisttp imull mov and mov adc add add jo call cltd mov testb sbb negb pop js cld mov insl ss lea push fcmovu push jne out pop imul mov jecxz cli (bad) mov add dec jae addr16 and ja orb ss mov adc push cmc das mov add dec dec sbb (bad) mov and stc lret sti in jp add xchg outsl cmp ljmp pop out or mov xor mov fwait mov scas add mov pop push sub mov cmp mov inc add push jmp jecxz and xor sbb mov nop mov idiv jl add pusha jmp or sbb push outsl inc (bad) mov imul mov out jae jae sbb cmp lds inc push add cld add push add inc mov std subb sarb hlt iret pop dec xchg inc xor cmp sbb scas and dec (bad) out divb shl test ret in and icebp imul sub add mov (bad) or push xchg inc mov add mov int3 xor jg mov aaa or mov imulb or xor mov dec inc imul mov mov and (bad) ss addl mov les orps or sub xlat mov stos into pushf addr16 mov xchg sub testb mov dec jno popl mov fsubrp fsubrl sbb and add lods test inc mov xor sub cs lods testb dec (bad) and ret arpl jp mov cs inc push cmpsl sarl jo or shlb cld je std push xchg test xor mov into pop lock ja stos bnd jo sarb mov add add popa cmpsb xlat push dec stos fmulp fs mov arpl mov lods imul jmp mov gs dec bound leave ss popa fwait and jne rcll xor outsl test addr16 mov jns push stos jnp int cwtl sbb test insb cmp fwait xor mov push inc xchg cld mov in je aam mov xchg test mov jge adc add ds or xor xor stos testl push rcrb mov cmc sub cmp mov xchg in push js mov pushf adc fldenv pop add and pop fcompl aad fst scas aas dec call ja xchg negb sub xor push inc sub cmp mov (bad) jg push js cmp lods dec lcall add stos pusha mov shlb xchg jl (bad) aas cwtl add lret dec (bad) fwait pop leave jae (bad) mov inc or (bad) push int mov push add insb mov das in add add outsb xlat mov ss push clc cmp adc push cmp pop insb insl sbb sbb (bad) in jge mov leave mov aaa xor add add imul popf stc fadds fs daa repz repnz mov mov jl ret mov cs fimul fiaddl scas fnstenv and mov fcompl dec push in mov and (bad) jb dec jb bound ret scas push and mov sbb out add popf sahf sub pusha jb (bad) bndldx lret jo movsb into sbb ret cmp pushf int3 pop orl test jnp ret or jge sub fcmovnbe jecxz mov mov aaa pop icebp out and cwtl mov sbb adc xchg mov (bad) iret xchg stos push jne (bad) mov adc mov sbb cmp es push push incb cmp mov mov (bad) (bad) outsl and xor lea fldenv add add jmp aad or pop mov add lahf rcrl ja jecxz in fdivrl popa js xchg sbb and fldt mov push fdivrp pop movsb fidivl and dec int3 je aaa call push fcompl inc out mov arpl sbb es lods in jno xor data16 xchg out lods mov cmp int cmp dec or lds add imul out mov call enter incl in (bad) pop cmp fwait pop xor pop outsb ret mov (bad) cs lods push popf mov mov mov cmp sbb imul stos xchg mov ja jae enter push out lea jne and (bad) jno adc outsb mov push rcll je out in add add jo dec jns aam xor xchg pop aam mov icebp movsl mov mov call pop jp lea mov mov cld dec pop insb sbb pushw popf sti nopl std or add icebp jno fisubrl jge xchg test aas mov xor cs adcl sbb lods (bad) mov adcl jnp fsts ret mov addr16 movsl add inc xchg mov sub (bad) (bad) ds clc and vmovhpd push fsubrl sub jg mov xchg out xor sbb into xchg mov pop or mov shr cmp scas jle daa dec lods or xor jecxz sub add or and in sub inc jne mov mov ljmp push fwait add add jae cmp (bad) enter cwtl pop inc pop enter add push dec lock mov leave ja je pop pop out fistp out mov inc xchg jle pop inc (bad) add adc cmp xchg ds mov aas add leave mov mov pop pushf dec dec add mov adc ffree and loopne adc lods ret mov jmp gs (bad) push hlt scas add in into sub xchg aad cmpl jmp pop mov sbb mov addb lds ljmp movd and (bad) dec mov adc lret cmp test cmp repnz ret dec cld das mov mov movsb pusha fwait jp adc nop fsin jb sub xor leave jmp add jbe add mov mov adc popa push stos or clc dec adc test dec cmpsl fs test daa lods test push adc popf iret frstor mov std into fwait fs fldt and lret xchg iret xchg insl lods mov adc lods push xchg push test mov lods inc pop mov aad cmp xchg sub lds add add stos sbb add scas shrl pop xchg (bad) sti mov lret cmp fdivr push xor dec adc xchg sub push sub neg jne pop ror push dec dec mov inc cmp sbb fadd ljmp lock jle daa mov cli mov popa out sub jbe inc (bad) es inc mov inc push cmp enter jnp mov add add jl cmc jno xor int3 xchg out lret int mov ja fwait mov pop outsl cltd xor negb popa jle jno inc (bad) sub mov mov sbb test inc ret inc ret stos jns (bad) jge ljmp int3 jl ja sbb jno and insb outsb cmp push shrb pop mov mov push repz es jo dec dec repnz out push add mov inc cmc adc jno pushf rcrl popa outsl mov push out xchg mov mov dec scas cmp enter lock fisubr mov (bad) ja xchg pop lock cmp mov cmpsl mov aam aad push mov cs push jl rorl setp add out or dec adc mov mov repz imul (bad) push pop test jmp mov pop cli mov jmp hlt jo cmp cmp cs fwait mov idiv sub or fs jne cmp lahf pop ds pop out mov mov aas jmp insl lods mov mov or out loope and mov fsubr loopne mov pop push (bad) dec ljmp add dec pop mov aad push dec mov cltd add jmp daa mov jae scas add lahf xchg mov xchg repnz jp add sub imul ljmp inc icebp and xchg in js mov inc mov fwait out cs fcmovbe mov cltd stos fmul lahf jno dec gs imul add xor lcall add add add fidivl repz jle daa or inc or nop and dec movl daa dec xchg fdivrs test pand xchg or idiv (bad) mov lock pop roll fstps mov cli orl stc (bad) icebp das push push sub mull cmp push test stos outsb jmp cwtl xchg dec hlt ret add cli pushf addr16 data16 sub lret clc mov scas add add and and iret jle sub into sbb pop jmp sub mov jo loope add andl cmp or mov dec hlt jp xor subl fsubp sbb dec mul mov adc inc sar adc jb into cmp adc push xchg loop jl movsb leave sbb aad faddl add push outsl in push (bad) test xor pop aaa jb and sub mov jl aas movsb test stos cwtl dec sub out into pop jecxz sar clc push subb or std sub mov bound fdivl test push stos sbb test stc pop imul hlt divb fisubr fidiv inc test pop shlb mov xor movsb ds movl add js movsl xchg mov aaa outsb mov adc out pop ss out mov inc pop nop ret sbb sub or xchg lret mov and stc lret inc (bad) or leave mov mov push add and inc xor ret dec test int3 sub inc (bad) pop and ss (bad) es in or fidivrl insl in adc je mov lret cmpsl pop jne lock add add mov pop adc iretw xchg cmp add and sbb imul dec adc pusha mov or std sbb inc push cmp aas (bad) sub cmp dec mov mov mov arpl das roll xchg add adc jmp aam (bad) incl mov lahf jg cli sub fimul add fdivrl xchg (bad) pop test jae adc mov xor fimul and fldl fwait mov lods mov or notb add inc sbb push adc pop push std inc jge adc jae loopne cwtl in cmp jl xchg jae push jle push sbb movsl out sahf aaa je (bad) je insl (bad) rolb adc (bad) jo xchg pop mov aad lcall xchg ret xchg add cmpsl (bad) adc mov ljmp jle test fsin (bad) les dec adc stos mov mov push mov and ficomp mov data16 cmp push dec add sbb mov add jle jo aas xchg (bad) mov cmp dec jbe iret mov enter xchg enter ret mov jp or into jecxz repnz mov add inc ljmp jle iret push or test or cli data16 dec ds sbb je jbe aad dec fcoml popa sub (bad) add pop stc push add enter mov leave (bad) leave fwait cmp mov test pop sbb clc adc ds scas cmpsb fstp fadd push fwait mov (bad) sub adc dec and pop pushf fwait mov jl add mov mov orl xchg loope xchg insl xor data16 mov das loopne mov pop mov mov cmp shrb adc pop mov ss int cmp les xlat jge or lea cmp jmp push lods scas and inc outsl imul add ret add ficompl lahf mov mov fcomip pop sbb cmp cwtl mov mov (bad) enter inc mov sti add sub jmp jo mov (bad) mov jb push xchg repz jge movsl mov and pop jecxz mov xor negb mov lds mov (bad) mov fstpt jg into test pop jge flds mov xlat mov mov xor jmp lods push add adc push adc cmp sbb lea sub out sub xor and mov pop cmp mull inc inc add push int test notb mov xrelease mov inc pop jne or mov mov or mov sub cmp sub add jno jle cld sub pop push mov or aam (bad) dec add xchg mov dec jge negb (bad) xlat xchg (bad) setle or xchg add ret lods les (bad) mov dec mov mov fs addr16 ss les mov pop mov scas cwtl incl fildll add in jg inc mov sbb insl fsubp mov add test adc mov sub push (bad) insl enter frstpm(287 shrb jb mov insl into jmp mov ljmp lds push out icebp mov pop into xor push adc nop test fdivrs pop jno cvtps2pd mov xchg mov lret (bad) pop repz mov add push (bad) stc lahf inc sarb pop xor add and fsubrl rcrl outsl ret int3 push inc push mov mov push mov pop nop and mov jae repz mov stos pop inc adc cmp and dec pop jnp push adc xor lea jne mov addb or iret pop mov mov in inc mov cmp mov lods inc cld inc hlt add add push ja mov lods mov sub mov jmp push rclb sti movsl adc cmp (bad) push mov imull test int3 scas fs dec pop mov nop sub les (bad) int3 lds adc out (bad) fidivrl add cmp fsubr aaa repz pop jb repz fidivrl xchg mov inc (bad) repnz xlat outsb inc mov mov les sbb popf fsubl fistpl mov and jo sahf cmc mov sbb cmpl icebp mov mov out fnstcw jnp adc in push test ret xchg (bad) fisttp in (bad) dec cwtl sub jge xor lea das push sarb push xor lcall loop adc inc sbb push fistp adc sbbb repz pusha mov add or adc or test push pop sub loopne sub fs jne dec clc flds std dec (bad) xor pusha xchg daa data16 xchg fdivs fisubr and xor rcrb bound mov mov xor or jne cmp or or sbb mov pushl sbb lods idivl xchg icebp sahf rclb movsb mull add sub pushf data16 jns mov es xlat inc outsl cmp je ds stos into xchg out jae xchg and push sub in stos push out int pusha and enter mov jmp jmp and incb (bad) adc imul hlt data16 add push sub mov push setp lds mov jecxz iret fdivrs add add dec push cmp xor cmp push fmulp pop push mov mov xor dec aad mov mov (bad) stos inc mov mov and dec rorb into xor adc or mov add (bad) lret inc dec sbb push jnp xorl pop popa push pop imul or je insl add inc xor sbb mov or lret lock mov jge mov loope mov xor adc fldenv ss xchg push popa pop pop mov insl lahf xlat fisub inc les mov jno jl stos arpl hlt fmul int3 push or inc dec cmp push imul or add xchg ret xor and int3 jns add les cmp mov xlat and jle popf mov add sub mov jo,pt pop push int xor xor lret frstor pushf iret lods adc data16 je mov sub push scas sbb push sub ret cwtl mov or add insl xor sti push incb xlat mov push or xlat jge loop in es push dec sahf fidivrl out lock fisttpll lret add sbb js add (bad) hlt sub movsl cmc inc sub or cmp (bad) add mov dec mov mov iret das popa ret mov outsl aaa loope mov scas andps sub and push test test pop in jno mov mov cmp mov incl or lret nop fdivrs mov jae sub mov pop cmp mov add add repz (bad) (bad) fisttpl mov sbb push loopne,pt mov dec iret out jl inc ss fisttp pop out push push inc iret inc mov mov dec add mov fwait inc add mov push cmp mov outsb dec fildl lods testb fwait mov cmpsl mov scas lea and sti add out mov jb and and bound add add adc xchg insl pop sub into cli aaa loopne lret fsts or add add out cmp outsb pop dec rclb push pusha jb jo inc pop ds mov mov int xchg adc xchg xchg inc popf dec ss fimull fxch out mov lcall dec mov mov push mov (bad) iret clc and mov cmp fisttpl and scas jl dec xor mov add dec push leave pop mov and stos inc mov push xchg push mov cltd loopne inc out out xchg jge xchg mov dec aaa cmp cmp xchg xchg dec dec xchg addr16 xchg mov add push and mov push lock out inc icebp lds jno pop rolb int in in dec push cmp inc sbb dec mov add add repz xlat cmp inc xor mov into jae movsb lods mov mov add leave jmp call stos into sub (bad) dec mov push les pop pop lea cwtl adc xor cmp mov popf scas add (bad) cltd xor sub inc fildl sub (bad) push xchg enter hlt sti jno xchg repnz dec xor add fs stos imul add add aas or dec arpl (bad) dec xorb rolb stos mov sbb mov sbbb rcll das mov std jmp or stc push jmp mov inc cmp sub or sub (bad) (bad) loopne mov mov add sub dec xor movsl dec arpl cli sub add sub lds sub mov mov mov xchg rcr mov push dec int dec cmpsl xchg pop and test mov cmpsl rcrl adc (bad) cmp mov mov je sbb add mov std xchg test jge das cmp mov mov inc cmp push xchg push mov sub add aad push push loop aaa inc cmp ds cmc ja mov mov nop sbb and dec (bad) out repz ret in and jmp loope add test push jo out into xor and and adcb jb daa push les repz inc mov cmp roll inc iret lret xchg xchg inc add add jo adc movsl leave sbb fisttp fdiv push mov add inc cmp add adc stc push jmp hlt fsin test mov jmp aad in cmp into pop and cmp (bad) xchg and xchg jnp push or lock add in sub movsl lahf aaa popa fs cmpsb repnz (bad) lods sub jmp jle push scas cmp loopne pop bound add mov xchg pop xor push cmp aas data16 jne dec mov (bad) cltd mov adc (bad) cmp mov in ljmp (bad) fldt (bad) pop inc (bad) jb mov add xchg adc pop cmp ss fdivs cmp inc outsl mov pop iret scas (bad) mov iret pop dec aad sbb push xor cmpsb (bad) (bad) mov push jg mov out mov adc cltd mov push cmp cmp inc loope idivl adc inc pusha mov jns ds icebp cmp cmpsl xchg pop jae lds cmp cmpsl fsubrs (bad) dec arpl out lods (bad) sarb push es mov mov test aam nop push enter mov add inc xchg jb add add jmp and (bad) insb xor lcall cmp push or rorl sbb lret push sbb sbb fwait mov dec std sub adc mov mov adc cmp ss push xchg rolb dec or lret out xchg cmp xchg enter lock pop dec pop arpl dec cmpsb adc arpl (bad) repz pop ds push lahf add cmp (bad) push sbb inc imul repnz les and dec in mov mov movsb adc push mov mov test call sti xlat mov pop fs adc pop hlt loope cmp icebp test push inc aas fs cmp sbb mov mov inc jne (bad) in pop jne pop jnp jo,pt out inc out iret mov and sti stc sbb icebp jbe (bad) in sbb into dec pusha or sub cli mov sub fwait mov inc xor xchg dec mov (bad) cmp sahf mov adc leave sbb out add mov jmp add into xchg jp insb cmp jmp test and and mov mov dec cmpsl lods aas xor loope mov add and mov sbb daa sub push pusha sti mov jne popf (bad) mov aam sub fwait pusha rol in jns fldt aam mov mov and in pop xor outsl cmp xchg ret out cmp fdiv lahf negb or int cmp or cli or push pop add sbb popa push sub dec jge cmp add sub push imul mulb test push jae leave push jo rcl inc outsl mov cli mov or icebp ja mov inc aaa fbld jae aas inc out jae mov mov push push sub mov mov mov mov or mov insl lcall mov in inc xor push or cmpl or xor sub lahf mov add cmp adc (bad) andl rorl lret lods inc sbb jl ret pushf mull ret outsl mov (bad) and push outsb cmp jecxz lahf fsub arpl mov (bad) cmp inc sbb scas test inc aas dec in jecxz movsb fisub test xchg mov fildl mov xor mov add add add mov add enter xor les xchg data16 out fisubr push and mov scas inc xchg pop push (bad) mov xor dec sbb pop inc push movsb es add test lods inc cld push (bad) outsl pop dec ljmp xchg mov sbb shrb lcall aaa sarb dec pop jmp stos inc and fnstenv xor fildll nop push push push scas rorb nop pop mov das cld fist push sbb scas fisubr repz ret jmp (bad) xor aam scas add call cld cmp mov jp push mov xor xchg pop lock aaa sub or mov js fcomi popf adc fcomps jge add in mov out sbb mov call add subl inc (bad) cmpsl (bad) cmp insl add (bad) stos inc sub push add xor xor fs xor xor aas sbb lock lahf add dec pop sbb pop outsb aaa mov and icebp jo inc mov jae test out popa dec ja clc adc getsec popa ret dec pop inc inc out inc pop push jp push dec pop cmp (bad) pop sub and jo jbe imul jmp add pop jae mov add lock cwtl dec lea ljmp (bad) cli push jb sahf lds out lret jg aad dec into fxch icebp das rol cwtl cli ja adc cmpsb daa rcr scas incb mov ret (bad) (bad) xchg mov lods (bad) outsb xchg jno mov push xchg dec sub push into mov mov or push stos mov arpl leave pop push (bad) out push push add mov pusha fs sub jo add (bad) pop pop adc pushf sbb mov shr (bad) xor mov mov and in or mov pop inc and fcmovb lret je xchg dec mov loopne (bad) or adc std lock xor or imul mov insb sbb popf mull ror test fnstcw cmp dec push and add add clc out dec mov xor sahf out mov inc mov scas in inc mov mulb subb cmp mov jmp cmp push movsb xor sub sub mov mov ds dec (bad) scas push fsubs lock xchg (bad) in xchg into dec pusha out dec (bad) xor mov mov mov sub xor enter add xor pop dec clc cmp add push mov cmp mov fidivl jl out xor xchg adc push cmp mov andb scas xor inc and hlt mov stos sar mul inc mov sbb push xor xchg cmp sub sbbl ret or sub mov mov xor mov add add and imul pop cmp shll pop jae add mov (bad) fistp scas lahf xchg jg dec dec push xchg push pop pop jno and pop jmp and out add push les test lahf push xlat jge rcl xchg popf sarl scas (bad) xor cmp sub enter sub mov pop add xor pop into test adc (bad) adc fwait cmp add add imul movsl pop push jmp jmp arpl repz or (bad) idiv adc add jnp lock xor mov dec imul sbb xchg xor ljmp mov out push in dec mov (bad) mov push inc cmp in xlat negl test dec stos mov neg inc inc inc xor scas jno cmpl cmc jl push add add (bad) push jge test mov mov push lcall xor sub mov mov dec dec push inc xor lock mov int mov and stos stos movsl insb faddl mov sahf insl mov dec hlt bound push cltd arpl inc int3 lret insl adc sub jb jmp (bad) sub jns jne cli add add add dec outsl jno js and fcmovbe ret cltd out sbb test push adc loope jns repz xchg popf clc jle scas dec xchg nop fnstcw cmp xchg enter sub mov pop mov mov lods sbb inc xor cmp cmpsl hlt (bad) or and mov adcb test pop mov inc imul rcl or mov ret mov add add add mov push sub mov loope sti push mov in push sbb dec push fs negb mov (bad) mov lret pop les mov mov clc mov xor out out ja addl mov dec push movb push adc sub in icebp jp jb dec aas mov mov ss add es call addr16 fisubr adc push (bad) mov jo in sbb mov aaa dec xor js daa jle sbb rcll mov insb fwait popl int sbb lret mov cmp sbb shll push mov mov jge xchg dec into cmp stos pop mov shrl inc (bad) jb mov push imul mull cmp fsts (bad) push (bad) mov ljmp loope into pop cs inc xor loope pop leavew and in ficom test mov das inc jb sbb fucomp imul xchg xchg mov push jne xchg cmp enter push jns adc in push lahf inc outsl mull dec (bad) not ficomp inc repnz add add lahf mov xor adc xchg jno jle pop jge or lds pop leave int3 bsr pcmpeqd xlat dec xor jmp in inc bound inc cmp (bad) lret push sbb and pushf aad push push loop cmp sub jbe dec fldt call and mov and sti add mov pop push xchg jne and fbstp add add std sarb inc xor insb pop jge popf jb jae in mov xor (bad) leave data16 xor cmp popf jecxz cli lods dec cmovno or or (bad) or push mov imul repnz or mov cmp lods xchg cmpsl movl mov sbb add enter pop (bad) iret sub stos dec mov outsl cmp pushf mov fwait xor mov add fucom jb sbb inc arpl push adc sub dec pop add test push mov out iret cltd xor (bad) not nop addr16 (bad) xchg mov cmp and add and loopne aas mov dec lds scas sahf add popf aad mov mov testl cmp and sar xor orl cmpsl addl add add mov add mov les (bad) xor sbb mov test sbb ret dec out push jbe jmp jns xor sbb aam scas jns cmp lcall push push mov lcall fstl sub dec (bad) mov std dec mov push mov or imul push int int3 mov or mov clc and mov into push std inc or adc outsb cmp (bad) push lds inc loopne fucomip xchg mov incl out inc test sub mov adc shr jne mov les sbb pop jb,pt inc ds leave push mov ret mov cli (bad) pop pop and mov cmp sbb xchg mov mov (bad) sbb fidivr push sti outsl rcr bound and jo or jne or push dec pop cmp (bad) push in mov cmc and jnp outsl mov adc add (bad) mov out and pop rcrl mov or adc cmp mov test cmp scas fisttpll jle ret adc cltd jo ffreep lahf adc imul inc push mov shrl insw sahf mov test mov xchg out sti adc sbb lods fcoms out test notb and jge daa add push xchg sub std adc sbbb cmpsl into xchg bound mov aad lock mov pusha pop movsb sbb dec int movsb sub mov mov cli (bad) push ds jae lahf addl (bad) call mov test add sarb xchg sbb mov push push jnp cli das pop ror scas cmp test enter inc in call test (bad) or mov inc gs push stc adc (bad) test pop push and popa dec jmp and xchg mov cmp pop out or dec cs (bad) insb fwait gs fbld in loop dec mov dec and jo cwtl jno xlat pop cmovp add push imul lcall roll popa aam and inc or andl add insl int (bad) mov stos dec outsb pop daa pusha inc cs push (bad) hlt xchg fsubrl fs dec dec sbb inc cmp and dec (bad) mov aaa pop push sub in jle iret and cltd mov aam les mov sbb int adc and fs ficom int3 mov mov xchg pop mov int outsl mov or mov inc popa arpl jbe lods cmp pop pop lds clc pushf cmp mov xchg sub bound cmp sti xchg or pop ds cmovp jmp add add je jg sti or lss pop sub cmp in sbb sub aad push (bad) jbe pop mov push fst loop mov dec or xchg loop shlb ljmp daa push push add daa jns cmpsb insl int3 adcl jnp adc and (bad) xor ja cmpsb sbb fs add add je mov xchg addr16 ja testl push int cmp (bad) mov in inc loopne mov clc adc hlt or inc (bad) dec jle push pusha shl sti sub cmp lea push mov pushl mov and pop pop inc inc mov adc inc in cmpsb and lock mov adc out and sbb pop push sarb pushf in lcall mov sbb xor add pop xchg popa dec jecxz jg movsb shlb mov jmp jnp push mov popa enter lret insl fwait movzbl lds dec cmpsb ss lcall loopne addb inc cmp mov inc sahf sub cld ret sbb pop stos xchg bound xchg cli pop mov jns int dec enterw scas lret sub (bad) fs add enter mov cwtl or data16 pop and mov lds cld cmpsl mov jbe test pusha js mov clc fcmove xor daa lret xor mov (bad) jecxz mov out pop lret imul lret jp add cmp inc cmp cmp xchg jbe flds push clc insb into lcall bound sub sbb and jo dec jnp fadds add add gs jb mov push mov ret jp icebp or sub xchg dec sarb jp addr16 adc in and rclb inc (bad) cmpsl inc jo mov (bad) (bad) sub mov out imul fwait jecxz sub sub xbegin (bad) shl gs adc das (bad) xor out test and cmp and sub add dec cmpsb adc dec ds xor xchg lock xchg test or out push out dec adc mov mov loope add xchg js fistp fcmovu mov (bad) pop cli cmp mov add jp xchg (bad) test cmp mov mov xchg or jg out into and scas call inc dec push xor popf mov cmp ret stc add fdivrl rol and sti jbe std mov xchg inc dec mov fs cmp ret mov clc lret das jg push or ret xor push jo add in xor jle (bad) cmp mov adc shll sbb fstp aas jp jge lret xlat lds inc add add cld ret pop test cmp add push pop enter std (bad) pop lods dec add sub adc jge mov mov cmp cmp pop in dec (bad) mov mov sahf cmp test insl push ss inc push xchg mov sub dec adc inc repz loop ret notl loop roll jl jne imul pop mov dec xor repz add sbb cmp add push movsb in out in xchg (bad) dec adc push cltd jo lret pop push lea dec jmp in clc (bad) ss inc push jb rcll popf sbb inc mov pop int stos es pmaxub inc push sbbl mov fs jecxz push xchg (bad) jbe movsl xchg cmc je cmpsl lods test cwtl popf jmp inc lret movsb iret mov mov pop mov repz xor mov add jb ret faddl jg adc mov xchg int3 rorb out xchg push sub push aad mov inc cmc jp roll cmp mov cltd or sbb aad and jbe xor inc pop cld push inc (bad) nop inc jnp,pn mov fdivrl mov push (bad) js inc cmp and in pop inc adc mov cltd in and (bad) fdivs add ds and mov insl cltd pusha xchg xor sub jo xor hlt mov cmc cmp dec stc mov fsubr ds fwait sti fcompl shrb mov (bad) leave test (bad) lahf pop xchg mov (bad) add and dec jge sub push sbb mov lret xlat aaa sahf mov mov xchg xchg in aam mov dec inc das ret mov scas and (bad) insb mov sub rcrb in add push jne or add test or dec shlb rcll push nop jae aad sub fsts pop mov add ja mov (bad) enter mov clc enter dec add add adc jle ret test scas jno inc ja adc xchg js and mov (bad) inc imul leave bound arpl sbb outsb lret in jmp add repnz cmpsb or inc jp cmpsb xchg jle or pusha dec scas faddl in cmc mov pop (bad) fwait pop das xor mov adc push out enter rorl pushf sub (bad) or mov test add scas les cltd leave in inc jbe jl sbb lahf xor ret hlt repnz jge xor sbb pop cmc jno inc adc scas fdivp mov les adc cld ret jecxz inc incb (bad) jno ds jecxz clc mov (bad) jno in inc cmpsl add jge fnstcw dec mov jge xchg cmp add adcb sbb sub add jns xchg enter ret outsl movsl mov and js (bad) jne push rclb push push lret sub xor fdiv jge rcr pop jbe mov cli cltd push jl xchg mov je pop cmp and jne xchg cmp inc pop dec sbb push and push lret arpl push inc (bad) jnp mov (bad) loopne pop mov (bad) jae ds ficoml cmp cltd das xchg (bad) mov aam dec out push dec and andb adc jo scas cmpsb sti clc xchg movsb mov je scas or xor jg cltd (bad) fmul sbb outsb imul cmpsb enter jle pop stos inc orl cmp lret mov (bad) lods mov sbb fcoml int sub jbe outsl jbe addr16 pusha dec test jne scas dec adcl push dec sahf fcom mov std lock add push mov in cmc mov lock or leave mov and data16 pusha xor mov les mov pop sbb ret repnz adc lret dec fdivrs (bad) pop and sub sub mov scas fs mov jmp ffreep mov sub mov xchg ljmp jbe cmp (bad) ja gs mov sbb shrl test iret xor push cmp push cmpsb xchg or pusha rorb ja add les daa xchg cmp push (bad) cmp add sbb push mov imul mov jae insb inc mov mov mov inc or test pop jmp les add movsl dec xor lods xor mov into int3 stos add (bad) dec dec cwtl jg inc pop loop mov sbb test add mov adc int push sub pop repz jne into push mov aam lcall dec or push les test (bad) js xchg repz loop pop outsl xchg les aas dec adc mov cmc in out cmc inc push jne or adc inc bound push and (bad) pop ljmp add lret lods xchg jp mov lret jbe mov stc xlat add jbe dec orb mov (bad) mov stos into inc (bad) pop mov mov xchg push xor mov movsl mull stos or lret daa mov nop mov sbb lds pop pop mov pop cmpsb mov leave mov add push ss cmp pop (bad) clc mov mov les mov andl xor fldcw data16 ficomp jge movsb leave sbb mov pop dec test out xchg leave and cld (bad) int jp and je cld mov fcom push jl cli xlat stos aaa call xor pop mov mov loop iret push loop (bad) stc jb daa test dec mov out inc andl fadds mov sub sub shlb mov xor in sub lret mov sbb inc sub pop lcall sub leave in inc xorb cs inc pushf dec and loop lods (bad) jo or (bad) mov (bad) test sbb add mov inc push xchg cmp push aam rorl jmp cmp scas fisttpll arpl outsb cmp (bad) mov and push iret imul inc cmp out test jp cmpsb xchg mov fdivl xor sbb fstpt std iret cltd xor cmpsb pop aam test mov xchg sub shr mov mov jp push sbb jb das mov jg (bad) in lds das cmp jae mov mov mov xchg or inc mov pop lret pop mov stc mov orb insl mov add xchg stc rcl push je orl pop fisubrl cmp pop lret xchg (bad) std sahf (bad) mov sbb lock mov mov loopne (bad) aaa les lret dec mov jge mov add inc cmp cmp test mov scas or mov imul sbb and lock xor adc add add cmc push loop cmp scas icebp and inc sarb or pop mov mov push pop mov lret inc mov stc (bad) push imul mulb jge sbb jb sub inc aas rcll mov ffreep push jmp dec push sti repnz cmc jo dec xor stos ljmp jg daa fisubl mov add add imul lods aaa mov xchg gs fsubs icebp jbe xchg pusha xorb arpl xchg sbb xchg push fwait call inc jb (bad) (bad) rolb aaa xchg pand call inc stos sbb mov jl test out push jl mov adc push jp in subl or mov xchg sub inc mov (bad) scas mov fmulp xchg ret in (bad) jmp add add cli es sahf out ss xchg out imul dec adc cwtl mov test es mov cmpsl dec (bad) mov or aaa arpl inc jle rolb dec pop insb jo popa jecxz cmp jg iret lea jmp xchg repnz cmc cmp repz outsl ja lds in adc negl ljmp or inc stos sbb test out add pop faddl das stos and das adc mov xchg mov adc cmp push stos cli mov mov push cmp mov cmpsl mov inc inc push push push imul mov es pop aam cmp and xchg cli ret orl or not stos add inc mul jle mov cmp push les cmp jbe inc jnp arpl add rcr clc mov mov repz ret push std cmpsl add adc (bad) aaa out insl lahf push pop lahf lds inc push cmp int3 jle sbb aad xchg int (bad) mov aad push imul mull push xor xor or xor clc inc call inc dec repz xchg out mov inc mov cli (bad) and sbb fs movsl ss mov js daa mov fwait mov sub add or and xchg and pusha xor cmc and cmp int movsb mov mov xor mov stc cmc jmp leave mov push inc dec jmp mov pop or add pop rolb lock repnz jge or mov xchg jp pop dec mov push sti xor iret jo add add inc ret dec mov or or inc mov je and js dec xor xchg cmp xchg jp add jle jne insb das (bad) lret cmp mov adc (bad) or and lods push popa jmp and nop popa or jne mov push and mov xchg aas cmpsb (bad) fstps mov pop ds lea (bad) in inc sub pop jge xchg jp add fldl add adc lds inc dec in push jns popf je add cmpsl dec mov int jae fcoml jnp sti mov into aaa xchg mov adc lock inc dec ret (bad) sbb mov mov (bad) inc mov lods xlat stc fwait into push mov or jae mov mov dec mov mov sbb add mov dec imul xor fldcw push mov ja cmp xchg and dec adc cmp cmp inc imul push jae imul or inc dec in mov xor ja sbb (bad) inc daa insb scas mov scas int (bad) mov into and ficom fistpl cmc add xchg add lcall fdivrl pushw lcall lcall test aam dec loope sub pop shlb mov movsl jp pop aaa imul daa out imul out and pusha rorl sbb pushf mov mov pop ljmp cmpsl (bad) in add pop xor movntq mov inc inc xchg jl aaa out aad or adc pop jmp mov add add cmp movsb imulb or sarl fbld inc xchg pop pusha adc popf dec xor (bad) push and aas popa ret mov popf inc stc adc cmp mov xchg cli std dec fsubrl sbb mov insl add lret jb jge mov sahf cmc mov (bad) cs xchg pop (bad) popa dec dec adc fstps repz inc (bad) loopne push dec jmp pop mov lock fidiv inc ret insw add mov shrl out mov push mov jle cmc cld or jmp jge add jo repnz pop or sub and xor push stos lods inc pop adc fsubrl xchg xor mov mov rclb lret mov popf mov adc mov fwait les add iret out add add adc xchg add xchg xchg adc leave call jbe cmp fist inc sbb push lock inc aam sub mov jns push movsb jnp inc lret js push bnd add adc cmp mov and xchg dec rorl pop jecxz add inc cwtl cmp add ffree and mov fwait jg xchg into test inc add lret daa mov imul add sub int in pop shl pop jge lret lcall dec xlat mov cld jae scas mov jp mov iret fdivr pop ljmp mov push sarb fcmovnu jae lcall nop push jb js cmp add or xor jnp push push jo xchg mov inc ja test lret inc insb cmp xor sub or dec xchg imulb and sub xchg cmp mov sub (bad) adc je test mov adc push mov cmp repnz jp dec fidivl ds cmpsb push inc xlat sub inc xor test add add inc xor ret stc mov pop out sbb adc pop ss iret pop pop nop imul icebp das fist inc xor sti daa clc aam rorb (bad) dec lods push push cmp repnz testl mov push ljmp push inc shrb sub add jecxz roll std call add cmpsl mov scas (bad) or testb mov lods xchg les or cmp mov jae addr16 mov mov add or mov jne lods pushf adc shll fisub pop out pop mov dec xchg push std xor mov int jbe add dec pop mov test enter lahf in cmp (bad) outsb adc jle sbb add add popa sbb inc lcall arpl jb push xchg push (bad) test pop mov dec dec jne xor jo out insb test cmpsl add insb and inc lea add call dec (bad) xor sbb sbb pop adc dec push push mov test and xchg mov dec jo negb xor add jo fsubl or nop add dec lret jg mov fnstcw or jno stc cld dec icebp popf push xor es jno push jge inc loope xor jne xchg jmp xchg fs ret jns jge cs and dec lock pop and hlt mov nop lods outsl mov cmp aaa and sbb jbe mov dec mov int3 outsb xor sbb xor js insb push addr16 sbb (bad) roll add cmp (bad) icebp mov ficom negb ljmp test inc and cmp mov cmp mov (bad) fsubrl pop pop (bad) ret inc push das addr16 aam dec sub xchg push push imul push xor lds jae inc outsl mov shl stos popf dec dec hlt jl lret lea push xlat sysexit test sbb add (bad) and pop fsubrp mov mov pop mov or add add das (bad) lahf adc mov into mov adc pop (bad) mov pop push push (bad) pcmpeqw sbb mov das mov xchg bound orb mov jae call fcomi xchg scas fdivs adc cmp dec rcrl jno jno scas out jmp fwait das rcrl in pop (bad) cmp inc dec movsb push jmp add (bad) insb js sub pop add in cmp cmp pop sub jns and fisubr mov pop mov in add int dec xlat out sub out jg (bad) pop mov mov fs (bad) repz in cmp out mov (bad) xchg aad inc cmp or div test mov arpl movsb (bad) pop jae add jb clc xor fdivrs negb add mov dec dec pop xchg add int add lcall ret ret add lods sub dec cmp cmp sbb sub xor dec and xchg mov mov nop hlt adc ds xchg dec leave fs std stos sbb pop repz imul and popa dec inc gs adc pop cmp cmpsl cltd mov daa or add mov fsubrs mov in fsubp jge cmc mov (bad) xchg (bad) mov mov rol pop ds sbb jnp loop mov call lods mov je adc sub cmc ret aam inc addb test rclb push xchg imul aam popa incb mov mov xchg mov int pop mov pop clc adc jae out pushf divb into jge int lea test and outsb test icebp inc sbb push (bad) cmpl mov je mov sbb aam (bad) mov xor jbe and jecxz in shrb inc adc or pushf xor or or cmp ss icebp push push dec jbe sub sbb lock mov rolb fwait out xchg icebp fisubr adc scas stc inc push aam dec incb pop jecxz test loopne xlat cmp incb lock mov push loop xor add jmp ss cmpsl mov std movhps outsl jno xor scas mov roll adc dec xchg cmp adc jb sbb push fnstcw imul fwait cmp mov push mov daa jle (bad) popf sub add into cs jge add imul bnd fwait xchg mov testb mov (bad) push shr jne cmp cmp idivl inc mov and add dec cmp cmp mov or dec popf aaa mov push rcl pushf add pop fsubl icebp mov mov repz scas popf jmp mov jmp sbb mov pop add add mov enter pop inc (bad) ja jle ss fnsave fisub cmpsb xchg push and add js pop sarl push cmp or add cs test sub mov out adc imul shrl mov jle pop xchg add popf sti mov popa sbb in outsl imul xor or xchg out fs pop push sub mov enter shlb inc decb fsubl insl fnstsw pop jne bound add mov shr mov mov ss push pop (bad) cmpsb sbb jnp add mov fucom mov div or xor fadd xchg mov (bad) pop mov imul bound icebp cmpsb leave sbb add add xor add ja sbb mov outsl cmp mov mov icebp xchg cmp pop mov int pusha stos mov movsb mov fistpll xlat pop outsb mov inc (bad) xor ret pushl inc out inc mov loop and adc jae out in imul mov cmp mov inc jbe or fwait mov cli daa xchg xchg scas jle lock dec mov cmpsb mov xchg (bad) fild sbb xchg (bad) repnz jno ret inc int3 dec (bad) in cmpsl cmp (bad) mov sub jmp mov (bad) inc xor stos pop push fs mov cs out in mov outsl aaa jle (bad) sahf pop and in pop xchg aas mov sub es jmp xor jne or jmp add dec rcrb jp insb rol mov inc inc jno sub cli mov addr16 cmc push nop xor xchg push (bad) push stos jmp fsubs xor sti pop out xchg mov aaa outsb fnop push pop pop adc pop iret pop pushw adc mov mov cmp lods jge xchg call or xchg stos sahf sahf dec outsl es add and mov jo into jne adc add add pop jecxz adc push int adc outsl inc pop and in jle push faddl loopne lret cwtl inc scas enter js mov or mov pop daa jge adc xchg repnz xor xchg mov push psadbw mov sbb mov jge jb mov lds and and loop jl (bad) ss pop jmp pop push mov add mov (bad) iret cmp ds cmpl push hlt stos fildll outsl imul dec fstpt lret sbb inc rcrb in stos fmul cmp fist sub outsb mov jle xor jne cmpsl and or push xor sbb mov mov insl fwait nop test loope hlt (bad) jecxz push pop inc fild add pop mov jecxz jae mov mov mov xchg sub cli arpl gs outsb rcll sub pop fs hlt int3 add jg push push cmp xchg adc cmp mov dec push xor push sahf jmp stos into divl lret sbb inc outsl mov push scas and repz das fsubrp addr16 pop mov jmp icebp fistpll lret pop sub xchg push je mov in stc add or pop lock cwtl mov lock inc addl jmp fcomps pushf xor push negb popa fstpt ffreep push push dec sbb mov adc sbb decl int dec std das mov mov popf adcl inc sub sub pusha aaa insb shrl add mov push inc outsl mov cmp mov mov sti push lds sahf xchg mov and add mov xor fs xor lcall or les inc dec (bad) push mov sub cmp xor jg iret xchg push (bad) push movsb jmp fsubs xor sti pop out je in mov out cmp rclb adc mov cvtps2pd add pop sbb fldt inc lods icebp (bad) xchg add sub dec jae pop cmc hlt cltd inc jno add mov fildll xlat push inc mov mov inc (bad) out mov into scas xlat mov (bad) jb adc jl push push outsl xor xor jmp fcmovbe jns or aas ja pop out es jl aas dec pop jb cmpsl sahf int3 push push add add fstps cmp (bad) cmpsb mov (bad) pop pop and mov divb push test (bad) mov fcoms or add and xlat sub icebp (bad) icebp lods jge jmp (bad) icebp lahf sub jae nop fldcw test leave jmp inc cmp push in pusha pop push and fbld out push pop aas mov push movsb add dec test outsl jmp lret daa pop insb pop popa lret mov jnp imul or lods repz movsl loop jns arpl shrl decl addr16 dec rorb and loope push insl mov xchg imul lock les gs fimull cmp ret test std sub or incb nop fnstcw add add add add dec das lods clc jmp outsl rorl mov jmp pop cmp push mov push sub lcall es mov cmpsl push add jle lods rdtsc xor ljmp nop jmp sarb push xor dec cmp inc movsl xor jns cltd loop loope out pop push ja (bad) ja jno sarl int in or add cmc push dec adc movsl mov jae mov or rolb in aam insl imul sbb push fildll cmp and lcall mov popa imul icebp pusha mov mov test std imul xorl xor jmp jge dec or sub (bad) push jge std jb jnp mov fstps hlt shr add mov sti subb push cmc (bad) or adc cmp pop clc mov jl mov addr16 sbb (bad) imul out xbegin sub jmp nop push jnp leave push jo in fldl out xchg ljmp pop out and push xor fimull add add lret repz adc pop stc test add daa mov mov push aam rorl jge lret inc imulb insl mov les (bad) cwtl fsubrs push xor pushf loop out shrl cmp mov xchg dec sbb insb lahf mov or (bad) xor std cmp sbb lods fcomip imul mov out repnz (bad) add jg jb add fs jmp sbb outsl es pushf push jo mov push int mov loopne pusha mov popa inc cmp sbb callw pop clc sbb orl nop andl sbb pop in inc adcb and inc jne mov je fucomi mulb pop fnstenv push cmpsb incl push in lds fdivl ds cli (bad) das mov and push ljmp pop mov lods inc sahf mov arpl decl lret movb ja add rorb cmc lahf iret je jmp sbb jno and jnp aas adc out inc push scas cmc scas xlat lret es enter mov dec sbb lret xor sub in jle jecxz insb or mov xchg jmp add insb enter (bad) jle push push or sub push lea xchg je add pop (bad) dec sub aas mov in xor iret fdiv fucomip pop imul sarb out fnstenv mov xor or mov stc pop mov inc xchg adc (bad) or sub (bad) (bad) cmp out mov divl faddl inc and inc mov cmp mov fidiv or or add add push push mov adc fwait xor sub in cmc int3 movsb dec std into fmul cmp dec push out test ror divl mov mov mov add pop leave loope push sbb dec call outsb fdivrs jmp mov fistpll cmpsl dec sub (bad) cmp add ss mov dec fneni(8087 out dec movsl sbb jp push cltd dec sbb or out xchg jl sbb repnz sti pop in jne cmp int lods or ss mov sub cmpsb (bad) inc rcl xchg xacquire sub add jne lds push xorl lods and sbb inc add into es mov mov jge mov xorb into xor (bad) leave data16 clc mov add mov jecxz mov (bad) add lret pop cmp out pop jge or lahf mov xchg push rcl mov mov cld push cltd ret xchg push ja mov pop cld xor ret mov mov mov xchg jbe mov pop ret mov sub pop xor push xchg out mov cwtl inc jne sti add jno jae movsl fsubrp fildll pusha (bad) pop xor lods (bad) inc (bad) or add add jnp jnp je dec pop out xchg inc aaa cli push lret inc icebp stc (bad) lods mov call mov push imul xorl in ds ss dec notb int mov in jno cmp inc inc (bad) cmpsb mov (bad) push aad or movsb adc cmp sar push inc mov out pop cmp mov add add mov (bad) ja nop ljmp cmp mov daa sbb fcom jle fs (bad) mov insl inc test mov repz (bad) addr16 or rorl in adc mov les leave xor fisubr ds mov jle pop xchg gs push add push dec sbb negb xchg call jb in dec sahf mov roll pop jecxz xlat add pop fnop cld xchg sub xchg icebp lods jge lea or movsb lahf mov lahf pop aaa pop xor or xor cmp mov stos into imul dec roll push pop push sub push sti push adc push (bad) mov repz cmp lret jno test and add (bad) sbb jge loopne jo daa xor rol and jg in jecxz jg je movsl mov or mov pusha jmp or sti and adc mov lods dec mov push enter lock mov xchg mov inc test jl xchg jmp mov scas fstps test rclb stos or mov fdivr cmp out ds test cmp iret push ljmp je xchg pop and mov movsb push (bad) cltd test push dec xor sub cmp or stc pop and hlt mov (bad) mov adc sbb mov aas xchg ret cmp shrl inc popf insb mov dec mov nop rorb nop xor jae leave sbb mov mov dec pop in inc add ror ret adc std jb sub add add xlat (bad) adc sub jp mov mov out cltd repnz cli adc (bad) add mov dec sbb aaa sub ficom xchg fwait in mov inc aam xor mov loopne sub jle into fwait jo inc jge push cmp es push mov jbe loopne jb bound rcl mov adc jnp fwait jmp arpl dec test loopne outsl dec popa push pop and cltd daa add inc sbb pop ss test decb sbb rcrl sub or xchg lahf lahf xchg add lock (bad) and fs lds inc test andl xchg xor jecxz mov jns and mov test je,pn xchg xorl push call imul test test lea jle out push jb mov mov cs xor dec popa rclb lea mov mov aas lock imulb (bad) aad mov (bad) andb xchg (bad) add int3 push mov inc in js mov mov inc cmp arpl fdivr push xor add je addl pop cmp cwtl mull sub push mov jle and add dec frstor ss pop pop push mov fdivs popf adc sbb popf and loope negl imul aaa pusha lcall addr16 mov test mov sti rolb clc cwtl popa cmp es adc xor mov sub ss mov loopne lcall rolb jl pop loop aad or jns pop jmp add add or jb dec btc das aaa jne xor in jg mov adc push je mov fwait jg and aaa mov pop lret pop mov mov popa xor dec fsubrs pop sbb mov insl enter ss (bad) fisttpl js mov les add mov jmp mov mov aad and xchg dec add dec push inc cld inc xchg push cmp mov in aam leave call daa or jle adc cltd jo call stos jg cmp mov scas mov fwait add cmp xor aas ja xor dec sbb into mov pop repz int sbb fsubl adc (bad) arpl adc pushw test cmp pop stos repnz add sbb int3 ret push xor xor repz and mov out cmp clc add movsb mov mov xor pop mov adc (bad) lcall (bad) xor mov jb inc sbb jle int stos push rolb loop arpl jl adc call dec jno (bad) mov inc xchg addl mov cli es sub inc inc lds sub pop jecxz rolb add lahf cmc add int sbb fsubrl icebp mov inc push sub add out pop mov push sarb (bad) lods movsl jbe inc mov mov (bad) rclb bound push in loope loop loope lods cmpsb xchg test cmp cmpsb (bad) xor adc cmp sahf pop stos bound pop lret pop addr16 inc decl aad aas push shr dec add pop dec pusha std jl loopne repz or push add fs (bad) (bad) ss adc shll ret add pusha insb jns lock push sahf cmp sub std int sbb xor mov pop clc pop mov xchg fildl dec jns popa jmp sarl (bad) cmp test arpl in mov lds pop xchg xor cmc and imul nop mov negl xchg xchg adc dec mov add add mov aad mov and popf cs loop cld sbb pop lock mov xchg psubusw (bad) lea add or cmp jg cmp (bad) paddd pop jmp cmp add push mov ss mov cli inc xchg inc arpl inc fwait and orl icebp in jae sbb pop jmp sbb and xchg dec lret xchg int arpl xor sub sub mov test mov cmp sbb les add call out pop lds mov mov mov mov or js xor outsl inc lret mov push data16 dec xor sti or mov and adc (bad) mov sub aaa fadd dec insb loop ret outsl push mov gs fxch push add inc in das out sub or stos add add pop adc mov popa dec cli adc (bad) jnp frstor in add es (bad) mov cmc jp,pn (bad) mov (bad) mov adcb pop insb inc call dec scas cmp sbb mov (bad) (bad) push in in cwtl loop pop mov jb mov mov jne aad das and je mov scas cmp adc lret jle inc imul pop fbstp data16 add pop int3 xlat sub icebp inc mov ljmp and inc repz aad push outsb lret leave jmp mov out cmp lahf out jp pop sbb inc cmp loop (bad) xchg sbb (bad) mov or insl fwait pop addr16 rolb dec pop insb jo popa sbb fsubrl iret lea jmp xchg repnz cmc in push push (bad) jecxz test sub icebp mov pop outsb inc lea xchg sbb jbe push lock andb pop neg das imul jecxz mov cli jle bound xchg adc nop mov pop xor add aas mov inc xchg push push pusha stos into pushf mov mov inc mov sbb fimul dec lcall and add xchg dec jmp mov mov pop jbe aam push jge cltd (bad) mov jns ss mov gs sbb mov out pop push jecxz bound data16 (bad) xor nop iret sub mov (bad) mov mov lods mov (bad) out les mov fs cmp orl xor inc fwait add popf addl add and fidivr mov mov mov loopne sbb xchg dec popa adc fnstcw fbld in test fwait xor pop clc mov iret dec sub cltd mov js mov arpl lret mov pop insb inc mov hlt push shrb or xchg out dec inc jle xor loop adc mov pushf ss sbb jge dec lds cmp inc adc add mov stos jp xchg mov mov cmp jge sbb jp ljmp loopne (bad) ja sbb scas push fcoml sub jg xor aam inc adc leave pop sahf or pop ficompl fstp push xchg scas inc lods and fucomip push sub outsb mov xchg (bad) mov aam movsl test jbe pop nop mov cmp sbb mov sldt add imul pop jne dec cmpsb adc jg pushf (bad) shrl xor aad jae aaa iret ljmp lahf popa inc mov pop lret dec mov cli xchg je das stos sub cwtl scas xchg mov mov pop jb test rolb lds xchg cmc lea sub addr16 ljmp push xchg subl stos and dec cmp mov and mov in pop inc adc int push call test aam dec aam (bad) mov scas push lcallw push sub cld ret repz in scas mov aas mov mov mov mov dec jnp dec cld lods cmp xchg inc xchg dec sahf xor mov sbb popa insl xorb sub mov sub mulb add pop cmp push es std jg mov gs lret leave fdivrl pop pop stos inc push push fimull fadd mov fs dec inc ss mov mov int xor jo jnp popf sub incb pop or stc pop inc jbe cwtl inc mov iret jns mov push pop push mov test icebp mov ds popf js or add add cmp enter adc xchg rep leave mov jb jbe sbb jecxz or mov call or scas testb fsin test lods add imul rol test pop xchg jae cld (bad) test push lds jbe inc dec frstor test mov cli mov jbe xor arpl mov roll (bad) push or xchg add add lods cmp inc xor mov xor xchg iret bound sbb aas mov jmp push negb and movsl (bad) in cmp pop inc dec cvtps2pd leave mov push test jb sub or xchg je or xor lret push add and xlat mov stos inc lcall dec inc stc loope cmpsl add add mov lret out enter add mov and loopne cmp add adc aam push roll aaa iret stc jbe es jno arpl movl aas jmp ja fucomip or scas add jne out or lock cmp mov pop lret dec pop clc mov sub adc mov jle repnz add add or xchg movsl into adc mov outsb add lret sub stos ja dec outsl cmp lret out pop mov loopne ja fs imul pop repz (bad) mov lods or aaa and mov gs xor mov cs fnstcw enter xchg dec scas insl push cmpsb or aaa lock push in cwtl loop loopne jecxz push insb clc mov fs add add add add pop push (bad) push in sub pop fwait sbb cmpsb imulb sbb gs psubusw (bad) lea add push jle,pn pop adc jnp mov bnd bound xchg adc (bad) iret push jo shll dec cmp fistl in pop mov sub and and lcall in insb rcll fimul sbb popa pusha pop jne cmp add add cmp xor sbb sbb mov xchg xor (bad) fistpl in jecxz imul cmpsb std push jl gs aas loop cmp ret sub dec ss (bad) dec bound incb or add decl data16 add push jg repnz repz push ss or xchg adc aam nop mov mov orl aas clc sbb jecxz inc mov add arpl inc cwtl sub mov cmc and (bad) rolb movsl fisub mov xchg inc lock into pop gs push add mov adc xor push sub scas std add mov into xchg mov shr xor dec data16 or orl ljmp pop sub inc imul (bad) pop lcall add add adc dec test xchg jb jmp push dec mov int xchg pop pop mov xor sarb pop into (bad) call xchg iret and sbb int and popa dec sub in std comiss call fwait mov pmovmskb dec fsubrl xchg (bad) mov imul int3 cwtl imul sbb shr add add add inc adc add gs jne ret cmp mov (bad) js push jbe imul mov rclb rcl add push mov dec mov lcall inc leave fs sub aaa xchg adc gs orl fstl out mov xor mov aaa mov repz (bad) add push pushf lret fstl pop jne int3 cmp mov sbb mov xchg push xchg cwtl lcallw pop lods add xor sub cs pop mov pop lcall add cmp ja lock mov push fdivs xchg mov sub sarl xchg repnz in mov ret scas inc jmp (bad) fsin test lea loopne ret mov add dec sub add mov stos sub mov pop mov ja push lds adc adc xlat pop in jle jp fimull insl hlt std lock xchg mov int3 mov inc mov mov cmp (bad) mov cmp es mov push jecxz pop jae (bad) mov mov sbb push adcb cmpsb das inc mov cmpsl iret add add mov jae imul inc inc nop cmpsl dec xor imul or add xchg mov push inc cmpsl in inc int adc cmp cltd ror outsl adc repz adc pop mov ret add lds sbb leave aad aaa mov adc jo add cwtl gs or inc fsqrt dec pop cmp mov les out xchg enter aaa xor add add xchg arpl pop stos xor bound in mov insl lods jbe pop push iret fsubrs xor ljmp fdivrl ss xchg cvtps2pd add and mov jne das fcmovbe xor dec dec (bad) stc push push (bad) mov add test adc nop push ss push jbe,pn es lahf out push fbld (bad) jo frstor adc push aas movsb xor add in dec test mov insl mov xor mov decb cmp sbbl cmp sub xor mov cmc cmpl mov mov imul fistpl stos test movsb push jge cmp mov ret out inc out lock (bad) ret inc test xchg cmp pop mov jle xchg push push imul add xor ja dec outsl cmp ss or mov out mov inc cmp test cmp dec xor cltd mov sub clc sti pop mov popf pop jo aas pop xor iret imul in cmp xchg mov daa imul jbe mov cmpsb (bad) pop mov sub ss ds fcoms in mov add push dec sahf loope rcl add mov pop mov addl (bad) add stos adc outsb and mov (bad) sub lods sti add mov in stos mov loopne mov fbld shrl lcall test pop sub pop or mov pop sbb iret imul in sub add add and arpl sub cmp into mov push cmpsb ljmp mov insb test (bad) or dec (bad) cs mov rorl add (bad) out lcall ret inc lret and push inc jp stc jl push add sbb mov imul inc pop jno lahf test stos (bad) mov or imul add gs jo fidivrl mov testl sbb pusha mov mov xchg xor mov mov scas cmp aam mov mov push mov cmp cmpsb std pop and mov scas xor cmp xchg push jge cmp mov ret out pop out sbb nop sub (bad) das mov or mull mov mov (bad) insl lods outsl cmp push jecxz rorl push lahf mov inc mov and in jae fbld adc jle rorb arpl xor test or lahf imul xchg mov ja push cmp loope in mov xchg pop cmpsb inc ja ss inc push iret mov xor pop jmp xor xchg mov cmc or into out jl and sbb (bad) adc imul lock mov push or sub pusha mov lea cmp mov das sub leave jmp push push xlat aad push push mov mov stos inc imul fsubl icebp mov mov repz das xchg jmp mov add adc out jecxz mov ror inc xor ret inc inc jp outsb scas jecxz push cmp xchg (bad) push mov cmp mov fdivrs mov push ljmp aas (bad) sub imul out lret test inc lret jmp fwait dec sub and dec cltd pop adc in hlt and lret xchg mov mov inc sar int pop cwtl sbb lret mov push mov (bad) movsl and xor in jle test mov push dec dec push mov add inc mov sarb lret jbe mov pop add xchg mov adc jnp jg jmp mov inc cmp out repz sub pop jge pop jbe movsb mov sti (bad) lcall mov add insb jecxz sbb mov push mov fwait test std les jnp imul test (bad) mov (bad) xchg out cmp and in test or mov pop mov mov out push js jno xor mov dec scas cmp push jnp jne lock mov jecxz dec push inc popf add add add js sbb mov es pop enter int3 mov (bad) cmp jge inc movsl popf cmp inc loopne cld jl mov inc inc (bad) cmpsb dec xor std dec add in rorl (bad) pop push and int3 mov (bad) xchg jne inc push inc stc fs stos aas fbld pop repz xchg jne fisubr or push arpl pop xchg jb mov scas stos fs (bad) data16 imul int3 pushf dec mov dec scas imul mov addb inc adc int3 mov sahf das gs dec iret repz dec popa push lock inc fnstenv xchg fidivrl pop fdivl inc mov push sub cmpsb jns rcl sub aaa (bad) jne stc push add fiadd je (bad) lret sub adc sbb pop xor add movsb sbb adc ljmp daa or sub or and aaa mov fisubl mov int xor cmp xchg xchg adc dec pop sbb or pop aaa xchg enter scas sub subl (bad) jbe mov or sub pop btc jecxz roll push cmp maskmovq negl adc cmp fisttpl fs xor icebp (bad) jae add add mov jb pop int mov rcrb fldcw inc inc push xchg popf popf movsb roll nop push mov and mov add jmp into stos es lahf out ss outsl mov mov (bad) (bad) stos cmpsl fs inc out aaa mov jbe push lea cltd cmp aam pop xchg push jbe xchg mov and mov stos fbstp mov dec jae cmc and push and scas mov sub es notb lods dec insl dec sub pop int mov and mov inc (bad) lret or int movsb adc stc push add mov fbstp sub jmp mov mov negl or sbb or popf dec xor sbb out aaa repz add (bad) xchg xchg jge xchg insl test stos fisttpll aaa pop mov insb inc adc clc cmc mov aam mov xchg push int3 dec popa lods xchg pop lret xchg icebp jns in std sarb (bad) aaa (bad) loopne fdivl es cld fs repnz push lret adc sub xor jnp les push arpl mov out mov sub mov pop and lret outsb cmp add mov fdivrl aaa push int3 cmp jmp xchg bound icebp add daa jb mov cwtl push pop jle cmp sub jns andl daa mov aad loope dec lds rolb lock jnp dec pop pop jnp xchg movsl insl (bad) xor and orb push arpl clc mov fwait testb stc ret add insb jecxz add add shrb fsub fstp and je jns inc data16 in nop jae dec jns pusha jg and les inc (bad) sbb pop sub xchg mov sar insb rclb push sbb xchg int cs lods mov lods loope mov mov push movsl and cmp sub or sub jmp pop lcall jg jnp (bad) out xchg lcall add or inc adcb (bad) adc mov jae flds jno mov out xchg cmp mov xor aad xchg pop add (bad) div fisub sbb sub aaa inc nop scas (bad) (bad) scas jmp sub or repnz fnstcw std repz jb dec (bad) movsl ds mov push in leave xor dec sub inc jb push mov shrl dec js add out es push cwtl imull test lods iret in fnstcw test and pop jbe push push push xor pushl jb sbb and push mov insl dec cmpsb xchg mov xlat mov mov aad addr16 movsb xchg data16 lods (bad) imul jbe jp psubusw mov in imul jne pop inc cmp roll add dec mov imul jns inc outsl push and inc (bad) mov stos cmc jecxz pop sarl push and mov sub test pop push decl xchg pushf ljmp movsl cmp add or cmp xor jbe fiadd xor js sbbl insl ja lock aad jg jns cmpsl imulb mov push mov jl push dec sahf mov mov dec or jmp mov sbb jno loope xchg jb or lods notb push imull mov cmp mov popa adc inc into pop mov lahf aas inc inc mov dec add mov sbb or fcmovu daa or adc popf out add ret mov cmp mov add sbb dec fldcw and jb lds jge test mov dec rcrl push mov mov mov fstps push dec hlt mov arpl xor std dec enter hlt aam dec (bad) icebp aad das jmp mov dec lcall mov popa and vpunpckhdq jnp test stos test ffreep dec xlat xchg fs sub add addr16 cmp sub xchg adc mov dec inc sub adc rdpmc movaps sbb pusha fs and les incl mov ljmp inc sub pop sbb xor lcall sbb cld mov pop and ja aas add out pop ds pop lock negl call ret jge int3 jle mov (bad) lock mov sbb cmp mov add mov shlb popf jp push das int cld dec mov pop fnsave mov adc xlat js dec mov out cmpb push fbld sbb (bad) (bad) mov fisub lahf clc pop mov (bad) lret mov fbstp fs pusha cmp cmp stc xchg cmp push (bad) les cli jbe fwait nop add xor mov ret jae scas mov add mov into fsubrs xor mov mov or xchg (bad) mov (bad) out repnz lock pcmpgtw orl in push (bad) icebp (bad) push in dec aad (bad) scas in lods das icebp cltd cmp js or lret sub jbe mov mov arpl or xchg (bad) xchg insb add sbb inc dec iret sub int jae dec sub dec mov sub inc jmp in int3 cltd xor popa jne or pop js sub sti sbb inc jb push mov and packsswb dec cmpsb xchg jb imul in push outsl daa sub cs in call inc xchg (bad) jp pop aas cmp fistl adc out push stc fildl (bad) icebp pop jmp cld or lahf inc fmuls push outsl mov test stos popa int pop ja inc das sarb add add lret mov sbb sub shll (bad) jmp lahf shlb test lret iret cmp data16 je mov add stc hlt adcb stos pop and mov sub inc jp cmpsb sahf fldt mov dec and mov divb fisub mov or sbb pop dec jge hlt push scas lds sub imul add mov and (bad) ss or fstps cmp rclb fwait mov inc xchg push sub push xor call jae lret mov fldcw outsb mov and in jle jo sub or cmpsb repnz (bad) lods sub jmp jle mov fcomps lock jecxz,pn pusha cwtl into mov add add add mov dec cmpsb xchg xchg or mov pop mov negb in jl lods (bad) rcrb adc sbb popf xchg andnps pop hlt in hlt lret sub je inc in jp mov cld in jmp imul push jo movsb ja push outsb cmp jbe in mov daa (bad) loope pusha pop int3 add cld stos ret sbb lcall out bound pop mov in jle cltd push in cltd fstp add jne subl insb sub sub mov in test push xchg mov into fmuls push push scas mov aas fldenv iret push sbbb outsl jns mov sub sub or lcall ret inc pop dec adc jp xchg fmull cmpsl test mov pop adc ss add test mov movsl dec mov fnsave cmp and fsubrl dec mov enter aaa popf mov js daa mov fwait mov lret add dec pop insb inc fadds push (bad) cmc push enter movsb jge fiadd or nop jl arpl divl mov sbb insb cltd xor push or add push cmp cltd rcll add daa in mov push pop xchg mov mov xor dec xlat jge rcll xor ret outsl pop cmp inc cmp sub push sbb xlat (bad) xchg jno xor leave lahf bound dec enter mov pop icebp and icebp cli nop inc mov add int3 fsubrp pop movsb test or mov cmpsl cltd pop bound or mov mov jp push dec scas (bad) xor xor ja je push in sahf loop loopne (bad) sub add jno aas add mov lock (bad) dec mov (bad) mov xor mov xchg cvtps2pd mov mov add mov add les (bad) push push rcll mov sbb pop cmp ss rorb sbb adc mov cli mov add add sbb push adc mov pop sbb jge dec lcall cmp lock enter push movsl std or and fs jno (bad) mov or sbb or jecxz,pn jns mov or popa mov cmc push sbb js mov jg (bad) mov icebp das mov in (bad) loop mov and add push push push pushf push push mov stc xlat mov xchg sahf xchg and icebp xchg es lds pop pop xor (bad) (bad) stos scas daa lds adc lret push or ret xor cmpsb (bad) hlt cmp add or adc and ror add mov add (bad) cwtl call or mov rep frstor add mov pop or ljmp xor push push mov movsb inc (bad) icebp (bad) out inc mov add xchg xor pop mov ja cli fsts jae jmp jg lahf mov ss adc repz inc fs fbld xchg jle mov dec enter sub daa lock mov pushf iret fnsave ficompl int3 and pop cmpsb (bad) mov and je mov and pusha xchg lds mov add mov sbb mov outsb fidiv xor fnstcw div and mov add fdivrl pop xlat push movsl mov xchg mov inc xchg lret lods inc sbb jns pop mov push das mov or xor (bad) mov outsl cmp cmp rorl imul mov into loop add pop repz lods pushf and push movsl fisub push mov ja mov inc popa push mov dec fimul or sbb sbb jbe mov dec xor and sbb test xchg outsb jae sbbb loope shrl shlb push (bad) je or push decl and out lods mov pop les cvtps2pd mov jp sub adc xchg loope add add add mov xor stc push add xchg in jl add mov xlat (bad) xchg adc call fist mov scas and fisub mov pop push sub mov adc data16 fstps popf aam incb pop or xchg cmp call xor popa push sbb out cwtl leave dec int sbb jg jle lds das aaa xlat scas ds add mov loop xor fcmovb sub sahf mov stos pop xor mov cmc add (bad) frstor jg jb pusha fistl dec xlat push xor stos xor leave mov mov lds mov incb ds or dec jo adc int aaa mov jle jno pop rcrl popf je and mov insb inc call dec clc rorl enter lcall jae mov scas jl sub in lds mov pop ds lods push dec push loope mov (bad) mov dec sahf lds out pop or test push mov inc inc (bad) icebp das mov mov lahf mov inc les xor mov adc stos into add and push push mov fnstsw or fwait cmp addr16 mov mov xchg xor jge add incb into fwait push mov bound add and stc inc clc cmc pop mov or mov pop lock mov imull push (bad) mov mov (bad) cmp cli cmp gs mov mov mov add add lods icebp inc test xor mov sub pop jl (bad) stc inc jmp outsb add inc ret outsl dec stos jmp push dec (bad) mov aaa clc mull push cmpsb (bad) (bad) clc outsb and gs lods fadd (bad) adc ret dec xor loop pop and adc ds jle pop cmp imul hlt jp movaps in dec mov dec add add lds fcomip aad out js cmpsl dec add in lods inc cld dec hlt xchg jbe sahf mov jl or sbb and mov or cs push or sbb inc idivl jl insb sbb and mov into push inc outsl mov mov iret fninit stos pushf xchg out mov push mov and dec xor fwait mov pusha rcrb add xor sub scas add dec enter xchg push dec les fadd and sbb mov or sbb dec cmpsb xchg pop fwait outsl fs mov movsb outsl cltd xor js push imul lcall insb ds mov stos pop dec cmp jp xor dec jp or in pop mov adc stc push les (bad) push xor subb push add cmpl mov adc and inc pusha adc inc popf sub push adc sub decl stos add mov mulb cs aad lret daa or fwait push in jmp jb and jge xchg mov sarb xor mov ds cs mov gs jae scas mov or dec xor repz aam xchg add jbe add add xor out lcall cmp test xchg icebp repnz mov enter (bad) (bad) push mov and fistl cli es rorl push xchg push and subl jmp in mov fs orl and sub mov stos mov lods pop mov subl jb lea add add mov mov daa inc test adc aas or xor js mov jle in ljmp repnz add adc fistl adc ret push jb cltd sub (bad) jne bound cmc roll nop mov jo sarl mov stos pop sbb xor pop int push test jecxz into jge testl jecxz inc add pop pop sub and or mov arpl mov leave mov sbb mov call mov or add mov push iret lahf push sbb iret fsubrs call mov std dec mov sub pop pop cmc inc xchg cvtps2pd addl sbb dec test rorl cmp iret mov jmp add mov push jo js add les cmp sahf push dec and jge stos dec std stos add cmpsl or imul jl pop clc sbb push jp jle sub xchg popa fbstp mov adc sbb fcmovbe aam and aaa xor fisubr arpl iret pop xchg jae outsl cmp mov les iret jge imul movsl (bad) mov test ss es rcll aad lret push int3 (bad) or sbb xor into pop inc pop stc xchg (bad) sbb sbb loopne inc or lods mov cmpsl dec (bad) (bad) ror mov sub roll int (bad) pushl push fidivl in cmp pusha cmpsl dec lds bound (bad) divb roll loope pop jbe in dec mov jp add stc mov test shl jecxz ja and fimull cs scas stos mov jecxz jnp mov lea frstor adc dec hlt mov xchg pop popf xor fucomip mov gs das cmp clc scas inc ja in les cmp out pop test jae outsl mov stos imul add fsubr ss lret sbb inc push addr16 add cmc inc mov pop mov scas xor mov inc in sub int3 mov mov mov ret add and (bad) sti (bad) sbb cmpsl call in hlt into lods or pop jae dec (bad) movzbl sbb mov not push mov add mov out (bad) out scas out sbb andb lods xchg dec dec adc test add in aaa lcall bound fdivr push xor add je dec mov inc push fildl out ret push mov fimul xchg pop lret cwtl push and cmpsl in inc pop and enter mov lret daa mov inc fmul xor (bad) cwtl std dec insb mov push cmp push inc jb push xor fsubp call xlat fstpl mov cmpb push ds mov xchg ret xchg mov inc clc inc sub mov push sbb notb mov sbbb in jecxz jne xchg fwait repnz lock cld push xor mov inc outsl imul inc sub sti test outsl adc dec ja inc cmp mov jb imul dec jb mov mov jmp fidivl lahf leave bound mov jmp addr16 scas xchg mov push mov mov enter ret or lret xor and jae cwtl mov and icebp mov dec adc inc ret pop (bad) (bad) mov (bad) mov xor jae and or jle dec pop (bad) cmp sti daa ror jl ja sbb push fnop push jle inc loop xlat mov push xor icebp leave add add cmpb sub mov js (bad) and push and enter mov jle lods jp or (bad) outsb sbb mov inc mov imul mov test xor xchg iret xchg mov push pop imulb stos mov jecxz mov ja push xchg sbb pop out out test inc lea movsl sbb scas je (bad) mov fildl xchg out call arpl xchg ret cmp xor mov inc sar cs cmp xchg sbb xor cmpsl lret cwtl add mov iret mov in sbb negl lret adc push mov and sbb or test (bad) dec cmp std adcl in enter jns sbb js inc add loope sti push mov add add xor divb cwtl icebp mov sarl push (bad) pop xchg pop sub mov out push dec mov and or inc sti das mov push pop jmp xchg push push cli adc test jmp inc cmp into mov cmpsb pop jecxz into jg negb sub push out dec test addr16 leave push pop in std pfrsqrt add cltd cmp inc pop jne mov add leave inc insl inc mov inc sub push xchg enter lock (bad) imul xchg pop jae mov add mov js jb ljmp push stc repnz dec sahf xor movsb andnps paddusb aad inc mov icebp inc xchg jl popf cmpsl bound cmp sbb and or ss sub add ljmp loopne pusha mov inc push mov pop (bad) sbb lret fwait rorb test pop mov jmp in sbb scas enter mov mov dec imul pop clc sti mov push pusha jbe pop dec cmpsb xchg out stos pop lds mov or jae js cmc fidivr (bad) cmp das cli out lcall mov add add mov mov icebp inc (bad) jp mov push imul mull test and ljmp pop lahf jns lods fstl cmp popa push stos inc outsb in and stos fmul hlt fbld mov sub add fimull sarl aam rcll xchg mov cli int3 ljmp xor add add pushf cmc sahf add push outsl std sub popa nop and jecxz or ljmp pop mov enter pop cmpsb (bad) (bad) decl adc ret stc out aad push inc (bad) pop cmpsl movsb les push (bad) push nop mov std and add jge pop in into jbe pop stos imul (bad) add ficomp push add sbb lods xor jl aam scas add jmp cld sbb loop enter jge mov dec addr16 into fidiv mov enter or add push addr16 xor and movsb (bad) in jmp sahf mov les jnp xor mov add (bad) hlt xlat jge rcll inc movsb adc stc jl mov cltd add add add lret stc fxch nop (bad) jmp cmp mov xor test sub fcomip in pop and or fwait mov cmc sub in pop jle stos (bad) jmp movsb push clc scas dec sarl (bad) lods movsl mov and adc iret sbb mov or cmpsb das or push lock (bad) ja mov sbb fwait or adc (bad) cmp xor pop into into cmp leave pop rcrb pop aam test je das rcrl cmp iret jp push cmp jmp incb pop test test jmp stos dec (bad) sbb enter dec push sti push rolb pop pop push cmp push dec frstor sahf pop aaa mov cs stos lret data16 mov sub scas add insb inc loopne add incb mov xor and (bad) pop xor push das scas ret pop push push fdecstp push or push cmp hlt (bad) mov dec push out pop ss sti xchg je cmp aad stos mov sarl rclb (bad) adc push divl jno arpl sub (bad) into xor aas out mov xchg out aam lds mov sar dec add sbb mov and inc or push into into cltd xor sub jg inc jns fimull mov jo ljmp inc arpl pusha mov inc stc sbb leave cbtw adcl push dec sbb mov les (bad) dec mov (bad) mov or and mov jae arpl inc lods rolb cmp inc push jno adc stc lahf xchg aam add and les ss inc sub cmc fsubrl xchg and sbb cmpsl test pop ret fwait mov pop push test repz fildl mov call sub enter xchg cmp fyl2x scas cmpsb xor jbe int imul xchg sbb sub dec push xchg cs mov xchg xor int pop negb imul ss pop push pop sbb rcll das mov xchg inc bound hlt inc sub mov negb repnz je cmpl rolb inc sbb push sbb adc or stos enter repz add dec (bad) call pop push pop (bad) loope xor or loopne je or add in dec push and xor add andb repnz add ret arpl into loopne mov push js hlt dec mov cmp or cli (bad) mov ds sbb into mov popa lock add inc in mov bound jmp test mov (bad) and les inc sub sti pushf mull out mov pop jbe into jge testl into jae or out mov adc ud2 loopne inc int3 (bad) xor popf mov sub (bad) cmp test or lds push mov mov std pop sahf loop jecxz cmp jne clc mov xchg outsb incl ds popf cld push jnp pop jns cmp add adcl mov hlt push shrl add mov int3 movsl repnz mov push add lret ret iret jae enter imul sub stc popf dec adc stc adc pop pushf (bad) xchg xor xor repz sub and pop mov aam sub std inc mov mov push cld xor cmc and aaa push cmp fld push add add jecxz or outsb cltd xor jo push imul mov cli dec inc imul xchg push pop sbb rcll das cmp mov pop (bad) xor ja js push mov pop adc ss ljmp inc sub ror sbb inc xor xchg fbld cwtl xchg push pop jo sbb mov jle iret mov int pop sbb not stos add inc idivb mov aaa mov sti imul fsts dec sub int jmp mov cmp push iret fdiv popf mov insb add (bad) fidivrl mov iret test pop cmp out or sub mov sub pop adc (bad) stc popf push xor fnstenv pop lods (bad) and push add add test mov inc mov dec mov out pop mov mov stos iret lock mov pop push xchg gs mov enter and or roll fsubs push mov mov jge call push dec cmpsb xchg (bad) mov std loop fs iret fdivrs negb popa (bad) mov sub or pop jmp jno cltd mov add add test adc dec inc (bad) aas mov push or je or (bad) into addb mov mov scas and push dec cmp mov push pushf fnsave bound jb scas push mov push repz mov mov jle push or fnstsw pop in xchg push adc cmp inc sub pop adc cmp sbb data16 std pop and mov ljmp dec sbb aaa inc arpl imul (bad) dec stc rcrb inc call fcmovnu int3 test fcomip pop ss dec inc (bad) cltd das mov inc jg cltd mull mov int (bad) mov xchg inc lods and sbb xchg int3 jns pop je stos inc in and fistl lock stc dec sbb xchg mov fwait sub dec dec add jge in cmc test sub mov mov mov or insb (bad) cmp mov mov xor xor add fldl daa mov sbb addb jo cmp repz ljmp inc cld push clc shlb or scas fs jb and out int3 cmp inc dec movsb jmp dec jb mov imul mull insb cli fsts add fbld int3 cmp test cmp mov lahf out mov adcb dec sbb jae xchg stc inc mov xchg xor (bad) mov push mov jmp cmp jo leave pushf ret aam ret in cmp cmpsb or pop hlt jmp xchg je mov (bad) test out js or jnp mov push mov mov ds add test pop cmc jno out popf sbb add mov call std jl jne or les dec xor lret push fnsave add mov int3 data16 xchg sbb div insb call cmc and stos add and lcall cmc jp,pn bound sbb imul shlb (bad) cltd sub add mov inc pop pushf iret mov ss sahf in lds mov aad iret push cmp in mov push pop mov sbbl leave aaa add sarb aaa push std xor mov nop pop movsb adc mov inc insb rorl stos jl addl aas lcall pop pop iret mov stos enter dec mov and add adc movsl push mov scas in jle ja lods aad bound andl imul pop cmp push pop jmp cmp rol bound mov bnd and in dec out jg mov iret fdiv frstor loop sbb adc add call mov stos add insl nop jge push insl xchg push (bad) cmp mov orl add nop fldenv jne and xlat mov xlat ficom lret sbb xor cmpsl pop mov pop xor fwait jg sub inc adc jmp push pop pop xor in test dec aam dec cmp push (bad) xor cltd arpl in test cmpsl or or push xor pushf shlb cmp add pop or notl adc cmp xor fildl sar popf jae out mov mov sub ja mov pop jle rorb fmull inc out nop dec sub out test sub jp push movsb sbb mov jle dec inc loopne and sbb sub scas push enter data16 push ja xorl lret flds aam rorl test add cmp ret mov aaa mov loopne in cmc outsl sbb xchg jg std add cmc dec out insl (bad) lock mov dec icebp sahf arpl xor clc hlt push test dec idivl and test in stc sbb sub test add inc adc sub bound sbb pop cs and add inc mov adc stos faddl cmpsb lret movsl fisub mov push push sub push xor aas pop jp fcomps pop out scas arpl (bad) imul xor data16 mov test mov daa inc idiv pop sbb xchg jecxz pop test mov pushf jbe dec or loope add and xchg adc psrlw inc or inc inc xchg mov add pop aam add int3 xchg aas push (bad) cmp out push xor fildll xchg mov inc dec leave lahf test dec cmp sub int push out lret push adc pop sub dec pusha cmp or xor fst ret pop jne inc mov stos lret test cmp lds (bad) (bad) fsubp aad pop sub cmpsb jg aad lds cmpsb and enter mov insb fdivrs loope scas mov fildll cli or mov fstps shll add mov imul (bad) roll loop (bad) stc popf fstpt cmp (bad) bound fbstp cmp pop out xchg sbb sub subb mov adc mov test push cwtl lods xlat loope stos cmc ss pop add pop test push scas mov orb mov js loop jno pcmpeqw sbb mov das xchg iret xchg imul outsb mov sti icebp jb mov sbb cli test jge cmc push loop fildl xor mov fild out pop les leave add xchg cmpsb cld xlat cmp dec ljmp scas std jl mov dec lods push repnz pop and scas pop cli pop xor add mov (bad) push xchg push loop xor fidiv cmpsb dec fwait shlb sti ds dec xorl pop adc ss sbb mov dec pop out xchg sbb shrl aaa iret icebp mul and int arpl clc out jecxz loopne out loope lds mov shrl mov sahf cli je (bad) in inc pusha cmp adc add ljmp jb sub add mov pop enter aas outsb fildll (bad) push stos popf div inc sub cwtl add mov push fsub sub sub dec pop jmp sub leave sahf mov stos inc mov push sbbl (bad) cli stos fisubr mov fmuls dec lods xor pop mov sub (bad) lahf arpl dec or xchg mov mov xor jbe lods fisubr or cmp in lds insl push (bad) icebp mov pushf and or and cs cmp sbb bound insb inc out adc negl pop add icebp xchg in mov or fstl sub imul mov xor add aad lods mov stos repnz lahf out ss stc pop stos inc mov (bad) jg insl inc ret xor ss out aaa icebp clc ds inc add add add add movsb dec loope in popa adc inc imul mov jmp adc sub push mov dec outsl nop jl arpl sbb push and ja mov push xor aam lock xchg outsb or cli divb fptan pushl je mov cmp dec mov sub movb sub add lcall add add test or ljmp pop mov imulb jns pop push loop push ljmp (bad) std xor aas data16 cli pop (bad) add mov cmpsb and inc adc add clc cmp inc ss lea add sbb fstps sbb fisttp push mov xor cmpsb (bad) xor dec dec push mov xlat stos pusha add out xor and jb jae mov out ret es inc in repnz adc jp pusha cmp jmp jnp lret push jo sub sub leave sar stos or stos mov sbbl ret and (bad) frstor fiadd clc adc or sub test mov cmp scas in enter add add cwtl mov into dec mov pop jae dec out pop add fdiv xchg xchg xchg mov mov enter adc sar mov inc jno jl mov pop push das mov push rcl mov jmp (bad) push bound subl mov mov stos cwtl xchg out arpl fnop dec inc or and sbb sub fwait xor and inc cli mov stos or push pop clc outsb cld jl push adc cmp inc sub push xchg enter hlt jbe push jecxz addr16 dec cmpsb xchg push jo xchg in mov icebp mov or mov xchg cmpsl push jecxz sbb pop pop adc sbb jmp fs ss fild fdiv push inc or inc int3 dec mov sti rorb add gs sub (bad) and ljmp mov dec sarb in inc testb stos jo cmpsl or imul and jl xor sub pop mov mov fbstp test dec pop insb enter fcmovnu sbb cmp enter jge adc mov jmp push mov fistp mov pop ds mov push mov add add inc push pop jge add pop or add data16 push inc int3 (bad) das xor jns push imul or add dec pop test and ljmp pop inc mov inc std daa out mov cmpsb gs dec and jb rolb mov push mov fwait xchg in xchg rcrl and jp ds jle push jmp sub dec scas cmp push sub or add sbb xor xor faddl cli arpl scas or xor stos ffree mov iret pop xchg aas xchg cmp ss mov mov test pop aam adc pop mov (bad) xchg xlat mov mov or cmp pop adc mov cmpb xchg mov into fsub outsl popf mov mov fild add add or ljmp stos into inc bound (bad) shrb or in add dec lock lahf dec cwtl sub cli or pop push leave enter sbb call out mov addr16 sub cmp xor mov inc lds sbb ljmp pop out fsubr aad fldt push xchg cmpsb (bad) outsl adc add add es mov push lock add cmp sti xor dec subl sub pop pusha insb jns leave push dec out inc scas and es jg mov jbe in jle stos iret cmp mov inc jg dec add pop aam mov aad cmpsl cmp in and cmpsb and popa or mov inc cmpsb jecxz (bad) bound jl add imul popf cs loop hlt movsb pop jge xchg inc rorl xchg cvtps2pd imul mov aaa dec cmp inc inc (bad) xor arpl and jmp add mov adc (bad) xor sub mov inc cmp and pop pusha pop aaa push mov mov data16 mov add out bound (bad) shrb or flds jl in dec add add out add dec loope ss inc pop ret in xor cmc and imul nop mov leave xchg mov (bad) out (bad) mov mov sbb or sub pop test xchg loopne xchg rcl jecxz push int mov jae ficom jb pop sbb shrb cmp (bad) icebp mov jge add movsl dec insl pop stc push mov mov data16 test ljmp inc sub cli es add in push mov mov (bad) sti push lret jecxz leave push xchg inc out aaa and sub mov fwait mov roll mov xlat sti in imul xchg enter or jb into dec mov pop stc leave mov mov mov xor push adcl or push pop sub and dec inc pop lret dec push fs mov add add outsb rolb jo call pop sbb (bad) cmp inc mov (bad) ss jg stos scas ret jecxz movsb or enter mov pop addr16 lock cmp (bad) mov fwait mov push jg push xchg dec lret adc int arpl faddl jne or inc adc mov icebp in cmp scas mov in push (bad) repnz jecxz add cmp lds or mov popl jge lds dec sahf (bad) xor mov lcall movsl leave add js or inc aas xor aaa sub add mov out sub (bad) into sub outsl int mov rcrl lock mov lea leave lods pop sub and fwait cmp pusha ret pusha repz add jne pushf push and push jg dec rol addr16 mov push push or mov ja mov adc bound fidivl push insb cmpsb pop (bad) sbb cmp pop adc mov int xor xchg pop mov dec inc push lock cmp inc inc addr16 add xchg flds pop pop enter mov add in adc xlat dec lods ljmp je add cltd mov add cmp daa fadds andl call mul loope and out mov arpl xchg fwait stos (bad) leave pushf jno clc fs (bad) outsb sbb dec sbb pop sub cmp mov jo jge sub in and lods cmovle jb popa sbbb xlat push push jecxz jb fisubrl push mov cmc std cs jge rorl sbb js (bad) pop aaa sbb jmp sub scas mov ljmp scas out lds inc push mov pop outsl mov and inc pusha sub pop adc inc pop push inc movsb cmc push push inc mov pop shlb and xor in pusha dec ror fwait mov mov sub enter loope fdiv sbb mov pop scas push cmp insl add repnz loop jnp push xchg push popa cli test add popf (bad) mov imull cmp and mov shr je mov out addl fistp mov in into pop jbe daa in mov nop fsin pusha mov hlt int outsl cmp mov mov cld into cmpsb das scas or cld int popa push inc cmp add xor push scas push in jle mov mov scas push sarl (bad) scas sbb or push add and inc decl divb jecxz daa jae lds fwait in icebp (bad) jecxz jnp mov lods neg scas sub mov (bad) lcall ja and fild out pop les leave add js jno icebp out inc push xor and fild add add icebp (bad) test std ret push sbb mov xchg es adc icebp dec inc std or cmpsl (bad) sbb xchg mov fwait xor (bad) aaa mov push xor jne lahf jno mulb lods or roll dec or loope in mov push push jae xor jle out fisubr cmpsl add shlb jb mov out ds push jl jne out (bad) pop jns add add cmp repz pop dec sahf loope and pop lea mov inc pop cmpsl cmpsb aas adc mov cmpsb dec mov pop mov mov ret loop dec cmp subl mov dec cmp mul mov and mov and mov jbe daa mov and imul add cmpsb jecxz mov add mov enter jbe mov mov xchg push xchg push push clc xchg leave (bad) cmp jnp aad sbb (bad) push and xchg cmp fisttpl pop cmp pop xchg stc outsb lret dec ja jne loope ret inc lret lods jge xor lea das pop fsubrl mov inc leave pusha add push xlat xor subl pop cltd pop aaa das push ljmp add push bound lret mov cwtl jb adc stos iret push popf into (bad) std pop jne dec rolb icebp enter xor mov dec hlt jp and loop push fwait iret xchg mov icebp mov les dec adc jno mov imul loop push jnp adc inc or xchg mov sbb jno sub mov add xor mov add fadds das push fmul les fiadd call imul mov sub or xor fbld ret adc dec inc out mov stos out aaa mov xchg fistpl scas stc int inc push or push daa movb ret in xchg cmp xchg enter mov sbb sbb mov in cmc cmpsb xchg pop (bad) loopne jecxz stos mov insb add add daa sbb fcomi je or insl std dec mov pop out lods mov pop adc cvtps2pd dec daa xchg sub pusha inc xchg icebp call jge sbb xor insb cmp jmp cmp dec leave fwait inc test push mov rorl dec adc (bad) xchg out iret mov aaa test faddl sub dec mov inc sti xor mov mov push jne pop jle xor add pop out mov mov mov sti int3 and out in inc lods xchg pop fwait inc ljmp mov js jge mov fdivs sub push (bad) sahf mov rcll sarl fdivp jmp mov mov cltd sub out js xor jg lods popf out outsl (bad) mov and clc xor ja outsl cmp test fnsave lahf out add (bad) mov stos adc adc lods add cs in mov lret jno add (bad) lret fcomi sub sub jmp sarb (bad) mov cmp cwtl lcallw push cmp out sbb cmpsb xchg insl jae xchg pop subl insl movsl fcoms (bad) dec push inc (bad) cmp cli jb sahf mov les fisub fucomip push inc mov add sub fwait das out dec pop (bad) js jl rcl das inc fdivs daa outsl rorl (bad) ss inc fs lahf jns adcl sub xchg mov sub mov push fsts lret xor pop stc mov push add sbb jge dec jl into fwait pusha rolb adc xchg mov (bad) sbb cmp pop cmpsb dec int mov add add cmp adc std in jecxz cmp or mov cmp fidivrl cmp pop stc fbstp sbb int (bad) stc (bad) inc in jge add bound xchg or outsl es push fsubrl sub jg bound out pop mov mov stos mov inc enter mov aaa mov repz das jae xor enter dec jne mov int jp push insb inc cmp xchg inc mov xchg enter mov (bad) in outsl adc inc outsl jne lds inc sbb outsb test loope outsb les lods (bad) push pop jl push ret adc ss pop divl sbb imul inc (bad) push inc (bad) sub stc push mov mov push fmull and mov pop add add add add std xor mov push and push fimull imul lods and enter push add or pusha shll sarl pop scas rcr mov dec fsubrl int int3 mov in (bad) into dec mov push das xchg (bad) mov inc repz mov aas iret fsubrs push jae adc dec cmp xlat (bad) cmpsb (bad) fwait xlat pop pusha dec inc repnz das add sbb ja mov lds push shr fdivl es jl jne xor adc dec repnz lret push fnsave mov mov inc jp or adc lods lcall cmpsl xchg clc int aam inc cmp fiadd mov jmp sbb dec insb into test pop insb rol in mov push mov jb je in push add add push and inc and aas mov rcrl dec pop jns negb sub divps cmp leave mov fwait xchg mov push cmp mov jns sahf stos jns xchg mov add or fdivr push xor shrl test xlat mov mov inc std adc loopne lret sbb inc mov iret pop mov lea sub scas push xchg pop and data16 add repz pop xchg in jle stos pop loope lretw mov fdiv rorl mov xchg adc loope add sbb jle and jne out mov (bad) jp jl pop or jnp inc js dec call inc lret pop mov ss (bad) lret sub test or popa pop sub dec xorl or inc lock push push ret inc push mov add add xor push xor inc pop push and inc sbb push push enter push mov pusha in add lds sbb in mov inc push mov xor and popf and incb pop shr sub mov dec hlt push mov inc pop pushf iret mov ss repnz aad sti aas mov sarl negl ljmp pop add add cltd mov pop jmp adc push ss lcall ret inc pop dec adc jp jmp inc pop or xor fldt lock jecxz push xor cld add test stc inc outsl cmp test bound pop jecxz and and inc je inc cmp (bad) insl rep sub daa mov cmpsl cltd pop pusha jmp rcll xchg mov mov push inc pop lock push in std cwtl loop loope (bad) push xor aad ljmp push rorl ljmp test leave pop dec push lock pop out (bad) jb push sbb test cltd jo jne cwtl jnp das sub add pop inc push ds mov scas pusha pop pop lahf jns jb ficomp mov sub pop mov xor sti (bad) (bad) mov fsubrp mov (bad) test ret jmp movsb pop dec push out xchg push stos movsl mov adc int ficompl sbb mov pop mov dec int mov inc dec iret das mov sar imul push jmp mov inc imul shr push push rcl mov and inc inc (bad) icebp (bad) sub mov ret add add sbb rclb cli mov lcall test pop iret (bad) sahf dec dec js mov mov and mov call shlb pop lea callw mov dec pop add cmpsb test cmp add mov sub gs mov bound or mov push and adc push jecxz mov and add add pop ljmp cmp sahf mov xor pop ss adc add sub mov (bad) call jl aam stc push push ret inc push mov mov leave addl cmovo xor stos into pop sub pop ss pop jbe adc push daa aaa fstp or scas pop int out lcall stc xchg adcl sub jle jmp add xchg sarb rol ret push xchg enter jae subb cmp lahf xchg loopne mov jmp ffreep (bad) fdivrs negb ljmp add (bad) jge add lcall ret sbb and outsb subl mov clc fsin push les mov ss inc pop aam xor sub pop test add add hlt fldcw and cmp adc outsb mov iret adc or push jns pop insb inc xor sbb imul shll dec xchg or mov xchg sahf and mull mov mov loope cmp inc xchg inc cmp jbe insb xchg data16 out mov jno nop (bad) cwtl push or pop adc add dec gs add add mov mov mov cmpl mov mov or sub (bad) pop jl dec out sub pushf mov dec sbb (bad) or int stos movsl fmul aad mov aam xor inc pop sahf out dec mov jmp movsl nop push fwait les ds (bad) xor (bad) xor mov mov push outsl test mov mov fwait sarl push xor mov mov dec call xor xchg or mov psrlq add std ljmp les test xor add jnp leave mull repz sbb leave jmp mov out push adc ja out cltd mov jns cwtl dec inc nop mov into mov sub (bad) cmp sub cltd mov aad mov imul xor dec fdivrl xchg rorb or lock lods test fstpt jecxz (bad) ss xchg mov aas dec mov nop pop dec iret pop cmp xchg cmp push sbb fwait pop cld clc cmp and fdivrl in mov cmp dec jg mov mov test dec and stc push mov pop test mov mov add inc lret xchg mov stos sbb sub fsubl pop cmpsl das sbb add jl mov sub (bad) mov shll ljmp jne or mov int or in lret add mov sbb in cmp (bad) mov clc scas mov aas loop cmp pusha mov xchg mov inc clc push stc dec push dec sahf cmp push xchg add add push cli adc mov push cmpb aad je daa mov aad aam daa lahf and leave pusha adc aam xchg sbb lret sbb push orb sbb (bad) in cmpsl xor fsubrp mull jle mov pop popa xor push adc xor dec les fnop sbb repz lock aam or add push jecxz push fwait adc jmp push cmc mov fsin sar push ljmp xor pop out iret loop fadds cmp orl cmp hlt inc (bad) add sbb scas adc scas inc jmp sbb sbb sub sub xor mov mov (bad) call dec mov cmpsl adcl pop mov mov add out lret dec mov addr16 lahf push ret jmp roll add in mov xor test mov daa mov (bad) push fwait xlat dec mov mov jmp popf mov add mov and mov movsl call out lcall stos mov xor mov jge rorb les jmp incb mov add add add mov sbb cld into mov test mov mov (bad) inc mov fisub sub sbbl pop gs mov push loope stos pop or mov pop adc or dec insl dec sub aam add or stos frstor cmpsb loopne,pt mov insl inc add (bad) xor data16 jae adc icebp das mov rcr adc flds adc (bad) jne and leave cmp cli xor sub xor leave lret xor imul mov int pop jno in pusha inc and addr16 or iret or lock mov mov mov scas into mov sti xchg sarb jg add add pop test jmp xor sbb (bad) mov leave in dec xor (bad) mov repz push xchg loop out decl cmc das js push adc fcomip xchg (bad) adc mov dec movsb mov cmp cwtl les dec icebp popf push mov xor xor add cltd inc mov mov scas mov dec add lret mov lea scas test sti daa fadds add push mov mov (bad) lds imul shll mov adc sbb stc fbstp and push mov push mov inc mov sti push icebp mov adc xor shlb xchg push enter lock mov or rcr cwtl lret movsb lcall out push repnz pop add push add sbb mov rclb lahf rorl fadds std lret dec jge scas and decb shlb mov lret movsb dec mov aad jne or mov mov mov push push dec arpl mov or dec or jne shl insl jae add sub pusha loopne jecxz mov sbb frstor add dec pop mov and dec popa dec ss mov jnp mov dec sub mov shrb rcrl fstl add push jae lret push jo sub push (bad) cmp jo mov pop jecxz sub lea dec scas and dec (bad) out dec lea pop and test inc dec cld test cltd xor pop dec inc shrl or add add or decb xchg mov xor ss arpl test xchg insl jae xchg cmp pop mov notb cs (bad) xor and jl mov mov movl les xchg add pop jb,pt not cwtl sub jmp loop in mov ret arpl add lods test inc jbe xchg pop aam jbe fwait mov xchg jae add jle stos pop mov xor sarl mov mov mov mov sti mov mov and mov loop dec mov clc cli imul roll and loope getsec std push cmp mov xchg push dec divb mov jne add dec aad cmp rclb xor (bad) push testl outsl nop (bad) push (bad) ss xor xlat js cmp out mov lret sbb loop sbb test jno or movsl mov lock movsb pop mov bound fwait int xor sub push inc pop cmp inc jns inc cli cmp cmp aaa xor push add aas cmpsb push inc (bad) mov loope clc int add add jecxz or ljmp pop mov mov jl fnstenv out out mul mov or jnp jge push ss pop jmp adc mov test nop les mov jbe es inc in push mov icebp or out xchg add loop mov std imul ja xor cmp mov sub scas add and inc divb les int3 (bad) or in or mov clc mov ja in aad xor xchg mov mov cmp xchg mov dec out sbb data16 out jae adc jmp add mov jmp test jmp lcall loopne dec out inc outsl cmp xchg inc sub clc add cwtl idivl gs xorl dec or scas dec out push inc cmp (bad) repz pop pop adc sbb data16 or add mov pop xchg shlb mov sahf and fnstcw out insb pop mov sbb cs dec aaa mov mov (bad) push pop push or dec cld scas cmp adc fcmovnu inc inc imul lea add imul cmpsl rsqrtps cmpsb sub outsb (bad) push jnp lds jo and nop les (bad) dec sub ret mov push popf stos inc mov pop orl push clc push and addr16 push mov jmp movsb sub mov adc jmp dec scas mov lret jbe test call into cmp add dec xchg insb jae inc jbe pusha (bad) ret rcr xchg sbb mov fwait adc in clc dec aam cmp cmp mov (bad) out les jno cmp sbb inc sbb mov popf mull mov rcll shrl nop push out (bad) mov and out repnz das xor mov push sbb mov jb (bad) (bad) popa in mov mov repnz cmp test test test imul hlt mov test dec or xor dec popa (bad) mov in cmpsl mov jp popf mov pop stc mov fstpt fisubrl sarb dec lock ror jp mov ret out addl (bad) add mov xchg adc xchg pop cmp mov lahf and add add call stos dec (bad) incb cmpsb gs mov scas and jmp mov (bad) inc out sub das mov call std movsl test fwait les xchg lret sti testb sbbl mov xchg je mov inc popf imul icebp mov push ss and enter mov adc inc cmp mov add sbb data16 decl adc aas sbb popf popf movsb cltd subl pop incb mov mov imul mov pop push iret test adc pop scas and cmp jmp mov jle dec mov xor sub mov das out inc mov mov xor adc add add daa pop nop or ss fistpl mov push mov iret fdiv xchg out add cld dec jle push leave xchg mov mov mov or mov xor mov dec mov push mov inc mov cltd pop cli xor or in and lods push loop push ljmp stos fiadd insb sub cmp test inc bound subl xchg in or and shll repz jge hlt mov movsl ficomp lds push dec popa rorb sub cmp mov test sub iret cmp hlt inc out mov js xchg outsb pop icebp mov mov inc dec (bad) je mov int (bad) add in push (bad) lods inc dec test addb sti mov (bad) jno add mov mov stos lret into sub ret stos inc cmp cmpsl in shll mov push mov xor jle lods or (bad) cltd xor rorl and dec pop out mov dec and les jbe fwait mov mov imul fldenv xor (bad) push ljmp add add add clc es xchg push rorb cmp jmp lcall ret inc lret and xorps jmp (bad) stc fwait dec movsb (bad) xor xor mov sub dec outsl cmp in cmp push xor sub jmp lret outsl add sub pushl aam mov into pop divl cltd mov test mov je daa mov int3 pop cmp sub movsl xchg in inc mov add outsl mov lret lock clc jl fsubp dec addr16 addr16 xor ja lds push mov (bad) outsl pop js jnp or pop xchg sub xchg xchg jbe ss cvtps2pd mov mov mov rcrl fisubr rorb out cld xchg stos jmp icebp adc (bad) and cmp fadds sahf mov repz jb cmp movsb add add fsubrl sub repz lock push sub data16 iret sub mov ret sub mov in mov cmp lock arpl push mov xchg mov call mov or ss fcomi xchg mov mov push enter xchg test fdivl sbb (bad) dec inc (bad) fwait das xor push jnp add inc cmp test fnstenv xor fs push jg cmp subl mov adc cli fmuls pop dec mov adc pop push sub push fstps jmp les and cmp adc cmp jnp loopne push in cmp fildl imul lret jecxz add pop cmp cld push ljmp fadds mov xchg wrmsr ss jp fisttpll push add (bad) pop fs add and stc push les fsin push xor shrb fisub imul shl stos lahf dec sub jecxz inc out hlt cli adc mov xchg jne dec mov lret xor dec jns pop in repz xchg fadds xchg out popa addr16 je add add roll or or mov (bad) ficoml int3 cmp lcall cmc nop into xor jmp push fwait les jb lret pop mov jge incb jb test cltd pop push hlt mov sbbb inc cwtl lcall test inc adc jl ret lods das push aam jmp mov insl jl add mov (bad) icebp xchg out add push test inc rorb mov sbb aas sub or mov lret fbstp test dec pop insb rolb mov xor int3 sub lds pop sub dec cmpsb incl push in jmp mov daa shll divb or sub outsb pop inc lea pop pop or mov (bad) add add lret mov inc push jmp testb jle xchg push push push pushf es sti mov and push pop lret push xlat aad in test out and pop xchg mov dec push (bad) or stc lods pop das mov (bad) ja in mov test pop mov add xor inc daa xchg inc and dec xor cmp cmp dec hlt data16 jns shrl arpl inc cmp pop dec cltd xor icebp mov sub fcomi push (bad) repz sub cmp sub mov cvtps2pd xchg pop xchg jnp mov mov mov add jmp lret insl sbb test nop rcl (bad) pop hlt mov out xor loope mov fsubrl ret jbe pop xor in xchg jne add add dec pop inc or dec pop hlt pop movsl mov in arpl sbb dec inc add dec lock je cmp cmp insl bound dec movsb xchg pop and nop push outsb (bad) std fnstcw mov mov cmp xchg push dec mov dec jne lock mov dec out pop pop mov pop inc pop sbb add pusha int3 (bad) or dec pop imul or mov (bad) push ret lds (bad) and xchg bound clc mov icebp jp add fcompl fdiv xlat pop (bad) mov sti jb pop jle cli scas cmc jo dec xor fsub mov test pop xor je mov aad xor dec add sti mov scas cmp sarb je sbb pusha fisubr ds rcl push fwait dec mov jb (bad) ffree mov neg xchg mov std lods cmp jge add jns mov add add int notl xchg ret lods icebp inc mov cli rolb icebp add mov mov and inc mov mov outsb fiaddl les (bad) fnstsw cmp hlt mov cwtl pop mov mov test iret repnz clc adc bound fwait int xor sub push inc push and inc fadds add les sub dec int inc cmpsb popf pop mov mov icebp ljmp and push mov (bad) cmpsb or ds pop xor inc out lcall out int repz rolb mov inc xchg adc stc roll dec xor (bad) out loope mov ret movsl push xor iret lahf cmpb (bad) lods cmpsl or inc cld outsb sti push jne stos ficom fwait add add add mov sbb mov in pusha mov and outsl mov inc cmp jns and cmp pop mov xor mov bound je pop push cmpsb push inc cmpsl mov int (bad) jecxz or ljmp pop mov mov (bad) pushf lahf decl mov mov mov sbb fstl cli (bad) push mov mov add add stc lret clc add fwait add adc mov daa scas loopne pusha push aam mov lcall clc xchg push cmp mov out jp lret daa or out and lahf sub add daa jne push jle mov inc aas scas cmp and cmp cmpsb mov (bad) bound xor clc xor icebp adc ds scas xor add mov rclb or push and cmp jb jbe pop mov out jmp sub movl (bad) stos ds (bad) mov push aam enter insl lahf jg jno inc outsl cmp hlt std fnop adc loopne xchg sbbl sub push int sub xor shlb lods fwait pop push data16 scas iret pusha inc fdivrl outsb popf movsl test push pop outsl insb rcrl add pushf fcom add aaa jecxz xor push sub cmp vhsubps sbb mov push test (bad) push mov mov divl xorb hlt pop mov pop std add and lret jbe pop insl pop test inc inc dec mov xor mov inc inc or (bad) stc push les aam or outsb lret leave mov jle int3 ret dec out jle mov adc push repnz sub notl mov mov sub mulb inc xchg dec xor xchg adc in loope xchg push mov jbe sar and add pop mov cmpsb (bad) mov lock pop (bad) dec mov cmp lcall ret mov (bad) (bad) jb push mov push fnop push jno ret inc ret stos jns test (bad) push or popa cmpsl repnz sub in cld ret (bad) xor xor or cmp sub sub pop lret adc mov es stos enter mov xor dec inc jecxz inc movsl ficomp pop in sbb enter inc mov adcl mov incl or shrb pop and aaa cli jbe push scas fmull mov add (bad) jmp add add add arpl rcrb pop cwtl loop mov ss (bad) je jmp imul (bad) loop cmpl cli push add lret lcall out aas (bad) jae push xor shr out mov push rorb and dec (bad) out repz fwait aas icebp (bad) xor rorl in pop jne cmpl jbe adc enter xchg push jmp mov xor jbe push (bad) negb lea dec adc fcomps and jp (bad) dec addr16 inc in outsb into (bad) in rorl mov aas in in adcl mov jl dec cmpsl ret pop loope ret js lea xor inc dec xlat lret ds sbb int3 inc xchg add and stos inc outsl aaa cmpb pushf inc sti push inc shrb arpl stos mov std (bad) mov pop lods xor pop popa pusha pop jne test ds rcl idivl push push or div push fcmovu push adc xchg mov ja loopne (bad) int cmc push inc jmp inc adc jge dec dec pushf mov sbb data16 or jae adc inc dec das mov (bad) into inc int3 lahf movsb adc stc fwait xchg pushf arpl add mov scas push (bad) xlat mov push push dec pushf (bad) hlt lret es and mov in stos lret and out xor fidivr imul mov lods xchg mov outsl pop inc enter mov add nop bound or arpl int3 sbb adc jns lds lock push ds push mov mov dec scas pop ja push and cmp fdivp cld lcall xchg test lret xor jp ljmp enter ret aad jae xchg pop jo inc leave in inc outsl push cmpsl mov roll out xchg mulb ss push je inc cmp sub stos aas inc out int lea repnz sub push xor add add xor popf push cmp sub ret cmp enter xorl dec (bad) mov add dec les in pop outsl popf mov add aaa fnstsw add mov cmp jp pop adc xchg sbb sub push mov cmc or mov imul push pop jb test nop shrl ret pop ret mov ja push mov or out enter adc lods mov pop lods and xor faddl inc in lret leave test jmp into sub push imul xchg lcall and mov out or clc mov push ss pusha mov lods xchg pand mov lods mov mov ss add or mov adc dec test adc out cmp jl insb js lea xor dec and inc lods stc xchg les out xchg push sar push xor xor cmp sub mov daa sbb fadd push fs cmc push mov sub xor dec int pop inc pop or ja or mov sbb aaa aam (bad) mov xor jbe xchg xchg pop out add add add cwtl in int sbb sbb mov jecxz (bad) xor xchg enter cmpsb adc out lods jg lea push test cmp int3 inc sub ret cmpl je ffreep outsl es mov fnsave xor out cld les cmp xchg push dec fimul pushf mov or and jae push mov mov push loope mov test aaa jo sbb sahf xor xlat ds lods sbb insl inc mov mov mov sbb bnd push in rcrl out jp clc mov (bad) mov pop push push in jns xchg cmp fidivrl repnz inc pop mov lcall cmp pop das (bad) fadds aaa out mov movsb adc jb ljmp pop sub lret add jno pop xor jmp stos es pusha adc push mov imul sub leave lods popf xchg std dec push stos fldcw in and test lods scas iret adc mov sbb stos push pop cmp cmpsl cmp xchg xchg xor mov or xor sub mov xchg aas mov insl lret pop mov ret aaa outsb fsub push movq add push ret sbb lock pop insb add and add xor jns aas iret ffreep or popa je adc outsl es push mov ss inc cmp nop cmpsl mov sub testb bound pop (bad) stos divb in mov rcrl or nop pop mov ret xchg inc roll add in mov mov jecxz inc mov jle fwait movsb xchg mov xchg fcmovbe lret mov mov sub push loop push ja pusha sbb xchg pop jge add ret out dec out lock fldt mov inc (bad) jb test ja int jle clc dec lods ret xchg fmul nop mov inc in add (bad) lods pop les xchg divb ljmp fbld push add push xor pop sub sub cmp scas mov lret fldl sbb or inc and mov inc daa jle lods mov add inc mov xchg into (bad) les pop xchg je pop ret aas jo mov mov adc push mov arpl dec jge sub mov fwait mov bound imul inc test movsl (bad) mov push les lods dec mov cmpsl incb mov cwtl bound ret test push mov cmp cmpsl or cli sarl push xor jecxz mov imul mov bound add sub push vpcmpeqd in cld aas sbb das xchg enter ret subb mov sub lret pop stos cmp aam push add add ds or push add xchg pop test in cld sbb push icebp das mov mov addr16 mov push add loop pushl cmpsb or sub jmp mov sbb or inc pop pop addr16 sub sbb (bad) je push mov imul inc bound jp xor sub push icebp into fwait pusha and js push cmp cwtl mov test jno mov aas mov mov cmp ds mov sarb adc rcrb (bad) outsb mov xor add (bad) pop les dec notb dec outsl outsb addl and inc cli cmp push enter out pop les inc dec call add ficom repz add or jmp (bad) adc out movsl push mov aas nop jle stos fisttp sbb dec fcoml insb inc cmp icebp scas cmp xchg mov fdivp jl ss fnstsw ja adc cmp push xor jp mov dec ret pop ds push ljmp (bad) xor push xchg divb out and mov cmpsl lahf popa inc fadds add add loope outsb push or xchg jl inc dec mov push push nop push adcb and pusha sub jmp out nop jmp loopne pop idivl or sbb sbb fwait stos scas push (bad) ficom jae push jnp out aaa sub fimul mov ss mov add into fwait je loopne in cmp imul and cmpsl mov pop call pop mov sbb addr16 add add mov sahf push xchg scas bound lock dec jge hlt push mov (bad) mov jae pop fistpll add or add js imul shll dec mov mov push call and loope add imul stos into xchg movsl iret mov stos enter enter stc stc or push jg jmp and cmp xlat pop in std xor cwtl xor add add rolb (bad) or add cmpsb push push call mov mov adc sbb leave data16 adc out in inc fcomi mov pushf ss xchg test pand push rorl testb sbb out xchg psrlw or mov ret pop mov mov clc pop (bad) stc lahf inc shl movsl pop pop imul les inc roll cld mov cs adc in or sub adc mov mov jecxz inc or xchg loopne inc int3 (bad) xor or subl push xchg dec xor mov push sbb or xchg into jecxz or movsb inc movl outsb push in lock sbb fcomi popf cs ljmp xchg lds or out pop testl add pop out movsl inc mov in out push in popf movsb repz xor lret imul cmp outsl testb inc or lods mov inc cltd in add fsubrl lret mov xchg lods enter or add out jae cmc fsubrp mov mov stc out int (bad) cmp lcall pop push inc fcoml shr leave scas cmp popf and xor jb mul inc xlat dec arpl add (bad) notb loope iret pusha out jecxz mov ss sbb mov mov pushf lds bound (bad) or inc mov adc mov dec mov push push pushf push push xor (bad) out cmp adc ds sub push es out lahf out ds sbbl xchg dec sti push lds les std imul add xchg mov fadd xor sbb imul adc cmp cmp lcall in cmp lds dec sub stc in mov insl lods jbe nop lahf imul xor les pop sub lret dec inc imul out lret (bad) or movsb mov or mov mull ret rorl and sub addr16 fild dec mov (bad) das imul mov push mov repz dec cld mov stos movups lretw sbb sub das add shlb jle cs cmp push call std add and test sub pop pop fstpt repz mov rorb mov mov hlt push stos movl add add dec xor out (bad) jae pop fist add xor add jl pop dec out aam push cmc popf notl cmp in int3 jne jmpw jns jmp loope jp add fsubrl fiaddl xchg (bad) push pop push sub (bad) mov movsl sahf out aaa sub test mov sahf xor roll lret mov inc mov inc (bad) push and add mov sbb dec mov cmpsb xchg test mov pop ds xchg nop test ds fwait sti fiaddl movsl scas lds sahf jno add sub adc add addl call scas stc inc push aam xchg incb mov je inc outsl mov push inc jle (bad) hlt xchg xchg inc ret xor cmpsl (bad) and sub add mov gs mov bound xor or xchg push scas sbb in inc loope fdivrs ret and xor cmc and aaa push fistpl mov xor inc lret adc push stc mov and sahf push dec mov (bad) cmp sub loop lds push test lock pop sub (bad) icebp lods jge jmp inc xchg xchg outsb fs dec sbb add mov mov leave rorb cmp pushf xchg out mov stos inc push scas and dec cmp scas cs ret test inc adc rol xor movsb mov fnsave rcrl mov sbb mov movsl ret xor movsl mov sahf enter (bad) sub or in dec notl insl fdivrs mov sub add add ss out fcompl lods mov ds mov and fiadd sbb inc in mov test sbb jmp ret sbb add or es add nop (bad) ljmp jbe mov dec lahf push dec mov sbbl pop jbe bound or mov add (bad) jbe or xor ret xchg popa roll inc push cmp in mov inc mov sub xchg mov sbb push lcall inc pop xchg push push mov nop daa rorb cmp sub mov out lcall xchg inc in xchg or xchg mov (bad) stc push mov loop jae adc and leave add outsl cmp cmp stos cmpsl ljmp xor xlat out insb inc rcl jo mov add stos rorb stos retw inc mov mov pop mov lret add push not add (bad) add imul mov sbb les stos insl test jmp pop rcrl mov aas arpl ss xor cmpsl mov lods jge pop insl adc das nop pop and add imul js push xchg leave add add rcll ja mull xor cld push xor dec lods jl add xor fidivrl std lret and in push loop pop push ss out add int3 push push xchg out aaa xchg popa push ret in or adc inc pop imul xlat nop jbe cmpsl xchg icebp jbe cmpsl cmp in (bad) mov insb sbb mov pushl imul movsb iret faddl jae sbb cmpsb add pop cmp iret jmp pop xor rcrl cmp (bad) cmp push scas int dec mov scas pop ss fs xchg mov ret and cmpl (bad) stc xchg std aaa lahf pop mov fisub cmp cmp scas fmull sbb cmpsb lds pop pop adc sub sbb push lds xchg cmp fucomip aaa and or lret push xchg cmp jnp jne add pop pop insb inc cmp inc scas cmp ss push jae cmc stos xor jmp orl fbstp dec pusha pushf ss andl adc add mov cltd inc fisttp (bad) loopne jl mov repz mov ret and push push idivb sub stos inc jmp add sarl inc or lods adc ret aam roll add dec pop sbb outsb mov test fmull sbb pop mov push testl adc mov imul xchg insb fistpl fsubs aas mov sti mov cmp cmc mov repz dec xchg fadd mov jne outsb adc xor ljmp or cli dec add aaa imul cmpl mov es mov (bad) mov (bad) dec movsl adc stc dec mov int jne and fldcw sub xchg sub mov mov inc inc inc push push push dec js enter mov xchg cmc and mov bound jno fs jo cvttps2pi push jo push push inc out xorb scas push lea icebp idiv sub hlt out cmpsb mov das inc sub dec and aas mov sbb push cmp movntq (bad) cltd pop inc sbb cmp movsb scas iret je and roll jl inc in aad push (bad) mov movsb stc push mov mov jge test fs sub jmp mov or inc xor out pop repz imul jge sub andb dec mov out dec add add cmp ror jbe push jmp ret sub lods popf sub xor mov push lea xchg jbe mov push cmpsb xchg popa dec jecxz pop push mov lock dec sub xor mov fstps imul pushw adc push or lea inc sub inc add loopne lods sub inc (bad) xor add jo and pop and lret int push shrb add lret xlat mov and xchg (bad) mov dec (bad) and sbb add inc xorb xor sub xchg out pop in iret pop pop ja dec sub sbb lret xchg pop popa fwait mov mov mov jg scas pop imul std ds mov inc jnp cmpsl dec add fdivl clc shlb inc fisttpll add adc shll cmpb inc popf jp dec xchg mov add bnd push adc icebp test jo mov adc jmp push xor es loopne clc pop jecxz enter sbb stos movsb sbb cmpb in inc pop xchg adc outsb imul and ss outsb add decb out xchg lods repz test ffreep xor sbbb add cmp popf xor cmc shrb lds dec sbb ds push std pop or adc (bad) cmp and cmp ja je pop ss jecxz mov mov inc in jns ljmp sbb jmp sbb (bad) mov xchg xchg ja xor sub pop push cmp sbb enter in fisub xor out mov cs (bad) addr16 or or sub leave pushf ret or insb bound cwtl mov sbb xor ja (bad) xor mov xchg loop xlat push dec push mov mov jno dec jge clc in lret mov out jb in mov ret mov sbb sbb movsl adc jb or add cmp dec leave jmp jnp xor repnz xorl out jns sbb stos adc push mov mov cltd dec inc pop mov inc out sbb or ret sbb cmp sti dec js mov mov sbb push (bad) or sub sub dec push mov add xchg je xor outsb enter add lods (bad) mov cmp sub mov jmp test movsb hlt ljmp pop andl sub or fcmovu jg mov push sti mov or (bad) mov das cld fist mov mov cmp cmpsb test aad (bad) sub or or xor inc aam push lods pop mov inc mov add icebp pusha fidivl repz push mov xchg bnd xor jge,pt inc notl ja mov or fdivs into loope jns stc popf mov fwait inc sbb dec xlat notb mov xchg mov inc mov out aas gs mov pop hlt push cs xchg adc push shr subb xlat mov inc xor pop je ss jne sub add add repz test sub and not mov inc bound mov push cmpsl and ds sbb and add mov jmp int pushf loop int3 into push mov cmp add jbe dec fadds sub pop icebp and mov cmpsb test sbb nop cli sub xor sub dec jl push push aas outsl xchg mov add mov jl sbb test jmp insb add aad sub scas xlat mov das pop adc push out mov and sbb push lret cmp xor sub aam xchg aam int mov fisttp les lcall jl xor dec pop jb adc orb sbb sbb jg mov cmp das sub add mov mov mov mov cmp push rcrl fnstenv push sub mov (bad) fcompl pop (bad) xor inc dec adc shrl out addr16 pop add mov jne cmc ljmp (bad) push pop (bad) sbb int mov mov cmpsl test push pusha cmp dec mov jno mov andl add add dec xor adcb ret dec lock and fistpll adc dec cmpsb leave mov gs ss push popa cld sbb push adc mov (bad) int3 jo push pop insl xor lret cmp inc push pusha insb sti mov insl test dec adc lds mov push rcll lods movsb adc (bad) adc add shl in bound dec iret movl popl add (bad) jmp inc jge int (bad) dec push mov lahf cmp insl xor mov lods bound dec (bad) sub jo push insl enter sahf push dec cld imul div and jmp popa inc outsl in icebp cmpsb xor jmp addr16 pusha cmp inc fist fdivrs in xor pop jge push int mov imul inc lods pop lock dec add xchg icebp (bad) or xor push inc clc cli popa das mov (bad) jne mov frstor cmp (bad) (bad) scas pushf dec dec xor scas sar and fcomi jnp push or cs idivb add stos into clc int3 adc bound push pop sub sub dec pop xchg inc cmp dec icebp fidivl repz test stos jo jne je mov add add (bad) mov xor cmc in mov xchg fdivrs icebp sbb mov pop div jge negb stc add repnz int3 rcll lret jg dec pop stos jl jl pop out dec dec sbb rolb lods aad inc mov mov das pop jmp mov adc sahf mov stos inc (bad) fsubs shrl sbb test mov push stc cmc mov (bad) add mov aad roll in adc out jecxz fstps dec push enter jnp mov popf lret mov je jecxz mov clc dec out outsl add and xchg in jmp and inc push daa push adc dec mov shrl mov or je out js loop or push mov push mov data16 sub cwtl mov add inc inc jle (bad) hlt inc cli (bad) pop (bad) cmc and in dec mov xchg cmp add mov addr16 ficoml cs ja xor icebp jno add into push out std sbb leave insl xchg mov mov leave aaa iret lea aam pusha test repnz and pop (bad) jo inc unpckhps ja cltd xchg ljmp loope or gs lods mov mov add sbb lret xchg jle int psrlw adc jl mov push jmp xor lret push fcompl mov pop mov (bad) (bad) push leave adc test mov sub fsubrp sub fcoms dec jo xor es dec imull dec jecxz push lcall mov test aam mov movsl leave mov lock enter xor add pop pusha jecxz and cmpsb xchg test jbe mov push mov test or mov insl cltd das pop adc mov test mov repnz int3 (bad) ret inc ret lods jge aaa sub pop fsub push adc xlat clc nop arpl in (bad) jne mov fldenv insb jle aad aaa xchg ja mov enter sets pop mov lret push je out add aaa and dec and test lahf dec inc jge dec jl (bad) dec out scas push push sarb dec daa jle adc dec jp lock and dec lahf xchg inc movsl mov insl ja mov insl pusha jl jecxz mov cli popf in test ljmp cmp (bad) cmp mov mov dec push lret inc mov add adc pop cld nop scas push add add add add cwtl ljmp mov fstpt incb cmpsb gs mov fiadd cmpsb and dec mov jno push or cmc arpl roll cmp pop and daa jno cld sbb pop test xor pop addr16 pop nop test xlat scas ds add pop insb sbb xchg add mov xor lret data16 fucomi fadds mov xor mov div sub test fsin test lods or and mov out add mov pop cwtl cwtl mov push sub repnz and adc lock inc pop pop sub sti (bad) mov out inc aaa popa fs cli and ret std jno arpl add sbb mov add jbe std test dec mov idivb mov cmp das das shrl or xor lods ds fidiv pop int3 cmp cwtl pop or pusha add and ficompl test fwait xor test mov fdivs aaa in orl mov mov cmpsb dec sbb inc inc push xchg add add jo push cmp iret out mov xchg jbe pop cltd cltd xor out add movl jecxz push ds push mov pop call cmp add push mov clc and imul subl add (bad) in lds sub mov mov dec movsl sbb jl icebp lcall test add jl add push push mov aad push inc dec (bad) ss jg mov dec pop mov push push adc movsl inc cmpsl xchg out mov mov mov add ss mov std movntps out lret aas out mov mov jbe inc out xor pop and xchg inc aas jno cld sbb mov in dec xor push or ljmp call cmc add add scas out xchg cld or sub xor push lds pop addr16 xor inc test imull inc ljmp (bad) sbbl in int inc and andb lds ret xchg mov fldt call ja lock add int xor lds and add jb and mov fbstp mov int sti dec add add sbb add sarb outsl mov xor xor add mov mov out cli ret pop jle lods inc mov push call jns mov mov je jmp lret lods mov mov pop lret push popa jecxz arpl mov push adcl in stos ds add jae mov jecxz int3 cli inc cmc enter xor fimull xchg mov mov (bad) test mov aam ljmp leave (bad) ss jne imul aaa sbb (bad) add (bad) jne dec jl mov and push adc mov gs jmp insl ja xchg pop subl mov lock mov cmp add fnstenv xchg clc test mov int or add jp ljmp sarb mov push push ljmp push dec (bad) fisttp inc ret ja pop xor cld (bad) xor push int push enter mov add or scas call xor cmp (bad) sub add lds cwtl into out leave gs and mov push les insb arpl mov loopne cmp shrl push (bad) mov mov dec mov pop pop aad push cmp xlat aas loopne xchg outsl or dec ss fptan repz out decb mov lret in mov jmp addr16 inc aas enter adc jl test mov inc loop outsl mov mov leave lahf mov inc lcall dec sbb fwait xor out xchg pushf sub fmuls sub add sbb pop daa inc decb js and cmp popf lock push loope and and cmp das and mov pusha es lods push mov xchg mov add jge and sahf mov ror xor mov lahf mov inc xchg int (bad) aad (bad) lahf xor jmp push stc arpl mov mov cmp in inc leave mov push test add jbe or sub jecxz mov sbb pop mov mov cld xchg push sub jo (bad) mov push sub push lea das pusha aaa movsl jmp pop push inc out test lret scas push hlt mov addr16 push push mov cmp insl jae (bad) jo mov xor iret jg repnz and sub cmp ja decb xor mov add jecxz dec cmp ret test js movsl cltd lret ja xor repz xchg leave fisubr cli fldcw enter mov test push adc aad negl cmpsl pop push loopne dec adc test mov test and incb cwtl bound mov push pop pop sub xchg mov mov xchg outsb mov jno pop ja xor xor (bad) icebp mov aad dec adc dec in movsl je mov js ljmp push push jge push push adc mov sbb cmp mov movsb out adc popf shrl movsb inc dec mov aaa add mov fwait test push cmp loope inc imul out xlat lret cld pop push je and fucomp faddl mov repnz add add dec mov js popf lcall (bad) sub ja xchg dec push and lods leave push lcall add mov ret addr16 inc int3 icebp sar jo mov leave ror addb inc sub aas mov sbb jo rol je jmp ret jl inc mov mov div daa cmp pushl je or sub js js,pt stos into xchg out addr16 push xchg mov pop aaa sbb inc out jae cmc fsubrp mov push jmp pushf xlat cmp cmpl lods sbb mov push push fs add sti es cld push arpl mov mov das mov ds bound mov add testl add add add add lea xor stos add outsl les xchg inc enter jmp mov mov mov lahf mov inc push aam xchg incb mov xchg movzwl fimul inc push xchg xchg inc ret mov jbe out jne sub (bad) pop jp mov test pop mov jne daa fldl jmp jnp (bad) js mov mov scas push add add adc and mov out clc pop push mov mov aas ds fcoms in fdivrs and (bad) cmpsb (bad) and mov mov decl lret cmp inc mov dec aad adcl and push jmp cmp dec leave mov mov cmpl pop mov in stos inc cmp jno,pn es fnstenv add (bad) (bad) aad cmp fsubr aaa repz dec cld adc or inc sub sub jg inc fildl mov inc sub push xchg enter push (bad) fsubrl pop arpl mov xchg ds cmp jo dec daa jns mulb xchg stos mov pop inc insb inc inc sbb xchg packsswb sbbl in push dec lds das mov xchg popf negl clc notb test or lods mov cmp push mov sub into mov es in jle xor push mov clc adc cmp ljmp ds jbe aam mov push push jmp mov je in push cmp sbb inc test clc (bad) aas inc icebp ror push and add rclb xor fstps data16 rcrb xor lea out adcl jg mov stos div into adc stos inc imul lcall ds adc int3 inc xchg or inc and push stos inc or and shrl rcll fidiv test addr16 push ja sbb loopne cmp in sbb inc sbb sti sbb scas cmp inc gs fsubp dec fisttpl cld fidivr mov sbb jnp push inc jecxz mov iret push adcb imul pop or inc mov cmpsb leave sbb enter out jmp int pop mov jge rclb mov out jb pop cmp mov leave mov dec dec neg add dec repz pop call add push rcrb mov test push pop int sbb cmp lock sub cmp lods (bad) fstpl lods (bad) insl sub (bad) jbe cmpsl out sahf pop sbb push mov lea sub sbb (bad) stc leave xor mov push mov inc movsb ds repz dec data16 hlt pushf orl mov (bad) jno lret mov xor pop sub sbb add sar inc inc jo mov mov nop cmpb imul xor je sbb sub push mov les les pop push out mov fwait js mov sbb test aam push dec faddl out enter xor testl sub cmp int mov pop orb (bad) xchg sub outsl jo adc add add sbb sub xor xchg cli dec stc dec cmp fwait popa loopne and les pop pavgb and dec repz lods mov cwtl rolb jb out call outsl leave outsb scas fwait loop mov mov std fcomps out lret xchg aad push jae js mov add into in std int mov push das sbb cmpsl cmp mov pop mov mov scas cmp scas cmp lea add add out adc adc test cli ret pop jmp aas pop call mov in mov fidivrl inc mov iret adc jb xor dec icebp test push sub mov in pop aaa cmp sub pop mov lea jmp pop fldcw hlt sbb or shll int imul loope outsl seto add ret cmp flds or dec cmpsl sti fld je fisubr clc enter loopne inc cmpsl sub add fs (bad) bound ss jge mov cwtl cmpsl pop repnz pop gs cmp aad js push (bad) sbb add shrb dec adc lret and and jb and add pop mov dec and (bad) lret pop dec xor cltd aas push aam mov hlt add pop popf cmp lock cmp dec sbb mov inc cltd jnp fdivrs dec inc js out imul aaa arpl jnp jg mov fdivr sub daa dec pusha pop jbe jno pop add cmp jns push mov sub and dec and push mov out fnop stos jb fnop sub movsb adc imul xchg icebp adc xor movsb xor mov imul xchg mov fmull mov cmp inc and cmp xor and mov jb imul xor jns adc push pop ret lods or les loop insl cmc cli xchg testb lods dec pop add xchg push and pop and fld push enter jo stos or mov add sti in and subb popl mov fisttp xorl les and sti pop stos adcl sub stos mov push pushf insb push pusha mov ret adc nop push leave icebp and xchg mov mov fdivl jl into enter mov cltd jg sbbl jmp jecxz sbb mov movsb stos push xor imull mov mov mov in (bad) push dec jecxz notb mov mov ret imul ret pusha or (bad) repnz test shl clc movsb inc push dec inc call in jo or fwait push aad out push jb movsl jl jecxz add rcrb mov mov roll add rcll (bad) mov xor jae and pop dec add mov decb add pop add pavgb in ja push sti pop or mov add or stc int inc cli cli jb add lds xor xchg dec pop idivl cvtpi2ps (bad) jno fdivl ljmp sahf cli movb adc fisttpl pop or add push (bad) lahf out les lcall ret sbb rorb inc lods inc mov sahf ss xchg sbb dec adc sbb push xor jb ljmp pop mov cmp (bad) jecxz stos or dec mov scas mov imul xchg cmp fild cltd pusha and dec aas cs dec dec jp repnz data16 add add sbb addl das mov in ret push imul mov bound cmp add xrelease mov push loope pop cmp inc pusha (bad) ljmp test fsubr addl cmpsl mov popf pop enter dec adc push mov test (bad) add cs dec jmp add loopne ss mov jmp test inc jne sub in ficoml cwtl test fcoms adc adc lods push gs lds outsb sub arpl add mov (bad) sahf cmp mov mov sarl cmp push das jmp std cmp mov jno and cli pop outsl loopne add mov lcall popa xor jnp and add pop ja adc mov sub xchg push pop ljmp insl int push out (bad) lock adc mov dec bound sahf pop test gs or daa sti (bad) or sub xchg push cwtl aaa addl inc xor dec push dec pusha and sahf cli cmp mov iret xor test and and jne cmp shrb add rolb jns arpl nop cmp jge add mov mull inc jp jae pop (bad) je mov jg (bad) mov cmp (bad) mov inc or insb jecxz sub ss iret (bad) das or cmp pusha ficomp ja ss jne and sbb mov cli sub dec or fcompl pop cmc mov xor pushf rorb rcr andl test lahf inc cwtl cmp push adc jmp xchg dec inc mov ja sub mov xor xor inc stos mov int3 int int gs scas jmp mov mov enter in mov adc inc add test (bad) ss sbb xchg sbb movb sbb loope mov pop xlat mov add negb push xor dec nop add fdivs rorb mov addb imul adc cld pop loop enter paddsb iret out roll add shrb sbb lods hlt mov mov js inc lea mov xchg rorl pushf cmp push or push or ds je clc popf cmp outsl cmp aaa (bad) in push dec xor cmp cmp pushf adc add sub xor aaa out dec popa fstpt add sahf mov xchg pop (bad) mov (bad) lcall ret xchg movsb inc (bad) je outsl outsb insl hlt aad or push sbb cmp es (bad) les push xor roll mov out mov inc cmp cmpsl out sub pop lea xor ficom mov repz fidivrl outsb push jg dec rol (bad) mov lret ror jae std adc enter lock push jmp outsb sbb dec idivl xor (bad) mov or mov jp fidivr xor xchg lock inc fistp mov sbb out sbb int3 rcll sub jl mov out shr dec dec bound daa rolb nop fsin pop mov inc inc mov fsubs dec mov xchg add mov (bad) mov stos mov scas push pop jnp inc mov movsb xor fisubrl mov or sub int3 iret mov pop jne pop orl dec cmp push push pop mov cmpsl add data16 daa addr16 popa pop xor pushf dec int iret bound out sub xor pushf push and xchg in ror mov leave mov or xchg lcall inc mov push cltd dec cs rcl adc mov les fsin test movsl or pop sub mov xchg mov popa imul fsubrl movzbl sbb cs pop (bad) pop mov insb lret mov fbstp mov push mov movsb out push push or div test mov scas inc jno xor popa (bad) xchg out add add inc xor xor adc gs sbb pusha das fs xor and xchg cltd pop pop sbb dec cmp lcall jp dec (bad) icebp das mov push sub les xor repz leave cmp cld cld inc pop push lods mov jp fiaddl hlt aas ficoml mov dec mov cmpsl shlw xor test jae out out mov movsb push (bad) cwtl jno sbb (bad) stc mov pushf mov mov sarb jns mov cmp inc xor repz adc push and xchg pop jae fnstenv (bad) not jae push cld aam pminsw mov inc xchg xchg cmp jecxz push pop ss adc shll adc in test fisttp jg out add movsb out push imul add jne pop imul add jge fcoml test fldl roll call andl popa or addr16 inc scas jl mov mov push stos pop daa jb int sub jo sub xchg lcall rcrl adc rcrl sub or jmp imul addr16 jbe or and call dec add add in test push cmp cmp dec xor push xor (bad) div ret cmc cli sub pop sbb mov xor push jle mov pop lds es fisub arpl or xchg sub lahf test or dec sahf loop rorb loopne (bad) outsl cltd sub jb test xlat sub or lcall mov loop adc sahf push mov test and and in or cmp xchg fiadd xchg pop mov jmp call xlat pop xor andl in pop leave mov out mov xor sbb or clc nop fs pop cmpsl push push stos pushf pop data16 (bad) rcll lods jl sti js jl fisubr fild fcoms dec js pop lea sub mov lret mov (bad) cmc sahf fmulp add (bad) mov xor mov or adc cmpsl pop push mov add mov in inc jge jns (bad) xor xchg mov jnp mov xchg jae cmpsl cltd xchg push dec dec rol add pusha pop adc push ja sbb cltd loope pop jp push jg lret fdivrl xchg mov mov jns dec pop scas mov movsl or add cli mov xchg dec cmp stos sahf jb lods dec stos aad mov add push push xor xlat scas add fcompl fsts or xchg rcrb mov or dec repz mov clc std xchg fisubrl call dec loop fsubl push popa mov xor fcomps sub jle stos jo stos ljmp cli pop dec mov inc call add xor ds cli xchg jne pusha dec xchg dec mov insl addr16 cmpsl xlat loop popa pop (bad) daa dec mov mov cltd push xchg xor push jg pop push mov into adc inc nop inc cmp xor outsb mov fwait and xchg scas aaa adc and xor repnz fdivp push pop js ret nop and test xchg add xchg rclb push mov in ficom jnp sbb mov mov or outsb push inc fnstenv xchg cmp jae pop fisttpll repnz les inc inc (bad) icebp call out outsl inc (bad) jge lret lahf roll cld mov inc shrb jecxz sbb xchg dec cmpsl enter mov (bad) cli or arpl fisttp out add add lret sti dec cmp loop mov xorl pop popa push pop and incb (bad) scas out xchg (bad) sti movl xor cmc and imul ja dec in mov pushf pop lret in lds call xchg ds fstpl cmp adc xchg adc insb bnd roll mov mov jmp jl dec out aad add add jge add cmp (bad) flds nop fxch iret pop scas lea sub sub fcompl push xor pop ja xchg mov pop push lock dec adc mov pop push sub mov jne lretw movsb mov idivl xchg push mov scas push adc inc enter daa mov adc pushf loop jne out pop push mov mov loop fidivrl add fcoms ficompl push cmp xchg inc insl mov xor (bad) xlat into sbb scas fisttpl call testl ljmp xchg fmuls push jnp enter shll xor inc sub sti inc mov mov mov inc cmp mov xchg adc xor inc pop mov clc pusha repz jne pushf adc (bad) jne jne loopne addb add std into fwait je mov mov les or nop lock loop cmp ficompl xchg push fwait test cld outsb int xor xchg dec dec add aam ljmp out ss push iret cmp out add inc adc pop outsl mov dec push cs xchg scas (bad) jnp outsl es int3 push jo jns push push jnp xlat call stos movsb push leave shll add add xor adc repz push cmpsb (bad) fcom dec fbld mov mov imul pop xor mov xor or jecxz xchg test cmp daa mov insl or jae fdivl fsubrp out push loop inc sbb loop mull pop pop add in insb stc leave repnz iret push ret pop insl jnp pop cmp add dec xchg add add xchg aam sbb (bad) xchg fwait pusha or data16 daa in xchg adc dec loope xchg mov and sub insl mov mov (bad) inc cmp inc sub (bad) test add push push or es mov xchg fs jno and push lock rclb pop mov and cmp sbb iret add nop pop repnz lcall cmpb in sbb fisttpl mov jns (bad) notb or dec pop daa sub xorb mov inc cmp jl jg dec pop out xor out es les lods insl push mov inc aas add hlt call jb jle cmp jb pop ds (bad) mov sti sub nop nop push push out inc or xchg add add xor out mov out imul ds adc fstps mov pop call xchg mov add mov mov mov mov fnsave add leave int push cmp adc lcall and push adc (bad) mov das pop push mov xchg fisubrl inc decl test adc jle je or add push pop leave or sub pop enter jnp std out mov sub std sub jno inc adc mov mov add mov (bad) fdivrp add (bad) hlt int3 or mov jmp jno or addb pop cmp loope sbb lret std inc hlt mov mov adc pop test stos pop (bad) fimul xchg mov add add fiadd cmp iret or cmc xchg gs imul jl fisubl cli push xchg call stos add sbb int3 adcl jge mov test addr16 lcall xor xchg insl scas push cmp movsl test dec enter daa sti mov dec sahf movsl dec lds icebp pusha punpckldq sub push imul mov push push add add add mulb adcb pop pop sbb sub cmp sbbb sbb xor jg fcoms and and fisub xor jbe scas rep cmp sti cmc test pop cld lds push adc lea out dec xchg and push jb imul dec outsb stos push stos add hlt repnz cmc frstor push scas sbb jge pop lahf mov sti xchg dec xchg pusha pop mov lcall roll fidivr (bad) mov xor push orb test jge clc test adc jno fs ja js (bad) mov cs scas xor add mov loopne js cmp int pop call jno inc sub add add push mov icebp jnp jae cs iret xchg pushf adc dec cli cltd cmpsl fwait jmp data16 pop inc cs ret ret dec lret lcall pushf popa xchg and jl mov pop ss cmpsl mov pop push fnstenv inc inc out inc js popa mov push jge xchg dec stc or faddl mov rorb outsl pop dec and cmp cmc inc push add add icebp mov mov movsb adc mov lret push enter cmp mov add fisttpll iret mov insb adc notb mov daa mov icebp aad mov pop in mov test loop daa sub ficom daa test (bad) in dec and add pop (bad) jbe push xor xor jg test (bad) mov mov add add dec repnz pop fistpll cmp sub outsl add cld jnp mov sbb cwtl mov xor push mov mov flds test jmp lods cmp mov sbb gs jl push ja push in (bad) jbe cmc mov cmc sub gs push push and ret das loopne mov add fwait xor in and add clc mov mov sahf or lods jmp sub gs pop movsb scas shll mov test inc (bad) dec ret mov and out scas out test stc mov insb sahf lret and add sbb addr16 cmpsl out cld stos test lret fldenvs jecxz mov cmp xor ret lea cmp jecxz jl outsb pushf adc add jp inc in add pushf sbb enter dec dec jl pusha (bad) rcr pusha and pop (bad) dec fldt (bad) mov pushl movsb ljmp adc lahf and adc cmp jne pop mov incl jns (bad) imulb jmp sbb les sar sub out imul xor pop add call or int xchg cmp test adc or add or xorl cwtl cmpsl int3 inc jle adc lret fcom dec int3 mov dec add cmpsb rcrb fs fisttp popf aas aad sarl das cmpsb dec pop inc jmp fiadd stos insb int pop mov int sub dec xchg mov mov xor jecxz movsl fcompl adc sbb js sub sub mov pop mov test shll add adc push add xchg push and jle sbb addr16 or xchg (bad) (bad) fnop mov sarb mov push push test cmpsb xchg loope mov sarl push or dec jmp lods jmp and dec lret ss or pop ss jl dec in popa cmp movsl push inc data16 fimul fsts ror push fstl xlat lcall in push dec (bad) inc push add add mov stos repnz es out push or gs scas popa pop in add ljmp mov stos (bad) and jle mov jle lds add es mov das mov mov negl pop mov lock dec mov repnz lock stos push ds xchg or popf jl pusha ss pop repz (bad) jnp inc (bad) icebp add jno (bad) jmp dec int3 mov push cmp pop jae,pt incl jne fwait mov mov push into cmc adc inc jp fbld rcrl add or clc sbb loopne shrb (bad) adc int3 mov test xor xor jbe arpl js in push (bad) xor sbb jae lret mov pop fisttpl and sbb in lds add add mov or xor or imul xlat jge push sbb pop mov cvtps2pd mov sub dec lods sarl pop jns imul fcomps ret mov inc int3 pushl enter inc add jmp popa dec (bad) pop mov mov stos adc jo (bad) push loopne push mov fwait (bad) pop xor lods (bad) pushf adc xor add add fmuls ss push adc xor dec lods inc les sahf das cmp out insl xor inc lret mov cmpb (bad) mov dec addr16 shrl dec (bad) ds pop es mov adc cltd jo ffreep cld insb call lods popf out mov xor fldcw pop loopne xchg mov out das xchg out loopne mov fildll addl into jmp adc jge sub movsl fmull jp mov sbb idivl or and shrl push push (bad) aam push (bad) add fwait subb cmp outsl xchg cmp mov sub jp sti (bad) ret jecxz aam sub xchg fstl push dec adc pop (bad) out add mov add jb inc mov or mov cmp sub mov inc imul clc loopnew leave jmp loopne mov jne into pop sub imul inc and pop mov out scas and inc frstor fidivrl pop mov fs inc ret or js sub push jo scas cmp imul xchg enter sub imul add pop add cmpsb les outsb out push dec mov push cld fdivrs jnp adc aas and (bad) cmpsb das cli pop jge mov shrb fptan mov repnz mov mov mov push pop pop dec bound daa rol test mov nop fnstcw cmp add fwait fs sub push pop mov rclb in inc xor pop mov out scas and jb mov mov add clc adc and jmp mov call push inc cmp sbb imul int3 mov or arpl fnstcw clc mov mov inc push mov outsb aam lods (bad) imul loop ret sbb imul fidiv das stos or dec aad xor shr xacquire push cltd dec and cld ret (bad) xor xor test add add ljmp stos cwtl into pop sub iret ds jmp mov adcl scas mov sbb fs sti adc jne popf jno push fs cmpsb inc aam mov test mov cmp push or dec lock mov mov (bad) adcl andb daa sub dec das ljmp cmpsb (bad) (bad) pop add add jbe lea pop jb push sbb rclb sarb fisub (bad) xor loope mov pushf jb xchg inc sub jl add mov dec ljmp test dec popa push mov sbb push mov aaa (bad) mov inc cmc cmc (bad) xlat add xchg xlat xor pop jle jmp sarb lods dec push fdivr push lret xchg repz add xchg mov cmp jne insl mov jnp ss cli lret imul inc lret pop pop fwait notb std fidivl pop adc dec test stc xchg test jp mov out ja mov dec inc dec test gs pop and cmp jmp (bad) ret leave ficomp ss or and test (bad) jl add add sbb or fisubl addr16 fisttpll dec gs push scas cmp insb aam inc xor dec lods jmp outsl enter cmpl cs enter push or xchg imul decb dec mov pop mulb lret push pop ss mov aas andl aam ret pop sub push and inc (bad) (bad) cli cmpsl int dec lods sldt push jmp xor and iret addl aas sbb inc sub movsb cmpsb movsl sbb mov lret cli adc cltd scas in fs jo cs jae iret fiadd loope mov jne dec pop gs sbb mov sub inc in (bad) pop push inc out pop or mov std cld das or cmp pop and pop sbb sbb jmp fwait mov movzwl loope add adc daa push pop hlt push dec lds mov sub gs and test cmp rcrl in or xchg cmp jmp out jle push add push pop test mov inc stos jmp pop sub (bad) ss lret sbb adc aas insl repz jno (bad) mov (bad) mov int3 daa xorl add sub jb ret add xorb inc shrl dec outsb fidivrl fdivl gs in pop sahf js cs out mov push sbb dec imull push mov daa mov cmpsl inc fdivrs jge fistp pop loop ljmp add jp adc mov sub add adc jb cmp pop or mov mov sub dec in fucomip dec hlt fcmovnu clc es xor xchg dec sub cmp mov pop push push inc pop mov sub dec mov es inc pop test pop pop sub sub aaa mov out push or xchg push mov dec js enter cmpsl jmp imul daa push jae inc jbe push mov and fsubrs mov push xchg cmpsb (bad) jp xchg loope xlat xchg xchg mul mov aad test sahf jo add add or (bad) mov jns jl push nop mov and and les rcrb mov imul cmpsb or sub pop stos aas inc fsubl leave out dec mov enter adc (bad) mov int mov gs jne xor pop insb aaa (bad) cmp scas cmp pop jae pop fildll arpl xor pop incb sub mov icebp mov push popa xchg push mov inc in inc stos adc xchg xchg inc shr push push rcl mov and fisttpll mov (bad) or sbb ret cmpl cmc popf out push adc arpl leave jmp adc das and pop pusha test mov xchg sbb dec fimul lock cs stos popw xor mov add xorl cmp xor or jns scas cmp mov je mov xor data16 mov add icebp mov cwtl cmp (bad) nop sbb loope or sub (bad) in cmp sahf mov sbb lret cmp mov repnz jge jmp inc inc cmp push lods sbb (bad) jae xchg ljmp inc sub out add dec lret xor mov xchg out adc xor and enter lahf mov jmp fwait mov sub mov add mov sar imul mov sub es out add cmp sti mov fistl xchg mov cmp sub adc pop sbb cvtps2pd mov add add lds shr repnz aam std jmp (bad) push inc mov js in lret ret test (bad) in scas scas std sub rcl jecxz cltd jne ja jp pop xchg in addr16 mov fisub dec decb lret and jno sub mov roll dec (bad) sub js daa jle sbb enter sahf or cmp add leave data16 (bad) mov jb dec sbb cli (bad) push or xchg pop (bad) insb bound lret ds fisttp bound push (bad) loopne out cs outsl sahf mov stos adc das pop hlt jb or mov hlt push mov inc (bad) sti mov mov sub enter add stc add test repnz in jle add add mov xchg mov mov in dec jge icebp add inc scas cmp lret xchg mov sub data16 cmpsl shr sub dec pusha dec test daa jp and je sarl repz in cmp cmp pushf out repz cli fldt mov mov xchg repnz inc inc bound add push push add push xor add mov (bad) rcr fisub mov dec int inc xor jle dec dec sbb jae add lock pusha and pop scas lcall rcll mov and int ds (bad) sub adc imul (bad) lock jns and xchg mov push inc sbb xchg cmp sbb push aad icebp popf mov dec (bad) fnsave scas pop dec add adc sub sbb mov dec inc movsl push or icebp pop sarb push jl imul mov subl into sub adc outsb mov enter dec subb mov pop push jmp mov sub outsb aaa mov xorl popf pop int3 sarl imul (bad) ljmp lea cmp add ss pushf loop andl ss pop jae mov shl loop fisubr lret ficoml lods or dec sahf mov mov mov jbe ds subl inc (bad) dec cmp mov cmp jge push xor (bad) in cmpl push pop ret popa pop or ljmp aaa inc iret and lahf dec push inc mov movsb add add dec push sub push fs jg mov and fbstp mov pop insb inc push mov imul adc xor frstor and aaa repnz cmpsb jg mov cmp insl sti mov mov fdivp iret fdivrs xor push (bad) mov lods dec jge lock sahf mov ret out cmc sbb mov sub xchg add inc ret cmpsb hlt adc mov xchg adc add ret outsl mov push mov leave add lods les aad in pop setbe pop mov pop jbe adc pop out (bad) mov and hlt les andl mov call stos (bad) fldenv inc mov mov push daa ret and lock es repnz sahf cmc icebp pop sbb jno lds std ja fcomip sarl ja push xorl mov inc enter add xchg cvtps2pd out lcall int3 inc inc (bad) ss sub cmpl stc cmp cmp push js ss jmp mov sub pop mov mov pop popa sbb scas and dec fstpl jl xorl jb add fs and sub add or movb add int3 cli les adc jbe sbb sbb add xchg aas imul mov add daa xchg dec adc add daa inc negb mov mov gs hlt push jmp ret inc ret inc lods repnz add jnp cmpsl sub insl js das stc lret sub inc fldl movsl and xlat cmp mov pop mov jno push sar int add xor (bad) xchg out aaa lock push xlat adc fnstenv das fs imul or sbb insb adc xor aaa cmp lock and cmp xor movsb cmp mov mov clc jecxz mov jo jmp mov inc inc call inc hlt movsb push sbb ss cwtl scas or ret push test cltd jo faddl add add das clc inc adc shrl and lcall xor addb xor into adc insb test or add xor fiadd in test mov sbb fs popf sbb sarb mov inc jl sbb pop lds jbe sbb cmp test lret mov dec mov sldt add add imul cli fwait hlt push ljmp sbb lahf (bad) inc sahf lock out lret push insl nop mov push mov mov mov mov adc stc push push push nop mov sub xchg add leave pusha add mov ret add (bad) dec repz pushf lret std pop mov pop js push inc out jae test out mov adc leave int mov imul add fiaddl mov test or sbb add adc jnp sbb sbb pusha leave fldenv jns cmpsb lds mov mov not jnp push in aam ds cmpsb (bad) xchg xchg data16 pop mov pop mov fs sub test sbb mov push shr jne test cmp paddq incb mov inc scas push in rcr ss push pop aam ja mov lahf out leave out cmp adcl lods pushf mov pop push hlt jg jb ret pusha test or fmul test mov xchg cmp sbb rcrb jp or mov xchg push and jecxz mov sub cmpsl out (bad) cmp add pop lds sub stos cwtl sub adc add add dec inc (bad) icebp das push or stos mov mov lret repz push stos pop cmp leave push scas mov pop (bad) push pop lret sub test test cli pop iret loopne jb movsl fsubrp mov mov lds xor or addb dec jge lret add cli cmp pusha xor jno repnz jns push adc mov add out lds movsb repnz push mov mov (bad) mov pop jmp ss (bad) out jno or (bad) xor push js rcrb (bad) sub jge jnp jg sahf mov adc pop jmp push jne mov lcall outsb sti dec and or inc xor jle xor add out pop mov add sbb jle dec fs add cmp pop mov or xchg mov setle pusha and sub add jecxz loop fild data16 popf cs aaa jne (bad) mov addl xchg mov je jmp popf xchg jl mov (bad) mov lods into jmp (bad) fsin insb xor clc jnp scas inc aas shll mov daa mov repz mov or and in xor negb test mov (bad) daa mov mov aas aas xlat nop jbe xchg ss inc imul test mov jecxz push mov jg arpl lds mov push insb mov out cmp and sub sti adc ja add inc xor jmp mov pop lods stc inc mov or adc stc push mov push mov mov jns xchg in dec adc sub adc xacquire and adc push loopne xchg shlb mov and test int pusha jne sbb inc and jmp out divb enter jl mov and mov add xchg aam xchg fnstsw ja (bad) out xchg loope mov mov cmp lahf xor aam push popa shrl adc xchg xchg pop int3 cmp cwtl pop (bad) xor jmp rorl loope outsb mov mov mov jl insl sbb test out outsl mov cmpsl dec inc add ficomp lods dec and lea xor dec sub gs add pcmpgtd (bad) out cltd fs aam jle or jmp enter (bad) xor mov pusha (bad) loop sub adc cmp add shrl (bad) (bad) push cli mov push outsb daa or fcomi xchg mov dec fidivrl popa jecxz int3 xchg cli mov jbe leave stos insl popf xchg xchg sub icebp jle stos push jmp push stos adc jb adc jne mov fwait jb cmp xor sbb xor add (bad) xchg jmp mov cli into mov lods or stc jne (bad) pop inc mov into test fwait loop scas sub adc mov push stc xor mov outsb add dec push inc out test ss scas insl add jb,pt jnp clc push sub xor jle sub cmpb sbb pusha xchg sbb fucom ds dec jge negb sbb movsb xlat xchg pop xlat xchg test rorl loope cld push aas and (bad) xchg jmp cltd cmp iret imul and xor cld sub cs mov sahf divl out mov push sub ljmp add test ds divb mov mov xor andl pop xor adc add imul movsl push fwait jo or xrelease test fisubl or jge mov pop xorl xor fidivrl in mov fadds jp test (bad) xchg jmp cmp dec pop decl ljmp insl push fucom (bad) xor xor cmc cmc not lret sbb lea add adc push int cmp std mov mov push sub ja out pushf lret lret add cmp jmp or inc ret mov sti push fisub dec popa pop out dec cmpsb sbb push adcb jb (bad) or mov mov dec insl push sub dec insl lret outsl gs les sbb iret ss movsb movsb push xchg icebp and dec xchg in add imul into adc je pop xor sub mov xor xchg push dec mov mov and and sub (bad) pop out add sti xor xor sarb clc cmp and and sbb sbb repz in imul minps jnp call or int adc push lret mov jp jp repz push rolb add out mov sti xchg rcrb adc lret xchg shrl sarl or mov rorl push xchg jp test push or lcall mov aaa push stos dec sbb mov xor mov sarl in inc adc inc cmp and cmp (bad) insl repz pop push stc cs bound xor dec and pop add add add (bad) mov insl cmp inc (bad) call cmc inc mov mov ss push mov or lret cmpsl xchg cmpsl mov ds dec jge jecxz jae add (bad) mov (bad) das mov or lahf and sbb fwait jo mov push in fucomi dec lods sbb sbb (bad) pop and add lahf sub and xor mov add sti add push ds mov push mov jmp iret cmc inc aam loop dec daa mov mov mov outsb subb jmp mov fwait pusha xchg or dec negl mov loopne mov outsl pusha inc mov int3 repz out cmpsl mov jno xchg mov sub in jle (bad) (bad) jb sahf and repnz xor sub mov cld cmp push sub (bad) xor jne inc lods pop in ret cmp scas addl (bad) in inc scas dec sti mov leave jecxz mov adc push cmpsb daa test insl in das inc xchg mov xor xchg and inc out cmpsb mov (bad) outsl ret add lea and jle xor jecxz outsl test lahf add add cmpb (bad) xor sahf push enter ljmp pop testb (bad) repnz jmp fistp mov stc sbb push icebp lahf sub or adc (bad) jno jns dec outsl cmp mov stos movsl inc in or xchg scas pop testl xlat into rcl dec imul add add or sub mov push insb inc call dec scas mov mov push mov pop call das inc negl and inc ja lcall pop loop cli movsl sti lods adc jge (bad) cmpsb mov (bad) xchg pop (bad) repz or jb lods dec aas jg push or mov stos popf push and push mov xor inc mov mov add xchg xor (bad) xor std ret mov or jbe mov fisubr in into mov push pusha into imull mov fwait leave fnsave pop add aad adc jp mov push mov std mov cmp jg push sub pop in mov fdivrl xchg pop xor push popa into mov pop sub loop xchg mov ret mov add mov nop test xor or mov cmpsl int3 jl or jb pop insb sbb jb fistpll loop push pop mov adc ss xchg jecxz outsb mov data16 test mov lret push xchg (bad) out aaa sub fimull push sbb popa fs inc push xchg mov (bad) sbb sbb push and cmpsb es pusha or add iret bound out sub add xor sahf (bad) xchg mov lods cmp lock jmp out xor mov stos lods sub ret jge dec mov ljmp inc push ret inc xchg stos lds dec in (bad) jmp sti inc scas notl hlt aas inc cmp sub shll jo push xor mov sub add in ficoml jo ja cmp jmp mov jns in jbe push out scas pop (bad) cmpsb push dec pushl jb mov or ja (bad) jmp test sub jp repz loopne mov add mov fcompl or (bad) in scas add mov adc in mov mov mov add inc mov mov cmp add add add jnp push xchg xor mov mov stos mov jmp mov pop push pop inc adc lret movsl fisub mov xor movsb dec std lahf adc xor jae pop rcll pop mov aad dec orb inc jne mov pop arpl add dec cmpsb rcll ret mov mov loope cmpsb push mov pop mov push in call testb add add (bad) xchg cmp test add lret adcl or xor sti daa rcl stos popf adc pop imul movsl pop push add mov inc repz out (bad) mov (bad) jbe fcomip subl push pop push popf mov sub (bad) mov mov fwait mov jbe push xor daa das dec cmp mov and ja mov push lea stc mov ds ja loopne fidivrl stos xchg pop and aas mov out sarl dec sbb mov into mov jno add cltd pop inc adc pop pusha lea push lods (bad) ret inc pop xchg sbb xlat cmp (bad) test cmp cmc scas lea fisubr cmp xchg cmpsb (bad) add (bad) dec sub sti in inc in cli enter xchg pushl or jne sbb cmc and mov jecxz cltd arpl pop ss test cmp out or xchg mov mov jge mov bound loop out outsl test idivl int3 movsb psrlq push lock cld push ljmp aam xchg pop dec sahf out jl pop ss iret fild out pop int3 fcmovnb test mov mov sar testb add lahf shrb test push jecxz iret jbe jbe into ja xchg inc inc pop stos adc movsl shlb cmpsl pop push pop mov out pop mov mov xchg pop xor movsb dec std lahf adc xor out out and nop int stc pushf ret push popf inc mov mov das arpl add push fwait insl (bad) mov mov loope cmpsb push mov pop mov add add outsb mov (bad) dec std cmp sarl outsl xchg fistl adc out pop leave iret push sub mov sub rep adc lods sbb push lret jns jge sbb jl cmp and jmp mov (bad) cmpsl or dec lahf call cmp into gs sub pop mov push pop (bad) push mov icebp sbb add xor clc imul movsl outsw fwait xchg cmc mov leave pop mov sub sbb xchg cs dec idivb outsb or cmp mov jl mov pop aam adc shll inc jg mov hlt jl xchg jno add and mov jmp mov stc mov mov add add push mov stos (bad) sbb pop dec lock fimul mov fs and lcall enter xchg jle or mov icebp cmp cmp xchg popa cmp rcrl in in js pop mov rcr push mov in cs (bad) in fstps xchg out movl xor cmp mov add add cmpl loope inc aam mov lea mulb pop aam shrl inc dec push push mov repz add psrlq sub and push xlat cmp mov clc outsb mov fcoml jo out or cmp mov add xor addl popf pusha sarl sub mov add add roll notb (bad) int mov mov mov xcrypt-ofb cmpsl sub jae mov or int int jmp sub pop jno push fwait jp adc stc push (bad) pop nop fiaddl jns (bad) sti and sahf mov lods cld mov (bad) cmp test dec out in push out cmp (bad) cmp nop mov ds int3 mov add add pop cmpsl mov cmp push inc clc insb mov pop std and loop mov imul mov sbb cs (bad) nop movsb or adc xlat outsb push xchg popa lods mov fisubrl sbb xchg lahf hlt mov loopne mov out repnz aam std jmp pop cmp jmp push inc lret mov cmp cmp sub jecxz cwtl dec dec scas adc lret add pop repz aas dec lods mov sarb push sub xchg jo in lretw adc ss jnp add mov push pop call mov push dec ret lahf fcomps (bad) ds mov int3 dec int insl lock adc dec sbbl mov rcrl push cmp xor add imul mov sub jae mov xlat xchg test cmp rcl cmp jle bound (bad) inc outsl pop cmp sbb roll nop push std jmp push xor leave mov push sub push (bad) xchg jnp loope lock pop and adc cmpsl test mov testl xchg mov push ljmp insb dec ja fisubr fidiv xchg push imul sub pop and cmpsl cmp nop push clc push ljmp pop pop push fild jp ss ds xchg incl xor and xchg sbb inc in mov mov (bad) cwtl aas js xchg das mov sbb loope xor aam jmp mov enter aaa (bad) scas insb repz addr16 mov xchg add bound pop clc jge jnp jmp sarb xchg (bad) call or and or adc dec ljmp mov (bad) lret xchg xchg icebp jo (bad) je push mov js rorl or insl nop xchg xchg lret xor mov aad mov stos int movsb jle test jmp cmp mov daa add mov cli adc xor push and inc dec xchg out outsb push rolb outsl test fist jl mov movsl lret and jne and cmpsb adc jg stc push or cmp sbb add add and (bad) cwtl fmul cmp jbe sbb mov xchg sbb xchg pop jae dec jge add test fdivrs jge push or mov adc add pop ss (bad) repz out xchg inc adc cmp ud1 sub inc in adc push icebp (bad) insb sarl inc or lods iret jbe ret ret xchg loopne repnz adcl inc stos adc push adc fsubrp mov mov or mov adc cmp xlat add pop inc orl ds push ret and add xor std cmp sub movsl or (bad) mov aas mov divl cmp fild popf inc clc sub adc or xchg (bad) lcall nop adc das divb sahf xchg xchg lods sti daa add popf out push push test data16 clc jns inc dec outsl cmp xor mov gs push int3 push ljmp push inc rolb add in push movsl sbb nop mov inc (bad) xor or mov xor inc std mov jno popa sti adc aad or jg dec sti outsl mov (bad) jno mov test mov or mov dec add cmp xlat mov lods jmp sbb sti add mov lret push das stos mov (bad) (bad) lds dec mov add add js add lret and xor lahf add xchg les xor mov xchg aas xchg out mov inc imul sbb aas inc fsubl push in pop mov adc dec pop sbb movsb sub in pop (bad) mov test cmp dec pop cmpsb or mov jmp outsb outsl (bad) mov inc (bad) loopne pop sub dec push mov das (bad) push test imul mov add add lcall adc sahf pop jp icebp movsl lea out orl mov movsb jl push das daa shl jl jbe iret xchg (bad) outsl and ljmp push xor jbe or es fwait pop inc (bad) or nop (bad) scas and mov adc mov pop cmp xchg and movsb xor pop data16 mov test add add int dec pop cmpsb or mov outsl (bad) mov inc pop lock jns lds das aaa xlat scas or xor stos frstor dec repnz fsubrl cltd mov xchg cvtps2pd jo mov (bad) bound mov rcrl xor (bad) mov stc push add enter mov imul pop fwait xchg dec into mov mov add add sub aad sub cmp fwait mov arpl add scas xchg and xlat xor subl push jge bound sti hlt fisubr jns push shrl lock push sub ja (bad) out mov xchg adc lock rorb lea mov dec js hlt push scas (bad) faddl sarl dec fild mov mov cld out add push mov sarb inc xchg add push mov mov and pop outsl cmp aas adc cmpsl inc sub incb cmpsb gs xchg icebp scas cld cmpsb xchg int cs jno lret mov inc or (bad) sti adc loope add push pop add test scas cwtl je scas sbb push and and xchg xlat cld fisubr call xchg (bad) jecxz mov loopne call clc int add mov pop ds popf adcb arpl dec ds mov adcl sub ficoml pop inc (bad) jb mov je lea sar fwait lret mov test jle sub test sub xor out fsubl and add inc cmp push ljmp cs pop sbb pop cmp lods lret fmul ljmp add test and adc cmp (bad) and gs cmc and in int adc sarl inc sub cmp bound repz pusha inc cmp xor cs mov notb (bad) in (bad) enter cmp andb sbb inc ja or add mulb cmp pop imul push in jns insb rcll daa fisttpl add cmc loop inc xor push mov aad and pop loopne inc pop push mov mov out xor and or inc psrlq mov sub sbb inc cld rcrl aaa iret stc jle sti popa dec xchg repnz dec pusha pop lret pop adc xor out sub fnstsw pusha mov stos jns fcomi push popa movb sbbl ss lcall add xchg lea mov pop dec sbb push iret nop je or lea mov loop je and ljmp mov sub adc leave pop stos inc cmp stc and jae add inc pop fiadd cld cmpsl test test jb xchg and xlat andl lods inc (bad) cmp cmp insl inc jo mov xchg mov loope add scas sbb jmp into shl aad xor xchg mov cmp (bad) cmpsb (bad) inc add imul pop xchg fist hlt xor (bad) jmp in jl dec pop pop or push js incb xor dec dec mov ror mov repz es rcr cmpsl or mul jno (bad) ds jae cmpsb fsubrp push arpl pop aaa dec ret xor add enter ja xor mov in dec rol add dec iret cld roll or cmp push (bad) int3 stc (bad) lods mov adc hlt into push cmpsb xchg xchg jecxz jge pop mov pop enter rep frstor dec out inc xchg lcall adc sahf and out adc jge movsl sbb cmp jnp inc jg popf mull mov push jbe jno pop stos insb xor add mov dec push push gs hlt adc mov jp addr16 fcomip in mov dec xor pop sub sub fidivl int3 inc int3 mov mov push sbb bound xlat addl cmp mov movsb int jae lock in jg dec (bad) test mov push add sub mov popa sarl mov sub test mov mov lock lret lock add xlat jae fidiv mov mov xchg cmpsl sbb repnz (bad) add jg jp add push push aam sar push mov mov imul sti inc xchg inc sbb xchg dec push sti mov cli fadd dec ljmp outsl (bad) (bad) pop mov jmp sub movsb dec mov inc andb push adc int3 cli mov add outsl cs out nop dec dec int sbb adc mov xor sub push cmp cmp cmpsb sub xor dec ds sbb and out jae mov xlat sub jge xor imul or jl dec pop scas popf jle sbb sti and mov xor (bad) ljmp mov cs dec inc imul dec ja adc jl add sbb mov dec cmpsl js popa xor jl (bad) push adcl scas cmp sbb jne pop and xor cltd mov xchg pop jae sub jl xchg stos (bad) xor adc push dec inc lock mov aam leave sbb pop mov sbb sub sarb fidivr out cmp out mov push xor pop sub leave fs sub mov in pop pusha out mov inc cmp sub stos mov cmp push aam outsb push in jle stos pop popf ds fsts (bad) not dec test test sbb lea iret lea es xchg pushf sahf cmc mov lret pop das dec adc dec test xchg sbb inc jno add push popf (bad) push cwtl call pop mov push jmp jl cmc out aad push or aad pop jmp and repnz xchg inc jno mov mov ljmp bound lret stos dec mov lds cmp bound xlat shrb or int fs jne push shrb push decb out lds add add call outsb xchg (bad) mov pop sti popf loop divl out out push mov jne dec mov mov int3 jb div and dec dec add mov pop push xchg cvtps2pd mov sub adc das dec sub xchg pop fisttpll cltd cmp mov iret rcr aad aas mov mov jp lea mov xchg dec dec sub add sbb stos adc push jge lock mov cmp mov mov cwtl dec bound roll adc scas sahf sbb mov mov daa mov jecxz outsl cwtl into lds pop adc mov int cmp add (bad) push mov jb and testb fstpt fisub lea pop jno push test xchg out rclb add add push arpl movsb adc sub ja enter das mov cmp icebp push push scas adc xor iret pushf (bad) test lods dec out ficom mov mov mov xchg or test es mov arpl push push (bad) fwait or in js mov jne sbb dec lahf es fwait loope clc enter cwtl jno pop es repnz aas add imul add mov adc lahf lds fildl xchg (bad) mov sbb xchg sbb inc popf fistpll dec mov iret inc dec outsb test pushf dec in jmp (bad) stos or into imul pop mov pop lahf push push lret stos cmp stos clc (bad) in repnz pop mov push xchg movsl mov insb or sub pop lds xor mov in enter sub mov data16 xor test xor idivb cli js fcomps sub inc jb sub mov not or pop mov or popa mov jae rcrb jb daa cli outsb cld leave scas mov and fs arpl cmp jl lahf xor mov push mov fnstsw repnz aaa sahf cltd sti inc pop leave lahf (bad) call stos mov cmpsb fucom rolb out int lods cmc adc lods iret stc inc aam ljmp rorl mov cmc sbb ljmp jge fimull pop test addr16 in icebp pop test push or sub or les repz cli dec popa ret mov pop sub mov pop lret dec imul pop insl dec add add cmp lret mov mov pop cs jno add repz dec xor xor inc adc xchg cmp jae clc (bad) and fisttp loop mov jne rcll mov aaa in js push xchg inc jb bound inc and leave mov data16 out hlt and inc movsb push movq xor mov mov mov add add and int fsubl pop aas into fldcw lea loop cmp cmp and lds xchg cld lock nop mov sbb push ret (bad) xor dec sub sbb (bad) mov lret xchg inc dec scas int clc (bad) sub push adc cs xor push in (bad) es or aam xor inc or push sub add dec inc push push cmpsl and jle,pt in inc outsl (bad) cmp (bad) mov cltd sti jmp jne std mov inc fucomp adc cmp pop mov xchg pop pop cmp arpl das cmpsb (bad) xor adc dec jne jle fistp data16 andl mov repnz cwtl jne or push or jge inc lahf sbb faddl xor jne mov sti test pushf add add or out and (bad) pop daa push mov stc mov scas and jmp cwtl mov mov push lahf std pop jmp cmp lods ret into mov sub sub mov out cmp cmp (bad) sbb cmpsb sahf inc and cmp xor mov loope sub push repz decb or outsl xor add test and arpl cmc int sub cmpsl (bad) ftst dec aad (bad) (bad) xor cli dec pop lea lock dec push mov xchg scas cmp sub pop movsl lea movsb pop leave lahf mov inc add mov (bad) adc mov gs cli pop push loope cltd fcomps or add add jne and cmp lds add jne stos jl movsb push (bad) clc mov icebp (bad) or adc jno inc clc sub iret fidivrl daa notb lea adcl sbb out or xchg les lea mov push rclb add inc inc push stos lods das fcomi mov (bad) push xchg sbb push add data16 add inc test push dec inc inc das out adc jge ljmp mov hlt dec push test in fadds inc xchg cmp aad sub mov aam lret ja dec xor ja and add add addr16 or mov mov push mov mov sbbl mov ds ja mov test xor mov cmp or outsl or or and test jnp enter loope faddl and and fbstp or loopne mov xor xchg (bad) outsb sub push xor loop jmp jne lds push sbb (bad) enter sahf rolb mov add add adc mov int adc das cmp inc mov push mov ret rol ss sub (bad) mov push mov jg int inc xor mov mov gs jbe push dec xchg add test std sbbl xor jo pushf adc push pop leave inc fwait into arpl inc lret icebp outsb inc push mov jmp add pusha jge rcr xchg push cmp sub addr16 cmp sahf xor cmpsb aaa (bad) repnz rcrb test ds dec jge negb lret pop les pop sahf mov mov xchg ret sarb js stos addr16 lds mov inc cmp cmp mov repnz mov mov mov (bad) icebp stos dec add jbe sub outsb xchg mov sbb sub mov jp fs ljmp roll cmp (bad) aam (bad) mov xor jbe mov or xor insl cli mov xchg xorl push cmpsl shll andl sub ds (bad) (bad) enter ss sysret jno sbb cmp mov jge push ss add or inc cmp rcrb stos and lret sub stc call mov fcoml ja mov pop xor (bad) (bad) mov fcmovbe push data16 xchg in sub lret inc and xchg xchg dec push mov xor comiss mov addr16 lock fiadd dec scas push lock cmp sahf nop icebp dec pushf shrl fcmovnu add xchg pop dec movsl notb ret xchg mov push into mov adc push out mov or mov int3 fdivr dec ror adc ljmp aad lcall mov cli mov orl aaa xchg sub je adc cmpsl test in dec or arpl (bad) pop add or lock add stos ficom xor jp insl fnop rclb test loop jmp add push jmp jg mov fdivr out enter mov fdivrs negb add rcrb jae nop aas add and or fist cmp lods cli xchg jp out xchg shll add xor jmp aam ljmp inc push and inc jmp mov (bad) fcompp xchg cmp add loope xchg jae stos pop aas adc lods adc loope push push cli jo (bad) mov lds xor ljmpw jl dec push icebp enter (bad) leave mov inc pop xchg cmp xor js cwtl into les jae lods inc mov aas std or sbb mov inc mov cltd jb nop mov jne push dec sahf mov test add add ret ret inc lret add std js xchg mov shr loope bound daa ror jl jbe (bad) loop push inc dec sarl xchg sub xor mov imul jno sub cld enter repz rclb in cs ljmp movsl jb adc adc ljmp stos ja fcmovnb push pop inc jge or add in test fisub repz stos push lds add add jmp imul test lret mov mov mov jo dec cwtl les add (bad) cltd stos xchg mov pop inc add addb lods jb and sub adc cmp into mov cltd cmp mov and cld stos cmpsl jnp cmp int jg xchg arpl (bad) pop in jle cmp lods (bad) add add mov imul push jmp lods inc mov fimul lret sti lock ss sbb test mov push mov stos push in sub ret mov sub mov xchg repnz jl fwait cwtl shl inc mov cmp out push test cld mov jge mov test and xchg sub imul in sub mov and xor jl and sbb and popa lcall push sub sbb les pop cmp imul int mov (bad) dec xchg xchg popa daa xchg hlt push add int3 or movntps mov xor gs xor inc lcall inc rorl add mov jne testb mov ss cmpsb repnz add add mov mov sub mov push add (bad) jne and push cs sub in mov rorb popa adc mov and fldl out add jne mov lcall cmp sbb in sub mov aas incb (bad) xchg inc mov add sarb jbe js jmp es dec mov ror xor (bad) push cmp jecxz ds xchg je jp push js dec and movsl sub cmp xlat mov jae add dec sub jle adc dec or inc in jnp lea bound dec insb out inc outsl mov fildll dec fdivr stc iret (bad) lcall xchg inc nop pop mov das cld fcomip sbb fisub cld cmpsb xchg mov insl dec cli rcl jns cmp add and mov in int3 cltd xor scas (bad) pop (bad) xor jge out cmp imul sbb mov repnz sbb mov and lock subl cmc (bad) lock (bad) lock repz jns cmc lret inc add jge pop or pop mov in (bad) pop fwait test cmpsb mov incl inc mov movsb hlt push cmp iret jl sbb jge inc outsl decb fbstp and nop les in insb (bad) or push cmpsb mov mov or outsb stos mov arpl leave pop push (bad) out (bad) mov add xchg js add pop shr xlat inc negb (bad) aad pop les fcmovnb pushf sbb add addr16 jg xchg cmp scas cmpsl fcomps imul roll mov jle dec dec (bad) lret push add lods mov sub mov mov cmp int3 push roll aas in std in fist xchg ret sbb sti pop ret sarl inc inc cmp std (bad) lds jecxz stc popa cwtl jo ss ret sub out sbb dec fucomp dec xchg or mov scas jg lods outsl mov icebp std dec (bad) mov jo cmpsl sub insb inc call mov add xor and arpl (bad) mov add int cmp lods mov and push mov (bad) stos shlb cmc pop mov or jae jecxz pusha jge les push rolb fsubrs lds push push pop mov mov push scas lret dec sbb adc loopne cwtl call push mov and pop mov add add mov out imul push sub lcall lret not in lea incb std orl mov outsb ret fcompl lgs jns movsb cwtl and push jo mov fisttpll shrb shll xchg add jne lea (bad) cmpsb je scas out xor fsubs xchg aad or add ss xchg loop aad xchg sub pop jb in add push xor jnp int3 push jo xor jbe ljmp scas or lcall adc pop repz stos xchg ret repnz mov sahf call add sbb cltd fwait mov push test adc adc sbb sub sbb xchg lret jge nop jbe ss push jne pop jo dec daa jle cmc pop std mov loope mov xor in sbb ss sbb push jle sbb iret int daa push rolb inc pop mov xchg jp sbb mov mov dec push mov lahf add sub enter outsl or xlat out mov int or mov aad aam xchg xchg popa lret push jae cmp dec andl loope cmp add add add add sbb aas dec les mov fs xchg inc divl xchg pop jae fwait cmp bound and lahf aas insl pop out stos idivl clc dec aam mulb lret push pop inc cmpsl fstl mov mov inc xchg mov aad dec xchg int3 pop lock cmp and movb scas iret mov xchg mov mov int3 inc or les lret cmc push sti in addr16 subb lods mov mov and aaa add outsl mov inc sub xchg inc in pop lret push loopne mov out subl outsl test pushf push xchg mov sbb pavgb std xchg mov xor jmp push adc mov adc gs scas mov or movl add add (bad) or mov popf adc cmp mov cli fsubs cmp out nop jmp and loopne pop jecxz or out push cmp dec lea stos and sti push adc and lret sub cs xor lods mov sbbl cmp mov dec jge sbb es (bad) and int3 jo addr16 mov into xchg mov stos pop pop lock lahf lahf daa add mov movl inc lcall xchg cmpsl dec mov and out imul push es jg mov test and or cmp push imul push jo pop shrl and ds sub and dec lds and daa xor fcmovbe inc enter push subl pop push xor clc in or adc popl aas aas xlat add addr16 sbb sbb adc inc std rol je jecxz loop xor lock in lds outsb ret dec mov or and dec pop push cmp inc lods imul jnp mov xor cmpsb je mov jge cmp lahf (bad) jge (bad) lret sti pusha fadd cmp lods jmp stc and mov mov add xchg mov outsb (bad) arpl into stos mov out stos jp pop xchg test mov push or xorb rolb jmp jmp mov mov jns sub cmp sbb ret aaa lcall addr16 push pop sbb mov inc jae jl xor je dec sbb dec cmp mov jg lods fsubr ds fwait sti push je pop fsubr out ljmp incl cli pop sarl jo movsb movsb push xchg icebp es xchg xchg jmp cmp and xchg inc rcrl outsl out mov mov xor aas push cmp jmp dec int clc adc mov or out mov aas test sbb push push xor ret add dec fldenv mov repnz cmp icebp test scas or jp je xchg pop arpl js mov mov fisttpl arpl jg ds and test test jno push mov cltd jb add xorl aam test lret out lahf das xchg sub push push push xor out adc enter in inc (bad) jo dec aas sbb cli gs inc ljmp add addl mov je push mov mov xor imul cwtl insb push cmp or or addr16 add push dec mov cmp xchg push add dec push pop sbb sbb jmp dec mov cmp pop scas aad ret xchg mov outsl jbe sub pop ljmp adc mov add add sub jle or mov loopne sbb sub subb push mov mov fimul or lds jo xor (bad) push sbb aaa cmp mov push cmpsb mov xchg enter mov outsl aad pop lahf dec xor cmp add repz fwait xor scas jl sub fdivrs push lock push leave mov mov sbb mov mov inc lret dec test stos jns clc and into repz push enter outsb (bad) xor lret push or and mov stos rorl cmp sub sbb scas enter nop jae movsl mov cmp (bad) (bad) and pop mov xchg lods outsl mov adc xor xor or xchg push adc cmp cmp mov orl add lret inc xchg push xor xchg aam icebp imul ret mov add fdivrp sbb xchg scas jp ds outsl push sub xchg ss xchg cvtps2pd rorb aad dec add cli movsb in out sub push jae pop jmp cmp leave mov pop and gs pop lahf jns (bad) aad arpl in inc inc fmull movsb movl pop rcrb add add mov in jle and sub xlat and subl (bad) fwait or sbb lea mov jg adc jnp jne cmp or xchg sar int mov sbb mov (bad) loopne mov cwtl dec xchg (bad) roll xor fmull add dec les test pop mov add (bad) cltd lahf cmpsb dec add add inc and mov in inc stos dec incb test mov inc mov sbb push enter cmp mov sub or xor inc push roll ror mov js out cmp xchg pcmpeqw mov into dec ficoml pop push jbe mov mov and xchg ss add add push cmp xchg (bad) mov test jg sbb (bad) mov fcom repz cltd jp in jecxz decl or cltd popf lods cltd mov inc push aam xor stc mov andl sub aaa push jns xor repz pop test jecxz push mov mov out pop push pop adc sub lret out add (bad) pusha fs jne or ret jmp rolb movsl (bad) jae rcrb mov loope xchg repnz xor mov dec jbe outsl pusha mov or sbb and sub dec ds or outsb fs sahf cmp xor test cltd jo jecxz add xor test enter sub dec xchg push imul das xchg xor jmp popa adc push movsl jge sar fs dec ljmp roll push clc sub add out pop ja sub fsubl mov scas shrl pop data16 ret add xchg mov jae loopne xor mov pop sub dec mov imul sbb and sbb mov mov test sub pop cmp mov cmpsl pcmpgtd push adc lret lods push adc mov add (bad) es xor shll mov (bad) jne adc bound dec and out pop int rclb mov ret sub stc cmpsl lods pop fisttp int3 and mov sbbw ljmp inc rorl push data16 sbb je aaa jnp ror dec inc adc (bad) or test stos bound loope add cmpsl jl inc pushf pop iret jge into cmpsb cmp mov mov pop push fisttpl mov push mov pushf mov inc enter loope dec jg out sarl pop movsb adc stc dec rclb mov add ss stos xor ret mov or xor or fbld dec jo cs pop jecxz inc dec xchg int3 or adc (bad) push or inc fnstsw dec mov lret inc test pusha lret mov mov scas (bad) mov lret mov testb arpl bound jp mov scas jno jg ret (bad) push arpl imul add and inc add pushf icebp jmp hlt aad fisttpll sub gs xor sbb add test mov xor pop push adc pop sub fldcw fwait cld sbb cwtl or cwtl ds xor cmp sbb aam lds xchg stc dec push and out mov or push sbb pushf notl adc pop int mov sbb jecxz fiaddl jne movsl sub in leave jp jmp or hlt (bad) or outsl hlt xchg mov arpl jo cmpsl hlt mov mov repnz outsl into test or adc mov mov stos push xacquire popa inc cmp ljmp or mov mov mov ret mov mov mov enter fcom fdivr cmp mov (bad) rorl pop aas lret mov jns inc lahf sbb hlt mov add jl dec int jno add add xor lcall js push add mov xlat jge fsubrp insl fwait pop mov sbb bswap mov inc out js lds adc sub es and fidivrl les push lret add lret rcrb dec cmp sahf fistpll lods cmp cmp mov pop lds es add add shlb inc out adc and sub jns pop les jecxz shl inc inc lea mov xchg sub push sub push adc test cmp out cmp xor popf out roll or aaa fiadd addr16 xor lods inc lods mov daa push cmp fmuls cltd cwtl inc cmpsl jbe data16 adc mov fist push stos inc xchg dec and sarb rcll iret inc addr16 data16 add fisttp lock sahf cmp jmp jl addr16 out sbb adc mov fidivrl (bad) (bad) mov (bad) and call out cltd xor (bad) push int3 cmp jmp add mov popa nop aam das es push or bswap stos cmpb das sub sbbl sub mov mov jae (bad) mov (bad) jb sbb fadd push and negb add add add pop sub lcall out mov sti inc push cli jno dec and mov mov sbb sub pop leave icebp cmpsb int3 divl pop mov fisttpl mov cmp lods push jbe sahf fisubrl push aaa mov repz jne mov popa mov test clc jg or cmp loopne into xchg ss adc fcoms add repnz sbb sbb imull loop std adc ret (bad) es loope mov rcll rolb or fwait pmaxsw mov (bad) enter fcomip in scas jns pop jmp test sub push fsin push sub fimull inc enter test jle dec out jle pop sub jne sub in call out mov je add add scas push imul int jl or fwait xor lahf and sub adc inc mov mov fist or xlat aaa stc cltd fwait out cmp les jno mov je ret cmpsb cmp shrb or shlb fildl xor xchg dec test fimull pop jge xchg push or test push mov push js int push out popl lahf (bad) insb into (bad) iret inc jne and and and dec jle sbb movsl mov cmp inc add inc inc loopne orl loope out add dec xchg std pop dec cmp sbb adc in push dec mov mov pusha pop mov fcmovnu push jl fimul iret push inc mov push cmpsl push insl sbb add (bad) cmp dec inc imul dec mov sbbl cmp fs mov (bad) les or push and stc pop test inc mov ljmp xchg (bad) xor mov add jo lea jnp icebp xchg imul js pop lret push mov imul xor sbb xchg adcb cs mov pop and mov loope,pt xchg test mov jge mov (bad) ja nop lahf adc idivb scas jmp test xchg pop mov dec push sub lods arpl jnp mov push or mov shlb stos sbb add push sti sub (bad) fsubrp fmuls add inc add sbb pop inc loope hlt fsts les add mov jno mov aaa xlat inc jmp push cld adc (bad) push mov sbb mov push imul int3 mov mov adc std pop mov negl dec sbb jo cmp push cmp fucomp hlt int3 cmp push fistpll jl inc add arpl mul adc xchg or inc cmp mov (bad) js fdivrl aas xlat sbb fcmovb cwtl insb cltd (bad) xor stos or pop inc mov dec add push es mov and fistpll std sub in xor mov stos pop push in jbe outsl xchg fidiv or and std es es push les stos scas adc add ds js pusha movsb jne out cli out xchg stc push lret adc pop add test push xor int3 xchg sub jmp call adc addr16 sbb mov push jo sub sti adc out mov ret (bad) sub sbb jbe rcrl sbb jne ja inc mov pusha adc pop idiv arpl sbb cwtl outsb out adc in jp add and lods push outsb aad jb mov lret add arpl mov mov inc call addl add mov xor ljmp push arpl (bad) adc stc or or dec xchg fwait mov repz lcall jl adc fistp rorl in sbb fisubr cmp int3 insl aaa xchg stos jle mov dec lods adc add dec xor pop fucom mov mov jae lret es gs pop je pop lods add fdivrp fsubrs push and push add and cmp es push cmc jnp insb out push loop and cli sub cmpsl xchg pushf xor jecxz das mov out (bad) or mov pop pusha pop pop fwait mov je cltd mov xchg or and in add (bad) ficomp sub jbe out xchg aad cmp setge ror xchg repz adc (bad) add cs data16 push cld mov imul ds cmp inc imul out pop bound inc (bad) sbb jmp ds ficom jg into inc fs cmpl push addr16 mov aaa xchg xor cmp pushf mov push add add push push test test imul push iret hlt mov mov pushf jno mov cmp fwait jno dec (bad) std call enter in inc cmpsl jle pop dec and (bad) notb aas adc roll repnz jle dec lods jmp cmpsl out xlat fstpl loope xchg icebp mov and hlt fimul inc frstor movsl jp push cmpsl push inc sbb ret add add dec dec pop inc loope pusha sub add hlt and inc jbe in (bad) insb mov dec jmp insb lds mov sti cmpb cmp dec push mov push je scas mov jnp dec daa lea lahf xor mov test cltd or pusha sbb push mov int3 movsb cmp outsl xlat jecxz mov in sub dec pop add imul lcall push adc fmuls repz xor insb std jb xor out sbb rcrl jae jmp sub mov push ss push stos adc add inc cmp div sub cli je lods lahf lock dec in mov outsl adc fdivl test mov mov mov inc out jae fiadd sbbb pop mov pop aaa mov add add mov push test fs (bad) rcr ficom jo cmp or xchg stc cmc mov scas leave mov fcoml push sti or jp shll lcall ss fstpl movsl dec (bad) ds arpl inc push push inc movsb sub dec mov ss lea or or (bad) add cmp (bad) ret mov push push ds out xchg imull add mov cmp ret aaa cld pop arpl das or leave mov mov mov mov pusha mov clc (bad) pop es sub (bad) xor (bad) and jl aad fcom fxch sti test aaa mov push into mov push mov pop stos into pop mov adc add ss out push jnp inc (bad) mov jmp aas add add cmp cld cmp jne push jl push dec sbb xchg test xor popa mov pop insl and pushf loop xor movsl and lea jns enter push mov mov in cli push cwtl mov fwait (bad) xchg movsb and lea dec lds test and or adc gs and mov mov or cmc or add rclb jge fisttpll stos lods int dec out daa pop add mov adc and dec push aaa push xor fildl xchg pusha mov lret jb lea cmp repnz cmpsb leave xor rcrl ja jno insl mov pop les test aas in push (bad) xor lret mov xchg into (bad) xchg jp cmp mov inc ja into in adc push in add fwait pop stc pop fstsw mov cld jmp cmpsl (bad) ja dec out movsb (bad) sbb dec push sbb fistl cmp pop mov popf imul dec add movsl (bad) xlat xor test sti test push push lret sbb add nop add inc pop and fdivp nop jns and dec jge in pop sub add dec shrb ret std enter popa and add add movsb pop loope push xchg inc sbb inc pop out int adcl stos (bad) xor inc test add int3 jae adc jge cltd dec flds lret xchg cmp fnstenv das inc and push sarb sti rcrl push mov mov push in push (bad) scas fmull pop xchg aad add xor xchg mov fidivl ljmp add dec scas mov outsb and scas sub cmc adc ret out je das sbb adc leave insl dec and scas lret mov (bad) in mov ds fs sti es jo push test add adc inc pop xchg pop clc fxch out es fsubrl jle jb push cmp mov mov outsl jmp test (bad) hlt mov call xor dec int fstpl test xor mov inc jae add adc dec insb sub inc inc jno jp mov lods repnz jge cmc (bad) sbb ret dec or pop push adc mov push mov (bad) xor and test lods mov leave add in test inc xchg jae push pop iret loope add test add adc arpl mov (bad) fmuls sub lret pop mov add add (bad) in lea aas ficoml outsl out jne adc cld mov fnsave mov test lods hlt cmp inc mov fdivr jmp push daa mov imul mov nop xchg out rcr out repnz pop push adc jecxz out and xor jecxz sbb push pushf pusha lods jl fisub add add mov sub sub das cmp ffree inc xchg mov and pushf fcmovnbe xor aam adc pop fwait cwtl mov xor sbb sub loope xorb jns xchg cmpsb sahf mov xchg push cltd arpl repnz push mov mov or push mov add stos mov scas rcll test bound pop sub test sub mov add and les sub out (bad) push cmpsb or jns lret inc out lret or shlb xchg and mov lea int3 movsb in les inc mov popa mov in dec or ja cmp dec sti xchg dec fisttpll xchg mov xchg sbb fimul push sub and mov popf dec (bad) out mov inc cwtl nop lahf or icebp insb aas mov adc leave sbb xchg dec imul add idiv shrl xor shrb cs mov add adc in (bad) adc shr ljmp sbb stos mov adcl cmc dec lea mov pop repnz lods repnz xor inc iret mov movsb hlt mov nop repnz inc xor mov xchg mov enter movsl xchg and pop aam fnstsw adc mov jno add add adc ret jns sub or (bad) sbb shr jne fidivl out push fstps (bad) jno sub das shlb jne arpl sub sub mov push sub aam xchg sbb lret outsl mov (bad) dec popf cvtps2pi xchg cmpsb xchg push fistpl mov inc push sbb mov adc push nop jbe mov mov jge (bad) push je add add cmpsl cmp negb inc sti push vmovsd adc test mov sarl push cmc ret int and decb bound (bad) sbb (bad) std adc adc xor movsb (bad) push cmp movsb sbb mov lcall sti push add bound mov adc sub push (bad) out scas push lret fstp mov add adc lods and push adc pop scas scas shl cmp push out jb mov fsubrs mov mov adc add jl add adc shr aaa lret jmp dec push mov push fsub jp dec test ret test andb insb adc loopne sahf ja cs add movsl sbb lods fmuls xlat fdivs sti mov push cmpsl add add add (bad) insl js and cmp movsb ljmp mov mov mov mov or dec xlat pop push adc xchg jb lock in mov aas faddl lods outsl mov cmc mov lea jae in cmp sub scas divb (bad) push lods (bad) mov ja dec inc push mov pop push jl (bad) fisubr cld inc inc sub mov sarl inc or clc mov sahf sub divb adc je cwtl sub adc jae aaa out movsb xlat dec inc fcmovnu std mov fwait sbb xlat pop (bad) lret dec pop adc pop sub mov orl ss mov sbb cmp add fldenv loopne imul or loop mov jae rol mov pop stos stos pop cmp inc mov ret jnp push add mov dec add nop mov mov jno jns rclb pop mov push push aad scas cmp or fcomip jae sbbl xchg sbb mov mov stc out frndint sahf adc xchg jbe dec aam jo outsb jp addr16 cmpsb sbb nop mov pop xchg cli scas dec repnz xlat mov js mull mov cli (bad) rcrb xor fisttpl cmp je cmp setne cli mov lods pushf push or insb jo pop inc dec xor cli nop inc fistp sbb clc cmp push adc jmp std dec pop insb sbb outsb jp out lods push in cmp fildll jae mov fnstenv fiadd pop pushf aaa mulb jmp mov cmp insb cmp xor xchg addl push or jl jnp sbb pusha and insb sub outsb movsb aaa add aam (bad) jp push cld xchg jns test leave call jl mov mov mov loope stos (bad) mov movl and jnp cmp loopne fnstenv (bad) sbb and xor cmp cwtl xchg xchg (bad) cmp add aad lock ret mov ss push ret mov aad loopne jg leave lock lock jb ss pop mov push push mov ret div dec xchg lahf mov mov adc mov js mull mov pop fcmovne jns (bad) push roll xor or scas xlat jae mov insb (bad) mov pop in lcall jecxz jl mov movsb and movsl ror jge decl and loopne enter js inc mov xchg xchg and and stos (bad) icebp xor test cmp sub jecxz jae jecxz jle mov cmpsl dec push js xchg cmpsl (bad) pop jge lret popf mov push inc loop sbb loop jp xchg adc jmp out lods pop xchg jo ja out rol insb aad ds int3 (bad) ror rol (bad) push jl add pop sahf lea aam in mov into pop arpl call pop repz pop jmp and jecxz das jmp repnz xchg cmpsb push fisubr push dec inc dec mov xor sub loop xor sbb and inc and lock stc or inc pushf fldl stos pop mov push in or xchg or insl cmp add or jno (bad) out fwait and sbb lret xor inc inc fwait lret and repz cltd pop sbb mov push dec hlt scas rolb or jmp cmp lret outsb mov xlat aaa cmpsb mov jmp bound (bad) push lcall pop mov pop dec xchg mov mov xor ret insl in loope out jmp loope jb in fs sbb inc add mulb dec pop data16 xchg fldl lret and pushf loop xchg dec pop push fnstsw jae xor xrelease shlb (bad) jno inc je mov inc mov dec xchg xorl or xchg lods fincstp nop loopne jge push pop pop dec lret add jne inc mov push imul mov jae pushf push (bad) and mov outsl les mov xchg inc cmp sub fwait loope (bad) rolb or inc push jp mov imul push dec scas mov notl cs leave jb mov fs lea dec int3 daa jp fsubl push f2xm1 ret mov adc mov push mov mov sub popa (bad) outsl cld aad xor insl add inc mov divb gs xchg por scas mov ret orl loopne pusha xor dec xor popa dec sbb mov sbb (bad) hlt (bad) mov mov loopne outsb loopne mov imul aam inc jbe ljmp push iret add inc jl cmc dec mov sub jb pop popa jg xchg cmc adc mov arpl add nop cli in lods sub into inc stc inc mov jbe int3 in out xchg push xchg jle call or iret or or sbb aam test das cmp aad push cs inc lds stos in sbb repz dec pop mov cmp fnsave adc js in nop popf aaa dec adc and xchg sbb sub popl jno inc pop jmp add add (bad) mov lcall lods push mov inc push mov pop jne clc sahf fsubrs cwtl cmc jl fisttp rcrb lcall (bad) in nop sub imul inc xor bound add pop inc rorb inc ret adc in add jmp mov or flds add or aam adc repz test das jmp mov cld pop (bad) es fwait in sbb pop inc jns imul fs and sub pop sub addr16 cli fstpl stc sbb adc daa push jl popw (bad) push xor dec outsb cmp mov cmpsl jnp sub imul sub mov in push add fistp or sarl or add lret mov or stos mov and js cmp mov add in xor loope adc and mov rcll cmp outsb sbb enter ja and dec cltd mov inc push xchg repz mov in fsubrs inc insb nop repz int add mov xchg in push sbb mov in mov into jmp mov enter je popf mov xchg aam mov and pop or mov xor adc sahf pop push jp sub cmp aam das insb incb nop push cmp rclb adc push fist in or cs jno sarl pop add insl push clc adc add jp add cltd xor sub sub pop movsl push movsl mov cmp jl stc (bad) int3 xor cmp pop cmp in adc pop jmp mov in and mov push lock adc (bad) cmp sarl (bad) push cmp sbb decl enter (bad) push clc dec aad ljmp lods jno mov push and leave jmp aaa dec xor addr16 xor pusha ja mov sub pop (bad) out xchg scas mov fwait mov sub pop out sbb cltd xor mov or or xchg cmp jbe iret mov lock fidiv into mov dec int movsb cmpsb xchg pop jae push fisubl add loope (bad) xor nop fcomi push ljmp cmpsb mov mov add add push out mov jno pop mov test jp mov (bad) add js or ljmp fldenv xor mov inc das push sub cmp pusha dec cmp nop push sahf decb dec jge jl out add add cmc sbb inc jl addr16 cltd imul sub cmp bound pop enter lock push iret sbb jae into sbb add inc ds data16 ret mov mov xchg scas push add test jae test jle rol add add mov fdivrs xchg add push nop mov xchg inc lds inc push xchg sub je jmp loopne fwait sti out cs cmp adc cs and hlt pusha and int3 mov and cli out push add cmpsl rolb add push sbb lods cmpsb and inc or imul pop test jne add mov sti or dec sub pop addl (bad) pop xchg jp mov pop jmp test in adc cld iret loop xor xchg xchg xchg jmp mov xor out mov jge xchg or pop and (bad) (bad) mov add pop mov push sub data16 cmpsl fs repz fistpll push sbb inc rorl or cltd jle xchg xchg add inc push test jp pop xchg stos dec push push and pop mov rcl or mov repnz push and xchg pop cs loop sbb imul cmp fnstcw sbbl imul pop cmp fstpt add add test sbb or add je xchg cmpsb sub jno dec mov std add xchg rcrb jbe xchg mov or jp jnp shll dec test or add out sub adc stc sbb mov push in bound lret xchg psubusb mov xor mulb adc xor pop mov push mov jns,pt jmp test emms jns mov out jl sub in mov cmp dec add shl sbb jg movsl dec pop loope ffreep enter shl mov jle pop xor pop fs in and mov xchg (bad) das xchg leave lcall jnp sub mov fdivl adc sahf mov enter data16 test call pop add jne add push cmp in cmc jmp mov and add adc pushf or loope popf bnd jnp out adc dec sbb int loope mov orl xor mov jno add mov cmp jo or xchg adc imul sub xchg push xor cmc sbb xlat pop jne out lea ss push (bad) lock add add movsl and ss loope inc adc adc nop or push sub push aam mov xchg xor out das pop dec out xchg add or push cmp addr16 out lods and xor xor lcall pop sbb pushf mov aaa sahf mulb insl rcrb movsl add daa add add add add js adc inc xchg cld jg js inc or jp (bad) dec clc insb push mov subb gs jno dec pop xchg jns ficomp jmp in mov leave addl idivl movsb lret lcall and cmp test negb adc pop dec inc pop aam inc or (bad) nop add push enter sti sbb and jge loope mov add add add add (bad) sbb or out inc inc dec mov popa or xchg call ja scas push andl mov inc mov pop loop inc es shrl sbb add jae inc test jmp add insl data16 and and jae pop fadds adc add dec sbb call fdivrs sti cmp pop fistl or fucomp lret out mov cwtl sub add and cmp imul push mov push (bad) lock cmp or addl cmp lock mov cmp sahf push dec mov fsts imul jne lret pop mov mov xchg leave xor cmp js or jg push mov mull cltd mov aam in scas jmp repnz out imul add add in sbb insl or js jae jecxz out int3 aaa cmp (bad) mov pop fbld push (bad) dec mov inc push xchg into cmc sbb and stc fidiv out and and cmpsb ja clc shrl pop scas dec call jmp xor or mov inc jb dec push jne js sbb cltd inc aas add xchg adc mov lds nop (bad) mov in jae sbb pop mov fstpt test lret push pop jne lods into mov imul loope inc outsb mov lahf or shl mov outsl jg (bad) popa push pop aas sub es fildll or mov and inc push cltd (bad) xchg adc mov or outsb pop (bad) mov push (bad) jge sbb add (bad) arpl sub daa adc xchg jmp ret mov pop pushf mov (bad) mov movsl jmp push mov stc in (bad) xchg mov xchg cmpsb cmpsl mov arpl (bad) xor jne leave xlat fimul call jg fistl leave arpl jo bound adc lock dec mov popf hlt jne push or (bad) jge dec sbb aad mov sub xchg add add push mov in push (bad) push xor pop cmp aam push adc loop push in mov and push (bad) insl mov and jg and ret lahf (bad) out hlt or aam mov les pop sbb sahf adc outsl test popl sbb cld jmp sub mov shlb add xchg push adc shlb xchg stos inc push pop iret pop popf push add add add jmp outsb jns xchg jp sub dec xor mov fdivr adcl jge negl fcoms mov dec shl mov push mov popf xor aas jb jl dec cltd stos or sar or pop (bad) sbb jo daa inc mov dec (bad) mov lahf mov notb jle mov or sub mull xlat fwait cmp aad add mov inc stos add jecxz lods jp (bad) cld jnp jp fcomip pop loope sbb adc mov mov les outsl push ja cmpsb adc jbe dec lds ret xchg mov jp or loop in stos jmp mov cmp das dec (bad) les neg adc rcl scas (bad) pop adc (bad) lret aas mov or cwtl jae das adc mov lds stc inc xor add (bad) (bad) push (bad) jecxz mov mov fs (bad) xor aaa daa jae movsb ret loope lds cmp push xor lds scas fidivr pop js jp pusha jmp adc adc out pop lahf mov mov inc add jp es dec xchg pusha js push sbb das mov pop inc vorps into adc xor int3 fldt push in jno cmp inc lock add add dec pop inc cmp fxch outsb dec dec (bad) push fimull jmp sti adc and loope jge xchg xchg pop jl jnp xor jp sub and daa cli ja sti lea xchg adc jae ja sbb lret sbb or lcall mov stos cmp insl push js (bad) aad test fcompl cwtl cwtl lods xchg bswap dec and flds add add (bad) scas sub in enter mov into xchg adc fucomp stc bswap fsubrs lahf loopnew jb test sbb dec jno cmpsb jl repnz test out cmp mov mov or adc and push fimull in nop inc mov (bad) cmpsl aam xchg jbe,pt adc bound sub mov in shl dec add mov and jmp outsl inc xlat dec (bad) mov add add fs lea adc fist insb dec push sbb imull out push mov iret mov loop inc push adc and dec lea or xchg js call mov xor sub test push stos stos or (bad) fwait mov jecxz in mov pop loope cli aaa cwtl adc das cmp mov inc pop les xchg lret (bad) cmp jecxz jmp mov xorl xlat mov (bad) sarl and pop out pop xchg arpl pop cmp xlat cmpsb jmp xchg cmp (bad) mov and and inc push jo xchg (bad) iret cmp mov add or sbb lcall nop rolb cmp je hlt (bad) sbb out adc adc test jno gs mov jae sti push jne daa loopne scas lds shrl (bad) pop pop lret into outsb mov dec je xchg inc xlat inc jle cli dec ss in jbe xchg pop out cmc add cmpsb dec scas or outsb cmp (bad) fs out and mov dec cmp push test jae ret adc add add stc sub shll mov xchg cmpsw pop ljmp mov add xchg enter lods cs mov fadds adc pop (bad) in pop cli push xor dec outsb lods jno push adc out inc or stos rclb call cmp rorl fwait push mov dec xchg loop cs pop xchg fs cld in inc lret imul dec mov arpl add add popw lcall sbb bound pop popa test mov aad movsl ss gs cmp lea in jbe lods sbb push and stos adc push pop cmpl lea dec inc or mov ljmp sti jl add and inc cmc or adc imul xlat mov push push movsl outsb incb adc inc jge cmpsl or lock fbstp fs fisubr adc ss xchg inc xor push add mov inc xor cmp push add fs mov and pop or mov std repnz mov ds mov cwtl cld dec jge cmpsl xor pop loop nop mov rcl mov cmp mov test movsb outsb cmpxchg add add add dec in xor addr16 pop jnp sbb scas sub mov cli int mov or lea xor cmp jecxz push xor aaa sbb or ret inc lret cmp push in icebp pop andb sub push (bad) bound sbb loop fldenv jne add shrb sub cmpsb xor arpl dec dec repnz add outsb bnd loope pop sub outsl mov popf sub lds imul (bad) (bad) test inc xor mov lret jb mov jne mov inc call mov mov sbb (bad) jbe outsb cmp movsb aaa pushf xor scas mov xchg dec call sub or sub xchg add in test mov pop clc out out pop pusha fcmove jl mov push or dec cmc (bad) lret mov leave ja cmp push into xchg or mov imul fbstp roll (bad) cmp mov inc xor sub jnp into imul dec lret mov js fldenv mov movsl mov insb (bad) push or xor jbe pop into std loop add add dec loop xor daa and (bad) popa jle adc push addr16 xchg imul int3 enter lods mov dec int3 out das mov and xchg mov sbb rcll mov dec pop cltd sub cld out aad xor adc cmc xor out repz fs cld adc sar sub shl cmpsb sub inc xchg add mov js mov lock and push in ja,pn xchg shlb test push add daa scas fsubl add xchg jl ret adc fwait arpl sete adc daa xchg inc sti ror cmpsl xchg icebp hlt cmpsb sbb call jl rcll bound call scas lods mov or pop imul mov fcoml je inc cli push dec rcr push je mov hlt push dec push in sti cmp push xchg inc pop adc enter (bad) lock dec repz test add jge das pop pop gs jne loope loope (bad) jl mov les xchg imul out or add enter add xchg fidivr mov dec idivb add leave aam test inc mov imul mov inc mov hlt popl dec fidivl (bad) or xchg mulb insl xchg xchg dec jecxz lret xor cli or push in repz out mov call inc xor lds insl fcoms pop iret and cmp sub jle add jnp or xor shl mov scas ljmp fistpl adc shrb xor adc cmp imul bound sarl imul xchg jmp test cmp mov inc fldcw enter outsl fistl push das inc lret jmp leave je sub xor ret das mov lahf mov mov lds jns pop sub aad fs fnstcw insb lea mov and sbb jg sub std pop fiaddl and jp mov ljmp in pushf loop inc test popa or or lods dec add sbb stos in pop bound push lds dec sbb aam cmp popl imulb sbb lahf (bad) sub push sub fwait cmp loop (bad) xor jnp pushl int3 loopne repz add push add cmp inc icebp mov sbb js imul in xor or and std test rclb mov xor and iret sub cmp cs adc cmp pop outsb jbe inc xor stos std mov ret jecxz xchg mov clc outsb add push das jne mov sarb fnstcw aaa dec pop lret shll (bad) (bad) inc and sbb divl inc es cmp sbb mov inc push cltd add std fwait jecxz push dec stos bnd xchg pop in addr16 pop outsl push adcb mov or fucomi inc nop test inc fs push lahf mov xchg xchg lret (bad) cmpsl (bad) in inc and and add add in movsl outsl imul mov add push cmp mov sbb mov ja imul push sub jae daa fcompl mov sub fwait lds inc pop stos arpl outsl xchg jp jge inc xchg add mov fldl2t sbb das push push pop xchg mov test mov outsb pop push int3 xor loope cli cmpsb pushf ret cmpl (bad) decl sbb mov jnp fcomps int repnz call cld enter jb dec in inc int3 mov ljmp arpl outsb punpckhbw mov les xor jns push sti inc ret dec jne inc pop mov mov sub (bad) inc repz outsb dec jle mov movsl and out pop rol inc add mov xor cmp push ljmp pop andl in ja mov cld and mov in repz xchg fcmovne movsb outsl xchg push (bad) xor xor lock sub les aam mov cmp popf repz and popa sbb jne push stos es sub sub out gs lldt sarb int adc fnstcw fild adc in lcall add add push mov ja cmp sahf test cli mov cmpb xchg cltd loop push fiaddl pop dec dec aam div mov and lahf ljmp flds dec cmp dec cmc js leave push jae aad mov cmpsb push dec inc ret lret push pop xchg inc adc and and shll pop jg lcall pushf push sub sub test sbb mov les sub jl and pop xchg mov xor jae in cltd sbb pop xor pmovmskb aad std adc das xchg sarb arpl pop add mov or mov mov dec cmp and mov sbb or add add add das cmp dec inc insb add test ljmp push rcrb inc or lock xchg ror and jb add rorb lds push xor test adc sbb inc pop (bad) and adc cwtl sahf sub repz cmp lcall mov or insl je mov imul stos sub push jb xchg add mov adc aad loope mov leave repz repnz (bad) mov stc jle pop xlat push pop stos or bound das ss dec repnz xchg or ljmp stc loop loope lcall sbb mov or pop cmp jno cmp js xchg jecxz dec js mov mov aas (bad) mov xchg mov out add add test lods (bad) adc dec (bad) dec popf scas xchg jl dec aaa popf test adc mov fcoml pop xor lds jge push xor pusha sti dec mov and popa or hlt cwtl pushl loope imul sub and je repnz dec adc add adc insl cmp jbe shrl (bad) aam mov scas xor xchg ret lea jmp add icebp test (bad) jmp mov sub sbb pop inc sbb pop insl inc (bad) mov mov out int3 shlb outsb movsb in sub data16 dec mov sbb aas outsb rcrb push in sub fs repnz shrb cwtl das sbb test (bad) int3 adcb xor negb add push fisubrl (bad) cmp mov add add jmp test jmp or (bad) cmp jp cltd mov movsb dec out repnz sbb add or imul sub in mov cmp mov ss add mov cmpsb jbe mov pop mov mov pop aad pop into jp mov fs fiadd rorl adc push cmp js add cmpsl push int imul daa nop cs sarb xchg inc xor sub jmp mov aad jo fadd daa cmp pop push mov rcrl xor xchg xlat hlt test ds xchg xchg inc mov ss aaa pop hlt jb mov dec or fsubs addr16 pusha sbb cmp (bad) inc sbb add pushf out add adc js call notb add xor xchg jnp cmp dec lds fisttp repz sub xorb aad xchg ss inc cmp mov (bad) ja xchg dec jge repnz jle loope lds fnstcw stos jp lock mov sub sub ds pop sub xchg sbb aad xor or sahf adc sub in sub int sub incb xlat mov test push push loop push out popa (bad) adc pop aam lock jle (bad) lock pop dec (bad) push icebp adc and aaa inc mov ficomp sbb cld les gs push inc test mov lahf push pop fcoml or aam scas and sub push in pop xchg cs dec jl je xor es jns gs xor add cmc les imul call cmp sbb stos dec pop push fs cld ret pop lea sbb adc out daa in mov and out sbb clc (bad) cmp push movsl xchg pop cmp pop sub pushf xchg jne,pn test mov dec push jecxz mov aaa adc pushf int and lods loop jmp mov add insb xor aas xchg movb ficom add pop add test mov call rcrl sti sub inc jnp cmp push out add xorl cwtl mov and roll ss jno adc sarb nop mov or dec mov xor cmp push out dec gs je and lret roll movsb repz xchg in mov inc fidivrl jno and add loope fs test lahf sbb add push mov push fcomps mov adc clc or scas std push jecxz push or and xchg idivl mov xor xor and outsl jb cmp add and xchg pop gs push xchg add divb mov cltd sub push rcr xchg movsl mov ja mov add sbb rcr jo pop popf adc out add pmullw popa pop jb lods or xchg adc push or pop stc inc clc imul outsb add fnstsw sti sbb and jmp xchg repnz xchg adcl jmp (bad) scas mov nop mov lock addl or dec aam push mov add je fsubl jbe or cld movsb inc add dec pop cs jl iret mov add or js (bad) mov insb hlt pop fcoms mov mov scas pusha mov ret adc pop add enter xchg jbe cmp lea pop stos pop xor adc ret test xor and cmpsb jno subb inc add add or sbb jle pop xchg fbld (bad) outsl fcoml nop sub sub orb mov (bad) cmp mov jae (bad) mov fs sbb dec scas insl sub fidivr sbb hlt xor jge out dec xchg popf mov test std frstor sti leave and (bad) jnp stos xor jle jo cmp (bad) adc pushf mov fldcw cmp lea sub sbb adc or xchg je ret dec repnz dec clc inc mov in (bad) pop mov jmp jbe roll lods stc pusha (bad) (bad) rcrl loope mov cmc addr16 notb stos ss mov aaa xor inc rclb xchg mov sahf inc stos xor inc aas mov shll adc nop in arpl pop outsl cmpsl mulb mov cmp test inc mov adcl ljmp outsl and and rorb scas cli pushf xchg dec addr16 mov aam fs ja and cmpsb xor std or ret push lahf ljmp fstl cmp sbb cli lea and fwait enter enter and mov jp mull xchg adc xchg cmp xchg enter fistpl cmp stos test inc fisttp or ljmp test sub inc push push or cmc pop push aad scas mov js outsb adc cmpsl jge xor jle push inc push jle shrl and push jbe dec pop cli sbb mov icebp adc push movsl add add adc mov adc mov fsubrs pop lods or dec mov xchg push adc add xchg or xchg mov fistpl nop xor and ljmp lods stos fsubs aad jne push xor pop loope in in jno sub cmpsl cmp cmpl sub ds or cmp mov pop test add into test ja lahf fldcw lods nop jmp negb (bad) jle jl decb push sti push xchg xor inc lahf xor cmp or mov add or outsb addr16 aas pusha pop mov xor sahf outsb jmp inc sti xchg (bad) ja xchg ljmp lods and and sti daa sbb shll mov sub adc mov add push bound cmp jns stos lea jge int repnz jle mov movsl fldt adcl (bad) lea pmulhuw xor lds sbb push mov xchg sub pop mov inc mov push int pop or cmp roll dec cmp jle inc jne jne mov lret mov jle into xor outsb ja xchg test jmp adc add cmp dec push sub nop jle dec sub (bad) outsl inc (bad) lods xor adc fbld lods rol jnp fistl mov les add push fcomip sub rorl mov jne aam xchg pop fcoms addr16 xchg enter mov cmc jno insb xchg cltd xchg pop xchg aad xchg inc or fs imul or es add xor mov in aam fmuls shrb repz lods mov mov adc fbstp xor mov adc mov mov xor fisttpll lret fdivrp dec dec jl xchg (bad) xchg (bad) sub cmp sbb push cmc aad iret lock xchg xchg lcall add push dec in clc pop (bad) jp popa mov fsts add push lods pop sub int3 pop pop cwtl mov xchg jbe xor testb fnstenv pop shlb dec mov or add push enter jbe sub xor sti cmp jp xchg mov std mov mov sub les sahf sub mov xor outsl jge out jne push xor int3 add cwtl inc pop cmc cmp pop scas jae pop daa lods pop iret jle add mov cli pop pop out repnz stc or dec or mov lds cltd pop or jmp pop sub fcoml xor or pushf inc ret nop pusha inc daa (bad) jno daa loopne flds mov cwtl ret imul out adc sbb sub mov outsb inc jae sub add add daa roll xlat mov add stc push mov add jle iret pusha or fadd xor ror (bad) fistpll mov adc adc mov pop pop mov mov or pop subl push fbstp js inc ret push inc xchg iret push stc xor jg sub cmp xor mov xchg mov fcompl jno and push lret notl (bad) and and xchg out adc test and push (bad) xor add popa add cwtl or ret xchg jmp (bad) xor test and inc cwtl or jecxz test cmp cmpsb int3 inc bound test loope push ror xor jle arpl mov lds out daa dec pop xor cmc push adcb mov xor rorb mov mov pop and pop scas test cmpsb sub or sti sbb cmp sbb or add fsubs pop cmp cmp push pop xchg jmp xabort jb inc es aad mov push sbb sar cld cmp sbb xor add mov and mov ret cmpsb mov push pop pushf inc test (bad) fistpll fildl (bad) int3 lret xlat dec setne stc xchg pop (bad) fidivrl jne in pop ret jmp popf lods push mov inc jbe shl scas (bad) shl daa or out lahf dec mov jle nop xchg or push icebp push mov repnz test push jnp cmpsl ret sub adc jmp test movsb mov lret add es fcoms ds hlt (bad) cmp push and push push mov scas mov test cs (bad) loope adc leave loope xchg or stc in fcomps mov pusha test imul push pop lea fbstp jns jle repnz test lret or xchg and and xor add sahf sbb movsl stos inc (bad) imul rorb mov adc or mov add adc cld xchg lret push fisubl inc push or pop push scas inc cmp fwait jge leave mov les sbb add stos fdivrs (bad) jo and mov lods adc and std sub jg rolb mov cltd (bad) add jmp fdivs pusha and mov push xor ja movsl dec imul fiadd add cld insb mov cltd int3 or jae push mov pop mov (bad) fbld sub into cmp inc mov pop je int mov add jp scas add popf sub pop adc sbb push orb call pop lcall out imul push add mov les pop add rolb inc push es dec inc scas mov mov and push jo int sbb fidivr cmc ss xor pop das les in mov mull repz arpl xor rorl push loopne fist out sbb or sub xor cmpsb ret cmpsl (bad) add enter push out repz pop out cmp das rorl fstpt sbb insl pushf xchg pushf fs in sti call mov (bad) lea add add imul and sub xchg fwait ror int cmp fistp sub pop adc mov inc mov in es pop pop mov push and mov lcall rcrb mov inc or outsl push repnz push cmp lods (bad) das push movsl xor push dec ja movq push decb add (bad) je into inc in jns (bad) lcall test popf fisttpl lret test xor shll hlt mov inc out notl es sub neg mov adc fnsave push xor les pop cmp inc inc addr16 outsl and jns scas sbb lret jb fdivrl jmp pop insb stc xchg add leave xchg sarl cwtl add mov and and outsb (bad) test adc adc add mov mov daa push pop fadds mov xchg cmp test int3 inc jae adc jbe jmp (bad) scas adc andl lea pop (bad) les mov aaa push push mov add xor xor sahf sbb fldl or decl out add (bad) aaa out cmp loope sub ljmp stc add sub inc inc (bad) or push mov jns mov lea push inc cmp outsb flds cmp pop dec test lods jg mov xchg pop psubd je and or adc add insl cmc and xchg mov clc mull mov xchg test cmpsb push sub and adc test or pusha cwtl pop fwait repnz sub mov bound xlat cmpsb xlat int3 aad jge mov ds test and inc es lahf jns and and cmp mov movsb mov pop test mov rcr xor (bad) mov add mov mov sbb inc xlat sub fdivp cs adc push inc insl xor and pop push fs add xchg std cwtl add adc cmp outsb test cmp xor jmp outsl jne add push leave add ss cli xor or or rcll mov (bad) jp inc jnp xchg mov sub xor sub xchg popf jae mov repnz mov sar add add cs push inc mov fstpt leave mov xorl jp fbld push jp ret jge je inc std popa inc sub jns loop roll je mov push inc sub cli cs mov out adc sbb (bad) dec mov popf int3 inc (bad) mov push dec cmp or insl dec in pop and jns sub xor add or sbbl outsb xor cmp movl mov test (bad) repnz cmp sub (bad) lods arpl gs icebp loope cli ret (bad) mov jmp xchg into aam jnp xchg iret ret in sub xor xchg and or mov add push in jnp jno xor es (bad) cmp sbb pop jbe test cmp dec (bad) cmp pop add test mov cmp inc sub cmp in jge enter xchg repz out lds jbe cwtl scas and mov popf add add xor adcb jmp test cmp fs stos pop lea rol xchg fbld or add adcb gs loopne cmp iret fstps hlt sub ret jns add sub into aaa imul (bad) cmpsb test pop insl popf inc adc fwait fwait or fwait loopne pusha jp sub cmp (bad) mov push sti xlat jmp ficomp mov (bad) mov xchg test dec add cmc push xor sarb xor pushf fnstcw dec shld (bad) cli push sbb push and jmp test mov cmpsl pop mov xor stos mov xor ret mov cmc pusha outsb sti push sbb pop bound jecxz ja jbe mov je (bad) lods fs pushl fidiv das std sbb adc (bad) jns adc fldl inc out pop mov lret cmp mov fcom nop leave repz xchg mov mov push push (bad) (bad) outsb and push into insb sbb add fildl fnstsw into or cmp rep aam js xor jo movsb icebp fnstenv loope out popf cltd loop iret call add imul fwait movsl mov pop cmp sub pushf test mov aad out xchg outsl xchg fidivrl lcall mov pop xor lahf fstpl divb data16 test mov cld jle subb or add add inc push inc adc clc add and push jle adc daa (bad) lret mov dec mov pop dec mov mov xchg fwait aad (bad) pop and sbb pop and test mov gs jp mov jge push jg mov into pop mov push add dec adcl sbb (bad) fimul (bad) popa loope addr16 sbb inc dec mov add repnz sbb jl mov mov xor push lahf add lods inc orl test cwtl add in cmc push and movsl adc int3 xchg fcoms cltd xchg push xor nop push mov inc pop mov add sub push add imul adc ret fcoms clc fisubl lcall jae (bad) sub sbb push imul cmp and outsb test xchg test add adc or add push sahf inc adc mov xor dec pop push (bad) adc mov sbb push ss push inc rorb xchg mov out xchg add ja test in jmp cmp (bad) xor pushf xorl add ja jb ja mov and sbb push out js mov arpl push push pop xchg or lret jp ficompl pushf bound (bad) cmp fdivl repz fcoml movsl movsb dec xchg shl (bad) aad test add (bad) (bad) fst inc leave add xchg int mov mov sti mov rcrb add xchg test mov adc dec sub dec ror insb add lcall sahf sbb jnp mov jg and lods pop dec jb sbb inc lods mov inc mov jne pop cmp movsl cmp mov arpl and inc rcll insl sbb jmp arpl sbb mov mov xchg insl es lods xchg fstl cmpsb cmp pop and popf inc imul add add loope cli mov test xchg call mov into jg insl jmp push popa lret pop push cwtl sahf xor pop jmp mov repnz insl mov pop cmp bound jl out adc das push std and jno in gs xor xchg shrb lods sub (bad) jmp jns cmc mov out pop fmul push inc push mov fisttpll aaa into std and add pushf xchg pop testb test pop das dec jo cli push icebp inc in adc loop addr16 or aaa lahf in cli cltd sub xlat lods xor jnp outsl xor mov push lahf mov aad (bad) stc cmp mov (bad) (bad) cltd mov test fisubr imul mov mov enter stc adc dec sub add add test test jp gs add jecxz or jb or pop aaa fldcw fisttp jne or sbb aam cmp xorl in fwait daa cli push rolb roll mov jo push stos push fildll leave dec ret addb lahf scas sar fcompl js sub loopne call cwtl jo js pop mov add push jnp mov scas insb inc push outsl mov ja outsb std sarl int mov mov or pop repnz ds jae outsl cmp ja (bad) sbb (bad) inc mov mov cmp divl daa insb lods xor das sbb cli stos into test pop lcall cs test in xchg mov stos adc and in adc out add icebp jno pop fwait xchg mov add les cmp sub xchg jno ds pop and push in mov xchg adc stos inc and inc mov mov pop cmp sbb mov in pop push xchg addr16 add daa loope icebp sub enter lods adc (bad) outsb inc jne mov cmp xchg fistp lods es push out (bad) sti push dec jns push sahf and shlb adc (bad) jo cmp mov scas cmp xor mov shrl movsb hlt and push or jb lods sub cmc add cmp aaa push fldl inc test sub insb movsl mov add jno lods ret (bad) mov js mov and (bad) shlb add jge enter cmpsb pop add inc pop adc loope int3 pop sub xchg out dec out dec cmpsb mov jl aaa fmuls fs push das sbb aad mov cmp ret and inc fs movsl fldl test scas dec pop inc es std jle rcrl xchg jnp daa sbb jmp in fbld or xchg push lea aaa pop cltd stos add add sub push jb xor sbb aaa shll loopne in mov or or inc lcall sbb inc or outsb lods (bad) aas dec sahf xor dec nop sub jmp pop gs dec adc out and pop aas push pop adc mov and add push mov inc loopne sub stos push sub push xor xlat aam ror add lds mov mov in aam pop mov cmc mov and mov add lock ficom pop push (bad) mov inc jp and jge insl out aas add gs out popa fisubrl sbb jb pop xchg mov add mov out xor or fnsave push (bad) cmp xor xchg lods fbld fildl add sbb add or hlt xchg or jge and push call mov cmp mov lret pop inc add dec flds test sbb cmpsb fdivp ljmp fmull pusha mov (bad) daa lods mov cmp push (bad) mov mov cmpsl cltd clc pop sub xlat push add imul mov jge xchg cmp xor jge leave popf (bad) repnz icebp jmp pop inc ret faddp pop xchg aad ss dec and jne push iret std mov pop sub add insl sbb das xchg mov dec jbe outsl (bad) stos xor subl jge scas cmp mov mov inc dec cwtl out or xchg fmull sbb (bad) or mov lahf sahf cmc inc pop fdivr test sub jmp cs lahf pop xchg jns andl sub xchg loop adc leave inc push lods jmp aad mov pop repz mov (bad) dec out adc adc adc (bad) push scas lcall push or mov inc pop adc push mov mov xchg mov and arpl and js pop ds sub sub sub frstor adc or add out jnp stos or pop mov fsts fcoml xor inc in je dec mov out movsb push lods push sbb imul call pop (bad) fsubrs inc mov inc dec push adc and mov and call movsl ret insb aaa aaa cmp jg ds out lahf pusha add jmp bound mov push dec ja jbe mov (bad) xor in pop add loopne pop add jb xchg loopne jg int adc in xchg adc xor adc dec lods gs dec xchg inc out cmp movsl hlt jae adcl mov xlat ljmp lods jns push das rcrl sbb dec stc mov xrelease adc aad lock loop inc or cmp arpl pop or fcom inc ss adc inc sti or jne ss xchg xor add leave cmpsb decb andb faddp mov jae iret or push imul out (bad) ss mov mov dec (bad) cmc adc mov ret push pop dec fadds cwtl stos (bad) in cmp (bad) jl inc mov jp xor cmp dec call or inc jge movl jb adc mov inc pusha lods jle loopne jno aaa sbb add sbb jmp push xchg xchg xchg out mov dec in and and xor xor cmp mov lea test adc cs lret sbb cmp xchg pushf aad cmp jecxz rol or xchg pop fs (bad) lock sbb movsb das pop mov lds outsb in dec jno pop sub mov xchg pusha mov push jae ret add add sbb or ret movl lea ljmp fcomi push das jo lds cmp mov xchg clc je jmp adc gs cli fimul cs pop dec mov xchg mov push xor mov adc sub mov int3 mov cld test cltd mov sub mov add popa lods leave decb ds loop aad iret add xor jne cwtl xlat aaa pop mov popl mov ljmp xchg test inc cmp mov inc in lock iret lcall pusha aas (bad) jmp push mov test popa das lock dec xor loope jo sahf and add mov ss hlt mov add (bad) and mov arpl lods rcrb addr16 xchg mov push imul int sarl jno dec pop adc testb mov rcl cmpsb jecxz jp rcll (bad) cli inc lcall or push and ds mov into add inc arpl in jecxz int xchg jp cmp int jnp pop repnz outsb data16 jecxz jecxz inc out and inc (bad) add add or xchg lods icebp addr16 jae pop adc outsb fstps push fildll mov loope xchg push bound mov sbb iret clc outsb movsb aaa xor cltd dec pushf cwtl lds lret mov (bad) scas cmpsb add xchg or mov dec xor jbe bound xchg (bad) ss and loope cltd lods pop xchg jae mov test popf push cmp dec and inc movsl and stc mov add add lods mov fs mov jb imull jb ds call sub sbb mov add jae mov xchg jmp repz add movsb xor mov enter divb out loop cmovge mov adc (bad) push loope cwtl fisubl aaa push cwtl xor pop mov xchg mov out mov and movsl push imul pusha push fiadd add add pop push (bad) (bad) or fdivs lcall test inc cmp lea dec das jns push jl add jecxz fbld or mov mov daa imul sbb cmp sbb sbb mov out mov test (bad) mov inc sti jae ret sub pushf sarb push or repnz mov lahf dec imul pop and add add or xchg inc (bad) movsb icebp lock pop mov mov (bad) rorl push push xor or out clc dec add sbb inc aaa inc pop pop repz adc and outsb mov rcr mov adc es add inc push mov push (bad) dec ret mov sub (bad) or pop xor movsb gs cltd push or fcomps push mov mov xlat or (bad) jecxz ret mov pop mov das adc pop sbb (bad) adc insb out lock dec and je fwait dec push (bad) mov push inc ljmp push jns xor in addl jl mov sub gs insb inc lret mov stos leave int sti push (bad) addr16 pop cmpsl in faddl cmp loopne fiaddl add add jae in outsl push daa or pop jl lahf cmc leave add or inc aam js xor cwtl mov loop inc cwtl mov jmp cmp push adc dec pop les mov ljmp adc jge je push sub loopne mov cmp xchg inc push inc push mov inc lea mov push dec outsb (bad) ds cmpsl lea add jp cmp or int3 (bad) (bad) gs fcoml xchg xlat (bad) in lahf jmp outsl inc push in ss loopne and ret mov xor shlb sahf (bad) and fwait movsb or mov das cmpsb hlt (bad) jo pop dec lahf out aad sbb mov push arpl (bad) sarb (bad) (bad) adc xchg pop dec push stos test loop aad cmp fildl rorb loope mov sbb xor and ss pop in je add subb dec sbb add pop sub (bad) icebp fidivr jbe enter jno push adc lcall sub xchg cltd iret adc mov into cmp (bad) idivl je dec jle inc pop push out xchg xchg inc xor jo stos (bad) adc mov je pop and ret rcl fs fwait out push repz popf mov mov mov arpl cltd mov lods test int3 outsl ficoml andl mov and ds dec xor imul inc inc (bad) mov mov sti mov pop js pop scas or jb sub fstps stos sahf jp push push aas (bad) xor decb add ss stos push dec mov int push sbb mov fwait adc call xchg outsb rol lods sub cmp jge mov mov repnz fucom (bad) mov (bad) mov cld sub setle insl iret and pop and lea scas adc cmc push mov dec sbb jmp frstor and jo cmpb adc jl adc mov pop sbb sbb lret xor fwait cmp insb into ja in jmp xchg into push ja jmp mov or jmp cmp mov and fs insl mov (bad) dec jl ret scas fcoms push jbe pop xorb dec mov push lds mov mov into aaa or xchg lds jae aaa push test movsb inc daa add fwait mov arpl add inc xchg mov out xchg data16 fnstenv jg mov test dec add call insl dec mov mov pop cmp jmp xchg jb push les movsl aad int3 mov in xchg pop les pop mov das loope ret dec rorb push inc adc pop xchg insb and dec push mov pop pop or outsl notb sbb cli push inc push xor xor (bad) sbb xor xorl outsl dec ret jmp ror leave lods jno nop inc or or aad inc push inc (bad) sbb leave xor (bad) jo inc jb dec sbbb sbb or and adc cwtl or pop sbb imul mov pop aas mov into push push stos dec fcoml je jp sbb (bad) out je mov sub sub fiadd loop aas add bound cmc ljmp (bad) xchg mov jo cmc inc pushf adc inc inc ss lahf jbe leave scas dec out fistpl in push or cltd mov or imul add enter jp xlat ret mov test xor jmp fwait lahf xchg clc std cmp idivb inc cs cli orl add adc scas push repz and or or les in inc hlt and pop push hlt cltd cltd xchg mov in dec repnz inc jp iret into jo lret xor negb out ja test sub pop daa fwait rolb dec pop push fdiv mov jmp mov jno sub dec rcrb cs leave jbe lret mov leave inc in popl pop push (bad) movsl jle xchg imul push push mov push mov mov jecxz jae aad add mov leave ljmp rorl dec add adc clc imulb or jecxz push lret popa stc or std nop je dec mov push xlat mov add lock ss sub inc aam cmpsl inc and inc push add mov xchg lock lret or nop dec sbb sub push push mov jge mov sbb cmp sub fdiv loopne and push shll push jbe repnz jmp add das push jp push loope and push aaa cmp je dec xchg inc jnp stc out adc aad or lea (bad) mov mov add add and pop or je gs fisubr pop test iret push int das pop jmp shrl pop cli add cwtl mov dec data16 movsl add jbe in lods xor cmpsb jge loopne aam std outsb mov aas mov daa pushf (bad) lret adcl mov xor loope cmc sbb or push dec adc xor xor add pop mov push ds je xchg outsl loop addr16 push xchg pop addb pop pusha jmp inc push je adc bound test outsl loopne pop push movsb sbb sbb add repz dec test (bad) xor xchg xchg sbb push cmp in enter es test sub sbb pop mov out aas mov lcall add in mov cld mov add jne in pusha in fidivl mulb outsl pop mov insl push data16 bound mov sbb outsl lahf jo push cs sti jl inc cs fstpl fidivrl mov out mov mov hlt out cmpb icebp and es cld outsb int3 bound jae lret loope cmpsb test adc scas (bad) or or cld ret pop lods cli lock add jnp jo mov gs inc arpl lret not (bad) loope mov push add rclb sbb push add cmpsl and rcl sti and clc mov pop mov push popf xchg jle ss dec lcall ljmp in setns mov (bad) in add std add adc movsl dec cltd mov inc inc dec inc rcrb add outsl inc add cmp push test arpl fs sbb sub and repz cmpsb xor or (bad) add push out adc lds ss dec js (bad) in mov inc into pop daa push lods ret and inc jne (bad) ss fnstenv stos inc int3 ss inc scas std insw xor icebp xlat (bad) bound or in push dec sbb push xchg xlat into (bad) or aas hlt (bad) test add sub ret daa mov sahf movsl ds mov sarl sub leave xorb or fnsave and inc in xor loope cmc test jbe inc lret ss cmp xlat orl jp cmc push (bad) call ret test pop sbb (bad) icebp sti arpl xchg popa jns movsl push and add incl out in mov jmp sub push dec enter pushf ljmp fist xchg mov sbb sub fs or into push and repz cltd daa adc cmpsb pop fwait xor fidivrl ja adc gs js aad mov pop popf ror lods dec push adc jno lods jns mov cmc or mov inc aad push (bad) gs clc repz jne adc js mov pop aad and dec out or adc or out out lret (bad) mov enter imull (bad) int3 (bad) pop aad dec adc call fstpl fimul fs push rcr xchg hlt dec shll and jae dec popa aas ja sbb (bad) dec adc fldt aas add inc sbb or fnstcw push xor adc add push test rclb stc mov add popa mov jp sub ret je push add mov add repz add leave ds sub sub test sti adc out sub stc mov out sbb pop ljmp push mov rorl xlat leave add int xor in inc data16 orb sbb mov xchg aaa jne lahf push ret mov (bad) mov jnp or xor fidivl mov pop lahf fwait icebp sbbl insl in roll rcl out cmpsb out push nop lock and inc adc jp xchg mov pusha add mov push sahf dec and daa movsl mov sub push int3 push push lock aad in ret add add nop push enter mov fisttp add imul popa jmp lahf sbb add jo inc mov adc jg mov movsl and push mov dec (bad) inc int3 xchg cmp push pandn ror in dec or arpl dec mov jbe lods lds and or xlat push sbb addb pop cmp or icebp lea outsb add add aam jg shlb jo repz xor std outsl in dec inc ds loopne aaa add (bad) mov bound add cs fcompl or lret cltd dec fnsave outsl push add out adc (bad) ja (bad) into adc loope scas pop pop jnp (bad) outsl adc stos fs lea test insb xor cmpsl gs push sbb add add lock jmp fcmovb mov and mov jne and dec adc (bad) xchg clc lock fnstsw mull sub icebp push popf lods mov and loop sbb pop sub and dec test cmp in mov mov scas fadds lret fchs jbe adc hlt push pop inc fisub mov xchg scas rcrb insb push aam add xor pop pop stc movsb push lret cli mov in push in in push stos jb inc and ja pop cltd call cld in (bad) xor clc in movsl jo call push push cmp xor add (bad) outsl mov adc xchg inc movsl pop aad ret push (bad) lea xchg mov push adc add jg aaa out pop ljmp add pop pop pop sbb out mov jmp pop push pop outsb mov mov shrb mov lcall cli push inc lahf loope call in mov shr xchg pop pop mov adc xor lods popf cwtl xchg and pop cli rclb mov and or lods xchg jno and mov cmp lods aaa mov add cli xchg add add add sbb pop push mov lds pushl aaa xchg push jle xchg repz stos incb fstpl outsb mov mov pushf clc arpl rorb pop add dec cli cltd and fildll cwtl xorb mov fcmovnb fsubrs (bad) jp mov xor sub jae imulb aad ret mov scas mov out out lock xor push jle les sub jp int3 insb data16 add movsl (bad) push (bad) sub dec xor mov ss lock (bad) fisubl pop mov shl inc es stos fstp push mov adc add dec jg jge mov roll pusha sbbb in inc cmp jb test add jl xor sub movl out pushf scas out adc dec in cli mov sbbl cmp add mov add add popa mov mov mov cwtl in int xchg psadbw adc daa aam je push movsb dec mov and and daa cwtl cwtl pop jg jno push jl dec cld mov jle mov push mov fldl inc fs add cmpsb push mov cmp fsincos pop das fs arpl inc nop sub lahf push ret cmpsl sbb jbe pop xchg mov cmpsb rolb das mulb sbb into popf push neg push rorl aaa mov sahf adc jp pop add mov call jle aad cmp or les xor cmpsb push sub mov insl rol lods jo lods ret pop ret adc and xchg jo sub jo test jmp mov xchg sti jmp cs push cmp mov xchg push xchg add adc test xor add push fldl mov inc mov mov mov or loope arpl out adc push cmp xor je sub xlat jb mov adc es and xchg xor stos push arpl int repnz rolb pushf sbb (bad) mov pop pusha (bad) cwtl and mov rclb pop mov nop adc sbb dec inc popf mov lea outsb add cmpsb mov pop imul push aas mov cmpsb addr16 sbb adc jo int mov aas pop lea mov push pop in ss jnp sbb mov cmp dec lea mov mov test adc jo shlb pop out xor sar or xor lods int dec mov std cmpl xchg xchg add fwait leave subb fmul push adc clc mov in ret or jecxz mov jmp sub scas xor insb xorb mov jne js xor jp mov shll fwait sbb es cmpsl out inc push add imul in ficoml or cmp adc adcl mov out dec pop pushf ret repz sbb add push iret push es scas rcrl fidivl sbb dec mov sarl popa pop xlat or ss push and cmp add jle xchg scas (bad) dec push xchg rcrl lods push mov and pushf push sar insb das shlb add xchg inc notl push add insb or xchg or add jecxz ja inc sbb jecxz fdivrs dec cmp sbb jb adc or cwtl mov jecxz lea push dec or mov mov mov sbb mov fcoms mov dec fidivrl inc test (bad) adc es popa sub pop ds into cmp and (bad) cltd sub push pop fistpll xor jle jmp ret xchg mov lds enter imul jge add (bad) cs stc or or dec jae (bad) fcoms (bad) out cs rcl or mov lea add xchg mov mov into sbbl aad insl test cmp cli dec jbe mov test jle fs and mov add push xchg shrl xlat jp push aam jo lock xchg insb xchg adc sbb (bad) push inc sub xchg aaa imul add jecxz cmp (bad) push jne add sub mov int clc push fcomps add adc sbb icebp movsb fimul jno addr16 jmp xchg pop jns mov and icebp ret nop cmpsl stc dec iret insl mov imul imul out jge cmc xchg xor push bnd fs adc rcrb daa call add in pop push push push cmp inc insl jle cmp jge jecxz lea rclb dec pop cmp lret daa jo popa and (bad) dec add sbb xchg dec call pop adc stos insb fistpll nop mov (bad) jb xor jle jb aaa inc xor or scas add or jns mov mov mov mov adc add sbb cld aam pop imul mov xchg daa test call jp repnz xor push push lds jg dec outsb sbb loope push add popf fcmove imul lock daa call push frstor sub jb mov xchg push mov or mov jmp (bad) loopne fs fldt or fwait mov jmp outsl in les add pop adc hlt ljmp and or mov gs scas sub ss mov aad lods out xchg mov enter (bad) lods shr scas inc cmp sbb jns out and (bad) into les mov ds lock (bad) cld mov ds or shr cltd jl push gs mov xchg loopne or add inc push sbb ficompl inc mov loope mov sbb out jmp push les cmp jmp mov jo push sti and xchg in cmp call cmp mov sbb sbb mov pop data16 iret sar test xchg cmp jg scas fwait lea mov int3 leave xor loop cmc push xchg pop or rcr or sahf cmp dec lods sub hlt mov jle in test pop inc and aaa inc pop jge push mov loope jl push dec jne adc pusha xor dec mov push and jb movsb mov scas xchg in mov cmp pop jp mov test ret out leave push (bad) sahf in jmp mov add ds shrl mov cmp mov mov dec cmp loopne inc insl leave and repnz in pop add adcl and popf or scas popa xchg mov test data16 clc pop pop add jb lret jmp les mov sub push inc test into sbb (bad) je repz sarl jge jp mov sarl dec icebp mov mov popf cmp aas jmp push imul adc insl inc xchg aad inc push dec or (bad) lds in adc jg sbb mov xor lods cmp push fnsave mov test aas (bad) lock (bad) (bad) bound mov jmp lock (bad) pop mov in push or movsb mov fwait adc lcall aad (bad) movsb inc ret and outsb int3 dec xchg mov daa shrb or lds cmp lret aam dec (bad) popf mov icebp add sub sbb mov cmp jnp icebp adc aaa xor push sbb jecxz cli xchg nop fnstsw and jnp xchg pop rolb mov dec mov jmp sub loope ds xor lcall (bad) int enter sbb ss outsb arpl xor lods push mov loopne mov pop sub sarb (bad) and iret (bad) xchg mov testb sub xchg das cmp inc mov jg lret cld xchg pop cmpsb add call dec mov in repz mov mov and jo movsb mov cmpsb adc loopne pop mov sti pop ficom lea dec adc into sub hlt inc jle loopw xchg xchg push scas lods push (bad) hlt fcoml mov pop mov popf sahf mov iret mov cmp add add sarb lret repz leave outsl mov sub pop add pop xor repnz lods lahf leave sbb cmp test loope rorl in gs orl popa test ljmp adc mov and sub popf cmp das mov xor ret ret dec call repz jmp jmp xchg push rol lds add add aas fidiv push rclb and xchg add and lret stos xchg out loop out push in je ja add loopne adc fcompl xchg std ucomiss mov mov movsb mov and rol incb je fldl xor pusha push clc fwait mov mov pushf pop mov cltd dec mov mov cmpsb push xor mov pop add add add jg data16 jl jp call leave movsl dec addr16 cmp sbb mov popa loopne shr pop xor cmp int mov pop test jnp xor es push fdivrs or sbb (bad) bsf sarl in sub pop cwtl inc aam sbb mov (bad) mov aad mov push out add loopne rcr add jne and les ja insl inc rcll ljmp outsl mov push sbbl decb or test popf (bad) cmp je mov or fxam xchg jl sbb add mov mov cmp mov imul lea test pop imull jmp adc adc xchg cwtl sti jge rorb add add test xchg dec mov nop aas mov insb in pop leave adc out mov inc daa and mov lea jno xchg push aam test xor sti jl jmp jp popf adc dec cmp mov mov cmpsl (bad) mov jns faddl clc int or push pushf clc mov cs mov fcom test js add icebp mov inc cmp mov push jmp adc add jnp cmp add push repz cld push adc mov xchg cli movsl mov out add int cmp jp icebp ljmp or xor and in int dec lret fdivs cmp push in and cltd pop ds addr16 imul pushf dec orb jbe cmp mov lds add xor push or inc jbe jo lods jg xchg imul divb clc bound outsb inc add mov or fsubl fsubrl mov popa xchg rcl subb sub pop shr mov jmp mov aaa (bad) jmp (bad) push dec movsl pop mov jbe aam adc add shrb test sbb push movsb lret mov mov inc out and flds into test mov add repz ficomp pop insb out push pushl js imul cmp pop adc dec mov xchg out test pop dec loop fbstp cld mov inc push lcall sub push ds cmpsb dec data16 mov sbb pop and jae xchg xchg add jp outsl insb push popf ds in pop pop inc fisttpll negb cmp mov cmc cmp in add add addb mulb (bad) test fmull mov gs adc mov scas pop mov insb mov ret out pop or add imul loopw cmpsb xor fwait push push popa mov or or aad cmp outsl jne sarl mov add mov adc fsub xor cmpsb dec xor (bad) pop dec in pop sub je outsl std es cmc xchg adcl inc test addr16 fdivl push or mov decl hlt pop dec dec jbe or pushf cmp mov sbb adc aaa push adc icebp popa (bad) daa add pop pop frstor cltd xor add add xorb ja inc out xor adcb add and pop outsl ja add adc test add mov out pop add add add sbb sbb popl bnd test lahf cltd jne shrl movsb jbe arpl mov xchg push jp fildll or aaa fs int pop pop test lret daa (bad) (bad) repz add add lcall dec jmp xor cmp repnz loop int3 test negl sub lods sar call call ljmp loope lahf sub mov cmpsl push or addr16 movhps lret pop lret jecxz test pop rolb push (bad) sub fsubrs adc dec ljmp push cwtl addr16 cs mov mov mov insb pop mov aad xchg std ret jnp rcll std add inc mov xor mov les roll gs mov add fisub pop mov or pop cmp jl mov mov das iret arpl loop mov (bad) pop cwtl popf xchg jl (bad) and leave push std sbb cmpsb push inc jge das cwtl cmp repnz pop sbb mov negb lret fdivr sbb inc jmp pop enter fs lds mov popa push inc pop hlt jbe cs mov jne (bad) ljmp cmp xor dec inc xchg xchg jl xorb (bad) dec push push movnti inc and adc add gs cmp sbb mov mov mov add add jbe rcrb mov (bad) lock icebp jno mov mov ret mov and or mov call int jg push mov xchg in cld (bad) xor xlat les mov (bad) aad sbb lods das jmp imul pop or cmovle jl xor sub pop jecxz out xchg jle aad dec adc clc and lcall xchg dec hlt call or xchg mov outsl push cmp pusha add mov lods inc test push pushf jb jno cmp test popl cmp jecxz xchg test sti jo xlat xor cmpsl aas push rol test jno imul mov mov clc rclb adc pop out sub (bad) sbb add add bound jns out cmp arpl mov lret fdivrs repz xor jnp movsl test adc fwait xlat and mov (bad) cli andb xchg das movsb mov fs mov xchg pop dec or sub jl inc lds loop sbb frstor movsl dec push int3 add mov inc pop add out adc mov add or bound push les adc int3 adc push jae icebp andl jle adc adc cwtl sahf scas lds cmp and lods clc mov mov (bad) lods in movsl insl pushf xchg mov in inc hlt fisub in mov jmp hlt dec add or out arpl adc icebp xchg (bad) in jbe add add ljmp fadds and xor pop shrd (bad) jge mov inc outsl xchg call pop (bad) lret mov pushl cmp outsl ffreep nop dec mov adc jo and aaa hlt pusha (bad) hlt mov sub xor pop clc pop lock lret sbb add pop add xchg roll xor notb test bswap dec (bad) mov and jl jbe mov add sti (bad) mov sub cmpsl loope jno cmp xchg sub lahf rcrl push mov xchg ret lcall push mov popa lcall out fwait cmp jge sbb cmp sub push mov jnp and adc and mov icebp push addr16 pop fcomps inc test mov icebp mov sti mov cs pop cmpsl lcall add daa aam cli fimull and pop sbb mov movd mov scas push sub pushf push xchg ret pop push or pushf in push out xchg sub and in leave lret js inc add jecxz xchg inc pop push lods inc ret push inc jp mov sbbb inc imul lods fld push mov out into stc lahf pop lock and jne add jecxz mov pop popl call push mov rorb cs (bad) lock inc movsb mov sbb dec sub (bad) hlt xchg daa mov imul pop pop or iret jns ss add jmp mov xor adc imul icebp cmp add pushf xchg sbb adc mov inc inc dec inc push fistp add add xchg rorl sbb sbb inc dec push cmpsb jl push je mov sub inc jge sbb jl lret mov xlat out mov mov rorl mov enter cmp mov cmp fs andl xor lods mov lods (bad) addl imul rcll loope ret push lahf fldt ret jno jg outsb leave push aam (bad) xor lea dec mov jns mov int push dec mov inc bound mov loop loopne invd test adc dec xchg in xor mov mov sbbl loope xlat and push xchg addr16 cmpsl std leave fstpt xor cld sub pusha clc int ja and pop notb scas cmpb xor and add int3 sub cld push cmp mov sbb push xor fldt les pusha scas inc lret cmp fdivrs (bad) in and (bad) lds mov jnp popf iret repz mov xor adc pop bound sub ss jecxz mov mov mov sub mov iret pop dec fwait sbb mov adc test jle arpl adc fdivp xorl add and xchg mov jae mov sbb or mov sub jns mov mov (bad) stos and xor test ficompl rorl or arpl out push popa in out mov adcl and call push loope sbb outsl add add in or xrelease push adc add jl,pt inc cwtl jecxz fstl aas and mov mov scas dec cmp xor push nop and mov inc dec mov scas das aas (bad) dec jmp cmp xor adc outsb sbb xor movb pop cmpsl sub push mov mov pop andl jns push sbb mov add xchg loopne hlt sahf mov or lret dec pop out adc mov dec je mov xchg out xlat enter xchg mov cmp in jg int sti or fwait cltd push or out adc mov push add cmc and clc cmp aaa mov mov es mov jp xchg pop inc xor lea pop jo jne xchg sarl pop jbe (bad) add inc add push sbbl and mov mov imul out jae sbb jle dec dec jle incb pop hlt add xchg add sub mov repnz inc js js movl mov lods ljmp sub jp lea adc push aam cli (bad) push adc fs adc dec inc loopne outsl ja push mov lods add xor into inc shrb ret test movsb pop inc and or ljmp sbb cs inc xor pop scas js pop cmp or xlat or push and and sub xchg cmp stos mov mov jle mov mov (bad) mov mov mov ret mov clc (bad) jb mov add xor loop fcmovb pop pop (bad) push add mov pop or xor (bad) aas (bad) out aas cmc fisubl pop loop pop icebp dec sub das movsb xor aam stos inc adc mov sbb mov stos mov (bad) imul fiadd mov (bad) cmpsl rclb mov adc cmp add pop or mov jmp faddl push cmp (bad) mov fidivr jno loop mov insl sbb out xor std mov mov test lods push fnstcw (bad) je movsb xchg inc popa cld add xchg into loope movsl dec cmp jae mov pop push sahf lahf fcmove xor popl mov clc sub repz and out mov mov in jb sbb xorl icebp int3 push and mov mov add imull out push or pop jns mov mov fdivrl test push insb mov pusha hlt jle lea jo pusha jge rcrb jg cmp ds mov mov dec (bad) jg jns (bad) cmc or enter icebp push push and jno ret push push adc test add stc inc mov cmp clc ret add add mov mov mov popa sahf mov out jo fwait sbb push int3 xor les mov data16 orl dec out fistpll pop js stos or cmp into pop add xchg mov xor inc movsl inc out repz cmp mov xor repz addl mov pop adc push jge mov add mov sbb xor loopne inc sub xchg cmp add add cmpsb inc push mov dec sbb pop sub neg lea inc mov xchg jg addr16 fild jae das (bad) leave add movsl and xor mov mov scas mov xchg lahf in dec push jae xor stos mov cmc and add add cmp xchg in mov loopne mov addb push xor addl imul arpl or fisttpll push pop lds dec xchg hlt push mov sub mov out nop inc stos test push push inc (bad) mov xchg push inc sbb add cwtl stc lea push dec pop (bad) testl test add cmpsb adcb sub add subl gs mov adc inc loopew adc test inc cmp (bad) pop pop scas loopne cmp push pop in movl sub jg cwtl out insb imul cmp adc int inc mov cmpl cmp add add stos mov out cmp aas jne xor leave push xor adc in mov sub xor repnz jo mov xchg ret or add or sub ss stc pop shlb mov dec fs mov call xor test pop pop dec sbb jle imul cmpsb decl bound cmc ja pop jp or add add arpl orl leave push (bad) push aam rorb fidiv cmpsb sub in push push jno sti popa mov adc dec (bad) push jle mov je test das (bad) (bad) push xlat xlat mov cld mov ret or mov pop inc mov jnp cmc add push mov inc add push stos imul cmp push mov loopne std or push lahf add ret ljmp imul mov jmp lds sarb loopne inc subl faddp fistpll or mov mov mov jg add iret inc lods mov and add sub jl loopne add jo js xchg inc pop sbb lock jecxz mov je popa je xor pusha cs jle (bad) les or xor ja add or jne mov insb lods push aas mov push iret int or lods mov and mov mov mov dec rcl dec xor imul rorl mov (bad) aas and std fstps repz inc dec iret mov stos or popf je push xchg add adc shr push xlat in xor xor add stos push imul sub sbb jns (bad) mov rclb mov mov cltd add cmp push pushf inc xchg add add push notl flds or sbbb jns cld jmp mov fstpl cmp mov adc push and pop stos cwtl aaa es icebp mov (bad) sarl inc jecxz mov mov divl rcrb sbb mov fstpt ret push and or xchg mov lds jne mov xchg mov fnstsw inc data16 lods push pushf inc or xchg adc jnp cli cld cmp adc dec andl arpl push push jmp mov push dec jge add pop push ja fwait xor mov movsl outsl ret mov add add lea fisttp (bad) pushf push mov push leave pop jnp sub (bad) or and xlat pop sahf xor pop rorb movsl cmp fisttp (bad) hlt push jae and sub icebp adc sbb (bad) push fdivr andb aam movsl fucomp (bad) mov xor stc xor test pop add stos xlat jae xchg pop push aaa or in test or aam test pop outsb jge fsts dec loop push dec xor loopne adc cmpsb pop std out sub dec cs ja dec insb js or test fmulp sbb gs inc cmp pushf cmp sbb stc jb inc push add out pusha and xchg adc adc or dec push lahf xor inc aad push sub test ja sbb xor fwait adc inc mov roll das xchg add sub cmc cmp mov cld xchg das ficom rcrb andb pop dec or imul dec fmulp loopne pusha xchg mov mov scas mov imul test mov cltd or jne sub sbb add sbb (bad) mov mov or movsl mov inc dec icebp pop ret cld outsl xchg out icebp xchg xchg pop jl outsl in and lahf jb (bad) lods clc or push xchg or dec mov in in jle inc xor and iret jae lods pop jge pop or insl jmp int3 jecxz (bad) xor cmp xchg push mov cmp rcrb inc xchg loopne mov aas add jl sbb insl add mov stc push (bad) xchg fmuls jle icebp dec sub (bad) jae pop push xor call xor cld in mov inc sti or xor es push arpl cwtl imul jnp xchg xchg cmp out add sar out push fstpt loop add xchg test out (bad) aas inc jb lret add ror push scas stc sahf add es jge clc pop cmp mov sbb sub cmpsl icebp shl and cmpsb cmp and fadd add xchg dec xchg cs and push dec stos mov inc xchg stos xor sub aaa cmp xor adc add dec in in addr16 ljmp repnz xchg lods loop aaa or pop jmp cmpsl ds repz mov sbb push insl sub and jp jo pop bound pop mov mov inc out mov data16 mov lods push out push in inc out push pop stos hlt pop pop lret mov sub xrelease sbb sub gs jge out loopne repnz stos mov lds std push data16 inc mul call or jecxz loop clc push sbb inc aaa push mov movl add sbb test lds and xlat mov pop outsb aam xchg aaa or and popaw push add fstp into cltd sub js pop mov scas ss inc push test aad lahf in sets cwtl repnz sub xor out push in rcr add and mov cmp jle adc or cs outsl mov mov (bad) jmp repnz add add add fstpl aas shll adc push fidiv xor leave inc scas ljmp call lds xor sub jg mov leave pop in (bad) insl adc push cmp mov xlat sbb cli xor add xchg jl mov daa pusha scas jbe out movsb or bound insb push in rcrl inc sub (bad) sub xor jp outsl int mov jecxz push hlt add mov sbb imul mov inc xor jo insb ljmp sub in repnz cwtl rclb fxch jecxz icebp pusha aas mov adc or or in pop xor pop mov sub sahf je call sahf imul or mov lds xchg jne lds or out adc add stc jbe and sbb shr das es enter popa or push dec rcrl pushf stos sub stos jns mov cmp pop pop and inc sti stos and adc push (bad) daa sbb lcall mov je push xlat stc fist or outsl lahf (bad) (bad) outsb mov pmaxub sahf pop test ja cltd pop xchg repz ljmp sub add mov shlb leave (bad) iret wrmsr mov adc lret mov inc movsl push lock shlb lret dec sarb cwtl cltd or xor cmpl and in mov jns sbb sahf flds test jae jb jae xchg incb bound mov inc into and cs mov dec ror sub sbb mov rorl add fs jge sahf mov xor sbb mov jns mov and (bad) and shrb sub pop call sub xor mov xlat cmpsl pop mov dec mov aam pop add inc in loopne out sbb jge jbe outsb and test enter and add mov push dec adc fwait pop inc add add add fidivr mov lea rolb das adc fs mov orb insl xor sbb fst mov sbb dec inc movsl push or pop push data16 (bad) icebp das fld mov aaa insb mov mov (bad) aas adcl (bad) mov mov es (bad) sbb addr16 sbbb cmp lock roll add out (bad) mov or adc push ljmp and stos mov sbb hlt mov rorl dec in in ja cmp jle push jae leave xor xchg cmpsl adc out mov inc cltd push push mov scas leave mov xchg pop pop movsl push outsb in fldt mov mov jno dec scas dec nop std bound pop xchg pop add dec in push lock jno add inc sarl cwtl sub pop dec jno hlt adc push dec movsb loop xchg rcll mov jmp push shr in add cmp movsb pop jne add cmp (bad) shlb lahf mov mov pop mov mov in pushf mov mov mov mov dec mov leave popf cmc xor daa jecxz (bad) cltd push adcl fisttpl add add mov imul out stc lock dec stc testl fdivrs test xor push nop iret sub mov cli jne mov test lret enter add push dec sbb lret in jge int3 cmp pop or lret adc push (bad) in stos test insl cwtl lock push (bad) jbe (bad) or sahf sub or or sbb call add add repz shll out sub stc adc mov faddl popa xor mov into data16 mov jecxz dec inc lcall pop negb bound ds shrb add dec out fidivr subl outsb sub mov pop call lods sub push inc mov sub and adc add xchg adc dec pop jbe subl (bad) mov inc mov stos jmp je xchg std lds adc rcrl iret inc leave adc inc enter pop aaa inc sbb fisttp cmpsl lgs xor push mov xchg cmp xchg call jae das movsb lret imul jno and push pop aas lods add int3 sub bound add add add jnp scas movsb add mov (bad) iret or repz das mov out jg sbb mov adc xor scas sti fcmovu sbb mov and dec push fnstenv sub aas xorl fcomi inc jp cmp clc add (bad) sub sti lods std sub dec movsl xchg push xchg jno or inc loopne xchg add sbb and or (bad) lea adc in and in and xor inc sbb ret or add xor daa divb cmp xor fsubp mov dec inc hlt mov test adc fadds clc push inc inc cmp jbe (bad) std dec xor pop dec cmpsb mov movsl mov leave rclb and sbb psubsb test (bad) xor push bound inc (bad) std sub sbb ss dec or stos cmp aad rclb sahf and pop jecxz or loope mov jle sbb loopne fsubr mov (bad) fcom cld arpl or inc jmp cmpsb stc jnp test mov mov test js ljmp pushf mov and cmp test jb cmpsb stc fnstenv pop add inc adc mov test cwtl clc sub ss jecxz sub pop xor mov jns push mov arpl xor fisttpll fistp xchg inc jns mov frstor shlb in insb mov jp xlat sbb lock pop xchg loop fisubrl into xchg mov push cmpsl xchg cmp mov pop test add mov add sbb ss mov xchg (bad) fdivrl mov push add ds mov pop jae sub jle lahf mov xchg dec pop lret ret jae mov into cmp cmpl int3 fstps mov outsb mov movsl adc adc mov jae clc sahf or mov jb cmpsl dec push xchg lods mov fwait in aas out and add add adc popa and pop pop cmc pop cmp sbb mov insb xchg mov repz das stos pusha or push (bad) adc imul mov nop ror lock cmp dec xor movsb jbe decl mov cmp lahf mov sub pop mov test jb xchg or xchg pop roll jns fdiv mov xchg dec add add cmpb bound (bad) sti add andl push sub iret in dec pop lahf jecxz fsub dec pop loopne ss repz sti fcomps ret out mov cld push scas nop test mov jl daa ja or pop jb xchg jl cmp xchg in push mov cmp jp aas loop lock adc jo cs imul lea pop pop xchg xor add push adc fisttpll xor xor add mov sbb loop outsb fisubr test mov and cli scas rcrl adc jmp popf int in int3 pop adc adc xchg icebp imul shrl jae das in mov xchg push mov mov test push lcall jne lods xchg and push xchg faddl add lea add add add pop lods mov out and inc sub mov cmp lret dec daa movl mov mov cmp jno mov popa inc inc aam idivb movsl jb sbb or jb int3 imul loopne lods in push or inc aas into lcall popl and and xor fs cwtl push push xlat xchg cmp in popa mov mov out bound jno ljmp or mov push hlt rcrb fimul ljmp xchg mov iret lret sbb sub push outsb frstor insb sbb push or ret adc ds xor mov xchg dec hlt dec cmp jae dec inc icebp out push adc push nop and xor mov call test cs push inc cmc movsb dec lcall adc push movsb nop fldl add cmpsl push fdivrs push add data16 jmp shr out push clc jl js cmc mov fs mov push push jg hlt ficom mov xchg pop xchg sub lcall pop push mov ds sahf and notl and cmp xchg mov add nop rolb shll sbb sbb jmp mov add push xor fcomps imul pop enter movsb aam aad mov lods mov into ds fnsave lods enter pop adc adc push inc mov jge sbb lret dec add clc sbb cmp dec mov ljmp aaa or or dec movsb stos mov cwtl popf test faddp dec inc mov das mov inc or (bad) icebp or add push notl repz pusha mov addr16 adc idivb lods test cmp sub into or lea inc and mov mov addr16 mov repnz push mov or sbb popf addr16 sbbb adc gs cmp mov pop dec cmp sub xlat or and jno xorl jmp je je mov add (bad) lock lods lret xor lret pop faddp jo cmp aas jp test loope out lret negl js sahf clc push loopne pop mov scas cltd xchg and cld xchg in stos test movsb mov jle inc push pop pop or es or mov rcrl sbb gs jl ljmp xchg andl nop movsl sahf movsb out aaa (bad) sbb push jmp lods dec sbb cs sbbl aad xchg test xchg enter andb pop imul iret adc shrl jo xchg add jb mov rcrb aaa movsb loope mov mov fisubl lods push mov or loope mov cmp sub int rcrl xor test les mov popf add add add push ret add dec inc jno (bad) cs or cmp pop jae mov notl add push insl xchg movsl adc test sahf imul push adc pop dec push dec int3 push mov pop dec inc xor dec aam arpl sub xchg mov push repnz mov cmp lcall or dec pop mov or aam movsb js cmp add add xlat ficomp lods call xor out push imul pop aam andl xchg jp pop cs cmp sub cmpsb add jae push dec loop xor cmp cwtl push (bad) aad add fwait sub inc negb push mov fisub mov data16 mov adc in sbb test incb out out mov shlb ret inc or xchg rolb add add push jo ds jl pushf test xchg lcall adc dec pop mov push jg,pt add mov into fiadd mov jmp inc loop pop imul add cld mov pop daa jbe jns xor fs addb pop xor add cmp ret push je sarb call adc mull fabs (bad) popa and mov scas (bad) add pop jo xchg in cmp (bad) jecxz and dec push inc ret jnp cmp xchg jnp push adc mov ljmp cld cmp incb mov push and das add test adc sbb jo mov sub add xor mov ret (bad) icebp int3 (bad) fsubrs imul ret ljmp add btc push clc inc daa sbb outsl pop xor mov jge das add cwtl lods pop stos pop push sub cs cld repnz xrelease outsb lods mov pop arpl icebp stos push push lods mov int3 in dec sbb xchg stc dec push (bad) dec and and xor adc and xor mov cmpsl and add stc sub inc sub mov xchg lods out cmpsb cld jo shrb inc into (bad) inc js loope incl pop loopne mov xor int3 hlt cmpsb iret rcrl jb rcrb insl fidivrl xchg leave dec out into xor arpl push inc mov mov mov add shll mov xlat (bad) lret imul push loope icebp subb call insl mov add add cwtl loopne mov xchg js push cmp xchg push xor mov loop pop ss arpl push (bad) outsl xchg icebp frstor imul cmpsb xchg push cmp test stos xor icebp (bad) lods cmp mov cltd addl testb mov pop push pop push gs mov ret mov rcll insb bound sbb pop jp mov add and add add bound fadd xor dec xchg mov and jnp enter test ja adc xchg sub xor leave mov add xchg inc xchg lock pop (bad) daa into sbb nop dec into pminub mov pop icebp sarl andb ljmp jecxz jo loopne xchg div xor (bad) insb cs and dec stos ja push int call mov add jmp (bad) mov xor rcrl dec icebp jg mov loope lods mov push sub jg nop in jmp push int3 cli mov sbb stc pop stc jmp mov or xchg sahf test ljmp aam xor ds scas es mov mov cli outsl xor jno xlat pop pop mov sub pop jbe adc data16 fistpll pop (bad) scas push sbb lods mov jno add mov mov inc lret add js push fidiv pop arpl (bad) or out jo fadds cmpsl xchg xchg jecxz (bad) jo mov aam aaa je imul int jbe or lods sbb push fsubrl push add in sub pop cld fistl xchg inc xor enter lock popa data16 aam repnz push iret scas jmp mov cltd and add jl data16 cmp mov sbb xchg shrl jle shrb fs jl xchg pusha rorb cltd ret mov test pop xchg cli push fmull mov sub (bad) popf std pop (bad) leave inc cmp inc int aaa fidivrl aam sbb push dec stc or sub or aam mov mov and push imul call lahf es cmp adc or int3 imul pop mov mov sub cltd addl lods xor inc xor ss mov stos mov jne ds outsl sub movsl das jns mov push mov roll cs jns loope dec xor add add and mov dec jmp jl arpl aad pop pop xchg mov push cmp jp pop js sub int or and sbb ret or xchg jg aad punpckhwd pop cltd sub std leave shrb dec in mov mov sub iret das push inc popf (bad) mov lcall cs (bad) test sti pop mov cwtl push dec and iret inc mov add add jb fisubl xor mov mov xchg int3 (bad) and mov (bad) movsb mov xor xchg sub push fld (bad) sbb mov pop loope push pop rolb clc sub (bad) hlt repnz lret push sub in add pop (bad) or icebp lret push fisubr aas leave jns int3 mov xor dec mov dec iret ret (bad) leave lds std imul add addr16 adc mov xor aad popf pusha mov or and sub outsl ret push or jbe (bad) dec pop sbbl leave in fisttpll or mov cld fidivl mov shlb (bad) jae aas xadd xchg dec test inc lret jb lcall mov mov add adc ja lret cmp out (bad) mov dec dec mov sbb fstl ret and cmp outsb shll lret pop jnp data16 sahf aam xor cmc lea sub incl xchg xor cmp sbbl and cwtl out sub pop ret fsubrl mull clc adc aaa mov lahf mov loopne gs add add fs sub xchg test and cmp out sub cwtl setb jno call sub pop sub dec adc aas sbb inc loop jmpw or popa push and mov mov cmp add fcmovne out jp push mov fcmovnb and (bad) dec aaa fsub mov sub mov inc add sub negl add mov in movsb and imul outsb jns xchg inc sbb xlat lcall and not inc jo lods (bad) or xor add push inc or imul jge adc sbb inc rcl jp sbb pushaw xchg (bad) xor out fucom dec sbb jnp mov ret add add arpl adc lret ja or aaa sbb hlt lret inc ljmp push sub mov popf sbb and mov push jne mov xchg jge mov lret inc cmp mov ror rorb and fisubr pop imulb repz repz and sub ljmp out add or inc loope frndint dec or in lock mov xor xchg fldt jae push sub dec push aad inc (bad) mov iret repnz pop and add push es ret mov mov pop jb dec pop pusha scas xor jmp test ror sub sub xor inc shrl popf gs lcall pop mov or (bad) (bad) and add cmpl mov add lcall push adc cwtl cmpsl dec mov xchg or aaa jns mov (bad) daa jns pop mov mov cmpsb lret cmp mov call push sub fisttpll pop popf (bad) mov xchg int3 inc fldl je inc divb inc mov rolb call push and stos jno or push xchg jg cmp add add inc outsl fwait mov inc rcll cmp inc rclb sahf ja push sub mov mov inc xchg les mov jnp sahf pusha xchg imul bound data16 into cltd fmull jbe mov pop push jae shlb cs push xor scas sti mov loop pop fmull leave jo stos pop mov (bad) mov nop jb pushf lods test pop jmp mov xchg lret fldl xor mov pop loope adc push scas and enter cmp pusha jg imull sbb fwait or (bad) int rcl cwtl push sbbb dec sub int3 pop es mov cltd aas xor loop pop jg fs jecxz movsl pop xchg jg hlt ret loop ficom outsl (bad) jns in jg jno mov add inc (bad) sub cltd xchg or sub aas sub dec cld mov and inc scas jae nop push push adc adc dec (bad) sbb imul imul adc pop ret or (bad) mov loopne call pop rcl in pop inc cld in pop mov inc mov sahf rcrb call dec pop adcl sti sbb mov xor xchg in loop adc add sarl cmp cwtl push repz cwtl ret lret in pusha or imul sub cmp addr16 sub mov add jb sahf mov ret nop fcoml imul ja xor clc push mov jne gs leave int3 fdivs push ficoml push into outsl adc cmp xchg repz aas pop mov push loope inc jle daa testb push dec xchg (bad) dec and lahf (bad) sbb xchg js iret in add pop addr16 xchg (bad) rcrb cmp daa (bad) hlt push mov movsl mov mov push xchg and and stos and out pop loopne xchg xor push pop movsb jl aam pusha nop adc imul shl call xchg dec sbb dec or mov sti iret pushf push sub lcall popf pop push add mov jecxz imul das inc loope lcall xchg cmpsb jp int3 rcr pop stc ret pop xor les mov mov jmp gs mov popa pop inc test add and jle dec ret xlat adc bound add sub cmc and and (bad) out js cli dec mov mov sbb sbb push test and icebp inc cwtl xchg mov adc pop sbb push or mov mov dec (bad) dec ret adc xchg add jnp out out addr16 mov inc enter add (bad) aaa mov xchg jo mov inc data16 roll aaa xchg sub push (bad) call int3 jb push out dec dec (bad) and dec repz rclb lret add pop xor push mov pop leave mov xchg dec js cwtl punpckhwd jne ret mov dec jne frstor adc mov xor ja lret lcall into mov inc cltd (bad) sub jns jae add out out rorl mov stos clc jbe jp adc jno lea ds adc and loop (bad) loopne jecxz fistp js daa cs fcmovu les push add out or sbbb shrl mov icebp jp sahf sarl jecxz xchg into movsl jnp sub xor add push adc mov adc das (bad) je in xchg out fs cmp aad push outsb ja cmpsl push lods jb dec ja leave adc ret (bad) fstps in xchg push mov stc xor dec fistp dec pop mov movsb pop orl xor add fnstcw pop jmp xor rdtsc xorl lahf mov mov (bad) jle adc (bad) in (bad) cltd or stos test int3 lcall jmp in add adc nop iret mov push (bad) (bad) in add jo shrl mov out jbe faddl dec mov ret cs adc sub dec repz popl pop lods cmpsb pop aaa (bad) insl test xor fdivrp pop push add add (bad) lods (bad) cmp movsb jb push frstor movmskps sbb imul pop mov test push jl aaa sbb int mov pop xor sub lret pushf pop xchg mov jno mov mov (bad) popf push fwait push push in mov lods pop push in or nop addr16 jae adc sar jge jne pusha (bad) pop xlat push add add mov dec push das push xor sub pop aas cld loop mov mov jmp mov jnp add std cmp fwait mov adc fcoml xchg popa sbb (bad) sbb mov loope dec das jmp rol push ss xor ljmp push lret mov lret out bound and push xor in imul sbb add icebp stos sub pop subl push ljmp int3 jle divb stc xchg cmp movsl cmp mov dec fs xchg (bad) stc pop ljmp mov sbb sbb pop cli add jae stos stc push pusha lahf sub test lods pop ret test xchg mov test jne pop inc xor in xchg mov loop cmp dec into adc adc jge mov add aad out stos mov imul fdivl in repz or icebp fiadd (bad) pop push setnp scas loope movsl dec cmp mov cwtl mov mov adc mov push sbb adc pop cld sbb into mov mull fcompl jae rcrl testb add cmp ja mov in mov add add fs test js xor sbb lods lret test xchg push and cmp cmp add jnp lcall cli inc pop jle dec mull sbb mov in mov adc and sbb and clc or push xchg fistp fs (bad) icebp dec jmp mov in mov add add mov stc jl dec pop int cmp mov mov sbb (bad) xor pop adc imul mov inc out push loop fdivl sahf pop sub int or pop popf test cmp negb mov inc cli insl xor push stc mov push mov add gs push sub mov aad pop dec aaa rsm ljmp push es and or stos push xchg arpl rorb pop mov int3 sbb int dec lods xchg xor ficoml repnz negb addr16 aaa jecxz cwtl adc push (bad) out jne dec cwtl xor jnp inc outsl cltd inc rcrl leave scas pop into mov mov sub sbb rclb lret ret mov xor pop out test xorl jecxz add ffree or ficompl xchg in subl pop mov cmp adc pop or stos dec xchg icebp cmp xchg dec cmp add in sub into test incl pop add pop sbb xchg dec mov or mov mov fisubr jl mov rcl rclb pop xchg rcr pop dec ficoml adcb jl sub repnz out push outsb sub add imul sbb (bad) sub jno add jno gs xor mov lret xor sub lods in rorl push jp push jle iret bound jbe add movb not sub mov mov xchg add mov push fcoml ja into jo mov jnp adc stos int3 push sub sbb cmpsb dec push sub popa sub add add repz aad push lret popa aaa dec add cmp pop dec outsb pop (bad) mov inc add jmp mov add test sahf cmc xor mov ret fsubrl ja scas mov (bad) mov add sbb mov scas lret decb incl scas mov adc and and rol push test pop cmp scas adc fadds out ljmp and xor fiaddl push ss xor pop push mov repz into movsl inc movsl inc mov rcll mov sbb jno das cmc and fwait sub mov pop cmpsb lds sub cmp scas sbb icebp fcmovb lds add ficoml aam and pop dec jl lods xchg ffreep test mov pop add cmc inc mov pop jae sub xchg add mov rcl daa mov cmpsl mov ret (bad) out add jg stc mov fs (bad) bswap push jb jb adc pusha sbbb les sub scas adc aad add add test push test cmp push dec insb repz mov addr16 ror pushf jno jecxz push mov and add add clc daa pop xor push jae daa mov mov adc out scas push inc inc in cmp jmp xchg nop push xchg xchg leave mov pop jno fisub pop leave fdivrp cld lock inc or xlat adc sbb arpl mov in adc and movsb sub mov aaa adc adc les mov and mov xor js ror pop sbb and sbb mov iret mov pop add sahf dec xor sbb mov pushf sbbl sbb hlt inc dec xchg lods ror adc leave cmc sub fidivrl jmp and (bad) mov fisubrl lret and dec mov loop cmp mov mov push flds mov mov mov enter jo lods fsubrs fcomps mov addl add loop daa cltd or jns xor ret lods add dec gs mov out and lock jb mov jne adc leave inc push mov inc sti cli imul lret xchg or ljmp add adc cmp push mov jns jne mov sub ret mov pop xor aaa push mov adc fimull sbb out xor push jne addr16 or xor add add mov mov insb shlb je jle mov scas int3 dec mov (bad) xchg imul xor mov test add fwait push cs add cmpsb adc sub jae xchg fsubr (bad) stos fucomi sub cmpsl push scas fwait into mov push jno xor ja pop mov xchg pop mov les xor or mov add imul add cmpsl ja mov and push and mov pop hlt ljmp push xor popa jns xlat inc xchg aas or aaa shlb mov xor enter push push bound inc push cmp (bad) negb mov add mov and mov rorl scas scas push pusha gs jbe inc sbb pushf push lods insl mov clc mov inc int3 enter or or dec decl mov (bad) test into inc cltd inc mov lret inc repz cmpsb xchg or insl insb inc inc lret test roll jl sbb mov cli pushf mov cmp (bad) push push sub or in jnp in sub xchg inc mov ror (bad) iret jb decl lock cmp out sub (bad) lret dec ds and add dec movsl flds add fcomps dec jecxz or mov cmp xchg mov sub or popa add cmpl clc jno xchg or lret out pusha lea das daa xchg loope repz mov pushf ret les pop mov leave cmp xchg mov jmp cmp mov popa lds pop ds xchg arpl je pop retw cwtl add dec jae xchg push roll jb jmp and loope js jge cmp xor inc cmp (bad) cmp and sahf inc pop or int3 ds data16 in js cmp fildl aaa dec and bound mov cs fldenv xchg insb sahf push sub dec xchg stos mov xchg fidivl in cmpb cmp jne repnz cs adc add jmp stc jae ljmp jne sbb lret sahf jg sbbb or pop dec ds aam int3 and imul adc sahf mov test ret adc (bad) (bad) js outsl pop call jecxz cmp mov in mov cmpsl mov xchg jmp lea inc dec rolb das add in pop push cld mov xchg push cmc shl mov add mov ljmp fidivrl mov push xor inc popa enter imul push inc or fldenv mov data16 aad sahf dec test shrl mov adc icebp cmpl pop popa jbe mov mov mov pop push cmp xor jo mov fimul je xchg leave movsb mov loope sub adc add jo es pop xorl fs addr16 dec scas or sti pop out sbb add and jae loope arpl addr16 and cmp sbb push out fldt outsl inc or mov and test inc push xlat dec or cmpsl xchg jg ret imul dec dec int3 mov (bad) ljmp push pop cmp into imul add (bad) mov pop aad mov enter add mov cmp pop mov jle pop add daa jo mov out outsl dec stos cmp das add cmp inc scas pop adc pop fninit stc mov cmp push test pop push negl cmp and xchg jle mov fs mov jge adc cli pcmpeqd mov int cmp add lods lods js mov outsl cmpsb jl pop imul rcll int cmp sbb stos fwait arpl in in pop incb sbb insl or test xor (bad) xor mov xchg insl sbb xor shll mov mov pop leave mov in (bad) daa sub and and cli out inc xlat call and and add lods and and jnp or lea jnp mov aam cmpsb or cmpb pop adc mov rcl mov or xlat inc std add bound add adc adcb push push in repnz sub add jo pusha roll mov test lock pop push jecxz jns mov jb push cli jo pop sbb dec (bad) xchg mov add sbb add out sahf cmpsb lret rclb loop (bad) mov push mov ret jae mov mov ret test inc jg imul lret cs lds xor (bad) fyl2xp1 neg sar push out jecxz cmc popa push pop inc cmp outsb fmuls movsb sbb inc scas clc push std and sub mov sbb cltd sub xchg or sahf cmp jge push push hlt add pop inc push jbe jb popl cs pop push cwtl push mov dec lret cmpsb rol or loope lret lds (bad) push popf pop in mov aas jl scas jg xchg fisubrl call iret stc leave (bad) cmpsl inc negl pushf popa sub ret dec fstl inc or lcall test ss int je or stos lahf mov lcall push add jle loop push inc or mov jge loop ja jns nop test jge out int3 sub or orl ret sub and cmp rorl repnz outsb jns pushf (bad) fdivrl out scas in mov call dec movswl xchg loopne or sbb lret add and push cmp add jecxz pop shlb pushf (bad) cmp fstps pop enter adc sub mov adc stos jl aad push imul les sbb cmp stos imul das add mov leave cmpsl aas cmpsb into mov mov inc dec dec dec test mov test push lds mov sbbl ret test mov xor xchg leave leave sub mov add add mov bnd orl es pop shlb addr16 push xor add loope ljmp mov mov lock loop adc imul sub mov int3 adc or xchg lods push loop dec ret mov adc in pop insl xchg adc sub inc pop ja inc and clc pop mov out push dec aas add out divl pop stc dec movsb and mov frstor outsb jp inc jae scas pushf aad sbbl mov call mov sub das movb ret mov fs push repnz push aam stos jne sub inc add in in push (bad) (bad) int sti push (bad) jle dec ret and (bad) loope rorb mov jg popf add push mov mov xlat sti scas push cmp jp or fist xchg jp xchg push add outsb test rcrb movsb and or (bad) or adc scas push push jle jo (bad) mov imul cwtl cld sbb sub jae jno mov mov out pop cwtl pop (bad) stc cmpsl jns insb push push ds dec jge fmull add add push test and inc sub es dec decl push mov fwait imul xor shrb aas cmc push test cs xchg push das adc jle jp mov mov pushf xor mov sti jp sbb cmc loopne push adc data16 cmp out inc lea pop or sbb jns pushw cmp outsb push int3 test lcall add outsl or hlt inc fimull lret in out leave add (bad) cmp sti cmpsb sub mov out xchg inc (bad) push pop dec lret jecxz clc aam push pop cmp test (bad) popf jae fcompl inc cmp lods mov (bad) sahf sbb jnp pop ss mov test ret push inc pop rorl push mov adc (bad) pop (bad) push jmp add add negb xchg sub mov inc jo movsb je (bad) mov mov bound rorb jg rcl or test rolb xor mov fsubrp lods (bad) leave bound sar cmp push stc into mov inc mov dec xchg push mov mov ret movsb outsl icebp (bad) dec mov mov iret cmpsl les mov push icebp out test lock xor add add mov dec push cmc mov pop cwtl das jne enter sbb dec xchg cmp test fucomp in mov xchg inc dec push lea fsts test push inc fcmovbe sbb lock dec cmp inc sub mov fst adc push in and push rorl pop xor clc jg call mov ljmp clc pop cli dec in jbe and add add sub ret lcall dec mov adc or sub test fildll lods jbe js cmp lea enter test sub and jo add cmc pop out loopne sbb cmp mov push stos hlt sqrtps mov cmpsb add dec sbb mov add cwtl jb cmp gs fnsave mov add fsts (bad) mov adc call jo push push sub data16 outsl xchg cltd dec fwait xchg add sti and call insb hlt push add inc mov mov sub xor lods insb mov pop mov aad outsl push fcompl mov scas test jg ficoml or mov dec jl pop dec int jp jg repz arpl popa push add add pop add cwtl scas pop xor add (bad) xchg mov pushf ljmp aas sub outsl in push pop mov lods xchg nop sbb fcoms xchg (bad) sub pop les scas cmc and mov outsl insl cli dec (bad) repnz adc mov (bad) mov out sbb jmp jmp out mov or dec lods je (bad) dec int3 jmp cmc jo xor xchg mov add add jecxz xchg sbb (bad) jecxz mov cmp pop mov and icebp fstpl cmpsb push sbb lret pop add hlt push fwait aas xchg cmp (bad) sbb sbb cmp jbe mov leave loop dec cs dec dec rcr test add mov pop std mov adc dec mov mov movsl js xor nop aas lahf mov hlt dec in lea mov add rcrl orl gs dec ja or movsl mov leave sub add jp fisttpl int cmpsl sar xor cmp dec or xlat inc orl into addr16 fcoms or or mov push mov fs andb es icebp sub mov and fimul jl jecxz ljmp lock inc cltd mov mov pop out xor adc jbe push dec inc popa nopl jmp jge movsl sub push popf mov jecxz incb es jl data16 and push repz ficomp gs aam imul add sbb in mov fadds mov out (bad) fldt xchg fincstp add daa test add inc jne cmp and in jae sarl adc push (bad) mov jecxz jp ds scas in imul jnp in sahf xor xor xor (bad) sbb mov push xchg sub jae cmp mov sbb fcomps sbb scas pop ja insl lea movsl repnz es mov mov mov mov pop les lahf movsl jp aad adc shrl xchg push or add add xor push test das jns add and push (bad) adc clc jae push sub and pop xor ss sbb imul icebp cmpsl roll mov jecxz push inc adc sti neg fsubs ds dec mov rorb outsl out sahf fs and fisubl mov (bad) mov push mov in iret mov push test into push xchg sub daa mov push nop add mov sbb outsl xchg in (bad) dec lret xor and dec xor xchg ret lds xlat mov test xchg push push mov cmp lock lods test mov out pop in (bad) mov lret dec (bad) cld roll fsubl cmpsl pop push lea add in mov data16 push imul in push shrl test push pop xchg inc repnz push jnp add adcl sbb (bad) or ljmp add popa push stos xchg mov les sbb scas adc cmp or mov pop pop dec sub (bad) push mov popa shrl jnp int3 xchg dec cltd dec mov lahf add jno cmc das aas popf pop jnp cmpsl (bad) push mov fs (bad) jmp iret mov jno dec addr16 rcrb shrb adc ret sub outsb xorb (bad) mov add ja mov lods stos xor sbb push call push movsl xchg dec add rorl inc insl movl xor sub gs push or mov ljmp add push test out push int3 xlat add pop jp mov in lret in enter mov icebp mov jbe lds jl (bad) aaa xchg loop arpl mov xchg adc cmp insl xchg mov sbb dec test lahf push xchg dec out mov push and inc pop repz sbb aam imul xlat jb pop daa mov mov mov aam insb fwait xchg pop mov js test fs outsb add push mov and test mov mov mov add cli cmp mov daa ja sbb and (bad) cmp adc push cmp cmp xchg push add call movsb ds cs data16 push inc cmpsl sti sub hlt inc or jb loope cld sti stos jge out add add mov mov pop (bad) xor xchg xchg push popa sub ljmp xor inc scas push mov dec jnp sub imul pop imull push mov inc jne outsb sub sbb and pop out jl and jb enter cli cmp cwtl dec iret xchg sub xchg sub pop jno lcall sub out mov add add add add es sub mov and push std enter cmpsl repz xor push roll sub add pop jb pop adc mov push push sub add fisub or sub scas icebp icebp dec call fwait pop int3 pop sub adc mov mov push mov mov js lahf cld pop jle (bad) cmp xchg fcoms in jmp add aaa test mov sub xchg cmp orb das adc pop jae add xchg pop inc shr cwtl aaa (bad) int ret out out adc cs (bad) pusha inc and popw pop xchg pop rcr out adc or sti (bad) or je mov push xor scas and test jg push push out pop xor sti lea add add add ljmp jl sbb aam cwtl xchg jmp inc xor in push sti orl movsl sub outsb push jge jge mov aaa mov sbb int3 ljmp iret add push cmp movb mov jecxz jl lret ljmp push dec or les cmc cltd mov sbb imul mov clc das loopne icebp jnp and repnz add pop mov stos sti shr xchg sbb or mov lds sub sbb ja imul jg fcomp ja mov mov push sbb cwtl loop mov sub adc fisubr pop pusha sub adc jmp ja inc cmpsb mov xor mov (bad) cmp ret adc cmp pop or xchg roll loop loope aam xchg movsb fwait jecxz add sti (bad) aam adc jns pop das cmp lods cmp js mov pushf shlb out mov js jge pop jecxz cmp mulb and (bad) mov mov popf push adc movsl add mov movsl sbb dec ret ja (bad) mov jno loopne pop cltd mov pop push jb and mov shll fnstcw sub mov jno fildl xchg add adc add mov (bad) mov xor arpl imul and xor pop addl sub mov push add sarl mov hlt xor and jg sub cmp pop or scas out lret int jecxz add pop andb push adc ror add sub mov movsb lret mov pop call or push xor add add pop pop loop pop inc movsb dec or jl das dec push ja push cli lds pop insb pop into test sbb jl mov xor sub add addr16 (bad) and inc insb hlt sbb jge in hlt cmp xchg test repz aas inc mov jge test add leave or mov and aam fdivs mov je pop aas loopne add mov jb push repnz stos hlt jno add sbb aas pusha dec (bad) cmpsb iret icebp push arpl inc bound scas add sub pop mov inc xor push (bad) pop xor sbb pop mov mov push scas cmp (bad) (bad) mov dec mov (bad) xor in repnz into inc je addl sbb add mov pop mov jb cs mov test add sbb or (bad) ljmp sub imul mov (bad) gs in adc and lahf scas mov outsl adc lods jecxz sarb inc xor in in aaa pop scas mov scas dec les pop call pop enter push dec pushf sub sub jmp pop lock int3 lret pop pop xor daa stos outsl loopne lock push mov push dec lahf negl mov mov adc xchg dec push into sub sti fldenv loop cmp mov imul mov jnp inc hlt mov jl jl roll mov ret call mov xchg and mov ficompl mov stc xchg xchg sub pop mov pop sub (bad) (bad) enter mov test add add jb sbb sbb mov jl mov daa sub sub sub lock ja les mov out sub xor add mov sub cmp lods push or repnz (bad) xor pop mov mov cli push mov je lock dec push inc cmpsb sbb (bad) (bad) adc pop scas cmp mov add fisubrl sub add jns mov or out or (bad) xchg adc push or call mov repz das inc dec and sub fimull repz test pop mov push nop stos sti in inc push popa and and cmp insl sbb es (bad) cmp out cli outsl fildll jle inc and aam pop cmc arpl xchg inc add rclb add add push sub inc bound lods or and cmp push inc lea cmp call mov xchg iret leave repnz das pop outsb orb cmpsl mov cmp std ret adc ja (bad) icebp sbb scas gs mov cwtl jmp mov int cmp fistpll push (bad) mov push xchg and arpl jno test xchg es cmp and fimul ss clc rorb push cld cmp jp mov (bad) or int ret enter mov push arpl mov jo xor fwait jnp push sbb sahf cwtl or int insb pop push sub in or jmp sahf cs mov ret test mov jnp fidivrl ret pushf push outsb das stos sub (bad) cmpsl fucom pop insb xchg ss add insl adc mov (bad) and xor mov xchg add add push or jne in mov sub hlt and and fistpl pop or sub insl jge cmp mov sub dec xchg xchg cs mov mov insb roll orb jb inc push test add or cmp xor loopne jmp je xchg or mov shrb mov das cmp sbb xchg fwait int mov add xor push rorl sahf je or bswap and jle dec mov std adcl test xchg or sub sub stos (bad) mov mov ds ljmp xor les jmp jg mov cmp mov in bound fisubr xlat sbb mov inc mov push add lods add sub idivl repnz into adc ret (bad) mov cld sub (bad) scas mov add out adc scas arpl dec dec ja add outsl sbb cmp jmp xchg (bad) shll ret (bad) cld and or ror out js fwait and pop jp in jo dec test mov sub mov jp or or push sbb or fist sub inc push push out fucomi add add push xor xor aad (bad) inc pop in sahf jle cs and mov add cmpsb daa ja push and cltd sbb inc mov hlt fmuls loope (bad) inc pop stc dec sub push cmp and mov popf mov cmc push mov (bad) jmp lcall push js adc cld sub fimul ret push (bad) xor mov pop imul mov add add mov cwtl pop imul lret rorl fmull jge bound das cmp and xor mov jmp mov out sbb fistpl out stc dec fwait cmpsl pusha fldl and lds mov fnsave fidivl lods pop cmp pop rorb inc aaa push adc or dec add into xor aad das iret or int pop xor xchg push add add pop pusha jecxz xor sub add (bad) adc lods lds cmpsb dec stc enter jmp out test arpl push push lcall fistpll xor sbb lds push and xchg js inc cmpsl mov push push das adc inc inc das test xor ss lods icebp ds add add dec mov arpl cmpsl loopne lods dec fnsave lods mov (bad) sbb gs ret fnop sub xchg inc mov mov mov pop movsb out das out cmp pop dec ja adc xor fwait and jns add xchg fisubr repnz mov xor scas jns inc test insb divl in inc push inc jp mov jl add add (bad) rorl stos hlt hlt mov sbb mov jle lret ja movsb arpl xor cmp add xor sub jne loop test fwait cs notb stc mov mov jns (bad) xchg sub test fwait inc jb cmp xchg stos xchg jg out jp sbb jb int3 stos cmp dec xchg inc call add add sub push inc (bad) push push mov pop fs mov fs jl js int jnp adc das inc fimull (bad) xchg push push pop jae aad push mov addr16 into pop cmp in decb fwait push sub fistl pop mov push pop enter dec hlt push (bad) das cltd fstpl push xchg inc (bad) cmp dec pusha les xchg vshufps cmp rcll xor roll mov data16 add fnstenv hlt fidivr stos fidivl or xchg div icebp mov or fsubrl (bad) dec fwait sbbl sub xor xchg pop and xchg movsb jmp sub inc pushf pop pop push pushf test xor cwtl xchg pushf jg into fwait mov add and fiadd xchg scas clc das add mov cmpsl cwtl mov test sbb loope roll mov xchg in dec insl test sub test fdivr push fucomi push dec sbb mov repz inc leave sub in mov stos cmp outsb gs xor jmp jno bsr jnp ret addr16 push xor push mov je add add and push insb jp dec outsb xor scas stc and dec pop fldl (bad) test cmp xor int jae pop xor iret xchg repz daa cld pushf nop and dec cmc or mov and and or stos inc cmp push pop sbb sub mov push jl (bad) stos inc (bad) es xchg divb cmp rolb add hlt arpl in push cmp into pop xor iret pop pop jle lods scas mov imul ja ret dec or xor mov or pop jmp push jbe push test sub inc jle mov mov xchg mov and fcmovnu adc pushf sti icebp test mov sbb ret pop xor jge in jg (bad) jo movsb cmp cmp (bad) loop into push add add dec cwtl cld xor stos cmp insl mov ret dec jmp test sbb jmp push push sub in cwtl xchg adc pop xor rcll lods les aas sub je jmp pop loopne mov push rcrl jg mov xchg or cmp repnz (bad) cmp lods and movb js push add and fisttpl (bad) sbb in and cwtl bound aam fdivrl pushf inc das mov mov in pop add pop sub lcall jae xor icebp inc jb inc sub and sbb out outsb nop insl xchg jl pop inc sub mov pop xchg test loopne subl addl mov jnp pushf out enter popa and cmp ljmp push push dec daa inc add in adc cmp icebp sub ja xor cmp popa pop xchg jo adc jg incb rcrl mov dec inc inc add add add flds xor push or loope (bad) test imul sub add and test mov dec sub push pusha les add pop dec jo or mov mov es not and (bad) sbb push insb or dec push xor sbb and ja cli in xor (bad) sub cmp push jl push out stos inc pop xor ret dec sub jle aam xchg lock mov int3 imul xor movsl aad aam jo int mov incb (bad) cmp pop stc xor fmull add add add pushf jo cmpsb dec mov pop pop leave push xor fucomip cmpb xchg sub xlat jg sbb outsb pop hlt in mov lds loop and (bad) sbb mov pop add inc (bad) sub outsl (bad) fisttpl daa loopne fisubl inc cli hlt jmp mov ficom or andb les sbb mov fstpt cmp mov repnz mov add add sbb pop mov nop xorb mov mov dec pop pop dec stos mov nop pushf mov sarb outsl cmp out loopne pop fisub pop mov xor fiadd cmpsl push ljmp inc mov or popa in mov adc adc ja sbb sub or mov xorl push sbb xchg bound sbb jp sbb push je in push aaa sbb adc sub repnz out (bad) mov scas subl mov or int3 outsb pop or insb mov and ja aad fcoml mov in leave scas sbb roll in adc sbb and mov data16 ret pop push inc lret push mov in insb cmp add add jno stc (bad) aad into jae jmp into and push clc (bad) cmc sub daa test jne xor add and or idivl push aas in es or dec sub push testl mov test mov outsb loopne js jo sub and mov mov clc insl repz scas paddusb outsl ret sahf or mov shr sbb cmp mov pop (bad) shrl std sbb cmp cmp xchg xor xor roll cli jmp ror (bad) xor dec sub (bad) cmp lock inc xlat or pop push adc stos adc loope jae or loopne push dec imul sub pop sub sub bound sbb cmp add shrb add lds sti popa jge cmp inc scas loope add or pop aaa xchg hlt push into adc add inc jae out std scas aam les sbb fsub push lahf sbb mov outsl jp push hlt pop and add js cmp jne out ljmp jo fcompl mov sub out les pop test xor and and fdivr dec add jne int push add inc loop add add ja (bad) mov xor rdpmc and xor mov adc or pandn mov or fisubl push fldt mov jns cmc jae punpckhbw inc inc out je pmulhuw lahf (bad) cli hlt sbbb push mov push inc xlat adcb mov push dec pushf push jg xor (bad) dec mov jnp clc adc inc and aam repnz (bad) xor outsl test cwtl lret (bad) dec xor and mov addr16 test and leave cmpsl icebp loope push inc jb aas push sub inc sub pop pop loop pop adc cmp dec inc adc ds adcb xchg js mov cmp or inc jb inc scas xchg mov aad push (bad) pop je jmp lock (bad) ss stc rcr and cli pusha add stc test add jl mov push out mov xchg dec inc movsb mov mov pavgw ror jge jns loop out jns (bad) stos mov ds stc ret sub xor and in mov jle push xorb jbe jb (bad) cmpsl in pop pop cltd in cmp lret mov or jp test and fiaddl xchg test pop ss cmpb xchg pusha xchg add pop add xchg mov jo dec dec movsl js scas sub dec sub lahf jmp lock pop jb repnz imul mov sub loopew jo sahf cmpsl aad inc xchg dec or shrl out push out icebp add sub adc movsl mov cmp je rorl and push pop fwait insb ja test (bad) divb jnp rcl adc mov add or add pop insb and jns daa or scas mov add gs ja popa call push cmp mov fist mov sub lcall or mov pop mov ret ret jp mov push popf out jae adc movsl lcall fucomi push lock mov push jle xchg adc stc mov add adc lods sbb clc cs mov in movl jo popf pop push inc aaa icebp or pusha jns into dec sub dec scas shrb add stos fsubrl dec gs fwait dec push cmpsb das out inc cwtl stos test xchg push mov pushf leave mov nop imul mov cmp adc cmpsb fistp cs test add add inc sub add adc stos adc rorl call decb clc out sbb out in int3 inc push sub dec or arpl aaa hlt test mov stos inc lcall pushf and adc lods stos jns js sub (bad) cmp jno sub dec or mov (bad) jnp test cmp outsb add xchg iret (bad) mov orb cmpsb daa push movsb mov movsb cmpb mov gs popf scas cli scas into sbb mov jmp std push cmp cltd jnp xchg and push add mov or ljmp pop (bad) pcmpeqw (bad) and sahf ror sbb sti mov push xchg dec mov cmp sbb outsb sub pushf stos mov in fiaddl and mov add xchg xchg inc mov sbb stc cmpsl and dec loop out mov aas adc push lret xchg xor test or mov jl xchg ss sub mov sbb ds mov repz xor faddl sbb movsb adc cli mov aad adc sub inc cltd mov adc int3 cwtl and jmp bound incb sub push fmulp insb loopne pop add pop lods sti pop fdivrs push xor repz into jge xorl inc mov push ret mov inc adc aam mov jge fcompl cmc xchg adc out lahf adc sbb or jae xor and and cmp cltd push push mov push mov scas pop dec nop inc popf cld or sub add mov inc push mov cmp xchg (bad) mov inc (bad) mov xor cmp jo rcll pop sub adc fsubrs mov lods push mov shll mov aas mov stos mov mov lock call cmp jl in push lods pusha subl je mov idiv scas inc sub sbb stc js sarb cmp add add mov cltd test pop adc mov dec xchg jb push push pop pop pop repnz fxch xor mov gs mov and js xchg lcall pop cmp xor lods cmp fwait ja icebp xchg dec jmp mov push sub imul test pop add and inc jae stos aad inc les lods out movsl loop mov arpl add mov mov jecxz or inc lahf xchg adc aad mov pop mov push shrb popa jno sahf pop xor inc fdivp xor push xchg xchg push mov xchg inc (bad) cmc imul push aad loope inc xor scas mov mov daa out inc test mov xchg lds fmulp mov jmp inc pop shlb loop xchg ficoml add or pushf lock outsl pusha (bad) enter mov loope rcrb inc pop inc mov add rorl inc and gs mov mov in jne add clc or fcoms cmp mov sub cltd rol gs aaa xor dec mov mov inc fistpl fidivl andb (bad) add fs es and sub dec xor inc shlb add mov gs faddl adc inc loope jmp lcall push or out push jge mov test mov mov int cltd (bad) sub lcall xchg push jle aas adc icebp loope enter or dec jne add mov jle daa stos idivb inc addl jno lds aam xlat sahf subb (bad) adc fstps pop scas adcl add repnz xchg (bad) lret inc aas cmp inc cmpsl pop xlat ror sahf jne mov mov nop ss aaa mov pushf data16 mov ret aas fwait xchg repz mov fdivrs pusha sarl xchg or negb stc cmp test mov imul in push roll pop or hlt mov movsl pop aam mov adc xor push (bad) add dec cmc add add cmp mov fs int3 xor insl pop les outsb push movsl or and push cmp lods xchg leave popa or add addr16 stos xor add sti cs pushf les fwait pop cmp mov push jge dec pusha mov (bad) inc push (bad) call imul mov rclb es jle clc dec sahf mov loopne sbb jge cmp insb aad push jnp mov xchg jno dec push stos jae,pn aam fisttpll push cmc push imul inc jl pop sti jl cld stos rorb sub xchg loopne sub outsl adc inc sub or jnp cli loope jne imul inc bound sar mov mov mov jns (bad) daa mov and sbb imul adc mov insb fwait pop sbb and dec rcrb lods decb fstpl mov mov sti or imul xchg push cmc rol xor cmp pop sarb dec jge imulb dec xchg movsb pop sbb (bad) pop icebp dec mov or das or sbb cld jp mov in sub pushf imul push insb (bad) nop cmp fs add add testl mov inc scas sbb lods sub ja fmul cmp insb lea pop xchg xor scas sahf lret leave leave cltd scas cmpsl xor push cmp cmp dec add xlat in js ret ret test jl mov iret sub pop popf in aad mov inc mov clc pop cmp insb mov add gs hlt or fwait mov imul sub add add add add cmp push cmp ds in pop jns or mov test adc jg sbb xchg push xchg push btc into mov je jmp bound or leave mov (bad) inc xor dec jbe mov pop mov jmp pop add adc mov push imul sti mov stos mov add push mov imul imul pusha ficoml inc or mov lahf test xchg out jae cs jge pop mov sbb outsl shrb arpl (bad) (bad) das aad mov jmp mov dec xchg jns mov push in mov rorb clc pop adc push jl mov roll (bad) popa push sbb push lea jmp sarl push add cwtl xchg movsl test mov and jl hlt stos mov xchg jae fstps push or out jno lods add loop add lds and inc cmp or and out add mov jns mov cmp pop mov cmpl idivb and gs mov in mov sbb notb stos lret add hlt sub movsb lahf in icebp mov stos inc sbb cli adc add sbb dec arpl cmp negl pop ret negl insl out rcl out (bad) xchg jno mov lods or stc dec or lods fcomps into (bad) jmp jmp leave pop sbb fcompl mov xchg pop mov (bad) mov and in add xchg cmp xchg mov scas pop adc jns in inc out or pushf mov enter es lahf add add lods mov push mov cld cmp scas xor fiadd movsb or cmp pusha jmp and mov xchg mov fistpl add ret dec cli or in inc jb xchg and mov test xor ret push aaa repz add sbb mov sti xchg lds rclb or mov std popf mov mov js (bad) push sbb or or imul push pop xchg push imul in mov push inc mov rcrl (bad) sti add movsl mov les jne jae jns cmp add gs add jecxz js mov cmp (bad) cmc cmc jne or add add dec jne mov push push clc and dec xor test xchg ret loop adc jns ret outsl cmp cwtl aaa xor push jl pop in sub sarl in mov push add test mov call inc push cmp inc cmp xlat psrlw push adc mov je dec pop pop cwtl sub jae mov push nop popa jge cs add icebp icebp sub ret pop add das hlt push mov mov dec lcall enter in add mov or dec adc mov lods xor xchg jb dec popf inc pusha aas pusha (bad) das mov xor sbb jo fsubs fcomi aad scas mov adc xchg into xor push xchg in sub cmp xlat outsb outsb jecxz aad dec inc inc cs xchg popa add xor popa and and add rcrl push jne fcoms pusha pop mov fcmovne icebp iret pop ret ja ret cmpsl push dec es imul imul outsb or (bad) in insl jnp dec cwtl les or and js loopne cmc sbb (bad) cmp push arpl xor dec pop jb (bad) in (bad) out inc dec xor inc cmp add add loopne out xchg (bad) cld movsb inc xchg rcrb pop clc outsl sarb cs in and outsl mov out push stos mov std fild xchg outsl pop enter fsts addr16 es cmc enter or (bad) aas ja pushf sbb and fnstsw jp stos sbb xchg dec out (bad) mov out loopne add lods cmpsl in sub sub test sbb mov pop cwtl pop add add stos and mov mov sti push xchg mov mov int3 push adc dec outsb jmp fs dec iret or mov add lahf leave clts mov or subb out push cs gs inc jge xlat mov or push idiv imul (bad) and in stc push packuswb xor push or imul xor mov aam dec out pop push adc mov sub mov out int and jmp (bad) js sarb jge jae jl pop or (bad) (bad) insb fmuls inc pop sub bound sbb fmuls cs mov sub xchg aad xor or cld mov add enter je int test outsl (bad) inc fdivs movsb clc pop xorb add xchg loope cwtl scas lea xor hlt repnz pop iret xchg pop push shlb mov ret loope aam mov cmp push lods outsb jno ja and jp ljmp into (bad) (bad) lret push and out jno outsb scas nop push aas add inc fcoml lds sbb mov mov outsl insl push dec arpl jae add mov mov in pop mov lock push les add add add push ret cmp clc test out cmc adc mov push loop out mov push fs lods bound sub pop test pusha adc push aaa mov popf test xor push mov dec iret or xor stc fcmovnbe cmp clc xchg sbb arpl aas pop loop sub lcall das test subl insb in add add insb or outsl ret mov movsb and xchg jne push loope iret cwtl loop mov sub rolb sub sbb add pop mov lea xor dec lret je push mov repz (bad) xor or mov clc dec pusha enter jle hlt lahf or inc insl subb dec into and lods xor daa dec in push xlat cmc jecxz dec cltd lahf bnd sub add dec in push sbb (bad) mov jns and pop jle xchg std push pop ss pop xchg push push jo int3 repz cmp scas ds xchg jno cmp xor loope adc dec (bad) (bad) ds popf mov test stc push fidiv cmp cmpsb scas fucomip sub mov adc mov mov out jnp out adc (bad) lret add hlt push mov test sbb dec inc fstl aad mov mov pushf sbb cmp repnz negb pop jb cld mov lret (bad) imul lds mov scas loopne pop lea jp iret jle pop dec cmpsl pop aas dec push addl jl in je xchg or leave push mov scas adc nop adc add add or bound push pop (bad) loopne out stos cmp add cmpsb push push loope mov clc push dec adc popf push dec ja fwait hlt sub sahf mov hlt mov movsb rclb inc push mov sbb xor scas add fisttpll movl xor jle mov mov sub aam and (bad) pushf mov iret aas je dec add clc in add out jne pusha imul cmp push das nop sbb cmp insb mov xchg imulb or add sahf (bad) in push out push pushf fs inc add dec and mov cld dec xchg arpl test add sub (bad) push xchg mov lds mov cmc mov inc jne (bad) xor jns int dec mov cmp lcall out out sbb jno lahf mov pop popa mov pop popa rcrl mov xchg jge and mov jb jmp adc lock mov or int3 mov movsb push jp cmp es mov push and or pop push xchg mov jbe jle sbb add xlat mov dec jge xchg ret fs or xchg sbb (bad) divb insl inc insl gs dec adc mov js jbe jnp cwtl xlat cmp mov cmp inc push sbb fstpl fbld mov (bad) fidiv bound dec (bad) mov popf xchg (bad) hlt or (bad) mov push sub addr16 lock pop dec add pop lock add fucomp daa mov push mov cmp push jae out cmpsb jp cmp inc ret xor ret mov pop push repz inc dec test pop push jno stos addr16 xchg and pop jge jge std int sahf into outsb pop adc xchg jecxz iret shlb sub or and xchg (bad) loop dec push pop sahf dec fbstp dec mov stos and nop rcrl sbb cmpl sbb push add cltd out hlt aas ljmp dec cmpsb xchg imul sub popa mov dec push jg mov add icebp int3 ret popf loope mov mov sbb dec push stos js inc inc imul lock sti in mov jnp pop lret pop mov bound cmp cwtl (bad) or dec (bad) aam pushf inc and jnp ss ds sub int mov mov pop jno sub push xor aam mov jl dec repz lret loopne mov push (bad) pop add insl pushf out pop xlat mov inc dec dec movsb orl sbb ror xchg or popf loopne mov dec (bad) dec shld lods lock mov dec lds enter sub int es test js,pn ds rcll enter cmp movsb imul add add jae lret push std ret mov mov xchg push daa mov or cmp add push rol mov mov sti pop sti out jg jns daa jns lret jnp imulb or in and pop cli pop in dec add mov sbb pop mov int jne xor xor adc test in aas dec sub add add out xor dec xor jecxz add xchg ljmp enter mov jb fsub push jns mov adc jmp pop lods inc xchg adc pusha xor xor ret push jne fstps enter cld das pop nop xor push shll fstps lock loop stc push pushf in clc hlt (bad) or jae popf imul cs and jmp mov push fdivrs fidivr xchg add pop (bad) jae je mov jb (bad) (bad) push push and cmp orl test fisttp mov jg push js roll rcrb mov mov xor mov test popf and mov xor mov push sub push in xchg push and out mov xor mov inc lea and jmp jl into push mov or sbb sub jnp icebp rcll or bound sti mov jbe mov outsl pop sbb sub fdivp push and cmpsl xor rol xchg mov mov test orb sbb sbb sbb xor movsl cmp xor (bad) push movl mov cwtl lods jbe stos push pusha inc rolb sub add add test adc test push adc pop add fs dec mov dec cmp or push (bad) jno lds or sub cwtl add lods jbe cmp push out inc mov add mov in addr16 and jnp sub in es add mov iret dec add fsubs sub jb adc sldt sub (bad) or push jb push fistp dec inc add (bad) dec or push test stos mov cs inc cmpsb in in pop rcrl push add cmp dec insb scas xor movsl pop xchg sbb mov xchg sbb or fcmovnbe dec xor push bound cmp mov xchg inc push inc xor add divl xor cmp leave pop cmp lcall add rolb les adc imul mov jb rorl mov aad add ret mov inc mov cmp inc out je mov dec in inc pop xor jmp (bad) sbb addr16 push test cmp (bad) cmc jne lcall xor lcall mov dec into inc push and in mov dec jg sbb int jae dec stc lcall lods jae sti scas cmp inc in pop dec pop and movsl jno mov (bad) pop lods aam sub push movsb pop or nop out std mov stc inc xor lret jmp adc clc mov sbb push bound in mov cwtl push iret sbb insb push (bad) dec mov test push ja aad xchg cltd dec das mov add mov subl aad aad (bad) loope pop adc cmp je cmp push sti inc jnp mov es fstpl sub rcr pop lret std std ret sub ljmp insb push xor xchg mov jl (bad) xchg movsb add cmp std int3 jp xchg sbb fisubr cmpsb xchg ret shl jecxz xor icebp jno clc loopne hlt fwait inc call push push pusha pusha push xchg jmp push jg add add lds push cltd stos jge cmp shr test pop es int jl fsub (bad) enter in (bad) jg mov test lods popa cmp sub cwtl mov fnstcw sbb xchg jno lods loop out mov lcall inc add cli imul repz xchg stc jne data16 stc inc pusha test jge aad sub jne add add mov (bad) iret inc cmc push negb jno jg in pop cmp ljmp mov ret (bad) dec mov dec cmp dec dec ret mov in push jecxz jle (bad) sbb push ret pop jno adc push lods or lods lahf pop adc ds dec fwait or xchg mov stos sub mov insb push jp adc add push push andb jb pop mov iret inc xor mov int3 repz pushf mov fstp add je jge mov outsb xor jecxz xor leave ret inc dec in inc add push bnd aas mov ja (bad) cli in je pop lcall cmp ljmp mov rcr imul inc test add shrb ret or dec or out mov xchg lret and (bad) in inc ja (bad) jo xor addr16 pop xchg jecxz test cmp add push (bad) daa mov loop stos inc js mov scas lret dec cmc inc (bad) decl mov xor xlat and (bad) int add cmpsl (bad) call cmp xor and into pop sub cmp adc jae stos inc add addl jecxz call out add insb mov jge add ja ss push inc jno sub mov ss xlat pop daa test andb or daa fmull sbb mov adc mov addr16 in into clc dec mov ss mov aad inc adc and dec and (bad) pop mov ljmp add jle and jecxz lea (bad) mov stc loope (bad) and inc mov (bad) aas insl or adc adc ds sbb or fmulp cwtl jo ret loope fwait add dec push mov push shll cmp ds sbb faddl push nop js push std mov cmp and shlb push pushf add add jne xchg imul xchg mov push sti mov adc cmp fs call out sbb rorb jb aaa sub inc inc cmp push sub cmpsb je inc sar call mov mov int loop hlt mov add rcrl out inc stos inc lahf sbb addr16 fsubrs not ljmp add mov test inc out ret hlt push and push loopne mov int3 pusha add adc lods cmpsl gs out pushf and push jae cli aad cmp inc cs adcb (bad) xor or dec fdivrs inc sbb pop or or loope mov xchg sub adc sub push dec in lahf imul cmp out andl push push cmc enter mov cld popa repnz cwtl jne inc push xor (bad) das mov cld add mov pop scas xor imul pushf add mov adc in rcll and xor push fsubrl mov adc mov pop cmp nop push mov (bad) lock arpl stos fmuls enter or sub dec lcall add or adcb in cmpsl fidivr lods xchg rcrl popf popf and mov or add shlb push aad or (bad) dec mov movsb pop or pop and scas pop loope cmc mov clc int3 xchg loope cmp mov sbb sbb cmp mov push xchg sbb fisttpll es jae lock out nop jmp rclb sbb and fstps push lret adc aaa jo push push push xor int sqrtps in dec jae je imul gs lret push sti add or dec jp jge push lahf std lahf insb or js push mov xchg out lock push pushf cmpsb push mov cmp push add lcall add add notb mov dec xchg (bad) xchg jge das test mov (bad) aaa pop scas cmp pop cltd int pop pop push sub cmp pop mov or mov dec decl jg lock fcmovbe mov pushf push ficoml pop mov pop or int3 jecxz in out out fild dec lock repnz and fcmovnu outsl sahf pop inc cmpsb and jne jbe ror enter add lret jno pusha inc push dec mov push sbb (bad) add push add jmp xchg mov cmp adc lcall not fist cmp (bad) out pop mov cmp push jg dec push lock jle ds sub rcr or sti mov and mov mov rcll pop cmpl inc cmc andl int3 add add jbe arpl cld xchg pop test bts xor mov cmp test mov pop xor mov mov repnz jl xor and sbb sbb lret xor and adc fmull push sbb sub xor dec xchg loope xor sub push inc out dec js add push mov push (bad) add inc push push push fcmovnbe push xor mov jp jmp add mov rorb mov fwait jp fwait jb xlat subl verr or add mov mov cmc pop movsb adc cmp push mov les and dec lret (bad) push movl or mov dec or aad cmp xor (bad) pusha push aaa cld add sbb jl inc mov push xchg push lods test mov outsl and or addr16 scas push mov mov sbb sbb insl jns xchg xchg outsb or int3 and jle cmp mov loope adc sarl hlt icebp jmp fiaddl or bound push inc mov and mov imul ss mov aaa sti xchg pop cmpsl in stc hlt bswap rcpps and add stos and xchg mov dec aas or sar js lods or fidiv mov inc or fldt cmc mov packssdw in push dec (bad) (bad) outsl loopne iret xchg mov mov aas popa ret notl push lods cmc jecxz push (bad) sbb adc cmp lds or dec int clc push xchg ja and in add adc ljmp dec push imul aaa dec pop repz pop add outsl stc sbb push lock adc and mov cmp jmp and pop pushf cmc sub dec (bad) jo stos (bad) lock (bad) dec sbb cli adc sub into mov push dec imul rorb sub mov jmp sbbb dec (bad) adc (bad) (bad) push sbb add and mov mov aaa ja lcall out mov leave mov jmp mov pop addl test inc jle cmpsb lea or out dec jl adc xlat cwtl stos rorl mov mov cld xchg in test (bad) xchg push jp lcall sbb arpl push xchg add add add lock mov lds jecxz cmp ds mov sub xchg cmp pop je dec das jns ret or push andl jg mov mov aas and in nop sahf xor cs nop jecxz insb xchg gs sub aaa sub jg (bad) and push dec inc pop loope pop mov adc fbld xor mov sub mov and add add lods push sub aam je,pt cmpsb jno xchg cld andb insl adc int dec push cs mov sub insl insl xchg testb or in push (bad) loopne mov add mov and and inc push xchg ds jae or xor jp sbb mov inc pop mov inc mov sbb frstor adc push insb das adc lea movsl mov mulb sarl mov mov jp movsl dec sysenter cmp and aaa xor (bad) jns or ret loopne mov cmp ss dec movsb push sub mov test sbb mov fdivrs mov mov sarl add loopne cmc push aas adc xchg (bad) fwait pop mov aaa dec popf push add orb popa bound imul in jge xor inc arpl dec xorl mov out arpl addr16 push adc inc andb sub cmc inc dec jo ss pop add inc jge fwait xchg push mov dec call or test sub pop add and or jle fidivr fnstcw cs loope sbb pushf jmp cwtl aas cs es (bad) testb cwtl rcrl add iret inc adc cmp insl cmp sub pop adc inc sub mov mov mov xor push adc shlb cld inc (bad) sar lea and pop arpl out dec dec cld jo push xor mov mov dec inc mov inc shll fstpl dec cli xchg and dec outsb stos sti dec in sahf cmpsb inc mov insb adc movsl jmp push jbe mov (bad) stc push (bad) push out aas and call lock shlb fiaddl mov out push (bad) jae inc xor xchg cwtl into lods into shr in out mov in fwait push movl jle mov dec adc pop and inc add sub xor cmpsb cmc xchg into xchg and arpl add push cltd sti mov fmull add stos add stos or aaa ja sbb repnz fiadd fucom sub xchg ja scas jae mov mov (bad) into in loopne mov mov cmp adc hlt mov xchg mov popa xchg cmpsl (bad) lds add fs add pop repnz dec mov out jg pop pop pop add pop (bad) fbld pusha jnp or add or arpl repnz push scas test mov sub cltd test dec (bad) mov dec fmuls stc and in adcl mov in lock push adc mov rcrb or in pop loop ret insb leave sub dec sbb pop and mov fnsave pop test jp int pop je sahf lcall enter push ret outsb in (bad) int3 js add add jb je lret sub mov mov sbb sbb fistp push loopne pushl sub (bad) pop sti xchg or int (bad) add pusha fcmovb fldenv or adcl fildll sbb enter rorl test jns les stos mov lods adc sti ljmp mov ss ret jmp (bad) and pop mov or pusha fsubr sti xor add add mov dec jp push js jnp sbb sbbl roll push push jl xchg sbb pusha xchg xor fdivr sbb cmc sbb jp push clc ja and and mov adc sub ret lret and pop dec scas cwtl mov and int mov pusha out hlt popa mov ret inc sti ret sbb jns jne mov add add jmp insb das mov iret bound sarb negb aaa sub cmpsb out test pop mov jmp mov lods subb in pop cmp pop (bad) rorb (bad) dec out cmp mov mov mov call stos inc (bad) sub lock mov mov stos xchg push pop jge popa lock add mov imul jbe add inc push and sbb test or cmp and adc dec push scas rol ja add (bad) lret gs jb jle cmc jl add jp cmpsb push iret add cs mov dec les gs popa pop cld int jl jecxz lods push cld jnp (bad) sahf cli add jmp cmp outsl inc in xchg or ss sub lods pmaddwd jne push fwait (bad) fldcw jecxz add cmp ficoml xchg mov aas addb daa aam add adc jno enter mov jno int or xor dec das pop cmp aaa daa sbb shrl loopne dec daa cmp pop add or sbb sti ds fdivl sbb lahf jno add inc sbb (bad) push sub jne push lods and aaa pushf das std movsb mov pop mov pop scas scas (bad) icebp jb jnp fs cmp scas sbb cmp pop lods sub xor mov mov jl push push ss ja sbb lret jg mov sbb mov jae sub cmp repz add push pop jb inc mov sbb pop cmp fistpl sub xchg aas lret test mov mov arpl shrl dec pop push shll fild xor mov inc dec pop push mov sub in fisttpll sbb cmp push loopne clc inc inc push mov sub (bad) jbe push inc leave fistpl jge test sub lcall add fcmove test lcall stc es push adc out sub mov (bad) fisttpll mov scas cmpsl push push call in inc insl (bad) dec scas sbb jns mov push xchg fdivrs jge jae (bad) adc repz sarb pushl sub mov movsb test movsl push push rolb mov mov sub cli cmp sar inc cltd pop add sub (bad) jbe call cmp aas jnp and (bad) out lock scas test loop xchg lods fcomps mov repz mov and nop xor adc out sub jo fbld cmpsl mov cmp jl mov lods jns hlt inc ljmp dec push fidivrl cmp push cli rcrl add ss ds add cmc (bad) mov mov aam fldcw (bad) and lcall (bad) xchg imul repnz jne or add dec pop insb inc mov dec scas cmp enter lock fisubr arpl dec cmpsb xchg pop jae lds mov pop ds fdivrs negb ljmp pop jge push dec sahf mov xchg cvtps2pd out add lcall ret inc inc (bad) icebp das mov add adc stc push add fsin push xor (bad) and leave jmp mov stos into pop mov mov fbld sbb push inc mov fwait mov mov jle daa mov int xor sub sub add dec pop insb inc mov dec scas cmp enter lock fisubr arpl add mov push cmpsb xchg pop jae lds mov pop ds fdivrs negb ljmp pop jge push dec sahf mov xchg cvtps2pd out lcall ret inc inc (bad) icebp das mov add adc stc push add fsin push xor (bad) and leave jmp mov stos into pop mov mov fbld sbb push inc mov fwait mov mov add (bad) pop in jle daa mov int xor sub sub add dec pop insb inc mov dec scas cmp enter lock fisubr arpl dec cmpsb xchg pop jae lds mov pop ds fdivrs negb ljmp pop jge push dec sahf mov xchg cvtps2pd out lcall ret inc inc (bad) icebp das mov add adc stc push add fsin push xor add inc outsl cmp mov stos into pop mov mov fbld sbb push inc mov fwait mov mov jle daa mov int xor out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addl push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 in add add lock cli add pop and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov (bad) jecxz out repz incb or adc sbb cmp pop pop arpl jae jge mov scas mov mov fcmovu in out hlt stc incl unpcklps push and cs ds dec dec push pop pop imul mov add mov (bad) jecxz out repz incb or unpcklps pop and cs ds dec dec push pop pop imul mov scas mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec add push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test (bad) int xlat fsub out icebp idiv add or pop sbb es ss inc dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp add add unpcklps pop and cs ds dec dec push pop pop arpl imul (bad) xchg cltd lahf movsb test ret leave into rcr fsubp call add or daa sub inc dec push push pop popa insb jno jl xchg cmpsb lods mov mov (bad) fneni(8087 in lock sti add pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp adc sbb cmp push pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub ss inc dec push push pop add imul addl mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addb movsl stos mov mov aad loopne jmp cmc cli add and aas inc dec dec push pop pop gs je jg mov test (bad) leave iret aam (bad) ljmp add adc pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc sbb cmp inc dec push push pop pusha imul addb movsb stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov add rol rcl fndisi(8087 out icebp testb add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add unpcklps push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha add add add add push jne jg mov test ret leave into rcr fsubp call add or sub inc dec push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 out lock sti add add add and add dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add or sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad (bad) ljmp push adc push and cs ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov add add add (bad) int3 rcl fndisi(8087 out lock add and inc inc dec dec push pop pop imul xchg cwtl popf mov mov xlat fsub out icebp idiv add or push sbb sub ss inc inc dec push push pop popa insb jno jl xchg movsl stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop arpl add add js orl test mov mov xlat fucom out repnz add or push sbb es cmp dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push add sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov (bad) jecxz out repz std add or daa sub inc dec push push pop bound jno jl add mov mov (bad) fndisi(8087 out icebp idiv add or adc xor dec push pop pop fs jne jg mov test les add into aam fsubp jmp add push adc push and sub dec dec push pop pop bound jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and xor ds dec dec push pop pop bound jb js orl test mov mov xlat fsub jmp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov rcl fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fneni(8087 out lock sti add and add add xor dec push pop pop fs je jg mov stos scas mov mov (bad) jecxz out repz incb or adc sbb cmp push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop imul mov scas mov mov add fsubp call add or sub cmp dec push push pop pusha gs jne jg mov test (bad) lret (bad) in out hlt stc incb or adc sbb and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop gs jne jg test movsb test (bad) leave iret aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos mov mov aad loopne jmp cmc cli add pop and add push pop pop arpl jae jle mov test mov mov fcomp loop in repz std add or daa sub inc dec push push pop bound jno jl xchg stos mov mov (bad) fneni(8087 out lock add or push sbb and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in add out repz incl push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb cmpsb stos mov mov aad loopne ljmp adc das add cmp dec push push pop pusha gs jns test cltd sahf movsb test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or daa sub aaa cmp add push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 in lock sti add and inc inc dec push push pop pusha imul addb mov mov mov aad loopne ljmp add add pop and aas inc dec dec push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and cs ds dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and sub dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repnz std add or daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne addb movsl stos mov mov add (bad) ljmp push adc push and xor ds dec dec push pop pop add bound jb jl xchg cmpsl lods mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha gs je jg mov test (bad) leave into aam fsubp jmp add add add adc sbb cmp push pop popa insb jno jl xchg lods mov mov (bad) fneni(8087 in lock cli add pop and das xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add and aas inc dec dec push pop add push jne jg mov test add mov rcr fsubp call add or daa sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop add fs je jg mov test (bad) leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub aas inc dec dec push pop pop imul mov test (bad) leave into rcr fsubp jmp add push adc push and sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repz std add or daa sub inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov add (bad) aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop fs je jg mov stos scas mov mov fcmovu in jmp cmc sti add or push sbb sub cmp dec push push pop popa imul add jno jnp xchg cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es cmp dec push push pop pusha imul addb cmpsb stos mov mov aad loopne ljmp unpckhps pop and inc inc dec push push pop pop gs jne jg mov scas mov mov fcomp jecxz in repnz std add or daa sub inc dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop popa imul addb movsl stos scas mov mov fcmovu in out hlt stc incb push adc push and xor cmp pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 out lock cli add pop and aas inc dec dec push pop pop imul orl test mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov test enter fucom call add or daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub add aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out add add lock sti add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp adc push and cs aas inc dec dec push pop pop fs jne jg mov stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg add cmpsl lods mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jle mov test mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop gs adc sbb es ss inc dec push push pop bound jb jge mov test mov mov (bad) jecxz out hlt stc add incl unpcklps and sub dec dec push pop pop bound jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop popa imul addl mov rol rcl fnop in out cmc cli incl pop and das xor aas inc dec dec push pop pop imul mov mov mov fcomp jecxz in repz std add or daa sub inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop imul (bad) xchg lcall mov (bad) in out repz incb or adc push and xor cmp jns add mov mov fcomp jecxz in repz std add or daa sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fnop in lock cli incl pop and cs ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or pop sbb es add add cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop bound jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne test mov mov fcomp loop out repz incb or adc sbb cmp push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul add mov scas mov mov fcomp loop in repnz std add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov fcomp jecxz out repz incb or adc push and xor add add inc dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp unpckhps pop and cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fucom call add or sub dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) lret fcmovu in out cmc add incl and inc inc dec push push pop popa imul addl mov rol rcl fsub out repnz add or sub dec dec push pop pop arpl jae jle mov test (bad) leave into aam jecxz out repz std add or sub dec dec push pop pop arpl jae jle mov test mov add rcr fucom call add or daa sub inc dec push push pop bound jb jge xchg mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg stos mov mov (bad) fneni(8087 out lock add and aas inc dec dec push pop pop add add je jg mov test (bad) leave into aam fsubp jmp add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add or sbb and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repnz std add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fiaddl loope jmp idiv add or push sbb and inc inc dec push push pop pop gs jne jg mov stos scas mov mov (bad) in out hlt stc incb or adc push and sub dec dec push pop pop bound jb jl xchg lods mov mov add (bad) int3 rcl fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov test (bad) leave iret aam fsubp jmp add push adc push and sub dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or push sbb es cmp dec push push add insb add jno jl xchg stos mov mov (bad) fndisi(8087 out lock add or adc xor dec push pop pop gs je jg mov test (bad) leave iret aam fsubp jmp add push adc push and xor cmp pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb add add sub cmp dec push push pop pusha gs jne addb movsb stos scas mov mov (bad) in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl ja addl mov rol rcl fneni(8087 in lock add or adc xor dec push pop pop fs je jg mov movsl stos scas mov mov add aam (bad) jmp add unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb es cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb unpcklps pop and cs ds dec dec push pop pop arpl jae add add mov test mov mov xlat fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop popa imul addb test (bad) leave into aam (bad) jmp add unpcklps pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in add idiv add or push sbb daa sub add xor cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz std add or sub dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and cs aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in add ljmp unpckhps pop and aas inc dec push push pop pusha imul addb movsl stos mov mov fsub cmp mov int xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt cli add add and sub xor dec push pop pop fs je jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out repz incb or adc sbb cmp pop pop bound jb jge mov test mov mov xlat fsub out icebp idiv add or pop push and xor aas inc dec push pop popa outsl jbe test scas mov ret xlat fiadd add add add jmp clc incl daa cs push pop imul test mov ret lret (bad) in repz add push adc ss pop gs jae addb scas mov (bad) lret rcr (bad) in repz add push adc inc dec push pop bound jbe test lods mov ret (bad) fucom jmp add arpl js xchg add add aad jecxz icebp clc incl or xor ds dec push pop popa push mov mov mov (bad) jecxz out repz incb unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov add (bad) jmp add unpcklps pop and das xor ds dec dec push pop pop imul mov add add mov rcr fucom call add or sub inc dec push push pop bound jb jl xchg add and inc inc dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and cs ds dec dec push pop pop arpl jae jle mov add mov mov xlat fsub out repnz add or push sbb es cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps push and cs ds dec dec push pop pop arpl add test movsb test (bad) leave into rcr fsubp jmp add or sub inc add push pop bound jno jl xchg lods mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop imul mov mov rcl fucom out repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb cmpsb stos mov mov aad loopne ljmp add mov (bad) jecxz out repz incb or sub xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub inc dec push pop add imul (bad) xchg cltd sahf movsb test ret leave into rcr fsubp jmp add push adc push and sub dec add pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop popa insb jb jl xchg lods mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add add add push adc sbb cmp push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne addb add rol rcl fneni(8087 in lock cli incl pop and das xor aas inc dec dec push pop pop imul mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fneni(8087 out lock sti add and aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz add unpckhps pop and cmp dec push push add imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz std add or sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out cmc cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz std add or sub inc dec push push pop bound jno add mov cmpsl lods mov mov ret rcl fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz std add or sub inc dec push push pop bound add jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es cmp dec push push pop pusha imul addb movsl stos mov mov aam (bad) jmp add unpcklps push and xor ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov rcr fucom out repnz add or add adc sbb daa sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fnop in lock cli incl and aas inc dec dec push pop pop fs je jg mov test ret leave into rcr fsubp call add or sub xor cmp pop pop arpl jb jge xchg cmpsl lods mov mov add ret rcl fsub out icebp idiv add or push sbb es cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps push and das xor aas inc dec dec push pop pop imul mov lods mov mov fcomp loop in repnz add or adc sbb cmp pop pop bound insl jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or add sbb daa sub aaa cmp inc dec push push pop bound jno jl xchg stos mov mov (bad) fneni(8087 out lock sti add and aas inc dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out repz incb or adc push and xor ds dec add pop pop imul mov scas mov mov add add int fcomp jecxz in repz std add or daa sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add or push sbb and inc inc dec push push pop pop gs jne addb movsl stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae js orl test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fneni(8087 in lock cli add pop and aas inc dec dec push pop pop fs je jg mov movsl stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test ret enter fsubp call add or sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov add aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) in out repz incb or adc push and xor cmp pop pop bound jb jge xchg cmpsl lods mov mov xlat add jecxz out repz std add or sub dec dec push push pop bound jb jl add pushf mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test ret leave into aam fsubp jmp add push adc push and add add cmp inc dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb add sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fildl add out icebp idiv add or push sbb sub xor push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out cmc cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov fcomp jecxz in repz incb or adc sbb cmp pop pop bound jb jge xchg add xchg xchg popf mov mov xlat fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp adc das xor dec push pop pop fs jo jnp test movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc sbb cmp inc dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 out lock add and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop imul mov scas mov mov aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov popf mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 out lock sti add and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec add add pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or daa sub inc dec push push pop popa insb jb jl xchg lods mov mov (bad) fsub out icebp idiv add pop or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fneni(8087 out lock sti add and inc inc dec push push pop pop gs jne addb movsl stos scas mov mov fcmovu in out hlt stc incl unpcklps push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov aad loopne ljmp adc das xor dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push add add imul mov scas mov mov (bad) jecxz out repz incb or adc sbb cmp pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb cmpsb stos mov mov (bad) fneni(8087 in lock sti add add adc xor dec push pop pop gs je jg mov test (bad) lret fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jae jle mov movsb test ret leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov add add rcl fucom call add or daa sub inc dec push push pop bound jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc das xor dec push pop pop add add je jg mov test ret leave into rcr fsubp call add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat add jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or add pop sbb aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and aas inc dec dec push pop pop imul mov mov mov add into rcr fsubp call add push adc sbb cmp inc dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub out repnz add or pop sbb add sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub ss inc dec push push pop popa imul add add addb cmpsb stos mov mov aad loopne jmp cmc sti add and aas inc dec push push pop pop gs jne jg mov stos scas mov mov (bad) in out hlt stc incl push adc push and xor ds dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or add sub inc dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul ja (bad) xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov add add fnop in lock cli add pop and aas inc dec dec push pop pop fs jne jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or xchg cltd sahf movsb test ret enter fucom call repz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb add sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg add add mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and aas inc dec dec add push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add push adc push and cs ds dec dec push pop pop arpl add test movsb stos scas mov mov (bad) in out hlt stc incb push adc push and cs aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov add rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov add (bad) int3 rcl fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha add jo jnp xchg cmpsb stos mov mov aad loopne jmp cmc cli add and aas inc dec dec push pop pop gs je jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test (bad) leave into aam fsubp jmp add push adc add push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add add adc push and cs ds dec dec push pop pop arpl jae jle mov test ret enter fsubp call add push adc sbb cmp pop pop bound jb jge mov test mov mov add int fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 out lock add or adc xor push push pop pusha imul jnp test movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push add imul addl mov rol rcl fndisi(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fnop in out cmc cli incl pop and add das xor aas inc dec dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add unpcklps push and cs ds dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fadds fucom call add or sub dec dec push pop pop bound jb jge xchg add ret enter fucom call add push adc push and sub dec dec push pop pop bound jb jge mov cmpsl lods mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound jb jge xchg add cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor add add inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into rcr fsubp jmp incl unpcklps pop and das xor dec push pop pop fs je jg mov test ret leave into rcr fsubp call add or sub dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub out add add repnz add or pop sbb daa sub ss inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fneni(8087 out lock add or push sbb sub xor push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpckhps pop and aas inc dec dec push pop pop gs je jg mov add mov aam fsubp jmp add push adc push and xor add inc dec dec push pop pop gs je jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or daa sub inc add dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fneni(8087 in lock sti add and inc inc dec dec push pop pop gs je jg mov stos scas mov mov fcmovu in out hlt stc add add unpcklps pop and cs ds dec dec push pop pop arpl jae jle add movsl stos scas mov mov fcmovu in out hlt stc incl unpcklps push and cs ds dec dec push pop pop arpl jae jle mov test ret enter fsubp call add push adc sbb cmp pop pop arpl jb jge mov test add lods mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 out lock add and inc inc dec push push pop add push jne addb movsl stos scas mov mov (bad) fneni(8087 out lock add or adc xor push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov (bad) jecxz out repz incb or push adc push and sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fneni(8087 in lock add or push sbb and inc inc dec push push pop pusha imul addb movsl stos scas mov add add fcmovu in out cmc cli incl add sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt cli add pop and aas inc dec dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl add add js orl test mov mov fcomp loop in repnz std add or sub dec dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb daa sub ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 in lock sti add and sub xor push push pop pusha add jl xchg stos mov mov (bad) fneni(8087 out lock add or adc xor cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp xor inc dec dec push pop bound jbe test mov mov loope out idiv add adc and add add xor push pop gs jae addb mov mov jecxz repnz incl or xor cmp arpl ja test mov loopne in hlt cld add adc and cs pop pop data16 jbe test aad cltd mov fucom in repz add adc pop es cmp dec push pop arpl js mov add rcr fsubp call add or sub inc dec push push pop bound jno jl xchg lods mov mov (bad) fndisi(8087 out lock add adc pop es push pop pusha outsl ja test mov fsubp jmp add push adc xor inc dec dec push pop imul mov test mov ret fcomp out idiv push push adc cmp inc dec push add imul cwtl lahf cmpsb scas mov ret fchs call or sbb sub sub cmp push pop pusha push (bad) xchg sahf cmpsb lods mov (bad) int3 rcr loop icebp stc add adc push and dec dec push pop imul xchg mov mov loope out idiv add sub ss pusha add add jl mov mov ret xlat fsubp in repz add movhps inc inc dec push pop gs je orl mov (bad) in cmc cld add adc and xor inc dec dec push pop imul mov scas mov mov (bad) jecxz out repz incb or sub inc dec push push pop bound jb jl xchg add cmpsb lods mov mov (bad) fsub out add idiv add or pop sbb es cmp dec push push pop pusha imul addb movsl stos scas mov rol rcl fcmovu in out hlt cli incl unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec add add add add pop popa imul addb movsl stos mov mov aad loopne ljmp unpcklps pop and cs pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov aad loopne jmp cmc sti add pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repz std add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp adc das xor aas inc dec dec push pop pop imul mov add aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp or adc xor dec push pop add add push je jg mov test ret leave into rcr fsubp call add or sub dec dec push pop pop bound jb jge xchg lods mov mov (bad) fndisi(8087 out lock add and sub xor push push pop pop gs je jg mov test ret leave into rcr fsubp call add add add daa sub dec dec push pop pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or adc xor cmp dec push push pop pusha gs jne jg mov test (bad) leave into aam fsubp jmp add or sub inc dec dec push pop pop arpl jae jle mov test mov mov rcl fucom out repnz add or pop sbb es ss inc dec push push pop popa imul addl mov rol iret aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop imul mov lods mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop popa add add jno jnp xchg movsl stos mov mov aad (bad) ljmp unpcklps push and cs ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or pop sbb es cmp dec push push pop pusha imul addb mov stos mov mov (bad) fneni(8087 in lock sti add add add adc das xor dec push pop pop imul (bad) xchg cltd sahf movsb test ret enter fsubp call add or daa sub inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test add mov (bad) jecxz out repz std add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or adc xor dec push pop pop fs je jg mov test les lret fcmovu in out hlt cli incl unpcklps push and xor ds dec dec push pop pop arpl add push (bad) mov test mov mov xlat fucom out repnz add or push sbb es cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or add add sbb daa sub ss inc dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps push and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fucom out repnz add add daa sub inc dec push push pop popa insb jno jl xchg stos mov mov rol rcl fneni(8087 out lock sti add pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or daa sub inc dec push push pop bound jno jl xchg stos mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop imul outsl je jg mov test ret enter fsubp call add or sub inc dec push push pop bound jb jl xchg stos mov mov (bad) fndisi(8087 out lock add and aas inc dec add pop pusha imul mov (bad) in hlt sti add adc push es push pop pusha push ja xchg mov rol aad jecxz icebp clc incl or xor ds dec push pop pop imul (bad) xchg cltd lahf movsb test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop add push (bad) mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov stos scas mov mov (bad) jecxz out repz std add or add xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop imul mov scas mov mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop imul mov mov add add (bad) in out hlt stc incl push adc push and cs ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop arpl jae jp test movsl stos scas mov mov fnop in lock cli add pop and inc inc dec push push pop pusha imul add jnp xchg cmpsb stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov aad loopne jmp cmc sti add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jno jl xchg lods mov mov add add fsub out icebp idiv add or pop sbb daa sub aaa cmp push pop bound jb jg lea mov jecxz icebp clc incl push adc cmp push push pop outsb je addl (bad) lret loopne out cmc std add sub cmp dec push pop pop fs je jg mov stos mov mov (bad) fneni(8087 out icebp idiv add add or push sbb daa cs dec push push pop bound ja xchg mov ret lret sub inc inc dec push pop arpl jp mov mov ror xlat fsubp in repz add movhps es push pop add outsl ja xchg mov aad loopne ljmp adc push and xor ds dec dec push pop pop bound jb addl add add rcl fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov add fsubp ljmp push and das xor inc dec push push pop pusha imul jp test movsb stos scas mov mov (bad) jecxz out repz std add push adc sbb aaa cmp push pop popa insb jno jl xchg mov mov fcomp jecxz in repz std add or sub inc dec push push pop bound jno jl xchg stos mov mov (bad) fneni(8087 in lock cli add and add dec push pop pop fs je jg mov test ret enter fucom call add or sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and das xor dec push push pop pusha gs jne jg mov test (bad) leave into rcr add add jecxz out repz incb or sub dec dec push pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock add das xor inc inc dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop imul mov sahf mov mov fcomp jecxz in repz std add or daa sub inc dec push push pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec add pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or add sbb cmp pop pop bound jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt add add incb or adc push and sub dec dec push push pop bound jb jl xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or adc xor dec push pop pop fs je jg mov test (bad) leave into rcr fsubp call add or sub inc dec push push pop bound jno jl xchg add rol rcl fneni(8087 out lock sti add and aas inc dec dec push add imul orl test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec add pop arpl jae jge mov cmpsl lods mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add add push or push sbb sub cmp dec push push pop pusha imul addb mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps push and cs ds dec dec push pop pop arpl jae jle mov test add add add enter fucom call add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 in lock add or adc xor push push pop pop gs je jg mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat (bad) ljmp adc das xor aas inc dec dec push pop pop imul mov mov mov fcomp jecxz out repz std add push adc push and sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or add pop sbb daa sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fnop in lock cli add and aas inc dec dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov mov mov fcomp jecxz in repz std add or sub xor cmp pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fnop in lock cli add pop and aas inc dec dec push pop pop fs add add jp test movsb test (bad) leave into aam fsubp jmp add push adc push and sub dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov (bad) add loope in icebp idiv add or push sbb sub ss dec dec push pop pop imul mov mov mov fcomp jecxz out repz std add or sub dec dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 in lock sti add and aas inc dec dec push pop pop fs je jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or pop sbb add sub dec dec push pop pop bound jb add add lea lods mov mov xlat fsub out repnz add or pop sbb es ss inc dec push push pop popa imul addb cmpsb stos mov mov aad loopne jmp cmc sti add and aas inc dec dec push pop pop fs je jg mov stos scas mov mov (bad) in out hlt stc incl push adc push and add xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec push push pop pusha gs jno jnp xchg test mov mov fadds fsubp call add or sub dec dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or push sbb es ss inc dec push push pop popa imul addb movsl stos mov mov (bad) fneni(8087 out lock sti add and inc inc dec dec push pop pop gs je jg mov add test (bad) leave into aam fnop in lock cli add pop and aas inc dec dec push pop pop fs je jg mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa add inc dec push push pop popa data16 jno jl xchg stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz add repnz std add or and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or pop sbb aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 out lock std add or sub dec dec push pop pop bound jb jge xchg add pushf mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec add dec push pop pop arpl outsl je jle mov test ret leave into rcr fsubp call add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop popa imul addl mov rol rcl fneni(8087 in lock add cli add pop and aas inc dec dec push pop pop gs je jg mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop popa insb jno jl xchg add add ret rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop popa data16 jno jl xchg lods mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push add add gs je jg mov stos scas mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test ret leave into rcr fsubp call add or sub inc dec push push pop bound jno jl xchg lods mov mov (bad) fsub out icebp idiv add add or push sbb sub xor push push pop pusha gs jne addb movsl stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test ret enter fucom call add or daa sub inc dec push push pop bound jno jl xchg stos mov add rcl fsub out icebp idiv add or push add daa sub ss inc dec push push pop popa imul addb movsl stos mov mov aad loopne jmp cmc cli add pop and aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or sub dec dec push push pop add bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov pop arpl jp mov mov (bad) lret rcr loopne out idiv mov in hlt cld add adc and xor aas inc dec push pop gs je (bad) mov mov ret xlat fucom jmp add add stc add push adc cmp dec push add insb jae (bad) mov mov ret xlat fucomip icebp stc incl adc xor push push pop pusha gs jne addb test int fninit ljmp unpckhps pop and das xor dec push pop pop fs je jg mov test ret enter fucom call add std add or daa sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add or adc xor inc dec dec push pop arpl jbe orl mov rol rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov rcr (bad) in hlt incl or push add daa sub ss inc dec push push pop popa imul addb cmpsb stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha gs je addb stos mov ret fcomp out idiv add cmpsl scas mov (bad) int fnclex ljmp push and push push pop insw add jne test (bad) (bad) jmp or sbb daa das ss dec dec push pop popa push lea mov notl sbb sub cmp inc dec push pop gs je orl mov fucom in cmc std add sub ss dec push pop gs jne test mov in hlt cld add adc es cmp push pop data16 jbe test mov (bad) out idiv add sub cmp push pop bound jp mov mov loopne lock add movhps daa das aaa aas inc dec push pop data16 jbe test mov (bad) lret rcr loop repnz add adc and xor inc dec push pop pusha push (bad) xchg sahf cmpsb scas mov vpmullw in hlt cld add adc and xor inc dec push pop arpl jp mov mov fsubp out idiv push or xor pop fs je orl mov jecxz repnz add adc and xor inc dec push pop pusha push cwtl mov (bad) into (bad) fsubp in cmc std add sub cmp dec push pop imul mov mov loope lock add adc and das aaa aas inc dec push pop data16 jne add jge mov ret (bad) jmp adc and xor inc dec push push pop outsl ja xchg mov vpmullw in hlt cld add adc and xor inc dec push pop pusha push (bad) xchg sahf cmpsb scas mov vpaddq in repz add adc and xor inc dec push pop pusha outsl ja xchg mov vpaddq in hlt cld add adc and xor inc dec push pop popa imul add addb cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul ja addl mov rol rcl fndisi(8087 out lock add and inc inc dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop add and das xor aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test ret leave into rcr fsubp call add push adc sbb cmp pop pop arpl jae jge mov test mov mov xlat fsub out idiv add or push sbb sub xor push push pop pusha imul addb movsl stos mov mov aad fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov add fcmovu in out hlt stc incl unpcklps push and cs ds dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add push adc push and xor add add ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or adc sbb cmp pop pop bound jb jge xchg test mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb cmpsb stos mov mov aad loopne add add jmp cmc cli add pop and aas inc dec dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec push push pop pusha imul addb mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb add xchg lcall rol rcl fcmovu in out cmc cli incl pop and das xor aas inc dec dec push pop pop imul mov scas mov mov (bad) jecxz out repz incb or adc sbb cmp pop pop bound jb jge xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb cmpsb stos mov mov aad loopne jmp cmc cli add pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp add ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in add add clc std add or daa sub inc dec push push pop bound jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov add add mov fcomp loop in repnz std add or sub inc dec push push pop bound jb jl xchg scas mov mov (bad) in out hlt stc incb unpcklps pop and add xor dec push pop pop gs jne jg mov test (bad) leave iret aam fsubp jmp add push adc push and xor ds dec dec add pop arpl jae jle mov test mov mov fcomp loop in repnz add or sub dec dec push push pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or pop sbb es aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 in lock sti add and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl unpcklps push and cs aas inc dec dec push pop pop imul mov stos scas mov mov (bad) in out hlt stc incb or adc push and sub dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fneni(8087 in lock sti add and inc inc dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop add je jg mov test ret leave into rcr fsubp jmp add adc sbb sub xor push push pop pusha gs jne addb movsl stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test ret enter fsubp call add or add sbb push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or daa sub inc dec push push pop bound jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov add vaddsubps fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb or adc push and xor ds dec dec push pop pop arpl jb jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa add add jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb es cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push add sub xor cmp pop pop arpl jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov (bad) jecxz out repz incb or adc push and sub dec dec push pop pop bound jb jge xchg cmpsl lods add int add fcomp jecxz out repz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub ss inc dec push push pop popa imul addl mov rol rcl fnop in lock sti add and aas inc dec dec push pop pop fs je jg add test (bad) iret (bad) fucom in repnz add push adc cmp dec push pop arpl js xchg scas mov ror (bad) fucom jmp stc add adc pop es push push pop fs jae orl (bad) into aad in repnz add movhps and dec push pop pusha outsb jbe test mov (bad) fninit add repnz add adc push es add xor inc dec push push pop data16 jbe test mov ror xlat fsubp in repz add adc push and dec push pop bound jnp mov mov ret rcr loop icebp clc incl push adc cmp push pop bound ja test mov (bad) int fsub in repz add adc and das aaa ds dec push pop arpl mov mov fnclex ljmp adc pop es push push pop outsb ja test mov (bad) int fucom jmp stc add push adc cmp dec push pop imul xchg mov mov jecxz icebp clc incl or xor aas inc dec push pop bound jns xchg mov rol aad jecxz repnz add movhps inc dec push pop pop outsb jne test add (bad) jmp or xor inc dec dec push pop gs je (bad) mov mov (bad) (bad) call or sbb sub ss popa push lea ror fcomp out idiv add sub cmp push pop pusha outsl jbe test mov loopne out idiv add adc and das ss dec push pop popa push outsl jbe test mov ret lret aam jecxz repnz add adc and das ss dec push pusha outsb jne orl mov fsubp in hlt cld add adc and xor inc dec push pop popa data16 jno jl mov test mov mov ficoml sbb and das xor aas inc dec dec push pop pop fs jne jg mov mov mov fcmovu in out hlt stc add add add unpcklps pop and das xor aas inc dec dec push pop pop fs je (bad) mov mov loopne lock add movhps inc dec push pop pusha outsb jbe test mov ret (bad) jmp adc and das aaa ds dec push pop arpl jns mov mov (bad) fsub ljmp pop daa cs dec push pop imul mov add int3 rcr loop icebp stc add adc pop es arpl jp mov mov (bad) into (bad) fsubp in cmc std add adc and xor inc dec push pop popa push (bad) xchg sahf movsl lods mov (bad) lret rcr loop icebp stc add movhps es dec push pop arpl jnp mov mov (bad) into aad jecxz icebp stc add movhps and dec push pop popa push add jg mov mov loopne lock pop push push sbb inc dec push push pop outsb jne test mov loope lock add movhps es gs je orl mov (bad) fnclex jmp adc push es pop gs je test mov loop repz add adc and xor inc dec push push pop add add jo jg mov mov in hlt cld add adc and xor inc dec push pop pusha outsl ja xchg mov ret lret loope out idiv add adc and das ss dec push pop imul mov mov (bad) iret (bad) fucom in cmc cld add adc and cs pop arpl jns xchg mov ret fcomp out cmc cld add sbb sub add das cmp push pop pop insw jne test mov (bad) fsub ljmp and das ss popa imul pushf movsb stos mov ret fabs jmp push push sbb inc dec push pop bound jns mov mov (bad) int3 aad in repz add adc pop es push pop imul mov mov (bad) (bad) add repz cli add adc and xor inc inc dec push pop insw jbe test mov in repz add adc pop es pop popa imul popf ror xlat fsub out repnz add or pop sbb es aaa cmp inc dec push push pop popa data16 jae (bad) mov mov (bad) int3 rcr loop icebp stc add movhps and dec push push pop insw je orl mov ror xlat (bad) out idiv push push adc cmp push pop pusha outsl ja xchg mov ret lret loop icebp stc add adc and das ss dec push pop arpl jns mov mov (bad) int3 rcr loop icebp stc add adc push es push pop bound jns mov mov (bad) int fucom out cmc std add sub cmp push add push xchg mov ret fchs out idiv push push push sbb inc dec push pop pusha push lea mov fsubp in hlt sti add adc pop daa cs bound jp mov mov (bad) int3 rcr loop icebp clc incl push adc cmp push pop pop outsb jbe test mov ret lret rcr loop repnz add sub cmp dec push pop gs jne test mov loopne out idiv add sub aaa ds dec push pop popa imul mov (bad) into (bad) fsubp in cmc cld add adc and xor inc inc dec add gs je orl mov (bad) int3 aam in repnz add movhps and dec push pop arpl jns mov mov (bad) into (bad) fsubp in hlt cli add adc pop daa das ss gs je orl mov (bad) iret (bad) fsubp in cmc cld add sub cmp inc dec push pop gs je orl mov loop icebp clc add movhps inc dec push pop popa push lea mov (bad) out idiv add push adc push and xor aas inc dec dec push pop pop imul mov add add mov fcmovu in out cmc cli incl unpckhps pop and inc inc dec push push pop pusha imul addl mov rol rcl fndisi(8087 out icebp idiv add or add sbb es ss inc dec push push pop bound jb jge xchg test mov mov xlat fucom call add or sub dec dec push pop pop imul add jl xchg test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push pop pop bound jb jge mov test (bad) leave into aam fsubp jmp add push adc push and cs aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in lock cli incl and add add cmp dec push push pop popa imul addl mov ret rcl fsub out repnz add or sub xor ds dec dec push pop pop fs jne jnp xchg cmpsb lods mov mov xlat fsub out icebp idiv add or push sbb es ss push pop bound jb jge xchg test mov mov fneni(8087 in add lock add or push sbb sub cmp dec push push pop bound jno jl xchg lods mov mov fcomp jecxz out repz incb unpcklps pop and das xor dec push pop pop fs je jg mov lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp pop pop arpl jae jle mov test add scas mov mov fnop in lock sti add and inc inc dec push push pop popa insb jb jge mov stos mov ret fcomp out add incb sub cmp push pop popa imul lahf cmpsl scas mov enter out idiv pop adc and dec push pop bound js xchg mov (bad) into aad in repz add adc pop add add ss gs jne xchg mov ret (bad) jmp movhps es dec push pop fs je orl mov jecxz hlt cld add adc and xor inc add pop imul mov mov loopne lock push or push sbb es ss inc dec push push pop popa insl jb jge xchg cmpsl lods mov mov (bad) int3 rcl fsub out repnz add or pop sbb daa sub aaa cmp dec push push pop insw jne test mov (bad) out idiv add sub cmp dec push push pop pusha imul addb cmpsl lods mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jb jge mov test mov mov add add int (bad) jecxz out hlt stc incl unpcklps push and cs aas inc dec dec push pop pop imul mov scas mov mov fcmovu in out hlt stc incl adc sub cmp dec push push pop popa imul addl mov rol rcl fsub out repnz std add push adc push and xor ds dec dec push pop pop fs jne add add pushf mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub ss inc dec push push pop bound jb jge xchg test mov mov (bad) in out hlt stc incb push adc push and das xor ds dec dec push pop pop arpl je jg mov test (bad) aad loopne jmp cmc cld add push adc sbb cmp add pop pop bound jb jge mov test (bad) leave iret aam (bad) ljmp unpckhps pop and inc inc dec push push pop popa insb jb jl add mov mov (bad) jecxz out repz incb or adc push and xor ds dec push push pop pop gs jne addb cmpsb stos mov mov xlat fsub out repnz add std add push adc push and cs aas inc dec dec push pop pop imul mov scas mov mov fcmovu in out cmc cli add daa das aaa ds dec push pop imul mov mov fsubp out cmc std push push adc ds dec push pop imul mov mov fsub jmp stc incl push adc cmp dec push pop arpl jp mov mov (bad) out idiv add adc and xor inc inc dec push pop insw jne test mov loop icebp stc add adc sbb sub cmp dec push pop insw jne test mov (bad) out cmc std add adc and xor aas inc dec push pop gs je test mov ror xlat fsubp in cmc cld add adc and xor add add inc dec push push pop outsb jbe xchg mov ret fchs call adc pop es pop bound jp mov mov (bad) fninit jmp cli add adc and xor aas inc dec push pop addr16 addb mov (bad) int fucom in hlt cld add adc and xor inc inc dec push pop insw jne test mov ret lret loope out idiv push push adc sbb inc dec push pop bound jns xchg mov vpaddq in hlt sti add adc and xor inc inc dec push pop data16 jne test mov ret fabs jmp adc pop daa cs dec push pop fs jae (bad) mov mov vpmullw in cmc cld add adc and xor inc inc dec push pop outsb jbe test mov (bad) into aad in hlt add sti add adc and push pop pusha push (bad) xchg popf movsb lods mov ret lret rcr loop icebp stc add adc and das ss arpl jnp mov mov (bad) out idiv add sub cmp push pop pusha push (bad) xchg lahf cmpsl scas mov vpmullw in repz add sbb sub cmp push pop pusha insl je (bad) mov pusha cmp imul add orl jno jle lea mov loope out idiv push or sub ds dec push pop fs jae (bad) mov mov fsubp in cmc std add adc and xor inc dec push push pop insw jne orl mov loope lock pop push push sbb inc dec push pop bound js mov mov vpaddq jecxz repnz add add adc pop daa das aaa aas inc dec push pop pusha insw jne test mov ret fcomp out idiv add sub cmp push pop popa imul pushf movsb lods mov (bad) lret rcr jecxz repnz add adc and das aaa ds dec push pop fs jae orl mov (bad) out idiv add sub inc dec push pop bound jp mov mov (bad) into (bad) fiadd add add in hlt cld add adc and xor inc dec push pop pusha outsl ja xchg scas mov fsubp out cmc std add sub cmp push pop bound jns mov mov (bad) fucom jmp cli add adc and xor inc dec dec push pop imul mov mov (bad) out idiv add sub cmp push pop popa imul mov add fucom in hlt cld add adc and xor inc dec push pop pusha push (bad) xchg sahf movsl lods mov (bad) int3 rcr jecxz repnz add adc pop daa das ss dec push pop data16 jne test mov (bad) lret rcr loope icebp clc add movhps daa das ss dec push pop arpl jp mov mov (bad) lret rcr loope out hlt cli incl pop and das xor aas inc dec dec push pop pop imul add jns orl test mov mov fsubp jmp stc add movhps and dec push pop arpl jp mov mov (bad) iret xlat fsubp in hlt cld add adc and xor inc dec push pop pop fs je jg mov test (bad) leave into rcr fsubp add out hlt stc incl push adc push and cs ds dec dec push pop pop arpl jae jle mov add mov rcr fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc add dec push push pop popa data16 jno jl xchg stos mov mov (bad) fneni(8087 in lock sti add pop and aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test adc sbb daa sub aaa cmp inc dec push push pop popa data16 jno add xchg cmpsl lods mov mov xlat fucom call add or sub add add push pop pop bound jb jge xchg cmpsl lods mov mov xlat fucom call add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp testl cld add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov rcr fucom call add or sub dec dec push pop pop bound jb jge mov cmpsl add add (bad) int xlat fucom out repnz add or pop sbb cmp push pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or daa sub inc dec push push pop add bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp push pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or pop add cmp pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or add adc sbb aaa cmp inc dec push push pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov add lret rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov aad loopne ljmp adc xor dec push pop pop add jbe addl mov rol rcl fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul add addb movsl stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and das xor ds dec dec push pop pop imul mov scas mov mov (bad) jecxz out repz incb or adc push and add add xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov rcr fsubp call add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov (bad) jecxz out repz incb or adc push and xor cmp pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jl xchg add lods mov mov xlat fucom out repnz add or daa sub aaa cmp inc dec push push pop bound jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or daa sub aaa add inc dec push push pop bound jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov aad loopne jmp cmc sti add or push sbb sub xor push push pop pusha imul addb movsl stos mov mov aad loopne ljmp lock cli add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad (bad) ljmp unpckhps pop and aas inc dec dec add pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps and aas inc dec dec push pop pop gs je jg mov add mov aam (bad) jmp add push adc push and das xor aas inc dec dec push pop pop imul mov mov mov (bad) in out repz incb or adc push and cs ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp call add push adc sbb cmp inc dec dec add pop arpl jae jge mov test mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop bound jb jl xchg test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add push or push sbb sub cmp dec push push pop popa data16 jno jl xchg stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pop gs jne addb movsl stos mov mov rol rcl fcmovu in out cmc cli incl pop and aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in add cmc cli add and inc inc dec push push pop pusha gs jne addb cmpsb stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or adc xor push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add and add dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg stos mov mov int3 rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc das xor dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam (bad) jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov (bad) xchg lcall mov fcmovu in out cmc cli incl pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl pop and add xor dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt stc incl pop and aas inc dec dec push pop pop fs je jg mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam fild add jmp add push adc pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov fadds (bad) jmp add push adc push and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov add xchg cwtl sahf mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge mov cmpsl lods mov mov jecxz out repz incb or adc push and xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec add push pop pop gs jne jg mov stos scas mov mov fcmovu in out cmc cli add and cmp dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop popa insb jb jl xchg lods mov mov xlat fsub out repnz add pop or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test add mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop imul add stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb cmpsb lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul add add jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jge mov test mov mov (bad) jecxz out repz incb or adc push and add add add add xor ds mov fcomp jecxz in repz std add or daa sub aaa cmp inc dec add pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps pop and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and add aas inc dec dec push pop pop gs je jg mov test ret enter fucom call add or pop sbb es cmp dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz out repz incb or sub inc dec push push pop bound jno jl xchg stos mov mov aad (bad) add ljmp unpcklps push and xor ds dec dec push pop pop bound jb jge xchg lea lods mov mov (bad) fneni(8087 out lock cli incl pop and xor ds dec dec push pop pop bound jb jge xchg stos mov mov aad (bad) ljmp push adc sbb aaa cmp push pop popa imul addl add mov stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop pusha imul addb movsb test (bad) leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov fcomp jecxz in repz std add or pop sbb es add xor cmp dec push push pop pop gs je jg mov test mov fcomp jecxz in repz std add or pop sbb es cmp dec push push pop pusha gs je jg mov test ret enter fucom out icebp idiv add or push sbb and aas inc dec dec push pop pop imul mov lods mov mov add xlat fsub out icebp idiv add pop and das xor ds dec dec push pop pop arpl jb jge xchg cmpsb lods mov mov aad loopne ljmp push adc push and sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam fsubp jmp add or daa sub aaa cmp inc dec push push pop pusha gs add jg mov test ret leave into rcr fucom call incb or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) jecxz in repz std add or pop sbb es cmp dec push push pop pusha gs je jg mov test ret enter fucom out icebp idiv add or add add add push sbb and aas inc dec dec push pop pop imul lea lods mov mov (bad) fsub out lock add pop and das xor ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fneni(8087 in lock cli incl pop and xor ds dec dec push pop pop bound jb jl xchg stos mov add mov aad (bad) ljmp push adc add and das xor ds dec dec push pop pop arpl jb jge xchg stos mov mov aad loopne ljmp unpcklps push and xor ds dec dec push push pop bound jno jl xchg movsl stos mov mov aad (bad) ljmp push adc push and sub inc dec push push add imul addb movsb stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop pusha gs jne jg mov test ret enter fucom call add or push sbb sub cmp dec push push pop pop imul mov lods mov mov xlat fucom out icebp idiv add add push or push sbb and aas inc dec add pop pop fs je jle mov test mov mov xlat fucom out icebp idiv add or push sbb and aas inc dec dec push pop pop imul lea lods mov mov (bad) fndisi(8087 out lock sti add pop and cmp inc dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out hlt stc incb push adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov movsl stos mov mov aad loopne jmp cmc sti add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb es cmp dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or add add sbb daa sub ss inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov add rcl fsub out add clc std add or sub dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop imul add mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add unpcklps pop and das add add aas add push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha gs jne addb cmpsb stos mov mov aad loopne add out lock add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb add add mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or daa sub inc add push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jb jge mov test mov mov fcomp jecxz jmp incb push adc push and cs ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas add add aam (bad) ljmp unpckhps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt cli incl adc xor push push pop pop gs jne addb movsl stos scas mov mov fcmovu in out cmc cli incl and cmp dec push push pop popa add add jno jnp xchg cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es aaa cmp inc dec push push pop bound jno jl xchg lods mov mov xlat fsub out icebp imull enter add int fcomp jecxz out repz incb unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov (bad) fsub out repnz std add or sub xor ds dec dec push pop pop imul nop xchg lcall rol rcl fsub out icebp idiv add or sub add push pop pop fs jne jg mov stos scas mov rol rcl fsub jmp cli add adc sbb inc dec dec push pop imul movhps inc inc dec push pop arpl js xchg mov mov loope lock add adc and xor cmp pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 out lock sti add and add add aas inc dec dec push pop pop imul mov mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and xor ds dec dec push pop pop bound jb js orl cmpsl lods mov mov int3 rcl fsub out icebp idiv add or push sbb sub xor dec push pop pop fs je jg mov test ret enter fucom out repnz add or pop sbb es aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out repz incb or adc sbb cmp pop pop bound jb ja addl mov rol rcl fneni(8087 in out cmc cli incl unpcklps push and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out lock add pop and aas inc dec dec push pop pop fs jns xchg lcall sub cmp push pop pusha outsb je (bad) mov mov ret xlat fucom jmp add stc add or xor ds dec push pop popa push xchg stos mov mov rcl fsub out icebp idiv add or push sbb sub cmp dec add pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or pop sbb aaa cmp pop pop bound jb jge mov test mov mov fcomp loop in repz std add or sub xor cmp pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add push adc push and cs ds dec dec push pop pop fs jne jg mov stos scas mov mov fcmovu in out cmc cli add and inc inc dec push push pop pusha gs jbe addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb and sub aaa cmp inc dec push push pop bound jb jge xchg mov mov (bad) jecxz out repz incb push adc push and cs ds dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out cmc cli incl pop add add aas inc dec dec push pop pop gs jne jg mov stos mov mov aad loopne ljmp adc xor push pop pop arpl jae jge mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs add addb cmpsb stos mov mov (bad) fndisi(8087 out icebp add cld add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg lods mov mov fcomp loop in repnz std add or sub orl test ret add into rcr fsubp call add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repnz std add or sub xor cmp pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or sub inc dec push push pop bound jb add add xchg cmpsl lods mov mov xlat fsub out icebp testl adc sbb cmp pop pop arpl jae add mov test ret enter fsubp call add push adc sbb cmp inc dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or add add sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov (bad) in out hlt stc incb add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop imul mov mov mov add add fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jae jge mov test mov mov fcomp loop in repnz add or daa sub inc dec push push pop bound jb jge xchg lea lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push add bound jb jge mov test mov mov fcomp loop in repnz std add or sub inc dec push push pop bound jb jl xchg test mov mov xlat fucom out repnz add or daa sub add add push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or daa sub aaa cmp push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or sbb cmp pop pop arpl jae jge mov add (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge mov add mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push add add popa imul addl mov rol rcl fneni(8087 out icebp add cld add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add add push or push sbb es ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock sti add and sub cmp dec push push pop pusha imul addl mov add add fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fneni(8087 in lock sti add and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop arpl add add jns orl test mov mov fcomp loop in repnz add or daa sub aaa cmp push pop bound jb jl xchg lods mov mov (bad) fsub add in repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push add add es cmp dec push push pop popa data16 jno jl xchg stos mov mov (bad) fndisi(8087 out lock add or push sbb sub cmp dec push push pop popa imul addb cmpsb stos mov mov (bad) fneni(8087 out lock sti add and inc inc dec push push pop pusha imul addb movsl stos mov mov add rcl fnop in lock cli add and aas inc dec dec push pop pop gs jne addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das add push push pop pusha gs jne addb movsl stos mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul add add fwait mov mov (bad) fneni(8087 in lock sti add and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc xor dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out cmc cli incl pop and xor aas inc dec dec push pop pop fs je jg mov mov rol rcl fneni(8087 out lock add or adc xor push push pop pusha gs jne addb mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 out add lock sti add and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov fnop in lock cli add and aas inc dec dec push pop pop fs je jg mov test (bad) leave iret aam (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop imul mov add add mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fadds fsubp jmp add unpcklps pop and xor dec push push pop popa data16 jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb es ss inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul addb cmpsb stos mov mov (bad) fneni(8087 in lock sti add and sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp add add and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out cmc cli incl pop and inc inc dec push push pop pusha gs jne jg mov nop xchg fwait mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb movsl stos mov mov rol iret aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl add jae jle mov test ret enter fucom call add or sub dec dec push pop pop arpl jae jge mov stos scas mov mov flds loopne ljmp unpckhps pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov (bad) in out hlt stc incl unpcklps add add pop and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret enter fsubp call add push adc sbb cmp pop pop arpl jb jge mov test mov mov add rcr fucom call add or daa sub inc dec push push pop bound jb jge xchg test mov mov xlat fucom out repnz add or daa add dec dec push pop pop bound jb jge mov test mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb add xchg test mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fneni(8087 out lock sti add and aas inc dec dec push pop pop fs je jg mov test (bad) leave iret aam (bad) jmp add push adc push and add cs ds dec dec push pop pop arpl jae jle mov test (bad) leave into rcr fsubp jmp add pop and aas inc dec dec push pop pop fs je jg mov test (bad) lret fcmovu in out hlt stc incl unpcklps pop and das xor aas inc dec dec add pusha gs jne jg mov stos scas mov mov fiaddl add in lock cli add pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out cmc cli incl pop and das xor dec push pop pop fs je jg mov test (bad) leave iret aam (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov add mov mov (bad) jecxz out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov mov mov (bad) jecxz out repz incb or adc push and xor add inc dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound jb jge mov cmpsl lods mov mov xlat fucom out repnz add idiv add or pop sbb daa sub inc dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jb jge mov test mov mov xlat fucom out add clc incb or adc push and xor ds dec dec push pop pop arpl jae jle mov add test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp inc inc dec push push pop popa insb jb jge xchg cmpsl lods mov mov xlat fsub out repnz add add pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb and inc inc dec push push pop pusha gs jne addb movsl lods mov mov add add (bad) int3 rcl fsub out icebp idiv add or push sbb es cmp dec push push pop popa imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub xor push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc das xor dec push pop pop gs add add jg mov stos scas mov mov fcmovu in out cmc cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) lret fcmovu in out hlt stc incl unpcklps pop and sub xor dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out cmc cli incl pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) leave iret aam (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop imul mov scas mov mov add add add fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jp test movsb test (bad) leave iret aam push adc cmp inc dec push pop pusha insw je orl (bad) int in hlt add sti add adc pop es push pop pusha push mov (bad) lret rcr loopne out idiv add adc and sub push push pop imul mov mov ror (bad) fucom in repz add movhps and dec push push pop gs jae orl enter in repz add movhps inc inc dec push pop imul xchg add stos mov mov loop icebp idiv push or xor ds dec push pop popa push mov mov ret lret loopne out cmc cld add adc and cs pop pop insw je (bad) mov add (bad) call or sbb sub ss dec push pop imul mov mov ror (bad) fsubp in repz add adc push and inc dec push pop pop insw je (bad) mov mov ret xlat (bad) in cmc cld add adc pop es push pop pop insw je (bad) mov mov ror (bad) fucom in repz add movhps es push push pop insw je (bad) mov mov ret xlat fsubp in repz add movhps inc dec dec push pop fs jae orl lret rcr add loope out idiv add sub cmp inc dec push pop bound ja test mov (bad) fnclex jmp push adc cmp inc dec push pop arpl js xchg mov mov fsub ljmp sbb sub aaa ds dec push pop bound ja test mov (bad) lret rcr loopne out cmc cld add adc pop es push push pop gs add add orl enter in hlt sti add adc push and dec push pop pop insw je (bad) mov mov ret fcomp out hlt cld add adc and das ss arpl jp mov mov ret lret (bad) in cmc cld add adc pop es push push pop insw je (bad) mov mov (bad) lret rcr loopne out idiv add add and xor aas inc dec push pop imul mov mov ret xlat (bad) in hlt sti add adc push and dec dec push pop imul mov mov ror (bad) fucom jmp hlt sti add adc pop es push pop pop outsb jne orl mov (bad) fnclex jmp movhps inc dec push pop popa imul pushf movsb stos mov add enter out testl and xor inc dec dec push pop imul mov mov rol aad in repz add adc pop sub ss pusha outsb jne orl mov vpaddq loop lock incl or xor aas inc dec push pop gs jb orl iret (bad) loopne lock push or xor aas inc dec push pop arpl add add xchg mov mov loop icebp cli add movhps inc dec dec push pop imul xchg mov rol (bad) fucom in repz add adc and xor cmp dec push pop fs jae (bad) mov mov ret fcomp out hlt sti add adc push and dec push push pop gs jae (bad) mov mov ret fcomp in hlt sti add adc add and xor aas inc dec push pop bound js xchg mov ror xlat fsubp in hlt sti add adc push and dec push pop pusha outsl jbe test scas mov (bad) (bad) call or sbb sub aaa aas inc dec push pop arpl js xchg mov rol aad in repnz add movhps inc inc dec push pop gs jae (bad) mov mov add enter in repz add adc push and dec push push pop outsb jne orl mov ret lret (bad) out hlt sti add adc pop es push pop add jnp mov mov enter call movhps daa das ss dec push pop data16 jbe test mov (bad) lret aam jecxz repz add adc cmp push pop pop outsl ja xchg add mov (bad) into fsub call push adc cmp push pop popa push jns xchg mov aam in cmc std add adc and xor inc inc dec push pop arpl add mov mov ret xlat fsubp in hlt cld add adc and cs pop pop insw je (bad) mov mov (bad) iret (bad) fsubp out clc incl push adc push and cs aas inc dec push push pop pusha gs jne orl cmpsl lods mov mov fsubp out idiv add adc pop and das xor aas inc dec dec push pop pop fs jne addb cmpsb lods mov ror fchs out cmc incb or xor inc dec push pop pop outsl jbe test mov fucom ljmp pop push and xor inc dec push pop popa imul mov add add lret rcr jecxz repnz add push adc and xor inc dec push pop bound jp xchg mov (bad) lret rcr in repnz add adc and xor aas inc dec push pop arpl add mov ror xlat fsubp in hlt sti add adc and das aaa ds dec push pop imul mov mov (bad) into (bad) fucom jmp stc add adc push es push pop pusha push xchg cltd mov (bad) into fsub jmp cli add adc sub nop movsl lods mov cli add push cmp dec push pop arpl jns mov mov ror xlat hlt cld add adc and cs pop pop data16 jae orl enter loope in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jb jl xchg lods mov mov add add int3 rcl fsub out icebp idiv add or daa sub dec dec push push pop fs jae orl rol rcl fsub out icebp idiv add or pop sbb aaa cmp push pop bound jb jge mov test mov mov fcomp jecxz in repz incb or adc sbb inc dec dec push pop gs jae orl add mov fsubp out cmc std add adc sbb cmp pop pop gs jne test mov mov jecxz repz add adc pop daa cs bound jns mov mov ret fabs call push push sbb inc dec push pop popa imul movsl lods mov ror xlat fsubp in repz add adc and xor ds dec push pop add outsb jne test mov loopne out cmc cld add adc and xor inc dec push pop pusha push (bad) xchg sahf cmpsb scas mov vpmullw in idiv add sub cmp dec push pop fs je orl mov loope icebp stc add movhps and dec dec push pop outsb jne test mov (bad) out idiv push or xor inc dec add push pop bound js mov mov incl movhps inc dec push push pop gs jne orl mov (bad) lret rcr loop icebp clc add movhps inc dec push pop bound js mov mov (bad) into aad in hlt cld add adc and cs pop bound js xchg mov ret fchs call movhps es add push pop popa push mov mov fucom in hlt cld add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz icebp idiv add or push sbb es aaa cmp inc dec push push pop bound jne test mov mov fucom call add or daa sub aaa cmp inc add add pop imul mov mov mov fcomp jecxz out repz std add or sub inc dec push pop pop arpl jae jge mov test mov mov rcr fsubp call add push adc push and cs inc dec push pop pusha push test mov mov fcomp jecxz icebp clc add push push sbb add aas inc dec push pop bound jns test stos mov rol rcr loopne out idiv push push sbb sub aaa ds dec push pop bound js xchg mov rol rcl fsub out icebp idiv add or daa sub aaa cmp dec dec push pop pop bound jb jge xchg cmpsl lods mov mov loopne out cmc sti add and sub xor push push add imul addb cmpsb stos mov mov aad loopne ljmp sbb inc dec push pop popa imul lahf movsl stos mov mov xlat fsub call pop movhps es push pop popa push mov mov loopne out idiv push or xor inc dec push pop fs je test mov ror add add fsubp in cmc cld add adc and xor aas inc dec push pop gs je orl mov fsubp in cmc std add sub cmp dec push pop arpl jp mov mov loope lock add adc and xor inc dec push push pop outsb ja xchg mov mov in hlt cld add adc and xor inc dec push push pop insw jbe test scas add fsub ljmp pop daa das ss dec push pop arpl jge mov rol (bad) fsubp in cmc cld add adc and xor aas inc dec push pop gs je add lods mov ret lret rcr loope icebp stc add adc pop daa das ss dec push pop fs je orl mov fucom in repz add adc pop daa das aaa ds dec push pop fs je addl add mov mov (bad) out cmc std add sub cmp dec push pop data16 je orl mov loopne out idiv push or xor inc dec dec push pop insw jb jge mov stos mov mov xlat fldl jecxz in repz std add or daa sub aaa cmp push pop bound jb jge mov mov ror xlat fild out repnz add or sbb aaa cmp push pop bound jb jl xchg lods mov mov fcomp loop in repnz pop push push sbb inc inc dec push push pop popa data16 jb jle lea rol xlat (bad) in hlt cld add adc and das aaa ds dec push pop arpl js xchg mov ret fsub out idiv add add add sub cmp push pop pop outsb jne test scas mov mov fsubp call or push push and dec push push pop bound jb jl xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or add sbb sub cmp dec push push pop pusha gs jne addb movsl stos scas mov mov (bad) in out hlt stc incb or add adc pop and xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad loopne jmp stc add movhps es ss dec push pop gs jae (bad) mov ret fsub out idiv add pop pop add add push pop pop fs jae orl int (bad) in repz add adc and das ss imul mov mov ret fsub out idiv add daa cs pop imul mov mov ror xlat (bad) out cmc cld add adc and xor inc inc dec push pop imul mov mov ret lret roll add fnclex ljmp push and dec push pop pusha insw jne orl mov (bad) fnclex call or xor dec push pop popa push mov mov fsubp in cmc std add adc and das ss popa push xchg cltd mov (bad) int fninit ljmp sbb inc dec push pop popa imul popf movsb stos mov ror fsub call movhps daa das ss dec push pop gs je orl mov (bad) out idiv add sub cmp push push pop insw je test scas mov add into (bad) fsubp in cmc std add adc and xor inc inc dec push pop outsl jbe test mov (bad) out cmc cld add adc and xor aas inc dec push pop add add add add add jp mov mov ret lret rcr loop icebp stc add movhps es push pop bound jp mov mov loopne out idiv add sub cmp push push pop data16 jne test mov loopne out idiv push or xor inc dec push pop pop outsb jne test mov rol (bad) fsubp in hlt cld add adc and xor add inc dec push pop pusha outsl ja xchg mov (bad) out cmc std add adc and xor inc dec dec push pop insw jne orl mov (bad) int fsub jmp cli add adc and das aaa aas inc dec push pop fs jae orl rcr jecxz repnz add adc pop daa das ss dec push pop arpl jp mov mov inc dec push pop imul mov add add ret aad loope out hlt cli add or xor ds dec push push pop imul test stos mov mov jmp or adc xor push pop pusha insw je (bad) mov mov mov fsub jmp or pop pop and inc dec push pop pop gs jb jg mov mov ret aad loope add hlt sti add or cs inc dec push pop pop gs jb jle mov mov mov fucom in hlt sti add push adc and cs inc inc dec push pop pusha insw jae orl (bad) lret rcr fsubp jmp idiv add sub cmp push pop pop outsl jbe test mov ror xlat (bad) out stc add adc and xor inc dec push pop pusha push add add xchg mov (bad) rcr loopne icebp stc add adc pop es push pop bound je jg mov stos mov mov aad (bad) ljmp adc xor push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and das xor dec push pop pop fs je add add test movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) in out hlt stc incl unpcklps pop daa sub inc dec push push pop bound jb jl xchg scas mov mov (bad) jecxz out repz incb or sub add add ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb cmpsb stos mov mov (bad) fneni(8087 add jmp cmc sti add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb fwait mov mov aad loopne ljmp adc xor push push pop pusha gs jne addb movsl stos scas mov rol rcl fneni(8087 in lock sti add or push sbb sub xor push push pop pusha gs jne addb movsl stos mov mov aad (bad) ljmp unpckhps pop and aas inc dec add pop pop fs je jg mov stos scas mov mov (bad) in out hlt stc incl unpckhps pop and aas inc dec dec push pop pop gs je addb cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp loop in repnz std add add add or sub dec dec push add imul mov scas mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incl unpcklps push and cs ds dec dec push pop pop fs jo jnp test movsl stos mov add mov rol rcl fneni(8087 in lock sti add or push sbb sub cmp dec push push pop popa imul addl mov rcr fsubp jmp add push adc push and sub dec dec push pop pop arpl jae jge aad loope in icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov add add fsub out icebp add std add or daa sub aaa cmp inc dec push push pop bound jb jge mov mov (bad) out idiv add and inc inc dec pop pop fs je jg mov lods mov rol iret aam (bad) jmp cli add adc and das aaa ds dec push pop arpl insb jae (bad) mov mov vpmullw out add add idiv add adc and xor inc inc dec push pop imul mov mov (bad) into (bad) fucom jmp cli add adc pop daa cs imul xchg cltd mov (bad) into (bad) fsubp in cmc std pop push push push and dec push pop popa imul sahf movsl lods mov ret rcl fucom call add movhps sub aaa ds dec push pop pop imul xchg lcall mov (bad) fsub jmp or das ss bound jns mov mov fsubp in cmc cld add sbb sub aaa aas inc dec push pop gs je test mov loope icebp stc add adc pop daa das aaa aas inc dec push pop insw je orl mov rol rcl fsub out icebp idiv add or sbb add sub cmp dec push push pop pusha gs jne addb lods mov mov (bad) fndisi(8087 jmp pop or pop sbb sub ss dec push pop arpl jns mov mov (bad) out idiv push or xor inc dec push pop popa imul lahf test mov (bad) into (bad) fsubp in cmc std add adc and xor dec dec push pop gs jne test lods add add int xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and xor cmp pop add add push xchg cmpsb lods mov mov (bad) fneni(8087 out lock add or adc xor push push pop pusha gs jne addb cmpsb stos mov mov xlat fucom call add or sub inc dec push push pop bound je jg mov test (bad) leave iret aam fsubp jmp add push adc sbb and sub dec dec push pop pop arpl jae jge mov test mov mov fcomp add jmp add unpcklps pop and das xor dec push pop pop imul (bad) xchg cltd lahf movsl stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop gs jne addb cmpsb stos mov mov add rcl fneni(8087 out icebp idiv add or push sbb es aaa cmp inc dec push push pop popa imul addb cmpsb stos mov mov (bad) fneni(8087 out lock sti add and inc inc dec dec push pop pop fs je jg mov stos mov mov (bad) fndisi(8087 out lock add or adc xor cmp inc dec push push pop popa insb jno jl addl mov ret rcr fsubp jmp push or push sbb sub add inc dec push push pop popa imul addl mov rol rcl fneni(8087 out lock sti add and aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and sub add xor cmp pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop pusha imul addb movsl stos scas mov mov fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu add in out hlt stc incl unpcklps pop and das xor ds dec dec push pop pop arpl jae jle test movsb test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg add add stos mov mov aad loopne jmp cmc cli add and inc inc dec dec push pop pop gs je jg mov test (bad) leave into aam fsubp jmp add and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and xor add add inc dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fneni(8087 in lock add add cli add and aas inc dec add pop popa imul addb movsl stos mov mov aad loopne ljmp unpcklps pop and xor cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd sahf add movsb test ret leave into rcr fsubp call add or sub dec dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop popa imul addl mov rol rcl fneni(8087 in lock cli add and aas inc dec dec add fs je jg mov movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pusha gs jne jg mov stos mov mov aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test ret enter fsubp call add or sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat faddl jecxz in repz std add or sub inc dec push push pop bound jb jl xchg test mov mov fcomp jecxz in repz std add or sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop add pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov (bad) jecxz out repz incb or adc sbb cmp pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or add add pop sbb add inc dec push push pop bound jb jl xchg lods mov mov fcomp loop out repz std add or daa sub inc dec push push pop popa insb jno jl xchg stos mov mov aad loopne ljmp adc das xor dec push pop pop fs je jg mov test add fcomp jecxz out repz incb or adc sbb cmp pop pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or adc sbb daa sub aaa cmp inc dec push push pop popa imul addb cmpsb stos mov mov aad loopne ljmp adc das xor aas inc dec dec push pop pop add imul mov scas mov mov fcomp jecxz out hlt cld jnp xchg popf movsb stos mov shl add adc and cs pop pusha outsb jne test mov mov loope out idiv add adc and das aaa ds dec push pop popa push mov mov (bad) lret rcr loopne out cmc cld add adc and cs pop pop insw je (bad) mov mov ret fcomp out hlt sti add adc push and dec dec push pop gs jae orl (bad) iret (bad) fucom jmp stc add movhps sub add inc dec dec push pop imul xchg mov rol aad jecxz icebp clc incl or xor ds dec push pop bound ja test mov mov in repnz add push adc add add xor inc inc dec push pop gs jae orl lret loopne out idiv add adc and xor inc dec dec push pop gs jae orl lret loope repnz incl or xor inc dec dec push pop fs movsl mov rol (bad) fucom in repz add adc and xor ds dec pop pusha push mov mov (bad) fnop in lock cli incl add add and sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps push and add xor dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp adc das xor dec push pop pop xchg mov ror (bad) fucom jmp stc add push adc and xor inc dec dec push pop fs jae orl lret add add call push adc cmp dec push pop imul mov mov ret lret in repz add adc pop es push pop pusha push lea ret lret (bad) in hlt sti add adc and cs pop fs je orl mov fsub jmp stc add push adc cmp push pop pop data16 jne orl add mov (bad) int fsub ljmp add daa cs pop pusha outsb jbe test mov fucom jmp cli add adc pop daa das aaa ds dec push pop arpl jp mov mov (bad) int fsub in hlt cld add adc and xor inc dec dec push pop outsb jne test mov loopne out idiv push or xor inc dec push pop bound add add jns mov mov vpaddq loop lock pop movhps es push pop bound js mov mov (bad) int3 rcr loop idiv add sub cmp push pop popa push mov mov (bad) out cmc std add sub cmp inc dec push pop imul mov mov (bad) lret rcr loope lock incl or xor cmp push pop popa push (bad) xchg add (bad) into aad in hlt cld add adc and xor inc dec dec push pop data16 jne test mov loope lock push push adc cmp push pop popa imul sahf movsl lods mov (bad) int3 aam jecxz icebp stc add adc pop es arpl jns mov mov (bad) into (bad) fsubp in cmc cld add add sbb sub cmp push pop popa push (bad) xchg sahf movsl lods mov ret lret rcr loope lock add movhps inc dec push pop pusha push mov mov loope lock add adc pop es arpl jns mov mov (bad) into (bad) fucom in cmc cld add adc and xor inc dec dec push pop gs je test mov ror fsub call add add clc add adc and das add aas dec push pop popa push mov mov (bad) out idiv add sub cmp push pop pop insw jne orl test mov mov fcomp jecxz in repz incb or sub dec add pop pop imul xchg sahf movsl lods mov ret lret rcr loope out idiv push or xor inc dec add add pop data16 je orl mov (bad) into aam loop out idiv add adc and xor aas inc dec push pop imul mov mov (bad) lret rcr loope lock push or xor inc dec dec push pop gs jae (bad) mov mov (bad) lret rcr loop lock add sub cmp push pop pop outsl ja xchg mov ret fsub out idiv add add add sbb sub cmp inc dec push pop gs jae orl int3 aam in repnz add movhps es push pop popa imul pushf movsb stos mov ror xlat (bad) out cmc cld add adc and xor inc dec push push pop insw je (bad) mov scas mov (bad) int fsub jmp cli add adc pop daa cs bound jns mov mov les into aad loope out cmc cld add adc and xor inc dec dec push pop insw jne test mov fucom jmp sti add adc and das cmp dec push pop gs je (bad) mov mov fsub ljmp push es pop arpl jns mov mov (bad) int fsub in repz add adc and das aaa ds dec push pop bound js xchg xchg pushf mov leave rcl fsubp in repz add adc and cs pop popa push lea mov in repz add adc and xor inc dec push pop popa imul mov leave rcr loopne lock add ltr pop es inc dec push pop popa push lea mov loopne out idiv push or xor inc inc dec push pop add jb orl int fsub jmp cli add adc pop daa cs bound js xchg mov ret (bad) ljmp pop es pop popa imul lahf cmpsb scas mov (bad) lret rcr loope out idiv add sub cmp push push pop gs je (bad) mov mov (bad) int3 rcr loop icebp clc add movhps add add ss fs je test mov ror xlat fsubp in cmc cld add adc and xor inc dec push pop pop outsb jbe test mov ret lret loopne out idiv pop push adc cmp push pop pusha push add mov (bad) lret rcr jecxz icebp stc add push sbb sub cmp push pop pop outsb ja xchg mov ret (bad) jmp add add or xor inc dec push pop pusha push mov mov fsubp in hlt cld add adc and cs pop pop gs jae (bad) mov mov (bad) int fsub jmp sti add adc and xor inc dec dec push pop insw jne test mov add ljmp push es pop imul mov mov movb add int fldl out idiv add sub cmp push pop pop outsb jne test mov ror fsub call or xor inc dec push pop popa push mov mov loopne out idiv add sub cmp dec push pop gs je orl mov (bad) out idiv add sub cmp push pop pusha outsl ja xchg add ret lret rcr loop icebp clc add movhps es pop arpl jp mov mov (bad) int fsub in hlt cld add adc and xor inc dec push pop popa imul mov leave rcr loopne in cmc cld add adc and xor inc inc dec push pop data16 jge mov lods mov mov fcomp jecxz in repnz std add or sub add xor ds dec push pop pusha outsb jbe test mov fucom in repz add adc and cs ds dec push pop arpl jp xchg mov mov jecxz repnz add movhps and dec push pop pop insw je orl mov (bad) fsub ljmp push es push pop popa push mov mov add loopne out idiv add sub cmp inc dec push pop gs je orl mov vpaddq loop repnz add adc and cs dec push pop arpl jns xchg mov ret lret loopne lock pop push push sbb inc dec push push pop push xchg mov ror xlat fucom in cmc cld add adc and xor inc dec dec push pop gs je jge mov add ror xlat fsubp in cmc std add adc and xor inc dec push pop pop outsl jbe test mov loopne out idiv add sub cmp push pop pusha outsl ja test mov loopne out idiv push or xor inc dec push pop popa imul sahf movsl lods mov ret lret rcr loope out idiv add adc and xor inc inc dec push pop arpl imul mov mov ret lret (bad) out cmc std add sub cmp dec push pop fs jae orl mov loope out idiv add sub cmp dec push pop data16 jne test mov ret xlat fsubp in add std add sub cmp dec push pop pusha outsl jbe test mov (bad) out add decl movhps add add cmp push pop pop outsb jbe test mov ret lret loopne out idiv add sub cmp push pop pop outsb jne test mov fsubp in repz add adc pop es push pop bound ja xchg mov ret lret loopne out idiv pop push push push and dec push pop popa imul sahf cmpsb scas mov vpmullw in hlt std add adc and das aaa aas inc dec push pop arpl jp mov mov int3 aam loop repnz add adc pop es pop bound jns mov mov (bad) lret rcr loope lock pop push adc cmp dec push pop bound js xchg mov (bad) lret rcr loop icebp stc add movhps es push pop popa push mov mov fcomp in cmc cld add adc and das aaa ds dec push pop fs je orl mov (bad) out idiv add adc and xor inc dec push pop pop outsl jbe xchg mov ret fabs jmp adc pop daa das ss dec push pop fs je orl mov (bad) into (bad) fsubp add idiv add sub cmp push pop popa imul lahf cmpsl add scas mov (bad) int3 aam jecxz repnz add adc and das ss dec push pop arpl jp mov mov (bad) lret rcr jecxz repnz add adc pop es pop arpl jp mov mov (bad) lret rcr loope icebp clc add movhps es push pop arpl jp mov mov vpaddq jecxz repnz add adc and xor inc dec push pop pusha outsb jbe add add stos mov ret (bad) jmp cli add adc and xor ds dec push pop gs je orl mov (bad) fninit jmp cli add adc and xor ds dec push pop fs jae orl (bad) into (bad) fucom jmp stc add push adc cmp inc dec push pop arpl jns xchg lods mov ret fcomp out hlt sti add adc and xor add inc dec push push pop push (bad) xchg sahf test mov (bad) (bad) call or sbb sub cmp inc dec push pop gs jae orl leave rcl fucomip out clc add adc pop es bound js xchg mov ret lret rcr loopne out idiv push or xor inc dec push pop bound jns xchg mov ret fcomp out cmc std add add adc and das ss pusha outsb jne test mov ror fcomp out cmc cld add adc and cs pop pusha outsb jne test scas mov (bad) (bad) call push adc cmp push pop pusha push lea mov in repz add adc and xor inc dec push pop bound js xchg mov add ret fsub call or xor inc dec push pop pusha push mov rol fcomp out idiv push push adc cmp push push pop insw jne orl mov ret lret (bad) in idiv add adc and cs pop pop insw je (bad) mov mov ror (bad) fucom jmp cli add adc push and dec dec push pop gs jae orl (bad) into aad in repnz add push adc cmp dec push pop arpl js xchg mov (bad) out cmc std add adc and xor inc inc dec push pop fs je (bad) mov mov ret fcomp out idiv add sub cmp dec push pop bound ja test mov (bad) fnclex jmp or add sub cmp inc dec push pop bound js mov mov (bad) (bad) call or sbb sub aaa ds dec push pop arpl orl leave rcr loopne out idiv add sub cmp inc dec push pop bound ja test mov mov loope lock add sub aaa aas inc dec push pop gs jae orl lret add add fchs out cmc cld add adc and das aaa ds dec push pop bound ja xchg mov mov jecxz icebp clc incl push adc cmp dec push pop arpl js xchg mov rol aad jecxz repnz add movhps inc dec push pop pusha push xchg mov mov jecxz icebp clc incl movhps inc inc dec push pop fs add addb mov rol aad jecxz icebp clc incl or xor ds dec push pop bound ja xchg mov mov jecxz icebp clc incl push adc cmp inc dec push pop bound js xchg mov mov loope out idiv add adc and cs pop popa push mov mov (bad) lret rcr loopne out idiv add or xor inc dec push push pop gs jae orl lret loopne out idiv add adc and cs pop popa push mov mov (bad) lret rcr loopne out cmc std add adc and das ss pusha outsb jbe test test int3 rcr loop lock push or sbb sub cmp inc dec push pop bound ja xchg add add int fnclex jmp or sbb sub ss popa push mov mov (bad) int fnclex jmp or sbb sub ss popa push mov mov (bad) lret rcr loopne out cmc cld add adc and cs pop pop insw je test scas mov ret lret (bad) in hlt sti add adc push and add inc dec push push pop gs jae orl lret fsubp in hlt sti add adc pop es push push pop data16 jae orl enter in repz add adc push and dec push push pop imul mov lods mov ret xlat fsubp in repz add movhps inc dec dec push pop imul mov mov ror add add fucom jmp stc add push adc cmp inc dec push pop arpl js xchg mov mov jecxz icebp clc incl or xor ds dec push pop pusha outsb jne test scas mov (bad) lret rcr loope out idiv add adc and cs pusha outsb jne orl mov ret lret (bad) out idiv add adc and xor ds dec push pop popa push add outsl jbe test scas mov ret lret loopne in hlt sti add adc push and dec push push pop outsl jbe test mov mov jecxz icebp clc add push adc cmp push push pop insw je (bad) mov mov add int3 rcr loop lock add sub aaa ds dec push pop popa imul popf movsl lods mov ret fsub out cmc std add adc and xor ds dec push pop popa imul cltd mov (bad) lret rcr loopne out idiv add adc and cs pop pop insw je (bad) mov mov ret xlat fsubp in repz add push adc cmp inc dec push pop bound ja test mov (bad) lret rcr loopne out cmc cld add adc pop es push push pop imul xchg add movsb stos mov rol aad loop lock add sub cmp inc dec push pop arpl js xchg mov mov loopne out idiv add adc and cs pop pop gs jae orl movl in repz add movhps inc inc dec push pop arpl js xchg mov mov loopne out cmc cld add adc pop add add sub push push pop gs jae orl (bad) into aad jecxz icebp clc incl or xor ds dec push pop popa push mov mov ret lret fsubp in repz add adc push and dec dec push pop imul xchg mov mov loope lock add sub ss pusha outsb jne test scas mov add add out cmc sti add adc push and dec dec push pop imul xchg mov mov jecxz icebp clc incl or xor ds dec push pop popa push mov mov ret rcr loopne out cmc cld add adc pop es push push pop gs jae orl (bad) into aad jecxz icebp clc incl or xor add add add push pop popa push mov mov ret lret (bad) in hlt sti add adc push and dec dec push pop arpl js xchg mov mov loop lock add sub ss pusha insl je (bad) mov mov ror (bad) fucom jmp stc add push adc cmp inc dec push pop bound ja test mov (bad) lret add fchs out cmc cld add adc pop es push push pop gs jae orl enter jecxz icebp clc incl or xor ds dec push pop popa push mov mov add lret rcr loopne out cmc std add adc and cs pop pop insw je (bad) mov mov ror (bad) fucom jmp stc add push adc cmp inc dec push add add imul lcall lret rcr loopne out cmc cld add adc pop es dec push pop gs jae orl enter in repnz add push adc cmp inc dec push pop bound ja test mov (bad) lret rcr loopne out cmc cld add adc and sub push push pop gs jae orl (bad) into aad jecxz add add icebp clc incl or xor ds dec push pop popa push mov mov ret lret (bad) out cmc sti add adc and xor ds dec push pop popa push mov mov add int3 aam loop lock add sub aaa ds dec push pop arpl jp mov mov fucomip icebp clc incl push sbb sub aaa inc inc dec push pop gs jae (bad) mov add mov loop icebp clc incl movhps and dec push pop pop data16 jne test mov (bad) out idiv push push adc cmp push pop bound jns mov mov (bad) lret rcr loope lock add push push pop es pop popa push mov rcr loopne out add pop push and dec push push pop gs jb addb add mov mov ror (bad) fsubp in repz add adc push and add insl je (bad) mov mov ret xlat fsubp in repz add movhps inc inc dec push pop imul xchg mov rol aam jecxz icebp clc incb or xor ds dec push pop popa push mov mov ret lret (bad) in hlt sti add adc push and sub cmp dec push pop imul xchg mov mov loope out idiv add adc and das ss pusha outsb jne orl mov ret xlat fsubp in repz add movhps inc inc dec push pop bound js xchg mov mov loope out idiv add adc and cs pop pop insw je (bad) mov mov mov fsubp in repz add movhps inc inc dec push add insb jae orb mov rol aad jecxz icebp clc incl or xor ds dec push pop popa push xchg fwait mov (bad) (bad) call or sbb daa cs pop pop data16 jne orl mov ret xlat fsubp in repz add movhps inc inc add pop arpl js xchg mov mov loope lock add sub ss pusha outsb jne orl mov ret xlat fsubp in repz add movhps inc inc dec push pop imul xchg mov mov loop lock add sub ss pusha outsb jne orl mov ret xlat add fsubp in repz add movhps inc inc dec push pop add jns xchg mov mov loop lock add sub ss pusha outsb jne orl mov ret fcomp in repz add movhps inc inc dec push pop arpl jns xchg mov mov loop lock add sub ss pusha outsb je orl mov ror xlat fsubp in repz add movhps inc inc dec push pop arpl js xchg mov mov in repz add movhps inc inc dec push pop arpl js xchg mov mov loop add clc incl or xor aas inc dec push pop bound js xchg mov mov loop lock add add incb daa cs pop pop insw je (bad) mov mov ror (bad) fucom jmp stc add push adc cmp inc dec push pop bound ja test mov (bad) lret rcr loopne out cmc incb sub inc dec push pop arpl jg mov mov fsubp in repz add movhps inc dec push push pop gs je (bad) mov lahf cmpsb scas mov (bad) fnclex jmp or xor ds dec push pop bound ja test mov (bad) int3 rcr loopne out idiv add adc and xor ds dec push pop arpl jp mov mov ret lret loopne in cmc cld add adc sbb daa cs pop popa push lea rol xlat fsubp in repz add adc and cs add inc dec push pop pop insw je orl mov ret fcomp out hlt cld add adc pop es push push pop gs jne test scas mov (bad) (bad) call or sbb sub aaa ds dec push pop arpl js xchg mov (bad) int3 rcr loope lock add sub cmp push pop popa push mov mov (bad) lret rcr loop add icebp clc incl or xor aas inc dec push pop arpl js xchg mov ror (bad) fucom in repz add movhps daa cs bound js xchg mov ret out cmc cld add adc pop es push pop add outsl jns mov mov fsubp in hlt sti add adc and cs pop popa imul mov add mov enter call or xor dec push pop fs jae orl int3 rcr jecxz repz add adc and xor inc dec push pop pop data16 jne test mov call movhps daa das aaa aas inc dec push pop bound js mov mov (bad) into aad in repnz add adc and das ss inc dec push pop arpl jge mov stos mov ror fsub jmp adc and xor inc dec push pop pusha push mov mov loop repnz add adc and xor ds dec push pop imul mov mov ret fcomp out hlt cld add sub cmp push pop popa push lea mov loope lock add push adc cmp inc dec push pop gs add add (bad) mov mov (bad) int fnclex jmp movhps inc dec push push pop insw je (bad) mov mov ror (bad) jmp movhps inc dec push pop bound jns mov mov (bad) lret rcr loope out idiv add xor dec push pusha imul popf movsb stos mov rol aad jecxz icebp clc incl or xor add ds dec push pop popa push mov mov ret lret (bad) in repz add adc push and dec dec push pop imul xchg mov mov loop lock add sub ss dec add bound ja test scas mov ret lret rcr (bad) in hlt sti add adc push and dec dec push pop imul xchg mov mov add int fnclex jmp or sbb sub ss pusha outsb jne orl mov ret xlat fsubp in repz add movhps inc inc dec push pop arpl js xchg mov mov loope out cmc cld add adc pop es push push pop gs jae (bad) mov mov ror (bad) fucom jmp stc add push adc cmp inc dec add push pop bound ja test mov (bad) lret rcr loope out idiv add adc and cs pop pop insw je (bad) mov mov ror (bad) fucom jmp stc add push adc cmp add pop imul xchg mov mov loop lock add sub ss dec push pop popa push mov mov ret lret add (bad) in hlt sti add adc push and dec dec push pop imul xchg mov mov loop lock add sub ss pusha outsb jne orl mov ret xlat fsubp in hlt cli add movhps inc dec push pop arpl test mov ror (bad) fucom jmp stc add push adc cmp inc dec push pop bound ja jle mov mov (bad) lret rcr loopne out cmc cld add adc pop es push push pop gs jae orl (bad) into aad jecxz icebp clc incl or xor aas inc dec push add jno jg lea mov loope lock add adc and xor ds dec push pop popa push mov mov (bad) lret rcr loopne in hlt sti add adc push and dec dec push pop imul xchg mov mov loop lock add sub ss pusha outsb jne orl mov ret xlat fsubp in repz add movhps inc inc dec push pop arpl js xchg mov mov loop lock add sub xor pop pop outsb jne orl add ret fcomp out hlt sti add adc push and dec dec push pop imul xchg mov mov loop lock push or xor ds dec push pop add jo jle mov mov (bad) lret rcr loope out cmc cld add adc pop es push push pop insw je (bad) mov mov ror (bad) fucom jmp stc add push adc add sub cmp inc dec push pop bound ja test scas mov (bad) (bad) call or sbb daa cs pop pop gs jae orl (bad) into aad jecxz icebp clc incl or xor aas inc dec push pop popa push mov mov (bad) lret rcr loopne out cmc cld add adc pop es push push pop gs jae (bad) mov mov add fucom jmp stc add push adc cmp inc dec push pop bound jbe test scas mov ret lret loopne out cmc cld add adc pop es push push add insl je (bad) mov mov ror (bad) fucom jmp stc add push adc cmp dec push pop bound ja test mov (bad) lret rcr loopne out cmc cld add adc pop es add push push pop gs jae orl (bad) iret (bad) fucom ljmp sbb sub cmp inc dec push pop bound jbe test scas mov ret lret (bad) out hlt cld add adc pop es push push pop gs jae orl (bad) into aad jecxz icebp clc incl or xor ds dec push pop popa push mov mov ret lret add rcr (bad) in hlt sti add adc push and dec dec push pop arpl jns xchg mov mov loop lock add sub ss pop popa push mov mov ret lret (bad) in repz add adc push and dec dec push pop imul xchg mov mov loop lock add sub ss add add pop pusha outsb jbe test scas mov ret lret (bad) in hlt sti add adc push and dec dec push pop imul xchg mov mov loop lock add sub ss pusha outsb jne orl mov ret xlat fsubp in repz add movhps inc dec dec push pop imul xchg mov mov loop add jmp or sbb daa das ss pusha outsb jne orl mov ret xlat fsubp in repz add adc push and dec dec add gs jae orl (bad) into aad jecxz icebp clc incl or xor ds dec push pop popa push mov mov ret lret (bad) in hlt sti add adc push and dec push push pop gs add orl (bad) into aad jecxz icebp clc incl or xor ds dec push pop popa push mov mov ret lret (bad) in hlt sti add adc push and dec dec push pop imul xchg mov mov loop lock add sub ss pusha outsb jne orl mov ret xlat fsubp in repz add movhps inc inc dec push pop arpl js xchg mov mov loop lock add sub ss pop popa push mov mov (bad) lret rcr loopne out cmc cld add adc pop es push pop pop insw je orl enter in repnz add push adc cmp inc dec push pop arpl ja test mov mov (bad) lret rcr loopne out cmc cld add adc pop es push push pop gs jae orl enter in repnz add or xor aas inc dec push pop popa imul lcall lret rcr loopne out idiv add adc pop es push pop pop insw jae orl (bad) into aad jecxz icebp clc incl or add sbb sub aaa ds dec push pop bound jbe test scas mov ret lret (bad) in hlt sti add adc push and dec add pop insw je (bad) mov mov ror xlat fsubp in repz add movhps inc inc dec push pop arpl js xchg mov mov loope out idiv add adc and cs pop pop insw je (bad) mov movsl lods mov ret xlat fsubp in repz add movhps inc inc dec push pop arpl js xchg mov mov loop lock add sub ss pusha outsb jne orl mov ret xlat fsubp in hlt sti add adc sbb inc dec dec push pop imul xchg mov mov loop lock add adc and das add add cmp pusha outsb jne orl mov ret xlat fsubp in repz add movhps inc inc add pop gs jae orl enter in repnz add push adc cmp inc dec push pop bound ja test mov (bad) lret rcr loopne out cmc cld add adc and cs inc dec push push pop insw je orl add (bad) into aad jecxz icebp clc incl or xor aas inc dec push pop popa push mov mov (bad) lret rcr loopne out cmc cld add adc pop es push push pop gs jae orl enter in repnz add push adc cmp inc dec push pop bound ja test mov (bad) lret rcr loopne out cmc cld add adc pop es add add pop gs jae orl enter jecxz icebp clc incl or xor ds add pop arpl js xchg mov mov loope out idiv add adc and cs pop pop insw je (bad) mov mov ret xlat fsubp in repz add movhps inc inc dec push pop arpl js xchg mov mov add add loope out cmc cld add adc and cs pop pop insw jne orl mov ror (bad) fucom jmp stc add push adc cmp inc dec push pop bound js test mov mov loope out idiv add adc and cs pop pop insw je (bad) mov mov ror (bad) fucom jmp stc add push adc cmp inc dec push pop bound add add ja test mov (bad) lret rcr loopne out cmc cld add adc and cs add popa push mov mov ret lret (bad) in hlt sti add adc push and dec dec push pop imul xchg mov rol aad jecxz lock incl or xor cmp popa push mov mov ret leave rcl fsubp in hlt sti add adc push and dec dec push pop imul xchg mov mov loop lock add sub aaa ds dec push pop popa push mov mov ret lret (bad) in hlt sti add adc push and dec dec push pop imul xchg mov mov loope lock add adc and cs pop pop insw je add add movsl lods mov ror (bad) fucom jmp stc add push adc cmp add push pop arpl js xchg mov mov loope out idiv add adc and cs pop pop data16 jne orl mov ror (bad) fucom jmp stc add push adc cmp inc dec push pop bound ja test mov (bad) int3 rcr loope out idiv add or sbb es push pop pop data16 jae orl (bad) into aad jecxz icebp clc incl or xor aas inc dec push pop popa push mov mov ret lret (bad) in hlt cld add adc push and dec dec push pop imul mov mov rol aad jecxz icebp clc incl or xor ds dec push pop popa push mov cltd mov ret lret fsubp in hlt sti add adc push and inc dec push push pop gs jae orl (bad) into aad jecxz icebp clc incl or xor ds dec push pop bound ja test mov ret lret loopne out cmc cld add adc pop es push push pop gs jae orl (bad) into aad jecxz icebp clc incl or add add sub ss pusha outsb jne orl mov ret xlat fsubp in repz add adc push and dec dec push pop imul xchg mov mov loop lock add sub ss pusha push mov mov ret lret (bad) in adcl rcr loopne out cmc cld add adc pop es add pop pop insw je (bad) mov mov ret add (bad) in hlt sti add adc pop es push push pop gs jae (bad) mov mov ror (bad) fucom in repz add movhps lcall lret rcr loopne out cmc std add adc and cs pop pop insw jne orl mov ret xlat fsubp in hlt sti add adc push and add cmp dec push pop imul xchg mov mov jecxz icebp clc incl or xor ds dec push pop popa push mov mov ret lret (bad) in hlt sti add adc pop es push push pop gs jae orl enter in repnz add push adc cmp inc dec push pop bound ja xchg mov (bad) (bad) call or sbb daa add ds dec push pop popa push mov mov ret lret (bad) in cmc cld add adc pop daa cs pop pop insw je (bad) mov mov ror (bad) fucom jmp stc add push adc cmp inc dec push pop arpl js xchg mov mov loope out idiv add adc and cs push pop pusha outsb jne orl mov ret xlat fsubp in hlt cli add movhps and dec dec push pop imul xchg mov mov jecxz icebp clc incl or xor ds dec push pop popa imul lcall lret rcr loopne out cmc cld add adc pop es push push pop gs je (bad) mov mov ror (bad) fiadd add add in repz add movhps cmp push push pop imul xchg mov rol aad jecxz icebp clc incl or xor ds dec push pop bound ja test mov (bad) lret rcr loopne out cmc cld add adc pop es push pop pop insw je (bad) mov mov ror (bad) fucom jmp stc add push adc cmp inc dec push pop bound add jo jg mov test mov (bad) (bad) call or sbb sub ss mov mov ror (bad) fucom jmp stc add movhps inc dec dec push pop imul xchg mov rol aad jecxz icebp clc incl or xor aas dec dec push pop outsl jbe orl mov ret (bad) out hlt add sti add push imul loop repnz add movhps inc (bad) cwtl lahf ret into aad in repz add sub cmp dec push pop fs jae orl or sbb sub cmp inc dec push pop popa push mov mov ret lret (bad) in cmc cld add adc pop es push push pop insw je (bad) mov mov ror (bad) fsubp in repz add movhps inc inc dec push pop arpl js xchg mov mov loop lock add sub ss pusha outsb jne orl mov ret lret (bad) in hlt sti add adc push and dec dec push pop imul xchg mov rol aad jecxz icebp clc add push adc cmp inc dec push pop popa push mov add mov (bad) (bad) out idiv add adc and cs pusha outsb jne orl mov ret fcomp out hlt sti add adc push and dec dec push pop fs jae orl fsubp in repz add movhps inc inc dec push pop arpl jns xchg mov mov jecxz icebp clc incl push adc cmp inc add dec push pop bound ja test mov (bad) (bad) call nop xchg sahf movsl lods mov ret xlat fsubp in repz add adc pop es pop pusha outsb jne orl mov ret lret loopne out idiv add sub aaa ds dec push pop popa imul lcall int3 rcr loope out idiv add adc and cs pop pusha push add jge mov add (bad) call or sbb daa das ss pusha outsb jne orl mov ret xlat fsubp in repz add movhps inc inc dec push pop arpl js xchg mov mov loope out idiv add adc and cs popa push mov mov vpaddq loop lock add add sub aaa ds dec push pop popa push mov mov ret lret (bad) in hlt sti add adc and xor aas inc dec push pop bound ja test mov (bad) lret rcr loopne out cmc cld add adc pop es push push pop gs jae orl (bad) into aad jecxz icebp clc incl or xor ds dec push pop popa push mov xchg cltd mov mov loope out cmc std add adc pop es push push pop gs jae orl (bad) into aad jecxz icebp clc incl or xor ds dec push pop popa push mov mov ret xlat fsubp in repz add adc push and dec dec push pop imul xchg mov mov loop lock add add add and das ss pusha outsb jne orl mov ret xlat fsubp in repz add movhps inc inc dec push pop arpl js xchg mov mov loope out idiv add adc and cs pop pop insw je (bad) mov mov ror (bad) fucom jmp stc add or xor ds dec push pop bound ja test add (bad) (bad) call or sbb daa cs pop pop insw je (bad) mov mov ror (bad) fucom jmp stc add push adc cmp inc dec push pop bound ja test mov (bad) lret rcr loopne out cmc cld add adc pop es push push pop gs jae orl (bad) into aad jecxz icebp clc incl or add add aaa ds dec push pop popa push mov mov ret lret (bad) in hlt sti add adc push and dec dec push pop imul xchg mov mov loope out idiv add adc and cs pop pop insw je (bad) mov mov ror (bad) fucom jmp clc add or xor aas inc dec push pop bound ja test add mov (bad) (bad) call or sbb daa cs pop pop insw je orl mov ret xlat fsubp in repz add movhps inc inc dec push pop bound js test mov (bad) lret rcr loope out idiv add adc and cs pop pop insw je (bad) mov mov ror (bad) fucom jmp stc add push adc cmp add add push pop bound js xchg mov mov loope out idiv add adc and cs pop pop insw je (bad) mov mov ror (bad) fucom jmp stc add push adc cmp inc dec push pop bound ja test mov (bad) lret rcr loopne out cmc cld add adc pop es push push pop imul mov lods mov ror add iret (bad) fucom jmp stc add push push sbb sub cmp inc dec push pop arpl js xchg mov mov loope out idiv add adc and cs pop pop outsb jne orl mov ret xlat fsubp in repz add movhps inc inc dec push pop imul xchg mov mov loope out idiv add adc and das ss add add outsb jne orl mov ret (bad) fucom jmp stc add push adc cmp dec push pop arpl js xchg mov mov loope out idiv add adc and cs pop pop insw je (bad) mov mov ror xlat fsubp in repz add movhps inc inc dec push pop bound js xchg stos mov mov loop add lock add sub ss pusha push mov mov ret xlat fsubp in repz add movhps inc inc dec push pop arpl js xchg mov mov loop out idiv add sub ss pop insw je (bad) mov mov ror (bad) fucom jmp cli add movhps inc inc dec push pop arpl add js xchg mov mov loope out idiv add adc and cs pop pusha outsb jne orl mov ret xlat fsubp in repz add movhps inc inc dec push pop arpl js xchg mov mov loope out idiv add adc and cs pop pop insw je (bad) mov scas mov ret xlat fsubp in repz add adc push and dec dec push pop fs ret xlat fsubp in repz add movhps inc inc dec push pop arpl js xchg mov mov loop lock add sub ss pusha outsb jne orl mov ret xlat fsubp jmp stc add movhps inc inc dec push pop arpl js xchg mov mov add loop lock add sub ss pusha outsb jne orl mov ret xlat (bad) in hlt sti add adc push and dec dec push pop imul xchg mov mov jecxz icebp clc incl or xor ds dec push pop popa push mov mov (bad) lret rcr loopne add idiv add adc and cs pusha add outsb jne orl mov ret xlat fsubp in repz add adc push and dec dec push pop imul xchg mov rol aad jecxz icebp clc incl or xor ds dec push pop popa push mov mov ret lret loopne out cmc cld add adc pop es push push pop insw je (bad) mov mov ror (bad) fucom jmp stc add push adc cmp inc dec push pop arpl ja test mov (bad) (bad) call or sbb daa cs pop pop insw je (bad) mov mov ret xlat fsubp in repz add movhps inc dec dec push pop imul xchg mov mov loop add stc add push adc cmp inc dec push pop arpl ja add add test int3 rcr loope out idiv add adc and cs pop pusha data16 jne orl mov ret lret (bad) in hlt sti add adc push and dec push push pop imul xchg mov rol aad jecxz icebp clc add or xor aas inc dec push pop bound ja test mov (bad) lret rcr loope out idiv add adc add add and cs pop pop insw je (bad) mov mov ror xlat fsubp in repz add movhps inc inc dec push pop arpl js xchg mov mov loop icebp idiv push or xor ds dec push pop popa push mov mov ret lret (bad) in add std add adc and das ss pusha outsb jbe test add cmpsl scas mov ret lret (bad) in hlt sti add adc push and dec dec push pop gs jae orl (bad) into aad jecxz icebp clc incl or xor ds dec push pop popa push mov mov (bad) lret rcr loope out idiv add adc and cs pop pop insw je (bad) mov mov ror (bad) fucom jmp stc add push push sbb cmp dec push pop arpl js xchg mov mov loop lock add sub ss pusha outsb jbe test scas mov ret lret (bad) in hlt sti add adc push and dec dec push pop imul mov mov rol (bad) fucom jmp add add movhps inc inc dec push pop arpl js xchg mov mov add add int fnclex jmp or sbb sub aaa ds dec push pop popa push mov mov ret lret (bad) out cmc cld add adc pop es push push pop gs jae orl enter in repnz add push adc cmp inc dec push pop bound ja test mov (bad) lret rcr loopne out idiv add adc and das ss add outsb jne orl mov ret xlat fsubp in repz add movhps inc inc dec push pop imul xchg mov mov loop icebp idiv push or xor ds dec push pop popa push mov mov (bad) lret rcr loopne out cmc add add adc and das ss pusha outsb jne orl mov ret xlat fiadd add add in repz add movhps and dec dec push pop fs jae orl (bad) into aad jecxz repnz add push adc cmp inc dec push pop bound js xchg mov mov loop lock add sub ss popa push mov mov ret lret loopne out cmc cld add adc pop es push push pop gs jae add add mov mov mov jecxz icebp clc incl or xor aas inc dec push pop bound ja test mov (bad) lret rcr loopne out cmc cld add adc and cs pop pop insw je (bad) mov mov ror in repz add add pop push es cmp dec push pop gs jae orl (bad) into aad jecxz icebp clc incl or adc and xor aas inc dec push pop bound ja test mov (bad) lret rcr loopne out cmc cld add adc pop es push push pop insw je (bad) mov mov ror (bad) fucom jmp stc add push push sbb inc inc dec push pop arpl js xchg mov mov loop lock add sub ss pusha outsb jne test cmpsl scas mov ret lret (bad) in hlt sti add adc push es push push pop gs jae orl (bad) into aad jecxz icebp clc incl or xor aas inc dec push pop bound ja xchg mov mov loope out idiv add add sbb sub ss pusha outsb jne orl mov ret xlat (bad) in hlt sti add adc push and add cmp dec push pop imul mov mov rol aad jecxz icebp clc incl or xor aas inc dec push pop bound ja test mov (bad) lret rcr loopne out cmc cld add adc pop es push push pop gs jae orl enter in repnz add push adc cmp inc dec push pop bound ja test mov add add lret rcr loopne out cmc cld add adc pop es mov ret xlat fsubp in repz add movhps inc inc dec push pop arpl js xchg mov mov loop lock add sub ss pusha outsb add test mov (bad) lret rcr loopne out cmc cld add adc pop daa cs pop pop insw je (bad) mov add (bad) fucom jmp stc add push adc cmp inc dec push pop arpl js xchg mov mov loop lock add sub ss pusha outsb jne orl mov ret xlat fsubp in hlt sti add adc push and dec dec push pop imul xchg mov rol aad jecxz icebp clc incl or das aaa add add inc dec push pop popa push mov mov ret lret (bad) in cmc cld add adc pop es push push pop gs jae orl (bad) into aad in repnz add push adc cmp inc dec push pop bound add xchg mov mov loop lock push or xor ds dec push pop popa push mov mov ret lret add rcr (bad) in hlt sti add adc push and dec push push pop gs jae orl (bad) into aad jecxz repnz add or xor ds dec push pop bound jbe test mov (bad) lret rcr loopne out idiv add adc pop es pop pop insw je (bad) mov mov ror (bad) fucom jmp stc add push adc cmp dec push pop add jo jle mov mov (bad) lret rcr loopne out cmc std add adc and sub push pop pop insw je (bad) mov mov ror (bad) fucom jmp stc add push adc cmp dec push pop arpl add xchg mov rol aad jecxz icebp stc incl or xor aas inc dec push pop bound ja test mov (bad) lret rcr loopne add out cmc cld add adc and cs pop pop jg mov mov loop lock incl push adc cmp push push pop data16 ja test mov (bad) in hlt sti add adc and das ss dec push pop fs mov mov vpaddq in hlt cld add adc and xor outsl ja xchg mov ret lret loop icebp stc add add movhps inc dec push pop pusha push mov mov (bad) lret rcr loopne out idiv add and xor inc dec push push pop gs jne test mov loopne lock add movhps and dec push push pop insw je orl mov (bad) fnclex jmp or sbb sub ss popa imul popf movsb lods mov mov (bad) in out hlt stc incb or adc push and xor inc inc dec push push pop pusha gs jne addb stos mov mov fcomp in idiv add adc pop daa cs pop bound js xchg mov ror fcomp out idiv push or xor inc dec push pop arpl jp mov mov loope icebp stc add adc and xor cmp dec pop pusha push nop cwtl lahf cmpsl scas mov enter call adc and xor add push pop popa push jp mov mov out idiv pop movhps es mov ret fabs jmp push push sbb inc dec push push mov mov mov (bad) int3 rcr loopne in cmc cld add adc and das xor add pop data16 je orl mov ret xlat fsubp in repz add movhps inc inc dec push pop arpl js xchg mov mov loope lock add sub ss pusha outsb jne orl mov ret fcomp out hlt sti add adc push and dec dec push pop imul xchg mov mov jecxz lock incl or xor inc dec push pop pop data16 jbe xchg mov mov loop lock incl or xor inc inc dec push pop imul mov mov ret lret loope lock push push adc inc dec push pop pusha outsl jbe test mov loope icebp stc add adc pop daa das aaa aas inc dec push pop gs jae orl add rcr loopne out idiv add adc and das ss bound jl mov mov fsub jmp stc add movhps inc dec push push pop gs je (bad) mov and xor inc inc dec push pop gs je test mov ror xlat fsubp out cmc std add sub inc dec push pop bound jnp add scas mov (bad) int add add in hlt sti add sbb sub cmp push pop popa push (bad) xchg lahf cmpsl scas mov (bad) int fsub jmp cli add adc pop es push push pop gs jae (bad) mov (bad) call or sbb sub ss dec push pop bound js xchg mov rol (bad) (bad) out cmc cld add adc and das ss dec push pop pusha push lea mov add add aam in hlt sti add adc and xor inc dec push pop bound jp mov mov fsubp in hlt cld add adc and xor aas dec dec push pop insw jne test mov in hlt sti add adc and xor aas inc dec push pop imul nop xchg sahf cmpsb lods mov ret fucom jmp and push mov mov ret leave rcr (bad) add add idiv add adc pop daa cs pop pop gs jae addb mov ror aad jecxz lock add daa das ss dec push pop pop insw je orl (bad) int fndisi(8087 call or sbb daa cs inc dec push push pop insw jae push push adc cmp inc dec push pop arpl js xchg mov mov loop lock incb sub ss popa push mov mov (bad) fchs out hlt sti add adc pop es mov lret rcr loopne out idiv add adc push es push pop pop outsb jne test mov fnclex ljmp pop daa cs dec push pop gs jae orl mov (bad) into aad in cmc std add sub add add cmp push pop pusha push mov mov jecxz repz add adc sub cmp push pop arpl jnp mov mov enter call or xor inc dec push pop popa push lea ret lret loop icebp clc add push adc cmp inc dec push pop bound jnp mov mov (bad) fsub ljmp add add and cs arpl js xchg mov ror xlat (bad) out idiv push push adc cmp dec push pop gs jae orl lret rcr loop lock incl push adc cmp push push pop outsw jbe xchg mov (bad) int fsub ljmp and xor inc inc dec push pop imul mov mov fild add in hlt cld add adc and das aaa ds dec push pop imul mov mov (bad) int3 aam loop lock add sub cmp inc dec push pop gs je (bad) mov mov vpaddq jecxz icebp stc add adc and cs arpl jns mov mov (bad) lret rcr loopne out cmc cld add adc and das ss dec push pop imul (bad) xchg sahf movsl add rcr loopne out idiv add xor inc inc dec push pop gs jbe xchg mov loope out idiv push or xor inc inc dec push pop imul xchg cltd mov (bad) int3 aam jecxz repnz add movhps es pop popa imul fwait mov (bad) int fninit ljmp sbb sub add inc dec push pop pusha outsb add add orl mov ret lret rcr loopne out idiv add adc and cs pop pusha outsb jne test scas mov ret lret (bad) in hlt sti add adc pop es push pop pop outsb jne orl mov ret lret fsubp in hlt sti add adc push and add push pop insw je (bad) mov mov ret xlat fsubp in hlt sti add add or pop push and dec dec push pop imul xchg mov mov loop lock add sub aaa cmp popa push mov mov ret lret (bad) in hlt sti add adc push and dec dec push pop imul xchg mov mov loop lock add sub add inc dec push pop popa push mov add add mov (bad) int fsub ljmp sbb sub cmp inc dec push pop bound ja test mov (bad) (bad) call or sbb es push pop pop insw je (bad) mov mov ror (bad) fucom jmp stc add push adc cmp add push pop arpl jns xchg mov rol aad jecxz icebp clc incl or and xor ds dec push pop popa push mov mov (bad) lret rcr loopne out cmc cld add adc pop es push push pop gs jae orl (bad) into aad jecxz icebp clc incl or xor ds lahf cmpsb lods mov ret xlat fsubp in repz add movhps inc inc dec push pop arpl js xchg mov mov fsub ljmp add incl push adc cmp inc dec push pop bound ja test mov (bad) (bad) call or sbb daa cs pop pop outsb jne orl mov ret xlat fsubp in repz add movhps inc inc dec push pop arpl js xchg stos mov ror (bad) fucom jmp stc add push adc cmp inc dec push pop bound ja test mov mov (bad) (bad) call or sbb daa cs pop pusha outsb jne orl mov ret fcomp out hlt sti add adc push and dec dec push pop imul mov mov rol aad jecxz icebp clc incl or xor ds dec push pop popa push add mov (bad) (bad) call or add sbb daa cs pop pusha outsb jne orl mov ret xlat fsubp in repz add movhps inc dec dec push pop gs jae orl (bad) into aad jecxz icebp clc incl or xor aas inc dec push pop bound ja test mov mov loope lock add sub ss pusha outsb jne orl add leave rcl fsubp in hlt sti add adc pop es push push pop gs jae orl (bad) into aad jecxz icebp clc incl or xor aas inc dec push pop bound ja test mov (bad) (bad) call or sbb daa cs pop pop insw je (bad) add scas mov ret lret loopne in cmc cld add adc pop es add inc dec push push pop gs jae orl enter in repnz add push adc cmp inc dec push pop bound ja test mov (bad) (bad) call or sbb daa cs pop pusha outsb jne orl scas mov (bad) lret rcr loope out cmc cld add adc and cs pop pop insw je (bad) mov mov add lret rcr loopne out idiv add adc and cs pop arpl jns xchg mov ror xlat fsubp in repz add adc push and dec push pop gs je (bad) mov mov (bad) fnclex jmp movhps inc dec push push pop insw je orl scas mov vpaddq loop lock push or xor inc dec dec push pop gs add orl mov ret lret rcr loope lock push or xor inc inc dec push pop arpl js xchg mov ret fcomp out idiv pop movhps inc dec push pop pusha outsb jbe test mov mov fucom jmp stc add adc push and dec push pop bound ja xchg mov rol xlat (bad) in hlt sti add adc pop add add sub push push pop outsb jne orl mov (bad) fnclex jmp push adc cmp inc dec push pop bound ja xchg mov mov loop lock add sub aaa ds dec push pop popa push mov mov (bad) lret rolb fninit ljmp sbb sub cmp dec push pop arpl js xchg mov add add lret rcr loope out idiv push or push pop data16 orl mov fucom in hlt sti add adc and das ss outsl ja xchg mov loopne out cmc std push push adc cmp add push pop outsl ja xchg mov ror jmp mov jecxz repnz add adc pop sub ss bound mov add mov fucom jmp stc add movhps and dec push push pop insw jne test mov fsubp in repnz add movhps inc inc dec push pop bound js xchg mov (bad) lret fsubp in repz add adc pop es dec push pop popa imul pushf mov (bad) lret shll xor inc dec dec push bound jns mov add add add cmpsl scas mov (bad) into (bad) fsubp in cmc incb or pop push js xchg mov (bad) lret rcr loopne out cmc cld add adc pop daa sub push pop pop insw je (bad) mov ret lret rcr push pop bound js xchg mov ror fcomp out cmc std add adc and xor cmp popa push mov loop icebp clc add movhps cmp push pop pusha outsl ja test mov ror xlat fsubp in cmc cld add adc and xor out pop das inc pusha jb (bad) mov hlt cld add sbb sub cmp dec push pop arpl jp mov mov (bad) into aad add in hlt sti add adc and xor push pop pusha push mov iret (bad) out cli add adc pop es push pop popa imul xchg lcall clc add movhps inc dec dec push pop imul xchg mov rol aad jecxz icebp clc incl add push sbb inc dec dec push pop fs stc add adc pop daa cs pop fs je orl mov jecxz repnz sub cmp push pop bound jp mov mov (bad) out idiv push push adc add add push pop fs je orl sbb sub cmp push pop bound jp mov mov loop icebp cli add (bad) inc dec push push pop gs je (bad) mov iret xlat fcomip incb or xor inc dec popa insb je test mov inc push pop pusha push lea mov loop icebp stc add movhps es pop bound jns mov lret loopne out cmc cld add pop push and dec dec push pop imul xchg lods mov ret xlat fsubp in repz add push and ror fchs call or xor inc dec push pop bound jbe orl mov ljmp pop daa cs dec push pop imul mov mov add add cmc std add sub push pop outsb jbe test das ss dec push pop imul scas mov (bad) fnclex jmp and xor push pop arpl jp mov mov (bad) int3 aam icebp sti add adc imul mov mov (bad) fsub ljmp mov ror (bad) fucom jmp cli add pop es add add popa push mov rcr loope lock add movhps es test std add adc and xor pop popa push mov mov fucom in repz add and xor push pop popa imul sahf movsl lods mov ret xlat ds push pop arpl fabs jmp movhps es pop arpl jp mov add rcr loope lock add movhps es popa imul mov (bad) iret (bad) fsubp out idiv add sub cmp dec push pop imul mov ret (bad) ljmp mov stc add sbb sub cmp push push pop outsl jbe xchg add fsubp out idiv push push push push and dec push pop fs je add xchg lcall push push sbb inc dec push pop arpl jnp mov mov out cmc cld add adc and xor inc dec push pop pop data16 jne test mov ret lret rcr loop icebp cmp push pop bound js xchg mov ret fcomp out idiv add adc and das ss pusha outsb jne test scas mov (bad) lret add add fisubl dec push pop pusha outsb jne orl mov ret lret (bad) out cmc cld add adc pop es push pop pop insw je (bad) mov mov ror (bad) fucom jmp stc add movhps inc inc dec push pop arpl js xchg mov rol aad fucom jmp stc add push adc cmp inc dec push pop bound ja test add add int3 rcr loop lock add sub ss pusha push mov mov (bad) lret rcr loopne out cmc cld add adc pop es push push pop insw je (bad) mov mov ret xlat fsubp in repz add movhps inc inc dec push pop imul xchg mov rol aad in repz add adc push and add add push pop imul xchg mov ret xlat fsubp in hlt add add cmp dec push pop pop push mov mov loopne lock incl movhps daa cs pop popa imul sahf cmpsb lods mov ret fsubp out idiv xor inc dec push pop gs jae orl int fninit ljmp sbb inc inc dec push add insb jae (bad) mov mov (bad) int fsub jmp stc add adc push and dec push pop pusha outsl jbe test mov ror xlat fsubp in cmc cld add adc and xor inc dec push pop pop outsb jbe xchg mov ror (bad) fsubp in hlt sti add adc and xor inc dec push pop pusha push nop xchg sahf cmpsb lods mov ret lret rcr loop out idiv add adc and sub cmp push pop pop outsb jbe test mov fcomp out cmc std add adc and xor inc dec dec push pop fs jae (bad) mov mov (bad) int fninit jmp stc add movhps es push pop pusha push mov mov loope lock pop push push push and dec push pop arpl jp mov mov enter jmp add add incl push push push es pop arpl jns mov sbb xor inc dec push pop pop outsl ja xchg mov loopne out idiv push or xor inc dec push pop popa imul lahf cmpsl scas mov (bad) int fucom in cmc std add sub cmp dec push pop fs je orl mov loope lock pop push adc cmp add pop arpl jp mov mov (bad) ljmp and xor inc dec push pop bound jp mov mov fucom in hlt cld add adc and xor inc dec push pop arpl clc add sbb sub jo mov push es pop fs jae orl int3 aam in hlt sti add sbb sub cmp push pop add add outsl jbe test scas mov mov loope in repnz std add or daa sub inc dec push push pop pusha imul addb cmpsb lods mov mov xlat fucom call add push adc push and xor ds dec dec push pop pusha gs jne addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or sub dec dec push pop pop arpl jae jge mov test (bad) lret fcmovu in add lock cli add and sub aaa cmp pop pop imul nop add mov mov fnop in lock cli add and inc inc dec push push pop pusha gs jne addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec pop pusha aam std add adc pop es add add add cltd iret dec jnp lea (bad) fucom in repz add movhps and dec push push pop insw je addb movsl stos mov mov (bad) fneni(8087 out lock sti add and inc inc dec dec push pop pop gs jae (bad) xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or adc xor dec push pop pop imul add orl lods mov mov (bad) in out hlt stc incb add pop and das xor aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out repnz add or push sbb sub cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) in out repz incb or adc push add and sub dec dec push push pop bound jb jl xchg stos mov mov (bad) fneni(8087 in lock cli add and aas inc dec dec push pop pop imul mov lods mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov add iret aam (bad) jmp add push adc push and xor add pop pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or adc xor cmp dec push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add or sub inc dec push push pop bound jno add jl xchg stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec push push add imul addb movsl stos mov mov aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jb jge xchg mov mov fsubp jmp stc add movhps cmp inc dec push push pop popa insb jno jl xchg stos mov mov aad loopne ljmp unpckhps pop and das xor ds dec dec push pop pop arpl je jle mov test ret leave into rcr fsubp call add add std add or sub inc dec push push pop bound jb jge mov cmpsl lods mov mov xlat fsub out repnz incl push push sbb inc dec push pop popa push out idiv add adc and das ss dec push pop popa push test mov (bad) fnclex ljmp adc sbb daa sub aaa cmp inc dec push push pop bound add add jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb cmpsb stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop fs je jg mov test (bad) leave into rcr fsubp call add or add and sub dec dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad fndisi(8087 out lock add or adc xor push push pop pusha gs jne jg mov stos scas mov mov add add add aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg cmpsb lods mov mov (bad) fndisi(8087 out lock add or adc xor push push pop pusha gs jne add jg mov stos scas mov mov fcmovu in out hlt stc incl adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop imul mov mov mov fcmovu in out cmc cli incl pop and add aas inc dec dec push pop pusha gs jne jg mov stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov add fcomp jecxz add add repz incb or adc push and xor ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc cli add and inc inc dec push push pop pusha gs jne addb add rol rcl fnop in lock cli add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or adc sbb cmp add push pop bound jns test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incl unpcklps push and das xor aas inc dec dec push pop pop imul mov lods mov mov fcomp loop in repnz add add add daa sub aaa cmp push pop popa insb jno jl xchg stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop fs je jg mov test ret enter fsubp call add or sub dec dec push pop add push orl test mov add mov rcl fucom out repnz add or pop sbb daa sub ss inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov aad loopne ljmp unpckhps pop and aas inc dec push pop pusha outsb jne (bad) mov mov ret xlat fsubp in cmc cld add adc push es push pop pusha gs jne addb movsl stos add lret fnop in lock cli add and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov fcmovu in lock add or push sbb es ss inc dec push push pop bound jb jge xchg test (bad) aad loopne in icebp add std add or sub ss dec pop popa push add orb mov (bad) int3 rcr (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov fcomp out idiv push or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into aam fsubp call add or sub inc dec push add push pop bound jno jl xchg stos mov mov aad loopne ljmp unpckhps pop and das xor dec push pop pop imul mov lods mov mov xlat fucom out repnz add or push sbb sub ss inc dec push push pop pusha imul jl xchg cmpsb stos mov mov aad (bad) ljmp add incl unpcklps push and cs ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg cmpsb add stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop gs je jg mov test mov (bad) in out hlt stc incb or adc push and sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out repnz add or pop sbb es cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out repz incb or adc push and sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz std add or daa sub inc dec push push pop popa data16 jno jnp xchg add add rol rcl fnop in out hlt cli incl unpcklps pop and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov stos scas mov mov (bad) jecxz out repz incb or sub inc dec add push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb sub add cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp stc incl unpcklps push and xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop gs je jg mov test (bad) leave into rcr fsubp call or sbb daa cs pop popa push mov ror (bad) fucom add in repz add adc and xor ds dec push pop imul mov mov (bad) lret rcr loop in repz std add or sub dec dec push pop pop imul nop xchg fwait mov mov (bad) fsub out repnz add add adc push and xor ds dec dec push pop pop imul mov scas mov mov fcomp jecxz add out repz incb or sub cmp inc dec push pop popa push lea mov (bad) lret rcr loope lock add sub cmp inc dec push pop imul mov mov loope lock add push adc cmp inc dec push pop arpl js xchg mov mov jecxz icebp clc add push push sbb inc dec push pop pusha push add test mov ret rcr loopne out idiv add sub aaa ds dec push pop bound ja xchg mov ror fchs call or xor inc dec push push pop insw jne orl mov fsub jmp cli add adc push and dec push pop popa imul popf movsb stos mov ret fchs call or xor add add push pop pop outsb jbe test mov mov in hlt std add adc and xor aas inc dec push pop gs je test mov mov jecxz repnz add adc pop es ss dec push pop fs jae (bad) mov mov (bad) fninit ljmp sbb daa cs pop pop insw jne orl mov ret lret (bad) out testb cld add or pop add aas inc dec push pop arpl js mov mov ret lret in repz add movhps inc dec push pop pop insw jae addl mov (bad) fsub out icebp idiv add or push sbb es cmp dec push push pop pusha imul addb cmpsb stos mov mov aad loopne ljmp add adc pop and das xor dec push pop pop imul mov mov mov fcomp jecxz out repz std add or and xor aas inc dec dec push pop pop imul mov lods mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg cmpsb stos mov add add (bad) fneni(8087 in lock sti add pop and aas inc dec dec push pop pop fs je jg mov test ret leave into rcr fsubp call add or sub inc dec push pop pop bound jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec push push pop pusha add add add jne addb movsb stos scas mov mov (bad) in out hlt stc incb or adc push and xor cmp add arpl je jle mov test mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fneni(8087 out lock add add adc das xor push pop pusha imul addl mov mov xlat fucom out repnz add or sub dec dec push pop pop arpl jb jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave add aam (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fnop in lock cli add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov fcomp loop in repnz std add or and cs ds dec dec push pop pop arpl jae jle mov test ret leave into aam fsubp jmp add push adc push and cs ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incl unpcklps pop lea mov mov fcomp jecxz in repnz std add or sub dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and cs ds dec dec push pop pop imul (bad) xchg popf (bad) into aam fsubp jmp add push adc push and sub dec dec push pop pop bound jb jl add (bad) xchg cmpsl lods mov mov (bad) fsub out icebp add cld add or pop sbb es cmp dec push push pop pusha imul addb movsl stos mov mov aam (bad) jmp add push adc push and xor ds dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and add add xor dec push pop pop fs je jg mov test (bad) leave into rcr fsubp call add or daa sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb daa sub add cmp push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha gs jne add mov test (bad) leave into rcr fsubp call add or sub inc dec push push pop bound jno jl xchg stos mov mov (bad) fneni(8087 in lock incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz incb or adc sbb add cmp pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov (bad) add jecxz out repz incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc cli add and inc inc dec push push pop pusha imul addl mov rol rcl fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg add add mov rcr fucom call add or sub xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam (bad) jmp add unpcklps pop and das xor push push add imul addl mov rol rcl fsub out repnz add or pop sbb daa sub cmp add pop arpl jae jge mov test ret leave into rcr fsubp jmp add unpcklps pop and das xor aas inc dec push push pop imul mov scas mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop fs je jg mov test mov fcmovu in out hlt cli incl unpcklps pop and das xor ds dec dec push pop pop imul mov mov add mov rcr fucom call add or sub dec dec push push pop bound jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl push (bad) mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp add cld add or pop sbb daa sub ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 out lock sti add adc xor dec push pop pop gs je jg mov stos scas mov ret leave into rcr fsubp jmp add push adc push and sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb es add cmp push pop bound jb jl xchg lods mov mov add (bad) int3 rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test (bad) leave iret aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jae add js orl test mov mov fcomp jecxz in repnz std add or daa sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es cmp dec push push pop pusha imul add pushf mov mov (bad) fndisi(8087 out icebp idiv add or push sbb add add sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc xor dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add unpcklps push and cs ds dec dec push pop pop arpl jae jle mov test mov mov add add fucom call add or sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 out lock add and sub xor push push pop pusha gs jne jg mov test (bad) leave add aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul add add mov mov fcomp loop in repnz add or daa sub inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 in lock cli add pop and aas inc dec dec push pop pop fs je jg mov test ret leave into rcr fsubp call add or daa sub add cmp push pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock add and inc inc dec push push pop pop gs jne jg mov test (bad) leave into aam fsubp jmp add push add push and xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fldl add out repnz add or pop sbb daa sub ss inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop popa data16 jno orb popf movsb stos mov idiv add cs pop pusha outsb jne test scas mov ret lret loopne lock add unpckhps sub cmp dec push pop popa imul sahf cmpsb scas mov vpmullw in cmc std add adc cmp dec push push pop imul xchg stos mov mov aad loopne jmp cmc cli add pop and aas inc add add push pop pop imul (bad) xchg lcall add (bad) aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul mov mov mov fcomp jecxz out repz std add or sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp add sti add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addl movsl stos mov mov aad loopne jmp cmc sti add push or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop fs je jg mov test (bad) leave iret aam fsubp jmp add push adc push and xor ds dec dec add pop arpl jae jge mov test mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub xor push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out cmc cli incl add pop and das xor aas inc dec add pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incl push adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repz std add or sub inc dec push push pop bound jb jl xchg lods add mov mov xlat fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop popa imul addl mov rol rcl fcmovu in out cmc cli incl pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or daa sub inc dec push push pop add add insb jno jl xchg cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or daa sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jge mov test mov roll add (bad) into aam loop add clc incl or xor inc inc dec push pop arpl jns xchg scas mov (bad) (bad) call or das ss pop insw jne orl mov rol aad loop icebp clc incb daa sub push pop pop gs jae addb mov mov loope out idiv add adc and das xor dec dec push pop imul xchg adc and xor ds dec push pop popa push mov mov (bad) int3 rcr loope out idiv add adc and cs pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb or adc push and cs ds dec dec push pop pop arpl je jle mov test les leave into aam fsubp jmp add push adc pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and inc inc dec push push pop pusha gs jne add lcall rol rcl fnop in lock cli add and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc cli add and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc cli add and add add push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor dec push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp adc cmp inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge mov add test mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jne addb movsl stos mov add fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push add insb jb jl xchg lods mov mov xlat fucom call add or sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repz std add or sub dec dec push pop pop bound jae jge mov test mov mov fcomp jecxz in repz std add or adc sbb cmp pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov stos mov mov (bad) fneni(8087 out icebp idiv add or adc sbb daa sub aaa cmp inc dec push push pop popa insb jb jl xchg lods mov mov add add int3 rcl fsub out repnz add or daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop imul jle mov test (bad) leave into aam fsubp jmp add push adc pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fsub out repnz add or sub xor ds dec dec push pop pop arpl imul (bad) xchg cltd lahf movsb test (bad) lret fcmovu in out hlt cli incl unpcklps pop and xor add add push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or adc xor push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out add lock add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp stc incb push adc pop and das xor aas inc dec dec push pop pusha gs jne addb movsl stos mov mov rcl fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa insl jb jl xchg mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jb jge mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push add add arpl jae jle mov test (bad) leave iret aam (bad) jmp add unpcklps pop daa sub dec dec push pop pop bound jae jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add push add adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add push adc push and cs ds dec dec push pop pop imul mov mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs je add fwait mov mov add lret rcl fneni(8087 out lock sti add and add aaa cmp inc dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc cli incl pop and das xor aas inc dec dec push pop pop fs je add jp test movsb stos scas mov mov (bad) in out cmc cli incl pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt cli incl pop and aas inc dec dec push pop pop fs jne jg mov stos mov mov rcl fsub out repnz add or sub sub dec dec push pop pop arpl jae add mov stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fildl loopne jmp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb and sub aaa cmp dec dec push pop pop bound jb jge mov add xchg cwtl popf mov mov (bad) fsub out icebp idiv add or push sbb es aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov cmpsl lods mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jb jge mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound jae jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl add test movsb stos scas mov mov fcmovu out icebp testb cld add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repnz std add or daa sub inc dec add pop bound jb jge xchg add cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or sbb and das xor aas inc dec dec push add gs jne addb cmpsb stos mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or daa sub inc dec push push pop bound jb jge xchg mov mov (bad) in out hlt stc incl add add adc pop and das xor aas inc dec dec push pop pop fs jne jg mov stos scas mov mov fnop in lock cli add and inc inc dec push push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb es ss dec dec push pop pop arpl jae jle mov test les leave into aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb es ss inc dec push push pop popa insb jb jl xchg lods mov mov xlat fucom out repnz adc pop and das xor aas inc dec dec push pop pop fs je add add mov stos scas mov mov fnop in lock cli add and sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or push sbb es aaa cmp inc dec push push pop bound je jg mov test (bad) leave iret aam (bad) jmp add push adc sbb and add push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addl mov rol rcl fsub out icebp idiv add or push sbb es ss inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out add add repnz add or daa sub inc dec push push pop arpl jae jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jle mov stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul js (bad) mov add add add mov mov fcomp loop in repz std add or sub dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add push adc push and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out cmc cli add and inc inc dec push push add add gs jne addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov (bad) in out hlt cli incl unpcklps pop and das xor dec push pop pop gs jne addb movsl stos mov mov rcl fsub out repnz add or add adc sbb daa sub aaa cmp push pop bound jb jge xchg test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos mov mov add rcl fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add push adc push and cs ds dec dec push pop pop imul mov mov mov (bad) in out cmc cli incl unpckhps pop add sub cmp dec push push pop pusha imul add add fwait mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fucom call add or sub xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc pop and das xor add add aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc cli incl pop and inc inc dec push push pop bound jb jge xchg test mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out add repz incb or adc push and xor aas inc dec dec push pop pop imul mov mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc cli incl pop and aas inc dec push push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop arpl jae jle mov test ret leave into aam fsubp jmp add push adc push and cs ds dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out cmc cli incl and inc inc dec push push pop pusha add jo jnp xchg cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fucom out repnz add or daa sub dec dec push pop pop bound jae jge mov test ret leave into rcr fsubp jmp add push adc push and cs ds dec dec push pop pop imul (bad) xchg pushf mov mov xlat fsub out repnz add or pop sbb aaa cmp push pop bound jb jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jle mov test mov mov add add fsubp jmp add push adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) aad (bad) ljmp adc xor push push pop pusha gs jne addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul addl add xchg xchg pushf mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov rol rcl fnop in lock add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg cmpsl lods mov mov xlat fucom out repnz add or sub dec dec push pop pop arpl jae jle mov test mov mov (bad) jecxz out repz incb or adc pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in repnz add add add or sub dec dec push pop pop arpl jae jle mov test mov mov fadds (bad) jmp add unpcklps pop and das xor push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop popa imul addl mov add fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push es ss inc dec push push pop popa insb jno add ja addl mov ret rcl fsub out repnz add or pop sbb daa sub add ds dec dec push pop pop arpl je jg mov stos scas mov mov fnop in lock sti add and sub cmp dec push push pop popa insb jno jge xchg cmpsl lods mov mov xlat fucom out repnz std add or sub sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) ljmp unpcklps pop and das xor aas inc dec push push pop bound jb jge mov test mov mov fcomp jecxz call add push adc push and xor ds dec dec push pop pop arpl jae jle mov movsl stos mov mov aad loopne jmp cmc sti add and sub xor push push pop pusha imul addb cmpsb stos mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg add mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jle mov test ret leave into aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs jne push xchg push pop arpl jns mov mov (bad) lret (bad) in cmc cld add adc and cs add add push pop arpl jns mov mov rol aad jecxz lock incl add pop push es push pop popa push jp mov mov mov in repnz add push adc cmp dec push pop arpl js xchg mov ret fcomp in repz add adc and sub dec dec push pop pop bound jb jge mov cmpsl lods mov mov fsub call or sbb sub aaa aas inc dec push pop bound js orl test mov ror (bad) fucom jmp cli add adc push daa cs dec push pop bound js xchg mov ret xlat fsubp in cmc cld add adc and xor inc dec dec push pop gs jne test cmpsb stos mov mov aad loopne in hlt cld add adc and xor cmp dec push pop gs je orl mov out cmc std add adc and xor inc inc dec push pop gs jne test mov (bad) out idiv add and xor ds dec dec push pop pop arpl jae jle mov mov (bad) int fsub in repz add adc and xor aas inc dec push pop gs je orl mov loopne add add add out idiv push push adc cmp dec push pop bound jns mov mov (bad) into (bad) fucom in hlt cld add adc sub cmp push pop popa imul lahf cmpsl scas mov vpmullw in hlt cld add push es pop bound js xchg mov (bad) into (bad) fucom in repz add movhps and inc dec push pop imul mov mov ret add rcr loopne out idiv add sub cmp dec push pop imul mov mov ror (bad) fucom jmp stc add movhps inc dec dec push pop imul jnp mov mov ror (bad) fucom jmp stc add movhps inc dec dec push pop imul test mov ror (bad) fucom ljmp sbb sub cmp push pop add pop outsb jne orl mov (bad) int3 aam jecxz repnz add adc push and dec push pop bound jp mov mov loopne out idiv add sub xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out hlt stc incl unpcklps pop and das xor aas inc dec push pop bound js test movsl add (bad) aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov rol add (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jae jle mov test (bad) lret fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop add push je jg mov stos scas mov mov fnop in lock cli add and inc inc dec push push pop pusha gs je orl mov fsubp in hlt cld add adc xor push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and das xor aas add add push pop fs je orl mov fsub out icebp idiv add or push sbb sub xor push push pop pusha imul addb cmpsl lods mov mov ret rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb stos mov ror fsub out idiv add es add push pop imul mov test ret leave into rcr fsubp call add or sub inc dec push push pop bound jno jl xchg lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop fs je jg mov test (bad) leave into rcr fsubp jmp add add push adc sbb cmp push pop bound jb jl xchg lods mov mov (bad) in out hlt stc incb push adc push and cs add inc dec dec push pop pop gs jne jg mov stos scas mov rol rcl fneni(8087 in lock cli add pop and inc inc dec push push pop pusha insw je (bad) mov mov mov add fsub jmp or push sbb sub cmp dec push pop arpl ja xchg mov mov loop lock and das ss pop insw je orl mov ret fcomp out hlt sti add adc pop and dec dec push pop arpl js xchg mov mov loopne lock decl adc pop es cmp dec push pop add add outsl jbe test scas mov (bad) lret sar pop sub cmp push pop pop insw jae orl (bad) into aad jecxz repz add adc push add dec push pop pusha outsb jne orl mov (bad) int3 aam in repz add adc pop es cmp push pop pusha outsl ja xchg mov (bad) int3 rcr jecxz repnz add adc and xor aas dec push push pop data16 add add test add adc and xor inc dec dec push pop data16 jbe xchg mov ret lret rcr loope icebp clc incl or xor inc dec dec push pop bound ja xchg mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb movsb stos scas mov mov (bad) jecxz out repz std add add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add or adc push and xor ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fneni(8087 out lock sti add pop and das xor aas inc dec dec push pop pop imul mov add scas add rcl fcmovu in out hlt cli incl push adc push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 out lock sti add pop and das xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or daa sub inc dec push add bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub xor push push pop pusha gs jne addb movsl stos mov mov aad (bad) ljmp push or push sbb and inc inc dec push push pop pusha imul addb cmpsb stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha gs jne addb movsl stos mov add add aad loopne jmp cmc sti add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc cli add and inc inc dec push push pop pusha gs jne addb movsl stos scas mov rol rcl fnop in stc incb unpcklps pop and das xor aas inc dec dec add pusha imul jbe addb cmpsb stos mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp idiv add or push sbb add sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc xor push push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf add rol rcl fnop in out cmc cli incl and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov (bad) in out hlt stc incb push adc pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov add mov lods mov mov fcomp loop in repnz add or sub dec dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push pop pop imul (bad) xchg lcall mov fcmovu in out cmc cli incl unpcklps pop and inc add add push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add add incb push adc push and cs ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb or adc push and xor ds dec dec push pop pop arpl je jle test movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall stos scas mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop add add imul mov mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) lret rolb xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or add pop sbb daa sub ss inc dec push push pop popa data16 jno jl xchg stos mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rolb (bad) lret rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb add sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or daa sub inc dec push push pop bound jb ja (bad) xchg cmpsl lods mov mov xlat fucom out repnz std add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add push adc push and sub dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add sbb and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb daa sub aaa cmp inc dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repz std add or sub dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp call add push adc push and xor ds dec dec push pop pop imul mov add add mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop fs je jg mov movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add add add add adc sbb sub cmp dec push push pop popa data16 jae jle mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in jmp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb lods mov mov add add (bad) int3 rcl fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno add addl mov rol rcl fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or daa sub inc dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and add xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave rcl faddl add loope in icebp idiv add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or daa sub aaa cmp inc dec push push pop bound jb jl orl test mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound jb jge mov add xchg cwtl popf mov mov xlat fucom out repnz add or sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp add inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov rcl fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg cmpsl lods mov mov xlat fsub out repnz add idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb es ds dec dec push pop pop arpl jae jle mov test lods mov mov fcomp jecxz in repnz std add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp loop in repnz add or and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop add imul (bad) xchg cltd sahf movsb test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop imul mov scas mov mov (bad) in out repz incb or add adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repnz std add or sub inc dec push push pop bound add jge mov test mov mov fcomp jecxz in repnz std add or daa sub inc dec push push pop bound jb jl xchg lods mov mov add ret rcl fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or sub dec dec push pop pop bound jb jge xchg stos scas mov mov fnop in lock cli add and aas inc dec dec push pop pop gs add add addl mov rol rcl fneni(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fneni(8087 out icebp idiv add or push sbb es cmp dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb add add ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul addl mov roll int3 rcl add add loop in repnz add or pop sbb aaa cmp push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg add add lods mov mov xlat fsub out repnz add or daa sub aaa cmp pop pop bound jb jge xchg cmpsl lods mov mov xlat fucom out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out cmc cli incl sbb sub cmp inc dec push push pop popa imul addl mov rol rcl fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fnop in lock sti add and sub cmp dec push push pop pusha add imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz incb or adc sbb cmp pop pop bound jb jl xchg lods mov mov add fucom out repnz add or add add sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp adc das xor dec push pop pop fs je jg mov test ret enter fsubp call add push adc push and sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov (bad) int3 rcl fsub out icebp idiv add or pop sbb es ss inc pop data16 jne (bad) mov int3 rcr loope out idiv add adc and cs pop pop insw je (bad) mov mov ror (bad) fucom in repz add unpckhps sub cmp dec push pop arpl ja xchg mov mov loope lock add sub ss add outsb jne orl mov ret xlat fsubp in repz add add pop pop es push push pop gs jae orl (bad) into aad jecxz icebp clc incl or xor ds dec push pop popa push mov mov (bad) lret rcr loopne out cmc cld add adc pop es push push pop gs jae orl (bad) int fildl loop lock push or xor ds dec push pop popa push mov mov ret lret (bad) in hlt sti add adc push and dec dec push pop gs jae addl (bad) int fninit ljmp sbb sub ss pusha outsb jne orl mov ret lret (bad) in hlt sti add adc push and dec dec push pop imul add addb mov (bad) lret rcr loopne out cmc cld add add sbb sub ss pusha outsb jne orl mov ret lret (bad) in hlt sti add adc push and dec dec push pop imul mov mov rol aad jecxz icebp clc incl or xor ds dec push pop popa push mov mov ret lret (bad) out hlt sti add add adc push and dec dec push pop imul xchg mov mov loop lock add adc and cs pop pop data16 jne orl mov ror xlat fsubp in repz add movhps inc inc dec push pop arpl js xchg mov mov loop lock add adc and das ss pusha outsb jne orl add xchg cwtl lahf cmpsb lods mov ret lret (bad) in hlt sti add add sbb daa cs pop pusha outsb jbe test scas mov (bad) fnclex jmp or xor inc dec dec push pop imul xchg mov mov loop lock add sub ss pusha outsb jne orl mov ret lret rcr loope lock add add add cs pop pop insw jne orl mov ret lret loopne out hlt sti add adc push es push push pop gs jae (bad) mov mov ror (bad) fucom jmp cli add movhps inc dec push push pop gs jae orl lret (bad) in hlt sti add adc pop es push pop popa push mov mov ret add add add lret (bad) in hlt cld add adc pop add xor pop popa push mov mov (bad) fninit ljmp push es push push pop insw je (bad) mov mov ror xlat fsubp in hlt sti add adc push and dec dec push pop imul mov mov ror (bad) fucom in hlt sti add adc push and dec push pop pop insw je (bad) mov mov vpaddq jecxz icebp idiv push or xor aas inc dec push pop arpl js mov mov rol aad jecxz icebp clc incl or xor ds dec push pop bound js xchg mov rol aad jecxz icebp clc add push adc cmp dec pop pop insw jne orl rol (bad) fsubp in repz add add add pop push es push add outsb jne test scas mov (bad) lret rcr loop lock push or xor inc inc dec push pop bound jns xchg mov rol (bad) fucom jmp cli add adc push and dec push pop pusha outsl jbe test mov (bad) fnclex call or sbb sub ss dec push pop pop outsb jne orl add lods mov ret fcomp in repz add adc push es push pop bound ja test mov (bad) (bad) jmp or xor aas inc dec push pop arpl js xchg mov ror xlat fsubp in repz add adc pop es push pop pusha outsb jne test scas mov (bad) fninit ljmp sbb inc dec dec push pusha outsb jne add mov rol aad jecxz repz add movhps and dec push push pop gs je (bad) mov mov ret xlat fsubp in repz add movhps and dec dec push pop data16 jne orl mov (bad) (bad) call or sbb sub aaa cmp popa push mov mov (bad) lret rcr loopne out add cmc cld add adc and das ss dec push pop popa push mov mov (bad) int3 rcr loope out idiv add sub cmp inc dec push pop arpl js xchg mov mov loop icebp clc incl or xor aas inc dec push pop bound ja test mov (bad) (bad) call or sbb sub aaa cmp popa imul add mov ror xlat (bad) in hlt sti add adc push es push pop pusha outsl jbe test mov (bad) lret rcr loopne out cmc std add push sbb inc dec push pop gs je orl mov ret lret (bad) in hlt sti add adc push and dec dec push pop gs jae orb mov ret xlat fsubp in repz add adc push es add cmp push pop pop insw je (bad) mov mov ret xlat fsubp in repz add adc push and dec push push pop imul mov mov rol aad jecxz repnz incl or xor ds dec push pop bound ja test mov (bad) lret rcr loope out idiv add sub cmp inc dec push pop bound ja test mov add add aam loop repnz add adc and cmp dec push popa outsb ja test mov (bad) lret rcr jecxz repz add movhps es pop bound js xchg mov (bad) lret rcr loop repnz add adc and das ss bound js mov mov vpaddq out cmc cld add adc and xor inc dec dec push pop outsb jbe test mov rol aad jecxz icebp cli add adc and xor inc dec push pop arpl xchg pushf mov vpaddq loop out clc incl or xor aas inc dec push pop bound ja xchg mov mov loope decl adc push and dec push add imul lahf cmpsb scas mov (bad) int3 aam jecxz repz add adc and das aaa ds dec push pop imul mov cltd mov enter out idiv push push push sbb inc dec push pop arpl jnp mov mov (bad) out idiv push push adc cmp dec push pop bound js mov mov (bad) into aad in hlt sti add adc and das aaa aas inc dec push pop data16 jne test mov loope lock incl movhps daa cs dec mov loope add add icebp clc add movhps daa das ss dec push pop fs jae (bad) mov mov (bad) out idiv add sub cmp push push pop insw jne test mov loope lock pop movhps es push pop add jae orl mov loopne out push push push sbb inc dec push pop bound jns mov mov (bad) into add (bad) fucom in idiv add sub cmp push pop popa imul lahf cmpsl scas mov (bad) into aad in hlt cld add adc and xor inc inc dec push pop fs je orl mov fsubp in cmc cld add adc and xor inc dec push pop pusha push mov mov xlat fsubp out clc add adc and xor inc dec push pop popa imul lahf cmpsl scas mov vpaddq in cmc std add adc cmp dec push pop arpl jnp mov mov jecxz repnz add adc and xor inc dec push pop popa push (bad) xchg lahf cmpsl scas mov (bad) int fucom in cmc std add cs pop gs je test mov ror fsub call adc and das aaa aas inc dec push pop outsl ja xchg mov ror (bad) fsubp in hlt sti add adc and das aaa ds dec push pop arpl jp mov mov (bad) fsub in hlt sti add adc and xor cmp popa imul popf movsb stos mov ret xlat fsubp in hlt cld add adc and xor aas inc dec push pop fs je jge mov mov (bad) out idiv push or xor inc inc dec push pop bound jno jg lea mov loopne repnz add or daa sub aaa cmp pop imul xchg cmpsb stos mov mov (bad) fneni(8087 out idiv add or daa sub inc dec push push pop bound jne addb movsl stos mov mov aad loopne ljmp adc sbb sub ss inc dec push push pop add insb jb jl xchg lods mov mov fcomp loop in repnz std add or sub xor ds dec dec push pop pop imul mov scas mov mov fnop in hlt cli add movhps inc dec push pop pop outsb add test mov ror xlat fsubp in cmc std add sub ss dec push pop arpl jns add mov mov ret xlat fsubp out cmc cld add adc and das ss popa imul fwait mov lret (bad) out cmc cld add adc and xor aas inc dec push pop gs jae orl mov (bad) lret rcr loope icebp clc add movhps es pop popa imul sahf movsl lods mov ret fchs call push adc cmp dec push pop bound jp mov mov loope icebp stc add adc and xor inc dec push pop popa imul mov (bad) iret xlat (bad) out idiv pop movhps es dec push pop fs jae orl mov (bad) out cmc add add sub cmp push push pop insw jne test mov loopne lock or sbb sub aaa aas inc dec push pop gs je test mov ret fabs jmp movhps es pop arpl jnp mov mov loop repnz add adc and xor inc dec push pop pusha push (bad) xchg lahf cmpsl scas mov (bad) iret xlat (bad) out idiv pop movhps daa cs dec push pop imul mov mov loope icebp stc add adc and add cmp push pop pusha push (bad) xchg lahf cmpsl scas mov enter out idiv pop movhps daa das ss dec push pop insw jne test mov loop repnz add adc and xor inc dec push pop popa imul lahf cmpsl scas mov add rcl (bad) out idiv pop push push push and dec push pop bound jp mov mov loopne lock add adc pop daa das aaa aas inc dec push pop data16 jbe xchg mov vpmullw in cmc std add adc and xor inc dec push pop arpl jp mov mov loopne out idiv pop push push push es dec push pop gs je test mov jecxz repz add adc and xor inc dec push pop pusha push (bad) xchg lahf cmpsl scas mov (bad) into (bad) fsubp in idiv add add dec push pop arpl orl mov loop repnz add adc and xor inc dec push pop pusha push (bad) xchg lahf cmpsl scas mov (bad) into (bad) fsubp in idiv add sub push pop fs jae orl mov vpmullw jecxz repnz add adc pop es dec push pop gs je test mov loop repnz add adc add and xor inc dec dec push pop data16 jbe xchg mov vpmullw in cmc std add sub push pop fs jae orl mov loop repz add adc and xor inc dec push pop bound jns mov mov loopne lock incl movhps daa das aaa aas inc dec push pop fs jae orl mov (bad) out idiv push push add push es dec push pop fs je test mov ret fabs jmp adc pop daa das aaa aas inc dec push pop outsl jbe xchg mov (bad) fsub in hlt cld add adc and xor inc dec push pop bound imul xchg fwait mov lret loop icebp stc add adc and xor inc dec push pop pusha push mov mov jecxz repz add add adc and xor inc dec push pop popa imul mov enter call movhps es dec push pop gs je test mov ret (bad) jmp adc and das cmp dec push pop data16 jbe test mov ret lret rcr loop repnz add adc and xor inc dec push pop pusha push (bad) xchg lahf cmpsb scas mov (bad) into (bad) fsubp out idiv add sub fucom in hlt cld add adc and xor inc dec push pop bound jns mov mov ret (bad) jmp or sbb sub push push pop gs jae (bad) mov lods mov ret xlat fsubp in repz add movhps and inc dec push pop bound ja test mov (bad) (bad) call or sbb daa cs add dec push pop pusha outsb jne orl mov ret lret (bad) in hlt sti add adc pop es push push pop gs jae orl enter in repnz add movhps inc inc dec push pop arpl js xchg mov mov loop lock add sub ss popa outsb jne orl mov ret lret add fcomp out cmc cld add adc pop es push pop pop insw je (bad) mov mov ror (bad) fucom jmp cli add movhps inc inc dec push pop arpl js xchg add (bad) call or sbb sub ss pusha outsb jne orl mov ret xlat fsubp in repz add movhps and dec dec push pop add imul mov mov rol aad jecxz icebp clc incl or xor ds dec push pop popa push mov mov (bad) int3 rcr loope out idiv add adc and cs pop pop insw je (bad) mov mov ret xlat fsubp in repz add movhps inc dec dec push pop imul xchg mov mov jecxz icebp add clc incl or xor ds dec push pop popa push mov mov (bad) lret rcr loopne out idiv add adc and das ss pusha outsb jne add test mov fnclex jmp push adc cmp dec push pop arpl js xchg mov rol aad jecxz icebp clc add push push sbb inc dec push push pop insw je orl add xchg cwtl lahf cmpsb lods mov ret xlat fsubp in repz add adc push and dec dec push pop imul xchg mov mov jecxz icebp clc incl or xor ds dec push pop bound ja test mov mov loope out idiv add adc and cs pop pop insw je orl mov (bad) lret rcr loope out idiv add adc and add add das ss popa push mov mov ret lret loopne out idiv add adc and cs pop pop insw je orl scas mov ret lret loopne out cmc cld add adc pop es push push pop fs je (bad) mov mov ror (bad) fucom jmp stc add push adc cmp dec push pop arpl js xchg mov add mov fnclex jmp or xor ds dec push pop popa push mov mov loope out idiv add adc and cs pop pusha outsb jne orl mov ret xlat fsubp in repz add movhps inc dec dec push pop imul xchg mov mov jecxz icebp clc incb sub aaa ds add dec push pop arpl jns xchg mov rol aad jecxz repnz add push adc cmp inc dec push pop bound ja test mov rol (bad) fucom jmp stc add push adc cmp dec push pop arpl ja test mov (bad) lret rcr loopne out cmc cld add adc and cs pop pusha outsb jne orl mov ret xlat add add in repz add movhps and dec dec push pop imul mov mov ror (bad) fucom jmp stc add push adc cmp inc dec push pop bound ja test mov (bad) lret rcr loopne out idiv add adc and cs pop pusha outsb jne orl mov ret xlat fsubp in hlt sti add adc pop es dec push pop data16 jne test mov (bad) int3 rcr loope out idiv add sub aaa ds dec push pop popa push mov add fnclex jmp or sbb sub aaa ds dec push pop popa push mov mov fsubp in repz add adc and das ss imul xchg mov ror (bad) fucom jmp sti add adc push add es push pop pusha outsb jne orl mov (bad) lret rcr loopne out cmc cld add adc pop daa cs push pop gs jae (bad) mov mov ror (bad) fucom jmp stc add movhps inc inc dec push pop arpl jns mov mov ret lret (bad) pop arpl jp mov mov ret (bad) call or sbb sub ss pusha push (bad) xchg popf movsb stos mov ror (bad) fsubp in repz add adc pop es push add push mov mov (bad) lret rcr loope out idiv add adc pop daa cs pop pop insw je orl mov (bad) (bad) jmp or sbb sub ss pusha outsb jne orl mov add add fchs call or xor aas inc dec push pop bound js xchg scas mov (bad) fnclex jmp or xor ds dec push pop bound ja test mov (bad) int3 rcr loope out idiv add adc and das ss popa push mov mov (bad) lret rcr loopne out idiv add sub aaa ds dec push pop bound add add jle lea mov loope out idiv add adc and das ss pusha add jge mov mov fnclex jmp or xor aas inc dec push pop bound ja test mov fsub ljmp sbb sub cmp inc dec push pop bound ja xchg mov mov loope out idiv add add push or sbb sub aaa ds dec push pop pusha push mov mov ret lret (bad) in hlt sti add adc push and dec push pop popa push mov mov (bad) lret rcr loopne out cmc cld add adc pop es push push pop gs jae orl enter in repnz add push adc cmp inc dec push pop arpl js xchg add mov loop lock add adc and das ss popa push xchg mov mov loope out idiv add sub aaa ds dec push pop popa push lea mov loop out idiv add adc and das aaa ds dec push pop bound ja jmp cli add movhps inc inc dec push pop gs jae (bad) mov add xchg sahf cmpsb lods mov ret fcomp out hlt sti add adc push and dec dec push pop gs jae orl enter in repz add movhps inc inc dec push pop arpl jns xchg mov mov jecxz icebp clc incl or xor ds dec push pop popa push mov mov ret lret (bad) in hlt sti add adc pop add add add push pop pop outsb jbe test mov mov jecxz repnz add adc and cs pop pusha outsb jne test mov mov jecxz repnz add push adc cmp inc dec push pop bound ja xchg mov mov loop lock add sub aaa ds dec push pop bound ja test mov les lret rcr loope out idiv add sub cmp dec push pop imul xchg mov ret xlat fsubp in hlt sti add adc push and dec push pop pusha push mov mov (bad) int fninit ljmp push es push push pop insw jne test scas mov (bad) lret rcr loope out idiv add sub aaa aas inc dec push pop fs add add mov mov ror xlat fsubp in repz add movhps cmp dec push pop gs jae orl (bad) into aad jecxz icebp clc incl or xor ds dec push pop bound ja test mov (bad) int fsub ljmp sbb sub ss bound ja xchg mov mov loope out idiv add add adc and cs pop insw je orl mov ret lret loopne out cmc cld add adc pop es push pop pop insw je (bad) mov mov ror (bad) fucom in repz add movhps inc inc dec push pop arpl js xchg mov mov loope out idiv add adc and das ss bound jns xchg add mov leave rcl (bad) in hlt sti add adc push and inc dec push pop pop insw je (bad) mov mov ror (bad) fucom jmp stc add push adc aaa ds dec push pop popa push mov mov ret lret (bad) in hlt sti add adc push and dec push push pop gs jae orl leave rcl fsubp in repz add movhps xor inc inc dec push pop arpl js xchg mov mov loop lock push or sbb sub cmp inc dec push pop bound ja test mov (bad) (bad) call or sbb daa cs pop pop insw je orl mov ret xlat fsubp in repz add movhps and dec dec push pop gs je (bad) mov mov roll add enter in repnz add push adc add inc dec dec push pop imul xchg mov (bad) int3 rcr loope lock incl or sbb sub cmp dec push pop arpl jns xchg mov ret xlat fsubp in repz add adc push and dec push push pop gs jae orl (bad) into aad jecxz icebp clc incl or xor ds dec push pop popa push mov mov ret lret loope out idiv add adc cmp dec push pop imul xchg mov ret (bad) fucom in repnz add push adc cmp push pop pusha outsl jbe mov mov loope hlt incb push push sbb inc dec push pop fs jne test mov ret lret rcr loope repz add adc and xor add ds dec push pop gs je (bad) mov xchg pushf movsb lods mov ret int3 rcr in idiv pop movhps es push pop bound jns xchg mov (bad) fnclex jmp stc add adc and das ss arpl jns mov mov (bad) fninit ljmp and xor aas inc dec push pop insw jne test mov in cmc std or sbb daa xor inc inc push pop bound jp mov ror (bad) call push adc cmp dec push pop popa push lea rol (bad) fucom jmp stc add movhps es aaa ds dec push pop fs jae orl leave rcr loopne cmp push pop popa imul popf movsl lods mov ret lret rcr loope lock push push adc add add pop pusha add jp mov mov ret fcomp out cmc std add adc and cmp push pop bound ja xchg mov ror xlat (bad) out cmc cld add adc and xor inc dec dec pop bound js test cmp dec push pop pusha outsb jne orl mov ror aad in repnz add fs jae (bad) mov mov add fsub jmp push adc and xor inc inc dec dec push pop pop gs je jg mov stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop bound jb jge add add popf mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop pop gs je jg mov test ret enter fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp push adc push and add add xor cmp pop pop bound jb jl xchg stos mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha gs je jg mov test ret leave into roll add (bad) jmp add push adc push and sub dec dec push push pop bound jb jl xchg stos mov mov (bad) fneni(8087 in lock cli incl pop and das xor aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop gs je add jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and sub inc dec push push pop bound jno jl xchg movsl stos mov mov aad (bad) ljmp lldt add and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add or sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov add iret aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add or adc xor dec push pop pop imul mov mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec add pop popa data16 jno add jbe addl mov mov fcmovu in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add and inc inc dec dec push pop pop fs je jg mov test ret enter fucom out repnz add or pop sbb add daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub ss inc dec push push pop popa imul addb mov mov add rcl fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repnz std add or daa sub aaa cmp inc dec push push pop bound jno jl xchg stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul jns orl test mov mov fcomp loop in repnz add or pop sbb es cmp dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov rcr fucom call add or add add daa sub aaa cmp inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop arpl je jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop popa imul addl mov rol add add aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addl mov rol rcl fcmovu in out hlt cli incl lldt das xor dec push pop pop imul add jns test movsb test ret leave into rcr fsubp call add or daa sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp adc das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repnz std add or add sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or daa sub aaa cmp inc dec push add bound jb jge xchg lods mov mov add xlat fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov test (bad) lret (bad) in out hlt stc incb or adc push and xor cmp pop pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop pop gs je add add jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and xor cmp pop pop bound jb jl xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb add sub xor dec push pop pop fs je jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aam (bad) ljmp unpcklps push and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov add add xlat fsub out repnz add or pop sbb es cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incl unpcklps push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov add fucom out repnz add or daa sub aaa cmp inc dec push push pop popa imul add jnp xchg movsl stos mov mov aam (bad) jmp add unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or pop sbb es cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and add add sub xor cmp pop pop bound jb jge xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into rcr fsubp call add or and cs ds dec dec push pop pop arpl jae jge mov test mov mov add add xlat fsub out icebp sub xor aas inc dec dec push pop pusha gs jne jg mov stos scas mov mov fcmovu in out cmc cli incl pop and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add or push sbb sub cmp dec push push pop pusha imul addl mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg cmpsl lods mov mov fcomp loop in repnz add or sub dec dec push pop pop arpl jb jge mov movsb stos scas mov mov fcmovu in out cmc cli incl pop and aas inc dec dec push pop pop gs add add jp test movsl stos mov mov aad loopne jmp cmc sti add and sub cmp dec push push pop pusha imul addb cmpsb lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp jecxz in repz std add or add sub dec dec push pop pop arpl jae jle mov test mov mov (bad) in out hlt stc incb push adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) lret fcmovu in out add sti add or push sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat add loop in repnz add or pop sbb daa sub inc dec push push pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp or sub xor inc dec push pop pusha push mov lods add repz add adc jnp xchg cmpsl lods mov mov add sub cmp inc dec push pop bound ja test mov mov loope out idiv add adc and das ss popa push mov mov ret lret (bad) in hlt sti add adc pop and dec dec push pop fs jae orl enter in repnz add push adc cmp dec push pop arpl js xchg mov mov fsub ljmp sbb sub cmp inc dec push pop bound ja test mov (bad) lret rcr loope out idiv add adc and cs pop pusha outsb jne orl mov ret xlat fsubp in repz add adc push and dec dec add add imul xchg mov rol aad jecxz icebp clc incl or xor aas inc dec push pop bound ja test mov (bad) lret rcr loopne out idiv add adc and das ss pusha outsb jne orl mov ret lret (bad) in hlt sti add adc push and dec dec push pop imul xchg mov mov loop add idiv add sub ss pusha outsl jne orl mov ret lret (bad) in hlt sti add adc push and dec dec push pop imul mov mov rol aad jecxz icebp clc incl or xor aas inc dec push pop bound ja test mov (bad) lret rcr loopne out idiv add adc and cs pop pop insw je (bad) mov mov ror (bad) fsubp jmp stc add push adc cmp dec push pop arpl js xchg mov add (bad) into aad in repnz add push adc cmp inc dec push pop bound ja test mov (bad) (bad) call or sbb daa cs pop pusha outsb jne orl mov ret xlat fsubp in repz add add add pop push and dec dec push pop imul xchg mov ror (bad) fucom jmp stc add push adc cmp inc dec push pop bound ja test mov (bad) lret rcr loope out idiv add adc and cs pop pusha insw jne (bad) mov mov vpaddq loop lock add sub ss pusha push mov add add lret (bad) out cmc cld add adc pop es push push pop gs jae orl add rcl fsubp in repz add movhps and dec dec push pop imul xchg mov rol aam jecxz icebp clc incl or xor ds dec push pop bound ja test mov (bad) lret rcr loopne out cmc cld add adc pop es add inc dec push push pop insw je (bad) mov mov ror xlat fsubp in repz add movhps inc inc dec push pop arpl js xchg mov mov loop lock add sub ss dec push pop popa push mov mov ret lret (bad) in hlt cld add adc pop es push pop pop insw je (bad) mov mov roll enter in repnz add push adc cmp dec push pop arpl js fsubp in repz add adc push add sub push push pop gs jae orl (bad) into aad in repnz add push adc cmp push push pop insw je (bad) mov mov ror (bad) fucom jmp stc add push adc cmp inc dec push pop bound ja test scas mov (bad) (bad) call or sbb daa cs pop pop insw je (bad) mov mov mov fsubp in hlt sti add adc push and dec dec push pop imul mov mov rol aad jecxz icebp clc incl or xor ds dec push pop bound ja test mov (bad) lret rcr loopne out cmc cld add adc pop es add dec push pop pop insw je (bad) mov mov ret xlat fsubp in repz add adc push and dec dec push pop imul xchg mov mov loop lock add sub aaa cmp popa push mov mov (bad) lret rcr loopne out cmc cld add adc pop es push push pop gs jae orl enter add add (bad) fucom jmp stc add movhps sub cmp inc dec push pop arpl js xchg mov add (bad) into aad jecxz icebp clc incl or xor aas inc dec push pop bound ja mov mov rol (bad) fucom jmp stc add or xor aas inc dec push pop bound ja test mov (bad) (bad) call or sbb daa cs pop add add insl je (bad) mov mov ror xlat fsubp in repz add movhps inc dec dec push pop imul xchg mov mov loop lock add sub aaa ds dec push pop popa push mov mov (bad) lret rcr loopne out cmc cld add adc pop es push push pop gs jae orl enter in add stc add push adc cmp inc dec push pop arpl js xchg mov mov fnclex ljmp sbb sub aaa ds dec push pop popa push mov mov (bad) lret rcr loope out idiv add adc and cs pop pop insw jne orl mov ret xlat fsubp in repz add adc push and dec dec push pop imul add mov (bad) into aad jecxz icebp clc incl or xor aas inc dec push pop bound ja test mov (bad) lret rcr jecxz icebp clc incl push adc cmp inc dec push pop bound ja test mov (bad) lret rcr loopne out cmc cld add adc and cs pop pop data16 jne orl mov ret xlat fsubp in hlt sti add adc pop add es push pop pop gs jae orl enter in repz add movhps inc inc dec push pop arpl jns xchg mov mov jecxz lock add sub cmp inc dec push pop bound ja test mov (bad) (bad) call or sbb daa cs pop pop insw je (bad) mov add leave rcl fsubp in repz add movhps inc dec dec push pop imul xchg mov mov loop icebp clc incl or xor ds dec push pop popa push mov mov (bad) lret rcr loopne out cmc cld add adc pop es push pop pop insw je (bad) mov mov ror xlat fsubp in repz add movhps add cmp dec push pop fs jae orl (bad) into aad jecxz icebp clc incl or xor inc dec push push pop insw je (bad) mov mov ror (bad) fucom jmp stc add push push sbb inc inc dec push pop arpl js xchg mov mov loope out idiv add adc and cs pop pop insw jne orl mov ret add leave rcl fsubp in repz add movhps inc inc dec push pop arpl js xchg mov mov loop lock push or xor ds dec push pop popa push mov mov ret lret (bad) in hlt sti add adc push es push push pop gs jae orl enter in repnz add push adc xor inc dec dec add add imul xchg mov mov jecxz icebp clc incl or xor ds dec push pop popa push mov mov (bad) lret rcr loopne out cmc cld add adc pop es push pop pop insw je (bad) mov mov ror (bad) fucom jmp stc add push push sbb inc inc dec push pop arpl js xchg mov mov loop add lock add sub ss popa push mov mov fsub ljmp sbb sub aaa aas inc dec push pop bound ja test mov (bad) lret rcr loopne out cmc cld add adc and cs pop pop insw je (bad) mov mov ret xlat fsubp in repz add movhps inc inc dec push pop arpl jns add mov (bad) int fnclex jmp or sbb sub aaa ds dec push pop popa push mov mov (bad) lret rcr loopne out idiv add adc and cs pop pop insw je (bad) mov mov ror (bad) fucom jmp stc add movhps inc inc dec push pop arpl js xchg mov mov fsub ljmp or xor aas inc dec push pop bound ja test mov (bad) (bad) call or sbb daa cs pop pop insw je (bad) mov mov ret xlat fsubp in repz add movhps inc dec dec push pop imul xchg mov mov loop lock add sub ss popa push mov add ret lret rcr loopne out cmc cld push or xor ds dec push pop popa push mov mov (bad) lret rcr loopne out cmc cld add adc pop es push push pop data16 jae orl (bad) into aad jecxz repnz add push adc cmp inc dec push pop bound ja test mov mov add ljmp sbb sub add add aaa ds dec push pop bound ja test mov (bad) (bad) call or sbb daa cs pop pop insw je (bad) mov mov ror xlat fsubp in repz add movhps inc dec dec push pop imul xchg mov mov loop lock push or sbb sub aaa ds dec push pop popa push mov mov add (bad) lret rcr loopne out cmc cld add adc pop es push push pop gs jae orl enter in repnz add push adc cmp dec push pop arpl js xchg mov mov loope out idiv add sub ss pusha outsb jne orl mov ret xlat fiadd out cmc cld add adc pop es push pop bound ja test mov (bad) (bad) call or sbb daa cs pop pop add jne orl mov ret lret loope out idiv add adc and cs pop pop insw jne test mov mov jecxz icebp stc add push push sbb inc dec push push pop insw jne orl mov (bad) lret aam loop add lock incl push push push and dec push pop pusha outsl jbe xchg mov ror xlat (bad) out idiv add adc inc dec push pop arpl lock add adc pop es push push pop gs jae orl leave rcl fsubp in repz add adc xor dec push pop pop fs je jg mov test (bad) leave into roll add (bad) jecxz out repz incb or sub inc dec push push pop bound jb jl xchg test mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop arpl jae jle orl test mov mov es cmp dec push push pop pusha gs jne addb movsb stos scas mov mov (bad) in out repz incb or adc sbb cmp inc dec dec push pop pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec push push pop pusha imul add add lcall mov fcmovu in out hlt stc incl push adc push add inc inc dec dec push pop pop fs je jg mov test (bad) leave into rcr fsubp call add push adc sbb cmp inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb add sub cmp dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or pop sbb es ss inc dec push push pop popa imul addl mov rol rcl add add (bad) ljmp unpckhps pop and das xor aas inc dec dec push pop pop add jne addb movsl stos scas mov mov (bad) in out hlt stc incb push adc push and xor cmp pop pop bound jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb xchg movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov fcomp jecxz in repz std add or sub inc dec push push pop bound jb jl xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub add push push pop pusha gs jne jg mov stos add lret rcl fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and sub dec dec push pop pop bound jb jl xchg lods mov mov xlat fldl add out repnz add or daa sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop imul mov mov mov fcmovu in out cmc cli incl and inc inc dec push push pop pusha gs jne addb fwait mov mov (bad) fndisi(8087 out icebp idiv add pop or pop sbb aaa cmp push pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam (bad) jmp add unpcklps pop and das xor aas inc dec add add pop pop gs jne jg mov stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out repnz add or daa sub inc dec push push pop bound jb jge xchg test mov mov fcomp loop in repz incb add add push adc push and xor ds dec dec push add fs je jg mov stos scas mov mov fcmovu in out hlt cli incl and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop popa imul addl mov add add loope out clc add pop and das xor dec push pop pop imul mov lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jb add add (bad) xchg cmpsl lods add int xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz incb or sub inc dec push push pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps add add and cs ds dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz incb or daa sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov add rcl fcmovu in add cmc sti add pop and aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha gs jne addb movsl stos scas mov mov (bad) in out repz incb or sub inc dec push push pop popa insb add add jl xchg stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop gs je jg mov test ret leave into rcr fsubp call add or add add xor cmp push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock sti add pop and aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov add (bad) leave iret aam fsubp jmp add or sub inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop add add add jne jg mov test (bad) leave iret aam fsubp jmp add push adc sbb aaa cmp push pop popa data16 jno jnp xchg movsl stos mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add add adc das xor dec push pop pop arpl jae jle mov cmpsl lods mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop imul mov lods mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov movsl stos mov add aad loopne ljmp unpcklps pop and cs ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or adc xor dec push pop pop imul mov lods mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha add add jo jp test movsb test (bad) leave into rcr fsubp jmp add push adc sbb cmp push pop bound jno jl xchg stos mov mov aad loopne ljmp unpckhps pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) faddl loop in repnz add add or pop sbb daa sub cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz incb or adc push and sub inc dec push push pop bound jno jl xchg stos mov mov aad (bad) ljmp unpckhps pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov ret rcl fsub out icebp idiv add or push sbb sub xor push push pop pop gs je jg mov test ret enter fucom call add or daa sub inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc add and aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repnz std add or sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and das xor dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa add jb jge xchg cmpsl lods mov add xlat fsub out repnz add or pop sbb daa sub aaa cmp dec push pop pop arpl jne orl mov ret xlat fsubp jmp stc add movhps inc dec push pop pusha push mov mov (bad) lret rcr loopne out idiv add sub cmp dec push pop fs jae orl int3 rcr loope out idiv add sub xor inc dec push push pop insw jne orl mov (bad) into aad in repz add adc and das ss arpl jns mov mov (bad) into aad in hlt sti add adc and xor inc dec push pop pusha push (bad) xchg lahf cmpsl scas mov (bad) into (bad) fsubp in cmc std add adc and xor inc dec push pop bound jb (bad) mov mov ret lret jecxz icebp stc add add adc pop daa das ss dec push pop data16 jne test mov loop icebp stc add adc and xor pop arpl jp mov mov ret lret rcr loope icebp clc add movhps sub aaa aas inc push pop bound jge mov ret xlat (bad) out idiv add adc and xor inc dec dec push pop data16 jbe test mov ror (bad) fsubp in hlt sti add adc and cs arpl jns mov mov ret lret rcr loope lock push push adc cmp push pop pop outsb jne test mov loope lock pop push push sbb inc dec push pop popa outsb jne test scas mov (bad) lret rcr jecxz repnz add adc and xor inc dec push pop pop data16 jbe test mov (bad) out idiv push push adc cmp push pop pop outsb jbe xchg mov ret lret rcr loop icebp stc add adc and xor aas inc dec push pop insw jbe xchg mov (bad) int3 aam jecxz repz add adc and xor inc inc dec push pop outsb jbe test mov ret (bad) ljmp push and dec push pop imul mov add add enter out idiv push or xor pop fs jae orl mov loope lock push push adc cmp push pop pop outsl ja xchg mov (bad) int3 rcr loop icebp stc add adc and xor aas inc dec push pop gs jne test mov ret lret rcr loope lock add cs pop bound jns add orl into (bad) fsubp in hlt cld add adc and xor inc inc dec push pop gs je (bad) mov mov (bad) into (bad) fucom in hlt std add adc and xor inc dec push pop pusha push (bad) xchg sahf cmpsb scas mov (bad) int3 rcr loop icebp stc add adc pop es bound jns mov mov (bad) fninit jmp stc add adc and das aaa ds dec push add pop gs jae (bad) mov mov (bad) int fsubp out stc add adc and xor inc dec push pop pop outsl jbe xchg mov (bad) into aad out idiv push or xor pop fs je test mov (bad) int3 aam jecxz repz add adc and xor inc dec push add jae (bad) mov mov (bad) int (bad) call adc and das aaa aas inc add add pop data16 jne test mov ror fchs call movhps daa das aaa ds dec push pop outsb jne orl mov (bad) fsub jmp stc add adc and xor inc dec push pop pop outsl ja xchg mov (bad) lret rcr jecxz repnz add adc and das ss dec push pop gs jae (bad) mov mov fucom in repz add adc pop daa add add xor pop bound js cli add adc and cs dec push pop arpl jp mov mov vpaddq jecxz icebp stc add movhps es push pop arpl jnp mov mov loop icebp stc add adc pop daa das aaa aas inc dec push pop add ja xchg mov (bad) int3 aam jecxz hlt cld add adc and xor ds dec push pop insw jne add jle mov mov out idiv push bndldx sub cmp push pop bound jns mov mov (bad) rcr loopne icebp sti add adc and xor inc inc dec push pop insw jne orl mov vpaddq jecxz repnz add adc and xor ds dec push pop gs je (bad) mov mov (bad) int3 rcr loop icebp stc add adc pop es push pop popa add js xchg mov ror fcomp out idiv add sub cmp dec push pop gs jne test mov rol (bad) fsubp out cmc cld add adc and xor inc dec push push pop data16 jbe test mov fsubp in hlt cld add sub cmp push pop popa imul sahf movsl lods mov ret lret rcr loop repnz add adc pop daa add xor pop imul mov mov (bad) fninit ljmp pop es fs jae orl mov (bad) iret (bad) fsubp out idiv add sub cmp push pop popa push (bad) xchg sahf cmpsb lods mov vpaddq jecxz repnz add movhps es push pop bound jns mov mov ret lret rcr loop icebp clc add movhps and dec push pop pusha push mov mov fsub ljmp sbb sub aaa aas inc dec push pop imul mov mov ret lret rcr loopne out idiv add sub cmp dec push pop fs jae jl mov mov (bad) int fsub jmp stc add movhps and dec push pop pusha outsl jbe xchg mov add (bad) lret rcr loope out idiv push or xor inc dec push pop popa push mov mov in repz add adc pop es push pop pusha outsb jne test mov loope icebp clc add adc pop es dec push pop fs jae (bad) mov mov (bad) into aad in repz add adc and xor inc dec push pop pop outsb jbe test add fwait mov leave rcr (bad) out idiv push or xor inc dec push pop pusha outsl jbe xchg mov vpaddq in repz add adc and xor inc dec push pop popa imul lahf cmpsl scas mov (bad) into (bad) fsubp in cmc std add es arpl jp mov mov (bad) out idiv push push push sbb inc dec push pop fs jae orl mov (bad) out idiv push push push push and dec push pop imul mov mov (bad) iret xlat (bad) out idiv push or xor inc dec push push pop imul lea ror (bad) fsubp in hlt cld add adc and xor inc inc dec push pop data16 jbe test mov ret fsub call movhps es pop add add jnp mov mov (bad) out idiv push push push push es dec push pop fs jae orl mov loopne lock incl push adc aaa aas inc dec push pop popa imul pushf movsb add fnclex jmp movhps and dec push pop popa imul lahf cmpsl scas mov vpmullw in repz add adc and add add xor pop arpl jnp mov (bad) into (bad) fsubp in cmc cld add adc and xor inc dec push pop popa imul mov (bad) into (bad) fsubp out idiv push push push push es push pop arpl jnp mov mov loope icebp stc add adc and xor aas inc dec push pop data16 jbe xchg mov vpmullw in repz add adc and add add cmp push pop popa imul mov leave rcr loope out idiv add sub cmp dec push pop gs je orl mov (bad) into (bad) fsubp in hlt cld add adc and xor inc dec push pop add jo jg lea mov (bad) in hlt sti add adc and cs bound js xchg mov ret lret rcr loope lock add add add incl push push sbb inc dec push pop bound ja test scas mov (bad) fnclex jmp or xor cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out repnz add pop or push sbb daa sub cmp dec push push pop pusha imul jg mov stos mov mov aad loopne ljmp unpckhps and inc inc dec dec push pop pop imul xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and aas inc dec dec push pop popa push mov mov movb int fsub jmp cli add movhps inc dec push pop bound jbe xchg mov ret lret loopne out idiv add sub cmp dec push pop fs jae (bad) mov mov ret fcomp out hlt cld add adc and cs pop pusha push mov mov (bad) in hlt sti add adc pop es pusha outsl ja test mov ror fcomp out idiv add sub cmp inc dec push pop gs je (bad) mov mov vpaddq jecxz repz add adc and cs dec push pop data16 addb mov (bad) iret xlat (bad) out (bad) dec push outsl clc adc and dec pop pusha insl je xchg pushf movsb stos mov mov jecxz lock add adc and das ss pop insw je orl rcr loopne lock add adc and xor inc dec push pop popa imul sahf movsl lods mov ret lret loopne out idiv add sub cmp inc dec push pop imul mov mov ror xlat fsubp out cmc cld add adc and xor inc inc dec push pop data16 jne test mov fucom in repz add adc and das add add add add aas inc dec push pop bound jp mov mov mov in repz add adc and das ss bound js test stos mov mov in repz add adc and xor inc inc dec push pop gs jne test loop repnz add adc pop daa das ss dec push pop imul mov mov (bad) iret (bad) fucom in hlt sti add adc add sub cmp dec push pop data16 jne test mov mov lock push or xor inc dec push pop jbe mov mov ror aad jecxz lock push push adc cmp inc dec push pop arpl js xchg mov mov loope out idiv add adc and cs pop popa push mov mov ss dec push pop fs je test mov rol (bad) fucom in hlt sti add adc and xor inc inc dec push pop gs jne test mov ror fabs jmp adc cmp dec push pop arpl jp mov mov loopne out idiv pop push push push and dec push pop imul xchg lcall rcr loope icebp clc add movhps es add add aas inc dec push pop data16 jne test mov (bad) lret rcr jecxz repnz add movhps inc dec push pop pop insw jne test mov rol (bad) fucom in repz add adc pop es push pop pop insw je (bad) mov mov ror (bad) fucom jmp stc add movhps inc dec dec push pop imul xchg mov mov loop add clc incl or xor ds dec push pop popa push mov mov (bad) lret rcr loope out idiv add adc and cs pop pop data16 jne orl mov ret xlat (bad) in hlt sti add adc push and dec dec push pop gs jae orl (bad) into aad jecxz icebp stc incl push adc cmp inc dec push pop bound ja xchg mov mov loope lock add sub ss pusha outsb jne orl mov ret fcomp out hlt sti add adc pop es push push pop gs jae orl (bad) into aad jecxz repnz add push push sbb inc dec dec push pop imul xchg mov mov loop lock add add and xor ds dec push pop popa push mov mov (bad) lret rcr loopne out cmc cld add adc pop es push push pop gs jae addb mov (bad) lret rcr loopne out cmc cld add adc pop es push push pop gs jae orl (bad) into aad jecxz icebp clc incl or xor aas inc dec push pop bound ja test scas mov (bad) int3 rcr loope out idiv add adc and cs pop pop insw je orl mov ret xlat fsubp in repz add movhps inc inc dec push pop imul xchg mov mov jecxz icebp clc incl or xor ds dec push pop popa push mov mov ret lret loopne in hlt sti add adc push and add push push pop gs jae (bad) mov mov ror (bad) fucom jmp stc add push adc cmp inc dec push pop arpl js xchg mov rol aad jecxz icebp clc incl or xor ds dec push pop popa push mov mov ret lret (bad) in hlt sti add adc pop es dec push pop imul xchg mov mov add add fsub ljmp sbb sub aaa ds dec push pop bound jbe test scas mov ret lret (bad) in hlt sti add adc push and dec dec push pop imul xchg mov mov loope out idiv add adc sub cmp inc dec push pop bound ja test mov (bad) lret rcr (bad) out cmc cld add adc pop es push push pop add je (bad) mov mov ror (bad) fucom jmp sti add adc pop es push pop pusha push lea rol (bad) fsubp in repz add adc and das ss pusha push mov mov ret lret (bad) out cmc cld add adc and das ss popa push mov mov (bad) (bad) call or sbb sub cmp inc dec push pop arpl js xchg mov mov loop lock add sub ss popa push mov mov (bad) lret rcr loopne out cmc cld add adc push and dec push push pop gs jae orl (bad) into aad in repnz add movhps inc inc dec push pop imul xchg add add into aad in hlt sti add adc push and dec dec push pop imul xchg mov mov loop icebp clc incl or xor ds dec push pop popa push mov mov (bad) lret rcr loop icebp clc add adc pop es push pop popa imul lcall lret rcr loopne out cmc cld add adc pop es add inc dec push push pop gs jae orl (bad) int fnclex jmp or xor aas inc dec push pop popa imul lcall int3 rcr loope out idiv add adc and cs pop pusha data16 jne orl mov ret xlat fsubp in repz add adc sbb inc dec dec push pop imul mov mov rol add fucom jmp stc add push adc cmp inc dec push pop arpl js xchg mov (bad) int fsub jmp cli add movhps and dec push push pop gs jae orl leave rcl fsubp in repz add movhps inc dec dec push pop imul mov mov ror fcomp out hlt cld add adc and xor inc dec push pop gs jae (bad) add mov mov ret lret rcr loope out idiv add sub aaa ds dec push pop bound ja xchg mov mov loop lock add sub aaa ds dec push pop bound ja xchg mov mov loop lock add sub aaa ds dec push pop insw je orl mov (bad) lret rcr loop lock add sub add cmp dec push pop arpl jns xchg mov mov out cmc incb sub aaa ds dec push pop popa push lea mov in repz add movhps inc dec dec push pop imul mov mov ret xlat fsubp in repz add adc push and dec push push pop insw jne orl mov ret lret roll add (bad) out cmc cld add adc and cs pop pop insw je orl mov ret lret (bad) in hlt sti add adc pop es push push pop outsb jne test scas mov ret lret rcr loopne out cmc cld add adc and das ss pusha outsb jne test scas mov (bad) rcl fsubrp icebp clc incl or xor aas inc dec push pop arpl js addb mov rol aad jecxz icebp clc incl or xor ds dec push pop popa push mov mov (bad) fnclex jmp or sbb sub aaa ds dec push pop bound ja test mov (bad) lret rcr loopne out cmc cld add adc and das ss dec push pop bound js xchg mov mov loop lock add sbb sub aaa ds dec push pop popa push mov mov (bad) (bad) call or sbb daa cs pop pop insw je (bad) mov mov ret (bad) fucom in repz add adc push and dec dec push pop gs je (bad) mov mov ret fcomp out hlt sti add adc pop es push push pop gs je (bad) mov add mov ror (bad) fsubp in repz add movhps and dec dec push pop gs je orl mov ret lret loopne out cmc cld add adc and xor ds dec push pop popa push mov mov fsubp in repz add movhps inc dec push pop popa push mov mov (bad) lret rcr loopne in cmc cld add adc and cs add pop pusha outsb jne orl mov (bad) lret rcr loopne out idiv add sub cmp push push pop insw je orl mov (bad) (bad) jmp or xor aas inc dec push pop bound ja test mov (bad) (bad) call or sbb sub xor pop pusha outsb jbe test scas mov ret lret loopne out cmc add add add adc and sub push pop pusha outsb jbe test mov mov in repz add movhps and dec dec push pop imul xchg mov ror xlat (bad) out cmc cld add adc and das aaa aas inc dec push pop imul xchg mov rol aad in repnz add push adc cmp dec push pop gs jae orl add add into (bad) fucom jmp stc add prefetcht2 es push pop pop outsb jne (bad) mov mov ret lret (bad) in hlt sti add adc and cs pop pop insw je orl mov ret lret (bad) in hlt cld add adc and das ss pusha outsb jbe test mov (bad) int3 rcr loope out idiv add adc and das aaa ds add dec push pop popa push mov mov (bad) fnclex jmp or sbb sub ss popa push mov mov (bad) fabs call or sbb daa cs pop pusha outsb jne test scas mov ret lret loopne out idiv add adc and das ss pusha outsb jne orl mov ret fcomp add add in hlt sti add adc push and dec dec push pop gs jae orl (bad) into aad jecxz repnz add movhps inc inc dec push pop arpl js xchg mov ror (bad) fucom jmp cli add adc and das ss arpl jns xchg mov ror (bad) fucom jmp cli add movhps and xor inc dec push push pop gs jae (bad) add mov mov ret fcomp out cmc cld add adc push and dec push push pop gs jae orl (bad) into aad jecxz repnz add push adc cmp dec push pop arpl js xchg mov mov loop lock push or xor pop popa imul popf movsl lods mov ret fcomp out cmc cld add adc pop daa add xor pop pop insw je orl mov ret xlat fsubp in repz add movhps inc dec dec push pop imul xchg mov mov loop icebp stc add pop push and dec push pop pop insw jne orl mov ret lret rcr loopne out cmc cld add adc pop es push pop pusha push jl mov mov loopne out idiv add sub aaa aas dec push pop pusha outsb jne orl mov (bad) int fnclex jmp or xor ds dec push pop bound ja test mov (bad) lret rcr loopne out idiv add adc and das ss pusha outsb jne orl mov ret lret (bad) out cmc cld add adc pop es push push pop gs je add (bad) mov mov ror (bad) fucom in repz add adc push and dec push push pop gs jae orl (bad) into aad jecxz icebp clc add push adc cmp inc dec push pop popa push mov mov (bad) lret rcr loopne out cmc cld add adc pop es (bad) fsubp in repz add movhps sub cmp dec push pop arpl jns xchg pushf mov (bad) int fsub ljmp sbb sub aaa ds dec push pop popa push mov mov (bad) lret rcr loopne out cmc std add adc and cs pop pop insw je (bad) mov mov ret xlat fsubp in repz add movhps inc dec dec push pop arpl jns xchg mov mov loop lock add sub add add add add ss pusha outsb jbe test scas mov ret lret (bad) in hlt sti add adc push and dec dec push pop imul mov mov rol (bad) fucom jmp stc add or xor aas inc dec push pop bound ja test mov (bad) lret rcr loopne out cmc cld add adc pop es push pop pop insw je (bad) mov mov add add enter in repnz add push adc cmp inc dec push pop arpl js xchg mov mov loop lock add sub ss pusha outsb jne orl mov ret xlat fsubp in repz add movhps inc dec dec push pop imul xchg mov rol aad jecxz icebp clc incl or xor aas inc dec add push pop bound ja test mov (bad) lret rcr loopne out cmc std add adc and cs pop pop insw je orl mov ret xlat fsubp in repz add movhps inc inc dec push pop arpl jns xchg mov mov loop lock add sub ss pusha outsb jbe test scas mov ret lret fild add in hlt sti add adc push and dec push push pop gs jae (bad) mov mov (bad) lret rcr loopne out clc decl adc push and dec push push pop gs jae orl (bad) into aad in repnz add push adc cmp inc dec push pop bound ja test mov (bad) fsub in stc add push adc cmp inc dec push pop arpl jns mov xchg lcall lret rcr loopne out cmc cld add adc and cs pop pop insw je (bad) mov mov ret xlat fsubp in repz add movhps and dec dec push pop imul xchg mov mov loop lock add sub aaa cmp popa push mov mov ret lret (bad) in hlt sti add adc push add add dec push push pop gs jae orl enter in repnz add push adc cmp inc dec push pop bound ja test mov (bad) (bad) jmp or sbb daa das ss pusha outsb jne orl mov ret fcomp out hlt sti add adc push and dec push push pop gs jae orl mov fnclex jmp or sbb sub ss pusha outsl jbe test scas mov (bad) lret rcr loopne out cmc cld add adc pop es push push pop gs jae orl (bad) into aad jecxz icebp clc incl or xor aas inc dec push pop bound ja test mov (bad) lret rcr loopne out cmc cld add adc pop es add dec push pop pop insw je (bad) mov mov ror (bad) fucom jmp stc add push adc cmp inc dec push pop bound ja test mov (bad) fchs out cmc cld add adc pop es push pop pop insw je (bad) mov mov ror (bad) fucom jmp stc add movhps and dec dec push pop imul xchg mov mov add add loop lock push or xor ds dec push pop popa imul lcall lret rcr loopne out cmc cld add adc pop es push push pop gs jae orl (bad) iret (bad) fucom jmp stc add push adc cmp inc dec push pop bound ja test mov (bad) lret rcr loopne out cmc cld add adc pop daa cs pop pop data16 add jnp mov mov ror xlat fucom in repz add movhps inc inc dec push pop arpl js xchg mov mov loop lock add sub ss pusha outsb jne orl mov ret xlat fsubp in hlt sti add adc push and dec dec push pop imul xchg mov mov jecxz icebp clc add add push or xor aas inc dec push pop bound ja xchg mov mov loope out idiv add adc and xor ds dec push pop popa push mov mov ret lret (bad) in hlt cld add adc push and dec dec push pop imul xchg mov mov loop lock push or xor ds dec push pop popa push mov add xchg cltd mov ret lret (bad) out cmc cld add adc pop es push pop pop outsb jne orl mov ret xlat fsubp in repz add movhps inc inc dec push pop imul xchg mov mov jecxz lock add sub ss pusha outsl jbe test scas mov ret lret (bad) out cmc cld add adc pop add es push push pop gs jae orl (bad) iret (bad) fucom jmp stc incl or xor aas inc dec push pop bound ja test mov (bad) lret rcr loope out idiv add adc and cs pop pop insw je (bad) mov mov ror (bad) fucom in repz add movhps and dec dec push pop imul xchg mov mov fnclex jmp or sbb sub aaa ds dec push pop popa push mov mov ret lret loopne in hlt sti add adc push and dec dec push pop imul xchg mov rol aam loop icebp clc incb or xor ds dec push pop popa push mov mov ret lret (bad) in hlt sti add adc push and add dec dec push pop gs jae orl (bad) into aad jecxz icebp clc incl or xor aas inc dec push pop bound ja test mov (bad) (bad) call or sbb daa cs push pop gs je (bad) mov mov ror (bad) fucom jmp stc add push adc cmp dec push pop arpl js xchg mov ret leave iret (bad) add loopne in cmc add or das xor pop arpl jnp mov ror fsub jmp or xor inc push pop pusha push mov mov loope lock incl push adc cmp dec push pop gs je (bad) mov mov (bad) fninit ljmp push es push pop pop insw je (bad) mov add add rcr loopne out clc add adc and insl (bad) mov mov (bad) in hlt cld cmp imul (bad) fchs call or sbb es dec push pop imul mov mov (bad) lret rcr loope pop push and cmp push push pop gs jae orl int3 rcr jecxz repnz add movhps es pop fs je test mov ret lret loop repnz add adc and xor inc dec push pop pusha push (bad) xchg sahf cmpsb scas mov (bad) int fucom in cmc std add sub cmp push pop bound jp mov mov (bad) out idiv add sub push pop fs je orl mov loop icebp stc add adc and das cmp inc dec push pop data16 jbe test scas mov vpaddq in hlt cld add adc and xor inc dec push pop popa imul lahf cmpsl scas mov (bad) into aad in cmc cld add adc and xor inc dec push pop popa imul mov (bad) fnsetpm(287 in hlt cld add adc and xor inc dec push pop arpl jnp mov ror fsub call adc and xor inc lret add add fninit jmp cli add adc and xor inc dec push pop bound jns mov mov loopne lock incl nop/reserved sub cmp push pop pusha outsl ja xchg mov (bad) into (bad) fsubp out idiv push push push push es imul xchg mov rol (bad) fsubp in cmc cld add adc and xor inc dec push pop bound jp mov mov (bad) into (bad) fsubp out clc add movhps daa das aaa ds dec push pop gs je test mov ror fadds loop icebp stc add adc and das aaa ds dec push pop gs jne test mov jecxz repnz add adc and xor inc dec push pop popa imul mov (bad) iret xlat (bad) out idiv push push push sbb inc dec push pop fs je test add mov loope icebp stc add adc and xor inc dec push pop popa imul mov enter call adc pop sub cmp push pop popa imul mov enter out idiv pop movhps es dec push pop outsb jbe xchg mov vpmullw in hlt cld add adc and xor dec push pop arpl jnp mov mov add add lret loop repnz add adc and xor inc dec push pop popa imul mov ror fabs jmp adc and xor inc inc dec push pusha outsl ja xchg mov (bad) into (bad) fsubp out cmc std add sub cmp dec push pop data16 jbe xchg mov (bad) fsub in cmc std add adc and xor inc dec push pop bound jp mov mov ror fabs jmp adc and das aaa aas inc dec push pop outsb ja xchg mov (bad) fsub in hlt sti add adc and xor inc dec push pop bound jns mov mov (bad) out idiv push push push push es dec push pop gs jne test mov loop repnz add adc and xor inc inc dec push pop outsl jbe mov mov add loopne out idiv push push push push es pop gs je test mov loop icebp stc add adc and xor inc inc dec push pop outsl jbe xchg mov (bad) int3 aam in repz add adc and xor inc dec push pop popa imul mov (bad) iret xlat (bad) out idiv push push adc cmp dec push pop arpl jp mov add fsub call movhps daa das ss dec push pop gs jne test mov in repz add adc and xor inc dec push pop popa imul mov enter out idiv push push push push and dec push pop imul mov mov loopne lock incl movhps es ss dec push pop gs add test add add lret rcr jecxz repnz add adc and xor inc dec push pop pusha push (bad) xchg sahf cmpsb scas mov (bad) int fucom in hlt cld add adc and xor inc dec push pop popa imul mov (bad) iret xlat loopne lock add movhps es dec push pop gs je test mov ret fabs jmp movhps daa das aaa aas inc dec push pop gs jne test pushf movsb stos mov ret lret rcr jecxz repnz add adc and xor inc dec push pop pop outsl ja xchg mov (bad) int3 aam jecxz repz add adc and xor inc dec push pop pusha push (bad) xchg lahf cmpsb scas mov vpmullw in hlt cld add adc and xor inc dec push pop popa imul lahf cmpsb scas mov (bad) into (bad) fucom in cmc cld add push sbb ds dec push pop gs je test add mov mov loope icebp clc add adc and das aaa ds dec push pop insw jne test mov jecxz repz add adc and xor inc dec push pop bound jp mov mov loope icebp stc add adc and xor inc dec push pop pusha push (bad) xchg lahf cmpsl scas mov (bad) into (bad) fsubp in cmc std add sub push pop fs je test mov mov loop repnz add adc and xor inc dec push pop bound js mov mov vpmullw in hlt cld add adc and xor inc dec push pop popa imul mov (bad) into (bad) fsubp in cmc std add adc and xor inc dec push pop popa imul lahf cmpsl scas mov (bad) into aad in hlt cld add adc and xor inc dec push pop pusha push add addb mov (bad) into aad in cmc std add sub cmp dec push pop arpl jnp mov mov loope lock add adc pop daa das aaa ds dec push pop insw ja mov mov (bad) iret xlat (bad) out idiv push push push push es pop gs jne test mov jecxz repz add adc and xor inc dec add imul add add mov mov loop icebp stc add adc and xor inc dec push pop pusha push nop xchg mov (bad) iret xlat (bad) out idiv pop push push push es pop fs je test mov jecxz repz add adc and xor inc dec push pop popa push (bad) xchg mov leave rcr loopne lock incl movhps daa das ss dec push pop data16 jne add jge lea (bad) int3 aam in hlt cld add adc and xor inc dec push pop bound jns mov mov loopne out idiv pop movhps es inc dec push pop data16 jbe xchg mov vpmullw in hlt cld add adc and xor inc dec push pop bound jp mov mov loope icebp stc add adc and add cmp push pop bound add jp mov mov loope out cmc cld add jp xchg fwait mov (bad) int3 rcr loope lock push push pop push daa das cmp push pop pusha push mov mov (bad) int3 rcr loope out idiv add sub cmp push push pop insw jne test mov ror fcomp out notb sbb daa xchg ret lret rcr loope icebp stc add adc pop sub add aaa aas inc dec push pop insw jne test mov (bad) out testb adc and xor inc dec push pop pusha push (bad) xchg sahf movsl lods mov inc dec push pop imul xchg mov ret fcomp out idiv add adc and push pop pop insw je orl mov ret lret (bad) in hlt sti add and (bad) mov iret aad loop lock add adc and xor inc dec push pop pop outsl ja xchg mov ret fcomp out idiv add sub aas inc dec push pop imul mov and xor inc dec push pop popa imul lahf cmpsl scas mov vpaddq jecxz hlt sti add adc and xor inc dec push push pop outsl ja xchg mov vpmullw in hlt cld add adc and mov ret lret loop hlt sti add adc and xor inc dec push pop popa imul pushf mov enter out idiv push or xor dec push pop outsb jbe test mov loope icebp sti add aas inc dec push pop push xchg fwait mov iret fsub call adc and xor inc dec push pop outsl ja xchg mov ror (bad) fsubp add jmp stc add push adc cmp inc dec push pop bound ja test mov ret lret loop repz add adc pop es push push pop gs jae orl (bad) into aad jecxz lock add daa cs pop fs jne test mov ret lret rcr loop icebp stc add push push sbb inc dec push pop bound jns mov add mov int3 aad out idiv pop push push sbb inc dec push pop popa push mov mov fsubp in hlt sti add adc and cs dec push pop imul mov mov ret lret rcr loope lock incl or xor inc dec push push pop insw je orl mov (bad) int3 aam loop lock add adc and xor inc dec push pop popa push add jo addb mov enter out cmc cld add adc and xor inc dec dec push pop data16 jne test mov loope out idiv add sub cmp dec push pop data16 jne test mov ror xlat fsubp in hlt cld add adc and xor aas inc dec push pop gs je orl mov (bad) iret (bad) (bad) out idiv add adc and xor inc dec push pop pop outsl ja xchg mov (bad) lret aam jecxz repz add adc and xor aas inc dec push pop data16 jbe xchg mov (bad) int3 aam jecxz cmc std add sub cmp push pop popa push xchg pop push push push and dec push pop arpl jnp mov mov loopne out idiv pop movhps es pop popa imul add add movsl lods mov (bad) int3 aam jecxz repz add adc and xor aas inc dec push pop data16 jne test mov loop icebp clc add movhps es fs je orl mov loopne out idiv push push push and xor inc dec push pop pop outsb jbe test mov ret fsub call or xor inc dec push pop pusha add add ja xchg mov (bad) lret rcr loop lock incl movhps and dec push pop arpl js xchg mov ret lret loope lock add movhps es pop arpl add mov mov (bad) int fnclex jmp movhps es inc push push pop outsl jbe test mov (bad) int3 aam jecxz icebp cli add adc and xor add add push pop fs je test mov in cmc std add sub cmp dec push pop gs jne test mov ret lret rcr jecxz repnz add adc and xor inc dec push pop popa imul mov (bad) into (bad) fucom in cmc cld add adc and xor inc dec push pop arpl jnp mov mov fucom jmp cli add adc and das add add inc dec push pop arpl js xchg mov (bad) int fsub in hlt cld add adc and cs bound js mov mov fsubp in cmc std add adc and xor inc dec dec push pop gs jae orl (bad) iret (bad) fucom ljmp sbb sub cmp dec push pop arpl js xchg mov mov jecxz icebp clc incl push adc cmp inc dec push pop bound jns mov mov ret lret rcr loopne out cmc sti add adc and cs pop pop outsb jne orl mov (bad) int3 rcr loope out idiv push or xor inc inc dec push pop push xchg pushf mov lret (bad) in hlt sti add adc pop es push pop pusha push mov add aam loop icebp clc incl or xor inc inc dec add gs jae (bad) mov mov (bad) lret rcr loope lock push or xor aas inc dec push pop bound ja test mov fnclex ljmp sbb sub cmp push push pop outsb jne test mov ret xlat fsubp in hlt cld add adc and cs pop pusha push mov mov (bad) (bad) in cmc cld add adc push es ss dec push push pop fs jae (bad) mov mov (bad) int fsub jmp cli add adc and das ss dec push pop arpl jns xchg mov ror aad in repnz add movhps es push pop popa push xchg cltd mov leave rcr loop repnz add adc and das ss dec push pop arpl ja xchg scas mov ret lret loope lock push or xor aas inc dec push pop imul xchg mov ror (bad) fucom in repz add adc and xor inc dec push push pop gs jne orl mov vpaddq in hlt sti add sbb sub aaa ds dec push pop gs je (bad) mov mov vpmullw fsub jmp sti add adc and das ss dec push pop bound js mov mov rol (bad) fsubp in repnz add adc sbb inc dec push pop pop outsl jbe test mov fsubp in cmc cld add adc pop es push pop pusha outsb jne test mov (bad) out idiv add adc and xor inc dec push pop bound js xchg add mov in hlt sti add adc pop add das ss pusha push mov mov loop icebp stc add movhps es push pop pusha push mov mov jecxz repnz add adc and xor inc inc dec push pop outsl ja xchg mov (bad) into aad in cmc std add sub cmp pop arpl add add orl mov (bad) fnclex jmp push push sbb inc dec push pop popa imul mov lret rcr loop icebp stc add movhps daa cs dec push pop arpl jp xchg mov ror fcomp out idiv push or ss inc dec push pop data16 jne test mov (bad) lret rcr loop icebp clc add movhps daa das aaa add add pop outsl js mov mov fabs jmp adc and xor inc dec push push pop data16 jbe xchg mov ret lret rcr loop lock push or xor inc dec push pop arpl jp mov mov loope lock add sub aaa ds dec push pop bound ja xchg mov rol (bad) fucom jmp stc add push push sbb add xor inc dec push push pop insw je (bad) mov mov ret fcomp out cmc std add sub cmp dec push pop insw je test mov mov in repz add adc and xor aas inc dec push pop arpl jns mov mov ror xlat fsubp in cmc std add sub cmp inc dec push pop gs je orl add add add ljmp pop es ds dec push pop arpl js test stos mov mov fsub jmp or pop push es pop popa imul sahf movsl lods mov ret lret rcr loope lock add movhps es push pop bound jp mov mov vpaddq loope icebp clc incl push adc cmp inc dec push pop arpl jp add add scas mov (bad) int3 rcr loop lock push or xor inc dec push pop pop insw jae orl mov vpaddq jecxz repnz add sub cmp push push pop insw jne orl mov (bad) iret (bad) fucom in repz add adc pop es pop popa imul cwtl lahf movsl lods mov mov jecxz icebp clc incl push push sbb add push pop popa push lea rol aad in repz add adc and das aaa ds add pop gs je orl mov fsubp in hlt cld add adc and xor inc inc dec push pop gs je (bad) mov mov (bad) int fsub jmp cli add adc and xor inc dec push pop popa imul popf movsb scas pop sub cmp dec push pop outsb ja jg mov mov in cmc std add sub push pop fs je orl mov loop icebp stc add adc and xor inc inc dec push pop outsb jbe xchg mov vpmullw in hlt cld add adc and xor inc dec push pop popa imul mov (bad) into (bad) fsubp out idiv add sub push pusha push add add (bad) xchg lahf cmpsl scas mov (bad) into (bad) fsubp out mov ror aad jecxz icebp clc incl or xor ds dec push add jno jle mov mov (bad) lret rcr (bad) out cmc cld add adc and cs pop pusha insw je orl (bad) int fnclex jmp or sbb es dec push pop gs jae addl repz add add push or sbb daa cs (bad) out idiv add adc and xor ds dec push pop popa push mov mov ret lret rcr loope out idiv add sub cmp inc dec push pop popa push mov mov (bad) (bad) call or sbb sub ss popa push mov mov (bad) (bad) call or sbb sub aaa ds dec push pop popa push jns mov mov ret lret loopne out idiv pop push push add es push pop pusha outsl ja xchg mov leave rcl fsubp in hlt sti add adc and das aaa ds dec push pop arpl jnp mov mov (bad) lret rcr loope out idiv add sub aaa ds dec push pop bound js xchg mov rol add (bad) fsubp in hlt cld add adc and xor ds dec push pop arpl jns xchg mov ror fcomp out cmc cld add adc and das ss dec push pop arpl js mov mov ret lret rcr loope lock push push adc cmp push pop pusha outsl jbe test mov ror fsub out idiv push or xor inc dec push push pop insw je orl cwtl lahf cmpsb scas mov ret lret (bad) in hlt sti add adc pop daa das aaa ds dec push pop bound add mov mov (bad) int fnclex ljmp pop es push pop popa imul fwait mov leave rcl fsubp in cmc std add adc and xor inc dec push pop pop outsb jne test mov ror (bad) fucom in repz add adc and das aaa ds dec add push js mov mov (bad) fninit jmp stc add movhps and push pop bound js xchg mov ret lret rcr loope lock add push push sbb inc dec push pop popa imul popf movsl lods mov ret lret rcr loop icebp clc add adc pop daa das ss dec push pop imul mov mov (bad) int fsub jmp cli add adc pop daa xor ds dec push pop bound js xchg mov vpaddq loop icebp clc add movhps inc dec dec push pop imul or pop push and dec push pop outsb jbe xchg mov (bad) into (bad) fsubp out idiv add sub push pop arpl orl mov loop icebp stc add adc and xor inc dec push pop popa imul nop cltd mov enter call adc pop daa das aaa aas inc dec push pop outsl ja xchg mov (bad) iret xlat (bad) out idiv push or xor pop fs je test mov jecxz repz add adc and xor inc dec push pop bound jnp mov mov loop repnz add adc and xor inc dec push pop popa imul add mov loop repnz add adc and xor inc dec push pop popa push orb mov (bad) into (bad) fsubp in cmc cld add adc and dec push pop fs jbe xchg mov jecxz repz add adc and dec push pop data16 jbe xchg mov loop repnz add adc dec push pop outsl ja mov add add add out idiv pop nop/reserved sub cmp dec push pop gs jbe xchg mov loop repnz add adc and xor dec push pop gs jne test mov (bad) iret xlat loopne lock add adc and xor inc dec push pop fs je test mov (bad) into (bad) (bad) out idiv or sbb sub cmp push pop popa imul mov vpmullw add out idiv push push push push es aaa aas inc push pop pusha push nop cltd mov lret jecxz repz add adc and aaa aas inc dec pop pusha push xchg cltd mov lret jecxz repz add adc and cmp dec push pop fs je test mov in idiv pop movhps daa xor aas dec dec pop pusha push nop cwtl mov enter jmp add add adc and xor inc dec push pop bound jnp mov (bad) fsubp out idiv pop movhps daa xor inc dec dec pop pusha push xchg cltd mov lret jecxz repz add adc sub cmp dec push pop gs jne xchg mov (bad) into xlat (bad) out idiv pop movhps daa das aaa aas inc dec push pop outsl js mov mov (bad) ljmp add sub cmp dec push pop fs je test mov vpmullw out idiv push push pop push daa xor inc dec push pop popa imul mov vpmullw in idiv pop movhps sub cmp push pop bound jnp mov mov jmp adc and xor pop outsl ja mov mov jecxz hlt cld add cs aas inc add dec pop pusha push xchg fwait movsb lods mov vpmullw out idiv pop movhps daa das aaa aas inc dec push pop gs jbe test mov (bad) out idiv add sub cmp dec push pop gs jne (bad) mov mov fsubp out cmc std add sub aaa aas inc dec push pop arpl jns mov mov mov out cmc std add sub add xor inc dec push pop bound jns mov mov (bad) iret xlat (bad) out idiv add adc and das xor pop pop insw jbe test mov mov in hlt sti add adc pop es push pop popa push (bad) xchg lahf cmpsb scas mov (bad) into aad in cmc cld add adc and xor aas inc dec push pop insw je (bad) mov mov fsubp out idiv push push adc cmp push push pop gs je test mov ret fabs jmp adc and xor aas inc dec jae xchg lahf cmpsb lods mov ret lret rcr loopne out idiv add adc and cs pop pusha push mov mov (bad) lret rcr loopne out idiv or sbb daa cs pusha outsb je (bad) mov mov vpmullw in repnz add stc incl movhps es ss dec push pop imul mov mov loope lock push or xor inc dec push pop popa push mov mov loop icebp cli add adc and xor inc dec push pop pusha push (bad) xchg mov (bad) fsub in repz add movhps daa cs pop bound js xchg mov ror add add fsubp out cmc std add adc and add aaa ds dec push pop bound js xchg mov rol aad in repnz add movhps inc dec push pop pusha push lea mov jecxz repnz add adc and xor inc dec push pop arpl jl mov mov loope icebp clc add movhps sub cmp dec push pop data16 jbe xchg add lods mov ret lret loope lock incl push adc cmp dec push pop gs jne test mov ret lret rcr loop icebp clc incb or xor inc inc dec push pop imul idiv add adc pop daa cs pop popa imul pushf mov (bad) int3 aam loop lock incl push adc cmp push pop pop data16 jne orl mov aam loop lock push add push sbb inc dec push push pop gs jne test mov mov loop repnz add movhps es push pop pusha outsl jbe test mov fsubp in hlt cld add sbb sub cmp push pop pusha outsb jbe test mov rol (bad) fsubp in cmc cld add adc and xor inc dec push pop pop outsb jbe test add xchg fwait mov leave rcl (bad) in hlt cld add adc and cs popa push mov mov (bad) (bad) call or sbb sub cmp push push pop gs jae (bad) mov mov (bad) lret rcr loopne out idiv add sub aaa ds dec push pop bound jns xchg mov ret lret rcr loopne out cmc std add adc and xor aas add add push pop add jno addb mov (bad) jmp sti add adc and cs dec push pop bound js xchg mov rol aad in cmc cld add sub push add jae orl mov (bad) int3 rcr loop lock add sub aaa ds dec push pop popa push mov mov ret lret rcr loopne out cmc cld add or sbb daa cs pop popa push mov mov loopne out idiv add adc and xor inc dec push pop arpl mov mov vpmullw out cmc std add adc and xor inc dec push pop bound jp mov mov ret rcl (bad) out cmc std sub inc dec push pop gs je test mov loope lock add movhps add add cs pop pusha push mov mov loopne out idiv push push push sbb inc dec push pop arpl jns xchg mov ret lret rcr loope lock add or sub cmp dec push pop gs je orl mov vpaddq loop lock add sub cmp dec push pop data16 jne test mov fsubp add hlt sti add adc and das ss arpl xchg mov (bad) into (bad) fucom in repz add adc and xor inc dec dec push pop outsl ja xchg mov (bad) int fucom in hlt cld add adc and xor inc dec push pop fs je test mov in hlt cld add adc and xor inc dec push pop fs je orl mov out idiv push movhps daa das aaa aas inc dec push pop outsl ja xchg (bad) fsubp in repz add adc push and dec dec push pop gs jae orl leave rcl fsubp in add cld add adc pop es push push pop insw je (bad) mov mov ror (bad) fucom jmp stc add push push sbb inc dec dec push pop imul xchg mov mov rcr loope lock add sub ss pusha outsb jne test scas mov ret xlat fsubp in repz add movhps inc inc dec push pop arpl js xchg mov mov loop lock add sub ss pusha outsb jne test scas mov (bad) (bad) call or sbb daa cs pusha outsb jne orl mov ret xlat fsubp in hlt sti add adc pop es push pop pop data16 jne orl mov enter out cmc std add or xor inc dec push pop pusha push mov mov rcr fucom call add or daa sub dec push push pop pusha imul addb movsl stos mov add mov aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out repnz incl or xor inc dec push pop popa push lea mov (bad) out idiv add sub cmp push pop pusha outsl ja (bad) mov cmpsl lods mov mov xlat add add loope in icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp add adc xor push push pop pusha gs jne jg mov ror fcomp out hlt sti add adc and cs pop popa imul mov (bad) into aad in add add cli add adc and das ss bound js xchg mov ror fcomp out cmc std add adc and cs pop pop insw je orl mov ret lret (bad) out cmc cld add adc pop es pop outsb jbe test mov loopne out testl sub cmp inc dec push pop data16 jne orl add add call push adc cmp dec push pop popa push jns mov mov fsub ljmp push and dec push add imul movsl lods mov rol aad in hlt cld pop or xor cmp pop imul mov mov ret fchs call or sbb sub cmp push push pop data16 jne add add lods mov ret fchs out cmc cld add adc and xor ds dec push pop bound js xchg mov (bad) into aad in repz add adc push and dec push push pop gs je (bad) mov mov ret lret loopne out cmc cld add adc and xor inc dec push push pop data16 jne test mov loopne out idiv push or xor dec push pop popa imul fwait mov leave rcl (bad) in hlt cld add sub lock adc and das ss bound add mov mov (bad) fninit ljmp push es push pop popa imul lahf cmpsl scas mov (bad) int fsub in repz add adc and cs bound jns mov mov rolb enter in repnz pop movhps inc dec push pop bound ja xchg mov mov in repnz add movhps and dec push pop popa push mov mov (bad) (bad) jmp or xor aas inc dec push pop arpl jns mov mov mov (bad) in hlt sti add adc and xor ds dec push pop bound add add mov mov rol (bad) fsub jmp stc add push adc cmp inc dec push pop bound js xchg mov mov loope lock add sub ss pusha outsb jne orl mov ret lret (bad) out cmc cld add adc pop es push push pop gs jae orl enter in repnz add add add adc cmp inc dec push pop bound ja test mov loopne out cmc cld add adc pop es push push pop insw je (bad) mov mov ror (bad) fucom jmp stc add push adc cmp inc dec push pop arpl js xchg mov mov fsub ljmp sbb sub aaa ds dec push popa push mov add lret rcr loopne out cmc cld add adc pop es push pop pop insw jae (bad) mov mov ror (bad) fucom jmp stc add push adc cmp inc dec push pop bound ja test mov (bad) (bad) jmp or sbb sub ss popa push mov mov ret lret loopne out cmc cld add adc pop es cmp push pop pop data16 je (bad) mov mov ret xlat fsubp in repz add movhps inc inc dec push pop fs jns xchg mov mov loop lock incl or xor ds dec push pop popa push mov mov ret lret (bad) call or sbb daa das ss pusha outsb jne test scas mov ret add rcr (bad) in hlt sti add adc push and dec push push pop gs jae (bad) mov mov ror (bad) fucom jmp stc add push adc cmp inc dec push pop bound ja test mov (bad) fnop call or sbb daa cs pop pusha outsb jne orl mov loope lock add push adc cmp push pop pusha add add add jge mov mov (bad) fnclex jmp or sbb sub aaa ds dec push pop popa push mov mov (bad) lret rcr loopne out cmc cld add adc and cs pop pop insw je (bad) mov mov ret xlat fsubp in repz add movhps inc inc dec push pop imul xchg mov rol aad jecxz icebp clc incl add push or sbb sub aaa cmp pusha outsb jne orl mov ret fcomp out hlt sti add adc push and dec dec push pop imul mov mov rol aad jecxz icebp clc add or push sbb inc inc dec push pop arpl js xchg mov mov loope out idiv add adc pop daa cs inc dec push pop pop insw je (bad) mov add nop xchg lahf movsl lods mov ret xlat fsubp in repz add movhps inc inc dec push pop arpl js xchg mov mov loop out idiv add sub ss pusha outsb jne orl mov ret lret (bad) in hlt cld add adc pop es push pop pop insw je (bad) mov mov ror (bad) fucom jmp stc add push adc add and xor aas inc dec push pop bound ja test mov (bad) (bad) jmp or sbb sub ss pusha outsb jne orl mov ret fcomp out hlt sti add adc and das ss pusha outsb jne orl mov ret xlat fsubp in repz add movhps inc inc dec push pop arpl jns xchg add add aam loop lock add sub cmp dec push pop arpl jns mov mov ret lret rcr loop icebp stc add movhps inc dec push pop bound js xchg mov ror xlat fucomip out idiv add sub cmp push pop popa imul sahf movsl lods mov ret fchs call or sbb sub ss popa imul add add orb mov fsub jmp movhps and dec push pop pop outsl jbe xchg ret fsub in cmc incb push pop push es arpl insl je test mov (bad) int fsubp out idiv push or xor inc dec push pop bound js mov mov (bad) out idiv add sub cmp push pop popa add imul mov (bad) into (bad) fsubp in cmc std push or aaa inc inc push push pop data16 jne fild pop insw je (bad) mov mov ret xlat fsubp in repz add movhps inc inc dec push pop imul mov mov ret (bad) fucom jmp stc add unpckhps pop and aas inc dec dec push pop pop imul mov add popf mov mov xlat fucom out icebp idiv add or push sbb sub xor dec push pop pop imul mov scas mov mov aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add or sub add dec dec push pop pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jae jge mov test mov mov fcomp jecxz out repz std add or sub dec dec push pop pop bound jb jge mov cmpsl lods mov mov xlat fucom call add add add or sub inc dec push pop pop bound jb jge mov cmpsl lods mov mov fcomp loop in repz std add or and xor push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out cmc cli incl pop and xor ds dec dec push pop pop arpl jae jle mov test add add int xlat fucom out repnz add or daa sub inc dec push push pop bound jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa add data16 jno jl xchg cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and xor push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps sbb and das xor dec push pop pop fs je jg mov test (bad) leave iret aam fsubp jmp add push adc push and xor ds dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz incb or sub dec dec push pop pop arpl jae jle mov test mov mov add add add int fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge mov cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg test ret enter fsubp call add or sub dec dec push pop pop arpl jae jge add orl test mov mov fcomp jecxz in repnz std add or daa sub inc dec push push pop bound jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov fcomp loop in repz incb or adc push and cs add add cmp inc dec dec push pop pop fs je jg mov add or daa sub aaa cmp inc pop data16 jb jge xchg stos mov mov aad jmp idiv add or push sbb sub xor dec push pop pop imul mov lods mov mov (bad) fndisi(8087 out lock sti add and aas inc dec dec push pop add add push (bad) mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and das xor aas inc dec dec push pop pop arpl jae jle mov cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jno jl xchg lods mov mov xlat fsub out icebp idiv add add push sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fneni(8087 in lock sti add and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor ds dec dec push pop pop imul (bad) xchg lcall mov (bad) in out hlt stc incl push adc push and cs ds dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and xor cmp pop pop arpl add add jle mov test mov mov fcomp jecxz out repz std add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb add sub ss inc dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov aad loopne jmp cmc cli add and aas inc dec dec push pop pop fs je jg mov stos scas mov mov add fcmovu in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge xchg add lea lods mov mov xlat fucom out repnz add or daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub xor add dec push push pop pusha imul addb movsl stos scas mov rol rcl fneni(8087 in lock sti add and sub cmp dec push push pop popa imul (bad) xchg lods mov mov fcomp jecxz out repz incb or adc push and das xor inc dec push pop bound ja test mov (bad) into aad in repz add adc and das aaa add add inc dec push pop arpl js xchg mov ret lret rcr loopne lock push or xor inc dec push push pop imul (bad) mov mov (bad) lret rcl fndisi(8087 out repnz incb push adc pop and aas inc dec dec push pop pop imul addb movsl stos mov mov (bad) fsub jmp push adc aaa cmp inc dec push push pop popa insb jno add lea mov loop icebp stc add push push push and dec push pop popa imul popf movsb lods mov ret aam (bad) ljmp push sbb sub aaa aas inc dec push pop popa push mov mov (bad) out idiv add adc and xor inc inc dec push pop fs jae (bad) mov mov (bad) int fninit jmp sldt push sbb inc dec push pop bound js xchg mov ror xlat (bad) out clc incl push push sbb inc dec push pop pop insw jne orl mov mov in repz add adc pop es push pop bound jp mov mov (bad) fninit jmp cli add adc and das ss dec push pop bound js xchg mov ret lret fchs call push push sbb inc dec push pop popa push lea ror xlat fsubp in cmc cld add adc and xor inc dec push pop pusha outsl ja mov mov (bad) fnclex jmp or xor pop arpl jns mov mov les pop es push pop pusha outsb jne movsb mov mov in repz add sldt add sbb push xchg cwtl lahf cmpsb scas mov (bad) lret rcr loop lock es pop bound js xchg lods mov ror xlat (bad) in hlt cld add adc pop es push pop bound js xchg mov ror fsub out idiv add sub aaa aas inc dec push pop arpl ja (bad) xchg lods mov mov add add loopne out idiv push or xor inc inc dec push pop insw jne test mov fchs call or sbb es ss dec push pop bound ja test mov (bad) (bad) jmp push push sbb inc inc dec push pop insw je (bad) mov mov (bad) (bad) jmp adc and das aaa ds dec push pop gs je orl add add mov ret xlat (bad) out cmc cld add adc and xor aas inc dec push pop arpl js mov mov ret rcr loope out cmc std add adc pop es pop pop insw je (bad) mov mov ret fcomp out hlt cli add movhps and dec dec push pop arpl jns xchg mov mov call or sbb sub add add cmp inc dec push pop arpl js xchg mov mov loope out idiv add adc and das ss pusha outsb jne orl mov ret lret fsubp in repz add movhps inc inc dec push pop arpl js xchg mov mov loop lock incl or sbb sub aaa ds dec push pop popa push mov mov add lret (bad) in hlt sti add adc push es dec push pop pop insw je (bad) mov mov ror (bad) fucom in repz add push adc cmp inc dec push pop arpl js xchg mov mov loope out idiv add sub ss pusha outsb jne orl mov ret xlat fsubp in repz add movhps inc inc add pop arpl js xchg mov mov loope out idiv add adc and cs pop pusha outsb jne orl mov ret xlat fsubp in repz add movhps inc inc dec push pop arpl jns xchg mov mov loop lock add sub cmp jns xchg mov rol aad jecxz icebp clc incl or xor aas inc dec push add jno jg lea mov loope out idiv add adc and cs pop pop insw jne (bad) mov mov ret xlat fsubp in repz add movhps inc inc dec push pop arpl js xchg mov mov loope out idiv add adc and das ss pusha outsb jne addl add add lods mov ror xlat fsubp jmp stc add push push sbb inc inc dec push pop arpl js xchg mov mov loop lock add sub ss pusha outsb jne orl mov ret xlat fsubp in repz add movhps inc inc dec push pop arpl js xchg mov mov loope out idiv add add sbb sub ss pop bound ja test mov ret lret (bad) in hlt sti add adc push and dec dec push pop imul xchg mov rol (bad) fsub jmp stc add push adc cmp inc dec push pop bound ja test mov (bad) (bad) call or sbb daa cs pop pop insw je (bad) mov add movsl lods mov ror (bad) fucom jmp cli add movhps es push pop pop insw jne orl mov (bad) lret rcr loopne out cmc cld add adc pop es push pop pop insw je orl leave rcr loopne out hlt sti add adc and xor aas inc dec push pop arpl js mov mov (bad) int3 rcr loope out idiv add sub aaa ds add add pop arpl jae orl mov (bad) fnclex jmp adc pop es pop imul mov mov fsubp in repz add adc and xor ds dec push pop arpl jns xchg mov ret lret loopne out idiv add sub push pop bound jl lea mov jmp cli add adc sub add add cmp push pop pusha imul lahf cmpsl scas mov (bad) lret loope out idiv add adc and cs pop pusha outsb jne orl mov (bad) fnclex jmp push adc cmp inc dec push pop bound ja test mov rol aad in repnz add nop/reserved sub ss dec push pop imul mov mov (bad) into xlat fsubp add out add add push adc cmp inc dec push pop bound ja test mov mov loope out idiv add adc and cs pop pop insw je (bad) mov mov ror (bad) fucom in repz add movhps inc inc dec push pop arpl js xchg mov mov loope out idiv add adc and cs pop pusha outsb jne add xchg cwtl lahf cmpsb lods mov ret xlat fsubp in repz add movhps inc inc dec push pop arpl js xchg mov mov loope out idiv add adc and cs pop pop insw je (bad) mov mov ror (bad) fucom jmp stc add movhps inc inc dec push pop arpl js xchg mov mov loop lock incl add add or xor ds dec push pop popa push mov mov (bad) lret rcr loopne out cmc cld add adc push es push push pop gs jae orl enter in repnz add push adc cmp inc dec push pop bound ja test mov (bad) lret rcr loopne out cmc cld add adc pop daa cs pop pop insw je (bad) mov add mov fucom jmp stc add push adc cmp inc dec push pop bound ja xchg mov mov loope out idiv add adc and cs pop pop insw je (bad) mov mov ror (bad) fucom jmp stc add push adc cmp dec push pop arpl js xchg mov mov loope out add incb add and xor ds dec push pop popa push mov mov ret lret (bad) in hlt sti add adc push and dec dec push pop imul xchg mov rol aad jecxz icebp clc incl or xor aas inc dec push pop bound ja test mov (bad) lret rcr loopne out cmc cld add adc and cs push pop gs je (bad) mov add (bad) fucom jmp stc add push adc cmp inc dec push pop arpl js xchg mov mov loop out idiv add sub ss pusha outsb jne orl mov ret xlat (bad) in repz add movhps es push pop bound js test scas mov (bad) lret rcr loopne out cmc add add sub ss add add pop pusha outsb jne orl mov ret xlat fsubp in repz add movhps inc inc dec push pop arpl js xchg mov ret fabs call or sbb sub cmp dec push pop insw jne (bad) mov mov (bad) lret rcr loope out idiv pop nop/reserved daa cs popa push jl mov ret fsub call add add sub cmp push push pop insw jne test scas mov (bad) lret rcr jecxz repnz add push push sbb inc dec push push pop insw jbe test mov vmovq out cmc cli incl pop daa xor cmp pop sub fs je orl mov ror (bad) fucom jmp stc incl push adc cmp push pop pusha outsb jne orl add xchg cltd mov (bad) aam jecxz repnz add movhps es push pop fs je (bad) mov mov (bad) (bad) jmp or xor inc dec push pop pusha outsl jbe test mov (bad) in cmc cld add adc and xor bound test mov vpaddq loop lock incl or xor aas inc dec push pop bound js add xchg mov ror (bad) fsubp in repz add adc pop daa cs pop popa push popf movsl lods mov ret lret loopne out idiv add sub cmp pop bound jp mov rcr loopne incb movhps dec push pop pop outsb jne test mov (bad) lret rcr loope lock call ds dec push pop arpl js xchg lods mov aad loop lock add sub ss popa push lea ret fchs out cmc cld add adc pop es push push pop insw je (bad) mov mov rol rcl fucom out icebp idiv add or push sbb sub cmp dec push push pop pusha gs je jg mov test ret leave into rcr fiadd add jmp add or sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov add movsl stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fneni(8087 out lock add or adc xor dec push pop pop imul mov lods mov mov xlat fucom out repnz add or pop sbb daa sub add ss inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) jecxz out repz incb or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addl mov rol iret aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or adc xor push push pop pusha gs jne addb add mov mov aad loopne ljmp unpcklps pop and das xor dec push pop pop imul mov mov mov fcomp jecxz in repz std add or daa sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock sti add and aas inc dec dec push pop pop fs je jg mov test ret leave into rcr fsubp call add or sub inc dec push pop pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add or adc xor push push pop pusha gs jne jg mov stos scas mov mov (bad) in out add add stc add add unpcklps pop and das xor aas inc dec dec push pop pop imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl je jle mov test mov mov bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb add sub cmp dec push push pop pusha imul int3 rcr fucom out repnz add or daa sub inc dec push pop pop bound jae jge mov test mov mov fcomp jecxz out repz std add or sub dec dec push pop pop arpl jns xchg mov ret (bad) fucom ljmp inc mov mov fsub jmp stc add push adc cmp dec push pop arpl js xchg lods mov mov fcomp jecxz out repz incb or adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos scas mov mov aad (bad) ljmp unpckhps pop and inc inc dec push push pop pusha gs jne addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or push sbb es aaa cmp inc dec push push add push add (bad) mov test mov mov fcomp jecxz in repz std add push adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsl stos scas mov mov fcmovu in out cmc cli incl pop and add xor push push pop pusha gs jne addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul addl mov (bad) lret fcmovu in out cmc cli incl and inc inc dec push push pop pusha imul addl mov rol rcl fucom out add in repnz std add or sub dec dec push pop pop arpl jae jle mov test mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop fs jne jg mov stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg cmpsb lods mov mov xlat fsub out repnz add or daa sub dec dec push pop pop bound jae jge mov test mov mov fcomp jecxz out repz incl unpcklps sbb and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp jecxz in repz std add or sub xor ds dec dec push pop pop imul mov mov mov fcmovu in out hlt cli incl unpckhps and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or add pop sbb daa sub dec dec push pop pop bound jae jge mov test mov mov (bad) jecxz out hlt stc incb push adc and sub cmp dec push push pop popa insb jno js (bad) mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop fs je jg mov stos scas mov mov add add aad (bad) ljmp adc xor push push pop pusha imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop imul add add movsb stos scas mov mov fcmovu in out cmc cli incl and inc inc dec push push pop pusha imul addb cmpsb stos mov mov rcl fucom out repnz add or sub dec dec push pop pop arpl jae jge mov test ret leave into rcr fsubp jmp add push adc push and cs add inc dec dec push pop pop imul (bad) xchg lcall mov fcmovu in lock cli add and inc inc dec push push pop pusha imul addb cmpsb lods mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz out repz add stc incb or adc push and xor ds dec dec push pop pop imul nop xchg fwait mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop imul mov add mov mov fcmovu in out cmc cli incl sbb sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz std add or sub dec dec push pop pop arpl jae jle mov test ret leave into aam fsubp jmp add unpcklps pop and aas inc dec push push pop pusha add push jne addb movsl stos mov mov aad loopne jmp idiv add or push sbb es ss inc dec push push pop popa insb jb jl xchg lods mov mov xlat fucom call add or sub xor ds dec dec push pop pop arpl jae jle mov test (bad) leave into aam (bad) jmp add unpckhps pop add inc inc dec push push pop pusha imul jbe addl mov rol rcl fsub out repnz add or pop sbb cmp pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc sbb cmp inc dec dec push pop pop arpl jae jle mov test ret enter add fcomp in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pusha gs jne jg mov stos scas mov mov fcmovu in out cmc cli incl pop and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc cli add and inc inc dec push push pop pusha imul addb nop xchg fwait mov mov rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jb jge mov test mov mov fcomp loop in repnz std add or sub inc dec dec push pop pop bound jae jle mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add incl unpcklps sbb and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss pop pop arpl jae jle mov test scas mov mov (bad) jecxz out repz incb or add pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out cmc cli add push or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 out lock add and inc inc dec push push pop pusha imul addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or adc sbb daa sub aaa cmp inc dec push push pop add insl jae jge mov test mov mov fcomp jecxz in repz std add push adc push and xor ds dec add pop pop imul xchg fwait mov int3 rcl fndisi(8087 out icebp idiv add or push sbb es cmp dec push push pop arpl js test mov ret xlat fucom jmp add add add movhps cmp pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add adc push and xor ds dec dec push pop pop imul mov mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jb jge xchg cmpsl lods mov mov add int fcomp loop in repnz std add or adc push and cs ds dec dec push pop pop imul (bad) xchg lcall mov fcmovu in add idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb add add (bad) xchg test mov mov fcomp jecxz out repz incb or adc push and das xor aas inc dec dec push pop pop fs je jg mov stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb es aaa cmp inc dec push push pop popa insb jb jl xchg lods mov mov fcomp jecxz out repz incb or adc push and add add xor ds dec dec push add gs jne addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es aaa cmp add push pop pop arpl jae jle mov test ret leave iret aam (bad) jmp add unpckhps pop and aas inc dec push push pop pusha gs jne addb cmpsb stos mov mov (bad) fsub add in icebp idiv add or pop sbb daa sub inc dec push push pop bound jb jge mov test mov mov fcomp jecxz out hlt stc add and sub cmp dec push push pop popa insb jno jl xchg lods mov mov xlat fucom out repnz std add or sub xor ds dec dec push pop pop arpl je jle mov add les lret fnop in lock cli add and sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or sub xor ds dec dec push pop pop arpl jae jle mov test (bad) leave iret aam (bad) ljmp unpckhps and inc inc dec push push add add imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub dec dec push pop pop arpl jae jle mov test ret leave into aam fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pusha gs jne addb movsl stos mov mov (bad) fneni(8087 out lock add or add push sbb add sub aaa cmp pop pop arpl jae jge mov test mov mov (bad) jecxz out repz incb push adc push and cs aas inc dec dec push pop pop gs jne jg mov stos mov mov aad loopne jmp idiv add or push sbb sub cmp jmp cmc sti add or push sbb and inc inc dec dec push pop popa data16 add imul addb cmpsb stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out hlt cli incl unpckhps pop and aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb movsl stos mov mov rcl fnop in lock cli add pop and inc inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl push adc push and cs ds dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz incb or sub dec dec push pop pop arpl jae jge add add popf mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb and inc inc dec push push pop pusha imul addb movsl stos mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test ret leave into rcr fsubp call add or daa sub inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub add out icebp idiv add or push sbb and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop imul (bad) xchg lcall mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov cltd sahf mov mov fcomp jecxz in repnz std add or sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub call or sub dec dec push push pop bound jb jl xchg mov (bad) int fucom ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul add outsl je jg mov test leave rcl fnop in lock cli add pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repz std add or sub xor dec push pop pop imul mov mov mov fcomp jecxz in repz incb or add sub dec dec push push pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb mov mov aad loopne ljmp adc xor dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fneni(8087 in lock cli add and aas inc dec dec push pop pop fs je jg add test movsb test (bad) leave into rcr fsubp jmp add push adc sbb cmp inc dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat faddl jecxz in repz std add or daa sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub add ss inc dec push push pop popa imul addb cmpsb stos mov mov aad loopne ljmp adc das xor dec push pop pop gs je addb movsl stos mov mov aad (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat faddl add out icebp idiv add or push sbb and inc inc dec dec push pop pop gs jne jg mov test (bad) leave into rcr fsubp call add push adc sbb xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or pop sbb es ss inc dec push push pop popa data16 jno jnp xchg add cmpsb stos mov mov aad loopne jmp cmc cli add pop and aas inc dec dec push pop pop fs jne jg mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or pop sbb daa sub add add inc dec push push pop popa imul addl mov rol rcl fneni(8087 in lock sti add and aas inc dec dec push pop pop fs jo jnp test movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov fcomp jecxz add add in repz std add or sub inc dec push push pop bound jno jl xchg lods mov mov (bad) fucom call add or sub cmp dec push pop bound jns xchg scas mov (bad) lret rcr loope out idiv add adc and das xor dec push pop pop fs je jg mov test ret leave into rcr add fsubp call add push adc sbb cmp pop pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb unpcklps push and cs ds dec dec push pop pop arpl jae jle mov add test mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop bound jno jl xchg lods add int fcomp loop in repnz add or pop sbb aaa cmp push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb daa xor ds dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge mov test mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 out add lock add and inc inc dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp or adc xor push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jae jle mov add sahf mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub xor push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec add pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and sub add push pop pop arpl jae jle mov test ret enter fsubp call add or sub dec dec push pop pop bound jb jl mov add (bad) aad (bad) ljmp add cli incl unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne addb movsl add (bad) aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov (bad) jecxz out repz incb or adc sbb cmp pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out add clc std add or sub inc dec push add add bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov (bad) jecxz out repz incb add add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or push sbb es ss inc dec push push pop popa imul addb movsl stos mov mov aad loopne jmp cmc sti add and cmp dec push push pop pusha imul addb movsl stos mov mov rol rcl fcmovu in lock cli add pop and aas inc dec dec push pop pop imul mov mov mov fcomp jecxz in repz incb or adc sbb cmp push pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or pop sbb es cmp dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp adc das xor dec push pop pop imul (bad) xchg cltd sahf movsb test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jb jge test mov mov fcomp jecxz in repnz std add or adc sbb cmp push pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov add ret leave into rcr fsubp call add or sub dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv push or xor inc dec dec push pop pop gs jne jg mov stos scas mov mov (bad) add ljmp unpckhps pop and aas inc dec dec push pop pop gs je jg add mov test (bad) leave iret aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repnz std add or daa sub inc dec push push pop bound jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub add add inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and inc dec push push pop gs jnp mov mov mov (bad) in out hlt stc incb or adc push and cs ds dec dec add pop gs jne addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or add add adc sbb sub aaa cmp inc dec push push pop bound jno jl xchg lods mov mov xlat fucom out repnz add or sub xor cmp pop pop imul xchg cwtl lahf cmpsb scas mov (bad) lret rcr loope lock insb jb jg mov mov mov (bad) fndisi(8087 out lock add or sbb daa xor ds dec push pop popa imul add mov mov (bad) (bad) call or sbb daa cs pop pusha outsb jne (bad) mov mov ror (bad) fucom jmp stc add push adc cmp inc dec push pop bound ja test mov (bad) lret rcr loopne out add std add adc and cs pop pusha insw je (bad) mov mov ror (bad) fucom jmp stc add add push adc cmp inc dec push pop bound ja test mov (bad) lret rcr loopne out cmc cld add adc pop es push push pop gs je orl (bad) into aad jecxz icebp clc incl or xor ds dec push pop popa push mov mov ret lret loopne in cmc cld add adc pop es cmp push push pop gs jae orl add mov fsub ljmp sbb sub ss pusha outsb jne orl mov ret fcomp out hlt sti add adc sbb inc inc dec push pop arpl js xchg mov mov loope add idiv add sub aaa ds dec push pop popa outsb jne orl mov ret xlat fsubp in repz add movhps add inc inc dec push pop arpl js xchg mov mov loope out idiv add adc and cs pop pop insw je (bad) mov mov ror (bad) fucom jmp stc add push adc and xor aas inc dec push pop popa push mov mov ret lret (bad) out cmc sti add adc push and dec push push pop gs jae addb add into aam loop lock add sub ss pusha outsb jne orl mov ret xlat (bad) in repz add movhps inc inc dec push pop arpl js xchg mov mov loope jmp or xor ds dec push pop popa push mov mov ret lret fsubp in hlt cli add movhps xor inc inc dec push pop imul xchg mov mov loope out idiv add adc and cs pop pop insw je (bad) mov mov ror (bad) fucom jmp stc add push adc and xor ds dec push pop popa push mov mov ret lret (bad) in hlt sti add adc push and dec dec push pop imul xchg mov mov loop lock add sub ss pusha outsb jne orl mov ret xlat fsubp jmp stc add push adc cmp inc dec push pop bound ja test mov (bad) lret add call or sbb daa cs pop pop insw je (bad) mov mov ror (bad) fucom jmp stc add push adc cmp add push pop bound ja test mov (bad) lret rcr loopne out cmc cld add adc push and dec dec push pop imul xchg mov mov loop lock add sub ss pusha outsb jne orl mov ror (bad) fucom jmp stc add push adc cmp inc dec push pop bound jbe test scas mov ret lret add add fcomp out hlt sti add adc push and dec push push pop gs jae orl (bad) into aad loop lock add sub ss pusha outsb jne orl mov ret lret fchs out cmc cld add adc pop es dec push jp mov mov rol aad jecxz icebp clc incl or xor aas inc dec push pop bound ja test mov (bad) lret rcr loopne out hlt sti add adc push es cmp push push pop fs jb orb mov rol aad jecxz lock add sub ss pusha outsb jne orl mov ret lret (bad) in hlt sti add adc push and dec push push pop gs jae orl (bad) into aad jecxz icebp clc incl add or xor ds dec push pop popa push mov mov ret lret loopne in hlt sti add adc push and dec dec push pop gs jae orl (bad) iret (bad) fucom jmp repz add movhps inc inc dec push pop arpl jns xchg mov mov loop lock add sub aaa ds dec push pop popa push mov xchg cltd mov ret lret (bad) in hlt sti add adc push and dec dec push pop gs jae orl (bad) into aad jecxz icebp clc incl push adc cmp inc dec push pop bound ja test mov (bad) lret rcr loopne out cmc cld add adc pop es push push pop gs jae orl enter in repnz add push adc and xor aas inc dec push pop bound ja test mov (bad) lret rcr loopne out cmc cld add adc pop es push pop pop insw je (bad) mov mov ror xlat fsubp in add sti add adc push and dec dec push pop gs jae orl (bad) into aad jecxz repnz add push adc cmp inc dec push pop bound ja test add add add add rcr loopne out cmc cld add adc pop es push pop pop insw je (bad) mov mov ror (bad) fucom jmp stc add push adc cmp inc dec push pop bound ja test mov (bad) lret rcr loopne out idiv add adc and cs pop pop insw je orl (bad) into aad in repnz add push adc cmp add aas inc dec push pop bound ja test mov (bad) lret rcr loopne out cmc cld add adc pop es push push pop insw je (bad) mov mov ror (bad) fucom jmp hlt sti add movhps inc dec dec push pop imul xchg mov mov loop lock incl or xor ds dec push pop popa push mov mov ret add add rcr (bad) in hlt sti add adc pop es push push pop gs jae orl (bad) into aad jecxz icebp clc incl or xor ds dec push pop bound ja test mov (bad) lret rcr loopne out cmc cld add adc pop es push push pop gs jae orl (bad) into aad jecxz icebp clc incl or xor ds dec push add pop popa push mov mov ret lret (bad) in hlt sti add adc pop es cmp push push pop gs jae orl (bad) into aad jecxz add stc add push adc cmp inc dec push pop bound ja test mov (bad) (bad) call or sbb daa cs pop pop insw je (bad) mov mov ror (bad) fldl add in repz add movhps inc inc dec push pop arpl js xchg mov mov loope out idiv add adc and cs pop pusha outsb jne (bad) mov mov ret xlat fucom in repnz add movhps inc inc dec push pop arpl js xchg mov mov loope out idiv add adc and cs pop pusha outsb add jne orl mov ret xlat fsubp in repz add movhps inc inc dec push pop arpl js xchg mov mov loope add idiv add sub ss popa outsb jbe test scas mov ret lret (bad) in hlt sti add adc push and dec dec push pop imul xchg mov mov jecxz icebp testl or xor ds dec push pop popa push mov mov ret lret (bad) in hlt sti add adc push and dec dec push pop imul mov mov rol aad jecxz icebp clc incl or xor ds dec push pop popa push mov mov (bad) lret rcr loopne out cmc cld add adc pop es dec push pop imul xchg add mov mov fsub ljmp sbb sub cmp inc dec push pop bound ja test mov (bad) lret rcr loopne add idiv add adc and cs pop pusha insl je orl mov ror (bad) fucom jmp stc add push adc cmp inc dec push pop bound ja test mov (bad) (bad) call or add and cs pop pop insw je (bad) mov mov ror (bad) fucom jmp stc add push adc cmp inc dec push pop bound ja test mov (bad) lret rcr loopne out cmc cld add adc pop daa cs push pop gs je (bad) mov mov ror (bad) fucom jmp stc add push adc cmp inc dec push pop bound ja test add test mov (bad) lret rcr loopne out cmc cld add adc pop es push push pop gs jae orl (bad) into aad jecxz in repz add movhps inc inc dec push pop arpl jns xchg mov mov loope out idiv add adc and cs push pop gs jae orl enter in repnz add push adc add add cmp inc dec push pop bound ja test mov (bad) lret rcr loopne out cmc cld add adc pop es push push pop gs jae orl (bad) into aad jecxz icebp clc incl or xor ds dec push pop bound ja test mov (bad) lret rcr (bad) in hlt sti add adc pop es cmp dec push pop imul xchg mov add add loop lock add sub ss pusha outsb jne orl mov ret lret fild out cmc cld add adc and cs pop pop insw je (bad) mov mov ror (bad) fucom jmp stc add push adc cmp inc dec push pop bound js xchg mov mov loope out idiv add adc and cs add add pop pop insw je (bad) mov mov ret (bad) fucom jmp stc add push adc cmp inc dec push pop bound ja test mov (bad) (bad) call or sbb daa cs pop pop insw je (bad) mov mov ror (bad) fucom jmp stc add movhps inc inc dec push pop arpl js xchg mov mov add add loope out idiv add adc and cs pop pop data16 mov mov rol aad jecxz add stc add push adc cmp inc dec push pop bound ja test scas mov ret lret (bad) in hlt sti add adc push and dec dec push pop fs jb orl (bad) into aad jecxz icebp clc incl or xor ds dec push pop popa push add jge mov mov ret lret (bad) in hlt sti add adc push and dec dec push pop imul xchg mov rol aad jecxz or pop push and xchg jecxz clc add adc pop popa push mov mov (bad) lret rcr jecxz icebp idiv push or xor ds dec push pop popa push mov mov mov aad add (bad) ljmp unpcklps push and xor ds dec dec push pop pop bound jae jge mov mov scas mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fnop in out cmc cli incl unpcklps pop and das xor ds dec dec push pop pop arpl jae jle orl test mov mov fcomp loop in repnz std add or daa sub aaa cmp inc dec push push pop popa imul addb cmpsb stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repnz std add or daa sub add aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt stc incb push adc push and xor ds dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg add add movsb test (bad) leave into aam fsubp jmp add push add pop and cs ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or pop sbb es ss inc dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incl push adc push and add xor ds dec dec push pop pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pusha gs jne jg mov test (bad) leave into aam fsubp jmp add push adc push and sub dec dec push pop pop bound jb jl xchg lods mov mov (bad) fildl add add out icebp idiv add or adc xor dec add pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incl push adc push and xor ds dec dec push pop pop bound jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg add movsb test (bad) leave into rcr fsubp call add push adc push and sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock sti add and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or daa sub add add cmp inc dec push push pop popa data16 jno jl xchg mov mov (bad) fndisi(8087 out lock add and inc inc dec dec push pop pop fs je jg mov test ret enter fsubp call add or sub inc dec push push pop bound jb jl xchg stos mov mov (bad) fildl add loopne jmp cmc cli add pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul add mov scas mov mov add fsubp jmp add push adc sbb cmp pop pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and xor add add cmp pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub ss jae orl fsub jmp cli add push adc cmp push push pop gs jb orb lods mov mov (bad) fsub jmp stc incl push adc push and xor cmp push pop bound jb add ja addl mov rol rcl fnop in out cmc cli add pop and aas inc dec dec push pop pop imul mov scas mov mov std add or sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock cli add pop and das xor dec dec push pop pop imul mov test (bad) leave into aam fsubp jmp add push adc sbb cmp pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop fs je jg mov test ret leave into rcr fsubp call add clc incb or adc push and sub dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul mov add add mov xlat fucom out in repz std add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg movsl stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc add pop popa insb jb jl xchg lods mov mov (bad) fndisi(8087 out lock add or push sbb and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov fcmovu in out cmc cli incl unpcklps pop and das xor ds dec dec push pop pop imul mov mov mov fcomp jecxz in repz add add or sub inc dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne addb movsl add (bad) aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp call add or sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push add imul jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add and aas inc dec dec push pop pop fs je jg mov test (bad) leave iret aam fsubp jmp add or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov aad loope jmp idiv add or adc xor push push pop pusha gs jne jg mov stos scas mov add mov rcl fcmovu in lock sti add and aas inc dec dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz std add or daa sub inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 out lock sti add or push sbb and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add add adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out repnz add or push sbb daa sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fneni(8087 in lock cli add pop and inc inc dec push push pop pop gs jne jg mov stos scas mov mov add (bad) leave iret aam (bad) jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repnz std add or daa sub inc dec push push pop bound jno jl xchg or sub inc dec push push pop bound jb jl xchg lods add add int fcomp loop in repnz std add or sub dec dec push pop pop bound jb jge xchg test mov mov (bad) in out hlt stc incb or adc push and xor ds dec dec push pop pop imul (bad) xchg cltd lahf movsb stos scas mov rol rcl fnop in lock cli add and inc inc dec push push pop pusha imul addb xchg mov fsub jmp insb jp mov mov rol (bad) fucom jmp stc add push adc cmp inc dec push pop bound js orl test ret enter fsubp call add push adc push and xor cmp pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov add rcl fsub out in repnz std add or sub dec dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa add add jno jl xchg stos mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addl mov rol rcl fneni(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov fsub call add or add add daa sub aaa cmp inc dec dec push push pop bound jb jl xchg stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop fs je jg mov test mov mov add add int fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and xor ds dec dec push pop pop arpl jb jge xchg lods mov mov (bad) fndisi(8087 out lock add and inc inc dec dec push pop pop fs je add lcall mov (bad) jecxz out repz std add or sub inc dec push push pop bound jno jl xchg stos mov mov aad (bad) ljmp unpcklps push and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov add add add (bad) int xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz incb or adc sbb aaa cmp push pop bound jb jl xchg stos mov mov aad loopne ljmp unpcklps pop and das xor ds dec dec push pop pop imul add jns orl test mov mov xlat fsub out icebp idiv add or push sbb and inc inc dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add or daa sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add or add sbb es cmp dec push push pop pusha imul addl mov rol rcl fnop in out cmc cli incl pop and das xor aas inc dec dec push pop pop arpl je jle mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) lret rcl fndisi(8087 out lock add and aas inc dec dec push pop pop gs je jg mov stos scas mov mov (bad) in out repz incb or adc push and sub dec dec push pop pop bound jb jl xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push push pop popa imul jo jnp test movsl stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fneni(8087 in lock cli add add pop and aas inc dec dec push pop pop imul mov mov mov fcomp jecxz in repz std add or daa sub inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb and inc inc dec push push pop pop gs jne jg test movsl stos mov mov add add rcl fnop in out cmc cli incl unpcklps pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul add add xchg cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov rcr fsubp call add push adc push and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) ljmp unpckhps pop and aas inc dec dec push pop pop gs jne addb movsl stos scas mov rol rcl fnop in lock cli add and inc dec push pop arpl jl xchg lods mov mov (bad) fndisi(8087 out lock push or adc xor dec push pop pop imul mov mov mov fcomp jecxz in repnz std add or sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock cli add pop and cmp dec push push pop pusha gs jne jg mov add add (bad) leave iret aam fsubp in repz add movhps inc dec push push pop fs jae addb mov ror (bad) fsub ljmp sbb sub ss dec push pop bound js test mov rol (bad) fucom in hlt cld add adc and cs pop popa push mov mov (bad) lret rcr loope lock push or das aaa ds dec push pop bound jbe addl mov rol rcl fsub out hlt stc incl unpcklps pop and inc inc dec push push pop arpl jae jle mov test (bad) lret fnop in lock add or pop sbb cmp pop pop imul mov lods mov mov fcmovu in out cmc cli add add or adc xor push push pop popa imul addl mov rcr (bad) jmp add and inc inc dec push push pop pusha imul addl mov rcr fsubp jmp add push adc push and das xor aas inc dec dec push pop pop fs jne jg mov stos mov mov add lret rcl fndisi(8087 out icebp idiv add or push sbb sub dec dec push pop pop fs jne addl mov ret rcr fucom call add push adc push and xor ds dec dec push pop pop arpl jae jle mov stos scas mov mov fneni(8087 out in repnz add or sub dec dec push pop pop arpl jae jle add and sub dec dec push pop pop arpl jae jle mov test (bad) leave into aam fsubp jmp add or sub inc dec push push pop bound jb jl xchg mov (bad) in cmc cld add adc and xor inc dec push push pop outsl ja xchg mov (bad) (bad) jmp push push push es add cmp fs je test mov ret lret rcr loop icebp clc incl movhps es ds dec push pop insw jne test mov ror xlat loopne out idiv add sub cmp dec push pop fs jne test mov loop repnz add push push sbb cmp push pop pop data16 jne test mov loopne out idiv add add add and xor inc inc dec push pop gs je orl mov fsubp in hlt cld add adc and xor aas inc dec push pop gs jne test mov loope icebp clc add movhps es push pop bound jns mov mov (bad) into (bad) fucom in hlt cld add adc and xor inc dec push pop pusha outsl jbe xchg mov ret lret rcr loop repnz add add add adc and cs dec push pop arpl jns mov mov fsubp out cmc cld add adc and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fucom out repnz add or pop sbb daa sub ss inc inc dec push push pop bound jb jge xchg lods mov mov (bad) fsub out icebp idiv add pop or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fneni(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov add mov xlat fsub out repnz add or daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fneni(8087 in lock sti add or push sbb sub cmp dec push push pop pusha imul addb mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha add add add add imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and aas inc dec dec push pop pop fs je jg mov test ret leave into rcr fsubp call add or sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or adc add sbb and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov add fucom call add or daa sub aaa cmp dec dec push push pop bound jb jl xchg lods mov mov (bad) lret rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc cli add pop and aas inc dec dec push pop pop fs je jg mov test ret leave into rcr fsubp call add or sub dec dec push push pop bound jb add ja (bad) xchg lods mov mov (bad) fndisi(8087 out lock add or adc xor dec push pop pop fs jne jg mov stos scas mov mov (bad) in out hlt stc incb push adc add and das xor aas inc dec dec push pop pop arpl je jle mov test ret enter fucom call add or add add add daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg stos mov mov (bad) fneni(8087 in lock sti add and inc inc dec dec push pop pop gs je jg mov stos scas mov mov fcmovu in out hlt stc incl unpcklps pop and cs ds dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into add aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa add jb jge mov test mov mov xlat fucom out repnz add or daa sub aaa cmp inc dec push push pop popa insb jno jl add add fwait mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne addb movsl stos scas mov rol iret aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz incb or adc sbb add xor cmp pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub ss inc dec push push pop popa imul addl mov mov xlat fsub out icebp idiv add or push sbb es cmp dec push push pop popa imul addl mov rol rcl fildl add add out lock sti add and inc inc dec dec push pop pop gs je jg mov test (bad) leave iret aam (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov add lods mov mov xlat fucom out repnz std add or daa sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp testb add or cs pop arpl jnp mov mov (bad) out idiv push or xor inc dec push pop bound jp mov mov add add iret xlat fsubp in cmc std add adc and xor inc dec push pop pusha push nop xchg lahf cmpsl scas mov (bad) iret (bad) fsubp out cmc incb or xor pop fs jae orl mov loope icebp stc add adc and das aaa ds dec push pop gs jne test mov (bad) int3 aam in repz add adc and xor inc dec push pop bound jp mov mov add add leave rcr loope icebp stc add adc and xor inc dec push pop pusha push (bad) xchg lahf cmpsl scas mov (bad) into (bad) fsubp in cmc std add sub cmp push pop arpl jp mov add jecxz repz add adc and xor inc dec push pop pusha push nop cwtl mov (bad) iret xlat (bad) out idiv push push push push es fs je orl mov loop repnz add adc and xor inc dec push push pop outsl jbe xchg mov (bad) into (bad) fsubp in cmc std add sub cmp push pop arpl jnp mov mov loope icebp stc add adc and xor inc dec push pop pusha push (bad) xchg lahf cmpsl scas mov (bad) into (bad) fucom in hlt cld add adc and xor inc dec push pop bound jp mov add add loopne lock add movhps es dec push pop gs jne test mov jecxz repnz add adc and xor inc dec push pop popa imul cltd mov enter out idiv pop movhps and dec push push pop gs jae orl rcr jecxz repnz add adc and xor inc dec push pop arpl jp and in add cmc add adc and xor aas inc dec push pop outsb jbe xchg mov vpaddq in hlt sti add adc and xor inc dec push pop popa imul lahf cmpsl scas mov (bad) into (bad) fsubp out idiv add sub push pop arpl jp mov mov loopne lock incl movhps es dec push pop gs je test mov ret lret loop ljmp and xor aas inc dec push pop outsl jbe xchg mov (bad) int3 aam jecxz repz add adc and sub inc dec push pop bound jp mov mov (bad) out idiv add sub cmp dec push pop bound jns mov mov fsubp out idiv add sub cmp push pop bound jns mov mov (bad) iret add add fsubp out idiv add sub cmp dec push pop arpl jp lea mov jecxz repnz add adc and xor inc inc dec push pop data16 jbe test mov (bad) int3 aam in repz add adc and xor inc dec push pop pusha push (bad) xchg lahf cmpsb scas mov (bad) into (bad) fucom in hlt cld add adc and xor inc dec push pop popa imul lahf cmpsl scas mov movb add aad in cmc cld add adc and xor inc dec push pop popa imul lahf cmpsl scas mov (bad) into (bad) fsubp add idiv add sub push pop bound jns mov mov (bad) iret (bad) fsubp in cmc std add adc and xor inc dec push pop popa imul mov lret loop repnz add adc and xor inc dec push pop bound jns mov mov add enter jmp adc and xor inc dec push pop popa imul mov leave rcr loopne lock add adc and xor inc dec push push pop outsl ja xchg mov ror xlat fsubp in repz add adc pop daa sub push pop pop arpl jae jge mov cmpsl lods mov mov xlat fucom out repnz add or pop sbb es cmp add add dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in add idiv add and aas inc dec dec push pop pop imul mov mov mov (bad) in out hlt stc incl push adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop add repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne jmp cmc sti add pop and aas inc dec dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov add mov mov (bad) jecxz out repz incb or sub inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb cmpsb stos mov mov aad (bad) ljmp unpckhps pop and aas add add push pop pop fs jne addb movsl stos mov mov aad (bad) ljmp adc xor cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt cli incl unpckhps pop and das xor push push pop pusha gs jne jg mov stos scas mov mov (bad) in out repz stc incb or adc push and xor ds dec dec push pop pop arpl jae add mov stos scas mov mov fnop in out cmc cli incl pop es aaa cmp inc dec push pop pop arpl je jg mov stos mov mov (bad) jecxz out repz incb or adc pop and inc inc dec push pop gs je orl mov fild add out cmc std add sub cmp push pop pusha push mov mov mov fcomp loop in repnz std add push adc pop and inc inc dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or sub dec dec push pop pop bound jb jge mov stos scas mov mov add add loope jmp idiv add or daa sub dec add pop pop gs jne addb test mov mov (bad) out icebp idiv add or pop sbb daa sub inc dec push push pop arpl jae jle mov stos scas mov mov fsub out repnz add or daa sub aaa cmp inc dec push push pop bound jb jge xchg add add mov ret rcl fucom out repnz add or sub push pop popa push nop xchg lahf cmpsb scas mov vpaddq jecxz repnz add adc and cs dec push push pop arpl jae jge mov test mov mov fninit ljmp pop es dec push pop gs je test mov mov fsub out add idiv add sub cmp push pop arpl add xchg mov vpaddq jecxz icebp clc incl adc xor cmp dec push push pop pusha imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub ss inc dec push push pop bound jb jl xchg lods mov mov fcomp jecxz out repz clc incb or adc and inc inc dec push push pop popa imul (bad) mov test ret leave into rcr fsubp ljmp push and dec push pop popa push mov cli add add adc and das xor push pop bound jb jl xchg lods mov mov xlat fsub jmp or xor ds dec push pop bound ja test mov (bad) lret rcr loopne out idiv add adc and cs pusha outsb jne orl mov ret lret (bad) in hlt sti add adc push and dec dec push pop imul xchg mov rol aam loop icebp clc incl or xor ds dec push pop popa push mov mov ret fcomp out in hlt sti add adc push and dec push push pop gs jae orl (bad) into aad jecxz jmp stc add push adc cmp dec push pop imul xchg mov mov fsub jmp stc add push adc cmp inc dec push pop bound ja test mov (bad) (bad) call or sbb sub ss pusha outsb add jne orl mov ret fcomp in hlt sti add adc push and dec dec push pop imul mov mov rol aad jecxz icebp clc incl or xor ds dec push pop imul mov mov mov jecxz icebp clc incl or xor ds dec push pop popa push mov mov ret lret (bad) out hlt sti add or pop pop es push push pop gs jae orl (bad) into aad jecxz icebp clc incl push adc and xor aas inc dec push pop bound ja test mov (bad) lret rcr loopne out cmc cld add adc pop es dec push pop pusha outsb jne test scas mov ret lret (bad) in hlt sti add adc push and dec dec push pop imul mov add mov rol aad jecxz icebp clc incl push adc cmp inc dec push pop bound ja test mov ret lret (bad) out cmc cld add adc pop es push push pop gs jae orl (bad) into aad jecxz icebp stc incl or xor aas inc dec push pop bound ja test mov (bad) lret rcr loopne out cmc cld add adc and cs add add push pop pop insw je (bad) mov mov ror (bad) fsubp in repz add movhps inc inc dec push pop arpl js xchg mov rol aad jecxz icebp stc add push adc cmp inc dec add arpl js xchg mov mov loop lock add sub aaa ds dec push pop popa push mov mov ret lret rcr (bad) out cmc sti add adc pop es dec push pop gs jae orl (bad) into aad jecxz icebp clc incl or xor ds dec push pop bound ja test mov (bad) lret rcr loopne out cmc cld add adc pop es push push pop gs jae orl enter in repz add movhps inc dec dec push pop add add jns xchg mov mov loop lock add sub aaa ds dec push pop popa push mov mov ret lret (bad) in cmc sti add adc push and dec push push pop gs jae orl (bad) into aad jecxz icebp clc incl or xor ds dec push pop popa push mov mov ret lret rcr loopne out add cmc cld add adc pop es push push pop gs je (bad) mov mov ror (bad) fucom jmp stc add adc push and dec dec push pop gs jae addb mov mov loop lock add adc and das ss add outsl ja test mov (bad) lret rcr loope out idiv add adc and cs pop pop insw je (bad) mov mov ret xlat fsubp in repz add movhps inc inc dec push pop arpl js xchg mov mov loope out idiv add sub ss pusha push mov mov ret xlat fsubp in repz add movhps dec dec push pop gs jae orl (bad) into aad jecxz icebp clc incl or add add and xor ds dec push pop bound jbe test scas mov (bad) lret rcr loopne out cmc cld add adc pop es push push pop gs jae orl (bad) into aad jecxz icebp clc incl push adc cmp inc dec push pop bound imul xchg mov mov loop lock add sub aaa cmp popa push mov add add leave rcr (bad) in hlt sti add adc push and dec dec push pop fs je (bad) mov mov ror (bad) fucom jmp stc add push adc cmp dec push pop arpl js xchg mov mov loope out idiv add adc and das ss pusha outsb jne orl mov ret lret fsubp in hlt sti add movhps add cmp dec push pop arpl js xchg mov mov loope lock add sub ss pusha outsb jne orl mov ror xlat fsubp in repz add movhps inc inc dec push pop arpl insb jae orl leave rcl fsubp in repz add movhps inc inc dec push pop arpl js xchg mov mov add add int fnclex jmp or sbb daa cs pop pop insw je (bad) mov mov ror (bad) fucom jmp stc add movhps inc inc dec push pop arpl js xchg mov mov loop lock add sub ss pusha outsl jne orl mov ret xlat fsubp in repz add or pop pop es add add pop gs jae orl (bad) rcl fsubp in repz add movhps inc inc dec push pop arpl js xchg mov mov loope out idiv add adc and das ss pusha outsb jne orl mov ret xlat fsubp in hlt sti add adc sbb inc inc dec push pop imul xchg mov mov add loop lock push or das ss dec push pop popa push mov mov ret lret (bad) out cmc cld add adc pop es push push pop imul mov mov rol aad jecxz icebp clc add movhps inc inc dec push pop arpl js xchg mov mov loop lock add or xor ds dec push pop popa push add jge mov mov (bad) lret (bad) in stc add push adc cmp inc dec push pop bound ja test mov (bad) lret rcr loopne out cmc cld add adc and cs pop pop insw je (bad) mov mov ror (bad) fucom jmp stc add push adc cmp dec push pop arpl js xchg mov mov loope lock add sub cmp inc dec push pop arpl js xchg mov mov loope out idiv add adc and cs pop pop insw je (bad) mov mov ror (bad) fucom jmp stc add push adc cmp dec push pop bound ja test mov (bad) fchs out cmc cld add adc pop es push push pop gs je (bad) mov add mov fucom jmp stc add push adc cmp inc dec push pop bound ja test mov (bad) lret rcr loopne out cmc cld add adc and cs pop popa push mov mov ret add rcr loopne out cmc cld add adc pop es push pop pop insw je (bad) mov mov ror (bad) fucom jmp stc add push adc add and xor aas inc dec push pop bound ja xchg mov mov loope out idiv add adc and das ss pusha outsb jne orl mov ret xlat fsubp in repz add adc push and dec dec push pop imul xchg mov mov loop out idiv add adc and cs pop pop data16 jne orl add add fabs call or sbb daa cs pop pop insw je (bad) mov mov ror (bad) fucom jmp stc add push adc cmp dec push pop arpl js xchg scas mov les int fnclex jmp or sbb sub aaa ds dec push pop popa push mov mov ret lret (bad) in hlt sti add adc push and add add inc dec dec push pop imul xchg mov rol aad jecxz icebp clc incl or xor ds dec push pop popa push mov mov (bad) int fnclex jmp or sbb sub ss pusha push mov mov ret lret (bad) in hlt sti add adc push and dec push push pop gs jae orl (bad) iret add add fsub ljmp sbb sub cmp inc dec push pop bound ja test mov (bad) lret rcr loopne out cmc cld add adc and cs inc dec push push pop gs jae (bad) mov mov ror rcl fsubp in repz add movhps inc inc dec push pop arpl js xchg mov mov loope icebp clc incl or xor ds dec push pop add add jo jle mov mov ret lret loopne out cmc cld add adc pop es push push pop gs jae addb mov mov jecxz icebp clc incl or xor ds dec push pop popa push mov mov ret lret (bad) in hlt sti add adc push and dec dec push pop gs jae orl (bad) into aad jecxz add clc incl or xor ds dec push pop popa push mov mov (bad) lret rcr loopne out cmc cld add adc and cs inc dec push pop popa push mov mov ret lret (bad) out cmc cld add adc pop es push push pop gs jae orl (bad) into aad jecxz icebp clc incl push adc cmp inc dec push pop arpl ja add lea mov loope out idiv add adc and cs pop pop insw je (bad) mov mov ret (bad) fucom jmp stc add push adc cmp inc dec push pop arpl js xchg mov mov loope out idiv add sub ss arpl js xchg mov mov loope out idiv add add add sbb sub ss pusha outsl jbe orl mov ret lret (bad) in hlt sti add adc push and add pop pop insw je (bad) mov mov ror (bad) fsubp in repz add movhps inc inc dec push pop arpl js test mov (bad) lret rcr loope out idiv add adc and cs pop pop insw je (bad) mov add ror (bad) fucom jmp stc add push adc cmp inc dec push pop bound jns xchg mov mov loop lock add sub aaa ds dec push pop pusha outsb jbe test scas mov ret lret (bad) in hlt sti add adc pop and dec push pop pop insw je (bad) mov mov ror (bad) fucom jmp stc add push adc add cmp inc dec push pop arpl js xchg mov mov loop lock add sub ss pop bound ja test adc and xor ds dec push pop popa push mov mov (bad) int fnclex jmp or sbb sub ss pusha outsb jne orl mov ret xlat fsubp in repz add movhps add add add dec push pop fs jb addb mov rol aad jecxz icebp stc add push adc cmp inc dec push pop bound ja test mov (bad) lret rcr loopne out idiv add adc pop es pop pop insw je (bad) mov mov ror (bad) fucom jmp stc add push adc cmp inc dec push pop bound ja test add add int3 rcr jecxz inc pop push icebp cli add sbb xor imul scas mov (bad) lret rcr loopne out cmc cld add adc and das ss pusha outsb jne orl mov ret xlat fsubp in repz add movhps inc inc dec push pop imul xchg mov mov loop icebp clc incl sub ss add push add imul lcall int3 rcr loope out idiv add pop push and dec dec push pop imul xchg mov mov loop lock add sub aaa ds dec push pop popa push mov mov ret lret (bad) in hlt sti add adc push and dec dec push pop imul xchg mov mov add loop lock add sub ss popa push mov mov ret lret (bad) in hlt sti add adc push and dec dec push pop imul xchg mov mov jecxz icebp clc incl or xor inc dec dec push pop imul xchg mov mov loop lock add sub ss add add jge mov mov (bad) lret rcr loopne in hlt sti add adc pop es push push pop gs jae orl (bad) into aad jecxz icebp clc incl or xor ds dec push pop popa push mov mov ret lret (bad) in hlt sti add adc push and dec dec push pop imul xchg mov mov loop lock add add add sub ss pusha imul lcall lret rcr loopne out cmc std add adc pop es push pop pop gs jae (bad) mov mov ror (bad) fucom jmp stc add push adc cmp inc dec push pop bound ja test mov (bad) lret rcr loopne out cmc cld add adc pop es push push pop gs jae orl add add mov ror (bad) fucom jmp stc add push adc cmp inc dec push pop bound jbe test test mov (bad) lret rcr loope out idiv add adc pop es push push pop gs jae orl leave rcl fsubp in repz add movhps inc inc dec push pop arpl js xchg mov mov loope out idiv add adc add sbb es push push pop gs jae orl enter in icebp stc add push adc cmp inc dec push pop bound ja test mov (bad) lret rcr loopne out cmc cld add adc pop es push push pop gs jae orl (bad) into aad jecxz icebp clc incl or xor ds dec push pop popa push mov add add lret rcr loopne out idiv add adc and cs pop pop insw je (bad) mov lods mov ret xlat fsubp in repz add movhps inc inc dec push pop arpl js xchg mov mov loope out idiv add adc and das ss pusha outsb jne orl mov ret xlat fsubp in repz add movhps add xor inc inc dec push pop arpl jns xchg mov mov loop lock add sub ss pusha outsb jne orl mov ret fcomp out hlt std add adc and cs pop pop insw je (bad) mov mov rol aad jecxz icebp clc incl or xor ds dec push pop popa push mov mov add lret (bad) in hlt sti add adc push and xor inc inc dec push pop arpl js xchg stos mov rol aad jecxz icebp clc incl or xor ds dec push pop popa push mov mov ret lret (bad) in hlt sti add adc push and dec dec push pop imul xchg mov mov loop lock add sub cmp inc add add pop bound ja test mov (bad) lret rcr loopne out cmc cld add adc pop es push push pop gs jae orl (bad) into aad jecxz icebp clc incl or xor ds dec push pop popa push mov mov ret lret fchs out cmc cld add adc and cs pop pop insw je (bad) mov mov ror add (bad) fucom jmp stc add push adc cmp inc dec push pop bound ja test mov (bad) lret rcr loopne out cmc cld add adc pop es push pop pusha push mov mov ret fcomp out hlt sti add adc push and dec dec push pop imul xchg mov mov loope lock add sub ss pusha add outsb jne orl mov ret xlat fsubp in repz add movhps aas inc dec push pop arpl ja xchg mov mov loope out idiv add adc and cs pop pop insw je (bad) mov mov ror add (bad) out cmc cld add adc pop es push push pop gs jae orb mov ret xlat fsubp in add add cli add movhps inc inc dec push pop arpl js xchg mov mov loope out idiv add adc and cs pop pop insw je (bad) mov mov ror (bad) fsubp in repnz add push adc cmp dec push pop arpl ja test mov (bad) lret rcr loopne out cmc cld add adc and cs pop pop data16 jae (bad) mov mov ror (bad) fucom jmp stc add push adc cmp inc dec push pop bound ja test mov fnclex jmp or sbb sub ss pusha push mov mov ret lret (bad) call or sbb daa cs pop pop insw je (bad) mov mov ror (bad) fucom jmp stc add add adc cmp dec push pop arpl js xchg mov mov loope out idiv add adc and cs pop pop insw je (bad) mov mov ror (bad) fucom jmp stc add push adc cmp inc dec push pop bound ja test mov (bad) lret rcr loopne icebp clc incl or xor ds dec push pop popa push mov add mov ret lret (bad) in hlt sti add adc push and dec push push pop imul xchg mov rol aad jecxz icebp clc add or xor aas inc dec push pop arpl js xchg mov rol (bad) fucom jmp stc add adc pop es push pop popa imul pushf mov enter in hlt sti add adc and xor aas add inc dec push pop arpl jns xchg mov ret fcomp out idiv add adc aad out repz add adc push and dec dec push pop arpl jns xchg mov ror xlat fsubp jmp or sbb sub ss pusha push add lahf movsb test (bad) leave into rcr fsubp call add or daa sub xor cmp inc dec push push pop popa data16 jno jl xchg stos mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop imul mov mov mov fcomp jecxz in repz std add or daa sub inc dec push push pop bound jno jl xchg lods mov mov (bad) fildl add add out lock sti add and aas inc dec dec push pop pop imul mov scas mov mov xor cmp inc dec push push pop popa data16 jno jnp xchg movsl stos mov mov aam (bad) jmp add unpcklps add and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fildl add loopne jmp cmc cli add pop and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli add pop and aas inc dec dec push pop pop arpl jae jle add mov mov (bad) fndisi(8087 out lock sti add and aas inc dec dec push pop pop imul lea lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec add pop gs je jg mov test ret enter fucom out repnz add or push sbb daa add sub cmp dec push push pop pusha imul jg mov test ret leave into rcr fucom call add or daa sub aaa cmp inc dec push push pop pusha imul jg mov test ret leave into rcr fucom call add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsb stos scas mov mov add (bad) jecxz in repz std add or daa sub inc dec push push pop popa imul addb movsb stos scas mov mov (bad) jecxz out repz std add or daa sub aaa cmp push pop popa imul addb mov mov aad (bad) ljmp push adc push and xor ds dec dec push pop pop arpl jb add ja (bad) xchg lods mov mov aad loopne ljmp unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg stos mov mov aad (bad) ljmp push adc push and xor cmp pop pop bound jb jl xchg lods mov mov aad loopne ljmp unpcklps add add and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fneni(8087 in lock cli incl pop and cs ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov rcl fsub out icebp idiv add or adc das xor dec push pop pop fs je jle mov test mov mov add ret rcl fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop fs je jg mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor dec push pop pop gs je jg mov test ret enter fucom out repnz add or push sbb sub xor dec push pop pop add push je jg mov test mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pop fs jne jg mov test ret enter fucom call incb or daa sub aaa cmp inc dec push push pop popa imul addl mov mov (bad) in out repz incb or add adc sbb aaa cmp push pop popa data16 jno jl xchg movsl stos mov mov aam (bad) jmp add push adc push and sub inc dec push push pop popa insb jno jl xchg stos mov mov aam (bad) jmp add push adc push and sub inc dec push push pop bound jno jl xchg stos mov mov rol rcl fcmovu in out hlt stc incl push adc push and xor cmp push pop bound jb jl xchg lods mov mov aad loopne ljmp unpcklps push and add xor aas inc dec dec push pop pop arpl jae jge mov test mov mov (bad) fsub out lock add pop and aas inc dec dec push add arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add pop and aas inc dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out lock add pop and aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop imul lea lods mov mov xlat fsub out icebp idiv add or push sbb and aas inc dec dec push pop pop add outsl jne jg mov test ret enter fucom call add or pop sbb sub cmp dec push push pop pop gs je jg mov add mov (bad) int xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg stos mov mov (bad) fsub out icebp idiv add or push sbb sub cmp inc dec push pop bound ja xchg mov mov aad loopne jmp idiv add or adc xor push push pop pop fs je jg mov test (bad) leave into aam fsubp jmp or pop push es pop pusha outsb jne orl mov fucom in repz add push adc xor inc dec push push pop gs jae orl leave rcr (bad) in hlt sti add adc push es dec push pop bound js xchg mov ror fcomp out repz add incb or adc cmp push pop pusha outsl jbe xchg mov (bad) int3 rcr jecxz repnz add adc and xor inc inc dec push pop data16 jne test mov ror fsub call push push push and dec push pop bound jns mov mov loopne out idiv pop push push push es pop gs je test mov (bad) ljmp and das aaa inc inc dec push pop gs jne test mov in hlt cld add adc and xor inc dec push pop bound jp mov mov ret lret rcr jecxz repz add adc and xor inc dec push pop bound jp mov mov loope lock add adc and xor aas inc dec push pop outsl ja xchg mov (bad) into add add fucom in hlt cld add adc and xor inc dec push pop arpl jnp mov mov loope icebp stc add adc and xor inc dec push pop pusha push (bad) xchg lahf cmpsl scas mov (bad) into (bad) fsubp out idiv add sub push pop fs je test mov loop repnz add adc and xor inc dec push pop popa imul lahf cmpsl scas mov (bad) into add xlat fsubp out idiv push push push push and dec push pop imul mov mov loope icebp clc add adc and xor aas inc dec push pop data16 jbe xchg (bad) xchg lahf cmpsl scas mov (bad) iret xlat (bad) out idiv push push adc cmp fs je orl mov loope icebp stc add adc and xor aas dec dec push pop outsb jbe xchg mov les add int3 aam in hlt sti add adc and xor inc dec push pop popa imul mov (bad) iret xlat (bad) out idiv push or xor inc dec push pop arpl jp mov mov loopne out idiv pop push push push es fs je test mov loop repnz add adc and xor aas inc dec push pop data16 jbe test mov (bad) int3 rcr jecxz repnz add adc and xor inc dec push push pop outsl jbe xchg mov (bad) fsub jmp sti add adc and xor inc dec push add push jns mov mov (bad) out idiv push push adc cmp dec push pop arpl jnp mov mov loope lock add adc pop daa cs dec push pop gs je test add add fabs jmp adc pop daa xor aas inc dec push pop insw jne test mov ret lret rcr loop icebp stc add adc and das aaa aas inc dec push pop insw jne test mov loope lock add movhps es dec push pop fs je orl mov loopne out idiv pop movhps es dec push pop gs jne test add mov lret loop icebp stc add adc and das aaa aas inc dec push pop insw jne test mov ret lret rcr loop repnz add adc sbb sub cmp push pop pusha outsl ja xchg mov vpmullw in hlt cld add adc and xor inc dec push pop bound jns mov mov (bad) into (bad) fsubp in cmc std add sub cmp push pop bound jns mov nop cwtl mov (bad) iret (bad) fsubp in cmc std add sub cmp push pop bound jns mov mov (bad) into (bad) fsubp in cmc std add adc and xor inc dec push pop bound jns mov mov vpmullw in cmc std add adc and xor inc dec push pop fs je test mov (bad) int3 aam in hlt cld add adc and cmp dec push pop arpl jnp add add mov ret (bad) jmp adc and xor inc dec push pop popa imul mov (bad) iret xlat fild call movhps daa das aaa aas inc dec push pop insw je addl mov rol rcl fneni(8087 out lock add or adc xor push push pop pusha gs jne addb movsl stos mov mov aad fneni(8087 in lock sti add or adc xor push push pop pusha gs jne addb movsl stos scas mov mov fneni(8087 out hlt cld add adc and xor cmp popa push mov mov fsubp in repnz add or xor inc dec dec push pop gs jae (bad) mov mov (bad) leave into aam fsubp in hlt sti add adc add add and dec push push pusha outsb jbe test scas mov vpaddq jecxz icebp clc incl movhps add push pop imul mov mov (bad) fnclex ljmp pop push and inc dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out cmc cli add and sub cmp dec push push pop pusha imul jg mov stos mov mov aad (bad) ljmp unpcklps pop and inc inc dec push push pop pusha gs jne jg mov test (bad) leave into aam fsubp jmp add push adc sbb cmp inc dec dec push pop pop arpl jb jge mov cmpsl lods mov mov fcomp jecxz out repz incb or add adc sbb cmp pop pop arpl jae jge mov test mov mov rcr fsubp call add or sub inc dec push pop pop arpl jb jge mov cmpsl lods mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop gs jne jg mov stos scas mov mov add add add lret (bad) in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa data16 jb jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb and inc inc dec push push pop pop gs add jne addb movsl stos scas mov mov fcmovu in out hlt stc incl push adc add and aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into aam fsubp jmp add push adc push and sub dec dec push pop pop bound jb jge mov test mov mov xlat fsub out icebp idiv add or push sbb and sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop sub xor ds dec dec push pop pop arpl jb jge mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov add add aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop arpl push je jg mov test (bad) lret fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop fs jne jg mov stos scas mov rol iret aad loopne ljmp adc xor dec push pop pusha gs jne addb test movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb movsl stos mov mov (bad) fndisi(8087 out lock add or push sbb sub cmp dec push push pop popa imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or push sbb es add add cmp inc dec push push pop popa data16 jno jl xchg lods mov add fcomp loop in repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and cs ds dec dec push pop pop imul mov mov mov (bad) in add hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) leave iret aam (bad) jmp add unpckhps pop and aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out cmc cli incl and inc inc dec push push pop pusha imul addb add movsl stos mov mov aad loopne jmp cmc sti add sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub inc dec push pop pop bound jb jge mov test mov mov fcomp loop in repnz std add or daa sub dec dec push add bound jae jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and cs ds dec dec push pop pop imul (bad) xchg lcall mov fcmovu in out hlt cli incl add add add add adc pop and das xor aas inc dec dec push pop pop add jo jnp xchg cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa insb jb jl xchg lods mov mov add ret rcl fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp loop in repnz std add or daa sub inc dec push pop pop bound jb jge mov test mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop imul jns test movsb stos scas mov mov aad loopne jmp idiv add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb add add xor cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat faddl loop in repnz add add sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz in repz std add or sub xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov add add scas mov mov fcomp jecxz out repz incb push adc push and das xor aas inc dec dec push pop pop fs je jg mov test (bad) leave iret aam (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc add add push pop add imul addb movsl stos mov mov (bad) fneni(8087 in lock add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp testl add cld add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb es aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop popa insb jb jl xchg lods add mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop add add je jle mov test (bad) leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl je jle mov test (bad) leave iret aam fsubp jmp add push adc pop and cs ds dec dec push pop pop imul (bad) xchg lcall mov (bad) in out hlt stc incl add add add xor push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov add add rcl fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb and inc inc dec push push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 in lock sti add and inc inc dec push add popa data16 jno jl xchg stos mov mov (bad) fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg stos mov mov xlat fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg stos mov mov (bad) fsub out icebp idiv add or push sbb daa sub xor cmp inc dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jno jl xchg test mov mov fcomp add add call add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov add add mov mov (bad) jecxz out repz incb or adc push and cs ds dec dec push pop pop arpl jae jle mov mov (bad) into aad out idiv add adc inc push pop bound ja test scas mov (bad) lret rcr (bad) out testl and xor inc dec push push pop insw je addl xchg cltd mov mov (bad) in out hlt cli add and xor inc dec push push pop data16 je subl hlt cld add adc and cs pop bound js xchg mov mov jecxz repz add adc and cs arpl jns mov mov ret lret loope icebp stc add adc and xor ds dec push pop arpl jp mov fcomp out repz add adc push and add add inc inc dec push pop bound jbe test scas mov ret lret fsubp in repnz add or xor cmp pop insw je orl (bad) fchs out cmc sti add adc sbb inc inc dec push pop imul xchg mov mov loopne out (bad) ltr inc push jno orl leave iret (bad) fucom jmp stc add add push sbb inc dec push push pop insw jne orl mov ret lret fsubp in hlt cld add or daa sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) jecxz out repz std add push adc sbb cmp pop pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out icebp testb sti add or push sbb sub cmp dec push push pop pusha gs jne addb movsl stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out repnz add add sub xor ds dec dec push pop pop arpl jae jle mov add (bad) leave into aam fsubp jmp or push sbb sub ss inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub ss inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es cmp dec push push pop popa add data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa add jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec push push pop pop gs jne jg mov stos scas mov mov (bad) in out repz incb or adc sbb cmp push pop bound jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec push push pop pop gs jne addb movsb stos scas mov mov (bad) leave iret aam (bad) jmp add push adc push and xor cmp pop pop bound jb jl xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec push push pop pop gs jne jg mov add (bad) aad (bad) ljmp push adc push and xor ds dec dec push pop pusha imul add add add jo jnp test movsl add (bad) lret rcl fneni(8087 in lock cli incl pop and das xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt stc incb push adc add push and xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos scas mov rol iret aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov enter fucom out out repz std add or sub inc dec push push pop bound jno jl xchg stos mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or daa sub inc dec push push pop popa insb add add jl xchg cmpsb stos mov mov (bad) fneni(8087 in lock sti add and aas inc dec dec push pop pop imul mov mov mov fcomp jecxz out repz std add or daa sub inc dec push push pop bound jno jl xchg stos mov mov fcomp jecxz out repz std add or add daa sub inc dec dec push pop pop bound jb jl xchg lods mov mov aad loopne ljmp adc das xor aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov test les add leave into rcr fsubp call add push adc sbb cmp push pop popa insb jno jl xchg stos mov mov aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jo jnp test movsl stos scas mov mov (bad) in out repz incb or adc push and xor cmp pop pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul mov lods mov mov xlat fsub out icebp idiv add or push add and sub cmp dec push push pop pusha gs jne jg mov test ret leave into rcr fsubp call add or sub inc dec push push pop popa insb jno jl xchg movsl stos mov mov aad (bad) ljmp push adc and sub ss inc dec push push pop pusha imul jl xchg cmpsb stos mov mov add add lret fcmovu in out hlt cli incl unpcklps push and xor ds dec dec push pop pop arpl jae jge xchg cmpsl lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb sub cmp dec push push pop pusha imul add jnp test movsl stos scas mov mov (bad) in out hlt stc incb or adc push and sub dec dec push pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 in lock cli add pop and das xor ds dec dec push pop pop imul mov lods add rcr fucom call add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aam (bad) jmp add push adc push and xor cmp pop pop arpl jb jge xchg lods mov mov (bad) fndisi(8087 out lock add pop and aas inc dec dec push pop pop imul mov scas mov mov ret enter fucom call add or pop sbb daa sub cmp dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and sub inc dec push push pop bound jb jg mov stos scas mov mov (bad) in out add cli incl unpcklps pop and das xor ds dec dec push pop pop arpl add outsb jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb sub xor push push pop pop fs je jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aam (bad) ljmp push adc add add push and xor cmp pop pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb es xor cmp push pop popa insb jno jl xchg lods mov mov add (bad) lret rcl fneni(8087 out lock sti add pop and aas inc dec dec push pop pop imul mov scas mov mov xlat fucom out repnz add or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave iret aam fsubp jmp add push adc sbb cmp push pop bound insb jno jl xchg stos mov mov (bad) fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov fcmovu in out hlt cli incl push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repnz std add or add daa sub aaa cmp inc dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incb push adc push and xor cmp push pop bound jb jl xchg stos mov mov aad loopne jmp cmc cli add pop and das xor cmp dec dec push pop pop fs je jg mov test ret enter fucom call add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos scas mov mov (bad) in out hlt stc incl push adc push and xor ds dec dec push pop pop bound jb jge xchg lods mov mov (bad) fneni(8087 out lock add and aas inc dec dec push pop pop imul add outsb je jle mov test mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop pusha imul addb movsb stos scas mov mov (bad) jecxz out repz incb or adc push and sub dec dec push push pop bound jb js (bad) mov cmpsl lods mov mov (bad) fsub out icebp idiv add or add push sbb and inc inc dec dec push pop pop fs je jg mov test ret enter fucom call add or daa sub cmp inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or sub inc dec push push pop bound jb jl xchg lods mov mov add lret rcl fndisi(8087 out lock add or adc xor push push pop pop gs jne jg mov test (bad) leave iret aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov add fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 add jno jl xchg cmpsb stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop imul mov mov mov fcomp jecxz in repz std add or sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fneni(8087 out lock sti add and aas inc dec push push pop pop gs jne jg mov test (bad) leave into aam fsubp jmp add push adc sbb cmp pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add pop or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov add rcl fneni(8087 in lock cli add pop and aas inc dec dec push pop pop fs je jg mov lods mov mov (bad) fsub out icebp idiv add or push sbb sub xor push push pop pop gs jne jg mov test (bad) leave into rcr fsubp call add or sub inc dec push push pop bound jno jl xchg lods mov mov (bad) fneni(8087 in lock cli add pop and das xor aas inc dec dec push pop pop arpl jae jle mov test scas mov mov (bad) jecxz out repz incb or adc sbb cmp push pop bound jno jl xchg lods mov mov (bad) fneni(8087 out lock sti add pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jae jge mov test mov mov rcl fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in add hlt cli incl unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out repnz add or push sbb es cmp dec push push pop pusha imul add jp test movsb stos scas mov mov fcmovu in out hlt sti add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt stc incb push adc push and xor cmp pop pop bound jb jl xchg lods mov mov (bad) add loop in repnz add or push sbb add sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and xor cmp pop pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec dec push pop pop gs je jg mov test ret leave into add rcr fsubp jmp add or sub inc dec push push pop bound jno jl xchg lods mov mov (bad) fneni(8087 out lock add or adc xor dec push pop pop fs je jg mov test ret enter fucom call add or and xor cmp pop pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add or push sbb and inc inc dec dec push pop pop fs je jg mov test ret enter fucom call add or daa sub inc dec push push pop bound jno jl xchg stos mov mov aad loopne ljmp adc add add das xor aas inc dec dec push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or pop sbb es ss inc dec push push pop add insb jno jl xchg stos mov mov add fneni(8087 in lock cli incl pop and aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out repnz add or push sbb daa sub ss inc dec push push pop pusha imul addb movsl stos scas mov mov (bad) in out hlt stc incb or adc push and xor ds dec dec push pop pop arpl jb jge add add pushf mov mov (bad) fsub out icebp idiv add or adc xor cmp dec push push pop pusha gs jne jg mov stos scas mov mov (bad) jecxz out repz incb or sub dec dec push pop pop bound jb jl xchg test mov mov xlat fsub out icebp idiv add or push sbb add add xor cmp dec push push pop pusha imul addb movsb stos scas mov mov (bad) in out hlt stc incb or adc push and sub dec dec push pop pop bound jb jge xchg lods mov mov (bad) fndisi(8087 out lock add cmpsl lods mov mov fnop in out hlt cli incl unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or add adc sbb daa sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fnop in out cmc cli add push or push sbb sub cmp dec push push pop pusha gs jne jg mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov add add fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub inc dec push push pop popa add add add jl xchg stos mov mov aad loopne ljmp unpckhps pop and aas inc add push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incb push adc and sub cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt stc incb push adc add add push and xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fneni(8087 in lock sti add and aas inc dec dec push pop pop gs je jg mov test les add into rcr fsubp call add or sub inc dec push pop pop bound jb jge xchg test mov mov xlat fucom out repnz add or pop sbb daa sub ss inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and das xor aas inc dec dec push pop pop arpl add add je jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa imul addl mov rol rcl fnop in out cmc cli incl unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or pop sbb add and sub cmp dec push push pop pusha imul addb movsl stos mov mov add fneni(8087 in lock sti add pop and aas inc dec dec push pop pop imul xchg xchg pushf mov mov (bad) fneni(8087 in lock sti add pop and aas inc dec dec push pop pop imul mov mov mov into rcr fsubp call add or daa sub inc dec push push pop popa insb jno jl xchg cmpsb stos mov mov (bad) fneni(8087 in lock cli add pop and aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or daa sub inc dec push push pop bound jno jl xchg lods mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop add jne addb movsb stos scas mov mov fcmovu in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos scas mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov test scas mov mov fneni(8087 out lock sti add pop and aas inc dec dec push pop pop imul mov mov mov fcomp jecxz out repz incb or sub inc dec push push pop bound jb jl add pushf mov mov (bad) fneni(8087 out icebp idiv add or adc xor dec push pop pop gs je jg mov test ret enter fucom call add or sub inc dec push push pop bound jno jl xchg lods mov mov (bad) fneni(8087 out lock sti add or adc xor dec push pop pop gs je jg mov test ret leave into rcr fsubp call incl unpcklps pop and cs ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos mov mov aam fcmovu in out hlt stc incl unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov aad loopne ljmp unpcklps pop and das xor dec push pop pop imul add add mov mov fcomp loop in repnz add or pop sbb daa sub add add insl je orl (bad) (bad) call or sbb ror fucom in repz add adc pop es push pop pop insw je (bad) mov mov ror (bad) fucom jmp stc add push adc cmp inc dec push pop bound ja test add mov (bad) (bad) call or sbb daa cs pop pop insw je (bad) mov mov ret xlat fsubp in repz add movhps inc dec dec push pop imul xchg mov mov jecxz icebp clc incl or xor ds dec push pop popa push mov mov (bad) lret rcr loopne out cmc cld add adc pop es push push pop gs jae orl enter in repnz add or push sbb inc inc dec push pop arpl jns xchg mov mov loop lock add sub ss pusha outsb jne orl mov ret fcomp out hlt sti add movhps and dec dec push pop imul mov stos mov rol aad loop lock push or das ss pusha outsb jne orl mov fucom jmp stc add push push sbb sub cmp inc dec push pop arpl js xchg mov mov loope out idiv add adc and cs pop pusha insw je orl mov ret xlat fsubp in repz add movhps add dec push pop arpl js xchg mov mov loop lock add sub ss pusha outsb jne test scas mov ret xlat (bad) in hlt sti add adc push and dec dec push pop gs jae orl enter in icebp stc add push push sbb inc inc dec push pop arpl jns xchg mov rol add add add in repnz add movhps inc dec dec push pop imul mov mov ror (bad) fucom in repz add movhps es push pop pop data16 jne test ret xlat fsubp in arpl orl mov (bad) jecxz out repz incb or adc and das ss pop arpl js xchg scas add fcomp jecxz out repz incb or sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp adc xor dec push pop pop fs je jg mov test (bad) leave iret aam fsubp jmp add unpcklps push and cs ds dec dec push pop pop add add outsl je jg mov test (bad) leave iret aam fsubp jmp add unpcklps push and cs ds dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add push adc push and sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb add add and sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fndisi(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and aas inc dec dec push pop pop fs je jg mov test rol add rcl fcmovu in out cmc cli incl pop and das xor dec push pop pop fs je jg mov test (bad) leave into aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp loop in repnz std add or daa sub dec dec push push pop bound jb addb test scas mov (bad) lret rcr loopne out idiv add adc pop es dec push pop gs jae orl int3 rcr jecxz repnz add or sub xor ds dec dec push pop pop imul (bad) xchg lcall rol rcl fnop in lock cli add and inc inc dec push push pop pusha imul jl xchg add add mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fucom call add or sub dec add pop pop arpl jb jge mov test mov mov fcomp loop out repz std add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov aam (bad) jmp add incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt cli incl adc xor dec push pop pop gs jne jg mov stos scas mov mov fsub out repnz add or sbb aaa cmp push pop bound jb jge xchg cmpsl lods mov add rcl fucom call add or sub dec dec push pop pop arpl jae jge mov test mov mov fcomp jecxz in repz std add or sub xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push add das xor aas inc dec dec push pop pop add add je jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fcmovu in out cmc cli incl pop and aas inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp adc sub xor push push pop pusha imul addb movsl stos mov mov aad loopne ljmp adc xor push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul jl xchg lods mov mov add rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub cmp inc dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop imul add add add add rol rcl fneni(8087 in lock sti add and inc inc dec push push pop pusha gs jne addb cmpsb stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 out lock add or push sbb sub add add inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out add add cld add or daa sub inc dec push push pop bound jb jge xchg cmpsl lods mov mov fcomp loop in repnz std add or sub dec dec push push pop bound jb jge mov cmpsl lods mov mov xlat fucom call add or sub inc dec push push pop bound jb jge mov mov mov xlat fucom out repnz std add or sub dec dec push pop pop bound jb jge mov test ret leave into rcr fsubp jmp add unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave iret aam (bad) jmp add pop and das xor aas inc add add add pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add and sub cmp dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add add add add add adc sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb es aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg test mov add fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop imul mov scas mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop imul add je jle mov test ret leave into rcr fsubp jmp add and inc inc dec push push pop pusha imul addb movsl stos mov mov (bad) fneni(8087 in lock sti add and inc inc dec push push pop pusha imul addl mov rol rcl fneni(8087 out lock add or push sbb add sub cmp dec push push pop pusha imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb cmpsb stos mov mov rcl add fucom out repnz add or daa sub inc dec push push pop bound jb jge xchg lods mov mov fcomp loop in repnz std add or xor inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or sub inc dec push push pop bound jno jl xchg add mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz std add or sub inc dec push push pop bound jno jl xchg stos mov mov (bad) fneni(8087 out lock sti add sbb sub cmp dec push push pop popa insb jno jl xchg stos mov mov aad loopne jmp cmc sti add and aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz out repz std add or sub inc dec push push pop bound jno jl xchg stos mov mov (bad) fneni(8087 in lock add add and aas inc dec dec push pop pop fs je jg mov test ret leave into rcr fsubp call add push adc sbb cmp push pop bound jb jl xchg lods mov mov (bad) fneni(8087 in lock sti add or adc xor dec push pop add imul addb add movsl stos scas mov mov (bad) in out hlt stc incb or adc push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne addb movsb stos scas mov mov (bad) in out hlt stc incb or adc push and xor ds dec dec add push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne addb movsl stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jge mov mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov aam (bad) jmp add unpcklps push and cs aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc sbb cmp pop pop arpl jae jge mov test add lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb movsl stos mov mov aad loopne jmp cmc sti add pop and aas inc dec dec push pop add add push jne jg mov stos scas mov mov fcmovu in out hlt cli incl add adc xor push push pop pop gs jne addb movsl stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul (bad) xchg cltd sahf movsb test (bad) leave into rcr fsubp jmp add push adc push and xor cmp pop pop arpl jb jge mov test mov mov xlat fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jnp xchg lods mov mov (bad) fndisi(8087 out lock add or pop push and dec push pop pop insw je (bad) mov mov ret xlat (bad) in hlt sti add sub ss pusha outsb jne orl mov les int fnclex jmp or xor aas inc dec push pop bound jbe test scas mov ret lret (bad) in hlt sti add adc pop es push push pop gs je (bad) mov mov ret fchs call or sbb sub aaa cmp bound js xchg add mov loopne out clc incl or xor aas inc dec push pop arpl js xchg mov rol aad in repz add adc and cs pop popa imul mov (bad) int fninit jmp cli add adc pop es push pop pusha push nop xchg lahf cmpsb lods mov ret lret loope out clc incl push adc cmp push add add gs jae (bad) mov mov (bad) int fnclex jmp add adc cmp dec push pop data16 jne test scas mov (bad) int3 aam jecxz repz add adc and das ss dec push pop bound jg mov mov gs jne orl mov fsubrp lock add sub ss pusha outsb jne orl cwtl lahf cmpsb lods mov ret lret (bad) in hlt sti add adc push and dec dec push pop arpl js xchg mov mov loopne out cmc cld add adc pop es push push pop gs jae orl (bad) into aad jecxz icebp clc incl or sbb sub ss pusha outsl jbe test lods mov ret xlat fsubp in repz add movhps add and xor aas inc dec push pop bound imul mov mov (bad) in hlt sti add adc push and dec dec push pop imul xchg mov mov loop lock add sub ss pusha outsb jne test scas mov ret lret (bad) in hlt sti add adc push and dec push push pop gs jae orl mov fsub ljmp sbb sub cmp inc dec push pop bound ja test scas mov ret lret loop lock push or xor ds dec push pop popa push mov mov ret lret (bad) in hlt sti add adc push and inc dec push pop imul xchg mov mov loop lock add sub ss add dec push pop pusha outsb add test scas mov (bad) lret rcr loopne out cmc cld add adc pop es push push pop gs jae orl (bad) int fnclex jmp or sbb sub ss dec push pop popa push mov mov ret lret (bad) out cmc cld add adc push and dec push push pop imul mov mov rol add add fsub ljmp sbb sub aaa ds dec push pop popa push mov mov (bad) lret rcr loopne out cmc cld add adc pop es push push pop gs jae orl (bad) into aad jecxz icebp clc incl or xor ds dec push pop popa push mov mov ret lret (bad) in hlt sti add adc push and dec dec push pop add add add imul jp mov mov rol aad jecxz icebp clc incl or inc dec push pop bound jns mov mov ror xlat fsubp in repz add movhps inc inc dec push pop arpl js xchg mov mov loope out idiv add adc and cs pop pop outsb je (bad) mov mov ret xlat fsubp in repz add add movhps cmp push push pop gs jae orl (bad) into aad jecxz icebp clc incl or xor ds dec push pop pusha push mov mov ret lret (bad) in hlt sti add movhps inc dec dec push pop imul xchg mov mov loop lock add sub xor pop pusha outsb jne orl add add mov ret xlat fsubp in repz add movhps inc inc dec push pop arpl js xchg mov mov loop lock add adc and cs pop pop insw je (bad) mov mov ror (bad) fucom jmp stc add push adc cmp dec push pop arpl ja test mov (bad) (bad) call or sbb add add daa add cmp pusha outsb jne orl ror (bad) fucom jmp stc add push adc cmp inc dec push pop bound jbe test mov ret lret (bad) in hlt sti add adc pop es push push pop gs jae orl (bad) into aad jecxz icebp stc add push adc aaa ds dec push pop popa imul cltd mov add add fsub out hlt sti add adc push and dec dec push pop imul xchg mov mov loop lock add sub ss pusha outsb jne orl mov ror (bad) fucom jmp stc add push adc cmp dec push pop bound ja test mov (bad) (bad) call or sbb daa cs add cmp pusha outsl jbe test scas mov ret lret (bad) in hlt sti add adc push and dec dec push pop imul xchg mov mov jecxz icebp clc incl or sbb sub ss pusha outsb jne orl mov ret xlat fsubp in repz add movhps inc dec dec push pop arpl js xchg mov mov add rcr loope out stc incl or xor ds dec push pop bound ja test mov (bad) lret rcr loopne out cmc cld add adc pop es push push pop gs jae orl (bad) into aad jecxz icebp clc incl or xor ds dec push pop popa push mov mov ret lret (bad) in repz add adc push and inc dec push add add imul xchg mov mov loop lock add sub ss pusha outsb jne orl mov ret xlat fsubp in repz add movhps inc inc dec push pop arpl js xchg mov mov loope out idiv add adc and cs pop pop insw je (bad) mov scas mov ret lret fild add out hlt sti add adc push and dec dec push pop imul mov mov rol aad jecxz icebp clc incl or xor ds dec push pop popa push mov mov ret fcomp out hlt sti add adc push and dec dec push pop imul xchg mov mov loop lock add sub aaa ds dec push pop arpl add jp mov mov fsubp in hlt sti add adc and xor ds dec push pop imul mov mov fsubp in idiv add adc and xor inc dec dec push pop gs je (bad) mov mov ret lret loope lock add sub cmp push push pop data16 jne orl cli add or sbb sub cmp inc dec push pop arpl jns mov mov (bad) int fucom in repz add adc pop daa cs dec push pop fs jae orl mov fnclex jmp or sbb sub aaa ds dec push pop bound ja test mov (bad) lret rcr loopne out idiv add adc and cs pop pusha outsb jne orl mov fnclex jmp or sbb add sub aaa ds dec push pop popa push mov mov ret lret (bad) in hlt sti add adc pop es push push pop gs jae orl (bad) into aad in repnz add push adc cmp inc dec push pop bound js xchg mov ret rcr fucom call add or daa sub aaa cmp inc dec push push pop bound jno jl add addl mov rol rcl fsub out icebp idiv add or push sbb es ss inc dec push push pop popa imul addb cmpsb stos mov mov rcl fsub out icebp idiv add or push sbb es cmp dec push push pop popa imul addb cmpsb stos mov mov (bad) fneni(8087 out lock sti add and add add add xor push push pop pusha gs jne jg mov stos mov mov aad loopne ljmp unpckhps pop and aas inc dec dec push pop pop gs je jg mov stos scas mov mov fcmovu in out cmc cli incl pop and das xor aas inc dec dec push pop pop imul xchg cltd mov (bad) lret fcmovu in out add cmc cli incl pop and aas inc dec push push pop pusha gs jne addb movsl stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb add sub inc dec push pop pop bound jb jge mov test mov mov fcomp jecxz out hlt stc incb push adc push and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov rol rcl fnop in lock add or push sbb sub ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fucom out repnz std add or sub cmp dec push push pop popa data16 jno jl xchg lods mov mov fsubp jmp clc decl adc and cs inc dec push pop arpl jae jle mov add add mov rol rcl fndisi(8087 out repnz add push adc push and cs aas inc dec dec push pop pusha gs jne addl add aam loopne jmp idiv add or push sbb daa sub dec dec push pop pop fs je jg mov stos mov mov xlat fsub out icebp idiv add or pop sbb daa sub cmp inc dec push pop add add je (bad) mov mov sub cmp inc dec push pop pop arpl jne (bad) mov stos scas mov mov (bad) in out hlt stc incb push adc cmp dec push pop imul xchg mov rol aad jecxz icebp stc incl push adc cmp inc dec push pop bound ja test mov (bad) lret rcr loope out idiv add adc and cs pop pop insw je (bad) mov mov ror (bad) fsubp in repz add movhps inc inc dec push pop arpl ja add stos mov mov loop lock add sub ss popa push mov mov fnclex jmp or sbb and xor ds dec push pop popa push mov add mov ret lret (bad) in hlt sti add adc push and dec dec push pop imul xchg mov mov loop lock add sub ss pusha outsb jne orl mov ret fsub ljmp sbb sub aaa ds dec push pop popa imul lcall lret rcr loopne out cmc cld add adc and sub push add add gs jae (bad) mov mov ror (bad) fucom jmp stc add push adc cmp inc dec push pop arpl js xchg mov mov loope out idiv add adc and das ss pusha outsb jne orl mov ret xlat fsubp in repz add movhps cmp push push pop gs jb addb mov rol aad add add ljmp sbb sub cmp inc dec push pop bound ja test mov (bad) lret rcr loopne out cmc std add adc pop daa cs push pop insw je (bad) mov mov rol fcomp out hlt sti add adc push and dec push push pop gs jae orl (bad) into aad jecxz icebp clc incl or xor aas inc dec push pop bound add add test mov (bad) (bad) call or sbb daa cs pop pop insw je (bad) mov mov ror (bad) fucom jmp stc add push push sbb aas inc dec push pop arpl js xchg mov mov loope out idiv add adc and add cmp popa push mov mov ret lret (bad) in hlt sti add adc push and dec dec push pop imul xchg mov mov loop lock add sub ss dec push pop popa push mov mov (bad) lret rcr loopne in cmc cld add adc pop es inc dec push push pop insw je (bad) mov mov ror (bad) fucom jmp stc add push adc cmp inc dec push pop bound ja test xchg lcall int3 rcr loope out idiv add adc and cs pop pop insw je (bad) mov mov ror (bad) fucom in repz add movhps inc dec push push pop gs je orl enter in repnz add push adc cmp inc dec push pop arpl js xchg mov mov loop out idiv add sub ss pusha outsb jne orl mov ret leave rcl fsubp in repz add movhps inc inc dec push pop arpl js xchg mov mov loope out idiv add adc and das ss pusha outsb jne orl mov ret xlat (bad) in hlt sti add adc push and dec dec push pop fs jae orl add add fsub ljmp pop es push push pop gs jae addl cmpsb lods mov ret fcomp out hlt sti add adc push and dec dec push pop imul xchg mov mov loop lock add sub cmp inc dec push pop arpl js xchg mov rol aad in repnz add movhps inc dec add dec push pop gs jae (bad) mov mov ror (bad) fucom jmp stc add push adc cmp inc dec push pop bound ja test mov fsub ljmp sbb sub aaa ds dec push pop bound ja test mov (bad) lret rcr loopne out cmc cld add adc pop es push pop pop data16 jae orl (bad) into aad add ljmp sbb sub aaa ds dec push pop popa push mov xchg fwait mov (bad) (bad) call or sbb daa cs pop pop insw je (bad) mov mov ror (bad) fucom jmp stc add push push sbb inc inc dec push pop arpl js xchg mov mov loop lock add sub ss pusha add add jge mov mov ret lret (bad) in hlt sti add adc sbb inc inc dec push pop arpl js xchg mov mov loop lock add daa cs pop pusha insw je orl mov ror (bad) fucom jmp cli add movhps inc inc dec push pop arpl jns xchg mov mov loope lock add add add adc and cs pop pusha insw je (bad) mov xchg cltd mov ret lret (bad) lock push or sbb sub ss pusha outsb jbe test scas mov ret lret (bad) in hlt sti add adc push and dec dec push pop imul mov mov mov loop lock add add xor ds dec push pop bound ja test mov (bad) lret rcr loopne out cmc cld add adc pop es push push pop gs jae orl enter in repnz add movhps sub cmp inc dec push pop arpl ja test mov (bad) lret rcr loope out idiv add adc and cs pop pop insw je (bad) mov mov ror (bad) fucom jmp stc add push add cmp inc dec push pop bound ja test mov mov loope out idiv add adc and cs pop pop insw je (bad) mov mov ror xlat fsubp in repz add push adc cmp dec push pop bound js xchg mov mov loope out idiv add adc pop add das ss pusha outsb jne orl add lahf cmpsb lods mov ret xlat fsubp in repz add movhps inc inc push push pop gs jae orl enter in repnz add push adc cmp inc dec push pop bound ja test mov ret lret loopne out cmc cld add adc pop es push push pop gs jae orl (bad) into aad jecxz icebp clc incl or add aaa ds dec push pop popa push mov mov ret lret (bad) in hlt sti add adc push and dec dec push pop imul xchg mov mov jecxz icebp clc incl or xor ds dec push pop popa push mov mov ret lret fsubp in repz add adc push add sub push push pop gs jae orl add mov fsub ljmp sbb sub aaa ds dec push pop popa imul cltd mov ret lret (bad) in hlt sti add adc push and dec dec push pop imul xchg mov mov jecxz icebp clc incl or xor ds dec push pop popa push mov mov ret lret (bad) in hlt sti add adc push and add dec dec push pop imul xchg mov ret fsub call add and inc inc dec dec push pop pop gs jne addb movsb stos scas mov mov (bad) in out repz incb or adc push and sub dec dec push pop pop bound jb jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or push sbb add sub cmp dec push push pop pusha imul addb mov mov (bad) fndisi(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc cli add and aas inc dec dec push pop pop gs je jg mov stos scas mov mov add fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound jb jge xchg test mov mov xlat fldl jecxz out repz incb or adc sbb cmp pop pop bound jb jge mov cmpsl lods mov mov fcomp loop in repnz std add or daa sub inc dec push push pop bound jno jl xchg lods mov mov xlat fsub out icebp idiv add or xor inc add push pop arpl js mov mov rol aad jecxz repnz add push adc push and sub dec dec push pop pop bound jb jl xchg lods mov mov xlat fsub out icebp idiv add or sub xor push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpckhps and add add xor push push pop pop gs add addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fildl add out lock add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jnp xchg cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub cmp dec push push pop popa data16 jno jl xchg add mov mov rcl fucom call add or sub dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl je jg mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc add add push pop pop imul (bad) xchg lcall rol rcl fnop in lock cli add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub ss inc dec push push pop popa insb jno jl xchg lods mov mov xlat fucom out repnz add pop or and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test (bad) leave iret aam fsubp jmp or sbb and xor cmp pop pop bound jb jl xchg lods mov add fneni(8087 in lock cli add pop and das xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out icebp idiv add or adc xor dec push pop pop imul mov lods mov mov fcomp loop in repnz add or push sbb sub cmp dec push push pop pusha add jbe addb movsl stos scas mov mov fcmovu in out hlt stc incb push adc push and xor cmp pop pop bound jb jl xchg lods mov mov (bad) fndisi(8087 out lock add and aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or daa sub aaa cmp inc dec push push pop popa imul addb movsl stos mov mov aam (bad) ljmp unpcklps push and xor ds dec dec push pop pop arpl jb jge xchg cmpsl lods mov mov (bad) fndisi(8087 out icebp idiv add or adc xor dec push pop pop imul mov test mov mov (bad) jecxz out repz incb or adc sbb aaa cmp push pop popa insb jno jl xchg cmpsb stos mov mov aad (bad) ljmp unpcklps pop and das xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop add add push jne jg mov test ret leave into rcr fsubp call add or daa sub inc dec push push pop popa imul ljmp adc xor push push pop pusha imul addb cmpsb stos mov mov aad loopne jmp cmc cli add and aas inc dec dec push add imul add jnp test cmpsb stos mov mov aad loopne jmp cmc cli add and aas inc dec dec push pop pop fs je jg mov stos scas mov mov (bad) in out hlt stc incl push adc push and cs ds dec dec push pop pop arpl jae jle mov test ret enter fsubp call add or sub sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp adc das xor dec push pop pop gs jne jg mov movsl stos mov mov (bad) add add loopne jmp cmc sti add and inc inc dec push push pop pusha gs jne addb movsl stos scas mov mov fnop in lock cli add and aas inc dec dec push pop pop fs je jg mov test (bad) leave iret aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul add add test ret leave into rcr (bad) jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov cmpsl lods mov mov xlat fsub out add clc incb or adc push and xor cmp pop pop arpl jae jge mov test mov mov xlat fucom out repnz std add or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jb jge xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub ss inc dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop imul mov lods mov mov xlat fucom out repnz add or pop sbb daa sub aaa add pop pop bound jb jge mov add popf mov mov fcomp loop in repnz std add or sub xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and xor ds dec dec push pop pop imul mov mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov (bad) in out hlt stc incl unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov nop xchg fwait mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb movsl stos mov mov aad loopne jmp cmc sti add and inc inc dec push push pop pusha imul addb cmpsb stos mov add (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop pusha imul addl mov rol rcl fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov xlat faddl loop in repnz std add or sub dec dec push pop pop push je jle mov test (bad) leave iret aam fsubp jmp add push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz add or daa sub aaa cmp inc dec push push pop popa insb jno jl xchg stos mov mov (bad) fsub out icebp idiv add or push sbb and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt stc incl unpcklps push and cs ds dec dec push pop pop arpl jae jge mov test mov mov fcomp loop in repnz std add or daa sub xor cmp pop pop bound jb jge xchg cmpsl lods mov mov rcl fucom out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb and inc inc dec push push pop pusha gs jne jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul add test mov mov fcomp jecxz out repz incb or sub dec dec push pop pop bound jb jge xchg cmpsl lods mov mov xlat fsub out repnz add or pop sbb daa sub ss inc dec push push pop popa imul jl xchg lods mov mov (bad) fndisi(8087 out icebp idiv add or push sbb sub xor cmp dec push push pop pusha imul addb movsl stos scas mov mov fcmovu in out hlt cli incl pop and das xor aas inc dec dec push pop pop imul mov mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jb jge mov cmpsl lods mov mov xlat faddl add add out repnz add or pop sbb daa sub aaa cmp inc dec push push pop popa data16 jno jl xchg stos mov mov (bad) fneni(8087 out lock sti add and sub cmp dec push push pop pusha gs jne addb movsl stos scas mov mov (bad) fneni(8087 in lock add and inc inc dec push push pop pusha gs jne addb add add (bad) xchg lcall mov fcmovu in out hlt stc incl unpcklps pop and cs aas inc dec dec push pop pop imul mov scas mov mov fcomp jecxz in repz std add or daa sub dec dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp add dec push push pop popa imul addb movsl stos mov mov aad loopne ljmp unpckhps pop and das xor aas inc dec dec push pop pop fs je jg mov test (bad) leave into rcr fsubp jmp add add adc pop and das xor aas inc dec dec push pop pop gs jne addb movsl stos mov mov aad loopne ljmp add add add add cmc cli add and inc inc dec push push pop pusha imul addl mov rol rcl fsub out icebp idiv add or push sbb es ss inc dec push push pop popa insb jb jge xchg cmpsl lods mov mov fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jle mov add (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs jne jg mov stos mov mov aad loopne jmp idiv add or push sbb sub cmp dec push push pop pusha add jb jl xchg lods mov mov fcomp loop in repnz std add or sub dec dec push pop add push orl test (bad) leave into aam fsubp jmp add push adc pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fnop in lock cli add and inc inc dec push push pop pusha imul addb movsl stos mov mov (bad) fndisi(8087 out lock add or add add sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov add fcomp jecxz in repz std add or sub dec dec push pop pop arpl jae jge mov test mov mov add add add add int fcomp jecxz out repz incb or adc push and cs push pop imul xchg mov rcl fsub out icebp idiv add or sub xor aas inc dec dec push pop pusha gs jne addb cmpsb lods mov mov fcomp jecxz out repz incb unpckhps and sub aaa cmp inc dec push push pop bound jae jge mov test mov fnop out icebp idiv add or sub xor ds dec push push pop pusha imul addl mov ret rcr loop icebp stc add movhps daa cs into fucom in repz add adc pop es push push pop gs jae orl enter in repz incl pop and aas inc dec dec push pop pop add add add je jg mov test mov fcmovu in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fsub out icebp idiv add or push sbb sub cmp dec push push pop popa imul addb movsl stos mov mov aad (bad) ljmp sldt add add push and xor ds dec dec push pop pop arpl jae jle mov test mov mov xlat fsub out repnz add or push sbb es cmp dec push push pop pusha imul addb movsl stos mov mov aad (bad) ljmp unpcklps pop and cs ds dec dec push pop pop arpl jae jle mov test mov mov add add enter fucom out repnz std add or sub inc dec push push pop popa insb jno jl xchg lods mov mov (bad) fneni(8087 out lock sti add and aas inc dec dec push pop pop imul (bad) xchg cltd lahf movsb test (bad) leave into rcr fsubp call add or sub inc dec push push pop bound insb jno jl xchg lods mov mov (bad) fndisi(8087 out lock add or adc cmp dec push push pop popa imul addb cmpsb stos mov mov (bad) fneni(8087 in lock sti add and inc inc dec dec push pop pop gs jne jg mov cmpsb stos mov mov (bad) fneni(8087 in lock sti add add and inc inc dec dec push pop pop gs je jg mov test (bad) leave iret aam (bad) jmp add push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz std add or sub dec dec push push pop bound jb jl xchg lods mov mov rcl fsub out repnz add or pop sbb es ss inc dec push push pop popa imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or adc xor push push pop pusha gs jne addb movsl stos scas mov mov fiaddl loopne jmp idiv add or adc xor push push pop pusha gs jne add jg mov stos scas mov mov fcmovu in out cmc cli incl unpcklps pop and das xor aas inc dec dec push pop pop imul mov mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl jae jge mov test mov mov xlat fucom out repnz std add or daa sub add aaa cmp inc dec push push pop bound jno jle mov mov adc push and dec push push pop gs jae addl (bad) lret rcl fsub out icebp idiv add or adc xor dec push pop pop fs je jg mov movsl stos mov mov aam (bad) jmp add push adc push and xor cmp add add bound jb jl xchg lods mov mov (bad) fneni(8087 out lock sti add pop and das xor aas inc dec dec push pop pop imul iret aam (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fnop in lock cli add and add cmp dec push push pop pusha gs jne addb movsl stos scas mov mov fnop in out cmc cli incl pop and aas inc dec dec push pop pop fs je jg mov stos scas mov mov (bad) in out hlt cli incl unpcklps add and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne add lock sti add and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fndisi(8087 out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop popa insb jno jl xchg add mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub inc dec push push pop bound add jle mov test mov mov (bad) jecxz out repz incb or adc push and xor ds dec dec add push pop pop arpl jae jle mov test (bad) leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in out hlt cli incl unpcklps pop and inc inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne ljmp or adc xor push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock sti add or push sbb sub cmp dec push push pop popa imul addl mov roll int xlat fucom out repnz add or daa sub inc dec push push pop arpl jae jge mov test mov add add fcomp loop in repnz std add or sub dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop arpl je jle mov test (bad) leave into aam fsubp jmp add push adc push and cs ds dec dec push pop pop imul je jg mov stos scas mov mov fcmovu in out cmc cli incl pop and aas inc dec dec push pop pop gs jne jg mov stos mov mov aad loopne ljmp adc sub cmp dec push push pop popa data16 jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb add sub aaa cmp inc dec push push pop popa insb jno jl xchg lods mov mov xlat fsub out repnz add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov fcomp loop in repnz std add or sub dec dec push pop pop bound jb jge mov test mov mov fadds add fucom call add or sub dec dec push pop pop bound jb jge mov test mov mov fcomp jecxz in repz std add or sub dec dec push pop pop bound outsb jae jle mov test (bad) leave iret aam fsubp jmp add push adc push and cs ds dec dec push pop pop imul add test (bad) leave iret aam (bad) ljmp unpcklps pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fcmovu in lock cli incl pop and aas inc dec push push pop pusha gs jne addb movsl stos mov mov aad loopne jmp idiv add or push sbb sub cmp add push push pop pusha imul addb cmpsb stos mov mov (bad) fneni(8087 out lock add or push sbb es ss inc dec push push pop popa data16 jno jl xchg lods mov mov rcl fucom out repnz add or sub dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz out repz add incb or adc push and xor ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and cs ds dec dec push pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and das xor aas inc dec dec push pop pop imul (bad) xchg lcall add lret fcmovu in out hlt cli incl unpcklps pop and das xor dec push pop pop gs jne jg mov stos scas mov mov fnop in lock cli add sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out icebp idiv add or push sbb es ss inc dec push push pop add add insb jno jl xchg lods mov mov xlat fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg cmpsl lods mov mov xlat fucom out repnz add or daa sub inc dec push push pop bound jb jge mov test mov mov fcomp jecxz in repz std add or add add sbb cmp pop pop arpl jae jle mov test ret leave into rcr fsubp jmp add push adc push and cs ds dec dec push pop pop add jne addb movsl stos mov mov loopne jmp idiv add or push sbb sub cmp dec push push pop pusha imul addb cmpsb stos mov mov add add fneni(8087 in lock sti add and inc inc dec dec push pop pop gs je jg mov stos scas mov mov (bad) in out hlt stc incb push adc push and xor ds dec dec push pop pop arpl jae jle mov test mov mov fcomp jecxz in repz std add or daa sub inc dec push push pop bound jb jl xchg lods mov mov (bad) fsub out icebp idiv add or push sbb sub cmp dec push push pop pusha imul addb movsl stos mov mov rcl fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jl xchg lods mov mov fcomp jecxz in repz std add or sub cmp inc dec dec push pop pop arpl jae jle mov test ret leave iret aam (bad) jmp add unpcklps pop and das xor aas inc dec dec push pop pop gs jne jg mov stos scas mov mov fneni(8087 in lock sti add or push sbb sub cmp dec push push pop popa imul addl mov rol rcl fsub out repnz add or pop sbb aaa cmp pop pop bound jb jge mov test mov mov fcomp jecxz in repz incb or adc sbb and das xor dec push pop pop gs jne jg mov stos mov mov aad loopne ljmp adc sbb sub cmp dec push push pop popa imul addl add rol rcl fsub out icebp idiv add or pop sbb daa sub inc dec push push pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc pop and das xor aas inc dec dec push pop pop fs je jg mov stos scas mov mov fnop in lock cli add and sub cmp dec push push pop popa imul addl mov rol rcl fsub out repnz add or pop sbb daa sub dec dec push pop pop arpl add test movsb test (bad) lret fcmovu in out hlt cli incl pop and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or add sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp jecxz out repz incb or adc push and xor ds dec dec push pop pop fs je jg mov stos scas mov mov fnop in lock sti add and inc inc dec push push pop pusha data16 jno jl xchg lods mov mov add add xlat fsub out repnz add or pop sbb daa sub inc dec push push pop bound jae jge mov test mov mov aam (bad) ljmp unpckhps pop and aas inc dec dec push pop pusha gs jne addb cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or push sbb daa sub aaa cmp inc dec push push pop popa insb jb jl add add mov mov fcomp jecxz in repz std add push adc push and xor ds dec dec push pop pop imul mov mov mov fcmovu in out cmc cli add and inc inc dec push push pop pusha imul addb cmpsb lods mov mov xlat fsub out icebp idiv add or pop sbb aaa cmp inc inc dec push pop pop bound jae jge mov test mov mov (bad) in out hlt stc incl unpcklps pop and sub xor push push pop pusha imul addb cmpsb stos mov mov xlat fsub out icebp idiv add or pop sbb daa sub inc dec push push pop bound jb jge mov test mov mov (bad) jecxz out repz add incb or adc push and cs ds dec dec push pop pop imul (bad) xchg lcall mov fneni(8087 in lock sti add and sub cmp dec push push pop popa imul addl mov rol rcl fsub out repnz add or sub dec dec push pop pop arpl jae jge mov test mov mov (bad) jecxz out hlt stc incb unpcklps pop and das xor aas inc dec dec push pop pop fs je jg xchg cmpsb stos mov mov (bad) fndisi(8087 out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge xchg test mov mov fcomp jecxz in repz std add push adc push and xor ds dec dec push pop pop add imul (bad) xchg cltd lahf movsb test (bad) lret fcmovu in out hlt cli incl unpckhps and inc inc dec push push pop pusha imul addb cmpsb stos mov mov (bad) fsub out icebp idiv add or pop sbb daa sub aaa cmp inc dec push push pop bound jb jge mov test mov mov fcomp jecxz in repz incb or adc push and cs ds dec dec push pop pop imul (bad) xchg lcall mov fiaddl loopne jmp idiv add or push sbb sub cmp dec push push pop inc xor pop jbe dec aas and mov fwait mov mov jle daa mov int xor sub sub add dec pop insb inc mov dec scas cmp enter lock fisubr arpl dec cmpsb xchg pop jae lds mov pop ds fdivrs negb ljmp pop jge push dec sahf mov xchg cvtps2pd out lcall ret inc inc (bad) icebp das mov add adc stc push add fsin push xor (bad) and leave jmp mov stos into pop mov mov fbld ja aas imul cmp test test test test cmp mov test cmp test test mov test cmp cmp cmp cmp mov cmp cmp cmp cmp jmp cmp test cmp test test test test cmp cmp test xor cmp test test test test cmp cmp test cmp test ret call test test test cmp cmp mov test cmp test test test mov test cmp cmp test cmp inc test test test test cmp mov cmp test cmp test test mov cmp test cmp test test ret pop test cmp cmp test cmp clc adc test test cmp test cmp jmp add icebp xchg in cmpsb mov xor xchg cld jne jg enter loope pop movsl add cmpsl je cmp aaa dec push loop fcmovnbe daa cmp xchg (bad) (bad) incl ljmp dec sub (bad) jb or cmp jmp cmp test cmp cmp test pop cmp test cmp test test add cmp cmp test cmp cmp mov cmp cmp cmp cmp test mov inc test cmp test test test test cmp cmp test test dec test test cmp cmp test test cmp cmp test test dec test test test cmp cmp cmp cmp cmp cmp cmp dec cmp test test cmp test test test test cmp cmp dec test test test test cmp cmp test test cmp cmp xor test test test test test cmp cmp cmp cmp cmp or cmp cmp cmp test test cmp test test test test call cmp cmp test cmp test cmp cmp test test cmp push cmp cmp cmp test cmp cmp cmp cmp nop test jne mov cmp test cmp test add cmp test cmp cmp cmp mov test test cmp cmp cmp add cmp test cmp cmp call cmp cmp nop cmp test jmp cmp test cmp test pop cmp test cmp test cmp push nop cmp cmp cmp test push cmp test test cmp cmp push cmp test cmp cmp test mov test test cmp test test call cmp cmp cmp nop nop pop cmp cmp cmp cmp cmp cmp jl cmp cmp test cmp test mov test test cmp cmp test sub cmp test cmp test cmp mov cmp cmp test cmp nop sub test test test test test call test test cmp cmp test mov cmp cmp cmp test test push cmp test test cmp test mov test cmp test test cmp push cmp cmp test test cmp push cmp test test test test push test test cmp cmp cmp call cmp test test test cmp jmp cmp cmp test cmp cmp pop test test test cmp cmp inc cmp test cmp cmp test push test test cmp cmp cmp pop test cmp cmp test test inc test cmp cmp cmp test pushl cmp cmp test test test xor cmp test test cmp test pop test cmp test test test mov cmp test cmp test test cmp jne nop nop cmp test mov test test cmp cmp cmp cmp cmp test test dec test cmp cmp cmp cmp dec cmp test test test dec cmp cmp cmp cmp cmp dec test test test test mov cmp cmp cmp cmp cmp test cmp cmp test test cmp test cmp test cmp cmp test test cmp test cmp test cmp cmp test test cmp test cmp test test cmp cmp test test cmp test test cmp test nop test test test test test cmp cmp test test test test cmp cmp test cmp cmp cmp test test cmp cmp test cmp test cmp cmp test test cmp test test xor cmp test nop test test test test test cmp cmp cmp cmp test test test cmp test test cmp test test cmp test test test cmp test test test test test test cmp test cmp test test cmp cmp cmp test test cmp cmp cmp cmp test test test test cmp nop cmp cmp test test test test cmp nop cmp cmp test test test test cmp nop cmp cmp test test test test cmp nop cmp cmp test test or test test cmp nop cmp test jne cmp test test test test jmp cmp nop cmp cmp test cltd jecxz jno and adc push lret mov mov loope (bad) lahf mov sbb (bad) mov push mov clc les nop xchg sub jmp je data16 mov popf sbb mov mov sarl sahf (bad) lock push fsub jae ret and mov popf xchg lods arpl xchg movsl jl xchg adc into add pop in push scas jmp iret inc out and sub pusha aam or adc lcall mov mov into xchg call outsb and cmp ficompl push std sti mov icebp xchg in cmpsb mov xor xchg cld jne jg enter mov pop movsl add cmpsl je cmp aaa dec push loop fcmovnbe daa cmp cltd jecxz jno and adc dec lret mov or (bad) and daa ljmp jmp sub cmp nop mov cmp cmp test test test pushl test test test cmp test pop test cmp test test cmp mov test test test test test mov test test test cmp test push test test test test test mov test cmp cmp test test mov test test test test test mov test cmp cmp cmp test cmp jne cmp cmp test cmp test mov cmp cmp cmp test cmp cmp jne cmp test cmp test cmp pop cmp cmp test cmp cmp mov cmp test cmp nop cmp mov test cmp test test mov cmp cmp cmp cmp test add test cmp test cmp test mov cmp test test cmp cmp mov test cmp cmp test test add cmp cmp cmp test test mov cmp test test cmp test add cmp test cmp test test lods cmp cmp test cmp cmp test je test test cmp cmp cmp add test test cmp test test mov cmp test cmp test cmp cmp jne cmp cmp cmp cmp test mov cmp nop cmp cmp test cmp jne cmp test cmp test test mov cmp cmp cmp cmp cmp push cmp cmp test cmp nop pop cmp cmp test cmp test push cmp test test cmp cmp push cmp test cmp cmp test push cmp cmp test cmp cmp push cmp test cmp test test push test cmp cmp test test push test cmp test test test push cmp cmp test cmp test push test test cmp cmp test call test test cmp test test add test cmp cmp test cmp ret cld xor jo sarl mov jl or jg and cltd mov push jge js add fcompl pop fisubl leave push insl mov dec lea or mov dec int3 dec test outsl fimul pop mov pop ljmp mov push jne jmp insb out push add mov pop loop dec aam iret inc sahf fstps fist mov and testl repnz aad movsb (bad) movsl cmp cmp pop adc ret lret in jmp imul fcoml lds adc mov (bad) mov xchg icebp push mov add daa aas cmc shr add (bad) call cmp ficompl push std sti mov xor mov out dec cmc ret cwtd addb fcomp addr16 out xor lcall test adc pushf push xor out and xorl test and mov or cltd and out xor test or xor stos mov cmp and mov sbb into mov enter push mov scas popa or add cmp test xlat sub xor jo sarl (bad) jl or jg and cltd mov mov jge js add fcompl fisubl leave push insl mov dec lea or mov hlt dec int3 test outsl fimul pop mov pop repz mov cmp mov push jne jmp xchg insb out push add mov pop loop aam iret inc sahf fstps fist mov and testl call nop repz fimull (bad) movsl or fisubl or fisubl or fisubl or fisubl or fisubl or fisubl or fisubl or fisubl or fisubl or fisubl or fisubl or fisubl or fisubl or fisubl or fisubl or fisubl or fisubl or fisubl or fisubl or fisubl or fisubl test ficomp stc dec aad mov movsb fidivl call fidivl dec and movsl push repz movsl fidivl xor ja movsl mov jae fidivl xor mov movsb fidivl mov dec jg fidivl daa mov xlat mov in neg cmpsl fstpt hlt jmp mov imul fsubrs mov jbe int jle movsl and jbe movsl and jbe movsl (bad) jbe stos pop push mov mov fisubrl (bad) jbe iret fisttp mov mov fidivl jne jbe push jno or jno or jno or jno or jno or jno or jno or jno or jno or jno or jno or jno or jno or jno or jno or jno or jno or jno or jno or jno or jno or jno or jno or jno or jno or jno or jno or jno or jno or jno or jno or jno or jno or jno or jno or jno or jno or jno or jno or jno or jno or jno or jno or jno or jno or jno or jno or jno or jno or jno or jno or jno or xchg jb push jbe pushl lock movsl (bad) es jbe cmc mov lret movsl ljmp mov and lahf sub (bad) inc arpl and (bad) jbe cld push sti scas movsb fidivl push pushl pushl cmp movsl (bad) lods (bad) and jbe movsl fisubl pop jne mov movsl fidivrl mov dec loop movsl fisubl pop xor ja movsl pop mov movsl fidivrl test aad push and jl mov cmpsl fidivl inc fidivl ljmp in ljmp in ljmp in ljmp in ljmp in ljmp in ljmp in ljmp in ljmp in ljmp in ljmp in ljmp in ljmp in ljmp in ljmp in ljmp in ljmp in ljmp in ljmp in ljmp in ljmp in ljmp in ljmp in ljmp in ljmp in ljmp in ljmp in ljmp in ljmp mov inc stos negb aad cmp fidivl stos js jae xor inc fcomi pop movsb aad and push sti xchg lahf mov dec or xor dec mov mov mov fisubrl fbstp sub xor call fidivl dec jne mov dec adc movsl sbb arpl arpl arpl arpl arpl arpl arpl arpl arpl arpl arpl arpl arpl arpl arpl arpl arpl arpl arpl arpl arpl arpl arpl arpl arpl arpl arpl arpl arpl arpl arpl arpl arpl arpl arpl arpl arpl arpl arpl arpl arpl arpl arpl arpl arpl arpl arpl arpl arpl arpl mov fidiv sub ds ficomp stc dec gs movsl push xor (bad) std jbe pushl fsubs or jbe cs jb lods cld jbe pushl in cmpsl movsl (bad) movsl (bad) cs jb or xor cmpsl movsl (bad) es jbe cs jb bnd pushl add movsl (bad) es xchg jb lret mov movsl (bad) es xchg jb stos lock pushl cmp movsl (bad) es jbe dec xchg pop mov sub dec dec fidivl aad push rcl stos push rcl stos push rcl stos push rcl stos push rcl stos push rcl stos push rcl stos push rcl stos push rcl stos push rcl stos push rcl stos push rcl stos push rcl stos push rcl stos push rcl stos push rcl stos push rcl stos push rcl stos push rcl stos push rcl stos push rcl stos push rcl stos push rcl stos push rcl stos push rcl stos push rcl stos push rcl stos push rcl stos push rcl stos push rcl stos push rcl stos push rcl stos push rcl stos push rcl stos push rcl stos push rcl stos push rcl stos push rcl stos push dec dec leave jbe sub mov pop movsb scas jp test jbe lds test fcom inc push fidivr in (bad) mov push bound movsl (bad) out xor mov stos insl mov movsl ficompl dec dec aaa fwait dec dec aaa fwait dec dec aaa fwait dec dec aaa fwait dec dec aaa fwait dec dec aaa fwait dec dec aaa fwait dec dec aaa fwait dec dec aaa fwait dec dec aaa fwait dec dec aaa fwait dec dec aaa fwait dec dec aaa fwait dec dec aaa fwait dec dec aaa fwait dec dec aaa fwait dec dec aaa fwait dec dec aaa fwait dec dec aaa fwait dec dec aaa fwait dec dec aaa fwait dec dec aaa fwait dec dec aaa fwait dec dec aaa fwait dec dec aaa fwait dec dec aaa fwait dec dec aaa fwait dec dec aaa fwait dec dec aaa fwait dec dec aaa fwait dec dec aaa fwait dec dec aaa fwait dec dec aaa fwait dec dec aaa fwait dec dec aaa fwait dec dec aaa fwait dec dec aaa fwait dec dec aaa fwait dec dec aaa fwait dec dec aaa fwait dec dec aaa fwait dec dec aaa fwait dec dec aaa fwait dec dec aaa fwait dec dec aaa fwait dec dec aaa fwait dec dec aaa fwait dec dec aaa fwait dec dec aaa fwait dec cs and jns adc jbe cs and sub and les dec cmp xor pop and pop mov sub and jns loop jbe dec popa pop mov clc (bad) jbe cs and jns mov jbe cs and sub and (bad) jbe cmpsl jp (bad) jp movsl lea pop movsl fidivl xor ja movsl mov mov movsl (bad) repnz cltd mov pop dec outsb mov (bad) fidivl and jbe movsl fidivl lds in (bad) pop popf and cs jp addr16 jne movsl push cmp in xor mov inc cmp inc inc cmp inc inc cmp inc inc cmp inc inc cmp inc inc cmp inc inc cmp inc inc cmp inc inc cmp inc inc cmp inc inc cmp inc inc cmp inc inc cmp inc inc cmp inc inc cmp inc inc cmp inc inc cmp inc inc cmp fwait lcall (bad) push lcall and sbb jbe loopne jae cmpsb fidivl cld xor (bad) fisubr fidivl movsl mov mov iret ficompl int jbe in mov in push add mov fisubl sub cli and cwtl movsl scas jno cmpsb xchg mov movsb andb dec fimul dec add jbe aas inc in cmp inc in cmp inc in cmp inc in cmp inc in cmp inc in cmp inc in cmp inc in cmp inc in cmp inc in cmp inc in cmp inc in cmp inc in cmp inc in cmp inc in cmp inc in cmp inc in cmp inc in cmp inc in cmp inc in cmp inc in cmp inc in cmp inc in cmp inc in cmp inc in cmp inc in cmp inc in cmp inc in cmp inc in cmp inc in cmp inc in cmp inc in cmp inc in cmp inc in cmp inc in cmp inc in cmp inc in cmp inc in cmp inc in cmp inc in cmp inc in cmp mov leave movsl mov hlt iret ficompl pop (bad) xor loopne cmc pop movsl aad sbb mov sub ss sarl movsl (bad) jecxz push ss (bad) sti lea out movsl mov push pop or mov mov std std cltd push inc xchg jb movsb add gs push and add ficom popf (bad) std dec es xchg fstp lcall jmp lock mov lret movsl fidivl (bad) mov pop jne mov mov movsl fidivl in std jecxz sbb fisubr stos dec mov jmp (bad) in mov push sbb test xchg (bad) in test xchg jle fs mov mov movsl fidivl ljmp aaa xor aaa xor aaa xor aaa xor aaa xor aaa xor aaa xor aaa xor aaa xor aaa xor aaa xor aaa xor aaa xor aaa xor aaa xor aaa xor aaa xor aaa xor aaa xor aaa xor aaa xor aaa xor aaa xor aaa xor aaa xor aaa xor aaa xor aaa xor aaa xor aaa xor aaa xor aaa xor aaa xor aaa xor aaa xor aaa xor aaa xor aaa xor aaa xor aaa xor aaa xor aaa xor aaa xor aaa xor aaa cs jb pop lds pushl cld pop pop and pop dec dec and pop sub pop dec ret mov pop aad mov pop lods jle rcl sbb iret ficompl iret ficompl iret fimull (bad) pop dec jbe movsl (bad) pop movsb aad sbb mov (bad) jbe cld push cmp movsl sbbb loopne std out lods xor mov test pop sub outsb repz cmp mov dec jns mov lods xor movsl fisubrl call fidivl dec sub sahf arpl (bad) (bad) mov adc rol adc rol adc rol adc rol adc rol adc rol adc rol adc rol adc rol adc rol adc rol adc rol adc rol adc rol adc rol adc rol adc rol adc rol adc rol adc rol adc rol adc rol adc rol adc rol adc rol adc rol adc rol adc rol adc rol adc rol adc rol adc rol adc rol adc rol adc dec rol jbe pushl mov pop and jbe dec out push mov sub into mov movsl scas ss rcrb stc dec inc mov add xchg and jbe movsl (bad) lods sbb repnz (bad) pop sbb lea xchg and jbe and mov pop pop mov movsb fidivl iret lcall pop lods jb ljmp mov int inc mov movsb fidivl movsl mov pop xor mov movsl fidivl movsl push jns adc ret add fdivrp hlt lods and std out sbb mov dec cmp mov or jb or jb or jb or jb or jb or jb or jb or jb or jb or jb or jb or jb or jb or jb or jb or jb or jb or jb or jb or jb or jb or jb or jb or jb or jb or jb or jb or jb or push jns aam mov andl and and xor movsl mov pop sar mov mov call mov movsl (bad) mov push cmp ret xchg adc iret (bad) mov sbb sbb add mov andb (bad) and cld mov and cmc pop movsl aad dec scas fidivl cld mov jbe sbb mov (bad) movsb (bad) push sbb aad aas movsb fidivl call fidivl dec test add xlat fimul lods and mov dec lret ja movsl cmpsl or fsubs or fsubs or fsubs or fsubs or fsubs or fsubs or fsubs or fsubs or fsubs or fsubs or fsubs or fsubs or fsubs or fsubs or fsubs or fsubs or fsubs or fsubs or fsubs or fsubs or fsubs or fsubs or fsubs or fsubs or fsubs or fsubs or fsubs or fsubs or fsubs or fsubs or fsubs or fsubs or fsubs or fsubs sbb iret fdivrp pop sbb test jle,pn mov hlt push and and and sub movsl (bad) in mov repnz stos (bad) jbe pushl mov and and jne mov movsl ficompl leave in jbe movsl ficompl mov movsl push and cmp jbe sub (bad) mov xchg fidivl cs gs mov (bad) movsl push cmp movsl sbbb movsl mov sub mov movsl fidivl pop outsl ret (bad) hlt lods and xlat mov insl adc imul imul imul imul imul imul imul imul imul imul imul imul imul imul imul imul imul imul imul imul imul imul imul imul imul imul imul imul imul imul imul imul imul imul imul imul imul imul leave movsl mov sub mov movsl fidivl cs (bad) mov pop (bad) notb stos pop call jbe mov int jmp movsl fidivl dec pop mov movsl fidivl cs (bad) mov movsl fdivs notb stos pop call jbe lods push popf and jbe movsl mov ds sbb movsl fisubl xchg pop lea cmp push jmp movsl fidivl std fistpl iret shlb pop adc mov pop call hlt mov fisubrl leave movsl mov repz outsl (bad) mov lods and lahf mov call fidivl dec roll movsl fidivl sub jbe add pop add pop add pop add pop add pop add pop add pop add pop add pop add pop add pop add pop add pop add pop add pop add pop add pop add pop add pop add pop add pop add pop add pop add pop add pop add pop add pop add pop add pop add pop add pop add pop add pop add pop add pop add out mov fisubrl shrl pop sub mulb mov lahf sbb call fidivl dec lea mov fisubrl cs sbb pop or pop movsl scas push loopne sbb iret ficompl cs push repnz ficompl test xchg and jbe sbb jns movsl fiadd imulb xchg jb add jbe pushl fs pop and sub xchg and lahf fidivl sub jbe jne lea data16 ja movsl mov int mov test xchg and jbe and jle movsl (bad) movsl push cmp movsl sbbb xor jbe sahf loope cwtl sahf loope cwtl sahf loope cwtl sahf loope cwtl sahf loope cwtl sahf loope cwtl sahf loope cwtl sahf loope cwtl sahf loope cwtl sahf loope cwtl sahf loope cwtl sahf loope cwtl sahf loope cwtl sahf loope cwtl sahf loope cwtl sahf loope cwtl sahf loope cwtl sahf loope cwtl sahf loope cwtl sahf loope cwtl sahf loope cwtl sahf loope cwtl sahf loope cwtl sahf loope cwtl sahf loope cwtl sahf loope cwtl sahf loope cwtl sahf loope cwtl sahf loope cwtl sahf loope cwtl sahf loope cwtl sahf loope cwtl sahf loope cwtl sahf loope cwtl sahf loope cwtl sahf loope cwtl sahf loope cwtl sahf mov dec dec lret jbe std mov sub rorb and jns neg jbe cs jb cmc int3 jbe pushl mov and jbe sub mull fnsave hlt push and and mov fidivrl out das mov mov fbstp movsl push cmp movsl sbbb int jbe movsl push and cs jb loopne jbe pushl call and (bad) cs jb xor jbe pushl cld push pop and jbe cs jb movsl lret sub mulb leave (bad) mov mov movsb fidivl sub jbe test jnp test jnp test jnp test jnp test jnp test jnp test jnp test jnp test jnp test jnp test jnp test jnp test jnp test jnp test jnp test jnp test jnp test jnp test jnp test jnp test jnp test jnp test jnp test jnp test jnp test jnp test jnp test jnp test jnp test jnp test jnp test jnp test jnp test jnp test jnp test mov lcall dec ja movsl mov mov movsl fidivl and mov movsb fidivl pop fidivl stos pop xchg mov pop aaa js and mov movsl sbb outsb (bad) cwtl pusha jo movsl aad arpl jbe stos pop ret mov movsl fidivl mov movsl ficoml (bad) adc ret mov adc ret mov adc ret mov adc ret mov adc ret mov adc ret mov adc ret mov adc ret mov adc ret mov adc ret mov adc ret mov adc ret mov adc ret mov adc ret mov adc ret mov adc ret mov adc ret mov adc ret mov adc ret mov adc ret mov adc ret mov adc ret mov adc ret mov adc ret mov adc ret mov adc ret mov adc ret mov adc ret mov adc ret mov adc ret mov adc ret mov adc ret mov adc ret mov xor daa sub jbe cwtl pushl gs daa movsl fidivl xor jbe shll not shl popa mov cwtl xchg cmp inc scas push sahf (bad) test dec mov and ja movsl out mov cwtl fbstp gs mov fidivl movsb fidivl stos pop fwait mov es movsl fidivl xorl je movsb fimull mov movsl fimull mov pop mov leave pop and mov movsb fidivl pop insl out mov xor jbe pop dec or dec cmpsl mov jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or lret mov insl out mov xor jbe pop dec or pop and ja pop insl out mov xor jbe pop dec or pop and ja movsl pop mov pop and repnz pop pop mov movsb fidivl iret ficomp mov rcr std cld lods and jbe movsl push lea data16 ja movsl mov pop insl repnz and test xchg and jbe cmpsl fidivl pop insl out mov xor jbe pop dec or lods fidivl and pop mov pop xor mov movsl fiaddl xchg in inc xchg xchg in inc xchg xchg in inc xchg xchg in inc xchg xchg in inc xchg xchg in inc xchg xchg in inc xchg xchg in inc xchg xchg in inc xchg xchg in inc xchg xchg in inc xchg xchg in inc xchg xchg in inc xchg xchg in inc xchg xchg in inc xchg xchg in inc xchg xchg in inc xchg xchg in inc xchg xchg in inc xchg xchg in inc xchg xchg in inc xchg xchg in inc xchg xchg in inc xchg xchg in inc xchg xchg in inc xchg xchg in inc xchg xchg in inc xchg xchg in inc xchg xchg in inc xchg xchg in inc xchg xchg in inc xchg xchg in inc xchg xchg in inc xchg xchg in inc xchg xchg in inc sub mov movsb fidivl iret fisttpl mov movsl (bad) cld lods and jbe movsl xor mov xchg and xchg xor and je movsl mov jbe in std jecxz push ss lahf data16 lahf test fidivl sbb jbe movsl pop mov ret push push ret push bound dec xchg xchg push sbb pop mov ret pop dec stos movsl scas sbbb std fisubr fidivl add scas and jbe movsl ficompl pop movsl fidivl (bad) fidivl movsl (bad) (bad) dec movsl (bad) repnz jbe fcom mull jbe movsb sbb cmc xor dec mov jbe sub das and (bad) hlt xor movsl fcmovu wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe wbinvd jbe pop cs jp arpl jae movsl push or movsl fiaddl mov fidivl dec imul mov mov call and jns cs jle pushf or stos in cmp mov and push push cmp movsl sbbb clc (bad) mull fbstp iret fisubl dec insb aaa mov sbb iret fstps iret fistpl mov pop (bad) sub or mov and ja movsl push xor dec and movsl mov cmc repz cmc repz cmc repz cmc repz cmc repz cmc repz cmc repz cmc repz cmc repz cmc repz cmc repz cmc repz cmc repz cmc repz cmc repz cmc repz cmc repz cmc repz cmc repz cmc repz cmc repz cmc repz cmc repz cmc repz cmc repz cmc repz cmc repz cmc repz cmc repz cmc repz cmc repz cmc repz cmc repz cmc repz cmc repz cmc repz cmc repz cmc repz cmc repz cmc repz cmc repz cmc repz cmc repz cmc repz cmc repz cmc repz cmc repz cmc repz cmc repz cmc repz cmc repz cmc repz cmc repz cmc repz cmc repz cmc repz cmc repz cmc repz cmc repz cmc repz cmc repz cmc repz cmc sub cmc arpl lods cmp cmc mov mov repnz out fbstp cltd fldt out push ds mov push inc stos pushf and movsl sub xor push sti test pop and jbe movsl ficompl iret ficompl iret ficompl int jbe in mov in push mov pop pop mov iret fisubl pop rclb jbe repz and dec lock movsl ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret pop fbstp movsl (bad) movsl (bad) jbe xchg adc mov mov mov cltd lds fidivr and scas mov jbe dec fcomps lds jns movsl pop mov ret sbb cmc bound test adc jbe cmpsl jp pop pop mov lods fidivl movsl mov leave cmpsl mov leave cmpsl mov mov lock jmp xchg mov popa fidivl dec les movsl (bad) mull jbe dec cmp movsl push rep fidivl insb push push sub out mov dec pop addr16 sahf bound jp pop pop mov cmpsl fidivl xchg adc mov rcl (bad) mov sbb sbb pop (bad) sbb pop (bad) sbb pop (bad) xor mov fisubrl dec sub push or movsl fdivs cli jmp sub scas jle mov xor inc movsl fidivl pop and pop pop and pop pop and pop pop and pop pop and pop pop and pop pop and pop pop and pop pop and pop pop and pop pop and pop pop and pop pop and pop pop and pop pop and pop pop and pop pop and pop pop and pop pop and pop pop and pop pop and pop pop and pop pop and pop pop and pop pop and pop pop and pop pop and pop pop and pop pop and pop and mov repz cmpsl movsl (bad) mov fbstp pop (bad) cmp jae movsl and mov movsb scas insl sub ficomp stc dec popf sahf pop pop push mov arpl je movsl mov cmc pop or pop and jbe movsl ficompl iret ficompl repz leave movsl and lahf mov fidivl es xlat cmpsl xor movsl mov pop lock pusha das ret in negb xchg adc das (bad) sub (bad) sbb fiaddl dec pop lret xchg aas mov mov jbe cs mov jbe dec fbstp movsl push mov popa push mov popa push mov popa push mov popa push mov popa push mov popa push mov popa push mov popa push mov popa push mov popa push mov popa push mov popa push mov popa push mov popa push mov popa push mov popa push mov popa push mov popa push mov popa push mov popa push mov popa push mov popa push mov popa push mov popa push mov popa push mov popa push mov popa push mov popa push mov popa push mov popa push mov popa push mov popa push mov popa push mov popa push mov popa push mov popa push mov popa push mov popa push mov popa push mov popa push mov popa push mov popa push mov popa push mov popa push mov popa push mov popa push mov popa push mov popa push mov popa push mov popa push mov popa push mov popa push mov popa push mov popa push mov popa push mov popa push mov popa push mov popa push mov popa push mov popa push mov popa push mov popa push mov popa push mov popa push mov popa push lahf je fidivl cs (bad) (bad) iret ficomp mov adc ja movsl mov leave pop and jbe and ja movsl push repz movsb fidivl push aam mov fcom adc xchg fidivl cs lods scas mov fs mov mov out jle xchg int loope sub dec movsl lret sub push insb push sub lock sahf (bad) jle pop nop cmc pop movsl scas (bad) lcall jbe movsl (bad) out xor bound fidivl cs xchg (bad) cs dec mov sbb inc stos ret jmp jbe es xlat test pop mov sbb pop mov sbb bnd movsl mov jbe sub dec mov (bad) sub loop mov stos pop adc movsl (bad) mov in push dec mov jbe sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb mov jne jbe movsl (bad) cs jbe push sub pop movsl scas push sub (bad) ja movsl jmp lds ret cmpsl push xrelease ja movsl mov jbe dec fistl dec sub pop and jbe movsl (bad) testb push mov sbb push xor fidiv rclb xchg xchg push mov clc (bad) lcall fisubl movsl fldt sub mov movsl (bad) sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub cmpsl scas fildl int aad (bad) hlt aad bound pop mov rcr lcall fidivr fildl jns lods mov stc (bad) jb cmpsb out (bad) in mov xchg adc and pop or in bound mov sbb mov in jbe movsl fisubl leave pop and jbe xchg arpl into loopne leave mov movsl xor pop and es mov adc lret mov pop popa jbe movsl fimull pop pop xor movsl fidivl movsb fidivl lods push mov lods cs jp jmp std jecxz and cmc dec mov and add xchg ficompl sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub fadds and sbb pop mov xlat loopne add xlat xchg sbb rcr adc mov shrb mov pop xchg add sarb (bad) les add movsl xor pop and pop rcl lahf add lret dec in add loopne test int3 xlat mov shlb and pop xlat rorb call mov mov add int3 mov sbb movsl xor mov sarl mov mov adc sarl mov mov adc sarl mov mov adc sarl mov mov adc sarl mov mov adc sarl mov mov adc sarl mov mov adc sarl mov mov adc sarl mov mov adc sarl dec push cmp int mov add ret mov rcl sbb movsl xor inc pop and add int3 mov xlat rorb mov pop xchg add xlat mov push rol mov sahf es and push (bad) lret lahf add lret scas jbe lods cmp iret leave mov ret and xlat scas add leave xchg adc lret mov movsl jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne or jne stc dec and adc (bad) mov (bad) int adc rcr xor mov rcrl sbb shlb ret sahf dec inc and adc out sbb shlb ret sahf ljmp xor int xchg pop int lea xlat xor repz mov (bad) (bad) test sbb int3 mov lahf pop pop popf adc loopne pop xlat out adc cmc test rol add pop pop cltd add les adc mov pop sahf adc sarb add (bad) mov sbb ljmp dec dec fidivl push mov insb push mov insb push mov insb push mov insb push mov insb push mov insb push mov insb push mov insb push mov insb push mov insb push mov insb push mov insb push mov insb push mov insb push mov insb push mov insb push mov insb push mov insb push mov insb push mov insb push mov insb push mov insb push mov insb push mov insb push mov insb push mov insb push mov insb push mov insb push mov insb push mov testb out mov add sarl adc (bad) ficompl cmc int3 test (bad) les adc rcrl nop pop pop xchg sbb rcll (bad) ficompl cmc int3 test (bad) les adc sbb enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter enter xor inc pop and xor xlat sahf adc sarb add pop cltd add les sbb rorb mov pop popf adc cmc test shl adc shrb pop pop mov xlat cmc test int3 xlat mov (bad) mov rcl ficompl lock mov adc xor int mov adc sarl jle pop and add jecxz sbb repnz hlt xlat mov (bad) jecxz sbb movsl xor iret lret jmp mov iret rcr xchg dec and add les adc (bad) mov fnop mov ja movsl loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop fwait popf loop push dec and jbe movsl mov movsl xor ja and sbb push and xor leave mov pop rcl adc repnz icebp sarb mov pop mov (bad) leave mov fcmovnb mov jbe add mov add lret repz adc movsl xor jbe and pop int scas adc xlat mov (bad) (bad) test mov add int3 mov lock mov mov xlat icebp mov add repnz xor dec out xor dec out xor dec out xor dec out xor dec out xor dec out xor dec out xor dec out xor dec out xor dec out xor dec out xor dec out xor dec out xor dec out xor dec out xor dec out xor dec out xor dec out xor dec out xor dec out xor dec out xor dec out xor dec out xor dec out xor dec out xor dec out xor dec out xor dec out xor dec sahf xchg mov fidivl js mov push out test roll mov sub push xlat test and ror mov (bad) leave mov sahf test adc (bad) mov rcl push hlt idivb pop lock sbb xchg jnp enter fdivr dec addl and ret sub int3 mov adc stc lea int mov sar cltd add xlat mov add int3 mov push scas sbb lret mov or scas scas lea iret leave hlt and ret lret push into fcoml jbe aaa xor pop xchg push icebp loopne sub (bad) clc jnp repnz sbb mov jbe xor mov jbe dec cmp pop pop fidivl movsl xor dec pop and sahf adc mov sub mov jbe dec cmp pop pop ficompl inc mov (bad) lret mov push (bad) movsl xor dec pop and adc leave mov (bad) and add call les mov add ficompl aad xchg dec mov pop sub shl ficompl mov push xor jbe dec xchg xchg popf mov aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push aam push inc sbb aad dec sub shrl xor jge data16 pop push mov mov xor add (bad) rcrl xchg inc xor and push (bad) sbb inc inc mov ret loopne cmc add test and fadd pop adc int3 out mov pop mov sub push xorl push daa (bad) mov leave mov test out push xchg fildl (bad) adc ds dec mov push icebp push arpl mov es rclb (bad) lret sub pusha sbb std cld jg lods xorl mov inc shlb (bad) mov dec clc mov gs fsubrl movsl jl (bad) (bad) ja mov pop pusha fildl pop pushf cmc add insb dec mov (bad) cmp cmp test cmp push jle pop inc (bad) shr jbe imul mov or jge sti add test adc in popf pop jecxz ss dec call adc push (bad) rorb roll roll or cmpsl aaa xchg test sub iret (bad) cwtl xchg outsl (bad) mov push cltd xchg push test xorl sbb repz lret xchg fs lret cmpsb adc stos xchg inc pushf in push sbbb and es or out pop cli loope mov insb addl push fcmovnbe das jge inc loope cs push mov jbe jno add dec jmp jecxz or orl fs mov (bad) je (bad) (bad) cli inc dec dec ss das stos pop dec jp test push ret into aaa xchg xor cmp pop mov sbb pop nop cmc pusha lcall sbb aad insb sbb loope mov push sbb pushf mov loop xor mov int mov mov add mov sarb pop lahf mov adc popf fs imulb mov xor and (bad) ljmp enter lcall push aaa jne out repnz xor mov test out mov hlt mov out fcmovnbe inc stc fidivr and leave push push xorb ljmp movsl pop test lret adc ficompl dec repz insb sti pop insl push xor xchg mov ja add adcb loopne adc add cli clc and add nop pop xor sub call outsl pop ret sub add sub dec pop mov out icebp ljmp enter stos ret sub jne (bad) or test lret loopne enter fistp sarb mov jnp lods mov cli loope xchg push test mov dec mov push xlat cli inc rclb mov cmp mov jge or (bad) xchg inc mov in xor add inc (bad) adcw sahf push daa stos dec cmpsl std xor enter fadd es insl mov cmpsl rol dec outsb and adc inc add (bad) sub mov xchg sub mov in mov xor dec in aad mov fst add inc enter add into dec sbb mov mov mov sbb lea and popa inc push mov xor cmp add xchg add inc insl mov insb sub dec lahf dec (bad) or daa xchg lret dec shlb and pop dec inc adc pop jb xchg aaa add mov xchg je imul mov add pop sahf fisttpll loope js sbb mov adc push (bad) mov xchg daa (bad) (bad) sbb mov mov push sbb mov dec cmp xchg sub fbld nop data16 pop into and push pop and arpl js dec shll mov pop push popf movsl mov add test mov (bad) xchg (bad) mov or jne in arpl repnz lea dec cs les cmp adc sbb jl repz pop out push mov aad icebp lret xor das push pop scas jl sbb lret repz xchg sbb push pop in jge out rcrb push (bad) xlat outsb and mov and cltd insb shrb xor test jnp int jb addb mov sbb lahf adc push adc (bad) addr16 (bad) addr16 rcrl push dec mov cwtd sub cs jne shrl std mov or cmp test out push leave xor jae push mov test inc jmp mov iret ds cwtl jns ljmp (bad) imul push push jp repnz lret push mov pop mov inc jg icebp (bad) mov mov ja adc les xchg dec test outsl dec call mov pop mov stos sbb fmull xchg rcl inc aam imul nop jnp enter add lea out mov push jp pushf cwtl cmp in jl adc mov and jno push sti lods outsb repnz xchg mov add and js lahf loop lea pusha loopne cli sbb mov popa je aaa out lcall mov xchg ss pop shrl std add in mov cmp out jb mov mov (bad) ret push cmpsb lds mov mov pop jecxz fmul pop negb imul into jp sahf pop lret push mov repnz inc jg icebp movl mov test les xchg nop test dec dec call mov shll pop sbb stos or fnop shlb aam xchg movb adc data16 push addr16 out lea mov (bad) jp jl adc in and jno mov lods mov sbb xchg mov add pop fistpll lahf loop lea pusha loopne cli sbb mov push je and lcall xchg sub bound cltd jne gs out add insl pop dec or cmp out jb mov fnsave fldenv xor jae jmp lds mov scas pop (bad) js addr16 push dec cmp bound scas pop dec jle lods xor pop jg jp movl push adc loop xlat jge call push mov and outsl int in dec pusha xchg insb out sti lods neg inc scas mov add out loope iret inc lret add out inc or xchg or incb mov add (bad) or lds mov (bad) jb sbb adc adc call lock sub xor sbb pop xlat hlt push lds add jg xor pop out rcrb aas lret mov ffree pusha outsb roll xchg popf lcall xchg test idivb push inc out jbe mov push mov add push test std loopne ja sbb in jbe (bad) mov and stos cmpsl mov mov (bad) xchg xchg add (bad) and fstpt mov sub in push icebp idivb dec fsubr dec xor enter aaa int loope add cmpsl andb adc cli ret xchg fistpl cmc jecxz push ficompl sub pop sub leave or jp xchg stc add (bad) or pop aad mov (bad) jb sbb dec out adc adc xor cmpsb sub lock xor sbb (bad) dec hlt sbb pop out jg lods shrl ror pushf fnstenv mov lcall inc test cmp push inc testb push stos push fsubrs push test std loopne ja ljmp mov or shlb stos mov jo mov mov (bad) xchg add (bad) and (bad) repz fistl add icebp addr16 neg jmp xor dec jne dec aaa int loope bound adc cli clc lahf rorl ret xchg push fiaddl sub sbb adc xchg (bad) mov or add sahf mov mov out jb mov mov sbb jne mov and cwtl mov add dec mov sub rcrb rolb push in dec pop js daa repnz gs xchg sub (bad) shrl jns imul lds pop push scas std push (bad) bound dec mov (bad) dec icebp jnp dec leave insb mov add ffree mov lock cmpxchg mov out test add jae outsl cmpsl mov out and pushf push mov adc sbb adc pusha jae icebp in cltd xchg bound cmpsl push inc xchg xor xor jl ret or lahf or cmp or imul sub (bad) and xlat cmp cmc xchg in loopne sub mov jne mov movsb insb dec push inc add jge and aad jae outsl and xor push jno mov in sub inc sub add cmp sarl or xor fnstsw xor rclb fiadd adc pop dec (bad) cmp popf pop test jp aas dec cwtl sub (bad) mov (bad) mov lods mov pop or (bad) (bad) ja jns xchg sbb xchg imul push sbbl gs daa mov push add add ljmp repz aam lret imul iret xchg pusha sbb cmp xlat xor sti out xor pop mov sar rcl push or icebp ret out or call inc nop sbb sbb pop mov pop mov push lea xchg or test add jle dec int3 dec cmc fwait mov adc xor sub sub outsb inc add cld (bad) int3 test or jmp dec shlb jle pop add or jp or fs dec adc mov dec sub cmp pop mov push imul dec push popa ds push (bad) aas mov jae (bad) jo cmp gs es popf adc sets mov test and cli jecxz jne sbb push (bad) xor sahf cmpsl movsb dec insl mov add mov scas fldcw nop add aad lret inc mov fs mov mov dec pusha inc ficom es scas xor jae jne or (bad) sbb hlt movsl test mov lock clc loop xlat jo xchg ficompl test pushf sbb repnz popf mov into les jb mov mov ds test cmpb ja xchg rorb mov push movsl sbb lahf cmpsb outsl in nop loop in add out add les es inc scas addr16 negb (bad) (bad) test ret aas in fmull mov arpl sub (bad) adc cld out icebp inc cmp fwait and and out test add mov lods fistpll inc sub adc cmp mov lea push and inc xchg fs inc xor aaa jg jmp rcr outsb std or xchg pop pop pop out movsb mov test sub loop mov (bad) jbe hlt dec pushf repnz out cmpsl les xchg jmp imul out shr cmp mov lret xlat je in test scas push xor dec push js cltd dec or mov xchg mov sahf xchg cmp sub es push jg jle cwtl mov adc mov xor cli sbb movsb in and mov sbb cmpsb ljmp cmpsl sbb or and lea add or ja ret shlb add adc mov dec loope cmc adcl xor pop (bad) mov test insb pop or imull sub (bad) jae sti fstpl mov int3 push inc test setne push sbb stos bound sbb icebp popa pop (bad) fwait mov jmp dec mov aam inc lret hlt pop insl xchg ss push fld stc mov std ja out gs movsl ljmp icebp cli (bad) pop cmp adc jae cmp arpl pusha mov ret push add jns dec and mov (bad) mov push lret dec mov cli mov int cmc push ret nop pop or ror movsb pop je xchg hlt jmp adc mov jmp mov add repnz push jecxz aaa aad lahf inc rclb test push addr16 in stc test sub sub fldenv jo push sti lods insl repnz xchg cld pop divl inc add and ja sahf loope rclb pusha loopne cli sbb mov movsb mov aad mov sub cltd int fs xor sub dec std add pop in mov cmp xor jecxz bound dec push or aas jmp mov mov pop loop fmul push neg mov ljmp dec push adc xchg mov ss lcall lock das (bad) sub negb push (bad) fcoms and cmp ret mov mov lahf sbb stos or fcomip scas fmul shll sbb jnp imul roll (bad) adc dec in lea stc cmp jp rcrb or mov lods repz xchg cld insl divl inc add pop and sahf loope rclb pusha loopne cli sbb fwait and fisub aad lret jle jmp je fs sub add insb pop dec or cmp xor jecxz out or bound mov movsl dec jmp or mov icebp mov pop loop fmul ds js ljmp lds jge popf dec adc lcall aad inc inc mov sbb mov push clc fcoms and cmp sub aas lock xchg adc or xor inc mov mov clc cmp test mov adcb mov cmc rorl dec movsl xor fsubrs mov mov mov test sahf fdiv inc (bad) movsb and lods mov into aas rorb ret jl js (bad) rorl add push fs loop out xchg or inc call or sub jbe jmp xor push adc mov adc push out xchg movsl lret push shrl mov xchg pop jmp (bad) jb mov xor mov (bad) scas and push adc cmpsb dec rcr cmp sbb sbb sub cld mov pop in dec inc xchg imul out into lods ret movl lds add lret daa or mov (bad) dec bnd dec xchg and (bad) fldl lret faddp pop pop jno into icebp movsl adc mov mov mov push fwait insb call sub sbb (bad) xor pop sahf rorb sbb adc popa je repnz lcall inc jecxz push mov xor mov clc cmp dec aam scas cmp and int push cld pop mov and xchg (bad) dec shrl mov jbe mov movsl insl dec sub inc add test es mov (bad) xchg xor or stos jae xchg out call push out enter cmc sbb jg fdivrs mov lcall fimul xor lahf int3 mov cmp pop (bad) inc repz mov push in push cmp sarb inc aas sbb push mov add sbb adc pusha lret pushf in or test pop out ss push dec adc mov adc adcl mov ss test adc into xchg xchg nop daa fdiv (bad) sbb push and sbb sbb icebp mov dec cmp xchg sub and shll cld pop int or xchg (bad) dec shll push movsl mov add lea add mov xchg jnp jno mov xor or jb mov push call cmc out adc fdivrs mov (bad) jns stos bsr mov xchg iret sub jecxz cmpl imul push cmp aas aad jmp mov sub sbb add cmpsl leave pushf in or jmp pop loop test dec out xor adcl mov ss ljmp nop daa (bad) (bad) xchg mov sbb push clc sbb mov dec cmp xchg stc sahf cmp and int or and xchg fcmovnbe movsb loope cs lret push movsl mov add lea inc test mov xchg jnp jno (bad) xor mov loopne mov sbb push call cmc out enter mov fcoms xchg lahf jl jno lock mov jge jae or lds jmp movsl dec (bad) fucomp and sub imul popl lods dec xor mov int3 out cmp xchg and ret xor adc inc pop push inc aaa cmp out loope sarl jne push cs pop mov repz lret xor mov ljmp xchg mov xor jb sarb pop icebp mov push lahf mov xchg ficompl jne pop xor iret out push pushf imul add dec and fsubrl ljmp push or jge sti push mov push adc scas xchg pushf out cwtl and lock adc xor inc std pop mov mov aaa inc test sbb inc adc mov cmp dec xchg push jle jae mov jecxz cmpsb or dec imul daa clc icebp into fstpt mov jnp lods adc dec xchg xchg mov cltd shl mov out test jb (bad) mov mov decb pushf sub popf orb les in mov into jo sbb inc dec adc adc out push inc xor movsb sub jl and pop push leave pop aad dec ret pop add sbb pop in rclb xchg sbb xor out in xchg jno mov xlat mov mulb outsl xchg cmp (bad) and (bad) invlpg repnz mov hlt std dec fnstsw jbe aas cmp loop add test ret pop or sub (bad) add jl push loopne jb push inc or sub jnp movsb inc dec or lahf das mov lea mov (bad) jae (bad) lds dec adc stos push inc xor jg addr16 xor pop int3 pop fdiv push or push dec push pop cltd orb fdivp fidivl inc adc add popa outsl rolb xchg sahf fwait inc fs cmp gs xchg idivl rcrb inc out ja mov add sub fsts pop add cmpsb daa fwait inc pop imul jge loopne stos out xor shrl fist stos test cs xchg inc dec mov popl lret fmull int3 cmp sarb xor les add lcall mov (bad) xor jns repnz loopne fadd int3 xlat mov test clc mov stos jmp mov std mov fistpll push push and push notl mov xor inc shlb push popa pop add pop (bad) jge out je (bad) push jle jp movb and adc loope (bad) jl mov sbb sub add or imul mov neg inc lods mov jg (bad) stos iret test add je mov clc cmp jbe,pn loop xor int insb mov jp dec add test mov mov inc pop std adc fadds pop push lods sti push les lods push loopne xor dec pushf inc int popf sbb adc sbb ret inc cmp push mov fcmovnu les (bad) or pop lds sar enter inc xor xchg push test insb xor es push mov cmpsl inc aas ljmp xchg js jmp xchg subl xchg mov xlat xchg mov xor and icebp jb mov dec sub cmp enter mov sbb in cmc mov push (bad) lock xchg sbb insb mov imul dec push mov mov repnz xchg and dec fadd xchg mov lret mov pop (bad) repz lahf pushf inc and xchg stc jle shll inc call jne push mov sub add jmp loopne movsb lods decb jp push out call notl popf jne in add sti fcomps ljmp fmull cmp push and inc xor xlat cmc add inc btc sub (bad) addr16 mov sbb push sarb pop pop iret push xchg cmpsl cmc (bad) mov inc addl inc jae,pn xchg test pop cld test inc pop sbb cwtl push push dec dec in mov ret push (bad) arpl mov scas pop and adc rcll leave inc inc jg outsl xchg adc imul mov xor dec sbbb out sub je mov and xchg mov add popa loop dec mov sub jl fs (bad) sbb js es sahf gs cmp or test xor ljmp push jle inc lcall adc xor jns int3 insb loope frstor ss data16 ja out mov mov inc pop out fisttpl mov and jb cmp push sarb push jge cmc pop mov popl inc jns hlt jae,pn xchg inc mov jp sbb push inc cmp add dec push das dec mov (bad) (bad) mov pop arpl and adc roll xlat les adc imul mov jmp cmp sbbb out sub pop fidivr and add in popa sti aaa dec add and jl nop in push sbb (bad) pop es gs cmp or test rcrl and xor push add sub or adc xor jns repnz loope frstor ss data16 ja push mov lods dec inc out out mov std pop fwait jl out and jne mov pop orps cmc pop iret pop xchg cmpsl bound add hlt xchg jns inc cs jp sbb push inc pop or cwtl dec push das dec in ret xchg cli (bad) mov pop arpl into shrb inc pushf adc rcll leave inc xchg jg lret xchg adc or adc push jmp cmp mov dec orb adc je adc mov mulb dec xchg mov add and mov push jl fs fdivrp push push out pop cmp sarb dec inc (bad) shr sub jge mov sti popa adc xor in push inc enter gs lods jns pop push push (bad) popf mov nop xchg pop add dec pop jmp mov iret fwait addr16 (bad) insb and mov mov xchg cltd popa cmp mov js lret sbb fidivrl xchg lock mov cmp das aam sti nop mov (bad) loopne andl ss add cmp xlat cwtl push inc jo jecxz and outsl sub leave or cmp ret imul or rclb in pop jne xchg cmc or rcl movsb push jecxz xor mov int js mov push shrb pop loopne pmulhuw cmp and xor adc pop and sbb jb cltd cmp sub cld (bad) hlt jno cmovno outsb repz js add and push mov push sbb popa inc push sti pushf addr16 movsl mov xlat test jg ljmp bound sub mov jno add ds add insb je add push add add add add and add add or test add add add adc add add add add into or add add add add add add add or add add addb adc or adc or adc or adc adc add adc adc push sbb add sbb add sbb sbb and and add and add and sub sub add sub xor add xor cmp add ss add cmp add cmp add das add xor inc cmp add xor inc cmp add xor inc cmp add sub inc cmp add and inc xor inc xor add adc dec cs dec sub push add add dec sub add add push sub add pop xor add add pop xor add push add add or pop cmp add or pusha cmp add push add adc arpl adc arpl adc arpl add add add push add pop add sbb inc sbb inc sbb gs sbb inc sbb inc push add add jnp pop inc add sub push inc add xor push inc xor push inc xor push inc xor add cmp push dec cmp push dec add add add inc add inc add inc add dec add dec add dec add push add push add add dec add inc add inc add (bad) incl jo xor add sub jno sub jb sub jae sub je sub jne sub add xor jp xor jp xor jnp add add cmp jle cmp jg cmp andb (bad) inc add push inc add insl dec add outsb dec add outsl push add jo add jb add jne add jns add jnp add jg add andl fwait andl test popf xchg sahf mov lahf mov mov mov mov nop jnp lahf nop jge mov xchg jl test xchg jg stos cwtl jg stos cwtl addb cltd addl mov test mov xchg add add mov mov mov mov mov mov mov mov mov lea mov mov mov nop add movsb xchg add movsb cltd add movsb lahf add movsl mov add test cmpsl add lods cmpsb add mov add scas pushf add mov add mov add mov add mov add mov add mov add mov add mov add mov mov add mov mov lret (bad) mov int3 ret mov add (bad) mov add leave les into lret into int3 lret int add iret into add rcl add rcl add aam add aad add xlat xlat add (bad) add fcmovnu add fstp add (bad) add (bad) add (bad) add loopne add loope add loop add jecxz add in add out add out add jmp ljmp in in add out out add out out add lock add icebp lock repnz add repnz repz repz add cmc testb idiv add clc stc add stc cli add sti sti add std std add std std add or or push add add or (bad) fldz out idivl movb adc adc prefetchw add push (bad) xchg (bad) loop loopne loop jmp hlt idiv std std std stos shlb (bad) pop push pop scas ret ror into rcl fsub loop out lock stc std std movsb cmpsl xchg nop mov mov enter enter xlat fsub loop out div std std std std lahf mov push push (bad) enter mov rcl (bad) loopne out out div idiv std std cltd cltd (bad) (bad) pop dec pop mov mov into rcl fsub call idiv std std std xchg xchg jbe dec xchg into mov mov mov (bad) xlat (bad) fsub loop out stc std std std std std std xchg mov mov mov mov mov enter mov rcl rcl rcl (bad) loop std std mov mov mov mov cmpsl cmpsl xchg mov rcl fstpl mov (bad) mov mov (bad) (bad) (bad) pop pop pop push adc push push scas rcl rcr (bad) adc xchg pop push push push push push push push push push push push sbb rol rcl fldl mov (bad) pusha pop pusha push push sbb sbb push pop pop mov cmpsl rol (bad) pop pop test mov imul scas mov std std std std std std std xchg mov adc inc mov int3 xlat fsub call stc stc div div out out stc nop mov (bad) fcoml jle mov call div out out out not mov rcl or outsb outsb outsb imul mov call movsb mov test jae js outsb js std std hlt out out out out call lahf lahf cmpsl cmpsl mov inc imul arpl and std imul jmp loop (bad) mov mov ds dec and and and and and fdivr call xchg mov pop or cmp inc sub sub and and jmp loopne xlat xchg cltd cmpsl pop or imul (bad) call outsb std loopne ffree jnp mov pop or jle enter call pop dec jbe shr fcoml mov jb xor cmp loop jmp sub outsb js (bad) fdivrl test lcall xor mov call mov fxch imul mov cmp outsb imul idivl imul jb jnp jle test jbe cmp sub imul jae jbe jnp test xor cmp cmp inc inc imul jbe jnp jle push push outsb je cmp cmp ds inc inc inc xchg jae jbe jnp dec push outsb je cmp cmp cmp je inc imul js dec push imul xor sub xor xor xor cmp inc inc inc imul test mov mov mov xchg cltd cltd lcall cltd lcall lahf lahf mov lahf pushf lcall cmpsl cmpsl stos mov add jnp add sub add adc add and add add or add add inc add add lcall mov xchg mov xchg stos xchg jnp mov xchg scas popf test mov mov mov mov mov popl mov mov inc add daa add pop xor add add (bad) gs add add pop xor add add adc push dec sbb je and mov and adc add or insb dec push add sbb push and add ljmp je and outsl dec push add push and xchg add jae add sub add cmp add sbb push daa add xchg jnp add (bad) incl dec sub add xor jno sbb into int add xor nop jbe add jno cmp daa add xor add add lods sahf xchg add (bad) incl hlt hlt testb jbe add dec push add jecxz add jbe add xchg mov jge cmp sub mov mov mov mov add (bad) add std incl out out icebp add or add in add (bad) lret jae add mov sarb add or pop adc dec xor add adc add add cmp add pop dec xor loop fild call jle add cwtl addb mov add cmp add push and andb xchg add and cwtl mov out out out add jmp add in in add cwtl jle mov mov sarb xor mov scas add adc xchg add mov testl lock out add lock lock aad add cwtl add iret leave add inc add mov push mov pushf add lret loopne aam in loope std cld incb mov mov add mov add andb mov mov jo push add sub xor and add and add inc cmp jae push add mov lods add fmul add inc jnp jg add mov add mov add (bad) jbe popf mov jg add add dec add cmp cmp xor jecxz ret add fcmovne add xor add dec xor cwtl nop mov (bad) sarb sarb add lds add fxch add in add in in ljmp add jnp add inc add push add mov mov lods add sarb fcmovnu fiaddl out out div testl cli sti sti add mov nop add jb pop push inc add movb rcl add mov leave add aad add loopne add ljmp stc cli stc add push add sbb add and sub add adc add add add daa and pop push push add lods lods add iret into add out add hlt hlt add rol loopne loop in out call in jno rcl rcl aad xlat fcomp fcmovu (bad) (bad) xor ret (bad) (bad) enter int3 int into iret (bad) mov mov mov mov (bad) xor stos stos lods lods scas scas mov mov xchg xchg xchg xchg cwtl cltd lcall mov mov xor xor nop xchg xchg xchg jns jnp jge jg addl insl outsb sub xor jae jne ja pop pop pop pop pusha popa bound fs dec dec dec dec push push push push push push push push pop pop pop pop cmp ds inc inc inc inc inc inc inc inc dec dec dec dec sub xor xor ss sub sbb and and es sub sub sub movups adc adc sbb sbb add add or or or add (bad) incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add incl add jmp add insb arpl jb jo jns xor push adc add or add add add add pop xchg dec add cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add inc add (bad) (bad) incl add add dec add add add dec add dec add dec add add add add add les inc add (bad) (bad) incl add add dec add add add dec add dec add dec add add add add add add add inc add (bad) (bad) incl add add dec add (bad) (bad) incl add add inc add and pop lds jo inc add lds jo inc add lds jo inc add and push jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor ret nop nop nop nop nop nop nop nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov xor lea mov mov mov call mov push push push call mov lea call push push call lea call push jmp testb je lea call lea call ret lea call ret mov mov pop pop mov pop mov pop ret nop nop nop nop nop nop nop push mov sub push mov push mov mov call push push push mov movl movl movl movl movl push call movl movl movl lea push push call mov lea call lea call movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl movl mov push call mov lea call lea push lea push push call add movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov movl mov mov movl lea lea call movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl cmpw je movl call movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl call mov movl lea lea call movl push call push push mov push mov push call mov mov movl call push lea push call mov mov mov mov push call lea call movl mov push mov push fldl call test je jmp movl cmpl jne push push call movl jmp movl mov mov push push call movl push push call fstpl movl movl movl movl movl lea push lea push push push push push push push call fstpl lea push lea push push call add movl movl movl or test je movl mov add jo mov movl movl movl lea push push push call mov lea call push push call neg sbb inc neg mov lea call lea call movswl test je jmp movl cmpl jle jmp jmp movl movl movl push push mov push lea push call add push lea push call mov lea call movswl test je jmp movl mov cltd and add sar mov movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov movl lea lea call movl push mov push call push push call push call mov call mov mov movl cmpl jne push push call movl jmp movl mov mov push lea push call movl push push lea push call push call add fwait push jmp lea push lea push push call add lea call lea push lea push push call add ret lea call lea call lea call lea call lea call ret mov mov pop pop pop mov pop ret call int3 int3 int3 int3 sahf sahf sahf sahf cld mov (bad) (bad) (bad) (bad) (bad) incl or add add inc add adcb or sbb or sub or dec mov or push mov or lcall add mov or call mov or push mov or cmp or or add inc mov or push mov or mov add add cmpb add mov or or add sub or ds add pop mov or jle or nop mov or mov or (bad) mov or lods add andb out or idivb or sbb or inc mov or pusha mov or jbe or cmpb add add add push inc push dec xor inc dec dec add push add dec arpl add mov pop popa fs data16 popa outsb add js pop pop jbe popa push popa jb outsl jbe add mov pop pop jbe popa inc jb gs popa jb add pop pop jbe popa push je push popa jb outsl jbe add bound outsb add mov pop pop jbe popa inc jb gs popa jb imul pop popa fs imul xor mov pop popa fs data16 gs xor sub bound gs jns je insl inc jb outsl jb rolb pop jbe popa dec jb jae insb je push bound add push imul xor add pop pop jbe popa dec outsb inc jb outsl jb add pop pop jbe popa inc jns fs incl pop pop jbe popa dec bound gs cmpsl add fs imul imul pop jbe popa dec bound gs fs data16 pop imul xor imul dec jae outsb add outsl add jbe popa inc push add add inc dec push pop push dec dec dec pop inc fs data16 pop pop jbe popa inc jns xor xor pop pop jbe popa push je inc insl jo jns pop pop jbe popa inc jns xor add pop pop jbe popa dec bound popa jb or inc insb insb inc jne arpl outsb inc popa insb insb add push data16 je outsb add dec push pop push dec dec dec pop push gs gs jae add push add dec jae jb add inc push inc dec push pop push dec dec dec pop push jne jb dec outsb je jb popa arpl cmpsb add jbe popa inc jo insl jo jns add bound js gs dec popa outsb fs gs add push data16 gs add scas add fs imul ss add bound push inc js gs imul pop inc dec insb outsl add lea pop pop jbe popa inc jb outsl jb jbe jb insb outsl ja add add jbe popa dec gs add push imul xor add push imul xor imul jbe popa push je inc outsl jo add mov pop pop jbe popa inc jb gs je dec imul pop popa fs imul xor add stos add fs imul cwtl add jbe popa push popa jb jae dec gs add jbe popa dec outsb push je inc add add jbe popa dec popa je dec gs inc popa insb insb add fild pop pop jbe popa dec popa je dec gs inc popa insb insb dec add jg pop pop jbe popa push popa jb gs bound fs data16 push add dec popa je outsb add add jbe popa push je dec outsl jbe add lret pop jbe popa dec xor jns mov pop popa insb insb insl jne add pop inc dec je outsb add push add dec gs add scas add jbe popa inc jb gs je add lods add jbe popa inc jb gs bound add 