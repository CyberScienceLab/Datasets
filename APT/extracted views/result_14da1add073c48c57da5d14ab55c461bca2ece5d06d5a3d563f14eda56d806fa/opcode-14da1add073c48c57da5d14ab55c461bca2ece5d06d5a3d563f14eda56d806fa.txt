dec cs or aam stos inc pop mov mov jo addr16 movsb cmp pusha mov fwait addr16 (bad) in xchg dec in icebp adcl jecxz cld xchg leave jl in stc fnsave (bad) and mov sbb adc adc rclb ljmp movsl outsl mov add dec lods mov sub cld mov rcll imul cmc bound cmp mov nop dec scas xchg loop addl push sbb inc sbb mov push lods cmp lahf sub cwtl sbb xor xlat clc adcb xchg popf lock mov fcomi xchg add pop fxch les fcoms pop jg mov xchg test pusha test out inc movb pop cld lret aad pop test mov test add add inc addr16 pushl popl pushl mov pushl ret rep push push mov pushf lea jmp mov push inc ror cmp xlat inc mov enter add js outsl pop mov xchg jne loope xlat sbb nop daa lret dec add ret clc cmp jb mov mov or mov xchg pop test jmp adcl fcoml jae,pn dec movsb mov lret gs hlt push add popa adc paddusb popf adc ljmp cmp insl hlt cmp addr16 sub pop gs (bad) lods ret add or lds rcrl add sbbl xor sti into mov out or adc cmpsl sbb push or mov pusha mov mov lea call jmp shl pushl lods jmp mov push inc (bad) cmp lcall ret (bad) fwait mov sbb mov sub fwait in les inc (bad) dec aad cld xor xor dec sub inc add or xor lock cmpsb xchg rcrb int jb ret push adc push cmc (bad) add pop sub dec jmp ds mov dec fbld sub int sub xchg test pop fwait add push lret (bad) shrb outsb imulb pop stc adc jnp aad das pop mov mov adc fistl add inc cmp es inc popf imul adc adc les in and lret dec popa loop dec outsb (bad) ja mov sub imul xchg aad lea bound add push sub xor add sub mov xchg dec jnp (bad) clc fist adc adc shr int cli xchg and sbb sbb lret xlat or add fs aad mov and jle inc call in fisubl jmp push inc lds (bad) out lret lods enter mov jns sub popf ret push mov push pop mov fistpll hlt sti fdivs sti shr push lret jne cmp mov daa cwtl maskmovq negl sbb outsb test jmp in dec mov mov aad xor insl (bad) mov daa cmp mov push iret cmp mov mov popl sub mov cli or and rcrb cmp lahf idiv xor xor ret in aaa movsl adc cvttps2pi cmp (bad) cmp xor fiaddl scas adc stos (bad) cmp mov test cld arpl je mov sbb std fcoms cmp push mov pushl lea call pushf adc pusha pushf lea jae pushf pushf pusha lea jne pusha jmp call or fiadd and inc (bad) iret sub pop jle xor cmp xchg xchg repnz mov insl xor pushf int mov in ds add adc lods imul imul pusha ja add fisubrl push push inc pop fs pop sub and loopne rclb adc mov push clc (bad) outsb leave lds out dec xchg aam adc xor fs fidivl ss mov std dec enter (bad) popf hlt push sbb push inc mov xchg pop shrb pushf mov jno push mov cmp outsb aam cltd sahf in mov (bad) cli out xchg jg adc jecxz in xchg mov jmp mov pop lods mov mov pop push jo and loop fs jbe bts sub pushf btr mov sub rol mov bsr mov add cmc add and rcl rcl shr shr data16 (bad) bswap cmp sub mov bts sar not cmp add pushf mov lea push pushf pushf mov pusha push lods pushf cmp xor clc neg test cmc pushf xor jmp jp jl and inc test mov lock and ret (bad) lcall jecxz xorb mov in or or insl insb imul imul push add mov sbb mov aam jnp jp (bad) (bad) mov das pop test mov mov scas in sbb adc sti xchg xor repz cli dec adc test and loope hlt dec or ja push in cwtl je loope mov xchg mov test push cmc inc pop les loopne,pn sar ljmp push dec push add and pusha push mov in jmp and jl pusha lea jmp sub neg add neg mov neg inc rcl mov pusha repnz mov push lea jne pushf pushl seto pusha movb movsbw movsbl pushf mov movb mov lea lea pushf push movl push mov call adc push lea jmp lea jne push push call lea jae push movb lea jne pushf stos pusha pushf pushf pushf lea jmp sbb push and inc cmp (bad) cmp mov adc mov imul or sub mov fidivr enter lds sahf mov and adc sbb lock xchg cmp inc cli jp aas es add add mov xchg (bad) adc lods cli push sub inc sub cwtl daa adc sub lahf aam pop xchg rorb jno xchg ret push dec add lahf pop in (bad) adc stos movsb pusha repnz (bad) repz adc cmp adc dec pop and mov (bad) in popa movsl fsubrs sbb or dec push and in lock mov addr16 pop insb pop adc mov stos pop notl ret xchg dec mov fwait nop xchg aas loope data16 addr16 cmp les mov icebp arpl lea lret mov scas imul push mov aas (bad) shr or add sub xor inc cmp pop jo (bad) ss dec add cmpsb dec pop jmp push jns mov js sub mov popa inc xor stos enter push push xorl push test or push xchg mov pop (bad) pop adc or arpl and or fcoml mov mov sbb fnstsw inc in fnop icebp cmc mov int3 jno loopne mov inc inc out in inc hlt lods dec mov test je jmp cmp fdiv rcl call cmpsl jmp inc sbb mov arpl mov shll out pop notl cmc mull divl lds iret mov mov and repnz jecxz sub sub adc jnp out inc push xchg pop in xor and xchg xor cmpsl lock inc jae cld dec mov iret xchg cmp pop pusha pop pop out div xor sub mov fdivrl repz jecxz js jne test data16 lret ljmp and fnstsw lds mov ljmp jmp cmp xor sub out repz mov div jmp cmpsl mov inc loop pusha (bad) mov sub pushl or nop popf push call mov cmpsl icebp jno sbb dec push mov test aas test jb in ret or dec push mov ds pusha popf mov pop test out mov push push mov cmc (bad) jbe cmp into sti add mov lret cmpsl push ror push lcall test inc jmp jge scas adc popa jge call (bad) mov mov push jl cmpsb xchg lahf bound jns lock push and ret std in cmpsl xchg lods fcomi rcr and cli mov or test push push test dec push loope imul sub ja and sub sar rorl cmp fidivl xor or addl out fiadd sbb scas lret mov xor test (bad) and or lahf in mov mov cmc pop lods or sbb repnz mov jno shr jg add inc and mov push lea jmp or call mov call cmc jmp pusha call pusha call mov not call call pusha lea je bswap push call sub pushl lea jl call push movw lea je jae mov inc mov call lods mov cmp push inc sbb out mov pop js push and cld push imul pop mov (bad) xor cmpsb xchg aaa mov push xor inc mov jge std lret insb fwait mov vmwrite test cmp mov cwtl lea pop ror push and jno xor xchg and xchg pop sub loopne pop sub popa leave push aam call cmp (bad) or sbb jp and std arpl xor cmc rorl mov into gs pop ja test add jns mov adc js aad insl mov sbb mov mov adc sub movsb fdivrs add pop add inc pushf outsb out fs jle dec pushf call push test call jmp add inc gs outsl fs gs popa outsb fs gs add stc inc daa pusha lea jae push lea jne call lea ja inc not inc call not push jmp pushf lea jb stc pusha cmp call push push enter inc xor xlat cmpsb mov push addr16 and rorb mov xchg arpl inc rcl loop add push sub lcall sub add sar out sbb insb arpl mov ret vmwrite mov loopne outsb ja pop xor pushf sub jnp and flds ss add or das mov insb std loopne xchg and nop scas push jecxz daa pop dec cmp fistpl xchg ret arpl fsubs fisubr push (bad) dec mov jl sub inc sbb jmp push mov pushf pushf pushl lea jmp movsbw lea push jmp lea jne push ror call mov mov call sub test mov in sbb test scas mov push lea cmc in in pop in pop in mov sbbl or aad cltd sbb jp mov push mov outsl mov or sbb popa jge dec outsl outsb push sbb icebp arpl out pop dec jmp xor (bad) shlb cli push add shrb add xchg dec ja dec orb push jle or and popl adc rorb outsl cwtl or and xchg out xchg mov in adc es and mov mov inc popf out (bad) mov adc test inc pushf push or into aad stos cs pop or mov sar das push cmp and inc xlat pop out cwtl fistp sahf dec call sahf iret jne pop imul push leave sub xor sahf jnp pusha ds xor xchg aad stos jbe add jb xchg ret sbb xchg dec ret adc pop ljmp mul nop std push shlb nop jb or sub inc insl cltd xchg lods push adc push jb outsb in adc lods xor lcall stos and loope jns mov cmp dec mov adcb jae aas cmp int3 repz enter pushf or jp out scas or leave push dec cwtl cmp mov mov test std loop xor dec outsl mov dec inc ja add ja lods xlat (bad) cmpsl in add js push pushf pusha mov call push xchg lea setnp movsbw pusha movl movzbl cwtl jmp adc lds xor inc ds call jp sbb or push mov xor std (bad) mov fisubr mov jle lahf mov xchg cmp call cwtl mov fwait popf fadd inc bound push repnz mov mov decb subl push xor dec lock test dec cmp and (bad) fdivs mov imul ss adc cmp leave and mov mov jno push add sbb add xor rol or mov pop cmpsl arpl adc xchg xchg pushf jmp setl not dec inc pusha call inc rcl xor xchg call stc cmp pusha pushf lea ja setns dec seta jmp bt cmp cmp xchg bswap mov pusha pushf pushf sub movb lea jo push rep call pop jb inc xor cmp jb pop stc repnz mov dec dec push (bad) mov mov call pop inc mov pop jae inc mov scas sbbl stos mov sbb push in fldl mov push fisubrl sub jo sub test push leave mov mov push mov push inc jl es scas in inc test sbb inc nop mull jmp sub mov adc repnz push jnp and jg (bad) or mov lock mov or dec mov jae pop xchg gs cmp in outsl dec js pop jbe pop jb aaa mov popa push xchg (bad) mov mov pusha dec pop ror mov mov sbb iret lahf pop imul and push mov jp (bad) std push dec (bad) xor int push dec xchg push inc scas fistpl mov out into (bad) adc or add fs lds jle imul pop fist wrmsr xchg js or je pop inc xchg pop xchg xor jae mov pop xor (bad) int and sub pop outsl aad inc scas aam (bad) loopne (bad) insb jnp mov pop sti cmp fidivr daa (bad) (bad) or push aaa imul xlat sub mov adc jno mov lea cmpsb push aam push mov sbb js pop not pushf jmp push mov movb mov push pusha lea jmp mov pushf mov push pusha pushl ret stos not pushf mov jmp aaa adc aaa push inc mov dec pop pop fwait mov inc arpl rorl adc sub cltd push ja xchg icebp jo aaa dec push adc push dec cmp adc xlat enter xchg push loop and mov xchg sbb sbb xchg sub mov mov pusha sub dec movsbw inc daa push neg push movsbl push aad bts sub not lea pusha mov pusha call pushl popl stc stc cmp call mov movsbl mov mov push lea jmp pushf dec pushf not pushf movl pusha dec bt rol call jmp push lea jae call pusha jmp cmp sbb xor inc xor int3 (bad) lret stos addr16 mov mov fwait mov mov test call adc subl mov js and jmp inc or cmp fbld add sub xor sbb leave push pop sub dec xor adc jns or mov mov xchg push xacquire dec dec test jp jns and dec iret sbb lock dec mov push jae xor dec xchg xor inc mov jp bound pop jge pop imul js and xchg push insl enter call push jge xchg jge int3 loope cmp sub mov mov faddl jo mov and jno mov mov (bad) rcrb or mov insb jae insb jg mov inc jecxz sbb push push int3 and bound out sub and add stc in xor scas xchg ror inc xlat pop (bad) je aam inc or adc xchg in out popa clc sub push es rcrb add cmpsb xchg mov pop jbe in push push add aaa insb mov push sti mov cmpsb add scas mov out out mov mov (bad) fsubl sarl xor adc jae je (bad) adc push ficoml jns pop (bad) fwait sub shrb pop mov mov inc dec push popf cmp xor xchg stos shl rol ds in bound sub push xlat sti dec dec insl adc inc cmp cmp lcall jne das fldt movsb es loop sbb aad fsubs call mov iret mov negl scas imul xchg adc xchg icebp fsub gs sub fstl mov nop add lds js pop jnp daa ja sbb mov fdivrl mov sub dec jge or iret lods pop push clc into shrb sub call repz add rcrl cmc xchg push dec popf das cmpsb mov mov xchg insl xor mov sub mov jns and fs xorl lcall sbb pusha inc gs and xor dec pop and mov jl push push shrl adc test mov bound cmpsl lods push cld mov mov (bad) flds or notl xor dec insl scas (bad) pop mov fistl iret sub or mov xchg jecxz mov and xor ljmp mov sub (bad) lods outsl push js add cmp cmp ds or in xchg sub cmp stc inc mov adc fwait mov inc sbb cmp and test or or and js pusha lea jb pushf mov stc cmp cmp pushf push lea jae add mov bsf movsbl mov sar pusha not shld mov lea pushf pusha call outsl (bad) push add add add add add add add add or add sub or add jge add push add add add sbb pushf out lcall mov imul adc pop push ret xor ds sbb pop fildl adc cmp xchg loope cmc clc inc jle leave or outsb ja jecxz inc (bad) insb stc sbb cwtl iret mov int sub or sbb int cmp adc and add xor jb mov pusha popf in adc dec imull rclb add call (bad) aas (bad) out sub rolb and sub mov dec (bad) les in in or xchg dec neg and (bad) adc cmp xchg lcall pop dec pushf sub push dec sarl or cltd imul js mov xchg incb dec leave (bad) int mov dec out fadds sub icebp ss inc sbb jb mov cld test cmp sbbl arpl sbb cmp inc scas loopne pop jbe test mov ret cmp (bad) mov arpl or clc sbb fs (bad) xchg ja pop pushf les sarb sarb cmp dec in mov jmp inc sbb push nop aam ds lcall lock jnp test in push xchg dec sbb cli out and and mov gs cs cmp dec mov dec or jne lods sbb stos sbb xchg cmp hlt imul mov and adc xor mov out mov or xor cli daa push int3 pushf cmp dec cmpsb stos xchg push pop xlat ss (bad) out daa mov cmp push out imul das addl clc fisubr int3 lea mov push cltd add or pop je and js add mov ss inc pop xchg pop rcr xor (bad) jb jle lods sub add push or les lods sbb cld add jnp ret pop sbb out imul int sbb lds xchg test test add pop pop test xlat mov addr16 imul xchg test mov and mov (bad) xchg negl xchg mov mov sbb or mov mov add add mov loop loopne add xor pop gs sub (bad) push (bad) adc hlt shll or push leave mov ds jb shrb ret xchg dec out (bad) mov jle dec pop sbb in pop repnz aad jo inc xor push std cmp je xchg cmp out add adc out pop xchg mov pop aad clc ja push repz mov xchg mov push dec faddp (bad) pop cs lret dec rorl inc loopne pop xchg data16 or mov loopne (bad) repz insb clc and add adc jmp sahf loopne inc cmp cmp mov push out mov or ss (bad) mov ja lret repz xchg sbb dec in lret aam push sbb add sbb add daa es into fimull scas pop popa icebp or imul cmpsl sub mov xor dec sbb sub jno mov cmp cmp pushf mov mov in mov loopne dec cmp iret pop pusha push ljmp adc push insb stos push jne lds xor iret xchg inc jb mov dec sub insl call inc (bad) js into pop into (bad) and mov popf sub xchg adc out pusha jl push push fist idivb jo in xor ret daa pushf arpl jo fbstp push insb jne pushf mov cmpsl mov mov lcall xor roll pushf stc sbb inc out scas inc les and out jle scas push test jmp xchg jg sti loopne iret out das sbb sub inc clc fldl scas jl pop mov fsubrs mov and xor ret sub jmp (bad) scas cmpsl pop xor ret das out jecxz jbe mov xor or popf stos fs push mov shr xor js subl int int3 test push pushf loope xchg add faddl fwait xchg fbstp nop inc aas lods xor cwtl inc je sub cmpsb test aam cmc add ljmp sub lods push in sbb addr16 jge add inc mov ret adc add stc mov sbb cmp add imulb imul xor (bad) pop and push test cmp pop mov and rorl push insl pop sub inc jg das jne mov xlat clc dec dec inc jns divb push cmc sbb out mov clc cmpsl sub movsl cld dec jecxz mov popw sahf mov imul (bad) mov pushl lret inc sub enter lret xor cmp lcall enter out mov fs sub in inc rcrb fcmovnu js xor xchg xchg imull inc (bad) data16 enter cld hlt pushf xor sub cmp inc mov aad movsl cmpb mov xor subl cmp or mov jnp sub inc push adcl jb mov stos ss dec arpl dec jl,pt ret xor add into jae cmp test add or jnp std sub sbb insl push jb mov xlat out popf mov jge or or mov orl pop rolb iret pop out mov sbb cli mov lods mov lock mov loop inc add add test pop push push push xor (bad) out push das aas push ljmp xor add (bad) nop and or sub fcom std push adc xor inc loopne call cmp sarb cli jne shlb in cmp adc mov icebp (bad) icebp icebp int test (bad) iret mov push pop std or in pop (bad) xor out mov inc int jo mov lods aaa fcomp sub sar or fcompl cmp (bad) jle fwait adc call inc cltd and imulb sbb out fdiv mov sahf xchg dec fs scas pop aad aas dec mov mov sti push or xor fwait or mov mov jbe (bad) rcrl test cmp mov repz lcall cmp push inc stos sahf stc push push adc rolb inc or adc lods push pusha dec pop push mov add fbld rorb hlt js dec pop pop (bad) in mov fldenv jnp xchg outsl js stos imul xchg test rorb enter (bad) lret out mov xor xchg test repnz xchg push cs leave inc pop int3 lret pop push mov xchg mov jg sahf sub das mov (bad) push lret aas adc jl sbb mov out mov adc daa (bad) js and xchg adc and mov lret jo xchg inc jg cwtl inc imul test jp iret push imul xchg pop inc es dec xchg sbb jp cs das adc movsl ret add or les outsb mov movsl outsl push leave xchg lret adc movsb ja jmp adc mov movsb dec iret mov sbb sbb mov or and loop pop icebp daa mov enter fnstenv sti mov mov add hlt fnstcw inc mov push jecxz mov jnp mov fstps fsubrs push cmp std mov js inc xlat aad arpl xchg loopne inc add add inc hlt dec or push lods ljmp pop push lret and popf dec dec inc mov or jno inc loopne cli push jns sahf lea scas clc lds push out xchg lods test cmp mov pop and add pop jecxz mov inc jbe xlat in lret sbb sub xchg inc aad punpckldq test xchg inc lock push pop adc inc mov iret (bad) cmp (bad) and mov push stos inc sub aaa jp insb push ds fcoms sahf jl cmp mov push or jno add wbinvd jnp data16 cwtl das rep lret push into cld add or outsb shr jg inc push adc cmp add pop push or lods cmp add mov and sbb lds xchg dec mov pop pusha lea add sub xor je xor rorb call popf add stos pop dec stos add sbb call sahf movsl push jp ljmp cmpsl enter out rcrl movsl lods mov je pop test or cmp (bad) imul test shr jae pop mov push rorb (bad) mov in xor stos dec mov fs adc (bad) sarl in imul fdivs mov mov pusha cmp dec leave (bad) ljmp in lock icebp pop jge cld adc xor pop jg mov ret cmpl sub and icebp insl pop jae inc dec mov jns out js dec cmp or out or xlat and pop clc imul add mov add push or add adc xchg or xor mov jmp test push loopne jbe xchg mov stos push cmpsl stc shlb jbe shll out push scas insb pusha jmp xor xor add mov push imul mov jge inc jle rcrl inc push adc lods pop or imul push xchg int3 cmpsl mov mov loope rcrl (bad) pushf js out push inc cmp and les fildll insb mov jo xor push mov scas std mov aaa push inc jae fldenv mov outsb or jg and add hlt popa insl xor sbb xchg adc lods mov aad (bad) shr inc and subl sbb pop cltd inc pop lahf inc mov push cmp mov xor stos lods (bad) xchg dec inc adc (bad) ds cmpsb mov dec xchg pop pushf xor aas lcall bound mov in dec sub hlt imul push mov add xchg gs sbb cmp pop sbb insl push or mov and mov jne xchg push scas aad stos fsubrs or addr16 out clc mov dec cwtl pusha sub imul pop ss add std sbb mov pop push push shll jb in pop arpl and div dec add push lea lds or repnz adc arpl sbb pop push lcall push out incl inc aam mov cmp jg fidivr inc mov mov loop pusha aas push cwtl pop cli or lock add push sahf mov loop push or jg ss fildl lret xchg fisubl mov jp fs jecxz inc ret adc mov mov and xchg mov mov into jge pop ds mov dec cltd pop jp cmp decb or pop jbe cwtl mov sub jp jne js jae mov fldt dec mov pop dec mov xchg add (bad) insl push jmp pop xchg jl pop jmp push jp sub inc rolb xchg xchg hlt lds xor adc nop outsb out iret int popf (bad) dec lahf cmp xchg pop cmp fcomps mov push pop cmpsl icebp popa xor jmp inc in add aas lods addr16 inc add push xchg push mov sahf jo xchg cmpsb mov mov out pop dec ret cmp jmp je push sub adc inc je outsl mov and sti xor cli in mov pop (bad) iret in sbb push (bad) rorb fwait std fwait imul sbb nopl out mov sbb add mov jne ja (bad) jp push pop stos push or sbb dec lock lret mov dec push xchg jg (bad) les jnp (bad) lock inc mov jmp push int fcomip (bad) add inc push (bad) int3 bound mov clc test imul and sti mov or inc adc (bad) aad fimul in cmpsb jnp gs popa mov (bad) dec stc xchg and add lea jne bsf mov test cmp cmp call mov pushf movw call (bad) xor pop push inc jo push nop mov (bad) xchg into or mov inc test adc or in daa sub out call inc add fdivl in scas fdiv out pushf lods aam pop mov repnz adc mov mov adc sbb mov push cmp nop ja enter mov pop ja jge fs cmp jp jp adc int3 pop rorb lds imul shr sub pushl aaa idiv push sbb fstps cmp stos xchg mov sbb ja iret jp gs cmp push or mov and add xor cli bound test or and mov pop push inc adc shr mov mov leave mov cmp leave rcll xchg sti clc gs mov insb repz dec fcoms inc add xlat idiv adc scas fimull jp ds or leave add xchg shlb or rolb mov sub (bad) and sub mov or dec test sbb je insl push js movsl mov cmp push push lea pop repz aas xchg mov inc xlat pop sub jmp leave je add out dec mov mov push or cmp or and pop push inc cld mov or xchg ret rolb xchg lret loop mov lods jmp rclb fwait les inc sub jecxz add repz mov ja and scas insb test dec test (bad) jle xor pop cltd adc leave push fstl jnp sbb push cltd cmpsb int sbb pop rcr jecxz stos jae iret cmp loop adc movsl out pop sub push xor mov adc add pushf push ljmp mov adc xor movsb test dec mov mov mov pop xor cmpsb cmp mov pusha lea je call push cmp jmp jmp add add insb xchg jo or addb in pop mov sbbl into or add cmp cmp cmp add cmp or daa repnz rorb jle adc cmc out push add bound (bad) sarl inc cmp addl inc loop fimull lods fbstp cs xor out mov js nop cwtl add adcl add sbb enter and fsub mov call xor inc cmp mov xchg add sbb sbb and test sub sub xor mov cmp cmp inc ret inc les dec leave dec lret dec int3 add rcll push rcll push pop fstps pop fildl pop fcompl loope loop add fs imul jmp in insl lock add jae je jne add jp jnp jl sub mov (bad) insl xchg insb jb cs inc (bad) subl inc nop mov inc jmp or mov or push insl add test mov call lock clc in and xor scas mov frstor in push push inc imul push jo jo adcb clc mov outsb (bad) fstpl addl mov rol lcall repnz into orl and add or push aas cld aam scas pusha cmp cwtl lret add out mov add cltd dec mov int pusha lret fistpl adc or incb imul je cmp pop fs rol sahf (bad) out jo das add data16 pop fnstcw add mov pop inc push out call mov push mov mov ja add jl loopne out aad sbb ljmp dec sbb add aaa out cmp add xchg je fbstp push ljmp xor hlt orl sub xchg pushf xor hlt mov add fidivr pop xchg push mov add fwait sarl orl mov mov dec and push dec jo or cmp cmp mov add int3 add rolb dec in (bad) cmp js xor jmp or insb or xchg addb (bad) popa pop xor add stc hlt and or mov xchg jp mov fnclex aas pop mov and lret lds incl adc addr16 push or subb jge dec xorl in xchg dec (bad) test mov lds loopne in add arpl sti add movsl repnz (bad) stos sbb mov xor std movsb mov push adc mov inc addb sub fs out iret add outsl xchg popa add inc and idivb stos aam inc and jbe sarl imul jmp adc test mov jno add inc jmp fsubrl mov push jp movsl add (bad) fdivrs add ret cmp in insb jns add push pusha rol xorl (bad) flds inc insb jl sarl lahf add or mov add pusha add outsl xor test hlt add mov movsb add and or aam jge sub mov and inc cmpl add xchg cli (bad) fcompl and (bad) ljmp fmull dec daa add fld add sub cmp xor xchg inc xchg subl (bad) jno mov xor mov ds lods or rcll sub gs and xor je cwtl test jp add cmp das cltd in addl fdivrs (bad) hlt add sbb call popf lea push pop adc jg add lods mov and pop pusha sbb popa sub pop sahf add sbb push add shll out add lahf (bad) push ficomp add mov add jmp aas in xor and mov xchg pop mov faddl xor push xor add fldl add push daa ffreep out pusha adc aam add shrl ds and push add data16 push fsubr or push cmp add loop jo and xchg add pop cmpsl mov push mov inc in out lods sarl flds fisubl mov add in adcl fadds sbb push outsb mov push lea ret mov (bad) mov popa push jne add gs cmp adc roll push loop fsubs stos decb and in xchg jge mov (bad) test (bad) xlat cmpsb fistpll int pop mov mov sub dec adc and add pushf sbb adc stos enter or push jle int or mov test pusha lret mov inc fidivrl inc cmp shrl push sub mov orb int data16 xor mov popf adc invd jg (bad) rorb inc pushf mov xchg fistl scas mov add mov inc mov add scas int3 or add or pop in adc mov mov add xchg in mov out ds add (bad) jae push movsl jp sbb pop scas cmp jmp adc sbb pusha in fldl rorl ss leave fildll add negl inc add jne arpl inc out or loopne mov shrl (bad) add pushf mov addl out cmp imul addr16 add stos or (bad) out add inc mov test pop in loop push pop push js jnp jo add fnsave pushf jp inc lcall add cmpsl jg adc aaa sbb push xchg data16 hlt add pushf mov ja mov push pop bsr test add or daa cmp or cs nop inc (bad) aas es (bad) add sub mov in add rol mov fcoms clc mov scas test stos or cmp xchg dec cmp mov clc jnp lods jp mov or lds cli bnd mov cs sub add lret data16 (bad) push add push ret dec js lds out adcl add mov push cwtl pop mov or jle fsubrl frstor push inc push inc mov add outsb add jle xor push sub xchg xor xorb cmc inc pop mov imul and or or movsl cmp in stos jo fcoms add sub aaa testl fistpl or jb add (bad) push xchg ret push inc adc add sub add mov ljmp xor pop dec js neg mov inc imul adc pop divps pop xor xor idivb das adc aas add inc jbe mov xchg sbb push or ss nop add or cli push lods push cmpsb pusha lret fs cmpl (bad) sti (bad) and lock mov add (bad) cmp dec callw sar lahf cmp std jne daa jo cmp xchg lods sbb adc popa lea add xchg stc xor sbb int3 mov test jle (bad) ss xor xchg cmp xchg iret xor mov mov lods (bad) popa repz mov call push add adc mov cmp lahf push fidivr scas lods jns mov test sbb cmpsb sbb cmp and outsl clc nop push test add add lods jne pop adc mov inc loope and sahf stc movsb add adc out push pop jae add inc lock call bound dec loope repnz pop add mov xor add adc ret mov cmpsb into mov mov add fnstenv sub and loope fdivs pop pop popf nop xor pop lea jo xchg mov mov lcall sub pop loopne xor imul in insl cmp fdivp fnstsw adc fmuls es (bad) js mov jmp pusha insl pop ja add jae pop dec mov pop mov mov mov pop push adc add xchg mov ror pop mov aaa xchg add sub sbbb mov xor out out mov mov mov dec cmp add daa test push rolb aaa pop mov loop lock jle les push in mov xchg stc add in mov push xlat rolb cmp or inc sub jb mov push outsl inc add int aam imul ljmp movsl add push jbe cmp hlt and movsb xchg sub push xor dec dec ret jno (bad) clc jae pusha movsl mov pop xchg add and sub pop and cmp adc inc (bad) jns lret xchg push sbb push cmp push mulb (bad) mov xlat xchg pop jae popf stc xchg orl pop aas movsl pop orl aad push xor int3 add cmp pusha andl je mov or push movsl dec lea adcl ss andl lcall repnz push xchg jg lods pop jp loop adc add inc fsubl dec data16 xor jnp add and sahf cmc dec rolb (bad) shr adc add mov or cmp add sub (bad) adcb sbb jo push pop stos sub mov add pop cwtl out mov addl mov and add aas jmp or lret jb pop or pop test outsb imul push inc add sbb das add mov xor andl add pop xor push sbb mov sub int push mov add (bad) jb popf loopne iret add jle mov and sbbl cs call fnstcw mov add aas pop mov ret pop jmp inc push mov push call xor pushf push lret jno add xor (bad) imull jl ljmp mov xorl dec je cmp mov icebp add out xchg (bad) loopne femms mov and mov jle add dec mov lods jl add cltd pusha jle testb hlt push negl repnz out data16 jae xor (bad) xor sub aas push and rclb in inc xchg clc mov ja add stc js push xchg lock dec mov pop fcomip xorb mov mov adc fcoml jne jae cmp xorb mov ret mov and addl mov cmpsl outsl movsb and dec add out js push (bad) icebp imul xchg mov push add mov add ds jbe push lods and pop pusha sub add add jmp sub andb aaa push daa (bad) ljmp movsb cs add mov test ja cli add jg in and (bad) stc incl pop pusha into sub test pop xlat pop and iret inc xor and jbe pandn lods loop sbb mov mov adc push cwtl jo pop into jl inc sub lcall movb and pand and ja cs add addr16 push call xchg es or push std cmp (bad) lea call stc mov mov mov in fisttpl subl jge sbb test rorb mov add xchg or adc xor sub mov pop inc sbb mov (bad) out pop pop add (bad) fwait add cmpsl mov aas je pop pop mov syscall cmp mov enter add push xlat jmp jbe mov xor mov pop and add gs aam push add in push incl test ret xor mov insl stc add mov pop sti add cwtl cmp add xchg out mov (bad) fistpll push decb in add out sbb cmp pop mov pop inc js mov jle push cmp test pusha jecxz mov das jecxz pop outsb jge fild push cmp adc aam dec popl xchg dec lods inc inc push xor inc lret add xchg cmpb mov lret stc sbb sub add jp gs mov xor cmp cmp push mov add (bad) jbe xor or stc jle cmp jge mov ret cmp add in mov fidivl jmp pop adc sahf pop mov mov int3 pop jl add push pushf jne jge lahf test (bad) cmc add add notl jae enter lods lret lret cmp lahf add sbb add cmc je mov cmp daa add (bad) icebp addl xchg push cmpsb aas cmp dec mov jg sub pop sahf movsl mov daa mull inc and addb inc adc sub rcr add jle fnstsw sub and fcoml mov xchg push mov lcall loopne lock bound lret mov rcll sti cwtl xchg add icebp sbb test popl add sub pop add and jp push test bnd jge mov unpckhps add pop cmp orb pop out jo dec pushf add add mov add dec arpl lcall push push jne nop inc repz xor aaa lods add pop or dec or scas (bad) aad (bad) pop sub xor xchg stc cmp mov mov mov add sub xchg mov in clc or hlt lret and (bad) add fisubrl push pop inc inc gs jbe les ljmp sub jnp adc xor jecxz cli jmp movsl mov into inc xor jge pusha adc mov push lock scas leave (bad) mov out add std aas or adc rorl sub add notb add sbb ds sub mov dec cmc add sarl add mov add mov sub fistp or lahf loope inc xchg jl lahf in rolb lret or cmc sti nop jns add and sub in lds out mov test (bad) or inc hlt aas cmpb sti mov fs inc subl data16 add and insb ljmp mov aad cli js ficomp inc leave add call jns mov das add mov outsb or aam add cltd mov in cmp fiadd inc or mov sahf outsl inc (bad) daa (bad) (bad) repnz movsl add imul out mov pushf ret fs adc fucom loopne mov pop inc (bad) jl cltd add imul movsl popa and add rcr cmp mov add (bad) xchg (bad) lret xor sbb scas inc add cmp sti dec adc aad jmp mov sub xchg aam mov (bad) mov pop data16 add xchg mov add out mov adc jbe inc pushf adc or loope cmp push mov add jecxz cmp sbb pop xchg mov (bad) dec jmp test push adc shl imul pusha or inc je add call insl push add ljmp add loopne fiadd push ret and fldl (bad) xor push push inc sbb adc popl pop cmp call mov ret (bad) add pop jbe es std add mov aam out fwait xor (bad) mov nop add xchg push aas insb push xchg out ret add mov repz jle jno cmp outsb in aam sti in out test mov movsb xchg testb push cmpsb repz std and and pop xchg in aam sarl add aad arpl repnz adc subl and dec stos add mov les gs test (bad) aaa stos cmp jl add rorb pop xor cmp data16 popf (bad) jb and pusha sbb (bad) outsl int3 mov fbld inc lock sbbb mov and leave and add pop dec mov cs lahf xchg andl add pushf and inc gs scas subl out (bad) mov pushf xchg lods mov fisttpll out call ja mov mov adc mov fmuls jno test ja adc push add pop mov movl dec adc jbe add push aam cmp subl cld inc fnstenv ss lcall aad je and add hlt loopne aad out mov insb jnp sbb loopne popa xor scas add sbb enter mov lock (bad) pop jle xchg push mov and subl lds (bad) loopne daa movsb movb push lea inc inc scas mov mov out push lcall jle sub inc inc inc xchg mov add jo push pusha mov iret mov add inc dec cs mov add (bad) aaa lret sahf jecxz mov divb adc pop pop in pop adcb push lret adc add mov lds add mov loop adc mov inc mov pop int3 (bad) jle add or jecxz lahf jne and andb jmp xchg jmp cmp dec pop mov adc cmp add xchg sarl int push test test lock mov mulb xchg adc out bound push sbb xchg mov mov add lea les push sbb fistp in mov loopne in lock enter and xchg insb sbb push xchg fidivrl or idiv and cmc rorb int mov fnstcw inc sbb nop push or jnp push pop jge cmp add subl stos or add pop and sub cs in call cmc and dec int3 xlat jge mov es je add mov pop (bad) pop xchg jbe dec and in shll lods scas xor mov adc pusha mov add pop adc and jo loope mov jmp (bad) popaw mov sub out inc or pop mov adc or add mov fdivrl jg sbb sahf enter add test (bad) shll mov or orl jmp rcl es sbb repz loope and lock add lods mov push leave mov (bad) xor adc and cltd fiaddl (bad) xor pop or inc pop mov aad xor push icebp cwtl mov mov add push xchg or cmp jle jmp mov adc sar dec adcl decb or hlt xlat push sub jno es dec push dec mov cmp inc push repnz test pop out lods or xlat sarl mov xor inc add jge loop cmp add pop ficom sbb jb xor inc out adc adc xlat jo outsl jae sahf mov sahf mov in fucomi addl bound xor imul cmp or sarb mov fwait jbe push add mov inc subl insb jo sti repnz adc lods sub adc cmp add pop cmc stos and lods cmp mov cmp jbe xchg dec fs sbb push insb mov xor add mov rolb rclb jecxz mov add sbb push dec pop push push mov ret mov insb inc add jno sahf pop (bad) push xor mov inc divb jo add fimull aas mov push (bad) inc ljmp and mov popf idivb or mov call jo add insl repz iret insb pusha cmpsl xor rcpps add notl data16 sahf mov (bad) aam xorl adc push add arpl mov cmp add xchg sarb cld jp nop mov jmp adc fild test shlb loop add mov inc add (bad) sbb add movsb lea cli mov (bad) pop push notb dec cmc mov pop push sti pop (bad) adc ret xchg or push mov dec mov add jle addl mov pushf ss add inc addl rol iret jle insl xchg or daa or inc mov cmp popf imul leave push pushf inc js dec mov std push sbb enter xchg or xchg xchg adcl sbb js jg mov dec orb lods ljmp lods push fsubr (bad) fimull in or test adc int add pop pop sbb mov mov sbb add pop test addr16 out add xlat and push jp inc data16 dec mov in jo sbb out or loopne push movsl insl mov (bad) pusha jl ret fisubr (bad) dec lds test mov orb jnp xor cmp xchg iret dec pushf pop push push pop (bad) loopne fbld leave xchg pop mov fcmovbe scas xor or rorb jnp add mov pop (bad) add std cmp jno add shrl pop pusha push add or push sub add cmpsb inc dec mov and mov js movl mov insb test adc inc xchg ja aas sbb lock push stos fild enter xlat lret test cmp jne lahf idiv add cmp inc subl repnz xor lcall imull int push inc addl pop lds lret cmpsl lea or cltd xchg sbbl inc dec mov add fs xchg mov push xor and cmp jns xchg scas pusha mov xor sub pop out sub rolb xchg dec adc and addb add add push fldl2e out ljmp or sub mov add push adc neg sarl data16 cmp pop rolb (bad) pop mov pop in int jge and jmp lret dec clc loop loopne (bad) ja jns es jb lods jp mov notb data16 aaa sbb inc mov and adc add in subl dec push adc iret push add mov mov lods fcmove stc add pusha pusha and pop bound (bad) sbb mov add clc addr16 fiaddl (bad) aaa or (bad) mov jbe adcl (bad) pop pop bound push add aaa xchg and popa add and push xor add cmp lods das cs and add (bad) lcall sub push scas movsb ds sbb or fdivs jae add (bad) push xor hlt ljmp (bad) test pusha jp xor or add pop loop imul jne add add add push (bad) xor rcrl outsb test cmc std jmp out mov jnp mov in fist push nop leave adc repz sti add aas sti fdivrs bound out add imul pop ja sbb cltd (bad) shlb std dec icebp xchg add cmc cwtl or cmp add mov push incb mov inc adc add cmp or add (bad) fwait sub or adc sub int test iret inc cmpsb ljmp xchg xor scas out lods cmp or mov dec adc lock push jae add or cmp gs stos jle xor testl cmp pop test aad stc lret pop jno data16 add cmovns jb mov cmp das test mov mov pop pop add frstor add mov add and int3 add (bad) (bad) add cwtl sub mov and push inc pop stos and pop sarb and jbe or fistp fs add lahf test mov jmp jg fadds (bad) push mov adc in push xor xor mov inc pop call faddl adc jnp add pop mov pop pushf cvtps2pi adc add sbb jmp jns add ret add ret adc add ficoml ret mov xor mov cmc pop inc or xor mov cmp xor inc jp jmp shrb test push mov xchg xchg mov lcall ret mov lods push mov add loope cmpsb add mov aad jl jno xchg pop repnz data16 fstl mov push clc add insb sub ja (bad) arpl dec rcl xlat decb dec cmc push pop mov fsubs dec dec push out movsb cmp jmp mov mov (bad) cmp jnp xchg ljmp insl movsb push imulb mov jg fwait push ds and jbe xchg mov js loopne add inc outsl std test inc xor xorl dec pop add add inc mov pop xchg rorl push mov cmp inc aaa add not jmp mov add and fnstenv lods pop add insl lahf mov push jle inc add icebp sub push sbb or push inc outsl (bad) cwtl fiaddl jmp stos es fdiv or into inc ja (bad) out adc pop iret fisttpll mov orl leave or repz mov inc rclb sti cmp subl lahf aas js mov xchg xchg (bad) mov pop xor pop lods fs addb nop or idivl jbe addl mov jecxz pop inc cltd rorb testl imul xor xor mov fisub push jecxz cmovg ret push imul sbb add rorb pop fild mov and dec add (bad) mov jecxz dec inc sbb aaa jo mov dec mov push inc or ret add xchg fistpl add mov sbb jbe add cmp jg cli jecxz mov sti pop int aaa cwtl add mov pop aam add lret xchg mov pushf (bad) mov dec cmpsb add add inc sub inc sarl ret jge lea sbb (bad) (bad) rcrb jl (bad) adcb lcall push jecxz push mov imul iret das xor add dec jne add fwait sub mov mov jbe and addr16 dec iret add xchg xor pop aaa xchg fwait add rorl xchg add push sbb mov fistpll jl add dec mov push das pop mov cmpsl test in or sub clc and xorb jge leave in fs add loop jno pusha fstpt addr16 (bad) out xchg mov ja add sti xchg dec sbb xchg mov popf pop in leave pop (bad) mov out xor xlat out in xchg imulb adc and dec xor push mov leave cmp iret inc and pop push cmp (bad) cmpsl add addr16 mov ss int cli pop aam push out insb push andb xchg mov add stos push adc ror js mov sub out add fnsave pop or cld mov jp adc pop add insb sub stos scas mov jg sub jbe or sbb sub mov cs mov xchg add (bad) mov pop addb jne xor jbe push xchg mov pop add data16 cmp add js lea mov rclb add or jno sbbb jbe out add push in add jns movb add pop call mov and fptan fbstp cmpsb pop scas adc adcl add inc loop out sub xorl cwtl add lret out cmpl inc add xor pop aad leave sub pushf out add xchg sub sahf mov mov push and cmc test fcoms add daa jg icebp ret or sbb adc add sar sbb out clc in cmp stos mov xchg mov dec cld pusha jp push add fiaddl subb enter inc lea or xor out adc jmp jne pop addb xor daa push out popl jl pop jb addr16 adc out push add dec sahf insl pop jno testb pop pop insb aad pop jnp fwait jmp fisubl pop lods sahf jg adc pop push xsaves ss jo,pt fildl add add stc gs dec add clc aad xchg mov and mov getsec and push test mov pop (bad) jp orl pop sub jle mov jecxz mov mov push incl push psraw test pop cli adcl iret adc sbb imul push adc mov mov fadds pop mov push push xor std out pop lods lahf out divl jg push sub addl js sbb inc add repnz add adc add lea addl out aad (bad) dec call es inc dec add hlt xchg cmc ficom fsubs mov (bad) adc repz (bad) mov mov fs test add in xchg clc adc push inc add mov insb add pushf jae pushf inc dec mov mov data16 mov add add push inc pop cmpsb andb mov pop sbb dec sub jo call sbbl jns enter mov fldt lret in cld push mov mov aas push (bad) jo dec stc mov sub cmp pop add outsl adc mov pop and aad in add xor add mov add movsb movsl and addb jae int3 mov ja xorl enter in mov inc pmullw jb lods mov pop rolb pushf (bad) adc lret ja cmpsb add pushl les stos add jp (bad) das repz add aaa xchg cmp and andb jmp std leave cmp or ret imul sub dec loopne mov imul sbb pop push adcl xlat add stos pushf add data16 fiadd setge and inc jp push add xor adc jecxz dec ret sbb add inc nop cmp (bad) pop mov icebp sbb xor movsb pop mov mov mov mov std add outsl xchg mov cmp lret xchg ljmp and inc insl das popf add mov outsl add in mov fmuls jle icebp add (bad) shrb sub cmpsb loope mov pushf push push (bad) adc mov xor adc in mov sbb cmpsb (bad) leave push add insb mov xchg push imul mov lods or pop imul add repnz (bad) dec ret adc add xor add push pop or push xchg repz je mov add test dec mov pop inc push out or pusha jp add movsl push scas mov cli jo xor faddl lds xchg inc mov jge movsl scas xor pop insl add std pusha shrb out enter jnp mov adc push cmp scas sti cmp andl test sub cmp dec mov inc cmp call fildl arpl lret test mov or roll movsb ficompl pop push add sub or icebp push out fdivr or pop xor pop adc dec lret mov aas cmp sbb add pop ljmp inc into in xor xchg add push fidivl inc push pop jo jne add cmp dec cli xor imul std add mov mov add xor mov loop inc jo push xor or rol push adc add sub stos ljmp mov jge pop adc je add sub test mov test inc (bad) push xor pop adc mov mov jb in add cmp out push xor leave adc mov pop xor add sti int3 mov add xor test orl cwtl sub cmpsl jle fs and cs add pop jbe sbb movsb inc jl pop pop xor sarb mov push jnp add xchg or pushl divb inc shrl addl ds dec pusha lret lea in add scas cmp rorl loope inc mov insl push lock lahf xor mov push mov sbb add in push adc sbb add mov jecxz xor cwtl bound mov inc inc jne movsl jne pop int3 mov xchg outsb push add ret inc dec jbe pop xor xchg dec push pop push xor xchg mov sbb pop cmp loopne adc dec subl pop xor into andl pusha mov mov scas add inc sbb fstpt and stos pop jo dec add out lods jl and cmp mov add sub mov das shrb ficoml fld fiadd inc push mov mov cmc mov or mov pop fwait add es and adc sub dec inc test add push push add mov fs add out and es cld add lea mov out jle hlt xlat aad ds dec add mov (bad) lcall inc dec shll mov or jp adc stc cld cs inc orl dec in jns mov mov das mov pop addb mov pusha sbb push cld add movb pop xchg aad mov add sbb mov (bad) sub mov pop jp cmpb lock cli fisubl jle mov (bad) pusha sbb xor icebp in (bad) pop add xor ljmp jae dec jbe faddl cs pushf push and inc mov fidiv add ds push pop mov push add lahf pop or jae inc add test fstpt orl xor add mov ljmp hlt jb and jecxz cs sbb cld add fcomps mov mov gs add mov fildl subl and add push mov add mov (bad) cwtl mov cmp add mov aas mov aaa inc add (bad) in daa es add jmp add cltd (bad) or je add xor dec out cmpsb sbbb imul mov push daa bound mov mov mov sti mov add add inc popa std and testl pop mov ret add lahf mov loope cld aas pop add xchg std dec fcompl adc xchg jae push add daa movsb mov out hlt add scas cmp push add enter bound add lds mov pusha sti icebp stc popf push jns bound (bad) cmp inc loopne add lahf cmp add mov (bad) dec pop aas rclb jge ret (bad) jne loop sbb sahf dec aam mov cli add cmpsl add fsts enter mov xor lock jo bound push mov les and mov jae data16 add or xor mov and or clc test jbe in add nop stos decb cltd pop dec incl mov shr add jge cmpsb test lret sub add std mov ja aad push push pushl pushf pop lahf mov ret repz xchg xorl das mov in cmp icebp sbb lret fdivr cmp nop cmp mov addl out shlb repnz sbb sbb mov add rcl (bad) fild dec outsb clc lods or sbb popf jp add dec xchg mov xchg jl jg fwait sub xchg shll adc aam inc mov in pop add push and add movsb call add lock adc (bad) test add adc fidivl in jns pop imul xchg leave xchg lahf bound cmp mov loopne sub add stos (bad) lock add inc jne lret mov dec xchg or jg add cwtl jae rclb cmp add sarl pop fwait hlt xor ljmp (bad) icebp pushf seta lods and push lahf and stos jbe data16 cltd jno popf lock rcrb jl cld add add or inc fs jnp out cmc mov mov pop xorl icebp mov xchg pushf add adc push pop cltd outsl ljmp lods movsl xor xorl fs fbld xor repnz jbe jmp mov add pop ret (bad) pop dec lahf fiadd lret jp test dec mov ljmp in ds popf pop fisub scas insl addl add pop pop add (bad) inc or mov add sbb mov add sub leave enter add in sbb mov push je roll stc jnp jne inc popa cs mov loope push xlat pop pop sbb cmp cld arpl jno popf mov dec cmp xor jb cmpl dec movl sub pop add xor and test cwtl add sti mov pop pop push shr out mov add sbb popa sbb mov jne pop jae clc lods shl jmp js inc pusha add sarb es xchg (bad) hlt sub mov mov mov adc std xchg adc incb adcl scas push fmul daa ljmp mov xor aas sbb lea clc dec add pop scas fdivrl xchg sti rolb std cs add lds add xor (bad) push add inc loop lret inc and in and add icebp inc sub pop or out in and add sbb push sub sbb nop test test sarb or mov jbe js loop cmpl fisubl outsb xchg add jne sbb jmp in push push enter mov mov add loopne adc into pop and push adc and lods out or out jl loopne dec adc mov movsl mov lods hlt lret jno lcall popf js loopne add inc add stc add and add push jne add fisttp or add test add jns pop cwtl xorl ljmp adc cmpsb inc scas sub fs and loop movsb cltd push fdivrl add ljmp scas xor int xchg jo cmp push popa out (bad) push out sbbb xor jl int add lcall add lea jl xchg inc xor decb pop or mov add add hlt push movl mov cmp shl xlat ja test add fst les xlat add or sar lea jl xor into mov add add outsb clc add sub rolb iret jnp fstpt push sbb xchg mov aam add mov cwtl popf add dec mov push lcall jbe pop cmp sub pop pop jns xchg push pop in ret dec add ret push adc cmp fwait das pop inc mov (bad) fcoml or add cwtl lock sbbl mov adc cmp xchg pop fldenv push dec cmc inc push jo add cmp xor testl mov and or add stc fiaddl addr16 xor add xchg pop pop out pushf jle jbe mov inc and xchg add add rorl mov or dec push out add popa adc lock jle das add mov cmpsl out sti lock jae add pop arpl add lea insb mov andl and inc add mov fiadd cmp int add adc gs add xchg lcall sub (bad) repz mov xchg mov cmp (bad) ficomp sbb xor and inc add repnz cmpl dec icebp movsl fnop pop pop add call mov or adc jge dec aad add push or data16 cmp add scas out jmp ficompl jle add movsl cld repnz adc cli nop xor ret pusha dec jne cmp aam test out inc push sbb lods jnp add jp rcrb xor fnstcw jle pop sarl orl adc (bad) popf repz int3 dec jp out cmp (bad) (bad) and je pop sbb test bound ret push mov pop xchg pop xchg iret and roll mov cmpsl dec push (bad) mov and dec push stos call cmp push cmp addr16 mov jl pop add adc les out sbb xor mov andb aas xchg cltd sti ret lds mov add inc cmp push xchg pop push mov (bad) and add pop ds xchg jge sub add jae movsbl xchg loopne fs clc and roll xor iret add out sub sub stos jb dec nop out mov add icebp and pop push out mov jp jg adc ds sbb outsl fs movsl add or repnz sahf jo andb stos loope sbb cmp movsb insb mov mov xchg fadds mov push adc dec sub xchg add or cmp orb or (bad) jl cmpsl pop add cwtl rolb mov push cmpsl add add xchg dec add popfw fistp push add imul pop xchg and add dec mov addr16 loopne xor into pop push (bad) mov mov or add sbb mov and mov lods in rorb dec test xchg fcompp add or push loopne call sbb mov mov mov pop lret in adcl in mov fiadd adc mov add jno fs mov or in (bad) (bad) mov jno cli jnp and int mov out cmp pop push dec push jle adc icebp and add mov outsb mov sti ja add rcrl push lret cmpsl in add xchg rcrb sar xchg rorb xor xor sahf sti std adcl add incl inc mov (bad) mov ja aam negb add movsl dec pop xor sar inc xor cmp fsubr jo jecxz jns push test cltd add lods rcrl jns addb pop outsl and popl adc mov pop mov jge push iret adcl cld test lcall xchg subl roll push xchg mov pusha add hlt push scas test add in loopnew sbb inc mov push fmul add shrb xchg (bad) (bad) push dec testl xchg add push sbb movsl vmovss add sbb add cs push stos jbe jge add push mov lret cmp ljmp jae xchg aam hlt or adc add out or ret add sbb adc pop mov add mov sbb inc push lods and mov jge jno lock sub jnp lea xchg pop call xchg or mov add mov cmp imul mov push push cmpsl add push cmp add test mov mov cmp add test adc cltd mov fstpl pop mov cld xchg jle xor dec sti lods lret inc popl jae xchg scas hlt les cmpb xor and punpcklbw dec cmpsb sbb out mov mov pop jae xor pop (bad) sti and ds (bad) xchg sbb subl sub fisttp pusha add loopne call sbb nop add jle or in xor push outsl adc sti jl ret add jnp push out bound sarl lods jle pushf add add push xor mov rolb dec pop mov leave test cmp in dec add xchg cltd mov inc xchg cmpsb or add (bad) fsubl mov int3 add xchg pop inc cltd push add movsb ds lea repnz data16 (bad) xor dec xchg iret pop add jle adc fs push inc sahf movsl ljmp mov adc cld adc (bad) sbb jbe cli add scas test push bound and xchg je sub or loop inc aaa cs lods add pop xchg jne ljmp icebp pusha pushf push and (bad) mov movsb dec es add scas lods repz cmp push out fwait mov push outsl test (bad) stos shll adc push mov mov popa mov stos movsl fsubrl add (bad) jno jl add shr arpl and enter or lret inc lcall adc cmpsl dec fwait or lock add adc add das sub xchg xchg xchg insb movsl (bad) and jbe (bad) negl push adc cmp add xor add dec cli mov mov add into push jo pop rcrb jno mov adc xchg cltd add outsl gs setnp inc xorl pop in incb loopne pop addr16 in cmp mov mov mov adc and lock imul xchg lret xor push test je pop lcall and sarb add push jecxz and sahf (bad) mov inc pop cmp daa pusha push cmp pop xor setb test xchg dec and lret sarl js dec int xchg (bad) jg sub xchg pusha (bad) mov mov mov cmp movsl dec js or adc iret mov dec lret pop or pushf or adc inc mov mov add loope call mov sbb movl ds add xor (bad) sub adc pushf or fild popa ret mov mov outsl mov arpl stos adc call je lcall dec std push add scas xor pop push out xchg mov mov ds sbb adc or movl cli movsl or icebp sahf stc sar xlat inc fistl add lock sahf fidivrl add jb insl mov cmc jge add fwait xchg jecxz pop fldl (bad) pushf xchg push push cmp add cmc sub mov and xor xor mov inc xorl jmp mov pushf pusha xor xorl sbb out add and pusha in subb addl add cmpsl test scas fsincos sbb xor push xchg iret jmp add cltd fimul pop push mov gs cmp push scas add frstor cs xor call test mov mov shrb repz sbb inc pop add outsl mov enter or inc fstpt push fwait jle push in add les xor movl jmp mov mov lret mov jae lea jo sub push mov call sbb add mov imul mov dec popa insb sbb (bad) add inc pop add mov mov jb or fs push add mov pop and and sub push fdivrl popa sbb daa xchg add xor cli lahf mov mov pop push dec sbb xchg cmp (bad) push stos cmc cmp loop sub ja addl int3 test add cltd hlt test add mov dec int scas out jge add mov jae add imul orl push push (bad) add leave cwtl (bad) pop cld jg cli add test stc pop pusha xchg dec (bad) inc xlat dec es add cmc jbe mov push inc and bound ja data16 or int xchg add int3 adc js pop cmpb mov test add jg pop addr16 out add add push popl js popf rol mov fisubl lods fisub adc rorl push leave fdivrl js jle add and test xor stc mov pop xor hlt fld cmp add push je add ficoml incl mov je add mov mov lahf int dec jge sbb xor sub sbb adc (bad) aam add add shrl lcall testb inc mov add daa add mov dec cmp js or add mov jbe add lea sub je add jns test or xchg mov lret ljmp add dec mov mov pop mov stos fcompl ret xchg fisub nop fnsave mov and adc add out add xor pushf mov popf add data16 scas aam pop aas add dec cmp and test mov mov sub rorb aad addr16 jae addl and pop outsb add stos ja lret clc add push inc mov add or mov mov xchg ror push add lahf inc add jnp into jg pop mov pop mov (bad) ss js add cli xor pop pushf (bad) push sub paddusw add and inc bound fsubrs jno add lods aaa jnp push lds and xchg leave daa fildl xchg lods mov pop dec mov movsl inc jns idiv jns rol add test loope add xor xchg push mov pop scas loop add popa and shl fsubrs pop sub cmp push sbb mov adc scas test mov popf sub icebp sbb mov std fwait cmp add mov mov cmpsb loop dec or (bad) sub and int3 jg add (bad) fsubrp rcrl add cmpsl (bad) cld cs addl pop cld jl push nop sbb in sub add out in in cwtl test pop fiadd push mov loope loopne inc xchg inc ret jmp jns jo lcall es insl ja inc sub loopne lret aad call stos pop push stc cld push add incb adcl inc hlt xor loopne imul mov js add sub lcall adc add stos jg add (bad) jne imul push (bad) out movsb loop (bad) and sbbl loopne das pop sbbl push pop orb sbb mov cwtl inc pusha mov in lahf xchg xor add adc or jo mov idivb add xor dec add cmp adc jns add add push sub imul xor adc push pusha loop jmp in adc sbb lods add cld adc and and call loopne popf incb cmp test xchg mov xchg and or leave call add pop lahf mov imulb add pushf in xchg out push xlat mov stc xchg faddl decb iret add xor pop mov inc xor into ljmp sub xor js in adc fldl stos mov xchg aam roll insb or jae jmp das xchg cli xchg mov or add xor (bad) fild into lock sbb ret fnstenv add outsb dec inc subl push xor aaa mov sti (bad) xor sub cmp pop fs lock mov xor or or imul (bad) les add sbb inc add movsb cmpsl and out adcl sub jo imul push mov jnp add pop pop fwait mov daa mov scas add pushf jne in insb flds mov add pop add inc adc sti pop outsl sub fwait cmpsl jns xchg aam dec add mov xchg inc xchg dec add inc js cmp pop aas xor xlat mov incl orb bound loope or mov push (bad) cltd sub lcall std xorl icebp push stos adc sub xchg popf popw fildl xorb neg stos or jg push mov jns add mov test pop lret das xor pop sbb mov ja dec xor sbbl test movb xchg xchg call pop pop incl push jo mov inc das aas dec movsb dec add pusha daa dec nop pop push add fildll push or mov xchg inc in inc xor jb pushaw xor in add addl or adc mov cwtl test mov jne cmp mov iret data16 push jo scas dec incl push frstpm(287 add xor or push cmpb add push pop xchg cmp mov fmulp imul repz push pop loope cmp shll jp add sub aaa push push out dec fwait int stc add push bound xor xchg or les (bad) and mov mov nop inc fldl add mov sub jle mov ljmp aaa mov xlat fxsave adc inc aas mov sahf xchg mov (bad) or push jno test mov fldt xor inc es data16 add loopne daa push push push jl xchg inc decl call pop jg and pop sub out xor cmp xchg fnsave fmull outsb or fcomps in xchg bound gs (bad) mov mov ds cmpb imul add lods push jbe loop fadds mov lahf add jne (bad) jecxz icebp cmp rorl pop int cwtl push xchg sub xlat jno lods call mov ret hlt cmp jge inc clc push xor int3 std ret mov addb sti fwait pop add cwtl sbb outsb mov (bad) jnp (bad) jne jne add outsb and mov jp add insl mov xor stc xlat push push add jno roll shrb add enter and jns pop (bad) mov orl dec jo arpl addb insb (bad) lahf bound fs or arpl and push or xchg flds out out xchg pop incl mov fldt pop jp (bad) cmp fisubl mov loopne add (bad) add sbb (bad) fld inc jnp fldt xorl repz fbstp add xchg add jns or out and dec loop js (bad) xorb xchg add mov and add jnp inc pop push push stos push inc jl js mov mov pusha jb addr16 out add jns insb sub inc add fcomps dec and mov sahf test push (bad) push and inc imul lods rclb push push sbb loop lcall call push or push das pop inc push adcl out add adc sub push or orl stc leave push clc fisubl das sar or pop inc adc inc test add inc pop aas popa in adc or xchg or dec add rolb cmp ljmp iret jns mov sub out mov imul mov and lods add inc or xor and inc jbe ja lcall in xlat sub xchg test fwait pusha jge inc sub test jg pushf pop mov je out fwait pusha mov xor in ljmp loope scas bound repz sbb into add stos rolb out shrl mov aaa sub mov jae and jo add pushl inc add push fs jle mov ret mov mov jae dec popa pop mov add jo sbb push jmp xchg ljmp insl adc inc test ja and roll pop out imul cmpsb sbb popa and incl addr16 add and xchg mov cmpsl jo dec add pop outsb sub lock mov andb pop imul stc fisubr fsubrl addr16 add clc jg add or xchg push daa inc mov fildl out out and test popa add decb ljmp jb jo xor xlat ds inc jecxz test jns shrl add add jle and (bad) fadds outsl in leave cs mov scas iret add dec pop add mov pusha adc mov imul adcb mov jns cmpsl push adc sbb push (bad) cs jbe testl shr mov add daa xchg addr16 mov shl or xchg push aaa mov ret in xor lret mov add scas out arpl jge mov add xchg les push add imull add fsubrl push in adc jb mov iret fs or fildl (bad) leave mov inc leave xor add fmull add xchg sub je add popa outsb sub test mov mov sub push jle int3 fldenv xor (bad) (bad) pushl roll push cmp mov pop jp xor out jmp (bad) decl adc std aam dec xor loop fistpll adc popf xor xor adc add and adc inc push add and mov imul push mov pushf xchg fcoms loopne add mov mov in icebp jmp adc jns jg test outsl fimul add rcrb adc (bad) jo test push lock fnstcw into add add cmpsl xchg pop sbb or cmp push lret and fucomip mov insb xchg push xchg inc jnp and xchg adc pop xchg inc (bad) xor mov cmc mov cltd mov cmc ja in loopne inc dec pusha adc pop psubusw addb add inc sub push aas pop (bad) mov adc push add mov jl aad imul add add jo push add inc add pop sbb xor js cmp sub imul mov cmc jns call xlat add cmp fidiv sbb add sti add mov outsb add jo jns pop push xor out movb sbb insb orb dec jbe sub mov add mov add stos fsubs hlt shll cmp pop cmp adc les in test std stc dec outsb rcpps dec pop mov and ljmp dec adc push fldl ret jecxz mov add jo add add (bad) mov dec sbb outsb shll cmpsb jo lcall push dec pop and fstps test sbb sbb rcll dec dec ret jle push test lods outsb (bad) inc sahf mov pushl stos in inc dec add inc cmp mov ret popf xchg pop mov mov test out mov lods cmp scas mov xor jecxz in jle sbb sub pop stc stos lods subb (bad) inc jp jb cmpsl add lcall adc lock xchg (bad) jb add mov adc orb mov add inc push add inc pop cmpl mov std (bad) sti add push add add jo insb push pop rcrl push xchg dec loope test out out mov data16 add cwtl fmul xor clc adcb repnz and jmp aam fidiv and shll fnstsw sub mov fs dec mov testl cmp dec add cmpsb pushf push loope xor call mov lret ss cmp popf xchg cmc add addl push mov loop pop sub and orl mov pushl fs (bad) shr dec xor fwait or in sarb mov add or dec pop je add xchg fildl adc (bad) jmp add dec push incb in pusha inc adc jnp add lods pusha xor int sub rol scas mov rolb flds shrl and xor stc add pushf push add mov mov add adc mov int3 add (bad) mov aam add pop adc in ret add jmp loop xchg pop mov das iret add fldl outsb pop xlat xchg mov (bad) psraw mov mov adc (bad) ljmp add inc fwait int3 xor js add in test call mov xor push popa (bad) out punpcklbw arpl rcrb add in sbb xor add cmpb jnp cmp push lea sbbb scas sbb adc imul aad sarb sbb xchg add je xor xchg test (bad) sub mov xchg pop dec sbb jge jle in inc dec lock nop sbb dec xor add pop inc hlt cmp cmp pop add cmp add (bad) clc popf out aas (bad) pushf add repnz (bad) cs add pushw fadd cwtl (bad) repz push inc stos das lahf in or dec fild movsl mov jmp push add xchg xchg popf and (bad) xor sahf test mov sbb push jae test pop test xor imul jl (bad) dec jae out and mov (bad) div adc pop inc pop xorl inc (bad) icebp xchg pop pusha imul js andl movsb jecxz mov jmp add and push add aas jbe mov sub pusha xlat xor orl faddl add hlt sbb add add xor cwtl mov push and sbb sub sti sbb out leave into pop int xor (bad) fstpl xchg sub stos add aad push divb cmpsb xor subl push add lahf lret aaa add xor jmp sbb push xchg test and sar inc mov and or pop fucomp sbb jo add (bad) movsl xor insb add mov jge leave xor scas (bad) mov addl je lahf add xchg add (bad) jecxz andl jl cli insl pop in adc push jbe ret orl xor fidivr push add and daa sbb jns fistp dec lret push mov and pop cmp jbe jle in out jg jnp pop add dec add add repz and andl enter push add dec sahf mov sub add movsb in push sbb inc or mov mov sahf push cmp lock jg or pop sub (bad) rcl inc dec or cmp lds roll mov dec dec xor pop add jb dec add pusha repz test cmp jae adc adc fnstsw jb sub stos insb adc loop push bound mov insb add push sbb jp or loope push ds push incb lds and inc add out or mov add xor jg (bad) popa je pop push pop xchg add (bad) add xchg outsl js sbb int3 mov es add mov jb int3 lahf cmc adc pop mov xchg push cmp cltd (bad) push push popl in stos sbb mov or adc sti xchg call (bad) daa add and push pop pushf mov cld and movsb xchg sbb add les jo das xchg xchg mov xor or bnd inc inc and loop add popa ja sub sbb mov add lcall xor clc push mov mov inc or sti adcl (bad) and stos movsl xor gs add pop push jl data16 jo sbb (bad) cmp popf xor jp mov inc aam int add popf add cmp pop ja dec add mov mov cmpl das adc fs ficompl sbb scas jae je dec aad push sbb add out inc test sbb (bad) sbb fadds jp cmp fidivl add jbe cmpsl es pop xor inc add pop push adc pusha add push lods jae aas xchg add cmpsb loope dec and gs ss inc jnp xchg jb pop femms xor lret out push add sbb bound add cld into loopne (bad) mov in inc lret nop add add dec or xor dec sbb enter rcrb lret jg rcr jo,pn jl nop add jne sbb sub or fwait pushf add je cmp outsb add loopne faddl inc and lret lea and xchg cmp jl shrl lods mov pushf lea and outsl lret push ljmp jo out pop add psrld insb or subb mov sbb (bad) (bad) sub and or xchg cmpsl adc daa jge adc sub enter call sub jnp push ret mov js push xchg imul add mov andl rcrb dec mov js xlat adc enter inc icebp push inc add push out std mov add pop shlb movsl add mov lcall cmpsl push iret je jmp add mov dec and outsl dec push mov clc cmpsl adc out xor and mov cmpsb sub inc in popa add arpl test push and lods shlb jp jo xchg push mov lfs cmpsl or lahf sti cli inc in add sahf in mov add mov mov outsb mov mov leave lcall add inc add sbb nop shrl dec aaa add pop outsb cmpsl add test out add nop ss sbb pop xchg jbe dec (bad) mov push inc add inc adc test scas push sub outsb adc inc loopne pusha outsl lds mov pop hlt cmp xchg and mov scas add adc lcall mov les inc xor push movsl (bad) in push xchg add nop test add lcall mov xchg xchg inc jnp cmp lods mov aas or cltd nop xor cmp xchg je out in cs and cmp xor adc ljmp js shrl pop xor jmp add adc push jp and outsb push xchg rcrb roll pusha or pop idivb dec jmp int3 push dec fwait test iret cmp add pop jno fadds js add jg or pop lahf sub sub jbe or adc jmp notl add fiadd add ret icebp mov pushf into imul adc aaa xor add add sbb xor cmp cmpsb xlat push addb (bad) or je fmuls add sahf hlt addr16 xchg mov pushf aas (bad) mov push mov (bad) mov and add in sahf mov jp add loop sbb sbb lahf sbbb leave rorl js fadds cmp push test in loop jnp jmp les fdivl add jl je inc int pop mov adc clc lods inc lahf sahf adc stos add mov xor lret push add inc movsl cmpsl add jns (bad) pop orl mov je cmp or xchg push jae out inc sti xor mov jl sahf mov xchg pop jo cmp pushf cld add loopne mov mov aaa add bound mov adcl add lahf and add imul je test sbb or pop aas cld out loope cmp sbb add movsl xor fstps int xlat mov add (bad) iret xor sti jle push jb jl pop mov fwait sti cmpb sbb test push add xlat in ljmp lahf (bad) mov test adc sbb sub lds in push xorb xchg jbe cmc xor xor dec pop int3 jge cmp mov push enterw jns push lret add inc ja (bad) aaa dec inc and jb pop xchg pop add (bad) pusha insb daa jae mov mov mov bound insl inc orl test loop addl lds adc dec lcall lock clc insl xchg in add mov addr16 (bad) jno ficom mov add les fldt in mov pop sarb daa adc clc (bad) adc dec mov arpl adc (bad) and or or mov hlt ja add mov xchg add int (bad) repnz inc add cli cmp xor push pop in iret data16 lahf cltd mov add fnstcw test push pop jecxz (bad) sub cld jb cmovno lock cmp or mov aas test lret imul sbb lds jecxz push ds inc sub xchg mov and or xor sbb add inc cmc loop jg stc add ret and pushf dec mov jo push imulb xor mov cmp push jg jne add mov stos fstpl outsl cmp out inc sahf jae (bad) jp xor sbb cmp mov sub shl xchg dec jo in rolb jb pop jae in fadd add fs xchg pop mov add or add fcoms (bad) loopne sub mov add std ljmp add dec pop and push into scas xor outsb in add xchg stc mov adc dec add sbb add and xchg es aaa cwtl mov outsl jle jo add jmp popf cmpl stos and pop dec (bad) dec jno lds movsl iret jb (bad) popa pop arpl test int jnp loope lea push fnstsw push push ficompl mov xchg mov lahf jle push add xor add es push add xchg clc punpcklwd add repz xchg movsb ror add inc pusha and insl cs adc ljmp sahf jl jns add push dec shrb adc fildl pop pusha lcall xorw popa in roll sbb or xor sbb mov xchg lock add push dec imul add rcrl mov cmp push add je or jecxz aaa fs cmp jb pop mov (bad) add stos repz dec sbb aas mov test (bad) or mov add mov push mov add lret addr16 faddl xchg (bad) in decb aas cmpsl popf pusha int3 cmp jle add cwtl pop sbb add shr adcl sbb jns (bad) in add xorb and add ret pop ret insl add push cmp popf add dec loope inc ret push stos or sub imull pushf nopl sub aas mov movsb dec add mov mov add es aaa ss adcb cli pop jl fwait lret jo pop mov add mov and pop inc dec adcb push pop in push fisttpll mov or adcl les int add mov mov jg test xchg aad (bad) push mov add xchg and dec jmp lods imul adc iret push ret std mov jno add (bad) adc add adc add imul adc sbb ret push push jo enter add pop stos jnp gs std movsb xchg (bad) int3 push sub mov jp pushf sub cltd nop or orl and lahf test scas push ss std or sbb xor hlt adc out je testl nop add movb cli ja mov and paddusw pusha clc (bad) push xchg push inc add aad xchg aam shl lahf mov in mov jmp cwtl das std mov lock lods lds in inc jp and roll add cmp sub xor or sbb pop jne inc push fs mov xlat jo push sub pop xor add jns mov inc mov sub cmp cld icebp xlat dec push scas add call (bad) repz lods mov push mov dec hlt xor into fsubrp cli add (bad) jo clc leave sahf add inc (bad) (bad) xorb xor inc add sbb or add push add daa cmp sbb stc pop adc sti xor push mov aam xchg icebp xchg add cld jg ss mov arpl pop sbb and js test push lea adc dec dec mov ret fsubl pop scas cmpsl add sbb jp fidiv ljmp sahf aam inc mov outsl mov and call or in and mov xor mov pushf sub iret lcall mov add push ja sbb lret inc arpl ret add and pop xchg fildll push loopne add cmp sbb xor dec push mov add rcrb (bad) cwtl inc data16 inc das mov push inc cmp gs pop addr16 add push test lahf aaa mov mov sub xchg push into cmp jb inc cs ds fwait jne jl inc xchg fmull enter sahf jns add xor hlt xchg xchg jp add cmp outsb pop and dec test and xchg out add in inc nop pushf hlt dec faddl daa adc add push jnp add cmp cmovl out outsl les sbbb jl jle ds mov pop popa cmc loope mov inc add xor (bad) cli pop and addr16 pop call pusha adc std and pop jle (bad) pop stos fmulp sbb xlat or das jge push dec sbb add andb and imul push fisttp notb aad add xchg repnz mov mov lret add out jbe jecxz inc loopne iret sti xchg lds xor jl mov sbb cmp cli shrl sbb jle mov divl pop mov das imul repz loopne stos add in mov xor mov dec cmpsb cmp push clc out xor pusha test add iret adc rorl mov test mov arpl jae stos mov ljmp cmp pop add daa insb sbb add jo fadds lds inc push add adc mov cmp push adc push popf lahf inc add insl push rorl cltd cmp cs ja (bad) lods jg xchg dec je add cwtl int3 movsl rcrb xlat mov jns mov add mov sti add dec mov out loopne add imul cmp clc jbe test sub adc inc add adc mov sub dec xchg ret pop mov xchg sarl iret add add add shll pop fucomip inc sbb insl xor movsb add or push bound push add inc bound rolb out test ljmp mov lret sbb cmp xchg mov cmp fadds cmpsl xor push or pop loopne pop jmp call add or add roll jno add add es xchg ss add jne popa sub lahf xor pop les popl push out mov xor ret pop mov add lcall jae xchg testl clc add movsl imul jns add rolb xchg movsb nop pusha mov pop in js mov add pop outsl cld add mov push jmp loop fstpt packuswb mov jo add adc dec add cmc imul cmpb push jge add movb lea sbb jbe stos add push jge xchg out testb adc jo add aad adc jl cmp sbb clc testl scas xor jb sub xor mov popf xchg sub mov loop jbe insb test insb outsb (bad) out add mov jle (bad) lret push dec inc mov jno inc xor fildl clc mov sbb test adc cmp (bad) (bad) nop fistp mov add or in jnp adc in jo sbb sub testl dec mov add inc test mov or add xlat mov icebp sbb xchg inc adc add jne,pn add imul adc test sbbl push fs mov push add (bad) cmpsb out add add bound mov movsl icebp mov adc das add aas lock mov (bad) jno pushf addr16 adcl mov xor pop add inc popf cmp shll pop xor mov pop jbe (bad) jle add leave adc andl push das push inc ja and test push pop xchg cltd add mov adc (bad) mov je (bad) and dec xor test inc xchg into add push pop add je mov or mov push inc cli dec sbbl and cltd mov push movsl adc dec dec cmp add aas xchg jmp pop movsb add scas pop add add in mov inc pusha mov data16 daa repnz outsl dec add push jno mov inc pop jo add mov mov repz push into iret xchg jno adc fldcw lds jp int mov cmp je mov jp andb mov xchg (bad) adc lahf and mov add fnsave or int nop cwtl test inc cltd in xchg inc cmp xor lcall lahf add outsb testl xchg dec mov xor mov test adc push pop mov repz out nop pop pop ljmp push push popf int3 arpl push jns add mov mov add cwtl lcall or rcll fstpt add mov sbb mov cmp out add jns sub fldcw mov and (bad) aam jb lods cltd cmpsl add sbb enter dec adc aam pop imul mov std mov cli dec inc add add in jbe sarb mov in jo lret xor add loope xor pop mov ss add inc jnp mov add aad fldt add jo repz push xor adc sahf in fmuls imul cltd mov es jo shr add xchg inc jbe add mov test adc (bad) sbb push popa mov xor fs shrl (bad) jae or std enter xor popl mov ds test push push add mov mov testb sbb xor xchg ror pop jo or cmc mov imul dec push jne ljmp mov inc push cmp (bad) push pop stc sub loope fcoms adc stos test lcall js fimull add and push adc push or push xor sbb push dec pop cmpsl mov mov sub ret pop xchg out inc aaa pop push jl add add adc mov rcrl push sub inc push clc jns out leave pusha sub add jl dec mov jle iret xor (bad) push xchg je ret mov mov rclb add pop addr16 pop dec jbe ljmp push push inc jns repnz bswap out or push mov enter lock lret cltd inc daa and mov xor lds mov lahf jae push xchg inc mov test inc movsl add and xlat cld pushf rorl push lret cmp stos push xor ljmp push loope out add push aaa add xchg cmp mov or mov mov mov ljmp leave jmp xchg pop lock (bad) xlat push or push (bad) icebp dec push jg add push scas test sbb push xchg cld jno pop xlat xor je lret dec or das push add iret xchg lcall push lds and mov and mov (bad) aad cmp js scas lahf jb inc add or fcomps jp gs push add mov lahf mov (bad) pushf xor push stos ret (bad) faddl dec and test push add nop lcall lahf push mov adc and cmpsl add jnp,pn push push jge movsb add aas inc push mov xor test push adc lods sub cmpsb xchg add popa outsl dec pop fsubrl subb dec test add add mov xchg fnstenv stos call lea out push je mov sub jl sub jne dec cmp subl fadds fistp add sub mov sub sbb mov insl jb popa add jl or mov fisubr jae adcl aaa dec push add inc adc add cmpsb jmp sbb bound pop cmp test mov jg xchg into jge add leave clc sbb mov mov loop jb je jmp nop in imul dec pushl pop sbb pop jl data16 fwait into mov inc setbe dec and adc es dec pop jb jnp ljmp fistl xchg jnp sub sub movsb jg cltd add or mov es cmp jae lcall push loopne popa lock fwait push in fimull stos dec add push adc sub nop xchg (bad) add mov out addl push ret or or jp lret add push dec add mov or cmp sub dec mov mov and pop add movsl jno inc mov add sub aam mov xor hlt mov mov scas popa push addl ss cltd cmp sub push mov test inc cmc cmp add lods jo lret cmpsb fnsave addr16 les and mov lahf jmp loop push add adc test cltd std push push add lea xor xchg add lds ds cli lea cmc jo lret in adc jl inc cwtl fldl stos pushl sub or mov imul rcrl jne sub mov inc (bad) push out insb or rcr dec and subl ret pusha rcl out cmc xchg mov cmp test sbbl popf mov lods and add fidivrl je pop sahf add jge int3 rorl popa data16 mov xchg dec sub cmpsl mov jmp std mov cmp adc out pop xchg addl ss dec xorl xlat add adc pop sub into (bad) jo jb add (bad) mov inc loop ret or add add ja mov psubb and mov negl dec add mov fs and data16 push cld pop (bad) xlat jae fwait addr16 add mov lock ret adc loope add jns cmp insb test shrl or repnz pop dec cmp aad dec addb mov dec xchg xorl fstps push outsb mov lods jl sbb push mov xor add int3 aaa add cmpsl adc add shlb ljmp mov push aaa xchg xchg mov cmp xor pop (bad) pusha xchg adc adc int cmp pop or sub push cwtl fs xor sbb (bad) add dec out ret push loope mov lret xchg addr16 add stc mov test and xchg cmc test sarl or sbb and push xchg jecxz fwait mov cmp add ret sbb add add push add jmp sahf aas je lock cwtl cli cmp mov je add mov add or jno ret add xor pusha inc mov je cmpsb mov pusha popf xor dec jg sub inc andl add cs imul xchg (bad) call das mov sub sub test je addb adc and daa jo sbb xor roll push cmp add nop pushf ret sbb dec lods push (bad) cmc (bad) out add stos xchg jecxz jbe mov jg xchg push bound pop test data16 add add scas ret or stos shll and jl and sti pop jg das mov xchg mov push out mov pushf jge add adc in add xor cmc test cmp (bad) push or mov push cld pop and out jg adc cwtl xor js add mov cmc mov inc scas sub repnz pusha sbb inc je cmpsl jne add out cwtl mov pusha cmp lock jg jl add sub lds jae int3 add (bad) pop fildl gs mov add sub xor lcall pop jmp or add inc mov mov jmp pop lds (bad) push cmp insl and in int or sbbl arpl mov fist pop push mov in loope inc cltd pop loopne add lock push add adc repnz inc cmc mov or mov fistpll insb xor rolb fmull push cmp pushf add adc or cmpl sbb and or adc cmpsl jb adc lods sbbb outsl lods adc add movsb xor inc add jbe lds rcl idivb xlat aad mov push lock xor sbb (bad) mov loop mov (bad) pusha mov cmpsl add xorl pop and and mov aad fwait jp addr16 adc les or (bad) xchg xor cmc cmp xorb pop (bad) icebp inc js sti sbb add or sbb xchg add add inc cmpsb (bad) fnstsw mov add iret inc mov cmp ds or lods pushf sbb in incl push sbb icebp jbe sub jo and aas mov loop xorl push js xor push add ret (bad) frstor and stos or repnz add mov pop add (bad) inc imul test pushf outsl cmc inc jecxz test add cmp adc outsb pop sub (bad) cmp jge pushf popf in mov add push mov out mov sbb (bad) shr mov fstl sahf pop jae jnp out test inc aaa add sub sub pusha dec out or call (bad) xor lcall js aaa xor loop sub jmp jp lcall sbb sub sub inc xchg insb pushf inc loop pop popf jb push dec loop inc notb movsl in outsl adc sahf stos dec add enter mov xchg cli cmp mov into imull in mov pop std add inc and adc out add dec add xchg or xchg pusha imul mov jecxz mov push mov or test sahf jae jmp inc addl jo popa mov mov and pop add pushf push (bad) mov insb add es lods jle test (bad) push rolb (bad) pusha daa xchg aam (bad) cmp js ret mov mov xchg insb pusha pcmpgtb fldenv pop es jbe mov dec fstpt push mov dec lret push arpl out xchg pop bound loope iret lock fidivr xchg aam lcall inc lret inc xor fldl imul loope mov cmc cwtl pop add and sti out aam unpckhps sub and scas jge dec inc flds (bad) js and stos gs dec pushw or and pusha (bad) incl lahf push or xchg mov mov push add icebp insb xchg adc rorl pushf or push sub pop dec outsl or jb jg loope je xlat popf loopne add sub fs jmp int3 inc (bad) movsb sar inc test dec out pop add enter adc mov mov mov jge mov inc out loope and fstl sub icebp sbb mov and cld add or (bad) je cmp add fsubs add jmp pop fbstp sbb sarb xchg cmc add push stc cmp dec ja mov int repnz loope lds jbe dec lcall xor adc outsb aam mov ja pusha xchg lock test std push data16 pusha push add (bad) (bad) dec add lcall xchg cmp xor mov hlt mov jo cld inc js subb dec test cmp adc stos in addr16 call sub inc int adc idivb jecxz mov fmul add pop pushl xor sbb lods popf add (bad) into js jae or inc cmpb dec jecxz jb scas mov stos shl xor push les test pop lcall stc mov int3 push ljmp daa push or jb sub xor imul xchg push xchg shll cmp pop add sysexit push cmp pop inc mov xchg cli rcl add jns pop add out mov push (bad) repnz mov stos xor xor pop aas inc cmpb push pusha mov insb or adc and jl cmp (bad) lock mov test adc insb jo test lahf pop cmpsb add mov mull or dec mov pop into add insl xchg sti and mov sarl xchg pop loop cmp add xchg into dec arpl mov add mov add hlt lods xchg (bad) je inc mov mov and add in and popa lea jge pushf ficoml mov lds jg loop loopne sub lock (bad) sbb push mov lcall or mov inc pop (bad) sub sub lea sbbb (bad) outsb add push cmpsb movsl imul add mov mov rolb cs sub lods popf loope add cmp mov jge test mov push scas lods adc (bad) mov or inc fwait dec daa into push (bad) fadds addps dec dec xchg and cmp mov add xchg inc sbbl mov flds pop xchg xchg das and pop sar push js ret inc jmp test xlat dec inc pushf je dec mov pusha ljmp outsb xor inc test add push push shrl jns adc sti pusha sbb dec es dec cmp lahf or loope jl add andl add jl jb outsl dec mov mov popa pop in add inc or cmc push lds add dec aaa pop js add pop mov pusha dec or nop stc push xorb sahf lahf cmp jg hlt (bad) enter mov loop inc sub (bad) dec out xlat aas add pusha repz push adc add loope lret sub push pop add test outsl sub mov jmp add fstpl clc insl push pop inc add xchg add add stos popf or and cmpsb repz inc bound imul lret pop popa adcl mov xlat mov inc bound stos cmp subl jmp mov (bad) jle add pop roll ret and cld loope push out or add and movsb pushl ret add xchg loopne test out cld ror xchg pop in decb sbb jnp add adc jl lahf mov leave sub mov push int pushf or dec js inc mov push les fidivrl add mov xor xchg push leave mov push outsb lds ljmp sahf xchg sub push ror ljmp mov bound mov sbb add rcl jb inc xor leave and movsb popa sub stos out ret mov das jns addr16 lahf fdivrs sbbb mov test cs or divb subb inc cmp dec sbb mov (bad) fnstenv xchg add negl adcl lods add xor pop sbb ljmp stc addb jmp inc and lret mov dec pop mov jne imul or mov mov incl (bad) loop and (bad) add mov inc cmp loop arpl xchg inc fisttpll and stos sbb mov in stos inc pop (bad) add testl inc xchg loopne jg orl add nop add stos insl add test mov aad out adc xor sub test roll mov cmp xchg pusha jnp fidivrl or outsl push addl adc or addr16 mov add nop mov rorb xchg push or in andl popa jb xor push inc add mov jns out add add push or jae adc or or fnstcw xchg cli popf push jp or fisttp jmp pop and cmpl imul fistpl push push in push inc sbb ret inc cmp dec inc orl js xor stos push add in inc xor out gs movsl repnz popf cld xchg imul push cmp mov lods add aad dec stc add int3 (bad) or mov pop fpatan pop sub xor sbb repnz outsl jo xchg or jmp add jnp aad jbe jl cmc das mov adcl loope or add hlt mov and add (bad) das sub mov out pop mov rol hlt jle adc pop and outsl pop ror add sbb (bad) cli fcmovbe ret add push loopne fiadd movsl popa push xor add sbb fildl aas fs pop and mov jl (bad) je dec jae xchg cmpsb call push loopne ret hlt mov flds push pop rolb inc mov sbb mov sub mov dec xchg ja add mov mov test data16 inc je test mov add and cwtl rcll jnp sub pop sahf pop movsl pusha jbe cmpsl bnd dec (bad) icebp push mov insb scas adcb pop aaa add insl lret push push scas add dec std push inc jbe shll in push fadd addl lret sti bound orb jae jp or sub xorb xlat cmp push mov lret scas cmp add nop ljmp sahf outsl imul dec icebp push into inc or xor sar mov add movsl mov cwtl add rorb insl push sub les dec inc adc leave and add fcmovnu imul and push xchg mov and fisttpll clc sbb sbb push test sbb movsb add jns jecxz enter lock lret inc push add stc and call push cmp dec and (bad) mov lea pop pop sub mov cld outsb popa jl add jb xor push add ljmp jmp aad or sub push xsave lahf fiaddl aaa int inc (bad) dec xor xor test lret sbb rorb xchg mov gs or xchg jnp mov es xor adcb ffree stc cli jle aas add (bad) call loop and and add mov flds repz shrl imull jae sub mov cs repz out xor adc jecxz xchg xchg push mov insb aad cmpsl cmp inc xor cmp maxps push lahf add cld sub or sbb clc xor mov cmp ja aas push xchg je mov call add jno mov jl int3 add cmp dec or mov cwtl scas ficoml xchg xor insb sbbl ret rdpmc cmp and out cmp pop out add add js mov or dec pop sbb mov test in sbb pop add out les inc add adc lret (bad) xchg out cwtl je mov and ljmp sbb sahf movsl out inc dec aas scas adc lahf movsb stc mov xorl jecxz enter insb pop mov (bad) mov inc xor es or adc push pop jo aas roll mov mov and enter add xchg sar jmp fstps dec add push jl rolb sub mov mov push adc mov or lahf xchg add jns lret inc mov cmp push or mov mov movsb loop push insb push mov jl pop sub adc jae jne add xor (bad) mov inc aam insb add mov call or mov lfs add ljmp push ljmp push sbb and aas add daa test cmp add scas xor and push clc add (bad) faddl add out in aad dec sub je in arpl data16 out and adc jo fildl stos adc test add lods dec mov add sbb nopl xchg xorl push inc xor in dec xchg test push cmp insl stos ret (bad) cmp or sbb repnz shrb add sbb mov ficoml pop xor mov push dec mov int fucomi add ss movsl (bad) jne pop mov pop or mov push sbb sbb inc bound lds imul pop cmc and lea int3 pop shrl jecxz adc cmpl pop inc (bad) or cli mov stc fs addl int3 bound push das fadds pop icebp and jmp out inc cmp aaa orb pop data16 add aam xchg inc sbb popf add pop ja add sahf imul sub sub jecxz jno pusha mov add mov pop aaa mov ja push cltd (bad) xor dec adc cmc data16 inc hlt and out sbb add cmp jae add sbb jns out add adc push js add test push mov add loop std or test inc add iret dec xor sbb mov into add fisttp cmp mov fadd add xchg dec out push pushf fbstp popf data16 bnd inc mov es pusha pop movb scas clc xchg lret sbb sahf add dec jbe mov call push test cs add shll sub sahf std arpl sbb ret fcmovbe add dec sub gs popf loope adc outsl mov jnp add bound and test add xorb push mov out sbb mov push addr16 insb inc mov cmpsb add ja lahf es inc sbb ret insb push scas shll aam lcall xlat pusha mov inc mov cs stos add out dec add push pop scas add jle push add arpl stc fistp add out aaa add outsl add mov cmpl shrl mov add inc lods fincstp pop sbb movsb push addb jecxz inc add add push mov jns arpl and dec xchg add movsl shl orb or out add sbb addb inc ret mov push inc fidivr add mov imul xor jge add repz movsb fs cltd add pushf inc out add pop dec hlt xchg stos add cmpsb loop faddl and stc dec and movsb ret dec orl testl jp mov xor xor cs mov jbe popa add sub stos add mov das subb push mov into and add pop or leave or (bad) pop push dec add pop mov push (bad) insl fcomps bound sbb out je test cltd add pushf das inc cli pusha rolb movsl adc add dec and add cmp (bad) add loop stc cmpb mov ljmp lods stc subl pushf out add repz call jg and shlb addr16 popa fimul mov test (bad) xor mov shrb sahf add bound sub add shlb orl lea jg add sbb mov dec push or lahf add add cmp xchg sub jb in add cld jg pop adc add hlt cmpsb fwait lahf in add inc pop std and mov sub gs iret in addb cmc in add scas jle aas rcll or push xchg mov in sahf xor or std mov pop fadds xor or add or mull lahf xor pop es mov push jbe add push iret lcall in pushl repz (bad) push cmc add jl int mov popf cmpl inc xchg push add jmp repnz enter add mov das mov roll cmc fiadd iret dec scas inc xchg pop clc dec mov xor pop cmp or jno insb mulps pop pushl pusha iret sbb inc nop js hlt insl bswap adc and stc mov dec cmpsb addl cmp loopne lock or mov and nop add xchg xchg jb add xlat iret testb xor pop idivl mov push das lret ja add pop mov add dec adc movsb outsl loop fwait enter sahf cmp cmp pop ss mov push add sbb xorl push cmpl mov out iret mov jl push arpl stos mov (bad) jp insb add shlb push daa popl sbb dec jo arpl rolb stos inc ss in insl mov (bad) lods lret gs popf inc out jle push decl inc pushf ror push es jecxz nop mov out enter jge jp mov call cmpsl pcmpeqb ja jg and adc in inc pop push test lds jno shl add ljmp orl outsb js mov cmpsb leave and lahf int add ja and jle sbb (bad) stos mov mov pop mov aad test enter pop sbb cli pop fistl push adc add aaa add arpl es verr pop jmp mov inc inc (bad) aaa clc push mov xor in jb add (bad) and jns dec or sbb fwait add lea sahf sti icebp dec and xchg push sub mov addr16 in mov stos push fcmovbe repnz mov add jecxz clc add shll add mov repnz adc fdivrs (bad) mov mov sub enter add lret mov pop add jmp imul jns mov xlat loope push decl outsb jl push mov (bad) clc add add xchg test dec sbbb mov xor add cmp sti mov sub test cli cmp test inc lret stos jecxz js lods ds adc mov add pop sarl or cmp pop in add mov push xchg pop push inc loop out cmp add pop addr16 sbbb lods sbb jl scas cmp test xchg inc add in mov outsb add aas mov (bad) push dec es jno aam cmp fadds test imul sub push add jecxz add clc mov or xlat inc leave fs push dec psubd fsub sub adc dec daa xor jne add xchg clc add jle mov push adc cmp lret loope fcomps or fwait xchg push and sbb arpl std mov push xchg setnp adc lods movsb push in rolb outsl dec (bad) adc add lahf jo nop mov jl,pt jo add std mov add repnz and xchg jo add xor ret add stc scas xchg or xorl dec and addr16 das test push outsb adc pop push in jle mov repnz iret mov lahf mov pop das xchg pop inc jo ss sub fwait and jecxz push ljmp cmp cmp pusha add sub les ja sbb loopne sysret (bad) jb dec add or enter add and pop add mov pusha add sarb hlt ds push or stos add mov xchg lahf mov out dec js sbb sahf inc fidivr daa call (bad) (bad) cmp push mov mov and (bad) shrl pop popf std ret inc cwtl pusha repnz dec xor xchg push notb jnp paddw mov fs fs lret jne cmp add or rol add aad cmpsb xor and add or cmpsl (bad) mov mov sti push inc or mov dec andl outsl in pop sub (bad) dec ss sub xchg add std ljmp cmp rol add in lea and inc mov test int3 mov fld1 std into nop popl add sahf loope outsl add mov mov push mov xor rcll add cs dec push add ficoml mov (bad) lock cwtl shrl das mov je pushf push sti xchg dec out leave add aas (bad) repz hlt push ret test cmpsb dec mov imul jmp call into xchg jb sbb lret xchg jp mov sub test push int3 jno test dec mov adc je jge jg mov or mov sub jno push add jne (bad) fwait jo fiaddl icebp jecxz ret pop cltd jne pop popf fildll sar cmp into jl add cmp lcall pop aas push mov and addl xorb and push fwait in add pop test inc mov add mov sub insb adc in (bad) imull fnop stc in es push leave add out call xchg push dec arpl lods jmp add add sbb sub dec outsl scas out out stc ja xor test fcomi dec jle inc add pop push add scas lock das sbb test fsubl pop jp fistp add movsl push mov aaa fs add fdiv leave adc clc and icebp bound xchg pusha fs lcall shr adc enter popf pop (bad) nop shll mov std js pop push xchg rolb sahf in xchg loop aas jp lock or add xor sbb add jmp arpl std out xorl mov add mov add push xchg addr16 push add xor mov push (bad) mov call test add pop mov sub dec xchg mov xchg add out das add pop imul fcoms mov int jo stos lret push ret jp add outsb fisubr pop add lahf add mov mull dec cltd test out imul popa loope rolb ret pop pop or gs es mov mov xchg cmpl cwtl push mov mov cmp add mov add inc xchg into adc (bad) jmp adc hlt push jge sub jl jns pop add sub push subb push outsb mov push (bad) (bad) (bad) jmp mov mov jns mov add xor loope mov jg add mov add jo ss push cmp cli into mov lret lock cmp mov out test add cmp hlt add pusha scas scas pop addb (bad) js inc insb je je add out mov push ja or push lret inc pushf and sar add sahf (bad) sbb mov daa lock pop add aad fimul nop and and xlat arpl jne (bad) mov mov js add mov cltd std add pusha popa arpl adc (bad) xlat mov bswap pop and cwtl lret inc test xor sbb mov cmpsb into push xor mov push mov fs adcl or aas sbb (bad) push out call mov and out cli add stos and aad push js cmp enter add or imul loop mov cmp cmpl gs fs (bad) add cmpsb push test jp sbb fidivrl pop add inc pushf inc es faddl adc jp mov and add je jno mov iret add (bad) mov daa xor and xor push lret sahf popf sbb in sub das mov add je (bad) mov or in add jg xchg mov and xchg sbbl add and les sbb cltd add jp dec add loopne mov cld pop jl sub jmp dec add pop mov add cmp dec add gs ljmp test push enter test push addb add pop into add and inc add add cld dec in add xorb add and in add (bad) outsl inc stos dec inc pop inc vmovhps push xchg xor mov outsl jno xchg add addr16 and out lfs fildl sbb dec roll ds adc dec or add jno inc dec ss stos add cld mov (bad) push or mov add mov scas (bad) or (bad) mov push push sbb roll (bad) loop repz pop sti dec add (bad) fild xor out mov out inc cmp testb dec outsl add cli xchg cmp out xchg lds in cmpxchg lret jle add subb cmp sub jb fild nop in inc pop out les addr16 sub subl pop icebp call fcmovnbe add scas xlat aas loop push cwtl add pushf pop cmp cs cltd push dec mov shll sbb add mov mov and cmp dec lahf cmpsb jge xchg cmp sub test popf popa pop ja sbb in mov jp add jecxz pop push mov stos jne sub mov jle scas pop adc (bad) jg add jg sbbb sub pop insl mov add outsl inc sbb mov inc xchg call sbbl dec lods sub imul leave jae pushf movsl adc out sub jp je mov inc aam in roll call mov xchg and sbb or inc jmp lret and sbb lea add add and int3 ret call mov jnp,pt push mov lds adc jp andb (bad) (bad) or push rclb cmpsb addl pusha lret jle adcl xchg push pop rorb add pop mov push and cltd add cmpsb jae jno or repz inc push bound add dec push mov pop xor xor jecxz ret fmuls clc jge add (bad) or pop push jge andb outsb das out (bad) nop xchg (bad) sbb or adc ffree jns paddusb cmp pop mov mov (bad) push aad lods ss sti add mov push mov (bad) mov xchg stc jno add pop jb into movsl fisttp and add shrb subb xchg outsb xor push mull and sbbl xchg cmp sti inc lret mov insl pop lea das in (bad) inc sub cld es adcb jecxz std rclb add fiadd xchg jno xor in sbb repz dec insl jo movsl push mov add scas mov mov lea jnp ja fsub pop jb pushf add and push add push push push jp inc adc push idivb push add mov loope cmc lock int adc xchg push negl aad dec or and stos iret or adc in add mov sbb cmp adc je aad mov ret jmp sti mov add xor jno stos add imul add andl push sub xor fdivl pusha add mov test pusha pop rorl jge add jo add dec gs add (bad) mov adc sub ret incb faddl xor loope sbb jge push or (bad) add shrb add add fs add sbb imul sub icebp test sub scas jmp insb (bad) pop mov stos pop sub add fdivrs sub xchg adc sahf aaa (bad) cltd cmp sub inc add dec and xchg inc add mov movl rol pusha cltd cmp jno lods add cmpsl dec adcl faddl incb mov cmc and jp sahf and jge mov jl and sbb lret pusha rolb jo decl mov roll cwtl cmp push lret rorl jge bound je and stc outsl daa add in mov out cmp mov loop add aaa adc jecxz add mov dec movl mov add fistp ja daa mov adcl in imul test sarl adc mov jge adc mov fwait add and popa fbstp add and dec hlt mov jnp sbb push add pop add stos sub add call js jge (bad) add add xor add shll push jg mov push dec addr16 cmp add mov js dec add test and sbb ja jl mov rcrl aam add nop test add jne sbb imul (bad) aas bound and (bad) loop add sub neg push pop mov xchg sub dec imul dec cli lcall or mov les xor popa push lret scas aam (bad) bound mov ret jge stos jmp xchg xor test loope jne (bad) sub add rolb inc es add mov adc daa add fistpl inc cli xchg cmp push lcall mov andb pop data16 add push movsb cmp xor stos sub jns andb aaa (bad) xchg sub pop shl int xlat leave test mov (bad) lret xor in sbb inc add in fwait add sarl pusha fcmovu inc (bad) (bad) sti mov add sub xchg into cmp push jne dec mov out pop pop sahf lds cmc cwtl pop xchg andl inc in xlat jno cmp push and scas or add movsl add int3 (bad) pop add adcl bound adc arpl loop rcrb mov add pop inc add clc and add mov lea lock dec add mov xor les adc sbb mov ja andl or incb negb jg (bad) (bad) jns add mov aas scas stc lahf add bound (bad) mov cmc adcl inc add sarl mov lods push scas jae,pt andl mov (bad) mov test (bad) dec push mov pop xor scas nop aam inc add adc add mov jle sub bound push dec add sar mov adcl imul (bad) mov xor sub add or lock jnp out jae rclb mov push xor mov add or dec adc test pop push xchg orl mov cltd stos mov sub lret loope sbb sub popa pusha add and sub or dec add insl arpl es les cwtl or rol (bad) cmp in movsl rolb flds mov pushf jae mov test cmpsl in movsb sub inc inc jb cmpl dec dec jo jg sub test icebp add out pop mov xorb repnz jo dec cmp iret add and add incb lret pop cli xor jmp push sbb sarb fwait mov leave jle (bad) dec sbbb add out mov cwtl fstpt xlat adc and push std mov daa lahf out gs sbb sbb je out add std xchg add aad sahf add jle mov jl imul mov jmp aaa std add jmp cmp lcall inc pusha (bad) cmp inc jmp stos les sub out fldl sti enter call mov pop cmp data16 addr16 add adc mov push stos adc mov call pop cmp add jbe mov cmp xor pop cld ret xor pusha imul std repz bnd jbe add adc pop fnstsw inc add fstpl or shr xor enter adc out out fld1 iret xor daa loop add sbb dec in xchg fcmovnbe add sti scas cltd (bad) subl add shlb push test shlb push mov jecxz nop or push in icebp dec jne sbb in adc add daa cmp pop xor add adcb jb jne pop pop in xchg out js push dec dec fidiv add mov add sbb aad and hlt mov push pop stos testl xlat dec icebp ret add movsl push and and shr pop xor sarb dec inc cmp pop sti aad add and xor xchg or and xor mov sbb inc dec int3 mov lds pusha rcl xchg sub add in push scas jb int out add and and add xchg mov lods add and arpl clc pop mov pop rcr inc add dec sub mov fdiv mov stos scas dec aaa jo add daa cmpsl (bad) and out dec lods (bad) loope dec xchg clc add pop pop or jp es mov dec jmp add sbb jnp popf mov incb mov mov push and pusha jge,pn (bad) jae add or xchg sbb mov clc outsb mov mov sbb dec push add sbb in sbb pop add (bad) jne add stc int3 xor out sarb jmp mov insl (bad) mov push cmp lds inc sub sub out cmp andps mov lcall add movsb adc inc mov int inc (bad) in mulb arpl fisubl inc jae or je stc incl loopne or repz int inc sbb decb inc out fdivrl stos add notb sub cli rcrl pop add sub leave adc loopne ja lcall jo ret pop gs adc test xor inc neg mov add jl lods pusha daa and mov sbb sub jg movsb xlat mov lcall cmpl mov xchg push imul add icebp sub push dec pop or push fwait xor js xchg adcl push or xchg mov leave jbe add cwtl mov popl sub cld pop xchg adc jo mov and pop sub push cmp add xchg jg test lcall mov mov add pop ss in inc inc (bad) sbb pop out inc cltd sub adc pop cmp dec xchg je add in aas add and xor jl orb sub add ss popa add int push subb jo outsb add rol add sbb mov mov jno inc cmc lods xchg roll ljmp dec lret in mov fnstsw cmpsl add pop mov add mov push cmp (bad) or push lds mov and rolb add in cmpl xchg jl gs inc rorb push lcall mov mov shr push mov mov and dec adc mov xchg mov dec fwait add stos inc (bad) mov push adc inc mov es add lods iret mov jno aas push adc adc outsb mov cmp lfs insb pop xlat add pop jg add dec (bad) add lods sti (bad) jo cltd jne (bad) add addl push or adc add subl (bad) sbb inc jle aas cmp mov cmp mov mov jbe pop push push add stc ss je test scas xorl inc xchg xor mov negb add jbe pop add aam add leave out lret cmp xchg inc sbb in push add lcall fldcw push add and mov das xchg and inc lret ds mov rorl fildll mov fistpl add push lea add mov sub jnp jmp xchg dec adc fildll sbb and test push cmp popf inc push add stos leave add inc fildll xchg jecxz mov sbb shlb int loope sbb adc push lds out out jmp mov xchg mov (bad) in pop (bad) mov xor fnstsw addl add sub cld pop add jne sbb in pop loop mov sub rolb in mov (bad) adc push testl or iret dec fstpl repnz mov (bad) fsts add sbbb pop sub bound movsb fistp inc mov mov and xlat mov push gs sub inc mov jb cmpsl or jecxz fldpi sub stc xor xor sbbl or lcall add and xchg add lds push leave daa fwait dec dec add in das inc dec fidivrl pop add cmc (bad) mov fdivl pop incl mov int in fs add cmp add pop fcomps std xor nop test pop xchg adc jo jmp xchg rcll dec xor pop jge ja faddl mov xlat mov movb dec nop pop or movsl lret out adc or sbb mov inc pusha in dec cmpsb add in and cmp pusha sahf or aad jle cmpl fild sbb loope (bad) test push push std mov mov mov stos enter xchg inc sub and rorb push jle push (bad) push push mov sub sbb xor (bad) jne add mov sub mov jmp out dec aad fsubl cmpsb mov add push xchg dec adc add loope in jbe scas add jo loop lods rolb pop mov pusha (bad) mov and push pusha out cmp mov jl jb cld mov lods push add push aaa fs loop jg jl dec add cmc test xchg sub push jp shr jmp cmp shr dec stos pusha sbb repz cmp in push lods add inc arpl rcrb (bad) insl cmp sub push add mov add push xor xchg (bad) jmp mov cmpsb (bad) fisub sbbl mov mov cmp sbb dec jno and fstpl das jo lahf fs gs jmp add or cmpsl sti ss (bad) xlat ja,pt jle mov (bad) dec cmc add jmp xchg inc outsl dec add jp lahf test sbb pop add sbb and add push push inc jbe lods add fsubp scas adc ret sub ret js add sarb jbe sbb lcall add flds add in mov add mov add xor pushf xchg or xor into divl imul push dec dec inc enter dec and pop int3 addl xchg jo mov push mov andb gs cld fcoml imul and xor jbe cltd gs outsb inc pop movsl pushf add cmc into or add mov lahf es icebp mov aad cltd cmp xor cwtl sbb pop andb in dec iret (bad) xchg lods cmp in inc jg (bad) xor dec jbe sahf cmpsb aam push and pusha ficoml ret add jae fwait popa fistp or pop xor xchg nop sub aaa cmpl std mov rorb les push pop mulb test mov dec add lds pop mov push xor cmpsb cwtl and add jbe rcl fidiv cmp mov jle stc add imul subl popa sub gs lods pop jmp add test dec clc pop add arpl flds and push mov test or or js jl add xor in arpl add cmp sub bts jle fist inc pop insl mov jecxz or and lret in stos cmc xor sahf orl jnp,pn add pop nop sub cmp pusha sub cmpsl mov xlat addl jno pop or sbb xchg rcrl fist fcompl or ljmp popf adcb push shll jo pusha add mov jl ss add (bad) testb add or jnp bsf cli rclb fldcw les imul lock and cmp add jae mov jbe (bad) std xchg mov cli push iret stos add adc jbe add jae repz orb repnz ret mov insb or cmp icebp add fmull (bad) cmp negl sbb jae add pushf xor stc inc (bad) push (bad) mov bound add shll push sbb test add std adc jnp xor loopne mov inc and faddl ja loop fisttpl or jb orl insb dec cmp (bad) add sbb fyl2x insl or mov fwait test xchg test clc mov cmp pop cld lods sub push and iret mov pop add bound popa push xor add pop lods add adc mov lock call adc lcall (bad) movl pushf fnstcw cltd add stos loop (bad) xor mov fistl addr16 adc repnz int push push cmp add pop mov and inc xor pusha adc jbe push add into xchg add (bad) adc outsl cmpsl test add mov dec mov out jl jp fwait in jo nop pop adc test sti push in push jo cmp (bad) hlt aam mov push push or pusha sbb and loopne adc push cmp lds mov rolb mov push push je dec push pushf sub add inc pop sbbb in dec sub pop bound ljmp (bad) and mov clc aad push inc arpl jae jp test add mov push maxps (bad) sti lahf xchg pop loopne mov dec xor xlat push dec daa fwait mov inc ss sub lea stos ds add fiadd pushl negb sarb adc fcompl les mov ss out add add test push testl adc and (bad) push adcl push and add lret data16 add mov aas rolb fwait inc repnz pusha adc pop in dec pusha mov mov mov mov mov fs mov jns add xchg add inc jbe rcl jns subl jo and add pushf xchg cmc mov test imulb adc and aas fs xchg stc mov lods jae jno mov pop dec add jae push push or jo add mov ljmp out add lea push or aas (bad) (bad) iret std cmp push fbstp aad shrl insb stos add add sub xchg or push jnp pop mov (bad) negl jg sbb inc cmp pop pushf add ret (bad) bnd sbb inc or jno push mov add testl adc add scas gs dec dec xlat inc jge andl popl add pop dec imul mov inc fild mov popf jl movsb add cwtl push mov mov add xchg mov pop sahf inc inc nop push stc cmp add cli jns incl sbb pop dec movsb jl leave pushf pop faddl jne lret mov jl add mov flds shr dec inc cwtl sbb testb inc mov cmp push rolb loope hlt jg pop test dec (bad) jae mov out push (bad) jl dec push xor ret mov int popf ss mov xor sti mov cmp push pop jno mov or jmp jo roll pop xor fist int daa cmpb xchg testb pop dec test sahf jecxz adcl sahf dec fcmovbe mov popa loop js mov cli inc jge popl add add add add fs in sbb pop lahf mov mov dec bound xlat testb xchg adc in fild pop shlb mov jno jl jae jl sahf cld out add sti sub cmpl insb jl xor push fcmovnb addr16 fidivl and jb sub xchg add in aaa mov in stos cli dec cltd xor sub test sbbb je inc sahf shll sarb jb mov lahf dec pop pop mov imulb add adc fild pusha cmp and xor inc push andb je sbb es mov mov data16 push sbb mov add mov or lods add sub xor scas sbb cmp add jg cmp in ja push xchg rcrl inc xchg rclb xchg push mov add test test mov jno push sub and push test in out mov psubsb (bad) aam add jnp loop outsb adc mov mov cmp jnp insl xchg subl push sbb shrl add rclb int adc add xchg inc push insb and stos in jo fwait add sbb add lahf cmp and inc shl xlat fcomip cmp aas dec fisttpll loope popf test add aaa test popf imul int3 orl mov add insl inc jnp mov roll add mov cmpsb popf jo vpmulhw inc jl pop int out add (bad) cli insl (bad) aam addl repnz mov ret jb rorl outsl xor lods add test sub xchg (bad) push ljmp ror les in xor pop mov dec lods add out out (bad) add push jge test loopne (bad) pop in add jb xchg int add lahf fcoml mov iret adc lcall out sub sbb dec int into add fld1 and scas nop repnz sbb aam pop pop xchg cmp or push add fistp inc push jle xchg add nop push push add (bad) sub xchg (bad) sbb inc ret mov xchg fildl icebp shr stos add in lock test jae pop (bad) nop mov out mov xor add lock mov mov add nop pop lcall mov fbld or bound add pusha add or push sub jo inc cmp add jle adc jae add xlat mov sub jns dec movsl (bad) repz sarb inc iret jnp jne test add movsb jns push les pop shr push cmp shr mov add stos (bad) cmc arpl pop xchg fsubrl sbb mov push add iret cmp in movsl push icebp lcall sbb movsb jbe dec jl repnz call test dec inc fbstp add jmp add ljmp mov jmp mov inc push dec push test lds test mov repz mov mov nop addl sub bound add pmaddwd xor mov out add scas dec cli mov adc push out jb jns xor cmp adc push mov add enter setnp lock jg aam sti jp jb stc cmpsb (bad) mov out div mov add mov js js adc out fs inc xor cltd popf dec lahf mov scas sub mov pop mov (bad) pop jmp fldl les jo add into aaa adc mov sbb add mov and aam jo pop sub sbb sub push xchg adc xor inc or cltd jmp fwait int3 push in fwait addl in int sti inc cwtl xchg pop inc jl jp sbbl (bad) fsts ljmp xchg out mov add leave ss stc movsb pop aam lcall jo fstps shrb sub icebp add aaa lock inc test dec cltd jno sbb xlat je mov add fidivrl mov stos jp dec test iret jg pop fiaddl ds mov pop (bad) dec sbb mov inc and jg add js ficoml movsb mov scas jne xchg (bad) js mov addr16 cltd and sub dec mov and xchg rclb (bad) cmp add lahf test xchg xchg fimul out fcoml inc fnop incb add stos push in bound pop add dec push lods ja pop mov mov out mov sub add pushf mov cmp jp inc lcall cmpsb mov jne das mov loop fnstsw xor add pop fsubrl add (bad) das lret inc fiaddl push xchg mov (bad) xchg fiadd push pop pop inc adc rolb sbb dec dec mov popf xchg add fmulp fildl push mov mov pop loope fstpl push ret add stc mov add push fabs mov mov inc mov and sbb push mov test lods int inc inc or decl cs pushf addl popa push inc (bad) add mov orb shrb sbb sub fsubs push add mov popf insb dec mov push ret dec mov iret lret jns jb sbbl bound fldenv test in popf fstpt (bad) add or add lcall cmp adc mov or shll sbb xchg dec fisub xchg jo test mov add inc and push mov nop inc add xchg jecxz es and inc enter add dec pop sbb bnd daa ss mov cmp add adc xchg add icebp test sbb inc aad dec int3 rcl lahf leave mov push push xor pusha jge arpl mov fstenv dec bound arpl mov mov pop pop mov test subl loop loope dec push lea sahf xchg mov xchg mov inc es ss (bad) sbb jns mov push mov xor push lea push inc sub in inc jg fs (bad) jno push aas add dec and js push cs push and sbb out ds scas add std gs cld add test jb aam dec in mov lea loop add cmp adc or push mov ja add rcll pop out sbb add cld pmulhuw push out rcll repz push and outsb mulb dec inc fcoms les jo push add iret adc sbb je dec inc xchg in pop (bad) (bad) mov and xor jp sti jo xchg adc add mov mov add push mov scas jno add ds sbb dec ljmp add sti sbb out popf add xor push jecxz testb arpl aad repz add cmp popf hlt out mov enter adc xchg cmp jo dec mov jl inc add movsb loop pop test int or stos add lcall cmp add dec mov les cmp mov daa sbb adcb mov sti mov sbb sub push push jle add dec mov add scas mov mov in push mov mov add jmp mov lock jno pusha into mov imul jb out cmp outsb dec fsub (bad) pop incl mov adc add xor or dec mov add jecxz or nop in getsec inc imul jl insb roll ja je insl je lahf pop push add cwtl es jge add mov mov cmp cmc mov (bad) inc shrl dec lods (bad) in add gs xchg inc jge or movsl ljmp ss (bad) ds fadds add sbb pop das (bad) pusha lock mov xor out sub push mov fiadd add mov dec je pop xorb mov jo mov jp mov push xchg cwtl push mov loope inc pop cltd les gs sub mov rolb jl add xchg cmpsl (bad) xchg (bad) icebp add xchg hlt mov int3 sub jmp outsl pop incl cmc shlb testl fwait sbb (bad) mov or mov mov rolb clc cmp add lcall mov xchg push mov add ljmp jno ret add mov add in das xor push out js adc add (bad) add add test lds xchg cmc adc inc add fwait ss pop ret xchg ret mov jmp sbb lea mov add xor enter cmpsb sbb pop jbe mov pop or scas int xchg stos push add push (bad) repz jne sbbl ret jae mov adc push pushl add cmc std into fwait xchg es mov cs fidivr add inc in mov mov add cld leave add ds cmpb mov push cmpsb sub lret mov adc sbb dec and insb push out cmp push add inc daa xchg sahf xchg add xor (bad) cmp int pusha daa mov pop test out add scas add add or xor sub les out mov out ds movsl inc ljmp fisttp je add pop add loope push je xor (bad) cwtl dec lcall lahf jb fistp add jmp pop add pushf aas add aaa into lahf std jle leave or loopne push iret jnp push mov cmp sub sub adc mov dec and jbe mov leave inc add aas add xchg pop jg adc sbb cwtl add sbb insl cltd sbbb repz ficoml or adc cmc arpl ljmp les add push subl dec test lahf sub xchg lret add es fldl cmp stos stc das daa push lret popa ret lcall sub add test mov test add les add daa sub and insl (bad) mov fwait add enter scas sub or add cmpsl cwtl dec cmp add (bad) scas add outsb inc testl test add mov adc repz cmpsb ljmp and jb dec push (bad) xor leave mov call cmp (bad) scas lret daa (bad) popf push add jb dec jmp inc add mov xchg cli repnz and mov push mov push mov add xchg dec (bad) addb pop popf jbe mov hlt push aaa ret mov dec inc dec xchg scas ss mov xor ja xor push jne mov xor jb aas mov in daa dec imul xor adc adc xor or js into xor fiaddl cmpsb xchg out adc gs outsl dec add pop xor jno push adc jp mov (bad) pop stos subb out xor or popa movsb cmp lahf adcl ja pop test scas pop iret jbe rolb xchg mov dec andl mov xor jbe mov sbb enter push ljmp add adc adc inc inc popa ds mov or pop imul cmp pop and xor adc xchg sub sub sbb lock clc add mov jmp es xchg add stc loopne lret ds mov mov add sub add jl push xor mov cltd add pushf rcrb dec xchg add jae ret add add add inc mov nop (bad) mov enter lret dec sbb xlat mov add pop sub sub lods pop rolb and xor add sbb roll adc cwtl cs pusha (bad) insb jbe add dec and jae ret add xchg test cmp push fwait xchg jno cmc dec movsb in mov cmp out rcrb stos add sahf lods lds cmc test jp,pt mov xchg sub xor push ficompl rclb gs cmpsl jno shl fildl popa insb sub xchg inc pop mov add jnp add in sahf ss sbbl push out cmp out movsb pusha rcl jle inc xchg inc cmpsl pop and fcomps ljmp jno fwait pop jne mov dec jg (bad) ja or lret mov je mov mov nop mov jecxz jecxz dec adc sbb adc cmpsl js mov xorb lds flds and repnz pop mov pop add out jne mov test in push jo stc inc jbe,pt addr16 (bad) xor aad cld dec ja test jo push adcb pop in pop jns iret scas out mov ret jp push mov ds add xor jns andl das adc data16 push daa xchg inc arpl adc push std sub push xor mov dec cmp arpl lods mul jg stos pop sub imul add add pop inc push scas nop cmp add paddusw js adc mov xor lret xor inc scas ja ret mov pop push cmovo and js add sahf add shrl mov jb cmpsb add mov mov mov jecxz in leave xor xchg js add push shll lret fstpl loop (bad) rorb xchg mov add inc test add mov inc or and test jnp and loopne jle rorl add push popf pusha fisub xchg mov dec imul aaa mov jne sbbl jmp or add (bad) lds mov adc adcl add popf in test clc sbb push mov les mov pusha movsb cmc xchg pop fisttpll loopne addr16 fidiv dec (bad) xchg pop xor or xchg addl loopne jae shrl add loope xchg sar add mov pop es call subl mov jne push pop fucomp adc nop leave or add or cmpsb pop sti xor mov dec xor (bad) (bad) push adc pusha push or std add mov add sbb pusha loope roll or xor add adc pop add outsl or mov mov mov fneni(8087 iret add add leave mov jnp orb lret jo movb shrb fwait jp aad test push das pop je rsm jp add data16 fldt jnp cmp xchg sbb add stc pop jmp aas mov add mov and orl xor sti adc loop and and push jg xor or or mov add int3 push xchg xorb cmp add dec sub sub sahf add stos adc ss jmp add popa movb dec adc cmp add pop mov iret push sub les movsb add jl loopne mov cmpsl loope inc stc or mov and add sbb in roll outsl push andl jle (bad) (bad) sbb mov pop stos ret add js fiadd hlt lds add add or leave push iret and sbb jne add enter xchg mov (bad) es sti sbb add popa xchg and js push inc or jnp add cwtl rclb fmulp sub mov fistp dec mov push int3 inc (bad) sub cmp bound popf ret jns shrb fdivl and pop gs add pop out pop sub hlt rolb sarb or push pop cmp fstps inc cmp add and and test fs cmc js adcb dec jle addr16 (bad) (bad) jns fwait sub xchg lock insl outsl rcrb xchg add inc mov mov pop jecxz mov stos or dec inc int3 pusha or clc xchg or arpl pusha sti iret inc lock cmp cmpl (bad) popf loop orl sti mov jo mov mov daa je lock daa jae stc jbe orl (bad) push pop cmp movsl or push pslld mov daa testb out ficoml add jnp shl ds fwait orl push test pop pop pop push in aam movswl jge or dec add cmp add mov xchg cmp or arpl mov add imul mov add jle pop iret fisubrl xorl ds sub cmp jmp inc sti stos js add or dec lcall iret dec sti sbb dec push (bad) es addb insb inc test or fisttpll pop int or arpl mov lcall sub jnp stos es in aas add add test fstps cs call inc xchg jae les add and jnp jnp add pop sub je jle (bad) sub xchg add or popa cmp add jb jl loopne cltd sub or lds adc jb add clc hlt mov mov xor push sbb (bad) or arpl and mov popa insl cmp xchg push jg nop adc dec in xor push lods cmp add jge cmpsb mov cmpsl add or xchg (bad) mov test subl add fsubl or movl imul popa xor mov int add mov mov mov dec mov sbb stos out adc pusha clc jb popf cmc inc shrl adc mov push mov movsl fmulp pop je scas js subl movl shr pop imul (bad) cmp fs add inc ljmp and js xor and push push xor add jno sahf das xor add xchg ret xchg mov xchg fcoms shrb outsl adc jl in mov rolb in adc sub (bad) hlt andl inc cmpsl pop jns mov inc mov fwait mov aam (bad) dec xchg mov cmp ds stos popa xor in mov inc adc push jmp mov cmp pop cld pop mov mov add sbb mov (bad) sbb outsb scas lahf add sbb push stos or mov and push adc add (bad) daa (bad) mov xorl test add inc jge,pt adcl mov pop add sbb xchg pop pop dec into std inc adc add adc push cmp add cmp ljmp add add outsl inc adc sti and js in add enter mov pop lock add xchg inc mov xlat fstpt push push inc ret adc sub jne sub loopne scas xorl gs jp mov dec mov insl leave mov pop nop inc push arpl xchg pushw xlat (bad) std and cld aam lcall inc orl popf ret add imul mov aaa test lret test test hlt ljmp inc icebp sub sbb test add call xor inc cmp cmp mov push int add stc rclb in inc in (bad) jge xchg imul mov add jmp leave ficomp push push js lcall inc add mov fs or test dec ror dec push push push mov mov mov test jmp add cmp inc imul pop data16 ret jno icebp mov sub ds cmp mov inc sbb into sbb mov sbb test cli mov inc popa rclb jl cwtl mov jmp in sbb int3 lock out mov repz ds ja adc cmpb sbb clc sbb jp add das or add idivl or popf or pop outsl mov cmpsb mov sbb xor xor add popa push shrb lret stos or cs sti cwtl andl fild add idivb aam push mov sahf jns int3 pop add cld inc push add loopne add out add jae fisubl imul jne add clc push (bad) push lret xorb mov lcall cmpsl insl pop aad mov mov inc and in sub pop add icebp sahf add test jl sub in inc lds jno add enter iret mov push xor dec fbld lea aam fwait es add or lret pop es add (bad) bound cmp mov xchg xchg scas dec sub outsb sub ds dec cmp jmp inc add lea in adc out jb andl mov xlat and stos jne sub mov adc jg les dec xlat add pop add mov xchg fs sbb lods jb mov add rol int sub cmp add push aaa popf add xlat imul mov add and pop add lcall addr16 push jbe je xchg mov fcoml hlt call stc negb cmpsb outsl jl push pop mov mov pusha ret push icebp add pop shrb add sti xchg aam jmp mov adc inc lcall movsl arpl fildl mov mov outsl mov jb adc fcoms add push dec ffreep jmp adc mov call loope add rcll cmp add outsb cmp insl pop adc fldl aad in arpl xchg rcll dec popl fnstenv add mov adc int3 ret inc add dec pop jno in (bad) add mov fs loope pop and cli push insb out push testl xchg (bad) cmp xor jns lret mov add adc jo aas mov bound mov inc adc movsl sub jg and shll addl inc iret pushf aas add lahf mov mov js ss fiadd inc test and inc push xchg pop xor inc xlat aam mov daa cli fwait and std dec dec subl cmpsb (bad) out test rep cwtl jle es add insb cmp in pop addb cs push sti arpl xor inc subl dec mov sbb mull mov add push mov ret pop add in sbb dec inc fildl notl jmp sbb sbb in xchg adc sbbb inc test aad movsl dec add adc cmp adc rcrb mov popa mov ds xor mov adc decb add mov push enter push push addl jns call (bad) mov (bad) ljmp ret ja ret xchg fwait iret push inc popl inc dec cmc mov jge xor adc xor loopne pop iret sub hlt out pop frstor push cld dec shr or mov mov lea icebp mov (bad) std add fild loop (bad) xor xor clc sahf movsb jnp push push pop xlat lret add sbb lahf cmp scas pop into jne jnp inc xor sbb add mov mov jne mov cmp (bad) aas sbb lcall cmp ficomp add je popl pushf hlt or decl pop aaa andl jb outsl add cld or rcll inc inc and mov push add xchg lds pop xchg push jp in or sbb test xor cwtl cli mov adc mov scas pop add sbb loop mov in jnp,pn int jge mov jo xor or repnz add sub xor inc imul add fstpl je repz add sbb cltd inc outsl jno xchg push pusha ja pop add (bad) jo cmp fistl cmp jae (bad) pop mov into enter sub adc xchg add add out aaa push lock mov das scas fcomps iret cmpsl cs lods xor push mov fstpt push std hlt sub push xorl add xor add cmp imul xchg jo testb sbb in sbb leave xchg sahf jae jbe ret add pop mov inc pop add push faddl sahf nop popa sbb sti or cmp sub loope hlt mov lock add fwait cmpb push cwtl add add sub sub jnp pusha jle jmp mov outsb mulb sarl or addr16 popf jne es inc add fldt mov xor in test cmp or mov dec aas adc sub jo dec xchg pop xchg in loop adcl data16 addl add push and scas add dec aad data16 pop add cs decl mov mov or cmp cmp mov lahf scas pop xchg or add mov add mov aad add mov inc leave xchg outsl ljmp add xor add lcall xor dec test scas jl add into and or sahf sbb inc aam adc fcmovnbe or shrl inc sub sub cmpsb push push mov rcr add pop mov sti shll mov enter jb ret andb call xchg notl scas push cmp add movsl movsb sbb jne adc test idivb sub out xlat add dec rcl inc jl xchg mov rcrb hlt xchg loop jp cmpb movsl mov sub push pop cmp inc add jbe jg mov inc add sahf xor adc mov rcrb push js cmpl xchg fwait inc ss in add loopne movsb dec jge add add mov or xchg lea xchg leave js mov shrl add xor pop add popf dec inc lcall inc leave jo repz ret mov test and je xchg cmpsb and ljmp sub (bad) and and sbb mov jae jb adc lods ja rcll adc in mov inc pusha (bad) into loop add cmp ljmp and les pusha je adc outsl into (bad) lea jle (bad) in add cli pop repnz rclb lret les xchg inc stos call (bad) into add and jns lcall div into cmp push popf sahf or or xor pusha nop jnp add push in mov adc lea psrlw fnstcw add (bad) testb jne (bad) ja imul add popa sbb sbb and jl dec call imul add xor mov test mov inc add out mov lods pop pop push inc mov sbb adc lock cmp and dec test push mov cmp jl add inc push ret cld and div sti inc ss je mov inc test dec sahf fiadd jge xor add int push mov fcom imul push add stos pusha sub subl sbb fcompl call das incb and mov ljmp fxch inc (bad) add je js cmp lret sbbb xchg (bad) hlt mov cmp add jne fs sub mov bound mov pop add mov add gs and pop mov inc ret push insb mov mov sarl xor notl push add pusha test lret (bad) ja add inc adc mov in xchg (bad) hlt dec sub xchg pop arpl add mov les (bad) push fnstsw inc loop ror fsubs and inc xor popf rcrl aad rorb or out js fwait out fs sbb and bound jae data16 mov in andb pop mov outsb (bad) pop add xorl lods sub inc add dec xor jo sub pop aad pop pop nopl cmp mov enter fistpll (bad) add xor push dec fidiv dec cmpl cld loop xlat sub sbb das pusha test dec add and mov add push movsb insl je sub nop fwait inc or je sub imul sbb xchg adc add inc lods mov cmp push pop or iret icebp mov sbb aad fstpt shl add mov xor add rcrl inc mov pop int push pop add cmc sahf mov xchg add fldt sbb cmpl add or fisubl adc add ds out mov xchg imul movsb rcrl mov (bad) hlt or lods xor dec adc es push jge inc xor scas lret push and xchg push add pop and addr16 sub xorl subb cmp sbb jp xor scas mov push stc pop aaa (bad) lock inc icebp iret out add sar xor add jb fsts ljmp lret and add data16 adc mov push movsl add jae fwait sub testl sbb add insl fs push aad movsb add mov fistpll test xor push jno nop mov cmc jo (bad) xchg add pop inc dec jbe inc pusha popf add push aaa and push push mov add add fiadd test std loopne fstpl pop sbb jae fwait jb add sub arpl movsb adc aaa pushf inc sbbb lods fcompl lea mov popa jo sub leave iret mov lahf sbb sub ss add dec adc cmp aas add fldl movsl out cmp jge jmp int add pop (bad) jo or and mov jne pop pop adcl fstpt cld fadds fwait pop mov add mov jne add (bad) push mov mov add mov push xor addb xchg lret push xlat add insb inc lahf iret mov pop add fidivl jo nop push cld inc jb add push out sbb xor inc jecxz jnp ja in arpl sbb lret add push int3 stc (bad) push gs xchg add xor mov ficomp (bad) cmpsb push and pop imul dec in dec push mov inc mov hlt addl shll cmp fwait cmp add dec mov jno mov add mov add jne cltd sti in (bad) pop mov ss xor add popl and push jmp mov add add inc dec in sbb add cmp movsb inc ret test std adc mov das mov add int3 ficompl cli mov jg add scas repnz lret mov ljmp xchg mov mov mov (bad) add gs stc pusha insl ss ljmp jmp cwtl jmp lock xchg sub in push jge in mov dec mov mov inc pop jl add cmp inc push sbbb bnd mov jecxz add sub rolb xor pop movsl adc call data16 dec add aas mov add clc (bad) repnz inc cltd daa add stos xor mov fdivrl call out lret cmp inc xchg popf outsl mov sub adc xor jnp,pt add rcll lcall jb hlt fnstsw cltd jno add cli dec jne xchg mov pusha imul ljmp (bad) (bad) mov cmpsl add sub sub sub addl fsubl add mov (bad) das movb or dec fidivr and jo add mov xor hlt inc lea or add jmp add fsubrl leave ljmp add sti push sub pusha inc or test fsts call cmpsl jne add pop add (bad) mov loope stc das ror jnp jne out sbb jo xor stos jge dec and idivl xor lahf add shll inc mov icebp fistl leave lahf lcall or into add cli std outsl mov sbb fst or add add (bad) push inc jno jge add stos pop in lcall mov mov (bad) addr16 fcmovnb add popa push lret addb adc add ret mov pop stos jle sbb jl out mov lahf lock int3 push hlt add ret dec rcrl test loopne pop sar cmp mov scas fs outsb out inc mov add in idivl aam ds push add in cli leave cmpsl in sub push out pop out fidivr xchg es pop (bad) jb pushf add lds jle lret xlat add mov arpl or stc cmp push add lret inc sub or add sbb inc (bad) je pop (bad) (bad) in add jne jl dec mov out jg addr16 mov and fs mov sbb ljmp ret push outsb mov add or (bad) negb pop cld into xor adc cwtl rorl or jbe sub movsb xchg push jae,pt push or pop mov jo inc jle (bad) icebp add cmc fs test push pop pop push add jns jmp and insl cli and push cmpb jg imul xor xorl ds xchg lret add repz rclb xchg jae or hlt lock mov add cmp out pusha cmpsl stc mov loope (bad) dec or mov outsb ljmp xor add aad jp in aam (bad) xor andb dec stos clc lret xor jne fdivp xchg jmp incb mov lds jns add sti or sahf aaa into add and add fsubr push lods push rcrb push or clc jae add mov dec sbb stos add dec mov std icebp aas (bad) push in test add inc imul (bad) mov or aad sbb push (bad) (bad) (bad) xchg lahf mov add or inc pusha cmc mov out xor (bad) mov add xorl data16 les rcrl (bad) sub stc jne test andb sub xlat pop out cs sbb in (bad) mov insb add add subb xor or fistpll sub daa pop je mov lods inc ret xchg xor push out xchg lsl mov fnop jb jnp into adc xor cmp add xchg rep mov add outsb stos pop xchg push lahf ljmp lods xchg or test pop stc es orb xor push add push pop jecxz (bad) dec xchg add into adc scas jle jmp stos add out aam popf push push ret mov pop add dec inc arpl sbb add sub orps lock push aad mov add sbb mov outsl imul in jo add and popl jns push mov inc mov mov cs sub inc mov sbb mov adc xchg popa adc pop pop sahf mov inc mov mov ss nop fdiv xor xchg inc add and xchg cmp insl test jb add js lock xchg cmc cmp add mov mov dec jmp mov xor sub outsl xor jns pop in je or dec mov add mov add ret sub es mov leave or repnz rorl (bad) aam and orl add jecxz pop dec adc fwait push add test scas mov push dec sub inc lds scas mov add mov cmpsb cld mov jno add dec sbb jp pop jbe add mov jb mov cmp xchg nop sub jp xor lret ret jae pop add (bad) xlat bound cltd or xor adc out add stos int pusha lret sub mov jbe mov mov inc cwtl sub aam add xchg sub dec add bound ja jo add shl add pusha lods xor mov or xor cmpsl negl pop add call add popa adc insl mov adc es fwait and mov aas shlb jne push mov mov inc jns add loopne jge mov mov orb loope sub aaa in jp jg sbb mov test lock jge add test int3 push adc and inc je aas dec stos inc adc mov addr16 mov icebp pushf (bad) xchg xor xchg scas xchg loope inc inc lcall pop or xor pusha rcrb cwtl and pop adc sub push das cwtl or add out push imull out (bad) in xor pop add fwait lods ss add iret add int3 push dec hlt fildl cmpsb push mov (bad) add mov subl mov stos notl movl sbb add lds or sbb xchg jae movsb pop js mov (bad) pop jbe pop sub pop les sub mov into leave mov insl add clc add mov test arpl test repnz leave lock pusha sbb inc icebp sub push pop cld lahf inc dec push test movsl dec inc pop dec (bad) sub add rcl mov mov xor arpl add movsl mov adcl mov bound mov fstpt adc dec mov test movsl cmpl push add es or sbb xchg sub jg xorl in pop and pop mov add subl lods repz mov adc lcall sahf jl add inc mov lcall ds incb adc arpl add es or adc add xlat dec lahf pop fnstcw add int outsl in or add mov mov adc loope (bad) xchg cmpsl adc test xchg dec jo add ljmp add lods sbb push (bad) xor xchg push rorl fistpl ljmp push pop and das dec mov (bad) out mov pop daa clc add fidivr push lahf add jae jb cmpsb pop subl je xchg andl int jg jmp movsl or cmpl jp aad jae aam jecxz add jge and mov sbb dec paddq lods inc push pop xchg dec incl das jp idiv leave arpl cld adc stos adc mov int3 ud1 mov and insb ljmp jae dec lds fiadd scas (bad) sub fmuls loopne test cmc adc lods jo push scas xor and cltd fistpl jae add lock (bad) pusha sbb testl aam leave adc xchg jmp lahf mov aad out dec cmp and (bad) call pop lea and sbb (bad) (bad) imul mov je lods mov dec jge std sub data16 ret add xchg mov mov mov xor out dec rorl das adc sbb mov sub add addr16 sbb (bad) repz scas lret sahf stc das popf daa inc cmp xor push repnz cmp out les add das dec mov jg xor outsb enter rcrb stos pop xchg stos and icebp fwait add mov cmpl jae add dec mov cmpsb dec jp add fidivrl mov lods pop rol inc xchg xor mov jo (bad) in push nop xor cmpsl and clc push and jae and jnp mov add cli xlat psubusw jle jge inc (bad) into push adc mov xor or (bad) inc xor je dec testl mov jno dec fld incl adc jns sbb aas data16 lock or rcr xchg xor mov in add xchg sub in push adc mov jo xchg xor mov add (bad) repz sub adc aas xor cld adc mov mov add adc push jns sub loop paddq daa sbb cmp dec cltd jmp xor cmp pop mov pop sub test adc cmpsl arpl ret inc fidivrl xchg fsubrl mov or xor (bad) jbe aaa lods mov mov inc jp add push mov sub nop add arpl leave mov xchg dec add mov mov mov fstpt xor mov dec mov xor dec mov mov push xor sbb cmpsl pop cs sbb pop test add push (bad) jge popf adc int scas cmp lock jl mov mov sub sbb mov inc jno inc pop add xchg insb ret scas mov push stos xorl and aad in mov mov sbb stc lahf dec dec js mov xor mov ret cmp mov pop pop add sub dec jne xchg inc xor dec jo adc addl adc mov cs addl arpl dec add jo and dec cli push add les pop icebp mov and dec mov add and adc or mov pop stos fcomps mov jmp es jle fs rolb scas in lods add mov mov dec popl push stos out iret xchg decb pop push sbb mov xchg (bad) mov mov push add or test add pop pushf xchg cmp idivl addr16 xchg dec add mov arpl push nop sub decb iret or lahf ss xor xchg pusha repz pop mov test or jecxz xchg mov out in push (bad) jns loope xor jl pusha (bad) jge sub or push and in addl sub cmp mov or inc add scas mov pop (bad) cmp mov mov cld lahf lret add roll int inc fs dec jmp mov js ficomp es cmp incl xchg popf cmp add push out cltd add pop sbbl dec dec fidivrl add fisubr push or add scas nop dec std adc arpl dec popf and (bad) insb pop add mov shrb adc fdivr jbe lahf mov sub push push leave cmp fwait loopne ja push xor (bad) aas lods test xchg popl jp ret sbb add roll cmpsl jae les mov and jp jg movsb add add rorl insb add gs sub cmp xchg test push lret scas mov mulb or jmp ror pop and add or and or mov jmp mov inc cwtl xchg add test lds fstpt xchg roll jno mov xchg lcall pop jbe push xchg push fistp (bad) retw mov push and dec in stos mov sbb addl lcall jo push ss xor fadds or add lods inc sahf adcb fdivrs insb add add movsb insl fstl push sti cltd mov std push lds repz sbb add mov xor in iret std fistpll (bad) lahf xchg push push mov cmp add mov fcompl jns adc flds mov decl add rol arpl (bad) dec lock push add sub cmp rclb test xchg adc test repz es sbb jp mov dec xchg ret dec cmp mov lods fstpt dec sbb adc or lret add enter add add dec cmp pushf (bad) stos sub mov jno (bad) pop cmpl push or sub mov or jp rolb lahf inc insl pop ret sbb add repz xor mov cmpsb add mov sbb popa or push add xor lret jecxz add rcrl dec enter arpl mov (bad) inc pop sbb add fidivr inc mov fwait adc push xor adc into push add cmpsb jmp das jns adc jne addl je mov add cs sbb test jbe dec mov push (bad) and cmp adc add lahf pushf lods cmp xor inc int dec nop cmpsb bound dec cmpl sbb mov ljmp jle aaa add push fisubrl gs scas std push sub lcall xor addr16 add aad out add or mov sub insb (bad) out add hlt mov jb icebp sbb repnz pusha enter test cli das cmp ss clc sub arpl loop lods xor adcb fnstenv out pushf aaa jle jns xor rol xchg les cmpxchg add lods add aas xchg aad push cmpl adc jns add popa lds pop in adc add dec add inc adc xchg orb cmc nop cmpsb push addl (bad) loopne (bad) in (bad) add (bad) dec mov mov (bad) sub mov dec jp cmpl out adc movsl dec repz adcb xchg jbe add push cmp sbb (bad) pop loop icebp dec les pop loope outsb add xor xor loop ret stc mov add cmp les je fdivrs pop pushf jno xor push mov ja (bad) sub add pop popf negl stos (bad) sbb mov cwtl sbbl rolb fildll cli ficompl cwtl jg jmp pushw jge sub add jecxz dec rcl and jp addr16 jb fiadd xchg mov aaa jecxz dec and notb mov dec cmp enter mov (bad) cmp jge push or fbld inc aas jle test bound inc xchg je inc add pop pop (bad) jne push (bad) das aas cmpl aad jp inc sub add cmpsl popa xor out jp fstpt es adcl in stos mov mov fsubr inc xchg jns adc jnp mov add mov loope add pop call outsl cmp ljmp add inc cmp cmp pop jno rorl or xor cmpsl add inc out sbbb es sub sub mov (bad) cltd xor pop fisubr inc mov or insb sub adcl data16 mov mov push mov add lock add cmp fdivp jno fistpl aam add movsb inc negl ja push add cmpsb pop (bad) imul lea (bad) xor sub push and aas mov in mov imul adc mov mov inc scas rorb mov jg gs lcall mov xor jnp js sbb mov mov sub sbb push lret cmp test das aaa xor add divb scas sbb sbb popf jnp adc movsb mov and xchg ds outsl mov push xchg pop clc call pop js ret cmc push xchg cmpsl push fisubl and jnp jge inc (bad) push int add mov fs xchg mov (bad) pop sbb add mov mov mov mov hlt add pop aas xor orl enter loop add sahf jl pop shl add xchg nop push cmp jg pusha pop bound jmp push xchg leave and jo mov push stc sti mov add sbb js icebp xor mov movsb pop and add xchg ret mov jmp xor ja jae dec test xor mov mov and test insl add jne cwtl scas clc mov sub xor xchg jb daa je (bad) dec cmp and (bad) xor mov dec addb push ror callw mov cwtl repnz daa push adc popf adc xchg add insb mov movsl mov decl mov push (bad) xor aad iret adc xor cmp sbb jl add sti ret mov dec outsb mov push das fwait add xchg shl add jmp add call (bad) mov push sub je inc flds mov das pop jno lods lea xor mov insl inc flds int inc mov sub cmpsl add inc xchg sldt mov mov sbb outsb add mov xor es subl mov jns xlat add pop pop push xor int3 add sub or mov xor mov jmp ljmp jbe mov imul pop es cmp pusha add xchg sub inc mov xchg loope inc mov or imul mov xor xchg pop in ss dec pop into mov xlat js add sub sbbl sub lahf add push add daa cltd xor xor add gs push dec jbe scas jecxz adc push adc fild add divl add rolb pop sbb and ja jl,pn loop inc adc ffreep out push icebp bound bound out testl mov cld xchg inc into cmp inc inc idiv pop mov scas subb adc jl add jle div fcoms add sbb test jg daa fimull add loope ss rcrb cmpsl add push jl pmulhuw das mov sub push xor jo test movsl sbb mov (bad) push enter xchg add push xor add sbb out lea (bad) mov sub and and ja sbb lock repnz adc fild sarb mov shll xor xchg sbb call sti les push xchg test pop xchg mov scas (bad) jns inc pop dec les sub clc mov mov mov push js jle add inc aas ja mov lahf inc out mov fisttpl jmp les sub rorl ret xorl rolb and clc sahf push xchg jnp jle arpl push and loope sbb pop fldl dec rsqrtps adc pop (bad) jo xchg leave (bad) pop pop jmp ds outsl dec add shll jns add push fidivl push jb mov bound or push test dec cmpsb divb idivl popf lcall sub je icebp jmp movsb fcmovne adc cld adcl inc mov xchg add out pop sar adc inc and pop popa and outsb fstpt xor fwait xchg shr and (bad) mov mov das pushf mov dec cmpl movsl daa mov iret rorl pop cltd lods xchg add repnz push int mov jae bound out sarl sbbl sub sub add in xor rcr sbb pop js popa stos xchg push shll cmpsb and test loop cmp xor mull movsl cmpsl cmpsb ret stos es jle jns inc pop inc push add loop adc sarb mov (bad) or roll add (bad) dec popf add push pop push cmp pop test mov add fild lds add lret inc mov xchg dec int3 push xor mov pop pop pop jmp add rol push fadds cmpl frstor ja mov pop mov (bad) dec adc pop add nop pop fwait ja mov and adc cmp enter push push ret inc in jecxz push roll les adc adc out add enter imul mov jo push adc or jbe mov sub loop inc sbb flds (bad) mov fs (bad) lds add jmp inc (bad) pop rorl mov or ficom add cmp cmp add push inc jge cwtl addr16 loope xor sub fs cmp adc inc lcall mov outsb push inc cmp xor inc add sbb aam and fwait or enter aad push add sub add mov roll jg lret jmp inc insb jne sti add test sub aad fcomp out cli push mov xor repz dec or adc aam xchg inc adc jnp and add adc test cs add dec cmp xchg jae add aas mov ss xor push or jne aaa push jl sub mov xchg inc int std xor push divl and movups mov pop mov push add out ljmp sub sbb inc xor fwait cmp add int3 int add or ja mov pop adc shll pop (bad) into fildll xor (bad) add inc mov add mov sub inc gs roll call sbb cli inc xchg les ret xchg sbb ret ljmp xchg xor cmp or out jo push imul jmp or inc add mov ret sbb outsl testl (bad) pop or add lods add cmp ret repnz pop mov icebp jbe data16 add xor addr16 add inc sub add stos mov subb lret cli scas adc cmpsl dec adc rolb or xor jecxz repz shlb jno ljmp push inc sbb xchg pop inc popa add and psraw sbb std add stos imul fcmovnb add sarl dec fisttpll ficomp xchg outsl adc inc adc add (bad) ret movb dec shl cli mov mov iret sub cs cmpsl dec sub aas das mov les push int push add (bad) cmp add sahf jle ljmp xor fs xor xchg dec adc add pxor mov sti (bad) push aad pop add loopne inc push stos je movsb mov jmp fs lea push mov mov or xchg out movsb ret add push icebp daa stos add mov jne jno pop stc in sub test andl sbb dec sahf inc sub add adc pop add icebp xchg jmp xor shlb mov mov mov in push push (bad) repnz mov add movsl sub sbb fidivrl cmp mov inc inc (bad) mov xor cltd adc mov cmpsb cmc jl repnz cmp cmp xor push lds cwtl sbb movsl add fnop adc or adc and xlat ds out mov stc mov lret jns sbb push mov add loop daa add mov rcl cld push cmovo scas stos in outsl fdivr mov xchg fisub add loopne xchg in loope sub xor out sub push or es adc ds or repz repnz rcll adc mov out cmpsl decl mov (bad) (bad) std loope (bad) sbb inc in push add pushf mov pop add add popf mov lock sub mov insb iret (bad) leave or jp add cmp or pop pop jnp push add and fsubrs sbb add sbb xor inc out mov (bad) call xor popf das subl outsl enter add pop orb mov mov bound fldcw sarl cmp pop pop jae (bad) jne les inc in xlat lods add pop inc inc ret sbbb (bad) jo ja dec inc inc adc push push sub nop aad test mov sbbl push add (bad) and pop xchg fistp icebp mov fdivr add and fsubl test ja movb mov mov sbb pop xchg push mov addr16 movsl aad mov sbb cld mov jno dec int3 jl leave flds popf sub add adc push ss cwtl sub ret add out xchg add mov xor xchg lahf test xor ret cmp and insl es jb loope ljmp in lcall call inc sub bound add jae test outsb pop dec lds xor mov sbb cmp sbbl data16 repz nop and cs adc jae push xchg cmp jb nop add lods int add addr16 push mov (bad) std cmp (bad) mov push scas cmp ljmp mov repnz pop mov scas mov ret push (bad) add pop or add sub add std adc add int3 add in jb xchg sbb cmp sub ja pop lret cld popa adc pop jo ja adc popf pusha add inc pop push dec mov pop jge or data16 cmp mov inc dec enter movsb add in js xor sub mov inc inc les jmp xchg jnp and adcl inc fs nop xchg add ret mov aam add mov jge dec addr16 out jle cmpb fwait js mov popf and inc adc addr16 inc push mov dec cld xlat push pop push (bad) enter sub jle or jb inc pop loopne loopne stc insb mov stos daa testl push jp sbb mov repz push sbb ljmp xor jge sub sub lret inc mov mov push je jge xchg and popa cltd popf add les pop add cmc imul mov enter loopne mov sub xchg fldl xlat push push cli inc mov fwait mov jo mov pusha xor fdiv dec jmp out add es and inc add (bad) flds dec sbb xor mov (bad) and mov add jle jecxz and push cmp pushf inc mov in add jnp pop sbb dec pop add push xor fcomi mov std inc sub (bad) xor leave xor movsb dec xchg orl pop cmpl popa mov insl lea subl arpl lods pop cmpsl cmp pusha xor and ret cmpsb dec jg sbb add push and xchg xor xor ss mov aaa sbbl cld jnp sbb stos outsb pop fstpt cmovo add lcall inc mov push dec fwait sbbb cmc jnp or xchg fiadd icebp test rcrl pop insl fldlg2 pop imul es int adcb data16 adc popf dec jecxz and nop (bad) in int loope pop push jecxz jnp push adc icebp or jg and jo into pop (bad) mov xor push call lods cmpsl pop addl jae push call inc lods pusha clc push jno inc dec pop or mov jo add movsl test icebp loope cmpsb cmpl ret mov xorl rclb fldcw add movsb call arpl in insb cld cmc add inc lahf and mov sti add test mov pop push subb add les push or mov add cli call mov loope push scas out setp pusha push mov add fnstcw enter (bad) and sahf addb dec je std ret pushf outsl adc lret mov movsl jae pusha sbb xchg inc stos push jne clc and popf push mov add lahf mov dec and add fimull dec add out imulb sub jp in and ret sub add mov cld andl mov mov icebp addr16 mov xor jp mov jbe cmp mov or mov sub in xchg imul xchg jns es mov push fstpt cmp lods add mov mov aad xor mov xchg add push insb and out sahf adc loop jo mov xor je cld dec xchg test jo cmp pop ds inc mov add insb adc inc jne lahf fistl sbb or jge sub push sbbl (bad) ficomp lahf fnstcw movl inc shrl (bad) cmp dec sti push and add jns test inc subb and sbb jb cmp xor pusha cmp mov stos dec add xchg out or cltd fcomps rolb sub lea (bad) xor notl psrld enter pop xor push jmp sub sar fldl (bad) lock add mov xor and jae mov rolb faddl cmp inc xchg add xor je xor sub mov aad bsr pop xlat pop adc jp gs repnz add mov in mov cmpsb add dec pop movb movsl and test out inc or lahf fmull inc push adc testb push adc cmc mov add ja das loop outsb add fidiv adc pop adc mov xchg add arpl pusha andl push and jg ds mov mov add movsb shll jp and jg sub mov sbb rcrb or jge or addb cmpsl mov adc lods xor dec push mov jnp test shll add sbb mov cmpsl lret pop or es sbb add mov cmp push icebp sub clc cmc in add fsubl add call stos xor xchg xchg mov jecxz pop movsb lock cmp and xor sbb and cmpsl sbb cmpb cmp call dec cwtl scas test pop add outsl std mov push xor sub mov cmp popf (bad) cmpsl add leave push lds repz jp insb inc sarl add mov sbb jae lret std xchg sub dec pop loope movsb mov stc faddl jo push sbb cmpsb stos or jmp test jmp jo pop icebp push pop (bad) fmuls mov push xchg in add je push test mov add mov scas fwait add add add jl jmp jae sbb aaa mov packuswb add popf mov push pop stc hlt jnp shrl push inc aam fadds pusha mov (bad) stos cmp add insb xlat jns push mov in rolb mov sub xor pusha int3 push inc mov pop imul cmpsb mov sbb add or or xor add mov push add inc add xchg aam xchg or jne in add int repnz sbb jmp push cmp sarl cmc js ficom add xor leave add mov add outsl addl xlat clc call rclb rolb inc stc cmp add cmp fisubrl popa or jnp addr16 dec sbb or arpl add push shl imul lahf add inc xchg lods xorl push push xor fwait ret xchg test sbb mov jp jl dec mov mov and leave jo and mov pop push mov call push mov aas jne cmpsb xchg ds mov in inc add jns jnp cmp mov frstor hlt movl das add roll cli loope test sbb scas jecxz (bad) (bad) and jnp daa add sti add imul mov cld stc sub or inc pop aas js pushl cli mov cld addb ret xchg sub mov and cmp or subb loope mov pop jp iret (bad) push js shll mov subb lea pop xor add popa addl mov dec scas jg add fdivr sbb imul inc sbb xchg cmp stos inc jnp mov sarb fadds (bad) pop push mov fiaddl leave scas mov stc cmp add sub jmp fadd add (bad) out dec mov in orl push faddl das jmp int push pop sahf (bad) dec out add aam add add push jecxz decl (bad) icebp cmp add dec xor add repz or add ja and gs sar mov mov (bad) bound rolb cld in addr16 loopne cmp gs add outsl fs (bad) enter mov inc aas inc or (bad) xchg mov test sarl and sar adc xchg pop inc jmp inc jae into sub jbe push cmp sub jb mov push cmp jl mov lret mov fbld test jo ss cmp jns int3 add xchg pusha jecxz push jg pop add inc lock popf je dec add or adc xlat cld fcomps hlt fidiv mov sti jmp mov popaw sahf nop mov dec jbe and jnp sbb stos add cmpsl jne int3 dec mov out into fprem1 enter stos sti jno (bad) testb (bad) mov mov push xchg add roll add mov sbb (bad) dec subl push gs sbb mov cmpsb lds and add (bad) cmp lds fcmovne test xor loopne mov test fwait ja mov scas jbe jo test adc jmp push (bad) jno mov mov out or cmc add adc (bad) pop push lods add sbb rcr inc pop sub out subl ljmp add les adc aaa add lods lret ja mov add sub daa mov mov lds jp (bad) pop repnz cmp lods dec hlt adc mov xchg movsl xorl push xchg lret movsb dec add jecxz icebp scas popa insl add inc or jmp daa inc sub add icebp or mov mov movb push push jbe ret jle push adc arpl inc sbb cmc push aam fsubs fiadd (bad) inc ret clc mov add xor add mov xchg xchg push loope add clc mov lds fiadd pop mov xchg cmp cltd pop add sub sbb bnd subl cmp fnsave sbb add adc int3 je add (bad) loop push inc mov scas and (bad) mov sbb aad cmpsl movsl lods cmpl cmp pop aaa cld shll pop jmp test repz lahf dec sub push cs cmpsl xor adc mov mov xchg mov mov pop cwtl dec (bad) push jmp fisttpll loope mov xor (bad) ss push adc fistl adc add xor jg add cs sbb sub xor stos fwait cmp jle jb cs mov roll pusha sbb add (bad) repz or xchg test dec mov (bad) push cmp cmp pop add fimul or mov pop jp clc cltd in mov gs push rep jg mov data16 icebp cmc out xchg add in in mov hlt test iret sbb sahf jno and add inc subl ds inc out sbb inc mov sub shlb outsl add lds cmp aas js cmp or cmc outsb pusha in jo add ss jle xor inc arpl pop mov dec adc sub in insb sbb or aam addr16 je fstps add mov fiaddl adc push cmp push das mov pop lods lock add inc sub push mov push movb and (bad) push arpl dec add cmpsb jle aam (bad) jbe roll stos inc std cmpsl xchg add dec notb inc or mov cmp cwtl xor cli add push fwait sahf add notl pop adc mov nop dec addr16 add imul lock push add std inc add inc dec jne hlt lret push mov or in (bad) jno loopne lock test dec aam adc push push mov or sub cmp dec dec mov sbb in push test inc dec fsubrl jl push adc mov xchg data16 and cli mov negl ja scas push movsb mov gs xchg testl cld dec movb popa jl pop stos nop fwait inc add je pop fs push add insl jge cmp jne jo movsl adc outsb popf mov mov (bad) mov mov push xchg mov xchg popfw xchg jae sub arpl pushf mov xchg sub mov push repz sbb (bad) cmp test (bad) xchg (bad) sbb mov ljmp gs daa pushl mov add push mov ljmp xchg jns pop add add push ret imulb jg mov (bad) mov fdivrs aad fisubrl xchg in push in lret sarl aam mov xchg imul aas pusha mov mov cld add aam xchg adc insl add test data16 dec lahf add fmull das mov and sbb cwtl fnstcw dec inc mov inc dec lahf test pop enter movsl aam or movsbl iret push or es ret roll pop (bad) push outsl inc add mov xor daa or jno mov adc adc adc jl mov add inc mov aad sahf add leave mov sub or sbb icebp imul popw testb jns lods dec call bound push xlat in fsubrs mov sar mov inc sub add lea ds dec add popl mov repnz cld jno pop sbb stc xchg (bad) jne xchg inc lret (bad) cmpsb aad sub adc stc add pop pop decb jp push sbbb sbb lock cmp and pop xorb lcall add mov add outsl or xor or pop sub dec xchg (bad) fistpll xor fdivp arpl push mov hlt das inc js or xor mov stos fiaddl mov sbb std stos pop dec (bad) cli gs mov push inc mov in jb push add mov mov mov xor jle xor sub (bad) mov call ret cmp mov mov xor ret add pop push dec sbb sti pop cmpl add sub in bound add cmc scas cmpsl jns add aaa test fcmovbe push in jbe jne stos xchg test sahf pusha push and ret jecxz stos add inc fldt and jmp cmpsl add add mov xor stos add shrl mov js mov sub push lea mov inc add enter xor push xor push xchg and aam lods add fucomip dec mov or sbbl push dec inc mov ljmp pop repz sahf out add loope fist ss mov out (bad) sbb mov jnp xchg and shr jae daa pop (bad) and sub mov outsb inc push fnstcw aam add cmp orl rcll inc add mov mov lret or lods test out push (bad) sarl push addb inc test jmp nop add imul cmc pusha testl popf lds movsl es jp cmp add add imul daa dec push mov add add leave pop mov (bad) mov dec fbstp jl jnp (bad) and jo sbb lahf mov adc adc cmp ficompl iret jae subl sub cmp xchg loope add jmp mov call pop (bad) sbb or sbb test sbb lcall adc cld mov pusha imul sub jnp cmp push mov jmp daa pushf dec pop adc sti aaa jb adc pop cmc sub add std imul cmpsl repz insb les int3 mov flds pop mov jp mov int3 add std int add push xor mov fildll xor (bad) adc (bad) popf add fwait push xchg cmp mov jp and xchg lcall xor mov pop or push mov add inc ss and flds popf andl repz out or ficompl add je loope stos nop add jmp mov test mov dec fs add popf pop cmpl mov add xchg imul jle add push loopne call popl dec inc or jge negl das popf adc lds gs mov adc inc inc rcrl scas add pop orb int3 lods xor xchg jbe sub pop jecxz fs out dec js ffree jo adcl adc movb mov sub jge cmp mov sub dec push repnz dec scas test out test push add in rcrl out mov adc mov (bad) repz stos push xchg in add sub decl jg sbb add jle jge add push lods fstp out subb add dec enter addr16 jae fdivl add sbb les push pop sbb sub and dec orl aaa cmc add or jnp shr add mov add das pusha sbb (bad) ret pop add adc and stos ja cmpsl addb xchg xor test rep out xchg add sub (bad) sbb add xchg cmp jns mov ret idivl sub cmp push add sbb rolb test push sub aam adcl inc fldenv add icebp or sub mov pop test rolb inc xor sub cmp outsl rcll sub inc push add in into cmp cltd psrld push fdivr mov add cmc andl pop fisubrl push jne fbld mov dec add or or fisubrl imul sbb inc inc mov push add xchg mov xchg andl mov or add push lods or rcrb dec in xorl jp add in xor les add lcall (bad) test add mov add ret cmpsl bound fldl sbbl jl in test cmp jns dec sub jmp adc and iret xchg and decb pop test adc adc sbb dec xor lret cmpl push sub stos pop cwtl sub sub mov testb fildl clc add xchg lret stos cmp add leave sahf addl std pop sub and jp in jo sbb aam enter lods add push or ss insl fimul pop mov fnstenv xchg add push js leave mov add push cli movsb lods dec fisub mov push ss int stos out cs mov xor jge roll bound push jo das mov cmp daa (bad) lret cmpsl inc jle pusha imul lahf or push add into cli arpl cwtl add jno adc jmp or stos orb xchg mov sub adc add loopne add inc subb mov fadds adc sbb cld mov or or aad mov mov xchg pop mov jnp in mov sub leave je nop push xorl cmp call xchg dec int xor fildl add or gs cmp inc in (bad) cmp add (bad) push outsl sub pop jb and lahf shll in or mov out add popl mov repz sub jns xchg scas pop add loope aam popa xchg lahf sub add test sbb mov inc pop mov mov or clc add xchg push out lret add repz hlt mov inc aaa sub and shr fcomi out aas lods push clc stos leave add mov into add dec ficoml ds xor arpl aad into jl lahf in faddl sbb cmp sarl mov add fild mov xor push adc pop and pop loopne mov sbb xchg jae (bad) int3 sub inc mov addb out sbb xor dec ret cmp push jae pop mov cli push in sub cwtl fsubl and push out sub ret sub movsb push sub sub aam or fs mov notl repz cli negb jno add add nop subl jb and add sbb out xchg subb sbbl dec and incl test insl cmpsb xor jge fcomps xorl les ss js add inc (bad) sub mov ja jbe dec sub add pop ljmp out int3 jnp sub and cld je inc repz add test jo adc mov push imul pushf hlt add dec or pop lret xlat pop add daa ds or mov out test dec call dec mov jle outsb divl notb add mov sbb dec aas lahf add std cmp cs adc mov data16 enter add xchg jbe mov lcall mov dec int add pushf jb out lret mov je jbe cmp add shr ds add fs jl xlat aam movsbl aad adc enter inc mov mov mov into dec arpl add xchg pop lcall into pop sbb rcrl or je fnstsw mov cltd bound add jl and push dec dec sub cmp call xchg (bad) push jo cld bnd add mov std mov or mov inc cmp dec xchg outsb sbb das shlb add into jb xchg xlat enter add pop jle sbb dec mov or and sarb sahf andl test fdivrs shlb aas sub fbstp xchg pop xchg nop call outsb jbe pop fistl inc pop or daa sarb (bad) and add dec push mov stos jmp sbb cld fs add fstpt fisub (bad) loop adc lds pop push mov mov pop scas sbb jne orl movsl gs arpl add push mov and mov jns add cmp push es inc loopne or insb mov movsb dec fisttpl into mov push out inc add das mov cmp fldl jbe pop andb in jge rorl xchg fldl sub push popf or in add outsl ss inc out add cmp sbb mov mov sbb cmpb mov mov add push ret mov cmp mov fwait das or sbbl adc xor dec hlt jmp adc outsb or aas test cli mov adc xorl inc leave (bad) xor and gs adc cld add dec add jae sahf cmp inc insb pop into (bad) mov or and sbb lahf and cmp cmp scas jecxz xor xchg sub test lcall add dec outsl jae arpl scas out inc mov imul xor aaa ss add jmp xor jns add enter push adc add loop dec add pop jmp notl addb add xchg add adc in jbe ja add arpl mov add mov inc add xchg adc mov inc dec daa mov jb add xor fs pop push mov test mov or andb jbe movsb insb sub addl fisubr dec jge add call jl test push pop pop cs add das aas popf call or popa out mov (bad) lahf repz loopne cmp scas add mov pop sbbl outsb or adc stos jns cmp sub imul in mov les jecxz ljmp mov cmpsb mov movswl nop xchg jb inc out push fwait pop mov cltd aam out call loope sub xchg in outsl and xchg jo xor dec push js sbb cwtl pushf repz test andl dec sub addr16 lock cs mov or inc sub dec insl or fidivrl int3 push inc shr cmp subb mov aaa mov test jg push mov pop inc add scas sbb xchg out jo add pop inc jle ljmp mov pop loope and and cmp iret stos imul loop mov pop sub lret mov inc test mov loopne inc or fistpll inc add bound sahf dec inc add negb movb add iret push arpl scas clc add mov jp or jmp add xchg cwtl int icebp pop add cmp nop jp add popa pushf fucomp mov jle jno push and dec sbb add jns scas subl inc mov sbb jp movsb cmp mov push xchg cmp sbb cmc xchg dec or mov outsb mov (bad) je add mov dec dec mov add sbb insl mov rcr les mov add in rolb pop xchg aas fnstenv push add push mov lret inc rorb sarl push mov lods push or jg sti fs mov int and add dec lret rorb adcl enter ds mov mov jno push cmp lock in fadds mov mov pop push cmp jbe mov lea imul (bad) in and adc inc aas sahf add sub xor push inc add sub sub xchg dec inc andb les jle and ljmp sbb aam cli xor adc push pop hlt jp add add adc (bad) (bad) jne lea mov sub adc (bad) jle add xchg loopne sahf in add pop call psllq loope cld lods bswap mov hlt shr (bad) lods data16 sbb cmp jl (bad) sub aaa loopne repz js or in insb andl in rolb push dec dec bound or xchg (bad) push mov mov scas insb jmp fs xchg popa cmp out inc jg leave jp lcall mov jno sub (bad) and (bad) mov fistpll pop xor sbb push add (bad) iret ffree dec push and lea push mov sti clc lds push dec data16 mov mov sub xchg inc pop jo cmp add xchg add je xchg (bad) out stos xor push jecxz mov sti int aaa and pop or (bad) and addb stos loop fcompl out jmp mov dec add lods add inc enter in cwtl pusha push addr16 (bad) xchg cmpxchg add sbb aad pop js sti xor dec cmp rcll stos push pop call and add mov xchg fmull movsb call xchg (bad) hlt orl mov int3 les mov mov outsl (bad) jae lea stos mov and or mov (bad) add addr16 in cmpl xor mov xor ret or or sub xchg pop jo je subl popa add push sbb pop dec or ja test sbb push insl insb adc (bad) mov cmp xor cmp add daa ljmp jecxz out mov popa inc pop dec into pusha mov icebp pop jmp mov or or push pop nop push cmp mov push and add repnz mov test outsb inc add push add pop (bad) testb rcll xorb sbb jb (bad) adc cmpsb and scas outsl jne cmpsb mov std nop lds sub scas push (bad) call lods add xchg jecxz inc xchg icebp cmp xor testl out inc pushf add (bad) push test push add dec loope inc mov enter movsl or pop fwait pop inc cmp loopne stos cmpsb xchg mov jns sub ret dec inc xchg int3 (bad) loop icebp xor dec sbb rcrb mov mov and pop in add pop xlat (bad) xor daa jecxz push stc fs add push xlat enter xchg mov fist xchg jecxz rcrl add cld mov xor jae ret mov xchg andl sbbb loop push popf add das sarb inc lods push inc mov add icebp xor mov jbe loope stos add add mov aaa add cmp or cmpl in adcl fs movsl xchg add adc icebp push push ret les mov lcall dec lret cs or xchg or test in push add cmp xchg inc add or or push add test xchg addb and inc lret inc pop jl add xchg push push cmc sarb sarl jmp cmp fcoms inc mov ret std cltd (bad) aam push jecxz out dec mov mov cmp (bad) cmp std xor jmp cltd xchg pop in icebp add dec dec movsb pop stos dec repz xchg fchs mov cmp and aas pop icebp addr16 push dec add or pop xchg add (bad) cmp pop (bad) cmp gs into ds scas pop add imul hlt sbb aad jecxz mov pop fldl pop sub add int fcmovne orl loop sub jl sbb repz inc sbbl add aaa xor pop fwait imul repz mov mov mov xchg pop lock xor or xor push in lret pop inc xchg dec imulb pop (bad) mov pusha mov pop cmp sahf hlt push cmp cmp loope fwait ret inc sbb pop push xchg mov and scas mov jg sahf inc add mov add icebp inc cmpsb ret dec jb jne mov push and lcall cmp adc inc loope scas sbb and bound mov pop adc cmp pushf repz daa xlat imul add xchg shrb (bad) and scas mov mov xchg jno jb,pn cmp xchg pop mov push cmp stos pop jge xorl out (bad) mov jle sahf adc ja add (bad) add lock push mov scas sub fmulp dec add test dec (bad) xchg push pop sbbb ret into add pop (bad) fadds addr16 adc push inc popa ret nop cmp notb jp sbb out jbe sbb push into roll das fwait cmp out add sbb imul add inc iret add and popf lret add xor jecxz or inc ret lret int dec icebp dec pop xchg mov gs add aaa or and dec add lods pop add mov add push xchg and (bad) lcall add pop outsl push pusha mov shll sub adc sbb je xchg mov jp sbb xlat insl and push imul (bad) pop add jl pusha xchg test mov add repz lds mov add or aaa fcmovu inc and mov push pusha fnstsw rcl orb adc cmp fisttp cmp add sbbl xchg or cwtl push enter (bad) sub and cltd push sti nop out jns add repz bound add jmp xchg fs add adc and mov incb xchg ja daa cmp cmp repnz or rorb mov dec ret clc and push icebp add out sti stc push push add mov and mov pushf push xchg rcrb add insl mov sarl pop inc dec popf (bad) add push popf xlat scas and enter jo in orb repz es add jge popl mov sub ret shll pop xchg dec push sti adc add out mov mov lret ja lds fisubl push push adc (bad) pmulhuw pusha movsl arpl xchg pop cmp xor mov movsb cmc add icebp sarl mov ja cwtl cmp mov or add mov inc jnp jne dec dec lds ds (bad) loopne mov mov cld test or mov stos pop jl jp push mov jl subl push and fstl fsubl clc int3 inc loopne repz add inc orb adc jg inc mov xchg mov adc mov add dec jp sbb xchg mov mov leave inc mov lock add lahf pop add add jle pop inc dec and repz stos add aam or std fistpl cmp (bad) add and jns das data16 add xchg shl pop (bad) push xchg dec xchg int3 xor clc dec lea repnz push popl cltd test mov mov jne mov insl xchg add dec cld insb or imul pop xor dec adc add popl rcrl add xchg adc out hlt or adc sbb push mov push xchg mov loopne mov pushl sbb mov leave fs mov setb push mov pop pop out xchg dec jle mov mov adc add sub add and dec in jno data16 xor pop mov insl and fwait lods movsl (bad) imul dec enter mov push mov into sub ljmp jl push jge add or pop andl jl incb adc outsl fsubp add or jae jmp lahf dec lret sub sahf mov fwait mov pop add mov mov add mov jbe add das dec imul pop inc mov jbe movzwl std test (bad) cmp sahf push fnop ret faddl xchg stos dec mov mov ljmp fnop jb push lret add pop jb (bad) push push add movsb loopne add mov mov add das dec push mov fdivrp jle jo xchg adc loope mov incl imul xor push sar push xchg lcall nop cmp in in je nop lahf xor or pop sbb hlt ja xor cmp fldenv push jae mov xor add rolb test jo add push popf test fucom les pop pop (bad) sbb push out aad adc cmp add xor je inc or test movsb roll xor mov xchg xchg data16 rcrb orb outsb mov add and add rorl imul aaa jbe adc pop ss or inc mov add ret clc cmp add int3 or cmp mov ja xchg test bound inc (bad) mov aam mov in loope xchg cmp (bad) pop pop mov add dec push icebp cld movsl or cmp add pop aas lea pop inc ficom and ja insb adc or adc fisttpll out xchg jne (bad) enter inc aam cmpb push mov add inc push test add into jo xchg aad add fwait push out add dec mov add adc add mov incl les ret aas add xchg push sbb mov add call leave addl inc hlt mov orl stos push sbb lock out jo jae mov mov jno fs iret add stos add add icebp cmpsb sbb jl lcall jb enter xor popa sub cmp pusha mov jle in mov pop aas or outsl add shrl xor inc pop xchg cld jp jo cmc dec es lahf repnz test dec mov rolb or pop stc add mov jmp add mov pop pop (bad) ljmp and shll pmulhw add lock mov pusha (bad) xor inc cs xchg ficom pushf (bad) je cmp push test xchg inc pop jge movsl pcmpgtd sarb pop add add mov mov xchg xor sbb movl dec push push and xchg push inc lock pop mov aam cmp int jg pusha xor popf add adc and ficoml int3 lods (bad) aaa and pusha (bad) jbe inc mov jl sub movsb in push and cmpsb xchg push cmp adc lea mov mov jae insb inc out lcall std fcomip roll pop pop fxch adc cmpsl or mov and add nop or sbb jns repz pop jle addr16 loopne add out and sub add adc in mov lock jle inc mov roll sbb insb jge add int xchg out and aad sbb lea push push imul mov push in cld add popf add pop mov add xlat ficom and add or out adcb jle cs mov jmp bound call cmpb clc aam dec gs jg and iret pop das mov or add xchg sahf (bad) cmp movsb adc lods inc (bad) jae xor ja add lretw or and or inc xor add add decb and mov mov mov movsl test inc add f2xm1 shlb or dec test add aaa mov icebp add mov pushf cwtl mov xor ret scas sbb jo mov xor mov insb icebp in and mov sub (bad) (bad) xor xor stc lds add fwait out dec cmpsl test xchg dec test mov adc jns adcl jl (bad) mov enter pop and loopne das xchg (bad) mov mov mov out inc cmp xchg (bad) repz test addl mov jo pop test mov add cmpsb pop push loopne add cmpsl shr sub push icebp lea test add lahf lcall adc cmp and fldl xchg pop call stos add leave jmp inc pop lods adc je fistpl mov stos inc (bad) in test sti and push push je insb mov movb cmp add and jp cmc data16 or adc std xchg rol push add ror push ds inc and add (bad) (bad) lea add adc add bound add add add mov add sbb out cmpsl adc arpl movsb add jp add mov inc sti das pop jl push add jp cmpsl mov negl cmpsb mov cwtl lods inc jo push xor mov sbb add and sub inc push (bad) inc movsl xor cmp and mov insl mov and test addr16 rorl sub andb lea lods mov iret add push mov dec xor inc pop add dec dec cmp jno pop dec jl roll aad je mov xor adc outsb andl inc add clc popf loop dec inc adc hlt lret ret mov cmp xor aaa add leave (bad) out mov idivl popf pop mov lds sub js and xchg lock ret call loope push aad add shlb lret subl call ret jae push sarl sub dec stos pop call mov cmpsl je daa sub jnp insb push and xor xor les lahf (bad) fiaddl inc add lods xor fmulp jne jl int3 jmp mov sbb hlt push sub ljmp ss pop jbe add fnsave pusha add movsb in pop push into xchg pop add nop jo bound add lret xchg cli push mov jmp ja inc into mov mov sbb xchg add nop or aas outsb add mov add inc insl xor push add jmp xor push jg ja,pn push dec add mov daa jmp mov int3 movsb repnz add (bad) lea lret push leave push pop cmc insb pop add xchg or push xchg add mov cmp jp adc aaa add inc data16 mov mov mov push outsl sbb mov out jecxz adc lret movsl push mov cmp xor movsb sub and mov push mov pushf add or sahf adc add ja xor xor push mov lret stos mov hlt fiaddl or fstps add jnp mov icebp lcall add jp out fldenv rcrl aam repnz shl je lret add rcrb sbbl test jl (bad) push add xor (bad) cli pop std add jecxz adc pop jb cmpsl sub enter add imul adc add cmc loopne xor fcomi and int3 push sbb mov xor mov sbb cmpsl test loop jge cmp xchg add push mov pop leave sbb rclb jns push jb mov pop or lea add lods cli in inc mov mov in lock pop and stc test lcall lods movsl fmuls ds push xorl sub xor add (bad) mov cmp out pusha and (bad) lret xchg mov mov pop mov (bad) test add sti push xor inc xlat fimull pusha push xchg loope pop add ret jg add ret sbb shlb jb mov sub mov lock lea xchg scas jmp push add (bad) scas (bad) jp add sahf xlat popf pop push inc push mov inc sub rclb shr add mov pop js add lds inc jp jge idivl xchg push das lods xor add dec push push add into icebp or addl adc inc add xchg loopne or inc pop hlt test mov or and add cld jno daa out add xchg push movl mov mov divl sub subb jp and pop dec je,pn call add arpl js add addb insb xor mov dec xchg ret (bad) sbb cmp jo add mov and frstor jg ljmp pop pop mov push push fidivrl mov add inc sub popl imul mov mov jg jle std adc inc pop cltd push cmpsb in andb or aam out loope dec add idivb add pop mov add aaa outsl xor sbb mov pop jl test cmp mov dec les add popf push cmp lock sub ss inc loop add pushf jmp mov inc add pusha bound pop xchg add push fstpl mov pop (bad) dec jecxz bnd iret subb push test js inc add lods int (bad) xor mov xchg aaa mov rclb je mov pop mov sub sbb pop sub pop mov jo push scas clc int mov jnp push dec ret inc sbb sarl and lret jge fisub orb mov icebp push xor add aad cmp int3 pushf int xor sahf or push mov loop pop sti cmp add or adc fstpt pop data16 out xchg (bad) lahf jg mov (bad) sbb xchg popf js jl xchg nop int3 icebp or cli pusha mov popa xchg aas push xlat add cmpl adc psubusb pushf xchg jns cli inc f2xm1 push or sbb (bad) add cmp add ss push mov add jl mov add arpl add insb andb push xor and lret int3 mov add ss notl xor fstps add lods sub pop mov inc push cmp outsl dec sub mov sub mov leave xchg into lods out mov mov push cmpsl mov adc pop adc add in call add adc in fistpl cli sbbl push popa inc mov add dec fdivrl (bad) jge pop sbb add test sub ds jnp pop dec sbb xor decl and mov jl jge push add std xchg sbb lcall out inc test roll popa fdivs mov inc push push mov add js and insb inc pop jo in ja add or call add sbb xchg push gs iret push jmp mov push out ja push mov xor pop pusha js repz or je add stos xchg mov pop out fwait ret add mov movl sahf ja jecxz les out adc mov (bad) rcll add outsb movl inc adcl adc loop xchg add and mov sub jl jns cmp mov mov xchg sub mov mov int movsl fildll add adc push cld jbe cmpl adc jb or pop pop pop or shll or add jp js mov push in jge add or sbb xchg lods add outsl imul jg xchg negb sub out imul or sub xchg mov in pusha jle addb stos aas inc pop cs mov cltd std ja or test cmp add push and lock out jle jmp leave xchg adc subl leave mov add xchg fbstp aaa clc arpl scas pop push add aam ret test sti adc out sbb pop int3 push lret dec jnp aaa fcomip add jl inc out add pusha loopne outsb ss adc sbb mov sub fistpll mov js xchg cmp jl add jge (bad) daa negl cmp jae inc andl aam das add pusha popf push mov dec mov test sarl push sub mov add xchg cs mov mov insb jno decl add add or add ja je mov aas test or jns dec mov sbb and jge mov or or cmp add icebp movsb jle outsb ret push jne imul jl test das sbb cmpb aam cmp jp push repz je xchg add add add xor ret sub jp adc cmp mov ja lock add mov xorb dec insb clc xor add enter std xor adc pop movb mov mov push in dec mov flds xchg push cltd ds sti or xor push icebp add add sbbl sub pop movsb add popa inc cmpb ret push lods cmp outsb add cmp cmp push fdivrl and inc add mov jmp jge xchg sub loopne push cmp lret data16 adc cmp mov adc inc and (bad) mov (bad) mov movsl push dec cmpsl fistl sbb imul xchg mov sub jne icebp sub add loop mov ret fwait stos inc pop jecxz dec mov das sbb xchg xchg fildl pop fimul fdivr into sub pusha jmp jp pop pop add xor add pusha pop dec inc mov ds add in dec sahf cmp sbb pop mov sbb arpl xor andl std sbb jp xchg cmp sub xchg lea jnp cmc push and aam clc jno pop xorl in add mov adc cmp inc int3 addr16 inc enter loopne sbbl cmpsb or aaa cld xchg les (bad) sub mov mov fdivs jne insb scas sbb clc adc or ret dec cwtl cmovo and jmp and dec adc cmp mov inc sub negb into sti pop xlat or (bad) mov add out xchg xlat addr16 add popa push cmpsl std sub popl pop xor sti mov pusha or mov inc mov adc add push xchg sti adc aaa data16 push adc push add jns,pn orb inc sbb push inc add xor imul sbb mov jl xorl add xorl ljmp loope daa arpl fwait xchg movl mov stos add push jecxz sbb xor cmp xchg jmp xchg aam add jle mov inc sub and adcl (bad) dec jne sarl add callw xor cli add mov rcrb jbe in dec arpl iret test fnstcw add insl sub or ret dec loop out add and test xchg add pop rolb xchg add sub add xchg mov in jnp jmp aad adc cwtl arpl cmp nop (bad) dec inc test icebp and sahf and cld rcrl push stos loopne das pushf fldl2e add fbstp add sbb and add mov (bad) mov (bad) sbb cmp std in mov xor ds mov mov xchg aaa js dec mov or add std inc iret sbb adc jns mov (bad) mov pusha movsl std pop outsb push sbb inc out lahf imul insl sahf xchg les test cli xchg add dec xor lcall adc push mov and inc pop pop pcmpeqb loopne jo aas add lcall fiaddl fbstp mov mov (bad) (bad) shr or repnz xchg in inc mov imul rcr dec pusha sbb mov cmp mov icebp xor add mov push or pop sbb outsl push aas pusha mov add (bad) jl push xor test add sbb (bad) les sub and push negl sbb aas aaa push and or pop sbb hlt add out rcrl inc push and mov pop lock data16 mov sub popf inc or or jbe mov add or jl cmp jge add fwait inc (bad) arpl add ficom sbb decl mov pusha add loop xchg mov shll sbb jmp jnp in jl out sub inc xor push add cs insl in adc ljmp roll xchg inc jne arpl jg jmp pop mov mov repz pop inc push cmp call mov test adcb ret xor dec add fistp data16 jne add add leave mov sbbb lret mov add push sbb lods aas add js stos int pop mov (bad) insb dec (bad) dec add add les cli pop pop lret aaa mov xchg addl popl test fild call cwtl or xchg faddl inc lea add or add adc xchg cmpb fidivrl sbb pop inc push jp aas insl iret add or mov dec (bad) dec into in push push add inc movsb dec pop lods mov sub jle xor jmp mov add test add ret cmp jge outsb rolb sub add imul or inc sbb movsb dec jle rcrb popa push in int xchg inc push xor pop mov mov ss rcrb pop cs dec pusha sbb push add fprem or and out xchg call je push pushf dec fstl in mov stc mov daa sbb pop xlat repnz or in and movb xor fs jge jle cli leave jb in or add cmpsb sbb push lret inc add cmpb and jb lea nop clc and jne dec (bad) fistpl ss adc add (bad) sahf xorb jo xor in prefetch ficompl movsb js cmp xor icebp call insl lods movb add add repz jle,pt ret in sub xchg xor cmpsl add in push mov and aas aad (bad) outsb mov pop jnp in pop jne andl jp pop movsl add push add cmp lahf stos into pop or add mov inc popf rcr sbbb mov iret rorl push cmp sub xlat scas inc inc inc (bad) daa mov or sbb pop bound add fisub xor cmpl hlt lock cmp sbb fiadd xor dec add add inc add dec aam add pop adc push pop inc in lret fisubr stos jb lcall in add pop roll repnz cmp xorl mov xor add push inc adcl jnp js cwtl dec test add ja out mov xchg sub in lods fidivrl imul lea or insl mov add adc inc mov sbb add cs jb or jle test rcrl add jmp fild mov pop pop push add mov out arpl sub mov cmpsl or xchg add dec fsubrl adc insb int3 xor adcb iret or faddl dec lcall insl push repnz add ret jo lahf mov fild adc test clc add adc iret cmpb mov or inc div sub popa xor inc inc jae adc push out mov mov xor mov sbb push loope sbbl insb scas adc pop push shrl jbe xchg push inc pushf xor cmp mov call dec andl mov lea pop xchg dec std loope stos fsubs popl xchg aam stos jnp aad subl sbb test sub subb jae add jo and add push or add outsl xchg adc mov add pop and push sti inc add outsl out into loop cmpb jo push lds pop imul cmpl movl mov mov xchg xor jo mov ds add lret jae andl es sahf sub adc push mov jl add push sbb mov pushf addl push fxam dec outsb (bad) pop cltd popf jge inc and jp adc sbb jbe push add sbb mov pop add or rolb xor jge xor outsb repz jp mov jo in jb adc cmp aaa bound xchg stc adc push add sarb (bad) jnp or add jp fldl and push sub sbb add cmpsl (bad) mov outsl imul mov push fnstenv xchg nop xorb inc inc repnz add adcl jecxz fnstenv dec stc or sbb sub call jb pop mov xchg jae mov pop xlat dec (bad) out add mov add cmpsl lds inc jno push movsl xchg pop dec add pop repz shlb xor jle in mov shrl mov mov mov add xor ret inc dec add int mov jle sbb gs pop stos leave and add out (bad) and fild mov rcrb iret pop out je xor movb test jp xlat add push add add daa fidivrl pop xchg sbb add inc (bad) jbe pop xor xor (bad) jo pop xchg cmp loopne mov add cmpl ret std cwtl push fs xor ljmp mov pop and fiadd shrb mov jle (bad) sub repz int3 mov movsl js add lock mov jbe loop mov pop sti call ja xor lcall in fmul mov adc xchg movsl mov adc mov repz pop stc fcompl jmp adc inc cwtl jecxz hlt roll fidiv xor pusha repz or pusha hlt mov mov dec sbb add mov push mov mov add cltd rcll lods inc xchg icebp iret pop aam rolb cmpsl sbb pusha insb pop pop cmp ds jg fs scas lock loope add add (bad) inc sbb orl xor jae sahf mov call add imul (bad) int3 sbb push mov xor inc jp popf je jge sahf or pushf pop insl mov add mov aas dec mov cmp jb ds and xchg pop mov mov push cmp loop (bad) rolb push flds sbb xchg shrl stos mov outsb push cmp mov push mov in sbb or (bad) dec call inc popa or pop add mov mov adc and lcall adcb jb aas add fild mov jae pop add dec add mov add negl das pop mov push pop push mov lds idivb enter and add pop imul sub cmp sub xor mov add stos push push pop ret push mull add jo std mov cmpsl daa sar mov leave cltd push rorb xlat xchg punpcklbw lock (bad) or push cmp pop sbb clc mov cmp cmp icebp adc sbb xorb inc mulb mov cmp mov test adc insl fcomps repz lahf push negb jb imul je,pn sti mov orb pushl dec pop mov jecxz mov into or cmp setl add jne adc imul add push sbb or popf xor xor pop hlt (bad) bound inc inc nop inc inc xchg or or and push jne add push outsb bsf mov int jns ljmp sarl scas cli stc or cwtl add enter mov inc addr16 lahf imul mov clc cmpsl gs mov mov sbb and cmc sub mov xor xchg mov mov andb jle inc or addr16 gs mov jo jae mov sbb test stos mov (bad) add xor sub or loopne mov mov cmp movl dec outsb movsl adc insl sub sbb pushf mov (bad) xchg stc pop out jbe pop add das jp out mov test (bad) movb ret jmp adc faddl fsubr dec cs jne pop add mov dec pop mov out nop mov pop sbb jo xchg and adc add xchg mov test sbb or xor (bad) jns add out push dec cmpsb add mov push sub sbb adcl fildl jp shlb sub push outsb pop jo loop int3 inc cld lretw pop and adc sub sahf clc xchg pusha les dec lret xchg int pop pushf sti push or add cld insb rcll sahf ret outsl std xchg mov out or inc add (bad) ds lret cmc ret cmpb dec jae out sbb fiaddl outsb mov jo add mov imul jo pop push dec sbb pmaddwd pusha in add test dec jbe jb add jno in fs push leave add loop push cwtl cmp cli es jecxz rorb dec cld add insb (bad) repz (bad) sbb inc cmp lods dec dec dec cli aaa push popf add notl sbb dec add mov dec popf ror inc xchg cmp testl cmpsl test lds jnp adc sbb test jne add jb mov cmp jo xor adc mov mov in or ret cmpsl pushf leave loope sub ret cmp inc xchg cmpsb mov xor dec add fmull test lret dec add sub icebp xchg cltd call mov stos (bad) sub push add andb xchg faddp (bad) xor or add and sub mov push jbe into cs mov aaa fs jns add aam imul and inc (bad) xlat sub cld or mulb lock mov inc adc inc add fildll jbe push insb in out cs inc lods or add dec mov and int3 mov bound enter or jbe hlt inc jo add test fimull popf sub add pusha push out fs push (bad) cmpsb loop pusha mov mov add push dec jae inc pop or dec jecxz adc (bad) mov (bad) insb inc adc and add dec jnp mov mov cmc sahf add (bad) dec add and dec clc push mov add pusha inc imul stc inc sbb mov cmc add jmp test cmp orps lcall mov add mov add xor mov fisubl jp jp (bad) xlat adc inc in (bad) das push xchg lods inc adc rol icebp (bad) fdivrl and std xor and mov mov je repnz jl jle mov mov add outsb loopne sbbl xor pop inc scas mov sbb ljmp add cli call adcl inc pop (bad) leave sbb jns add inc lods push dec fldenv in (bad) mov pop jl pop sti and or mov xchg jno ds adc fidivrl add fnstenv xchg iret mov mov loopne incb mov jo add sarl xor dec mov pushf push andb stos or jo or addb sub push xchg stos movl loopne loopew in adc add push inc lret adc adc sahf mov cmp outsl cmp push fsubs jle lods add mov icebp rcl inc pop add xor jno popa stos xchg shrb add test rclb add icebp cs push (bad) xor stos jo mov jae add xchg xchg test dec add mov out fcomip dec add jbe add add sub fisub or (bad) fsubl add test cmp mov popa stos cmp je lds aas inc push addr16 imul ret cmc inc or dec mov and dec inc mov pop dec fisubr lea push test out add lock mov push faddl addl iret inc mov cmp mov ret pop test jle rclb add jae push out jo add jg loop mov lret pop lods rcll mov jne jle xchg pop xor adc mov (bad) mov loope lahf fisttpl add hlt lods ret andl in push sti int cmp add inc out cmp leave pushf mov push movsb add sbb add repz mov xchg and pop add pop push xchg adc jb lret sbb dec hlt or sub push adc lock repz mov push push in xchg int mov mov fwait or and ret nop shlb aad push adc es (bad) in add insl aam dec retw mov je mov out bound aaa xlat repz add adc and sarl (bad) (bad) lds stos fsubrs fiaddl lock mov add xor pop in inc mov data16 mov xchg adc cmp mov add rcrb scas enter leave and into add dec push add jnp add pop test icebp xor repz mov (bad) aam push cmc fisub out outsb jmp push nop and dec add xor cld sub sti add inc stos hlt enter dec out fwait ja cmp int3 andb add xchg (bad) push xor cmp rcrb pop cmp mov and add mov or xchg jl cltd jb inc xchg (bad) fiadd cmp adc ljmp sub stc loope sbb cmp jnp dec imul jns or fbstp add mov cmp cmp add push imul lahf imul sbb scas mov out sub cmp rcll push rclb mov xlat (bad) repnz jmp add and lods xchg test pop push (bad) cld cmp js insb bswap (bad) stos add xlat lea xchg subb or jge fsubrs add dec dec nop dec sahf add adc loop add jg scas lds xchg add xchg fbld xor out sub les sbb int3 pop jno icebp adcl out cmc or cmp mov int3 inc (bad) and sbb cmp dec xor popl in inc add mov jne push push icebp lea add mov hlt add mov in stos pop cltd push mov and test insl add daa xchg dec add fmull imul cmpsl rol bound movsb jmp sub add mov mov fisubr andl and div lret (bad) mov add lods aas push rolb add sbb xchg add sbb mov add push mov imul inc ror (bad) xor mov inc insb cmp iret inc sbb push insl and mov aaa (bad) sbb sub ret xor cmp add jno insl mov jnp add inc hlt pusha push jbe jb test add sahf adc inc pop sub stos add add sub adc or jno jne aaa clc stc adc add sub gs or aas pop shlb add in push cltd mov xor pop xchg jl xor iret arpl push adcb pushf inc push cwtl je sbbl repnz fwait test add add sbb sub adc mov in push mov jmp xchg add cmp jno jecxz or movsb sub inc lret scas jb push and mov (bad) in push add jbe lret out ror sub adc add add and mov pop movb ss imul pop sub xorb loopne movsb push jbe cmp xchg push mov in insb mov subb push fwait push xor js mov inc pushf aad lcall mov bound pop addb stos mov (bad) icebp xsaves and pop faddl sti pushf pusha cmp jae pushf aad inc add push fbstp sar cwtl es pusha in cmp adcl inc fsubl pop popa add scas repnz push add pop jnp pop pop mov dec fmull mov mov inc cmp push dec popa jmp add mov ret (bad) mov imul jmp mov dec aam push pop or add jb pop mov scas mov in (bad) out inc repnz add imul jbe add (bad) mov dec in and arpl pop mov dec incl movsb js push cmp push lret add jecxz or mov pop (bad) push popa add adcb adc stos sbb add jecxz mov mov mov movb xchg jb jns cmpsb repnz scas movsb sarl hlt add cmpps xor sub add push adc mov lods add pusha rorl jp pop subb bound add scas lahf add lea add xchg into jns and jmp and (bad) add adc rcrb xchg imul or (bad) arpl inc add popf dec mov paddsw xchg inc int3 imul (bad) mov add out and add fidivl add mov bound cmc pop incb pusha inc jbe ret lret dec add push sbb inc sahf mov adcl std addr16 movb (bad) std movsb push push jge add xor fs adc adc pop jnp dec test mov add cld sahf iret pop fsts dec mov mov hlt inc add push add mov pop add jle inc cmp test out add stos jo mov sbb adc inc inc inc mov xchg push mov add aam call add push out scas fdivp add mov test add cmp and jge aas sub jo outsb popf adc push rcll cmp add add fadds stc pusha xchg ss mov and mov sti movsb dec jns insb add mov mov xchg cmp xor imul xor push js clc out sbbl fwait cmp and data16 pusha lret enter call lcall imul dec cmp pop cmp test add pop rorl adcb minps dec sbbl (bad) xor fsubp clc cs add arpl mov andl xor xchg xor add sbb add sbb mov (bad) cmp int3 xor adc pop push add sbb pusha jl,pn xchg add push mov ss sub lret mov sti punpcklbw mov cmc sub inc shr dec (bad) out scas xor fsubs arpl testl js popf dec test aam in roll rolb inc and pop (bad) in test mov pusha les mov inc nop jae push sbb lock push stos inc jp enter insb (bad) xchg movsb inc cwtl xchg lcall fsubrp aam andb pop stos insb (bad) fldl pop sub jno inc inc clc jo sbb flds mov imul in mulb add cmpsl enter push inc adc sub data16 pusha add mov push repnz mov sub in iret rcll and cmpsl push jl mov movsb adc negl lret (bad) ja cmpsl push (bad) in inc jmp inc pusha dec pop pop out sub jg adc pushf frstor add and pushl test (bad) jg add add or stc and add mov addr16 dec pusha pop (bad) mov inc add dec sbb imul add pop dec out repnz jecxz cmpsl scas mov sbb pop loope cmp add dec je jge add add mov mov jmp mov push inc push pop mov mov in ss mov mov jne jmp jle inc push repz lret movsb push ret aaa clc in adc sahf cmpsl cld push lret dec or in sbb push xor adc sahf and jo in mov add (bad) fiadd iret loopne cmp adc fucom inc jle xor mov bound or dec pop jp std test or out mov push sarl cmpsb add xor fcmovnu cmp xlat sub cltd cmp or out (bad) xor fdivr icebp lock sub and add ja mov add fwait add inc mov jno addr16 jg outsb jecxz fs push xchg mov add adc out push mov dec pushf pop push add les sbb add cli lcall push movsb and xor in jns pop add (bad) adc jp or sti inc jo andl popa aaa notb cmc add cmp stos les add (bad) loop aam stos adcb ds insl push decl fiadd xchg inc jns cltd mov xchg pop mov stc and in mov cmp add add or test xchg add inc mov pop cmp add fsub pop daa (bad) mov mov fldcw add sub mov aas add mov xlat push mov dec mov out xor arpl add xor xchg lret mov subl add out adc les test mov sbb jle add roll sbbl jle rolb xor cmp sub loope je (bad) jle dec add insb popa mov das pop ficom ljmp inc push add pop dec stos adc aam sub push inc ja,pn fldl js xor add mov scas pop add add dec jne sbb stos mov mov scas and sbb add push sbb arpl in jge ficom jae mov add pop ss sbb pop inc cli lahf xorb (bad) (bad) leave xor and sub clc pop jne loopne orl fldt shll (bad) fsubrl pop aaa movsb mov inc xchg out (bad) sub jge jl xor in imul insl or jl sbb pop pmaxub ret lret inc sahf fstpl inc adc flds rcr push add sbb (bad) mov inc inc lret ret sbb and adcw roll xor nop push adc rolb and insb pusha adc push into (bad) pop je pusha sub cld mov pop jb and push push xor cmp mov pushf fs adc jne leave and add ret dec mov jae lea pop jbe loopne xorl and cmp dec test fildl pop movsl into imul xchg lret adc mov icebp out xchg mov dec sbb push pop pusha add adc aaa lock mov repnz or mov cmp sbb mov scas and or rcl add dec lea add cmpl push xor roll ja jp dec xchg out push syscall faddl and (bad) fwait cli pop xor jg mov into inc cld pop cmc (bad) xor rorb in jp add mov add fnstenv inc (bad) mov and cmp hlt adc add pushf jnp jle add adc push icebp movsl sub or xor movb int mov cmp and fprem ja push outsb sbb loopne lea orb int push sbb cli add cmpsb mov pusha mov inc icebp mov xlat xorl mov rcll pop mov repz pop cmp mov pop and je out push push add inc push inc pop pop pop inc jle lret sub dec jecxz xchg xor add dec adc in aad dec mov inc pushf inc mov js nop data16 scas loope mov add mov das jbe add xchg and add adc in jecxz testl jb add jo mov idivb out mov testl sti jg loop add pop ret or test pop adc mov mov mov jno and mov lea imul in jecxz cwtl jle dec adcl in pshufw fidivr or pop js or sub and xchg inc or subb pop pusha add inc popa jg into andl icebp pop test cmpsl inc push cltd push andb dec in mov sbb lea icebp mov sti add in xchg sbb cmp push push loop dec add sarb movsl mov stc add sub mov scas sbb add pop mov shrl xchg loop sbb dec push mov mov je jl in cmc addr16 jbe mov sbb add xor rep (bad) mov and stos xchg int and test inc adc loope add in aad sbb mov pushf cmp or mov pop add pop inc pop mov roll in outsb and xchg inc add xor mov daa push or xor dec clc inc in rolb mov xchg add cwtl mov in test jp arpl pop test jecxz mov push dec pop int fstl add jge es rclb fidivr inc add arpl js icebp add repnz xor mov fidivrl ja add cwtl pop pop cmp popf stc add xor sub fcoms mov jle pop mov not sbb fucompp (bad) jno (bad) mov addr16 pop sbb sub mov add dec lcall mov and add xrelease add fdivrs mov inc sbbl dec popa mov pop xchg add mov addb sbb pop pusha aas push outsl lahf add xchg lods faddl mov mov add in icebp inc out jmp mov imul (bad) or xchg testl testb push push push mov add pop or adc push add into out sbb xchg sub shll xchg dec or and loop add outsb add fsts add cmc int add cmpsl cmpb jbe mov and inc inc mov push pusha add (bad) push leave or add or imul add or add repnz cmc movsb mov add call ss push add sbb mov cmp fisubl xchg lret add and add jo mov adc icebp andb add movsb movsl xchg or push xchg cmp jae inc data16 inc cld adc pop addr16 xor mov imul rcl dec xorl arpl scas leave pop adc pop jmp out das xor in (bad) push push add xor out bound loopne pop add mov and dec setne xor jae mov adc sbb addr16 push pop xchg or and sarl and cltd push ja xor add xchg add jmp pusha int adc mov add arpl jo,pn jne add pusha xchg je sbb add mov std adc inc dec lock je in lods loope jnp movsb or mov jo mov lods test lcall and dec aas sbb xor movsb add sarl add out mov xorl mov std adc pop sbb aaa cmp sbb ret cmp repnz ret mov add lods sub iret mov push pushf mov pop call add psadbw push sub sub or popf mov fiaddl mov sub jb jbe out (bad) jbe scas pop mov add cli and movsb xchg push aad dec (bad) lds jbe das cmp xor add or dec jp mov inc add popf hlt mov fs push lahf add mov dec loope xchg int3 add add inc sub (bad) pusha push mov mov sbb push cs insl sarb xor add and bound add and rcl push dec and and mov xor push xor add stos push or xlat addl lods jbe cmpsl jae push popa mov add mov adc and js push test out add push pop adc repnz add xchg add fbld add and mov stos loope pop add (bad) mov add dec arpl jecxz leave stc test jl add cmpb and bound les jb cmp addl push jbe xchg orl mov (bad) xor je sbb adcl jne popa hlt mov in add ret repz inc add push scas mov mov xchg or jb fadds push inc dec sub sub cs jb iret sbb imul fs add je cmp mov movsl push mov shlb or jg dec xchg out (bad) sbb sub add jo movsl jno in out sbbb clc dec popf inc mov lds lret je add mov (bad) aas clc sahf push cmp push sbbb loopne ret jle push ja sbb movsl ror xlat pusha cmp cld mov mov jns aad pop dec add stc stos je ja pop add loop cld xchg clc adc rorl js stos icebp add adc out js xorl sbb imul mov mov (bad) (bad) imul in sbb out fstpt pop add popf outsl (bad) ja inc add lods or in pusha add out insb aaa pop fcomps add outsl call and xlat fs add xorl push daa mov pusha lret cmp int3 or cli sub add cmp sbb mov fmuls repz roll scas add mov je add ficom pushf clc pop or out insl add xchg dec add aaa add dec xor jne ficom push xlat mov or movsb loopne (bad) mov jmp mov test add inc nop in dec fldcw add out sub and add push andl ja or or repnz cmp mov and movl adc inc lret xchg inc xchg daa aad add repnz lods xchg xor and shll leave hlt add imul cmp xchg push js mov stos lea loope imul cmp mov scas pop stc cmp jbe mov add sub jp icebp jp add mov pop jo push nop adc rolb arpl xchg pushf mov hlt jne int fsubr add arpl mov mov mov jns daa dec fs xchg add adc lock rorb notb sahf es out insl pusha inc mov andl (bad) rolb lods dec cmpsl pushf and in inc jp pop fcmovu (bad) js cmc adc and push sub lcall dec inc mov repz mov out push add xchg adc subb add push mov add mov jmp icebp jne pop loop movsl pop pusha push int3 push and mov pop mov leave das pusha push outsl xchg (bad) mov mov xchg push xor stos mov call jg jl jns add fdivl xor mov incl movsl (bad) push daa xchg cmp push cmp inc adc test dec push xchg mov or test fsubp scas mov xchg (bad) cmp out sbb icebp mov roll jp jg push xchg addl sahf xchg mov mov lcall jnp jecxz sbb insb sub sbb leave imul rolb fdivrs jle xchg popf fcmovnbe inc mov loopne dec mov addr16 ja mov jl rcl nop (bad) es js inc add push xor lock pop push or mov jg mov sbb add jl mov jge add xchg cli dec std idivl mov inc jle mov add pop mov ret movsb add movsl test dec fisttpl add rorl fstpl movsb pusha fs (bad) nop xlat add xor add inc add pop xor test or add inc movb insb xor pop cmp out xchg push movsb and outsb mov xchg add fs dec in or addl inc mov lods subl mov sahf scas lret lods or (bad) sti daa adc sahf (bad) std das pop repz push xchg xor dec dec call add sbb fwait add inc add test sbb pusha fiaddl add xor das test xor call or cmc jbe add mov dec mov and ljmp adc adc mov sbb lock sub xchg arpl mov add clc es cmp dec cmp xor jp mov mov aas pop sbb inc add mov flds mov jnp mov hlt nop jp push out movl xor xor add xlat push (bad) sub sbb add pushw lret inc in adc add xchg dec xchg or dec and fildl cmpl pop add sbb mov xor pop (bad) or xor test sahf jge adc into inc inc add add xlat dec je data16 add add ljmp in movsl fs into cwtl or jp int mov mov mov call pop popa daa lahf not imul js dec jge (bad) jbe add pop add gs inc bound cmp (bad) push rcr test dec xchg pusha ss sub cmp push js mov test pusha sbb mov fldl decl add cmp repz and iret adc add adc or test je push dec jo mov sbbl and add (bad) cli xorb pusha repz cmc arpl mov cmp fldenv push cmp fild push sbb andb cmp pop xchg xchg aaa sbb mov mov push xor mov mov sbb or mov outsl pop arpl into std into add push add pop add mov mov imul out out aaa js mov sbb adc movsl int3 xchg and mov (bad) mov pop sbb mov jo (bad) aad push fwait js lret fldenv aaa or das dec xor test pop inc pushf loopne arpl adc jno icebp pop fcomps lods dec aam das jle je std rorb insb shrl add jp mov data16 and imul rcrb add jg adc cmpsb jge jae and imul lahf add add mov or push pop out jge add popf rcll lds fild das inc subl push pusha mov or cmc xchg daa test add cmp xor imul dec and push pop adc hlt adc jl add sub fldl jb add fsubl sub add or sbb syscall pop cmp pop ror sarb lahf add hlt sbb cmp mov jb and cltd xor int3 cmp je pop xchg or pop add negl jp sbb push pop scas (bad) jae (bad) jle xchg shr inc fs pop inc add fisubrl dec aaa or add push mov add push xchg js repnz adc pop mov negl sbb push cmp jg lock sarl push pop orl stos push iret hlt xchg stc dec add rcl dec pop and scas enter daa and test int3 mov aaa andl or ss inc jns xchg or imul cmpsl jle fnstenv decb mov jmp push in inc mov add in mov ret push (bad) inc rolb sbb insb icebp inc add inc repz add cmp pop add cmp mov and test outsb mov lods add lret jecxz (bad) or fwait xchg xchg xor dec add stc push sbb rclb mov jle pop sub cmp out dec fcoms add xchg fwait mov mov add icebp stos shrb fsubrs jecxz iret rclb cwtl and mov mov push cltd ror inc sub xor lock and fwait xlat jo xor psubusw out rclb bound mov out add jns pop push cmp sub mov roll push movsl jge pusha scas and add sbb add aas push popl mov push add jb arpl jno push add adc jl pusha jg jne and loopne or rorl add pusha jecxz sbb add fdivrs add movsb and roll cmc adc jae (bad) divb jl lret popa push repnz inc cmp mov jg sbb mov push sub or mov mov pop outsl mov icebp and jmp add push sub pop add inc inc aas push add mov dec movl mov mov add jg test dec das pop sbb icebp je push sbb add push xor mov mov add sub pushf add mov push add jp add js jno pusha popl fstpt (bad) jp mov cmp add mov dec mov mov out cmp jae mov daa mov dec js pop pop lahf inc jg push jnp push aam add dec dec add push cltd outsb in (bad) (bad) sbb test dec addr16 int ja add and mov out pop cmp cli mov and ds or dec out cmp mov or add shrl xchg sub aas xlat shl orb cmp ds cmp add mov mov jle ja cmc mov rclb inc ret jae add sub dec jno sbb in push and mov adc pushf add pop aam sub js add push or or mov fisttpll sbb add sbb pop insb pop sahf mov and leave test mov loope out cmp pop cmc loopne mov sbbb jb mov adc sub popf andb dec inc adc stc pusha inc stos popl xorl pop mov inc add repnz pop cmp loop sbb push (bad) int pop or in sahf jae add mov sbb add ret enter dec jno test mov leave pop jmp dec aam scas imul pusha mov add movsb fisubrl loopne lret jns std incb (bad) jmp outsl add scas cmpps leave fldl bound mov xchg jnp and dec or cmpsb stos push xchg xor pop popf inc les pushf add mov add dec sub adc jae push sahf xchg ja add fwait xchg xlat lock mov cmpsb mov xchg add stc scas stos pushf pop push add jo aas mov add push xchg mov je add push nop xlat add repnz cmp dec outsb pop xor mov inc roll xor loopne es fwait (bad) fiaddl divl imul ret adc add push (bad) repz in xchg leave decl jecxz add jge ljmp xchg test imul push add fisubrl sbb add scas jnp jecxz add pop jbe imul push (bad) jnp add arpl or add stc roll add stos fucompp test in xchg pusha adcl sub jns pop scas push xchg testl add (bad) adc (bad) daa test pusha dec cmc bound xor mov dec arpl imul mov ja xor push push aas mov add mov add xchg loopne mov mov aaa ljmp rcll add sub fs pop cmp inc add push mov pop adcl pop and add bound dec addr16 test imul add xor pop sbb pusha testb jge out add sub (bad) btc push add inc push std push aad lods xor in aam je cmp jge ljmp sbb fsubp lret call popf leave and inc (bad) daa aas in add mov xchg int3 jg mov pop lds mov push les pop add insl jg xor sub add std pop lods add shll xchg xchg add aad jmp mov pop adc sub mov sbb movsb mov add add scas and loope ret jg xchg push aaa andl and testb inc inc not cmp add add adc mov pop sub mov hlt jb or sahf int3 push or and out dec fiaddl inc add cmpl jae jo movl xchg lahf pop add cli into push push xorl xchg add xchg or popa cmp ss out pop add stos dec push fdiv pop add add xchg jmp push push inc push cmp and add xor mov cmpsb pop mov jg add dec push ret fsqrt xor pusha xchg or pop add dec cmpsl dec push loopne negl imulb push pop repz jae jnp xor sbb int3 xchg fsubr or jle jae mov addl fadds mov lcall cmp jl into xor clc pop incl aas or ljmp and insb fldl sbb mov das addr16 xchg push lahf cmc xchg inc mov add ljmp vmread iret dec mov mov add mov or fdivl popa add jno push mov xchg enter movsb mov sub cmpsb cmp add mov cmp mov lock lods mov inc test add jge and mov sub jne wbinvd jl out adc dec bound pop dec pop loopne pop pop xchg loope scas jg inc bnd fcmovne shl mov inc pop into loop es push scas or ret hlt or sbb or nop xchg idivl movhps pusha lods (bad) cmp pop imul cli inc inc sbb add push and jns add fsts pop add add add frstor inc and aas sarl ss sbb jbe arpl push mov inc mov and push jno cmp xorl and outsb sbb in movsl hlt lds xchg lret pusha jns mov inc mov andl mov imul fwait pop loop dec sub xor xchg add fnstcw inc in add mov mov fldl pop cli mov pop pop xchg jo and ja mov xor out inc adc xchg cmp cwtl js mov inc add mov adc roll push add out in cmc std nopl lcall mov imul xor add push fisub or push jae test popf adc ficoml outsb xchg iret (bad) push (bad) fs lret adc incl lods ljmp enter int3 inc sbb pop pop pop cmpxchg dec into mov add xchg aad je add aas mov and popl push pusha pop add sub xor (bad) rolb jecxz mov add in mov push sbbb out jns scas add sti (bad) in cmp data16 rorb fiaddl (bad) outsb fcoml xor jbe (bad) mov push mov mov rorl sub mov scas (bad) negb jae aad pop mov pushf rcll std add loop mov adc ds add push add int3 and cmp (bad) add test clc mov inc jne mov in std jmp pop add imul sub sub push into je iret rorb dec add or push add aas ss sbb cmpsl and lods xor js loopne test iret repnz loop inc dec cld jge jl add inc rcrb or loopw cmp cli sub iret add jp adc jb xor xor cltd in xchg xchg rcrl jo cs add movsb add jp add mov add lret in push test cmp add mov push jne xchg movsl test ret sti repz sub (bad) xor mov dec add loop orb add test in lds bound scas add insb add sbb sub push and repz jp addr16 sahf pop pop fadd leave add jecxz jno fnstcw mov out pushf add clc rcrb cli cmp int lret sarl (bad) fs inc push add xchg xchg aam pop js add inc and pxor jo shll ret add push out pop dec clc lcall jge xchg ret out (bad) and les arpl daa incl sbb or adc sub jecxz sbb xchg cmp mov test mov add inc add jns xor cli ret jne mov cmp inc push (bad) cmp push add and xchg mov mov push dec pusha cmp mov fucomip xchg pop mov add xor xchg aas sahf mov js xchg ljmp lds xchg sarb cmp push cli lret les add push or sarb sahf insl fsts addb inc test jl dec pop addl cmp (bad) mov xor pop outsb adc xor mov or add inc mov add mov iret add push or sbb mov movb cmpsb xchg xchg and pop sbb (bad) scas enter in (bad) push mov loop fist or jnp sahf mov ljmp ja add cmp add lock add cmp addb push imul adc pop xchg pusha mov (bad) ja fild adc pop popf dec push faddp add push js pop pushf les cs adc pop nop addl iret and int mov lcall call xlat dec or pop cld add push fdivrs add lock lea pop mov roll dec push dec inc jecxz jg xchg add push mov add scas mov add mov cmc push fadds inc and and in add jae sti lock mov jno scas sub fcomi cmpl jne sub jbe push mov push add lcall add leave test movsb xlat mov dec add popf outsl xchg or je add jbe add mov in sbb cmpl aaa into add or mov popa jmp add inc sbb cwtl and imul push mov add and and mov fwait je stos scas push add and (bad) xor mov mov ret sub je xchg adcb inc add (bad) add sbbl dec adc int3 add xchg mov (bad) adc addb je mov imul aas jne fdivs push add xchg rorl cmpsb in ret test outsl sub cmp rcrb repz test cmp rcr sub dec lret mov dec popa dec push push gs push cmp inc cmp subb xorl gs and insb push push or mov ljmp out cmp lea push repz xor jns jne mov stos add arpl xorb cmp or sbb jne mov repz in pop aam mov mov push push xchg and pop and cmc xor (bad) ss stc aaa xlat jno xchg icebp sub (bad) fdivl pop ret imul mov in mov xorb faddl stc gs js mov push out inc inc cmp inc add testb loop mov test add and cmpsb fidiv push test add lods pusha int3 mov mov call add insl mov ds adc jmp popf and lods (bad) cmp das sub add add mov inc cmpl or lret sub cltd and mov ss dec (bad) cmp or ret jo lea jns loop clc lods mov inc jno jmp imul out lahf mov mov ds pop dec inc and sbb mov jb add or es mov sbb inc test xchg divb pop inc mov xor dec inc cmp mov les sub sahf sbb or insb repnz out mov fnstenv add cmp inc jge lods mov sbb les push jns and enter stos add xabort shll mov adcl das inc jmp pusha jns inc js rcl add cmp sbb scas dec add xor outsb add mov pusha pop pusha xchg dec lret sub inc loopne pushf ss stos out mov add pop aad jmp lcall adc lds add lea inc mov or sub stc ljmp add pop fucom push sbb jp pand and mov pushf cltd add sbb add arpl lods add mov loopne in lcall test shrl hlt cmp outsb test (bad) jle pop into mov sbbl je,pt fs or add in popf inc pop fiaddl test mov add push adc cmp xor addb adc pop jmp out dec clc add xor jge mov cmp sbb mov sbbl jno and repnz jb int3 xor cmp add cli and sbb sti add or xchg (bad) xor aam gs inc or dec add aas mov add lea push xchg je add orl ret push mov pop mov repnz jbe mov inc jb inc sub xchg mov in xor lods les (bad) pusha mov mov inc sub out inc outsl push jnp adc or test mov jl add and mov sbb mov fmuls lahf cmp (bad) ljmp jbe add test mov aaa adc imul adc cld push jp test mov sub cmpsl push add ret rcr push jns pop push add cmpsb nop or lcall push add dec push cld add fucomi sub in icebp cmp and mov lahf jns fsts add divl std inc leave hlt add test jle popf mov rclb pop and xor jb,pn cmpsl testl pop or iret orb rcrb out add add add dec mov add ret fmuls add lea add pop and adc sarl std sbb mov push xchg cmpl sub lret cld gs scas jg add movb pusha pop inc mov and (bad) push stc adc mov (bad) add fadds sbb lcall test mov mov lea or aad add cld jmp movsb outsb xor xchg adcb push call add aam test pusha jb data16 insb lahf add pop bound add mov das lea cld dec mov pop add mov sbb int cwtl xor inc ja je xchg sbbl (bad) add fs call push inc test mov jge pop pop fsubp aaa repz clc or ljmp xor insl and xor popa fcomps xchg add cmp and stos jge xor scas push add adcl xor sub lahf dec xchg and sarb pop outsb sbb std stc ret inc not add sarb xor ss jno incl mov add add and subb pushf js ret jb mov add je aaa ljmp cmp stos test adc mov cmc iret lds pop add fisttp push mov fs xor popa es sbb dec into add loop add mov nop add jmp gs je mov inc inc add push add dec mov (bad) sbb lahf cmpb xor cmpl push sti push push pop ss cmc add sbb fist ds jnp fwait add and add (bad) call xor dec add xchg faddp jge cmc repnz lcall js gs fs or jb add and push in xchg js and xor bound (bad) xchg pop test pop jg sti fildl push mov aam ret dec inc mov test jle mov inc out iret fsubl and imul mov out and add jge pop push mov fwait and insl jns xchg and xchg and jo in clc adc sub fimul push and popa inc fucompp repnz push and orb pop stc jle outsb rorl aas sub lea sti cmp and fcmove jo test jp cmp es (bad) jbe jle add dec dec out sbb rolb fs mov add dec pushf pop mov subl popf lock pop das addr16 and add aas sbb out loop shll adc and sti mov or lods push fistp and (bad) mov push lret nop add add fstpt ja sahf mov add push adc jl add sub lret je mov int3 in add (bad) or adc push xor lea xor mov and add sbb xchg add (bad) xchg incb hlt in xor (bad) je add bound pusha xor ljmp fldcw sbb outsb and cmp into push (bad) pusha arpl inc punpcklbw sub and fistpll add add push add repz and push adc jnp adc inc jmp mov inc data16 and addr16 jbe sub lret adcl sub push pop cmp sbb mov inc push inc xchg sbb jo and jge jl jmp pushf lds add mov out xor adc adc inc popf or mov shlb je push in pusha lahf subl out jnp mov or jbe push sahf mov adc sbb inc mov lds push or jo addl add xlat loope daa jle notl subl jp sahf je ds inc inc or repz push pusha hlt xchg dec add mov pusha pop outsl movsl add sbb sub iret add xorb not add dec addr16 push pop add pop adc std fs js (bad) fnsave push std inc add rorb add or popa mov adc mov dec add push mov mov adc push icebp gs mov andl dec push scas jecxz rclb or clc mulb add mov lea and xchg jae mov mov lods pusha dec xor and add out jae add cmp test call daa imul jp lahf decl ret cmp xchg cwtl push push scas cmpsl sbb adc push js or nop mov lock add fcomps xchg popf xor jmp inc (bad) inc out nop add (bad) push sbb or cmp mulb dec in xor add (bad) cmc lret clc popl popf jo out dec or or incl xchg add addr16 add (bad) out outsb add ret sub pop add ljmp add jae (bad) (bad) jne sbb fldl and flds fisttpl adc and pop gs stc faddl cmc dec aad xor add push movl and add orb call xor mov pop (bad) popa or shl mov xor dec cmpl mov mov addr16 xor sbb shrl mov or fdivrp xchg sub sub les cmp cmc and aad sbb mov test popf mov jae (bad) cmp sub cmp and jnp pop ja mov fcomp xor sub lahf (bad) mov pop cs icebp add xor push add call jl add cmpsl rolb add xchg sbb add sbbl sub add outsb (bad) outsb and ss dec loop lods adc pop add inc sub scas mov cmpsl lea lods xor mov add (bad) movsb cld mov mov add add inc cltd (bad) hlt test mov pusha dec jge clc jne addl mov out bound mov dec idivl rolb andl pop out pop sbbl into sbbl inc add nop push in cs xchg or jns daa (bad) ss testl sub jl movsl xchg addl stc xor fwait add jne inc xchg cvtpi2ps mov sbb and mov mov and leave add popf jg jmp hlt fsin add stos outsb in mov addl and sub pop push lea lret movl jmp xchg test repnz mov fnstenv addl fdivs mov decl inc test loopne hlt add jge fild mov cmpsl mov and fiadd adc nop adc lea rorl mov xor in and orl sbb add loope incl dec repz inc (bad) add jle popa xchg stos jb add or or fist mov test xor push add ds (bad) xor jle frstor movsl push loope pmulhw rol mov sti sbb dec or cmp jle pop jg xor aas add rcll add cmp sub fsubr je movsl rdtsc aas cmovle push adc mov cmp dec mov cmp (bad) add and add cmpsb cmp int hlt add repz js cmp ret faddl or fwait jne sub or mov mov add roll int add lcall push fwait mov and jmp xor movsl add cmp ret popf mov sti in add xchg cli mov cmc inc mov jmp dec adc jne pop sbb add fcoml dec push rolb sbb xchg sbbb lcall jg add addl cwtl xchg add mov into push add push mov cltd shl add pop mov cmp and (bad) mov incl lods insb push adc cwtl jo (bad) jb mov enter inc mov add bound outsb mov int3 ficoml push imul jg data16 xchg push inc fmull add jae stc flds jno add cltd cmpsl (bad) out into fs push inc fwait inc jbe sbb mov adcl fildl arpl mov setle (bad) fistp mov xchg push mov je les pop xor inc aad or add and xchg out int3 pop (bad) xor ds std pop xchg jge addr16 jecxz push movsb cmp push (bad) in subl push pusha lret mov and dec adc loope or rcrl add adc cwtl repnz pop mov pop push mov ja fdivr mov mov xchg sbbb rclb add xor iret jge pushf sarb and sahf jl cmpb sbb push mov (bad) or push movsb mov and xlat cmp mov mov bnd (bad) fdivr test or ror xor subl push cmpsb outsl (bad) push mov lcall scas cmpsl lret inc push lock out inc cmpl adc or mov ret add out es pop sub mov mov std out sbb mov (bad) lret add xorb mov arpl adc jg add jbe enter add xchg add add das mov inc cltd stc adc push popl adc xchg fstpt outsb ret stos notl mov imul subb loope std rcll jmp aas les pop mov rcl ljmp inc test add mov add pop stc or xchg pop mov lods shr push sti add cmp das add test add aas xchg add xor data16 cmp add decl (bad) mov cmpsb addr16 sub add mov cmp inc mov int3 dec add in cmc addb cwtd inc dec mov movsb push or rclb or outsb add mov pop adc inc push fwait hlt into in sbb sbb roll and mov add andl dec fadds or push add adc xor icebp inc push lcall mov jl xchg aam cld sub jb add mov and push cmp incb push cltd scas jo imul xor popa pusha out cmpsl add mov xchg out scas outsb jno add ss xor mov jb bswap inc xchg test je jge fwait pusha sbb popa push xchg mov in gs pushf cmp das cmp pop mov jl inc mov xchg xchg xorps and mov pop adc jno mov jae mov pop repz daa mov mov inc add xchg insb out cmc test cmp add rcr lcall aas add mov add pop loopne add sbb sarb mov jg test in sbb in (bad) mov xchg repz pop sti js add mov pusha roll cwtl insb aaa daa cmp and shrl fadds out xlat pushf ss mov bound jecxz pop cmpsl ret xchg pop ficom inc adc mov fs bound xlat xor sub jb xchg sbb or jnp (bad) popa daa adcl sti mov push add inc xor sub add lahf add sub add xchg or jae aaa mov sub lock adc fidivr add mov or jno pop xchg lock enter xlat or mov cmp push adc roll sbb cmp mov out repnz addr16 aas in ds popf cmp adc jo insl pusha jo mov add lcall sub jmp rorl (bad) mov addb js xchg inc add ljmp add cmp push mov xor sub add pop mov arpl fs jno (bad) popl add mov inc call movsb jo jg mov sbb rolb adc js add push popa adc sahf fnstenv lock cmpsb stos and mov mov inc mov pop add (bad) xor push sbb cmp xchg push pop add xchg sbb or add (bad) jno mov adc test cmp movsb call loopne into repnz mov add pop cmpsl and jmp pop lods mov scas insl and ss add in cltd sbb add call mov jp add arpl or and and jle fsubs sbb sub cs popa add ficom (bad) ja sub inc es mov fs xchg mov int3 fiadd cmp pop roll lds bound xor adc movb jg leave int3 xchg popa mov mov sbb popf bound push push ror cmp in inc sbb lock push imul incl cmp or jge mov clc subl stos inc test xchg xor xchg les lret movsl jo inc test cmp loopne gs mov mov pushf cmpsl push xor rorl mov sbb jg pop fcoml movsl aam xchg xor jmp add pop jo add mov jnp add push adc daa shlb or mov or notl fwait push push inc jg popl or pusha stc cmp jo mov fimull jnp movsl mov add enter pop out subb push dec mov es fnsave pop add mov roll cwtl ret pop mov add push es cs fcoml iret add repz xor enter push dec pop add mov lea decb imul xor xchg mov cld xorb inc cmp add sub sub roll add fwait pop sahf cld imul in mov and pop fildll mov add cmp mov cmp add pop adc fistl enter add cmp push add inc popf jmp dec mov lcall mov add in sbbl pusha lock add sub stos xchg inc inc add mov sbb ds sbb add pop movsb addr16 (bad) push lcall call imul lods add and mov orl xor pusha adc or (bad) daa stc icebp add adc fiaddl jmp cmp dec (bad) stc mov test jp aaa adc clc fisubr out cmpsb add fbstp test jns add dec idiv sahf ret add mov push std add jp inc pusha pop push fs pop hlt ret pop aaa jne mov jnp mov dec daa push add sarl mov adc test sar add cwtl dec xchg (bad) movsl add cmpsl out inc add jo sub pop jl call add push or repz push inc lahf xchg dec mov sbb test add and push dec andl test xchg hlt and xchg push dec adc movsl mov pop in stc mov outsl popf pop cmp add jno js push cmp add enter adc or sub mov sbb testl mov adc pop cmpsb inc add test clc ret xor or lcall or mov pop cmp pop add xchg ja push sub hlt add jno lods add in pop cmpsb sub lcall add shr leave into ds add mov test push add adc pop xor cmp das mov call insb addl sbb das mov adc rcl sbbl add add adcb mov faddl mov mov jecxz cmp push or pop (bad) mov pop add lds sub sbb or dec sbb mov jmp out pop mov cltd dec fidivrl push pop fdivl inc or fs jbe add cmp ja cmp daa pop clc add or push mov add outsl inc popf scas push cmp xchg dec xor adc popf cltd mov pusha xchg data16 cwtl cmp push pop mov xor xchg addl jmp or aaa add pop hlt mov faddl add jbe pop inc sub into cltd xchg add fildll xchg jge movsb xor bnd lret inc or jne xlat nop das push sub test outsb jnp pusha or or notb jne inc pop mov movl lahf subl or add jg push add outsb sbb cmpl and test push pop add mov mov dec and add jl jb imul pusha fwait test pop cmp aad lods xlat out arpl sbb fsubrs mov pop cwtl mov xchg and jb addb loopne inc pushf add mov sti popf add jne or jmp stos xchg fwait xchg add mov push movsb pusha imul in add leave xor cmp add ljmp add int3 push dec ret or imul lahf (bad) xor jnp cmpsl adc sahf cmc sbb scas jmp loop call cmpb cmp cmp add mov add dec push xor cmpb inc xchg and es divb add (bad) loope jp mov nop mov add cld jns sti mov out inc jbe (bad) xchg pushf rclb arpl repz jg add inc repnz pushf sti rolb rcrl pop mov mov add dec mov add push push mov adc outsb scas fdivrs lret in lahf jecxz pop das test and add cmpsl push add xor add adc dec sub fidiv add icebp fidivl out subb mov in pop out push faddl les lock out add sbb jecxz sbb pushf call hlt movsb jnp mov pop rolb fisubl fildll (bad) into sub mov inc addb pushf movsb cmc shr push and xchg pop dec add data16 test xchg inc popf fs in adc jle int aaa push mov add sub mov jae sbbl push (bad) ja clc inc aad mov dec push adc mov sub incl sbb jb mov mov mov icebp div cmp or clc out push out xor mov nop or xor mov pop xlat fwait adc std pop dec xchg test mov mov test push adc mov jecxz ss popf jno pcmpeqb daa sub add mov xchg or pop add inc mov mov lock les push and or incl or in push xor pop jl jnp pusha fstl int loopne push jbe jb or sahf lret movsb adc xchg mov xor cmp jbe mov mov adc pusha jne push mov ljmp jg cmpsb mov idivl add mov outsb loop mov daa sub loopne dec mov add js fisttpll loop or xchg arpl push push and pop add repz add aam ret add push sub xchg inc cmpl fs pusha mov pop lea int3 hlt fnstenv add jb sbb add xchg or inc adc mov and andl push push mov andl xor jbe cmc mov cmp hlt add adc fcoms and cld stos jle mov sub jg cwtl in and lret dec lret rol dec dec or rcrb lret gs jge stos lea adc or inc mov (bad) fldenv cmp iret or js stos mov push inc jg mov jmp adc je adc sbb mov sub into (bad) jmp call jle test push fisttp lret leave (bad) clc int3 lea add pop push sub or pop and data16 aas lea (bad) xor call xchg sbb enter sbb sbb cmp add push lods lds lret mov pop movsl cmp xchg les cmp and mov ja add sahf add pop adc add scas push dec into jge add cmp addl loope rolb in das jbe add fisubl push pop inc sub xor inc mov std mov pop mov pop stos mov sub xor jp adc pop iret andl dec push xchg incl std jmp push adc push test add and inc fldl mov xchg adc data16 ljmp in pop fs add cld push inc add mov dec mov mov mov sbb add out lea add mov xchg add and sbb push (bad) sbb xorl hlt das sub popl jbe sbb xchg insb test sahf inc add or add (bad) adc inc push add pop fs mov fisubr pop mov faddl pop lock inc sub cltd xchg push add xchg cmp nop ret add loop jmp xor imul and addl rorl add push inc add xchg aam adc in add pop outsl push loope mov xor inc mov in push mov mov cmpsb inc add inc repz sub jmp add out std call insl add scas push pushf mov dec loop mov popf add inc jge mov jp xchg lds or jo test dec push sub jge xor pop and adc sbb cli adcb lods imul pop mov scas int rorb jo ds stos movl loopne mov add and add in cmp push xchg sub pusha jae pop loop add js xchg xchg push not aam das jb lods mov fldcw je or pusha es sub loopne mov insl push outsb repnz in jl sub push fucomi fdivl adc add lock push arpl (bad) je adc cmp jnp add mov out mov (bad) aam cli add movsl sbb das cmpsb leave jne push pop xchg ret or sbb testb iret add les roll mov inc (bad) push cmp mov sti jg cmp aaa add sub inc inc add pop test repnz jno fidivrl sub mov roll iret ret push jnp pop mov add pop (bad) jmp cmp add daa xor in outsb mov lock xchg rcll fstl hlt movsl and pop pushf mov pop add dec add xchg cs mov mull xchg mov inc daa aas addl in inc add jb sbb or xor adc pop push jp pop and add sbb add push xchg xchg movsb cmp (bad) pop andl jns push add xlat jmp fwait cmp addl push movsb fistpl incb mov lret popa les sbb mov mov ja xchg mov pop xor add adc xchg dec inc sub in jge mull cmc roll add insl (bad) clc sahf (bad) mov test mov cmpsl mov mov inc decl insb xlat mov (bad) das adcb sbb dec (bad) dec jl out add mov pop icebp mov add cmpsb mov xor test outsl add loop xchg bound push mov movsb add xchg test jmp adc jle (bad) aad dec dec push jae add mov mov lods leave in push adc add mov sbb push adc add out icebp add dec mov adc mov enter push pushf dec addr16 in mov add popa and movsl push adc imul xlat imul dec fldenv sbb das (bad) pop into (bad) mov std es fucom cltd stos add mov pusha add fwait push jbe cmpsb hlt add push mov push dec xchg add xchg jg idivl pusha jbe push jp jno add inc jno cmp dec sbb jns push addr16 pop dec cmc add pop inc popf inc ret add jns (bad) loope scas add adc stc addr16 mov dec int3 sub add push and xor xlat out (bad) sub add cmp add push test add sbb add pop (bad) or shr enter je ret mov jmp (bad) dec pop push jnp into mov lahf cmp rolb cmpsb jecxz ljmp (bad) loope cwtl jnp add or add sub pushf mov out jbe push sub roll (bad) pop sti pop les mov adc push add les add lahf xchg add in clc xchg (bad) and (bad) cmp jge les imul mov xchg mov lahf out mov pop in mov cmpl mov add and and mov imul push bound add sub icebp jge fdivrs xlat add pop pusha loop popf add adcl push xor inc rclb xor leave sti add sub and sbb (bad) loop or int xor jno (bad) mov repz lahf jae adc xor in je aaa cmpb pusha mov add xchg js cmc cmp mov xchg repnz arpl mov outsb (bad) (bad) std fadds inc jae pushf test xchg inc adc add pop pop mov mov test pop je push push xchg xchg pop js add dec rol xchg xchg add ds hlt or ret mov lods cltd xor pop stc xchg loopne iret mov and loopne xchg into add inc test lods out xchg push sub pop dec add dec dec adc add enter mov imul fidiv xchg rorb cmp mov or ret add rcrl cmpsb jmp and mov sti add adc add cli outsl xchg pop in and jo out xor add mov scas mov mov leave dec and rolb testl inc mov mov jbe add jne pop repz test cmp xchg push (bad) sbb aad mov mov cmp outsb sarb rorl iret (bad) xchg andb push xor movsl add movsb lods dec jmp pop mov add adc cmp popf out mov flds incb cmp orb into jo ss pop mov bound stc out push cmp jns stos sti dec leave pop popa aaa or add fidiv mov xchg cmp add out ja xchg mov push xchg dec or cmp xor adc (bad) adc inc push test jb or jge inc mov addl and popf push stos repz repnz sti roll es (bad) mov xchg roll std or shll int cld or sahf enter in cmp stos mov and dec aad out push sub into add js xchg addl loope jo push dec add stc (bad) pop add or enter jno inc pop cmp add or and dec rorb add sbbl add test inc nop jnp cld sbbb pop aad adc cmp push fisubl test stc add xchg mov mov movsb and add mov pop or mov inc fiadd dec mov sti pop test mov scas call fxch or add (bad) hlt inc xor add or (bad) cmc sub js pop addl xor rclb cmpl stos inc das or add add rcl and add pusha orl mov jne aas add xchg cltd fimul subl pusha cmp jp pop jne stc pop ds adc pop adc imul test dec and rclb repnz mov aad setp push in into xor dec pop fisubl je movsb cmp jle xchg popf flds dec dec pop fwait sbb push and imul or (bad) xchg cmpsl push push fwait mov es fstpt mov data16 xchg push jl sbb xor cmp adc xchg lods ljmp add mov (bad) push pop xchg xorb mov jecxz int3 cmp inc jmp dec (bad) lahf pop add aaa fcoms lods jne loop popa sub add dec jle dec faddl rclb jnp jp inc in stos push testl pop jg xchg je jge add stc out xchg lret sub inc insb jle inc cmp test inc xchg adc mov pop or fcompl and push sbb xor data16 das sahf call cmp add test scas xchg mov and inc jle out and (bad) mov (bad) in pop sahf jno scas sarb xchg aas cmp mov test add icebp adc bound hlt or fs enter push inc insl push jbe movsl sbb sbb ret arpl and int in lds incb das push dec jle cld adcl testl add out mov pop inc ret sub in cmp and add sarl add frstor jns pop sub mov in stos push (bad) mov add xlat and test jne call mov test sub pop cmp ja insl sbb add gs in mov pop cmp (bad) dec push jne repz fcmovu ljmp pushf cs and or (bad) jl dec cmpsl (bad) imul sbb stc add enter sbb add and dec add faddl push mov insl sub xchg add js addb xor cli jae jo xchg push add fs add jmp cmp out inc (bad) dec aas add out push sbb aam and pushf test inc movsl cli out popf pop das inc xchg dec das and mov test xlat dec xchg add pop sub shrl add xor aaa jl mov enter bound mov stc push insl test pop mov subl push ljmp daa sub loopne,pn dec sbb cmp inc xchg fsubrs mov jmp (bad) push and aam add jecxz,pt pop repz out lea push popf daa add xchg ss shrl and push movsl shrb movb imul sahf fisttp movsb and adc sub and mov in and std cltd dec or nop dec or (bad) sbb mov out xlat iret ret jge add cmp jae pop dec add sub xor push fsubl mov add and das dec lock pushf (bad) cs mov into or adc adc out add and xchg in fmul dec aas add scas push add and mov push inc fistl (bad) add adc jbe cmp add jmp rorl jl add sub in rorb mov inc push icebp inc adc pusha subl jmp inc mov fnstcw repz push mov adc ret add outsb mov mov dec divl js mov jno add into xchg (bad) lods call and fimul xchg add in pusha out xchg mov push inc lods cmp lods xchg lret (bad) mov movb mov clc popl push call shr ror lcall mov push mov inc pop outsb mov jl test roll jo adc negl add mov inc xor sub mov add (bad) mov xor mov les std outsl popa mov add xor cmp or xchg cmp inc add jb test pop fadds cmpsl leave xor add mov jnp loope xor xchg or jns or add mov mov pop int3 ljmp pusha jecxz (bad) jb jl (bad) push outsb popf ficomp nop loope in sub or dec cmp inc insl or jo push call and addb in dec cmp lahf mov inc dec mov aam test popa imul lock jb xor std mov (bad) (bad) shl dec lahf cmp sbb xchg jbe add (bad) aaa xorl outsl fstps arpl add in xor jb pop add mov popa fstl xchg cmp or mov add lahf add inc pop pop push xchg add sbb int3 leave scas mov insl aam fsts mov inc mov push das and sbb popf in outsl and data16 pop sub sbb fnsave in add lods daa dec fbstp insb dec (bad) dec jg add sbb cli cmp xchg jns pop bound test push orl adc and (bad) mov mov int push daa adc jo push (bad) jno into pop add mov mov or xor mov rorl outsl add pop fsts add aad adc cmp leave rolb imul bound xchg mov inc call jnp ja jbe mov sbb in popf add dec ds stos orl add ljmp ss ds rorb cmp mov loop insw and test test idivl pop andl (bad) sti (bad) xor ja cmp mov and jnp add lahf sub fwait jae jle addb xchg xor add pop pusha sbb lret sub mov push pop in cmp inc sahf jmp pop insb pop or fimull xchg cld push push xchg mov repnz or pop adc aas and add mov popf sbb cmp push add xchg pop mov fwait bound or adc imul mov jbe (bad) and inc or or push add scas in xchg inc lret push mov mov jle jb jnp andb jge out jb pop unpcklps pusha xor js sbb cmp dec aas inc adc lods jns add xor les lcall push in cmp xchg adcl mov inc sahf adcl cmpsb icebp sub adc (bad) fwait test enter ds push and dec cmpsb aaa lock (bad) xor and fidivr repz inc cltd add addr16 popa add bound inc es or scas lds add adc nop xchg adc test (bad) mov mov xchg ss push js cmpl mov jle pop repnz clc and stos mov mov imul lea vpaddb add nop xchg call pop imul push add or subb fidiv add cld push int add rorb aaa popa cmpsl jo mov sub sbb dec jo xor dec adc push bound sub insl cltd fidivrl push add mov pop mov test repnz stc jns imul cmp sbb sub jp and xchg lock jbe dec add inc cmp cmp out or outsl jae push lds mov mov sub xlat add add cmp mov stos add mov xchg add mov lods lahf inc es ds push fisttp mov arpl test loop mov or std rolb (bad) imul ds fdiv lret adc iret push pusha dec lods mov loop add xor loopne cmpb enter mov mov xchg sub rclb cmp xchg das adcb jl push add pop and xor mov jnp ret aad pop push clc cltd dec fs pop pop (bad) sub add xor mov jbe and cmp push (bad) lret in jmp mov jge jno add sti cmc fiaddl sub in jnp sbb andl mov pop repz or jns add nop insb push xchg push jg into sti push movsb movsl popf add add pop sbb cmpl out (bad) lds xlat mov addb mov add add adc test orl adc xor xchg xchg add adc cltd add xor add fs add sub mov pop inc outsl or xchg add hlt lea pop lock int3 mov or cltd push add inc dec cmpsb adc sub dec repz inc mov and and xchg add lock cmpsb sahf dec mov add stos inc adc and cmpsl movsl cmpsb jns aad fwait jmp out add or mov inc jo jecxz jle add push mov repz xchg leave inc (bad) stos cmp out cmc push jmp jo sbb jae adc fs mov cmp add jecxz xacquire das cmp movsl push (bad) push es fstpt inc add scas cmc fmulp and stos dec push insb movsb adc mov js inc sbb xchg fist test cmp jp xor frstor cmpsl data16 in aad adcl (bad) cmp sub popf les add movsl test xor lret add jno incl dec xchg inc daa and popl mov popf or push hlt out xor jmp add inc pop into dec xor dec dec mov add call mov rcrb jl xchg gs sbb sahf mov jnp pop inc mov mov ret addr16 stos outsl xor shl insl add imul mov mov add fisub add ret or shld lock je mov and in dec add ss add cmp call out mov repnz adc test (bad) mov dec jbe and aam (bad) mov pusha fnop into loop aaa or fcmovb loopne (bad) out add add inc insb jp test cmp jl mov lret sub adc es fiadd sub cld sub xchg cmpsl sub dec mov jmp pop push xchg jae add jg jle pop sbb fiaddl bound les pop xor jge lcall mov pop add xchg jae sub cmpsl js add push repz add sbb mov bound mov (bad) out outsl jo inc and mov push and add mov cmc sub mov inc inc cmp mov lcall call sti jge bnd jo mov (bad) fild repz orl push lds sub sti sahf (bad) adc push add scas aaa lret test cmp (bad) or push pop xor dec lret add sbbb jg push and rorl leave outsb and jp dec xchg pop lods sbb stc push mov add sub rep lcall in pop in repnz orl pusha div jp daa dec into insl fmul pop add mov ja popf sub add and mov ljmp rorl in scas outsb cmp stc daa push sub cmc add and jns add push (bad) cmp push jmp cwtl add lods push jecxz test sub adc aam mov stos dec and adc push out add das cmpsb xchg xor and repnz stc addr16 daa inc pop stos cmp push push popf inc addr16 push push pop insl jg add jo aam scas push out add adc test push sbb xorl push push std or sti mov or add add popf adc adc mov lret loop sbb clc add xchg and xor pushf (bad) sbb add xor adc or push outsb fdivr inc mov xor sbb lock pop fsubrl jle add push add sub mov (bad) push mov test rcll sahf pushf add or addr16 sub adc mov xlat fisubl mov (bad) call (bad) test repz add pop fldenv xchg movsl pop (bad) push push jb sti adc lds xchg lea jle xorb arpl inc cmp mov adcl movl cmp es jle jno pop aad jp das cmp aaa ret cmp xchg inc mov mov add cmp cld xchg jb in add outsb dec out mov inc sub lret jo adcl xchg repnz xchg inc mov mov inc xor (bad) int3 adc or jge stc pop sub jo test (bad) mov pop out jmp daa sarl addl pusha (bad) xor and xchg jmp sub jbe imul sahf inc into roll push jb adc das pop push lods repnz loope (bad) or mov jne push fwait lods imul xchg js outsl inc (bad) adc sub add jp sbb push add xchg aad outsb rol test fs jecxz je push cmp mov bound fist movsb adc jp sbb imul adc jecxz jl push out mov sbb dec arpl pop gs (bad) xlat push popa add push mov jle imul push jg lcall sarb vplzcntd pop (bad) jecxz push or sub dec pop insl xchg mov fst cli jns add repz adcb add mov ret jbe jl enter int3 lret mov test and sti jle add mov add int3 std add mov ret lock je add and mov xor jmp sahf (bad) cmc idivb add and fwait pushf add mov fbstp add in push xchg dec add fadds ret lea sahf jl in adc inc dec leave orl enter add fisttpll push repz ror mov xchg mov or int scas ja fisttp call push add pop inc add mov and in dec cwtl and xor mov cmpsl pop sbb aam stc and imul push lahf and add icebp xchg jbe loope dec pop add mov mov jne adc sub inc and shll mov jae push dec cmpsl inc add push fs les lods shrb push jle mov mov xor adc jnp aad addb sahf mov or jmp ds lea and xchg jg test mov add sbb add call push add dec icebp dec int pop jne or and cmpl push arpl int cmp sbbl pop pop pop cs scas add jl aas pop pop mov mov cmpsl jo inc sub xorl arpl mov mov dec sahf shl or mov aad notb jno add out xor nopl addr16 js adc js testb fidivrl out in test inc pcmpgtd arpl mov incb inc jo popl fnstsw test jp mov sbb nop inc ficoml mov mov push push add enter cltd xor pop sbb and iret xor pushf adc xchg fmulp pusha pandn add mov out outsb mov add add push es pusha sub mov dec adc mov add sub push (bad) jecxz dec mov sahf scas pushf gs repz sti and ret or daa dec lods mov stc sbb and mov lcall sub testl andl cs insl mov andl mov xlat cmp mov push dec cmc into repz pop dec push das jle negl fsubrp (bad) jl lds mov jmp addl adc jno loop sub data16 adc add sub sub mov mov add sbb (bad) jmp arpl ss xor and and add cs pop mov pop xchg inc and popf out ret inc test mov ljmp push inc in (bad) std ret mov loopne rorb mov aas popa jne cli call adc add cmpsl mov pop pop aam jae pusha test adc xchg mov repnz mov adc inc stos dec and add addl out mov add nop mov popf lret push call jne and fidiv test add ja pop lds fiaddl mulb or cli cmp mov and adc loop lret addr16 or nop jp rorl and cmp cltd pusha adc pop test sbb divl iret xor adc adc cmpl inc sarb jae cmc or add (bad) call inc ret aas sbb data16 jnp (bad) dec push icebp mov xadd repz in push pop stos xorl adc jo pop loope enter or out ja cmp add imul lock pop add jecxz test sbb sub lret in popf mov inc mov adc mov sub scas jo mov andl enter ret pop pop and lock and push sub cltd pop add jo fwait cs sbb mov in jbe imull xchg or push (bad) jb mov gs xchg inc in lcall fcomp bound mov (bad) cmp add or add leave insb xchg testb out xchg fsubrs add adc xchg add lret test jns,pn pusha push xchg sbb add ds xchg popa stc dec mov std mov je or lods inc add adcl pop add sbb testl fild adc push adc aam mov mov pushl std fistpll adc push inc push and xchg mov (bad) push shr adc mov aaa xchg xchg movsb orb sbb insb lret and and add mov pop arpl pop movsb adc add stos sar outsl es add movsb call (bad) mov lods mov or adc pusha imul addss add arpl add and pushf mov push sbb mov inc fadds pop push pop dec mov data16 (bad) xchg pusha xchg fwait cmp fnstenv fisttp and sti lea or stos push pop push dec rol push inc pusha dec pop jo sti pop and xchg add rcl jl add stc pop outsl pushf lods push scas in push daa (bad) cmpsl xor popa fisttpll push cmp incl xor jge lcall (bad) adc sub (bad) cmp pop inc jno push daa negl cmp push pop ja insl add cltd aas rcll adc sbb in add cld out mov sub insb pop inc adc dec add xor (bad) jg fdivs xchg xor xchg repz dec and add jnp pop mov xor (bad) cmp adc stc cmpsl add xchg jle jmp inc xor insl loope arpl add xchg and leave add mov ret mov aaa add mov xchg dec mov jl mov jb je pop pusha outsb out adc add adc or add add daa mov lea adc mov adc sti push push dec fmull xor (bad) (bad) out leave cmpsl je push adc cmp push cmp sbb adc ret jbe movsb cmp das pop test fdivrs add (bad) into pop add (bad) xor cli cwtl cltd add sahf xor iret mov shll incb jbe inc inc dec jne add cwtl leave mov lret negl mov cmpsb add pop mov inc add dec es leave cwtl lods add fnstcw push add (bad) les xchg into pop addl sti pop loop jle subb jns adc pusha psubsw sti push hlt cmc insb fidivl lcall orl addl lahf pop sbb inc ja inc push mov int3 and cmp xchg add pop insl pop add pusha inc int3 (bad) push xor push ljmp lods loope mov addr16 pop lds cmp (bad) dec insl js adc roll loop in fisubrl sbb jns sbb xor (bad) push push addr16 loopne jg inc mov adc (bad) add push and cmpsl roll push sub and sbb imul sbbl dec add cmp lret xchg add ficom lock mov test aaa in jge jne leave in sbb jp cmp sbb inc pop call jno loop pop cmpsb aam outsl loope or jnp xor add xchg in or sbb aaa push jns outsb incl (bad) cli mov cmp mov ljmp fwait testl iret into mov pusha mov xchg inc sub mov repz sbb sub mov add pop testb loopne pop push cli lds add xor rcrb es mov shll into mov mov add inc xchg in mov testl imul jmp pop push adc push dec or movsb jge,pn add and sbb jmp (bad) jne iret cmpsl xchg add sub or dec jmp mov std cmp loopne add mov fwait and sub pop add neg xor sub dec popf add mov stos mov inc cmp add stos hlt dec insl out mov in arpl cli inc jecxz add and pop rcrl int jae je dec sbb add icebp xor popf mov in sub dec and add stc rcrb pushl mov sbb loope (bad) sahf inc mov xor stc stos cs out pop mov xchg arpl push test inc add stos cmp xchg (bad) lea gs cmp inc inc xchg xchg xor adc and xchg dec rcrl out scas iret (bad) jne add xchg repnz sbbl je push sub rcrb movsb icebp and (bad) pop pop cmp push mov les out fwait (bad) and add jno lret dec divl inc add jmp jp cmc and sti dec pop leave inc jp sahf lods jns in cltd int pop push add xchg mov adc lock in fwait popf add sub jbe add fmuls jno cld xor pop add out sbb gs sarb call add jbe pop add rclb mov outsl js roll xchg add add aam push xchg adc sub cs add imul jne and lods xor or add xchg add (bad) jne or cs pop sub mov add sub movsl jns pop insl aaa aad and dec push mov mov xchg adc mov mov add cmp xor movsl ja sub divl add sub idiv adcl xchg lret fldenv ja add jmp xchg and cmp jecxz mov sti nop adc mov aad dec fidivrl jecxz dec cmp jne mov mov jbe lea add loopne xor dec shrl incl mov out insl and repnz mov jne out add popf imul fnstcw add mov push add jns call inc sbb sti cmp js add das pop mov cmp lahf and cmp dec inc mov adc xchg icebp popf push and and fisubr inc and repnz inc dec mov pop in inc jle int lahf xorb fcomps push xor add lcall pop sqrtps mov jbe loop mov cwtl mov xchg adc into out xor mov roll js inc jle fisttpl jbe push nop jb add lret (bad) popa pop mov test daa pop pusha (bad) or aaa add lea stos fiaddl add sbb mov outsl in addb iret push bound movsl pusha mov popf cmp add pop cltd mov dec push daa in pusha xor pop mov flds mov jge stos push out aas add into sbb in pushf rorl cmp sub or dec push pop fldl cmp add pusha lret cmc sub push fildll add push cmpsb jg add call faddl cli mov testb adc fimull mov push or jle add or add lods mov js or ja mov sti and mov in inc lahf jo dec icebp mov add (bad) leave hlt sbb push xchg out jb out xchg std add mov jnp bound add icebp (bad) jp inc push adc pop jnp movsb mov stc add es out mov insl or test shl jb adc lcall call mov mov push cmp xchg aam in fstpt scas jecxz inc call inc add das fdivrs add stos xor rcl sbb add popf cs jns roll (bad) jo add je jb cmp mov pop adc fldl das faddl rcrb push and nop cmp mov mov sti cmc out rep call inc pcmpeqd in pusha push jg or pop sbb outsb lret add test xor add mov mov mov je xchg jnp (bad) push std jo cmp xor cmp hlt inc nop add or test mov pop rolb add ja mov and xor addr16 cld sub xchg and or jb lds pop aaa mov adc sarb add mov pusha or lds hlt std add insl pop add mov je add mov verr rcrb aad fldt jbe add xchg roll mov lcall cmpl je imul mov add or push push imul sub jo (bad) fildl and mov dec loopne out shrb jae inc mov dec movl pop (bad) adc ljmp add dec arpl jo add jge mov mov and fwait inc add hlt adcb xchg insb mov lret xchg xchg into lods shrb add test icebp fst xchg movl imul in cmpsl jno and cmp call insb clc add mov aas mov and xchg push rol adc rorb inc mov movsl mov inc mov orl jae sbb push or (bad) dec movl add dec sbb mov inc push test call jno cmp cmp fistl mov sahf push jl faddl jmp xchg fldcw test clc sub inc push (bad) jge pusha scas xchg fcomip mov sbb rcrl mov lods jl jae mov movsl xchg iret sbb cwtl (bad) jb inc pop ljmp lcall adc fldcw lret insb pop mov sbb fbstp add int3 pop mov add rorb cmp add (bad) xor mov pusha cmpsb movl and (bad) sbb mov loope subl loopne int jo mov pusha jns repnz and add daa ds jnp sbb push leavew pop add ss mov outsl popf adc stc add repnz mov ror add daa mov ret jns dec je push pop add cltd adc push (bad) or add add icebp adcl lock cmpsb js or xorl (bad) jo mov add inc (bad) lahf inc mov push inc outsl or fisubr imul leave sbbb push inc sbbl add js jb mov inc imul add lea push out pop add mov xor jg or adc fdivrp ljmp movsl sbbl adc or cmc mov cs sub add jg lods mov mov add test (bad) aad adc iret lret lds and xchg adc xchg dec add in adc aaa mov jns fidivr xor mov fwait leave cmp movsb call jle pop (bad) andb repz imul jb sbb push daa jmp repnz sub push and xchg unpcklps xor pusha or add rcr test xchg pop add cmc loop std inc cmp add lret dec movl stos pusha mov lds inc ret xor movsl loopne leave lret outsb stos scas add sbb push roll (bad) test ret add addl sub mov (bad) xor ss (bad) cmp or divb fbld pop pop cmp dec pop xchg add out mov into mov pusha in enter adc and sub scas andl out jecxz dec and pushf jp out popa adc out test inc mov inc lret pop sbb jnp xlat stos xor mov (bad) pushf push iret add push fucomip xor add mov mov adc add outsb test pusha mov cs jle nop faddp cli jb dec andl lret add and cmc arpl (bad) imul jle push (bad) call into aas stos mov sbb xchg pop lock js lds js repz pushf xorl jecxz adc (bad) xchg pop test add add add scas das data16 inc mov daa add mov push cmp sub jmp push xlat pushf add mov gs dec test mov push mov arpl loopne sub mov arpl jnp insl inc xorb test cwtl and test orl sti sbb jnp xor arpl add sbb fist or orl pushf push in pop or xchg das sbb cltd out pop stc ja add push or add mov adc add and popf xchg adc fildl pop pushf xor loop add std add icebp sub add jg imul xchg in jmp cld jns xchg fcoml jbe js lea out fnstsw inc or pusha xchg sub add xlat (bad) jg (bad) ja add mov mov aaa pop xor mov jl std sbb sar stos dec sbb or add popf sbb add sub jne push xor dec cmpl add movsb bound loopne movl outsb pop jnp add cs (bad) add (bad) jae rorl es jg push lret rolb iret aaa insb jp jecxz pop cmpl mov call xchg xlat movsl adc lds sbb stos incb data16 pop andb inc popa sbb add roll (bad) mov mov fnsave xchg sub rcrl inc dec mov arpl (bad) stos mov push movhps sbb inc repz push adc or xor (bad) bound out (bad) outsb aam or sub dec insb test les mov or jge roll mov add mov sti fsubp xchg add test repz add xor and lods orb popf (bad) data16 (bad) mov fbld (bad) (bad) xor xor xor dec les ret cmp cld sbb sarl imul mov xchg add push cmp push add sbb imul aas jmp cwtl test pusha sbb cs testl enter sbbl decb lret add and jecxz dec lret andb dec push lods cmp jp mov movsb xor jno jle fcmovnbe mov jle cmp pop (bad) pusha and loope or or and aaa add out int3 add pop test add jle addl pop mov loopne lcall lods out add test popa lahf lret bound (bad) inc movsb sub sbb jmp out in stos pop mull popa and push pop xchg pop add adc inc lahf rcrl ret iret mov aas in push fnstenv add jl dec fidivl (bad) (bad) jnp sub adc test xor in mov mov imul pop xchg (bad) add inc add push xorl pop xor je and jmp mov dec scas leave jg add jb fdivl mov mov subl jmp pop xchg into mov and fwait out cmp push aaa hlt mov xor dec roll add xor int mov jns inc fwait clc jmp cmc pop in mov int fdivrs add push xchg push add lea add sbb and mov bound add push int stos push jne lahf (bad) sub scas fldl mov das pushf or cmp mov call pop pop add int3 cmc gs jae test inc in ret adc es mov rorb push ja push mov int xchg mov fildll test andb xchg and and dec in test sub rcl insb and mov rolb in (bad) push and xor addl cmp hlt lock mov cld int es sub dec dec xor push add arpl ja sarb ret push daa jle add mov int add inc pop out xlat lahf stos (bad) jb add aas addr16 xchg inc aad in or ss mov ret insb cmp jne fcoml lds (bad) and sbb cmp in dec add dec popf cmpsb sti dec add add in enter gs (bad) jmp sbb xor and fdivl add jp aaa mull mov ss adc mov les in (bad) arpl vpsraw pop xor dec ret (bad) mov xor out cmpsb (bad) aam fsubp adcl popa sti mov add add das add lcall add dec pop popa jne jns cmc nop mov inc add inc leave add (bad) inc (bad) pop cmp cld (bad) out test mov dec mov jnp mov data16 aaa ds pop cltd add rcrl add jge push (bad) jae outsb andl popa push pop sub lea in add and outsb sub stos mov pop addl or fisubr jle adc lret xor cmp add fimull test pop xor ja loop je popf dec push popf inc inc push pop add adc add out rcrl andb rclb dec cmp xchg sbb adc xchg pop add jl mov add lds je or rolb lahf xchg fsubp jmp pop and cmp loop jbe jno xchg fnstcw movsl add das cmpl ja mov add mov jmp add ret sarb mulb pop repnz adc adc loop cmc jbe pusha jno sbb pop daa (bad) mov cld add lods rclb push outsb subl xchg inc jle test add aas loope mov pop push cmpsb jmp fwait push test ret aas loop xor mov pop inc test test cltd aaa mov sbb mov in scas pushf stos scas jecxz out add insb inc popf iret in xor xchg dec push rcrb jp sbb std mov add ret inc sti xchg dec or mov cs mov movsl test gs pop add daa in adc xor cmp push (bad) or jbe mov add or loop mov mov pop push add imul (bad) xor xchg es adc das mov mov test push mov push pop leave jmp sbb adc add pop mov daa sub cwtl cmpsl aam std dec ds sub mov cmpsl add pop test add mov jge mov jbe out idiv sub add pop add or pusha (bad) mov enter sbb mov or or and cmp add mov add sub cld lds xorb sbb jle add jmp jbe test movsb push ret add cmpsb pop shl je cmp add mov adc pop loopne mov add mov or xchg jecxz (bad) inc mov sahf aas or mov xchg xor je outsb xor adc and sub sbb mov add fcoms rolb mov add jmp popa add jo cmpsb pop adc xchg lret xor je xchg push mov sbb xchg in add adc add roll dec aam out xor aas fadd sti add loope test mov xor add push icebp mov cmpl push push xchg mov mov loopne add aad xor mov loop fcoml cmp shll aam cwtl mov popf or sub addb dec sarb sbb fnstsw push pusha xchg adcb jle fcmove sub jbe std add sar pop int3 xor mov fistp inc fstpt incl dec outsb xchg cmp jle aad roll pop sarb xchg or add bound add jns add js lods jns cwtl in aad (bad) pop add or addr16 push rolb dec ja adc aam sub lock sub je into mov (bad) mov xchg lret add mov addb sti lock mov push add cli test pop sti lcall add cmp push push dec mov cmp push jnp test cs add mov and sbb cld mov iret loop sti (bad) rolb lock (bad) jo xor pop mov xor or daa sahf dec xchg mov insl test nop jnp,pn lods push fidivl mov fisttpl fsubs and add daa xor lret xchg add or cmp mov fisttp popa ficompl inc popf add clc and imul jnp dec cmp cmp jp imul lock lods inc ljmp add pop test xchg push movsl jmp xchg test add cld add xchg shrb and cmp add push lret jb sub imul add lret xchg mov fistpll adc scas lods subl add pop out add clc and mov call xlat scas add stos dec inc sahf xchg and jecxz or cmp cmovb (bad) pop test roll dec mov insb out adcl mov push add add sti and test lea mov mov insb push pop (bad) je jo ficom add lods inc add movsl adc out test mov xor add pusha mov out lock jmp stc or jns sbb les inc add and test mov fstl int3 or imul hlt inc xacquire pop add push xchg mov cltd mov and subl push je ror lahf push dec add or mov mov aam or add fcomps bound loopne add jns push inc xlat je out add arpl jbe push rclb xchg nop mov jl testl aam jnp add daa nop ror cmpb add inc fidiv mov stos es stc sbbl dec loop hlt add or fstl push add mov inc lods out cmp aad xor (bad) in das (bad) and push mov mov pop adc or (bad) jae add push (bad) fdivs or (bad) mov sub dec subb push clc mov cmovns mov add roll adcb enter je mov aas jle add pushf bound pop fdiv xlat add ficoml scas cmc push test and and and xor ja repz shrb jp add ror ret sub mov stos dec sub mov mov das dec loopne gs lret mov fs dec aaa addr16 (bad) xchg add test xchg imul mov sbb fist adc iret jecxz lods mov shrl repz pusha jg jne add xchg outsl repz dec and push fcmovu fidiv lahf ret add sub sbb push roll mov pusha jae pop mov dec sub xchg std jg insb int3 add (bad) loope xor add or and fldl or add fdivs (bad) xor push sbb retw xorl sub js jbe or jg inc (bad) mov fcomi add jo out inc jb mov xchg sub nop add or (bad) jo mov adc mov xchg xchg cmp push pop push lods fsubl mov rcrb xor (bad) in cmp psubsb adc (bad) xchg xor repnz pmaxub popf mov iret xchg outsl mov pop inc add jae jne mov ret pop lcall xor jmp jns inc inc sarl mov pop pop add jae mov repz data16 add (bad) imul pop cmp push xlat fdivl add jno negb loope popf add movsb xor mov inc push lret addr16 movsb (bad) jmp and dec xchg in cmp sti xchg sub mov test andb xchg jle jp scas and adc add adc clc negb xor add lock jle push sub xchg add std dec int3 add mov jle xor mov cwtl sti or sub add push mov add push mov pop psubusb cmp inc (bad) lods mov fdivrp add or lea iret jno mov adc lret js or imul cmp jne adc decb lods enter inc pop data16 dec icebp repnz xchg inc sahf mov pop fstpt call or or add and aas xlat pusha (bad) inc imul mov movsb push mov pop frstor popa fchs xor jge nop sbb pushl sub pushf push sahf mov or es add fcmovu stos jmp pop rcll je add dec push test push jno xchg cmp xchg adc adc xor cmc mov imul pop xor (bad) cmpsb xchg inc adc inc or lret popf xor xchg loop,pt adc lret or loope,pn add or inc lock in push and jns lahf out inc jno jmp lgs cli add mov mov fwait xchg adc jns clc movsb add test daa add ret and mov pop xchg sbb xor mov push push add ficompl jecxz popa add sub cmp test mov jmp dec sub scas retw sti popa adc lods adc xor mov add xchg cmp xor lds adc xor call je pop cld mov mov outsl mov and cmp sbb xchg add push scas lret xor cld cmp add jb xchg inc les addl or (bad) (bad) or or mov cltd (bad) movsb or pop int3 xchg push int inc add hlt sub sbb mov mov jnp mov popl mov dec add aas pop inc add jge dec sbb inc sbb xchg push dec add xor add negl add push pop or xchg add ficoml pop push sahf mov and mov adc and pop (bad) test mov (bad) (bad) sub sbb scas lds xchg arpl call push jbe lcall stos inc mov dec (bad) hlt inc add shrb add ret and add add mov xchg gs push xchg ss mov sbb out jmp xor xor mov mov inc pop lret pop sub mov sbb add mov jle add inc cmp fdecstp cmpsl adc pop sbb push lods mov adc push fs inc cmp add cwtl jge sub pxor insb incb mov inc mov lret add stos and add cmp ss loop psllq add repnz jge cmc bound cmp mov popf sub insb std cmp rcrl mov add mov repnz mov lods movl pushaw sub cmp jo and mov mov int3 jno jo dec test adc jecxz mov cmp adc lahf push push dec inc add movsb add adc pop pop add nop movsl iret lock out add pusha enter xchg jl sbb nop mov adc pusha cmp mov repnz jl lret das fcomps sub lods add dec stos decl add lods sub test std ret fwait xchg mov mov add inc jbe int3 ljmp and mov pop add push pusha dec or dec loop fistl test cmp sub (bad) xchg add push daa sbb fbstp jno sub mov mov or js mov jg jnp movsl xor lret (bad) pusha dec inc les inc add and add or mov pop pusha fsubl push add shrl jbe add aas inc cmpsb scas pop (bad) jb pushf pop aam clc loope push push sti and add js cmp scas cmp add call out add jmp pop push sbb add adc cwtl jg jno mov adc jb enter fildl cli pop scas daa (bad) dec add sub pop cmc sbb add insl out gs scas loope push cmp dec mov stos dec or ja das (bad) jecxz mov pop dec push xorl popa add and jl pop (bad) xchg xchg push cltd mov push jbe sbb add fnsave test fld adc lret inc fiadd fs sbb cmp add jle jb lahf shrb (bad) les add or sub test and cmp sub mov bound adc sahf pushf sahf add jmp push fildll xchg add push pop test adcb inc pop cli outsl aaa jle fildl sbb mov pop dec push mov jo test fstps shll pop call movsl push stc fwait ret lock cmp mov add jl outsl add stc cltd add fmul jnp aaa clc add pop xchg add pusha and add out or pop int movsb (bad) cmc xlat fsubrs dec mov fild push push (bad) xchg int3 mov xchg pop add or sbb mov faddl (bad) insl dec jns pop add outsb add jl mov add sbb movl mov jo push inc cs xchg nop push in popf sbb add shll aas es mov test lcall push aad aaa mov ret ret in add or sub shlb std and out dec js inc add aaa daa (bad) test dec add in rorb mov es pop cld cs fisttpl mov lods sub scas add push mov inc push fxch loop (bad) je xchg mov sub insb fldl in xchg add in add push pop mov int in xor sub jne add lcall (bad) dec or xorl pop inc inc cmp es loope insl sti and mov and mov fnop mov popf add repz jp (bad) push mov lds popf je pop mov sahf aaa rorb fldcw in push jne mov xchg idiv loopne mov fisttpl add shll sub inc adc sbb imul mov sbb mov mov out inc inc jle xchg cmpsb ds scas faddl les lods (bad) jg fldl (bad) icebp (bad) fsubrs xchg les add ret mov inc call lret into add rorl lret mov add and clc rolb dec aas mov xchg (bad) insb loop addb fwait jb imul xor cmp pop lcall sub popa push lea fdivp roll pop adc mov (bad) nop int3 add out xor inc add push mov lods rcll cmp popa push cmp xor dec add lds cmp mov icebp test adc sub push cltd and cmpb ret mov sbb sbb pop or fs insb xor dec adc stos lods cmp add adc in mov jl sbb add pop inc movsb jnp mov arpl add push jb loope push cmp pop (bad) mov cld pop jo mov aaa cmpsb add cmp cmp addb imull in pop sbb fcmovnu add and (bad) sarl (bad) mov xchg insl pop subl jg es push pop add lods testl stos test jge add dec add jo cld cwtl xor push add mov inc sub out jo test cmp sbb shl jmp repnz (bad) shr (bad) mov repnz sbb or mov test add hlt xchg xor sahf out add lcall jb mov flds call inc add lret pop pop dec dec test add (bad) jbe push cmc mov add jne add sbb out push xchg and orl in jb add popa fsubrp int cmpsb adc scas ja daa mov and ss xor jo jbe (bad) nop or stc sbb push adc loopne ljmp add push sub lahf push push add mov int3 mov in sti xor (bad) faddl inc mov out lahf inc and and pushl es in add test xor scas adc push add jnp sbb and insl add push mov hlt sbb pusha push mov jg xchg dec clc ljmp fs pop sbb or mov or jl ror add lahf adc push incl (bad) sbb sar mov add mov repz add cmp xchg std lock sahf aas bound jno lret les sbb add mov pusha (bad) mov inc or push rcrl test dec incl or lds add nop movsl int3 add pop arpl pushf cld insb cmpsb add inc rcll ljmp sbbb push dec and clc (bad) fbstp inc mov je xchg xchg pop adc cli mov add andb (bad) add push cmpsl push add lock jb xorl mov sbb mov loopne addr16 xor add lds nop inc jns,pt dec sbb xor inc pop shr push inc scas xchg cmpl lahf pop push mov mov add push and in mov cmp mov inc scas add cmc jg adc jae ja inc xchg sub test lret pop mov (bad) cmp pop fs incb jnp mov pop mov jecxz push fidivr jle addb arpl and and add pusha pop ret jecxz push movl gs out test fdivrp mov push add inc cmpsb leave sub add fmuls add je sbb mov sub dec f2xm1 dec movb clc ret sbb lret ss dec je add outsl pusha inc add (bad) clc push repnz daa add pop mov xchg test sarb and add pop shrl add dec pushf out pop subl sbb shl add cmp sbb scas enter sbb (bad) jns jb push popf add nop jle rolb orl cmpl sub aam sbb fnstenv fisub xchg jl mov pop test cmp xchg sub fistp jmp mov cmc (bad) dec cmp addw pop mov add cmp shr flds xor and mov pop xchg enter movsl push xchg add popf sub in pop or add adc test or insb and pop add out test xchg pop lea mov adc inc ror orb (bad) test add in aas jns sbb loope pop pop cmpsl incl xor xor fwait (bad) outsb and inc pop jne inc push mov mov adc shl cmp jle add orps mov mov fiadd rcll es mov fs imul jns or subl xchg mov add mov ja add lret mov push cmpsl xor inc int jb lahf sub cltd cmp test cs in or inc testb pop and jnp popa loopne push stos pusha gs test ja jae add pusha (bad) and dec add jmp les cmp and loopne mov adc imul movsb in add mov inc add or sbb adc sub fbstp add stos sti jb or adc call testl xorb sbb iret xlat cmp xchg (bad) sbb stos out add out adc mov into jge test lcall icebp bound add or mov xchg pusha inc inc pop flds lock mov inc inc loop jg iret in nop aas sbb pop dec cmp mov xchg xchg lret cmpl je xor icebp rep fldcw enter lret popa add repnz fiadd mov adc fwait mov pop enter subl sbb push loop add sub adc sarb stc mov loope add outsb jle and inc pop nop mov xor jo adcb or adc or mov fsubrl fcomip pop sub out inc jo xchg adc stc or pop mov arpl int movl jmp daa loopne aaa jb add addr16 xorl pop inc aas call dec add xchg sbbl inc push sbb icebp loop and jmp pop sbb add cld sahf pop orb rol lahf ds or mov dec pop mov in je xchg ljmp ret jo push repz adc xor scas pusha nop fiadd cs adc adc movb sbb push ficoml sbbb and mov je cwtl jmp dec pop dec aas inc jle add mov adc es sti adc scas push push daa cmc fidiv jb or shr add pop pop inc dec mov add mov inc or inc push and mov add lahf roll shrl sbb outsl in mov pop cltd xchg and cmp outsb add (bad) sub cmp cltd mov pop pop call lcall stos xor (bad) test imul mov leave test add inc sahf sub test mov sbb xor lds jns jle jle cld add add add push test lcall jle add jae shlb inc add bound push out xlat into loop jl mov sahf mov ljmp insb ss add cmpsl dec jge repz mov icebp (bad) add jg repz jl adc dec adc add (bad) out sub sbb stos mov cmpsb hlt cmp lret test lcall loope pop mov jbe insl sar test aam je adc or rcrl or dec push stc fcoml (bad) pop scas add in xchg add sub cltd andb inc mov nop add test or push movsl adc daa mov pushf notb in jp nop orl dec dec es add fildll in nop push sbb (bad) hlt imul leave fldl iret dec cmp jno ljmp xchg add add inc icebp cmp cmp mov sbb das or cmp jg mov fiaddl sub cmpsl push cmc mov (bad) mov jge add mov mov cmp pop adc imul add mov push pop sub pop add dec scas movsb mov xlat sub mov je roll push inc sub hlt lods push add and push pushf data16 or mov cmpb movsb repz dec loope adc cwtl pusha or jmp jp mov fildl add subl dec scas mov add inc and cmc sub rolb test sub adc (bad) jg mov push cmp mov add cmpsb test pop add jmp pop xor pop test dec lods (bad) jbe pop stos and sbb dec scas aaa ljmp inc stc in xchg lret pop push push (bad) lret mov aam cmpsl movsb jae add sarb sti repnz test scas jg mov mov int pop (bad) jb pushf pop adc mov mull bound in xorl mov (bad) sti add aas int lea out ds sahf arpl in js jmp add pusha cmp rcrb mov inc loop push in xor add rol cltd rcrb rolb xchg movsb inc jl cmp ror roll mov fwait add icebp xchg cmp cmpsb aam xchg mov mov ret (bad) arpl loope pusha test lods dec (bad) divb out xchg (bad) inc push call jns daa mov cmp cmpsb rolb lret int mov add je jbe add add repnz and sbb adc mov ljmp sahf cmp push pop adc clc pop adc add imul in lods add in int3 mov add data16 xchg sub add cmp ds add mov xor repz and add pop nop clc dec or xchg mov add jle loope mov add icebp wrmsr xorb adc mov adc dec in xor jnp mov aad push push data16 sub add movsb (bad) cli jle adc bound in ss jge in subl or jb add lea add mov sub pop push push repnz jns push push mov out and push mov add iret cmp add test in pusha fstl das push (bad) (bad) shll into mov dec (bad) adc add out out daa mov pop add pusha fmul lahf or jl cwtl in (bad) mull lods jns lret inc mov loopne js (bad) subb cli ffree jo rolb test xchg mov outsb jl add ds mov xor jl cmp xchg mov adc inc sbb add data16 (bad) or or pop mov push pop (bad) fdiv add daa cmp add das arpl add dec mov add or cs cmp push jnp push sub pop scas xchg pop test lods xor adc add mov add out jg clc or ja inc or out fimul sbb popa rcrb jno sbb js jl out mov push rcrb push adc std out mov scas push jno adc jl mov in lahf push repz dec addb mov add bound pop adc in fs add dec out jl dec aas adc fwait sbb inc jle orl xchg js add cli or xor pusha pop out repz fidivl pop xchg add test jp (bad) mov jb mov jl pop or mov and lock mov add cs mov orb fnstsw cwtl jp add ret xchg dec add inc pop (bad) lcall mov sbb negb xor popa lret repz push add cltd inc inc icebp fisttpl mov jg inc das jp fcoms in dec mov pop aad mov jo addl stos xor sbb cmp add test lods orl push add movsb mov or fdivrl dec pop (bad) pop mov add rcrb mov add and mov orl cmp push jl add sbb movsb xchg pop test cmp les cmp scas sub xor outsb xchg sahf push sahf aas add iret mov cmpsl cmc mov pushf sub in pop sahf adcb or inc test pop ljmp test scas sahf dec push inc data16 incb pushf out clc mov in mov add icebp ljmp pushf jo dec scas xor push cmp add mov aas mov add (bad) cs add sub add iret sbbl mov fidivr aaa jg add int pop loop insl adcl add mov push enter add inc mov daa ja sti fwait cmp sub ret imul imul lcall pop inc (bad) (bad) frstor xor leave add mov (bad) js fs gs in add popf xchg (bad) mov fwait shr stos inc xchg movl outsb and sbb das xlat jmp mov flds imul cs mov inc scas fs nop popf cmp sti bound pushf fsubrp jp add cmp movl into adc pop in testl push cmpsl pusha fdivr loopne jp cmp dec push mov xchg sub jo mov push sbb cmp lret add les fsts pop or lret sbb pop lds aaa adcb out push cli in cmp ret add xor fidivl add xchg aad jecxz shrb mov sub push roll (bad) xor sbb inc add add jae fwait inc out mov pop adc or add lahf movb push loopne add mov sub xor pop dec push cwtl pop xor add enter (bad) std sbbb stc push mov mov movsb xchg pusha sub add mov ja add jmp add add loopne or and test xor imul mov sub test pop rorl mov mov in jp add jl lods cmpsb xchg mov movsl pminsw mov adc in inc xor es pop adc mov mov cmp push inc inc imul push mov mov push test add les mov mov sub pop stos outsl daa mov push jp dec cld test nop stos clc rep mull xor mov rcl lahf sbb add (bad) out pop pop pop js (bad) lret shrl inc repz mov fmul jae cmp adc push (bad) pop mov add lahf mov sub jge push mov mov les mov repz mov push sub and add outsb dec icebp mov mov lock jae adc insl xchg es and adc jo add or inc xchg call cmp add pushf add jle mov int3 inc mov cmp add pop push inc mov inc enter jno or adc jae mov add xlat pushf jo add enter pusha jl incl add int3 mov aad push clc roll rolb cmp add jnp inc jecxz je push (bad) fldenv jg sub push daa cmp dec fbstp out cmp and gs (bad) push call mov add movsb andb or mov adc inc push cmp subl jo jo jl clc add cmp mov inc repnz stos in in loopne pop bound gs je stc mov imul jnp rcrb and dec ret push out jbe lods add popf jle add xchg fiaddl int popa lods mov scas scas pusha scas push pop add inc sbb xor js cmp pop add add dec xchg inc movl cmpsb inc cltd push jne add sbb or add jnp mov mov xchg shll push adc mov mov outsl stos jl lahf pusha add jg (bad) dec mov sbbl jns (bad) loopne popl jb adc add (bad) xchg xchg xorb orps ja push imul sarl jns aas hlt add mov mov je add mov push bound pop in (bad) jmp cmpb mov outsb cmp add out hlt add iret in jecxz into add lods xchg out imul (bad) adc sbb test add pop mov scas mov imul mov xchg and sarl rorb enter cmpsl rorb loop add adcb aas cmp insl push movsb add sub xlat in shrl add push shrl lahf cmp outsb pop mov int aas or adc add add aam mov and lds popa lods cwtl mov mov ret mov push pop stos add js or lods pop xor mov jns bound cwtl add int3 dec in pop xchg test es mov add xor lds aad mov and enter insb add fwait push dec and lods mov mov jg (bad) mov push in rorb add (bad) cmp mov les jecxz jo stc sbb ret rclb cmc jb add dec out cmp or mov adc add pop popf cmp jl fsubs mov jl repz add mov movsl add scas push data16 ja add mov nop add push in aad mov sbb in mov dec popa jmp and imul insl add and lods jmp into clc push push fiaddl inc fwait in jl mull repnz jmp stc add shlb sbb mov xor mov sbb jl mov push add adc cwtl xchg pop cli lods push jb out dec dec (bad) stc jbe pushf mov mov pop lcall aas add sbb add stos outsb icebp and inc inc test fisubrl out rcrb add (bad) dec into (bad) push out aas add xor add (bad) in push and mov add pusha jge xchg jae xor in xor enter rol rcr je movsl jecxz scas in daa leave pop pusha lods push lret sbb popf push xchg inc jp std add sub add lret iret push pop sbb inc cltd push in cmp cmp pop sbb adc enter dec mov jo iret sub lods mov mov jbe hlt add aad lods dec mov mov dec clc popf push roll (bad) adc pop shrb je sbbl (bad) pusha orl cwtl movsl loope pop and fild inc js repnz dec xchg repz arpl roll rcll ds or test pop add or sbb mov (bad) arpl pop aad push cld add xchg lods call sub rolb nop jae dec lds insl sbb push (bad) test adc sahf and add rorl pushf cmp (bad) add push jno pop or stos into add jge inc repz hlt mov sub add incb bound loop lock roll (bad) adc popf sub fldl roll rolb fiaddl fsts mov popf divps inc add addb nop test in add xchg loopne addr16 dec add pop jmp fbstp imul push sbb ja add mov nop js jge out (bad) jle scas and jns mov popw leave push fdivp pop add add scas add lcall (bad) xor inc addl pop std xchg add pop in call (bad) das adc divb mov mov addl in add sti xchg inc add sub add add sbbb daa jl (bad) sbb (bad) sub in incl test xor mov scas mov pop cmp push mov clc and adc (bad) arpl and or sub mov in leave xchg clc andl pop add xor mov mov jb,pn orl add out daa addr16 test push or dec fdivrs outsb inc and jnp adc mov fnstcw push adc inc testb xor flds ss pop mov add dec aaa rorb jae inc cwtl andb pop add inc es pop test pop test cmp aad jp dec add mov jge pextrw add in jnp scas add adc add cld mov cmpb repz inc out and jl jae les sbb hlt push mov xor inc cmp shrb lds cmp cmpsl add jecxz cli rorl scas mov jl aas int3 cmp add in xchg lock push mov mov mov push jl in addr16 mov in (bad) out aaa or inc xor adcl pop jg fwait xchg push iret inc sbb add jo lea lods in mov sbb mov xor mov bound cmp out add sbb add push in insl lods or sub repnz fwait in push and add dec cmc out mov ss push in add pusha int3 imul test mov mov (bad) enter or sub (bad) fisub outsb mov jge sbb fiaddl add lock sbb add add lret pop xchg mov jecxz clc mov inc jg xor sub dec enter jae (bad) add or aam inc js xor imul pop lret fnstsw sub jecxz jmp dec (bad) or xchg sbb inc sbb mov pushl sub push ror mov jle push xchg fs into cmp lods adc pop mov jp add dec pop dec add push dec mov cmp mov mov push dec frstpm(287 pop mov or sbb jo (bad) mov jg sbb mov inc or mov cmp push add fsubl (bad) jo enter inc ds jmp and sarb stos loope lret fsubrs xorl cmpsl sbb loop mov hlt fwait es jge mov sbb xchg subl pushf push sub add in sar add mov push sbbb jp jl xor push rolb push es mov add mov adc imul dec adc add jp and sub inc mov stos add dec cwtl sub add sti je ja lea add insb mov idivb lret cmpl ret or test aad (bad) ja add sarb xor mov add pop or shrl cli hlt xchg (bad) cmpsb dec in add push and add pop sub adc xor lret pop std inc loopne fcoms xor add jecxz mov es fnstsw movsl nop ror mov ret repnz mov in mov les jge push inc inc mov add mov outsl fisttpll add into jge add (bad) sbb add lods push push cmovg add and inc lret leave sub mov add hlt fdivl jmp les out cmp sti add test scas mov (bad) sahf jnp rep inc (bad) insb pop rorl add (bad) jae sub or add je repz cmp mov sar aam rorl fldl pop ret into xlat pop xchg mov push add lea add pop rorb pop or pop push add adc mov push add pop jne out sti add inc xchg sbb mov fisttpll add imul mov jno add jne sahf add sti bound int3 xor add (bad) cld push lock fild push mov cmp arpl data16 or sbbl mov jcxz xchg fmull add cli mov add dec lods std hlt out les inc pushf mov (bad) jns push rcrl inc aam ja popf push testl mov push andl jl inc fisttp and inc das rolb and call in fadds enter movsb sub andl cmp fwait jne (bad) lods add aas dec push mov int push jnp push in cmp add sbb add in lea std adc pop pop clc sbb and jmp test push fnstenv inc sti mov mov pop pop jmp and jnp addb pop js into aaa add and sbb aad dec xor out mov rclb sub xchg aaa push dec bound mov xchg cmp add xchg jo dec or add or lahf sahf xchg call mov jnp sbb adc pop jmp (bad) fmul add dec imul fild aad xchg mov addb mov adc jp dec inc mov outsb lcall sbb lahf out inc dec mov inc mov adc clc lods les add sub aas add lds cmp mov lcall mov ja jne jl sbb mov cli test ds imul sbb iret hlt rorl notl cmp add and (bad) mov mov (bad) and add cmp daa xchg lds data16 sub push pusha xchg mov xchg inc out add in (bad) je nop cwtl add mov repz sub imul inc (bad) pusha pop pop out dec das push cmpl jo push mov mov inc scas pop lret imul mov mov cwtl mov decl in movsb in add fs cld push orb rcll jne mov push (bad) enter or xorl xor sbb incl es or outsb xchg add mov and movsb arpl xchg shlb adc pop push xchg test ss push dec stc pop add mov fild cmp test sub test adc (bad) fnsave mov rolb jecxz xor cmp insl add xor aad xorl cmp add pop mov mov adc add insb fisubl mov push jne,pn lods mov cwtl and iret sbb or pop mov mov inc clc add sti mov in adc dec fs scas sbb mov jo sbb popf adc fs jmp movl jne add mov test jb dec scas jle scas pop sub adc inc outsb push leave xchg roll aam jno xchg cmp mov add push mov push push xor daa add jns popf inc xchg jbe pop xchg stos mov cwtl mov fist scas add sub cmp xchg leave push lds cwtl (bad) jbe add fcomp popf mov scas add xchg pop cs or dec add in add inc jecxz add cmp in mov push cs pop inc cld inc test jb es xor xchg inc push add std or adc stos sbb and insb sbb jmp leave incl mov pop dec rcrl cli test mov xorl add hlt lahf sahf xchg rcr cs add sub add add or jo xchg cli int xor mov pop sahf loopne sub jnp ds jbe shll or add mov das out bound mov dec mov add mov sub scas sbb add popa cmp addl jno adc cld jecxz mov pop add stos xchg (bad) std insb (bad) push add jae xlat adcl cmp add jae inc sub inc insb add test adc loopne cli pop inc jb sub pusha mov cld mov test add test orl xchg iret mov inc xor aad add or dec (bad) jne mov pusha pop movsb cmpsb push sbb push cmpsl xor sub fist xchg add roll add or add xchg sub cmpl decb add insl jnp js add lcall fs stos test andb rcl mulb add (bad) (bad) aad cli mov jnp add (bad) enter and xchg add loop dec in push in sub inc and (bad) imull add mov sbb xor pop fdivp and lea or and jle cmc mov int jno pop add add push add jle mov jno add (bad) dec std movsb (bad) cli xlat add push lea lods pop imul pop or mov xor sbb addl flds (bad) jbe or add fsubp fisubl aad mov out bound mov jmp mov lds fmuls xor add ret imul jns add pop loopne incb inc addl (bad) in (bad) cmp loopne push sbb (bad) jl (bad) or jg pusha cmp pop sahf aas pop mov push movsb inc dec cmc mov add sbb mov popf add jle pop add mov or ja test loopne xor cwtl push bound test sbb andb jne add orl (bad) outsb inc add mov jg add ret (bad) sbb add stc sub movsb (bad) sbb push lret inc mov test test fs push push and or test mov enter in test inc mov add dec cld sti imul pop xchg daa popf js mov xor inc retw jle das mov sbb fisubl add sbb cmpb sub leave inc aad add lret pop push add std pusha test or mov pop je adcl (bad) xor jl dec or ja push aas add (bad) push (bad) clc pop int3 cmpb pop addr16 dec pop cmpl pusha cmp push mov mov adc sti cmp add cmpsl out add nop rcr les and out add int3 xchg push rorb outsl add dec lcall cmp mov or mov hlt jns pop loope aad cmp sbb xlat or cs dec adc add lcall push lods mov in icebp pushf jp mov rorb int3 inc mov movsl or push adc add jecxz aas mov xor je mov add pop dec or (bad) sbbl popf push mov out adc push add mov movsl xchg js in ja push sahf add daa pop xorl and inc add bound scas sbb push les repnz xor sahf int add jecxz xchg scas sub adc cmpsb sub dec push lock loop xchg jg cmp pop mov aam add popf mov jl sti mov add gs mov add sbb mov xor jo jg jno adc jl add enter inc push add cmpsl push add insb fucomp or sti jnp ja mov scas std add push add int3 stos or xchg add mov scas and pop cmp cmpsb fadd mov (bad) push daa incl (bad) mov stc cmp mov add inc fldl repz mov rcrb pop add xor sub pushf or add enter shr cs adc add mov and gs pop jmp mov bound xor or cmp cld add push adc cmp adc movsl or pop or pop pop adc sbb sub insl (bad) je pop jle addb ror insb or xchg aaa push cmpsb push add ficompl xor add sbb push movsl mov inc les fcmovb je cmp jno push loope mov insl (bad) mov adc xchg mov jg and mov mov scas stos inc lods mov mov cltd dec popf fldenv lock inc je gs cmp mov arpl and jo inc xchg fadds jbe pusha cmp cs rolb xlat je lds dec popl ds fisttp cmp movq add mov sbb out rcrb add ja scas dec and mov mov jg dec mov je cmp outsb pop in subl aad mov jecxz cmp xchg lcall mov inc mov insl add sbb lods xchg jo scas push cmp outsl andb sbb int adc idivl jl scas jne shrb in dec ljmp mov jnp xchg das xor (bad) clc mov in push test test lcall pop sti leave jle pop stos add std and add adcl pushf and rcll lds jno cmp sub std inc inc loope iret add es mul adc aaa mov xchg pop add jle pop lret loope std add outsw and mov add pusha push cwtl push mov add or das jecxz push sahf and sbb cmp adcb aaa aas ret pushaw in call ljmp xor aaa push pop mov jecxz scas dec mov cmpb arpl mov jno jns insl pop xchg aad ja pop cmp cltd cmp xchg xchg pushf hlt std into orl sarb call loope sub add add add xor leave push jl pushf add mov sub mov je roll push movsb (bad) es add cmp ret loope aas add mov mov cli loopne push push lret jbe add jle es test xor loopne popa add movsb out pcmpeqw mov xchg cmp pushf push popf mov in arpl (bad) mov aam xlat push ja int add shll sbbb xchg dec xchg push add cmp xchg leave aam mov (bad) xchg jmp cmp sbb mov push sbb mov adc sbb mov inc add sarl jb test xchg lahf xor add inc shlb jo add in repz cld mov addb xor cmp stos jg movsl sbb push inc add arpl dec add les mov adc es data16 arpl movzwl add out in (bad) jl lahf pop movsb cmp clc cmpl andb popf (bad) aaa add lock jge xor into shrl aas cmp xchg jo jle add xor loop mov movl rolb ljmp mov cmpsb sbb fistl sbb cmpsl push fsubl sbb imulb js pop add negl data16 in adc sahf jo outsb and add sub in xlat sbb inc repz enter sub add pop mov rclb pop cmp pushf xchg (bad) mov test in jae ret and push shl aaa pop add je fild sbb add pop cmpsl daa sub int xor inc jmp xchg cld pop sub add in mov dec mov adc scas dec xchg add push std push xor negl (bad) jnp xchg and sbb inc jb or mov push add or dec pop sbb mov jmp push pop int3 insl push or xor jge add test mov imul add mov push inc add fs daa cmp nop lea pusha fldcw xchg and pmaddwd mov xor fs add fdivp enter incb inc mov xor add std xchg push mov jg mov sbb daa mov rcrb xor in jbe xchg and lds add loopne cmp dec add testl call push aas inc and sub cwtl loope loop adc push (bad) and popf cmp lock mov mov cmp xor test pop fldl stos ret inc fimull mov xor push stos stc dec add pusha pop add sbb and int (bad) repz dec or cmp repnz out je ss add push mov push movsl adc movsb adcb jb jns push ja sbbl enter lret add jb jg (bad) test adc call add jmp data16 add insb or xchg xor jae inc sub xchg mov ja aaa fisttp out push push mov jp ret aas xchg fdivrl add scas (bad) mov orl xlat into inc inc push add icebp dec ret push inc jge adcb cld inc cwtl pop out js push (bad) ds add or lds ljmp mov xor outsl popf dec push (bad) dec fidiv add test mov bnd sub test cltd loop cmp pusha (bad) es and add sbb xchg jecxz or jo mov sbb rcr mov lods add jb pop jecxz jbe dec cmp pop icebp mov pop cmp mov add test cmp sbbl icebp into xchg jo fldenv in jns jg inc xor mov aaa jecxz lahf jbe add test add sbb nop add sbb pop loope xor insl ret add clc jnp mov pop add test jns add mov add cmp (bad) sub test mov (bad) jo xor jg push in pop cmp jno xchg popa xchg stc (bad) loopne adc dec pop jb and dec pushf sti push add mov (bad) repnz icebp adc add int3 jns mov pop add rcr cmp add push dec sbb mov add stc enter fadds sub adcl push jo sahf mov ljmp js test pop repz mov sbb test (bad) movsb hlt mov add push (bad) movsl test mov addr16 popf js inc sti add adc test add mov sub imul inc pop mov jns pop cwtl (bad) and rolb jmp adcb inc mov add lock and push add (bad) lret pop dec mov mov sti mov cmp pop pop inc (bad) fldl sub lods pop mov jo inc mov (bad) js pop adc and test (bad) std add iret scas movsb stos sub sbb push jo je add ret xchg sbb push jmp pcmpeqw sbb add jg gs adc jo addb or clc add xor sbb out jb jmp mov xlat lret pop pop rcll dec add in fstpt outsb or ja leave sbb lds out enter cmpsl iret sbb mov xchg dec and dec sub stos push ds add mov cmp cld loop (bad) mov lea push (bad) ret cmp jnp cmp push add repz mov dec mov es add outsb jmp lods leave add stc aad xlat test cmp xor hlt pop or cmp loope cmp cmp (bad) out cmpsl add jecxz repz pop jp pop jbe adc add push jmp cs sbbl add lret jo pop rorl xchg inc les push xor nop inc add dec (bad) clc imul xor cmp add or stos dec push or add rcrb add mov cs cwtl stos jne fwait xor add out and cwtl pop insb jb xchg cmp mov out aaa add fs xchg orl sub xchg jno inc push pop xor xchg jb rolb xor loop es and sbb xor jmp ljmp cmp das ss adc mov add add addr16 dec add repnz cmp pop fistp sti add mov enter cmp pop addl ljmp mov ret fdivrl lret add jnp arpl pushl fwait jmp rcrl add daa adc xor jo (bad) pop cmp dec lock jns add mov mov scas pop push aaa and dec fs pusha dec mov pop jne shrl or cmp inc movl sbb jae das jo mov add insb and jl add pusha lret lret mov std xchg or fs (bad) std pop icebp sahf mov add xor cmp (bad) xor jae add into adc xchg sub fild pop push xchg pusha fs jecxz cmp dec mov pop outsb jp add mov int sbbl sahf add inc fcompl shll cld jbe int3 add inc fs push dec xchg add pop jnp sbb cmp movsl xor sbb std and adc (bad) pushf stos repz sub ljmp fucom xor or inc add push test add jb sbb call dec or in add test insl lret pop mov jmp movsb dec add mov (bad) aaa dec dec xchg mov pusha push addl and xor sub or stc jne dec add pop cmp jno lock and clc cmp pushf sbbl std dec mov test xorl mov cmpb adc or add ds xchg je orb cmp xor enter jecxz pop fsts mov add dec sti out push iret add (bad) dec and jae mov inc mov out ss mov rol adc jns aam jmp nop js lcall mov jmp out add dec subl arpl xchg push pop leave nop jo push cmp fs xor pop mov sbb jp pop clc outsb jbe aas xlat je sub cmpsl and lds or rolb ss lret add jecxz cwtl mov pop loope cmp push pop das inc data16 addb rcr int3 into movsl adc jne jo inc xor repnz jns cmp mov (bad) add jns cs jae cltd scas ss dec xor jecxz inc mov jle js nop loop leave xchg ss jecxz loope out dec bound inc ret mov pop fwait mov lods test rorb push xor xor mov ds xchg add pop cltd mov sub jnp add cmp movsl push adc inc out xchg jns fmull std xorl push pusha adc push cmp jb popf roll mov lcall push inc dec xor adc sub add jp call dec mov (bad) add dec xor lods shrl sub push fwait notb mov lahf loope imul inc aaa leave fs add or insb cwtl fildll cli xchg fdiv gs add sub test out pop rcll add or sarb inc fwait jb scas add dec xor mov (bad) cmp add lds xchg mov in pop mov or and shll cld das rol pusha pop jo jne mov mov adcb and add ss into sti pop sbb add cs add push ljmp std mov scas pop (bad) xlat mov inc add loop xchg roll dec cmp in int3 test xchg add lds add jbe std sub sub subb cmp jbe movsb or add jecxz pop bound push add test or sbbl mov sub repnz aas push js icebp add sub pop add xchg orb mov jns mov add cmpsb aam mov in ja and sbb mov cmp insb ljmp fmuls jp cli jbe pop and jnp jb jno outsl add xchg xor or aam adcb dec shl or add fiaddl sahf testl cmp inc or dec mov sub dec popf test sbb xchg fdivl sub andb fistpll xchg cmp mov and sub pop int arpl sahf jmp cmp add xor mov mov add aad sahf les cli aaa add ljmp add xchg fmull sub add xor add pop dec cmp andb ret data16 push rorl dec je add sbb mov loopne xor ja ds dec cld mov jg dec cmp pop rcrb cmp lret sub inc jmp notb sti cli loope jo (bad) int mov dec mov add mulb mov xlat dec call push cmp push xchg add test or std fwait bound rolb jno jbe cmc cmp adc mov adc mov jo std stos pop aaa add ja dec lcall mov test mov (bad) sub les sbb inc imul sbb ja mov and jecxz pushl add adc jp dec fistpl push lea mov mov push dec jne cmp test add ja dec repz fcmovbe push js shr adc jnp outsl icebp leave inc das mov enter jecxz push lahf inc xchg test (bad) in cmp flds add push testl push loopne mov hlt and dec js flds xchg dec orl arpl add adc pop scas xor lret insb jg rorl xor repz add inc dec sub nop rolb mov es add lret add jno mov lds jecxz test aad bound lret add ret push sbb mov addl shrl cmpsb pusha mov fcoms add mov popa add xchg jp jmp ljmp sti (bad) int3 add sub mov sub push cmp xor mov jl mov xchg das movsl (bad) (bad) xchg es sub cs add sub or clc jle cmp lods add sbb ljmp push fdivl scas std int3 xchg pop cwtl xchg add xchg fiaddl mov adc jno push addb movsl cmp push and adc sahf es mov fidivr mov add push dec cltd push scas lcall jg xchg and cs xor add inc shlb fs repz push rorl xchg je add push adc jae cmpl mov jns sub test mov cmp add sbb es loop add int sub popf xor lds jmp mov add data16 mov (bad) xlat lods or sahf and orl aaa aam add sbb add js sahf ja add sbb shrl or mov add pop xchg inc sub add punpcklbw lods pop xor and and sub repnz jo popa mov adc dec mov jo test sbb mov push mov jo fisttpl mov add inc cwtl arpl or sbb and or movsb aaa mov in shrl add push adc sbb xchg sub std jbe test insl adc push push in fsubp enter mov mov add cmpsl outsb pop add xchg sub loop cs add push insb inc sub cmp dec mov xor ret jle repnz push inc pop mov cmpsb xchg jae add mov push inc add jl,pt and or popf lods add add (bad) in sub adc or add addl divl xor fcompl pop adc mov pop add mov push lret cmp pop (bad) (bad) and cmp pop mov es and loopne push cwtl add push push shld sub shll stc mov mov setg sbb in xchg clc test xchg xorl xor jns movsl fstp add mov rep addb ljmp sahf out loop add adcl add push in xchg sbb push lretw insb add sbb xchg adc xor cmp sub ja fild loope push (bad) adc sbb ret je enter fprem1 push ror lret loope pusha std jg cmp jl insb adc and and pop mov xchg sbb mov sub pop imul and pop and incb leave push sub cmp dec jge or jno lahf cmp or fs add sarl add (bad) imul or xchg stos movsl fucomi adc adcl lods pop xor add adc inc hlt mov call xchg lea lods add sbb jle fstl je (bad) roll leave cmp clc pop cmc jp (bad) lock add mov add inc in add adc xchg xlat xchg cli add or hlt xchg (bad) jb add fsubp and mov fwait mov jno sub xor faddl inc fs dec mov sarb sbb xchg dec ret push enter std inc add pop mov add dec lahf ja jnp xchg inc (bad) and adc mov mov je rcr add imul mov enter mov push cmpsl pusha pop mov sbb jmp push mov pusha mov push cmpsl adc pop mov pop cmp jbe xor pop mov lret mov pop push sbb or ret (bad) data16 test (bad) in mov pop or out cmp test xorl xor outsl pop bound mov xchg sub jp fdivs jcxz les dec ljmp add ja loop sub push mov and sub add outsl pop add shrl jge in or mov enter push addl add xlat les pop daa mov dec cwtl ret dec xchg adc gs lahf xchg ss out push sub sbb insb inc inc xor jnp add aad jmp add ret fcoms fnstcw jbe dec add imul sbb add adc test mov loopne popa and in xchg int3 add sbb mov insl (bad) cmp lea enter cmp sbb and aas mov mov xorl scas xor cmp push ja fildl cli cmpsb jge add mov xor enter cs insl popa add in (bad) adc jp std call add jle jo test xorl cmp aam lret adc test in aas je add jnp jae stos xchg outsb outsb pop cmp adc add ficompl pop pusha shrb and adc add (bad) xchg orb (bad) fdivl sbb testl test jno jmp xchg add ret in lcall mov mov cmpsb cli (bad) out xor enter mov clc mov lods pop add stos out addr16 test push sbb in adc or stos push ljmp inc pusha fwait (bad) pop push popf mov shlb and add repz cmp add (bad) int cmp out add lret loop orps nop fldl pop add jecxz and insl mov stos mov mov xchg inc sar push pusha adcb (bad) xor and loopne aad and fs loop xchg je into int (bad) int3 psllw add mov cmp inc push (bad) rep aad add add jl cmp cmpl aam mov sahf mov mov mov (bad) enter inc sti out in loop (bad) mull outsl aaa ret xor dec jg js or add jns cmpl test (bad) lret test lahf mov mov add leave ljmp pop subl inc sbb test ss test sub lret sti inc inc push fnsave xchg xchg les popl in add or mov push add pop and pop inc add mov les test push pusha rolb std jg add inc mov in out cmpsl sbb sbb jle add mov data16 mov (bad) std xor mov enter push add (bad) push ja cmc and push push inc aam rolb xchg jb lret call cmp pop xor jne dec cli dec add (bad) ds mov inc jo mov xchg and adc test pop xchg outsb mov mov sar in add (bad) lock lods and insl push (bad) cmp xor rolb sub sbbb pop das lea xor lods add push mov xor mov ss push xor add les sbb fisubrl sti add mov jno push jae or scas push inc add jmp xchg dec aas jno jl pop fwait rcr dec ret rcrb in add sar cmp mov subl call xchg jle pop add test roll pop add push cmpsb add xor jne mov lea xchg das xchg and pop sub incb inc and push sbb add mov cmpsl jge add xor daa stos ret das (bad) lahf jmp cmpsb push les push xchg lods fwait jo jno es mov jp mov lahf addl push pusha add dec cmpl pop mov loopne xchg das pop aaa add scas fldpi adc test pushf loope inc jle adc nop add test or ret outsl adc push das add call lahf add pop inc stos sbb or add xchg add sarb mov mov in push je add cmp cmp outsb add push (bad) cmp cs add push les rcll dec incb xchg inc (bad) push add lcall stos (bad) pop add push jo push inc adc push sub aaa pusha pop inc add dec xchg rclb lret fbld outsl jbe pop shll test into arpl in or pop gs dec jno add sub and jnp cwtl stos cli ds sbbl sub jg add jae xor rclb outsb jo out sub sbb cld pushf mov icebp sahf add fnstsw add adc add push ja cwtl outsl xor push push test repz add jl fiaddl pop adc mov or cmp stos dec dec lret dec (bad) addl jo mov testb ljmp negw or cmc mov push add xchg add rorl add push ss push add fsubs addr16 out movsb add jp sbb les add push pop mov dec pusha xchg (bad) (bad) mov cmp add pop icebp xchg out jb adc and mov out pusha loop sbb fiadd movsb push les data16 fisttpl dec add push popf fadds add and and cmp jnp add cli push add add orl inc (bad) pushf cmpl add ror cmp jge sub mov cmp es aas fiaddl sbb adc mov pusha sub cmp incl mov verw xor out mov cwtl add cmp sarb scas jnp add push add cmp dec scas push fwait lods pop loop add aam ss cmpl mov mov orb push jecxz mov cmp jl ficom lcall dec mov xchg jge js add data16 dec inc add enter jp repz add push sub add sbb or push push add js call clc jo mov push clc je inc add fistpl pop mov lds icebp imul cmpsl pop jg ja jne xor pop (bad) adc add adc xchg mov inc (bad) les pop xchg pusha cmp dec sbbb bound in faddl sti xchg (bad) icebp mov mov add outsb push hlt cmp test aam scas movsl jmp sbb cmp mov mul inc jge xchg in inc add shrl sub out inc lretw enter pop mov cmp iret pop fldt (bad) mov outsl icebp ret out cmpsl mov xor popf push push out in xchg repnz cmpl push jo aaa inc add jnp jno pop mov cmp or lds jns insb rcrb call and jg add imul xor rorb gs and inc enter lret fistl inc xchg mov pusha sub sub (bad) mov pop stos cld ret add movsl pop jae enter orw xchg jne mov lods mov dec (bad) cmp cli orb icebp cs fwait stos fnstcw add cmpsl fnsave mov or pop (bad) sarb dec pop add mov mov jnp push mov jno pusha push pop cmpsb pop cmpl andl lds cwtl dec adc mov cmpsl jg ret sub jae add outsb xchg subb movsl xchg jae (bad) std inc out jo push sbb mov cmpsb les (bad) mov iret mov sub sub add cmpsb xor lahf clc roll ficom pop int in xorl aas add add xchg add test lods add sub sub jmp inc pop lea es imul mov add ret adc mov sub inc sahf js mov mov mov in add insl stc int outsl movb lret ja xchg repnz popl mov (bad) stc mov imul sbb outsl add sbb out test test or add jg jle repnz add push cmpsl add sub jns insl roll mov push push das mov cwtl mov adcl xchg push subb mov outsl and popf icebp cmp in dec imul or and popa mov hlt je mov push fnstsw xor and es adc adc dec movsb dec mov mov push pusha add push fimul adcb adc push cmp ret xchg jge loop inc popa add fistpll sarl leave pusha daa push sub inc dec dec mov aad add insl lahf push sub xchg jne int3 add leave ret cmp clc cmc mov xor add mov or add jmp push or stos insb dec jns add pop sub int push xchg push pop add add jl sbb (bad) addb mov add (bad) fldpi in movsb add dec mov ret adc dec pop add push xchg jo xor mov add fmulp push packuswb and insl lcall inc lahf and (bad) cmp cltd sbb testl xor push cmpsl je adc add push sub test add aas mov vmovdqa rcrl and xor je jg lds popf cmp lret or addb clc das frstor xor add and mov mov aas cmp push fstps shrb add rcrl movl (bad) jp fiaddl cmpsb inc ds sub jge pop lods jle fs int3 and fdivl insb mov push add add ja mov icebp ljmp sub ret xchg lds inc scas jb sbb sti push pop jl xor pushf fwait xchg xor psllw std jo scas inc cld add mov sub roll jge xchg xchg cmc jmp mov into lahf dec mov test jb add xor dec jecxz cmpsb test sbb cmp xchg adc pop test in roll btr addr16 add mov pop cmp xchg mov data16 xorl push cmp je or mov mov lea jnp jne test push movsb cmp add iret adc loope outsb add xlat jnp mov sub lods adcb je stc pop sub lds jb mov cld dec mov pop movsl orl push out jo cli iret faddl inc cltd jl add int3 add sti mov (bad) ljmp pusha add add xor xchg add iret or sbb mov pop pop push sbb jo test aas push lahf push push add mov fidiv ficompl jg add push stos movl jecxz sti sub xor dec repnz lahf cs push jmp pop testb lret loopne inc (bad) lods or mov jo lods gs sub mov mov xchg dec xchg loopne in push inc lds adc arpl movsl (bad) outsl ss addr16 cltd (bad) push dec fwait (bad) add mov pop add fsubrl xchg mov mov inc mov mov dec mov pop cmp nop sub arpl sbb push sub and cmpsb and jb add sub jae mov enter arpl mov sti dec mov ds mov xchg sbb jl mov sub push push aaa xor leave cmp addr16 sbb (bad) sti sbb insl orl imul mov inc add and push add nop das insb rclb ja or inc cmp or mov mov outsl add pop push icebp jns ds leave pop mov mov outsb insb and add pop aas test push lds rolb jnp inc push jae add movsb out les mov test cmp mov mov outsl addr16 scas add push push aas mov dec dec xor js jo out aad mov sub add sub std xlat not (bad) add mov pop adcb mov jne add mov mov mov pop shlb jnp mov sti (bad) out add cmp adc and nop add fiaddl jne and pushf push repnz andb ficom add dec and push or xchg add cmpsl flds scas addl fldt push or and add sub fidivl inc add cs fidivr les repz ret mov jo std pop mov test xchg pop bound es je add lea and or add and adc ds addl enter into cmpl add xchg cmp notb outsl int jno dec lahf cmpsb pop cmp pop mov adc jb out or mov pusha out arpl add sub movsl inc dec ljmp imul sbb pop movsb (bad) push xchg mov imul test sbb or imul jge or mov xor imul adc sub ret std test sbb add js popa add stos jle push dec out sub scas push pop nop xchg and pop add sub add repz inc aas xchg add or js test scas or shl push movsb add push push add push jg ret inc xor mov orl sahf scas pusha pop cmp daa and cld add dec lock dec mov adc ljmp xor bound js repz sbbb pusha je jbe adc rolb mov mov pop js orl cwtl pop les lods sub dec mov dec fiaddl mov xchg xchg adc in mov (bad) adc and out adc add fisubl push cmpsb test pop cmp pop mov jne pop add add xchg sub jb gs sub add (bad) std inc lods das pop add aas or pop xorl and push imul adc sbb jp mov fiadd (bad) fcomp xchg push loope out push orb mov mov xchg adc sub fisubl idiv adc pop add dec push add push push rolb shr sbb or gs sbbl lcall add rcr sbb cld enter lods push or xor scas sbb jge mov hlt inc mov lds sbb ss aad imul inc dec (bad) jg cmp lcall ret or data16 in add mov sub push sbb add sub pop pop add je negl mov add das cs pop pop jne or push incl outsb in xchg pusha into inc add push out std test das xor fs lock jbe outsl orl xchg ret jno add jp sub in add nop imul mov inc add cmp cmp inc jbe (bad) add cmpsl push adc fimull cmpsb je sbb or or incb test fmull sbb out xchg scas jl or or mov addb push subl add jae js out movsb ja add add icebp add hlt pusha dec mov aad inc pop mov mov or fsubrs loop jo inc add sbb push push dec cmp aad pop mov aas push adcl je sbb lds xor leave ds mov add in fbld push pushf cld inc outsl xchg sti subb mulb xchg adc jo push xor add stc flds adc in xchg out push lea jb xor sarb add dec mov lods jle push cmp sbb gs rcrl push adc and sub mov push clc fs jge mov call and add add dec lods add in xor add out adc add cli and insb xchg movsb add push xor testl dec add into lret add add dec outsl pushf mov jle out cmc enter add inc js inc inc test or loop jle push inc xor (bad) add adc push add push cmp dec sti (bad) adc xchg xor aad hlt add cmp jne ja adc mov pop inc arpl test iret adc imul jmp in jge adc push mov xchg imul add insb dec jae cs andl push nop scas xor mov stc xchg flds arpl xor add push pop dec add mov imul fnstsw or sub pop arpl cld xchg iret xchg add cwtl rol test push mov pop mov cmp jae pop repz lea push pushf (bad) or ljmp mov jecxz mov ss pusha scas sarb sub pop jge or push mov pop out sar jecxz mov xchg loop inc leave push mov das es outsb xorb and repz fmuls jae or or out outsl add mov imul aas sub inc add std outsb mov push cmc add enter mov push mov pop out scas mov inc mov xor lds push add or adc mov test jo cld adc dec loopne test out hlt mov adc add add dec xor add subl enter cli push mov lea cmp push adc pop xchg add and sti mov pop xchg jle arpl iret add js (bad) push int3 xchg pop pop leave les or lret ss add sub or add ror scas adc loop test ds cmp out add jo lcall mov sbb add dec stos mov cmp xchg inc xchg xchg add add dec mov stos mov pop sub fidivrl cmp inc mov rcr iret add pop mov cmp add pop pop mov cmpsl ret int insb inc test test das add add add bound add ljmp push rclb mov mov add push scas pop add dec mov add pop mov stos add outsl out sahf push stc add mov cltd imul dec dec (bad) add mov sbb add in sti mov xor mov sbb clc mov fstl inc jne adc add mov jo xchg mov fstl push jno pop cmp stos sti imul sbb and fild add enter sar int3 add mov mov pushf xor das icebp test xorl ds add roll loop scas jb jecxz int mov mov push or add push add inc mov pcmpgtw pop cmp ficom push pop stos das add insl push xlat add std fs add data16 mov mov les cmp cld and sbb adc jle sub xchg add rcrb ss divb or out xorl inc jbe add mov pop add jne jl pop and icebp cmp mov lds mov add xchg gs cmc call ss out sbb add cmp hlt inc fnstsw jne and xchg add movb push or jmp daa xor pop and int3 stos mov add xor (bad) add pop xchg pushf add mov xor loop add int3 xlat adc lret sbb sti mov add or push int3 and aaa jge mov add ja decb enter add data16 jns mov in push cwtl (bad) push sbb les mov mov inc mov sbb sahf cwtl adc cld int imul pop rcrb or mov push xlat dec std mov notl rcll pushf pop mov add pop ret sti pop or or mov adc ja (bad) out mov dec stos aas xchg add push lock inc lock sbbb adcl test ret aas das xor xchg rorb out mov adc jns stos or stc pop xchg and inc add dec mov push andl lahf popa sbb loopne push js das add push adc or out jbe (bad) jmp into in cmc and cltd pop add inc stos popa add cmp lcall jne sahf loope sti movsb jbe push xor pop sub mov aaa leave test mov lret shrb cwtl lcall rcrl (bad) jae out push add push sub adc gs aaa add addr16 jno mov add lds add loope ficomp pop add ja cmpsl cmovnp pushf roll daa mov mov in imul mov jl cltd cmp sbbb les push in xorl jmp push lods subb add mov xor mov (bad) add bound (bad) movb sarl pusha xorl mov or add addb inc (bad) movlhps add sub jns fadds inc dec ljmp cmp cmpsb call pmulhw inc outsb jo fs add xor jecxz pop loopne add add jae into iret jae (bad) es pop sbb adc jmp cmp push push xor cmp adc mov ret jnp into popf insl xchg loopne jmp mov js and pusha (bad) in push subb cmp sbb ret jg add mov xchg push dec add push mov psrlq std and inc ficoml das popa add push cmp ret test add and mov (bad) lret cmp sti loop jbe sub jmp dec add ret jae xchg out gs mov icebp cmp mov push add rolb sbb (bad) sahf inc pusha inc insb mov mov mov inc clc sbb jecxz lods loop adc in bound pusha rcpps or xor push js stc fwait sub and loope mov (bad) add movsl (bad) sbb lods and sbb xlat clc pop cmpsb jo clc fadds int lea add jns ret lahf sbb in push pop or pusha mov add loop sbb push dec mov pop popf jge pop add loopne sbb add adc sub data16 rcll sbb iret adcl push jge sbb ret stos mov pop add int nop adc mov and or add jae xor xchg js jecxz imul push xor jno outsb iret sub outsb dec and adc ret add insb sbb pop add pop (bad) pop or cmpl clc push (bad) loope out bound jp sbb xchg mov pop mov pop push leave jns pop fwait cmp scas (bad) ss jo les ja sahf xor ds cwtl add fsubrl dec or dec flds pusha pop pop lahf aaa or xor orb testl inc cwtl fistp test jne inc xlat and ret hlt add push xor sbb xchg iret mov ffreep mov arpl and in bound in hlt jle cmpl lcall push popl and test sahf jne add aas jno add xor and lahf idivl iret pushl jns xor stos add repz pop ja lock xor and ds dec ret imul (bad) jb pop add mov in lods popf add mov pop add (bad) xchg sti xor sbb test in and pop pcmpgtb mov outsb nop xchg push pop add mov ljmp call push xchg inc fdivrs cmp adc leave push movsl or push mov jle jl add (bad) in adc sub mov pop cs or dec add mov mov pushf push jne jg add lods scas incb popa and inc enter mov rolb js outsl fucomi orb cmp jno jl inc js sbb pop jo xlat sbb add xor jg add or xor add rolb test or jecxz ja mov sub pop call push repz dec xchg pop dec rorl lsl sbb mov add and xchg or insl dec add add or mov cmp fadds push inc add and nop repnz xor push je scas cmp jnp cmp push pop sub rcr mov ja dec lahf sub inc lea lods xor call mov insb push dec sbbl dec xor leave dec je sbb add push dec push pop lock add rorl sbb dec mov iret sub add in xchg movsb dec nop sub test scas inc add add stos sbb sub pusha and (bad) in inc cmpsl insl pusha addl hlt imul inc dec adc fildll or xor repz jae (bad) mov jl xchg bnd loope sbb cmp lods cs and js aam (bad) cltd mov pop mov cmp arpl cmp enter and aam ljmp inc pusha dec jns push pop mov sbb pop or pop xor push mov sbb notb and jnp in mov outsl out sarl repz push and loop aaa add jne std mov sub adc add sbb fwait xchg in (bad) xor cmp int3 inc leave addr16 add cmp jge iret mov add push cmp jbe inc pushf notl sbb decb call push addl fistp cmp mov ds je pop sbbl repnz das enter sub je lcall push and mov inc enter xor add lret mov adc and mov dec cmp lods ss cmp pop rclb imul aad stc and lods and lods xorb (bad) call jno sbb add and stos add mov sti add ljmp adcl push add jmp dec shll add lret faddl adc mov fwait cwtl dec push in data16 jb xchg add or mov popa xchg push out subb cld out dec add fisub hlt mov stos jecxz pusha stc sub lods add shll clc add jp push or pop mov aad inc mov rorb add and pusha cmp nop add insl xor push add cmp xorl nop out popa add lock ret inc add push into push add add xchg adc add imul add dec sbb sbb nop push out mulb pushf xchg (bad) mov mov out lea xor call pop icebp pusha cwtl inc add mov xchg add sub js movsb adc add jbe popf adc adc arpl stc xchg mov iret repnz inc lock (bad) cld adc subb lcall add mov xor push jmp mov popa sarb sub bound push xchg inc jns (bad) repnz and andl or cmp pop movsl setp pop sub call into js add jb je inc mov push cmp fidivr addl and mov lods add push mov leave jb std jmp lret (bad) push adc aas pop enter add and insb (bad) and xor (bad) in xchg and sub add es dec rorb add or jmp cs mov repz ljmp add loope daa mov sbb and jne adc roll xor cld inc sub add or imul inc sbb mov add mov mov pop add push sub adc add and out jo fnstenv add sbb lcall (bad) jae andb iret or movsl stos mov sub fnsave outsl push pop add dec and lcall cwtl jno and sbbl cmpsb mov movsl sub jo (bad) movsb xorl out push rcr mov add mov icebp dec (bad) out call loopne xor mov sbb sub cmp add iret lret mov jne nop jns push add sti or int3 dec jo add outsl jae daa test leave mov jnp into and pushf ss add aad inc movsl cltd iret add (bad) xchg mov mov cmpsl sbb cltd movsb add dec adc enter loop mov inc and xor push stos dec add cmpsl xor dec add orl and (bad) adc add fidivrl loope bound pop int3 sbb addb sbb or loopne lret test out test jp xchg loope mov es lret or jnp add daa or xorl fild insb int pop ljmp lcall outsb add js xor add and sarl cmp add mov inc add fisub and push jb adc roll xor fs push test adc add cmp enter sbb sub sbb das jo gs jno cld incl aas and xchg xor aaa add pop push in popa xchg stos testl fist adc pop dec insl sbb sub dec add (bad) xor sbb imul cmpsl mov add xchg lds repnz add in movsl testb cli lods and xor fldt mov xchg scas jl fadds jbe bnd out gs mov add or pop jnp cmp fdivrs pusha add test jmp add (bad) add and xchg decb shrl add or pop and lods add and int3 pop add movsb xchg pop aad inc sti and mov add (bad) jl cwtl fimul xchg call outsb inc or test xor jns sbb fldenv push loope (bad) adc ds aad subb dec add (bad) xor aam mul add pop mov cli scas adc fistpl fild jno (bad) xor shlb push dec ja jle stos push cmp das outsl push and sub push lock bound push pusha rorb inc sti mov mov and in add sbb push mov jge xor lret movsb sub push int push mov and (bad) push notl add fisub add inc jne add leave mov arpl mov fs (bad) jmp xor pop fnstenv fistp out xchg and test insb dec add adc hlt add add out or scas add pop ret mov lret push dec jmp jne add test mov pushf bound and dec mov add inc adcb xor mov cli jnp incl pop jge jle fadds jecxz int3 push ss inc add out mov sub sbb jmp (bad) inc pushf outsl rol add pop xchg pop rcrl xor stc push sbb movsl mov lahf enter ds add sub add pop xchg cmp jnp jl inc or jl add and and out add adc add cmpl xchg cmp push cmpl cld pop pop inc and sahf ret negl cmc add push daa jge fidivrl mov aad fnsave pop in int push and es jnp jns mov bnd add daa int add add sub fstp add jp cld push cs (bad) pushf dec cmp inc lds outsl add xor fstpl adc mov inc cmc roll (bad) pop shlb add ffreep ss push add nop jge add fsubp notb lods cmp subb jle lcall inc stos or cmpsl fildl add lea cld sbb out outsb push xor add mov ja inc testl add lcall lahf fistpl mov add push sub das and test in sahf push dec out aas jp jno fnstsw jg sbb lds cmp ja jecxz movsb add adc aaa fsincos add cmp add arpl pop mov bsf xchg aas fiadd sar cmpsb push xchg or add xlat fisttp add frstor and fnstcw add mov enter jg lahf mov or sbb lahf push test inc add icebp push aam cltd push add xchg arpl mov jo and add stos inc cmp mov mov in pusha icebp loope sub imulb ljmp add jns repz xchg sbb sbb mov xchg adc fnstcw or loopne add ret mov or hlt xor inc push add sahf dec push in ja addl and add arpl jp mov push add mov repz je jge pop int3 dec add and js sub iret sahf mov add mov lahf mov data16 repnz test push or fcomip pop jne xchg scas out hlt out jo add nop push dec lcall jo dec mov add cmp inc mov testl add mov mov cmpsl or hlt jb cmp rcr or push fidivr popfw (bad) into xor xor and and in xor mov pop pop mov sbb jmp cmpsb pop (bad) pop sub mov ret add in nop out test sub ljmp adc int3 scas fildl cmp add movsl stos jno flds popf out pop xchg dec inc outsb add cwtl rorl and jno hlt in outsl sub test addr16 mov loopne add jae pop add mov incb jb add fimull add push shrl cmpsl test mov add les push xlat jp dec add std xor inc xor arpl mov push push dec jg pusha in nop push lods jae pop or add lret pop pop xchg pushf les cwtl jecxz or jns mov or icebp in xor xorb loopne pop mov movsl xchg movsb divl sbb adc xchg add pop gs push pop cli (bad) add jne jb push fcomip pusha mov aaa gs add or out inc cmp add inc in shr pop add shrb sub push cmp cmc xor pop ret inc jns add insb xor inc dec push jle xor les adc add shll pusha inc cmp and jge je mov jp mov fisubrl mov jo cmp add mov xchg xchg jmp cli xor movsl dec repnz add dec notl outsb cmovbe add and add inc out jl add add jnp pop add mov inc in loop add xor xchg xor stc jne cmp add arpl jae scas mov outsl (bad) inc xchg orl sbb cld add pushf imul xchg lds scas mov daa fs inc pop xor scas leave pop outsb add retw pop mov in add shrl xor pusha es js fs frstor mov jnp add das pop ds jbe fsubrl jmp mov movsl addl pop fiaddl add push stos hlt jno je pop cmp xchg or rorl adc aas dec add incl add lret jecxz cltd sub jno jb mov cmp andl or jge sub sbb add cwtl pop test aaa cmp jae sbbb adc addr16 lcall dec mov adc adc mov test daa jbe test inc fdivl sbb pusha and stos push ja arpl push cmp mov cmpsb or (bad) pop rcrl inc int add adc (bad) (bad) dec xorl inc mov pop dec and add rcrl cmp dec les lret add mov test xchg add insl jb fwait aam mov xchg push or mov in add popa cmpsb dec in add ja or icebp pop xor aas push pop mov jne push add je out mov sub sti mov xchg add in mov andl je mov subl insl int3 xor cmp push adc push mov push lret mov add sahf xor andb sbb add pop outsb les mov out mov xor xor lods xchg lahf fadds pushf dec jne insb jle out sar mov jbe pusha sbb lret and add xor add adc ror fucom mov adc add mov mulb out daa add dec in mov loopne popa xchg hlt je pop (bad) xchg xchg fs jno stos mov pop and cmp scas idiv xchg testb add imul jnp leave pop fs xor and xor xchg rcrb inc out lret mov or add mov fucomi dec jmp out jl out sub cmpb xor add popa pop xor push inc repz jbe add icebp adc mov sbb jne push enter add repnz testb je xor mov xchg xor subl jle xchg fisubrl xor out mov cli push stos xor pop loop mov vmovaps mov xchg pop add push add push sbb inc jge add sbbl mov cld aas xor rsm and fwait push push cmp add scas and jl mov add jns mov into push jg add aad lds xor sahf or dec adc dec mov fs pushl push sbb adc roll mov das pop push or or lcall jb inc add lods jae mov xor sti test and mov xor stos dec add es dec mov in xchg inc shr mov push and mov jg add mov xor insl je or in imul aaa dec mov add cmpsl into aas test fwait dec mov int3 mov addr16 lock sub (bad) xchg pop fildl jp inc push dec nop add or pslld into sub test add sbb pop mov jmp xchg pop cmp les inc outsb xor add and repnz fidivr jmp add in jge add sahf dec (bad) cmc popa addl jp loope cmp mov push pusha arpl inc (bad) test repz fdivl xchg in std push cld insl mov outsl fwait pop (bad) lret add les pop lds into inc or pusha push lcall xchg icebp mov adc shll js sbb add cmp cli jne sub add inc pop cwtl lret inc add aaa test leave cmp add les (bad) or lods lret inc test insl xchg add sti sub testb (bad) push mov mov orl pop adc or sbb push lds mov inc loope cmp jecxz add loop dec and adc daa sbb xlat add dec add mov sub (bad) add xor icebp scas add jbe (bad) (bad) or das aad mov add out gs scas cli js (bad) fild hlt inc mov pop sub add imul test lret adc xlat out jp dec dec subb bound inc cmpsl xchg mov mov cmp add (bad) pop jae push add stc and mov lea mov pop mov add out dec test add inc sub sbb sbb ret push sub cmp jb pushf into repz add xor cmp pop mov imul add pop icebp and cmp xchg subl inc into adc or mov imul xchg cmp movsl cmpl (bad) cs lock add cli cmp xor xor add or rclb insb adc cmp push mov add mov pop mov mov jecxz fmuls mov popa xorb outsb or add ljmp je es pop add xchg outsl add jge mov clc leave popa out adc scas mov xor add insb sbb mov add xchg ret push movsl push add (bad) cmp das into push adc push mov or jp je lds gs insb and mov pop stos int sbb add ljmp lahf inc xor cltd jmp repnz call inc or pop mov add out movsl jmp xor or lods icebp into (bad) lock dec or cmp fs mov add xor mov mov ds mov (bad) mov xchg sbb repz adc pop or cmp xlat inc adc inc mov in add or cmp in fucomp (bad) pop cltd inc stos xchg pusha jo mov xchg push mov popf (bad) pop out orl stc mov pop xchg xchg pop pusha outsb sbb and jae add push jbe add mov movsl sub push add test inc data16 pop (bad) dec bound ja add push jnp jecxz push add pop jnp ss adc (bad) jae ret hlt add push mov lea push cmp inc xchg add mov movb out xor push rolb add daa mov outsb add mulb test mov add shrl (bad) and imull bound inc pop std hlt cli add aad adc out outsl (bad) (bad) lcall test je add (bad) and adc imul incb jo mov pushf inc stc in inc mov cmp popf mov add test fs sti lock ret sub repnz jne add push js add (bad) inc scas lods addl iret pop popf add arpl pop mov add adc test inc pop add repnz mov jo adc and imul push jbe mov (bad) push ficom jae dec pop sti push lcall add fmull inc add inc push fildl daa fwait movsb add push lahf int sti or xchg push test cmp adc loopne lret mov popf incl rcll jb pop pop pop add mov mov mov add dec popa xchg mov pop bound movsb inc jmp cmp mov xchg incl mov lods or test add jnp pop and mov fsubs fistpl ret mov xchg inc inc fsubl mov sbb mov lret mov add adc xchg (bad) mov fild mov push push add mov add add inc std adc add and add jb dec unpcklps add mov xor lea ja aam les mov jbe mov (bad) or cmp add push jbe add fbld cli pop dec inc jp xchg sub pop cwtl and jge movb lods pushf xchg mov pop dec add push jle add ljmp cli js outsb inc jmp (bad) lds popf pop jg rolb ljmp add add roll shr jo repz add mul and int mov jecxz or lret jo (bad) aas xchg cmp dec nop rol ret add popf (bad) jp leave xor jmp sub xchg adc mov dec ljmp lods dec jbe inc int sbb cmp push sub jmp test jecxz hlt add fisubl dec add popl aam mov lret (bad) dec in jno inc push dec lcall cmp jbe add push sbb add mov xchg lret sbb add (bad) xor pop sub inc cs pop xor cmp add stc push in sarb push out test xrelease lret push adc add xlat in js js add lret jo add loope outsb test cmp dec push nop pop lahf movsl pop test pop or addl lods pop decb call loopne dec jle mov (bad) hlt inc jg test aam push add aad pushf sub push sub rolb dec cmp mov fdivs in fnstenv arpl xchg incl jmp test xorl popf and jmp add fs jns sub or insl outsl push push negb pop pop cmpsb pusha int3 incl and jne mov and inc push loope jl push and lret xor and fmul in ja icebp das imulb xchg out fs cmp scas in push icebp xchg pop insb ss add xchg shll fidiv aad cld mov add enter adc lea mov sbbl push inc jp (bad) add test jle test daa (bad) notb or add xchg es adc sub lcall addr16 fldl adc mov sarl add pop add push xchg dec and mov shrb push add jge roll xchg sub pop add rcll pop pusha shrl mov insb inc daa push sbb or inc sar loop jns fadds aam lock pusha fildl iret mov push fwait push cmp (bad) int dec and das pusha pop mov mov (bad) xor popf jmp add sbb pop jl cmp xchg add jb ljmp add pop jge jns ds into add sbb push adc push sbb popa (bad) notl mov mov scas xchg je out fnstenv ret test add pop mov push sbb sub out sbb mov rcrb jne mov sbbl pop inc sub or clc test call and enter out repz inc roll add fldcw add xchg (bad) mov sbb pop push hlt dec add cmpsb (bad) lock push inc stc mov fs jl cs popf push inc pushf jae cs out pop ja adc add scas stos ret jl rolb shrl into cmp add in mov xchg jb add add inc add or jns cld and in mul and inc xchg cmpl inc xorl popf and xchg cs (bad) lods or pop xchg add or insl push inc jg add sbbl clc push jp mov mov in jno,pn pusha inc sub incb dec test mov jo jbe pop or inc sbb insb add dec mov shl add add fstl inc ja lcall (bad) mov jge,pn pop into xor pop gs sub jmp add stos mov add lahf add and outsb add hlt push imul mov rorb data16 loopne jbe push lods xchg ljmp and add imul push (bad) (bad) sbb add neg push cmpsl inc (bad) mov aaa mov dec push push lds push add lahf mov xchg fildl mov test push imul hlt add push add sub jmp clc addr16 xchg add push jle sub (bad) in sbb movsb fldcw addl dec test or dec (bad) pop pop push lahf mov add push jg cmp xchg push out xor adc pusha loop xor les inc push ret pushf xchg mov pop mov push jle outsl jne xchg xor cmp adc xchg leave (bad) pop inc in fimul pop jmp push cli and sti icebp jae sub ret stos add add jl xchg orl inc dec add mov or inc cwtl rolb dec data16 add icebp xchg int out and arpl fisttpll xchg sbb inc idivl xor stos cli cmpsb arpl pop cmp jl and dec imul cmp test scas out pop rorl orl fiaddl jo (bad) mov cmp add inc js mov lea jbe fs outsl pop jno fcoml inc insb pop sbb int clc mov pop push (bad) add rolb xor and inc adc mov (bad) mov jle out popf subl scas mov lret (bad) pop pusha jecxz test and aaa mov sbb and insl aad pop cmc cwtl add or sub imul xor out add jne and add jnp add and icebp mov mov mov jl loope scas outsb inc pusha jmp push je add jl out cmpsb xor add inc insl nop mov mov add pop xchg adc add xchg add jns fs shll xor add in test push add cmp jno popa pop mov jo roll jbe mov or ror sub dec rcrb push pusha jp lea scas movsl leave jmp add add gs push sti pushf xchg lock mov je enter add push push out add out xchg sbb addl into fiadd add mov iret add rorl lea out jae (bad) mov sarl out cs mov pop sahf lea in xor (bad) cmp cld daa in nop (bad) sub mov test mov sti jbe jns jmp sub add add jp xor cmp in jg add stc test test jmp push add push xor jp add sub xorb and (bad) iret push pop sahf sbb divb fnstsw mov dec push add push in jmp add outsl jecxz test and hlt add sahf sub mov cmc repz mov add cmp sbb add mov pop pop subb ljmp pop ds aaa jecxz jl arpl jmp clc imul mov lea push mov stc push inc daa adc jno ss dec (bad) push mov dec mov test push mov add ret es xorl dec daa aas inc add mov push jle or gs js add out ds mov jb xor jle add xor ja lret cmc pop test rcl sub add sbb jbe lea jmp add mov (bad) inc add in mov enter push jecxz (bad) (bad) call clc mov pop repnz xchg in (bad) out sub out add or mov adcl fimull xchg js add out repz (bad) xor popa adc cmp xchg add mov dec loop mov mov push sti fldl jbe (bad) subb addr16 ret imul cli add fdiv push mov adc sahf inc dec in jb pop (bad) dec jae mov cltd and mov push stos sbb int3 inc add hlt pop cs sbb jl mov scas inc out inc jp mov inc test stos add (bad) xor and into xchg sahf jl in or mov and dec jecxz incl mov jo sbb in mov xchg dec pushf lret ficompl add add xchg adc push out mov inc mov add add mov add push dec ja jecxz lea dec push pop sbb xchg andl and repnz sub sbb outsl jp out sbb orl (bad) es dec or mov cmp add add shrb add xchg mov pop pop test inc jg lock lea pop into pusha and mov (bad) loope push js inc xchg push cmp push and into cmp fldt loopne orb sbb add fdivs cs push jmp xchg push ja add xor add aaa xchg push mov sub jne out mov in sub xchg mov sbbb push jbe out add mov cwtl sarb mov gs hlt and popf call lds les repnz sbb and fwait push mov cmp and ret add xlat or cmp or ret xchg jg add sbb pop add mov roll inc sbb mov clc jge add bound sbb jmp sarb add cli adc sbb push data16 mov add mov pop dec jo stos jp dec sbb addl rep lret pop push in popa divl pop sbb out fildl jb sub jg jge jns add sub cmp push add adc dec (bad) mov rolw call fld mov addr16 jo test pop adc add fstps xor into xorb sbb ds xor cwtl mov xchg push loope movq fwait dec push rcrb mov adc mov sub mov or inc pop stc loopne push push pusha sub jmp mov add mov mov inc lods jmp inc add and mov aaa addl cmp push scas push pusha ljmp push xor hlt jae call xchg add stc test jle dec aam sbb add xchg or mov ds sub fstps or stos xchg call cmpl test into fiadd out inc ret cli repz add xchg lock divl sub add mov cmp add lahf mov xchg adc inc cld jecxz pop inc or xchg repnz push fsts cmc stos pop (bad) add cltd jo inc sub imul jp mov into loop jl addl (bad) aam push sub and rol fisubr jp,pn add lcall stos add popa test ret inc inc ds inc mov pusha jb ficoml push dec or jl sub and mov and out pop xchg mov or cld xlat push push test add (bad) out inc adc add mov (bad) insb mov subl mov mov jle adc rcrl into aad outsl add clc test loopne add add add gs sub push push fcom push cwtl cmp or inc jo repz pop inc leave and dec add mov scas divb inc pop idivl arpl or add pop adc fisubr sub repnz test jo push in jb inc adc sbb add dec lret jnp lock push bound test mov sahf and push xor inc das sbb add es (bad) push adc push lahf push mov add jecxz add inc test lahf out fs jp ljmp jnp gs mov pop (bad) jo cmp add sub pushf rcrb test cmp ret mov mov or mov inc mov add cs pop add xchg cli mov in pop mov or xchg mov out add sti out mov fcmovu scas (bad) push add icebp push jo loopne add push pushl (bad) (bad) xchg xchg push repnz jo jp mov add inc mov pop movb dec aaa iret mov gs add inc xchg adc add test add adc sub aad jno addl add out dec (bad) int and popa add lcall push outsl pop cwtl mov add sub add sub test add add mul ror push jge fldcw sbb orl dec sarb pop jbe add pushf leave cmc sbbl sub fimul sbb (bad) cltd xchg add or (bad) mov sbb xchg pushf aaa add sub mov insl hlt add repnz xchg cmp and jp mov enter cmc push movsl lock and es adc push lods movl pop inc sbb add shufps clc mov idivb sti jl shlb andps call jns xchg add adc and outsl (bad) jle into push in inc inc test pop shll add cltd fwait add push (bad) loop dec cmp inc xor jp sbb mov sub cmp call pop cmp les mov insl jle xchg mov push or xchg add or into out adc inc loopne and pop mov hlt add add mov inc popf inc popf addb push push pop pusha xor or cmp sub sub (bad) loopne cmp andl insb cmp lahf mov sub and stc xchg pop aaa mov clc mov jae push add jno popa ja xchg das xchg and sbb test pop jle shrl test push sbb movsb cmp add sub sub stos mov aaa das pop divl add sub xor in xor xchg push jbe add xor in (bad) adc xchg icebp ret mov cmp add mov sar pop adc pop cld stos aaa jne scas movsl inc push test imul sub cmp int3 dec cmp fwait xor inc aad pop xchg push call and and add and cmp repz sbb add cmp out orb loope jbe pusha and pusha add (bad) cli inc fiaddl gs andb lods mov lds (bad) out adc inc ret mov mov movsl popf mull mov dec mov sbb clc or cmpl orb in lret fcoms jmp add and (bad) add cmp popa sbb dec bound test in ret add ja aas push and pop mull jb and insb inc mov imul adc or out push ret rolb adc xchg push roll pushf dec mov cmpsb jmp xchg jno inc or and and sbbb jl add js repnz into add add pop inc dec imul pusha int3 jns and add mov roll popf pop cmpsb repnz ljmp fadd jne push cltd stos pop lock inc xlat clc dec testl add outsb push icebp sbb inc mov mov add push add mov mov add mov mov add sub fild lock cmp push dec (bad) mov sbb cmp push (bad) mov call pop add push dec or or pop add push mov roll lds xor push lret das xchg mov add aas jo js adc xchg dec mov sbb jno movl pusha add fmuls pop fisubrl push lds arpl pop push (bad) aas fistpl icebp inc mov mov cmp cld fidivr mov or xchg add ljmp mov lcall lds add mov test jle add xor adcl dec addl (bad) pop (bad) in ljmp mov mov mov fdivs add roll xchg dec cmp sub or add push lahf sbb test inc lret into adc mov sbbb push ret inc xchg negl jmp and lcall sub or pop add out scas iret add add mov bnd enter bound mov pusha pop clc pop xorl in inc xor add xor addr16 fiadd adc inc jg lcall js mov mov bound int3 inc (bad) jnp add es daa and push scas lahf inc push inc sub ss xchg add cmp call jp jno test lods outsl push add scas xor add pop lea and add adc mov push insl jmp add jbe cmp add mov fstps cmp add jne jecxz les pusha sarl fidivrl add push cld and imul in sub or hlt add pusha sub lods in fnstcw stos add rolb push pop je mov pop data16 les in insl (bad) xchg lret xchg add dec ja cmp adcb push pop mov pop pop add sbb shl addr16 cmp add xor mov (bad) inc xor loop and pop cmp push add ucomiss rclb pop xor out xor in ss inc cmpl pushf dec sub call adc xlat (bad) cli and loop xchg xchg outsb add ret dec lods es inc add xchg imul repz dec add add ret (bad) dec mov xchg leave cmp mov dec add jmp mov outsb cmp mov (bad) into loop mov (bad) push pusha push cmp pop push sub cmp xlat cwtl xchg lods mov or add test (bad) jb pop pop jb stc jo or imulb jnp or push cltd jecxz stc pusha cmpl pop xor jo jge lahf cmp sub xorb lods js and mov enter imul (bad) aaa cld mov out enter xchg pop push push mov add jge in addl xor and cmp cmp das lods pusha and rolb or add jl xchg push and jo jle jge stos loope cmp jp pop mov cmpsb push lock add les loop in dec dec mov pop mov fldcw cmp lods cltd add inc add cmp add pusha icebp cmp push add mov xor lret testl hlt ret fidiv xor mov inc xor add inc (bad) (bad) xor movsb cmpsl (bad) iret sbb adc or pop subl push movsb or cwtl add sub jbe jo add push ficoml loopne push push mov ficomp nop call ficompl sbb test fs mov or pop jp add imul xor push enter adc lahf cmp dec add inc or cmp pop dec fucomip add sub loope mov out sbb add inc pop push mov mov insb add dec add add cmp mov (bad) jne rorl jbe fcoml push xlat add ss jo sbb ret add lret jno add and lds mov jg sbb jle add inc adc cld cltd add push sbb stos jge ss xor dec scas xorl dec jle add cld loope icebp leave stos add jecxz test mov lret inc cmp pop scas das or xchg js mov add jl lcall lcall fs scas pusha ds cltd add stos mov xor aad cwtl jle add nop ret repnz test sub in add xchg stos incb insb or sbb push adc fldcw ja sbb cmc cmpsb add jg add xor cmp test out mov sbb sub lret lcall sbb data16 push test ficom push (bad) fisubrl dec inc add (bad) fld add adc pop cmp es inc pushf arpl push out xchg mov xchg mov pop add sub scas mov xchg add enter or jns pusha sub enter pushf jbe addl popf js push in add dec les negl imul addb insb repz jnp push mov mov and jno add js cmp dec add sbb cltd mov and scas mov sar imul jl out pusha mov xchg jb aas xor push test pusha mov mov cmpl cmpsl insb or popf bound mov dec test leave addl inc inc inc push add in dec inc jbe into jecxz dec fs adc inc out add pusha mov add fdecstp dec add in clc jne mov add in and add push push xchg aas lock add imul and add xor faddp inc mov loop sti add mov add test pop sbb jo test cmp xor adc xorb or push add lahf (bad) idivb inc ss cltd cmpb mov inc sbb (bad) ffreep pop clc loope cli adc gs add movsl popa frstor sbb pop fldt jns outsb push mov inc movsl decl adc mov mov addl (bad) adc add add mov stos loope adc (bad) and add popf addb sub out add cmp jg xchg sti push arpl mov pop push bound jns pop add pushf dec add cltd xchg das add sub and insb cmp aas xchg iret push flds shrb jl mov jae clc int3 adc testl test stos loope andb sbb dec pusha xchg addr16 inc pop cmpsl sub pop add stos add test push dec mov add into xlat inc lods dec (bad) js and push jecxz int3 imul movsb call pop enter sub leave and cmpsl mov mov ljmp mov lea pop in pop jnp add mov (bad) ja adc push arpl push xor daa push orl add in lods pop cmp test (bad) mov out push shll aam icebp jmp inc (bad) rorl andl add jg sbb jge add call add dec adc or mov add imul add (bad) pusha les adc and wrmsr xor xor pop stos aas movsb push add jle cmp mov daa add jmp push push adc mov pop pop pop push mov pop inc arpl ja mov aaa punpckhbw jle sahf in insl mov cmp xchg mov cs imul or sub add lcall lds mov out sub mov sub out or add or inc ja add mov stc add clc repnz dec cmc cmpb push cmp add dec fdivr add xor (bad) jne mov dec dec and fcmovnu mov call pop stc and jecxz arpl sbb sti fisttpll add mov loope fiaddl cltd rcl ret inc popf dec iret cmpl pop lcall or cmp (bad) in sbb sbb mov jbe iret add sub mov add cmpl cmpsl xchg loope loopne arpl lahf fcmovb xor or pop pop popa cmp add jbe and rcll add mov adc add or outsl dec sti add push ret pop mov jmp subl mov add (bad) xlat and enter pop inc add std mov push mov jmp push sbb jmp cmp pushf aad lcall mov aaa js mov mov xchg jbe add or lods xor std mov cltd pop add mov repz sti and and push outsl dec jns and add adc rolb stos xchg insb pop cltd int3 add inc and pop lcall sbbl in loopne cltd pusha jmp addl (bad) pushw mov cmp mov fucomi call les dec fwait add fsubl push (bad) add dec dec mov and or add jp enter daa xor sbb xchg add int3 imul (bad) es add in sbb cmp sti add dec cs jo daa push inc pop pop inc pand pop jnp pushf sub icebp push xor add int or pop mov ret mov in xor adc cld mov xor xchg mov int insb lods xlat and jl ret add inc data16 sahf cmp scas lods cltd ja pop xchg jg pop (bad) cmp xchg add (bad) aas inc add les lds add neg push add adc andl mull sbb jp test mov mov lcall sub js dec hlt (bad) jo cwtl fadds sbb loop das pop test cmp pusha lds sbb push add fcoms in or orl mov jmp inc push jno and add pop jg add shrb ljmp push xchg fdivrl call fs push mov data16 jb add add xor movsb mov dec test nopl xchg pop sub xchg imul add loope add cs test pop xlat (bad) sub bnd ltr das mov stc adc test inc pop cmp jo inc xchg out jae cmpl sub (bad) adc andl loope jge mov pushf dec xorl iret fidivr cs or into je add sub or add add loop popf cmpsl (bad) xchg cmp iret cmovp mov outsb in mov sub cmp ficoml xchg jg mov jb jp (bad) rcrl mov add fldl in daa aas push cmp dec ja add movsb nop or aaa cli mov jne jge add mov pop xchg inc push popa lods (bad) js xchg jnp add xor ret adc pop or or ss sbb sub add jns fcmovnu andl and inc push call mov ret mov pop cmp scas adc pop leave lods rolb mov dec movb mov push push pusha mov fnstenv pushf das inc shll adcb push add add and sahf jmp inc add stos pop pop dec mov pop aam outsb negl leave cmp mov incb repz push inc scas out lock add lret add les xchg fistl outsl xor add add lcall es ret dec or xchg (bad) xchg xor int3 or mov test jbe xchg in bound mov dec add fmulp fidivrl pop sbb mov (bad) or inc leave and testl push xchg dec hlt or test sub popf lock fwait add mov add movsb or push sub imulb sbb mov clc icebp push lock add popa xchg scas add push std aam inc mov aad pusha jae add testb xor sub jg stc inc jmp mov sbb push and cld pop lods push add mov imul sub js js mov (bad) push pop or or sbb push in js cmpsl repnz addl xchg leave add loope add nop push aaa mov mov push sarb or sbb or adcb rolb jae scas ja push ljmp push cs enter loop add addb scas leave push add jnp sub xchg in inc outsb push (bad) cmpsl add cs mov or aaa and lcall cwtl mov pop sub inc sbb (bad) and push andb sbb pop xchg outsb mov add sub adc add cmc inc movl pop mov add add push clc xchg (bad) adc (bad) adc test mov ds mov test add push jp cltd loope sub imul inc cmp jge push push push jg inc mov and (bad) push pop idivb inc rol test fmuls pop stos mov and sub jo mov xchg dec add call jb add mov adc xchg es push bound inc popf dec clc lahf push add sub add adc (bad) lods addb and lock jb push add roll push test inc test fcompl aas fldl pop jo mov pop loope sahf dec mov stos in in add inc lea push jl (bad) pop iret ret and add inc push dec push icebp xor mov hlt jno stos xor pushf loopne inc jnp cmp fistp and (bad) cmp add or or cmp add (bad) push pop aad or gs (bad) mov xor xor push push ret cld insl leave mov iret jmp out sbb aam notb push adc arpl lcall xchg mov xchg jl aaa stos xchg test xchg pop bound add lret add js cmp addr16 data16 pusha add aaa xor push jae cmpsb jne cld sbb fcomps test or orl push adc leave sarb mov stc jl xor xor jb dec jmp imul push clc or inc rorb sub jle add int jnp loope subb cmpsb mov loop jle or lods cmc loope (bad) testb sub xlat out mov bound add push add xor nop cli xor (bad) fcompl cmp mov daa sub sbb inc jbe lldt (bad) rcll lds sbb xchg fwait pop push jno shlb adc inc push mov bound fsubrs dec add imul es add (bad) icebp int3 aas bound add lea cs mov pop mov and inc ret add dec fisttpll imul lds clc mov pop lods addb les cmpsl cli mov inc data16 hlt das repnz add jne out cltd test scas incb inc pop icebp push inc (bad) add fsubs je add or loope pop je sbb mov repz xlat pop sub add pop add sbb setp jb repz push lea sbb jecxz xor inc pop loopne push add out arpl test mov adc outsb mov (bad) pusha add pop enter mov add jmp cmp addl cmp inc cmp out push outsl adc push jo pushl and dec fwait pushf adc ss jbe lods jl dec insl mov mov roll xor push xor movl xchg jnp je add fwait popa sub loop add es inc mov aaa mov es add imul add add fstps jmp jb add dec (bad) aaa xchg shll adc scas push sbb inc fistl mov shll lds pushl adc popa and pop and mov (bad) outsb add (bad) int dec xchg add adc repz push test pop xchg pusha jbe out scas fadds and pop dec add add je jle or sbb sub ds add lret adc inc add icebp adc sub sahf push add dec in iret mov add rclb mul push add add adc cwtl or dec add data16 sbb out sub sub ljmp add inc and add and inc insb ret cmp add adc (bad) (bad) fstpt mov sub out insb ret xchg testb and or imull sahf sub and or pusha aam ja shll add mov je pop sub (bad) jo adc inc and push addl fidivr jecxz in sbb adc (bad) pop push rcrl lock js jb fwait jbe andb loopne fidivr addr16 int3 andl repnz or movzbl add xchg add imul xor add add ljmp subb jns aad stc jb mov fisub and pop add or out mov xchg jns mov sbb mov push pop test dec cmp pop sub lea (bad) cmp jp xor inc adcl cmp mov xor mov dec sbb xchg mov lods sarb cltd out jns imull add loopne adc add ss jge cltd inc mov insl sbb push push fadds cmpsl (bad) jae jle add shr in sbb add mov pusha add cld add add dec lock sbbl push xor mov pop lahf loope scas push sbb mov or add xchg lret xchg add loop jge out inc cmp add jmp out mov pop xlat or sbb inc lods push ljmp lea mov add in jnp xchg push rcrb in loopne mov jne sbbl pop in and inc subl mov sbb (bad) testb pop ret fbld pop xchg push cmp jmp lods lahf add cmp push mov xchg lret push cmp sarb or (bad) ficom daa enter mov and mov lea leave outsl stc mov mov js mov pop int3 enter cmp push in out add bound sbb add mov add repz xchg in lock add or scas push add or clc nop dec scas add shl insb (bad) loope pushf cmp std clc xlat cmpl test jmp add leave mov mov rcll mov pusha cmp jge add ljmp push add mov lock pop xor add test mov mov add outsl (bad) lret and hlt inc jns add out jbe add ret jae mov and pop dec mov jg sbb jns and inc adc js repz sub lret repnz insb sarb pop jae gs or in push roll lret pushf and cmpl pop into xchg (bad) mov in push or xchg pop out inc dec cs sub add std lcall stos into pop idiv jae popf mov pop push out lahf repnz dec lea lods add jmp mov (bad) clc jno dec fcom mov pusha xor call cbtw addl add inc fild data16 adc subl loope sbb ret mov mov addr16 in orb and data16 insb (bad) out test inc and push insb add arpl mov push aad add xchg lahf mov pusha add mov jg push aas pop pop mov inc fs mov add sub call dec jl aas adc stc mov sbb je inc xchg jg xlat adc xchg ret push shrl add pushf call shlb pusha cs fstps or inc out dec data16 add xchg sahf push stc dec jecxz push es mov mov jl inc les test stos pop mov and push roll (bad) jl push orl push jl test jno in mov jg and xchg cmpsl add test push adcl ret clc lods cmp in sahf stos adc jne mov test cmp call jge in das sbb loope inc adc or adc call and arpl faddl mov loope roll sahf inc adc aas fiaddl es (bad) (bad) add inc mov enter inc inc mov or adc jo shrd push cld push fnsave imul jnp pop loopne mov pop fdivp xlat stc jbe cmp xor (bad) xor xchg or mov out jmp out mov mov out repz jge mov lock and push test mov mov pop hlt adc jg add mov adc pop add mov call mov push xchg cmp mov in fistpll popa (bad) pushf clc or inc mov lock xchg xor cmp add mov loope in add push push pop jle mov (bad) add inc arpl icebp jmp cwtl dec mov push jae call xchg mov jl outsl mov add pop cmp or leave ret lahf pusha test aam dec mov rolb xchg in or sub jns orl jl (bad) scas add sbb cld xchg leave sub aaa ficom (bad) xchg aas add mov out inc add mov jno mov das ljmp jno xor push imul arpl out jp add mov jae cmp inc inc out xor test scas data16 pop (bad) sbb add loop shrl iret add aaa int3 sub dec mov and or cmp pusha fnstsw iret mov jb add sti into push dec movsb icebp popf imul pop imul cmp sub (bad) xor pushf push add pusha out or sub iret pusha lock pop mov inc loope popf mov imul call push and pop dec lods (bad) and dec pop push add cmp cmp mov rolb sub pop imul add insl xchg mov cwtl pop push jne add add rol pop add dec mov leave inc shl add add in cmp test xor mov jl sbb jb xchg mov xlat fstps sbb lock jmp or cmp psrld mov test aas jle or inc mov sub and or add mov xchg test xor xor stos jne add ljmp je or push push aaa (bad) adc push ja lahf inc insb sti inc mov bound xorl fmul push rcll pop ret mov inc xor adc pop pop add fsub push add fidiv in out push xchg mov push push bound lret jmp xchg clc and pop xchg stos mov lods xor mov fmull lcall pop jge cmpsl test mov popf insl add cmp sbb sub int3 lcall shl cmp roll cltd pop cs adc ltr arpl out movsb cmp pop jae push (bad) xor inc rorb dec xlat mov je pop lcall dec sti dec push mov outsl mov push (bad) (bad) xor fimul scas xchg add pop jle add (bad) fdivl add pop jne pusha orb push sub mov push inc das loope push add cmp inc pop cwtl lods sub rolb lock sub test xchg and cmpsb jg loop out jl push pop push jmp ljmp in pop jo add inc std es add push cwtl and (bad) jno daa add addr16 faddl fisub loop outsb pusha (bad) pop sub fnstenv mov mul adc xchg pop mov or pop mov or mov insl push daa pop popa push add (bad) mov rolb add mov or push pushf inc push movsl icebp sahf and add je pop stos xchg gs add xor xchg sub jne sti mov insb lea sarb mov xor sub and xchg xor les in mov adc andl (bad) dec add (bad) add in lods dec add gs adc mov xor mov and fistl mov xor (bad) std pusha adc ss sub xchg mov ret test add cli dec addr16 adcb adc cmp add push lods jb jmp ret lea xchg mov mov cmp fildl add leave ja rcl add pop adc out into adc inc out xchg incb int or or xchg rolb mov mov mov arpl outsb dec sub mov (bad) leave cmp fimull jg lds int pop mov pop inc pusha pop adc fs mov insb popa add or pushf sub sbbl cmp dec push mov mov jb lret add mov dec sub mov mov pop cli xchg je add adc sbb mov sarl adc gs add mov mov jge push mov jmp icebp (bad) imul or or xchg das add pop mov popf ja inc mul test das stos mov stc add verr sbb mov sbb loope sub jne,pn inc sti mov xchg xchg loop add insb ds dec ljmp fsubl je cli cmp xlat add mov push popa add adcl add sbb pushf pop ja aad add push sbb pop push movsl and int pop call push cmc scas inc inc jns add push dec mov xor cmp pop push cmp pop xor mov add in ds add cwtl out add xor test dec inc mov sbbl stc test movsl mov (bad) jmp aam aaa bound out outsb jbe iret shlb add push cmp sub pop mov (bad) xor cmp gs add pop jmp add xor or or xor sbb loope sar add rcr jae add pop jle xlat jg lretw pop add enter (bad) and aas mov push add cmp mov jle jno insb fisttp push aaa or ds test pop (bad) mov push daa push cmp jle in je push pop mov incl sbb sub xor sbbb xchg push out push add in mov lcall (bad) repz sub xor inc lahf gs aaa add mov pop pop inc mov mov mov popa mov (bad) test lds dec inc add ja add jae or cwtl mov xorl add push (bad) daa std hlt pop inc and add xchg rorl xchg mov push lock call add pop dec sub jbe cmp mov aas add mov into sbb ljmp jnp add mov mov add test add sar add addr16 or in es xorb cli push int add adc dec shrb push lcall jl out sbb inc aaa jg sbb shll sbb scas sbb and pop fistl popf push ljmp ret add mov cmp add mov rorb cmp incl jae fiaddl xor dec insb rolb data16 aam dec sub cmpsl fcomps scas insb popl jl jo inc testl andl jne ret negb xor js mov pop cmpsb jl les (bad) mov sbb dec fild fistl mull sbb out add pop sbb loopne jns rcr in cmpsl fild and jbe jae add repnz adc sub sbb vpsllq cwtl xlat jb inc adc add mov imul add dec out fs cli cmpsl xchg ljmp inc add loopne or lods das add std ds nop push adc inc adcl or fwait dec pop mov mov mov (bad) popa add jbe (bad) add dec outsb lds stos std add xchg or fs push cmp sub ret divb arpl insb fstl adc mov add jg inc push stos xor lret or jo repz out das push xor pop ror cwtl loope push and mov out out cmc insl or fwait xor sub add push add sar lcall sbb add inc jbe frstor nop add dec add test xor fwait scas addr16 ljmp dec lret sub and push push rsqrtps repz xchg les add daa sub sub lock popa inc mov inc lods add mov std cmp add mov lcall pop test xchg sub sbb mov je adc hlt movsb xchg push mov cmpb add or cmc shll call ret sbb xor add jp jnp sub shrl mov mov enter jbe fadds outsb pusha loop js and jge mov out bound adc xor mov out pop rcrl nop add imul ficom inc testl and pop cmp sub pushf in push (bad) pop add ss add jmp scas push adc jle jge call scas adc pop fwait add shld lods ja sbb xor add test arpl dec cli sub test xor pop (bad) mov push jno flds dec scas xchg and sub out iret popa cmp xchg pushf adc fsubl lds pop or and inc push dec je lret add cwtl repz lods add mov inc pop loop in aas or out mov pushf subb adc add out lret lret loope movsb adc dec add pop int xchg inc pushf add dec mov xchg add mov mov push or (bad) cli mov cmp pop cmp add jmp jmp cltd jge stc cmpsl add pop inc sbb mov xchg jb add jl fs pop orb out jno out scas and xor cli fiaddl loopne xor mov dec push jne xchg (bad) mov call cli or loopne or cmp xchg mov icebp (bad) push cltd jnp xchg add or addl fldcw fnsave add (bad) mov cmpsl sbb add sbb flds (bad) xor imul adc add stc xchg add fdivrs add lock mov xor popl dec mov add sarl sub popf push pop inc mov test pop push mov shll movb into xchg repz sub or mov and add test cmp add negl aad jo das xor fisubr add test (bad) loopne movsl add add and faddl push mov push in mov push mov mov mov inc out xchg popl (bad) dec pop mov stc mov inc inc adc repz loope and jo mov adcl scas fdivl loopne push stc push push packuswb lock fildl and pusha inc testb hlt fidiv add in lret and add lock sub (bad) les out cmp (bad) lods mov std sbb popa add out js gs jl adc ret scas mov jmp jl add stos xchg addr16 inc mov pop adc adc movsb mov sahf add mov (bad) insl cmpl inc enter cli adc stc mov xor (bad) ja in add push add fs and lcall dec add fidivrl (bad) push repz add mov in xchg adc and imul cmp cmp add insb fdivs sub mov cwtl into std dec add add lret push stc lea pusha sbbb mov mov push jno cmp jge sub stos nop testl pop xsave mov pop and stos mov add repz jnp test push popf inc push popa mov ret add data16 nop (bad) lret mov add inc sub push inc test fdivl cwtl aad add and xor imul (bad) pop dec cmp fwait dec dec and inc roll scas sahf aas mov sub push cmp mov add xchg bswap shrl js inc and mov and jae add add or lods add outsl daa add negl add ja cmp sti jnp add fchs int3 xchg sub and pop ret in push dec cmpsb adc scas and out mov push into pop push sahf int inc aad loope cmp push mov add ret dec aam xor mov xlat fildll add push inc mov sahf add int3 sub std pop mov ja insb inc adc daa sbb xchg call push lret sbb popa xor add jb sbb dec js add dec sti push add fldl aaa and mov push xlat (bad) notl jns inc aas adc add jg push cwtl xlat pop inc sbb xchg cmp jo rsm cmp mov daa mov dec inc fmull mov add lods xchg por repz sub mov rolb jo les aad pop ficompl andl push cwtl rclb sub ret ljmp aad add push and push lds pop push daa mov clc xchg mov ljmp daa add ret mov mov mov aas out sbb jecxz inc test pop pusha loopne movsb xlat mov adc cmp add or sbb pop jne addl push jne add aad rcrb mov add jnp and pop pusha push (bad) insb and push adc mov and xor mov mov dec jl int3 mov (bad) or mov and xchg push (bad) inc mov or pusha or fwait mov jge andl jne jmp loope mov out stos xorb cmp jp fidivrl enter inc dec sub mov add sub mov push jns inc ljmp add out (bad) push push pop cmp sbb es mov (bad) scas testb repz (bad) incb xchg add add or mov rcll and inc paddsb int3 gs sbb test xchg ret addr16 add mov in add orl jmp (bad) fs ja adc xchg and mov add jo inc jmp jno pusha sub ljmp add or sahf inc fwait inc pop aad push add or cmp push test (bad) cli std dec pusha hlt cs adc out insl loope (bad) push xor or add sub ja add ds push cs jg inc out xchg sub sub incb test aas sbb (bad) mov push loopne lock aam imul loop pusha mov lods sbb or movsb jle iret hlt push mov shlb pop jnp add and stos gs add fwait scas int dec hlt jp popa les outsb arpl addl cmp cld add add sbb iret (bad) mov loop mov mov stos cmpb jb mov or addr16 daa cmc cmp fcomps push popl fisub mov js mov scas xor push mov lahf mov jb xchg (bad) ljmp ret cmp aad jecxz xor test jge inc ret loopne push int3 cmc xor add mov add aaa jns inc leave push icebp add mov stos push pop mov sub mov and int3 lret cmp cmc xor mov cmp jp pop inc pop (bad) in movsb int3 scas add lds or xchg push rcr pop push pop lods mov mov dec inc mov int3 int or push push mov pop arpl decl jnp add cmp adc add mov aaa repnz add push dec add call add inc push test popf test adc addr16 ss sahf dec jns cltd int3 sti in shll out movsb xor daa add (bad) adc mov jg add fucomp mov add popa push popl mov sbb xor adc callw push pop aas xchg add les add insb mov add mov fcompl mov sahf inc mov sub decl xchg (bad) add push mov into add sbb sub pop cmpb sahf in pusha push push ret push rcll out inc sbb jle std dec sub and icebp jnp inc jo xchg notb pusha sbb mov js loopne movsb or push add push (bad) aaa shrb lret xor ret pop jno movl sub or push mov stos cmpsb js (bad) jbe adcl xlat cmp add cs add mov testb jb ss ret pushf and stos jl lahf cld add add jne inc aaa xchg xchg push adc mov clc and cmp imul add mov (bad) xor loopne jne mov cmp jecxz cltd jmp pop cmp mov test (bad) mov add dec inc insl cmp pop add mov dec xchg push cltd adc in jnp ret adc dec notl (bad) aad xchg into add cmpsl mov adc dec in push add cmp mov rcr pop clc (bad) loopne aam mov adc adc and stos sarl pop stos inc lds cmc in adc insb sub mov cli lret mov or sar xor xlat call cmpl nop ljmp push mov fcmovnbe jmp decl inc xor push sub sub lea xchg out xor ror cltd mov cmp inc xchg lods mov inc add dec mov xor addr16 in cmc add cmp jge add mov sbb cs mov ror or add nop push cmp xchg cld aas mov dec ficomp add mov xchg in and add cltd mov push je imul inc xor adc inc xchg (bad) xor xlat cmp mov rolb add add sbb sbb pop in mulb mov inc movb inc aad mov das add sbb sub dec mov dec rolb pop pop or into add jo dec add mov cmpsb jg (bad) out add stos dec push inc dec add outsl inc xor xchg push push adc push cld and sbb adc fisttpl (bad) mov or ror pop daa xorl ficompl mov xchg pop cmpsl or aaa dec add out fldl inc mov pushf sbb cmp xchg mov psraw movsl repnz xor mov jno pop mov cmpsl add jmp jbe lahf fldl inc jp add inc or sahf xchg add repnz mov rolb ljmp ficoml out cmpsl add fsts subb pop pop xchg jno cmp xchg (bad) or adc dec push push mov add cmp add mov adc push add mov leave jecxz add jle add iret adc inc orl out add sub and mov add inc xchg pop add rcll mov mov push stos pop add in mov lahf js pusha loopne add and add imul and add push xchg lcall aam sub and mov mov mov rolb pop mov dec or adc cmp add out add clc inc mov aaa aas lods add jae in and pop add xchg (bad) hlt mov mov shrb (bad) sbb in mov lods xchg gs mov es add inc data16 fnstenv add push xchg lsl fwait cmp jns add mov mov add dec push adc dec add lods add repz cmp mov or popf mov scas sbbl xchg add xor loop cmc push stc add cli int xor xchg fmuls es add (bad) dec mov mov loop cs adc data16 iret je roll xor fisttpll loopne mov mov addr16 mov aaa das mov cwtd sbb jle lahf adc sub add mov sbb add jb test fmuls mov out pop lods ds cs pop adc adc repz or jecxz xor cmp js add loopne lret ret es add sub pop dec loop add (bad) and jb,pt testl mov movsl mov add int3 xchg test jge cs sahf add testb mov stos mov jbe (bad) xchg cmp push fisubrl dec sbb add xchg push mov add or jp in fwait add call inc jnp fcom sti inc mov test xchg cmp test aam out sbbl push rcrb movsb stos cmp push sub push jbe lea dec divl push sbbl adc lea aas adc dec leave rorb pop xchg adc icebp imul arpl jb push in int3 jle mov call mov mov loope das dec push insb imul mov lea call in mov mov push ret xchg decb fild pop out movsl stc mov cmpsw incb mov imul shrb add shll outsb and sub roll movb stos mov js mov lret in xchg add sahf cmp cmp add sub sub xchg nop cmovle shlb jg jmp cltd jno pop add xchg sub inc jo dec (bad) sbb call out out andl popf add fisub xor pop xchg pop add pop faddl insl add cli sbb nop movsb xorl aaa fcomi sub add push loopne rcrb and ret add int std inc add pop adc adc pop pop jo push js lods inc clc mov mov and xlat add mov int3 call inc pusha data16 pop mov rcrb cmp je out add lahf inc leave add fs (bad) ja cltd (bad) mov into sub xorb mov mov je adc pop flds dec ret adc fs hlt adc or ss add sub aad ljmp adc in mov ret adcb shrb test mov enter dec les es pop (bad) ja add and jecxz aaa (bad) xor jo inc pusha mov out nop add add lcall pop lahf sbb inc jg,pn mov cli add add and and mov push int pop orl push sub aaa sahf loop lcall inc frstor enter popa add cld lcall and jecxz push rcrb and pop push dec pop add mov push or sbb enter movsl (bad) lea push sbb or or icebp pusha cli outsl inc add pop xor add (bad) (bad) mov lret mov sub dec and sbb sub sbb push mov sbb aad add add push js add mov pushf push mov loop xor out (bad) rorb sub pop push mov add cwtl dec add repz ja pop sbb std das cli push aam xor lea (bad) xchg sahf arpl inc jp xlat test push add or and xadd mov insb or mov daa mov or pop and insb lahf xchg add mov imul daa mov lahf ret mov fild pop repnz mov (bad) add ret xchg push add pop jne or mov jno and outsl jmp loop int dec arpl loope inc mov push add xor fstpt cmp xchg and mov and push or and cld adcb xor push lcall cmpsl sub add jle sbb mov fiadd popf xlat cmp add loopne sbb sub (bad) out xor push xor dec dec pop test push sub sub add lea mov adcb pop cltd repnz push int3 add fcomi rcr push mov call stos pop adc pop rcll push sarl push inc popf jb xchg imul pop ds add and ja aas stos addl mov cmp sub nop roll (bad) jo dec rclb sbb das popl test xchg arpl pop sub repnz dec lods cli jp lahf mov inc ja aas cmpsl gs inc loopne test add adc sti add pop in xor sbb sbb cmp lea lods (bad) push jno,pt ficom (bad) (bad) jbe das subb adc jge insb push insl pop fiaddl cmp inc jns sub aaa mov lcall ret inc jecxz bound and lret xor add jns loope inc outsb cld aaa out mov and arpl fldl and sbb es lret add insb jne (bad) popf jmp xchg mov xchg cmp enter loop mov xchg xchg mov add cmp cmp add pusha add inc and outsl or jb adc add scas inc pop pushf mov inc stos or adc aam push dec call cwtl add add cmpsl mov gs mov push or add movsl sbb pop test xor jo in outsb add xor fcomps dec cmovle lahf lea push out movsb mov add ret add add stc add mov fcoml mov (bad) (bad) lcall cmp scas inc jnp sbb inc stc cmp lods pushf dec int3 jb jle (bad) std fistpll (bad) sbb scas (bad) sbb popf mov (bad) lret jle,pn jle fild jl add pop data16 jmp push pusha fisttpll add sbb jnp aad cmpsl in int out xlat sbbb dec sub repnz (bad) std sbb sti push adc rcr inc les fadds and aaa (bad) in loope push (bad) add aas (bad) je xchg mov sub inc fdivl add jmp popa jbe pop loop and add adc cmpsl mov ss xchg pop jo call mov xor add pop sbb mov add lock adc jb add pop in cli adc xlat mov aam pushf pop sub fidivl adc cs pop sub sbb int3 je ljmp incl jb push test add mov (bad) sub jae or addl mov jle add adc inc xchg popa jnp add lods xlat bound jl add ja xchg stos iret popa jp cmp movl add add cmpsb or adc mov jbe outsb sbb jns mov push add mov aam es mov sub push add jae or dec mov mov rorl push add mov popa or sbb mov jmp (bad) cli lea mov push nop mov cmp jo jle pop jno add andl test jnp pop sub jae mov pop push xlat lods sbb and xchg fildll or cmp lea add push loop stos pop add dec or es mov int jo fistl xchg (bad) add cs jle or dec inc push fild insb or in iret jmp jg add lods mov lahf frstor lods imul sub popf add dec scas repnz lea cmp pop xchg (bad) cmp jb sbb in les fs adc mov inc lret mov icebp dec adc rcrb lret cmp mov add inc sahf and loop stos icebp mulb daa jecxz and sbb adcl enter cmpsb jnp xor jo jge mov push add (bad) mov sub xor sbb mov aad or incb push fiaddl pop andl adc add mov rolb xchg jg mov xchg sbbl jb aad add jle repnz or adc pushf rolb in ss aas shr inc push icebp aad add cwtl out adc add mov mov add (bad) jb test dec les sbb aas sahf add aam lea cltd sbb jmp fdiv push add insb mov orb scas xchg xor add cli mov xorl push xor jne inc orb loopne frstor fmull data16 add js mov mov fisttpll dec cmp sti add aaa inc and outsl test add lds lahf add pop mov in sahf loopne sarb ds cmpsl (bad) pop sub into sbb mov mov dec (bad) sti mov pop add push sbb mov push lret add nop and addl cmp (bad) add clc sahf ret incl sbb jmp daa add dec mov jnp dec jnp leave jecxz,pn inc inc mov insb xlat mov sbb aas jo mov push xor cmp les xor push pop repnz xchg or hlt out pusha ret sbb inc mov scas mov movsl xchg es ds sub sub sahf add pop xor adcb xorb rorb mov lods fildl ljmp adc xchg jmp mov add (bad) call and add mov ljmp stos je int movsl add push xor daa mov insb gs test xchg ret roll das outsb or cmpsl ret sbb pop add shrb sub add inc adc out lahf jecxz inc enter mov mov push ja adc fdivp jbe data16 je add adc mov sbb sub hlt out repz ja sub iret fiaddl jmp add mov mov mov (bad) sahf push cmpl lcall add loop daa mov and dec add push inc mov fisubl or add lret pusha jmp aam mov test push popf cmc or popa lock jmp push or dec jns jne outsl das loopne outsb mov jp inc add repz in xchg out mov and push xchg call (bad) push mov pop stos or xchg jl push faddp repz (bad) je adc rclb jle sahf in out fildl or sub cwtl push loopne dec jns test in (bad) fidivr add mov add or shl or insb add pop mov testl mov xchg cmc jbe add pop sub mov and es leave mov int3 mov lods jle mov mov cmp or stc xchg outsl adc call in inc shll lret sub jne (bad) cmp andb iret aad lcall push addr16 cmp mov dec mov sbb in sbb stc push outsb scas jl ss ds fisttpll add pop and pop fmull adc add outsb mov fdivs add inc call add hlt lret dec mov test rcr sbb popf cmp inc xchg stos push mov sbb or shrl adcb shr scas jb nop subb popf xor das fstpl and pop ja add push ja ds (bad) (bad) xor add in dec adc rclb pusha and andl xchg add shll inc mov mov jmp pop xchg mov jns push lahf adc ret jecxz add les dec sbb imul fucomp hlt cmp fs pop outsb jbe jp sbb ds jl or bound xor push pop dec xchg ja xchg js test lock mov cmp addr16 sub sub push fistl mov inc sbbb (bad) mov ja and aad pop jg pop add fs ror inc loop dec push stos add xor ja jns inc sbb nop add pop mov pop outsl frstor pusha dec cmpsl outsb enter add inc push js xlat mov cmp (bad) mov cmp stc and enter fisub xchg jle outsb cld mov ja jae xchg inc jnp mov lahf ljmp scas or and scas sbb mov push sbb cmc add lret ret (bad) sbb popf addl cmpsb scas fwait test andl dec call leave iret and and sbb imul ja push mov sbb loope roll addr16 xchg mov or jle adc xchg or rolb out or (bad) sti add or mov loope inc aaa fidivl std cmpb out or addr16 lods outsl add fidiv loopne and add add cmp xor and call jo lret add outsl ja sub pusha jecxz (bad) add pop dec mov pop (bad) jno mov mov sahf repz sbb and xchg add js dec xchg sub inc (bad) cltd cli cmc movl jo in cmp mov hlt add scas or add sub jae shrl out jnp sbb hlt mov movsb out cmc add mov cmp add ret shlb pop inc jle add das and push inc add aad jle dec and dec xchg adc jne sbbl dec insb leave push push xorb js cmp rcrl xor pop test sub jle cld jg testl push xor out (bad) decb xchg jmp and pop sbbl add fmul pop movsl add cmc stc fimull jno push jns xchg lret xor inc in insl rolb inc push pusha cld enter add (bad) fsub test adc xchg daa mov fdivr sub stos mov test add add adc dec (bad) jae into pop (bad) movsl add push imul jl in cmc add push sbb and sbb sub popf imul bound les mov hlt test pop mov cs dec mov test dec jp inc xchg sarl gs xor fdivrs lds orl je pop inc add jmp inc (bad) out push mov inc stos mov addl add mov inc ret jnp das push mov aas mov xor add jl xor add popa int3 cmp lcall stc add inc out push or jns test jge shrb ret sbbb leave mov sbb dec sub add jbe jle ljmp lret cmp repnz dec add jge inc inc xor iret in fs ljmp adc shll aas int fiaddl movl mov test push xor iret mov mov in and stos into mov lds jge das pusha test xor jbe hlt jo sub insb daa pop aad add loopne inc adc mov mov data16 mov aad imul add inc std cmpsb cmp sub sub add ficoml movl mov xlat out cmp jno mov xchg jmp adc add int (bad) les push js cmp imul mov jge push cltd ja nop fsubl mov leave data16 insb push decb push add ds mov inc jo jb jle addl imul add push pop sbb add dec sub add lock cmp push sub ds push je jl fldlg2 insb je mov rclb icebp lods add sbb inc add sub sarl ror orl xchg adc repz cld int3 testl pop ret add xlat xor mov and xchg add testl mov adc xchg mov mov or test lret cltd dec cmc add cwtl push jle jnp std push mov cmpsb xchg insl js (bad) sarb subl lods cwtl cmp rorb aaa cli inc pusha loop loope xchg mov add arpl lods jb push xor popa test push cmc lods sarl add ja pop mov dec in push out movl insb movsl push loop outsb pushf adc xchg jl (bad) imul add push mov inc dec sahf les mov lods (bad) ljmp bound cmpsl sbbb inc outsb dec loop mov aas xor pop ljmp cli mov andl dec movsb insl adc push hlt in jle add jecxz imul sbb xchg (bad) arpl inc hlt adc mov add sub add pop xchg jnp (bad) xor adc or in cli mov addr16 pop cmp repnz lock daa adc aad mov pop mov pop push and lret or sub dec sbb xchg repz es cs mov sub lods mov (bad) sub pop mov xor scas dec dec jg add mov icebp fsubrs pushf adc mov adc out iret mov sub add maxps mov sbbl mov or sbbl xchg cmpb mov xchg in jo mov hlt movsl dec (bad) fdivs push sti xorl or mov cmp imul add sub lods add mov (bad) ja push xor clc dec hlt sub inc pause cltd stos push testl mov xchg das sub rclb fmul stos xor pop add pushf lods popa mov adc mov xchg add hlt mov fistp aam (bad) aad fldl jmp push add ficomp icebp sub add and sub lret inc test std mov pop xor jno adc pop jle add mov roll dec inc sti pop es mov add ljmpw push cmp rcl or sub and ror xchg pop dec je push andb rolb outsb js jg sub jb or xchg sub push sbb je jb add daa and jae test add movsb cmp adc orl jmp arpl xsaveopt push orb divl mov mov xchg mov cmp jno add in (bad) lahf add hlt jns cmp movsbl add mov mov pop mov test cmpsb cmp inc lods inc add (bad) add hlt mov orl cmp adc add pop and add hlt pop jo ficompl add pop mov (bad) push xchg add jp pop add addr16 jle std lods nop push xor or pop orl inc mov inc cmp in and mov push std je add mov mov jmp inc inc and cld adc mov fisttpll xor cmp adc add add inc mov je push call ss lcall add pusha mov mov aas add sub add gs or pop mov (bad) cmp outsb mov adc les xor add pop adc add (bad) push cmp pusha add cmc addb add adc out movups inc inc add xchg push add adc or data16 in add push sbb add enter cli add rorl lods mov scas sti mov dec in sbb dec shll xor mov push xlat sub cld hlt inc xor out and les aaa mov pop inc inc int3 adc mov test inc ljmp in add mov sbbb std rcll jp cld add or aam adc ficompl mov orb adc or inc adc lods flds jg (bad) in gs imulb mov sahf jge inc pop add fucomip loope dec roll push xor cmpl add or das sub roll sti jo cmp test add sub pushf notb push or pop cwtl clc in add add repnz cmpb fisubrl inc add aad push mov push add lahf inc je mov xchg add push sub jnp inc (bad) clc mov jmp jno inc pop jg arpl sbb cmc add pop jne or and fildll push dec add clc sar pop add comiss jmp or subb insb outsl sub push popa xorl repz add sarb pop mov es ja push add lcall xor inc pop pop movsb adc cmp lret les iret mov cwtl ja xchg xchg mov pop (bad) push cmpl sbb sub subl js pop add (bad) cli rsm insl pusha or sub (bad) jno aas inc add andl sahf cmp lahf out jmp ja dec (bad) int (bad) ss add cli fiaddl xchg cwtl cmp inc push xor fwait idivl dec add mov adc outsb lods add mov fild push cmp add push aaa sarb push popf movsl jg cmc cmp mov adc pop inc jge sbb sub cli call test push rcl push (bad) jb xchg add or lret cmp incb fcoms movaps (bad) shr jo jge add pushf loopne add push push lods add xor mov dec sub enter lock inc subb push int3 jae pusha and roll call mov xchg cmp scas (bad) dec pop fs mov cs mov pushf xchg add outsb or mov repz or add rorl mov orl mov stos xor pushf add pusha mov pop jno mov xlat jnp cmp incl (bad) in hlt cmpsl adc repnz lods jl and mov sub push mov out jle test jbe or stc call enter adc out scas pop jb (bad) fsubrl pop inc sub mov jbe add jmp inc xor mov icebp mov and cli push pop sub lahf sbb xor movups jne add (bad) cmp outsb cs in loope add movsl or outsl repnz add int jl xor xchg inc imul jecxz inc in hlt orb add loopne stos pop (bad) add imul hlt out sub jl pushf (bad) jecxz popf outsl sbb js inc mov leave add sub and jae rolb or mov imul add insl orl dec (bad) cmp xchg ret jns jb data16 shl mov call inc leave sbb inc outsl add xchg pushf add lods mov jns cmp jg stos jl and incl mov fcoml add jno,pt pusha adc lret mov mov imul roll cmp cmpsb incb add mov jb or nop stc push pop stos dec and mov mov add lods jp add js std xchg mov (bad) pusha nop xor jns xlat and lret jo (bad) dec mov sub add pop add mov and add xchg jg lods mov cmp arpl and inc (bad) add and push add mov dec out int xlat in daa lahf mov addl loope lods mov xorb or stc leave sbb je in test inc jb add iret out (bad) aad mov inc cmp fadds xor subb pusha xchg lcall lret sub pop pop sub jg test repz (bad) repnz cli sbb cmc dec aaa outsl xor mov add lret call das fbstp movsl add inc fsubrs pushf sub inc adc call sub add dec (bad) inc fadd scas mov fidiv inc inc sub or and pop into jne mov mov add cld jae push cwtl cli add dec (bad) push aam add push adc pop inc in adc jo dec xchg leave add ja or pop xchg sbb add mov mov cmpsl jno and mov les in loope scas js addr16 stc lahf xor mov jb sbb mov cltd add mov popa out leave add push nop lcall in jo pop mov sbb addb pop xchg push mov push int das dec and add stos mov xchg inc mov adc faddl adc and and add lds mov pop mov jmp aad fstpt fcom jae add cmp es xlat xchg mov lea inc push adc cmpl mov add lret push cmc add (bad) adc cmp sarb sub into sahf inc rolb call popa and add fbstp jmp add xchg xlat fcoml cmpsl cld xorl out js inc add push and inc adc add jo std xchg xchg jp adc out fidivr (bad) les cwtl test bndstx lret out xor int3 cmp jae mov sub mov dec ja add adc inc jp inc cld in je xor add mov sti dec cmp xor popf push arpl int3 lcall mov xchg fwait mov aad inc xchg fisubl mov cmpsl imul repz xchg js data16 fwait cmp sub mov mov clc test std mov mov test aad pop int3 out xchg push cmp add gs sub mov mov insb sub sbb push cmp ret mov and add lods (bad) scas enter (bad) lahf dec daa and rcrb dec inc loopne mov add movl jae mov movsl mov push add pop sub lods mull rcrb pop in fiadd jns push xor sub cli push inc ret jnp jg cmp cmp push fistpl push adc add mov ss adc push jp add in outsb mov xor sub and je in es add push mov add push cmpl cmp test sbb gs dec dec add sub idivb and mov or incl push or push mov push mov mov fsubrl (bad) in int stc pushf push fildl pop pushf cs lahf push push and push add (bad) cmp dec adc aaa mov mov push cmp int inc outsb ficomp and add clc cli push aam or add (bad) negl pusha sti repz jl pop pop sub xchg (bad) xor (bad) mov aas ret xchg push push (bad) fdivl cmp mov xchg lods pop stos and adc adc add add sub push jp jl test lcall xor imul mov test in add scas jmp sub pop in fcompl add subl in cmp roll jb sbb dec add movl mov orb mov aaa xor add jns lcall aas cmpsl out insl fcoms ljmp push loopne inc adcl sbb arpl xorl add xor ljmp popf mov or int3 jmp scas cmp add pop movb and mov subps xor jnp fcoml add (bad) xor cwtl add out cmpb jl mov adc pusha int3 pop ret sahf (bad) sbb inc pusha cld add std add and pusha xchg mov add loopne scas add or insb pop movsb repz jp xchg mov pop or cmp mov lock add imul movb dec or push fs xchg cmp cmp inc inc cmp xchg sbb lods inc cmp push bound test xor pop cmp adc pusha sbb jg cmpsb je jae xor mov loopne pop movsb enter insb lods add jmp shlb xor jle inc mov mov fisubrl mov xlat bswap mov add aam xor add and aaa addl ret cmp loop lret push mov cmpsl jle imul (bad) fisubl insb xor inc sbb mov out jle insl add adc jge clc add adc jbe ret and sub cmp out adc jno mov addr16 out scas in cmp add push cmp test rclb mov andl stos das pop test add jg add fist (bad) and sahf xor and (bad) sbb in add faddl pop adc xor xor dec or cmp add shrl push push arpl (bad) aam pop add inc (bad) push dec pusha nop loop add mov pop add std xchg xlat mov add push test or ficompl jb cmc xorl test pop (bad) stos cmpsl or daa loopne jl outsl jbe mov jmp push mov (bad) lret outsb cltd movsl add sub push add xchg xchg xchg pop xor cld sub pop scas xor pop stos test dec add ljmp lea insl add jb xchg xor fidivr addl xchg jnp add sub push mov sub xor adc (bad) fs pop cmc inc pop stos rolb sub out jne pop add xchg fisttp sahf mov dec cmp and cmp scas imul jno sub xchg xchg cli sbb push xchg dec pusha add cwtl fildl arpl push insl inc jno mov mov and push or (bad) jmp xchg fidivr mov int jbe push pusha jns lret xchg repnz and pop inc stos pop leave pop add dec nop xorl ljmp pop add xor mov sahf movl sbb mov add sahf xlat and or mov ret std jbe push push or pusha adcl xchg cmp mov add aam or ficom push add cmpsb in cltd das push mov mov xchg mov cli add stc mov out and adc (bad) push in lahf roll push sub fwait push add in xchg roll cwtl push fs jp mov fbld adc pop add adc fstenv push add notb hlt shrb push or push adc mov je pusha inc pop int add dec test notl loopne mov pusha mov push xchg inc stc push test test jmp das inc enter mov aad in inc test dec dec add xchg pop test ja fdiv outsb add in add fwait sub mov inc or cmpsl add test in mov mov aaa add movsl pop jbe fdivrl push pushw push mov inc cmc test push pusha sti frstor mov (bad) cltd mov cmp lahf jb repnz jl push xchg or std push dec cmovle add xchg sbb sahf and add sbb mov pusha movsb or sbb sbb push dec push add scas in mov outsb jae add sbb inc jns je add loop movsl add mov or imul stos fwait cmp pushf jns or or mov add movsl add cmp mov daa ja jb mov jae out (bad) mov mov or sbb (bad) cmp mov add sub fadd jecxz mov add mov add test push repz lret cmpsb fidivrl stos mov jnp sbb add imul out popf in jne mov push xchg dec pusha mov hlt and aam jnp add insl mov cmpl dec daa movsl or addb in mov movb mov outsb icebp sbbb mov xchg jns xor stc (bad) xor push xor add add jg fdivr cmp bound pop test cmp push mov sbb inc inc (bad) mov add dec mov clc es aas insb stos test cmp jns add xorl xor cwtl sub clc pop sbb mov xor jns cmpsb gs out fiadd popf fmull rcrl push add or and add and push jnp fldl push xor sub lds movsl jmp scas scas test cmp mov push jge stc add arpl in in xchg pusha ljmp push mov xchg cmp mov in aas mov clc add pop cmp inc add insb adc and pop cmp cwtl push sbb mov dec lods jp (bad) pusha arpl rcll adc (bad) or inc and daa std subb enter stos inc mov in add or mov dec std inc push int3 popf add xor inc inc jge imull dec xchg aas ds pop jle pop push xor bound pop sbb or jge jnp jl add sbb test inc or (bad) add push sbb (bad) int cs imul xchg add sub popl dec rcll cmpl dec xchg cmp incl gs jns inc mov fdivrl mov and dec adc addb in xchg xor into add push cmpsl pop cli mov mov inc jae lret lret xchg ja pop add cmp xchg call test mov pop dec andb jge hlt adc mov sbb fstps jbe lahf lret inc dec add es (bad) gs push lods sahf xor jns adc out repnz cpuid fisttpl ret mov arpl inc pop test add or inc sbb sbb (bad) add dec add mov dec das xchg and or inc add adc gs and xor das mov sbbb aad enter es dec aaa mov jle in push in push cmp pushf inc jne add cmpsl mov sbb sub sbb and pop pop mov push inc lea scas test or push inc sub fsubl ds je in dec jmp add cmp mov mov subb dec pusha dec and lock out sub je negl push (bad) add and push aas pop add and mov fmul mov cli pop dec movb push cld ljmp push cmp (bad) rolb inc pop sub xor jae popa aam std push cli fidiv xchg or cmpsb lret shlb in mov js mov mov lea fwait cmp pushf fidivr dec add mov mov cmp movsb add adc cmp xor (bad) testl jg mov push jno outsb mov popa pop push mov pusha in jmp mov aad shrb mov dec dec ss cmp cltd inc pop popf sahf inc outsb (bad) sti mov inc cmpsb mov push jl add xorl sub push push jge mov cmp dec imul push add gs (bad) pusha jle cmp fsub push push sub repz jns xor shrb mov aad (bad) xor xchg ja (bad) mov mul inc paddsw mov push js sub cmc and fsubr inc mov add dec push add sbb cli cmpsl out add daa pusha pop adc mov pop push dec jl loop pop scas mov push icebp pop fnsave add adc lea inc int jae jno mov jecxz js mov sbb pop xchg sbb out push mov nop icebp mov jne neg xchg push repz push inc insl push popf daa lods scas mov add mov jno cmpsb inc mov sub add dec lock rcl jp stos insb add cwtl and (bad) xor scas and add lahf addl movsb add std bound mov inc add jb sub mov mov mov cmpsb xchg or rcll jl inc push out pop je fiaddl push mov outsl and adcl adc das dec mov js sahf popa icebp sbb sub pop movsl cld push or fistpl leave subl adc fild popf mov xchg add (bad) push jns jge icebp in inc xchg xor inc enter das cmp cwtl stos push je fadds gs cmp add or int xchg push add imul in push dec xchg and and sahf fwait dec push popf fist imul sbb mov mov jp sub add (bad) lock out icebp adc pop int jo inc adc xor adc mov mov xorl sbb xor (bad) push pop pop pop jmp leave outsl lea xor lods scas test adc and scas jl add fcomps or sub ljmp popa jo xor pop inc repnz repz mov jle call fwait push enter ja aam (bad) jbe jecxz mov imul cld add mov lret or or add test xchg add add sub mov (bad) movsb aam lock cltd stc (bad) ficompl mov cmp sbb and int adc je push add addl inc hlt aas loope xchg fsubp mov sub aas inc add pop test or inc adc sbb cli lock dec lea mov jb std subl jp pop dec push and shrl jne xchg jno or and (bad) out cmp add add lret xchg xchg daa rcrb add decl push out dec andl insb push loop add sub mov cmp jle inc fmul xchg popf dec pop inc jg iret inc (bad) loop add push pop fldl mov in and js sbb outsl in lahf icebp pushf add stc imul aaa add pop leave xchg sub push (bad) std or pop push add and pop sahf add jo push xchg lea arpl or xor sti inc movsb sbb es add ss test pusha and ret cmp lock jo clc cs mov adcl out pop stos or inc or add sbb jns and bound popl adc mov dec movsl stos xchg fstpt jo mov lods add mov fwait rorl scas inc push inc (bad) cs jb pop (bad) in add dec adc sub test in sub push xchg cmp push lds fisub hlt mov daa les xor add mov repz popa xchg outsl adc pop sub imul mov (bad) jbe xchg pop add (bad) (bad) (bad) push daa lock ljmp xor push mov out in nop dec lods adc addr16 jle ljmp rol adcb lret outsb test xorl jbe xor mov incl or (bad) push jecxz add add mov inc or sahf call pop push hlt test and cmp ss jo (bad) xor rorb sub dec cwtl mov data16 inc mov add inc sti ja fwait add add mov xchg (bad) out in outsl mov out xor cmp out fnsave jmp pop jae rcl shll pop add fcmovnu in testb pop out pop jo int cs ja add out add xchg jb notl daa es movl xlat add fnop xchg xchg dec clc gs lcall sarb and hlt orb repz xor inc jbe xchg lock mov sarb add adc mov call add mov add pusha icebp xchg inc scas fdivs push or dec xchg mov jl xor arpl push push stos ja sub add insl out popa jnp lea add dec andl add (bad) jb in add jmp dec sbb es xchg inc pop jg add jnp imul repz or push loope pop pusha mov call inc pop rorl add pop mov xchg loopne add (bad) mov inc cltd pushf jmp push add xor lahf test sub add and add fstpt pop dec fiadd mov ficompl pop jle add or mov std push add in (bad) mov in add rolb vcvtsi2sdl sbb pusha mov fstps pop jbe inc cmp mov dec add push ret int3 cwtl mov ret xchg sbbb jnp psrlq icebp pop (bad) mov add lret pop lea lods cmp stc mov inc mov mov shll pushf stos das jne add (bad) leave cwtl xchg push mov push mov add out data16 sub fsubrs js sahf dec add movsb fsub jno xchg mov cs cmp add jno imul mov add rolb inc push lods add cmp addl fld mov pop scas sarl cwtl push add mov cmpl stos or push jmp aad push mov dec pusha dec push daa stos clc inc pcmpgtw in add addb stc xchg imul sysret pushf lea jbe adc dec and lret mov dec test cs repnz pop mov add inc sbb add movsl push scas clc inc movsb test cmp repnz popa mov aaa mov fcmovb add dec leave test insb lds add pop in mov aas test mov xlat add (bad) les aas into mov jg or std in xor pop test je xor notl jmp das lock adc cld add adc (bad) add sub jbe mov pusha movsb aas jecxz iret inc add dec cli add ret sbb into xchg adc flds add cs popl (bad) pusha test shrb test into ja ret addl rcrl movsl adc add xor lcall push outsl test add cmc sbb dec add sbb inc test add cmp add scas add movsl xchg mov mov mov mov jmp mov loope pop push fidivl sbb mov das or into inc or mov add nop jae lcall jnp scas std jo jmp lds add push mov or loop fldcw addb fwait jmp arpl adc jb push call sahf es arpl fstl cltd insb sub not add ds (bad) add jae cmpps adcl dec inc xchg xchg add dec sub ficom jg imul xchg jno and imul mov inc iret add ret mov lds push add jmp imul add roll cmp es pop aaa mov mov andl xchg pusha and xchg mov faddp or rcr (bad) fwait inc sbb out pushf movsl jne js test pusha add or sub add je pop mov add or pusha cmp mov mov test fs sahf pop test push test pop dec mov mov inc mov pop mov mov xchg mov dec xchg pop inc mov decl add push mov nop mov jle outsl push test fsts xchg lcall roll ja jnp gs add adc add xchg stc add or rorl add jl call out lea cmp in jg pop bound das gs xor mov add mov call insb test cmp imul sahf mov sti fnsave cli add pop mov sbb pop (bad) fidivl movsl jo add inc int mov aaa add jecxz orb add lret pop jae fxch and pushf rorl add imul push rcrb ror push cmp repnz sahf mov xor push lock into jle sub mov add (bad) int3 adc add cmp jb fisttp jmp mov das loopne lret sub aam mov fiadd jle ss ret (bad) (bad) cmp add jmp push add mov push dec dec cli fadd std add add xchg push stos push push notl mov push jl (bad) xorb lds jbe xor sbb fiaddl add das sbb add std xchg sub stc fldl push add fsubrp movsb lods jns mov sub jl das icebp sub ds add push stos movl mov pushf testl jb ret add in pop adcl mov xor decl mov outsb repz and rorb push add jge sbb sbb subl cmp (bad) xchg lea bndstx sub andb sub js adc push dec cmp inc xor addb xor lret adc (bad) aaa cli outsl addl jo or add testl cmp push inc lcall xchg cltd scas pop aad imul mov addr16 jne pop add mov push int3 repnz lods pop dec xchg add clc fs aaa (bad) loope push ljmp inc sbb xchg shr mov add into movsl lods mov or std ret imul add xor pop sbb or push insb popa and add nop add mov inc pop xlat arpl add ss dec mov push js mov ret mov xor mov add pop lock std cli pushf pop add dec jp call jmp add pop lcall pop loope insl xlat add ret jne add insl xor add pop je add sub inc lcall add or xor rcl or loope lock pop fstp inc adc (bad) iret test idivl xchg rcr inc icebp js add pop lahf adc mov int and cmp jbe lea mov jns jo out jo jecxz adc test movsw add jp and sti xlat addr16 cmp and aam aad dec jge inc lock push and test bound cmc dec (bad) jecxz dec sbb mov leave out xorl (bad) (bad) sti imul dec add add das add push aad std addr16 cs loop mov add in mov sbb adc dec fs les mov fmull or imul (bad) xchg inc or scas pop addl jne jbe leave xorl (bad) lahf mov jl mov imul mov add outsl repnz lcall mov rcr pushl pop add add fisubl add or repz ja in xor cmp dec xorl test testb pop adc out int jnp iret add push es jne pcmpeqb add cmp sub out jnp mov add jmp dec lds das add mov test xor insl mov add and ret std xor jmp mov sbbb push cmpb lahf sbb pop bound add cmp rcrl add xor dec stos cmp nop dec sbb fistpll mov cmpsb add cmp xor mov cmp jge mov sahf sbb push test mov roll lahf cmp add movsb in add jg sub imul and lods insb adc or xor lock icebp clc inc mov add dec fisubr leave ds and or (bad) fldl orl adc fdivl add add xchg cwtl jmp add fwait cmpsl (bad) push sub sub ret (bad) xlat and add dec sub add icebp xchg mov roll shrl xor dec add sbb call fbld cli fldcw push cmp xorl cmp decb and int cmp push adc lret jo pop jge jns push xor (bad) in add stc push pop (bad) ljmp pushf (bad) or xor inc push push lcall rol or (bad) repz mov dec insl pop adc sti xor fs jp jp add cmpsb jo add mov xor andb jb das pop add insb inc inc adc inc jbe add inc inc sarl push mov xchg adc mov fdiv and sbb arpl inc daa or pop mov cli addl jbe add loopne mov sbb xchg pop cmp je into xchg inc cs mov add (bad) push test mov mov cmp (bad) and mov pop push adc pusha jne mov sbb iret shlb shr dec aas push (bad) add mov add pop and mov add fs mov add cmp or aad xchg addr16 mov add mov (bad) movsl test pop sub les insl or incl mov clc jle pop add js inc add insl sbb (bad) arpl mov repnz out clc mov cwtl jae loope dec mov addl pop cmpb ret mov jl or andl iret jo add gs stos (bad) adc cmpsb sarl cld sbb or mov cmp lods push add pushf dec mov rclb sub sub push push jp dec jne adc and int3 add sbb cmp nop mov popa push adc scas out sub push roll fldenv (bad) sahf push scas jbe add popa and add sbb mov test push mov adc mov mov mov mov pop outsb add fildl jns dec lock pushw incl mov inc or cmp inc fwait push aaa jnp mov xchg and scas add mov ljmp hlt not or pop pop sbbl outsl repz mov adc mov push (bad) add out scas sbb inc push popf mov add cltd adc add mov adc add ss in es adc lret sbb loop mov je pop js (bad) hlt jnp repnz pop sub popa xchg mov cmp mov jbe xor jg mov and xor jle roll (bad) sbb fs jnp iret ret and mulb icebp mov out rorl xor in (bad) in mov jns cmp popa cltd sbb or fwait jecxz add cmp and push mov addb sub cs push jl push add mov add mov mov loopne in mov js mov sub loop and mov test lahf inc xchg inc push stc push popf cmp test push int lretw out sub xlat movb pop out stos xor push jno add pushf loope dec dec push add faddl push ret cmp xorl pop bnd jo pop mov int3 test and mov pop roll xor jge in lea pop stos cmpsl (bad) stos jle add lret pop je xchg sahf dec ret add call mov add cmp lret addl inc push rolb testb std nop pop fs repnz sarb inc pop loope push aaa js mov incl add lods out sbb lcall jb xchg mov jge dec lret xchg scas ret rcrl mov add cmp das or (bad) jnp cwtl neg sahf mov fxch dec es xor and adc or jo mov inc jp popf andl add or xor xchg insb push xor xchg cwtl out add inc and punpckhdq in add loop repz ss jmp sbb dec add cmp sbb in das cmpsb jl add (bad) insb mov or add jg pusha or pop leave mov aas insb mov pushf daa inc inc jae sub pop add jb sub jp add divb add lcall pop inc sar pusha add nop cmp ficom imul mov jmp jp cmc xor push pop inc add stc je movsl fidiv jae std mov pop sbb sbb aad aam iret add aaa out sarl add (bad) movhps (bad) rcrl ds jns add lock in fiadd lahf hlt loope fcomps idivl xor pop cmp pop mov outsb add push mov jmp shrb add and insl mov (bad) loope out les add push adc add scas pop jp pop cli push addl inc add in mov adc cmp fidivr rclb xchg mov out call aam pop in add add add cmpsb repz loope mov (bad) fcoms push shlb add push ja add repnz mov movsb pusha add enter push pop adc mov mov out pushf sub enter cmp xor lea add xchg jnp (bad) rolb test inc adc pop ss jmp addr16 (bad) mov cmc addl sahf cld push pusha test sbbb or or jbe adc jne and or add ja test movsb popf jns mov add or test test mov mov and pop push inc push adcl fdivp jl xchg int3 (bad) movsl inc mov rolb in jecxz enter popl je mov in sbb movsl xor add push data16 add jo fild sbb dec imul jae inc mov jmp adc mov xor insl jle adc or dec add mov shrb xchg jmp lods adc jno dec sub mov insl push push sbbb push gs repz xchg jo lock mov dec mov dec cmp das xor add enter and inc pop repnz or icebp and or xlat (bad) les jno call cmpsl ljmp jge jmp jg cmpsb xchg shrb jb out (bad) sbb lds mov js mov sbb lock insb sub dec pop adc jbe jg add sbb jbe inc and add cmpsl pop pop paddusb add movsb jb dec mov inc fbld arpl adcl push fwait cwtl cltd js testl and lcall repz jge out push sub pop mov xor add xchg xor cld add in pop jle jo pop or pop fldl ljmp mov jno pop sbb pushf cmp repnz sarl or jg adc xchg subl ljmp mov add in sbb roll or add mov xchg xorl fldcw add rcr mov (bad) pop loope cmp stos test rolb dec pop xchg leave xchg and dec js or and jecxz mov xor lods test add or dec in or mov clc mov hlt add cmpsb mov mov adcb pop adc add push adc jbe add inc push (bad) and mov ja add jmp fnstsw xor out sub adc pop testb sub cmp out jmp mov add hlt clc adc js add jae pop pusha leave sub mov cld inc test mov jo mov ja pop mov add rcrb out add jle push add notl sub inc pop cmp leave iret add add adc not movl stos sbb imul jb ja xorb mov add cmp add aas lcall sub add mov fistpl je test mov cld outsb sbbl imul pusha add incl xchg add xor xchg cmp xchg out mov lods jb xlat adcl push jge shrl adc jne add adc cmp cmc lret add mov pextrw movsb jp addr16 adc mov stos pop rorb add sub xor add add subb mov (bad) add leave std and or and into test adc rolb frstor or add js xor lret cmp add (bad) cmpsb add in and sarb lret sbb fnsave lock outsb push lods add push ds add aad or jnp addl mov gs mov lea xlat jo fadd inc add adcb push add movb daa es pusha cmc jae cld inc inc inc inc mov and insb add sbb call xor add (bad) in add or push fdivrs out inc andb and popa push jae jge mov mov adc clc testb fcoml mov sbb xchg movsl jg mov add push jle add insl adc push gs fsubrl out add mov xlat in adcl stc movb sbb jmp pushf dec inc sahf sub inc xor icebp bound mov inc data16 popf pop lcall cld (bad) out loop sbb xchg mov int clc les add jmp and pop repnz push adc jno inc mov dec and push pusha jb add cmp add mov mov bound jo shrl jae rolb and cwtl lods push lret js rcrb in out sbb push jmp add mov movb leave cli out lcall adc add mov das int lods mov fsts (bad) call loopne adc nop xchg or inc je mov pop dec mov iret mov add push adc test add and testl sub mov mov sbb sub ss ret arpl jbe nop add sub mov out std push (bad) add in xlat inc loope lods add push add ret shrb jl add decb push xor pusha out loopne add addl les or mov nop insb mov and jmp ret subl sub pop cmpb sbb out cmp mov icebp jg test loop jno bound sbb sub aam ret cmp push jp roll testl cmp adc (bad) cmp or add pop push data16 int3 popa add test popf mov (bad) lcall mov mov mov pop add sbb jmp fisttp enter add imul inc push xorb mov insl jbe inc add mov (bad) hlt add shll out std imul mov cmp lret xchg in leave dec cmp push xchg (bad) cli push aad mov rol push flds dec push and adc inc aam sub add jmp xor cld fdivrl and nop xlat mov push test or in xchg add test mov sub add mov bound adc pop lahf sub or movsl adc add mov inc jecxz dec pop jae fild scas enter sub xchg push aad out mov or stc add add mov pop cmp out inc inc into mov add cmpsb lods fyl2xp1 leave addl ret push in add sub pop add cmpsl imul les fist and (bad) pop cli addl adc jb cld or mov adc adc push sbb or push or test add scas sbb cmp imul std xchg (bad) xchg rolb subb mov test repnz (bad) sub lea in loopne pushf sti mov push jmp xor mov inc sti adc rolb inc out sbb enter add outsl pop mov scas mov or xor arpl and aam imul aas mov cmp or adc test add std mov jge add mov cwtl lea xchg pop push mov mov jge add sub fisttpll or test push sub or hlt cs or pop push (bad) rolb add inc cmp xor lret dec dec lahf nop add dec jg sbb lea mov mov sub push cmpsl popl fsts pop fcomp mov out loopne adc jno cs popf data16 mov push xor add lods js addr16 das test xor add cmp je fldcw sbb add and popa mov stos sub add outsb dec and add xor or add outsb sbb cmp out push inc movsb flds in jbe enter repz (bad) icebp push aaa mov mov xchg mov in add mov adc rorl scas dec test popa add stc push mov jge int3 add and pusha imul mov arpl add mov adc push test stc pop and sub (bad) es subl iret mov pop js push or add cmpsl dec clc aam movsb and push sub or lahf jl pop and xchg jns fild add mov rcrb mov pusha cmp in mov cmp push pop add xchg in add cli ljmp sbb push or add or inc sub add cmc fwait jl jo sub mov std incl movsl push jns mov stos jns xchg ss cmc fimull ja add push sbb sbb stos adc pop or jo insb test add adc adc cmp scas iret xchg adc push add sub jb scas jo add inc inc stos test push out stc cmpl ss jne xlat xchg add out icebp movsl js add (bad) xchg ss clc add or pop mov mov push pushw sbb or mov adc aad pop ret adc lret cmp jl test push add or shl nopl (bad) imul xchg add lods out fcoml mov add mov fild add xchg mov es imul movsb movsl and ret lock sub mov fadd push jnp add inc scas stc mov mov xchg hlt pushf add adc adc jmp rolb add dec (bad) (bad) mov xor aas fldt add mov add dec xor popf aaa aas mov inc or lret clc (bad) sbbl dec cmp lcall inc (bad) mov pop sahf xchg std add and jge add xchg in out lea pop add aam add in ljmp push mov ja,pt (bad) sbb outsl cmp add lods pop or fisttpll pushf inc lahf (bad) fdivrl adc insl lret add outsl fstl add test daa cmc mov mov cs test nop std sub aas pop bound xor call adc jge int3 sbb imul mov sahf dec in cld or jno lahf fstl cmpsl lods add aad add jle sti mov jae and je mov xchg loop rol mov out and ret jno roll push data16 push incl gs lret xchg movb imul or loop inc pop cmovb pushf mov rcrb (bad) iret push pusha pop jb ss popf ret xor fsubl or add jge jp fucom add cmp int (bad) add and imul cld pop add insl loope cmp sbb push movnti rolb add aam mov fildl in push call test int3 mov shlb ltr pop sub add push les pop ret aaa test sbb jl (bad) mov nop dec pop jno add rol jns test das lret imul ja mov and lods xchg cmpsl mov pop push sub testb test push adc mov insb pusha sbb sub lahf sbb pop pop sarl loope fcmove testb es lret pop xchg movsb add jnp aad jge mov add jmp loop and pop add xlat jae mov add ja fcomip arpl dec jb xlat bound cmpsl cmp push test xchg aas lds inc dec (bad) std pushf add insb cmovbe aaa sbb xor adc cmc dec jmp gs or sbb push call stos jo fidiv mov cmp icebp inc popa xor imul incl js and inc add sub std xchg cwtl mov aas int3 xor add loope mov lret add dec in sub mov push popa and in or dec pop dec jns add fmuls and jnp cmc movsl pusha cmp sub roll pop (bad) pusha js push sub push pop (bad) inc mov inc adcl xchg int jl pop add adc and add mov out add cmp mov out roll insl push addl push fisttp fcomi sbb jmp jo and mov pop pop xchg ficoml xchg adc mov add xchg stos or xchg ficoml add push pop sub add dec adc lods in mov sbb inc mov and dec inc loope aas jbe add cmp mulb orl cltd push mov mov xchg int shrl cmp dec into lret jne inc xor mov adc pop xchg cmp pop pop inc cmp add cltd xor add shlb faddl jns add xchg mov or les scas repz add out pop jle outsl mov adcb sti sbb xchg xchg (bad) icebp test adcb in (bad) jmp add mov pusha in sub mov sub xchg dec mov and mov xchg shlb das dec xchg adc inc faddl popa add xchg sub bnd lahf pop mov mov cltd roll mov rorb int jmp mov xor rcrl es ds fiadd lcall inc add sbb leave add insb mov ja cmpsb roll xchg outsb jle push or (bad) adc rcr mov pop jl dec hlt in add iret xchg repz mov es xor test sub xor sarb mov jg in jle push mov int3 mov test or adc cmp adc jg (bad) mov aam fdivl cltd out or mov mov or iret jo xchg jae sahf add cmpl sub cmp rcrb or jno pusha jmp imulb repnz insl mov mov mov ljmp and mov (bad) push incb (bad) arpl xchg pusha fiaddl test mov dec pop xor push xchg and aaa idivb inc sub das std add inc push fisubrl cmpsb add dec test add mov add pop daa lret add cwtl jg mov rcr sbbl das subl rcl aaa lahf ja add push sbb in rolb inc test jne icebp add xchg and xchg insb pop hlt es xchg (bad) jmp add loope and push push cmp sub lods mov adcl imul insb mov pop push adc in je rcrb les push test sbb inc gs cmp cmp mov xor push xor jg (bad) jno xor sbbb mov sbb pop out add add test xor ja hlt sub push jb pop ds jmp pop adc adc and inc (bad) js lret sbb lock add push sti jle xchg cmp or js fmulp stos js mov std pop lahf cld add imul sub cmp dec adc (bad) out push in jg (bad) and or sbb add push out outsl out add jns stos cmp loope jne xlat (bad) mov inc and jle adcl pushf out andb jbe push mov mov subb imul testl pushf test jo mov cwtl fmull ret xchg arpl jl lods fadds cmp pop (bad) in sbb mov pop orl push fs mov add arpl addr16 inc inc add mov sti inc data16 xchg js add das inc mov push sahf movsl call addr16 outsb xor pop jo shlb adc adc add mov adc cmc push stos pop pop sti out mov xchg inc push iret add fnsave dec fiadd cmpsl mov add mov lock inc sub addb je mov sub popf dec pop faddl xchg adc in imul pusha test xchg arpl jp mov testl or call or pop push popf test int sti pushf fdivrs jecxz mulb test adc das insl jb jl add add push adc xor lods add out dec sbb scas lcall add lret inc icebp push movsb dec sub add sbb jg mov call ret es mov cmp add lret pop or popa sub fs jo add pop mov je mov test int3 mov mov arpl xchg hlt jb mov add inc scas pop aas call daa das scas xorl std push mov add ret in adc pop adc ror adc lock aas or insb fist lea adc fs sbb push add or (bad) (bad) mov cld add pop add xor divl mov movsb mov repz lock xchg mov jnp mov cmp pop scas jb fldl call addl in add fs aad test test pop cmpsl cwtl add xchg out dec add inc mov addl add xchg popl push ljmp add and scas std lret dec cwtl add pop enter add (bad) les mov jae jmp cmp mov dec pusha mov out pushf mov mov add addr16 testb mov std cmpb cs clc add dec push xor aaa ja mov sub decb cltd (bad) out add mov fsubr jecxz or cltd dec add cmp mov test (bad) and sub pushl add fstps lea cs or mov (bad) and shll (bad) pop sarl push add jecxz add mov mov mov pusha push mov cld and call shrb sbb dec inc adc cmp int lret cmp push incl sti cmc nop (bad) add imul incb add mov and push out testb or push push or mov mov sub add xchg xor mov add cmp add fwait inc add mov insb jb rcr loop scas push dec sbb out push sub add les add cltd push mov insl nop inc shr movsl cmpsl addb mov mov dec movl loope pusha lret movsb mov xchg in adc repnz xor out or dec cltd push adc mov cli (bad) fs call in and and xor cltd popl pop sub or mov add (bad) cmp insb or int shrl add in xchg push xchg scas jo cmp push xchg sar adc add rorb cmpsl movsb jl out sub mov add push mov mov add sbb mov inc aas add test lahf adc jecxz adcl mov aam iret lock xor jle mov shlb xor test cltd cmp in stos ss dec add iret and ret and pushf add fnstcw xchg xchg cmc inc jbe mov sub cmp add je sbb orb and nop (bad) adc xlat add xor lds in les mov sbb push push cmc sub dec outsb sarl aas dec jmp test push out stc add cmp add pop jae jmp dec mov repnz add adc sbb mov lea mov and add cmp lret aad add lds mov xchg sahf cli jmp stos aas aaa xor or and rorl xchg repz insl add cmp enter out xchg push sbb and mov pop loopne and push mov add in sysexit test cmp inc and jmp add dec je lahf jp xchg gs pusha and adc mov xor lret inc cmp dec jle pop cltd sub push cmp insb mov xchg xchg roll ficom sti push mov int insb jmp xchg add xor pop add xchg dec add aam loope imul cs sbb xchg (bad) je pusha inc or ss xchg out fwait add das (bad) cmpsb or jb and mov (bad) push jb xchg add mov xor jbe fwait pop cmp xchg test scas mov cmp fimul inc outsl rol xor add pop pop bound xchg cmp cmp push leave popa sbb data16 dec add mov add pusha mov (bad) xchg test inc pop pop daa inc shrl add dec pop or cli cltd mov fildl push pop mov xor add lahf xor and add and mov or adc mov leave jae dec sbb mov out jbe sbb dec and aad jl mov shll into mov add push sbb add aam cmc add or and mov and (bad) std in jmp inc adcl pop mov push mov xor inc xchg xchg out lret andl aad inc enter add shll add mov dec xchg or xor lret pushf fucomp mov lods cmpl test fs push add bound in movb or xor dec outsb jge add test lea xchg add cmpsl imul enter or lock adc cmpsl movsl repnz mov gs and ja xchg pop mov jmp scas dec das sub dec movl jmp enter sbb mov mov out je pop cmp add out test shrl or mov enter insb cld push mov pop cmp or das pop mov subb push fs lods add sub ljmp movsl je sbbl or push inc dec cld ret pop pop add movsl dec xchg mov sub add pop push add xlat add sub add xlat jne add sub pop leave push cmp das add xor stc sti inc pop daa adc push push sbb fsubrp lahf leave dec mov pop dec test add mov ljmp leave pusha and js add (bad) ja aas add pushf lahf jg or add xor and in mov push fisubrl mov pop out push push inc sub jl rcrl mov push (bad) lods (bad) pop dec cmc addl xchg jg pusha sub jb bound (bad) cmc mov pop inc cwtl jl add pop xor dec xchg iret jle das cmpsb sub ret pop jecxz sub icebp fist scas add subl mov push mov mov inc inc orl jnp inc add movsl cs scas fstl int3 ret rorl pop stos jb lcall mov subb icebp cmpsl call add (bad) or (bad) and inc push adc jbe sbb stos push roll pop cmp and out cmp add pop in ret cld xor push (bad) xor xlat pop (bad) pop add push jl rolb xchg cmp add push int3 test mov xor pop pop xchg cmp clc xor out mov dec pop xor fwait add jmp xor daa inc sti sbb ljmp xor (bad) mov je add pop or add loope pop sahf testl xchg jno or push js bound cmp xlat jle push xor (bad) and mov mov out mov ss lods mul sub test iret cmp js add enter mov jno les add out cmc flds lock pop sti dec loope add repz lret mov es cmc add fidivrl orb fdiv mov insl add test pop mov mov lcall in repnz lds add sahf fcmovne mov jp pop inc mov scas call xchg jno pusha mov cwtl lret xchg mov cmp bound dec pop nopl hlt in xchg and push out sbbb loope add lods pop out clc in imul and rolb stos or inc inc mov xchg add int3 dec sbb jno mov (bad) sub inc fwait dec mov and scas jecxz add and fnstcw nop (bad) xlat sub xor or push and sti add mov int3 xorb dec and scas dec jle pop add push cmpsl into and xchg lcall push outsb in dec stc xorl int xor push mov test add (bad) inc xchg das loope or cmpsl or inc mov add ja dec setb add repnz out int3 pop dec mov mov jnp dec test inc fstl outsb sbb das push call mov pusha je mov adc jecxz pop sarl rcll mov cmpb add cmp cmp mov mulb mov add lea dec imull cmp lock add fs add cld (bad) jl and mov sbb (bad) int3 fadds outsb test insl jmp call xor and mov dec lcall dec inc xchg mov xchg loope sbb shrb add mov movsl scas add mov dec inc pop pop test movsb popf xchg add fmull pop dec mov lock and data16 sbb pushf aas mov in (bad) pop addr16 inc sbb js add inc pop add shr xchg xor add sbb push (bad) mov pusha idiv bound push lahf mov mov mov add hlt cmpsb inc inc leave mov sub repz add sub nop jg into push push jae cmc push daa add shl adc xchg push test xchg push add and shrl mov imul pop jg add js mov cmp pop xchg mov or test or pop and loopne bound add flds jnp lock aaa lret ret adc mov pop push add bound dec add sub sub jb add aaa mov and outsb or gs xchg insl imul xchg repnz add cmpsb out fwait or inc rcrl mov adc push inc in lds int3 ret frstor (bad) inc js scas add fwait push incl inc imul or mov stos aaa inc mov jp inc movsb lcall sub (bad) mov cmc (bad) push in mov add xor mov pop cmp pop in mov add sub dec adc sbbl inc jp and das add shrb roll cmp inc add and sbb cli and icebp jbe sahf lock xor inc jp ja adc lea test mov add bound sahf push mov cmovo fs add ficompl leave mov adc mov add jecxz sbbb fbld sti inc lods mov fistpl fs mov lea popf push leave add push sub roll (bad) jo loope (bad) aam int add mov mov xchg add jle dec cmp add loop mov add mov inc pop ror add dec cli aas adcl idivb adc jae ss or pop std ja jno xchg addb addr16 mov cmp xchg les mov mov iret adc push shll mov jl dec lock movsb ja (bad) mov inc pop cmpsb sub cmpb inc jo jnp push out and popa dec and mov stc clc pcmpeqb add adc push jl mov cmp add lods jg popa jmp add dec or stc mov add out cs aas pop cmp inc add dec lcall mov xchg lds mov gs pop add mov inc into dec mov js cmp or ret add xchg mov add adc stos aam and sahf xor xor dec mov imul push mov jecxz or in call inc push lock (bad) jg add mov data16 in jae inc fsubrl push adc mov mov add das repnz dec out adc jmp pushf popa xchg add xor pop gs add movsl push orl pop in cmp cli xor fcompl (bad) jne mov repz imul mov add (bad) sbb dec push jns mov clts add fild ret dec add adc shl sahf adcl int adc jmp movsl (bad) into mov mov adc sbb add inc insl out cmp pop call sbb add lcall std or mov jle mov dec inc ret xchg mov xorl inc roll (bad) mov adc je hlt repz dec in adc icebp add fnstsw mov lret pop jo int mov add push or cltd mov orb push and orb clc push dec or add sti call adc sbbl lahf loop nop inc lcall sbb add pop mov into test push xor lea add mov movsl xchg pop adc rolb mov sub adc add xchg and sbb fsubs xlat es jns mov out push aad jbe call ret add jno lock test push movsb mov lahf or pop cmp pusha mov xor mov out inc cmp sub dec add fsts jl out lret je outsl inc jo imul adc xchg add loopne inc jae enter sub adc insl sub cmpl mov adc mov outsl aam loopne (bad) dec jl inc dec add jmp lds cmp and jnp xchg add addr16 mov andl pop mov mov mov popl pusha and push test xchg push add aas in mov cmpb in das popa loope xor sbb fistpl stos push pushf lret subb sub add imul orl sub outsl push insl insb mov add sahf negb dec and xchg xchg or pop pop push mov pop adc jmp fnstcw jmp add dec mov int mov cmpb jmp sti call dec test test add inc outsb jne,pn pusha and mov paddd stc add adc shl popa lods adcl pop mov clc mov fldt add into xor enter adc gs je sarl and inc shrb pop cltd xor insl mov add in push pop fwait pop ltr mov push cmp push add inc das leave inc sbb cmp inc pop pop sub jg cmp jecxz jl inc scas sbb push (bad) sbb (bad) jo test hlt add dec das mov pop push outsl xor int lds add xor cmp inc test (bad) dec scas sbb int3 roll mov mov dec lcall dec dec push add loope and je ljmp sahf inc lret movq mov or sbb add mov inc add rol pop sub call mov sti insl cmp cs out inc fucom ret push imul mov sarb add jmp xchg (bad) adc sub cwtl sub ss outsb sub inc test push pop cwtl xor js add pop test sar loop pop xchg cmp push iret sbb xor mov hlt cmp pop mov sahf rorb push fdivs pop pop imull andb add andl add mov jb idivl xchg pop mov scas aaa movb insb mov rolb int3 mov repz mov aaa add or and sbb div jl sbbl mov cmpsb jno inc je xchg jl dec lret in aam dec dec in or add jg popf mov or imul jbe jne dec sbb (bad) push jmp in cmp (bad) adc out aad cmp dec push adc sub mov cmp jae inc add dec fs movsb cld decl mov jbe xchg or sbb sbb lahf out push add rcll (bad) faddl mov add (bad) ss pop adc add cltd and movl lock mov jmp cmp lea and lret cmpsl jl push les lods ds sub inc mov std push aas jmp mov mov mov add lahf dec fsubs mov add sbb sbb add xor stos sub dec mov pusha xchg add xorl fnstsw xchg jp iret ds pop insl in add daa pop add data16 add repnz andl inc call popf inc lahf push arpl add xor mov xchg lods add mov jge das test les pop xchg ljmp clc mov jl es mov sub inc add aam dec leave mov fisubr lods in and ds pop add je mov jmp stos adc mov bound js sbbl scas outsb inc xor sub push lods add aam fld decb jl inc and or xchg push inc mov loopne jno add jo aaa rcr mov mov fldcw xor mov jecxz das and add inc lahf xor int pop push iret push push pop clc insl fldl inc cmp ret sub xor dec in pop push adc sbb dec add adc in cmpsb into leave push por (bad) loopne push stos and cs xchg adc popf sbb or in mov outsb ret pop add stos mov aad arpl push ds cs nop xchg jo sbb add mov stc add rcl mov adc sub (bad) in sub dec push jmp pcmpgtd add dec add idivb add stos adc adc and (bad) pop dec lret add inc ret mov repnz or dec movsl mov add pusha rclb add add xor in or add outsb ljmp push xchg add imul lds mov add cmp add ja mov imul cs xlat add cltd sbb mov aam lea jns pop sub imul mov int mov iret lahf adc jmp sbb roll andb daa jl jne aad mov mov out jo mov je jl mov iret popl mov (bad) aaa inc xchg push add jmp pushf sbb into fwait cli and pop add aad out jmp fimul ret les in inc movb repz clc popa add int3 rcrl sub sti fnstenv orb fisubl addr16 popa push dec cmpl jp lock mov add push or in subb sub sti xor pop add mov test cmp ljmp mov adc dec add xor fildll out (bad) hlt add dec adc pop sub cmp aad (bad) pop enter push cltd ja bound popa pop fidivr les scas push stos ss jmp imul je repnz sbb sbbl cltd add pop jbe fnop add movsb dec cmp xchg adc sbb dec xor jns cli add mov cmp das add int dec sbbb fisubr ds fwait xchg mov dec add jecxz xlat cs xchg add sbb xor cmpsb scas add (bad) xchg int (bad) aam push push or call add loop push out push popf add push xchg and mov add mov add out loope (bad) pop add push fstps push or push lock stos pop push push fmull iret and jnp jge sahf mov xor stc xor pop roll movsl cltd fbstp das adc xchg mov ds jp add dec fcmovnb push xchg mov outsl and rcl mov xchg cmc lahf xchg xchg xor clc pop mov js mov sbb mov or insl add jbe push mov jmp dec nop roll pushf in or mov js roll xchg popf mov mov test dec lds fwait and loope push xor push pusha dec es imul mov inc imull pop add mov repz aad rolb test push jl mov inc fstp push push iret and cmpsb push sub cli enter rorl fwait aaa pop jo movsl cld add sub stc xorl std (bad) push cmp mov xchg fwait add ja insb mov inc roll rorb jbe add xor das add mov lcall mov xorl and jmp cmpsl inc fiadd movsl xor hlt xchg std loopne cmp fildll inc jmp das jae add pop ds add xchg orl mov andl jne addl xlat repz mov bound pop sti xchg mov jle popl cwtl jns ss xchg int add int3 push cmc stc das or push mov push outsl mov and dec add jp inc add out cmpsl xor lahf pusha add lcall sbb rolb imul pop add fsubl das sbb orl gs hlt pop scas inc jne jo mov insb pop jae or jns mov pop test out rcll and adc ds mov popa adcl pop cmp or jo inc push mov dec add fs xchg (bad) clc dec cld push repz add pop (bad) push add arpl sub add fwait jg,pn cmp adc add outsl sbb add mov loop invd aas jae mov fucomp dec push add and sub sub xchg or (bad) mov mov test jb lock leave fnstsw pop bound dec jno ret and insl add pop dec jg rcrb pop (bad) mov fildl sbb sub es jg or test add add jmp push add mov mov add sbb adc out sbbl mov ljmp out jl xorl lcall hlt push or push in pop push cmpsb int add push cld or xchg mov mov cmpsb fist xchg sahf xchg pop bound push cli addr16 insb mov lret xchg sbb pop and jno xchg adc lea fiaddl sub dec int3 outsb and sbb loop int mov sbbb outsb insl jbe push nop push mov (bad) mov jmp iret insl mov sbb push (bad) scas rcll add (bad) aad add pop out push andl divb mov js scas add mov dec adc movl ret add (bad) cmp incb xchg add test (bad) add out leave fs testb push sbb cwtl (bad) fcoms xor dec push jl add push stc xor add or cmpl rclb shrb aaa and cmc in popf pop jae cmp xchg into stos sahf inc incb adc mov jb add cwtl loope add push and push daa scas mov inc outsb cltd push mov cli sti sbb xor adcl push iret add pop out cmp mov adc fsubl out int3 inc inc add sar loop adc lea pusha dec mov das dec (bad) shlb jecxz dec and mov xchg aam sub mov add (bad) mov dec or push xor cmp scas sub cld dec pop push es cmpb mov adc nop xchg jl lcall push loope xorb adc sub add into jge dec ss testb repnz jmp lods shrb push lds cltd sbb lret sub sbb mov adc and cmp jle or testb xchg add pop mov scas inc pusha mov or idivb xor add and and lods mov inc ret ret loop cmpsb outsl pop jne push mov inc daa stc add xor sub pushf sub ret ficompl mov push and add adc xchg add js dec stos sbb add icebp pop inc cmp mov and fisubr add cwtl dec mov add fcoms mov inc xchg mov int cmp jge clc in add idivl pop addb cld lock fs call mov add add std ret mov clc adc aas cmpl xor subl leave jle or dec popa sbb sbb mov jb gs lea push dec xorl jns sbbb jg pop mov test icebp data16 jg cmp jae pop jl js repz sub mov and push push or add push in fbstp pop in xor fimul gs xorl sub inc jge xor aas loope jmp xchg sub nop add pusha pop test mov jg punpckhdq mov cs flds imul sti adc ss int3 fimul ja stc push add (bad) cmp dec mov cmp add call push cmp add push mov leave sahf jae add cwtl dec mov and add xchg pop add adc pop sub xchg sub xor add imul sbb insl add cmp lret sahf mov addr16 dec pop add sysenter fimull cmp mov cs (bad) jg sti push inc dec push lock (bad) adc mov adc mov jl addl dec add adc and jbe push ret jle push cmp movsb (bad) roll clc repz add sub addl insl pusha out inc dec add mov cli fdiv jb lret js add les xor dec ds int add cmpl cld inc cs repnz in jo add les cld loopne scas movb addb fadd int3 cmpsb mov inc mov sbb (bad) jo cmpl inc aam (bad) dec add andl out stos popa mov add xor out (bad) ds pop mov add (bad) mov das cmp repnz movb or add jne es fbld or push js or pop xor test cmp push insb push cwtl add pop mov add in (bad) lret add adc mov ret push movsl dec adc lea fstpt outsl data16 mov add sbb add loop jae pop das addr16 or int xchg mov aaa pop stos sbb pop in cmc jns roll jo xor inc enter cmp rorb add mov mov adcl daa pusha out pop mov pop xchg cmpsl orb or adc sub incl rcl inc iret add xor sbb jo fcoms pop jne ret adc clc sti jecxz push add add push or pop and mov xor mov mov ljmp push add cmp and jmp movsb add pop xor add add in bound mov inc movsb push add idivl repz fisub popa pop movd flds xchg xor mov adc inc xor jmp mov pop add pushf mov xchg jg add add out jmp add repnz add push idiv adc int ror negb xlat mov fisttp add mov jmp mov add sub inc testl push aad sbbl dec inc xchg inc adc and inc lods (bad) cli adc inc andb sub xchg jo aas scas and mov hlt push jg xchg and inc or insb popa sbb inc xor adc adc dec add aaa movb inc adc inc xchg (bad) sbb mov jecxz dec add pop call lods mov cmc adc pusha dec push mov sub cmp jne push adc jbe addl xor lds lret movsl xchg test push add jnp sti inc je jmp xchg sahf insb jl sub inc sub scas sbb ja std (bad) notl cmp mov jo xor popa stos inc jge pop pusha cs movsb add lret and xchg push (bad) outsb add push adc mov cwtl cmp add enter shll add xchg dec cmp and in aad loop lea add and imul loopne dec push mov lret cmp mov bound push out lock xchg push clc add fistpll incl xor loope je ljmp es sbb popf fdivl test test add cmp pushf testl std sbb xchg add mov ret stc add inc movsb insl sbb add xor pop add mov xchg add mov add lret or dec aam stos (bad) out js sbb imul lea cs sub pop je fwait or push pusha pop stos dec iret mov add sub rolb xlat (bad) mov insb add add daa or out adc mov dec cmp jb push incb jg pop cmc xor pop adcl outsb or add std push sti add cltd jb sbb add cmp pop sub jge xchg rclb fs add or je mov cmpsl int3 nop insb out cmp mov xor scas inc pushl inc andb cmp xor stc push scas mov and xchg int mov jle dec insb add repz xchg ja stos dec add cs inc sbb popf test and inc mov mov add pop cmp (bad) mov jmp jl inc add fisubl sub psubusw and add dec es add pop cmpsb cvttps2pi adc out nop sub or dec ficompl sub jl cltd pop mov aad negb push xor mov in sub xor nop cmp je (bad) repnz mov icebp mov or ret data16 gs jns add pop cltd or pop cmp std cmpsb shrb (bad) idivb xchg push cwtl and mov arpl (bad) (bad) dec jb add jp inc int3 inc sbb gs cmovs movsl imul lds outsl js sub bound mov lcall dec xor mov ss gs add (bad) int3 inc lods xor cs or dec neg inc xor dec xchg pop push les jne cmpsl add sbb imul push add sub lods popa jecxz ja nop add xchg flds and je pop add pop add mov push sub out sbbb insb inc jne call add sbb jp movsb rorl mov daa add (bad) mov dec sbb ljmp outsl inc jg sub add dec push out ss js xor cmpsl lahf add add jl jge mov clc sahf dec mov jbe push add (bad) mov xor pop mov fldcw jb out cmp pop add (bad) sub add inc jb or add loopne xchg jl add enter cwtl cmp bound stos xor in and aaa bound jmp add dec inc push stos xchg and add test add cmp out jp add xor int3 add cs mov mov (bad) cmpsb pop pushf mov and pop add cmp sub lods inc dec sub add add movsl mov test inc pusha sub dec scas lahf bnd and cmp add jecxz sub jp orb jne test insb out xor out xlat das dec xchg mov sub push insb xchg mov das roll and dec inc pushf sbb pop or ret xorl (bad) mov out push aad ds insb cmp pushf push xor xor pop add cmc xorl ret sbb adc jns push ja and js pusha add sahf sbbl pop shrl movsb add je inc or and lds add int data16 or add add arpl adc out sahf int (bad) mov notl sbb or add aaa bound jno je push jp add lret in mov mov leave push xor repz and add add sub es add add mov lret (bad) adc test mov pop pop aas dec add ljmp mov sarb adc xchg loop cmpsl or ficomp pop incl and pop jp lods stos add adc out data16 lea lock int or mov aad in sub lods cmpsl stos jg push pop sahf add out cmp push sub and bound jmp pushf inc rolb mov daa mov aas dec add mov xchg xlat int3 pusha sbb mov sub add jbe es push push rcr shrl dec adc adcb mulb ret lock pop and add jne add inc (bad) jmp scas js or fs mov cmpsl add cli out adcb std pop mov add or arpl pop mov add mov sbb pusha inc jle add test rcrl lds ja mov pop mov add add bound mov mov push test loop inc cmovge pop mov mov add dec adc add inc mov shll loope stos sbb outsl or test pop dec fimul cld repz (bad) or das lock movlps (bad) inc add push loop leave xor add (bad) jae cmc pop fs jno jnp inc in dec add lea jo in icebp sub lcall xor pop cs cmpsb les (bad) and (bad) rdrand sbb inc aad xchg pop leave jo bound push out xchg mov (bad) jo fdivr lcall loope sbb pusha jp (bad) les mov add pop in subl dec cmp test es sbb dec and int3 movsl sub add fsubl mov sbb jge xchg add es xor inc push add loop nop in jns add ss mov jae pop loopne addr16 stos test fwait jle add jae lds movsb jg lret xchg xor mov lahf test pusha inc lret rdpmc add pop out imull xchg cltd in push pop or sahf sub pushf add ror add mov in push push dec lods testl cmp mov adcl test cmp movsb pop pop xchg repnz add in sbb add dec jmp adc fistp and add xor xchg jnp test outsl js add xchg mov inc (bad) rclb lock xchg mov push shll loope hlt pop mov jns add pop or xor in scas gs dec adc jmp add mov arpl ss js xchg or cmp bound add into enter jae sahf lret insl lret push addr16 (bad) cmp push cmp lret (bad) fsubrl (bad) add insl (bad) fwait shrl mov in mov (bad) push add dec sbb pop mov test lea inc dec (bad) fcmovbe divb into movsl jnp addl pop mov xchg add push or fnstenv cmp fdivrp cmpsb test push sarl aaa aas inc data16 out (bad) jg add or add xor push push insb jcxz push aas pusha clc mov jp pop push xchg and xor add lods imul dec xor sar mov fisttpll pop cli adcl insb (bad) enter jecxz pop sti mov adc add sahf mov add sub stos push xor iret xor pop jecxz add (bad) into add xchg add inc xchg jg or add mov pop dec xchg cmpl int daa add add mov mov call push stos cld jnp pop sub xchg sarb push rcrl andb push test mulb jae (bad) mov jle in add cmpl add xor cmpsl mov stos jp lods aaa insl xlat pushw sbb xchg push aas loopne lea xchg stos bound mov daa loope inc (bad) sub and shrb pop fcmovb xchg fs sub test pop push popf mov sub dec mov mov add test add stc mov mov adc scas roll mov sbb stc fldl dec push mov add lock inc leave scas subl fs stos js loop aad jmp lahf add insb mov mov adc add ja mov in hlt outsb mov lods pop loop lret inc add in and clc pop sub int and mov pusha mov pushf lods pop sub test fsubl or add push add insb neg xchg add mov mov add (bad) jbe pop adc add call icebp ss cli mov sbb dec mov adc add rol pop in aas jmp mov mov pop sbb fsub incl cmp fs mov xchg cmpsl adc xor mov push cmpsb jno das pop add in mov arpl adc sbb mov lods cmpsb scas push nop inc pop add push gs hlt cld xchg lret push (bad) movsl ret arpl or test fadd incb pop mov (bad) xchg adc xchg jle pop stos push ja cmc dec enter sub jnp add in or pop call ret leave lods jp add lock (bad) popa jb pop and cmp (bad) mov xor ja sub lds aaa and (bad) xor add hlt lahf sub das add movsb jmp add dec mov mov outsb jne jbe cmpsb lret inc cmp or add call out sub ret rcrl (bad) div sarl lds fnop stos loope fsubr mov xor add mov inc jl add sbb rcl pop adc in push daa ljmp outsb mov imul cmc jle clc js mov add mov mov jno popf das loop add push mov movsl or (bad) fsubrl push mov add inc stos jle (bad) fist clc dec inc inc add gs std nop add jg mov movb add mov cmp jmp pusha push scas rcrb and jg test leave dec jmp subb in out mov add das in fwait xchg scas adc int mov stos out dec sarl add out sub lret pop mov jle push cmpb add push loop pop pusha popa sub enter push mov sub add xlat es addb js sub mov mov addb mov jp mov push fildl push loope add bswap dec inc jbe bound mov mov push lods addl mov (bad) cmp fsubs (bad) loop fiadd dec in pop inc jbe sbb pop add loopne sub mov arpl xor pop xchg sbbl out sub sub outsl popa adc pop xchg dec dec rcll adc pop mov inc xor adc shrb test mov inc insb popa std cmp (bad) adc imul sub add rcrl xchg clc dec mov ja inc mov (bad) mov add push icebp cmp (bad) xor add mov pusha inc lods setge enter dec call cmp add movsl add or jmp fs add idiv mov inc jge (bad) cs shrb pop aam sbb ljmp movlps shlb sub jb xor sub in adcb mov repnz cmp jl xchg xchg mov jbe adc mov push lret movsl sub add jae push rcrb pop xor fcoms adc lea stos (bad) movsb sub sbb data16 add mov mov cld add cli cltd imul sarb lcall xchg cmc subl lods scas cmpsb jae add sbb push dec outsb fwait xor jg repz push rorl xchg ds cli fwait add fidiv aam lcall jle sbb jne jg xor mov adc jno addl add insl pop test aas and xor stos push inc cmc push roll or pusha mov or (bad) dec sbb jae mov jg inc popl out and inc mov rol sahf mov inc mov inc push scas loopne cwtl jb push add pop pop mov add xorb push sub cld cmp mov lods call add lahf mov jmp jne add xchg xchg les js add sti nop pop dec add rolb mov cld outsb loop jl lahf push ret out sbb xchg cmp or pop push ret xchg jns (bad) fldt pop fisub inc jo pop add xor xor jbe pop add mov outsb shll push lret cmpsl outsl mov xor mov push scas add std out cmp and add mov pusha inc popa flds outsb mov jae add or mov push xor out inc or cmp push mull cs jg aaa add fiadd test in in (bad) add push loope add push xchg insl out aaa mov rorl test xor std xchg das mov pop sbbl xor lods sti jo cmpb leave sbb sbb cmp int adc into fcmovbe and scas adc jno add (bad) out sub popf xor ss (bad) push push sub xchg fisttp (bad) xor jns add inc cmc loope inc and add lret push add rcl insl push mov add aad jns mov clc std and push push mov push pop iret mov inc jno add les push pushf jecxz add (bad) xor pop inc add push cmpsb or dec mov xchg xchg jb lods add lods cmc sbb stc xor cmpl adc push jmp cli movsb cmpsb xorl insb push cmp mov dec dec pop add push pop lea and and addr16 fbld add rcll lahf fs imul ds int3 les inc xor add push cmpsl push mov push aaa hlt adc (bad) xlat add push cld scas sbb mov in into push add and push mov cmc les iret cmpl das xor lods inc enter pop jmp roll push (bad) adc jp jno push idivl add pushl call dec out sub mov and fcoml push xchg add sbb push add fwait cmp lret xor sub mov daa mov sub imul xor cmc iret pop (bad) je xchg dec xchg fsubl fbstp jmp jae (bad) (bad) (bad) lods fnstsw out sub test popf sar add js xchg push adcl mov mov mov sub add jp (bad) cmp inc cmp out add in std mov mov mov mov test add (bad) scas les lock push mov pop or cmc test and fstpt aas loopne lcall add or mov ds sub or mov pop loopne cmp sbb xchg mov (bad) repnz sbbl nop stos adc movsb mov add imul clc fwait mov lcall nop neg mov rcrb pop pop cmpb mov jle xchg xchg icebp add sub out xchg sbbb add mov ret jmp shll sub cli jp out dec add (bad) mov add mov pushf add dec aad jns sbb add dec test pop int3 pop jecxz dec aaa bound bound mov mov cmp xorb loope lahf push add addr16 jne aad mov pop pushf jae jo mov mov out add dec jns lahf pop inc ret stos pop lret bound push xchg leave cld sub xlat (bad) mov dec add and add push and add push cmp lea add xchg pop mov stos cmp int3 push pop add ds mov add gs ret fwait or repnz xchg mov pop iret adc rolb bound add aaa out fistl mov or add bound sti xor mov (bad) repz and push pushf pop ss fisubr scas add insl pop fildl jo outsl scas xchg jo addl mov sbb cli gs mov cmp sub (bad) add rcrl je mov lea push fimull out in and adc (bad) not (bad) cmp jo push shrl je add cmp add jmp and sbb lret xchg jae mulb add cwtl cli add or adc test add or inc out jle adc jl push imul pop xor out mov jbe andl call inc mov lock push ret mov mov inc cwtl add out sub (bad) mov inc sbb sub (bad) fnop movsl loop data16 roll or jl ficomp ret sbb jns dec mov pop decb cmp sub adc hlt or sub pop dec dec dec add mov mov pop stc hlt mov sahf sub pusha imul stos (bad) dec xchg or das rolb mov lcall aas add mov inc add ss dec pop xorb dec add xor mov stc add mov dec mov add out or jo adc repnz (bad) jo rclb push inc shl imul rcrl fwait rolb sbb dec (bad) pop add sbb add jecxz xor xchg roll mov dec fwait push cmp pop xor test int ret (bad) xor cmpsb cmp sbb bound pop ss lock mov inc dec sarl xor inc es mov add mov cld out adc (bad) iret dec sbb lea push sti jecxz push stos adc mov test loope jp xorl shll mov (bad) loope fwait rolb add pop js cmp sbb or push in popf cmpsl bswap push lods loopne ds jns pop jg aad sti insl push into in test mov pop sbb add addr16 mov pop shr out dec in jb sbb leave dec xor mov sarb std inc jp dec cld add mov add add pop fwait add nop ret xchg jo push jl add and nop pop mov aad jae arpl add imul sbbl stos pop frstor andl push loope jl push dec test ss out pop and inc jge xchg mov dec sbb mov dec ds test subl xchg repz mov loope bound inc jno (bad) or fs repz adc add add cs xlat jmp insb xchg add dec rsqrtps pop jnp je jbe pop test add xor mov cmp push jg scas addb icebp and add adc xlat je pop mov dec pop inc and dec in leave jl andl add add movsb push addr16 dec sub pushf iret (bad) jg add pop je xlat or mull pop sar jne add movsl and xchg mov pusha gs out push add stos dec and fdivr mov mov jno or push fsubrp pop add std push mov sub lds add jle xchg jb add movsb test add out iret mov cmpsl dec shl inc sbbb xchg sub pop pop dec inc jnp scas lret push fdivs cltd and add sbb ljmp sbb jl push push scas jg jmp xchg in or add jno icebp push imul pop mov add mov jp cmpsl mov je mov mov lds or popf das jle lea nop add inc pop out mov insl add stc lcall into push xchg (bad) or mov add push hlt jne lea push lcall lret mov adcb add hlt out faddl push pushf (bad) inc popa mov imul faddl add or xor lds repz leave pop sbb inc rorb jae lahf sbb (bad) jmp mov inc jl and loop pop dec jnp clc sbb jmp in add lods add push loopne mov movsl je inc sub xor or (bad) lods pop xor (bad) pop add test jo subl xchg pmulhuw insb sbb scas sbb jno lcall lods iret and and stc inc add cmpl inc sbb lods push test cmp scas cld pop lcall xchg aad jle pop push je add outsl in pusha or add cmpsb dec jbe inc mov stos jo xor jae inc inc fldl xchg or lret fdivr add ret shll jbe cs dec repz pop jecxz push pop xchg jge mov test dec xor cmp mov mov jl (bad) loopne add rol cs mov lahf lock pop cmpsl ds cmp movl jecxz add ja test pop (bad) sti aaa test mov popf insb psubw test xor xlat test loope add jl jge ds xor cwtl dec rcrl pop fdiv inc fldl or mov add jne jmp cld dec lret je sub jo sub lcall push sbb xchg inc lahf or xor scas addl mov pop out push xchg add and lods in fs inc mov flds inc shlb insl xor xchg mov jl pop jbe pushf lahf pop dec mov adc frstor dec adc call xchg dec jp loop cli not add movsl xchg shlb lret push lret sbb mov add and add fistl dec cwtl orb add stc adc cli jle push insl lea std add sti lcall (bad) or inc mov mov mov add movsl inc push add add and cli xchg ss or push mov jmp (bad) nop outsb repnz xor lock mov push ret bound xchg test (bad) lock cltd jnp pop js inc add mov cmp mov popa mov mov mov jmp dec mov test dec jmp int3 jecxz or fadd jp ljmp movsb sahf xor add jp adc popa mov mov add repnz cs xor push add nop xor unpcklps xor jnp mov cmpsl js add xor orl pusha (bad) ss icebp cmp xchg mov fbld gs das adc bnd mov mov fldcw sub push test pusha jmp jne add jmp xor cltd add pop sbb inc aam xchg imul mov push push shlb pop aas ret mov push es test and xor inc mov push pop rclb les nop add jno and dec das lea sub add pop mov xchg and ret pop stos lret push test pusha or add mov jmp pop iret or add les pop pop dec test add mov int3 add jo sbb mov pop add insb mov push loopne rclb push test aad mov mov dec sbb clc lock push test lods add mov nop cmp add fiadd add xchg inc xchg out pop and push jge push xor addl hlt add xchg mov dec nop mov scas dec jno int3 insb pushf xchg add les in pop mov fistpll cmpb push iret and je stos add adc flds test loop mov mov add cs test (bad) jno (bad) testb cmc push scas sbb cmp mov sub jle js fmul or add pop std pusha mov outsb pop scas xor push insl lahf nopl jbe les addr16 arpl pop ds (bad) push jnp push pusha or jb add mov incb push lahf pop inc ja add rcrb mov cmpsl inc out inc std sbbb fadds roll lahf inc dec inc xchg mov in leave push scas pusha add push add icebp (bad) push mov aam ja iret xchg arpl mov mov add in scas in cwtl test mov mov pop add mov mov lods inc xor sbb stc test je xlat dec add mov xorb mov push ss shrl pop push mov jnp jp add shl or test fs dec bt add jae mov mov xchg pavgw mov sbb sbb xchg add movsl and stc jo add mov sub lahf insl int3 add cltd outsb add pop cmc popa cmp sub dec dec push stos into add adc inc mov insb pop testl jg test test mov mov cmpsl lcall jo pushl es leave sbb fild pop mov inc aam sti testl dec jge push add fstps js push cmpsl rol int3 cld jl fisubl popa push cld imul sbb adc adc dec xchg push (bad) cltd fmuls fimull shlb subl jl into loope xchg or loope and shrb pop jecxz faddl xlat jbe cmp add imul pop dec loopne addb stc inc xchg je mov sti mov sbb xchg lods test (bad) jno inc aad xor mov mov mov add inc cmp xchg cmpl dec pop and mov stc imul outsb in jle orl jl mov or test adc dec add dec jle rcrl or insl verr ret insb jae (bad) daa add push push sbb or xchg xchg push jp inc xchg je xlat add cmpsl dec stos push inc das (bad) dec addb cwtl mov xchg subl add mov cmp movsl aas (bad) lret jb icebp inc add mov jg (bad) mov in call jns pop push outsl adc (bad) add cwtl jb cmc jbe xor addl pop bound push aaa sbb inc add pusha sub movl jl (bad) (bad) push and (bad) out or enter rcll or pusha adc push adc add movsb mov or dec pop xchg inc data16 sub flds mov call jb xchg fisubl mov stos mov and pop ret inc mov test fs sbb lods mov jmp add pmaddwd cmpl leave add inc dec fldl popa cmp cmpsb mov mov push and insl xor bound adc jge es leave xor subb test add xchg pop loop sbb arpl mov cmpsl hlt js push add repz ret ljmp jns add xor (bad) sbb add es push sti push xchg add xor cs sub in pop mov mov dec (bad) xor adcl out sub jp mov xchg cmpb push xor imul (bad) ja movsl jo aaa and outsb pusha or in das sub xor adc out add push jmp mov xor pop jl (bad) mov js in mov push imul int push mov in jo dec ret js sarl and test jp vpminsw aaa mov stos lea sbbb xchg mov call (bad) dec add sbb mov ficom inc push jg jns add jle outsl (bad) or inc repnz in rcr jbe jns sbbl enter inc cmpsb je add xchg addr16 add (bad) cmp add inc xor test clc sub (bad) cmp xor mov jmp ret add js cmp pop add lods add (bad) fucom xchg xchg xchg mov xor cs cmp int3 cld xor add mov ret inc clc xor mov push and cmc jecxz push mov mov xorl jne js fistl jg gs or je addb (bad) jo cld add movsl test xor and outsl add inc sbb mov into stos sbb sub inc insl mov push xchg add adc mov test push cmp add fisttpl outsb jecxz mov repz sti sub xor fistp std out inc add pop call lcall mov add or dec xchg in jl lahf pusha sbb add ret icebp adc mov xlat sbb push sarl pop sbb mov sub jno stos cwtl xchg (bad) hlt imul jle jecxz xor test inc jl mov pop sar lret movsl add cmpsb sub mov sbb and push mov aam or add (bad) nop or sbb or out movsb enter mov in or xchg pusha push xor sub pop out popa jns xor xor std nop jmp subl adc xor add inc iret xor push sub adc mov icebp jns lods jg add dec outsb xchg aad stos test xchg sub jbe jae push add inc pop cmpl aam adc fild bnd or fidivl or add loop aas add outsb int3 fs js add cs cmp sub cltd iret test mov add rcll rolb aad and in jmp mov mov pusha xchg mov rcr cld lcall mov je mov in cld dec mov fs mov out jb (bad) adc mov dec add movb stos xor repz mov add adc xchg mov jnp rclb (bad) les movsb mov xchg dec aaa push and je sbb aad add mov (bad) icebp add dec pop scas imul aad imul js (bad) out pop lods sub (bad) sti repz dec mov jbe cmpsb mov push les mov stos push xchg lds dec stc pusha loopne add or sbb (bad) push adc jb sbbl dec jae pop (bad) lcall (bad) ja,pn add pop cmpsb shll dec or or cwtl popf add loope (bad) fdivr outsl andl mov mov adc les jbe mov pop add lret xchg jp sub or scas out cwtl sarl pop pusha addr16 jo aas mov dec add in dec cs aaa xchg das cmp add pop cmp adc imulb mov ljmp adc insb std popf inc add test enter inc inc jne inc lods notb push sbb ds ret or mov sub cmp in sub add inc mov inc out loopne adc push add mov jb lods add (bad) xor (bad) mov into cmp adc ror in mov int3 pop push les mov jnp add (bad) stc mov push push shl add push add push rcr dec test mov or loopne pop add jns inc sbb pop aad mov add mov cmpsl cmp or imul cmp adc xchg fild push out call pop jmp movsb push cmp add js out test outsl addr16 rolb adc add inc cmpsl mov rorl es pop cmp or iret xchg push ja jns inc push dec dec push sbb pop in popl cmp aaa pop ret jb add push mov add bound imul adc cmp dec dec gs add not stos into push jge cwtl dec nop pop mov insl adc (bad) mov test push cs rolb mov out (bad) mov fbstp leave (bad) int add mov mov cld add mov xchg bound mov adc mov (bad) mov jae adcb xchg mov xor sub add fstp popf push enter lret mulb dec add cwtl loop sbb jg add ret add aam sti lret leave dec rolb (bad) std add jno popf out sub add jle push add rol jbe pop add stc dec dec std cmp movsl pop cmp cmpl ficoml xchg sbb and fdivrl add fs rolb add pop and call inc push dec cmp lock outsl cmc roll imul das add rcll (bad) test pusha mov xchg lock push mov fiaddl cmp loop mov scas mov jns nop lods test and mov rolb push pop add pop popa xorb lods jp jbe mov sub lock icebp add ret mov cmc mov adc insb dec aas add mov push sub push (bad) sub stc add out daa xor fldl (bad) into outsl adc rcrl cmp add out mov xor int cwtl ljmp jne sbbb jecxz sbb popl xchg stos testl sbb mov pusha sarl hlt pop mov repz insb shll fwait push mov daa push mov add dec or leave or push cmc fstps repnz and leave inc sub aad (bad) push mov out hlt add mov shr jno mov sbb fsubr xchg int add rclb inc (bad) std sub pop mov pushf add pop (bad) xchg fist adc and dec xchg scas add mov jl stc sub add pop pop or sub cmp or push or adc add push dec pop add mov mov fucomp xchg out insl and rolb faddl outsb add pop or sbb push and and cmpsb push dec iret lds ds pusha xchg or push and sub and push (bad) call add and cmp and xchg imul (bad) jo push mov and sbb ss mov add pusha xor jne pushf jne add cmc ret add adc inc subl loop dec (bad) mov imul xor scas mov (bad) jecxz pusha daa cmp add add call jne mov test roll push or jle jg jge imul bound or xchg cmp dec stos in push inc adc push mov add push mov (bad) popa inc sub test adcl mov xor ficomp lds add mov fist icebp jg push fnstsw rolb orb jbe xlat jno add ss sub push mov fwait data16 stos jno mov out scas lock call mov ja add mov lcall fs xchg add mov leave and fdivl jmp cmp mov xor sti mov adc test imul shrb xchg push out adc jne aas ljmp mov out sbb xchg lock mov xor cmp add push out je outsb movb lahf dec imul cmp int nop push (bad) rolb fwait outsb sbb cs (bad) add popa fdivr adc add fs sub roll movsl les roll loopne inc mov lock jae push scas cld mov movsl mov sahf add (bad) ja xor je adcl mov mov sbb xlat cwtl add (bad) mov jb push jae scas add sbb and inc out in cmpsb scas or test cli inc loop repnz scas add sbb mov jg add and mov pop push xchg pusha ja cmp or test lahf daa call sub out pop add arpl les jecxz adc popf cmp adc add sbb outsl cli push xor mov dec or mov or cwtl add flds and sbb je,pn xor push mov inc sbb mov out add xchg dec das or add fldenv (bad) xor popa mov in (bad) push cmp cmp mov adc jns mov loop scas fistp stos mov cmp sahf push jecxz add inc out cmpsl push jg cs or or das lods mov jo in add mov ret mov xchg leave sbb add out xor add mov push add subl mov push insl cmp jl dec mov add jae add test repz mov jnp mov add sub jge mov cmp push mov mov sub iret cmp mov push mov sub or pop push aad fildl shlb and into aam add jae repz add sub sub clc (bad) push test add push mov mov dec repz adc jne push fimull xor mov lea push loop xor push rclb sbb mov dec mov arpl jns sbb xchg (bad) (bad) pop push and xchg mov stos add xor sbb cmp addr16 imul rcr and out int3 jb mov sbb orl pusha lods add and inc mov aad or popf xchg add sub lock pushf jno pop dec (bad) push in add xor icebp and cmc icebp dec shrb aas imul sti jmp pop sub xchg fwait cli in mov xchg adc cmp lds sti adcl ficomp or aas mov mov ja dec lods push in cmpsl pop adcl xchg mov and (bad) jbe or mov sub add test mov push flds sbb add outsl inc fistpl adc aad push add std sbb mov mov adc cmpsl movsl add (bad) dec insl mov jae fsts add mov loop aam xorl and sub xor movmskps adc pop cltd fcoms pop jns push jmp jge sub mov daa pop add mov or lret add lods xchg pusha add in adcl xchg dec mov fnsave insb xor pop add cmp mov push add scas inc xchg add pop sub inc jno xchg add jge pop ds cmp cmp pop add std test add jl inc inc ret sub push sbb adc es and scas and push pushf xlat push jp add or lods icebp add loopne in lahf inc movsb adcl mov lret sbb push les mov sbb sbb fwait pop js nop add push cmc sbb add insl in loopne xchg pop mov test (bad) add fs aaa sub lcall test jp outsl mov sub vpslld push insb ds jecxz (bad) dec inc or add sbb imul jbe loope subb (bad) lds subl icebp pusha inc dec rclb add test (bad) adc jmp add sahf icebp rolb mov arpl add inc sub les lods mov pop scas add cmp xchg (bad) repz xlat in (bad) pusha push iret add or ss and cld inc std add out dec pop sub adc scas scas shll jo (bad) xor mov jb das sbbb or movb jl cld and (bad) and or subl rorb mov xchg xor cmp sbb add xchg cmp rcrl or mov jp push pop into pushf stos mov pop push sbb dec je or test cwtl scas jne adc aad xor mov cltd aas movsl add jo jg xchg pusha pop xor fdivrs adc (bad) add cmp inc dec add leave mov btr (bad) addr16 rcrb fisub lret test push mov jge ja repz ja dec pop jecxz sahf xor adc call nop into cld in clc inc ja push and jne fnstsw add pop or jns lds aaa mov in hlt or push addr16 js mov mov popf xor fidiv add mov xchg cltd inc add mov inc popa or (bad) add outsb adc add imul test and das jp repnz iret xchg and aam add mov out cmp rol (bad) lock adcl push dec jae cmc add xlat in pop xor sbb call add (bad) (bad) and add iret mov xchg sub dec inc pop outsb xchg inc xchg daa inc or cmc dec orl add and sub mov lahf inc mov pop insl xor cltd xor adc mov push leave pop push lcall cmovb (bad) sbb test iret add or and fstl fisub fs mov clts pop pop js jne sub mov adc cmp jle (bad) push push xor push mov mov jo xchg jmp sbb push addb mov ss loope (bad) add cwtl insb add push xor push (bad) sbb das adc jge add xchg cld cmp sub fisub xor push mov jne test fisubl insl push (bad) add call jl push xchg (bad) pop mov lcall and aam xchg lea pop mov inc jo scas rorb sbb and inc mov pop fist loopne,pn mov insb cwtl out jae cli add cmp pop les xorl cmpb out push adc ljmp mov dec jge mov lea pop out mov roll dec sbb js push add das xor mov (bad) leave cmp lahf (bad) sub inc dec cmc loop mov cmp push divb adc and or xor fs dec mov stos int stc mov add fs sub aad or mov pop imul fucomip rcrl stc add js cli test cmp pushf inc adcb mov scas jle dec push scas rcrl dec mov out add jle add imul jns sbb dec ds mov sahf fnsave inc mov push test inc pusha mov mov push dec ficomp and or xchg mov mov test add ficom adc push mov outsl xchg cmc jb shlb insl jge sub in lods add pop sub sbb add or addb inc or pushf inc div cmp xchg fimull jae jns aaa test sti adc and ja push subb out fist lea add xchg push les in lret mov data16 push xchg xchg dec xchg sub cmp inc out mov and dec daa fwait xchg in andl js (bad) movsl xchg add mov xchg add pop pop insb aas xchg add fadds add ret pop daa fdivp mov xchg clc (bad) sbb cmpsl clc jl push fstps push and sbb mov adc xchg and movsl sub clc jl out addl add sbb outsl stc and add gs push xor push mov aaa addb push je mov adc mov adc jmp iret in jno add cmp mov inc push xor (bad) loope mov and lret cmpsl add xor flds faddl in sbb inc addr16 mov cmp add mov outsb add nop repnz insl fs push cmpl mov adc mov sbb add xchg xor movsb add cmovle out add inc loopne mov jae pop sub and xchg mov mov or out sbb arpl stos add mov fimull pop push add and add xor insl adcl int3 jo stc mov out sti cli lds and adc xchg test stos jp sbb sub adc js push add fistpl xlat mov jne subl gs shrb imulb into sbb in add ljmp jmp test or pop push mov dec add stc xchg sbb pop add fistp sub pushf lds sbb rolb rcll sbb inc and push xchg or (bad) xor daa add jmp dec cmp add mov sbb out mov inc push (bad) jecxz pop xor mov hlt push mov in pop mov xchg clc daa push and movsb add mov icebp loope add or pop (bad) aas rcrl cmp cmp bound imul stos lods and add xchg dec loop iret in add or add sub dec subl mov adcb mov add adc inc das lahf (bad) addr16 add fisttp mov dec adc lds rol jge cmc inc in subl fadds hlt cmpsl pop jg (bad) push mov cld test jno add lods scas xor or aas (bad) jl add pop cltd push and pop in mov dec popa lret add xor pushf insb jno lock xor inc jne ror leave out xchg jp ret add dec push mov into jl add ss adc lods xor mov dec lock enter fbld mov xor xor add cld mov adc sub lret out ds orl dec sbb xchg movsl add push jo sarl add pop sbb aas add xchg xchg flds sbb and sub fsubl test fwait cli lock insb movsb pop fidivr andb mov jge outsb sbb xor imulb daa cld jne bsr adc inc (bad) inc adc scas not jmp sbb add mov fnstenv add sahf sbb scas ja add cwtl add mov js xor bound call mov add int xor dec out jg rol incl test adc sbb sub gs pop or xor fs cmpsb fistpl dec add pop popf subb mov xchg lahf jns ret pushl xchg stos xchg imul sbb ret pushf jmp popl cmp mov aad sbb aaa xchg add pushf dec aam lret pusha dec push push sub stos inc cmp and aaa rcr add fidivr add bnd (bad) jge mov fst test dec cmp add push cmp add cmp and push mov test xlat pop cmp stos jp pop fidivrl mov rcrb sbb std cli cmp jmp outsb mov pop adc cmpb push cld dec sbb add adc movsl add cmp cwtl dec stos xchg lds push fwait ja mov xchg bound mov int add repnz sub mov dec cli scas dec add fbstp loope add imul ljmp adc push addb popa aas pusha add fmuls add int3 gs mov mov shr sbb leave mov sbb add or add imul jo inc jnp xchg test insl add mov (bad) loop lcall inc or or add sbb ja jge mov repnz or and aad lret dec lods shl dec push in push jg add sub sahf xchg pop add into sbb fsubrl fwait inc add mov pusha punpckhdq lahf and add lods sbb addr16 fisubr add xor push add xchg fdivr dec pushf in push ss xor push out adc daa mov gs cmpl jnp in pusha add clc or addr16 xchg pop daa test (bad) or pop add cmp mov jp jns add aaa add out stos sti sar movl xchg pop movlps ret or add or (bad) psubq mov loop test test xchg imul xchg add (bad) int jae mov xor int mov adc xchg sbb (bad) cld mov into pop sti loop pop add xchg sub ret test fidivr dec push sub push mov xchg fdivl imulb dec add xor sbb repz xchg out mov dec pop push call int inc (bad) (bad) stc pop enter adc jno jp iret xchg or add push mov push mov imul mov add ja into add aam shrb dec (bad) int out dec pop add inc fdivrl add cmp add xlat (bad) ret data16 rcr movsb xor inc je daa mov aad or sub int aaa jb cmpsl add scas ret mov xchg and sbb nop sub mov xor or (bad) adc jb and and faddl scas insb add aad lods and add push xchg es push lea or pop cld add scas inc mov cmpsb pushf dec xchg inc shlb pop or add add lahf dec jo mov sub push sar popa fbstp add jecxz xor ljmp add call sub dec cmpxchg8b cmpsl rol dec dec add mov mov (bad) adc loope push dec daa pop call rclb aaa fisttp sbb jb jl addl and xchg ja aas add lock adc dec lds mov stc inc daa pop push mov cmc jo add xor jb xchg or sti push lcall or test jbe add insl jbe fildl cmp int3 (bad) xor out mov lret lahf adc pop mov push push mov add xchg sbb pushf xchg addr16 xchg dec cmc mov js lock or jb push push mov adc inc cmp subl inc (bad) leave xchg mov mov ljmp pusha or icebp je mov popf cwtl add aas fcmovne jmp jle sub ljmp lret popw pop cmc xorb repnz add arpl jge cmp test mov mov dec xchg add cmp push cmp add jae add popf or inc fcoml or cmp loope lret movsb jge xorb lds out mov into and dec dec push inc sub mov imul int3 add scas test add fldt bound add pop addl in add cwtl (bad) or popl movsl add lea jp inc sbb (bad) and arpl enter mov xchg lea jl and int mov jnp add jmp add das outsb add or je les orb getsec data16 jl sub jp in or roll jo add mov mov push adc ljmp jnp and sub pushf popf pop add outsl gs imul push add ret ficomp add or testl adc mov inc jp pop test mov dec fcmove inc push xchg xor xchg pop sbbl test test or xchg cli add cmp mov add mov movsl inc push xchg divl test add (bad) into fnsave enter test fildl adc adc lret add (bad) pop sub cld mov add lds stos fisubl xor ret push loopne xchg add int3 enter cltd add xor cmp pusha mov mov inc movb lock movsl lods mov xchg xor sbb lcall xchg fs adc arpl or sub sub push mov add lahf rorb mov pop add cmp dec cmp addw cli mov xor mov mov adc sbb cs rcll and dec fmull je mov xor or mov movsl jmp jb push andl inc add arpl js ja mov jl mov ljmp add jp rorl mov xor fiaddl (bad) or and pop and pop push into push cmpsb jns addr16 push test imul sbbl fstl adc fiaddl inc or pop xchg fbstp pop loop mov push pop lock xor push aas sub dec push sub fisttpl mov movsl add lea inc cli movb loope imul mov fwait sahf cmp add adc add mov stos jae add and mov mov popa cltd in xor fs jne dec add lods enter leave xchg add mov aaa sbb sahf in pushf add inc mov ret or xchg arpl gs add jecxz enter (bad) lods mov aaa inc push add pop lds imul ss and cltd or fdivrp jae and jb test shrb fildl sub mov mov mov xor out and fstps sti inc scas mov or aas jecxz mov mov mov imul add mov js cwtl sbb pop sti jmp fisttp add mov hlt pop and or fnstcw cmc cs std dec push cmp (bad) icebp cmp lret std push aaa dec mov jge and iret and aad outsb fnstcw add jmp push add xorl xchg add scas fimul push pop push mov mov int out inc out stos add dec pusha popf mov xchg push frstor div nop add arpl mov loop repz ljmp ret call add icebp push (bad) add je mov mov cmp push xor or shll add cwtl insl fs ret inc mov add int3 shll add mov in addl ljmp jge mov pop xlat jo push add test es mov mov xchg and mov jne sub (bad) pand mov popf popa sbb push jbe push add sub inc xor inc jae cwtl xor out fdivl cli add inc mov sbb decl dec sbb in stc iret sbb std add xchg mov imul call fiaddl push testl rcr add aas das movsl cwtl sarb inc test call out pusha adc test pop push cli mov xchg fistl movsl std inc mov xchg repnz (bad) stc jne mov jecxz outsb adc (bad) jne lret add or adc sbb repz enter jg mov pop (bad) data16 mov jp cs xor add cmc hlt mov sti push dec inc mov xchg pusha mov lds xor std and mov roll cmpsl jmp or rol add jae sub jno pop jns mov and sahf enter push pop sub pop das out imul mov push add pop lret push stc aas mov and in jae pop es jno add addl repnz add xchg outsb mov movsb in call and xor or sub sbb int loop repnz push inc and stos and jb cmp out loope imul leave xchg add pop pusha lods mov (bad) add mov xchg idivl cmp dec mov ds cs cmp xor popf sub andb pop stc xor add push addr16 lret aaa xchg subl or out ret lret add inc cmp xchg aam mov out push dec fimul andl add dec xlat mov xor push add mov jbe pushf add sarl rclb pop mov adc xchg adc test xchg in addl cmpsb sbb dec bound sub outsb pop (bad) es add das jp lahf out mov rol pop jne pusha (bad) push lahf aad add aas mov lds adc push add cld (bad) and xchg dec mov mov aad insb sahf push xchg add jmp and rcrb std fldenv add pop js mov in mov dec or or stc sub xor subl insb aaa mov out (bad) pushf jp push xchg inc cmpsb addb and mov jmp lret aas cli add cmovne add jnp sbb dec lock mov mov xchg cmp push loope and add lcall aam xchg mov inc stos shr fadds dec stc adc scas cld cmp mov xchg add inc popa mov cmp add cwtl mov jne push adcl add pop jg (bad) mov and add lcall int out lret mov arpl dec sub hlt scas (bad) push aaa add fs mov mov xor dec jl push sbb aas gs mov stc jle es jb sub cmpl mov push mov cli sub std mov pop cmp add mov out outsb cmpsb xchg inc nop cmp xchg jb add mov lods add xchg and cmp sub in movsb jno pusha xchg lock negl push cmp subl popa dec (bad) pusha data16 das dec pop fiadd mov popf outsb roll push jmp sub inc scas and outsb push fsubr add sarl add inc (bad) xor pop cmovnp adcl jns ret leave js push add mov rolb pop pop aad sahf (bad) inc test cmp scas and ljmp push (bad) mov (bad) pop mov and ja adc xorl mov mov lretw add gs jo ror lcall je int3 add dec pop mov sbb xchg jp sbb rorb jmp imul insl add jmp xlat into inc mov hlt push jl (bad) cmc test or pop cmp lock mov (bad) sub addr16 div sti js test add outsl push js dec cmpsb jle mov loopne addr16 mov pop add (bad) cmc cld add rcl jns (bad) cmp frstor lret lods xor jnp pop sub fs mov or negb mov aam pop dec imul test scas push xor xor inc je pop mov aam subb push push sbb add inc push cmc pop dec add loopne ds fist push cli test outsb ja in add add ja aam inc shll sub push inc mov or dec daa push and aam ret loope jl pushf daa add insb push pop or jmp ret mov push add or add faddl jmp sti stos fist xchg xchg jae cmp dec faddl call push popa pop sbb psubsw jnp cmp loopne sub cmp push fsubs aad nop push lret in outsl push add (bad) fwait add or dec aad test (bad) nop int push mov adc fnstsw sbb andl (bad) push (bad) push jo mov mov sub call pushf (bad) lods adc int add pop fs in mov jmp mov rcrl push adc mov jecxz ds push xchg push fwait mov xor add iret (bad) xchg cmpb adc push mov inc adc sbb and icebp (bad) xor shr mov (bad) lahf xor dec js inc mov lea cmp out cmpl mov sub outsl (bad) lcall push adc pusha inc fcmovu pop add push out enter outsb xor sub push (bad) lds mov enter adc dec mov aaa sarl addl ret inc pop inc jecxz sbb lds rclb (bad) inc nop mov pop je add mov leave adc push push mov pop cmc loopne rorl sbb and ud1 test inc js pop add lds (bad) in mov xor add mov push mov dec push sub pop js lret mov or inc xlat je push sub aaa (bad) mov movsl sub data16 test test xor pop pop idivl jmp cmpsl fs add jno test push std jg lods scas pop pop and into mov sbb add orb sub loop cmpsl cmp cs mov dec push push clc cmpb outsb divb inc xor pop cmp jmp subl loope jo inc ds fsubrl (bad) pop cld loop jecxz (bad) movsb add jne xchg jno pop or fnstcw add popa imul dec call cmp add fadds and fistpl cmpsl push add (bad) xchg in lods out add add adc or cmp cmpxchg and jle movsl sbb dec bound in add dec sbb jp xor pop pop fsubrl jne lret clc xor ret pop shll jle scas add (bad) daa inc nop and outsb add lret add dec add add scas push sbb xorl xchg push mov add aam in sbbl add call aam add push or lret js add adc push xlat jge add mov cmp ja adc push outsb fwait cmpsl add stc pop lret push add notb (bad) push jge mov add lods addl pop cmp push xor adc orps sbb mov xlat int inc mov mov aaa arpl cltd dec push adc mov xchg mov loop jbe pop aas add imul popl sub lcall push push cld in add push mov lret jecxz add lock outsl inc lret cmp imul (bad) mov or rcr out push pusha nop xor mov mov mov ja add je sub and xchg add sbb sbb mov (bad) pop xchg loop test or xorb jno je aad jns stos and (bad) cmp jge mov sbb push add xchg lock (bad) adcb insl pusha shrb ss or xor mov jecxz mov xchg add call int cmc icebp cmpsl aam push or sti cltd jo mov xchg cmp add ss mov add mov xchg fisub mov jge inc xor add jle mov cli mov add dec test subl pop sahf jg packsswb mov xchg sbbb and pop shrb arpl addl daa sub cmp subl adc push mov mov add icebp cmp pop mov stos popf decb mov inc sbb xor adc popf push pop std xlat add push shrb stc add (bad) cmp pop in dec xor js lret xchg inc insl hlt jo adc add enter add lret les daa or add enter shlb std add bound or sub sbb dec repz es add js sub cmp mov mov andl imul cmpb xor mov (bad) into or aam xchg (bad) fidivrl loope sbb jg mov push inc jo leave gs xor clc mov mov out dec mov sub sahf inc int sbb loope (bad) in sbb push xchg sub inc pop in jp adc cmp imul (bad) out lods dec or test les pop test arpl jns lret pushf or add inc pusha sbb push push sub jnp repnz mov loope push popa sbb fidivrl and pop mov and lods add and mov notl cltd and lret add mov xor repnz insb mov xchg push xchg inc mov bound pop mov stc add lret and add stc inc xchg lods adc lcall push add add outsb (bad) in xchg addl mov add push sbb cmp xchg xchg clc xchg das push andl or scas mov iret jp mov mov jle clc jns jg add aas leave aaa push pushf sbb add jnp dec add add test push je add add dec inc push xchg sub pop call sbb fcoml sub out cmp (bad) enter xchg (bad) lds xchg or inc loopne xor in pop mov jle not test and sarl jg (bad) out jg leave popa push add xor jae inc add dec sbb repnz (bad) and je cltd pop mov pusha push aad or inc cmpl sub push loop test repz (bad) mov cltd sbb add les call mov or inc mov adc jae aam iret test mov add adc aas cmpsb xchg and mov add xor test add (bad) popa stos add add adc adc jbe or divps and add outsb lcall imul nop push orl jne add jecxz int3 mov lock xor mov popa std cld pusha (bad) cmpsl dec push xor add pop gs aaa xor add jns inc cwtl daa cmp add sbb cmp jl test push popf les sub adc movsb cmp and fnstcw lds bound into out out test cmpl pop pushf in mov lea ss jns add push cs icebp xor cld mov loope push rolb sub cmp sti add add adc mov mov or add out mov and push xchg cs add jg leave (bad) popf stos mov ljmp int3 dec cmp (bad) mov fcompl test sahf lcall decb movsb lods imul out test adc ljmp inc clc sub and imul cmp test out mov dec pop negb push xchg fsubrs add xor loopne pop ret sbb push xchg ret or adc xor gs jp (bad) xor sbb daa clc cld push add mov shlb dec outsl popf pop sub add pmaddwd pop jl lock test addb xchg xor lahf xchg mov sub jle outsl add jo dec lret das inc add sarb cmp mov jno dec and mov or and or leave sbb and add xor push xchg popf movsb mov rolb sub mov lcall pop add mov mov cmpsl pop add iret add lods mov in fisubr add sti daa pop push fnstenv pop pop and (bad) test xchg lahf icebp pop int mov and adc cmp sub pushf jb cmp xor das add jmp test xor scas sbb add jb xchg xor mov add stos dec push cltd mov jbe add dec sbb add lret dec and adc add das aam mov cli cmc pop xchg loopne pusha dec inc sbb cmpsb push mov or inc int push mov pusha add faddl lret flds js cwtl scas (bad) fwait (bad) mov pushf popl jb les cmpb rclb sub pop xchg lcall push jl xchg xchg fdivl int3 add add pop and jno dec stos lret nopl cmp sub test fsts scas cmc inc popl mov ror sbb enter ss mov pop jo push std add test lret movsl test insl add arpl test xor (bad) (bad) inc mov pop sub adc movl fs popl inc rep xchg (bad) mov xacquire xlat push jb add cmpsb (bad) loop adc push push ja pusha jns out jno pop sti (bad) mov cmp xor mov in or into imulb out xchg sub call pop add shlb inc add movsb addl outsb nop in fwait aas add mov sbb adc add int3 cmp fmuls mov cmpsl imul enter inc (bad) jecxz jb add iret cmp sub or lock push fild bound (bad) fsub xlat ds pusha ret jo in pop add mov outsl (bad) push pop xchg mov sti or jle subl pop jl cmp out fstl xor pop add jo pop inc cld and aas negl sbb add mov jb aad push ret or sbb mov push xchg mov add cmpsl outsl cmp fiadd jo xor imul hlt add data16 clc fistpll adc fldcw stc mov xor inc mov in xchg mov pushf pop xchg push inc data16 add push inc pusha xchg and add or in xor mov pop dec jb add adc mov mov sbb lods jmp xchg aas orl push ja hlt loopne pop jmp mov xchg xor sub movsb fcmovb js jle dec mov sub cltd incl xorl mov out fdivrl sbb pusha add nop xor xorl les pop inc jne inc sarb push and cmp loopne jbe ss lahf popa add mov jp lea cmp pushl (bad) jle sbb addl dec dec push enter mov xchg push mov xchg add cli xchg inc cmp mov lock aaa popa es mov xor pop mov fiaddl mov add push add xor dec or ret add mov push push cmc in lahf inc mov sbb dec jle outsl fwait orl xor xchg je xor add and mov orb inc xor pop int3 sbb repz or jae (bad) xor lods aas jle dec pusha idivl cwtl andb je cmp sub js dec add das aad rcll sbb mov in inc mov sub out leave adc shl cmp xchg add (bad) (bad) push inc es scas inc mov add xchg cltd xchg mov inc add pop in jne add flds pusha add push pop fnop leave jo daa test (bad) inc movl and push mov arpl inc inc inc add sbb leave add mov mov add popf insb cmp sub aam fisubl fstpl cmp call dec fdivl push push scas dec add mov add mov pop lret pusha jo sbb mov add or dec mov (bad) and test fs enter jo add pop ja daa scas add das rol out movsb adc mov push mov mov sbb add cwtl mov push inc push dec aas insb add cltd sbb xchg push repnz add push es adcl inc add ret mov xor push fsubl mov pop lock and (bad) cwtl out movsl in subl mov and pop pop mov ss enter je cmp add ljmp or push add jg mov fnsetpm(287 icebp inc inc popa add push sbb test lret lea jecxz pusha dec scas into sbb pushf add pop inc cmpsl mov add cmc cmp xor mov dec add insb jno pushf inc clc popf jnp push mov add mov (bad) rclb add test and ljmp cmp les push jbe popf add sbb pusha cmp adc jo ja mov mov cltd jp fild push inc (bad) lods add push movsb sbb add xchg cmp jmp dec add out cmp pop cmp into mov mov push cmpsl dec int3 jnp sahf inc mov and dec pop add cwtl sbb add pop shll mov xchg into adc adc sbb jns dec imul jo xorl jle testb xor or add test jb add cs push mov inc add mov popa mov in add jbe shll sub insb add mov out pop cmc jae cmp xchg jo inc xchg xor add push and es add rolb incl (bad) in dec lea mov cmc pop and mov outsl mov dec scas sub or in repnz mov popf shrl inc das jnp sub test add xor sbb add dec jae out sbb cs lret fcoms leave icebp add jb sub mov clc lock pushf mov add sbbb push adc stos cmp and rcl ja adc push fwait add std mov push add test das hlt ss mov arpl lock add fadds mov sbb outsl xor jo and icebp mov mov outsb adcb sub mov dec lds xchg jmp adc faddp sub jecxz xorl repz add jns sbb movsl mov pusha cwtl out add and or ja add cmp int cmc movsl insb jne add popa iret jns,pn dec add rcrb fwait mov mov jne push adc jle stos sbb add jp or arpl and stos test loop movsb jge jno jl or inc ret scas cmp xchg jge jns xchg or test mov iret xor insl jo push jmp les jbe jb loopne cltd add test pushf out sbb inc add push aas jl jo out jg add int addl aam sbb and push ja inc popa add mov add cs push jnp test push mov addl outsb rclb sahf push add pushf lret jmp add enter movl adc mov pop out stos xchg mov dec arpl adc jae xchg je push mov adcl das add paddq aad add pop out mov scas add dec sub test add sbbl pop inc xlat xor push jno daa and in push and push (bad) call inc jecxz pop scas mov jnp arpl fdivs fisttpl pop test and in push int add btr stos cli add mov leave lahf add lret add (bad) (bad) jmp mov (bad) fimull mov pop cmp fwait xor xchg add sbb jns xor or sbb xor add mul jecxz mov sbb ror add icebp mov in adc add cli movsb add mov in add cwtl icebp rcll cmp lcall (bad) sub int mov adc (bad) fildl push mov mov (bad) xor and lock add int and and add sub insl pop out dec das xchg (bad) xchg adc push cmp aam push (bad) sahf cltd add jo (bad) adc dec mov jecxz enter add pop movsb sti cmp jne xor add mov bound push stos dec push loopne push add mov in sub inc inc xor sub sbb lods andl adc pop push rcrb mov adc sub xor inc out popa mov add aaa adc punpcklbw push mov push add lea sahf inc push and xchg pop scas cmpl inc fistp sbb nop mov sub mov add adc mov add or pop xchg out iret xchg push jne (bad) cmp add aas xchg sub lods ja add push dec xor call sbb xorb dec sbb pop cmpl scas jecxz xor add ja insl imul (bad) sub mov sahf test dec andb (bad) sbb fmul and xchg add cwtl inc repz testb imul push add test jbe (bad) cmpsl mov pusha mov or arpl test hlt jne adc push (bad) mov inc cmp pop aas pushf into and orb pop inc pushf add out dec shrl add insb fidivl mov gs int3 mov in repnz xchg inc and aam pushf add cwtl clc out add sahf xorl adc sbb mov inc xchg add aad jmp inc shlb stos (bad) cwtl add sub sub pop in iret sbb hlt out lret jnp int3 or dec inc (bad) push cmpsl loop nop out xor add enter lds mov inc bound out cmp scas mov inc adc and jo add imul out jle rolb jne pop push popf stos add add insl add push cmpsb fimul jp push icebp xor mov inc pop and add sbb xchg add xchg in cmp pop jmp add popf mov mov loope clc int3 xchg dec sub inc out or daa xchg cmc adc ja xchg (bad) fistpl sbb jmp cmp push or insb bound dec jnp push fs add (bad) int3 cmpsl outsb call lahf aas mov adc fist pop mov jle adcl repnz inc sahf out or jg inc rcll dec out cmp adc mov pushf aad mov inc or sbb or adcl jl cmp scas stos push dec adc push test popf iret fildl sahf sub stos push hlt mov or push sbb inc add inc outsb sbb push cmp nop mov xor ljmp pop mov rolb mov mov icebp movsb cmpsb add sub or sbb and call cltd cmp fcomps jmp add sbb sbb lods xchg add push adc mov dec das jne mov lods push sub sbbl jno pop and mov (bad) xor sub mov push or mov (bad) fcompl add add pop mov inc outsb lcall xchg gs xchg cwtl or push add test sbb inc add jecxz dec add jnp cmp movb add mov mov jg dec jge pop arpl clc jbe cmpsb add push and pop push ret ss xchg add psraw dec imul sub pop subb jp sub mov rcl jmp push jno xchg out add out inc andb adc xor adc iret out lock add cwtl nop loopne mov or or popa dec adc inc (bad) add mov mov (bad) out ja push add xchg inc stos xlat inc inc cmpsl push push insl adc ljmp mov add sub pop sbb lahf insb in add push je add push sub add mov (bad) (bad) nop add mov scas out sti or add xor cmp pop lds nop mov or test dec mulb mov adc cmp lods add mov int mull inc jne add jb movsb pop inc dec out vandps mov adcl insb mov add xor and loope fdivl imul dec iret sub ljmp movb lahf jl call outsb jge fbstp cltd addl push fwait xchg repz fcoms mov pop inc jb scas dec push (bad) jo loopne (bad) dec test and loope cmpsl inc aad outsb add pusha sub sub popa out xor fisttp sbbb push gs jmp push lret mov scas jno fsubs cmp cmc or xadd in add int or mov pop mov pop rol mov stc dec mov lock pop movsb nop xor jmp adc (bad) push cmpsb loopne sub add jnp adc outsb pop add xor push icebp sub push mov jb mov and (bad) repz cmp and push pop push imul int3 ret push cwtl jae sbbl cmp add leave imul ja jp add xchg int3 lret (bad) mov xor jns inc jnp cmp xchg mov enter sbb mov mov mov sbb jb test xor (bad) cmp ljmp (bad) lock lods cwtl or xor add xchg ret dec ljmp xchg out imul pop push jb lods fs add push mov jo adc daa addr16 xor inc sbb cmp cmp pop insb and cli je jo lock test add sbb mov jl cmp jae adc cwtl add pop stos ds push push dec add pop sub add sub pop add lds mov mov lea add sub mov loopne test push ret xlat decl loopne sti add fmuls (bad) mov pop adc aaa lret jmp xchg push pushl roll mov dec popa pop lahf sbb cmp jmp enter add jne inc ds add test dec imul inc push cmpsb mov sti cmp sahf lcall outsl sub movsb test out das add sbb mov jno add cli lret push (bad) xchg add sub cltd pop jmp mov push add pop pop nop fisttp xchg add out out add mov incb mov jle in lea sarb andl mov pop xor loope roll mov push dec mov jg and adc in add lcall mov mov fs mov xchg or pop mov psadbw int pop mov pop pop mov pop rcrl xchg mov imul addr16 fidiv sarb mov xchg idiv push cmpl mov add sub add notb lret pop ljmp pop jb dec dec addl adc arpl pop (bad) lea add jl lret inc mov add or punpcklwd hlt mov rcrb incb rorl fwait (bad) and cmc add dec fidivrl stc loope in (bad) ja xchg lock clc cwtl daa (bad) imul add xor ret inc cmp test jnp pop xchg movb bound jg aad imul (bad) cmp int insl push lods dec stc xchg cmp adc pop mov add lds pop add sti mov and out push cmpsl xor (bad) jbe flds dec cs mov pop and pop jge loop cmp push pop xchg mov lahf dec xor dec out ds xchg je sbb add xor int movsl fildl push lahf out lret and xor mov dec cli mov push movsl or cmp imull repnz jle pop or mov jl cmp push push outsb pop xor out and sbb aam fdivrl outsl jbe cli mov cmpsb xchg pop (bad) insb mov add das inc xchg add leave adc xchg add mov dec mov (bad) mov inc push lret (bad) gs cmp jne hlt cli add pop add lcall add inc stos (bad) in notl add sbb cli xlat mov mov test jns pop push scas pusha je xchg cmp add mov popa add push xor call jl push jno mov add mov adc aam (bad) add lret push jo add mov insl push popf jmp stos sbb jle (bad) cmpsb sbb mov inc (bad) leave lret sub dec lcall addb cmp orl xchg ret adc sti dec add scas pop add loopne jmp cli dec cmp add jbe lret mov inc mov enter add cmp xor add xchg shrb add std and adc fcompl xchg pop insl add subb outsl insb mov scas or subl orl adcl addb sbbl (bad) pusha cmp rolb pusha imul (bad) les adcb dec cmp adc and out loopne add addr16 fcmovne fisttpll shlb outsb or ffreep and rolb sub mov ss mov in pusha mov xchg and inc mov xchg add clc testl pop mov sbb aam cmc add add hlt leave aad xchg out subl push outsl test pusha jno jb insl jp xor sbb jecxz das push cmp jb mov imul push mov add pop and imul jge and imulb fs call jnp ljmp jl mov testl or repnz add jmp mov mov xorl pop in mov add inc jge mov loop stos add jne jo cmp cmpsl add inc sbb mov dec divb icebp add dec xchg call pop xor loop add arpl rcll pop sub xchg sbb std verw cltd mov jbe cmpb pop outsb icebp and cmp sbbl add daa dec lcall roll loop addl mov cwtl lret jbe and pusha mov repnz add xor lock aad add dec test bound add outsb int jne pushf pushf aas sub dec mov movsl shl incl es fnstsw test mov sub js test sahf inc lcall mov cmc imul lahf sbb (bad) mov sbb pop pop xchg mov mov cmpl xor and mov inc popf add sbb sbb fsts outsl push add and mov xchg sub fldt and jns cmp mov cmp ja add push iret dec add pop lock pushf repz js enter (bad) dec cmp or cmp add (bad) (bad) popa in mov add aad inc les cmp push jo ds roll jge roll xchg popa pop pop roll mov sbb mov daa js adc or mov lods scas jo lods jmp jle cmp add add add (bad) jno icebp fnstcw xlat ficompl movsl stc aad mov adc pop xor jecxz cmp sbb sub stc sbb jle add dec cltd adc out loope pop pop pop imul cmpb cli cmp call icebp add hlt mov ja jno add jo out xchg xor nop xchg lret cltd push fadds add jae int3 mov das fisttpll bound adc pop stc int xor mov cmp fiaddl inc sbb push add sbb add pop push inc (bad) cld cmpsb flds ljmp iret add xlat punpckhbw loopne jl sbbl sbb adc lret mov cmp mov ds lahf popa fadds mov jne push xor jne call les cmp push and jnp cmp add loope inc movsb sbb addl mov orl mov popf xlat pusha dec jb ret pusha cmp mov gs daa test add dec adcl cmp ret inc push mov add and add es popf addb in je in sar mov cmpsl test out push xchg icebp or pop js sbb ja ret inc scas in hlt pusha sbb add cmp adc call fsubrs imul inc lret je push and jecxz ja push push and jae cmp out (bad) stos cmp add xchg in adc mov out cmpsb push scas add jle rorb or nop icebp ja clc cmp mov mov inc push (bad) daa mov add pusha (bad) xchg scas fiaddl cli (bad) data16 test mov jecxz dec loope mov push (bad) dec cli add sub add mov pop sbb mov jnp pop pusha decl cli cmp sbb scas je btc lcall (bad) xor inc pushf push fcompl mov push xor fiaddl (bad) enter lahf lret in mov adc pushl xchg movl out jo add mov pop adc jecxz push xchg out inc mov add dec jmp push out push (bad) outsl call add mov jp add imul hlt mov movsl add fdivrs push es xor jno jecxz add mov test mov pop fxch es inc push xchg pop mov orl or out imul xor lea mov cmpl in add addr16 aam subl cmp sub add add out and sbb add arpl mov cmp jnp popa cmp scas sahf divl and inc xor fwait xchg stos gs jmp inc push inc pop add call es cs mov in pop and in adc incl imul je add (bad) std or fidivl add gs scas cli fimul and insl testb sbb cld (bad) inc jne cmp or xor dec lret (bad) xor and fwait inc outsb insb ss xor addr16 inc dec (bad) mov mov jnp add lret nop cmpsw cwtl dec ss add inc cmp dec enter test and cmp push lods stos push pop imul add pop and mov xchg jb mov cltd sub push loopne inc aam dec hlt fdivs fimull popf lcall adc mov movswl faddl popa adc add fsts push pusha outsl mov push cmp je adc pop mov sbbb (bad) in add sub or add mov mov add popf (bad) add outsl andl xchg push xchg xchg inc mov les clc pop je pop cmp ljmp outsb mov dec mov je das sahf add lods shll mov jb add ss push fsubrs fimull pop push add lods (bad) je add cmp dec sbb cmc add xor addr16 cmpsb sbb nop dec adc test inc mov add mov xorl pop sub or fs add int out pushf inc cwtl into add outsl cmpsl add jbe mov pop add jle imull push add jo rclb lret jnp pop xor xchg cld and add icebp in cli jno jnp add xchg jns add je dec fxch test insl arpl or popa es mov jl subl push pop push adc inc sahf mov add pop and add fcom (bad) jmp mov int3 adc add or into pop sub test adc andl lea das (bad) adc and fcompl and push les movb xor stos clc adc lret add test jne sahf in xchg jle repnz push sub sub xchg adc add add mov xor and call jp test or dec mov push es adc out add pop push cld sbb and jl (bad) into add rolb loopne insl add pop mov adc cmp jp dec xchg cmp jno add sbb xor idivl push inc stos push je mov out add std stc movsb add sbb push mov xchg fsubrs rol jnp fnstcw dec add add sub mov pop pop cmp aaa add test pusha fild loopne ljmp inc xor fadds inc jmp add mov mov pop mov stos or jl int3 pop add dec ljmp push fcoml inc fdivs or xorl push mov jge loope mov xchg imul inc jae and mov dec mov pop pusha rcr leave pop add mov insb test push pop jge add mov in add mov jno add xchg arpl sbb or in push jl add out (bad) call mov mov add rorb mov mov lret scas in pop add inc xchg mov add int3 pusha stos (bad) (bad) add lcall test add sub push iret cmp es dec add adc int aas inc inc pop xor dec mov or call mov imul in mulb data16 push pop pop cmp add add cmp add int3 in and fisubr sub mov mov mov sysexit dec lret test mov insl mov pop mov sbb rol add sbb dec repz sbb insl sub ret out add aam and (bad) in pushf push mov int3 lods lahf add sbb xchg orb sbb outsb lea sub cmpsb and push xor mov jbe andb insl movl int3 or xchg or int inc lahf xchg addl call dec push imul mov push inc pop push jle mov cmp scas out add sahf (bad) inc xor sbb and ja test test fstps mov add inc lods outsb add cli adc and add and mov mov inc cmp push dec into pop add mov repnz pop dec push pop xchg adc jmp in add inc dec fyl2x aaa ucomiss sarl sbb clc notb mov dec xor or sub test fldl loopne xchg or cmp xor mov dec (bad) jbe dec add cli popf jb add mov and add jmp (bad) ss (bad) add push lahf xor adc (bad) jmp sbbb add pop or and call and hlt (bad) cmpsb jg add repnz mov rcrl ds add xchg and add jnp inc ret inc rorb push adc xchg jge xchg xchg or popa add stos sub cli into mov cs xlat add (bad) scas jl je add dec adc xchg cmp rolb leave mov xor (bad) add pop pop jle dec sub push insb mov cmpb mov ja lds xchg mov mov in xchg bound fdivs addl dec and mov aad sub add outsb sub dec xor mov aad pop xor (bad) scas (bad) testb outsb sub add insb mov push lcall dec pushf movsl int3 aad sahf (bad) mov mov es movsb add lods jl sbb mov fistpl adc jb xor int3 xchg push xchg stos fistpll js inc (bad) repnz xchg inc ljmp popa fstps or jo int3 clc mov jecxz cwtl out or push jae and ja (bad) sub push and popa ret sub dec out xchg dec pop cmp ja out popf mov push loop push add outsl sub icebp mov add add popa (bad) mov and sarb lret pushf add pop pop loop es in jo or xor inc or xchg or or dec in lea outsl xor fsubrs adc dec into fstpt ret outsb fwait lds movsl aad push mov in (bad) out or inc int pop dec std add inc pop pop adc and pusha xchg inc ret loop add push cmc add or pop (bad) (bad) fisttpll add add lods sarl jnp incl sarb push dec add pushf xor or mov pop add addl stc push and jge rcll jle,pn push fwait xor push test mov lods jo inc cltd add out push test jae mov add lea rolb fst sbb add loopne adc or add inc sbbb mov xor lock clc adcl adc or xchg pop imul xchg jmp xchg pop inc popf push lcall push push test or fiaddl xor ss int3 cs add fisub pusha cmp xorl loope pop mov cmp sub push jmp sbb test js repz dec fbld jl add movsb lret push enter popl (bad) add cltd dec dec jl outsb mov addl push das adc add mov mov mov (bad) cmp gs call cld pusha pushf cmc imulb push mov cmpsb mov ds rcrb flds add cltd out mov inc add cli aam popf mov icebp imul pop inc add add rorb outsb add call mov add and pop das pmulhuw sarl or ret (bad) scas push loopne inc pop outsb int test inc inc (bad) jle repnz pop xor lret aaa jg cltd add shrl sbb cmpsb imul mov xchg fadds nop dec loop mov cmp jno test mov push push add sbb add xor jno stc add dec shrb xchg out movsl mov (bad) add xchg movl bsf sbb add jg mov inc scas push add fnsave out sub dec cmpb cmpsb mov stos push cmp push pop sbb ret push js test add or add xchg push fstl pop sub pop jge mov mov or imul rorb add (bad) and rcrl push (bad) mov and pop aas repz add sub stos inc sub sbb cs imul arpl rorb (bad) in mov ja pushf je mov lahf scas rolb jb cmp pusha sub enter cmovne mov scas ja out loopne jae add movsb pop and mov icebp std in repz (bad) into mov cmp mov fidivrl xchg mov push aad push in pop push dec aaa and lds and or add aam add nop mov jns add pop or addb jl push test and inc movsl pusha push lahf add test mov add xchg add cmp sub jns movsl push jl add rcrl push adc sbb aad aaa cmp add pop dec push xchg (bad) addr16 popa es rcr repnz xchg rolb push sbb in int3 ja aaa dec add dec adc (bad) out adc push shrd stc movsb add cwtl xor or xchg add test add jmp (bad) ja scas xadd xor add ret xor int imul jno cmc fidivrl ret push xor jnp les add xchg (bad) xor xchg xor (bad) movsb (bad) in xorb add push xchg sub aas cmp out ret outsl add inc stos mov pop cwtl add aad test pop dec add mov and and stc adc (bad) out sbbl lods inc add shrl add jp orl pushf icebp jne add dec adc stos test xchg popf rclb repz scas mov sbb mov outsb push inc outsl mov fnstenv (bad) ss xor cli (bad) out push cld sbb mov dec or jecxz mov enter mov fs (bad) lret sarl add mov inc add mov (bad) mov xor cltd mov xor (bad) jns pop xlat mov push or xchg jnp mov out arpl inc pop add test xor (bad) xor jbe and pushf mov add push jmp add or dec sbbb jmp js rcll jne test xlat push inc add adc out cmpsb xor xor fistpll inc or jnp faddp sub adc pusha add sub xchg lods ja,pt ds sub cld sub sub mov ss and lahf and test add xor pop adc dec movb and rcll insl fstpl sbb push sbb iret dec push ljmp cld fmulp add jge cli (bad) hlt mov cmp add push and lods push call xor das sbb hlt bound jmp cli xorb (bad) xchg js mov push ja xchg mov rcrb ficompl mov xlat out out dec addl je jo es ds test add int lret pop mov gs mov cmp fs or mov adc jp inc add (bad) lcall add mov popa and inc add call adc xchg and add (bad) loop (bad) rorl inc xchg sbb hlt mov adc inc pop add jmp addl cwtl iret mov adc in sbb sub scas mov add or lock mov or pop xor mov jo push js cmpsl mov aam sub scas add fsubs test or add loopne pushf jae push iret add mov push aas (bad) jge add pop xchg push add imul sti in adc inc inc mov addr16 xor popl addb add jno into push jecxz clc cmp ret jb nop pusha loop insb and outsl sub bound cmp xorl loop cwtl cld (bad) sbb incl push mov dec mov aad add cmp jno popa cmp ss stc mov test mov mov jg mov mov frstor int xchg add arpl sub jb lock jo mov mov arpl sub in add add push adc (bad) je add cltd push pop and sub leave sub mov add sbb arpl mov inc pusha sbb std aad add and push cltd push stos add xchg imul push adc dec cmp into mov cmc iretw mov sti xor mov pushf push ljmp add xchg mov fidiv and scas rol inc pop add (bad) cmp pop pop push clc lret or inc cld (bad) aad pusha jnp dec xchg sti in add add mov or lea or inc stos ds fidivr pop or push add mov mov (bad) jp cld jg dec adc int3 push dec cmpsl arpl in sbb rcr add (bad) stc jbe std ss mov adc fwait xor xor sbb frstor inc inc mov add mov (bad) sbb in pop or push push repnz push jnp mov mov outsb orl rolb mov mov mov add xor incb mov xchg stc js je shrb daa or aas roll jle outsb adc xchg out cmp (bad) out fs mov ja jecxz repz es enter or add pop les scas cmp dec jecxz jp int test es cmpb sub lahf mov ds inc clc xchg pop cmp and stc add cmp lea and jle das mov stos add out (bad) lods mov add mov adc ret sub jne push mov movsb cmpsl mov psubsw stos lods mov xchg movsl call mov test push insl pop mov lods std push xchg orb adcl js mov add cmp sti jl roll jmp push lret fbld jl jge cltd add pop add lret add pushf xchg sub xchg fcomps mov jne stc pop cmp lods fldl in pop xor in push insl data16 ret add rcrb add iret mov push aas and mov mov add and adc mov lret jecxz push fcompl outsb hlt inc dec (bad) add or pop jg pop adc mov add icebp es jl jmp and push (bad) mov add jmp jb dec mov or std cmp pop push subl jecxz mov sahf adcl inc das scas xor cmp and decl andl arpl out iret pop jmp jae add aam mov xor jp add or and jl nop fstps inc mov negb pop sbb pop loopne call rolb mov (bad) int add sbb xchg aad aaa addr16 push xor xor and push mov sbb popa sub icebp xor (bad) dec (bad) or sub add dec int push add roll pop subl fdivs leave mov lods imul mov test mov inc push xor sbb xor pop dec add (bad) fdivrl cltd orl loope iret ret pop lcall fisttpll push stos in movsb cmp sbb jo mov mov add lcall and jno push orps xchg inc xchg or leave jmp sbb sahf out into inc sub ss jl push mov notl pop sbb fistl inc cmp bound push or inc dec add pop outsb cwtl iret sub test sub add push add jl popl arpl jg cmpsl cmp lods cli (bad) xor or cmp push mov xchg inc push sbb add jp xchg add aad xchg add cmp and sar sub mov test push cwtl dec pop insb jl push in ret jae dec out (bad) push adc clc (bad) outsb js das roll adc xchg loopne dec popf add icebp pop pop sub add sbb adc das je add mov add pop insb pop sub lret subb mov add sbb mov loop mov add fiadd (bad) add fdiv int xchg xor stos leave sbb mov in sbb add add mov ret add xor xor imul sbb mov add jb mov pushf mov or pusha into mov mov dec fwait mov idiv and push jo jbe or jle jp mov adc mov push add or lods insl push add dec sbb adc rol add add faddl push int3 inc jle pop push enter movsb inc cmpsb (bad) ds (bad) mov roll jmp add bound sahf mov in ret push lods aam subb pusha jo mov into dec ja jnp (bad) testl mov dec sbb ror xchg (bad) mov fild adcl lea lods adcl xor add and push add sbb push add push sahf pusha add movsl (bad) push loopne pop imul call pusha jne roll inc dec mov jae xchg arpl add sbb add cmp in inc push loope rorl pop add mov jmp lea add mov lcall xor inc in stos push and pop scas andl adc insb outsl push clc mov lcall dec sub pop inc (bad) hlt xchg xchg cmp mov nop push mov sti add int and or movsl loope out fdivs sub xor pop dec lcall mov pop jl and sub loope aad pop and xchg insb xchg inc lods and mov outsl pop add outsb pop dec pop stos popl iret or mov cld pusha jb dec cwtl lcall ret shlb xchg dec std jnp cmc mov pop addl add cmp xor mull pop mov sub xor push sub aas sbb leave push pushf enter push stc jb incb mov jo in pop cmp add enter fnsave js jno jg mov jnp jo xchg mov add movsb (bad) cmp cmpsl and inc out cs sub call xor sbb ret pop (bad) or ljmp repnz sbb scas xchg push or xchg push scas aad xor cs add mov or xchg insb daa and pop xor ss les adc mov pusha fwait sbb adc mov mov sarl push (bad) mov subl repz adc test arpl add jmpw push pop and adc ret cmp ss andl outsb call sti rcr bound adc pop push les dec sbb push xchg push enter hlt dec sarb add fldl push add push imul or clc mov add jne fnsave xor nop popa adc and dec loope sub (bad) mov adc call pop add aad daa jmp mov popf xchg and pop push add out loope daa inc add pop sbb adc sub add roll xor cli add imul add int loope out fwait pop mov add or arpl xchg jmp popf adcb xor es xor popa or jl insb sti mov push cmp and xchg loop mov xor dec andl sbbb outsb bound add pusha cld scas inc mov int mov adc sub sbb (bad) xchg cltd pop (bad) mov push xor adc adc int outsb ret test mov mov mov ror aaa outsb orl dec jmp push jb (bad) add call push push add pop popa out add insb lret popf nop add jge mov (bad) pushf in mov xchg in loope mov push jnp add or rolb pop (bad) lret cmp sbb push (bad) push jnp fsubrs and dec mov adc jle imul icebp andl push mov das loope imul lahf sub inc xor jle push dec xor xchg add ds clc lock int jle and pushf push sub orl shrl add add subl or and or jmp dec lock jo dec mov cwtl add mov inc sub cmp pop sarb icebp jmp push ret arpl sub mov rolb icebp dec std mov inc xor test cld in cli fwait ret pop mov xorl out sbb incl cld insb fmulp aad sbb hlt in (bad) lock test sub cmc cli sbb lea cmp inc xor push inc mov pop mov sbb stc add adc jge nop sub (bad) fadds sarb sbb mov push or sub add insb repnz in mov add inc nop push sbb add cmpb add push and mov inc inc pop js add add mov movsl and pop mov pop push jge inc inc adc xchg xor add cmp inc jno add fsubrs fisttp (bad) ljmp cltd jmp mov push jl mov add nop data16 (bad) out push xchg sarb leave (bad) icebp add cwtl aaa mov (bad) ja (bad) cli aas xchg inc mov fimull add jae add push pop sub inc xchg add lods mov add mov orb cmpsl pop cmc movsl rclb add sbb icebp adc dec and xchg test pop dec cmp mov lea jb daa adc add sub adc sbb jae jg rolb aad push orl ficom outsl add fs pop sbb mov pushaw arpl test stos pop inc xchg lea xor ljmp xor jo add popf add (bad) cmp add xor ljmp inc repz add cltd lods add xchg mov cmp cmp add inc icebp lock dec add inc pop cmc jnp data16 lcall cwtl adc xor stos fild or (bad) push and mov (bad) push cli add inc ljmp dec int sbb enter cmp or add out jecxz jo fcoms fadd lds stos fimull adc js sbb lret pop loopne xchg mov insl and add loopne lret jg stc outsl dec pop xchg add xchg out adc mov jno mov (bad) add jl jmp cmc add or xchg sub (bad) (bad) jno jo negl add pop fnstcw xchg sti xchg xchg push mov (bad) insb aad sub jno pop jg roll adcl sub sbb ds mov mov add rcr cmp notb inc scas jae sub into shrb cwtl fwait xchg push fldt (bad) pop sar add jo add cli int3 incl push shll frstor add pop add add out push push jl,pn add fisub js xlat mov add inc jnp outsl aas dec add xchg roll add mov and out arpl out mov xchg addr16 iret std in dec add ja inc sti lret or mov sbb xchg lods mov ret dec sahf dec stos add rolb and repnz add dec pop repz dec notl xorl test add xchg outsb cmp jo mov jecxz add out pop add bound cmpl movb pop xor in jne cli dec lcallw add pop jecxz lret add pop loope add push xor add push lock xchg xlat fsts lret mov adc sbbb mov lods flds cmp data16 jb jge leave ret fwait push subl cli mov mov jle add into mov xor xchg dec in or sub sub and jae add stos and les fs insb sbb mov add adc in add inc dec adc fcompl add pop xchg jb pop movl hlt inc addl dec mov inc mov imul and inc sti add xchg sub mov mov jb xlat xchg sub test dec mov push sarl lea adc add (bad) int jmp rcr mov mov pop add outsb test inc fsubl add adc mov mov int aas jge adc call je mov enter push inc add mov lret cmp or lea aaa ret wrmsr adc jp jg fcomps or mov ss std sbb insb movsl ror add pop pusha neg pop sahf add push pop pop add stos sahf pop fiaddl inc dec js in cli jecxz mov mov (bad) push (bad) xor add dec aam pop in (bad) pause int sahf mov icebp inc add andl push mov mov xchg (bad) cld outsb jp loopne lcall add mov xchg add jge cmc xor imul add outsb push xlat (bad) ds sub inc pop shrl add jle outsl jg pop xor das fs push mov xchg mov cmc mov add nop push test sub pop mov ss call pop inc fadds (bad) insl xchg pop stos or mov repnz test jo add xlat xchg xchg and dec xchg sub nop adcl push cs dec xchg push jle rolb cmp stc jbe push pop pop outsl and push ficoml call pop ret adc xor cmpb add das adc imul xchg out inc cli cwtl hlt mov xchg pop sbb imul xchg jl mov add add add dec ja pop push sahf scas es orb cmc push nop rorb lock push fbstp push sub enter popf push das mov xchg mov sbb dec jbe jae ret cmp push mov imul pop mov (bad) push push push pusha add addr16 std pop adc mov inc push sub lcall xor dec cli call mov shl push add addl mov stc adc fdivl andl js xor inc add call jne add aad pop xchg xchg addr16 and xor add sbb stos adc insl andb scas sahf xchg jno push dec xor dec lret cmp or jnp xorb popa clc inc pusha adc push add hlt sbb ret dec mov push outsb test mov orl inc (bad) xchg std mov iret add cmpsl cltd or aas jecxz addps fimull mov add inc xchg push cwtl add arpl add cmpb mov mov ja pop jle add sub insb sbb xchg pop fistpl jge loop mov mov iret sbb lret rorl jle lret mov and je pushf or add cmp (bad) xchg imul dec inc and pop cld adc clc into xor add imul xchg xchg cmp test or and das or adc xchg add ret add shl es add jl std add xor pop jmp in pop jge push add rclb inc loop push sbb mov cmp jae adc xchg pop in jne ljmp mov dec stos (bad) mov aas rolb jl (bad) jb mov stc mov mov jg ja xchg test test inc add loope lds mov lock or and es cmp (bad) rcr mov or push idivb sahf add jecxz mov aaa xchg and lcall test insl and out adc orl fsubl and pop insb lret add push pop pusha subb dec ljmp add sub xchg enter add mov add dec cmpsb adc push add dec loop fldenv std loope dec push xchg fwait add cmpsb fsubr cmpl aaa or int in mov adc lahf push mov push inc add mov in add dec loop lds push pusha inc stc mull popf sub in add nop imul aas dec incb cmp scas xchg mov stos sbb test aaa xchg push in outsl add adc sub adc negb sub je mov push rorl jle lahf mov inc add rcl cld jl jb mov cmpl fiadd stc scas adc inc add les jne pop push mov xor dec xor imul mov or lret adc sbb pop inc and add inc lock lods sbb push test mov out mov xor in inc add pop mov rcrl daa js dec add cmpl add mov cltd add movsb iret inc sahf fwait roll mov (bad) in add xor add int3 adc sbb cltd data16 and sarb push add or jle inc xchg add inc xor mov add stos xchg adc xorl aaa xchg mov adc add and inc cltd xor pop add xor lret add add lahf or sbb mov mov add in cmc movsl outsb call cmp add sarb mov sub push cmp push sub pop add lods notl mov and pushf sbb sarl push jecxz in dec cmpl loopne aaa jmp subl in and inc outsb add mov add adc test test mov add sahf int jb add fnsave xchg jmp aaa lret mov mov pop lds xchg ret or das or popa xchg pop cmp stos jns in adc jae add imul mov ret cmpsb cmp imul xchg pop cli js cwtl add jb pop adc imul lock imul add incl pushf sbb sub adc fwait inc js cmpsb xorb lods push shrl daa jg pop xor cli mov adc es dec add hlt lcall jg inc xor lds mov pop mov aam add cmp test fdivrl movsl mov xor icebp adc in push jge out ljmp add cmpsb xor pushf ljmp lea sbb sbb stos lret adc mov mov pop pandn psraw push dec es xchg add adc (bad) std cs xchg repz add cmpsb cmp into pop out daa add aas mov dec add enter pop xchg movsb xchg push mov jecxz jg inc xchg add push mov out xor and loop pop clc add inc adc push fcomps out in mov jnp add dec dec mov add jmp sub add (bad) lahf fs sbb rorl xchg push add jno and cmp ret je std push pop testl mov mov (bad) jne fwait lcall movsl inc sbbl mov push mov mov pop pop xlat or in out push js fadds mov inc dec testl xchg test scas add ret sub movsb and fadds mov push xchg pop add cmp outsl dec pop xor push js or jae cmpl dec jbe lea add scas xchg or add lods pop mov andl inc cmc cmp (bad) or mov or pusha pop outsb loop bsr push ret dec cli adc iret xorb dec jl cmc add add rolb fs xor imul add fisubrl cmp lahf js mov add outsl cli and ja inc nop cmp andl outsl fs adc loop (bad) cmp mov cmp js,pt ja loope push insb movsb icebp or mov inc add roll xchg inc or aad push pusha jecxz lret mov dec aas or xor add aaa lcall lods fisubl cs test pop add add push mov (bad) dec mov inc idiv in cmp lods add cs imul out pop add icebp fistp and push dec mov mov xchg sarl xchg dec push xchg and pop sbb push xorl pushf aam jo dec adcl jmp (bad) adc aad dec and push add cmc jl inc pusha scas or sar je xchg fnstcw add jae andl movb dec enter add paddw ret and pushl jb cmpsb lahf pop or aas mov popl xor mov je push add sti lock negl pop and add into xor mov jge cmp scas add dec mov add jns popl sub or int mov sub faddl lods enter imul xor inc xchg test not ljmp lods mov dec es leave xor add mov data16 aas pop addr16 xor inc fmuls add in outsb incb mov adc push cmp add jne stos add add add xor xor in add and jl addr16 add lock add sbb inc jbe add in adc mov ja iret and clc pop dec je (bad) andl push jno sti xor pop je dec std add outsl push jns mov jmp or inc dec ret pop roll push testl fisub xchg cli xor out dec lahf rcrl in xchg xchg inc and cmpsl mov (bad) fildl inc or insl add cmp add jns out ja andl jle mov lods sbb xchg push addb es mov aaa xchg dec mov mov cmp jle adcb adc pop add fisubl add fildl dec les mov add push pop icebp jo cmpsl jl add pop mov add sbb cmp sub jno sahf addl dec daa add fild add push push sub push out lods test je add out push adc fs mov cmpl add push outsb insb cmpsl dec push das push jp push faddl pop hlt mov shrl cli jmp leave jne push in hlt mov mov xchg test rcll sbb push cmpl add jno add inc in imul pop mov add loop or xchg add std push sub inc fisub aaa into cmp xlat add cmpsb jl push xchg pop push (bad) mov aam lock hlt pop lods add xchg loopne mov mov test mov jg xlat xor clc loop test cmp insl sbb incb sbb fdivl mov popf lcall movsb pop das add sbb mov xchg subb in add mov pop int jle mov mov loope adc jae push sbb mov enter mov daa pop push fsubr or js std sbb inc adc out cmpsb xchg hlt push add xchg add imul ja in cmpsl out iret addl ret mov (bad) loope xchg pusha (bad) mov jl andl stos add cltd std mov mov jle xor fild push push int pusha ljmp mov inc lock dec jb add mov sub add jo test mov rorb jle push out fs pop (bad) mov addr16 mov adc sbb cmp mov ljmp or cmpb mov jb add lds rolb movsb lret call pop sbbl or jno test add shll pop adcb loopne cwtl test add (bad) jge jl add jne mov and xchg test daa and add xor cmp sahf cmp test cmp cmc or enter and rcrl pop xchg inc pop pop adc popf xorl cmp call pop popl imul xor and repz xor rolb jne mov lds adc xor cmc dec add jecxz jmp ficomp insl inc sbb adc or xor xor in xor add mov subb int dec out add sbb pop ja add repnz out mov inc (bad) repz loope xchg icebp jp pop mov jmp xchg jae xchg or adc adc jp ljmp xor arpl cmc add or add add fisubl jl mov fwait movl xchg pushf cmovns adc adc fstpl or pop lcall xchg lods les pushf popa cld add mov adc sub ja pop lahf xor clc mov (bad) fsubs xor jbe jne clc dec iret sub lds ret cwtl xor adc (bad) lcall pop xor fwait lods cmp hlt xchg inc stos and dec mov out loopne push (bad) sub negb sub jmp test sarb (bad) jne adc mov lea add imul jg andb addb out scas (bad) icebp add inc sarl push cmp mov xchg add js sbb ret push jnp add pop inc cmp sbb inc mov repz adc sbb out sbb fnsave stos mov xor pop inc shlb push and pop outsb lds arpl jl push mov les pop and or add popl aad push xchg push mov mov ja daa mov add popf ljmp aas icebp xor add mov lahf push call add fucomip fisub (bad) popf xor loop mov mov add or cmpb in sub xor add cmp pop je add fcmovnu popa addl dec mov js rcrl push sub pop xchg add mov cs repnz mov sub flds mov sbb xor stos jb add cmpb mov popa fwait xor push xchg addb inc data16 sub ret jg add imul mov mov add add in mov adc andl sub arpl out mov add xorl add bound cmpsb shrl inc cmp dec add daa adcl mov popf jnp push out pop mov mov sub rcrb add cmp mov pusha pop rorl pop jecxz xchg mov flds and push pusha outsb insb inc add cs stos dec and rorl push add push sbb or add cmp push pop sbb add xchg push fsubl fnsave movl push jno,pt sub rorl add mov cmp and pop inc insb jecxz add and in adcl addl pop popa pop xor cmp mov scas push add and lock rorb inc incb out inc aas lods jbe add mov add add sub push inc and push (bad) xchg lcallw cmp xor pop insl loope les inc mov or mov dec nop and leave cmpsl pusha js mov (bad) jb repz inc cwtl mov stos in cmp add lock push mov ja imul push ds andl mov mov rcr mov iret lods pop inc add scas pop out bound mov arpl push addb popl xor sbb adc pop nop jbe xor lret add mov xor pusha mov cmp and rolb add inc xchg (bad) or sbb fldt add pop and and mov into push lock xor out add xchg add addr16 add dec mov mov lock adc insb push std xchg pop pop inc int3 incb mov and mov adc pusha mov jge sbb xor mov adc xor adc dec add test mov mov sbb inc es ret repz loop jo inc sbb scas jg add cmpsl jbe fstpl cmp cli inc adc sub add out inc enter pop add stc int3 pop push sub sbb sahf repnz mov jp xchg cmp mov jg enter sahf fstps push ficom ret sbb add fsubs and xlat adc popf orl enter sub add int3 fdivs hlt push xor fimull pop stc (bad) leave mov add mov (bad) adc (bad) dec xlat jp cmpb imul test pop add inc mov mov cli add shrl pushf je inc or aam add stos pusha mov and push cmp cmp cmp push pop roll or aas addr16 xchg pop pop push jmp mov dec add inc aam addr16 mov mov inc stos pop dec add mov mov push add mov sub test lock adc push and push popf mov add xor mov sbb in cmpsb jbe mov cmp roll sub and je inc aas xchg or jns mov sti and mov add es fwait xor xchg jl imulb xor mov clc jle add ret notb mov jb jg aas adcl andl or enter and fldcw lods and push mov push sbb xor add int push mov xor dec clc testb or jbe xor inc cs aaa add leave clc add pusha push out popf adc (bad) mov mov mov cmc lret jbe push (bad) inc daa cmp and xor dec fiadd fild das pop add lock gs lea add push mov jnp dec jns (bad) push adc ret mov mov mov fcoml sub subl dec and inc add xlat lea test mov xchg adc mov xchg adc test aaa and xchg jp (bad) pop pop push lahf aam ret std and mov dec int3 pusha dec out adc (bad) mov scas inc cmp dec fiadd ror popf xchg sbb or add test jg imul in pop ret add pushf ror cmc inc pop push pop cpuid mov mov xchg inc push data16 stos (bad) hlt add push and mov popf arpl xchg aaa push mov inc cmp mov push jg pop in pop mov aaa cmp notl jbe xchg inc cs (bad) mov push aam mov jge pusha add pop ret adc sbbb jb xor stc adc add add cmpsb add jno orl dec jg aaa aad faddl cli imul sub out mov ljmp pop les jne pop js add sti loope cmp aam push popf push add or adc insb add inc push push (bad) scas add mov iret enter add test push rcr inc sarl ss lret (bad) mov shlb jge mov xchg dec mov push pop adc cltd in mov scas pop inc adc aam sub push push ret sbb fimul push cltd add bound push testl push jmp inc orl or inc js add ret and movsb (bad) mov mov sub sub movsb lcall dec inc add inc xchg push add fiadd pusha jl imul add ja scas imul add mov lods (bad) sysenter or into das xchg inc mov push aam lock xor mov jo xchg out cmovnp ret je fldl rcrl imul ret mov adc int cmp add sub loop xchg out add xlat insl push inc fisttp add mov pop mov lods leave (bad) push addl push shlb call ds iret cmc sbb inc add jg jge repnz outsb pusha stos (bad) int3 xchg scas add or and add mov imul mov mov add sub xchg mov jno add jmp jmp add jg or dec xlat cmpsl add inc inc mov fsubrs and jae addb fs jo sbb enter pop jecxz xchg je mov mov fadd jbe add jne xchg inc jl ret outsb or sub icebp jle scas add mov and int add popa test pop xorl fs lock shrb lret enter add (bad) xchg adc out pop jg sub add (bad) and mov test cmp clc adc add dec mov call sbb xor sbb xchg inc popl je jns mov and cmp jae mov xadd std lcall ljmp inc arpl and or lahf add dec push aam call inc (bad) test push rcll add insl pop sub lahf mov and add adc bound xchg xchg (bad) aad mov mov outsb loope add mov out push imul mov inc mov fnstcw lahf mov out sub popa clc push cs scas lods inc pop cmpsb orb inc sbb ja add pop movsl cmp (bad) pop js add jp mov adc nop cmp leave subb arpl fcoml sbb int mov and jp push scas arpl mov shrl insb sbb je adc cmp je jne xchg inc lahf aaa loopne andl inc test ret dec cmp mov daa adc mov add add repnz lods xchg adc popl mov subb rdpmc mov fs add dec mov fs aas jne sbb push mov push int3 fcomip push push mov push mov arpl mov inc cmp cmpb scas fadd cmp jp mov add push inc pop outsl ds xor add or enter xchg inc (bad) mov adc or push cltd push pop sbb adc inc inc xchg xor sbb add pop frstor add dec (bad) push inc addl cmp xchg imul (bad) jl pop out insl (bad) xor mov bound cmp jge data16 mov imul push dec and fldl push pop aam mov fwait ja and je push sbb pop add mov xor test iret cld pop mov xchg loopne xor add ss sub push (bad) out sbb in add ds cmp icebp add mov rolb inc std jmp pop mov jg add mov scas icebp cmp add sub ret enter (bad) popa imul xchg add push ret pop xchg aas cltd mov mov jmp std or (bad) aam inc cld lret roll and sbbl mov ss xorb cmpsl (bad) xor inc mov jne xor mov dec (bad) xor and cli cmp outsb pop faddl inc daa or scas enter or adc mov (bad) pop add inc lret push leave mov jae or clc das inc in dec cmp movsl inc add adc mov std icebp cmp and lods add mov fmuls lds add dec sbb add mov (bad) xor lods add leave sarb jge add adc outsl pop inc jnp inc and out inc clc add fsts ja xchg pop xor ret das pop sbb loope enter xor jl push mov inc add mov push cmpsb ret test jge push add xchg adc jnp add out dec fmuls jae xchg xor or jo push add inc and jmp adc add mov cmp dec mov jl lret or sbb ds mov je dec fild in js fcmovb xor jno orl add pop icebp xchg adc xchg mov ljmp sbbl into inc insl xor les aaa lret and add leave jne dec gs lcall mov push test xor into xchg dec mov add push cmp xchg jbe fcmovnbe sub push add or mov jbe sbbb in cmp jmp fdivrl dec sahf add clc or add fcoms mov add sub pop lock and xchg pushf and jne mov or add inc jmp jno icebp add sbb data16 ja adc mov inc jo cmp add lret pop adc and add js pop out addb xchg jp or rolb (bad) mov mov mov lfs xor cmp pushf pusha mov sub inc sub and cmp outsb popf lock aam pop push dec xor jno imul fist pop add xor pop mov stc cmpsb or sti push xor mov inc roll sbb daa sbbl xor pop aaa frstor je rorb dec in rcl adc cmp or nop cmp inc xor fiaddl mov and add cltd inc sbb mov or add add add or add xchg insl or add orl dec bound (bad) jge inc outsb (bad) out push xchg pop repnz jo js cmp (bad) jle or cwtl inc clc icebp pop sbb leave pop ret (bad) repz dec sub add insb push xchg ja cmp bnd push xchg cld leave xchg pop mov add xlat ror dec sub add (bad) or fsubr ret test in push add clc pop out add aas pop std (bad) outsb subl push add add dec sahf pushf fbstp orl arpl push andb xchg mov sub outsb (bad) mov das jp lret mov enter jo mov mov mov pop lret daa ds add sub jb add push mov (bad) das sbb cmpl or shll leave sbb testb popa in test sbbb dec cmp pop movsb add push push sub mov xchg inc adcl popf cmpb aas inc add ljmp add pop adc inc sbb jle stos (bad) push incb add scas ficompl jecxz add push in cmc lods cmp push inc stos pop add xchg lret fwait pop xchg jno dec and pop inc gs xchg or repz outsb or mov xchg cmpsb fsts ret xchg repnz enter nop add sub cmp popa push mov xchg add fiadd mov jo and and dec insb aaa fcomps mov leave popf cmp ret cmpb sbb add dec cmp and out add int addl push out dec clc and sub fs mov imul dec in movsb mov jo add sub dec outsb pop or adcl xor jo sbb out leave fs shrl orl or jae add sbb flds mov mov ret mov jne mov push ret mov pop popf add fwait rorl jb add (bad) outsb push mov add cmp jmp and xchg lock push or stos jo jge fsts lahf stos call mov xchg inc cmp sti and loopne ds pushf daa loope dec stos add pop push xchg out ret pusha mov push push incb cli xchg and sbb divl repnz ret mov pop add pop sbb cmp and rclb repz add ret sbbb lock inc movsb insb xchg pop cmp (bad) es sbb pop adc lea (bad) rorl cmp mov add out sub orl push cld push out jl roll add rcrb mov jge jg xor jne cmp sbb inc pushf fidivl and movsl add (bad) hlt xor xor pop and sub outsb dec clc js add aad scas idivb push xchg xchg adc daa and mov (bad) sbb movb scas call mov mov rcrb mov mov jge bnd ret cmpl fs fild mov clc dec xor sub jnp sarb xchg lcall loopne push add push inc cmp pop (bad) add repz in add mov jg test add xor inc add mov sub jmp ret add ret mov lods jb aad lahf (bad) std add sub (bad) popf mov add lock or jl xchg orl in and jne,pt lret loopne stos je xor add lcall movsl testl cmp js add add std pusha mov sub or mov jmp or sahf and sbb or loope xchg rcrb hlt push sub jne cmc orl mov xabort adc ret rorb sub push adc iret jae xchg jp call cmp mov dec jl cltd pop add mov push xorl fnsave add stos lret sbb sub xchg cmp inc mov lds sti mov push insl add iret js add out std mov xchg pop lods cmc jno dec loopne push or ja out repnz sub sub jae in ds add cld sbb push test popa les es add pop leave jae add xchg sub xor lea add sub dec pushf popf imul sbb gs inc test sbb inc arpl ficom and dec sbb popa fcmovbe es lods repnz jmp cmp xchg (bad) mov pop jnp xorl idivb and push or pop xchg pop sbb jno bound pop jge enter repnz add push xchg adc jge add jp push adc test add add push jbe add test push add outsb fmull fstpt mov add movsl cwtl inc leave mov test and rcrl jb add mov ss add je stos faddl loope cmp sbb jne or mov gs mov cmc fwait les add adc dec xchg pusha xchg fs push xor out cmp sti cmp or mov sbbb (bad) xorl add scas pop inc push and add (bad) mov fstpt jnp add out mov adc aas xor and ja call loopne stos in jmp (bad) enter addb pop add inc mov in push fcoml push add xchg stc add sbb je add push dec in adc jge add dec push outsb mull dec (bad) mov and int enter outsl lods cwtl mov test pop jl popa xorl sub icebp inc jmp fldenv cmp xchg or pop popf test (bad) dec add (bad) movsl (bad) jne jg add push std in ja add dec pushf pusha insb inc mov inc gs xchg sbb push jl jae add or mov cmp add daa jecxz add cmp and add cmpsb hlt xor xor mov rolb mov lods sub data16 pop fsubrs push xor inc pop xchg adc add xor mov add and in cmpl and cmp xor imul cmpl push fs repz mov xorb jbe pop pop jl testl xchg mov add pushf je add rclb mov cltd jnp cmpsl lcall scas push cmp stos and jnp xor or (bad) mov sub jb dec sbb add pusha lcall dec pop jbe fild out sahf sbb xchg rclb inc bound push test loope (bad) mov xchg pop sub push jecxz,pt xor and ja int movsl add lahf aaa jb or sub fs xchg xchg dec jnp add xchg jmp or call push adc and clc adc add add sbb bound call mov dec add add xchg add enter mov out fadds dec ja push fwait jecxz mov faddl subb test loope add inc jmp mov inc xchg mov fstpt add xor pop xor mov sub and (bad) in add sahf ja sub jp inc sarl jge bound push add mov xchg fsubl xchg or out cmp add decl scas mov pop cli add xchg mov leave fwait incb mov dec stos jo xchg xor mov je adc loope push popf mov inc inc adc or or dec cmp add addl add mov add or push mov and dec cmpsl push add push sbb cs outsl cmp shll push mov push add ret add jl popf fs mov hlt lret shlb inc xor inc cmp mov nop inc mulb out idivl add inc jno jg xor hlt push cmp sarl cltd clc fmuls insb pop sub lea repz movsl dec imul (bad) or dec adc rorl add push mov flds lods sbb lcall and ss cld bound lret add xchg push add rclb dec xrelease sti cwtl loop add mov mov mov push xchg xor imul pop in inc call imul test xchg jl popa push fs fildl sub iret pop gs std mov and jbe mov jne jmp mov or add repz stc mov in xlat (bad) int3 jbe and dec xor in add popf sti mov adc shlb lcall push cwtl (bad) neg jo inc inc dec add das xor add adc push adc mov dec mov in jmp xchg dec sub inc add call in pop (bad) jns mov jb lods sub and dec mov jg rclb push shlb lds jno and add jmp xchg xor mov sbb sub xor notl add sub clc add movsb xchg mov aad mov jae je jle shrl add xorb add mov popf sbbl (bad) clc dec sub sub push sub add add ret lret push ss jo stc inc subb mov jp mov lahf lock mov loopne call and add inc mov call xorb bound das cmp push jp lods lea add pushf ret sbb lods out mov mov cmpsb shrl add cmpsl mov mov push jl push jns push add insl jno stos mov push mov fs lds mov push xor pop push iret inc int or cmpsl stc scas xchg aaa push sub out aas test out out inc movsb cmpsb test pushf jl int3 sbb rorb repnz push add pop gs sbb or dec jl out push add push (bad) xor xchg xchg cmp inc outsl arpl ds mov iret sub pop mov pop pop xlat xchg out push nop ds flds pushf mov add or jne cmp mov cmp dec inc jg mov add add divb test pop mov add add je call pop jns cmp dec pushf test mov jecxz out pop cmp and add cmp ficomp jnp (bad) xlat push inc or in cmc rclb pop loopne jle add mov out push xchg (bad) int3 push scas imul lods repz cmpsl pop minps inc lock or rorl outsb (bad) mov imul mov scas add xchg in or or push cwtl jo mov test xchg xchg cmc test jns pop cmp xchg sbb push inc and adc cwtl aad xor sub jnp jmp iret add cmc mov mov jl jge add mov mov aad andps lods subl inc push iret push add (bad) sti je hlt dec in and cmp add rcrb add mov push dec add movsb in shrl jb into popf cmc ja mov xchg clc and jae mov test add jp (bad) pop add outsb (bad) or adc out mov mov movsl add stc popa xchg es sub add cmp andl xor stc jo jnp inc push sub (bad) fist test cltd adcl (bad) jo dec add imulb adc sub jns add adc lods arpl mov ret (bad) in inc inc mov add xor pop (bad) divb das cmp add jbe dec add sub jno dec js jmp mov xlat hlt lock mov bound js sarb scas add stc ret xchg lcall xor lods mov cwtl cmpsb das fld pop jge add push jg jle popf sbb je xor xchg (bad) xchg xchg rolb mov movsb add jmp mov (bad) js fcompl ret fisttpll mov hlt mov dec dec addl and movsl mov jnp add push rorl xchg ffreep sahf push or mov sub scas (bad) cld jo notl rorb cmp in mov aam adc push add cmp ja mov xchg jae stos mov adc repnz std dec pusha xor mov popa pop hlt inc add xor out clc add out mov (bad) cmp aaa jo push jge mov fimull cld add mov addr16 push ret insl insb cmp add popf inc hlt mov enter js adc jmp mov fwait jb stos add add push cs mov add add mov inc leave inc and add and (bad) cmpsl loop mov inc xchg loope rolb pop xchg popf pop inc adc cwtl (bad) iret and out fdivl cmp stos or pop insb lahf enter adc xor xor sbbl jae dec mov sbbb or cmc push adcb lret push lcall insb push fwait add and add pop lret jmp push cmp mov rolb int3 sahf ja add fdivrp xor push pop push rcrb xlat sahf rol jmp fnstcw add leave sub call lret sub lds jmp inc nop ror xor lret xchg inc sahf or mov fmul pop push sub (bad) pop mov xchg mov lock cmp cmp sbb push mov jecxz addl mov inc das cmp push sbb inc imul push nop fist fcmovnu adc pop jo call lea (bad) nop/reserved mov fnstsw xchg or add nop mov test sub or cmc add ror pop shrb adc div inc pop xor xchg adc ljmp pushf add icebp dec push rcll je psubq fisubr xor ljmp dec sbb outsl jg scas inc or sbb mov push enter scas mov daa bound addb movsb adc es add in arpl adc fmuls bound sbb xor cmp (bad) je jne add lcall lods rcr je insb clc ja add cmp pushf cmpsl adc xchg xchg xchg xor xchg sbb (bad) mov inc in push add (bad) mov cmp je fbld pop xor hlt add push cmpsb jg ljmp sbb ds dec add rcrl dec repz repnz mov cmc hlt adc (bad) (bad) jg jo adcl nop or add and loope mov xchg or out or fadds inc fwait pop (bad) ds mov cmc mov cmpsl xlat pop lcall dec scas xor jns jle scas movsb nop (bad) mov mov rorb or sub dec outsl sub imul stos sbb fsin add jns lods inc or cmpl in push clc push or adc leavew mov push adc jge cltd cli pop sbb xor std jecxz or lea add out mov ret push jp push sbb mov roll sbb push add add mov adc test adc mov outsb xor mov add imul mov out or or icebp insb jno sbbb lcall pop xor push mov fildl repz jl lods pop nop roll das jb js jge xchg repz pusha cli xor and and sbb pop mov pop pushf inc imul lea jge push cmpsl and orb xchg out xor add pop in rsqrtps ja pop loope adc cmp sahf ret sub mov adc (bad) pushf cmp mov add push mov popf in inc fnstsw fiadd popa pop in pop pushf aaa mov inc loopne lods push pusha sahf (bad) mul add sti push push cmp xchg in push jnp add xor fidivrl clc add int lds std ficomp out sub mov jle mov cmp test cmpl fs aaa add xchg outsl jle dec or add inc cltd add cli mov xchg pop inc mov insb (bad) sarl dec nop (bad) neg inc add xchg cmp jge ljmp adc jp mov outsl pop sbb jae insb rcrb push out mov jecxz insb int3 mov sub outsl dec pop and push add add (bad) push push push inc inc inc imul lds call ss jo,pn push aad ret (bad) ja push cltd out lds xor lahf lcall sub loope and cld xchg adc mov xlat ljmp out fstp push cs int3 add test repnz jmp jno xor mov xchg stos pop lods fiadd push and in popa inc inc leave add mov jbe add or in loope jle push mov xor out pop pop fnstcw call mov ds push jnp mov stos jno xchg ljmp mov add jmp in jge xchg daa push ljmp cmpsl add or sub xchg (bad) push mov inc call (bad) out sub or (bad) loope inc stc test mov rcrb push mov flds (bad) insl jp scas pop xchg andl arpl sbb sbb daa andl xchg call add out daa add pop (bad) cmp push adc push add dec jns cmp inc push mov stos add xchg mov aam add sub cli or aaa or xorb addb add xchg imul adc add cli test lcall ljmp repz push das sub faddl sbb pusha and punpckhbw cmp mov ret fisttpll or les jne cld mov cmp rcrb add ret pop add imul mov (bad) dec and imul pop repz cmp sbb mov outsb sbb mov adc add in int (bad) sub cmc sbb aas mov push and add lock (bad) dec (bad) incb lret cld cmpb push lds cmpsl repnz add rclb int add outsl int3 inc add in aaa cmp and (bad) dec inc sub (bad) lock sub cmp add mov xchg mov add inc mov icebp popf nop jl or sti add test (bad) sete mov addr16 cmpsb lahf add ret jnp pop dec push subl jbe ficomp add movsl jmp or mov add cwtl (bad) hlt rcrl js movsl popf adcl inc cmp mov xchg in xor add pop pop pop mov dec add (bad) pop out adc add or in movb fist push into xchg cmpl fs loopne push xchg popf jo mov scas (bad) jecxz mov flds les add pop sub jecxz cmp and xchg imul (bad) fs inc pop and cs lods mov push cmpsb rolb ljmp mov lds pop mov inc and add popa in push lret add inc mov cli int sbb jae mov fwait lcall incl sub mov push (bad) jo orl mov imul dec (bad) mov adc pop mov cwtl lret leave mov cmpsl ret cwtl negl insl adc cmp push arpl add dec shrb int out add xchg sti push xor cmp xor or add sub mov xchg jae pop add les andl pop cmp mov or dec add insb xchg sbb rcrl (bad) jb xchg ljmp sbb or cmc pop and ret cmp push fwait (bad) out pop (bad) pop xchg incb in push xor push cmc mov fdivrl add and xchg sbb add (bad) sub stc adc cmp add sub add add popa cli std inc mov add cwtl cmp xchg cmp cltd push fidivr icebp pop push fcompl pushf shlb arpl inc leave (bad) insb add add or rcrl lcall mov aas add scas mov pop (bad) enter push (bad) stos or out fwait pop in and imul into addl iret jge inc or out aaa add add cmp pop dec inc ljmp add push mov es fwait dec aas pusha mov push insb (bad) jo push cmp xchg iret mov add pop mov cmp dec iret adc add icebp jmp movsl push cmc orl (bad) aam out movsb (bad) cmp addr16 rclb or push adc fbld inc movb cmpsl lds mov lret out es sbb repnz jecxz je adc pop xchg in add dec add mov ja sub adc push ret jne fstpt sbb lea inc pop jle jmp sbb inc icebp add out xchg test inc mov add lahf gs cmp decl shll sbb sti insb je fidiv int3 (bad) push pop sbb xlat and pusha shl ret push ror mov pop aaa pop cmp insb std lret push adc xchg xchg push sbb add xor add enter add pop std xchg push pop cmpsb sbb outsl dec push add data16 mov aas add mov push mov les sbb (bad) add xor pop inc je add jno cmp mov sub ljmp cld pop es mov add xor es pop push xchg lcall cmpsl ss inc das in pusha sbb sahf sbb add pop mov cmp sbb fbstp dec ljmp xchg add out add sbb jnp testl mov adc mov les js (bad) cmpsl or fimull (bad) loopne add mov xor and frstor add std daa fdivrl in fiaddl loop sub mov xor mov mov dec jle pushf ja,pn jae in lods push into aam dec (bad) scas imul jbe jo pop repz cmp inc push mov add aad lea jmp and repz add xchg cli out and jle iret add mov xchg aaa call add fs rcl inc sbb mov test push push mull int mov jp add loopne push fnstsw adc mov or jecxz jne fmuls jnp cli nop test and subb movsb stos pop cld daa pop mov dec je outsb mov call or jo testb jo test iret mov dec mov add cmp push xor add fwait in stos mov add jmp int xchg mov dec cld lds sub ds outsb mov add pop push sbb popf push call xor mov clc jne xchg jo lock pop xchg out addb jbe nopl xchg mov fbstp addr16 jle fcmovne std movsl iret out loope add mov sbb adc (bad) scas jns (bad) mov aas jae add lret dec mov cmp dec movsb call pop sub out aam mov mov inc and add jne out jp push xchg xchg inc (bad) fistp jle push adc inc lcall (bad) (bad) out daa jecxz mov (bad) mov push daa push cmp add xchg fs pop mov pushf mov lods jo mov push insl push cmpsl inc dec add repnz orb cld fisubr inc jl dec scas addl jne add cld jnp mov sahf mov and cmp enter call cmpsl outsb lea adc add cmpsb stc cmp js fidivl sbb (bad) loopne push add push adc sub pusha jg stc mov dec and (bad) mov xor in add or scas jno arpl int lds fadd pop add pop lret pop bound out pop rol mov jmp lea in inc mov mov dec mov sarb outsb scas add (bad) jo push jb or cmp add loope movb outsl addr16 inc dec add mov add fldt insb mov adc lods cld insb data16 test notl inc and out (bad) or sbb sbb push test (bad) cmc inc popa into pop mov (bad) jno add jns outsb add fsubrl and or cli cmpsb push add mov jmp das xchg cmp pop push sahf test jne (bad) jmp jg jns jnp fldenv add cmp dec xchg mov add cs dec add js jbe xor nop sub push adcl sbb inc lds mov xchg lea sahf mov xor mov cmp xlat pop icebp adc cltd dec bound add out cmpsl in jp add pop cmpl pop out pop aaa data16 xchg add (bad) mov clc inc cmp add xorl test add stc and or lock sarl (bad) cmp fildl aam or adc lcall mov pop adc add pop addl inc les je and cmp pop arpl mov stos mov xchg dec add mov mov push add or lods jo pop add sub xchg inc xor iret add out and nop and cli (bad) dec ja add and xlat bound in pop push sbb push xor inc pop xchg inc add add xlat and testb cli mov dec stos jo cmpl sti fs jbe (bad) pushf not pusha push cmp ret dec mov bound sar add add out add adc sbb ret xchg inc add outsl sub jg test sbb add jno cmovs fstl in je mov mov faddl add add cltd sub rcrb (bad) (bad) add mov push xorb je pop mov mov add (bad) aaa push jmp mov fcmovnbe test jb bound fs or aas xor icebp push sub pop pop aas push inc jo lahf lea aas push add sbb cmp cli jle lods push sbb push mov js dec jnp add in imul push pusha xchg daa jae cs xor sub push in mov and mov jno add jle cwtl pop (bad) or call jmp cmp dec in mov pop fiaddl pop rorl sub mov add jecxz out std jp loop mov lcall sub icebp scas or fwait pop lret std out fstpt fcmovu jnp jmp mov add xchg cmp add adc ror jb add les add fist xchg cmpsl iret and call outsl roll mov aam add call xor lcall mov push mov fs lods dec xor and cld (bad) pop stos pop xchg add (bad) ss in add sub pop add inc clc jnp sarl test pop das mov add xor add gs mov nop sbb jle mov mov iret lahf cmp or xchg pusha ret cwtl sbb fstps imul andl out mov ret or inc add pop cltd ss mov xchg inc sbb push dec lods leave mov push dec pusha pop shrb xchg mov pop mov testl sti add xchg cwtl xor xchg pop mov xchg or ret (bad) jg lea sbb movsb loopne or ds dec xor punpckhbw mov jp sub inc mov cltd and xchg add gs outsl cmc inc dec test (bad) out sbb inc add push sub mov add movsb hlt or icebp xchg pop dec lret stos add (bad) test cmpsb (bad) in jcxz adc loope hlt pshufw and xor push mov add enter mov stos push mov pop andb loopne mov sbb dec sbb cli test notl inc and push sbb cld add mov pop in mov out cli test aaa ds pop xchg aas jmp les neg pusha das lock and jbe add dec or fwait test pop mov mov inc push mov xor sub test add (bad) mov insb nop xor gs or add xchg es aaa andb aaa pop xor jmp add leave dec adc popf je jp add inc cmc xor or cmp add xchg call arpl out mov ss xor mov cmp adc add pop dec lret add cmp mov mov inc adc dec movsb mov rolb mov mov xchg sub sbb add and lods add sub pusha xchg xor add xchg push rolb iret movsb add loop (bad) add sbb insb dec mul call jp rcrb es inc add add push jbe add rclb mov (bad) xchg mov test ret pop jns hlt add shrb mov mov and out (bad) lcall aaa xchg test xchg cwtl clc dec add ss or mov push movsb dec add dec divb pushf movsl nop jge jno rolb cmc loop mov cmpsl push add (bad) xor call shlb insb add sub adc jae add orl in push add cli je sub rcrb add jl nop lods push imul and pop (bad) xor jnp jb in test int add iret dec roll and sahf cmp push test test roll test jnp in cmp add mov andl dec (bad) xor popf inc leave sub mov dec push out rcr js test sbb add bound push pop sahf and xchg inc aaa rcrb push lods mov neg (bad) shrl test das jbe cmp mov aaa enter and xor cmpsb inc push lods addr16 call fwait inc (bad) jo test or xchg sbb push add imul or and pushf out add push and add xchg test ja data16 mov inc lea jae mov inc es (bad) fbld cmpsl mov lods add push in jnp pop andb lret movsl mov je push add or insb push fmuls pop add sub das cli cmp lods lock jbe jmp mov add xor mov in jno push lret sti jp popl mov dec mov jl push clc imul out jge adc inc cli sbb and mov xchg mov sbb aas lahf dec xlat add imul dec es pushf push and (bad) lret pusha pop jno ss add or sbb mov jg adc xchg push cmp enter mov mov cmpsl leave add mov lea ficoml push scas out test add ret ja adc adc adc push sbb mov add jno cmp fldcw roll pop mov pop add sti fnstenv cmp pop jbe mov sahf pop testb jne mov jnp add lret jle add (bad) neg xchg js insb add test test push add (bad) (bad) jne mov mov inc clc aad jnp outsb pop pop mov xchg addr16 push mov jg js add out xchg jl add int3 dec mov sarb data16 mov mov dec adc and cs cmpl sahf shlb cmp addl jmp lea cmp mov lods je inc subb add movsl fisttp add cmc xor sbb add mull stos stc cmp out add fwait clc addr16 mov and in sbb ds or into mov shrl inc in jbe sub mov gs push xchg push outsb js or pushf call les test xlat jb jbe mov adc test push xchg int xchg sahf push aas out add mov aad mov inc dec push mov test sub or stc icebp mov jmp pop call ljmp or loopne sub dec mov imul das sub dec mov inc pop push fs insl sub push leave xor ret in inc jle cmp roll leave xor mov push xor outsb mov inc jb test daa out mov popa (bad) jno addr16 and add lret add jo and push out and mov push int in sbb aam test cs fwait dec add lea dec pop adc inc outsb fld rclb add inc pop movsl std dec and imul pop adc mov in fs popa add jb sarl xorl sti test rolb int3 fs sub or (bad) cmpsl cmp push mov insb imulb daa xchg xchg scas mov out std adc jno (bad) dec and mov js xchg loope into and outsb dec push movb out jp mov mov or (bad) or std mov fistpl and out inc adc xchg fimul lds call sbb xchg jl mov scas lcall (bad) mov mov out mov insb ljmp mov pop es push xchg lods mov add jge sbb push (bad) add lahf in mov js push dec jmp jmp fisttp aad and add loop fxch cld arpl pop or mov and mov subl jl and add out sbb test lods add xor add bound in aam pop (bad) call xchg xchg daa arpl pop mov xchg out stc xorb xor std test inc ljmp lcall cs cmpsb pop cmp push mov das or pop add jb push add pop jo mov push add (bad) xchg push insl add add dec popf jnp inc (bad) fsubr sbb push in xchg das loope loop inc scas push in out add xor mov out daa add (bad) xchg lds es push (bad) jecxz and hlt addr16 pop ja inc in add jg lret subl std mov jbe mov pop xor add and bound dec (bad) rol and call inc jbe inc pop addb dec mov nop xchg inc pop mov icebp sbb adc and stos add jo add and mov loope test mov fstpt nop mov mov push add (bad) das xchg jbe mov lcall aas mov xchg ret sbb leave add lret xorb scas jp or jmp out mov mov icebp (bad) xor outsb pop sub cmp jo adcl mov add (bad) jnp cmpsb add push and aam pusha mov add sbb (bad) loopne pop jbe mov jae add adc sbb arpl dec mov inc insb push fimul movsl out les or add xchg mov dec add add add push dec add pushf pop loop jmp xchg clc (bad) lahf pop cld dec cmp nop xor jl sbbl xchg sbb jno dec push push mov bound add sub xor xchg mov push imul add mov xchg add outsl pop inc pusha pop push inc mov packssdw mov cli cmp and dec sbb inc loop dec push imul add aas (bad) in inc push mov into xor pop inc and mov int pop (bad) mov xor jne aam pop pop push inc xchg cmp cmp incb test cmpl push mov aas mov inc add js mov dec mov push xchg add inc lahf adc push add sub add sub mov inc pop jmp push decl shrl push add cltd adc mov mov std faddl in in cli push sbb loop add stos fistp daa inc sub bound sub ret rcrl inc pusha dec idivl insl aaa mov jo pop pop fdiv int add add pop popf outsb add sub leave xchg addr16 das adc cs or add mov adc loop adc push adc mov out pop pop mov inc mov sub sbb dec xor std push mov aaa dec mov js dec ja pop (bad) repz lret jecxz outsb pop stos push add or xchg ret add scas pop add mov repz mov shrl jmp xchg and xor sbb cmp je jbe jge adcl lcall lock jecxz push add dec (bad) adc inc and fildl shl pop sub adc (bad) add insb popf and cmp lock push (bad) mov xchg in cwtl jp cmp xor and js mov add dec and dec fcoml jno (bad) dec mov mov es fwait lret xchg inc mov test aad push add jb ljmp stos jp dec not push mov adc lock pusha add cmpsl push mov sbb jl add out xor jle idivl insl gs mov test xor loopne add mov add lods dec jnp push adc gs add daa xor (bad) mov pusha pop loopne adc sub inc adc push jno orb movswl jecxz add mov inc mov xor js stos sahf cld imul addl outsb mov out cmp sub sub push stos inc pop insl leave lods fldl pop mov add mov test andl dec dec lods jp xorb pop fistp mov push sub mov xor mov jge adc xor push add or insb das loope add sub add push push add sub and out (bad) ret ds jae int3 sbbl test aad cmp jns lods fild fstpt outsb xchg inc mull fldenv or pusha xlat (bad) (bad) movsb fisttpll mov xor ds xchg in and xorl (bad) sub mov (bad) clc fdivrl outsl add pop cld inc test lea push js out xchg (bad) loopne pop cmpsl adc inc adc xchg pop add idivb cmp mov sub int cmp jmp or in sbb mov shl ficompl mov repz rcll sbb jmp (bad) jo js add mov mov pushf data16 add shr dec mov jge das add cld mov mov jl add pop mov (bad) or fdivl andb sarb add jbe sbb mov jmp stos stc jmp and lret ficoml sub push aaa js push cmpsb cli mov add and jb xorl out pop std in in add aas aaa pop fimul mov mov inc add pusha adc sbb dec add mov cmp int3 ja xor icebp mov (bad) push outsb jo rolb and scas mov dec mov je mov test outsl mov addb ds pop in sub push and addr16 add jns pop rcrb test (bad) into add insb jnp test adc adc jge add push int3 inc inc xor add sti leave pop subb mov cwtl add pop adc add push dec jg repz mov add add jl mov jb andb dec (bad) das dec dec adc push bound iret mov cwtl cmpsl xorb movsl xchg les ljmp and xchg dec xchg outsl jnp mov arpl in test es add ss pop fs pop or in mov and pop jbe leave arpl daa sahf mov sar push sbb jp call jle dec andl stos mov (bad) out ret dec addb (bad) jno and js sysret inc mov ss and sbbl jle mov or add test xchg sbb adc popf fwait inc mov xchg das xlat mov divl sbb test jmp imul lret fisttp add push xchg or jb add sbb ret or addb inc push pop mov xlat (bad) (bad) adc add jl leave mov mov mov pusha lods mov dec and in mov outsb (bad) xor mov mov add ja leave in mov aam jecxz add ret push sub js test inc jecxz movsl repz jl pop ffree lret dec sbb jl hlt pop in fs xor add dec outsb or cmpsb sarl repnz cmp pop rcll add jae push (bad) ja sbb lods aam xchg add xlat aad sbbl popf out push loopne add or adc add push out add arpl mov icebp call (bad) cld pop mov cmp inc sbb es sub rcr mov add fwait sar dec ljmp jne in pop cmp inc push mov mov (bad) movsb lret iret ret mov jmp add int3 cli xlat add mov fiadd in add es sbb push mov adc mov add xchg nop cld sbb fnstsw dec fadds inc inc andl fiaddl mov enter cwtl out into mov (bad) fisubr in inc add fistp stos jg cmp mov lods mov inc fucomp mov (bad) enter cwtl clc pop fsub mov push cmp mov or addr16 pop outsb loop or rorl decb xor pop test imul pop repz add das orl and sub outsb leave mov mov or mov jge aad dec ficom inc loope lea add mov xor jnp cmp mov int jecxz,pn fwait mov add mov xor sub scas ret loope das addr16 cmp jecxz (bad) jbe add decl xchg imul jmp cmp adc inc leave nop add mov xorb jbe adc fldl2t jo scas and sbb pusha pop mov pop cltd repz xorl test inc rcrl es fnsave dec xchg jmp cmp hlt add mov lret inc out adc adc mov xchg dec and mov mov ror xorb pushf sub mov call mov mov inc dec insl fisttpl xor ljmp dec xor push fwait punpcklbw pop sub mov add sti add shrb cmp add xchg xchg jne pop les push sbb pop push sub mov pop jg cmp jmp divb add mov loopne repnz mov cmpsl cs fldt push mov out inc lcall das std push add test pop bsr mov jo and add cld pushf xor test jl xchg cmp xchg (bad) pop mov test lret jg sub xor mov pop movsl sbbl mov test add pop and add pusha or (bad) nop out adcb add daa inc xor popa push stos sbb xor pop and jp ss in loop (bad) repz xor jns add jb jg loopne (bad) call add add shrl and rolb mov lods xchg out mov jnp sub adc in in add jns (bad) mov addr16 sbb xor in lret pusha jns add imul sarb insb and add testb out or sub mov xchg test mov add mov xor or pop imul add push cmpsb aad lcall cmp pop inc ljmp cmp mov lahf or add movsb (bad) ret add rorb xor sub aas fs add push add fistp push insl stos pop jbe icebp loope jb sahf push insb adc aaa inc mov aam das sbb xor sub jmp incb xchg repz add jl sub fs sbb inc inc (bad) loopne ljmp call push icebp mov out inc incl add mov jno dec add pop nop aam adc in sti push and mov xorb lock popf (bad) rorb pop sub ds xor add cmpsb push ret movsl xchg (bad) xor loope or push inc push sub adc lock add xchg pop cld add inc fiadd addb dec jle les sbb test loope notl or leave add test add mov jns add outsl imul add pop pop mov test add pushl lcall jecxz xchg push add pop negl pop mov mov sbb mov mov sbb (bad) data16 and push jo lcall rcl mov add cmpsb shrb (bad) in add mov sbb les xor cmp xchg and scas sahf or jle mov call add add repz cmpsl cwtl push test stos mov repnz add sub insl jmp xchg and sbb dec xchg mov push cli xchg loop negb lea imul sub sbb inc push add push sbb ret test jbe add gs xchg dec push dec push mov lds or cmp jmp sub and xchg std sbb mov jo mov (bad) mov insb pop cmp test fisubrl inc pop push pop inc mov jg test jo std pusha dec test notb aas push and push int3 and aam or jno pop mov and mov fistpl and mov lock adc js pushl cmova push or xlat clc jp ljmp test es xchg xchg sub lds and jge pop inc addl add sti clc stc roll dec int3 in mov lea pusha jecxz fldl ss jbe push mov aaa xchg mov xchg or fwait add enter jle mov jmp leave fsts movsb jno ret iret loope mov jne mov int3 add enter and and mov stos jo std aaa add xor outsl mov sub in ret pushf push add pusha sub popa out (bad) mov jg fiaddl jbe les xchg and inc or sbb push mov lahf js mov cmp movsl ss sub mov insl jmp inc xor shrl sarb add nop les mov addr16 (bad) adc mov add jb cmc stos mov push add pop sarb pop in inc sahf and inc xchg insl push cmpsl (bad) jae loopne xchg dec (bad) xchg jmp sti adc push pop sbb xor push pop shl outsl xlat out mov stos jle sub cmpsl adc jnp jl leave xchg test ret xchg stos cmp jecxz or adc push jbe mov pusha fs js mov jle divb adc loop sub xor bound stc lods jl leave add scas lds nop lods add in bound (bad) add jmp or push repz in sub pusha mov dec dec lret xor cmpsl out push add cmp push xchg push rclb sbb sahf jmp add in jle subl pop cld jecxz fs iret stos mov adc scas aad or xchg pop dec or nop inc or mov sahf mov sub pop stos dec mov add cli decl sub pop scas jae inc call fcomps mov xor add out pop mov jns fdivrl push call outsl mov das dec pop stos ja jle jo add aad lods inc push xor jb cmpsb adc mov add mov lea pushf cmc out xchg shr mov mov inc insl mov loopne xchg test test or sub mov sahf jecxz push je add xor scas lsl mov inc push (bad) mov aam mov add add add cmc rcll mov aaa je inc pop mov mov push adc adc inc repnz mov jl add sbb mov loop (bad) jle aam (bad) jb add sbb push out movsb sarl lea outsl dec vlddqu imul data16 sub addl mov das dec sub add (bad) (bad) or lahf lods rclb mov stos cmp add sbb es daa adc add cmp inc dec sbb add mov add mov mov pop add popf cmp aas inc cmp add loop or dec xchg pop lods mov cmp inc (bad) jmp test cmpsb pop aam xchg addl hlt cmp fild adc dec mov shll call or adc in jl add ja inc mov rolb mov xor es stos pop mov das cmp sahf adc in mov mov es (bad) mov std sub lahf testl add lods mov test pop dec imul mov inc bound sub mov jge mov inc call das (bad) iret out push mov inc loopne mov xor cmpsb sub popa lahf mov add fsts push xor jg add xor pop popf jb add or hlt jl movsl add push push int xchg jno test cs pop xchg cmp test or (bad) mov push mov add and subl ret sub add jp mov cmp xor mov js cwtl decl arpl dec adcb or or add jl xchg rolb add fiadd mov add out push jnp ret add rorb mov (bad) sub inc lock pusha mov outsl (bad) jmp nop out xor data16 test faddl pop clc inc ss dec push push and push fiadd mov insl scas cwtl in xor pop repz iret inc add dec add adc mov pop and mov xchg push je pop mov dec cmpsl and lret rolb jl subb and adc pop stc jbe ja dec cltd sub test jo dec push mov add mov (bad) int aaa add je int3 jnp cmp cmp daa adcb in rcl sub cmpl sub lcall adc jg pop cltd fisttpll outsb or lret adc add stos jns (bad) dec loopne add sub in subb hlt data16 add sbb mov jnp push add sbb adc repnz leave inc push mov add xchg jecxz xchg cmp sahf (bad) cld add mov bound mov lret and mov (bad) jns int mov cmpsb fist ds inc adc (bad) (bad) inc out jl (bad) jns mov mov test add mov add sub add (bad) jmp inc lahf pop adc mov movsb inc inc negb sbb add sub xor xor subl icebp fs pushf movsb (bad) xchg lret or fisttpl mov hlt mulb incl arpl sti push add data16 jno and pop lret cs wbinvd leave inc xlat inc pop add sub inc lds ret add dec push mov add xchg jge pop mov inc push lods enter jae push out insb (bad) push or add subl mov call iret jg or jecxz loope in or jmp cmp jne (bad) outsb jbe add mov int add test add add nop jno leave or jg xor add (bad) cmovne dec mov sarl js add lds jbe add sub int cmpsb incb cmp push mov inc jge int3 xchg adcb add sbb sbb inc lahf loopne inc xor inc popf cwtl add push (bad) xchg test stos xchg popa inc push loop mov pop enter xor pop dec jmp je imul sub js (bad) insl stos xchg sub aam bound roll negb jae lret add mov ret lods xchg add sbbl lret aas or sbb inc push rcll call (bad) cmp inc xorb pop adc add or movl pop not pop add stc lds jl xor add push insb jg add add xor std mov shrl mov test add and mov mov mov addr16 roll mov add xchg push sbb cli push fstpl fcmovne icebp jl in cld xlat inc mov mov mov jnp lock test push jl add shrl rol gs pusha lahf mov add icebp sub add push in sbb repz add outsb cmp sbb addr16 cmp sar ja sbbl pop iret adc add testb jo jne cmp fisub or lahf or jmp add (bad) mov jle inc jge (bad) out push add mov adc hlt add xor xchg dec mov je in fmull rorb adc add mov cmp sbb std xchg xchg adc mov xor subl pop xchg popa mov out push push movsl mov sub cmc outsl pusha inc mov shrb ljmp rcrl sbb subb icebp ret out call f2xm1 add pop andl pop fs cmpl aam movsb fs mov sahf cmp push mov xchg pop mov lds mov inc push sbb ja cmp (bad) pusha dec inc pusha ds ss repz data16 test mov imulb test add dec lods inc add jns stc push and dec in arpl sarb lret (bad) cmp add sahf lahf dec jecxz fcompl mov icebp add xchg test orl push push add pusha gs cmp add mov pop cmp nop mov ficomp repz pop mov sbb push popf pop adcl sub mov leave mov xor push inc mov inc or js cmp dec push jge popf call das jns aaa add sti (bad) mov mov adc xchg jmp sar mov test inc cwtl mov sbb std popa adc pop add add push mov xchg add cmpsb addw aad sti cmp push sbb add aas jp or add fsub xchg xor inc pop inc out loopne push add stc ljmp jp or loope or mov jne xchg mov jae add cmp sub (bad) xor loop mov adc pop sar jae pop in fldl push bound mov rorb int in jns pop or or cmpb stc in dec xor inc popa sbb add xchg add fs lea loope adc mov mul mov dec out push cltd leave jno xor movsl stos xchg and push pop mov or rolb imulb cmpsl push push int3 clc cmpl push cmpsb xlat inc jae pop out lahf enter mov push push pop repz or inc adc cmpsl scas sbb pop add mov add (bad) sti (bad) mov push xor fwait add cmc loop dec pop ss mov fistpll aam add rcll jne popf das inc push ljmp loop inc push daa ret fisttp inc dec mov sbb testl mov ret jo movsb xchg pop out in add gs xchg push sub imul mov (bad) das add pushf cltd aam stos lods add push sub hlt idiv popa sbb popl mov and aam dec add jo cmp hlt jo mov (bad) mov iret xchg lods push mov sub pop add out inc dec push add scas jbe xchg sub jg add ljmp add insl and lahf mov in xchg jg subb push les jmp mov mov roll movsl fstl xchg ds pushf and add jp add mov aam add jo sbbb mov icebp pushf dec and lds adc sbb add add fsubs xor pop enter jns stos subl sti and fwait add mov sub sbb cli inc popa arpl daa and mov pop in pop jo out pop and add scas xchg xor call inc cmp add cwtl mov push pushf dec fild (bad) fsubrl jle add jbe (bad) cltd xlat ljmp sbb dec mov pushf jb mov add inc repz inc add popa pop or xchg push add movsb xchg mov (bad) js cmp les lods (bad) push sub inc aaa sbbb outsl in imul movsl jg add push into cld add fldenv out or loope xorl cmp cmpsb orl xor pop pushf inc sub add jge adc xchg inc and vpmacsww add mov add js mov sbb mov lret add sub leave pop sub scas lahf or icebp out mov sub mov pop cmp xor adc in repz dec mov dec or xor xchg pusha mov mov jg fbstp and pusha outsb dec cmp cmpsl testl push push cmp pop lea aaa in mov jl loopne mov call neg cwtl mov mov out mov push push inc aaa addr16 inc mov add adc mov aam xchg dec aaa add add adc xor jnp fildll xchg push lea outsb pop inc fldcw aas lret xor pop ret (bad) in mov movsl add popl dec stc outsb insl hlt jne pop pshufb into lcall push xchg negl add mov or dec setb test lock push addb add xchg popa in inc sub repnz pop push add or testb xlat pop mov jnp cmp in pop sahf or in into stc inc dec push xlat add or add pusha out and lret (bad) fstl or and leave popa pushf aad inc sti pop xchg jns xor loopne cwtl or test push shlb mov sub loope xchg lock adc add dec arpl and adc or scas push cwtl push pusha lock add jbe int push add jge faddl pop pop rcll stc push arpl sbb inc mov inc rorb push ljmp cli aad sub mov sub divl jmp and push outsb pushf mov pop mov add or imul je inc test les stos cmp inc ficoml pop dec add mov mov mov and scas mov adc dec xor pop in push lods dec ret inc jae and jo add in cmp test sbb xchg adc lods (bad) jbe scas push (bad) cltd add out cmp test push push jle popa (bad) jb fiadd mov push cs in mov lcall xchg mov aad mov sbb outsl enter test dec cwtl addr16 fisttpl out cmp sbb mov loope hlt dec leave push add pop mov popf cmp add scas push sbb jl cmpsb add mov (bad) leave xchg sub add adc and jae mov cmp xchg mov sbb inc in add dec hlt or add insb lods and mov xchg inc cmpsb clc add sbb and pusha jg scas or add sti call in push bound mov aam sti sahf enter add movsb or jo pop fadds in cmc pop mov add das pop ffree test mov jbe xchg jb mov sbb ja mov cmp aas out daa inc pop xor cmp dec (bad) sti insb (bad) in pop sbb inc aas subb ljmp lret sbbl ret lds icebp das loopne sub push pop in test pop inc fwait sub and push add jnp xor repz rclb iret cli ficoml addl cmpsb sti cmc jo repnz (bad) mov dec mov mov jno pop sti sub mov jge roll mov test fisubl fisttpl ret bound jns aam cli shrb push faddl test out lcall fwait xlat aaa jp mov idivl pop jns lods adc into cmp imul hlt cs popf pop cli add mov inc test pushl mov cmc pop enter adc hlt (bad) jge add (bad) (bad) jae aas outsl pushf lret push (bad) icebp scas or cmp sub orb dec movsb push inc jl fcoms enter mov jo push sarb scas pop sbb mov cli out subl fcmovbe push (bad) jl push or inc add add in add addl pop je xor or int3 popf add dec stc add movsl ja jl add sbbl icebp std (bad) lcall jns sbb jb push xorl jnp inc les inc dec cmpsb iret leave add mov cmp orb ds inc paddb sbb jne xlat int pop add inc (bad) and in xchg mov inc (bad) push cmpsb (bad) repz sub loope inc mov add or jbe and pop subb jns pop push pushf mov lock xchg push movsb add jno jecxz sbb and push push push pusha cs sub add xor test addl push jmp and mulb scas adc and je xchg nop pusha jae rclb add or xor loopne mov sti fmull insl lahf dec and add (bad) fwait orl jge jmp jle add cmc fs (bad) jo daa add mov mov popf ret jo (bad) aas push inc cmp mov pop xlat add mov lea adcl in add xchg mov inc movsb imul sahf inc mov stos ja mov push lds cmp jp ds (bad) add decl ret sbb inc fwait pop pop in dec out or xchg jle push cli leave aad in lahf jmp jmp adc mov pop or popf cmp lods popa add call add sub ds jmp lea arpl jo ds mov test jb insb mov add pop xchg imul cmp add xchg and add cmp add add mov sarl das add daa add pop out subl ljmp or add xchg push sub add jp (bad) push test scas add pop xor (bad) push inc jmp jne adc fdivr jp subb repz pop mov ljmp dec test rolb inc or adc add add lods (bad) aad je add outsb and mov mov or add rcrb jmp mov add jge (bad) xor and inc movsl push cli scas inc push push shll cmc mov or inc inc lcall sbb pop dec int3 imul add mov adc mov pop lret add and mov into add mov add sbb scas push inc xor sub add push lods and inc add mov xchg stos sub add aaa add fidivrl add (bad) mov xchg add jo sub lds sbb push pushl jg pusha inc pusha call aas lret dec jo outsb mov lret out rclb lods jecxz cmp dec idivl (bad) testb gs add cli pop dec clc adc sbb cmpsb aaa push adc sub stc stos (bad) push jbe or cmp adcl clc subl lods xchg (bad) mov popf jmp scas sbbb xor rcr je push add pop sub loopne cmp cwtl shrb mov jo jae push rclb mov nop test clc daa hlt mov mov pushf jb push outsb sbb add sbbb jns cli dec jle adc sub push mov mov subl (bad) jo lahf add clc cmp dec and fadds dec into jns ret pop add stc xor add outsl pushf sub ja (bad) jns pop popl imul mov sbb subl add das daa jo in lahf int3 dec push aas mov pop add dec xor bound movsl add arpl pop cmp add mov dec mov pop xchg sbb fld1 pop push pop inc (bad) loope sub jecxz cmp add sbb pop notl jb lret mov fimul push add pop lret mov call sbb adc adcl mov cmp mov stc out insl add andb add adcl add repnz inc jle xchg sarl inc stc push dec xlat (bad) and add xchg call out gs mov dec or push faddl and es sbb cmp sahf mov add ficoml clc pop aas add lea enter int3 cs bound mov repnz dec xchg jo cmp push (bad) cmp negb mov mov mov jg pusha (bad) lea mov push sarb dec jecxz or scas push push pop out mov sahf dec sub add lds pop jl test test sbb ret or sub pop mov add loop int3 jne add mov sbb fbstp jge jle xor idivl (bad) lds dec nop add lods jg,pt (bad) repnz sub push das mov mov add xchg add xor inc cwtl cmp xchg pop mov pop jp mov push cmp std scas jmp loop adc jnp add or add test movsl add rorl mov mov and jge in leave and movsb and lds test fmull imul mov pop pop (bad) jnp add mov add mov sahf sbb sbb push sti fmulp in pusha scas arpl cmp lds icebp ss dec cwtl stc clc fisubrl testl sbb push loope loopne xchg add add fwait adc incb loop jo jae sahf adc add jmp add dec pop hlt xlat or pop adc inc in pop adc add fadds in (bad) lock dec add out rcr out addr16 mov cld xchg xor xlat inc add rol jno test add loope cmp add pop or xchg fstps add loop pop ja test aad pop daa adc sub mov test sub mov rol bound insl pushf push jno cld lret popa or pusha lea mov cmp pop adcb scas faddl insb ror add aaa jecxz push jo mov push jmp sbb add push pop in divb fucom dec jnp pop pop inc and ljmp mov (bad) test jle push rcrb jecxz or jno mov lcall sarb int or and lea sbb cmp add ret sbb and dec mov jmp add jae mov or cmp scas dec leave inc xchg negb les push aaa cld insl and repz imul call (bad) add push stos sub jmp stos andl cli add xchg je dec lcall or lret pop dec insb pop adc aas jae stc add pusha jne mov xor ss cmc push jno aaa in addr16 flds push sbbl ficomp pop mov (bad) push mov jecxz adc mov fiaddl cmc imul jge out adc push mov lds bound mov add xchg lret int xor pop jno imul jo adc add pop sbb jp fs jo insl sbb adc mov inc les je ljmp lea and loopne mov out lds mov jmp and pusha stos mov test push stos add dec pop bound mov or shrb and test or addr16 sbb cmp pop push fdecstp mov loop add xchg mov das mov jae mov popf popf rolb sbb test jno add mov or dec jae mov icebp dec lds leave addb xchg cmpsb and ss sub push sbb pop dec and xchg jmp push jg popf hlt mov adc popa dec lock cmp add incb sub outsl pop pop mov add or sub pop arpl adc mov cli pop fwait inc jg adc subb or mov mov lcall mov dec dec add roll sbb pusha xlat cmp push xchg add mov pop push inc ret cld sarb icebp std mov ja,pn nop sbb sub xor test lods (bad) enter add test cltd js sbb in nop adc ds aam jmp jnp data16 jg add cmpsl mov fmul rorb lcall popf dec iret dec lock add sub ret push ss push mov sbb cwtl inc arpl and jl adc jb std mov test add inc (bad) shrb (bad) subb int3 outsb xchg stos add lret add (bad) sub xchg or fisubl sahf jae jmp mov popf xor inc push pop and inc aas enter push add push mov loope xor and movl or add int3 shrb mov imul add into add adc adc les bound cltd push mov jmp insb push fiadd cld adc loope adc push mov popf (bad) fldl pop test jmp loopne cmp push neg test sub inc fs xor data16 (bad) xchg or movsl inc add mov jl push lahf cmp pop sub movsl and jecxz add outsb hlt xor in and pusha cmp sti jl gs cmp xorl ret dec push cmpsb pusha test adc xchg ret xchg xor pop in clc lcall faddl pusha repnz add imul and in xchg stc jo sarb mov int mov cmp jns cwtl mov addr16 mov sub mov cld add stc xor or add xchg add and xor adc mov pusha scas out fistp cmp mov mov add test xchg cmp push test notl adc pop or shrl mov add push jge pop mov cmpsb cmp xlat add xchg ficoml jl jmp aad add pop (bad) xchg outsb pop subl xchg stc fs cmp pushf xor ja push ret js sub xchg add and add je sahf fmuls les add mov ffree jl add mov inc mov loopne pushf mov (bad) xor add sub aam nop sbbb jno add xor add arpl mov dec out mov loop lea sti push ja inc mov negb sbbl fwait jo or leave pop xlat mov add mov pop lret pop cmpl push cltd xor mov xorl sbb and add imul jg subl pop test outsb mov mov inc pop (bad) mov mov or in cld sbb sub sbb jg inc add andb sbb mov inc add pusha shll mov push sub and fwait sub rol leave xchg lahf repz xor aas add std add iret or repnz lods sub inc dec ret add xor jp sbb jg fdivrl pop hlt dec sub xchg enter aad (bad) jnp add mov mov cmpl hlt call sbb and fistl sub sahf jne repz enter movsl (bad) mov fcoms jge ja add and mov cmp test nop bound mov xor add clc je mov or xchg test nop pop push mov out mov xchg mov push dec xchg iret adcl insl add or jl cwtl add aas sbb js add xor in add fidivrl jno and inc push sti mov jb negl add in cmp add xchg into push jecxz sbb subb push rol scas cmp jge dec inc int3 and and jae add sbb sub repnz pop or cmpb lcall mov ljmp out or cmp inc add adc fiaddl add (bad) subl daa mov add mov stos jl add lea lds add inc test sub and incb push ja cmp cmpsl push pop ja or lock inc and clc lds je imul xchg and xchg xor dec push ja cltd inc pop cmp add mov mov negl in dec or and sbb sbb fdivrs (bad) xchg jle les cmp add or stc pop push jns push mov sbb adc insb push inc jge sbb push add nop pop testl pop dec popa out add aam sbbb or pusha mov dec add les inc add pop mov cli mov adc adc bound insb pop rclb adc inc or jne lret jns (bad) mov enter mov cld sub shlb test ds dec inc xchg (bad) and mov aam sbb xor dec mov out data16 xor in lds mov pop add jecxz adc xchg jbe stos mov pop lcall bound sub lds cmp ret jg pop adc xchg repz adc mov or xor cmpsb sahf inc sbb lcall cli push daa imul insl adc jno cmp adc sub push push mov dec incb adc mov sbb mov rclb push and mov add cmp dec insl xor dec js or andb rcll adc fs jno aas adc push dec or js,pt add inc (bad) aaa ucomiss and cld cmp xor subb push iret add (bad) enter ja mov test jp jo data16 cli testl cmp sbb add jns mov sbb (bad) in std ss test mov add dec test stos add pop mov divb add mov ja or icebp sbb jae jp cmpb sub mov xor dec repnz cmp jle enter push dec push pop roll add cmp (bad) ljmp repz (bad) add xor pusha push loope cmp push idivl dec push test fldl pop hlt cld in add daa sub sbb or nop add loop push shr jl subb popf mov add inc add outsb or mov inc sbbl cmp push arpl (bad) mov pop bound add or rolb fiadd bound mov inc out (bad) xor inc push bnd out xor gs jbe test insl push std add arpl pop adc fwait lcall mov sti push mov xorl fwait add mov mov std inc cmp inc popf lcall add mov in cld add out cmp add mov stos xor xorb and add xor sub push lret cs xor repz add jne push loope mov pushf loope inc or push (bad) mov cmp out std lods jns and or in cmpsb clc push jbe mov lret adc cmp cwtl sbb enter or sbb lods add mov stos mov add fidiv mov mov mov jg pop rcrb mov repz out imul mov orl icebp mov movsl dec add xor push xchg cmp mov add (bad) xlat adc jg sub cwtl add rorb add (bad) xchg or pop fs movsl mov adc mov xor sbb bound mov xlat movl push push pop fs add xchg icebp inc inc push jmp dec add mov scas mov pusha mov adcl in aam sbb ja in in stos dec dec add jmp out sub push or jmp pop jp es in pop sbb dec das sub cmp nop rolb pop cwtl mov push rcrl push jo neg add inc xchg mov xchg jb add add sbb mov (bad) out int3 imul push xor inc add test inc sub or les (bad) push rcrb mov fidivrl mov jge fsubp and cmpsl fmull (bad) lods pop inc push inc jno jnp adc sarl xor fwait add add (bad) mov add ficompl pop or mov mov fistl mov lds mov loop pusha ss add movsl dec sub xchg add push test dec inc cmc fiadd add scas jmp insb cltd xor add in push aad dec cwtl add xor lock aaa outsl mov sbb js fs add dec sub ss out cmp cmpsl or pop and push ljmp arpl clc dec sbb loopne mov push inc pop xor out sub loope dec fsubs jne add in repnz jno js pusha in mov lahf arpl ret js cmpl (bad) mul stc into xor (bad) stc dec cmp adcl inc cmp es add jp imul mov add fisttp in (bad) subb loop xorb out jle js mov xchg push jge daa adc jb testb jnp out mov das (bad) test add jb inc mov add dec add sbb in dec mov and mov imul sbbb mov xor add push pop enter outsb add scas mov add cmp gs movlps jmp dec xchg aas cmp push lods ret int3 mov add or in cli or mov das inc mov outsb mov into cmp xchg push clc mov pop pop cltd in stos sahf mov sbb shrl dec pusha (bad) dec xlat jo push inc ljmp mov add xchg push insl rcrb add outsb add push out xchg mov lds xor mov mov divb add outsl fmull inc pop cmp test mov outsb add jge test jbe test add sbb xor mov notl sti cmp mov inc pop dec test sarb or or (bad) bound mov xchg fucompp or cmpl jae test xchg jne out adc or pop cmp ds or loopne jl outsb push jno mov pop imul (bad) hlt adc xchg push pusha push popf sahf loop sti add sub push mov popf add pop or lock and insl movsb rolb testb lock add stc xor imul cltd adc pop xchg sub rolb enter add scas lock paddsw cmpl xor aam or or xor inc adc js add cltd sub xchg inc (bad) lahf loope add cld imul mov jne and data16 add cmp pop add js push stc aad mov jno add inc (bad) sbb imul add int adc mov inc xchg xchg jl test sub jmp mov sbb xchg out cmp jns pusha mov push pop cmp add push adc add jge adc sbb inc stos lock inc pop add cmpsl push out xor das imul mov lock pop addr16 stos lds test xchg lahf or loopne sbb cli or cmp pop pusha push pop mov aam inc push pop loopne push sub sti cmp xor bnd imul iret daa mov fadds call loop jp cmp sti cs xor cmp (bad) mov or pop fdivl ret lods jno mov pop test xor mov gs rorl (bad) sti inc pop out mov clc add jmp sahf mov inc lds out jnp jo test xchg popa inc incb push mov mov add cmpsl or daa js popl subb adc dec sub pop add mov outsl (bad) mov jmp rolb enter stos xor rcll jmp inc ret jne jns add mov popf cmp ds add daa imul incb loopne cmc jp push aam and push outsb ret push lahf push xor add (bad) stc mov cmp iret xchg stos test and mov xchg outsl add in repz push and nop addl addr16 push sahf mov add lods xlat aam stos add mov js add je fdiv mov mov stos pop das push or in (bad) in or mov js in mov dec add push push fildl out jo test push outsb push sub adc test mov leave fwait xchg add call sbb adc xchg addb mov js or mov or xor mov (bad) and pusha pushf xchg aam jecxz add lock push xchg stos ret lcall sbb sub popf add pop xor cwtd leave pop addl xchg pushf mov mov enter push in add lret push sub pusha loopne lret scas xchg jmp subl xor lods inc pop mov add jae (bad) push sbb jae add (bad) (bad) pop das xchg pop add xlat jno cmp cmpsb push ljmp bound adc dec and push fs in lea push sbb push imul test pop xchg adc popl mov and cmp pop cmp ret fidivr (bad) sbb cmp sub rorl cld pop rcll into pusha out stc sbb rorl rolb sub popa cmp incl and sbb dec push lret push xor sbb ret enter add rcrl or pop out cmpb and cmc sub cmp outsl hlt mov adc lock push iret and aam push push aaa jle sbb push mov xchg out (bad) cmc repnz out xor in and lock push rorl add es adcb fldl les and push add xchg ret jp iret cmp dec mov loop fdivrl xlat or add test arpl mov idiv std push add test pop add jnp movsl xchg cmpsl and adc pop inc pop aaa add stos add pushf adc jmp add in mov cmpl jo mov inc sbb lahf and add dec push test cs inc mov insl sbb dec scas push lcall push fcmovbe cmp cmp dec scas add arpl bound fsubrs dec inc and xor dec and cld inc out mov pop mov cwtl sbb adc xor xchg ret inc arpl jae sbb int pushf icebp sub add nop jmp add leave push enter mov sbb mov lret and mov movl insb fistp fsubl das add lahf lds mov adc call or cmp xchg loopne dec inc ret rcl add jae popa in add clc data16 in push test mov xlat addl je xchg cld (bad) sub add andl popa pop aaa xorb daa mov push insb repz sbb stos scas out jle mov pushf add jp sub mov cmp jo pop aad xlat add lret push jne add ja pusha add mov add push pop lds sbb add ret xor mov pop add sub sbb jmp sbb int3 push outsl adc int and gs mov inc sub sub add lahf in xor psrad dec shll jnp pop in pushf jg (bad) cmp fstps (bad) sti sub and xor dec sub adc test cld dec nop test mov sub push mov jecxz inc cmp cmpb jge or xor cltd fistl test pusha push leave icebp lods inc pop fiadd jp lret inc add mov add out lahf add jge cmpsb fisubrl add pop scas sub cltd sbb cld dec jb add imul jmp dec in xor aad add sbb and jmp gs movsb (bad) in push add dec call jle jo leave inc pop add ja xor fistl popa mov adc aaa pop lahf shrb cli pop add outsl pop outsb out adc sahf cltd insb jno jle add jp add bound add pusha cwtl inc add mov mov out cmpsb cmp xlat push movsl ljmp aas mov fs movsb pop add and fiadd adc cmp cmp test sbbl stc sub js outsb pop inc js jp fs jo pop andb (bad) rol lds mov cmp push cmp mov dec pop jb (bad) sub jae repnz cmp aad add in stos push mov adc and clc xchg fildll imul sbb lcall dec addb pop jle cmp dec pusha notb add dec adc add or mov or xchg cltd mov (bad) jge cmp pop aam mov add ljmp add add pop cmp and jmp inc mov add fwait lods add push mov insb sub push add cmc dec lahf add ja shll add nop test in inc and add xor add dec sub push add rcrb (bad) movsl xorl into imul and stc (bad) jo andl jae data16 test lahf sub adc cmp inc mov es mov pop or and aas pop adc add push xor jmp add repnz cmpsl push imul iret (bad) mov jmp jecxz popf popf cmp in mov add pop out iret pop jno out add sub pop push idivl lahf outsb daa out add fildll inc sub add pop or inc arpl adc pop jno pop movsl test xor mov outsl push lock jecxz sub add sub pop fsub xor push roll add int jb jle xchg andl jle mov pusha pop cmp add ficompl adc add dec jno dec daa and std lods pop lcall add inc dec ds repz pop add adc cmp adcb in adc xor stc xchg inc or adcb scas outsl ret mov add (bad) inc int insb lock add sahf cmpsl ret popa jno jno andb ljmp (bad) hlt mov inc outsl xorl dec lods into je pop add sbb or les push xchg dec xor mov fwait std lods lock insl cmpl inc xchg jo pusha adcb mov add mov aas mov leave pop (bad) dec fiadd jo into and orl adc js das xchg sub pop xor push jne or es adc or cmpb dec cmp xor (bad) outsl adcb and dec add pop push lods adc aam mov cwtl add cmp sub loopne (bad) pushf pop in dec dec jle add sahf xchg sbb in and pop mov xor fistp xor lret pusha mov xchg loope fmul pusha cmc (bad) es pusha mov cmp mov jno in int lcall pop add div or out push fimul jbe test sub movsb (bad) fist inc add add mov mov sbb cmpsl mov xchg mov fisttpll test (bad) jmp subl jo sti rolb inc lcall popa out add fiaddl jns in ffree fild push popa mov add push xchg pop mov movsl add add (bad) dec (bad) repnz addl sbb mov gs sbb sub cmpsl push sub inc (bad) in jp call lds cmp or add add push popl xor cmp jl loop add xlat mov or mov sbb mov lret sub bound or movsb lock lcall jne das push push vcomiss rolb xchg stos dec inc mov aaa mov add push adc add jg ror sbb push jb xchg dec mov jecxz and xchg or (bad) add xor cmp mov xchg dec adc inc cmp popa (bad) xor les mov and pop dec add out ja stos mov add insl or mov xchg or jmp sahf jae (bad) aas inc sbb jbe mov hlt xorl dec lahf pop adc mov sub sbb popf (bad) stos add jbe loope mov push xchg outsb add out sahf insb jns bound inc push sub addr16 jno add or add je scas fwait jl pop dec add or add ds pop dec jle or cmp pusha pop add pusha ss jnp stos xchg in aas mov mov cmpsb jp ds int je pop (bad) add and stc in pop xchg add leave pop add mov loope inc loopne inc cmp add push mov inc jne add sbb stos xchg js mov fbld test cmp stc sub inc add test out mov add scas mov adc imul lea jno mov add ljmp mov data16 ret push mov mov adc xor aas iret pop lea jp fldl in add rorb adc jno add jnp add fisttpll arpl pop lcall rorl daa bound or scas icebp add aam cmp (bad) jl xchg (bad) mov (bad) add pusha add or cli dec jnp add sbbl icebp lock add stc insb push add ja add dec pop int3 mov insl adc mov push je add hlt sti outsl cmp jecxz imul cli popf out repz xchg lahf faddl sub add inc inc xchg sub pop add out out push inc mov cwtl inc or add and mov push lds pop adcl and sbb cmp sahf add inc clc inc pop push dec mov lret (bad) mov mov bound add leave shlb (bad) (bad) fdivl stc xor lock add sbb pop test sbb hlt aaa aas scas mov fdivrs jge sarb call adc sahf cltd jl sbb insb aaa add in mov or call pop insb sbb push es rorl mov or add add fistl mov pop jmp adc test andl or fs movq rcr icebp pop sbb aaa ret adc add addl test in std add sub mov inc inc or nop xor push dec ret xchg and push clc in fs sarb idivb pop (bad) mov add mov xchg add ds mov mov lea xchg out sti sbb icebp cli sbb mov add enter pop inc add and (bad) lds arpl xchg std push add cwtl leave das add mov cmp or sub add or ljmp xchg xchg add mov das add in cwtl jo out mov add aam pop pop lods orl (bad) sbb pop jmp into add sbb dec pop in xchg and sub (bad) out dec push (bad) mov loope jbe push cmpsb pushf push push add jne ret or (bad) xchg repnz mov dec push add fsts (bad) xchg inc add test mov call mov jne fistpl push mov dec xchg (bad) mov and add xor in mov ljmp cmp push ss xchg add imul cmp sahf add mov outsb es push xchg mov add movsb jge inc adc sub pop cwtl add mov ja mov arpl push add ret push aaa out std xorb inc sbb subl je jp xorb push js push add sahf and lret xchg dec xor jg add cli (bad) inc cmp jmp inc outsb mov arpl out dec jge pop or cwtd fwait orl mov mov (bad) js xchg mov clc mov pusha fs mov push and and xor sbb adc pop mov out push cmp jne jle xchg jge jae push cmp add lar add sub stos push insb cmp add add out lret mov mov push cmp ja push mov mov dec push push adc movl jo and lahf popl xchg cmp into xor xchg inc ljmp fsubp idivl sub push dec sub arpl sahf add popa mov add cltd hlt aad (bad) and int3 daa cs popf jno or jle mov fsubrs pop xchg gs pop loope ljmp add dec aam xorb sub push cmp popf jmp popa test cmp sarb jge movsb dec add jg jns add push mov aad push jnp pushf popf pop shll cs dec add jno mov into add fimul xchg push mov es jo loop add clc mov pop int add mov (bad) call lds xlat fsubrl lods icebp jnp addl (bad) je mov jg xor xor into inc fldenv ret in out pop add mov movsb daa jns push add and loope push scas add adc add pop push inc aad pop ljmp cwtl test add aas mov lods or add mov fadd add sbb mov and xor ret fnstenv sub mov mov rclb add dec sbb addr16 jl rcrb rorl add xor add xor aaa fsubs sbb add cltd inc loop sub mov clc lcall lahf outsb or into in subb mov mov xchg lret mov cmp xor pusha ja lahf xor pushf movsb insb inc add cmp or ret dec (bad) xchg adc cld lods adc sub push call icebp jo int3 inc sbbb orl mov inc rclb fadd jle imul or pop add aad pop cmp shlb gs js aas pop es mov pop dec jp add out or and ja xor mov fwait daa aam js dec inc pop xchg adc inc lock sbbb push in cltd sub and push maxps and inc icebp sbb das push out adc push and sub mov es jp inc ret xchg mov imul dec add pop cmpsb daa pop ss das add fbld mov push je jecxz add pushl jge int3 add mov movsl jg xlat andl lea (bad) fistp sub sbb xlat mov iret xor pusha sbb add xchg cmpb test mov in inc add cmp les add (bad) adc dec mov in inc movsb lock jbe cmp xchg adc mov xchg into repnz or leave mov les add mov dec shrl add adc pop inc lods add (bad) lret jb xor lahf movsb push add aas stos ljmp cmp test mov or jno add fnsave pop cmp add popf enter lcall dec push add rol sbbl xor add fistpl out dec lods and ljmp xor push fnstenv sar pop push fdivrs out addr16 in mov sarl mov movb lock sbb xchg daa inc jecxz or dec mov or into adcb jmp xor jge sub mov add psubusw push lcall loope imul add jns xchg mov jb (bad) xlat push inc stos leave add dec adc inc lcall aas jae movsb jecxz and add (bad) cmp add xchg cmpsb pushf pop decb add mov xchg imul add pushf pop push add push icebp bound jbe add (bad) push repz cmc fisubr addr16 lea cld fisubrl add data16 cmp ja add dec push test int3 imul and adc aas pusha ss add inc out (bad) push shll (bad) inc in xchg pop add mov inc mov push cmp outsb mov mov mov pop adcb frstor loopne,pt xor movsb add ljmp adcl je test clc popl or pop xchg out add hlt out insl pop (bad) (bad) mov jl add sti in call inc xchg (bad) repz and adc call mov cmc add insb scas add inc ja or movsb jl fistpl (bad) jmp mov jnp and jns add jl imul push push les int3 out mov scas lods dec data16 or cmp or push xchg jmp add or xorl fcomps bound push (bad) xchg jle add mov loopne add cmpsb mov dec pop push xor (bad) fstp add sub jg add jg mov arpl ret jno add fistpll jns add loopne xchg dec repnz push repz outsb jns pop lcall sbb insl adc sub or test push repz jmp mov push xor add popa rcr (bad) sti lock inc mov test inc lret jle gs fucom call push mov or add sub mov testl xchg mov cmc mov popf lods pop out addr16 pop (bad) movsb push jns add add and cld hlt mov jl sub inc sub and add and sbbl xchg push addb loop mov or mov mov scas cmp cmpsb in movl shrl (bad) pop add push movsl push mov sub jnp xlat jp push (bad) ss test andl xor scas xor dec pop aam subl or jg pop test daa test add test adcl pop xor sysret adc stc flds push xlat mov push and lahf xchg adc scas add lret stos jmp jnp lods roll sahf and or pop fs pusha loope cmpsb add ds nop sub jnp xor lods jo push fwait lahf adc push sub mov and ja or mov add mov aas or lret pop sbb sub sarl dec add add push popa lock xor pop cmpl or and pusha sub test mov fwait push adc popa jo movsb push cmpsl mov data16 sbb (bad) jl add push dec iret pop lcall add adc add test in xchg xchg cmc pusha popa sbb outsb sahf (bad) fs add femms sbb or add repz jmp xor mov push cmp push int3 outsb xchg add lret push mov in add fistpl cmpsl push adc add lea mov jnp sub dec (bad) or mov sbb dec add repnz sahf sahf mov sub inc add lock lret jl jbe aaa orb pop adc mov sub mov xor fiadd and cmp mov dec pop fldenv inc inc das jl mov test addl xchg (bad) xor cmpsl insl add mov mov mov xchg sbb rclb out jo add (bad) cld mov mov lods js gs clc daa cwtl fisubr add add mov mov jnp mov test flds sbb sbb cli jp adc (bad) subb xor add inc or sbbl lea orb cmp out add and loop sub ds lret call movsb movsl andb imull mov add out jb addb ja pusha mov dec sub lds and cld mov dec outsb add (bad) ret inc add rcrl or and jbe test inc cmp sub aad push sub fadds cmp rcll (bad) push mov pop jns ret pop imul sbb xchg sbb test arpl dec out pop cmp nop and xor rcll mov or cmp cld insl dec add (bad) ljmp adc sbb or pop loop test cmp push inc jbe js add add repz fcompl add xor sete (bad) cmp inc jo sti adc add test mov push add ret mov dec (bad) popa jo push (bad) rep add adc hlt stos xor sub adc nop test test sbb out inc cli add int3 cld xor and (bad) in enter adcl pushf out jnp jo repz (bad) mov cmp xchg xor push and mov pusha sbb xchg dec push fldcw clc mov testl adc fisubrl add xor (bad) idivl mov add xlat test scas lock jo stos aam cmp pop cmpl add adc in test sbb cmp xchg and cmp xor xor add iret add sbb fisttpll stos in pop fdivrl loopne out or sub jo add test mov aad dec cmp xchg jb dec or jno sbb insl (bad) (bad) es imul fstpt push add add sbb sbbl imul and fs pop or lds sub (bad) popa call cmp iret imul xchg dec inc jnp stos push imul add xor push cld cmp lcall cmpsb subl dec mov mov cld out jle jnp push add sbbb add mov inc loope push dec into lods cwtl movb fidivl (bad) jecxz add out xor jo cmp cld jp add lods push cltd lahf cmp addr16 cmpl fcoms rcrl push pop (bad) adc cmpsl push sbb jle daa test sub repz outsb rolb addb ret je repnz lahf (bad) ss xchg sbb cmpsb jnp in mov pushf rolb test ss addl lcall or push movsb fiaddl add dec jno xchg sti fldl repz jmp int3 adc scas jl dec inc shlb dec xchg scas adc pop mov pop fstpt push sahf jne fwait test or in push sarl add mov aaa mov xchg add and in cmovge out jg inc jge xor xchg push add push fisubrl stos test fdiv movsl inc pop add jmp loop cwtl add repnz or push rcrl inc inc xchg lods shl test push add mov sbb add (bad) aas push pop lret sbb imul mov cmpsb mov add in or sub dec fdivrl jle sbb mov xchg jne add lds add adc mov jno inc sbb add xchg mov cwtl shrb add jmp adc dec adc sahf sub test jg ljmp xorl pop orl (bad) and sub add cmp push jle add or inc cmp pop lock por leave add sub and add push dec mov adc iret xchg or aas sbb dec wrmsr test add outsl xor pop es adc adc push insb pop lcall lock xchg add xor push inc and add cmpsb in pop ror adc xor dec ljmp xchg xchg je pop fild cmp jno in push cld push je mov jbe add xor xor cmp jecxz imul xor push out test orl outsb adc inc (bad) scas test cmp addr16 dec lods mov adc rcrl sti je mov lret add cmp sahf sbb ljmp or (bad) std movsb int3 (bad) cmp test push addr16 add inc sub rclb outsb subb cmp pushf xor loop xchg jg jo test push lods inc xlat lods (bad) js add xchg xchg vmwrite mov add sub call clc fidivrl cli sahf inc adc and push fildl in jne cmpl or call cmpsl add rclb lods xchg jmp mov out mov incb inc rol cltd into sbb (bad) jno inc pop mov pop sbb add jo mov movsl add shl bound loopne fsubrp push mov adc sahf sub mov dec or fwait push push divl adc jmp je bound inc xor lods dec xchg push and push (bad) fiaddl cli adc arpl stc add sub orb ret or std add xchg shlb cmp dec repz cwtl test push mov xor cmpsl sti das sbbb push xchg xor addb mov mov add loop jle in fcoml mov out cmp test mov cmp mov add xchg xchg aaa notb gs and in add lock jmp cmp sub out es add add mov getsec insl adc mov adc jle inc push arpl jecxz and sub insl inc int leave add test inc cmpsl jg (bad) cmp rclb std sub pop cli dec enter mov jne lahf xorl aam pusha pop cmpsl scas clc sbbb mov push pop dec pushaw mov push pop jb add jo push cmp jno push xchg cli loop add or mov push out mov mov lcall jg pop or (bad) inc pop in mov mov add les jns (bad) std add push xor cli or mov push leave shll pop jmp xor ret sbb sbb and pusha xor orl push add aam bound sub mov jb call jae mov push or cwtl adc int adc push (bad) fbld xor add movsb mov sbb rolb imul mov andb adc stos xchg negl out inc sub sub push sti iret dec sub pop push mov cmp popf mov fs add cmp push movsb (bad) dec inc add (bad) int or mov add cmp repnz js ljmp bound lea sbb or int nopl dec rolb xor xchg outsl jg pop enter cmp (bad) lret pop test dec stc inc imul dec add jmp add pushf and sbb test data16 into daa loop cld inc outsb subl call mov subb out pop js (bad) (bad) adc sbb jp sahf (bad) popf adcl nop imul fcoms add xchg in sbbl nop add sbb aad fwait xchg (bad) clc into (bad) cmp pusha jbe mov cmp mov add mov push (bad) xor fwait jne lcall cmp ja push aas sub icebp mov add ds inc xlat aad testb enter or add dec aam add pop pop xor rolb and aaa cmp jae push ja add jo rcr jl or inc scas jg add divl mov arpl add or jl rolb add adc cmpb (bad) leave cwtl rcll xor jb add cmp sub jno add gs jbe dec lret xchg dec in mov push ja inc sbb sbb (bad) or xchg dec cs sti cmp jle jecxz dec push shl jo mov mov adc xor xchg sub movsl loopne push repnz sub popf add jo movsb dec shll add cmp jecxz dec lea lcall aas xchg pop xchg push jmp rcl push inc iret push mov add pop inc fild int3 xor sub les (bad) push pushf xor dec pusha inc push lds mov push pop bound adc add cltd sub cs inc inc cmpsb cmc adc lea andb add and sbb dec and add mov mov dec stos fist and scas call mov inc pop loop xor xlat cs mov sub (bad) jne fwait inc push fistl cmp or pop add pop mov inc idiv add dec lods std fidivl in cli out dec mov sbb ljmp mov inc inc out xor xchg adc cli aam fs pop into call mov and outsl dec cmpl sets jmp outsb push movsb add adc push lods xchg rorl add push ds inc cmp jl rorl je add dec aaa bound pushf mov inc fdivr es lea pop add iret (bad) (bad) js pop add scas std popf pop stos inc ljmp mov add push and jo pop jne outsb or repnz add jns jb ficoml add cwtl fcoml or je fwait jmp aam or (bad) xor dec jo loopne sbb js or pop fsub sub (bad) lcall push xchg sbb adc mov xor jp aaa popf (bad) bound addl cmp lock add inc dec ljmp cmp data16 inc jnp mov or dec lahf sahf mov or cwtl sarb out sub add dec jp nop fwait lret sbbb jl sbb dec push xor repnz fcomp aas push rorl idivb andb push jle inc jb push add cld adc rclb pop dec das cmp cli cmpl jnp sub xchg sti int3 mov sub mov movsl push mov pushf fisubrl xchg jnp (bad) sbb fsubr inc test fs mov frstor push call push fidivr rorl shr add xchg add (bad) scas mov jo xor cmp andl cltd gs sti jbe subl icebp ljmp xor out test add imul std out addl mov add jb adc in int mov decb and mov cmp sbb inc sub adcl xlat xchg in add (bad) ja pop or push add idivb out aad sbb and add push sbb xchg push cli inc inc divl scas imul rorb aaa test and push jne fistl addb bound dec ds sbb clc out arpl add mov fbstp add insb inc std pop mov jo mov jae ja adc (bad) cmp mov out push or add mov ja fiadd pop mov movsb and and mov (bad) or lcall mov inc cmpb pusha inc fdiv pusha inc xchg add adcl or cmc add xchg or jns cld jecxz jno mov cs mov sub inc pop mov inc pop xor (bad) sbb add cmp sbb or ljmp push add (bad) popf adc test clc xchg (bad) mov cmc add add nop cmp jo xchg ljmp xchg add pop sub push xchg test jns ret arpl add negl mov push roll or xor ficomp leave fiaddl cld cmp adc add push inc add lock ds adc scas adcl mov xor push push xor push out jge xor add adc jb dec lods sarl add lahf add add pop or sbb xor mov lock cmp sbb sbb adc add cmp stos rclb dec push pop mov ret or jp cwtl ret add es push xor push or mov mov pop add mov jae pushf pop sub cmc add cmp stos push add movaps xlat push add push loope inc mov cld daa adc idivb mov and jp insl mov orl mov gs outsw add in jl in ret mov jno add je lods into mov add pop push xchg inc add add mov call mov add test pop fild pushf dec out cmpb dec sbb hlt pop mov sub pop add mov jmp adc push pop pop das outsb incl insb movsb xor inc cmc sahf lods lcall jle add and pop add out dec ja insl (bad) mov xor rcll repnz mov jmp (bad) xor inc lods stos sub ja add sbb imul das out jg fsubr cld add mov outsb add daa xchg subl add push pop push add inc xacquire cli pushf add outsl scas jno ss clc xor push add jge (bad) mov rorl mov mov fcompl jae mov imul and xchg xchg fs pop mov leave add pop mov pop and fiaddl xchg adc je jmp test sub push sub int inc mov scas sahf push xor pinsrw aaa cmp push mov inc stc inc loopne inc jg add xor mov fcompl sub inc xchg mov rolb mov sti dec enter lret jg jp je pop add and add sarb movsb or add push call pop clc jae ret push mov xchg or cmpsb push add imul lahf es add rclb adcl jne nop add lret push push add insl loope adc adc or lds cmp cmp loope ljmp data16 addl stc mov xor pop push add or or lret insb aad das cs loop add insl adc ljmp dec inc sub pop sbb test popf jb in pushf sti pop or out add jle fwait insb and lret bound and ds into jp and sbbb lods ret mov jle jle add mov xchg sbb es test push cltd inc lock les add inc outsl cmp cld sbb out mov add sub cs sub nop adc fnstsw inc (bad) out pusha cmp or pop das data16 push lcall add cs pop push in rcrb jo add js pop int3 push sbbl in fldl and sbb sbb and push mov data16 mov xchg inc pop dec mov jp mov cmp cmpsl sarl shl and call jno sub pop cmp nop imul mov test mov divl jb xchg out dec int dec adcb enter cmp add pop fisubl leave push out or xor mov lods mov pop les xchg test pop add xor testl inc scas orw xor dec enter or int3 mov add lret add add or test xchg mov mov rorl pop sbb mov in dec and fadds jnp js sub call bound stc fs push test in (bad) aaa clc mov pmulhuw test ljmp xchg jmp daa (bad) lret cmpsl pop push push jno ss jns and xchg pushf mov iret pop jge fdivrs push pop in add (bad) nop pop popa mov pop (bad) imul aad xchg add (bad) mov cmpsb cwtl lahf push out inc pop dec insl aaa add mov hlt leave xchg aam inc pop mov jmp and int3 add mov fs imul sarl mov iret mov mov mov loop pushf inc push enter cld dec add mov or cmp xchg movsl add or mov es xchg dec popl lds cvttss2si mov pusha inc mov push jge pop mov inc lock (bad) mov mov jnp adc pop punpckldq and (bad) sub add sar call add mov cld add xor inc jl jecxz lea push xor stos mov cmpsb loop jle insb mov add mov sbb fcompl (bad) mov (bad) and aaa cmc mov roll in rcll (bad) push lods dec add iret cwtl push and loop sbb jno or xor mov arpl imulb mov lock jp pop lret sti jb push daa add xorl in or add call outsl into adc sahf inc call imulb ja andl cmp repnz sbb aas jecxz pop sbb add xchg sub mov sti mov aaa add mov in jns add push sbb cmp mov add in cmp jle data16 inc add imul sbbl (bad) (bad) cmp add mov mov sbb add leave outsb lret lahf dec add int sbb dec adc aam cmp addb je add in pop jp nop fimull mov xchg jg push cmpsl add bound mov std inc scas add out (bad) push sarw jle add scas adc xchg xor add in cmp sbb or fnsave sbb dec nop pop mov dec leave mov es mov mov lret pop add adc add decl iret add fisubl adc jge add ftst jle and jl push or mov ret add or imulb xor jle cmp and jmp adc jb adc mov add mov lock cltd push ret stos mov movsb jbe sbb push add lea add inc xchg and sub adc push adc outsl pushf (bad) lahf mov and inc xor lock pop fwait add mov sub xchg test int lds ret fldl jae daa aam movl fmull insl mov and add adc add scas out dec ja sbb mov cmpl mov fcompl add daa pop out je cmp loope mov add add andl fxch cmp mov incl adc hlt in jp enter (bad) xchg mov xor in push lock hlt adc orl mov add inc inc sub push or adc ret add lock pop cmp outsl push pop pop jg popl mov fmull add std or sbb enter mov (bad) negb stos or clc jge stos int add in pop (bad) cmc out cmp jmp fidivrl scas add fs jmp xorb push cmc jae inc add cltd sbb xor adc repnz dec (bad) inc jo mov add es xor cld mov add pushf mov add pop mov mov sbb add cs int add and sub or arpl dec (bad) or out cmp nop add push dec and dec and dec adc sbb sub (bad) add pop mov jmp add pop xchg es mov push add push xchg jns fucomp add push shll addr16 sub mov das insb or and movsl jg inc aam (bad) test mov or cwtl jns inc nop gs mov inc xchg sbb arpl mov dec xchg mov loop (bad) dec inc pop stos mov test add lcall xor incb jp push test add mov (bad) jnp imul (bad) jbe repnz out add push pop stos xor xchg lods sarb push loop sbb (bad) pop push xchg or jg add aaa xchg popf jp inc or add into xchg leave pop xor ret mov lret jp adcb pop inc movsl in xor (bad) inc popl xlat pop stos add out add pop popa aaa lods jge sub or in mov push testl ds popf push mov inc jmp push (bad) mov out add test ret xor ltr enter scas ret in inc push pusha xchg cli pop push or out add bnd std mov adc inc mov add xlat cld das in push add push cmpsb arpl xor mov mov mov fmul add daa shll fs popf in incl adc bound push negb mov xor andl fisttp push ret pusha pop sbb andl xor je jb popa jnp mov sbb int3 and add test pop insb add push xchg lods add cmpsl jmp cmp mov aaa nop add pop xchg pop sub js cmc addb jg jb std add pop rclb add shl jbe test add loope sub test (bad) xor pop add in xor cmp pop (bad) cmpsb add daa xchg add adc pop ljmp loopne notl or mov inc xorl pop pop lcall push mov loopne mov cmp pop or mov pop mov aad cs imul loop das mov jl pop or push xor or ret cltd in adc mov cwtl (bad) pusha mov add loop jmp aas popf addb jmp mov cltd fs or mov xchg jae (bad) mov add loope (bad) jl and xchg jg or and mov (bad) xor add sahf lock in mov add arpl dec add inc lea bound enter sbbl mov sub fnstcw add (bad) xor in cmovno cmp jno push rclb mov or jle add jge xlat stc loop and push sbb push daa sti add fs add enter and pop das stos fildll test aaa push subl adc sub jbe xchg outsb (bad) mov popl das sbbb inc bound add push popa ret popa in push jo add fcomi adc dec movsb outsl cmp gs add ret cwtl inc push ss and add hlt mov pop mov xchg (bad) cmp push pop dec xchg test pop fs add ljmp lock mov xchg out mov adc rorb push push add cmpsb sub mov popf ljmp (bad) jmp dec jo dec lea and push imul sub dec idivl adc scas mov data16 outsb or in insb adc xchg mov adc push jecxz,pn xchg sahf andl inc cltd popa push test jbe sub jne cmp cmovae cwtl (bad) imul test cmp cs int push out add mov xchg add or jne out mov sahf in dec frstor je add push test sub jbe int sub add dec sbb adc test mov mov nop jp add aas scas mov out mov (bad) fstl imul insl sub (bad) incl fimull pop jae jecxz int3 movsl ret iret je std add leave test (bad) xor mov or mov negl jl adc and or aas push jnp add push fwait daa lds push jle addl and add sbb stc push xor xchg sub fstpl imul cmp add jecxz jmp add imul daa add outsb xorl inc add and aam lahf stos aas mov push sub out and jl add ja or adc mov push pop ret jle dec out mov mov xchg mov dec and sbbl push pusha (bad) xchg mov fiadd lock pushf jl ljmp inc dec test add icebp repnz add add push adc push fstps cs aam fwait add lods mov add pop xor test mov fnstsw adc ja incb je pop adcb ret inc jbe lock mov cmpsl imul ficompl xorl xor insb and sub jg cmp add xor dec sbb add pop or sbb stc loopne and call mov mov mov xlat out ja jl add mov adcb pop (bad) fisubl xor scas jecxz aas push jmp icebp jp in jnp fisttp cli pop inc xchg push std push popf movsl outsb sub insb lock xor pop pop cmp shrb rorb inc int3 fildl jns and hlt jnp add aaa sub add js dec icebp test cmp add fmul out add jae out mov lret add (bad) jg add sub cmp inc jmp add shlb add (bad) jbe add fnsave clc add ljmp add sbb (bad) popa or jnp jo sahf xchg lods testl scas push out adc push ds andl dec jbe add sahf mov popa sbb jmp in dec in jecxz mov rorb and adc stos add cmp jno fcompl loop push cltd lods fstl mov push xchg add push sbb cmc cmpsb add int3 lret ret add out push insb hlt push add inc cmp push dec fcmovnu push jle sbb popa repz js out cmp cmpsl sbbl ret mov sub add push subl js cltd int add lods xor add lds repz pop xor test daa adc add xor inc data16 cld xor fldl mov lahf pop rcrb rolb outsb aam loope adc add xorl add mov shl cld mov or xor iret adc inc push add lahf jbe (bad) adc sbb mov add cmpsl jl jno insl shrb pop jbe pop sbb xchg jecxz inc lahf call out adc int add shrb fstpl cmp into fbstp mov inc add xor adc or cmp sub out dec adc pop sub out xor cmpb andl xchg and cmp loop fisub add sbb fistl jecxz (bad) cmc and (bad) jae ret inc jbe inc or loope sarb sbb add loop mov add mov push push adc xor sahf sub add mov add (bad) jne xchg or cmp rclb leave sbb (bad) arpl les mov lcall xor sub subl subl insb (bad) pop and inc je xor sbb push lods stos cltd jns lret sub add outsl sbb fist push adc test adc sarl or rolb dec fwait (bad) movsl bound fcmovu cmp daa in sub cmp loopne inc imul mov lods add and test mov aad xchg sbb lock pop orl out jp rolb pop cmp mov (bad) pop add adc jb (bad) addl pop sub (bad) ljmp fstpt pop push add test repz andb js push xchg js repnz add mov jb push jnp pusha lahf cmpsb rolb out mov cmp mov int jle mov mov sbb mov psubb testb (bad) xor sbb add (bad) jnp lahf shrb add je xchg scas fs jno push insl jge invd popf dec mov lods push and push subl pop mov add pop push mov cmp xorl sub jg or mov test in stc add mov aaa mov mov pop add sbb adc or mull inc add dec arpl add xlat mov in iret xor stos jb lds clc add push addr16 mov mov in scas dec addl add (bad) inc sbb mov add dec lods push int3 bnd negb add shll in mov push sub loop enter add inc (bad) inc pop lods add cltd cli into sbb stos cmp or xchg push arpl mov dec out mov mov and pusha cmp jnp (bad) xor adcl mov fadds shlb dec ficomp pop roll mov xor sti addr16 addl bound cs cmp rcll add ret mov fimul inc pop push movb ret popf xor cltd push leave int sub pusha jns push es jecxz ja iret mov inc and mov xchg and fidivl add mov mov cmp push jns add adc outsl add xchg clc and fnstsw mov or dec insb repnz add xchg (bad) mov add pushf add jns add cmp stos cmpsb test cmpl adc adc ret jecxz or cmp sbb xor dec mov in stc mov mov add aaa scas mov or adc and pop xchg or scas pop xor test mov sub in loopne xor pop add sti and add js popf pusha mov add pop clc daa inc ja add jmp std fcoml inc or push add cltd movsl insb outsl out add ret or add ds into cmp jp cmp (bad) lahf dec test lds dec stos push adc repz jmp gs push mov fld int3 pop mov jb in jmp dec fnstcw pop fcompl icebp pcmpgtb into and jge pop cmp cltd (bad) mov movl ret cmpsl andl mov xchg inc aaa xchg inc (bad) push roll mov cmp pop mov push xchg shll pop (bad) push jmp subl mov push rcll test xchg ljmp inc jg scas adc sub cmp in add outsb jne cli or or das sbb lds adc int3 test and pop add fwait pop fiaddl cmpsb aam into sbb xchg sahf lret xchg add xor add sbb jno (bad) dec test xchg add pop hlt call lcall scas pop adcb or mov sbb push jle inc add or (bad) xor cmp jg jo sti cmp mov xor (bad) pop and xlat hlt repnz xchg bound js js pop ja xchg mov pop push mov mov insl add adc or dec lods push add xor sbbb and sbb and or pop cmpsb add gs popf jns pusha icebp push cld push and inc (bad) mov leave test push and pop lea mov add icebp out pop mov sar imul imul shl mov add xchg xchg fbld testb adc mov loop in loope add js mov adcl sub insl adc leave push xchg pusha mov sbb sti inc mov push je jns sbb adc mov add out movsl inc cmp cld jne imul mov add jno in mov jb add fidivl inc ss fisttp inc enter mov add push sbb mov in and dec lret push ficompl add movhps push mov push add hlt in pusha mov xor test les (bad) fist shll fnstsw or lods pop subl xrelease pop sahf dec mov push bnd (bad) iret inc lock jae (bad) cmpps ret add cmc jo test stos popf cmp push loop push sahf (bad) dec push add push push mov sbb sahf push jg js ja mov icebp hlt xor push or sahf es add xor mov mov insb mov mov sbb cltd add addr16 and (bad) sub dec add scas outsl xchg and test (bad) fsubrs pop popl and mov (bad) jo mull pop mov sbb std ret out cmp sahf dec cmp pop ficom cmpsb hlt and add pop fs int3 mov jne add sub or cmpsl hlt push loope or jmp adc xor pop xchg add (bad) mov (bad) ret aas mov cmpsl movsb loop adc not adc nop dec mov js cmp and out sub add aam mov rcll add js lods adc add push jo lods mov add or or mov sbb xor add mov ret push xchg inc lea rcrl sbb mov icebp add ljmp sbb push iret cmp insl push pushf pop imul ret push adc add in pop repz add enter mov lcall rcrb jo xchg mov add (bad) adc mov mov sbb call fstpl xlat or das dec loop pop in std add adc movsb pop push xor shlb adc or pop push push fild push fmul sbb das pushf mov xor push push subl cmpl jno ja add mov xor hlt push aaa mov inc jo sbb xchg pop imul aam notl imul pop leave sbb test ja mov jl jns into push fildll testl add enter jo mov mov push and dec sub stos push (bad) (bad) xchg mov add cmp test jb pushf add xchg xor add add push mov add (bad) xorb cmp inc jae mov orb fsubp push dec lea push cmp shll and insl adc sti sub and mov xchg or add pop (bad) roll mov pop add jmp rclb sarb addr16 mov dec jecxz mov pop pop or xlat jnp (bad) jmp jle int3 rcrb jns fisubr cmp mov sbb add out push mov lahf add mov xor push inc mov fwait ret lret sahf jmp jnp imul shr dec add hlt int xor gs sahf adc popl push sbb cmpsb test mov rolb cli push cmp out mov mov mov or outsb xorb cmpsb insb xchg pushf ret ret pusha lahf movsl mov lret sub leave les mov ja xchg test out (bad) xchg and leave (bad) rcr andl inc xchg dec push and daa es mov lahf pop loopne test out (bad) push std adc jg cmp repnz mov fisub inc in rolb ljmp jnp std (bad) cmpsl or nop and push cs mul pop jb cmpsb sbbl mov and ror add lcall push lahf cmpl mov out mov je jo or mov xchg cmpl jle fwait push add fnop sbb cmc jecxz jmp add js pop pop addr16 cmpl lock inc out jns cmpl add popf mov outsb fldenv sbbl subl inc lods inc cmp mov lret pusha mov call cmpsb movb mov rolb sub movsb test inc jge subl add add adc in adc jo xchg cmp cli lea mov push pushf (bad) xchg inc in add sub push add add jp add sti imul fsubrs inc add cmp mov sahf sub repnz ret lock je (bad) add sub lea fsts and xchg jo pusha or pop fsubp add mov push lahf add inc (bad) ss and sbb push nop cmp and mov add nop and js out daa jo mov popa ljmp xchg mov in sbb sbb push add push dec pop sbb jno push sarb add mov dec test mov add movsb dec jp es add call or xor icebp aas add frstor insb xorb jo (bad) sbb fidivr fidivl mov dec ltr lea je add xor or xchg andl stos push clc push ficoml or add jmp cmp lahf push hlt jne add or test (bad) xchg addb jp cmpsl add mov cmp fisttpll std mov into cmpb lcall pop les loop (bad) dec sbb repnz mov cmpsl sub mov xlat ret stc sbb ds into add fs mov pop pop inc jmp add mov sub rolb dec sub cmpsl sbb cmp add mov fucomp sub dec add mov ret jo jnp add mov fwait adc rcrb (bad) xchg data16 inc cltd inc sti cs int3 addb pop sbb jmp fwait pusha aaa das dec or add shll pop popa (bad) repnz addb mov mov add lret and fdivrl add fisub mov in jns sarl test push jge jl incl rclb out lods cmp add or mov out jnp test dec sti (bad) jo sbb int es addr16 fwait popa pop test and add or pop rcrl sbb jp int or adcl dec cmpb test add mov movl ret fldl add cs push mov mov adc mov fdivrl add inc mov jae stc outsb int3 xor and pop pop mov add jo cmp jp lock xor jo,pn adcb inc scas test pop outsb gs dec ja imul in ret fisubr push xchg movsb mov sahf add mov push inc cmc add or enter xorl scas fwait lock cmp cmp imul je scas add lods ljmp adc pop ds add outsl arpl rol adc xchg js xor adc adc push pop mov cmpsl jns,pn les xchg inc add cmp add mov xchg add pop jmp mov add and pop add cmp add pop push cmp add ljmp add push and andl jmp (bad) aam jmp out cmp popa (bad) and movsb pop fbld sub fwait out mov in lret (bad) push dec add divl add pop jbe cmp sbb out xchg adcl or push adc lea inc (bad) movsb rclb add xor mov stos loopne imul add aad scas subb (bad) rolb pusha clc ret mov mov ljmp add test adc incb enter and mov sub adc stc movl mov lods movsb add cmp int3 mov mov aad add inc xchg sub push push inc cli jne cmp enter sbb arpl popa sbbb scas cmp (bad) faddl and pusha rcll inc sti pop push popf inc inc xorb push mov ds mov daa dec dec in in andl push pop int frstor stos ucomiss and add jp mov add (bad) faddp sbb adc enter dec es add mov lret gs add ds xchg movsb pop or push scas mov mov cli ja add or lret xchg testb adc inc popf movsl movsb push add jmp ret popf xchg adc or cmp jb fldl pop jg mov jmp jg add call and add jb rolb sub xor pop stos xor js xor fnstsw inc add inc inc sbb mov fwait and add bnd xchg jg mov enter data16 ud2 rorl outsl sti mov pop mov cmp mov mov (bad) jne addl mov cmc jnp inc enter pop push rolb sbb stc jmp cltd mov adc sbb cmpsb pop or shlb jb add push mov mov cmp push sbb jo ds (bad) mov rolb enter out add and xor ret or rep test add sbb addr16 adc mov add jmp add add add add xor add cli ds cwtl flds loop rolb adc jg mov add mov stc jnp testb xchg sbb push (bad) xor inc out inc dec add cmp rcrl add sbb hlt add mov add fnstenv add rolb jge add sbb mov sbb add cmc push test popf add mov shrl pop mov add xchg es xchg je popa movsb stc xchg jmp sbb ss add out dec jl popf xor add mov add mov sbb cmpsl sub add mov mov adc add (bad) xor cmp add stos outsb mov lods les insb lcall call mov inc mov or add jp xchg inc notl pop cmp mov add push shlb repz ret not and es jo add outsb jnp adc jo les dec rcrl stos sub test inc lea cld jbe push aam adc cwtl jae out js pop push dec mov sbb or mov mov out lods jne dec dec pop jbe add mov std imul xchg add ja scas or adc cmc xchg xchg jo movsl jmp xchg xor push push xchg pop push fwait add mov push pop sub fadds inc xchg mov js add ja add jp mov push adc pop aaa aam ror adc jl add test lods inc pop fidivrl add stc and mov mov adc outsl push in aas xor add pusha or push cs jae add movsl jl orb dec adc add stos push cli mov aas push jle add or fcompl fdivrp nop fwait rcrl add mov enter cmp and pushf push mov bts outsb cmpl push sbb aaa mov cmpb mov xor psrlq std nop aas or js movb aaa xor pop adc mov adc add inc pop stos scas jle decl mov in add mov add mov cmp cmpsl adc sub pop xor pop jb inc xor cmp cs dec jp mov mov fidivrl andb inc test in aas subl pop popf aad clc add (bad) lahf push js enter fcmove fcomps rcrl pop (bad) (bad) repz push sbb push (bad) cld mov add cmc in (bad) dec cmp sub in jge cmp add pushf stos outsl jp scas mov add shlb add sbb jb dec adc add jge cmp or dec ljmp push smsw int3 add stos cmp jle pop xorl sbb jecxz call add js cli jp je roll cmp jl push mov mov push sub mov out outsl iret movsl rolb (bad) faddl fwait loop push aad and test lret test popf ja js push mov rorb and lock lret stos jecxz mov imulb fwait mov push les add push (bad) insb sub push jae scas push push arpl movsb jb xchg nop movsl jbe lods into or inc in sarb add mov pop dec ja pop adc xchg inc cli lds adc repnz aam pusha test cmp (bad) movsb call repz inc push inc adc cwtl push xor test fldlg2 add adc clc pop and mov movsb or imul mov mov add pop add xchg push push xchg add loop shlb jge movzwl test aad xchg push mov jo or xor push fdivr (bad) push lret loop xor inc lcall add xchg cmp sub jecxz test pop cmp ja inc sti add data16 addl fldenv loop das dec mov lahf add add mov push sbb sbb adc add xchg adc add lea inc jl mov ja lock add xor sub jp xor pop popa js add mov pop add dec add sarl jle or sub push jae and push mov sbb cmpl dec in push les mov jo jne add add mov pop inc pop inc mov cmp add mov bound addr16 cmp test mov mov ds roll into mov push and movl push dec inc lock outsb sub cmpsb push add jg cmpsl movl push outsl add xchg popf xchg add out dec scas fdivl std add fyl2xp1 mov inc mov add mov sub add push xchg push jge mov mov cltd adc cmpsl mov pop cmpl test add add aad mov popa pop cltd or add xor cld cmpl inc mov lods aad aam pop pop mov cmpsl xor loope fisttpl and add rcr mov cmp push aas fnstenv push fldt imul jle in adc sub cmpsb ffree inc sub xchg add sbb and add cmp mov push push inc inc test inc inc in jmp sbbb jle (bad) sbb rolb sub sbb adc in fcompl dec pop ds or xchg cmp and repnz cs inc mov or hlt pop adc cmp pusha sub test repnz insb lods mov testl add add iret push ljmp sahf mov test add mov add lods repnz popa fadds out xchg or cmp adc call cmp and adc add and mov sub jbe data16 inc mov inc ret (bad) out jae sbb mov aas test sub call int3 imul jg add lcall cmovo xchg add adc add stc push sbb dec or in push mov fiadd xchg pop xor xchg add nop xor add (bad) cmp test mov insb pushf movsb cli jmp imull or rolb aad or test adc dec fldt orl mov add or fildll adc mov outsb (bad) test aas stos in fldl push xchg mov pop daa aam lahf (bad) jne pop std int3 and push ds repnz rcll cvttps2dq adc in xor add xlat pop inc add test adc lcall fwait icebp add mov out add pop fimull add (bad) cld sub and add push push sahf adc sbb cmp (bad) jb xorl loopne and lods and add or (bad) lldt addr16 adc dec add mov cmc leave and add loopne jge pop repz lret xchg sub int or iret add fisubrl (bad) and int3 gs inc out add pusha push jne andl insl insb pop outsb jo bswap jmp cmp add aas leave sti push add rorl cmpsb cmp jbe mov xor rorb cltd add pop jno push mov mov xchg cli ret mov push xchg cmc dec ds fsubrs int mov scas add cmp inc add orb stc adc cmp insb fwait outsl mov add add cmp add add jecxz cmp adc ret cmc add int or aad int3 lock nop fcoml dec mov or or sahf jb inc (bad) and movups or xchg aam xor mov outsb adc push add sub adc into lret popf out loope test loope and xchg add cwtl call jle ja xor movsl je add inc adc jecxz add cmp and adc fucomp ret mov jmp ljmp inc in sbb pop lock sahf add popf jmp rolb rcr inc decl movsb addl insl add inc daa add movsb decb jne mov sbb add (bad) pop bnd add xor add pop cmpsl xchg mov push and mov popf xor daa xchg test loope outsl add sub jnp add xchg push nop xchg sbbl jae sbb pop cmp mov shrl pop punpckhbw pop les insl dec (bad) inc or out aas inc cli add add test add xchg daa xchg aam add dec fisubl es fs add sub sahf pop mov and pop sub push add push fistp mov add add pop dec push jle mov (bad) xor push fdivs push adcl lret push fstps pop and xchg add lods xchg cmp add pop sub andl pop es add lret jge inc cmp add add das xchg push add scas push mov cmpb push bnd hlt inc pop mov jo pop arpl pop inc in inc insl stc sbb mov push imul sahf inc inc (bad) sub adc or mov dec cmpsb repz inc xor iret je mov sbb push cmp int mov or add fisubl int3 xchg adc test sub or dec jle das fwait add frstor mov repz in (bad) das mov cmpl (bad) data16 out mov dec and sahf popf cmp add dec mov fucomi aaa mov mov inc xchg (bad) in add (bad) fnstenv js sbb lods or test ffreep and or and stc xor inc das jle or push sub inc call es add xor repz ja outsl sahf xchg pop inc add pusha push (bad) clc rolb mov jns add push mov push sub jo cmpsl mov dec lods xor mov scas xor inc mov mov mov inc xchg adc add jnp xchg in add push enter loope inc jp imull push add mov xlat data16 test ret hlt pop pop mov add pop sahf push stos in gs sti add int3 jns jne inc add or add inc aam scas inc or xchg icebp fsubl gs pusha mov mov adc inc sub and sub or sub push arpl add shlb jae icebp xor xor pop cmp mov mov xor add lret add js cmp xchg mov lock shrl pop xchg dec ficomp add add mov xchg pop add loopne xchg mov push loop jns inc and call outsb movsb adc jno xor push pop cmp xor rclb mov movsl aaa add sbb jp mov dec mov pop jmp scas sahf sbb addr16 mov adc popa sti mov mov add lock scas sbbb jns add inc push add stos cld dec dec icebp imul cmp ss and das outsb insl fadds pop sarl xor pop sbb incb rep mov xlat add (bad) cmp cltd push std add outsl stc add mov or jo or mov xchg cmc fdivrs sahf mov push add jmp mov lret add dec and leave jne,pn add rcll add mov jle xchg and xor aam adc inc sbb add mov add nop cwtl test add and or and cmp (bad) xor adc std add sub push pop add xor add mov cld popl mov dec jb bswap push daa cli mov mov and cmc mov fwait add lea aas add mov push dec add rcrl xchg scas mov fisttpll adc jo add fwait scas fisubr mov xchg je or or xor pusha mov jge lds ja xlat iret add xchg adc (bad) pop mov pusha push or jbe inc rorb mov dec mov mov addl aaa jne pop add adc push push add mov cmpsl lea cmpsb pop ss mov push cmp pushf inc bound push je xchg iret mov (bad) add inc icebp stos das pop push cmp pop mov inc mov mov shl addr16 incb adc sbb pop loope mov add xor pop ret test fadds mov les rcrb push fs jge hlt in push xor push rol jp jo,pt pop (bad) pop aas fsubrl jge mov pop out or fdivr inc inc dec and inc push pushf add xchg jne dec jo movsb cmp mull testb push mov mov ja inc sbb add (bad) dec mov jb aam aas call push arpl xor mov mov idivl mov xchg mov and and sarl add sahf (bad) in jb adc andb mov sbb mov xchg call mov push fisubl add jge movsl subb jl int3 dec bound cmp xlat gs or add xchg and lods roll out stos xchg dec mov mov in push cmpb pop mov test and add popf add and mov pop ss hlt int inc sub aas or mov inc pop and and out test test popw addr16 test (bad) adc pop fist andl out fucomp xlat sti fld bnd arpl jge xchg ret cli add fnstsw or loopne addr16 mov sahf xchg outsb not mov cwtl je fdivp add mov add ret xor idivb out add sbb inc aad lret add in fwait pop sbb push sahf nop mov and fiadd xchg mov rorb aad xchg es jae dec dec push sbb fiadd loope cmpb mov vmread mov pop add int3 inc or mov es and cltd mov sbb adc imul bound add les in adc ds mov inc test or and lret and and cltd xor icebp sub out loopne mov add mov aaa and push add dec sbb push insl scas dec test xor (bad) or jae add lret push push in add mov loope cmp add add jbe adc lods aaa movb pop jle add mov add sub adc mov bound inc push xor adc fsubr dec je pop out cwtl clc and mov fadds add cmp int3 test jmp cmc lcall das icebp (bad) jb gs test add add sarb mov push mov je fldt add fist add test mov loope mov das mov jne sbb and fdivrl mov mov sbb fs iret outsl xlat in pusha adc test addl push xchg xor add popa push mov imul fsubs ret fldt adc push mov push and mov pop repnz jne mov lcall cli xchg xlat (bad) enter (bad) (bad) xor out mov into jl jae cmpps pusha dec sbb mov decl pop (bad) nop add push dec insb fnstcw push cmpl xor dec in sbb lret cs popf inc aad sbbb adc bound je add mov mov cmp into inc push dec (bad) xchg jb add sar icebp add insl add negb push iret pop mov cmp or rorl and sbb and xlat add mov mov adcl mov push enter in clc shlb mov push lock push pop jo or pop int3 xchg arpl mov dec xorl outsl dec cmp test cli mov cwtl lret inc or sub daa (bad) cmpsl ret test jb je mov lock fldt push pop pop jp pop repz das adc jno addl aaa insl bound push stos test sbb sarb test xchg push mov cmp imul lds cmc call shrl add int3 imul adc divb stc add test jl out pop (bad) mov ret dec add jg gs dec stos (bad) xchg into add fwait lds lea sti add testl icebp add int3 cwtl ja cmp sbb add xor mov cmc test add aaa (bad) rcl pop pop cs add bound xchg push pop in jb or or es add dec sub add fild push and or xor add jb subb lret lcall mov inc insl or lds sbb cmp movsl dec out int3 lods add cmpsl push sahf or xchg pop jmp sti jne data16 movsl sbb dec add xor sub pop jbe call mov mov inc push aas int outsl mov popa pop add xlat push mov loop and sbbb mov jb,pt xor mov cmpsl mov adc lahf pop inc jno adc gs or xor xor inc imul xor pop add repz call and enter push out push loope (bad) movsl or dec add (bad) popf add frstor stos sti adc push xorb cltd mov data16 nopl pusha xchg std xchg orb mov dec add lods bound mov pop andl cmp stos xor mov aaa (bad) fldl xorl jne (bad) cmp pop adcl inc dec mov sbb and pop ds add nopl (bad) adc cli xor or movsb add push bound rcll add out out adc push or pop mov add mov subl sub add ljmp xor cmc sbb adc out fsubl aad loopne jae add xchg and lret mov pusha xor add add test inc dec gs test pop in pusha jl aas movsb and xor outsl mov orb inc cltd mov jle sub test push push mov xchg mov jmp verw xor jl add xchg adc mov add repz add out xor dec mov imul xchg addl (bad) adc jp jns add lods jno cmp xchg jne pop cmpsb mov lahf pop aam rcr xor mov lret insb cwtl add push xchg out imul lds andl adc add and push mov cltd in pop add sub aaa add push cmp cmp add out addb pusha dec sub sub push push add push pop test test pop adc dec sar fldl sbb xor add (bad) ljmp and dec stc add sub adc add testb inc ret inc scas adc or dec je pop in adc xor or cmc jae push lret fiadd push sbb insb test ret sbb mov test in pop add cmp xor lret mov (bad) and insb jb subl inc pop orl add les popa test add cmpl add repnz popf mov pop xor (bad) mov pusha std mov add and add add pop mov add arpl ja (bad) divb and ret cli mov xlat imul mov mov lods jae loope fbld pop addl mov inc jg fdivrs push (bad) movsb sub add mov mov subl test inc and xor add (bad) jae cmp js sbb sti lret mov loop mov xchg pop xor lds cmp fcoml add or dec out jns data16 add ja pop (bad) and push adc ret add fsubl movsb insb add cmp (bad) jmp in add lret dec jle in test pop mov sbb push sub or iret xor stos xchg int3 popf mov test and xlat or push add mov scas sti jnp cmpsb xchg push pop xor ret add sahf mov (bad) shr inc push shlb and push int mov add add pusha add (bad) xchg cmpsb loope pop mov add in aas sub inc jl inc add cli sub sub or test xorb ret ret mov add mov sbb fildll out fiadd popf xchg mov rolb aas push leave insb pop bound dec fisttpll pop sub add (bad) adc rcrl sbb test ror mov adc add or fwait hlt les andl fbstp or (bad) xor jmp mov adc add xor loope add mov mov lcall enter add (bad) pusha jge sub jl sub push add (bad) rolb clc cmp mov push pop add das or pop repz jns,pn xor add cmp and sbb sarb lea adc psubb outsl add xchg push popa lea add push ret mov pop fwait dec dec aaa loop (bad) add mov push mov popf pusha mov faddl repz sbb jae lods aam fistp push sti xchg add nop js mov loope or lock psllq sub pop out xchg dec lret add add push sub mov es loope or jne mov sub and arpl add push pop xor adc jns js lods xchg push cmovge adc add fiadd xlat rcrl mov dec inc ljmp jg cmpsl aad add icebp sbb jcxz leave sbbl cmpsb mov push mov cmp out insl add andl fs inc xor data16 (bad) mov cmpb push add loopne push add lret mov popf test pushf mov pop add scas xchg mov dec or mov cld out mov or jecxz iret or sarl in movsl adc popa std pusha lds repnz aad pushf idivb pop sub xchg and popa jne enter test add sbb cmpl and jl pusha inc iret add mov mov outsb lods xchg sahf aad pop sub push xchg sbb dec repnz add inc das jge decb push fildl cmp adc add xorl add rol enter push lods add mov inc popa xchg out ret pop jno mov xor leave inc cmp and dec cld clc dec add xor dec xor sbb aam adc cltd je fstpl xchg dec imul xchg jecxz sti arpl shll mov popfw lock mov divb dec jecxz icebp and mov jge les add push fnsave add icebp xchg jb add or jno js sbb adcl mov pop js (bad) add mov mov cmp fist xor mov xchg mov dec incl adc inc arpl sub ljmp jb sbb add movsb ljmp adc push inc roll out add xor pop lea roll mov test gs mov cmp or lea ds (bad) in mov lahf cs fwait push and fdivp push xlat ltr pop rorb xchg bound inc jno mov add loopne notb push flds xchg push mov add push cmp pushf pop or mov orl dec add cmpsl orl mov subl (bad) call stc pop xchg mov xchg cwtl add adc cmp xchg xchg outsl push sub push sub sbb push add adc and xchg xchg repnz jle enter push xor bound lahf cmp emms xchg sub pop mov jl sub jg xorb fwait cmc je inc pop sbb imul xrelease pop push ss mulb iret or inc repz push add or sbb das add mov jge popf leave js and add es test and out bound leave mov add add mov js dec push mov orb push sbb xchg sbb xor sub ftst cmp (bad) mov mov sbb loop imul mov add (bad) inc in fnsave push hlt jnp outsb (bad) cmp and push push add ss loopne adc loope divl xchg daa mov and dec aam (bad) and xor mov xchg clc or push add sahf (bad) jnp push mov mov dec pop xchg add sbb lods dec push or add out ret daa shll add stos push push dec push add push or inc insl cmp fidivrl mov push add cmpsb or pop cs sbb fcompl push aas rcll or push nop push and cmp sti roll mov dec loope add dec inc jp inc add out int bswap and dec adc xchg inc je insb test movsb push jae xor pushf sub adc mov mov xor icebp imul imul pop jmp sbb (bad) adc test dec in jo add cmp pop dec mov mov add jb mov xchg das jle (bad) mov test jns dec cmpl scas xor push xchg cmp bswap inc shll adc js bound jg or das pop lret dec xchg fbstp pusha jno stc jmp test mov ja incl or fwait mov push mov sub out or pusha mov int addr16 add mov flds push xchg cmp cmpsl je and dec dec aam lock mov js,pn int xchg add std mov xchg sub addb push (bad) into pop cwtl pusha or and nop adc push pop shrb jmp jecxz mov shlb push adc inc test shll jo push xchg sub and lock xor jl add mov mov and movl or mov repz and add fistl jo pop jg das (bad) popl push jb add test mov add popf aam divl dec fstpt adc pop je (bad) lret stc mov aam pop and add sub lret subl out fldl jle test add jecxz lahf xchg pop movsb mov stc lock cmpsb sbb inc inc adcl add or adc data16 add in and int mov pusha jp add pop test inc add push push add ja es (bad) push xchg mov xchg rorb popf imul cmpl push lahf jbe insb jecxz xor jmp inc (bad) jo in add sub add jmp xchg sbb pop sbb and in addr16 mov dec scas sub push mov xchg adc cwtl inc pop jge rcl (bad) movsl jle cmp pop dec pop roll negl (bad) out data16 out add dec lret pop add aad aas pop add cmp pop xchg mov or (bad) sub add or cs cmp bound (bad) jbe or (bad) jecxz (bad) xor cltd dec ss clc idivb insl ljmp mov lock xchg in test sahf pop dec cmp cmp jl subl add xchg shll cmpsl clc scas add and pop xor mov dec cmpsb mov xchg call hlt cmpl mov outsl scas push dec imul jnp pop sbb inc aas lahf push incl dec fwait and push jg popa add pop jo and aas lret insb fistl mov cmp in mov movb and inc cmc orps (bad) faddl adc add aam or aaa popa adc cs push (bad) dec pusha inc (bad) inc pop mov mov sbb test adc es cmpl xchg fdiv lret add pop gs sbb mov imul push cmc in xchg aas cmp sub idivl mov iret loopne add popf inc and rcpps flds adc push mov add sahf sahf mov movsl push mov incb mov inc sub mov mov ljmp sbb arpl and push lret add mov or jg add mov fbld lds xchg and test xchg add add fcmovbe adc aad outsb and cmpsb add int cmp add inc mov hlt inc mov dec add xchg inc lcall adc test sbb cwtl sti das adc push rclb push and sbb cmpb xor jl mov add or add arpl mov mov mov mov add mov imul xor mov push addb jno mov mov fidivl jb adc es (bad) insl push fnstcw cmp lcall xor imul xor xchg aam or pop pop sbb sub rcr enter pop mov scas dec imul outsb sub add lret out or dec int js dec jg add sar stos push cmc sbb sub or negb fnstcw ror jl daa stos cmpsl jmp add ds xor arpl popa das add enter cmp cmp adc xchg sti add or sbb add sub pop add dec lods in pop inc loope repz out mov (bad) (bad) movntq out test (bad) fldcw inc add xor pop (bad) cmp add jp fsubs negb add mov mov cmpl adcl scas add mov inc out inc dec js popf int xorl add ret bound out inc loopne sarb dec dec (bad) fmull int3 call push and ja and jo mov js cli pop sysret pop insb xor icebp push xchg (bad) or push fsts mov mov fdivrs dec stc add adc xor popf xchg mov xor xchg sbbl insb xor adc and cmp inc sub fxch mov call arpl roll lcall lods add lret xchg mov fadds mov inc cmpsb punpckhdq rolb outsb or add popa mov mov add movhps mov add cmp sub aas ja push pop and sahf jno gs xchg mov pushf xchg pusha add sbb push sub pop pop add push inc cmp repnz iret std jo jb pop sahf cmp dec cmp or xchg mov xchg js add and jo xor rolb inc fisttpl add negl push inc outsl iret popf add je lcall fisttp subl pop inc ja add cmp ret test mov and lcall (bad) enter jo es cmpsb cld xlat xchg jno outsb mov rolb mov push xchg (bad) mov jecxz push mov mov inc outsl cmp aas aam daa jg out ds xor dec gs xchg outsl not cmp cmp fild mov lahf jns inc mov add and out mov (bad) fcomps sub cltd add mov jbe cli mov add sbb lods insb lret xchg test adc add xchg jmp add adc (bad) dec mov mov mov jo sbb rolb and loopne cmp mov jge call dec shl and sub push in inc inc mov add adc scas inc or add rcll aaa add test es roll mov xchg push sbb jb in add push push and add jl (bad) mov inc cmp push add cmp or addb out xor mov mov adc pop jnp dec outsl std (bad) push int3 pop xchg and fwait lea mov popf push fdivrs mov and cmp mov xor (bad) aad (bad) ja dec and push ret xor push addb lock push repz fwait push test ljmp pushf add rcl cmpsb add jns and or or stos out inc inc (bad) stos xchg sub inc dec loope push add std adc adc mov and pop pusha adc notb test add mull sub loop push jnp push add adc pop setb shlb mov sbbb cmp pushf cmp add pop subl bound adc mov push aad push dec adc mov cmpsb jae inc test mov (bad) cmp adc aad add mov add xor push or das sbb sbb pop and enter sahf rorl str mov xchg dec push xor mov adc mov or mov jbe jle xchg add mov addr16 pop dec push sub xchg into adc insl (bad) fist test cmp movsb adcl movsl lahf mov ja add sbb mov sarl inc js jge (bad) xor mov mov add add lods ja jecxz add adc mov out insb mov in loop aad dec imul negb int3 xchg cs mov add imul push fwait arpl push aam push xorb aam mov fimul scas and jnp jnp fcompl iret push scas add icebp movsb rorl dec adc add cmp inc ss xor fildl add sbb inc xor push push adc out pushf enter nop mov cld jo in add jle lret pop (bad) mov loopne sbb inc xchg inc arpl or cs add push add lcall or lods mov pop addr16 sti pop jo test push gs cmp fsubl xor pop sbb cmp lcall jmp sbb add mov xor insb mov cmpl push pusha xor scas cs lret dec xchg jecxz rorb shrl add or hlt neg add add mov push in xor push add mov pop dec xchg pop add xchg jmp jae je add xor sahf mov jecxz pop addr16 cmpl mov jo jb in jno sbb out rolb and jg mov fistl test insb jae sub lret (bad) jle inc push cli add mov mov push mov mov jbe stos cs xchg fadd lahf gs test jp aam add (bad) and jg add adc add fsubr mov and add lods adc cld xchg xchg xchg push or push lahf cmpsb adc (bad) cmp enter ds mov loop add bound sbb loope dec adc push outsl orb into jp in cmpl sbb xor dec mov mov jle in inc add mov daa mov test dec adcl add in xchg arpl test jg,pn xor add fwait ret push stc clc loopne (bad) xor add push mov cmp or sbbb mov jmp mov popa mov mov push mov pushf add outsl gs add cmp cltd jo pop out test xor mov icebp pop mov mov cli or add lahf inc sbb sahf ret paddsb add in and add jp add xchg cld frstor or (bad) shr repz cmp jno add stc mov icebp jp adc dec or rcll add push sub mulb inc xchg mov lret (bad) mov inc add dec icebp xchg xor or lods pop sahf jae shl pop ret mov into sbb insl or add push xor add repz in add sbb adc out mov lea ror cmc scas lds and jle je sub push jno cmp popf xchg lea adc push stos int3 call add out cvtps2pd cmp mov add push fldenv sub cmpl cmpl cmc out xor loope add stos sahf cld leave mov adc cmp icebp mov push pusha add in mov test xchg scas xor xchg hlt jmp loop adc xchg push sub (bad) inc loop dec movsb outsb cld add cli cmp std call jl fildl inc out inc es ret sbbb push fstpl lret aam pop inc cs lods pop adc push ficoml or xor push std mov mov inc add cmp cmp inc data16 popf adc add imul aas insb mov jl dec add rcr pop lock enter mov add fnstcw mov add jb pop add dec jbe jmp arpl subb add push adc daa push add je add call aas sub daa fs jne inc lahf popa push sti mov fldt xchg rolb mov mov xchg dec aas rorb insb cmp and fcomps inc mov inc fs aam cmp pop scas jb jecxz icebp addr16 fst xor ja add mov or out or fiadd sbb lock ljmp pop pushf repz jle xor add jmp test arpl xchg mov add mov cmp push jle cmp mov (bad) leave mov mov cmp das addl and sbb cmp das or pmulhuw vmwrite dec dec iret cmpsl cmp jg xor pop mov arpl mov cmpb es jbe sub sbbl jae (bad) into jnp xor bnd xor (bad) jge imul xorl (bad) add movsl lcall xchg rolb sbb cmpsb push inc shrl jne mov fnop aas mov (bad) mov insl sahf sarb add pop aaa int (bad) popa jo daa push add in push jne add in pushf dec ja sub ss decl popa dec je add inc aaa mov dec xchg add ljmp cmp int mov adc pop scas (bad) loop xchg mov aad mov lahf add adc leave mov or fs (bad) clc mov adcl enter in sub dec jmp xor jae sbb pop mov stos add or pop mov add and (bad) (bad) mov fiadd jno mov enter push mov sbb sub jne push imul dec hlt shrb pop cmp sbb scas cmpsb push cmc xchg or or dec negb mov cs adcl mov mov lods lods fdivrs sub shrl insl sub loopne adc push outsl push imul sahf mov popa jno xor lods (bad) mov addl subl jecxz sahf and dec aam testl mov sub sbb inc lds out clc xchg rolb xor movsl mov imul fwait add pop lea int rcrb inc lahf ret imul sub sub mov fwait add xorl mov add push lahf stos daa adc add fcmovnu or cli out jnp pushf cmp add es xor mov cmpsb test pop push push nop sbbl push add mov lock push dec add mov lods aam mov add xchg or push faddl sti pusha xor mov jnp movq aad mov or add sub jecxz mov mul xchg push test jle add ret mov push mov add or add pause movb (bad) pusha enter jbe iret adc (bad) mov mov mov add xchg adc incl add cmp ret cmc int jb add jo and xchg pop mov cwtl xchg subl in mov jg mov mov pop push ja mov push fwait lock mov push outsb faddl xchg mov push hlt push fcmovnb add scas incb pop cld in jae sbb mov xchg sub fwait dec add pop cmp add decb das fildl push call aas jp cli cmp pushf inc imul mov sbb insl loope xorb sbb add sbbl add movsb pop sahf jge inc jp push inc pop in add aad dec in add add sub out adc lcall outsl xchg jae repz in push add xchg add nop mov lock ljmp js sbbl out adc pop mov das sbb popf jecxz into add push xchg jo sti push les mov sbb xor ds bt jns (bad) mov ret inc mov cmpsl xor cmp pusha adc add pop pop pop mov mov aam push pop cltd add jmp flds ss (bad) mov fcmovnb mov outsb and aas pop push cmp inc and loop mov jle add add sbb add fdivrl pop sbb add dec push lods and add push lret cmp les fidivl out fnstcw stc aaa cmc dec sub enter push adc addr16 inc imul out int xlat pop or add das loop hlt cmp adc imul and test sub pushf add std cmp aam add stos push add pop add adc inc (bad) dec xchg xchg xchg inc cmpsl (bad) pop add popf jbe fistpll bound inc pusha add inc mov dec cwtl sub movb mov ljmp add mov jb nop pushf add pusha fmull pop orl in jo jmp es in iret rorb cmp dec cmp xlat (bad) addr16 (bad) icebp add or aas dec inc sti xchg sub mov fildl out mov rcll fdivr fsubs pushf ja sub push subb fnsave inc mov add push mov (bad) mov sbb ss mov add inc int inc inc insl and mov mov mov aas imul add cwtl jg sbbb mov (bad) je out sbb (bad) mov roll popf pop push or hlt add or cmp add ss cli daa dec add bound xchg cld enter xor mov sub push pop lods mov push cmp hlt cmp aaa sub jmp dec es mov ficoml mov or ss repz add loopne xchg aaa jbe cmp xor in adc loop dec sub gs in stc and outsb leave test push jne adc mov imul or and repz inc popl cmp inc push xor push push xchg in adc (bad) mov js jne push gs add or add xor inc mov sub outsl cmpsb imul and xchg dec das inc idivb xchg adc loop add xchg inc cwtl sbb and ret popa incl xchg movzbl cmpsl add add stc cwtl adc loope cmc sahf int gs mov insb int cwtl add jmp jbe pop adc leave dec aaa fild lods std push pop sbb fs or mov fldenv inc sti sahf add rcrl js rolb daa popa in std lods push aaa and cmp mov mov ss movb or mov movaps push inc (bad) jo ds sub add andl cmp jg in loopne cld mov push bound inc pop (bad) js sahf popa fadds repz scas cmpsl stos cmp (bad) icebp fistp insb xlat pop cmp jl cmc repnz in mov loope sbb loopne pushf imul nop jg sbb cwtl orb mov sbb adc xchg push fs pusha lods ss pop add (bad) std adc push sbb inc pop xor pop push call xchg daa fimull pop dec add or push aad inc mov lahf (bad) addr16 jno xchg lea ret add jl mov andb push xlat in mov cmp mov push enter orl gs push stos rolb popf nop or add cmp into push aam push xlat inc mov sbb ja scas aas daa fnstsw mov add adc (bad) sub aaa aas inc in andl push sub cmp jecxz lcall and repnz add aad add inc or fadds subl and jecxz inc mov arpl hlt push aam mov in mov fnstsw push outsl repnz add mov inc mov pusha jnp ret iret mov push push cmp lret jmp sub fadd mov pop inc outsb push popa jne add outsl insb adc xor inc mulb andl mov mov jo test das mov std mov sbb scas mov xchg mov sbb inc mov xchg sub add jge loopne add add daa mov add cmpsl adc aas add cltd cs sbb fadds cmp jo add sub xor iret pop enter push notb ja aaa add scas add inc xchg pusha add lds adc dec sbb orb ja ljmp lods stc lds test pop fwait loopne subb lock xchg pop jl mov in cwtl std adc or adcb mov jle cmpsb or mov pusha xor xchg ret nop add into add mov sbb sahf adc notb dec jb fwait scas mov out aaa mov out pop cmp js adc cmp out pop loopne call cld rcll jne ljmp scas add movsl leave flds int inc std add sub (bad) popa call mov fisubl js mov out test data16 push leave daa movsl or adcl inc xor inc add mov or cmp jg stos testb xchg cwtl mov aad lods sbb fwait and leave jecxz (bad) pcmpeqw popf sbb addr16 bound loopne fistpl pop push add xchg mov dec mov mov lret mov sbb cmpsl orl inc add stos xor push insl lods sbb bound push jns inc fwait jno or push push xchg sub push cmpl mov or pusha push sub dec pop sbbb push stos mov cmp add or sbb dec orb sbb add jmp add adc add and or loope jg push inc icebp lea and sub cmp xor add rcrb outsb mov mov xchg add imul inc add test leave out xorl hlt iret xor mov jmp inc movsb or jne bound cmp jecxz lcall mov mov and mov mov add cmp add mov or mov ja cmp movsb frstor add aad shrb xchg inc or add xor mov inc mov push das xor sbb jmp mov mov xchg inc cmp jmp (bad) sti orl js sbb stc loope add data16 sti add lret loop add add arpl jge xchg call push sbbl xchg js iret ds ffree insl add les or notl adcb jbe sbb add lock cmpsb lea add (bad) xchg and and add arpl stos add cmpsl and jb sbb cs loopne add add stos iret ret push sbb pop rclb xchg adc mov add push or cmp mov xchg inc data16 jne mov pop js dec jle aaa add stc cli or jle sti sbb fnstenv add ljmp mull aam adc in cmc cmp ja shl dec pop or add (bad) outsb and loopne xor or adcl inc out (bad) sbb or mov cmc insl test sub out xor std notl outsb push (bad) ja fild push cmp xchg inc jmp arpl or std or sbb sbb xchg cmp sarl int3 adc popf stc mov xchg mov add movsb out (bad) or add jge dec stos int3 add adc cmp jae xchg out xor out int imul sbb cltd xorl cli jp mov insb sarl mov add out xor xor outsl add lea sbb test push cmp std sbb xchg jno pop nop pop out add pop es push mov cs test adc lea icebp push add repz in call sub jg ja xchg or sub add orb jo pop cwtl fiadd mov mov push and inc mov ret shl sbbb jno ja jle verr adc inc adc dec fmuls mov js dec cmpsl add xchg cwtl inc add adc jo pop lods jl ja (bad) add jb xchg inc push mov cmp jo add mov add gs push inc imul xchg and and pop or mov jmp and and outsb pop adc and push xor into xor mov or hlt jnp imul mov stos popl movsb ret dec addr16 sahf pop pop mov dec mov xchg jo nop push aad jge inc add fisttp repz mov cwtl sarb cli sbb sbb sti inc add xor mov push lock pop mov ss mov lret add mov xor pop adc mov lret inc sti mov inc xor dec leave sub and int3 scas adc out xor jbe cmp xchg mov add push dec mov lcall xchg sahf hlt dec adc mov fs xchg add push arpl mov add sub mov pop mov pushf cmp rclb mov pop dec or sbb aam xchg mov (bad) jno je subl jmp jge (bad) jg add sub xlat shll jp mov (bad) cmp int3 out clc mov ja add mov inc sub adc jge mov push add insl es mov push jp nop xchg lcall js (bad) mov push xchg jae subb xchg mov dec fild mov rolb scas imul add jl js (bad) stos add inc lock jge in and pop dec stos adc jne popf les sbb jmp mov xor lods aad movsb test dec xchg add xchg mov inc in xlat loop push aaa scas xorl loopne (bad) add into in add divb dec add ja in outsb adc add xor add mov pop ret cmp imul mov jp or stc sbb push fiaddl in pusha mov cmp add ljmp add push lds or add lods out arpl adc scas push aas xchg mov jp sub xchg pusha sbb test pushf (bad) int inc and cli jne pop pop icebp pop popl mov stos stc pop add push imul adc xor (bad) icebp dec add push cltd aad cwtl jg pop (bad) cmp mov push jne add xor leave dec lret dec adc loope sahf inc add cltd addl popl into lcall pop mov dec add mul cs and xlat inc add enter adc inc test cmp imul shrl add mov inc into std aad test movsl xorl add sub push outsb arpl pop int3 xchg adc mov ss loope andb mov add jmp sbb add jmp (bad) leave inc adcb pop test mov outsb or add js popl les add out or jge add xchg inc xchg add and sbb inc sub fcomi adc and jecxz pop call add inc std or lds push mov pop add sub or ss leave add jg sbb jge add loope movsb clc mov add xchg lock add ret add cmp in lea xchg fxtract or and lds sub ss sahf cli fwait inc addr16 pop dec icebp push xchg ds adc dec mov mov test popa test test jno jbe add mov sub movsb add mov mov add sbb pop ja pop push xchg nop xchg cld out jmp add popa cmp and aas push add std sub les insb xchg lods fsubrl orl inc in push popf sti out les lea cmp add fstpl subl pop add dec cmp adc add ret mov das mov or fild sbb mov aaa dec xchg outsb xor sahf shlb add or (bad) cmp jno jl pop adcl jp fisubrl sbb mov jle nop add insl sbb pop xchg out mov dec add adc idivl and repz add mov cmp jecxz inc sbb add mov lcall roll xor adc dec push iret ret xchg push das dec jae repnz cs dec lods (bad) add pop fildl int out ja loop aad movntps push adc lahf fmull sbbl jo fnstsw imul test add xchg hlt rorb pop adc gs ds test jl addl add addl adc mov add sbb inc test add pop xchg and sub iret mov mov sbb pop fsts mov sub insb sti mov or pusha sarl inc movsl add jne popf (bad) out and aas add (bad) sarl popf (bad) push clc int3 inc movsb mov add adc push add mov inc and xor push lock fwait add pop sbb xchg mov or roll cmp fisubl mov (bad) mov sarb les cwtl sub pop (bad) dec fucom mov jmp push test push fstpt pop add sbb out cmpsl iret mov inc mov addl cs dec add mov sbb adc aam mov jne dec xchg add mov jae rep mov xlat jge dec or mul lahf clc and or rcll mov dec add call fmull xor js les lock inc dec loopne fcoml cmpsb add shrl add xchg xor dec add sub insb orl test push adc std dec mulb or mov cmp cwtl call push movsb mov xchg pop lock lods sbb fbld lahf add adc pop popf mov fcmovnbe xchg and add mov jecxz cmc cmp insb add cmp add inc mov lods mov loopne push stos pop or cmc adc cmp call sarl pop pop push pop bound scas inc jge test dec or xchg pop insb sbb loop es mov or (bad) repnz lret ror lcall jmp sahf xchg xchg push and xchg adc adc leave icebp loop pop sub add lock rcrb lods test add cld data16 add lods push sahf cmpl daa mov das add push adc lds or lcall pop xchg inc in cltd mov push loop fbstp or addr16 adc inc cs jl pop addl stos das pop (bad) sub dec inc push pop (bad) roll pop adc js stc lcall cmp jp add (bad) and add jecxz add (bad) dec push add jne les movsb fwait mov jle mov mov jg push clc movsb inc jl add outsl cmp sbb incl pop inc pop fs fidivr or loop inc sbb add aas mov das inc addr16 push sub lock test sbb add jnp leave cmpl dec push aam add sub fadds out mov jbe sub add push jns sahf sub cmp pop sbb sbb push add adc loop call adcl ret add clc and adc cmp fmull push pop mov mov add lahf lea fstl loop sub sbb mov imul out (bad) fcmove push add or aam xchg lret (bad) or ss jns add test (bad) push loop add mov xchg add lods hlt mov cmp cli lds or imulb add cmp adc pop add lods fsub add add mov paddd push imul sti ja add push adc add push xor add cmp inc cs ror add arpl xchg shll int3 jg add sbb xor jbe jo test add ret fsubrs add les cs sub add sbb scas cmp nop add jmp jae adc fiaddl (bad) pop or subl add test cmp aad (bad) loope das jl add mov scas sub fldcw rorl out pop fs mov lds and and cmp push push daa pushf lahf lods orl imul add mov sbb adc sbb mov add push int3 repnz pop jae icebp jo js out mov test and and mov add loope add xor mov stos shr pop mov sbb lahf jb inc int3 add insb lcall fnstsw mov add dec or mov sub and xchg aas push cmp inc pop add inc fidiv (bad) cmp (bad) ja nop insl ljmp xchg jbe popf dec cmpsb lods rolb fdivl pop lods add mov jmp (bad) pop jl sub add push lock push xor pushf pop xchg lahf cmpsb jnp je pop add or repnz ljmp push and loopne lods aaa test add inc ljmp add andl lcall lret aaa adcl mov inc (bad) xchg pop jne dec fldl fisubrl xor fiadd and js and add pop sub roll daa outsl inc int3 cmp mov add sub sarb cmp fstpt (bad) popf jl addb mov lahf repnz bound jnp inc jecxz add inc (bad) in push ds daa cmpb dec jl fildl out std mov add fldl addl fimul or adc add sub call sub mov dec jo daa add push lea jle repz add (bad) mov push lahf popf sbb sahf imul and jle pop add add cwtl cmp lock hlt add adc add add xor lock fisubrl mov addl das cltd cli sub mov push dec cmpsl orl sub adc and add jp test sbb add dec mov add into mov loope mov add sbb mov enter aas int inc movsl lcall negl sub adc jecxz mov dec (bad) movsl shl icebp cmpl stc (bad) push (bad) out jmp daa out lret loopne mov cmpsb xor mov dec test add push sub outsl xchg out sbb scas adc aaa cwtl inc imul add cmp loop xlat ds loope adc cltd push xor popl or and pusha dec push call jno push dec aaa ja out ds xchg add mov xor pop push pop xor hlt aaa outsl sbb add fisub out push pop sahf scas mov mov rcl jle push es and popf adc add mov or push push xorl cmp mov or sbb adc imul and ds ja add sarl or cmp push push (bad) or pop mov inc push inc add test jnp jae jge pusha movsl cmp xchg sub xchg scas data16 aas jp cmc add or lahf sbb ds mov js and jno inc cmpsl push xlat inc pop add sbb pop jo add rorl in subl cmp xchg insb shrl push dec dec fstl pushl jl jle add out jecxz cmp pop jp push sbb andl bound add cltd adc scas add push (bad) loopne fmull pusha xor jl fwait pop (bad) andb add sub les daa add xchg jb jmp pop imul (bad) add or cld stos push mov sbb mov out aas xchg push sub mov adc cmp lods sahf sub inc dec fild lret (bad) loopne cmpsb fucomi pusha jp jno paddusb xchg mov cmp (bad) stos outsl cmp iret inc adc mov mov cmpl pop test sub jne,pt stc dec test inc sahf (bad) loope es sub loopne jae,pn aam mov or int3 orl mov push add xchg push cmpl (bad) push ss mov jle add mov pusha syscall cmpsl ds notb sbb mov mov lahf fisub cmpsl sub mov pusha jmp loop js add push add xchg cs addr16 xor add call mov push insb adc insl pop adc jle scas add or xchg or add lds add inc insl in loope or xchg imul and in push daa div imul xchg pop dec icebp lahf push test push fildl mov movl add sub dec fs xchg subb data16 lret imul outsl push int3 incb out xchg popf dec push aam sarb insb cmp pop push inc ror cmp ror add xor mov xor add dec lock jo add cli push subb dec cltd xor sub and add in jecxz push mov or jl fisub xor iret in shrb arpl push xor adc fwait add lret jne or add out mov xchg insb xchg sub std mov pop fdiv push out cmp and adc jo xchg fnstsw clc add cmp dec lcall ja or aam pop xchg sub mov (bad) jno add cwtl aas popf add mov add inc out call jne and and dec inc add dec mov jbe add sub and pop fsubr add pop gs dec push sbb pop sub ja out and adc gs pusha nop imul testb sti bound jg mov inc or in jnp adc loopne pop pusha push out dec push jg cmp aas push add adc jae lret pop mov xor push inc ss (bad) loopne push add std in xchg lea jae imul loopne sub lock jp mulb dec add insl xchg inc xlat cmp inc pop sbb inc lods ss sub shl add mov and iret xchg aam dec jb movsb xor inc ret mov mov jl pushf mov xchg stc jmp add mov or inc or (bad) outsl cmpsb fnstsw xchg mov jmp lock mov add pop and inc add mov mov test inc pop xor pop ja aaa inc out add shll test inc mov jne add hlt in add add (bad) mov in cltd xchg push add jl,pn xchg inc (bad) mov pusha add mov adc push (bad) push push popa bound push pop and fs sbb stos jle (bad) jmp or sub add into outsl mov js xchg jl cmpsb xor sub mov add pop ret es cmpsl and data16 add push faddl stos and stc add adc mov and inc sarl adc lea bound repz loop cmp aaa sbb mov mov adc add dec bound data16 test dec loop dec jl nop xchg sbb ds adc mov icebp jb add mov cltd out add bswap mov dec jnp add cmpsl xor js add sbb inc jne enter push and lods cmpsb (bad) push add insb stc out das inc in jmp and pop add clc addb pop jmp push and addr16 loopne cmp add xchg inc fucomip or xchg popa cmp jno sbb ffreep (bad) and xor gs scas add or ret out push cvtdq2ps add ss add dec push test ret cltd repnz sbbl pop jo,pt in add and (bad) in add js imul xchg mov ja xchg dec or add (bad) aad mov addb add sub dec pop sbb add loopne rcrl lcall jae dec lret add adc dec pop sub mov aaa push (bad) (bad) and mov sbb rorl cs incl pusha clc test xchg sub inc mov out add loop rorl nop mov push xchg ret fcmove cmp call sub (bad) dec outsb add cmpsl rorl adc inc aam and andb sub aaa cmp inc pop and pop and (bad) (bad) sbb out mov mov repz int popf test (bad) loopne enter jbe arpl test mov inc sub popf xor mov sub lock dec fisub add jno adc and pop and mov dec dec test cmp lcall jb and aam sub dec mov into add popa aaa imul xchg push pusha mov add sbb mov (bad) push add out sub fwait or es call sbb sub popf add popa mov adcl dec dec loopne aas add (bad) insl mov push push (bad) repnz fdivrl and pop andb fldenv js iret (bad) loop es les dec fisttp lds hlt mov out adc mov jmp pop and test pop add addr16 gs add add add and icebp add rclb xchg dec xchg pop lret insb dec add push adc or lea notb mov xchg jo call leave or inc test mov xchg test cmp dec shrl pop inc pop pushf stos mov je sbb aad mov pop add andl mov fisttpl aam push incb andb jmp pusha scas cmp or jnp repnz and push int3 cwtl add packssdw lahf das pop add sti cltd pop js add not jmp jno arpl adc lock push cmp sub arpl mov pop (bad) jae or pop fldt sub mov cmp mov sbb or shll (bad) lea cmp xchg mov scas icebp add frstor add xchg sub cmp add aad mov fadds mov cmp mov repz test cwtl ja fiadd mov cs mov add jbe loopne popa cmp icebp jb add bound in add xor pushf (bad) movsl jmp dec and adcl in dec jl push mov outsb inc or push add mov fcompl repnz divb xlat movsl or push add cmpsb add ret pop hlt insb dec popf add out and push repz loopne cltd aam data16 jp outsb mov scas push inc sahf subl (bad) clc stos ds pop and sub repz test mov fs aas rcrl ljmp popl flds push jmp jo adc outsb mov or xor sbb ret add dec aad jmp add jl cmpsl addl push xchg rcrl sub hlt out cltd out fmuls lods push (bad) lcall add push add xor add push outsb dec les xor adc add outsl (bad) ja add mov mov leave jne incb sbbb mov cmpb add aas dec (bad) sahf jb sbb cmp jp mov bound loopne inc out push add cmp inc add jo xchg adc add pop arpl add pop lea icebp rclb lds add test lahf cmp je inc aam leave jg push les std and test sub pop pusha inc lock sahf mov jp lds in inc arpl and loope jbe stos push add aam out sbb add loopne leave jns mov andb jp (bad) lahf shrb xchg (bad) and add jg add mov in bsf add mov lods test int pop push movl repnz sahf inc sbb add sbb add add data16 add aaa (bad) ljmp jae sbb mov popa or cltd pop add in movsl test and (bad) (bad) adc pop push push test xchg mov jmp lret add or andb dec adc sub sbb pop mov inc insl fdivs add push stos mov add pop mov ficompl int3 dec push out popf push inc add sub repnz mov imul test dec les add mov add outsl aam or jge andl pop push scas xchg pushf (bad) xor js fisub mov fidivl add push jecxz mov rorb add sub add ret lods xchg inc jp mov sub sahf add movsb lods cmpl lea lds push mov jns je add lods pop adc stos insl (bad) aas loopne jbe add add sahf movsb inc add jp mov out int insb jbe pushf sub (bad) clc add rorl or pusha xchg inc pop pop push xchg sbb mov repnz add xchg add add push xor scas inc add jbe cmc cwtl clc popf push push pop sar cmp push adc jg add jno jp mov jae xchg mov loopne imul push pop adc cmp add xor movsb xchg pop jg imul mov inc pop lds sahf ja test pop xchg cmp add push rcll pop outsb sbb cli in nop add xchg scas out fwait jae fldl or out xor lods movl inc les in lret pop mov dec push and adcb cld pusha (bad) mov inc orl sub ret cmp sbb xor pop or subb add pop cmp lods stos (bad) xor mov or jne sub add pop fild inc dec inc nop and loop xchg outsl in mov inc repnz mov jb in cld enter lahf xor jl pusha push dec push inc add inc add divb xchg mov gs popf arpl sub ret fdivrl movsl inc mov push comiss push pop pop push iret mov xor stc push mov xchg push (bad) addb cltd pop aad push mov es shld pushf out add xchg call adc sub push push mov jmp sub popa xchg and (bad) add mov hlt add cmp sbb and push adc mov in add fimul js js mov jo fwait andl je xchg aam inc in repnz xchg fistpll xchg repz mov dec inc out push stos push adc ja add mov push aas stc inc pop loopne push dec and faddl movsl add mov pop test sbb dec jecxz subb cmp pop mov aaa add pop lods push mov xchg xor mov xor out fwait incb mov mulb add add cmp repnz pop push fsub (bad) xor adc sub insl (bad) aam movsb stos xlat daa inc cmp popf mov cmp sbb lret xor pushl mov or push and fcoml sbb insb inc push jb and push sbb mov icebp mov add pop roll ss jo xchg daa cmpb sub sbb add add imul mov fst incl sti jl cwtl aad jns negb hlt xor scas out adc insl pop mov push add adc lods sbb test add inc mov dec sbb push fs add jmp or (bad) jmp inc add xchg daa xor and cmp add adc xchg arpl outsb add mov add test inc xchg adc or loope fwait cmpsb inc and shrl nop or popa in call add jae inc dec mov mov in jb jge sbbb mov pop xchg xor cmp and fwait fs nop add imul push lea jae sub jmp lds jbe jb scas push add pusha mov mov sub add inc sub lods mov push arpl or lea adcb in inc jno cmp sbb add lcall or add mov mov inc add inc int3 pop mov xchg pop flds loopne xchg add sbb popa push nop mov xor add je int3 add mov clc push add hlt adc sub pop or add xor or and pop pop mov mov jb mov pop sub add push add data16 adc add sbbb (bad) lock jbe (bad) cli aad mov add add (bad) jp lea jo inc lcall mov cmp das lahf dec xchg test mov (bad) (bad) fdivrl xchg mov inc mov fidivr cmp sbbb out fnstcw jns popf ret xlat inc sbbl jne or int3 ret enter push jb adc sub (bad) ja mov add sub repz adc inc cmpsb jnp add sti loopne push pop jns adcl pusha pusha in jbe push rcr push das fcompl add mov adc and mov in pusha mov lock fisttp adc repz cmpsw push or pop sbb dec ret add mov popf push add or push fbstp and cmp xchg or cmp jp dec add ret aad test popf outsb sti into popa add xchg fwait add push movsb add push dec and addl jmp xor adc inc orb js xchg add outsl mov pop cmpb leave mov mov ds pop inc sbb movl sub mov jae out data16 pop sbb push jg add dec mov mov popa xlat ret nop sub jl (bad) (bad) push lcall sbb dec (bad) (bad) add mov xchg inc (bad) and fsub adc adc out lea inc and inc inc push mov pop sbb lods es sbb repnz or loopne movsl andl pushf sub push add cli into fmuls ss add jbe lcall add add cld mov mov stos xlat shr add add sbb add fmuls xlat push add xor inc mov push sbb cmp lock call dec lahf add adc add insb pop cmp lods inc das add ret push pop push add push ret icebp pop and mov cmp (bad) xchg mov leave les hlt xchg add ja sub xchg xlat dec add adc lahf push arpl mov pop cwtl ja push sbb push and mov mov sahf lret rcrb aaa add mov out xchg ficompl add inc or xchg mov add push test fnsave bound aaa mov lcall adc sbb sub hlt dec lods sarb add push enter iret push repz mov sahf add or (bad) add into aad dec xchg jecxz jne jle aaa hlt adc sub pop add ror arpl int cmp adc out add js add pop lock (bad) dec cmpl and (bad) push js into insl lods ret mov test cmp popa std ja mov mov mov in mov add out sbb or iret dec pop loop mov pop or aad push cmc clc add push cmp imul mov outsl ljmp sub dec push mov xor mov mov cmp mov lret mov add inc (bad) test xor adc pusha les pop or lods add incb sbb add stc adc arpl addb sbb mov adc fiaddl jo sti (bad) push stc testb xor cli int3 add movsl or scas fwait subb dec cltd fldenv push add jno adc add popa mov outsl sbb insb jnp jo pushf popf or aam mov sub cmp xor mov pop or lcall sub mov aas int3 xchg and (bad) adc pushf cmp lods (bad) aad fs in je test daa jge aas cmp xor enter sbb mov ja sub jno (bad) push mov dec loop in fstps adcl and adc mov movsl lods loopne lds add dec orl (bad) mov lret test jl add andl lcall mov jo dec xorb xorl add inc xchg or dec adc xchg (bad) cmp jg testb insl scas adc add data16 iret es push dec pop sub xchg add pusha out inc add insb mov pop pop pop and lds push mov add cltd dec mov sub push test push xorb pop xchg mov hlt add mov outsl mov imul mov (bad) popf add icebp hlt je sub pusha addr16 or lock jmp subl loop lds xlat popa add dec frstor jmp in adc int orl mov cli cwtl cmp lods jns in call jae lcall pop test adc ret icebp push mov inc mov clc imul popf (bad) inc fisttpl mov test pop xor jge int3 cmp pop inc mov push adc add in call cmpsb add movsl stos lods adc fs rclb je push fcmovne inc adcl (bad) mov mov xchg adc loopne xchg fwait cs adc add mov add ljmp add fdivrs cltd loop mov dec ja jl adc in loop ss (bad) xor dec cmp (bad) clc mov out cmp add in arpl das mov in (bad) xor dec pop jg addr16 add jns pop push cld mov jecxz loope inc fwait add test xchg and and dec push xor sbb dec push stc push addb adc lea movl xor fdivrl in in pop adc inc lods add lea inc inc mov push add mov lock or sub mov sbb hlt add mov pop pushf test inc cs pop shlb mov out adc pop lods xor mov mov cmpsl dec add add popa add sbb add pop pusha shrb out cmpl add lahf add mov mov idivl and (bad) mulps shr ret loop push test (bad) stos fbld subl dec cwtl div push jp adc and jnp adc aad mov add mov sbb pop mov imul ja ja add push push pop push push leave xchg aad fwait mov pop test push bound in je mov mov add dec out pop fcomps add lret cmp jae and sbb (bad) or add jo test cmp cmp inc pop mov cmpl mov aad mov fldenv and insl enter pop push push or add int test (bad) pop inc xor insb pop mov or in xchg push mov add cli mov adc es pop dec das into test sbb sub leave inc cmp mov dec dec jmp add adcb insl mov or fisttpl and fdivs popf test and dec jp or push je clc add std enter or pop xorl (bad) sti sbbl ds pusha push dec add push add add (bad) cmp cmpb add adc or mov sbb xchg aas inc add dec or dec pop insl or push bound (bad) pop sbb adc pop outsl shrl add push push out in dec add inc (bad) fidiv mov insl mov add hlt push (bad) imul mov jl or icebp shld push dec add mov das adc in push and loop push xchg hlt fs jle inc pushf fisttp push mov or ja mov xchg push mov add add in div ret in add dec notb pushf add pop out add in jns and lret jl fcomps jo rcll or pop (bad) mov fild lock lcall flds mov repz mov sti xchg mov je add loopne sbb xchg leave xor dec add fcomps (bad) add test imul xchg cmc sbb nop adc (bad) loopne xchg add ljmp push cwtl sbb dec ss jg push test mov aas js nop dec mov orb and out jmp mov das (bad) loope add xchg fs (bad) repz add mov push sub fadd add lock pop iret (bad) xchg andb shrb scas mov xchg xchg in push sbb mov add jecxz (bad) mov xor lods mov xlat ds add aad ss or push jmp stc add sbb pop in incb and rcl cmp lcall jp cmpl (bad) jl (bad) cmp add add add sub outsb call add cmc pop pusha add js xor or push pop add addr16 aas enter stc popf imul out adc int3 adc add pushf test mov jae cmp cmp push xor add lods cmpsw fnsave mov pop imul arpl (bad) jb dec subl roll xchg xchg sub pusha cmp and jg hlt sahf (bad) call sahf add push sbb jnp cmp sbb add mov xor or pop cmp cmpl lods pusha pop jbe sbb addr16 dec sbbl bound mov jl and pop push aaa jno sbbb mov pop bound cmc mov inc cs insb adc inc add jns ja (bad) loopne ljmp mov mov stos pusha xchg aaa decl js push mov (bad) xor iret (bad) push inc xchg pop loopne pop xor sti push sbb push and cmp add sbb ret movsb adcl push push ret ds add lret fsts add lret aad add and cltd add mov cwtl ss test or loop and pusha add ret and ds add or fnstsw add int3 stc add mul inc leave cmp js aas pop cmc sub jmp sub dec and sub mov pop into or mov dec int3 add push lods pop mov (bad) lret mov jl push addb shll xor xor sbb push jl aas cmp test scas and and in push subb inc pusha or add jbe mov pop xchg inc add stos addr16 push into sbb sahf arpl jns jg sbb lock push xchg cmp lahf jle push sahf ja add lods repz int3 pop cmp xor pusha cmp fst or les icebp or mov mov mov push call add xchg xor test xor cmc mov xchg pop call inc add add mov mov loop js dec sub outsb adc add movsl xchg push xor int addr16 add lds inc cs and jge cld shrl rolb sbbl outsb and xchg xchg pop std add mov rcll mov dec fst addr16 inc dec mov iret add mov popf hlt dec push imul pop add inc mov mov add jmp rorl out sbb adc or ss add mov data16 dec sub fmuls mov add cmp data16 cmc add jo lahf inc sbb add pop stos out sbb loope test lahf mov add repnz inc fmull xchg fld xchg mov xchg ret scas aad or push repz das mov fdivp in pop (bad) mov jae add shr jnp cmp repnz push xchg mov xlat push enter add push pop xchg movsb xchg fiaddl stos ja arpl adc pop sub add out lret pop mov js add pop shl xor mov or movl add lahf xor add adcb mov jle and out adcb rcrb jle pop cmp (bad) out inc inc mov (bad) mov sbbl das jnp sahf inc pop add sub xchg dec adc lea hlt dec test addl xor inc sub (bad) fiadd js dec mov and out adc add adc incb push aas sbb (bad) cmp add jp dec mov cmp push ret pop sti and gs jmp fiadd xchg test je loop inc in iret insb jge push rolb inc mov add xor ret xor incl popa mov fldl test jge addl daa lds add pop sub (bad) cmpsb fs leave dec push push out pop in stc add out cmp add pop mov add in sub mov push mov pusha mov jmp hlt or ds pop js (bad) adc xor xchg cld (bad) add and rolb (bad) sub pop pop jp add cwtl jns and mov inc test and bound add mov or or xchg and ficom mov mov out loopne sti add jmp dec pop jecxz and adc aaa fwait mov add mov fwait pop cmp cld loopne push aaa mov cmp (bad) xlat add push jg iret dec adc mov jge,pt mov mov outsb push adc icebp jnp add sub xor mov push test pusha bnd pusha add mov inc andb mov hlt pop sbb add cmp mov mov movsb in notl jnp add int (bad) cld aaa adc dec out cmovl inc int3 jnp cmp jle xchg popaw adc mov cmp into cmpsb jge add repz jno stc mov scas ja nop ret dec cmpb (bad) cmp lock add mov or mov pop cmp jns mov mov add ror andl (bad) jmp fldl xchg ljmp push lods in inc pop sbb add pop xchg xchg push or pusha test pop mov das fnstcw jne add add jg pushf cld xor mov xor add in fisub popf mov sub sub scas iret mov imul cmp lahf test xlat add daa adc (bad) (bad) jmp add fadds xchg adc int lahf ds addl pusha push out inc add pop fwait cmc jnp cmpsl push add hlt mov mov fisubr (bad) mov sbb sub int mov pcmpeqb cmp and mov (bad) and mov ljmp add ss fwait sahf decb dec popf (bad) (bad) ja pop stos add add push nop mov in (bad) mov into mov sahf push cmp mov add call roll test lods cmp ret add push inc mov sbb stc add and insl xor cs add decb push pop adc stos cmp add rcr in xchg mov add and add scas ds jb scas add aam mov inc ljmp je inc pop out xor mov or add sarb adcb xor xchg xchg les pop add or popf add lods sbb add subl sbb add sbbl pushf ja mov sub mov cmp ss sbb pop gs and fimull aaa or loope xchg mov push cld xor cmpl inc mov out int3 fs aad das cmc into inc pusha and add mov jmp lret sub mov add clc cwtl pop (bad) xchg mov add outsb sub mov jae rclb lahf adc insl scas push movsb (bad) xor imul pop inc push add outsb mov add xor add sti xorl cmpb mov fs das in stos cmp add mov or addb mov fsubrs add cmp cmp xchg aam lea sahf out inc mov mov cmp das ja mov and and or jle jb dec add mov adc aam fidiv test sub repz std (bad) push jg sbb xor or mov imul pop outsb xor add fildl jb or jle,pt mov nop dec scas inc das mov ja lret aaa jp sub pop imul pop add pop fdivrs push mov xchg add repz cmp dec xor loop pop arpl jae mov iret sahf inc sar mov addr16 pop mov fnsave jg or adc pushf pop enter pop ds jle mov xchg pop mov flds or sbb rclb pop push push pop jecxz sub pop or mov sub repz scas (bad) rcr mov je data16 mov adc and add or jno inc add mov pop repnz jns pop jl cmp xor insb mov push (bad) aas pop addr16 jp scas test jbe icebp lds aad add mov add faddp jle mov sub fadd insb and cmp (bad) or jae adc add add idivl jbe add adc ja mov mov sub xchg adc or or and adc pop (bad) sbb mov dec inc xchg pop xchg sbb ret fldt repz push inc fs add (bad) adc mov adc xchg add lods popa mov pop imul add cs popf ja and pop inc dec add push subb and xchg daa cmp pusha and add inc or je ds dec push sub push xchg jp loop add dec ds or cmp ss in lret add sbb pop pushf std addb aaa mov dec int jecxz jmp nop fmuls xor inc imul cs add add out pop orl xor adc or ja adc mov pop rclb add add push or xor sbb add fsts divl sti pusha add fs sub or je out jne sbb scas test sub ret fisttpll movsb or in mov jge test cld leave (bad) std push push (bad) shrb inc addb mov (bad) mov add xor push cmp sti add mov pop mov arpl scas subl add test clc push enter jb ret js or sbb xchg push cmp adc sbb out sbb dec adc pushf adc or pop mov xor or add cmp sub ret jnp fbstp inc lock mov repz out cs out add xor test or mov mov mov jo sub xor bound stos stos sahf fcmovu inc mov xor into mov and mov leave add or mov lea aad inc and ja xchg cld test in movsb lea dec xchg addb (bad) mov cmp jecxz push ffreep movl pop xchg add sahf sub orl pop pusha ret iret cwtl lret pop popa jae and loopne jg mov jne mov or push imull add mov add imul ja or scas add test add idivl subb and adc js sub ret push es push pop imul mov out fbstp insb or add sub xchg mov and mov add add sti pop cwtl or cs add rolb xchg push jl lds lret add add xchg adc mov mov mov jp mov pop jmp mov lcall mov out mov (bad) lds inc mov ja adc fnsave add (bad) (bad) jge or add adc cld (bad) faddl shrl int3 clc ds jno fidivr repnz pop cmp ja adcl inc add test cmp int call sbb inc adc add pop popf add push add cs or out mov xchg mov inc inc inc call add xor sub clc mov (bad) mulb and pusha (bad) dec movl daa les aam pop mov adc call add pusha mov int3 add (bad) test mov push push cmp orl cmp popf or (bad) xlat or xchg repnz pop sbb dec imul dec add cmc mov add sub mov mov subb mov aam mov (bad) aad add or lret shll push jo dec lock out add or cmp ljmp inc test inc je xchg add imul aad popf lds sub xchg mov sub pusha lret aad leave rorl jmp mov lret mov push mov popf jns push pop je pop hlt fidiv sbb enter cmpsb cltd xchg fwait mov add fbld or add mov xorb xchg xor push fnsave movsl add pop das mov cmp dec shlb jno and adc pop dec push rolb daa sub loopne popf xchg push outsl mov jnp jbe nop or jns xor inc or pop xorb ja lods cmp sbb cltd xorl or push idiv inc mov lret call les fbld shl xchg adc xchg dec add les imul cmp add adc inc add es mov cmp mov cli cmc pop push xor xchg add orl test imul and or outsb pusha stos mov cmp test inc scas and pop gs and sti rolb fidivrl jl dec (bad) mov adc mov leave (bad) movsb jne stos cmpsb mov out movsl fidivrl mov mov loope leave mov jo jbe jb in orl popa lret add and jl (bad) lods lret sbb test jbe fstpt jns dec cmpsl mov fld sbb nop add mov jbe lret push lcall or in add test mov push push aam adc adc xchg ds je in mov add jne (bad) add sub aam pop icebp pop ja aam add mov nop loopne xor icebp jno fiaddl or jp dec hlt push les mov xor xchg and in add push adc int andb shll outsb outsl jmp sbbb mov push jno pushf xor inc sbb xchg test shl sub scas roll loop in add add xchg (bad) xor sahf pop mov mov cmpsl mov rorl test sahf add and loop mov mov loope,pt out sub or push lea dec push mov test imul and rcrl add inc fwait add cld sbb in jbe adc sbb add jo ret pop fnop cmpsl push mov movb sub jg or sbb lcall imul add mov or jp sar jge test xchg inc ret dec fnsave pop push ljmp push add ss inc movsb sbb in and cli jl xor mov insl enter adc subl jmp scas fnop dec mov add sbb adc add fsts adc xor sub cmp jg test lret add xchg pop int ljmp and xchg cmp aam fwait xor add mov sbb xchg (bad) mov push icebp das cmp xchg xor dec pcmpgtb movsl add mov ffree rolb pop mov push test xchg outsl shld jmp xchg jo mov cmp mov xor jmp mov and add push out bound push ret (bad) enter jl (bad) sar add mov pop clc mov mov push (bad) mov or cltd out push add sbbl in push mov pop in xchg mov push pop mov dec jae and data16 pusha push inc rorl add jle jp rorb and (bad) mov xor cltd dec pusha push dec je xor or jb sbb fidivrl (bad) and sarb push das pop loop sbb loope push and mov pusha (bad) and mov xorl sbb mov pop adc leave add bound ret mov sub xor adc dec loop lods push repz adc ljmp fs inc stos sahf xchg xor inc fidivr adc pop cmp add mov dec out add mov sarl subl lcall add adc xor subb sub cmp add lods pop cli add cmp fbld sbb dec add mov sub adcb shlb nop inc outsb mov push pusha mov loop js popl in or pop in sti cmpb inc outsb pop flds frstor pop inc popf pop add or (bad) jb push sub add pop orl repnz jns or in mov pop stos xor push add fcom add sahf aaa pop push inc push add jnp cmp mov add inc scas mov jmp add mov add xor movsb add stc pop add cli int3 test mov cmpxchg cld xchg push je mov lahf sbb add mov aam push adc jecxz pop mov jo dec xchg inc add rcrl push sub pop std (bad) or push scas pop jne dec lods pop add test aam lcall movsb aad adc inc jbe test and jno xor (bad) xor mov adc add int3 mov push shll stos sbb loop mov sbb fcoml xchg xor push and add out xchg (bad) dec xor cmp notl mov pop imul adc add sbbl add adc dec aad shl push dec in std outsb push mov shrb and adc add mov mov xchg mov mov outsb dec adc aaa sbb imul aas xchg push stc sti mov orb dec idiv jl inc fimull icebp imul and add mov lock inc mov add pop loop add cltd dec pop pop and cmpl int3 lcall inc mov inc xor dec jne (bad) ljmp and adc mov mov fs das push add adc and mulb js outsl add icebp xor push mov mov or xor outsb mov les in aaa sub inc add sbb adc adc stc mov loop add lret inc xor idivl aam sbb popf outsl roll xchg mov mov cmc add out jo sarl pop cmpsl ret mov mov jnp dec add mov jecxz addl fs xchg lret ljmp test xchg add add and sub loop inc es jecxz mov or (bad) sarl or in stc mov and xor lcall (bad) imul add add stc fmul loopne jmp aad mov dec add cltd pcmpeqw aam (bad) fisttp push int andl add xlat mov adcl jg into sub leave iret cmp add and popa arpl dec cmpsb and into stos add fs xor cmpsl imul out mov repz aam adc lds xchg sub cmp sbb cwtl rcll adc (bad) outsb mov sub push push add adc inc add xchg push jg mov (bad) sbb int3 popa outsb mov add jge or dec repz pop out mov in xorb (bad) dec cltd cmp add je sub cmpsb sbb mov test lret lcall mov loop,pn dec fs or add push outsb or add jge test loope add and int shrb sti pushf xchg adcl cmc add adc mov negl pop lcall push add sbb addr16 sub (bad) cmp inc pop push jb xchg add jp sahf mov and jmp in mov pusha add rclb add adc xchg (bad) or mov loope push (bad) fcmovnbe pop daa js inc sbb mov mov jne jge and push int mov enter out jg and mov xor adc inc jns lock cmp movl inc xchg xlat stos sbb push add out push sub sti push es add xchg aaa jb shll jo add inc in push dec repnz movb ficomp jns inc imul in pushf outsb stos add lock push sub hlt daa jle setle jne xlat (bad) ja lods dec fs mov test or insb add mov adc sbb popa shll add repz outsb dec inc test (bad) test jmp xlat add add icebp outsb mov add sbb mov stos mov jle adc ds mov cmpsl cmp mov addr16 pusha cmpl push shrb cmpsb jo rcrl jne xor xchg add add scas (bad) mov ret das outsl jg add sub cmp and aas mov lds (bad) cwtl pushf inc test add test fwait sbb aaa adc or lods ror dec rolb jge pusha incl lret in lcall dec add jnp dec arpl outsl push xor fadds cmc fidivrl and inc mov push lds out mov (bad) mov add mov and add in hlt push enter insb xchg xchg cmp pusha jmp and frstor add pop push add pushf jnp add mov fiaddl aam or adc or andl sbbl je mov xor xchg add cmp mov arpl bound in popa mov test hlt call sbb bound sbb clc and outsl cmp rolb push das xchg sbb rolb inc std mov ljmp or aas pop push push cmovs add cmp mov sti add jae adc add mov hlt sbbl mov imul pop aaa push and inc rorl jae mov mov or sbb int3 mov push and pop push movl xchg out mov inc sti (bad) test out ja xchg and add fs xchg popf pop andb dec test push sub ja cli xor fwait jmp hlt pusha add ljmp sub pop in inc jge pushf pop push add out inc fdivrs idivb adc xlat call xor scas mov int bound cmp pop jo std mov movsl push mov sbb mov inc int3 lods mov lcall jmp xchg add ja pop sbb jae add mov scas mov inc xchg and jle add push pusha shl pop xlat adc add (bad) or xor inc cmpb imul push adc js or out and (bad) jnp mov xchg push incl mov call jno clc subb lock loop dec data16 add movsb and ret dec movsl loope std js popf push add cmp add inc pop cmc mov icebp addr16 iret cmp pop stos popa add push dec jno ret inc lock lret dec xor ss add in into xchg lock add mov sbbl mov pop xor mov add xchg xorb rcrl cmpsb jo or ds or push mov sbb and loopne out addl out pop movsl aad ss xchg push test mov fs imul daa add fdivrs scas xchg and pop in cmc js and mov cmp dec push in add push cmp loop mov pop cmp mov add cmp inc jmp jg dec dec add jno,pn enter insb add xchg adc mov das add icebp dec mov inc lock sub lods (bad) ljmp jp imul xchg xor lcall add daa mov outsl add add pop in adc mov (bad) movsl adc sbb mov lahf cmpsl icebp add cmpsb jne add and mov xor and xchg jecxz sbb movsl sarb xchg add leave or pop out add cmp (bad) mov repnz adc and pop inc inc or lret (bad) sbb test ficoml pop pop xor jp add inc and sbb xchg outsb roll add dec outsl mov add sub pop incl inc or orl xchg in cmp sti (bad) xchg bound icebp rcrl jne push and push in pop bound push (bad) push std aad sbb pushf es fwait mov in add pusha push icebp in adcl sbb es xlat ljmp ret fs fdivs or cmp mov sub or out mov xchg jno add mov and subb push movsb icebp push push xchg pop popf divl movups and jne add insb scas inc ficom jecxz mov xlat add dec lock lahf ds mov imul cmp jle add jecxz insb cmp mov mov cld add fmull cmp aad add inc add jno sbb inc adc push jecxz jle lahf pushf add lods inc clc mov mov loope add pop jo add pop ljmp rep inc iret movsb adc mov sub lock cli stos jle clc loope test movsb add inc or insb add loope fild pop xchg out testl mov mov push aas mov iret and pop into add sub inc (bad) dec in mov aad mov decb shrb dec (bad) testl test arpl cli push out adc pushf and inc push stos lds andl imul mov ss push jb add lods sub rcll popa xor xlat lahf ss dec (bad) push clc add popf bound mov test and inc (bad) xor daa add mov (bad) add imul sbb xchg mov fwait andl add test addl jo (bad) cmp aam mov mov loop imul (bad) setne out lods cmc add inc mov add dec sub mov jbe add mov jl sub add cmp test leave nop jno add shll lcall movsl add gs jne (bad) js add and lret rcll and cmp test push jecxz push lds fwait dec adc add (bad) mov adc mov ja pop cwtl (bad) sbb mov adc (bad) push fidiv lock movsl subl mov outsl and not test popa lods jb add mov pop pop mov and push dec fs jge push add pop imul bound nop sub (bad) mov imul xchg mov xchg add inc cs sbb andb inc adc loope lods xchg bound inc add push mov enter inc mov inc dec lcall pop pop jecxz rcrl mov xor das lods add out mov (bad) mov enter push leave test sbb bnd or mov cmp inc imul mov out arpl nop dec add jae fcoml push (bad) push add mov lods and jle jp add cltd add push loop xlat mov in pop fdivr test push (bad) aaa movsb jp lahf popl dec fs int add loop xchg jb inc fnsave jo pop dec sbb jmp pop pop push xor les adc sub sub mov jns cld xor test mov mov inc shrl pop and lods pop frstor mov in cmp daa (bad) mov mov stos pop lods xor inc sub cmp inc dec in ret ljmp fs pushf les movsb (bad) loopne lret aad add popa cmp jp mov or add xor es jle inc cmpsb icebp add ret pushf adc loopne xor insb loop daa rorb mov inc pop or sub hlt scas mov stos pusha fadds lret jmp loop sti add cltd push stos jo lcall mov xor or sbb mov cwtl add pop das mov pop sbb incl ret inc inc out sub add sub xor or adc mov add sub daa add out sbb add inc lahf or add add (bad) pushf push xchg jae subb sbb push add imul js add inc jae adc push xchg cli and or lods in xorb pusha jp add inc xor test sub adcl cmp jno push dec or les jbe mov pop lcall lods shlb inc mov fxch pop pop add and fadds call enter or cmp addb pop in push lea popa nop js mov mov mov push and add ret movsl mov ss cltd test push push in add add sub fistpl add xor lods lds add stos outsl aad inc jle pop (bad) add dec adc xchg hlt pushf imulb pushf divl sarl fcomps or pop or adc shlb lcall add cmp add sbb shll mov aaa push popf push xor movsl pop sbb jne mov int push and jo out nop add mov fisub fxch xchg popa jno lret test mov jg pop jecxz fisubrl inc ss ffreep xchg repz add fwait mov xlat popa mov cmpsb idiv or bound roll jbe add inc cmpsb lret pop jnp add rcrl dec test xchg fstp inc pop mov xchg movsb xchg mov xor jecxz pop mov inc jb sahf sub xor jne mov nop (bad) lret addb fstpl or fistpl inc cmp andl cmp dec int (bad) repz mov push andb sub std mov popl ror ja xchg pop lret pop add mov jmp push mov addb sub ja mov xchg xchg dec inc rcr pop mov jb inc jle pop outsb sub pusha (bad) (bad) movzbl orl iret push push insb jno or pop shlb mov (bad) dec add mov inc outsl jbe and pop sub xchg stos jbe sbb int3 cmp dec sbbl flds pop and mov mov and stos mov mov insb pop cmp and js mov pop sub inc ds setne jle sbb in xor pop (bad) mov xor cwtl mov pushf mov xlat int fimul lret inc add fmuls or mov pop addl push inc add pop outsb popf popa xor push xchg sbb int das fstl jns dec scas shl dec mov cmp jp add int cmp dec outsb mov dec adc jp divb add xorb jbe and stos add mov cs jno cld pop cmpsb xchg add cmp inc rcrb add mov loope or loop push pop inc cmp xchg mov xchg lahf inc sub sahf das fildl pop cmpsb cmpsl mov push std andb jmp mov rolb ds ja sub arpl ljmp dec add (bad) xor adc inc xchg das enter push push inc mov and xchg inc nop add inc push call mov push dec mov pop mov mov cmc xchg jno add scas je or adc xlat add push jb out scas movsl jmp (bad) iret sti adcb add sbb mov add mov add inc in add inc lds pusha iret sub add sub or stc loope push (bad) aad in jae jae inc and outsl cs push adcl pop movaps and mov mov xor (bad) pusha (bad) cld (bad) push add icebp loopne iret (bad) cmp xchg adc mov loopne cmpsl xorl jns push out push (bad) add jg orl jp or mov jo into dec ds inc push out jo out and xor in in push add and ficom mov cmpl xor addr16 scas add mov rol sbbb inc push orl add addr16 jmp or or loope xchg aas das dec adc jo repz sbb cltd adc xchg ret adc imul clc out adc pusha xchg dec sahf int xor enter push mov in dec xchg cmpsb and xorl or lds ficomp xchg insb mov fldcw add sahf add dec out inc xchg movsl mov aaa roll or sbb out sti test jle inc jnp mov adc inc sbb imul push pop inc jp (bad) ja cmp sahf outsl mov fist cmp add frstor jecxz cs les dec cmpb mov mov sbb xchg jge add hlt popf cmp or jo jns (bad) adc pop and mov enter stos out ss out cmovns addr16 sbb dec ret and das into pop andl fs xchg dec sbb hlt cmp jg xor or or push das add sbb sbb and add mov mov out mov scas addr16 mov call jne add inc sbb add sbb add push pcmpeqw mov add data16 dec and sahf dec inc add mov add clc add loop jmp test sbb mov std mov jno add (bad) jb pop add (bad) and push add in xchg inc pushf adc and andnps and lds insl mov test movsb push jo xor xor xor repnz dec data16 push pop jbe dec pop add imul add xor lds xchg pop outsl cmp testl sbb pop lds sub cmpl sahf fcmovnb xor jg add pop lret cmp gs mov out or xchg jp andl std enter pusha scas idiv add cmpsb ljmp dec popf jbe js gs iret (bad) popa shll xchg (bad) je aas jbe cmp mov xor add fisttpl add insl push mov aaa jle psllq dec sbb lods pop loope adc cmpsb movsl add inc pop adc cld mov daa gs xchg add pop mov ds fldl adc sub das push xchg jg stos jo inc adc test imul add push fisubrl ret mov push xor fstpl xchg testb (bad) mov icebp add popf test loop and lods inc add addr16 outsl sbbl dec es xchg add mov cmpl mov jmp dec add jg stos clc pop and push test add dec sti aaa jg or sbb cli pop inc imul in xor iret sbb or add add and sbb mov jecxz ds sti addl xor add mov jbe mov loop sub xor ja in sub in verw pop (bad) mov jns inc arpl testb iret out pop out js pop (bad) cmpsl add mov add jno cmp roll jbe or lcall dec stos shl jl push mov loop sti inc pop and push add push add and movsb dec andl loope std xor test mov mov and mov insl pop scas jbe icebp add adc cmovnp fidivrl pop add push std dec mov adc outsb out mov add (bad) jbe ja jo aaa std out scas xor mov jns xchg jp repnz cmp fstpt (bad) (bad) data16 insb popf adc xchg ret les jo cltd sub in icebp ror jl xchg cmp imul fisubrl mov push sahf cmc ret jae sbb lahf mov roll dec sub fnstsw testb bound pop sub add shlb scas loopne,pt movsl add mov cmp push mov adc or js das xchg or outsl movb sbb jp and pshufw jno loopne pop jl add fmul aam sub jo inc out push (bad) ss popf lods mov inc in inc movsl sub mov adc nop or adc xlat jno pop dec add mov jle add push pop xchg jnp ds jo or xchg pushf add int3 sub int push cld add js mov movl pusha arpl xor test sbb push stos add lods pop mov push idivl add add shrl and les sub xchg sub xor in pop jae add cmp inc and rolb inc jp test xchg cmp add mov hlt xchg adc inc mov mov push aad and add push testl mov lods ret sbb jno add pop xor fnsave inc push xor cmpb fldcw psrad sub stc addr16 add fwait gs push repz (bad) pop cltd pop into and push int3 mov add imul pusha testb cmp jno aas mov pusha (bad) lret sahf (bad) mov movsb andl pusha xchg cmpsb dec pop pop js clc adc lahf pop sub rcll lock adc dec orl jmp add pop bound pop addr16 mov and mov inc loop es cmp pop or add clc mov insb dec pop pop mov movsb sbbb mov das shl mov aas or cld fdivl pop arpl das adc aaa hlt add jecxz sbb inc clc bound mov pop jb imul cmp mov lea pusha or out jnp mov mov push add jne xlat repz cmp or mov out mov jne sahf mov xchg adcb (bad) push jl inc dec aam xchg mov scas addb (bad) jbe out aaa ljmp add lcall cmp lea pop imul add into pop pop (bad) and and cmp call lods std mov dec pusha out sahf mov repnz lcall cmp inc mov or add jg mov add pusha sbb das jp jno mov adc out inc insb dec push adc movsb push popl (bad) lds jle loop sbb sahf cmp call cmp xor scas mov out and aam add sub pop or push out add add test cmp push sub int3 cmpb shlb add xor jae int3 cmp add pop loop push cmp pop push stos pushf imul fwait aam mov add jge icebp stc rsqrtps and xlat popf inc out fstp add cmp add sbb lret hlt sbbl cmpl dec lods add mov mov xor std lods and cwtl jge cmpsl xor sbb stos pop or repnz sbb aaa out es adc (bad) imul pop fucomip int cmp add cmpsl pop jmp add cmp mov jns cmpsl and das mov pushf scas pop xchg add (bad) xor xor push and add shrb mulb jb sti xchg dec cmp add mov and inc xlat add cwtl jo shlb inc les xor inc fs jecxz dec add mov and inc ret iret test orl insb sti push lds mov adc test je inc insb or pusha imul or mov pop or test mov push xchg mov gs in dec and out add xor add or bnd int xchg add mov xchg aaa call dec mov pop lea xor or push int3 xchg sub cwtl xchg add cmp ret pop dec xchg dec inc push dec popf je cwtl add inc shrl add repnz mov cmp jge test inc add test lcall push rcr pop pushf jnp add adc xchg mov leave jmp xor pushf push or jne mov and imul mov out cmp add xchg mov push pop push push add daa pusha movl xchg dec sub or mov mov pop mov lcall movsb hlt or pop push push add popf dec xchg push inc push add lods sub push fbstp add sbb add orl (bad) pop and std imul mov sti dec sbb js add push es sahf dec int3 rcl mov xor adc aaa imull std sbb jns,pt and outsb dec lea testw stos xor mov mov xor pop pushf sub sti fild (bad) movsb sub mov loope or inc je dec xor rolb js xchg out or stos adc ret sub push add or add mov data16 jnp or call pushf adc sub ja outsl add andl jne rclb mov or notb pop pop push pusha gs mov cltd jno dec rolb push (bad) pusha inc add out imul enter iret pop shlb addl sbb das jo cmp lods inc daa rorb adc lahf (bad) mov hlt jecxz cmpsl cmpb jmp fwait xor fildll rorl out add xchg bound add push stc test das jl add cli xchg mov or add arpl in mov adc aas jnp ud1 subl adc mov mov out adc pop inc test add lock sub add aam adc repnz into sbb shrb jp stos add js dec hlt cmp ss div inc ljmp push ret inc fwait or inc mov je arpl clc sub std and mov adc fdecstp jl add or rolb inc cmp push scas inc adcl dec add int3 jb in faddp dec add mov test mov and mov incb sbb adc sbbb icebp add cs pop sti daa decb mov popf xchg test pop adc pusha adc mov mov rcl add ret pusha mov dec cltd push add or mov add xor cmpsb pop (bad) push push in aam adcb je sbb fisttpl fistp mov popf nop int3 dec xchg xor mov xchg inc cmpsb add aad arpl or push sahf stc add xor xchg mov xchg iret mov add cwtl push lcall sbb sub inc xor pop add mov lods outsb cmp push scas movsl jmp add pop pusha mov adc flds add popa xchg xchg aas inc add insl jnp into outsl xor adc jg jo push insl or ret movsb sbbl inc mov jp sub test (bad) push cltd add add and sbb jmp cwtl add jmp loope fwait pop mov scas scas aad pop xor jb adc outsl add sbb xor out in (bad) sti pop xchg sbb nop test mov pop jae push xchg fist pusha adc pop outsb add sub sbb xchg jl mov aaa out or jnp nop pusha popl scas jns mov xchg inc jp sahf cmp add mov aas subl fs mov and and add dec test arpl (bad) and ss pop add stos pusha dec xor orl jae or pop pop and orl sahf cld adc in cmp dec xorl xchg pop add ss sub or jmp test aad clc or jne sbb stos mov call mov pop (bad) pop push std push (bad) pusha out sbb lods ror mov inc dec add sub (bad) sub xchg pop jns adc in cmp xor outsl es and fidivrl and out adcl out idiv push add lock xchg jge rorb sti iret outsb (bad) jp insb and pop xor in fnsave adc add mov pop adc jb adc (bad) outsl mov push sub dec and add je xorl arpl clc (bad) mov pop sbbb dec (bad) jne push (bad) pop scas jle lods add out sub inc pop and addl cmp fildll add (bad) nop xchg ds add aam cmc dec roll jnp inc rcrb adc mov xchg xor adc add xchg cmp fsts mov cmp cwtl mov clc movsb cmp stc push cmp pop bound or jle sub lods pop or inc add test cmp xchg mov bnd mov rcrl add int3 mov lods outsl jle add cmp mov mov clc aas xor orb add lds test test jmp xor add xchg shlb xor add cmp push add addb cmp mulb iret test cmp test add fild sbb sub popf pop in in es je sbb rorl xor and sbb or dec dec and jb cld stc xchg add pop out iret movsl or add lds mov push xor jo cwtl dec repz xchg sti push dec (bad) push add sub outsb lret ja add shrb aam sbb and sub movsl outsb mov je mov leave fwait out in sbb dec scas xchg mov icebp adc mov mov lock aas cmp add jns xor sbb popf arpl add data16 cmp imul adc push mov cmp popa pushf xor clc sub shrl mov adc test movsl jp cmp movl lea gs out and addb push jmp and mov leave in lahf mov adc ficompl cmp xlat or lds mov lods sub mov mov push fist mov rcrb imul push add mov mov aaa xor xor or in sbb (bad) jne fbld jbe add mov xor add cwtl ljmp popf or cmpsb jmp and pop or int add nop lock andl shlb out mov repnz sub jle and mov and cmp inc inc shrb pop call dec push pop movl cmp mov mov js mov pop xchg cmp sub sbb xchg hlt popa add bndstx add ljmp add sti icebp push jne add mov fucom cmc les lods dec cmpsb lods lahf fwait js and into (bad) loopne cmp mov sbbl mov out add test daa adcl sbb jo jecxz test les (bad) xchg pop add rorb fdivl add ficompl add xor movsb add add cmp add cmp inc popf aaa cmp nop adc xor xlat add insb jnp add ljmp and mov stos out mov or popf push jge push inc lods sub add imul add inc loope jns push ja orb mov sbbl shlb pop push cld cmp hlt pop (bad) xchg loop (bad) xchg out push push jmp cmpsb mov inc add je inc jne sbb jecxz jge inc in xor imul loope push jnp add add mov push loopne adc jge fwait add mov sub adc mov subl jne add stos sbb andl out inc pusha clc jge cmpsl add in data16 inc jle aas std add mov addr16 jp mov scas jl add (bad) xchg push popf mov shr adc js jbe scas or pop add push add push out jecxz arpl mov sbb sub cmpsb aaa sarb aaa mov jge dec pop mov add gs push pushf leave xchg repz in jae stos add outsb mov add mov cmp jecxz jle divb in ja jnp lods lret dec add das cmp mov mov sbb arpl jmp add cmp mov stos mov iret stc push add and sbbb cmp imul ja std call xchg cmpsl jge add adc scas jo xchg add pop lods ss push push int3 lahf out inc inc mov hlt sar in into dec (bad) loop add sahf sar addr16 imul mov dec push frstpm(287 loope mov mov loopne (bad) or jecxz jns int3 xchg hlt add sbb and (bad) add mov movl mov add pop cmp ljmp in aam jae add mov mov cmp jge stc xchg pusha repnz cmp sbb enter sub add pop scas imul push add adc movsb add fcoml int3 sbb push xchg je sbbl stos pop ds out mov mov enter lds (bad) loopne and add pop nopl cmp cwtl sbb push sub pop popf hlt out dec mov pop add xchg lods (bad) inc and add pop add push add add xlat sbb imul les pusha sub outsb (bad) mov mov rcl dec pop add cmp push mov jnp jle push xchg adc jg out lods push cmpsb out sahf inc xlat test stc adc aad jo mov mov shlb addl decl add out push in pop lea stos inc mov pusha ret pop (bad) jnp loopne xlat insl pop outsl leave inc ret js lds mov in sti dec cmpsl sbb sbbl pop mov repz sbb and mov push sarl jp popa andl adc add sub push fsts add hlt lods das mov out add xchg addl jp scas inc add in lret sbb and jns mov push or dec add or xor and mov push loopne mov cmpsb not (bad) les push jbe enter jb cmc leave add rorl xor scas icebp sahf sub and pop lods outsl jo mov inc aad insl das xchg repz jns mov data16 sar pop fcmovnbe (bad) adc inc adc mov mov inc cmc and (bad) icebp dec hlt fs out pop inc adc fidiv inc push test lcall outsb sbb addl push add add and add and inc jnp and ret xchg cwtl add xchg lahf ret push popf addr16 add xchg mov outsb jb push xor popa add sbb test icebp loopne into pusha out mov (bad) or aad insl inc repnz cmpl pusha add fidivl or jl lods std add aaa nop push mov and addl pop repz jae adc and jl mov jle std add mov cmp add xchg out gs inc sbb xchg jb xchg push cmp adc jmp insl aad pop out and mov add add fnstenv or lahf sbb pop subb inc mov adc dec mov add pop mov push add mov out in ja add test lods add jg nop mov notb pop pop test adc or pop add fdivl data16 out test and add in insl add jae scas push mov add adc xor test adcl inc rcrb adc mov lods add bound cmc cmp mov call jae inc add mov xor add sarb mov cmpl out call or mov (bad) in jp add or je dec out inc loopne dec jns xchg or rol or jl sub xchg xchg aas mov xlat push addb push inc sbb js pop das popf loopne xchg mov stc pusha sub sbb add sub arpl nop cwtl adc test mov mov pop (bad) packssdw incb fimul (bad) xor popf dec sbb mov loopne pusha cmpl je and cmc jno jmp add jo in js add scas xchg stc popf ffree add sub push mov cmp pop adc or sub pop cmp add xor jecxz adc xchg nop or notl inc jbe rolb fiadd lods jb jmp jo stos mov pop xchg dec std lea add sahf in xor (bad) stos roll test stc out add or outsl out incb loop js iret dec add xchg mov stc or jo lods mov push cwtl into xor jb xchg push push lret add mov inc inc shll pushf lods or and repnz sbbl add sti fistpll pop out and sub add push verr ret sub fistpl ss sub pop jbe repz cltd mov add jmp mov add and mov add nop mov add sub mov cmc lret and pop jns fwait add add test add sti jne add cmp add ja pop dec xchg cmp dec add and add scas adc mov dec data16 ficomp push arpl pop add (bad) in aas sbb or adc inc cmpsl add addl or add rcl fimul test lret adc add nop xor test das ds add mov dec lds cmp and fucom add sbb add hlt cli jbe push iret add jo das add mov pop lea hlt sbb mov int3 mov sub aam sub mov mov (bad) xor orb stos cmp sahf test pop inc xchg cli add mov mov sbbb pusha adc ret fdivl (bad) outsl pop adc fild sbb add ret leave jno dec add je pop push lds add push (bad) mov xor or mov in cmpsb stos adcl dec jg inc ljmp imul xchg inc jle add or sbb adc outsb dec cmp mov movsl imul inc jno add cmp jnp add xor inc (bad) cmp hlt mov dec stos into dec add pop adc add (bad) je out add mov loop adc push (bad) pusha add pop and cmpl (bad) addb xchg jo nop mov movsb fildl clc popf and aaa mov shrb in or scas cmpsl insb jb mov inc xor out (bad) icebp fistpl std cwtl mov add pop out addl push (bad) dec add push cmp xor sub push loopne inc or jle add imul (bad) mov xor or popa jb adc mov shll dec and xchg sbb sbb add les xchg inc movsl stos mov addr16 xor xchg icebp pop adc pushf mov ret dec push cmp adc xchg xor xor ficompl adc add in imul cmc add sbb inc stc xor lahf fadd les adc mov aam pop and adc leave fistp mov hlt loop andl push out jb js push inc fwait pop (bad) mov gs scas dec pusha outsb pop push xor sub out pop mov fldl sti inc cmp je add mov sbb or mov inc push aam cmc gs add cmp pop xlat xchg in (bad) mov jl or adc mov xor pop xor addl fstpt lods xchg aas rclb jo sbb (bad) lods pushf xlat lret push or (bad) add jns rolb mov sub push ja or cmp sub (bad) hlt push pop mov (bad) cmpsl mov inc orb push (bad) push add jp mov push insb sahf add or push (bad) sbb sbb xchg sub adc and and in add iret xchg (bad) jae outsl orl sbb add push jl aam nop pop gs movb adc std (bad) imul sub dec xlat mov jl addl adc push and jl and movsl sahf cmc xor mov call mov fdivl inc addr16 sbb mov and sbb jecxz inc scas and outsl sbb jmp mov out add (bad) scas mov jbe andl bound xor dec mov add mov cmpl mov pop mov fdivrl mov add ficom xlat inc or loope pusha call dec add jg or cmp add fnclex add sub add stc and dec add sarl in or inc popf adc push in gs arpl jle movsl cltd sbb icebp inc xorb fdivrs fdivl add xor int3 in add out pop xchg gs sbb xchg mov xor adcl xchg bound or jl,pt ss lret cs cltd xor mov xchg (bad) popf add add inc xchg data16 aad add push xchg lea xor inc je js mov mov add dec repz xchg add rcll or out sbbl jl orl fadds leave roll test je mov fimul add sub add mov pop mov out cmp add add addr16 sub ljmp (bad) cmp cltd pcmpgtb lea cwtl add xchg in rolb (bad) repz cmpb add mov mov mov push dec sub mov cmpsb xorb xchg pusha add jo xchg daa andb out push mov add imul mov xchg add mov sbb test ret cmpb mov (bad) in imul pop xchg add hlt sub add xlat rcr pushf dec and addr16 add dec add flds sub push pop aaa add jge xchg dec cmpl push inc mov xor or cmp add jge aad jnp cmpsl packssdw pushf inc faddl cmp mov ds inc lds in popa roll fs push sbb cmpsb sbb movsb add addr16 add add lea mov jg add mov (bad) or jb xor cmc popf lock cltd add dec jmp aad cmp repz cmp add (bad) bnd add xchg ficomp sbb cmp mulps add mov inc (bad) xchg pop ficompl fildl xlat fist popa andl xchg (bad) aaa popa enter (bad) lret add xlat shll or scas sub mov jo dec inc shrl mov movsb and shrb sbb pop in jp shrl xchg fs sarl (bad) dec add stc andb cltd xor jl inc sti ja add scas adc push inc add jg (bad) jo or loope inc fadd dec jbe mov or jns fidivrl mov inc push mov add out push inc push mov rorb xchg push add or inc cmpsl movsl test and and add fnstsw add stc loope mov jo add lock pop into icebp add rclb add psrad add jno loope mov pop pop sbb jo dec cmp outsl lret jno leave jbe sahf cli or mov loop dec xor jp out leave add repz adcl jecxz cli or cltd mov xor sti xchg adc sub mov mov aad and mov add xchg pop jle lret sbb inc sub mov or pop mov andl inc pop outsb nop rolb jecxz adc cs in add xchg dec daa arpl xorl test pushf (bad) fidivrl shl push pop cli fisub xchg add andb cmp xorl sbb adc pushf repnz adc std cmpsl push mov add ret or mov lea arpl lods xor xchg adc in insl xor add int3 mov add add loop add jns lahf xor xor inc and inc pop sbb lods call cmpsl lret mov add imul jp cmc add andl xchg loopne sbb pop pop pop xlat in fisttpl fsubs add mov xchg or aad pop sub cmp inc into lds lods jecxz add jne rolb pop add in push pop cmp and push (bad) jl sbb rolb iret imul popf jno mov inc mov mov in dec sub add loope movl mov adc and pusha add scas aaa mov andl jae lods rcrl pop add loopne and push cltd add scas ficoml mov insl jne cmp or xor sbb inc push jo add pop add dec cmpsb fdivr adc enter add loope ret mov mov icebp call lcall add and inc roll mov mov mov sbb pop nop xor mov inc sbb bound sbb pusha test (bad) notl push fistl lahf xor ds mov hlt and inc scas add jg push jbe sahf int3 call lods fwait pop sti add mov pop in lcall push add (bad) mov enter stos mov js icebp add insl mov add out int xchg pop pushf clc push outsl dec sub adc in and fildl xchg xchg dec lds fcmove loopne out xchg inc mov add sub sub xor test or mov sbb or adcl addr16 mov nop cmpl inc xor sbb push aam inc jl pop add xor jno push add pop sbb xchg aam cmp add mov rcrb cmpl or push movsb cmc sub aas sbb add adc xor mov ja xchg add lds adc sahf pop sbb add loope cmpsl ljmp das sub cmp jecxz add or div sbb mov cmpsb seto andl mov xchg pop add add fwait inc out into inc inc add sbb mov data16 mov xor cmpsb cmp lds push sub add in jecxz,pt add adc out adc push pop pop lret xor dec les or cmp addr16 jge fnstcw psubd inc xchg mov jecxz and (bad) jp movsl add dec inc imul inc pop add cmp leave and push loopne out inc add or mov add xor jns adc adc and int3 fiaddl sbb fcmovnbe stos (bad) jo (bad) testb hlt jge int mov add fcomi into dec (bad) pop sbb dec iret push repnz inc jbe cld mov and pusha mov push daa xchg (bad) adc add adcl lods sbb pushw xchg inc sbb sbb movsb dec xor push add xchg int mov mov add jo cmpsb add or lahf data16 fcmovu cmp inc cmc push pop loop ds (bad) jno andl inc jg fs adc or pop jle pop push es adc out mov xchg dec loope push pop test mov lds aaa xchg outsb push add pop out popa or mov or pop xor call cmpsb imul popl dec lahf and daa push icebp pop clc add adc push cmp mov xchg xchg rolb test loopne fildl or lods bound mov add add std add and add test test adc adc or mov mul std stos dec rol iret add (bad) push inc push loopne add or repz dec push xchg and arpl out orl jmp (bad) jp aas leave add pop jg or out aam jbe sub add inc inc mov stos orl cs mov dec (bad) push xchg and pop inc mov xchg inc clc ss call insb sti loopne push lock xchg mov jno les cmpsl and mov adc fsub cmp test sbb mov iret cmp out fcmovnbe add (bad) adc xor sbb hlt (bad) jmp push adc divb out sbbb icebp in xchg lret jo mov xlat sbb pop inc test fucomi jb int std roll mov pop lret sbbl cmp mov push into insl mov adc mov inc test and xchg popa add mov out bound jno mov sbb mov jmp add iret jbe dec mov mov and push inc rcl xor jmp pop arpl nop mov push in iret mov xchg push jp pop ret push add rcr mov aas in (bad) adc pop sub push ljmp (bad) jnp add jp imul mov xor xchg pop jo mov or addr16 mov ds dec push aas out imul push jg ss adcl jmp or add inc xchg lahf (bad) dec and jns subl mov mov jge js movsl add lock sbb ja push rolb call addl stos (bad) xor fdivrp mov test xchg add cmp jns add or add push jl add xor mov mov (bad) jecxz ds pop inc sti cmpl stc lds lret nop gs test jae sarl cmp dec or fist idiv popf ja dec xchg jo pop adc push jmp sbb into rorl (bad) jns mov lret (bad) ds jle add clc lret arpl adc gs xchg mov lods jae rol sar jle (bad) cmpsl inc xchg scas test cld jo add mov mov inc dec sbb jge pop (bad) outsl mov inc bound in sub (bad) notl or add mov inc fildll stc jnp lds jae sbb ss mov or lahf (bad) fldl mov andl in js test push test lret add jbe mov add sarl dec mov dec daa mov and push dec xor arpl ret and add mov rolb inc dec mov dec subl mov dec movsl pop xchg andl cmp imul cmpb jp xchg xchg mov pop lock daa imul test add xchg aas pop sbbl xchg negb aaa cmp daa pop jnp cmp add jl lahf xor jg add cmovne push sub push jp data16 add dec loop lcall xchg xor call pushf js mov fadds jl stc push jbe jle xor imul sbb sti nop shll jle xlat (bad) dec testl mov add pop scas cmp push add or mov fidivr sti inc add flds lods xorl jl push add lds dec pushf or add lea lret inc add cmp mov pop ja cmp dec add jp (bad) aas or push iret movsb push add jmp imul stos jl jae inc repz cmc jp shl mov sarl cltd dec add cmpsb sbbb aad mov testl sbb and mov stos dec fmull add add jno inc lcall cwtl (bad) or or insl jno xor pushl pop jo push repz cmp cmp outsb inc mov jge xchg sub inc in je roll test cld sub mov rclb and arpl (bad) bnd jo jecxz add pop push ret add scas inc and adc fwait (bad) and aam sbb pop pusha push call adc mov pop arpl test divb repnz xchg adc mov sub (bad) aad loopne add mov mov push outsb into jl dec xchg and fcomps push js pop mov mov jmp jae inc fstpt inc push and outsb jae add movsb sbb aaa insl jb mov sti adc fdivrp testb sbb sub add xor xchg add lcall es add mov arpl lea push popf sti push out call insl cmp cli mov mov cwtl aam addb sahf xor push scas outsb dec adc add or addr16 insb adc cmpb mov out add jge mov xorb mov sarb pop sarl xor mov dec les xor add aaa shrb adc mov (bad) mov mov inc mov aad push adc movsb lahf add and pop pop push add jo mov add jmp add adc mov dec sarb add push or dec pusha call movb bnd cld scas shlb jp das out loopne inc pusha stos movups add mov xor ja pusha fcomps pop leave inc adc cs mov jne and sbb mov add iret fldt or mov sbb clc mov pusha sub (bad) push mov add flds aad sbb xchg sarl mov mov lock add pop xchg popl ja add ds fisubr rcrl cmp imul adc jno push jmp mov (bad) sbb ljmp pop rdpmc mov and mov daa sti pop jne add mov cmp popf les cmp dec add mov xorl js je add inc sub sbb mov xorl inc pop dec mov mov xchg stos dec popa add dec sub add mul fwait jbe add mov mov push jae cmp adcl xor add es mov les jb (bad) add js pop out jbe and leave dec xor fldl addr16 sbb push xchg sbbl or inc dec or add fstps (bad) hlt js xchg addr16 and imul shll add xchg fcomi outsb sbbl (bad) pusha mov sarl (bad) xor mov std sbb add bound adc cmp sub dec ret sub add lds cs sub js xor jnp add sub add inc sbbl sub pop inc dec or adc cmp jbe add cli lea gs add sbbl mov mov mov xchg (bad) popf movups sub pop xchg xchg dec push add jecxz scas je add or mov cltd outsb push mov xorl pop pop add lahf ljmp scas sbb pop mov xor inc (bad) fadds cwtl sub mov lds movsl sbb es sub insl add adc cmc push test mov sar and js (bad) adc inc outsl xor push popa orb mov cmpb jp cwtl sub jb inc add sub adc imul push shrb scas add adc sahf jecxz xchg xchg loope mov mov pop xchg data16 fmuls or sub add add ljmp in sbb and dec pushf add add jbe jle xchg xchg add mov add imul cmpsl jl fistpll sarl add arpl jns push fstpt sub pusha pop mov push cmpsb cmp (bad) sar movsl pop add fstpt enter mull fwait sbb push mov lret add pop xor pop iret stos aas xorb mov mov cmpsl (bad) mov add ljmp xchg ret and mov push sbbl jb cmp fimul dec bound sbb mov xorb aad add mov dec xor stos pop lahf add cmp in push add repz outsb mov pop jp dec push jae in inc sbb test cld hlt andl out push jnp js add ja movsb or add sub cmp clc outsb ja push (bad) sub mov scas je mov daa jmp inc jnp pop cmp and clc mov or lcall inc leave loopne mov add sahf sub sub movb cmc mov test es inc adc sbb cmpsl pop popa js sahf inc jo adc out repnz mov fsts mov jbe aas push xchg inc cmp dec testl pop add std stos sub add scas sbb and in (bad) mov cmp xchg nop inc push cmp mov aam jmp pusha xchg cmpb xor test rclb add in inc scas (bad) dec andb cmpsl dec mov aad add add in xchg jge movsl fistp xor xor jns clc add lret mov adc mov mov xor hlt in les jnp add lods fsts jbe (bad) (bad) and jae and adc call mov imul or adc mov pop pop rorl out jb popf add jecxz (bad) add cmp push (bad) je xor aad sub sub jg jl push push mov rorl push jo sub add xlat mov push jbe xchg mov pop mov add fwait add scas fcompl jb or outsb add jo es addl jmp jo xor orl int3 mov mov test sub faddl int3 push pop mov roll mov stc mov (bad) cmpsl jge inc inc fwait xor aad or dec mov add dec xchg add xchg xor andb mov jb imul dec fildl mov mov add ljmp iret xlat js jbe add add dec les add dec cmp cwtl or push and or pop out push inc cmpsb push xor mulb pusha sub push addr16 add pop or xchg sbb xor cmp lret add push out add loope add (bad) push mov mov gs inc push xchg jl jl insl inc movsb (bad) cs scas in dec es xlat (bad) and mov push mov xor fild fstps xor jg add (bad) push mov add sub les loopne (bad) cmp add lods nop outsb sahf repnz insb icebp mov lahf dec xor out push (bad) ljmp jge add loopne jbe cmp fiadd jno rorb lcall jae lea pop test and sub insl jno nop into add cmc movsl fnsave or incl out dec fs add add dec lds jle mov pop (bad) or jl push mov in adc sbb les add add testb js js add loopne je jecxz cmpsl in loop jl add sbb repnz rcl movsl mov ljmp mov pop mov mov push in les push arpl push add js add mov fninit ja jo jp sbb mov mov dec jb mov add dec lahf mov subl cmpsl add mov scas mov sub out cwtl pop pusha es bound in (bad) push in mov insb inc mov sbb add fldenv xorb and inc enter inc cmp inc jae mov lea (bad) mov jle add jo (bad) cmpsb insb inc pop bound test push fdivl add pop fwait add jecxz into sahf xchg pushf jp cmp sub ds push add mov jne pop xor add cld sbb mov fadds or stos sbb and sti (bad) cmp adc enter add (bad) cld sbb dec push mov (bad) negb fs jns imul roll test mov xchg dec js add getsec lock popa lcall int daa test orl push aam xchg and mov sub or push es jp outsb xor pop inc xor pop and test or add mov cmpsb fwait add mov pop fbld adc jns dec pop xchg cmpb scas sbb fbstp sub dec add outsb jecxz xchg and loop ret add add ret inc mov aad xor enter lea rcr jge pusha add jo cmpsl jae sub mov shrb inc nop jg dec push dec sbbb cmc add sub je insl adc rclb scas add pushf add jecxz scas sahf mov pop add push call inc add jno add jae iret cmpsb mov ret xlat jo loope sbb xor icebp sahf push (bad) mov cmpsb add mov inc pop leave ret pop (bad) push arpl adcl movsb pop mov pop sub ret jl or mov sbb add loope mov dec stos dec imul xlat push pop call mov add adc adc adc add ds stos inc add pop bound into mov cmpb cli push je jne fs adc jae addr16 mov repz jo add push call mov sbb dec test ret jge and ret add pop (bad) pop push cvttps2pi xor push pop or mov test loopne sbb fwait or inc int3 in repz or in pop xor add dec pushl jp or xchg int3 aas dec sahf cmp or sbbl and mov cltd mov test rolb push and pop shr lods cmp out orb and sbb jo rcrl or arpl decb push sbb ja sbb jnp add add add cmp xchg mov add adc or out cmp lock push mov sarl sub jle fs jnp cld jb add adc cmp cmp jne outsl add pop lcall or subl and mov sub add call and and dec add jb pop add test aam pusha lods mov loopne js xchg mov outsb lods or sti or je jne and out out pop xor data16 lret add push in jg in addl jne and add xchg adc inc pop fs and add das (bad) mov add iret jbe icebp rorl (bad) adc push outsb mov xor enter mov xchg call push and push ds jp lret setae in pusha and sahf add ljmp add adc dec pop das shll xchg add mov cltd test push xor adc jo sub js jmp xchg loopne popa dec pop pop icebp sub verr or pop fisttpll popf leave shlb mov cli add je mov pop scas xor pop xor mov stos add mov add les incb push cmpsb sbb inc or and sbb inc daa aas mov das subl rolb cwtl (bad) pusha mov add sbb sti lds add pop push mov push fildl inc pop bound daa stos hlt add pop push in mov push outsl mov (bad) mov add repz add xor xor add push cmp aaa or mov mov dec mov adc int (bad) inc inc call roll jbe lods xchg or add std (bad) or add or or xchg rclb pop inc dec cmpsl addb pusha xor cs sahf data16 jb push cmp shlb mov loop icebp (bad) jne cli add cmc imull ljmp mov add mov cmp jp sub addl jmp add test mov jmp jp flds jmp stos in cmc out sub (bad) push andb bound daa shlb nop push ret enter push bnd sub (bad) mov pop fisubrl int push add and cmp push mov and out cmp add push adc xorb xchg jns add mov adc and icebp test push add mov xchg scas fdivs leave add test xchg lcall jp sub ret leave scas xor ja or and bound sti leave add in aas jno sub or movsl mov lret and mov jno aad push sbb inc jle fbstp aas dec add ret loop orl push sbb rcrb cmp add jae iret pop pushf add xor cmp addr16 xorb shrl xchg add mov push xchg xchg gs subl add data16 push push mov and jp inc movsb dec xor mov cltd add and arpl vandps data16 sahf adc add outsb lahf sub inc add lret add and mov insl xchg fimul andb xor add sub movb jb fnstcw shll mov add int3 (bad) jmp in es push adc add loope adc aad orl lret popf xor mov and add adc cmp sub ja and dec data16 rcll xor pop mov std mov lret jb mov iret jb testl xchg or fstp jmp movsb xorl inc call mov push xor xchg pop mov dec sub dec mov loopne and add mov dec mov cmp into fs outsl mov dec mov out add es jae movsl inc jbe or out testl mov mov (bad) in loope and dec in jmp adc (bad) jbe push lock leave xchg sbb sarb sub outsb pushf push in inc scas repz les dec (bad) js inc jle add cs dec lds (bad) xchg hlt sbb pop (bad) je out loop,pn (bad) loopew pusha in adc jge orl cld and xor insl fs add pusha inc div aaa (bad) xchg mov pop inc add sub dec mov adc or add pop jle out xor inc loop bound jo and sub aad popa mov and and mov add xor add ss push andl jle sbb lret imul mov cmc (bad) (bad) mov shll add adc (bad) jp cmp loopne adc adc and inc test add sbb push xor fildl xor stc inc sbb add dec jle enter add rorb mov shrb xor jle insl ucomiss sbb push inc sbb into adc jp xchg shrb nop push adc cmp or jecxz sub jno mov and cltd push inc (bad) icebp movsb arpl add mul fisttp inc cs inc mov fnstsw outsl push lcall or xchg out adc push fs cmp test push push jo sbb js xchg mov push sbb scas sub mov fwait inc inc mov mov stos inc (bad) or fnstenv lock cwtl out or fisub bound push adc add and jo mov lods xor test pop pop cli adc add (bad) jno add ss das add adc ja mov (bad) inc or or cmp push dec xchg xchg pop addl mov sub dec std aad insl rcr int dec (bad) jno repnz dec arpl add sub inc push and xor and adc out jl addb cmp mov test scas xchg inc in or int add and ret pop fcoms ja mov ss or mov push mov stos xlat jbe push inc mov lds cmpsb insb add clc pushf jg add or add testl pop add ljmp test cmp xor cld outsb mov in int cmp or adc mov xor in fist jle mov jg lds sbb jae or push xlat imul push jne fstl (bad) pop jno (bad) and outsb cltd cmpsl out ret enter dec (bad) mov sbb push sub ja cmp sahf scas ret inc (bad) sbb pop sub sub aam fbstp es jno mov enter (bad) pushf repnz mov add ljmp add sub add and (bad) jl nop jg sbbl dec push or or add mov add xchg lahf inc cmpb pop mov add mov push fisttpll es or stos inc int mov adc jbe scas je inc xor xchg or movsl (bad) popl lahf (bad) mov (bad) lock dec dec cli push add xchg push rol add daa xchg push repz push or add repnz jg pop adc notl add mov sub stc push dec add stos call adc mov js cmpsb scas int add and adc inc je jbe flds mov and and out lock int3 jg mov inc mov ss dec iret popf jle repnz movb aam addr16 xor ja icebp mov adc dec dec fildl adc push push adc xor mov sbbl cltd fsubs mov dec or or sbb add or ljmp jmp jne mov and inc xchg adc cmp adc inc imul mov stc outsb aaa popf out and mov add or sbb mov aad outsl xor push popl frstor test pop inc lock or inc add lds imul sub sub cmp pushf test aad loope add jno xchg mov or and xorb push lret mov cmp xchg sbb insl add fisubl int3 mov pushf fisubl mov xlat xor dec and jae (bad) sub pusha lods jno cwtl add xor jge fwait jl es hlt int iret lods in jmp inc fs jmp movsl dec xor add xchg inc aam out sbb sub jns imulb pop ret or mov pop repz (bad) (bad) cmc xchg imul xlat mov add mov stc cli mov lds add add and xchg inc addb cmovns jbe rolb push arpl adc xchg sbb in out push fdivrs mov or cmp pop jmp mov js call les pop xor (bad) cmc addl int3 repz dec and sar dec ds mov mov sub jo insb lcall movsb daa hlt pop cmp cmpl push in add pushf test jle dec mov xchg push mov testb data16 adc mov add jnp dec stc jecxz pop push ja frstor jge pop mov mov repnz sbb xchg mov fwait inc jbe and xor push add or ficompl lahf push pop imul jmp sub inc mov add rdmsr lods add adc lock data16 sbbl mov mov dec add dec std ret add mov cmp je pop ds add faddp arpl (bad) lock in dec sti mov cmovnp inc cs and mov data16 ja mov dec cmp dec mov adcl mov push jg addr16 (bad) call test insl add sbb or jno js fmull inc out insb loopne inc pop in nop cwtl sub test orl fnstenv push xor (bad) ja jb out dec sub es mov add dec out add push mov dec cltd mov adc mov and mov out inc mov sahf cmc mov xchg xor pop cmp mov sub lods dec jae scas pushf adc add pop cwtl push sbb add push lahf cmpsb repz xchg (bad) mov test xor addl add adc sbb popf add sub (bad) ljmp ljmp mov inc xchg outsb testl sub pop xor jns xchg pop push mov xchg js mov ret popa push aam cmc adc sub mov mov js dec mov insb bndldx cmpsb lock mov mov fbstp add sub xor add js add (bad) loop xor jmp xchg (bad) divl aam stos pop adc jge clc jbe mov lcall xchg lods ss add add dec mov and sub in push pop lea repnz (bad) out fadd push iret jle xchg in add ja jmp test aam inc push inc add and add aas (bad) mul in mov pusha ds sub add imul cmp add cld insl or push pop xor sarl pop leave dec xor popl in adc subb sub call push adc scas adc pop cmp pop insl aam push shrl mov sahf orl lcall pop mov sbb cltd fdiv sub bound sbb xor orb out mov (bad) lahf push aaa into add dec xchg jae sbb inc in pusha (bad) je add cmpsl (bad) pop (bad) aas insb jmp les mov jecxz jp popa call repz adc sahf enter xchg icebp jl adc rcrl test sbb add push add dec lds fnop lock mov test (bad) jo add adc outsb lcall add fdivrs lea notb aad xor pop jg cmc sbb imul mov adc rcll dec mov pop js and xor aad fild adc push adcl jnp fsubl cmp out rolb jns jae,pn push jno pop pusha pop mov pop pop subl jns mov ret inc add ljmp pusha std outsl add pop inc add es or loope stos dec cmpsb fldenv mov shll xchg lds xchg sti jo mov mov test rcll sub and add fcmovne repnz inc movsb movb cltd adc push (bad) xor repz mov jns cmp push add pop and cld jns jg add fs xor cmp dec pop dec or pop xchg pop and cmp test push pop adcb xchg sbb rclb jne out loop stos xor adcb pop in rclb add jp cmpsb pop lret int xchg sti push push mov shll pop xor adc push roll inc jns fildll sbb jecxz and ja add icebp fistpll ret add push mov aaa jnp add xchg (bad) dec add stos movsl pop xchg addl sbb (bad) mov jne movb fidivl sbb add in test ja insb mov pop lods (bad) fsts sub inc dec sbb mov pop jbe in ror jae xor xchg mov into pop ss lahf xlat cmpsl adc cmovne adc xchg add out daa mov test mov jo and lahf xchg mov dec js or test add cmp mov pushf pushl aam add mov mov jno add mov lock jg add lahf xor sbb das les and pop ds aas insb pop inc add adc cmp push sbb movsb scas xchg cld std inc imul xchg rolb xor mov push pop testl jne push (bad) jmp adc or cmc cmpl push add stos lods subl mov imul jo add scas dec jp mov and and mov xlat mov mov mov idivb xor lea mov sbb negb js test adc pop lods pusha out push cmp roll mov dec dec sbb outsl push pushf push addl in icebp loope orl jle cwtl dec cmp cld hlt jle mov mov outsl inc mov or push adc add xchg js int outsb mov (bad) pop or outsl cmp mov into clc jle and adc sbb mov push cmp add popf dec xchg adc mov (bad) and xchg subb xchg outsl mov mov xor fimul sbb push xlat movsl mov jo xor dec lock jmp pushf add pop mov jo cmp xor in jns or fiadd mov mov ret cmp fnstcw push add js ljmp repnz cmp loopne sbb fs outsb push daa iret and sub xchg pushf cmp xorb sbb test movsl xor adc xor pop sub add mov add rolb inc dec cmpb mov rcrb jp cwtl add stc aaa jg loope add adc jo fildl test fwait pushf pop leave add cltd mov add sub inc jnp xchg add std xchg and sahf and inc or mov push (bad) mov jg add push test lahf mov cmc ja movsl sbb (bad) mov cld dec jge inc and jl js mov les insl js psrad fcmovnu in adcl mov adc call sti or loopne scas loope jo sub or mov jge and decl ss add and in dec add pushf push kxorb add pop adc test bound sub sub xchg jb leave mov mov bound mov clc out xchg test add data16 dec cmp test shl or and adc rorb call jge fwait mov test xor ja pop mov mov mov sub inc jo add (bad) loopne cmpl lods mov xor sbb push add ds int3 add dec shlb mov (bad) ret aaa mov xchg inc lea add mov ja add push xchg paddsb dec and pop cli jo push add push icebp jae in dec and adc cmp popf mov inc daa out add in add push sub popaw dec jl push add mov push int3 inc imul inc jne add fs add or pushf xor scas aam xlat fs mov (bad) lock mov push and jae shll sar mov jp sub inc inc fldl cmpsl push sub jmp xchg jge icebp lret xor mov add fadds out mov js adc cmp mov iret sub in bound xchg lahf aas inc psubw inc ds fwait pop int sub mov adc add xlat stc inc add xor jge enter aas cmp (bad) fistl inc add cmpsb cmpl xor mov mov (bad) in lret mov jecxz mov nop aam mov jbe sub or movsb xchg test pop push rolb mov jge arpl jmp add iret cltd sub jno les mov cmpsl ret test mov aam inc adc mov pop out int mov mov mov andb ja mov stos into sbb xchg push add push incl jle in cmovl add jmp sub lret add push lea dec add mov fadds mov jo xor or add lock mov shl cmp add mov pop ljmp add cmpsb mov pushf and (bad) inc (bad) sbb jmp stos sub popf dec in cmc insb xor pushf mov adcl lds jmp inc gs fwait pop pop pop fnstenv insb jne mov xlat cltd push xchg pop sbbb fidivr rolb push das jmp repz add divl sbb push xor mov jne test mov xchg or cmp xor addl add repnz add mul fdivrs mov mov scas psadbw push pcmpeqd js daa scas (bad) dec xchg faddl and xchg push add je insb add jns data16 inc mov mov pushf adcb incb (bad) pusha inc pop add mov xor or xchg loop cwtl jp jno aas cltd add push mov ljmp lods fadds shrl add jnp sub insb das inc fstp push add mov pop cmpsl add ljmp cmp dec add xor (bad) (bad) (bad) into cmp cmpsb icebp fldenv test dec sbb add aaa dec add ret xchg jo and je add sysret xor push xchg lcall push pop mov iret jns add add (bad) repz jnp pop stc mov ja add fstl dec jnp dec aas dec mov fbld repz add inc and addl xchg (bad) repz roll push jo push add mov (bad) sub aaa dec in enter jnp add fcoml popf pop inc orl cmp push enter add mov add dec sub dec push pop adc push rcrl jl popf scas sbb fcomps pusha mov in and dec add je mov add in into test inc add bound xchg xchg xor cli add andb sbb ss (bad) les pop mov xchg jecxz mov ljmp add and inc pop cmp mov in mov push sbb add aad jl or push mov scas xchg and je clc add mov rclb inc sub jnp cmpsb or in out stos in cs aad mov cli test roll les push and inc roll ss sti pop xchg add daa adc mov pop add jnp mov shrb or (bad) mov inc push mov inc les mov addl mov je ds pop cs sbbl inc jl hlt inc outsl adc inc sub add or fiadd test mov push aaa fwait add popa bound in sub sbb sbb rcrl xor lahf adc sub ltr adc popf (bad) jl add push mov dec aad mov ljmp add stos jns pop mov xor or test std imul add in sbb jo out jecxz lock xchg and push mov add call inc (bad) jo lea sbb and test sahf mov add movsl push jns pop outsb out fcompl sub pop std push push jbe fucomp inc in inc out jg andl mov (bad) cmp add pop mov push jne xorl mov or fwait orl cmp mov cmp cmp sub adc mov push mov mov aam mov setl movsl arpl push sbb jl pusha jb hlt pusha jle dec add pop adc mov ja sub xor inc scas je sub sub movsb cltd add cmpsl xchg js ret call outsb sbb movsl mov dec inc cmc sub (bad) ja mov mov mov fild xchg in shl inc mov subl inc adc dec xchg or sti add gs mov mov icebp add push sub dec rclb add cmp mov xchg adc or aad outsb addl cmc or adcl in int3 out push into fsubrs jmp or fild sub add insb jb leave jae paddd add pop add pop aas xchg add repnz and inc pop jb stos and jo lret fisttpll mov (bad) dec les ja test or fs add addr16 rorl aam divl xlat push ret sbbl (bad) sub jbe add insb aas jg add fucom cld nop in jmp mov fdivrs adc rol iret push cmp jnp mov rolb loopne xchg movsb mov ficoml add add int je clc pop adc mov rcr push outsl fdivrl or add adc add scas loop mov pop jae and add mov xor (bad) fnsave add inc std (bad) flds mov dec mov aaa lret orb into rclb js xchg sub gs xor les inc add scas imul cmp sub add test mov (bad) mov push push incl imul push loop adcb mov data16 push add pop das add ljmp add lfs sub push inc mov lods xlat sbb dec cmp adc jnp or xchg rolb adc ret pop lods sbb inc inc popf cmpsb cwtl cs xor into mov xchg ja adc and fmull sub and sbb stos rol pop mov dec xor pushf test icebp mov scas mov sbb dec add shr insb ss mov add imul pmaxub out fcmovnb insb ret scas push add sbb out inc add dec pop jno sub ja cmp cmp push cmpsl cmp aad fwait xchg xlat jmp adc dec inc cwtl (bad) flds ds das data16 and imul in test pop pop cmp add mov cmp loop cmovb push std adc (bad) or and movsb sbb push or out dec mov add sub pop ljmp or stos fdivr push cld popa mov mov pop cmpsb xchg fstps and jo add loopne test jae test mov pusha jne sbb fdivr mov xor cmp loop loopne push lds leave add sub lods gs jnp lds push jecxz add bound lods push mov (bad) push lods lret (bad) inc das mov cld inc adc pop add push orb enter push lahf add in ficom add dec pop lods and push popf test mov add fdiv add push lods xor sbb leave neg in inc add loop,pn mov sub push stc mov repz imul lcall push mov pusha lea cli add insb addl jne sub xchg adc je xchg xor cmpsl adc or inc (bad) adc cmp data16 out pop lods mov add ja adc dec push mov rcl hlt xor orl or fstpl add mov push outsl rcll mov xchg add test and and mov add pop push lret or pop (bad) int addr16 out mov mov gs xchg jle adc ret loope add xor pop xchg (bad) or and sbb popa in out ja mov pusha mov add and add adc out scas xorl pop dec adc jb inc loope roll pusha imul and and cmpl and cmpsl add and cmpsb out popl and ret mov dec fldenv or inc inc test (bad) xchg dec and jne addl fist in aam popa dec jg js add push repnz ret cmc push inc and push arpl mov adc add stc push mov and insb add lea rorl and mov addr16 ljmp nop jns fdiv rolb and add jae mov pop push call add jnp lock dec in push mov mov push push lea (bad) mov adc jge ja ret mov lds andl mov jg dec addl int3 dec js xchg add je jp and jmp setb cmp repz pop sub xchg fild add adc mov mov jge add xchg mov imul inc inc inc xor in xchg gs mov inc dec in and shrl ss imulb add jo outsl test sub and rcrb add idivl add imul cmp inc (bad) jo add xor mov scas adc add mov orl inc push mov add scas xorl jae bound lods add add (bad) mov xor xor loop fistpll inc push push or xor add adc in call xor add adc cs (bad) sbb jb add fidiv jnp ret cmc adc dec or pop pop jne push adc pusha aaa add mov pop roll cmp adc int lahf pop (bad) shrb or cmpsl jl push lods loopne and pusha jae pushf inc add nop jne or addr16 xor into das cmpsl add icebp lods sbb cmp call aad and dec pop rcll cmp mov jmp xchg sahf push fdivrs fistpll jecxz sbbl jo call pop lds dec lea jmp iret jne jecxz pop in cmp or add jno outsl push or xlat add mov sub pop stos dec js (bad) mov mov pushf aam add xchg push scas mov std pop sti add outsb pop fmuls add jae aad xlat (bad) cli add aas mov xchg add sub loopne sbb fimul cmp xor cmp lahf shl push add add cmp inc add xlat repz sub jp cmp and les (bad) outsb dec mov fldt and sbb jno inc inc lret addr16 xchg add and cmp inc xchg cmp mov rcrl add sub add adc xor cmp add test imul stos and jbe in sbb push mov xchg rclb loope mov xor sbb push dec and push dec or xchg cmpsb es jle sub push ja sbb mov test arpl stos mov test add adc fs sbb outsl add aas bound mov sub xor push sbb cmpb xchg cmc lret or jl or icebp ret mov jle addl pop pop adc jp flds sbb fldt dec jne add inc mov pop test and pop inc mov aaa pusha addr16 jbe xchg xchg mov dec xchg scas pop in inc add mov add push hlt in mov sti inc mov arpl push xchg jno pop jmp xlat mov sbb jl imul add rcrl push pop mov sub mov add (bad) ja and xor sbb movsl test mov add add cmp movsb lods outsb pushf fiaddl add xor (bad) icebp (bad) and sbb xor jno sub ss (bad) into push (bad) mov add imul and mov add mov cmpsb outsb cmp dec popa sub mov xor pusha mov add insb aaa insl push pop jo or cmp add repnz mov nopl dec out add add insb (bad) icebp ja addl (bad) sub sub loop sbb (bad) mov xchg das mov jge int incb popa push jo stc push dec add or test jnp (bad) lds or dec fidivr cmc adc out lock dec add dec inc fisttp ds pop andb nop shrl lret cld add mov sbb mov dec and dec mov and xlat add and sbb sbb sub outsl pop fsubrp loope add sbb repz sub imul xchg xor xor (bad) stos add add outsl lods enter js add in xchg outsb mov push dec dec add stos cs orb jo enter arpl cmpsb or outsb lods inc pop fidiv cwtl add and inc mov addl cli out mov call add iret (bad) inc xor pop or sub cmp add (bad) aam and out sbbl sub rclb dec (bad) jp cmc cmpsl cmp aas mov or fadds mov push mov add mov push sub stos setle cmp and movsb jbe icebp push insl loope add je jp xchg sbb add outsl push mov inc sub orb test inc add js lahf setne add push hlt add xor out std call mov (bad) push (bad) (bad) pushf and pusha pusha lret add push dec xchg sbb roll test inc cld fs add mov cmp mov dec clc pusha xlat jp mov mov sbb jmp jmp dec fisubr je and mov test out shr add mov pop jecxz ds stc lods je xor mov add or or divl icebp inc sarl jle or fwait add xorb mov aas bound push xor fidivl (bad) or sbb cmpsb jo in xchg daa lock mov adc pop add mov pop add shll mov sbb or mov push mov jecxz (bad) js and addr16 shlb lret cmc add and jae out adc jle fdivrl cs jg add (bad) call lds xor pop push insb add cmpsw and pop mov ja inc mov inc jne add mov jle add into jb mov insb subb repz cmp mov (bad) jnp in jbe push add dec push sahf push aaa lret mov stos xor cmp dec (bad) mov pop jae xchg adc cmovne add inc mov (bad) leave adc add shr jl push add (bad) outsb cli sub fiaddl cmpsb add nop ds shrb psrlq pop adc jle aas lock push mov cltd xor xchg roll adc ret fdivp xchg lds jae xchg dec or ja jecxz dec push fiadd or std ds push add sub lods add add mov mov sbb insb pusha sub cmp jecxz mov xchg loopne je in jmp aam add xchg test test push inc lret add inc pop push sbb add stos pop inc repz add push int3 add or into sbb jno orl inc inc mov das adc xor pushf jg mov jmp jle or adc fwait add mov xor or xchg (bad) rolb int and mov add mov out push jno sub xor popf pusha sub pop mov add sub cli fiaddl scas adc pop add daa push mov pop xchg push sub movsl xchg (bad) jge mov lods insl lea in mov xor lahf adc inc in test insb lock imul and test in cmp add icebp repz push mov iret pop lds fiadd add mov sbb mov loop test fst mov int3 add shr inc sbb dec dec pop add sub add xchg push push insl pushf out xchg idiv insb into jmp mov mov inc mov xchg xor adc loop add stos and cs fldl sub popf (bad) (bad) arpl add xchg pop pop add sar ss xchg (bad) xchg or sub or jp add dec xchg add fistpll andl pop cltd rcr mov xor and mov ljmp cmp mov fsubrl inc or arpl stos aaa mov fist or lcall je xchg push cli jb jne xor mov stos (bad) add scas jne add rol pop jne sub testl mov sbb decb pop enter sahf (bad) in xchg jne out cwtl add fidivl jno sbb (bad) fptan mov dec pop aaa bound loope inc aas call jnp or imul les sahf testl fs insl add mov add jnp mov pop outsb mov cmp push enter jnp pusha and addl lock jo mov addr16 mov push jp sti or ss add ret sbb clc pusha jb add scas out mov jecxz pop xlat xchg fcom addl imul mov fldl2e lods popa sub js es ret xor xor push and jecxz sarb clc insb xchg pop add mov sbb inc adcb add jo xchg pop add mov pusha call dec pushf repnz and sbb pop hlt jae je add pop push movsl scas fidivr (bad) cmpsl mov fsubrs fldl (bad) aas retw adc test xor and cmpl mov movsl addl aaa adc (bad) sbb adc xchg (bad) add pusha dec sarb xchg fwait jle in loopne out xchg push cmp push and push sub enter mov adc movsl test sbb xor pop adc cmp mov popf or add int3 adc adc push adc fnstcw add mov das mov (bad) jb sub push add pop in cmc cmp add test cmp or pop sub data16 add pop les stos sti sub mov (bad) lock dec les dec xor mov adc cmp xor into lahf loop ljmp shl xchg rcrb mov inc add add xchg fsubs push xchg push mov pop and ds mov pop pop fnstcw sarb add aad inc adc push sbb xor jle jge inc in (bad) inc xor pop push add jmp fstpt loope test jle jle andb adc add xorl dec add pop arpl (bad) cwtl push mov sbb outsl enter sbb or jne mov mov mov stos add push lea outsl cmp sahf push mov imul push cmp or or sti js jns jo clc mov movsb lcall pop mov orl sahf add xchg sub lea out xchg imul sbb dec mov xchg fwait jecxz cmpsl clc je add cld loopne dec dec jg cmp and call add jl jmp bound inc (bad) jle mov inc push lock jl pop (bad) mov nop push sub add cmpsb push dec add es loope daa add addl cmpsl ja js jb xchg dec push test stos movq and jbe scas (bad) rcl pop sbb or sti mov or aad pop sub aam icebp cmpb or push test add daa xor push ljmp cmp dec add lahf xchg loop (bad) stc test push adc test sub insb leave mov imul jbe,pn in mov cmc jns sub fistpl add mov rcr movsb (bad) pusha add or push ja out ds scas jae add sbb repz dec mov sub pop cmp lcall shl adc ret add xor popa and xchg hlt enter jmp push mov iret outsl cmpl lea push and aad aas sub cmp add ljmp pop inc or fdivrs aam jg repnz jae popf lcall addl outsb add ret stos test aad xchg sub lods mov cmc add inc dec pop fisub add jl rcr neg movl xorl call aam xchg iret mov add and jo inc mov (bad) jbe push sub inc jo xor dec add outsl jmp add mov sbb mov sbb mov lahf testb cmpsb in cmp jb cmp scas pop inc add aad pop out mov xor jae mov mov (bad) push in xchg pop js jns and imul ret or ja sbb cltd insb inc cmp push mov xchg sub jno xchg mov add stos sub loop add xor gs rorl lret shll addl iret sbb adc ror push popf lahf jmp pop sbb stc xchg xchg jno stos sub daa and inc ja pushf lock xor lret push (bad) adc add mov popa adc pop je push les in inc push inc imul test cld fnsave pop jle xchg mov hlt (bad) mov dec inc inc xor mov scas add jmp or jne ja inc insl push nop cli sti mull cld pop mov and ret xor dec adc arpl into pop pop add sbb add add pop mov push cmp in leave jbe add or and dec mov and adc push pop gs ljmp and scas icebp mov sub stos cmp push inc enter insl add pop addl xchg jb push xor pop lods pop testl (bad) cmovo xchg mov out sub cltd in add push push sbb subl jns in inc or notl sbb push mov cmpl mov and add push testb int jb cmc cli sub cmp and test xchg inc jnp mov dec roll int push cs xor mov adc and inc popa jb mov stos jge fldenv xor jp pusha cmp loop sbb mov cmp jle add stc mov and mov jne inc adc (bad) repz xchg xor pusha inc xchg aad (bad) (bad) pop cli clc lret sub dec jmp mov in orb ror enter push dec adc pusha movsl aad jecxz loope int (bad) lcall je add push sub testb xchg mov xchg dec add jp aam ret adc pusha icebp mov pop ret or in dec out insl fiadd xor jno pop lahf repnz sub insl js inc cmpsl cmpsb jo (bad) add mov and pop mov mov dec mov cmp sahf xor lret adc cs push and sbb xor imul out push push mov aam inc pop subl jns imul cmp inc add cmp jne sub movb mov out sbb dec add or pop mov add xchg push dec push out cmc loop rorb cmp adc pusha (bad) jne mov xor jmp mov gs out fiadd push jle imul repz sbb pop aad mov leave clc inc adc pop adc xchg leave lahf inc iret xchg bound imul outsl adc or sbb add add insl pushf andb sub sub add fsubrs (bad) mov insl adcl repz jne add mov fcompl adc pop push add inc cmp add rorl stc mov sub lret cmc add dec mov or xchg or push fild int sbb cmpsb icebp add test js push mov xchg add xor iret in or add cmp add movsl aas pop addb cmp and cltd (bad) mov out xchg int3 add imul push cli add xchg adc scas pop jnp pop add jmp dec mov in pop cld and dec cmpsb add dec ret daa movsl add in enter mov mov cmp add sub push movb mov and dec lret shll jo cmpsb dec pop add jo data16 pusha fst mov jg dec jp pop xchg std inc push xor add cmp push int inc sbbl ret es js lret jae and pusha sbb imul mov (bad) jo (bad) leave or mov orl pusha scas jne add frstor orl rolb mov dec roll adc or adc pop inc and and xchg subl pusha ljmp adc cmp sub add jecxz (bad) fisttpl or (bad) jo add adc mov lret bound mov push xor add mov (bad) stc rcr aad inc sub in xchg add xchg pop inc add ficoml dec or in mov xlat pop inc mov sbb ret inc in iret mov (bad) cwtl cs rol scas (bad) js cmovg push xlat fisttpl sub jle mov test outsb mov movsb iret repz inc decl lea push cmp js xor jo sub jae cs add jg outsb repnz add leave jb lock adc in xchg mov (bad) xorps subl xchg mov aad add pop test lahf out inc bound dec adc adc push cmpb inc shrb jae loop add xchg add fnstcw cmpsb lods adc pop jp inc add adc sub jmp aaa sub int3 push xor cmp pop add scas (bad) (bad) stos add cmp dec mov add ss sbb out add inc ffree in js bound pop sbb cmpsb rcl rol and pop add outsb (bad) mov xor mov push add shrb xchg pop cmpsl jnp push inc aam out pop push jmp bound push or test cmp in cli mov movsl pusha lret add pop mov sbbb push in adcb mov sbb or jnp add ja mov cmpsb pusha add rolw xchg in sub mov bound add pop sub sub dec cs add add jno or call add xor add lcall ja mov mov fwait inc sub adc jne push loop orb imul fnstenv pop nop cltd (bad) pop xorb adc jecxz data16 add pshufw sti or xor ret jns mov orl xchg and in jge add mov cmp dec dec std int in push xor mov or or dec movsl dec mov add mov add and mov add cli rcll dec and add dec push stos xchg cmp add mov dec orl neg insb test xchg add jo sbb es jg pop sti nop subl cmp cwtl dec scas inc add lds xor lahf stos es inc andl daa fmul jmp xchg add adc movsl mulps sbb inc mov add jge lea push mov (bad) add jb or nop js xor adc pop xchg inc and or icebp (bad) nop int3 fsubrl inc movb mov cmp pop xchg fsubr lcall bt daa in incb lods dec repnz icebp add jae add lds (bad) test xchg nopl stc mov push sub aam lret inc jle mov rcrl mov cli pop add push adc sbb into jo xchg faddl and jne add dec cmpsb shrl hlt dec pop inc inc pop mov cmp add movsb fdivs leave add sbb pop bnd add push cmc fldl pop ds jbe fs mov imul je mov enter jg add iret or sub pushf into jns cli inc add in mov dec pop sbb ret inc sub pop add aam insl outsb popf adc shlb jp pop cmp mov adc shr add in insl push aam or popf and ret xchg cmpl test clc push das pop lods sub fs lret test int pushf mov and notl add inc lods push inc pop loop sbb mov (bad) pop inc stc scas fmull sbb jle jne adc add jne fidivrl mov call jmp loop ficoml test rolb sahf ret sbb mov pop sarb inc cmc mov xor sub xor cmp sarl add cmc fdiv jo sbb cmp int3 ljmp lcall arpl or ss and mov sub push jp add insl icebp mov cmp xchg add mov inc std add mov pop sub (bad) iret test imul scas test jae jnp frstor mov fbld pop add xor add xor leave xor and push and cmp lods (bad) pop popl add imul out and add add (bad) aam add and subb add sub sub xchg das add dec or imul pop int push sbb add rclb out ss repnz pop lds shrb lret cmc lods or nop push ret insl stos add cmpl in ret push cmp inc mov xchg fcomps int mov insl cmp jp add imulb ret inc sbb (bad) jae mov push lret xor and loope sbb xchg lock and add push sub mov int3 roll mov fstpt add jg cld xchg rclw push push sbb int3 daa rcrb movsl out xchg mov test jbe mov inc mov adc adc daa xor std outsl adc adc mov pop sbb adc cwtl add pushf xchg inc sub lret add mulb arpl adc or lock jge jmp xchg xchg and aam xchg mov adc or xor cmpl nop loope mov and scas push dec jae ret iret add jle sub cld adcb loopne cli xlat outsb xchg pop add mov mov nop lock cmp fiadd insl test add inc (bad) stos mov xchg dec dec fcoms push (bad) xchg dec cmp lods testb pop xchg rcrb into add lods aam add sub gs movsb repnz mov xor mov adc sarb test outsl push mov movd sbb jge scas stos movsl icebp mov pusha inc sbb inc outsb pop fldenv fwait pop xor std mov dec add mov fbstp xchg add pop repz jge and sub (bad) ret mov subl sbb jle mov clc fwait and insl into add lahf enter jle (bad) rcll stos (bad) dec cmpsl dec sub sbb pop add mov movb sbb clc push movsb aas add (bad) divl pop dec inc hlt sbb xchg out jo jb in rolb loopne outsb adc pop cld cmp ret icebp push xchg fsubrl dec add xchg mov iret das jnp pop mov sbb sbb cmpsb dec cmpl cs ret add pop lahf cmc aas inc roll jecxz pop stos jnp movl je dec mov push pop arpl push mov int mov push dec aaa inc inc mov or jbe inc out ret mov or lahf nop xor jae add and stc add mov xchg divl add and lods rolb dec orl icebp or (bad) pop jne pop add lds out xchg push nop mov lret sbbb repnz push inc lock sub addl add inc add jb (bad) fiadd xor (bad) xchg mov inc out inc aam or sub aaa add test stos or push add shl adc jb jno xlat int add test daa adc push loope push cmpb mov gs jo xchg cmpb stos jl mov or outsl inc pusha shr and bound shlb pop and test sbb adc jmp push orb arpl add out xor add pop mov out (bad) push ret cmpl cmpsb in str mov xchg xchg add pusha mov mov fistpll loope fs testl push shrb pop xchg xlat lods inc adc mov push aad stos lock std add xchg out cmp or lods and addl cmpsl lock pop add dec dec mov add (bad) fdivl fwait daa ds mov orb push sti pop jne lret jnp into aam dec xor test cs fwait dec mov std (bad) mov repz sbb or mov sbb sbb gs sarb cs sub insb decl hlt inc cmp stos ret add rclb add sbb xchg arpl xorl out sbbl and add and jns imul js cmp fwait add rcr test jg call bound sbb sub loop icebp fmuls imul sbb fidivr xor das add sub xor enter repz mov dec fistpl mov xor pusha add iret mov call dec ficompl jae pop push add sbb imul push cmp stos or fidivl movl add add sbb lahf int3 popl in jp roll pop xor push fs fcomi add add push testb fnop arpl cmc test adc jge ret test std sub jle mov mov imul imul movsl sub xchg cwtl add jbe popf and xchg cmp adc add cmpb xor push ljmp cmpl movsb loop xlat jb mov lods add into add pop add add ret cmp inc sub pop xor mov test (bad) (bad) push fdivrl add scas les adc imul push movsl test andb ret mov cmpb xor and dec push (bad) popa scas lods jo or inc add test push mov cli repz mov lods and add cmp jl imul pop movsl sbb cmp out add cld sbb or int3 or and je (bad) sbb xor addl (bad) lret into hlt btr test dec insb add scas dec jnp outsb or xor andl lods dec inc sbb out mov cmp outsb test dec es sbb movsb popf subl mov mov fucom test sub jl xorl cmpsb or in pop push cli outsb pushf or pop xor lods mov mov into cltd dec ret sub mov add aam add mov inc add movsb sti adc lods cld imul or adcl ret jnp adc mov inc fildll cmp sub sti xor jb mov ljmp cmpsl jecxz add sbb clc xor js fadds std add push cmp mov jbe dec mov lock insl dec mov andl cmp (bad) hlt inc aam clc jge pushf adc push dec push outsl (bad) mov pop and ss aas loope imul mov shlb outsl adc push jp outsb add insb mov ficom mov adc cmp xchg call mov add add enter gs dec sub cmc add mov mov sub addl and in or mov add rcpps dec sub lret sbb pushf lods sbb jle xchg roll aaa add cmp pop adc es jge push jno scas xchg mov inc push xchg pushf and inc add push out incl (bad) inc jle sbb jp scas add stc lea sarb out loopne add sarl lods adc lcall xor mov push or xor daa stos jbe xchg movsb push jo pop fucomp (bad) add sbb outsl ja shrl add out fildl pop lcall fmul add add mov and sbb add cwtl in cmp andl insb nop adc xchg mov jle subb inc cwtl mov pop rolb incb fldt ss loopnew lahf ret js cmp jae mov aam mov push mov adc xor scas rcll mov fnsave and aad dec inc enter jecxz (bad) adc rclb sbb (bad) fucomi xchg mov pop lahf push add ja (bad) fs mov mov sub dec add mov test or inc jl add and dec (bad) or out push fs and dec mov pop int3 gs push adc ficomp cmp pop aam adc mov flds and les jp jl (bad) fwait xor test jmp jo mov (bad) add sbb jo mov xor in leave xchg mov rclb add lahf cmp add (bad) sbb or add imulb ljmp xchg inc sbb mov cmp xchg jo xor and and mov sbb pop xchg cwtl (bad) push jle (bad) or hlt or inc inc xchg jg sahf and mov pop mov jmp lret jle addb cmp add (bad) or and je stos dec jne aaa adc testl mov mov std xor mov mov rolb mov mov xchg cmpl das inc pop popf inc sbb add xor cltd mov and lea mov pop fdivrl sti inc in sarl cmp pop add sub and cmpsl fcmovnbe pusha or pop hlt jecxz fsubs mov or jne xor js movsl mov sahf fdivl sbb incb ja pop dec das fildl imul push inc repnz push add pop pop mov xor sub dec cmpsl rolb jno cmp mov jp pop outsb jecxz movsb adc xor dec add sbb ret les sahf dec cmp add add cli outsb flds push ljmp mov and ret add xchg (bad) in movsb add and lahf and inc in sti inc into insb outsb sahf add jne sub xchg mov dec (bad) lret negb mov js xor pop adc add xchg aas negl (bad) inc add sub scas jns add cmp fild inc dec (bad) aas xchg xchg dec movsb xorb lcall cwtl lahf inc movsl pop ret add icebp int3 push sbb outsl test add mov inc mov (bad) add sub push loop sahf lods sub roll add pusha pop lods and inc jl add loopne mov add dec repz es notl xor push and out adc scas daa sub add lea test pusha lock mov jae adc mov xor dec nop jo cmp add mov and imul in stc or add mov (bad) inc int3 mov std outsb popa or mov fisubl jmp or and loope out pop (bad) add mov repnz std imul clc fwait jecxz movsb xchg mov adc adcl jecxz pop adc add jmp call add sbb xchg ret adc fistl inc (bad) push cltd add cmp fcomps add movsl fucom sbb pop popa lcall sub mov or pop dec jp add jns mov sahf mov xchg fadds pop je aad cmc cmp sub daa loopne roll or test push ret cmpsl or ret das jp mov push or fwait xchg inc xchg aad std mov push pop add sahf loopne (bad) out ljmp jl sbb inc stc dec cmc subb fs and jo pop push push test mov jle aad add sbb out andnps orl push push push add sbb shlb add imul aad inc mov add xlat add push lcall add sub sbbl sbb loopne inc jne lahf add push mov rolb stos sti adc pop xchg lret xor int3 sub stc add adc pop fiadd add in pop mov mov out or insb mov pushl add and add pop lcall mov aas popa cmpsl xchg insb inc xlat sti jns xchg jnp inc orl dec xorb xchg xorl imul and mov movsb mov aam xor cs add cmp mov pop xor das lea jne inc add push jae imul rorb inc mov (bad) xor popf pop incl (bad) push ss jecxz repnz movsb fwait ret add in fidivrl mov xchg arpl inc push loope data16 inc inc (bad) adc add int addr16 mov pop pop seto roll mov (bad) mov jge jmp xchg cmp (bad) dec sub dec lock insb les add mov dec andb pop rcr data16 mov sahf jmp mov js sbb arpl (bad) ljmp (bad) cmc inc fdiv jb sbb adc and jns or inc add mov adc adcl pop aad movsb lcall (bad) sbb dec adc pusha inc fiadd lods call sbbl pop scas mov add cmp dec cmpsb rcr mov enter jno into push lahf mov sbb mov lahf add pop les jo jge add jno push adc xor push pop pop dec and mul cmc add aaa jae xor cmpl mov (bad) fdivrl add mov repnz and pop fmul add out mull mov cmp and mov stos pusha add mov add mov inc add sbb xchg jmp outsl loopne mov push or loope add pop out pop leave inc (bad) in mov pop sbb jle popa adc mov mov cmpl or out jno jo add (bad) add gs ds and adc push xchg bound (bad) mov (bad) mov insb out pop sub cmpsl push mov add add push popf xlat cmp dec pop pushf jo push jmp ret push xor lcall cli add movb mov inc pop pop daa jmp mov dec mov or insl add popa jbe cmp cmpsl into add stos iret push dec sbb mov inc push jmp xchg add mov mov les stc xchg pusha lods lock or and lret cmp xchg add jne scas inc in pop or xlat add or add (bad) dec mov (bad) and movsb xchg (bad) xchg les add dec pusha flds add and push leave jle pop cli arpl add aas mov into sub or jae xor stos jp add ljmp add mov add xchg adc push sub add mov cs push andb scas ret mov push inc subb data16 cmp add out or fstpl add out inc ss cmp inc imul add loopne dec aam or sub cmc nop dec add sahf xor add loopne pop xor and add fimull cli inc incb mov adc mov adcl add mov sbb lods sub jo inc jns bound mov add lcall add hlt adc add stos jb out xchg cmovp xchg inc jbe add xor jle scas push imul add cmp ret mov pusha je out add and mov test inc sub call push jo xor or (bad) push cmp and inc (bad) mov cs add mov mov dec mov cmpsb into js popf cmp call pop in subl test das rolb cld jbe xor or popf cltd testl fisubr nop sahf jnp or cmp stos daa adc dec es mov and cmp shr and add popa xor add dec jns add cmp mov or push add cmp add lds dec popf mov orb nop or pop (bad) push mov sbb add jnp and insb sub xchg jp int out test mov in int3 jmp inc pop ds push jbe jnp mov push fisttp sbb add daa lcall sbb xchg or (bad) sahf rolb jbe (bad) pop (bad) mov add stc lock lea xor sub inc cmp cmp bnd subps xchg push xchg out or sub int3 sbb jo add xor arpl dec cmp xchg mov hlt sub add fldt ret jne pop cltd pop dec mov mov xchg mov xchg mov ret sub inc mov add inc pop adc or sbb leave jmp mov dec add mov (bad) cmp pop mov imul add ss test pop sbb mov dec jl int3 subb movsl pop stc xor jp mov jae add lret icebp dec je mov jb shrl das movsb jns mov dec fbstp add mov xor jae add adc ret and sti notb divl fwait imul das ds and push imul jecxz iret aad xorl jo into cmp les test adc and xchg add pop mov adc lea dec add lods jns rorb (bad) jns add in dec xor test add cmp or loop add stos and jmp notb loop sti mov jne jp add sbb cmp push mov sarl add and ret mov aaa inc (bad) xor repz jnp add jge xchg push test imul adc add jb je jnp es add dec mov xor add les add lods shll dec cmpsl sub add ljmp add add sub fbstp das mov pop jle pop sbb inc out push stc lcall call add jae sahf testl cmpsl movsb aaa xor jge (bad) sbb cmpb sub mov adc loop cltd jge js std xchg cmpl arpl insl adcl inc scas and add out (bad) in test (bad) adc ret testl sti orl jl leave lea ficom lret push adc add lock pusha ljmp (bad) jae xchg pusha xor add mov sbb mov je loope pop mov xchg and adc fidiv cmp mov cmp add aas cmovs sbb or sub lods out test loope pushf cmp out pop test cmpsb fldl adc pop inc add mov fdivrl jp movsb add pop xchg add mov ret movsl push insl sbb loop mov ljmp fidivrl cmpsb je cld push xor add shll test mov lret icebp xchg mov xchg mov test cmpsb in pop ret js cmp push xor cmpsl xchg mov lods lahf pop fwait or add add out sub and addl mov jo sub xchg aam jp add nop (bad) xchg into lret mov and mov std sbb cmpl jp sahf mov adc jo cmp ja sbb add pop (bad) push and xchg add mov inc jle jmp bound mov mov sub push repz add lock add push orl (bad) and mov dec sbbl (bad) dec xor cmp mov ja fwait add inc mov adc add aaa mov add movsl and dec push add roll mov dec jmp mov imul or add dec fldenv jbe mov sbb mov fsub xor or out mov mov pusha pop xchg sbbl sbb pop cmp mov push xor ret xchg add mov movsl sub in in add out mov add add ljmp mov mov jg fsts mov sub sbb jle jge jb add push scas loopne jecxz pop arpl xor stc sahf rorl pop dec lea sbb mov hlt pop mov mov mov fwait cmpl adc mov add test lcall sbb xchg jge cli dec loop lock inc xor inc sub or add into dec call addl jbe mov push roll lret mov mov add or xor add int3 js and aas cli add lret cmp and aad jle fwait mov or jecxz add in lods clc adc mov and jmp or mov xchg or and lret mov add ljmp mov sbb add mov aaa cmp (bad) in sub jge add xchg add sarl imul sub fld jae les dec and add pop popa fdivrl push cmc in add scas stos gs loop sub add push shrb out adc adc xchg push pop xchg cmc dec adc sbb mov inc xchg jmp sbb cli into jb push xor push mov je cmpsl fiadd add push add dec xchg imul pop inc out add dec mov dec pop mov push sub add lods orl test das push iret add les or inc fildl add push outsl pushf xchg adc ja fwait sbb pop dec inc es add imul enter aaa pop xor xchg into pusha push inc andl sti pop ret add cli xchg dec or add sub rcr mov lods dec roll lods cmp mov dec ja mov scas add (bad) jo xchg add fistl push lcall cs shll sub mov cli jae fldl adc lods test cmp jnp insb subl jl jge sbbl jg inc and push aas (bad) ljmp shll hlt int test adc xchg add mov out daa or scas loop pop push xchg fcomp loope cvtpi2ps daa call pop lahf cmp jb das add test xchg lea adcl inc scas movsb loopne xchg leave push xchg ret cld andl lcall addb ret int3 jle pusha adc add inc cmp add out fs fcoml addr16 mov add inc sub xchg xor test mov popl lcall sbb mov fsubp fistl inc sbb rcll popf fadds into test lock mov popa pushf pop (bad) (bad) bound daa pusha xchg dec cmpsb xor out sarb test mov je sti (bad) pop adc add dec xchg push xchg sub hlt insb (bad) sbb mov sub jge stc divl push movsl inc cmp mov pop mov in pop xchg test test outsb je dec into pop repz ljmp adc (bad) js popa mov push and std cltd call lret add leave mov jecxz mov hlt data16 pusha add pop or (bad) cmp sub jl aaa cwtl (bad) icebp adc add mov pminsw scas mov ja cmp into push jmp push add pop sbb xchg add pop mov mov sub pop jns xchg pop hlt or test (bad) icebp sbbl in inc xchg (bad) add adc jae cltd sbbb es (bad) sub fcomps add sarb lret jl add lods test in adc fstpl rolb (bad) mov push das add scas add imulb push mov push cli add jl inc sbb cmp jmp movsl add jne addl pop mov int3 jne push mov std jo add jae dec mov test jmp sbb mov lret loope sub cmpsb stos clc pop adc imul ljmp loop push add cmp and mov sbbl or movsb and rolb push gs repnz int3 push jmp add add fiaddl scas sbb pop cmp or xchg or in xor mov hlt push shrl int3 jmp jne mov or push sub notl clc sbb jnp pop inc jo out out adcb fistpll inc adcl cmp dec mov jecxz adc inc outsl pop mov push lods ret xchg sub out inc cld arpl jnp in add xchg add repz outsl add in insl jb push inc pop and mov sbb pop (bad) or push jns inc xchg add lahf and leave mov mov (bad) sbb mov ret jae sbb add insb dec mov add mov jmp sbb or mov out cmp je ljmp rcrl movsl mov and add ret xchg aaa stos orl fcomps push incl mov stc sbb flds mov je xchg xchg aam adc adc fildl loope inc outsb rcrb mov rcrl add and fisub xor add push aad mov sub add push xor lret es mov jge add xlat fldenv inc (bad) sbb push cmp stos lret iret pop push dec jg inc xor xor push xchg nop repz and jle and adc mov pushf in add xor jp pop xlat xchg add fcmovnu mov mov or xchg das add jo cmp cmp inc jle adc add lods push pop rcrl fimul mov loope mov pop ret (bad) mov add jb inc jl pop ds add or cmp (bad) push sarb fs ss (bad) inc jbe add mov stos test add jb cmpl cld imul ds or cmp pop and popa mov xor jne push sbb loope cli dec loopne add lods xchg lods incl jnp mov xor xor push jle mov (bad) cwtl rcr cmp clc (bad) dec dec shll icebp or mov or push sbb push sub loopne push inc cmpl dec cmpsl xchg loop sub in lcall stc test daa adc lret int3 xor pusha js cmpb jl ret xor push add sti push out lods pop mov mov popl adc pop scas add es mov pop mov ja movsb push insb test mov fidivl or or sub fisubl xchg xor add mov mov aad xchg add and leave roll pop loope push or add jle jmp add mov mov pop add iret fcoms push scas xor outsb lods dec pop push int3 aaa add mov out jg xchg cltd push rcr xchg arpl cld add mov out push fs add repnz outsl cmp xchg push sbb add xchg (bad) cmp sub push sub rorb sbb in andb jnp nop adc pushf mov ljmp repnz arpl add jmp or ret bnd xchg rcr mov pop add sti xor rclb je add lret sbb add or mov mov jle jmp push cmp lea pop stos inc xchg hlt pop xor iret mov push popa add jo cld movsl sub imul sbb push lods test add out das icebp insb lea mov pop stos mov and pusha dec mov jle popf add xor xchg out adc gs cmp movsl lea pop test ja scas je call xor add mov push add cmpsb sub leave ret inc sbb in lret ret add mov aam movsb lahf daa call add or (bad) xchg lods popa adc fidivr test out inc sbb pop subb jp into inc outsl sbb dec ljmp sbb mov ja mov sbb mov push in rcrb dec and mov mov add into clc data16 sub lret cmp repz sbb cwtl adc jge cli leave push push lea xor dec inc sub pcmpgtb push xchg mov xlat cmp sub push inc add call aaa sub scas punpckhwd fcomip sahf sub test into in and add loopne pop jo scas xchg cmp das mov xor mov outsb adc icebp jo rolb inc xchg add mov sbb enter jo add or sbb (bad) dec sahf mov xor pop add add mov xorl in dec repnz push add xor test and enter add test shlb xchg lret xor loope sub jnp inc roll adc or les js cwtl add add fwait add in and xchg cmp lcall inc lret inc lds jne lods push jo in add in mov (bad) mov pop outsb add insb push push rcll pop aaa cmp jmp adc inc push ja xchg arpl idivb mov lahf dec sbb mov sbb mov adcl inc push mov lea outsb add jge jo push push insl and push clc xchg xor inc movsl add sub ljmp pusha mov inc aad push sbb jg mov or add mov in add aam outsl add fnstenv xor mov inc pop test jns cmpl mov inc mov lea inc arpl andl xor popa sbb cli clc and add push cmp subl xor dec fs ret lods out imul sub roll add adc int sbb push inc adc sbb cmp jb test xchg jbe pop xor stos or fs pop rcrl enter inc inc rorb cwtl xor cmp xor sbb jb fs popa adc or arpl lret jo mov stos scas xchg pop sbb fcoms in loope mov jle imul and inc les stos in dec cmp pop inc jg gs mov mov sbb lods push or subl mov adc cld fwait jmp add add adcl call andb into enter cwtl xchg dec or hlt ret int jl cmp sub add jae pop cmp cli and pop (bad) push daa and add push pop pop aam call rcll push mov dec mov insb xchg fs std cmpsl cmp cmpsb mov jmp add jmp add in repz and or imulb pop xor and push ds add sub lcall push sbbl sti add xor xchg add mov test test add push lds loopne pop add (bad) aad clc xor imul sbb push inc inc jns xchg push push pop add nop fstpt ja (bad) pop xchg test lods push jb dec dec add lea aas add in cld es add cmp jb add mov mov mov lds mov dec lcall jmp mov jne mov out outsb pop js xchg push mov xor sub mov jge add (bad) sub ja add in jp pcmpgtw (bad) push push add pop or cmp aas pop rolb xchg out adc pop test push mov push add (bad) (bad) out push clc test (bad) lds ss jo add or lea icebp in add and jmp repnz popa pop mov push xor xchg sbb add push add mov call mov ret cmp stos jle mov add xor cmp jbe outsb sbb mov cs add push std imul dec loope ret add stos ja add (bad) fadds rcr ljmp add add pop mov sub mov and add sub inc jge jb mov mov int3 rolb mov and xor test call mov insb xchg add mov inc add daa sub add add aas mov rcrb adc jo push sbbl int xchg insb push mov cmp add into test dec or adc ret adc or rcrb adc sbb mov push flds (bad) jl test shrl cld push inc adcl icebp mov loope and mov add in push stos mov out mov jb dec fimul repz mov fisttp inc movsb icebp outsb mov gs rcll ret xchg and dec and xor add cmp in loopne mov sahf xor cltd mov lcall jns sbbl sbb mov sbb divl insb cmp arpl rorb jo scas xor mov nop in movsl loop cmp jp add lret leave mov (bad) dec loopne xor cmpl cmpsb cmpsl ret sub rcrb icebp and popf pop mov fsubrl loop movsb xchg add jge in add idiv sarb dec lcall in xchg sahf popf andl fucomp cmp add addr16 lds movb fs lret add (bad) orl lret push movups mov push and add cmpb inc add dec stos pop fsubs jne int (bad) lock fisub test xchg or leave rclb jnp scas sahf push push mov sbb pusha pusha lret sarb dec mov dec push fwait sbb or add std cs cmc cli in lds xchg ljmp jns cmp add cmp add imul std hlt stos sub add (bad) (bad) in sahf test add pop xor inc pushf outsl sbbl rcrb add fwait sti mov jle (bad) push (bad) jo nop or add mov cmp lock mov sub in loopne pushf fs cmc push in xchg add repz popf inc lea pop testb xchg movsl adcb in jns jg insb xchg call lahf dec cmp sub rolb arpl inc cmp pop add cli loope into repz sub je and push jge add (bad) loopne inc push xor sbb stc fwait push and orb push cmp cltd je into mov push ja popa pop (bad) push xor shrb inc shl add (bad) je add xchg incb add dec lea mov sub dec add sub add adc aam mov in sbb imul sbb and insb pusha pusha inc nop rcll out add xchg lock xchg std sub pop cltd xor mov xchg sbb add stos cmpsl aaa cmpb jns sbbb inc or lahf pusha sub push mov mov arpl add aaa inc mov add pop jbe add adc (bad) push notl cltd popf iret sbbl lahf pop or xchg das mov mov and fs (bad) cmp mov pop dec subb mov pusha jbe jge jnp fisub sahf sub orb xor (bad) in and dec scas add push into cld pushf xlat or pop mov test jne sti inc sbb andnps test push mov mov add and test out pop mov dec dec les pop shl cmc imul sbb jno bnd add push scas (bad) xchg pop dec jnp mov add popf repz sti andb xchg insb push jle add testb addl mull jo push stos add insb cmp cld mov cmp test pop adcb out out or shrb add cwtl or sub inc adc sub inc imul xor ljmp add rclb stc lret push fnstcw cmpsb ljmp add or cld test rcrb icebp push (bad) stos pusha mov stc jns or mov mov inc add jmp cmpsl add js test (bad) mov pop add loope sarb xchg mov mov mov xor sbb add dec jne add movsl mov push orb cmpsl imul xor add ds add mov fs stc add test or insw in add pop add subl and aam push add xchg jnp test add dec shr pop popl jl push mov stc ret mov sub pop push sub cltd (bad) mov inc (bad) pop inc inc pop fwait inc add sbb xchg inc sbb add jl mov fmuls aas sbb xchg (bad) ds test xor icebp in add inc mov imul or add dec call std add inc cmp jae rolb xor jne mov mov and cmpl nop mov or sahf mov ja adc in jmp pusha jbe icebp xlat xchg pop les add ja add push or std clc push add loop js in mov lahf lock adc lods movsl jne and das mov adc dec jbe xor lahf jge jb test shrl adc jl stc pop adc adc (bad) sbb sub mov lret pop cmpl inc sub fcmovb sbb add add rcrb int js add mov ljmp in loop pop scas ja add lret mov subl adc mov inc sbb push inc or xchg inc add mov mov add ds mov repnz add jmp jg scas and pop inc call jp dec pop pop or or aas pushf inc daa inc push push and stos ss pop adc mov imul jp out or add movsl and repnz mov mov xchg mov push (bad) push (bad) jnp ret inc sbb xor mov push lds ljmp lock push aaa test mov push hlt sahf jno xchg mov add xchg dec push inc dec cmpsl sub mov ja dec jb push add jne jl and mov add cltd or outsb xchg xor inc mov adc test enter les movsl (bad) cmpsl std jne dec gs bound loopne out pop pop inc fldl fadd in dec mov add jecxz add sub lahf add repnz fidiv jne pop inc in xchg add addr16 test mov add adc xor (bad) mov dec add push xchg je addl pusha xor pop add and incl nop jp pushf call insl xorl add xor lods and (bad) int mov adcb scas push loopne jl aam sbb inc pop adc sub movsb insb ficompl sub add xor mov ja cmpsl ss mov xor sub push cmpsb into add or inc imull ds xor mov (bad) cmp ret add fistpl sbb movsl cld aam jns lods inc add or mov add loopne in insl add fldenv rcl fcmovnu mov push cwtl mov subl inc hlt inc push adc test js mov sbb fiadd pusha (bad) sbb sub cld add outsb pcmpeqw and mov pop push dec cmc lret add cmpb add mov (bad) out divl mov imul jl data16 out add sub fldl (bad) aad bound pop adc cli and aam pop xchg mov add or imul fwait adc jno mov clc pusha mov loop push push add int add arpl jg cld add test jecxz lods rorb ret xchg fimul popf pop in lret pusha lahf add dec push mov mov cmp aam pop push mov add inc repz test jbe xlat adc cmp (bad) mov cmp push mov dec stos mov add push in call dec addr16 add cmp das lret xchg sbb sbb push leave test add into add push imul and sarb pop fild mov jno and inc add pop xor call ss push (bad) out lcall jp pop stc addr16 mov outsl mov dec or lock ds cmp jns sub fs in push test pop xor int3 xchg add outsl shll xchg push cmp ret nop test sub stos je sbb inc out adc icebp inc fistpl (bad) dec mov mov enter test pusha rcrb sub or hlt clc movsl jle out dec ret xchg add lahf jns ja sub inc xor (bad) fnstenv cmc movsb inc iret mov lret add xchg iret out outsl push in xor inc xor add jge jg (bad) push mov jo out imul jmp jmp pop icebp cmp cmc lahf mov cmp (bad) jb inc pusha sub push pop movsb mov mov xorb enter add cmp push pop (bad) and dec add sbb mov call sbb mov mov faddl or or pop adc fdivrp add mov into int sub sbb push out aaa sub (bad) fisubr cmp aaa inc popf movsb hlt jae add push xor mov ret or inc add bound lds mov xchg fiaddl rcrl repz mov in inc imul mov add cmp add inc mov sbbl cmc rcrl add xchg loopne pop lea cmp adc pop xchg (bad) xor jno bound cmp in mov cmc lods mov movsl add and mov or cmp (bad) mov jmp sub pop and xchg inc call push mov iret inc cmpsl out xor jns mov mov leave dec lds cli add es mov in rolb imul xor ds inc pop aas pop adc call cmc js pop dec out (bad) icebp xor jl xchg addr16 cmp mov add (bad) push popa cmp fwait and test fcomp cld aaa dec lahf and out and popa jl cmp adc (bad) sub in xchg subl add imull push lret xchg lret and push push leave fnstenv aaa add incl lret add outsl xchg xor add loop push (bad) xor cld jb je add pop in bound add call pop push xchg sti lret cmp add adc or pop cltd and les stc pop ljmp add push jp lret pop jo cmp xor adcl jle loope inc xor xor dec (bad) dec pop lea ja push ret and add inc adc and xchg cmc in jg imul cli push jae int3 xor ljmp and pop add push xor (bad) call fisubrl in xchg loopne lret scas ljmp fcomps jne pop push nop jno pushf add sub mov pop mov inc hlt add shr popa jp inc push add lret lcall inc push add fstl sub add dec or push cs adc test in pusha xchg mov and or mov out or xor xchg (bad) jl cmp xor ss adc mov loope add dec jne mov cmp int3 xchg sbb cmp add sub mov in stos popa or dec push (bad) int3 push pop or in push jl stc push lock les add jg fadds xchg inc mov mov ss mov adcl movsl add fdivs cli icebp adc lea adc leave add das push add fisttp pop pop notl pusha and mov lcall lahf jnp repnz or pusha inc add adc orl push adc les ja inc push mov test sub pop mov mov bound push pop test ljmp imul (bad) pop mov pop dec pusha sbbl inc fwait orl add lods fdivs sbbl push sub rolb dec jmp add mov jns add and push mov jmp sbb test jns pop push mov mov pusha add lods xor mov loopne xchg addl push pusha jae aaa push add nop add outsb iret mov test add gs push lea add push shr cli fisubrl (bad) mov aas push pop jbe xor push pusha fnsave sbb into shrl add orb mov aad jge pop test add inc push and xchg hlt pushf lret jmp movsl adc rorb (bad) jb xor jns mov add fcoms mov stos push add (bad) (bad) mov sub or xchg or xchg idivl add inc add mov jno and rcrl add add sub mov inc cmp adc add dec xor nop dec sub add (bad) hlt pshufw add push lahf pop lret add (bad) fdivp push std add into rorb cmpsb cwtl xchg loope push mov js mov or mov add jg xchg testb push add sbb aas sbb mov add mov popa data16 add add popf add push out mov decl push or or cld add orl add pop int3 mov addr16 add inc xor mov add ret ret orl jno adc push lds jg pusha stos and sub push pop or xchg xor add cld lret xchg mov nop add push pop addl sbb and sub add mov das (bad) sbb sbbl sti jge scas negb rolb (bad) xor sbb je inc cmp adc xor bound (bad) mov inc repz jo pop add mov jbe sbb pop add add jg fcoms bound xor ret jo add (bad) mov mov mov (bad) loop rolb arpl ret popa inc mov sub mov fdivl sbb inc pop sbbl pushf loopne or jmp add mov scas add imul outsl decl adc xor insb push cld mov mov xchg roll in inc sub cltd repz (bad) and mov testl pushf jmp mov pop icebp jno jb loop add xchg movl dec sub jo xorb xor icebp add aam inc xorb mov lock and jo add lock add lods in flds add jns (bad) push mov cmp mov adc and (bad) jnp xchg ja add fsqrt movsl test repnz mov jg add pop subl push push add icebp xchg mov (bad) xor aas adc stos (bad) in int3 sub fidivrl addr16 add sub sbb sub jp movl and mov mov add out fcmove (bad) push addl out mov out in std add inc sbb jmp add pop pop mov mov sbb test cmpsb pop jb hlt add js movsl orl cs cli push jo cmpsl pushf or jecxz insl iret cmp je (bad) jns add adc aad jmp sub imul call mov test jb inc pop mov add cmp scas push jl loopne mov clc stos fstps out pushf mov int3 mov mov sbbb fdivl arpl xor mov add mov aad dec loope out cmc cs testl test (bad) mov cmp and movl sbb jne cmp sahf mov add jp into iret mulb adc xor stc push fstpt and hlt and sbb and int lods or inc lea add lret data16 sub dec es mov fbld repnz jmp add notl add mov xor pop int cmp inc fist icebp add push cmp add repnz int stc in xorl dec inc loope jb add dec inc push xchg js add icebp xor test loopne je stos adc (bad) ds scas jbe inc pop movsl xor and inc insb das outsl dec sub add in add popf push xchg (bad) pop repnz pop mov mov mov out or cld cwtl subl xchg xchg inc jae mov out sbb (bad) shr add sub nop mov insl incl mov add pop mov es add mov mov mov std int shlb fwait les add push jno,pn add push out add add fadds bound std jno loope add aaa mov sub jo sub js ljmp pop cmp fsubr pop cmc scas cmp into test xchg decb xchg call xchg bound dec dec in pushf pop push jg add sub jns adc push and mov mov push push mov xchg jecxz mov lahf daa xor and xchg sbb mov and ja fwait movzwl jg popl inc fild insl add lahf push push and clc xorb cltd add add lds js je pop pop pusha mov adc imull jbe add and add inc test add ffree pop imul adc test mov mov iret dec pop ret jl push (bad) sbb pusha cmpl in sbb dec pop test sbb andl sti dec adc inc push mov add ret cmp add mov add xlat (bad) es (bad) mov mov ret push mov insb xchg push mov adc (bad) stc mov add popf jmp imul jecxz loope lcall cmp xor push inc addr16 fsub jo mov fiaddl int3 xchg lahf loope cmp mov dec add (bad) scas add push pushl hlt roll xor jle insb repnz sti or je les pushf in nop pop and decl in jb loope cmp js loopne add movsb sbb xor cmpl mov test add in orl imul xchg shlb jbe jmp in add pop adc cmpl push lret add mov mov (bad) dec push or fdivr mov pushf mov sub add jl cmp sub flds ja pop add inc and push inc mov add movsl (bad) and mov inc jmp cmpsl aas in add pop out (bad) xchg lds das push (bad) ret fstpt fnstcw sub push sbb inc js add mov not add or or add xchg mov add cmc sbb out popl dec inc addl push xchg pop in add push aaa add inc mov cmp (bad) and dec add das xchg fbld rolb jo call xchg cmpl inc jg xorl or imul cmp negl jle sbbb lock je hlt adcl aas dec or jns add pop sbb push mov inc sub jno jg pop add in aaa and cmpsb push orl sub pop paddw clc lods xlat jbe fwait sahf mov (bad) jg pop jnp (bad) dec xorb pop lahf or andl fisubrl loop and add cmp mov xchg or jl add mov jb jnp xlat pop cmp and and and aas sub fmull add test and xor (bad) xchg add cli js das jge rolb jae mov push pushf out inc jl xchg xor mov les and cmpsb sbb dec cmp jge pop dec cmp add mov mov sahf inc push add add mov add add roll xor jb add arpl addr16 pop cmp lock out dec add pop or in sbbl xchg sbb xor xor xchg and add cmpsl adc repnz xor mov out add jg xor das mov cmpsl mov imul lock xchg mov or cwtl (bad) pop add fsubrs cmpsb add aad test cld addr16 pusha es les mov popl cmp ret repz and sbb pop (bad) dec mov cmp sub sub call pop orl bound sbb add sub add mov pop inc sbbb sbb stos cltd pusha outsb push add lock jge mov push pop xor sbb iret lret ds and ret test xchg inc adc xor lahf xchg test mulb push add cmp add xor fdivrl mov popa cmpb mov sahf int3 inc jp lret dec push (bad) loopne mov and mov xor and push fldl pop add lock cmp xchg pop addb sbb aad cld orl inc movsb scas mov call fbstp (bad) xor dec sub bound ljmp dec imul add mov out ja mov mov add jno rcrl add enter inc in dec sbb ret daa out ljmp lods imulb jg adc mov imul stc add xchg and xchg imul add dec je and mov lds add fwait les add call or pop cmc int jne sbb cwtl or add nop mov add push mov xor xor cmp cmp jns add xor lret xchg mov pop adc pop leave add imul insl scas add mul ret (bad) dec mov loopne dec clc ja (bad) and stos or jne out add inc sub sub insl incb leave aad (bad) jp scas add mov mov jp add sub flds hlt xchg fldt jl push jg loopne fimull push inc std inc pushf mov nop adcl push jae push test dec dec push in sub adc sbb adc sub inc arpl xor in mov out jle dec add (bad) mov sub jnp mov fidivr add cmpl jno int dec and or inc adcl push (bad) gs cwtl pusha mov insb add pushf cmpsl mov cltd mov (bad) jmp movsl pusha push lret fisubrl xor lahf inc xchg sub xor in pop jb xchg cltd leave (bad) decl inc lods scas out pop dec push add inc hlt and push xchg insb es lods mov lret mov daa pop adcl mov iret and cmp fdivs cmp lock add xor add push pop stc (bad) (bad) mulb mov roll pushf inc test mov add fwait jecxz sbb ret cmp jnp cmp jo sbb and fcompl or inc sub and dec sub rol push mov les cmpsl add xchg sub cmp sti add insl add and subl rorb testb mov aam pop in xchg cmpsb mov add sarl jne sub add lcall ds mov (bad) cwtl mov add jg xor push and insl lds cmp test add shl mov dec lods cwtl add adc cmp add in adc jge inc lds hlt es xchg popf xor cltd add je mov pop mov inc mulb out cld imul daa das mov mov scas push adc fs outsl add sub mov sbb test jbe jno cs sbb push sar aam xchg and loope jl test popf adc and lock mov addr16 add push insb sbb adc mov int pop stos cmc dec test aas and mov dec add outsl cltd jno dec add lret leave cmp mov add popa (bad) mov and jnp outsl push repz push clc jbe add and mov mov add int aas add cmp popf add inc (bad) fstl fistl aad stos mov pop addr16 add jle sub xor int3 mov inc insb and sbb xor in ds cwtl mov add js inc mov jecxz or shll repz xchg gs xor std popf cmp jo int3 add push bnd sbb dec pop xchg or jae,pt mov mov fldcw scas push add fwait push xchg add icebp out cmp fdivl add pop addr16 jns lea pusha (bad) sbb lods js out sbb mov add mov inc cmp add cmp push repz pop rorl cmp xchg mov sub pusha bnd add jb jno mov sbb or add dec int3 pop inc sbb sbb cwtl add pop add and lcall sbb add pop insb add mov or add popf inc out arpl dec jne push cld addr16 add mov roll test (bad) fisttp xor loop (bad) lea mov cld (bad) mov das inc test cmp and sub ret inc fisubr sbb xor jg add xchg inc push (bad) loopne jp add loop and ror js jb jg add out fs cmp mov cltd and (bad) dec xlat jo add repz sub (bad) aam mov fwait add cmc nop lcall lock or lret xor mov fiaddl mov or rcpps mov imul jnp aam sbbl and xchg test add jo sbbl es sub repz pop and call iret push outsb dec into movsl jb add pop shl (bad) aaa shl mov mov cltd subl sahf xchg push adc mov mov dec (bad) popf mov sbb insb jns sarl (bad) jae sub mov jp (bad) loopne xchg add das mov mov lock mov lods or jns jl pop add or cld mov repnz flds mov xchg bound push add std subl in and out pusha mov xchg jp or xor cld lea (bad) cmp ja mulb js add mov push add test lret sub xchg mov out sub xor js mov fiaddl cmc mov loope add dec xchg iret xchg je outsl add sbb (bad) jo test sbbl and aas mov push aad jo add (bad) fistpl add push mov cmp popa xchg pop inc lret dec add daa in mov roll adc icebp scas dec sub in add stos jg xor cmp jp jnp cs fistpll and sub or add lret cltd addr16 and in scas push jmp push je cmp pop pop or inc pop cs insb icebp out xchg mov test mov cmpsl sbb xchg adc add std or addb hlt push (bad) cmp mov dec ret clc add mov adc fisttpll push pop ja push std pop popa jo and push jecxz (bad) xor loope or mov add cwtl cs imul out sti pop (bad) jns sub pop mov imul sbb icebp push fldenv imul lcall mov adc inc sti xor movsl xor add jge jl pushf jb adc sbb cmp add (bad) out arpl rclb into pop mov les pop jns dec loopne aad insb or push sub dec dec xor add pop mov stos sub fisubr add sub cwtl mov out cli loope dec lods orl add call movsl arpl mov je pop push dec pop add loopne fcoms addl lea mov push jle add mov pop mov fwait cmpsb adc orl lcall jo lret popa and nop jbe add icebp add in fldl mov lds add pushw ret sub outsb cmpsb and insb add add lods mov jae add stos add xchg cmp flds dec cmp add call nop adc sbb cmp outsl jl xor lret mov and inc mov outsl add mov xor inc cmp mov xchg psraw mov scas add jo jb inc push pop inc push fs int jno les jae (bad) in inc lret subb cld push andl je test aam mov push fadds lods and jp sti adcb fildll xchg xor lods add (bad) fild loop mov ret inc cmp (bad) ds pop das push lea xchg mov jle mov xor pinsrw aas fild mov lret sahf lea sti sbb dec add push jns divl test cli outsl or jge imul rcrl bound fsts dec cmp mov pop jl insb add movsb inc push cmp mov test pop xor mov scas sarl jb or pop sub scas add ret (bad) jns jle hlt popf fsubl xor add js scas inc jnp jae incb jo in call push jp (bad) add rcll xchg lret add mov adc out int3 add ret jae je add push insl subl dec iret outsl inc cwtl fnsave xchg call cmp mov imul daa add xor add (bad) jae inc add aam in jns addb cmp or add xor sahf mov ficomp mov add push and mov sub dec jge jmp orps jecxz sub xchg sub repz (bad) and addr16 lods test add inc add mov xchg adc mov bound add and addr16 inc add mov inc mov mov pop or add and add push mov clc inc add imul push inc add into int mov pop pop add mov insl stos (bad) pusha sub bound mov cld add xor mov cmp repz mov adc push mov add jmp mov cmp scas js test lods test gs xchg jmp cwtl rcrb andb push aad ret push pusha inc cs orl jl push jg add dec mov cmp mov jmp in sbb pop adc and nop mov mov fild add pushw hlt aad sub and nop sbb mov inc (bad) fiaddl push jno out mov (bad) cmovs test jo ljmp nop add cmpsl push mov push cmp jg leave add push fs jne cmp cmp or outsb mov dec sahf out movsb add dec dec dec add stc imul add lret stos sub sbb stos jb cltd rcr add jmp and xlat std jl xchg mov bound or add fadd mov cltd sub and dec popa sub adc xchg jl push pop xorl dec mov push cwtl jp mov subl sbb add (bad) push push push bound jp mov lock mov test dec add movsl ret xor and add ror fnstenv sbb fwait test and jnp adc push out js jbe rdtsc mov mov repz addl push push rcl and xchg mov dec in jnp loop lahf adc stos enter fs inc xor (bad) popf mov mov cmp dec xor (bad) ja add int popa mov insb rcrl cli pop xchg xchg gs movsb and push insl clc sbb mov xchg add cmpsl scas aaa xlat sahf mov (bad) pusha movsw cmp pusha add mov test adc fwait dec cli add pop mov and jp add xchg popa mov xchg add cmpsb add push or pop push mov mov lock out mov fwait add (bad) xchg push shrb (bad) out jge lods sbb popf jo ss mov cmp dec xchg lcall mov fsts aam (bad) popa or outsb loop sub jae in lock mov or mov in or inc rorb dec mov scas and jmp (bad) roll add push sbb mov dec lods or sub lods incb xor movsl sbb roll lock add pop out add mov movsb lret ret popf jno sbb mov add jb mov aam pop (bad) adc enter pop cmp fildll adc add push popf repnz sarb mov jae mov mov ljmp xchg pop xchg push cltd push out and sub cmp add andl jg (bad) pushf jne mov add arpl sub ret push stos sbb test add pop cmp add mov aam xchg xchg add jle mov add sbb hlt add in and sbb aad test pop incb add jbe pop xor addr16 inc and cwtl xor fistpll jbe pushf stc jl mov mov pop fdivs sub and pop mov sbbl movl adc adc arpl ror inc pop or enter sub add mov lods add mov add addl icebp cmp ret push push xchg mov jnp sub dec enter cmp add pop popa pop bound add push mov ficompl dec stos dec xor das enter in add mov clc pop nop ficompl pop pop cmp popa and add lds test test pop adc int add fnop sub dec aam (bad) repz jle jle and icebp add or adc bound test xor jecxz push adc add outsl add in mov inc shr add mov (bad) xchg fwait pop cmp push popf mov xchg xor jb add push jb mov jmp daa pop mov add jo ficompl iret jg test or add ljmp addr16 pop jb adc sub dec adc mov xchg push add imul cmpsl sbb sub push mov daa xor or lock iret xor add pop cmp mov outsb dec jno bound inc rorl mov (bad) mov icebp lods add inc out pop popa add and mov into out dec std xorb arpl xchg out pop ret test bnd or sub test les into ja fisttp rorl xor pusha adc roll stos and mov jmp fdivrl fcomps mov push cmp add mov sbb mov daa add loope es sub dec mov cmp jne or xchg aas iret imul jg je xchg add popf inc out lfs fistp inc test movsl test lods out add xchg jb leave push mov add sub mov inc mov mov loope inc mov push subb psubb fs andl je sub add icebp adc cmp pmulhw sub pusha into sbb xchg dec jmp or add andb jno repz ds mov push inc add jge nop mov sbb lock jl std cmp push xchg inc stc ja push mov or in add and test add jae ret xchg popa hlt inc rcr into add stos clc xchg jbe inc sub call adc fs add adc lds mov sub lcall push idivb mov pop nop mov add xor cmp pop pusha (bad) mov push jecxz add cwtl aaa add movsl cs jo loopne addr16 and push add mov sbb out jl lods pop jne in xchg (bad) mov insl sahf and xchg add jns fldl sub int hlt pcmpeqd add inc lds (bad) xchg shlb mov sbb and (bad) inc sbb inc xor pop insb mov inc jae add pop int mov fstpt mov push dec xor mov sbb test testl jbe mov jle js (bad) mov mov jecxz adc add aas mov xchg mov adc aad sub add insb mov (bad) (bad) dec inc mov shlb sbb push and loopne xchg cmp push xor repnz imul negl rclb stos jge add ja pop imul sbb add jl cmpsl test sub cmp push pop out pusha and pop cmp add mov dec dec sti sub je scas and insl popa add inc mov imul test add lahf gs or mov dec and ss mov sahf test add inc iret push inc sbb lret mov jge cmpsb pop stos mov and andl push inc add add aas dec xchg les mov repz pop dec add xor adc in fisubr std andb (bad) mov dec decl test add mov adc addr16 jns lret add popf test mov (bad) hlt xlat (bad) mov add fwait cli decb pop lret sub mov repnz int3 mov add mov add cmp wrmsr jle pusha imul sbb icebp (bad) jo mov call mov sbb mov std (bad) popa xor mov loop mov pusha test lods jo mov mov fwait pop adc pop or incb add outsb subb cmp sti pop out inc add sbb outsb xorl push mov int3 testb push data16 cmp pop mov xchg or jle out fwait vmread push ljmp inc add lret add cmp cmp ret and xchg inc push in xchg mov mov cs (bad) sti lret add daa in jnp je dec add lcall lahf out push sbb add clc movsb push test push shlb pop add or pop sub sbb mov ss cmp mov and adc je xchg add inc cli xor mov (bad) adc or aad daa add dec add rcrb push mov mull adc cmp orl je mov outsb (bad) data16 sbb hlt xchg add push pop jge and loopne outsl add mov jbe mov pop jne xor adc mov add jo in add arpl ljmp mov popf pusha ds mov mov xor mov pop push jb jns roll or arpl lcall pop push fistp adc in rcll jecxz cli imul jb add sbb dec mov aaa and int rolb jl int3 cli insb pop sbb (bad) xchg rcrl (bad) sbb xorl subb or das (bad) cmc mov scas gs inc sub imul pop mov push inc aad push adcl sub lock rcrl cmpsb mov lods xor in and rolb aas into sbb bound adc and fldl (bad) fbld aas js ss cmp add lock sub push or out dec xorb lret popa andl popf call inc ja lret xchg bound inc je add mov test dec add js das add mov loop inc add xchg add xor cmp adc jo add xor add dec mov (bad) cwtl mov xchg cmp pop loop lea inc push mov pop hlt add inc pop pop cmp cmpsl rcll cmp adc sti xlat add or jl cmpl sahf lret mov rolb inc xchg xor movsb ret add loopne add mov mov jne pushf (bad) lock cltd push sub cmp pop jne in jns and pop push fistl push jae (bad) mov pop fisubrl popa push arpl mov xor xor addl or or or mov je imul clc jg addl fsubrl scas add rcrb xchg xchg jl xchg xchg mov push das add pop test xchg xor add and orl pop add decl add mov mov adc nop bswap and cs jmp roll test stos mov lds cli or xchg enter add outsb and add out jb inc push mov xor hlt mov cmpsb xchg and pop push lret pop add movsl jbe in scas pushf scas (bad) pop xchg fdivrl mov test pusha loope xchg rolb fcmovnb ror fwait mov aas in xchg jo or fisttp je or mov sti cmp inc movsl pop sahf scas mov aaa jo xchg mov addl scas icebp push lahf jo pop pop add push bound add test cld arpl mov pop fcomp je loop out fnstcw sub rcr add cmp jno cltd stos aad pop aaa lret repz js or push into jae lds lods fcmovnbe inc mov shrb scas mov movsl mov jnp cmp arpl jp scas int3 mov push and cmp sbb mov inc (bad) (bad) mov add ds add push add xchg pop xchg fucomp adc add outsb xchg mov inc sti int3 ja sbb push mov scas cmpsb and test add add mov push sarl push add cmp int3 sub je push loope decb rcrl xor lcall movsb mov lret jle cmp (bad) pop inc rcr jmp adc lcall (bad) inc push pop scas sub xor add mov je,pn stc add lea dec or aaa inc icebp fisubr cli dec movsb pop mov gs push sbb jge cmpsb fwait push add mov sti inc movsl cmp push nop push fmuls add and lcall mov or inc aas dec add jl inc movb xchg in pop add out or jp xchg jg stos add loope scas dec add cmp iret pop lods movsl add mov in and ror sti jae (bad) hlt cmc pop xor mov inc dec add mov add jmp add hlt dec sbb jp mov int3 mov adc outsb dec mov ret fsubr mov xchg xchg xor andl xor pop cmp pushf das ss pop push dec lea stos fdivrs imul fs fcmovbe mov xorb jne (bad) outsb inc xchg and fidivl adcl data16 sub adc (bad) imul mov dec pusha jnp sub pop adc fildll mov push jecxz mull sub lahf loopne add out ds jo add jo mov das mov into fwait add sbb xorl push test mov dec add mov pop clc push subl fistpll ret or sbb mov call sbb pop dec ja lcall sbb sti add popa insb sbb dec mov into loop and fs inc xor addr16 xchg jbe,pt scas cld cwtl outsl scas addl es dec lods add inc lods xchg mov inc rcrl pop cmp pop and cmpsl adc add mov orl popf sub push xchg add sbb fdivl add xor inc aam out ret roll add rcl fwait jle stos test xchg cmp dec cltd std xor les xor sbb rcrb cmp (bad) xor scas dec lea lods repnz push or xchg add out daa adc add jo fldcw push ljmp inc jb bound lock inc movl lock subl fs incw dec add sbb xchg stos into pop add jecxz dec scas xchg sub fwait xor jns add int and cmp add cmp fisub test cmp xorb loopne ljmp pop xor test xchg int adc std lahf movsl add lock sub lds ror add sbb cmovo mov jl jno add push mov mov lret fsub loope pop add cmp in inc (bad) lods adc dec sbb pushl clc fcoml repz pusha dec adc inc jb add loop add pop test imul mov (bad) outsl cld jno cmp repnz jne pushf (bad) add and das in hlt orb cltd xchg out or int mov aad cmpsl popf inc and mov adc mov mov cmpsb test in inc dec jne (bad) out jns setge pop inc test sbb xchg mov cmp or loop add cmp sub inc add pop in fnsave dec hlt ja adc xor push pusha movsb sti and std cmp js add out insl lea aam sbb fdivrs xor std add push fidiv add sub pop lds je mull mov mov jo mov dec jmp cli pop cmpb and (bad) nop inc jp jp hlt and fimull daa popa ret (bad) mov shrb lock lret xor inc inc mov mov push psadbw lock sbb cli js (bad) (bad) add les add xor xchg ret add mov lret xchg add and enter sahf add nop decb xchg dec cmp dec rorl mov ficomp push adc pushf sti bound (bad) xor ljmp lods lcall cmp jge sbb fstpl push mov insb (bad) jbe mov (bad) repnz (bad) jno add pop sbb ret dec mov xchg sbb jo push pop inc lret jo add (bad) lahf xchg push fistpll add sarl js push movsb jns lods mov jne subl out add pop por pop jnp add arpl inc pop (bad) or mov stos outsb cmpl xchg cmp sti andl mov mov cltd ja add push scas fwait xor flds jo jno sti faddl jne dec lea inc xor jp mov pop dec popa (bad) fildl inc mov inc rclb add gs xchg push pop add xor and addb sub mov inc jae add adc sub dec repnz addr16 movsl add or mov sub lret sarl repnz xchg cmp sahf xor add out stos lahf mov add icebp das cmp jmp push cmp adc inc out dec (bad) xor inc es add fs pop js mov inc or xor sub push jb mov sbb aad mov fildl or fcmove add mov cld xchg stos bound fwait xor cwtl pop add sub outsb push popl (bad) xchg and xor jp push pusha or iret mov adc popf shr mov int ret mov mov mov nop out fild mov sub in (bad) xchg sbb mov imul add cmpsl in in cwtl addl inc aam jecxz add mov push add mov shll mov ljmp pop js inc stos jecxz lods rorl xchg jne and push dec rolb iret je jo cmpsl rolb sbb push jno andl xchg mov pop ljmp lret dec daa xchg loop not add or fistpl fnstcw push pop push jns xor add dec arpl das ret repz fwait add repnz xor jle add std hlt aas decl mov inc and and xor test dec lock sub roll movsb lea mov sub mov inc sub push fisub lahf gs jae fdivl fwait or add inc ja mov xchg jnp add xchg imul rol or outsl orl cmpl int push insl rorb mov mov lds (bad) (bad) mov inc dec dec out inc int lcall rorb add std bound mov push xchg loope mov xlat add gs sub das lds adcb out std mov sbb aaa stos adc add xor lea nop jae xor jp pop sbbb mov jb lcall dec mov (bad) je cmc bound and lods sbb add icebp dec dec adc scas add mov jecxz lds jae cmp or mov out sub mov push xchg movsl rcrb inc insl jecxz xchg outsb cmpsb sbb cmp inc or or sbb sbbl popf inc mov fistpl faddl insb pop sub mov xchg pop icebp xchg outsb inc or cmp js pop aad jle jns flds add hlt outsl (bad) sub add dec push adc add andl inc xchg jnp stos data16 add inc xchg xor lret xchg jns pusha mov adc pop dec das inc pop add pop les push ja dec iret test cltd fsubr or scas push add fnstsw sbb sti imul lahf ja (bad) cli pop push add clc push sbb push add andl push pusha in inc add movsl xor xchg sbb mov push cmp pop (bad) inc loope xchg mov adc xor out jmp push ja add (bad) (bad) mov roll jecxz decb into xchg js sbbl inc scas loop add dec add add cmp or lcall insb add (bad) ja test sbb jp test sub stc cltd add enter cmp pushf and adc dec add notb cmp repnz and jle xchg add mov xor insb cld pextrw pop repz rcll or int daa mov adc add add fcompl adc insb rolb cmpsb shrl loopne sti jbe (bad) call add nop mov dec arpl push faddl jmp lret adc dec cmpl nop push sub xchg andl mov adc (bad) jo add and sbb incl mov sbb add inc rorb add loop dec add adc or xchg dec pop jl add icebp mov add mov and xchg sub jb pop xchg mov xor aas je dec sbb cmc add sub cmpl rcrb or jns add iret sbb outsb test add mov mov dec test movsl aaa data16 pushf int3 mov adc lock cld mov push subl mov push cmp jl adc push add or cmpsl cs bound movsb inc and inc and clc mov push add insl adc stos mov pop lds xchg sub xor cmp iret mov cmp add cmp in mov xchg push xchg loopne sbb or push adc jge pshufw push add inc sbb mov (bad) jb sub aas mov mov jns xor or mov and cmp adc sub (bad) push (bad) xchg push adc icebp ret lock movsl xchg xchg lods inc je xchg das faddl jns xlat add mov and push or inc iret mov aad orb cmp xchg cmpsl (bad) mov mov add das pushf ds int3 push jge pop add pop add bound dec fs aas jae add jp lret adcb xor fwait mov cmp sub and aad mov popf popl rolb rcrb lcall add popf and inc or inc scas lea mov mov clc cmp ds pop inc in pcmpeqb imul pusha enter sub fidivl or add add xchg fwait cltd mov jp mul and add dec cmpsb lcall fdivl jo dec pop add mov cli mov and sub test xor mov add movsl cmp push pop fstpl data16 xor add inc call add dec jp subl jg mov sub jb add pop ficoml movsb add push sbb ljmp sbb or sbb xchg jns pop sbb push out insl mov repnz ret jnp test xchg test or add pushf inc (bad) inc lahf cmp add mov pop add fisttpl add mov mov xlat sti cld cltd mov and cmc add mov add ja cltd scas lds pop jp popf test mov repz pop mov fisttpll add data16 dec jle aaa add jp popa mov std push mov int inc les sbb dec lret xchg sti jno scas cltd sbb js add mov adc (bad) and inc inc push sarb jp inc push out les dec cmp lods je stc mov pop dec stos mov mov xor fdivs push cmpsl int and adc add jecxz int3 adc es dec inc push popfw mov cmp in or test xchg jnp js add repnz sub xchg fwait or sub out call hlt jnp loopne pop xchg popa outsl test cmc movsl xor repz xor pop fwait movzbl and loope jl sub aad push insl mov lret mov shl dec into out (bad) mov inc loope jge aam adc js das xor ss add xchg push add inc outsl cmp cmc pop add ds out jae mov xor mov rcl orb push jo aas popf mov mov sbbl mov dec push sub xchg xlat stc adc jle mov push add (bad) inc icebp and int cmpsb mov xor aaa add sbb or dec jno pop or stc jbe repz add mov sub mov (bad) fcmovnb cmp sbbl orb lret xor xchg add add inc call sub pop push add outsb clc (bad) jns add ja lcall imulb add sub add sbb sub pop mov lcall push dec xchg jns xlat add cmc les sub add into pop ret add mov lea out push jno inc mov iret orb cmp cmpsb mov xor sub ss pop or mov insb cld jno add mov sbb dec insl cwtl aaa addr16 mov dec push sbb jbe nop roll or dec jp pop fild (bad) mov pop cmpsb pop shrl inc xchg cmpsl sbb in xchg std inc or jbe xchg add decb repz lds (bad) sahf jnp (bad) and lcall add or fildl cli pop adcb mov dec pop bound sub popf sahf popa add mov test push push or sbb xor sbb (bad) jbe into repnz push fs sbb ljmp ss or clc cmpsb push mov sbb and push fs jo add fistpll add xor add jno decl ds mov aas xchg add daa xor add pop jmp verw rorb mov fisttpll cmp jge xchg fild (bad) nop pop dec or aas aam lret jae cmp in cmp lret jle add jmp add je push bound add (bad) je mov inc in js repz pushf inc pop ret nop add and out add or (bad) repz pop lods inc adcl cwtl scas dec mov mov add and sbb jne mov sbb dec insl add icebp stos ja add pop sub and pop add push out cmp push pushf rclb sbb mov add outsb push sbb xchg jmp add mov test xchg xchg jle mov and ja jecxz add lret mov movaps mov add adc pop push cld iret mov test inc fisttpll mov add ds outsl and adc xor dec mov or adc pusha and popf movl mov cwtl mov jnp or out inc inc mov push adc sub push sbb xor jns inc out sbb cmc rcll and scas pop mov fmul add sub add es cmpsb nop sbb mov add nop and mov add inc adc frstor pop push mov dec mov sar inc jp dec jno add jle add mov sub stc pop sub loop lea bound arpl mov fs cld or pop ja cmc mov mov jo jno xchg xor pop clc pop mov movsl dec jae push cwtl ljmp jmp adc inc push cld data16 xor popa add es and clc adc add push and cli xchg sbb add int xlat adc std ljmp add jo popa xchg push dec and lret enter cmp mov ja test jecxz adc les ljmp lahf sahf add jge adc add pop sub cltd inc add or cmpsl xchg or add rcrl add mov xchg sbb jg sub jge or cmpsl aam xchg mulb push dec stc sbb and dec inc mov sbb xorl stos femms add sub jo sahf sub jb inc jge pop sub inc fdiv jle popa nop jo cmp out adc mov sahf jo addl ffreep cld sarb sub out push insb jno cli jge add cmp jl push add imul pop sahf jo test push add out sub add or add scas jg fisttp jecxz dec sti push leave lock adc jbe das mov cwtl cli test push das loope mov push pop rcr pop loop jle pop wbinvd or outsb cmp repz add rolb jnp daa repnz jne sbb mov xor lret test jb outsb (bad) adc mov fnstcw cmp add fldl mov (bad) leave lds push imul stos into sbb add aas scas mov mov pop mov stc or mov bound outsl scas jbe popa subl xchg out pop adc and mov mov dec pop mov xor dec and popw sub sub xor call add clc or es adcb or js cli mov xchg mov add inc dec mov jns in pop cltd sahf adcl insb dec lds test insl cmpb mov jnp push mov (bad) sahf imul add lahf fcoml loope add cmpb es add ja sub pop add sbb mov mov aad adc loopne push pusha dec (bad) imul push sarb add dec dec fistpll pusha jge xchg mov mov test add leave dec nop imul adcl pop xor aad stc push jg out sub mov pop (bad) jbe (bad) aad add mov nop add cs xor subb inc fptan leave pop sbb mov ror pop fiaddl jno andl xor fdivrl arpl repz sbb adc ss lret movsb add and arpl repnz sbb add icebp mov mov ret pop add in shll xchg cmp push pusha ja fidivr xchg bound cmp or and arpl ficoml xchg xchg dec push add jnp pushl iret sbb popa scas call aas adc add inc incb imul mov xchg push int3 out add add cmp jae push movsb shlb pop pushf (bad) cltd daa mov lock mov add rcrl mov loope adc dec add das popf pusha mov push aad add dec nop (bad) incl out popa or ljmp jmp and movb leave pop daa loopne les jle xchg pop xchg inc test cmpb sbb dec mov adc sbb inc das xor add rclb int3 xchg add adc adc (bad) roll cmp mov add add leave cmp push add or popl cmpsb (bad) ljmp movsl jb je add (bad) jecxz je out leave jno add mov cmpsb ds push lret inc rolb and sbb push push int mov mov dec fs flds ds aam mov jmp xchg add xchg jnp add pop outsl pushw mov add aam inc (bad) stos pop lcall lods dec addl ss add pop and sti outsb cltd xchg push out cmp fs fisub stos xor xor jl adc rorl out orb pusha movups push jg mov inc xchg out mov ret inc je mov pop mov lret and pop mov call dec stos add pop (bad) xor out push sbb pop or cwtl shrb mov stos js orb test add ljmp inc outsb mov or jbe lahf inc pop and pop mov mov jg sbb mov (bad) jmp xor mov adc and add cli daa insl mov mov push dec call bound mov outsl inc jmp cmpsl aad cmc jp xchg push inc mull enter dec dec outsb add pusha add stos mov mov mov jecxz call ja fimul imul xor sub add xlat inc inc pop rcll add lahf ffreep jno push add adc inc outsb loopne icebp add sub ret sahf inc mov gs push outsl pop jp fs jmp jb add jg test dec movsb push add mov dec mov mov mov jbe in (bad) rclb loopne push sbb aas jg add dec mov add es dec pop mov std jle leave and gs test das (bad) test mov or in movsl xor mov push stos pusha mov add fcmovb (bad) xchg mov arpl popf add push jp and imul fcompl jle movb pop outsl mov add (bad) mov adc fldcw xlat add bound push int3 rol and (bad) or inc adcb add dec jmp jno shll (bad) dec mov sub les pusha xchg jnp push addr16 xrelease ficompl adc leave mov adc adc sbbb ret jp cmp out bound mov in xchg push pop add sbb stos pushf xorb push jl mov dec mov and inc add mov lods adc in outsb dec fcompl mov mov and frstor mov cwtl add sbbl lds lock sbb movlps mov (bad) aaa add add andl sti jbe clc test add ljmp mov sub cmc mov fadds aaa or add pop gs pop add add rclb test mov add aaa xor jnp add dec je out testl jns add in add cli sub mov data16 jp ret inc aad loop mov aaa int3 (bad) mov lods cmp xor mov xchg sub cmpl dec loop xor xchg les imul dec rcr add lret mov out jp add mov arpl aas lahf add imul aaa repz mov add push mov mov xor les mov adc mov xor cwtl inc add hlt inc lahf jo andl incb pop jbe sub xchg loopne or push loop fsubrs dec (bad) add mov xor sbbl push mov fwait add dec xchg (bad) std add (bad) push insl ja jecxz xor test lahf push xor hlt scas pop aam xchg mov pop call lcall aad and push pop scas sahf fdivs pop cmpsb sbb idivl sub inc ret in insb inc push add cmp test jns add and sub iret int3 add test lret jno orl loope js mov jno lret shlb add mov lods sbb jb or call jge add inc xchg add mov dec xchg inc or mov add inc aad hlt sub xor add push ret imul (bad) outsb sbb add pusha lods iret call xlat or xor mov jmp and push mov arpl adc fs sub subl pop cli jnp jl jge add inc ficompl xchg mov xchg lods in inc xchg insb stos cmp cwtl xchg push push push push push add in inc (bad) jmp lock sbb push jo leave add movsl std add addl pop cwtl adc mov sbbl pop or and xor inc fildl cmp sbb or clc sub rorl jp add mov mov lods fcompl add adc and icebp sub xor inc (bad) lock arpl push pop push (bad) pusha lcall ja divl je fwait add pop int stos jno cs or inc les cs push cmpb cld add sbb inc pop inc xlat inc ljmp pop jne outsl sub (bad) mov rcrb (bad) fldl xor cwtl js push dec mov or or sbb into and add int3 mov mov movsb mov cmp fdivr jbe test ss add sub (bad) mov (bad) and cmp and loop in mov push into add pop jp int3 add add mov out mov cwtl or js imul aaa add pop and push inc pop ss xchg scas in lea add push sbb add fidivl inc push icebp push push fcomps dec mov jl movsbl fdivl add out or mov pop jns test jo fstpt cmp dec sub in (bad) fdivs mov enter push dec or add ja jo sub (bad) add lock fs int lcall xor mov jne sbb add fsubs lea inc outsb xor insb stos or andb arpl idivl sbbl push dec push out add push and add xchg xchg pop insb pusha (bad) push add shlb (bad) test jb into adcl loope icebp insl and nop cmpsl cmpsb pusha sbb dec jbe clc jp add push xchg cmc and and add adc jb add pop fldl xchg xlat xor cmc add mov adcl add xor mov inc leave sbb test cmp cmp imul push (bad) mov mov pop sbb out jl and cmpl rcl xorb flds test add jle adc les inc mov fs add pop (bad) in or xchg add xlat arpl add jb or aad addr16 inc arpl mov push or aas add les push movsb xchg imul out scas scas nop adc data16 sbb mov jnp bnd jge shll push (bad) (bad) pusha push ret adc test dec (bad) int3 mov xchg inc es sub fcomp jne mov subl dec repnz ja pop das sub (bad) mov std loope fs and adc inc idivl add fcoml add mov xchg pop fucomi rcll or sub mov lret xorb sbb lcall movsb adc mov dec sbb lea dec cmpl call inc adcl add pop clc pop cs movsb in sub mov pop xor mov mov cld mov jl sbb add dec or pop jb push mov cmpsl fs xchg xchg add mov pop inc sbb mov xchg roll out in xchg (bad) dec or sub inc pop lds dec xchg cwtl lret and sbb mov add mov sahf and (bad) outsl add pop shrl mov add dec cmpl insb jecxz mov repz scas jae ret dec mov dec xchg push xchg test xchg lods das adc sbb add nop mov sbb pop pop jae cmpb ja pushf xchg pop mov xchg scas pop cli sub add outsb push mov gs sbb rorl add inc cmc push adc push jno inc pop jbe arpl pop xchg cmp std andb (bad) lret add add pushf xor add jns mov aas divb cmp mov add (bad) sbb out add outsl das cmc add add fnop fsubl scas push sarl mov fimull jmp insl push pop push test (bad) ret add (bad) call mov push jnp in mov xor push xchg adc lods aad addb icebp setle mov inc and mov lea adc push dec xor call cld add push pop mov pop int3 fs sahf lds sbb inc incb push (bad) mov aam mov in out add or add bound mov push mov add ret (bad) fmulp (bad) lldt pop jne loop das lret inc push mov cmp adc xchg dec xchg pusha sbb das xchg push or sbb je add dec sbb outsl push js sbb push inc out mov adc jle (bad) testl pushf mov nop mov cmc insb jno add loope hlt mov inc (bad) clc cmp or add sarl ja xor xchg adc xchg add inc scas (bad) (bad) pop jae cmp shr mov add mov ja loop add add jno xchg push and xor mov js mov int3 add ss insl and xchg cs popf das pop mov add fwait add mov sahf (bad) sub inc popa pop addr16 mov inc push jmp (bad) jnp fmull xchg sbb add rorl insb ret add mov push and cmpsl cld push in mov pushf lret or pop and add mov xor add dec mov mov sub adc jge pop out das mov jo (bad) mov xor ret std rcrb add lods push bound out mov push inc aas add cmp jnp test add mov pop cmp xchg aaa adc and data16 xor xor push cmp xchg mov (bad) mov xor add imul enter aas test push push inc xor jl inc mov popa mov or add ret in loope fdivrs add fucomip adc add (bad) psllw notb xchg dec push int3 jo cmp jns jns push push (bad) nop pop hlt es dec mov inc lock leave cmp jmp mov push mov and fldl rcll add popf mov lahf add xor js cmp (bad) pop adc pusha mov adc push repnz add es stos sbb ret inc imul pushf sahf xor xchg jp mov addr16 inc jnp sbb xor ja add push data16 out loope aaa mov and jle cmp xor add lahf aaa addr16 loopne std add cmp and sarb popf fadds jbe into add push add dec sbb add loopne sbb fcmovnb fwait mov popa popf pop mov cmp mov sub dec push cmp mov inc stc out cld sbb cmp push or (bad) divl cmpsl add and lret jmp adc cmp aaa repz sbb flds inc enter cmp dec data16 jno pushf mov scas out movsl mov jns call or and js addb mov call loop cmc fisttpll sub xorb xorb and shlb add mov in add pusha fwait jne inc jo subl in inc sbb imul (bad) mov out in sub aad outsl aam js push addr16 jns mov jp jno add jns add roll pop sbb aas aam jae mov loop mov call mov jl in outsb add scas int iret jmp inc xor push mov imul test xchg or xchg add pop stos mov jg pop xor cltd (bad) lods xor stc sti inc push andl mov jne pop jl push test mov add insb sbb sahf cli int3 imul lods add imul enter add jle cmp sti ret rolb push pop aaa cwtl mov es sub bound mov int xlat xor mov mov lock and jo test adc lods push jl lahf mov add add sahf insl adc lds mov stc cmp enter movl or mov jne adc or jp cmp add scas sti dec xor rorl inc movsb sbb lcall add jns or cmpsb repnz call add cmp mov fildl clc sahf pop pop add lcall loope jg scas insb push push add orl push add xor dec jae sub jmp push nop add ret cmp mov add dec xchg andb jno lods dec jl stos cmp sub lahf shl lea push scas or andl push sbb fiadd sbbb int sub pop pushl sbbb nop push arpl xchg rcrl jbe jecxz mov or xor mov push xchg sbb xchg in (bad) fdivr lret add mov dec adc mov xor insb arpl iret dec pushf add mov pushw mov dec xor jecxz add mov cmc int inc jnp scas lahf mov mov adc or dec sti cmp (bad) repnz (bad) lods fisttpll adc xchg or sbb shl cmp icebp fild pop mov test imul adc call mov cmp ret mov bound and lret adc mov add xchg stc and sub mov out adcl lods pop sarl mov lcall mov add sbb push scas stos inc xchg in loope and lahf jge xchg dec cmp mov mov add push ss insb cmpsl add fidiv fwait in cmp jg bound out adcl xchg pusha fstl pop or aaa inc add push push (bad) sbb push insl insb cmp mov inc arpl rorb add out stc aas mov or cmovo outsl pushf push add xchg std scas pusha add fs add es add mov sub cli mov fimull pop (bad) xlat outsb pop add push aam lahf daa mov (bad) lds cmp add push jmp sbb add (bad) mov pop test push sbb and fnop aam pop sub popf add orl xchg or rcll and (bad) mov mov jb cmp mov enter xchg dec xor aad adc dec pusha pop adc mov add shrl popf addl adc das add idivb add cmp rcrl imul add fstps xchg dec pop mov jp insl sub bound pop mov out jle lods scas push cmp add pusha pop inc mov sbb inc and out add arpl pop sub leave orl je adc aad ror (bad) lcall or mov scas xor sbb popf adc add std pop lcall sub (bad) ljmp outsb add dec and xor mov mov lock push push sub xor mov pop idiv xchg pushf add arpl jge xor mov psubw dec cmp push add jbe or xor ret xor icebp jae xchg mov add pop jl pop inc enter add mov faddl into cld pop adc ret dec inc mov sbb outsl mov rcrl inc push (bad) push and push cmp fcmovu xchg ljmp pop subb (bad) repz mov loop mov andb pusha mov cmc jne and out xor mov dec or imul fwait cmp xchg sbb iret cli pusha mov lock (bad) push push push cs pop xor jns add testl jge push or lods js outsb cmc jmp pop push and into push out push fcomps int3 add mov sbb popa sbb out cld insb pop (bad) in pusha and inc cmc iret xor and out mov cmp add sub cmpsb in dec into add outsb sahf lods sub add repz rolb fisubrl mov jecxz push (bad) xor out xchg xor jl add mov dec mov gs xor xchg cmp je add dec popa gs sbb and add sbbl rcll cmp mov jne add pop adc add lahf or inc ja bound in mov inc jge cmp scas add push lods or add push ja adcl inc add js mov add cmp xor cmp imul sti push flds (bad) loope xchg inc add aam cwtl pop mov pop xor lods lahf ret je adc xchg xchg inc add add pop in adc jmp adc add roll incb rcrb pop push cmpsl cmovo pop rcrb insl pop jmp cmp aam xor movsb add cld jmp hlt out rolb inc aaa stc out or mov mov lods add int pop and nop add push push mov and add out add andb dec rol xor xor push xchg jecxz repz add fdiv pop sub add ret subl push or and (bad) outsb add and cmova dec and and push xchg testb loope adc int3 mov pop je push pop cmp cmp cmp add mov inc xlat add ljmp cmp (bad) push clc andb mov sub mov push dec or ficomp sub fidivrl adc (bad) mov les jns movsb call pop jae xchg or pop dec sbbl out fidivrl imul or mov xchg dec sub lea clc add test ljmp ss das cmp fistp testl mov addr16 push int mov int3 flds insb bound icebp push (bad) jne add stos add fimul cmp mov jl xlat add adc push push dec mov or std cmc cmp ja adc sub mov cmpsb cld push jb hlt xor incl xchg nop call std add cmpsb jle cmp mov mov mov add dec push mov cmpsb popf mov inc sarb and add icebp sbb add cmp add cltd mov movsl orl xchg or mov cmpsw mov (bad) mov and sbb add fcmovbe sub ds movsl add jp push add sub xor jmp mov add or push mov in sarl sub test (bad) mov rclb pop stc ds add lahf and push jbe das mov ret xor fimul jo dec insl or pop sti add cld mov pop lahf mov lock cmp jno stos (bad) dec dec insb sbb out cwtl call push push adc push adc das mov lret imul add mov add dec scas add dec adc add jb repz sbb xchg pop inc dec pusha add add cld add or sbbl pop std add sub fs xchg sbb pop mov pusha pusha mov add sub (bad) in mov repz (bad) jl xor pop dec add test imul rcrl xor xorb out fbstp aas add push mov int sbb sbb lods jo push fs loopne mov xchg jne int3 sbb add xchg iret mov add add in es adcb jb xchg add add cmp mov mov xor add pop cmp add mov andb dec cmpl loope and cmc outsb add dec cmp je or mov add cmp cmp xor outsl (bad) js mov mov add outsl loope,pn mov dec in pop mov or pop mov adc insl pop ja xorl push add shrb pop sti or add dec pusha or mov lret fistl and jns add cmp jb shrl push ficompl outsl fisub scas in add mov jmp xchg sbb daa xorl inc adc add nop or xchg popa rolb inc movsb xor mov roll inc inc mov jo fdivrl sbb mov lahf xlat add aad inc push addr16 jb cmp es or add pop xor and fstp mov icebp loop add sbb sbb mulb push orb jmp pop stos test pop or add and add out sub fs mov xor cmp pop inc gs test inc cmp out mov sbb add mov add inc or repnz (bad) aad mov jne addr16 mov and inc lahf rolb fbstp mov ret les sti jecxz sbb inc dec add pop outsb mov out scas out fcoms pusha add movb in push ljmp add cmpsb jge mov xchg lret test mov sub testl mov mov lods add mov mov add outsl and jnp add sahf adc adc pop in dec imul aaa sbb sbb (bad) lret lds jno mov mov cmpsb push pop mov lret sbb aad mov cmp mov or and pushf cmpsl xchg adc xchg adc add stc mov stos hlt mov mov mov mov movsl pop loope outsl mov das add pop push dec jp add outsb imul icebp and sbb or js inc push js and xor and or sub mov ja adc (bad) ss icebp sti push fisttp add xor rolb int cmc ljmp xchg lea mov cli or test cwtl cmp pop (bad) icebp cltd stc into aaa sbbb mov xor stos push adc mov inc jns pop add dec movsb ds mov mov jg icebp sti push rcll test pusha fnstcw pop add cmp or rcr outsb movsb mov mov (bad) sub add cs imul jg cmp loopne fwait nop out test add mov cmpsl sub inc pop add xor mov insb daa cmp dec add jo cs cmpsl add jg sub xor xchg or adcl clc add sub mov add dec push inc data16 in rcrl insl push outsb into flds enter mov in dec int shll shll andl mov jnp inc movsl push xchg jo sbb add enter insb mul xor fisttp sub cs rcrb fs adc jbe mov and and loopne xchg add mov fisubr inc sbb pop or (bad) cmp add iret (bad) add popa dec into inc jbe jl insb in xor fs jecxz mov adc aam pop sbb ja adc rcll pop or push repnz xor sub test loopne imulb inc and add lea rcrl xchg xor sbbl xchg mov outsb or ds mov jb ds cmp popa sti sbb adc repz pop lods in jo pop or loopne test push addr16 loop and rorl pusha inc out push cmpsl dec outsl sub add push nop push rorl add popl pusha xchg stc out add dec pusha ljmp fildl hlt loopne mov popl andb add cmp addl stos in cmp sub shll int3 iret push add imul dec xlat and inc push xor xchg adc pop imul cmc xchg add xchg cli adc dec xchg (bad) xchg (bad) sub jecxz fdivrs mov outsl (bad) ja xchg xor das es push or addr16 add cltd cmp and sbb jbe int mov push jo pop xor stos xor sahf pushf imul mov lea and pusha pop and add inc sbb mov (bad) divb add sub int inc arpl xor in or jne out fistpll std enter mov mov or xchg pop lock add mov into dec stc sbb or addl out add lea (bad) and dec cmp add dec mov enter adcl (bad) cld test fdivrs pusha popf add mov lcall mov imul jmp dec popl gs xchg add xor mov lea dec bnd popa add and rcrl ds bound mov or shl incl fistl insl xor leave sub dec sub dec aam sbb ret fwait pop adc jge add xchg adc shrb xor ret cmp (bad) mov (bad) mov add jns dec add jmp (bad) mov push adc and mov pusha jnp mov xchg jg lcall dec aas sub add iret inc jb push roll je andl inc xchg (bad) jo (bad) mov xchg dec subb xchg mov daa cmp lahf pop iret inc int roll add xor out push jmp call (bad) in xchg mov cli mov inc incb adc and out movsb lds xchg andb lcall cmp ret inc dec jp xchg add notb roll and outsl popa cmpsb faddp sub push jns add xor pop ret or pop add in test scas jns shrl sub lods push jl or lock push pop ja add fistl ret aad adc xor out add loop lcall cs lds add movsb jg xchg pop popf andps pop push xchg or add mov iret add mov or (bad) cld repnz int jecxz in mov ret cmp or orl xchg mov jmp jg inc sub sbb push adc or mov jmp or enter or dec jecxz xchg xchg sbb pop faddp dec repnz mov (bad) or jp ret pop add mov xchg ljmp clc out xor roll xor jge pop fidivl cmp andb add add (bad) scas mov xor lret or nop fwait xorl push stc in das orl scas cwtl icebp nop jge pop add jp iret add fwait adc xchg dec xor jle push lods pop add stos and fsubl cmp push add call aas sub mov dec movsl mov pop fdivs lahf add add lods testb inc add iret es mov sub mov adc icebp fwait mov push mov xchg sbb addr16 in add xor mov mov or hlt add rcl add popa xchg add and adc cmp repz test jl in ds or cmc pop sarl lds orb add jae call add inc add pop and stos cmpb xor test adc add insb sahf cli lock lods aad dec inc xchg stos add mov add mov ja cmp jno sti add pop sub dec xchg add cli mov adc loop cmc or int cmp add adc adcl mov pop cmp cmp adc mov fistpll xchg xor bswap test dec aad outsb xor popa fs push (bad) stos pusha dec (bad) enter mov cltd jg movsb fisubr pop jae adc or js xor push jp mov sarl adc fcoms xchg push xchg lds in ret add cmp xchg jl xorl lock ret subb push mov rclb add popf aam fist scas dec dec push idivb sub in jmp outsl lahf adc add test add rclb add pop inc in add and jp sbb cmp add pop mov sbb fstl jge pop mov xor cmp rolb in (bad) popf ja xorl pop xor add bound sub push stc notl and add (bad) pop pand rorl movsb pushf push scas insb (bad) add das inc dec add xchg out add ss or sub fs jno adc cmp roll lcall or loop mov push add mov call aaa adcl xor pop data16 mov or sub mov lret in rcrb cmp xor insb jns add push cmp add or std mov cli subl add push or cmpsb cwtl push in fs clc mov cmp sbb cmp out scas push lret mov cmpsb je adc jp add push out outsl leave (bad) sbb add dec cld clc mov mov cmp mov add add jmp push adcl jle dec aaa addr16 push add add fsts add scas mov cltd add outsb std fisubrl (bad) mov dec adc imul (bad) xchg dec cmc add jne push xchg mov lcall and add mov fbld cmp orl cmpsb mov ss inc add fldenv lret mov push stos sbb cmp adc sub sbb pop dec (bad) pushf sbb imul add jnp sbb mov pop out je push pop data16 pop and pusha push fstps shrl int pusha push xlat rcrb int cwtl jge sub pop add mov stc add xor scas daa inc call test xor orl push cmp (bad) lds mov das sti xchg add roll inc adc out jp mov test inc outsb dec jecxz jo andb roll mov mov push add outsl ljmp sub add mov or dec ret mov sbb scas jl repnz jge dec pushf subl mov loop mov jno jecxz jp js mov dec add xchg test sbb xor pop or sti add imul fcoms adc iret dec add dec xlat sub out dec pop jge add orl in fild sub inc popl fcomi adc cmp cltd cmp lock add dec arpl push push add lret mov or inc add test idivl fldenv cmp xchg popa inc xchg out mov xchg (bad) jne or icebp and (bad) sbb pushf jmp stos aam add dec pop jl or add (bad) jge jle add sub inc (bad) ja add sahf jbe mull add jg xlat (bad) cld jp aas sbb lret aad or push jle (bad) divb pop mov lcall mov push inc shrl dec or movsl cmp dec btr jnp sub add cmc out andl adc push and xchg add xor push dec dec add shrb sub push add jl jmp xchg jb in sbb pop xchg popl into iret ret add push jae lahf addl sub or sbb lods popf adc fnsave push pushf (bad) pop sub inc and add cmp repnz hlt pusha jp inc lea test mov lods mov cmp subl stos add loopne outsb add xor jmp add jl scas xchg addr16 and add clc (bad) sbb sbb popf jns das add ljmp mov outsl out mov dec movsl mov add lret adc pop repnz jno jmp out xor in lods adcb sub inc ds jg jae pop and scas push popa add dec inc and mov adcb orl into pop jno les jo ljmp mov push xchg fstpl inc js (bad) mov sti push inc call flds rcll mov mov fwait mov ds pop jl adc lock pushl push cltd roll mov pusha stc scas out mov popa leave sbb adc pop push insl mov (bad) and xor add outsb fnstenv iret dec mov int3 push dec ret add ds pop sub rol sbb jle jb xor mov dec mov add jecxz mov dec imul xlat cli das iret jb mov (bad) in jle sub ja insl insb inc add insl repnz and pop jae xlat clc mov cli hlt jo lods dec jp add lret adc sahf dec incb sti loopne pop leave lret inc test test loop push add insl les xchg add xor xchg add test dec push xchg into xchg negb in add jo push mov pop push add mov jo nop lods add mov (bad) cld repnz ret push xchg adc lret sub dec js pop insb loop add shrb or mov push loop add lret sbb mov arpl xchg adc outsl rolb and pop movsb fadds sbb jns add mov xor add popf inc add cmp test ljmp iret notb cs sbb sahf push rolb mov pusha xor into push adc xchg or lea lock push mov mov push mov testl adc add sbb lods subl jb call negl or mov pop lods or in xor test sbb add mov jno inc arpl add push sbb daa roll aam cmp rorl or test out hlt dec push sbb dec movsb cmp data16 dec add (bad) lea mov and add cwtl ds xor fimul sub mov add out push dec pop clc cmpsl daa xchg int adc push xor rolb dec roll es subl inc pop adc xor adcb adc insb in push add nop mov jmp popf sbb cli andl push cmp or cmp push (bad) xor add (bad) loopne push and decl in pop mov add add movsb push fdivrs xchg add (bad) bound decl add adc sbb sbb pop jo ret xchg mov stos add movsl fisubr cmp iret xlat push out aad adc movsb rolb jno les leave xchg lahf fwait cmc fisttpll xchg xchg sahf (bad) mov add js (bad) mov out into cld ds mov cmp lcall jns mov idiv test loop add push cmp dec xlat (bad) pop adc inc fs mov add mov push imul xchg add add cmp or mov data16 mov xor into add (bad) les add jl sbb push out mov hlt ret dec iret sbb inc insb dec sbb xor and shlb hlt pushf xchg cmp jl mov dec mov mov jg lea add adc xchg add test dec (bad) xchg lcall flds (bad) and rcr pusha xor adc xor out push pop add push inc mov test dec arpl push or nop repz (bad) mov ret xor mov das mov addl mov xor mov mov (bad) add scas mov add push sub mov add xchg lods iret add pop int add lods xchg test outsb add dec xchg push insb or add cltd sub mov sahf stos xor jmp lret out inc cld sub mov push xor pusha repz lret and inc cld add fidivrl dec popl arpl das sarb lea push dec xchg int jns loop and push cmc jmp cli cmpsl cmpl repz mov push movsb sbb repnz dec aas (bad) mull push es dec jb pop lea adc lahf int3 pusha add push mov cmp ret je fiadd xorb jmp mov pop fildl push andl pop sbb insl lret xchg cmc aas sub loope mov loop (bad) cmp or add addl sub xlat jne lods js mov (bad) movsl icebp js xchg in flds inc lcall sbb adc pop xor mov push pop push scas add cmp (bad) cmp inc add sbb fwait sub inc and mov stos stc add test push negb and dec inc scas xchg add push ljmp jmp out rcr mov outsb and pop sbbl call jb lldt addb dec fistpl push mov fidivl pop add mov stos jl inc and inc stc aad add fisttpll sbbb ret outsb mov add pop jo fisttpl cwtl aam dec ret ret or xorl lds fcompl cmp test addr16 cmp out mov pusha mov fstl push inc and push iret add inc xor rorb arpl sti jo setge adc xchg mov add fidivl sti mov mov insb dec mov sahf sbb data16 sbb inc gs rcrl add jno sbb and call test lret cld cmp rorl dec xor out test dec in int fs add test out lods movsl pusha pop cwtl sub bound rcll adc dec (bad) xchg and cmp aas dec imul push daa adc ss add sub inc dec pop xchg sbb pop fiadd subb mov dec jbe mov (bad) jmp daa jge jp mov dec cmpsb pop mov aad addb (bad) jno mov imul aam dec mov cs sbb arpl pushf adc pop flds push andb cmp lds outsl jno and cmp xchg cmp mov dec fdivr adc int3 sarl out insl add add addl stos dec xor gs fs add mov dec add jle pop data16 cmp icebp adc xchg js mov jmp jecxz xchg add dec dec mov (bad) mov jp (bad) js ja ficompl sub sub fldt cmp lods push or push mov dec lcall add (bad) pop jge dec add xor add mov sub dec lret jmp mov imul push cld fs mov jo in and (bad) mov inc sub mov jge jo jmp xor std add ja,pt mov js or adc faddp ficom or mov in add test push je stos pop push std movsl les mov in sub sahf adc cltd fild lea popf mov and int3 mov leave add pusha push test cmc add jbe add mov and add pop imul mov and fwait cmpl sahf push jne inc mov movb jbe imul int3 cmp cmp and xor addb jle push add ss lret mov lods dec imul xor and lret fild mov dec inc popf outsb mov add lcall orb andl push or shll jmp sti cmp mov inc sbb add fwait cmp es push adc (bad) add sub inc test cmp push aas nop cmp add xchg mov in push gs stos mov pop add jne mov addb fwait insb fs pop pusha xor loope lods add hlt mov dec das (bad) out aad out add jno fnsave int and sahf add mov xchg (bad) lods cmp and hlt (bad) neg jno add jns movl lret (bad) loop add cmp push (bad) fidivl pop pusha push pop fldl pop cmp jo test mov sbb fdivp adcl xor cltd cmp insb sbb sub jno loopne push cwtl int3 mov out in and mov mov outsb (bad) ss jae add cli jp xchg loopne inc pop (bad) and mov add cmpsl pop fidiv push adc add mov loopne add dec cmp push sub repz imul xor pop lret add lret push jg (bad) add mov push int xchg add loope add add adc faddl inc (bad) shrb xor mov and lret jl xchg subl push ss (bad) movsb scas notl or jno subl scas into jle in xchg xor xor add lahf lret push aam and cmpl add pop dec rcr mov mov call scas mov add sbb mov enter add adc orb jg rorl add icebp inc into jb inc jmp std ja jo cli cld add js cmpsl cmp int3 push xchg cmc xchg (bad) jnp pop sub cltd lock cmp push mov pusha mov mov pop orl ljmp push test pop dec add repz mov scas sub sub test clc ljmp les (bad) inc cmp aad push ljmp bnd add dec inc pop xor into jo rolb pushf cltd or push xchg aaa cmp negl pusha fiadd fisttp lods fldl paddd loope mov (bad) sub pop mov xchg lret pop add test add push sarl cmp pop and ja add mov pop add (bad) pop sbb imul cmpb (bad) lds call mov fs push and add (bad) push jae xchg xor sub sbb pop jb int3 push arpl add mov js push call outsb jb xor andl (bad) jle aas gs xorl xlat lods dec mov out mov inc in (bad) adc add cwtl sub push mov mov cld mov mov push stc sti test flds out jmp lahf pushf int3 les pop adc or outsb add adc pusha outsl mov add es pop push add ret add jb outsb xor pop mov or in mov mov aaa iret popa (bad) cli lods xchg sub xchg sbb add into mov add ret sub lret xchg or inc daa int mov adcb mov jo les add ljmp scas pop andb xor popa scas pusha and imul pusha les sahf push push mov cmpsl lock xchg adc push add gs popa test (bad) rorl dec outsb jmp (bad) push (bad) mov add push inc pop jne add mov and sbb add sub mov pop xor shlb sti outsl cmp add mov clc add add mov loop pop dec push push popf pushf out mov cmp inc cmp add dec dec add adc xchg imul and stc lock pop lret lea xor loope negb test jo add sbb add xor test add fneni(8087 sbb ret loop mov in push mov test dec mov jle add stc (bad) mov add cltd xor push lods enter mov sbbl out int mov enter mov xorl jo lret (bad) cmp pop arpl mov aas (bad) stos add pop es sahf lret sub sbb mov aad push add jbe xor push or mov push repz adc fidivr mov sub (bad) scas add lods popa ja sub loope xor rclb clc out sahf add xchg adc insl leave add cmp jp sbb sbbl aas and cvtps2pd mov push addl mov mov add ret mov cld (bad) sbb inc xor sub xor jo jb int push mov push push mov data16 jnp adc stc adc mov dec adc xchg add adc clc mov ljmp repz pop push and notb andl inc pop mov add adc fwait add xchg cmp jl roll inc add cmp cmc cmp add ficom jge nop pop mov add adcb mov xchg mov das inc add sub lea lcall lds jae pop jno add cmp repz push mov add outsl rclb add or cmpsb cli sbb psubsw dec dec hlt add add insb pop dec adc jp add sbb movsl xor add add cmpsb iret shll dec xor je imul outsb test inc add pop lods jmp inc pusha jb in xlat stos add repz or lea cmc xor xchg scas mov outsb add push mov lahf adc inc fnstenv mov fidiv add inc pusha dec jg lahf rclb push inc add xlat add xor add pusha ret in dec out js insl and fildl cmc add add xlat movsb jbe and sbb push dec mov or cmp mov inc dec imul add out pop pop test test mov test pushf pop jl jno jns push out cmp xchg sbb mov mov test push scas pop cmp cs clc add and jmp cmpsl push xor push ja and (bad) lea add rol add sub push in pop cmp xor add adc popa inc rolb jl or and mov lret (bad) scas jmp fistl movsb jp ret cmpsb jg lea cmp add loopne (bad) pushf cltd aaa add bound cwtl test in daa (bad) idivl pop mov mov jae pusha mov (bad) fidivrl inc nop dec add rorb sbb fnstsw push pop bound int repnz insb cmpsl or pop jns scas sbb sub fisubl xor add shll add cld add incl or pop imul leave movl push push inc test or xchg mov dec stos push dec mov shl les mov pop mov data16 add jecxz xor (bad) int push sub adc test test pushf arpl add fucom repz rcrl add pop lods lea icebp inc xchg iret lods mov jmp mov and adc add dec add and xchg jno aaa pop hlt fcomip jl scas push sbb leave mov cmpsb out aam cmpb lods push jo test pop xchg fwait nop aas or iret idivl lahf dec out mov mov stc in add imul cmp loope mov pop out movsb mov mov test mov jae (bad) lds and shrl push stos dec in dec push add mov push xor outsb cs pop fdivrp pusha (bad) cmc xor jo and dec daa xchg add and test add cmp or cmp es rcrl add loopne jmp enter push pop fidiv jb ss or lock icebp add xchg loop mov jecxz add xchg mov adc stc ret ss add sbb inc add adc xor mov fstpt add and out pop sbb fstl push inc xor add push xor inc add das or dec mov sbb movsb andl push int lea adc xchg pushaw pop iret lods jne add popf jl pop test fiadd in dec leave adc or add lods pop cmpsl jae mov fstl push lock les pop mov add mov loopne jmp jae,pt add pop adc stos aad and add in mov inc adc orl pop sub pop daa xor adc rcll xchg ret (bad) aas mov push fbstp xor addr16 mov (bad) xchg movsl mov sti or jmp nopl xor cmp inc call out mov add adcb add mov daa lods leave jg jge fnsave xchg js add (bad) sub add cmp test mov xor add or les mov xlat inc mov fcompl cmpl pop jns ret mul jmp leave rolb test jnp xor push sbb add push movsb loopne lock lcall inc lahf push xor mov jns loopne iret dec push cmc das cmpsb pop negl cmp xor inc inc hlt add push (bad) je cmc pop out pop add int and das xor pop xchg push inc or insl leave orl rorb repnz nop cli cmp fs fildl dec stc add sub andl push jle dec outsl test sub xchg adc ret xchg aaa fdivl sub mov (bad) inc inc xor dec mov push add cmp mov cmp cltd arpl jg jo fisubl sub cld push or insb mov leave push mov mov mov mov repnz dec mov push add add imul add mov sarb enter fistpll mov jo bnd add add push nop std cmpsb add ret inc out cmp movsb xchg mov or jb xchg mov xor pop add pushf cltd inc inc outsl jecxz add xchg jmp add jge cmp jns iret xchg lock lea mov add ss in pusha out or inc xor inc push call cwtl aaa jne sbbl xorl push fadds jns dec add movsl dec and les mov pusha adc clc add icebp inc jae (bad) add adc sub or or push fldenv inc (bad) iret lret pop pop push jecxz inc je cmp xor or and jb add adc adc les in repnz cmp push inc xlat fcoms dec cmpsl hlt push (bad) mov jp andl sbb subb ficom xor addl test ds arpl push (bad) sbb sbbl cli rcrl cmpsb adc jmp add out pop jae popl ss pop sub pop jp xor and idivb or cmp popa jp pushf add dec sbb pusha or xchg push push jns add sti pop loope mov mov add sbb pop jge out inc pusha cmp pop adc pop out mov cmp lcall push xchg dec pop add ljmp jns add iret jle pop addr16 jecxz nop sbb mov pusha imul pop inc in add adcb sbb and stos mov pop ljmp dec sbb and push lods cld mov xor nop and subl mov cmpsb ljmp add lods cmc mov mov push mov lea or cld xchg bound lret add jo push invd out sub sub fnsave sahf add int lahf outsl loop jbe ss pop push and out inc mov nop inc loopne cmp ret push xchg xor cmp mov stc add jecxz mov repnz cwtl sbb insl addr16 xor add std sahf out int3 mov push sub jb imulb lret aas add repz lods mov push xorl push jo lret sbb loopne aad pushf jo mov sbb cmpsb fiadd adcl sub dec or inc repz adc lods icebp pop ds adc add xchg dec xorl mov es pop icebp pop out jecxz repnz fimul jo xor dec add mov mov scas mov add int3 icebp xor stos pop (bad) hlt mov add iret aas pop cmp jae add inc xchg dec lcall xor add and jne js pop and in jp test sti pop push adc inc popa pop scas xor orb (bad) xchg pop sbb popf xor stos jge ret pop inc adc add push clc dec mov js xor push sub jb iret addl nop das testb pop jns cs inc cmp push jle,pt stos xchg in add test push inc inc mov movsl xor and xchg insb mov test pop mov sbb jg jmp adc es mov (bad) icebp push mov add cmp cmpsl test idivb stos add scas in sub sbb cmc push sahf test cs stos add xrelease mov out inc add packsswb ja add enter fisttpl out jg inc and jae ret repz dec jecxz imul int xor sbb jne dec aad movsl stc push mov rcrb adc add add sbb loope mov cs out mov add es dec fbld lea scas inc aaa xor or call faddl jge (bad) ret push cwtl adc add les jnp cmp xchg in pop aas pushl or jmp movsl add sti loop subl jo fs adc outsl mov push mov xor add pop ficoml popf push imul lock add pop jp stos into dec push add push sbb dec repnz inc pop pop inc fcompl add bound andl pop mov and cli cmp mov mov pop add hlt cmpsb jmp push sub aas cltd lret and loop add dec mov xor add mov aad icebp add inc aas loopne hlt cmpb or pushf mov cs mov dec pop and test xlat in or vmwrite jne shrb pop xor pop jl add iret xor cmc jp sub sbb adc adc jl adc imul xor in mov in inc adcb cmp lds roll (bad) notl lret mov movsl and lahf push dec add sbb roll dec fimul pop adcl cmpsb add in cmp aas cmp push subb pusha pusha loopne adcl fs inc add cmc adc dec xchg shl (bad) jo push add and int3 add or ljmp fbld cmp xorl fadds outsl in or popf sbb inc loope mov add scas fisub sbb lret fistpl arpl (bad) or add sbb ficomp inc mov pop mov lea mov and inc jmp add jb push jb or incb mov add rolb repz lock sub daa dec mov inc jmp cs dec cmpl adc call xchg lods mov adc sbb or xchg adc cmpsl xlat mov add mov mov cmp xor push add cmp pop shrb mov popf in jecxz insl clc cmpsl lock lcall test out stos fs add psubsw jo call out (bad) add dec (bad) mov syscall xchg aad push xor aad jp cmp orl roll mov cmp cmp and mov add ret sbb lods out add pop in iret scas cwtl sub bound adc sub icebp pop je or dec xchg and and cltd call in mov dec dec inc push add rcll sti bnd dec aad ret push push dec fs sbbl fs add icebp sub jno fildl and dec push xchg imul nop xchg dec cmc add lea outsb xchg adc mov test out mov add sub dec rcll movl add push jg into adc mov sub (bad) imull lds out scas xor gs add pop mov lds sub add iret inc stc adc fwait aas testl pop mov pop lods ficompl and imul sub cmp in scas test jne add or inc mov xchg out mov daa jnp insb pop js lret pop (bad) push ds hlt add pop mov add and jmp add (bad) mov ja sbb (bad) adc pop iret cmpsb mov cmp xor pop insb add les or add mov sbb push xlat push add orl popf shrb sbb mov (bad) hlt stc push data16 push mov pusha repnz daa dec ss fcom mov add cmpsl mov inc mov movsl loope pop mov jne test push call mov push mov pop xchg sub inc mov sbb mov call mov out cwtl pop cmc add xor test sbb (bad) ja fiadd inc xchg enter add cmpl movsb adc and add jmp pop mull mov xorl jb pusha push test scas ljmp in mov jle movsl xchg jo and test out ljmp add lahf cmp sbb rcll push mov lret mov aas mov push xor inc aaa push popa inc push jmp loope mov cmpb stos dec ljmp fisubl (bad) je add push nop fdivrl push xor jg icebp testl mov dec sti subl fild mov inc add fildl cmp pop push sbb mov jl adc jle cltd addl add dec mov mov test aad dec jb lret push daa pop jp jle jae xchg arpl inc add jns mov pop jg (bad) stos movsb rcrb clc incb cmp (bad) add decl mov jo test adc adc jl ja xchg adc add xchg adc push fwait rcll ljmp outsb fild ret xor cmpsb movhps push mov pop in jbe and (bad) cmp add clc push (bad) xlat je enter jne daa int insb fstpl add pushf out or add loope mov arpl dec out aas adc fistp xchg jp mov pop sbb popl movsb mov jnp sahf adc add test test xchg mov (bad) frstor jbe dec add adc add push addb mov inc mov stc out and jp insb inc in and push fwait inc inc xchg (bad) icebp mov xor insb movsb jge or dec jge mov mull add cmp add mul adc out jg enter mov xchg mov mov push jne dec mov push jo fiadd add add push add xor dec decb xorl adcl add imul xchg lcall loope imul pop cwtl jb loopne adc cmpsl jne lahf pusha mov pop orl mov pusha addr16 adc mov mov loopne mov std es and pop inc cwtl ffree jno add movsl xor std inc and scas into xor pop je and dec or mov cld mov sti xchg mov xor jle cmp mov ja and sbb sub sub xor pop inc push or dec inc dec add xchg lahf insb and jge add movl add adc mov xor add out cwtl arpl aas mov or add cmp inc and add jmp outsl jp pop xlat scas data16 sbb sbb inc push cld addl xchg pop lock ret sub cmp dec pop sti mov pop loope jb adc mov xor decl dec das fiaddl pop xor test sub out sahf mov add loop dec mov fs cltd pop cld sbb mov mov test outsb sub mov inc pop mov or inc stos (bad) pop jmp (bad) lret jge mov add lahf sbb xchg mov mov aaa jg pop mov lock pop rolb and dec nop mov out sbb (bad) sub add sbb add popa fildl cltd les imul pop data16 sbb add add dec jbe mov mov push lret mov cmp cwtl adc add mov js push movsl mov les loop ret jmp push lahf dec adc fidiv jmp sbbl shrb arpl test cs adc inc int3 mov push mov pusha add lds add scas les add lea jno sbb clc push je add test jg insl mov add mov stc sbb mov xor add xor push fmull add rcrl es movsl andb adc and loop shll in pop push inc push mov mov mov xorl jae jl add jle loope add sub dec cmc fldt imul mov roll mov mov out stos mov adc and ja xchg add dec xchg stos repz add sbb inc fwait js add add je mov mov xchg sub xchg lds aam add sub sub insl mov push push jnp add adc add or lea push or mov out add cmp pop ss sbb dec (bad) push outsl cltd adc popa pusha push lcall pushf test pop or xchg mov roll test jae push sti jno popa cmp cmp add shlb add or push idiv add sbbb xor mov outsb imul lret dec xor xchg push add pop in sbb adc cld sbb cmp adc inc daa outsb loopne add aad pop jge mov stc xchg andl sbb out pop pop dec mov add jle cmp (bad) push je ficomp adc mov testl add movl (bad) push stos js xor addps movsb xchg xor cmp rcll les dec add je mov xchg cmp mov add mov call icebp mov cmp out fisttpl push add add xor add (bad) mov jecxz inc out adc mov jle aad push sub loopne movsl aam inc add lret mov mov pusha xor add adc cltd add pop inc pushf sbb push mov xor add push nop cmp add loop inc fidivr es cmp jp push ja or add test mull xor outsb hlt inc add inc aad xchg gs xchg aam lods jo scas mov mov adc (bad) mov cmp ret ds mov sbb fmuls jbe mov dec inc and mov dec jp add (bad) xor test push xchg mov push frstor es or cmp btr jb loopne (bad) aam pop adc mov (bad) scas jg mov insb add jl add lret leave stos mov sbb dec cmp jmp loope (bad) xlat add or push hlt inc lcall test and cltd dec add jge pop movsl or call xorl popf cltd roll inc adc mov mov lret daa cmp jb add push pop xchg int3 add dec cmpsb adc dec ss loopne lcall jp scas sahf arpl es adc dec stos xchg xchg ljmp out test push outsb dec jno lock mov imul stos push add pop fsub jmp push xor xchg jmp aad pusha imul sbb push sbb push inc (bad) outsb add pop add or mov xchg mov and jp and pop jne data16 add xchg add xor pop stc pop push js push push test xlat inc jne add data16 cs add dec (bad) out dec cmpsl dec sbb movl montmul cmpsb pop pop movsl (bad) sbb jg jmp adc pop cmc mov or lea popf pop aaa hlt imul jae (bad) lret cltd mov fmuls jecxz push fmul subl mov xor ds cmpsl add or dec add dec jo sub stc jb mov flds mov mov and push mov in ja sbb addl fwait or adc push jle icebp mov sub xlat and aas sbbl and mov and inc test pop mov sti (bad) dec stos add cmp leave mov push out cli or sbb int call sub enter push test add cmp mov je add xlat shrl xor popa jle xchg add add push shll test icebp jge lods pop dec fbstp jne add out ss mov inc push int imull mov bound xor stos sbb popf insl lcall mov add je cs add add and add outsl jnp adc push xchg jb lods inc xor sbb sti call add xor clc test loopne negb gs (bad) movsb in jl jle pusha ja lahf jg mov add fidivrl add jle pop mov lret loop sbb lret (bad) add lods sbb imul decb lret add and xchg add push mov imul inc scas aad mov scas add or cmp sub (bad) lret jecxz mov stc into hlt and cmp xor or push mov add fcompl jbe frstor std mov and jle xor pop and xchg aad (bad) sbb jmp push fwait mov jnp add (bad) cmp fsubl cmp cmpl movsl add cmp fimul pushf mov lahf push mov loope mov dec pop add cmp cmc out pushf pop mov fdivl jae jp sub gs ljmp insb (bad) jnp add mov je jns lahf xchg inc pop adc insb pusha sub lahf or and jle sbb mov jbe add mov or dec push aam or hlt addl pop movsl push push jmp mov add push inc into add dec mov (bad) jb or fiadd test xchg adcl test popa ja add clc repz in loop add or pop gs test mov enter add xchg inc push jns cs push add popf sbb in jmp aas mov stos dec inc inc test pushf mov andb and cmpsl dec repnz pop adc fwait adc out lods sar add sbb cmp mov std mov leave rcrl mov cmp push push inc cmpsl mov push stc dec add jo dec pop add and fisubr aas add dec push movsb fsubl testb jnp es orb pop xlat jns jbe rolb gs pop push je test test jae pop xor pop jno faddl out lods movsb test add push dec (bad) cld lret test mov fwait loop xchg inc into add test stc subl or mov and jl mov xchg pushf add je jns adc movsl xor add sub out sti add nopl mov add cld hlt fnstcw out sub fnop dec add dec jo shl fsubrs cmp sbbl and xor int in sub repnz sarl pop and add insb xor cmp add out and add dec adc clc push jns adc jno sahf lds dec add mov int jnp jge loop lock inc cmp add cwtl aam (bad) lods jecxz add sbb lcall pop lds push add pop stos and daa xlat add jnp adc cmpsl xchg hlt add sbb sarb (bad) xor aaa test movsb stc mov sbbl fbstp adc add jmp in inc movl lret int3 add cmpsb mov sub add mov addb jmp dec outsb mov insl adcb shll cmpb rolb adc add sub cmp out addb mov inc ja cmc pop addr16 stc jl adc aad add stos ret cmp inc inc jne (bad) or mov stos mov add dec mov mov inc sub mov push sbbl loope jecxz shlb xchg scas test in leave or xchg popf jp dec add mov cmp jo mov cmp add inc xchg xchg in icebp xor cld sub add (bad) jge add out int3 jnp xchg xor popl sbb and mov sbb sub jge loopne inc jbe adcl ret je dec imul mov loope add or jge and cmpsb jg add jecxz test pop jp rcll in xor xchg inc xor dec push aam xor add sbb xchg loope add add enter out mov into mov cltd sbb incl and hlt push sub pop lock xchg cli fs add inc inc inc fimul mov xor add pop mov loopne das push jg add mov xchg fwait add sbb sbb push repz je add pop ja add cmp dec lea adcb xchg (bad) cli dec adc loop inc aam bound jmp movsb lahf repz cmp (bad) lds in sbb and sbb xchg jmp mov jae add inc or rol add dec ret mov test xchg adc in xor add add popf pop repnz imul mov jg mov idiv push (bad) ficompl fisub out jae sbb (bad) xchg gs pop lods jp xor adc jb fiadd add and out rclb cmova test sub clc rorl mov pop xor (bad) in fdivl mov jbe out lahf sub jmp out and rolb loop mov jo inc push add in and orl adc ficom ljmp (bad) jo cmp lcall xchg mov out xor dec (bad) fldl jb int3 push push mov add cmp mov orl cmp shrl and jb mov (bad) test lds mov imul and mov (bad) xor lret add or push add xchg cs lahf xchg adc mov add or je fsubl pushf cmp jae int3 lahf jl sub xchg fiaddl (bad) adcl inc adc pusha jns add nop sbb add stc xor iret dec jge add adc mov test add (bad) rolb mov mov and jecxz jo subb xorl inc sub sub jle pop addl cmp add xor add sub pushf xchg xor in int mov loopne das aam fist pop clc loop dec fiaddl leave in jnp mov mov jno cli clc not test sub or shll bound dec in add push jbe mov adcl and (bad) mov sahf jecxz adc (bad) push inc jmp sbbl cmp int3 leave ja mov stos insb (bad) imul jmp mov lahf shll add mov sub jge cmp jne cmpsl add sbb jo cmp imul jb xlat lret sahf jmp and mov popl add adc outsb rorb jnp pop add dec test add inc sarb inc daa jns cmp jno pop aam push iret and mov cwtl or add jno add aas cmpsl sbb pop ret pop js call add sub cli fnstsw pop movl xchg push stc pushf orb divb (bad) add sbb add jp iret cwtl daa movsb testl and pushf cs cmp in lds add mov orl mov aam int3 jmp push into add scas mov add push cmp nop and jae sub in add test pop jecxz push inc sub lahf aas mov adc jb jecxz sbb (bad) mov push lds cmpsb add and lea dec mov push lret (bad) scas cld sahf mov push jbe or idiv cmp movsl scas add xor ss int3 out cltd mov sbb mov ljmp mov popf loopne push or adc jns xlat lret or lods xchg adcl add pop add addr16 inc jmp sbb decl push loopne mov pop cli add jae add jb cltd adc and push push flds add pop cmc cmp out sbb rorl and jge sbb xchg call das xchg mov popf out sub jbe mov cmpsb adc dec enter cmp pop into and or dec cmp clc jns jno mov rorl or in out test xlat add ficoml test add sti dec hlt lret inc add pop movsb and ret cld jnp repz cmpl sub sub dec dec jnp nop pop push jle insb add push inc sarl inc or sbb int3 xchg sahf addb sbb jecxz aaa pop xor sbbl loopne add clc cwtl sbb mov int std jp mov (bad) add outsl cmp bound add dec add inc movntq mov nop (bad) mov add test in xor add lret inc mov xor push mov loope add mov add pop shr cmpl leave inc push sbb nop push dec pop sbb movl insl daa mov adcb adc sbbl mov xchg mov add hlt mov sub push mov add sbb sub inc add mov push jne add (bad) repz hlt push push jg mov fistl subl push dec psubw movsb push pusha cmp lods and pop add xchg xchg mov adc push notb push xchg xor add test loope push pop add xchg ffreep aam xchg popf sub cwtl outsl and dec stos (bad) jno jge adc add mov daa fucomp inc jle cmp scas xchg dec mov icebp inc jo pusha insl icebp sub flds jg push ret xchg fisubl cmpsb xorl cmp daa enter inc xchg xor push jnp adc scas lcall mov xlat xorb sbb mov div mov addr16 mov xor pop or and xchg mov rolb mov stos adc sbb xchg in aam jno add fsts out add and pop add dec negb loope data16 pop xchg jecxz aas dec stc mov lea mov lds and adc testb aas andb and (bad) clc cmp (bad) push mov and dec sarb test outsl inc cli outsb add adc aam sahf add loopne add addl bound das movsb cmp add xor int push pusha xor (bad) or ss lahf jmp inc dec inc inc mov push lds jb dec pop sub ja addl and jle add mov inc or xchg add lods sbbb push add mov inc movb cmp mov inc or lret add jae xor roll loopne lcall outsb imul cwtl sub mov mov or mov push dec lret sub sti test idivl cmp add pop jle stc shrb add int jae pop (bad) hlt call addl xor pop (bad) pop in push jmp mov pop ljmp jno add and inc xor or add jb (bad) inc jne es adc add shrb lock fmul sbb idivb adc mov mov push xor loope aaa sbbb lahf xchg jb jl lret mov add cmpsb in xor call lea andb jp lds aaa orl add rolb and cmp nop cs call cld mov (bad) pushf adc adc mov xor cli pusha mov stos add idivb jg mov push std add loope mov cmp xchg or cmp xchg mov scas and add mov loope push jmp fsts sbb mov (bad) enter sti loop lahf js add call sbb out cs ud2 loope add enter aas add fcmovnu popa or mov das sahf mov push inc fwait call pop add jmp jle add dec or cmpb push push and dec pop and mov cmp fcoms adc mov (bad) (bad) lods rolb cmpsb jbe cmp iret ljmp add dec pop jae cmp scas js add fwait push mov rclb fisttpll push fildl js pop adcl xor iret jl stc fs sbb icebp cld mov sub jae add bound pop mov and mov cmp fs lods scas pop adc imul dec jl stos mov fisttp js add jl stos outsl insb sti (bad) push or fnsave lods gs std xchg or and sbb mov popf js sbb mov lahf inc add fwait jb jl (bad) rcrl push or daa fmul arpl out add jl mov push fild stos shl add add imul jl mov dec ret dec lret add (bad) mov jbe add es icebp lret ret aas add call js mov ds in cmp lret jmp pop ret push add mov popf push or mov pop dec sahf jne les fdivrs jns pusha push sub ja add mov dec push (bad) cmc cwtl into lahf sbb pop xchg jle pop sbb mov jnp push fisubr ret shr daa add aas adc xor pop fs stos sbb pop sub movsl add mov scas cmpl dec je cmp pop add jae iret addr16 add jge push push add and loop push jns sbb inc mov cmpsb inc mov and stc inc daa jmp std rclb jb fidivr (bad) jecxz xor in pop out bnd stc and and mov or stos and lea stc mov sub sub out pop es lock add or pop xor jo scas sub push xadd inc pushf aas xchg sbb test (bad) pop pop inc inc dec xchg or bound jg (bad) out add (bad) mov stos int3 sub cmp rcrl test insb inc sti gs fcmovb add xchg ja cmp add int dec ficoml adc mov insl movsb dec and aaa cwtl cld (bad) dec or inc rclb mov icebp xchg (bad) sahf pop mov add (bad) ja pop add push add jo fcompl mov cltd insb repz movb iret dec es out or add fist and jecxz add xchg or pop cmpsb shrb sub adc (bad) loop push mov and testl or push (bad) pop or add lret add mov add out sub dec add xchg ja xor inc daa inc adc add jp dec push jl jb sbb add stos push (bad) lock sahf add test mov sub jp out iret es add hlt xchg mov and loop pushl sbb popf add mov dec sbb inc (bad) xchg jecxz add add leave or insl sti out dec sarb jo add es or pushf stc adc adc and test sbbl mov fwait add sub pop mov dec mov push cmp sbb (bad) arpl pushf test mov sbb lods in or (bad) jnp addr16 add push bound sub dec testb aas mov stos insb cltd cmc cmp fistpll mov or jl jnp fdivl test orps out js repnz (bad) jo sbb insb and mov pop xchg popa push xor ret jmp jg scas (bad) sbb inc call int or shrb fstpl add jmp cltd dec out mov mov rorl add cmp xchg stos mov mov popa and (bad) (bad) fwait xchg js hlt mov rorb lea dec adc sahf pop int lret insl mov push (bad) sub xor lods jge sbb xchg add sub int3 fildll dec add inc push xor xor jno jae lcall mov or je push mov test (bad) popf jge incb andb cmpsb pop test mov lods sbb push push lock leave incl mov push sub insb gs cmp xchg out pop aas cs and xor or jg ja add mov or pop sahf add mov push cltd movsl inc outsb adc mov jmp les cld dec push pop cwtl and adc jnp jae in sbb add add mov iret adc jo add sbb daa add dec pop mov add xchg jns lock xlat xorl loope mov sahf sbb xor loope das lahf (bad) add notb add loop or sub mov enter fidivr and out add inc sub ljmp and mov outsl cwtl cmp movsl xchg or in ret mov pop jecxz mov icebp (bad) push lods popa push loop aas sbb insl hlt pushf lods out data16 aas clc pop outsb dec add push and lods inc ljmp fsubs test inc pop mov sahf add add nop or cmpsl aaa jecxz jno jl test (bad) pop add jbe icebp insb add jle insl movsl pop ja,pt push push aaa add hlt ja data16 push shrl xchg jbe cmc cld mov sub fdivl fsub mov xchg clc int3 pop cs hlt das rclb ds push out jp inc add in xchg (bad) fcomps je jns cwtl or sbb inc pop outsl lret adc ljmp mov dec pop into in mov add ja in icebp (bad) add cmp outsl xchg pop incb xchg (bad) mov mov cmpsl adc ja loopne pop roll in sbb lds outsl add mov andl in and mov mov pop mov test dec mul xor pushf scas xchg mov mov sbb add add arpl cmp ret dec faddl add (bad) dec mov dec mulb orl cli je stos push jb add jl mov mov add fisttpll lahf in les dec rcrb (bad) jo xlat dec add mov js repz push sbb sbb mulb push cmpsl cmp xchg jg add xchg bnd xlat add fs push ret mov xor add mov es add dec je mov and cmc dec mov add ret pop xchg xor fwait (bad) cli sbb inc out xchg in push cld add iret xchg or call push imul add push mov jnp and les dec and mov push mov (bad) jecxz aad add jno enter addb and cli and mov mov push shlb sti push testb les rcrb stc mov add and imul repz add fcompl mov in cmp lds out fwait cmp add xchg push xchg add pop sub sbb loop stos (bad) mov scas repz and add sahf test aas dec and add mov pop xor test nop clc jnp inc lahf push and sub fsubs or cmp mov imul popf lock inc les mov scas stos xor andl mov add pcmpeqw add inc sub and pop fsubs or add inc in lock (bad) inc popa bound test cmp jle jns stos (bad) pop add cmpsb pusha imul rcrb sbb out out movl les test push mov in cmp scas aaa mov outsb cmp or xorl dec and lahf xor test pop add lds jecxz sub xchg test jnp add fmuls add and scas pop add loop jge or sbb js pushf mov sub cmpsb sub add mov push add stos adc and push xchg stc mov push dec out addb cmpsl aad insb add lods xor add mov push sub inc fild pop enter idivl aad in out cmp mov xor push add adc dec (bad) mov add add (bad) or sbb cltd notl fwait mov lods pop inc pop and in mov push (bad) and bound xchg scas lret js add insb dec fwait jg cmc std lahf ret dec icebp mov popf push mov add mov test loop test clc pop or movsl sbbb dec das (bad) pushf outsb fwait xchg inc xchg mov dec fisubr (bad) loope roll dec (bad) fidivl js dec lret cwtl dec sub cmc pushf leave and (bad) fsubp mov jb mov adc or add xchg add sti adc add test push cmc movsb pop addb inc xor pusha jb lods xchg mov mov push xchg in test fldt or popf cmp mov sbb in dec ja add out jg push into mov js mov repz xchg inc pop dec fistpll cld add in popa repz popl xchg ret and dec outsl add lcall lods in sbb cs mov dec stos pop dec mov insb dec out cltd (bad) sbb aam pop ret jno xchg add push cld int jge in cmp jl push inc jb jle add ss popa into jne adc inc out add popl scas lahf cli sbb les (bad) xlat xchg fs add inc repnz (bad) xor add push xor outsl fiadd xchg sub mov pop lock add ja std push cmc ficoml lds dec add loop ror daa add xor dec pop lods adc dec sti lods jb add scas iret push adc or mov in (bad) bound add dec scas adc or push loope ss xchg jle jne push adc xchg arpl lods add pop out imul test sub cmp xchg push inc ljmp icebp pop lods inc dec cmp ret jb add pop ss mov rclb add add add xchg add inc xor mov pop add mov add lds pop sub jb rcrl jp add add sti xor adc lods add leave xor xorl push (bad) mov in aam enterw fs rorb or jecxz mov jb add pushf rclb cmp jg sbb mov mov lea aaa out xor loop mov pusha scas std cmpsl or sarb and inc add xor sub (bad) int and dec pushf lods in mov fisub xchg insb xor cmpsl iret inc popa xlat out or test lret in xchg pushf inc push mov shr sahf mov add lods call jnp mov inc inc es (bad) iret jge jbe cmp gs xchg mov sbb imul test add sbb mov dec cs repnz jno fwait ror test sbb pusha lea mov pop cli pop aas negl frstor iret int imul mov inc inc jp icebp dec loope jp (bad) movsb shll mov scas jmp outsb or lcall add cs mov aaa push push jno js inc pusha cmc add dec jne ffree loope adc fistl lret in roll jns push xor ljmp and dec enter pop jne mov mov add popa mov movsl cmpsl push xor sbb loope cltd in adc push mov cli or push push jnp pop add mov pop add sbb add in int lock adc mov mov ficoml adc test sbb insl sti call arpl daa push dec lea dec pop pop xchg outsb into adc xchg addl push imul movsb shrb enter mov lret bound mov adc xchg test dec fnstsw lods xchg repz test add scas add add xchg ja inc out idivl push add cmp jo push rclb test jnp xor pop scas push arpl cltd xchg mov cmp (bad) test (bad) arpl xor js bound imul add fiadd in cmp xchg lahf pushw loopne adc and js pusha add adc mov in xor jle dec hlt movsb rorb add push dec push add jecxz push js lret addb mov cmp mov xor fadds add shrl xchg aas insl add dec jmp cs jnp mov pusha pop imul outsl mov jp movsl jmp pop add or je xchg inc xchg repz rorl dec stos test ja xchg out pusha insb pop pop xor add nop fstl mov dec xchg (bad) push icebp add scas lods popa mov lds fs push xor cmpsb add and cld sbb push adc sbb xchg aas push rolb mov ret dec add out and jl insl cmp js mov callw sub sub push clc icebp xchg daa jb out cltd add aaa sbbb nop loopne sbb ja enter js mov lret lahf fadd sub mov pop jg jle add inc iret jae push in push das mov cmpsl fadds xor sub jle cmc add dec sub mov add xor push orb inc lods add bound push push cmp mov add cltd stc jbe (bad) adc add (bad) cld movsb add cmpl lods negl xchg (bad) or sahf mov jp xchg pop (bad) popf push in rclb rcr add sbb xchg cmp iret mov mov dec popa inc jge cld xor add out mov orl je idivb push push add mov test dec out jg (bad) out add add mov incb sub fsub pusha jns cmp jle adc (bad) mov sbb push mov dec adc fisubl add push stos jl add movsb insb inc iret popf or mov sub (bad) pusha or call mov pusha mov cmp leave inc repz mov xor xchg in lahf icebp jecxz clc mov les adc rcrl mov out bound (bad) mov add daa fwait mov and cmp jecxz in dec aas lret mov (bad) mov sub cmp xor imul sbb xlat add rorl add (bad) jne xchg movsb add mov out jmp xor push pop scas pusha sbb into pop ljmp movzwl stos test add add movsw ljmp or add roll and divb jp add lret fsub or push push cmp outsb mov aam popa add inc mov sub pushf jae inc ret out xchg sub or add orl mov dec or push (bad) xchg xor (bad) repz cmp jmp ret add aad mov jo imul pushf outsl loopne add ja js (bad) mov lea mov or xchg xor mov insl xor loop dec add mov mov cmp loopne xchg xor insb nop jl or pop push scas scas clc sub pop ss repnz add sbb mov add loopne inc pop ljmp mov sahf xor data16 add fsubl lret pop xchg push fcomps xor ret push dec gs pop lea xchg pop xor pop test lods in rorl cmc lds jge sarl pop test lfs test adcw fld xlat pop out add jmp shrb xchg xchg clc cmp mov jo mov add setbe pop jge inc pop out sub lcall popa adc sbb test lods add out pop cwtl xor xor clc aad insb (bad) je movsb add lods jno add pop push es fild (bad) push ljmp mov in xchg arpl xor cmp ret fs jbe add pop adc mov jo nop fwait enter inc and jmp das inc addl add cld cmp push stc andb and push jle inc subb xor dec add scas mov add or add dec push inc xor sbb sub jo mov xchg mov jle jge cmc add adc add xor push or cwtl add nop dec dec out (bad) push pop clc jbe push add ljmp xchg outsl xor or xchg inc ja add add outsb add add xlat ret and test add data16 inc mov xor add adc adc mov cmp mov adc pushl js xchg imull fwait cmp push into add pop push push sbb aaa mov mov inc loop lods stos fildl in gs jb aad jmp inc fucomi xor dec adc aam cs ljmp je sub in mov bound mov insl ljmp sub xor jg (bad) test push cmp bound jp ret ljmp cmp add sarl pop push sub xchg arpl add or and (bad) jno and hlt xchg dec ja,pt dec xor jmp movsl aam add fwait ljmp jp clc add and xchg fildl sbb test add push outsb mov lahf in std add xbegin add push mov call pop and mov add int3 jb adc add sub outsl xlat sti jl (bad) fs imul push mov cld cltd sub pop fs add xchg ss xlat aam outsb push in mov mov cli pop pop push add mov ljmp push fnstsw sub test xchg xchg mov out movsl push xor movsb push sub push test cmp mov (bad) push ss add into icebp or xor add push and xchg jbe rcrb and and mov or mov mov jbe negb je add fstl xchg cmp in call dec xchg jno mov pop or lds and pop pushf adc fwait push add jae xchg add pusha sub push fildl or into xchg fsqrt imul jle xchg jge add mov and jo xor cmp xor pop rcrb sbb outsl push leave add dec stos bound xor pop dec rcll add jno sbb lods jmp lret aas inc ficom push add jne (bad) lods mov jecxz jp pop add nop popl dec push cld in divl pop push inc xchg stc mov cmp jle popf stos push inc aad sbb cwtl lahf enter inc (bad) lods or dec xchg push mov xchg lcall jg aam fiadd add or (bad) push mov cmp out movb shrl push das push faddl pop jg push ss jnp and test std inc dec and add lods or or push fnstsw cmp jl (bad) sti or add push mov pop test scas imul test xchg mov mov iret test jo cmp sbb andb ret shrb add cmp jnp pop outsl push push roll sti adc push add dec pop sub adc adcb fs mov mov sbbl pop stos mov subl ret movsb sbb pusha and add cmpsb (bad) out lret stos add cmp and data16 pop das xorl bound cmpsb shrd add jnp fs xchg xchg jmp add std cmp jg ret cmp add xchg sub rcl mov pushf lea pop jmp sub or lret cmp mov cmp lds push cmpl xor mov aaa addr16 mov push les xor lahf push jl adcl scas fidivl lldt mov add test adc mov mov lea adc add cmpsw lods mov push mov jo mov sub pop outsl or jne rolb add lcall xor dec jno fwait aaa pop push push sbb push xchg shll jne sub xchg aam fnsave add sbb jne sub jmp loop add insb es xor jo add sbb add sub jnp add loopne mov cli sbb int3 jl std inc pop fsts mov testb scas add or add adc push dec leave sahf inc adc arpl aaa mov xlat xor and and je cld xor leave mov adc adc and test pop push subb inc mov add (bad) mov add xor pop mov insb mov push mov roll (bad) fwait in mov pusha loope aaa movsb pushf cs add leave cmp iret fldl and adc cs dec xor adc adc jle pop adc (bad) mov jg pop in arpl add mov test and xor sub xor xchg cmpl repnz sti mov pop pop lock out std (bad) pop fsubl dec mov outsb dec das xor mov add mov cmpsl pop cmp adc add jmp add cltd cmp subps rcrl aas cwtl add pop lahf and add xchg (bad) lgs in rorb xor std push pop movsb pop sub insl jb adcb fdivs ss push gs mov adc (bad) cli push push sbb dec mov add pop cwtl lods cld movb inc xor addl and mov sbb add jbe fisubl xor xchg dec addb pop mov inc add dec test xlat pop cmpsb add popf sbb push mov pop stc imul pop pop jae repnz xchg insl add xor add insb enter int jns movb pop cmpsl cmp inc inc cmp mov aas imul (bad) mov orl add adc xchg das mov arpl add mov fadds push push (bad) dec xlat repnz lock mov jne sub dec test mov jae push enter test (bad) add decb add cli push jne sbb and insb inc incl ds (bad) mov roll pop sbb fisttpll mov stos pop int3 mov jmp incl sub mov xchg lds jbe aam jle dec add inc jb mov inc jae jp mov push adc aam mov cs sub aaa orl cmp push xchg mov repz jle movb mov sbb xor popf daa mov mov jne pushf outsb dec pop mov pop adc push mov dec dec xchg add xchg sub sahf adc jg add sub mov and add (bad) pushf mov js or cmp add adc or sub js pusha imul sbbl add inc aam or dec add cmovns add inc inc push xor out dec mov test aad adc cltd xor (bad) mov add test (bad) jb (bad) mov push jno in dec inc cmpb int pop lds push (bad) mov sub dec push pop add pop xor inc aas enter test mov or mov inc mov push add add pop xchg add pop mov outsl jg add push lret and adc rolb ja add jecxz repz cmp popl or lret rolb jns inc pop adc loop xorb and subl mov aam pop add sub stos and pop add cmp mov add mov jmp (bad) add push xlat fldl push aad mov jge loop add loope sub pop push lds mov add or jecxz xchg std sbb xlat sbb xor add call fbstp and daa adc jge add sahf push adc sbb sbb aam xchg inc cmp cmp xor or mov add push adc hlt jo mov ja fwait pushf roll jle subl pop inc inc xchg and jae clc dec or cld cmp lahf (bad) xchg std sub mov inc ret (bad) outsl sub (bad) cmp add sub mov repnz pop add and add stos in add dec jne xor add cli or add ss add xor hlt dec adc js add mov cmp pop faddl roll jb pop add fsts ljmp push xchg pop push inc in and cmp pusha push cmp xchg add lods and xor mov pusha ds pop call sub adc mov (bad) xor push iret outsb shlb add insl loopne add xchg add std jge,pt adc int rolb push scas cs add lret (bad) call add xlat daa shrb leave push fwait add adc sti fldt sbb imull hlt push loopne mov out adc jge add loopne mov add aas test js add mov rclb (bad) loopne stc test add addr16 or loop push dec sub pushf in pop hlt dec sbb int3 clc les push adc and dec mov aad pop push cli bound js xchg jbe pop jl jno fmull test add lahf xchg jp mov adc imul sub push mov pop jns add pop (bad) jns adc rorl cs sub lret add pop push enter add int3 repz xor scas mov xor push mov pop inc lock or fwait sbb jp add cmp loop adc xchg mov xlat pusha add jb popa sub and outsb test cltd bnd add mov sbb dec push pop cmp jne add jmp lret jge or xor sbb imul pushf lret sbbl pop mov into jge push insl xchg mov xorb pop or incl ljmp mov cmp sbb dec jns subl jl mov mov iret push mov mov xorl lods pusha mov add (bad) mov pop repz clc xor mov jmp adc xchg roll lods push mov call add xchg push sbb test add mov inc sbbb mov push jns imul xchg daa js out sahf rcll pop loop js loope add xlat sub jne and fldpi and jg fadd sub add insb add inc pop das sahf inc test dec scas (bad) push inc andl adc in inc or sub dec dec call sbb leave mov ret orl in outsb data16 add outsb ja orb dec push pushf xchg es sub cmp adc mov inc ret lock icebp out mov or out sbb cltd push mov fwait add cmp adc xchg js subl mov dec data16 add dec addr16 xchg inc movsl lds add jo dec sbbb nop push (bad) pop dec sub stos stc lahf mov mov jmp aaa jno arpl aad add mov mov data16 stos push cmp push dec mov sbb lret stc pop xchg movsl xchg pop add js insb push push add and xchg xchg jge jecxz dec (bad) jp mov cs in jle add lret test xor add fwait cmp add mov daa lods xchg (bad) mov mov ja pop push add daa rcr inc sub std add push sbb jp fsubrl adc rcrb (bad) mov out je inc call jecxz add inc push mov cltd add dec icebp sbb xchg dec add ss jo inc xorl cmp jae mov and cmpl insb adcl xlat int jl loop add inc adc movsb stc push add decl int3 popf pop xor add jle scas jae mov das inc aad ja sbb pop lret pop add in dec cmp xchg and mov push jo repz or add lret add inc mov jbe es add lret aas or jno shll daa xchg add sbb jmp mov jns mov int imul xor jecxz aam inc outsl adc cmpl jge add stos inc mov sbb push mov int3 add in mov add jbe jno xchg add cld push call inc jo ret xor fwait jg ret cwtl aas push imul int xchg jae add or and xor lea bound add adc jmp ret test mov dec outsb add fsubs cmc adc inc jl pop inc sbb fldl cld sti test add inc or jecxz lcall pop or subl gs pop test (bad) jl addr16 push (bad) xchg shll or divb adc lock test sti push and aas sbb mov mov mov xorb push inc (bad) fwait jl call pop rolb jecxz pushf in xor outsb loope add popf jge and sub dec or adcl js xor aaa mov rolb sub ljmp push or out negl add xor aas (bad) ja add push and or add scas pop aaa and clc leave add bound int shlb mov enter bound push fstpl mov or and popf or jg fstpt mov pushf add stos push psllw sbb gs setae and insl sub push or movsb in cld mov test shlb dec lahf inc xchg arpl cmp add cmp lods cmp sbb lret jl std sub sahf (bad) pop lods jle xorps pop and add or xor sbb jle jge jb dec add pop or cmp in add sar cmp das rep lret std inc inc popa sar cmp push add cltd arpl add xchg push mov (bad) sbb add sub fldl call jl fildl sbb adc xlat and rolb pop jl mov out mov mov inc ja jne test call fxch (bad) jl adc sbbl and insb or loope add (bad) rclb inc xchg lods les dec cmp mov js sbb int add lret arpl (bad) jl sbb adc add js inc dec test cmc psubsw inc cmpb cmpsl inc add mov outsl or or cmpsl les dec (bad) loopne insl scas mov xchg inc adc mov pop jbe push mulps loopne xorw cmp xor pop mov out push arpl orl dec and jp add movlps add lea cwtl stos push add xchg mov jnp add xor lcall jmp pop (bad) cmp jne test cmp adc bnd test add pushl es fs add jae outsb lret pop into jnp pop jl mov jp (bad) jo sbb add mov add sub push jp (bad) xchg sbb dec adc jo or mov fsts mov dec cmp xchg and mov add sub icebp sbbb lret pop dec (bad) loopne add inc push adc xchg pop add jle ret sar sbb xor or jp pop push ror addb cltd jb add fwait pop into xchg mov dec std in push xchg in (bad) xor push add pop (bad) sub add imul sbb ret cmpsl mov addr16 sub add ds inc nop mov or jae popf addr16 repnz inc sub dec ja fwait mov jmp sub pop cwtl lock jo xchg push dec sub das lods stc inc movsb push add sub aas jmp mov sbb add and or sbb mov push and inc add xor repz push or popf inc add adc out repnz mov in xchg aad lcall and jge add push out or aad repz cmp mov loop ja lret outsb add mov mov add shrl test or add addr16 daa xchg mov pop xor add (bad) jecxz clc pusha mov call inc cmpsl add and scas pop aas repnz mov or nop mov (bad) mov or push pop xchg out sub (bad) ja xchg fnstsw fnstcw pusha fldl pop stc or test jae sbb scas addb cld mov add push sarb jmp or repnz loop xorb incb fnop (bad) stos ja or faddl andb sub mov sub and dec bound stos jp les sbb pop outsl mov ds sbb pop inc jmp add das sub push and int addl sub add int3 addr16 sbb add add and inc pop or mov push pop dec outsl pushf add sbb dec loope,pt cmc test in out out scas cmp test in loop lea mov jne andb insb xchg mov jmp shlb add pop addr16 add int hlt sbb cmpsl insb sbb push cmc push mov adc in mov cmp add adc mov test (bad) (bad) sub stos cmp pop push jbe std stos rcl add dec in aas jns jecxz lcall mov mov std (bad) flds mov es jmp mov js gs jmp jge adc add or imul testb mov iret popf mov (bad) mov pop fidivl sarl inc sbb add (bad) add cli addps fadds nop push inc and in jne ds adc fiadd andl rcrl je push jne sub add fistp add cli jno cmp add sub adcb aam rorl mov xchg jge adc dec (bad) repz arpl sbb (bad) xchg mov add jnp (bad) xor xor jp nop pushf (bad) lret or dec (bad) and add push mov push jb imul and aam mov add xchg push outsb jo shlb push loope,pn lahf adc add pop (bad) fimull mov add jo je lods xor push pop fadds aam (bad) lods cmp mov rcrl pop aaa ss pop push flds jl or fildl lret int mov or lds sahf mov jg call inc js das pushl mov mov jmp in adc mov inc add je fmuls and pop adc ljmp and jp dec push ljmp test xor in addl loopne mov push push and adc jo jns push rolb add xchg sub mov out push push pop loop cmc add and xor mov dec inc and push add notb jg dec inc les inc pop icebp ret push out push add dec imul subl (bad) ja std insb or push xor mov (bad) out pop sbb add xchg pop pop inc insb push add scas or pop jecxz push sbb xor pop inc xchg pop data16 cwtl sub int xor add lret dec sub push xlat xor cmpsl add loopne (bad) fimull sbb iret lds cmc bound faddl lods add das push dec mov mov inc fs call daa repnz insb jo add out nop xor leave lods add (bad) dec xchg add in clc pop adc adc fcmovne dec add repz or inc mov mov dec or aad fdivl add add cld add jl repnz icebp leave inc add add ss and dec jg pop mov in int3 repnz clc lods jne push push andb jbe pop add inc popf cmp aas lods mov jae inc pop dec sub (bad) sbb mov add cwtl or mov lock and cmp movsl ret mov sub bound mov (bad) or cmpsl (bad) pop add jns (bad) mov jle (bad) jecxz jg test add cmp cmp addl add sbb fwait mov into mov add mov mov sub outsb mov xchg jne test sub add xor adc mov push fldenv add (bad) cmp loope testl xchg pushf mov ror mov popf xlat jne adc sti push add cmpsb daa ljmp testl loop imul addr16 lods enter loope dec fisubr mov (bad) jno lea imul or iret push jb les (bad) fild rol mov add repnz push xchg xor add in lret sub repz cmp add xor rolb jecxz lods out mov or repz adc fs mov and pusha dec add pop jbe push jp inc mov sbb cmpsb bound pusha ds add movsl pop loop mov jmp add pop xor idiv in add adc cmpl out adc add fcom add push cltd outsb lahf ja js ss or adc sub push adc repz sbb mov mov jne daa jmp pop add popw pop jp outsl inc lcall pop (bad) lret test test sub jl and push arpl mov pusha mov pusha addr16 clc pop cmpsl add adc adc bound iret xor test push sub dec xor js add arpl pop add (bad) pushf fdivrl pusha or sub mov cmpsb and (bad) (bad) cmp enter pusha add adc test call inc add out into xchg add enter popf dec jo cmp gs add sbb pop add and adc mov push xchg and fiadd int3 push cli lods push pop add pop ret push fistl pushf test add add inc sub sbb mov sub mov mov dec or add xor sbb add cmp mov (bad) lret or adc cmpw aaa xor les aad jl add push sarl ret add mov loope iret ror pop add lret jbe sub lock pop inc je cli add (bad) or push jnp add pop inc lret out testb aas cmp cmp je xchg insb xor bound fnstsw or les aad add mov (bad) xlat andl pop fmull rolb test fisubr adc lahf lret mov fbstp add (bad) daa sub dec xchg mov mov test (bad) adc int insl pop (bad) test pusha fnstcw scas add scas mull xor dec sub xchg test mov inc sbb inc pop jo rcrl add mov popf call xchg (bad) dec lea in jecxz lods and das push jg mov inc adc add mov into (bad) sahf push out adcb add mov (bad) adc adc cmp dec pushf dec test nop ja imul mov iret mov add fstpl mov rolb or push push pop fild mov adc dec add adc (bad) (bad) outsl jmp ss add jno pop dec sub stos lea adc pushf and and push loope shr mov pop andl cmp or add ljmp adc je bound jl movsb js push add in je rorb outsb (bad) jmp add stc inc xor std cmp sbb mov push addb adc push cmpb cwtl out mov jb incb or je leave mov negl das cli inc xchg mov in nop aaa xchg jae fidivl xor loopne xchg bound sti pusha sbb push imul fcmovu push pop pop add adc fcmovnb lret sub (bad) outsl push jecxz ljmp cwtl fisttp mov and inc aad addl inc adcl inc xchg ret je in pop add frstor push hlt mov push mov add xchg ss add test adc or sbb arpl popf (bad) roll sub std xor loope cmpsl mov addr16 mov jmp aaa add cs (bad) push sbb les add repnz fsubrl sahf shll std mov sub ss pushf pop cwtl adc into dec xlat nop cmp (bad) jne and mov xor dec add (bad) or xor add sub sbb cmp xor (bad) lret lock add imul mov push mov aam add xchg lods popf cmp scas push (bad) mov add je pop ljmp scas add out pusha cmp pop xor sbb arpl inc add in aaa sbb xor pop das or in adc lret mov and cli andb stc js nop mov or add jno mov cmp hlt popl sub mov sub and add popl addl xor je and (bad) xchg mov dec add in mov sbb movsl pop cmc push pusha imul jmp pop stc lods shll jns inc pop sub fisttpll inc inc fisttp add adc mov sub xchg cltd inc jp nop add out jg add loope dec push push adc add scas xchg (bad) icebp jmp (bad) leave sbb mov mov mov add int3 enter les cmp fistpll add and add and pop loopne dec es sar push aas mov (bad) insl add cltd repnz or xchg loopne fmulp dec fwait daa sahf mov out addl js mov pop mov into jb push add xor es xchg in sti push mov stc add lods push (bad) hlt mov mov add add add leave ja xor cmpl inc or add dec dec movsl sub daa (bad) addl jns add js add lcall out cmpsb jnp sub add pop popf jecxz aam add push fildl jne in (bad) dec imul mov std daa out jae add add js add movsb or add fsts ja cmp inc fnsave popf xchg cli outsl ret add pop sub loopne jle add arpl int pop out into popf jl add inc xorb jo,pt icebp scas nop xor insb jmp fmuls pop pop sub imul push test test pop jns add xchg inc xor les popa es pop loope inc std dec sahf add scas lcall jo sbb jmp or mov sbb xchg dec or aaa fdivrl sub sub je fildll bound int cmpsl out lcall xchg add imul add mov pop add aaa sbb mov lahf add rcl adc mov xchg iret and mov cmpsb adc add mov pop outsl sbb add xchg bound dec out fcmovbe out xorl insb inc or jmp jge mov add push and adc hlt cmp cmp pusha adc in add xchg test mov cmpl inc inc cmp add pop inc mov add lret dec outsl sub mulb mov out mov notl xchg fs imul sub dec jl (bad) cltd mov rolb mov adc add inc add mov aaa jbe jns add js icebp add push (bad) fiadd repz push push lods cmp pop scas (bad) inc xor addr16 mov add inc dec test loopne add xor jecxz mov repnz les sub add jo jnp and and mov push jg jmp dec insb cmpsl add xchg push dec mov add cmp mov mov outsb jge jp out loopne sub xchg jb mov pop mov push inc sub aad xor xlat push mov lods add and subl cmp outsl xor or add jns mov pop add jbe add and les cmp orl mov add mov or xor setno sub inc ss lahf scas push add lods add std cwtl in add pop sub add xor (bad) in js stos add jnp dec pop outsl fcomip andb push (bad) je jne aas test leave push jge and xor or pop jg dec mov sub pop into cmp xchg sbb and andl clc inc pushf xchg xchg add dec dec cmp ror and loopne ja aam (bad) lea push sub dec xchg sub lret aas xchg sub incl rcl and mov cmpsb push add mov idivb cmpl add lahf dec mov mov pop pop cmpsl js add bound xlat popa pushf arpl fsubrs in pop add dec jno cmpsl jae add sbb ret pop outsl xlat mov test stc popf pop dec mov sbb in push dec sub (bad) or xchg mov (bad) mov enter xor data16 cs aaa in subb push outsb in mov aam inc int3 in bnd ret out and push shrb push clc dec xor pop add in push lahf popw cmpl mov or adc sub jb loopne dec sub cmc pop xchg fisub mov sub int pop lret movsl pusha mov loope pusha add xchg ret sub add cmpsl repz lods push jg dec sti sub test sbb inc movsl popf xor push pop (bad) inc les xor adc add pop dec enter xor adcb (bad) or test into insl jmp scas mov int3 nop add xlat jno lds xor add ja ret add mov add push mov or mov (bad) add movsl jecxz lock nop jp lea jne pop pop movsl push mov add lret push imul sbb jns ds add cmpsl arpl cmp push mov lahf jge sahf add cmc dec ret or mov sub add imul or loopne les cmc jl xor inc adc test add das mov mov cwtl rorl daa or dec adc push loopne xchg add cmc (bad) fldcw inc add cmpsb stc ret arpl add push mov cltd and cmp pop xchg jo stc and inc adcl fs (bad) mov jl and lods and aaa stos and push sub add stos sbb sbb andl fistl pushf fadds xchg jae push pop fild aaa jp adc loop pop mov out and inc add fdiv gs add push fcmovb add (bad) cmc outsb lahf xlat and pop push cmp ds xchg mov addl hlt xchg pmullw scas cmp dec aas mov rol push add xchg cltd xor subl cmp (bad) shrl inc out xchg sbb mov je jbe inc es popa lahf cmp add test sub or jno mov adc or xorb mov xchg dec rolb cmp or ljmp sbb addr16 cmpb cltd shrl cli in mov push popf rclb test inc fwait mov enter push loope (bad) stc dec jno xor loopne aam dec adc add fmul mov or sub inc adc sub (bad) jg mov dec pop cmp pop mov sbb pop out aas cmp incl scas mov sbb add popl je in dec add xlat imul adc lock ja pop fsubl push add inc or sbb add xchg inc ljmp push xchg push loopne push jl decb insb push mov addl lds mov loope enter adc inc std mov jg insl shrl inc inc fiaddl int3 bnd setae cmpsb frstor mov sub aas jl mov xchg andl lea and xor jg xor sbb pop add inc lea orb sub sbb jmp mov cmp cli and dec sub mov imul dec dec cmp mov mov mov sarb inc in scas mov push push push inc jmp test xor rolb rcr add out enter adc mov mov imul int3 (bad) mov inc outsl or jmp add addl add call cmpsl jg sub mov data16 add xor faddl pop gs mov daa cmp jo mov mov rorb popf and mov popf sbb les push jl add ret dec inc lods mov orl mov and add ret push xor mov add insl sbb repz dec add and (bad) cmp inc pusha sub (bad) in iret cmp rolb pop add sub cmpsb add daa xchg adc jo outsl xchg fmuls and add in dec sbbl aas frstor inc mov adc (bad) xor sub inc mov lcall lret lahf sbb sbbl stos js add or sub xchg push jo xchg lods adc sub jno and addr16 xchg jge std aad sbb fsubrs inc dec mov mov lds clc push push xor pop shrl mov or movl (bad) imul add out cs fbld in lods jl add fnstenv cmp push decb in push and pop sbb mov adc or lret repz leave adcb xor sahf mov push inc lea jb mov xchg inc insl pop imul mov sar pusha pop lds test xchg jo and (bad) ret add dec pop pop daa adc cwtl insl push (bad) cmp das dec not sar add or pop aad mov xor xchg inc cli cmp cmc push rolb into mov jl cld mov movaps outsl xor add aas add xor push jne imul pusha jle ljmp jns aam sbb add test adc ljmp imul dec xchg add inc mov (bad) xor rol sarl and add mov int mov mov pop jge jno sahf mov inc pop pusha inc xchg movsb loopne sub add icebp lods hlt (bad) xor push cwtl cmpsb or stos lret movsb sbb ret mov nop push pop push repz push call add mov mov adc mov and xchg test add test add in mov mov sahf fsubrs popf add cmp lcall or scas xchg jbe pop aaa movsb push lret dec hlt pop add pop mov jns cmp cs imul inc inc in scas add and nop xor imul cld das push insl xchg or (bad) cmpsl sbb push in (bad) test dec arpl aam int3 notl into xor push add std scas add mov pop push rolb imul in das add jo int lods cwtl stc add and into dec int3 call add dec push es out in arpl jo pop cmp sub pushf lds inc out pop or pop lock pop sbb xor push movsb (bad) cmp sahf outsb xchg adc add sbb and push pusha aas inc (bad) aaa xchg add movsl add lahf mov addb jb js pop cli imul inc add les shrl xchg add dec lahf je jno pop add sbb mov add xor mov (bad) (bad) jb and movsb cs icebp add fwait into bnd addb push jo repz jb lock in imul jl mov mov jl xchg add scas push push vminss xchg nop sbb call pop inc inc add test adc adcl lcall je add jl (bad) mov cld inc in adc stos scas cmp add jle mov sahf or or ss jns adc nop leave clc mov inc rcrl xor orl movsb ficompl add ret or add xchg shrb mov mov fidiv add mov aad push lahf dec add outsb ds add fnstenv add les push add dec pop pop outsl add bound and std sbb adc add inc or mov cwtl out add aaa mov adc pop cmp out (bad) mov mov xor cmp push lock mov push add nop xchg testb cmp or jb add ret rclb ljmp xchg (bad) leave imul scas cwtl jge add mov iret inc push mov mov or orl adc das add mov str fistp fidivr out mov fcomps or push mov cld fidivl pusha xchg es in jne pop mov mov xor icebp xchg les jle clc fsubrl add icebp loope insl bnd (bad) add pushf rcr stos pop faddl inc add insb xchg mov aad cltd mov add scas cmc push add fldl2e outsb mov (bad) cmpl orb scas cmp add adc sbb add or add push (bad) lret inc push add into lods sub decl push sub sbb je jle out inc ret fwait pop add into (bad) out fild pop jg movsl mov adc or jle icebp jb lahf dec and daa movsl ss lret or fwait data16 jns es aaa push xor adc ljmp insl shlb aad add out cmp loop inc nop es add gs iret sarl cmpl push push inc push andb and loope add ja test rolb aas cmp dec push inc mov jl pop mov xchg pop and push in andl add orl sahf xor pushf sbb pop sahf pop mov sbb adc mov pop loop mov int mov fwait jmp push add push test mov addl push sti je add inc outsb mov add aad xchg add push sub cs ja mov mov push popl imul push add loop add dec or or xchg push jne mov test lds xchg roll out pop (bad) jecxz orl xor fnstcw mov jno lcall insl test jg mov fwait pusha data16 clc jecxz mov (bad) mov daa ja cli pop add adc enter test mov je pushf mov pop ds xlat add pop outsl adc adc popa daa rorb pop inc jb or mov enter test outsb sbb subl popf xchg adc mov jge add ljmp and sub sbb and fstpt add gs lahf hlt aam cmp xor push sti pushf adc push and add mov xchg inc pop jp insl add jmp inc inc rol cmpsb daa add mov pop add pusha add sbb test pop pop dec sahf lea jle je or dec in mov test movsb pushf aas dec cmp jmp add add into lea sti mov cmpsb loopne lret sbb adc negb (bad) jae jl or sahf imul mov pop mov add adc inc arpl xchg add mov xchg adc jecxz cmp xchg jbe xor add add insl int out std cmpsb dec add lahf movsl add jg sar add adc in das nop xchg repz jle sarl mov scas jnp mov dec add xor adc xor cmp cwtl insl aam stos into stc push jae mov push movsl and lahf pop add xlat out flds pop push mov js and mov add dec mov xchg mov add add mov pushf add mov xchg jbe je add gs mov imul ss in jmp jp outsb inc pop out cmc ret mov bound dec add mov inc bnd cmp cld iret sbb gs cmp sub aad mov jmp jbe inc out and imulb into aad pushl dec out mov mov pop das clc add cmpl adc aas das push add pop add test mov loop movsl add iret loope or mov cmp adc sub xchg add sti xor fs addr16 jp pop (bad) aaa loopne adc sbb in sahf aam add xchg repnz cmp mov nop test add lods inc jae fldl fadds call jp out push push pop pop ja push dec sub mov scas jb xchg cltd xchg add std xor xor icebp (bad) divb pop inc add dec mov xor ja sbb cmp outsl add sub ds xorl inc push xor push mov ret pop xor sbb lcall push mov adc addl inc into mov xor inc es rorl sbb addr16 jns jmp bnd cmpsb rsqrtps out inc cmc cmp js mov cld sahf push lcall pop xchg push inc adc add aam sbb imul mov out gs add test xchg xchg mov mov pop aaa pop add cmp add inc out add lret ja mov add dec xlat leave aad dec add imul pop das sbb mov addr16 jnp pop lahf and dec orb fdivl dec mov push mov pop push movsl scas inc sbb popa (bad) jo push call mov cmpl pop cwtl mov aas push jge add (bad) and (bad) arpl pusha jne lods dec flds push xlat pop bound add sbb push xor add xor add mov flds cld lret adc lock int movsl (bad) xchg jb faddl mov stos push call fisubrl jg xchg imul mov insl add sbb inc dec mov mov cmpsl mov test outsb push icebp add inc out push mov loop pusha out pop pop inc add ficomp sbb ds mov jle inc mov sbb or fwait xchg mov push mov or test sarl movl mov mov test push add shll ds insl das xor add stos nop inc push (bad) cwtl add add jns imul in test pop cs mov jmp out leave adc in addb in cwtl cld mov movsb popf xchg inc lret push mov inc daa data16 inc (bad) mov mov nop add add setl enter add cmp pop add out scas addb ret fsubs cmp sub adc adcl add fildll dec jne add xchg push jecxz ret mov pop pop jnp add xor addr16 mov loope push pop jns xchg pop jmp adc (bad) movsb mov nop cli sbbl sub fnstcw pop cld arpl sub pusha adc fldt daa sbb xor incb insl aaa jp jo adc cmp leave (bad) mov cltd jp cmpl or jle fwait inc sti pusha dec pop loope push push add popa scas or dec cmp jp mov inc push dec dec sbb jle push out xchg mov add jg sub or int3 add push push push jecxz in sub les cmp enter clc test ljmp movl xchg xor gs jae mov test mov add mov cmp in add (bad) test js loope xlat push push push enter inc das lcall shll mov js sbb xor fidivrl cmp pop dec inc ret xchg pop add mov add jo dec out outsl popl cmp fild inc mov sti popa sub mov sti dec mov (bad) ja mov mov ljmp sahf arpl push es push (bad) mov cmp cmp pop fbstp inc cmp aaa shlb sbbl (bad) pop mov bound lret cmp pusha outsl sub adc repz dec inc cli mov stc lret sarl movsl ret push push out add fnstsw js pop push add jne (bad) add push lock push lret and push push rolb cs int3 out xchg or aas pusha sahf sub lods stos xlat dec int3 outsb ret add dec lods and add outsb jb push inc sahf test inc inc add mov sbb and inc sbb jp daa add xor push jo push xchg test cs or test (bad) sbb (bad) jbe cli xor sarl jmp mov inc mov mov orb pop cmp les pusha xor out je mov add pop lea mov xchg add pop insb repnz lret add pop cmpsb dec mov out icebp mov adc xor cmpsb int3 sbb add adc pop mov mov fldl lock or push xorb cltd add sbb mov dec add dec popf push xchg mov lcall incb mov (bad) mov stos movb mov fcomps pop push jns xor sub (bad) add loop jp mov dec cmp mov pop mov xor sahf popa fwait mov js std rcrb add fiaddl stos jp,pt add xor das add ss adc add (bad) fimull loopne add sub and push test add ror push cmp fldenv mov cmp (bad) dec adc fist add push pop mov add lret out mov sar lahf pop lea nop pop pop mov pop ret in add jb fcompl add push imul or jns pop fistpll add inc ret lea repz pop mov addr16 inc (bad) mov xchg add cmpl lret cmp jbe sbb pop push cli aaa jno add inc popa movsl dec ss add lock mov mov cmp ret lods pop add add in in nop sub adc (bad) outsb pop add icebp xlat xchg adc aaa adc sub add mov (bad) mov rcll xchg add inc push out pop inc gs or cs int3 cmp add adc aaa add mov ja das jp cltd cwtl addb mov jb inc or cmp rolb add inc xor adc lahf add insl xchg lret rclb add stc push jge in fsubrl fildll inc push test pop dec sahf sarb mov cmp lcall cmp add (bad) (bad) (bad) divl fs test mov push fucomi add push cmpsl outsl (bad) in addl loope subb ja fidiv rorl insb movsl loopne mov hlt or pop jb xchg cltd push adc lock ljmp ds add imul cmp nop mov pop out and ret mov pop xchg rorl les divps movsb adc push jnp mov bound cmpsl add or stos add mov or xchg xor enter xor inc rcl jno and sbb add nop (bad) lods in ja ja cmp faddp cmp test push fcmovnb and add adc into lock add pop add or lds jle aam lcall sbb lock in pusha sub jecxz adc sub cmp jl push xor add lods int add adc subb fldenv lds xor mov sbb inc xchg jae mov mov dec insl push add inc xor and xchg lock xor add jge (bad) sub jle test sub imul adc add outsl dec xchg adc pop xchg push pop repz xchg je cld add imul fildl adc cmpsb inc subl inc mov dec add mov lods pop mov push add and xorl inc ljmp lods inc prefetchnta adc pop (bad) cmc add push mov adc sbb or aam imulb cmp sub xor ja xchg or hlt loopne and add popf (bad) (bad) adc dec inc outsb jne pop es int cld push push push xchg and addr16 adc cmp sbb ret mov popa fs jmp pusha mov add jns xor ss add shrl test add adc pop push in cmp jg add sbb out (bad) xor pop dec fcomp stos andb shll jno je les lcall int3 mov add pop pop gs aad cmp add (bad) testl addr16 popa add add xchg push movl out add push subps aaa adc cmp and cmpb bound popf add stos xchg in push int inc add ljmp stos mov je or xor cltd icebp jp jo push sub add rsm jb mov adcb and fstl imulb subb adc xchg lahf jne or mov mov jbe mov sbb push and aad sbb and scas add cmpsl out and bound dec and add cli js xor out loopne lods ljmp add fisubl addb sbb cld xchg pop cmp gs mov dec push add dec mov cli idivl adc sub into mov (bad) (bad) lcall repnz das pushf aas dec call fcomps mov int jle ds push (bad) sahf xchg add push and sub push add out repz fldl enter pop push adc je add das xor dec (bad) out jge add pop mov add mov push or loop stc cmp sbb add lcall add cld cmp add popf outsl in jg pop fdivl cwtl add push out add adc popf addl roll or and xchg mov pop imul mov out push jo push pusha es cmp pop notb frstor lea insb mov mov jnp repz sub jg mov scas ficomp add cmp outsb inc int3 xchg jo pop xchg fild mov push fadds or jo cs stc addl repz int test mov fsubl cmp or cmc pop cmpsl mov daa cmp pop mov inc inc jmp pop xor inc test dec adc rorl (bad) xchg pusha repz fwait insl xchg cwtl jnp mov inc out inc jno cmpsl add mov lea xchg jb cmpb pop je inc add popf lcall and fcoml xchg test lret add xchg jbe cmp add sbb push add mov add stc add mov push mov push xorl add loopew add lcall add mov push fsubl mov add cli pop jmp je (bad) push push dec into and jb sbb fwait pop insb enter mov aas iret into sbb add or xor cmpsb push xor cltd ja push nop add push std dec push (bad) xor add scas cmpsl jae mov xlat fwait jne sbb mov sub adcl push inc and out das jo sub out mov lds mov rolb sub pusha dec in add or and leave push xchg mov (bad) in mov pop adcl pusha dec addr16 jle dec pop mov outsb dec pop pusha sbb xchg add imul addl cmp lahf push add repnz (bad) mov mov scas dec insb movl je roll cmp add mov xor sbbl test pop daa imul lret push sahf scas jle push add jp cmpsl or jns add push sbb jge inc mov jbe dec jns jae fisttpl xchg (bad) cmp jecxz cld mov mov ja inc loop add add add ror cmp cwtl lcall add xor add push cltd add out dec and or jo pop xlat es movsl and jecxz push jp,pn add das mov test testl add int3 (bad) test aad test cli clc js (bad) fimul iret fidivl std incb cli and shrl mov or sbb or test xchg test add mov fdivrs lods xorl sub sahf sub (bad) addl sti lahf and (bad) push dec sub lods pop es fisub add repnz sbb adc aam add sbb inc xchg subl mov loop pop in or pushl inc int dec cwtl dec inc cmc es fisubrl mov xchg push mov cmp lods adc (bad) (bad) call jnp fildll dec aas xor and xchg lret (bad) popf mov or xor loop lock mov mov add xor jno das add lea jb daa add add fwait or add xchg inc cmpsl loope movsb andl ja pop mov mov dec popf and adc arpl and cmp mov push xchg xor add outsb addr16 dec fisttp jge test in addb cld sbb pushf and jns fwait das int3 shll sbb adcl fnstsw xchg push mov aas add cmp add sti mov rclb cs and inc push xor lods scas dec fsubrp add sub int3 mov rorb movl mov aad cli mov push dec push push push popa mov shll mov mov ljmp or and or jle mov mov (bad) ja or in sbbb xchg jle test xchg inc int3 push pop sub stos add subb jecxz push aam cmp loopne fstpt push sub and ror stos pusha dec jmp aas js jns adc mov scas cmp ror sub fild jb es daa xor jge fdivrs add movsl and add enter adc mov jle mov dec outsb (bad) icebp mov add dec dec push fild pop xchg sub (bad) cmpsl clc jo xchg and mov sahf es add push jecxz dec sbb ljmp out pusha adc test pop push mov jns mov jmp scas (bad) mov jnp or daa inc sbb jo xor xor pop cmpsl enter push add ljmp and mov adc daa inc dec int clc xchg sbb aas jne cmp add jl test xor repz dec pavgb lcall jns stc inc push jl mov (bad) loop movb sub ret ffreep add bound xchg adc xorl pop sbb push sub jns pop mov mov and add cmp pop cs imul cld dec inc xor dec ret pop mov (bad) cmp add fsubrl movsl lock xchg push mov cmp mov inc adc cld repz mov sahf lcall dec and bound sub xchg mov jae mov cmp test push inc pushl sbb push adc ret mov or subl je out push cmpsb pop movsl cltd sub mov or mov popf add fsubrs pushw cmpsb xchg lods sti orl xchg incl adc or sahf jmp fldl cli loop das inc cmpsl daa test shld push xor int adc push in cmp sbb jge popf iret and (bad) xchg push (bad) rcl add lods jne add fstpt push add rolb ljmp das shrl ja xrelease xor mov sbb stos sarb add repnz popa scas outsl add das mov inc cmp lahf xor add shrl xor orl out mov mov ja test cmp sbbl pop cwtl and pop lods or sti adc add lea repnz pop push cmp lahf sbb add jmp clc out (bad) jge jle loopne pop sbb outsl cmovno out pusha pop mov and ftst jl pushf add xchg add out pop sbbl addl sub dec inc int3 clc mov jbe out outsb xchg inc test dec push push add je sub cltd inc out add in push test fwait adc leave add mov mov jg fcoml mov insl add or addr16 clc or push test mov lahf addr16 fs jns add cmpsl mov mov jae add ja add out sub add lret inc sbb dec out cmp and mov jle lds ret adc sahf leave insl fldt dec scas add xchg add and test gs jo xchg movsl outsl aam mov push or sbb push popa insb sub jp jg add dec sarl mov outsl mov stc (bad) loope push add add pop and test or lahf scas add lret daa lods orl push jbe mov testl add imul jl (bad) add mov repz add int mov cmp add outsb mov jmp dec mov push add bound aam test movsl add xchg inc and sbb add das sahf (bad) aam pop ljmp jb ret repz in mov lods je fldl cmpsb sbb cld mov out out add adcl je cld pop daa das adc dec pop sbb and dec push add cld insl mov push pop pop lahf cmp cs sbb (bad) out cmp ret push das push cmp (bad) cmc xchg popf mov adc dec or mov adc call add movsb (bad) jp fistl adc and pusha pmaddwd repnz stos pop dec pop mov aam jo insb ds xor xchg movsl jo mov xlat call push push lea pop insb mov add aas mov xor fstpl popa xchg dec int cli add and mov push lods out sub roll (bad) js in je inc stos and add mov jo pop jg lock adc sbb add inc incb jae rolb push dec dec mov mov add lock and and or out sbb int3 outsl xchg adc lods inc imul add push jno fmul add add (bad) xor mov jnp xor add lock fnstenv out jecxz cmpsl pop rol ljmp pusha sbb dec xor js and cmpl ret int adc jns inc popa js pusha call movsl pop insl je out cmpl aad loopne dec (bad) mov xor and jl pusha push sahf xchg push in jle cmpb add lret push ficoml fstl repz cs je cmp aam jbe xor xchg fldcw inc jmp insl inc jge or mov mov stos sbb add stos push cmp (bad) sti pop sub test jecxz inc push loop stos sbb icebp push mov loope rcr pop out add sbb mov leave add imul fs insl dec pop or xor inc in inc mov mov dec js dec push jo pushf fadds je test stos mov or and ret add in jmp hlt cmc in cmp xchg add lret test add mov dec sti jne add push rcrb sbb in cmp js (bad) cmp xchg add imul pop divb imul rorl mov insb jge nop not pop jae mov std pop dec add fildl push and push outsb icebp ljmp stos inc and scas add sub pop dec pop orb loope cmpsb jge lcall scas pop cmp add and sbb add add mov and out add fiadd jae lcall xchg xchg aam addr16 dec neg rorb add pop daa add lret xor pop and and daa sbb fbstp mov icebp sub push mov add sahf repz xchg movsb mov test andl rol cltd and xorb or daa ljmp add push cli jnp and adc pop fs pushl add fisttpl into sub xchg mov push xchg outsl add jne pop lods or imul subl outsl push mov leave push lea add decl push inc mov lods je,pt xchg addb insb or mov push or mov jns cmp xchg push inc ret (bad) enter inc std repnz mov addl scas clc lea lret dec add fwait mov arpl add imull dec addl jle subl (bad) pusha daa mov sub add and int dec mov popf lods mov jne mov push pusha cltd and imul mov xchg rcl jle push xchg xor sbb ja add pop lret push xchg inc jbe fcomip xchg popf sbb xor hlt adc inc pop xchg lcall mov (bad) cmp dec dec outsl inc les (bad) lods xchg dec (bad) mov lret inc (bad) js mov add ds add adc xor add or imul xorl ds pop mov jo jle add sub cwtl mov mov sbb (bad) bound xchg mov lock push jbe xchg call mov leave dec or inc add mov cld adc ja dec stos pop lods add out cmp xor adc sbb ljmp dec adc cmp (bad) add loopne pusha sub cmpl je jbe jo push lcall loopne pop push xchg mov and and mov cmp add dec bound add mov add inc dec xor bound mov dec or add shr inc sahf sub inc mov out add popa icebp jo adc sbb and fs pop add fstpl adc inc leave test jmp cmp mov fs pusha mov add (bad) mov add sbb push mov add inc popf cmc iret pusha or sbb outsb mov dec (bad) jl push adc stos and mov repz ficoml push xor dec add (bad) mov movsb inc fist mov dec iret or mov xchg add dec jl mov stos sub xchg pusha subb jmp ja add test mov pop inc aas out xor (bad) or jns mov clc rorl dec aam test jmp xor xor scas loop cld (bad) pusha cli mov clc jp (bad) mov fistpll inc dec popf or inc or int3 roll push mov push add add inc add aad stos add ja mov leave adc call in add inc ret (bad) add cmp stos push enter dec pop test xchg jle pusha pop jns jmp cmp and stos inc cmp fcompl add std int3 testl jmp fldt add in sbb test xchg adc or inc addl and aam add int3 sub jecxz dec mov sub cmc xorl pop nop jb jno test fdivl int3 add lret pop cmp (bad) pop jae pusha movsl inc jno push mov in pop inc andl mov jne add shl pop sbb jmp dec pop xor xchg xor cltd in les ret pusha pop aam add aad mov gs popf fwait cli add jecxz dec sub add insl in add stos sub stos add (bad) lret push cmc mov jl inc repz mov add jle (bad) jo add add repz or lret mov fiaddl lods mov jae add dec test mov mov jl jnp mov test out jp sbb out mov fsubl inc push push jns jbe mov xor add cmc test in cwtl das les rolb pop iret cmp xchg jg add xlat pop lahf js and add loope (bad) sbb push imul fisubl ret and adc nop dec jmp std daa add add push xlat outsb pop jo sbbl pop xor adc or sbb ret xor xchg loopne add push cmpl lea cmpsb pop fisubrl testl or (bad) inc add mov jg jp in cmp aam imul sub push sti iret ret rorb inc cmpsl popl mov and mov pop mov mov es ds jmp into or mov xchg (bad) out add sbb repnz mov into (bad) or dec pusha nop insb add aas imul cmpsl cld mov xor nop sbb mov push add add push test pop stos movl inc xorl in int jecxz jns lea lahf mov lret jmp inc pusha outsb loopne adc mov mov push addb add pusha (bad) fs add es jbe cltd clc jg lcall push add push popa (bad) jo in xchg pop pop js mov mov fbld ss push hlt add xchg stc push or mov pop pop dec outsl movsb add scas rcr xchg add rcll cmp (bad) hlt push aam jp dec addl frstpm(287 push test rolb fistpll out cltd jno mov adc stos inc call mov lret daa jecxz sbb jl add cmpsb or ds add ret mov add mov add not push cmp lcall ss pop mov int lods jp das cmc fildl sti rorb bound dec nop lock mov fwait xchg pop mov enter sahf push loope push int stos pop sarb repz das push mov shl sbbl sub push leave xor cli sub sarb pop dec xorb mov fmuls lahf pushf sub pop or or push lcall jmp push xchg push mov mov jo mov or pushf push cmp icebp cmp jg gs add mov mov jge add ja mov int shrb and inc mov inc cmpsb in cmp pushf roll daa push mov dec push hlt or repnz mov js roll aam add cmp xchg and cltd mov mov fcoms adc mov add gs fstpl cmc cmpsl andl lods stos or push mov inc jae out scas sub sti out push pop sbb add mov (bad) push add dec mov das mov icebp aas stc fsubrl ljmp iret data16 (bad) jg andb repnz orl push int jp mov fidiv sub stos xchg lret mov gs cwtl lcall shlb add mov xchg and xchg es mov mov adc cmp int pushf push icebp mov jl fs aas or scas cmc fucomp cmp jne mov sbbl mov je dec sahf sub test lahf fisubl ret add cmp xor add in shl sti adc sbb push mov jle pusha test mov adc cmp sbb or add mov add popa push addr16 or jne nop movsl jns mov and mov stos pusha mov adc add insl push inc js test pop push mulb add xor subl ja add dec out (bad) or addb inc add sub pop (bad) repnz sub dec add add das mov push (bad) clc sbb lds fimul popl insl in inc std ljmp pushf mov sub jge add pusha negl data16 inc add push push sbb add int jne inc fmul aad ret push decb cmpl xchg and (bad) into or xor cmc mov lret add jno out adc (bad) loop mov ret add out pop dec (bad) mov mov inc mov lock cli leave push mov inc data16 jo fs add xorl pop sub lock jae lret add aam inc sbb test in (bad) ficomp (bad) xchg insb loope int3 inc mov pop xor je and sbb jae xor movsl loope iret insl cmp add call aad mov and bound pop or jg xor jmp inc add je in incb mov shrb aad adc add push push inc lahf (bad) fstpt test push inc jb or mov (bad) std je fs add add jb ret adc lea in xor iret mov addl daa mov push adc xor hlt jge sub loope push enter pop sbb sub ret faddp loope xlat std sbb pop ljmp mov add pop cltd pop test jae adcb sarl cmp hlt fs (bad) aam outsl aad cmp insb inc fiaddl ljmp je push add xchg sahf pushf sbb sub cmp clc enter (bad) cs testl fnstsw mov bound arpl jbe add addr16 push sub add in lahf mov int stc xor add bound xchg aam jge jbe insl dec stc push cmp int jnp adc push pop sub and mov aam or insl add test jmp cld push push mov lods xchg add fs xchg pop leave stc adc push xor push dec orl jl sbb jb sub add das cli push and adc dec mov jne sbbl cmc xchg mov leave jo or pop lods lret sbbl iret fildll test (bad) dec fistl (bad) imul pop mov cmp and push lock je sbb stc mov jg jecxz jno push push and cmp out mov inc ffreep cmpsl sub add js jo (bad) pop xchg (bad) dec mov test mov lea (bad) xchg add xchg incl cmp pop add mov imul sbb jmp push iret pop push orb pusha xchg lea test push or dec xor in add cltd stos or sub add decb add mov xchg cld push xor popa mov loope pcmpeqb add ret xor outsl ds enter ret pmuludq mov and xor loop lret les cwtl divl aad mov es xchg jecxz,pt cld das inc and andl xor xchg rorb cmp pusha cmpsl jge dec lcall pop push xchg ficomp fs rcl push ret lret or cmpl fldt push push lods sub rclb adc insb inc pusha subl pop add js daa loope mov out data16 mov cmp push xchg repz add pop xor mov and add ret jge in js ficoml or jnp lret mov enter shrb add push pop xchg add jecxz (bad) cmp xor hlt jp jb sbb push xorb jg pushw add aam add out popa xor movb adc addr16 jno dec inc pop mov addl (bad) push sbb sahf add mov andl fs cmp add insl cmovs dec es xchg std xchg daa aad inc mov sbb mov mov mov and or add mov bnd pop cmpsb mov dec out (bad) mov fistpl push jae add xor movd test sbbl (bad) add insl xor inc int3 stos jmp test add xchg (bad) jno add inc and sahf dec mov adc mov (bad) cmp loop push fucomip clc ja add add push std jmp sbb rclb xor add daa cld push add imul sbbl dec jp and push adc dec jbe lea mov iret pop mov pop fisttpll sbb sbb movsb mov addr16 mov xchg add daa repnz xchg xchg pop add pop mov dec add out nop or imul push inc pop das in mov push push fistpl xchg and xchg add sub icebp stos dec add scas sar iret mov cmpb and test pop rorl add pusha push mov xorl inc push cwtl int sub push xor iret lcall push pop imul add repnz lcall adc test push mov pop pushf insl mov push mov or (bad) pop push hlt subl js dec jl mov jb adc and pop add loopne inc cmp movl pop push add test cmp add mov andb jb push jbe inc sub imul into cmp lea jmp out add lock add xchg mov jge repnz mov addb dec sbb mov add dec mov adc cmp pop sti dec verr mov lcall cmp jg cmpsb mov iret dec cltd add jo sbb inc push add and cmpsl add (bad) xchg sahf mov push hlt jo in adc imul add jmp nop mov or pop xchg loop sbb add shll in add xorl lahf jnp subl and mov pusha mov (bad) lahf push movsl and imul push or cmp add mov push (bad) std fnstcw add sub adc outsl add inc popf insb add mov lods mov pop fisubr arpl sub daa std mov cmpl jo,pt sbb stos mov cmp lock add xor cmp (bad) mov inc and ror mov or inc insl xlat std mov dec mov inc imul push add xor psubsb add xchg mov or mov add push mov add pop imul ljmp xchg jle fsubs sar jg jo pop xchg pop lret cmp mov rorl inc lahf push dec inc add (bad) in rclb mov jae adc add mov roll push push cmc jnp ret pop xchg jg mov sahf cmpsl dec xor inc sarb adc scas jl loop inc or add lahf rcrl add pop lcall idivb add movsb stos fild mov dec aaa inc pop daa (bad) iret push mov (bad) xor in ja add roll cmp repz scas jne add stc iret lods dec or add inc push sahf arpl add loopne sbb cmpb xor inc or fistpl mov cmp pop pusha push adcl outsb inc mov jns lcall dec js pop adc add inc push cmp outsl mov push repz pop add repnz aaa (bad) cmpsl mov mov pusha mov xor jg mov cwtl lods ja inc in jge xchg cmp je xchg add pushf xchg inc popf push jae add ret add jecxz mov pop or psubd xor mov mov add pop test push cmp call mov outsb or icebp loopne nop or je roll dec insb je mov sub enter jge,pn clc mov jbe js jg and sbb ret repnz sarb fnop and shrl add inc mov jnp add movsl insb loop,pn cld test mov test push adc cmp (bad) sbb pop push xor in sub adc jo xchg stc fcoms aaa (bad) cmp std pop popf lcall ja cmc dec jns (bad) mov fstpl hlt lea xor add pop jl push add jnp rolb repnz addl mov push cmc fbstp fwait (bad) sahf add push sub idivb add mov gs adc popa add inc stos pop push les vmread inc clc dec js mov lock mov add and lcall xchg fcomp xchg push push outsb xlat add push pop (bad) add dec int outsl inc cmpl inc imul sbb mov cmp or push ret push hlt cmp add dec push mov bswap jbe pusha push xor jb mov adc xor mov push jnp andb icebp push int3 add mov mov fcmovnu sub jb inc lret inc jnp out jp add dec cmp jp add fidivr push add lods jb aad ret outsl out xchg mov xchg mov push mov mov pop (bad) sbb add pop add or add mov stos add jnp dec loope push add inc pop cld test xchg mov add aaa pop inc cmpsl test or cmp add ret dec aas dec out imul (bad) or sbb or add inc mov fisttp mov mov sub cmp add cmp sbb cs jb sbb mov pop aas cs inc mov cli adc sbb push sahf xchg pop int add enter cwtl sub xlat jmp pushf xchg or bound add sub repnz mov sbb jae xchg xchg cltd xchg jecxz inc std push inc or cmp (bad) mov sahf inc out dec imul jmp push or cmp sti and inc cltd and dec mov repz in (bad) (bad) and xor cmp loope push push and xchg lds dec xchg add hlt (bad) dec cwtl fcoml inc dec cltd xlat and mov pop mov mov mov pop in or inc cmp adc addr16 mov jo aad pop test jo shl cmp push push or push clc add xor ret fistl dec mov pop sti ret js lahf add stc push mov fiadd mov test jp add push add xchg adc clc pushf fdivrs add xchg or insb pop add adc mov cmp mov adc cmc or fsubr (bad) mov pusha pop fidivr add mov sbb dec arpl inc test int cmp es sub js add add mov int3 add imul (bad) push jmp pop mov dec inc fsubl inc push mov pop dec nop adcl mov aaa pop dec lds arpl in cmp lahf fs or enter pusha in jmp mulb clc in sbb pop ja xchg cmp sbb pop and add push jno fidivrl ds inc inc inc sub sbb (bad) fcoms stc dec jmp in cwtl add clc adc test (bad) das mov add jbe movsl pop adc add mov (bad) xor cmp nop cltd arpl add inc pop adc lea je jmp fsubrs xorb fisubrl mov gs pop sbb add xor add jecxz int3 ret lret add insb std pusha (bad) dec push in cmp jecxz pop and adc inc jle mov sub jbe ja loope adc add push inc jge fsubrp mov and js push push mov add dec lods xchg (bad) jo setb cmpsb push in repz sbb insb (bad) dec sbb scas mov fldcw cmpsb dec mov sarl or sub jbe add ret mov or xchg xchg pop hlt add sbb gs mov sti (bad) jmp inc adc xor pop stos fimul or scas clc fstl or jmp (bad) ljmp mov cltd ja add aam inc or inc add cmp jns pusha loopne xor adc xchg fwait pop add cwtl jl add cmpsl lods test sbb pop pusha dec adcl lret mov add pop jns add test mov jno dec push add adc js into xor mov pusha mull dec mov xchg movsb sbb popf mov adc iret jg outsl insl nop out jnp aas add xor add adc mov movsb pop mov ljmp xlat or push cmp les xor and dec push sarl lret xor cmc mov pop and into or lock fistl pop adc sbb fwait add mov push inc aam add jp pop imul add fnstcw (bad) aad inc lock lcall sahf mov daa (bad) out jno pop insl adc mov inc and xor sbbl lahf and dec push xchg add or stos int xor or ret repnz and push jmp punpckhdq movl sbb out adc je xchg jmp arpl aas pop inc or xor in fcmovb jbe sbb dec jge push cmpl mov (bad) fsts sarl lea jb andl mov mov sbb or std fstl push add jne gs and aam push push fmuls add outsl int ljmp mov rcll sbb imul js xchg add cld call lcall shll inc pop lcall sbb cmp js add jae add cmpsb mov mov mov out sub add insb inc mov repz add sbb roll push test fisub pop inc ds cmp xchg pushf stc cs xchg add inc push nop mov loopne mov or xor ja mov mov pusha stos (bad) xchg dec hlt add xor and cs inc push push insl sbb mov xchg push inc outsl (bad) xchg (bad) aad icebp movsb push into pop mulb pop inc jne xchg jb inc add cwtl sbb movzwl dec and cmp inc cmp mov sbb cs and mov mov xchg cmpsb scas pop aas popf add lock jae add dec std ss sbb add (bad) mov data16 mov add or ret mov jl adc or daa jp inc mov cmp mov int (bad) mov and pop outsb add adc outsl js mov mov lahf add lds loope aam fiaddl add (bad) adc pop jnp aaa ljmp mov add dec pop sub (bad) xor lods jp out aas les jl pop push add mov add xor and loopne inc xchg and push scas ja sub fdivl (bad) lret (bad) fimul xorl rolb jns,pt inc jo cmp add cmp sbb adc loop (bad) scas xor add adc mov mov cmp or push jl jecxz mov add inc lods dec loope cld loopne stos in cmpsl and xchg aam push mov iret and sbb push push js movl sti sbb cmp or dec (bad) ljmp (bad) loope inc mov lods or lea loop or loopne mov pop js and pop ret fstl loopne and or mov jbe (bad) (bad) out sub add mov aaa movsl pop add das dec add mov outsl movsb pavgb subl (bad) xor jno mov loope fcmovbe xlat cmp imul jmp (bad) pusha adc sbb pop mov add pop push sbbb mov and sub add mov lds cwtl jle arpl insl aaa imul add lods stos mov in and pusha mov into sarb popf lret mov pop jno sub sub repnz pop movsb lcall (bad) jae dec loopne (bad) js mov and jns add pop dec mov jg es sub mov jo inc aas shrl out imul sbb int3 adcb sub add loopne jge xchg sub je pushf hlt push decb push add push movsl movsb mov aad aaa scas in into add rcpps inc cwtl add sbb sbb ja cmc jo mov int3 add jl push adc cld or cmpl fiaddl dec lock pop iret movsl rorb mov shrb mov ja add (bad) pusha negb mov xor stos pop add iret aaa leave jl dec xchg add pop movsl mov xchg inc out arpl jl mov dec add mov mov inc addb roll stc jo int cli pop ja add in mov push adc mov stos add mov xchg mov fdivs into test je cmpl pop sub pop orl pop add sub sbb sub mov and pusha loopne or f2xm1 push add and std xor clc lds (bad) or cwtl (bad) adc stos hlt out xchg push adc mov fstp xchg jbe,pn ds scas xor mulb arpl add nop fmull cmp sbb sarb mov jbe orb int push xchg mov test jae inc or aam popf pop roll out inc repz (bad) or jo add pop and add int xchg jae cmp into pusha pop clc push out add les popa add nop mov (bad) pop dec and lahf pop mov jecxz push jge cmp sub inc add lret shlb or xlat repnz scas mov jae jns lret add cmp popa xor jmp mov jae jno add pop mov mov push xchg and cs sbb testb in (bad) cmc add push mov add add pop sbb xorps xchg and jl pop or clc lahf (bad) mov jns adc ljmp je push lcall jb sbb sbb jbe mov fbld pop jmp (bad) inc popf mov xchg rcrb and mov push inc test pop xor mov dec cmp jmp fisub sti mov pop scas out movb fisubrl std mov (bad) mov add lea add mov or mov xchg pusha notb sub scas and add ret jp xor jns add aad aas inc xor sbb add jp sub push dec enter pop adc jg,pt add cmpsb out test outsb dec jae out (bad) pushl (bad) dec inc push adc es jb imul adc or popf cmp xor std adc add mov dec ja add inc popa sbb xchg arpl cmp or dec inc les test incl xchg or cmpl fcmove and (bad) sub int out nop js adcl mov adc cmpsl jno sbb popf cmp pop sub mov jg jle popf mov xor cmpsb scas mov aas mov stos int3 rclb sbb add and (bad) repnz sub ffreep add sahf push lock sbbl insb add mov sahf cli jmp and (bad) icebp fbld (bad) jg add xor mov pop roll xchg notl pop adcb jl mov add (bad) or mov inc out mov xor lock xor inc inc push jno push or and aam inc mov xchg add mov fwait mov or mov insl (bad) scas in jl gs std cmp popa mov push notl xor cld mov xchg shl insl loope pop xchg add lock add in push xchg dec sti sbbl (bad) jle add orb add fnsave pushf ret or roll pop aas int and pop clc fimull (bad) sarl adc in xchg testl ret in inc adc outsl inc test pop test stos js jg add push cmpsb lea fstps push sub movb jmp inc lcall loopne sbb and mov xchg scas popa mov ret gs and sahf xor (bad) iret mov inc pop add sbb lcall pop test ds adc or xor cmp pop test faddl sbb gs xchg movsl icebp add rorb stos ficomp lods fwait push add scas add push jp and add sub rorb nop mov add insl mov call test and cli subl jmp or sti stos out test shlb cmpsb aas jo add adc jecxz jnp dec add push out inc sbb add lret fisttp (bad) clc mov movsb jns push icebp lea aaa rcrb push aas sub add loop les jns daa add sar lahf xchg pop jae sbb aam in ljmp pop pop mov or out pop add inc cmp add push lret out push push inc popf aas jmp outsl mov inc mov adcl push inc ss fldl repnz scas fcmovbe fsubs add jmp cmpsl jmp fdiv cld xor add lds mov xor movb mov incl cs sub dec mov insb xor (bad) das xorl enter pop arpl add ljmp bound out popa repnz sub add xor imul pushf xchg out and fs mov mov mov inc stos std inc mov or xchg add cmp xor xlat add test pusha fwait cmc div and add inc rcrb sahf mov pop push mov addb pop push stos add inc cmp andl jbe add add jmp sub outsb sbb outsl rcrb repz mov cmp and iret cmp sbb jo fldcw sub mov test mov add fcmovu or mov adc std sahf cmp add jp pop push sub fildl lock std mov add (bad) outsb (bad) insl add inc aaa adc pop scas cld imul add jo dec mov mov lods jno lea mov and fwait mov cltd lahf xor addl sarl inc jge fcomps stos sub xor hlt ret loopne ficoml daa add lea cmp jmp pop fsts jo adc (bad) fucomi cbtw sub aas shlb mov add out loop fdivs cmp sbb and mov mov bound dec call roll xchg dec dec jae or mov add mov fs xchg add scas xchg orl js jbe stos (bad) cwtl add or rolb mov mov sub rcrl enter xor jne add mov add cld es inc jg add sbb out inc (bad) out push add stos ja aam add adc sub and int3 test jnp add negb add out das cs add mov sub imul les lcall xchg inc fisttpl push jle mov fistpll negl loop addl xor add and xchg test movsb pop (bad) bound mov add pop in das mov add lds cs xor es mov lahf push pop inc jg xchg add leave mov xor fiadd in add pushf test jg pop add mov lcall add mov sub mov (bad) hlt movsb add flds (bad) jmp adc imul sbb cmovg icebp in pop xor (bad) cli mov jae mov int3 push mov mov pop pop loop push xchg add mov adc and sub addr16 cmp sub outsb call push movsl jp mov ret cmp cmpl adc lret add mov flds das mov or (bad) add (bad) cmpsb fwait adc test add push bound cmpsl inc jge jns ds addb inc das (bad) mov aad mov rorb cmpsl pop ja add push pop incb icebp pop push and add jne xchg jo (bad) hlt inc aam fdivs test adc sbb dec mov sub add add xchg mov pop hlt add inc dec (bad) push or inc push popf mov insb movups sub add cld jo cltd movsl into outsb add mov sub fmuls cmp fcmovu mov jno or mov cmpsl test shrl pop and jae and shrb pop test or dec add fisubrl or ds das mov add sub ljmp mov jo and aas dec inc stos push jne ja add inc push push (bad) mov leave cmp mov inc sbb cs sub sub rolb add mov adc int inc out test sub add mov jg add mov pop mov and xchg fadds popf (bad) adc push sub add insb cmp mov and (bad) xor push push push xchg add (bad) (bad) bndldx inc lahf mov cltd xor (bad) outsb arpl repz loopne pop leave into add mov imul lea outsb in mov add sub mov jnp addb xchg rorl sbb sub outsl jmp imul in les enter dec repnz adc push jle and mov data16 ret out push pusha fs sbb lahf sub stos jbe mov addps arpl loope (bad) push add sbb flds add add inc in lds jmp add ret jbe cmp add and xor push jb push and mov or dec dec add mov les push inc xchg adc mov add pop jmp jb pusha iret in add sub mov inc add hlt lock aas sar add pop and mov sarb loopne mov lret mov jle jle add lret cmp jmp aam add (bad) loope or test cmpb fldcw push add sub mov pop or jbe mov jne dec sub jp pop push verw in inc push or in aam jo imul xorb test add fnstsw mov cwtl popf (bad) jo enter std xchg das adc jle add ret lret out add push cli and ja out mov add hlt jecxz xchg fnop and pushf mov or add fisubr xchg pushf jne arpl xor sahf jmp je add xor add jno sbbb test cmp add outsb jle xorb pusha mov fwait push jae add push addr16 sahf ds add andl rcrl (bad) xor push pop sub add sti mov pop pusha call pushf mov lret inc pusha jno or sbb xchg movsb jp loopne sbb mov sub rcl ja add icebp adcl inc out sbb loop push cltd call aaa arpl (bad) fcomp pop pop stc or dec cli sarl inc sbb push es pop push add push pop jle (bad) sub and xchg rclb adc aam push add ret cmpsb adc mov xorl xchg (bad) jo xor ret (bad) jne push pusha lcall movsl lea sahf adc jg mov dec mov data16 std add pop mov push notb add fwait cmp add or das shrl add cmp scas ljmp dec xchg test movsb add cmpsb imul dec daa and adc das sub shr popf mov imul lret dec (bad) jb add mov xchg stos test mov scas adc and aas jg jp push sub int add ds imul xchg push inc adc or inc push add lea ret test xor inc inc pop mov int3 pop (bad) (bad) lret push pop pushf push out ret sub shl cwtl lea rcl sahf (bad) jo pop xchg xorl enter xchg mov div push xlat lcall xor call add add mulb hlt lods xor lcall or jo or dec mov cmp icebp push (bad) xor push movsl adc add rclb mov aas cmp (bad) jp pop ja sbb fsubr sbb mov loop ret or and pop test pusha mov add inc daa dec sahf add sti and lahf lcall pminub or cwtl sub cmpsb and sbb push lret testb jo mov add add fild daa test scas mov mov or mov stos add mov add mov xchg jle mov insb push mov adc mov jg insl out jno cmp add pop xchg out adc push add enter xor sub test aam leave lret mov or push add imul xchg push shll add rcrl adc int sahf push ja mov lods (bad) adc test dec sub jns leave add dec jnp ds mov (bad) push cltd jo fsubs mov (bad) jmp pop cmc push fildl aas jno jns cmp sarb out ja pop rcr mov cmpsl add jae dec fwait cs pcmpgtb inc rcll mov add cmpsl dec add scas xor mov ljmp aaa adc jmp add arpl mov lods dec fiadd push pop test sarb adc aam vpgatherqd push adc in mov fsubrs cli in popa cmpsl add incb cmp xchg sti mov push mov cwtl add in sub mov mov inc cmp pop sarb pop and mov cmp jnp in jns adc lods mov dec cmp popf mov (bad) icebp test mov mov or ljmp add sub ret add add mov int mov cwtl insb data16 and sahf push cltd adc push inc push pop nop das ret push push test jb push inc test ja add or add ljmp in imul movsl out aam inc push aas punpckldq or fild add sbbl pop les mov bnd add add xor cmp add pop fnstsw mov (bad) in jmp add pop imul adc jle push lahf pop movsb jmp call scas xchg dec stos ficoml sbb adc add jb popf sub les sti push pop clc scas lea int js je,pn add and daa (bad) gs (bad) add or or loop adc add out xor or adcl mov add adc fnstcw or cltd cmpl jns sbb fistpll outsb xchg pop pushw mov mov lods dec leave roll ret loopne sub cmpl add jmp sbb add leave lods js test inc sahf mov mov xor jp add xchg inc jbe or les pop pusha xor push fs movsb inc adc popa adc test mov fistpl iret test adc cmpsb outsb and roll (bad) mov test mov push iret push fidiv xor aas xor push or pop jb dec pusha (bad) gs add adc add fdivp movsb imul lahf mov lea inc mov xchg jmp dec ret les lea jg lcall push (bad) sub (bad) mov jbe inc shrl add mov sub or inc rcll ret aas mov fbld fwait cltd ja mov rorl mov (bad) fiadd fcomip cmp out add aad add daa push sahf sbb pusha icebp or or pop in bound push push (bad) lret push adc jp add shl loop jbe add jmp inc (bad) mov das lea xchg idiv call push mov rolb dec add mov add in ret pcmpgtb int dec sbb mov pusha loop test push icebp sbbl pop lods mov pop fld (bad) inc das adc aad adc out cmpsl test push mov cmp das add jge daa insb pop icebp test stc dec lret add ret cli adc jb mov test hlt cmc push xor fadds lds sti mov fidivr add aaa jp int sub push adc mov movsl lret cmpl inc addr16 pop aaa jg adc repnz jns mov enter pop sub xchg scas sbb rcrl mov or push cli jbe int3 ss ret xlat mov out mov repz jg add fnstenv fimul mov adc adc xorb lret jl sbb mov dec xchg or add add pop add adc jnp mov dec add mov sub xor jp adcb inc add mov add pop push pop mov stc xor mov mov ja add and dec (bad) dec test movsl enter sub fs inc ja (bad) sbb add out mov pop mov je sti in loopne jge push cmp xchg add out push test add lret adcb xor (bad) popf cmp jo mov subl dec mov repnz add adc mov push push add je sub xchg sub dec je bts outsl mov and jecxz add pop das mov rcrb outsb pop (bad) fwait jno add insl adc lods or push pusha int jnp (bad) repnz stos cmp push je aaa mov xor outsb pusha push push enter jle nop sbb dec fild test imul dec push aas sti push xor in add mov inc (bad) and xor insb jge add mov dec mov jle push vunpckhps out popa call (bad) and bnd mov movsl test cli test xor mov (bad) out add movb xor leave int or or in jb xor jnp in push lds mov scas orb inc dec push mov cmpsb addb pop mov fs xor test subl xchg je test pushf push imul dec add push (bad) (bad) hlt jp and mov adc and sbb dec idiv in mov outsl stos push add (bad) add mov fstpl (bad) inc adc sub aaa les push decb cmpsl (bad) mov cmp das cmp xchg pop push js jge add (bad) lods cmp clc cmpsb push mov pushf or jno xchg subl mov push add and fild inc pop jo push jge daa add xchg neg sbb adc cmp jbe dec mov add stos (bad) push xchg cmpl (bad) mov cmc add test ret (bad) mov xor inc int3 imul lcall sbb arpl mov mov addl mov sbb jnp jb jne mov mov add icebp cwtl out rolb dec inc loope je cs add jmp push jg jb push outsb cmc fbld scas fs enter mov gs add adc fildl insb mov mov push mov dec pusha sub jne mov das in cld sbb inc test xchg cmpsl jb adc xor mov mov mov xorb inc in pop mov sbb movsb or (bad) enter clc orb adc idivb jl and icebp push xchg pop lahf or inc cmpsb push rcl scas lods mov js jns icebp jg add hlt arpl scas lret sarb (bad) xor insb pop movl fwait xchg add aaa lahf jge jo or pop call jmp pushl sub aam sub pop lret insb fldl jmp adc aaa jno inc mov fcmovne push xorl popa add and addr16 fiaddl push sub push add mov add insl xlat out ret add out push lods xchg (bad) shrb mov movsl das subl xchg pusha mov xor adc mov inc sub add jl inc stos add add cs jno mov inc dec lcall mov test inc ljmp sub mov int3 aas into or mov int lods pop hlt sub mov icebp adc insl push mov inc jmp mov cmp mov les mov call cs cmp inc test idivb sbb mov sbbl or sbb in or mov jle clc pop lcall cmp ja jne jo add sub add or push add movsb scas jae dec mov testb push jle dec mov (bad) sub orb gs lock jge mov scas ret decl (bad) rdtsc movl adc fildll mov push dec jl inc sahf xor cmp sbb daa sbb add fs imul and xor out inc add or jl xchg incb adc fidivl cltd xor jo ffreep ret aad lea iret add mov add mov inc add (bad) or xor stos or imul jo inc out arpl cmp add pusha hlt call es inc and sbb loopne jo sub fnstcw lock xchg imul nop xor pop orl sbb ja fcompl add out iret cld xchg (bad) imul nop sub jo test cwtl scas add add xor cmp hlt jle iret (bad) sbb lock pop popf or in (bad) xor pop roll ljmp dec mov add mov inc pusha push adc pop and shl sbb sbb je mov jbe sti add call lret adc (bad) stc mov mov div sub fwait add mov mov in test scas mov sub add push sbb aas dec xchg cmpsb xor jecxz sbb out mov add iret push dec scas inc int push orb movsb cmp ret out and mov icebp add or add loopne aas sbb inc sbb mov pop or imul movsb add fstp (bad) out add push outsb jb pop sub cmp fs and imul je push xor cmpsb add bound pop add icebp fnstsw push (bad) adc (bad) push or div sbb cmc adcl in or dec bnd rorl add or enter movsb xchg adc pop add icebp shrb addb sbb push je jmp inc mov adcl mov mov decl sub jae movsl add xchg icebp inc inc out std insb adc fldl adc (bad) sbb gs xchg sub outsb andl lahf inc (bad) mov rorl dec shrb scas je enter cwtl orl inc in mov shrl test lock cmp dec ja dec insl popf mov clc mov addr16 inc fldl sarl sub mov out and (bad) sarb test sbb push or add cmp rclb out insl dec add xor and mov adc mov push lds (bad) and mov add cwtl pusha mov sub add xchg add adc data16 and loop jg cmp adc jecxz mov outsl repz add aam push mov test mov mov jecxz and pop pop add mov loop cmp iret add repz push jns rolb push mov daa add aas push sarl data16 in or inc cmpsb and jl and xchg mov xchg movb xchg and push fwait add cmp pop orb xchg call add cltd gs test sahf push jmp adc ljmp add aas inc push dec fdivr addl add bound cmpsl imul add idivl add ret sbb cmp sarb dec add jns mov out add pop lock dec jne mov cmp add sub call add ja lock jns pop rorb popa push dec and xor fidivrl fildl or adc fbld test mov push rcll imul mov test mov mov fiadd push aam mov add outsl sbb int mov and mov inc lods mov pop mov fwait add mov xchg xor pop jmp cmp sub lret cltd call or adc or add movq add mov jnp dec out idivl ret pop call xchg pop in inc xchg (bad) aas sbbl pop mov addb push jle push cmpps enter leave adc pop inc loope cmp add add push testb mov dec inc orb js fistl stos cmpsb negl mov enter pop rclb push mov lret sub xchg add (bad) fdivrl mov stc xor inc mov or pandn dec and sbb sarl jg lret jp add pop aaa flds dec ljmp jmp jb sub and ret xchg pop push ret in fcomps cmp rcll jne jbe pushf getsec add mov xlat ljmp mov adc push add sahf daa sub adcb or lds shrl stos push mov xchg pop add bt cs (bad) xor lret add gs xchg push fidivr pop push bound push andl adc incl dec cs cmp es xchg int xor jg mov add outsb pushf imul or mov mov add push out adc fcoml xchg repnz rolb xor pop ret jne aam pop out push lahf dec push dec (bad) mov sub (bad) (bad) mov lret pop pop add scas pop add jae int3 rcrl rorb add cmpsl ret incb and addb js loop add add decl rcr fwait add inc and adcl cmp cmpsl dec adc xor push push orl inc inc xchg test cmpsl sti add push mov add dec sub popa jae add test insb lret or sub mov push xchg divb xlat mov jl dec inc je bound sahf xchg cs mov inc xor add inc ja imul hlt cmpl fs push inc adc mov dec loope dec lahf adc pop xchg movsl sahf pusha push jecxz icebp add test enter inc or sbb sub jle mov addr16 es divl add sbb test arpl sub sbb js push add enter fstps add movsb cltd (bad) xchg scas ret je xchg pop (bad) insl inc add jb cmp loopne dec and js ja,pt subb and cmp push cmp adc les dec mov xchg subb xor push (bad) pop dec inc negl add imul ret pop adc je jo scas jmp add add xchg add mov clc adcl loop ja pushf mov (bad) jmp lods addb xchg inc xchg je cmp fildl mov insb leave in jl adc pop mov push in fildl (bad) mov mov pusha mov inc sbb popl cli test sbbb and jns jge add fbstp fisubrl into outsl mov in add xor inc add fmuls int3 adcb out adc sti push cmp test xor or out push dec jecxz push mov sarb mov push add aaa call dec enter arpl mov stos xor lock adc jbe add xchg add inc int3 push mov add sti ja add jl pop and mov jmp jno pop in test jl lahf cli and push lods cmp decl and sbb mov js add ret cli adc add test cmpsb add outsb jbe orb inc pushf and fidivl gs cli fldl insw stos repnz stos test cmpl sti sub loopne dec dec sub lcall test outsl adcb outsb (bad) push js orl push sub loopne dec movsl arpl out add jne cmp xchg fsubl mov shl loopne mov push mov xchg add (bad) testl inc das mov dec fldl jns cmp mov mov bound hlt inc andl jp xor out gs add arpl (bad) push xor aas aad push add or xchg sarl dec scas mov (bad) divb movsl jno add int3 push or or bound or xor stos aas xor mov inc add mov sbb mov and test (bad) aam in add jbe rcrl dec out sub data16 enter pusha pop xor lods or cmp lds add cmp add dec mov dec and push in mov pushf adc shl and lret ja,pn inc jp sahf nop pop sbb int3 scas mov lods and repnz sub push jl insl xor sub sbb scas hlt or fimull jno mov pop movsb adc add push outsb xchg arpl test aas mov add push into jmp cmpl in push mov into enter jae mov subb inc fcomps and mov js add stc out or wrmsr jns and cltd add xchg mov bound (bad) cmp sahf jle sbb div or rolb arpl sbb push pop inc sbb or and adc mov push mov xchg xor (bad) sti pop and sbb push mov in sbb inc cmp (bad) adc jb add mov inc data16 push cmp orl add fs jb inc test aam ja mov jmp mov es push popl mov inc call jle pop (bad) test adcl dec mov ret addb scas jbe and cmp add add add fisubrl and roll lea in add dec movsl enter inc dec sub xchg pop in popf add adc or xor out aas mov mov mov incb ja add aad (bad) jo dec xchg mov adc jne add gs lods push or bound je xrstors pop stos scas jl loope mov fs (bad) roll test xchg push inc fnstenv add sub push clc push and and (bad) or pop add gs lods pop mov test leave jbe xchg sbb and mov mov sbb jp int3 loope xor add dec mov add std jno sbb ds add sbb stos cmp aas out jb sub sub xchg clc pop in mov cli add xchg pushf push and cmp frstor call pusha fisubl xor jae add or adc mov out cli fmull lock or mov mov and popf js add lds add in cmp add add cmpsl mov cmc pop test icebp add mov mov popf dec addb or imul or jge lods or and sbb dec test movsl add xchg call xchg sub jo push pusha sbbl pop pop inc xor out add jmpw into add and sub pushf dec cmpl das nop clc add fistpll push add push jb (bad) fwait push popl xchg xchg mov adc mov add das xlat hlt sbb or mov xchg mov test aad adc dec push xchg mov xchg bound int3 jns movsl add ds mov ret jl add push out roll dec mov movb lahf push or dec pop daa mov jb add mov lds rolb inc mov ret inc lock sbb cld sahf data16 add gs dec add lods or bound adc (bad) mov or add add add pop shl or sbb jnp add jb push push (bad) xor or (bad) mov and cmp sahf mov lea cli add jo adc xlat std test iret cltd into inc cs fs add cmpsl daa sub ret out leave or push add push mov stc fldcw lret mov (bad) jbe aaa dec cmp fbld xchg add mov add fcoml cmp imul sub push mov fild mov pop mov mov add pop aas lret sbb roll (bad) mov movsb outsl ljmp pop mov xor mov jl add cmpb ja sub xchg stos daa sub add or nop add dec mov mov mov dec int3 add lea add dec rol pushf inc bound imul inc test pusha dec in lods (bad) dec push xor add lret inc jbe pop scas test mov mov add jne or int3 inc test sbbb mov sbb icebp jge xchg xor lods insb loope add stc ret negl bsr hlt loope sub loope jns add cmp pusha aas call aas and cmc add les lret inc aaa out pop push repz cmpsb sahf adc fnstenv sbb xlat aad add hlt inc aas add cs pop movsb cltd stc push add jl dec cmp les imul jmp xor fxch jge int3 jnp insl add jo jecxz cmpsl (bad) and (bad) xor rcrl ljmp sub mov aaa pop jne sub inc add (bad) jae xchg nop fldcw sbb popa lock movsb add xchg sbb in pusha add cld xchg mov add aam fldl std add in sti loope add insb dec out (bad) popf mov dec aam xor sbb pop loop xchg cmp test add fcmovne sti add inc ret imul inc pop std pusha jmp add inc movl lahf sti aam add out ja mov arpl icebp bound andl js or xchg pop cmpsb xchg push jl dec jmp inc and cmp sbb (bad) test xchg jo,pn mov rorl push loop popa mov pop ljmp shrl aas std repnz lret xor and jge xor jnp dec rol jle cmp add fistp jbe popa cmp inc icebp dec lods stc stos fwait add sub mov sub fwait sahf (bad) dec inc ret xor jb test sbb inc out or add out adc test push (bad) or lret add dec ljmp jg orb rcrb mov sub jbe jae jns aaa (bad) hlt xchg mov mov sti inc subb fsts les push dec mov aas mov aaa arpl add and sbb dec sahf scas push sbb push fs int3 cmp add pushf test (bad) ja je add pop sbb add cs dec push les xor mov insb fsubrp cmpb dec jns pop sub mov and rclb pop inc in aas int xchg nop ljmp mov add shrb jmp enter mov add and add dec and dec add or in cltd in in scas sbb add mov mov ss insb push je hlt pusha mov (bad) mov add popa mov sub xchg lret popf leave jae sbb lea add ret add rolb in (bad) iret add std xor test scas mov sub in pop push cwtl and pop mov ret movsb mov lcall cmpb out xchg fs popf scas or popf lock mov add or jle inc add add ljmp add and jno fisttpll orb icebp cmpsw mov mov and xchg mov les adc cmp add xor test sbb loopne out (bad) jbe jnp stos in and insb hlt int fcomps and (bad) (bad) add add cltd mov sahf add pop xor fsubrl add rcr sub sti mov dec call sub arpl ret add cltd aas jns inc repz divb hlt clc add sbb or mov add mov xor faddp adc jbe imul lods push xor addr16 add scas ss xchg and adc dec gs rcrb mov das fldl les push dec adc lock fisubr fs xor fadds lds in fsts and sub pop cmp cmpl lahf jl cmpb dec cmp or aaa into fistpl push push repnz push add xlat cmp xor (bad) or mov xchg pusha ds lea sub (bad) ja roll ret mov adc jg pushf dec mov jle xchg xchg add shrb fsubs cmp pop xor arpl mov roll mov mov (bad) leave cmp pushf lcall fisubl gs add dec jle add xchg fiadd xchg sub mov lea enter cli nop lahf outsb add pop notl dec mov pop sbb mov sbb (bad) je add in jl cmp sbb push mov mov enter push je imul mov out jg add pushl add sbb cmp adc add jo add in jmp sub adc pop mov orb pop add xchg js ds jmp fisubl and test mov (bad) xlat fwait add or loopne add in jp jo imul jg xor add aam inc cmp mov pop and fwait push pop ds pusha pop inc sub mov push lahf and add in scas jmp pop out sti push mov add pop sbb fistl cmp add add scas add sbb fwait stos mov xchg fstl ud1 ja out enter push xchg mov sbbl jg xchg out pop (bad) mov adc add clc xchg and jns add mov sub or mov push jnp pop or stos dec lds add out push jo ret lahf sub sub dec xchg iret cltd pusha roll aad pop pop subl and testl add dec repnz mov mov add mov lock add inc and mov push lret cld mov je pushf mov add pop stos cmc sbb push add cmp jmp add lds dec cmp add and cltd sbbb adc and xor cmpl sti push test cli mov xchg fcoms gs add lret mov subl pop ret mov xchg jb cmp xor mov ljmp aad addb push fs push add cmp add pop cltd mov sub add push xchg std add lret sub arpl mul imul sahf cmc call pop popf push ror lods loope aam lahf dec es mov (bad) jo jbe jp stos mov add adc fmul xchg xchg mov pusha sub addr16 xchg mov ja push inc fdivl fidivrl add mov iret iret add ljmp dec and sbb cltd les insb push adc sbb mov lock in add adc mov and int3 inc adc imul mov pushf mov mov jmp cmp add dec arpl add push loop mov fldt push mov fdiv (bad) add mov addr16 xchg outsl out push pop popf lods enter orl leave aas jg push popf xchg and push push mov dec out nop fcomps ljmp inc cmp pusha sbb sbbb mov push pop fs mov jle push dec or insl xchg jbe popf lret cld je fadds xchg push into les (bad) verw xchg pop xchg or add cwtl inc jp inc add iret cli into movsb clc bound adcl jp cmc and fadd push adc add inc mov add outsl ret and push call outsb inc jns push add fwait push mov add sbbb imul in ljmp fistpll lds punpcklbw int3 cmpsb or mov imul and xchg rorl aaa sahf jo enter cltd add js daa add fldl scas add not loop mov lahf sbb lret popf incb mov je test std out pop inc inc pop push (bad) loopne and lret je nop cwtl xchg add sub stos cmp je add add aaa mov inc add adc pop mov pusha mov mov add icebp (bad) ss andb aaa dec sub lret insw or sub push fbld lds mov movsl add push mov inc cmpl loopne leave xchg imul mov add jno inc lea adc add xor add mov lock inc xchg add adc sahf in dec jb sub cmp cmp rcrb add xor inc shlb out jbe in add popf sbb add jmp or (bad) imul inc arpl int jae daa outsb clc mov sub outsl imul pop mov inc ret outsb pop mov add push adc test push add jle adcl jns xchg add lock fcompl inc fldl and push and dec mov mov push movsb loope lret push add mov add sbb imul ret add gs loopne push jno xchg pop pushf or mov cmpsb add pusha xor add push pushf popf dec ss push jb testb test add push pop mov rorl inc in jp mov sbb adc dec or test jbe add ljmp addl pop icebp movsl adc push jnp ds cli int add xor push xlat and out ret sbb hlt jge mov add adc sbb mov mov mov repz scas cwtl sub pop jnp add sbb mov fstl add lock bound add cli (bad) mov flds pop and daa out xchg mov cmp mov clc cmp mov pop xor shlb shll push jbe jbe jb sbb pop and cmp add or pushf or push jl js sub adcl pusha (bad) mov push push (bad) test add aas mov or les push sbb sbb (bad) push add xchg shr jg add repnz movsl stos xlat or adc mov jbe mov icebp inc fldl inc pop jo mov pop add test sti xchg xor insb (bad) shrl add mov jecxz lea aas test repnz das mov test (bad) fsubl pushf fwait mov in lds push pop sbb and jp popf imul (bad) cmp or jno or adc fdivr add or add jbe pop imul xchg xchg ret divl or jg adc sbb add cmc out xchg std inc repz adc add add xor and popf pusha add xchg cmp dec in inc mov add loopne xchg push lret pusha sub and rclb push cmc orl faddl or push add test inc adc jl push xor sub mov or push and lahf sahf sbb lods mov xchg lret mov jne stc add orl out xor adc and sbb xchg add data16 add jg je add (bad) sbb jne loopne adc fnop clc sbb hlt and mov iret add aas mov add fwait (bad) inc xchg arpl sub cld add cmp repz mov add test sarl incb dec xor lea decl push dec int add addr16 cmp add inc sub scas xchg js lahf push mov sub mov add cmpsb ljmp das ss adc gs dec add jmp xchg mov push inc dec inc arpl bnd dec jmp add xchg in mov cmp imul repnz sbb clc xchg dec ret rcll cmp les pop mov subl in aas pop addr16 mov pusha add je mov add hlt dec out (bad) fs jb int3 xor into shlb (bad) fsubrs add mov faddl cmp mov inc loop adc mov imul pusha int3 push inc sbb mov xchg sahf add stos mov cmc jg add and xchg cmp loopne inc xchg xchg enter add sub cmp stos and fimull adc xchg adc jbe loopne sbb aad adc inc pop daa (bad) cmc fstl jne add loop js fwait or jne push adc mov xchg test in push jle adc add adc mov xor mov addr16 mov enter push and pop push inc inc lds jge insl pusha bound shr xlat inc scas push add and lahf adc push adc push in popf xor test adc add adc mov nop xor or inc aas ljmp (bad) and mov xchg add or (bad) fcomi mov pop imul or pop ss stc mov add test testb loopne outsb pop xchg pushf add mov mov outsb jle addb jo popl pusha adc mov pusha loopne and sub push add imul lahf decl jnp popl daa push push mov and subb sbb add push ret jg cmp add or dec (bad) das mov pusha into int3 cwtl jecxz mov insb sahf dec flds mov mov das or mov inc mov sti cmp out rcr std add js repz aam jne add mov out add cmovle add insb xor test int3 inc add jp jge faddl cmc inc xchg cmp add subl je popa sbb push jp fcmovnu adc pop and push pop add bound mov jne add push mov pop xchg or fs in cmpsb xlat push xor arpl lahf cmp xchg dec movsb and pushf mov loopne pusha add ja add sbb aaa addl in pop fist fsubrl or mulb cld add test ficomp jo add das xorl je jl orl dec je mov cmc inc pusha ret fldl hlt dec std push movsl repz add dec in (bad) int add std sub adc xchg jb mov xor aas test fcomps mov out in and and mov insb mov sbbl ret mov stc add cmpsl or (bad) test loopne int sti xorl jge xchg repnz adc outsb push add data16 sbbl mov xor jbe test sarb inc pop cmp push pop outsl rorb add (bad) pusha pushf (bad) in xorl jbe xchg xor inc fistpl add dec xchg addb mov bound adc add inc fmul nop mov add cmp cltd jp xor inc gs scas jg add push push aaa call pop xor lret add jb mov movsl test mov cmpl adc bound mov stos aas sub jle les enter xor add jecxz addr16 pop inc lahf mov inc sahf sti xchg in ljmp in sub hlt or mov add (bad) icebp xor cs mov jmp ja js jns adc cld imull adc add cltd clc (bad) mov sub lods pushf lret push add pop notb sub imul ljmp out lret adc cltd sbb add jnp test inc out (bad) ss insb jno xorl sub popf jmp add jb xchg xor psllw or daa sub pop pop add in adc jge outsb fistpll jg mov mov xor iret adc bound aad sbb icebp add xchg inc pop push pop mov adc dec dec add mov subb rol add jl,pn xlat roll (bad) pop bound mov mov pop adc mov and xlat sti scas sbb sub mov ljmp (bad) and mov push stos ss out mov loop mov negb (bad) lock jnp or je add out adc test cmp push add pop add lds add inc add sub xor add mov sbbb mov int3 xorb mov xchg add lret pop fmuls pop mov pusha mov dec rorl mov loop or jns sarb and nop aad or add push popf pusha pusha inc iret loop aad add in in push xchg dec inc orl mov push (bad) test arpl (bad) aam sbb mov and pop (bad) add jne sub adc test add inc sub jle mov cmp das add and push add rcrb fstpt push aas outsl mov test js add sbb and fist addr16 ja outsb fisttpl int mov mov clc arpl sub xor scas adc (bad) push sbb pop xchg and aad pop add jmp fiadd jb jl jg add lods int3 xor and push sub inc add or or pusha js lret cmp mov add and daa inc push test cmpsb popf mov adc fistp adc pop push (bad) repz je push mov add pop ficoml cli push cmp ret jecxz fldt adcb jne adc add mov adc add jb mov mov negb mov aas mov push (bad) hlt test xchg add mov ficom mov invd add fbld test add insb pop cmpsb jg adcb mov (bad) mov mov fild addr16 adc test add les cmpsl ficompl mov and int3 add xor sbb jne,pn add pop mov push orl xor fiadd test mov insb bnd sub adc add jg pop and jmp lock das sub dec xor dec fcomps inc jp cld add aad ds push mov add inc mov pslld clc jb and mov and cmpsl in add cld ret jl xchg inc fs jmp addr16 int3 xor dec pop add adc fiaddl adc sub mov rolb and dec loop scas add movsb (bad) lods push ja insb addl xchg add pop xchg bound mov inc inc mov push nop mov add mov push in into jl (bad) cs and (bad) ss icebp pop leave test stc fisubl add and add xchg sub aam lret (bad) xchg pusha loope push pop (bad) jp add insl into addb xchg idivl dec je mov dec pop add sti fucom mov jmp and or mov repz sbb adc fild outsb int fs dec xchg pop pop inc pop aaa and add loopne rolb (bad) pop or jp lds pusha (bad) sub or mov adc sarl add ljmp (bad) pusha cmpsb cmp cmc xchg jns lret inc int3 pop fsubl add dec fldcw mov repz jb ja rcrl sbbb daa sbb lahf out and movsl aaa or dec add jne cmp add jnp lds push arpl xor ret xor rcrb jae add pop gs cwtl cmp inc mov rcrl xchg add fstpl leave add jl inc pop push imul mov loopne sbb loope push sbb push inc (bad) xchg lret adc stc lods xchg mov add scas jno jne inc xchg mov mov adc jb cmp inc cmp jo (bad) cwtl repnz mov jbe aas cmp clc dec mov sub mov xor xor inc loope pop mov add pop js add imul fidivrl daa dec pop shll imul mov add sti cmp add scas mov xor das jle dec ljmp nopl sub jo or mov mov xor es xchg inc jb (bad) and jge and mov jge call outsl rolb jno pop sub or testb aas dec or test inc lret inc cmc das (bad) pusha sub cmp rcrb pop int adc andl fs test sbb andl mov out arpl pop das and fs xchg push jg mov sub xor mov xor push xchg mov sbb (bad) or sahf inc pop push cmp hlt cmp xlat add sbb ffreep test jl add fimul add jnp ret (bad) xlat rorb ja div adc outsl jnp push cld xchg imul inc ja loope into orl pusha sbb insl fs pop cmp ljmp add dec mov cltd int3 pop mov xchg movsl aam ret push mov aaa test and and push gs sti cmp and pop adc and lahf orl inc xor add ja nop mov jg cwtl sub iret jle jbe add (bad) jge add xchg sbb xchg ret jp jno push and add push mov xchg add fidivl jns pop mov ja add mov jl add cmpsl push jge lods ja cmc and (bad) add cli xchg cmp inc push scas mov mov fucomp or jle or pop add mov inc mov lret in jle in xchg cmp sbb add jecxz pusha outsb ja orl push add mov aas jg cld xor imul lret fcoms dec add stos xchg lcall xor adc push (bad) push andl pop pop add mov ret test imul jmp lret push push xchg add mov sub adc inc dec xorl roll jne inc xchg pop lds test mov add lock pop jg cmp test inc (bad) jb sub xor iret push adcl in push mov mov stos cmp pop jne add mov jnp adc add je ja inc adc out add jnp add sbb jns xor add mov ss iret stos fistpl jo pop jno xchg mov rcr push outsb nop jbe sbb stos sub add lret adc add adc dec jne add test jge sub or fst loop das push jge cltd add (bad) in pop xchg sti adc cli add rcr fcoms add cs mov mov roll pusha and mov add aad push cmp xor mov pop dec movsl pop add std fistl mov pop mov adc xchg add cmp push add movsb sti fisttpll ret mov ret (bad) add inc or and fldenv or add add xor cmpsb sbb push in add (bad) mov add mov xor orl dec xor add push cmpl les cmpsl inc outsl scas sti inc aas xchg popf push jo addr16 add xor test add test ret pop xor mov mov pop add in cld clc push xchg jb addl jo sbb add sub push aad add jae js push cld and mov popf cli rclb data16 pop push mov xlat dec add cmpsl pushf adc test repnz orl add jle mov cs mov dec jnp loopne xor aad mov adc insl arpl pop into or ret shrb sldt mov mov test icebp cmp mov lea jne fwait push or daa out jle mov xor fidivr lds jnp add test arpl daa or or je leave cmp xchg add inc ljmp fildl (bad) lahf in inc dec loop sub pop jo xlat and lods jge in mov aas jae mov or mov cmpb pop sbb jbe decl out (bad) pusha jp dec cmp cwtl xchg sbb sbb and push insw dec lret jbe push fcmovb adc ja xorl fidiv xor shll cltd js in pop or push fadds iret fldcw popf (bad) xchg pop mov jecxz dec je ror jg sbbl push inc and flds mov cmpsl adc add dec out push mov in std arpl push adc lret add xchg push lea add dec mov add movsb ret fildl icebp sti mov je in cmp int or (bad) adc pop jp stos add add repnz add mov push aad movsl (bad) lahf add sar jg add test jae push jnp inc adc jbe adc push cmpsb das pushf mov pop add and sbb add xchg lea push xchg test mov pop jo mov pop push pop out sbb sub add ljmp pop add add add clc cli aad sbb imul mov add aad out cmpsl fidivr or xchg icebp out sub and add or push jb add sti fadds mov pushf sub movl int add sbb inc sbb dec mov xchg pusha xor cmp or add pop (bad) shrl aas in (bad) or shlb add and (bad) cld daa add cmp xchg mov mov jg add sub sub sub pushf jp or std jecxz mov add dec mov mov pop mov push and ret out add ja in addr16 and mov mov shrl sbb sbb aad addb lea popa cmp aad mov or stos sbb pop adc sub adc xchg sub decl mov add pop xor sub cwtl pop addl inc enter mov pop jle packssdw pop push push jbe push rolb jl,pn (bad) or adc ffreep and outsb fsub jns xorl out add add and add fild inc xor mov cs and xchg lds sahf rorb add add loopne add hlt jnp add ficom dec push jl jb ret cmpsb lods add xor mov jo js or cmp dec jnp movl fbld mov sub inc jb pop ljmp loopne xor push dec pusha pop lea fistpl nop loopne int3 adc add xor xor cmp (bad) into inc test lret adc mov inc stos add imul cmp pop add call dec pop jns cmpsb loope jmp roll mov mov out ljmp repnz fldl sahf pop sbb cmp out jp add pop sbb sarb aad add shrb add mov adc pushf dec add pop dec adc js xor jp push jb sub pusha sbb sub jb pop lds pushf xor add mov xor dec roll popa arpl dec mov mov pop cmpsl jno add loop jge mov xor arpl push gs pop sbb add sub sbbb insb enter sbb push dec js pusha lods dec call subb or cmpsb adc fadd and mov cli lret push ret jb ja sahf daa iret inc insl cld mov jecxz in jno lds pusha mov icebp (bad) fcompp push adc jnp (bad) dec inc sti jge dec pop add mov adc mov lret dec hlt mov jne cmp popa js jle xchg int3 cmp test repz pusha lahf stc adc add orl jmp fimull cmpsb cmp pusha lea jbe mov mov ret sbb push test mov test add jne add insb clc test jo cs add movsl repz add lret cli arpl xchg je mov mov push aad lret pop lahf pop and outsb lods std add xchg jo cli fisubl dec lret pusha mov or mov pshufw xchg (bad) dec and pop sahf aaa gs add mov adc and or cmpsb lahf aad fisubrl rcrl lods ja movsl dec rcll into or sbb lahf push call mov cmpsl mov pop or push pop push sti and jne inc and pop pusha xchg inc out (bad) call loopne push (bad) jmp jbe add mov xchg add imul sub push hlt movsb adc aas (bad) xchg in inc jg mov mov leave in fdivs iret add in inc pop jge test aad pop roll lret cmp adc inc and popa pushf cli sub xor cld orl dec pop lock clc cmp add rorl fcomip sbbl dec mov cs mov mov imul add xchg es inc pop add push fisubr (bad) mov lcall fstpt cmp stc xchg lret (bad) (bad) and (bad) add lds dec jns popf inc and inc add sbb pop cmp out mov fsubr or stc pop sahf add xor add adc (bad) aam fwait mov xchg out jo or add sti mov sbb insb jmp cmpsl sahf pop stc lods inc dec ret cmpsb (bad) fnstenv sub cltd add sarl pop mov xor add jns or cwtl add push xor add xchg mov negl add data16 add andb add shl xor mov pop push add aam pop cmpsl mov adc fwait add rorl fild popf add sub fistpl jl xorb out xchg pop mov jb les int3 mov pop pusha add and dec out push xlat add cmp add and mov cli jno pusha pop rcrb dec add repnz repz in jno mov mov dec enter add lea mov mov cmp mov mov push add cmc mov add mov xchg mov mov jmp jmp lock lahf xor cmp lds inc or xchg addr16 (bad) lret psubsw push adc push add gs add fidivl ret pusha add mov sub aam mov adc mov daa repz and add cmp xor push insl (bad) mov mov cmp mov repz pusha pusha loope add mov or mov imul out (bad) sub mov sahf hlt xchg mov add jle (bad) dec add (bad) into lds jp xchg add stc add mov daa addl in mov xchg mov dec xor push dec add stos mov xchg add dec jl add and addr16 xchg iret rcrl jae xchg dec sbb pop mov and hlt push add cld out push stc inc jne or push shrb sbb inc pop and add pop (bad) jl push fwait sbbl add cli mov xor incl arpl dec add pop mov dec mov mov add icebp mov in mov stos push mov and jge lcall add sub pop insl xchg std add jae xchg imul xor repnz dec nop stc mov mov inc sbb repnz mov fdivl pop mov dec int3 sbb out push mov lds cwtl add jp icebp pushl add mulb mov inc add fprem1 lds cltd adc dec xchg push mov mov pop ds sbb adc jne adc mov cmp sbb enter or dec out sar std movsl pop adc pop push or xchg faddl jns mov xchg mov popl dec push mov sub lret xor add and mov ficoml test fsubrs mov pop out or cmp jb cmp sbb sub adc adc lds mov js inc pop jl add clc mov and add dec push das inc stc je add xlat mov dec adcl xor (bad) mov sub add push in js xchg xchg jo hlt lret pop fwait icebp inc mov mov add sub mull inc cltd or jae mov dec mov loopne popa push add inc or out movsb add (bad) xor or in inc aam xlat push stos or and cli jg das mov add lods push push add jecxz out in adc es or stos sbb xor xchg add repz movsb pop test popa sub add add inc je scas pop xor dec sahf lods jbe adc aaa inc in add in (bad) and sbb sbb jae scas aam xchg mov mov inc adc fisttpll push dec (bad) scas cs mov int mov add sub cwtl enter xchg mov mov mov es cmp fwait jb mov pop jae imul mov add inc pushl cltd xchg stos add cmp daa push dec add (bad) cmp add pop jbe xchg ret add sbb pop (bad) pop inc jb add imul es add popa adc cld xlat mov cmp lcall jb mov xchg stos bsr add jl,pn movsl add mov loopne sbb (bad) jg outsl dec jp xchg out mov inc inc mov mov adc popf dec xchg ja mov cwtl in jmp add add scas push add add (bad) lods std sbbl or movsb add adc aaa push add mov mov cmp add mov insl daa xor lods ljmp or cmc (bad) mov add ret cwtl push add or dec add ss out add sbb xor mov add push push cli sbbb loope fldcw jl jns add rcll add scas jb rclb sqrtps loope or pop lcall cwtl movsb jns inc adc aad add and cld mov repnz jo push ljmp xchg cli dec cmp into mov adc jns pop pop lods add pop push sbb flds adc mov sbb ds loop xchg mov stc js fdivrs les lcall out sub ljmp sbb add sti push ss test stos clc ja mov mov (bad) jbe icebp enter inc sub push ret outsb add pop xchg roll sub test add movsb add out sarl add push mov (bad) xchg sahf jnp sbb lahf xchg and jl pop sub adc add mov add int3 xchg add cmp or cmpl inc rorb pusha sbb add jns (bad) dec les sub xchg inc sti mov mov push mov cmp subl and jns or add cli xchg in pop leave jo mul ret sub inc push cmp cmpsl add sti loope mov mov cmp (bad) xchg movsl scas pusha (bad) push imul jae mov jo inc jp push mov pop sarl dec add test sbb loopne js cmp bound fldenv adc ret jg add lahf stc push incl pusha pusha rcl cmp adc outsb test fimul test inc jo scas and insl je push ret lcall inc pop movl cmp push xor cmp bound fstl add dec xchg xchg jb mov push or mov adc (bad) seta jle popa scas (bad) add sbb popf xor test push cltd jg xorb xor (bad) enter sub fcmovnu movq es xchg scas (bad) jno add ret push dec repnz add jl dec add sbb lds adc sbb rorl pop pop jae add outsb or mov (bad) into xor shrl fistp (bad) cwtl jg pop sbb test push (bad) mov jmp jp add push xchg out add mov sbb test faddl das jecxz ja push mov rcl add xor popf stc sub out outsl out inc data16 lcall into add fs and std sbb inc add mov cmp pop outsl add sub add inc and add daa and mov out add mov mov stos das bnd hlt cmpsb xor dec (bad) pop mov cmp mov add jno pop sbb xchg mov icebp or pushf sub (bad) insl push add cmp add aad rcll mov insb je inc or addl fs popf push roll jmp pusha sahf mov add xor xor and jne push (bad) cmpsl nop lret cmp sub es dec aam lahf fbstp and inc fidivr dec and pop push push jmp jo xor push add add mov std sub cmp sbb pop pop rcrl xchg xchg add insb cli xchg js add aad mov out mov ret movsl call cmpsb scas jo add inc icebp mov and pop setb pusha nop insl mov pusha stos or xchg or pop sbb jnp jecxz inc sbb dec add (bad) add push add fwait adc dec pop mov push cmp jbe loopne data16 popa (bad) adc dec add lods sub push fcmovu mov jo add into fwait and add cmp add or xchg sub add cltd or setle pop add mov xbegin mov push inc add imul (bad) adc or xchg (bad) repnz cmpb ljmp test les insb clc mov add sahf je addl sbb jns inc cmp add idivl sahf sti les push mov and jno xlat jmp into cli sbb cmp add shrb pop lods iret add jge das inc and mov or cli das xlat bound jnp pusha jl (bad) out andl pushf xchg arpl mov fs dec adc cwtl in outsb gs add scas inc jecxz lret pop xchg fsub jne dec inc jp pop add addr16 and ficomp daa call and movsb mov lea mov aas int pop and mov and mov push mov xchg mov or icebp daa out pop add loope xorl mov inc add idivl pop mov lahf xorl andl mov lret or lea adc js jge add (bad) jg les fildl or mov fisttpll mov xchg movsb pusha shll xorb data16 into je add inc dec mov repnz cmpsl xchg ljmp loopne arpl fldl push mov stos inc mov add shl sbbl insb mov flds add jl or mov aad dec add jmp xchg fs sub sbb add jmp inc inc inc shll loope jnp add dec jbe into dec add insl pushf popf mov mov insb testb cmp lea adcl in xor arpl popa push mov add test inc xor inc xor aaa pop sti add xor adc addl fdivrl testb or jo out cmpsl mov test pusha jns inc fs sarl jae in (bad) and cmc or mov js add call fxch dec js pusha sub or cwtl mov test add shr mov push clc xchg pop push or scas adc sbb mov js xchg andl ret test xor subl lret add aad or xor push enter adc int in add (bad) jp divl insb stc test or ret lcall imul ja fimul mov push adc and insl sub inc in neg jo mov add (bad) test dec sti mov icebp addr16 mov and (bad) and mov inc add or dec shrb mov (bad) out add (bad) popa lds sub xchg scas xchg push jge (bad) push xor insl xchg lret pop sbb fcoms xor ret pop pop mov out into movsb sub mov cmp sbb jle mov lret or pop push lods inc sub rcr sbb and mov fs and xchg add cwtl push inc mov jp or and mov add dec rorb add push icebp or mov mov pop xor loopne jecxz xor and dec pop ljmp sbb fildl xor ljmp scas push insl dec pop add (bad) loopne lods icebp sbb outsl ljmp orl lods add jg jp sbbl lock (bad) and int3 (bad) insb inc xor gs pop ret gs ljmp sub cmc sti inc aas adc and fldl pop pop shr daa mov mov dec or lret sahf push and add dec sbbl jg add icebp cmpsl push cltd or sbb xchg dec outsl dec js cltd add sub syscall pop lods sahf mov or fdivr out adc add adc popf pop push repz adc test sbb popa mov out lret in nop pusha add xor add cmp aam push je add loop stos insl xlat mov xor ficompl mov sub inc scas jl shrl jo aad add sbb testl and add jp imul in mov mov in (bad) int inc repz dec jnp lret pushf push mov inc push movb icebp ret loop adcb mov sarb add xchg lret adc daa cli aas mov inc arpl mov (bad) mov inc push jg mov ljmp cmpsl les pushf mov mulb lahf iret lods add fsts scas add xorl pusha mov add ss test pusha movsb adc xchg adc popl and sub xor jnp es in or pop pop and xlat inc xchg mov sbb jae add xchg push mov pop pop fiaddl jo adc add push cmp das sbb add rcrb loope add jg lods stos (bad) add out jl add test push test adc arpl bound add movsl cmp cmpsl mov lea add popf es fs sbb lret push add ljmp add cmp push xor fs lret and out repz (bad) popa cmp lret inc pusha dec stc (bad) bound push add in add mov add and cmp enter cmp inc xchg pusha mov pop and or adc bound jmp cmpsb inc push xchg inc inc mov (bad) lret adc xchg int sbb imul add cmp xorb fsubrs adc add mov imul icebp stc mov fwait add inc loope loopne call inc jg add cmp rdmsr sbb add mov xchg mov fdiv fs ret dec and add push lret mov lcall mov je lahf mov add and iret pop popf inc mov fistp or adc mov imul popf arpl dec test add scas iret push nop call mov adc imul inc lods dec mov add sub lahf xchg mov das inc sahf mov add mov in fnsave and enter (bad) dec dec mov imul jmp sub or or mov popl dec add sub scas incb adcl das cld and jne push add mov fsubr xchg sub or push add jecxz pop rorb shrl scas add outsl in arpl add pop jbe add sub mov jno rclb lea sarl pusha mov orb idiv mov cld dec jle test add bound mov pop gs inc jo sbb add xor ret push je mov mov pusha (bad) jg lret add cmp inc inc (bad) sbb jp (bad) mov frstor (bad) xchg mov insb sbb inc (bad) imul and add leave xchg std xlat stc add push test add push movsl cmc cmp add inc jmp jo and and mov push push (bad) xchg or lea push call push imul add mov movsl mov and push mov ljmp push cmpsl jecxz mov pop aad fs sarb add xchg dec adc add push mov ljmp incb js push incl mov add mov jg sub pop enter and imul and push js adc aaa pusha int3 add push lret mov dec push popa mov js or push in and mov mov bound in popf and mov and xor stc fstps jb push push adc shrl and add sahf lds dec lcall sbb outsb add ljmp cmp mov push mov jp dec pop sahf mov inc adc add out mov and inc push ljmp add lods or pushf sbb add scas (bad) rolb inc cmp jg mov lds aam cld xlat jmp push and add lret fs in sbb js lods add cmpsb mov add loopne mov mov lret cmp lahf pop sub ret add add shrl cmp add nopl add dec in flds cmp insl and sbbl xlat cmp pushf cmp int out xlat push add xchg paddw aas insb xchg shr jbe insb pop testb dec or inc sar gs mov push adc movsl and jg pop int3 add inc inc mov xlat sbb push adc popa push fadds add lret std nop push repz setnp fs mov dec pop addr16 and jge add pop adc xchg cmp mov leave popf mov inc dec cmpsb mov out add mov inc add arpl push loop mulb insl nop outsl push cmp dec lock inc xor in xlat push pop xor xchg inc and xchg ltr sub mov leave test jmp add jle mov cmp jmp aaa sub xchg and and hlt mov dec dec inc sbb cs add fisubrl insb add cltd lds dec adc ret mov jne enter test lret push out cmp (bad) in mov push enter dec (bad) mov mov pop movb ds inc cltd fldl inc jmp jns rcl sbb cltd dec andl pop jg fsubr push int3 (bad) rclb mov rolb jge add aad mov add xor inc add notb ds outsl mov mov pop jmp lea add jne mov enter and rorl jl cwtl fnsave icebp mov xchg push (bad) mov add popa adc cltd inc jp pop pusha (bad) dec aam es add mov outsb adcl inc inc sarl pop (bad) shrl sbb add pop cmp nop xor inc mov mov mov mov push stos addr16 add cli leave cwtl inc or and or ja mov inc loop sbb (bad) xchg pop jg jge xchg add aam pop pushf push inc dec mov decl fimul repz add sahf fs dec jg sub stos leave jnp scas lret add mov cmp fsubrl pop sarb mulb push sub test mov lea add jg cmp add pop jo cmp adc incl lret sbb imul add pop lods mov add popa icebp push pop mov xchg lret push stos xor roll mov dec jne add mov shrb push dec add cmp sub xor inc pop mov (bad) idivl sub add mov dec push xchg jo mov jbe cs sbb lods sbb sar jo or adc push rclb movsl fdivrl (bad) adc (bad) sti ficom push adc data16 mov addl scas push inc stos jo fildl and cbtw test cmpsl add cli (bad) sub inc lahf in inc adc xor pop push cmp sti (bad) xor sub push add jo dec mov repnz xchg (bad) je fsubr push lock cmp mov mov out mov popl jnp and mov jbe pop push adc lahf flds mov loop repnz test mov (bad) mov dec cmp loopne cmp test add (bad) repnz add repz mov jae sbb fs shr jnp xor ljmp scas add icebp mov (bad) rclb paddb cmp jne jo add movsl inc mov push das mov mov pop in cmp push mov cmp into xor scas mov cmp stc je dec mov and jns clc xchg or push es test or pop cmp push (bad) (bad) push and cmpsl mov repz and dec lret lods mov sub jl mov jo insb mov add ret or sub cmpsl and add mov cmpsb add (bad) xchg or fwait stc inc (bad) data16 ret mov outsb js js jg sub (bad) mov xchg dec or xor pop sub into xor xchg sbb scas pusha outsl jo mov xor sub dec aas mov out aaa add xchg lods xchg add cwtl ret fstps (bad) cli dec add and dec jmp jmp mov mov jns add test scas jb hlt cmc inc ja add gs (bad) fcmovu test jne lret push adc dec xchg aas mov xchg rcrl (bad) jmp repz jmp add outsb cmp iret push testb and lret fldl repnz sub dec xor cmp lds ds inc cmp inc gs adc pop jo pop hlt add cmc dec xchg xchg pop adc pop jg icebp add iret mov addr16 push xchg gs lds loope push inc lret mov movsb call fs jae add std leave dec repnz xor jo movsb int3 decb jle pop or popf loop lret pop push xor rcrb xchg cld popf (bad) out jne push mov sbb loop lret ss movsl scas push or dec lret sbb fstl dec push pop push test loopne inc jae xchg fildl xchg adc mov xor icebp pusha sub mov fsub ret arpl cmp pop inc pop imul mov xor rolb adc test adc popf mov add pop inc shrd enter adc ret xor jnp add sbb es sbb in adc pop or shl or lret maxps ds addr16 movsb add mov wbinvd insb mov dec sub push lahf pop cltd inc in xchg js jg add lods data16 or roll and cmp mov pop ljmp inc sub aam lods pop imul or aaa pop cli and (bad) popf fidivl std fwait xchg add fdivrp mov and sbb mov jle and push push mov add or adc sahf and and inc mov adc test shrl es cld add hlt or in jne mov scas push jp mov fwait aas mov ret pusha fcoml stos add xchg scas or dec adcb jmp and rclb or mov popa jp bound pushl jmp imul pop pop (bad) pop cs andb cltd push jl dec pop in sub shlb arpl (bad) or xchg dec mov mov mov mov sub mov pop mov aaa push xchg popf add ret push inc and mov mov push mov mov inc add test mov lret lods ret lret mov dec add push js mov lahf xorl and xor or sub and and cmp test add fisttp fdivrs xlat lock add ficom mov subb test or xorl and call sbb xchg cmovp mov cmp cmp mov xchg and loop imul dec jnp adc add cmp addb outsl in pop mov jl clc xorl mov xchg add pop push jne into xchg cmp ja adc pop insl dec cmp dec mov inc mov cmp dec ljmp (bad) sets push add cmp push sub shl add sub add gs rolb xchg mov cmp mov stos or push add jae and jbe dec inc in sub mov cmp add out fwait xor jmp jp pop mov mov fiadd (bad) jne addl fwait lds pop dec mov outsb add adc test scas inc push shrl add push or xchg jg add clc dec je mov cmp sbb aaa inc testl mov xor je pop jecxz sbb repnz xor js jle add jb sub add add outsb (bad) out xorb pop sbbl add cmp sti jne mov movntq nop jecxz sbbb lcall scas fs ljmp in or sarl mov imul mov sbb mov pop fldl lds xor sarl jp popf or jns add adcw scas stc jg (bad) shrb outsb out leave addb push insb cmpsl cwtl and ja and (bad) ds and xlat aad mov in sbb add repnz dec add push add mov adc aam push xlat (bad) repz rolb jmp enter sbb aaa add cmp stos push xor (bad) popf insl add dec push pop xor cmp daa xor add cmc xchg movsl jle fsts lock jl roll iret inc lret out jge mov out int3 js inc add dec rorl lret iret mov add xorl shrb mov push jb add mov lea mov mov insl (bad) sbb add dec sub sarb add mov push mov stos xor pop pusha jl adc leave data16 dec call push mov insb sub push and xchg daa xor and jno add sbbb add lahf mov sbb and and inc out lret addl ds hlt xchg and pop outsl movsb std (bad) (bad) push lods mov fdivrl int dec and lds enter test inc sub inc test lahf (bad) mov dec and add cmc and and mov inc cmp add imulb ljmp ljmp mov jg or jl repnz fcmovu add or push pop mov mov inc push sub ss (bad) shlb in lods int xor sub fild jg sbb adc (bad) lock push lahf gs xlat dec push add ror adc pusha in add xor push or dec xchg push add fdivrl (bad) cwtl add outsb pop pop data16 fadds (bad) lea es ds push xchg ljmp sbb icebp xchg inc ret ficompl sbbl fstl adc add sbb mov pop pushf loope popf push and jecxz (bad) popa sbb nop inc jbe lods std push lahf cmp add add movsb outsb jl mov add aas pop rcll (bad) push out add out dec lea cmpsl sub cmc ret jae add sub fwait xchg jb add add mov in lock aad or pop xchg pusha sub ja pop xor fwait xchg mov das lcall and xchg in cmp add mov xchg jecxz (bad) ljmp xchg mov repz mov in ljmp jb sbb aas lock rcrb mov repnz hlt popa std cmp in bound (bad) cmc orl mov push test (bad) gs pop adcb ljmp sbb xor int mov push sub lock rolb sbb add lods ja add out iret dec aas xor push inc mov add push sbb add cmpl stos sub ljmp push pop pop daa mov mov or lret add (bad) jmp dec adc xor adc gs rcrb pop adcb jl xorb test pop fwait jb add insb add pusha jge mov push in cmp int (bad) jb inc lahf loopne shrl in subb mov add jecxz aaa or cli outsb sbbb cmp daa push cmp xor (bad) add mov movsb (bad) mov outsl shr clc ss in and cmc dec xchg xchg add inc out fs sarl fsub xchg cmp ja dec inc notb mov fs out les pop les andb inc ficomp pop (bad) dec sub data16 mov cli shl sub jb sub stos mov jg add jns pop or loopne es and inc out imul sub dec add insl imul mov imul cmp outsl sbb mov mov push adcb (bad) cmp outsl sub into lcall mov mov (bad) lret dec add dec insl xchg test gs add dec or sbb xchg add add jbe addr16 cmpsb and scas fidivl (bad) notl cmp mov adc pushf jbe jb loopne or push aas jbe add aaa lock dec mov insl mov sbb push lret inc js xchg clc add stc jmp push push cs decl pop pusha push ret sub cltd add pop scas bnd jns ret sbb stos push dec and loope hlt (bad) or jg mov ljmp pop dec (bad) icebp (bad) sldt cmp mov fistl scas (bad) mov jmp adc movb in loopne mov add mov addl xchg add cmp ret add dec mov push in aam push push rclb xor jmp les dec repz popf cmpsl inc or add lret sbb in dec or mov cwtl pop push add or pop mov das xor adc inc cmp or xchg xchg aad xor cmpl rorb mov push cwtl add outsl add xlat add imul adc mov sbb push xor or fldl test je pop jb add cmp mov in sbb mov aad adc xchg mov stos xchg inc loope inc add sbb cmpsl cmp mov add das ret xchg add (bad) cld fcmovne jns adcl scas ss xlat or sbb push leave jno dec sbb popf mov mov popl cmp iret addb pop test outsb add sbb fildll rolb cmpsb add xor popf stc addr16 pop je ljmp jno lock push movl inc ss subl inc jmp (bad) addr16 or add jg xchg (bad) xchg mov into xchg jns push jo xor test (bad) mov dec and pop inc jnp sub lds xchg pop mov cmpsl add dec cwtl jp sub add mov jb sbb add lods icebp cli add inc ja add adcb (bad) jo sbb imul mov js leave or push js cmp mov adc dec in scas jbe aam cwtl pop dec push pushf add test aaa sbb les cwtl or scas lahf mov das repnz inc int add inc push push psllw and jne and sbb mov xor xor mov jl repz push loop test sahf jmp (bad) roll add enter in std add decb loope xor and push inc das sbb add push call pop or push lock in push movsl (bad) cwtl pusha add mov and adc cmp aam inc data16 add js mov aas jl cmp push jle xchg inc jb addr16 pop mov out xor into jmp adc pop add mov sti add push push xlat add cltd lret out jb push add pop lock mov mov dec add push xor and add mov ss add add add pop pop psrld (bad) xor lods mov mov testl and ret sub es sub out mov xchg lcall addl push sub icebp pop xchg (bad) lahf mov mov dec xchg jge sti shl lret push cmp cwtl je iret adc fisttpl push xchg dec stos jae xchg cmc sub lahf fstpl add push out lods scas mov or add (bad) (bad) scas lods test cmp cld jp,pn popa fsubrs add mov add test loope adc sub mov jo add or sahf add popa sbb ds sub adc inc push or cmp imul jne addb add roll or mov orb sbb pushf add sub push mov or inc sub adc (bad) xor dec xchg jmp mov rorl pop lret jge jno dec adc ds test add dec cltd dec cmp push loope add pop push mov imul or cmp cmp pop andl add das leave scas add call subb mov into mov fcmovb mov push add lds sub andb add inc test sbbl or add repnz notb rorl add add test int jnp add (bad) ss lock fildll cmp scas cli push jo or cmp aam mov fadd xchg push jmp mov jle ljmp add into fnclex mov push int roll jnp aaa pop push mov daa fmull fcomps in (bad) jbe stc jns je add cli xchg xor pop inc add and mov pop mov add into add jecxz test xor dec fidiv add fstl inc sub (bad) add xlat (bad) dec lahf stos add mov mov mov push out out and adc jae aad scas test lahf push xor xchg (bad) rcr fs cmpsb outsb js mov add sbb jae xchg add push jmp mov cmp or int add lods dec mov sub je cmc jne mov ljmp adc lret push sub cmc fcompl mov adc (bad) jmp add adc jns add clc mov insb inc inc xchg add rol cmc push scas push mov sbb and in rcl mov js add sahf testb inc dec nop xor movsb mov cli call stc aaa lret add cmpsl aam adc test imul sti mov and push leave xchg cmp jns pop and push cltd xchg into gs dec add ja lret jle and push sub and in mov bound jne lock mov (bad) adc push repnz push pop pusha or jb cwtl popf inc addl xor mov jo psraw mov dec sub sbb (bad) stos dec js in ficom addb add out stos sbb mov jecxz dec mov jbe xchg sti add jmp jb bound add inc cmc pop add insb cwtl pop int neg add imul pop jl jle loopne leave dec sbb jmp loope push mov add mov (bad) ja xchg int adc add xor inc pop gs mov call lcall lahf mov test repz and inc inc pop or xor imul (bad) hlt add lods insb fisubr pop add fisttpl (bad) xor add sub hlt mov add dec push stos cld push das sub xchg ftst mov and popf sub or adc fdivp imulb add sbb add repz imul aaa xchg hlt test clc inc lcall push push push std add shl jno cltd add ficoml add mov sub (bad) mov and pusha (bad) insl add pop dec mov cmp xor int repnz ret push add inc cld mov add cmp xchg mov mov jae pop adc mov push jno fldt add sarl push imul xchg cmp xor add pop (bad) lea es pop cmpsl jbe add jns xchg push mov sbb clc sahf adc or addr16 ds inc sub add stos or add mov mov mov inc out in test popa fldl adcb repnz repz mov mov pop and mulb add (bad) (bad) adc stos dec pop cld ja rep adc cli es mov call push hlt cmc outsb pushf into ret push adc push loop pop and lahf pusha insb xchg push jp cmpl add mov rolb out cmpsb push lcall mov roll xchg or mov int3 inc cs stos mov (bad) push cmpsl xchg cld inc xor out outsl pop roll popf setns (bad) push push add adc loope bound stos mov sbb aas xchg ss inc das push add mov iret lods addr16 adcl andb mov add or mov aas sub add mov dec outsl add sbb and jne add mov insb pop adc mov push outsb ss sub pop in adc and incb insb inc movsl mov jecxz cmc xor popf jbe fmul pushf mov mov jns cmp negb imul inc cwtl mov sbb pop lcall xchg cld arpl test xor popl adc add mov pusha push scas div popf mov icebp (bad) aad and das xchg (bad) test xchg and imul ret push sub sti dec sahf and add test jae dec pop pop add mov lahf add sub cmp mov adc pop xchg or (bad) fisubl jne insb popf dec ds jno movsb aaa dec xor sub add pop (bad) lcall jo cld cs xorl mov es incb mov add pop paddb hlt andb mov pop popa push in dec add inc and sbb lds mov das inc sub pop mov and rclb mov jno add (bad) popf adc mov sahf pop enter (bad) xchg (bad) adc add add add add ret mov jl cmp and adc pushf dec fadd pop sub push (bad) jb sahf outsl adc dec (bad) (bad) cltd fiaddl inc mov aad ja subb inc lods int3 add cs hlt sbb xchg or mov (bad) clc out jmp push into mov sbb das xchg daa insb jbe orb or xor lds push xor sahf subl pop xchg mov fsubr add sbb mov adc add addl mov add icebp mov out mov push add les add sub repnz mov xorb xlat jb insb mov mov adc push iret or (bad) (bad) movsw inc andb and inc cltd add sbb inc loopne jno push in pop push sub cli cld lock cmpsl pop es pop sbb xchg or xor add inc enter push lret mov push add pop add and pop mov adc sub inc add sbb lahf popl and lcall cs add add les and loopne push adc lock and lret push mov adc sbb mov xor jp jg push sbb in (bad) push (bad) jo ret xor push fstpl xorl js mov cmp insb add cltd add bound sarb jno add lret lock xchg cmpsl cltd mov inc in ljmp add xor jb add cs insl mov add into mov decl lret xchg add insl jb movsl mov (bad) jmp mov mov sub xchg sub add subb roll add inc inc fcoms sti add pop xlat iret les jp and sub imul loop gs pop push pusha jmp xor xchg cmpsl aad sub call inc arpl fwait imul push pop rclb (bad) rol decl mov push dec add stos cmp subl daa lds loopne push mov popf test push fbstp movsb cld pop mov sbb sbb add stos mov jb mov sbb or push insb sahf stc jmp xchg (bad) or and lock sbb adc popf xor aas sahf addl add mov jns mov daa pop xor mov pushw pushf cmp sub outsb push add mov (bad) pushf add call push mov jb andb mov cmp add adc push xor dec fidiv ds sbb mov xchg int pusha imul cmp sub or xchg sub pusha data16 jge subl (bad) rcll cmp lea jo shll loopne imul inc repnz inc lret std mov or mov dec test and add mov daa mov aaa pushf test mov pop add int3 movb xchg icebp sbb or cmp xor and imul outsl inc mov fsts push pop les lea jle lods outsl cmc add into jno add push xchg add js adc jmp in pop clc scas lahf cmp outsl sahf or pushf fisttpll leave add repnz das pusha popf lret add pop dec mov add xchg outsb add popf adc cwtl cli popf test lds fistl pushf scas inc lods jno and arpl pusha sahf and inc add stos pop lcall mov idivl popa sub clc shrb cmp push mov adc dec jnp mov and add cmp mov aad lods jp lea mov or add mov pop es fidiv std ret fmul xchg sub push add adc mov jae leave mov (bad) clc push mov outsb adc in scas xor sti outsl cwtl in mov and mov js rolb test repz push fsubrp cvtps2pi leave and push subl xchg int3 pop (bad) lods iret and or xchg jno push adc inc fldl add pop adc add xor cmpsl inc adcb cwtl jl dec push bound jnp jp aad pop nop inc js pusha push stc add adcl mov jnp lret addb es inc scas mov mov mov insb test jmp jo pushf out rclb lds pop add (bad) add pop ret mov xor adc gs (bad) fdivrs add dec or mov adc inc out xor iret add mov jne andl adc mov std shlb pop mov pop pushf aas pop add jmp adc cli xchg clc inc add xor adc mov aad cmp ret or pop jb and cmp cmpsl add sub jo inc out aas cli add pop jne lods mov add mov push push shrb ds clc xchg add dec cmp add jb fild pushf roll outsl jge mov orl fsts fsubs add jp aas sub ds sub test mov add (bad) mov add cmp sahf add jmp addl mov xor add loope je sub lock xor add std push add aaa out rep loope cmp inc mov sbb dec xor jo cmpsb xor enter add push and fdivrl mov (bad) cmc jecxz mov sub pop cli (bad) mov out jo jecxz add inc mov imul add lods test sbb aas add cmpsl add cmp pop je popf pop jle adc jbe cwtl push scas test in fiadd mov lds cmpl pusha mov mov and push in dec loope add sbb cmpsb jbe add daa mov repnz outsl adc nop (bad) (bad) xor push add stos xchg push rcl mov jmp add inc cmp mov sbb es jb pushl xor xchg addr16 jmp insl inc xchg ret jecxz xchg popa subl xchg (bad) test xorb outsl inc addr16 std rcll aaa cmp lahf jmp mov dec pop in pop xchg sub pop repz out sbb push add aad cmp cwtl and subb pushaw aas xor insl lcall push leave int add mov and subl pusha lock sbb popf lods pop add cs pop das or adc test sbb lea les nop or dec (bad) fwait add rorl addb insb iret imul lods sbb xchg sub aas cmc test loope add or cld mov pop rolb xchg (bad) lock jns out add out leave das and mov (bad) adc lea sub sbb adcl (bad) repz enter and adc roll or test dec mov and xor arpl (bad) jle gs (bad) ljmp test dec sub inc lret loop xchg icebp sbb fldl2t je add jmp push add rcl mov mov jp out cmp sbbl inc cmp loopne ljmp xor cmp sub add sub xchg add addps xchg and add aaa cmp pop lcall ret push popl dec adc push jp es pop inc pop jo repnz sub je imul subl ja inc jecxz sbb cld add jbe (bad) sahf fmull inc mull push cmp inc mov jb sti andb xchg je mov out sbb mov mov jns stc (bad) jae pop xor add fimull cmc hlt mov pop pop mov pop pusha xor in cmpsb add xchg loop dec xor mov in stos (bad) adc push mov pop inc cwtl dec lods ficomp add jb push push or test jle outsl add push repnz pop in or jae addr16 add sub jp xorl mov push jae push adc daa add bnd add loopne cmc fidivr add pushf lahf mov add jb mov sub mov lods rcrl popa add add out ja dec or add (bad) fstpl out mov imul dec add pop mov add lods jl test mov mov xchg pop stos mov cli movl fildl push xlat adcb lcall sub stos aad xor outsl mov lret jo add sub add xorl pop loop jne sbb pop adc pop js jb insb xchg jns inc jo push xchg lea jg ret ret mov or movsb mov mov push cmp rclb pop add arpl int cmp pop fistl je xchg sbb sub mov popl sub test call xchg jecxz push and inc das je es add clc adc mov mov movsl xchg add inc stos data16 dec jne xchg imul repnz bound xorl dec push dec mov insl stos lock pushf dec cmp add in mov imul faddp test cmpl dec das cld lds cmp lods iret pop loopne add out jo jg xchg push into xor xchg add or mov and push int loopne clc dec xor std mov cli pushf jp sti gs movsb push mov xor pop out add mov scas xchg add mov aad pop cmp ds sbb dec push jns add pop xchg mov aam inc or nop inc jp test outsl movsl cmpsb sbb add es and out cwtl sahf add das lds ja xor subl push nop fnstsw and add xchg mov scas jle add int mov fsubs fsubrl add mov adc dec loopne pop jo xor dec and or add fnstenv xor cmc adc imul push push subl ret add jns fs and xchg sub sarl jns imul cwtl lea pop setb inc push iret sbb movsb add std push xor jbe push dec inc lods hlt imul cmp std xor icebp xchg mov (bad) lea mov jg sahf stc and test dec cmpsb mov ret push add inc mov arpl int3 xchg xchg (bad) out lcall push (bad) icebp pusha pop stc (bad) mov mov jo add roll push dec lods add lret add clc xor jl addr16 jmp repz cmp mov cmpsb out (bad) (bad) in or xchg test and push add dec xchg loopne inc xor push add sbb roll sbb cld inc into push add mov lret jb rcrl push int3 add (bad) fnstenv add xor andl adc cmp daa ss movsl icebp imull jne add mov add sub xchg jno (bad) pop xor xchg add (bad) pop add outsl inc jmp push aas sbb test arpl in add xor add and jnp sub fbld add loopne xchg jo std pop (bad) iret push mov mov subb outsb fidivl push lret jg lods in (bad) sbb fs inc add daa pop inc add sbb aad add mov ret rol fs mov push mov inc repz xchg mov ret pop pusha lret test outsb and insl repnz (bad) je sbb adc pop enter pop add mov loop pop (bad) into xchg lret xor dec lret pop movsb pusha icebp add leave push int3 in addl and mov in out sbb int3 xchg jp imul test or addl (bad) pop mov std arpl add lods xchg rclb mov inc jne sub addr16 lretw sub adc shld outsb mov add dec cmp sahf out out push pop mov fiaddl inc clc add sbb movsl test cmpb xlat sbb sarl jge add jle mov stos fldl fs cmp add in (bad) mov stc and sarl mov jp rep rorl dec pop add or add cmp add mov fcomp sbb int3 add nop xchg and add in xor data16 test or add jne arpl add repnz xor shr dec add xor in xor lcall (bad) cmp test data16 inc fucomi (bad) movsl insb add in bound add enter pop jmp add into aas dec add inc fs push pop mov jmp push pop cmp sub mov sbb mov add or mov jl xor lock adcl jne pop push pop dec sahf mov ja lea add shl (bad) cmp fldt dec mov lcall or lds add nop push clc add add loop mov add sbb stos es xorb push std push lahf cwtl mov or movsl dec pop lods les mov das pop lds jl out mov int3 adc mov cmp subb lahf enter mov mov fcmovbe insl sub js pop add jecxz ret mov sbb mov pop (bad) fwait hlt js add arpl dec pusha mov movsl add in int3 punpckhdq nop adc mov pop pop xchg movb or jge jecxz ja xchg in inc mov mov xor add rcrb cmpsb sbb andl push dec leave add fwait ss sub sub mov xor lcall rorl adc xchg and add rol pop scas jmp adc push js dec jb (bad) sbbl call imul add jne icebp pop rcr add loopne mov lods movsl lods ret out bound sub add dec in mov ljmp outsl in stc js adcl mov (bad) xchg push in sub jo adc xor inc cmc mov ret fldt adc jae,pn dec cmp sbbl and movb test repz add das push or pop (bad) je sbb and add movsl in sarl xchg add jle aam inc jp rcrb outsl test xor pop inc jne add push sub jmp push adc jb and in sub jo cltd andb repnz jo inc add mov mov cld adc iret shlb outsl inc and add divb mov loop mov add inc xchg adc add cmc icebp mov add and jge add pushf stos pop add mov xchg cmp or lods mov mov pop ss leave pusha (bad) fwait add ja cmp or add and lret pop out inc es sbb gs andl mov rcll add lock push lcall xchg inc cli pop (bad) push in mov loopne push add std inc sbb bound sub insl lock jno mov add inc out cmp dec add ljmp cmp mov add jle add jae add nop pop fcompl cmp cwtl xchg insb fimul jae xor push inc push adc xchg adcb cmp dec stos call stc fidivr cmp loop scas xor les cmp mov add nop and imul pop mov lock testb adc stos bound add andl add sub cmc mov pop ja insb add add icebp cmp lret jp add ret push pop push add mov int3 xchg orb in ret push mov dec add sar data16 mov xchg push jl sahf fs sbb aas adcb arpl pop mov (bad) hlt mov ret into sbb add (bad) push movsb add negb add ja sbb mov imul dec popa and out fsubr mov sub sbb shr sub out mov add jge test push sbb xor inc jb dec xchg add xor cmp xchg xor je mov inc ss test pop or lea stos popl or mov add push incb test aaa and push adc sub mov (bad) adc data16 lret inc mov aam push sahf ret out add mov cmp add xchg ljmp or fstpl sahf and fstps cmpsb mov add fs dec dec jbe loopne nop adc inc jmp stos add jne aad push cltd jl imul cmpsb xor mov mov lret out adc out clc mov lret mov stos dec cmpsl xor xchg inc jnp push add add ja sub mov dec xor (bad) cmp daa or mov mov lods jmp sub inc sbb popl mov stos jge mov adc xrelease pop out cmp jecxz add mov cmpsb push mov xchg notl push xchg (bad) (bad) out adc push dec or ljmp push push dec pop mov jae add sub inc sarb pop andl add mov push nop add pop out add xchg stos loope push add xchg fcmovnu xlat jne cmpl pop dec sahf inc add push sub clc pop pop adc lret pop fbstp dec xor sub cmp add jbe cltd xchg add mov sub outsl cmp or fstl xchg sti iret jo or inc aam cmp (bad) add jo cwtl push sbb add dec rolb mov push push out sbb insb add mov cld ja in push fstl mov add cmc jmp fcmovnu (bad) fmull int not xor adc mov add aam pop lock test cmp jp subb call dec ja push roll xchg lret fcmovnbe add mov add add xchg add in ljmp fldt or dec xchg out bound sub popa jmp adc adc xchg inc sbb xor add bnd loope movsl add les add sar rolb push add jns push repnz add dec add add data16 icebp movsb scas stos roll testl mov or add in push idivb push add jge sbb mov mov add push jbe mov jno jne sub mov rcrl movsl lret loopne lret add mov add (bad) jb cmpb cld push inc ds das out shrb lea adc pop sub cmp aaa jl enter jne dec stos xchg into lahf out ficom xchg repz xor hlt jp add cmp pushf mov fistl mov enter jmp jge push mov int3 imul add pop cmovle in inc inc repz jg adc add mov lret mov lahf pusha cmpsl jmp repnz lock mov cwtl (bad) out cmpl inc add adc fiaddl mov lods movsb dec add les pop add test inc repnz add cmp mov loopne sbb xchg inc add cmpsl add push jb cwtl add xor add hlt mov mov cmp adc gs sbb mov fcmove xor and add push cmpsl pop adcl mov subl aaa cmp (bad) insb or add xchg jo aad add jmp and into mov loope pusha scas mov push xchg mov or fcomip (bad) pop and inc add mov dec aaa add out xchg decl sub dec lahf mov pusha leave xor orl fildl stos add mov (bad) js jl mov jg inc inc push jecxz add inc fistpll inc stos fildl or ror idiv test add sbb xchg add xorb fs les push into pop cmp add sti out mov mov xor fcompl jne pop mov sbbb mov repz loope cld jp or dec push pop dec (bad) dec adc aas (bad) adc daa loopne aas mov inc dec add sti leave mov push dec gs push (bad) clc fistp jl and loop dec xchg fwait pushf add mov inc or pop or jp in fiadd scas jg lret iret jecxz cmp popf (bad) sbb jb cmpl and sbbl adc mov mov xchg pop push es icebp sub sub outsl inc daa add nop ret int3 inc add lret pop dec or fs into fldt inc add fcomps push add push inc inc jne add iret fbstp cli sbbl sub out jns add sub in xchg mov jb and cmp les or xor mov dec sahf clc push xor es adc lods and add adc cs out add idivl add das std mov jno (bad) lret add push (bad) fildl push test sbbb sbb sbb nop rol add pop jge add push pop hlt dec jmp ja add out adc test arpl lahf pusha les sub push cmpsb xor sbb mov jae stos jp add scas std dec out je bts out or test pop xor in jg leave ss sti add lea dec insl push add aas clc cmp out lcall das loope cltd fsubr mov xchg push sub sbbl lods (bad) or mov xor mov (bad) dec inc add and dec mov dec js test mov movsb mov adc inc push add pop add rcrb lock push sbb sub xlat or test push fmull push mov add popf push inc adc aam xor add dec jge or int3 outsb imul sub leave mov pusha imul das aas rolb stos insb add inc xor mov (bad) jle or repnz pop push js or in arpl mov cmp add (bad) fsts jg add icebp jl sub ror test xor inc add push rolb xchg je lods sub jle jno (bad) (bad) cmp in pusha xchg mov and pop cli movsb bound cld xor les xchg std mov mov outsl jmp push mov aas subl cltd and mov or xlat cmp jne mov sahf jnp push xchg jecxz adc add pop adc cmp and lds jl add push jle add lods (bad) lahf popa cmpsl orl and jge xor je jne add sub xchg xchg leave imul add loop and sbb push add mov jmp (bad) lcall orl mov add aam cmp in pop add jb add jns sbbb orb sbb add lahf xor mov push or ss adc dec xchg adc push sahf add jp cld adc loopne push push add push pop inc insl (bad) jno add mov mov add fucomi pop mov add sbb rcll orb clc mov or sar das pop mov ljmp or push pop add mov movl push inc add fstps ret stc push adc sub sub push in iret pop mov sbb (bad) or jb add sbb jne mov mov lock push test add ret jge adc mov sbb cmp cmovle xor int3 add or movsb push add jecxz loopne jno and (bad) xor jg jb jp mov lods xchg add bound sbb out inc rolb lret fs das push insb xchg stos mov lret push and push sub xor inc (bad) testb pop sbb out jo add (bad) sbb mov jns idivb xor sarl add pop pop lret imul add or addl mul pusha push sub xor inc cmp inc add jle mov stc in sbb sbbl jmp add jecxz dec add or add lahf add sub xchg mov pop in fwait out lret repz adc cmp add dec xor mov mov mov pushl cmp adc fs imul jmp jle in jp std push popf cmpsb inc jae mov sarb in pop and adc add mov lret enter inc cmp popa add jmp inc sbb sahf hlt xor push js add mov xchg scas push xlat enter dec add mov addl push jp push xchg inc fisubl iret xor mov jle jecxz pushf lcall xor inc adc pop or xor cmc add jmp cmp add in add sahf push inc jb shr lock in push xchg cld mov jo dec add inc adc sbb pusha lods std sub pop js add pop mov push jp cli xchg idivl inc fdivl xchg int add xchg inc push sbb jno dec call shll jnp and and (bad) int es pop (bad) movsw mov add push mov std mov xchg xor jo adc mov inc mov icebp cmp or lahf and inc jb ret inc sbb push push mov outsb mov add mov test mov xor (bad) mov imul js sub outsl cmc adcb rol cs insb xor xor aas insl mov cmpsl ss pop jae xchg inc mov sbb lea lahf imul mov cmp and aad movsb add push mov outsl xchg (bad) pop jle add xchg jecxz rcl int3 add jbe imul push add pop xchg push xchg sbb mov sub pop add stos fild scas jbe cmpl mov xchg or aas push mov add hlt cmpsb popa ror insl and fistp outsl and pop pop cmp jp push fcoml mov sbb and sbbl (bad) fist or mov ret imul xlat xchg push jp add cld (bad) cmp mov cmp mov xor push add dec jne loopne (bad) mov movsb xor lock mov jb add push mov xchg and dec cmpsb out jae pop dec sbb pop test add dec cmpl lods sti cwtl bound add sahf push test jbe test dec stos aad adc aas sub data16 cmc pop xchg add add cmp cmp adc add push cwtl or cmp stc add mov pop inc sahf dec jns pop xor sti cmp (bad) js jg dec xchg in mov push pusha pop orl (bad) sbb ror and dec clc cmp popl out mov sub jno test add pop push cmp mov jg pop pop in aaa fist add (bad) xchg movsl outsb add mov das addl pop std leave sub jbe popa subb lea mov add mov xor fnstcw addr16 add lods (bad) lock aad push xor in inc xor mov push int or or enter iret add xor test push rcl rol sub add dec jno adc mov add push pop push adcb cmpsl mov aam jno shll add addr16 pop push push mov arpl mov add xchg mov add xorl jp and hlt ret mov inc pop cmc inc js cmpb pop jno mov mov xor mov add (bad) sbb jbe mov mov arpl cmpl jmp movb scas xor or subb mov add cmp add movsb mov dec and mov jnp int lds add jmp or pop movl push mov add jae mov jns add frstor lds lahf aas addr16 cld mov cmc nop dec out in adc (bad) pop inc add ds add sbb mov and adcl sarl sbb cmpb dec frstor add andb cmp imul or dec sbb mov test add inc (bad) xchg lock imul pop mov and int3 hlt or (bad) dec cmp jg or rcrl aad dec (bad) mov sbb add loope,pn cmp mov addr16 xchg sbb mov rolb or xchg jo pushf add lds sbb jo (bad) bound xlat (bad) fcomp cld pop jle lahf lret mov or add add adcl popf sar pop push and lret (bad) mov add push cwtl xchg xor sbb sbb dec mov test and decl xchg icebp sbbl pusha pop cmp mov subb stc (bad) lods and mov pusha xchg xchg jmp inc add js pusha and add pop or mov jns pop adc mov lret jo cmpsb fnstenv add je pop fisttpl or loop adcl add adc push mov xorl mov faddl insl adc jns xchg mov mov data16 scas dec add stos jno mov fld add push sub stc out jmp dec jg sub dec mov rcr mov add stc pop mov adc add push cmpsl sub jbe add jl mov adc sub mov outsb pushf lea (bad) pop rcrl nop addl or mov orb lds daa add or add jge xor cmpsb or add push jg cmp fldt aas cmc add add and inc pop aaa push adc dec add loop push adc cmp lock loope cs and inc mov dec roll xchg shrb add fisttpll or iret add dec or mov les aad or cmp sbb xchg imul jl adc sub cmp jo orl inc out test jecxz cltd movsl sub xchg out cmpsb sbb xchg mov push and add mov add fisub mov add sbb ret mov jo adc lahf outsl aam dec rolb pushf and out mov push mov in sbb add push mov jg mov loope (bad) aam pop stc jmp and adc dec mov push in fdivrs xchg mov ret stos push or mov adc cmp sub negl aam add imul jmp aas add ja (bad) and xchg sbb mov add inc loop pop popa inc (bad) xor push inc or out jl fild cwtl mov fsubr add mov push gs jnp add cltd clc mov add sbb (bad) (bad) rolb inc neg jbe dec jbe add sub rcr stos lcall add daa popl rorb add jbe xlat stos pop adc in add add mov jle xor cltd mov loopne lahf sbb jns div in fiaddl orl cmpsb mov mov mov xchg mov xlat icebp dec fnstsw int sub adc lods flds pop mov mov sbbl push jnp bound cmp mov mov stc pop mov pop add sbb loopne cmpb movsl inc cltd test cmp xor push add add rolb fwait (bad) popa push stos add inc pop dec and jbe mov clc adc gs jnp setle ja push test dec ret cmpsb adcl lock pop push mov jg (bad) mov daa test inc fisubr data16 mov adcl adc push inc add pslld add mov push mov iret cmpl pxor sub sub and mov inc jno xchg fisubrl push xlat sbb daa cmp push sarb repnz dec push inc jecxz (bad) jmp adc xor jl mov out add insl push popf mov xorl add mov jg jbe lcall insl lods test cmp mov stos adcb movsb inc bound adc div sub push into pusha push jl add jecxz mov add dec add ror jnp inc push cmpsl pop fimull fadd ljmp push xor adc in movsl inc mov (bad) mov pop aas inc lahf (bad) lds test xchg or popa add add mov (bad) and pop loope jl scas orb adc scas cwtl mov and out (bad) adc push sub or int3 cltd jmp push (bad) jae push push jl dec mulb cmp int3 mov adc fistl pushf jmp daa push mov push push inc in (bad) es out mov mov sub outsb push cmp movsb mov mov pop sarb jmp xor push ret hlt insb add mov mov push sarb addl loopne cmpsl add sbb jo pop icebp dec testl xchg xchg mov popa sar jecxz jp inc mov mov cwtl jae outsl ret adc out fwait xor aas pop push push push ljmp iret dec push push adc bound pop adc mov out mov jp sub adc (bad) repnz xchg lret sti pop add jp jne lahf add rorb pop ficomp add mov dec and (bad) imul pusha fmul mov add push les sub add xor mov or (bad) in mov mov (bad) xchg fwait dec popa xor into inc xor bound mov push jae jecxz pop add nop and mov fs add or jne mov or sub and mov ret cmp das jmp sbbb dec je jmp bound mov addl xor xor flds dec inc (bad) in xor push int3 (bad) adc and cmpsb or cmc sti mov mov mov ret pop and adc mov subl orl mov jge cmp out jle xor xor pop adc popf mov or cmp ja add cmpsb test mov ss lahf shrl push movsl add iret jge hlt rorb add loopne call pusha stos and fs jnp mov bound orl xor pop insl sub popf add sub inc inc and sahf pop clc cmpl cmc (bad) or sbb pop jmp movd sti push decl roll sbb sarl imul repz (bad) fwait adc mov jmp mov add push insb jg or hlt test jle add inc lods add lock orb push mov pusha add mov cwtl in jg add ret xchg xor pop and adcl fcompl std andl lds mov inc xchg jecxz test add add add or repz sbb dec adc loop popf out pop mov pop dec lock lods cmpb movsl fs fiadd loop dec pop test jb insl adc insb je sub aam adc and xchg cmp dec inc stc cmc adcl sahf in pop aas fbld std rol loope dec insb mov jb mov mov cli adc ja sahf fldl adc xchg inc adc dec and addb and ret cmp leave mov fstps xchg jmp aas lret out sbb jae hlt xor test pushf gs lret xchg or xchg mov hlt in add rolb jns xchg jp jb ljmp sbb dec mov aad sahf out and ret xchg and (bad) cmp cmpb mov cmp add ljmp mov stos test test mov jl inc sbb cmc add in mov (bad) into and add adc cmp jle,pn xor mov sbb push add call inc jns add repz add icebp bnd dec mov xor scas outsb roll sub test sbb out dec loopne movsl xchg stos jg sbbl push es xlat (bad) fiadd xor movsb mov sahf sti mov inc outsb add mov push scas subl pop push pop sti add gs out jge xchg sarb mov push xchg inc pusha aam pop mov std mov jns add push fs (bad) sub cwtl mov pop inc repnz push xchg or repnz add push mov loopne jp in jno or push jb cmpsb add adc js mov iret inc push nop idivl pusha push repz sub leave xlat ljmp cmp mov sbb lahf sbb adc and cmc mov rcrb fidiv add setp and das cmp xorb into and sbbb push xchg mov sbbl sub add iret push add mov lods mov sub js add jno repnz dec add stc iret lret cltd imul pop loop add mov lahf lods mov aas aas sahf mov sub je icebp sbb xchg add js mov notb jle add push lods cmpb xchg das mov lcall add movsl daa les jg addr16 push jle into out (bad) xchg inc mov add cmp lock in push popf mov out mov les ficom inc jbe imul sahf icebp insb test pop jnp sbb cwtl cmp les movsb rol orb adc cmpsb and inc mov loope lcall bound push test cmp cmpb cmpsb push outsl add jge mov add add aam mov insl pop or pop or test icebp fild cmp pop in jo xchg and cmp scas sbb sbb lea sub inc add mov mov movsl cmpsb lahf or inc dec and mov dec cmpsl or and sbb mov adc sbb mov enterw add sub lret subl push cmp or sub dec or adc divl cwtl xchg pushl iret add popa ljmp mov pop push xor mov iret pop (bad) movsl push andl idivb (bad) mov sbb fistpl inc pushf add dec fisub iret and add or sahf sub pop pop add sub mov mov lea mov push jge add test rcrl std test add aam inc cmpsl icebp lcall jp push add or fldenv lahf cmp sahf xlat aad ljmp ja sbb (bad) xchg (bad) lret push cmpsl out adcb repnz fmul and test lods xchg pop sub fs xor cmp jg push xlat aas mov add dec inc pop xchg int3 fsubl stc pop cmpsl scas and adcl out cwtl ja xor add lock (bad) mov nop movsb add mov mov xchg pop jmp test sub add pop imulb incl cmp clc negl xor and push sub dec pop xchg add loop enter ss test test push xor (bad) add bound mov cmp add sbb or xor adc jmp and add js repnz or out lcall test xchg mov movsl add (bad) insb orl je negb cmp cmpsb xor jmp jbe jg fisttp test (bad) mov push sarl aam xchg or cwtl mov rolb mov xor inc jae push adc int3 sbb lds jns mov js das test pusha dec jnp add repnz in imul outsb lahf sbb fnstsw and in pop or inc sbbl mov mov lea add aad aam mov add dec (bad) pop and sti addl je stos mov leave in or sub cld nop push adc ds lea mov test push shlb or je and std sarb or push mov mov xchg cmpsl adc outsl xor in push pusha movsb sbb in mov xor mov mov testl and lea out xchg and dec xor mov inc xchg cld ret les sbb pop push add xor add cmp ss jle dec sub cmp arpl dec icebp dec ja add pop fmull xchg addl xchg xchg mov add jmp test add rcrl out mov sti out scas cmpsl adc (bad) mov rorb subl cmpsb jmp std sbbb xor mov xchg daa jp jmp arpl xchg lock test dec add sub push fwait mov inc and std jp mov jne int add aaa les int3 xor and xchg or subb bound mov movsl add jg xor gs add imul adc or sbb jmp xlat dec sub dec add pop adc lods add rol mov add cwtl stos mov mov dec rolb leave sub push rcrb xor jl sbb add and test inc gs adc dec in arpl aam (bad) sub and fld lret lahf add scas pop (bad) pop mov out aam sub fsubrl push sbb xchg jg lock mov xor call push cmp packssdw cmp pop jo nop test test xchg in fnstcw fdiv mov stc loopne das outsl xor leave xchg mov pop inc add mov mov insb and jl inc dec aas push or stc adc inc and aam mov add sub aad sbb lods sub jne orl loop lock pop addl out cmp scas stos shl adc xchg pop int3 movsb insl add test ds repnz fdivrp jns add xchg jle add loop mov and sti add mov pop xchg lods pushf mov pop scas pop sub mov or sbb add jo pop jp push push sub and pop out jb aas ja xorl pop jnp add sub sub pop xor xchg mov test add xor outsb rorb or in push adc push int mov loope cmpsb hlt in pop or aam incl xorl add divb mov (bad) fdivl (bad) adc test pop xor xor fbld add insb pop loop pushf roll scas and cmp adcl flds jae outsb je and mov xor out fnstsw add ret (bad) cli pop (bad) add fwait nop inc mov pop mov mov mov cli (bad) jmp add aaa push mov fild dec mov ja inc leave in inc pop ret stc cmp addb or jl popf lahf push sahf inc repnz loop pop pushf jmp loope mov imul sbb pop xchg (bad) lcall adc ja mov jnp mov call (bad) ficoml fdivr sarb testl lods jo (bad) mov cwtl pop cmp sub outsl push inc mov mov stc pinsrw pop lods mov mov andl andb and je sbb mov pop add mov iret xchg sahf gs fisubr dec and mov push sub inc adc cmc xchg xchg mov xor aas loope fildll cmp lds jne add or dec push in pop pop je inc sbb xchg push jecxz es sub mov (bad) push mov inc jp lock ljmp movsb adc vmwrite add lahf fild jo xchg xor ljmp test lcall add xor add inc mov xchg pop bound add outsl addr16 add lods push stos add jl or sbb je imul cmpsb enter mov hlt fcoml add mov call inc add sbb stos xchg or ja add out scas cmp aam cmpsl cmpl sbb and in adc jg cmpl aas mov addl imul or fdivrl pop in push lret loop es and les or jbe push jne (bad) mov cli pusha adc xlat add cmp push dec out xchg cmp add rol addr16 add add add pop add xorl test dec add mov add popa push gs leave mov or mov and roll dec jne cld add pop and add add arpl or sub in cmpl rcr mov jl subw add and addl aad inc clc push stos add mov mov push bound rolb xor insb cli jns and das inc sbb add mov sub (bad) mov in cmp mov into push inc add test add les movups pop dec dec pusha pusha fyl2x sub inc jo or out push add dec add cli shrb stc ret (bad) adc cmc adc add xor (bad) je push add push daa mov fstps and rcrl in dec cs sub or push inc rol and xor pusha js push add mov jmp push data16 jle add jg and sbb inc incl add jge inc lods sbb mov pop mov sub inc ret jne popf ljmp jo pop push mov test cs mov dec dec aaa int3 aas push add mov push push dec jle pop push sarb add fidivl jns dec loopne mov sub addl ret pop sub inc xor inc push lods ds dec ja int sub (bad) popa pusha popa jmp (bad) lret incb xchg pop lods sub dec addr16 rol out andl adc pop fisttpl inc mov ljmp movsl add mov jnp pop xor add jne pop jl sbb insb mov push out push daa xchg addl repnz and aad out mov cmp data16 ret fs cmp push dec std mov add outsl dec ret dec add nop int lahf sub add xchg dec add sub add sbb scas mov sub stos pop cmc jns add xchg or mov mov pop xchg and in cmp jle xchg dec js cwtl pop jge add outsl and add cwtl add adc stos out mov cmp and (bad) leave pop add jge (bad) call or les lds ja xor fadds clc push add mov mov ljmp inc xor mov repz mov rolb ficom inc fldl aas mov sbb add insl cwtl icebp fcomps cmovbe jns mov loopne xchg fisubr std adc (bad) mov xchg sub inc das adc jne adc jbe push shll add push int xchg out fdivrl jb icebp mov fyl2x pop mov pusha movups jp xchg push ret xlat fsubl add mov insl int3 sbb cld cvtpi2ps or lods xor shl clc (bad) adc xchg test repnz es out int push sub lahf push push outsb push fild jl cmpb mov sub push xor in push xchg clc jmp in sbb loop nop je xchg shrl and mov adc add dec enter jbe loope,pt stos lret shll pop fidivrl pop aas addl mov push sahf hlt sub (bad) adc sarb jo mov pop push add iret cmpsl imul or add adc (bad) jg xor add jmp adc inc dec sarb pop jge add mov xchg iret push cmp dec imul inc mov loop mov minps jns add sahf xor pusha sbb test into mov movsl test mov adc push jecxz stos das add add xchg inc mov inc imul adc das popf js out fildl jmp stc push mov inc loop push test dec int gs out out push lret xor jg xor pop jo addr16 mov ja dec pusha mov jnp xchg mov and add fwait mov add cmpsl mov mov inc add mov notb push adc roll mov pop test fmuls (bad) (bad) push jb add push inc (bad) add dec sbb push mov jmp popf xor popa xor stos mov aaa pop xor ja test sub popf adc sbb pop inc mov xor inc js dec push cltd aam mull addr16 add nop inc notl adc dec pop cmp pop sub lock mov out das adc fnstsw movsl incl enter push cli push push add xchg (bad) fidivrl andb hlt (bad) fadds fcmovnbe ljmp xor add imul rcrl dec inc mov shlb insb sub inc sahf jno jo adc pop inc sti fcmovnb jne leave sbbl in xchg push out or stos gs lcall cmpsl aad xchg (bad) sub fnop bnd sbb add cmpl pop sbb xlat stc and getsec fcoml pusha or cmp inc xchg push sub and push and add ja sub loopne and aam xor rorb shrl jno dec xchg sbb cmp jp lahf in ret ficom push scas js cs add cmc jle loop jnp cwtl jmp in incb jae add shlb (bad) pop shlb mov dec mov jne nop pop mov shll jl adc cmc add xchg daa subl inc add loope mov pop iret push and and std adc lea mov inc jb mov add inc and sbb xor lock mov jp orb outsl xchg dec shlb mov dec add xor roll pop cli adc add gs stos inc jmp push in cli arpl add out (bad) xor add cwtl sbb xor in push and movsl jge lret in hlt int sbb jle push push push push gs pop imul sti out dec out add jne add je leave cltd mov dec xchg mov add gs test cmp popf mov and push cmp (bad) dec movsb add loop xor out pop nop inc popf enter push xchg out add daa int hlt mov je mov jle add sub enter ja in inc xchg mov cmp repz jne verw lret outsb mov or pusha (bad) xor js in test mov aas movsb pop pop mov add repnz add mov popa pop aaa bound out or fs lods (bad) jle in push dec ss ja insb mov xchg sbb (bad) fdivrs add adc inc mov mov mov ljmp cwtl jnp rclb or mov add add loope xchg jbe add sbb ds fnstcw mov out (bad) loop ficoml fist lahf add mov xchg sub lods (bad) and push insl mov movb pop lret lds add in jb test test inc mov add lret push mov cs push mov xor stos mov jge cmp push loop mov add sbb fcomps out mov cmp mov (bad) cmp add rcr mov leave jno add mov stos mov sbb in lcall inc mov dec cmpsl pop aam and add add adc lods add int mov outsb push subl or (bad) push mov mov mov cwtl mov or les dec int3 ja add mov mov adc push loopne or enter mov int3 cld sbb icebp (bad) (bad) mov add sub jbe sub loopne add adc pop adc jne add and shrl cld rcrl jbe mov call std mov sub or iret inc int dec aam push lds add add push mov stos mov add in or rolb pop aad jecxz pop sbb lret insb call xor aaa xor in inc push addb lods sbb add fadd dec push jl add jno cs dec call fisub int xchg jbe into adcl stos jl push dec (bad) in mov rclb gs mov xchg add sahf inc dec inc xor xor aad pop cli iret dec cmp (bad) jne inc (bad) (bad) lock addl clc xor inc add inc (bad) fild scas mov or adc popa jno mov add fldenv mov aaa jp cs cwtl dec add lock popf jne add sub fildl dec mov adc xchg fsubl inc jge subb mov jp test arpl aas sub push and shrb sub pop popa rcll js cwtl add mov jns andb es mov arpl (bad) jmp aas jns add lahf popf and adc hlt pop add (bad) cmp mov xchg fsubrp add push jge mov lock orb mov jns out pushl lods (bad) insb inc sbb sub hlt dec out (bad) adcl add push addl jle rolb push dec insl lcall popf (bad) adc test loope leave pop fs jge das add rcll xchg xlat bound xor daa fiadd sbb test pop leave sub mov outsl fldl mov cld jbe movb xor mov add rcr dec push cwtl xor (bad) dec iret pop add xchg sahf pop outsb inc cmp sbb sub adc loop fs imul dec jbe jno xchg sahf xchg outsb rcr sbb fs pushf or jp fidivl scas inc pusha in outsl inc adc js add push (bad) lods push sub mov (bad) xor pop (bad) loopne jo in cmp mov inc dec icebp push fwait nop test ret xor adc das cmp inc adc iret jb out scas fsub inc les in dec and push cs enter inc push inc sti sahf dec xor mov mov xor add iret mov mov push adcl add pop notb ret dec add (bad) adc xor or call dec cli sub sbb (bad) repz pusha lret lcall pop (bad) rclb pusha jne xor jp and (bad) hlt ljmp cmpb jmp in mov out dec sbb sbb (bad) ds sub scas dec add lret stos lods sbbl rcrl sub mov repnz jle mov mov cltd fcompl subl into pusha imul shr push xchg mov nop incb (bad) jne push out push xchg ja aam xchg test (bad) or jge mov mov jne pop pusha test mov test mov int3 outsb or add jge xor mov test mov cmp ljmp inc imul addr16 and mov push add sahf test add ss aam and rolb push les sbb (bad) (bad) std adc pop ja sub xorl inc push adc ds sbb mov xor xchg xchg add pusha and cld add push dec call aaa cmpsl insb xchg mov mov imul pop add lods inc cmpsb stos imull add push call sbb push ja pop repz jns (bad) (bad) cld roll push mov cli dec ret or add sbb sarl adc xor aaa in addl jmp ja xor (bad) shl insb faddl loopne jbe or adc lock (bad) jp add add cmp inc push out addb push and mov incb jae in movsl add xchg daa rorl sahf xchg inc js add cmp (bad) xor cmp sbb xchg (bad) sti dec std pop add jbe push xchg fist jl jno or adc pop dec add in mov out out ljmp add pop xor xchg lods loopne mov xor pop insl scas roll inc sbb or sarl jmp shrb mov stc jecxz add inc lock (bad) add pop ljmp int hlt test inc xlat and or and enter (bad) cmc inc gs loopne addl pusha cwtl outsb add daa xor add in xchg and xor pop in pop das mov push stos add mov cmp pop pop repz inc add sbb outsb add int3 fimull andl cmpsb add jb imul sbb iret out je pushl mov (bad) scas fisub ss adc mov add into out mov push movl fmuls test and or pop (bad) mov ljmp sbb out (bad) mov jns pop mov add adc adcb nop and aad or add (bad) loopne outsb sbb lds adc sub push call add jnp popa movsl int3 add out fisttp lods cmp pop sbb shl sub pusha popa aad xor sbbb adc loopne or mov add repnz mov jmp movsb or popa pop and sbb add add (bad) cmp xor pop jbe add xchg fwait popf fmull mov jmp orl and jne fldl lds int3 mov mov adcl push mov push push mov mov popf (bad) and xor js test mov aam fld cld int in add push adc popa push sbb add int3 out add insb jmp add aad pusha aam lea pusha (bad) (bad) sbb cmc mov movsb dec add lcall sar xor bnd xor jmp lods imul dec pop imul gs repnz into jl addl xchg add add test pusha fcompl cmpsb in fninit xorl or (bad) and inc adcb add push mov jecxz sbb mov xchg movl jbe push stc push mov cmp mov inc mov add or (bad) push add lcall mov adc (bad) insl fldt mov iret mov cmpsb aaa pop subb test push xor or iret and fcmove movl lcall adc add lock pop popf cmc xor mov (bad) push outsl mov (bad) aaa adcl enter mov fwait sub mov pop adc pusha iret (bad) push mov or call rolb and repz out cltd xor (bad) pusha fwait jg add xlat xchg cli cwtl xchg lods add mov mov add flds xchg (bad) pushf push aad adc inc pop sub in out and daa lcall imul movsl imul add add mov cltd xor add add fldt sub push xor mov dec lret fwait rclb imull add (bad) dec cmp cmp (bad) adc pop je xchg xchg loopne jge (bad) inc rorl repz mov cmp xchg jbe dec jno bound sub sti (bad) mov dec lret mov mov mov jmp push jnp pop jo aad pop mov xor mov int3 mov pop jp pop dec jge add jno insl aaa push fdivl popa orb lret add adc popf addr16 cmpsl (bad) xor in imul add pop (bad) repz adc call test mov jle lahf jl mov mov je cmp hlt sahf call stos pop cmp pushf inc sbb or inc pop push add sbbl push and add add lock and add push xchg cmpsb adc dec mov test fild jp and dec adc bound add cltd testl mov aas and pusha ficomp out cltd mov seta mov xorl (bad) mov xchg inc das movsb xlat xchg add mov aam mov jae dec scas jb jp mov mov xor sbb jecxz push pop lcall movsl cmp adc push mov jl add pop stos push movsb notl add pop fisttpl repnz adc mov cmp pop jg cmp jne aaa outsl out test mov add pop lret (bad) ror dec pusha popf bound mov inc dec xor imul (bad) or xchg add xchg add out test ror pop orl lcall xchg xchg xor (bad) ljmp (bad) jg add pop xchg mov mov jb jnp ret mov push (bad) mov outsl and xor jmp push fnstcw xchg out inc hlt xor push in and pop dec push fsubrs add arpl in sbb loop or sub dec lds cmpsl in jmp pushf mov inc mov mov xchg cmp (bad) cmp mov pop jge add cmpsl fdivrp add je out into adc and cmp add mov jbe sbbb and jl lret fcos mov insl int jecxz xor add mov push push xor rolb pop and sub xorb nop std add xchg inc movsb adc add jbe (bad) add mov push sub push adc dec out insb subl (bad) aas adc pop clc add add mov rolb cwtl pop pop repnz lret pop xor (bad) sbb into push add and fiaddl push adc loopne loope test clc test (bad) xchg push pop jnp cmp inc xadd inc jecxz push repnz scas add or mov jmp jo insb in pop int jns loop ss jge add xlat xchg sub push add push xchg push mov dec (bad) jb insl or gs sub jmp mov mov rcrb lds dec js stos add mov addb push int test mov das sub xchg xorl es cmp rorl add jmp hlt scas xor push xchg sahf add jmp fwait mov pop in int repnz push enter faddl scas inc out sub xor aaa sbb inc subl sub inc add mov add jo sbb jbe cmp mov and pop add test add xor inc lds push sahf sbb add mov insb mov or cs scas push mov adc mov jnp shll push scas jo rcr add lret fwait xor add mov (bad) lahf pushl ja es mov xchg sti mov xchg sub fucomp mov daa cltd add adc test dec stos (bad) and and mov mov lcall xchg sbb adc add xchg push call add mov pop xor or pushf into push ficomp mov stc frstor and add xorl cmp insl sbb fisubrl rorb sbb iret dec leave push cmp incb or push std test pop mov dec cmpsb inc push rolb xor xchg mull aad dec add and fnclex or mov addl push lods jnp xchg test and add ja push mov jae jnp aas pop (bad) xlat pushf mov mov add dec insb mov mov add fistpll jb scas inc pop lods push mov sub push cmpsb mov adc (bad) push gs sbb sub aam nop test mov mov notb test pop loop jbe and mov lods inc out xchg cld imul add adc jg xorl push mov inc sti lahf sub push mov cld cltd add mov cmp pop cwtl mov out pusha xchg mov rcrb std or and fdivl aaa cs jnp dec sarb (bad) sar push lds and je dec or push adc add outsl mov adc enter mov add fisub mov jno inc cmp jmp xor inc imul mov test jecxz idiv add test add out mov jo add sbbl or out je add add add (bad) adc add xchg xor aas xchg add mov or adc fiaddl adc sbb push push lock pop push pop dec in add ja out test shr lahf add nop push arpl out cwtl movntq cltd mov adc inc cmp mov pop in int lea popf faddl jno inc mov fldt loopne mov cltd fisub jo jge mov gs in shlb incl jno sbb test (bad) cmp mov in fwait or out mov sahf push bnd rclb pop add mov into sbb jno xchg dec cmp mov jecxz in cmp leave fwait inc add sbb cmc loope pusha jo add gs mov andl aad jecxz mov mov push mov mov (bad) sti add jecxz daa ds add cli cmp cmp (bad) (bad) std dec imul xchg ret adc jb jmp pop push repnz mov mov pusha aas add int jle cmp add lret fldl mov pop pop pusha cmp pusha stos (bad) jbe push imul sub lods mov (bad) leave insb mov or inc out sbb or adc cmpsl adc xchg and jne inc mov mov inc jns adcb std jp imul rcrl add push icebp or and xchg jb call mov or out insl add pop mov repz push outsb add adc ficomp shrl add stc mov jmp mov inc add push jo xor out xor adc xchg inc xchg (bad) out add js rolb shlb add clc push or dec int3 add int inc es jmp data16 push cld sbb mov push add sbb pop cmpl adc or xchg ret adc add add es dec cmpsl inc dec shr js arpl mov jbe lahf (bad) sbb sbb fdivrs xchg stos test adc cmc or xor popa xor and jle inc (bad) adc fcomps push sti leave imul add and mov jnp push add inc pop mov inc scas clc jle mov jns adc add in nop mov adc xorl sub adc pop add (bad) dec shrb mov addb xchg pusha and add daa add push lds mov or lods or adc das sbb mov xchg rcrl lret shrb aad jecxz lahf js pop dec ds push and outsl bound pop sahf add daa jle out js cmpb adc pop test mov or nop adc shrb ficompl pop add sub (bad) jns (bad) stos cli add xchg jbe inc add mov sahf pop add add dec andl push andb mov xchg (bad) sahf in test xchg (bad) cmpl adc std shl jo insl cs jns add in test dec ret cmpb (bad) cmp loopne popw or insb cli sub outsb test inc pusha (bad) xor or ja sbb xchg fcomps mov out sbb xor xlat add add stos unpcklps cmp mov testb inc ss mov lock sub pusha pop js and lret xor xor add sub inc stc mov xor bound sub (bad) jae jl or push adc test jge dec inc nop pop data16 mov pop pop add repz out es fildl fisttpl cld test or in lahf xor add xor inc sbb test pop sub dec jns mov or xlat lea and and cmp pop bnd add movsb mov flds add push cwtl push add xchg lods mov repz push in inc cmp pop hlt fcmovu or test inc push cmp pop je or sub add add add cmp mov sbb fs icebp (bad) or dec cmc push out rcrl cli js mov fildl sub popl add in pop enter add fstp mov add out pusha or outsb adc mov cmp js sub xchg les enter aas incb (bad) jg sarl push iret loopne data16 repnz mov adc jbe add add mov pop fucomp push aas cmp or repnz and xchg and jno es lret insb fs sub cmp pop scas (bad) cmp push pushf (bad) jb and pushf and xorl xor and push in repz sbb jg or sbb in stos sub pop out cld mov (bad) xor fnsave push addr16 dec add scas add fs loope movsb in xor rcll dec lahf push mov pushl xor add das ficoml add adc testb pop push movsl push cwtl xor add sbb (bad) xor out sub enter mov ljmp rcrl test push (bad) jbe es dec gs in jns cwtl sti leave orl jnp add inc jge and xor mov add popa call jecxz and add inc popf test xchg sub add mov add adc add int3 test or iret add pushf pop incl cmpl lods orl xor mov aad cmp (bad) mov gs xchg cli cmpsl mov mov add (bad) out test int3 popa test insb mov add jb fisttp add pop add mov lds add and icebp mov (bad) mov jbe mov and test js mov cmp hlt push xchg add jg stos (bad) xchg pop data16 faddl sar xor inc push mov es addl xchg sbb sub std orb pop add int3 rcll jne inc add inc cld jo or jge dec push jl mov leave sbb mov cmp jg mov adc xchg arpl xchg lahf xadd test ss push and iret stos pop jb push pusha xor xorl roll pop mov dec lea add add push jmp adc xchg into leave dec mov adcl mov dec push xchg test or sti jg addl xchg inc cmc fsub (bad) mov jge add mov and addb jp dec add in and gs add test scas add stos cli push add xchg mov xor xchg sub test icebp outsb mov pusha inc mov fisttp lock lret add push push fadds adc cmp inc add mov dec decl orb xor pop lahf inc cmp dec fs mov gs das jns jnp,pt out xor rolb outsb (bad) and push xchg xor movnti insb or lret push int3 loope add cs push gs lock sub por dec cmp pop jge xchg adc sbbb insl les es adc jnp and and pusha adc mov mov ljmp or lock lret test pop cld es pop bswap fsubs out jae (bad) pusha jne add js or fiadd icebp fnstenv imul cmp and stos movb push mov subb in lret mov into lahf loop inc mov subb fisubl (bad) add nop jle xchg pop inc lret insb mov (bad) out addl outsb push rcrb das xor dec outsl add insb insl scas xlat sub add push loope push pmullw fdivp add cmpsl lods lock add fs jno cmp add xor xlat es cmp (bad) mov sub stc inc dec jo add sbb push mov and pusha jb or adc jp test mov add add adc dec push pop adc das mov lret jbe divb xor inc in add leave cmc push out clc sti add push fimul dec out insb loope jo outsl pusha (bad) add test mov into scas sbb add xor orl xchg ss adc movsb dec add out mov (bad) sub test pop gs push jo inc fadds lea push mov xchg add (bad) daa xor add push addr16 popf and je fsts lods add sahf pop scas mov jmp add ret push jl adc out movsb (bad) scas je pop pop add adc dec addr16 cmpl sbb jge in push adcl mov jne pushf std pop inc (bad) mov in cwtl pop pop andl (bad) xchg sbb add cmpsl push ss out aas add or cmp dec outsb adc imul iret adc add in bound pop push push das loop scas add sub test mov rolb stc pusha ss lcall in dec shlb add adc mov mov add mov ror shl mov (bad) cmp inc fsubrl add adc xor cmpsb andb sbb mov pop lret (bad) mov add mov sub mov or test stc jl std add insl lcall es mov das jge fisub add icebp xchg es or jno push jl add xchg mov add pop jo jns or mov (bad) icebp leave clc adc jno mov insl or mov xor es xor add mov jp adcl add or dec ret inc mov mov cmp pop mov cwtl push jo sbbl mov xchg mov mov lds mov xchg subl rorl inc outsl inc push sbb lcall jle pop lret sub dec mov push adc xor into js inc movups repnz mov or fisttpl (bad) (bad) ja scas repz lods push pusha or stc sub pusha adc ss scas andl push mov fs aad lds jne jle orb fs add sbb xlat mov jb lret sub inc xchg push mov or enter out xor daa icebp add sub push rorl add loope test jge icebp ss mov xchg test (bad) inc and mov loope pusha adc addl lock add or mov xor add out push mov xlat sbb mov mov sub cmp pop scas jecxz jbe mov jp adc cmovb push xchg add dec iret cmp repz push shlb pusha mov mov out mov lret sbb jns sarl orl fsubs je xorb repz lea mov aas test pop faddl sub sub leave inc xor or push sbb jno add roll cwtl mov fidivr pop mov push mov daa pusha test xor adc lret cmpsb int mov adc mov dec push jmp add xor in sarb inc lret mov rorl les sti or inc xchg jns inc lods add adc pop jmp or sahf push mov mov sub aam insl loop add cmpsl and cmp mov jne mov daa add loop addl xor aas mov mov pop inc jg jno mov adc mov and mov pop pop lret ret cs rcl daa movsl sti mov adc or jno mov pop add rcll and xchg cmc xchg push push cs jg jmp push jne xor add cs cmp mov and stos pop mov (bad) loop xor cmc imul arpl btc (bad) cli jmp mov mov scas gs and lods incl inc and lret push arpl xchg add xor xor xchg mov jo sbb jp,pt fist jno xchg mov mov lods negb add pop cld and stc cmp cmp jae lock mov out mov mov loop outsb and cmp add ret out jp int (bad) pusha test mov push xchg sar and mov ret adc nop leave mov cltd xorl imul jp fsts jbe pop xchg sbb repz (bad) cwtl js xlat jae mov loopne imul shll pusha xchg pushf add jne pop add dec adc mov call add mov mov lahf es push and pop push psubd nop xor xchg xchg inc adc out add dec sarl pop xor push andb sub scas pop add test add pop dec adc jnp mov or test subb mov lret sbbl xchg adc add fnstcw scas sti mov in mov mov sbbl push add pusha cmp sub sbb addr16 jecxz adcl push inc scas pop imul test leave jns add sti (bad) int3 out adc add pusha comiss pushf dec sbb cmp ss in xchg xor add je or bsr add and wbinvd mov push jae mov xor lea sub lods mov test lock mov cmp or mov lods jg rcr loope les orb loope or cs add cmp push lahf ss arpl flds push in push out mov ret fiadd aad jne inc xor addl xchg ljmp icebp popa pop adc pusha push daa loope orl push hlt gs js pop add packssdw push mov lea xchg aaa xlat mov fild lea in pop imul add add jecxz neg iret ss dec and pop mov inc add pop pop fst test cli and jo cmp movsb into dec jns mov xchg in xchg orl sub fildl jge mov mov xchg in dec insb sbb add mov mov add or add jp mov mov sub pop and inc mov outsb add add sahf cs add jae pop and add divps adcl lcall add aaa in pop daa or adcb pop add cmp inc test lret (bad) mov scas jge outsb push jo repz xchg jmp dec jmp js lods dec pop orb cmp data16 insb inc popl mov pop addr16 mov mov mov inc pushf out dec add and add add repz inc xchg push (bad) leave inc adc push mov bound (bad) xchg push mov mov jns dec int3 (bad) jp jae fs outsb add xor adc add or and jne negb xor push add loop sbbl aad ret pop push cmpsl dec stos mov mov in sbb dec scas xchg fisttpll movsl cmpl lods push and mov ss push push aas iret add aam sbb cmp rclb push jmp or sbb sub popa loopne pop insl lret and es sub and xchg adc push cmp add add dec movsb leave mov adc iret daa push push inc fcoml movl pusha or ret push cmp outsl sub adc add push cli jmp jmp lods scas sub xchg add mov mov sti jo pop sbb fsubs outsb cld add push aad pusha in aam xchg pop rolb xchg imul fdivrl (bad) stc je add das nop into or cmp int3 inc and add repnz xchg add je and sub mov mov pop ljmp jno add in sbb ja daa sub mov push sahf bound jl stos mov mov and pop sub or add sbb xorl movsl jbe pop and loopne inc mov add pop lea bound orb hlt jb test test cwtl adc lock add mov jb mov mov push mov jne out mov cmp loop push sbb adcb mov adc pop stos sbbl fucomip cmpsb inc std ret push lret (bad) icebp push and mov cwtl outsb inc or ja jmp adc out inc test movsl push pop mov inc subb fcmovnu inc pop add (bad) mov jmp add sub data16 cmp adc test cmc decl das daa inc add and ja add adc orl or cld and ja out loop jecxz rep jns in xor cmp xor add enter and arpl xchg addl jno add mov mov adc adc ret xchg add cmp sub mov aaa cmpl add or mov dec (bad) push insl orl inc mov or add push xor dec sub mov cmpsl pop and loop stos (bad) (bad) jmp daa inc (bad) mov lds sub pop fwait cmp cwtl je xchg mov push popf add outsl add lods adc je add outsb push out js inc add dec cmpsb dec add mov xchg inc test out pop popa jne mov mov and rolb mov xor push xor insl cmpsb ret pop cmc repnz add xor sub xor xchg fs xor add add push add dec pop stos pop dec push rorb test jge adc mov icebp jb add push mov arpl das mov sub (bad) jmp add cmpsl sti inc and dec (bad) add cmpsb sahf pop add jle adc mov add mov jo add iret rcll fwait push mov lahf outsl arpl stc push mov add or sub les jns leave add jle gs dec mov cmpl sub sbb xchg test shrb xlat add repnz dec fcom xorb and daa pop je scas add (bad) ss add or repz dec mov pop int3 jg bound dec sbbb ss lods or fwait xor or cwtl mov sbb mov add in push add or addl dec or pop add in cmp add mov (bad) jo add pop jbe aas les mov cmp sbb outsl scas mov jne nop aas xor or sub push es add aad cltd push mov gs fisttpl or push inc in mov icebp xchg cmc pusha or add pop ret out and or xor inc int adc ljmp xchg js jnp add addr16 jae jecxz cmp (bad) js aaa add (bad) jne mov stc xchg pusha clc jp sahf sbb ret (bad) mov sub pop push vmwrite add hlt les insl push sbb shld add jae orb pop arpl in mov aaa pop pop adc fisubrl orl add mov shrl cmp int3 dec cmp cmpl repz lods (bad) idivl pop cmp add push orb dec add lret ljmp push jbe add sti std scas pushf xor iret adc outsb and add loope xchg inc mov pop pusha mov mov jmp xor stos inc out fldl adc add stos enter pop movsb add out dec cmp mov cmp cld sbb mov and jne xor mov stc add inc sub jbe mov jb xchg bswap mov rcr xchg fwait out mov xor fs pop xchg and loope lods bound jmp fcomip jg call jb adc mov mov pop xor test aaa mov xor mov gs sbb jp dec push int3 enter popa mov inc jecxz add sbb or negb jmp iret pop push inc mov dec icebp int scas fisttp push fstpt add push sub orl push lds adc pusha and mov push fcomps inc popa mov shrl aam add pop test and pop inc adc jmp arpl stc mov jbe mov mov (bad) je and fcomi pop inc lock xchg sbb add ja add mov pop add loopne imul fmull add addl jle inc cmpsl out jecxz jae out push ss jl push popl xchg mov lret pop pop loope into inc inc scas inc ds xchg ficomp aaa xchg in enter adc mov sahf dec cmp sub outsb mov test loope inc xchg add jle fbld (bad) shr inc jae xchg pop adc addr16 je add xchg add mov popf sti sub adc fisub mov (bad) and ds push inc push sbb push lret xor js mov or dec jle mov test add inc loopne gs (bad) jno mov pushf add cli inc faddl das fs cld clc (bad) aaa mov popf in nop cmp adc (bad) int3 mov jmp mov mov cwtl push leave fnsave adc andl or movsl out addb cltd das jns jbe push out mov ret divb rcrb lcall cli inc sahf movsb xor in add cmpsb cmp into push xor shll loope push js mov and add xchg lret mov pop inc xor roll jle test dec cmp push and add jnp fisubr call push add push sbbl scas xchg cld lods ror dec loopne ja fisubl pop movnti push add mov jb int cld push mov lret mov jo dec mov sbb int3 lods add add jp in and sbb bound add aam sarb std inc add xchg mov lret cltd dec dec mov add test push aas pushl or int3 addr16 mov pusha cmp pushf andl roll stos adcb dec add xchg jo mov or mov mov rol add out outsb lods aaa sbb arpl mov clc cmc mov mov sarb test test rolb fnstsw shrd stos (bad) popa mov push jg dec (bad) dec mov rolb sbb fsts inc shlb movsl cmp dec sbbb iret fs sbbl or push pusha out xchg add jmp aam test cmpsb rcl dec test fstpt sbb (bad) jg cmp jge and fisubl shl nop popa sub pop (bad) ja pushf ss add lock add cli mov (bad) aas pop mov xchg jge inc insb (bad) jnp mov mov stos xor pop loop stos lods addr16 add mov out aas jle fstps xor add fs hlt add mov cltd push dec and (bad) movsb mov aad jp nop adc sarl add mov xchg and jp dec adcb add cltd fs add inc sbbb (bad) loopne pop leave push xchg and sub mov add test incb ja scas mov in js jb add imul xor std iret loop pop jl cmp aaa enter mov add inc adc add fild jp add mov mov sub mov divb or addl xor shrb inc add je lock data16 jl add sahf cmp dec mov jne fnstenv lods adc pop mov outsb out cmp inc pop inc add cmp (bad) push xlat jb add fwait aam mov cs ds out dec xchg (bad) movsl jle subl dec test push rolb (bad) jmp imul lea push popf loope inc popf test xorl jae js push maskmovq imull add lods add sub push cmp jno add mov or call test addb int3 orl add outsb adc dec push enter add mov movsl mov stos jb mov jne js ret pusha and lods mov (bad) push sarl sub add test jl mov adc test add push and incb daa sarb rcrb add jmp orl add (bad) jnp or push movsl add mov mov sbb rep push sahf jbe push mov add fisubr pop outsb xlat add nop sub arpl xchg inc daa mov mov push push add or and lret cmp xor scas xor out inc push addb gs sub rclb mov das mov scas bound add scas shll ja fistl fdivs mov add iret dec xchg add aaa cs enter and (bad) aas ja cmp ljmp and add test mov jp je roll xchg xor adc inc fnstcw es mov pop add decl dec xchg ja jge pushf add out mov push push inc in (bad) scas cli in mov shlb mov lea mov out pop adc adc rolb (bad) dec sbb (bad) pop cs inc (bad) in pop cmp je add cwtl js into jnp add insb fcoml and jb or add sub sub add sahf in jmp xchg and (bad) pop shrb scas inc rolb in inc test fs in daa mov dec mov lods jp sahf adcl mov add stc mov mov gs not and mov add shlb stos add imul mov scas in std jp cmc xchg jo jnp orl in fistp sub push sbbl ds aaa mov and das out add lahf inc mov mov cltd xchg push sahf (bad) punpckhbw cwtl jp enter jo je xor adc xchg inc icebp jb aaa test and inc jns lea in jg pop inc sub pusha lock push and (bad) out andl scas imul xor inc ss out push gs cmpsl sbb mov mov mov cmp add xor or ret (bad) rolb sbb mov cmp jge nop cmp addl fimull lea dec addl push out dec inc out movsb incl rep xor cmp inc ss and out mov cmp add stos rcrb arpl jns mov mov xchg stos movsl mov or jecxz mov dec cmp cmpsb add in dec les rcpps aad xchg sbb add outsl cmp pop (bad) ss cmpsl add lds add les push and and rcrb mov test add aaa jmp cli popl push addr16 push ljmp (bad) jne inc mov dec pop cli dec jo xchg shll ficomp fxch bound lcall enter or push sub add movsl dec sub bound and jge sbb mov out mov mov (bad) (bad) xor ret xchg jecxz mov jp xor stc sbbl sub ss add xchg cld cmp insb aas push les ret cld js xor adc (bad) mov pop mov and push mov cwtl out jmp mov fnstenv rol repnz hlt adc pop std mov dec mov decl add xchg movsl and addb cwtl jb push cmpl (bad) outsb xchg imul repz imul adc add push rorb sbb xchg add pop lahf jl testl mov inc adc or bound add lea pushf mov mov je cwtl add sub and pop add mov mov add shll and add movsb fwait and jmp lock add in (bad) es data16 call dec mov sbb cmc push add icebp mov or in test testb inc aaa inc fidivl std add leave fcomps and ljmp inc cltd add cli movsb ret pop cmp jp inc adc rolb leave cltd lock xchg test flds adc and and cmp xchg test scas enter or cmc rolb add clc fbld or xor cmp add add cli arpl add mov aas mov jge adc mov fdecstp sub in add xchg push (bad) (bad) pop dec js and jnp lcall lret cmpsb inc push jae jge movsb repz adc push loop (bad) push push int3 and cmp incb push inc xor and jne and cmpsl add cld jl mov mov lock nop xchg inc shlb fadds push das cmp pop aas movb sub fs loop add mov inc add (bad) lret inc call stos jp add rcll dec sbb fisubrl sti mov mov test lea cmp subl sbb les and pop pop sbb push and (bad) jo adc gs sbb jnp add or cmc dec in mov xchg cli iret imul aam and mov pushf sbb pop test outsl loope mov dec lcall mov push (bad) (bad) movsl pop xorb int leave sbb mov pop lret lret lods add (bad) into fldl popl dec cmpsb out (bad) jl ret add or fistl sub test ror inc decl aas popf add sbb inc (bad) mov mov mov fwait test jnp insl (bad) pusha xor (bad) jo add clc mov adc repz push testb (bad) movsl shll mov out push pop jae inc mov mov in clc mov mov add sahf and pop setnp loopne test std sub mov fstpt xchg clc inc mov pop jnp pop sbb aam (bad) fs add dec mov add add fsubp inc stos dec cmpsl nop add dec xchg aas add testb mov jecxz jne xchg scas jnp sbb jge dec dec test cltd mov dec rol xor pop hlt mov cld add subl (bad) jmp pop and and cld or jl,pt aaa fwait (bad) in mov aas dec dec ret xchg adc add stc dec pop add movsb add and xchg mov add mov js popf leave push add sbb es in repnz sub inc add jns lock (bad) addr16 cmpsl add jae data16 popf cmpsb popa je mov push ret scas addr16 movsl fcoml roll jl mov js xchg jbe enter test add or out add xchg aas jb adc inc push cmp jae jl imul add repz push jbe push mov push pop mov push cmpsl push sbb lahf ret mov and ficompl add cmpsb adc add sahf push cmp add outsl mov mov xlat jge jns pop cmpsl jae scas ret addb and into mov add sbb shr cmc pop jae into cmp fnstcw jbe add enter out mov stc imull (bad) pop orl mov rcll fistpll add arpl inc add movsb dec iret lea sub cmc sub or subb gs adc in cs cmc adc insb fiadd dec sub cld sbb xlat add fldenv lock test (bad) (bad) jmp adc inc dec call daa das mov lods cmp add jecxz int3 push aas test es lahf add cmp sbb cmc lret cltd sti int3 out sbbl mov adc inc lds jo cmc add inc cltd cmp mov dec hlt insb aas insb int3 lahf add sub or fisubrl ja add or push test ficomp mov add jne pop mov add push subl cmp and loope sbb jae ret scas mov adc pop add es xchg xor fmuls sbb pusha clc pop fild xor idivb add xchg gs scas jno,pn add xor aam adc jmp flds idiv add xor push inc add lcall pop push (bad) pop cmpsb jb add xchg jl addb lret pusha cmp jbe loope dec scas in lahf (bad) pusha dec and subl pop negl sub adc gs xchg add add (bad) cmp inc jmp cs pop xor mov stos fldcw ds cmc int or outsb add lock scas outsl sahf scas pushf fiadd fcmovne jo jg outsl js mov or and xchg sti lea flds pop mov fstpt and incl jecxz aas inc and add in xchg mov sti subl sbb add push and enter or jb dec rolb xchg icebp mov mov aas int3 xchg scas sbbb adc push xchg add cltd mov add ljmp cmc adc sbb sbb add gs add jecxz lea mov popa mov fldl in add xor aaa mov (bad) pop repz mov rcrb scas add ds dec or mov pusha inc sahf xor mov lods fsubs xchg push movsb push xor sub out cmc xchg enter setno (bad) push adc push mov inc push add iret dec add mov stos daa js add add add push and and sarl xor push shrb mov dec lods adc xchg sbb adcl js mov hlt aas jp sbb add inc fsubs ds add scas xchg into dec out arpl mov mov xor mov dec daa pop pop add hlt int3 mov add leave imul pushl sbb or add stos sbbl and xorb push adc add fsubs roll mov jae pop add popl popa and inc xchg pop subb dec pop leave add jmp jmp xor adc in cmp hlt es xor lret popf xchg inc outsl popa cmp xchg add inc fstps or jmp adc incb xor xchg add out daa test cli jp jmp sbb rorb lods and fwait cmpsl scas jmp andb aaa pop push (bad) outsb popf xor inc in inc and push inc push gs rolb lds and add mov sbb add loopne xchg push pop add sbb arpl aas jns jno add das add lds ja push dec add sahf js inc xchg in xchg fidivr daa add dec std je repz xchg aas fwait sbb xor adc xchg stos mov mov sub pop dec (bad) repnz dec mov rorl cs inc lret outsb bound popa add mov push add sti cmpsb out outsl add jno cmp jp add sahf xchg imul jne add dec out fmul sbb mov nop daa repnz jne add mov scas fisubl mov pop add jmp add in push jnp inc sub (bad) insl sub add and (bad) jne enter (bad) fs lea and pushf add lret sbb repz mov jnp and push cmp inc and fs movsl and pop xchg cmp mov mov or rolb add test push add rcll pusha rcrb repnz aam sub test mov lret jp mov and add (bad) xchg add add sub mov sbb xor lret aad sub xchg mov fsubrs bound mov loopne cwtl pop loop add sbb fs test je add inc out ror mov mov cmpsl pop xor xchg cli sub xor pop mov fmul add jmp pop sub jl add in out add push add jbe xor out sti popf sbb loopne mov xorb jmp jb jo jbe sbb cld xchg (bad) inc adcb inc call aaa add mov pop andl pop add int jge mov jmp and ljmp push in push add test dec add fnstsw pop data16 xchg in je aas mov pop add ds jno subb dec aam dec pop push jo shll inc jecxz outsb xor loope add pop out and push inc or arpl push mov cmc adc cmp add (bad) jnp mov push lea add pop lret enter jo jg mov sahf sbbl pusha mov int3 repnz test sub bound pusha in xor out in popa jmp and add fwait pop and shll add sbb push xchg push xor push mov cmp jae add add outsb mov add ficomp or xor out ret daa setp and (bad) aam add fdivrs adc outsl or sbb es int xchg add inc lret stos scas pop subb outsb add test jecxz xchg nop jmp in fistpl inc cmc add stos sahf jge sarl mov aam sbbl sub cld mov ret add sbb add fdivr scas arpl mov in add mov inc orl xchg cmp bound push lods adc je mov pushf das push shll mov in lret add jg sbb pop add pop sbb popf or (bad) int jle les mov sub dec inc (bad) jnp stos fidivrl add push (bad) jo inc out xor mov inc and inc mov add dec xchg outsb roll xchg mov sub enter sahf sbb fcmovne test js mov push cmpsb xchg pop scas roll jl das subb mov pop test push (bad) add sbb mov fbld inc mov jno test push push je and xchg push pop fisttp out jle push xchg mov add jb jecxz mov xor adc sub cmp add mov mov ljmp popa adc add imul add inc leave xchg mov out mov cmp pop lcall ret in add (bad) jb adc jl cld stos push dec inc add adc jg fwait stos sbb je push add lret pop or loopne lock adc xchg or add iret add (bad) stos add xchg jl and cmp add mov jno adc xorl mov mov mov test jbe pop add aas and mov push sub rorb mov arpl or cmp inc adcl and jg notl dec mov sti add scas fldenv mov icebp std insb mov or imul add mov shlb xor cld sbb or sbb popa test sbb outsl push add mov dec (bad) mov movsl pop testl leave push popl prefetchwt1 or cwtl lret sub ret (bad) cmpsl popf out xor or pop sarl pop rorb out sbb leave or les push and (bad) add pop out push sti shrl cmp or adc test push sti cmp fsubrl sbb bound test jno xchg mov and jns rcll icebp pop lea xchg add ljmp adcl dec cmp mov jge add cmpsl push dec les jns mov jmp add loope push mov gs push movsl sbb mov leave es add mov jno add mov inc add pusha lret sbb xchg and (bad) jge push ds js dec mov ret nop mov add stc pop aas pushf ljmp lods push leave shrb mov add scas jge add jnp cwtl add mov xor (bad) aas das add das popf ret bswap sub pusha stc (bad) and lret mov out cwtl xchg add and cmp add pop call xchg add pop mov cli test hlt ljmp out rorl add (bad) push sub fldl stos shrb into pop outsl mov pop pop add loope cmc add dec push scas hlt inc add out insb adc and pop sbb inc add cmp (bad) sub cmpsl jp and (bad) in add fild int pop mov inc (bad) xlat (bad) daa andl mulb into arpl lea push je gs or (bad) sbb enter lock movsl sbb xlat test xor jnp add and xor add ljmp clc test adc sub (bad) sbb adc pop sub mov inc cmp bswap and js dec xorl push inc outsl push (bad) add aas push push cs add clc sub std pop inc jb loop sbb loope insl in test add and cld fwait push pop cli inc imul mov rcr add push das push add les or xor sub leave mov int adc sbb (bad) pop mov pushf dec loopne nop add or and out popa inc add cmp sub xlat repz add mov into inc imull add mov adc icebp punpckhwd sub repnz das sbb scas cmp into or ds shll sub sbb xor add loop mov addl (bad) add (bad) jg jne xorl lds inc add or jo jns cmp dec xlat xor inc dec outsl lret mov outsl jno pop (bad) mov std push addl jle jp add jnp out jae mov cmpsb mov faddl push sti das rcrb out mov xor (bad) jp pusha cmp adc jbe dec sub mov add out test add call iret mov out push inc inc pop incb popw pop ss adc scas lcall jge hlt aad add adc or (bad) push xor das lds lret jge ss out aaa ljmp add clc and fstps (bad) (bad) push int3 push jp test add sbb jge stos adc es testb jne movsl lea jb fadds mov adc add jnp sbb cmp loop stos add dec jecxz jno fwait xchg sbb call lret cmp fdivs fs mov cmpl pop mov fldl2e je aam add push stos xchg jae pop (bad) cmpb mov cld add add inc push popf mov sub nop push mov jno jb xor sbb xlat cmpsl inc movsl daa and mov mov adc dec xchg sti xor lods int fwait pop push cmpsl leave jecxz (bad) jmp xchg inc lret xor pop lret adc sbb mov jmp add add out lock lret (bad) sub cmpsb xor jbe add mov subl mov scas pop add pop and enter add cld lret pop xchg fdivs adc cmp add mov add repz add xchg repnz jmp rolb sub add inc add mov aam add movsl push aaa pop xor scas sub loop sub fs call (bad) lcall (bad) mov adc fiaddl push lds pop popf xchg mov xchg sbbl arpl mov cmp cltd pop xchg lock sahf xchg loop faddl test shlb add pusha popa cmp xchg mov adc xchg xchg inc movsb add adc in fcomps add mov lret jecxz mov mov call ffreep mov add cmp inc add mov push add xor call and mov ds mov and cmp dec sbb or mov add adc mov (bad) and outsl adc adc add insb cwtl gs mov or stc sti add inc movntq lock mov and xchg xchg xchg sbb jns adc add and jnp add cmp mov orb mov mov jmp adc add mov fwait sub mov (bad) xor adc add add jo icebp add int cmp sub insb mov mov sub jmp das xlat mov mov ja out adc push popf dec out add mov sets lea pop faddl ja mov mov in pop arpl sbb cmp fdivrs lahf push mov dec add ljmp mov pop sub xchg xor sbb (bad) dec lahf inc mov xchg outsl add push mov sbbl push lods sbb enter (bad) call cmp pop mov ds flds pop push add xchg cmp xchg inc pop pusha inc in xchg sbb aas cmp push jmp rcrb sarl pop push sub fdivp je loop outsl add xor and and add mov aaa xorl jo enter insb jmp and add imul and cmp int sbb test sbbb mov lret mov xchg das jb sub inc pop push xor xor xlat sti jg mov (bad) data16 adc shlb push in mov (bad) sub aas add pop sub cmp sbb inc movsb xchg es add mov pop or xchg xchg mov sbb jno sub adc jecxz and xor out (bad) test call lret ss dec mov lret repz sub sbb andl sti fwait cmp push shll mov cld mov jmp pop add insl mov ret in incb setb pusha in sahf aas cmc or mov adc sbb pop add imul addl sbb or scas in fcos mov mov aaa ja (bad) pop in sbb jl push mov sbb stos cmpsb aaa adc mov mov sub mov push inc cmpsl push and sti pop out add rol push cmp jle imul push pop jb ret xlat int in add mov mov (bad) mov lods adc fstpt dec add mov out sub mov lods xchg push dec lock or push das nop add loop xlat les ds add adc add test fisubl cmp mov out pop cli (bad) gs dec inc push test movl mov stos and out pop push xor pusha js das dec add xchg popf push test inc sbb add and jno push std xchg hlt xorb rorb je xchg jge add mov je repz pop sahf dec inc sbb or jmp jl add xchg (bad) push add sti mov dec add lock add mov inc rclb xchg cwtl sti xchg pushf dec cmpsl adc jns addr16 andl iret aad jl inc mov xor mov add sbbl pop pop repnz in popl (bad) inc mov sahf ljmp fmull mov lea xchg dec pop subl cs lods sub rorl rcl add (bad) insl pop frstor jmp adc dec inc sbb pop rolb sbb push pop cmpsb add stc xor xor out and add fimul sub iret (bad) or adc js pusha ds repz das mov mov les cmp xor xchg pusha outsl push (bad) mov add mov loope aas add jb jl dec icebp push xorl add inc gs enter popl lret xchg xlat lea int xchg fs push inc mov jg or add mov stos in inc sub mov mov cmc lods out mov xor mov sub or imul hlt add movsl sub test and addl cmp sbb stos jmp mov add stos test ljmp add adc popf in incl lods xchg ds out xchg add inc sub fcompl push jmp stos stc cmp str movsl lods jle mov jg inc popf in pop push inc pop mov add lods mov cmp mov mov xor cmp sbb test les andb jae fbstp or pusha test xor js popf test add sbb or ljmp sub mov xor mov push mov mov add xchg insb fsubs std mov lahf movsb add or and loop ds add out idiv inc lods pop roll push and das adc loope mov in movsb outsl xor ljmp push mov mov rcr jno xchg xor add int3 popf mov add jp (bad) jno movsl push (bad) fs loop jge insb xchg push xor add mov push (bad) repnz pop add pop (bad) out loop cmovo cld or (bad) dec xchg jp dec ficom push inc sbb mov subl xor add sbb mov fs sub xor ljmp push xchg jo jge add push sbb call mov push aad (bad) repz push ss enter mov adc push int3 pop lcall add andl mov inc push mov jp mov inc das (bad) (bad) xchg fild into enter pop and add loopne lret test xchg in ss inc lock clc lods pushaw cltd add loop xchg mov xor jp stos test mov dec mov xor stos ja jns jmp pop jne lahf (bad) xchg add and scas cmpl or mov es jmp stc push and shrb jo lcall mov mov inc or mov in adc stos xorb cmp call push push sbb or sti mov and lods testl int add mul movsl mov popf jg fstp adcl add fidiv pop dec daa repnz scas xchg sub pop xor iret push xchg rorb repz out inc adc aad add mov in jg jo add pop push sub jmp lret lods dec add sub cmpsl (bad) out bound xor xor test adc jg subb imul add pop inc pop scas jno add push xchg adc (bad) aaa in (bad) ljmp inc (bad) push loopne add xlat xchg mov adc or xor add or mov inc enter repz cmpsb std vprotw pop push jbe add push jl test mov pop pop lock into sbb inc jge nop hlt outsb pop outsl add add les aaa or inc sub movsb adc add dec cmc mov mov pop add sbb fnstenv aaa sub jl add push (bad) adc (bad) xor andl xchg mov addr16 fadds jo pcmpeqw sub or or cmpsb loopnew lret pop sarb outsl pop clc push cmp adc arpl out jnp iret insl add cmc pushf inc xor and adc movsl xchg pushf add loopne inc mov add mov jbe jge mov (bad) lods es loope push xchg cltd lret frstor sbbl cmp sbb icebp pop push stos int add mov (bad) push loope or imul inc mov cmpsl mov add daa pop mov je scas push rolb scas inc int3 notb arpl push sbb test cmp in add shrb aas pop add add int3 or xchg lock jbe add test jo les mov enter mov into cmp mov xchg jb cli xor (bad) or fstps repz orl pop pop mov pop add cmpsl cmp stc or lea xchg jnp ljmp mov mov xchg mov mov aad mov inc pop xchg mov xor das xor mov sti push jle or and jmp insb cmp add hlt push jno andl insb adc lahf orl cmp jb or hlt lcall add adc int3 dec cmovns idivb xchg sub and (bad) jno sub orb cmp popa jecxz call mov mov add pop add cvttps2pi sub mov add pop (bad) jle push add gs jl xor cmp je mov lea sub mov xchg (bad) xor jnp xchg push and dec sbbb push mov pcmpgtb jo arpl add dec or add movsb loopne clc mov inc subl insl sub imul add test cmovp mov inc and notb push xor or repnz bound inc inc addb adc push xchg adc or movsl mov repnz push ss jecxz pop inc scas stos mov insb popf push test mov xor pop js scas add dec add cltd fdivl call add mov mov repnz jge pusha lahf cmp add test int3 inc mov rcrb int subl out test pusha shrl mov xor add insb rolb sub xor mov pop push mov in lret sbbl pusha mov loope xchg xchg and arpl dec fist add cli flds pop imul (bad) fild cmp ret add clc icebp and jno add rorb jae int sti scas mov jmp push adc push pop ret inc or in popa imul jge jbe mov sub clc push and aaa mov or xlat mov pop out and incb push fwait ret shrb xchg out push (bad) ret cmpsb and xchg sub enter and adcl pop inc enter mov sbb sbb xor and aad or pop xor fdivl push pop add inc (bad) scas in dec push adcb jp or imul xchg mov and dec addr16 cs das (bad) sub mov push lods repz xor add ja jmp rcl inc (bad) jmp inc es out jg push or mov add idivb jp add pop pop fs mov ret js cmp dec push adc add dec add repnz cld jp inc in and mov stc add xchg movsl add outsl dec sbb inc or add lret cld add or xor fsts pusha test or dec clc inc mov inc inc xor or and repz clc dec sbb cmp xor rolb adc dec inc pop fsubs popf sub add pop sbb lds popa pop call add push addl ljmp add lds lret add cmc cld xchg inc add inc add js xchg xor jno adc pop bnd add sub daa mov mov sahf jb add mov xchg xchg lret das sar jl pop xchg cmp popf popa push inc and mov dec mov ds mov rcr insb sahf add shll out and add jp sti dec es add dec adc cmpsb pushf add aam push lods or add pop sbb sub in mov jge pushf aam out mov cld xor (bad) xchg les xor sbb push sbbb jns lock push jne sbb add in jle sbb cmp push idiv stos dec push pop rclb inc adc les ja gs stos inc add stos jle jb fimull jp or fisttp in inc or (bad) add js mov add cmp inc ja icebp sub adc dec xor xlat mov add sbb cmp repz outsl adc pop gs or mov xor add mov dec adc sti sarl jecxz ffree mov push add test push adcb mov dec push bound mov loop add inc xor jmp mov negb push ljmp xor es mov out push cmp add nop aas fdivrl cwtl adc (bad) and (bad) aam cmpl loop sahf lcall push pusha test or inc aad add mov push lods (bad) pop mov fdivr cmp xchg add xchg js dec jo add cmp es add orl xchg cltd push add loope les xor push add (bad) inc xchg push in roll hlt fcmovb and addr16 mov out cmpsl add loopne pop subb add inc nop pop call xor bound jb fisub xchg scas andb xchg je xchg cmp stos out cmc outsb fiadd aaa lcall add pop popf mov xchg movsb repnz stc sarb call dec ret enter pop pop cld jp push add inc xor ljmp pop icebp pop call daa add aas mov push pop data16 in faddl mov (bad) push mov pop packsswb sbb ss ficompl (bad) and adc add mov and aas out cmp add int3 mov into add ffreep clc add (bad) mov lahf popf nopl into fcoml sahf fmuls and mov jnp mov and xor add push fiadd mov push insl add sbb add adc mov scas movntq out sub lock out sbb imul inc movsl into or loop aaa orl push add cwtl sub outsb fdivrl mov aam (bad) hlt adc mov pusha cli aas cltd and add xor cli mov loope enter sub mov in add jl mov sub mov test add xlat mov insb popf pop add rcrb cwtl cmpsl sahf push adc push addl insb sub lahf icebp loope push dec jg add xor add rcr movb mov jl jle sbb fstl pop (bad) (bad) dec adcl jno push popl inc add nop test loope mov pop add and add and rcrl in mov ss insb pop dec sbb into push out and aas (bad) int xchg and push add sbbl inc add mov add add aam inc sbb test inc lret in rorb add dec jecxz add mov jl sarb insb iret xacquire xchg add je subl push jg cmpl inc idivl jmp xchg or dec add pushf dec mov and cmp add cmc sbb adc mov (bad) jnp iret cmpsb lcall les add add inc cwtl and repnz (bad) push int xchg repz xorl dec and pusha cmp sbb mov rclb jmp orps inc ds (bad) pop hlt add das rcll arpl stos cmpl cmpsb mov pop mov cmp mov add add ljmp pop mov leave subl ror mov pop push sub sbb add pushf adc add xchg adcb pop jbe jecxz in adc xor jo test mov or xchg jecxz sbb mov jbe adc jge outsb negb (bad) inc hlt sub loope repz js sbb imul mov push mov repz add or dec jl movsl sahf adc jae sahf or dec in add (bad) xchg jnp xor test call xchg fs pop and int3 cmp push incl dec or sbb adc cmp divl jecxz loop add test fdivrs add ret sbb sbb jno int3 fldenv cwtl cld mov xchg jnp pop add mov insl push rcrl add in or fcmove cmp sub test ret add add add dec mov adc (bad) dec inc (bad) loope inc xor inc es stos sahf xorl push cmpsl mov dec push cmp fchs add mov gs inc repnz dec and test add cmc rolb add mov add mov push (bad) cmc mov dec inc add in xchg movsl push pop xchg stos xchg es sub mov repz int3 add xchg outsb nop add fistpll cs in loope push push aas lahf cmp add int add push imul lock aad lods jb add imul sar add sahf jle pop sti add imul add sub das test mov sub cmp pop (bad) cmpsl loopne dec xor in add pusha sbb cmpsb lods mov add ds mov add inc fldt frstor inc and pop pop inc and mov popf jbe mov (bad) lock addl test data16 add das addr16 jnp mov cmp and mov add (bad) (bad) add js add mov (bad) adc roll incb negl jne mov jo mov in mov into adc add cmp stc add outsl xor or fwait std add sbb shufps push in insl jb incb cmp lea aaa outsl xchg in hlt inc add or icebp add std dec add mov sub add (bad) and sub enter mov xchg pusha push out cmp mov cli imul jecxz xor push inc xchg mov add sbb push fistp inc in sub jns icebp mov mov outsl pusha test mov call mov xor jle inc gs in push pop invd lahf into add fs idivb dec add popa sub in sti sbb or pop add pop mov ret cmpsl mov daa adc sbb mov sub pusha faddl jge push push test push add fdivrp mov psubd add xchg add stos mov push add mov insb push fist xchg setno repz rcl icebp (bad) push xchg jb lock std jp (bad) push inc je and add dec lahf sub pusha daa ds pop std add sbb push test add or push adc sub aam jg rorb add fldt add dec lea mul movl pop (bad) lret xchg cwtl push mov xor cmpsb (bad) mov mov or pushf insb sbb lods pop clc mov jno hlt ret pop out pusha add arpl out (bad) mov (bad) or movsl sahf popa xlat add loopne push adc insb add dec andb sbb int3 sbb lahf or inc popa aaa nop js add inc pop or je xchg sub lea add test cmp rorl sar add addr16 scas add mov and das pop aaa pusha out test js je int loopne sbb mov and add (bad) ret push and jg push into test add push iret pop mov mov lret add mov shrl push lea stos add mov adc sbb mov or inc out mov fildll and adc pop outsb test cwtl jo add scas lret dec sbb cltd or adc test and add int3 neg mov xchg jge pop cmp adc sub xor push and xchg add jnp inc add sbb inc enter push (bad) jl imul lock push mov mov add call add repz adc mov mov lcall cmp add mov outsb add in push sub add mov dec xchg jb loopne mov xchg clc add mov stos add mov ja ret add mov call loop add mov adc push test add inc ss push pop scas jle (bad) insb icebp and fildl mov cmpsl rcr add push mov mov stos pushf enter sbb mov (bad) out push dec and inc add xor pop test adc dec call add mov int3 loopne or sub aad cmp add or or xor add cmpsl mov shrb lods adc int3 cli add (bad) call je lods loope or mov add xor jecxz push inc add outsl insb insl mov pop pop subl mov mov sahf cmp dec add xchg add fbld xor popa sub jp inc andl mov inc jmp ljmp sar loop dec (bad) jg (bad) push incl add xorb push cmp aad push sub pop mov pop leave adc dec out bound stos int and pop orw test push pop (bad) (bad) pusha sub stos stos test sbb xor jle add aas sub hlt xor mov leave loop sub dec and inc and xchg idivl add mov cvttps2pi mov out and push ss xor out subb cmp clc add aad xor cmp jbe fnstsw cwtl pop lcall stos add cmp cmp les add aas jecxz,pt loopne out push mov aas inc add adc rcll inc inc mov enter xchg pop lds (bad) add mov clc daa pop xor add cmp add outsl xchg (bad) daa mov sub and or and out and push mov jp add cmp sub xchg inc popf add dec inc cmp push push clc leave adc ja into icebp mov sahf adc pop scas cmp loopne (bad) pop nop add cwtl mov jg push (bad) (bad) shl pop inc jmp pop xchg push flds mov inc push cmp cwtl add xchg sub ss push clc cmp inc pop dec aas sbb push ret add xor or xchg jno adc mov scas add mov add aad cmc ret pop movsb add es rolb push xchg cmc or pop leave pop in cmp jle mov add cltd fs sbb or lcall pop push js add cltd pushf mov aas cmpl (bad) movsb es call fsubrp cmp jl testb xchg xor dec fisttpl daa or bound add loop add shll push arpl cmpl nop and xchg in push add mov cmp xorl insl xchg pop in out pushf add mov sbb out add mov xchg pop inc (bad) ds or mov hlt stos jl std add push cmp ud1 movsb and orl stos hlt dec dec pop mov mov in outsb add xorb add shr jbe pushf add adc and pusha popf je cmpsl inc add mov jmp ja adc out jo cmp sub les mov cwtl mov jp mov loope adc inc jne mov retw mov jns push and js add and add mov bound and test mov aam jbe xchg mov repnz sbb test divl cld jbe pusha mov pop (bad) jecxz sbb popa ret dec test ljmp sub insl fs or and cmp and addl adc outsb mov xor or cmc xor in in xchg mov xor divps add decl pop mov cwtl inc rcll or and sbb jl lret xchg subb adc repz ret aam gs and jo add lods dec cmp cmpsb cmpsb jo mov std adc pop add loop cmp les pop and loopne inc jmp test sub add push mov roll xor sub test and imul fcmovb arpl and cmc call add lret lods lahf popf cld sub push lods xchg clc inc repnz jo mov mov orl jmp sbbb sbb jo cmp push xchg push push inc pushf js inc cmp add aam add inc (bad) lahf or jno mov dec addl dec cmpl mov pop pop add test jl hlt cmp (bad) cmp adc xchg sub adc and rolb mov rcl mov mov dec xor dec pushf xor add mov mov hlt jo dec push inc and jg sbb mov dec in cltd add (bad) icebp leave mov dec and int3 mov repz pusha mov mov mov dec pop push push hlt ret andb (bad) nop call add inc (bad) dec lock aaa mov fdivrs (bad) push adcb inc int inc inc cmp adc xchg sub cmpxchg (bad) mov inc mov mov sbb mov and push add dec std lock (bad) js add xchg mov rorl test outsb out or in (bad) jnp mov jg inc pop nop cwtl outsl pop addl dec mov add int xchg jnp stos cmpb (bad) imul jp pop add mov xor adc or imul cli jo scas xchg and mov xchg loopne jg add scas add and add or and fwait sbb add loop stos rorl add push insl pusha cmpb insb fiaddl (bad) les int push int3 aas push xchg add stos mov andb insb fcomps adc add stos mov insl (bad) jge fwait jne add inc add stos loopne push inc pop xchg jmp stos lahf xor cmp clc xchg push outsl add xor push add adc mov rolb pop mov and cmp dec cmp stos mov add sbb (bad) or aaa push mov push sub sbb dec and mov inc test add and stos add jle cmp jmp pushf sbb ret testl jo stc rol pusha add into sbb and inc aas sub repz add lods dec adc idivl xor stos xchg mov jecxz shr or xor (bad) lods in xchg pop insb sub adc cmp shl call out xor flds sub pushf add xor repz or add je mov stc outsb push stos adc mov fnsave add shr add icebp in pop sti adc add pop rcrl and cs mov mov nop enter js pop push pushf jb xchg dec jnp or mov mov andl jns add and and mov idiv rol mov add imul xchg add mov (bad) mov and mov in sar mov nop adcl or loopne movsb js cmp orl div or add (bad) icebp add push xchg pusha mov xchg inc movsb leave mov add (bad) dec iret and xchg push xchg sti stc or insb mov add mov aaa mov xchg pop orl repz out jle push cli daa push es orb ds ds or out and inc repz add lret add jge lret sbb in int3 mov setle add andl or test sub push mul jb mov cmpb inc in add and mov inc and dec mov sbbl clc mov mov or xchg add arpl es (bad) repz cwtl nop inc (bad) icebp int3 popf add imul (bad) jne lcall xor add bound addl inc stos xchg lea aad int3 cld sub je test test pop lcall mov frstor jecxz add lahf in cmp int3 dec add mov add cs xor in iret sbb adc pop fldenv or mov in inc add fcmovne bound (bad) sbb das inc std cmp orl popa cmp inc stc add cmpsl std or enter lods dec pop mov mov and out add loop or daa jmp out pop xchg stos adc adc imul and push inc pusha nop sub jle clc xchg aaa dec lock push mov cmp inc test fnstenv xor add data16 iret add out cmc fdivl dec cltd sub cmp push lods mov subl ja jns in dec add insl mov lcall mov push sbb pop add cmpsl and (bad) jae cltd loopne adc out adcl push inc andl clc scas pusha andb addb out or sbb mov insl add add mov mov loopne pop adcl outsb pop sahf fwait mov xchg inc sti test aad jne fsubrl mov xchg add or nop lret add sub mov fcmovbe inc add ja sbb jb ljmp adc sub pop dec add jne cld (bad) push xor lods add inc sub mov add mov flds jno (bad) popa std cmp or adc repz cli mov push push iret dec xchg cmc xlat jmp dec (bad) arpl rolb int3 cmp test scas mov inc stos and mov (bad) ss clc add xchg xchg test add xchg ret pop jo add sbbb bound cs sbb fwait cld mov pushf aad inc (bad) repz adc and xor mov inc add aaa loope add add into mov call js addl lds das pcmpgtb and adc inc cltd cmpl shrl inc lea mov push sbbb push and bound dec mov inc fisubrl push sarb add xchg roll hlt jle jbe push mov (bad) ror add push cmpsl jecxz insl int sahf xchg mov sahf xchg jg decb aam das adc aas add adc call js add out shl mov ss push add sbb mov inc test mov jge out ret or adc movb mov pop outsl fisubl cld add push aam add bound add aaa mov push ja cld repz adc mov jno and fcoml stos pushf add and fwait xchg pop mov imul jge jo push push fcompl pop lods jns mov jns call js pop ficom mov aas sbb (bad) add jbe repnz in (bad) jo add xor xor loop inc add and into pop scas inc cmp adc push rcrl loopne mov andb jecxz cmp dec (bad) jge cmp add cmp and ja iret or lods adc mov je cwtl add aam push xorl lock dec mov adc xor int mov jge add or fcom sbb push cld jl aad pop movsl cmpsl int jo cmp fwait xor iret add xchg push add into rep push adc add inc xor gs das mov ret cmp pop dec cmpsb add inc xchg xor pop push xchg int clc cmp outsl sub add and xchg dec lods add in xor subb jl outsl mov add mov and fistl aaa mov sbb sub sub jo push dec push jne js push sbbb add jno andl add mov test jne or out mov dec dec adc movsb enter ljmp add cli or iret data16 popf out inc js push inc mov movsl jns rolb test xorb cmp jecxz push mov dec cwtl (bad) andl (bad) mov sahf inc cli xchg dec push sub scas jne or ffreep cmc out hlt add jae jno fdivrs icebp addb das pop add or push clc push mov ljmp cltd rcrl jg add fbstp inc cmp lea mov fldl adc inc add popa mov dec cli in add fcos pop rdtsc xchg lods add data16 test sub fwait in (bad) shrb pop das (bad) xor adc pop cmp (bad) add or push fsubs cmp stc jae add jnp jecxz add scas mov add std imulb inc (bad) cmp shlb rcrl xchg pusha jns cmc (bad) xor ss lea cld mov call inc test outsl pop (bad) inc inc adc lahf xor add adc jmp lds dec lea cmovp rclb mov pop cltd dec push inc push aaa popl mull add push lock dec mov jno add (bad) sub cwtl icebp out mov cld pop and sbb jecxz cmp (bad) xchg mov int3 sarl pop sbb xchg aaa mov popa adc push add sbb pushf or dec nop shll insb mov sar mov pop aad push dec insb cltd stc cli add test ss lock lahf rorl mov lea pop in gs add lret loopne push rolb test xor sub mov and push popa cli and add scas add cmp inc enter jg cmp movsl (bad) mov fsubrs sarb out ffreep out pop (bad) pop add dec push mov mov add push stc xor xor sub mov jp test jns addl add add loope cld add lock fs sub mov xchg xchg aas imull testb pop pop jecxz sbb test insl xorl xor or adc imul add sub pop mov cmpl fmul add inc or mov xor mov stos xchg add stos xor lock rorl pop bound insb push test jno fsts mov (bad) out push insb and inc cwtl mov sbb into js int stos (bad) jo inc add daa fiaddl imul lret mov pusha nop lods mov stc je leave push popa inc popl pop pop aaa rcrl mov mov in mov pop add jnp lret cmp mov ffreep (bad) mov pop sub xorl (bad) fidiv xlat and xchg into addr16 imulb fwait xor inc (bad) mov push cs push xlat out (bad) data16 cmc and jl outsb sbb std shlb std xchg add or pusha daa xorb into lcall and lods xor sbb cld adc lahf jns fwait add xchg (bad) jae fs jp mov insl push mov add cmpsl jle pop fs mov xor add cmp add arpl push pop mov inc add (bad) xchg pusha xor jmp push sub cld gs xor js mov aad bound cmc int3 int and cmp sbb scas (bad) adc or jo mov add pop push mov addl leave lcall enter inc stc add and adc ja add xchg divl inc pop jb je add addr16 int3 cmp mov dec mov mov add mov negl fdivs add imul mov movsl sbb add xor push lcall (bad) movsl (bad) je add dec testb or fldenv add lock mov and sbb (bad) mov insw pop add rcl lahf dec push loop lods scas fcomi cmp mov add mov out dec push dec popl push and icebp adc or hlt add cmp jae in addb cmpl int xor jl push je or or push add mov rcll xchg xor add mov xchg push mov inc gs mov test lret sub adc pop fidivr jmp je ja and aad rclb out sub (bad) fidivl mov iret mov sub mov in loop in pop add (bad) cmp bswap lds (bad) xor add dec and cmpb xchg adc xchg jno fistp inc in (bad) add sub insb call insl sahf cltd push inc sub mov sub out (bad) pop sbb push adc push call lahf jmp cmp mov adcb mov jno add in sbb call pop out lods sahf push pop (bad) inc sti out orl cmp in je dec and jmp idivb pop push cmp (bad) roll clc xchg fcmove test xchg add xchg push jl rcl dec adcl icebp aas negb jb sbb mov add das xchg mov add sti mov out add nop jne jns cmp test push jnp shr adcb popf mov rcrb in mov xchg sbb popf test add push inc add popf mov (bad) jo mov sub mov fwait into mov pushf ret inc inc addr16 cs sub leave cmp pusha inc jns inc test adc shll icebp insb pusha pop pop pop in dec out jo sub rorb add into xchg jb out add sbb sub ljmp mov and cmp add jbe mov les mov adc scas jo jno add (bad) and add mov xchg jle addl das arpl sahf and addr16 cmp push pop push add push divb sbb movl int3 pshufw mov xor mov jnp mov (bad) mov or test sbbl orb aam or pusha incw ja or and or inc mov (bad) mov fdivl repnz pop mov and jns inc cmpsb mov scas add fisttpll add dec clc sub mov and xchg pop mov hlt out xchg and sbb ss mov adc dec pop xor mov mov xchg lcall mov cmpsl or (bad) cld (bad) scas repz jp mov adc add push les test in add decl push leave inc push (bad) adc sbb (bad) repz cmpsl mov js fiaddl xor das faddl scas (bad) mul pop hlt push add push pop sahf scas rol lahf mov mov pop jge add xchg nop adc sub ret cmp lahf jno or movsl mov add test das sahf in inc mov dec mov inc pop adc jo sbbb jne xor mov cmp shlb std (bad) push shrl jb add push xor cmp popf jno mov sbb addl pushf and insb outsl test pop push andl mov xchg vsubps jbe sub scas test fbld xor aas cmc add enter xlat pop ss jl je pop clc adc xor out orl pop test test shrl add (bad) cli adc and into iret mov or inc cmp imul lret test xchg xor jg fimull add repnz xor sub rcrl cli out out fidivr push add inc xchg add xor mov mov add ja fistpll test jns xchg cld subl adc jno mov outsl add sbb ja stos loope push sub xlat int and iret ficom loop cwtl mov add jnp add mov inc add mov out and xchg add xlat mov add jl outsb pop cmpsl adcl jmp jb xor or mov adc pop pop mov jae sbb jno mov (bad) xor jbe loope or cli in add jecxz,pt mov mov pop fimul cmpsl imul clc fbstp push jl xchg mov add bound add dec int3 add jecxz jo lock lret std (bad) cmc xchg mov push xchg or std push pop push rcrb flds fist frstor push xlat (bad) cmp add cmpsl imul daa sub jae mov sbb fsubp mov scas dec dec fcomip adc add imulb in sbb dec (bad) stc inc cltd fidiv push adc add insl lcall daa andb adc add and jb int3 out xchg mov adc aaa pop add sub scas dec aas divl in in cld xchg mov and mov flds xor xlat insb cltd xchg pop cmpl mov outsb sbb and out push cmp mov mov pop or jb lret adc mov pop adc lock shlb (bad) lcall add scas or adc insb mov sahf add jl add sarl inc pop xchg enter outsl adcb mov inc push add jmp jb add shlb addr16 lcall sub inc leave or aad fs sub lret and cmp sub cmp xorb mov inc add fistpl xchg dec gs add dec aad out addl ds pop sbb push mov fiaddl mov sub int3 (bad) xchg aad imul in xchg es pop xor aaa js (bad) jl (bad) lds pusha jbe subl push jmp daa add cmpsb mov divl jne je xorl test cmp shrl (bad) loope mov add xor add cmp push xor call aaa add dec mov mov rcrl mov push cli popf add pop xchg add inc jge jp (bad) or loopne lock faddl push leave or adcl or cmp lahf inc repz inc xlat add mov jge cs cmpsb je in lret mull rolb jmp mov and test add jae cmp add in call test cmpb jnp pop push add add cmovge cmp adc ds xchg mov cmp out add fildl mov mov int3 sahf xor lds adc imul fildl cld mov sbb add fstl inc bound and repnz add lods lret repz ret movsl cmpsb or add mov xchg test mov add iret es pop add fcoms add mov ss inc pushf add add jb ljmp pop jo add sub fidivl mov jle and lods dec push lret jnp loop xor push xor pop mov mov xor (bad) or iret test push outsb add mov sarl stc pop add ss imul add jl scas or xor sub int add jle dec add and adc or push test dec inc sub sahf add mov pop dec daa sub add push or (bad) cltd fldl addr16 rolb sbb adc xor push mov (bad) push pusha lahf pop or xchg xor stos cltd xor sahf loopne inc dec mov adc data16 or xchg mov cmc push addl xchg add les popf sbb jbe and mov push pop bnd (bad) bound andb lahf in aad jb or stos je cmpsb xchg and add test pop mov push lahf popa movl leave lods adc pusha inc cltd lcall je loopne loop xor xlat das test pop and add push scas mov jl jp add in sbb sub add es imul and pusha mov lahf cld xor lods xchg bound cmp pusha or add push push add into adc pop movsb notb out aas pop lods bnd (bad) hlt jo pop mov jb insb mov out in cmp jp inc je mov add mov int call xchg icebp xchg jno adc ficomp sbb mov add clc cs in repnz mov inc sub push push shll add xchg sub mov push mov push add shlw sbb shll cmpsb add in aad loopne,pt adc enter inc aam enter cmp mov sti in call jl clc (bad) add leave out mov add shlb gs push test test (bad) inc dec mov add xor push (bad) out cmpsl add dec dec push jge lahf jecxz loop dec add dec mov push xchg pushf mov mov cmp outsb jp mov (bad) or xor icebp fs jle pop add xchg add adc push mov jo inc insb push push test lea out push je ss imull xlat cwtl fcomp pop jbe add sarl adc icebp andl pop rorl mov aad scas cli clc jae punpcklbw mov push or add pop js adc pop mov push loopne push in jmp int inc mov es call inc mov in xor jge pop sub cmp ret in movsl lahf adcl inc pop push (bad) movlps sbb js pop push inc (bad) xlat add jge mov add gs (bad) jne jle in xchg rcrl pop mov jmp jb add hlt and jae sbbb lahf idiv in and cwtl mov out in ds lock or mov gs xor mov mov push add mov dec add test aas add sbb xlat leave and jae sub data16 into arpl cmp pop scas dec or je push js adc decb negl sqrtps cmp imul mov adcl add mov pop cli and es add cmpsb or (bad) jmp add mov inc add mov xchg aaa sbb addl pop rep and inc testl sarl js push imul stc cmp outsb adc ret add data16 xlat shll andl or popf sbb pop daa jb test ljmp outsb add (bad) lock out xlat add ja jg jge inc add push lcall lods jl add ds xchg xorl add mov aaa or mov stos out lds in xchg jne dec insl mov xchg out pop test pop leave sub lcall sbb add sbb pop sbb add push cmp aaa leave cli es sub aad xchg mov add fcmovnu test ja (bad) mov add (bad) aam xor jg or sub jmp cmpsl mov adc add pop cli and icebp sarl jo cmp insb sti loope pop add sahf imul sbb insb shrb mov cli lds push sbb aas cs cmp in test pop push add xor pop mov add mov sbbl mov jg je mov insb mov mov add call adc addr16 mulb add pop mov or jbe pop stos add das and add std fldcw pushf xor out scas inc test or adc icebp rolb add enter sub ucomiss pop fldenv push hlt cltd adc pop cmc movsl jmp dec js mov push sbb pop imul inc inc std inc ja mov add jmp dec dec mov add aas arpl sub xlat jbe pushf std aaa or stc adc (bad) rcr xchg add adc pop scas inc push xor lock sarb rolb sbb pop out adc add and pop lcall add loop cmpl adc lock out jmp mov add mov add xchg pop lea add jecxz pushf jle xchg adc pop add out dec sub and push add add outsb mov pop jcxz out les ret cmp in mov movsl mov fwait or sahf stos test or jg inc and add (bad) jnp cmp push ljmp popa sbb push cmp inc sub int3 lods cmp add rcr add pop xchg cmp and das sbb mov setle call add outsb xchg test jmp jns or cmp xchg xchg cwtl sbb pusha movsl mov xchg inc xorb cmpl sub int3 dec xchg push repnz bound or lret push pop add xor dec push cmp nop and and push sub insb sbb pusha cmp pop test add mov pop in lds stos pop add jae pop test sub mov repz (bad) cmc push mov dec xchg inc roll and insl xchg movsl push cmp roll enter ss pop jae pop lret mov jb add cmp lahf lock flds lret push aad popa stos cltd add or push dec (bad) add push lods dec add inc lahf fldl loopne fucomip ficoml stos fdivs ret fldl mov mov scas cwtl imul xchg ret js xor rorb add cmp (bad) push and lods inc loopne pop push add pop xchg and mov add pop aaa xchg pop fcompl cmp ja sub ds adcl adc mov scas mov std xor sbb dec sbb ds ret fwait dec pusha or jno ds cmp int3 sbb lcall movl fisttp sbb xchg cmc push adc je adc dec je das dec add cmpsl mov addl xor pushf popf imul cli (bad) iret push shrb in sbb icebp ss jg push addr16 mov stos cmp or lret xlat sub add dec call mov xchg inc insb inc jb jmp add ffree hlt xor inc mov or pop cmp mov cmp dec and in inc add (bad) shl testl mov jmp mov cmp and adc (bad) sahf nop loopne cs pop jl ret xchg in pusha inc cltd pushf add lsl dec mov mov mov push sbb mov jo mov mov sbb add push jne or into js roll arpl sub mov lahf mov fsubrl insl add decl sbbl insl and sarb addr16 rorl xchg pop jb orb jle push add push fnstcw push push insl push add enter shlb mov xorb (bad) xor int3 testl roll imul adc add sbb cmp dec adc mov scas outsb push or cmp pop rcr push movsl push mov add adc ja lret and add xchg and stos dec rorl inc nop mov and and movb or adcl jae inc add pop sarl lods xchg inc sbb je xchg fwait mov stos sti js pusha mov addr16 iret test fisttp (bad) dec add jecxz push or push test cld stos sub add mov js add mov in insl ds scas test ret leave xor push mov rcrl test add pop xor sbb mov repnz pop insb inc sbb pop std and xor add imul mov iret shrb scas add inc push dec pop jecxz daa add push lds shl fs sub fstpl roll aad mov push int3 jb mov rorl popf push add dec xchg into and test add lcall sbb je xchg insl test shrl inc dec add rol push clc out pop cmp inc movsb (bad) lock dec add xchg mov add mov rolb popf pop push cmp dec pop inc push scas sub mov add mov xchg fchs ret in adc xchg test mov call out push arpl add subl add ljmp sub je leave mov inc out push icebp cmp push aam cltd dec xchg add add adc adc les pop inc aas or xlat xor sbb cwtl push stc adc jle sub fwait dec pop and fadd push and adc sbb add push nop dec jb sar rclb cmpb test mov xchg and and fimull rcrb mov dec nop pop and inc mov (bad) inc aas stos sbbl mov mov das mov mov and mov push sub pusha cmp orb outsl mov cmp fadds add pop cmp push in stos in inc cltd rcrl stc push add and aas mov dec jbe add xchg add bound pushf sarl xchg push push pop adc jg,pt inc fdivl mov xor (bad) cld icebp sbb jle jne xchg movl fs stos cmp add dec loop subb cmp (bad) add xlat mov sub dec inc push jmp and int3 cs and aaa stc xchg in jno add aam or add lock sbbl addr16 jo mov add js rclb cmp addr16 test pop dec jbe sbb inc cmc adcb fs jmp andl lahf sub rorl cwtl outsb or in ret imul fsubrs xchg or sbb push or adc cmp xchg mov mov mov (bad) lea call xor hlt inc pop imul out aam dec inc aad les adc add and call and mov movsl aad addr16 inc fdecstp xor mov es fcompl sbb lcall in add push or add idivl mov std add xrelease sbb pop mov ljmp repz jo add jg popf add enter addb add xorl mov and lds loope,pn jb adc mov sub cmp pop and dec aas jg aam rcrb mov mov testl or pop xor mov iret lea enter roll (bad) loop rol xchg push sbb inc ret cmc inc jb jb add lods jne sbb or sti enter jno aad and cli data16 adc add inc subl pop add (bad) xor xchg ja and jmp xor xlat lock fwait les (bad) add jl ret fs sbb push sbbb test mov mov enter inc jae fdivs gs lret push pop jnp or add xor mov add pop dec xorl pop add bound jae mov dec xchg add mov cmp loopne sub mov (bad) push jecxz mov or jns lods xlat add outsb (bad) nop add cmpsb mov outsb push in pop add jae lcall mov cmc mov xchg jmp out push jno and mov cmp add pop jnp mov or mov cli cs insb orl mov mov cmpsb adc fs push jecxz mov sbb loop aad das add sub rep dec sub cltd push movsb mov pop imul pusha fdivr stc shll (bad) fstpt pop cmpl dec repnz jae (bad) add fsubl xor cwtl jmp push insb add int3 pop (bad) add add movsb and testl pop xor jo outsl push aas mov (bad) jae add into inc jecxz push fldl insb dec out aaa cmp (bad) stc insl pushf inc push dec sub push je sti jle or add or popa cld lret gs dec add mov jae cmp test aaa js add (bad) jecxz push or dec add or repz xchg mov sqrtps popl mov or mov add or scas sub jno and fstpl add int fdivl mov cli div sub mov xchg sahf fldl pushf sub int mov mov xchg dec jmp nop pop fnsave sbb mov inc mov orl hlt dec (bad) cmp push lds mov or test xchg pop imul and push cmpsb add scas cmp mov movsb iret push inc test fcmove add or (bad) xchg rcr xor pusha rol insb in add mov xor inc mov or fwait orl jp sub push or add clc insb in push jae push sub add push push pusha pop or inc mov and mov (bad) adc mov lret int shlb push push push add in cwtl sbb dec inc adc popf repnz push ficoml mov xchg rolb testl hlt add dec xor add or sarl cmp add pop and or pop inc jge pop mov mov xor cmp out xor (bad) out sbb mov or add or arpl jnp popf (bad) mov ds flds dec mov pop cmc pop push cli add outsl mov pop fiadd loop sub add repnz sbb inc in je push loope xchg add cmp mov lds out add push pop and movsb and xor ja add and ret mov pop loop mov cmpsl sbb jg pop mov (bad) cmp add into or mov fwait inc inc fistpll imul test adc xchg sub insb xor mov mov scas hlt and lock aam and jmp mov mov movsb lea xchg imul cs add bound aam mov cmc sbb jbe add fsubl lahf mov lret in sbb pop sahf mov iret repz add pop negb mov mov add adc fcmovne sub sahf xchg mov lcall push mov pop jge data16 sahf add call lret push aas or int jae faddl icebp add outsl lret hlt mov jne push outsb add sar iret xorb fistpl fs inc (bad) jns mov imulb sar movl bound mov or cmp and pop insb lods sub div fsts add (bad) in push mov subl shll fiadd mov fistp test cmp add mov push or imul push sbbl xor jmp mov add fiadd or mov add add pop data16 sub (bad) mov add xchg out leave je pop add cmp add hlt and add (bad) add mov xchg in and std insb inc push into insl push pcmpgtd and add insb (bad) neg in pop jo leave sbb pop add call test mov push add outsb pushf addr16 mov insb add dec sub inc jecxz fiadd xchg push test inc pusha inc roll cmp (bad) sbb jg pushf cmc ret adc insb add lret pop or orl fld je xor adc or je outsb cmp cmp add mov out add cmp loope inc icebp insb (bad) mov fstl jbe add out cmpsb aas mov jg mov adc jl and sbb (bad) jno sbb lcall mov aam test movsb pop std pusha hlt fstps mov xchg mov xor add in inc pop jno add daa stos pusha insb jle lds cmp sahf icebp cmp fs cmp and cmp xor cmp inc or adc add xchg and mov pop lret (bad) pop push jns lret lahf jbe inc sbb les loopne jo dec fisttpl rcll adc push cmp roll lret sbb sbb xor sub dec movsb inc and inc (bad) leave inc repnz jl add cs adc movb mov xchg xchg lret sbb add mov mov and or push sub scas lret cmp fcompl sbb sbbl into stos add jmp xchg inc cmp add int3 and add cmpl loopne clc bound sub rcll je push add inc lahf lods mov pop xor mov pop sub ja push or sbb add stc jnp add lock xchg push ss jno add cli mov lret add xor stos xchg (bad) add pop (bad) lcall or (bad) jno add jns add or pop add enter add inc jno mov dec jbe xor pop push add and pop loopne cmp xchg push in jnp add cli stos ret adc xorl je or jge sarl xchg push leave mov test mov push xchg loope cmpsl inc pusha xor mov jbe add std sbb sbbl jmp inc jge dec lds ret fstps dec dec jl xchg jle (bad) fnsave shrb pop pop xchg cmp cmpsl add mov sub mulb mov cld subl ret enter stos scas xchg add mov rcrb in and push add (bad) aaa push (bad) xchg pop aad js lods enter add add popf and in pusha add repz pushw jp jg test cmp jae (bad) adc cld pop xchg test fsubs jo cwtl clc add pop jecxz push ss xchg add rorb add repz inc sub jge sbb ret sbb es push inc das sbb xchg loop sub pusha mov push in test (bad) add (bad) push aaa inc and lahf mov dec cltd nop push repz ja add fadds test and cmp sbb add les test xorb incb sarb push sarb jl mov fisttp adc outsb js xchg pop sub subb pop pop inc das bound jnp push cli mov out or or ljmp out add lds fldt (bad) mov jo push add gs test lds sbb movsl mov cld subl and mov jbe (bad) add loopne movl push or xchg mov mov pop jns in jo push sub lret ljmp lcall rolb xchg (bad) into push dec jo add aad jecxz pop std in ret (bad) adcl pop imul xorl jg out fnstenv incb pop or lahf jnp addl xor popa pop mov inc loopne roll scas fisub pushf pusha ret movl sub (bad) and in lds add lret popf cwtl jg mov arpl or pop jae popf scas jno push int3 lods in stos add dec jl sbb add outsb shll pop int sub bound xor add jnp roll sbb fldenv mov dec mov add add add inc rol jne sub pop pusha lods jo sbb clc add cmp cmp addr16 (bad) xadd jge les stc sbbl adc add call sub negb push inc mov or jle mov push add call add add fiadd xor aad pop rorb jno xor outsl pop fcoml pushfw (bad) dec lret adc sub imul or jp xchg andl icebp or dec sbb push jge sbbb je pushf add dec int sbb jae jl xchg pusha lret jge mov mov je mov leave xchg and add jbe xchg or fild pushf loopne lahf fisttpll dec scas sub add std mov clc or popf ret cmpsl push push aas xchg pusha rorl add xchg xchg xchg lock add xor insl jmp xor stos pop stc add push sub jb movsl add in or inc hlt add push cmc mov pop dec jl les mov xor sub xchg icebp push inc mull mov nop sub lahf pop cmp pop loopne jbe jmp shl adc add xor mov fisubrl cs add and cmp jle pusha mov push jbe dec add sbb jg popa cmp hlt sbb pop inc in dec loope and xor and inc xchg repnz add pop push mov enter mov push add xchg andl pop cltd in cld ja xchg movsb sbb adc mov cs fistpl pusha insb push mov jbe sbb dec mov popf sarl sub mov add in pop xor add push mov lret pushf or and insb popf dec add cmp lret push repnz sbb movsl pushf rcll lret out inc xchg in xchg mov lea add pop cltd icebp inc mov jae mov xchg and mov test xchg lock jmp mov enter add xor and jnp cmp ja add xchg iret scas in stos addr16 aas adc in push lods add subl add iret cmp sub cmp loop sbb clc int mov inc in xor inc mov jns and mov dec stc je ja push mov pop add add js jmp adc adc mov ljmp xor or dec incl pushf (bad) and xor dec stos ljmp sahf xor addl popa std jmp add mov sahf cmp pushf imul jl jnp repnz mov jg mov pushf jmp mov inc jns and addr16 test or sbb lock sbb sbb jg ds pop es push movsl cmp call inc sarb dec adc mov lock push (bad) mov inc jae cmpsl jl popf jbe add cmp js clc add mov out mov dec scas mov out je jns pop add sbb cmp pusha add inc xor xorl dec fidivl dec sbb stos out sahf push sub jae inc test out add sbb push sub leave test sbb jl pop setle cld add sub jmp jnp cltd cli add in daa aaa sbb imul push cmp push lahf loopne jnp xchg (bad) pop mov cmp das lea sbb mov fcomps add xchg jns add adc jnp cmc cwtl andb jp jecxz xchg fildl xlat xor mov mov jg ds mov (bad) cli fsubl sahf xchg fiaddl jg pop jne sub int3 mov dec jnp (bad) mov daa stos cmp jmp sub jb mov mov push cld pop in mov add jle imul mov nop push jo call cmp xor inc jb repnz jnp cld mov cmp mov mov cli push cltd pusha imul sub sarl das out jp fs lahf xchg mov in and sub mov out rclb aad and pop clc decl mov jge les mov aad mov mov cmpl fnop jno mov mov sbb xor lahf clc sub add lds icebp xchg cltd pop jne not cmpb jbe cmp leave je inc cmpl (bad) je in jbe add shrb jno rorl int leave jo mov mov loop mov subb test cmpl add icebp jmp leave outsl add inc in mov mov add push loop in fiadd cmp xor add andb (bad) xchg pop pop push sahf mov mov cmp popa mov mov sub dec (bad) dec sub add lret pop fs jg add (bad) out add lahf ljmp mov mov pusha gs cmp and mov cmpsl in insb (bad) jge add (bad) scas mov jle xorb shrb jo fild xchg push cmc mov fs push add stos mov ret add (bad) jp sub push mov insl add sub inc add jg push add movsb and xlat inc ja fdivrl mov inc mov idivb je (bad) lcall xor pop lret dec add sbb mov (bad) popa sti test fldenv int add adc and cli jle lods jp,pn add sub mov sbb sbb cwtl mov popf dec add fnstenv sbb xor sbb in sub ds sub gs mov jg dec or cltd inc add jle out cs pop mov push adc hlt ljmp add jbe mov subl out adc xchg inc rorl dec loop in adc lock lods pop lcall int3 push sbb sub dec jle fsubr xchg aad lret add add mov addr16 add sub or push mul dec out xor xchg pop (bad) or mov dec nop cmp pop stos mov jo (bad) lret imul mov dec pusha cmp or ja mov fldl ret sub xchg add add scas jg push call or sbb lds cld jbe cmovs add xor jg mov rcll push (bad) mov mov lods stos lret out test add fmuls sub mov adc push loopne lds mov ss mov push add out xor js add sbb add xchg and fldl add add and inc xor xchg test (bad) pop lret ja mov into popf popa push out inc dec sub add aad xchg jecxz ja push or sar ss movl and add inc xlat jge add pop aad (bad) push push jecxz,pt in xor add out and xlat cmp push pop ret pushf inc mov hlt lds xor pop fild dec into push setae flds (bad) mov and (bad) aaa int add push bound and and fsts mov int3 add ret cld and push xchg fidivl into or dec das sbb sub fs mov add sub mov in pop mov push push add jmp xchg lea add out int3 (bad) jns add inc cmpsl jl dec xlat (bad) sbb ds lock lods repz add repnz jb sub add sahf or sub je jno,pn add xor frstor fwait adcl and jbe add or xor gs aam add setbe scas sbb cmp sahf gs jmp out ret arpl std jp pop xor jle popl call mov push xor add jne dec enter lahf add insb dec sbb ss in fs (bad) repnz push jle ret xchg js ss fild dec inc push add sbb fadds movsl sub push loopne pusha cmp and xchg jbe jle adc rclb out jb add enter mov shrl aaa sbb (bad) mov sbb lahf add mov pushf adc xor or mov mov sahf mov mov add push add sbb fsubrl js push mov push dec pop jae orb mov jmp pop popa push rolb xchg inc in lret ja int inc loopne in sahf (bad) sub inc mov xchg add add inc mov sub std (bad) sbb add and sbb aam fs out mov or add mov add sub ds hlt imul add add add ss rolb (bad) mov add sub (bad) mov or sbb or pop mov fildll imul leave test add das dec lcall or fildl cli and inc leave sub cmpb fdivl mov sar test jne test push out (bad) push inc pusha test punpckhbw popf add inc jecxz into add dec jnp mov sbbw fmuls xchg and add pop pop sub xchg xor jo (bad) test outsb add aas ljmp pushf adcl xlat add ss addr16 leave jb add das scas paddq xor dec sbb dec mov lret xor outsl jbe adc les mov fld repnz add cs mov adc dec or testl lcall int3 add jg lea sub (bad) icebp mov fistpl outsb add fdivrs mov sub orl (bad) mov xchg jecxz cltd js sbb jge aas push mov jle fs xchg push sbb jmp lcall xchg mov sarb test push cmp sub and mov mov les ret jmp mov insl mov xor xchg in lock add or jb leave adc inc pop nop sbb jo jne inc push fs and add push (bad) ss jg add and test mov (bad) mov sbbl add arpl cmp hlt mov daa lock sbb jecxz push xchg add fsubl or mov stos and cltd (bad) xor mov sub add fadd mov (bad) sub sub sub in nop mov js add inc add inc add pushf push jle dec sbb (bad) repz scas imul nop mov in mov or add pop cmp add enter pop out sahf pcmpgtd dec les add aaa add in insb sbb cmp sahf or add jns pushf pop dec pop add and pop pop cmp xor xchg pop adc pop add push iret cmp mov mov hlt push (bad) jbe rolb add xchg loopne jge push (bad) (bad) mov or outsb iret inc cmpl aas mov inc shll cmp add and sub push cli or inc js cmp xacquire movsb mov fsubrs outsl mov xchg push add xlat xchg out add mov jl in mov into inc cmp scas orl mov jo push and imul je xchg shll aad out jno dec cmp mov pusha sbb and daa jmp js xorb cld (bad) pop gs outsb inc test popf mov (bad) out xchg adc pop int ret mov adc jecxz ja add pushl dec inc call aaa fsts (bad) cwtl sbb fmuls xchg loop mull adc add into scas xor add aaa xchg and mov adc push mov dec jnp es jecxz xor push push ljmp mov ja xchg lods or sbb dec add inc pop xchg lcall stos mov pusha add (bad) repz popa insl and lods jo loop mov push call push inc or mov bound push fist sbbl (bad) jbe add mov sti stos or ljmp and cmpsl andb fnstcw inc sbb and xchg add push (bad) jle ror and pusha ss add dec or fisttp add push pop repnz xlat xor gs stos cmpsb fcmovne sub (bad) sbb loopne test push mov mov out sub cmp add adc (bad) and mov (bad) sbb jg jne leave mov gs std sarl add inc hlt fwait int3 jae scas add jne and adc (bad) and shrl repnz mov push popf add in push dec call inc xchg enter pop add pop rcll mov jbe enter add mov and sub clc ljmp movsb lods mov dec idivl mov sbb sbb lds xchg popa mov inc icebp es cld pop shrb (bad) ds fs int3 push mov mov loope sub cmp nop add cmpsb push sub out push xor inc xchg pop es cmp add js ret stos add sbb adc and cmp int cs xchg add jl mov addl lret add pop lds cmpb stos and mov jg dec (bad) lret jg adc in nop outsb xchg mov xor negl add jo pop in into flds ljmp testb jp ret cltd pop (bad) push dec in inc outsl jb push dec cmp and shrb clc scas adc dec cs sub cwtl faddl ja xchg sbb inc int3 ficoml inc fcmovne mov and pop icebp jae clc inc jne xor inc cmp xchg sbb mov js xchg fldcw add add add push adc add stc pop jmp sub add stos xor inc mov call ja movsb jns rclb mov enter icebp inc (bad) or dec mov push cmp nop push lahf xchg lea xor es int3 inc add out jo inc inc cmpb or out cmp ret pusha dec add leave dec pop mov mov lcall xor sarl pop adc mov fldt cmpl les jo cmp add idivb add add add lret mov jo push loopne stc adc xor add rcr dec or add mov cmpsl inc subl enter cmp pop imul add hlt js jne fimul adc scas push repnz in faddl push inc mov dec cmp popa ja enter or lret push and imul loopne mov cli dec xchg jae test bound push cmpsb push jl mov aaa inc sub dec call addr16 dec push in jmp mov lock add jle cld inc adc and lds rolb add ds pop lods gs rcr adc insb je mov add push mov and mov nop add gs xor add cmp mov pop or cld pop ds ret aad adc jno icebp add inc imul ja add xchg lock call add inc gs xchg call popa mov add fwait (bad) frstor popl pop and repnz mov (bad) and add mov mov push cmp xor jo scas popa (bad) in xchg mov and insb enter push xchg push xchg cli add lea aam (bad) cmp test repnz decb add popf xchg pop test rolb adc cmp in mov sub pushf and inc fnstcw push in gs inc mov in add frstor or test jbe mov mov add loop push mov imul and jbe add or fimull add fsubs pop int or jge fisttpll rolb add mov out cli aaa mov jnp inc xchg inc dec push scas into sbb push insl sar push jo pop hlt and mov add and movsb (bad) cli pushf out fildl pop xor in mov sti xlat and (bad) sbb add and insl add je fstps inc cmp or test mov movsb cmp loopne cmpsb inc inc adc incb mov aam ret dec add (bad) mov outsl daa add pop out sub (bad) pop add mov add mov push xor jae add sbb (bad) add xchg push outsl mov inc add out clc inc xchg cmp add sbb test scas gs add movsb stc hlt jnp andb call adc dec cmp fdivr lock inc push and out xchg (bad) dec ror inc jmp lods iret pop or std icebp push cmpsl scas jno or addr16 cmp push pop pop add daa mov adc pop xchg cmp mov cmpsl add aaa shrb pusha nop js and lret frstor xchg (bad) out insb sub lahf mov aam fs pop pop sbb movsl inc call psadbw lahf push adc adc mov cltd add imul repz lahf inc add or into xchg mov popf sbb inc (bad) repnz lret insl xchg dec out aas fadds leave inc inc xchg jecxz xor inc lods rorb pop ret pop mov rclb and test out lods inc jmp mov lcall pop or add sbb xor test push (bad) fwait add mov popf add pushf cld mov add xor mov (bad) cld (bad) mov jmp push or mov ss mov test pop addl outsw ss lahf and shlb mov lret and cltd adc ja xchg cmp je push dec push inc bound loope and xchg mov add orb pushl cs addl jo pop add movsb pushf jno xchg in pop add xchg jecxz mov ret andb dec insb mov add fcom rcr inc incl test or (bad) aaa fidivrl add cmpsl jl and pop mov or and out mulb mov add xor lret add arpl loopew daa add fcomps add pop ds sbb (bad) mov pop cmpsb mov xlat adc mov adc inc roll in mov dec cmpl dec xor jns icebp add xor add lock xchg sti pop ss repz stos add icebp mov (bad) sbb jmp imul push sub add inc add cld adc call add dec pop aaa add inc fidivrl add iret aam out dec pusha dec xor sbb cmp faddl push aaa push mov adc jb and js rcl jo xor cmp adcl clc scas cwtl lds mov cmp mov inc aad (bad) jle push mov pusha jnp lds dec icebp add test xchg (bad) scas xor pusha lret fsubrl sbb adc ds mov mov mov add paddb and and fwait add mov push inc out jp pop ficomp jne mov push mov sarl jo dec jge fild and jle dec add je ret and into ds stc push xor add push cmp jmp fcmovb xchg mov pusha (bad) adc mov add inc dec popa mov in loope mov jp add movlps dec add cmp je out cmc pusha pushf mov pop stos xchg lahf pusha int3 xchg or pop test mov (bad) fldl add mov ss add mov sub (bad) dec loope adc adc xlat add push fwait xorb outsb in into jo mov cwtl jp mov or add aad fldl lods sbb or loope or test aaa xchg jge les call pop mov add sarl loop sbb incl call addl jno test lahf dec stc rcll xchg jo in sbb sub je pushf add or mov add push push push mov mov jb sbb aaa dec pop insb data16 (bad) loop xchg mov mov or orl and fwait add inc push insb lods jo mov fcmovu imul inc adc push outsb dec jnp ds jno mov xchg pop xor cmp ja add dec jo add mov and ret js pop std (bad) repz sub push sbb inc mov fiaddl stos sbb or faddl ret pop outsb cs out nop push fwait or xor cwtl mov fcomps incb xchg arpl push orl mov jbe add mov inc lret inc pop add lcall add (bad) adc loop lret jne jge add xor pushf pop pusha add lds push adc popf fdivrs xor mov in rolb insl cwtl sub cltd jbe add jae xor sbb xchg les or shl push push out adcb fsubrp add movb xchg mov sbb pop outsl mov mov add sub shrl pop popl mov imul adc notb cmp add jbe push ja lock (bad) popa cmpl add add aaa add pop clc sbb inc nop xor jbe adc jge addl jo hlt jb jp mov out (bad) cmpsb (bad) iret clc add jo test xlat dec lods pop fisttpl lcall icebp push inc xchg cmp push test cmp fadds mov data16 jb sbb ret in pop enter aaa mov call scas mov loopne fistl pusha xorb adc lock xor jb cmp xchg push add mov add jnp jmp popf adc ret nop mov inc inc jp sub loop leave stos fdivrl pop (bad) (bad) int3 cltd test sub sub jge imul xchg ljmp movsb add xor adc and ljmp mov sbb add push and imul inc stos jp loope push sbb icebp js sbbl inc dec jmp add lahf xor stos push add out and and mov cmpsb pop sbb adc cmpsl jae aas outsb dec into pop add fcoms xchg add sub jecxz,pn mov rcl dec pop jae nop mov and lahf pop cwtl xorl xchg dec aam push jne add xlat (bad) (bad) add push or and add mov lret jne add lea orl jp mov mov cmp xchg cwtl add inc js mov outsb fisttpll into jb push (bad) sbb pop add inc aad ja mov jnp xchg xchg push push xor lcall cs sub jbe add jg mov dec jecxz xchg push (bad) call bound (bad) insl add sub or mov xchg adc pop jnp lea mov jne cmp or fucomip add hlt jp mov repz sbb dec nop mov bound daa shr mov xchg test movsb add mov aam adc dec mov (bad) dec shlb mov jb push cmp xor inc push add and lock push mov mov aam mov or sbb cmp xchg nop mov mov push fs lea lret lods cmp (bad) xchg lcall (bad) loop cld popf mov xchg or push push add add add and or adc cmp (bad) xchg mov arpl ja aaa dec inc jbe add (bad) xor push cmp fnstenv sbb add push sbb dec data16 les rol dec add push add pusha sub mov cmpl adc adc add mov jmp xchg jle hlt rorl rcl dec cmp gs insl or fldl cs in jecxz test cmp insl imul add dec mov add cwtl movsb (bad) jne test (bad) cmpsl push push inc jbe add sub sti push test push addl into ficompl jecxz inc dec push shufps mov or clc jns and push mov ret push das xrelease cmc pop xlat add insb in or or and test add lds dec mov movsb mov mov add fbld pop add in lea scas repnz in addr16 fwait je pop push sti sbb sub loop and fsubs nop int mov cmpl adc (bad) int inc mov push das add sbb jecxz mov push jbe in fwait (bad) jmp ret ss mov dec add (bad) add (bad) jle leave repz mov insb scas cmp movsl add push jbe inc sbb inc bound push add cmp jl insl mov mov pop push and jecxz add mov adc pop dec or clc pop xchg stos push add aam dec push mov inc (bad) dec (bad) es xchg pushf and add mov inc (bad) into mov add or outsb popf lahf outsl pop inc sbb dec rcr xchg add mov or and jae outsb cli cmp xchg popf into (bad) jmp loope mov pop sbbb test add inc xchg mov in imul or add and xor jbe jle inc lahf xor add ja inc push jge adc stos and out add sub out repnz mov insl add jne mov sbbl xor roll add sub rolb shll cwtl hlt xorl ds scas jbe add cmc xlat xor loope loop cltd pop add repz testb icebp mov xchg cmpb nop pop jb xor and (bad) or rsm loope and addr16 jb fimull add sbb cmp dec fadds push sub (bad) out pop mov xor cld add pop xchg add and test or lods (bad) mov mov std insl (bad) stos xorw daa addr16 dec cmc (bad) add xchg cmp cwtl jg orl or je push nop data16 dec sub or faddl cmp (bad) sub leave add lcall cmp pop mov lods mov call dec jge add add pop mov pop add adc and add and call xchg add mov mov mov loop mov es mov out outsb cmp cmp lods data16 add cltd (bad) lret mov jl (bad) and std dec lods xorl cmp xor lahf fnop pop cld sbb sub aad xchg add je mov sbb out fs lods nop subl mov push push rclb cmp or jmp (bad) add test (bad) mov jnp add in cmp int3 mov mull (bad) imul mov push cmpsl adc push mov nop add push scas dec in adc jg bound jg cmpsl push jbe jecxz sub push pop sbb mov or scas pop ja add cmpsb mov cmpl jae mov mov movsb ljmp test mov sub add cli sti adc movsb and sbb data16 dec add outsl push ret insl jge add lret fnsave mov adc cmc or pop int3 into add mov shlb push inc popf push sub mov jle push sub or aam addl insl add in jmp cmp in dec inc repnz mulb add jo lret mov xor mov hlt and pop cmc or rcrb sbbb addr16 aam les lahf (bad) ja addl xor sbb repz iret inc xchg push xor cmp incb sbb and add jne in imul adc adc je add jle and sub scas jp xlat mov call (bad) and ljmp pop jo jp cs iret add inc jno in mov mov subl push xchg insb sbb lds fwait cli ret and adc (bad) sub imul icebp test jge cmp xchg shl inc sbb (bad) testl dec pushf sbb add mov aaa adc stos mov mov subl faddl sbb nop outsl pop inc pop fwait outsb lret add int repz sti mov ret pop add aam and addl fnstcw jo cltd loope imulb jo push cmpl mov les mov or jnp lock je push (bad) je sub cmp add int pop cmp scas xchg pushl mov mov ret pop stos inc xor cmp mov jl inc pusha mov leave sti sub daa jle and js mov repz jae aaa addb and pusha sub mov xlat xor sbb icebp push inc and jle std xchg push add mov xchg add scas (bad) or cmp shrl push jecxz mov and lods cmc add out jecxz rolb jmp inc pop movb lahf push in fildll add loopne mov mov movsl and push fbld test pop adc add ret js cmc xchg loop add inc dec aam aas (bad) mov xor popa mov addl xor inc mov arpl jnp cmp add data16 sub mov bound cmpsl mov xchg add mov add lods xrelease adc lcall xchg xor mov add int fdivrs push sarl movsl xlat sub inc mov add test xor push push adc bound rolb ja add push sub out mov stos ret adc mov lea das mov jl mov xchg pop lods test in (bad) jb pop cmp stc mov push mov (bad) dec lea rorl bound mov adc push add clc lods sbb pop inc fimull ret pop ja out cltd pusha pop clc jno loopne xor ret add lcall clc mov lret mov bound push int js imul cli mov out int (bad) xor sbb sub pop cmp (bad) ljmp pop push mov add (bad) loopne cmp jb mov mov add cmpsl lcall test push or add loope sub sub lock cs xor add aaa in sbb dec and fwait xlat loopew sub mov sub popf push sub push pop add pop fidivl fcom add stos inc shr adc mov push out jle mov inc and pusha add mov xchg (bad) sub movsb aas faddl mov scas mov dec mov and inc ljmp sbb into in inc mov cwtl or sbb push sub sbb add jb push shrl jl add mov fsubrl mov fnstenv les shrb sbb mov mov andl and lret sub mov xlat dec call mov push das (bad) pop mov (bad) jo inc dec idiv pop cli mov or and add ret mov stc add rcrb add leave inc sbb xchg gs movsl add js ljmp inc fdivp pop add mov addr16 cmp cli mov mov imul add aas cld sbb enter js push lahf addb shll std push jp in add sub leave pop addr16 jg add lret ja xor (bad) arpl (bad) lods add add fs gs addl or mov aaa std js cwtl add sti push icebp xor mov iret add xor pop add insb insl push pusha inc xchg jg add add mov pusha mov rolb fdivrs xlat adcl dec cmp into add add mov add xchg outsl mov mov and lret aam and imul push add test imul xchg les and xor add dec mov out lret adc pop mov stc pop and add cmp pop jge aad add (bad) nop in mov mov sub or dec icebp es mov inc jo add int cmp mov repz dec push cmp cmp jae outsl jbe aaa js jl out lds push jo xlat inc adcb bound push jae cmpb pop and pusha xchg mov int3 insl xor cltd add push cli hlt or add sbb aam (bad) lods mov lcall enter lds add pop push add insl xchg or js add gs jg xchg push xchg add (bad) and lods enter pop inc cmp mov dec and mov jle xchg fcoml outsl ja cmc cltd mov out pop je dec lahf cld mov out std sbb add pop repnz sahf sti mov and (bad) mov or add pop out push movb pop testl xchg mov xor movsb lock xchg add aaa cmp pop pop aaa add mov test mov mov xchg (bad) les and fldl in notb push pop mov inc cmp sub dec out cli add jo fcmovnb inc xchg cmpb test mov js iret add mov and in mov mov push dec shlb mov dec add int3 ret aaa les xchg push adcb stc cmp jbe dec xlat xchg xchg cld jge and mov ljmp push jns sbb dec (bad) mov sbb adc mov adc xlat les pop ds or cmp imul fstpl push cmp xchg rcrl test and fildl movsl adc ljmp aad push xchg xchg dec lret int cwtl xchg push iret ret add or in icebp add push enter lcall push dec dec add cltd mov js add xor stos out std jge pop push mov pusha push enter xor add bound in sbb cmpsb pop inc fucom int ret test mov pop push bound fildl jge add sbb repz test add mov (bad) in std xor dec xor pop adc add jp loop out hlt add aas or lods pop xchg movsl rorl push push xor std call add push lods leave and push lret adc add add arpl add out clc sbb mov loope faddl movb not and lds (bad) (bad) jo out jl inc add mov or pop subl sbb imul inc stc push clc adc std jle push add or test jno add adc adc sub xchg sub outsl in pop mov push pop and aam (bad) (bad) cmp xorl jbe scas xlat int jo (bad) cli arpl and loopne jg dec icebp mov int movsl stc adc or add pop jg cld pop jo cmp add shr jge add insb les and stos addl sbb add (bad) pop cld mov mov iret sahf jmp aas cmpsl inc or xlat push mov popa and push inc insb (bad) inc outsb (bad) pop push jae sbb mov xor imul ret inc add jmp push add mov pop mov subb mov add inc popf mov scas xor pop dec xorl test xlat pmaddwd gs fdivrs pop (bad) cld fwait and mov jns add xchg inc js call add rclb dec bnd aas add nop or add mov lock push jge mov in inc dec add adc mov les inc je sbb jae add mov or adc add repz jb imul data16 cli push dec dec and and xchg jl mov (bad) cmp movsb xor int mov xor test shrl lahf mov out inc mov add les add jecxz out xchg xor or cmp ljmp ss mov lret and (bad) sub mov in xor stos add mov scas mov (bad) sarb jge add or add sub aad in out jno add dec add pop icebp sub aam sbb jnp ss popf sbbb add jae sub outsl repnz mov add jl push add xlat mov andb xor int jp cmp repnz push sbb jecxz mov adc mov mov pop subb sub push icebp add or or popf mov test mov xchg out (bad) je test cmp xchg add push jb and lret cltd pusha sarl test mov jl mov jge mov fisubrl xchg dec or int3 outsb (bad) jmp sub sbb mov mov pop xor lea sbb in add fcompl in insl mov (bad) jbe jl out hlt jg jo ljmp data16 mov jle push cmp iret jmp mov lods cwtl add dec adc add daa sbb xchg inc in push pop add into jb stc push add inc std sub mov mov lahf xchg mov sahf pop (bad) pop sbb inc cmp xor (bad) pop ficomp lret xchg cmp push mov pusha and les inc fildl xchg mov mov icebp das or pop dec mov sub mull lock out xchg stc ss call mov push or cmpsl int loope in and adc inc adc or (bad) mov xor push flds popf push inc add push add dec insb iret pusha fwait cmp cmp and xchg lock das push stos inc leave sub loope jbe mov out dec jl mov adc aad enter loop push add jg fadds pop neg pop mov dec jle xor lahf push sbb popf lret sub out lock aad out iret mov cmpsb inc cmc or pop cmpsl add pop add xor or (bad) inc mov stos mov sbbb xchg shlb cmc add clc cmp in fs add pop ret pop mov test add mov pop xor std cmp jb add lock sbb and imul icebp inc mov fcmovnu fisttp (bad) mov pshufw popf jle add jmp int xor pop jg fsubrs leave add and mov add adc bound aas and jne cmp cmpsl add sbb xor xchg cmp add add nop jbe mov insb jno push cmpsb aaa mov mov mov ret sbb fildl mov inc pusha lock sti loopne push fstps push jecxz dec lahf inc mov add arpl in xchg in dec jo push and add add cmc addr16 and dec sbb fnsetpm(287 pushf lret mov dec pop or cli sub adc pop mov sbb add push mov cld lods cmp add arpl inc popf insb cmp sbb and add pop mov lcall inc sub and mov adc (bad) xlat sub push js push (bad) inc sbb in mov add or xchg jne add mov jne push jge sahf jp mov data16 add pop xchg cwtl subl lea subb stc clc mov rclb jbe orb rcrl fcomip outsb mov jge add lods and cmp fmulp gs add ret push or add jmp cmpl sbb add pop int3 or mov add sbbb imul fs cs xchg je add mov ror xchg mov andb push jno (bad) jle mov xchg shrb leave xlat add push ret dec mov sbb xchg in lds fwait xchg int test andb incb lea add or jno sti jnp mov test imul stos dec adc add in sub mov jle pop mov xor ret or sub and push pushf cltd les mov rcrb and adc sbb cld xor push xchg aaa ret lods loopne out mov pop add les jns add lods mov add push (bad) sbb jns test in sub rolb add jmp xchg jae orl and push jge mov mov jecxz in cmp fidivl pop mov lods mov pop test je jae and jnp pop sub pop scas push sldt xchg dec loope xchg and add ffree stos cmp add loope (bad) fsubs or and iret and daa mov add mov and mov les hlt xchg push fstpt inc rolb inc add popf xchg fidiv mov (bad) pop lahf push addr16 test mov cvtps2pi fisubl jno dec push xchg mov subl popa ljmp lahf and orl push out fdivp and add inc into push mov imul mov add out or mov aaa add insl hlt push lea les jl subl adc fcmovnb add jmp push aas pop mov push cmpsl push add and outsl outsb add repnz cmp jo cwtl add push cmp lock add xor mov scas movsl add lods inc fs and js add mov add mov or mov out jl add mov mov pop test mov ret jae out cvttps2pi mov test lods mov repnz jl and out aas sub add add lea fiaddl fisttp loopne and mov jbe push add mov mov (bad) clc mov push roll jne xlat jbe subb inc mov rcr lock pop (bad) mov add pusha push test pop or fcompl inc mov mov xor sub add scas mov andb leave pop or dec outsb stos xchg add jl jmp sar pop add mov ljmp pusha pop or add pop or ds test popf or mov fdivrs lret and add or sub sbb add in and cmp mov pusha unpcklps xchg mov in add jle mov add xor or fadds xchg movsl movsb pop mov (bad) into add and ror jg push add lock sbb add pop xchg fldl sbb ds call in movsb pop or jl lods (bad) pop adc insl bound pcmpeqd repz dec and sahf or inc mov or dec add int3 cld roll push inc stc mov movsb (bad) loopne mov mov repz popf add sub out cmp in loopne cld mov outsb insl les mov cmc std pusha repz pop ds test int (bad) stos adc add lcall mov add jne push or sub push or loopne lcall add addr16 sbbl mov xchg test push lahf mov push pop jg or adc inc xchg lcall fsts xor iret jo push sub jle cmp add aad dec pop dec jecxz cmp xor push xchg aaa add jge fadds sarl loopne cltd mov ljmp and pusha add mov add pop popl sbb mov pop test pusha cmp repnz push mov jge (bad) add outsb adc or sbb push sti add add movsl dec loope das clc or cmp add mov adc xlat sub sub aas push cmpsl sbb push mov jne xor popf daa jp sbb bound hlt ljmp inc (bad) testb push dec rcll das inc push add push mov add mov xchg mov into lret jecxz xor ret aas stos es pusha arpl mov gs add lret jp push pushl fwait pop pop repz xchg xchg or addl push lea pushf leave and push clc adc adc int mov pop cmp xor push cmp add or in add stc push mov pop lcall jg add push fild test inc ficoml pop repnz xchg xor mov rcrl add xor xchg fwait add roll mov rclb push jge movsb and sbb mov in jb inc add icebp pop or xor ds fildl int inc jmp nop lret fmull inc fstp push mov hlt pop shrl add lods fwait sub imul mov out clc add incl add xor cmp or cmp adc test lahf outsb push sbb or insl xchg and (bad) jo rcll add in jg scas mov cmpsl jae mov (bad) cld cmpsb add fstpl clc cmp push adc rcrb das pusha pop addr16 add jb rorl dec inc add cmc (bad) fmuls xchg add ret pusha jns testb push lea sbb es (bad) scas mov inc and cmp movsb int3 cmpb adc inc ljmp and push add mov add push or adc sub jne jno add ja xchg ljmp je xchg negb sbbl mov push add jp jp add xor xchg cmp push push and add fisub movsl cmp xor adc pop scas jecxz pop cwtl add or xchg add pushf (bad) (bad) jo js pop jnp je xor push xchg test dec btr sub pusha xchg decb mov sbb outsl dec dec popf in push lahf movsl mov ror inc cltd add fmuls sbb cmc aam jge sub popa add mov xor cmp xchg or pop in js addl push sub cli add imul dec nop jecxz (bad) lods roll cwtl mov (bad) cmp lret add stos (bad) cmp bound insb dec fdivrs out cmp (bad) inc js addl fiaddl test add sub stos add jl ficom outsl inc (bad) add popf inc sarl fcomi xor mov add xor inc add pop or dec jb add add add stos cmp add jl dec dec fsubl xchg sub xchg sbb mov loopne stos lea test fcom pop in sbbl jo cltd fdivrl pop sbb push js rorb mov insb add push xor addl mov mov shrb lock jo test jae inc mov push arpl jb test add jns adc mov nop and or adc pop addr16 pop es jno (bad) test out cmp adc jo int3 add adc sbb dec jmp repnz or add dec sub mov pop cmp jp and test imul pop lcall xchg and lods sub xorl cmpsl loopne inc shrb inc lret enter fiaddl stc ficomp add or jb (bad) fistpll (bad) adc (bad) cmpsb add mov (bad) int3 add (bad) movsl add and mov jl inc add or xchg jb movsb addb xor sub insb xchg add sub in icebp add xchg pusha clc repz and adc sbb or add cmp fwait mov int xchg inc jle (bad) fdivrp push jbe push mov cs cmp add jbe pop sti add dec add add scas xor jg push insb std pop shlb dec adc stos sbb dec stc cmc adcl (bad) add insb pop mov add cwtl movsl (bad) ljmp pusha xchg or xchg mov (bad) insl mov insb xchg xor (bad) jecxz fidivl cmp inc mov pop jmp pushf stc adc push cmp and mov cwtl movsb pop cmp pop insb xchg pop mov mov negb xchg dec (bad) jno in xor inc mov mov mov xchg pop xchg imul jne rorb stos and (bad) mov stc sub dec addr16 lret inc outsb cltd or add sbb push jne jnp add sahf jecxz lret test mov xor ss arpl ds lea loop lcall pop add xlat cmpsl stos pusha mov adc sahf add popa jae aas add fnsave add test sbb adc aaa mov pusha scas ret add pop jno adc cmp cmc push cmp jecxz push (bad) and fs test mov dec add lods xor and sahf add (bad) jno sub xchg xchg add dec add icebp xchg inc dec adc cli ja add aad std jl add xlat inc xchg sbb mov xchg push es sub pushf add mov imul cmp mov js mov xchg ds push sub test inc pop mov pop push dec pop scas call jo sbb add lods mov jno add sbb mov push bnd sbb xchg mov sbb mov fmul aaa add mov orl popf inc inc lret jp imul add rorb decb (bad) pusha sbb subl mov out pushl push mov and and xchg adc stos sahf pop push pop out fcoml popa les loop mov pop lahf cltd rorb push pop jo imul out cmp nop cltd mov xlat adc inc add jmp lods pand lahf movsb push mov push push jg add lret in ljmp and xor xchg es sbb int3 jbe add inc inc inc test cld lds enter scas insl add pop cmp clc jl popl jno jle (bad) sub add mov jmp xor pop imul xor mov pop inc call add adc lea shlb inc pop mov push popl adc pop sbbl add inc gs add jne add and mov out arpl xchg xchg pop jno bound and push aad xchg aas push or add pop cmp lret repnz sub lcall mov add ret add fisubl mov (bad) lcall pushf pop pop add in pop pop dec aad mov push lods cmp pop jg pop xor xor add iret mov or cmp xor xchg movb add insl jle add fs add les out aas bound add sbb pop add mov in add mov imul and sbb mov maxps sbb inc and fwait aas mov stos xor add sbb repz add cmp lods ret cmp adc mov fs add hlt (bad) arpl mov xor jmp push jecxz lret js cmp mov (bad) mov out (bad) pop fisubl stos les sahf dec test or in in add cli mov add or test popf rorl adc dec pop add or inc inc add xor mov sub popf add push scas dec jo mov (bad) or dec and sub out add inc sbb cld push ja jns out lods jnp add in imul jno lea orl mov push subl pushf inc (bad) aad add inc and sub jle aam test imul (bad) push push jbe ret call push outsb xor cmp add out mov xchg mov lea mov insb (bad) shr jmp cli divb push add add out inc or outsb add pop inc and sub fs add stc movsb cwtl mov repnz push test jo enter push aam push hlt pop addl ds add ret push adc enter loop dec pop mov jo imul xchg pop xor push std rep add jl data16 add test jge cmp inc mov adc sbb test je push fyl2xp1 adc xchg addl fwait (bad) aaa jo inc addr16 outsl xchg scas (bad) insb xor sub daa (bad) xchg pusha scas pop pop fcomps sbb (bad) rorl flds icebp push outsb pcmpgtb and daa test adc push jl xor push fs cmpsl or and mov int xchg mov into ret sbbl fidivr sub xchg push stos addl dec mov inc xchg lods add add sub stc cltd pushaw mov std rol pop sbb pop jo add cmp mov pop inc add mov dec adc inc xor sub mov cmp jb in add push adcb sub cmp push cmp mov jne mov push add xchg movb ret lahf push mov add pushf iret or add popf (bad) outsl test ret add loope clc push mov inc xor sbb sarb jbe icebp push and outsb pop dec imul add les or mov pop push int mov orb cltd jmp pop (bad) add push lret adc dec (bad) mov xor xor loop insb xchg xchg jbe add inc mov add cmp idivl mov sbb jo xchg push js mov and sub pop pop mov fwait mov add mov aas add or fisttpl xor fiadd dec movsb sbb cs das mov mov outsl insl insb xchg mov xor jb inc mov fistp lahf outsb cmc (bad) add call xchg add pop pop fwait or decb jnp out inc push xchg push dec jecxz popl cwtl (bad) enter movsb call subb data16 add into js addr16 jns (bad) repz dec inc jb xchg add inc pusha sbb insb (bad) and js xchg pop aas test push inc push out mov and gs add add mov sbbb popa adc mov (bad) pop mov aaa jle,pt jle add lcall add inc jg mov roll notl fistpl lret js xchg mov xor jne mov clc lret sti add js out bound inc add insb add dec aaa repnz jl (bad) aas pushf adcl jl xor lods push push mov imul or sti (bad) je (bad) or add cmp call jg sub adc inc sub rcrb incb mov add leave loop jl ficompl inc iret movsb xor xchg push out pop pop add enter pop cmp xor stos sub loop add jp sub gs je sbb xchg add bound adc dec cmp in pop push add (bad) sar mov std aaa add and cmpl add movsb out pushf inc push xor inc nop dec adc xchg dec add jns cwtl bound xor jno js pusha out aad fadds push pop sbb shll add xor add pop inc dec cmp nop pop add or xchg add or fildl jnp pop notb jle sahf dec movbe mov xchg push add aaa and add imul out js jns (bad) jb test inc lds inc mov pop jo pop xor push out add scas mov out or lret pop in xor test out push enter add push fnop push testb jo push dec movsl sub sub iret push sarl cmp add or mov adc push inc and (bad) pusha (bad) out bound int in cmp lret in adc mov popf int3 add jmp mov sti jne adcl xor mov (bad) out addl lahf push repnz add add mov inc xor or fiadd add in stc clc add ss call push adc add andl enter and test add pushf cmp rcll and cmpl (bad) outsb pusha data16 or sbb sarb push popf sbb xchg lret push pusha mov jnp add and scas jae sbb je aas add test aas jp inc mov xchg xchg movsl and mov insl adc ret inc push dec das shrb les test bound cmpsl jno rclb sarl xchg cmp scas xlat bound leave rclb incb jae cmp push jbe lock ret mov pusha fsubl gs adcb dec adc adc pop dec lock push push popf lods cld add lahf adc add and aaa lcall notl pop xchg adc decl pop push cmp daa dec (bad) pop cwtl call cmp add sbb stos add add pushf mov mov sub stos add mov cmc add std adc clc adc mov je fsubr add pop cmp andl pop add lcall add aam mov fnstsw add movsb roll xchg aam and mov dec add test cli pop inc add ja repz fs ja add xchg scas test and icebp adc call std xor jo dec cld cmc mov or (bad) pop add out andb xchg repz (bad) mov aas add stos (bad) or adc lret les (bad) cmp mul icebp dec mov mov rcr arpl mov push scas (bad) ret mov ret loope popl addr16 xchg jl movsl mov loope and or sbb mov test add jecxz (bad) push inc add movsl inc jl cmp sub and gs mov loop add adc add add dec add int xor dec das out loopne stc mov add es popf mov mov add lods fwait cwtl xchg ljmp xor rolb lret push pusha out mov test cmp cmp nop in dec pusha xchg jl add cmp mov imul adc jmp xorl insl jo inc xchg or das out dec cmpsb lea add mov in and (bad) sub mov mov fidivr loopne pop in push add mov add mov fcoml sub pop sahf lret push jnp mov cwtl push pop push xchg addl nop xchg dec add xor lea js adc jp repnz out push xchg mov jae add pushf (bad) xor rol mov cmp sub mov adc lcall pop dec andl ljmp hlt cmp aam dec (bad) das add adc orl popf add jne add sbb add (bad) pop shrl inc add pop xchg adc xor andb add push je dec clc sbb add shlb inc sbb pop stos lds xchg cltd adc jae addl subb sub xor jp xchg push in lret mov insb nop cmp test daa sub add int3 sub loope stos clc pushf add xor add cmp data16 mov xor push (bad) lds (bad) lcall add sbb int3 add mov rorb dec orl inc add mov insb mov pushf xor fwait add lret mov std add sbb nop dec xor add mov push xchg or add lahf jo mov pop jge xchg sub ret (bad) out pop mov addr16 xorb test rorl inc mov push out ret or leave jl jo fcomps insl pop and jo (bad) xchg push repz rolb pop fs adc jo add mov push cmpsl scas lahf jp add jge fmull in fcomps and adcl cmp in mov inc cmp add sbbl adc mov sbb mov mov rcll and sub setl sbb test jne push fadd pop inc call or jp add adcl enter mov je inc cmpsb fdivp add (bad) cmp cmp mov nop insl push enter pop out ljmp scas fwait jno jns dec js popf divl pusha jbe movsb xorl inc jns and push popf cmp call ljmp in shll mov jmp test insb cwtl dec shll loope push sbb es shrb push aad lock inc stos jl push dec cmp jo out fstl add pop das scas lcall loopne or ljmp add push loop test (bad) xor add add pushf in insb sbb and push inc push add add inc int3 jle fidiv pop sbb inc mov xor dec cmp mov out (bad) paddsw incb pop insb xchg or sub mov xchg sbb add lods int3 jmp leave sbb test mov add test fxch or insl lods add leave scas dec pop sub cmpl add and mov lcall insb mov add jg xchg mov cmp and test pop ret repz pop adc in cmp mov (bad) add ljmp fisttpl add repnz mov andb sbb push bound inc add jb out mov sub cmp and cmpsb (bad) loope pop mov xchg fsubrs je ret cmp add aaa push inc sbb add pop cmp jge sbbb mov movsl leave cmc cmp sub push mov pop or dec sub add and lods add pop test test shrb inc dec (bad) stc push adc sub jge cli addl add (bad) ror lret jge pushl push into repz push outsl jecxz and fistp pusha mov iret jmp add sub sbbl int sahf or stos xor dec add pop and push hlt insl add xchg dec add pop xor xchg jp ds gs in in subb imul test scas sub jmp in mov stos add pop or xchg imul andb (bad) hlt pop xchg je xor mov xchg dec loop cmpl mov mov sbb hlt cmpb jge or or movsl sbb and add adc and inc sbb testl addb xor mov repz pop pusha push hlt add lock mov mov lea stos gs movsb push adc mov sbb rol mov cmc mov mov and xlat popf sbbb jo pushf lcall test pusha popa add pop fbld (bad) push add xchg stos sub push push xchg pushl ss dec push add xlat (bad) loopne mov cwtl repz mov test cld ret rclb bound loop test test fnstenv insb xor mov nop js push iret add fiaddl cli jb mov add ljmp xorl sahf add dec xlat rclb out in mov js imul or push or fisubr dec divb rolb and pop aam mov test fild int scas push clc add (bad) cltd fdivrs xchg sbb push ret or fistpll mov adc cmp pop hlt xchg js mov pop add adc mov jl flds and mov jge xchg dec ss jp fild in fmull add inc aas sub (bad) loopne mov add decb add fisubrl aas add insb jp inc xchg xchg orl pushf xchg inc add in jl cmpb popa adc push mov leave insl fmuls sub mov pop dec xchg xor add arpl add daa inc adc lret add mov mov ja pop jno testb lcall scas cmp adc mov add sub and mov inc mov (bad) mov test jne jo sbb insb jge ror pusha mov fnsave xchg fwait mov dec or das scas enter sti add xchg jge sub aam dec inc inc push stc cmovns xchg dec sub js test pushf dec add push or frstor insb orl cmpsl add sbb add aam imul mov mov pushf aaa mov sub inc jae adc add lret push add xchg and mov add add xchg lods (bad) xor add jo mov add or dec xchg dec dec ljmp clc in insb (bad) xchg add cmp jle push nopl dec inc mov fidivl (bad) repnz js shrb pusha aam xchg ud2 xchg mov into jo rol fistpl (bad) xchg xor pusha (bad) cmp cmp andb pop bound push dec add mov stc add test mov cltd mov pop jnp test mov gs and movl mov inc hlt orb arpl mov pusha jo inc sub add push cld or pop xchg adc xor add leave pop jb (bad) or cwtl jmp addl add or fnstenv xor jl jle (bad) lods mov add lcall pop mov and cli push gs fimull add stos push fbld lea sub addl pop xchg mov mov push add sahf sbb jmp push insl cmp adc out dec jns cmp xor mov fldcw push mov fs mov lret add pushf int3 cmp sahf in mov xor shrb mov in and cld iret jbe (bad) lods xor cmp pop out add mov push faddp adc xchg xchg push mov xor pop aad add js cmp add lret mov jg push ds movsl pop xorl daa addl push jo lahf mov inc (bad) adc jecxz rcll in xchg popf add cmpl in rcrb add cmpsb inc add call mov roll test mov add mov xor pusha xchg and daa (bad) push stos add dec inc cwtl xchg into sub sbb jg pop add pop nop sub icebp or add dec mov sahf repnz mov arpl inc mov xchg clc xchg and outsl add ret cmc inc add add sahf add imul movb inc and enter mov xchg in pusha out pop test and add adc shrl push movsb add mov mov imul xchg sbb pop mov push mov dec leave xchg sub dec cmp xor add jbe cli xor gs idivl dec add cwtl or add push inc fldenv orl (bad) xor in cwtl sbb insb pop lods lahf xchg mov loope insl imul arpl add in fwait add mov adc or xlat cmp mov xchg imul mov and insb xor lock push xor adc addb gs (bad) or mov add outsb sub negl sbb mov jmp (bad) cwtl repz faddp mov or mov add jne xchg fwait or mov xchg pop loop and test mov sbb lods add dec icebp mov xchg fbstp rcl arpl or mov lea jmp adc jbe cmp sbb dec add movsb les mov jg mov cld add push push cmp roll mov loopne in sarl cmpsl movsl jmp pop loope jb add jnp pop mov add inc (bad) and add leave mov sub rcrl imul add or add scas ljmp in cmpsl cmpsb and add pop adc orl scas (bad) inc lahf jge imul fs inc mov cmp ljmp insb inc jge push dec inc xorb ss jne push int cmc xchg gs popf cwtl dec pop xchg inc push xor xchg dec scas adc out adc outsb add stos cltd fwait repz sbb pushf call jo nop add pop iret mov mov sbb cltd ljmp or jecxz dec xchg sbbl pusha push or pushf push fdivl cld stos andb sub cli test mov jecxz (bad) ds push jno add repz xor inc cmp add fcomps sbb clc cs inc sarb add and int lcall cmpb (bad) lods dec sub pop jb nop test push in mov xchg aad (bad) mov cmp mov loopne xchg pop stos xchg add push popa imull mov push mov pop jb xor mov enter pop addl adc and add ret pop out xlat mov dec scas loope cli mov into and mov push data16 xchg leave sti push ret outsb xor cmc dec push xchg loop in (bad) addl jae (bad) out (bad) aad add and dec dec push dec mov sub add mov out cmp mov aas lret mov add xchg cmp out add enter mov add jp lcall jg mov dec inc xor pop enter outsb ret icebp sub sbb cs fs aam cmp out jg add sbb mov mov sub in dec add enter gs test cmp icebp adc dec add push fimul cmp add mov mov stos adcl lods xor mov add rclb push adc add lret cmpsl push xchg cmp mov pop pop int3 stos scas loopne cmp imul (bad) mov add popf adc or xchg rclb inc insb dec out stc js mov iret cltd pusha mov and sti js dec ds into (bad) js out dec add fs inc popa bound cmp and pop stos adc stc pop cltd (bad) aam decl cmp jl push jmp pop fstl aad push mov and ss ret lret sbb add lods cmp jbe cmc pop scas add pop leave pop pop sahf jns (bad) ds mov inc or adc aad pop fwait add jne jo pop add and test (bad) mov imul inc sbb push mov sbb pop repnz cmp std xorl cmpsb shrb sub add jnp scas cwtl xor add loope (bad) notb xchg jbe adc (bad) (bad) add add adc add out pop lods das ja lret add cli sbb into add mov xchg repnz loop push cmc aaa notl sbb scas adc mov cmp jo sbb rcrl add mov les add xchg aad pusha jb sbb push lds sbb sub add mulb arpl out lret mov mov fwait mov stos aaa xor sbb stos add xchg xchg leave int3 (bad) pop imul adc add xchg mov popf imul pusha mov add dec into mov fisub aad jo incb sbb pop push lock movsb orl rorb mov inc mov bnd je sbbl jo pop or add lahf and (bad) arpl iret push jne sub mov mov loopne jnp push cld (bad) (bad) inc ds test pusha cmp jg add xchg add cmp inc add sarb add xchg and add subl dec mov add xor (bad) in hlt popf xor pop add push fcoml ja es je sti lret sub fiadd mov negb cmpsl addl enter add jmp xchg repnz adc ljmp add cmpsb jb in testl dec (bad) insb jp lret xor test int sahf ret bound cld ret imul and fadds mull add nop in mov jecxz add addr16 out mov and and xchg in push jp ljmp push fdivs inc push ret lods loopne sbb cld into les outsb inc and int3 inc and sub sbb popf enter push ds ss or mov in stos bound addr16 insl push negb test movsl (bad) mov push and pusha add cli fistp stos add sbb mov scas add rolb clc in into incl mov outsl xchg mov push add jge popf xor sti and sub popa push add cltd sahf cmp mov pop hlt push out cli ret cmpl sbb inc push add popa xlat addl pop into cmp jnp sti (bad) or in stc add jne,pn cmp faddl fwait scas fs mov mov mov mov add adc adc add hlt aaa pop dec stos mov xor pop pop cltd icebp mov andl cmpsb out js and mov aaa dec mov icebp add jle dec jl rolb mov pop or pop push xor mov pop shrb and aad leave push jne scas xor xor adc push jo repz add xchg mov sub jp cmp jne push mov mov shll lahf jp add arpl mov cwtl ss add lods jo rorl iret cs sbb sub fs cltd in add jl out add or push add pop stc jns,pt add add push add and adcb aas cmc rcrb nop addb cmp testl xor out arpl dec jbe add data16 mov pop js shrl add pop jo dec repnz nop vmovups stc push dec xchg jne sub dec subb push je jmp mov cmp aam and push add cmp movl repnz add fistpll adc pop add rcll cs popf pusha cmpsb outsl mov pop jp xor xchg out jl cmp lret cmpsl inc sbb popf test or xor sub iret jae fdivrl gs jl mov in ffreep pop mov aad int3 data16 add pop jecxz jle xor sbb push add hlt fisttpl mov pusha mov jns or sub and es in aad repnz rorb jns jp mov add lcall add lods push lahf fiadd mov loope xchg jno js lock add loop in out sub inc add or dec ljmp jns addl xlat mov in or pop movl leave cmc gs cmpsl xchg int3 add sbbb (bad) dec das popf fcmove cmp add jno iret push js mov aad mov mov inc out push pop add xor add std sbb jmp fwait pop fs xchg testb bound loopne inc adc push xchg in pop dec ja dec sahf loop iret enter stc es jnp add sti or js (bad) std jns add data16 adcl mov icebp jle loopne pop test imul xlat sub sbbl sbb loope pop lea stos hlt pop xor push dec pusha inc fisubr xchg jns mov mov roll (bad) lock nop and or pop cmp cld in lcall add and dec mov fcoml mov add out lret fldt hlt dec sbb mov jno pop sub adc push repz cmp (bad) push and add and mov sub push add loope ret hlt add mov movsl pop sub xchg mov adc mov lods adc mov sub loop mov jg push and es aas dec sub rcr addb mov mov adc xchg mov pop adc (bad) mov mov xchg sbb jmp mov ljmp pop insb movsl lret add jne std pop inc push or or lahf roll sbbl cmc iret test fdivs jp push inc (bad) cld cmp and add cmc ds jp mov lahf pop mov mov push jmp jp add pop push dec add scas addr16 jmp mov cmpsb cltd xchg jbe jl or xor add pop add add aad add cwtl in pop push add cmc cmp pop ds and add lret cmp add adc dec cmpsb add jo mov mov xor inc in pop (bad) xchg (bad) jb pushf cmp pop push add (bad) test cmpb pop out cmp xor xor mov ja insb gs add xchg inc divl add fs (bad) cltd dec mov aad xor mov in mov stc mov call pop loop cwtl add jecxz fimull cltd add cs mov xchg mov jne mov ss negl and mov xchg shl loop xor or pusha mov out leave jb and push jmp xor ret pusha (bad) daa xor mov ficoml insl add jb xlat sub movsb pop pop and sahf bound aas or xor icebp and xchg push pushf sub pop push mov fiaddl add jo jle jecxz adc adc orl push popa mull repnz dec in mov pop pop dec fcoms popa and xchg push mov nop and outsb loop sub mov pop aaa icebp hlt in mov popa int3 or jnp aas orl adc push data16 jl add sub test xchg adc mov popf sahf jb mov in iret add hlt scas repz or pop cmp jg xor mov mov pop test cmpsb shrb cmp pop jle lahf (bad) mov in jno mov std ret mov sbb jecxz add stos pushf mov les movsb inc loop xchg mov xchg mov test or test ret jmp xor addl adc or ret popa jmp sub and inc stc (bad) fild inc jg push lods cli stos pusha or inc sbb in jl cmp sub dec jns jbe push inc rorb add das aas push or lea jmp adc dec pop xchg mov pop into cmp lret dec stc jl xchg add fisubl add cmpsb sub cmpsl add dec ds add nop mov mov enter dec int push inc mov inc adc lahf mov rol jl int adc ret (bad) mov push addr16 mov test dec add push (bad) out cwtl mov mov push sbb add xchg bound jge ret movsl in aas add xchg aam addb and xor or fsubs pushf rolb insb or popf adc in push mov (bad) out stos inc clc jg incb leave out dec loop mov push call ds je (bad) mov mov xchg sbb or outsb sub (bad) push pop stos mull mov cmp movsl adcb xchg mov in jb sub add jecxz es mov push andb add cmc sub lcall fisttp mov fsubrl dec ljmp inc add push or fwait aas mov xchg aad lea fadds pop xor insl push jb mov jmp sub or fiadd cmp sub jl sbb in fwait or add mov sbb sub jp jno add mov repz out daa fmull das outsb jae add and sahf xchg inc aas jne adc sub insb adc (bad) and push jb xchg gs inc xorb mov test or les dec pop adc cmp fs adc add test data16 fstpt loope mov sbb in adc jle call lret add dec in fiadd insl scas sbb lock out es mov dec add in xor add icebp in cmp push movl int3 inc cmp jmp jns sti sub add lcall add in xorl or sub jp outsb aad add cmp add ds mov cmp add repz mov clc loopne sbb roll daa add imul mov mov nop repnz lods js ret cli cmp push into movsl jno rol popf lahf (bad) add enter mulb mov and cmp or and in push repz enter cmp (bad) xor pop mov jae inc repnz imul jp dec add lds pop sarb fstpt mov jp add out sbb lret orb pop negb mov outsb (bad) aam fsubrp add (bad) sbb out test pop cltd das jl jmp (bad) incl mov pop push push xor mov add mov pop jecxz xchg push xorl mov mov mov outsb adc in sbbb push lcall andb gs in enter into or (bad) outsl push or mov add add push mov cld cmp cmp pusha mov out add push insb outsl dec or add enter pusha and (bad) cmpsl aam jno mov (bad) mov mov in stc sub pop jg pop or cli add maxps in mov std jno sbb mov jle das ficoml aam aas mov sbb and inc xchg andl nop inc js xor jb in xchg push and outsl cmpb mov andl es adc inc add test add mov cmp jl add movsb lret sub inc loop leave push lock sbb insb call negl sub add dec and pop lcall scas mull inc xchg pusha out jle pop insb sbb (bad) push insl mov insb xchg xor repnz outsb pop test out popa mov inc and jo sbb push es jb pop xchg adcl aaa lods add adc bound mov lahf das adc test pop adc aad and jmp pop mov jl pop test int3 add mov or cmp js fnstenv rcrl cld sahf pop xor add cli mov xor and rolb or sbb pop add clc sbb repz lret or mov jae add into xor pop mov sbbl enter roll inc aad in testb add push in sbb push inc or int3 fildl scas std xchg pop jl test inc cli cs nop adc jp jle jns add or lret nop ja jmp pusha enter (bad) add jp pop pop mov push add test testl scas add xor jp inc test cmp andl cwtl scas lods pushf push iret add sub shll nop sub push test jne inc lahf loop xor clc push cmp mov add frstor test dec int cmp adc add xor push mov xchg stos mov jo mov int mov and add data16 pxor push mov lds sbb push rorl xchg xchg xchg add stos jecxz add jp xchg loopne fiaddl sbb movsb lods mov inc jnp lahf add push add mov insl outsl pop jg fsubl stos out rcrl add cmp inc sti push sub and aam xchg sbb fs pop jne add aaa (bad) vprotq ja ret or (bad) fcom sbb lods outsb fild icebp (bad) jno push call subl jo sbb subl pop jle dec and popf and add test (bad) sub jnp mov mov jle add bound add pop ficomp call and adc pusha xchg stos (bad) adc cmp jg addl lock mov sub and push lods lret adc fsub cld lods mov inc pop or xchg xor es lea sgdtl dec subl pop cmp jecxz inc repnz popf pop daa sbb adc pop add add hlt adc add cmc dec lock pusha movsb add outsl xchg jge comiss test add adc orl lods pop fs inc das js add in cld mov sub and roll aas mov xchg imul cmpsb add popf xchg push in mov cmpl inc adc fiadd (bad) xor push push repnz xchg cwtl mov or xchg mov add fbstp pusha add adc push mov mov or add inc cmp lea or mov scas call add popa mov xor xchg (bad) sub je sbb xchg cmp mov mov repz insb and cmpsb add pop mov add sbb into sbb jo adc xchg lea add sub pop jb mov repnz cmp bound out test xchg jle add ljmp pop xor sub mov sbb mov dec es xorl push adc xchg dec jp mov aas cmp mov add repnz xchg add push jp inc test add mov xchg sbbb add or add insl scas xor in pop pop add jns rclb pusha inc cmpsb std jo cmp into xchg loopne pop mov imul leave in pop cli mov mov or cwtl add idiv xor adc add rcrb jo mov mov mov cmpb lcall aaa aam add movsb cmp add fcmovne in xchg aam add dec outsl imul or clc rcll hlt js jo inc (bad) adc add imul add dec and lock insb popa pusha testl vunpckhpd cmp push add mov jle jge dec sbb stc push and test test popa sub jle iret cmp sbb adc jl loopne rorl pusha sub cmp pop loope add lds sub push ljmp jmp dec push jg iret inc xchg pusha sub cmpsl dec out add pop imul pop gs add pop adc add pusha aaa jne mov pop (bad) cmp cs pusha jle dec test pop add xor pop das mov add jns push xchg incb js,pn add dec cli imul int adc cltd lds xchg pop loop in dec imul data16 pushf (bad) je (bad) jno popf adc mov adc insb jb cmp dec scas add (bad) mov add mov push add cwtl in mov nop movsl (bad) xchg adc or cmpsl dec or rorb mov mov pop out mov roll or dec outsl test pop jg pusha xchg or in add rcr xor bound lds mov add cld loop jo add clc sbb mov into sbb and mov lcall mov lret leavew pop push xchg push sqrtps pop (bad) jmp xor fistl jne jae jno sbb adc cmpsb pop out push push mov hlt adc xor mov add fprem aaa fistpll push sbbb add mov add sub pop test add out pop add pop add xor add lcall addl or outsl test jp xor pop push pusha in shl fildl sub in outsl (bad) add or mov arpl call cmp pop xchg sti rolb cmp pop lret adc and push pusha and int mov into add pop rorb mov (bad) push iret jnp push mov pop mov add and imul sahf inc les orb gs (bad) jno add or add cld dec inc xchg pop test jns dec push movsl pop add (bad) icebp pop popf (bad) in push adc inc mov or cltd jae cmpsl inc or jmp mov mov jns loope add (bad) ljmp jae notl add xchg aas in inc in pop add push movsb fildl (bad) iret popa jno xchg xchg je (bad) stc cmp pop mov xchg adc dec and jno mov cmp mov aam adc add cmc push mov xor popa or lods pop mov inc xchg mov mov jmp lret stos sbb in orb mov sbb cmp and xor mov mov stc adc dec mov push enter ret hlt jle mov test inc pop cs add jmp add mov add jno cmpsl aam fldenv cltd mov out inc in pop rol add ja and clc jnp or movsl fadds or push jo add sbb jp aad push incb mov (bad) ljmp sti adc addl or addl jo icebp or insb jecxz test xor mov (bad) mov leave clc iret insb add scas push pop stos lcall popf jb xchg xchg aaa cmc (bad) adcb movsb add mov js add cmp stos orl dec pop ja movsb js add xchg mov jge add repz xchg jns setp jo gs je jae add dec mov orb ret add loope inc xchg in pusha pop (bad) add sub aaa jnp lock and les add test je ja cmp push pop mov pop ret jp push pusha add jnp push shlb add xor repz out cmp inc sub cmpl testb dec loopne das mov rolb arpl add inc lahf mov ret sub into inc push add xchg (bad) dec (bad) fstpl addb idiv repnz addb repz outsb subl xchg pusha lcall mov xor add fldl (bad) mov mov inc cli or mov ficomp add out add add popf dec pop inc mul add xor adcl push sar scas jle pop add dec add adc mov shrl jmp test adc inc adc sahf or jo aas jle add js repz arpl dec add pop dec (bad) ss iret add mov push pop add aam xor ds add jge in fcmovnb mov jo inc cmpsb pop adc test pusha adc rol mov lds (bad) sahf repnz call mov mov test mov insl (bad) mov rolb pop movsb cmpxchg rolb sbb mov inc sbb pop add push repz xchg xchg jbe add (bad) xchg es call sbbb xchg jmp fwait mov xchg daa jne xor inc out hlt inc int icebp add jmp mov pusha (bad) ljmp ret dec rcrb bound (bad) data16 cld xor fs mov pop add xor pusha fcompl sub sub movb push add call loop mov add std out sub pushf jg mov sahf in pop sbb jp pop aas jnp sub lock xor sub aam (bad) and ds pop adc test loope jo jo in add cmpsl ss push cmp sub faddl in outsl insb and jne add mov push test stos pop cli sub andl add mov xor jns mov loope mov in add mov push add les push cmp jae jno add fist push cmp movaps xor add dec das cwtl (bad) aad jge (bad) iret test push pop jbe add loopne sbb inc cmpsb and dec (bad) pop add bound pop jecxz std add movsl decl xor add xlat int3 or inc dec inc enter inc (bad) mov mov imul adc pusha jo cmp and fiadd aad adc shll lods pop fstpl inc mull push test and jno in cmp roll fidiv test aas mov hlt xorl mov xchg add cli pop cwtl add inc jg cmp roll out add sahf add std add dec xor xchg repnz add cmp adc dec jbe bnd fwait cmpl roll xchg ja in cmp add cmp mov icebp mov add adc fadds mov sbb in push fs and mov add mov adc fimull pop insl add test jne add push xor scas add aam pop xchg xchg mov add and mov push push repnz pop add mov xchg mov mov jp fdivrp dec jae pop mov stos test aaa and cmp adc xchg les movsl dec aad sti jp add add jb fsubs insl add push dec into add (bad) xor in out add lcall nop jecxz into cltd add mov hlt addb pop fbstp add stc mov push jle adc cmpsb jbe loopne xchg adc data16 add or dec lcall lret mov cmp or xor test insl pop dec popl mov in push movsl adc add sbb addl (bad) pop pusha mov jae test sti add lods xor xorb (bad) inc movsb lock push jle jge insb jns out or pop add pop adc movsl shrl je ja add aaa sub sub sbb call add std lret jg and int push dec mov add pusha pushf mov sub fdivp jge add loop pop push inc scas clc call subl xchg mov lea stos cltd fist test repnz xchg out jae js dec push or push push bound add (bad) mov leave and adc mov add push add sarb mov xchg lods or cmp ss mov repnz dec push add lods imul es pop popa sbb dec push cmp sub or dec and insl cld mov mov mov (bad) and add mov inc dec es sub sub sub xchg mov ljmp xchg fadd push mov and (bad) inc mov sub pusha (bad) xchg xchg jo jp add sub cmp pop movb pusha sbb testb in (bad) insb inc out mov cmp mov mov add inc cmp sbb jne cmp orb push pop add dec stos or bound or xor inc cs je add push aam push dec adc add push repz out pop cmpsb mov xchg push repnz pusha (bad) xchg add (bad) jbe pop sti lods add mov xchg (bad) add jge push bswap test scas gs arpl ljmp push adcl addl jo push fisttpl add repnz ret dec add mov inc push xchg fwait add sbb jmp pop and xchg add daa jle fs cmp pop test and push pop call movsb jo sbb cmp xchg (bad) shrb fldenv or xlat mov add xchg add xor sub sarb add leave pop xlat add lret pushf cli push push adc inc dec out xor fcoml add adc std test cmp add or outsb inc and in (bad) cltd sub add push and fs mov std shr add scas push jbe fistpll mov or pop jle pop inc add mov fsts jb push arpl fwait mov xor test cmpsl add xor sar and out cmp mov loop roll xchg jmp pop rolb out out push lods scas mov jbe popf add inc jno sahf adc loopne sahf lods add mov jge mov and fidivl sbb fmull loope add mov add int3 movsl outsb mov test mov popl ret push cmc lock popf mov add in repnz leave imul mov inc sub push imul (bad) hlt xorb inc sahf ret popf outsb dec push and mov dec bound pop add mov jno scas mov push push add (bad) cmpb outsb out xchg sarl lahf sub pcmpgtw adc (bad) int add insb outsb fwait lcall jle mov and and test loopne mov or xor sbbb xor loop mov (bad) js push mov ret (bad) test inc test hlt inc (bad) and pop mov adcl push sarl add jle gs sbb into and mov add push in clc pop fdivp jle and (bad) jo and (bad) pusha outsb lock or push push pop inc addr16 fs pop push add jecxz daa sbb repz call add es pushl test fcoms je shlb in inc ss or jmp sub add clc cmpsb data16 mov xor push push (bad) cli nop lds or add or add pusha sub add pop xlat outsl lds sahf inc or xlat cmp and cwtl mov fs mov loopne mov (bad) cmp dec ss add sbb call std ret loopne mov out stos dec cmp dec adc jle pop add (bad) jae adc mov in aad out cmc or ret rcrl xchg adc lret cmp stc add xor push add lea add pushf ljmp (bad) call or cmp fistp sbb js cmp xchg push xor mov mov aam inc or rcrl popf mov pusha (bad) push and inc sbb add or add jl sbbl (bad) adc stos add in pop add xchg loop push insl inc fcmovb in jp adc or outsl mov inc ret hlt or push mov int3 sub ficoml add addl add pop jge jne dec jl arpl add jno and cwtl xchg cmc adc out jle mov xchg js sbb add lret shrb sahf cmp dec and add push push outsl add int3 or or out imul push or xchg inc add sbb add fdivs sub fbstp fisttpl pushf loopne rcrb sbbb push scas cmp or stc jnp add inc icebp daa movsw (bad) xchg pop leave dec inc or sub xor (bad) xchg cmp sbb cmp (bad) add cmpsb mov cmp (bad) sbb inc aaa add mov lret pop in out ds jbe cmpsl std outsl adc test xchg (bad) out jne sub and repz cmp scas mov ret lea pop lods push sbb (bad) cmp add scas std lcall lock push sbb fldenv inc lock mov adc jo pop outsb add mov push jne jp jo mov daa (bad) repz push bound mov dec mov pop imul add pop (bad) add not aad lret push pusha dec sub iret jne or add repnz inc icebp pop roll jl outsb push cli lret add sbb roll mov insb xor or stos push (bad) or daa jb notl cltd mov cmp punpcklbw xchg cmc jmp xorl sahf cli sub loopne rorb stos ljmp dec pop xchg loope add gs xchg sbb test mov mov jae inc push xorl sub cmp mov pop push (bad) es mov loopne sbb js mov lea dec xchg xchg in sbb mov shlb (bad) mov add xlat (bad) jmp mov fisttp or add and lea pop xor push mov scas data16 jge jmp out lret cs add mov lahf push stos les add out pop setbe stc int pushf add cld cli sub in scas and add pop cld add icebp or xor sbb sbb and push stos mov in cmp ret (bad) out add add jmp sbbl dec jo mov or xchg lods test loope bnd cmpl fs pop in ljmp xor jge pop aam enter lret pop in clc add sbb pop mov inc adc push ds mov mov mov mov add das add mov pop pop mov test das mov pop push or repz add loop cltd or mov xchg mov pusha imul jle pop mov aad jl sbb adc jle (bad) mov mov and xchg fcmovne loopne das xchg addl pop insb inc mov or movsl cmp loopne cmpsl lret rcrl cmpsb add mov nop add sbb xchg lahf pop dec or int dec adc lods stc add insb lods sbb loop sbb pop push (bad) and sbb jge mov movsl mov xlat cmpl jecxz mov add ja sub mov negb sub add push into mov adc jae add imul cmp mov insb addl fsubr iret test push mov add ret add fs hlt popa test xorl dec and incb fisubrl adc sti in dec aam and (bad) xor mov push add sub dec mov or out adc andb push inc add add ds (bad) (bad) mov ror mov add shl aam lcall cwtl sahf sub ja mov rorl adc in cmp add push ror sbb mov aas stos inc stc andl cmpsb or jo or aad jmp pop je cmp jo enter add push mov js add jmp xchg jo lcall (bad) nop xor mov test dec cmp pop addl dec enter dec sub adc repz add lahf std adc mov jno ss sub xchg jg pop iret je add sub and dec cmpsb add incl add pop sbb lds sub jnp mov scas (bad) sbb add mov (bad) push (bad) cwtl jns out ljmp aaa add or movb push pop ljmp or add xor testb lret rcrb mov scas in adc imul loopne push mov pop add mov pushf stos push jge mov (bad) or add mov push cltd xor sub inc sbb adcb push sub jecxz bound push insb pause in jle sub xchg add jecxz fldenv (bad) lea lods push (bad) hlt lods sub stos (bad) gs fsin adc cmp push ret inc scas jnp pushf cwtl mov push mov daa cmp push and pop pop enter mov clc test push and cmc add cmpsb pop sbb subl lock jl movsl add rolb cltd inc stc aaa mov dec fisttpll push xchg add pop lcall popa in inc cmpl movsb inc sahf or jg inc jecxz push mov jl sbbb adc xor insb cmpsb inc cvttps2pi bound inc aam out fs (bad) shrl sbb fiadd loopne inc icebp mov cmp bound test mov loopne enter xlat lcall add test add movsl jne or lret cmp je (bad) push nop repz jno mov pop aad in rclb iret sar xor ds pop or inc xorl xor add or popl jae popf add jmp fistpl inc data16 cld (bad) testl test pop outsb xchg cmp sbb call stc add adc cmp mov cwtl imul sti shrl js xchg pushf (bad) movl or addb stos fsubl add cltd sub xchg and xor jno add inc sti orb pushl pusha add push inc xlat add popf dec incl lds ja add bound lcall and jg add mov lea add ds cmp cmp cli cmp sbb (bad) pop jmp loope fst add mov inc add cmp nop mov in adc inc leave pop adc fldt adc adc adc add repnz lret daa add and add out sub or sbb mov imul addr16 cmpl cmp inc or cmc subl pop in stc sti add mov mov sbb add aaa lock imul adc add ljmp pop add xlat add movsb shll ljmp fbld jns aad mov mov mov sub inc clc lcall xor jno dec push xchg insl mov adc pusha imul ret mov cmp mov rorl add mov mov addr16 xchg mov enter (bad) loopne pop mov pop (bad) div mov cld and (bad) sub imul add loop sahf fistpl add rorl pop jg mov add sbb sahf add add aam andl push jle and mov adc mov add (bad) (bad) jb int xchg add mov das pop icebp push movsb push and fs jnp adc loop inc or add clc (bad) ss xchg fsubr and fstp cmp mov es add pop mov lcall leave loopne jno jle jp jae sub jmp pusha and cmpb (bad) cmc test (bad) andl sub ss adc xor mov cmp js cmp (bad) sub add dec mov negl pop (bad) cmpsl dec sbb mov xor cmp or sub iret sarb mov imul roll jmp scas pop leave into roll shll (bad) dec add push roll mov pop in and pushf add jg mov lret add jge cmpsl fnsave jecxz mov stc dec dec shll sub jmp sbb es mov rcll cmpsl iret fmull cmp add outsb insb mov add test rcrl lcall add pop jb imul sub add lods push lods add pop mov mov sub imul add push roll mov out lahf cmpb add cmpl add (bad) mov add test mov cmc fisubrl mov inc add inc popf loopne adc add pop cld lds cmpsl add add test jle xchg stos imul lcall mov xchg add mull add mov insl rolb push subb ret jbe add push inc cmp das clc aas sbb sbb add subl and pop loopne jle cmp pop aam out jne jo cmp mov dec mov xchg or sub add ret popa ss cmp dec dec lret add sahf add shlb or lock pop xchg mov ss dec idivb jb icebp sbb mov pop mov (bad) dec pusha push pop jbe mov lea shrb lock test add test or es mov pop push js scas jp add into sarb add lcall out mov and test mov sbb lds inc lret fwait aaa mov add arpl mov cmp jbe pop aad adcb adc xchg xor pop jne jge sti xchg push add out cwtl std dec add xchg mov aaa inc sahf mov lcall and scas inc or std jne shl mov add push and (bad) jae test dec xchg lret add xlat or xchg xchg (bad) jo add fdivrl or sbb add les jg add inc (bad) and sahf dec inc (bad) push insb pusha mov inc outsb iret xor fucomp scas js push jnp add nop xor xchg or jns sarl lea cmpsb popa repnz xlat add std sub mov push xor xchg fbstp add or sub add sbb out ljmp or add jnp cmp pop (bad) cmp rclb cmc lds sbb adc xchg ret shl aaa inc jg bound in jne and dec xchg xlat pop jae je pop ljmp subl xchg pop hlt outsl scas aam cltd in sbb leave ss add into pop mov mov in insl push das movsl sbb repnz rcll mov adc shrl aam xchg or add lock jg add ficom ljmp push cld hlt or je dec jp pusha aaa aad push in insl (bad) sub aas mov cmp sbbl inc loopne test push (bad) jae ret and cmp add xchg add (bad) lahf in orb mov std push xchg inc repz pop outsb loopne push xchg inc int lds pushf sub les imul jge push test mov enter in dec inc mov add xor sbb push jo add pop fbstp imul mov jg adc add stos hlt repz jmp mov daa pop lock sbb pop (bad) dec int orb jno add or mov push sbb mov cmpsb cmpsl mov jnp jb mov fldl cmp push or adc fiaddl loop adcl and mov fldl cmp (bad) aaa and adc lret loop push gs stos std enter insl add or fwait add leave pslld lock sub and and lcall add mov lahf out cmpsb jecxz or add stos je lods int push test sub jecxz adc fcomip pop xchg cld les ret in mov stc add cmpsb pop jg adc test out in add mov xor adc push mov add add add lret or adc jae inc test inc mov jb fwait add sub fisubrl jbe sbbl cmpsb (bad) hlt xorps cwtl jecxz pop movsb cmp fildl sahf rcrb inc and push xorl sarl pusha dec add xor and add jnp cmp test mov sbb push out cmp push xchg add xchg es adc jg mov leave imul inc scas mov push mov push jbe xor sahf cmp cmp pop inc das ret pusha push inc nop mov and lahf pusha je adc data16 addl (bad) out push push fs sbb sbb push sub inc and pop fldenv insl jmp test or aam cmp mov lods test jmp pop (bad) mov pusha or xchg mov shlb dec add push dec sub loopne pusha inc mov push add je or dec scas fldl mov lret (bad) mov stos jb sub std inc fldenv andw sub sub sub push or dec add loopne cli addr16 int3 add movsl ljmp ret mov mov insb faddl outsb pop lods inc inc dec push jl call addr16 imul jbe add xor mov cmp adc out (bad) mov add mov add inc jnp insl popa add (bad) mov call jno stc add les adc pushf addr16 add xchg xorl fldt lods pop push sub outsb mov int ret add mov lahf jp push add push dec add dec pop andb test fdivrs add mov int xchg mov inc addb lds imul ja setg sbb lcall xchg xor pop lds int sbb add mov cmp push jnp js dec test and popf mov scas jae repnz daa mov pop rclb inc stos stc gs push ljmp fldl dec xorl aad xchg cmp mov jg and sub ret iret add inc add sarb scas xchg or fcomps in ret add (bad) sbb add adc inc add jae out add in sub cmp dec inc inc les inc adc call pusha pop movsl lods pop add push cmpsb sub push jge push inc roll sub je ds inc (bad) xchg aam add cmpl imul jle pop push (bad) mov aas sahf adcl xor cwtl and pop xor lret xchg sbbb ret push ja pop (bad) mov dec push rsm xorl add js and jns movsl insb rcrb push das cmp add and icebp movb jp fidivl push fistpl xchg repz rorb out add shrl sbb or sub pop cmp mov das inc jns mov jb cmpps in iret dec add leave cli pop sub cld nop jecxz call lahf fisub aaa aaa insb jmp xchg arpl das xchg cltd sbb movl cmpsl enter fwait or and add cmp cld add mov push add cmp cwtl mov pop mov aaa mov pop xchg xchg push notb addl xor sahf dec sbb in sbb fidivl sbb fs mov sub flds cmp cmp lret mov push adcb xchg stos pop jg jbe inc add xlat loopne arpl dec add sbb xchg add incb lods add lea jge les xchg js sbb ret add pop (bad) sbb fwait dec push mov popl sbb loope push add mov gs add ljmp jnp lods cmp test popf mov sbb sbb xlat xor pop push lret aam cs add pop fsts and add int3 xchg pop xchg jb dec icebp ror cmpb std add je les cmpsl dec andl lahf push mov jno jbe in mov repnz mov jns push clc mov fcmovnu push pop xor inc insl lock dec lds add sub (bad) mov xor or push fcom adc mov inc xchg sbb or inc dec mov jb add rorl jecxz jbe icebp add push pop loope pop sub cmpsb outsl pop dec cmp lods jns add pop mov shrb dec add sbb das add sbb or add sub in mov fisubl arpl inc push aaa in mov dec out fimul sbbl (bad) js push and into mov cld pop repz xor or jle mov int inc scas (bad) jns repnz fcmovu cmpsl test adc fadds stc xchg stos add and pop push mov inc mov out xor fwait mov jb cmpsl scas jo jnp loop iret pop add test jae pop xchg add leave mov lea add insl in mov sbb add and sub fisttp push addb jmp mov and or out jno fnstcw sti out popf vunpcklps add cld mov repz jge stos int3 add je pop cltd rolb add enter (bad) lahf mov rolb xlat movsl push fs sahf mov scas dec out out shll ja (bad) cltd fcomp cli pusha adc add xchg xor xor adc bound push imul cs hlt lahf fwait inc inc mov dec sbb push lock jl icebp jb jns mov lret daa cltd adc pop sarb (bad) fbld sbb out sub dec inc adc popf shll pop jecxz add cmp in pop int3 (bad) push js xor pop popa sub inc and or add fildl pop jne push push fwait inc add jge and fsts enter add mov lret add out cmc sub inc or add inc subl add cli dec xor test adc cmc xchg add sbb dec xchg rcrl popa push ret je pavgw xchg testb sahf jg add push adc mov data16 sbb sbb cs push lods jl lahf mov adcb sahf mov xchg aaa or add out les xchg movsl add add into fisttpl bound sbb cmp sbb mov mov fistl sub fild les sbb sti pop arpl push adc push (bad) mov or or ret jecxz int (bad) jp pop push mov push push lret inc add push inc jp ret xorl inc inc popa pop xchg add cmp push or jl jbe add or sahf mov lds add jns nop out shrl lret (bad) jge ret out xchg sub and stos push (bad) inc mov lds push sbb add adc fisub dec inc out or add daa jmp or jnp add pusha add test fndisi(8087 cmp fstpl orb lahf pop movsl sti xor add and rolb xchg subl sbb push pop mov add shr mov add aaa (bad) push push stc sbb loop sbb pop orl jle enter mov add iret mov call dec mov inc (bad) cwtl adc pop addr16 cmp add sti in adc int add mov jmp fs add movsb imul jle xchg popa pop add icebp push add stc jecxz sub push into add fdivrl arpl in or add or mov (bad) scas (bad) punpckhwd pop jo (bad) mov cli rol in inc pop scas (bad) stos (bad) sub add out in add scas outsb movsl hlt test test jo lods mov jne (bad) jnp scas outsl enter rcrl pop sbb push lret jmp mov add push dec fnstcw repnz xorl mov pusha cwtl data16 hlt jb push add movsb xor cmpsl inc or sbbb lds add dec cmp cmp xchg scas push and xchg jle mov sub inc mov data16 testb add in sub add scas outsb cmpsl or lods inc add lret stos cltd mov add (bad) lock push mov add (bad) int3 rcll in int out lock ljmp je jl jbe xorl mov inc cmp pop adc shll cmp cmp mov test dec ljmp (bad) aad or divl stos rcrb mov push cmpsl je sbb add mov jae (bad) fldcw xlat or dec lea add in lret fcomps add jnp nop test mov inc or ja jb push pop mov jl add (bad) repnz sbb in insl push inc xchg in lret sbb dec push jecxz add fidivrl mov fwait movl sbb je xchg cmp sbb xchg js add sbbl shll jbe int pusha ror icebp es dec add mov popa mov add cmp mov mov pop and and in cmp mov aad dec jae add aas cmp add lods fcmove inc adc repnz mov mov popf pop lods add mov ret and fimull test and out pop or mov dec add xlat pusha imul lahf repz (bad) push and movsb add push popf or js add pop test mov lret and jns mov (bad) pop out into movsl cs outsl xchg cmp movsb aam in dec jl mov xchg jp xchg out outsb or pop push sarb scas pusha adc imul (bad) and lock xor push bound push jl dec inc add or data16 add or mov clc test test idiv push insl insb mov pop scas mov inc jge pop add roll mov inc js and call int3 cld sbb cmpl mov aas call jmp sti add ret add or aaa mov jmp jmp cmp scas test (bad) xor cmpsb jmp mov and sbb sbb rolb es add sub (bad) push add mov loope or mov je add and adc and xchg mov iret push jp jo aaa lea add cmc and add mov imul and movl aad jmp mov js add add and xchg cmc adc mov or cmp hlt imulb or out cmp je pusha add rorb push mov or xor xlat shlb jns into and ljmp loopne loope mov hlt lret stos xchg xchg js mov in mov (bad) fiaddl push imul sbbl jle aas test outsb jb rolb jge in inc cmova fs sbb add cli add aad leave idivl popa push mov dec mov sbb jmp push xor push and mov adc inc cmp shrb int ja add or rorl xor jbe xor inc dec call in ret mov outsl outsb ret mov push int fisttpll pop lods das icebp mov add add cmp test popf sub add add dec xchg jns into andb inc roll jl lahf stos daa mov add das fwait xchg (bad) jp push mov xor es xchg bound scas roll jge add movsb pop test rorl ret or push sub pop pop and shll aad xchg xchg pshufw add je mov sbb call fs cltd aaa push sahf out outsl ret inc outsl dec cmp push (bad) int3 repnz (bad) and (bad) xor mov outsl add addl xchg sbb (bad) aad imul ds mov mov mov push inc or daa sub jmp mov lods std sbb push xchg add adc pop jae ds mov mov bound popf add mov inc in adc add xor rolb xor push cmpsl icebp sub cmp dec push cs add out cmp sti inc and add stos out test add inc pop notl data16 mov hlt mov lods dec out scas sbb ss push xchg dec stc mov add mov (bad) mov jg jmp add and inc pop stos add sti xchg out and mov xchg sub pusha out lds outsb test jl shl stc out movsl cwtl adc lods orl pushf xor inc sub inc xchg inc mov test sbb (bad) add mov cmp xor (bad) ss adc in into xchg stos mov inc mov mov mov imul lret cmp xorl in data16 stos mov jno mov enter push xorl cld in add add xor sub test mov push adc in mov add out add sub cli addr16 test popa mov adc sub aas fidivr dec inc aas mov cs pusha xlat add (bad) pop (bad) add lahf fbld add jl sub ret imul xchg imul mov pop push adc data16 outsl mov push pop dec enter mov pop ret js add jp add push and in notb andl mov sub jle sub je add ds jns cld bound fwait adc cld jnp add sarb fisttp ja ret rolb cmp (bad) dec xor into push lods add cltd in and mov arpl xor outsb add or scas std mov adcl pop mov cmp or xchg (bad) incb arpl xorl jo shrb inc (bad) loop or cwtl subl or sbb (bad) sarl pop and dec sbbb shlb nop orb jl mov mov xchg inc jne lock rolb cmp int3 adc xchg das subl lcall ret dec dec subl popf xorb mov mov pop pop inc cmpsl dec add in int (bad) jbe jb sbb sbb mov or cs sbbb lods and mov add rorl mov ret inc les ss ja add sub inc add sbbl mov (bad) das pop xchg out test addb mov dec xchg fnstsw xor sub jo pop xlat inc insb daa pop xor xchg pop in dec in into add sti mov cltd and xchg push stc or das dec mov add mov cmc cmpl pop scas dec push add rorb cwtl sbb xor sbb adc jle push cli sbb inc hlt xchg loope push add stos icebp cmpb jb sub sbb push aaa mov cld add push nop mov push (bad) movsb mov inc loope int fsubs mov add or xchg adc inc dec jno add (bad) repz adc or mov cmp mov mov pop stc add cmp addl jmp fs xorl sbb jno dec and test xchg sahf fdivrl rcrb sti pop in mov cmp aas ficoml pusha push cmpsl pop cmpb jb sbb xorl lods js addb dec popa jle push push xor or cmp dec stos out stos repz and add dec add sbb push pusha mov add int3 pop inc sbb fdivrl add sahf cmpsl xor cmc adc iret shll xchg pop ret loop adc xor jl orl push xchg bnd sub inc jle add fild mov js (bad) lret mov rol (bad) out push test xlat jmp mov andl test dec getsec jge pusha adc es cmp (bad) push add mov js lea dec and frstor mov or aam rcrl test mov outsb dec aaa mov and and add test mov add push imul mov inc and mov or adc mov xor xor mov adc test mov push icebp cmpsl adcw test out ret stos ljmp push jne jns add add or dec cs and (bad) xor add pop outsl ret and mov xor xchg gs cli push aas push mov test pop xchg jl add push pop ljmp inc sti leave jns add in out add jp add cmc ja (bad) or or push (bad) xor ss loop push lret jo sub add pop lods arpl sbbl aas popl loope pop and fimull add je das xor jp sub xor jle insb sbbl lret ja add cmpl js push std out sub loop mov ljmp xchg dec sbb addl xacquire cmpsl mov inc add addl mov ljmp push repz cmp or and xchg leave lcall enter push sub cmp push inc mov xchg test nop ret gs jecxz in add xchg iret cmp cmp mov (bad) int3 add ret xchg jae add les adc or jae jns add mov cli testl mov in xchg scas test xor ret jge pop add aad mov int ret fdivl inc add bound cltd hlt lods dec adc sbb sarb pop cwtl fidivr jmp or imul hlt add jo jg add mov orb popa push iret in pop daa or sub ret mov sub pop xor push mov pop add (bad) fldcw leave push add cmpsl push mov imul sbb pusha add fsts xor xchg fmuls lds (bad) jo or test addb add add mov hlt push xor pop aaa jo xor mov jae je xchg ss xor lea inc into pop cmp xor (bad) mov mov call sub insb cmpl rcrb add je mov sbb add stos sbb repnz mov rolb jno or mov mov int fstpt mov push (bad) mov add inc and aad aas call jle sti xchg pushf xlat sbb loop or lret or js xor or aad jmp mov std mov add sbb scas and add add es xchg cmp test sub int bound subl loop ljmp add inc imul iret loopne in insl test lds dec lcall data16 std jo and push dec cltd sbb idivb outsb jl and inc or inc mov jecxz ret mov insl sbb jle sbb clc pcmpeqb pop lcall sbb mov outsb jmp pop pop and int iret sbb sub push cmp or in add sub lock sbb and adc fstpl mov (bad) sub xor dec mov inc mov out cmpsl popf pusha and sub pop xchg and or lahf lea cmp xor int push xor push sti stos xchg dec nop (bad) movsb add cs mov gs dec add lock inc jo fcoml addl add inc imul add mov jmp sbb lods cwtl or adc fistpl or jns and stc adc cmpsl (bad) add cmp xchg inc scas add sti sbb jbe out dec mov and stc or add mov cmp jle add or movq jae daa cmp je negl add cs cli dec add add (bad) sbb jnp add mov and push adc pop and cwtl mov iret in add push out mov sbb call add pop mov sbb test lea mov stos cmc sub pop add add mov dec fdivrp out add popa inc shrb add pop loop and mov pcmpeqd lock in insb mov add (bad) xchg or inc pop xchg push push nop mov add loopne dec or mov push (bad) shrb mov push pop push (bad) jmp call pop fimull mov and (bad) mov jge arpl enter addb stos in (bad) (bad) mov test pop and sbb dec or test daa inc jl pop add pop adc push xor mov cmp int3 mov repnz add adc inc mov (bad) dec mov jl add jmp xlat setb scas push add jae popf push iret fiaddl mov mov sub cmc mov cmp inc fwait ljmp push arpl jmp ja out (bad) test out not add aam xor sbb add clc cli insl call push mov mov aaa or dec add mov add imul leave popf jg add gs fistpl cld dec jno (bad) jnp mov fildll xchg mov mov add testb mov (bad) fnsave pop pop pop add jae test dec lea subb or out jle ss push xor mov jno adc add pop in frstor lds xor in mov addr16 div sub in sbb imul xchg cmpsl iret lahf bnd dec std (bad) adc pop mov stc aad mov into jae popa cvtps2pi cmp dec xor jp lahf test test and in and jbe sarb add das lahf (bad) jbe dec add xchg cmp jle mov mov xor sub jg add (bad) jno scas aad cmp add test push xchg pop in jnp andb push adc lret sbb iret movsl movl in (bad) add test in mov fwait into pop jle sub insb fldt add cmp push add push add adc ror nop adc outsl mov jmp punpckhbw mov xchg pop shrb xchg sub arpl cmc fistpll rorb insl jno iret mov dec movsl xchg xchg rclb loope cld ss pop push and sbb js inc inc jnp or and cmp repnz cmpsl or cld out and mov and rcll repz shlb mov movsl das out pushf xor mov inc fsubs pop sbb add fs xor add ss and mov xchg pusha push lea sahf mov push sub or lsl inc mov or aad addr16 add inc push and or lahf mov rolb jb mov test lret insb mov daa jno add imul dec or aaa add pop (bad) int3 add add or add test cmp popf insl add pop lods xchg out sbb es xor sbb add and sub add add lock out add arpl dec sbb pop pop adc and ja inc pop add stc fsubr adc jge and orb (bad) dec orb jg pop rep nop mov jbe stos je std jb adc scas ret lock mov push push in add and sub cmc das mov js inc mov nop add movsl adcl xchg andb jecxz rolb jl pop (bad) mov cs cltd loopne jl out add fucomi mov add std ja or stos or dec mov gs xor pop push lcall sahf ret dec xchg jg mov inc mov xchg cmp shr out js pop sbb mov je iret sahf adcl js add aad hlt pop jg mov std test mov cmpsb add outsl int3 js pop cmp leave out sub iret mov adc dec lea hlt or add ret add dec notl in cmp inc add in lea or repnz pop shlb and js lret cmp add xor in cwtl (bad) sbb add add leave push aas sbb test jnp fsubrl add in sbb cmp ret jo pop mov loopne mov add sti imul aaa ds inc jg cmpsl fbld mov xchg add add pop ltr mov xchg and imulb push inc push frstor mov dec inc mov hlt idivl mov fcompl stos ds cmp sahf outsb loope mov push xor inc xor aas int mov jnp subl add xor fwait add cmp xchg adc xorl pop in fucomp jne outsb sbbl stos dec popf movsl dec inc test aaa pop cmp (bad) jne mov sbb add mov xchg add jl (bad) xchg movsl popf inc add or sub call (bad) pop cmpl add push loop add je movb mov mov mov call out pop (bad) jbe dec out mov jo jecxz sbb repnz inc out ss sbb add jbe xorl loope call cmp pop or test in mov xor push (bad) mov push push pop scas mov lods or mov add xor dec jae sbb push jbe das nop add ds jae lahf mov add push ret add cmpsl and out adc fimull loopne adc or (bad) and int3 mov inc jle negl es mov stos dec inc or arpl dec add dec mov mov push dec or xor inc push aas jecxz nop aad (bad) adc jl sbbb inc fisub jns add je mov pop xchg repz add ret sub addr16 add dec xor add cmp jecxz inc cmp andl push pusha clc stos fild gs mov outsb xor add cli cmc sub pop add inc xchg sub cmp lock dec push out pop insl add hlt (bad) jl or arpl and adc cmpl enter sub (bad) xchg (bad) (bad) lahf push out add jl lret outsl imull add mov (bad) cltd lods pop cmpsb push pop hlt fadds nop dec and test cmpsl roll lret fldl pop addb (bad) xor cmp xorl fstpl imul push nop push mov lods mov sub add fs mulb inc jae pop xchg iret inc enter push icebp dec add dec sbbb std mov outsb xor mov lods mov sub jmp add nop adcb push dec insb add orl pop add data16 push push pushf addl pusha addr16 ficoml sub add jbe lods or xchg xlat (bad) mov test cld andl add int xor int3 mov add jnp imul sub out lahf (bad) pop fsubl cmp mov inc test add adc inc lahf sub add inc adc xchg mov pop nop jnp lret out leave insb pop movsb mov mov push loopne pop adc inc jne xorl add test push aam cmp mov js (bad) insb mov pop add mov sub and mov pusha mov add mov dec add inc imul bound mov data16 jbe loopne clc ds jle sbb dec adc xchg loopne enter and out xchg popf dec add or jge and push iret aaa repz hlt sbb add jge xchg add fwait or xchg push sub or add pop xchg sahf xchg loop add rorl sub fstl jno adc jnp xor dec push add iret push push enter push popa repnz stc add cld das addr16 and add adc lds push jb roll sbb pusha and lods into mov mov fwait sbb dec js es dec jb sahf popa arpl loope pop add cs shld cli add cmp dec ljmp cli icebp sub push push push add adc addb je sub jb cmpsb (bad) jnp aas scas jg scas adcl jns cmp xorl (bad) add add sbb cmp sahf cmp dec test mov (bad) ds mov adcb xchg clc mov mov subl aaa cmp lds xchg xor out mov mov mov sbb loopne or fstpl dec insb outsb xchg lods movsl or movb cmc jmp cmp cmpsb pop mov xchg loopne jg lock xchg add pop jo mov jp rorb int3 xchg adcb test push fsubrs add mov add aaa push xchg mov push inc fidivl mov adc jns mov stos and int3 add (bad) negl (bad) fildll aad mov fist mov fnstsw fs push mov mov sub mov xorb or ljmp sub ret ja jo divl mov (bad) mov sbb movsb inc pop and out (bad) mov loope rclb fs test jns or jl add pop mov push mov sub add xor cmp iret lock test dec insb out shrl cmpsl or fwait sti dec and fdivl icebp in (bad) sbbl lret xchg test roll (bad) push mov (bad) mov sbb popf cltd lods rorb mov add xor idiv pusha cmp int3 jnp int pandn cmp xchg push pusha pop (bad) clc cmp andl movl call addl std arpl cmp push pushf jns outsb or test dec sbb in inc add aam fisubrl lds pop shlb or stos imul pop repz mov shrl (bad) nop enter in imulb addr16 xchg cmp lret or jne add lret adc mov push pop mov xchg out fild dec xor mov xchg sbb pop push gs mov popf and cmp ret cmpb jmp push add jo xchg fs add loope in jge jo jno andl fimul icebp pop xor (bad) xchg in sbb xchg fimul aad add pop add sub ljmp testb xchg icebp add inc add hlt dec xchg (bad) add rol (bad) aas (bad) add bound testb push adcb into jbe inc dec sub out inc pusha ss mov pop sub jno mov mov add int3 xor cmp ljmp ds lret add and data16 mov lods pop nop jns sbbl fisttpll cmc pop xchg mov test cld mov out push xchg push loopne jne adcb jge cld push in cmp orb push adc std jb add mov imul leave hlt in ja mov pop jno add fs xchg sub andl insb in imul adc arpl push mov adc push dec pop lret mov add rorl pop inc std inc hlt cmp mov add aaa jbe lock sbb mov test je addb sbb lds xchg roll pop sub cmp in pop sarb and arpl or pop addr16 imull clc (bad) icebp jge (bad) imul jo pusha xchg add mov mov xchg adc push sub decl test inc frstor jo dec adc push minps (bad) cmc inc mov je add lret lock cmp dec mov adc push jl sahf add mov pop xchg adcb or mov add lahf push in or cltd add xchg (bad) mov add mov shl push fimull cwtl push pop orl mov mov dec add sbb lea pushl push push iret mull push shl movl ja xor test inc rcrb cmpsl pop cmp fsubp pop sub subl xchg jo jle cli pushf mov xchg loope test cmp jmp sbb inc das dec out add fwait and pop fbstp sub pop inc add cmpsb inc inc sub cmpsl xchg stos jne int popf sbbb pop jg add hlt lea mov repnz cmp add pop out scas fistp jmp in mov push ret or add sbb hlt outsl addl pusha sbb sbb pop jo cmp mov adc or xchg je stos insb pop mov out cmp xchg cmp cmc mov mov jmp sbbl inc icebp xor add lea adc mov mov pusha push xlat add and push inc in mov push xchg in sahf fistpll mov jecxz add fs and push sub adc (bad) out orb inc dec pop or push mov les ja add jle js idivl xchg sbb cld stc verw ss out dec add mov fidivrl inc (bad) mov mov push add push (bad) add xlat hlt mov jmp orl rcrb out inc adc mov out adc je add cmp jl and daa cmp inc test add dec mov add cmpl sub mov sub or mov pop pop inc dec xor inc in or xchg pop add sub add lret push orl cmpsl pop pop out add repnz pop out test add sarl add popf decl sub sub int (bad) iret jno inc push add adc data16 cmp dec jecxz jle pop mov cmpsl and mov fidivl sbb add lea mov imul dec jmp dec incl mov in push add and add inc sub mov xor add lds add scas adc rorb outsb enter xlat fs and pop mov push ret (bad) mov adc andl stos orl jnp mov stc cmp add xor pop cltd std xor enter xchg xorl dec inc popa mov imul pop and xor pop dec aas inc fisubl adc mov mov pop add fimul repnz movsl add sbb lods sub add lds sub inc subl and je xor push mov push jb push dec adc repz mov jne lahf push int3 mov jbe add jns and jp add fucomip outsl add jne and enter (bad) mov sbb arpl sbb mov hlt mov xor insb push jle jbe add or adc add xor xorl jg push pop cmp loop pop adc fs add sub jo stos popf mov sarl mov jno jmp and mov jo and cmc lahf add xor add addr16 add cmpsl xlat outsb sbb (bad) testb leave fildl add shlb jecxz (bad) add xchg loope,pn xor add test add xchg xor adc add jne bound repz push gs mov pop mov mov xor pushf push mov int3 cmp pop add arpl cmp mov out jbe mov jno push fisttpl pusha adc add cwtl ljmp addr16 bound lahf jne out int3 out cmp sbb pop jmp fldenv lea pop ja inc or add rclb inc xor cwtl dec popf xor ds push inc or arpl int3 sbbl inc or arpl dec nop add (bad) lock add mov rclb mov jp jne add fisub pop divb ficoml sub rorb in adc lods add pop pop adc hlt mov bound (bad) xchg aas and mov (bad) jle sbbl lds sub cs xchg and aam inc mov add xchg add jmp idivb inc dec fstpl add bound push imul lods outsl add lcall add xor js inc push jne pop das icebp add arpl (bad) sbb sub push sub bound adc xor call xchg inc mov jno sub imul add out cltd sbb sete loope insb cmp xchg inc pop sahf adc pusha xchg addr16 sarl addb inc xchg cmp jo cmpsb pusha jl mov and fs adc jns cmpsb add loope hlt add sbb mov fstps daa cld jo lahf inc add pop cmp inc xor add push ds ret add cli out add add mov cmpb mov jae fildl mov sar or mov test aas orl (bad) rcrb sub iret push ljmp les add mov shrl mov mov xchg pop sahf mov add sbb unpckhps and pop dec outsl pusha (bad) jae aas into ret por add jnp sti clc xchg cs push cmpsb mov dec mov sbb mov lret call jnp dec test mov cmp test lock cmp out mov adcl mov xor lods push stc mov lahf add xlat out (bad) nop jb outsl pop lcall inc xor add inc lods lcall cmpsb sbb outsb mov int3 fldl jg mov or movsl repz push inc js cld inc fcomps mov add xchg stos (bad) in add ljmp mov add xchg xchg dec nop jne mov mov (bad) arpl stc jbe js mov or or add sbb jnp dec (bad) int3 or add lea mov push adc aaa mov bound mov jp xorl and in push sbb cmp pop dec into ss add outsl ficoml xorb popf pop add xchg xchg int jo pop test out movsl inc mov std int mov mov pop arpl jne mov push in add test sbbb adc insl jle jge sahf lock pop pop push cmpsl add out std insb das aas pop loopne cmpl push jle push sbbl sub jbe sbb mov jle pusha call inc mov pop rorb xor mov push push aam pop pushf sub mov arpl inc add add mov outsl mov add add push iret jno fpatan inc sbb xor pop xchg or rcll cmp sbb pop jl into int3 (bad) repnz adc aaa xchg insl add (bad) pop js iret ds in out xor push (bad) push (bad) jns mov xor and pop jo xor add nop add dec ljmp outsb (bad) mov call jecxz iret hlt loopne jnp cmp or xorb jl xlat (bad) ret dec add adc icebp sub imul xor mov mov jecxz mov adc push xor push mov nop incl push jo fwait std add cli cld lret adcl je (bad) shll dec bound xorl aaa int3 pop inc aad scas push and rcrb xor into add push out pop mov out add and jp and cmpl (bad) mov icebp pusha cld repz push sbb jmp adc xor xorl push xchg add loopne stos (bad) js lock out les and std add and sub add lahf adc stos push add add xchg fisubrl sbb xor popl xor fnsave adc add add xorl je lea add xchg fisttp data16 mov add movb outsb fcompl xchg stos repz scas mov ret mov dec addl aam push sahf dec in or and fidivrl push ret lret mov push xchg pusha mov cmp cwtl pusha inc in pop iret add and xchg es aas add cli xchg ds mov daa pop insb das cmp pop movsb nop sarb movsl cmpsl adc and jge arpl add cli inc xchg hlt add inc lcall notb aaa das push add pusha pop adc test add mov pop xchg ret add or sbb jb test and add arpl mov mov xchg rcll add and cs loope add push xchg cmpl fs push add nop mov in dec xchg add cmp cs mov loopne fiadd out scas cmp out mov mov xor inc rcr (bad) cmc ljmp popf dec jle test add cld test inc stos xchg add addr16 push cmp rep sub cmpsb pop push jns popa and cmp jmp pop fldcw test aad cmp shrl icebp test sbb (bad) clc sub lock xchg add repnz add xor addb sub clc sbb mov sahf js and add mov insl std cmp sub pop adc push pop adc adc sbb fistpll push cwtl rcrl int3 jge repnz mov and add push add ds pop cmp or popa cli loop add inc adc mov test pop mov push jbe fcmove rorl or push sub or xchg push fldt lock sti sub and xchg sbb fstps sbbl std (bad) mov fs jb add or in jo xor jbe push ljmp (bad) xlat jge gs add shrb ds repz in outsb cmp jo pop mov jp test cmp inc cmp jb sub add jno inc push xchg add sbb std add insl test jp sbb dec jle and shl add jae push and jbe loopne insl gs cmp addl jb xchg and into add (bad) pushf andl in inc in push out in das add pop addb icebp lcall stos push inc push andl jg push (bad) jmp push mul add (bad) mov mov xor jecxz (bad) fnstsw push jnp and cmp pop xor xor hlt test rorb iret mov roll shll aad popa ret jne test add push add xchg out in fcmovnbe ss add push (bad) cmp xor cmp xor ja add dec rcll cmpsb fistpll jae jo sub aad add insb xor add lret jmp sub sbbl fistp je (bad) subl inc leave stc inc pop or dec add push xor adc js add cmp ss popa add (bad) rcrb cli test add push shrl mov lods add xor push mov adc loope test push cmp mov jnp add fidivrl xchg mov sbb mov subl rolb jbe dec push cmpsl addl push mov and add jbe inc add xchg hlt negl jle jae inc test inc ds push mov mov dec arpl xor fsts cld cli mov inc stc cltd loope out lea xor mov jo mov je xor adc lret loopne std mov iret inc in in icebp nop (bad) je xor adc xor subb jp rcll andl stos xchg xor scas icebp leave add sbb movsb add sub inc jl sub add sbb lock ljmp roll mov pop pusha sub add insb daa jg mov pop mov add (bad) push sahf fcmovnb and xor rep or rcl push cmpsb lds cmp mov sarl dec ret mov sbb repz or mov inc (bad) stc jae fnstenv ret popa add int jp push dec add fdivs fisttp popf in xchg jle mov push jmp sub lea sbb daa pop mov rcr inc xor jmp inc subl jae js nop or shrl mov je add adc mull mov add (bad) pop mov pop cs add mov sub in xor fadds (bad) xchg jb mov scas add jecxz lods cmpb std aam jmp ljmp lahf pop jo sahf arpl cmp sahf mov dec pop add push scas mov xor xchg addr16 add pop add pop dec and arpl movsl insb mov inc mov icebp test xor gs movb sbb jno add xchg aam xchg je lahf add lods dec test aas sbb lret push stos xchg or cmp push adc inc add lret add in cld inc mov sub mov jbe ljmp das sub add inc out dec addr16 dec xor jl or int stos sub push das fmulp xchg xor adc xlat push loope add les adc bound add imull shrb out cwtl pop adc out int3 add dec inc jmp lods add repz xor mov push ret mov jno push xor inc add bound lcall push lds inc inc or mov jmp lahf aam jns mov xchg xorb or xchg mov add leave mov push idivb or cmpsb add push mov dec dec lret add add inc notb pusha out loop cmp add (bad) pop popl insb repnz popa adc push add mov subb add cltd (bad) xlat lock imul xlat or push add movsl or push push fidivl je add in (bad) out sub cwtl cmp lea std sbb push imul lret add pusha add je mov add jp (bad) (bad) mov sub (bad) cmc jl insb pop mov rorl mov (bad) jns imul int mov mov pop sbb add inc mov add lock addb loopne sbb add sub push (bad) cwtl add pop add movsl fnsave in pop inc jo push xchg cmp xchg outsb test mov repnz dec ret mov jo addr16 sbbl mov add in iret jge rcrl rolb cmp add rcl leave aad lahf insb pop stos cltd imul popa jns sbb add xchg call jae and cmpsl int icebp mov aam mov push push loop imul out arpl jl pop cmp lock dec jnp sbb cmp cmpsb push jle mov sub jae test dec push inc add jecxz cmpsl jnp enter add and add sub adc fldt add (bad) in mov out sbb test add subb dec xchg js arpl xor insb popf repnz das (bad) out mov xchg xchg and add je mov xchg pop xor (bad) hlt mov jge (bad) stos xor jl add sub bound lods sub cmp lahf (bad) int mov jmp cmovo aas gs test inc inc iret fmul cmp ds dec add add fiadd mov into sub add loopne ljmp jle inc stos dec (bad) fldl adc push xlat add outsb mov pop inc bound ret sbb jo gs mov out jmp jle pop pop jb xlat clc add fs sub adc add enter add xor add daa inc xchg push clc pop idivb dec mov call adc pushf xchg dec std icebp and jecxz test int js pop push mov jg or fldl (bad) icebp scas lock xor insl cmp dec cltd mov add outsl adc push sbb add mov inc testb push iret cmp jns int3 clc mov add imul mov pop fmull xor (bad) clc xchg push lock jno xchg adc pop xchg jge sub icebp fcomip or pop sbbl xlat mov add div cmovg stc imul test mov pop mov add jae pop jno jns cmp adc idivl arpl pusha test dec aad or sti push jmp outsl xlat loop into pop jae add mov je shlb xchg xor mov sbb pop lcall add in faddl shl and jbe or xchg dec xchg xor add cmpsb push push jae add idivl fdivl pop loope insl cmpsl clc movsl js mov add rorl or add sti test inc xchg push push inc shll pushf std pusha mov mov (bad) jmp mov pop movsl inc sbb das add jle and mov inc cmp and scas sub mov lock es test movsl add fnstcw cmpsb test adc mov add push (bad) outsb and xor pop (bad) add mov andb xor int jns or or std inc lock dec cmp dec mov faddl inc mov test add shrb add arpl rdpmc call lret das cmpsb dec add jns aaa and jno adc jl mov push (bad) iret adc sbb adc mov pop and shrb movsw xchg rorb add xchg mov add (bad) (bad) add mov add inc cmp (bad) xchg test pop imul cmp add xchg push popf jae sbb repz lods push cltd jb xchg sub push mov xor add xor jl sbb ret cli in inc bound mov fnstcw add dec cmpl xor sub add inc in mov add pop shl cmp cs add add inc pop cltd add (bad) pop dec mov stc loope push add addr16 cmp xor add sub adc test pusha cmpsb (bad) xchg jno in inc sub jmp pop js,pn lock ret xchg adc leave sub aaa push sbb inc mov adc mov jl add loope push cmpsb sub add (bad) xor mov sar add pushf add inc scas data16 jnp dec test sub icebp jp xchg bound imul add cmpsb push cmp mov add int dec add xorl (bad) aad add ror popf icebp sub mov aas jae mov rcrb movsb orl ljmp or sbb sub daa xchg sar mov (bad) adc push add gs sti fldcw add rcrb lret sub imul mov mov popf lahf sarl in addb sbb in mov inc sbb es pop push adc pop jb or cmp mov mov (bad) mov fbstp test add stos push xor fwait cmp mov (bad) add dec test addl xchg mov or dec add mov in add outsb xchg (bad) add and push jecxz adc sbb scas repnz out cmp add jmp sti shlb push adc adc pop jmp or mov lods push xorl adc fild out and psraw ret sarb xchg jg test outsb mov add push flds lock fadds (bad) xchg sbb mov xchg sub add int3 fwait or (bad) xor add cmc xor inc cld out xchg lods xor test mov jnp cmc pop add (bad) push flds aaa xor mov divb (bad) movb xchg cltd push adc add aad into aaa or inc inc sbb jns jl addb mov adc mov mov push icebp outsb xor adc pushf add call inc add inc xor sbbl aam cmp scas sub adc and push add mov enter (bad) addr16 add pop and js pop inc (bad) cli rcr jmp pop add rcr sub sar pop inc dec add mov add les mov movsb lahf sub sbb rorb jb mov mov inc jns popl cmp add ss add addl enter mov js jle lea scas (bad) fisubr cld popf in inc es stc dec push add mov cmp cli adc jmp addl cmp in js sub jp int3 add push fadds mov (bad) jno add or jge push cwtl popl jae sub aad mov pop lcall js pop (bad) sbb mov rclb jns rcrb add xor dec xor push mov and xchg jae jl add addr16 pusha cs data16 jae push clc xchg sbb insb popa xchg cmpb xchg jno and xchg mov fmul add ss inc inc dec out or (bad) mov int3 cmpsb adc in push and xchg pop mov sbb jl jne ret adc andl lret mov pop or and mov xchg add jnp jns,pt mov add jo out push adc xchg push pusha xchg aam mov xor enter adc cs push shrb lods pusha mov adc mov into pop cmp ds sarl xor int3 and in dec movlps andl hlt je push imul push cltd pop adc int xor and push popa mov lods xchg mov push pop enter push dec incl insb mov mov sbb jg sarb imul je add push popf loopne xchg jecxz add movsl repnz push cmp add mov mov outsb inc push mov mov jp jno cmp sbb inc dec jmp subl (bad) repnz xor das inc add sbb cmp lods pop xor push pusha test add insl inc xchg jo fldcw and push inc call aad sub inc scas (bad) outsl insl out add cmp add mov mov add cwtl and imul add icebp inc push add fidivrl add fildl inc xor leave and and js ja mov xchg jp xor push pop mov inc add dec mov add insb or mov and mov mov iret sbb add pcmpeqb cmpsl and mov (bad) xor je jbe add inc xchg js add fnstsw inc (bad) dec dec and rcrb pusha js sbb dec sub sub jo fsubrl xorl xchg push pusha in mov arpl xor inc in and inc rcrb mov mov addr16 add sbb mov add (bad) icebp repz repnz add mov neg pop test sub adc rorl adcb cmp inc test cmp adc jnp rorl (bad) (bad) adc adc xchg cwtl jo or inc lret inc xor popf subl mov add repnz ror mov leave xor adc jg push mov xchg iret add xor (bad) sbb sti (bad) push mov insb sub ret daa adc aam loopne xchg xor ret int3 orl cmp stos add inc in mov cmp pop out jle std pop lahf xchg sub (bad) mov push push pop popa mov dec sub add scas cltd rclb pop jb fwait mov xor and add aas and or inc jo mov and movsl test jno add test cmp lods ficom jmp add mov inc into out out ljmp daa sub pop pop hlt test jno imul jp in push add movsl adc xbegin xor in rolb add ljmp std adc push mov adcl (bad) lahf or jne mov push xchg and inc (bad) mov xchg mov pop jmp add jl mov mov sbb into xor add movl mov push jne,pt push add and ret hlt loopne repnz jns,pt adc mov out lret sub jl aas sub xchg pop pusha inc mov pusha pop xor xorl lods dec andl cmpsl test scas or xchg test mov adc sbb mov out mov jbe dec dec xchg pop mov out les xchg jnp mov pop es mov cmpl mov insb ja scas sub ficom cmp add jmp divl inc mov movb mov dec pushl shll mov out xor push rolb mov inc xor or ret dec aad cld pusha jbe (bad) push add mov daa cmpsb xchg fcomps pop pop jg mov pusha pop lea jne mov add ret push loopne out add sub mov add imul xchg sub add jo dec icebp and fadds faddl testl xor packuswb push loope push mov add fild je or sub mov cmp in inc (bad) ret scas cld into add lods aas mov mov stc leave push add rcrl xchg sub jo jle mov aam lret ja push loopne (bad) movsb mov xchg loope in arpl in xor mov dec jge dec mov mov lds test mov add mov ljmp add lcall in mov add repz iret jmp jl aas push sub xchg sub cs adc pop cmp dec sub lock or ljmp jno dec clc pusha mov jo aas mov movsb add icebp cmp xchg inc add loope in sub jle mov pop add out lcall mov sti out jecxz outsb dec sbb mov loop lods mov in fstpt mov mov dec mov xchg add out inc add sub (bad) push jl add xlat adc ret jne push push insb push inc (bad) fnstenv jge add or orw mov iret and push mov xor inc or dec out lret jo repz pop adc cmp cli loopne push or sub pop (bad) loopne add and inc les ja fild std jae addl mov add es sbbl jl gs or loope sbb nop and cli pusha in or daa lea dec mov push nop (bad) ss leave call orb xlat lret fiadd xchg js cmp sub jl jg imul popf leave gs (bad) xor xchg inc sbb movsb push dec jmp aaa insl out pusha cmpsb adc out cmp add jnp cmpsl cltd andl js jmp push jp xchg dec or ds shlb mov rcl mov mov pop fdivrp scas add inc mov inc jecxz add mov aam cli pop xchg in add stos pop mov lods out jecxz addr16 jl je int3 add mov mov pusha arpl dec push cmp in lds push jbe lahf mov dec pop scas mov or mov shrb fcmovu (bad) and (bad) mov js pop ret aas jne outsb int mov and pop in test pusha xor test idivl and add sbb mov fs sarl xlat add repz (bad) xor jne pop mov hlt or push inc rolb pop inc ds aas in sbb jb and decl (bad) je out mov sub or in dec add out lret (bad) cmc pop movsb adc popf jge inc and jle jmp adc in mov add das (bad) fmuls scas add mov mov jl add or (bad) mov fstpl testl lahf add nop (bad) cmp cltd aaa sub pop pushf fnstenv sbb insb xchg add cmp xchg jne add cmpsb dec roll cmpsl (bad) mov mov jbe test insb in cmp fisubl scas xorb popf add push xchg sub or dec es pushf (bad) push (bad) inc popa adc adc dec push sbb add mov pop imul adcl mov out push pop jae mov adc xor mov arpl (bad) aas jo xchg mov pop das loope shrd inc (bad) add (bad) loopne add rorl rcl or dec inc lds adc (bad) and jns push outsb adc mov add mov inc aad and add (bad) jae add mov pop mov or das sbb jecxz sub (bad) out mov frstor jmp iret mov xchg sub in add jp sub mov mov call dec mov test lea inc and cmp mov fs sbb fcompl xchg cmp inc xorb xchg loopne insb inc jo shrl adc repz xor add or cmpl sub jle (bad) popf (bad) xchg mov mov (bad) push mov sub sub stos das xchg push (bad) pushf call jp pop rorl dec inc cmpsl inc loopne repz sub mov iret cmc loope xchg cmpsl push or movsl icebp cmp insl (bad) add lods in sub xor adc mov push scas fstpl leave inc fwait pmaxsw (bad) cwtl addb test ret jb lods push mov push scas xchg in es gs or lock hlt mov test fbstp ljmp sbbb lds push add aam push sub mov arpl add mov divb add (bad) rcl insl imul jecxz out cmpsl dec mov fistpl leave sbb push pusha pop add cltd lret cmp add jbe sbb fisttpll xchg inc daa (bad) xor sbb popa add movsl cmp sub mov sub or xor test clc fs add and popf lahf xchg fwait push sbb loope mov adc mov or repnz and data16 xchg popf cmpsl fwait lods arpl add in push sti sub push es xchg or jge,pt add pop ret adcl mov scas jp mov add or outsb cmp jae pop mov add sub pusha jmp push add lods dec jno jo mov (bad) add popa icebp dec (bad) int3 (bad) aam mov movsb push xorb sahf xchg adc shlb xchg mov loopne (bad) enter (bad) xorb cwtl mov sahf sbb pusha inc (bad) jns das pop and add xlat xchg scas out dec subb push sub push fiadd mov dec cmp add mov sarl pop lahf stos add dec fildl movb call lods leave jle (bad) mov pop fs dec test scas sbb inc or jae add les mov push nop or aam dec cmp dec movsb mov test or ja xchg add dec fisubrl mov pop add mov repz pminub add jae pusha mov inc loope cs add mov jmp or pop rolb xchg cmpsl xor sub (bad) push nop sbb scas mov int3 add inc xchg and add cld lea xchg out mov clc pushf sahf add inc ljmp pop sbb psubd test lock add xchg jo sbbl adc rcll mov inc dec je adc scas add idivl add flds fistpll mov add in (bad) xrelease mov or fisttpl jae and sub add xor (bad) in sbb xchg imull adc inc sbb push push inc mov fs lods cmp neg or mov sti mov jecxz xor and pop repnz pop mov out cmp add add sub jmp dec roll fs add mov stos and sahf sub rcrl je mov outsb fisttp je roll fld1 xor mov add push lret xchg incb xchg addr16 insb xchg testb aaa ret inc mov not add inc cmp sub cli xor in shrb add lock jae hlt add sar repnz fcmovu rolb xorl and pop jns sahf outsb test lahf push dec add push or jg dec and in fs test (bad) testb outsl mov (bad) push add (bad) sbb pop add adc addb popa jmp in push (bad) sub (bad) insl pop add sbb sti dec cmp pop leave test mov add xchg gs repz push inc sbb movsl into jne cmp in add push jmp rcrl and add in adc mov inc ljmp outsb js aad fsts loopne xor in sahf xor pop pop cli ficom add arpl data16 sub test add inc dec hlt xor out incl (bad) jp (bad) sbb pop mov xchg lock dec jbe push add xchg cwtl pusha xchg lret add enter bound jl (bad) fisttpll mov pusha add jmp add aas xchg jne movsl mov (bad) push cwtl add cmp addl ss (bad) popa clc add lea outsb sbb pop insb insb xchg mov add pop (bad) stos aad call sbb inc lods mov std rcrb mov add sbb add mov xchg inc cld push inc add mov adcl xchg pop mov iret (bad) outsl popf push pop pop mov adc lds out push add stc sub ret test push test and add mov lret add pop add jns add popa sbb cmp stos push xor test jo jge or add shl nop jbe lahf add sub jo xchg repz push cs shld inc and mov add cld scas add or pop and xchg pop add movsb dec push sbb or fldenv xor test add jno out es add out mov nop int jo mov inc cmp pusha lret adc test and xlat testb cmp adc mov sbb lret add or inc mov fidivr sahf add js and arpl pop or (bad) add xchg push sub mov lock add mov adc jae jne cmp cmc cltd movsb jnp (bad) jmp out push dec sbb mov test or shrb pcmpeqb push or fs hlt loope daa inc jl xlat js mov andl out add push jmp rcrl mov jno std adc sahf dec add or mov add push out mov push test outsl sbb hlt jbe aad jl cmpl aam daa mov push cmp (bad) es sub mov jle jecxz roll add popf cmp push imul out in jb adc mov arpl cli xor add push jo scas push add addl addr16 inc mov jecxz sbb mov jp fstpt add ud1 (bad) je add insb or xor jnp sarb ja aas pop sbb gs (bad) out pushf mov add fsubr add sbb add sub mov rcll push adc xorb adc sub jo add mov push inc (bad) jno faddl repnz and push out or mov xchg push mov dec sbb (bad) aaa andb in mov add mov xchg add or xor inc rorl daa xlat fdivr add insl leave (bad) push sub jns and sub or pop fiadd xor jb addr16 add rcrb jbe add test clc add add push (bad) push jbe adcb mov add sub (bad) (bad) fldt daa mov mov inc rolb les and sbb test add mov push add pop (bad) cmp xchg or add jg mov adc jbe dec pop lea cmp cmpl or loope aad divb and sub jo xlat sub jae ds jecxz push jb leave pop adc and pop xchg and je add fs push (bad) dec add push jae adc add sub push add mov je add mov (bad) and dec xor add in jp cmp sub pop out scas xor loope xchg or (bad) hlt or inc cmp mov xchg jnp call and lock adc lcall jno subl loop pop bound clc mov push int3 cmp mov add xchg pop jecxz dec jo add inc pop lea push ljmp fiadd inc (bad) xor addl pusha mov jno aam js popa add sub adc arpl push inc lcall std pop out and lret mov push cmp add jnp mov sub pavgb or (bad) dec lret dec jbe adc flds sub pop adc clc dec add pop adcl mov and jp outsb add sub outsl or mov cmp push test and je test sub or jbe adc mov subb sbb (bad) cwtl add push shll inc fwait jp inc pop sbb lds movsl clc ja into mov lock cmp nop inc outsb jnp add sub pop and cmpsl add aad mov add add dec xlat jmp jb add (bad) pop dec pop fild sahf add pop insl mov test xchg hlt (bad) imul fidivr das add test sbb sti nop jbe bswap in mov or hlt cmp add outsl push loope mov test rcr mov les pop push dec mov push and fs xor sub imul (bad) icebp lds pop cmpsb addb test pop rorl push pop sbb je fiaddl mov xchg ljmp in addr16 add rcll pop jg add pop xchg jle mov add ljmp sahf cmp add aam adc xchg sbb popf add out add push mov pop lcall scas xchg int3 dec fwait cmp sub and xlat movsb loop add jl bnd jp mov push jg test popa add inc push sub add jb je scas or add pop mov pop fbstp ss loopne rcrb add jle push pop inc fcmovne inc pop (bad) dec test in fldcw add jnp and xchg shll fiaddl test push movsl sbb (bad) js out cli clc arpl sub add (bad) jle add xor and pop out xorl (bad) and add aas mov cli fldt mov push out sub jnp or lret pop add inc dec sub mov lods fisttp pop loop (bad) sbb rcl out add pop mov adc add getsec mov jo sub loope add iret stos sub daa push aas pop popf add mov mov out mov frstor fmulp jb sahf inc dec add aam mov (bad) jne mov adc adc cmp add push adcl aam adc movsl in mov lea inc and adc les adcb scas cmp addr16 in andl sub cmp add aad imul jns mov sub add fdivr ret inc push add xchg insl jle fldcw incb add mov sub dec lods loopne sbb mov sbb push (bad) gs cs xlat addl fisttpl cmp add (bad) sub add mov adc push popl (bad) (bad) bnd sahf mov mov mov subb dec jb ds aaa jmp (bad) jns orl inc into jns add addr16 imul push jle cmpsl mov sub mov sub sti xor and jp aam and (bad) adc lcall scas rep ss and pop pop fs pusha jg rcll dec inc test push loopne out mov or sbb lock push dec addl gs pop mov cmp mov pop (bad) xor add push movb aas icebp lods scas ljmp sub pushf xchg stos repz shll addr16 mov mov mov flds push mov cmc add sbb sub sbb stc add in out add (bad) ja rclb sub icebp add lret addr16 mov das int3 jb fwait add mov sbb sbb in inc xchg fist mov add sub adc jmp inc xlat lea call (bad) cld sarl in ljmp (bad) out sub mov pusha js (bad) stos push push aas mov imul out fistpl orl xchg push leave cmp add cmpsl sahf sbb mov vmread test pusha sti xor pop lahf lods lds (bad) mov push lahf and xchg ds mov sbb dec testl mov add pop jmp mov adc push pushf dec inc mov or push ljmp (bad) cmp mov mov (bad) mov push cld inc bswap into fs ljmp push xorb bound sub aas add in mov cmp fcoml pop std loop sahf inc (bad) and inc ret add ss mov in push ret mov pusha cmc push jge jns sub xchg pushf push pop add inc enter inc add inc loope push and in jb add xor add pop add cmpsl fldt sarb inc aas scas xchg push xor xorl decb ja loopne inc cmp cmpsb rolb pop adc add loop pop xor push lcall add sbb mov je dec mov push ret inc es cmc lret jecxz or arpl (bad) ja push pop mov add mov ror mov clc xchg xchg xor fs sbb push mov mov sub push mov sahf adc push mov mov lcall arpl pusha js add enter lahf ja jae sbb cwtl or cmp cmp (bad) mov add aas or sub in mov pop cld data16 jle add sbb lods cmpsl xor add je mov movsl stc pop fiaddl fldt sub xor into aam pop loop push fs out cmp mov dec pop mov pusha add push out xchg mov stos mov mov add cwtl sub loope pop inc call aam cld shr jnp cmp add outsl xchg lahf push iret sbb (bad) testl and add fwait push xchg flds mov lods pushf rcl xor sahf (bad) mov xchg (bad) repz pushf aas jl add shll mov cmc adc arpl sti jo or icebp jns (bad) cmp add pop daa cwtl sub test add bound dec out and iret jns add xchg lret add out mov add and pusha leave mov sub out pop sub adc pusha imul mov push popa outsb add push test int3 add add adc sbb cmp jne int push xchg cwtl xchg pop sbb addl push push lea xchg out fsubl jne dec mov jbe inc stos cmp add inc jae sbb or std add cmpl sub sbb jb xor add cmp add icebp lahf xchg bnd loopne pop jns rcrb into inc mov xor adc mov inc clc jecxz iret repnz adc mov add mov add jne,pt jne add divb pop (bad) dec xor jecxz xor aas add js pop or cmp in repnz (bad) sbb or hlt xchg out lods xor test xor and mull je jecxz ds fdivs pop cmp sbb add xchg sub add adc jmp roll push popa pmaddwd popf adc (bad) mov xrelease or jns in mov and jbe (bad) pop xor pop lods cmp jg push arpl inc inc cmp cltd xor fnop cli add mov mov mov and pop fist or inc aad mov das out fstpl cmpsl push add cmp jb add mov add repz jecxz cmpsb scas faddl (bad) movsl mov or dec das add inc push pusha cmp incl mov aam mov pushf es mov add mov sbb mov in ret lahf add add adcl cmp in pop pop add pop or mov es roll push mov nop mov in sub dec cwtl add or cmc add jmp pop (bad) add stc xchg pushf das mov lahf addr16 mov insb mov add popf mov sahf inc sub add nop xchg add jae dec pop cmp add fnstenv xchg add jmp push int jns lea push fbstp lock lods add mov and jno mov incb inc add adc mov jecxz push sbb test push mov pusha das mov add imul fdivs xor pusha sahf add das mov or and jne cmp add insb (bad) cltd add pop cmp pop test sbb dec imul jp add jne lcall fisubrl rcrl adc mov movsb add inc mov lcall mov fisubl jo js xchg add scas sub xchg imulb bound outsb dec mov jnp add inc sbb pop (bad) in roll mov ss add mov push push inc idivb jne adc inc add stos add mov push xchg or rolb mov test hlt add nop jp mov xchg push adc fwait lcall and xor xchg mov mov sub sub (bad) icebp pusha xchg xchg (bad) pop inc mov and cmp sbb pop mov jne add shl popa loopne push add daa je cmp xchg and ljmp xor pop pop hlt std jecxz lret rorb lret (bad) movsl test addl jl loop add ljmp pusha mov (bad) int3 test xchg mov fcoms loopne mov mov xor xchg xchg sbb xchg add dec fnstenv add jne mov ret inc pop xlat test inc and in dec sahf in fiaddl push enter mov mov js cmp sub pop in inc das xchg mov sub inc mov aaa clc cmp jno add data16 push mov xchg fstpl and or cwtl inc inc xor in push ret sbb and adc scas out (bad) cmp add xchg popa bound mov push int3 add add leave test mov int pusha sbb or mov pop jbe sub cs das add push xor dec into (bad) (bad) std fiaddl adc dec fucomip xorl pusha (bad) hlt cld push icebp jnp and or sbb add call dec aaa add mov pop add insb hlt sahf fstpt lods call xor loopne test rorb adc jmp sub sub jbe int repz mov leave loope insb cmp mov push jl out sbb add test (bad) mov pop add mov add iret gs pop push mov idiv aad sahf mov (bad) push (bad) popl sub ljmp clc xchg mov inc or test push xchg lea mov (bad) cltd sbbl addb (bad) in add int test std xorl pusha dec adc jns pop adc sub cmpsl dec add out or stos mov js ltr insb sbb push test add scas mov xor mov cmpsl scas data16 dec push ss ffreep add jle scas cmp and lret or jb ds in sub jae xchg cmp push stos fwait cmpsb fisttp movsb cmp dec xchg rcll mov jge ret stc ss sbb cmp jbe icebp int3 (bad) lcall ror in mov xor iret dec out popf xchg sbb clc add dec mov test scas aam add pop jno and or push sub shl stos add push mov sbb push xchg inc stos xchg int enter shlb add cs adc int3 nop add les jnp jb pop in push imul mov mov mov sahf push or subb (bad) adc mov loope orb loopne daa jo clc add adc sub sub and add mov andl lret push push testl pop add mov sbb hlt jle fidivrl pop fwait inc add gs and iret daa sti sbb jns add imul adc nop rcl jmp add push and je add mov lock add pop dec xchg xor enter sbb adc jecxz add out dec or int3 xchg clc lds mov (bad) fwait xchg lods lret pop cli add stc add jo (bad) inc add mov lock aas pop test xor jge test add push addl lock scas fldt sahf arpl dec into adc roll inc lret ds mov (bad) adc subl xchg mov cmp add jge cmp (bad) repnz into mov jno pop loopne mov xor jmp add xchg daa push sub push mov and stos mov pop xchg jecxz add sub out mov ret xchg xchg aas push repnz push andb dec stos notb mov xchg movsl outsb scas push and cmp in roll jo add sbb and and mov mov dec mov leave pusha data16 repnz push das inc fistp nop insl (bad) cmp int stos add arpl (bad) fistpl or shlb out add add mov add out jo or mov pop sbbl popf in xchg dec add inc add ret imul ja push std inc or add imul jb or insl adc imul scas xor mov jmp add add out mov add ss cmp aad xor dec js dec cwtl add add out xchg out add fisubrl ljmp or sbb shlb popa cmp push mov and lcall rorb cmp in mov dec (bad) out cli js add stc repnz or add add or add or jmp orl rcrb adc add sub push iret or insl push shr inc add push sbb bound sbb mov sub jl pop xor jno cmp xchg mov add xchg lahf add xchg stos testb in sbb add mov insl sub mov inc in pop or repz add add push mov mov jb adc cmp or fdivrs push dec jnp mov push or xor rorb jecxz or imul stos popf lret xchg add jg ljmp jmp mov dec add and push cmpsl out push ljmp setl stc fldt or bound sbb test cmp cli fistpll pop pop push inc mov enter xchg adc pop call push aaa (bad) cmp xchg pop les enter dec push adc add xchg sbb cwtl pop mov pop movsl or (bad) mov pusha mov inc push jae inc cmp mov es int3 add and in pusha test or jnp fmulp add decb push push xchg (bad) jge pop xchg add inc pop popa inc hlt push xchg push loopne xchg sub jne jmp ljmp addr16 inc mov jmp insl add sahf mov dec clc out add in enter mov sbb sub repz push outsl jl test cmp stos pop and and out adcl mov xchg popf xchg add jbe icebp or sahf sub adc stc pusha clc and add out lret jg imul mov adc inc fidivr pop fs xlat and add scas xchg sbb pop add pop test jae sbb push add or add leave fcompl out pop sub fcmovnb ficompl sub xadd pusha test (bad) ret add push mov add mov push stc add inc mov inc mov loop cli add outsb fwait inc stc mov lcall gs into cwtl subb push out or loop add ret loopne add jmp mov mov (bad) rcl pusha movsb std and jp add xchg (bad) arpl adc ljmp add mov xchg mov and push add iret outsl or push mov cmpsl in jge xor ret xor imul addr16 and xorl add adc add jg cli add mov xlat (bad) xor sub push jno cmp (bad) movb xlat jl nop inc add xchg cmp push mov cmpl ljmp sti xchg or dec add out out hlt add call pop repnz call xor and add imul push pop fcmovnb push mov cltd pop mov pusha add push sbb mov adc jo adc shrb add mov outsb mov or add jb push xchg cmp jg or test jge xchg pop xor add push fcoml ljmp xor and adc lods or ret adc pop lret push lcall cld jae mov dec sbb push xor mov pop or test inc dec add or and aad sar add mov or sub xchg sbb xor mov std pop (bad) ss js add lds outsl lock cmpb push outsb stc jno idivb ja inc in out inc arpl xchg xchg test jnp jl push add rolb movb test ja xor mov jnp inc daa xchg add movl popf nop pusha cmpsb adcb jne int out sbb loop addb jno dec push outsb and or lds xchg inc cmp add in lret addl xchg idivb mov pop jg sbb icebp add jp add mov sbb push add out add loop sub test ret imul mov adc cwtl cmp fisubrl and stc push lret or sbbl mov inc or js xchg out mov loopne sbb insb outsb leave and mov mov sbb mov pop movsb popf jle jp xor add xchg mov cmp add lcall into pop js inc ret inc lds add xor repnz add mov lcall scas xchg jae test inc les adc push jecxz xor test add dec mov add and and mov or popa imul jb xchg lret test push int3 ret rcr adc dec pop cmp add std fbstp cmpl xlat xor mov inc sbb cmc push nop add and sub inc pop mov je fisttpll fwait add cmpsb out test scas sbb int3 lods enter push out arpl jns insl add mov sbb inc jp adcl fcom scas mov add add jle lods and xorb (bad) push push stos add push sbbb sti adcl cwtl jbe push jb push sbbl and jg add pop outsb pop add data16 into and int jno pop adcl xor push jp add or dec test enter das cmp add loopne cmc xor mov (bad) aam addr16 sbb mov add pushf xor adc mov rcll add lods or loop mov aam jl xchg enter popf jo dec addb hlt cmp mov xor xor or add les dec sbb pop fst outsl iret mov movsb (bad) leave rcrl pop fistpl add mov adc sbb cld dec push (bad) mov shrl add adc lret andl dec shrb nopl leave add mov adc aam popf push xor mov pop orl sub pop jbe aas loope fwait outsb and add xchg mov mov push xor mov add pop out adc xchg lahf mov add inc push add lcall mov and or xchg popa xorb pop cmc ds mov ret xorb lahf mov jo call decl pop jge xchg adc je and icebp scas ret cli leave decb pusha stos pusha inc stc aaa loopne sbbl mov add popl lret js lret adc pop or mov negb arpl or xchg mov int3 scas mov inc das sahf mov and aam jbe or add loop cmp loopne popf and mov push fcomps inc add jne out insl sub add mov aas sbb jbe ret xchg add jl mov std add jg ror iret add fcmovb insb inc pop div add jnp cwtl jg data16 iret (bad) jno fistp jns mov xor dec mov add ret jl rcrl lret dec add sahf push add cmp jmp pop jp cli add mov add aas sahf add lea aas addl cmc push ret add pop imul idiv add mov in test pop adc rolb add lcall movsb xor add cmp adc add and and test sbb shrl mov jnp in add jmp jbe jp and add xor rcl fldl mov adc and add fmull inc js test gs aad push mov inc stos sbb mov jno dec add push jne xchg cmp (bad) cltd sub push adc xchg clc add sub aaa xlat (bad) push mov leave stc fmuls xchg add cwtl icebp jns out xor cmpl (bad) loopne or lea mov mov outsb cmp and jge add (bad) jne das push cmp push orl lock inc add in mov sbb dec call icebp adcb push (bad) shll push add pop add inc add test test xor outsb mov jae add cld and ljmp add add movsb push fild test sbb inc andl or rorl mov add xchg dec adc push sahf add adc dec mov mov (bad) pop outsl in addl xchg inc mov jbe adc push iret sbb add (bad) cmpsl daa xchg push adc repz dec insb add xor cmp nop and movsb das xchg cld imul add repz mov test and cltd inc mov or cmp push ss inc xorl pop hlt pusha mov call rcl or mov pop sbb outsb sbb xchg jl pop in add push mov or add (bad) mov (bad) cmpl enter mov jns push add jle xor xchg cmp add lcall xchg lds ja add push mov in add scas sarb data16 aam cwtl jb add dec fidiv out jns movsb insb and xor push lods add mov je add and mov pop inc add outsl xor cmp pop add sub imull mov outsl je aad pushf add and jle test dec daa xchg sbb add enter cmp (bad) iret mov or lock push or subl cs mov and and int (bad) icebp idivl push aas push pop inc mov (bad) fsub cmpsb inc jne int3 cli mov sbb lds cmp fs add sbb sub imul adc pushf fstpl mov popf enter pop inc add lret fadd mov fild xchg push xchg mov adc js or inc mov pop jo sub adc scas dec mov icebp xor sti dec and fdivs lock mov mov fstp stos mov adcl popa mov inc mov ret imul cmp and mov or es jp rcll mov sbb dec pop hlt add add push and jns mov test or jl mov pop (bad) add push scas jns insl dec sbb add jmp mov test or xchg add add orl daa jmp mov jae test dec mov add je pushf fwait xchg adcl xchg add addr16 mov mov xchg add adc imul pop xor mov add push stos mov xor push icebp sbb ja add or add push xchg push loopne add push adc adc out mov mov push and mov sub jge popa adc xchg stc add jp push fldcw push in add call mov add jg pop ficomp sbb popf aam inc movsb lds add cld int3 into mov mov std lods pusha mov mov sub xor insb jmp add or xor lcall mov and add xor jae lods sti fiadd ffreep mov push addl sarl inc jle mov lret and int sub xchg pusha ffreep into ljmp fisubl jno loop jb add rorb sbb xor orl clc add mov adc iret arpl (bad) xor insb mov hlt cwtl cmp scas mov jo roll xor cmpl addb enter scas pop repnz mov stos and repnz pop xchg sub dec cld adc arpl or push std cmpsl lock (bad) inc xorl enter sarb icebp out ret rolb sub jmp pop xor inc clc inc lods push popl bound mov xlat add aaa lret jp inc add cmp andl leave or dec pop (bad) jae xor jg push add (bad) pop fcomps pop cmpsl cli addr16 push sarl (bad) xchg xchg xchg lock icebp bound sub aad jno cmovle data16 hlt sub cs mov stos sub push bound sbb divl add inc xchg mov mov rclb add jno push pushf sub pop add lret repz imul and in lea mov popa add adcb loope mov in addr16 mov push push aas test xchg add push cmpsb sbb mov mov hlt add mov fstps add fildl dec fisubrl fidiv inc popf dec pop inc adc outsl sbb mov pushf andl xlat ss (bad) hlt or adc inc (bad) push mov lock nop outsl adcl mov aad pop fldl negb fidiv sbbb push (bad) std fadd cmp clc and jb out add sahf xchg test adc ss add push clc sbb test pop dec fiaddl test push mov add inc sahf fnop orl adcl fidivl push pop jb insl lret sbb mov and adc pop ret jmp pop pop js pop int xor es testl cs mov mov les dec or std movsb dec das xchg add jg xlat inc or add dec mov in mov movsbl mov xlat jle cmpsl out add sbb dec aam (bad) dec add xor jmp pop popf imul inc xor imul addr16 jns sarb push cmpl add les hlt add add rolb and adc mov inc cmpb shrl (bad) add pop sbb cmpsl test inc dec push adcl fldt pop sub jns pop jle adc pop mov mov inc push sbbl add push push leave mov adc ret (bad) jle add cmp add ja mov xchg loope xchg jb nop xorb movl inc mov lds insl pop push (bad) fbld repz (bad) xchg pop mov pop sbb jae rolb mov (bad) cmc pushf dec orl jae or sbb scas push push xor nop std mov jg inc add adcl adc cmp pop dec xchg add ret mov jns adc sbb daa enter add stos aad mov lret mov pushf add in inc add imul mov popf mov cmc push xchg mov cmp inc mov add add lods adc cmpl push add (bad) or nop xchg mov data16 lcall add jmp dec add pop sbb add xchg mov jmp in xchg imull str lret mov mov and xchg inc jno outsb mov push test jle je addl jae mov pop push push out add xor add cmp xchg mov jle jno cmpl cwtl jmp fmuls sbb fldl or dec dec xchg push or shl adc add mov lds push stos (bad) push pusha or sub hlt pop movsl outsb sbb out imul inc pop jl sub push test and dec les outsb add jp loope out add or loop test and fnsave (bad) pusha inc idivl popa and decb sub lahf lcall xor rorb and outsl add into push imul mov adc stos stc fldl addr16 push adc aaa add loope jecxz fs or std or cs cmp test inc out pushf sbb imul jl mov cmpsb push aas xchg incl lods punpckhbw out inc dec ds mov fadds mov jl push aaa stos add roll mov ret mov fsts add sahf or (bad) lret rorl add out in push sbb push and shrw add xchg mov push inc lods pop jge add arpl mov enter push dec add mov push cmpsb add sub out add mov std jmp or je xchg dec push and das ret mov inc ds (bad) mov mov push mov and sbb add lock jno xlat inc enter hlt mov cli adcb jb dec aam int3 in add inc xchg mov sub or mov push pushf adcb xchg fs adc insb adc xchg jl inc add xchg mov xor xchg dec es xchg (bad) and push loope xchg sub and adc add lds add sbb push int3 add sbb (bad) mov movsl sub clc pop mov cmpsl out stos mov adc push jl jae or lcall mov fxch pop ret add pop add mov loope mov popa push jnp es gs loopne lock cmp dec out mov dec mov add aaa xchg subb mov inc pop add pop clc dec cmc adc scas dec inc jle xchg jge and add movsb xor lret inc dec mov adc adc loope pop sub mov mov (bad) push test jg mov push cli cltd sub jbe test outsb pop or xchg cmp xor add test add mov es add jns ljmp dec and mov add mov or jno test and push clc mov mov addb sahf pop inc sub sti push setl xor nop scas mov jp test insl int add or or add push sbb imul clc mov rolb lds jae je xor add jns in pop jno shll inc mov jmp sub push sahf cmp (bad) mov sbb jns pushf js cmp add adc or adc pop add and pop test add ljmp add adc mov lds sbb enter jg mov mov add cld adc add sub mov push xchg test (bad) pop sti add pop rcrb cli xorb xor std cmp xchg fimull bound leave (bad) shl push pop aam add or icebp add adc fdiv mov sbb mov subb mov ja loop mov cmp add dec test (bad) popf adc ljmp jae dec outsb (bad) jns jmp mov cmp leave lds pop cmp xor mov xlat imul add pop mov call add jb add mul add pop sub and mov sbb add sub scas in or pushf scas mov push jg into lcall cmpsb ret negl stos inc stc adc and add inc cltd add push mov push cmpsl mov add jp cmc cld cltd push andl mov sub sbb pop in inc aad pop add sbb mov enter sub xor mov daa aaa sub aam adc arpl inc push popf or popa mov mov jnp sbb iret pop call mov adcl cmpsl xchg dec je sub ds sahf fidivl and js add pop faddl (bad) sbb mov jne sub mov jno add ret out leave (bad) shll out add jp fisttp xchg mov mov rorl add inc mov ds testb ret or movsb pop xchg aaa popf pop fiaddl je loope mov add out fsubrl iret psrad stos rcrl xchg (bad) mov mov nop daa xorl pop fs adc or fwait int sbb dec fiaddl setne daa jb add outsl cmpsl out mov pop xchg add ljmp hlt add or mov aas mov add cmpsb add or push add add dec xchg ficom jg repz jecxz test pushf add cmp (bad) push (bad) cmp sbbb cli out push adc adc mov xchg cmp lahf push test rcll lret adc xor pop push rep subb in adc mov jo or jmp jge sahf clc add add stos jb lds cmp hlt xorl int add inc test xchg mov stos add lock cli dec test add pop test xchg ret ret repz jb mov add dec push jo ret push cmpsl pop add cld or pusha adc add out clc inc mov dec imul lret pop mov gs cs rolb and data16 sub jns loop (bad) jl pop clc jae mov push sahf aaa (bad) popf int3 insb (bad) mov rorb cmovbe and mov cmp ret add mov mov stos icebp mov mov add lods loop in fsubl adc or mov add add imul xchg in int sbb push addb mov sub jp sub test xor jmp jp jl mov xchg push data16 add jge jns fild rcll inc stos and add push popf mov loopne (bad) mov add jnp jno movsl push jns test enter push inc in inc ret mov jle jne lahf push in je jb out xorb push popa aaa inc add and (bad) aas add push push cltd pop clc add mov push add fcomip stos mov add add les xchg pusha cmp incl psrad pushf add (bad) cltd add xchg sbb and in push or arpl imul call lahf addl and mov add push cmp sahf iret jmp adc add xorl fs test mov mov mov mov push outsl add (bad) ds push pop or orb subl jle inc push imul mov xor (bad) sahf adc xchg add setno xchg and movsl inc jp or add adc or or jmp add and movsl cmp jecxz add dec test popf sbb repz arpl xor inc mov stos inc andl in add mov jb testl adc lahf add sahf test xchg mov cmp aaa xor xor mov outsb add adc arpl xor mov push jae test sbb mov decb cmc mov fldenv aam and cmp cmp jle adc stos sub sbb add mov sub psllw add inc pusha (bad) lock lret mov sbb outsb mov pusha test sbb int3 add mov or add and testl sub sbb add cmp mov dec out incb xor mov mov lea add es mov adc xchg push inc pop divl jp lahf xchg in mov jns add and add insl cmp jb sbb lcall loope insb fcomp add cli xchg jno lahf addl and (bad) mov pushf pop mov jp fild outsb mov (bad) push leave and in pusha stos jle js add out outsb push mov (bad) sbb mov xlat push js pop add inc addr16 pushf inc mov nop jno pop andb call cwtl push mov enter fisttpl xchg movsb (bad) cmpb lods xor (bad) pop push addl xchg xchg outsb adc mov push lds lock push stos mov sbb pop add leave dec push enter aad mov movsb inc push jge add fbld daa stos loope sub movsl cli lea mov add ds (bad) mov push add clc in mov repnz jns enter loopne pop sbb pop sarl or (bad) scas jge and jp addl inc fild jne test test inc inc adc hlt add aas mov dec ficoml add and adc push aaa sub xchg dec mov sub outsl push ret insl add cmpsl (bad) fisttpl test je inc mov insb lods cmp stc pop adc xlat lods pop ror add sub das dec aad jbe add add dec pop mov je add sub add fisttpl add aam jns pop inc repnz xchg (bad) xlat mov dec test aam mov sahf or popf rolb lret movntq les jnp test or jmp movb int3 and push push xorl pop xor cmp repz rorb lock rorb mov popa add shr call and sub push xchg adc adc fisubrl mov mov loop pop stos (bad) xchg add lods repz cmp cs icebp mov out add add in (bad) aas repz pop loope jle inc xor rorl cmp jne fnstenv or sbb push xchg cmp xorl ja and add pushf fmul cmpb mov adc jp imul addr16 inc lret out fisubl mov jl adc jle fwait outsl mov or and jmp sahf xchg mov cwtl pop add jmp jecxz ret pushf inc pusha add aas in rcll shlb mov insl jle imul inc adc add hlt jns add mov stos cmp jg add gs pop xlat inc daa sbbl sbb xor negb push cmpl jnp int out (bad) pop popa test dec negl inc int3 push inc test add push sub pusha hlt lahf xor loope xor mov and int and dec lret add insl inc gs out jmp js sub sahf cmp xchg out and sbb inc mov out mov pop push lcall lahf jg or sbb insb mov sub cmpsb fadds ficoml dec verw sbb jae dec icebp fdivrl scas sub push inc fs or add xor dec cli xor fdivrl cmp push mov aad sub lock daa cld aam test out add xchg popf xchg sahf nop jo add push and sbb add (bad) sub adc add adc xor sahf inc push sbb inc sub fiaddl int mov sbb les aam iret xlat mov inc inc daa jp jmp pop cmp pop ds pop fs add std cmp (bad) or xor xor xchg popf cmpsl add (bad) cld mov mov gs push jge imul lods xlat add out loop repz and call sbb push mov sub scas imul xchg lret popf les dec sbb addr16 fadds and sub fild add pop aad push sti push add int3 leave cltd (bad) cs and push xchg xor pop pusha dec int3 or aam cld mov jmp add push int sbb gs mov arpl mov pop divl addr16 insl add loopne dec cwtl dec add xchg or sbb (bad) insl (bad) pop pop add sbb cmp add pop pop movsl sahf cld sub add xor test (bad) xor dec xor mov sbb insl pop pop xlat icebp es cmp fnop fdivs xchg test sub test lea jle std (bad) mov out cmp add loopne,pt adc sbb dec pop pop add shll (bad) cmc jne pop popa outsb cmp xchg aad add nop aam and ja out stos push daa and dec insb xorb cmc push fnop mov add loope add out add out pop cmc addb outsb imul mov aaa add das loopne add ds nop mulb repnz mov je cmpsb sar movsb test mov pop in push jae mov inc outsl mov sarl add shlb enter add dec (bad) (bad) cmpsl mov out add cwtl and in or arpl pop cmp jb fs add dec pop inc cmpsb inc sub cmp arpl ret or or adc rolb inc inc das pop and xor mov loopne push jnp add out sbb lret pop and and xchg cmp popa add xor xlat sbb lcall adc dec adc push scas cli inc cmc adc push add jnp mov mov inc insl aam dec movsl add push andl in sub sti adc mov test incl divb sbb loope testl jg (bad) fiaddl lock fs push fstpt mov outsb loope into push or ljmp add in orl je int lahf inc pop add dec dec push popf or sub sar mov (bad) push dec testl imul lods adc mov jnp incb dec in adc push test sti mov sbbl push xorb test pop shl (bad) fiadd xorl push lods adc xlat jae add adcl and in xchg mov xchg aad adc push adc test add les outsl jmp popf xor cli daa mov lcall add push rcrb cld (bad) push cli dec out in and jns add push xchg push and les pushf repnz orb cmp jl add dec mov push add aaa jns sub mov xchg jecxz xchg jl cmp and movsb fdivs mov jno pushf neg inc sarb clc add add ret js mov jge jnp loopne adc pop jo xor and test inc xchg cmp orb es or ljmp adc xor jbe,pn movl pop cmp andb js bound add and inc mov adc jno dec fisubl notl (bad) (bad) in das add push or add or inc jne xchg aas xor adc xor xor test dec scas xor notl cmp add pop sub in pop cmp test push inc bound subl mov push jp mov or xchg adc or fildl jl pop je sarb ret add dec or sbb pop test pop lret push mov cmc push cmpl mov or add mov cmp add sysenter inc sbb add popa cmc or jmp pop cmp add (bad) pusha xchg adc out decb add les push cwtl mov addl lods incb dec scas dec jne dec cmp sbb sub pop stos pop fdivrl add inc mov add aaa sbb cmp push xchg pop ljmp in mov jl (bad) jmp add stos inc test outsb in add lods clc dec rolb push fxch movsb mov pop sbb cmpb fsubr lods push movsb add fisubl jp jo or ds sbb je pop cmp cmp ljmp (bad) leave adc xorl je out xchg (bad) rcr adc pop pop daa add mov cmp push mov arpl pop add (bad) mov xchg test push out (bad) xchg pop orl pushf sahf nop jns add mov jge aaa pop mov addb xchg sti stos cmc inc mov add aam sub or je (bad) fsubrs add jecxz daa mov pop jnp movsb mov leave mov cld mov shr hlt popl mov jecxz (bad) negb jge and cld (bad) orl xchg fild (bad) or pop mov sti add mov cwtl into inc sub test add sub lods aas pop ds lds loopne int push aas push add mov add dec jmp mul mov push popa iret push add (bad) cmc imul add pop jg and mov sbb or jp or aam enter add daa popf sbbl push adc add dec aaa in push loopne adcl and pop push add leave add fwait insb imul xor aas pop aas dec add or mov mov jg clc cmp jp pusha sahf push loopne jle add pop idivb cli sbb adcl scas fwait or sub mov fucom popf inc add xor sub loopne out lret ss cmp das adc aad pop paddsb inc add (bad) add inc cs mov out fistp lcall mov xorb xchg mov push xlat add push xchg les pop jbe sahf lock sub add push jge mov add dec je add and xor cmp push xchg push std and cmc adc inc jl dec sahf cmp scas sbbl mov mov jecxz dec aaa mov call fwait push dec mov adc repz jbe add (bad) sbb aaa mov inc test cmp adc fpatan je popf pop xchg test outsb pusha icebp add std pop cltd mov xchg fiadd inc jns int xchg mov out add int3 push cld in enter fsubrl sbb lcall add jle add sub dec pushl test jae aas jg push push cmpsl add pushf add in sarl scas xchg add lahf mov cmp mov jno (bad) push sub inc aam xchg testb popa sub mov lods jecxz sub mov outsb add lock (bad) mov movsb inc jb add mov cmpsl add xchg push sti adc (bad) rcrb mov and gs adc daa mov int out (bad) sub imul mov pop inc and xor jne jge imull add mov icebp xchg add cltd sbb in sbb fnstcw adc (bad) aam mov and cli push mov and loope cwtl dec jae sti popf lcall push and andl xchg inc cmp nop in sbbl imul incl add jb add sub add mov and add sbb inc push jbe mov or jns iret pop inc ficoml and jne sti lock push (bad) jecxz enter cmp ret scas mov xchg mov xorl xor cli dec adcl xchg push les sbb push mov bound add mov js scas jne push jg inc lods sbbl leave jnp add cmc nop ret mov lret aad iret inc fsub std add pop dec hlt pop in and jle (bad) cmp jo or addl inc shlb int3 or mov jo sahf pop mov sub xor mov aam pop imul lcall jmp add rcll sbb xchg into add cwtl in or lret test jle jl (bad) outsl mov jbe inc mov add add cwtl inc xchg sbb mov and insb inc add pop push hlt xchg aad add mov les adc inc gs (bad) cmp int ljmp xchg add push paddd xchg and add mov cmp test mov pop (bad) pop cmpsl lds jne mov sbb or fs popf mov push icebp out jge lahf stos mov inc adc rclb fildl and jb xor xchg add pop dec mov dec pop add cmc and mov xchg fadds daa mov pop add mov xchg rsqrtps rclb mov xchg adc out nop test sub orl fsubs mov jns pusha inc mov outsb cmpsl sbbl lds push lret xor daa je or dec dec arpl mov mov loope pusha mov test repnz movsl fcomi cmp xorl rcrl clc jp sarl in mov fisubr push and xchg (bad) cmc jmp or inc es add xchg fucomi adcl shlb popf cmp jo out sub lcall out fisub add push adc mov sub subl lods mov adc jno rcr add arpl cwtl clc fidivr stos pop movsl jge adc pusha outsl sbb or cmp ljmp pop push enter adc jge sysenter in das jecxz (bad) aaa jo inc iret sub dec imull je dec out add lods bnd mov call pmulhw add jbe sar jmp mov rclb add xchg pop test lret mov cmp (bad) jecxz dec fiadd lcall mov loop daa pop mov and or iret push ja rcll mov jne add cli mov (bad) add inc xchg nop add es loop fildl sbb jno jp (bad) repz mov enter rorb inc sahf add mov je popa mov orl leave pop xchg bound or inc and cmp int or push repz ljmp je add mov jbe leave icebp inc xor cmp cltd push (bad) repnz adc sub xorb push adc sbb imul mov push or aas out mov (bad) mov imul push add cmp push cmpsl jne mov add adc jae xchg ficomp (bad) pop xchg pop and cmc insb into add js lods addl jo add and or mov enter out hlt inc ds shrl mov jp adc pushf mov out xchg pop stc ror add or insb add loope rolb xchg dec ds pop mov sbb in int add pop push push scas out or test dec cltd imul cmp out jl sub es scas push repnz xor aam setbe mov hlt int repnz jae popa cs mov aam (bad) repz jle iret faddl dec in std xchg mov add inc incb fimull je jnp rcrl jle jmp gs movsb add push add faddl shl int3 ja cmp dec add push pop ljmp imul cmp add pop (bad) pop jnp xor pusha dec pop push mov test or fistl imul enter jp pop add sbb pop sahf in xchg cmpb cmp fdivrl add inc lret fstpt mov xchg rol sbb dec pop cmp adc daa clc insb movsb add jno mov xor pop mov lods mov mov jp pop or push pop mov sbb test cwtl popf xchg sub xor jecxz add sub mov or sub aam jns mov sbb je add scas out movsb xor aas sbbl dec dec or and pushf cmp add arpl sbb add (bad) mov mov popf mov pop add jl loope arpl dec mov orb popf push cmp pusha mov jb frstor add sarb push mov hlt ljmp lods mov adc fiaddl jp xor (bad) out leave inc adc nop movlps or adcb std add jecxz add mov popf sbb cmp push cld fsub xor js mov adc xchg cmp andl push push in inc pcmpgtw inc cmp fldl or loopne jp sub add fs push cmpl sbb lcall loopne jecxz mov jns rcrb fcmove add lea orl rcr ret (bad) mov std ja sbb sahf loop add aaa data16 jns test stos jmp xchg nop mov jnp add push mov xor adc (bad) add cmpsl push add mov jae cltd in outsl adc adc add and xchg and mov je mov xor adc jmp lods xchg and sti cmpsl add outsb xor mov xchg test and inc hlt mov or mov mov adc les and clc lret out bound rsm enter xchg les int xor faddl (bad) mov add or rolb jo mov add mull mov mov cli push add mov jne add sarb jno sbb xor and inc mov outsb out xchg insb (bad) jns orl stc fwait js push add push roll push inc adc inc pusha mov cmp test loop push lea cli adc pop add ja sbb movaps adc push and iret push sub xchg push mov test icebp sbb adc aaa popa jae sbb cmc cmp pop repz mov or lods faddl jbe mov push xor fisubrl (bad) mov add xchg add (bad) lret sub inc lahf xchg push cmpsl inc ret inc idiv dec sbb xchg aad pusha push inc insb add add push adc and in fiadd jbe lret inc out clc xchg inc test add shll dec add loope sahf andb xchg add fcmovnbe arpl add imul in mov mov dec adc inc (bad) out aaa lahf orl addr16 sbb (bad) sbb call (bad) jmp and and in push mov test adc fisubrl pop jge orb adc xchg inc jp and pushf jmp or add pop in mov sub stc dec sub ret jp adc inc aas (bad) (bad) in add xchg sub andb adc jp test popa mov cmp pop and andl dec dec add sbb loopne xchg add pop push daa pop pop mov ds xor add dec lahf sbb pop add jbe cmc (bad) xor or rcll addl pop ds add fiadd es add mov rcrb add mov mov lcall aam fistpl add movsb scas les and mov add push adc gs sub mov jns mov cmp and fwait pop mov or sbb push lcall cmpsb sarb or ss push add lock adc xchg add sub subl sub icebp add and sub sub jecxz dec dec fistl clc xlat jl mov xor mov sti cmc adc ss xchg push rol sbb mov xor mov fucomip and add addr16 dec jb xchg add cmp mov push mov jbe xor cli ja add pop test adc sti (bad) in dec scas push popf add test sbb jb mov add aas leave xchg add xor pop outsl xlat dec ret add adc cwtl mov xor mov push add out mov adc call into popa push push out sahf cs add add and loopne jne les lcall and insl push out aas add xchg inc inc roll std mov aas lea xchg and in popf ret bound imul out in insb add je ljmp out adc orb add mov repz out and rolb adc sub push jl inc push add or add pop push lahf into and iret pop sbb pop adc xchg jge add and out ret pop out pop lock push xor mov sub stos mov add jbe ljmp pushf mov inc sarl xchg shrb pop xor jmp or stc and cmpsl (bad) jp faddl test jl add or mov add inc (bad) mov roll sbb or out out subb inc or outsb jnp mov add (bad) clc mov rcr jo xor data16 gs pop sub add mov cmp movsb pop pop dec lods adc pop clc cmp and add ret jno add sub insb cmpsb pop push xchg adc iret mov or rcl mov sbb in mov pop lahf jmp push ljmp mov add lock mov add mov inc and pop add out int3 jle ret pop and fsubrl lcall add xchg pop sub dec mov add daa outsb sub add jl test aas adc outsb insb add sub sub xor add push inc adc add jp in (bad) mov sub sbb sti and mov mov dec cmp add and adcl jo sub mov adc inc mov xor or inc jnp add movsl adc xchg (bad) sub mov mov mov add outsb jns adc pop add adc add xchg aad cmp mov add pushf inc dec jbe or xor adc add pop rorl add cmc cmpl (bad) adc add adc or xor add adc fadds (bad) sub add mov push pop add mov stos fwait add iret adc repnz sbb and addl or xlat push jo add mov xor add test pop add xchg push add lods pop lock mov scas pop adc std xor subb sub pop andl jl pop xchg add dec sti sbb add xor sub xor fbstp mov rorb xchg lea sub push sub or sub cmp mov add js stos mov aam mov mov sub pop pushf mov push push and mov fbstp add in dec js adc std js stc movsl add xchg and or negb jl (bad) cmc push mov lcall jb and add inc sub sub cmp cmp jno pop popf paddq or bound in add fildll sub ret add data16 add pop daa pop push adc add cmp jle and add xchg cs fisubr add cmpsl iret je dec mov mov or add and leave std addl jg repz js (bad) xchg xor sbbl sti jmpw mov loope add sbb pop jno adc or sbbl mov (bad) shrl sbb push cltd mov fwait aaa sahf imul push dec and mov cwtl add sarb push jbe addl jmp push mov jl fwait add loop mov push jp or jge es punpcklbw or dec add push or ficom mov dec jp lret cli out sti or cs dec add jmp repnz jmp adc add add mov stc imul popa (bad) mov aaa add stc sbb push sub jno cltd add arpl push scas add nop add cmpsb dec mov je decb jmp js pop adc cmpsb inc fwait sub sbb scas or mov vpcmpeqw jecxz outsb add imul ja icebp add fs in jb (bad) mov dec jge cwtl dec or shlb clc ljmp rorb mov pop and pop adc xchg push pop dec cmpsb and add cmp xchg adc in out bound sub and andl pusha sbb pop outsl adc into add xchg mov jne mov pop imul push fidivl and lods icebp int or push jp add into dec loopne jg jl pop jl addb add jnp cmp or xor out (bad) in cmpl repz leave push jb inc xchg cltd jl add push scas jg in fstpt mov dec aaa jbe orl popf sbb push push pop pusha in push adc adc mov dec (bad) dec mov pop fnop mov out add dec jne nop roll leave xlat pop push (bad) insl xchg ret jle cs repz ss sub sub pusha xor add jbe sub iret lahf add test cmc mov hlt inc cli popl fs test add and mov dec add push add pop cmp subl lods gs add nop sahf addl inc inc repz add test xor xor add into js push scas push pop add mov sarb dec divl mov fstl scas add dec jae icebp cmp mov lock loopne adc inc addb ret dec sbb rclb inc inc outsl out sub pop xchg jbe adc fidivr add insb fs into js add and out xchg sahf inc rorb push iret insb lea pop jb lcall bound xor cmp sub imul pop faddl fwait pop jmp sub add test add jbe pop (bad) imul dec cmpsb mov add add pop loopne and mov add ret mov sub push fldcw iret pushf ds inc adc xlat jecxz xchg sarl cmc adc outsl inc pop inc mov stos (bad) int3 add or sub imul mov jl cmp xor adc unpcklps into push dec add xor pop jne js cmpsb and jne ja je test insb adc test dec (bad) add cmc (bad) gs sar add in xchg pop stos cmp imul ss inc add add popl mov xorb dec inc xchg push je movb xchg dec pop or inc out mulb mov mov jo push icebp ljmp outsl jae cmp and outsl add test jp loopne add xor jnp add stos test out adc orb and mov adcl pop cmpsl int3 jl xor scas ss jo in sbb movsl xor out mov push pop decb pop push adc sbb subl loop pop cmc mov pop xor cmp push mov xor mulps mov adc cld cld cld (bad) jle lret add or inc aaa add push (bad) xor fisttp pop mov arpl lods pusha pushf xlat js add dec mov xor sbb pushf arpl sub addr16 cld out add jmp push add cmpsb cmpsl into xchg jae push push lea jmp cmpb or add jecxz (bad) mov (bad) je test fist inc inc ja outsb leave fildl scas xor sbb push icebp pusha ds out xchg outsb pushf (bad) aaa add clc pop fnstsw pop pop (bad) mov popf push or jbe lret incb and adc sub (bad) jg mov out lret sub out and and iret and mov adc repnz pop sti mov mov addl clc cmp add push idivb xchg mov addr16 pop adc add (bad) repz add in movsl push pop ja add loopne xor mov jno addl (bad) test pusha subl shlb mul sahf inc mov jl bound xchg pop andl or add pop imul ret js mov sub adc out jg in add ret imul add xchg cmove icebp ret cmpsb (bad) mov fild or pusha imul pusha movb jb add dec add add jle mull andb fs jbe xor add add xorl pop adc cmpl and sbb cld (bad) or pop and cwtl pop jp cmp add and add loope pop add add loopnew pop aaa fild popa cmp jl test call movswl inc cwtl repz lret mov ret fsubr mov xor aas addb push int lret add and or cmp aaa add scas mov xor sub sbb inc xor fisttpl sbb lcall leave xchg popl fwait and add outsb ret mov (bad) mov push popf lods pop (bad) mov mov bound xchg (bad) push mov stos add test (bad) aam mov inc jb sbb ss xorl aas jbe and sbb add and rolb ret lds cmp out adc je mov orl and xlat imul outsb or add inc mov das (bad) mov adc mov xor test subb cmp add pop mov add mov mov and xor jne xchg orb push cmp mov lret aam ljmp cli ja dec jmp pop add and int cmp mov stos (bad) push cmc (bad) rcrb divb loop jl or jl subb xchg lcall pop mov add scas inc mov test (bad) or into add add sub addr16 mov mov or mov addl mov (bad) push sbb inc rol les add xchg jge lods mov fcmovnb movsl lock into xor sbb addl stos andb mov sti jg cwtl or adcl cmp sub lea mov mov add inc in inc xchg fildl pop (bad) xor addb call testl mov addr16 shrl add cmp addl push paddsb cmp test aam test lock mov mov stos rorb add shrl add xchg xor dec (bad) add bnd dec ljmp adc xor sub mov xor cs dec mov cvtps2pd jg inc push add cs stos test cmp inc add (bad) mov mov imul jl jns and xchg pop or xor xchg aam andl dec sti pop mov cld fistl inc pop popl xor or cmp mov mov push enter inc cmp outsb adc inc adc lods out rolb mov mov loope sbb rol jle add (bad) pop add es xorl adc push ficom sub out cs jmp xor jecxz pushf fmuls xchg cmp add jmp in and adc ret add (bad) jle test in add push fistp add mov mov inc (bad) loop cmp adc stos add fwait xchg leave aaa mov test xchg pop xor mov movsb pop jns adc push dec cmpsl roll stos (bad) rclb aam xor mov push fdivrs sbb xchg dec dec jne sub and sub add aam jnp sub into add xor pop movsl out xor cwtl into nop (bad) movsb xchg add insb cld xchg in mov std js add adc fnsave daa jne aaa pop pop mov jmp dec add sti mov out data16 gs add jne pusha push orl jmp popa xchg cmp adc and lea sub and adc fsubl cld clc add cs cmpsl (bad) pop and (bad) and popf pop cmpsb (bad) lock mov ret aas stos add loop sub lea cmp pop xor (bad) fistpl arpl push sub mov jae pop inc xlat mov xchg pop cli and add mov lret xchg stos nop daa mov lods push cmp cmpsl inc in ret jns fidiv (bad) add lret pop pop (bad) mov adc cwtl add and scas push add inc nop pusha jns bound sbb or (bad) xlat cmpsl jne faddl mov pop xchg add sub stc outsl add out or das inc sahf add fwait (bad) sarb (bad) mov out push nop sub pop roll pop xchg mov or jle add pushf into sbb jge add loopne jnp lret xchg mov sahf nop (bad) repnz sbb pop dec push out inc dec andl mov push cmpsb roll inc jle inc add test dec mov mov in push cmp sub pop sbb add cmp dec and rcll jl pop cmp mov test (bad) fmuls loope add (bad) pushf mov mov add xor and inc dec add dec das cmp jne add mov adc int3 sub outsb xchg or out incl pop jmp sub mov push mov push cmp mov mov test xor (bad) mov add mov mov xor movsb dec cwtl cmc mov jg pop mov cli adc movl ja mov rolb mov and jo fs out int3 jbe pushf out je add add ss cmp pop lds adc rclb jbe add clc sub jl inc popf lds sub out mov outsb (bad) or in mov cmc inc ret jae outsb and add xchg sbb xor mov pop xor pop push fadd add aaa mov pop outsl das cmp and hlt pop xchg add mov es sbb xchg or mov inc jnp jg stc lods js pop push add add and push xor dec mov faddl inc call add mov jecxz cmp rol pop into pop enter mov jmp pop adc adc push push repz cmpb mov sahf orl sbb sbb je add lahf and jae mov ds stos aad das int cs pusha cmp xchg lahf push cmpsl sub jg sub jp push dec sahf insl (bad) or add inc push sti inc adc lahf pusha movsb ss dec sub and test or lods adc push mov jl add cmpb sub aas add or fdivr adc gs jl pop bound push out jl sub nop pop lahf repz push inc loopne cmp and out inc mov xchg xchg or jp pushf pop dec ret (bad) jmp int3 cmp and rclb cmp ljmp add popf push mov xchg adc mov pop fisubl (bad) into cmpsl das xchg icebp xchg repnz jl cmp add push and add call add and add lahf jbe or inc add xor add inc shl and dec sahf rolb xorb nop sbb jns add sub mov testl push (bad) adc jecxz clc (bad) mov jl jnp adc sbb fwait jo or cmp scas out and add lahf insl rcr pop and inc mov push xor mov dec mov incb sub sahf jns or add popf je add sbb pop inc mov lods fistpll add xchg (bad) rcl push xchg out xor test subl sub pop in ret arpl cwtl pushf jmp or cs flds mov leave xlat xorl sub movl in cmpl mov adc test pop idivb add add popa push xchg ds add clc popf sub and add inc add xchg mov pop das fstl jbe test jp sub adc jno push jge dec loopne add dec iret mov pop clc xor insl mov mull sbb popa iret je adc mov xchg lahf adc push popl mov mulb pop scas scas iret and mov popf scas jbe add add imul sbbl mov in clc add xchg dec ja repnz add js call ficompl mov sbb jbe aaa jb add pop fnop add dec imulb nop stc imul sub in into ljmp add test lret jnp cmp mov xchg pushf pop ret sub fld nop (bad) mov sbb adcb iret xorl or (bad) dec add cmp shll pushl pop ss dec pop push aaa cmpl lods in cmp js sbb arpl int repnz out hlt add xchg inc in mov aas test add jae add mov pop push and imul xor dec scas adc mov mov sbb pusha lahf inc xchg dec inc js add lret loopne sbb add pop adc fisttpll repz adc pop insb add movsl in mov int aad adc add stos dec je sbb icebp rorl js pop test and adc add popa ret cmp add (bad) jnp scas data16 add lds sub arpl lret es pop add cmpsb popf push lods push cwtl pop jp sbb and das sub mov pop data16 add movsl jl insl or test push sbb adc mov fisubl cmp lds xorl gs pop or stos dec std xchg fidivrl cmp xchg in and shrl xchg cmp push pusha or ss adc sub jae push shrb icebp fistpll aam outsb or ss or mov add cmpsb pop add stos (bad) add adc mov or andl fimull cwtl sahf push scas insb ljmp add (bad) imul sbb sub add pop (bad) lret inc mov add mov mov or add add xlat mov orl leave cmpl sbb mulb outsb add cmpsb sbb ret cmpb sbb outsb mov cmpl or (bad) insl std dec sub jl push (bad) or xor test jmp lock xchg and stos pusha (bad) xlat arpl add loope push xchg je and jne xchg enter mov std cmp add sahf or (bad) dec adc es inc (bad) popf je addl icebp sbb cmp push mov aad fiadd or mov jns add cli jae add mov xchg add icebp scas aad mov cli pusha xor addl cmpb mov daa int xchg lock (bad) add cmp (bad) dec leave add call pop movl hlt cltd jnp push mov lock and fsub cmp lods adc ret mov (bad) out and mov lock add lods test xor loop jae push pop js stc add or push xchg jg mov dec test xchg dec lea mov dec jnp sbb add pop add xchg or pop and and jecxz std pop mov jo test xchg sub or mov push les mov in adc fs pop scas mov inc cld or ret js jns roll mov nop lret inc add sub (bad) xchg jmp stos adcl jecxz in jl add inc jnp sub pop insl addr16 mov add fldl hlt and rolb add adcl sahf pop sub ret sub test jp jb pop push sub outsl pusha xor sarl add movsb js das mov enter int mov mov inc jb test inc push mov jecxz adc add jbe fstps lock bound jno pusha jmp dec jbe and or repz push in xchg add jnp dec mov mov je daa sahf scas jo iret xchg mov mov loop push stos mov cmp testb push add in mov and rolb and xor enterw (bad) pop jae lds dec push xchg push xchg shrb jl roll xor push jbe mov enter mov cmpsb rolb mov insb add jl outsb cld adc dec add lock in bound ja pop sahf in pop jle xlat nop pop mov mov or add push cmpsb gs xor aaa int3 rcrl mov in xchg push fnstenv cld xlat out pop add and popa cmp pop or sbb sbb dec dec test int ljmp and addl pop inc sti xchg loopne push dec add pop addr16 lahf push jns inc in or pusha sahf add shrl pop mov nop orl or add aam or push add sbb mov adcl jl fist rcrb push adc (bad) jle lahf dec add out std sub push xchg mov add mov add es push add pop arpl xchg mov mov add add adc lds pop in add call jg cmp insb and jno sbbl pushf cmpl sbb cmp cmp aad mov dec add and cmp stos fisttp or ffree inc add jl sub pop stos inc fwait pop xchg fbld mov test push cmpsb sahf and adc test nop or into add add inc mov push xlat add jl roll inc and ja cmp add ljmp clc add xchg cmpsl sbb testb and dec and cmp clc mov mov pop inc push mov cmpsl push jl ja out test cmpsb aad add (bad) ja add js pop add fsubr imul out inc dec dec cmp movsb xchg orb dec js scas xchg xchg lret jo inc and push adc mov test enter cmp clc js add (bad) and pop and add cmpsb sbb adc movsb mov and pop sub push js add fstl fldenv cmp ss ljmp add xchg fisubl inc jbe hlt mov pop inc xchg scas xchg insl jo jnp sub inc lock xor pop mov cmp (bad) (bad) cmc lds sbb jne adc hlt or (bad) fistl loope loopne iret mov stos fiadd repnz xchg xchg xchg rclb jo add int mov sub outsb iret mov add mov inc jns jge int3 inc (bad) inc xor inc (bad) out mov or or push notb popf loope imul push inc vpmulhuw repz and aas ljmp mov jbe push xor jb push aaa xor sub les adc data16 (bad) and leave scas or or ja sbbb dec mov insb (bad) out dec bound mov ret in (bad) and cmp push jle add push or mov lahf mov xchg (bad) lahf mov add jg movb jae cmc cld add fist out aad in add pop imul add sbb push add je jecxz pop pop jnp ja xorb add push pusha add dec jno push gs pushf mov les push and leave jbe cmp mov or xchg jl pusha xlat mov and mov xor or mov dec fstpt add mov mov mov lahf es jo mov ret or jae rorl or lret test jge adc jmp aaa insl pop add hlt fldt fildll push fwait test imulb push add mov aas xchg pop (bad) aas pusha jge pop cmp pop je test and (bad) fstl dec cs addr16 push dec sbb xorb (bad) lret adc stos push jl mov mov (bad) orl rolb cltd mov mov push bound add sbb xor pop repnz push push lods inc repnz je add or or mov mov dec mov push add pop mov out adc pusha inc mov adc ja inc sarl mov cs inc xchg add mov mov push subw push add addl cmp add pop arpl enter jno mov jmp mov and jmp std pusha ss lea aas inc xchg dec xchg (bad) lret mov jge inc daa rcr dec add jns lea shrl sub subb (bad) icebp dec jmp or add imul adcl sbb xchg push das dec (bad) mov test sbb xchg imul add xor (bad) cwtl popf fldenv cltd cmp aas add mov pop out mov jp dec (bad) push jnp fs ds add add das adc loopne out push gs sti xor xor stc adc and sub add imul and lods add (bad) popf movsb ja dec mov push add jge clc mov decb mov pop ds adcl cs jmp lret xor cltd add mov popf pop cmp push dec lret jae test aad add push jne dec sbb jo adc inc ret ljmp mov add jge inc fisubr aad out (bad) dec cmp js popa jb insl adc and das jb (bad) push dec lret hlt inc or sbb and cmp loop lcall lret push cmp add (bad) mov pop mov in xor pop inc add mov sub imul andb enter pop hlt dec pusha sti xchg xchg pop push out add js lcall xchg decb aam stc jle pushf cmp pop or fistl cmpl cmpsb xor add aam jl cmc es or jns jb or stos cmp dec push cwtl add and lds adc push push xchg out cmp mov inc loop cmc jbe data16 (bad) hlt popf xor insl add popa mov inc sub mov or mov jmp pop or (bad) mov pop (bad) out scas add mov out dec and fnstenv mov addl add aas jp xchg and sbbl movsb jmp pushf add xchg aam and mov mov mov pusha xchg fidiv jb lods and (bad) inc or add hlt xor lret scas cmp and pop xor vpaddusw movsb add lret test test stos ljmp cld xchg pusha fsubr inc add push jle notl (bad) sti sar dec andl popa inc out int3 cvttps2pi xor add (bad) sbb add arpl lods out imul add inc adc popa xor or add pop das popf dec push (bad) stc push push inc xchg div test add movsb push adc addl cmpsb jo push inc rcll mov adc andl dec enter subb std repz icebp je lahf add aaa sub push push xor sbb and cmp rolb jo lret pop fs or ret add lret fisttp add (bad) fiadd (bad) and cwtl pusha adc xchg popa in push push push add das cwtl mov xor jns cmc add jbe pop pop dec outsb lods add pusha mov stc mov scas push fiaddl and xchg add test push push xor lea adc adc push jle lods add mov sbb pop movsb add in pop scas sbb pop push xchg xor push mov into in add adc push push mov pop push fnsave inc pop je jo,pt pcmpgtw dec pop ret rorl jp add push jle subb in divb inc sub xchg or mov orb sbb push into pusha mov mov push test mov sbb mov pop mov xlat inc pusha (bad) enter jnp inc repnz mov jecxz add add dec (bad) sahf test mov fnop dec push adc dec cmp inc or cmp mov (bad) and xorl dec fdivrl inc jmp pop inc add fistp pop mov ljmp shll cld jo cwtl outsl add loop pop lea add fistp or int3 shrl add xorl dec test out dec xor sbb push xchg imul pusha dec lret push cmp mov push add adc xchg cmp int mov add xor pusha adc push cltd mov adc xchg test mov lahf sbb jae and mov add push test add ljmp mov mov pop std fiadd fsubs sbb inc cmp pop xor lea and lods xchg je push outsb add out pop leave mov sbb data16 jg jle orb pop push sbb je add hlt add and pop orl push inc mov push and jl and adcl jo in out push (bad) cmp sti adc stos sub lahf cmp sub jo add jnp mov je sbb inc or icebp (bad) rolb aam add mov imul xlat dec sub cmc dec mov dec pusha and cmpl adc bound or negb jmp add add std mov xchg les xchg push mov push gs and xchg mov (bad) adc ss adc jno mov scas mov jmp daa cwtl (bad) pop adc mov sub outsl add push jbe pop jle or loop insb add add push inc popl cltd push xor pop mov xor push pop sub fnsave out sahf jno add push movsl popa jle loopne jbe xchg jnp sub jge cli and pop pop enter (bad) dec xchg nop jbe push inc ret shlb sub add xchg jge push daa sbbl cld inc xchg aad sti inc popl (bad) popf mov jmp aam stc test mov fistp pop add sub lret or add xchg ret jae,pn xor inc lret or cmpl jno addps and mov (bad) test xchg add nop jmp mov jp,pt mov lret shl cmp jmp mov rcrb add and sub enter stos or cmpsb je push sarl push imull mov cmp add dec mov mov leave add (bad) (bad) jnp mov std add push jmp push cwtl jbe xchg add fisubr add xor pop scas add xor mov fwait jo dec mov iret les xor pusha mov push clc xor add call mov jbe xor jg add je faddl lds sub aam popf repnz into add std inc cwtl dec adc movsb pushf in or pop mov test pushf xchg mov dec push add adc mov add stc stos loope addr16 add push dec adc std jbe or insl mov add jle sub mov outsb pusha xchg xchg stos xor dec int3 aam cmp lock push stos push or adc int (bad) jb int3 sub add pop ss push mov push adcb test (bad) and and (bad) cmpsb xchg mov (bad) repnz fldl nop inc popa mov dec add cltd lret add mov xor push cld push aaa mov inc xchg adc addb cmp (bad) rcrb lret lahf movsl pop push mov in or loopne add xor lock cmpsl aaa fwait ret testb in sbb push inc sub fs push mov daa lcall fisubr mov xchg addr16 repz lock mov inc popa lods or and jno loopne leave movsb sbb adc repnz (bad) mov fldcw xchg add popa xor add (bad) xor dec pop (bad) pushf ja sbbl push sbb pushf cmp sahf inc xchg inc sub sub jno xchg cmp mov dec cwtl cmpl xchg mov push (bad) mov fucompp mov in popl inc lods xchg loopne sbb push js bound jg loope add sub cmpsl xchg imul and jmp cmp mov pop xchg imul cli xchg out or (bad) cs pop popf xchg outsb mov xlat dec mov lods movsl ficompl js inc mov iret mov aas inc adc add xchg add push test xor dec mov mov int3 push add paddb pusha and jbe jno push pop mov lds mov push iret pop sahf add xor enter adc imul inc and iret push fiaddl or push jmp popa testb int xlat xor jl pop sti add xor pop out and push jle add push insb fisttpl cs pop outsb ja jl sahf orl jns rolb loop in fnstcw xor push jg ja aas pop add gs add add das jnp ret push mov pop add sub mov add cmpsl push pop lock adc ret pop lahf push or mov pop loope outsb in lock bound push add xchg (bad) push addl and add lcall jl xchg xchg add out roll aam sub add jl movsb xchg sarl arpl push test in out jp cmp xor mov jns inc push pop sarl inc sub fs inc sbb push flds sub or and inc test push sub sub fild mov sbb cmp dec shlb (bad) movsl cld mov aas hlt int3 fist add add xor js fsubl mov cmp adc sbb nop inc test inc jp mov mov mov test inc das xor fsubr dec cli cld cmpl ja add jle push jbe pop and fnstsw (bad) or xchg push adcl sbb xor fistpl jae add jne mov incb (bad) xor scas add xchg fs sti add sub (bad) mov pop add xor movb cli pop sbb xchg add stos test add xchg (bad) aad inc dec jae adc in loop add add loopne test jg lcall leave push or inc and ret sti ds imul sbb push and xchg faddl lock dec fs push add mov mov outsl add mov repnz out icebp xor xchg jle jg cmp mov mov cwtl cwtl fwait pop clc xor lea cmp mov aam push test repnz add lock test mov aad jp cmp out sub add xchg sahf (bad) jecxz pusha ja fxch fcomip add mov icebp rcr cmpl out jns addps push jle cmp jmp jno fidiv jmp adc jle aaa xchg in sub cli jl mov cli pop push addl notl add pop aaa lret cmp fwait jo les je adc mov cmp out sarl add std push loop xor out idivl push popf add sbbl mov movsb out mov xor popf and xchg test add jne jnp hlt dec fldl sbb push sbb ret arpl loop add cltd test mov xchg mov fdivr testl add ficomp loopne enter roll rcrl mov cltd jecxz jbe mov push add sub test fadds push dec pop fs dec (bad) int3 add xchg jbe inc add mov add mov ret int3 dec rolb mov and cli mov jg js xchg repz add mov add inc mov insl movsb push (bad) lock add cmp mov repz shll xchg ds add icebp fcomip mov cltd notb fldt add loop jnp add movsl mov jg pop dec jbe rolb fsubl or mov sub int mov mov cmpsb sub (bad) sub mov jb int3 add lods push pop xchg jp push inc pop or ds (bad) mov pop push ja add add xchg cli (bad) sbb popl mov pop jo jle add lcall mov fiaddl add sbb add inc enter scas loop cwtl add mov adc or outsl jecxz sti stos pop xchg jp or hlt (bad) arpl add (bad) jg cmp mov xchg in shrb in aas xchg repz push xor mov test add orl mulb add and sbb repnz or or mov sub jl and mov push fnstcw jns mov ljmp inc xchg mov dec inc movsb xor xchg pop add inc mov cmpsb add es popa lods push call sub mov in outsb fisub jp ja add and lods xchg (bad) push das dec jbe aaa pop fldt adcl icebp test insb fldl dec pop push mov (bad) je lret or and lret lds lods cwtl fildl inc jl scas dec cmc add and dec or jnp sub jno add mov or out loopne mov (bad) int pop adc cmp pop pop mov aas in pusha cmp testl jg mov sub mov fcomps jns mov cs add mov movsl pop in mov mov nop inc mov pusha sahf pop inc xchg out std inc mov jp stos lret sarl xor sbb movsb mov stc addl pop mov or xchg (bad) xchg mov push jge pop (bad) (bad) in jl jle add orb lock inc add push fsubrp push adc add xor movl push mov cmp mov or dec add out inc fstpt jecxz hlt subl xor inc and dec call les (bad) cmp add mov mov add dec aas inc (bad) cmp cmp popf or mov or jge mov sub add inc and adcl inc (bad) push add out dec pop push pop add dec lea rcrl jo sbb out daa add inc xor jg jno ja enter mov and inc lods imul std jno mov mov enter xorl push cmpl pusha push sbb daa repz cmp pop add xor cmpsb adcb mov mov adc jl add pop inc mov pop cmpsb pushf aaa dec in lret iret ss sub mov or mov add or jl add xor mov icebp dec sarl gs push adc add xor adc out jp mov mov mov stos das test mov push inc iret mov sbb dec mov into stc loopne pop movsb adc or lds mov add mov fisttp leave test insl or or xlat mov pop mov es inc jno test jl outsl add dec and aam (bad) pusha repz lret add jge add ficoml add test jmp hlt add add scas in jbe jno add lds sbb fldcw (bad) inc dec pop les gs add sub lods xchg or add jmp mov xchg inc xor cmpsb xchg sahf sbb into test repz jo in adc cmc inc add fnstsw mov sbb lret stc mov aaa (bad) xor out notl and mov add pop xor pop cmp movsb aam mov sub jnp out lea fwait sub sub inc dec mov push jbe pop mov cmp or and jne fisubr pop pop or cmp loop subb xor (bad) popf mov push push or sbb and hlt jle add xor out pop adc push testl inc sbb test xchg roll adc jp and or in push fdivrs xchg fwait cmpsb fldl gs loop pusha popl or add cld fisubrl pop out add jp cmp cmp ret mov add jne xor pusha rcll add icebp fwait sahf les xchg das sub es push (bad) ljmp cmp mov aad xchg push xchg iret outsb lahf add cmpsl mov mov inc test roll std sub add mov or (bad) cmp mov push ja inc mov inc (bad) out push std mov or arpl mov add rcl lcall adc popf ror or mov fmul sbb ret dec xchg fldenv xchg mov pop int mov sbb cmp mov adc jne jge xor inc test inc push xchg pop jnp stc movsb jo fsts add insb xchg pop jb test and add inc sahf fild cmpb (bad) jmp cmp mov sub dec je jg mov fistp aad jl add pop rclb rcrl xchg mov xlat add daa xor mov push imul and pop test add mov mov add add inc popf stos add xchg cli pop stos and clc push stc jmp add cmp lret aas das out (bad) sub sbb adc incl inc dec bound pop test (bad) (bad) cld pusha mov out roll mov pop mov pop or add inc fs pop push mov mov fldt xchg stc mov ret (bad) sahf jne aam push in xchg lea incl jbe icebp inc cmp lods inc adc xchg adc jo lahf inc mov add dec push cmpsl add push fbstp leave adc test aam or push and aaa fadds xchg mov mov add dec aad iret hlt mov xchg add xor xchg and adc and popa arpl jnp or faddl and das mov orb cmp or sub xchg scas add (bad) xchg outsl clc lods and gs lret cwtl fiaddl inc xor ja add in push jns push push (bad) aaa sub jl push sub js ret add and test mov pusha jecxz lret popf repnz rorb fwait jnp mov js out xor cld fistpll leave ret andl in popa fist in mov sub jne shrl call (bad) sub add popa add roll js jno fidiv add push out pushf aam and mov rclb pusha cld adc aad push adc mov add xor dec scas pop stos dec add out cmc push das int3 addl mov sbb rcrb (bad) xor mov test mov out sbb mov pop add adc (bad) sahf repnz pop and ja sahf jo movsl out mov cmpl imul outsb mov sbbb pop (bad) mull gs repnz sbb insb jecxz decb push push sub add iret fs push test cmp xchg push push add rcl pop lcall stos (bad) test xchg add and out cs mov add stos cli or mov repnz mov xchg pop adc mov lods push rcll pop lea mov dec fdecstp jmp jo es subl in mov pop mov loope xor xchg add cli lahf js mov and pop jne loope mov rep jmp popf cli sbb mov mov add jmp sub loope aaa shl setg test xchg dec mov add inc arpl sbbl inc shrl cwtl jb into movb add cmpsl push pop ss push cmpb lret loopne push movsl pushf xor mov jge dec and cmc cmc popa and lds and repnz out jno pop inc ja adc mov cmp movsl or and lahf add aad inc sub dec fldcw ret jne push xor push faddl pop or adcb xchg std scas clc xor ss mov sub or mov sbb data16 cli sub xchg (bad) shrl xor sbb adc fcmove xchg pop or sub push mov mov popf xchg insl adcl mov out dec lahf js call movsb insb jb bound add mov sarl test shlb push scas out fsubl xchg repz aam jnp in jl in sti add insl cmpsl jnp iret or call push add rolb pop scas (bad) scas leave pop cmp xor xchg out mov sbb imul push add cmp insb mov adc push add test scas xchg lock mov mov xlat mov sub cmp lods jb jo loope add mov in rcll jp add leave mov mov sti cmpsl sub add mov mov push pushf out mov add jmp jae lea test test mov add (bad) mov mov and cld int scas popf cmpsl enter popf stc das jnp mov sub pop incl int mov aad mov dec mov xorb shl js xor cmp mov add mov sbb repnz (bad) and add mov sub mov mov in mov fcmovnu orb jne jg add roll out xor lds insb ret lock cmp add pop jg sahf cmp sub cs xor ds ljmp add stc sbb pop loope mov je mov int3 inc mov aam loop or add or aad je add scas cli stos add mov pop addl push sbb orl stos push jecxz dec inc xor xor loope lea pushf lods jb (bad) inc cli ret cmp add and js inc mov mov (bad) das add hlt pop jnp stc scas cmp sub jo or inc es aam and add push pop jnp (bad) jo add sti cltd or in xlat dec mov lods ss add mov add out mov je dec fiaddl inc jp dec cmpsl pushf lahf or and subb jo lret fs clc nop mov cmp jp add fnstenv cmp cli xchg add int3 clc dec test mov and ss mov mov and andl add and arpl lods pop fisttpl add pop loop adc das jo add popa push mov push mov mov pop aaa add stos and lret shr dec js add sub pop hlt loopne cmpl inc xlat out add sub mov mov adc insl add mov xor imul adc add int3 inc jbe add pop pop mov xor pop pop mov or and lods dec sbb (bad) mov (bad) aaa sbb fs pop pushf je fcmovb inc and add ret and sti xorl popa jecxz inc mov jge adcl outsl mov adc add mov jp nop (bad) xchg iret cli cmc add ja je jb add xchg inc push loop,pn cmpsl orl sbb ffree gs adc mov and mov mov jne movsb add adc add mov cmpsb mov out mov mov add loopne xlat jnp cmc lahf push in (bad) jmp fidivrl js sub xchg add jle inc pop cmp add into out add inc shr sbbb sbb insl jne ret add xor jbe inc pusha popw pop mov scas cli pusha cmp xorl pop inc sbb xor pushf mov add stos imull aad fcmove mov enter and dec fwait sti push add ds add adcl ret les sarb add scas mov cmp sub mov dec ret push jmp add push push pushf xchg mov inc sbb insb jne fstpt js insl add notl or (bad) mov and add push fildl jnp out push xchg push adc pop pop mov sbb mov outsb std insb shld cmc add in cmpsl dec inc andl test incb aas jnp and add or lahf test xor cmp xor inc std aas dec add or addl cmpsb pop sbb mov aad lret out stc and lret add push mov pusha add sbb fstp lock lods add outsl xor mov jecxz cmc xchg neg (bad) ret push push fadds aad mov sbb scas das mov push inc iret js dec add repnz dec scas add sub (bad) btr jnp inc push out imul push icebp mov outsl js jl in pop (bad) (bad) movsl sahf xchg and cmpsl lods xor or push fisttpll fwait divb add and loopne pop sbbb add daa jb sub cmp add pushf (bad) xor mov sub (bad) dec aaa shrl cld adc (bad) xor je sub adc cmp les leave (bad) mov ss adc mov int add scas mov add sti push ret les xor sub cmp mov icebp jo xor ljmp push negl insl and inc inc fisttpll sub lock add fnstcw repnz and hlt and sub call rdmsr adc pusha jg jmp inc (bad) jo add mov (bad) insl add cmp pop lret jle xchg mov push add or jnp add pop xor cld rep push add cmp cmpxchg js mov popa add mov push adcl or es popl jnp stc mov push and push js loop inc cli sahf test repz sbb fwait dec add outsl bound pop enter and jo add (bad) mov add xchg fwait mov jl daa xor cmp dec add pop mov jo inc xchg jb das inc xchg mov mov orl cmpsl mov clc cld in and pop push cmp es cmp shrb int dec out orw adc mov push add pop xor sub or or pusha xor leave ret insb outsb or mov mov pop add fwait pop dec push fimull scas orl aad mov dec adc out mov mov gs xchg push jo mov fsts pop insb lea pushf and add cmp dec pop mov add int3 arpl jnp mov shlb push adc xchg sbb sub mov test push pusha inc stos popf jle test mov pop andl arpl adc sbb lret jo xchg fsubl stos fistl fdivrs mov cmp add andl jno (bad) adc int3 cltd jns sti clc sub bound pop pop ret jge outsb xchg insl add mov aad addl sbb xchg pusha lret add sbb out pop pop in pusha mov push add popf fisubr ljmp data16 jo addb insb imulb nop sbb push into add int3 call lock dec inc jge clc es cmpsl sub outsb nop pop and sbb in outsl jmp cld mov cmpsl sarl add inc xchg jno add (bad) adc ret pop mov iret clc stos add ljmp cmp push cmp jnp add cmp test cmc mov clc xchg sahf adcl mov pusha int movlps mov dec mov mov faddp ss cs inc jo add inc adc sti and mov mov enter int js mov mov scas out cmpsl popf dec outsb add iret push int3 and and das jno mov stos mov mov or xchg cmp inc sbb adc xor push leave inc loopne pop jmp imul sub into sti inc pop fimull add popa or out icebp loop add mov add push mov lcall inc pop inc inc adc (bad) jne mov vmovups daa xchg enter popf jo add mov jb mov mov push mov jge cld or push and imul outsl icebp mov pusha sub jle add lret imul mov cltd ret push push add cmp rcll sbb add add test loope cmp mov cmp cwtl icebp and mov lods and scas orb push mov orl neg fisttp add sbb shlb xchg aad add inc add fidivr add in xorl or sti sub push loop lret cmp inc nop gs lahf jp mov ljmp mov mov ss fistpll stos call dec inc stos cld xchg movsb fcoms cmc insb jb add pop and xchg sbb je lahf or and pop add inc cmpl or pop dec movsl aaa mov xlat push (bad) lods jae sahf enter (bad) mov jp adc push div jns pop or xor fidivrl cmp inc add adc or shr push js sub pop xchg ljmp adc cmp add mov in cli pop ret push lock ds push pop add sbb add xor cmp sbb mov test sub add ja dec add cmpsl cmp rolb dec add lods pop sub add jecxz (bad) pop and mov jo xor push add in outsb mov je out xchg out repz push xor insl ljmp push adcl cmp xlat add mov xchg jno pop mov jae loopne inc add mov test mov mov jne mov sub xor cmpsb add xchg cmp xchg ficom mov mov in test outsb sahf push inc xor mov jle or std sub (bad) fldl sti or lret sahf mov mov mov add or ret cmc add sub add out inc fiadd scas add outsb cmp test xor push sbb xchg and lock push je and andb xchg xchg andl cmp add xlat mov or pop out xchg dec xor add (bad) xor test rolb push divb cmpsl add xor jmp jne cltd add enter incb jge outsb (bad) leave mov das insl addr16 push lcall ja out movsl push outsb divb pusha fwait ljmp aad out adc aas xor pop je pop pushf cmc cmp and xchg lods icebp ljmp xchg add mov mov shrb adc stc or inc xor mov cmp dec mov (bad) and andb cmp sti popf icebp in add (bad) (bad) pop insb add xor jg xlat add fldpi jecxz push xor sbb dec and inc mov fadd ss pop dec xchg dec (bad) lcall jbe jp and adc les add pop movsl add add movsb int3 pop dec xchg push call adc mov pop out popa add add mov sbb sbb mov icebp mov mov out insb add in cs cli es mov aas cwtl out je insl add pop test add repz xchg pop imul push insl mov nop cmp sub lods js (bad) aaa jns adc aad scas add push loope (bad) mov push call add jo push int3 lahf mov add loop ljmp fsts push xor or cmp pop test pop pop fsubs xchg pusha into cmpsl fwait xchg testl repnz roll xlat das sub xchg xchg jle sbb sbb pop dec insb mov rolb ljmp std rcrl mov jo fistl punpckhbw addr16 lds gs dec adc sar add enter aaa iret mov pop jnp mov pop addb xchg scas (bad) xor xchg push jle je test xor cwtl fistl mov xchg jle dec add cmp xor push hlt inc add iret adc mov movsb lock jge push mov pop sarb dec popa addb lret adc xor jns jg mov jle rcll sbb das loope push std in jl add mov or fcmovne cmp pop sbb bnd sbb ret arpl cltd jle cli dec nop add pushf daa xor jno add inc sub ljmp out cmp and pop push aaa outsl add xor xchg adc cmpsb scas out xor dec add push inc jl add jmp xor mov mov mov cwtl jne loop insb sahf mov add adc stos sbb push pop cmpsb or adc mov add popaw mov add mov ljmp (bad) xor int push outsb add out inc inc inc pusha add jae out xor pop jnp movsb sub sbbb iret jbe xchg add aas xchg xchg hlt add (bad) and mov inc jp ljmp fldl fmul js push add push lea out xchg shlb (bad) jae (bad) push inc xchg xor add dec sub add dec push out add orb jno xchg mov incb lods in xchg push inc pop adc and sub nop std js sub inc jno and outsb pop jns add aad or js inc addr16 fisubrl leave lahf (bad) mov int3 mov in push pop xor fnstenv je lcall jns test or out aaa jmp add inc pop lahf insb ret rcll test xchg bnd pop es mov xchg lcall jo or jno and jp ljmp icebp jns add xlat and insb adc inc add push pop add push mov push xor into or subb mov decl rcrb mov pop xor insb xchg add int lret jge imul call outsl mov jge xchg xor out cmpsl mov andb push imul repz pop movsb add sti xchg adc fildl mov adc push lods jns add or cmp sbb in jo fiadd icebp mov pusha loop and jns add ja test dec icebp pop add mov push adc iret mov or pop (bad) add stc mov push into pushf inc in xchg sbb ljmp mov and fistl jmp popl imul and sahf adc add in call bound punpckldq inc add sbb pop into add jp test mov aad add rsqrtps push rol inc outsb add sbb cmp sarb add bound lods daa mov scas add (bad) pushf sahf dec iret inc popa add ja mov push lret inc stc add push pusha clc std mov sbb sbb cwtl popa mov dec and mov aam rdtsc mov pushf rcr lsl mov add dec or dec pusha int pop adc lds mov push adcl daa mov jb fnsave test out inc stos dec sub add mov jo xorb js mov add out mov adc add (bad) dec daa fcom add adc lahf xchg int3 xchg dec cltd (bad) aas flds loopne xchg outsb in xchg xchg rorb pop insb add (bad) lret das jmp es addr16 outsb mov aas xor add movsb mov imul dec inc ds jae inc push jnp aam add in outsb lods add pop and cld shll clc cmpxchg and test bound lds inc je add or xorl cmp icebp mov xor or subl ret les xor add jmp push cmp mov sbb pop repnz xchg mov popa scas inc es divb addl sbb mov add add mov and inc js in sti push sti pop inc add les (bad) jns add ljmp push (bad) add pop out fistpl jle add daa push ss mov subl mov rsqrtps bound repnz (bad) inc add and dec out jne jmp xlat out jp lock push in repnz mov (bad) push fsubr roll mul mov adc pop orl push cmp or adc sub and lds iret push cmpb mov repz (bad) cwtl clc jbe insl add mov or fwait js add (bad) pop fnstcw rclb add xor xchg stc or sub cltd cwtl aaa mov loop lock xchg and addr16 cmp pop dec jo mov jo (bad) int3 add cwtd sti inc mov add loope cmp data16 fistp add sub (bad) jae js repnz add fstpt into sbb xchg ret push mov mov mov idivb fnstenv fldl pop pusha jbe movsl or sbb lret dec pop cwtl inc data16 xchg popf xchg popf test jno fsqrt js pop mov lcall mov add stos xor ror xchg add out pop mov jnp mov imul add jo xchg jne sbb aam push lds sbb inc sbb adc mov pop add loop mov sti subl (bad) jno fldl jge add and xchg mov inc cmp popf cmp cmc jo fmull lods insb cmp mov mov fsubrp and aas mov add orl das adcl bound mov insb push add mov mov jne xor call xchg cmc cmpsb push mov sbb out dec in or imul add mov movsl lock and test shrb mov xchg mov adc push sub bound sbb hlt dec lret sahf sub (bad) jb and je sub pop pop push sub xor scas in sbb insl leave pop dec popf mov and subb cmp add or icebp out addb fmull inc sahf clc mov fidiv and push and add mov pop or out add pop mov data16 add dec lar pop pop sub or push add mov and lods nop aad les rep (bad) xor inc add test sub mov inc add xor into iret add fidiv add sbb (bad) jo popf jl add sub xchg push add add andl (bad) xor outsb cwtl sbb add and aaa std test andl jl mov jle add idivl push cmc clc mov dec repnz cs mov leave lahf jno roll repz push push fisubrl loop cltd adc push xchg lret ss andb jo loopne adc das push lds pop xor push imul test gs leave movsl inc es dec xchg lea in sub push fimul orb push in add jns cmp (bad) adc fdivrs pop sbb jmp in sub ljmp pusha lret fs test push xor mov hlt pop mov (bad) xchg aaa mov es out adc add out jle idivl fsubrs jle add mov cmp shll int cltd xchg adc dec jecxz add imul mov loope or pop add add push cmp jle mov leave lods out dec xor cli (bad) lret sub cmp add int3 dec xchg pop cs add stos ds adc pop into adc repz outsl ljmp inc in sbb (bad) out addl insl add adc push add inc sub hlt daa push adc fcompl jnp mov insl add fisttp pop push add mov imul jnp std xor mov xchg and gs cli add (bad) mov or jno (bad) popl push imul add adc stos scas mov lods xchg iret fldcw mov jo ja add xchg mov pusha (bad) cmpsl mov aaa fldcw or pop add pop xor out adc fsubrs rcll ljmp sbb push enter test es sahf pushf pop stos ret lret pop sbb mov movsl add repnz mov subb hlt mov and jle movsl add es popf push push mov or jg outsb lret repz xor out and cld and clc push xlat fisttpll xchg lods xor cmp in adc ret jb dec cmpsb leave dec rolb pop xor arpl inc jb add loopne or add jo xor push or or push sbbl inc or adc (bad) sarb subb mov lret sbb ljmp sub mov adc mov test mov xchg shll popf push in insb loopne mov push jno sub out add aaa pop mov or sub xchg out add add mov sbb push mov addb mov insl xchg sbb popf sub into insb push add int aam pushf jbe test lods dec add and jg add or add fmuls leavew fsubrl or push mov pop xchg sbb inc adc aam sbb in mov rclb cmp lods je sbb add mov add add xor add add roll imul loop fsubrl inc je add jle and jno lret stos cmp jns jnp pop or jae (bad) adc sub int out inc daa inc or repz or hlt mov and pop cwtl cmc cmp adc out and mov js or xchg add loopne stos xor sbb (bad) fisttpll and repnz xchg into adc icebp pop frndint lret add lahf adc rolb es jns lea xor sbb add xchg fs dec mov cmp push sbb ds dec rcrb jg add in clc or xchg je add int aad pop sub push pop xchg add cmp mov add movsl jp stos sbb add pushf scas (bad) cmc fild imul or pop verr add (bad) xchg sub sahf mov mov pusha fistp or (bad) (bad) pop mov adc jnp addb mov adc (bad) (bad) pusha lods fs imul and pop xchg and mov add fwait adc fstpt jb add rorl lods pop mov clc les jge (bad) sti jns add out mov cmpsb add mov inc jo test cld jg jo xorl and jo fidivr inc cmpl push add or fadds adc jno push sub add daa mov pop add dec dec mov add xchg push inc (bad) fadds subl xor pusha pusha loop sbb arpl add jnp mov stos sub cmp fdivrl fldcw (bad) ja adc repnz pusha clc imul dec (bad) or jnp mov icebp adc or in inc outsl xchg insl mov arpl imul pop jl lahf sbb sub les pusha lea addl les lods rcrl add enter jg inc (bad) mov or scas popf inc sbb pop add xchg shrl push adc inc pop sub mov lldt pusha jbe add jno imul cmp in test lods scas xchg sub add pop dec bound fisttpll sti leave pop loopne jo (bad) dec mov movsb repnz sub cltd cmp add xlat push cmp xchg jmp js add test stos test rorb pop xor add xchg pop inc (bad) mov xor out and movsl dec xor inc or pop orl jmp scas add sub leave add popf push stos add dec inc int in jne in nop push aas ljmp mov sub jg xor add sub in jle outsb xchg lret adc paddd cmp sub sub (bad) and ja or ret dec xor shrd into dec mov ds ret (bad) adc in pop jo mov add loopne mov hlt push dec adc add cmp in aas push mov xorl lods js inc cmc push add dec ss inc in jnp add push mov outsb push cmc arpl mov xor pop sbb dec mov xchg push mov mov and andl mov inc adc mov jl int3 sbb test stos adcl push pop fistpll or adc dec hlt add xchg popa clc jns xchg aas or inc dec mov push xchg xor adc (bad) roll sub add cmp nop inc adcb int3 xchg push leave push add repz nop xor push add push loope ret rcrb adc xchg clc xchg xor pushf mov (bad) jecxz add mov ret (bad) jae shrl dec lds push or push push add sub insb (bad) fs inc add pusha mov and popa add ss (bad) dec sbbl fdivl rolb cltd loopne test or dec adc adcb inc jb push add mov push sbb mov jecxz js mov pop add test lods add or add icebp add mov jl push or (bad) movsl push repnz add xchg cmp ds or mov lods push lcall jmp aam jp push popf fldl aaa dec sti sub clc fldenv dec cmp dec add pop bound mov add or pop insl aam in inc push mov std clc pop je jp cs xchg scas pop push loopne mov stc jecxz mov adc popa and pop in mov mov push (bad) idivl adc sbb loope xchg dec lret add in pop and out es xchg insb add jl leave add stc in popa cmp cmc add in add lods dec fs in xchg iret adc pop or pop bound inc pusha push aam mov or call and orb and add ret out add test push dec lcall mov add pop sbbl rorl rcrb dec pop push movsb loope push add (bad) je (bad) push add lds sub out add insl leave fcoml inc and jle shrl inc adc mov add out dec xchg mov pusha sub mov aaa and push jmp xchg push or pop mov pop dec adc pop ret inc out push dec lcall aam inc lods or xchg (bad) adcl adc (bad) out lcall dec in movsb pop lea movsl lret cmp (bad) adc cwtl fwait ret add xchg hlt scas push stos mov sbb cltd or add sub dec inc repz mov fidivrl test or lret fstpt cmp cmpl repnz jae push outsl adc movsb or aam mov adc mov and add mov jl jnp cmp dec jecxz dec lret mov and in sbbl mov (bad) mov add xchg jb sub adc cwtl stc lods mov enter in add xor dec decl daa jle sahf add pop xchg dec (bad) jbe add add std (bad) in orl lds pop icebp cs orb sarb lahf dec push pop pushf prefetchwt1 adc add stos and negl fild sbb push adc push add sti imul repnz jle out les test jg roll inc pop or outsl pop mov or cmp jl sub nop test push jmp aas add cltd (bad) fiaddl push clc lds xorl sbb cli test adc inc pop fisttpl loope imul rcrb adc or movsb xchg aaa push lcall xchg dec fstpl pop pusha or mov mov dec adc inc add fistpll dec cld (bad) lock add int3 lcall fwait addr16 (bad) cmc aas xchg incl mov sub pusha jbe cmpsb push push pop popa inc aaa mov cmp inc mov pop fnsave fs adc std mov fstps xchg add outsl jne add (bad) or add cmp pop lods xlat push insb add inc fdivl push dec repz pop and or cmp test loope jmp jb and (bad) add cmpsl lea push es xlat cmp ret sbbb aas adc push jle iret pop sbb imul (bad) push fmull imul jo mov add iret dec push add test mov test pushf adc dec cmp jmp divl out adc push mov inc fildl dec push rolb add imul jne add mov sbb arpl repz verw and cmp sbb add sti xchg push add arpl out sarb enter aam dec add fdivr jnp pop aad icebp push jo loope sbb add jae cltd (bad) imul pushf sahf xlat cmpl insb rclb dec (bad) add mov bound shr js adc repz xor sbb iret scas popw sbb out lock aas mov sub inc clc pusha mov lea pop repnz adc xorb sbb in lretw mov xor and jbe andl (bad) inc sbb sahf stos mov inc lea sbb lret sbb daa add cs int3 mov loope js sub (bad) mov aas add sub sbb stos mov push data16 add pop adc inc loop fcmovne paddw push ds ds (bad) mov and fadds adc lret repnz jmp jae adc or std lods pop xorb mov adc sub js cwtl jae or add loop test or pusha push sub imul shrb add fisttpl push mov inc sbb add out imul in mov lret add xchg rcrb pop and add movsl subl (bad) fidivr xor cmpsl into lea add push push add lret mov cmp push add dec out sub icebp je xorb arpl js dec adc ss fnstcw lock or dec int3 push ds sbb imul or fldl mov sbb test push fs repz pusha cmp sbbl bound xor dec cmp out adc pusha loope into mov test jbe sbbb rolb sahf cmc clc addr16 popf add jge pop stos sbb stc adc sub xchg sub test popf sbb inc in gs stc dec dec fsubp std roll repz les insl jns mov xchg add lret jg cmpsl or aaa mov inc cli mov pop sub fbld pop cmp cmp adc repz cmp sub fimull incl (bad) ja jecxz scas and add pop inc mov fnstcw test shll aam jns xchg push cmpsb cmp add arpl test add (bad) cmc fnop cmp mov or pop jecxz cmp in aaa dec pop xchg add repz xchg mov add fsubp lds or lcall or pop jb in jno (bad) pop sbb or inc dec jae sbb push xchg mov sti xor sub jb jno add mov (bad) add push imul add or or jge add cli (bad) int gs pmulhuw nop fdivs xchg mov fcmovnu pop xor fldl add push or into idivl xlat out pop xor aaa imul cmp mov pushf movsl aas out adc inc js jb mov js adc (bad) push cmp jge pusha adc dec sbb mov adc in fs (bad) sub add add or push xor jecxz psrld pop mov mov pop bound mov rcll inc mov add sahf lcall jns out into loop mov pop orl cmp cmp insl mov (bad) cmp mov push lcall cli testb jp xchg mov cmp jl aad cli cmpsl push or xchg add gs add sbb fistl add addr16 mov push movb dec mov adc (bad) jo add mov lods bound roll add and dec movb ljmp into lods inc jo leave into adc scas in outsl bound xor sub test add mov dec and and (bad) insl mov jmp sti add orl (bad) mov add ror sbb push and fdivrs insl xorl jp icebp lret clc and jo dec iret fnstsw adcl dec loop sub shlb xor jo mov aam lods jo lock pop outsb pop test fcmovnu inc test stos pop xor jo dec iret xchg pavgw fisttp pop fldenv cltd xor and lock mov rorl xchg and pusha idivl ret aaa inc add and xor in sub leave push and add adcl dec dec (bad) add pop or mov add sbb xchg jge insl in faddl lods xor in adcb jb cmp xor bound mov flds aam adc jb or inc push in in push cmpb sub incb orb jbe rolb out pop (bad) mov out dec pusha add xor add mov nop inc out addl fidiv pop add jb xor or lock or (bad) dec (bad) orl xchg repnz and add push sbb jo sahf mov sbb or xor dec fldl inc outsb hlt into push scas jmp pop stos sub sub sahf lods (bad) cmc sub (bad) fdivl sub and mov and rorl fstpt add lds add xchg out aaa add stos dec movsb jp jb jg add rclb mov sbb out fldl add pop add or cmp cs and movsl push add es test sub xor popl stos add sub mov push subl add mov std imul add sti adc jle je and xchg js sbb fiadd add (bad) adc (bad) aas shrl cmc out insb push sbb cld lods lock cmpl push cmp (bad) pusha sub flds arpl test xor lock jno loopne fs sahf testl adc into inc je cmc push shrl sahf loopne fwait adc sub addr16 cmp cli cld pusha test (bad) jns (bad) gs das jbe mov pop push xorl pop pusha test (bad) sub add dec sbbl cmp js cld add or push adc out add pop fnstcw cltd fisubl fistpl jecxz lret ds leave faddl outsl add jnp add nop das sbb xchg arpl push add cld push or in (bad) out dec scas add repnz mov lods pop add and imul push add inc lret xor xchg jmp and xor inc fistp sbb mov rcrb sub mulb fidivrl int3 add repz add xchg sbb js popf movsb cmpsl add cmp mov ljmp mov cli sahf mov mov jno orb lods xchg add nop fisttpl pop faddl mov lret pop inc and wbinvd jmp in xor cmp xorl fs leave das std inc inc jns faddl popl jno je sti push sub adc in lock fs mov pusha repz ret add sbb int jl jp (bad) (bad) rcrl rolb data16 mov fisubrl fild jge or inc movsb inc lods inc pop (bad) sbb dec cmpb repz or fs adc pop fcmovnbe test sbb ficom sti sbb fcom fdivrl scas ret sarl add mov mov sbb sbbl mov outsb pop push add pop lods mov inc inc insb mov fidivl sbb in fistp out push into shlb add or cmpl push sub inc add (bad) pusha shl adcl mov cmp and popa stc (bad) dec std imul jge xor mov cmp push aas pop mov sub sub roll inc int sub push push xor xlat movsl (bad) jmp pusha inc xchg add xchg jb repz dec cmc add jmp loopne sbb mov mov adc mov pop sbb rcl pusha sbb popf cmp test lock lea insb mov add subb cltd je aaa add out (bad) js enter jg into cmp call test adc les mov jle je jbe lock mov call mov test push roll push push add ljmp add js xchg lahf repnz jns cwtl dec lret mov cmovae xor add and add inc xchg xchg or pusha and mov jne dec mov or shlb dec inc hlt jb loop jno push (bad) add dec jns dec mov (bad) adc (bad) add lret pop leave mov push lea cmc dec add andl and insb pop sub push fdivs sbb add (bad) popf and popl mov adc loopne fdivl sti push shrb test and popa insb xchg dec inc cmpsb testb inc loope dec (bad) (bad) rcrl jb out mov pusha mov push cli (bad) js fwait andb (bad) jo xchg add out add (bad) aaa xor popf mov push lea jle pop xlat orl jne pop test add scas mov std cld and aam pop popa mov sbb inc jmp dec xor sti faddl std or (bad) incb ficom and int3 aam push mov inc jg mov jno add jne mov xor rorl jo daa adcl cld or push inc and mov mov hlt sbb jle mov vsqrtps add iret lret outsb mov add jo jo enter add fcoml xor gs add xor (bad) add (bad) mov add xchg std sahf fisttpl or xor dec cmp jb and rclb sbb divl shr pop notb cmp add call xchg aam lret jecxz xlat scas push incl repz cs add (bad) fs add mov cmp lods mov imull jae add dec cwtl and inc repnz add pop and mov pushf mov fsubrs lea int3 jg neg int insb scas (bad) fbstp xchg lds push pop mov mov ds (bad) hlt inc test pop add (bad) jno mov xchg mov loope cmp out out pusha cli xchg sti lret cmovl add xchg rep cmpsl cli jle andb (bad) pushl push subb xor pop mov movsl or mov xor xorl jb inc test adc sub jne add ret insl addl sbb or stos jmp mov mov ja test mov out xor mov add xchg stos push cld shrb cmp sbb je pop jmp into adc cmpsb and cmpl popa xor or (bad) pop add orps xchg adc pop and (bad) cmc push jnp (bad) fs mov cmp inc pop mov xor (bad) cwtl test xchg jbe add adc scas fs mov popf and push mov stc xchg int inc and mov mov aad out jg push add add jnp ficom inc mov popa orl pusha sub cmp xor dec std out loope popa add test jnp add mov sub xchg (bad) xchg popf jmp add fisubr dec inc jge add movsb lret and sub adc add mov cmp movsb pop iret inc cmc push jecxz cmpl add or sub mov and roll ljmp lret mov js test lods mov roll fistl in cmc xchg sub ja cwtl sbb pushf sbb cmc addr16 addl or mov pusha push test dec fstpl pop add call testl lcall ss pop cmc out es add mov jae bound loop inc push mulb and incb (bad) or ret inc les scas add es xor faddl test adc xchg ret add or jae and inc je adcl les mov lock (bad) sbb (bad) pop pop out xchg xor push add clc fidivrl add jno call popf xchg lds dec sub stos icebp pop fidivrl pusha inc dec popf movsb cmpsl imul jge sub dec mov jae ss fisubl sub insl pushf movl stc mov fnsave inc add fmuls jle pop xor inc and xchg lret add mov mov stos sahf aad xor and adc cwtl mov out xorb push int3 fidiv add mov aas xchg mov sub lcall addr16 add push mov cmp xor mov or pop nop pusha push add and cmp test mov cmpsl std push addl sbb jecxz ret add xlat aaa enter cs sub jns push add fidivr mov cmp imul cmp pop ja jl jo (bad) loop daa cmp jmp add jg and add mov jns sub dec mov sbb add inc mov xor xlat add (bad) scas push ds fiaddl sub inc jno mov lds push or mov ljmp daa stos iret ljmp fsts mul icebp xlat cmpl pusha and push add add mov ficomp les and and jmp lcall rorb mov xchg out and int add mov push cmpl ret sarl xor into mov in bsf and sti sbb icebp cli je add push or mov icebp bound dec mov inc push add les push add mov xchg fdivr add enter (bad) icebp jmp leave enter ret rcr pusha cmpsl and lfs add (bad) repnz pop fisttpll mov push jb lcall leave and sbb sub jno pop pop mov cmp mov call pop inc adc or outsb xor shr sub mov mov jge add cmc sbb inc outsl add ret jns out movsl in add pop lods cmp or out xchg pusha (bad) lock xor pop jle sbb sbb push sbb or dec sub dec add push inc pop inc push rorl rolb mov test mov cs mov lock out xor jbe add int pop add adc mov sub cmpsb test pop popa mov adc data16 push mov popf mov xchg and daa or lods enter add jne in lgs inc mov adc push insl scas mov ds add hlt add fsubs out add adc js fucom dec sbb mov gs aaa push daa xchg in adc mov add pusha stos add jae cs addl nop jecxz xchg out je jmp fildl mov ss xor (bad) add gs cmc mov in mov sub or lock lahf cmp (bad) push or jg fwait inc lcall aaa jb faddl jo xchg pop and mov fnop jns outsb (bad) hlt adcb scas jp lea inc cwtl pusha sub or fnsave sahf test inc adc mov adc xchg mov push inc sub inc add fs mov nopl sub pop push movsl mov mov lds popa test sti pop add jmp loopne (bad) jnp notb mov add xlat jp add cmp add dec mov clc pop call loope mov shlb ljmp out sub arpl push pop inc (bad) fcmovnb and cmp ret dec fdiv sbb xchg lahf insl shr push cmpsl inc mov inc adc sbb sbb cmpl xor fdiv fwait add add es test sbb shlb push pop pop std push (bad) ds xchg (bad) lret notb loope lret fs fs xor mov (bad) leave cwtl add cmp pop (bad) loopne les incb lcall mov mov mov repz and mov xchg mov in notb mov scas clc jmp mov in leave cmp fs inc add mov xchg in sub sahf hlt xchg aas data16 mov xchg pop inc push pop insl aam rcr sbb jnp loop pusha sub inc rcrb (bad) repnz adc xor add push mov xchg xchg mov jb insl add sub pop add add ret fadds adc or pop sub dec int cmp mov sbb sub scas mov loope push sti imul dec hlt cld inc rorl lods test add push pop (bad) add fstl sbb add xor cmp pushf out inc lret adc or adc pop or ror (bad) jbe jl adc int inc rcrl push addr16 pusha stos popf add xor push addl push fs add jo xchg inc jle fwait add push rclb nop or mov cmp dec pop mov jbe stc xor cs or mov test xor mov xor jne rolb cltd (bad) rclb orb sahf in cli pop je sub test add clc sub or add pop xchg cmc mov insb out scas xchg add dec shl movsb sbb add iret dec mov xchg jns mov insb jb popa pop outsb push mov adcw pop stc add push push or add xor adc pop sarl add mov and call imul outsb out js cmpsl fidivl jmp push mov call add and push push mov dec icebp pop add add inc test iret add jnp jg ja jle and cwtl scas sbb add dec shr xor add or xor js je ret push mov cs and ss adc sub xor lea jle shlb and pop xchg movsb fdivl popf or add mov (bad) adc fstpl scas or add addr16 mov mov inc test jmp rcll lcall in cmpsb imul repz add push cli lea lcall and adc jo ss add xchg subl xchg xor mov mov ret push push out add ficompl sub insb xor cmpl inc or repz push shlb jo pop mov aam xchg iret fwait push mov pop mov add ret xchg (bad) and adc sbb xor ja int3 insl xchg sub xor lods pop mov and loope (bad) mov sbb add cmpsb imul sahf and add jnp or xchg icebp pusha push push aaa jecxz or xchg mov je pop aam xchg xor adc xchg pop loope out mov sti xor test inc jle aas mov inc jl jo mov popf xchg fimul sub push cwtl fs mov push fiaddl sbb mov cmp orl or dec fldcw or or mov cmp xor jmp clc lods rolb sub insb add popl add inc jle nop (bad) mov fildll out rcll add cmp ljmp adc add xor dec xchg addr16 (bad) adcb cmp dec loop and nop lahf dec xor ja out rcrb cmpsl sti test ret shlb js add cmp lock push and (bad) cmc pop in sbb lods xor jno shrl ljmp jb cmpsl fs loope aas push shrb dec scas mov inc adc mov dec adc subl push jl jno add mov inc or inc ret add arpl jg xchg add sbb lods dec or cs fs cmc push add push cmp lret mov ret jne add outsl jnp adc inc js repnz push mov wbinvd adcl push push int add mov rolb xor and push imul and add adc test mov outsb pusha xchg out dec xlat fnstsw enter sahf add insb and pop add leave dec (bad) lret bound jbe enter cltd insl add pop jb and rcr dec add push mulb mov jnp add loopne ja dec add xchg mov mov pushf and cmpsl jp hlt add enter inc jb arpl push pusha push push add nop push sub and add insl xor or mov add jmp pop add cmp push negl repz dec in push push sbb push dec or cltd xchg adc rcl (bad) sti add push ja mov xchg mov inc add add imul and sub ljmp in inc cmp aas flds add insb sbb add es dec cmpb add aad dec pop xchg dec orb push stc add test inc outsb mov lods sub aam and cmc push add sub in testb push leave pop roll mov xor stc add dec pop scas mov jne andl xor repz add das dec fcmovne or fwait mov push out and push mov sarb sbb dec cmpsl mov mov scas xacquire xchg in add inc push cli mov cmp movd or mov insl add ror jnp push and sub mov add loop inc add mov andl arpl sahf add ds fild out fs adc setp sub mov add jae sub pop icebp add dec cmp lahf test sbb adc leave add lcall push add fdivrs in rcr mov pusha cwtl popf cmpsl add mov xor mov jecxz add xor add dec or jns sbb into rol in mov pop sub mov mov add push fnstcw add or test inc cmpsb add push nop pushf pusha sub pusha pushf loop cld and lea scas les xchg push andw ret popa adc out mov lahf in pop dec lds pop pushl cmpsl xor mov xor gs inc fsubs push stos outsl roll in fwait cmpsl stc inc jecxz and lds jmp ja pop ss out adc leave xchg stos dec push dec xorb adcl push and pusha (bad) hlt sbb das test lods not pusha push add xor sub add movsb push stos jg sar mov mov cld in cs push cmpsl dec add ds adcl fcmovnbe push icebp xor scas inc addl jp add adc outsb adc jmp cmpsl sub xchg mov ret shrl dec push pop lea sub and loop (bad) popa popf cwtl (bad) jp add pop jecxz inc dec mov add mov mov rcrl jnp xor sbb incb add xor pop mov inc xor fnstcw xchg insl lret movl aaa jl push adc and jnp bound stc out gs mov push pop pop jo xchg mov mov sub std or add jbe ja add cmc imul jp jo data16 fwait add test xor insb roll enter inc lock add add loop cltd out sub fidivrl xchg jbe cmpl and mov cmp js push (bad) add pop je andl inc incl cmc fnstsw adcb test or and pop xchg xor add mov xchg sub inc push add fbld push push js sub sbb clc adc int push xchg mov pushf xchg and (bad) repz lock xor es fisubl loope xor adc adc add mov mov scas lds addl dec pushf repnz add mov out aaa loope sub push cmp enter outsl adc and xchg cmp push ljmp pop leave mov dec cwtl add push ds (bad) js test fildl addr16 outsl add add push sbb pop cltd clc push stc (bad) addl test add pop mov xchg add pop mov lret sbb cltd or je cmp mov add mov xor and lods out jl jno add idivb sbb add push lret add pusha shll decl into lock dec and jl mov push iret push repnz jo fsubl sub rorb add test push add lock cmc mov sbb add (bad) and xchg movsl sarl add lds dec xchg icebp sub xchg mov xor push gs rolb xchg or fwait les jl mov or iret and divl inc and mov (bad) pop out xchg dec stos add andb aam out jp jle inc repnz add sbb fs add dec stc (bad) test adc add mov pop dec mov jb add or pop add popf add testl popa pop push bound or mov mov xor inc and jno push mov gs push or jnp mov ret das mov mov lods (bad) (bad) cmp add inc jne push (bad) addl fsubs xchg and out loopne sbb push aad and iret inc fisttp je add outsl rorl movsl pushfw inc adc mov mov lods out xor pop (bad) movaps pop add inc rorb daa neg push sub inc push mov (bad) push sub mov sbbl cmp out sahf pop pusha shrb aaa add jecxz mov daa iret xor mov fidivrl add cmpb inc jle mov mov add in mov mov jp,pt std adc lea pusha roll sub jo add sbb sahf mov orl adc test lret sub add add addl fisttpll les enter pop out and insb sbb mov push and jae sahf inc push clc add pusha (bad) scas (bad) ljmp js stc and insb daa enter adc clc mov fwait add mov into mov xchg adc inc shlb pop xchg ja xchg xchg add cmc hlt inc push adcb imul cs movl sbb cltd push test imulb sub xchg pop lock and push adc ret mov inc inc jle psubusb std andl out scas imul inc out lret jl dec add sub add mov addr16 (bad) in push add outsl pusha jecxz dec scas cs in add dec repnz add out xor add jp push jp xorb dec sub push mov add js push add inc xchg add fbstp add add cli int aaa cmp add je jnp jecxz push in arpl int3 pop (bad) pop sbb sarb gs add dec inc cld pusha in out push push stos mov (bad) adc add or aad sahf mov adc outsl xchg jne sub xor sub xor or mov je add xor fildl mov leave or cmpsl push rolb mov in add inc xorl inc out imul push push cmp lods mov jecxz (bad) and mov add dec jge mov into add hlt cmp jnp aas xorl add mov sub push repz out lret xchg sub mov sbb mov std add ds outsb adc push inc add adc out push jbe add or add insl ss xor loope in ds jl lahf aam ja scas mov inc rorb rcrl add jl adc iret loopne mov cmp (bad) imul cmp mov stos mov add xor mov push pop push scas adc lcall outsb mov sub inc mov rolb xchg inc std stos scas add push adc jne out gs aam sbbl sub xchg xchg outsb in cmp insb iret sub out fnstenv add inc fimull cmp cmc xchg adc movb pop or jo cmp add daa xor push js cld stos stc dec xor lret sbb xchg add mov sahf dec repz (bad) js or and cmpsl push movsb aad test push aam mov (bad) hlt cmp adc push frstor xchg lret push jecxz xor jno pop sbbl in push out lock or mov adc pop enter mov popa insl rolb leave push mov sbb xor outsl mov push xor pop jg xchg out mov daa fistp push jecxz rol add push inc clc jo arpl dec roll sbb jbe pop cmp flds sti sub aam cli addl rcr sub cmp add or mov cmpsb (bad) ficomp stos scas mov push add dec and sti pop inc add mov mov push mov mov push mov add inc push xchg stc and sbb je dec inc arpl mov pop mov sahf movsb or inc xchg (bad) icebp lret int3 add add rcll lea lock sbb cli iret push xchg adc repnz rorl jb jae inc inc fimul test pop mov inc pushf out push sub xorb daa add adc inc aas xor add dec pushf fcmovbe push bound xchg or add std pop xchg (bad) xor pop inc add aam or push mov push add ret outsb call add and out sub fimul xor arpl jl (bad) adc sub sbb mov mov mov (bad) or pop cmovae jne add xchg scas cmp add fdiv leave fcmovnu mov mov inc add ret mov cmpb or sub or aad pop ret xchg adcl cmp cmp xchg xchg and (bad) inc mov adc add add fs cmp rcr adc repnz cmp add jge,pt fcomp jbe addl xorl and loop xor xchg pop xchg xor lods fadds out push jl mov into pop jno inc xchg nop mov pop in adc gs pop ja sti or rorb aad pop loope lods xor mov add push push pushf (bad) or cmp insl jns lahf scas pop int sahf das add or aas je add lds dec adc pop xchg mov outsb inc or cmpb movsl push leave (bad) lds pusha cli imul mov or add fidiv push mov mov (bad) je push add sbb xor add pop fbld or negl addr16 gs addl in jbe xorb mov or inc push add add fldcw stc fwait movl (bad) test dec sbb inc push pop push je sahf cmp fwait sub cmpsb cmpsl push dec push inc mov jo add push into fwait add mov and cmp pop stc mov adc je ret inc mov jo sub lea add ljmp add into cld and jns dec add dec rcr insl out nop ja popf push mov dec int je mov add in pop sti add inc push inc and hlt or cs mov cmpl adc and stos outsl inc cmp cmp add inc sub add es cmp add popf mov add jl andl add sub cld (bad) xor pushf addb jno add jno pushf dec pop inc sti fistpl stc outsl xchg or bound xchg push aas add mov add or cs jno pusha mov in xchg inc cmpb mov mov aad inc sub push and pop add (bad) outsl out ljmp aas mov mov or sub jb insb xchg inc popf xor add out loopne cmp dec sub fs imul cli insb jl aam or fistl testb jo mov add inc loope add adc insb or jbe jge push push xorb std nop lret jle pop fadds inc lock clc jne jno mov mov fidivl xchg xor adc mov jne add jmp push add jbe inc sbb cmpsl test inc pop dec and add idivl into inc es push sub xchg add lret pushf sbb push add mov cmc or rcll push mov and xor clc sub xchg cmc mov daa cmp dec cmpsb mov adcl fimull add cld adc icebp inc xchg js test and pop cmp or lret lcall mov push fcmove out mov add push mov mov sub sbb outsl inc imul add xchg pop jge sub add imul add jb or lret or add push pusha test xor rolb xor ret push add cmp add xor into mov adc fcoms jno add call sub stc test sub div jns jne push push daa pop fnstsw icebp pop (bad) add pop and sub jnp andb jns push jo and lret cmc (bad) or pop pop jge sub add pop (bad) jno and jl daa dec or dec aaa add adc repz stos mov pop pop out es neg mov (bad) push (bad) movsb inc xor push lods add outsb cs push iret ret xorb xlat or jecxz movsb jbe xor pop push cmc push lret sbb add cli lret out add pop loope out fisub push popf add test call push jno add add jae jl jp test pop and mov push jg js mov les fiadd and and fdivrs add mov inc and test dec add push mov sbb mov xchg add movsl inc jecxz inc sub jg subl es dec xor mov mov mov add cmc sub xchg sar lret mov data16 dec lods stc add rorl das mov add jmp adc jne push fadds inc rol pop scas aaa lret sub mov and test ss sbb test sti cmpsb push cltd ret add fildll jg add mov out sub add xchg popf pop cmp clc aam rcrl adc inc mov stos std adc les mov repz pop es add push ds dec sbb dec jnp nop mov clc xrelease inc out dec pop sbb inc sbb insl cmpsl xchg or dec mov add pop (bad) pop inc jle mov cmpsl loop icebp push inc pop mov popa jp js jp mov pop rol ss daa mov (bad) fbld jo pop (bad) out cmp pop lods imul jle into lahf pop jl lds (bad) lea movsl sti imul movsb mov xor add cmp xlat pop pop or sub stos pop imul and aad dec xlat or sahf sbb jnp sub movsl xchg mov in push jo loope add push pop add cwtl and adcb pop mov push pop adc xchg dec fwait inc test mov pop xchg mov xor cmc push add int add cmp addr16 xchg enter push and pop rclb mov jo add mov das mov ja dec sub adc hlt mov mov in nop add sub orl aam jg stos aad jae add lcall jb add mov xchg fcomps out mov testl adc xor mov mov cmp cmc (bad) add icebp lret sub dec stos add xchg push leave mov sub adc subl fucomip imul add nop pop or cltd fiadd xor loop divb xchg jmp mov and mov add out call add mov cmpsb pop subl push jbe add xor sti je jecxz pop mov inc mov adc xchg jecxz (bad) lods inc sbb jmp jp je aaa push sahf sub inc das loop and jne cmp in lods movsb pop pushf out fild ret xor adc stos jmp andb push data16 inc jle pop add and sbb aaa add out sbb add jns popf and xor out add xchg ffreep lret add mov or pushf out imul add mov push mov in dec (bad) xor (bad) xor je cmpsb xchg (bad) call push sbb sbb sub jo push (bad) or jb add outsl cmp pop adcl cmp not add jmp push loope add pop xchg call mov mov mov loopne test add add lds out xor sbb pop sub mov cmp cmpsb aaa xchg frndint je inc add jns mov sbb fs push add aad mov rol (bad) (bad) xor sbb add cmpsb pop insl mov popa ss lock mov cmp fildl jnp add push stc str push mov addl std cmc cwtl inc add push sub cmp cmpsl mov jbe add jns out rolb insl mov les cs ret jno pop mov sbb lods inc mov add mov jp (bad) cmp popa lock testb add out outsb imul add xchg xor hlt pop nop mov pop cld icebp adc mov pop test dec mov aaa out lcall scas jg ret mov or xchg lock sub lds add push mov (bad) pushf rcrl and sub xor pop jne mov (bad) lcall (bad) popf xchg aas xchg mov es sti cmp dec xor stos push mov add iretw stos sub cmpsl lret mov xchg jne sbb dec lahf mov js fs add cmc es je add mov add or cmp adc aam cmpsb push cmp cmp xchg xor dec inc mov int3 push push sbb shrb add frstor in lcall mov or insb stos cmpsl or xchg inc and xor clc mov (bad) ljmp imul leave xor fisub and lret loopne add sub lock xchg add dec movsb dec aad jne add or sub cmp adc xchg test roll aaa in mov shrl cmp sub jg addr16 cmc add fisubrl add dec jge cwtl out mov add lahf pop push dec push popf add jp ja dec mov add (bad) (bad) mov add dec jae cwtl addr16 adc push add push jge add pusha jle add lret mov jae add daa lods sub push jo cmpb jo std subl das pushf sub andb scas xor (bad) int xor jnp mov fsub pop (bad) in adc add jns pop outsb int3 mov xor nop mov add (bad) jl test xchg add in pop movsb popf stc add and jnp lods (bad) out insb mov xchg pusha sub fnstcw push (bad) lods push xor out addl cmp xchg fs add shlb sahf aaa mov and push fnop iret es mov orl js dec inc add mov movsb sti fcoml add rdmsr adc repnz les subl dec loop xor jge push jle fstpt xor add cmpsl fadds in nop inc loopne movsb add add (bad) addl syscall xchg pusha xor js cmp cmc and push sub inc ret xorl jp cmpsl push add test xor (bad) sub xchg shrl dec push mov inc jecxz jns add int3 in jnp add push cmpsb mov fnsetpm(287 scas sbb push inc dec fisub fsubrs or adc mov add mov dec lds pop or inc scas ljmp ret or jp or mov out mov mov sbbl inc dec mov dec xchg pop shlb jle pop add sub cli xchg xchg repz push push dec cmpsb add sub cmp xor nop sub loope cli add enter jo add cmpb mov aam inc lahf cmpsb pop mov mov out add mov shll and add rcrb push add or lcall jge adc add xor jp out push negl jnp dec mov (bad) mov pop jecxz jns inc xchg xchg movsl nop inc lea jmp outsb subl lods cmp and aas mov or imul int3 cmc outsl ss ret sbb cmp add mov clc xor add in pop adc xlat cmpsb pop mov mov fmul mov jae je inc xor add pushf jo leave jle pop add jb xchg xchg jbe mov cltd fwait ljmp out jne push pop or add inc adc add pop ficoml push (bad) inc (bad) mov cmp shl ss sahf lret or dec bound lock add and (bad) std xor add inc or add es subl xlat (bad) cli pop into push and movsl test jo fiadd fwait jb sbb xor add or push sbb dec jb push xlat xor loop jle mov adc aam outsl and mov add mov pop push sub mov dec mov xchg rorb jmp fcomi sbb ret jb pushl cmpsb lea js cmp mov mov das inc mov cmp pusha (bad) xchg sbb add jns sbb loop fild scas inc mov pop mov sub adc je jns cmp jg outsb dec pop aad inc add cmp add js push xor into test jnp inc ret mov aas add fldenv popl rcrb sub mov pop sub push aaa je pusha fmull es rorb (bad) add xchg inc cli aam sub lods jg cltd into add lret rcll fildl repnz xchg adc mov mov popf test sub bndldx add addr16 rolb cmp push pop cltd jl dec cmc test add xlat jmp jnp fnstsw or sub add lock and sbb js mov shrl fnstcw jge xorb or imul test andb sub cmp pop mov std in test xor int3 negl rcll ja pusha decb popf pushf das mov iret add jo les popa jo jle add ret scas out adc clc add aas pop cwtl test add aaa xchg gs xor dec xor lock push add mov xchg sub xchg add push call lahf and test add xor add sbbb xchg inc lds pop pop imul add pop jmp xchg add fdivs test push lcall punpcklbw loopne jecxz inc xchg mov out push and add dec popf pop add incb aas shrb das add push cli pop add xor sahf (bad) std sbb (bad) mov inc lods add rcl fdivl outsb inc inc enter rcrb pop test xor (bad) add insb out xchg jmp xor pop inc lret mov rolb in jp mov add inc dec dec add mov inc ds mov jle mov test lock jg push mov jp xchg jmp or test add dec outsb popa ret cwtl add fs push pushf lds sbb (bad) daa in jae mov dec lret stc add or es shlb push cmp test push jae add into and cmpsb aas les add loop in (bad) test leave in pop negb inc enter nop dec andl popf dec out dec fldl jl rcl mov xchg sbb cli inc inc cmp enter add push xchg popa push mov mov sbb dec sbbb sub sbb sub in popl cmp pop jge pop fsubrl jo mov mov add sub adc sbb fldt scas aaa cwtl jb mov gs add push sahf mov sbb cmp hlt dec pop fwait xchg dec aas pusha repz mov pop orl ds cmp leave or pop ss movsl sub jne pop lret sbb lea inc subb add clc fwait cmp inc cmpsl fidivr add xorl rcrl add sbb stos mov add mov loope adc movl fsubrl add jmp call rolb gs jae aas add fdivs fiadd ds dec (bad) xor ja push lock cmpsl movsb mov xor into cmp push je shr jo jb inc mov int3 cmp mov adc mov std fdivrl adc add aam dec push adc add cmp mov or pop movb ss pop add les sbb sahf inc jns subl sub mov cmp jns cmc decl (bad) or mov imul stos sahf sbb (bad) jecxz add lret mov ror add std fist xchg sbb roll or into loope sub roll mov fisttp pushf or inc and pop daa mov jp aad mov pop cmpsb lds xor adc test adc rorl bound add cltd daa pushf sbb mov into jmp cmp xor xlat add das (bad) push sbb out mov xchg inc sarb je push popf mov and insl add inc mov cmp cmpsb (bad) pop cld outsl mov push add das add cmc mov add and or xchg lret xchg xchg das cmp ljmp add mov mov xor sub push and and les inc fs sub pop in mov mov jl outsl jl add xchg dec add testl sub fsubl push subl mov jecxz xchg loop add movsb mov pop jge xorl push add sub xor jo cmp in pop mov sahf pop pushf push push push pusha adc adc mov add fdivr xchg scas shll lods push add insl out in inc dec add dec movsb scas (bad) inc pop add rcll jb std push or add xchg push add push add lret bound add (bad) or push aaa push (bad) mov xchg push dec das incb stc and adc loopne negb gs rolb dec jbe inc outsb jae push add and pop jne mov or pop arpl pop cmc mov iret ds xchg pop add sbb add adc push repnz lds cmpl sarl dec ja jge or xchg out inc pop cmpsb jne or sub in outsl dec movb movsl and (bad) mov pushf cmp add push mov test add cmp pop cli jg jnp roll xlat data16 popa ja sub stos cmp pmaxsw adcl mull adcl jne or test jl xchg mov push pushf clc pop sbbl push mov (bad) sbb outsb cmc sbbl xor movsb xor sbb sar (bad) lock add lods mov add add mov fnstsw add fsubs adc in add jne outsl mov sbb fs repnz imulb pop mov lods or mov (bad) push sub out mov adc xor test insl imul cli dec mov mov ja dec mov (bad) popa and push cld jmp add scas and addl mov sbb jbe jmp xor loope push dec fnsave jge add fbld or cmp add dec nop ret int fs leave sbb push mov (bad) push cmp and pushf jbe bound sub repnz pop loop dec test cmp shlb lret mov stc das loope arpl and aaa add add loopne inc add dec ljmp mov stos push mov (bad) push icebp out add inc xlat adc mov pop repz jl lock xor cs clc and pusha inc movsb mull mov fisubl add (bad) dec inc mov sbb cli (bad) sbb xor cmp lret shll or pop int3 dec (bad) verw xchg mov sbb (bad) into lret and dec in sub add bound add or add jmp fstpt rolb mov cmp out add (bad) sbbl stc aas lcall pop pop fcomps pushf fidivl mov cli mov icebp add cmpsl jno lds and roll test mov jbe add pop div jle je pop mov jecxz mov test or dec xor jno or push call cmp int fildll mov sbb jl test push add or out mov jle or push lock add fstps (bad) pusha inc ja push mov xchg xchg ret pusha sbb stc outsb jle test mov inc out or cmp add and add mov push popf cmp inc and mull cmp add pop mov adc jl loop shl and insl inc test add arpl loopne dec test lds pop push jbe lahf addb das or jle add push and in sub pop cmp aaa sbb je repz push xor cmp lods ret pop fcmovb mov rolb adc shll fstl cmc jne push cmovg lds mov pop inc add ret pop jle call or out repnz cwtl cmp loop cmp imul sub ret and add jle imul xchg dec adc out and pop ds mov movsb adc (bad) add add into adc and (bad) add push lretw mov jne xchg and setno push cmp inc push cmc lock dec dec mov mov fidivr add in xchg mov pop or inc jp (bad) int inc roll arpl sahf out jle cwtl adc mov into jecxz add adc ficompl add cmp add adc xor js pushf adc arpl jmp popa mov add in push (bad) jnp loop addl scas pop pop addr16 xchg cltd jle movsl and add push cmp push jns pop dec mov mov cmp repnz dec mov jo inc pop sarl pop add lret add shl push sub aas imul or add and sub sub adc fwait add dec lock inc xor rcll jmp sbb mov add mov and mov enter xchg js and jge push es ficoml mov lret out ds sbb push lods js add mov xchg das faddl add ret cs in add (bad) jo es add adc mov ss push dec jmp sbb aam (bad) jnp add cmp push adc xchg dec add mov incl das roll lds mov lahf in and push aas fisttpll out pusha or dec sarl cmc popf inc pop inc rcrb cmp and test add jns inc orl scas xor (bad) mov cmp push rolb inc sub or dec (bad) std xchg les add cmp in pop mov dec dec (bad) push jae pop rclb dec mov je push aam inc je aaa sub cmpsl fwait add js dec loope add push aas cmp dec pop fiaddl xchg mov cmp add stos lea add aam jae test jnp mov iret jecxz push stos enter sbb pop dec mov into add mov add or adc sbb rolb sbb pusha mov xor popf or in sub rol call js and aas cmpsb inc ja sbbb adc jp,pt fnstsw add int3 dec call cmpl jns lea add sub jge jo,pt sti sub shrb add outsb (bad) add sbb loopne test sub aas xlat movsb push pop aam popf add mov mul add ret mov fdivr jmp push xor fistpll stos aaa add add scas or sti sub or jl inc xorb adcb outsb sub ss insb mov inc adc xchg arpl push mov sub repz lock jnp add movsb fs mov gs add push jb add lods imul add inc (bad) (bad) add in cmp add push pop cmp scas idivb cmp fst push jg call pop xor insl into pusha or cs or pop inc mov cmpsl mov std js xchg daa jo xor into sbb leave pop js pop adcl adc jae mov inc repz or sti add inc push mov push sub lea mov adc sub or cwtl add jge inc in jmp inc mov pusha push int ja nop fsubs mov pushf push cmpl and mov repz adc sbb inc inc mov ret add fildll add adc push jae in xchg add pop out sar add dec jmp mov add adc faddl push insl frstor mov es mov pop popa pop imul sub aam repz jb add stos sub xor scas or jno and xchg jo jg sahf dec mov xlat mov add and push repz leave dec add rclb mov loope add nop stos mov ja dec data16 sti push cmpsl push add sub adc xor bnd flds std or adc push push jnp add dec (bad) add sub mov jge (bad) mov jns sarl push into pop aas pusha xor dec test pop or jmp mov dec (bad) int cmp push fimul addl bound jp jno cmp xchg mov int add xchg in into test add repz add push daa pop xorb (bad) xor xor daa pusha and mov lret into aaa cmp mov add aam fwait pop adc icebp add test or jp push ficompl inc cmp add cmp jbe mov cmp lret orb arpl les in (bad) jmp jmp rol pushf stc and lcallw cmp add push sahf push pop push xchg xchg loop js sbb icebp aam mov inc cmc adc push sahf leave mov ficompl (bad) mov pop ficomp jmp test cmpsb mov lahf imul clc add imulb inc add push adc imul into gs pop aaa test negl dec xchg xchg jae sbb mov adc add icebp mov and push add daa mov xchg xchg adc popf dec mov movsb fimull add dec iret (bad) nop push pop push andl fisttpl add add add mov mov add loop or popf pop jmp mov push pop add xor jmp pop das jne and mov pop sbb lret mov das xchg jo add in xlat xorl push loope (bad) jp add std idivb lds out int3 mov or inc cmp aam add fsubrs mov add cmpsb popa mov sti or mov flds xchg cmp add das jno imul pop add jecxz xor bound or leave pop nop inc add cli in add lods adc add pop dec xlat push ret in add xorb cmpb imull jno loopne pop incl (bad) sti hlt cs stos or or cltd push insl add je add sub mov xor ljmp sub jo cltd or cmpsl push cwtl lock push xor cmc xchg push inc mov js cmp lock shl mov lods enter stos add lret push outsb push ljmp dec popa or (bad) jp add repz into add dec and sbb pop rolb lock xor push pop inc jge add movsb dec cmpsb lret dec in jno mov loopne mov pusha movsl jb mov add xchg cvtps2pd sbb leave dec arpl mov lds sub (bad) dec pushf pop stc aad gs mov (bad) xchg cmp scas mov roll aas add call mov xchg dec jns ret mov pusha clc cmc sub push adc xchg mov add fisubl movsl and xchg mov xor add imul add add orl dec push adc push in push xor or jno add scas adc add dec pusha (bad) adc push push and addl ljmp aad sbb insb pop cmp ret jle add pop dec mov repz add mov lret xchg xchg clc fwait add aas jle inc sti push sub mov je and mov ds add cld mov mov add adc addl pushf mov and mov sub add inc popa fs cld add xlat arpl adc adcl je ljmp and pop mov cld addl (bad) mov add cmpsl jnp ljmp fs dec cmp jg add out add outsb add es ljmp mov test pop sub or push push mov sub data16 and inc mov xor cmp orl and popf fdiv add inc sarb sub inc add sarl cmpsb adc dec sbb leave daa mov pmaxub mov sbbb fnstcw subl addl and inc dec sti (bad) aaa add cmp or and aas jbe add cmp addb dec mov dec cltd cs ds or daa jecxz pop adc loopne ja fnstsw (bad) into add xchg and aam push and push iret xlat outsl add out test mov adc subl dec xchg pop adc xlat repz out mov cs mov jns imul lret jne (bad) xor mov scas imul pop adc and pop mov jl negl mov add sub jle jbe add mov fildll add out jg lods (bad) add mov ret pushf push add sahf xchg jp mov popf mov scas adc push addr16 and add (bad) fbld lds push les inc mov cmp mov cmp bound subl fs loopne loope iret aas cmp or xor int stos push dec add push inc fprem mov dec adc or mov add pop lcall jle add xchg mov stc int add lock je es add jmp xor or inc rcll add fmulp or push sbb xchg sub pop cmp bound into adc inc es ret subl push sahf (bad) (bad) js sub jbe int3 ret aam call popa out std sbb mov and flds loope leave or push adc lock mov addr16 insl shrl adc push lret add fisttp dec pop push adc hlt loop ret mov call inc or add mov lds nop add push cmp (bad) scas or inc (bad) mov jp add int3 in outsb xchg setge shlb push gs fcomps cmp ret daa add test add cltd xor xchg xchg mov popf (bad) js cmp add cmp push ror dec cwtl add sahf bound jge addb cmpsb (bad) mov ret insb subb jne mov dec push out lea xor dec movsb or call add xchg (bad) test or cli sbb push (bad) push faddl js and adc add scas hlt movsl sub add outsl gs add pushf daa lds popf sbb in pusha cltd dec inc iret mov ret lret jo scas sub adc mov sub imul add adc cmpl adc bound add pusha xchg jnp add or add xchg sbb mov inc cmp fistl mov shrl push push jae add mull fs add (bad) add xor xchg xor in cmp ljmp push sub inc mov lcall cli push mov add inc sbb add arpl xor sbb aam xlat iret stos cmp mov add jmp test scas into stos sub xchg fwait add push call je hlt xchg out cli repnz cmpsb pop mov lods (bad) out sbb lock add fstps cld and or pop mov xor cld sbb leave pop cmp mov (bad) loope pusha add add ss aam inc in mov jne add fisub aaa jo sbb jg lcall insb pop cli add (bad) movsl bound rclb lea sahf push addl pop rol mov mov push sub sub popf (bad) mov mov fnstcw test mov mov das add push push sbb mov sbb dec pop or movhlps cmp andl dec (bad) outsl xchg add sub add cld daa mov sbb (bad) push xchg xchg cmpsl addb xchg push das mov sarb mov xor or pusha js popf mov inc adc jp lea pop jns cmpsl clc lret je add call mov add fistpll (bad) lret out jo dec xchg loop jae jg add adc js add inc (bad) int3 mov and test mov stc xor inc pusha repz push inc add daa push in pusha test (bad) cmc mov xor test mov pop repnz jp fildl sub xchg leave lcall jle adcb jno xor in pusha aad cld push pop pop sub pop lods sbb fildl clc sbb ja aas mov sbb flds mov pop std arpl add sarb scas sub ljmp add add xchg add ljmp imul fldl or out (bad) or dec mov pop xchg int3 ret jno test add mov xchg pusha (bad) cmp jbe arpl les nop (bad) roll sarb leave aam xchg and in jmp push add dec aaa shll out add stos push arpl xor sbbl mov dec out pop popa inc lock sti and add xchg adc andl incl cmp dec push jg mov je or jne push add adc ljmp icebp enter hlt roll aad out cli loop popf subb aam jno jb int psubsw jp add and mov adc outsl cmpl adc fsts fwait ja add sti lods cmpsl add cmp movsl subb aam ja fwait js adc add adc gs sbb ret sbb movsb std je pmaxub stos mov jb xor add test pop pop inc iret lahf push inc mov mov out int3 or scas (bad) fsts pusha je mov cmpsl lcall sub or inc ret and bound mov cmp (bad) push or mov jp loopne scas mov mov add orl jno jns mov roll add (bad) cmc fbstp iret push test into or jbe add mov stos add mov das push ret mov sbb add repz or xor stc add xor cmpsb and jae pop divl inc popa adc adcb test repz addb jae repnz mov movsl pop pop sub mov jns add loop add test cmpsb add hlt adc cli sbb add mov movsl add pop xchg gs mov sub (bad) mov repz push call add (bad) in jle jb add stos push sub inc inc jo insl test (bad) push leave loopne flds icebp jge orl pushf mov roll xorl bound pop add push add in cmp sbb (bad) add insb mov sbbb jb fstpt ds cmp add fisub fdivrs clc lock mov jl add push xor dec xchg dec xlat mov popf stos faddl push push insl xor rcrb (bad) and pusha mov add loope push inc roll (bad) xor sbb in dec out push into lret xchg int3 lds mov subl pop lcall ds lret push push add sub pop stos xchg or gs rolb add mov cmc dec fwait add jp mov dec jne andl pop rol ljmp and cmp add pop mov xchg (bad) loopne repnz add adc mov aas in sub and mov sub pushl add lea push push insb push (bad) lods xor cmp loop cltd arpl add fisubrl xor push jle mov aas subl inc sbbl and add test insb test into out pop lea fcmovb xchg cltd adc pusha test (bad) cmp push ljmp (bad) jmp push out dec in and add pop gs inc fld pop xchg mov ds outsl scas mov add or or sub dec jecxz es sbb pop add inc xor or insb jmp (bad) adc lret lea (bad) inc and dec mov imul popf xor scas test or jb je cmp or jl fldl lahf (bad) push enter fildl or pop xchg test sbb movsl inc adc stos fistl add fs aas popl cs mov xchg add out cmpsl pop or dec xor add sub ss fstps addl js aas push jns push add cmp sbb ds ret sub adc lret jnp inc imul (bad) mov dec and add loope push add dec (bad) xor pop movntq sbb ds andl jae add shlb outsl incl mov imul jae (bad) or nop es push aaa xchg mov add bound mov int add cld stos scas push lret inc (bad) sbb jns add mov xchg arpl (bad) mov sub jp dec int shl xorl pop sbb inc push add xchg dec cmp jg jns dec test scas rol mov in add (bad) es cmc stc pushf add pushf pushl lea je push mov pusha add pushf mov movw lea jmp not push push pushl push dec jmp pusha lea mov call shld test pusha mov bts pop add mov bswap movzbl mov call add psrlq or call shr rcl and loope addl pop inc pop test rorl cld sub and cwtl or ljmp cmpsb rclb lds ret jl pop add ja mov test aad fs aam add or xor shrb iret out clc fnstsw push icebp ret clc and imulb cwtl or add rorl lods cmp adc jle andl xchg mov mov fistpl add pop std std xchg popf ret js lock insb xor pop jo xor in out lods or mov dec inc and add loope daa adc test es xchg xor outsb pop add fs in in xchg push out adc sub xor mov (bad) xor inc arpl das inc ja pcmpeqd ja call push add cmp cmpsb shrl fs leave or inc lods (bad) cld in pop xchg dec xchg pop mov cmp inc and sarl sbb xlat mov adc sbb in je pop in mov lods mov jmp icebp out xor and fucompp out adc popa mov add xchg push fwait add mov or jecxz nop add mov push incl mov ja sarb mov jae pop inc or pop jg jo jg pushf jmp lea ja cmp jmp dec jno add adc sub cmp add call cmp sbb mov xor cwtl pushf jbe push jle xor push hlt adc sbb je add add test push orl push cld xor add and xorl ss shll fwait xchg add ds fstps int3 aaa xchg dec push aam push sbb xchg adcl or lds jecxz pusha stos add test mov mov inc sub push cltd icebp les or loope add inc jmp int sbb or dec mov inc jno mov inc adcl cmp dec pop or add hlt push mov gs or sub sbb gs inc flds add or mov jnp dec sbb mov sbb xchg add xor lods mov mov lahf xchg xor cmpb jge or mov adc inc sbb push sbb lea and xchg add ret loope sbb sbb lahf or lods push in push adc add and pusha sub cmp mov or or or sub (bad) push (bad) (bad) cs cli dec xor lds dec and jge and imul sub (bad) push (bad) or adc adc test lret (bad) out push mov push and test add lds hlt dec popf dec ds test fimul jle leave lret loopne je popl mov aad push enter and bound add add add movsb push inc addb inc out ja ficom push movsb adc mov mov out adc fucomp bound mov insl cmp push or aad cmpsl mov mov arpl dec jg arpl imul mov mov insl and push and mov mov push add cmp inc jbe pop (bad) mov adc hlt sub or and push leave mov xchg adc inc test fadd inc movl sub jnp inc adc dec push aam test rcrl xor addl adc jnp push xor sub xchg hlt fwait push fwait pushf push pop add adc adc les js int3 mov dec lea dec iret lds dec clc nop es jae xlat adcl lods cmc and cmpsl sub add ret arpl and jns adc inc jle cltd popa xor hlt mov lcall or mov (bad) or cwtl add jp dec test inc test (bad) push jecxz pop push imul dec movsb jl lock jmp add lods add (bad) lret jge inc subb pop jae jns insb loopne mov mov loop add push mov and je xor push mov jae addl imul lret (bad) push jmp into fadd nop push or pop xor orb and xchg fdiv push or mov xchg cmpl push lock jnp adc push std test cmc push cli cs dec push mov fnstenv into xor iret repz sub repnz (bad) dec insb adc sub mov movsl add popf and shl stos in out push ret lret bound (bad) xor loope xor mov sahf jle mov fs test mov daa aam dec sub je es and push jp jg fisub jmp imul arpl testl loopne test rcll add pop sahf xor inc lds sti outsb push test pusha imul pop sub add lcall xchg (bad) dec clc mov and pushf addb sub inc or inc push dec xchg mov fs mov test adc inc jae ret arpl sub jns gs ja mov xchg or sub push push lcall outsb jne stos fsub cmc fsubs jge inc lea xor push xorb add scas in dec sub leave addl xor cmc pop std dec and mov sarl dec xor inc mov jp push (bad) cld and or pop loopne sub test lret xchg or jmp cmp xor (bad) sar leave push je movsb xor and pop aam inc push popa or mov and adc dec fs and pop pop mov mov in push adc sbb mov dec lea insl imul insb push iret popa dec jnp inc push lock jnp ret or add inc or cli add fsubrs dec (bad) por cmpsl arpl dec leave cld or jmp xor shrb mov insb fildl inc sbb sub jnp dec adc xchg push add and std and lds aas ffree adc sbb cmp in insb stos cmp push (bad) mov call jl and pop jne mov xchg sub cli adc sbb clc sbb xchg dec ret movsb and js hlt cli movb push imul jle data16 mov push es je jge xor xor ret xor popa and data16 rorb sbb pop push and or cld rclb (bad) adc out add and hlt sti xchg leave pushf test out lret adc mov lret je inc sub test mov adc cmpsb sub add scas call test adc xor dec pushf jb mov fldcw or xchg stos inc fs xor fdivl clc pop dec add mov mov vpaddsb leave dec xor inc adc or popa std sub adc inc mov shrb sbb push (bad) sub fxch or inc mov (bad) sub insb sbbl sahf shll (bad) xor pop jb fs fsubrl cld imul jnp xor iret xor movsb add mov mov in mov xchg jmp lock ret push push dec or adc cmpsb mov sub sub push enter pop cmp (bad) sti and mov inc je movsl outsl push ja shrl cld pop sbb mov lahf test fild pop hlt movsl scas and adc jl push push inc test (bad) nop int (bad) mov jl dec shlb in mov mov pop repnz scas add sahf cmp jae mov mov scas xchg iret jns imul and push add arpl and adc adc push jae or out hlt adc popf cs bound and xor pop sbb (bad) mov leave sbbb xor jl bound bound inc hlt xor aam aaa dec stc dec fs movsb mull adc gs stos and (bad) xor pusha pop test inc jns ret and jl cld cmp (bad) lods gs xchg sti add dec test xor insl jo dec data16 cmc inc (bad) dec add pop xchg fadd dec dec gs pop mov test pop dec mov adc insb cs dec xor sti in lcall mov inc jg jecxz xchg cwtl decl cmovb outsb mov test or mov xchg sub jecxz sub icebp data16 pusha mov rorl cs clc hlt mov ret je push test sbb adc cli and shrl add (bad) push pop push mov jg adc dec inc loop jns movb sbb out mov inc movb (bad) repz jb out jle stc push pop scas gs push cmpl or pushf js out or jmp inc (bad) jo lahf enter cmpsb xchg add (bad) test imul jge in lock add in pushf imul inc push cmp add xorb clc sbb sti sub push ret mov mov adc hlt mov aam fs data16 xor lods pop movsl les pop add (bad) icebp js xchg psubd imul or fistpll dec popa xchg sbb insl stos pop xchg xchg hlt jb or clc or sub sbb (bad) nop and and dec rcrl (bad) lds out stos inc scas and inc add aad mov ret adc rorb leave add adc lcall jbe sub add push jl sbb inc inc insl or jp int3 fs (bad) add and std out and sub in push lods lds and lret add sbbl mov add adc jmp mov add inc add (bad) or mov inc dec inc inc push inc inc xchg cmp addr16 cwtl fwait dec cwtl imul lods sub jns add adc sub adc add cmp or scas mov orl push add adc pop dec add test dec cmp push inc sbb ss es dec xchg dec sub cmp ds inc adc pop xchg cmp pop jno ret pop push adc jl cmp dec or cmp ljmp mov shlb pop out add pop movsb les push dec xor dec or sub xor push sub mov dec pop or push add sbb movsb cmp push xor push push dec sub and jb and mov aaa xor bound pop cmp push sub or cmp sub inc mov int3 add jl adc inc pop call sub adc jp and inc xor add xor push and and push sub pop mov pop adc bound sbb xor jb pusha test and add data16 adc xchg dec adc sbb push jl dec inc pop xor push ljmp dec mov push dec sbb dec dec or dec ljmp push adc sbb pusha dec outsb xchg outsb adc push lcall clc fwait adc sub push mov sbb scas pop xor cmp push sbb adc ds es rorb test ja or push jg ret mov insb and add je pop decl pmuludq test cmp push push (bad) lock cmp outsl mov mov dec fild adc hlt pop cs leave rcl lds push mov push add fs mov mov sahf adc lds or sbb ret xchg int3 jmp add test repnz xlat xor pop jl (bad) and jns add inc (bad) xor (bad) in xor loop push xchg add or inc inc imul in jbe insl push imul cmp hlt xor adc adc dec jg and pcmpeqd popa addl jnp jns jne mov dec mov daa insb rolb sub push push adc jl xor push inc shl hlt lahf and xor pop test test sub push mov negb rorb fsubl and inc cld popf mov icebp mov xchg cwtl or inc mov sti jecxz repz sub stos sbb sbb xor icebp xchg stc xchg test andb xor dec (bad) hlt inc mov je rcrl pusha jb xchg sbb ds xchg xor and cmp je sub jbe xchg and sbb xor mov dec cmp jb and imul push adc sub aas ja ret call jecxz je cmpsb clc into ret cli sub movsb popa popf add mov dec jl ret mov add out lock cld and inc hlt mov push add loopne testb (bad) in jae leave xor pop add and mov jne push jmp sbb xor nop mov sbb cli rcll pusha je jl inc (bad) push test push cmc inc stc jg pusha sbb xchg je dec adc mov jge outsb xor nop aam (bad) mov and sbb cld (bad) int3 dec int hlt mov clc or xor xchg fs cld stos loope inc mov mov lods lahf das mov dec inc imul mov mov or sub icebp ret adc xor pop es int3 jle pop lahf add cwtl negb fdivr adc pusha ret rorl loopne xchg mov lock mov ffreep mov push inc mov sub xchg je,pn fwait mov es repnz adc xchg xchg pushl pusha mov sub ds sarl sbb or (bad) cmc cwtl adc jl pusha ds dec adc dec imul and or stos je scas pusha sub or (bad) push cmpsl and jmp add or xchg call iret or mov dec push fwait sti out pop mov into add xchg fs stos fiadd jnp or jmp mov jbe loope pushw adc xchg stos and xorb (bad) pop dec test pushf xchg idivl inc push inc stos sub ret mov imul jg xchg xor cmc cld test int pop je cmp cmp cli sub scas jp xor sarb pop sbb sti loopne cltd jmp loopne dec push dec jle cmp sub push sub push sub stos sbb inc mulb jp xchg xlat outsl movsb fstpl lahf scas data16 mov adc stc mov (bad) arpl dec add adc sub movsb lods and in dec int3 or ljmp or hlt call je iret push and lret (bad) jl mov xchg mov adc out dec inc loopne test mov jle aas (bad) je mov inc iret cwtl loopne out jl xor clc adc dec sbb mov cmp scas movsb cwtl inc cmp mov inc imul jl fs add test or stc and cmpsb sbb hlt (bad) std dec dec sbb add test (bad) jg xchg pop lcall movsb pop rcrl nop je divl lds mov sbb xor inc out mov mov es inc sbb jecxz jge loop push inc (bad) sub and popf mov and dec negb in lcall sbb lret je aad subb js jb inc clc je jnp pop jne or rcl sub stos or dec cmp add in xchg sbb js fisub add inc test sbb sub rcl (bad) dec stos outsb xchg rcl add mov cmp pop (bad) (bad) pop dec add test (bad) hlt add mov movsl aam or sbb inc cmc jne (bad) xor sbb in or jb adc xchg jle dec jle inc int3 cmp pop dec mov xor (bad) dec jecxz lds enter popa sub sbb mov (bad) int3 pop iret mov dec push scas (bad) dec push inc and xchg (bad) ds xchg lds aaa insl test inc sbb inc add xchg lods ret data16 or mov repz sub outsl imul cmp jno jne dec cli movsb xchg add fwait xchg jl add out jl add insl scas sbb lahf jne mov out notb test xlat sbb push rcr push add pop add ret ret (bad) mov jecxz mov xor pop stc stos adc aam xchg cmp and jnp jmp in imul jo dec in xor add cld xchg push (bad) (bad) jno mov pusha decl arpl lock jb jae or int3 test xor cli daa movsb mov jg (bad) insl sti jmp imul or cli xlat xor add inc mov sub pusha jbe dec out add imul ficoml jmp inc mov int mov or js fcomps test addr16 pop mov cltd cmpsb adc xchg sbb cld je xor xor jnp mov das add and mov test cmp inc mov ret jne shrl addr16 inc xor jecxz out movsb adc push bound pop imul (bad) jno dec (bad) mov imul scas or rorb inc or ljmp test inc dec ret repnz push gs mov cld lahf sub mov jp jnp loop xor sbb cmp aam outsb jns lock jle mov lea in aad jecxz bound hlt xchg dec cmpsl add cwtl cld inc xchg jnp adc or stos in add sarb add jae inc inc les push jbe pop jb rcrb in pushf mov sbb push (bad) dec fadds xor mov inc pop lret sbb loopne cmpl pushf mov adc je dec out jne test xor or hlt js je or imul (bad) int3 bnd xor xchg sub lidtl hlt (bad) bnd add into lods jns arpl mov rol inc ret test lods fwait pop in shrb sub insl add add stos and dec test sarl les jns dec push fmull cld jecxz jmp into imul adc imul jb out push lahf push icebp mov (bad) xor add cli inc adc dec xchg movsb or (bad) xorl mov jb jl jnp xor xor fwait cmp enter repz mov xchg insb sbb adc cmp mov mov xchg jno or mov enter jb sub je mov subl push fmuls pop xchg xchg addl (bad) sbb aam sar jae fisttpll and jl pusha je mov in pop xorb sti mov push outsb cld inc stc push dec cwtl xchg jg jo sbb add arpl (bad) push aas mov sbb xchg cmpsl hlt and mov nop sbb imul ljmp sbb enter adc je outsl in jmp jge mov cld sub enter jecxz xchg test push mov mov jbe add mov mov test dec dec mov movsb aam or push inc push icebp mov xchg xchg xor ret aad int pusha dec es js setl mov or bound adc jno or lret sbb rclb add jae mov xchg and jle icebp movsb and iret into leave dec nop xchg xor jg aaa test sub mov lret sub cs dec push push out fwait mov fbld test mov cltd jmp xor adc mov (bad) jp mov aaa sub pusha loopne mov cmp out xchg or mov jnp mov add pushf sub jmp sub stc adc nop fs jae ljmp inc dec cmp dec sub (bad) out or imul inc mov and orl (bad) pop pusha push mov pop sarb xor add fwait leave test jecxz push out mov les lds int jnp add aam and pop (bad) mov cmc (bad) jmp nop dec mov mov insb hlt repnz xor je jno (bad) movsb ds rorl mov fidiv and adc cmpb call dec subb jge inc or xchg imul imul js mov test xchg fwait lock xchg dec scas xchg arpl (bad) xor pop (bad) dec int into pop iretw sbb adc (bad) inc (bad) lock test sbb jae test push fdivrp je and sahf dec or cld mov cli jb cmp fdivl inc sub mov es ret nop test es cmpsl test lret mov xor fsubr (bad) sar fsubrs insl repz mov or test xor push xor push xchg and roll leave cmp mov bound sbb mov fisub rcrl sbb inc lods cli inc arpl push aad js rol outsb pop dec mov pop pop cltd bound cli add xor add bound inc add jb insb adc (bad) je fisubl adc dec fildl out icebp enter je and fucomp xor pusha pop repz and int and mov out jp inc and sub in popa mov dec test ss inc shl bnd iret and fadds int ret data16 int3 mov adc sub adc (bad) inc arpl nop add cmc jg gs cmp loopne and test out sub pop rolb adc dec adc inc xchg in fdiv (bad) mov enter arpl mov sbb fldenv outsl inc jne test push (bad) mov loope sub (bad) lods pop xchg dec mov adc mov push jo push dec and xchg lods xchg movsl xor fsts push stos movsb sbb popa sbb lds or stc xor inc mov and dec hlt dec pop je xor in push mov sub xchg data16 jbe pop fiadd and inc imul movb test ret mov lds daa jns cwtl push push test add xor sub push or mov push das mov mov cmpsb (bad) add mov jmp xor movsl cmp dec ficomp xchg ret push arpl (bad) dec mov je push push test subl adc ret ret std lods mov stos ss mov popa bound divb pop out push mov adc hlt in adc aam sbb mov fild and movsl jecxz pusha fs ret xchg loope je xor scas sbb into nop pop sbb adc xchg fcmovnb cltd and dec dec and dec dec movsl push sub dec and inc movsl mov or jmp je es inc ljmp jg xor retw and pushl jle mov popa scas add int stos xchg ret je je mov push dec popa sbb mov xchg or insl fwait rclb mov sbb loope dec dec and bound or and pop sub adc jg fwait xor push inc add test daa nop mov push jns sub je sub pop jg movsb test ja aas pop xchg rcrb call adc add addb adc cltd ljmp or dec jnp lock nop inc xchg fimull shrb adc test xchg xor shr leave in dec push pop mov adc sub jg les or cmp cwtl test dec call subb bound lds push adc inc push jns test decb jnp,pn shlb adc xor jnp push int3 xorl cmp xchg ljmp inc fldenv cmp cmp fild (bad) sbb mov dec fiadd jbe push repz sbb jmp subb inc daa add inc sbb dec leave jp rcrl mov adc mov fs dec pushf imul or adc add adc lea scas movsb lods or add sub and in adc mov lds and xor das and out mov cltd nop pusha ret push pop cwtl test cmp or mov mov pop sbb popf addb push mov push adc push cmp (bad) pushf push cmp mov dec int sub fnstsw (bad) push test and sar xchg adcl sbb shlb xor sub les inc lret mov test push cmp xor jns sbb stos and xchg and les jle dec in fimul aas push cmp (bad) movb lahf movsb lods das adc pop cmp adc sbb (bad) int dec ja push (bad) hlt mov push sub add sbb jp dec sub cwtl in xor or jns sbb sub push cmpsl add jp xchg stos into xor (bad) sub (bad) lret xchg scas fs jmp adc and pop inc inc push sbb dec insb pop cs jg mov push ret add aam jne (bad) iret add (bad) push add cld bound jg je (bad) fistp add push add xor pop je addr16 inc insb xor cmp push xor inc push sahf adc inc cmovo add and call and add xor loopne pop lods mov outsb cli push mov loopne and and jnp add jle imul sbb lods dec js mov movsb adc mov add and push mov add jns das jno imul sub orb jae adc sub fisub inc repz push popa sbb neg xor div pushf iret push pop inc sub (bad) pop pop out sahf adc push fstpl or mov pop xchg sub adc sub lods adc push adc es fwait mov adc sub rclb fbstp insb call add jl and mov sub adc xlat sub fxch mov add jne mov stos or dec nop cmc hlt gs test test dec inc fbld orb loop arpl jecxz lods lds push or inc xor addr16 loopne mov outsl mov insb sub loopne pusha sahf xchg ficom or add or outsb (bad) pop sub or lods rorl je xchg loop stos dec fwait insb popa popa and jl and insb sarl fstpt hlt (bad) jb dec and imul sub sub or mov xor das pop jae and and inc cmp lds pop sbbb xor mov adc mov in inc pop sbb and jae add mov jae ja leave xor sbb sti add inc pop ljmp add cmp jmp push je or adc out fstpt mov hlt xor test (bad) lds (bad) mov xor fmul add add and ss je xchg enter add ljmp xchg sar xchg push mov leave pop push and movsl leave jl push mov into inc fstpt pop test mov pop movsb mov push incb inc mov aad (bad) scas leave or clc xor inc adc shufps repnz inc cmp jl xor test popa or or jnp push inc cmp pop pop sbb scas inc pop sbb or pop je imul stc movsb test push cs iret or add sbb xor xor push sub jns xor add loopne inc jne or sub push je or fsts hlt add add xchg cmc mov pop hlt pop xor dec stos rorb inc stos sbb xlat push sbb int movd rcrb movsl dec jnp or mov lods mov xor mov movsl lcall and fldenv lock xchg loope int or dec mov mov jmp lahf xor cmp hlt sbb je xor sbb daa lds sbb repz adcl in mov inc cmp mov cmp xor xchg fdivp mov inc imul jns es (bad) mov cld popa (bad) add aad mov movq hlt rcr (bad) mov (bad) fcoms inc pop adc and test int3 mov test adc and xlat in dec stos scas mov js es movsl jne jge movsb mov cmc fxch push popa xchg scas adc adc sub sbb movsl call xchg xchg sub hlt std cli push pushf add sbb out std data16 setg adc adc inc pop fdivrs or mov and xor sbb mov cld hlt dec movsl or cmc lds lds inc test movsl push rorl sbb sbb js or out mov pop adc fidiv mov mov cltd or push adc or jp je sbb mov in push test adc sarb ret lcall add loop (bad) xor or dec ret add adc dec push in add xchg cltd mov fucomi xchg add nop ja xor xlat (bad) push das xor lret dec sar add in xor push jae ret fisubl pop mov sbb lret push test repz mov ret pusha push pop xchg lret sbb adc sub loopne push xorb cltd xor movsl movsl jno sub aam add jle adc or pop jg popa add dec ret pop mov mov sub fbld fsub sahf sub xchg dec xor daa ljmp sub lods je pop testb scas lret sub mov stc mov inc sub sbb movsb movsb or in xchg les and sbb adc daa fcmovb xor cmp fs js xor mov xchg add add stc jmp (bad) sbb and push mov mov push mov (bad) xchg popa push scas adc dec aaa out mov xchg test sub xor mov fwait mov sub adc xchg adc xor add bound hlt pop lcall sbb mov adc movsl iret sbb pop jbe push fistpll cmpsb inc cmpsl fwait xchg in push adc or aad mov movsb adc and push int3 jl int3 dec (bad) je and aam imul jb push pop adc push (bad) xor fimul mov add sub cmpsb sbb jecxz xorl addr16 mov sub and aam enter mov arpl cs loope or dec push pop ficompl shr (bad) ljmp loopne les mov sub dec int3 xchg cmc fwait push add pop (bad) int3 cmp xchg cmp pop roll bound or cmp mov push stos mov hlt sub pop xor sbb push dec icebp mov push test ss add (bad) rclb andl push jmp test push add mov lock mov fadd (bad) push mov jnp sub xchg aaa dec dec call pop imul invd fsubrl xchg pop jle xchg push fcoml enter jmp call hlt xor sub inc hlt les dec mov mov jg xor cmpsb movsb (bad) pusha xor sbb gs cmp loop xchg cltd insb repnz fisttpl lea cli xchg xchg sahf popf fucomp cmp cmc ret jl movsb xchg sahf les cmpl leave ret hlt (bad) mov push mov push add push daa das fs lods lds arpl jmp xor (bad) xchg repnz cmc cltd sti mov or mov (bad) stc mov jge and fs jb mov aaa out lret aas sbb add jno arpl push stos (bad) adc call dec push repnz push inc rclb add jno mov and adc or jg sbb or les movsb (bad) jbe add mov daa dec test xor movsb movsb fadd je frstor sbb sbb xchg movsl adc lret shll jns cwtl sub (bad) sbb icebp ljmp sbb dec popf test hlt ficom movsb (bad) cmovns test loope mov inc sbb cmpsl insl adc fsubrl out inc sub or fwait xchg (bad) popa jnp rol int dec shlb bound mov sti push addr16 mov mov inc jbe cmc cmp and test jnp jne negb arpl dec or or adc or psrlq les je aaa sub add mov adc lods addr16 push dec lods out or inc outsb testb mov hlt iret pop xchg ficoml push shrb bound es test dec loope or fidiv dec dec lret xor mov adc jno andl cmp xor push cmpsb dec mov fs fmul leave shlb ljmp add fstpl dec inc and movsw xor scas in mov repz lds add push addl add stos xor test loope dec data16 xchg je and inc test mov mov push sahf outsl test mov mov push push jg and dec pop inc iret xchg adc inc mov popa call push fs mov and inc push (bad) cmp add or (bad) rcrb and sub add dec dec push iret xorl sbb pusha repz (bad) push sar sti mov xor hlt imul xchg (bad) sub aam repz addr16 in mov insl pop movsb add std ja std fldt dec xor je xor lods fstl lea xchg in or je scas pop mov and fldcw sar shr adc repz inc add cmp add arpl xchg pop pop xchg inc pop scas (bad) retw adc mov sbb mov pop sub mov xchg mov mov nop (bad) adc hlt pop pop add and and pop into push mov pop (bad) js rcl mov popf insb dec mov cs pushf dec push push std icebp hlt inc fildl cmp xor ret push (bad) pop fs add and test push aas shr xchg clc mov adc jns pop data16 pop lods push pop xor int lret movsb cmp (bad) hlt (bad) (bad) lds adc aad inc mov sub leave pop (bad) rorb adc dec adc adc ficom sub inc mov pop nop outsb inc xor push inc push and sbb push ss fmull inc or movsb or adc clc inc sbb push cmp push stos sub mov fimul xor lahf sbb xor fiaddl (bad) and dec cmpsl inc pop les fwait (bad) dec add je dec jge fisttpll push popa in faddl aas lea mov ds xorl inc hlt (bad) and (bad) push jno fs cmpsl nop mov loopne clc dec xchg sbb adc xor cmp jmp in inc fidivr dec clc sub bound jp iret add rclb or loope inc lds fdivr aad clc push imul in push mov je cltd imul stc ljmp or add mov xchg data16 int or insl jae push je cwtl xchg adc sub fsubrl test test fs fisttpl sbb and cli inc cmp xchg or mov or xchg int3 pusha dec and fs push sub movsb push test dec mov cmp je sbb sub xor or clc mov and or cltd cmpsl mov sub pusha xor (bad) mov mov or push pop mov stos or add mul push push in cmp sub jns add add pop and stc sbbl xchg fs xor sti dec inc adc pop lods adcb push dec cltd xchg hlt mov leave push (bad) je inc outsl push arpl xchg add cmp dec xchg or and aam sub in lret push out mov sti aad mov ss lds jae mov sub push or xchg inc inc or cs rolb sbb adc or fdivrl divb pop pop lret add sub das (bad) fild hlt xchg push xchg inc out scas test or pop xor inc test inc or push adc int3 and xor push mov daa and mov ret sub in in fisttp aas or sub pop fildl sbb xlat shrb mov add xor jns dec inc xlat test stos xchg push cltd xchg sbb (bad) mov pop mov mov out xchg pop in sub dec sbb arpl sub or or sahf cli movsl andl dec cltd loopne lret int3 or loopne pop adc mov fnstcw add sbb je in pop sbb dec push ficoml xchg adc or dec nop movsl imul stc fdivrp xor mov mov or scas push test fnop add adcb hlt scas cltd mov jne push mov and fidivr dec jbe mov mov mov xlat cmp imul xchg push dec imul jnp into bound (bad) mov ret push inc jns jae cs xor (bad) sahf cmp popa xor sub or insl mov sti add sub (bad) je push or stos adc sub test xchg call test rol add imulb push push test xchg inc xor or inc push jns sub lret test ficom pop test adc es mov inc sar xchg add xchg lea and imul aad adc stos xchg popf adc xor dec jg pop push push pushf dec bound sub lret ss pop sbb jbe pop add subl lret xchg arpl add mov push cmc xchg inc ljmp out cmp push hlt jns jnp jo xchg stos push pop cmp ljmp jge sahf add in jnp lahf dec movb xchg push outsb ds xlat aad call sub mov fildll popa cld scas xor xchg and pop dec (bad) sub insl int loop mov mov jle inc inc push push add xor sbb scas xchg data16 je notl (bad) std lahf mov hlt (bad) pop add fist outsb dec dec movb push sahf jge dec mov fs jecxz popa inc add add push dec dec (bad) jl xchg push inc clc stos xchg clc sbb adc and xchg add roll int insl jge adc cmc lds decb loopne jecxz add lds movsl fsts add jns mov cwtl popa sub push sub add pop clc hlt xor xor mov or fidivr cwtl add push fistl xor das adc aas jg in and aad ret or fwait add loop movsb subl sti lods mov push and dec aam add pop (bad) stos movsb jo sbb fmul and jns cmpsl xor xchg scas lds mov cmpsb adc fs int3 add ljmp scas and aam into or add sub or cmc sbb inc inc test inc adc mov into dec mov push cli xchg dec pop or push pop mov dec sbb or mov or es and ja ficomp shll adc (bad) or inc call ret and xor and (bad) adc cmpsb pushf adc je mov pop pop and sbb push sbb dec jae arpl (bad) xor cmpb and push pop add xchg or (bad) jne mov push and sub inc enter test out xlat xchg insb push pop xchg je ret and pop cmpsl pusha loopne xor mov add enter (bad) fdivp aas test jmp add (bad) push ret add push into xor les out push xor setge mov jecxz and imul adc in bts ljmp lea inc and sbb ss dec xchg je test (bad) push inc mov das lock pop sbb lret push pusha mov icebp jae cltd out fimul lock add dec add xor jns or xlat (bad) (bad) push push loop jbe orb enter add pop mov test xchg and mov inc test dec and xchg and mov xor add fcoms add ljmp iret add (bad) push sub sub and divb mov fnstcw movsl cmc jns cmp cltd jb or inc fsub inc inc xchg push jno and (bad) scas jp ljmp cwtl adc sbb data16 xor outsl addr16 je pushf xor add das rcrl push cmpsb imul xchg cwtl out and sbb out mov movsl aas add ja daa pop hlt lcall fsts hlt dec sub sub outsb lock adc adc jmp push add je xchg dec sbb mov scas adc jb xor in xchg jge std inc out fstps fisubl fstps outsl pop or (bad) pop and cmp lcall into out adc clc jno dec xchg adc and outsl movsl cmp or or mov mov je jg mov into pop push leave lods xor mov adc pop in and or es push jg mov lds or jle push not and inc movb test add fimul shrl dec inc add rorl je add lcall fstl push cmpsl cli jle aaa aaa enter test shll jg dec and call push or xchg cld mov lock jno lret call jno xchg les sub stos pop dec adc ret mov add push or xor adc loop (bad) fsubs jno mov subl cltd dec outsb sub cmp sahf aam add aam in scas pop repz add ficomp mov fdivr and nop xlat ja cmpsl ds je popf leave movsl pop jl sub out dec push cmpsl scas add scas hlt sub or jecxz lret jns sbb out cmp lret and in xchg or cwtl xchg cmpsb jbe inc pop sbb dec popa pop push scas push dec xchg hlt lock xchg ret sbb xchg loope dec enter mov pop int mov mov dec pop movsl stos inc pop sub popa lods (bad) flds sub push mov cmc call scas dec ret adc test fnstsw enter mov push push inc aas loope sbb push lods cmpsl adc xchg and fsts cmp adc es leave push pop push stos imul cmp and mov cmp dec mov and jmp jnp adc scas push arpl mov jnp popf pop jecxz add inc je subl or lret leave loope daa in add mov cli xchg mov cmc adc (bad) jbe mov in mov xchg cmpsb jecxz jle jp test ds adc xchg mov jbe call leave enter xor sahf add aad hlt into sbb aam sub fcompl les scas int insb sub inc test ss into loopne dec lcall cwtl pop std jo cmp cmpl std js lahf fucomi mov inc iret sbb jecxz cmp test mov adc outsl inc pusha cmpsl jecxz inc dec lahf les push push adc lods mov and stos mov repnz sub pop stos adc xchg xor sbb cmp sub jmp cli fxch daa nop push mov test or int3 pop mov or xchg sbb and ljmp dec aad lret test cmp jecxz xor cld xchg adc test je cmpl sbb dec xchg xchg or rorl inc pop push sbb xchg push xchg push push es pop rcl push push add inc dec inc rorb mov or add es cmp pop roll hlt in cmp sbbb (bad) xor pop xchg fcomi xor xor imull mov or add aam jae ja and es je xchg ret cs sub sbb push ds (bad) mov in cmp xor sub enter inc pop xor (bad) hlt loop out add negl cmp and je lret nop mov adc mov sti xor inc xchg inc xor mov adc rclb out and mov pop xor dec hlt xchg xor aam xor pop and gs movsl xor inc int jne adc jb mov or xchg aaa (bad) sbb sub lods lcall inc xchg sub pop jmp sub add test xchg mov das gs xor cwtl pop xchg psubw and adc repz pop pop dec rcrb sub mov xor int3 inc jo in and xor xor hlt (bad) jb dec pop pushf mov or popl aad aam push (bad) fldenv fstps sub or xchg sbb mov adc ret pop dec fnstsw test dec mov cmovo call pusha scas jae testl xor push les xor scas adc fiaddl int3 and or les repnz std insl rolb mov jnp mov pop xchg sub ret lods dec jnp xchg mov lret fs or stos sbb mov fstl cwtl dec sub xor aaa pop lret ss or je movsl or subl xlat and mov (bad) xor or sub jecxz push push aas std dec fsubp or test and popf daa test mov int sti add repnz add dec jnp mov jns (bad) mov jg and or je aad imul imul inc (bad) fwait lds dec dec xor cmpsl lock ret enter add push ret (bad) push adc dec rorb inc xor loopne movsl dec add in repz dec push (bad) jmp pop xchg repnz fmull sbb push mov jp sahf mov dec or mov push push xchg push jg loop dec pop imull mov lods test dec add push inc ret insb clc push sahf addb or xor mov jle xchg ret (bad) test shr jle dec push pop (bad) mov or pushf xchg loope push jecxz popa ss mov fidivl xor leave rcll dec invlpg xchg movsl xor cltd sbb dec fwait adc mov out test mov mov mov sarb xor jns xchg stos inc pop jbe int3 mov sbb or xor and or pop xchg adc enter mov pop outsb enterw hlt xchg ja pushf mov int3 test or das push imul aaa sub xor mov je or loopne pop sarb mov fs inc cmpsb imul adc cmpl addb adc cmpsl pop aam shrb test hlt test push cmp addl xor inc movsb repnz pop sbb adc dec adc xchg loopne xchg lds mov or loop dec in dec cmp and sbb ja dec lock bound inc sub xor xor (bad) dec lods jmp (bad) jl xchg stos mov jge gs test dec stos je imul push pop cmp testb jp pop andl cld movsl inc out je adc loope cmp ficom adc xor ljmp add fs dec add sbb mov dec je jmp push dec lods add in mov jno aaa mov sub cmc hlt test mov aas ficom aam bound xor pop ret and imulb cmpsl sti and cmp je (bad) nop dec pop int adc inc pop lods ja mov es or loope xor mov icebp and jnp hlt or push inc push out pop ja xchg and xchg xlat ret jb into dec je,pn daa test loopne stos (bad) mov (bad) imul inc loopne sub movsl mov xchg ss cmp pop fs push cmp fsubr or frstor adc lahf hlt (bad) lods out sbb jne aad and ficom push or jno jb stos sub add add pop in mov stos es dec or add repnz ja cltd inc lret leave xchg subb sub dec ficom hlt dec mov jecxz les sub mov adc into ret mov pop push js mov pop out or push add fdivs dec push outsb ds stos xor jle je movsb adc roll and nop (bad) pop int3 jbe mov or and repnz fdivp test outsl (bad) ljmp outsl (bad) xor inc xlat pop bound pusha cld sbbl mov shlb and outsl pushf aam lea pop xchg xchg test adc (bad) (bad) xor push xor cltd in add aas xorb lret or insl rorl sbb fwait and aad incb mov xchg inc nop sub imul push pop lret add sub and outsl jo xchg pop add dec xchg je and sub xlat pop imul hlt cmp jle les and sti les jae je adc xor ret sbb arpl pop inc push lock not pop test dec push (bad) pop leave xor push rclb fisub cli pop jo lcall jge orb ret out xchg test sbb add mov or xorb (bad) push sbb dec mov push hlt out sti mov jg jae push cmp mov dec pop push mov xor (bad) test repz sbb hlt loope or add add adc push ret push jnp fs pop dec fisttpl je xor ljmp adc sbb xor (bad) (bad) je jmp or jg or movsl xchg je and xchg add rol pop repnz imul mov dec jnp imul xchg jge dec rcll cs lret bound xorb in hlt mov imul sub adc cwtl push lds mov pop bound lods push test je mov mov outsb mull and push fcmovnbe call movsb add inc adc xchg lods test jge enter jl js adc or add jb xor out scas cmpsb lret jmp mov lret in fiadd fadd mov dec je adc adc inc xor lcall dec outsb mov fcoml out mov fisubl xor push insl jae pop pushf in mov pushf dec add neg fwait or enter xor xchg das addr16 push sub shlb aad inc sbb leave add inc add fdivrs adc hlt movsb push stos xchg xor lret jl mov add jmp hlt sar les cli mov aad aas push imul mov iret mov mov hlt xor std mov pop lret or test xchg ja xlat fdivl call outsb aam les push adc enter inc lds xor inc jmp rolb xor pop lret mov fs sub dec mov add push add js and push mov xor je pop push stos push out cli inc pushf sbb test sti imul cwtl xor xlat nop ds outsb jp sbb in lods fsubrl shlb fwait add leave xchg into dec insl and les jge jg push cmc mov jns movsb fldl (bad) imull sub pop xchg test add lea jle and push adc push fmuls adc (bad) loopne pop fcomps fistpll sbb or push adc add pop xchg dec fildll lret and clc adc jmp xchg rcll lahf jp and jo push xor push das cli nop (bad) push dec sbb push and hlt mov inc xor aaa test test inc and adc hlt sub inc inc es iret sub push mov cmpsl mov and std scas xchg jmp stos inc mov popf test stc xor shll xor sbb cld add arpl into or test in dec icebp das push push pop popa hlt in or fcompl lds (bad) adc roll xchg mov push sub in mov mov jae enter xor mov hlt je sbb test dec mov adc sub cmpsl orl test mov mov dec cmpsl jo fsts mov nop sbb fs movb cmpsb mov hlt stos sahf jo cmp fisttp lods dec and flds icebp mov cli xor adc pushf repz movsl xchg adc xchg xor add add je xchg bound add mov mov hlt das push fsub sub mov add mov jl je imul mov lret jecxz es xchg cli jle cs (bad) or push mov dec clc and sbb pop sbb (bad) adc faddl adc into cmp xor jo in mov in repnz shrl js mov adc or pop fs adc pop and es fbld dec hlt dec lret cwtl popa or mov out pusha (bad) cmc sub iret and mov or xchg push out add in xor dec lret sub and dec push xor jmp jae test sbb out lahf (bad) xchg sbb aad inc iret stc ret dec dec jecxz xor sahf and jae jnp je fs fisub xchg add jne xchg sub (bad) dec fwait and (bad) and in xor pop xchg jg sub scas or iret es sbb inc pop or jae rcrb dec popa enter mov cmp dec stos jnp mov dec das fcomip xchg arpl pop inc dec jg or and fldl in nop mov adc dec fstl add test incl mov inc aas (bad) out es adc jnp jecxz int adc xchg mov jle xor int or hlt stos inc hlt cli jmp scas inc dec xchg in jbe push inc hlt inc out fwait icebp xor lcall add sbb outsb in pop mov xor movsl jae adc out or into sub cmpsl sub mov call std imul inc sub call pop xor decb pop pop and dec aad scas sahf jo xor imulb sub jecxz xor (bad) sbb notb sub rcr jmp add subl or dec push inc push sbb or fstpl loopne dec mov pop xchg ja icebp sub or stos bound xor pop or dec jle jne es or dec jp add fchs push jl push xchg loope mov ret lds push imul clc pop cmp sbb imul mov ds rcr sbb mov rcll (bad) xor icebp mov ljmp sbb sti push mov cmp or scas movsb mov cmpsl xchg and test push cld je cmp ja lock dec adc xor add ds (bad) ds pop mov inc xor cli inc js test call aas fstl std sbb repnz mov inc int3 stc stos movsl fs lock inc cmp out nop in sub mov (bad) mov sub sbbl dec (bad) or or mov je jnp pop add push lcall push xorb div mull test les loope lods xor ret cld daa mul jbe xchg or pop popf das jmp and cmp and in inc lret jnp test mov and lds sub stos lret xchg dec and sub movsl push cmp ret in push je sub fimul test mov xchg jge inc rorb cmp ret pop aad lock outsl imul mov xor lret or inc inc push dec dec jbe fdivp rorb dec add into je lea xor (bad) inc dec pop xchg bound ss adc or (bad) xlat adc pop xchg dec dec mov mov xchg sbb mov add xchg loop loope les xchg dec cltd cmp mov cld jae sbb xor or push enter mov xor xchg jg dec scas call in test xlat shll or push or cmp push jnp cli test (bad) decl xchg jecxz jge fwait and ficom lods gs das imull and inc es jl pop add mov psllw add js inc mov scas pop cld mov imul test mov jg add mov xor shll lds cli pop jl jno imul fs mov mov mulb popa mov arpl xchg push je in xchg adc int3 in jnp movsb loope fstps mov es ret ss mov cli sub jp fdivl ds push push dec dec bound xchg sbb xchg push pop mov mov and xor push shrb dec mov mov (bad) in dec cmpsb push enter test movsl shr and hlt xchg dec add and pop sub inc jl in imul out lds and aad sub ret jo add lret arpl pop shrb sarb das dec (bad) mov or je (bad) out inc xchg xor sub das pop data16 or inc cmc and hlt loopne das add mov out pop cld hlt mov dec push imul ljmp mov mov mov int3 pop mov lock pop xor pop sbb pand js dec mov mov (bad) mov add push add xor mov mov mov in xor sub insb in (bad) jecxz pop test xor jge sbb sbb outsl fucomip clc das mov popf pop nop xor mov xchg push sti and aad cmc mov (bad) mov (bad) and data16 mov cli mov mov mov movsb pop test lret cli inc pop std mov dec daa add negb inc pop or (bad) hlt and ja xor push jle dec fbld jecxz add rol ret jle jo jnp inc lret pop and xor je push or or popa mov inc les xchg bound xchg jg cld push cmp movsb push add xchg mov sarl add dec dec in je ja mov sbb (bad) iret in cld xor gs popa stos adc or fimul fistp xchg sbb and pop xlat data16 ds or lock xorb jp lds lods fidiv aad je js int jecxz sbb fisttp les jmp in sub aaa jbe xor sahf sbb pushf in push xchg jo subl xchg or inc sti mov decb in mov mov xchg in pop fucomp cmp xchg out icebp mov stos push jnp mov (bad) push push inc mov jle mov xchg hlt les or and imul add sbb into push sub xorl jp lock repnz xchg ljmp fldcw xchg lahf cld std aas jl push and in adc jno aam xor fidiv hlt daa leave ljmp adc je pop xchg inc or cld test adc add inc pop xlat dec jo ficom addr16 sub popa bnd and pop xor xor inc mov add (bad) xchg mov outsb int3 and xor scas and fstl jbe in pop mov shrl push imul mov dec push inc lret push test ret mov (bad) lock repnz hlt jmp stos pop repz lea popa iret in lods shrb hlt repz int add sbb sti or add int xorb pop fstpl mov fs xchg rorl aas daa jns add enter gs or xor mov insb or stos add in (bad) fisubr mulb push pop mov add jb (bad) into adc dec jg cmc adc hlt (bad) fstpl xor inc lea das out cmp cwtl dec jnp (bad) ret leave mov das (bad) hlt sub jmp stos push dec push jl adc jl push repz ret mov adc aad scas dec sbb xchg pop mov aad aas xor es fistpll sub lods into outsl xchg add insl lock or sub lret inc sahf enter adc dec dec jns test and xchg dec sub sbb xchg ljmp aad loop push je iret rclb js cltd and nop push dec test sub imul push sti add or xchg ljmp and sbb shll es aaa lods push movsl jecxz movsl lret inc insb inc xchg pop add dec int add daa mov xor ret mov xchg mov mov and call aam stos add pop pop jge rcrl stc jl shrl popf mov std jle imul xchg loope mov inc into cs ficom jae in cmp dec je popf cmpb (bad) push ljmp adc pop ja mov add pop scas fsubrp adc xchg jp inc mov (bad) and ficom stc cli xchg or ret sti adcb dec mov scas adc icebp xor insl lret (bad) sti adc andb (bad) hlt sbb scas mov pusha aaa adc or loopne les sub adc arpl xor sub arpl cmp faddp bound das stos sub push dec add sub stos fidiv and je in jo cmc lret in or repz adc es and adc mov lcall dec add hlt adc pop and imul xor sub fldcw xchg and inc mov dec sub cmpsl lret std lods dec and hlt call ds push call fisttp movb scas or fbld out jb or mov xchg inc inc push dec repz mov pop cmp outsb mov out test jg mov das jns inc bound pop xor (bad) leave mov xchg xor inc mov add movsb xor stc lods in lock push pop loop xchg leave stc fimull or test xchg sub arpl inc xchg add and adc pop xor fnop gs inc stos stos test pop dec ret or sub test cmpsl add cmc xor xchg adc cs push into mov xchg sbb xchg test rclb cmp frstor test mov sbb aaa adc cmpsl or out iret movups mov in test hlt or (bad) je enter int3 dec movsb negl sub in mov add cmp dec sub movsb test and aam cmpsl stc push mov and pushl mov int3 dec inc dec jge jno jg mov (bad) (bad) imull lds test mov imul xchg xor xor ret (bad) std cwtl in xchg adc (bad) or dec insb push push and les cmp je mov mov into xor lret mov jnp mov sub ret inc sub mov or cmp and subb fstpt add test jne sub aas jle aam mov cmp add ljmp notb nop addr16 add jp lret dec xchg pop sub nop push es leave stos cmpsl jl insb cltd xchg mov xor in push fistl mov jecxz push dec repz mov hlt je jge pop push not mov das mov sbb push mov dec xlat adc movsb ds push lds cmc aaa sbb xor pop (bad) xorl or sub fdivl stos sbb pop icebp xchg inc or jle dec jl iret adc arpl aad test mov adc movsb mov test jge call clc mov pop pop test pop das adc lods jne push and push ret scas adc movsb call adc cld inc pop mov nop repz or fidiv es mov pusha push and out mov mov mov fcoms iret sbb pop or je cs and cmp rcrb test in xorb mov (bad) out pop stos pop xor xor ds cmp aad push ja cmp pop pop xchg xorl out mov cvtss2sd lods pop or adc inc jg mov in cmc and add xchg inc pop xchg jne xchg pop mov mov pop inc ljmp mov lret sub inc lret sahf out adc daa jb cmp pop lret sub lret movsl ret cwtl xchg shlb add test mov loope dec xor outsl mov mov adc arpl sub mov testb inc mov cwtl out (bad) mov and enter hlt bound sub push fistpll insb iret xlat je aaa add addr16 (bad) xor icebp je pusha or aas repz notl (bad) pop lret sarb stos and test inc loope insl mov repz hlt xchg div pushl repz inc sbb jmp fadd aam jge xor lds mov ret sbb fsts xchg (bad) ljmp dec cmp mov jmp aam out aad hlt cmp loop xor add mov mov push mov lds push jmp call fisub or mov ja push enter in jecxz mov pop sti jg andl leave push js xchg ljmp hlt fbld pop jb jne out daa gs sub fucomp xchg xor jmp test sub in sub mov iret or sub cli sahf sbb inc mov cli test leave xor in in jae imul pop xor xor imul and sub inc jno scas lcall ret pop stos and aad pop mov jns sub xchg inc xchg xchg pop adc fisubrl xor add ret mov pop cmovae movsl daa hlt daa stos pop rorl je add loopne mov xor dec rolb aaa (bad) adc sbb movsl hlt (bad) dec adc and fstps test and flds sub pop test cmp xlat popf push add stc adc xchg mov insl push sub js lds ds or ja dec hlt cli push pop fnstenv pop add fwait adc in add dec lret xchg sub scas leave xor mov rcll ret movsb clc adc imul inc xchg or shrl movsb push (bad) popl loop or and adcl jbe jecxz fldl out loop dec dec mull scas xor fidivr movsb mov sub scas or rorl xchg stos jns and inc hlt pop out pop rcr jle ljmp lea test xchg dec or lea ret adc rcll or sbb push add fisttp inc and jmp repnz aam mov out jae add in imul add sbb into and push jmp sbb mov add sbb cmp push dec test and push mov or inc enter jns in insl xor inc shll and mov mov push adc mov jnp fcomps xor pop cs mov sbb cmp xor adc xchg enter fnsave jmp int3 xchg add xor test orl mov cmp xor hlt stc cmp insl mov (bad) sti ljmp (bad) inc sbb add fs shrl lods lods dec adc sub dec bound push and lods js pop xchg push subb pusha jge je clc pop cmp fildll lret das pop movsl jbe push or adc (bad) icebp mov sub pop notl push sbbl mov jge and hlt adc and add dec aas xchg test xchg imul (bad) dec enter icebp dec pop aad jnp imul je (bad) push inc loopne hlt cwtl xor test frstor aas mov (bad) cmpsl dec xchg sbb mov ret pusha xlat arpl push sbb xor mov inc (bad) jl add lds cli in pop into arpl inc and enter adc mov mov cld lods cmp cmp sbb inc test mov ret xchg jno,pn mov jmp cmpsl data16 sub cmp lods cltd (bad) xor mov sub pop mov cmc test ss jae mov sub inc out adc jnp lret push sbb jecxz xor jbe mov hlt xor sbb pop xchg pop sti push jmp jmp cmc xchg and into int sahf leave pop push out mov daa stos jns (bad) jp mov cmc push fisub sbb adc mov jbe fldenv adc subb or test cmpsl and sbb aad mov or dec arpl hlt movsb in into adc out add jl pop ret icebp and cld fcomps stc xor push xchg ds ds or hlt or shll and stos xor (bad) jb lcall push in sub das inc cmp mov sub xchg xorb xchg sub lods cs std scas sbb pop pop adc and push add (bad) xchg xchg cmp push or pop in mov icebp cltd das lcall sub test repz add js cmp into jmp sbb (bad) sub jl mov cltd cld out popa or cwtl pop inc and xchg xor xchg data16 (bad) stos mov or push add adc (bad) pop jg mov pop icebp and arpl je fs shlb or pop sub dec xchg jnp xchg fs loop vcvtss2si fidivr inc jmp mov repnz dec mov xor or mov mov xchg aad fs jge inc push and icebp mov aad mov insb sarl test push test (bad) es aam test dec pop sbb xchg sub andl jno xchg pop scas out mov add mov mov mov push mov and dec test call mov xchg dec dec scas jno in test xchg mov std hlt fldenv cmpsl mov mov stc test hlt stos sub loopne or sbb jne jb test repnz or mov test or xor push jl adc mov je into mulb add adc clc and mov fcmovb push dec pushf test jne in cmpsb ja loope sub outsb push push stos mov push in dec xor or hlt das jae,pn push inc pop sbb pop repz mov adc stc pusha ljmp mov hlt xchg pop pop fsubrp xchg add mov inc fistp adc xor or mov pop (bad) push out aaa (bad) cmp sbb mov ret es mov loop fistpll (bad) sub fimul jmp xchg sbb hlt or rcrl or movsb cmp rcrb call inc mov inc xchg movsb inc (bad) xchg in (bad) cwtl (bad) or xchg stos push int3 loop jne call inc pop add xor movsl scas hlt or imul xchg cld add pop les add gs xchg mov or hlt std mov fistp mov rep (bad) je dec push add xlat in xor push dec imul movsb sbb jb adc sub inc jle sub enter in pop push inc cmpsb mov mov fs (bad) and pop mov popa dec push sbb cmovae mov adc das jnp sbb and mov mov (bad) mov cmc mov jne fwait adc jl into pop ljmp aad xchg mov dec mov aas push push shlb out push sub push mov pop xchg mov shr stos jbe into xchg sub jmp lret fiadd or sub mov jno inc je sarl sub in daa sbb xor daa sub in jo (bad) push andb je cltd es shlb aad je jmp jae sbb add iret cmpsl pop push (bad) outsl inc cmp out ds ret aad dec xchg lods leave or out push inc jae add jecxz dec shl scas es outsl fs xchg xchg arpl lock into xor adc dec (bad) in push inc mov nop icebp sub inc lods adc mov jbe,pt xor or cmp outsb and iret add orl addr16 xor popa les push leave sbb push lret dec pop mov xor inc test test xor fadds push (bad) mov arpl rol sbb pop ja std (bad) push xor sub mov cmp sbb es pop jecxz loop pop sub sarb aaa in sahf cld xor aaa sub xchg or test add leave xchg popa int3 mov stos dec jno leave jg movl and lds cmp gs fildl sbb xorb lcall repz push pushf xchg dec test jmp test out xchg adc xor mov hlt and push dec imul test sbb (bad) xor push aam mov pop movsl xor xchg scas (bad) jns leave jne popf mov pop in sub push pusha scas xor push mov mov fmull xchg je imul lcall jle mov test hlt mov jne in sub dec push inc js sti imul outsb and sbb gs lods xchg insb xor xchg push out adc insl pop leave dec dec sbb lret dec icebp les je pop push hlt in mov cmpsl jb jmp sub cmpsl xor jnp call push dec push icebp xchg inc fucomip push clc push xor push xchg xor out idiv loopne fcompl popf dec inc pop pop cmpsl loope inc push and xchg int lods aam lea or xchg cmp lret test mov xchg add sbb push (bad) stc test pop xor xchg and mov ret fidivr (bad) out stc test cld mov dec mov iret imul sbb stos xchg mov inc or loopne jne xchg lds leave mov test (bad) ljmp cmpsl lds cmp das fsubrs in sbb sbb ds add rol push sub add stos lds mov bswap or pop mov xor dec mov neg scas std sub (bad) leave and xchg fcomi loop test fsubl repz adc repz adc inc hlt pop cltd je push pusha stos dec pop call jle mov xor outsb adc cld inc daa repnz xor dec inc cwtl mov (bad) mov hlt rcrb push cmpsb mov test push sub fsub pop stos gs adc push xor mov xchg push xchg hlt ja push je in inc cltd sub xchg pop nop and and cmpsb push arpl xor push shl jl ljmp fild test push adcb ffreep nop push adc (bad) cmp call hlt fbld sub lds je jbe push sub sub aam mov xor sub dec inc ret int or hlt movsl adc stos inc add xor jge jne jns sub add rcrl adc or jne ja (bad) sub test je gs or pop xchg aas les jb add or mov int3 aas adc fidivl test inc clc adc or pop or jmp int inc sub pop cmp xchg movsb insl inc xorl scas mov jno push (bad) or fistp mov daa ss sub push enter xchg push movb jl sbb push test add xchg insl pop adc and (bad) add sbb dec mov dec mov sub mov in pop movsl lds jle and js (bad) jno add dec mov pop rorl sbb loope cmpsl into xchg xor add or add lret or (bad) push into add and mov push lods loopne lock xchg mov imul add mov sbb add push insb icebp jbe add dec (bad) jp sub out cld jno sbb fs push or and aaa ret xor adc popa push pusha mov data16 ficom xor mov das add cmp or repnz xor inc or cs add jae xchg mov add inc mov sbb mov and ss xchg out pusha push jp dec fiadd (bad) popa insb mov push mov dec xor mov aas and add loopew xchg adc rorl jo negl mov outsb add adc in jb inc outsb insb int3 imul lret test aas sahf inc addl aam add call loop add push jg add outsb and aas pop add popa punpckhbw addr16 test outsb push add mov daa loopne es jle ds sbb outsb pop adc loopne jno adc inc add mov dec call adcl add repnz inc jmp and push js pop or inc adc rorl ja stc and out in loopne mov xchg mov je dec mov outsb xor scas pusha outsb jne sub outsb dec xor sub clc dec jnp test test jb (bad) out stos pusha fmuls mov aam outsb outsb jo and movb popa add mov adc adc or mov jmp push ss mov jl xchg sub jbe aam lret push dec mov pop mov add pop xchg add and sub pushf imul repz jo pop pushf cmp pusha mov inc scas mov inc jmp xrelease jne sbb imulb dec mov daa add fwait adc test loope ja sub addl pusha adc addl loope xor bound mov pop idivl gs add jno sub xor pop mov pop add popa push cmp (bad) xor daa lock fldl add repnz adc pop mov and and jg cmp aas ljmp and repnz sub and shrl and pop add push cwtl push cs call shr add adc cmp add bnd add jnp inc or (bad) cmpsb push inc mov imul lock dec dec pop jge add push adc js cmp ffree or push mov idiv imul and popa mov orl aaa movsb lahf add fmuls scas push xchg xchg sbb and daa add lahf aam pop xchg outsl pusha ret push and mov (bad) rcl sub pop addb daa je mov out jns repz xchg jle add pushf jbe and aad fistp adc lret add sbb cltd push pop jle jp cmovo inc jne xchg idiv roll sub xor loop xor mov ja add inc clc or nop pop xor out and std adc sbb ret inc mov and mov mov mov mov or adc cld mov fiadd xor stc insl lcall stos pop lock (bad) mov movsb and orl addl cmc loopne or push (bad) adc cmp jle and or out fisttpll inc jg (bad) adc jae pop loopne orb std add pushf fldcw adc mov stc pop adc ret adcb cmp int3 std dec repz ljmp dec hlt (bad) and mov fisubr pop loopne fsts pop sbb jmp loope add cmp cs pop lret add lcall and mov mov test (bad) pop (bad) jge lcall scas adc dec mov repz add and or ljmp push jl adc (bad) and cmpsl jo and cs push xchg adc and fisttp jl mov (bad) andb mov test call icebp in mov jle fistpl (bad) jp xor xor repz push fstps jo jno lcall repz pop ljmp dec lds fisubrl dec mov add loope nop insb repz stc adc cmp arpl inc cmp and cmp fs add std outsl es add cmp push test addr16 add pop aam pop pop or jmp fimull mov lock das movsb and add fmuls cmp test jo xchg add adc sbb (bad) hlt sar xlat sbb jge inc add add lret or pusha lock and addb add mov pop sbb or pusha sti pop and add fstps fidivl and lcall inc call andl subl inc fsts addr16 ljmp subl push repz adc add clc and add (bad) mov or mov dec int mov adc fimull or (bad) aad and mov xorl outsb andl mov add xchg and inc sub dec adc jns and cmp push lods test sti add addb lods mov jae add jle pop sbb pushf cld inc fistpl push add call inc std enter jmp repz (bad) mov (bad) int3 pusha in pop movsb cld add xchg mov mov test push mov adc add pusha loopne mov or xor sbb imul push std jmp dec xchg cld pop mov mov or lret mov pop jne mov repz out fidivr mov and roll shld or xor add push jo int3 sbb jl adc inc jp push andl insb dec arpl sbb repz addb clc add add enter add pop dec std mov pushf stos add push jecxz dec lcall adc pop add (bad) dec popa sbbb sti inc mov andl movsl push mov test dec fiaddl addr16 push and add fwait popa push and cmp push and sub int3 int add pop mov or enter cld fimull sbb add popa xchg sbb scas roll repz push or (bad) sbb and inc into pop pusha cs jmp test adc xor mov jbe dec add add ja (bad) and or jb adc mov pop push adc jg fild sbb xlat pushf dec cs (bad) repz out shr rorl decb jb sub add out jg mov loop mov mov repz dec pop repz mov add in dec popa pop jnp imul repz add es add dec or push add movsldup mov rcrl loopne int3 out ljmp inc repz mov cmpsl xor sbbl scas out (bad) push jno stc mov jl adc or dec jae and std (bad) lds jno pop add mov pusha inc addl hlt cmpsl push fiaddl mov mov push int3 std xchg xor pop cmc sbb (bad) repz xor hlt add inc sbb jbe jl mov shrb repz mov and jne jmp pushf pushf pusha stos push movb pushl pushf lea jmp push lea push cwtl movl not movsbw lahf not lea pusha movl jmp in mov mov push xchg or push cmpsl (bad) ror divl ja xor mov out cltd in xchg sbb mov mov jnp loopne mov jmp cmp sbb stos sub cmp xor stos lret cmp xor mov addr16 and imul fidivr mov push mov mov les jecxz int3 or sub inc pushf test jno,pn inc cmp int3 inc jg sti loop mov out (bad) or test pop xor push and cs jbe (bad) mov mov out pushf mov (bad) lods movsl cmp mov jg clc pop popa out into insl cmpl or pop idiv mov notl push (bad) (bad) sbb mov test mov iret shlb pushf xchg cmp faddp gs push mov inc shlb outsb mov mov mov popf decl add and pop aad mov test int3 bound mov or imul pop mov mov adc xchg aad sti outsb icebp (bad) mov cmp (bad) or cwtl cmp mov or and jae xor jo pushf push cli jecxz jecxz xchg leave es (bad) jnp and cmp and outsl pop stc jle loop lret fcomps jnp mov aam aaa divl xchg faddl int jge xor add adc pop push xchg push in addr16 pop pop int3 fwait jecxz das cld mov xchg in or ret repnz mov jne int3 add loope (bad) and xchg push popf popa (bad) jb xchg mov bound mov add push test cwtl ret pushf stc inc data16 inc dec add not mov jmp lea call push pusha lea jmp mov bound inc inc pop int sub aad inc mov cmp xor aad jno push mulb add fisttpl int3 inc mov cwtl (bad) stc mov mov sbb xchg arpl cmc sbb sbb xchg ret sub punpcklwd or sub xor lcall fstps insb mov and aaa fs lea pop or outsl xchg shrl push in adc or or cli mov cld outsl call fidivl inc gs cwtl sub test push pop fwait inc inc test dec add fistp adc sbb xchg subl movsl mov rcrb enter fist xchg and xchg cwtl xor add inc and pop fisttp movb pushl pushl popl movb pushl ret not push dec pusha rol cld pushw popfw call push mov xor stc movw pushl jmp xchg movzbl add cmp mov clc sub mov call ret test or aas in lahf (bad) sti fwait popl pop push jno sub push mov lret push roll iret jb add or adc jecxz inc aad dec adcl xchg push and lock jg outsb shrl mov push (bad) (bad) icebp mov pop mov inc mov mov fistpl je inc subl add imul into jle repz lea mov xchg cltd jge sbb (bad) ljmp jns push mov outsl idivb test arpl pop in xchg repnz jp sarb push lcall adc pop lea jbe shld xadd sub xadd shrd dec mov and mov mov or xchg clc stc add bts shr call mov push mov jl mov lret icebp shrb dec es pop pushf inc xor push dec int3 mov jne pop xor xchg inc xchg js jne mov out push pop xchg mov mov test mov cmp rcr sbb pop add cmpsl sub loope dec dec dec popa sahf cmpsb mov bound pop aad popa in xor or push push jno jp (bad) fcomps or xchg xor in scas or cmp pop movhps cmp out out int mov inc pop or sti mov shlb (bad) xor aad test cmp xor ljmp daa ljmp (bad) jge dec xchg nop imul adc xchg mov out je adc xchg fsubrl mov fmull mov ss mov mov mov mov and iret or (bad) cmp in cwtl lods fwait jp add sub sub jecxz int3 dec dec jb (bad) ss pop test out pop int cld mov jmp mov sbb stos out inc out mov movsb arpl dec movsl lods aad xchg jae push mov push imul test test ja adc add mov (bad) mov sub mov xchg xchg test dec outsl popa fs imul add and lea jmp movl pushf push movw lea jmp movb pusha pushl lea je mov lea call push call movl movb pushl movl push lea jmp call call or and xor clc out out adc sbb dec xchg pop cs sbb jmp lods xchg push jb leave ds push daa add jmp jo or sbb jp addr16 mov xchg jl adc loop lock sahf xchg sti jecxz je fdivrl or or fldt aad testb push ss aaa mov adc sub mov sbb pavgb push ret insb adc pop mov out push dec mov loopne out mov dec push mov inc data16 out loope mov cmpsb or adc inc bt cmc imul clc clc test cmp add pusha pushf pushl lea jmp xor jmp mov movw jmp dec pushf rol push push jmp call shl bswap mov stc test jmp cmp movb movw lea jbe rcl neg pusha mov rcr rcl inc sub add adc cmp btr mov test call pushf pushf movl jmp add jmp lea mov pushl jmp add dec outsl arpl inc jb add call call test mov pop movsb jne jmp (bad) divl out dec inc clc mov dec test jl movsb leave pop xor dec lea imul and and nop mov push push daa fsts sbb add lds repz and sub and fwait mov mov mov jo rcll (bad) cmp ljmp mov jnp jne mov xor pop outsb sub out fisttpll sub fnstcw inc sarb subb or sub das sbb lahf lods rcr (bad) int cltd dec inc mov mov imul cli jmp fcoms fisubl pop aam js aaa les lods jno jne stos (bad) xor push cs out jnp rcrb fwait xor movsl sbb loopne inc cmp mov xor repz test mov inc jno push xchg mov (bad) fwait cmc jo sti adc aad gs jnp dec ljmp pop leave mov enter leave ret popa ds (bad) mov enter jg ficompl mov xchg xor xorb lock fdivr jge inc or (bad) cwtl jne je mov cmc je dec nop jnp fistp (bad) jl icebp xchg nop push test adc fdivrs call xor daa sub shl cmp aas stos popa push les push aaa (bad) icebp out inc pop or (bad) or cmp lcall sbb insl or rorl (bad) pushl sub lods jne je ret xchg loope fwait push enter and and insl push adc or int adc cmp mov jns data16 ljmp imul out hlt loopne cwtl popf xor lcall and pop (bad) repz or and std push ljmp and aaa and bound adc and mov or add add rolb add and mov ljmp xor xor xor xor xor xor xor xor xor test mov xor xor xor xor xor xor xor lea loop jmp ss xchg ss ss mov ss ss ss xlat adc push aaa pop aaa addr16 (bad) aaa xchg aaa les into aaa fidivl in icebp aaa std aaa add or cmp cmp jnp mov inc cmp push cmp jb cmpl int3 cmp cmp cmp cmp cmp push cmp cmp cmp cmp dec cmp xchg ds aas lods aas add add lock add inc xor xor xor xor xor xor xor inc xor xor xor xor mov fbstp or xor xor dec xor (bad) xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor pop xor cmp imul mov ss ss ss ss jmp hlt add or adc aaa cmp cmp cmp cmp cmp gs cmp cmp cmp cmp cmp push cmp jge (bad) cmp cmp cmp cmp cmp cmp mov leave cmp cmp ds ds sarb aas sbb nop aas add add add enter xor xchg xor xor xor cmp inc xor xor xor fnstenv pusha ss pushf ss ss int3 fbstp repz cmp bound push xchg aaa mov or adc adc cmp mov xchg cmp cmp cmp cmp cmp cmp push cmp test mov (bad) cmp cmp cmp cmp (bad) cmp cmp pop cmp cmp cmp cmp pop cmp cmp cmp cmp cmp add pop aas xor arpl jb mov sahf aas mov mov aas loopne in aas icebp aas add add add add add xor xor xor xor inc xor xor xor xor xor xor xor xor xor xor xor xor xor xor (bad) xor mov aaa cwtl aaa stos aaa loopne in repnz (bad) aaa pop cmp cmp insb cmp (bad) cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp dec cmp cmp cmp cmp push cmp cmp cmp cmp cmp mov ret cmp fidivr ja cmpb ds mov aas mov push add lock add fwait xor inc xor xchg mov xor jge nop xor dec xor xor xor fnsave in sbb dec aaa pop aaa lahf aaa aam in adc cmp pop cmp movsl cmp cmp cmp cmp cmp cmp mov cmp cmp cmp cmp jle cmpl cmp cmp cmp cmp cmp cmp cmp cmp jae jle cmpl cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp mov test xchg ds ds ds add sbb dec aas push aas pop aas pusha aas jp mov mov add pusha add mov add adc dec xor movsb xor xor xor xor xor xor xor xor pop xor pushf xor xor xor pop aaa data16 mov in aaa imul cmp cmp cmp pop cmp cmp cmp cmp cmp mov cmp push cmp pop cmp idivl add sbb cmp cmp xchg cmp sbb add add add add xor xor dec xor popf xor adc arpl ja loope repz aaa cmp dec aaa pop aaa jno xorl aaa cmpsl aaa mov aaa (bad) aaa adc and mov cmp test cmp mov fdivrs add add jne int3 xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor dec xor pop ss add cmp cmp xchg cmp cmp cmp fnstsw icebp add add and xor xor out stc xor xor lahf xor xor xor xor stos xor insl xor xor xor or and dec ss aaa pop cmp cmp cmp xchg test cmp jmp xor cmp cmp cmp cmp arpl lret cmp test mov or scas aas add add cwtl xor xor xor xor dec xor outsl xor xor xor xor xor xor xor lcall xor xor xor xor xor xor xor xor xor xor xor lds cmp push aaa data16 mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp insl cmp cmp cmp cmp sarb aaa cmp cmp cmp fidivrl push mov aas int in aas add add sbb xor xor xor xor xor push cmp mov lahf cmp cmp cmp pop aas xor add rolb sub add icebp xor xor xor cmp cmp inc xor xor xor xor xor xchg add push add add xor xor cmp cmp inc xor xor xor xor xor xor xor xor and and sub sub xor xor cmp cmp inc xor xor xor xor xor xor xor xor xor nop xor mov xor mov xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor cmp push cmp cmp cmp cmp cmp jl cmpb cmp cmp lods cmp cmp sub xor cmp inc cmp dec cmp pop cmp fs add add add insb add add xor inc xor xor in call xor cld xor or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc ss ss ss ss ss ss ss ss ss ss js jl xorb ss ss ss ss mov lods ss mov mov les enter (bad) ss fdivs fdivl loopne in call ss ss ss add add or or adc adc sbb sbb and and sub sub xor xor cmp dec cmp fs jl test pushf cmp mov mov cmp in in cmp add or adc sbb and sub xor cmp inc ds ds ds ds je,pt jl test mov xchg ds movsb lods ds mov ds fdivrl in in ds ds ds or adc sbb and sub xor cmp inc aas dec aas push aas pop aas fs insb aas je jl test mov xchg aas pushf aas movsb aas lods aas mov mov aas aam fdivrl in in aas hlt aas cld aas add add mov add add or adc sbb and sub xor cmp inc xor xor xor xor xor movsb xor les int3 xor xor xor xor xor xor xor or adc sbb and sub xor cmp inc xor xor xor xor xor movsb xor les int3 xor xor xor xor xor xor xor or adc sbb and sub xor cmp inc xor xor xor xor xor movsb xor les int3 xor xor xor xor xor xor xor or adc sbb and sub xor cmp inc xor xor xor xor xor movsb xor les int3 xor xor xor xor xor xor xor or adc sbb and sub xor cmp inc xor xor xor xor xor jo,pt js cmpb ds ds mov ds sarb fdivrs loopne call add or adc sbb and sub xor cmp inc aas dec aas push aas pop aas pusha aas push aas cmpb aas nop aas cwtl aas mov aas mov aas sarb fdivrs loopne call aas add add je add add or adc sbb and sub xor cmp inc xor push xor pusha xor jo js xorb xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor dec xor pop xor push xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor dec xor pop xor push xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor dec xor pop xor push xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor sbb xor dec xor pusha xor js xorb aas xchg add add add inc add add and sub xor cmp inc cmp cmp cmp cmp cmp movsb cmp les int3 cmp cmp cmp cmp cmp cmp cmp or and add add add cmp enter sarb movsb aas test les enter call xor add add or adc adc xor push xor mov nop xor xor xor xor jo nop xor xor xor xor push xor js cwtl xor xor sbb add add add add push xor xor sbb sub inc ss ss ss ss je mov mov nop ss ss ss mov lods ss les enter (bad) ss add add add add add xor cmp addb or add fdivl add xor add sbb jle call ss bound repz adc fdivrl push cmp cmp cmp cmp out inc aas add add mov xor mov xor (bad) xor xor xor inc aaa or cmpsl cmp cmp cmp cmp cmp cmp cmp ja mov aas add add add pusha xor xor xor xor xor xor into xor xor inc ss ss out aaa pop cmp cmp cmp arpl pop cmp cmp cmp (bad) sbb add add add push add add xor jne mov cmpsl xor xor xor ss (bad) fnstenv ss out mov cmp cmp ja aaa cmp cmp ret cmp cmp lods aas leave aas sti aas add add add inc add add xor mov xor xor sbb int fidiv push aaa jns divb and call cmp insl cmp push aas data16 nop aas mov add add dec add add xor cltd xor xor xor xor xor adc icebp xor xorl add xor cmp cmp lock mov fwait cmp cmp cmp fnstcw cmc aas add add and add inc xor ljmp xor xor xor pop cmp add xchg rclb inc push cmc pushf dec mov inc dec push bsr btr jmp rcrb mov mov inc (bad) mov lods add stos cmpsl (bad) xor push sbb fisttpl mov inc ds and push push jp (bad) pop out std scas xor pop mov pop sub mov (bad) sub lock pop mov (bad) lods pushf jo (bad) out pop hlt xchg repz jge dec out cmpsb inc xlat lods mov leave out shlb test mov out inc lock add xchg ret xchg fnstenv nop and xor (bad) int3 and pop xchg ljmp xchg cltd inc shrb cmp bswap movsbw movsbw setne lea not not pop call jmp cmp pushf pusha lea jae cmp cmp push push lea jae jmp dec inc pushf mov setnp mov inc pusha pushl jmp mov sbbl sub add mov ds dec pop mov test in xchg mov adc inc sub sbb and cmp test mov cmpsb sub stos jno sub xlat jbe or jmp sub jbe nop insl push or jp mov out mov pop mov ffreep fs mov incl fs stos mov mov cmpsb in repz insl cld add es cwtl fcompl movsb sti or inc push xchg jno test sar jbe pop mov std std mov xchg push shl jo mov sub pushf mov pop xor pop rcl in sbb icebp fmuls addr16 aam pop lret ljmp mov insb nop mov and inc push inc inc in xchg push (bad) stos movsb in mov pop or lcall dec daa and or mov and sahf push test leave das int3 push repnz push cmp adc test xor jo sub lcall (bad) idiv mov outsb sti jge rorl pop jp ds cmc (bad) sarb scas pop add jbe adc cmp pop (bad) sbb into mov xor mov inc addr16 xor xchg insl (bad) sbb or cltd aas or in mov loopne dec xor fsub js inc xchg xor sbb fnstsw pop lret aaa mov add pushf jb and push push mov (bad) ss sbb and push xchg or inc mov pop jg divl popf sub inc scas add push imul test sub pop leave mov fwait pop pop ss aas xchg add push mov mov add xchg outsl addr16 mov inc out (bad) jb fdivs jmp cld push mov push sub sbb push aaa (bad) dec out add sbb leave div cmp imull fcoml xchg mov clc sahf jl or js in in into addr16 or roll int3 jae push (bad) scas insb loope xchg sub leave xor jns divl lods in jmp mov jl mov mov in inc or pop daa add test bt bt shr movb jmp pushf call add inc gs outsl fs gs imul add add cwtl add pop push pushl pushl ret mov movb pushf pushf mov pushl ret bswap mov mov pusha movzbw lea pushf movl pusha call adc adc xchg or hlt lods mov ror stc sub mov pop add xor pop pop or cli sub fs imul add imulb cmpsl pushf repnz vcvtsd2ss icebp (bad) cld mov ja inc ret outsl stc in imul popa mov movsb xchg pop scas data16 cs pop xchg add jo jg adc in je pop dec ret add sti jmp add xlat push jo aaa xor sub dec jmp jo iret pop ret repnz xor les xchg mov xor xchg loopne dec leave sbb lods push and lea push hlt inc out or or add mov adc pop cmp push pop inc insl iret data16 dec adc ljmp sub or not repz xchg push adc pop inc mov nop mov adc pop xchg std jge jecxz imul and lcall ljmp fildll lods hlt out mov add sbb (bad) insl out popf fisttpl pop pop inc arpl bound aas jae mov rol mov pop inc (bad) mov xchg add shlb fbld sbb inc in icebp cmp pop xlat in cmpl pop dec enter add loopne jbe les outsb stc (bad) in pop and mov scas outsl (bad) jmp mov sbb add xor movw push pushl ret neg or sub xchg push mov lods pusha push setg pushl not mov dec dec mov mov jmp imul xchg or sub add pusha vcvttss2si in out bound mov clc mov push insl out in adc xchg sahf in out int (bad) lahf pop dec out push ret add xchg scas fs les push mov fdivrl roll cmp cmp sub push cmp out sbb hlt pusha pusha lea jmp stos pushf lds cmpsb push sub in mov js or mov xchg jg or stos xor mov and test insb xchg push add js bound ret cmp outsb shlb addl lds cmpsl add subb add adc inc movsb scas lds scas loope (bad) mov push or add or push (bad) or out add add aaa sub jae out cmp addr16 xchg xor jmp lods arpl and imul mov cli push addb and mov arpl inc (bad) mov xor cwtl jb stos add and cltd add arpl sbb xor shlw popf jecxz cli pop aas push jge mov stos add les and adc xor or sbb sbb hlt or adc adc imul mov mov mov or push and sub rcll xchg xor sbb and adc and add addb mov ds imul lods scas popa adc sub test sbb xchg jbe mov add jno cmpsb push adc pop adc popf inc or (bad) pop push cmp adc pusha pop xchg pop sbbb rorb mov sub gs hlt dec xchg cmp sub jno push std les popf sbb and inc dec push movswl and test and (bad) ficomp orb stos stos dec adc mov out xchg pop inc rorl js mov subb bound (bad) (bad) dec lea ds lods and orb jb rcl push gs dec fsts mov faddp sahf push adc xchg mov jnp pop je sbbb bound sbbb sbb pop adc jbe or inc add push arpl loopne adc jne pop icebp or and pushf rcrb mov add gs jns test ret mov adc ret sub jnp (bad) cmp lea orl xchg sti push subb sbb mov jns fsubl pusha fwait subb sbb sbb sbb xor popl subl and xor (bad) mov add test sar or mov aaa hlt ret lahf lret dec sub mov test mov test popl mov or jnp xchg add mov inc or push lds mov adc out sub movsl imul sahf jmp ret sub ds and dec sub inc les dec add mov int jle das cltd out je cmpsb add and hlt test out xchg push pop mov xor push fldl stos (bad) jno adc xchg (bad) push sti loopne aas shlb or lock popa sbb je cmc pop lahf or or (bad) or sub mov or jae xlat fs cltd push add or les add xchg sbb or jo (bad) lock jne jo add jge mov adc fpatan mov ficompl and lock in jmp jl sbb pop push aad jae mov repz sahf or cltd or in mov xor clc insb xchg (bad) lock cltd pop add pop add sbb jae dec xchg arpl pop scas sbb adc nop shlb mov mov data16 mov (bad) (bad) call jno mov sbb pop jnp push mov and jg repz xchg pop and lret adc mov or sub dec cmpsb ret inc cmp popf loope mov ja dec pop inc pop movsl inc inc pop mov jp int3 fiadd and loopne andl jb jge jne sub mov rorl pop in jno cmc add aaa rol xchg xor fs or inc mov pop imul jp pop push jo mov mov mov and cmc lods or pop or mov pop addr16 lods mov mov test loopne inc fistpll jl lds orb cmp hlt pop adc sub sub push xchg mov dec cmc pop lea adc bound mov fs or arpl mov add xchg add mov jo test cmp ret cmc dec sub pop mov adc lcall ds loopne in jmp add gs (bad) ret sarb push ret push fildl add inc mov cmp dec xchg add popf addr16 pushf or daa cld and daa mov adc movsb add sub call mov adc inc adc mul adc add adc shrl (bad) cltd mov popa cmp adc push adc inc xchg loopne inc or inc dec (bad) cmpsl sahf je lahf sbb push andl cmp repz xchg adc lret or add sbbl cltd pop jecxz les insb call push popa sahf leave xchg xchg ljmp sub pop and addl inc je (bad) rep cmp or repz call dec xchg jmp gs (bad) or popf lahf push les push cltd out repz mov les dec (bad) mov pop ja je adc xor xchg xchg or adc test xchg adc loope adc mov cmpsl lds and addb ss (bad) cltd arpl mov cmpsb fs addr16 lret aaa or mov mov popa and arpl push fwait xor dec loopne stos push dec pusha mov orl inc insb mov shrb insb lret dec dec pop outsw push out mov sbb mov adc fstpt lods lds xchg xchg mov les push bound fidivrl inc in push jnp rorl lds pop popa addr16 jae sub mov push dec lret xchg fs mov jl cmp adc push mov out jmp jg adc mov mov mov sbb lds pop push sub or jb int3 adc or dec aas fs add insb add or xchg loope add jecxz mov jb rcrl xor mov sub dec leave out pmaxub xchg call scas push or movsb (bad) leave xchg arpl jmp or xor test rcl mov into xchg jb jmp or sarb js pop gs shl es cmpsb out cmp cmp les mov xchg dec ljmp (bad) (bad) pop sbb jge sarl inc xor rcl je mov loope addl xchg stos xor xchg inc xor loopne lds inc in movb inc in jnp rorb mov out add subl fistpl ret add repnz out jb lcall psubw inc andl push and mov clc xor (bad) mov int3 insb xor js sub pop push adc data16 xchg cltd imul dec popa sti subb sub adc cltd js sub cmpsb mov mov mov mov arpl xor jp stos movb ficoml or sub jle ret loopne mov mov mov arpl push mov in ret pop addb cltd in sub aas mov ret mov call sti in test and or fisubl mov push les jl dec jecxz (bad) in inc mov push xor mov enter cmpb dec pop stos adc xchg xor or sbb dec fstl ljmp dec sub cmp push add sub mov nop fs xor lret or outsl dec popa mov mov pusha je ds push sbb stos pop pop or pusha push insl and inc ret sbb mov jecxz xchg and push pop push dec sbb xchg xor xor mov pop mov push pop popa jno fiadd xor mov jecxz xchg sub sbb add sub sarl int push hlt fs xchg cwtl nop add insb and mov mov repnz js fs imul and pop jb mov shll sbb in inc js cld je xor dec js mov xor or in sub sub stos sub cmp sub xchg fadds movsb outsl add push das cmp mov push xor sbbb lcall aam test pop lret xchg add or or fcmovb xchg xchg (bad) cmp sub je,pt add sar mov pop iret je clc pop mov lret mov bound insb lods or mov add mov (bad) xor fs lret incl push arpl and rolb fild mov xchg push inc xchg scas lret xor (bad) pushaw add dec xor (bad) mov pusha pop cmpsb xor ljmp or sub faddl or mov push xchg loopne loopne mov fisubr and dec sbb xchg in ja (bad) sub fcom mov pusha mov inc or cmp adc (bad) enter inc mov test rcr leave or mov inc sahf adc cmp cmp sbb fwait mov xchg xor scas mov adc xor (bad) adc cwtl xchg xorl cmc movsb test lods lea in (bad) adc mov imul movsl inc aam xorl or xchg mov jno and xor (bad) fstps cmp inc stos xor adc lret cli xor adc mov es aas cmp cmp loop arpl mov push xchg push push pushf mov nop enter mov mov popf pushw test pop cwtl push push pop and mov or adc sbb push jmp movsb inc lods push dec cmpl inc scas repz jns cmc gs outsb shlb popf loopne cmp les xchg inc sub test cmp out pop hlt jmp xor inc adc nop lds xchg cmpsl xchg cmc and ljmp mov test add pop (bad) cmp dec notb sbb adc ljmp adc sub inc bound adc and stc adc adc inc push push adc cld mov add lds inc popa outsl mov lea mov outsl mov inc icebp cs mov sahf or and jo push xchg mov in shll jg jo pop push mov dec test pop mov jne (bad) push inc mov xchg inc movsb xchg and mov (bad) fidiv xor test pusha sub lds mov cmp xor cltd mov (bad) push add cs push or or nop sahf bound xor sub xchg bound push xchg and test pop push xchg sub add (bad) (bad) cwtl jp jbe or outsb lcall addb sub cmpsb aas insb xchg data16 je add mov adc leave ja or lds or (bad) jl loopne lds xor sbb xchg lock repnz pop push cltd in mov test cmpsl dec test in mov jno xchg sub (bad) mov sahf (bad) cmp cmpsl add stos push jmp push bound js clc mov cwtl mov movd test mov sti in cmpb in rolb lods scas mov xchg js lahf incl jl xchg mov push jns ret orl pop xor adcl jl mov test add mov (bad) xor xchg ret dec enter sbb cmp adcl test enter les mov dec fadds das sbb in mov addb ds (bad) xor cwtl jo adc stos cmpl subb mov dec rolb xor (bad) jo add jns mov test sahf jl add lahf and roll or or cli mov or xchg lds xor xchg stc cltd push inc test dec mov imul xor adc sub push pop xor je sub or inc scas xor movb inc and inc or ds adc cmp rclb (bad) dec inc into cmp ret (bad) ss adc xor fs pusha pop dec or inc test jecxz mov pop lds jns roll dec rorb push (bad) (bad) je in push sub jecxz mov pop and pop stos or aam or movb sub mov or dec addr16 arpl mov sbb dec dec or inc or sub cmp lea (bad) enter mov pushf push and stc xchg cmp cld fisttpl clc jns mov pop jo fisttpl adc sub sbb sub (bad) mov test rcrb mov mov or or mov lea xorl adc int3 rcl inc adc sub and jle loope aad test loop add xchg or pop push andl adc xchg xchg jo jecxz xchg daa cwtl inc gs pop popa repnz jl or mov mov jns pop psraw adc xchg lods scas jae xchg test jp or jl adc jo pop lret popf jecxz rol arpl fs push cmc xor jp adc imul cmp or cli ret jne lds push lret je scas int jbe add fs out sbb loopne cmc or addr16 xchg loopne lcall push pop les mov call insl push mov sbb cmp addr16 or xor lret jl and call dec xchg lea add adc or xchg je adc popa lcall repz adc int3 mov dec dec add or sub mov stc mov pop ret add mov sub adc jne push xchg and ret adc daa dec cltd and fwait xchg cmp std pop or adc or adc push sub mov lock xchg pushf notl popa lods pop and pop ret addr16 push dec jno cmc or mov test or add mov (bad) add rorb pop int3 ja xchg sub ret add or test je inc sbb mov cmc imul mov push outsb sbb fstpt cmpsb sub rol dec (bad) inc sub (bad) jno ret popa data16 sub add sbb jbe dec pop and dec daa or scas hlt in xchg pop and sub (bad) pop arpl add mov or mov dec enter or mov xor (bad) movsl and push ret xchg lea add je cs sar xchg lock dec rorl mov fwait push rolb push xchg sub sbb mov add addb add fildl pop rolb cmp mov fs add or push mov sbbb xchg jle cmp jne cmp out add push into js mov cmc movsl inc pop jge cmp push mov data16 inc js adc mov roll add vpackssdw fmull lret lret push xlat mov sub adc jmp fs adc add sub and push pop (bad) inc movsb xchg lahf cs or imul inc xor jecxz insl outsb dec test les sub push mov and insb mov in push (bad) or cs lock ja cmpsb adc mov mov insl adc adc fisttp or jo (bad) sub ret sbb xchg sbb divb adc jb je and pop and rclb adc xchg cmpsl ss iret clc jns dec dec aad add and pop nop scas lods out push sahf (bad) enter shrl add mov mov sub pop adc fistp sub mov sub fs imul cld adc inc out popa add cmp lds pop cmpsl xchg and cmpb mov push jge xchg push mov jmp jl cmp lock xor or xchg sti and aas test (bad) push adc sub or adc sbb and or (bad) fistp or hlt add sti loopne fs loop sub cmp flds imul jbe popl cmp (bad) ds jo adc fs mov hlt addb mov cmp pop sbb loop cmp adc int add repz mov sub stos ret jp (bad) push scas sub jle addl inc daa dec ljmp test movsl push push inc mov cmp push push or scas loope sub sub and fstl or rcl sti jecxz in jbe into push arpl push sub or mov imul pushf js cmp popa xchg cmpl adc pop inc ljmp pop sbb push pop and lea (bad) mov or sbb and test call add (bad) in push adc mov jo popa xchg je push out and mov arpl mov hlt xlat lods fs add mov repz hlt cmc sub lods jle cmp xchg add ja xchg ds sbb sbb mov je push lock pop inc lds dec sub jbe pushl aam mov add movsb shll jecxz mov push and loopne hlt lahf stc rolb jno call lret stc mov xchg (bad) push adc adc cmpsb ret push sbb mov ret push add mov cwtl int3 push pushf sub test mov adc jmp les pushf iret daa cmpsl and mov sub aad mov imull ficoml cltd cltd dec sub mov and or mov pushw xchg push xchg mov xor ja sahf and sub add daa or das sbb xor adc sub cmp pop aas cmp jae cmpsl jns lds xchg je push add (bad) push cmp test ds stc imul dec inc sub jo out or cmp test mov push mov mov sbb pop xchg clc push jae cmc adcl xchg inc je icebp stc adc jne cmp ja enter push mov inc fnsave and mov lods stc cltd mov xchg std lds adc inc (bad) pop movsl dec mov dec scas dec in xchg jne inc lea jb outsl jmp push cs add cmp jno and or mov and mov adc mov mov ret pop or pop test popa sbb mov loopne je xchg push imul hlt icebp sbb test sahf push loope pop subl daa dec lret jle xchg push lcall xor inc inc xor adc dec cmp cmc repnz ret xchg ss and mov lods fwait mov ret orl ret pusha pushf arpl stos push cs ficomp mov je shr sbb xchg push xor add mov or je mov in jecxz inc sub and les xchg mov adcl pushf and and add cmp push adc push mov lds adc mov stos (bad) pop push insb mov aas popa insl out xchg (bad) or sub iret or fiaddl fcmovnu sbb outsb pop mov push ret lds push test mov imul addr16 mov cmp mov out lcall mov and jge outsl adc jbe dec dec adc xchg jne pop movsl sahf outsb sub sbb js jbe mov cmc fcoml add jp mov out or popf jb lods push push pop push adc mov adc push into xor push mov mov sbb push xchg loopne daa push xchg into push andl je dec push xchg sub dec or jmp jbe sub push movl sahf test mov rorb dec rorl comiss imul add xor mov fs or dec pop out xchg sub and into rcrb ret add or inc add inc cli add dec in ret mov ret adc push xorl stos push ret or push pop inc and inc add je (bad) mov je sub test enter fs pusha cmpsl sub (bad) xchg mov mov scas inc adc add sub jb and inc dec add movsl sbb adc scas and mov add mov cmp jno out xchg xchg das inc jns xor stos int3 in or and sahf xchg scas les sub dec shrl inc sbb add mov rcll cmp sbb and inc rorl lret lret sub pop fmull pusha stos or sub test xor xchg repnz xchg or (bad) les scas xor sbb cltd mov cmp sarl cmp jge dec dec xchg pop (bad) mov push test xor mov xor pushf loop mov daa rclb add or or movl add mov pop adc cmp jl fs jb inc xor mov orb pop adc adc inc les pop cli daa mov je sub add sbb add adc test les cld insb (bad) lret imul adc je pop and in mov pop pusha int xor dec xchg add je aas push and sbb test add aam mov add scas popf and cs jl and jge mov dec js sbb lds jle ficom sub add cmp or adc add (bad) fnclex xchg js sub push pop push sub rcll pop adc sbb pop add dec pop lds fldenv fstpt push pop mov movsb add cmc fistl (bad) test xor or movsb xchg jl loope sub pushf flds (bad) xor cmp test test ss mov dec stos test sub lods mov dec or push lock mov fcomip addr16 inc xor ret lret xchg lahf scas cmpsb adc add and xor dec cmp cld push inc scas sbb mov cli mov xchg jge mov mov cmpsl (bad) adc adc pop je sahf add cmc loopne (bad) mov jg mov mov out add or inc adc out into or ret push add mov xchg loopne inc outsb imul mov div xchg or mov push hlt inc push or and add and cltd add ret push (bad) and in outsb xor dec incl popf popa mov pop mov sbb cmpb pop (bad) mov or inc adc and adc mov and (bad) cmc xor and and and xor leave inc pop add fiaddl nop (bad) mov ret adc (bad) cmp mov mov imul test (bad) push and rcrl (bad) xchg repnz scas lods xchg adc jo sub pop sti sbb sub xchg and adc call mov xor and inc cs fcompl aaa inc sahf outsb and int3 sub or fsubrl ret or ds mov push cmpsl mov psubsw jno inc and lcall mov pop jle decl insb mov cmc add mov mov cmpsb mov xor je push mov mov xchg or (bad) sub adc iret pop test dec xchg xchg push in adc mov sub add std push repnz mov pop mov pop ret test pop test xor scas or or jge sarb mov loop ret cmpsl mov and data16 lock add loope (bad) inc dec ds lds mov sbb mov jae and or in sarl cmp mov je lret sbb dec fidiv in dec jmp cmp xor push xchg jle pop mov push mov les scas imul ljmp xchg and mov xchg rcll shll fildll pop or xchg (bad) out or xchg pop mov mov pushf insl les lcall dec mov ss xchg ss sbb add addl adc sbb or adc loopne or sub mov test call int3 mov pop andl movsl and pusha pop inc push orl xor loope andb or mov repz push popf es call rcrl lods mov (bad) xor fdivrp jl js mov les jmp arpl add pop push jne test sbb sbb js add sbb or pop jle sbb push jnp das sub stos mov inc (bad) push mov dec clc sub xchg lock in scas dec jle jg or jle push dec iret bound xchg cli iret out (bad) add or jge enter inc or mov xchg aas add outsb test jp pop push inc sti mov nop inc xchg outsb xchg and (bad) ja popf (bad) les or pushf das or cwtl inc mov xchg clc out xchg push xchg test and cmp xchg sub loope call or adc push xchg jmp loop repz les mov cmc addb mov xchg mov icebp outsl imul xor and lds sbb cmp movsl inc inc cld lret loope (bad) xchg lods lahf or in pop mov movl sub loopne jecxz ss adc in jne adcl or cmp popf jns,pt lods add jae cltd jge pop pop shll jmp adc jno xor lds pusha addr16 popa daa rcll cmpb pushf cmpl fwait sbb ds (bad) cmp pop xor (bad) test add stos xchg jmp (bad) popf icebp jp test fldt push js push nop vpaddb inc stos rolb jmp test popa cltd imul je adc add add pusha das mov shr iret and push lds push dec out add idivl pop in cmp push and insb jle pop or push js mov pop in jg dec xchg xchg stc and ljmp js mov push inc pop dec and loop cmp je mov xchg sbb mov mov in adc cwtl cltd adcb popl xor jecxz movb (bad) pop xor fmull mov out gs xor testl jns xchg push mov jbe (bad) and aam inc jno in (bad) fcoml idiv mov loopne notl mov test (bad) mov or nop aas mov adc xchg or lds dec loop push gs xchg test xor in sub fwait adc xor cs (bad) popf and (bad) iret mov add or push aad xchg hlt data16 sbb fmull enter dec rcrl movsl sahf dec jecxz adc and cmpl into mov out movsb mov cltd jnp daa mov je add nop and mov popa or dec inc leave or lds inc std paddw in sub loopne push mov mov sub les dec mov bound xchg or jbe and fadds cmp aam je push mov sbb mov or dec or inc mov repz test jecxz daa or scas push loop push pop jmp sbb push js cmp insl inc faddl scas and adc cltd lahf outsb dec imul mov xchg lods fadds jne lret cli pushf jb push scas pop push testl inc or std mov xchg dec ds pop or sbb pop mov xchg xchg adc outsl add (bad) xor adc movsl test fcomi stos xchg aaa fadds xchg insl add mov xor repnz sbb cwtl mov xor mov cmp mov xchg and ss jmp jnp jns push test cmc cmpsb and sub xlat insb lods sbb leave mov inc scas test inc xlat pushf sbb cmp mov xchg pushf mov out push mov dec xchg nop flds sbb add mov dec out jle lock add lret stos cmp lea or (bad) daa jecxz int3 movsl mov mov loope push sbb jecxz adc and add loope mov subl test shr (bad) or sbb cwtl (bad) and push push jp mov sub and add scas or inc mov inc insl pop fistpll inc jmp xchg add (bad) clc incl das push dec js inc subl sub das mov popf mov push call mov add arpl cld shr cmc xchg into js les loop push mov fs lret popl push pop inc add (bad) hlt daa mov jmp push (bad) or mov rcr lds sbb shlb lahf cmp sub incl push lahf xchg and add test or (bad) je shlb add dec mov movsl mov leave rclb pop push scas (bad) mov imul pusha addr16 mov sar and add or sbb mov or add xchg arpl sub pushf and in sti or xchg insb or jge leave mov mov jb not mov mov inc push stos cmc mov adc sub xchg bound inc cltd cld mov loop imul push ljmp arpl test pop pop or mov ljmp or push mov and dec xchg pop aam adc adc inc test rcrb or jo pop sub xor xchg sbb mov xor fs lock pop insl jp sub inc movsb sub adc xchg xor and sub cltd dec adc iret popl ret sbb dec ljmp leave in push sahf mov insb and lahf and adc add test jnp and xchg movsb mov mov and rorb pop aaa movsl dec aaa gs cltd push xchg cld xor (bad) das mov test xchg loopne fldl enter movb adc jg in cs mov mov jle and test je movsb and cmc (bad) push popa xchg dec dec sub xchg cmp out dec loop xor loopne pop fs test dec jge mov sahf aad out push test mov cmc mov je jl data16 stos sub mov xor sbb in loope in pop sub fwait push inc or je cmp or xchg push test mov pusha add mov xor xor mov mov cmc adc inc push mov mov jbe test adc sti stc mov pop imul rclb sbb fisttpl je dec or stos xchg cld andl lods or inc aad dec cmc or dec insb int3 jg or and add cmc and push stos push inc popf sub repz pop rcr sbb sub fwait js movsb cltd mov xchg push shlb push add inc pop pop in subb xchg dec cmp sub ljmp jmp jo and and out iret es adc (bad) xor es mov mov push jo xchg (bad) fs insb or push nop fisubrl fisub pushl jl jbe fs inc and pop or je mov in adc xchg push out dec or data16 je (bad) cmp jecxz xchg mov loope dec xchg or fistl sbb cmp add andl xchg (bad) fdivrl scas cmp movl hlt cwtl iret mov in test pop xorl ret repnz cmc xchg or stos dec stos jbe cltd sti (bad) push in or addr16 (bad) out or lret mov loope icebp test dec sbbb ret movsl in mov aas mov pop dec dec xchg in (bad) dec popf xchg push loop sbb xchg jo jl add clc (bad) mov mov jge mov jecxz pop lods popf fs sub jle and loop xor or jnp out lods inc js push mov add mov insl call push xchg je mov addr16 popf ljmp add aam insl dec dec pop bound jo add sub ljmp jle shrb cmc push dec xchg jg or inc or lods test add cld jns (bad) cmp or jns or jl inc xor gs cmpsb push cs test add ret adcl ljmp add pop mov in pop cmp adc cld xchg out sbb test cmpsl (bad) cmp or jecxz cmp cmp out mov inc sub test (bad) ja lds and push rcll movsl and je fist je (bad) jle in mov enter pop xchg jae adc cld icebp adc push xchg int3 dec test cmp inc (bad) lods jbe ds sub inc test sbb jl out xor test divb sahf and jmp and mov jae mov push cmp mov mov push sarl rcl adc cmp lods adc outsl cmc add (bad) jns or sahf lret push mov inc xchg jbe xchg lods mov jl das mov xchg push movsl pop sahf add lret add inc pop xor push add lds inc or lret repz pop hlt lahf and test mov mov cmc sbb jne (bad) lcall stos cmc repnz ss mov jb ja cs mov and mov dec ja cltd or fldenv test or mov or test xor add xchg test add daa xor fbld inc mov cmc mov stos adcb out mov xor movsl stos rclb inc mov in test mov aaa insb sbb adc adc mov and or sbb sub (bad) xor cmp sarb ljmp mov and jl or and rorb lret ss aas cmp pop lods dec pop xchg xchg dec lea and sub daa inc in mov pusha mov or and and dec dec push add ret xchg in add fsts out pop test in lret xor or testb mov xor xchg jp mov xor lock scas insb mov or je jg xchg dec aaa xor dec push sahf jp jecxz pop and movntps push es push pushf sub sub bound or lods pop je or imul (bad) jno sub fs insb adc xchg cmp push sub lods adc mov add add add xchg je call mov jnp or or loope push cmp jno adc add push xor rclb inc psubsb call jmp cmp cmp inc enter das and nop push sahf and or or jno scas sbb mov xchg cwtl pop jmp and xlat clc pusha xor or jmp mov sar xchg (bad) fcomip sub lret je sub push jae xchg (bad) jmp pop lods or jb stos cmp in daa cmp ret add add xchg jl fistpl sub popa pushf jno outsb sbb sub xor or insl push mov sbb cs jae hlt adc or iretw les mov mov jns xchg add and (bad) (bad) je and scas ds fwait and adc cmc jecxz lock in xor gs inc scas (bad) push mov scas or gs aam sti jp (bad) int3 sbb jbe sbb cwtl add shrl pop pushf xchg xchg inc push loopne shll and sub xor xchg je cmp in fdivrl or mov or (bad) xor mov nop mov mov mov sub dec or fmul xor sahf test test sbb lea xchg push dec sub cmp je xor stos push in ds nop inc shlb jno cmpb mov or sar imul mov xchg or push mov inc cmc xor pop (bad) xor or clc sbb cmc mov pop jle or nop or or rorb shrl cmp stos scas or cltd ljmp (bad) (bad) xor js add sub (bad) cmp lahf (bad) mov and add xor mov mov pushf inc jl adc jne push lods shlb stc adc je dec stos roll add mov cltd in ffreep and leave js jbe inc adc jecxz push jp ret (bad) icebp mov mov cmc popl add roll arpl or das popa cmp cmpb fildll xchg sub xchg add pop push lcall jmp pop adc adc xchg sar pop xchg loopne adc shll adc in lods inc cmpsb (bad) mov adc pop pushf inc es mov inc inc xchg cs dec push jbe and adc into jmp enter adcl out loopne lods xor xchg pop or int3 sub and sub mov sub lahf mov out pop data16 insb pop adc cmc cmp dec lods les dec and fdivrp mov ja and add mov push mov fs test push ja inc mov sarl and bound inc enter and rcrb pop stos inc jp xchg bound inc popf stc mov in push lds pop lds fcom sbb sub dec adc aad sbb movsl mov cmp out sub push gs popf adcl mov inc in add xchg push cmp mov jge adc inc mov inc cmp arpl cmp loope hlt cmp or bound xlat addb idivb loopne arpl (bad) je or (bad) icebp push dec das (bad) xor push jl xchg ret cmp mov pushf mov and xor ficoml repz push xor xchg mov mov shlb aaa cltd and jg dec mov cld jl push int3 adc mov mov xchg add vunpcklps sub gs push lret adc sub sub jmp movsb adc arpl (bad) and pop and dec inc mov mov jne push pusha mov xchg sahf inc mov std je push lcall pop and xchg loope push lods sbb into fs push xor and call dec xor and (bad) and and gs les ljmp pop adc cmp push and mov imul adc add add push cmp ror jne mov or add icebp bound dec jp xor inc les aas in sub cmc cmp hlt pop scas pushf sahf fdivrl cmp add fcoms das iret mov fs mov or inc push push push iret cmp lds lcall int3 mov lods (bad) mov jge lret mov dec cmpsl add and mov sbb popf push inc pushf push (bad) addr16 mov sar cmp std jne aas add repz push fld loopne daa push xor in scas out (bad) das je xchg sub mov jb mov fsubrs shrb pop or or loop pop test popa mov mov adc mov or add fst lods and in sbb dec aam fs test (bad) jb dec ret add pop sbb sahf xchg or dec and rolb mov jecxz addr16 xchg or pop lock push and scas cbtw adc cmp (bad) cmc fwait jl cmpsb push out adcb adc mov mov sub jmp cmp jns in cmp mov sub or (bad) mov stos mov push faddl jl repz xchg scas adc add xchg sti push movb sub and or adc mov (bad) xor test add inc adc or andl lods jne xchg lret push (bad) and inc jp (bad) sub add dec xlat pop (bad) adc dec mov mov or (bad) xor shrb push sub adc and add mov cmpb add test fisttpl sbb add loopne add orl and xchg or push inc (bad) adc adc add divb mov mov add popf inc sarl je push xchg int3 daa mov arpl jo sarl dec data16 xor popf push cli and jnp lods mov mov xchg pop xor inc rcrb and push setb push xlat and dec out sub cmc xchg sahf or test mov pop or jns rcrb addr16 add jecxz test mov ret mov rolb sub mov push mull lret mov popl cmp mov flds test mov roll xor mov cltd jnp inc jle mov test push (bad) or mov out xchg sub mov cmp adc out sti mov mov movsb xlat ret inc popf mov inc stc sbb fbld mov in add pop out les add and test sbb sbb mov test add cwtl dec mov aaa add xor sbb xchg rclb popf xlat int mov test inc je (bad) fistpl fstl inc mov cs popa mov lret xlat xchg lods insb sub add sub and cwtl les imul std sub ss lock outsb lock leave pop adc fs pop inc sbb arpl xchg lock xchg test sbbl push movsl sub pextrw xchg in mov test mov ss sub xchg dec or xchg (bad) pusha pop push popa adc popf movsb mov (bad) and xchg jnp repnz (bad) mov add sub arpl pushf sub ljmp xchg clc cs jnp je push lret imulb xchg outsl or cwtl add dec inc mov stos aaa cmp sti jne movl dec inc cmpsw std push loopne push out aad in js cmp mov mov and xchg add hlt jg cli or jne hlt aas popf add mov (bad) and cmc mov insb daa rcr cmp and in stos lret pop (bad) or (bad) cmc call push inc push push enter mov test imul adc arpl data16 sahf or cwtl mov sbb movsl ret fcomi push int3 popa inc outsb popf inc xchg jl add or aas inc pop inc pop gs mov xlat loope mov out in adc lds mov loope sbb cmpsl arpl jo data16 push loopne adc sbb fs or in bound xchg (bad) xor adc js je ret adc push cwtl nop inc mov out sbb hlt xchg mov add and xchg out (bad) jae jl lret dec inc sub sbbb cwtl loop jne loope cmpsl pop and imul out push sbb mov and mov pushf jmp in aad cmpsb das mov (bad) pushf lret push imul or adc ljmp xor repnz adc xchg clc dec add cld shll inc xchg or fiaddl (bad) cmc scas mov xlat shlb inc idivl das subl cmp shll xor sbb mov lret push jb adc cmp adc test (bad) mov pop pop test pop insl xchg xor push adc test jb inc kmovb mov test cld cmc in loope gs or pop cmp xor xchg jnp xchg jne popa scas push test test arpl adc add aas cmc xchg insb test mov push fistl lea outsl xchg rol gs imul push adc sbb js jge add and hlt jns cwtl insb insb lea sti imul jbe jne pop inc mov jg push push push jb cmp popa push js dec add xchg sub add insl mov mov xlat mov lods sub mov add add loopne popf std cmp pop dec ss adc iret jnp pop sub inc mov push int jbe stc loopne pop sub andl adc sbb sub and or mov cmp outsl out push repnz mov out xchg jg jmp data16 pop dec sub sub xchg lds mov jge mov xor jo (bad) adc cs xchg mov or in (bad) rcl or adc and add aas or outsl push mov outsl xor sub subb jl xor dec push xor cmp cld xchg jae arpl (bad) pop xchg jecxz sbb (bad) mov xchg cmp lods mov mov aad sahf add sub sbb shlb mov mov cltd dec popa jae pop pusha or xor ret inc dec push sub or arpl call jecxz cmc addl unpcklps sub or dec cmp sarl sub dec pop clc and or lea insb jg inc enter cmp (bad) pop cltd xchg orb sub jno inc adc cmp inc cltd xor xchg and movsl add jmp insb mov sub fisub insl cmp test ret lea mov pop les sub mov stos movsb xor data16 push jge push or jae inc rcrb inc sub or iret pop pop sub loop mov pushf in cmp fwait cmc test sbb mov mov js xchg popf gs test js fimul out mov mov daa jno add xchg and jnp cmp pushf decb (bad) sub adc xchg ret je fnstcw add mov enter (bad) in ds push add xchg pop loopne incl rorb mov (bad) push lahf insl rcll jns adc or cmc sub (bad) jge shr dec jno ret mov int3 arpl and mov xor in mov mov std cmc and mov inc popf jl cmp pushf push mov mov and sbb jl les xchg fmul push push xchg jecxz insb sbb outsb jne add out jl das outsl insb ja test xor mov xchg jg js xchg or js popf aas stc cmpsb pop mov pop adc insb or sbb ss mov inc add imul pop scas stos inc mov dec cmp xor imul cmp (bad) cmp mov icebp push in xchg jg aam jo pushf dec dec sbb fisubr mov rorl mov adc push push sbb add mov sub loope lret pusha add or add fistl mov jbe add xor add add incl inc jnp adcl ds negb les sub ss add sub sub jp add movsb and rorl je out and test fsubs stos cmp rol cmpsb sub (bad) jg mov mov cwtl cmp cmc mov xchg popf xchg push (bad) pusha mov lock add adc xor add or dec je outsb enter fdivrl adc je je sti adc sub movb (bad) or clc jae in push cli adc jge pushl (bad) dec cmc aaa sbb (bad) les dec sub add jb xor push cmp cwtl push add adc cwtl adc push sbb jmp and inc and push mov and and and push add dec mov mov int3 and enter mov and add repnz adc add dec cmp pushf pushf or rcrb (bad) mov in and popa xor add pop adcl mov arpl cmp cmp cli imul (bad) jle lods dec aam xor push aad test push aam sbb mov or fs inc nop inc dec mov jg,pt mov rolb and gs pop das pop das cmpsb rcrb nop shll adc fcoml push push sub lds aas sbb or test mov add lds pop adc cmp pushf or push jo xchg and mov xchg je jmp cltd or mov lods movsb insl das cmpb inc and je adc jmp xchg push jge fdivp iret and cmp push fildl adc bound or cmpsl loop push cmc sarb mov jmp cmp test adc in add and sbb sahf cwtl add mov popf and cmpsb jp xorl add adc mov and fs mov dec add lods cwtl sti xchg sbb pop pop mov (bad) fwait xchg jp push adc aas hlt pop mov or and mov sbb es xchg (bad) lods inc mov mov jecxz mov nop mov repnz je push cs in test or je inc sub movsb cmp lds outsb cltd call pop sbb or xchg xor ret or push popa and fs mov test and shlb mov xchg sarl loopne sub in je sub (bad) pop test mov inc lods adc sahf mov push mov or mov rcr (bad) lods sbb xchg dec daa sub movsl std inc inc sub inc push cmp cmp movl mov dec lods xchg dec cmp xor adc fild xchg jecxz cmpsl push dec push pop sub sbb xor jo lret add push or dec adc adc mov lds xchg imul movsb mov mov addl mov imul xchg mov xchg mov push int3 or cld insb sbb and insb dec fcmovnb xor jae pop jmp adc jg adc lret or adc gs xor mov sbb lods inc and es mov mov pop arpl mov add sub jg jl sbb mov sub jnp sub addl lods mov cld mov idivb es lea xor push lds mov int call insb xchg hlt inc or aad pop in sub push cmpb fbld and int3 inc push push dec and mov mov insl dec adc call push sub cmp (bad) pop inc jno or adc jae jecxz mov sbb popa nop add addb push push sti jmp xor fnop test xchg jmp imul jmp test mov dec sub mov push pop and mov ljmp and mov or int3 add and iret les es sbb in mov push in xorl push xchg cmp aas add mov mov cmpb add sub imul push lds jo rclb sarb outsl cld xchg jmp (bad) adc xor mov (bad) cmc add push jo cmp orl daa mov pop adc xor popa push xor dec pop movsb xchg xchg lret sub cmp pop jecxz js popa xchg sti mov lahf (bad) xor scas loope jnp and das enter lahf and inc incb lahf xchg in adc push push mov inc xor mov add inc mov push or add pop enter jb nop rcrl xchg popf xor addl mov pusha mov cmp add add cmp mov sbb fstl xor xor or leave aaa enter mov xor lods xchg loope cmp xchg or pusha push xchg dec pop push ret (bad) mov loopne (bad) popf sarb std sub mov pop pop sti mov and fsubp jge jbe or in fistp jmp enter in fs loopne out add push (bad) sbb pop pop arpl jns (bad) push andb and test push mov add mov add addr16 in add call jge int adc nop imul or mov fsubrs mov (bad) and sub es test repz in and cmp daa jle enter cmpsl sub lret sub lods pop lods (bad) sub adc jmp push pop js sbbb insw lret jmp xor and mov xor add jbe mov push sub dec sub cmpl adc fldcw mov pop inc aas inc adc adc cmp arpl stos sbb sub add sahf xchg out jns sub push jecxz scas hlt cwtl sti (bad) sbb movsl jbe pop clc das jo mov iret imulw mov dec (bad) and adc loopne (bad) inc sub pop mov or mov pop inc ror addr16 inc rcrb hlt ljmp ss mov or pop in fnstsw jg mov gs xor add add fimul cmpsl call jb jo push mov adc pop aad std stos xchg jnp cmpb sbb xchg add nop lret or hlt dec test add test and mov mov or mov jb je xor push mov sbb idivb xchg je mov inc xor add fdivs xor je and jnp,pn xor push and outsb (bad) (bad) stos fsubl pop push stos bound adc push mov sbb cmp (bad) xor aaa mov pop hlt jecxz cmp sub lods push add pop sub fidivr mov sub (bad) sbb push in shrb lea adc (bad) lods ljmp push addb std xchg jmp mull pushl nop mov shlb jb fstpt and test bound mov fs dec jp push aas or loope sub (bad) xchg cmp adc scas jmp cmp lret incb fsubp push sub cmc jmp je add (bad) cli or add lcall popf mov xchg outsb cmp jecxz pop jbe popf cmp bound pop xor adc adc sub adc lret fisttpll sahf push pop and notb cmp loop mov stos test push (bad) notl sti mov sbb adc lcall popa push lcall fcompl lea xor test or repz mov xchg jle fnstenv jecxz adc ret jecxz jl addr16 sbb aaa js clc xchg sbb popa and inc ret ja ja dec insb sub xchg push cs mov xlat xor pop and pusha out inc cwtl cmpsb lds adc lret cmpsl icebp cmp cmc pusha cs repnz add pop or dec iret jecxz and or jno xchg adc subb rcrl nop dec gs in sti dec dec xchg je sub das lea dec xor cmp xchg mov dec or out call rorb cmp dec lds das scas hlt les loop or sub mov in ljmp outsl xchg insb push repz in or and lock or push icebp and in lcall push pop sub adc mov jbe aaa or jl mov jno mov mov das dec popf lret xchg xchg cmpsl pusha test test mov xlat cmp movsb push (bad) adc push inc aaa scas cmp fstl aas (bad) stc inc (bad) popf mov lock or fdivr add sub cwtl imul aas les adc or xor sbb (bad) scas dec lcall jg out icebp inc pop mov les push popf or pop lret pop lock push aaa add mov cld xchg sbb std push mov decl dec nop and inc cmp movsb cltd call push xchg sarb cmp xchg or jae cmc lret or insb je sbb loope pushf mov daa jb addl into aam xor fstp popa daa fdivl fisubr cli hlt (bad) xor cmp ss fcompl inc cld popf stc mov (bad) sbb sbb nop leave push inc movsl jo jg lods cmpl popa or jle or aam mov add mov inc and jl scas test push xchg dec scas push jno leave sbb dec movmskps das fist sub fcompp cld pop icebp or inc inc or pop sub sub and repnz test repnz cmp les ficoml cltd (bad) or fiadd rorl lds push dec sahf mov or rol insb jecxz jl aaa jno jge xchg leave icebp and js or scas and xchg loopne sti adc sub add add or xlat fisubl or out mov add out sub (bad) into js cltd push jmp sub je lcall pop xchg std cmpsb xor sbb mov test nop (bad) jl pop jle enter insl xor outsl cmp sub mov sbb push inc cwtl inc cs xor and mov add xchg dec xchg inc aas in sub mov jb into cmc movsb add xchg inc xchg jge mov mov gs mov pushf les scas mov das je je or sti into js cmp jbe or mov or sbb out cmp mov push hlt testb cmpsl sbb and push push stos popl in xor sub les movntq hlt cwtl movsl jecxz dec jle gs cmp loope loopne pushf std pop pop enter dec testb out jl,pt and sub lds out popf jns es test xor mov sub popf out mov jmp movsl hlt adc mov mov add lds daa clc mov lods lret (bad) sbb push dec shl lcall pusha cmp add xchg add cmc movsl clc pop fwait lcall inc add rcll test das in lds inc pop dec xchg fdivl imul and xchg push stos add cmc pop das sbb test mov scas sbb rcll fisttp cmp add les je dec cmp jo out mov xchg and lret sub cs call repz rcrb addr16 push dec scas pop rolb xor add xchg scas jle lret or out jo or scas jp,pt (bad) (bad) je adc or hlt ret test ja je clc (bad) insb iret mov iret add mov ret mov mov push add and aaa pop jg xchg add and cmp xor lods xchg lods lret mov test pop cli jl dec jb dec push cmp jb add rcl movsb cmp pop out xchg or rcrb jb test out mov xor xor ficom pop lahf rcll or cmc into outsb data16 in mov xlat jns gs lods hlt mov add cmp test pop sub lds scas test adc add sbb ret inc push push inc jp leave jmp sbb scas dec jmp inc mov lret fbstp and imul stos je icebp dec pop cmpsl adc loope mov push (bad) repnz adc ret push insl cmp mov jno,pt call ds mov loopne pusha ret push dec xchg fwait enter or popa in jg sub lods (bad) cmc mov fistp test rorb dec sbb dec push push cmp inc xchg test ror xor xchg xchg and sub xorl cli mov cmpsb stc daa (bad) mov rep test cmp dec xchg jle inc je push inc mov dec or or or in fs inc lock std inc call and sti rcrb xchg sbb cmc in sbb xor or adc loopne sub lahf imull xor sbb cwtl mov adc xchg cltd in pop jb xor mov popf fs (bad) sub sub lretw enter mov push (bad) iret stos rclb push mov pop std dec or xchg mov and mov jo xor push xchg rcrb xor mov xor sub xchg xchg cmpsl test sbbl sbb add inc cmpsb ja add xchg lds push enter and es lods stos cmc mov inc sub arpl les add lret dec push xchg mov jle popf jl lahf ret aad fildl adc and push std inc pop mov lods sbb push or in dec add jecxz add in adc mov xchg (bad) dec add push stc test push sub jg (bad) jae lea jnp push adc cmp aam and repz sbb dec or or test int3 xchg cmp addr16 mov add jae cmpsb jg into mov loop lock jbe fmulp or call sarb ljmp xchg outsb sub cmc and mov fidivr mov adcl cmpl movl adc outsl cmp pop aam lcall or rcl rclb in (bad) jnp adc cmp mov cmp dec movsl bound or inc xchg out mov aad outsb or cltd sub aas cmp cltd sub add xchg incl jl xchg jnp xor mov mulw jnp jge ret call jg xchg push bound sbb ja ret mov cmp ja push ret and inc adc cltd in int3 mulb or popa and insb fiadd xchg jl fimull pop mov inc xor inc adc fimull pop sbb nop jle sbb lock jle push jl or pusha add xchg outsb jl loopne in mov xchg hlt loop test sbbb xlat pop sbb lods incb push out ret insl jne add sub push lcall dec adc ja subl lcall sbb in jno dec sarl daa dec adc imul sbb pop pop inc xor dec adc add and pop jle mov mov mov lds std pop arpl mov adc sub cmpb add in xchg sub les adc inc jo lahf movsb cmp fmull mov sbb mov ds jl add lods add ds mov out cmp pop and xor shr xchg cli daa dec popa bound in jb mov sub sbb xchg outsl sub test and hlt mov mov call (bad) push pop pop push stos subb xchg inc std mov repnz cmc sti push (bad) mov ljmp test adc sub or decl xchg gs and or mov mov in aam ret ja into test sahf sub nop sub lds dec dec mov mov pop push nop push ret je addb and xchg pop add popa test adc std xchg cmc loopne and jle fcomps and xor dec or out cmpsl fcomps add jp popf fsubl adc rclb pop ss mov mov loope fwait cltd mov insb add adc arpl cwtl (bad) adc rorb push data16 lods sub and add cmp xor sahf push inc mov cmc sub mov inc (bad) test inc js inc inc and add mov cmp sahf pop popl push adc jno add mov (bad) xor mov dec xchg dec and sbb mov sub push out aas or aam pop icebp loope mov ds incb pop add into push xor xchg or cltd insb xchg lahf sbb mov mov in clc add pop mov pop sbb int3 movb lea adc jae in ror xor or xchg mov cmp out insb in xchg dec imul adc cmc adc cld mov inc pop adc sbb inc pop add sub ja (bad) ss fisub cmc xchg push aas lods xor sbb test push pusha add (bad) adc pop mov jge xchg jmp es (bad) std ds pop sbb cmpl dec out int3 mov or (bad) mov or sbb or dec inc mov xchg xchg inc pop dec cli insb andb enter xchg pop add ror jns sub mov and out jg dec mov mov dec sbb aas adc mov pop mov xchg xor cmc scas cmpsb inc cmc jl test or mov sbb nop pop mov out xor cmp push stos jle popa inc cmp and imul movb cwtl adc dec lock cmpsb xchg (bad) xlat out xchg je mov pop lret sub (bad) mov stos (bad) xlat int3 lcall xor mov jb or das xchg (bad) scas stos js aas pop inc iret loopne cmp xor (bad) xor xor ror mov les cmp nop es pop xor (bad) or clc pop push cmc sub sub roll shr mov xor sub lds js lds (bad) negb mov call (bad) pop test cmp and fldcw sub add cmp fwait jecxz sbb icebp sbb add jae fs dec arpl jo test cli call (bad) repz cmp sti in (bad) lods das scas in ret jno mov add xchg sti int3 mov test data16 iret xor adc xchg jno mull add push aaa adc dec lock mov xor out push adc dec stos lret sbb cmp and repnz mov pusha and loop out xchg and add mov xchg sub lcall arpl sub mov js sub inc pop xor sbb arpl jns int3 jg (bad) (bad) loop (bad) inc test jb (bad) out mov dec xchg jg ror or jnp lock inc fstpl and push push and insb push sbb push lods test or lret ds cli inc push inc push pusha ds inc je rcrl adc inc push in jnp in (bad) (bad) loopne ret scas in test jecxz push mov arpl adc and and loop loop nop fstpt das rolb jbe ss enter mov pop cmp pop hlt pop cmpsb mov stos das push clc xchg adc xchg jne lea loopne data16 mov rorl lods mull jge mov in mov jbe push loop push cmp dec mov xchg (bad) cli add and or push inc sub loop mov lcall loopne pop push fcom push lahf mov jne add ret add idivb test mulb outsl in sub loopne ret xchg outsb ss (bad) clc je and xor push jo mov and aaa cwtl imul int cmc xlat hlt ficompl fsubs dec adc inc mov add in mulb xor mov push adc jo add das jbe add cltd lea push movsb hlt lods ret mov xchg pop xchg in ja xor add and mov hlt xor (bad) dec xchg fwait mov test and cmp hlt xchg jmp jecxz andl shlb jnp and outsl sti and jle aaa add lret add cmp js mov out jo mov xchg int or cmp push loopne jl jno adc sub add lds scas add and mov cmp je test adc and repnz call rorl cmp mov into xlat rcl add repz lahf es and (bad) into das dec mov pop adc lret rcrl sbbl push loopne push adc les adc (bad) shl call xchg xor push dec xchg gs mov (bad) loop mov mov (bad) lret inc mov xor xor cmc jnp ljmp leave cli adc fidiv loop (bad) inc add mov hlt popf mov (bad) push enter xchg pop test cmc addl movsl lahf push adcb sbb inc (bad) mov mov push pop lods mov pop out outsl sbb data16 outsb lods lock adc adc movsb ret jmp imul dec sub gs mov in ss loope test pop es xor mov or add jbe sub inc add mov (bad) jg xchg pop inc lock and push xor add sahf xor sub orb in iret sub sahf dec (bad) psraw adc or test fstl je in test or push ret sub cmp lods nop adc or je mov adc scas (bad) mov sub sbb jl outsb mov mov cmpsb mov and cmc xor sub jb mov inc cmpsl dec mov clc pushf icebp dec or enter push jp test jo jb and xor pcmpeqb jbe xor jo lret and out mov mov in and pop jp sub cmpsl outsb adcl adc fiadd (bad) fistp xchg inc or pop or pop sbb shll sbb and loopne cmp rcr (bad) jp lret int test out add out in movd dec or push outsb or jbe sbb push jp repnz xchg aas inc pop lock cmp mov adc add jne and and push cwtl inc push test pop orl sub inc orb test add outsb icebp mov jno mov popa dec xor fstl or aam inc lea lods out add pushf mov mov push addr16 or cli data16 mov lds (bad) lock sbb sbb loopne adc inc sbb add (bad) adc or jmp movsb pop and cmp sbb test mov lahf lea inc mov repnz imul (bad) arpl test jb je in and sbb stos jo bnd sbb mov test loopne cs les lahf je jb movsb jmp lret cli mov sub je sub loope (bad) hlt push mov int xchg mov cmp add or ret fistpll arpl popa jge vmread pop (bad) shll out (bad) push leave jmp push aad sub je push into int3 movsb inc jno mov fsubs mov gs int3 sub test fcoml je fs fdivs add shrb jge ss mov test push add push arpl sub sub out lea (bad) insb call loope cmp and outsl add jmp xchg aam xor out jecxz add (bad) repz jmp arpl test sub inc mov scas rcrb fbstp (bad) hlt pop xchg and add (bad) xor add push sub fld mov addl sar stc add sub dec loope (bad) mov jno cli mov cld leave sbb notl je cli lock mov jmp in int and int roll outsb xchg insl dec mov sub add cmc test jge add pop mov shrb xchg pushf cmpsb or or insb call xchg fs (bad) or push or mov sbb cmp hlt call and mov dec shrb ficomp fs inc pop aaa add mov mov sarb jne,pn xor adc leave or or lds mov sar adc push push cmpsl inc repnz or add adc adc pop dec or rcrl pop push or outsl adc sbb adc ds mov push fisubr decb push (bad) ds and push cmp inc and adc mov syscall js or add test inc iret jge mov fiaddl pop or lods add add pusha jg cmc or out xor push jo mov xorl mov cmp test je add xor mov out movsb mov pop lock dec lds pusha enter jle mov xchg xlat adc ljmp mov cmp jle jbe adc das xchg addb (bad) cmc mov push in pop sbb bound test roll rcr jne stos cmp adc mov dec add lret or adc test pushf xor pop adc add mov das cmp and lret int3 jne sbb xlat cmp inc dec inc pop or adc bound sub test mov mov pop aaa mov push or mov and stc jle or pop (bad) or or das pop jmp xor mov hlt dec jb loope xchg sbb cmp std hlt mov jae imul pop mov test fcompl dec and pop fnstcw rorl fiadd test adc and mov or sub lea cmc sbb lock lods add inc cmc add in push sub and add in shl decl (bad) mov inc insl hlt nop and subb lock call js sahf addr16 xchg in cmc lods aad imul inc faddl xor fwait or xor mov mov inc dec ljmp je or cmp mov inc mov mov iret xchg mov ret sub or cmc andl pop pop jge outsb ds pop mov pop push (bad) mov idivl fwait leave das ja add xor les insl jmp dec xchg stos (bad) (bad) pusha push cwtl in push push lahf or mulb mov frstor leave fwait (bad) xor mov xor data16 xchg mov fsubl icebp fmuls push loopne cwtl pop push xchg adc or add add mov or mov add xchg loope xchg adc outsb mov mov pushf shll mov jns push xor add test add mov test or inc and xchg rcll push inc sub inc clc decb es pop test adc xchg adc jle mov es adc adc cmc or push test dec mov lock dec push rcl scas cmpl lret mov nop mov mov pop or movsl push aam or wrmsr rcrl sbb sbbl or rorb fs daa pop pop cmpsb mov out andl xor jge pop sub dec scas jns scas aam lea jg jbe std adc adc adc adc adc pop (bad) stc xor and loopne mov in add add bound or sti inc mov sahf ja or inc js fs andl adc cmc sbb xchg popa lods xchg xchg test xchg adc jmp in mov (bad) out outsb pop std dec scas lods je jno sub mov dec popf push lret cltd xchg push push mov je pushf or pop or and mov lods clc push push push sbb push xchg push pushf lods lock sub xchg in xor xchg xchg xor adc in mov adc test nop cmpsb je insb adc mov enter stos inc sbb aam cmc sub stos xor ss xchg adc lods out sub cmpsl movsl scas stos movsb pushf test (bad) call xor xchg mov ja,pt jae xchg sti loopne push add pop xor push int3 pop xchg sti std sub popl or imul mov mov shlb push test (bad) lret js clc (bad) stc scas cvtps2pd pop lret jb adc js (bad) (bad) xor cwtl data16 cmc xor mov sub jg loopne add stc aaa movsb add or sbb fnop pop mov cmp xchg icebp movsl fldl adc mov outsl mov sarb and inc mov cltd test nop xchg cmpsb adc pop cmpsb pop pop xchg jl fmull add xor js mov push inc push lea dec out sub adc (bad) sbb pop mov cltd pop out lds jb enter inc xchg daa sbb add out leave mov pop out jae ror sub xchg mov stc xchg in lock mov int3 mov ret xchg mov (bad) mov inc add cmp addb je sahf or test jnp push popa rcr das sub data16 in imul insl pop pusha or loopne das scas lea cmp jg test loopne addr16 jb and sbb je pop push scas test (bad) cltd cwtl ja pop cmp sub (bad) scas mov cmc outsb cs fnop dec adc test dec xchg rorb sub push aad push adc sti push xchg pop pop (bad) jb xor or aam pusha mov fdivrl mov push mov or pushf jg rolb pop mov jg add adc test adc enter jbe mov mov lret xor cwtl fs call cs sub sub call cmp insb test mov xor jle loope cmp popf push mov lods cmp adc or add insb shrl clc leave jmp das cmc jno movsl fstpl or push xchg movsl fnstsw out je mov sbb hlt outsb ss in cmp loop std cwtl mov stos nop add sub inc test jmp lock in test inc aaa add fs loop xor lods hlt movsb jge mov jb sbb arpl adc and sbbl iret jb xor popf jl fs or push mov popf aad and lods or adc add adc enter nop clc dec push fs or or or inc and or cmpsb mov cmpsl mov scas and mov addb (bad) push jmp std out inc je,pn inc mov jp jo popa jmp sbb xchg jno cld pop (bad) lds add xchg add lea call pop xor jmp adc sbb rcrl xor mov nop inc push outsl hlt push add in push lds jae mov mov mov push dec mov cmpsl or add or insb xor pop test sti popa or mov inc add popf pop push sub bound popf loop cmp jmp (bad) lds dec repz sub stos add loopne iret sbb (bad) es ss sub insb jo les test popa rorb pop push push ja push pusha cli pop mov cmp push pop outsb pop aaa insl jns cmp xchg or jp fdivr xor gs out mov imull cmp in cmc mov mov notl icebp outsb jl loopne clc les lahf (bad) mov inc loopne lds sti popa fcoms xor sbbb bound test add loope icebp or outsl or inc aas sub cmp in js cld sar (bad) stc jl jle in add mov nop xchg push cmpl inc (bad) cld add jae movb xchg lcall mov cmp jl push jne icebp push xchg pop jb jno mov xchg mov jmp add xor add jmp sbb in inc mov rcrb movsb jno cli cwtl sbb out mov sbb cltd imul sbb in aam add jecxz mov out ret and cltd (bad) in xchg insb call loopne mov xchg test popa push adc pop fdivl pop adc mov repnz cmpsb leave popa rolb sbb (bad) mov loopne mov dec shrb sub pop mov pop xchg sbbl jge or mov push push jp or add jbe jo add jl loopne jns xchg rorb xor mov jl sbb out into jnp cmpsl scas sbb sub sub xchg jo pop iret ds popf xchg jmp dec add lret sbb push lea je pusha call aaa mov sub or adc pop ret popf xchg jmp jecxz fstpt add sbb add mov sbb in jne sbb mov dec sub lods xchg sahf pop repnz push rcll shll adc or sbb jp mov xor sti fcmovu xor jbe mov jnp push (bad) aaa xchg mov mov insb sub scas mov bound jmp je in pop push mov or in push out out xlat and add lds movsl push jae or xor aaa pop int3 jg orb es not mov aaa gs arpl add xor jmp xchg pushl lahf movl not movsbw cwtl not lea jmp lea jae jmp jmp movl call add or adc or jne clc and (bad) enter xor mov mov cmp pop nop pop mov cmp fcoms int3 data16 lea inc mov dec dec test arpl pop jg mov cmc add cld fwait or mov lret sahf push push sbb (bad) outsb int3 push xchg mov or (bad) mov mov sub (bad) jns aad push push ds add dec and loop jns sbb orl pop sub cltd out negb ret (bad) fwait dec out lcall add add shld call lea jne pushf mov jmp jne gs xor fs insb add test (bad) (bad) (bad) jmp fmuls and orb lock pop or mov dec jbe adc and xchg (bad) mov add sbb popa sbb push or (bad) leave mov add test xchg add ret addb pop and xorb mov sub add rcl rol jo add nop aas inc dec push mov sarl insl test jg add inc sub sbb inc and pushf push jb or xchg lods sub add insl das mov scas mov inc sbb add insb outsl jo sbbl pop cmp pop inc mov mov mov xor ss aaa mov mov add mov call mov and daa cmpsl sub stos sub lods cmpb push aam mov inc dec mov repnz shl pop rcrl cmp mov addb pusha jne pushf cwtl jbe insb bnd pusha inc pop mov pop push add cmpb enter stos or push inc popl or cmp ds aas xor mov jg xor sub sub out out je outsl adc jo loope pushf xor inc (bad) xchg shlb xorl lahf aas popf add mov or xorb xorb sbb jbe mov cli mov add inc mov in rolb adc imul stc pop pop xchg addl in inc add cld cmp adc sarl (bad) lods add push adc mov outsb in add inc lahf sti add push push add jne xor sub mov push imul roll add dec push or dec (bad) lahf into jo cltd test xchg pop popf adc fildl fnsave mov in mov sub adc xchg add xchg mov lret sahf mov sbb es add inc sub or std push ret cmc inc mov cmpsl xchg xor mov (bad) mov testl mov jl jp,pn push in dec jmp or dec inc add mov orl inc add aam xor movb add dec cmc sub sbb mov xchg push jns mov xorl daa push fdiv imul neg cmp add incl xchg (bad) movsl sti lcall mov push adc push xchg mov add (bad) roll scas lahf stos add fdivrs pop stos add in sbb cmc adc jno call mov insl bound movsl adc push jmp push add fimull add mov bound (bad) ja push inc addb adc xor jbe add push subb adc cmp and sub inc mov inc add mov int icebp jno call adcl add enter dec fwait mov loopne and or not cmp ljmp sub jg mov mov inc cmpsl and fdivs test sub inc add out fucom insl cmp add jle (bad) aam jecxz mov popf and mov sbb jo in inc jmp inc cli (bad) jl ss mov cmp loope scas push aam add icebp je xor pop ret mov fs pushf stc cmp lock push inc add pop dec jp push (bad) (bad) inc testb movsb add xlat outsl mov call mov cmp leave or dec add jns push add out adc js mov rcl mov jge add push fdivp jnp sbb pop add dec xchg or testl test and fistpll xchg mov mov adc dec push lods jbe (bad) test push movsb in jnp add insl push stos dec jno popl jp dec les lret sbb push xchg lea inc popf loopne sbb cwtl push out js fstl mov mov inc sarb pop lods outsl jecxz test pop imul pop paddw and fwait xor mov jns inc popa clc add push adc or out add jg lret dec into mov and (bad) mov add movsb sbb test xchg xchg js inc jno mov dec mov mov xchg les or fwait cmp mov stos cmp imul icebp mov jbe divl jg add cmp movups (bad) std test xor jl xor notl jne jb pop add pop xlat movsl js add push sub mov sbb int3 mov cmc add pushf rorb xor inc add pop mov imul adcl push (bad) jnp popf call mov clc add sub jno arpl jg sbb add (bad) imul pop push repz xchg jo push pop sub aad int3 (bad) enter fisttpll lock add mov fdivp fdiv outsl or les js pop lds lods cmp into xlat jecxz (bad) sub mov push es add mulb cli or add mov fistpll push cmp cmc jbe pusha push (bad) dec add int js roll cs outsl repz imul push push ljmp dec pop or das xchg jecxz vorps jge jmp sti lret subb ret add add sbb frstor jge decb pop stos lahf and fs out jle orb dec daa lods xor jle xor lahf sbb adc dec int fidivl add rcl hlt jle dec test sbb (bad) testb or add jae test mov sub cmpsl lea jmp sbb push inc xchg add mov cmpsl dec fistl add xchg xor inc mov aaa add rorb popa xchg daa xchg add jb das jecxz jmp add mov imul mov sbb cmpsb sbb mov push shrb xchg ja rcl loopne add enter ds lret sbbl pop sbb sub lods fstps stc push cltd icebp jmp into mov lea ljmp pop push frstor jae loope adc lods mov add cmc mov add pop (bad) mull or lock mov push (bad) mov fild xor mov int3 mov faddl mov xor mov pop xchg mov andl pop lods push jb add pop sarl mov (bad) adc xchg (bad) and inc lret hlt aaa cmpsb imull iret sbb incb add add faddl xor cmpsl jecxz popf (bad) lock int cmpsb jge inc jo lcall stc add pop daa subl adc (bad) add popf xchg sub or sbb shrb xor sub or push popf test rcrl sub mov enter pop cmp orl lcall inc insl jbe xchg pop jmp inc mov in mov pusha vaddsd cmpl pop bnd aam leave xor xor mov aaa mov mov xchg dec pusha pushl or mov (bad) notb clc add jg dec ljmp insl imul or add xchg out test imul pop cmp adc repz cld add cmpsb fidiv out jns aad addr16 in mov pop ret add fwait out add adc adc (bad) push sub and and or push mov cmp out add adc ja jp in xor cmp inc cwtl iret aaa add cmp in sbbl popa dec imul lods xor push pusha cmp leave mov add out dec mov sbb in jmp jl jnp add mov mov inc lret ja add out ret mov pop add mov fnop mov ds push or cmp push and pop mov insb insl add leave imul adcl inc mov add fldl mov ret cwtl rorl pop fdivrl mov inc lock mov xor mov add mov scas in in cmp add inc (bad) inc addr16 cld sub loopne push add rcrl mov or push movsb mov xor push jl enter addr16 in add repnz jle adc pop mov (bad) je cmp out test add nop jle cmc sbb jp into divb pop pop jmp popa mov inc jne in add scas sbb add xchg add bound ret je imulb mov xor fpatan add (bad) or dec flds sbb movsl lret movsb sub jecxz or mov pop mov enter dec cld (bad) pusha add es insb sbb andl (bad) push loop ret cmpsl xchg add test pushf popf add cmc mov xchg adc xchg sub or stos mov mov icebp push (bad) cli push std push mov jmp cs cmp dec jb test js xor pop sub adc sbb icebp cmpl and mov xchg jo scas add daa imul sbb jl ja mov add and add lods dec adc inc pusha push insb mov hlt pop push fs pop xlat add mov movsb push (bad) ss shll nop aas jo subl jl mov xorl push push in xchg repnz push jb,pn add sub lds add mov outsl sti sbb cmp pop jg add cmp adc shl andb not fistl mov pusha add fild movsl xchg sti mov insb lods mov imul jno pop std vmread mov pop inc pop adc sbb shlb sbb add push add out sbb adc sbb add fistp cmp push xchg mov ja push xor lea pop dec nop and cmp push cli int inc imul ret iret push xchg ljmp xor jl (bad) cmp sub pusha pop jae sbb cmp mov cli in aad int3 aam xchg push xrelease push rcrb mov aam jns add mov xchg out pop jge js pop inc dec add ret into ja data16 imul sarl push clc dec add inc lea jnp jne pop out fild stc mov lcall mov pop pop pop jge lret aam andb add test jnp repnz or dec notl jp dec in mov inc imul add fidivrl add rcll cmpsb fwait sub or pop mov add lock adc sahf push push ret mov std lock or jle pop cmpl enter lret adc add decb fs cmpl pop xor sbb subb aad mov jne roll ss xchg ret (bad) sbb repz aas and (bad) cmpb jo inc xor sahf mov dec loop pop aas add mov mov sub mov in jg add (bad) jmp sarl ja sbb vmovq lret sbb in pushf dec mov sub push lods sbbb push (bad) cmpsl loopne test inc adc add lock jno cld or jge lds cmpl lods aad adc inc jge add das mov andl add dec and out dec je xor loope fs jp add pop or pusha jb xchg add dec push lods leave ja loopne sub pop push jp pop add imul push adc loope sahf sbb mov jae dec cmp cmp or out faddl not adc dec jecxz in xchg sub or (bad) rolb popa mov mov lods mov sbb fs or xor inc xor add imul stc or fwait push pop insl data16 mov gs sub sub cwtl icebp add or mov int3 pusha mov testb dec push out test sbb sahf incb clc dec mov xor je mov imul ljmp and shll add add adc out sub (bad) data16 in sarl push add or into push jbe ds hlt divl xor ljmp repnz cmp cmpl test aas mov add lods movsb lret mov lahf xchg add adcb jle popa add mov pop fwait (bad) (bad) or adc xor push in (bad) sti sahf lcall gs outsl mov xor rolb dec sub lea js push pop pop lods (bad) subl fs adc dec jno mov std pop mov dec movsl dec mov mov xor std dec add test hlt adc int3 addl pop jno je dec and test scas push jae add sub out jb jge subb out lret test mov mov movd rorb add arpl or sub popf mov or sub add mov bound add push xlat rcr ret adc jo jg add push mull call add cmp push test aaa inc mov lea cmp or cli mov mov pop pusha mov mov push pop jmp xlat sub push nopl push mov scas adc lods movsb add jle es hlt enter xchg or rcrl jg add mov stc and xor push jbe pusha jns push jecxz jge xchg icebp push pop xorl aad jno test sub sbb in jo add or dec into and cmp popf outsb fildl ljmp add mov out ret sbb mov add dec ret ret xchg jbe out sub xchg sar adc cmpsb inc fdiv pop mov add pop stos add rolb xor adc and or (bad) mov and icebp xor add iret mov fdivrl fcmovnb add (bad) adc adc or sub (bad) rcl (bad) rolb sbb or rcl cmp jg (bad) aad lds jne adc cmp stos stos fldt sub ljmp cld test orl pop cmp adc jecxz out sbb imul add dec rcll ret mov lcall mov daa insl push or into mov cltd and and ds call (bad) enter and (bad) outsl add xchg sbb data16 xchg js add sub aas aam out push dec xchg or add jecxz inc pop stos push dec lahf mov add mov stos nop xchg sub pop xchg jg push lahf push xchg mov fsubrl clc test jp add inc inc movb insl mov js mov or inc or cmpb sub xchg push add stc test mov insb jb jmp pop sbbl (bad) icebp insl (bad) add or add mov out cmpsl and mov xor or push xor in add push hlt in add cmp and sahf adc mov scas mov jne add mov and inc xchg outsb xor push push je or es sbb cs sub or dec push outsl in clc stc js inc lds arpl xchg sbb dec int3 lods dec mov cmp cli and cmp pop push fimul mov xchg jns xchg push faddl xlat adc sub fsubp sub dec and xchg jp pusha repnz das out ficom leave rclb or in test jge and insl enter gs jle mov xchg xchg nop loopne je hlt lcall or jecxz repnz cli leave dec add push sub mov stc fnop mov rorl movsb fidivl ja cli imul mov loope and mov lret cmp (bad) pop or fwait xlat sarl mov jnp dec cmpsb dec mov cli std ljmp scas mov jno into xor jmp inc aam loopne (bad) fistp fist push out les out jl rcrb bswap pop xor shrl inc mov mov dec adc mov push mov push insl jne mov fist fsubrs mov (bad) into or loope mov call mov not xchg movl pop mov bswap movsbw mov mov movb mov movzbl pop push pushf pushl ret mov lea call clc test pusha push cmp pushl call pusha mov call pushf inc jmp test push pushf pusha lea je bt bt clc sub test push clc bt cmp pusha lea ja clc pusha pushl imul call call push jne pop push or (bad) rcll addr16 ja aaa or pop test sub and sarb dec je lods mov mov jp mov stos sub loopne push add fistl xchg push and aaa cld pop js push sti and dec push sub pop lock fs cld mov daa fidivr sarl js cmc add faddl pop loope xchg in popf (bad) sub fdivrs pop push (bad) jecxz push jb outsl cmp repnz xchg mov mov mov lahf divl shl push fimul mov inc es cltd cmp sub cmpsb mov xlat ljmp cs pop inc rolb int3 jno push pop (bad) call shlb and jae push lea jne pusha pushf push stos pushl lea jmp jp mov or adcl and je shll (bad) movsl jbe xor fistp aaa adc test fldcw pop sar pop pushf xchg xchg sub aas mov inc mov test test and insl nop lods sbb rcr add fstpt and aam rclb aaa iret shrb fidivr mov pop push cmpl lods jno outsb cmpsb and (bad) mov pop dec out out dec clc jmp add inc scas sbb inc mov and xor push push test mov or mov or fisubr daa push fwait orb js cmp xor incl or xor (bad) loopne insl xlat sub mov in fcoml push sub lock (bad) repz pop int pop sbb lret add jg jl mov jg repz nop js cmp cmpsl fsubl push xor andl enter sub pop gs popa inc xor push mov jns xchg rcrb movsb lea adc and mov push fidivr nop (bad) call jmp add repnz inc aad jge,pn push nop cs lahf xchg das ja push jg das mov pop sub test xlat mov sarl cmp test and jae fist or inc jnp test loope test into push push xor adc inc push or mov or mov rolb inc mov mull mov pusha jmp add sub iret cmp daa ret pop add fistpl clc popf out bound rcll ljmp inc mov arpl lea jae push pushf pushf lea jne jmp not dec rcr rol setbe push stos mov not mov lea jmp inc shr mov adc xchg sub jmp sub pushf lea call pushf lea jae cmp call push dec xor sbb inc (bad) je or mov pop data16 push (bad) lret mov test mov adc pop inc pop (bad) imul push ss cmpsb dec or jne pop xchg scas ds gs repnz jns jae inc test mov and es xchg inc push ljmp in sub lcall jl jnp in jne pop xchg mov add and jns mov inc mov mov daa stc es ja cmp (bad) arpl cltd sbb out movsl lods lock clc push mov add sbbl push inc icebp push cmpsl (bad) adc in ja sbb subb add dec dec fldenv or pop mov add jmp clc or pushf lea je daa bsf xor lahf sub push inc inc mov btr not lea bsr mov sar push shr lea test bts dec lea mov stc bt pushf or push lea je xadd add movsbw cmp (bad) testl fisttp movsb movl xor jmp jge seta add mov rcr jmp pusha jmp inc call mov lea jbe pushf mov pop lea mov movzbw movb mov jmp pushf mov lea jbe xadd mov rcl shrd sbb add call sbb push and inc sub inc dec push adc pop insl cs subb (bad) fprem1 lock adc cltd dec xchg xchg das mov adc stos xchg out stos (bad) lcall mov stos aam push jno push out ss imul mov cmp clc mov das mov inc (bad) sahf and std loop test nop push and data16 gs xchg push dec ja lods xchg fst push lret (bad) in add (bad) xchg jne sahf cmpsb or lock or pop xchg add push jge push inc mov mov shlb or dec pushf jmp pusha movw call cmc (bad) pop ret and nop scas push ret nop aas adc imull test pop dec jle ds imulb mov sti pop hlt jns adc push ret (bad) xor popf (bad) mov mov fucomp lret lret xchg mov scas into dec nop ret mov rcr test fimul sub cmp lahf jecxz push imul pop ljmp adc adc leave loop std aad std (bad) in push dec sbb adc (bad) jb lea push or adc int3 add mov js or inc scas aaa jmp iret pop mov xlat iret (bad) (bad) fimul mov add push mov xchg in cmpsl push xor xchg xor inc das aas sub loop out xchg rcrb sub fiaddl stos ret imul and xor lahf test pop fs push lea xchg mov inc divb call lahf sub out sub jl sbb xor scas push mov cmp cmp daa inc negl inc pusha movw cmp jmp cmc jmp pusha call shld mov das and push bt xor push push mov aaa movsbw shr mov stc push test pushf push lea je dec mov rcl or add and add mov clc push movw test push push call loopne cli push daa or stos ja lret inc scas (bad) (bad) cmpsl cs (bad) mov add (bad) shr push call js negb cmp jno in adc sub mov add lods mov jle dec or imul adc aad add xchg cmp sub dec push cmpsb mov test sub xor aad and dec cmpsl mov pusha push push ljmp rcll push inc lahf jne es adc xor lret mov shll cmp mov add ficomp jb imul insb repz xor pop into out xchg or inc jns adc xor jb sbb in lcall adc xor mov neg push (bad) (bad) pushf (bad) xor mov mov adc mov adc (bad) sub xor jno jecxz and loopne stos add cmp xor ss call cmp push jnp mov jnp xchg repnz pop sbb inc push dec sahf xchg call lds pop in (bad) lods cmp (bad) mov add jo pushf and or and push cmp cld dec mov test and xchg ss and mov test daa test call inc pushf and inc imul xor scas (bad) adc ja inc lahf xchg xor shll in negb cli jno mov pop jb sbbb shr inc adc or movsb mov bound push jnp mov mov data16 and add mov mov jne and jae dec dec jp inc mov pushf inc mov jmp pushf lea je push pusha lea jmp call dec outsb (bad) push and inc cmpsb (bad) hlt xorl out dec xchg test or push fldl (bad) push scas pushf fldenv sarb inc (bad) mov fbld insb pop push pusha repz (bad) or pushf iret pop add aam mov lods loopne mov mov lea or mov addb call pushf cmp pushf call and mov and inc sbb outsl jp pop push jle cs data16 and dec mov cmp pop inc ljmp out adc mov pop rcr je jo sub pop insl jne leave xor aas fisub or negl mov dec imul in inc out mov imull jne and cld aaa fnstsw jae fadds test das (bad) imul dec lds inc jne mov cld adc or pop daa in fisub adc test sahf pop enter repnz inc aam lds push push inc bound mov xchg ljmp dec mov push call not push call mov jmp mov or lock jl lods orb xchg xor pushf and xlat lods (bad) repnz xchg mov cmpsb mov or jg das add xor das shll rcrb inc mov subps cmovl loop pop arpl jo xor aad jg or scas push lock (bad) lock cmp mov das (bad) vpsadbw in aaa mov ljmp icebp push mov cmc dec aaa and and inc cltd jl fsubr cmp ja pop inc es (bad) xor mov mov ljmp loop mov sub mov faddp scas fwait and fmuls mov (bad) cmp xchg mov inc outsl data16 stc mov pushl jae and cmpl fucom xchg test pop stc aad push mov cmp int sub rorl js clc shrl hlt adc add push aam xor sar xor mov cmp xchg fidivr jbe test fisubrl cwtl cmp loope mov xlat or inc stos imul ljmp cmp and jne not not pushfw jmp jmp fstl jp or mov xchg test inc and cltd scas fldl pop (bad) in push insl push mov out xor add mov jb pushf mov (bad) int3 and popa cli push or pushf push inc leave pop ss (bad) aad adc ja lret jo add in xchg xor pop sbb (bad) stos out jge inc mov in and cmp movsb leave sub adc dec aam xchg data16 cs mov and adc dec pop clc xchg jecxz mov loope bnd bswap push mov push addr16 nop sbb aas add call shr std repz mov ror dec mov sbb shl cmp sub mov call sub or imul and cwtl out or dec push dec mov rcr lahf and xchg or hlt in and lods cmc adc sbb mov loope cmc dec repnz (bad) mov adc ficoml xchg lahf aas out pop (bad) cltd das dec lods pop xor aas (bad) and dec (bad) xchg push icebp stc or lods jle sub or loope inc stos add xchg dec push ret mov iret pop cmpsl cmp xor jmp js mov sub jg pop dec lahf push test jbe sbb fisubl mov add push pop ret or clc cli jno les xor mov sbb lahf (bad) or mov notl in push jbe lcall sub int3 inc rcrb decl outsl fwait ret repnz add cmc and (bad) lock std out leave jl lret push int push jb js ljmp dec fnsave inc ficoml int dec in xor lea jae jmp call bound xor or mov or adc push movsl xor jo imul js and inc sbb mov hlt repnz lret xor and sub pop je cltd leave dec and jge mov sarb add sahf out mov add lret and xor orl repnz jbe bound cld ja fwait mov in scas mov test cmp xchg lret repnz dec cmp inc imulb scas lret xchg cmc outsl ljmp inc xlat or add pop push adc xchg xchg xlat and cli sub iret pusha mov pushf not cmp movb mov xor jmp cmc clc cmp pushl jmp pop xchg pop mov or imul mov lods fsubs cmp mov mov mov pop cwtl ds or sbb inc sub scas xchg sub pop (bad) adc mov arpl jl test inc xor dec mov mov outsb test pop xchg push bound push fwait mov idivb loope mov repnz add sbb push fldl2e cltd mov adc sbb mov mov daa jge add sbb adcl icebp or loop out jmp call jne popl sbb cli sub cmpsl jns in add or lcall or sbb adc mov push sbb mov pusha mov test aaa jno fcmovu xchg outsl imul ficomp sub pop ljmp lock imul in cwtl xchg (bad) push jae stos jl add (bad) addr16 xor mov pop push adcb mov pusha push idivl add in mov fdivs cmpb pop insb dec aad cmp cmpsl loop and xchg call push imul add sbb stos inc scas mov sub stc sub mov test jp xchg push xorl mov inc xor test jno adc cmpsl push lahf sbb ffree inc clc imul repnz loop adc testl stos pop (bad) adc jno jne add inc sbb or rcll nop sbb test gs or or adcb and and sub inc in add adc addb lods mov adc sbb adc xor push or sub mov or loopne loopne dec xchg push mov cltd mov and pop sbb sbb cltd mov aaa mov (bad) mov mov xchg xor mov adc loopne rolb add push sub push mov sbb cmp mov in push push movsl inc and aaa cmp mov mov mov cmc xor mov jg or stos test pop stos cltd mov sub mov mov dec addl enter outsb sti inc or sub push xchg test inc aaa pop lods adc mov or mov push xor test pop lds jo jbe jle add and or adc sbb push or mov test or adc and enter and xor cmp cmp ds enter and les dec adc push enter and les pop adc pusha enter and les insb adc jo jb je jbe les add add adc and fbld sub cmp dec adc push jp or movsb adc pop or push push push pusha or adc sbb es enter and and push les or adc enterw cwtl jl push insl enter push and scas jno push mov pop or sbb mov out dec mov adc pop or xchg mov movsb xchg or and xor cmp xchg xchg mov dec mov xor sbb or cmp push aaa movsl xchg mov inc mov dec les adc inc ss xor sahf mov jecxz add pusha nop out sahf xchg icebp or or jns add xchg movsb mov mov test lret push xor xchg mov xchg test adc test sub mov or adc xor test cmpsb adc mov and mov rcll mov test or cmp test hlt adc mov test push push mov rorl adc aad iret mov add andl cmp dec test and mov xor mov mov test adc mov mov xchg mov or cld cmc repnz dec fsubrl and xor cmpsb nop pop inc and fstpl jg mov adc (bad) mov cmp cli xor ffreep rclb fs cmp adc ret jmp mov mov dec adc (bad) xor sub mov or test push sti ja xor mov inc cmp dec (bad) push lcall dec and mov sub dec xor sub ss aas dec dec xor mov cltd pop xor sbb test push sbb push xor push sbb imul aaa in xchg fadds adc (bad) popf int3 pop sub popa mov in fwait mov and push imul cmp mov mov fisttpl pop mov adc fstl ret (bad) add dec or mov (bad) and jb push mov pop dec fs cmp add or jns mov cmp dec jg xchg add add ss push mov jecxz hlt arpl out mov and add cs scas scas bound add add sbb or xor lock lods xor sbb es pop test mov cmp add add xor push test push cmpl add add push add or xor or xor add sbb mov push sbb add stos xor ds sbb adc and enter push dec add gs pop repnz inc int3 adc push inc push and enter es push dec test lret adc jmp or adc or out ret xor arpl jl sbb cmp and out cltd dec xor mov outsb adc add pusha pop sbb pushf test pop (bad) or adc repnz xchg mov xor aam mov xchg push mov pop xchg lret xor jge sbb test outsl mov mov cmpsb bound lret adc insl sbb push xor lds adc push mov outsb mov or sub pop in inc ljmp test mov add push and mov cmp cmp pop and pop out test and inc mov adc xor push sbb and in mov in xor mov arpl dec jne and mov pop adc adc sub mov mov push push mov xchg and sbb sbb sub sbb ss add inc ret orb mov dec sub sub add mov pop outsb and stos inc mov inc mov sub movsb and and lret test les or and enter daa xchg adc inc imul sub outsl cmpsb das add sub adc insl and mov cmp xor lock inc test and cmp add add or and xor mov and pop adc mov mov or mov shll dec sbb sbb lret dec inc cmp or push mov sbb adc adc andl xor aam and xor mov fnstsw xor stos mov push adc push xor dec xor mov xor pop nop mov stos xchg mov xor adc rcrl xchg add or and mov aaa or cmp inc xor or or dec sub ds data16 mov add push adc mov sub int adc cmp xor xor dec or into add cmp and cmp divb xor inc sub push or mov and dec push push mov lret add sub and xchg push inc add or (bad) sbb pop lods xor adc stos les jp xor test inc adc dec les dec adc push enter and les jo jb je jbe js jp les add add enter and adc sbb mov sbb adc xor les or inc and lret push mov test pop adc pushw outsb or jle push jb adc sbb and sub les cmp cmp inc enter and push or pop and enter sbb jp repnz enter and cmp inc or sub add (bad) and or ret call cmpb and inc add mov adc push pusha inc rolb add inc ret inc les inc add inc (bad) dec enter add dec lret dec int3 dec int add dec iret push rclb push add push rcll aad add push xlat pop fcomps pop add pop fistpl fstpl ficomp pusha loopne loope add arpl fs in add addr16 call ljmp outsb add outsl out jo jno jb bnd je jne jbe divb js jns jp cli jnp jl jge jle (bad) jg add add addl test xchg add or mov add adc xchg adc add sbb pushf sbb test cmpsb add mov mov mov mov aaa mov mov add mov cs mov scas xor push mov mov inc stos inc mov and mov cmpsb daa add sub lods sub inc scas dec mov popa xor and cmp cmp add enter and dec les and enter and pusha adc and enter and insb les and enter and jl mov enter and or or and adc mov adc les or fbld mov and movlps and enter and nop les adc sbb nop adc cmp and inc adc adc push les and enter and adc adc jo pop or and fisub jl mov mov and and or mov enter and movsl les daa xchg call sub push and enter and sub adc and inc inc call cmp add mov andl dec nop add and les test xchg push mov xchg jb les xchg jle or mov push nop int3 mov adc enter and les or adc cmp mov inc and enter and push or enter and push xchg adc adc jbe xchg and out dec mov push les or xchg scas push and sub sbb enter and les and enter and pop adc and enter cli or mov adc and and mov adc and enter and and adc and enter and cmpsl les sub inc and enter and les adc enter and je rclb and mov orl or add enter and mov and or sub enter and mov inc or adc popf enter and les mov insb and add jp and add or adc and enter and or xor add enter and adc and enter and shlb push or adc or xchg add rorb or test les and enter and rorb adc add and les adcb outsb adc jp popf loopne dec mov enter add sbb enter and (bad) xor test cmp sbb inc and adc test pop adc sbb les push add add pusha add jg mov inc and push inc and inc and sbb sub add add and enter data16 xor test push inc test xchg xor pop movsl int3 push popf or je add adc rclb add xor sbb loopne push mov adc pop xor int3 sub loopne push aaa inc clc or inc clc sbb push or sub xor push mov xor loopne mov mov sbb repnz sbb and sbb xor push cmp jo lret fsts xchg push cmp mov in sbb scas insb jne and adc mov stos mov lret outsb push add mov xor int loop pusha inc test inc mov mov sbb mov mov nop jne mov jge test or jo int (bad) movsb sbb imul addr16 test mov mov and int push push cmpsb sub out sbb or test test sub or daa add xor sbb sub sub cmpsl int push push cmpsb stos push push sarb movsl cmp or jge fwait sbb or int (bad) hlt adc and push sub and cmpsb movsl and push inc and sub lods out add movsb aaa xor repnz xor in sub add sub add sub cmp leave mov in pop adc push stos sub push inc mov sbb int3 push cmp dec cmp dec push pop inc mov pushf push mov inc mov aam mov daa push xor sbb int3 jb adc xor lods out jo movsb cmp mov mov mov jle pop mov (bad) aaa cmp push cmp push cmp push push push mov dec mov pop add cmp mov sbb test sbb and sbb sub dec jae jnp sub and sub mov cmpsl jo mov sub pop push test sub inc xchg loop xchg inc pop movsb xor sub sub push mov xchg sbb sbb pop pop cltd pop jp cmp add pop pop dec xor mov js test insb daa mov add insb jge je push mov out mov sub jp sub jp dec stos mov or ds and ds add inc mov stos ds mov dec and ds and sub and test cmp and mov mov lret xor fdivrl xor inc inc cmp mov push sub jge scas sub and xchg sbb sub aam sub sub mov cmpsl es xor cld test xchg mov pop mov lods inc mov push sbb pop push cmp and adc stos cmpsl adc add out xchg and stos out xchg mov stos pop pusha test adc (bad) dec sbb xchg lods or and pop sub and xor dec sbb push add cmp push push or push sub dec cmpsl cmp adc popa push and bound and daa mov dec adc insl and enter and (bad) (bad) or out outsb enter and (bad) aam add add enter and les or enter and lret fdivrs xchg mov adc mov inc nop int3 inc nop mov xor adc and dec mov es add nop mov sbb mov ret insb add and push mov push sbb enter add adc adc nop daa (bad) ja push nop daa and and nop rcrl sub push enter and les pop adc loop dec adc push imul and enter mov movsb jmp sbb call out jle jmp add add enter and loopne push or sbb push enter and out les or adc jo cmp frstor inc les lock enter and les arpl inc bound into fsubrs adc ss and jo nop xor mov cmp bound es mov mov test adc or push enter and pop les or sbb es inc into fdivrs fwait mov nop mov xor nop daa in outsb mov ds bound ds xlat les sub xor cmpsl cld es adc push nop xor adc cmpsl mov push pop les sub adc es sub mov cmp push nop cmp ss cwtl int3 jp cmp xor sbb inc aas inc bound int3 push cwtl les push and adc nop mov sbb nop mov sbb scas pop nop xor mov les nop mov xor sahf cmp popf mov xchg nop inc jbe and inc fs into int3 dec mov and dec stos push push adc xor cmpsl bound mov test outsb nop (bad) aas bound es aas ficompl xchg nop sub cmp dec pop and mov dec or inc or iret and dec push push dec adc mov nop sub push inc mov sub push adc nop and ss enter and ficompl xchg nop lods es and dec fs xor push mov pop adc and enter and in jl jecxz or add adc inc sub icebp mov enter push mov adc and enter and lea fs dec int3 inc mov adc sub adc inc dec dec sbb push dec nop inc push dec adc dec inc push int3 pusha nop das mov mov ss and test jb imul es xor fsubs mov nop fcmovu push sbb dec adc mov sbb mov and orl cmp dec adc and inc les dec adc push enter and (bad) jne dec push push stos mov and push push cmp and push add faddl xor mov mov push mov pop cmp cs mov push jp push push mov jno dec add mov push nop or flds dec rcrl push mov pop inc sub sbb mov push lret mov mov mov push and fisttp dec jno int3 push mov or inc push cmp pushf push ss xchg mov daa gs and cmp test pop jp pop push adc push lods xor jno push xor shlb cmp xor cmp adc mov cmp pop push sub repz mov add dec push ret or sbb xor push insl or data16 pop push (bad) gs push push stos mov sbb nop mov or mov out sbb cmp push push test dec dec imul rolb jno dec test push ljmp mov mov lret or clc jno dec test jl movsl inc push push push out sbb repnz sbb mov jle daa xchg ds or popf push cmpsl xchg jbe es cmp lret dec adc add mov jecxz sbb adc call into dec push jmp xchg sub and movsl xchg mov mov cmp sbb mov xchg cmpsl bound cmp test push insl xchg sub imul aam push xchg push pop xchg jb adc jg or jge pop in add cmp lock inc insl mov push inc push jmp xchg sub out adc mov sbb xchg aaa aas shlb mov or dec dec frstor cwtl mov or cmp (bad) cwtl sbb movl cld pop leave push jo mov sub into inc ss lods xor xchg or push js and stos dec lahf xchg sbb push test in and imul bound lahf xchg jo clc mov adc push dec or pop add faddl mov mov xor xchg dec cmp push push dec call or daa repz pop in (bad) ss cwtl mov lahf xor out cltd scas and popa mov xchg xchg orb or (bad) and add push mov iret sub flds or sub or ds sbb sbb add cld addr16 arpl les lcall leave xchg stos inc (bad) xor imul jle sti int3 or iret aad or rcr outsb jns dec fild cmp cmp stos sub mov shr fadd xor push or sti sbb lret sbb mov cmp enter push fs (bad) loopne lret pusha add xor push insl xchg adc jl and hlt imul jl inc add sbb add popa pop and sub adc pusha add and and movsb and pop xchg ficoml mov mov cltd in mov mov popf mov mov addb add add (bad) (bad) push imul stos sahf lds test dec outsl push cmp lahf mov enter pushf pusha mov dec add call lods (bad) sti insb (bad) push lahf jo test adc pop sti jge lahf adc sar sbb add xchg sub or fimul mov pop push add push nop and loope cltd sbb lahf (bad) and in jl cmp cmp sub xlat sbb stc nop xor jbe (bad) dec fcomps jne push push pusha mov decb mov add jno mov pop add push bound mov iret mov loope shlb fistpl je push pusha (bad) jb test mov repnz and adc pop adc add rolb sub fstpl adc pop xchg add add jne pop lahf in pop inc loope cmc push add loopne and hlt add xchg add xor add rolb inc adc add int pusha lahf mov mov or push pop add shl adc (bad) cmp incl leave clc mov jg popa sbbb push cmc andl adcb mov xchg cli cmc test sub xor mov push push pop test add movsl pop loop and push jg adc test xor and test mov xchg mov jbe out rolb orl or arpl or jle dec negb add sub adc lahf out and push js loopne push dec pop inc adc cltd enter push jo addr16 xor sub xchg ret inc loopne adc sub pop data16 push add rcrb sbb lods in xor (bad) cmp pusha pop mov or adc cltd adc add add cmc cltd pop shrb fildl in mov mov lock or jae adc push add xchg lcall mov pop pop icebp add fiadd nop adc sbb enter jae dec and or add mov lahf test push enter adc add aad iret add mov mov lahf jb pop jns adc cwtl add outsb push dec adc cli cmc cmp popl or addl sbb adc jns sti mov test pop xchg test inc je or inc and arpl mov lea push nop sub fistpll add mov add js push imul inc into clc jnp decb add pop add pop adc dec lea mov mov cmp xchg nop mov push sbb aas inc pushl pop out rcl mov js adc pop push xchg pop sub inc and mov lahf cld (bad) push adc sbb mov mov icebp inc adc mov pop or mov cmpb add cmp loopne sbb xchg jne add fst or push jmp mov dec popa push sbb add test js insl sbb (bad) push mov in fadds js aam movb adc and bound xlat cmp mov cmp xchg loope xor xchg push ljmp mov mov xchg jo jb movb xor movl and bound mov jl lock (bad) cmp imul js daa movl and bound cmp cmp decb mov repz push popa sbb push xchg or xchg pusha adc dec add jo and bound cmp mov sbb addr16 js (bad) movl pusha mov cmp mov sbb mov jo movl sarl mov jo mov aaa xor xor mov sbb rcll mov pop mov xchg lret mov cmp mov mov xor mov (bad) or scas mov mov mov test les adc aaa cwtl dec mov mov mov imul aas pop inc adc mov adc and enter outsl adc add nop and pop int3 adc xchg mov cwtl mov adc and push les or adc push mov les test pop and enter and les mov push jno outsb or jb mov jbe adc jp xchg and jle xchg xchg inc jno jbe add push xor xlat xor inc push rcr movsl nop mov adc cltd sbb sbb cmpsl xlat gs mov mov rolb mov movsb cmpsb or daa push inc push mov pop sub sub popa aaa adc test push mov dec fwait add and mov lds test pushf sbb xchg mov mov mov jns enter sbb mov jae mov outsb lock mov jl loop xchg test lock test push das adc pop mov lds jno test jmp sub pop nop loop or test mov or fwait inc and ds mov xchg enter scas adc and adc jg add test outsl pop cmpsl (bad) cld jnp clc (bad) nop insb (bad) int xorb enter adc pop mov lds adc mov es add out pop add and sbb (bad) xchg fstl cltd sysexit adc (bad) (bad) jb adc mov jns dec sbb cld mov jns dec xchg nop cld int lock xchg dec fwait scas fisub lds jno or mov lds adc mov jns enter scas adc mov test mov cld add in jne adc mov inc ljmp sarb xchg andl test (bad) int3 daa mov mov or mov and leave mov test out mov cld pop mov push scas fwait clc and aaa mov ds clc adc pop mov jae hlt mov clc imul aaa mov sub pop (bad) gs add jbe sub icebp cld mov out mov imul pop cmpsb test pushf mov enter fwait mov mov mov mov (bad) out pop cmp jns mov xchg lods mov test inc jp adc mov cmpl enter scas adc mov jns call adc or jle aaa inc inc (bad) clc sbb aaa or mov fwait orb (bad) mov cltd test lahf pop mov test pop mov pop mov lds adc test test mov (bad) pop lods inc enter jb xor mov jnp fdivrs cld mov jns enter scas xor mov aad add push addr16 lcall outsl mov test mov pop mov ror imul mov scas cmp (bad) cmp test cmp test clc imul mov adc lods test rol scas adc mov jns enter out jno lods mov (bad) xchg leave scas fidivrl decl add mov push or (bad) or mov lds fucomip fisttpl jno enter xchg (bad) push nop clc mov push lahf in lret adc enter test and mov enter and mov lcall and out nop adc mov inc ja mov jb pushl (bad) dec or mov rorb (bad) sub daa mov xchg push xchg popa cltd inc sub xor insb or and add mov call outsl jg push cmpsl pop in mov clc add cmpsl xor je dec mov or sub leave js sbb or (bad) into adc test movsb sbb ja or mov sub call lods pop cwtl cmp test or call pop adc push xor xchg pop xchg pusha mov fisttpl mov (bad) or sub dec cmp fs mov pop lahf shlb push adc fldenv and sbb test dec xor sbb lea ret xor inc inc mov clc cmpsl push xor dec idivl xor or mov and pop dec xchg cmp or leave (bad) pop mov xchg cld stos or dec jge add or mov scas stos aad lds cld sbb cmp xchg push sbb inc push inc and out call dec cld lods pop test rorl nop push sbb push jmp or es mov gs xor movsl xor mov lods inc into jno add dec and sbb nop sub and push push xor cmp cmp mov and push push ja sub mov and and pop pop out cmpsb adc clc jp or cmp in add adc bound cmpsb adc movsl arpl stos out push (bad) jae and mov cmp mov dec test nop mov dec mov pop std cmpsb push xor int jbe addr16 pop pop rorb xor cs aas push mov add sbb fcmovbe or push dec xchg fs pop sub outsl adc inc push cld or cs cmpsb sub fnstenv ret adc ds dec pop sbb jno int ret cmp fs addr16 push push mov xchg imul call fnstcw test ficoml push or mov mov jge inc inc sbb test or and or dec push add push dec add call adc mov and sub cs enter mov mov (bad) hlt dec push imul or cmpsl push xchg pop sbb lods movsb xor add cltd jmp sbb out jb xor add inc in sbb (bad) out pop stos xor fiadd jnp test xor jno lock and outsb les mov imul (bad) sub push (bad) int sbb xor jno push xor idiv (bad) cwtl in cmp (bad) cmp dec sub addb inc xchg (bad) inc fucom (bad) mov and xchg xchg jp mov xchg adc pop shll mov adc outsb or fcompl sbb xchg cmpsb pop mov mov mov lods sub cmp sbb or les fnstenv outsb je add pop xorb bound add into insb (bad) repz repnz test push or adc mov jmp nop fwait pop and rclb cmp push jb adcl es call sbb mov adc lods mov adc or stos and (bad) or sub sbb or or pop (bad) or adc pushf in inc and xor mov lea add sub or mov in or pop or sub lea enter sahf and enter sbb subb mov sbb inc dec and push cwtl mov mov mov mov and and sbbl or cmp adc data16 xchg sub inc push sub xor fwait xor cld popa mov rclb xchg or aas inc mov sbb (bad) fmull sbb insb adc or pop push pop sub sbb les popf jnp sbb adc or cltd sbb pushf xchg inc popa push jg fdivrs rorl mov mov cmp adc xchg imul xchg mov xchg mov push (bad) add pop xor test insb sbb adc ds movl jno jae and call test and mov das das and ljmp cmp pop (bad) adc mov jp cmc and hlt xchg jp mov (bad) mov daa lds in lcall dec sbb push inc cmp dec fs das xor push aas or push aaa fs pop sbb inc test pop add rclb cs mov sub data16 dec pop test and hlt mov add ljmp add roll aad fcompl int3 xchg in adc xor push sub and les dec cwtl das test lcall and enter and jae jle or add and enter and les push adc outsl movb mov test adc and adc dec enter and les adc add test enter and cmp inc or and enter and les test adc sbb popa imul test xor lea pop xchg adc mov (bad) sub xor pop dec stc cwtl pop dec cmp add cs jne pushf pusha mov mov ret pop inc sub xchg notb cltd add mov rorl (bad) pop pusha and stos mov popf or mov jo pop stos jmp cmp pop xor pop add jle add dec adc dec and jle mov imul out fiadd mov push fstps mov jmp cmp inc out sahf inc push dec aas add loop xchg orl push mov pop push inc jae iret or jg in add inc xchg hlt xchg jmp add dec jge xchg aam add adc (bad) loop jge sbb pop adc add pusha loop sbbl sub bound sahf xchg pop out (bad) lret dec out pushf sbb scas dec dec mov add sbb mov (bad) xor ss std inc add dec xchg push or or (bad) test jnp or add out fiaddl dec mov add movsb cmc mov dec outsb add jl cs lods sub mov and (bad) and add push adc nop inc fdivrs add das js (bad) push add sti repnz lods aas flds enter jge pop jecxz push test rolb test sub add outsl cmp in movups popa add je cmpsl inc and cmp adc xor lods lods mov add push insl push mov and andl jl inc and xor rolb jo rcrb add jae mov and mov push aad mov out adc loopne cmp add nop fdivs test movl mov add sbb roll inc mov push add xchg ss add clc (bad) out les xchg and pusha push (bad) add and add lock cmpsb icebp or add mov scas add xchg inc cmp mov out jbe lock pop push roll out sbb add jae and push jle data16 pop mov push fildl dec test mov inc or add xor jmp in push add aad jge les bound mov test aaa rcll ljmp insl icebp mov out test push or xchg test add mov lods add cmc or sti stos and test mov lods dec jo (bad) jo cmpl push add sub cltd jecxz pop and dec push mov and pop adc int3 cmp pop mov mov rcl adc cmpsl cmp add stc jb and mov mov jl popa inc ljmp jo push jbe je fdivrs jo xchg sbb call sbbl xchg rcll mov adc inc movsl in add xchg inc imul and ficompl sahf ja insb imul insl pop xchg push jecxz pop ret stos adcl sarb and add add xor sbb andl gs push mov (bad) pop mov pusha jb push pop ja xlat inc in adc out fild dec xor cmpl add cli mov mov sub dec dec insb out repz dec cmp pusha and popf in inc pushf add sahf mov add jb (bad) jl enter shrb das mov mov pop test enter mov pop xor mov ja in add cmc dec dec mov pop mov (bad) jo mov dec imul push repnz pop mov jb add (bad) mov xor sbb jae std js rorb arpl jmp dec fcomps loope xchg movsl jo add jnp lea loop xchg int and xchg jns add push cmp test add movsb inc sbb mov fsts jnp mov and pop cld add jle xor xor inc and leave add lahf movsl push cltd jb xchg decb pop pop out js popf test ret or imul es mov andl ret inc jo xchg loope outsl add mov pop iret fidiv insl add adc lcall addr16 xchg cmp push push sub out inc aaa add stc gs jno pop ljmp dec add mov dec adc call stos test dec mov fsubrs fild outsb loop lods cmpsl jecxz push add push (bad) cltd lret mov sbb sub aam movsb jge push inc sar or movsl hlt add imulb cltd jecxz mov out into inc mov flds jno aaa adc icebp push and add pusha pushf cmc call clc sub mov bts add xor or pushf movl rol pusha mov add clc push clc mov cmp jmp inc insb cltd inc pop or stc lret or mov in xor data16 jle xchg and rorb adc push stos jae jg or mov into imul fbld inc or jmp jo aaa cmp scas pushf and cwtl mov push xchg adc or icebp adc sub jp mov cmp sbb stc pushf cmc sub push cmc cmp pushf pushf lea ja call sub test call sbb lods inc pop or lcall add movq pop sub cwtl (bad) pop jle movsb in std insl adc mov test out ljmp (bad) cmp ret jge rcrb es adc cmpsb pop (bad) ret ret (bad) fnsave inc pusha movsl aaa divb insl movsl pop int add xor mov mov mov in mov pop dec xor lahf popa dec xchg jnp call jp loope xor xor and xor cmpsb popf xor jge (bad) inc xchg addr16 or out loop cmpsb scas adc inc dec aam out scas daa repz jmp lods push push push xchg pop cmpsb cld pushw fsts dec pop je mov clc icebp rorb pop sub jle fnstcw sahf bound sbb in movsb inc mov jb mov leave (bad) sub pop scas mov rolb faddp hlt push push inc add popa xchg mov sbb dec aaa mov (bad) mov pop pop pop push push xchg xor and ljmp push movb movl pushf pusha lea jmp mov jmp mov rep bswap mov movb push lea jmp popf scas addr16 popa inc aam mov sub fcomps cmc cmc xchg gs xchg jo sbbb scas sub push jb inc mov push xchg (bad) aad mov cmp sub cmc lock fnsetpm(287 push lods push test xor push or movsl mull jmp (bad) inc or ret mov hlt push les xor in xchg xchg in jecxz xchg cltd stos imul sti xor lret jle lea jo das mov dec sbb jmp mov movsl test pop sub inc sahf xlat dec aaa xor jns sbb stc mov cli daa dec (bad) es arpl ds pop push cwtl (bad) add or xchg mov pop addr16 xchg outsb frstor push lods imul pushf scas leave inc adc scas inc mov call inc pop pop (bad) sbb sbb out xor xchg popa sub push aas xchg nop sbb test mov add push mov adc cmovo sub mov test mov (bad) push rcrl or incl add mov pushl mov setge pop lahf mov cwtl lea mov pushf movw jmp aas and cmc or das add loopne mov adc dec cmp jb (bad) daa cmpsl imul scas mov add out data16 pop ss out sbb data16 cmp icebp or xchg pop repnz xlat daa mov mov std inc xchg cltd push aas (bad) add andl cltd das lock and inc xchg push or mov mov cmc xor cmp testb and add sti add aad inc xor dec (bad) test out dec mov jno cmc sahf add mov (bad) dec mov mov ret adc data16 push dec xchg add push pop stos jmp repnz cmpsb (bad) in mov es pushf (bad) testb dec js mov push mov int3 adc pushf je stc add ret mov (bad) xchg dec fs xchg mov stc xchg call jbe inc lods mov inc sub xchg xchg sub mul and push test mov inc mov sub es (bad) jp loopne push in arpl adc cmp mov imul xchg push movsl mov cmp bt cmc test pushl lea je bt cmp test pushf add pusha cmp mov lea jb pushf pusha cmp pushf movb pushl pushl lea jae movsbw xchg mov push setb pop mov push mov pushf lea jmp pop cwtl add and pushf xor cli lcall lahf mov push pop insb adc xchg xor lret (bad) jbe,pn or andb xor jge dec movsl cwtl addr16 imul pusha vmovmskps xchg or cmp fidivr dec cmp push and push cmp out out xor sub mov pop and test fist enter loope jnp pop into je or hlt cs ds rcl or mov imul stos and pop in cltd adc insb fsub push xchg xchg bswap movzwl movzbw mov pushl lea lea bswap pusha pushl movzbw mov jmp lods jmp lea je btc add setns mov cmp call pusha lea call call inc inc push inc push dec xor cs insb add add icebp jmp lea ret sub js cmc add bt stc mov sbb and mov call add add in push add lcall daa in push add push add inc add das in push add fs add inc add aaa in push add lcall aas in push add lcall clc cmc stc cmc or pusha jmp lea call pusha pushf pushl call adc or and lea xor mov adc mov adc out jl jle fdivs loop pop les inc pop push sub lea cmp pop inc lea and shll pop xor mov insb ret dec clc push inc lret jb enter aaa or mov mov cmpb push mov fyl2x push inc jmp cs mov pop bound inc ljmp cmpsb lahf std pop ss outsb cwtl ljmp daa imul test outsb addr16 push adcl dec imul mov push dec xchg dec push das dec inc test stos lret or dec add jg outsl sti incl pop sub jae xchg icebp imul mov std adc push (bad) das enter sti imul jle out xlat shl loope cmp inc pop nop jl inc ret sbb popa fcompl repz or sbb hlt int or ss xchg pushf mov push cmpsb pop ret call outsl mov cmp (bad) sbb jle and sarl call pop cmc xchg cmp jnp xor call xchg mov inc (bad) dec stos inc dec push test (bad) int mov (bad) movl push lea call pusha movb pusha lea jb push mov push pushl ret pushl movl push mov pushf pushf mov mov pushl ret mov not jmp std sarb arpl inc mov mov sbb bound pop mov out je push imul stc sub out sbb push xor popf ss sub mov aas sub (bad) xchg push aaa pop jnp daa xchg mov sti stos mov add mov lock aaa inc in push test ja std cmp insl popf out bound test and pop jmpw xchg jne mov pop into push mov mov leave mov mov inc cli jo sbbl inc js mov cmp jmp inc xchg mov out adc loop shlb lds pop add xchg jne or cmp cmp xor sub mov or fsubs nop cltd out jle aas mov out insl mov imul ret add push mov push pushf movb lea jmp lea ja call xor stc not stc test cmp jmp call jmp dec pop xchg dec insb or cs fcomi xchg loopne jmp ja clc (bad) sub shrb pop nop lea inc ss ja sbb mov cltd ret aad je and sub ds adcb aad mov loope pop jns mov (bad) jo and sbb lret xor adc popa cli ds inc cwtl std cmp cmp outsl out pop adc xchg jge scas imul popa mov aad loope into lds loopne mov out xor xlat movsb cltd sti pop xlat adc in and les xor xchg cmp mov outsb into or ficomp sbb test out outsl xchg iret js fwait push xchg xor xor or mov jmp popa pusha push mov test leave pop cmp inc lret lods jb mov xlat pop mov ffree mov sub inc push xor insl jl cmpsb test adc aaa addl xchg lcall fs lret push fsub rcr inc scas test xchg test les xor mov xor clc push inc xor dec movsl cld push jbe push out mov shrb and inc push mov scas out mov cmp shrl xor push outsl out jnp adc jne shlb sbb jmp clc xor sbb scas lret rcrl cwtl cmc icebp jo xor xorl es ret test dec aad push mov movsb xor sub inc or push sub nop add cmp outsb cli outsb or sub mov dec mov or nop cmpsb pop dec test stc fidivr sarb pop (bad) push pop jo pop fbld or in cli insl or ljmp sub jo xchg xchg scas addb andb repnz adc out iret pop imul pop (bad) or dec loope push push sbbl and outsl or (bad) mov stc js mov or lahf xchg aad push movsl fcomip jne scas lret sti inc fmuls ret mov iret scas (bad) push xor and in sar ret dec icebp and jns adc push adc mov sub cmp out mov cld mov loopne fnop fnstenv or pop arpl xchg int insb cmpsl inc jle mov loop pop je mov xor xor push (bad) in mov mov push inc (bad) xor andb cmc jp movq cld cmp daa xlat jbe imul xchg pop shlb mov pop cwtl (bad) mov dec dec test sub sahf ds test add mov cmp pushf pushl neg call lahf into mov inc sbb and push inc outsb aas cmpsl addr16 inc push imul fcomps nop cmovs inc ds add push fdivs cmp mov cmpsl dec pop inc js dec adc and push xor imul pop aad jle es cmp arpl add pop fisttpll aad addr16 mov dec loope (bad) jg movsb aas push rcl cmp push cmc sub pushf movb rep pushf mov push pushf pushf pushf lea jmp lea jne jmp mov cmc jmp mov inc sbb pop mov adc cwtl push sub jns sbb loopne fwait rorb mov call xor adc (bad) or dec cmp inc sahf push daa sbb or lahf xchg lods or int imulb dec jmp sar jmp (bad) mov setge sub mov repz xchg push lahf inc out jbe inc (bad) repz mov sbb in insl mov inc dec cmp dec fst mov jecxz cmp enter daa mov dec mov add jns xor repz xchg pop (bad) repnz rcl jnp mov bound je push mov or push and or fwait or pshufw mov outsl lahf jg add mov hlt dec mov fild xor lcall out push sub push mov or lea cltd sarb aad push mov jae pop ss lock pop scas ret lock and mov jbe jno cmp jmp mov ret cwtl mov or inc mov mov into stc sub pusha std lahf cs sbb scas push pop xchg mov adc repz and in xchg xchg call ret aad (bad) icebp push shrb std leave pop push inc jp pushf (bad) lret enter sbb in mov out les in jg test xor data16 imul sar jge stc or sar adc popf pop mov push xchg inc lahf addr16 in addr16 cmp or or daa loope jb out popa sub add stc mov or inc cwtl lods xor call mov dec in xlat cmp faddl lret stc adc xor pop enter popf mov loop js jp xor (bad) sbb add adc bound movhps bnd shrl lock jg jb lret ret jns jle outsl mov xchg pop mov jmp lds (bad) out daa jbe mov (bad) sbb cmc rorb insl inc inc hlt movsl les mov mov pop jmp push gs adc jbe fs sub pop mov jb rcrl or aas sahf lret sbb insl iret lcall fistpl mov push sahf adc aaa dec fs pop push push lret in or or cmp (bad) movsb ret or jmp test adc popf pop sbb fs mov cmpsl sub adc insl sub push lret shr jle pop and movl neg movsb sub mov mov xchg mov mov jge xchg cli and jecxz pop mov pop pop sar test jnp xor loope dec mov les cmc loop jns or aam xchg insl jp int pop je pop je inc popa loopne jo and push lock lret sbb dec ljmp push pop mov stc (bad) incl add pusha jmp movb lea jne lea lahf movb bswap lea call jmp lea call push lea jae dec setno mov not mov dec inc pusha mov movl call jnp pushf pushf movb mov pushf pusha pushf lea jmp add inc gs outsl fs gs imul add fisttpl loopne in shr cmpsl movsb rclb rolb jbe data16 lahf and mov xor enter fistp ret mov std into mov mov data16 jl dec mov xchg daa cmpsl jle adc in (bad) into inc push jl jae inc sbb add das scas push or pusha xor (bad) in xchg and add mov or push insb adc fisub add insb dec mov stos dec das sbb ret call push inc push nop into push (bad) js sub sbb call stos and pop xchg cltd (bad) scas dec out pusha mov (bad) (bad) push gs cmp or pop adc cwtl (bad) mov dec add and in jl pop xor loop mov roll popf fiaddl adc invd fisttpl mov or mov lods test es mov clc adc pop dec mov (bad) out loopne sti xchg inc lahf cmp arpl (bad) push outsb mov push mov push lea jae pusha cmp pusha jmp not mov inc inc jmp jmp call xchg bswap push movl push lea mov movl call movl call mov cmp cmc stc cmc shr stc push cmp pusha lea je clc stc cmp call pusha sub push repnz pushf jmp mov or mov or xor mov mov idivl in xchg clc push dec lds push setge jmp out xchg in fstl sub leave push nop pop aad pusha cmp (bad) cmp into lods pop push xchg adc jmp pop xchg ror xor pop mov and lcall test dec stc ds mov das push dec sarl lea ret jne lea (bad) decl mov mov movb not pushf jmp pushl push lea jae shr mov not mov xor mov clc call popa lea jo inc outsl sbb pop (bad) ds xchg xor push gs ss dec rclb cld mov adc repnz cmc loop ficom add mov loop dec cmpl inc sar jae leave jl adc loopne fbld xlat daa sbb bt mov call add add mov or mov push sub test dec addr16 dec nop pop mov inc pusha cmp push scas cs adc fs jae mov imul idiv mov aad add shlb cltd jno arpl in sbb je call jmp repz mov pop leave aas mov sub mov inc xchg mov push addr16 push mov aas add adc and test jmp inc into not push xchg add call aad add xchg cmp add es mov sbb inc fisubl or mov loopne repz push jo xor test add pushf dec add out mov scas pop add ljmp mull test cmpsl mov aas scas (bad) jne push fwait mov jo jl inc pop jl aaa in daa push (bad) sbb inc out fwait movsb ret add test add call inc dec dec ret xchg xchg fistp mov xchg scas sub xorl pop stc std cli aaa arpl imul dec sbbl cmp stc or or scas adc mov test aaa pop mov aas fmull fist imul test cmp arpl cld or (bad) jo inc mov rol insb or cltd and scas xor inc and pushf pushl mov pushl ret call call int3 rcrl (bad) jb inc sarb mov pop push mov or push lahf sub jg xlat adc xor aas pop jb ret daa mov gs jg mov adc jp lods sbb arpl nop outsl fucomp fs fidiv in pop mov or and xchg jg frstor xchg lret in enter test dec cmp inc (bad) ficompl fbld imul sbb int dec (bad) in pop sbb dec and out fwait ja or and push mov fs je stc cmp pusha pushl jmp pusha mov call jnp test jae inc adcl lcall adc mov mov push dec mov movlps stos sbb ss mov xor mov incl jmp inc sarb push movsl fisttp loop dec pop aaa push (bad) cmpsl xor and pop xchg fcmovnbe popf or repz fwait es or and or or dec ja and or lods fildl in test roll int mov fs inc pop es inc in loop mov lods fld xor mov lcall (bad) ljmp test jae inc push scas mov arpl push rorl xchg jp cmp orb mov into mov pop popa pop mov cmp pop cmpl inc push push imul sub or pusha add pusha adc rol add enter dec pop xchg jo fwait xchg cmp mov push movsl jo mov adc push dec arpl (bad) repnz inc inc inc xlat movsl (bad) add add and aad fcmovu xchg loope push dec movsl in jns mov dec adcl or and mov jbe jno pop xchg cli adc xchg sarl xchg inc jmp ljmp fs add mov inc test mov dec jg call inc jl inc pusha jl and mov cmovo jg mov repnz imul std inc push daa dec pop and inc iret incl fiaddl fwait jnp inc xchg rcrl pushl lea bound sub call or rorb sub inc popa pop mov popf dec cmp lcall rorb sarl stc cld xor mov ficom mov fnstsw inc loop psubb out dec sarl mov mov leave (bad) clc lret lret jp das sbb pop xchg xchg mov ljmp xor cmp (bad) jno xor lds dec (bad) mov adc jae xchg xor lods mov mov dec jns out xchg out in outsb lcall outsb mov cmp movsb jnp pop fnop xor jecxz xlat shrb sarl fidivrl insl add adc (bad) aam xor jo push mov xor int3 xor adc in lret (bad) jge lods fsub sub movups imul notl inc pop pop inc test sub xor repnz or clc pop dec outsb arpl xor push icebp pop sbb adc fmuls fsubr lcall jge mov (bad) jne mov (bad) sti addl out insl push pusha aas (bad) roll inc shl jl pusha pop imul fxtract jge mov jo inc sarb jo rcl fbstp and mov (bad) jle popa repnz pop lret xlat jbe movsl inc addr16 ss cs ret clc outsb (bad) adc mov stos lahf imul icebp lahf ficoml fnstcw sti dec pop (bad) (bad) xor andl push inc out xor mov jns shll cmp les and sub xchg pop enter and jp dec mov lcall (bad) leave cmpsl jne iret or popa addr16 sub hlt pushf and mov aad cli dec dec push aad sbb or aaa sbb pop add repz xor movsl jle js and hlt xor lods mov negb (bad) popa repnz sti (bad) (bad) dec or inc pop xchg nop (bad) jnp test outsl int test dec les xor and mov inc push pusha mov lea jmp fsubrs mov jg inc addb (bad) stos ljmp mov mov iret push adc mov cld leave pop aad cwtl rcll mov pop push inc andl mov or and and lret jl or xlat and test shr cmp xor repnz mov outsb sbb sysenter and insb inc mov cmp lahf mov daa iret incb mov pop mov push lahf or sti jne cltd addb add imul dec sub pop call pop lret adc in or adc outsl fdivs scas add pop aam mov sbb adc stc sub sub stos inc mov aam shrl and pop mov rcr scas in fadds clc xlat push (bad) pop mov int dec insb mov jo daa xor jnp cltd cltd jle mov out ret hlt hlt jae sbb bound and fisubrl mov pop add xchg pop sbb dec out dec inc fs bound pop aam call clc or add daa xlat and pushf cmp sbb mov ss xchg in or loop ud1 test cmp push hlt out int mov cld mov fistpll jb loopne mov xor mov sub popf aad dec push fidiv ljmp or pop fcmovb dec cmpsb inc mov ja or lea jne push call adc push jns inc jae dec (bad) (bad) test (bad) aas jmp insl push movsb mov mov rcrl in sub mov sbb dec insb jbe (bad) call fistl enter pop out and xchg jo push cmp pop add shr mov lods aas out cmp (bad) int3 insl pop adc pop gs pop xchg adc icebp (bad) lahf xor enter push xchg mov lret ret add xchg scas movsb lahf les loope fisttpll pop push cmpsb bound mov inc lods sahf dec aad rorb out jl add pop jecxz test rcrl aam add push test cmp (bad) cs cli fcmovnb push jp inc cmpsb ljmp sar movsb test add jno in mov sub mov outsb inc (bad) mov scas test or pop (bad) ss ja pop and fidivrl or bound mov cmp stc fs xchg fs ja mov push lea call pushf push mov call repnz jmp lea call jmp (bad) jnp lock inc xlat sub mov test sub push aas sub fadd cmp negb ret aam ljmp xchg loope imulb xor fs xchg dec jp pushf xchg jne sti xchg and xchg mov imul mov pushf ret test int3 xor sub push dec (bad) jge es aas or and popf ss lret mov (bad) xchg mov (bad) test push stos xchg mov (bad) mull (bad) (bad) pop out push into xor outsl push orb jecxz lds cmp push jmp outsb inc aad lret mov testl cltd xchg daa and jecxz imul scas inc mov inc pushf mov cmpsb dec push or iret in icebp add stos cs hlt fincstp jmp mov aas ret mov mov imul sbb ja mov rolb cwtl push adc outsb dec fsubrs pusha outsl inc push pop cmpsl mov inc je imul in sbb xchg push cmc push lods sahf (bad) sti cmp std cwtl xchg xchg mov in mov adc pop jmp nopl jecxz je inc ds pop cltd adc negl add lock mov adc cltd xchg mov jle adc in sub (bad) ds sub pop xchg push push pushf mov lods sbb lret mov je ret sub aam shrb sbb std push dec push and inc stos movsb fldcw cmp pop jbe and fidiv cmp and fsubl push fldcw movsb sub stos loop pusha xlat push hlt dec out pop mov mov xchg cmp pop push out mov inc shl push int3 xchg loopne fdivp (bad) jmp fs jae jmp call jmp call pop pushf call pop mov mov insl jl cmp popa xchg jmp popa dec push xor pop in (bad) (bad) xor mov popa popf jl push pop movsl dec xchg in xlat aas dec pop imul push mov sbb scas mov imull sub cmp jmp rorl or ljmp inc mov es push inc sbb push add int3 pusha out pushf xor iret rcll inc stc jnp and jmp pusha mov mov mov sbb pushl popfw push inc pushf jmp xchg insl mov or mov pushf xchg inc xchg ss xchg and cmpsb xchg pop or dec cmp je mov into in jnp add xchg gs adc adc sub or stc sub rcrb push lea sbb add pop mov xchg xchg fstps icebp mov movsl orl outsb xor fnsave fidivl je call add xor dec ffree dec aaa push inc shlb lock fsts rcrb sbb sbb xchg out (bad) insl les inc xchg sub mov xor icebp pusha inc add jl stos dec cmp pop add adc adc or test add inc xchg fdivrp ret cld push fs inc (bad) dec (bad) int3 cli test mov mov (bad) cmp dec ljmp lods cmp hlt mov jl rcll mov pushf or push mov enter sub in push addr16 inc adc or (bad) into push inc fbstp adc lahf shlb out dec lods test push or adc in mov sub xchg sbb fimull xor sub mov loopne ret loope test jns leave ljmp inc insb cwtl aaa fsubrl push pop dec xchg inc jno sbb adc mov test mov sub dec mov test lret pop pop mov xchg imul add xor and (bad) pop imul adc cmp or test inc test cmp je fwait mov movsl mov add jmp fistpl data16 push mov mov fcoml sti xchg loopne test addr16 cmp iret mov daa inc xor nop (bad) or les and mov outsb mov jb add fisubrl sub int3 and pushf lea jb cmp call fmull js orb push sbb adc jo pop push mov fnstsw iret push in lahf fdivrs ret cmp push adc mov mov pop push addr16 inc lcall not add sbb insl fiadd int3 fisttp push call insl xor lret call ficoml inc repz out (bad) push dec pop aam ss ja pop adc adc out add adc stc jb fistl adc jmp (bad) xor inc mov mov sbb dec (bad) scas pop outsb andl fnstenv stos lret or je inc cmp push mov faddl sbb or sub (bad) lret add xchg in adc test aaa cld fwait movsb ret adc js xchg push cwtl mov xor pop mov scas stos push cmp adc (bad) mov pop xchg ret testl sub cltd int3 out push (bad) das out cltd std add sbb addr16 loop fs adc loop pop mov (bad) mov repz xor repz and add nop js jns jle test mov push inc cmc mov pushf xor movb call bound sti orl push idiv rol push (bad) stc cltd bound cmp push sti mov inc lret mov add mov enter push in fwait mov movntps pop push (bad) add xchg mov mov adc aad leave es outsb lret bound and jns inc js imul pop mov stos fucomip adc mov iret xchg jp aad add add das pusha inc push dec mov cmp pusha (bad) sub arpl loopne mov ljmp inc mov loopne aam push or jno xchg lea rclb add and xor inc and cmp mov pusha movb movl pushf lea jmp stos pushf push pusha pushf lea jmp call mov stc push mov (bad) mulb out mov pusha bt pusha cmc sub jmp not test test cmc call repnz call stos pusha mov pushl lea jmp lret xor or mov xor bound jmp lret lock pop je iret xchg xchg lret mov jno dec fisub mov je cmp xchg inc pop inc lods leave and imul push ret push dec lea inc scas cmp xlat in jae or mov adc jo subl cs je sub lahf inc nop jg jae or stc and loope mov call stos scas xlat pop mov out cmp test inc mov (bad) jno jle add inc and test fidivr jns xchg outsb sti pop lea jne movsbl movzbl pushf pusha mov movw pusha movl lea jmp push ret test mov inc push scas xchg cs jg add inc das lret inc call fidivl iret push inc adcb dec lret or cld mov rclb lock mov call and dec mov aas cmp pop cmc das add inc int outsl mov mov dec cld imul testl test push loop in stos xchg pop jo jae push movsb xlat cwtl inc jmp push pop les movsl aaa out (bad) mov fsub jb scas push sub mov (bad) xchg out call mov xchg push daa enter xchg jb in and cmp xor mov xor cmp xor ret dec pusha daa xor xchg mov adc xor adc out imul aas ret in jne inc pushf pusha lea call cmc sub ja pushf pushf mov lea jne push jmp (bad) sti and lea inc or add adcl cmp les shl lea leave sbb adc mov or scas lahf iret mov std xchg jbe xchg (bad) (bad) div push js (bad) in xchg test or pop sahf leave mov push xorb sbb jmp mov xlat sbb sub push fisubrl sub adc sub fcoms dec inc push pop out mov or push lahf outsl (bad) pop mov sub push lods add (bad) ss sbb test movzwl jmp pushf pushl popl pusha mov movb pushl ret pusha lea jne pushf jmp test cmp push lea ja pusha pushf dec add add seto setno mov bt push pusha cmp push movb lea jb cmp cmp push lea ja push add sub jmp pusha pushf pusha lea call bt test clc jmp dec lea jle rol call pushf cmc clc add clc test pushf call jmp push inc nop dec mov inc jbe cs out idivb push push mov and add jge add int3 sbb js js (bad) push inc mov lret int3 adc ret clc jecxz inc and jmp xor cmc push stos mov nop js xchg lret aad pop popf (bad) movsb loop mov vmovmskps stc adc or mov inc je inc jae popa aam out test movsb movsl push fmuls cltd or jecxz int3 ret clc outsl mov pushf or sbb xor int3 popf add dec imul lahf adc inc pushf call push setg pusha lods pusha pushf jmp lea jae cmp sub jmp (bad) dec lea or mov mov (bad) mov jns aas fisttp pop in push rcl add cmp inc pop adc pop pop cwtl aaa adc add imul push ja mov pop mov ret mov sbb inc pop pop mov sbb pop mov popa data16 out jns outsl sbb xchg pushf outsb add xor sti pushf sub jbe leave fs sub and ret dec insb sti mull fldt inc inc into iret icebp les sub sbb add pop mov (bad) repz call push (bad) icebp push dec sbb sbb call pushf jmp sbb sbb xchg cmc (bad) pop (bad) cmc (bad) dec mov cli jmp or ljmp pop hlt test sub xor (bad) dec push popf mov push (bad) dec push inc mov adcl and daa dec pop jmp push xchg xchg (bad) mov add or pop sub inc rcll push clc xchg aaa lea lahf jnp cmp std jo or dec cmp jb cli int addr16 loop or mov popa in sub daa flds xchg addb in test push lods (bad) popw ss arpl push int (bad) hlt popa mov (bad) stc push xchg call lea sub or dec cmpl add lock pop arpl sbb (bad) into pop fdivp dec jecxz cmp jo cmp js push push aaa aas clc pop pop xchg js and mov push stos in and les mov jmp or pop or or sub (bad) rorl cmc ja and sti sub cmp ret and data16 enter jb pop jg xor xchg test add icebp in mov lods jle sbb cwtl scas jae fnstenv pop sti rdmsr loop push sbb rolb dec cmp int3 daa cmp inc mov stos ja pop push push jl cmpsl and xlat je orl push lahf mov cmp (bad) jo pop sub cmp (bad) fnsave fimul sub iret cmc dec fdivrl inc jl push adc pop pop mov test popf out sub adc inc jns or xchg pop je xor push and test lahf and inc (bad) mov test mov push add mov cmc cltd jb pop jle push xchg push outsb out sub xchg lods das dec mov mov imul lahf aam aaa xor ss ffree mov ret dec xor das xor and jecxz test lret leave xor imul add xor loope ret rcrb jbe hlt pop xchg test dec addb mov movsl push jno add enter movsb sti outsl mov sub mov pop mov inc and pop cltd insl and (bad) xor stc mov movsl push sbb dec dec fdivp inc mov repnz movsl out pop lahf push dec jns jno push push sbb aam fsts mov cmp dec push setge (bad) xchg pop int cld popa push pop test mov jns (bad) in push sahf dec and or test jne es jns in xor push insl lcall stos fdivrp loope lock inc (bad) mov hlt pop clc mov jle mov push or and mul mov div sub xchg fnstsw jns sbb jne and xchg cmp sbbl sahf test inc xor leave or adc mov pop rorl jge sub jge pop (bad) shr (bad) xchg and outsl push mov lret out xchg inc in pop in (bad) mov push imul push push fdivrs std push fs adc aaa xchg sti unpcklps cltd lods lcall pop fstpl rorb mov or mov sbb cmp notb inc mov imul xchg adc xchg cwtl xchg push pop dec lahf mov dec pop testl pop xchg xor js lods cmp lods insl mov mov xchg sub mov or dec mov inc lret xchg adc in cmpsl imul jmp push lcall pop cld pop add or cmc ret mov movsb jp or iret pusha push mov cwtl insb jns push lahf pushw (bad) xchg jg ds rorl adc addl xchg sahf xchg in movsb dec cmp in add xchg adc lds adc xchg jne or in cmp int3 xchg sbb sbb mov mov sub (bad) addr16 xchg cwtl sbb (bad) insl xor sub dec ljmp (bad) push je push sbb sbb add add out into cmp cmc pop lea push popa test pop iret pop jle mov imul jle or push adc stc push inc or cltd pusha hlt repnz clc pushf xchg mov movsbl pop pushl popl cwtl mov push mov movl lahf lea pusha movb jmp not mov jmp xlat adc add (bad) in cmp (bad) adc jns dec cwtl int jb popf mov mov adc ret cmp dec or dec test fwait mov push lcall (bad) not push (bad) sub rclb pop jmp or fwait (bad) outsb xchg aas sbb adcl sub mov icebp and rcrw push or cmp out fildll test jg dec ljmp sbb cs mov mov cmc adc out int3 out lcall ret into jb pushf cmc cmpb call push inc setbe pushf mov jmp sub clc call jnp ds xchg or jo mov adc into xchg repnz push lret cmpsb dec sub inc call inc stos cltd or mov adc xchg dec pop lret inc outsb dec mov mov mov mov pop rcll loop ficompl in jno jo leave xor rolb mov sub xchg push cltd jecxz sbb lods cltd ljmp std (bad) bswap bound jmp mov sbb xor mov adc pushf mov mov xor insb repz mov (bad) daa dec cmp hlt fs sub xor sbb push mov mov or and inc xchg push outsb aad fiaddl adc sbb test ljmp mov lret or sbbl outsb pop jns jge sub test lock pushf or pop int3 jnp xor jno jecxz daa push push fsubl int3 lods in jmp xchg cmpsl into out jle fdivrs mov adc int3 bnd mov repz mov or inc stos jp je mov movl pop add imul lea addr16 push les iret jo cmc jl clc es xchg fcmovnbe pop lods pop scas push mov fwait push lods popa nop mov mov pop sar sub pop cmp nop or cmp xchg push (bad) setle push pop pop jp xor and cwtl pop hlt push test arpl inc mov ret fisttpll adc ljmp sbb adc cmp inc fistl sbb push sbb sbb pushf rolb mov pop dec mov clc iret push ja cmp adc mov push mov arpl mov sbb in rcrb popf (bad) push mov jne stc icebp push ljmp mull ror xor mov call push mov pushf xchg or jg pop xchg sub je inc pop pushf inc nop dec push pop pop sahf je add mov sub leave inc mov test push insl fs pop sbb iret lock fnstsw stos push cmpsb cmpl repnz push xor xchg scas push push test jae sub xor stos or jle mov inc pop cmpsb clc addr16 cs int3 push mov fdivl jae and jmp push mov notb aam push movl pusha movl movb push lea jmp push lea call jmp lea jae test cmc cmp jmp lea call call call movl jbe push pusha lea jmp call repz out adc das cld or xlat mov mov add sub push ds pop rclb push lret xchg mov int3 and lret adc or daa push inc fiaddl cmp mov inc mov sti cltd sub aas insl in xor dec sbb xchg rorb call sub push or jl mov fs adc dec loop xor (bad) ss push inc sahf fildl and push sub sbb push jns xchg loopne jb push lcall mov sub pop (bad) cltd ss fnop cmp out and adc cmpsb or xchg pusha add aam push lods xchg rcr dec pop repnz stos push mov fisttpl pop imul in sub sbb push jo adc (bad) stos aam (bad) adc fdivrs fs imul push subl fsubl adc mov mov mov insb mov push adc stos das not mov pushf dec lea ja pushf rol pushl lea jl pushf lea call pushf clc bt cmp pusha lea jae pusha cmp pushf pusha mov lea jae jmp xchg pop and pop cmpl xchg in insb mov jg or sbbl and js jl lcall mov (bad) dec cmp xor test aaa je ficoml mov xchg scas or ja inc jo and sub icebp push push cli sbb cmp and ja jmp add push jns je insl inc jne arpl outsb xor ss add or jb cmp cwtl mov add cmp mov pcmpgtd mov sbb das add test xchg mov stos fwait int3 pop mov mov xchg rcrl inc or push mov (bad) jmp dec test clc insl add dec jne adc call outsl clc ret fs stos out stos pop pop push movsb xchg cmc xchg test clc push xchg movsb sub sbbl ljmp sbb xor clc and imul push test lss add movsl (bad) or jo cmc cmpb ret hlt adc popf or pop cmp inc xchg pop fwait stos dec das sub dec dec jo sub loop xchg test hlt jns and call add movsb pop mov pop jo dec jae ja xor ret repnz ljmp or mov xlat movsb movsl cmp pushf cli mov fdivl xchg mov push mov dec lcall ljmp leave test mov sti jl fs pop aaa add outsl mov xor sahf ss (bad) adc sub jmp int inc mov jge enter mov in jecxz mov push movsl xchg test xor xlat add dec inc push dec inc dec xor cs insb add or popa jp jbe leave in sbb inc jbe or mov popf xor jne adcl mov movsl int3 inc std add mov int pop pop fimul mov push or mov mov or or sub fucomi pusha cmc lret bound mov jmp test das push add jnp adc mov sbb lahf sti jnp or xor pop stc xor jecxz lcall cld mov xchg scas push mov ret ret xchg gs into test (bad) add add adc adc inc add adc call add add add add add add test bsf movzbl shr inc mov sar sub shl pushf lea movb cmp sub stc cmp pushf jmp jmp inc mov inc jb xor insb pop nop aas adc xchg pop cmp jl dec es inc xchg insb mov xlat mov arpl mov outsb add and rolb arpl mov arpl mov push outsb sbb shll mov cmp dec xchg mov xor mov dec out ss sbb test int pushf sub add and sahf push daa sbb jnp add repnz lret sti gs lea mov stos adc lret inc in adc pop push pop cmp mov dec (bad) jg sub jae dec rorb enter adc inc lods dec int3 push popa dec test inc pop insb pop sub je repnz (bad) loop (bad) std test test (bad) sub mov dec ds lea adc iret into cmp pop mov in jo mov dec arpl fsubrl insl cs lods add mov dec cmp cwtl cltd mov mov cwtl sbb jp test imul jo (bad) dec scas aaa xchg out sub aas (bad) xor adc sub out daa push cwtl xor adc insb in (bad) cmc ja outsl dec fimull test jbe rcll hlt cmp cmp negb dec insb dec pop jbe jp push push outsb add or jl cmp sbb and mov mov cld jo cli jmp sub and mov xchg sub mov dec roll sarb insb mov cmc sub (bad) shr add pushl scas or pushf mov cmp sbb mov iret mov inc das inc and xchg push push mov fwait sbb mov add lea cli imul push mov arpl into outsb mov fdivs fild (bad) and cltd or and push cmpsb in cwtl mov mov xor mov cmp adc and aam adc fwait cmp psllq jne add out or (bad) movsl xor jb movsl popf lret xchg ss mov push lret cmpsb orl sbb dec sbb or add call lcall mov sub pop insl ret ja (bad) mov xchg or or jl add mov test (bad) pop sub cmpsb mov xchg scas add pop mov jl dec jnp in jo (bad) mov jmp lock push xor in jge pop jb pushf movsb push jo push adc and out add leave loop cld cmp and sbb daa iret stc hlt add aaa sub fisttpll push aaa lret dec iret mov mov or push outsb add lock or hlt xchg leave sbb mov (bad) in popa mov sub arpl dec mov loope in mov std fld es je repnz jg out repz (bad) inc (bad) mov and lahf push and nop fbld xchg xor push shr out stc mov pushf in mov dec jae mov ret daa pop xchg dec push push arpl (bad) sub jo fwait mov ja dec lcall mov xchg imul mov dec les mov cs mov imul mov gs in daa cmp push or addb mov hlt imul mov dec movsl adc mov rcrb mov mov dec and imul cltd stos lret ret in (bad) mov mov mov (bad) push cltd in mov adc (bad) out xor and ds mov outsb in dec aaa gs adc dec adc test dec lds test cmp addl inc movsl push call mov mov pushf pusha lea jmp xchg inc sti out xchg or or inc rcll iret push mov adc sahf aam push sbb jno sbb push imul jp mov sub adc ljmp and mov mov les jl sbb loopne flds dec mov and adcl adc xor insl xchg mov lock or cwtl ret cld sti dec sbb push sub stc ror pop mov fdiv jne xor sbb add cltd mov jnp (bad) jge (bad) cmpsb movsl sbb dec ficoml mov (bad) in push and mov xor add push scas or sub xchg test xor fxch inc mov pusha pushf lea jb pusha pushf cmpb pusha lea jne rcl lea jmp lea jge push call pushf sarl xchg out mov mov pop xor jbe mov insb dec insl pop daa add mov add bound xchg arpl adc cmc mov sbb or add sbb popf pop aas jnp push out push movsl insl sub jo mov popf xchg mov aas ret or int mov or sub fcompl fwait jns cld inc stos js mov xchg mull mov aas cli outsb inc roll (bad) inc cmpl popa call mov or mov jmp lods dec jb daa movsl or hlt add sub lods mov pop jns and push pop xchg test push mov fcompl pop movsl mov inc imulb fstpt mov imul xchg push adc out dec (bad) push inc divl stos sar loopne sbb rcr sbb mov iret mov jle ficompl mov jnp add stc lods (bad) test and bnd dec push ljmp shrl mov adc cmp mov mov lcall pop mov vpavgb in int3 mulps push mov mov fs stc cmpsb xor pop mov aad or inc lahf push push lahf addr16 jb inc ja pop ret xor test sub xor xor icebp xlat cld in incb fwait and sub pop mov out push sbb xor dec or mov out insb xchg (bad) mov mov mov add jge fldl jmp das add repz mov sahf adc lret sti mov jl push jl push add arpl js pop mov insb xlat pop add cmp loopne movsb mov jp not call ljmp push and imul adc dec inc pop push daa outsb cmp ror or dec and push icebp add add arpl pop push and out out cltd cwtl call dec addl out push jbe es xlat (bad) and test jns mov mov xor out insb (bad) sbb leave daa shrl cmp shll outsb push sub jmp dec mov jne inc popf pop mov push and xchg adc (bad) jo fstl add push dec inc dec dec xor cs insb add or (bad) repz ret pushl pop andb lcall outsb insl dec inc (bad) in pop inc stos push sbb ss enter mov push aad sub inc jae les push (bad) emms jge mov and or negl adc mov loop insb cltd or inc xchg jo sbb out mov sarb mov les sbb aas push aam rcrl in dec mov imul pop mov dec xor cmp insb sbb mov pop in xchg jae xchg xchg lods jmp in push mov mov mov (bad) mov (bad) fsubrs rorb sub xlat dec jmp adc pop test jbe lret dec jle inc int3 imul push pop dec iret lsl pop inc stos nop pop dec mov das (bad) in add fistpl ds jg mov sub sub add subb mov push sbb cmp out xchg cmp cmp insl mov fildll cmp or adc daa mov adc icebp aas jb cli cmove sub mov fisub xor xor es and (bad) (bad) jb jmp cmp scas jmp in push sub pusha mov std xchg orl iret add lea fdivr adc and pop jge (bad) ds or clc push inc inc dec pop sbb loop outsl ss dec subl cs mov push ret in cmp data16 das push dec leave sbb xchg sbb or adc xor inc jl pop divl sub or ret pushl or add push adc inc push push and xor pop lea sub inc add xor js sbb sar jp jp pop (bad) (bad) adc repnz lods mov dec ja push push mov xor sarb mov (bad) daa push add out out dec and pop jp or (bad) in jecxz insb fsubs insb rclb mov repz sbb into dec cwtl and jmp loope (bad) mov mov aaa roll pushf lea jmp lea call push mov mov push pusha movb mov lea jmp int3 popf pushf call dec bt cmc not clc rol call pusha pop mov movsbw xchg xchg mov mov call movsl xchg scas jae or cs push test movd jg cmp sub int mov ljmp adc cmc hlt mov or sbb push popf fistpl pop daa and movsb jmp out sbb add pop icebp out push adc adc push inc mov mov mov imulb or mov lds pop stos shld stc neg xor pushf mov not call bt add jmp scas ja fbld ss je stos arpl push inc outsb imul jae sub not pop stos cld imul decb xchg fs mov imul lods (bad) jae (bad) (bad) pop mov mov inc insb repz rcrb lods and arpl dec mov in pushf popf jp sbb adc pop add dec push pop xor mov int3 dec (bad) dec push dec push mov xor pop mov inc pop arpl in mov adc addr16 mov dec inc cmpsb add in lcall or out fildll pop dec (bad) sbb push push test bt cmp xor lea jmp push dec dec jmp mov or add pushf mov call not mov pushl lea call pusha pushl pusha lea jno adc push pushl pushf lea jae call jo (bad) pop lods or test in inc xchg f2xm1 icebp and add pushf cmp cmp movsl sahf int adc jp arpl out cmc scas push dec xchg push daa and lcall lcall daa push clc dec add push stos push xchg or cmpsb mov xchg out cmp pushf rorl pop arpl mov or rcr test push addr16 push inc pop call pop inc and adc sbb mov not xchg loopne jl in ja jnp mov icebp push in jg and add das push (bad) lods or jnp inc pop sbb out scas jae xor dec stos jl (bad) repz inc and push js mov or lods add pop aas or jb push cmp lea popf test (bad) out clc ljmp out mov mov sub jno aam testl js lret lcall movsb cmc xor sti mov fldenv sub (bad) idiv nop test cwtl lea ds sub cltd mov sbb outsb fildll je enter jae pop xchg and or or repz or sbb sbb test fnstsw mov dec movb jmp push lea jne pusha ror mov cmc push bt cmc or jmp dec (bad) push mov ret mov sub cmpsl mov cmp insb or jnp pop sti sub scas xchg rcll xchg fsubs push inc iret icebp cmp cmp out jne inc xchg push pop xchg mov and aas repz or push xlat movsb jne mov mov lahf cmp mov jg xchg cwtl push (bad) xchg lahf bound jge stc mov cmp cmpsb lret inc jl add pop imul imul adc cmp mov add mov pop test out movsb mov not inc add inc xor inc xchg test mov adc and jmp lea jae push call add push push js arpl gs js add and call call lea call pushf push pushf lea jae pusha bt pusha call pusha push dec fldcw shr cmp imul dec shl outsl cmpsb fdiv outsb lahf dec mov push outsl inc out xor (bad) push lods lds test dec outsb enter mov iret mov dec inc mov jmp pop mov leave sti push pop mov xlat out push cmp jg jp fistpl xchg jg cmpl repz or push adc stc lret test inc and (bad) push push js xchg add jle mov ret jo push jg xorl shlb movd or xlat and add fmul in lods push aad in pop (bad) cmpsb mov out pop push test lods mov mov push mov ss jl jb imul xor ret dec mov (bad) sbb sbb mov and insl inc icebp pusha adc insl xlat inc jl mov jno lea (bad) push lds jecxz cmp out sub jle jo int xor inc mov xor mov imul arpl test addr16 pop lods aam popf orl sbb inc ret (bad) cli sbb roll int3 mov iret push cmpsl xor lret into scas (bad) loop mov and in push sahf or xchg mov rorl int mov push pushf loopne adc mov loope add scas jp mov les movsl pop pop push adc push inc xchg (bad) shrl imul cmp or pop mov xchg mov push outsl cmp mov addr16 (bad) or xlat mov aam sub stos cmp xchg (bad) pcmpeqb scas xor movsl inc xor xchg fnstsw push dec addb aad dec inc push mov pusha fistl js pop and mov test clc in aaa xchg out cmc cmp mov clc cmc and clc call mov or sbb outsl push orb cmp ret xchg test xor insl mov mov cwtl pop jge fisubr addr16 dec jp cmp sahf lahf (bad) repz jg pop int3 cltd cmp pushf cmp (bad) mov jmp xchg push add pop xor int3 pop mov lea bound stos call mov idivb fsts pop add leave mov mov ret test fidivl lret insb push push adc subb adc xor add jo mov mov push or sahf out push pushf stc or pushf pushl lea je setb bswap not pushf mov cwtl movzbw cwtl lea movb mov bswap lea movzbw pushl jmp test pushf pusha call pushf lea jae pushf mov pushf movb call push jmp pushl mov stos pushf mov pushl lea jmp call or js push pop xor mov in inc xchg cmp inc and les punpckldq repnz mov jmp (bad) fucomp daa lods hlt dec decb lds add lcall sub lods cmp cmp adc add loope add mov imul dec (bad) jo mov inc mov daa add out jmp fnop add stos add and jp je push push adc pusha lea jmp pushf lea call pusha mov movb jmp cmp or pusha lea jne bts and adc test mov test or pushf mov push pushf lea je xchg push jmp add jo or lock mov xchg push shrl cmpsl sub orl je adc add lds (bad) testl xor insb mov mov clc xchg jp pop in pop out (bad) (bad) out pop pop jle jmp push and nop sahf jl mov dec adcl cmp repnz pop (bad) pop jns es dec mov or push cmp mov loope nop cmp fisubl das sarb (bad) (bad) add xchg js adc mov and sahf adc mov lret ss mov bt cmpb pusha movb call mov not cmp cmp setns pop movsbw push lea push mov movb movb pusha lea ja jmp add inc mov inc push (bad) call push sbb int3 add xor xchg pusha pop jo outsl int3 push int outsb cmp pushf bnd movhps xor fidiv sbb (bad) or sbb xor add xchg outsl cwtl aad idivb adc sub pop imulb in mov pop cwtl mov inc fild mov mov sbb xchg scas je dec pop inc in fisub sbb (bad) push subl jge cs jecxz dec inc sbb int3 cmp inc adc outsb cld movsl xchg repnz cmpsl or pop mov cmp jnp clc je jbe popf mov xor push je xchg mov mov inc jnp lret add mov dec cmp sahf cmpsb stos xor cltd push enter test and stc (bad) in scas mov dec lods cmp insl mov add popf (bad) fidivrl inc outsl stos sbb (bad) dec mov mov call loopne fstl mov cmp jmp adc inc jo jo jl jo shll mov pop dec or sbb xchg sbbb and xchg call popf inc mov cmp pushf cltd sbb into ja (bad) jo pop dec hlt mov xor std fcmovb (bad) mov sahf mov push adc jge je lods fwait clc cmp (bad) lahf push in push cwtl (bad) icebp sbbb pop lahf addr16 pusha adc popa pop test add cwtl arpl adc push icebp mov jns dec inc aad mov in mov fwait (bad) mov adc dec add cwtl sar push jp lds loop jge xchg mov or (bad) (bad) pop xchg sub mov mov jle,pn pop xor mov inc xchg sub cltd (bad) ss sub push stc inc lods pop popf sbb daa pop mov add xchg iret (bad) lret inc mov mov pushf lea jae push pushf movw lea jmp pushf pusha xchg jmp pushf rcr mov cmc cmp pusha and bt pushf clc stc add push movb mov push lea jmp add jmp pusha lea lea pushf movzwl lea push movsbw lea jb lea push bswap mov push lea call jmp jne pusha pushf pusha inc push call lea je cmc cmc call call pushf jmp push pop cmp mov inc roll addr16 push lods icebp lods movsl cli into fstpl ret dec xorl add sbb arpl outsl xlat dec xchg xchg or mov inc movsl push sbb push xor adc les mov mov inc xchg add nop (bad) adc rcrb ret pop pushf adc sbb push xchg inc xor mov dec and (bad) lret xor fadd std cli xor and sbb and cmp (bad) sysret ja cmc inc ss xchg inc cwtl aaa or jns cs jae sbb in nop (bad) jb push movsb jle lea jo and out loopne sti sub mov lret les push test cltd mov xor mov inc push repz mov pop cmpl mov lcall pop jne pushf mov rolb js and scas fiaddl lahf and clc push push outsb pop addr16 daa cld jp ret addr16 ljmp dec in out adc ljmp jnp (bad) jne data16 and bound lods jno imul xchg outsb mov mov xlat outsb cmp sub push fisubr js stc inc ret data16 or jge cwtl imul fist pusha cmpsl add mov lret xlat pop out idivl xor (bad) xchg lods inc adc adc (bad) fcoms sbb cmpl pop stos enter sub mov or mov (bad) dec out mov sub fs in jbe int3 pop inc imul xor xchg pop insb aas ret in sub pop mov pop jo mov xchg lds mov push daa sbb hlt push mov jnp in mov aad cld pop cld mov xor lret cs pusha call stos pushf pushf pusha lea jmp jle and mov inc jmp pop jb addr16 and mov rclb mov jecxz or pusha and cli (bad) mov aas clc ret lret enter sbb pop fsubs pop pop fdivrl cmp or push addr16 sbb inc (bad) or and inc xchg inc cmp repnz push fdivrs pop mov daa dec mov iret or test sahf lock es nop icebp lahf dec xor leave jo cmp mov xchg ja mov or push adc jo xor sub stos add mov jae push sub jb dec xor inc out jo or sub cmpsl out iret aaa lret jecxz mov scas add add inc jge outsb mov rcl push xchg xchg lds xor sub gs push inc xchg into aam push stc cld das jns mov and test push in (bad) pop sub mov cmpsl jmp cli or popa xchg push js fimull jmp inc or mov sar pusha jp addr16 pop rcrl push (bad) ret or fisubl std movsb mov mov popa out adc fcmovne bound mov je mov add mov fs add (bad) mov out and push addr16 add enter hlt push (bad) inc fsubp inc cmpsb fmull mov cmp cmp mull sahf jb enter adc mov popl inc addr16 rcrl fs jns pop jecxz test pop imul in dec mov adc dec push test lcall shl add verw movsb popa xor hlt in xchg mov bswap pusha movzbw push mov mov movzbw bswap mov push jmp lods mov inc outsb sbb xchg cmpsb mov xor mov push pop enter and jge adc xchg test dec pop sbb xchg arpl xor pop and mov out sub add lcall outsb das (bad) and shrl lret xchg shll or cmpsl ss add mov or rep lea mov pusha mov bswap lea jmp setg mov call pop pusha mov mov fucompp mov sahf cmc add push mov fcoml icebp rcr (bad) ret ljmp ret loope mov xor lock lret dec sbb lret in mov adc (bad) iret les add shrb cmp pop or fsubr scas mov pushf (bad) out jmp stos lahf das aam fisubl sbb inc leave mov sbb ffreep and idivl cld imul mov out sub fnsave pop mov and jo paddb or jnp jecxz inc (bad) inc pop andl sub sub aad push mov movsbl pop pushf pushl pushl ret lods jp aaa mov out repnz pop adcb jbe pop and jge insl cmpsb or pop (bad) push push out mov inc (bad) push rcr inc sbb ja call or pop lahf ficoml rol dec inc stos cwtl daa lret add inc push jge jnp popa sbb push sub loopne push (bad) jle pusha ret adc inc stos sahf (bad) pop hlt xchg (bad) sbb cmp insl add and roll or or xchg scas (bad) (bad) (bad) mov inc call in pop xchg mov inc fbld in and fmul add xchg iret xchg ficoml pushf mov push pushf pushf pushl ret jmp pop test push mov mov pop scas mov dec (bad) mov mov inc insb sbbl stc daa mov arpl sub jne,pt or cmp add sbb aaa jns or cmp pop shl pop out xor dec inc mov jne xchg fcomps push xchg xchg imul out sarl lods pop call hlt cmc or lret repnz sub xchg lods cmc jnp ss inc (bad) std pop adc cmpsb sahf or popf mov andl and js mov popf pop (bad) faddl pop out inc in push test inc and mov fs je jmp dec add mov jbe cmp sub or subb or pop (bad) inc outsb mov fdivrs cmp clc pusha cmp add fimull cmp std addl aad aam pop jo mov mov cmp pop xchg aam lret in popa sbb rorl pop lea inc xlat pop sbb xor pushf clc push mov scas popf (bad) lock cmp fildll stos xchg xorl bound packssdw icebp push hlt test mov in sbb iret loope call jne ja into push pusha out and pop dec clc jl xor xchg dec push lcall stc push rol pusha push jmp fdivr ja mov add ja jmp inc dec pop cmp lret dec (bad) push (bad) loope mov xor mov (bad) mov push dec mov in or jp jle or and out les xchg lock adc sub mov stc xor sbb hlt outsl cmpsb jl jnp sub notl mov loop mov movsb push test pop lods xchg fsubl rclb and cli (bad) mov xchg add ljmp ja pop mov inc and cmp mov (bad) in adc in mov and sub push lea add stc btc mov shr btr sub pusha xchg not mov sar mov xadd mov rol xor mov pusha inc mov sbb pop mov cmp test test test or mov jmp and xchg jg or push add (bad) out (bad) repz adc imul sahf lret repnz fsubp sahf mov cmc fidiv pop push dec in cmp dec xor add or pop mov jb ss in aam shr repnz fadds mov (bad) mov jmp scas xchg jo jecxz loopne inc lock lret mov movsl test push lods in das push ficom jl test (bad) mov mov sub pop aad rolb push push pop or adc mov pop repnz mov mov stos addr16 lea add ret insb lahf pop neg sti push icebp push (bad) pop idivl cmp test outsb inc push sbb enter jge aam fildl inc ds and aas jmp hlt jmp inc sbb stc fisubrl repnz (bad) aad push push hlt pop cs (bad) cld repz adc jne pop roll mov imul aaa fist pop dec subl shr ss sbb push repz test out inc and movsb pop (bad) jecxz pusha jl cmp daa mov cmovs adc scas int3 inc jns xchg divb mov lds jecxz stos add cld ds lret orb lahf movsb fnsetpm(287 push inc pop add dec test fdiv nop mov lret push insl mov push les mov mov push popf bnd pop je (bad) push scas inc lock and scas je fstpl mov bound insb lret xchg sub jb cli bound mov hlt xchg jnp fcomps ret out inc loope push cltd cmp daa frstor pop outsl (bad) pop inc imul in sbb cmp lret test sub (bad) mov mov sahf cld or add push mov push popf inc dec ret or xchg aaa lea push or or push lds (bad) daa dec setge inc pushf shl xchg pusha mov (bad) repz setne mov test bt call jmp shl call bt neg clc xor bt pushl stc call pushl lea jne aaa lea sub rcr mov rcl (bad) lock and clc xor add dec rcr pushf mov bt push cmc test jmp cmpsb addl xchg jp push jb xor push outsb test xor sbb mov (bad) and adc and outsb mov in sbb mov ret mov fimul cmc mov enter mov xchg mov jb out call xchg inc add sub loopne cmp pop fiadd das das xchg pmulhuw movsl pop inc adc pop nop test jnp pusha push lock enter inc sti xchg mov inc test mov fmull mov (bad) or jg cmp pop in adc cmc jg adc jo xor and pop rol loopne push sub add fbstp cmp js add ds jne pusha mov pushf lea jmp cwtl lahf push neg mov ror sub call call dec jmp movl pushf call stc bt sub bt cmc cmp pusha or call loop cmp (bad) cmp xchg in in xchg mov clc int sarb ret dec xchg in lahf cmpsl mov (bad) xor (bad) lret rorb dec shl jmp fsubrl movsb pop pop mov push sbb xchg stc cmp mov mov call iret inc int3 jne out scas jle lock xchg rcr imul enter lock stos mov sbb xchg jnp xchg mov imul lods (bad) xor mov std lret sahf xchg mov lods sahf sbb loope dec sub lahf punpckldq jno daa jmp sbb mov sti pop xchg or add add cmp test jmp xor bt xchg stc mov call mov clc test add push sub jne pusha cmc test jmp jmp cmp cmpb push lea jne movzbw sub inc dec aaa shrd mov shl test add (bad) lock test call lea jne btr mov test sub not ror bsr sub mov jmp adc jmp jmp xchg inc andl lods les jle lds dec mov sbb mov push push pop mov mov or inc jp push cmp add push adc push mov stos dec mov inc xor mov mov mov in nop jecxz or push push push lret push arpl push aaa sbb in mov jnp fcomp jmp dec (bad) xadd inc inc xor mov fs lods lock test or data16 or dec in xchg test pop sbb insl stos mov inc push inc outsl jl jp inc test rclb pushf not setnp jmp shld and data16 lock stc push pushl jmp clc call pushf movw lea je bt stc test cmp jmp test inc push and loopne fnstsw mov test sbb mov adc xor xchg gs lds stc mov mov pop (bad) jge lea pop inc jecxz enter xchg (bad) xchg mov dec dec sub jae add out mov mov dec or lock push (bad) (bad) jge or and mov fmull in popf in stos mov pusha lea jne bswap mov push pushf movb lea jmp movb pushf lea call jmp bt cmp mov jmp ror mov setge shl mov adc mov bt js add xor pushf setge lods dec call movl pushf pusha movl mov mov pusha movb lea jmp pusha mov push mov pushf pushl lea jmp mov pushf clc bsr pop mov bt jmp call adc movb pushl ret pushf jmp add inc gs inc push add call stc cmp call add adcl (bad) push je inc jge pmulhuw div shlb push xchg jmp jg xrelease jnp pop scas stos xor xchg pop cs mov movsb jbe and loop outsl mov daa xchg cmpb inc or lahf jnp dec mov outsb adc jecxz aad push mov mov and xchg inc xchg add fcmovnb push xor adc std jnp (bad) adcl adc dec sbb jo adc jno jp dec push repz out (bad) xor adc pop dec popa pusha add xor add push xchg js xchg mov xchg push mov adc and aad add inc push shll clc (bad) outsb push sub mov repz pop aam loopw dec cli pop lret mov mov jno dec test lcall jne push leave mov pop clc insl pop in movb xor cld adc jl fimull sbb lret xor imul jge enter lahf push lea decl pop nop adc pusha fdivrs outsb push pop mov inc jae push test lahf mulb inc jg in inc sub rcll pop loop test insb popa aas daa push cmc add pop pusha pop lea insb mov mov sbb add insl push loop pop add lds shrl add jbe inc sbb pop push cld jg in ljmp jnp repz pop mov sub dec mov pop nop adc jge arpl mov mov mov and inc xchg mov push je mov mov dec ds mov mov dec mov pop int je sub fiaddl cmc push push cmp ja mov popf and or mov rcrl imul fisubl cmp test push jnp and lret pop fsubrl in mov cmp subb inc pop xchg xchg xchg jg scas push popa xor jle mov jne test mov push cmp call clc test or call pusha jmp push add sub cmc pusha clc mov add pushl dec pusha push jmp call mov lods jo or lock mov leave mov push mov and mov fistp lock ljmp pop xchg sbb sub and add fnstsw cmpsb pop jl cmp pop mov jg jno inc xor mov pop jb sub fisubr cmpl outsl js sub mov cs lock dec push inc loopne ret xor inc inc ret pop jnp add pop mov cld fcompl adc int inc (bad) mov out mov jp jae add xchg mov lea mov and (bad) aad mov pusha jo push stos js imul xor sub inc inc js inc sti mov dec dec adc loop hlt push gs pop push inc daa (bad) sbb mov sbb add or stos push (bad) cli lock out or or and icebp or shl insl jno and shlb jne dec cmpsl jge lds add into adc nop mov leave xor in hlt lret push cltd dec js push cmp lret push sub mov pop imul jno movsl (bad) sti in lock lret or xchg fcomip (bad) mov sbb cmpsb pop ss push adc sti aam cmp mov divl pop push lret add mov lock cmp add push scas adc mov out pop xchg jnp sub adc shll ljmp rol loopne mov out je test dec (bad) cmp icebp pop inc arpl (bad) je bound popf (bad) rol cld in xchg xor insb wrmsr aaa pop cmpsb xor xor fistl or pop lret jecxz rcrl ret sub imul lret cmpsb jl xrelease inc or push mov cmp sbb xchg add nop das out cmp movsb adc push cld push sti gs xchg or lret in ss inc and cmp mov xchg stos ds or inc jo and nop decb mov daa clc jg ficom enter mov incb (bad) int pop rcrl rolb and or lods push fs xor or and popa (bad) movsb iret shl ret dec mov (bad) adc insb insl mov les inc fcomip cmp pop lock xchg inc sti xchg in jecxz jecxz xchg out mov inc aad dec (bad) adc sbb sbb jmp inc add loop inc xor jns or aas sbb mov setle or and cltd enter cld aad notl daa inc add pusha pushf movl pushf push pushf pushf movl pushl movb pushf lea jmp call mov movsbw mov pushl call add inc js je jb arpl jae movb dec mov call or (bad) inc jne stc mov jmp jp push test in popf stos (bad) (bad) mov xlat add and adc std ficom icebp cmp lds mov decb push popa ds inc fs repz pop mov mov xchg fistl xchg insb into (bad) dec or push sbb gs std jecxz cs outsb jb pop lock push xor sub mov jp test adc lods jp in test fwait orl decl popa add sbb pop dec sti mov je mov lock sbb pop pop out mov roll lock inc adcb or aad jb sub pop mov mov pop xchg (bad) lock xlat daa (bad) and xchg aam mov popa or pushf iret sti cwtl pusha push std repz jo mov scas xor adc push cli cmp pop icebp push and movsb lds inc cld jb ret stc mov cmp (bad) inc sub inc xchg dec mov loop xchg aam xchg test fldt add adc jae movsbw rcr mov or mov shld test mov jmp xlat sbb jmp popf sub mov push xchg jo cmp jno sub push (bad) aam xor nopl jae pushf pop push xchg pop stos imul mov hlt scas cs pusha fwait adc hlt inc xorl (bad) mov je xor add xchg mov out cwtl jmp adc pusha int3 push fst sub daa add inc xchg sti sub lret cmp push mov mov lods mov mov int3 pop rcrb push shrb ret inc sub div lret or pop aam ret and (bad) icebp sbbb (bad) jge divl popa stos push outsb frstor lcall pop jge repnz loope fimul mov dec in cwtl dec in pushf push mov lea jmp movl pusha movb pusha mov lea jmp pusha stos mov pusha mov pushf lea jmp inc push mov lea jmp repz pushf pushl push movl mov movb movl pushf pusha mov lea jmp add adc push add add add add add add add iret push add iret push add iret push add add add add iret push add xchg addl sub hlt clc lock sti cmp sbb movsl in jmp ja mov (bad) addr16 lahf cmpsl int3 add negl es mov imul dec ret out shr jb inc pushf jecxz mov add ljmp jb dec mov aad and mov mov sub mov sbb mov mov xor mov (bad) push into in subb mov add fistpl pop sahf dec call lahf xchg movsl aas clc inc mov sbb fwait push mov inc jae incb push gs fcomps out aad jae adc sub xor pusha jmp jecxz out dec mov cltd sub add movsl xchg (bad) mov out in frstor push sub popf lock por or not push jns mov (bad) xor or cmovg pop testl loopne or push sub pop mov fs jecxz inc dec cs fmull jp or popa daa les xor rorb adc add mov push mov mov scas rol andl or dec out (bad) iret outsb pop nop xorb or add in cs clc lea (bad) jle adc xor lea cmc adc inc lret jo ret lds fpatan add dec fwait xor mov dec sub shrb aad fstpl (bad) xchg inc lret or aad xchg sbb repnz jmp adc mov loope pop cltd push sub lret data16 dec mov pop jo dec mov sbb inc f2xm1 xchg adc lcall inc jg aam rorb bnd sbb (bad) icebp data16 (bad) inc mov xchg fstpt dec fxch adc out sub out jp pop and imul hlt push jl cld pushf cltd mov jle mov leave bound outsl (bad) sti mov les aas inc std stos push lret mov mov test imul in ret rorl jb lea and negl arpl xchg push push xchg add jp scas and adc dec in and xchg xlat sti sub loope and test cmc test jl mov fcoml push leave dec mov repz test or pop test adc jle jg int3 ret adc jno lahf sub je cwtl jo popf adc es cwtl das mul out sbb notl and dec aaa sub and add and out cwtl int pop in ds in repnz adc sub inc add jo mov xlat push loope cmp fimul orl add in iret dec loope inc sbb clc pop in xchg inc fucomi pop movsb sub push sub loop decl and ficomp cmc rcr sub inc xor (bad) mov sarb imul pop add lds leave push in fs xchg repz iret push out push mov jno pop call je mov push out jp fldt loop dec (bad) insb js shr adc (bad) cmp aam aaa hlt sub and bound jb cs stos inc push jle cld mov loop pop insb push mov inc test repz jmp mov inc cmc hlt mov mov lods lahf push pop (bad) fisttp cmp mov xor outsb fstl nop or xchg add hlt jl test xchg add lock adc fisttpl into imul cmpsl cmpsb sub or fs inc loopne fs cmp jecxz sti adcb cmovge in btl mov fstpl insb inc ljmp inc cli arpl mov and scas arpl (bad) pop les mov xor cltd aaa xchg push gs lahf int mov add movb stos pop movsb or mov ds push mov pop inc ret les mov push push js dec pop call sbb imul mov adc adc outsb nop jae sarb fcmove mov icebp fstpt in loope jae and sti cmp push cld mov adcl pop xchg inc movsl roll jle (bad) and out (bad) mov add jp mov fnsave (bad) xor sub dec and mov mov pop loopne fldcw (bad) pop push js aam (bad) xor cli cltd mov outsb add call cmp and inc enter aad out pop xor push or jp xchg inc xor xor xor imul ss arpl or adc inc and and decl ficoml xchg lahf or gs mov jmp add pop into jle and in or mov pop mov or shl pop jl daa inc addl mov stos pop sar mov cmp jbe and sbb inc dec or out cmp xchg xchg aam mov adc jae out jne push nop repz push lea aam push jb aad jae sbb adc xor rorl addr16 xchg add push fsubr and push adc imull sbb insl leave js notl sarl (bad) mov mov xchg push bound jmp jecxz mov loop hlt icebp ss aad aad cmp les sbb js jae lret adcl add add ljmp rcrl out dec gs push out inc pop lcall in mov out test pop mov sub pop cld movsb test stos repz fildl sub sub push into jg js scas mov and in test bound push adc push mov pop into mov sub ja scas (bad) mov pop sub mov inc add or imul inc not mov (bad) pusha lds enter test sub lret dec popa mov test lahf add and or icebp cmp mov outsb mov ret mov enter and mov mov mov and scas sub fsubrl outsb popf nop adc and or jg push mov fcoml add sbb cmp lret pop mov sbb (bad) adc cli jmp xor imul out xor push int3 jnp or mov mov popf sbb outsb cltd test jp mov jmp xchg push sbb (bad) scas xchg out mov jg lahf push xor adc jnp arpl int3 int cmp enter lea inc fimul fidivl es test push repz arpl mov mov mov or push fild cmp arpl xchg in jo cwtl pop scas lret sbb mov cmp inc push hlt sub push push xchg test cs sbb push jg fisubl test mov nop repnz or pop lret inc xor (bad) push shl sbb xor inc pop fistpll loopne mov mov dec mov enter pop popa aaa cmp inc in cmpsb or jg sbb mov hlt pop daa xor sub mov adc jp stc mov mov pusha es mov cli stos out into scas lcall cs jmp into jns mov jne cmp inc ret or int mov (bad) push add adc fbld pop rclb in mov dec xchg les lahf sbb addb xor push inc mov xchg jle lock fimull ds es aad mov cmp pop outsb mov cltd xlat push pop mov pop push imul inc sarb cs jle jmp (bad) std les fnstenv lods and xchg mov mov hlt mov fwait jle lahf xchg sbb dec aaa push ficompl mov ljmp sub jo xchg cmp inc repnz mov into lahf inc repz cwtl jge shrb popa mov mov jns incl adc movsl xchg push movsb xor fucomi pusha jb xlat out fsub or outsb jne repnz (bad) mov sub xor ret sbb mov or test inc shrl sub lods dec xlat cwtl sbb push add loope mov sub or nop adc cmpsb cmp stos and (bad) sbb leave fmuls jbe mov (bad) push ret sub mov (bad) sub inc aaa cmp std in stos mov and add clc or es jmp aas mov or pushf pop sbb cmp hlt mov data16 mov adc pushf dec push xor jns out xor add pop test jle enter insl lods int3 cmpsl mov push sti dec mov movb aad icebp add cmpsl imul jg scas push (bad) paddb ja xchg xchg jp mov lcall pop xchg mov dec xchg push stos fisttp mov or xor push adc pop mov adc dec push jp cltd mov fld jo push xchg push test push cmp xchg mov pop rcl push mov mov aad mov jb push mov cmpsl jl fiaddl cmc adc pop dec aaa aaa rclb jle lea xchg mov xchg lret adc or pop gs and lahf add add mov (bad) call or leave out pop lcall test mov xchg popa (bad) or lcall add shll mov cmp repz dec xor or adc jbe inc add xchg mov (bad) pusha ret cld and mov fwait idivb inc daa push mov jbe or sbb push (bad) fistl mov iret cmp loop repnz sub jbe mov or or aam pop daa mov dec push loope and stos push xchg sbb cmpsb (bad) pop or stc inc jmp std xor or xor pushf cwtl not mov setno push lea pusha jmp movb jmp push lea je pusha mov adc pushf movw lea jmp call pushf pushl popl pushf pushf pushf pushl ret pushf pushf movl inc pusha jmp cmp repnz jmp ret or movsl (bad) inc push les imul gs push (bad) adc mov inc add (bad) mov insl loop jmp xchg mov rclb dec popf fimull add mov xor aaa sub aam mov test arpl (bad) (bad) dec pusha mov outsb insl cmc fnstenv sub bound movsb pop dec jmp insl mov mov pop pop pop int3 and cwtl xchg push or pop ja ret sub cmpsb inc inc mov mov adc push cwtl push xchg (bad) int3 icebp clc cmc aas xchg movsb insl push xor test mov hlt add cld add lods and insl lds std jge fidivl mov shlb jmp adc inc adc into sub pop xchg clc icebp push test popa xorl mov or scas ret pop mov inc jl std repnz or xor mov lock (bad) pop pop fistp sbb orb insl inc push mov and cmp je in adc inc and repnz or inc push ret mov shrl arpl and adc adc pop jbe les adc fldcw sub push mov scas cmp or repnz or inc mov mov inc dec mov or aam dec in int sbb push adc mov test add (bad) xchg pop cmp sub (bad) mov mov mov stc pop mov cmp test addr16 movsl inc and cwtl mov fldl2e jb testl fbstp cmp jns or sbb gs mulb mov inc fist or pop xchg mov push ljmp jge pop in lcall pusha mov lea push mov jmp repnz arpl pop (bad) shl repnz (bad) mov loopne cmp mov scas push dec (bad) inc inc mov inc fisub repnz jecxz xchg cmpsb pop pusha popf cmpsb cmp mov mov push pop std int cmpsl out mov outsl sbb cmpsl (bad) push mov push sarl push mull lahf fcomps xchg jecxz mov sbb sbb push aaa dec push pop test xchg into loop cmp and test mov cmc jecxz jge add das dec int push movsl das mov dec dec mov dec insb fisttpl fs cmpsl jecxz test inc dec pushf jmp call push mov inc dec mov lcall mov aad dec mov out in or cmc jno and inc xchg add pop js sub cwtl out jmp jnp out lods mov out xlat pop cwtl adc out pop adc xchg sbb xchg outsl std sbb sbb cli sbb in mov repz jp aam adc pop sub addr16 sbb jl jo call xor push sub lods imul (bad) xlat ficoml xchg in pop mov mov add adc push test sub dec mov fnstcw xchg imull in inc aas xchg loopne fmull adc mov xchg xor pop add pop (bad) sub and jecxz jmp inc cmp add repz loopne cs xchg rclb rclb in lcall dec aas add xor leave movsb pop inc sbb push jl shrl in inc sub push insl mov fsubl mov divb leave je addr16 push iret mov jle mov lea (bad) mov push mov sub icebp xchg ret sub hlt pop mov in dec sub mov cmp lahf das clc pop movlhps (bad) mov mov movl pushl lea jmp adc lea jbe pusha movw pushf lea jae call bsr shr bt cmc mov pushf cmpb push lea jne clc bt or sub lea mov pushf push movb movb lea jmp pop lea pushl movl pusha call jmp pushl popl bt call cmc push cmp pushf lea ja inc pushf inc call out in repz dec stc out rcll or sbb std pushf rcrl jne sbb bound cli and iret int3 and add jge and xchg out mov into sub jl and jle ss outsl mov push into (bad) adc sbb fcompl pop repz ss aas mulb push pushf fwait cmp cmpsl push test and mov xchg cli sbb xchg mov and mov dec pushf movsb xchg push outsb lods xchg xlat int push jle outsb gs mov mov (bad) stc sbb jnp pushf cmp sub in cmpb add and mov push cli or out inc lock cmp lahf out or loopne sbb sub and push sbb xor daa lret xor dec sbb shl int nop movsl add je push mov fstpl adc cmp out out pop sar cli cmp fistpll inc cltd mov rolb adc cmpsb push lds movlhps sbb getsec cmp scas mov sbb pause cwtl mov sahf mov add leave nop sahf mov xchg aam mov mov dec xor in jg cmp lcall ja sub adc inc cmp ljmp dec push test cmp stos fs outsb pushf jmp test or mov mov ficom lds pop push mov dec xorl and sbb xchg lods adc imul inc xor push jb lods adc inc inc adc sbb fidivl mov fsubl mov stos mov xor jnp and jg mov or adc lea sub add fstps mov xchg bound mov sub loopne inc mov sub adc inc cs push push lea scas cmpsb dec orl enter movsb adc movsb sbb mov imul sbb jecxz js push pop adc add scas enter dec mov push jecxz divb sbb nop add popa cmp cmp and and fsubrs out aaa out ss cli ljmp adc mov cmp cmc aam arpl ficomp je cld dec sbb push leave xor aas pop ja sub mov lods or je loope in cmpsl data16 daa push add sub int3 outsl cmc fs (bad) es iret or pop mov dec imul das jg cmp fsubl jl cmp mov jne xchg sbb and fs loop or add cltd mov pop or pushf daa outsb cwtl cmc or popl sub icebp sub cmp fstl stos push add pop sub stos mov rcll and adc push mov push xchg and cmp lea mov push add jae ss mov mov adc in (bad) loope outsl fist adc shll and in repz (bad) jge pop fldt jno jb sbb rcrl shr dec mov cmc mov cmp shr pushf lea je pushf movb push call mov pushf lea jmp es aam loop inc das lahf jl push push je push bound pop js dec (bad) icebp and push mov mov sahf aad xor mov idivl jp movsl pop bound je push xchg fildl mov (bad) (bad) insl dec mov insb add mov pushf out les loope ljmp mov xor popa data16 or adc mov aas lret cmp je jo imul (bad) pushf push pushf movl lea jne pushf lea jbe push push lea call pusha push lea jmp repnz add incl rolb xchg mov xchg fsts (bad) hlt jecxz (bad) cmp and cmp pop dec and mov imul sub push test add dec (bad) push lods mov popf dec sub jo or sbb jnp dec scas mov add leave out hlt int3 add mov inc xchg push jb aaa jle roll push add cli sub pop icebp push cld mov int jl push mov pusha insl insb popa js pop imul xchg shrb ljmp aad mov sbb inc sub (bad) jle or fwait or push lahf fxtract pop xlat scas stos fnstenv dec (bad) or mov adcl mov ret ds nop mov out jl mov xchg pop sti imul and ss mov icebp push movsb jp sbb sub pop adc fisub xor mov pop mov out fildl rep scas jae out or loope adc out jl pop sbb fisubrl pop push aad int test call int mov in push jmp or stos decb in cmp jg std (bad) jb in movsl pop mov and imul push xchg inc mov iret add bound sub sbb sbb js popf cmpsl mov fcompl out in lods add ds stos fsqrt jp add jg lcall jmp push daa popl sbb inc mov repnz lods and cmpsb adc sahf mov push xlat fnop ds ja and (bad) push aas nop mov inc test (bad) outsb mov xchg ficompl rorl or inc cmpb or dec mov test push test out jmp mov inc push pushl movl call lea je call jae push pusha pushf lea call call mov pushf push lods call lea jne shld mov bswap sub shl sub cmc pusha bt lea lea pusha sub bt pushl popl jmp lea jae pushf bt push cmc cmp mov jmp add dec outsl arpl inc insb insb outsl arpl mov push mov or mov jge mov aaa xor pushf clc push mov adc inc xor lcall lcall and xchg test adc arpl addr16 mov aam sub shll inc dec fildl mov cmovle push jbe pop mov xchg aam outsl jbe pop jp mov fsubrs ficom lahf testb dec jne ja std pop mov mov dec lea stc dec shl or add pusha movl clc shld shrd bts mov cmc cmp push call mov or scas ja and lock ljmp test or aam mov jne sub pop loope scas out pop scas fucomi jae,pt jle mov jle test sub enter push push pop mov push mov shrb and and adc push stos mov push xchg test pop push jmp daa dec mov pop mov mov sub imul fimul fnstcw test sbb dec adc xchg xor iret pop clc pop jnp sbb jle clc jle push mov dec mov sbb fwait sbb int add cmp pusha test shll pushf lea jmp lea jb jmp push lea jne pusha mov pushl mov jmp lea call jmp jmp push mov jmp stc cmp pusha movb call jmp jmp sub mov call add mov jg mov lock mov jns in je lds xor sub dec (bad) mul shr mov stos add (bad) jnp cmp and rorl fadd insb jl scas add or data16 dec adc loope sub repz push insl ds inc pop loop adc js shrl cmp mov (bad) das dec and icebp mov test js mov jp push xchg aad mull inc mov xor pop out clc dec out in mov add cmp (bad) pop js jae lea jne ror mov cmp stc cmp cmc add clc pushf jmp outsl (bad) push add add add add add add add add or add sub or add jge add push add add add iret mov lea ja lea call call lea ja mov setns (bad) lock sub shld bt rcr dec add movsbl mov rol xor mov pushf pushf clc movb repnz pushf lea jne lahf bswap lahf movb call pushf pushf lea jae push xor movb jmp adc lea pushf call pusha lea jb push cmc cmpb pusha jmp movl push call cmp pushf movb pushf lea ja xor sub lea lea push sbb sub add pushf sbb dec ror mov add stc ror sub mov cmp jmp lods (bad) xchg sub inc jbe or pop insb adc xchg sti arpl jmp jmp xor movl mov iret scas add add cmp or push fisubr (bad) repz sbb flds (bad) xchg add jnp adc in add (bad) (bad) fadds mov test inc mov inc lret lea inc clc stos or call call jp pop lret ljmp sbb push jnp pop pop jnp dec fwait sar enter jg mov jne loop cmp mov xor sub (bad) ret xchg (bad) nop sbb sub (bad) stc push cld mov jge dec sti (bad) xor mov scas addr16 jbe test mov (bad) xor cmp sbb mov fidivrl ss add movsl in es or icebp push cmp fs into ret jecxz xor jmp inc sbb push (bad) lcall or mov lcall add (bad) mov push pop (bad) xor fs pop in sbb sti sbb test mov call and test push xchg (bad) sbb or pop testb inc mov or out fnclex xlat push in pop stos jmp outsb fwait in or dec lock pop int3 mov sti mov movsl dec (bad) pop cmpb fidiv xchg mov xor mov mov xchg sub sub adc sbb sahf jb jl ret push xchg mov pop pop sub subl xchg int3 cmp addl pop daa into add fcom in data16 xchg (bad) testb mov adc or mov xchg outsl js sub pop negb mov js int pop sbb iret dec hlt pop xchg sbb jae out and bound dec dec cmpsb cmpsl push test xor es popf cwtl daa shrl lea call call dec stc jmp movzwl and btc bswap shr mov pusha pushl add cmp mov push clc test pushf lea je pusha add cmp cmc pusha cmp pushf pushf pushf call jmp mov rol cmc or movsl insl pop popa sbb imul mov or or add outsb shll cmp xorl subl sbb aas pop xor lcall or test jbe addr16 dec aas sbb daa dec ror cmp and jns arpl in mov cmpsl js clc int xchg loopne aas inc or mov inc mov add push imul repnz push iret sub mov push ljmp inc aam scas (bad) lret test sti pop enter inc imul cld lahf inc fsubs mov mov fcoml jnp (bad) clc clc (bad) pop xchg jg jo insl mov dec nop sarb cltd mov in sub data16 aam cmpsl les inc test lods gs das test push addr16 add repnz in jg mov loopne inc mov inc xor out xor lock lea rol jl sbb push pop aam mov scas (bad) adc sub (bad) hlt adc adc mov mul inc inc (bad) jae pushf lea adc lds jae add mov sub pop and clc je and leave sbb repnz pop jle aad imul sub jmp mov pushf add cmc cmc pushf movzwl add adc add btr btr mov pusha add clc pusha pushl mov pushf test pushf push lea je push pushf add bt push jmp pushl popl pushf mov pushl ret iret add (bad) or xor aam xchg shr rclb test push sbb pop mov mov mov xchg int pop xchg dec mov adc xor sub movsl push fs pop iret popa out mov shrb jnp xchg iret and lods xchg (bad) iret lock sti add rorb and (bad) jae push pop inc ja in lods sbb nop push daa add and dec jns inc pop fdivl flds int xor scas push sub stc (bad) mov lock mov in inc imulb inc sub lds es movsb or mov pop mov icebp add ret push (bad) pop bt call lea ja pushf lea call push pusha pushl call call cmp btr stc rcl mov clc pushf pusha pusha and pushf add push lea jmp pushf dec pushl xor clc test stc cmc neg stc cmp movw test xor cmp stc mov jmp movl pushf call push pushf pusha mov push mov mov movb lea call pusha pusha call jmp not bsf mov bt inc add pushf push mov lea jp pushf mov mov lea jmp call call lea jge push mov mov jmp lea jbe mov call call mov push mov pushf jmp mov pushl push movl lea jmp shld mov jmp cmc (bad) hlt cmp bsr mov movsbw xor adc mov jmp push push push pusha mov movb pusha lea jmp pushf pushf add bt call pushf popl call mov push pushf lea jmp mov pushf movw push pushf lea jmp setp jl not pusha mov lahf mov mov pusha pushf mov divl call mov push movw pusha lea jmp push movzbl cwtl lahf mov movb pushf mov push mov push movb lea jmp pushl lea jne xor mov cmc test call pushf popl pushf pushl popl pushl push movb movl lea jmp dec mov stc pushf sub stc pushf clc bt add push lea jp pushf pushf popl push movb pusha pushl popl movl push lea jmp mov mov movb mov mov mov lea jmp lea jne bsr adc rcl rcr xorb not pushf lea lea mov mov lea jmp jmp add btc sbb not sub neg call jmp call jmp pushl popl movb mov mov lea jmp jmp not mov pop movzbw mov mov movsbw mov pusha jmp mov push mov jmp shrd aaa mov bswap not bt mov jmp lahf shr mov lea not ror mov stc add pushf mov movw lea jmp sbb shl clc mov jmp mov movb push lea jmp movw jmp pusha movb pushf mov jmp movw pusha pushl popl push movw lea jmp mov mov lea jmp jmp mov push push mov movb lea jmp push pusha movb mov pusha pushl mov movw jmp push lea je push sub cmp cmp xchg stc mov cmp clc jmp pushl popl push pushf pushl lea jmp xor movzbl bt call mov mov mov movb pushl ret sub xadd clc mov pushf and not shl mov bsf bts mov shr pushl popf pusha mov bswap lahf mov pop push mov pop lea mov lahf pushl lahf mov lea mov seta xchg movzbw mov jmp xor pusha mov pusha push neg pushl dec cmp cmc cmp cmp bswap cmp stc pushf stc xor cmp clc sub clc call stc stc stc shl movl mov pusha mov mov jmp pushf mov jmp pushf pushf popl push movb push pushf pushl popl pushl push mov lea jmp aad shl daa stc mov sub stc cmp rcr mov cmc cmp sub jnp shr pushf pusha pushf movb mov jmp call push mov pushf pusha mov push push pushf lea jb push jmp test movb stc add jmp call pushf movb mov movb pushl lea jmp push or incl jmp mov imul jmp add mov dec repz add mov and mov push or (bad) jmp mov sbb mov icebp hlt mov and mov cmp mov cmp mov mov mov sbb mov jbe mov pop cli mov mov mov imul mov imul mov jbe mov in mov mov mov cmp mov fiaddl mov in mov inc call mov add mov jmp mov in mov orl (bad) cmp mov imul incl cmc mov sti cli mov xchg divb (bad) mov call mov push or ljmp cli mov pop cli mov add mov and mov sti cli mov fwait out mov in mov cmp mov lods out mov orl dec repnz (bad) inc out mov in mov mov out mov xchg divb incl jmp mov add mov mov mov mov mov inc call mov (bad) incl cmc mov sbb mov in mov imul call lcall or (bad) jmp mov jns mov sbb mov sbb hlt mov xchg out mov mov mov sbb push mov (bad) dec cli mov dec repz stos call mov (bad) decl mov fwait out mov sbb mov mov mov sub mov lret lcall add mov in mov jmp mov (bad) or inc divl incl mov sub mov xor mov enter cmp mov xor mov stos call mov and mov xchg (bad) mov lods out mov stos call mov mov mov xor mov sub mov jmp mov jns mov or mov enter xor mov sbb jmp pushl cld mov cmp mov xchg out mov pop cli mov (bad) lcall mov mov icebp mov sbb ljmp pop out mov sbb mov imul jmp add mov jmp mov jbe mov xchg out mov test mov stos call mov add mov icebp hlt mov sbb repz cmp mov cmp mov orl inc out mov xor mov sbb mov pop out mov push jmp mov test mov insl call mov mov icebp mov jbe mov orl lcall mov xchg out mov xchg out mov enter jmp mov add mov pop out mov sti cli mov imul decl (bad) mov sub mov sbb cmc mov pop cli mov mov mov sbb or call inc out mov lret (bad) jmp mov (bad) jmp in mov fwait out mov int3 repnz add mov sbb add (bad) jns mov mov mov mov or incl pop mov sbb mov cmp mov add mov sbb mov jns mov mov mov inc call mov sbb mov (bad) or (bad) sti cli mov sbb cld mov sbb divb lcall mov ret (bad) cmp mov int3 repnz (bad) decl (bad) mov mov mov sub mov stos call mov jmp mov fiaddl mov sbb mov xchg divb jmp in mov xchg divb incl jmp mov ret (bad) call push pushl movb mov jmp mov pushf pushf lea jb push jmp sub push mov mov mov push movb movb lea jmp ror add pusha mov mov call cmp add push mov lea jmp pushl ror clc clc cmc bt sub call pusha pusha mov jmp test btr sub mov add btc bts jmp push mov call sar xor mov clc jmp sub push inc mov mov xor mov push pusha push inc bt ror cmp jmp pushl popl movb push lea jmp mov movb cmp pusha jmp call pushf pusha mov pusha pushf mov movb push movl lea jmp push mov pushf pushl mov mov push pushl mov pushf call lea pushf pushf movl jmp pushl mov pushf mov jmp push push inc jmp pusha mov jmp call notl or shl mov jmp clc add push push mov pushl lea jmp call push call movb jmp call mov mov movb pushf jmp movb jmp jmp add jmp pushf pushl pusha mov jmp rol movzbl push add pusha pushl inc call mov pushf pushf mov pushf pushf mov lea jmp bts ror cmp and mov call mov push mov push mov pushf call mov pusha pushl push pushf lea jmp add jmp sub call aad push ror mov stc clc add cmp sub pusha test movl add cmp neg stc clc pushf call pusha mov jmp mov movb push push pushf lea jmp and pushf cmc test cmp jmp mov call jmp pushf call jmp mov jmp cld call xor bsr aaa shrd mov stc cmp sub call pushf neg ror add add call call mov call pushl lea cpuid stc pushf test sub stc stc mov stc cmpl pushf push mov mov jmp push pusha pushf mov movb mov call jmp dec mov jmp cmc pushf add call mov push mov pusha lea jmp inc push push mov pushf lea jmp pushl popl push push lea jmp mov mov pushf pushf mov mov mov mov push mov push mov pushl pushl movw lea jmp bswap pusha jmp jmp pushf mov mov mov pusha mov call mov pusha pushf movl lea jmp movw push mov push pushf push pushf popl pushf jmp pushf pushf pushf popl jmp jmp mov movw pushf lea jmp inc push test cmp pushf neg pushf clc ror cmp mov clc sub push pushl clc clc mov push sub jmp pushf mov jmp pusha mov movb sub mov cmc shr jmp pushf pusha mov xor rcl stc mov jmp pushf mov push call mov push mov lea jmp lea cld push pusha not mov pushf cld jmp clc pushf and pusha movw mov mov lea je pushf pushf jmp mov mov pushf popl lea js pushf pushf mov pushl popl pusha push pushf push lea jmp pushf pushf mov call clc pushl popl pusha jmp pushf pushf popl pushf jmp push mov pushf mov call pushf mov movb pushl pushf lea jmp mov mov lea jmp pushf push call call jmp xor mov neg add mov cmp test add call mov mov movb pushf jmp or mov dec pusha mov pushf cmp add pushf pushf pushl mov pushl push lea jmp pushf mov call data16 repnz mov pusha call jmp pusha push sub jmp jmp mov pushl pushl jmp call call xchg cld pusha mov mov call pushf mov mov movb pushl push mov lea jmp jmp xadd aaa bswap mov mov shl call bt cmp mov bt add cmc bt shld pushf jmp daa aaa add mov sub sets call movb push pushf divl pushf mov mov mov call movl pushf popl push call push mov jmp push pushf mov call bt clc sub pusha mov push call push push movb pushf mov lea ja pushf mov pushf push jmp pushf sub pushf cwtl test pushf sub push pushf mov pushf lea jmp test add push mov push mov pushl push pushf lea jmp std call rep add data16 (bad) mov shl shr test mov test clc cmc test pushl popf movb movb lea jmp pushf popl lea jo pusha pushl popl pushf push pushf lea jmp pushl popl mov pushl lea jmp sub pushf mov mov pushf pushf pusha push lea jmp bt add pushf jmp movb call xchg mov cmc shld adc mov cmc clc pusha add pushf call bt add mov mov mov lea jmp mov movb lea jmp movb mov pusha pushl mov pushf call mov movb push pushl pusha lea jmp jmp mov xchg push bswap mov pusha not pusha mov jmp mov pusha push push pushf lea jmp bt sub mov mov mov mov mov push pushf lea jmp call pusha pushf mov push pushf call not push pusha pushf mov pusha mov jmp mov pushl pushf pushf lea jmp or call movzbw sbb lea rcl shl sub bt lahf lea cmc sbb and neg data16 (bad) jno or enter add push pushl mov movb push jmp mov mov push pusha pushf lea jmp shrd not mov stc bt stc add pushf mov jmp call cmp test not pushf not stc clc sub bt clc bt push and push mov mov push pushf popl push pushl popl push lea jmp call push push movb movb mov pushl mov push jmp push mov pushf pushl jmp call shr mov movsbw dec bt mov rcr bt mov cmc test pusha stc add pushf shrd call call pushf call ror cmc pushf cmp sub cmc call rol mov call stc call mov movb call push jmp lea movw xchg not pusha mov pushf jmp call sub pusha lea jne clc xor call mov pushf pushf push lea jmp pusha pushl popl pushl movb pushf lea jmp ror xor rcl mov shrd pusha pushf xor push bswap inc not rcr clc ror movsbw dec movsbw bt sub data16 icebp xor movsbl pushf not inc rol add cmc lea movzbl push cmp mov jmp lea jo push pushf mov jmp sub pushf xor stc cbtw movw cwtl cmc push clc cmc add call jmp mov pushf popl call pushf pushl xchg pusha pushf jmp pushl popl pushf lea jmp mov push pop mov mov pushf mov call setno mov jmp call inc pushf clc bt add jmp movw pushl popl movw push lea jmp jno and clc mov mov setbe dec mov test push pushf sub pushl test cmc shr pusha call mov pusha jmp mov pushl popl mov mov mov movb lea jmp call mov mov jmp test cmp call stc shr pushf jmp bswap movsbw xchg lea xchg lea push pop pusha xchg mov repz popl setnp bswap pushl popl not push movl push mov lea dec mov movsbw pushf inc ror call shr aam mov xor stc rcr rcr mov jmp lea cmc bt sub pushf stc clc mov add lea jns pushf clc neg stc ror call jmp add add push mov mov lea jmp call pushf popl jmp push pushf lea jmp stc bsr mov mov pushf pushl call call pushf popl pushf mov pushl popl pusha pushf pushf lea jmp call mov jmp call lea jnp xchg pusha pushf movl movl pusha mov push push mov pushf pushl ret pusha pushf pushl mov pushf pushf pushl lea jmp add pusha pushf mov movl call mov pushf push movb pushl ret pushf lea jmp xor neg movzbl cmc call jmp push lea ja lahf xadd aad mov jle daa shrd lea aaa das clc sub ror lea aas lea shl bswap lea and bsr mov sub lea mov mov bswap push mov pushf popl movsbw push not std mov bswap ja not pusha lea mov pushf call cwtl cmp clc clc cmp sub pushf mov pushf pushf pushl lea jmp call jmp pushf lea pusha mov pushl pushf pushf lea jmp call pushl popl pushf pushf pushf movb lea jmp pushl popl mov lea jmp jmp lea mov and test mov call jmp mov pusha movb mov pushf pushf mov call btc add adc and add push mov jmp rcl pushf pusha mov btc adc not data16 repnz cmp add jmp call mov push pushl mov pusha mov push jmp stc sub pushf movb mov pushf lea jmp movb pushf jmp pushf mov pushf mov push pushf pushl ret push mov pushf jmp stc clc add pushf mov mov push movw movb lea jmp mov jmp pusha mov call pusha mov call pushf push mov mov lea jmp mov call pushf pushl popl mov lea jmp jmp bts mov sub test sar mov pushf call pushf movb mov pushl mov pusha pushf lea jmp pusha mov pushl jmp popl push pushf push push lea jmp jmp rcr bt lea call mov pushl mov mov pushf mov pushf lea jmp pusha mov call pusha call push pusha jmp pusha jmp call jmp mov push call mov pushf pushf popl movb pushf pushf call cld pushf rep shl neg pop mov clc rol mov std pushl popf mov movb mov mov lea jmp (bad) testb aad push pushf sub dec neg sub adc add jmp call pushf popl lea jno push movb pushf pushl popl pushf push push lea jmp inc setb sub call not clc not cmp jmp not aam mov bt jmp pushf mov mov mov pusha pushl lea jmp call mov call cmc cmc pushl popf pushf mov pushf lea jmp shrd mov push add pusha push lea jmp call inc clc shr mov sbb call mov call sub push call pushl movb mov movl pusha mov pushf mov push mov push pushl ret adc mov pushf stc mov call pusha movl mov movb pushf mov lea jmp bt rol lea dec cmp add pusha lea shrd bt sub rcl mov shl bt mov bsf bswap add movzbl mov sub shrd cmp rcr xor rcl pusha rol lea bswap sar not movzbl xor shrd setb (bad) cmc shl xor btr rcr shr rcr movzbl mov pushf lea adc cmp neg mov test pushf bt stc neg jmp movw jmp mov mov pushf movb lea jmp cmc sub test cmc add call movsbw movsbw mov pusha pusha jmp cmp mov cmp add stc clc stc movl mov movb sub call cmc movb rol push call pop movsbw mov jmp mov mov movw pushf popl jmp push push mov pushf mov jmp stc clc ror stc sub jae sub test pusha stc xor mov sub jmp mov xchg movsbw movzbw call stc movzbl bswap rcr shl bsf sub setg movsbw mov inc neg shld sete clc neg mov cmc push ror bsr sub rol rcl mov stc pushf pusha cmc add pushf call pusha pusha add call pushl pushf pushl popl movl mov mov lea jmp mov call pushf test pusha movw neg call rep btc mov cmc add mov movb pushl popf pushf mov pushf pushf lea jmp test sub jnp add push jmp call bsf bswap lea movzbl dec clc add shl bts sar add lea test not mov or neg ror and add pushf push add dec mov call shr mov sar dec adc rcl mov push cmp mov pushf sub pushf bt shl call jle cmc rol mov stc dec bsf bswap mov jmp bt xor movl jmp call xadd sar shld mov pushf (bad) icebp mov clc sub cmp test pusha shl pusha mov call stc movb add jmp mov push call pusha call jmp mov mov pushf mov pusha mov pushf pushf jmp mov push mov push movb lea jmp pushf mov jmp pushf call pushf mov pushl mov jmp mov mov lea jmp stc pushf shr call pushf jmp cmc stc sub stc stc xor call jmp pusha pushf pushf mov push mov movl lea jmp mov jmp mov call call pushf call bt pusha sub cmp cmp pushf cmc and jmp mov mov pusha mov push mov mov pushf mov call movl jmp mov pushf jmp mov call jmp pushf mov jmp movsbw xor mov jmp pushf jmp pusha movzbl mov movsbl movsbw pushf pushf xchg lea call not inc bt stc rol not not mov pusha inc and ror add call jmp shr add btc mov cmc push sub movb call pushl pushf mov push pushf push movb lea jmp btc lahf jp xor mov shr shld dec clc mov pusha add jmp jmp inc rdtsc stc test test sub pusha mov pusha mov mov mov lea jmp mov mov call mov mov push mov jmp mov call add call mov pushl mov jmp mov jmp mov pushf movw mov push mov jmp pushf mov mov call mov jmp jmp pushl mov pushf lea jmp mov movzbw mov jmp movb mov call mov pushf push movw lea jmp push mov call mov push pushf mov pushf mov movl lea jmp mov pushf popl jmp mov pushf pushl pushf pushf popl jmp add add add inc inc add add roll add add loopne add adc add add add jmp 