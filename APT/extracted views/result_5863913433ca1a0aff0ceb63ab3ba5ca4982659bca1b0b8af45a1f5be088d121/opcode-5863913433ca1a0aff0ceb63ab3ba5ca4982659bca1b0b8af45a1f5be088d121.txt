pusha jl add add add add add add add or add add add dec add js add add xor add add adc add jo add add or push outsl add add jb add jo lea add add push jb add jo or push lea add add add add add jo or jb add jo or add add or jb add jo add add jb add jo lea add add add add add add add adc lahf add jo adc add adc add je add add add adc pop add add adc sub add or add add add push or sysret or add push mov or push push outsl add add jb add jo lea add add add add add adc pop mov add add adc inc add jo adc add adc add or add add add jb add jo lea add add push adc push add mov add add adc adc push jb add jo adc pop jb add jo adc adc add add sub adc pop add add add add add add add or push outsl add add jb add jo lea add add push add or lea add add add jo or add add or jb add jo add add jb add jo lea add add add add add add add adc lahf add jo adc add adc add sub xor add add adc sub add or push push outsl add add jb add jo lea add add push add or lea add add add jo or add add or jb add jo add add jb add jo lea add add add add add mov add add adc lahf add jo adc add adc add adc add sub sbb or and add add add pop or add movups push jb add jo adc pop jb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb jo adc push jb add jo adc pop or add jo adc pop or add jo adc pop or add jo adc pop or jno add adc sub add push pop lea add add adc adc push mov add add add push or pop lea add add adc adc jb add jo adc pop jb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb jo adc push jb add jo adc pop or add jo adc pop or add jo adc pop or add jo adc pop or test add adc pop or jo adc pop push jb add jo adc pop (bad) xchg add jo adc pop adc add jo adc pop adc add jo adc pop adc add jo adc pop adc add jo adc pop adc pop add jo adc pop adc jo adc pop push jb add jo adc sub add push adc lea add add adc adc jb add jo adc pop jb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sub add push pop lea add add adc adc sbb adc sub add push es or adc adc jb add jo adc jb add jo adc jb add jo adc jb add jo adc jb add jo adc jb add jo adc jb add jo adc jo adc jb add jo adc or add jo adc or add jo adc push add push rolb add add add lea add add adc popf add jo adc add adc add adc add adc add adc add adc add adc add adc push sub add push or and adc adc push jb add jo adc pop jb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb jo adc push jb add jo adc pop or add jo adc pop or add jo adc pop or add jo adc pop or jge add adc pop or jo adc pop push jb add jo adc pop (bad) push add jo adc pop adc add jo adc pop adc add jo adc pop adc add jo adc pop adc add jo adc pop adc test adc pop adc jo adc pop push jb add jo adc pop pop jb add jo adc pop sbb add jo adc pop sbb add jo adc pop sbb add jo adc pop sbb add jo adc pop sbb addl push pop sbb jo adc pop push jb add jo adc pop pop jb add jo adc sub add push sbb adc adc push pop and adc adc push jb add jo adc pop jb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb leave add jo adc sbb jo adc push jb add jo adc pop or add jo adc pop or add jo adc pop or add jo adc pop or mov adc pop or jo adc pop push jb add jo adc pop (bad) mov add adc pop adc add jo adc pop adc add jo adc pop adc add jo adc pop adc add jo adc pop adc fldl add adc pop adc jo adc pop push jb add jo adc pop pop jb add jo adc pop sbb add jo adc pop sbb add jo adc pop sbb add jo adc pop sbb add jo adc pop sbb cltd add jo adc pop sbb jo adc pop push jb add jo adc pop pop jb add jo adc pop and add jo adc pop and add jo adc pop and add jo adc sub add push mov mov add push or and adc adc push jb add jo adc pop jb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb jo adc push jb add jo adc pop or add jo adc pop or add jo adc pop or add jo adc pop or jge add adc pop or jo adc pop push jb add jo adc pop (bad) push add jo adc pop adc add jo adc pop adc add jo adc pop adc add jo adc pop adc add jo adc pop adc test adc pop adc jo adc pop push jb add jo adc pop pop jb add jo adc pop sbb add jo adc pop sbb add jo adc pop sbb add jo adc pop sbb add jo adc pop sbb addl sbb sbb jo adc pop push jb add jo adc pop pop jb add jo adc sub add push or or adc adc push jb add jo adc pop jb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb pop add jo adc sbb jo adc push jb add jo adc sub add push pop lea add add sbb sbb pop and adc sbb jb add jo adc jb add jo adc jb add jo adc jb add jo adc jb add jo adc jb add jo adc jb add jo adc jo adc jb add jo adc or add jo adc or add jo adc or add jo adc or or add adc or jo adc push jb add jo adc (bad) cltd add jo adc adc add jo adc adc add jo adc adc add jo adc adc add jo adc adc adc add adc adc jo adc push jb add jo adc pop jb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb pop add jo adc sbb jo adc push jb add jo adc pop jb add jo adc and add jo adc and add jo adc and add jo adc push add push mov add push or add add sbb dec add jo adc add adc add adc add adc add adc add adc add adc add adc add adc add jo adc add jo adc add jo adc add jo adc add jo adc add jo adc add jo adc add jo adc add jo adc add jo adc add jo adc add jo adc add jo adc add jo adc add jo adc add jo adc add jo adc add jo adc add jo adc add jo adc add jo adc add jo adc add jo adc push or or adc adc push jb add jo adc pop jb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb pop add jo adc sbb jo adc push jb add jo adc sub add push pop lea add add pop adc push pop sbb add and and jb add jo adc pop jb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb adc adc sbb jo adc push jb add jo adc pop or add jo adc pop or add jo adc pop or add jo adc pop or roll add adc pop or jo adc pop push jb add jo adc pop (bad) sbb adc pop adc add jo adc pop adc add jo adc pop adc add jo adc pop adc add jo adc pop adc push add jo adc pop adc jo adc pop push jb add jo adc pop pop jb add jo adc pop sbb add jo adc pop sbb add jo adc pop sbb add jo adc pop sbb add jo adc pop sbb mov add adc sub add push mov add push adc and adc adc push jb add jo adc pop jb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb jo adc push jb add jo adc pop or add jo adc pop or add jo adc pop or add jo adc pop or jge add adc pop or jo adc pop push jb add jo adc pop (bad) push add jo adc pop adc add jo adc pop adc add jo adc pop adc add jo adc pop adc add jo adc pop adc test adc pop adc jo adc pop push jb add jo adc pop pop jb add jo adc pop sbb add jo adc pop sbb add jo adc pop sbb add jo adc pop sbb add jo adc pop sbb addl and sbb jo adc pop push jb add jo adc pop pop jb add jo adc sub add push or or adc adc push jb add jo adc pop jb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb pop add jo adc sbb jo adc push jb add jo adc sub add push pop lea add add and and pop push lea add add and and jb add jo adc jb add jo adc jb add jo adc jb add jo adc jb add jo adc jb add jo adc jb add jo adc jo adc jb add jo adc or add jo adc or add jo adc or add jo adc or sub add adc or jo adc push jb add jo adc (bad) lea add adc adc add jo adc adc add jo adc adc add jo adc adc add jo adc adc mov adc adc jo adc push jb add jo adc pop jb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb push add jo adc sbb jo adc push add push mov add push adc jge adc dec add jo adc add adc add adc add adc add adc add adc add adc add adc add adc add jo adc add jo adc add jo adc add jo adc add jo adc add jo adc push or lea add add adc push jb add jo adc pop jb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb lods add jo adc sbb jo adc sub add push pop lea add add daa adc push adc mov add add add push adc pop and adc adc push jb add jo adc pop jb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb jo adc push jb add jo adc pop or add jo adc pop or add jo adc pop or add jo adc pop or jge add adc pop or jo adc pop push jb add jo adc pop (bad) push add jo adc pop adc add jo adc pop adc add jo adc pop adc add jo adc pop adc add jo adc pop adc test adc pop adc jo adc pop push jb add jo adc pop pop jb add jo adc pop sbb add jo adc pop sbb add jo adc pop sbb add jo adc pop sbb add jo adc pop sbb addl sub sbb jo adc pop push jb add jo adc pop pop jb add jo adc sub add push or or adc adc push jb add jo adc pop jb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb pop add jo adc sbb jo adc push jb add jo adc sub add push pop lea add add sub sub adc mov add push adc pop or add sub sub jb add jo adc pop jb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb jo adc push jb add jo adc pop or add jo adc pop or add jo adc pop or add jo adc pop or jno add adc sub add push push sbb adc sub jb add jo adc jb add jo adc jb add jo adc jb add jo adc jb add jo adc push add push push lea add add add add adc pop or add sub dec add jo adc add adc add adc add adc add adc add adc add adc add adc add adc add jo adc add jo adc add jo adc add jo adc push pop lea add add adc push adc sub add push adc sub add push pop mov add add add push or or add add adc adc push jb add jo adc pop jb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb jo adc push jb add jo adc pop or add jo adc pop or add jo adc pop or add jo adc sub add push adc lea add add xor xor jb add jo adc pop jb add jo adc sbb add jo adc sbb add jo adc sub add push sbb adc adc push adc mov mov add add mov mov add add or or add mov add add add push es or add add adc adc push jb add jo adc pop jb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb jo adc push jb add jo adc pop or add jo adc pop or add jo adc pop or add jo adc sub add push adc lea add add xor xor jb add jo adc pop jb add jo adc sbb add jo adc sbb add jo adc sub add push sbb adc xor adc mov mov add add mov sub add push adc sub add push pop mov add add or or add mov add add add push adc pop pop adc (bad) fiadd pop sub add add adc dec add jo adc add adc add adc add adc add adc add adc add adc add adc add adc add jo adc add jo adc add jo adc add jo adc add jo adc add jo adc add jo adc add jo adc add jo adc add jo adc add jo adc add jo adc add jo adc add jo adc add jo adc add jo adc add jo adc add jo adc add jo adc add jo adc add jo adc add jo adc add jo adc add jo adc add jo adc add jo adc add jo adc add jo adc add jo adc add jo adc add jo adc add jo adc add jo adc add jo adc add jo adc push push lea add add pop add push adc pop sub add add adc adc push jb add jo adc pop jb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb jo adc push jb add jo adc pop or add jo adc pop or add jo adc pop or add jo adc pop or mov add adc pop or jo adc pop push jb add jo adc pop (bad) add jo adc pop adc add jo adc pop adc add jo adc pop adc add jo adc pop adc add jo adc pop adc pop add jo adc pop adc jo adc pop push jb add jo adc pop pop jb add jo adc pop sbb add jo adc pop sbb add jo adc pop sbb add jo adc pop sbb add jo adc pop sbb add jo adc pop sbb jo adc pop push jb add jo adc pop pop jb add jo adc pop and add jo adc pop and add jo adc pop and add jo adc pop and add jo adc pop and xchg add jo adc pop and jo adc pop es add jo adc pop daa jb add jo adc pop sub add jo adc pop sub add jo adc pop sub add jo adc pop sub add jo adc sub add push adc sbb adc adc push jb add jo adc pop jb add jo adc sbb add jo adc sub add push adc add add pop sub add add adc adc push jb add jo adc pop jb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb jo adc push jb add jo adc pop or add jo adc pop or add jo adc pop or add jo adc pop or mov add adc pop or jo adc pop push jb add jo adc pop (bad) add jo adc pop adc add jo adc pop adc add jo adc pop adc add jo adc pop adc add jo adc pop adc pop add jo adc pop adc jo adc pop push jb add jo adc pop pop jb add jo adc pop sbb add jo adc pop sbb add jo adc pop sbb add jo adc pop sbb add jo adc pop sbb add jo adc pop sbb jo adc pop push jb add jo adc pop pop jb add jo adc pop and add jo adc pop and add jo adc pop and add jo adc pop and add jo adc pop and xchg add jo adc pop and jo adc pop es add jo adc pop daa jb add jo adc pop sub add jo adc pop sub add jo adc pop sub add jo adc pop sub add jo adc sub add push adc sbb adc adc push jb add jo adc pop jb add jo adc sub add push adc push pop sub add add adc adc push jb add jo adc pop jb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb jo adc push jb add jo adc pop or add jo adc pop or add jo adc pop or add jo adc pop or mov add adc pop or jo adc pop push jb add jo adc pop (bad) add jo adc pop adc add jo adc pop adc add jo adc pop adc add jo adc pop adc add jo adc pop adc pop add jo adc pop adc jo adc pop push jb add jo adc pop pop jb add jo adc pop sbb add jo adc pop sbb add jo adc pop sbb add jo adc pop sbb add jo adc pop sbb add jo adc pop sbb jo adc pop push jb add jo adc pop pop jb add jo adc pop and add jo adc pop and add jo adc pop and add jo adc pop and add jo adc pop and xchg add jo adc pop and jo adc pop es add jo adc pop daa jb add jo adc pop sub add jo adc pop sub add jo adc pop sub add jo adc pop sub add jo adc sub add push adc pop jge adc adc push jb add jo adc pop jb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb aad add adc sbb jo adc push jb add jo adc pop or add jo adc pop or add jo adc pop or add jo adc pop or pop add jo adc pop or jo adc pop push jb add jo adc sub add push push lea add add add add adc pop sub add cmp cmp jb add jo adc jb add jo adc jb add jo adc jb add jo adc jb add jo adc jb add jo adc jb add jo adc jo adc jb add jo adc or add jo adc or add jo adc or add jo adc or mov add adc or jo adc push jb add jo adc (bad) add jo adc adc add jo adc adc add jo adc adc add jo adc adc add jo adc adc pop add jo adc adc jo adc push jb add jo adc pop jb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb jo adc push jb add jo adc pop jb add jo adc and add jo adc and add jo adc and add jo adc and add jo adc and jne add adc and jo adc es add jo adc daa jb add jo adc sub add jo adc sub add jo adc sub add jo adc sub add jo adc sub popa add jo adc push add push adc pop adc adc adc push jb add jo adc pop jb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb test adc sbb jo adc push jb add jo adc pop or add jo adc pop or add jo adc pop or add jo adc pop or addl nopl jo adc pop push jb add jo adc pop (bad) xchg add jo adc pop adc add jo adc pop adc add jo adc pop adc add jo adc sub add push sbb adc adc push push mov mov add add sub add push mov add add add push or sbb adc adc push jb add jo adc pop jb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb jo adc push jb add jo adc pop or add jo adc pop or add jo adc pop or add jo adc pop or mov add adc pop or jo adc pop push jb add jo adc pop (bad) test adc pop adc add jo adc pop adc add jo adc pop adc add jo adc pop adc add jo adc pop adc push add jo adc pop adc jo adc pop push jb add jo adc pop pop jb add jo adc pop sbb add jo adc pop sbb add jo adc sub add push adc lea add add movups push jb add jo adc pop jb add jo adc sbb add jo adc sbb add jo adc sub add push pop lea add add adc adc push mov add push adc sbb adc adc push jb add jo adc pop jb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb jo adc push jb add jo adc pop or add jo adc pop or add jo adc pop or add jo adc pop or mov add adc pop or jo adc pop push jb add jo adc pop (bad) test adc pop adc add jo adc pop adc add jo adc pop adc add jo adc pop adc add jo adc pop adc push add jo adc pop adc jo adc pop push jb add jo adc pop pop jb add jo adc pop sbb add jo adc pop sbb add jo adc sub add push adc or adc adc push jb add jo adc pop jb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb test adc sbb jo adc push jb add jo adc pop or add jo adc sub add push sub add push adc add add movups push jb add jo adc pop jb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb jo adc push jb add jo adc pop or add jo adc pop or add jo adc pop or add jo adc pop or mov add adc pop or jo adc pop push jb add jo adc pop (bad) test adc pop adc add jo adc pop adc add jo adc pop adc add jo adc pop adc add jo adc pop adc pop add jo adc pop adc jo adc pop push jb add jo adc pop pop jb add jo adc pop sbb add jo adc pop sbb add jo adc pop sbb add jo adc pop sbb add jo adc sub add push adc add adc adc push jb add jo adc pop jb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sbb add jo adc sub add push sbb adc adc push push mov add add lea add add adc adc add adc add add ficom adc adc outsl push add or pop add or fiadd sub add add add test add push push add (bad) adc add add add add add add add add add and add and add add add add add xor add add add add jb add jo lea add add pop add push or or add jo jb add jo lea add add pop add add add or pop pop or add jo jb add jo lea add add add add or add push fidivr cmp add jb add jo lea add add add add je add add add add add add adc dec pop add add add adc or leave add add lods add jo add add or push outsl add add jb add jo lea add add push jb add jo or sbb or add jo add add mov add jo add add mov lea add add add add jb add jo adc jb add jo adc sub add or pop jb add jo add add jb add jo lea add add add lea add add push adc push add add add mov mov add add adc adc push jb add jo adc pop jb add jo adc adc add add sub add pop jb add jo jb add jo add add movsl pop add add add add or add sub add mov xchg add add jae gs cs gs jne arpl cs gs jne arpl gs fs and arpl insb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp push jns je insl cs gs jne arpl cs jne je insl gs gs jne arpl gs add add add add jae gs cs je imul insl jae outsl jb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp push movb test mov test push xchg push or push lcall or xor add lods idivl fistl cmp fucomi popa loope int3 cmpsb jmp and push jle add ljmp mov and pop pop jne mov xchg das inc xchg inc and push push mov out imul outsb jns inc jno lahf pushf ja pushl jnp jb movsb pop add sbb add dec add add add add add push or add pop add push or add add add add add insl add add cmp add add add add add sbb add adc add roll add fldl add pop add add add add add imul add add sub add mov add xchg add add add aad add icebp push add cltd or add xor dec add push add xor inc add xor inc add push add data16 push add jns dec add push add outsb add xor add add add add push add add pop add add add inc add js push add xor imul add push add add add jb inc add data16 add adc xor push add xor push add data16 add xor xor push add dec add insl add jns push add cmp jns cmp dec add cmp arpl bound xor ja push outsb add push add cmp sbb add xor insb add inc add jp xor dec add xor xor add insl add dec add xor pop add das pop add dec add dec add add push add push add add inc add dec add add popa add add add insl add popa add jns insl add imul add add dec add inc (bad) add cs push add push add jno outsl add xor jne imul add insl add jns jo imul jns add add inc aaa add xor add data16 dec add pop add xor jo push add outsl add inc add popa add jo jp imul push add add push add push add add inc cmp cmp imul add arpl dec add aaa add push add dec add js jo jo je je dec add ja jo inc add dec add add outsl add push add add add inc add aaa add imul dec add dec add outsl add bound xor add add jae bound data16 inc add jns dec add arpl add dec inc add insb add dec add jne cmp inc add add dec add outsl add dec add dec add xor jne insb add aaa add data16 popa add add bound outsb add add inc add dec add push add inc add jno outsb add jno xor inc add inc add popa add add dec add add popf and add inc add xor inc add jno pop add push add add add push add pop add dec add add push add jb mov add xor add push add dec add inc add js push add add push add je inc add inc add ja outsl add add (bad) jno add cmp add add inc add dec add add add jo insb add jbe push add inc add push add add inc add pop add xor inc add add fcompl add dec add xor pop add add jne imul xor push add add add add add jb jbe add outsl add mov add dec add add add je push add add add add xor ja jp add push add add add jns dec add add pop add dec add cmp jb pop add add outsb add out add dec add inc add add dec add dec add jb cmp add dec add jb bound add jne xor sbb add dec dec add inc add add add dec add add xor arpl ja add inc add push add dec add add je add add xor outsb add arpl popa add dec add xor add dec add dec add add dec add add xor dec add xor inc add inc add dec add xor xor add jae inc add jo inc pop add dec dec add dec add jno xor add inc add data16 imul push add cmp jne push add aaa add outsb add push add add jne dec add xor dec add push add pop addl ds add xor add add add jo jne xor jo push add je dec add add jo jp pop add xor arpl pop add inc add xor stos add ss add data16 inc add xor add add add dec add js add insl add inc add arpl inc add push add add add add push pop add pop add dec add je popa add push add add push add popa add outsb add js cltd clc add dec pop add add add jb outsl add push add push add add add add imul add add add jae jno popa add push add add add xor add jne xor push add push add popa add add add jno add cmp add inc add push push add pop add push add inc add inc imul add outsb add inc add dec add add dec add dec add insl add data16 push add arpl inc add jp xor xor add push add fsubrs add add jo inc add inc add inc add xor jns push add insb add dec add push add add pop add jp add insl add inc add popa add add xchg add xor add add add add jp xor cmp add jno dec add add add add insl add add add pop add arpl push add push add add add add je push add xor inc add dec add add dec add imul add jns jns push add jecxz add add pop add inc add inc add xor jno jp dec add push add push add js xor push add dec add jp jns jb sub add xor push add jno imul add add cmp js pop add add dec add insb add add push xor add jae cmp inc add add push add inc add xor dec add xor add add bound push add add add dec add add add outsb add add cmp jae jns inc add inc add cmp ja push add push add inc add outsb add jae xor inc add data16 push add insb add pop add imul xor js inc add push add insb add insl add add xor jbe push add ja jns jns inc add inc add ja xor inc add add imul add bound outsl add jno add inc add cmp imul jno push add add push add dec add add pop add xchg cmpsb add cmp add bound dec add add push add add xor dec add push add add add data16 bound add inc add xor add add jne stos int add add jno bound push add xor add data16 insl add dec add insb add push add imul add add pop add xor xor inc add ja dec add xor add adc add in mov push push sbb sub out adc adc imul push clc and popa jge lock dec outsl pop sahf int3 xchg repnz aaa inc fptan xlat popf cmpsl xchg test cwtl dec (bad) pop scas out movsl jge icebp xchg popa das (bad) and movntq out cmc sub push cld es xchg inc add dec dec and xor in jb jns scas addr16 jg jae mov cmp outsl jp jae lahf xchg pop aaa xlat jmp clc insb std pop in sbb push (bad) out jne cmp ja sub call sbb jno (bad) test imul add fnclex test push (bad) jbe lods inc cmc xchg popf lcall out lods dec adc xchg jns dec xchg lods sub sbb fstl fnstsw xor sarl test pop (bad) test test cmp mov jmp adc add mov mov addr16 adcl daa dec lret mov mov push jecxz lret xchg (bad) fxam jne iret mov loope xor (bad) (bad) add into mov mov xchg fs into xor ljmp xchg orl cmpsl inc leave inc cmp outsb mov lods pop mov aad das or out dec sub jno js cmpsb dec insl fs inc mov mov push inc inc inc cmc adc sahf cmpsb mov or dec fcoms mov pop push cmpsl cmp movsl and icebp mov add adc mov in push loop add inc lods inc in push mov cmc daa mov pushf mov scas pop es cmp mov cmp or inc sub and mov dec pusha xor cmp jecxz loop pop insl insb adc imul aas into pushf or xor inc push and sub int3 push je pop mov arpl jecxz test jmp cwtl mov add push cli cld xor mov enter mov pop xchg xchg pop daa or les inc mov sub pop fisubr sub add jmp push fbstp incb sar mov xchg enter rclb pop pop mov adc lock mov popf or aad mov fistl scas test xlat lret ffreep fdivl mov call jge cli idivb je fwait repz and arpl stc (bad) dec or faddl repz out cmovns or divl push lahf mov fcoml insl jmp lods inc sti lahf lods das addr16 mov mov dec gs push into or fadd loop loope stos push push in add popf outsl subl jbe mov mov push xor (bad) loope out pop mul lea pop or xor mov test mov xor mov mov add xchg dec rcll push (bad) mov ja pop jl xor mov mov xlat addps xchg add imul jnp int3 int pop sub out sahf jl (bad) insl (bad) (bad) or popf jge pop add and adc idivl ljmp call fdivs mov sub jb inc addr16 mov (bad) xor sbb pop (bad) lds insb or out or les in (bad) (bad) and adcl popf addr16 mov inc mov mov movsl imul add cwtl aas pop shlb sti or inc mov in aam add mov in movl lea fdivl or and clc dec dec ss (bad) mov mov out jg cli lret iret sahf popa jl inc negb push insl xlat lods xorb adc mov adc movsb push mov popa push pop repnz fisubl cmpsl or inc sub ljmp cmova mov subl jge imul sub (bad) dec sub and push (bad) sar adc jns popf or mov xchg dec cld cmpsl inc cmpsl push cli pop sbb gs bound into or repz push xchg cmc xor gs xor int3 pop pop imul xor inc loope jae into cli cld lods (bad) out inc int adc sahf sub pop xor scas test daa cmp xchg jo cli cmp xor lods xor je popa cltd lds fucomip (bad) (bad) lock pop lods pop fwait les aas sahf mov pop push push sti cmpsb leave or lret inc mov fucomp push sub add stc repnz aad inc or out (bad) mull hlt cmp repnz and push or imul add dec lahf xor notb jbe xor xor push movsb mov push sbb mov (bad) imul xchg int fiadd jge scas cs repz test adcl xor loopne outsb jnp les mov xchg insl in mov pop dec int lods push dec test push xlat sub mov (bad) (bad) jne sbb cwtl mov cmc add or sub cmp mov sub push jp add mov sbb cmp xchg ss dec push sti dec lret pop sub and rorl pushf push loope xchg leave sbb rclb fcomip inc test mov cmp leave popa push popa pop sub fdivrl push add les outsb add out xor (bad) pop scas and mov dec push pop jl movsb das inc push test iret jae out mov daa sarb inc add pop insl xchg inc aad imul inc xor lock or cmc jp or cmp lock negl adc xor rolb pop xchg jmp sub jne sarl sub lahf inc lret mov cmp punpckhdq aad xor mov ror cmpsl enter mov inc push xor lods fidivrl popa sbb pop cmp (bad) incl es icebp add test or xor cwtl jb sub xor mov inc repnz mov jl inc dec mov mov push mov sbb clc sti mov push push pop mov add insb or shrl dec clc adc imul clc out loopne inc sbb hlt inc xor jle or sbb (bad) inc adc andl popa xlat insb enterw cmpsb addr16 repz pusha xor movsb cmp sbb vcmpps xlat dec inc pop add dec lret ret out call leave inc cmp ret lods mov stos (bad) ljmp arpl sub aaa ret push arpl dec sub xchg add xchg sub jno out out pop fmul outsl and mov movsl std repz addl jmp dec cli cmp ret or sahf cmp sub jmp sbb and push xchg mov xchg mov cmpsb inc fwait dec call mov xchg sub popl fimul jle jl and ret pop nop sub popf pop and in idivb sub mov and cmc test rcrb outsl jne lods jnp mov add mov inc mov jns xchg lods cmp aaa dec les mov fsubr and daa and jg adc mov test stc sub xor lahf mov sub sti cld mov inc inc push push out imul and sbbb insb sub and lods adc movsl or push push decl outsb adc jnp pop sbb cwtl dec and sub mov pop mov push cwtl test imul sahf add jbe dec pop jno in cmp jno xor (bad) flds subb mov pop mov test ret repnz std loopne pop xchg (bad) sbb xchg adc fwait xchg in sub cmp mov mov sbb cmc sbb out cmc loop jmp mov (bad) dec dec imul aas mov (bad) xchg sub pop push xor sub sub adc add ljmp repz lock and iret out xchg push jge sbb dec dec add pop aam pop lahf js xchg nop inc mov sahf repz and cmp (bad) inc fs int3 test subl arpl jne (bad) imul leave int3 in mov sub shrl xchg mov sbbl cld lock out arpl adc clts or fmuls mov jp cmp es test push inc dec int3 stc lret out pop sahf mov std and testb aas jb lods jecxz movsb clc mov mov fcomp imul sbb rorl jb movsl scas test xchg loopne mov mov mov testb pop ret mov out xor adc (bad) jno inc jns jb inc inc sbb pop mov femms testl sbb je sbb xchg add loop cmp mov das dec iret ja out push xchg sbb xorb outsb cmp add sub xchg fwait sub push adc inc je fs jmp (bad) cltd cmp outsl push arpl xchg pop xor js fcoms push xchg fisubrl sarw sub cld cld (bad) not (bad) xor pop stos test data16 ljmp jne sbb xlat dec lods movsb jl mov (bad) pusha ret inc das dec push mov lods in repnz pop insl f2xm1 out mov xor in inc add sub cmpsb cmp inc mov sbb iret imul dec sbb mov xor mov int3 xchg lods push outsl cltd push fs mov mov mov aas fs mov push dec mov fcomp mov jecxz out fbstp mov jl dec call mov mov push (bad) cmpsl clc in xchg xor outsl sbb fwait pop push addl dec scas mov push cmp pop scas pop (bad) mov add mov xlat sbb add lea mov lahf pop or cmp leave fist fstpl repnz rol sbb sub inc shll inc sbbl jle rorl div (bad) stc fcomps push enter add ss push push insb push pop push push ret scas fbstp dec out iret sub adc sbb loop imul call xchg xor add cmp inc cmp pop cmp fldln2 ficoml outsb fistpll neg adc add pop jecxz pop adc les sbb neg iret std ljmp ljmp out jp lret mov stos adc pop push cmp mov (bad) lahf dec repnz dec ljmp inc pop insl out adc shrb mov mov mov in loopne and incl mov cmp or lds add jnp fildl cli mov pusha iret inc xor push adc push push inc dec insb push or addr16 fiadd enter ss adc out cmp adc jecxz xchg cmp ret mov or lcall pop or or mov mov push ds inc int xlat pop cli push (bad) mov out ja xchg leave pop out jno hlt pop das loope sbb gs jle into add and mov pop cmpsl arpl mov paddw sub js xchg insl mov inc out xchg repnz adc or pop call adc arpl ss imul out push aam ret or (bad) icebp lret outsl xchg and pop sbb jno wbinvd mov (bad) lret cmp push scas sub (bad) mov push fsts inc or add test test (bad) int (bad) pop aaa adc cld in fidiv or stos pop pusha shlb mov add loope out push sub mov pop movb push or bnd or mov cmp cmpsl insl test push pop sbb (bad) (bad) jmp add mov pop loopnew nop dec cmp cld addr16 fwait jecxz add mov jle add pop add ja stos movsb (bad) add xchg pop sub and dec cmp add xor mov jnp fwait jg js cwtl mov fiadd inc mov rcr or popf mov lock es scas popf nop cmpsb or hlt cmc mov cs ret jp fmul sbb imul push scas mov push adc xchg inc ficompl cmp dec jb mov or sub xor mov lea std dec cmc sub das out pop jg fidivl or cwtl mov add fmull mul adc dec dec mov (bad) jae adc sub fisub mov add jp push ret and dec ds jbe lea movsb pop arpl arpl xchg jmp and jbe mov test cmp mov sub fsubl (bad) mov jnp sbb or jmp sub add and les mov gs pop jg lods mov sub notb dec fsubrs adc outsl (bad) into xchg push adc mov push fs xchg stos xchg jnp sub add jno aaa xor lods push mov or mov sub (bad) test sub xchg shrb das push movsb ds rcrl sbb sti lods and xchg mov comiss ljmp lea lcall pop popa rcl pop iret mov sub or and sbb inc sub jns jns dec (bad) pushf in cmpsl mov jp sbb mov aad popf jns idivl push add out adc sub mov inc add movsb inc test mov or mov mov lods into aam mov xor call cmp mov lcall xchg jno push clc xor pop test test sbb das (bad) cs push pop xor mov imul addr16 repnz mov out lods arpl (bad) gs jle in fldt ffreep stc stc scas mov in orl jne cmp push xchg pcmpgtb out inc sbb add mov daa data16 sbb mov (bad) mov (bad) jp lods mov cmp stc adc xchg lea jmp and ss ss mov jge scas insb outsb inc vmwrite jle push jae jp daa push dec iret call sarl dec (bad) mov stos push dec mov pop (bad) repz insb loopne imul les jbe pusha cmp xchg push mov rcr icebp lods mov mov jo jecxz pushf jno mov out aad cmp push movsb sub xchg push lock das jne push out ljmp loopne inc mov out dec imul loope call push inc cltd xchg cmp mov into push xchg dec jae or fimull out jp dec (bad) jp cmp mov push icebp jle jae and test in addl mov xchg test (bad) ljmp xchg cmp mov fsubl xor cmp add fcmovu pop sub es mov pop mov mov adc aad pop or push lea pop cltd (bad) adc addl in jno sub movsb adc les (bad) jbe es out int3 mov fwait stos xchg (bad) fsubl ret mov pop sub jmp ret sti push test mov sub adc enter mov cltd sbb fucomp repnz out dec nop add push movsl mov dec add (bad) js (bad) lahf sub inc scas adc (bad) (bad) in push mov xor jp lds xlat inc mov imul popl push scas mov sti lahf xor fldt dec (bad) push xchg int3 jo movd mov mov xchg sbb and mov add push stos insb lds lods popf jo dec dec mov outsb or pop xchg or sub (bad) out cwtl adc mov aaa jo push or lods int in dec sbb push jbe paddsb rcrb in in call fsts aas daa (bad) enter jle stos xchg jo ret jns sti cmp xor gs daa nop cmp mov mov loop das jno arpl adc jnp imul jge idivb js ja scas push into es sbbl fcmovne pop repz pop negb xor pop jbe stc adc ret jae outsl mov sbb mov push fildll ja cmp dec dec orl out into pop push sbb (bad) lds sub jmp outsb mov xor xchg fwait pop mov jno hlt sbb pop std popa loope xor cmpsl (bad) out pop xchg xlat or fstp and (bad) sub cmp sub in les sahf mov rorl rorb repz cmp inc push daa int3 mov enter lahf icebp push lret addl pop sub cmp sbb and std mov jae out mov leave ja push sub scas add fmull jo pop xor fwait pop arpl clc movsl repnz repz inc sbb je repz jno or sub pop cltd jg repnz pusha insb sbb sbb or xchg inc jle in bound cltd je repnz gs sbb and test int3 xchg pop into stc (bad) xchg ljmp fdiv aaa xchg fs stc jo mov jp movsb mov adc ret shld out outsl nop lea vmwrite sub inc loopne adc jg cs sbb pop add loop cmp scas fimull aaa cmp in cltd mov sub adc iret xchg out sarb fimul sbb sub sbb add jns xchg testl xor jbe add arpl mov rorb (bad) data16 inc add dec ffreep mov mov inc cmp add mov cwtl and push xor mov jb lods or adc cmp js les dec movsl push pusha addr16 or sbbl enter lahf hlt cmp hlt mov xor jle dec mov cld add jbe xchg int3 sbb lock int test add jns es popa pop lcall inc add rorl test push dec push jne cltd mov dec fsts loope dec (bad) sbb mov xor cmpsl stc inc fcmovnbe pop push jmp lret fisubrl xchg scas fsubr jb jge pusha jecxz fsubl jmp mov pushf jecxz clc xorl stos mov xor ret dec mov pusha out ljmp adc jns mov mov int3 ljmp dec add and sub pop mov out push out jle jecxz jle sbb shrb adc or or test clc mov (bad) adc pop mov (bad) push clc std mov cmpsl and (bad) xor and mov mov xchg mov sbb pusha cld aam sbb in push enter push jns add xor int3 mov addr16 into sarl mov pop gs mov lcall ljmp inc sbb xchg ret and adc andb js (bad) lret add jge pop mov inc clc in sbb add jge jle push dec pop xchg dec lock dec sbb or mov mov subl stos not push hlt adc mov dec test sbb jp cwtl mov in rcr fistp cwtl leave decb aaa push shll push dec fldl push lods cmp mov (bad) xor lea ret mov jno lea add and jns (bad) mov jb add (bad) sbb xchg adc mov jne in and cmpsl sub popf xchg out sbb and inc jp push jp out addr16 inc cmpsl leave shlb arpl jmp add out (bad) es or (bad) shll lods lods test loop pop xchg mov loope rcr pop movsl cli push cli push iret dec sub cmc pop mov sub xor fs push ljmp jecxz xchg add aaa dec pop add push and or jb mov cmpb outsl cmpsl leave push xchg aam add lods test push sarb mov mov or flds xor loopne fistpll dec fcomps nop popf cmp mov xorl cmp insl popa sub pop mov sbb cmp mov cli clc iret lods xchg out in int sub nop nop xchg (bad) cld in fild mov jb xchg mov push or sub mov push sub add pusha sub shl mov adc and in inc pop in fcmove cltd mov sub call in inc pop outsl mov and sbb out mov fwait data16 sub cli popf (bad) mov stos bnd mov ficomp xchg and pop mov lea push data16 bound in stc push fdivrs dec (bad) bound or repnz sub pop sub daa pop lock push inc repnz repz mov mov cld fwait add in xchg add out and je stos call loopne ljmp push cltd jle inc (bad) push lods sbb cld into arpl adc cmp jns imul xchg or sbb mov daa fsub setle xchg cld std shll (bad) push cmp jp (bad) sub dec mov fdivr rcll (bad) xor push lds pop std cmp lahf xchg int3 int mov add pop pop adcl sbb pop fildll jbe nop iret push push popf add jnp clc movd sub test jmp nop mov mov lret int lds (bad) jne test push cmp push scas mov outsb xchg xor insb scas vmread popf cwtl push mov mov jmp pusha ja cmpsl push inc out cmpsl add clc daa cmc stos shll loope in test pop and popa or pop lcall out push cmp invd pop sub in imul inc in jo jae cmp cmpsb mov adc (bad) ljmp jge jp cli inc push popa test xor or cli jmp rcll pusha jae cmpsb int add shrl or fistp idivb lret xchg jbe fnstenv push cmp inc outsb (bad) jns mov sub test int ret push movsl xchg and sarl add idiv jo sub cs xchg in and cmp ds mov int adc leave bnd outsb mov jb jl lods popa ds je and push push mov push or bnd jo jb mov pop stc scas pushf add sub inc cmp dec xorb pop insb lea popa cmp repnz leave push or adc xor lock jb cmp push insb add (bad) mov xchg rcrb jbe pop pop jb mov sbb popa push add push mov fidiv pop xor fdivl dec imul into mov test mov xchg mov push cmpsl lods xor push sub jle movnti jg mov mov mov mov imul (bad) push (bad) dec lret pop int in push add dec pop (bad) mov xchg sbb or mov adc jmp aad nop jo dec aam scas cmpsb repnz popf inc lcall mov push outsb mov jo mov sarb push xor inc mov xor out rcrb call out sbb xorl ljmp rolb je pop fwait cli daa inc lcall xorl pop mov mov dec cmp cwtl xchg jl pop cmpb mov jb cmp inc pop mov cmpsl mov adc adc pop jmp xchg jo inc (bad) hlt inc xor adc xchg xor push dec mov aad jae loop imul adc mov xlat sahf fimul nop mov call sbb push inc lcall outsl and cmp ljmp xchg sub mov sbb xor ds mov icebp js push cmp mov gs mov fist xor xchg mov ror fsubrl lods orl inc adc insl out jns rcrl add hlt push adc adc insl inc fisttpll test mov fwait sub xor lret pusha xor aaa mov je jge and mov pop jbe adc sbb jb mov inc and add out arpl (bad) lods movsb pop ljmp repz sbb lea lods mov add outsl xchg jecxz lock pop (bad) mov cmp mov xor test fldt add cmp data16 popa jle popa mov sub xor mov mov add mov (bad) xor push mov xchg in ret aad xor in fldlg2 mov adc mov mov lock psubsb cmp popa add pop mov mov lods (bad) jl ljmp pop fwait adc jl push ss jle test and fcmovnbe stos pop iret sahf icebp or or cmp add clc std pop push cmp inc je push lea jle cmc inc ja rorl mov sub notl (bad) in stos sub je lods add test mov insl sbb pop ret jle mov imul roll mov stc adc out out xor outsb pop aam xchg xchg rorb jge pop aad mov mov ljmp xchg or lcall mov js cmpsl pop scas jmp mov cmpsl or mov scas sub mov aad jge rclb roll jne or jp push jno jnp inc pusha test lods cmp int3 movsb mov ret icebp push cwtl shrl xor rcr scas dec xor lea into add testl arpl jae dec add repz mov push or icebp mov push xchg pushf push outsb mov (bad) jae gs inc xor icebp xor xchg mov (bad) xor xchg into mov push pop mov mov cmp hlt jp aam inc pusha jl jo divb xor stos (bad) std test lcall fildl std scas push aas sbb mov jmp in loope call lcall jecxz or sarl push push jb sub bound rcll add scas (bad) movsl or (bad) pusha jmp in pusha xor fcmovne lret ret loopne sbb push out dec mov push out lds sbb rclb push addr16 xor jmp stos sub cmp xlat mov mov or xchg out sub mov cltd jo clc cmp outsb mov mov xchg into (bad) mov xor test jge fadds (bad) pop dec push stc cmpsl cld out jbe adc leave xchg inc icebp repnz jno out into adc dec aas data16 fistp cmp movsb xor movsl inc outsl (bad) push (bad) and sub je sub jge sub cmp out cmp xchg in pop mov ljmp mov cmp jge xchg ds das pusha or xchg daa push sbb sub ret cld pushf push sbb rorl rcl and xlat loopne add and in in pop mov pop inc jns add ret xchg movsl push push pop push loop or clc mov fwait xchg enter sbb repnz es dec nop xor add sarb push mov lret mov inc mov lock in mov fdivp mov loopne inc xor jae (bad) cmp in stos push cmp fwait daa and pop inc lcall pop scas inc rcrb mov xchg inc xor outsb (bad) repnz mov mov mov mov mov roll xchg mov add push xchg movsl addr16 jnp push cmp mov mov es (bad) mov cmc fldl fs pop ja mov add xchg dec movb pop jns jnp or adc pop mov xor lock mov jbe iret fsubl test xchg dec mov (bad) dec xor ret jo pop repz sbb (bad) push sub dec ret inc out inc pcmpgtd pop (bad) aaa or pop in repz and mov xor lahf mov mov popl xchg inc mov mov cs bound data16 int into ret cmp mov (bad) ja test leave dec push repnz incb and add pop aaa sbb xchg jp mov test popf jl xchg iret adc jle maskmovq in pop dec xchg lret cmp cli dec xlat inc jp mov cli das in cli pop add add mov push jne lcall push mov loope shrb xor xor mov add adc pop xchg xchg fstpl addr16 (bad) scas xchg cmp subl mov xor (bad) fwait adc lahf xor cmp xor xchg or push mov jmp data16 repnz and adc dec call or add xchg fdivs orl fwait mov xchg dec sbb cmp push and xor lea stc lods sub push enter negl jbe sarl add jno and lods aas or xor add sub (bad) push roll xchg mov push fdivr mov imul repz aaa jo,pt test rclb dec movsl (bad) gs stos pop adc std push lahf lods sub roll or fs push repz dec cmpsl mov popf jmp xlat gs out mov lahf shlb testb cmp out outsl test push fnsave mov jbe fmuls mov mov fisubrl jl stos mov dec cwtl add outsl dec add das pop jge imul jecxz xlat std insl cli clc mov pop sbbl fstpt adc jp sub rcrl sti mov fcompl inc (bad) out mov hlt lods sbb icebp dec push bound cmp xor pop test dec ljmp sbb and or mov (bad) in sti mov inc mov xlat sub popl jnp inc or xlat nop mov adc mov insl clc or jle repz add leave fxch enter cli mov push jl xor mov stc in sbb jp in cmpsl inc out push out pop mov and xor (bad) data16 add adc mov (bad) nop hlt inc sbb xchg nop std push push js imul mov cltd mov fisubr or lret sahf sarb into jle pop jl mov adc push aas dec outsl sub adc (bad) decb mov imul in sbb xchg adc jl mov or mov mov neg push mov outsl xchg in push and jns dec lcall out insb add add fs jbe loop jmp in scas adc jo out out int into int3 jecxz add ja ljmp imul repnz inc negl pop ja out sub imul adc sbb imul rclb cmpsb (bad) clc out mov (bad) xor ja push adc and mov test or push ljmp cmpsb jno push jp ja mov daa jne pop push into or int jg cmp ret aaa aam aam push lahf sbb cli in ljmp xor mov or mov mov mov into sbb add daa lock hlt leave nop jno pop lahf jae jno sub and out xchg lds mov insl inc or sub int3 xchg push dec loopne,pt and lods and inc test loope scas pop or jg jecxz (bad) in dec xor pop dec aas mov jne and lods out test lret (bad) and mov inc mov xchg push pop pusha xor mov ljmp mov inc outsl (bad) lret stos xor int mov dec insl stos daa out or imul xchg xchg (bad) adc xor aad repnz (bad) sbb dec push cmpsl aad xchg push cmpsl inc sub inc lahf lods sbb je jp mov mov mov xchg or jmp mov pop push dec stos sbb and in out or orl dec cmp sbb and aaa xchg sbb sub or mov pop jle outsb xor les loopew popf add cmp add and or ja add xor xor ja jae mov xchg dec test mov fidivrl dec and xchg aaa in (bad) jge bound pop test lea inc jae icebp in out xor fcomps icebp ds dec xor cwtl mov in fistpll imul mov xchg jns xor fstl in js mov mov sub pop bound cmp daa push out push insb sub mov adc mov sbb cmp push fidivr xchg push jmp dec mov andl mov stos dec lahf or icebp into mov loop movsl or jg xchg xor fstpl (bad) loope xor add outsb lock popl pop or add in test xchg or mov lahf movsb mull cmp xor jge (bad) js outsl pop dec jno into mov jg fs add mov jl nop mov in fidivl add call fs pop sbb out sbb sti adc out lret js mov negb add dec es scas and and lock ret cmp sbb das xor jmp pop inc mov mov xor xchg cmp jecxz mov adc dec icebp lret cmc outsl xchg cmc add sub mov jecxz out mov or ret jge mov add cmpsb into sub call adc sub and les dec cmp inc in out pusha imul scas je outsl xchg pmaxub inc stos sbb dec xchg mov adc aaa mov jmp int3 xor lock (bad) or pop dec dec add gs fldl repz scas addr16 movsl ja imul pop pop shlb xor ja jnp and in popa mov jmp icebp (bad) test cltd inc and mov (bad) xor pop sbb out and mov mov or test int sub mov test pop push inc dec pop cmp mov inc hlt lret push fwait pop lea mov mov mov (bad) mov stos push roll loope cmp mov popf loop (bad) cmp test aam stos popf stos shlb mov fisubr dec iret jns in (bad) (bad) imul xor xchg push movsl jg popf mov inc cmp fdivs xchg loop or jg jg stc sub fsts aad jle fcoml call pusha ljmp sar pop cmovno inc mov lods mov data16 stos adc mov (bad) xor push push data16 xchg sub popl cltd sbb sti and adc call aas mov or mov sbb imul pushf mov inc jle push rclb xchg loopne mov lea movsb dec movsb lcall jle add mov fisttpll push and mov dec jae push pop shlb sahf sbb mov mov insl mov xchg fxch ss rorl pushw xchg loope pushf test cld push add insl adc push out rcrb pop jae popf fs pop pop adc imul adc cmp or sbb fwait movsb popf pop pusha pop jae mov or mov sub ret mov hlt std sbb mov mov mov inc push dec xchg imul out pop js popf dec mov cmc xchg mov and push jae call cmpsl pop test push aas xchg aas pop es sti fsts push pop sub and xchg add mov inc pushf jnp xor sub push mov les pusha loope call and je imul xor xchg sbb jb lods loope insb mov cmp loop outsl lock daa (bad) rol or lret xchg xchg add mov mov leave bound (bad) shr out mov pusha ss inc je push gs push sbbl xor data16 stos clc jg scas hlt icebp dec sub adc jle sub sbb (bad) push cmp lret xlat fst fisubrl pop mov cmpsl adc or mov test fxch incl push ljmp stos pop jne mov cmp push int xchg ffreep out jbe cmp fsubrl test or pop mov outsb popa dec add js inc mov dec fwait dec add loopne pop add lret push push neg mov lcall test rorb adc outsb sbbl mov lds daa addr16 imul cmpsb mov repnz push (bad) sahf mov stos lock enter sbb lcall dec fwait movsb imul mov int3 inc mov sub push jmp movsb push negl mov mov xchg sbb popa in jge lds pop lods pushf inc push jb xor out lea ds out lods mov pop notl add out xor scas mov shl pop add in or mov fildl outsb test inc jns cmp mov cli and xchg aaa enter ficomp adc mov dec fsub add xlat push stos cltd ffreep adc push ret cmp sbb and dec mov dec xor jne loopne adc ret cmp in das aad icebp dec (bad) adc pusha imul into clc imul (bad) cmp sbb jge fs adc sbb ret sub jl mov mov xchg les and lret call xchg scas mov push stos mov test and aam xchg cmp mov cmp sbb xor or (bad) pushf sbb push xchg or mov mov jne xchg (bad) repnz add add js loop sub sti imul imul inc push adc ss push daa push xor sub gs aas inc push scas pusha xchg aad push pop dec outsl leave mov and (bad) mov loope popf mov push in fucomip in popf (bad) jb call cmp cltd adc sub lcall call addr16 xor mov test jp fs call sub aam lods inc insb inc or jbe sub cmc mov add jbe je aad push pop loop xchg in adc mov pop call (bad) pusha sub sub push lods movsl or mov xchg mov xor addl xor popf in xorl dec sbb movsl pusha xor cs in or sub fildl ret mov cmp pushf (bad) xchg (bad) lret sub (bad) popa lock (bad) xchg mov rcll ficoml adcb mov mov mov xlat in adc dec movsb stos das lret ds mov sbb cwtl popa add ja push push mov inc lret push jb pop stc adc add cmp mov arpl pusha mov xchg test sub adc or clc inc pop je mov jmp (bad) cmc das popf mov adc lods push shll jmp rcl sub jno stos xchg mov cltd cmc or cmp mov xchg insb movsl movsb and jge inc add adc rcl das push mov push jns dec sahf mov sub push mov jmp cli pop cmpsl push xchg sbb or (bad) loope pusha sbb mov flds xchg sbb ss and das adcl mov cmp or mov jo or push js sub cmc inc je divb imul push pop mov push iret and daa add lock jg aas xchg fildll mov jo mov icebp add leave push (bad) mov inc mov or jno in (bad) mov iret mov mov cltd insl mov push mov inc cmp sbb jne stos xor add pop pop rol mov mov movsb dec mov xor nop (bad) sahf loope (bad) or push cltd popa cmc xchg data16 (bad) loopne xchg inc adc sbb imul enter cmp dec jg bound call fbstp and fsubrp cmc fsts cmc mov out sub mov jo out iret scas pop lea sbb jns cli mov or in jg call iret sbb adc in (bad) lods pusha fwait mov mov daa gs imul jl leave out add xchg ror lods pop ljmp lcall mov and jnp cmp lock arpl cmpsl je and popf lcall cld cmp std cmpsl adc imul pop or fldcw fprem1 mov loope pushl mov jb sahf (bad) int3 cmp lea sbb jp xchg sub and sbb jecxz enter test in testb sub mov jl shlb cs pop lock rorb aaa lods adc sbb mov inc and arpl xchg scas adc dec mov shll mov sbb xor lds dec stos push (bad) in or pop and shll int cmc rcrb pushf push mov cmpsb incb sub adc movsl sbb fildl outsb inc and ret into cmpxchg push pop and mov mov jae hlt pop jbe pop (bad) lea add cld xchg pop out jno or jb mov inc inc (bad) hlt pop and test pop out or scas jmp sbb fnstcw push out inc sub std shrl cmpsl inc cltd cmpsb sbb dec mov and push inc (bad) mov repnz ljmp pop push push icebp (bad) cmp test push ljmp jmp cmpsb and cwtl pop cmpsb fcmovne sbb xchg sbb adc leave cli cmpsl xchg loop fcoms in sahf sub adc into cmp cmp push mov arpl (bad) out pop pop cs add mov lcall mov xchg mov pop mov jmp or cmpsl mov imul popa aas inc mov inc mov arpl and mov or xchg add or mov mov test gs nop pop addl adc subl pop cmpsb call sub fdivs ss mov xchg jl dec push pop out das inc push lock mov jp dec (bad) mov jg dec adc (bad) cmp into sti das bound sub ds pop adc dec fsts (bad) push pop xchg xchg mov cwtl fdivs and dec and int3 xor lret fcomp (bad) fldenv jo mov jg mov pushf sar pushf pushf cli rorb push or icebp or in push pop mov mov iret cmp das adc lods bound cmp pop jnp pop dec mov (bad) push push inc (bad) or adc mov push ror les (bad) mov js shlb mov pushf dec adc jne lahf push mov sar sbb sub add push je in in (bad) sub in dec cmpsb (bad) or mov or pop add mov dec scas add stos adc dec lret dec xchg sbb js js (bad) enter je inc pop push push stc movsb cmp push lret lea add mov call xor sub outsb out xor pop je jnp das ss xor xor inc mov sub bnd (bad) jno jb sub push pop dec imul mov je outsl cmp cld pop jecxz scas mov popa rorb into je cmp test cmc adc or imul adc lods mov mov lahf (bad) fidivl (bad) insb fwait sbb dec pop insb scas jbe loop ljmp popf sbb adc (bad) lock jb inc xor pop (bad) aad test nop in jns jle (bad) test inc in icebp cmp push bound jecxz xchg out and mov push mov shrb mov movsb pop pop stc int cmp sti mov mov xchg push dec adc int3 leave sub add scas shrl cmp xlat into dec mov inc mov loopne pop inc stos das js lods jb outsb popf sbb outsb mov fstpl push jp inc test push xor lds jecxz lcall mov and or pushf cmc test or lea cmc push rolb in add xchg fistpl (bad) out xchg int mov stos add dec clc (bad) jnp fistp (bad) adc (bad) push pushf (bad) out pop jmp test or es jg xor inc neg and pop push mov rorb cmp adc jne mov test fiadd mov lahf dec jmp push mov add shrl dec outsl add les hlt hlt scas (bad) ljmp test push fwait cmp jp enter and into pop jge mov sub insb and scas stos adcl jne daa mov mov dec or sbb push lods inc cmp xor and pop ret or cmpsb in inc lods and jb and movsl sbb mov mov mul xor int into cmp (bad) mov ret in stos notl sahf sahf pop fcmove (bad) xor (bad) loopne add xchg sbb out xchg mov in arpl arpl sbb mov inc pushf inc fnstenv xchg pop sub loope add mov popa movb mov xchg or pusha stc ucomiss mov inc mov cs and sarl pop jnp mov mov pop cld jge movsb ret jb xor dec pop push das xor jmp out mov test pushf dec lds sbb pop test aam add add test movsb xlat cmp mov out mov in cltd xor das call frstor insb mov xor in inc lret xchg mov mov pop add jecxz xor stc cltd inc pop icebp xor add xchg aas xor push mov movsb (bad) mov ja inc lods (bad) or cmp xor rorb xchg ja inc mov popf xchg nop ret popa imul adc mov dec (bad) out mov mov and loop pop mov sbb mov and dec cli test jecxz dec sub sub out pop cmpsl xchg syscall xlat movsb push arpl insb jo loopne lcall push mov mov arpl sub mov mov adc lahf out dec push (bad) jle adc xorb push fsubs aam mov xor pop popa jge mov xchg enter mov mov jmp and imul mov ss repnz es fstp (bad) pop inc loop cmpsb and imul rcll inc incl dec and or arpl insl sarb push outsb scas fsts dec jbe mov dec call call mov cmc inc sub leave lret mov arpl fucomip xchg loope (bad) xor pushf inc xor xor loopne dec aas mov and orl xlat fimul push test addr16 xchg test aam xchg dec in or pop repnz rcll test (bad) std adcb sbb insb mov push mov sbb scas sahf cmpsb jp push adc inc cs inc dec dec repz int or mov scas or das ret call pop add hlt sbb mov jae scas cmp or sbb es aas cmp out xchg cmpsl mov gs movsl sub call xchg ud1 mov cltd or pop inc imul call xor fwait scas xor xor inc lret xor and push dec les test dec push sub dec dec and cmc out sbb jo push pushf hlt cmpsb dec ret mov add sbb lcall out sub lcall (bad) js add (bad) dec mov jnp mull movsb and mov mov adc es icebp jae shr xor mov bound ret pop jns xchg leave jge push (bad) cmpsl inc out das rcll sti in int3 fdivs add pop adc inc mov pop jbe cmp imul xchg movl xchg cld mov fs bnd loopne cmpsb jno push movsl cld pop aas lret rcrb add stos loope or push call or sbb fidiv fcmove push fisubr xchg pop insb add adc add daa mov js inc bound fcompl (bad) stos loop jle sarl and add cmpsb dec mov cmpsb in test jnp sbb add subb or xchg xchg fist nop (bad) (bad) lods or mov daa pushl in popl call fcmovnu mov neg or aad ja out pop out lcall mov mov mov jg andl lds xor xchg and movsb repnz cmp mov mov inc dec sub inc adc dec scas loopne test xor jo push pusha mov hlt xchg lret mov lea push lahf es jns enter or xor shrl mov ss addr16 fimul sub push xchg testb adc and jle in les ret dec adc and and into fisubrl stc (bad) out push jno mov arpl xor mov cs push sub xchg sbb movsb dec les fildl fnsave mov cmp xor repnz mov or decl push lea fwait or les fildll dec sub push fnop int3 push (bad) dec rorl ja sub sub cmp leave in cmp sbb jo sub aas jnp int cmp xchg and imul (bad) stc cmpsl cmp adc in rcr cmp fsubr jo out lret repz dec jmp popa pop sbb scas js adc es xor (bad) jns stos xchg rclb repnz push and mov push pop lahf sarb in jmp mov lret cmp mov pop sbbl aam (bad) and pop js mov xchg inc loop sbb pusha push mov adc mov in cmp jl fstps jecxz lret and push xlat adc jmp xor adc or jge mov test data16 outsl hlt (bad) xor sub xor sub das sbb mov fmull xor push aas and in sub rolb (bad) cmpsb or push fcmovnbe js es popf mov cmp jno stos or jb sub sub cli call cli and (bad) adc push add sbb (bad) daa xor xchg iret jae mov mov push pop add cmp jl std int fs pusha pushf xchg sarb add dec and pop test incl repnz pushf xchg mov ret lds adc lret sbb divl cltd fstp sbb cltd xchg lods xlat pop mov repz leave lret pop pop inc mov pop loope push mov xchg es jp dec pusha shlb mov stos rorb imul push lret outsb mov adc mov cmp jmp sub lret arpl xchg fs mov mov dec jmp repz cmp fucom (bad) mov mov fsubrp or aaa fs lods mov (bad) icebp test xchg sub xchg int xchg daa lret cmp idivl add push test add jno add stc bound out insb jge ja push jmp loopne pop lods lods push fildll je xchg in test cltd je push jle gs push lret ss cmpsb mov mov cmp add sbb pop lods lds sub data16 pop sub pop je or repz sub inc pop jmp fisttp push out cmpsb fisttp sbb xchg icebp scas dec lahf (bad) mov mov jmp test int mov sub ljmp pop icebp out fwait mov (bad) (bad) xor pop push roll test ss cmc jp sarl push xorb cmp loopne mov xchg arpl mov js cwtl push jbe cmp inc adc and loop push mov cmc jbe adc mov call mov cld xchg xchg aam cld xor outsl or pop rcrb arpl inc sti xchg int3 add jp (bad) cld popf iret or xchg fisttp divb pop int3 cmpsb sub addr16 adc insl loop mov mov and lahf loopne jb lcall pop into xchg xor lret xor jno test fistp gs jb cmp mov js loope push push cmc lods imul mov std rclb add xchg mov sub sbb mov adc inc imul ret mov mov adc adc repz fwait shll mov fwait or mov shrb rcrl aad lahf mov popf sarl sahf in adc roll mov loope mov sbb push cs xchg scas pusha and pop insl lahf dec or xor stos ret ljmp jne sub push aas pop fdivs pop adc sbb or jns xor out in and push pop imulb in mov xor sti push push outsb mov cmpsb xchg pop push and adcl cmp sbb int mov sbb push xchg ja xor push adc push mov clts sbb add (bad) clc push jmp lods and pop int cld mov sbb mov pop fbld add call push inc aad call pop out xlat jns mov xchg xor lods loop mov or data16 adc gs out incb add call xor pop insl shrl or (bad) scas lods cmpb mov ret ljmp xchg fdiv push (bad) xor in jge and xchg mov sub inc popf xchg mov loop cmp arpl loop jl mov adc test cmp sub adc or jge pop (bad) dec dec and btc xchg out stc fidivl jbe daa pusha cmpxchg adc nop enter (bad) cmp je sub push enter imul dec lret gs sub mov shll popf sub sbb in popa mov rolb icebp sub std cli mov pop xchg mov xchg js inc adc cmp push xchg mov enter lahf xor (bad) lds add cmp lds adc cmc imul loope xlat ret popa inc icebp cmc xlat pushf std les in cltd addr16 jp stc pusha popa inc push jmp mov or subb xchg add cmc (bad) pop mov ret (bad) ljmp cltd (bad) iret dec adc pop sbb xor cli loope or dec shlb jne daa xchg and outsl aas mov cmp xchg xor fs call inc jns lret push cmp std dec xor pop mov int3 mov mov xor jns mov or fistl mov sbb movsb inc enter push sbb in repnz push fdivrs jl mov dec sbb add adc aaa loopne mov inc mov test add add scas js ucomiss and call ljmp xchg out cmc push int fcoms call mov aaa push mov (bad) or xchg adc insl pop jle mov jmp pop outsl pop jle adc scas and in dec pop sbb pop fistp inc mov lds and jbe jg mov inc or in lret cmc mov push xchg push mov push xor jns sub xor clc mov movsl or xchg andb lods jg xchg add imul and add push divl es rcrl xchg sbb ss pop or insb cwtl cmp mov (bad) sbb push mov mov imul sub ja sub mov aam mov push call mov sbb mov push and stos pop int3 movsl dec xchg das pop std out mov ja or (bad) pop lret and pop push inc add test jmp out idiv lahf sbb add mov das push and cld test mov adc or mov (bad) lds dec (bad) je sub push in push lahf jne sub mov jl aad cmp out stos adc aam pop shrb sub and xor mov xor mov pop push mov enter push mov packssdw sub fcompl jnp js fistpl xchg loope and stos xor pop test cltd cmp jae push (bad) xchg pop jmp std fldcw cmp clc out pop fdiv add mov int jbe,pt sub xchg and insl jbe call (bad) push push int3 pop fsubrs adc sahf cli jle xchg rorl cmpsb (bad) adc mov cwtl stos adc rclb lods adc mov dec jmp sarl sub int xchg hlt stos fadd add xchg stos scas mov fiaddl popf gs add dec pop dec (bad) and xchg fisttpll les ficomp adc ljmp fstl push jb out jp inc push bound push sbb dec insl mov test dec xchg cmovge dec push pop cmp mov mov lods lahf jge xor inc sbb insl into sar lea adc push js xor mov sarl mov pop adc jne xor inc and out mov lea shrl or in cld negb add jb sub mov adc in mov mov and lods loope cmp (bad) xchg aas mov sub aaa jb cmp rclb (bad) and inc xor mov jne pop sbb cwtl fwait xor jne lea mov push test je (bad) mov dec mov cmp ss lds int and ss push xchg into movsl push shl (bad) sub sub outsl mov mov push pop (bad) std insb clc push (bad) out mov sbb push add jns outsb mov adc fsubrp xchg push jo push push pop in and imull push loop cmp push jmp pop mov cltd mov leave add lcall add iret lcall ja pop push cmc sub mov aam cwtl dec mov mov (bad) or pop fwait jl sub inc sbb sub sub mov adc subl test pusha pop xchg jo pop lahf (bad) xor mov test inc loop fwait pop shlb rcr adc mov add xor pop inc and daa vrcpps clc ret fstpt repz adc cwtl sub mov setle lds xor inc push push ret adc dec pop jbe cwtl or movl add rol lods (bad) mov push adc push divb rcr out cmp inc pop hlt aas push inc inc repz add test cmp mov xor ror fstpl int loope cmpsb pop push or mov sarl or pop movl push cld andl incb xor gs mov in sub shr stos sub std movsl cs jmp repnz inc xor xchg fdivrl lahf pop je mov and push nop sbb les insl dec stos inc sbbl add ret xchg and jo leave fstps int3 mov daa out push cmp inc xchg mov dec inc jnp sub xchg iret inc jmp mov push scas stos jne and pop movb pop fstp negb loope js sbb pop les rorl shll jecxz mov orl sbb stos add call push adc adc push out (bad) inc mov roll aam iret jge add insl dec out push cmp fistp lds mov out mov pop pop fsubrl mov test incl notl push das add fdivrs inc data16 in add sub inc sbb movsb jge es jecxz sbbl add mov dec mov faddl xor icebp fs or ss je adc xor jnp xchg (bad) stc rorl mov inc ror jge aad stc xor pop mov pushf sub jg int3 jns lret pusha orl mov (bad) je stos lcall ljmp mov mov test mov lods ret and (bad) and mov mov fdivrl adc insb ret fwait dec xor push jecxz aad fs dec cmp dec cltd push test repnz push rclb stos fnstenv out hlt sbb outsl mov jne popa scas adc into mov sub adc sbb xchg (bad) mov ret mov sbb lea data16 sarl add mov cs pop cmp xchg cwtl jp pop rorb lahf push imul jl popa lea cs cmc fmull xor sub aam adc hlt add test les mov dec out (bad) in stos or mov movsb cmpsb dec mov mov dec mov movsb (bad) mov inc pop in xor jg push jmp in cld xchg in xchg push mov push jecxz aad pusha jp pusha ljmp mov mov pushf lods mov add jecxz std (bad) rcll xor in sbb out test les add mov rorl gs pushf sahf inc mov xchg xor cwtl ret push jno xchg sbb scas mov jnp cmp fsubl or mov ds cmpl or js (bad) and and mov cwtl xchg pusha ficoml movb add mov out leave stos icebp jae mov dec and push je mov and lods cmp push bound test push imul jne movsl js push negb push outsl mov mov idivb mov cld push xor pushf repz repz cmp in xor into pop out xor mov loop xor mov (bad) notb mov iret stos jae lret mov in repnz (bad) push fdivrl dec xchg aas sbb mov adc mov mov clc (bad) lahf mov inc xchg jmp inc cmp sbb (bad) incl sbbl out js adc (bad) js int3 stc mov sub push jge sbbl mov pushf or sbb mov cli sub sbb dec cli xchg cli mov sub fldcw ret mov insl test jle loope and iret scas outsb add sti out addb dec into nop (bad) in scas dec pusha pushl into pop repz ret aaa test rorb mov mov fimull cmp pushf es stos jp inc jae sbb xchg aas sbb fwait stc push icebp mov (bad) mov push and xchg inc sbb inc arpl stc inc inc push (bad) sub jg or dec fdivrs (bad) outsb daa int3 daa xchg xor jne int3 sbb into sbb jo xchg lock pop mov (bad) push test lods repnz push out mov (bad) cmpsl push fldenv je push aam inc aad sbb cs loop ficomp cltd (bad) enter movsl test enter lods popa loopne shrl inc loop fdivrs add mov call sub push cmp or xor push popa loope in repz add mov add loopne xchg xchg out add and mov cld sub or adc jecxz adc call sub pushf (bad) push mov pop mov pusha jg outsl or and mov mov cmpsb lock pop cltd push sbb cmp loope jecxz sub das movsl repnz sbb rcll insb fildll sub lcall movsb jo cwtl sti push data16 popa push add inc jns jno mov (bad) cmp add dec adc add mov pop es (bad) push pusha inc push pop pop lock push stc add add in enter fwait pusha fucom imul mov cmpsl push insb sti sbb clc arpl sti sbb mov adc push adc xlat and push or rorl loop das lret sbb add pop xchg pop push xchg rorb fwait cmc ret jmp lock mov xchg std jl into jg jmp std iret xchg and cmp int popf adc push and cmp arpl push dec std jnp fcoml and mov mov into mov xlat call outsl pushf popa mov cmpb lods dec stos inc fstps dec xlat cld test mov or imul add (bad) mov lcall xor addr16 add xchg mov fild xchg idiv loope (bad) mov ret inc mov pop bound mov adc js rorb push xor and pop int3 pop inc mov insl daa dec xlat scas sbb loop imul mov aad aad sub push xchg mov fsts (bad) into gs cltd inc aad xorb adc push adc es xlat cmp jbe pmaddwd pop dec (bad) out loop (bad) mov roll sub cmp lods inc push sub js sbb add sub xlat stc xor fistpll (bad) mov lods shll sub test cmp xchg out inc fpatan push subl pop mov stos jae push or insl add mov ss aas mov inc xchg (bad) mov adc in nop fdivl or or fs dec out data16 sub enter push in xor or xchg jns and add push fidiv lock xchg pop jo push mov pushf dec push aad fiaddl ret (bad) sub cmc into imulb jo (bad) imul jnp mov or frstor cmpl (bad) in dec push cmpsl xchg (bad) out dec (bad) (bad) xor daa fs sub fmull xorl or add shl pop hlt nop insb add test rcrb pop aad (bad) subl iret in je jno sbb sub fisubrl stos (bad) and jl into xchg mov sbb fsts fldt js mov lods unpckhps lahf mov cltd ret adc cwtl mov (bad) lods adc or lcall push aam add aad ljmp xor cmpsb and movsb cli or dec inc xor pop and xorl pop sbb hlt sarb hlt unpcklps mov int3 lcall int3 or stos iret jecxz jb push mov stos pop xchg sbb pop ret popa loope dec sbb jae pop push ret aas jbe xchg mov adc inc movsl cld mov cmp push cmp inc push fwait lret fbstp in pop loopne lcall cmp ljmp std std lret scas add fdiv cmpsb push in ds dec mov std pop imul idivl addr16 ror jmp ret int mov scas push ds adc movsb mov cmc mov dec push mov mov fs xor add lock inc movsb iret mov (bad) in inc ds lea jnp mov adc ja cmp xor pop xchg orl aam imul mov push mov sbb add cmc add negl lods push call movsb fnstenv xor xchg test inc mov push mov cmc jecxz or xchg mov pop jnp or cmpsl stos mov pop cmc lahf adc cltd jb push test pushf data16 popf rcll push push or fiaddl lret mov dec adc dec aad push leave sbb (bad) adc (bad) clc cld rclb jb loop aad into sub mov stos sub insl xor inc add dec sbb stos lret or push push lret rol lds out fmuls adc ret push daa lods popl mov push push (bad) mov mov adc pop push or pop sub mov repz lret jno jns (bad) mov cmpsl or out leave hlt popa jmp ficompl add test pop scas andl jno add pop sbb adc cltd push ret movsl mov pop or cmpsl and and mov popa lcall sbb jmp jnp pop daa sbb (bad) not test insl xchg add cmp daa dec sti clc cmpsl cmp cmp pop add or iret push add out cmp pushf mov mov test push sub jmp sub lods xchg jo xchg xlat repz (bad) lock imul into insb jmp or push (bad) lods fstl push rcll test lret jns mov loopne ljmp mov mov scas jb clc dec mov adc mov into sti (bad) xor out xor mov sub add pop mov or push cmp push movb call enter scas insb cmp jne rcll push cli mov dec sbb xlat or rorl out inc ljmp inc jecxz mov je loop and daa add cmp dec cli fistpll adc sbb push sub xchg push pop inc and pop jge cwtl or xor loop pop sub mov test mov xor sub jbe addr16 mov or mov mov mov pop arpl mov xchg fs ljmp cmpsb cs andb dec jbe push push xchg enter bound sarl cwtl dec dec fcompl jle ret pop adc scas dec orl dec loop mov xchg cmc or lret (bad) dec mov sub jp mov push cwtl dec addr16 addr16 push aaa inc fisub (bad) push loope or movsb bound (bad) push cmc cmpl stos adc ss scas repz mov xor ret outsl mov push pop aam mov stos cmpl outsl out repnz push or lock lahf out inc rcll mov sbb or mov pushf xchg sbb insl bound rcl pushl in mov sbb mov mov test or jge jo or pop sub cmpsl cmp js adc mov aas and ret popa (bad) add pop out add adc pushf pop (bad) movsb stos xor dec jmp sarl stos add arpl loopne jnp or jp push loopne sti fbld mov adc in decb das imul jo cmp adc je xchg outsl daa or sub (bad) sbb inc inc push mov repz cs scas lret xor movsb jp push jge int pop das lret loop arpl call and cmpsb xor inc cmp jae lods cmp fstps sub rorl call (bad) lock in xrelease and jg cmc jl xchg or out jbe cmp or jne cmp cli sub (bad) push mov cmp xor lods fsubrl popa inc push jmp sbb dec pop test sarl push into lods dec adc int ficompl sub fnop mov in iret adc lcall or nop (bad) outsb xchg pop mov sub xchg mov add js xor push or mov add add mov movsl jno cmp movsl push sub mov or xor sti dec mov scas faddl (bad) adc jnp loopne (bad) lods loopne inc dec adc add arpl popf in or sub xor in test mov out jae inc jg mov add or cmp xchg popa xchg shrl lods mov sbb mov mov movsb jae mov push ljmp inc fcmovbe sti test push mov push push loope in in xor xchg out cltd xor ds es enter mov enter mov data16 subb push push in inc nop push mov dec stc dec cmp add or imul (bad) jmp mov sub repnz jo dec ljmp mov cld aaa add jns jbe inc test fbld inc rorb adc xor mov pop outsl push dec fistp jo mov fsubs rorb mov sub dec push sbb out pop jl (bad) jae cs cwtl jmp ja xor dec mov stc jg mov dec shrb mull add pop popf mov stos add frstor add sbb dec pop mov mov push jo rol mov lods sti cmp (bad) jae in add cmp push pop and pop aam stc (bad) or mov lock (bad) hlt ljmp mov flds pop ds vdivpd push scas cmp dec cmc add push lea jb mov adc imul pop mov test (bad) cmp or ret cwtl mov ja sbb pop pop adc hlt pop test (bad) cmp and gs movsl xor sub testl out jbe inc or popf loopne xor sbb push cld out jnp jbe ljmp into push push jae shlb movntq nop mov test or jns test movsl pop pop daa loope pop aaa cmp push faddl or pop (bad) xchg shrl or (bad) aam inc iret cmpsl push popf popf jne cmp xor daa sub pop je xor xor popa add mov ret out in mov push xchg and sbbl ja adc jae mov inc andl push test call mov hlt icebp fsts loopne aaa mov lcall shlb rcrb jns jecxz jb out es out and mov xchg adc xchg cmp and loopne aad push or cmp int pusha inc popf sub outsb and inc fcomps mov jge ret loope inc andl adc push xchg repz and movsl lret mov sahf inc push add mov fdivrl dec mov or push jg xlat popa cmpsl repz test outsb nop cmp cli fs push (bad) mov or cmpsb cmpsl fidivr push or rcrl push sti push xchg hlt lods aaa fwait in and and int (bad) mov sub js inc or mov and dec aas add xchg pop pop sbb mov jg ret push stc loope fsts pop sysret mov fistpl ljmp clc inc into movsb dec and mov cmp lcall dec mov cltd push xor je push test insb test cmp cltd pop pusha fildl rorl jb lods cld out or mov jl insb xchg dec into in pop and std cmp add xchg lret sub stos in fbld div loop cmpsl mov icebp loope cmp push push sbb (bad) pop jecxz jbe sbb gs inc pushf ss rorl or mov (bad) inc sub fmul stc push jge pop add jb rorl add add mov outsb jnp fimull mov xlat pop sbb outsl push ljmp fild bound das xchg jge xchg (bad) ja mov sub push adc or pop outsl sahf jnp or insl mov jbe adc mov rol fsubrl inc into pop in pop aad out jae sti or push dec jb cwtl cmpsb dec xor mov daa scas int inc ja or addr16 jp dec and pop pushf nop dec fildll lea mov inc sbb push js clc dec fisubl nop aam fmull or (bad) lcall rcll sub mov sahf inc xor mov add xor rcrl push pop fwait mov pop mov mov sahf aad dec push push das popa fwait add and in pop inc jns or je in mov cld cld (bad) cli (bad) sti arpl int3 sbb pop cmp cmp and (bad) inc push movsb imul loop mov cmove pop adc int lahf sub out sbb ret test mov fcomip push sub xchg pusha inc mov mov or in ret aam int3 pop outsl xchg (bad) add add pusha stc mov mov cli out pop dec scas jp push pop imul cmp and clc cmpsl or lret cs cmp lods (bad) adc ja jne repz fisttpll dec pushf jns in insl rcrl xor nop jl in or push imul sbb pop and pop push or cld mov sbb aad shrb or enter cmp pop jmp out movsb lods aas addr16 scas mov out les pop sbb adc push stos outsl xchg mov loop out xchg mov popa test sti dec push loop loope push pop call jne sub test xchg les xchg jne aad mov push sahf (bad) jae fisubrl lret aaa sbbl ds sub dec inc ja (bad) repz inc adc jmp xor push mov add pushf (bad) fmul and and inc pusha cmc sarb test inc jns mov enter pop xor popf xchg cld inc fisttpll (bad) push (bad) sahf cmpsl xchg (bad) inc or mov (bad) mov sub and repnz test outsl push mov cld mov dec ss aam mov adc test (bad) xchg adc cmpsl jb cld js or stos or or mov pop adc adc adc repnz jecxz stc pushf imul sub roll in adc mov mov jl jno clc icebp fstps popf ret jecxz out jle mov jb loopne rcl sub mov ret stc stos call insl ret in xor test jae test dec xchg rolb pop mov jnp push mov dec test jns jge mov scas and push mov es mov out test movsl (bad) outsb popa mov lret dec jo adc dec clc ficom mulb xchg push xchg mov push call inc mov stc imul sub pop cs ficompl ljmp mov fwait xor jmp jbe out lods (bad) ja push mov fcoml pop es mov dec sti xchg pushf lods fs loope loopne cmc jmp loope fmul xchg cwtl mov fsubl mov or test push sub add movsb pushw lahf lea push adc xchg add xchg pop jg mov cmpsb mulb gs mov mov and push mov je dec loope mov inc mov xor mov or fwait push mov nop in in and and js push jb fidivrl push inc gs and jbe cmpb mov mov jp lds and xchg nop mov mov rclb jnp push (bad) repnz mov lcall out and xlat int3 test addb adc test cmp jo rcrl shlb in and adc fmulp sub cld dec (bad) mov jb xchg daa repz xchg xorb (bad) jo shlb pop xchg aaa xchg xchg jns push mov (bad) insl or movsl stos idiv (bad) (bad) cltd xor aas int3 or test sub sti add add test sbb and and xchg dec cmp out pop clc daa loope pop mov adc mov (bad) push and adc mov xor xor out and aam sbb mov shlb inc mov nop mov jge popf addps xchg cmp lahf push xor (bad) lock sub arpl mov xlat fistpl add ss push pop jbe faddl fbld outsb or scas pusha scas jnp jmp outsb adcl inc sbb mov enter flds ret push pusha movsb jp jnp popa lret mov mov add add sbb lock mov popf sub aas add leave movsb inc lret out shr pop jg bound push mov inc xor sahf add movsl test jb add xchg incb jl orl mov jne rcl call pop sub mov push xor enter movl pop fsub inc sahf jne xor or decl (bad) mov gs and aas das lods (bad) add mov mov ds jno jle fldenv arpl imul xchg ret push jg (bad) addl sbb stos sbb iret mov lret dec inc sbb mov (bad) xchg (bad) cmp out cmp stc adc push cld fs lock xchg and pop dec sub jmp pushf mov push mov jp stos lods sbb ds xor fbstp fidivr and test xchg sbb fldl fwait or sbb js daa stos sub inc pop xor stos or aam dec addr16 in fcmovnbe or mov lds cli jp in xchg dec fist inc je sub dec or dec call pop jp adc les xor shrl dec add xor pop xchg dec lahf js cld inc faddl int3 mov decl mov test sahf aas cmp sbb or mov cmp dec aam in js push sub lods stos in and xchg div arpl stos pop or xor xorl add jecxz (bad) jbe inc aaa dec mov clc (bad) (bad) stos pop inc dec call (bad) dec jge in (bad) mov (bad) mov cmp int3 dec mov mov dec movsl (bad) popa add xor test dec add jge lret fwait pop sbb inc pop sbb xchg mov in xchg lret add dec clc mov nop icebp addr16 xchg cmp jae popa pop ret andl push mov stos call lret ljmp push cmpsb mulb and insl xor addl mov shll cwtl and mov push pop mov mov stos arpl sub jno sbbl xlat out dec mov and pop mov int cltd jb inc lods stos or mov mov (bad) fildll mov mov adc stos jg loopne repz jle ret fnsave pop imull cmp mov jb popa xchg push cli xor mov ds jp adc int mov jecxz mov imulb push adc movl push sbb scas movsl call fcomps xchg ss xor pop mov xchg in xlat sti addr16 cmp fst pop std mov imul xlat pop gs fwait (bad) sub pusha hlt push scas inc or pop jbe clc pop sar enter pop push cmp idiv dec mov mull cmc push idivl pop xorl xchg add insl xchg (bad) scas or (bad) (bad) mov sub repnz jnp out pop shlb pop dec inc ds and xchg int3 outsb mov clc add mov pop sbb jecxz movsb cs fistpll (bad) ficompl or iret sbb jecxz (bad) dec inc adc adc fldcw push stos pop push and mov jl push mov aam and fadds xor mov (bad) xor subb or xchg jmp divl dec into jl movhps mov aas iret cli mov daa sbb or inc insl mov scas in adc (bad) xor testb jae fwait pop dec out fisubrl bnd mov stos push mov (bad) in xchg jns xchg rolb push jp,pt mov lds ret dec je insb cmp mov test pop push sbbb mov in decl cli orl in xor out into in cmp ret outsb outsl and jecxz sbb das adc pop xchg mov push dec fdivr (bad) pop cli sbb add sarb pop in insl ja dec sarl pop lret cmpsl dec int3 jmp dec jne pop out xchg subl xor bound mov lcall rcll inc adc lret stc ljmp js mov jmp dec mov cltd mov mov jno inc ss jl int xor es mov in in jnp cmc pop stos xor test dec push sbb insb dec out faddp or jmp mov sub lret fcomi std ds daa mov movl sub lods or ljmp push sub pop (bad) xchg mov aam rcrb mov pop mov or adc lret cwtl clc pop xchg test mov pop movsl int3 rorl ret jno xchg jne testl xchg adc inc jbe,pt cmc mov mov mov cwtl fwait (bad) mov (bad) int mov mov or stos in mov (bad) test pop xchg jae ljmp pop push mov test jg pop loop jg decl clc dec clc fdivl cmp (bad) inc cmc xor or inc or lock sub or adc (bad) (bad) mov les aaa fwait mov xchg imulb mov (bad) and cmpsl ret or jbe and dec mov aaa adc cmp fwait pop mov fwait inc mov and repnz or push cld rorb inc clc (bad) mov push xor xchg notl xor dec idivb lods jbe test out jbe push aas ret data16 (bad) and jl icebp add outsb dec hlt or inc movsb add push rdmsr or arpl adc jge mov insb inc sahf dec push test xchg push mov or les int push sahf jl jp (bad) mov push push push xchg sub adc mov cld (bad) flds stos xor inc or xor dec out (bad) fcom stos dec inc or into test bound loop bnd xchg mov rorl movsl cmpsb gs sbb nop addr16 mov xor std cli cmpsb sbb movntps inc xchg dec in add imul js add sti imul call pushf nop (bad) xchg dec lds or sahf fdivrs gs ds test fisub mov xor imul cmpsb fidivrl jns ss pop dec jns rdmsr xlat jb mov (bad) aam pop popf (bad) (bad) add mov mov mov and lret or xor mov loopne mov data16 call sbb loop mov push mov pop push xchg clc inc repnz xchg push insb jno jp and dec cmpsl clc adc mov mov out sbb es cld xor jmp cmc sub test cwtl adc and dec sbb call jl cmp or push negl dec adc addr16 mov mov cmp push cmpsl and scas mov fdivs jbe mov xchg push in inc in or int inc pusha pop fnstsw pushf add (bad) or sub or mulps inc (bad) cmp cltd repnz int3 add pop xchg (bad) bnd xor addr16 outsl mov add popf push jo xchg cmp xorl dec pop divb pop bound inc jo pop inc xor xorl jge jge push fcmovbe out dec dec mov outsb adc mov mov xchg jnp and stos jno mov and mov lods cmp jecxz adc call xor test push and repnz cltd dec pusha out (bad) es imul (bad) jecxz fstl xor cmc push mov test xor mov mov dec daa jno,pt mov pushf in jle cs leave daa sti push icebp call xchg mov jne xchg rcll inc and inc add punpcklwd lret jae cmp dec dec sbb or je pop xor add ret jl pop addr16 pop adc jmp cmp movsb fsts mov mov enter pop cs arpl sub sub inc sbb int3 sub loopne,pn or push imul and mov or jg aad push es gs js loope adc add fimul loopne dec inc frstor clc jmp jnp mov insl popa ja fldl push insl nop mov inc jo dec mov adc shrb cmp pop dec neg sub ret sbb inc idiv popa push push pop and out lcall and enter xchg mov (bad) xchg jb scas nop das scas adc insl clc sbb sbb insb out cmpsl call jge loop add sbb stos push rcrb mov arpl and jp sbb into sub out mov lcall fist mov in sbb push push dec push xchg sbb rcrb in movsb mov (bad) lds aaa test mov mov xchg enter push sub lret inc mov and shll int3 mov loopne cltd push jo and xchg mov subl and arpl daa jecxz lret pushf fnop lea dec mov add mov sub cmc sub outsb jp rcl xchg clc scas daa jge,pt (bad) outsl cmp pusha lcall (bad) clc cmp jl xor push (bad) rcrl call rcll fstpt inc mov adc xchg pushf sbb sbb roll inc inc sbb dec loopne mov jge xchg or pop repz inc fwait jecxz,pn cmp jle cmp mov lret jae incl xchg and out repnz cmp mov push lret sub faddp jo jnp das mov jnp fcomps cmp mov stos stos sbb cltd cld sub mov dec mov (bad) int cltd inc push mov mov repz rcrb adc mov jno (bad) popa ljmp lcall mov icebp jne cmpsb jp adc inc pushf icebp std ja pop dec add les ss stos loop (bad) mov out jp test and iret cwtl push test mov mov aad dec pushf jne sbb xlat pop js cmp (bad) (bad) mov dec pop pop sbb test nop addr16 mov cmc push (bad) dec xor ret mov fwait pop popf arpl imul dec test rcll int3 mov inc push aam sub jne cs mov (bad) insl xchg sti push mov (bad) dec icebp fucomp imul fisttp pop cwtl inc leave pusha and sbb outsl add adc outsb add cmp outsb fs and cmp sub push popa jne popa fnstenv (bad) icebp sub leave (bad) push (bad) fdivrs cmpsb and arpl xor cmp fwait (bad) repnz sbb sub out jge xchg hlt cld (bad) xchg mov or mov mov mov (bad) adc addr16 jg push sub adc pop mov aad sbb and mov fldcw test mov test outsb repnz mov outsb js rorb and mov loopne dec and jae je mov jmp jnp and jl push (bad) lret cmp (bad) pusha repnz or mov lods inc into adc fadds add cmp inc pop dec mov jg cmp fldenv cmp inc jecxz mov cmp fidivrl dec fmull aaa aas daa push sarb (bad) std cmp aaa inc adc sbb add push mov and lahf jle mov stos jb mov mov mov cmc add push je mov fistl fs test dec adc xchg loope mov add stos jo cmp scas inc or xchg clc and mov xchg insb call dec mov inc inc push idiv sub movsl je testl aam sub jb lcall jno sbb inc lret das ja mov and jbe pushf in sbb lods stos inc dec dec push inc int3 jnp sbb sbb in daa clc fs mov mov (bad) out cwtl xchg push loopne pop adc and xlat call test pop faddl push and jp movsb (bad) sbb sbb mov fcoml (bad) ror cmp in inc fiadd pop adc outsl mov cmp sbb in add call test add inc cltd dec xor adc cmc jle jg mov inc aas mov popa dec inc inc jnp dec sub push int3 push inc subb sbb push add mov xchg and cli ret (bad) pop jns or iret fs jae fs cmp fistp out dec mov outsl dec sub sub lods (bad) or fldenv mov gs pop xchg cmpl (bad) sub pop std sub dec mov add jno sub stos sbb stc jmp xchg ds inc push pop stc stos adc pop or ljmp rcrb iret xor xchg jnp in pop cmp xchg std mov jbe inc scas jp dec xor sub sti rclb xchg push les xchg loop jns test ret and and popf jp and cli mov and testb mov cmc (bad) loopne sti loope ja xchg movsl add inc outsb bnd movsb into inc inc ljmp xchg ds int3 pushf jne cwtl jge sub push xor lahf dec and data16 mov mov and call (bad) loop stc jecxz stos popf adc inc adc lea xlat idiv xorl into push stos ja neg cmpsl sub adc push inc xlat add jae sub adc mov into cld dec adc xchg add cmp stos mov paddw jae mov mov or movsb and minps xor faddp jp jecxz lds dec or inc js jbe mov aaa (bad) dec sub sub enter sti xchg xor mov cmpsb xorb jno scas adc sub inc cltd xor data16 mov sub js cmp test jno cmp and insb jge jno sbb mov sub enter mov mov icebp inc or push rclb hlt xor shr or andl mov pop push jbe fsubrl pushf xchg xchg push jbe out or dec jecxz insb sbb xchg sub adc dec in inc xor rcl mov xorb sub inc mov lret pop jno stos push cltd stos push ret aam mov add cmp xor repz aam ret inc mov test mov adc mov negb inc clc lods out stos (bad) xor jecxz (bad) (bad) es lret mov push pop sti mov daa arpl xchg fsubl imul fistpll pop push aad push pop lahf cld sub shl mov aas jle gs jg sbb mov sub test shlb pop mov or rcrl arpl push les sbb cmp shrb (bad) xchg inc ud1 xchg repnz push mov (bad) movhps add outsb lea loope and xchg inc mov ret jae xor dec or int xor outsl xchg loope lret push xor adc ljmp cmp sub fsubr mov or clc xchg fcompl add pop inc mov or insb adc mov in fiadd add mov outsb movsl insb xor cli fstpt push fist jnp mov lret lret mov icebp jp xchg testb cmp rclb addr16 sbb (bad) (bad) in scas jns loope push mov fadd sub mov jg lahf adc loop inc inc arpl jl mov dec pop jae call push pop (bad) cmpsl inc jp xchg push sbb or (bad) hlt dec and js push xor cmp aas test lock sahf sub xor cmpsl enter loopne test out pop fsubrl mov shrl rorl fnop out je decb dec out sub push insb cmp ja jns pop add inc add shlb je fsubr jp add push push data16 rorb pop xlat cmp sbb mov lock xchg pusha cmpsb fld gs and dec xchg aam rcrl decl inc and mov xor outsl mov (bad) imul mov movsl push jp scas adc int3 and xchg xchg mov mov iret leave sti out loopne test jnp insb add cmp fs (bad) je js xchg push gs rorb jmp fmull inc lea push fsubrs push push inc xchg es cmp sbb jbe mov lcall xor test xor lock sti loope scas xor lock out xchg dec adc psraw cmp dec aaa repnz hlt or lods xor sub mov add push jne or xchg sub aad jl pop adc mov push mov cmpsl imul sub pop rol lret mov popl and fidivr insb inc cmpsb js clc shrb addr16 sbb in cmp pop push leave dec int je cmpsl and sti out fisttpll cmp repnz call push in sbb inc dec adc fs into cwtl leave insl aad mov mov xor clc sub xchg shlb xor cltd push orb clc adc cmp stos mov lea adc pop xor stos ljmp push inc jmp scas cmp ret aam scas xor fcomps sahf xchg mov out sti aas mov and jno jmp cmp out and add xor repnz cmp sbb inc add enter dec push push out arpl leave cmpsl pop xor das jmp jb adc adc fmul (bad) pop mov aas out add push or adc xchg out or cmp stc add xor jne push addl les lds jns out add jmp insl nop fisubrl mov push cmp lret in repz pop test pop jge or repz dec (bad) test sti jge rol mov ss aaa dec mov lods ds cs adc lods cmpsb fnsave (bad) adc adc cld mov insl pop mov iret cmp mov sbb in stos addl pusha ja addr16 pop xor pop (bad) adc js jb sbb das xor or jg mov testl mov and sub xlat xor test lahf out jae or (bad) mov jg ljmp push (bad) xchg scas jns cmp test inc imul shlb inc jns shrl (bad) xor adc cmc mov movsl push fcoms mov out stc pop cmp dec arpl or jae mov shlb adc add pop mov into pop sub ljmp cmp mov out or xchg inc sti push fcmovnu test adc pushf call inc jge es sbb aaa adc test jp or xor add sbb fucom xor pop fsubl fs adc add scas jo mov es popa out sub mov mov jnp lahf sti aas sarl (bad) push cmp sbb add pop cli sub mov loop leave inc cmc rolb mov std sub lods mov pop pop fsubs stc jmp mov push data16 adc ja pusha jo ret xchg (bad) xchg mov mov sar ror popf lock sub scas jmp sbb test daa das push xchg ja push jae xor ss sub lock cmpsb mov adc in sahf rcll pushf jle push hlt inc push call insl xchg neg lods pop popf mov sbb fwait mov (bad) scas ret pop mov sti (bad) push mov mov mov pop test jno jecxz push sbb jno add pop xchg inc xchg loop push ret mov sti mov adc sub pop inc test dec or xor jl lods movsl pop stc fwait inc or scas mov dec in and cmp adc jmp lret imul or fbstp fsubr repz test add xor ret pop ficompl xchg iret pop ret lcall cwtl in mov popa imul cmp xor cli insl cmc insb roll enter adc mov push jnp (bad) idivl gs fwait das in out ds leave call adc addr16 xor inc cwtl push pop mov out inc int shll xchg in cltd ds mov rclb ret loope jg adc push mov pop jo stos jle push dec sub xchg inc sbb (bad) int mov movsb popa pushf pop cli mulb mov push sti in and dec int3 inc aaa push std sbb jo ficom pop rcr popf adcl in mov pop ret outsb arpl rcrl out ffreep fcompl ss sub lods mov push iret jle dec test std cmp jge xlat lea dec ss mov pushf jne test mov sahf shr push pop mov pop xchg push push inc sub in ljmp mov loopne sti push out js xor orl xorl out sub adc pop push inc leave inc popf out pop or inc in testb pop mov jns aam mov scas mov jne notl pushf mov lds das push sub sbb andb pop xor sub xchg xchg loop and mov push (bad) sbb nop lret jmp call sbb mov push sbb inc pop pop push mul cmpsl int3 jl push xor (bad) mov mov repz data16 dec mov inc xchg sarb mov mov xchg bound xchg xchg addr16 rorb mov xor adc fsub mov out pop cmc cmpsb mov sbb mov pop rcr mov pop (bad) loope call int cmp in faddl clc (bad) pop lods (bad) mov rorl inc idiv xchg lahf test sbb (bad) xor subl push mov into fiaddl in call cmp xor pushl xchg xchg sbb push and xlat xchg idiv ss shrb dec and out add push dec lods dec gs (bad) rorl int jb lds adcl inc or push pop xchg (bad) xchg insl sahf or inc fidivr add xchg mov hlt xlat mov or jmp dec mov clc pop push in mov ja scas (bad) rcll mov punpckhwd mov inc adc push imul bound xchg fcom pushf push iret cmpsl xchg jb out add add jnp pop fldl push popa adc xor sub cmp iret xlat cmp jae jl pop scas fs mov cli add dec mov adc mov mov jge xor movlhps jle cwtl xor inc sub cmc sarb sbb mov add sub aaa fmull pop (bad) fcoml (bad) sub push add imul mov in mov xor pop mov xchg mov jb fs clc movsb daa jmp rcrl push mov jne stos sbb sub add call mov ja addr16 or push sbb jge mov pushf pop jge mov xchg dec mov movsb jne push ja inc lahf addr16 (bad) mov std lea pusha pop shrl stc fs stc fcoms imul jmp dec push (bad) jae negl or xor inc jecxz pop cltd mov cmpsb das mov repz push scas stos push sub and in or ja lret movsl fnstcw int rcl xor sbb or pushf stos es in sbb adc jle popa mov aam inc cmpsl xchg int3 lret mov mov mulb (bad) lea jg sbb outsl xor ja xchg rol xchg loope ds lcall rorb lahf jo xor (bad) dec je sub pusha movsl adc or xorl orb adc (bad) adc mov lds jp js cltd jbe call in mov test test movsb mov aaa movsl aam sahf int3 loope add or add arpl rclb (bad) or arpl cs xor xchg out add clc mov repnz rol out ja mov ja mov cs xchg or inc push int3 out or adc andb push pop jle das and subl jo xchg int xor jecxz pop or push rorl jno pop and sbb stos jo push ficoml fnsave mov mov sub movsl or xchg add bnd or jge lret pop in mov repz and bound fs fucomip push mov xor stos xorl lea ljmp into mov movsl xor in sti into mov cwtl pop inc xchg shrb aam sbb into fidivrl gs lret ffreep xchg cmp add (bad) xor dec ja pop js imul imul add les pop add mov (bad) ja nop call mul mov pop nop sti fwait iret dec ss repz jl and scas add and and cmc fmul mov dec push pop nop int insb fldenv rcrl pop and mov and fwait cmp fwait xchg inc dec mov or ja xchg mov xlat add xchg mov sbb jecxz xchg sahf in add xchg mov lock xchg out mov mov je xor cmpl ja call jnp rcl cmp pop enter cwtl push cmp lock or mov cmp dec pop fild ror cmp lods repz xchg lds dec mov lods stos mov dec push fnstcw push xlat cmp mov push fiaddl dec sbb loope sbb popf fnstenv dec loope pop jg sahf inc stc jp add sub pop and xchg inc lret jle mov iret mov sub xchg push jmp jl scas ret xor (bad) jmp jle jne test imull nop jmp imul xor pop fist mov popa xchg cmpsl pop daa jae,pn scas sahf je inc les test sbb pop in stos clc cmp stc out clc xchg stos fwait repnz (bad) adc call sub push pusha pop ds imul jge idivl xlat fiaddl lret dec pop inc add mov js es repnz test adc lods cmpsb jl add div dec xor (bad) xchg jmp lret xlat aaa fnstenv dec cmp pop addr16 pop push mov and stos stos pop xor es xchg fwait xchg lock shlb inc call sub movsb cmp in and cmpsl iret cmp sub mov pop mov sahf pop data16 cmp push xchg jno pop in (bad) xlat les and leave cmp aam mov rcrl cmpsl lea mulb in mov sub cltd or mov pushf jb jns cwtl cs imul sub roll sub push mov mov rol mov mov mov int sti pop dec push pushl mov sbb inc sbb icebp loopne lock loopne bound jo insb insb push jb adc xor mov sub out jae cld mov adc add fldt xchg mov fldenv popa pop popa cwtl add mov aam fbld gs cwtl xor jle fistl jp jg bnd and adc stos jle adc xchg leave loope neg xor mov rcr inc push mov jb push (bad) loope shrb add rclb jle int3 xchg pop dec divb push push sbb jne adc fwait adc leave into in addr16 daa jb cltd mov outsl mov outsb jb out push arpl pusha and cli mov jae push or lods lahf es (bad) loope rcll mov enter xchg leave stos or mov fisttp dec ja add inc push popf add pop jecxz adc imul (bad) (bad) xor insb fldt jg loope sbb in pop roll negl push je bound jl fcomps add xchg or pop inc stc sub addr16 enter xor sti adc stc (bad) xchg and pop lea dec jmp push jp mov fwait mov aad cmpsl xor mov pop pop test sbb jae jmp xchg out lock mov fiaddl sbb add ficom mov push movsl sub jl cmp out andl rcll aas (bad) sti testl push lock in bound cltd (bad) outsb decb mov mov inc repz push pop in call pop into hlt pushf movsl cmp adc or inc push dec push scas mov lods xor (bad) and arpl cwtl pop sub push cmp and add nop fnop cltd mov pop sbb mov lret mov push lods daa repz dec mov (bad) cld popa mov cltd (bad) add push (bad) out or pushf pop int or or push clc jnp push cwtl xor test mov xchg or mov xor sub jbe cs mov mov lahf into sub jns test rcr pop or jecxz popf lret (bad) or insb xchg push sbbb inc push mov sub imul popf jns pop or sbb pop xor push sbb mov scas sti (bad) pusha push cmp jns fild dec inc int3 sbb dec std pop (bad) repz jbe popa cwtl cmp inc arpl xchg cld fstpl aam ficompl xchg out and gs js xchg ret sub rcrl xchg insb jg pop adc sbb push jp cmpsl sbb lret inc enter push ret cmpsl in mov insb jl loope imul int (bad) adc mov push cmp mov push fmull mov test dec pop mov flds stos xlat sbb add dec mov cli loop ljmp mov mov mov push je sarl fcompl mov xor xchg inc xchg outsl dec insl iret gs (bad) jns rclb (bad) je xor pop cltd adc rclb aaa rclb jle sbb push pop out jbe imull jns (bad) sbb mov jmp add adc icebp pop data16 jbe imulb out push ret ret sub xlat adc inc mov dec sub push adc aad repz cmp push lahf mov in cmpsl inc push mov cmp outsb out cmc lcall (bad) iret repz fwait (bad) xchg add pop inc js jne cmp imul lret xor cmpsl out push or inc or adc cli daa decl (bad) pop mov (bad) and mov mov (bad) jge jle (bad) (bad) mov fisubrl and test scas lahf or sbb stos std ljmp jle test inc rcrl stos dec and data16 stc sbb xor pusha cmp inc inc cld lds and jb or sub adc cld (bad) data16 jecxz leave lret stos arpl daa fwait mov adc sbb outsl jno out sbb pop mov mov jb sbb repnz mov lret push inc pop addl pop push mov pop mov imul add jae sub ret mov cmp mov push add ds and push cld mov fnstcw cmc inc movsb out sub dec sub cmp orl (bad) dec sahf lcall jecxz ss stos inc lcall dec pop call aas rorb lcall movsb inc fcmove les jp fs sub xlat (bad) lret testb icebp jno sbb stc inc sub add mov pop or out jl (bad) and pop mov cmp fldenv push mov pop push clc adc mov sbb sub ljmp aaa in dec push dec sub sbb in rcll cld mov scas xor mov hlt outsl imul mov insl sub mov jg je cmp push push adc nop mov fsubrs sar jb pop subl push (bad) ljmp cmp (bad) (bad) push cltd push push rcrl out jge rcll push or or xchg and mov pusha xor imul xchg sub div xor mov sbb mov push lods ret mov std fstpl or push and mov push push outsl inc and xchg pop sub dec imull fnop ljmp sbb and fildl mov arpl lock aam bound mov xchg mov mov xchg (bad) movb out jns fdivrs mov dec cmp mov ss sub test xor aas imul sub push lds iret out mov cmp scas emms in bound test shr pop lods dec popf push xorb mov push push ss aas xor aaa lret sub dec xor (bad) mov sbb jecxz scas ds lret pop cmp aad gs cld sub xor pop mov xlat movb or mov push jnp jg or and pushf lock sbb jb mov sub data16 popa lds iret push push jb arpl repz xchg jp dec (bad) jbe sub pop sbb cwtl loope mov int3 stos icebp mov movsl aam outsl mov inc into jg stc in shr or cmp and jae out aam push cmpsb mov (bad) jbe push jecxz mov decb xchg (bad) or and and out (bad) ja push pushf ret cmpsb mull sbb sub (bad) dec arpl or lcall ret or (bad) push insb inc (bad) fildll int3 insl popa rcl pop lods jg mov and out dec cld inc jl xchg xchg ds sbb jmp add scas fbld adc ret int3 lock ljmp movsl sets dec inc leave sbb aaa sbb imul adc mov jns adc mov push xlat test mov add add or data16 adc sub iret mov inc sbb imul dec cmp pop adc adc fisttp adc stos sbb or mov insb sub into fwait in sbb cmpsb mov icebp xchg jbe ljmp test or jmp jecxz,pt push addr16 dec les and lock in dec push or xchg mov or sbb inc lahf scas cmc sub pop or mov pop add ja jmp dec out cmc mov or add repnz stos mov pop (bad) and dec ds sub negb ss stc jl xchg add inc jl shr cltd stc ret out bound mov cmp push mov xlat mov mov test (bad) jne dec fnstenv ja mov mov clc xchg cmp mov imul mov mov (bad) dec xor jne cmp fdivrs mov push jbe mov mov lds (bad) push adc mov push test mov repz xor pop int jge stc (bad) fwait aam lods ja repz xor mov test push andl jae imul aaa mov pop movsb out aam jmp jnp int3 sub scas mov push mov xchg pushf jge add pop fsubrl adc loop (bad) jle add pop push xchg icebp jnp sub bsr leave pop mov out nop aas leave out jbe (bad) dec (bad) out inc inc xchg sbb mov mov cwtl in add (bad) pop inc push dec push mov adc cmc sub sub jmp pop fsubl xchg jns stos dec test xor mulb jle aaa jnp popf add sub inc lods xchg fwait mov cld fdivp lahf push (bad) mov fisttpll movsb test push pop fnstenv arpl sbb inc mov stos xchg mov sub pop sahf lret das pop (bad) (bad) in in jge and adc dec lock imul dec sub xchg icebp pop sbb inc mov stc cmp stos insl (bad) xchg (bad) sbb mov jns,pn pop jge gs cmpsb popf push scas es mov (bad) ret (bad) lods lods push dec mov push push ret jle mov jo jo in addl dec sub pop jne jo push divb addl mov stos outsb mov sbb sub jl les xor sbb int3 fcomip jge and data16 ficompl jbe sbb sahf out mov add fldl jns push pop push sti mov or and cmp fsts imul lea sahf adc jns les jle jae cs adc mov (bad) dec aad jb pop cmp lds les push pop nop push jmp sub or (bad) (bad) call ds std jl icebp jecxz pop fs int3 adc adc loopne mov and in xchg nop es cmc xchg fidiv xor test lahf or cmpsl daa scas xchg sbb cmc sub and push fwait idivl loopne mov mov divl push mov hlt jge mov sub pop lahf aad sub cmp mov sbb movsb insl fxch push mov add or and mov fisttpll push pop stos inc hlt mov jbe (bad) lret jg xchg mov add add int3 dec push jp jbe and add or push dec stos jbe push in std je sahf push imul xchg cmp lods addr16 xchg and sbb push pop in cmp xchg movsl mov insb xor ljmp jb hlt jg bound iret push pusha jns and js sub pop (bad) in fidivl xor sub (bad) ja sbb adc mov cmpsl arpl les add push jnp mov pop andl fnstcw push push ret dec xor dec cmpsl sbb pop ror mov negb dec jmp and cld push cmpsb inc fstpl mov mov dec imul sbb inc or push push cmp sub dec fiadd jecxz mov jge aam add inc push inc adc imul cld jbe and sub xchg jge push mov adc cmp pop clc je imul imulb inc pop in or mov loope loop,pt in xchg mov jmp rcrl adc jmp icebp into sbb xchg in outsb stc mov mov push outsb mov pop sub push dec sbb xor outsb or cmp push mov (bad) mov inc icebp add data16 js lock stc lds inc fstl sbb cwtl mov aam xrelease andl dec test sbb das enter in mov movsb bound pop push xchg dec and int3 gs inc lret mov xchg mov stos test mov jecxz mov push pop or inc xchg mov jg add (bad) enter and mulb rcl jnp popa (bad) mov mov push dec sub lds ja cmc sahf mov lret (bad) mov cmpsl lcall adcl in rcrl and jg add stos sub scas inc inc je,pt mov je lea jge mov out (bad) fadds dec mov jo hlt sahf ds xchg lret and jae dec sub xchg (bad) insl lods pusha fmuls push int3 ds js movsl or cmc cmp adc pop pop dec imul dec movsl mov dec sbb mov repz jg mov out loop lcall push adc (bad) jns cmp mov pusha mov or xchg adcl sbb pop mov (bad) xor mov ret shrl ja ss xorl dec outsl mov pop aad xorb push add sub and or and pop inc mov dec xchg pop (bad) lods cmp mov mov sar das int3 dec ret rcll sbb fstpl cmp and jp xchg xchg xor cmpsb aam pop scas jo or adc xchg frstor xor arpl mov inc (bad) fldcw jmp orb push cltd sub pushf inc xor inc fidivl or les jmp mov pop inc xor add sub pop out loop adc xchg test xchg adcl loopne and adc test iret sarb inc leave test xlat nop adc push ja xchg lret sub adc add outsl mov sub cmc add rcl in addr16 test ret mov enter mov dec pop mov inc fldl add fwait iret imulb (bad) fidivrl inc inc and dec or cs aam xor test adc dec dec stos scas mov cli testb inc (bad) xchg jecxz xchg pop and mov mov sub jmp and add push cmc aad fwait mov inc inc jecxz ficomp xchg or mov cmp aam xlat add int (bad) imul or (bad) fwait je add add mov js outsl pop data16 (bad) xchg ficom lret lea int lret dec std or or in jbe fnsave pop jnp outsl and cmp xor fmuls in push cmp mov sub jbe imull iret dec imul adc mov fstp stc cmpsl inc adc sub and xor mov pop fcoms inc lods xchg lret cmp push loope lods cs nop mov mov sahf or scas cmpsl adc pop xor enter imulb inc adc jp mov lret jmp cld pop nop in pushf push out push pushf inc or ret mov ja pop popf adc mov aaa jns insl popf call cmpsb lock je jle clc and fs in or test pushf inc adc lea ficom loope xlat adc mov mov sub clc sbb push sub mov movsb bound add cs mov sub sti ficom fist adc mov pushf outsl xchg aam aad or lcall add repnz add (bad) mul inc or popa fwait test in rorl adc loopne or and pop mov sbb sub shll add adc popa adc jmp xlat popf lods xchg pop (bad) vmwrite mov adc insl cmp andl outsl popf inc sub stc pop pop insb jnp dec cltd mov jmp out add or adc cs jle add push shl iret lods inc mov jnp jp xchg or mov push mov daa jp jmp jnp xchg cmp dec push out insl or pop call pop (bad) pop push cld les xor scas mov xor sbb pop andl fmull repz bswap addl sbb add cmpsb push adc push mov xchg cmp sarb jbe (bad) jo (bad) mov push es ja pusha aad mov push push cwtl jmp rolb fdivrl xchg push lret pop ljmp mov push cwtl mov push outsl ret mov cmpl adc push daa push jnp push faddl (bad) out and sbb (bad) lea stos cmp in vhaddpd sahf adc dec sub sbb in test mov and inc in xchg jecxz jae mov xchg pop sub mov rcll (bad) jbe loope xchg aad push icebp andl fdivrs add push xor pop cmc inc shlb ret xor lods sub test xchg xor xchg int push arpl inc push je arpl insb push dec pop mov cmpb ret sub jne mov add cmp dec fsubrs cs add adc negl stc lea fs sysret and in lahf xchg fadds scas add mov lea dec push call adc push add or lcall es addl dec aaa and je pop loop sub pop pop xor (bad) push pop push sti mov inc (bad) adc cli sbb jecxz lock mov or cmp test lock pop out mov rclb and repz inc xchg (bad) lahf or ret mov dec and fnop sti ljmp repz nop mul test adc jns jg out adc (bad) hlt cmp sahf in mov add pop das stos add outsl pop (bad) lock mov inc (bad) or pop pop cmpsb pop mov mov cmp jno jns insb lret or jbe sub cmp rcrb es in fwait dec pop mov fidivl jno out out jl and xchg and add xor or dec xchg mov mov test lock (bad) mov or je jge add and sbb loopne add ljmp jecxz stos xchg cmp mov subl pop lds mov sar adc sub sbb push sbb fcoms lahf data16 fnstenv or push test test xor lods push aam addr16 (bad) in inc shl push leave pop push pop lahf adc outsl push sbb pop add mov inc cwtl outsb mov rorl jecxz imul or add xchg and dec xchg pusha clc enter es pop inc in fnstsw popl jbe rorb mov int3 movb jne mov jle (bad) dec mov add mulb push dec and adc xchg sbb loopne mov sbb inc push cmc icebp fld xor ds jb mov pushf lret mov mov jne mov or in ficompl push adc mov clc push (bad) (bad) or sub aam mov and loope sti pop sahf xchg leave lret sbb push push and jae jl mov or mov xor mov icebp xchg (bad) into mov fs push int3 mov xor fs xchg jle dec mov fmull loop jmp xor outsb and push mov add pusha fwait stos cs push push (bad) xchg dec stos into jne js xchg loopne sarl into jle adc ficom les xchg mov mov xlat icebp dec daa or mov mov add pop push inc (bad) dec clc ficompl mov xor test adc js add add xlat push pop test orb divb divl mov mull inc adc sar adc arpl inc sub mov or scas inc xchg or cwtl xchg dec xchg aaa mov das pop loopne lock sbb and add movsb jmp mov loope jb call ja mov in cli sbb std xchg aaa mov or call es fwait inc scas xchg int3 lahf jg shlb mov sbb xchg xchg fiaddl push inc test loopne outsb stos loopne std idivl (bad) mov sbb sub insl mov mov loopne or mov push popf inc sahf sar lahf movsb cmpsb je mov loopne cmpsl and lret stos out mov cmp mov fcomp push scas (bad) dec fmull jmp loop lahf xchg cmp dec fprem1 or fs sub (bad) mov sbb push xchg (bad) mov jne pop lods or pushf lods ss leave push rcr and ja jl shll cmp in mov loope aas sbb dec sub in fisttp call cmp fimull rcrb jne test sub mov cmp cmp rolb pop mov cmc jg xchg ret subl xchg pop mov adc or imul dec dec popf test jb xor inc pop cmpsl xchg sbb lret sub pop xor jb rcrl aas push cmp push mov mov cld push sbb es fwait pop add and sbb dec dec and xor js and loopne mov sub (bad) pop lahf sarb sti cltd jbe adc pop mov or fldcw cli sub jp insb jns and cltd add add cmpl push test ret xchg xor loop mov cmpsb and inc call push clc scas rorl add stos ljmp push push push xchg insl leave mov ja daa add jmp fldt push or outsb sbb adc xor jecxz dec pusha sub stc mov ret lret sbb cli jl or mov out in ss aad adc inc xor sbb inc and sub adc add popa fcomps inc (bad) idiv cmp jecxz xchg (bad) xor dec loopw sbb dec and mov popf mov gs test ret jae mov lret (bad) rcrb pop pop dec fmuls and imul push adc push outsb push roll pushf lea fildl movsb repz xor inc cs js push xchg mov (bad) es adc mov xlat repnz push outsl mov push pusha das arpl dec ret (bad) loopne test in mov std mov mov jns mov fisubl add movsl hlt and xor push xchg (bad) pusha scas sahf mov lock popl xlat or add pusha fcomip mov cmp mov jmp lret pop in fcompl addl xor push sub fwait cmpsl push mov cmc and ret sub fmull pop xor cmp popf es jno xchg insb mov mulb dec aaa aam adc cmpsl mov jmp stos pop xchg pop aaa aam add cmpl mov lret rolb clc scas cwtl jno push std pushf (bad) jl sub mov loope outsb movsl sbb sbb out lds (bad) sti mov push (bad) mov rclb popf push ficompl stos loope int call push and push sub sub sahf aas push cmp jno xchg (bad) rolb sti xor lods nop call int adc cmp mov jbe add sbb (bad) nop mov xchg mov cmp mov call or xor bound sub inc push popa cmp pop push dec pop outsb test out xchg dec jns mov cmp scas pop sub arpl xchg rclb or sub push pop je movsb adc loopne outsb adc out and add sub pop jb pop sub mov push mov (bad) push or pop or sub lock or rcll (bad) xor movb mov jl stc cmp pop or (bad) mov pop fcoml sbb negb dec ficomp mov arpl xchg xor mov sub (bad) aaa adc pandn push and sbb cmp push sbb jl insl inc mov xor in (bad) cld jno add bound out outsl and or movsb rorl cmp roll and cwtl inc mov ficoml mov adc fnstenv adc dec jns mov (bad) sti xchg push test pop insl mov and or mov jae sbb insb rcrb cltd lret scas pop mov and cmp mov test faddl aad lods xchg mov xchg arpl loope imulb and loopne sub repnz xor dec or cli out loopne cmc xlat jne mov xchg lcall pop push insb imul aas lods mov adc imulb cmp jno fcoml push dec test lret xchg loope imul push jp xor xchg gs imul jecxz in ds push adc sbb push int3 jae inc mov lods cmc mov dec outsb or xchg aam jl repz sub inc sbb scas push repz cwtl icebp or mov sub pop pop cs mov and shrb push sub lds (bad) aad out pop icebp xor neg or sub push mov nop mov in ret addr16 pop repz or arpl mov jp fnop scas cs ds (bad) loop in loopne ror (bad) leave movsb xor push mov or bound daa fsub subl pop xor rclb xchg sbb pop xchg dec popl push es xchg sbb in lcall (bad) mov xlat pop or push fwait jne jge pop pusha cs (bad) clc push inc fcoms popa popf jmp outsl push adc (bad) icebp loop clc xchg nop cmpsb mov test sbb flds cwtl lret mov add std lahf data16 (bad) lret rorb aaa int3 mov in sbb sahf addb js pushf (bad) jae mov cmp mov dec out push mov mov call push in sub jmp jb (bad) js iret gs xor mov sub jnp lea xchg je xchg sti cs js cmc add push popf xor sarb into (bad) adc adcb push fldl sahf mov add jns jmp pop dec std adc push iret stos fmull in xlat push lret xchg mov mov notb out mov out and cwtl loopne pop sbb push fdivrl inc dec ss jbe and sub xchg (bad) xor (bad) jle xchg sbb (bad) iret mov mov mov adc xor dec sub sub pop adc fxch sub out mov iret popa jb loop icebp mov and sub jg rcrb dec daa inc gs dec dec lea test push jae add (bad) hlt pop jle sarb cli ds pop jb jno cwtl push xchg aad pushf push insb fild out out mov pop pushl adc into cmpsl sarl in test mov les cli cmp in insb stos cmp jl ret into add mov jmp bswap sub xor rol js mov loopne (bad) mov jp jns pop (bad) jae out mov stc leave cmp sarl repnz mov xlat pop cmp dec pushf hlt loopne fwait outsb add xor in in icebp call cmp subl sub mov hlt into jb stos mov or or xchg push add inc xor jns ficompl rol insb or xor sbb cli mov in imul cmp mov sub mov mov jns mov gs js pop ficomp push cmp jp dec push es pop cmp inc (bad) aam js lods dec cwtl xchg (bad) push pop movsl sbb dec inc out inc xchg mov bswap sub out into mov xchg lods cmpsl sub clc mov mov mov xchg xor cmp daa int3 cltd xor jl repnz cmpsb (bad) std out adc aam pop inc or cmp adc dec mov add mov in push push sbb stc out mov cmpb xor imul popa iret aas outsb cmp mov loop nop push insl loope in xchg je fsubrl daa clc dec inc in insl push mov leave jbe lods sub repnz mov mov push andl pop into (bad) (bad) lock xchg fdivrl lret dec add xchg push leave ret lea adcb pop push and aam xchg xlat insb lcall scas out or adc fdivl cmpsb or mov jecxz ljmp mov fcompl sarl aad mov cmc adc pushf jle xchg pop dec sahf icebp fldt mov and inc pop mov ljmp leave and fidivr or and push clc ret cmp jmp pop mov lahf xorb movsl sbbb jb mov pop pop dec out pop inc adc data16 popa push adc lret dec roll dec outsl mov cmp jp adcl cmp dec inc lcall fiaddl pop js pop adc rcll out pop adc adc xchg or cmp data16 sub jo (bad) (bad) cmp mov push stc sarl scas pushf and loopne,pn ss test jl mov jne insb push movsl pop call rorb xchg insb xchg insb push cli test fisubl add push cmp add (bad) stc sub out lods ja add imul loope or imul arpl fcmovu (bad) iret insb mov xchg push jne pusha lret loop mov or inc push mov mov dec inc roll mov incl in adc adc mov and inc mov xchg sbb out mov loope push sar subb push aas rcrl jge loop jg fdivrl (bad) mov mov mov popf push xor mov pop pop int3 xchg inc das in int3 dec or stos inc xor push mov mov and int sbbl mov adc push lock or push (bad) std (bad) addr16 jle psrld mov sbb (bad) negl and cmpsl pop dec or repz push mov std dec cs mov outsl arpl and push mov lock push inc inc jns fmul xchg mov mov cli sahf mov jge mov adc sbb add loop (bad) addr16 pop loope mov rorb lods mov test pop jno into lret sub or lock leave fdivrs pop movsb sahf js lods xor stc mov popl (bad) clc xor push lods mov adc ds fsubrl add xlat fbstp mov push les divl mov cmp jg push xchg jecxz je pusha std orb ret outsl xor addr16 mov lret jb gs std pusha fwait mov insb dec outsb mov add mov or push iret es adc mov and into out and leave int fistpl pop mov rcll jle mov int3 (bad) dec stos mov aad and fadd cmp inc cmp call sbb sbb out lahf add xchg aas and incb pop test push adc shlb incb popa cmp (bad) mov mov sbb unpcklps rcrb xor (bad) jle sub (bad) fidivl adc adc out jmp sbb push inc xor cwtl jg cwtl mov mov push or ds cmp jo mov pop in xor insl cmp push jle repz (bad) into jo xor push adc nop sub mov es mov mov sub mov add call int3 (bad) xor mov xchg xchg pop mov adc js jo adc dec cmp scas (bad) inc and dec idivl data16 and lods add mov mov inc inc int int3 push push shll xchg in aad cmpsb repz xlat lret push inc pop jnp das mov inc or outsb xor imul mov addr16 imul aad mulps inc fcmovnb ljmp xlat (bad) dec inc test pop stc sarb mov neg push mov pop es sti xor stos sti aad jmp mov inc in pop sub in stc aad mov lods adc or aad hlt cmp xor push fisubl icebp lcall xchg or inc mov out fidivrl inc icebp (bad) cmp stc cmp cs push adc sbbl je fstpl sbb shl (bad) jmp call push outsl push popf pop adc outsl push aam jmp out sbb pop adc jle jl roll orb xchg pop or cmp test out pop jg xchg mov mov pop inc and add std les push sbb sahf mov jns stos aaa enter stos inc fsubs xor mov xlat push loop loope in div fistl std inc pop enter jnp (bad) sbb fiadd rolb jecxz repnz xchg jns,pn (bad) das xor movsl xor sbb out inc mov (bad) inc imul inc jle cmp xchg (bad) push pop and stos shrl test mov (bad) lods arpl fs adc xor jmp (bad) fcmove mov aas rol lds mov cmovns out jge jne test sub (bad) jno lcall les dec add mov ds fs imul sbb mov sub jmp imul int3 lcall jo iret mov inc into test leave jns js cmp in popa sub leave xchg adc cwtl lds sti jnp push (bad) je cmpsl jne add dec ret dec dec shll lcall lret aas push push cmc xchg mov jne pushf and subl mov add add jo push (bad) fcomip jecxz pop jecxz out shl out jns (bad) jb jmp fldt xchg inc adc pop inc push insl and lret arpl lahf mov push inc clc js fldenv sub pop xor sub test adc dec jns or adc inc dec mov pop mov jp sbb xchg leave repnz push test inc jle push (bad) xor bound test mov insb jmp sbb stos test data16 push adc and mov dec adc cli pop (bad) leave loop and sub outsl pop cmp test test xor test (bad) push mov sti out xchg jno push pop outsl stos xchg clc fadds (bad) lds dec movsb fistpll in insb jge lcall stos jne jnp inc and xchg ljmp adc push push outsl pusha jmp push jp int in lret pop push add loopne lods push aam mov dec inc (bad) pop jp mov inc pop repnz sub cmp xor xorb xor gs mov dec cs fisubr (bad) add pop mov (bad) std mov sub cmpsl inc loop lods aas sbb dec mov and outsl cmp arpl dec in adcb cmp xlat sbb into xchg imul push sub aas mov pop inc cmp adc sub dec adc aas adc cld sub je int3 repz ss sub and repz das cmp (bad) popl mov jne push and add cmp idiv cltd mov nop outsl arpl xlat mov mov and cmp ret scas mov jp and (bad) cmp adc push cmp sbb test sub add test outsl sbb jnp add dec and mov movsb dec sub inc mov int pop add fisubr inc pop fnop stos gs das rorl or xchg mov shl dec clc sbb sub out (bad) int fildl mov (bad) in mov in jnp mov sti imul lret add mov mov nop xchg test xchg lds mov sti pop insl push das sub idivl adc dec ret jg enter gs dec mov cmp dec idiv sbb pop sti jp fcmovu cmpsb pop mov rcll xchg (bad) cltd in (bad) mov sbb jle cli mov xlat outsb mov mov xlat aam mov mov mov inc out jns jnp js les cmp xchg inc mov push push ja lock fsubrl adc popl cmp clc out rorb and data16 notb jmp iret and and add jge sub cmp pushf popa (bad) not ret xor inc push fmuls ficomp adc insb mov mov add lret stos inc xor ret ds jg clc jb out inc add pop das fstps insb inc (bad) idivl xor test fsubr inc inc test insl rcrb adc test test aad shll addr16 mov and (bad) jae jns xchg mov push imul or dec je scas mov sub lahf insl icebp roll fchs dec rorb sbb arpl mov fs call sbb add int popa xchg mov imul dec add xchg and in push or movsl les hlt ret into push loop lcall sbb xchg in push fwait idivl fistp mov mov and inc out insl (bad) jmp cmpsb mov cmp mov inc jg (bad) dec push push test (bad) mov gs and scas push jae ja add es xor cmp ss iret pop sbb add mov push fadd pop xor mov scas xchg cmp lcall xor vpmulhuw add in lds movsb sbb rorb out test adc bound enter rcrl mov lods inc add int3 xchg pop fldl cmp and pop dec in cmp mov mov inc jnp sahf jmp fsubl cmp cmc addl orl and scas lds cmp mov inc int push mov pop dec push jns inc push outsl inc adc js subl aad fwait adc mov mov mov xchg in sub pusha (bad) push sar push sbb xchg xor mov cli ja sbb xor ret sbb and out and sahf test stc repnz sbb push fucomp mov push movl dec push int mov ror cmpsb add clc or andl mov js add mov or jle,pt xchg (bad) hlt ja pop popa into sbb iret and mov popf jno dec adc push pop cmpsl test cmp test push lret rcll add movsb xchg icebp mov dec test pushf xchg xlat mov fwait push shrl icebp push pop jno pop dec mov cmp sbb and mov jmp lock jmp sbb js shl insl stos jb add pop push clc or sti ss fsubrs jp cmc loop xchg cmp (bad) xchg idiv inc or mov sti stos jb mov lahf pop dec (bad) cltd loope,pt rorl mov (bad) pushf jecxz adc inc cmpsb decb xor pusha mov repnz mov sbb xchg ljmp inc outsl test lea xchg fisubrl push movsb loop cmp iret xor neg xchg or sbb inc mov mulb xor or add dec out imul jae sub je dec xor loop sub lods not inc cmc mov sub inc movsl xor push repnz lcall xchg or mov in push or leave mov test (bad) mov jno fnstenv cmp lods push or insl loopne cmp in in imul mov mov mov push sub (bad) sub mov ret ror sub loop xor loop lds jl fdivrs jb fmulp jbe add xchg and ret adc sbb xor movsb push aad mov arpl stc or mov add pusha or inc movsl in dec inc adc sbb push jae and xor dec sub fisttpl rorb and mov push xchg loope aad (bad) cmpsb adc push lods je xor and mov push pop mov mov arpl leave loopne shlb mov cmc jae pop cmp jbe int pop outsl mov jne mov outsb or lock daa and jns fs fbld cmp in dec mov data16 outsb stos lds lret xor mov out (bad) ds push out rorl fucomp xchg mov or xchg lods das sahf jecxz aam stos mov xor das sub insb mov jp cmp xchg cmp (bad) fildl stos xorb pop adc in aam jb js hlt sbb js orl into or pop pop in jecxz or cld mov enter aam cmpsb inc inc arpl jge notl adc aaa cmp xchg push hlt ret out outsb jp push jle and xchg addr16 daa push mov les aas mov test pushf push adc jbe setge (bad) or xor pop ljmp push movsl mov xchg sub mov lret xor inc add cmpsl mov and cli xchg mov add ja test test repnz fdivs xchg xor mov sbb stc mov pop jno aam push leave sarl pop inc call mov mov mov jb ret jbe and jae add das daa mov mov inc cmp dec dec adc mov and lret divb pop clc cmp xor stc les jg js cvttps2pi inc ror insb adc push hlt pushf jl popf push xchg dec rorl adc push push mov add push (bad) out (bad) push pop sbb mov push jo out sti sahf mov (bad) (bad) adc mov call push xadd inc xchg aam or xchg mov shrl jp mov add leave xchg dec dec repz stos mov or jae xchg das dec scas out cmp push push cmpsl and push cmp jge cmp (bad) scas rcll and ror inc (bad) repz xchg jge leave sbb adc dec cwtl push cmp pop adc inc pop fdivl movsb inc sub mov mov inc cwtl pop mov fisttpl push sub mov fadd (bad) sbb das icebp sbb sarl mov test lods sub (bad) xor sbb (bad) sub les sub out js movsl xor dec dec cmp and mov lret dec cmp out gs sbb adc push cwtl jecxz mov cmc idivb enter cmpsl (bad) sub scas pop (bad) cmp sbb out ret adc jle mov sub movsb jp adc inc imul mov hlt cmp xor fstpt dec dec adc dec mov out ja push cmpsb out es push dec scas fdivrl pop dec push mov test lds movsl mov lods pop adc add nop dec js cmp fild ret mov mov mov mov xchg inc mov mov jg xchg xlat stos sbb mov pop jns or in xor jno shrl jecxz loop cmpsl test sbb xor popf fcmovb arpl aas insl xchg ss jp fidivrl sbb into test movb (bad) mov sub adc jae adc sbb xchg or mov out and mov xchg jl sbb pusha mov arpl cmc dec mov bound movsb insl xchg pop xor lahf popa mov int imul dec lods inc ret mov mov leave sbbb (bad) mov mov lods pop push inc loope ljmp (bad) ss ffree jmp ds jne out leave (bad) mov cmpsb xchg in hlt push mov xchg jge imul sbb pushf dec xlat mov outsl mov iret pop inc cmpsl cltd xor ljmp mov add scas cmp dec call imul enter je andb test (bad) movsl mov dec rorb mov push jns das sub and jae xor or ds fucom mov fstpl sbb xor sbb inc and fs cli rcrb jnp jo sub adc xchg push push cmp cmpsb sahf cli and insb jne cs icebp jle inc cmp sub and mov scas or add js sarb loope jp xchg sahf push and pop mov inc pop mov jnp test cmp lahf sbb (bad) arpl lock jae mov push jmp in cwtl je jns loope mov lret push pop or cmpl mov es add rolb fnsave xchg sbb pop data16 aas gs push and xor push push or (bad) stc push int3 mov int (bad) mov (bad) mov jno jns pop test aaa mov xchg scas int mov add outsl pop jg mov std (bad) in sahf inc mov push mov inc and lods imul xor stos insb flds fnop leave enter mov push lret cmp subb jno cmp sbb or insb sub push jne pop test sbbl pop sbb fs dec jp dec sbb fidiv call das js in mov subb dec (bad) iret dec fiaddl (bad) xchg mov xorb mov cmpsl stos ss or sub scas dec int fildl jns cmp dec mov xchg cmp (bad) and mov jb bnd or std ljmp xchg pop xchg ljmp (bad) loop sub jns imull lret mov mov mov cli sti pop push mov rcll xor sbb dec xchg ss xchg fnsave mov stos test lods add cmpsl cmpsb mov into and ja fwait cmp leave shll jbe rcrl rorb push adc cmpsl fcoml dec inc mov mov push hlt lods loope test or lea mov mov out inc sub das xor adc lods mov mov mov xor and xchg les mov cmc dec lea and mov xchg sbb inc enter push inc xchg sub and cmp or outsl fimul xchg jae (bad) push dec dec cmc bound into outsl add xadd adc cmc sti lods or test fimull cmp insl gs sbb in lea mov cmp push out lret ja mov gs pop cmpsl xchg les pop popa test outsl aas xchg xor push (bad) (bad) ds pop inc sbb (bad) cmp incb jg cmc push fdiv push push cmp push push dec cmp push mov cwtl mov jg pop jne push jp push pop sarl inc adc mov jle add and addr16 lds cmc xchg aad or or mov mov dec ja xlat rcrb iret sub xchg (bad) lea sub pop mov add add pop imul es push sahf and jle add insb mov das jnp inc jo (bad) std lahf add cmpb icebp add inc movb push aad (bad) cmp add mov fdivr insb push pop xlat cmc cmp sbb mov adc xorl sub push (bad) test test sbb out xchg imul jae cmp sub frstor cmp imul mov fdivs sti repz pop movsb rcl pop jmp dec mov incb aas (bad) fcomp inc imul sbb or inc lcall leave mov rcrb clc inc lds mov xor mov push adc add cwtl xchg mov or (bad) rorl xor nop or or in jmp pop or cld bound cmp jle loop push sub subb in mov (bad) push pop mov xor push dec xor dec push or aaa ja push in arpl js xchg jno jg sub jb arpl lds es (bad) xor (bad) push mov xor orb adc push fidivl adc push pop mov test jp test add int fcompl push scas sub daa out push adc jmp rcr xor push into pop loop sub adc mov shr iret cmc mov mov pop push (bad) clc xchg lds mov jns std xchg ds shlb aas pop and popf pop fildl (bad) rcll sub data16 pop mov adcl and leave pop int mov sbb pop or in imul mov js mov push out mov pusha cmp cmp popa aam cmp into notb pop mov push mov dec andl leave and or int3 addl fisttp mov dec movsl xor lahf test in cmp roll test or test xchg and aaa mov fwait jecxz cmp cmp sub cmp mov sub in inc sbb mov adc inc ret or rcll cmc loopne ret add pop push or sub addr16 adc test into mov jbe sub cs push cmc xchg inc xchg xchg xchg xor xor les js rcrl xchg xor xor (bad) jle xchg sbb lock aas adc cmp out insl push in ret imul push add outsl jmp push jge or out xchg xchg das cwtl mov mov (bad) adc insb sub xchg xor fnop mov sub (bad) out pop (bad) fyl2xp1 movsl rclb data16 (bad) aad pusha xorl js ds and mov movq pop inc fimull xor aas out scas jnp decl shll adc mov mov imul stos sbb fs jge mov push ljmp sub fmuls aam pop inc jp dec pusha fdivrs dec xor mov xor arpl loope mov push jge out xor and and lret lea icebp cmp sbb negb adc nop mov xchg mov pusha cli adc cmpsl subb push inc lahf stc dec xchg sbb loopne fstpl jno leave in lcall aas dec mov adc pop popf dec push ret mov jno daa daa sarl call cs sub bound test or push rorl test add dec (bad) gs loopne push stc pop test and outsl jae sbb js out dec mov cmp cmp jge pop lcall inc jmp xchg pop dec test arpl es fdivrp dec pop into negb jp pop mov mov inc mov jb clc cli inc daa pop xchg outsb cltd add das sbb sahf sbb mov xlat and insb (bad) lret jo lods xchg dec (bad) fldl fiadd cmp mov fldl ljmp es sbb sbb lock aam fs hlt aaa outsl inc inc sub pop xchg mov out add sub outsl pop inc loop jo in adc loopne int3 mov or mov loopne sub mov sbb adc cmpsb idivb mov int3 test movsb jno jne or stc mov mov and daa add cmpsb jg lock fisttpll rorl add fisubrl shlb add or cmova les dec out outsl xor lret fs ret outsl sub inc jl js js lods int dec and pop pop add outsb push inc lret mov or cwtl movsl pop mov es in sub dec popa mov adc mov imul test test orl aad cltd mov sub repz or jp (bad) xchg inc add push mov notb adc addr16 mov inc adc push fadd pop ja pop push jle ffree mov xchg dec adc push addl (bad) repnz inc mov jecxz sbb repz std (bad) fsts cmp in fs xchg mov xchg (bad) or fildl adc mov add out movsl jecxz or je mov or hlt or dec add push (bad) (bad) jg sub lock sbb lods xchg mov out js stos mov xchg mov jae js push cwtl ss adc fucom pop dec mov inc repz pop jb pop xchg icebp lret enter inc xchg sub in pop mov dec shll pusha data16 sahf and mov cmpl mov mov push ljmp fisubr mov inc mov cmp fimul and mov mov sahf xor in jo pop mov aam push mov xchg mov adc xor xchg les push mov pop test fiadd sbb or loop stc je out ret pop pop outsl jl sub sbbl stos push add daa sbb outsb fwait inc jbe andb and dec jl push inc jmp push cltd inc dec (bad) mov mov ljmp and xor (bad) fstpl mov fild arpl dec lret adc into shrb fdivl jg push adc cmp int3 mov add xlat sub sbb and push dec test dec inc xor iret cmc gs pop popa cmp fstps test ret push mov cmpsb push inc mov mov xchg not scas in sbb enter sub push jno add test scas in lcall int3 xchg rcrb into test push in sti jg cli (bad) xchg or sub jne inc cltd je lods stc pop nop lods das mov insl rcll movsb loopne add push mov dec stos popf push iret add lock mov fwait jbe push sbb sbb movsl xchg je je call scas xchg fstpt mov (bad) mov les pop sti sub sahf push mov neg push or pop or jl mov in xor push push push pop in scas adc aaa mov cmp mov je,pt inc mov mov mov mov ret imul mov xchg ret dec adc mov cltd mov jne xor addr16 lret push mov rcrl loopne pop insl mov movsl hlt jbe push fisub aaa adc xchg pop sbb mov rolb dec jp rcl push outsb ficompl mov sub cmp frstor imul mov test mov pop push (bad) clc add into movsl or insl adc lds dec lcall add sbb inc fimul push fcomps cli call mov push adc adc nop andl mov idivb and repz out mov mov lock xchg rcrl repnz std ljmp push shrl pop lahf or jge call les lods hlt lahf je das aad fstpl xchg add dec sub lret pop fs cmp cli push out (bad) jg in dec cmp mov jle out mov lcall fdivp jne xor pop mov mov and rol push mov sbb and negb mov clc aam xchg aas adc mov insb cwtl arpl sbb jmp int3 outsb cmp movsb sbb xor fdivrs mov and dec sbb fs fwait (bad) ja notl imul lods mov cltd or popf bound and lahf jbe stc (bad) (bad) (bad) mov rcll repz jbe pop out push out scas sub mov cmp jo push rol dec sbb out xor movsb cmp icebp lds divl sbb scas and xor ljmp jno or in nop out ljmp outsb (bad) (bad) mov pop (bad) push jns add dec fwait add sub icebp xor fsubs pop lret data16 lds out gs cld enter dec dec inc into mov jl lret scas xor daa in pop enter adc xchg mov sub lods out loop int3 add insl (bad) movsl dec inc iret mov leave jnp push or outsb imul inc rcrb mov sbb pop and imul xchg or (bad) xor sbb sub adc addb push popf inc loopne and iret mov jp mov push iret inc mov add mov mov mov test pop xchg cmpsl jb rorb (bad) in arpl mov ja inc mov out js jle mov jmp push jmp fldenv dec sbb sub rcll fiadd mov mov cmp push inc xchg cmp bound cltd not xor xchg sub mov inc jnp mov les test dec xor or fmull sarl imul out shrl jg mov test push xor fiadd mov sti add clc enter dec out je out jne cwtl in pop mov mov fdivrs xchg jns popa pop add jns dec sub or jle lods pop sub inc mov xchg xchg jge fucomp lds enter mov push sbb add fxtract or jno jo dec inc add mov add or fcmovb mov popa inc lea push xchg xchg pop lea loope test jl jmp xchg xchg aam fscale sahf data16 fstpt sbb jp iret lea push ljmp xchg pusha mov subl push pop iret cmpsl mov dec adc inc jno and sbb fisubr cld (bad) xchg ja scas xor loopne es sbb fcomp pop mov dec sbb jns cmp xlat sbbl mov and out (bad) and xchg out jbe inc (bad) hlt or mov daa sbb or and adc sub pop fucomi xor xor pop push negl mov or out cwtl xchg push test cmp out ds add xor push cwtl lds adc or dec lds jb into mov rcrb xchg inc jno fmulp sbbb dec xchg fistpll jp outsl out ja xor cmpsl add xchg mov xorb and mov adc or adc out int3 nop aas xchg insl push pop repz imul aam dec sbb jl lods adc xor nop fstps fnstcw inc (bad) lret jecxz out mov push jb fidivr dec pop pop movsl mov js mov addr16 (bad) push add cmp pushf int3 xchg cmpxchg xor dec cmp dec mov inc push gs sbb xlat aas cmp adc mov pop push outsb or lds dec ds jg rolb je cs arpl inc int3 fbld push mov mov scas je mov cmp popa mov cld mov fwait cmp ds ds sbb clc mov cli inc add loop daa or (bad) jae lods jg add mov ret and outsl (bad) imul xlat or dec fistp adc push lcall mov (bad) push roll addr16 out add loopne or mov data16 aaa mov rclb xchg std jle dec sub outsb in sti push cmp sbb fwait jge jg stc es jnp dec movsl leave add scas mov xor in or and call jecxz lahf lds xchg pop pop (bad) (bad) mov lods insb xorl jb je dec mov and xor clc and xor repnz xchg sti dec les push jae adc lea jge shl leave lods add leave insl push push cmpsl (bad) das xor pop in push ja movsl cmp push dec lods (bad) dec sub insb add dec or sbb clc dec and int3 inc (bad) jb dec mov scas notl jo adc xor adc in ret pop sbb sarb dec inc adc mov iret fsubp sbb cmp iret cmpsl xchg lods je (bad) xor ljmp ljmp or sub pop mov hlt pop mov add rorb aas mov sub jl outsl hlt repz icebp jecxz sbb bound mov push adc mov push inc inc jmp lods lds dec push mov mov jbe mov lock and call mov xor loopne push sub jmp in mov inc push cmp and lret mov jne pushf lret and push pop mov push inc dec adc cmp sti hlt ret pop outsb fadd hlt dec jb mov xor enter fistpll xlat test or jno (bad) divb xchg imul arpl rorl cwtl add dec bound arpl add adc mov mov push pop loope (bad) or ljmp mov lods or and (bad) mov push dec je in cmp jnp into pop pop (bad) test popa movsb adc fstpl js cmpsb sub xchg mov (bad) repnz xlat test sub ss rclb cmpsb pop or fmull fimul loope jbe ja cld das lock xor loope sub push mov mov dec test push xor and adc jae,pn sbb es mov pop scas fdivrl shrl add dec sbb jl imul jbe push std and (bad) fisubl loop add or push or pop adc aaa mov ss mov xchg sahf addl stos (bad) out push mov stc pop je lods jl test cmp or gs not fstpl pop xchg or and sahf cmpsl sub cmpsb aaa pop mov addr16 jb mov push sbb push mov ret push sub inc cmpsl loop xor xchg jp jb jl mov inc loope mov gs iret xchg sbb pop jg jne inc and sub add and sti cmp inc adc stos sbbb mov ret (bad) out lock (bad) mov arpl aaa aas sbb push in pop push loopne xor hlt pop mov or add sbb mov out ficoml fsin pop lret dec or xchg mov aam loopne mov sub aam pmulhuw xchg mov or push jmp ljmp push sti jge aad aam pop adc lret ds sub cmp fisubr ds outsb ret mov aaa cltd cmp xchg pop mov sahf insl ss icebp cld sub dec cmpsb iret mov xchg es (bad) jne test xlat lods loopne out or sbb cmc stos aas and or jno sub lds or sub pop adcb inc dec out adc pusha dec xor sub sbb xchg int3 jp adc addr16 loopne dec push nop ja insb (bad) stos neg mov mov lret mov cmpsb mov add push jecxz mov pusha adc xor adc test jmp xchg je ret pop (bad) jmp sbb mov (bad) mov mov arpl xchg or cmp shr cmp aas shl fdivrl ja push cmp mov aas gs push sbbl stos inc (bad) mov jecxz push jp cli mov mov (bad) xor jge sub sbb icebp lea jae (bad) enter fnsave dec mov and mov jno hlt sub xor add mov inc outsb or insb lea mov mov loopne setno add mov xor lahf cltd xor add es mov aas pusha fcoms jmp mov fnsave test js push clc adc mov lods inc aas xor sbb pop push notl shl dec test adc ud1 push jmp xor (bad) rorl ja outsl xor (bad) mov mov cmc das in loope rolb dec add repz scas inc add push mov popa dec add add (bad) dec jle mov jo enter andl outsl mov mov ss xor cs adc (bad) or add cmp aam sub (bad) mov bound sbbl jecxz loopne adc jnp xchg and inc and add sub dec sbb jmp sbb shr lret enter pop daa xor jg call shl mov addr16 hlt xchg loopne fbld test sahf sti push mov xor stos push dec sbb scas and pop repz (bad) ja jns faddl sbb sub jnp or cmovnp xchg stos xor inc (bad) xchg in inc ds or or aad flds movsb jo pop and fs js adc sbbl cwtl lret or sbb pop je cs fwait (bad) lods gs xor xchg push (bad) leave cwtl pop pop aaa dec push dec mov fwait ret jne scas lods rcll and out adc fwait popa push hlt loope incl pop mov jns gs xchg dec mov (bad) or daa das (bad) mov pusha mov mov aas sub mov inc aam bound mov push movb les faddp dec aad cmp xchg divb mov aaa mov sbb push sub sti and xorl jno mov and xchg xor adc int push adc cmp cmp shll fisub and mov cmpb jl pop push and mov fidivr rcrb push (bad) fildll fs adc aas cld jp push pop push popf hlt inc or mov add sub or fstpt into aas push pop leave out mov sub imulb jmp xchg xchg push addl jecxz xchg add xchg push test push mov mov add dec add fs pop adc mov jl (bad) jns iret jbe mov sbb jae pop mov mov aad push cmp sbb inc dec test lahf sbb push sbb clc ja daa ljmp rcrl or sbb xchg xor enter sarb xchg mov (bad) js fwait add push sbb pop outsb inc jno add adc and push icebp pusha inc int3 inc and mov sub rorb into test mov cmpsl icebp sahf push fdivrl dec jno cmp xchg and mov or in or adc mov pop jmp fildll inc add lret rcrl xlat fisttpll fcomp fdiv insb and aaa push mov push inc mov add popa xchg js out jno xor bound cld inc pop lock cmp daa loope bound push push xchg pop cli mov cltd repnz popf into lahf subl in add fsubl cwtl dec stos and dec add adc cltd dec sub iret movsb (bad) sub or push mov repz xor or lods mov popa inc hlt pop in idiv xor jb stc pusha lret pusha daa test icebp (bad) lahf cld test rclb push push imul mov in mov cs xchg scas popf cmpsb push hlt push clc into lock lcall cmp dec jne jae xchg and sarl call fmull ret or cli sbb fs pop adc lret mov xor mov sub scas cmp xchg xor aaa pop add mov xchg and pusha daa or pushf in cmp je xor in adc or jbe clc outsl movsl loopne fcompl jnp mov mov inc arpl int loopne pop test dec je test xor mov pusha clc push data16 popa orl stc lret dec scas and inc xlat fldcw pop pop jnp cli mov inc push jbe jno cld loop jg sub jae ds hlt xchg icebp adc fstl and xchg rcrb fmull fbld inc pop (bad) sub mov data16 addr16 pop movsl inc andl mov (bad) and mov test dec xor push inc fstpl adc adc add rcll icebp cmp int dec mov rcll in push adc and shrl addb lea hlt ret xchg pop std push rcr in jl ds scas dec and push out cwtl cmp xor inc (bad) jbe pop rcr in jge jno stos pop xchg sub or xchg aaa and or lods and outsb imul cmc pop test int enter rsqrtps jb (bad) mov jno je dec cmp cmc nop dec fstl sbbl in mov mov mov pop cwtl ja and dec mov outsb adc mov scas enter sbb cltd sub gs xchg out leave mov imul stos adc ret clc jmp rcrl mov fadd aas push dec fild mov push hlt scas cmp dec leave mov jl fsubrl (bad) mov cmp sti inc xor inc outsb adc mov or insl jbe loopne cs cmp cmp xchg cltd dec or cmp scas add pop jns rolb mov (bad) out add (bad) leave les mov into mov fcos and and push jecxz mov nop out push loopne and in testb fcmovu fyl2x data16 test or aam adcl in lods das (bad) push cmpsb push hlt bound sub movb stc loop mov (bad) mov out xchg xchg test jb int3 push or sbb cmp jb iret dec mov mov or daa pop push inc push xchg aam cmp aad cwtl adc sbb daa call out (bad) jge mov les cltd nop add into shrb xchg cltd (bad) push and mov jo,pn pop push repnz ss bound cmp jecxz jp sbb sbb pusha (bad) mov out (bad) ud1 lcall inc adc mov das jae fisubl cltd fwait dec xor (bad) xchg icebp push cmp inc orl lock add ds add dec lret push in pop xchg xchg (bad) xchg xor jg cld sar cli fwait push orb mov mov mov xchg stos and or (bad) pop jp xchg or lret adc std and stos outsl jns adc movsl fwait dec pop push movsb dec inc inc (bad) push mov jns cmpsl movsb inc movsb (bad) adc adc jle movsl stos push dec jnp fsubrs adc xor out adc adc push xchg das xor cmpsl jae sbb mov movsb test fdivr scas add stos ja cmc xor sar dec cwtl push add repnz getsec clc incl xor mov sbb dec mov xor xchg inc mov lahf push xchg jge jmp push fninit std popa push shrl jns or (bad) mov inc add pop loopne gs addr16 ds add jne jle,pn (bad) ja es dec int3 inc rolb inc and add ja fs mov mov nop (bad) xor add sub or shlb rol xlat xlat xchg arpl loope rclb xor cmp sub add and imul jmp pop push mov xchg push dec xorl pop inc pop test or xor ret cmp lret inc adc shll out pop jmp sbb push lea test cmp push and mov sbb mov (bad) dec xchg mov fwait push mov push aam enter insb pop xor push cwtl dec or sahf push push or add dec fwait adc add lods inc mov fsubrp lds cmp ljmp (bad) xchg imul insb mov push or xchg cmp clc mov cmp mov cmp rcrb inc push inc xchg int mov fdivs pop rcrb jmp int3 adc mov adc les sub jg (bad) xor stc dec push jnp ljmp cmpsb mov fadd dec clc mov pop in dec adc and movsl pop in inc sub dec lds or enter push pop sub paddsb daa add sbb sub sub insl (bad) icebp cmp mov fnstsw or pop aaa das mov in cwtl in stos push shlb and inc aaa mov xchg test inc mov add xchg push mov jmp xor icebp pop cltd iret mov ds and xor ss mov mov xlat mov (bad) jno jns subl data16 jecxz xor stmxcsr and ljmp push xor scas add mov mov je sub repz inc mov jle jno cmp inc into mull sti jne out gs mov scas cmp sub and jmp jmp push dec in adc lretw pop dec xor pop out xor cmp testb rcrb into pop mov adc and (bad) cmpsl in or add fnstsw and cltd push into repnz les enter hlt jge xor scas sahf cmpsb adc icebp xor lahf fist mov xchg inc (bad) jns loop fildl test sbb in pusha jns or cmp (bad) jg mov jb xchg inc stc jo jae jnp lcall (bad) jmp pop add jp mov mov or shll or loopne xchg or sub aad push fldl push adc xor es push (bad) jecxz mov in das pop hlt movsb in idivl cmp inc ficoml push insb push ljmp adc mov inc jge mov ds (bad) and mov repnz adc into imul xchg call movsl aaa inc sbb stos ret lock popf push adc add mov add xchg jmp lahf and out mov insb test js adc add jg test jno push insl out mov fs mov adc cmpsl movsl add sarb stos dec push cmp inc outsl outsl (bad) lret sarb ss repnz push push jae call jne test jge mov inc jno enter push pop ret adc lcall and mov ja movb stos cmp push cltd arpl jno nop inc mov scas pop pop insl jl sbb (bad) (bad) mov jno cmpsl pop nop dec push dec lret jb pop sbb cmp mov inc (bad) lret (bad) iret mov fwait pop ss mov sub mov mov or xchg mov xchg pop dec sbb and insl inc fldenv dec pop xor xor sbb xorb xchg into test sbb lahf xchg mov sarb lahf or jne dec dec jl cmpsb mov or pop mov and cwtl and jb movsb pop jl rcr test les loopne and pop lahf cmp sbb inc inc jg pop dec push or jecxz cmpsb pop mov lods in mov mov rcrb jbe pop mov mov sub push cmp in insl out sarb outsb cmpl mov aad rcrl push push mov fld jno xor in cmp (bad) jbe fisttpl xor call xor inc mov or mov and fisttp or in jno mov gs (bad) mov dec popa mov add mov jle sub push fsubrp scas pop (bad) in add add adc pop fdivrs out arpl cmp outsl adc rcrb sbb push ret and mull jo sub add mov pop orl pop rorb mov mov cld dec push xor dec shrl dec loopne sub pop sbb rol sub cmp lods not fstps int push inc insb popf imul pop xchg or loopne push adc aam pop pop aad les jno inc push push sahf and mov add sub dec sti mov jmp mov push xchg fwait (bad) leave dec mov in ljmp insb bsr xchg cmp dec cmp loopne leave (bad) enter and les adc into data16 cmc lds inc cli sahf adc shlb jnp add fisttpl pop out push adc inc fldenv mov xchg mov (bad) xor inc test pop out pushf add sbb xor (bad) loopne ficom mov mov cmp sub add cmpsl in loopne (bad) cmp add pop jno inc pusha cmova out enter cmp pop and cmp pop adc (bad) jns in out leave and add inc cmpsl insb pop es cmp lock mov or bnd dec xor scas nop sbb xchg adc orl dec das pushf icebp std sbb mov dec das inc xchg add lret and xor test movsl sub outsl (bad) iret sub xchg (bad) js mov xchg cmc and stos lods jecxz mov adc cmpsl pop pop stc (bad) arpl xchg or xorl mov xor dec scas xchg adc lahf out scas outsl cmp adc xor jne hlt js ds data16 fcmovnb push jecxz mov das inc or cmp push call push outsb sub cld sub call push dec mov jnp dec cmp fwait pop fs stos lret or movsb mov imul dec mov out repnz pop fwait sub xchg jge test fbstp movsl scas fwait sbb push mov mov jnp in sub mov out pushf jne xchg jg sub outsb idivl icebp and xchg leave les int fimul sbb lea loope push push fmull dec cmp or xlat mov js xor (bad) movsl mov jbe icebp add imul push pop mov dec or (bad) out imul aam std mov push (bad) inc adc and and call sbb xchg decl mov xor xchg test pop push and pop arpl sbb jle mov push aas inc or shl mov or mov add das imulb int3 lods scas nop jb icebp xor or push pushf cmpsb xchg cltd decl popa ret bound aaa loopne (bad) jbe mov and sub dec daa stos jbe push std push addr16 cmp jnp lahf sbb (bad) push addr16 into ds inc or pop insl jmp loope movsl not clc shll in stc rcll jle dec (bad) pop out fimul (bad) fnstenv aas mov inc insb loopne xlat pop test pop ja subl cmpsb xor lret nop add and xor mov subl xor sub mov mov loop jb gs inc sbbl repz sbb cmp test sbb jno in or test inc xchg pop sub jns inc imul mov ja jle jle or mov or fnstenv mov and add stos stos insl int3 add ds fisttpll pop lods jbe pop add hlt and and movsb mov cmp divl xor adc popf fdivrl fstl pusha xchg push sahf inc repnz sbb hlt stos stc mul stos std dec out outsl or icebp or adc sub xor add (bad) pop jmp (bad) dec fidivl (bad) sbb push faddl cmp lea negl inc push test and fmuls dec pop inc into mov push insl test lock cmc jecxz pusha in ficomp dec dec sbb push inc out mov pop out inc cmp and xchg insb loope sub dec xchg xor fsubr xchg xlat repz (bad) push adc add mov scas cmp dec and lods stc (bad) pushf jno add adc in inc aas mov sbb mov sbb (bad) jb lret enter insl xlat mov hlt pop pop adc stos es in fwait call mov adc fidivr cmp fsubrl xchg add out (bad) mov das mov sub bound mov imul dec int (bad) jp jg jmp subb sub (bad) or fisub test or outsl xor pop push pop and xchg imul lock int shrl ljmp jns push std xor or mov push (bad) and clc nop div push pop aad dec sbb out test test dec adc and jo testl or ss int mov push ret xchg jne xchg pop repz inc cmp in sbb dec sbb (bad) and stos out aas ficomp mov sahf iret sbb add (bad) (bad) (bad) incl add add add add add add and add push add add sbb dec push fs pop pop jp cmp push jno xor outsb jae je push push add add and push xor push jbe jne inc xor jne dec inc push popa bound imul push push push push add add and jo outsl inc inc inc push xor push jb push push push jp inc insl inc inc xor je push add ss dec cmp push push inc inc popa dec popa ss popa dec inc xor imul imul push add add dec inc push pop xor jb inc push push pop dec push popa jns pop push dec outsb inc xor pop add add pop jp dec jo xor inc dec dec xor push or add and inc xor dec inc bound jno push inc imul push pop gs bound push pop jae or add sbb xor jno push push je arpl inc push dec pop ja dec push outsl push inc jb or add sbb dec push gs arpl push xor cmp xor jbe ja push or add sbb inc dec inc outsb addr16 insb push push inc pop inc jns insl xor addr16 jae inc jo or add sbb inc jne dec insb push insl dec xor jbe jb dec ja jns inc inc push or dec cmp push inc push dec je xor insb data16 dec inc jb cmp dec pop dec xor dec bound push add add dec jb aaa ss je je xor outsl xor addr16 aaa push push push pop jo cmp push addr16 outsb push sldt add imul inc inc inc dec xor jbe push insl push dec push inc jbe xor dec push adc add sbb jp dec xor xor inc js push insl jne push arpl push xor adc add and push imul insl inc dec push insb jno arpl bound pop xor jb dec jno insl xor adc add daa dec imul jne pop dec xor arpl pop inc push inc arpl ja inc je cmp outsb push arpl dec inc xor add jne addr16 fs inc jo push gs push push add add push outsb outsb jno inc inc inc js push gs dec xor adc push jno push jne push je dec push xor popaw jae push js push add add inc dec insb gs jno cmp push outsl outsl imul xor pop aaa dec inc popa xor outsb xor popa dec push push push pop add add js bound gs push ss xor jbe xor inc bound jp inc xor xor push sbb add and jno ss push inc jo push imul push push push cmp dec inc xor push inc push sbb add and push dec dec inc inc xor push push dec jno dec jns jo jns dec dec cmp xor outsb push push outsb cmp sbb add pop dec jo dec bound je push jo xor imul dec xor inc inc push xor add sbb pop jo push inc arpl jp push js push imul sbb add sbb arpl inc dec js aaa push push inc ja dec ja push imul sbb dec inc outsl cmp dec push dec inc dec outsb dec jae inc imul push insb push pop push push push add add ss inc push inc jno outsl xor xor data16 imul add sbb push jo outsb xor xor jb push gs jno dec ja cmp push and add daa pop inc jno push inc jb xor dec push xor cmp insb jb xor jno inc push xor dec xor jne push push push push and add sbb inc push arpl imul dec cmp xor jb cmp xor add js push dec jp cmp dec jno bound xor and add and inc dec imul dec bound inc js push insb jno imul cmp push jb dec xor dec or and add (bad) pop (bad) sub dec push punpckldq jmp add clc fsts sarb sub adc add icebp mov scas inc mov mov fstpl lret iret push cli les xchg sub scas sub notb sbb lcall decl pop xchg mov or aad arpl dec ror inc mov xchg push jl and xor mov mov sub sub push cs iret shlb add aad mov sbb negl fwait icebp jge leave xchg sbb push pop cmp xchg scas aas cmp pop insl popf add (bad) enter inc mov xor add push push add sub jmp xchg jns sarb stos xchg bound bound int3 daa cld or mov incb pusha aas (bad) js jmp jns enter js pop jp scas out and xor pop mov dec ds push stos cmp xchg mov (bad) rcll dec jnp repnz js not repz pop jmp bound add push mov dec popf mov in jbe push loopne in jo aas ficompl push shlb pop aam push nop sub push ljmp add add aas enter or cmp out add xchg xchg mov iret mov pop mov cwtl outsw shl push xchg adc mov mov daa in adc mov sahf out cmc inc adc daa je subl jno or idivl icebp dec dec mov push pop cmpsb jo mov cmp cmp gs sbb push jo add sub ljmp jns sti in int3 xchg pop (bad) jo inc sub cld sub inc stos sbb mov jecxz cmpsl jl lods lods dec mov or ret dec lret cmp shr xor testb in shll mov lods mov test sti imul push loopne push pushf ret adc nop push adc fcomp adc (bad) fwait das (bad) outsl push jno aam xchg add push (bad) xchg mulb jo inc cmpsl inc xchg dec sahf mov int in loopne jp ds std jns jbe inc push push sbb cld jne jg fnstenv pusha dec push and jle enter or out orl mov pushf jo rcr sbb mov shrb xchg sbb jnp arpl mov mov pop leave sub and data16 fdivl ljmp rclb mov push cmpsl shrl fistp dec setge (bad) (bad) (bad) stc ret dec insl jne pop mov cmp pushl scas cwtl fstpt adcl inc jns lahf popa int or daa or pop aad scas sub or in iret in xchg out xchg dec sbbl push mov inc sbbb lea push ret fs shrb mov jae test popa jle out fmul repz fwait cld mov dec stos in imul xor and jp lahf and subl mov stc cmp ret jno loope js or call and xor orl or xlat inc hlt cld popl mov push dec addr16 jmp push dec pusha les lods aad inc mov mov mov sbb push sub dec and pop sahf xchg fcoml out mov inc out out jmp push gs cmpl inc orl mov cmp mov dec (bad) into js jp nop jne pop sbbl int3 cli inc xchg (bad) sub aas aam fdivs test adc sub movb jns jns mov mov sar (bad) stos in or dec inc add popf fdivs movsl sbb xchg mov xchg push pop pop sub jl push adc mov xchg inc sbb inc aam adc xchg add pop icebp push imul inc jbe test sbb xor clc mov loopne mov (bad) adc ret mov mov scas std sub out in in add aas sahf mov mov pop dec test inc xchg popf sti jns push xchg adc push shrb dec push or cld mov or pop pop pop jge and jnp push jnp mov pop inc and push xlat pushf gs mov mov (bad) cmp int sbb test stos mov repz jns ret mov inc sahf pop ljmp stc and cmp mov sub int3 mov ret push xor pushf push mov jns loopne adc fs loopne fs sub pop mov xlat lcall mov test sti pop mov adc addb je and dec into outsb scas mov out cld outsl lods pop (bad) xchg pop aas push in jle in mov sub movsb loope (bad) adc jle scas dec cmp push aad dec add push icebp mov push loop mov loop aam jl lds cwtl neg nop popa leave jle mov mov push aam lcall adc fnstenv xchg add leave dec jecxz dec xorb push inc dec add xchg int and add sarb cmp mov adc inc rcrl cs jns decb jae xchg aam push out mov aaa dec fsts jo shlb mov dec fldl2t lods mov xor xor and fsubrp mov xchg xchg sarl scas cwtl or or es dec neg inc jge xor imul test mov fistp and lods je push jl mov sub jbe std les push es dec dec jl and movb dec scas jmp sub push cmp mov mov adc jg inc sub jmp lret lods inc cwtl pop push add (bad) addps mov sub sub mov cltd mov jno movsl pop xchg scas repnz repz mov mov out stos loope (bad) verw popa xlat push rolb jmp sub int nop mov push clc mov mov xor loopne xchg pushf nop mov mov mov sbb jp (bad) inc xchg jge stc in ret cld push inc stc mov enter inc in add adc jae inc (bad) sub mov xor notl adc es icebp push outsl iret movsb mov icebp movsb mulb repnz fsubrs push enter movsl lods add and out sbb sub mov cmp roll xor or push mov adc jb push repz jmp pop loop scas pusha cmpsl cwtl mov and leave jo (bad) sub and xchg mov stos aas mov sbb ret fmuls and add or jmp loope inc mov out sub mov mov adc int bound mov aam movsb cmpsb daa or pop adc std jle xchg int scas popf push jno cmp inc xor jg fbld dec aas adc fdivr push cli or mov cmp mov lea and cmp xchg mov scas cwtl sbb push jp mov (bad) rorl (bad) ret add xor push andl ds or xchg pop push aad pop (bad) sub arpl aaa xor xchg xor xchg mov fistl or mov sub or hlt std xor dec addl nop outsl inc clc in push and mov xlat mov js dec sub lcall dec push lea cmp mov dec es mov gs xor test pop mov mov or cmp or jl ret inc das repz fimull add subl jg mov rol jno mov mov sub hlt aad jecxz sub rorb or adc dec data16 jmp xor mov scas lds lock cmp pop imul jno mov loope push dec (bad) cmc ljmp adc or dec ret cld push leave aam push repz lock cld fld aad imul aad gs int dec or cmpsl bound jnp jl pushf or fs sahf ficomp stos mov lcall mov mov mov dec clc int3 in xor mov (bad) sub fistpll repnz in ljmp push popa jle cmp out (bad) out push mov aam sub pop xor (bad) mov sub std jbe stos addr16 insl xor and addr16 mov xchg fisttpl xchg add jo jno mov lcall into add aas addr16 outsl in or push xor cmp stos aad movsb jmp divl cli push mov rcrb inc and jno sub mov cmp mov adc leave call clc in into fnop cmpsb push pop rcll mov push dec dec aam push outsl (bad) pop (bad) aad push in cmp sbb mov mov arpl repz cmc ret and lcall or mov xor xchg in ja inc sub out lea cmp out stos push nop pop out sub xchg (bad) push mov or aad xchg out jns xchg and mov dec jo mov (bad) push scas sub and jle jno pop inc push and test movsb pop add add sub mov mov lods arpl ret ja xor xchg or arpl pusha jbe push negb rcrl es gs int sbb add and loope sti loopne fidiv movntq or adc push xor jl pop movsb cmp ret icebp pop sti push sub insb fistp pop mov sbb xor jbe jno rcrl xor dec push push jns loope jecxz mov imul pusha jns out lea cmp pop pop rorb jno mov mov cmp (bad) mov ljmp xor jae (bad) and mov mov pushf mov leave rol je,pt fsubs push mov rorb (bad) ds lock xchg mov pop sahf rorl pusha xchg mov sub (bad) mov shr and sub push pop cltd inc inc into leave enter cltd jns mov cld std daa push cmp add arpl or xchg jp sub and sbb xchg cmp inc mov or lds (bad) ljmp inc push es add or mov sub sbb mov int xor adc je lahf xor mov mov push out cld mov push mov inc jnp and add dec lret notl loope hlt or jl pop xchg (bad) jmp sub cli push pusha sub sbb mov pop mov hlt popa xchg xchg mov dec aad mov xchg lods lock fs cld and jmp (bad) stc mov mov mov sub imul repz fild jnp repnz sub push call pop mov je imul out xor inc push sbb fs in vmovdqa orl mov inc leave hlt sub pop mov insl mov insb pop mov jle int cmp jecxz lea rcrb push pop jne data16 xor mov outsl sub xor or jns push xchg mov mov and aas fcmovnbe and jno rorl js or inc xchg loop pop movsb xor mov mov sub mov lret fs mov jge dec addr16 mov (bad) jb jl es lret xchg lock loopne and popa (bad) js pop subl inc pop or jb mov cltd pop test sub cwtl mov mov out xor adc dec rorl std (bad) cmp das adc in push sbb push xchg mov xchg mov xchg imul rorl pop (bad) sbb mov dec nop out das xchg fist xor test jg jle rolb xor xor inc cmp fnstcw or cld xchg call out aad mov in stc sbb faddp inc push jl and repnz add inc and out mov cmpsl mov push into and lcall add sub rolb mov fwait jne xchg or adc insb pop jns mov hlt stos xor dec lock cs push test push sar gs sub fcoms lock dec nop cmp push jne and (bad) or cmc xchg lods lcall jns pop ljmp out int3 mov out push and xor mov jl xchg aam and ficomp pop cmp outsl lods dec mov movsb push imull insl push and xor popf cs mov popf aam xchg jle push jmp scas int3 out add imul in sti repnz jne sbb scas insb ds in dec sub inc mov xor scas xor pop mov out dec fsubrl mov mov mov idivb jbe mov xchg inc (bad) lods jbe inc (bad) into dec insl in psubusb adc rclb int mov out adc (bad) (bad) stc sub sarb inc mov mov rclb inc sub dec ret outsb mov jne ficom gs inc mov jle mov dec dec (bad) fsubl lock mov mov ret daa xchg mov repz mov loope push gs or scas andl sbb inc (bad) std std std sbb and cmp ljmp jno pop mov cs push add cmp adc cmp pop aad test faddp stos leave inc aaa or sub mov sub cmpsb loopne stos lock and cli int jns mov push add pop cmp inc sti std mov loopne or sub out mov (bad) insl mov dec out popf dec clc or cmpsb xchg inc jno dec aaa adc std or lcall scas sub jnp push xchg xchg shrb mov fistpll je (bad) sub and pop (bad) adc stos into rcr mov repz (bad) jne sub stos (bad) ss lods rorl aad pusha cmp push pop outsb lret cmp cld mov lcall sub mov notl sbb ror mov inc std leave jbe hlt imul hlt mov lahf cltd push jmp rorb mov hlt pop cs inc push sbb mov xchg xor sahf and test out xchg ds adc push movsl cmp movsl xor jb out jnp cmpsb jne (bad) cwtl scas xor (bad) repz sbb pop pop cmp and mov decb ja stos fmuls pop loop xchg dec mov pop cmp sub out aaa adc jmp mov and inc daa ljmp or insl and cmc (bad) int xor nop sub mull outsb repz pop jno push test inc pop sub push cmp pusha inc fs jno cmc sub ret movsl adc and nop fstpl push hlt xchg rclb and sub inc ss xchg adc movsl dec clc or jecxz and mov xchg inc insl mov fistpl test cmp push or xor ret jns xor adc popa mov stos cwtl (bad) mov mov leave in fistl push out xchg int3 cmpsb mov mov aaa aad aaa jge dec mov or mov inc jg jbe or dec mov fisubrl add xlat mov imul aaa inc or mov push gs mov jnp ja add and leave xchg scas inc add test add adc or fisubrl adc or lds dec into into jp sbb jb mov xor pop mov inc clc mov nop jb xchg cwtl and sub push rol add add nop fcomps arpl adc jmp pop sbbl popa fs sbb movsb inc iret lahf pop nop in std int3 adc repnz (bad) pop mov imul in (bad) mov jb je lods jns mov cmpsb (bad) cmp das test iret leave adcl mov stos popf test and dec adc adc js jg sbb xlat hlt jecxz loop stc cmpsb pushf pop cltd aad imul iret jno push loope sub bound add cs or pop push and es pop adc out jg orb leave imul cmc call fisttpll jle in subl and mov pop (bad) mov lahf mov ss int popf call out xchg clc (bad) fidivrl outsb les ror and push mov in cmp mov sahf lods lds es cmpxchg setge sbb scas push out xchg push cmpsl cld out scas in ror enter outsl xor insb adc jmp dec mov in mov xor pop test xchg pop les cmp sbb dec (bad) mov (bad) fcomi or fcompl xchg aad in arpl cmp insb or (bad) jge cmp xorl pop xlat jae dec mov popa jb dec mov mov pusha je xor jbe jns rolb sbb xchg call into sub icebp xchg in xor push jo and pop test leave dec int3 (bad) xor lret insl outsl gs dec out inc fisttp sub add lahf mov inc mov and js (bad) jle aas les xor xchg add fsubrs xchg push ljmp xlat mov or xchg mov mov popa pusha push jecxz mov sub and mov lds enter xchg sti jnp fsubrl xorb xor pop push jo pusha pminsw in mov icebp loopne add clc push and stos jge push (bad) xchg loope jae mov andl xchg cmp mov decb out adc adc cli dec mov (bad) pop xor rol into mov sub scas inc mov flds repz stc inc adc in scas arpl pop push xor ljmp cli pop rcll xor jp (bad) cmc ljmp imul mov fimul sbb push shrl and movsl inc daa enter mov xchg test sbb or aad push add int movb test cmpl jne jle mov in xlat aas pop jnp mull or jle,pn inc pushf xchg int in xchg adc pop jo inc gs jns roll imul jmp (bad) fiaddl fidivrl pop fs pop sarl mov ffreep (bad) data16 mov or (bad) jo inc mov loopne jmp and or xchg aam add cmpsl mov push roll test cmp adc cwtl scas outsl ss push add imul xor ret imul add aad movsb leave movsl push out repnz jno hlt jmp ret call fs inc (bad) sbb cmc repz inc push sbb xchg loop idivl inc movsl xchg inc add push cwtl xor jb xchg cmc cmp lret sti xor dec int pop lods dec dec xorb stos addr16 nop xor push stos iret inc mov (bad) addl cmp fwait adc or loopne pop daa stc imulb dec je mov xchg out and stos jne nop and jle pushf mov lahf dec push movl loopne pop cmp add jns sub data16 add ret mov mov outsb sub sbb aad orl cld (bad) popa orb and (bad) stc js hlt andb add je pop push cwtl scas ljmp add jne sub (bad) inc mov mov rolb mov sub mov inc cmp test imul sbb cmp push imulb cli push (bad) mov pop push ret xlat and sub adc cmp mov mov sahf loopne inc lds js jnp lret push add (bad) dec cmc add inc fcoms pop mov push cwtl inc sbb ss jbe icebp cld ror and xor jne out (bad) shl stos adc out ja adc or xchg ds aaa cmpsl daa popf jb (bad) adc lcall sbb or outsb adc sahf into sub xchg add lret jae lea mov lods pop pop xor cwtl cli pop scas pusha add mov dec call cmp cmpsl sub dec aaa lods enter jbe adc adc dec pusha pusha push insl cmovl addb test inc sub lds std push jmp pop (bad) lret mov ljmp fs inc aaa das out mov in push test repnz out or (bad) or jne dec inc ret cmp push aaa addb jns add push aad faddp jge adc mov jne lods in adc loopne cmp mov mov call loope mov jnp js,pt mov inc les jae jmp inc xlat aas loopne inc out loope mov mov (bad) dec mov xchg cmpsb (bad) ficomp into aad sub and or cltd mov pop push kmovw dec jbe scas bswap add mov jl or mov lock push rorb movsb xor lea in icebp addr16 in inc push dec cli sti scas xchg or pop cmp push xchg or adc fildl mov arpl out mov insl pop iret jmp es mov xchg xchg xchg mov jmp cmp scas adc cltd push gs jo pusha push jl mov mov push pop mov test pop sbb mov nop adc mov adcl lahf mov dec add stos xor call cltd mov pop daa rorl scas aaa lea dec xlat and aam (bad) gs push sbb fwait hlt loopne xor cwtl push pop scas lret (bad) and jbe rolb mov (bad) mov cmp nop stos dec cmpsl push xchg sub jl test add shll faddl push jnp seto xchg mov aaa add xchg fnstcw push adc movsb jne push pop add popa mov mov and push lea lods mov ds jnp arpl in mov push (bad) enter les ja dec jge jecxz lods bnd cmp std mov push in aam ret daa adc xchg sarb (bad) pop and mov push and cld repnz sarl xchg (bad) xchg push std cwtl xor inc mov ds icebp inc int3 sbb add xchg push xor fcmovne lods aas add adc jae xlat mov dec loop inc out out mov sti fsts sti in or push cs mov and es aas xchg subl push adc sub xchg sbb decb aad add push jl mov jo inc movsl mov loop (bad) aam adc add insl mov add and lcall sbb push push sbb pop fnop ret fistp jecxz inc cmp mov out lods dec imul mov sti outsl decl jle insb hlt xor push mov mov add sbb int jo adc sahf sarl or dec xchg out sub cmpsl imul xchg dec push into pushf cmp cmpsl test pusha xchg adc mov and std mov adc sub mov add and lcall mov movsl mov cmp lock adc repnz xor orb add add (bad) clc gs xorl sarl leave adc xchg push (bad) jb push dec ja arpl inc cmc mov fsin mov aam aam cmp adc mov test and and outsb mov pop lahf dec popl (bad) mov gs mov das dec cmp push rorl pop gs (bad) jb ljmp std push cwtl jge mov lcall les lds push add mov xorl jb,pn lods cmp shlb sub cs (bad) int3 and pusha aas repnz pop popf inc sub dec mov ror loop pop hlt ds iret jmp mov push cmc out jg in test (bad) jo call sub fsubrl and cmp ds push leave push xor bound in dec popa inc pop test sarb enter cmc and or mov or xor mov pop insl jle lcall icebp mov add pop cmp call jbe inc out mov mov (bad) push push adc mov mov (bad) or inc pop pop ret mov mov push aaa and add outsl sbb arpl or (bad) leave dec sbb and mov or pop test or mov inc pabsd mov pop ret sti gs sbb mov xchg fs xor xor xchg pop jne pop ds push inc mov cmpsl (bad) or aas mov aad push adc sub jg mov sub lock mov mov shld ja jb leave pop cmp fnop or and and and dec sahf addl sbb sub sbb popf xlat fucomip mov imul aad push jecxz nop inc add fadds inc into inc and mov and lds jne fstpl mov pushf (bad) sbb cmp push add pop xchg add int cmp xchg xchg dec loop jbe push out lock sub fwait loop leave pop mov xchg lds and outsb or test cld decl push repnz sbb (bad) pop pop jp scas sti xorl pop push sbb ds bound xor imul lea aam mov ud1 (bad) in adc cwtl add push out sbb adc test cmp data16 es pop dec je jmp imul xchg mov scas (bad) or mov mov popf pop cmc inc add repz xor test pop xlat in push mov xchg ret out into jo test mov adc mov mov sbb stc pop and lock push jp or (bad) sub mov mov loopne stos lret inc inc push popf aam or outsl push adc xorl add mov xchg scas roll adc pop cld repnz mov add inc mov push mov sbb mov adc inc xor mov mov ss jo inc inc inc push pop aam inc xchg jg mov pop rorb xchg lods pop sbb mov dec lahf xor (bad) fldt in mov (bad) mov sbb mov hlt mov lret add popf lods es mov enter in push and push xlat mov ja xchg or push leave (bad) inc (bad) mov movsl (bad) mov mov pop sbb mov cmp sbb sub xor scas mov xchg pop fcompl testb cmpsb js mov jmp inc stos ss push sbb fwait mov add jbe lea sbb mov imul push adc push and adc xor and es dec shrl (bad) jbe daa aaa js fidiv mov cli mov aad loopne sub cli call jmp or aas jge dec das aam sub xor xor mov xor pop outsb faddl adc xchg lret add fdivp pop pop test aam dec pop (bad) push popa push lods in test stos imul mov jp (bad) adc push cwtl shll jbe push lea push push dec jnp inc adc movsb sub inc push dec aam mov ret jo jnp pop jge pop imul and aad hlt scas loope mov mov jmp shrl out pop mov push ret popa add in mov inc pop sbb xchg icebp (bad) mov cwtl dec cs jp cmc arpl loop xchg cld (bad) iret mov mov sub iret mov push pop pop fwait (bad) mov push iret repz push mov lea xchg inc rclb inc (bad) or sub mov dec leave mov sarb xor push dec push lcallw hlt lret mov (bad) and jmp lock cmp lods ljmp pop mov and hlt push mov in mov (bad) js push leave in test adcl inc stos jnp arpl rolb mov ds fisttpll roll jb xchg dec aad jecxz aam mov int3 sub xchg cld push xorl mov xlat adc xchg push lea mov lea arpl scas pushf fsubrl add in nop nop fidiv push cli xor cld (bad) imul add adc adc inc call aad cmp mov es mov xor add xchg inc or ljmp pop jg jae scas ror mov imul inc stos in stos test aaa faddp pushl mov add jp cmp pop rolb pop cmp in call daa pop mov xchg sub mov pop sub repnz test pop adc rol int clc push cli inc xchg test cmpsb mov dec inc pop enter sub pop test out gs repz sub test in cltd repnz cmc inc push out sub mov add lret sbb sahf jecxz scas sti (bad) ja ret xor sub xor movsb add and imul jmp mov rorl add stc inc adc test (bad) adc pop xor out cwtl sub imul leave repnz dec enter xchg adc cltd pushf int3 fnstenv bound bound repnz add xchg cmp or mov (bad) sub rolb pop dec lods movsb and inc jb mov add or sbb and leave lods dec dec xchg cmpb add dec rcll mov stos cmpsb shrl push cmp icebp sub pop insb cmpsl cli push sub insb add ret xchg inc sti (bad) ljmp hlt arpl sbbl inc pop push int3 (bad) xchg jb mov push mov jmp repz lcall xchg insl and (bad) cmc arpl jp jbe mov fs in out sbb mov jae loope xchg fnsave test pop fidivrl cltd pop mov in mov cltd mov (bad) insl sti cltd ljmp pusha (bad) imul or xchg xor shlb fdivrs adc (bad) xor xchg pop sub jp sahf in push (bad) pop repnz mov aaa movsb and (bad) (bad) jl sti andl and push cltd inc mov and jmp jne pop je mov cmpsb push aas jns add pop adc xchg inc popf mov sbb mov in (bad) repz stos test in lods pusha scas ror add js aaa xchg arpl out std roll fwait xor push jg stos cli lods cmp mov lock mov rorl pop or stc or inc lods push xchg mov adcl mov jnp or or inc lret sarl add sti fwait jp cmp lock lahf das sbb movsb mov or stos or mov fwait clc ret lret mov xchg xchg and subl test icebp je lds fs add sbb adc mov xchg mov dec movsl jne in pop aas push mov xor push shrl popf pop bound push aaa pop mov in xchg dec xchg insl jl mov rcll inc jno lret inc mov fstl mov xorl je sub push xchg outsb mov and ljmp (bad) scas imul push or jmp mov sahf pop pop xchg lock test repz mov inc dec pop in addr16 xor stos cli movsb rcl jbe das push ficom push daa mov cmp sub scas nop mov cld aam clc ret nop arpl adc mov xor data16 ficom ljmp dec cmp xor xlat push push out mov call imul (bad) out leave dec call xor loope xchg dec adc jmp dec or dec and testb push jbe sbb pusha fnstenv cmc scas fincstp sarl adc mov (bad) or pop addl cmp notl mov pop pop cmpsl shll mov mov je dec jmp or mov stos sbb pop xor and push loope daa out xor (bad) (bad) js mov or (bad) xor aaa (bad) jmp jge inc out or (bad) push inc fwait test in and xchg fiadd ljmp stos loop int3 stc mov icebp mov je xor mov popf mov pop jl out jmp aas mulb mov pop fldt xor xchg fcom fisttpl sbb xor inc push and add push jecxz dec push cmp cmp pop mov pop xlat xchg loop xorl ficomp iret or or xor daa dec dec inc fwait pop lcall mov or mov popf fcomps sbb test mov lock mov daa sbb or stos lock arpl jge in sub jne sbb mov sbb mov lahf das xor cmp cmp sbb outsl adc adc cmpsb pop inc jns jecxz add pop inc sbb push jmp std sbb sbb mov fisttpl mov jne jmp fdivrl adc nop mov fld push sbb stos sub mov cmp mov ljmp mov cmpsl push popa (bad) xor gs enter mov push in lds lods cs and je seta or ret xchg fwait xor inc pop add shrl add cmpsl sarb xor outsb inc dec xor mov sbb xchg out sti push loopne out insb or ds lock push xchg movsb mov and mov xchg dec push inc adc shrl adc gs arpl mov test fdivrl jnp loopw bound clc (bad) push rcl aam sub aad push or pop mov loop lret (bad) cmp rcrb push notl xor dec loop pop cmpsl mov jbe je mov fs inc inc add sti js out sbb sub add push stos ss jns notb lahf pop push jge shrb ljmp xchg sbbb les mov dec pop xchg ss xchg dec mov in (bad) ja adc ret ret in stos aad add sbb mov cmp pop push mov in xchg in roll imul repnz dec mov sahf movntps hlt (bad) mov xchg jne jnp rcrl std mov idivb stc pop dec push push ror inc test std cmp fildl xor adc testl pop inc cli jmp push aam sbb ret jo mov repz xor rcl hlt bound movsl nop cmp dec nop daa in mov (bad) sub mov or mov add dec add or add lods xor (bad) std and inc pop jge lock or insb shrl in mov dec sub sbb std shlb mov das jl mov fs out ja sahf sbb dec fs aad adc ds lret mov test pusha incb sarb sti les mov out cwtl jnp rorl jl xchg and push jno add pushf scas stc in (bad) adc scas jp push pop nop data16 dec dec push fmul (bad) jo and int pop fidivl cwtl mov inc scas and mov sbb ret ret cs jbe nop xchg sbb pop add lds jae jg xor lret mov pop imul sub daa adc mov sub pop insl mov jnp,pt dec (bad) cs test aas scas jno xchg outsl lods ret pop pop push ret sbb (bad) imull sub cs fsubs and mov mov sbbl mov fnstsw add sub out sub dec mov je mov test insl lds je loopne repnz dec mov insb imul popa mov outsl int xor loope popf or je,pn sti lds into fldenv in loopne out je orb cmp and dec sbb fwait mov adc push in imul jns sbb pop pop sub cmc lahf jl test push aam ret jno ret cltd les inc (bad) xchg (bad) mov in fildll pop jnp hlt xor add ror inc rol push mov inc push mov sub outsb sbb movsb sub aaa cmp push stc arpl frstor adc sub cmc aaa cmp push xchg mov inc ret pop fsubs scas cmpsl push pop pop fdivrs ss lret sbb cmp mov dec inc xchg inc test adc dec repnz adc jg fisubrl test cmp mov push in clc test adc scas mov jp out adc fs in fldt notb inc mov dec loopne outsl dec (bad) mov cmp sbb or aaa js lea push pop add imul test lcall sub cmp inc enter pushf push mov jecxz and inc push scas ret lcall inc scas mov push icebp cmp sub adc cmp xor inc inc js sub popa arpl (bad) mov jb dec and mov push loop mov lea jle sub daa shrl (bad) ljmp rcll jecxz sahf rcll fwait sbb sbb adcl movsl gs xlat mov xor add add enter pop jge cld cmpsb xchg test pop push mov std jne lds fimul inc mov fwait lds jle movsb out dec xor and dec push dec (bad) pop sbbl cli lahf orl or lods iret add push outsb mov sbb pop jle mov mov out lahf and lret lret jno adc rcl xlat lret sbb (bad) ficoml push mov sub mov adc rorl and and pop mov sub mov addl pop and push pop pusha jae xchg (bad) or in add int aam popa adc jne pcmpeqb aad test xchg mov nop fsubrs js sub aad and lret sti and pop mov push data16 push jns aam sub cmp incb imul adcb test inc mov fild push lock stos les jmp clc sbb mov bound add push pop xlat sahf xor jnp jmp pop das xchg (bad) fistpll scas inc fsubr jle ret add inc mov sbb xlat scas push insl jl out lahf ljmp sbb mov add cmp test sbb lock inc jbe outsb andl jl xor pop in sbb push mov (bad) xor and clc push xlat repnz jmp xor (bad) idivl jnp lret std cld movsb adc sbb pop insl movsb (bad) and test mov xchg cld in add aam sbb out roll subl mov adc xor mov ret jns pop iret or xlat adc mul outsb and mov and out dec and lea cmpsb loop mov sti or xchg xchg jmp add jo or aam lds mov (bad) jp cmp inc mov in or pop xchg scas adc adcl loop aam pslld sahf rcl xchg cmp sbb push mov pop enter xor or push pop pushf add sbb cmp insb (bad) or lret jge xor enter sub or stc or pushf (bad) (bad) sahf dec xchg or mov gs cmc mov mov scas push repz iret nop cmpb push std movsb adc mov inc and pop push mov test dec mov pop insb repz mov sub sub sub xchg xlat ljmp mov daa (bad) es pop xor outsl in pop es scas or lods pushf lds jg fxch daa leave cmp push (bad) ja in fdivrp xor jp jmp rcrb xchg mov in stos fwait adc or sbb pop daa bound enter jnp stc sub ficom jae stc mov cld jns sbb stos scas push test push cmc pop add mov lret pop mov imul push fimul ret xchg sbb (bad) push push sub mov iret push sbb fsub test inc subb es (bad) add outsl inc loope shlb cmc jo pop mov sahf mov loopne push gs insl fistpll xchg jmp pop outsl xchg push in leave mov jnp in lret sahf cmc push cltd mov cmpsb fmul imul lretw movsb lods pop mov pop sub test xchg xchg jae push ljmp push pop xlat sbb mov cmpsl add dec pushf ror add and btr lret out or push and xchg sbb fwait mov mov inc sbb adc int3 clc adc ret cmpsb pop cmpsl mov or cmp stos gs mov xor xorb xchg stos push ret fcoms push push push data16 add std mov ss xor daa stos pop lds push outsb nop dec push out sbb and dec or repz fmull push push stos jle cs or iret pop xor (bad) cmp or push nop out mov and pop push pop repnz push aam in fldcw xchg mov mov push xorb add sbb in fwait or decl arpl adc dec in jmp inc adc mov and test mov xlat rorl and ja push dec fsubs cmpsl jae cmp test data16 cld ret jns,pn insb aam fs push mov fistpll cmpsl adc jns ret mov stos push sbb add (bad) sub and negl xor or (bad) jae test xor rol scas into rol aam inc fs mov test cmc push insb aam xchg sub lret inc push sbb les insl add jnp movsl inc sbb xchg cmp sbb scas xor mov out pusha mov pop mov fdivl arpl ret scas (bad) mov jge rcrl (bad) lret cmp hlt add inc (bad) dec je pop xchg daa daa sbb mov xchg mov pop in mov les xor out adc add aaa mov mov push cli loop out mov sahf (bad) aad in inc js stc pop popa aaa lret jns xchg or pop js xor sahf cmpsb lcall cmp (bad) loope dec jecxz or cs std lods xor mov or cmpsb cmpb loop lods es cmp xchg mov aam xchg jne adc les (bad) mov test jae sbb jl fisttpl pop lea push adc mov add pushf (bad) (bad) lret aam push dec imul sbb cmpb dec jl out and test add jnp jb cmp call xchg push adc mov hlt add in stos addr16 pusha xchg or subl out fistpll and or add mov cmpsb daa test xchg rorb lahf mov sub popa in push sub ss add mov mov mov cmp (bad) dec pop loopne rorl mov cmpsl stos xor lret cmp cs mov outsl loopne pushf rcrl cld ss fs cmp adc stc inc cmp jbe mov (bad) jno (bad) pop notb inc stos jp mov pop xor fwait inc sub dec jae mov push mov jne or fs cmpsl jecxz mov lea out shrb mov das mov mov cli repz jno in ja icebp movsl aaa out cmpsl inc push fs jmp (bad) mov cltd jae rolb fwait ljmp lods adc mov mov dec popf stos (bad) fisubrl leave or clc (bad) jb loopne int aas xor inc cmp pusha adc cwtl adc stos test sbb jo xor jg inc jns ds xlat nop cmpsb mov push pop pushf (bad) jge sub out or in add dec out xor scas push in push mov das ds jno inc jne or out sahf daa inc xor add mov jno add mov fwait xlat dec (bad) sbb mov mov push pop incb xchg jne pushl ret pop adc (bad) pop leave repz mov cmc mov adc cwtl push jo xchg cs movsb push dec test movsbl outsb push push (bad) repnz mov jp add sbb int3 and sub mov push int3 into and outsl fild in inc add lahf popf mov add xor mov inc lods dec xlat imul sahf addr16 xchg aam dec mov lods push pop mov xchg gs sbb and jno stos fistpll mov xor arpl mov sti pusha pusha cltd inc xchg mov adc enter jb xlat inc cld jl xchg (bad) mov pop and xchg imul jecxz stos xor mov aaa outsl cmp fisub mov fidivrl (bad) sub loopne ss sti sbb sub cmp (bad) push (bad) outsb orl sbb ret jp in pop inc inc in dec rclb loope,pn add sub sti sbb mov cmp in (bad) jno jmp cmp sbb iret mov pop jnp test (bad) enter fistp stc sti ds xchg inc (bad) mov add fwait inc outsb int cmp icebp ud1 xor or repnz inc pop or sarl push popa pushf mov mov jbe or into sbb cltd mov outsl pusha ret xlat out (bad) adc and fdiv jns daa out and xchg mov test fildl dec ret out dec xchg imul and das adc sahf call (bad) mov orl inc jp imul adc and arpl repz xor dec dec outsl mov push (bad) dec mov sbbb push jno mov lcall insl adc jmp test inc adc enter mov xor pop push outsb pop dec fisttpll lds xchg sub jns pop mov mov adc or loope outsl shrb pop imul fidiv pop push jbe test jne push lds std out arpl or aam movsb into in mov mov dec outsb mov cwtl cmp push sub push and dec (bad) or push mov jg sub imul mov dec xchg mov cli (bad) je xor divl mov mov xchg adc adc push sbb jne mov lods pop setne inc arpl rorl xor pop push jp xor ja push in jo sahf dec mov xor and xor and in cmpsb mov push push jo and add subl ficomp pop insl (bad) das enter pop bound jae xchg lret and pusha ret inc adc push pop xor (bad) aam lcall adc fist add cmp aaa cli mov dec popf sub inc xchg jecxz mov addr16 loop loope xor adc xchg pop rorl mov loopne stc jl in xor inc pop lcall rcl jnp (bad) loop xchg add add xor imul ficoml dec sbb icebp aas push mov mov lock cmp pop pop push and dec or clc lahf adc data16 in push imul stos xchg mov cs mov cwtl cmpsl adc xchg mov fldln2 cli cli mov or mov xchg daa dec scas nop push xchg das fdivrs aaa ret iret mov fisttpl or push sub ss lods sub pop jne cmp movsb call in xchg (bad) pusha sub mov push bsf movsb (bad) imul jnp stos aam aad xchg outsb sbb push ja pop push rolb test lea xor vmovups jns mov addl jae sub fdiv push int out xchg ja movsb pushf pop mov imul mov xor and ljmp out or mov pusha inc fcomps dec scas pop jmp jp rolb in or adc loope xor arpl (bad) push push std dec ss inc sub into icebp lds jnp mulb xchg mov leave add inc pop mov xchg pop jle int in out stos dec (bad) mov aam push out ret ja imul loope jg adc xor arpl popl in xor test mov (bad) arpl jbe inc sahf mov adc fiaddl or xlat pusha cmc insl mov iret repz test push ret fwait and pop or cld pop add cmp mov shlb pop pop sub pop out pop mov and js cmp cmp cmp das xlat dec push cltd push insl insl xor js and outsb mov cmpsb sbb dec jg push in movsl sub mov test out mov push adc and dec cmpsl cmp or inc mov or dec das sub in push (bad) mov mov (bad) mov and mov mov sbb xchg ds mov pop pop adc cmpsl xchg sub mov push (bad) and push cmpsb (bad) lret (bad) rclb and movsb xchg jp cmp xor repz sub push push cmpsb lret jmp push in xor jl jns inc neg js (bad) jne and mov xor imull cmp enter xchg inc mov adc fisubl test sub lea dec push pushf fildll push mov mov fwait jne or jp int3 mov mov and inc and push mov sbb mov in pop fnop mov jle clc shrb sub ds pop outsb addr16 das in stc pop dec test outsl daa cmp data16 sbb call cmp aaa and or jae int mov test in or push int3 out sub mov push test adc or cwtl cmp cmc push push cld xchg mov mov jae in movsb idiv int3 pop sub cmpsl sub scas ljmp adc sbb inc (bad) loop roll inc sbbl ljmp js mov (bad) push lret dec dec fdivrs mov repnz jbe aas (bad) jo (bad) jbe (bad) mov pop loop pop xchg rol jg test add in adc inc jae push mov or jle hlt sub xor in cmpsb shr test enter mov lahf insl xor aaa je sub psubusb je xchg mov and sub fcoms add into jno push xchg rcll add dec dec movsl push xchg gs jns push adc lret sub inc test push mov (bad) pop fcmovbe cs xchg and dec adc popa hlt loope mov push sbb add sbb xchg push mov stos jl mull jp mov lret mov rcrb pusha mov test adc cltd xor jne pop pop ret out shrl es pop inc test into lret mov mov pop rcrb cmpsb subl cmpsl fiadd lods cld inc dec jmp test adc mov sahf andl mov pop fimull dec movsb mul push mov xchg scas inc push mov adc add (bad) aaa hlt fistpl inc ljmp mov jns rclb sbb and cs fnop in mov push aam hlt jmp xlat xchg push aam cwtl sub inc mov jne xor stc (bad) insl fcoml aas sbb das negb mov inc popf std fs mov xor rcll xchg lods test fimul push xchg jne leave cmp cmc in and mov cld sar out shr sub pop sti js ja add into and jae mov adc ss pop cmp xchg stos dec and ret outsb mov inc fwait or mov les fsubs dec cmp dec cld in aam sub dec test push (bad) insb mov adc gs push mov mov cmp and pop fistl mov adc movsl (bad) jne mov ja inc pop add pop pop adc ja inc daa insb loop or orb loopne adc xor std aam mov cmp xchg mov jns sub mov mov mov mov lock fcmovnu std into outsb mov mov std test xchg out movb mov aas idivl mov lea int3 sub push stos rcll stc or mov lret popa call das aas mov (bad) mov adc data16 out push sahf movl leave enter or outsl test push mov adc in ds (bad) data16 out add lds dec or test iret mov fiadd or es loopne inc dec add mov into mov fstp xor outsl rorl and jo (bad) cmp xchg lods or adc mov in xchg inc addr16 dec enter dec push jle push inc xchg mov jns out loope lock or add or mov int3 orb xor test movb inc xchg outsl outsb or add and movsl mov imul jo add sub (bad) out (bad) out jno inc cmpsb les xor mov jmp inc push add loop cmp iret lret sbb stc jle sbb sub arpl popa es cmp and fadd mov push outsl xchg stos sub ss test push xchg (bad) or xchg xor loopne push jb pop shrb and add jns sbb jmp xlat imul sbb (bad) and mov pop pop jge push cmp jle scas ljmp ja scas sar sub add or pop add aas sub pushf inc mov xor pop cmp sysenter dec dec xor dec hlt fldt and out or pop xchg or mov xor fwait sbb js cli pop je mov pop jg icebp popa push subb sub bound out loopne popf sbb pusha dec inc mov pop aaa cs into cmpsl xor ljmp adc lahf jno push mov pop maskmovq notl adc lods adc xor push sti rorb jnp lds dec mov dec ja sbb mov out imul pop rcrl js jae xchg xchg repz pop pop lret pop jno (bad) xchg pop push dec into mov aam insl movsb push shrb and pop lods push das hlt in test dec mov fs push sbb rclb mov lods add sbb or xor inc push add jg push adc daa fdivs in mov (bad) cli sub push sbb cltd inc add push cld and mov mov nop push pop mov mov mov lods daa (bad) mov xchg mov mov sti ds sbb pushf ljmp pop inc stc jmp adc ljmp mov out xchg push mov inc (bad) sbb in out (bad) or insb sar jbe subb xlat jmp stos cmpsb jne mov jb imul mov pop jno lock jmp jecxz xchg (bad) (bad) push jmp mov cmp outsl push inc nop loopne ficoml mov jg xor and int3 cltd popf call rorl add mov sub in les or aas xchg xchg mov int inc inc mov aaa out call (bad) pop insb out xchg or dec xor movsl jmp fildl inc push movsl inc stos and lods pusha push sbb leave xchg cmp xor outsl sub pushf inc movsb push push cwtl loop sbb add es sahf pop into mov and sar and (bad) clc push out bound stc xor fiadd dec lods inc push jns inc (bad) xor sbb std je jo push insl enter and mov adc icebp mov nop insl jecxz test mov sahf rorb fs stos loop pop (bad) sub into dec insb jle mov or sbb dec scas int3 sbb mov adc inc mov sub les pop lret jle jg mov push shl or sub lcall cmp test xor ret sti xchg jge jbe and vpcmpgtb mov and je (bad) jle mov cmp out dec jo test rol adc test je mov in xchg cld loop aaa mov push stos mov pop sahf out push add cwtl arpl setb add es out mov mov xor cmp idivl int push dec repnz cltd inc and push or outsl or aam std bound (bad) jne out outsl jmp cmpsl movsl mov mov stos or out leave jns add std stc getsec mov or cmp daa mov mov das ret push fcomps mov xchg nop or ficom mul push stos (bad) and push int3 pop push jp femms xor loope mov cmc dec aad lods insb (bad) cwtl dec arpl decb xor jo mov dec xor stc aad pop adc dec dec mov jge xchg call mov mov add (bad) jb insb jp out add xor in sub bound inc fimul rcrb mov xchg iret jg test mov mov pop mov mov cmp sbb pop push rcll and neg repnz sbb inc mov (bad) daa shrb jnp jnp xor pop jmp loopne jmp mov sahf or pop shr cmpsb add xchg mul mov inc lret loop sub jg mov (bad) hlt cmp add stc mov mov and sub mov lahf xchg (bad) gs iret rorb js lods mov mov cmp mov in lods cmp dec hlt (bad) cmp add pop inc inc mov jl xchg scas mull sbb sbb stos shl (bad) jno cmp in mov dec sbb fimul data16 pop inc js sub stos es pop clc adc xor adc push fcoml in adc loop aaa lcall ss jmp or mov (bad) lods aas fild ja fidivl and mov scas movsb sub xorl lods adcl inc icebp rclb jne (bad) lret add add inc push mov jp repz push test xchg imull lods jmp incl add add ret cmpl (bad) jb mov rcrl ficompl fwait outsl loope sahf jecxz push cmp xchg subb pusha xchg fisubrl in mov rcl sub in (bad) inc arpl xor test les xor sbbl cmp loope aam shr mov int fs inc push jmp pop dec iret stos repnz clc fs lfs adc xor sbb adc movsb jnp mov fnstcw sbb aaa push fmuls test dec mov test in push xor add or sub adc add loopne insb cmpsl mov pop inc ss insb adc nopl popfw push (bad) std insl cld rclb lods inc outsl mull lret jbe (bad) movsl xchg pop cltd mov push inc and xchg jne stos cltd leave (bad) push nop cmp sbb or insb pop push ljmp and dec xor push vpor (bad) push xchg ja out cltd test pop fnstsw cmpb push xorl or std iret addr16 xor push in loop and das push xchg lea addr16 cld mov lods push adc add xor es adc sbb push in (bad) aam push mov bound aas push lea mov movsb idivl push je (bad) push dec mov subb popf xchg sbb das nop (bad) nop and insb leave ret mov aas mov test imul lea lahf popa inc xchg sub sub lret aam mov pop jo mov fisubl test stos call push cld popa pop in cld jno daa dec lods lret adc adc imul fmuls ret mov loop push jnp pop sarl xchg fisubrl xor lods out jae jb mov push mov pop dec adc aas lret test insb enter cmpsb cmc push xchg cmp inc dec (bad) (bad) fldcw mov rorb push lods pop sbbl pusha sub mov and push pop nopl inc push out mull ret inc out push cld bound xchg sbb jb mov inc mov rcrb bound cltd cmp rolb hlt dec lods inc xchg or add mov es int3 add (bad) je xor (bad) xor and test mov arpl xchg mov pop aam (bad) adc les movsl mov outsb pop rcrl cmp dec loope repnz push adc fs out cmp loope ss arpl pusha arpl cmc cs push adc xlat sub jno push fmuls push lds cmp into stos lds sbb (bad) and lea adcl rolb popl pop addr16 mov mov jnp aam fucomip push fdivrl or mov hlt mov push adc out jb rorl sub fs cmpsl rorl push add fwait xor dec out sbb scas pop aas dec cwtl dec pop sbbl cmp sbb add sti xchg dec mov icebp in sti (bad) js mov jmp lret sbb mov or scas mov call add inc lock adc add sarl push call stos imul fist lds je jne and scas loop jp jno sub jae dec sub bound lret int dec mov add scas jmp aam xchg inc mul push ret xchg push and pop inc jl sbb gs int3 pop jno arpl cmpsl sti push das lcall mov adc aas mov lret shll adc stc jg mov pop repz cld and ljmp and jg jbe ret pushf (bad) das push mov xchg pop mov dec fsubrs je pop jle pop jne pop ret mov int adc inc mov out sbb inc hlt (bad) (bad) rep sbb call mov repz xchg cmpsb or cmp xchg mov hlt fadd sbb mov movsb mov pushf pop ds xlat jb push sahf mov jnp movsb add scas stos je out jg (bad) jg in inc jle cli test leave sti sub xchg inc in mov pop xorl dec sub jmp sub scas pop ljmp and xorl fisubrl sbb ljmp loop data16 xor test js je or push cld (bad) sahf add (bad) jecxz loope subb arpl lds pop mov xor xorb loope xor es xor rcrl dec mov ret ss (bad) mov sbb iret (bad) mov cmpsl mov xchg inc mov (bad) mov or pop idivb data16 push lods mov inc inc les xchg adc mov inc mov push lahf loop jno cwtl mov in cmpsl nop hlt jle mov int push pop push aas pop ljmp jo xchg repz imul pusha pushl out mov cld in (bad) je aad dec and hlt mulb popf aaa cmp sbb jg cs jmp mov xchg dec mov or and lret mov imul mov ss cmp jecxz ds scas call pop cwtl pop sbb lret mov (bad) repnz test dec fbstp sbb mov fldl out mov nop xchg push pop xlat cmp lahf les add push lret jmp inc leave mov inc pop or lea mov (bad) mov adc mov sub sub and and stc adc dec and imul xchg add in or subl mov pushl pop cmc mov out and mov push cmpsl push js imul inc sbb ljmp pop icebp push stc rorl testl ret xchg and scas mov bound jmp int3 cmp lret stos adc dec cld fistpl dec hlt sub (bad) push jbe mov imul xor sti or mov dec inc data16 ds (bad) fwait gs add xor xchg push push jae xchg adc adc cmp in sbb push andl outsl lock in adc jp adc push or out repnz push popa inc movsb les cmp popa subb or xor cmp and mov repnz (bad) idiv cs or dec lea loopne jle and mov in cmc jne repnz xchg test mov pop push adc xchg jb and insl movl ss (bad) repz scas xor pop push fsts xchg hlt repnz imul push xchg fdivs xchg push out (bad) (bad) je dec and pusha fsub mov jle pop ret pop loope ret lods shrb mov rolb lret adc ss fisubrl emms push aam ficom rorl xchg daa fs mov adc dec sub sbb rcr mov pop pop sbb enter scas orl and out lcall shlb mov sbb (bad) enter ss inc movsb out sbb rcrl pop push jbe mov inc lret lahf ret lahf add xchg push in stos and lock (bad) mov icebp inc iret fildl xlat sub dec push lahf and lods sbb icebp es inc (bad) mov test and loope les mov add push xchg mov mov sti xchg pop popa add mull mov and mov mov xchg dec (bad) nop xlat add mov push mov outsb sahf inc scas xchg jbe add push daa aam fildll mov adc hlt mov ljmp mov jg scas sbb mov pushl xor repz das and push addr16 rcrl jle loopne adc (bad) stc add fisttp test xorl sbb (bad) xor push in inc sbb jns sbb xor add (bad) mov and push adc bnd inc jae cmp (bad) fwait je stc pop repnz mov mov adc (bad) rep int push imul adc leave and fbstp or or pop mov test repnz mov pop (bad) xor loope mov or test or mov push xlat (bad) cmp inc inc sbb call (bad) push cmp call mov xor cwtl sti nop jge out sbb push lahf push (bad) jae sbb dec popa jns out add das sub leave or pop xchg mov and jnp test jge push (bad) jo pop dec (bad) scas mov hlt sbb cmp dec decl sub mov and mov cwtl dec test xchg or jmp mov or clc lahf movsl dec jnp mov inc cli or pop addr16 xchg (bad) fbstp push decb leave and inc pop adc jp and cmpsb jae cltd pushf jg and or sbbl inc sub rcr out lods inc jno popa in pop sub (bad) mov xor sub mov mov adc mov or jge add jbe fisub rorl mov cld dec add or mul (bad) out pop sbb stc inc inc jge icebp pop movsb test gs xchg lock test sub dec push add lds stc jmp mov test add xlat jle arpl cs dec xchg mov cmp pop inc mov in aad pop jb lahf das popf clc stc xor in fidivrl andl mov clc (bad) xor jne loopne and repnz push or les xchg jae mov jecxz std adc (bad) sbb pop les xor and ret xchg sub ss cmp mov aad (bad) std cmpsb clc (bad) or push test dec cltd add xlat out lds addb sbb mov sahf mov pop jg cld jo stos (bad) fstl loop lcall aas fs xlat out inc xchg xchg rolb cmp xchg sbb jl mov pop push sub sti repnz test jnp lret adc aaa or xchg xor mov in push push mov adc lret mov sahf pop lds adc jae lea loope jns dec mov cwtl out idivb or push je cwtl ds pop jle or das add in cld pop jo add daa add popa js xchg sarb lds pop scas ss push push or push pop mov sbb adc cld ret inc icebp loopne jecxz jne call inc pop cwtl cwtl fistp pop lcall adc sbb lods (bad) and mov inc das sti in imull enter repnz fldt adc adc cmp test addb addr16 (bad) fidivr mov dec push icebp dec mov pop mov sbb add mov mov subl ds cmp cld dec mov (bad) punpckhbw subl add out mov repnz imul aas mov aad sub lahf cwtl mov mov arpl jecxz or mov or jno mov xchg dec xchg sahf inc cltd inc push jecxz pop scas cmp fcmovb mull push lods adc sbb aas dec dec in lods pop and in lret (bad) int sar or sub push int3 pop sbb jle cmp jno rolb push xor fstps (bad) in inc xchg leave xor xor ss adc ds out (bad) mov cmpsb xlat adc jle mov fs mov sahf xor leave mov insb dec aas cmpxchg movsb add mov cmp sbb lahf mov sub add sti xor mov insb loop add jbe adc push loope out push cltd cmp or sahf dec int3 sub cmp jne call mov sti jmp in adc pop add dec fldcw push mov iret fcoml sbb scas cmp rcl push xor jb pop pushf fcomps mov iretw lret arpl mov ret in jb mov pop shll sub fsub (bad) sbb mov (bad) js imulb mov sbb fnsave fwait xor add mov pusha or jo (bad) negl movsb (bad) clc mov popa mov incb mov das lahf mov jmp lret add stos (bad) sub fimull pop push inc inc sub cmp (bad) lahf call push lods pop add fcmovnb rclb add sub (bad) mov xchg repz jge add and push faddl mov cltd data16 inc subb sahf jecxz (bad) dec mov inc sub xchg cmp aaa clc mov int3 ficompl (bad) shld movsl or fsubl mov xchg ficom stos std xor push enter jle and jmp pop js sub xlat rcr out jo push mov fisttpll icebp loope int3 jecxz adc jmp imul fcompp (bad) push push add mov jbe pop sbb icebp cltd mov pop add movsl (bad) xor insl les push out jno xor push xchg ret scas aam push into nop push or nop xchg adc addr16 popa add icebp push jmp cwtl loope xor inc inc adc fsubl cs imul out data16 cmp popf mov push enter xor mov pusha jne mov pop fcomip ret scas aam xor cmc imul and sahf mov mov sbb push imul je daa (bad) jbe mov xor dec mov mov push mov jbe xchg jg gs rcrb daa leave push stc aad test adc movsl push push in mov jecxz sub lods daa scas and adc adc cmpsb jno popa fisttp lock enter insb popa ss cmpsl pop sahf push mov dec enter popl repnz or test mov mov js pop fadd cmp lock repz xchg in push xchg push mov cmp jle addb hlt mov or (bad) add mov insb push int cmp jp adc insb popa xorb in mov sbb jge dec xor cld lods mov bound xor lret int add push sub lret adc xor lret dec jbe das fsubl out loopne fbld cld cmpsl outsb sahf inc adc push and mov lcall xchg jg mov nop pop ss mov and hlt aas sub xchg add and cld fs sub mov ret femms test daa cmp in fiadd in push dec and xchg sub je adc cwtl or adc in ja add xor dec stc aaa xchg jno ljmp lahf lret mov orl mov bound ljmp xor cs lods push dec es push in sub mov mov jo add (bad) xchg pusha dec (bad) mov rcl cmp jmp cmp jp sub test scas lahf jb cwtl in sub mov mov lock jmp jle and mul fisubr iret inc push push popa rcll jns ret cmp xchg sub outsb xor mov mov addr16 ret iret ljmp push jle mov mov popf movsl iret (bad) sbb push mov test xchg mov sbb mov ss add sbb adc or adc mov stos dec xchg in jecxz jmp js aas sbb mov or ja (bad) jbe sti mov (bad) in mov inc mov loope or xor push dec inc mov push sbb lcall cltd jb dec imul cmp repz or xchg adc dec lock dec roll shll pop mov fimul orl mov test (bad) rclb jno jo pop sub cmpsb add (bad) aas mov or cltd mov xchg icebp or push iret mov ret dec out jae insb inc xor sahf mov xchg adc movsl jp mov hlt xchg dec cli enter fwait (bad) lcall std ja rolb loope xor insb bound repnz les lock push stos cmp or xchg xchg xchg lods sub pusha lods out loope test xchg (bad) dec orl mov mov test daa and and mov pop inc imul sti mov mov test (bad) in and inc scas cmp test xchg icebp clc lock sbb inc and rcrl add adc cmpsl rolb sub insl scas xor sarl xlat adc jne dec into sar outsl mov (bad) lcall push sbb mov int3 mov push das aad sahf cltd aad sbb xchg mov push push push aam insl cmp lods out mov (bad) aad cmp and iret add in mov xor ja repz lcall or ret cmp aam dec push lods enter divps xor enter mov nop ds cmp lcall fisubrl xor (bad) jbe (bad) xchg mov or iret cmp aam movsl (bad) xor adc fsubp or jl jae inc dec jns imul dec push lahf dec sbb sub or or fcompl imul push out ret sbb or sub (bad) mov sbb xchg cmp push aad arpl mov insb jno inc push std ret popa cmp in lods adc aas aas dec pop (bad) cmp jae lds inc cmp dec xor ret cld jp jns popa mov es push inc (bad) (bad) mov push arpl fstpl fwait jecxz (bad) int rclb dec mov outsb mov aad cwtl sahf push adc insb dec addl movsl add cmp push push xchg lock sub out mov lcall scas stos sahf (bad) push cltd jns pop imul out or jb push jne sub push sub mov xchg shufps aam loopne ja into popl or insl mov or cli xor xor add ss adc bound sbb icebp (bad) (bad) add sbb insb cmp loope mov mov xchg pop sbb xchg scas add movsb lret pop mov push xchg sub pop and out movsb sbb push mov adc lcall (bad) call xchg add loope dec jae sub cmp shrb inc icebp mov dec cmp add fstpl xor arpl loopne adcl dec sarl cmp test mov es movsl sub mov mov mov iret or icebp push push mov pop pop out inc call gs xor mov cmpsb sub leave (bad) roll xor shlb negl cs mov test rolb cmc insl sbb pop add add mov jns inc ds push iret and mov imul xacquire repz and sub pop or enter sub push shrl into mov fwait ja cmp sarl xchg xchg aas and pop push lea hlt outsb cmpsb cwtl call xor outsl push adc hlt into in imul lcall push je rcrl (bad) mov sub mov and or insb pop outsl adc (bad) movsl iret mov hlt xor lahf rcrb mov daa je out fldcw in sbb fdivl pusha addr16 push leave push rcll push imul lods jb rorl jnp cltd pushf xor cmp cwtl jae pop mov popf ljmp imul ret data16 sub sub push adc dec lods add mov jbe ds push sbb stc xor pop jle push sub sub imul push xchg mov push or cwtl movaps mov ret mov adcl inc and sbb mov (bad) (bad) stos sbb lret (bad) sbbl or pop mov test xor lret mov pop pop das or rclb cmp lcall push icebp cltd nop cmp adc sub stos pop mov mov je cmp pushf push (bad) mov push inc aaa flds iret inc adc jl ja addr16 mov lods scas icebp push repnz cmp sbb ret movsl sub lret xchg in es fisttp daa cmp (bad) gs sub push fwait arpl aaa imul and dec xor xchg int mov pop xor ja push pop and mov nop mov dec xor push sti mov pop mov mov pushf cmp sets lods inc pop mov dec xor and shrl das push or rorl mov pop outsb adc push into and sti daa fucomi in mov cltd push rol mov pop in test inc rcrb sahf movsl cmc mov mov pop inc add pop mov (bad) pop push inc mov incl add in sub aam lds clc xchg inc inc and mov push pop xchg loope ss jecxz mov pop stos jecxz push enter scas out ds mov je iret hlt les inc mov inc cs dec jg mov mov and mov push add test and adcb pusha pop int3 or xchg mov fs cltd jecxz jno jno ljmp nop xchg pop (bad) out (bad) cld (bad) adc lock pop cwtl dec cld ljmp adcl in push cmp sub (bad) std out or mov insl inc inc and xchg cmp dec cld dec in adc loop or stos in ret pop xchg push insl and ss cli xchg testl pushf fiaddl sti (bad) xor fpatan sarb cmc jmp jecxz scas out sbb adc mov pop sbbl adc push in int3 mov push sub loope lods shrl jo sbb and leave incb mov and mov push pop and or fbld clc scas pushf jle and mov push cwtl popa nop add int3 aas add nop inc and outsb aam pop mov fldcw sbb shrl aaa pop nop pop std sub movsl dec cmpsl arpl outsl sbb cmpxchg dec (bad) xchg in data16 push or mov jmp xchg mov and insl pop inc stc sarl scas add jmp mov out adc push mov lock rcrl add xor pop fucom jb loop ja cmp pop mov xor mov aad push mov (bad) xor pop sbb cwtl (bad) fwait xor and inc lods jg sti pop rcll jnp out or jle lods cmp jmp add mov mov cmp ret movsl xchg cs scas lret xchg int3 adc (bad) adc jmp cmp stos push aad and mov and mov lret mov jg fcompl pop leave xchg or sti aam add sbb sub cwtl jg movl rcrl inc lahf test cwtl test stos cmp push fidivrl mov in lahf pop (bad) enter inc js push mov xchg inc adc lret fs mov (bad) sbb mov ja loopne push and xchg vshufpd mov mov cs sub (bad) sti cmp lea (bad) scas rol xchg out inc orl push repnz es test outsb inc jno push push jbe loopne mov jno in mov push mov repz pusha fstp cmp pop cmp mov push adc push rolb repz js jo ret dec xorl pop (bad) jns mov test or fchs sbbl pop push negl loopne jp (bad) lcall addps shrb lret out pop add out adc jmp mov stos cltd fcompl in mov jp mov int3 sbb arpl jo sub lods je mov shlb mov xor jmp loope or push sub xor add push hlt dec int3 les and icebp pop (bad) test xorb jbe dec jns jo cmp sbb stc or loop pop mov arpl mov push lret loop mov xchg sbb and pusha aam xchg xor xchg loopne addr16 in daa lock push scas mov mov xor jl xor gs mov mov jg lret pop iret add aaa les je jne add icebp aas clc xor mov push inc adc add jb bnd mov ljmp mov and cli dec lods mov sbb stos add mov fwait mov jb fnstenv fist xor ss int3 hlt jmp mov xchg addr16 stc lahf iret push jle (bad) leave inc fstps insl test jo add ds lods mov jno gs push add cmpsb dec inc enter dec xor sub insb fs out add xchg popf push jge faddl (bad) push mov jl shrb xchg dec sbb add push inc lea stc stc and mov rorl mov and insl pop mov sub xchg push stos mov into test jae out stc loope pushf push jns mov xchg stos cmp mov xor xor pop lock aam fstl mov and jge mov xor out in cmovno push and and (bad) cmp into xchg or ficoml jae xchg stos stc dec int3 and test mov jns dec mov ja imulb xchg push sub sbb aam jmp mov sbb int3 es outsl inc jmp rcll loope jp arpl (bad) add xchg push xor addb jmp jmp imul xchg call xchg jp xorl inc add mov jmp lea vphaddwd adc lds sti repnz icebp pop faddl test leave aam es aas mov pop hlt lahf sbb xor fsubrl cs in idiv jl sub jbe orb es fdivr in iret les outsl test (bad) repnz sbb lods ret jecxz clc fisub addl or scas jmp xchg inc cmpsl aam push fadds icebp jmp data16 inc movsl jnp in daa loopne push int3 mov cmp lods out or mov adc push fmull and sub sub mov cmp aad pop pushf cli push int3 fbstp push jo test lods mov add (bad) and mov inc daa dec mov (bad) ret inc xor pop mov push inc in pop scas sbb jp dec dec inc xchg addr16 nop std (bad) les sarb mov adc loopne dec add cmp xchg lahf mov cmc (bad) dec cmc push sub or notb cs inc xchg scas mov fdivs sbb inc insb out popa clc xchg icebp lods jmp and sar dec or fwait mov pop ret push lods out (bad) mov movsb pop out mov inc cmpsb or dec les hlt dec or jne cmp pop test mov fildll xchg ds mov sbb mov lea ja idivl fldl bound and push sub (bad) insb loopne test and sbb gs das cmp add xor lret stc scas sbb lcall or (bad) or push (bad) rdpmc aaa lock pusha lock clc push hlt pop sub mov enter clc loope push xor stos jmp test xor xchg push in in scas cmp std pop mov setp test cmp xchg cwtl mov sbb leave lods and ljmp pop out mov inc test and push pop lock (bad) adc paddsb and pop jns repz lret (bad) fcompl fwait push xchg pusha xor loopne incb aaa or shll mov fcoms fnop jne mov adc into mov (bad) sub push in inc lret stc ror cmp or mov xchg lea sub xor add out out lods sbb inc jmp inc push arpl xchg sti pop xor shlb imul jmp movsb adc pop inc cld push out xor ss push mov call sbb repz (bad) clc out cmp jne mov inc mov in adc pop notl clc mov pop dec mov mov mov push jecxz xchg dec mov adc ret dec cmp mov xchg out push mov dec fucomi inc icebp cmp mov jle cmp add mov xor sbb (bad) dec sub xlat push ja call xor mov daa xchg mov mov add fwait (bad) and cmpsb or mov adc roll mov ja dec stos arpl adc inc dec into sti jae mov xor xchg mov dec data16 notb ret fcoml xchg and out sbbl and (bad) js clc pop jns and (bad) ud1 repnz scas and mov or or ja mov mov incb and std aad in and push cld sbbl fiaddl mov adc xor lods fwait jbe fsubrs add andl fcompl adc push mov adc push pop and mov jge push in stos fwait pushf ficoml ss test jo and xor test movsb and pop adc jno xchg stos int sbb mov add int3 add and mov jg loopne loop sub int3 js mov inc and std lcall jb cs add inc mov dec push imul ret inc les mov push scas sarb lock mov cltd xchg pop outsl or push jbe push xor cmp add jns daa hlt adc and aas (bad) push je inc (bad) lock and je and loop fwait and daa add pop xor inc mov sub adc mov xor jecxz add add inc popf push cs and inc jl into int3 fstpl les loope adc daa cltd out mov (bad) hlt addb jb fisttpll push and sub movsb out add fwait inc ret sbb sbb enter fisttpl xchg gs (bad) (bad) mov adc xchg inc (bad) and sbb push jnp or mov int3 dec test xchg or lea push cmpsl in jp repnz push push aas into loopne,pt aam nop inc fwait jns fcmovnb outsb mov mov adc jg loopne inc cs dec push xchg lcall sbb adc notb pop xchg popa cltd rorb pop sub sahf iret addr16 inc push mov mov xorb pushl shlb rcl adc (bad) outsl imul mov in out bound ljmp into in ds jmp cmp or sub daa sbb jge jle repz mov popa dec add sub or mov and adc xchg pop dec inc leave or data16 pop xor out adc dec lahf jns push popf insb or movsb movsl or mov sub jnp loopne jmp sahf lock dec push xchg (bad) bound ficoml pusha aas nop ss push bound call shll (bad) addl jecxz ds ret addr16 fmuls jno cmp inc clc rcll xchg loopne sub mov cmp jae xor int mov sbb es pop loopne add cmp je movsb mov into mov stos stos mov dec fbld add xchg mov lcall fs bound lods cmp xchg (bad) sub hlt popa lahf addr16 mov fwait inc aam jne add and in cs ds ja pop sbb sahf add xchg xor and pop rcrb xchg jge jns sub adc daa pop cmp fisttp in jns nop insb call mov sbb ss clc adc es sbb leave push (bad) xchg push ljmp cmp xor invlpg iret sub push sbb add push mov addr16 cs js xor arpl xor and sub addr16 xchg dec pop adc jo in stos mov outsl out bound stos in popa cmp cli (bad) (bad) inc dec and cmpl cmp mov mov stc pop out lds and add mov sbbl test fist sub in inc les mov aas (bad) hlt (bad) lock jb stc loopne out scas or jl ds sbb sbb enter aas mov mov lret mov test and push push in subl or cmc pushf addr16 scas (bad) lea insb mul mov push sbb xchg pop mov nop leave mov mov pusha or and inc xor leave mov push rclb jle mov stc subl sub idivb lock and fbld psadbw adc or outsb call fldcw das pushf jo inc cmc shlb bound xchg adc cmpsl mov sahf push mov or call pavgw (bad) aaa inc jbe iret xor xchg scas cwtl xor addr16 into mov push add stos pop jae cmpsl dec stc nop bound jmp xchg jp cmp mov cltd sbb imul pop lods out loop xor mov repnz mov cli ror mov mov pop ret (bad) lock mov push jmp dec out sahf in mov push xchg inc add aas addr16 push inc inc xor pop fwait popa inc pop mov dec lret sub fisttp in push adc (bad) in out mov in out push repz aam and push outsw out jle push push add mov out (bad) and add xchg shr fwait sub int3 ret in pop ret std xor dec mov enter push ffree ja sbb lds iret cmp push mov dec ss sbb fsubrl adc lcall mov jb test or arpl cwtl (bad) imul loope jg dec aaa inc pop out and fucom dec dec push mov call test (bad) push pop nop push insb jns fs cmpsb jne fwait and loopne pop ljmp push gs lret sub or das mov lahf loope sbb jmp xchg nop fstl loop lods adc push xchg pop sub mov mov jg pushw push or or pop aas add out out xchg mov aam inc jmp imull xchg jo jb dec xchg dec lret aaa out div xor sarb and push adc sbb (bad) mov sub (bad) cmp leave xchg xchg pop jmp (bad) pop jo push mov (bad) xor sub pop inc push fdivr scas sub push xor icebp roll repz std les mov int mov mov in fdecstp dec and jmp lret jle push loopne outsl adc in mov loop mov scas mov pop push and mov fnstcw out icebp cmp cmp movsl xor cmp adc stos inc mov data16 mov and outsl fdivrs mov pop push mov lahf (bad) pushl sbb inc insl loope xor xchg cmp and mov jns addl pop sub mov mov stos aam movsb adc lock sbb and ljmp lret scas push in (bad) and iret imul andb repnz jae es outsl mov rclb out test sub mov cwtl add stc nop or in loop mov sub fstpt daa jmp int push loop pop cli and xor fs lcall fisubl xor stos loop cmp movb cli mov int xor jg ds jl mov jno add mov xchg ds sub clc into dec cmp push and stos or sub jns cmp rcr sarl mov or out out stos and leave int in cmp mov inc dec adc dec mov cltd and dec gs (bad) cs scas or sub add (bad) aaa inc leave push repnz or mov mov (bad) cltd jp pop pop cmp mov lds or dec xchg push mov je xor push (bad) lock lret shlb insl outsl (bad) jae mov dec push popf sbb or mov ljmp (bad) fs imul pop adc cld popl xor clc repnz pushf push lods jge or scas push xchg sbb push call push push lea cmp test mov mov shll rorl cmp xchg stos lds jmp loopne jno mov mov xor daa jo dec cmc lret pop jno and stos jp add mov cld sub stc aad and pop adc sbbl sub pop clc std daa test mov call and in fild inc push sub add mov add mov insb (bad) cmp inc dec adc out les fwait pop sub pop jge xor adc mov lods mov (bad) push sub add mov sub sub adc or bound pusha gs addr16 pop pop xchg dec js jns ss andl outsl (bad) mov or mov fistpll repnz nop cmp cmpsb xor cmp (bad) imul mov imul pop jnp movsb sbb pop sbb pop cmp (bad) pop int3 cmp mov sarl cld je aaa sbb js shll pop jecxz inc mov adc xor in xchg mov lcall jne push xor hlt (bad) mov loop jg out lret sub stos jl negl xchg pop into sbb adc inc test inc lea push insb or mov notl mov xor dec stos clc repz inc (bad) pop cmp ret jecxz aas std cmp (bad) jns push aam lds mov jbe in xor mov pusha fidivl mov xor mov (bad) popa dec mov xchg mov sub hlt mov push std sub xor aaa sub sbb pop jmp xchg xchg mov jl sbb xor inc (bad) jmp xor insb inc scas mov dec xchg sti cltd shrb stos or in xor inc adc dec xor push add mov jg cmp xor iret xchg fwait cmp aaa jb pop imul mov mov adc lcall pop out (bad) dec pop push in cmp adc sub stc mov adc inc out in fcmovne sbb pop pop inc (bad) in movsl cmp loope ljmp sbbl int3 mov jl mov jae (bad) lods lret inc inc xor mov (bad) es xchg enter mov mov cmp flds enter adc jg (bad) jl call add scas popf add cmp pop jl fs aam mov inc or inc and pushf out mov daa jge movsl lahf (bad) addl sub mov fidiv cmp lds jo cs cwtl dec pop mov enter and fstps loopne out fnstenv gs ljmp stos pop test inc loopne adc data16 pusha ds pop (bad) mov (bad) lock cmp rorl jg int3 mov ds xchg cmc sti push pop js out sub icebp inc inc ja xchg iret sbb mov outsl lods ret inc popl xchg xchg lock (bad) push inc repz inc imul stc aam jle jbe repnz pop xchg popf mov icebp cmc frstpm(287 lock inc sarl sub inc ljmp (bad) int3 lock pop sub ja shll ss popa pop mov mov sub (bad) pop inc sub or xor push jmp testl or or movsb mov add mov rcrb cwtl fild mov test push cmc cmpsb push adc push add sub sbb push test lahf iret add lock adc loopne stos ja faddl pop push mov mov outsl dec mov dec jge stos movsb cmc stos cmpsl jle mov jbe sbb test ficomp xchg push insb or jnp popf pop test sahf negb cmp adc mov cmp cli adc push mov cmpsl pop sbb int jmp cmp sub fnstsw in sub add inc push sar push sbb test sub icebp inc in sbb or mov adc mov lcall hlt mov jmp mov (bad) in insl push add push int sbb xchg cld inc xchg ret (bad) push jecxz ja rcrb and test xchg dec or mov xchg sbb jbe inc dec test inc js xchg aam mov push sbb pop xchg sbb out mov jecxz and xor mov adc adc push (bad) mov adc xchg dec or ss or pop popf int3 imul push inc push jno jl aam and mov outsl pop dec imul push clc ficompl (bad) je push add (bad) dec insb (bad) shll add sbb mov inc sar pop inc rcl jae in push iret aad or mov mov xchg push out fidivr mov pop mov lock jecxz or inc dec mov cs loope and ficoml lods add scas xor loop sbb js mov xchg ds js mov roll mov out inc dec testl jp and xor test cmp and fistl in repz push sub mov (bad) iret mov repz lahf mov pop push ja add insb int mov stos push mov movsl popf xorl mov mov pop cmc sub xchg daa inc inc out sub mov cld xchg (bad) pusha jbe idivb fcomp insb ret fadds cmp inc xrelease rclb roll jne test adc insb or jbe sbb outsl inc negb fsubl pop xchg leave inc (bad) cmpsl add (bad) lock lret xor lds (bad) mov jl mov ret push mov insl inc rcrl mov pop ljmp mov sbb (bad) sahf test sub push sub mov lods xor int mulb cmpsl mov dec cmp pop das push dec js push and int gs iret jl jbe,pn lds xor outsb out bound stc adc iret sahf ret pop cmpsb js icebp mov push sub cld insb pop and (bad) adc pushf pop sti and (bad) lcall aaa mov inc xchg decb jae xlat pop jns mov jmp or outsl dec pop or mov das push or inc mov in push dec push sahf sbb outsb dec lea add es (bad) enter andl jbe or jp leave cli je adc push xchg push pop clc cli sbb loop add sub (bad) and (bad) xor push repnz lea testb repz test orl std lds ret xor sbb mov push fisttpll dec loope push dec sbb jnp shlb pop and pop jo jl xchg arpl pop dec sub mov daa or decb lea fs jae lods adc mov adc mov andl pushf test cli dec xor xor xchg mov mov pop inc (bad) pop fdivrp in push jno insl mov mov loop jbe dec xchg jae adc fisubrl outsb jg push popf pop xor fisubrl sub pop icebp (bad) mov cmc stc xchg cs sbb adc dec sbb (bad) int3 and mov push sti cli mov leave movsb add mov xchg mov xchg stos in ret lcall cmp loop push movsl xor push cmp mov cmp clc lret mov inc fdivs imul jne inc clc xlat lret xchg leave insl xchg xchg test xor push pop sub add or test dec lret test fisttp lods into jg scas xchg in push enter les fwait repz les cmpl dec and jno fdivl aaa test out cmp jp or scas cmp xchg pushf mov fcomps je mov sbb sbb dec lea sbbb adc pop call fidiv notb xor daa or bound adc mov cmp bound xchg (bad) sbb cmc jnp xchg lret ret out add lea mov lods je jge imul or lcall cld push mov es add pop jp or dec pop cmpxchg loop imul dec loope cli fildl leavew test (bad) mov popl scas cmpsl dec stc bnd sbb pushf arpl (bad) cmp sarb es add inc aaa xchg (bad) push or (bad) fidivr ret lods add daa rep cmp push push push pushf repnz dec sub shll jle pop iret or xlat or push jg incl cli ret xor call or mov mov ds sub jbe push fildl pop cwtl aaa lea or xorb (bad) lcall xor mov int3 inc jns cmpsb out dec ljmp pop xchg loopne shll push call inc ljmp jg fidivr shlb ret popf mov das out test mov xor dec cld insb (bad) addr16 add fnstsw scas (bad) jp fistpll std push fcmovbe and push mov lret pop cwtl lret decl pop push pop std add pop es xor mov inc or pop mov jae int3 xchg adc outsl xchg push clc inc push sbb push or inc and cld mov push popa dec xlat orl adc outsb into xchg mov cmp jmp addl enter pushf fildll lds xchg push push das in movsb push mov out clc cli xchg scas mov cmpsl push mov ljmp mov mov lods xor fwait sbb xor arpl dec jp scas loop lods mov jmpw adc mov mov fidivrl leave pop add ret sbb push psubd ss xchg adc ss add aaa aad pop fdivrp clc unpcklps and (bad) repnz rcrl subb push sahf cltd aas push or mov mov jns cmp cmpsb mov cmc xchg in pop roll fwait mov add in int pop push insl xor jecxz jge xchg mov stos push mull ds test or hlt not in adc mov jae jecxz std pop ss xor movsb or ret dec out adc inc clc loop stc fs pop sub push push test adcl push jmp stos ljmp adc inc outsb test popf in into int jnp js cmp movsb hlt jl or adc jno loope fucomp rcrb dec adc andl sbb jle add leave daa sub sub inc sub and sub bnd xor jns imul stos mov enter jno mov ret test daa jmp jo xor adc (bad) cmp ljmp mov clc shrl sbb cmp stos shr mov lcall stos sub fs add jge xor jle or mov push stc out mov xchg clc push fs loop dec inc mov (bad) xchg rcll cmc inc inc sbb shrl xchg popa lods mov sahf test aam sbb add std push in pushf lret rclb inc fnstsw mov mov push adc out or rcl aam mov rol movl repnz and jg mov inc pop out ret jne jp orl mov sub iret sub adc xchg dec xor es out aaa bound mov push jnp add xchg and mov pop mov jae scas (bad) fs out lock repnz add lret in mov adc scas insb arpl aad cmp pop scas jae rcr and rclb mov (bad) fild jbe shrb xor xor add xchg or (bad) js mov fnsave xor mov dec je push mov stc nop sbb jl test rorl not cmp sub xchg inc hlt insl dec (bad) or sbb inc shrl sbb loope push (bad) loopne push xor mov popa pop mov sub mov cs adc ljmp testb hlt xchg mov add mov (bad) cmp add mov mov es xor mov push pop cmp mov cmp xchg insb es jecxz mov sub (bad) or roll mov lock aam dec dec push inc push cmp nop imul pop cltd dec xchg push insb fild sbb int inc dec fildl xor cmp stos testl addl cs (bad) sbb test ljmp iret mov cwtl cmp pop or and sbb data16 imul cs aam cmp mov gs adc subl jno mov cltd or xor lds in (bad) jne pop jbe sbb cli jnp add xchg push scas push sahf call (bad) dec (bad) sbb adc popf fistl mov das inc xor icebp inc sub js imul pop xchg jmp testb push aas mov subl imul sti jmp addl in test out xor mov cmpsb (bad) mov fcoms cmp stc mov xchg mov push xchg shrb and outsb aam push and aas push inc sbb jl (bad) hlt sbbb mov cmp std outsl cli jl movl paddw mov xor ja enter and hlt test dec cmp dec cmp imul inc inc sahf xchg sub sarl xchg or out inc (bad) shrl cli stc pop js addr16 inc pminub (bad) call mov fwait lret jp jle mov jg push (bad) int mov jae inc dec addr16 lret lahf mov push mov aas mov dec popf adc mov out (bad) cltd sbb popa push inc stos lods fs repnz mov inc cltd add pusha xchg add cwtl mov pop rolb inc and lahf int3 lret lahf push inc inc cmpsl lcall xchg fs sub pop jno cmp cmpsb or add (bad) dec and or in rcrl pop fnstsw rol pusha ror pushl dec inc fucomi out mov cwtl dec rclb mov iret sub int jg faddl rorb lcall fldl cltd (bad) mov and icebp jo dec push (bad) mov sarl (bad) mov out xor loopne sbb mov inc xchg jnp cmpsl shl ja pop test pop xor sbb fbld mov (bad) jo movsb or test mov adc incb push sub xchg ljmp loop lds xor sbb loopne push scas pop in mov pop dec out stos ret jae fsubr in and sbb mov mov adc xor xorl mov adc es xor cld int push in js fiaddl mov adc jns sub mov jp out cwtl mov mov sbb lret sub enter dec in stos test cmc es xor pop call jne lock test adc sub jno inc (bad) jne inc stos xchg add fsts lea xchg icebp icebp sbb jp pop push into jae cmp (bad) push ficomp mov (bad) and or lods loope movsb sbb iret stos sub xchg iret sahf out cmp inc cmc pop insl or push mov pusha mov push add mov std js sahf popf addr16 call add cmp and idivl hlt je sti rolb adc cwtl dec adc mov (bad) daa sbb add xchg sti mov cmpb sub mov and enter repz insb in pop lcall ret xorb mov ret out jle xchg pop mov (bad) sub inc sbb outsb ret xor sti pusha icebp sub fwait sub shrb sub jmp or sti mov inc in mov sub cmp icebp les insl pop ror (bad) cmp xor cmp loop dec sbbl jb cmp popa cmp sbb (bad) sub or in dec add and repnz es mov enter adc out add lock sub daa add sbb dec mov jecxz and mov mov int mov mov push push inc leave and xchg push prefetch hlt xchg je clc loop lea push xchg out pop cmp nop loopne mov aaa mov cmpsb push add and icebp adc jge les mov iret xchg movsl out data16 imul cmp mov fnop sub sub adc lea fcmovnbe dec mov call icebp sahf inc or adc loope hlt (bad) mov push pop mov clc dec mov xor nop (bad) sbb (bad) popa test outsb sub pop pop mov mov shld test (bad) jg jae lock iret xlat and add les out add jmp xor lds pop inc lds fmul mov and inc repnz mov add repz out or pusha in pop lcallw fcoml and sbb or icebp pop outsb movsb fistp lods inc outsl test xchg addr16 lea adc sub subl insl dec inc push test fdivrs fidivr mov cmp xchg jns dec ja dec and in pushf mov cmp repz imul cmp push fsubrl sbb stos iret int3 ljmp jmp sub cmpsb mov xchg outsb mov repz push repnz mov out nop shrb xor pop jbe (bad) aaa clc dec or and fildl lcall dec (bad) mov add bound mov xor or sti mov jb faddl pop cli inc int3 pop in xchg pop jnp dec push das stos mov movsl and idivb icebp mov push std xchg das cld iret push push sti fildll data16 mov mov mov adc paddusw mov xchg sub xor cmp pop adc mov jge imul ret aas out bound mov and incb or andl mov (bad) jmp sti stos pushf xor sbb xor and stos xchg int3 cmpsb ret inc xchg push add lret insl push add jae dec (bad) sbb int sbb loop xchg mov fwait lods xchg xor (bad) lahf cmpsl sahf dec jmp inc lods and fcomps inc mov mov jne push push adc xor push rcll enter out insl jle mov dec cmp (bad) mov cmc dec add nop jns jne insl sbb xchg orb push mov lahf adc (bad) push fwait pop sub sbb add (bad) lock ja push mov adc mov popa adc lock push fistp jecxz mov mov lods repz pop xchg xchg stos or popf stos add pop std int3 add adc inc (bad) pop or ret fiadd test into or fwait jg std mov jns in loope imul insb mov sub out and dec imul inc dec add and xor loop shlb mov arpl cmp out or pushf pop loope and (bad) icebp fs scas daa (bad) shll add leave xchg add inc imul or sub dec mov lods mov dec xchg aam xchg (bad) push xchg cwtl inc int3 popa cmp push xchg mov push pop sahf xchg cmp jno adc mov dec mov loop jns push and pushf sbb lds enter push xor push mov pop add cmp stos les imulb sbb mov inc and mov ficom jb inc xor sbb or pop sub shrb cwtl in pop lods cmc andb icebp test dec mov ds shll (bad) push lret cmp inc loope mov push fadd and leave call xor inc pop cltd inc sbb sbb mov push cmpsl push sahf and aaa inc pop fcmovnbe inc out xchg test push cmc outsb pop sti add das sbb out out or cmp enter jecxz xchg cmp cli jecxz sub aam cltd xchg mov lcall ss mov test addr16 jne maxps repnz pop out or cmp adc xor cmp (bad) lds gs push jge xor add sub cmp sbb pusha and add or jbe lods push addr16 or jecxz out dec cwtl or xchg pop das outsb dec mov outsb sub fdivs fcmovu dec scas xchg into mov jns lock vmovntps pop loopne enter or adc lds sub test or jge movb (bad) (bad) movaps mov lods lret arpl add addr16 movsl ret mov push int mov (bad) mov cmp sbb dec leave (bad) xchg adc pop fist (bad) cmc inc pop push sub pop mov or jl xchg mov cs push dec mov xchg or xchg js in inc mov push and mov jge pop cltd iret pushf jb adc cmp enter aas push out jp (bad) mov inc cli rcll pop dec xchg and jb fs ret in adc js xchg mov xor (bad) leave andb sub ds insl or mov (bad) mov push les pop aam sbbb lcall addr16 push icebp js add and out clc ret inc lahf mov xchg (bad) bound (bad) mov je cmpsb xor jl add aam mov jle xchg jl mov hlt dec in pop inc sub fidiv pop fstpt aad and cmpsl adc xor imul sbb or cld jo lds or mov and cmpsb lret jg and pop dec mov jp cmp popa push add sub xchg fyl2xp1 hlt call ds mov sub dec movsb xlat cmpsl mov mov (bad) ljmp scas orb xor stos lock adc push std cld int3 sbb push add (bad) mov dec jne or mov in and loope fdiv and xchg jno push fs popf mov (bad) add dec push adc (bad) jmp lret icebp adc push xchg inc inc (bad) dec lret jo mov jmp stc xor jmp sbb jns popf mov (bad) lcall int3 cld mov adc pushf fidivrl popf shr gs jl xchg (bad) mov push cmc mov cmp mov es mov in mov mov dec jnp test lods addr16 pop insb xor movsb push mov and push mov loop,pn les mov sbb dec mov cmp or in sub jnp fild pop and mov sbb pop xor outsb popf xchg mov faddl lcall enter mov loope adc imul add mov fstps inc jmp (bad) out sbb (bad) es mov mov push lods daa cmp push or pop or and bound push inc repz outsl loope shll cld mov or jns mov sbb and inc xor jle jmp test dec dec not inc adc add add test xchg adc das jbe pop loope pop stos loopne add dec cwtl sbb stos mov fadds cld and (bad) fsubl out inc mov pop xorl aam cli add cltd xor (bad) jne jmp jecxz lahf mov add stos push pop pop and enter je lds mov fsts lods mov cmp mov in in inc lods push jmp sub add das rcrl fistpl (bad) jmp sub dec in mov dec xlat test int3 dec into call js jg rorl scas scas sub adc pop movsb dec sub js test pop popa int and cmp pop mov sub jae adc and fwait popa lods shll imul mov and bound roll hlt and (bad) out out cltd xlat mov mov sub enter sbb cmp aad in mov mov dec cltd push gs mov loopne push test nop mov push fdivr push and addr16 clc mov fmull cmp ds clc pop int3 sub outsb lds movsl jno jmp mov fbld fcmovne push (bad) dec and movsl xchg test stos xor mov or pop test stos adcl xor fnop cmp xlat pop into stos pop imul mov lcall fcmovne mov push jbe or pushf push test mov xchg jb pushf add xchg movl rcl (bad) jp or pushf mov cli mov popf cld mov mov std add mov fcmovnbe mov sbb push add adc ja dec repz leave lock inc and outsb cltd add std cmpb daa loope inc jbe adc push mov mov stos out jl int or aas push jle lods sub lret aad fsubrp (bad) mov xor or xchg out adc adc lcall xor ss dec xlat decb mov out jae xor aas jmp sbb fsubr push je ffree into lret nop inc insl push std adc out mov shl jle cmp inc and xlat xchg sub or popa cld (bad) lock mov enter dec push lcall scas outsl mov lods (bad) cltd inc mulb mov dec sub add ret cmp das jbe fild ss jae out xchg mov inc xchg xor lock repnz cmp dec sub sub or mov inc xchg push stos jle and and pushf bound inc adc loope dec adc add imul or arpl xlat fucomp fildll int addr16 repnz cli xchg bound out push popl mov cmc jne repz fwait cld nop ret mov movsl test ja adc jb add loopne sbb lahf bts mov lret lds sti ja shlb cmp inc cwtl imul dec and addl pop insl pop add mov movsb popa jne and mov jbe or cwtl jmp hlt cli mov adc (bad) pushf stc gs push jo pushf pop jp (bad) std in sub sbb sub je dec mov inc pop int roll sbb cmpsl jecxz inc dec ja mov test jge jg xor into aas out add mov popf mov scas mov outsb fcoms jb pusha fnop mov enter repz dec (bad) outsb aas int3 jg cltd scas daa inc xlat push jae roll aam pop (bad) xor js mov push push push pop xchg call cmp mov cmp push out dec push push xchg (bad) or pop cmp (bad) xor cwtl add lea sbb repz (bad) jno mov sbb subb cmp in repnz add test addl leave dec sbb jb lahf sbb xchg insb enter aam fsubrp out in test xchg loop add dec sahf push inc ja push cmpsb sti test jg pop xchg stos xchg cmpb dec mov pushf popf clc cld xor pop mov daa int3 lea mov mov or nop subb sbb mov aad nop dec cmp xor adc idivl inc add cld sub mov mov adc (bad) xchg mov aad xchg fsubl cs push adc rol xor test xchg xchg popf scas call add stos push sub xchg std das xchg adc push mov fdivr test cli icebp fmull mov call orb dec jge (bad) sub scas mov cmpsb sbb test add leave jb outsl pop sti mov add (bad) inc jb xor mov movsb mov inc mov mov outsb (bad) add mov inc cmc rorl aad cmpsl xchg xlat mov add js push jnp (bad) jnp enter repnz xchg gs movsl pop inc push nop bound cmpsl pop jl test sarb mov (bad) fwait sub in cmp and adc test popf cmp outsb orl inc fldpi pushf and lcall leave jmp pop sbb je xchg scas in cmp mov popf pop add push gs daa push stos lahf mov call out sbbb in call (bad) sub repnz push stc or inc (bad) outsl ljmp push mov sub jo add imul (bad) push xchg ret call mov adc mov lea repz mov add ret pop mov add jns leave mull outsl je pop sub mov and xor pop sub dec adc jmp mov pop dec mov mov mov jp or ds stos test jg (bad) xchg mov push arpl or cmp add mov pop enter test push test cmp nop ljmp jl daa imul sub mov mov pop repnz arpl push (bad) xchg lret sti push hlt loop push cmp cmp mov mov sbb out outsl dec push adc js sub mov jns (bad) je jp xchg movsl rcrb jl cmc add jecxz mov mov lret out pop cmp mov je insb xchg or mov subb cmp gs out fistp add sub stos int ljmp and push loopne (bad) mov shrl icebp mov jae mov xor mov xchg out mov ja loope fdivs inc shrb lea mov mov sbb cmc stos inc out test subl xor es (bad) mov insl jle mov in pop daa cli fdiv cwtl and idivl and stos mov int stos lds mov xchg pop xchg rcpps mov push icebp mov pop dec lret inc lea out and jge jnp push jae mov shr push data16 cs xchg cmp dec je xchg or imul stos out xchg mov jb jbe adc sbb test je sub sub lcall inc and push mov jmp push clc lods jnp sbb les xor xchg sub es xchg jmp inc xor cld mov cwtl jg insb xchg lret pop dec xchg adc lods xchg test cmp jmp jmp xchg js ljmp add scas ss jb lods icebp sbb daa xchg cs sti jl das and lods push jmp lret sti test pop pop je mov (bad) push jno adc inc or xor inc rolb inc xchg jns jns mov cmpsb out imull mov shr adc fdivrs orl or xchg xchg cmp xchg fiaddl sti int3 push (bad) mov inc xchg sub and sti into test mov scas mov xchg mov out lds (bad) xor cmpsb xor call iret adc jb shr dec enter pop adc aad (bad) push jmp and cmp es inc xchg or jnp jp add push adc sbb es lcall inc (bad) int3 mov push push call mov adc push fsubs and js xor (bad) jno inc jbe clc insl xchg aas xor mov mov cmp xor adc fs sub adc push mov ljmp aaa push cmp cmp icebp (bad) popa inc clc dec pop pop jno xlat jl xchg push add pushf popa jns push mov ret lcall fsts rclb out cmc sbb subb inc out inc testl loop jns subb cmp jle stos dec and mov (bad) add fldl hlt jae int3 andb xor punpckhbw lahf fsubr sbb fsub (bad) in pop dec insb adc add dec out inc push sub jmp mov rcrl xor xchg mov and adc (bad) jl sahf or test push cli orl add arpl dec rol movsb xchg aad outsb xor mov xorb sub push jno (bad) mov or repz gs loop jl add ss fisubr lds in inc jb or in sbb mov jp fs cmp and sbb mov sub leave adc daa leave lcall mov push cmc inc mov cld stos repnz lds pop dec xchg jp (bad) test pop jbe push inc adc xchg jmp add and std dec adc mov pop stc clc lods dec icebp mov les je pusha fidivr (bad) xor dec mov daa xchg outsl pop pop inc fwait sbb orl jo fcmovu das sbb mov xorl push (bad) sbb cmp jmp jmp xchg dec rorb lods pop into add aaa repnz xchg mov inc mov or lds xchg rol mov cmp mov adc sub mov test xchg or stc mov push stos pop sub mov rcrl mov fwait add out enter pop sub add jmp (bad) rcl xchg sub jp push push je int3 mov ret lcall dec mov sub adc insl add sub mov rclb mov add pop and xchg mov mov imul test stc pop cwtl mov dec stos clc mov sarl sbb add insl shrl pop es push xchg push lea mov out mov sti jl out add jle xchg test pop mov or xchg cmp dec fildll mov or (bad) pop pop lods mov les js repnz cltd mov pop iret add adcl pop outsb mov or insl mov lods and ret mov popa leave (bad) shll pop mov fs lret mov fbstp mov test xor fildll lahf imul add (bad) lock pop xchg fisubr aad pop add mov nop xchg jl imul push or out (bad) mov rorb les out lea out imul mov xor mov into inc test or mov jg xor sub ret cmp dec fimull pop jle jb loope pop sbb mov add pop stos sar cmp jge jo push and mov push pop adc incl sub and les cmc xchg sti aad jns jecxz std fistpll repnz fistl cmp sub sbb or push bnd outsb aaa in jb lods lods push fs stc and pop fs lcall cmp icebp lock jno add clc out sti mov mov arpl inc inc sbb and (bad) push xlat gs rorl add scas popa add sti adc insb push loope adc negb call cmp fildll into int (bad) xor and mov bound xchg xchg loopne mov addr16 mov cmp into push movsl mov aas cld xchg mov sbb lods test es cmpsl mov or pusha mov ret cld (bad) imull pop add adc or inc loope out ud2 xchg mov (bad) inc sti js inc clc add dec sbb (bad) jno sub testb dec cmp sub and xchg (bad) loope popf nop dec push loop push gs movsb adcl xchg push mov adc cmp and int xor mov mov ja mov out stos repz repz pushf dec sarl dec test sbb (bad) stos or pushf pop push pop dec insl repz dec lea shlb cltd lret insl cwtl arpl and sub fs cmc add and jg mov xchg inc mov (bad) enter ljmp pop sti pop shrl out and and cmpl xchg or out nop pop out add mov loope cmc mov or addl test (bad) (bad) xchg add push inc loope mov (bad) pop gs fldl sub add and sub gs fsubs mov jmp xchg fildl outsb cwtl (bad) jae jno ds mov push (bad) xor out mov pushw inc pop bound xchg (bad) pop cmp pop mov jl fiaddl (bad) mov int pop test xor sbb xor das dec adc cmp insb mul mov ljmp arpl adc dec lcall mov test stc iret inc and fstpl or test inc mov push repz rolb rcrb into je cmp mov jg jnp hlt jb lock call dec test xchg scas mov js inc and push dec adc adc test xlat adc inc lock rorl dec int3 pop repz sbb mov cmp cli jne pop lret psrlw push push cltd push add add fsubs mov pop (bad) insb movsb mov ficom adc out stc (bad) cmp dec cmp int3 pop cmp into cmp int pusha add (bad) in xchg punpckldq (bad) cmpsb (bad) fistp inc sbb popa jns cs fiadd out cmp leave jne sbb in mov sti adc xor sbb enter popf movsl outsl xchg dec or nop mov sbb scas aaa mov lret mov out (bad) scas in (bad) pop add pop and in inc call dec cmpsb xor jge inc push mov enter aas xor lock test (bad) dec fsubs aam ljmp and add dec mul shlb iret xor lods rol dec dec inc js mov add push (bad) aad push cmp adc push mov stos xor cmp push cmp push xchg adc jmp cmp pop hlt fnstsw mul test jg outsl add sbb cmp aam mov dec cs pop sahf imull jmp out (bad) pop push push in jnp adc cmp adc outsl xchg mov xor (bad) cld push push or mov cmp jb dec dec xor loope stos inc pop mov push clc jnp add jp or addl int3 les fbstp test or lods cs mov lret sub sti lret adc jle mov aaa lock mov cld sub test mov pop xor xchg pusha push mov imul pop fs sbb daa fs les push jge jo (bad) sahf push push movl pop es mov xlat jmp xchg out xlat inc cmc mov (bad) ljmp adc fistpl unpckhps lds mov jl lret xchg loopne imul push pusha or call mov lahf test xchg or repnz mov mov scas jl aaa stos (bad) lcall cmp add aad mov test add adc repz icebp mov jle lret sbb movsl mov jbe (bad) cli dec adc mov or cli ds (bad) push iret cmpb dec push add arpl aas pushf mov dec adc jecxz scas or fldcw xchg stos bound jo ljmp xchg cmp dec lret push or mov out mov sub pop cmp mov add movsl mov ret repz loop jae mov out leave dec js push mov lahf mov rcr inc add push jns (bad) xchg and sbb dec or scas adc mov iret in inc cmp lock push xchg lea inc ret int3 sub insb sti in mov jns sub lcall jp or xor sub enter sarb lcall movsb fbstp test pusha outsb push lret fmul push push mov in xchg cmpsl ja add mov mov ret (bad) cmp mov iret xchg push fcoml lea lcall int3 xchg outsb mov dec push movsl shlb or and (bad) jmp mov sbb lods inc jae push in xlat inc ret mov es lock out movsl rcrl cmpsl pushf test mov dec stos mov bound int3 aad or xor xchg (bad) js mov mov mov cmp cmp cmp into push jecxz mov mov jae jp mov xor jp xchg mov subb mov in scas daa mov (bad) fucomi and and pop popf cmpsb jno add (bad) cli loopne pop jbe jle jl in sbb and mov or ss loop pop (bad) push push mov pop stc xchg mov ret adc lret fcomp ds and dec enter test xor (bad) loopne jmp pop mov mov pop rorb or lahf std adc sub adc lret xchg mov (bad) mov fidiv inc jmp fmull xchg cmp popa xchg xchg mov cmp leave dec icebp cltd adc das push pop cmp xchg mov ret imul dec jb fiaddl and pop adc pop pop ja push subb lds (bad) ffreep jmp (bad) (bad) and popa push fwait cs das mov jle dec and in daa lds xchg dec lea in cmpsl jb and jg lds sub or push mov push (bad) scas xor in inc hlt and mov ljmpw pushfw ljmp xor push es mov test jecxz enter mov pop xchg sub clc xchg jecxz adc cmp pop repz or es shll xchg fldenv faddl fidiv xor (bad) jecxz sub stos inc add jecxz add pop out nop push dec movsb wrmsr mov jno mov pop jmp cmpsl cli push fwait cmp sbbb sub adc icebp fs or aaa cmp in add sub popf ficomp mov jge mov mov aas stos andl cmpsb lods cli mov mov adc jle rcll push dec xor roll lret cli jle test clts data16 int3 leave and inc ds out adc xchg aas adc mov imul cwtl (bad) movsl mov push and jnp aam js roll cs mov mov xchg push cmp mov or (bad) out jo popa imul imul and lds mov sbb jp sarl pusha inc rclb aaa sahf in aad mov (bad) sub ja cmpsb or ror lss lods inc adc ret fisttpll mov push mov les mov mov mov lcall cltd inc into scas ja mov iret loope ljmp hlt cmp mov dec push dec adc mov testl movsl loopne data16 cltd pop cwtl jmp mov pop es mov jns cmc jmp outsl pop in out push pop adcl push cwtl cs ret pop in fldl mov push popf jle xchg lahf (bad) andl imul jns jg lods xor scas stos mov adc push scas imulb icebp inc aad dec sbb popf sub das fisttpl mov daa and (bad) mov dec sbb fdivs les sbb adc inc mov adcl sub sub or mov sbb push stos int3 xorb add jbe int3 fadds mov jmp add (bad) and dec repz inc sbb ja add lods ficompl std sub lcall xrelease mov cltd icebp adc inc mov addl stc adc stos pop dec fistpl push push jae inc mov pushf insb mov xchg aaa mov fadds rep iret jle cmp mov jl out fchs mov inc sbb jg ret inc hlt push dec add (bad) mov les out mov add (bad) push jmp (bad) and xor es in stos jecxz call and (bad) lcall adc xor fxch pop inc shll dec dec xchg cmpsb out out push inc mov stos push inc lds sub (bad) (bad) adc shll adc pop add sbb push xor sbb mov movsl pop sub xor (bad) mov mov dec jmp int3 sahf jmp jmp sahf stc test sub jmp pop nop lret insl pop pop test push fidiv xchg adc cmovns jo movsb fistl lds jne (bad) or test es inc push inc jmp jl mov lret jmp inc popf sub addl ja imul jl les hlt jnp jo (bad) xor push cld or std cs add adc or adc (bad) xor adc sbb inc daa or aas iret (bad) les adc dec lret sar jb and xlat out ja xchg cmp sub icebp add test lcall fdivl loopne push iret mov aad xchg push xchg add aam inc mov adc push mov cltd sbb push out fdivl sbb into sub pop bound xchg mov xchg movsl inc int3 dec sbb push fistpl fcmovnu mov ljmp adc pop insl outsl xor neg (bad) push or out jp sbb xchg jmp jb cmp mov xchg adc add stos mov cwtl pop or jp pop pusha js cmpsl cltd mov jge mov mov call push jp std mov push sub fisubr cmp lea mov push ljmp mov adc mov cmpsb mov xchg imul out adc ss cmpsl (bad) jmp push dec add dec repnz or mov push dec add (bad) (bad) jl les sub call mov adc fistl (bad) fistl cld stos xchg test mov loopne fldcw out out inc mov fcoms insl pusha jno inc pop leave lock lods rcl cli out xor xor cld insl sbb jg jmp cs and out hlt pop sbb popa shlb es (bad) sub sbb jp fildl xlat lcall cmp loope xor sahf stos out outsb dec xchg mov fsubr out sub insl mov enter dec loopne mov rcl gs shrl xor jge imull scas mov leave mov lahf jg sarb ja push (bad) xchg (bad) push push mov xor insl cli xor scas jg cs or sahf dec in xor pop mov mov (bad) xchg out add into cmpsb test mov mulb mov (bad) cmc cmp dec sub gs add push mov es dec lret cmpsl shlb cmp jb stc cmp mov mov loopne pop add cltd pop adc neg stos pushf es das mov imul fisubrl test lods mov push adc mov xchg push cmp out arpl mov sub mov fcos inc push dec ret cmp fist les cmp lds movsl cmp lea cwtl cmpl (bad) shlb in into test adc in loopne and shlb push lods das shrb (bad) cmovnp jge mov jae dec cli xor dec lock jae je add cltd mov insb aam dec mov lahf imul jnp cmpsb inc rcll scas scas adc fs pop sbb jl sub insl jno push mov es into ljmp and dec and daa mov dec pop dec cmp sbb sub mov inc addr16 rol (bad) jp cld icebp cmp rcrl jge enter and ret cmp xor pop insl data16 scas daa mov cmpsb cmp leave scas push fistpll subb xchg (bad) jne sbb mov negb mov in push jmp test hlt xchg inc flds or cmc xor or aad inc aas mov negl lds mov into sahf pop gs sbb fildl cmc scas pusha pusha dec xchg push or les cmpsb sbb sti in cmpsb or lock jns mov push aad aaa jmp push aad scas or sbb test or bound fnstenv mov push adc mov mov shrb aas movsb orb push out movsb icebp loope mov repz inc jecxz stc fs ss dec pop sub xchg pop gs insw xor push mov and movsl jg sahf cmp sti outsl mov mov mov cmp pop mov pop mov jnp and (bad) test hlt ja es pop in cmpsl fsubl inc cmp pusha jno shll jl mov push mov rcrb fcoms mov mov fstpt orb xchg incl sbb add fistpll hlt xchg or mov xchg pop dec jnp xchg pop sub in inc mov mov call mov mov stos adc loope addl js test mov js orb cmp push je les sub push xor gs sbb push pop clc jb jno jb test dec dec jmp dec dec inc cld jle dec dec insl mov jl push test fstps pop pop icebp popf addr16 (bad) popf push daa xchg push cld or mov test inc movsb cmpsl clc call imul or mov test pop rclb xchg pop cltd push rcl popf or cld les insl imul arpl pop mov fistp push rol mov lret mov frstor lock add adc cmpsb imul mov jo rcl xchg push cs lods push inc mov adc mov mov fisubr sbb dec dec test into mov (bad) cmp lahf jbe enter repnz xor in pop testl inc cmp outsl repnz mov out in setle into cli push dec pop (bad) lret fwait sbb push test pop mov stos add push push stos enter sbb (bad) push mov cmp cmpsl in push aas adc cli insb call movsl jle je aad add clc mov inc int3 mov test xor inc jnp pop cld andl or inc inc mov cmpsl das sub add pop mov pop and out push cwtl dec (bad) push mov pop inc (bad) dec mov stos ja cmp sbb pop loop aaa sti loop pop jb mov pop enter lds jo dec or into lock cmp (bad) rolb push pop inc je cwtl add out ja cmp push jmp and adc popf push adc ss mov cmp jnp fwait jg sub in mov fldcw or mov aaa dec das sbb inc mov xor or mov pusha or xor mov cmp mov in cltd xlat fwait icebp and outsb xchg inc jne push cld sahf jge dec js outsb dec movsb add lock sbb jp mov xor pop jae lcall cltd lret cmc pusha dec and pop stos rorb ret jb xchg xchg outsl daa mov mov fadds lret push ret pop cmpsb add outsl xor dec pop retw cmp test sub bound and daa subl movsb out jmp ljmp pop repz jo jae imul (bad) das mov add stos ret jecxz fiaddl or pop mov sar les mov je adc test loope dec enter cld das push xchg mov ret mov ljmp outsb and cmp shrb mov mov (bad) hlt popa daa cmp mov mov sub or lods mov in mov mov cmp sub ficomp and or insb cmp push out cli loop ret dec xchg je ss mov inc push cmp jp pop mov fwait inc insl xchg fadds xchg dec into push das jb xor inc lock inc ss sbb scas adc sbb (bad) pop cltd rcl pop push xchg add pop cld (bad) push adc mov lock gs iret stos idivb adcl dec adc scas popa ret jnp (bad) data16 data16 inc jo jecxz jnp pop (bad) jbe adc inc sbb movsl pushaw jne xlat push jg xchg jmp (bad) (bad) mov das or and in rol outsl stc fcom popf ljmp cmc aaa dec shll cld dec sub addr16 push (bad) push mov outsb xchg pop mov ss jnp sbb aam mov or fdivrs hlt mov sti (bad) pusha lds xchg mov mov inc jno pop push dec adc mov mov mov sub cmc sub (bad) popa add sti dec setle mov nop rolb adc add rolb insb sbb ror bound mov test call movsb xor in fdivp sti push stc or scas adc cmp mov mov add mov sub mov test arpl mov jae cmp aaa mov dec dec adc in sub leave loopne test xchg xchg iret scas mov or jae es xor mov pop js push fist push negl data16 xchg sbb jno or cmp jnp xchg lret sub imul inc and sahf aad pusha dec push test xlat sbb sbb arpl outsb addr16 xlat fisubl push test pop loop loop les call mov repz mov insb iret adc cs (bad) mov lods or pop or insl or aas in add push cmp dec cmp call cli mov int3 jae loopne add rcrl shl mov sarb or cmpsb pop inc mov push pop mov mov mov cld (bad) jl out jb sub (bad) push ss es inc or sbb fcmovne xor cwtl add nop sbb xor mov lock ja mov aaa es fs jne mov imul mov enter jp rcrb mov outsl arpl add or pusha add jbe fadds add std (bad) mov ret cmpsb lahf leave xchg mov std mov or mov or pmaddwd and push pcmpeqb test or adcl stos dec inc xchg lods pop xchg jb cmpsb dec jl lahf sahf cld and cmp sarb inc jno repz inc insl imul push push sub lock push add push (bad) cli xchg push inc ds mov lods mov test je das ret stos fldcw insb jne imul push push js or push (bad) int (bad) arpl pop daa je,pn mov or pushf movsb in repz subb jecxz fisttp jne (bad) in mov int cmc imul dec cli dec pop fisttpll jg es imul pushl inc sarl cmp rolb sbb and mov loope jle das xor cmpsl bnd add sbb into mov stos pop push jg fnstcw lret pusha inc cmp mov into pop pop adc inc sub lods movsb jnp fldl2e lahf stos sahf pop adc imul jbe cmc out out xchg icebp xchg (bad) jnp cmp lahf xchg icebp vpmacsww push push push push xchg add imul test and in sbb loop addr16 sbbl test mov push insl fwait pop adc aas add nop fimul dec sub lods dec push ret push dec shll sub incb sbb pop pop (bad) mov les mov sbb jno mov and popf daa mov push xor imul jp frstor dec and xlat cld inc mov inc subl lahf pop cmc icebp adc stos loope mov ja cmp mov jno dec and sub add ficomp dec sbb and (bad) in adc stos mov jae aad or lret idiv pop cmpsl dec add jl mov fcomp mov dec (bad) mov cmp repz popf dec lock loope fs imul dec pop out bound jbe pusha or outsl inc inc mov nop hlt jp mov hlt out bound adc daa xchg jg test xchg movsb jle (bad) pop xor int jp ret push adc cmpsl lcall mov and add cmc jns std cwtl sbb movsl push gs fidivl ficom mov orb or loop push lcall dec cmp adc lret sub imul daa mov sub test or or pop (bad) and adc movsl sti jg and fs or add xchg add aam jbe enter cmp test int3 hlt test call add push lds cmp inc pop rcr je jno test lcall out js xor lahf sub dec fmull mov or jecxz mov (bad) ds arpl scas bound pop push sti (bad) leave lods imul push xchg int and popa jle jle pop andl cmp imul add aam leave lods cmpsb dec scas (bad) dec test insl mov std (bad) adc pushf mov into xchg sub enter es fiadd mov push lret mov sahf sbb or inc pop mov xchg sahf (bad) or int in xor pop dec fnop xor cld sub ljmp inc adc in inc inc pop movsl lea in cmp ret mov inc jns cli dec pusha jg pop inc loope sub test adc inc movsl push scas cmpsl (bad) (bad) cld pop in bound sub out aam inc push (bad) push push and push cmp mov push push cli inc xchg jno mov cli insb dec xchg pop push popa or push addr16 nop lret fiadd adc mov jge xchg popa push fsubp lret push sbb out out mov jne pop cmc push xchg push cmp push mov inc daa dec out cmp sarb enter cmc push ss jl sahf arpl sahf ja cld jge sub dec cli xor loope lds enter pop divl loop test movsl pop aad push sub and cmp pop cs push mov xor aad leave gs imul xor je jo push push push adc fnsave adc lret sub lcall das and push mov cld lods rcll fstpt inc sub ja jl shrl pop pop xor mov sbb decb inc inc daa or dec mov inc lahf loope andl inc je repnz mov pop add mov dec std jl lods dec daa mov (bad) fstl nop and xchg jnp jecxz push sub aas jae test push cmpsl neg popa adc movsb xor jne push push pop dec (bad) in (bad) jae adc xchg add push lea in scas (bad) decb insl clc jl or rol fimul adc cmp push cmpsl fldl mov mov adc and (bad) movsb lret cmp or lods push jbe les fwait in sbb adc inc test push fwait out clc mov jno (bad) jecxz and out mov insb mov cmp jo push lret test ljmp popf sub fisttpll je jge call fistl push in mov push mov inc sub pop jns mov jae sbb out mov cmpsl das mov add hlt stos ljmp (bad) jae js in ja shlb loopne mov mov sub sbb or jb pop ja bswap popa pop les mov or push int xchg mov jle popa push xchg int jp fbld movb (bad) or sbb jno imul fnstenv dec fldcw push add loop xchg push repz pop imul mov call mov out adc popa mov sahf or mov sub fsubrs ds rol rcll lods cmp ja sarl pop (bad) jge les sarb bound add test pop fs mov lock call and lea scas or xorl mov ss sti (bad) lock loop pop fdivrs test sbb xchg cltd push adc and imul xor push mov xchg mov or and fdivl cwtl push mov xchg enter xor pop je mov pop mov (bad) popa icebp std push outsb cmpsl mov int3 je pop call push inc jle lret repnz js bound mov insb xchg popf xchg in inc sub in movsl fcom (bad) cltd and or lahf jb xchg sub jbe aas push outsb ds mov fs ret pavgw (bad) in adc mov push shrl aad in xor cmp jl pop or cmc std pop dec inc lods fsubs sub push xchg mov cmpsb popa xor xor in inc arpl jp imul xchg js jg or or inc stc push jp add lods pop iret cmpsl aas ret jne sub fucomip mov rcl sbb pop test jbe xor pop loopne loopne pop inc aas ja sub xor mov xlat adc dec xchg mov (bad) cmp xchg push (bad) mov jg or lahf enter xchg cmpsb icebp cld ja dec out out sub mov xchg mov in inc mov testl cmp mov iret cmp mov push jecxz cltd adc leave mov cmp and dec into push inc cmpsb dec xchg (bad) (bad) repz (bad) adc push ret out cmp mov xchg lds jle sbb out mov xchg notb clc dec faddl sbb inc out add insl jns fmull dec xchg aam mov add in jbe or and or outsb mov inc (bad) lahf sub mov xor xor mov mov out scas jecxz das outsb xchg fist iret (bad) xor mov shrb sti rol mov test stc ret pop (bad) decb shrl mov les in cld mov ja xchg jecxz and pop test daa push inc dec mov or repnz lea or lahf loopne dec into pushf fadds fcmovnb fldcw mov sub in (bad) add jge (bad) (bad) jl and jl aas jl test or xchg lock lahf ficompl js fwait cmp mov pushf cmp mov scas adc xor push sbb (bad) push and push sbb cmp fisttpll or movsl pop (bad) repz or cmpsb mov into sbb xor inc and or jo out and mov es and xor push (bad) and mov cltd push insb ror lahf mov or cmpsb xchg pop arpl pop daa lret clc out mov lock imul in int3 sbb mov shll xchg (bad) leave rolb lods adc push loopne sbb lods pop ja ljmp js in sub imul sub jecxz dec cmp mov cmc mov push add dec inc nop xchg push add cmpl repz cmp sbb int3 dec add pop jmp int3 pop adc loopne sahf dec xor aas push je std cmp xchg cmovno or cmp sbb test pop add jp mov (bad) pop sub fsts or nop insl hlt cmp and icebp add dec mov add inc addr16 aaa jle and test xchg pop inc cmp sub mov pop movsb adc out lds mov pop loope fnstenv push daa mov pop rorb popa test (bad) cltd inc cmpsl mov fldenv sub cli adc mov fisttpl lret fdivs xchg mov sbb pushf movsb xlat rclb sbb adc dec mov rclb out pop loop aas dec jge imul add jecxz sbb cmp call repz sbb push out rcll mov lret pop mull aas lret roll popa cmpsl sbb loopne les arpl popf sub scas mov mov (bad) fisubl xchg mov dec cs bnd add dec adc mov push sub movsb jecxz dec pop or jns xchg in jae shr push test je jo mov negb (bad) jbe cli inc xor rcl lods sub and mov fimull imul jp adc or sahf mov cwtl arpl inc add scas (bad) repnz mov xor push std movsb aam or loop jns jae jne jl and cld mov jmp jae pop sub jns fnstcw mov mov xchg decl mov push mov std pop mov adc aam fdivrl in mov rorl mov sti jl,pn jg daa dec adc or xor cmp popa mov inc movl dec lea jmp push in insb xor mov jl pop mov es adcl and bswap adc js pusha inc add scas arpl and or pushf cld imul fdivs (bad) xor sub push mov sbb shrb arpl (bad) sarb and push mov in mul leave stos out loope lock pop add imul mov in lret xchg dec rcr pusha leave (bad) ds std pusha sbb mov das roll pop mov movsl jmp lret fmull jle arpl jno rorl mov sub push cmpsl fiaddl mov es fst pop std push sti and and ds fbld push ds int3 mov and adc or sbb (bad) hlt lock hlt push sbb and mov mov ret or cmc insb dec cli inc ljmp push pmullw push mov lcall jae fisttpll sbb ret fimull sub pop ret ret sbb ss in das fiadd fucomp dec inc iret or fldcw inc aas mov nop mov nop cmp (bad) ss lds xor jns sbb adc push or add insl and mov outsl or fbstp ret adc out pop cld (bad) fcom lea (bad) ja jne dec shrb sbb pop out dec dec xchg cwtl (bad) ja sbb not dec lret int3 sahf xor jmp test gs shrb dec pop mov inc stos push sbb cmp sub out lds push stos scas jge pusha (bad) sbb cmp push mov imul mov pusha xchg jmp cmp repnz cmp push bound loope cmp lods test inc and fldt xchg cmpsl mov xor jns fnop mov (bad) mov fistl dec add xor pop cwtl dec mov outsl cmp decl push ss orl push xor push inc mov dec (bad) nop jg mov push mov fwait inc cltd daa inc aaa cmp mov call lret int3 mov int3 (bad) mov (bad) or test (bad) aad cmp xchg push push xor sub repnz test (bad) push cli add ds js push or in pop lret lret outsb sub inc and outsb stos loopne pop push (bad) mov lods (bad) sub xlat jp and and lods add pusha pusha jno inc xchg and adc pusha mov ja inc push insb inc fdiv cli pop js xchg mov mov (bad) addr16 in push int jns imul movsl test dec in dec sbb xor (bad) jae movsb xchg push ss pop lret mov or jo stc push cwtl js sub in jg cmp push push daa jp frstor fisttp xor iret add or cwtl and push mov and add sub flds sub leave xchg or pop jmp sbb xor ja out pop or jmp into xor cs mov (bad) cwtl bound movsb xor xchg mov outsl popa mov sbb xchg (bad) lods mov mov push jae sub and lret repz push daa jae jp out xor fs mov lea mov inc mov push leave jb popa sbb mov mov divl popa decb call inc mov or cmp das and adc daa and orl test sbb call mov and lahf andb movb insl test shr push pusha pop mov lcall dec aas js mov ret test inc imul fsts movsl out lods fstp mov xchg loop pop lock test cmp inc rolb push lahf lods mov or cmp mov mov pop lret mov stos cs ror (bad) call sub xchg iret jb orb nop js or shrl inc cwtl push pop mov push fdivl data16 push int3 fwait int3 out rcl dec pop mov jb cmp mov pop cld lcall mov lret daa adc or or jne and push inc jecxz out les add aam inc mov mov jnp sub ja adc lahf popf repz mov jmp push or ss fidivr stos adc data16 pop (bad) ja fcomps int3 mov dec test adc loop pushf jnp jl dec lods mov mov bound adc xlat mov mov shr push aaa xchg lods xchg lret insb jmp jae sbb xchg std popf mov mov xor pop mov and popa jmp adc iret scas and adc cmp pop sarl sub inc jge adc bound or pop arpl or sub mov xor (bad) lds (bad) roll setne test ja dec lret daa jae pop int push mov fisub mov mov mov push xchg and and inc mov xchg inc add outsb inc mov mov push mov push xchg pop push loope,pn aaa int3 inc ja pushf in jecxz arpl push push cli (bad) and repz test push mov mov mov aam jo nop jns out jnp cmp and cmp bound sbb (bad) daa gs (bad) mov cmpsb and push lahf in mov xor cmpsl mov xor icebp dec (bad) and pop subb pop sti push insl jmp leave mov xchg push xchg mov fnstsw mov imul inc push fidivl test and test push ljmp jecxz (bad) lock call ficoml adc xor testb mov and int3 fwait jl call scas inc inc sbb movsb xor inc shrl lahf enter mov sti mov lods mov insb mov pushf daa idivb inc (bad) hlt jb idivl sub xchg iret pop mov mov cli xor ficompl sbb ss out movsl fwait aas sub or fistl lret jb adc pop cmp fwait in (bad) xor repz push arpl daa xlat push stc mov xchg jns loope pop in pop push imul shll adc mov int xchg add push sbb aam jae xchg gs or pop and push inc imul loop lret mov mov sub adc push movsl cmp fucom lret cmp scas aas mov loop jo mov fnop adc sbb mov rcl xor rclb mov add mov incb add jmp mulb jbe test mov dec ljmp std out inc xlat dec movsb js pop es (bad) clc inc mov adc xchg cmpsl testl adc sbb xchg push (bad) cld test repz lahf push pop mov mov add (bad) mov out icebp lret sub mov ds mov ss mov daa push pop fmulp xchg and out cmp and dec jno sub (bad) or jns mov jmp xchg jecxz gs idivb fisubrl insl mov and jno or add lods cmpsb rcrl pop mov (bad) iret fist icebp dec fcompl imul inc jns cltd pop mov test movl push rorb jg push ret mov notl (bad) and clc push jnp pop insl inc xchg jl int adc loopne stc pop addr16 mov inc fdivl (bad) sahf (bad) or inc jbe or sub mov push stos daa xor sub adc dec sub add popa sbb mov jmp sub mov mov and push inc cmp (bad) idivb sbb and sbb iret movsb jb and nop sar xchg mov add mov mov or push xor mov rorb lea icebp dec lods js popf xchg mov lock daa cmc shlb repz xchg stc inc cmp sub (bad) xchg pop sub bound stc rclb jmp daa add mov test hlt xchg push jne pop and xchg xlat add fs push push xor cmpsb aad jecxz adc inc sbb xor or xor daa iret sub and inc scas ficoml les faddl or push lret push aad cmp bt mov mov push push mov adc fisub cmp xor fxsave in lods shrb jno or inc add sub xchg sub shrb nop movd fdivs push lods push jmp xor mov or negl aas cmp cs cmpsb addr16 mov fstpl xlat leave push add cmpsb popa adc lahf mov and push out sti mov add xchg xchg mov inc push sbb mov and push jae cs push insl fs pop iret add dec pop push and cli stos pushf mov sbb mov xor inc cmc imul mov adc sarl int3 xlat jbe loopne mov lds mov mov mov sbb int3 outsb sbb cmp adc and bswap iret jo cmpl (bad) jge loopne xchg mov cmpsb mov and add mov insl xor pop out xchg xor pushf ret jo dec es negl loop dec arpl jle pop in or mov and xorl test cmpsl mov std adc sbb fwait xchg fwait jmp xchg iret xchg cmp xchg and je xchg popa repz into testl ret sar adc xchg inc mov into jmp jne xor mov insl fistpl dec sub sub xchg adc fmull rol imul fadd sub and (bad) outsb mov sub xor lret sub lret inc or xchg cltd push test xchg mov pop lea arpl xor clc test hlt jg add jne fld rorb in data16 loopne jle,pn mov test mov mov xor (bad) cwtl (bad) mov in push or jbe push sahf cmp enter mov and cmp mov sub sbb cmp fcompl mov mov gs imul mov pop inc cmp add dec in js adcl das out aad outsl cwtl mov dec imul js xor flds and mov (bad) (bad) clc sti dec sbb fs jl inc (bad) xchg (bad) cwtl clc xor test addr16 xor out or aas dec movsl test cmc pop mov cmpsb stos xchg (bad) cmpsb movsb mov push mov out mov mov out push sbb popa fstpl adc jl cmpsb out sahf bound cmp in fucomp dec xor out adc mov sub cltd movsb decl cmp fisttpll adcb adc xchg outsb js xchg (bad) lds pop jnp dec scas xor mov inc adc adc flds sbb lods mov lret push insb in push arpl aas xor sub cld js repz mov pushf cmp jne fcoml push stos scas lret sub les out fdivrl mov adc push lret mov dec and lods push push lds cld pop hlt loopne fucom iret sub pop mov sub push arpl and sti call or xchg fmull pusha pop add (bad) imulb daa fsubp mov stos aas sbb lret arpl (bad) je (bad) ss push lods jge push mov je mov or or fidivrl adc hlt aaa imul mov mov push sbb cmp add mov mov (bad) jne lock sub stos mov lock sub sbb push (bad) xor cmp iret mov dec jno or inc sti push xchg imul adc jae push jae or clc and leave and adc jecxz fwait xor and std xor cmp adc das mov pop arpl xchg mov fwait mov mov pop or hlt inc lret mov (bad) and jo scas add daa mov aad add xchg and (bad) addr16 xchg sub jp and fnsave jb add cmp mov je loope push rorl jmp or mov push adc add add shrl mov sub jns fwait cmp dec popa xlat xchg cmp outsb sahf (bad) pop mov fild inc dec or inc sub adc jl xor loop call popa mov jge push add mov dec jne pop (bad) or fldl mov add cltd jg cmp xchg sti sbb incl add add and and pop mov in ret test pop fwait ss test or lock pop dec xor js xor ljmp ss rclb dec rol lods test icebp mov jecxz mov push sbb mov xchg jmp nop push lods jns jbe xorl stos pop inc mov lock adc in pop setg movsb adc cld push or mov mov mov fcmovnbe xchg mov push push (bad) cmp jl jno cmp mov fiaddl jnp adc xlat pop mov push sbb adcl mov jge pop pop aad jne push test std imul sbb aas add mov inc xlat jnp outsb ret (bad) scas add pop loop sbb xchg push inc sub cltd inc mov dec fs cmpsl inc adc pop mov bound ja inc test addr16 or bound sbb hlt aam jge sbb repz and gs pop jno jb xorb (bad) xchg repnz mov aaa test xchg notl mov sub andl and add sbb out inc sbb pop push out inc mov movsl sub jl mov int lods les xchg mov rolb adc mov adc pop mov das xor or and mov mov dec and xchg cwtl cli push data16 dec popf xor inc add pop mov xchg xchg cmp insl push fiadd or add xor rorl xchg les fimull insl lds and jl hlt out call dec pushf push pop push mov std hlt test rcll pop dec insl repnz daa mov icebp xchg mov or sub sti xor jp aad mov mov adcl test roll jmp in jne ret pop jne xor mov stc cmp push mov fwait (bad) cwtl mov xor lcall cwtl inc add jae mov xchg popf mov mov cmp xlat fwait xchg jno mov pop xor dec fwait insl and mov mov mov mov cmp inc pop enter cld aas adc dec call xchg mov and push sbb int3 cmpsl mov add gs cmp pop fs leave inc mov loop mov movsb fwait jmp mov addl and pop and cmp jb mov inc ss (bad) fnstcw add push jle jle xchg mov add out jne bound loope in outsb or or lods and aaa add and in xor dec aad jb repz out addr16 cs insb jne lea cmp dec mov inc int3 ljmp and push push sbb arpl jbe jae (bad) cltd push mov aaa test lret inc bound inc push je cmpsb mov cld insb sbb imul push adc rolb xchg dec (bad) and negb (bad) fcoms inc pop mov mov add ss jge xlat mov inc repnz das movsb roll loop xchg (bad) pop inc push sbb jo xor push stos je or push push adcl push fadd mov jmp nop inc repnz stos mov jle jb mov or mov mov inc xchg cmpsb sbb mov gs out stc or (bad) cmc jecxz dec cltd insb inc (bad) mov bound out lock xorb jmp mov stos pop mov pmuludq jmp xor cmp lret das outsb mov and pusha mov iret call dec imul add adc inc daa xor cmpsb mov jmp and es or popl mov out pop adc sbb inc scas adc dec in jo lods (bad) icebp xor shrb sti lds shrb rolb sarb decb lahf add sbb push dec in pushf aad sbb xor or push adc out out orb popa push add repnz xor mov mov sbb add mov inc mov push xor cmp gs popa jg and scas mov add sub pop out xchg inc pusha or jb push leave pop stos adc and mov adc push push ffree mov pop pop lds xchg inc popa (bad) mov cmp (bad) ja push cmp mov scas lods (bad) daa xchg cmpsl stos sbb xlat or fnsave inc xchg fsubr stos inc dec insb mov cmp or leave scas add and daa add or je jp aas push stos ljmp fbstp sbb and daa std mov les movsb fmuls ret pop jmp (bad) push inc iret fsubrs cmpsl mov inc (bad) and dec or (bad) push clc mov lods jb lea mov cld enter xchg std mov aam cs and sub jl mov mov testl jg repnz (bad) xchg adc mov dec dec mov adc cmpl mov cltd lret inc mov xchg into scas gs ja hlt lea add jmp loop das or fldenv lock jle movsl inc out cwtl cmp mov push mov mov and jne dec pop adc xor and mov in ja cmc dec ret xchg xchg mov clc fidiv test and dec dec pop loop,pn pusha lcall add repnz gs dec fs and mov bound pop mov fiaddl jno movsw sbb inc data16 sbb test and nopl adc jnp lahf int push adc and xchg jmp (bad) scas punpcklwd xchg push lret inc add dec mov mov cmp (bad) sbb inc inc inc or jbe imul stos (bad) call inc pop mov or jmp push mov push rorb insl stc pop jns bound inc dec scas ja mov mov add mov and lock dec sbb lcall loop insb jns in iret mov mov (bad) out and (bad) ds dec mov cwtl sahf into pushf fadds (bad) lods cwtl mov stos cmp xchg inc jbe sbb dec inc add or jno in rcrb inc sbb dec push (bad) jo movsb inc lahf fidivr jp push mov xor sub fs outsl icebp and push jg mov mov mov pop sub outsl dec pop cltd xor lahf mov sub inc cmp mov push sahf (bad) adc sub fmul js mov pop cmp mov ja imul mov (bad) loope mov std cmpsb dec dec ja outsb sub pop push insb rep mov cwtl and and std sub (bad) loop out sub jge or cmp inc rol dec xchg lods arpl idivl mov dec mov cmp hlt jg cwtl in and ret lea (bad) xor pusha scas mov aaa loop into aas ss xchg lcall addr16 test clc adc mov inc xor mov jno add jecxz mov jecxz mov (bad) and dec out test data16 sub stos or jo pusha cmpsb sub dec pusha sbb mov push xchg call mov outsl mov or adc cmp cmc (bad) rclb mov pop inc aaa adc xor and and dec mov xchg stos mov mov rorb lds stos movsl imull outsl mov enter leave icebp mov popa fldl fisttpl mov jecxz scas xchg test hlt fsts loopne jge in movsb mov inc xchg cmp out dec inc and push push dec sbb cld shl das (bad) faddl loope xor mov sahf pop (bad) sub stos cli sub loopne popf mov pop test icebp lahf adc xor adc xchg imul inc test dec or scas aam or mov test inc push inc dec xchg fs (bad) fildll mov xor pop imul sbb xlat mov js bound push popa xor sub jge pop (bad) icebp ret enter add (bad) out orb push add mov fisttpl and dec into mov push sub lret or xor and cmp frstor stc movsl aam aad mov pop cmpsl aad fimul cs sarl cmp xor mov aam pop jge jo cmp jmp loop dec or mov mov ljmp xor jl jp loope mov dec sub imul pop int (bad) bnd jle inc mov fcompl jae jmp ficoml pop out dec cmc gs xor adc outsl push into fildll aaa or mov cmpsl cmpsl pushf sahf add ss mov xor xor lahf add pop insl repnz int in les js out dec jmp mov arpl cmp dec ret jb xchg or mov fldz mov mov mov sub sbb jae ret sbb js scas sub ljmp jg pop data16 in out add std sub and mov inc dec das pop in xchg mov lds add and enter (bad) xor cmpsl inc bound stos cmpsl aad adc cmc mov add push call xor arpl pop mov pusha aaa js push (bad) (bad) mov jae test xor or das aas not fistp push ficomp gs out push lret je negl pop loopne icebp or sbb roll inc mov pop xchg sub adc push add pop ret cmp dec ret (bad) sub mov sbb daa loopne lret ljmp sti adc sub insb jo mov pop fcoms cmpsl test out leave rcrl mov jmp (bad) mov mov jne and cmp vhaddpd int das hlt mov sub insb xchg add in lods mov xor mov cwtl je xor gs negb popf stc lock and cmp sub cmc jp enter adc gs mov lock fucom aam fidivr imul mov pusha incl pop rol sbb add (bad) js clc jns shlb cmp shrb push pop push push or dec andl lret arpl mov push push stos test pushf push sahf inc enter ds icebp lods jne lea clc cmpl cmp int3 hlt neg subb ret daa lret sub in xlat outsl loopne ret into fbstp mov call xchg ret and (bad) sub dec ds jmp inc jo or push or das jb pop test out xchg xor sub sarb push nop js xchg stos and cmp xorl ret cmp mov sub loop cmc mov mov pusha sub pop clc lret outsb leave lret jb xorb jle inc cmpsb (bad) jbe mov jae cli shlb xlat sbb and xchg addl out pop and mov pop sub inc (bad) or add lds jne cmpl cs std insl mov out adc dec or out mov jns adc adc in (bad) pop aam mov add lcall cmp adc in ret inc mov (bad) pop push inc mov and cs pusha inc xchg mov lods mov xchg mov xor rolb sti push and sbb xchg and fnop jns test mov mov aas dec adc mov sub xor push loopne (bad) jmp xchg icebp and or inc and jb imul sbb adc dec mov mov data16 sbb ja and mov inc jg xchg aas fistl lret scas jno fsubs mov lods insl imul jno mov movsl bound xlat xchg sub das mov cmc (bad) into flds and mov mov daa mov cmc std push push jecxz jle mov inc sahf mov sbb pop and xlat jl scas pop and adc lret and loope inc add push or pop xlat mov rclb (bad) mov or shlb pop dec mov dec gs popf mov and xor mov addr16 ja cmp xor mov out ror sub pop lods fiaddl je es and push jb mov test jg lods xor rolb sub xor in scas mov ret jecxz ja (bad) mov push jge ret fmull pop in mov data16 bound mov jp jae cmp push push xchg lcall fwait notl inc xchg pop jb (bad) clc ret fwait push cmpsb (bad) jp inc sbb mov icebp mov push fsubl stos inc ljmp pop popf enter fcoms inc push call arpl push insl repz js insl add sub mov push enter jnp (bad) hlt inc stos clc pop inc inc daa push dec sahf les pop out les add jb pushf jne xchg cmp sti mov pop imul pusha shll mov sub and xor roll fmull pop fisub sbb repnz pop jnp xchg xchg mov push movsl ja push sub daa leave pop mov sbbl addl mov in les jns mov jb add stos daa ficomp or pop cwtl mov cmpsl mov lea or rorb mov lods jo dec imul mov arpl mov push js sub xchg inc push pop push pop pop lds pop fdivrl push fnstsw shrl push daa enter addr16 out out ficompl and inc (bad) sti or int adcl mov push mov fcmovbe xor in mov add insl fisttpll (bad) in fs fs fistpl test inc test icebp pop stos test cmc clc pusha (bad) adc xchg mov sub (bad) hlt lret jnp enter sbb mov xor notb jge subl xor test mov sbb (bad) xchg mov and clc or lcall sub sub jne lcall pop mov ret add and repnz dec mov push jns aam adc jmp dec sub jb add cmp imul inc inc stos fwait mov mov ss mov mov sahf lcall pop (bad) jl sub je inc and xchg inc pop add adc popa inc mov adc xor ret pop std out pop call jl daa add test cmp sbb sbbb sbb (bad) cli test inc gs cmp insl inc adc sbb sarl orl xor mov mov fdivl ret sbb sbb into push pop ja flds inc aas jle xorb pop pushf lret enter test je xchg cmp xor pop xor cs enter ja mov mov or pop jbe pop cmp sbb test sbb call xchg xchg push test hlt in scas aad mov ror or xor aam sub jae cmp cmp pop aaa mov ret jo mov lahf inc outsb clc inc mov test ret gs xchg test cmp mov (bad) push or in xchg xchg dec dec bound fdivl adc dec cmp lds mov and adc arpl pusha mov and adc xor add or gs movb pusha mov mov out icebp test fwait sbb loop jecxz es rolb rcrb add sbb lcall pop jae and daa mov push daa jg sti mov fs push mov fwait popf cmpsl lds mov adcl or cmp adc and and (bad) mov repz dec push add xor add and clc mov decl cld jge sahf iret jbe inc adc mov push dec push inc mov sbb idivl xchg xchg iret sub and push or hlt mov pop cld adc out ss and push push mov fs lcall int3 repz ljmp xchg cmp test test dec push inc xchg xchg repz les sbb (bad) lret or sarb jl or fsub add inc cltd mov mov cmpsl rcrb and push push mov ss and cmp leave enter dec in or cs jg jge ds (bad) mov loope ds (bad) xorb fcompp test (bad) mov mov and add xchg adc push mov in scas out out or xlat dec jnp inc cld cmp imul mov inc imul movsl ficompl dec (bad) inc stos ljmp jp cli mov stos notl adc popa movsb pop sbb xor mov jne jmp adc sti repnz hlt ljmp and mov loopne mov movsb mov icebp mov mov xchg push call imul addr16 (bad) out dec popa ljmp dec imul jmp mov mov dec add inc pusha cmpsl stc stc mov xchg xchg adc sbb fsts jge test incb (bad) mull add inc scas jge aad test in (bad) fwait gs push jge pop sbb outsl rcr add push sbb cmp cmp sbb cmpsl adc dec push fs repz in pop (bad) xor mov iret xchg pop adc xchg stc jl addb into xlat mov push push xorl lds cwtl int3 xor int3 movsl rorb aas fs inc ljmp add hlt xchg arpl jnp shr test les test das mov xor in mov lds int cmp adc int3 repnz fsub or push cmp xor sti pop jo (bad) addb scas jecxz outsb mov jmp call bound sub jp mov out iret cld cmp loopne jp cmovle loope fs xchg cmp popf insb xor mov add xlat sub jno fwait stos lcall out push mov ret jp cltd stos adc jp outsl dec clc fdivrl ficomp mov mov dec mov cmp pop popf mov iret xor xor or jmp sbb adc mov ss pusha call xchg push std insl push jmp test mov nop mov in (bad) or mov jbe mov call xor xchg ljmp sahf fstl pusha mov add sbb xchg pop xchg xchg push sbb nop imul or imul xor pop aam insb xchg mov cld xor rolb lods loope add aas mov xor mov es test jae cmp or imull cmp cmc inc mov adc aam loop daa jge mov inc sbb mov cmp clc mov xchg adc leave loop das ret test es int3 sarl lret dec fisubrl pop cmp mov add or aam jp adc lock mov ret enter dec mov jo data16 jp mov or pop notl push dec cs inc cmp push aam cmpl xacquire or dec fadd imul xlat pusha dec dec pop jbe jne pushl (bad) jge inc movsl nop add lea sbb dec mov jle arpl xor fcmovnb andl mov stos and sbb adc fbstp and arpl mov cmp aad pop sahf mov (bad) adc push repz inc (bad) (bad) xor sub inc mov rorl in icebp and cwtl push loopne cmp (bad) aad out test arpl jo push loop cmp jge dec sub clc sahf ljmp (bad) mov test int stos nop imul add leave stos pushf arpl jle xchg pop repz sub leave scas jb in stos fisttpl push call mov pop xchg pop dec scas dec and jns push xchg lahf es mov sub aad push inc insb jnp dec daa or (bad) les push sahf dec in jns mov mov pop scas popa jge xor adc pop fwait fwait xchg addb mov movsl outsb out gs mov xor (bad) fstpt adcl cwtl clc lret dec int mov (bad) (bad) lock dec xchg lret add (bad) push imul loop pop scas call pop stc outsb pop xor or std jne cmp or sub vpunpcklbw cld pop (bad) test daa cmp mov (bad) mov jnp js jle movsb mov and inc jp movsb dec dec dec (bad) jecxz inc sbb rcl mov lret lods lret lret movb add ret movsb mov jl and xchg ret xchg mov push pop xchg rorl js sub loope cmp pusha or push jne daa mov push fdivl outsb (bad) mov test adc sub leave mov mov cmc cmp test (bad) mov jle push jns je xchg pop aaa es xchg mov mov lods jae fs movsl int3 ds rcrb (bad) cltd stos jp xchg shrl mov cli movsl cmpsl aam jbe daa std sub lds xchg mov stos cs lods mov push test inc scas or (bad) imul jmp mov or in into jg dec sbb insb shr push hlt ja pushf aas cld fildl jae popa ret adc add pop enter rclb cs xor fisubrl xchg push inc cld push xchg mov test xchg (bad) mov mov pop (bad) cmp mov aas jmp dec sub imul pusha sbb mov push fwait (bad) cmp and flds xchg adc sub icebp or or cli cmc sub shrb adc lret add ss arpl (bad) sbb sbb push sbb and movsb jle add and push inc jl add xchg aas gs inc aad sub idivb mov mov push mov mov sahf adc jl push dec ret push xor int and inc mov pusha jge jo pop sub and in pop push ficoml ret daa cld or shrl pushf pushf scas jle inc cld sub or dec fistpll and push push push out je dec add dec adc shll sub loopne movsl pop jne movsb xlat cmp ds js repnz cmpb xchg jnp push sbb xchg in push cltd jle mov xor mov add cmp (bad) mov fidiv xchg sbb cmp and daa xor jecxz or xchg xchg adc pop bound dec sub xchg test push add mov stc addl and ja push out icebp hlt frstor push movb or outsb mov jge or rorb std push lahf cmc push data16 fadd fisttpl int (bad) arpl lds or dec mov cmc adc push clc aad sbb enter push out jl add lods mov push arpl mov das loopne or fs rcr movsl push pop test or jl add ds dec cmpsl mov fdivrl push enter mov or gs lret push lock insl out fcoml lock dec fimul fstpt ds repz (bad) jno int push scas aam or cmp (bad) adc fldt dec addr16 or test negb or sub xor jecxz inc outsb or sbb shrl (bad) dec (bad) mov insb adc mov aas pop in xor jne fcoml push pop pop mov fdiv push xchg push jecxz mov into outsl loope decl mov sbb arpl outsb movsb add call shrb cs xor int sbb push sbbl pop (bad) xor call (bad) and xchg ret mov js cmp stc iret push sahf cmp insb inc push pop or cld xchg adc mov nop mov mov in pop xchg jmp jmp in sahf fisttpl cli dec (bad) enter adc push jno ret into push xchg xchg mov aas push xchg add sbb or (bad) mov cmp mov lcall fldcw mov lcall pop mov das ljmp fimull loope or lcall push and data16 push jl push pop or add xor aam fwait lret pop or mov xor inc stos pop push adc ficom inc fldt jb stc ja fsubs xor mov xchg sbb mov lods das mov dec xor pop push fsubrl push inc xor daa enter inc (bad) mov and hlt fs shl sbb loop popf push xor shrb imul sbb pop test ja xchg stc mov xchg xor sub test dec aam mov xor (bad) jno adc mov cmc adc xchg cli push sbb das mov lods inc in jp mov in mov imul out (bad) cltd push sahf cs sub mov ja,pn xchg mov sub cmpsb sbb add inc jns nop rcrb xor xchg outsl inc repz jp vpsrlq sbb inc inc (bad) (bad) repnz bswap dec mov ret inc inc xor (bad) gs dec jnp bound clc pop mov jno das fadd jne sub xor sub mov outsl lret (bad) call in pushf adc push jne test jmp mov fdivrs adc es or pop jge jo int stc adc in int3 dec int (bad) mov fimull outsb xor stos dec fcmovne (bad) aad rcll adc mov mov out aaa sub outsl sub out ds xor int3 pushf inc fwait (bad) jb lret adc iret imul sub xchg cwtl movsl out fwait scas sarl jo pop cmp fucomi pop aas aas dec and xchg (bad) scas inc cmp iret dec and push jb pop (bad) jo xor outsb (bad) enter cmp cmpsl (bad) and iret popf pop jmp mov mov mov push sub cld fs sub std lods in (bad) cmp mov arpl cmp and xor dec pop jb adc adc pusha mov add push outsb rol (bad) popl dec sub xor ret hlt add (bad) jmp sbb icebp or jg xor orb add fmull mov lcall and pop test shlb pop addr16 adc je xlat arpl movsl scas (bad) pop cmp or adc movsl pop xor dec into cmp dec mov das in mov daa xor jo cld rorl enter in daa xor mov aam jge push fwait mov xchg mov cld mov push sti push dec or sbb mov aas jno fisttpl lods int aaa mov cmp xor adc fildll xchg mov adc adc repnz jae adc pop sbb je push sub ljmp mov pushf int3 add divl push mov xor dec pop hlt add fcmovnu jmp mov push xchg adc inc rcll push xchg mov mov inc arpl lret mov xchg ljmp inc mov push insb adc bound divb orb int3 xchg sub add outsb inc add push daa call jge loop idivl pop dec cs out mov add fistl pop sub out cli int imull cltd out adc dec iret dec cld divb les (bad) and cmp in sub outsb wrmsr mov outsb xchg mov push mov es xor rcrl dec popf sub imul xchg push icebp mov mov sbbb and and xchg adc (bad) mov adc inc mov pop repnz sub mov ficompl cmp adc lret xlat jg dec push ljmp lods mov pop jae cmp lods stos lea or push sbb imul mov lret push jnp mov movsl cli xor (bad) iret fstpt push adc jl add sbb lock mov hlt cmp cmp out popl pop (bad) jnp mov pop push ja cmp inc adc mov dec out jmp dec mov cmp or push cld fcompl cmp jne enter test mov fistp jl sahf sbb mov xor mov xchg jmp push (bad) jno jno (bad) xor mov pop mov or or jle jb adc ret cmpl stos or fsubrl rclb int3 cli jne (bad) ljmp or jbe out repz in (bad) lcall pop push sub mov lock mov imul sbb rolb rclb jne pop xchg jmp mov imulb sub xchg dec xlat aas ljmp lret lea xor scas dec cld jno xor imul lods mov daa stos mov mov adc or push ljmp mov test or dec pop or mov mov inc (bad) cmp in cld pop mov push sar and jno imul fistpll js sti inc mov mov mov stos jno or scas in lock jno mov pop mov cltd out cwtl nop xor xor sbb daa mov cmpsl ret popa mov faddp ficompl loope rcll dec (bad) or mov and mov push add dec or mov ret xor xchg mov adc leavew or push or int3 js cmp cmp in les push or or out into jb xor mov mov (bad) mov push or xor movsl daa mov mov call fldl inc arpl jo pop cmp mov adc mov nop adc shr cmp xor lcall sbb pushf or inc in sarb fwait cmp mov and lret popa nop movntq sub std mov push lods mov test out xor das xchg rolb in cmp and fstl xchg repz enter mov and adc adc arpl lcall sub (bad) rorl ret inc xchg imul jmp inc out jl jmp stos cmp aaa and push dec sub fdiv mov repz lret das inc notb int and std or push sub push push test scas fisubr decl int3 adc jno inc jno jnp pop das out sbb popa mov mov dec int out push and dec mov pop ret xchg xor mov jg xlat or fstpl daa daa jns cmpsl int mull pop ss xor add mov lcall iret (bad) out jmp add scas (bad) flds dec cltd pop (bad) mov leave mov pushw stos bound xor xchg push adc popl mov jp dec xchg add cmp int3 pop jecxz (bad) (bad) xor in push (bad) xor lea dec and mov dec mov xor sub insl out sub nop dec mov inc xchg sbb push sahf xchg loop pushf daa add shrl imul out xchg cs imul decb sti mov push jmp xchg or repz pop pushl mull or inc jb adc adc mov push outsb stos push call cwtl cli xor mov pop xor clc and pop jle mov aad sti adc mov movsb or out mov scas add mov scas sub lret mov jp pusha adc outsl jno and frstor incb push sub hlt sbbb mov dec push jp imul and sub jge or xor stos adc sbb mov and loopne sub pop addr16 test lret and lret jb inc mov pop xchg out notl in jnp ss fistpl sub je enter xchg out adc jbe sub test addr16 (bad) (bad) ret ljmp cmp jbe rcl fsubrl fdiv daa inc add mov xchg call cmp repz mov and cwtl fstpt jnp es adc cmpsb and ljmp pop scas dec jg dec jae in cmp cmpb jp cmpl (bad) mov sar add sbb and jg jl mov sub leave pushf mov (bad) cmp xor loop popa and lods es (bad) or enter and insl subl jmp dec movnti jp mov push aaa dec insb jb sbbb out mov jle jp jb int mov sub mov outsl sub arpl sbb or pop mov repz aas push test and icebp and cld subb pop sub push sub in out mov int mov sub in bound push addr16 incl cmp xchg jecxz push cs stc xchg jmp inc add insl sub cmp aaa loopne mov adcb jns mov or out out mov mov mov aad jle mov mov lock mov push cli and shlb jbe pushf enter scas shl enter fbstp jo sbb sbb lret mov ret popa inc (bad) das xchg fmull lea divl push push rolb ret push bound scas test stc xchg mov les lret clc push jne insl dec jnp pop cwtl xor jne mov addl loopne leave in push mov iret or aad xchg out mov (bad) xor jb xor mov cmp int ljmp cwtl mov dec cmp int jl cmp (bad) mov cmp pop das adc cmp lods in dec jno xor adc fistl scas test jge xor or jle scas loop pop xchg push xor rcll jne adc (bad) insb pop (bad) out and jae scas pop jge daa cmp sub aad or fisub adc add xchg mov add jl push pop adc fidivl add insl mov and mov sbb inc les sbb test imull push cli je mov repnz and lods mov scas fstps repnz loop add movsb add add mov jno shrl frstor aas lods es (bad) pop xor push dec mov fist out and add inc lcall in andb (bad) lock inc shrb (bad) mov js fsubrs push jmp adc adc sub push test pushf jo out sbb mov cmp (bad) mov mov clc and cmovge inc js hlt imul mov mov mov cmpsl adc fbld fs and inc mov testl mov jg fwait dec and shrl xchg sbb inc stos mov rcrb lods hlt repnz stc out pop xacquire popf sub sahf push test insl jecxz push andl in adc sub arpl xor rorb cmp add and test xor popa inc or mov out sub xorb cwtl ret pop pop aaa mov out movsl in mov xchg out adc or (bad) (bad) inc inc test lret insb loope das and loope in aad mov or and int3 inc mov sbb push pushf cmc inc std add or andl jno xor or (bad) mov inc hlt inc pop cltd adc sub aas xor xchg jnp shll and inc int3 push jmp add lods ljmp aam dec aad cmpsl ljmp sub neg mov and (bad) or and dec out xor mov push icebp (bad) mov mov (bad) jp fistp pop mov pop mov shrl imul in pop rcrb or cmp bound jbe jmp inc inc jmp push cmpsb adc int push or int3 add into into popa inc in sbb cmp sub ljmp movsw into into iret jmp ret and pop push mov sub int lds dec (bad) cmc out jns fcmovne in sub rorb fidiv push data16 inc ljmp mov cmc jmp cmpsl xor or add scas push or pop pop xchg or sub push pop test mov sbb loope jmp mov jo push xor mov out and sti jg sbb pop mov shrb jp int3 push push or lea lds mov sbb (bad) push das jb (bad) aad pop movsl lods ror scas imul lea dec xchg loope lcall push clc xchg cmpl cmpsl pop in rclb push cwtl mov aad mov add bound push jb jecxz or in xchg rcrl lds sub mov adc loopne cwtl adc jmp lret int3 orl jle xchg mov leave (bad) jnp sarl add les jbe test mov sbb test pop in inc inc out cli cmc or test xchg sbb jbe pop loopne movsl dec xchg shrb das adc mov repz ljmp (bad) mov iret dec outsl cmp xchg xor xchg cmp sbb mov insl loop insb lods sahf repz push enter mov aad jg inc out xor inc lret sub xchg sarl stos or pop lea ljmp mov fisubl or sarb test sti mov test mov sub xor outsl in test aas sbb xchg mov inc xchg mov rorl in lds stos mov cltd xor addr16 pop cmpsl (bad) pop push or xchg dec es stos lcall cmp mov add das or rclb mov repz mov fidiv (bad) jno jle pop add add mov inc or pusha rcrb rolb cmp pop cmp pop sub adc mov fdiv addr16 xor mov stc cmp and test or hlt push jne pop adc sub out js scas jbe push adc ds sbb fs mov cwtl mov and dec adc daa or adc psubq add hlt lods cwtl pop push ljmp mov mov (bad) imulb addr16 and mov mov pushf (bad) fsubrs repz xor or push inc jo add pop cmpsb orl adc inc push pop bound and pop push scas jle fidivr mov mov aam sbb push les and adc es pop sbb adc in or ds mov or stos sarl lock std ret push push push outsl add cltd push jnp push add test xchg cmpsl cmpl test mov cli xor lods fimul dec sbb mov xor mov loopne ja xchg add clc int3 jno jp arpl mulb cmp insl xchg subb test sahf push inc int push cmpsl cwtl and int3 jmp popa push jae int3 cs pop pusha add adc addr16 sub clc push cmp jmp xchg insb (bad) jg mov jecxz and mov cmc push sahf arpl push mov popf aas jo jmp pop hlt (bad) jmp cmc dec cmp stos adc pop arpl mov mov jo pop pusha sub and xchg xchg pop mov xor pop add andb bound test test call mov lcall push in add call fcmovbe popf fsubr inc mov insl inc lcall data16 xlat aas pop xor cltd jbe dec pop fiadd cmc sub dec out and xchg scas dec fidiv popf mov daa jmp inc insl inc inc cmp push cwtl push (bad) inc cmp and pop push (bad) push out sbb stc enter dec cwtl cs mov (bad) cmpsb push cmc leave add push sub xor arpl pushf bound add rcr bound (bad) popa pop shrb sub or push push fidivr sub sub sahf cmp push ss (bad) imul sub loope int imul dec add mov jmp dec mov outsb xorb pop arpl cmc and mov xor push xchg xlat int add stc add fistpll sbb pop jl add cmp pusha lock test adc stc and and fwait jnp sub pop ficoml int cmp or add push dec xchg repz jmp imull and scas cmp out jecxz ljmp or or add rol test dec stos loopne test or jge xchg lcall pop fisttpll imul enter jp mov mov sbb test mov sbb call inc data16 stos test notb jno push push adc sbb or stc mov mov ss mov sub scas sti cmc out into push test bound movsl sub xor jge fstl sub or out dec xchg mov pop sbb sub movsb in shll mov xor or popf mov (bad) jmp xor mov mov sti sbb push pop (bad) daa cmpsb jb cmc xchg or aaa loope clc jmp xchg js lret leave sbb push popw sbb jg or mov lgs cli in div rol mov out daa or shll sub jmp lea inc and pushf andl fstpt jae pop adc push decb fdivrl and repz jbe xor lods je sbb mov add adc push (bad) sarb pop popa (bad) jns les jb push and stos xchg imul add sti sub sbb ja push and test (bad) mov imul inc test rcr cmp inc test cli push inc xor std stos push xchg push fsubrs inc and xchg (bad) repz std stc pop cmp icebp cli and dec mov (bad) sbb mov outsl xor daa sahf and jge add rorl cmp xor cmp mov lds cmp xchg test icebp dec orl lahf sbb adc add (bad) loopne inc iret push lods movsl (bad) dec or xchg inc icebp adc es dec adc ret in xor mov nop and push and jle cmp test in jecxz mov or sbb fistpll leave out out gs xchg mov mov jp mov out ljmp das push insl stos jnp test fucomp repz jns fsubrl lock and movsb cmovg xchg inc stc push imul push mov in pop (bad) inc push pop in push xchg popl aaa cmpb mov cmp (bad) cwtl movsl mov out jg test dec mov scas aad lret out xchg outsl incl or cli jmp arpl or cmpsl inc (bad) pop add sub insb loope inc jb pusha sbb xchg cmp movsb (bad) sbb inc std neg fs xlat and add mov das inc jns adc (bad) fnsave mov jg lret cwtl out push iret adc shll dec xchg lahf sub and xchg repz pop lods sahf mov and mov sub xlat push in sub fcoml cs xchg lds pusha jne mov js and inc jo pop lea or pop loopne sti push and lods inc repz (bad) lahf lods jmp fldl fist loop (bad) jno xchg or aaa mov fsubrp shrb popf insb jge addps sbb cmp les aaa lods lds inc movsb mov insl (bad) add mov pop dec scas lds jl adc mov (bad) mov pop jl mov shrl test push sub stos cmovbe rorl cli jb add int3 bnd fsubr jl imul cmpsb sarb and dec mov sbb (bad) insl cmp xchg sbbb test je pushf data16 inc dec addb lock lock popf mov fwait xchg hlt out jmp inc ss ja or inc jne in sarb cli rclb repz pop add ret xor cmc test and adcl rcrl mov cmc ret loop jge enter push mov pop fnop icebp push inc push dec mov nop jge (bad) sti or pushf inc stos or jno insb data16 mov test cmp lret lock mov loopne jae stos cmp push mov jns idiv cld dec int3 test (bad) out stos addps or cli cmc xor out inc repz xchg sub jns add mov jb pop mov sub loopne inc inc notl pop (bad) push add rorb fsubrs mov xchg cmp fsubrl imul imul stos nop jno out sbb add insb fistpll mov stos lods pushw or lahf aam mov sti (bad) lds lods stos inc (bad) addr16 mov stos and test (bad) cmp sub lock mov sarl pushl out inc push pop mov aad into mov sbb outsb loop mov cmp lock lahf fwait call lock pushf leave jnp or lea out ljmp por dec jle lds aam jp mov inc sti cmp les imul addl or rdpmc mov out sti outsl jae je outsb cmp popf data16 movsb div arpl sub mov fwait jge (bad) adc pslld sub ret clc jae sbb ss das jno movsl mov out pop mov out rclb ret faddp clc xor fcomi dec and pusha cmpsl xor jb sti sub (bad) inc dec lret dec pop xchg xor pop mov inc paddsw pop pop inc lret and int3 lods pop xor pop mov nop rclb cmp jecxz shrb out inc loopne push mov fcmovbe cltd aad xor pop jae aas push jae mov sbb mov pop daa repz inc push jp popa fdivrl add sub dec sub leave ret enter jbe pop out faddl daa inc xor push and out cs inc ret inc xchg fidivr push dec xor rcrl xchg cmc andl ds cli inc mov andl pop out xorb mov repnz push cmp inc xchg mov mov std xor nop mov pop mov inc cmp ret add sti gs imul sarb cs and mov sub incb push cwtl in mov xchg xor and shr push test cmc pop jle or (bad) (bad) xchg jns imul and js xor mov sub mov les add or push out mov outsb mov aas sbb into pop add je cmp push outsb cld xor jo inc cltd push dec (bad) lods movsb pop es popa dec pop jl cmp jecxz ja add stc and popa addl lds or fisttpl cmpsl dec xor sbb aaa dec loop rclb mov mov adc loope ljmp push das (bad) hlt pop aam mov rcrb xchg push add or jne ficoml mov jb xor mov cmp push pop jmp add jecxz out xlat pop jl cmpsl out pushf inc pop in mov iret jp loope dec out xchg insl adc xchg call xor out add pusha dec add dec mov adc xchg jno or (bad) jo cltd inc pop pusha add rcrb cmp or sbb xor cmpsb jne aaa cli add imul dec es xchg faddl int3 in or pop mov inc imul mov mov push xor je loop inc enter jo cs inc mov ljmp and lea rorb cmp add sub stos jns jns dec mulb sbb rcll xlat add mov clc add je mov sahf aaa (bad) mov ret andb stos imul adc dec inc add pop in icebp mov hlt cmp test iret imul das or stc jno rol inc mov jg cwtl aam out xlat jae mul pop sahf mov test cltd and mov in fimull popa das (bad) fucom mov insb insb sub fucomi jmp inc mov inc cmpsl leave xchg adc add push loopne mov adc ljmp fdiv adc lds rol jo jg xchg cmp es (bad) mov mov jmp sub popf dec add in mov js orl loop inc jg rcll fldl2e nop inc leave ds xor arpl sub rcr cld iret push or mov lahf scas repnz scas dec cmp in nop lds dec aaa enter ja jmp pusha jp xchg cmp mov (bad) fdivr fsts sbb mov dec xor in mov (bad) shrb xchg lret xchg inc (bad) fist xchg jecxz cmp xchg cwtl or (bad) enter out pop cltd mov lods (bad) je dec icebp add sub mov and inc adc test mov ret mov lret push mov cs xchg repnz daa sahf and inc repnz xor sbb loope test xlat clc cmp add (bad) mov test adc insl xchg and repz and into (bad) add lret hlt jl adc ficoml jmp xchg stc mov es pop ds test inc pop inc sub mov in pop lods outsb dec cmpsb push or (bad) cmc bound movsl pop cs iret cmpsl inc repz inc int popf std mov dec nop adc aad std push push repz sbb xor xor fnsave cld adc scas pop shlb clc mov fmul es (bad) and sbb push outsb movsl lds pop jmp cli fwait xor ficompl jg ret xor sti mov (bad) enter jle std jno jnp fldl2e xor aaa rep cmp add push js pop mov adc inc or movsl es or inc and dec inc in or (bad) std xor leave movsb ficomp dec jmp jae sub pushf pop fisubrl cwtl lods pop notl cmpsl lods into xchg mov cmp sti and jmp or inc insl or mov es and iret cmc inc pop mov mov xorb orl sti in jle or cli jb cmp idivb popa xlat jno rcll cmp sbb cmpsl mov and lea xchg test adc mov push jecxz cltd and mov enter call jne imul and or add mov iret add xchg popf lods xlat jecxz scas dec jge loop inc lahf and jnp mov cmpsb sbb add mov lods inc fidivrl lret test or mov icebp jmp cmpsl and fnstenv dec sub ror ss rcl pop cltd lea xor inc sbb lcall stos cmpsl test fmull fbld lea in js fnstcw adc mov clc sahf dec std ljmp pop or jge subl (bad) xchg jbe jp arpl mov sbb and (bad) std outsl sbb pop fstps mov std rol mov jns cltd icebp sbb jne addl add inc or cli sub mov add ficompl int xor adc xchg gs mov (bad) pop (bad) xchg and into jae jg je xchg in outsl out ss add nop insl aam es adcb idivl or xor pusha cmp mov leavew xchg (bad) push mov push pusha push push es es cltd xchg cmp push ret cli ss sbb mov outsb aas je push lock outsl repz mov adc mov fbstp sub sbb dec add divb dec push test jno xor dec (bad) mov inc ljmp je in mov cwtl xchg lds mov insl xchg mov dec pop cmp jp popa (bad) cli lret (bad) pop push pushf ret dec sbb mov xor lods popf dec jg fild or hlt adc lds aam push pop mov adc xor mov adc repz dec jmp xchg scas ja mov cmp scas add loopne push cmpsb in xlat es roll unpckhps (bad) cmpsl loope lods adc or sub sti fimul decl adcl add addr16 negl cmpsb pusha cmp leave inc (bad) pusha mov idiv mov repnz out movsl sub out lock out sbbl pop dec cld lds dec test push pop adc mov lcall shrl mov (bad) xor xchg add mov xor and lds repz dec push xchg mov inc jg or shlb ret dec dec jecxz (bad) cld or pushf mov fstpl cmp out or and cli pop or lods out lods and jecxz add sbb push mov scas xchg cmc in je cmc adc sti lcall mov insl xchg xlat push pop mov inc hlt inc sbb sub mov push mov lods call insb mov push mov cltd insb fimul cltd cmp (bad) mov jecxz movsb ljmp mov mov xor (bad) mov xchg fdivrl repz dec sahf (bad) repz xchg in jg or jo jo loop andl outsb sbb scas jecxz jne test adc inc jne test loopne jp add mov stc sbb enter cmpsb repz cmpsw mov imul or jle push push mov iret push add (bad) bound and dec popa lret pop sbb ds sbb cmpsl outsl ret adc outsb insl and mov adc jecxz push (bad) cmp test lds insl jns pushf sbb add into push or repnz sub xchg inc test shrl insl movsl adc xlat jae xor lahf fdivrs ja imul xor leave scas inc inc pop es movsb inc jbe adc ljmp dec mov out arpl nop xor lret adc inc mov lods repz xchg jb js mov push adc mov and les and cwtl popf popfw stc dec and jmp xchg arpl xor repz pop mov stos movsl test imul stc push mov xor icebp push std fisubl and enter xchg stc pop adc cld aaa roll jne jns in cmp fdivs cmpb fst idivl mov repnz mov pop sbb pop outsl fsubrs iret test imul aad test icebp mov push mov xchg xchg dec sbb hlt mov adc andl arpl and adc out scas or pmullw pop pop pusha das xchg stc out pushf mov push lock mov mov sbbb cs xchg mov add cmc xor ret (bad) push and inc pop hlt xor mov mov iret ss jecxz in ljmp push mov adc pop fnstenv xor hlt mov mov lret mov adc pop fsubrl add mov and icebp xor movb add pop in sub inc iret jp out jg push jl sbb xchg mov outsl mov mov mov sub mov inc (bad) (bad) jne add fbstp daa xor out (bad) cmpsb cmc andl pop jns push push xchg repz lds aas fdivr roll push daa fs aad ret stos (bad) fwait in xchg hlt in lods cmp cmp aad mov ljmp lds mov jp subl test into adc popa loopne jg lods neg sbb in xor cmpsl ss and movsl movl adc or pushl fildll das fidivl add movsl cmp scas adc lods les (bad) jno pop cmc arpl scas stc sub pop or or fldenv lea mov push imul dec sub ret repnz sahf data16 jae inc inc inc mov add fnstsw (bad) mov leave and jno mov andb (bad) lock pop jae or xor jle in mov (bad) pop cmp pop jl inc mov fs icebp lods repnz std jae bound mov loope rcll push inc test popf dec (bad) outsl (bad) pop loope std cmpsb dec mov imul sbbl lods mov loop nop out sarl cs movsb and mov inc jecxz cmp test vsubpd (bad) lret push loope cltd dec push inc js or mov cmpsl adc mov and mov stos inc imul int3 or loop stos cli data16 mov addr16 sarl cwtl dec call ds sbb gs add dec jbe inc arpl or push and (bad) jne push bound sbb stos push jmp cli pop pop adc or (bad) out rclb adc sub js xchg or stos pusha popa mov sub leavew call dec dec into pop mov call loopne inc jae lds jle dec repnz (bad) adc movsl (bad) mov call nop dec fisubl test xchg in pop loopne out and mov push mov cwtl pop test es xchg add dec xor addl lea sbb mov mov mov add shll inc sub test stos jne jl loop sti push ret nop add xchg and cmp out aaa loopne int outsl mov jbe subl sbb push loopne push js lahf repz fmull imul (bad) xor test dec in mov and shrb inc das jmp and sar std js inc sbb dec repnz mov addr16 sti in dec clc js roll pop fucomp insb adc (bad) mov sarl lea sub fist xchg lods mov mov dec pop andl (bad) cli dec lock jns scas data16 out adc or jecxz push rolb xchg cbtw test mov pop ss xchg push adc arpl xchg xor fiadd xchg das adc mov jnp aad mov xchg ror push lods movsb fsubr or aad inc pop sub cltd stos push dec or arpl insl fsubl rorb aad jmp out popa icebp push clc icebp stc sub dec pop repnz in outsb push and mov xchg inc sbb jge adcl mov mov mov xor adc ljmp dec inc xor xchg adc cmpsb sahf dec js jmp jecxz push mov cltd testb cltd pusha scas sti dec sub push fisubrl mov leave pushf imul dec pop rclb into inc xchg out jno push bswap xor out inc sbb and int mov xchg aam inc rcll cmp aam add mov sub jmp call sub pop in stos push and (bad) xor notl fdiv adc dec add xchg clc scas dec and icebp mov jnp push jne mov int (bad) xor cmpsl cld popa dec and mov cmp jb dec int fadds enter leave lret sub (bad) sub jg stos xor lcall andb inc xlat sti fwait dec push add pop xchg incb outsl jnp bound push insb push scas daa mov push (bad) mov pop xchg adc ficompl lret (bad) adc push cmp dec (bad) cmpsb sbb xchg adc push pop je pop shr jae rorb jae cmp pop sbb fiaddl mov (bad) xchg pop sbbb xor mov (bad) enter outsb sub add iret xchg shrl mov in addb pop sub psubb jo cmp std test (bad) jno test ret daa pop bound push aam (bad) loope fwait dec and sbb adc add pop rep add cld add gs ret icebp lahf and and cmpb inc fs add dec cmpsl imul or cmpsl sarl (bad) dec (bad) or mov adc mov imul mov fistpl sub cmp ss jge mov cmp mov call negl or aas adc dec das out std push dec fdivr bts icebp pop pushf test adc xor adc jno lahf mov mov mulb enter jge or push call or mov add lock pop fs lcall arpl push sub inc jnp stos mov leave inc aas inc jg sub jmp iret sub addr16 inc mov jge dec scas iret inc sahf repnz fiaddl data16 fcoml cmp enter cmp leave addr16 sub rdpmc and sbb mov std jge inc inc aad bound inc sti adc mov cltd aaa (bad) sub or fdivr shrb cmp dec dec out pop (bad) jle xchg dec jle add xchg pop arpl pop in dec (bad) ja adc xor mov pop and outsb mov leave xor aam cmc nop mulb mov pop push stos jecxz dec lret ss lret xchg pop dec vcvtss2si daa lea dec in aaa xchg lahf dec (bad) sbb push jnp sbb jnp pop dec and inc mov clc pop push and push sub (bad) clc xchg es mov repnz adc (bad) jp (bad) lods arpl inc (bad) fimull and xor mov jge xchg push cmp dec or fild ljmp (bad) sub adc (bad) mov or and push jne jg xchg shl sub sub mov pop scas rcrb fimull bound cli dec inc ljmp push movsl mov loop inc decl mov jb and rorb mov adc xor inc mov fistpll out gs sbb pop enter (bad) xor (bad) cmpsl push jp push mov push add pop sub nop fdivrp push inc push out outsl xor out loope sub mov stos cmp test mov int3 xchg mov push sbb push inc das mov stc insb pushw push push loop daa out mov shll les or or pop sbb pop sbb xchg fsts lahf (bad) pop nop cmp pop cmpsl incb sub mov sub (bad) out mov (bad) insb stc mov test cmp int adc (bad) dec stc ja imul mov push sbb ret push hlt pop sub jnp cmpsl (bad) sub cmp dec inc shlb push cmpsl arpl cmp inc sub das mov clc and pusha xchg iret in mov cmp xor cmpsl sbb ds lock call addr16 loop jge jno pop call mov push fldt dec cmpsb xor enter aaa inc (bad) cmpsb pop xchg (bad) dec add push js mov (bad) jne out pop dec inc add leave pop (bad) mov mov mov xor dec adc adc int3 cs imul andl xchg pop out sar or call add int lcall sti cmp rcr push and fcoms imul (bad) test adc push ret xchg inc hlt sbb push jp and xor jp xchg jle ss rorl repnz fstl jo outsl mov xchg adc stos xchg jbe dec xchg rolb and and sub fdiv mov cmp lret inc sbb fucomip clc stc adc repz add inc adc mov aam ret add and xor pusha push in cmp adc icebp popa nop mov cmp or and daa add insb inc shld mov fidivr xchg cmp out and pop and jl cli ret jle repnz mov clc sti jge pop adc cmp xchg aam mov test hlt dec mov call pop fs ror in mov (bad) sbb xor jae clc inc sub add jno push iret out pop or add outsb pusha int3 mov insl pop xorl out dec into mov scas loop dec adc aam sub das sbb pop mov insb out or adc das jno int xor js mov daa cs scas bound dec jle and gs cmp jecxz,pt cmpsb fldt loope xor loope jge popa mov out ret ss jb inc inc push out mov mov lcall inc sbbb xchg push mov test mov xchg push jle jnp jmp ljmp cs (bad) or sbb stc dec mov pop mov mov aas lods jne call and or inc xor daa sbb fiaddl lds inc adc stos or mov sub cmpsb xchg sbb dec mov push scas xor add and cs ret aam fimull inc fidivl (bad) popl iret rcll mov popa push xchg pop push and pushf push repnz xor pop jp loop stos mov adc pop and popa sahf jnp pop call pop mov nop aam movsb mov xchg out repnz pushl repnz fistpl inc xor adc add dec icebp push movsb add addl pushf sub push (bad) orb add sub or movsb test arpl adc leave and shll inc and aaa push pop xor aad fisttpll jo dec daa notl or lahf pop xchg sbb lcall ds imul add xchg pop mull bound and mov xor (bad) insl xlat xchg aaa mov dec fisubr fdivs sti jp insl cld push arpl sub repnz pop (bad) in or fs xchg int3 mov out mulb pop ss inc repz lcall mov xor leave aad cmpsb dec arpl xchg stos adc push jl cld mov dec in push mov leave in imul lahf add pushf xchg andl fstpt dec lcall movsb outsl push and add ljmp jecxz mov call (bad) test int3 or jo ss sub sbb mov mov jecxz push scas push sub adc cmc lret gs push mov inc mov jmp pop int3 jmp pop mov xchg mov xor test jmp mov leave jae (bad) hlt aam jnp ljmp imul ljmp inc mov xchg and stos imul jecxz test push or (bad) xor xchg (bad) push jo xor sbb sbb mov popf and lea add sub inc sbbb fstpl add lahf fwait push sbb stos lods push fcomps sbb xor cli fcomps inc jmp lcall outsl adc mov sbb out dec jne aaa push inc push loopne rcll das sub ja xor mov adc pop cmp scas stc sub cmp cmp push xchg pushl je jnp pushf xchg mov inc (bad) push xor mov push mov mov mov or sub cmpsl sar pop int stos and ds (bad) fistl (bad) into xor push das lds rol mov mov outsl stos das xchg jmp or dec mov xor (bad) mov aaa das xchg jge fbld push cmpsl arpl testb pop and lret xchg fs ret push into int jp enter adc xchg stos int3 xchg cmpsb lock mov divb sti enter push es or test cmp ja and ds adc ljmp nop cmp xor adc (bad) out mov mov call enter push nop or div imul inc clc ret sub adc mov test sub fidiv add out or inc stos and jnp jecxz sub lahf out xchg dec pop lea fwait sbb or and mov cmc inc or ja cmp jle stos mov mov pop or movsb sbb repz push pop sub test call jno div aam (bad) push orl cmpsb movsl inc dec int3 decb (bad) jp push dec and loopne (bad) dec adc sub dec sbb push pop insl dec xchg outsl lds nop pop jb inc or notb outsl jge push xchg jge jmp mov or jle jne cmp out and inc xchg mov cmp push xchg or sbb cmp out rorl dec sub pop mov push fsubrl cmpsb sub mov not scas sub mov test sub push rcll movsb int jae jo (bad) mov mov push int lret rcll stos xlat and dec enter outsb and ss mov lret inc popa mov fmull enter loop fiadd push rorl mov loopne jbe mov ds mov cmp mov pop dec xchg or lret xchg out pop fist jnp adc cld mov int sub mov sahf pop dec sarl fidivrl jns in sub cltd push cli jmp dec into fist xor fdivl xchg inc mov and test dec jno out add rolb outsb push rcll inc dec in inc or xchg sub mov mov inc (bad) and xor and xchg xlat pop in mov lds mov cmp dec stos (bad) lock outsl and add ss and inc mov mov jne (bad) (bad) std mov mov int3 cmp mov test jno loop mov out bound xor jg int test adcb mov xchg ret xor push add scas aas nop and and popa mov xchg pop loopne xor add add jne cmp out iret lock sahf dec inc ds adc pop xchg push pop lahf fidivr push dec xchg sbbl dec mov jno jmp (bad) mov aam not add stos and js push popf inc or push mov lea add mov xchg bound dec scas ljmp jp adc aad std (bad) pop pop loope aaa cld bound test and repnz mov xchg clc repz call mov (bad) shlb fcomp mov push xchg sub leave mov push (bad) cwtl pushf mov push addb jnp lret inc outsb test popa mov pop mov cmp mov xchg daa mov sub inc inc jb shrl imulb andl xor and or or fs ss (bad) adc cmpl out xchg add imul mov sahf ret xchg or mov jmp fisub aad cmp fnop cld das leave sarl dec or gs mov inc push icebp mov cmp lret idivl (bad) es adc mov mov cli jmp sub enter shrl subl sbb mov inc inc xchg icebp cltd scas loopne jne les inc lret inc imulb lret mov pop xchg nop jb xor sbb jg push xor mov mulb jbe mov xchg add aad fcompl mov (bad) mov cmp nop fsubrs push push fs mov iret enter cmc out or mov insl (bad) jecxz lods aaa ror stos repnz add mov (bad) jmp addr16 push movsb mov xchg bound fwait jbe ret xchg mov loopne mov dec mov sbb loope idiv push sub icebp push das mov arpl or push xchg lcall xor fistp dec jb push imulb dec cmp dec fs xchg pop ret mov movsl jb sti (bad) cmpsl mov js sub push dec aam and lahf mov hlt int3 (bad) xchg sbb mov arpl pop aam aad mov xchg divl pop es ret adc fcomp xchg rcrl mov xor push add cltd lahf test mov pop mov sbb xchg pusha jae cmp sbb jl adc inc xor dec divb out jmp lret dec negl ret fidivl scas movsb mov dec pop sub int3 std xchg pop js push adc insl or xchg and subl add movsl cld imul lock mov fs pop fdivs add inc loop sub (bad) repnz sbb sbb push pop jbe mov pop (bad) repz or std mov iret imulb mov lods mov mov jns jnp push aas outsb inc (bad) int3 push (bad) lret in lret ds jmp dec loopne mov mov xchg jo mov mov adc out sub imul add test add cmp and iret sub loop hlt xor xchg adc insl cmp cmp push pop rcll xchg pushf dec xchg test push jbe nop push mov jge adc pop mov out pop addr16 dec adc jl jmp cmp (bad) jne jmp imul test pop insl add push (bad) mov sub insl inc xor push dec xchg add sahf fs xchg xchg pop imul lods xchg push cmp mov xchg out shll dec lret xchg (bad) and cld sbb and jnp add jne push mov or and cmp mov scas repnz aaa add xor adc sbb sahf push pop stos push cmpsl inc sbb call fdivrl jle mov or add daa sar jl repz inc inc ds scas into rcrl xchg mov sub pushf ja fldcw pusha adc clc and imul orb mov jae add repz pop dec cmp fsubl xor adc scas icebp (bad) repnz (bad) adc xlat dec push xchg out mov and inc jne shl pop pop out sbb (bad) (bad) jp lea xchg mov int xlat insb mov pop stos repnz xor fnsave (bad) or or inc xor push cli out imul or jns,pn paddsw sbb into sub cmc and fcompl xor jl mov out jb or (bad) adc sbb inc dec jp inc mov testl lret cmp lods pop add add mov fs sub dec adc mov or xor mov jge (bad) push dec and rep lock push mov lds push push mov pop add fs inc cmc rclb adc rcll pop fsubrp test sub in sbb sub push jge xor xchg mov fldenv ja push cmp sub fldcw inc mov (bad) sub lcall mov dec fiadd dec dec insl mov mov ret push int (bad) ja (bad) xor push shl ficom call fwait ret lcall add mov add test mov bound adc mov mov scas rclb stos fidivrl cmp out stos or and mov int mov or adc (bad) imul jmp out out cmc jns mov out ljmp inc fmuls lcall xchg (bad) fadds xchg lret fbld mov jns jmp and sbb lea sub call xor in mov push sbb enter adc adcb rcrl inc jp sbb (bad) call jnp repz ds jl xchg pusha xchg mov mov (bad) pop add cmp ret mov rol adc inc dec pop mov and pusha outsb mov loop mov insb adc in xor push (bad) arpl mov pop shrb (bad) pop fistp sahf cltd inc (bad) mov dec repz push scas iret out cld push in pop into (bad) aas leave lahf clc add inc je inc mov ss cld dec jae (bad) fsubrl xlat mov cmpsb lcall sti jno adc out or mov pop xor push orb cmpsl adc jl pop fiaddl add call adc xor repz fyl2x cld (bad) push dec fs stc jno insl adc sub dec inc dec mov add in mov adc mov cmpsb mov orl aad or movsl push (bad) jmp push mov ss fwait add or (bad) rcl (bad) scas mov dec push jle push dec scas test jmp test test loope and insb xchg push jle sub and cld mov push popf out inc inc addr16 pop leave fnstenv dec iret dec roll popf (bad) push sbb subb stos push pop push insb dec jae mov and jno jge mov push movsbl cmp add sub push push popa inc scas push and inc das push pop bound stc cmp enter mov cltd jns inc pop xlat xor shlb mov sub je sahf lahf stos inc xchg xchg pop bound cli and clc mov xor and repz jne inc and mov and xchg and cmpsb mov nop iret jno out pop lods popf adc sti pop jb in pop arpl mov sahf scas les jmp mov cmp inc stos pop loope roll loop mov pusha out add das jne lods cmpsb jmp in movsl inc mov sub dec xor xlat push adc pop movsl addr16 or pop inc sahf (bad) fiaddl mov ja test sbb loopne stos mov xchg outsl mov lahf or movsl jbe add lods lahf sub bound pushf inc sbb les jne cmp arpl xchg mov and mov cmp and add jg loopne xlat jb mov or xchg (bad) adc add mov add into and inc mov hlt mov out jo sbb add cmpsl sbb cmp ss mov fsubrs sub add (bad) inc cs les and push cwtl sbb lahf fldt (bad) in dec push clc adc (bad) ret test fstl push stos ljmp mov mov je xor adc nop mov aaa rcrl loope (bad) repz jp mov popa cld scas add imul shll cmp cmovg add (bad) push repnz sbb icebp inc testl (bad) aad test test dec sbb mov pop (bad) call mov inc rorb aaa xor lret mov and arpl adc lret aad (bad) xor or icebp dec pusha dec subb pop xchg cs xchg out (bad) insl mov cmpsl ret (bad) xor out xchg (bad) rolb mov cmp sti mov stos cmpsb test dec or iret sub push lret stc and sbb cwtl cmp xor inc and insb in inc mov sbb sahf pop pop outsl in rcl jl cld push loop subl mov pop xor pop out jp sub test call dec arpl ret pop xor aaa lods movsb ja lock mov and mov jl inc or sbb xchg jb nop jns in lcall push add lea push jge xor jne xchg push add jp jmp jae sub (bad) dec adc stos sbb pop pop mov pop cmp daa out (bad) mov popa (bad) or ret es ss and pop sti pusha ret xor stc lcall fwait sbb cmpsl aaa rclb dec mov (bad) (bad) push sbb psrlw call cmp sub test jmp inc movsb les pop xor test mov (bad) mov (bad) jmp outsl cld xor xchg pop lcall xor stc fs movsb fsubrp push xor mov sbbb cmp push pop mov aad inc int3 mov inc dec push jge cmp hlt fsubl lods repnz repnz pop push cmp inc daa rolb sbb push jb int sbb pushf (bad) mov adc adc mov add mov daa or cwtl das idivl test adc repnz mov push dec and pushf inc insl pop jo nop ds push pop mov jno lcall fdivs xor sub pop repnz out dec (bad) and (bad) idivb push inc repnz pop mov jp pop jo aad bound dec sub xchg add arpl pop outsb (bad) in call push push pop pop jmp add dec xchg pop sub dec push testl dec imul mov (bad) dec pop aas mov test (bad) pop aad popf inc adc popf lea jecxz mov push mov lea cmp add enter xchg pop push mov gs mov arpl es call repnz mov repz insb ja ss ljmp shrl push and data16 jno leave inc aam jnp test loop int3 jmp adc (bad) push repz cmpl lcall mov (bad) cs mov pushf std jge testl ds addr16 mov xor (bad) ss push and jne aad sar insl int3 out dec imul (bad) ja lods lds (bad) (bad) or aam inc (bad) icebp sbb lret loopne int inc cmp aam pop dec xchg inc and dec mov std dec ret dec and dec or loope cli clc sub scas mov adc jmp bound lcall out pushl dec repz xchg jno jo out push mov xor xchg pop lcall cmp and jecxz mov scas (bad) cli sub imull dec jnp push inc inc xchg push lods jnp imul lds pop or sub in cmp jle arpl adc mov mov sub cmp and add mov dec (bad) xchg add pop push sarl mov cmc or icebp mov push jo fistpll mov outsl mov pop sub cmp test fist pop cmpsl addr16 and jge js test jmp mov insl mov popa daa sahf movsl cmpsb push aaa fwait icebp sub les or jne arpl and out cmc clc inc shrl out int3 repnz add and and xchg mov or inc subl and add ds je int mov cs push mov and aas sbb jbe imul iret dec aaa jge test cmp iret mov mov xlat or shll imull mov lahf aam in add mov aas enter xor mov xor stos and fidivrl add or movsb ret xchg and sub mov mov cmp std push nop cwtl subl imul jbe jbe into aam mov jecxz push jae mov ss jmp or cmp repz test jbe mov cs je lods ret cmp negb movsb fstl or and push repnz dec pushf (bad) sub pop fisubrl mov pop (bad) xor loop xchg dec loop mov stos icebp (bad) mov mov enter pop sbb push cltd lcall cltd sbb sbb movsl jae cs outsl ret iret in in pop nop add movsb scas inc (bad) jg mov pop xor (bad) fsts xor scas or shll push jp mov inc stos jbe mov inc inc adc lods stc push mov pushf out inc mov pop xchg or sahf mov bound (bad) push bnd imul push aam pop test push int int dec xor incb sbb dec fldcw mov add adc sbb ret lcall jg dec xchg (bad) cmp or or rcll lahf pushf movsl mov data16 or push cmp sub arpl adc lret stos cmpsb dec aas ficompl lahf cmp mov push dec inc popf repnz xchg mov sbb and mov push dec jp mov insl inc popa xchg push fs je mov outsl inc dec add cmp xchg sbb cld (bad) test add js inc mov outsl inc jecxz popf push jns (bad) xchg gs in add cld adc and fs sbb pop data16 dec jg and (bad) sbbl mov push call ljmp test insl (bad) mov push or int3 dec out sub fidivl cmp lea rcrl repnz xchg les int3 adc into aas jge jge xchg out xchg loope pop dec bound push cmp fcmovne jb mov jae (bad) mov ljmp movsl xchg mov xchg mov push xchg jno leave (bad) and stos iret jecxz andl jg (bad) in movsb adc fwait cmp mov mov cld in pop add stos sub sbb mov sbb mov bound push pop cmp nop ficom jmp daa icebp push push mov sub rcrb into push leave daa pop mov ljmp dec mov cmpsb inc sub aaa pop and popf push xor lret adc mov xchg cmp icebp hlt rclb xchg pop mov xor out (bad) arpl inc rcl mov sub push fs and fsubrs push shr in mov push scas pusha adc pop xor pop inc push add es cmpsl dec adc sbb jo js stos sbb add pop xchg or xchg mov mov add mov sub dec (bad) xchg pop and addr16 inc sahf cmc push push dec jmp lods cwtl lods push dec sub aas add das mov gs mov sarl ret sbb in jl loop in repnz arpl leave dec add outsl in js mov mov test (bad) dec (bad) shlb mov test cmpsb pop (bad) jne pop adc adc and mov lret movl movsl fistp inc xor mov push stc and mov and andl jnp or insb inc inc jno pop jle sub push xchg loop and out test leave push jle hlt cmp mov xchg mov sbb outsb aad and bound es scas cmp xor push in iret lcall cltd lods adc rcrl cmp pushf jp es xor or leave dec jb cmp nop inc adc test outsl inc (bad) pop insl jecxz mov (bad) and sti xchg fisubl and jmp stos stos adc dec pop adc cwtl jp cmp inc pop jnp pop inc test inc (bad) xor (bad) in push mov pop push inc mov into and sub and sbbl (bad) out jmp or and or fdivrl xchg jne push ljmp js test sbb mov pushf xchg bound push sub and fadds test cltd popf mov sahf test int les out jmp fisubl xchg insl fwait pusha arpl (bad) data16 cmpsb sbbl movntq out pop sub xor (bad) ja std xchg sbb xchg aad in insl dec je (bad) dec ds mov mov repnz inc out adc outsb push or sbb (bad) lahf stos scas enter mov iret mov es (bad) sub push cs mov out repz dec lods insb mov aaa fdiv es xor mov and xor shll sub (bad) stos icebp mov pop xchg pop and insb pusha sbb mov sahf in lret out xchg dec jns jb sub mov jl pusha or dec xchg outsb cltd jnp mov pop mov pusha mov daa jecxz into sub or mov adcl mov das xorl mov js mov stos add sti jp fcmovbe cmp jo mov pusha (bad) and aas popl cmp dec (bad) movsb inc mov mov mov jecxz fdivrs cmp popa sub inc add js inc test adc out inc pop cmp stos imul lea mov insl mov rorl lea out xchg imulb mov pop imul hlt (bad) dec inc inc fiaddl (bad) in xchg dec cmp pusha out xchg les hlt sbb les pop in cwtl test sub xchg rcrl mov pop ja clc lret sahf push and mov push (bad) je or movsb push mov dec mov fwait sti sub mov push jo rcrb jae dec daa insl in call shrl popa inc sbb pop add push ljmp std sbb cmp ret mov out inc std repz out xchg mov ret push sub scas popa or push xchg les xorl mov push testb jp dec repz mov movaps push outsl imul ss or push not mov inc rolb daa cltd pop mov data16 repnz bound push and cmp pusha dec jae loopne rol mov xor push jmp insb cli inc and stos cwtl je ja and mov shr jecxz popf and push push aam (bad) xor xchg jge pop xchg cmpsb orl and jp sbb repz push jle fistpll ja jne dec cmpb cmc imul pop push pop jl xor daa cmp fistpll ftst and popa dec cld lods popa add clc roll dec pop test imul (bad) xor je adc xchg lcall aad fistpll hlt clc mov push and lahf imull js or pop in and test cmp inc xchg leave inc out jle adc cmp data16 mov test xchg mov fwait inc jmp jge pxor jp into fistl fwait mov in push divb fistp mov sahf cs repz inc inc int3 movsb push outsl (bad) mov cmpsl imul clc daa jbe sbb push (bad) jae fdivr outsb adc in push push push adc jge daa (bad) mov cli jmp cwtl sub (bad) push dec sahf (bad) (bad) push dec jae xor out imulb lods ret fs push cmpsl stos lcall cli call push xor ja mov mov (bad) icebp cs inc push frstor (bad) negb jp push sub cltd inc push sub adc pop aam (bad) jo loopne jo lock jecxz push push cmpsl repz push mov adc rcll push lods adc dec and cmp mov sbb push dec int xor stos add mov fcoml int3 mov push int sub nop mov sar mov push sub mov repz aad sub addr16 negl das jp popa mov dec mov das push test jge ret data16 iret iret into dec sub sub jg jge sub adc or xor mov lahf sbbb push into or daa in loop sbb (bad) call mov (bad) sub std push notb dec outsl sbb adc sbb daa or leave fcompp and mov push shlb mov fnstsw or loop stos cmp mov push imul sar mov ret icebp js mov pop jl pop movsl push dec jg xchg loope lahf mov dec in inc jne lods xchg sbb push pop pop mov adc mov or fldl xor adcl cmp shlb or fwait inc pop dec jnp jns inc arpl mov test loope push pusha jecxz jle sbb xchg sbb lds dec push icebp iret bound or or ss mov pop pop insb out adcl fwait xchg push pop in xchg jae push lret lea mov sbb adc jb bound mov push movsb mov fs inc jae mov insl pop rcl mov fimul push sub hlt sahf adc xchg jnp movnti adc jle rcl pop inc insl mov in imull mov jo jae mov jmp leave mov dec pop aad cmp jecxz inc jne cmc inc inc mov or and xor test sub jecxz out hlt scas xchg push xchg xchg inc out push (bad) mov jo les jbe pusha xchg pop shl jbe lds cwtl fnstsw mov or mov xor xchg mov (bad) pop dec sbb imul or shrb sbb push pop xchg jl cmp push sarl (bad) test ucomiss stos xlat pop fnsave jnp cld add or sub jmp mov and arpl test cmpsl insl out aad adc push pop mov fidiv cltd icebp fisttpl mov mov pop dec inc sbb add movl stos dec sarl imul icebp sbb aam push mov mov fstps pop dec jge shr inc or stc sub test fnstcw imul enter cmc push (bad) sub mov adc ficom in (bad) cmp shlb push scas cld testl inc arpl push fldcw push stos sub fadds jecxz sub pop test mov xchg xchg fdivr (bad) sbb rcrl xchg inc adc push adc out mov imul loope insb jecxz daa test rcrb (bad) pop xor dec xchg mov test les pop xchg les lret pop and daa add rcl pop mov pop cmp test clc bound fsubl mov push or mov scas data16 scas out ss push and or jmp push test push xchg enter push sti out xchg out inc mov jne mov jmp jle ds pop xlat fcompl inc jmp (bad) push (bad) imul loopne ss dec sti dec xor repnz or test push mov mov out das push mov sub jns rcrl mov jae jg popa insl lea mov xor adc xlat jl cmp pop jno inc fdivs fwait lahf jne int xor int stos mov sub dec inc je lock lea popa ds aam jmp xchg repz hlt int3 xchg inc mov lds adc test cmc mov scas fild leave sbb cmp popa loopne mov sbb call xchg sarb pusha je pusha sub jno lods bound icebp cltd out dec dec (bad) push aaa subb add (bad) pushf stc ss mov and sti cltd pop mov add test sahf imul mov int3 and loopne and inc xchg out nop jle mov mov out mov insb in and cmp (bad) iret and mov push in movsb insb cmc (bad) js mov sbb cs sbb cs insl cmp pusha jo jp sbb and cmpsl push pop mov (bad) mov jne lea jne sub mov dec and fnstsw jmp and xor cmp sbb cmp adc mov xchg push cmpsl into and insl bound mov mov or into push and push outsb sbb testl jne inc ja pusha (bad) jbe lds into lahf cli ret outsb lods out daa inc xchg mov stc push or stos cmp lods dec into movsb dec xchg pushf xor aaa dec add mov cmp and mov ljmp aam push inc fcmovu jp int adc cmp or sub and cmpsb aas scas sbb arpl int3 xchg insl push shlb push notl ds mov jns lea rol fs push add (bad) jmp xor xor (bad) stos pop push movsl dec mov pop lds mov pshufw push push adc aam addr16 push pop push jp or sbb out insb lods mov pusha mov mov repnz inc jg leave das ja dec ljmp je cmp (bad) xor sbb fimull xchg int mov (bad) rcrl ret mov je test xchg cmpsl outsl cmp in cltd jecxz ss fwait in jp sbb frstor nop stos out std push xor scas or je pop pop jp repz or push pop stos jae call xchg (bad) jne pop sbb cmp into sti add push mov test sub or imul ret xor (bad) mov cwtl mov div mov jecxz and ret (bad) or stos lea int3 xchg lret cmp insl (bad) and push dec data16 mov addl add adcb ss fcomp xchg mov sbb sub mov scas (bad) fsubr cltd xchg fcomip dec sbb (bad) and lods lcall outsl jge (bad) icebp or and pushf or jbe jg (bad) sub or dec mov inc xchg in mov adc pop mov pushf sub call mov cmpsb aad lods jo mov negl xchg cmpsb lock cmp cmpsl fwait and (bad) addr16 mov pop jne jge push sar add repnz and (bad) cs test push jmp push out cmp decb clc test fsubl outsl jno jmp je orl mov lret mov (bad) dec or outsl mov pop xchg mov push cmp jge ret jmp pop stc jle fimull pop cmpsb repz arpl mov dec pop add xor add mov cmpsl jp cmpsl sub cmpsb xorl stos xor mov repz js sbb dec or out lcall out js hlt cli lret popf pop fnsave imul mov or lcall fmul dec cmp pop xor ljmp push popf clc xlat outsl sbb out mov sub je mov pop mov pusha je jle orl push sub ljmp cmc ffreep cmp pop cmpsl out cltd or (bad) xchg add outsb xchg mov sub in aam loopne pushf add or mov pop incl mov sbb clc cltd pop loope mov cmp (bad) out in pop lods inc add sub shrl mov mov dec iret (bad) xchg inc mov sbb (bad) adc add push xchg cmp push xchg testb jl jl push lea pop and lret cmp push mov addl (bad) (bad) ret push popf xchg cli mov mov in adcl scas push clc add push sahf push enter fstps add mov std mov mov mov arpl jo lret aas push (bad) cs out in jbe data16 call das test dec lea lcall xor aaa movsl les lret in outsl pop xchg and pushf jb inc inc enter ljmp jle aam test xchg jecxz (bad) leave mov lods lret popa inc leave mov push clc (bad) fist or inc cld sbb jg jbe lret cld sbb sub cmp cmp das lret mov ss xlat movsb sarb mov lock mov fdivs adc test push roll push out jno fs jne push test jne nop xchg out push in push push ss faddl pusha fwait pop adc mov and pop lcall sahf fstl mov xchg arpl test lcall jbe mov fcomp int3 inc shlb push je je cltd push pop mov or adc out arpl mov inc call mov or jg push jg xchg add lahf jae inc sub adc sub push xchg add sub push sbb data16 dec add mov imul pop xor push (bad) int3 out faddl pop insb sub je mov pop mov add inc and popf insb sbb add or mov adc das inc add pop cmpsl add xchg cmpsb outsb sub jb shll jmp or push bound mov repnz or sbb pop and mov cld push jmp push xchg add clc idivl pusha or lock cmp xchg inc lcall inc inc lret adc (bad) pusha ret or sbbl dec addl adc popf scas insb xor sbb mov adc lcall hlt cmp or rcr pi2fw mov outsl call mov push es shlb (bad) cmp std aaa cld dec (bad) aaa sub push cmp lea xor push mov pop xchg sbb mov into mov cs dec add cmp and in cs stos lds and test cmpsb xchg mov leave inc sbb or dec lock or jg pop call (bad) or add add xchg bswap xchg into xor adc inc mov sub imul aaa and fldl sbb loop or jo (bad) ret cmp call arpl int3 loop mov pop insl movsl out xlat jne lahf or lea cmp or inc aam ljmp mov jo xlat cmp pushf nopl mov clc pop test test mov mov sub fistpll jge jns out daa std mov push je dec ret xchg cld (bad) ja or cwtl pop or pushf orl insb fcomp dec sbb cmp add loop xor in popf mov xor mov push mov cwtl in (bad) shrl dec mov fadds push test push jmp lods or push jns xor inc mov adc fsubs cmp lods inc lods xchg loopne popa lea mov mov adc jnp inc push (bad) rcll jg imul adc dec loopne jb inc mov test je dec inc lea ret mov adc movsl add push cmp mov dec cli out push push push cmp bound dec push out mov int (bad) pusha lret test cmpsb cmp mov std stos xchg aas jns jnp cli jno cmpsl mov xchg ss dec jne,pt jg jb dec push mov jmp nop adcl jle fldenv xor dec xchg into mov sbb push cmp jl push pop (bad) mov adcl or (bad) fnop fs rcrl cwtl (bad) cli imul jmp (bad) xchg mov mov pushf push bound inc dec (bad) or cmc lcall int3 pop mov inc (bad) push sti les cmpsb call loop mov inc (bad) push mov push adc mov loopne push outsl push cltd sbb fwait inc rorl inc (bad) out jbe sbb cmp sbb xorb xchg adc stos adc dec pop repz push frstor fbld in pop loopne into ljmp call mov or pop mov and stos rcrl mov fldenv cld xchg fisubl adc add mov dec push lea pop divl mov push mov lods mov mov dec stos cs sub pop inc imul sub sbb xlat jno xchg xchg and stos lods xor sarl or icebp inc test fistpll xchg je jecxz sahf scas mov push andl mov imul stos int push divl and out pop in loope mov mov popf sahf mov dec lock sbbl pop adc inc sbb jmp andl mov stc test dec sbb daa out outsl or push or cmp mov lods mov outsb jmp rolb jb sub (bad) jnp lcall gs sub dec rclb ret adc cs mov aad xor xchg in mov jno inc xor xor cmp or push push sub sub pop je aad mov inc cltd cli pop jb inc push out push idivl mov add sub add pop lret push clc mov jae scas sbb inc and push cmpsb loopne ds mov push adc ss push and push push sbb mov sub sbb inc and xor stc or cmp icebp loop or sub jae jo jb ds dec or rcrl xor mov pop adc aas aas xlat xchg rclb sahf hlt push (bad) fsubrl mov add out ret mov add xor pop cs or or sbb (bad) ss pop sub outsl mov jg and inc jae repz or inc mov ja or mov andb into arpl aam push mov rorl popa (bad) ljmp mov inc cwtl cmp leave popa inc jb inc in shll jnp mov push outsl push dec cmp lcall jg push mov loope jnp iret add fnstenv push test mov xor sahf inc cmpsl (bad) sbb mov mov xor notl notb mov imul push ljmp mul pop add dec enter mov pop inc mov out push (bad) jl sti inc pushf pop or ja and cmp test stos lds (bad) leave (bad) hlt in scas adc cltd push and frstor mov xlat or mov xchg xor xchg scas test dec jge inc hlt or cli dec jg out and int outsl push bound mov addr16 adc (bad) xchg (bad) xor xorl mov fwait adc dec popl cmc jl pusha (bad) std pushf inc add test scas push jecxz jecxz xchg sbb push (bad) dec mov cmp movsb enter jge push adc out test xor sti mov dec out insb mov test imul cwtl jo jp push jecxz cwtl inc (bad) jnp ficompl cmp dec sub imul mov dec aaa xor dec mov mov test (bad) repz mov mov adc and xor pop imul stos jae xchg ljmp cmpsb in aam xor xchg cvtdq2ps xlat dec cmp mov js fcomps mov outsl xchg xchg cld scas jp push and jo lea movb pop std call mov xchg negl xchg out xor add lock inc test cs or adc inc imul cltd mov mov out ja adc test (bad) and (bad) aad jge adc outsl stc lret mov (bad) jnp jnp dec adc test sub loopne and out rolb (bad) jg mov xlat arpl pop jnp dec xor sbb (bad) pusha (bad) (bad) jno pop je arpl mov mov lahf (bad) mov std arpl adc loope push pop lods mov fsubrl mov test push popf (bad) popa add add push sti push (bad) xchg pusha push mov fs xchg dec adc push mov insb outsl gs add jmp daa push imul outsl mov fcoms shlb cmp adc xor inc sahf lcall stc nop das add icebp lods aaa cs jecxz push fdivrl add call add push ja push popf xor jge ret (bad) ffreep lds (bad) lea adc pop jl cld daa xchg lret sar sub (bad) outsb fwait into pushf insl mov ret xor sti sarl (bad) sbb aam ja cwtl aas outsl push xor dec (bad) sarb (bad) or lahf sub mov add cmc lods and xlat and (bad) fcoms in and xor mov pop (bad) or cs sbb pop ds inc stc push xchg sbb xor das imull dec jle add cmpl ud2 dec mov (bad) ret push adc jge cs in jge orl lods aaa or xor cmp add subl in or (bad) or sahf inc xlat jmp push je mov (bad) jo,pn mov jb mov loope jo pop mov cli int jbe ret inc subb xchg cmp adc mov out xchg jecxz dec (bad) cmp pop icebp aas popa repz sbb call jnp pusha lcall adc std test rorl (bad) ret mov sub sub jle inc outsl xor xchg cmp insb or (bad) lea jecxz (bad) ja repz cmpsb aaa cmc or push mov aas mov loopne insb lcall mov push enter sub jae dec scas fldt pop jle or pop ficoml pushf mov adc push xchg cld stos movsl ds inc push fwait negl lcall inc movsl sahf dec out sahf xor add xchg pop inc pushf (bad) icebp dec xchg pause cs movsb js call outsl mov hlt mov pop mov scas sub int ljmp in adc pop and out or popf les das out pop mov cmp es lret cltd ret adc mov lcall push (bad) pop loope ret dec das sub xorl pop sub es int rcr sub sti sti xchg ds xor stos sub mov (bad) lahf rcrb scas in sti adc lret xor inc mov sbb mov (bad) sbb pop jl lock push (bad) sti inc fbstp mov add sahf pushf push rcrb sti xor cmp notl inc cmp mov das mov loope cmp mov add jmp insb cmp sbb and clc lods jge mov jno mov cmp sbb push arpl or in or xor xor test (bad) mov sarb push jl hlt movsl add pop movsb add cmp fldl insb pusha mov push or add (bad) cmp aas xor sub fdivs sub mov mov xchg xchg roll scas mov lds popa fwait test push repnz sahf cs (bad) movsb xchg cmp inc popa or int add cld mov repnz push push dec push mov sbb and leave add repz dec test pop std xchg (bad) addr16 pop mov adc pop push addr16 in lahf mov cmp lcall shrl mov push inc pop sarb cltd jl loopne pop call (bad) data16 fs pop mov xchg push (bad) fist and insb inc or add mov push inc mov or sub inc leave push stos push loop and or jp sti xor sbb adc in add fnstcw sar jge sbb and jno in clc jb,pt mov pop and add inc pop scas inc mov adc sub sub mov xchg dec inc sbbb fcmovnb jbe insb rcr dec dec inc les mov insb dec mov add sbb outsl mov pop mov dec dec pop bnd pop outsb cs aas dec sub (bad) int lret mov into je fsubs outsl outsb adc loopne or xchg xlat jge dec xlat je pusha dec in mov pop fistp dec push cmp loope sub aam loope outsl add sbb dec cmp sahf adc aad (bad) repnz dec jp sbb adc stc sahf jmp cwtl mov sbb and add mov clc cltd mov inc inc aam jge mov mov cmp add out outsl push mov ret cmpsl cmp in pop dec cwtl add sbb mov scas sbb js push popf and fstpt rcr jmp mov pop cltd push js ret inc jns adc fs leave movb cwtl pop add lock into add (bad) cld push pop inc cmp xchg dec push push sahf into xor add cmp (bad) and ja popa test cld fwait jbe inc jnp out inc or inc dec jne out push (bad) jno nop lods push sbb mov cld or in pushf insl (bad) hlt pop out jmp stos sbb pop sbb cmp dec test adc or rol test mov xor pop les xor mov mov adc mov jns push clc pop push xchg sub push cwtl pushf std jnp cmp inc and (bad) mov or cmp icebp out jb dec push aad adc inc sti fldenv (bad) nop mov sbb aad ljmp bound stc int3 aaa fidivrl (bad) pop push xchg push sub inc or aad sahf lods out out xor nop sub pop xor pushf adc push mov pop inc mov xchg xchg xchg out xlat mov sbb movsb xor aam xchg or pop sbb int3 mov add enter roll loope push mov dec (bad) fisttpl mov insb and inc pop xchg jg jle out in mov loope sbb mov push orl iret sarl mov loop jecxz jecxz (bad) pop xchg mov callw insb out into (bad) cmp cmp mov cli outsl jecxz jae insl cmp dec ja dec cmp (bad) in sti xlat fnstsw shrb jl roll outsb cmp jns push repz pop jp sbb adc and push les xchg repz loopne in and shlb pop lahf xor mov jnp cmp ret sbb fcoml mov int sub sub cwtl xchg add and into jg shll mov mov inc inc leave dec adc push xchg adc rorb mov cld cmp xchg jle xor mov mov inc adcl pop fadds data16 test fcmovbe inc ret setae cs pop dec sbb aad les repz imul leave (bad) fstpl inc lret addr16 push cmp xlat test popa mov aam incl xchg out out (bad) loop fisubl shlb mov dec (bad) jo adc fcmovnbe sbb and test xor lds xchg fxch xchg xlat sbb (bad) fistpl insl xchg shll ret sbb idivb or decb into nop mov iret out or nop add fisttpl ss push pop adc cmp (bad) push lea push mov cmp out ss sarb adc fdivp pop push cmp and pop push std pop mov lcall mov mov lahf aaa xchg std outsl (bad) jp gs in daa inc jne push inc push xacquire data16 adc in jns gs inc imul scas jb mov cmp movsl or adc int pop lcall jb int mov mov js cmp and dec repnz sbb leave pop out mov stc dec out rolb sub sbb scas xor cmpsb pop cmp popf xor push cmp push sub gs (bad) aad xor jl cmc and fstpt cmp cmp jmp sub in out pop sti mov inc arpl popf mov jle and ret sub mov or loop ret xchg jo icebp or or sub push pop pop out out lret inc in enter loopne arpl and insl add scas pop in pop out push mov jmp sbb imul push and pop dec outsl clc test jmp notl push inc sub lret xchg lock cmp (bad) cmp pop dec in push cltd jmp cmpsl mov push inc inc dec popf xchg mov shlb sti mov inc (bad) (bad) fsubs pop pop sbb push mov xor push fimul xchg push (bad) jge lahf lret popl clc mov das xchg sbb call pop push lock or in jbe adc idiv lret adc mov (bad) or sbb ja cmpsb jge xor (bad) out icebp sbb push or mov fbstp fsubr ficoml sti les inc mov and xor sbb dec addb mov (bad) cmp cmc add pop and int mov dec sub dec push and pop sbb lds mov lea inc cwtl outsb outsb or sahf and mov aam fsubrl stos cmp test adcl aad fistpl inc add sbb rcrl inc scas into (bad) jb push or mov (bad) ret sbb cmp fimul jecxz ljmp fcmovnbe clc or rorb push push movsb jnp dec mov xchg int pop hlt test sahf cli jp push loopne lret sub lods xchg loopne or roll and lea movsb dec lods mov cmpsl rol sbb cwtl aam clc lds xor mov ja ds lods nop sbb sahf (bad) fidiv fwait pop hlt fmull mov sbbb aam adc (bad) movsb inc (bad) jns pop (bad) (bad) int3 xchg xchg pop mov lods ss (bad) xchg dec or jmp rcl (bad) push sbb mov mov das fcoms lock ljmp mov movsb into dec aad mov or enter movsb bound scas stc xchg pushf icebp sub (bad) push sub jg xor and outsb mov cmp lcall dec int scas cmpsl mov mov je jb push cmp aas iret out sbb loopne sub xlat inc imul xor push sbb lds sub lret popa imul inc sbb or mov lds dec pusha adcb add fwait adc cmp cwtl mov repnz xchg lds js mov mov jp jecxz fldt outsl lods (bad) sti ja cmp ja mov lods shrl (bad) cmc sub shl xor jbe ret outsl addl jge push mov or aaa jnp leave lcall jmp imul or sbb cwtl mov and and push lss sub loopne fmulp das ficoml icebp sbb xor aad lea pop lret jl adc inc call addr16 push cmpsb aad mov pushf mov ret cmc mov push pop adc inc mov repz sbb sub fsubl aam adc mov stos movsl icebp insl or pop sbb lret in clc test les data16 enter inc push imul jmp sbb imul outsl jle stos bound loop xchg lods in adc jno jno jg call fwait jp pop (bad) jle jge ret cmp psadbw scas hlt mov out xchg mov add or mov outsl fisttpl sub xchg adc inc push sub jmp es jno xchg jl mov sti cmp call push cmp (bad) decl cltd jb jno scas arpl cmpsb ljmp pop ret ret mov and xor fs enter push or add arpl adc sbb popf fist mov xchg adc inc xchg pusha addb dec movsb arpl mov jne or mov mov inc lods orl imull inc dec and and xor decb jp adc mov cmp xchg popf dec aas jnp mov xlat nop dec hlt (bad) (bad) push sub fwait jno imul inc push in das xlat int xchg xor aam dec lds ss cwtl add imul or and xchg add dec jmp mov clc clc mov jp lods push jle lret insb adc scas mov inc or aad mov xlat sbb andb (bad) push jbe xor cmc jmp mov pop sub pop lods adc (bad) inc mov rcrl or mov inc mov dec cmp mov jg (bad) jecxz clc jge xchg mov lahf stos and mov arpl subl sbb movsl std mov sub xchg pop sbb mov lahf dec ret test out es push leave (bad) xor test inc mov jo sub push xchg or cmp out into mov and xor mov jb and cmpb adc fs dec in lret push mov pop cwtl jl icebp sub popa sub xor aaa sbb xchg inc enter sub pop ret inc (bad) fadds dec movsl pop push cli pop in pop or aaa into outsb mov movsl jg pop ljmp jge loop fisubrl push fistpl sub cmp push push or inc jb arpl and sub push and jae jbe sub sarb jb sub (bad) insb jp cmp fsubs pop and pusha mov xchg es jb scas mov xchg repz inc or adc (bad) jno arpl push lret aas mov lods mov mov rorb clc sub cmp pushf push in ljmp push jmp insb lahf cltd xor aam mov jecxz es shll andl inc jo ljmp mov xor jg,pn adc repnz mov pop dec push mov lcall cmpsl mov nop xchg imul fnsave xor lret sbb dec jl sbb cmpsb dec xchg jns repz hlt sbb rorb jle mov leave pop pop push popa daa aas pop in pop std cmp jmp idivb sub push dec mov aad mov jle pop mov add add fild fisubl or pop jmp push adc stc imul dec xchg xor jno icebp push sbb or xchg arpl or jp call rolb mov jp test sbb nop dec sti fs ret mov das pop push inc push je jp adc xchg (bad) es mov dec fsubl std test mov (bad) adc sub sbbb fs mov inc aas xor repz xor mov jl xchg push push stos sbb out add cmp xor push repnz dec cmp jl,pn jge inc decl xchg adc mov adc add adc pop imul adc dec pop fstpt inc pop inc fisttpl inc jno cmpsb mov les xchg mov aas lcall mov inc jge sub xor xchg lods dec inc cmp (bad) je es or stos leave push pop divb sub sub mov inc mov dec daa push lcall and fwait (bad) and movsb sbb out jg or es or pop push jne jp push iret mov pop (bad) test div dec pop xchg pop mov bound insl movsl pop aam xchg cmp adc daa pop push in movsb pop call movsb push loope push mov cmp dec jp cld stc (bad) mov mov jle sbb in xchg adc or adc adc sub adc jle mov pop mov mov (bad) jo or data16 and mov jne dec sti cmpsl dec push jg aas mov enter cmp test push mov bound xchg (bad) stos mov jmp sbb scas inc sbb out xor mov rcrb push jb or or rcr cmp xor jne ljmp mov and and lds inc dec pop outsb call dec (bad) dec ret jae je cmp lods (bad) (bad) dec js stc test arpl inc test in movsl mov jno cmp (bad) int or daa add pop popa fadd pop stos cmp pushf repnz pop loop lock cmp cmp in inc fcmovb push push ret add push inc pop mov add or jmp cmpsl out sbb in pop pop nop inc xor cs and inc inc push pop pop lret hlt fxch test xchg cmpsl clc loope fidivr adc jne js jmp or sbbl push xchg cmp test sahf js mov sbb and sub pop cmp call (bad) mov cltd (bad) mov outsb in stos dec push inc cmpsl jbe outsl insl in push push loope pop push cmp push push adc imul fisubl lock push and xor ret pop xor and xchg into cmp pop hlt jl push xchg fbstp pushl adc xlat dec daa dec jbe dec loop fstl mov jb pushf pop popa add in insl shr lods xor mov jae nop xchg movsb pop (bad) mov fwait add loop inc adc lods dec roll ret mov mov mov imul push and cmpsl es xchg outsb jecxz sub jecxz les les xchg repnz add or fist rcrb je andl (bad) jb mov xchg and cli lds test push ss pop mov adc daa hlt xor shrl push or and loope or rol repz jo gs adcb cmp (bad) xchg and rcll mov push dec gs adc scas jg in lret jno add ftst fistl test lret scas mov jle popf xor mov mov int3 out lods movsl std jne enter pop and mov je cli jge sub lcall (bad) addr16 std add xor push leave nop push (bad) out inc pop (bad) lahf cli ss cmp pop mov in in or push pop sbb dec hlt and sub and ss sbb xchg cmpsl sti xorl pop inc je je (bad) cmc add inc popf jle fsubr (bad) int cltd and nop insl (bad) mov push fs push test and ljmp loope lea jbe pop stos cwtl push and outsb cmp (bad) fldcw mov xor in jns fcmovbe lods sub rorl cmp (bad) out xchg leave jae push xor xor or imul xor add (bad) aaa daa add adc movsb jbe push xchg in push pop cmp push xchg sub jb in jbe push fisubl dec icebp (bad) cmp inc sbb pop or and sub fs shlb ss test xchg call test pop mov pop std in jge cmp data16 call sarb fisttpll jo mov jp in int3 ret cmc mov xchg sbb fcompl add mov or xorl aad xchg daa mov pop out or pop dec fisttpl or xor mov out mov inc pop add pushf movsb xchg inc xor sbb aam stos jg jle hlt fsubrl test loop push or mov push mov inc test push (bad) es loopne push sub int das bound push mov shlb sub sub dec mov loope jb daa (bad) repnz mov cwtl cltd adc mov sub test add cwtl adc mov adc add sub mov leave or mov dec push mov and xor dec add jle push cltd popf push cmp jo inc mov sbb cs sbb aad jl push mov mov andb cmpsl cmpsb fcomi scas jbe sub xchg mov dec test ret mov add call addb enter roll inc sbb push xor ja fdivr sahf mov lods dec mov push push push (bad) cmp shr sub mov dec push mov and pop add mov push cmp int adc push mov notl sub inc mov out cmpsl addr16 jmp sub cwtl cmp push mov out pushf and cmc in sbb and dec xorl xchg in jb iret (bad) mov dec push add fldcw ret fistl and idivl ljmp jnp cld scas out mov pop test gs jmp xchg xorl lods adc inc jbe cmc daa inc sbb fsubs shlb jns inc stc rcrb fstl sbb xchg (bad) rorl fsubrl outsl xchg sub call inc sti add pop mov (bad) jne mov adc sub das data16 mov (bad) iret or out scas enter xchg lahf mov jg mov out and lods jne divb ret push xchg add ljmp in cmp mov jbe mov jp add cmc dec test xor data16 inc xlat das shrl mov cltd cwtl fimull insb push inc adc sub les fxch mov jge mov add popa lds mov fildl jg push cld push mov push popf aas sub (bad) mov leave cmp jge pop mov popf mov jg push or xor mov lcall jbe popf loope es cmp adc arpl xchg sub add inc mov scas add fcoml lock aaa or ljmp sub test int3 lret test pop push pop sub movsb aas ror fcom addr16 mov ret (bad) pop mov sarb cmpsl or inc outsl adc jbe and cmp cmpsl dec js (bad) sahf aaa (bad) test push (bad) roll lret jbe push lcall or ljmp (bad) out loop jecxz push mov or in out jmp fucomi mov lcall negb rorl adc insb cmp in cltd inc sub fwait (bad) jbe sbb int3 std adc push pop aam fdivs inc and arpl arpl ljmp push test int xor or pop leave and pop push sub in dec cmc mov idivl xor in cmp in icebp aad in xchg nop add jns scas test add in xchg jge ret popf stc push repnz sbb sahf sbb sbb pop cmp loop lcall rcrb add adc push adc adc aaa insl fistp sbb pop js es (bad) out and addr16 aam push and add pop cld lods or inc jmp out pop dec cltd ds les xlat shl das test mov mov cmp in push cmp xor pop fldenv sahf jnp sbbb mov fsubr (bad) pop mov icebp stos into jae xor xchg push dec es fadds (bad) movsl rcrb faddl jl pop add cmp stos push pop sub ret xor scas inc push mov out xor repnz cmp sbb loopne (bad) repnz inc mov mov mov xchg push push or push faddp jle pop sub add sub sbb (bad) cmc mov jne ret add out ljmp push std pop cld dec cmovg js ss and push cmp and std jne mov mov (bad) out cmp dec and mov inc jg sub pop sahf ret popf jge mov cmp xor lods xor jns jns test push and rcl test mov cmp adc jo movb cs mov (bad) jb jno out cmp popf push bound mov ret and adc mov mov mov dec jb bound add adc dec aaa inc into pop cltd dec cs mov add pop xchg xchg into push loop lret movsl das push sbb push mov cmp bound cmc cmp dec negb or xor xchg adcb mov jae jg je repz popa xchg lods mov jmp mov in mov mov pop xlat loopne dec jbe inc in cmp pop dec xchg cmpsb call jecxz pushf fisttp jl,pt push test cmp and sub ds repz ret sbb fs push test jbe and mov in movsb arpl push andl cli lcall jnp mov lahf xor int3 push jp and mov inc mov gs pusha ljmp imul mov adc daa cmp sbb ljmp stc push sbb or or imul imul (bad) pop inc in repnz in in lret in adc adc pop out cmp pop decl pusha sub fmuls test mov mov ret cmp or sub mov or loope inc jno xor cmpsb dec and push pushl jecxz,pt mov (bad) jp insl mov lcall cmp aam pop cmp push adc inc fs lret shll cli movsb cmp je pop xlat cli faddp mov int or in mov je sub les or cmp inc cmpl fstl jbe hlt fldt pop jno sbb sbb mov ja int fcomps cmp xchg pop add rcr test cmpsl push stc aas decb xchg push and push stos adc pop inc push dec mov gs pusha mov loope jmp mov cmp mov pop jp sbb xor or movsb xchg fsubrs scas sbb je push sub cld (bad) repnz jns add inc sarb lahf push imul push mov popa outsb fadds loope pop push lods aad imul fbstp fwait and fwait jne add pop movsl xor xor sub sub cmp pop decl and push idivl (bad) ret pop jno (bad) ja nopl pushf cmp out or out enter mov sbbl les cltd imul add xchg jg popw push mov pushf sub sub push push mov cmp ljmp cs ss cmp push jg push adc sbb addb and and in push sbb call (bad) pop or jns inc andl (bad) lock dec mov in arpl cwtl ret imul in jbe xlat xchg inc add inc mov icebp add xor dec adc cld cmpsl aam xchg jns jae push ret inc and xchg das ja jg mov add data16 test push pop mov cwtl testl in jnp or pusha popa adc insl xorb (bad) push daa dec enter inc mov cli (bad) xchg insb jle lods call mov jb jmp lods cmpsb xor mov inc es fstpl std cld sub jno pop fsubl scas mov sbbb or adc and test pop xorl jecxz enter pop js mov cmpsb jmp pop mov call fdivs aaa aaa ret std shrl add scas nop (bad) out jno xor jp std fildll push xor xchg test (bad) movsl and pushf sub lock push dec inc aad leave mov ja sbb dec adc dec pop sbb test sbb lds es dec mov and jecxz push iret pop mov test (bad) fbstp ja out arpl fnop or pop sbb push fildll les mov icebp sbb sub scas mov xchg lret ljmp xchg clc xchg jecxz xchg lcall xchg (bad) in jo loop sahf cltd bnd mov fistpl mov mov stos jb adc out enter mov pusha or cwtl sbb and xlat ret insl xchg cmpsb rorl sarb add loope jns leave mov les stc cltd scas mov (bad) jge je jo scas sbb xchg mov fmull push (bad) je rorl ja js insb add test std sub subl mov or mov cld lret lret jecxz dec loopne adc mov iret in sahf pop jle ss cltd xor push ficoml sub mov (bad) iret in adc pcmpgtw stc cmpb nop jb,pt jb pop call bound stos dec ljmp sub je mov imul sub fmull out test pop and aas aaa je sbb test and sbb jg jbe push out mov mov xor dec cmpsl fwait jns or mov out cmp lods jae mov lods adc or pop (bad) xor xchg inc call mov pusha push cs cmpsl (bad) jge jnp mov dec lds push mov out jge test inc jecxz xchg in add in pushf jno inc repnz mov and jne dec ss xor pop int3 fisubr dec xchg cmpsb scas mov popf (bad) dec jb test push fcmovnu dec add stc push repz fsts mov iret push (bad) sub daa orl xchg iret (bad) and jmp mov out push adc es (bad) in inc les (bad) jle lods leave (bad) sub cmp jnp sar mov rcll mov movsb mov mov xchg cs mov or test icebp pop xor inc cltd pop push leave or and inc jno iret ja mov mov jl xor aaa jmp cmp push insl xchg push sub push fcmovnbe xlat loop sbb xchg notl ja jmp pop ljmp mov test push imul mov push fistl add lea push ret loope stc pop jns les xchg test mov mov out sub clc in (bad) scas adc cmpsb xor xchg (bad) lea les pop xchg and fildl ficompl std and xchg sarb cli sub dec in mov mov ret scas xchg mov lds (bad) pop or (bad) jne insl push jne pushf xor adc cwtl and pop xor sar icebp jp,pt aad gs lret or icebp pop sahf mov sbb icebp jp test leave xor mov xorl push xchg (bad) mov repz test pop and pushf cltd and ret (bad) scas jb dec push push out addr16 push jp dec xor mov mov repz or ret pop and in pop outsb mov je adc jb and add fstpl jno cwtl push and inc xchg mov push fcmovu fcmovu pushf fist cmp sti sub dec mov ss rcl cld mov repz pushf adc pop or mov sbb xchg mov xchg fldcw dec js outsb arpl push lret add jae mov sub mov cli iret loope or icebp and (bad) out (bad) (bad) pop (bad) inc dec sub mov in cs xor sahf pusha ret fstpl jnp outsl fldlg2 sarb dec push cmpsl mov (bad) jle mov stos inc cs push ss test jno inc mov and loopne test idivl loopne pushf std and jle add add mov movsb cmp or es adc jmp mov mov xchg mov out jle cmp jge movsl ret test pop arpl sbbl out fiaddl mov xacquire add scas adc (bad) sti imul lret inc in or inc setge mov mov je push cmp fcmovnb push mov stos or push add dec jbe out cmpsb pusha push pop add insl aad xchg clc cmc and in mov push (bad) cmp lea lea das jnp jmp cmpsb icebp in mov cld pop or cmp jae shl outsb push push and in cmp xchg jge out and xchg xor jle sbb cmp rclb add and cs pop dec cli ror in scas shrb jg insl push fwait lea pop inc pop dec loope idivb cmp jmp arpl xor (bad) adc mov sub and cltd xchg add push pop or in stos imul lret arpl sbb push dec aas in jmp call fidivrl push (bad) cltd sbb leave adc and test push insl out repnz cwtl sub inc mov dec dec cmp mov xor inc add jl daa insl fs aas mov into jp cmpsl jl,pn in lahf add sbb arpl or ret imull adc cwtl adc push mov mov imul add vmaxss loope xchg test push pushf push daa xor or mov inc fisttpl mov dec mov xchg popf add add pop or jno sub cli mov mov inc into and fnstenv push sub gs inc ja cmp leave loopw imul (bad) out std sub jne stos iret inc mov insl xor fcoms jns sub sti pop aad jo mov mov int3 (bad) add or jb cmpsb imulb xchg sbb mov add lahf into push test and test adc and push ret add (bad) jo cmp mov push (bad) (bad) xor push jns iret scas je and addr16 lret ret nop cwtl and sub inc aas xchg add mov lods in and lods xchg xchg sbb aam mov lods scas push lods jle xchg pushf addr16 add lods dec in push jnp sub pop pop dec mov xchg cmp dec out mov ret push movsb push push stos test in mov jge lods cld scas (bad) and adc xlat pushw cmp cmp inc nop mov and (bad) mov sarl repnz inc sbb dec out (bad) mov pop cmp call in ret dec push loopne mov adc std xor fwait in (bad) push dec scas ja mov in and aas aam mov adc cmp adc pop (bad) aaa es roll lea sbb jb int3 pop jnp stos fldt xor adc sbb mov mov ss es sub jg shll nop sti fldcw lret sub (bad) fcomp mov stos pop lcall pop loop pop xor rcrl movsl cs add dec fbld mov ja mov test adc lods (bad) jae enter cmpsb sbb cmpsb loop mov sub mov adc adc hlt mov jl sahf pop inc jb xchg sub ljmp ret jmp mov int3 jo popa pop xchg sahf mov mov test int jnp add sub arpl stos mov and xchg add in add mov arpl scas insl sar das pop xor lds push leave pop mov (bad) out or mov and pusha adc ficomp ret lods test and push mov out movsb inc mov cld shll jecxz sbbl jg sub clc loop fidiv mov in push xchg jge and add ds movsl dec jl out sbb inc mov mov in push xchg scas or jo mov or lock jnp dec xor push and add cmpsb dec rcl movsb or in outsl lods jp call xchg (bad) aaa push adc xor (bad) into lds cmp push cmpsb push je popl pop pushf mov push loopne (bad) xchg inc (bad) hlt sub jmp adc pusha insb loope sub mov inc int inc icebp dec ret jmp shr xor xor jno fildll sti lret test push inc add push js or xchg les xchg lock inc mov in rcrl outsb js icebp ficom or out les nop xchg stos mov jp sub shl int or add mov (bad) mov outsb cmpsl int3 jecxz hlt or inc mov xor addr16 dec push xchg movsl jl pop pop jno ss cmpl movsl addb inc jne cwtl cmp es mov decb cmp aas dec outsl imul loop insb les inc js cli bound (bad) add fcoml in sub fldl sub in (bad) scas xchg hlt into xchg subb and dec xlat leave dec mov mov mov (bad) fisubl xor cwtl (bad) mov jae push mov insl enter int addr16 fwait lods add adc aaa mov ljmp and cmp xor mov sub in push data16 dec sub ret pop cmp ret enter jns pop in push mov cwtl xor lcall jne gs popf dec mov mov jmp stos fstps jle pop pop (bad) insb popa pop sbb ret lea aas xor popf in stos jne (bad) fs inc adc adc mov sub mov test sbb or sub xchg test clc (bad) pop mov inc sbb clc out push inc mov dec mov orl xchg push cld inc int3 and lahf jno cmp fadds (bad) mov inc orl dec test fcoml nop jbe jecxz inc in pop hlt or faddl xchg mov pop jmp enter frstor pop mov mov xor add mov push ret outsl lea ds nop add lcall cmpsl add xor ret lds popa mov xor and int3 pop dec out iret xor jno test lds cld addr16 xchg insl inc lock notl dec fnstcw adc shlb jno cmpsb sbb push ds insl (bad) out test pusha movsb inc insb mov jb inc mov dec or dec sbb mov jo (bad) subl dec out jno adc ds adc aaa push cmp mov pop cmpsb inc pop popf mov xor aaa mov fdivs jg into fcmovnu cmp adc iret shrb xor in add mov inc sbb mov mov clc (bad) xchg out sub fcoms pop fsubrs incl pop add call jp mov push push test push xor pop lret out notb test rol add pop lock adc xchg jecxz sub add iret in sti je ret xor push repz aam push jno mov mov jmp jge dec xchg inc mov sbb je test outsb stc mov mov (bad) fild push add test cmp inc clc aaa es pop jl jp jecxz icebp pop xchg cmp pop ljmp lods push bswap mov push popa xor es or or adc sub mov lock stos push xor clc insl repnz mov push inc xchg dec add sub mov and inc add cmp adc aas fidivr cmpsb and cmp test mov nop mov rolb and outsb test pop loopne cli inc push lea mov or dec hlt push (bad) test adc ret cmp adc inc push mul mov in xchg push adc xchg jbe cmc jp test sub push cld sbb add jbe mov xchg dec cli repz inc and rdtsc xchg mov and jl mov jns aad ss or iret scas lods push clc mov push cmp (bad) fwait into xor popa (bad) mov or repnz aam rorl adc test nop cmp sub out mov div dec mov pop aad out add in push cli mull sub jg push leave insl adc or push out mov hlt jbe adc jno push pop int3 (bad) sbb loop mov mov test stc add mov jb fisubl std into fildl cmp cmpsb (bad) nop jle jb xchg movsl inc and cmp sahf pop roll fcmovu push aaa dec add jbe sub or push xchg mov leave mov gs mov or dec xor push inc jb or xorl lret dec mov pop mov inc jecxz aam mov mov in mov out stos sbb adc jne mov ja in jbe sti jnp pop mov rep cmpsl ja cli (bad) clc inc xchg fwait mov add mov or xchg and adc sbb test adc cwtl loopne inc cld arpl pop loop stc std push xchg inc dec push jp popf rolb fldt lahf out lahf or sbb mov pop repnz pop mov icebp fpatan mov mov mov cld push fsts aam (bad) and test add sub movsb shl mov loop add aas xchg lds xchg (bad) mov mov mov fwait add jno pop mov mov mov sarl mov pop inc jle push int clc imul jo scas lds je adc add pop add cmpsl and pop mov xchg mov stos pusha lcall and and pop or test mov fwait push out scas mov push xchg imul nop push sub aaa mov push pusha (bad) cmpsl sbb out and or xchg cs push dec fdivrl jecxz or and mov stos add or mov daa mov fwait scas aam fldcw cmp mov loop das scas mov jo repnz push push xchg (bad) push ret cmove xchg clc nop cmp (bad) repz fiaddl xor popf ja,pt push jmp dec stos clc cmp cltd jno inc xchg fstenv or mov lds inc fwait enter popf mov (bad) cmp in sahf enter adc xor push pop sbb mov mov mov sub adc jb (bad) jle pop pushf sti lods sbb xor aaa pop jne mov fiaddl aam clc push and es scas inc or fistp in and and (bad) jecxz test sub jmp (bad) in test mov mov xor mov popf sub mov inc lods imul fisubrl adc imul and pop push mov fistpll cmpsb hlt dec jp push (bad) (bad) imul lcall cld test aas mov mov xorb add pop idiv cs int3 sub or enter xchg mov popf cmc in cmpsl enter fdivr and (bad) std enter daa pop int3 (bad) jne push fisubr push mov add je les loope jge fcmovnbe fldcw cmpsb loopne lds jne mov inc pushf xchg aam je fcomip cltd inc ljmp and testb cmp mov adc fild mov xor movsl fcomi outsl jo fwait sbb scas fisubr sarb jo mov push xchg pushf adc aam fcomps inc cmp stos jg gs mov cmp mov and sub mov out cmp jmp aas jns lods out xor out sbb and push mov jb mov dec push jge mov dec cmp inc sub pushf lcall adcl mov nop imul mov adc add xchg fcompl lahf xchg adc add (bad) adc push xchg push inc inc pushl sbb push aaa mov lret lcall mov inc mov outsb dec or (bad) pop jb sub int jbe lret test mov es imul cs jg adc out dec cmp cwtl or repnz fucomip inc push cmp loop test inc cmp insl xor jg or pop fincstp push pop xor jmp mov in jo or xor cld pop mov xlat cmp or dec jbe pushf lret fidivl ja stos lret mov loopne mov movsb mov push movsl push icebp roll mov subl in sahf push insb cmp jb sbb ds sub sahf add subl lods leave mov fstl add sub xchg in mulps out adc popf mov imul or rcl cmp rclb in insb fstps repnz xchg mov sbb lcall test xorl jmp (bad) xchg mov rorl popf add aas dec dec mov adc mov test add lahf (bad) xor les pop push xor sahf pop fucomp popa test inc fist mov inc cmp pop jg adc mov mov sbb stos out adc bound lahf inc jg jo ja ds outsb push or scas loop add adc mov and (bad) xchg mov cmp sub sub mov (bad) sub dec sub or ret adc and cld (bad) mov mov dec lcall sub loope mov fildll dec xchg fildl dec inc xlat stos cmp push mov out or lds add push fiaddl sub mov loopne (bad) sbb popf xchg cmp movsb test pop sub jbe adcl add mov jmp jge jno push clc cmp pop xor sub ffreep cmp test ud2 andl pop gs lea and orl sbb jbe inc in js cmp cmpsl or jae in adc out adc aaa sub cmc (bad) lret lret or dec imul and (bad) daa xor fsubs mov fwait arpl mov out insb out dec out in xchg lret aam mov sti sbb fsubs rol repz ret dec jbe xchg and xor les dec and mov inc mov inc add xor inc adc dec and mov hlt rcll mov lcall push sar push jbe cmp fild push cs xchg mov push cli je add or adc push and xlat push mov js mov dec or lock sub push jle enter mov cmc sub out incl out xor lods sub xchg lret jno movsl push out jmp adc dec dec std mov pop movl add jecxz add sub enter push pop xchg mov push xchg cmp shlb adc add ret lock push jnp loopne fsubr cmp addb inc fcmovbe imulb or push add sar cmp dec inc jnp push nop xchg pop xor sub push lods add sti xor (bad) (bad) xchg cmp enter (bad) and int3 or inc push lcall stos imul mov and xchg mov jnp jmp hlt mov mov into in jno dec pop dec mov rol mov repnz jb jmp mov sbbb es data16 and adc xor and pop cmc xchg jae fdivrs jecxz lcall jg scas add inc je les mov ret push sub sbb push ss mov xchg nop xor mov stos xchg inc arpl jg fisubr jb les cmp fiadd xlat mov aam xchg test xchg mov mov enter push pop xor (bad) bound cwtl out dec idivl jecxz or out ss adc in loope in sub loopne mov ret xchg mov sbb popf fadd jno mov mov cmp es repnz outsl sbb mov arpl mov (bad) lret xchg jo stos cmp lcall xchg jnp test xor cs call test and (bad) aad ss popa pushf aad mov mull mov in push int (bad) xchg into decb mov mov sub (bad) shl nop stos xor sub xor or and fimull cmp in sub testb cli jb mov inc sti pop lods (bad) in out jecxz stc mov sahf out xchg inc jne incl popf sarl inc sbb add adc (bad) ss push cli and mov aas mov pop call push in mov (bad) pop addl arpl aad sub dec lods mov lea cmc jecxz loope imul push xor ret cwtl mov rclb dec fisttpl adc inc loopne xchg ret sbb jecxz jmp jae mov js je pushf add pop pop sub test negb outsl mov (bad) or leave mov dec icebp out push xor loop inc fnstsw add xor and jae dec cmp push add pushf or pop sti test mov stc sar xchg and lret jle pop jb (bad) dec jnp push mov push pop adc mov jae leave cli insb pusha and jecxz cmp int3 out xchg imul jae fimull (bad) sub int3 jg dec push (bad) xchg cmp mov mov pop xorl aad push repnz rclb popf (bad) movsl rcrb hlt xor (bad) repz std lcall or cmp lahf and in (bad) xor xchg pop xor push mov xchg cmp sub xchg jns inc fxch (bad) ss icebp mov xchg mov adc test push jmp mov dec (bad) push sbb push fiadd jb push lock dec xchg xor fdivrs dec data16 out mov dec (bad) and mov jle imul loopne lds push divb xor insl movsl jle hlt lock push dec int3 lock mov lods pop lds pop push add adc mov mov pop fwait rorb and sahf dec sbb jbe nop iret test inc mov add mov je inc mov nop fcompl mov or pop mov xor add mov rcrb jl jnp add mov rcr daa pop je imul int aad push sbb jg xchg add sahf push adc dec subl sbb scas xorl cli fsubs sub les ja or inc push and mov cmp int inc mov inc (bad) jnp in pop mov pop sbb dec mov xchg pop test loopne leave cmpsl sub dec fwait push or xchg sbb in insl pop mov (bad) push xor add xor pop xchg lods int3 js sti repz jmp push push pushf aaa aas aas cwtl outsb cwtl lds mov mov arpl lea es sar sbb (bad) mov mov cmc add flds mov mov (bad) leave xchg xchg (bad) pop push jae es (bad) ficomp fiaddl pop loopne test insl jmp and lods inc jnp inc int3 stos enter mov push sahf push jmp negb mov add xor std add jmp ret jno inc ljmp ja aam adc and insb sub sub cld cmpsb mov push add mov test std mov pop push cs aas sbbl ds les inc adc mov sbb (bad) dec mov mov (bad) dec xchg xchg (bad) or xor xchg in stos in stc push (bad) push mov enter add sub fildll mov movsl jge pusha sub jmp mov packssdw mov notl aam jns adc (bad) mov iret mov xchg popa xor xor imul jmp jecxz jo (bad) ja inc xor (bad) faddl cmp xor xchg popf loope mov jno out jle imul jg jno mov je ret stos mov and mov push stc xchg pop stos xlat out clc les popl mov daa add and sub jb jecxz push xor mov pusha jb xor cmpsb cmp cmp and std jle pop int3 imul push fist in mov imul aam jo sbb pop inc mov or imul mov jmp pop je dec (bad) int xchg dec adc loopne jmp push outsb ret test cld out mov push jle sbb mov stc ret stc cltd push sub je insl push icebp outsb in inc mov shrb subb outsl mov or mov add sub in sub push push fs push adc mov sbb int3 push sub test pop pusha das arpl or rcrb dec xchg push and or cmp jp inc mov outsl icebp mov fwait scas pushf aad cwtl scas pusha cmp sub mov push adc cmpsl push add push xchg xlat out outsb mov mov pop mov leave xchg dec fdivrl (bad) incb push cmp jg xchg test sub jno or jns std and add das out mov outsb stos push add gs push push adc mov xchg addr16 jl addr16 dec cmpl out int3 and xchg cs push xor hlt or pop dec xor mov sub in bnd cmp lcall push icebp jmp push pushf lock je out xchg les fstps rcr jl lock pop push icebp xchg push and aaa jecxz sub dec test push popa sti lret sbbl test xchg stc cwtl jae xor bndldx js lahf stos (bad) mov test scas lock xchg aaa call ret xchg add xor mov shlb test es or pop xchg dec fdivl imul xchg repz xlat mov fimul push adcb sbb loop push jmp int add sbb out iret inc xchg fisubl push mov jno ljmp mov sbb pop adc sbb jmp imul adc mov mov jno sbb imul jae jnp sbb sbb cmp out mov stos lret cs test and push mov movsb xchg mov jge sub scas pop loope in pop xchg inc xor mov mov (bad) movsb out addr16 loop pusha dec in sub jmp fldl shrl and xchg imul out sub mov lea mov movsb inc addl pop and call sbb aam aas pop jo leave pop enter les jecxz fcmovne hlt (bad) mov dec dec sub xchg and (bad) xchg (bad) mov in into addr16 and xchg or test decb icebp call pusha dec mov sub lock test or cmp pop mov jnp mov pop or sahf adc dec inc jnp icebp imul hlt or ljmp cmp inc and clc out sbb add push jbe xchg les shrl cmc ret fwait mov repnz and adc sub repnz cli cltd lock fisttpl idivb (bad) ret push add lahf aam jb pushf (bad) iret sub xor repnz mov dec xchg mov cmp xchg ja imull outsl pop inc push pop andnps inc ljmp sar pop sbb iret scas das mov cli xor lds pop shlb adc adc push xchg mov call cwtl jne jl dec jae sbbb rolb sbb fdivs addr16 mov jl mov stos mov in lret pop push aas jbe mov mov mov mov mov sub das xchg adcl mov adc push add aas or jl jne jne mov xchg out (bad) lahf ds mov fnstenv in xchg add sbb sbb scas ss js inc and xchg mov sbbl lahf dec xchg ja mov sbb mov xchg ja sub adc mov push test test daa nop idivb add and outsl jne sbb test test dec sub gs ficompl into icebp jno in addr16 or xor mov sub cmpsb dec rolb push jne add into jnp xchg dec mov das pusha or lret stc mov cmp pushf sub test repnz lahf xor je and or (bad) push fistpl dec loopne cmpsb mov jb sub sub sbb mov fdivrp mov in mov ret sbb int pop pushf jg push fadds outsb rol lcall sbb pop rolb jmp cli jae or in dec mov inc out pop jo (bad) xor mov out add imul inc cwtl jno into cmp push test adc cmp sar push and or mov fwait cmp lcall test sbbb stc cmp es shlb ficoml mov stos xor loope jle push lret popf mov pop fwait add add or shrl sub lcall jbe xchg sbb xchg and stos jbe scas addr16 inc cmpsl push in xchg faddl add fisubl cmp push loopne mov enter addr16 xor inc lahf pop cmp arpl (bad) cmc xchg es sub and int3 loopne or in cmp fdivs (bad) int3 cmp test mov inc cmp xor mov fdiv pop pop ss bound xor push mov jno aas mov fcmove jmp rol mov int3 or cmp cmc hlt push mov xchg dec mov dec and sub adc push cmp jl add dec xchg cmp imul aaa xchg mov cltd fwait jmp xchg sbb inc push xchg loop repnz cltd enter js sbb push rclb mov and mov sbb cmpsl es insl test push jge dec inc mov sbb add jbe mov and lods arpl xchg mov ficomp xor jle ret jnp lods push jb aad xabort (bad) flds jns sbb and push pusha xor sub push fucomp push mov mov es sbb aam or (bad) std ret dec sub out or or mov loope cmpsl ret hlt test jo dec push push in outsl jle inc aas aas xchg push sbb xchg lcall mov fldt or xor movsb add popa repnz mov pushf sbb pop xchg add adc mov pop push mov mov pop (bad) adc or in cld adc jnp cmp pop fwait or inc mov sti push sub and add pop xchg push pop int outsb das pushf (bad) xor sbb popa loop stc jg xchg xor pop sub adc mov mov out sbb adc cmp ljmp cmpsb cmp jne mov pop out push or aaa das test inc stos xchg adc push lret mov sbb cmp mov inc or push outsb adc je je jmp or cli mov xchg std or out pop (bad) fcmovne notl (bad) fdivp in jmp loopne ss movsl bound outsb or nop std pop cmp scas dec test outsl dec mov lods adcl pushf sub pop addl movsl int3 inc mov mov pop xchg and mov (bad) stc lock lods or sub xchg adc push push sbb popa sahf sbb in xchg aad stc loope push mov jbe rclb je push aad (bad) jno jmp stos repz (bad) dec (bad) jae clc int jbe xor sbb cmp xchg hlt push add dec pop mov mov outsb mov insb leave dec out scas fnstenv in (bad) mov xlat lahf dec xchg dec mov lcall out rcrb (bad) pop mov (bad) xor loopne xor ds push movq cmp add cs into xor das gs push int sbb sub or ds lods lods ret insb push push mov add sbb jns push dec sti push fidivl sahf dec jo js sub xchg and (bad) imulb (bad) imulb scas out cmp and mov jecxz out mov add cmp adc pop (bad) adc dec sub or pop sbb dec sti (bad) mov jg push cmp mov repz mov jp sbb (bad) cs push icebp bound int ss aam xor movsl pop cmp dec sub les push ret push (bad) jno mov lds dec inc fwait or sti pusha shll clc jp sub idivl add mov jg lods xchg scas ret lahf out sbb ja dec mov jmp clc push jmp mov in iret sub test je xchg cltd push repnz mov sbb pop dec lods in aad movsl jb (bad) pop add lret or sbb in mov mov jmp jne rorb push pop bnd xlat cmc pop mov scas cmc aad adc cld lds rclb cmpsl jae inc incb dec (bad) inc cli mov sub inc push aam inc lods xor notb popl dec icebp jno or mov push push in or mov pop lods dec fild cmp imul xchg xchg dec jb scas fnsave mov lods pop pop ja ret inc jb insl insb add cmp lret inc dec xchg adc and mov lds xor pusha (bad) stos mov movsl cmp and xchg and jb or or sbb push jns mov inc jnp enter sbb dec out xor in jo add xor mov mov inc lahf aad pop into inc jl push scas mov and or out pushf xor arpl rcrl ss shll pushf jp pushf cmp mov into loopne cmovnp xchg dec std xor int jbe shrl or push lea xchg add add ja sub fwait test xchg int popa out cmc push or sbb mov xorl stos and push scas mov lahf add mov jge out jmp inc cmpsl sarl imul ss cli or mov stc push bound adc mov clc push jp pop aad dec mov call js mov and loopne outsb pop mov testb add shrl cmpsl inc adc cli jg xchg decl and ss stos inc fstps jecxz movsb xchg gs call cmp sbb cmpsl fwait pop sti mov clc push sti outsb (bad) out dec push or lea jge cltd adc cli rorl jp cmp inc (bad) outsl (bad) and aam mov jb push insb add adc es push xchg rcll shrb lock add rorb push shll xor xor outsl dec mov scas adc mov sub cld cmp pop leave inc mov mov xchg lahf push nop lret jl fbstp repnz hlt in jbe nop sub scas or mov aad jle xor push push movsl stos lock or mov xor idiv push sbb inc pop adc or dec sbbl adc dec rcll adc cmp push jno and call xchg hlt inc ret enter xchg insl sub mov xchg (bad) (bad) lcall dec jno es mov mov push (bad) incl shlb (bad) loopne pop imul mov inc pop xor jle mov add adc xchg push sbb jl xchg dec aam mov or or cs jmp test fdivrs test push scas mov jns call mov xlat add xorps inc out mov fcoml bound sbb int outsb cmpsb rcrl jb rcr fdiv xchg out mov js fwait out ret jl pop inc (bad) js pop out test aam mov mov test pop mov and cli mov test sarb ret adc pop adc or arpl ljmp pop or sub out mov mov subb push pop pop and test and (bad) repnz repnz loope pop jmp pop jmp adc outsl mov test jbe fisttpl adc dec mov int lods loope popa ja inc cmp jle fisub fsubl aad and nop cmpsl or insl inc mov cmp xchg lcall enter pusha cmp jne or imul jg lods add jg lea lahf jmp out mov lahf jno xor sti add adc scas push lea lods cmp xchg cmp pop test jns pushf cmp xchg mov jno leave (bad) push scas push push xchg stc jbe fcomps enter scas popa pop pop dec (bad) and jp js ror jge pop lcall cld cmc sub inc mov push dec js xor mov jo (bad) xlat sbb cli dec jmp and stos xchg push pop push sbb adc pop mov and je pop jae push test das mov lret pop imul push lock leave pop cmpsl inc push mov mov push push pop out or mov (bad) lcall andl cmc (bad) pop xorl cmpsb cmp lahf stos and (bad) (bad) nop mov pop mov and pop pop pop cmp mov xchg push or sub xor out push repnz mov sub int inc adc scas scas rclb hlt stos cld adc rolb test test dec xchg sbb inc mov dec adc jnp ret add scas icebp add adc fs fisttpl outsl test adc mov push lea (bad) push pop cmp cmc leave in pop mov rcl pop cmp in sti cmp lods in imulb pop rorl or dec mov adc mov das or xor sub xchg jp add cmp (bad) jg or ret aaa add pop js in nop pop mov das add mov push mov fiaddl and (bad) pop sub mov rorb popa jl pop cmp lret movsb jb mov fdivs rolb enter repz mov cwtl clc mov pop cmp adc mov or sti sub adc enter ret bound in xor jge or xchg add mov (bad) xchg idivb jne mov jbe ds add jo push push test mov ss stos inc (bad) stos mov xor fsub or insl push (bad) fdivrs cmp mov inc data16 sub mov fiaddl sub sbb andb scas xchg cmp cmpsb jp fldenv ret inc test mov dec popf repnz inc mov cmp cld jnp xor std sbb into cmp inc jbe je adc fdivr push je cmc (bad) or aam push shlb outsb mov xlat dec mov imul inc daa in rcrb jecxz sbbl xchg dec xor test push jecxz imul aad sub pop adc (bad) jne aad popf cli cmpsb inc mov or jl mov cmp loope lds dec cmp pop cmpsl cmp decl fsubrs xor adc in lock inc push mov jbe test stos xor daa lahf mov loope mov ss mov dec push lret mov std dec or push sbb test and (bad) jae test push rcll inc ljmp inc mov inc (bad) push lret xchg stos pop std fldenv inc mov je iret in arpl dec mov fldcw xchg fisttpl pop ror mov fstps mov push insb and ds pop xor pop inc mov or mov jle sub into adc je loopne mov xchg out jae aaa cli cmpsb rcl or icebp jo xor js mov add jmp cmp xchg mov push mov xchg jg aad sar (bad) in dec cmpsb jmp leave pop pop push mov sahf dec lahf aam (bad) sbbb cmpsl xlat out add mov jne into adcl lahf jl mov dec or ss ss add fldenv (bad) sbb or fwait push sti push cmpsl or sub enter clc iret int aas cmc stos ret and mov inc out mov subl idivl in inc shrb outsb sti out fsts addr16 imul or xchg and outsl mov lahf stos lods dec dec push out cmpsb negb andl sbb loop sbb sbb je or cmc or push scas add mov mov lea mov jno out push (bad) out add faddl (bad) jl sti pop or sahf ret cmpsb inc mov mov (bad) cmpsb sbb dec fisttpll and popf into sub lock mov (bad) mov cli and adc pop (bad) lock das leave enter push call les jne xor inc cs mov subl into pushf aad jle rcl scas xor and mov ljmp mul lret and int dec sbb icebp fidiv adc xor mov iret scas (bad) mov lods js inc pop add sub lahf inc xchg xor or roll push jnp jecxz test mov lahf (bad) push rolb lcall cmp lret and sub xor mov clc inc xchg stos xor inc and sbb fldenv ficompl inc call or lea push lds xor (bad) jnp xchg imul pop mov mov dec mov mov fimul fbld out movsl adc aad sti icebp imul jp sbb outsl lahf push push incb repz dec mov xchg xchg ljmp mov mov in movsl push pop jl xor pop cltd dec mov ljmp repz jae push aad sub mov out pop jno loope lcall imul push imul lretw rorb sbb inc mov jbe pmulhw js adc mov adc ficoml test inc fcmovnbe xchg lods mov call or dec jecxz or ret (bad) mov cmp xchg dec pushf out insb jg and sub sub xchg jno mov mov loope out add mov insb mulb popf add (bad) clc dec lds cmp cmp fldl jmp nop xchg aad inc xor mov addr16 add into inc and mov enter (bad) or movsb cli add lahf adc je mov fwait or add jb lcall in fwait lret pop popa add cwtl insb in sbb lret arpl out pop inc out xchg dec bound in mov sahf inc jge pop mov adc pushf and add lahf sbb insl scas decl outsb dec add int jg aaa repnz dec int3 jg insl dec js sbb push call (bad) mov cmp (bad) das pushf adc rep xor cmp iret loope call push popf xchg shr in cmp mov add in pusha enter pop xchg jae pushf out leave loope mov mov loope daa mov ret aaa loop xchg dec test xor mov popa in mov mov ss sarb mov mov aad mov clc fistl jne mov xor inc fs push mov jmp push mov test mov cmp inc cwtl in cmpsb jecxz mov (bad) notb adc mov add ret add mov cmp lea mov out sbb addb pop and xchg adc leave mov int3 mov sbb scas xchg rcl int3 pop pop inc xor data16 and sub pop adc lods mov lahf add iret sbb pop and repz lcall pop inc repz rcll inc pop daa mov insl sub push pop cmpsl (bad) xchg add sub insl ljmp inc test stos sbbl leave inc jg aam pusha ret jp cmp mov mov imul push std add sbb into inc xchg xchg imul push sub jae mov in subb or in test push inc xchg dec test push or push sldt adc pop insl cmp push and pop lret fwait mov inc movsl adc dec xor adc xchg (bad) cmc push out (bad) ss pop cld notl in (bad) std rcr mov movsb lret and mov ret roll pushf mov jmp pop rolb push leave sub ret hlt ret xchg sbb mov xor ret mov jbe cmp cmpb popa cmp (bad) pop cltd inc jmp lahf stos adc movsb imul xchg pop mov mov mov ja inc aas nop push adc inc mov enter adc jl adc je xchg cltd cmp fnstenv adc pop out fmull mov ss xchg data16 inc jle xlat dec cmpsl es cltd arpl call loopne jns xchg add lea cmp push test gs sbb scas test mov into loopne iret lock xchg sahf add push inc xchg arpl into repz icebp stc outsb movsb jle push jbe push mov jno pop mov lret or mov mov jmp pop jle cmpsb ljmp xor cltd pop cli inc pop pusha insb push and jbe lods popf data16 icebp mov cmp stos xchg mov xor stc enter hlt push jp mov pop pop divl inc jl lahf adcb fwait sub mov pop addb loopne push sbb cmc arpl pusha aaa mulb inc test mov push pop loopne in popf test lds pop (bad) dec and in cmp adc (bad) out inc loop xchg (bad) mov jle cmp repz lods fdivrs lds sub iret adc fdivp aaa jae pop sub pop push setl enter pop fdivs loope xchg insb sbb cmc ss or mov add cmc mov push lahf insl stos test out enter test shll daa lret dec sahf adc mov aad inc in sub add and pop int nop add push scas int cli mov movsb inc mov mov pop sub pushf movl jmp push int3 cli pop popf push (bad) and push cld adc cmp fdivrl adc sbbl flds mov dec mov xchg jle pushf sbb lds mov loopne pop add adc in sub (bad) jae fld pop fs repnz icebp outsb sahf je mov add fs and loopne ss leave (bad) sahf pop inc jl aaa fmuls decl out push jmp and ljmp out imul xor sbb insb repz xchg fiaddl loopne movsl inc mov movsb into cli mov xchg or mov add cmp mov or sar addr16 pop xor in and imul pop jg stc rclb jecxz pop fst inc inc sbb lahf pop inc ja imul mov cwtl leave jl rcl outsl in sub jg jne and cld std jbe and dec outsb mov stc (bad) cmp pop or cli or jno aaa adc jae push and aaa clc sub fs fldenv shlb divb pop inc sbb mov icebp pop sti jg adc ss add repz bound dec xchg out repz inc push push (bad) (bad) cmp in dec cli xor or push aaa and inc gs mov outsl leave mov js jne mov mov test push lret bound sbb inc mov pop imul divb fstpl jge mov idivb inc push add push pop mov add push sub popa cmp xlat sub pop imul mov mov lods xor jne sub inc mov xchg sub mov xchg hlt pop or cmpsb inc cwtl jbe pusha xchg insl insb pop mov addl pop dec ja mov bound cltd pop out jp sbb pop jae cs cs popf les lahf jl aas pop adc pop xchg cmp pop inc xor add xchg pop or pusha dec xor add cmpsb js adc add add xlat push push in jmp jecxz iret cmp sahf mov mov pop and movsl dec cld sbb xor dec push (bad) jo ss mov mov or mov adc mov push (bad) jbe pop sbb xor (bad) or xchg dec xchg ret pusha sbb aaa lds ds mov in or popf push (bad) aad (bad) in xchg pushf scas push xchg and xor stos sbb ficompl cmpsb jecxz ret imul adc leave inc mov dec cwtl sbb (bad) or jmp mov fisttpl out push (bad) sbb call popa fldenv lret add ja or pop mov cmp adc sbbl lock gs sub mov ljmp jne enter std arpl rcrb inc adc popa sarl jns xchg dec movsb add pop and repnz inc pop stos xchg aam shll xchg loope mov pop in lods bound addr16 cmc xlat repnz mov aas mov nop cs cmpsl and jo xor mov out dec sub adc loope imul cmp lahf mov push dec adc adc hlt test sbb shll cmp icebp fdivrl push xchg mov std add lret (bad) aaa scas adc push adc add roll mov rcrb aas sbb ja jle popa dec mov pop or popf push or pushf lock fs cli pop addr16 or dec out xor out cmp xchg adc test in xchg cltd test and push jecxz push test in dec pop jmp (bad) and repnz mov cs push movsl add or outsb shll or decb imul cmp xchg cmc in sub enter fst popf cmp xchg (bad) lahf hlt jge insl leave mov (bad) divps dec (bad) icebp std pop cmp adc rcrb adc inc and sbb pop out jmp sub and xchg js add mov ret xchg inc movsb (bad) push (bad) and cmp push inc in dec xor sbb je xchg fisttpll xchg push and adc or mov dec shll xor clc in lock sti and sbb sub jb mov sahf je push jno and inc ds push inc movsl jnp cmp pop (bad) mov aas cwtl ds lret mov call stos inc adc sti push xor xchg stos es test dec dec inc insl shlb pop or add and xchg fs or outsl xor ljmp loop sbb adc insl jle pop dec mov adc addr16 xor push pop push jne add cld pop in xor sete test pusha movsl les stc stc xchg dec (bad) shlb push clc fcomi test xchg into inc mov sub mov lcall cmpl dec mov sub or shrl das bound push dec fdivrl inc mov (bad) lret xchg iret mov inc and adc test dec pusha and mov and jnp sahf jg adc mov sub sbb clc jo jg cmp in call cmpsb movsb jne das pop jb push ret sbb mov (bad) mov aas xchg pop fwait or ds pusha (bad) (bad) mov add std mov or xchg fnstenv jl fwait out ficomp adc xchg arpl (bad) cli sub or loope std js mov mov pop jo jo mov lock push xchg add fdivrp and adc pusha xchg sbb sbb adc ljmp xor test (bad) sti test cs sti dec xchg xor stos mov je leave xchg les jbe push cmpsl ss stc mov ret scas pop imull jmp sti test (bad) adc mov push ret movsl inc or sbb lldt cld xchg or jne xchg jo enter (bad) push xchg out xlat push push add xor jbe out pop ret jnp push out into inc lods push add adc nop and sub loop cmp lock cmp and dec je stc mov inc loop fs cmpsl mov jno nop jns lock cmc les xor sbb mov xchg mov imul cmp xor gs push jns push mov adc ret sub pop cltd jmp les daa int sbb mov dec xchg sub aam mov out adc arpl mov fcom xchg scas lret pop cli pusha inc jge insl gs in pop std inc pop sar push lahf mov jb repnz cmc pop jno cmp mov mov mov test sub into add adc pop nop push mov mov imul push hlt pusha fildll fstl pop cltd pop sub xor stc jbe out jo imul fwait jae cmc mov push and lods sub fist push adc fstpt cld xchg ljmp stc cmc mov out jo shll or ljmp pop fdivrs inc fnstsw push xlat aad imul add push xor xor inc mov mov sbb xchg fisub and ret pop xor bound and jns (bad) mov or jecxz jle pop sbbl roll inc mov dec adc (bad) sahf or cmc push jo inc pop (bad) fisubl push jg cmpsb imul sub ret lods jo pushf movsl scas movsb popf das (bad) nop out cmp fwait pop ss out (bad) aaa aaa push push leave adc jno pop aas ret mov orl pop enter mov fs cmp aaa cli push test int3 jo xchg sbb xor cmp gs out jno cld lcall fcompp das shl jge and sbb (bad) jp (bad) movsl in movsb lret add enter loope inc test pop cmc dec inc nop push cmc adc sub or popf jns dec dec cmp cmpsb rorb rclb dec jnp xchg mov repz xlat inc das dec test jl jb mov mov fabs enter loope pushf mov lds add aad xor popa adc ljmp xchg sub movsl cwtl and lahf fiadd mov ret mov mov test and stc jecxz dec pop add out adc pop and sub fsubs cmp cmp pop adc ficom ljmp data16 je and incl es adc loopne xor xorl mov adc cmp pop xchg comiss dec push test addr16 int3 imul insb andb push and outsb bound in push mov lock xchg fdivrl dec pushl sub sbb xchg mov xchg xor xchg or sub inc cltd pop xor outsb adc sub mov cli ret loope cmp shrb mov aas out or push lods or sub sbb fnstcw push sub mov push imul out rorl mov or jae jge or xor jg mov fcoml sub test aaa mov lahf pop cmp and mov shl fstps imul xor or loopne cli call mov stos idivl inc orb aam or into sahf jmp pop push loope ret cmp clc fldl xchg shrd xor mov daa and icebp dec faddp lods jecxz inc xor fsubs repnz test jns or add xor pop xlat or test aaa adc ds mov cmc and out inc pop mov or fcmovnu rep (bad) xorb adc xlat and cmp mov jns mov gs jbe fadds xchg xor scas cmp inc (bad) repnz xchg xor data16 arpl cli in dec test xchg cmpl icebp push xchg xorps dec ljmp mov outsl push in xor jbe test dec daa fdiv icebp roll lahf and push cmp xchg out jo pop loop cmp mov into cmp mov adc lea xchg jns cwtl jo cs popa sbb jg mov jmp xchg jns mov inc int in ds mov xchg or adc sbb out cltd cltd negb lea das cwtl pusha orl cltd fcmovu insl xor (bad) call fnstenv pop mov xchg popa mov ja pushf or adc jecxz mov scas dec mov cmp (bad) shll adc xchg leave sti jge pop stos imul dec ja imul cmp lds fwait lret jne xchg scas pop mov adc hlt mov or pushf mov mov jp mov pop roll mov aas out in add in in (bad) adcl ret pop pop lods xchg inc xchg add std sarb vlddqu sbb icebp rcr imul xor fnstcw mov inc call mov and add popa xchg jp test mul and jmp push fistpl lret xchg ds dec or cs movsl stos xor sbb or push inc cmp xor or rcrl cmp and mov ret sub cli out push adc rorl loopne repz mov pop lds dec or ja in dec inc fnstenv or adc in lods repz push mov dec test xchg dec insl cmpsb ret rclb sub repnz std arpl js xchg inc movsl (bad) fidivr out push and repz and ret icebp (bad) repnz cmc inc xchg test dec inc xlat frstor cli and sahf lods idivb out fistl testl loope iret lock out mov repz cmc mov pop fidivrl xchg sub int repz stos (bad) xor pusha setno test arpl (bad) jp fidivr test clc sbb cmpsb or rcl xchg mov aas daa or imul ss bound pop xchg lods sub loop jl cmp push adc lret adc sahf out aaa iret add pop std icebp cmpsl mov push in xchg xor std xchg mov ret xor pop mov ret sbb push sbb mov jecxz test (bad) mov inc or ret xor jnp inc xor test aad push xchg test lcall xrelease and mov scas test inc and xor xor cmc (bad) fistpl popf jbe cmpsb xor fdivrs idiv test mov xchg insl repnz test or mov movsl das jmp sarb sbb sub je or into repz js adc inc pop cmpsl add loop call mov adc add fnop stos fs fbld (bad) cmp jmp dec nop lods loope lahf xchg in dec enter mov or movsb insb mov punpcklwd mov cltd and stos jo pop arpl ficomp loope (bad) sbb and inc cmp aam daa lods mov lods inc add test pop ds push (bad) mulb (bad) xchg (bad) repnz or and pop add jg mov or jo add xchg mov stos cmc mov and pusha dec test add fstpt dec leave add (bad) xchg ja or dec mov fisubrl fldt les lret adc lret mov sub xor xchg mov or dec cmp xor pop cmp mov scas mov dec sahf (bad) cs insl cli cmp mov divb ljmp outsl popa out cmp gs es mov stos jb lds cmp inc (bad) cs xor adc sti and call inc arpl dec dec pop fcompl lret jbe outsl popl inc test (bad) leave mov and in in xchg daa xchg xchg movsl (bad) fcomps hlt xorl mov out inc ss test mov dec ret push mov mov cmc out into add pop ret test cmp mov mov dec call outsl mov mov aas pushf add push pushf adc inc or inc movsb jl mov ret imul cmp shrb mov hlt andb sub test inc jbe scas fmul (bad) mov popf bnd cmpsl sub mov mov jmp stos add pop cmp es stos pop adc xchg mov jne xchg fisttp xor ljmp test fwait dec mov test pop movsb shlb adc lock push pop add movsl lret stos push insl mov pop or (bad) int3 daa mov xor pop or rorb push or cmp and add pop and sub inc cmp sbb or add cmc test jge cld pushf enter call push ds sub ret ss aaa ljmp mov repz iret aas add dec lea lcall out bound and test pusha dec sti pop out pop sahf mov push addl in (bad) pop jmp fiaddl movsl mov stc lods mov or stc and sarb insl inc jmp outsl popa xor mov (bad) out mov notl dec sub xlat jmp sbb cmp cmp xor pop mov mov fs ret lret fidivr mov inc out mov inc push loope inc fstp xchg mov test cwtl (bad) repz inc (bad) push addr16 je or push mov mov mov jo jmp test jmp je outsl xchg jmp dec jo mov daa lahf (bad) cmp cltd sbb push xchg mov frstor aam jle scas test popa inc in sub jp push mov cmp lcall iret lret scas xchg adc movsb in add insl cmp pop ja stos out adc inc testl xor jecxz pushf cmp ja ja xlat in mov fisttpl or push insb and xor mov pop fnstsw out sub add out xorl or dec lahf es jle push in sbb sbb dec push rcrl dec shll ficom xor (bad) xor scas call pushf stc (bad) shrb jge mov pop adc cmp out sub sub movsb xor add mov jo push xchg lret out mov ss dec test adc js lock push cmpsl and dec sub fstl pop jbe arpl or dec insb or mov aad push (bad) (bad) xchg and mov push (bad) adc es push test out mov pop out inc lea in ret arpl les jl sahf cmp jecxz outsl popa add scas or in xchg into rcll (bad) in push lret mov data16 inc addr16 daa mov test test mov xor cmp aaa mov mov subl sub (bad) jb mov js out inc mov mov xchg pushf test push sahf fs xchg clc push scas iret pop outsl mov aas mov dec in xchg cmp add pop mov mov xchg mov push pop cs mov int sar lds (bad) (bad) imul arpl xchg xchg inc inc mov int (bad) inc pop mov insb push push repnz inc cli repz lcall cli in test push dec scas ljmp push pop test sbbl mov push fisttp xchg jge jmp lret sbb jns mov ja and nop clc xchg sub push dec dec push xchg add into mov ret mov lods mov fwait notl ja cs or mov ret mov loop jbe pop fist out pushf pop dec cld xchg dec stc cwtl jno loopne dec cmpsl scas and push cmp jg addr16 mov push xor inc sub dec xor in mov push repnz pop push shrb loope inc or and push pop cmp xchg in mov sub dec roll adc je (bad) lcall (bad) test mov push mov dec cmp cmp cmp mov cld ret or inc mov cmp mov mov cld sbb mov cmpsl dec lea mov push icebp fdivr push dec jg loop std push xor cwtl (bad) (bad) xor mov and adc aam pop ret cmpsb pop imul push test xor sub sar push dec adc or mov mov and hlt arpl fildll cs lods mov mov repz inc sbb imull cli and cltd xchg jne mov cmp je cmp pushl sub inc jno push int3 mov sub mov pop add movl adc leave xor dec push or inc adc (bad) add scas mov ds mov inc cmpsb pop mov mov fmuls inc jp in sbb das xor fldenv push mov int3 cmpsb ret pusha pusha scas cmp and pop push push popa mov fstpl das arpl hlt lcall mov cli mov dec push es shl cmpl int xor cli mov add aad fld addr16 outsl cmp push add push sub out es sbb mov js mov fldl push dec cmp dec inc aad push jle fidiv lret inc inc movsl or mov sbb jmp adc mov outsl into ja inc fdiv or andb imul ret sbb das pop movsl pop ret mov jmp mov push lret and add mov cmp adc je dec jae mov sub lods push pop movsl xchg cmpb jle lret push scas push mov icebp or adc push stc xor cs test jmp mov push shlb cmpsb push push fs je mov mov jo mov adc dec inc jo pop mov jl in lds push outsb xchg outsb daa arpl (bad) stc ja dec mov dec add cmp lods mov cmp fwait and jle addr16 jno jecxz or lret test into insb and or sub cmpsb push mov lret or clc add mov or lcall aad inc bound inc ret mov xor fld jecxz or add (bad) js je push and xchg mov sub jbe or pop mov cli je add push lcall adc sahf stc cmp pushf mov sbb sarb data16 arpl jge sti add jg stos add loopne dec movsl lret mov lcall or (bad) mov lea fistpl test movsb xor loop mov adc xlat jbe addl jp dec inc inc mov loope mov jp xor mov rclb inc addr16 inc cmpsl sub push (bad) out rorb scas mov or ret pop mov ljmp xor xchg pop sbb loop bound into mov dec neg sbb mov inc mov shlb mov insb enter cmpsl adcl cld in test sbb jle sub das repz notb or push inc mov ficomp test push dec into loopne adc fmul rolb pop scas mov jb lods ljmp push arpl imul fnsave lret adc pop movsl xchg inc and nop out in je ret jb push or xchg push cmp ror sbb adc or pushf aad inc sub insl sti in ret les loopne (bad) jbe scas cmpsb push mov sahf icebp xlat cmp pop or and xor sub pop std mov pushf push repnz sahf outsb arpl stos fistpl push dec fbld push mov data16 jge insl out test cmpsb mov or mov movsb jmp fwait push adc inc or push jmp and inc cmp int outsl clc sub fcoml (bad) xchg sbb add pop test xor out add xchg mov sarl mov jg std pusha inc mov mov xor mov add pop jmp lock xchg sbb add dec pusha adc mov imul sbb inc mov sbb jle (bad) ds cmp mov addr16 or in push mov frstor cld movsl add sahf jnp fcomp int ljmp pop test (bad) mov xchg xchg push inc fst das out (bad) mov lcall repnz ss dec sbb ja lods lock xchg fldl sub or mov pop icebp cwtl lcall idiv jno lock jge add arpl and push push mov pop dec (bad) pop xor movsb sbb push and pop pop sbb outsl jmp (bad) notl popa ljmp xchg sbb out (bad) aas test sbb jp iret xlat rclb out mov (bad) lea inc rol dec pop inc inc push and pop insl mov and inc jnp pop neg add cwtl dec mov adcl add lea mov clc (bad) jp jae sti jae inc xchg pop sahf jg sub int3 and adcb ss scas shrb jns push jecxz ds (bad) dec rol nop clc arpl lcall mov int push arpl insb push in outsl mov lret outsl jecxz mov aad and push (bad) insb or shll out or shll mov loope inc and (bad) mov dec pop adcl mov xchg out mov xor adcl jns mov loop mov in mov sbb icebp cmp mov and outsb xlat push lds je jle sbb jbe mov scas dec push push adcb loope push sub bound in iret ljmp in xor add (bad) (bad) leave call (bad) pushf jbe inc clc in insb pusha addr16 pop pop pop jg rorl xor mov push ret je add mov cs iret or jnp rcrl xor stos dec mov lret je jecxz cmp notb and pop cmp mov stc shl (bad) and jmp testl loopne xchg loope repz insb pop mov daa push je xchg fist nop je arpl mov out jg xor mov sbb outsl push push (bad) sbb xor mov adc adc inc xlat add (bad) mov sub mov push xor mov hlt out std inc dec push shrl out mov xchg push test call add adc movsb jle daa fcomip push add aam (bad) repnz cmp lods rcl fldt dec mov xchg mov dec cmp mov inc jnp pop xor cld ret fimul adc xor pop jnp pop mov out mov in inc jmp icebp mov es popa sti pop add flds dec fwait mov add mov jp dec in dec cmp and push in and push mov out dec icebp dec ss or arpl mov test jecxz lock into (bad) ss hlt cld xlat xchg cmpsl pop ja sbb leave xor jmp mov pusha pop loope cmpsb mov je add cmp and pop rcll (bad) scas xor rcrl mov jo (bad) div lods jbe pop arpl add push add lea jecxz mov fisubr dec lcall and nop int3 pop inc or aam (bad) and sub mov dec sub cs in mov adc mov lret cltd and lea loop mov outsb ffree cmp lret mov jno lods xor scas fs jecxz fdivl jno xchg mov (bad) int3 mov jb (bad) adc stos and or mov fildll mov xchg in out icebp xchg dec adc je xchg xchg stc cmpsl mov int3 rcrl jmp cmp mov or or pushw (bad) addr16 icebp mov mov scas int3 cmpsb push cmp xchg inc lahf or or jp sub dec in jmp ljmp dec out pop enter add lods xor pushf rcr adc stos xlat cmp mov sahf in lds mov pop pcmpeqw fdivr imul lret cld mov mov daa scas and push mov stos outsl jge sti test test push ja sbb fbstp (bad) mov pop ret inc aad enter inc divb push sbb dec ret xor ja xor push mov roll jge scas inc cmp pop aaa pop scas or movsl out mov push or loop push cltd lock cmc and movsb jnp rcll outsb mov sub mov sub imul add in test adc mov jg mov (bad) repz push cmpsb xchg data16 mov mov adc push dec imul jmp mov pusha push call and cwtl (bad) decl jnp test je sub mov dec cwtl mov nop mov mull call mov lock cld push xchg fcoms dec stos adc mov adc sbb ret test fdivrl roll rcrb repnz jns push ret xchg inc jg aas ds daa add xchg mov jb push inc test lret cmp inc and icebp mov (bad) or fs cmp mov insb sahf scas (bad) jmp stos fdivrs dec lcall and jg sub popf inc xchg sahf test add jnp loope (bad) push popa push and xor mov and lcall imulb push ret iret stos lock (bad) pop dec (bad) (bad) xor cmp (bad) inc js fcomp movsl lods mov iret xchg loope push mov inc xchg xor pop daa int3 test js lds lds cmp pop (bad) mov negl jle inc fwait ljmp jg popa ret adc loope test cmpsb push inc jne,pn (bad) repnz pop int dec fwait pop mov daa jmp or and or fs mov mov mov add jne pushf mov xor in sbb cli inc ds inc xor mov cmc stos (bad) add jnp add mov fdiv xchg das adc dec out cmp or cli push mov dec or out roll stos adc fdiv and jb sub fiadd sub (bad) sbb adcl jmp or and push mov jno outsb (bad) fistpll mov mov pop aaa es jmp sub or push sbb inc xchg add push dec nop and sbb mov inc sub sub pop mov mov and lret andl mov or or jno outsb fcompl mov add test stos cld cmp in hlt inc dec push aad cmp cmp adc clc (bad) aaa mov enter jne mov stc shr bound mov mov cs xchg aas vminpd adc pop sahf push fstpl mov test mov xor lds clc adc xchg or test sbbl daa jge stos jl sub xchg ret cmpsl cwtl dec movsl sub add mov iret pop cmc ffreep mov sbb mov mov and in ss sub js xchg jnp sub dec mov call lcall mov int3 das loopne push or adc xchg xchg test nop testb cmp sbb loop fldl adc insb in out test pop ficomp push push jo outsb or mov xlat neg fdivrl adc pop add jecxz cmp or lea es cmp cmp fwait mov outsl sbb sub lcall xor mov fs std loopne addl bswap repz stos fwait and insl lods or inc lret movaps sti dec xor fstl jl (bad) ja cmp inc aad cmp inc pop cmp pop int out xor xor movsb inc inc sarb pop mov popf lahf cli xor and push in je xchg outsl push shlb mov cmp xor pop jnp jmp int3 dec fstl dec mov sub jne lods sub inc inc loope and sbb (bad) fwait pushf scas xrelease sbb or or cmp fwait xchg dec iret push xor std enter cmp xchg push (bad) in mov pop adc (bad) nop jp jno mov jo adc imul dec pop jo xor inc mov and jne or mov je dec stc call popf inc mov aad mov fist lods faddp insb loopne fmull es mov dec (bad) mov pushf pop outsb popf push jae add push push mov test pop inc dec jbe ret add dec in cld ds popf loope fstpt cmp fidivl push and outsb imul pusha xor push call and jge push xchg push jno jb push cmp jp jns adcl xor ss imul unpckhps jle out arpl fsubs jecxz mov jno notl dec (bad) divl xchg in add push pushf fstp (bad) push adc (bad) test jo aas gs ds in mov addb nop mov nop popf sbb (bad) mov mov mov out leave mov mov into mov movsb pushf adc sahf scas loopne,pt adc adc add or mov inc mov std lret (bad) out xchg xchg jae lahf mov adc mov iret call inc shll test addr16 loope pop cmpsb movsl pop jmp ds fistp jb repz ret add add inc sub shll sbb out xor hlt outsb push pop mov pop push pushf and leave or shl push jecxz cld ds jge jae aaa sub mov xor ficoml xchg cld pop orb mov scas cmc scas mov insl push lods jns imul ja lret rcrl movsl inc insb scas (bad) fidivrl add out xor sbb push mov push mov and mov repz or xor sub jecxz notb fdivl mov mov dec in pushf into in jns in fsubrp jo sarl add xchg (bad) jnp and movsl push mov in inc aaa std loopne dec bound push loopne xchg pushf in add ja stc lock xchg cmp and fisttpl cmp mov fnstsw lcall cmp outsb enter mov push jnp inc mov sti jle inc jns not (bad) pushl mov and loopne fdiv jmp mov (bad) je sub cmp sub xor mov enter or dec xchg sbb mov pusha lock (bad) out jl mov jl xor lea add andb repnz int fisttpll push jmp push add push adc adc int3 dec call or lea xchg push dec gs jmp or je js in sbb scas lods subl cmpsb dec shrl mov cld sbb mov lods add xor bound push push sub sub mov scas (bad) pop jb pop ret mov cmc mov push adc ss outsb and mov jp pop mov push scas cmp mov test int3 push mov jns clc jne les insl ljmp add lahf push push (bad) pop insl dec insb mov and jl sahf ffreep push mov lcall sub sbb das pop cmp call xchg shr int3 or hlt xchg insl mov push jle clc inc push add cmp jmp jne and and testb test (bad) sub cmp sbb cwtl jne addr16 cmpsl push push adc addr16 pop inc pop iret stc sub insb xchg icebp pop sbb lds sbb fwait out push sbb xchg popf push push sbb pop cwtl je (bad) xor mov sbb test or ja arpl cwtl add daa mov rcll aam ljmp cmp push gs jmp inc cmc xchg and daa out repz mov cld add (bad) push ret xchg negl push mov icebp pop test xor lret xchg fcoms cmp flds pop sub add push rorl or xor mov mov imul cmp in sbb mov dec mov push fs adc sbb roll mov cmp push mov xor and out js (bad) icebp movsb (bad) jns les pop push nop test sub cs in lcall push sbb mov test adc icebp repz jl sbb jnp repz push cmp push pop or inc out xor xor js iret mov cld mov pushf insl push dec nop rclb pop test sub push xchg sub adc lahf (bad) xor adc mov stos lods mov in dec add fisubrl jge xor test push dec ret adc sbbl mov jmp pop fist dec sub add mov sbb dec fstl idivb js mov xchg inc lods adc incl push mov movsl mov pop in sub jge ret jmp mov inc dec lock in test mov xor push call mov jo ljmp xchg pushf js dec bound xorb mov xchg pop inc cmc test mov fcmovnb add mov popa lahf testb lea sbb jmp in pop mulb push icebp test adc sub fcoml pop (bad) mov xchg xchg stc sbb lea push mov mov or xor cmc test pop sbb xchg mov cmpsl jne and mov add jp and pop sbb xor pop lods cwtl jecxz push pushf enter xor inc sbb add addr16 adc inc repz jae xchg mov and jae clc fildll in aam mov test popf sub popa insb pushf push inc insl add or into (bad) lea jl mov sbb loope test jne (bad) mov lret (bad) adc les jno cmp sbb stc test adc lret mov sub push mov xlat lcall outsl sbb aam test mov out xchg and push loop lds fnstsw cmp dec stos (bad) dec jp adc xor (bad) jbe push pusha daa jmp lret mov and popf inc push rcrb out cmpsl fucom inc push stc xor sub and or push mov pop aam decb or adcb rcr loope jnp mov fnstenv cmp ds pop out clc imul push data16 pop pop push xorb dec fs fistpll fidiv mov push xchg xchg xchg rcrb dec js movsl aaa pusha stos pop out inc or pop ljmp into add mov and cmp sbb cmc ss ret cmp clc jl sti scas mov mov mov add nop lods inc call xchg mov movsl (bad) push push or rclb call sbb loopne cmpsb ss push call or or rolb in push or cltd xor in lret and jno pushf dec push in inc (bad) stos lahf addr16 jae or arpl xlat lret pop push and in push mov adc jle stc sbb mov inc idivb cmpl pop or sub arpl pop notb fstpl xchg jae test sbb daa push loop scas movsb aas or fdivrs xchg movsb fsts jnp push pop mov adc add ficompl xor mov mov lret scas adc (bad) in ja ret movsl in xlat mov adc inc push mov mov cmpsl cltd ja aas loopne sub ret arpl adc jmp jle std xchg inc lds pop and ret movsb sbb jecxz dec (bad) cmpb lret cmp gs push jg inc int3 adc ljmp inc xlat and pop iret in mov jmp int push cmp sti aas (bad) ljmp pop or lods (bad) fcoms jns mov test mov cmp xchg mov sub push out aad rorb (bad) push adc cs push movsb cs pop sti fsubl or xchg jge mov inc aad xchg jmp adc fcompl sbb (bad) sub ljmp sahf or addr16 sti aam pop loopne cld insb sti fisub push push aam bound shrl fwait mov out cmp ret in push push inc fwait (bad) xor andl ljmp leave adc xchg cmpsl lahf sub mov ret (bad) mov or mov jmp (bad) cld (bad) adc jg pop iret int3 cwtl loopne cmp jbe out inc aam xchg or aad jnp push and rorl xchg cs mov pushf and ja cld (bad) jne push dec mov rcrb cmp fcomip pop push push aaa xchg out inc dec repnz scas or sub lahf mov popf test push imulb jl lahf cmpsl push xchg jl js sbb lea cmp adc cmp ds jg mov das mov sub sub push mov cmp (bad) fisubr jp mull test int3 aam daa jb das and int3 push push rcrl pop sub das push insl cmp pushf cltd jno jg cmp gs or xlat mov fnsave adc push fs inc inc jecxz hlt push aam sbb dec xchg faddl sub xchg call sub scas (bad) pop fstl mov decl shlb fnstenv inc xchg sub inc jns xchg sbb addr16 sub daa pop jmp or fstpt adc adc inc ljmp decl ss jno lret lods test test cmc and mov dec dec dec bound scas or loopne ss mov and jmp in pop jmp sarb mov es ds rclb xchg jmp cli sub cmp add fisubl gs inc inc js add hlt cwtl cmp mov jb mov int3 mov jb es div cmc xor mov push sub jo cmc shlb cmpl xor imul (bad) inc dec popa mov mov out (bad) outsl pop pop adc icebp add and mov sbb xor dec mov pop dec loop out aas int sarb mov (bad) jb and jmp pop add cltd mov gs xchg cltd and mov push loope sbb pop popf sub xchg sbb outsb ss push push pushl push jl inc in inc sub nop inc lcall insb insl (bad) fmul mov and fdiv out fidivrl pop or push cwtl popa mov inc xor cmova sbb outsl pop cwtl incb (bad) (bad) sub in push fprem1 mov cmp dec jle in dec outsl mov pop loopne outsl xchg arpl (bad) lahf out add jbe adc (bad) jle xor inc dec mov and lahf rcrl insl sub (bad) icebp pusha (bad) mov (bad) mov imul or ljmp dec fnstcw jnp ss sbb ret xchg add popa dec mov jmp cmp push pop movsb aam out loopne sahf sbb mov dec outsb bound mov ljmp loope,pn inc cmpsb or fsubrs inc out ljmp clc cmp scas (bad) aas mov addb scas and rorb fisubr outsl rorl gs lods xchg test mov test mov dec push jge mov imul clc nop (bad) jle sbb inc lods cmp (bad) scas mov das sub add sub xor jae jecxz pop mov rcr pop pop jns daa aam pop mov push rclb xlat push daa std daa into jbe xchg mov push and int (bad) test addr16 mov lcall xor mov cpuid and divl fs sbb hlt mov adc movsb test mov movsl pop stos xor or xchg shl stc lcall js xchg adc xchg adc xor cmpsb jbe sub adc or bound (bad) mov cmp data16 js mov leave jl inc lret (bad) cmp mov decl divb jmp push stos test mov and dec xor jle fwait xor mov mov push dec inc popf jo mov mov adc (bad) ljmp and aas es fwait mov or sbb jnp mov add push (bad) xor aam sete out lcall (bad) sbb mov lret sarl jecxz test xchg cmp call jecxz lahf push (bad) xchg vpcmpeqb loop ja xor cmp xchg pop (bad) icebp clc cmp push daa ror loop adc cs push orl orb sub scas pop sbb dec xor repz jl mov dec test xor stc mov jae popa xchg aaa jp sub or push pop mov cmpsl xor js mov fwait xor mov adc or mov push popa cmp lret push add add jae and sbb sub rcl ss xor inc out addr16 stos pushf xor les mov rclb insl jno cmp xor es cld xor push mov pop and clc jnp fdivrs jge push incl sti sahf jg push jns jnp rcll push into cltd in out cmp fcmove stc mov pop aad fcompl arpl shrl (bad) cltd inc inc inc lods outsb mov jg cmp jns and insb dec mov xchg cs aaa outsl adc mov fstpt pop rcll xchg mov push sbb std loop add add xchg cmpsl fisub dec imul test out or iret jle add and js and sub (bad) out out add scas repnz sbb dec pushf sbb jmp sahf adc test xor xchg or mov into push cli xor in mov mov cmpsb cmp int3 and les aas or jne stc mov imul lahf sub fs mov jg lods fdivrs in (bad) xor xchg ret in push icebp clc sub scas stc or push aad inc dec mov push into arpl imul mov and mov add push enter test lahf fcompl fdivl sub in cltd iret int3 sarl lret inc arpl xchg arpl xchg xchg dec xlat insb insb test jne es test (bad) popf (bad) cmp cld push xchg imul mov imul mov rcrl jmp mov addl icebp pop jo jns fs pop das sar xchg fs jnp enter or push cmp mov divb and enter cli insl sub sarb hlt sbb xor dec leave fdivl sbb shll movsb sbb out nop mov lret or mov test mov pop pop dec out rorl sbb icebp cli (bad) sbbl pop sub bound xchg xor pop mov sbb xor mov cli adc sbb jle adc ljmp push call push or push arpl or loopne cmp xor add xor dec lret mov imul nop mov xor movsb mov stos (bad) and test push lea dec xorl rep dec shrb inc clc push jecxz jmp jno add cmovl or push mov bound adc out and sbb scas out mov icebp std fcmovnb inc insl jg mov push adc (bad) mov das ret xor add pusha push and cld cmp sub in aad pop push jl jmp inc jno or mov gs xor jp push xchg cltd imul lods pop test sbb push stc insl sub imul enter inc mov in sub (bad) (bad) cli dec xor adc push mov pushf inc test ficomp jmp push movsl or aad fbstp aas adc aaa xor addr16 (bad) lock jecxz popf outsl mov mov js fistp pop insl test dec push js mulb fsub dec pop cmp cmp xchg (bad) xchg in add push pusha sbb in scas or das mov mov movsl cmp push xchg push mov divl lds fdivs push sbb dec lret pop xlat cld lahf sahf gs aas jno icebp test cmp leave mov cs scas mov jmp lock out mov adc daa out addr16 rorl and jno mov dec mov dec mov adc fmull test xchg test dec mov iret es and clc sbb adcl mov cmp xor sub test mov pusha test leave sbb movsb xchg dec js dec out stc in lods sbb test adcl jp inc mov scas add fidiv movsl and mov outsl xchg stc cli cmp fisttpl cmp insb xchg sbb dec mov mov hlt insl jbe adc movl jp stos inc xor xchg in inc push (bad) sbb mov fwait inc inc iret jg xorl mov out mov cmpsl repz stos sub jae lock add mov insl aas adc cmp xor fmuls out cmp enter dec or (bad) repnz (bad) frstor add call daa and xor sbb out and fs and jg xchg movsl das loope ss sub popf lods mov cmp jp fdivl dec sub test inc mov lret lcall pop jl dec cwtl xchg and sti xchg add lahf rolb adc jecxz call mov pop out xlat cmpsl jmp mov lds mov int3 sub inc cmp xchg je stc outsl cli arpl ja outsl les mov pusha push jbe mov cmpsl jg aaa test add out loop or mov imul cmp dec inc jo xor loope adc dec inc fwait mov mov fidivrl mov arpl jecxz in lock jnp push xchg clc mov inc sub sbb mov cmpb lret loope cmp pop (bad) divl push mov iret pop add repz js push cmp jne push cld out or fisttp mov pop push sbb and mov push cltd das arpl inc cmpl mov inc pop or cwtl outsb pop inc xor arpl jnp jp data16 int3 and add add or pop cmp add mov cmovb mov pop xchg in inc adc arpl adc pop cmp orb insl adc popa lods or cmp lret call mov pop scas aas sub aam sbb rol shlb test movsl xchg (bad) out jmp and insb arpl bound and rcrb push ja flds ss leave sbbb jl cmp and out mov (bad) (bad) dec xchg aam cltd and (bad) mov aam cmp xchg (bad) cmpsb mov icebp mov (bad) imul mov sbb adc movsb ljmp push inc jns and push or cltd xchg push jle fldl xchg pop (bad) xor imul jmp dec push (bad) mov sub nop nop fisub gs add mov mov aam mov adc adc hlt out test sbb fcmovnb fisubr stos inc jns dec sbb in imull lods mov push js sub rorb jne xor jno lret sahf mov cli clc jbe jle sarl mov pop cltd (bad) test xor mov pop out cmpsb ss push sub in ret mov in mov jbe jb,pt fwait jmp (bad) movsl lcall jne xor cli xor adc xchg mov movsl mov int3 das fildll push push push pop xor lea fcmovnbe pop out scas adcl insb lahf jb addr16 into pop addl xchg push movsb xor mov sub (bad) pop inc cwtl push sbbl ret insb int or add xor sbb cli sub or ljmp or test and sub dec enter pop clc iret mov push sti (bad) cmp mov pop decl xor or (bad) add mov inc pop or xchg adc scas ficompl mov mov or test inc sbb popa dec ljmp pop xorb loop xchg aad outsb mov (bad) mov inc fst dec xor sub inc and sbb jle jl int scas les push or insb jge jecxz push pop lods mov outsl xor jb pop push mov not ffree (bad) loop sbb push inc addl jns adc andb (bad) lret jg pop ja mov lcall mov stos mov push xor mov xor mov inc jg repnz not rcr pop sarl mov cld ja adc xlat sub imul pushf imul fcmovbe addr16 xor push lret cmpb mov add (bad) dec insl daa xchg bound sysret es inc or pop fwait pop jbe int3 data16 dec mov mov rorb and (bad) xchg (bad) fidivrl fstps and sahf push push pop and and addl jecxz fildll adc mov fcomps in ja mov xchg inc fsubrs (bad) repz fsubrp arpl loopne mov mov mov daa stos ret movsb inc jae xchg iret cwtl mov in cs loop,pn xor lock mov stos and mov dec repz popf popf roll imul (bad) adc add addr16 cmp nop in das inc mov fcmovb (bad) dec pop inc mov mov (bad) out dec jb push enter sbb push popa push ja stos mov rolb push adc mov pop adc mov mov outsl sti pop adc or out pop xchg loope mov (bad) or lret or popa enter mov ret inc push fistl ja ljmp in mov add loop test out or and (bad) mov inc ret fidivl movsb insb iret stc (bad) push iret out clc cmp pop aad sub lahf mov sub and jns,pt xchg hlt adc mov mov push loopne fldl jmp cltd or fidiv insb mov mov mov add in lods lods add iret dec or out pop adc aas lahf dec repz push fdivl in insb add stc nopl sub mov inc mov mov jb xor (bad) push imul test sub bound repnz cmpsb or and imul sub pop inc (bad) push bound insl adc sarl push pop add lods test mov sub mov (bad) pusha mov stos xchg mov arpl shrl or adc inc xchg cmpsb aam lcall jnp das push clc push sbb adc stos idivb in int3 xor repz rclb add add sti fbstp adc outsb jae daa (bad) push aad push xlat mov fcoms dec inc and sahf aad lods inc arpl xchg mov jmp push repz push mov mov lret dec clc das jle sub xor (bad) fbstp mov not loopne xchg rcll xlat mov jle xchg dec xchg xchg add jmp ror dec movsb dec cmp lea add rcrl xor xor add jo test divl and mov lcall jp add cmpsl push bound notl lahf cmp pop mov or mov es (bad) pop mov (bad) inc dec orb imul pop pop fisttpll iret adc cmpsb dec mov pop pop mov mov adc ss in xorl fdivrl std repnz in pusha pushf or int fstl stc in pop jle sbb inc pop sti add rorl dec mov std loop nop jb fwait add popf bound jmp mov hlt out das (bad) mov push mov out cs add cmp rclb inc or inc jmp je sbb mov cmp xor icebp mov inc shrb jmp jecxz int push lea mov sub icebp (bad) jbe gs outsb mov jo and jno popf or imul adc loop iret add mov loop movsl out or in stc and mov xchg pop fwait loope inc dec aas (bad) fwait pop mov xchg and xor push scas or dec mov loop repz hlt mov outsl and pop lahf icebp mov imul leave loopne int3 and fucompp (bad) mov pop fldl cmp lods popf cmc push out mov aad push add (bad) xor push jmp sub imul shrl jmp cmc and push mov jle cwtl mov (bad) jmp xchg test mov sbb xor cmp mov jecxz sub popf aam int3 nop mov imul aad lock mov (bad) out (bad) out sbb dec push lods add outsb sti addl inc mov dec ret and scas sub adc pop jg push adc jge inc push jb mov pop add push (bad) iret (bad) fisubrl add call clc js inc jl sub es int3 and add sub xlat xchg aad mov add daa cltd mov fcmovb xchg jle and or push dec mov imul in jne mov in sub inc push ljmp xchg enter add jae int3 or sub cmp jmp cmp sub enter pop inc xchg jne ja or sbb mov jmp hlt xchg xchg jecxz pop bound cmc imulb dec je jo jp mov call cmp dec mov fcomi insb scas cmc push andb sbb (bad) lret jl fcoml test cmp mov mov (bad) (bad) xor test addr16 mov sbb sbb sub sbb into push dec lahf xchg mov rcll outsl mov std push loope sub popf jp xchg (bad) push mov cmp into sbb inc ret js into ret stc shl pop jg or pop ja push cmp inc nop es dec jns roll pop jecxz add dec (bad) adc add sbbb dec sub dec or or in sub repz aam sbb loope and dec and loopne nop sbb push jno (bad) push movsl push lock push push push mov (bad) xchg xchg in jp inc test inc (bad) repnz sarl sahf jo iret sbb or add jle adc inc test dec fisub push sbb inc xor mov out mov test js mov xchg add cmpsb and aaa xor jle jl lds sbb jle bound xchg pushf cmp pop mov jnp mov add mov cmp xchg mov (bad) push cmpsl mov cmp inc dec addl push xchg mov loope cmp test push pop jp jecxz adc adc pop loop lahf scas loop jbe in fs and jge testl mov out clc pop hlt imul out push mov pop enter sbb pop and pop cmp addr16 bound stos rcr push mov shr aas in xor out add push scas inc dec dec sbb mov mov test jnp arpl test xchg (bad) out pop jnp outsl movsb mov jae leave cmp (bad) daa adc rcrb xchg jecxz dec sbb push jnp jnp gs fdivrl or addb xor fimull cld mov push pop push loopw sahf pop add adc jle push pop push nop cwtl push rclb aam (bad) orl int3 iret or mov mov xor pop inc popf cmpsl xchg push lds pop xchg mov add (bad) pushf jne jge fbld dec sbb test and in out scas push pop cmp push stc mov ficoml push push mov call jbe jnp add mov and mov pop cmp inc push xchg out xlat mov xor push sbb inc mov sub orl pop popa push pop (bad) int mov and pushl and mov cmc jae xor fildll adc outsb sub push rorl imulb lret xor aam arpl jg sub jge scas push out outsb pop pop or cmc movsl jnp shrb jge scas or mov lahf adcl dec mov cli lret xchg andb call (bad) cmc orb nop pop mov mov xlat cli out insb xchg or aam push adc sub xchg mov aam pusha inc out movsb pop test cmp pushf fisttpl pop xor pop xchg (bad) lea out add sti xchg mov adc xchg mov sbb js rcrl cli andb pop cmp jp aad lret cmp fcoms pushf xchg inc stos hlt (bad) clc pop adc sbb test (bad) push outsb sub fisub leave clc fwait xchg sbb ljmp and scas mov outsl jmp or mov pushf hlt mov adc mov out clc in fld push daa mov daa mov or jns xchg (bad) pop dec inc outsb adc xchg fsubl dec mov scas or je daa out shlb inc ss jo dec (bad) pop add cwtl lods out add mov mov push cmpsb xor nop sub dec xor mov loopne repnz and clc cmp push cmp (bad) mov fidivl jl movsb cwtl ret lds loop pop (bad) cli mov (bad) or ja adc xchg test jecxz cld sbb call inc push push std cmpsb dec mov jg xchg call arpl test pop es push sbb (bad) or daa mov push mov xchg dec inc lahf pop lods mov mov int repz jns outsb jmp pop std sbb (bad) adc pop aas aaa je stos aas lret xchg pop fcoms and je jns push sbb pop ret adc jb imul jo imul mov adc adc call int and popa insl jae cmpl or popf add fdivrl jmp jle je shll pusha cmp sbb xchg lods (bad) jne imul push mov inc pop and (bad) lahf cmpsb vrcpps stos call or lahf adc rorb pop lcall daa add outsl mov daa out xor adc stc fnsave push sbb sub dec cmpsb test out dec stos les mov mov adc xor sub xchg mov or jnp,pn cmpsl outsb call scas xchg in mov pushf daa in mov out jg add jmp mov cmpl push or scas leave ret mov mov std loopne aad fwait cmc add (bad) in and mov mov dec xchg test sti out push incb push mov add pop push int fstl mov out or push push inc std mov inc cmp lcall inc jo mov jne ficomp insl add cmp outsl je outsb int push in inc test lods insl (bad) mov sub mov or sub fcmovbe push arpl adc push push mov imul pop mov lret popf aaa xor loop pop hlt xchg sti loopne pop fcmovnb adc mov lods or fwait mov inc push xor mov fistpl fiadd push inc cmp sbb dec mov mov sbb (bad) cmpsl dec enter shlb inc outsl inc das fldenv xor ja push aaa sbb inc jae and add andl mov xor out or mov cmp adc xor in pushf add inc imull insb jbe adc add fisubrl imul rep mov pop or in push mov and jno inc out jns out and imul cmpsb sbb out mov or cwtl stos mov mov adc fadd movsb mov jo pop addr16 xor and imul cld push (bad) add mov jg inc ret gs aam push pop and push push and mov xchg xor cmp lcall dec push and mov sbb divb movsl adc popa int3 or dec adc das stc movsb arpl in push ja pop loopne (bad) aaa mov pop cmc jmp cld mov lds sub mov cmp test loop jo sbb gs push dec dec adc push and lea outsb int stos inc mov mov mov aaa cmpsl xchg adc (bad) cltd test jp mov jmp je daa push loopne xor push xchg push jmp inc adc lret jmp push add pushf sbb mov shr cmc lahf mov xchg sti cmc xor inc jno lahf dec das in lret lea dec lcall xor sub cmp pop mov in cmp push adc xchg inc fstpl fs mov xor lds sub (bad) or insl test jge mov frstor dec fmul fimull push in loopne push cmpsb jb sbb repz sbb jo enter sub push and pop or fdiv jp lret je out imulb jg shr push xlat stos inc nop pop xchg fisubrl ret dec loopne rclb cmpsl and dec sbb dec and loop adc dec aaa push add fwait jb cld (bad) fiadd clc or jns gs (bad) ret or pop (bad) fist cmc popa lods push xlat cs js scas sti pop rolb and mov mov lds loope jb sub jae push jae outsl fdiv push push mov push neg ficomp xlat xchg dec repnz sti (bad) push sbb adc adc das jno jne pushf push imul icebp cmpsl js add stc shll mov sub in out in adc mov test jae sbb jmp loopne sub push ret dec ja inc push push repz ljmp (bad) scas xor scas sahf mov fildll out adc xor not (bad) aam (bad) mov sub aam aaa sub into inc (bad) lret xchg add inc xor mov jb push xor pop pop adc mov jmp dec xchg pop orb loopne cmp fstpl push sbb out in mov (bad) jb subb add mov jp push fisttpl (bad) ja mov add mov lret adc push les (bad) lea fwait popa push and scas je pop iret sub pusha je push es rcll mov sahf or sbb jbe pop mov push (bad) out add cs and jge sub (bad) cmp int out mov mov std sti mov jg int mov pop js adc jecxz jns dec pop rcrl mov clc out jl dec ret jae int3 add rolb push outsb mov jg sub jmp xchg inc cmp je aad into leave test test lret pop or mov fmuls or movsb dec mov sub or xchg andl fcmovne xchg push stos mov idivl scas jecxz fiadd adc pusha add dec subl jo pop jno cltd xlat icebp mov cmp jbe call lea (bad) xor mov jmp mov dec mov fdivrl dec cmp push mov rorb cmp test stc and ror xor (bad) shrl sub jmp inc nop outsb out aaa fistpll popa test adc es cltd push dec mov jb inc adc add or aam dec fstpt int3 aaa imul out sbb push jns jo aaa xlat test insb jno jecxz clc (bad) (bad) inc call add inc xor sub mov icebp pop int3 mov ja dec xor xlat push add shll push lret pop xorl js aam adc adc rorl (bad) jge fcompl test out jp sarb jb jb outsl inc test stos cld int3 sbbl and sub es outsb and xlat xor dec adc cmpsl hlt int (bad) mov loop push sbb mov mov push fs cld push (bad) cltd adc (bad) bound or jmp rcr pop dec fidivr dec popl xchg jns sbb pop push out jg xlat insb pop xor or out ret in mov enter mov or or hlt and pop call outsb mov jg xchg (bad) fcoms adc scas adc add cltd mov and stos inc cmc icebp aas rcr xorl repz jno xchg pop sub lahf mov test fldenv test mov cmp in (bad) sti test xchg out dec (bad) leave aaa mov cmp add scas pop mov and btr cmpsb (bad) xor mov xchg or andb mov mov dec mov outsl jecxz imull stos divb fldcw mov dec movsb xchg mov test arpl jns or les fcmovb inc loopne in js inc xchg int3 mov es mov mov das push ja loopne jnp adc inc add jmp ja stos andl inc inc mov mov leave add outsb out nop mov in or (bad) scas pop mov sub in inc nop fidiv xlat xor push (bad) jp rorl andl mov imul or addr16 in js push sbb fsts or pop js pop shl and rorl int3 xchg cli dec lods pop cmp cmp cmp sub bound inc andl cmp push xor cmp mov adc push jp stos add lods out stc xorb enter inc stos add test pop mov stos cmp mov dec inc fisttpl push add fidivrl js aas pop lret xor cld or jl fwait sbb aam sub pushf mov movsl mov ljmp pop ss orb stc sarl fwait and cmp jbe add movsl dec hlt mov lods jg inc repz push cmp cmp jb lahf mov repnz mov repnz call add sahf sub inc cmp adc fistpll je pop imul push jno add ja fsub jl mov add dec pushf imul cld in notl xor mov nop xchg sub xchg movsb rorb dec pop mov sti inc sub xchg test jnp enter inc imul cmpsb sti ror sahf std adc mov (bad) iret cmp cltd xchg sub mov insl xor lea mov int3 out mov (bad) hlt mov mov test fs push jne dec movsl ja mov (bad) xlat outsb or mov adc cmp stos out les leave test xor pop mov cld sbb mov pop sbb mov out dec and or xchg movsl jo mov in mov mov dec les sbb xor sub int aas loopne scas pop mov jmp xor jb (bad) push mov mov popf mov fcomps mov sbb add (bad) xor sub das adc cmp das movsb je mov stos loopne mov out xchg push inc dec jns sub push sbb js (bad) div subl rol sbb cmc pushf cmp cmp or mov scas divl jb jno pop dec daa pop rep mov push mov fistpl mov push (bad) outsl inc outsb or mov inc rolb mov mov imul mov add mov nop popa xor mov std jb,pn pop cld popa jbe aam stos out inc mov (bad) sub mov lea outsb mov ds xchg rcr out and mov push inc adc sbb dec push aam mov call sbb out xchg xor call pop mov fsubl cmp xchg pop jle jp leave ret out mov inc lods (bad) hlt jg lds mov add mov mov mov ljmp (bad) aad je push push je sbb cld (bad) in adc pusha js push cwtl fist jmp mov adc and jo notw or (bad) mov cmp jmp imul push scas mov out mov cmc in mul adc mov add or mov push movsb insl out mov in mov and (bad) cld xchg sub movsl lahf and movsb push xlat xchg out in sbb pop adc fcompl ret mov fistpll dec out mov cmp mov (bad) mov add sub pop shll pop xchg std cmp xor daa scas cmp rol pusha in xlat or cli adc mov push mov xchg or mov ds xchg push dec pop leave ss jae xchg lods cmpsb ljmp shrb rorl jle aam mov lcall idivl mov adc cmp adc iret fsubl notl inc out sbb mov idiv cmp push jg mov cli aad hlt es aad push in repz mov je dec mov mov add xor pop dec cld loop cmp in adc test dec lock inc pusha pop mov movhps mov (bad) sbb cs ljmp loopne xor int or popa and mov jo fcoms test pop dec dec and fiaddl bound and pop lds jg es fwait inc cli or loope xor cmp insb fimul add cmp pop mov dec jge lods xchg inc cmp jmp lods faddl inc stos xor scas xchg add jnp add or ret cmp mov sti jae xchg add jmp jb inc mov mov sets cs mov shl ja (bad) scas in xorl dec lret ds jl stos loop enter shlb loopne push push addr16 xor std dec add outsl fsubp mov or jle jne,pn cwtl leave jne cmpsl push (bad) idivl adc ds xor push enter mov adc push cmp psllw jns and cmp pop adc cmp (bad) fadds jns stc push pop mov inc mov mov inc xchg aam mov lcall mov aaa add mov pop movsb mov jecxz mov lret (bad) fsts mov stc sbb dec mov stos mov cmp mov in sti into or movsl jns jnp sbb add das mov into stos out mov repnz fiaddl xchg in test push cs or jo movl mov adc mov mov outsl iret jnp cwtl add pop jo mov dec cmp fsubs rcrb cmc jnp popa js cwtl jae repnz xchg decb cs xchg sbb insb fcom mov pop dec xchg jnp pop and out ds jl xor popa rolb cmpsb mov or add mov and pop xchg arpl test mov inc xchg (bad) xor out mov jmp lds sbb out cmc inc in add (bad) mov sub inc pop ljmp out mov cmp pop ss cmp pushf ss sarb xchg inc mov test xchg data16 icebp push fldenv pop fsubrs mov jmp addr16 into lahf lods fmuls in xor cmp jns sub jne cmpsb stos bound fs insl in lea loope inc xor (bad) icebp inc aad js lret or cmp cmpsl add in sbb cltd fmull xchg mov sub cs push mov and ret ljmp lcall mov fnstsw lea call fwait push jl orl dec lcall aam push adc mov xorl sub sub jb,pn xchg mov pop xor (bad) fnsave sbb pop lock repnz mov dec adc fs bound sbb lcall cmpsl ss sti mov mov scas and imul jp mov (bad) mov enter scas mov dec out inc jb in int3 add and fisttpl adc jns and adc pop push dec sbb xor or (bad) shrb pop leave ds iret mov sub xchg sub xchg stos (bad) push push inc out cmp mov (bad) ja jo (bad) sbb mov roll cmp idivl lahf pop sbb cmpsb mov dec ja enter loop jnp adc loope inc push or ret sub lea into in out dec loop (bad) xor sbb mov xchg mov (bad) sub out adc sub cmp mov lods cmp mov dec mov sub mov and xor pop in shll daa mov icebp dec pop cmp les jnp dec mov jno xchg in dec jle push and gs xchg cli (bad) mov (bad) push test cwtl (bad) sub cwtl out pop lock sub hlt stos not jecxz mov xor std test sbb jno out es mov add sbb sti hlt jne ljmp xorl xchg loope jbe imul sub ss imul ficom lea ljmp pop adc or push daa stos sbb repz test js push cld jns sarl out xchg push (bad) movsb divb lcall dec sbb (bad) adc loope data16 inc add pop out or aad push cli or movb sbb adc pop fimul out dec outsl add popf out push cmpsl mov mov je sub push mov cmp xchg pop inc xor xchg mov or mov pop leave addr16 rcll imul out add xchg js (bad) (bad) ss dec mov js cmp lods push std rorl and adc popl or cmc push stos bound push test (bad) pop inc orl cmp test xor out pushf jno into pop inc sub imul sarb les nop std sbb insb sub rcll rclb popa fidivrl iret outsb sbb (bad) popf ret out and lods test (bad) in jl xchg das push jle insl mov push mov je add dec pop andl std mov (bad) jmp loopne pop push mov scas repnz das mov cmp rcl mov int (bad) repz enter sbb push push leave (bad) mov adc xchg insl xor ljmp pop mov pop sub mov adc push mov data16 inc sub jns jl xchg test insl mov divb in int jp push push push jl daa sarl fwait addr16 fwait mov pop dec sarl or int xchg dec (bad) pop jns mov je xor jns xor fdivl (bad) nop decl xchg pop or cwtl jmp (bad) cmp inc out mov int xor in sub sbb shll xlat notl inc loopne xchg mov bound push popf pop xor in sub push enter push cs and jbe ss mov insb popa xor cmp dec in imul pop das xchg add scas xchg pop inc (bad) lods rclb (bad) aaa xchg add sbb loope icebp fsubr addb or bswap (bad) rol je arpl mov lret ss sub sub inc bound jecxz (bad) adc call or xchg ret mov sub mov inc sahf inc mov cld (bad) sub cmp aaa aaa push insb mov jmp sbb xchg (bad) xor mov xchg adc repnz lds push insl push icebp aad dec dec mov mov pop sub test mov sarb mov pusha inc pop add fs mov jmp dec mov insl ficoml ljmp xlat nop mov outsl mov (bad) jge sbb inc hlt dec test outsl xchg (bad) (bad) repnz cmp add inc ret out xchg das mov add les hlt push addl push daa xchg add mov fildl adc sub int3 push or cmp or mov out cltd in aam sarb sahf pop aas cmp xchg (bad) pushf lock lds pop xchg adc into es jge pop loop dec cmp outsl jo and sbb dec cmp sbb cwtl scas jno mov loopne push fld cmp (bad) xor jo xchg pop mov (bad) xchg hlt lea push gs jmp xor out fmul ja push or jo xchg mov mov cltd add and in mov in (bad) popf lds andl mov jge jnp xchg int enter jg fdivs std fistpll fs int in fisttp mov (bad) and mov inc cmp movsl mov inc movsl add mov mov out scas add mov popa mull cmpsb add rcrl and or and fnstsw sub jmp add cmpsl fisttpll dec imul ss and sbb and jmp dec sti sti sbb movsb dec push mov dec arpl push and adc xchg call dec push imul iret mov (bad) dec pop dec stos test jecxz fistl push add fwait push mov xchg (bad) std enter push mov jmp mov pop sub lock daa add jl cmpsb imul iret shl sub mov pop sarb popf int scas int subl arpl push cli into jno insl fidivl pop ja cmp lea (bad) aam cmpsb mov and enter sub sub ffree sahf mov (bad) adc test mov ss out insb pop in and lods jb xor ret repnz dec movsl add pop rolb jno xchg push aas scas test xor cmp outsl outsl and jno addr16 into test dec xchg mov je fsubl xchg lret or cwtl (bad) fdivrp (bad) in shrl jge outsl xchg lods sub shll jb xor jnp push das xor imul (bad) mov roll cmp arpl cmp lods add xlat test pop in leave insl jne orb and jge xchg cmp popa sub pop sahf inc and scas jno jge shll aas push xchg sub adc aad loop insl loopne cmp mov (bad) and std arpl (bad) std femms mov dec inc repnz xchg cmpsb push sti test jge mov in cltd push in xor jp push iret jmp adc test cmp add mov mov cmpsb fsub fsubrp lock adc push icebp pop jmp imulb push sarb sub or sti xor xchg dec mov shl mov push int test xor ss repz lret and (bad) sbb loop lret mov (bad) lods test pushf push xchg inc test lods fwait sbb sbb cltd xor sub adc push mov pop cmp lcall cmp or pop sub je pop das fldt jae pop repnz mov mov and ja jno,pn pop scas aaa jno adc mov mov cmc mov adc ss push rcrb push add jnp stc ljmp in jp movsb sbb adc repnz cmpsb test xor cmp inc cmp outsl (bad) mov fmull aad mov outsl out mov add push inc push mov sub fild aad outsb inc push scas mov push lahf xchg dec icebp lret sub lods pop push sti outsw shl push mov out push fiadd mov pop cmp jb stc aas sahf in in or outsl jp xchg xor jle sar mov sbb pop mov mov lret xchg rcr push inc in in out sbb jecxz (bad) adc fs jno lcall insl and xchg js shlb fcomps cli ret (bad) mov dec jle fcomps and mov cli mov push jmp jae lcall sbb pop sub test mov xchg sub adc dec je or insb rcl push lahf fwait popa je ja iret pusha jno adc enter dec mov int3 jecxz cmp dec mov xor pushf in andl sti xchg and lock adc sbb jb cwtl add cmpsb inc inc cltd and test shlb pop stos test scas (bad) imul xchg arpl insb mov pop mov mov pop adc test adc std inc sahf jmp lret dec lods loopne loop sti dec mov dec jg andl loopne or das mov pop pushf popa mov sbb aaa (bad) cmp and pop (bad) mov mov in xchg pop (bad) aam push xchg ss dec (bad) and movsb push js into iret and mov loopne rolb and mov jns sub cmpb call icebp sub mov in sahf daa pop daa data16 jb sub add mov jbe sub out mov push xchg jecxz cs mov gs ja or push movsb in idiv jno (bad) ficom jo mov rorl inc insb rcrl into movsb dec xlat test loop jns jns jns add data16 fcmove enter dec (bad) loopne mov popf jl and jmp in fldenv in mov add pop jmp aad repz int push push pop ret mov cmc mov xchg ja mov ja mov lods and jno and loop sarb jne push dec sub lcall outsb lea test test outsb adc std lea enter decl imulb pop sbb cmpsb nop std cmp ds arpl jecxz into mov jno sbb mov xchg test push idivl addr16 pop sbb cld inc adc fwait cmpsb sub cmp xor push fimull in in sbb cmp dec mov mov inc imul xor ficoml mov and pusha push pop xor lock sbb hlt sahf xor leave xchg xchg dec mov cs imul mov dec popa mov xchg insb sbb outsl popa push inc inc enter xor sahf loopne push test repnz mov xchg gs jge sbb hlt aaa mov push cmp outsb clc sti (bad) mov rorl cmpsb cmp int das pop sahf xchg pop lahf mov lods ja add xor mov clc mov and mov test jnp ljmp xchg xchg jno push mov mov xlat push in add sbb or iret xor add add in inc ud2 mov std lea daa push push or aaa stos lds jle sbb repz fdiv mov dec push sub decl sub mov shrb fmull cmpsb inc dec mov mov repz push jp jp pop jmp inc pop ljmp push push jecxz sbb pushf xchg ror sbb lods subb sub mov pop push das xchg sub mov dec aad cmpb inc cmpsb push push nop pop push jne push jne cmp pushf into sub std pop cmp mov test mov movsb icebp push adc test pop testl insl outsb push lock sub or sub dec ret test fmul push xor mov lds mov sbb iret sarl mov insb imul xchg adcl jle sub mov out pop leave mov xor jge push sbb pushf add ret cwtl jg mov fistpll add aad mov sbb xchg outsl xor mov arpl dec mov xor inc int3 mov and add jb es mov and sub insl cs xchg movsb js sub pop jecxz sub mov ljmp mov int pop cmp or out mov lret mov dec cmpb js insl dec inc cli test aaa sub push cmc push test inc xlat xor loope scas (bad) test lahf xor pop cmpsl cmpsb dec imul add incb dec imul in mov dec push insb loope lods fmul sbb pop sub mov scas mov (bad) pop sub popf cld leave cmp imul je mov push lcall inc js mov pop inc pop in lret xchg out lahf mov out (bad) lods test outsl xor das pop popf push and xor bound in cmpsl pop mov adc daa mov les cmpsb das arpl ret imul test rcr jbe insl xor fsubs jo push pop into xchg mov (bad) sarl (bad) out mov sub test shlb popf test (bad) xchg xchg mov jecxz inc inc mov jno pop clc or sbbl mov adc insl int3 or and sar sub push (bad) movsl and mov ja sahf nop adc inc mov pop in xlat in xchg sub (bad) or mov xor mov cmove cmp jbe lea into or insl xchg stos pop in xor (bad) cmpsb push and jne sarl addr16 or xor je or inc jne cwtl inc dec shll outsl sub mov les outsl mov insb int3 mov cmpsb add imul mov jl (bad) hlt jg test (bad) sub push cli fs je push sbb sub or jmp push cli enter nop cmp (bad) xlat jno out add lods jge jae movsl loopne and jb adcl jmp movsb iret xor rcrb rcr (bad) push xchg or jns out cmpsl xchg test fld xor jae sbb inc pusha push or inc adcl cmpsb push dec aad or mov add lcall popf mov ja add mov loopne arpl sbb iret jo cmpsb leave mov xor dec sub loope fiadd push push lods jmp das pushl and (bad) scas push imul cld jg or pop ficoml push int3 sbb test stos pop jnp fisttp push in xor mov arpl fnstenv or sbb outsl das push cmpsl adc mov mov pop fsubrl sbb icebp stc dec xchg sbb aaa lret push sbb push cwtl mov pushf js cmp stc and cwtl test insl inc adc sub pop xchg push sub test notl and sub arpl outsl ljmp cmp mov fcoms arpl pop dec mov aas jb call test pop int aaa add fdivrl pop arpl (bad) jb lds dec pop (bad) or dec dec xor fisubl negb into xchg es out adc sub lds xlat fadd xchg sbb mov add loopne sub mov daa jb jo sbb (bad) lret aas mov repz adcl lcall fcompl pop lea jnp or nop xor jns cmc mov in cld and dec int3 loope pop push cmp loopne cltd pop loope mov sti (bad) and aas mov daa stos jecxz and add jmp test sub nop add lods and sub daa push sub jg and jp add hlt pop loop push lods shrl cltd xchg int sub jb inc sub add ds in cmp push jne cmp pop mov int3 mov xlat cmp jp dec out mov dec enter into lods lret push hlt pop (bad) out push js (bad) sbb push popf je cmpsb scas mov fisttpl sbb jo push add rorb mov (bad) adc pop adc lret mov xchg into daa scas sub push jb dec and pop loope jb cmp daa cld in xchg add dec out jecxz dec push rolb pop add (bad) ss pop xchg pop das js adc add and in in fdivs pop mov or and jne scas and pop cld lock xchg inc shrb sbb mulb mov insl jge paddq rclb sarl xchg or jno or and icebp mov xor sbb in inc hlt pusha dec push xchg sbb ljmp dec xchg sbb push jne mov mov pop mov repnz iret push lods movsb mov fcmovnb jge and inc loop sub and mov js test sub push and lcall xor pusha (bad) dec sub cmp adc fist pushf mov jo (bad) lods lea jno in sbb imul or cmp rorb out roll xor sbb cmp and icebp adc add cmp mov inc lcall adc lock mov mov cli int3 cwtl pop in sbb out leave insb adc xchg fstpl sub inc adc mov loop lret rcll or dec scas out xchg add inc dec mov sbb push dec test imul pop pop or push pop push test mov lds rorl mov inc jo cmpsl not jle movsb daa test cli iret leave lods ljmp repz mov lcall outsl sbb pop mov push or xchg insb inc (bad) and add sti and (bad) xchg sahf addb and and repnz pop or add out (bad) cmp test lods xchg aaa xchg icebp insl pop push mov cmp cmp loope es lock rclb xlat mov icebp aaa push mov sub pop or insl mov repz (bad) jbe jae cmp inc pop stc push lods xchg mov mov popf add inc imul inc inc inc mov ss xchg jmp lea test sbb movsl inc pop add mov stos inc gs inc add push in out xchg ret movsl in (bad) fbstp sub insl sub in pop ja mov xchg mov mov sbb mov inc xor aaa insl dec leave rorl mov add das cmp sti repnz inc sub pop leave scas xor push jecxz xadd sbb dec mov inc inc daa inc ja mov pop lahf jecxz cmp jmp pop aas cmp and ja jo mov ja cmp adc (bad) out cmp dec pop sbb jle xor (bad) repz incb and mov ret gs movsl (bad) or fsubrs gs xor push push out nop nop jnp mov pop add idiv shr or mov dec add pop pop sub or imul adc aas aas inc ss lea call mov jae std cmp cmp push dec int sbb test clc jns add pop stos adc dec push rcr in pop pop sub mov stc jmp jge jo mov jl lcall pop cmp nop mov notl mov cmp push (bad) lea jge aam fwait and adc xchg lret es push cld stc out jb sub in pop dec imul pop xchg push into push outsb adcb mov subl pop inc ljmp sti leave cmpl mov pushf fdivl push jp cltd pop pop std or jmp cmp ret mov pop push push sbb daa out ja jle sbb cli cmp scas xchg add aaa cmp sub movsl jecxz repnz pop stos data16 jge je out and gs or test ds or lods pop sbb dec adc or sbb pop inc fdivrl (bad) sub lcall and and cmpsb inc adc adc add xor or mov sahf inc rcrl mov rcr rcll (bad) inc imulb pushf cwtl sub xor ds lea xchg xor nop sahf cltd repnz dec push mov dec cmpsb daa mov cmp and mov xchg dec call and pop ror aas rcrl jmp pop sbb out and mov or mov adc jb mov xchg stos jnp insl add inc jle mov add inc sub ss sub sbb imul movsb int3 ja add xor stc dec add int3 sub hlt insl out cwtl adc insb sbb rclb cmp ja loopne cmpsl mov pushf pop repnz push cmp fidivr cltd push leave cmp jns (bad) mov fildl lea xchg xchg cmpsb push mov mov mov insl lahf mov rclb add rcl (bad) fucomi sub das ret dec sub scas mov cmp cmpsb sub xor mov in xchg add dec inc orl push push fnstsw push frstor fidivl cmp fcmovnb call xor scas ljmp out or movl dec mov jp test mov mov xchg fbstp mov test lods mov fstps lods out mov aas mov inc fcomps jbe iret sub push int fdivrs pop lods repnz dec jg pop pop fildll xchg cmp out pop incl adc sbb mov cmp jb ja mov xchg rcrb jge rcr jne inc xchg adc lret or shrl adc inc pop ja push mov inc inc add popa and dec push cmp mov movsl loop hlt and (bad) imul inc aaa (bad) (bad) mov sub div push enter pop repnz cmp test push xor sahf pop test scas test in mov mov inc xor push mov cmp mov inc test pop push cmp jbe sbb sub (bad) fstpl jmp mov inc mov fsubrs outsb insl orl and test (bad) cmp push cli mov sub repz jle ss imul xchg xor test cmp push stos sub or and mov mov dec test sbb or imul push scas rolb jns das dec and fildl rcrl pop (bad) cmp jo mov push scas pop jle lods mov jl adc loope mov pop push adc add dec pop rorb gs (bad) enter orb ss pop gs push lods adc mov add mov icebp push adc sub hlt repz cmp and in jle fidivrl jge sahf inc jae mov jecxz mov pop mov leave dec leave and jmp hlt jb je mov jl mov rclb add inc int popf (bad) (bad) int loop cs add lods cltd mov popa cmp test fucomi pop dec add and or add jl test mov cmp aas ljmp pop fmuls jae out loopne add xor cmp rcrb push add jg mov sub (bad) jno pusha insl push xchg in sub or jb sbb jo das je adc xor mov mov insb enter add dec pop lods cwtl sub adc sub adc in jae xor hlt mov xchg dec and enter iret mov sbb and loop and and (bad) xor push scas dec outsl adc jb or scas mov pop fisubrl mov mov arpl push xlat clc pushfw add jae xor add pop adc xchg bound push inc aaa into pop and test cltd aas out dec xor inc or jle cmp jge roll lds (bad) dec mov leave cmpsb dec xchg pop inc dec (bad) and lcall jp repz and push movb mov daa lds or sbb mov xchg aam adc ret jecxz in hlt scas inc loop sbb (bad) adc popf fdivl sbb add add shrb addr16 push fwait and std xor push sub sbb or roll loop xchg insl push jl push pop std push sahf mov hlt (bad) stc push jecxz sub mov (bad) repz ret lret mov mov adc cmp icebp adc scas pop xor cmp inc repz fwait mov pop (bad) push lea push inc inc push sub dec mov adc or adc stos int3 ret xchg lea jnp jmp insb or repnz or popf sti insb xchg jmp outsw adcl mov test outsb inc cmpsl push imul stc cli dec cmp into xor pop jg inc int3 inc stc loop pop in (bad) sbb sub xor test daa mov fidiv push dec cmp iret andb mov fbstp or xor ret aas xchg popa inc (bad) es imul ret add mov mov inc cmpsl nop pop test lea fstpl push dec lret inc (bad) gs insl int daa push iret cli xchg movsb pop (bad) and mov and or jle jg push xchg jecxz repz out sub aas jmp leave iret stc mov pop (bad) stos mov outsl or dec pop lock mov mov lret into hlt lds punpckldq mov add push mov add push inc sub push dec pop sub and dec xchg mov mov lea in out cwtl xchg jb push and jns ja xchg ja sub js mov call mov aam jns adc sub lods clc add jge aad cmp shlb xor outsb inc insb mov pop mov pop pop add dec (bad) dec inc mov mov cmp xor (bad) sbb aas add xor pushf call stos lret lds add test dec push rorb mov mov push inc push add or or mov add lcall inc (bad) mov popl (bad) xlat add mov dec (bad) add jl inc (bad) add in adcb cmc in pop mov imulb out sub mov lcall (bad) test test jg push sub pop pushf cmp pushw fisubr fsubrl and mov sbb or fild jmp (bad) or add mov leave fsubs mov pop jns or sub out call into mov mov out mov cmpsb xor insb lret icebp jg stc xchg sbb aaa push add fist or xchg (bad) enter stos nop push xor sub sahf inc push sbb (bad) jg inc jb rcl xor xchg inc push clc cld pop or lret ss add in popa iret and add pop aad les int3 test lcall data16 adc dec fisubl jge add (bad) int into xchg xchg fisubrl pushf xchg xor lea xchg ja ss cmpsl pop fidivl push idivl sbb (bad) fdivp ljmp aaa (bad) push pop fs mov jo cmc into in sub mov das add sti rolb mov xchg test (bad) out outsl std push ud1 push rcr call mov xchg or push jne sarb sub sahf xchg pop xor lods cmp lcall mov lock nop mov gs sbb lahf in fs sub sbb (bad) mov sti xchg lret jae inc outsl int popl cmp mov dec (bad) mov push cmp xchg pop dec dec and xorb popf push push mov sbb adc stos xlat sbb inc mov dec or fsubs add mov imul popf inc mov lahf aad lcall (bad) mov mov jb push or subl lock push jnp imul je xor inc add clc call sahf outsb cmp mov ficompl test jecxz mov sbb aam xchg cbtw das and dec push mov sub push arpl stc sbb jmp mov xor jle adc inc sbb lods pop cld test inc push sarl ds test xor fcmovne (bad) xchg xchg pop and rcll movsb aam lahf insl frstor jg std les dec faddl jge hlt loopne out mov adc pushf daa sub cmp cmp sar jecxz hlt pusha imul fwait adc ljmp (bad) insl and mov mov fs cli into enter mov add arpl jb stos ljmp (bad) jb add dec mov lcall lock pop and push iret lock sub rorb push jp xor adc mov adc pop sarb ja ljmp aam ja sub clc shrl aaa int3 test outsl loope test in lods int mov daa adc jb lods xchg mov cs jge adc mov test jbe pop and jb leave ja test data16 jns fs cli xchg mov imul inc icebp push cmp js insb xor int3 sarb sub fidivr test test jg shrl popf jge mov and adc adc add pop push pop scas popf xchg insl push mov adc mov mov decb push push andl aad dec xlat dec repz jmp stc jb (bad) dec and pop dec test es or pop sub bound jno push cmp add fstpt out pop add fs gs stos in or jmp mov (bad) loopne sbb and fwait sahf rcr xchg stc iret fisubr (bad) jmp xor add and mov je (bad) adc xchg xchg lods fnstcw add cmp xor push (bad) push add (bad) je insl loop stc std out jne es mov cmp test and jl addr16 inc jo je mov jns sbb fidiv (bad) dec ret ds inc push push inc in or push outsl pop sti dec mov int3 lahf cmp pop jno pop lahf pop stos addr16 ss je ljmp lret push repz cmp xchg inc xchg insl mov or leave sbb mov push aas cs xchg mov pop pop mov cmp into xor push gs mov (bad) out inc and or pop and ss idiv out xor lods and and dec rcrb loop lds mov (bad) rcrb and sbb cmp add push sbb out or sub sub rep jnp es shrb ret loope jnp loop jl js fs mov push add shll pop xor jnp xor out mov test mov adc leave pop xor sub sub dec adcl xchg mov (bad) sub pop pushf push or xchg mov xor sub dec mov sub xchg push addr16 inc and sub jg and xchg bound lret jmp lods or out inc lock push add mov xchg (bad) stc fdivrl iret or pop and je mov or add mov ror fsubs mov int3 shlb cmp ja xor adc sbb cmp dec sbbl sub cltd mov call dec (bad) mov fs sub add shr mov xchg int3 addr16 cmp hlt or mov std add mov stc imul cmpsb push sahf ret ret fs xor test push mov push pop aaa cmpsl pop push nop cwtl cmp loope xchg out out push xchg push pop cld imul jmp or out and aaa pop jae or fs popf push ret inc dec int mov jge inc (bad) mov xor xchg or ljmp bound adc jmp mov imul dec inc shlb and jb cs sbb xchg cmp inc xchg jne loope idiv jle popl repz xlat mov xchg inc (bad) adc jno cltd xchg adc push bound or in inc sub adc pop das cmp pop mov xor dec icebp inc push inc lods add sub cmc cwtl stos pusha mov xchg cli loope loop xor push bound push std cmp nop push fs (bad) les mov ret scas aam ss mov dec (bad) outsb inc movsl dec adc sub gs (bad) std imul cmpsb xor xor je pop add es test jl insl and insb jae movsb scas mov mov sub cltd dec outsl push add rcrb fisttp iret and (bad) test stc mov sarb cmp push fnsave fisub or adc cli fldcw test aad dec shrl mov xchg add push int pop ret dec imul mov clc pop mov push in pop push cmp sbb (bad) pop jae icebp xchg mov push xor push jg enter cmc (bad) and daa rep mov mov mov push pusha mov test mov pop jo mov lret dec sbb comiss test xor sbb imul adc pop xchg add faddl adc mov mov inc ror mov cmp imul push das sub pop repz cmp movsl lahf leave test ret lods nop cmpsl stos push js test jecxz cmc in push imul push dec lods loope out popf nop pushf fwait sbb add jnp js fdivrl dec mov xor inc gs cmc das xor inc (bad) (bad) notb xchg inc cmc repz jmp pop sbb adc cmpsb movsl mov int add inc sub in cs pushf jae xchg push ja mov arpl xchg iret xchg movsl xor lds push or fsubl xchg lods cli sbb cwtl xor ja cmp mov mov movsb xchg (bad) je enter sub cwtl dec inc fwait mov mov test je xor or mov pushf ret xchg int3 sbb ficoml sarl movsl or jbe sbb pop xor test (bad) jb jbe sti xor loope je jae das loope adc or mov and jne mov pop das (bad) or fnop mov jge (bad) mov add cs jecxz pop or sbb xchg mov ljmp adc fmull aas pop push fstp adc mov mov mov sub mov adc or jno sub xor loope out mov push mov mov addl lods repz lods nop pop xchg test loope sub std pop xor xchg mov sub push xor fwait mov adc mov push and (bad) arpl mov fsub stos scas sub jnp jle loop pop and enter xchg mov pop div push xchg fdivrp push sbb xchg push aas dec cmp or cmpsb lret sbb cmpsl jae les adc cli movsb mov out mov mov test add test out adc daa inc lret pop popa rcrb leave aam add (bad) test aam xchg fildl push fwait je pop dec gs in les lock jp sbb add sbb cmp lcall sbb pop ficom and cmpl cmp and imul push scas dec sahf xchg mov js xchg in addr16 pop (bad) ds xchg repz jge xor mov adc pop or inc fbstp mov ret test adc and aad push pop push xchg pop pop ret xlat jg jp mov or inc add loop adc lods enter sub repnz rorl push add jb sahf jg jo rcrb lahf (bad) imul sbb add (bad) xlat mov rolb dec inc aaa inc jecxz fnstenv arpl mov cmp xor lcall adc pop inc lds inc and mov call xchg or cmp pop addr16 pop lahf jne aam test es mov popf fimul (bad) dec push xor xchg push pusha out push fsin aas clc sbb packssdw insl stos xlat sub mov and xor cmp xor jl cli pop or mov insl add pop ljmp (bad) cli pushf enter mov sub fs int jp outsl (bad) mov adc movsl jmp in add lahf mov mov repnz inc daa arpl push ja inc aad inc (bad) loop sar pop cmc sti xchg adc cmp sub out jecxz mov pop dec rorl dec (bad) xor add mov ds xor iret add mov out lret add ret inc nop mov mov insb cld test and mov xchg and adc jns jb lea and fs cmp inc push insl jbe,pn test xchg hlt das cltd in mov bt xchg or imul sahf gs dec mov (bad) pop inc xor dec (bad) add jno push cmp or inc cmpsl dec movsl cmc ds pop out dec xlat jmp and fxch add rclb jmp ret into cmc xchg xlat cmp ficompl adc das les ja pop movsl stc sub mov add dec cld movsl dec xchg in gs mov out flds orb test push cmp sbb hlt push into (bad) add xchg (bad) push (bad) lcall jmp add sahf and inc enter roll inc and dec out fsubs xchg push ds and gs push jge test das mov repnz test or and movsb jb push dec or ljmp push out dec aad movsb scas in leave mov jge hlt test push cmp movsl ds pushf cli push push xor mov adc cmpsl lret xor add jns pop lcall mov mov push jbe xor aam mov mov aam leave leave mov jecxz dec or stos dec imul cmc ret test roll xor dec pop jb enter xchg xchg cmc push jmp ljmp loope (bad) rorb scas jnp scas push xchg mov pusha push out lahf cmp jno loopw (bad) aam scas adc andw aam fmuls repz jl shrb cmc and aaa pusha bound push lcall subl (bad) cld push stc push stc lods ficom leave lret mov in js dec pop (bad) icebp sub jmp fucom lret xlat mov jecxz mov popf clc fadds push lods aaa clc mov popf (bad) stc je iret mov mov sub loop js adc or pop jle popa rdpmc out mov iret cmp pop loope mov xchg jle ds ret or cld imul jg mov and int3 pop cmpsl gs cmpsb mov pop and pop pop lahf or dec inc adc (bad) ljmp add repz mov xor lds jge in (bad) arpl call clc fdivrl aad mov push cs scas sub je (bad) fldl loop popa jecxz (bad) lods in lea inc cld pop xchg xchg scas sbb jae and imul fcmovne mov ret scas sbb sub ja cmp ljmp push lcall loope xchg xchg pop vmread repz lds cmc inc movsb jbe lds mov mov push inc and in adc jne sub jmp shlb sub xchg negl mov leave lds sbb jle or push pop daa test jg cmpsb push xchg fwait dec gs and lret adc idivb cmp movsb xchg mov push mov lock outsl mov pop cmp lock fsubrs sub add adc in inc pusha rcll aam sub mov push jb in xchg xlat stos pop enter sub add subl add xor inc push test and stos out (bad) jmp xor mov mov xor xlat dec adc xor rorb sbb push mov aas test into mov xor (bad) xor inc pop or mov mov jmp jbe sbb or andl mov stos out jns inc push or or daa mov jo push bound cwtl ret jbe pusha dec les imul popa ljmp or popa mov add stos fs mov xchg mov imul sub mov in jp and popa add insb out out loope jg test data16 push bound lods loope fnstsw cmp and mov rolb out or jb lahf or or js add scas lret mov mov enter fnop int3 xchg jg fwait mov sbb test mov push sbb xor jmp scas (bad) out sub or push test dec push mov (bad) push daa (bad) jp sub call lods shrb mov orb mov push sahf inc mov fadds call mov cmp mov mov dec jbe cmp sarb lahf stc in enter xchg adc dec jl mov mov sarb mov push shrl cmp gs je movsb dec mov sub in jne nop add repnz in leave out push arpl mov sarl cmp or pop sahf inc jle mov add jecxz mov mov push in add shl (bad) jae jmp into adc jns and imul cwtl push cmpsb push fsubrl cwtl andl and and and push and xor push cld cmp push mov lods lock cmp mov pop xchg mov test cmp subb or repnz cld xchg imul in sti sbb in adc adc bound cmp (bad) dec negl add adc sarl adc inc sbb xchg loop mov cli std inc xchg sbb push cmp fist mov mov xlat test push fdivl fsubr jecxz aam sarb leave cmp bound xchg int3 dec xlat cmp xchg cs mov in mov lahf ret mov cmp insb rcrl fucomip pop mov rorl add xchg mov addl flds into dec rcll (bad) imul push mov adc add js xor fdivs cmpsb fs adc aam xchg mov or sbb dec cmc sbb push and dec push cmc sbb xor leave add cli mov out lea fcoml pushf ja or scas mov and sub in adc imul mov lods jnp cmp adc cwtl sti pop test adc or mov mov sbb mov rolb ffreep stos xor sbbl push loop jae lahf pushf neg adc out dec sub cmp orl sarb cmp icebp jae out add lret imul sbb cmpsl add (bad) lahf movsl mov gs insl cmp out sub pop push loop into and shll jp fnstsw cs sub sub mov enter addr16 mov in ret call jle insb insl mov xchg sub jo scas and in lds sbb lret hlt mov sbb iret mov orl cmp (bad) in (bad) jecxz test mov jbe ljmp dec (bad) mov or sti int lcall lahf fsubrl jbe popa leave xor push insl pop cmc in mov ret push adc aaa adc jns cmp pop test je enter or (bad) imul andl push cmp mov xor mov addr16 addl out fwait lods add adc mov pop (bad) das (bad) loopne sbb adc push dec loop or nop mov mov cwtl popf ds fmull fwait jle inc add xchg xchg push ljmp xchg or jns xlat cmp and dec lcall fidivl or sbb movsb pop inc in mov lods mov fs xor movntq sub ret outsl cwtl lcall cmp out scas mov sbb ret jp xchg mov xor add loop sbb mov adc cwtl mov xchg push fmuls jo lret ret pusha icebp scas dec cmp dec std icebp mov dec insl arpl sbbb pop add push mov mov sbb jno lods ret push mov mov movsl movsl cmp push mov mov push push mov std or mov adc aas dec (bad) adc and mov addr16 inc xchg add ret imull jns mov dec push movsb jle mov imul insb mov add sub ret cld imul sbb stc push push xor mov imul ficoml cmp mov fucomi cmc cld mov add mov adc popa (bad) pushf (bad) pop sub mov les xchg sbb push cmp mov push stos flds dec cmp mov jb adc adc and push xor mov out mov dec clc sbb dec mov push jl aaa adc mov out call test mov add jle pushf pop insb enter mov xor dec sti sarl ds push sub ret ja icebp push repz pop adc xchg xor push or xchg and xor shrl pop popf les push (bad) jp pop ljmp adc mov sbb xchg mov sbb inc push xor daa add push ljmp fcmovu scas cmp dec (bad) sub mov cmc dec test inc fwait cmp mov add mov leave mov adc xchg xor and mov dec push mov adc andl push mov ret adc pop jecxz cmpsb aad ds mov clc push loop mov fldt cmc cmpsb or lds sti (bad) lea (bad) bound sti push mov mov and xor mov fcmove div es (bad) pushf xlat ret push icebp xor cs jns fistl mov inc lods mov mov out jnp sub mov jb ss inc or inc dec inc (bad) cmp in sarl mov cmp adc dec in mov loopne (bad) sub and loopne jo jmp fsubrl push lret mov outsb stc cli data16 adc dec (bad) mov lds cli jle,pt mov mov sbb xchg or lea nop xor dec push mov xchg cwtl mov in inc mov add (bad) sub jmp test pop mov and pop and push addb xchg orl std pop das adc jecxz mov xchg iret xlat cmp test shll test cmc xor mov fidiv cmp adc pusha push add call imull xchg (bad) out ret cmp out fwait inc fdivrs xor jbe hlt or push sub subl xor dec call cld daa and rcrb push movl mov dec daa lds pop inc jb pop (bad) mov jmp lea and push call xchg mov cmovns aam sbb stos add jns icebp data16 mov ljmp repz pop or adc inc and adc pop fdivrl mov fldt stos xor cmp xchg mov (bad) inc bound imul push insb (bad) xchg pop call pop jg and insb push pop cmp imul push mov shl shlb jnp icebp scas add adc mov in decl data16 ret imulb mov into inc lcall xchg loope sub stc xor jmp loop out stos in mov ret in sub sahf fcmove jp (bad) pop insl test adc dec clc loope dec push push xor mov stos mov imul aas jle movsb es jmp insl pop shrb rol mov xor call mov jge imul add outsl sti test adc stc fcompl gs xchg dec dec push int3 inc out push mov aad rorb pop push push inc fcmove pop xor xlat inc out xor js into lea mov mulb test xchg pop out cmp or lret insb lcall mov fisubrl test repz test mov shlb icebp mov xor push pushl cmpsb pop xor push pop push pushf sub rcl xor xchg mov push (bad) (bad) xor jnp movsb lods (bad) es jns test (bad) sub add dec mov ficompl add cmpsl cmp fldcw cmp and shlb or fnstcw clc and ljmp scas mov push sub mov sbb mov movsb sub adc out add push sbb test pop clc call sbb lods ss or mov jp add dec push and out lahf adc into out pop push mov or add jno (bad) test jle out inc jae fcomps (bad) stc sub mov scas mov ds jg add imul popa rcll pop push cli pop ljmp pop mov cmp mov jmp lea push mov leave cmp inc nop mov rolb mov imul and mov fnsave mov jp scas mov xchg icebp push dec rclb push (bad) mov xlat adc test adc test lods dec out jbe das dec fstps mov ds dec jg aaa inc mov jnp cltd mov loop mov add icebp sub xlat mov jae push (bad) rclb cmpsl (bad) inc in xor ss loope adc add xor inc push fs lahf jbe sub pushf cmc mov mov mov (bad) mov mov and xor je outsb cmc pop pop jbe insb out outsb aad fcompl pop inc fwait lea cmp in xchg push add ss ljmp mov nop pop xchg in fcoms dec (bad) mov lahf jno icebp nop xchg jecxz test pop mov xor xchg push mov iret mov es cmp sbb jle test push jno add push loopne add jo pop imulb sub pop xor lea push xor fmuls stc sub and clc aaa inc pop data16 (bad) cli jb dec cld adc mov outsl lcall cmp shl push push js dec inc and pop inc xchg sub jmp cld mov xchg jns insl clc lds cmpsl adc pop aaa sbb ret fmuls sti jae sbb adc add mov les (bad) xlat mov push bnd stos (bad) ret inc (bad) jae lods cmp cwtl cmp sbb fcomi loopne sub xor adc push adc mov pop fwait pop dec mov or ja gs mov out in mov inc cld and jp dec out ja xchg and rcr jne jo mov fs xchg xor cltd cmp cmpsb xchg shrl add cli sti mov add aas add lret jle jae sarb cmp inc sbb inc mov (bad) lret mov mov inc jne ret test stos sbb test mov dec or leave inc stos xchg lock cmpsl cs (bad) ss movsb or std (bad) sub and imul inc sbb in adc xor cwtl cwtl pop arpl loop imul lahf push jns adc sub aam jle jg das mov ja add sub mov js mov and inc push outsb das jg sbb or and jne test inc fnstsw push mov and icebp (bad) mov scas inc push dec mov xchg jle inc (bad) test mov pop adc and sbb push push fmuls cmp add jp out mov loop sbb mov mov add xchg das loope sub cmp arpl mov movsb sub jmp cmc jp cmp mov bound insl fbstp sbb pop fwait or dec lds dec je int3 sbb cs out cmp cmc mov push andb mov dec (bad) (bad) jge push or cltd cmp xchg fs sub repz jns push popa inc hlt (bad) ds fcmove or inc inc jno notl mov and pop shl mov jbe push fsubs aad test cmp lock mov (bad) pop xchg add mov add lods cmp pop jne enter jne fstpt rcr jge rcrl adc (bad) popf in (bad) mov and cld out movsb push repz pushf or bound add (bad) mov jnp clc addr16 jae aad push div test dec or rorb dec dec in push (bad) mov adc insl mov adc scas pop dec sti leave inc insb mov jae fisubl in das pusha mov or notl xchg lahf mov dec (bad) cltd in js push data16 fnop mov lret sbb jno popf jno xor add imul out fldl sbb scas divl imull sbb lea bound or repnz pop sbb sbb ds push out push dec jg aaa or jecxz xchg xchg and jns and xor pop or scas imul mov dec dec xchg dec cltd and mov add les mov add insb test jb ficoml stos (bad) mov dec nop int3 pop or scas mov push mov stc cld out int3 lock loope xchg aas sub inc fnclex cwtl test and int push cmpsb loop pop cmpsl mov sub push out imul int add or mov (bad) and lock xor hlt out xchg add cmp or push int3 jbe int test jne lret inc add mov lds mov cmpsl mov dec add pop lock or imul (bad) iretw (bad) jnp cmp cmp cwtl gs cmpsb and push outsb push mov aad aad inc jl adc jecxz dec gs xchg add sti mov xchg mov push fisubl jns (bad) addr16 mov mov dec cmc stos pop pop mulb (bad) mov push push sbb mov out jecxz repz dec int3 cwtl adc xchg cmp bound into sarb lea das pop cs lret xchg xchg pop cmp add jl sub cwtl mov push pop lcall sub or loope rcl fstl fadd iret sbbl add test push das add fsts pop pop insb imul mov jae mov pop push xor xor sarl lea insb cmp lods adc loopne stos mov cmpsl push pop enter clc mov cmpsl or adcl out cmc mov insl push pop cmp push shrb fbld add popf idiv repz mov loope ss mov mov ds jnp mov add enter mov andb iret movsb xchg fstl jle push mov adc jb add popa enter (bad) fldl fist add jg or pop rclb xor cwtl inc hlt lret push xor dec fld mov cs or add sub or cmp mov push lret or (bad) imul js and fimul sbb fcmovbe imul xchg xor and add pop mov mov push rclb das ljmp xor fadds insb xchg popf mov ror bound cmc or inc sub pusha out (bad) mov dec mov inc mov adc jl push cld pusha mov std pop lods sbb push nop sub pop rolb lret jbe pop sahf je push mov mov aad imul cltd xor cmpsl mov pop imul mov cmp popf inc mov mov insl mov mov imul stos in sti xchg cmp loop (bad) xor jne cmpsl inc aas jbe lods aaa pop and mov cmp or sbb lcall inc sbb mov xchg xchg xor jl lea cmp jmp sub xchg cmp or add cli dec dec movsb add pop jg (bad) lea ss mov and aaa stos pop je jle mov daa imulb out mov sets movsl lcall jg popf (bad) lahf dec or jb scas loopne cltd push mov add (bad) jnp inc loop test and hlt lea dec pushf outsl or movsl push stos pop loopne repz test sub imul push dec adc xor mov test sahf loop notl int3 rorl js xor stc stc test add lods outsl jl jae (bad) in lret data16 sbb jl popf push mov or sbb js inc nop movsl aaa out mov jl mov sbbl ds xor sub xchg push rclb mov or ds lret mov inc adc sub push jnp mov loopne mov xchg push lret cld push cmpsl scas or iret dec lds xor jle inc xor ja mov and cwtl in jnp cmpsb call sub (bad) and ficoml jmp icebp add or leave inc fsubrs sbb dec and mov cmp push jle add enter sbb mov or add aas cli jae mov pop inc xchg add xchg fldcw fwait mov push int imul lock sbb imul rclb mov pop (bad) mov leave inc pop (bad) cmpsb in addr16 sti cmp (bad) mov out notl mov (bad) mov leave xchg ds or pop xor push pop jbe pusha lods or push andl sbb mov mov ret scas adcb scas or add (bad) je xchg insl mov jecxz mov fidivr out fwait rcrl mov lock fist mov jno or cltd fsts dec cmpsl popa mov je jnp xchg mov outsb and (bad) push mov add mov dec pop pop ret add and mov out subl lret sub aam mov out int and call sbb mov fistpll out push add frstor adc push adc (bad) pop pop xlat imul mov mov add daa xor or cs lods gs lea fdivl loope pop aad in pop inc pusha mov xchg cltd dec push pop test lahf jmp test and adc sub sbb cmp sbb bound xchg orl popa push call lods cmpsl mov cmp cld iret adc loope test jmp or nop (bad) mov mov movl pop cmp push daa imul sub lret or idivb fs enter es scas jl push int3 (bad) int3 inc ret push dec dec jp sub inc adc xchg jg aam js mov popa cmpsl push je jge popa movsl push sbb sub pushf mov mov dec adc add scas bnd push sbb cmp jp stos sub xor inc fs mov adc xor iret (bad) adc loop outsb mov mov xchg outsb call in rorl pop stos sbb inc adc xchg lcall gs or mov mov iret cmp hlt data16 outsb sbb outsl ss ret stc and cmp mov cltd or push dec jl (bad) push es stos std out sub (bad) adc lock sbb jmp loop les out mov jle lods jno cld jbe sbb sbb iret add dec fsubrp adc sbb insl lcall xor mov movsb out addr16 hlt inc daa mov stos call lret dec adc out mov cltd and sub cltd iret mov cmp mov loop test sub push lods xchg dec inc fnstcw sub dec insl out push pushf and fist jae dec rol std (bad) push loop out push lea push test jp jp mov adc push add sbb add push mov push lds push mov pop jl in loop das cmp shlb in adc sub xor mov mov loope mov loope dec or mov xor push mov inc packuswb jno inc jmp inc pop sub adc ret (bad) xor sub subl cmpsb mov xlat cmp inc jge inc xchg and stc repz fidivr xchg cmp dec xchg push cmp or stos jle test call fdivrs enter xchg adc outsl mov rorb push movsl roll ds push cmc fnstenv addr16 lret inc je ds mov stos out leave jmp daa jge sbb sbb dec push fimul xor loope sbb mov stc xchg aaa dec inc sbb pop into dec in dec and jecxz cmp (bad) mov adc xor fucomp mov mov add mov fistpll jmp outsl aad mov sbb jmp je popa mov bound pop adc leave sbb inc mov mov sbb mov mov cmp sbb mov iret test icebp test leave and into rorl sub push xorb push push je xchg loop mov in scas mov (bad) sahf adc repnz fisubl insl and faddl push cmp iret insl aaa test cmp xorl out pop and ja sarl add (bad) dec lea sbb push daa bound or scas mov outsl adc or pop adc cmp (bad) imul push adc xchg mov cmovo ret and lock rorb mov movl or out mov mov cmp bound iret sti test stos push outsl lret xorb (bad) push ja xchg mov out push xchg mov pop lock and ret movsl dec adc stos mov lahf mov scas sub cpuid in cmpsl sub scas and fbld inc int pop stos pop inc lea (bad) xchg cwtl mov xor lock sbbl or scas insl fidivrl sbb imul xchg cwtl sub jns pop push xchg movsb in jnp iret outsl jne leave mov sbb movsb jae dec sbb cli fsubr mov std cmp roll lsl (bad) out ss cmp fadds mov dec cmp int jbe mull lods fs sub je inc int je mov xchg mov iret mov gs ja aad dec pop cwtl mov fidiv (bad) fcmovnbe mov insl or hlt mul and xor imul add jecxz mov mov inc jb jno push test xlat xchg cmpsb sbb jo das push dec push stc fs mov xor repz daa mov rol roll jge das inc xor adc adc or orl push xchg dec dec xlat stos and adc fsubs shrl and inc inc ss push out xchg jb or int mov popf xor jb or lahf sbb les or xchg hlt cmp pop aas add or mov pushf movsb dec mov xchg stos mov mov mov repnz xor (bad) xor dec adc sub dec dec push or nop inc xlat arpl jle mov sub sub fwait outsl jp add js pop (bad) (bad) mov mov (bad) std (bad) jg mov test or lret or xor xor jnp lds (bad) lds fwait outsb xor mov add sub mov and add scas ret sti clc into mov fdivs push or or icebp test call xorl ja mov pop cmp and cmp push mov (bad) outsl pop inc (bad) outsl cld mov daa ss lods daa loop insb pop or jg push push int3 xchg pop add pop aad cmp push pop pop loopne jle jbe pop inc push adc mov sub jns in sbb mov test or mov xchg xor sarl scas lret into push dec and fisttpll sti jo xor fadd (bad) loop lods xor cmpb popa add adc add pusha movsb and ret (bad) fwait rol cmp sub lret jle adc rorb pop clc and test mov xor (bad) cmovne pop in jns and add pop xchg push outsb inc pop imul in mov push push adc pop sub movb push cmp sub cmp xchg xor pop jge and loopne ror lahf and pop sub lea push sub test flds pushf mov call jne adc cmc pop jl test stc cltd mov lods sbb xor add mov sbb fcoms dec push add pop fucom mov and xchg hlt xchg data16 jo xchg xchg mov jp es flds sub sbb scas add imul pop or data16 adc or imul test stc clc fistp adc lea sbbl adc cmpsb mov lcall inc mov enter inc imul mov lods push fcmovbe lock jne dec ljmp add (bad) (bad) pop rolb push fmull ljmp jle sbb adc mov pop jecxz add divb je movsb daa cmp std ja (bad) (bad) in and hlt dec push imul (bad) xchg shll mov (bad) lret pushf imul xchg pop or divl jnp out fs ficompl mov cmpsl cmp mov cmpsb enter in ljmp jecxz pop jge jge dec lea cli int imul sarb scas pop jb jne (bad) aaa xchg mul icebp (bad) cmpsl mov in test pop jmp ds mov cld push cmc add addr16 xchg mov jecxz movsb pop bound ja sbb push mov test ret jmp push xchg and movsb or lock scas neg adc push add add mov pop mov cmpsl or pop add sub clc add pop popa test stos add pusha loope dec sbb repnz cwtl aaa jp into inc in loopne jg dec and inc stc jmp xchg js push int mov fstl add and xor adc (bad) sahf adc rclb rcrl cmc mov outsl pop adc adc js sub xchg ret jne adc or cmp adc and loop mov pop and sub inc test and mov push jmp rcl data16 divb sub xlat or xor lcall fdivp push and adc add xor mov into loope repnz jnp aam pop mov xor dec adc test out jno adc vmovd jp sub mov cmp das mov nop in pop sub jmp jo sub data16 and js adc jmp rol xlat les jge xor xchg rcl test mov mov or adc cmc sbb and pop push add cmp add sahf xor xorb add and xchg into pop lcall mov mov xor addr16 mov rcrb mov xor mov push jbe sahf jae setnp sahf daa test (bad) hlt lods sub and in jns or mov sbb xrelease adc popf pop shr arpl hlt in pop fs pop orb cmp or add aam test arpl mov cmp xlat and xchg addr16 add cmpsb fldt fisttpll lret jecxz dec mov popf shlb or push mov lret lcall inc adc pop (bad) ljmp push xor adc nop jne adc mov ret cli cwtl pop cmp xchg imul outsw mov test xor or sub xor popf repz adc scas (bad) ja xchg mov pushf jecxz cmp loop int3 or fistl ffree mov loope ja xor and xlat (bad) mov test mov jno xchg push xchg ret ret imul dec inc ds and mov cwtl inc fdivr mov int xchg out cwtl mov jge cmpsl lods loop sbb inc add std es mov cmp lret popf xchg jb push insl pushf in hlt outsb outsl push ficom incb cmpsl sarl xchg js mov jg andb push cltd cmp clc xor inc in push xor cmp andl int push ja cli imul mov fnstenv loopne mov shr (bad) mov rorb lods lcall cmc mov imul (bad) lods pop push (bad) jne mov sti scas cli pop mov cmc cmp loop sti add js pushf pushf dec test repnz gs test cwtl test mov dec in aaa push cmpsl out adc mov sbb jbe mov aad sbb mov mov xor mov (bad) fisubl dec cmc and inc lahf inc xor mov insl sub shrl add mov inc outsb daa dec lret dec pop into insl imul dec in int in dec lea js mov inc dec lahf xor out (bad) test xchg mov inc cld push test std int3 dec sbb cmp cmpsl repz aas push notb mov jae dec iret xor lret out (bad) aaa repz xor les sub lods outsb leave dec shrl out pop iret pop rorb mov lods lods (bad) call mov jmp pop shrb stc out push addr16 shl push (bad) int3 outsl loop lods cmp pop xchg push iret ret pop sbb sbb scas cli mov imul cwtl push jns jg inc gs into xor jb mov (bad) push mov mov mov fwait mov cmp inc (bad) aad insb lock xchg jbe bound mov mov jmp loop push mov inc push pusha jno mov mov pop lods pop loopne mov dec (bad) add jle iret stos loop stos ret ds push sar xor add sbb in sub xor mov mov cmc fcomip fsubs inc xor cmp ja fldt fistpl and mov pusha movsl push cmp popf sti dec ss aaa outsl or les inc jmp cmpsb mov push rcrl cmp adc jge in mov rcrb shl fidiv aad ja mov and mov insl xchg jns push jmp gs mov pop lahf pop push pop in int3 repz and or or outsb push pop sbb fucomi fsub mov fldenv repz xchg jae mov scas roll xor jl pop sysret cwtl insb jle add sbb ds into cmp int mov xchg push sub cmpsb mov inc popa cmc loopne mov cmp cwtl lea out popf add shrb add insl push adc xchg cmp clc sahf rclb mov nop xor inc mov sub in or add adc outsl and inc push lds int out lea pop lea and xor std mov imul sub mov mov ret push jmp push cwtl repz pop ret push sbb sbb shll push push jl hlt repz dec cmp jae loope movsb stos mov cli mov mov dec (bad) xor (bad) mov push ret icebp lret clc fwait mov repz pop mov fs mov dec inc test mov xchg repz dec push and or mov shrl jne out push (bad) cltd cwtl or data16 pop lea mov int3 lea loope inc xor xlat dec jg fisubrl jp clc nop mov mov out mov out mov mov iret fcomp sub addr16 loopne or mov xchg mov std or xchg daa mov push lea sub (bad) dec pop mov mov xchg daa pop in sub (bad) repz adc decb (bad) outsl add outsb cmp mov (bad) je (bad) outsl inc icebp orb and mov fstpt sub cs fisubl mov xchg dec int3 call jmpw push scas daa inc popa cmc neg jns int3 push (bad) dec mov ja sbb outsb inc call adc mov pop pop or push cmpsb cmp push jl es xor inc xor push cld fisub dec pop out test cmp pop pop mov sub dec test cs dec xchg sub add pop or outsb lods push (bad) stc jmp sbb rcrb js inc mov dec cmc jnp imul and pop inc imul xchg mov dec pop shrl cltd mov and in ljmp xchg adc xor xlat js push test inc loope and jmp pusha mov rcrl (bad) divl ret pop pop jecxz dec xor cwtl push popf inc xchg rcr dec test pusha dec std ds fidivl (bad) or xor inc sub inc or ret push inc lods push leave hlt pop fiaddl inc shlb xchg cmp ror xor jne and mov aad pop sti xchg xchg loopne lcall icebp mov push fmull lea fs mov mov add mov lea mov call jmp mov (bad) sub (bad) inc ffreep sbb lahf leave jb pop out ss xor aas insl arpl lods dec sbb add mov test mov push push mov in adcl mov inc add (bad) xor mov mov mov movsb cmc shlb dec call and (bad) ror rcrl lahf out or and movsl insl and ss and (bad) mov or push jbe mov lds dec xchg and or jmp int3 jbe cmc sub (bad) cltd pop movsb out jmp mov and sahf cs popa mov xchg (bad) mov icebp sub cmp sti mov pushl push cmc sub jnp cmpl sbb das outsb clc dec dec sub or mov mov jg mov cmp or mov sub jns push xor test push xor movsb popf mov sbb lahf addr16 sti stos sub rcrl scas pop pcmpeqb jecxz sbb imul or jnp adc sbb xchg xchg fidiv add add mov es cmp jle pop pop xor mov aaa xor (bad) and mov jne lea cmp jmp fmull xlat xor cmc gs xchg jg mov fwait outsb dec loop or adc mov jns and push dec lods outsl add push add push or jmp (bad) (bad) fs jns xor pop jp adc add ja pusha insb lcall dec sbb test test in push sub rcll adc mov mov mov cmc mov out mov xor push mov stc sub sub addl ret sub mov fucom ud1 xchg cwtl lods fsubrs loope,pt push adc xor imul add jnp mov add sbb dec jb xchg fisubrl inc mov add pushf ja sbb sub and repz (bad) repz imul or outsb and or jnp mov test insl imul sbb and and dec xchg pop mov pop add inc test mov push sbb sbb int loopne xor sub fisubrl xchg jae test out inc push fdivl jg out ret add lods out outsl jns mov adc insl mov ret aaa sub int3 outsb mov jnp mov aaa sub and and enter jg int3 mov xor data16 dec idiv in xlat popa push jp mov negb cmp xchg fsubp scas adc mov outsb cmpl push ret jb jg lea cli pop in enter pop leave cmc stos test fldcw sub push push sbb repz fucomi and pop cmp ljmp lds add mov mov fwait xorl mov fbstp pop sub cmp mov (bad) leave fstpl fwait pop push outsl sub imul (bad) int3 and push pop and enter cmp test jl dec andl (bad) daa int cld in imul xor (bad) or mov lret (bad) jbe,pt dec (bad) push dec fbstp icebp mov inc repz arpl mov mov cmp test mov nop mov ds lret or and popf into jg sahf cmp jge dec cmc xchg pop xchg pusha arpl lret adc adc dec rorb les loope and icebp andb cli mov pop test cli bound (bad) sti add push cmp mov in aas lods mov pop or dec cmp or (bad) xchg repnz int inc lea mov lret addr16 sub (bad) hlt fstpl fcom jg pop dec movsb adc jnp push fcomps xchg adc inc pop lahf mov cmp push aam push dec bound aas adc xor cmp jp inc push jne outsl xchg das jmp (bad) xor xchg es xor insb rol test loope push icebp sti mov xchg cmp (bad) cmp loope les mov (bad) frstor pop (bad) xor cld fimull shrb lods pop ficomp push jno inc cwtl jg repnz push jle mov and pop or mov sbb or push or xchg adc je das mov stos icebp mov jecxz sub sub aas push (bad) mov xchg (bad) xor cli and lods push adc lock sub cs shlb mov xor out sbb sarl es dec or dec jo cwtl in cmpsl jns mov fcmovnb push lods pop xchg ljmp dec dec xchg mov bound mov out int3 fwait rorb pop jbe test cmp xor cmp test xchg mov hlt pop call inc (bad) test insb js pop sub test inc cwtl sub (bad) push jecxz scas fiaddl or movsb jg mov add iret cmp sahf jae dec cmovnp vmwrite (bad) adc out jge inc test push inc daa lret cmp push push mov sbb sbb dec jae inc sub enter gs loopne dec cmp adc or dec movl test out pop (bad) jne xchg pop in les ret out sbb loope and lcall inc lods jo stos cs pop out add stos insl incl push hlt xchg icebp clc repz xchg jmp rcrb test scas push mov adc inc or mov jmp pop mov dec arpl mov loopne add (bad) addr16 sbb cmp or adc mov aas ret incb adc (bad) jne pusha daa xor idiv mov mov mov cltd push mov inc les test add sahf xor in inc ficom fwait (bad) mov add pop imul push xor xor test push stos pop mov mov sbb cmp pop inc ja mov push mov cmp ss out (bad) (bad) adc inc inc or lods bound jo mov or push push test xchg inc lret mov cmp cmp bnd jge insl iret and out sub out test shr in inc aam jmp in adc dec sub repnz dec (bad) dec gs adc icebp ret adc sub shrl loop and sub jecxz inc icebp loope sbb loopne inc mov mov enter ds lock dec pusha inc mov lret fdivr jmp ret jmp xor inc sub mov out cmp or in mov les push xchg push jmp xorl mov dec fistpl aad and stos dec test (bad) mov ja jg adc popa jae fs fwait adc cmp add in pop inc out sbb cmp js outsb pushf jl pop cwtl mov jae cwtl incb sbb xor fidiv jecxz and cmpsb cs jae in fcmovnb mov push sbb cmp add pop fcomp sub sbb add adc cs xor mov or and and mov mov xchg in fisubl mov insb mov test mov iret xor (bad) push jmp sbb mov cli cmpsb sbb sub or push out (bad) or out cld int clc cmp jmp xchg dec leave jg sbb adc xchg test (bad) sub clc test sub lods sub inc fbstp xchg jnp iret xlat push (bad) stos out test cmpsb lcall and xchg iret pushf pop sub xorl test imul add dec jmp outsb (bad) outsb jmp xor and lods cltd jns dec cwtl (bad) (bad) fmul shl notb mov in push jg imul call sub test push sahf sbb xchg insb inc jbe (bad) and xor dec scas ds or scas sbb dec cmp jecxz mov lds adc incb test mov sub aaa adc shll jle push push lods add xorb push jns cmc pop sbb arpl mov insb add pop test adc cmpsl lea inc in test das ss or push nop or jno das push mov cmp rcrb push adc imul loop lcall sub add out scas aad inc add inc push fstp lea jl ja sub mov xchg sbb mov in xor sbb (bad) mov stos (bad) movsb sbb mov jbe lods cmpsl mov xchg sahf neg int3 pop sbb daa mov cmp outsl mov pop popf xchg and mov or xor adc jo dec xchg mov les pusha (bad) clc outsb sbb lcall dec sbb mul (bad) xor aad das add xchg jle lds push lret gs adc fwait jmp loopne aaa in out iret mov cld xor inc scas add sbb jg mov ret dec pop rcr xchg test inc jmp cmp jge (bad) adc lret sahf xor pop add fstpt ljmp inc push loop stos jge and loopne out mov and push jb mov mov mov mov add or add sub jmp in push push dec add mov sahf push mov lods mov dec inc sbb jns push mov sti enter loopne sbb mov fs mov mov (bad) xchg jmp jo push jno pop push imul fdiv fs xchg ror pushf shll jbe or outsb cli cmp int jb in xor ljmp int mov push dec lret xor mov insl add push imul inc stos icebp jb dec push xor mov push pop loopne sbb into outsb ljmp ss cmp or leave xor addb scas (bad) sbb test and aad mov cmp add daa xchg (bad) jbe or or inc js int3 mov jne dec mov dec movsl adc enter jne add (bad) push fisub inc mov aad in popa push data16 lret mov inc pop loopne add fimul movsl inc pushf cmp xorl in mov mov cmp test aad popf aam arpl mov or xchg bound push adc pop cmp push inc pusha dec inc (bad) outsb aas ret inc adc pop ja sbb in mov sub lods rcll sub mov add imul jl loop enter les pop xchg outsb int3 adc fidivl pop bound xor dec test xchg test popf icebp adc dec lods mov fwait fs jmp add jp cmc daa aas stos mov (bad) repz (bad) mov cli adc iret lock rcr mov ret mov sub js clc adc sbb bound jg or pop dec cmp idiv xchg or inc mov add outsl push int3 test or sub lds imul dec leave lahf (bad) fucomp add cld lret arpl sub push jecxz sub outsb into test in sbb ficoml out mulb gs in rolb ret popfw insl into dec dec mov pop mov mov mov push mov or frstor dec ret out in mov fcomps jmp jne inc push iret adc lods (bad) mov das jl xor dec mov dec adc sbb in fstl stos jmp and fmuls xor test aaa imul or and xor jne cli push cmp adc (bad) xor (bad) in call inc lret sub sbb mov or mov lock pop sub lcall je pop mov lds mov test add push scas cmp div inc lods and loop les pop sub xor and rcrl fstpl pop lret mov sbb xor mov jg das mov xor packuswb jae clc inc mov mov push mov daa or daa jns gs add int (bad) popf andl xchg je or mov inc mov mov or ds mov mov int3 stos sub mov popf xchg and sti add mov int call sarb inc (bad) mov test data16 mov (bad) push pop push imul adcl pop leave or cli mov jo cwtl jb popf or pop add add loope stc out jns mov or pop sub mov inc dec inc fldt test add ror loope fisubl and xchg (bad) rclb clc movsl xchg das xor dec push mov and aad cld addr16 xchg std jb loop (bad) repnz mov std imul jns inc test push scas hlt in mov scas add cld popa (bad) cwtl and pop xchg pop into out adc jmp pop jns (bad) sub mov outsb lea jbe inc pop icebp xorl pop ljmp xor mov icebp xchg mov (bad) pop (bad) mov mov addl and push push out scas repz or sub (bad) fnstcw adc outsl inc dec cli iret out cmp pop xchg mov xchg xor add adc mov dec xchg (bad) daa mov add xadd sahf imul inc shll lock icebp cltd movsl xchg inc iret pusha (bad) gs jl pushf add loop mov jle (bad) xchg vandnps repnz dec xchg leave in out sahf add or adc mov dec je clc mov mov flds mov pop mov push loop nop (bad) lret test outsl xchg mov lods xchg outsb mov xor and in adc int3 push ljmp out stc push cli mov fnstcw std add insb scas add jbe pop mov in mov popf mov xor sbb icebp or insb (bad) mov mov aaa xor cwtl shlb mov ficomp inc and adc in cs dec adc stos sbb loope rcll in (bad) cmc int in mov in movsb (bad) dec fbld dec int3 lret xchg insb mov mov fldcw sar imul enter add xchg fistpl lock add xor and jno dec (bad) hlt cltd xchg lcall lods push adcl or test dec xor sub add adc or sub cmp xor fwait or push add jno mov bound (bad) scas mov mov mov sahf popa jb gs aam jmp out push fstpt jle shlb or sbb add mov mov push lock jnp bound dec mov lds (bad) dec or sbb and pop cmp jns lods (bad) add ss (bad) push (bad) jle mov imul scas or cs add movsb popa pop dec insl pop dec pop mov adc jg sbb mov push lods enter add adc push push test outsb incl notb pusha sbb cmpsb ljmp aaa jne (bad) jns aas jno bnd xor xchg dec mov push dec cmp shr mov and rcr and cmpsb in or dec dec push (bad) jmp push sahf in mov sarb hlt fndisi(8087 (bad) or (bad) aaa rolb jg dec mov pop push dec inc pop dec ret xor cmpl movsb mov cltd xchg arpl xor jne push or cmp popf mov adc xchg adc push and add dec jo (bad) fsubp cli xor adc imul sarb inc into add (bad) pushf imull stos sbb adc xorl mov cltd imul popa mov loopne mov or mov jb mov out je jmp xor lods pushf cltd mov fisubl dec adc add das push jmp dec dec in fsubs xchg xchg xor cmpsb es sbb jne fcomps (bad) bound jbe nop call stos mov inc xchg aaa inc or fucomi push inc and add loop cli std adc fidivl adc mov pop push add add or hlt xor pop cmc cmpsb pop dec test mov xor lahf imul push das nop fadds xchg jo jnp mov int sbb pop cli mov jmp aas cltd ljmp inc dec xchg (bad) data16 adc popa mov xor lahf inc jl lods outsb adc fnop (bad) sti leave add jecxz cmpsl popf out push out es mov sub hlt loop lods sub std or jbe repz daa adc pushf mov or mov mov adc push mov xchg push pop pop add jb xchg dec sbb push shrl rcrl idivl mov gs popa lods test stos xchg into std adc daa jp pusha sub call add push imul or push sub jmp (bad) pop or xor xchg int ljmp xor jno,pt aam push (bad) cmp mov cltd inc fsubrp inc outsb iret je stos insl leave sub mov add mov loop and mov lock iret lahf cwtl inc mov outsl mov stos shll movsb lahf and movsb sahf les mov clc mov add hlt and push or sub and sbb mov mov pop xlat jecxz sbb mov fcomi loope xchg and sub cmpsb mov jne maskmovq jno fisubl stos mov xor cs dec cmc xor adc or sbb out movsb and pop push dec imul and sub or pushf (bad) sbb pop inc mov and ss dec xor adc xor orb pop stos dec rcll in and mov sbb adc mov jmp (bad) pop and inc gs movsb dec inc cmpsl xor and pop add jnp aaa testb xor mov fisttpl push mov adc repnz xchg inc je cmp shrl jae lret test pusha push mov sub fcomip nop jle adc repz cmp xor jl inc pop push scas xor pop (bad) (bad) sub cmp or int out es je mov jbe mov out inc jbe call mov sti push rcrb adc push sarb pop int std test xlat rolb jmp lret cmp ror test xchg inc push bound arpl lds jbe movsb pop xor inc jnp jo jbe mov push inc and (bad) movsl lods cmp pop (bad) aam push fs lods xlat rclb mov mov sbb sbb insb int3 and shll sbbb je add scas jge lret bound roll and xchg sbb loope cmp inc fs shlb mov xchg (bad) fidiv push inc sti js les sub pushf adc inc fneni(8087 fldenv rclb in push lods test fsubl outsl xor xor iret (bad) (bad) cmc data16 out test iret pop mov mov push push add sub cmp test lret jg adc push dec adc pop (bad) (bad) shl sbb ja lods stc jmp mov cmc xchg daa cmp inc dec add and inc flds std push es pop sbb (bad) cli adc popl sbb lret repnz xor jle lock xchg (bad) jbe jae cmp nop xor adc (bad) xor lods lret in aas int3 in mov jae sti dec (bad) cwtl gs or fwait adcl out inc aad test or or push jl popa test dec jge rolb mov and cld icebp fildl jge jno sahf adc fistpl test je mov adc pushf test ret testb xchg inc add dec stos jp in (bad) repz fwait cmp idiv gs or sbb (bad) adc lcall cltd mov adc cs movsb scas leave cmp cmc mov outsl mov xlat mov inc (bad) aas cmp sbb sub pop enter xchg data16 add jne xlat sar les negl (bad) adc ret clc cmpsb xchg cmpsb jbe (bad) mov push xor jne xlat (bad) aaa les je fnstenv and xchg jbe aas (bad) repz cwtl pop movl lods pop mov cmp mov jle mov pop hlt (bad) testb lcall push push ret fisttpll scas aad out in dec xchg pop xchg push bound jae das int3 fdivr xor sbb sub mov sub loop mov aaa js int3 adc test repnz in cltd inc popf or adcb (bad) jp sub add sti add mov insb cmp dec mov dec xchg outsb push iret (bad) pop pop sbb lahf add fcmovbe mov cmp jge push out mov sub sbbb hlt cmp mov cmpsb out out addr16 xchg add mov mov mov inc dec mov shrb jno sub inc mov or xchg (bad) daa mov sub mov jmp sbb insl mov hlt aaa (bad) out out movsl fsubl movb xchg inc (bad) inc cmpsb push jge add mov in stos or cmpsb fildll (bad) sahf and sbb sub xbegin mov subb or ret hlt sub and mov (bad) notb jb xchg jmp insl repz cmp jp cwtl add jbe and (bad) cmp cmc sub or add hlt psllq pop into inc loope xchg (bad) xor sub pushf aas rcl mov psubsb cmc xchg push inc push daa popa mov lock or and xor fdivs pop dec pop fwait rcr mov jmp xor dec push sub xor imul or outsl sub cmovne cld cmc mov xchg gs mov xchg insb out shlb leave mov shrl enter stos adc lds pop cmp test inc add cmp mov sub mov roll inc sbb les pop ss aam cwtl ss jno and push cld das dec jecxz mov mov mov pusha iret mov shlb stos fldcw and xor loopne inc mov lea sub insb adc xor pop add mov aas test jne pop sub dec pop pushf ret repz gs push pop push dec les pop jg or sbb cmp ds aad aaa js pop lahf cs (bad) mov sbb mov loop and inc add fist jbe fstps mov nop orb xlat mov fistp add inc jle cwtl ret xchg mov imul repz adc andb outsb stc enter leave das stc movsb popf out cs jo cld aad int3 push into movsb ss adc sbb jnp shrb aaa jnp xor lods pushf pop pop or xchg pop push mov mulb jl pop in lret push ss dec inc jmp aam adc movsb mov lods pop xchg mov jg sbb mov (bad) pop adc ret mov lcall lcall inc das mov mov jno test cmp push rclb add inc or rorb jb stos xchg and test test adc insb or pop inc mov cmp (bad) test loope lds call jg mov xchg inc xor lahf jecxz xor mov dec gs lods push cmp mov dec stos ljmp test cmp sub dec dec mov lret inc insl dec or dec iret jmp mov sbb inc xor sbb insl pop arpl (bad) jb push je scas loope mov sub pop mov pop rol fimull inc push mov les jae pop xchg fwait xchg test pusha and stos xor sarb movsb lcall ss les std xchg mov lret (bad) imul mov adc cwtl cmp hlt ret or into dec cmpsb xor mov mov or hlt rorl xchg stos jns add mov and inc dec lcall dec xlat movsl push and and jmp popf insl sbb sbbl fistp in (bad) adc and xor pop (bad) jle fidivr lcall xchg cmp aad rcrb mov repz sbb adc (bad) das push ja sub mov dec pop xor faddp sti xlat inc in jnp cmp add mov arpl jl daa (bad) dec cld dec decb lahf push inc cltd mov sbb daa pop fwait mov jmp ss mov mov cmp fistpl inc ret test dec and aas push pop add mov call enter into icebp mov dec movsb les mov fucomp add cld lcall jne sarl dec sbb faddl in pop pop (bad) cwtl in arpl je lods xorps insl cmp xor outsl or daa stos mov addr16 rclb mov sub out adc dec test popa lcall in xchg fmulp push popf cmp inc xor push xor xor arpl push in inc mov pop lret push sbb mov mov and jb movsb and je adc jne xchg mul aad movsb iret jnp (bad) sub out js out sub cmp or push pop ret mov int3 mov pop das mov or out xor test ret add dec jnp ljmp iret insb push lcall fsubrp xor cmp sub ja pop jl aas aaa jnp xor outsl pop or sub mov ja (bad) jae jmp roll jp and adc pop pusha jmp mov stc out adc pop sub iret mov ds sbb inc shr fidivl sub inc rcrl add lret and sbb xchg scas ds enter jae or es lds add push add mov lock fcomi dec aas jmp push pop les pop xchg decl ja lret (bad) lahf mov into test sbb dec sbb mov cmp imul xchg repz (bad) mov fsubs and jle cld paddusb push insl dec xor std lahf popa sahf and sub dec shrl push add not push out inc enter shrb adc (bad) fdivr rolb fwait (bad) jle inc arpl out jae add rcrl add stos adc xchg and mov addr16 lcall jge add call sbb inc pop lock push pusha out mov call (bad) or and ss add out mov lock pop xor mov jecxz mov int jp xlat mov iret incl int3 mov pushf leave jmp or call icebp je ds dec pop mov clc imul lods dec outsb shlb sub nop lods push imul sub xchg sub mov add stos dec push sbb jno lret adc aam push jle or bound mov lahf jmp inc jmp and lret mov addl dec mov lods and inc cmp (bad) inc movsb pop das imul push jmp mov bound (bad) sub add inc (bad) pop add imul rclb cmp lods jne out adc or (bad) std push xchg mov mov pop lods ror cmp pushf test and mov pop jge fs icebp and or cmp or (bad) mov test sbbl out cltd lret xchg jae cltd mov lds mov sbb lcall cmp repz and jp outsl mov roll (bad) in (bad) out insb dec cmp ds inc stos loop push mov and out movsl sti lea jbe mov cmp inc jo psrlw repnz push cmpsl mov pop hlt sbb dec and jp scas pop ret xor in push mov out pop mov mov mov xchg add popa xchg sub adc repz xor mov (bad) sti and push jns jg pop in nop push dec lods fcom push not popf inc repz lock test les mov mov mov add mov jge popa or xor insl mov mov in mov cmpl jbe pushf sbb ja jp in movsl xor out ret outsb push cmc xchg scas push xchg mov inc adc cmp ja gs fwait sbb (bad) cmp mov idivl adc push daa das jne mov repnz orl lcall and push rcrb sbb in outsl and push xor pop adc jns push and inc fwait pop out jmp cwtl sub (bad) dec jno pushf jmp xchg movsl mov or scas sub xchg std lret jo mov jp test hlt loop movsl fldcw cmp mov fidivr cmp fs sub int3 push lods (bad) xchg mov cmp mov inc mov (bad) dec adc xor hlt (bad) mov jae loopne pop mov mov and cli stos push fwait outsb jecxz or insb (bad) enter imul out aad pop inc push and sbb cwtl cmp sub inc and mov mov out cmp leave cmpsb arpl dec movsb rcr jp shrl mov push or push popf add xchg lock pop cmp jg mov repz lods xor sbb enter sahf push loop int pop ljmp or ds dec and jecxz pop adcb mov fdecstp out sub xchg (bad) icebp xchg adc sbb leave mov sbb push fbld xlat outsb imul imul pop adc test sub fldt fistl adc rorl loopne mov push jnp adc mov sub xchg cmp push pop (bad) sbb push and inc es lods sub jnp inc ja dec hlt xor sub push (bad) sub stos sbb add lods mov stos adc mov jb aaa aam inc pusha push xor ficomp add jns stc inc notb jae,pt repz or ja iret push inc cmp mov insl sub jne jge iret or loop mov in mov mov mov mov dec add xor pusha movsl push mov cmp movsb add or lret mov mov out stos jg pop and stos das (bad) mov mov in imul mov xlat sub iret repz icebp xor enter pop xor cmp sub clc out jae mov imul repz cmp test sub (bad) roll adc (bad) int xor imul scas cld jo xchg (bad) sub sub adc push sub xchg lahf xor clc lods imulb fwait xlat sub and repnz (bad) sub adc dec jno,pt mov std dec mov scas out and sbb mov adc daa add xchg xor mov cmpsl in (bad) mov jae ret push xor push cld dec cmpl int3 (bad) popf sahf jmp lods popf testl dec (bad) lahf mov push push xchg lret aaa inc pop jbe xor loop cwtl jmp loope jmp loop lock dec repz cmp dec (bad) cwtl cmp addr16 int mov dec loope fs nop in decl or push ficomp jns loope cld mull sbb push iret hlt xor stos aaa dec sbb addr16 sahf push jne repz repz loop jle or fs pop imul inc fstl pop mov test pop sbb sub mov pop into push addr16 xlat xchg aam fiadd xchg xchg js mov or mov int stc out xor push jg pop pop popf mov push mov sbbl call or pushf jne jb cmpsb mov ljmp lret aas cmp cmp lret repnz pop xlat mov adc fcos pusha or mov fdivrs adc mov add gs outsb push xchg mov xchg orb scas jb pop sahf into fdivrl ficom andb sub pop and aas (bad) cmc xchg sbb mov cmp xor cld push xchg xchg fcoml sahf xchg push sahf shrl push out mov cli sbb mov rclb sarl stos push dec inc or xchg fldl int popa into int adcb push pop inc in jp sub and rorb or ret push lods mov bnd sub or ljmp xor mov jnp xor mov push pop in es pop rcrb mov xor (bad) jno mov sub mov xchg mov mov and je fcmovu add pop jo movsl pop mov shll jg repz xchg in mov cs add (bad) pop in and pushf int3 mov mov ror pop lds mov jge add mov enter in jg loopne stos lcall and dec repz loope addl (bad) jo dec mov jmp scas jo in pop or out mov inc addr16 jb pop insl pop subb adc dec and push cmpsl stos mov cmp lea pushf and mov push out loop add lds dec or sbb mov out in pop dec fcompl xchg sub adc and insb dec popa xchg push bound mov adc fstpt ja aaa cmp addr16 test ret std pop adcl adc inc jns in out lods mov inc pop inc mov jns dec pop notl pushf addl aam mov adc repz lahf push jns fwait cmp mov rcll pop or enter jmp jne inc lea dec lahf insl lret jo mov dec arpl mov je fildl mov out (bad) repz rorl loopne std sahf jp out jb lret cs and dec out or and hlt (bad) mov pop jno mov repnz and pushf mov push mov out jmp lds sbbb push jnp push adc mov xor push jno out dec daa add (bad) jne jb ret push and imul cwtl mov (bad) jno test leave loopne ljmp (bad) punpckhwd mov mov (bad) mov (bad) sarl mov xor (bad) cmp (bad) mov jnp pop jge ss insb push add and cmpsb jo shll cmc cli ret cmpsb mov inc or dec ja sub sbb and pop out ljmp lea mov (bad) stc pushfw sbb push adc pop (bad) (bad) ja fsubr stos mov mov adc mov add pop xchg popa adcb mov (bad) (bad) icebp mov das pusha jno,pn xchg mov mov push push xor dec sub xchg add insb in cmp mov aam dec in sbb xor cwtl pop xlat cmp lock sbb pop ss sbb cmp pop test mov and sub mov loop addl adc inc sbb stos push loope call or and xor int xor sbb inc fs cld daa cmovae xchg dec popf out sub mov sbb mov std inc out ret jae push push pop push in clc adc sbb js push roll mov cmpsl addr16 (bad) cmp idiv inc (bad) lods out mov imul xchg scas dec mov push sbb push inc mov int3 cmpsb out ja (bad) mov mov sbb push jb imul push mov fidivrl push shr das icebp push iret cmp hlt push (bad) and cmp fisttpl xor bound inc or mov lea jnp push sub in into jg sbb hlt and rcl (bad) fimul pop add pop dec push mov fdivs mov xor dec (bad) pushf jle cmpsl cli hlt popf or sar sbb fistl (bad) dec int add mov push movq and mul and push pop pop lds sub mov push mov xchg aas stos pop jle add pop fnstcw jb mull cmp mov call in push push in ja dec push std and jns test (bad) adc orl cmp (bad) xor mov les inc cltd jg sbb xchg pop cmp adc mov jo and mov scas sub push xchg hlt pop cmc and nop xrelease das loope mov movsb sub xchg (bad) xchg push push lods adc bound out outsl push iret mov les fsubp and lea clc jb fild xor insb sbb push mov push lods lods imul imul mov repz dec jno out ds aas mov jae aaa pop adc fs add dec fldt sbb mov mov pop (bad) pop push or pop jl mov xchg loopew lahf mov test xor fs pop (bad) mov pop cmp fs dec mov xor inc mov xor sahf add cli pop mov add incl or mov ss clc inc divl hlt clc inc adc cs pop sbb inc fwait cmp xor (bad) fcomp or push mov or lods int into hlt outsb and dec pop jbe es lea int3 sbb sbb cli xor sbb xor dec repnz cmpsb int3 sub out push push cs mov sbb out sub xor aam xchg push ja movsb mov push loope js push inc and sbb pop mov arpl pop repz mov es into sahf test rorl ds cmpsl arpl sarl je call xchg insl dec jl pop ljmp xchg lahf cmpsb jne xchg pop inc les repnz (bad) xor push push arpl mov xchg cmp shrb push dec sbb push in push lods (bad) jne pop cmc pop mov leave notl cmpsb fwait push sub cwtl push mov jne (bad) xchg jnp das add sbb mov xchg dec out mov mov push pop je outsl sti lahf je out popa jno sub jmp lods adc fdiv stos cli out jmp test sub push into dec or xchg outsb je (bad) mov jno cmpsb inc pop jae push fdiv adc mov insl adc ljmp or push sbb push mov lea mov mov aaa push sbb mov gs data16 ja pop js das mov push mov fldt test cmp call ret jl lret adc xchg out xorl sbb and adc rcl loope push xchg dec ja jg lods jge sbb push stos sub lret popa icebp ja dec mov xchg push rolb sahf push out pcmpgtd jp or into movsl inc lea stos test pusha cmp mov sahf test adc inc aad xor cs and xor (bad) jge jge ror inc leave cmpsl jns insl lock sbb jecxz adc iret lds loope scas out jno push dec (bad) dec sbb jno repz or pushl jmp push popf (bad) andb adc push add jg and imul or mov jl mov mov dec (bad) pop sahf icebp into psubd in cmp xchg call inc add sti xchg add jecxz pop nop adc cld mov sbb imulb xchg in dec test pop out in inc pop pop cmp pop fisubrl stc mov enter xchg jb push adc movsb push mov inc fldt iret lcall push sub xchg mov test dec mov out movaps xchg not test add in cmpsb lret stos stc xor inc adc mov fisttpl mov ja es inc loopne cmpl inc dec inc sti mov mov ror out out sub push lcall mov pop mov int3 xchg pop fwait jne fs ret push pop cmc mov andl mov sub aas imul xor jmp test sarb inc cmc cmc push ss mov push (bad) or mov repz xor imul sarl test cmp sub sub outsb mov push adc xor aad sub aam pop ds enter insl or mov sbbl and clc scas sbb stos cmpsl jmp dec jl or cld fcmovb sub xchg cwtl jg adc dec add jmp fistl jl cmp in cmp push xor inc ljmp jo pop mov xor cmpsb sbb aam je xor aam and hlt shr push jns popf mov imul xor mov out pop dec sbb inc out and scas call stc xchg jle xor xlat dec adc mov (bad) hlt std sbb sbb cmp test sub lcall pusha push cmp jecxz and call add mov in aad lahf xchg ljmp nop rcrb xchg push insb jp fistl movsl add out bound loop sub jle cmc adcb ds ret mov sub push in (bad) xor xchg stos es and pop repz int3 je (bad) jp xor jae mov loop sub into xor ds ret pop dec aam add sbb je and pushf xor xor sub mov inc rcrl push rclb ljmp scas inc movsl xchg pop sub leave cmp or pop push les rep add sub fnstcw adc mov int3 mov pop aam pop cmp dec add stc cmp (bad) pusha pop lods xchg in mov sub mov aam popa fmulp dec (bad) sub sbb or xorl jnp movsb mov mov fldt sub aas xchg subl inc mov mov cmp stc mov outsb addr16 imul jg push push pop pushf pop push lret adc test jecxz out pop push repz stc mov xchg fwait dec out add jbe ljmpw pop int ja movsb sbb inc stos rorl xchg cli std xor loop cli sti mov dec jne out or mov inc test test in sub repnz sarl repnz or addb sbb xchg mov jp cmpl bound ficomp outsb sahf lods sbb lea sbb (bad) jl xor adc add test push lea test jecxz push pop arpl ret jae push out mov cmc push push (bad) add xchg cmc adc int3 out insl ret push mov loopne loop inc adc (bad) mov xor pop jge sbb addr16 (bad) insb jns ds cmp jecxz cmp or lock imul jecxz test sbb loopne bound add cmp xor push insl hlt pop and push sbb loop xor test push mov fs xchg push test int and add adc lds clc push inc mov xchg sbb mov sub and mov and push sub imul in cmpb push xor sbb xchg inc sbb and jns (bad) xchg js sbb nop xor mov inc inc movsl fisubrl das mov push cwtl mov icebp out in mov add and cmpsl (bad) pop jno decb pushf adc xchg out sbb mov test adc jp hlt pop inc fwait call dec sbb sub stc push lods sti movsl push in add cld xchg mov cld cmpsl rorb clc mov test icebp sub adc aaa add daa stc pop enter fmull insl negb int cli jp dec lods test pusha jnp mulb xchg mov (bad) loopne adc xor call mov pop pop es aas xor lock aam jbe outsb dec xchg (bad) and dec xchg scas add jg adc inc sub cli aam push pop sti ljmpw sbb fwait dec mov sbb and mov inc pop sbb (bad) sbb in xchg or repnz jg push and mov popa sub mov jge shll xchg fidivrl mov insl stos dec push sti mov cli pop nop cltd xchg lds dec in notb addr16 lcall inc cli push loope imul and sar (bad) fiadd push dec aas repz xchg adc stos add inc sbb lret adc adc shr jno mov inc pop nop dec jae cmp dec mov xchg lea inc cmpsb cmovno lods push ret xor xchg mov data16 mov test jae push xchg push jp lea sbb or cmp cmp cltd (bad) and (bad) ss mov into push mov sahf data16 jno push je fsts push leave sbb xlat stos dec add pop xor or sub sub pop in lcall cmpl sub arpl mov gs sti pop andl dec fucomp cmc test int rorb dec loope push test push ret xchg lods dec sbb mov shll mov adc xchg test into dec (bad) dec dec sub popf jnp jae (bad) (bad) lret push sarl test push mov push repnz mov pushl push int3 jg sbb lcall push adc jmp push fdivrp imulb aaa xor mov pop movsl lcall out mov xor add fisttpl insb in lds ss mov sub adc (bad) les mov fs (bad) fbld loop,pn aas rorl dec mov and fldl mov add mov test pand iret jp push xor jae jae fnstsw add out sahf xchg xchg test (bad) clc dec cmp (bad) lock xor (bad) xor mov mov dec adc push dec mov add pop inc sahf and rcl add popa dec mov mov sarl cmp aam mov mov cmp add mov mov xchg push pusha cmpsb imul pop inc dec or es js std adc lock xor enter jge daa push popf dec xchg je xor xor jecxz dec cwtl mov addr16 jne int adc pop lods or or pop clc cmpsb leave mov std test addr16 add pop into (bad) loopne fist mov push push incl repz adc ja es cmpsb xor push scas pop sub test sub fisttp jmp jno push push mov sbb push aaa jo popf pmaxsw xchg sbb or pop or ret icebp test jbe mov repnz fwait movsl xor mov fdivs sbb xor mov mov fist sbb pop movsb shr test pop and pop out xchg outsl sub lds xor mov xor daa in sub sub dec jg nop sbb and dec pop (bad) adc pop ds test and and adc or pop inc movsb sbb pop in sbb xchg add sub add popf enter int3 mov mov add sbb aas outsb shll call push movsb jae in lea fwait mov sarl pop test mov daa mov cltd lods and icebp lods sub repz cmp js lods mov jo mov xchg xor dec test mov lods lods or ljmp jle cmpb aad insl push xchg (bad) push add mov cmp and (bad) iret lret add leave stc mov test leave and insb in mov lahf mov popa mov cwtl jle sub mov divb mov pop insb arpl (bad) fist cmp mov rcr cmp jns js adc ss adc pop xor iret dec mov icebp loopne mov ds cmp test (bad) mov xor and sub mov xchg cltd sub xchg pop lods mov and jne cmp mov adc inc cs inc add or les push sbb sub nop pop test cld jo out lods and lret xchg push cmpsl nop out dec pop jp jae lods pop stc shlb pushf sub (bad) mov fwait cmpsb testb aad data16 fcompl and mov int3 mov and hlt stos mov repz mov es sub aam mov (bad) fldt enter jno lcall aas lcall pop repz push xchg sbb mov mov jg es and aam rcl lods loop leave inc cmpsb jnp popa std push repz insb fiaddl js add pop test clc xchg xchg mov out pop data16 sti (bad) leave int add mov les push sbb cmc cmp jmp insl cmp test xchg out and addr16 and ficomp cmpsb inc push push jo xchg test int3 push sub sahf into dec dec enter xchg mov sbb and push inc cmp pushw sub inc test fsubrs push mov test mov inc or pop bound mov outsl adc mov cmpl popa adc sbb jb das push pop enter scas sub fmul stc push (bad) xchg test xorb pop jge mov mov xor pop shlb cmpsb adc adc ds int3 mov mov (bad) pusha gs or or mov int mov xor pop and mov lret push mov xchg (bad) fnstenv clc shlb dec xor xor push mov mov xchg int imul adc jnp outsl pop add dec and add lea je jbe addr16 leave (bad) add push popl outsb std xchg dec daa lahf xor aaa xchg mov mov mov cmpsl sahf mov jle lock sarb adc or scas fcomi lods xor mov xchg pop jno hlt or fcmove (bad) std or mov or ret cmc adc loope inc mov push shlb aam mov lock push out mov pop je cmp add iret sbbl push inc sti and aam call out fistl xchg or sbb mov sub cmpsl inc fisttpll add mov and lcall cmp test adcl add and aad ljmp or lahf outsl (bad) repnz into xchg jns push push mov push mov push add out xor cmc int3 insl add ror xor cmp leave xchg repnz and in popa stos aad inc js fsub jg stos popf out or pushf jl mov cmp cmpsl and clc sub dec add push (bad) out jae out pop xor sbb (bad) sbb std or out sbb push cmp sbb xchg sub test jb pop sbbb js mov int mov pusha imul fsubr dec jg ljmp mov fs outsb push jns (bad) enter pop mov push mov hlt xchg xchg or daa jl aad xor out mov xor stos cld test fldenv outsl fidivrl in movsb xchg jns add xchg (bad) fidivrl lcall cmp and jmp mov xor mov adc orb push pop mov xchg sahf insb xchg ja insb stc pop cmp scas out in jle push sub push sarb push (bad) nop (bad) je ds in fs movsl inc in (bad) dec mov test dec dec cmpsb movsl movsb das in xchg pop push test xlat aas pop in jmp mov add xor (bad) mov (bad) (bad) aaa jo and and jnp in pop dec pop dec jmp fildl push rorb arpl jne sbb loopne out xlat in lret enter xlat jnp popf stos adc xor ja loopne xchg or rorb not movsl cmc rcrl test pop lahf adc lods comiss inc dec xchg inc xor js mov or and and adc dec outsl jecxz add push xor loopne fcmovnu ret sahf push insb imulb dec dec xchg (bad) test int lock stos or jb ror mov xor fwait sub push pusha mov fwait pushf bnd cli sar push mov or leave lret je inc pop and out enter push adc ss imul jne iret sbb inc outsb pop test pop ds sub es outsl dec mov fwait outsb mov xchg xchg adc jno andl (bad) and sub jnp sub test loopne loop ret (bad) adc sub cld inc add das inc sti cmp daa in sub cs mov popf (bad) in mov in aam add push mov jo sub dec xchg orb dec aad sbb aaa jge dec icebp push ss mov data16 adc jns popf data16 mov dec cs ret arpl mov or mov fcoml ja cmp (bad) pop lcall jmp cmpsb dec xor movsl jmp daa shl adc cmp dec aas shll xchg test lds scas (bad) fcmove cmp xorl stc mov sbb push loopne ds js mov cmp iret scas inc daa inc adc pop jae rolb insb inc out nop dec (bad) cmp and adc xchg aaa xor adc stos rorl xchg adc and insb push mov inc lahf cmc xchg jle sub cmp dec fbstp adc mov dec rolb aam into mov push roll data16 shrl scas es lret pop clc movsl lret xor in add sbb lock mov movsl and pop lahf xor fs jnp jnp xor or rcr arpl sahf lods pop sub ja jnp repnz jo inc das lea ret sub dec adc pop xchg add add jge and sbb movsb ret add lds rol test adc jno jecxz leave jmp scas outsl cmp ret loopne dec (bad) iret test dec js push test xchg add xchg and jmp dec cmp sahf les inc rorl inc movsb mov xchg xor cmp push ret repz push repz sahf mov test mov repnz push mov ds ss inc jp jle mov mov out mov cmp das lock push lret mov xor xchg out orl adc sub fldt jecxz dec jp mov jno cmp test out jmp (bad) jno pop jne mov pop out lock dec inc ret jl xlat or movb je pushf xor in mov jae addr16 mov loop ret imul cld (bad) rcll fmuls outsl test add dec jbe xor pop pop cmp mulb sbb sub push in xor movsl mov cmp mov out adc rep or adc cmpsb sahf hlt inc pop push mov data16 pop (bad) ret data16 scas xchg dec lahf and push mov push and sbb mov insl dec bound out mov pop sti or sub xchg push incb inc push insb push loope roll jle push lods mov or aas xor mov lahf jmp mov js xchg stos mov ret mov jcxz sarb add inc outsb outsl xchg cli cmc lahf in xchg loopne es mov inc dec sub (bad) mov aas sahf jb mov and scas pop jae jns cmp adc ljmp test sub pop andl out push and cmovno sbb in aam xchg mov fimul test notl (bad) pop cs fbstp xchg fildll adc jns sbbl lock rcr movsl daa pop adc (bad) sub push sahf add dec sbb fistpll lret not pop inc xchg cmp (bad) lock mov jl xchg addb lods in inc je sahf ret cwtl das xor mov sub fcmove popa mov jns iret cli movsb mov cmpsl and cmc xchg pop inc or mov leave daa popa jge je (bad) push fxch sbb mov sbb xchg inc movl jb into aam xrelease push das dec push mov mov mov pop jp rclb pop mov dec nop shl mov adc mov fildl cmp fs jecxz adc adc int test dec scas sahf jne and je jo mov xor xchg pop (bad) mov shl je sti pop jb (bad) xchg cmp cs adc sbb inc les std mov xlat in mov mov add fwait push xchg ja jnp testl lock data16 stos jl scas pop js dec xchg testl xchg in fisubr test cmc mov fucomp bound in test cmp insl jge cmpl xchg mov das adc repz adc mov pop ja sbb cmpsb loopne cwtl sbb mov into repnz ret int jbe icebp xchg inc sbb dec cmp and pop test (bad) pop test mov dec jp leave mov mov fnstcw aaa sbb dec test lcall sbb movsl inc sub cld mov mov xchg sbb mov mov xchg inc add and inc insb (bad) mov dec cmp lds pop (bad) mov dec ret mov sub imul cli sbb out lods and jae add xchg mov dec dec lcall pop fcomps lcall mov jb sbb (bad) mul das dec (bad) or mov add or pop sub mov (bad) loop xchg aaa (bad) out sub cmp pop mov inc lds adc mov iret cmpsl push jge loop (bad) daa inc mov (bad) xlat push inc dec xchg sub inc push pusha lret push cmpsl xchg pop inc js fnop jle mov xor cmp test ds rcll adc push leave pop aaa and jbe (bad) jo push aam lock arpl or ror adc cmpsl in sbb fidivrl scas xor sbb stos dec ljmp in sbb xor jl pop shlb mov out xchg pop repz ficoml inc xchg inc fcmove xchg mov cltd and push inc pop enter xchg and outsb fstps inc sub jnp jg (bad) xor sbb and mov lods mov fldcw inc test pop test and (bad) mov cltd jns out test int3 add je or and cmp sbb xor mov pop out xor fsubrs lods out ror push out adc popf cmp dec ja inc scas daa mov lret addr16 daa sbb scas js add xchg inc cmp cwtl lock and in mov sbb cmp inc fcomip pusha cmp iret fwait mov adc test xchg lret add lds xor fbstp dec outsl mov mov mov cmp out (bad) or test adc in sub or out popf iret or js popa mov xchg and mov mov jge out movsl adc loop sub mov cmp jae stos jp (bad) pop mov pop repnz mov test pop out insl jbe mov sbb shlb daa xchg enter mov jmp data16 or mov imull test sbb aaa xchg lods mov mov mov scas inc push xchg add or shrb aad mov mov addr16 and or das xchg adc bound pop dec pusha sub test sub mov popa jo or sub ret push mov imul rcl sub inc jp pop aas repnz aad mov add in sub and sub ret jo xchg imulb ret ljmp inc mov cmc mov ret aas xchg fldcw push or mov add push pop outsb mov sti iret insb or cmp pop outsl mov aad aas mov sbbb jno test repnz inc mov jno cmp add cmp jne push cltd repz addb (bad) lock cwtl test pop xor sbb addb jnp sub sub dec aad sbb push (bad) lock mov adc pop (bad) mov lock xor pop push mov fs fmul add (bad) and add add les jecxz iret xlat subl inc push mov add ds mov or fisub sbb roll xor push pop mov xchg mov add push (bad) data16 ficompl xchg lods xor mov cwtl dec adc adc mov (bad) jo in jo pop cmpsl insl cmp cmp adc push in xlat jb mov loopne push jge mov roll (bad) inc cmp jmp clc push stos mov outsl pop test inc jbe loop inc clc nop cld call xor mov pusha jno fbld mov repnz dec mov out stc mov xlat xchg push sbb popf mov imul jnp mov sub cmc es jg fnstenv sbb pop int inc mov test push xor fs inc leave stc adc (bad) cmpsb in iret pop fldl cli xchg clc arpl cmp adc xor push jnp aam xor icebp das cltd out jb cmp pop shrd (bad) mov rorb mov leave cmp sub movsb aam mov insl daa dec cltd mov sbb mov in arpl mov pop dec lahf dec inc adc mov cld push (bad) mov out mov mov xchg cs and decl popa repnz mov mov push mov mov iret stos gs or adc test sbb data16 pop out inc pushl sub outsb (bad) std lret mov int3 push mov gs mov inc test testb xlat xor push lea lea scas pop push pop enter es clc add incl hlt sub sbb scas lahf repnz pop repnz pop lds out je lahf xchg test hlt mov test sub int3 cli mov lock (bad) inc insl push push aam and dec mov sbb pop aam push idivl dec dec into ret mov (bad) xchg cltd pop cmpsl jne cltd mov and dec dec cmp inc pushf jne movsb ds add sub test repz popf push dec scas lock out or dec mov (bad) aad cmc sbb cld imul add ret adc push cmpsb mov (bad) arpl xor jae xchg popa xchg ss push dec leave mov js push ds push inc mov sahf jecxz mov stos test xchg lods repz xor and (bad) (bad) xchg dec push stc lods xchg jne mov pop cmp (bad) call cmp (bad) hlt out hlt test xlat and int ds mov jns into aas pop mov jmp jbe (bad) (bad) jb add mov pop sbb jp inc mov inc or jo push cmp lret cmpsb shrb repz shlb or adc movsb adc aas pop ljmp pop orb sahf icebp test mov ror jno sub out or xor mov xchg cmp lea popf mov fmuls push int sub out inc mov mov inc into inc sub pop out pushf fiadd or out and xchg (bad) mov fcmovnu xor popa xlat mov fisubrl adc pop xlat test stc push (bad) test nop jmp inc int3 add movsb inc xchg insb lret and push cmp jb jecxz cltd or scas mov adc (bad) mov xor clts push not jb mov xor pop daa clc stos movsb fnstsw daa insb push in cmc fwait jbe xor pop mov ret sub inc sti ja test outsl adc mov push scas (bad) icebp stos imul fildl insb pop adc push loop xchg sbb xor adc mov push and je je inc dec adc scas inc adc jl data16 inc mov inc lahf lret (bad) iret mov push arpl adc adc aad mov mov lea mov (bad) out adc dec les add test mov lods xor push (bad) push push add sbb pop out pop iret and call fs xor pop jnp and add push mov fmull xor test and sbb inc mov push hlt js fmuls mov std push dec inc mov out loop mov sub mov xor pop fisttpll arpl mov jae cmp ja call movsl rcr rcrl loope sub push (bad) clc rcl xor xor push rclb jns movsb mov mov add les lock hlt in loope adc inc xor mov mov push add fwait loope arpl dec mov sub cmp xchg psubsb aam lahf mov adcl out test cmp std mov inc mov push mov outsl test xor mov pop pop sub pop push and mov push jecxz (bad) scas push into stc xor movsl fucomip mov jp add fstpl call jp sub bound sbb leave and movsl ficom out into inc adc add push xchg fwait sbb lret (bad) xchg add jp (bad) imul xor mov jle pop andl aas iret xchg dec nop (bad) sbb das lds mov and pop fidivl mov mov pop or jno dec and popa lds pop mov add scas (bad) jge jg cmpsl in jo leave sti pop or outsb fsubrl or (bad) mov sbb and pop sub sbb rclb movsl pop jnp mov dec loope (bad) xor out out dec add cmp jno test out fs mov dec fs cwtl inc call sub in inc cmp sbb stos sub pop cmp shrb fimull clc lods mov gs mov mov sbb test and sbb inc mov ljmp (bad) fisttpl adcl out push pop cmp test adc rorb lcall cmc xchg mov or sub sti in les inc psraw push sub fdivrl pusha sbb xor aas in sub test and shl adc out arpl mov out jae cmpsl jecxz and js mov mov int3 xchg jnp,pn adc faddp in pop add ds mov cmp jno jnp iret pop mov fdiv and insb imul and inc mov loopne dec test shrb pushf xchg sahf icebp jb lods stos add outsl add int and add jb hlt stos sbb fucomi inc xchg cld push shrl dec les es lock add nop sub pop pop data16 cmp fstpt sti cld xor (bad) push add mov jns lods mov pop xor push sbb test push pop mov daa negb jl fwait and push mov xorb dec push sub rcrl aas nop jo pushf std and push lahf add mov imul pushf jns jne sub adc in movsl mov daa divl cwtl int3 mov popa jmp roll push fmull into xor stc add repz std movsb pushf test cmp lods into ljmp (bad) mov movsb dec mov imull inc add sti or jo xor sub mov inc add cmp pop sbb scas aam jae (bad) jbe cld into cwtl sbb (bad) jle rolb jmp inc ja in xor addr16 test fisubr dec bound inc clc (bad) cmp daa and jnp push add pusha mov pop inc orb cltd add lahf addr16 push xchg jne mov rorb inc xchg xchg mov roll or pop dec scas push loope test dec cltd jmp test mov sub cvtps2pi ret sub or sub inc push in push cmp or shrl mov in pop test lods loope adc imul cltd out cwtl adc movsb or mov pop adc pop cli imul cmpsl sbb inc push mov jbe dec (bad) jns sub xorl lahf ds (bad) mov or movsb decb sbb mov outsb imul cmp mov pusha imul mov dec std jle popa fs stos mov and cmovle push mov psadbw into cmp mov fildl add rcrb iret scas pop cmp mov fstps inc xchg shl pushf sbb mov jno mov iret iret mov ficom mov jb inc repnz aaa push sbb lret push dec sbb mulb subb adc push inc pop (bad) aam loopne jge xchg push stos loop cmp leave (bad) cld dec fistpl (bad) insl mov subl test mov xchg mov or rorl xchg adc aad push rcr mov add lret mov lahf adc sub in xor fsts data16 and dec and cmp fstps inc pusha rcrb subl (bad) sbb mov and aad xchg xor (bad) push imul std js fild dec or mov push pcmpeqw mov sbb mov push outsl dec inc push mov popa ds mov and call and mov adc movsl push fcompl outsl ss and sub sbb cmp jno push ret sub mov in mov fdiv add loope mov dec loop xchg ljmp lcall insb mov push stc fcomps and xchg push xchg xchg pop or loop fidivrl std fsubrs lret inc outsb cwtl sbb popf imul xchg cmp mov jge in inc inc sbb cmpsb addl aas xchg mov pusha stc dec push xor add dec in loopne add push xchg inc lahf cmpl sti mov lahf jmp push nop fisttpl or test mov call and add outsb pop cmp mov sarb sub dec xor je and fisttp xchg push fidivl inc popa xor cld pop xchg es pop push xor dec mov sbb sbb dec pusha inc dec sbb or call dec je jle mov sub cmpsb ss out loop push and loope (bad) aam or adc mov push sbb pop and enter cs mov add inc cwtl push fdivs lock (bad) aaa xlat hlt and hlt push jae shrb pop pop arpl push sub and test (bad) or xchg and pop cli (bad) xor xor push pop outsb pushf dec cwtl cmp ret arpl sub jne cld bound fcomps popa movsb dec jno xor outsl lods outsb (bad) push das mov jg mov fdivs (bad) fidivr bound nop pop fsubrs jecxz ja sub cmp jmp jnp test test mov and cmp in mov scas fsubr cltd sub pop pop or jecxz sub test hlt jecxz add (bad) enter cmpsb pop mov stc add xchg xor mov bswap leave das mov out cli mov (bad) jo push jns xchg pop scas push mov mov lock push mov mov in lret adc out add popa mov scas mov call push jbe cmp jae lods and aaa imul mov sbb lock mov (bad) xor cmc (bad) icebp (bad) ss leave mov cli insl dec jg dec jle cmpsl lods inc nop jle jne xor and pop jnp dec enter adc add or sar adc mov cmovae adc fs inc icebp dec fadd add rorb cli xchg jno into inc sbb ja lea (bad) ja and push push (bad) mov mov sbb dec mov add imul and mov scas (bad) cmp ss ljmp jge sub cmpsb or push aaa scas or lcall mov cmp mov inc jl or (bad) sti cmp pop (bad) icebp loop pushf lock (bad) dec idivl xchg push rcrl push or xor mov loopne fildl fidivrl add inc dec mov inc sahf lods jnp sub push pop and int adc mov inc outsb mov imul enter sarl jmp fsts add pop xchg xor xor mov push jge sbb lcall negl mov leave mov aas dec jne dec xchg andb lea pusha lea out push stc xorl mov into sub shlb xor ss out out mov add xchg loope (bad) sub pop adc pop push cmc push push and daa cltd xchg pusha popa mov inc bound ret mov lock movl jle mov push cmpsb mov das (bad) jo sub orb imul sub xchg mov aad adc in addl ja inc push into and or dec mov ss mov and pop (bad) aam popf inc inc push mov jns icebp stos scas jbe pop push fidivr xor add sbb insb out xor dec cs cmp pushf mov cli push jge add and pop jmp push popf sbb lret das jo js es mov jl rorl pop mov test test std jge test and cld sarb movsb cmp adc dec sbb inc out ds mov jne mov inc mov (bad) shrl (bad) (bad) int3 cmp data16 adc ja cmp jge pop cmp imul pop call jo ficompl pushf lret sti jae sahf cmp ds push scas mov inc inc leave inc mov and into mov das scas je dec or sbb mov out mov cmp iret cmp add mov sahf adcl iret in or inc pop je loop lahf pop jecxz cli jp mov fisubrl cmp mov rcll sub clc out sub and test cmp jl je pop es add adc add pop (bad) xor pop cs imul mov stos dec stos mov aas dec mov adc push jo (bad) fdivr pcmpgtw outsl and bound fldt out and repz mov mov (bad) lret call ret mov js es push scas cmpl xor adc inc mov xor data16 lret mov jnp pushf fwait (bad) out pop jbe in insl pop jmp inc push das idivb mov clc jl inc or outsb hlt jmp jno jle sub cmp mov nop and (bad) (bad) xchg sub out out pop pop mov mov les mov xchg xchg inc mov xorl (bad) (bad) pop cwtl jp iret jmp and cltd sbb mov jle pop les mov mov sub push cmpsl and and xchg mov jae mov les xor pop jmp adc fdivs arpl gs icebp loopne movsl ret and inc in mov jmp daa lods mov xchg lods lods inc or inc out pushf popa mov int3 inc popf pop xor and out dec test (bad) (bad) pop or andb sbb push outsl adc mov sbb add xor popf or gs js cmc dec pushf arpl cmc aad sbb pop lds std mov cmpsb add push mov repz mov ljmp mov (bad) mov and mov cmp sub lock or ret and sbb lcall cltd push mov jp rorb pushf mov mov rcr push adc aam xchg (bad) ds pmuludq and sbb pop fbstp rolb push sub push inc (bad) aam (bad) nop xchg fisubrl add and insl mov (bad) lret jmp mov jne ja sbb sti aas data16 lahf xor dec loopne (bad) push sbb popf sbb das je mov hlt add cmp push les push fild (bad) repz or fsqrt inc lods shlb ret or jae stos ss or gs mov sahf (bad) jmp sahf popa push das scas mov lcall psllw subl es iret push imul imul jae add sub push sub pop fcoml sbb xchg mov jns mov fnop mov (bad) (bad) mov xor pop fnstcw push add inc and inc cltd sti push fucomip push (bad) clc movsb push xor cmpsl cmp fldl sahf mov cwtl inc or sarb adc add pop mov jg xor inc adc add mov sbb (bad) out mov scas pop sarl push cmp into xlat dec and adc aas das mov mov push sub enter and xor mov adc cwtl sub test ret mov pop xchg lahf sbb sub adc pop dec fiadd cltd jae sub cmp es or bound jmp jno popf sahf (bad) jp cmovae xlat pop add lods mov jmp out pop pop push mov sbb cmp push jl out sbb sti (bad) push imul rcl ret test fsubrs jecxz movd sti popf pop repnz pop bound inc stos fidiv addr16 aas push pop enter and mov movsb in push sbb mov add mov cmpb dec jge push cmpsb add in push mov pop sbb jae or int3 add pusha inc je ret push ficom pop sahf je push mov push sbb repnz mov cmp fs sub pop in (bad) jne xchg add add loope jbe inc fs fistpl loopne bound dec or shr subl jae movsb cmp lock push or inc sti test pop inc arpl out pop aaa push inc cmc (bad) into insl sbb adc aam clc lds cmp inc lods adc fldt sub in sub inc jne daa aad cmp mov in adc repz mov lcall jmp insl popa es add (bad) push lock pop loope add negb and xchg movsb ljmp push dec or cmpsl adc jo,pt inc jl and repz or pusha xorl sub sti (bad) mov bnd push lret aam push and sti outsb mov dec dec sbb xchg rorl xchg add dec sub fldt scas xchg cmpsb outsb pop cmp movsl cmpsl push mov imul (bad) sbb jp fs or sub or xchg loope repz jmp stc call insl jnp ret jecxz mov jne ficoml sbb xor fwait std xchg das outsl and or jl cmc aam outsb sub pop mov cmp cltd mov and inc cld or mov add stos test dec shlb jno xor rcl push inc inc ret shl outsb sub cmpsl push neg cltd and mov xor outsl daa ljmp out fbld loopne xchg (bad) (bad) sub sub dec insl outsl jbe inc push fstl mov push andl out and fdivs loope dec xchg in movsb lahf push pop shrl fcmovnbe stos in or xor rolb mov out push pop xor out (bad) jmp jmp sub sahf les mov and js jbe mov cmpsl aas adc dec les jno icebp (bad) add jnp mov es cmp xchg cmc xor or mov sti insl nop jo adc (bad) out cmp (bad) cmpsb arpl mov movsl stc enter cmp xchg sub push mov stc or scas test jg (bad) mov scas mov (bad) enter insl adc in gs popf xor add or xchg xor xchg xor push ret bswap call aam in (bad) shrb mov es ret lods aas sahf in lock mov inc bnd push xor iret insb int3 inc fcmove cmc mov xor addr16 mov sub cmp xchg mov and fdivrl lcall fnstenv xchg push mov mov ret shll orb cs in pushf adc and loope invd repnz popa xchg pop loopne nop test lods ja cmp xor push outsl mov mov and adc pop test sti data16 mov sub aad add cwtl push aaa push fnop xchg dec outsl icebp mov dec aad dec ret and stc jle cmpsb dec sbb pop sbb jmp inc and xchg add xchg push fistpl (bad) xor xor push pop lret sub data16 mov js (bad) jge fimull adc sarb mov jno jmp xchg das pop inc popa bound mov sti cmp insl negb and in sbb test cmp popf stos loopne push lods and lret ja fmull add cmp mov add rorb (bad) imull jno mov cmp in push mov push pusha or jno je push mov inc mov iret movsb jbe add cmp jnp imul inc sub test dec into adcl clc cmpsl cmc jae iret stos xor ss cmp daa icebp push mov mov enter jns xor mov in dec scas scas repnz mov sub mov mov int3 pop dec push jbe cmp (bad) or xor pop or lds cld fldenv fdivrl scas movsl pop jmp sub into inc mov xor lock mov mov in push adc sub clts (bad) sub fmul push fstpl imulb add xchg push adc jae jo sub and push fbstp ja push aas dec adc je and or mov data16 dec cld icebp push push mov pop stos scas fsubrs in push and icebp mov push dec test sbb sbb (bad) or jp push or inc adc adc jl out cmp repnz mov pop mov sub scas mov mov outsb scas ja mov pop mov xchg mov stos rcl mov (bad) je jmp pop mov cmp js repnz ret cld cmp pop enter aam push scas fwait out jecxz push popf add pmulhw cwtl sarl roll mov loop mov xchg iret or aam (bad) fbstp cmp sub pop mov cmpsb gs add scas stos clc mov adc ficomp adc mov mov mov js cmpsb jo pusha push in inc push push aas inc mov xchg cmp push push cltd cmp (bad) cmpsl clc movsb xchg lcall lock cwtl dec stos pushf adc stos mov pop into sbb ds sbb call ja imul jo fadds jmp mov data16 pop ja enter xchg mov shl cmp inc adc clc cmp rcll roll sbbl bound add push pop inc xchg sbb aad lcall cmpsb push dec push pop aaa dec pop stos pop imul add pop xor sbb cmp test rorl lock add add jb scas push xor lea pushl push push push inc sbb or push nop xor incb push loopne cltd xlat out int inc jle outsl sub pop clc push bnd and adc sbb pushf loop cmpb (bad) lret imul jo aam imul (bad) mov out mov adc sti das or mov and cwtl sbb jp nop std popf jno cmp call mov (bad) xor adc jecxz push xchg mov ljmp cmp pop pusha insl shlb mov sti push pop push popf scas jno add mov mov mov std cli or pop imul inc mov loopne outsl add jne mov mov aaa fwait pop push jo lods mov adc and cltd int3 dec sub dec out sub push icebp mov decl jno sub movsb sub push adc dec inc (bad) jp cmp iret into cmpsb dec jecxz in orb stos pop das xor inc xchg jecxz xlat mov sbb push nop cmpsl or or pop pop mov cmp xor push adc loope aas clc daa cmp xor out jne xor mov add stc mov fisub and add insb icebp je inc aaa xchg pushf sub repnz fcoms sub cmp js out xchg iret jb scas inc cs adc andb sub push arpl jnp fistp mov inc fmull bound xor cwtl cmp pop cmp (bad) pushf xchg push sub popa cs les sbb mov mov in or mov (bad) jb popa adc into js repz push push popf adc ja add ljmp adc push and push xor scas lods push test jbe repnz arpl repz roll loopne hlt mov sbb (bad) mov adc scas cs xlat iret xchg mov add adc inc inc add pop or ror xor add inc push mov imul insl mov xor std and xchg mov xlat cmp pop mov or imul push in mov in cmp dec cmpsl rolb (bad) mov push dec movl movsl popa rcrb xchg xor cmc aad dec lahf add mov dec dec add rorb dec rcll sahf sbb add push movsl test les lods pop jae dec das adc dec and lods ror ja out lea jmp fadds push fstl hlt sbb stc jp insb xor sub rcrb inc push lcall mov orb fdivrs xchg rorl fwait sub jo mov pop xor mov jmp cs jle cwtl fcmovne test or (bad) out or sub or pop inc jae xchg xor mov xchg shr cwtl repnz push sbb sahf adc (bad) lods sbb (bad) adc push mov aam and cs call cmpl jb xor nop test add xchg clc pop pop pop xor je xor outsb outsb mov stos popa xlat pushf jbe adc add icebp sarl dec pushf fisttp jge sub mov inc test stc loope inc aad push mov cmc leave fisubr stos mov shlb xchg jb mov daa cwtl sti icebp mov out pop or mov addr16 jecxz test addb aad fldcw notl fldcw aas sbb dec movsl push clc test icebp dec pop pushf test (bad) xor sahf mov (bad) push jl adc (bad) pop adc pop cmp scas gs cwtl rol xchg cmc ds (bad) or mov test shlb add ret dec out jp movsb jb sbb shlb inc mov cmp mov int mov into push mov xor rcrb jae add div adcl gs jge imulb in cmpsb in or stos push or and stos gs pop cmpsb inc out leave scas std cmp dec inc mov fcompl orb cwtl data16 in mov cmpb sbb inc push and push subl and mov (bad) xor xchg mov mov cmpsb add dec add (bad) (bad) jae adc aad addr16 jnp icebp loopne mov jecxz hlt outsb int3 cwtl and addps add jecxz call sub add pop add inc cmpsb mov addr16 adc cli test fs mov fscale aaa movsb stos pop jno push xchg pusha xor mov js or sbb xor inc ficom test sub inc pop push sar xchg mov mov and jno fiaddl seto cmp fbstp xor adc bound xchg mov dec sbb test cmpsb dec adc movsl arpl mov mov push inc inc movsl addr16 gs fmull xchg cmp nop pop rcll inc or adcb inc pop imul dec jo out push lcall or stos jb mov out mov inc sub mov mov pop add mov (bad) pushf cmp in push cmpsb push pusha jnp dec fs jne daa ja xchg xchg addr16 (bad) lea jg xor hlt test mov loope dec mov mov loopne nop out es arpl adc leave inc and lahf push test popl cmc or stc mov jns jno sub adc mov mov sub dec iret mov cmpsl mov xor or cmp xchg pop shll jg hlt aaa mov mov add mov add scas pop js int xchg add xlat adc mov cs add add dec mov aas push xchg enter pop (bad) dec mov and mov mov xchg push rorb add sub push out test adc mov in xor jp popa mov cmc lods pop sub sub dec inc (bad) lock aam imulb pop push cmp xchg xor xor into cs push xlat xor sti test xchg lret cmpsb adc lahf ret mov add pop cmpsl xchg cmc xchg dec mov jmp mov in sub daa imul jnp,pn imull (bad) cld xchg pop mov inc ror repnz push cmp and popa mov pop js andl push mov xor add jb dec xor and mov mov mov sar fmul stos movsb inc jp movsb add js movsb mov lock and dec (bad) lock xor xchg punpckhbw hlt (bad) push push jmp jae cwtl mov xchg xor out xor xchg lret adc (bad) push test jae push int mov pusha dec jne in stos rcr or das test fstpl pop or mov loop mov mov leave and daa add mov stos aaa push scas in (bad) popf mov sub loopne add sbb rclb lods daa add or dec lods sub and dec lret bound jo pop leave or jp clc movsl sub pop (bad) (bad) imul mov xchg je fadds mov cli dec mov mov jge dec push push mov mov sti mov xchg and ja cwtd mov lret das das adc jge xor enter mov jmp lea popf xor push cmc jae sub add mov sub jle inc xchg cs ljmp lea cmpsb xor stos sbb inc cld mov fs loopne dec dec (bad) hlt arpl fcompl out cld jl push das xor outsb xchg leave jnp test sbb lcall push and mov (bad) int3 inc idivb jmp jecxz inc sbb sti mov js sbb pop jnp push adc inc pop ret xchg push ret push test jmp dec jge lahf divl xor mov (bad) gs cmp fwait test or sti jnp dec fsubl js (bad) iret jecxz mov inc pop pushl fstl movsl sbb out (bad) scas dec pop lcall add arpl fisttpl (bad) or push jecxz ret loop das push inc js sbb addl insl int push test mov shll xchg add push jnp fs imul stos and mov jne sub mov jge ja mov pop pushf or aam xchg xchg mov lods add dec in cli jo insl cmp push fistpll js adc mov pop in push idivl or shlb loop in mov inc dec lea add scas hlt out and xor adc andl lock cmpsl mov daa mov fiaddl push scas ficomp dec lcall xchg loop shrl xor mov pop xor addb cmp jo ficomp idivb out lahf mov pop add mov pop das mov mov mov jg ss or pop mov sahf (bad) dec or rcr (bad) pusha loopne in sub (bad) das int fmuls push mov rcll out pop xlat jmp and mov and mov cmp sub mov cmp stos pop adc mov lret popf mov push cmp and test inc ret out ljmp in insb push mov rclb repz out mov push movsl lods inc sub sahf inc cwtl cmpl out frstor imul pop int pop xchg loope shlb push inc fyl2x out call and pop xchg lahf xor fmuls sub (bad) sbb (bad) mov hlt (bad) in shr loope loopne mov icebp in test cltd test xchg stc gs and es adc fmull jmp sbb and rorb dec lahf lods push lods test icebp mov mov hlt sub jo scas add pop dec push fcoml (bad) loopne lret pop fwait sub jg sub jb rcll dec movsb and outsb imul and stc fwait lods leave mov loop outsl das push jp or jbe lods jle fcomps add jmp (bad) out lock lock testl cmp add das fwait in fsubrl sub aad jp mov lock (bad) lcall xor test fcomp cmp test mov imulb pusha mov pushf cmp iret jns gs fcmovnu call daa lods iret dec ds add sub mov and mov xor (bad) pop pushf mov pusha fsubs leave pop aaa sub iret xor (bad) mov inc mov ss pushf aas addr16 add add icebp iret jl dec pop inc (bad) or sbb cmp lds shrl fiaddl push (bad) lret pop ss in add fnstcw or mov movsl addr16 ja inc pop push push lea pop pop rep cmp lods or or mov inc adc aad mov (bad) mov lds sbb cmp jo std mov repz or ret or sbb (bad) ret imul xor push mov xchg cltd nop sahf dec rcrl aaa push shr fwait jae jmp cmpsl push stc xor or in xlat xchg push adc mov ret sbb fmull jbe pop ja xor in popf sbb inc dec adc xchg arpl test imul cmpsl test xor test clc jb cmpsb push hlt or jp jb lret (bad) mov les cmpsl outsb adc paddd push xchg jecxz or mov ds and lods lret insl loop std push mov faddl jno dec cmp fisttp (bad) mov sub lods jo pusha cltd pop std es aam data16 mov dec fildll cmpsb mov xchg bound fisubrl fmulp aaa fstpl enter lcall leave dec or (bad) icebp jb add xor push js mov pop sti add inc pop das pushaw outsb jg and and (bad) xor adc push xchg loopne subb into and cmp out (bad) arpl mov sbb mov ja in addb mov mov push inc stos jne inc mov push fcompl inc pop pop das fsts adcl stos inc sbb jle xchg mov jle jnp xor in out push pusha repz push mov repnz mov xlat adc inc pop test mov loope les mov cwtl push push pop sbb jl xor clc pop fidivr sti andb lret jae dec sbb mov push sub and xchg and ret int3 sub mov fsubl jb pop mov fildll xor xchg xor jbe ljmp andl adc stc data16 (bad) iret push mov jg mov sbb fsubrl xor test (bad) in cli fwait mov jmp mov or sub xchg push add fsubr test jp dec sub xchg push sbb mov mov xor push add js mov test jg push popa lcall inc xorb (bad) repz pop jl mov push cmpsl or mov push movsl movsl std cmp test mov imul enter xor adc mov mov iret icebp inc push in push cmp cli push push icebp fwait shlb jmp js mov lcall (bad) idivb aaa into jl (bad) cmp sbb push out push inc fbld shrl (bad) xchg je test fmul adc xor pop cld cmpsl mov ret jmp fisttpl mov mov out (bad) jmp cmp (bad) mov fmul mov fs popf pushf or jp xor cmp jg movaps (bad) inc or jo icebp push lretw push sub dec jle push ljmp frstor xchg or cmp adc sbb mov (bad) test inc jb or mov aam mov pop das or pop jae lret daa cmp xchg ret rcrl stos cmp dec xchg dec xor jl mov or repz dec movsb pop cmc lret pushf pop je dec jecxz or loop or movsb xchg ret dec mov inc iret add scas insb test out sahf jecxz (bad) into scas fisub mov cmpsl imul add xchg adc mov fstps iret pop and imul aad in cltd sbb addr16 insl and adc and jecxz loop adc stos fwait dec stos mov xchg xchg sbb mov push adc outsb xchg enter xor ficompl mov and fwait and lret (bad) push cs stc ret push jns out scas dec sahf mov imul popf (bad) frndint stos pop inc jae jno movsb sub int enter xor dec inc cli mov adc add out jge aam fstpl jnp push jl imul lahf mov test repnz aam shlb inc mov and aad (bad) add sub mov or mov mov sarl mov jg enter hlt ret inc jb sbb adc pusha fsub pop mov sub lds clc mov je add clc loope pop sbb sbb xor aaa jnp pop mov jmp (bad) adc jmp add int ds add (bad) mov cmp nop mov and ss inc inc imul mov repnz orl add inc mov inc adc lret (bad) mov sbb pop sarb fistpll nop fnstsw cli repz dec sub ret push sub mov rclb mov pushf sub loope push xchg mov scas sbb (bad) lret rcrb sbb jp insb xchg sbb sub cwtl ss (bad) loope and adc outsl frstor xchg sub aas adc insb dec movsl sub push (bad) rclb in je scas mov sbb pop out aam daa nop frstor jo inc jge lahf ljmp pop add test mov sub jecxz aas sub fdivrl xor inc mov pop jecxz outsb jmp daa int3 movsl sbb pop xchg (bad) push dec in and sbb mov inc fs icebp inc mov push push sahf je add jmp jmp out cmc jp lret cli inc scas and sarb popa fidivrl lahf jns in (bad) testl and cmpb push shrl (bad) adc fisubl adc (bad) mov popa cmp push and (bad) scas xor test adc mov mov inc fcmovnbe and push in add loope add sub loop push cli loope js int3 enter sub jp (bad) mov and pop cmpsl ljmp push pop shrl fmuls cmpsl xchg shlb pop pop mov das sbb push push cmp mov repnz out imull push inc xor cmp lcall mov dec pop mov adc imull push arpl cmp mov add popl sub push sbb imul sub sbb lret and int3 mulb add dec inc pusha int enter mov xchg lahf inc and loop das jle repnz mov rorl out xor js bswap test jmp push sub pop add mov dec outsl test dec pusha mov mov (bad) hlt movsb pop cmpl and pop cmp sub mov jb stos adc into or stos xchg adc push mov test pop andb xor jmp test xchg scas jno add lgs test out aas mov cmpsb lods add rol pushf xchg pushf loope icebp mov xchg ss dec int3 outsb dec pop scas (bad) addr16 pop call ret mov jb jl lahf sbb fisttpl cmp outsl mov pop dec repnz add mov mov lret pop xor sub out xor enter fnstsw sbb mov pop add cmp das pop jl ret punpcklwd hlt mov adc aas mov mov mov lods fisub sub lret mov adc or es dec fisubrl adc add mov mov jbe adc lods not cli (bad) scas ss mov jno mov adc mov lea ds mov sub mov hlt sbb sub dec es cwtl pop movl mov cwtl clc test dec xchg inc mov mov and fdivrp add cmp stos mov adc stc sbb sti jl enter enter adc add xor add movsb xor push test sbb mov dec imul jg or push scas push addr16 cld std hlt (bad) in aam (bad) or push mov sub cmpsb rcrb adc push cmpsb mov enter jnp (bad) js xlat fsubrs and ds mov cs or incl loopne inc clc jne nop/reserved out sbb out xchg xchg out pop dec pop cmp xorl std add fs xchg mov icebp das stc mov mov pop lcall jb ss jp mov jo ret enter scas sbb rcl ret int sbb mov push fistpl add and push sbb inc adc cmc xchg mov add dec and int3 stos xchg sub adc pop push hlt imul pop jmp rcrb mov sti jmp or pop addl and mov push and jno int pop jg cmp fs ja mov mov xchg out jns loope pextrw cmp lahf inc shlb push stos mov pop dec pushf fldl std outsb dec jne les je ret dec sub ss mov jne or or or cmp cmovne adc and imul loopne call adc cmp dec pause pushf or jl inc mov pop pop repnz and push les push outsb xchg add and sub inc jg pop test jl cmp xchg pop nop into imul mov pop fstl pop dec in hlt inc jno nop imul adc mov hlt push cmp add xor jb fwait scas inc cmpsb dec test adc add sarl inc aad pushf mov adc (bad) in (bad) test shll xchg and jg arpl xchg clc inc or sub pop xchg mov adc dec xchg cmpsb ret jae cmpsb dec dec je sbb aam push mov dec call mov cltd sub cmp sub inc xchg sbbb js dec test push dec aad (bad) lock xor test push iret lods stos xchg mov push mov mov gs xor repz inc and popa cmp lahf hlt push mov out insl xchg mov pop loope sbb inc fisttpll cmp ret sbb arpl lock push (bad) cmc mov iret jb jl inc inc into or push aam or stc dec push add jne fisubl roll gs xchg jns mov sbb mov jb int cmpsb pop mov inc mov mov (bad) xlat xor jnp adc push popa push testb mov adc fisttp (bad) adc mov pusha std dec inc out sbb cmc lods add push pop imull push sbb loopne std jno pushf out pop scas mov test inc popa ret insl push xor or and out pop icebp jns xor and nop pop out divb and popa sub pop sarl (bad) fidiv (bad) jns into cwtl cmp stos push imul cmpsl mov adc xor ss loope pop push jbe mov or dec dec (bad) xor adc and dec aam rcrl fidiv xchg mov or push (bad) mov jge add push mov mov into pusha ljmp push pop in mov dec shr dec nop loopne mov mov dec les xchg fcomps cmp gs lods faddp push rcrl mov movsl aas in mov cmp fs sub inc push je add data16 sbb push mov mov lahf dec inc clc ljmp shll push int3 mov aas sbb cs std sbb jae jne xchg cmp ret fbstp je sub aam ljmp lods (bad) stc aaa push inc xchg inc xlat and mov stos cmc loop inc xor aaa mov add jo aad sbb sub jno insb add cli test inc imul ja or arpl icebp neg movsb push je and push inc cmpsl cwtl mov mov clc icebp mov test cmp jae dec push mov xorl cmp test push jne mov mov jb cmp push jecxz jb es (bad) std or mov negl mov adc loop and push stos addl aam cmp sub mov pushl cmp pop aam mov and xor ret mov leave hlt mov lods int3 add loopne jo (bad) cmp out outsl cmp sbb aaa sarb and jmp fidivl dec add mov (bad) jle int3 int lcall xlat xlat pop lret fwait xchg rcrb fwait or sbb fldt mov mov vmovaps mov pop push int insl lock mov cmp ret cmp out mov leave clc and lods es xchg insb je (bad) lods (bad) or xchg adc mov sbb jns mov or outsl xor push cs stos fs das add xchg push notb dec sbb push adc mov xlat pusha rcr adc sarb movsb fs out mov mov sub outsb inc xor ret icebp mov std inc lea movsl xchg push fadd (bad) mul cmp and lea loope aam or in sahf popa jo pusha or aad jle mov or outsb push daa dec jg pop lret rolb std mov scas cmp adc (bad) lcall mov add adc and cltd dec out notl pop xlat sbb cmp xchg cmpsl shlb mov aam or or push loopne jno std push ds and jle fst pop dec leave sbb inc fisttpl (bad) loope xchg aas and xchg dec (bad) popa icebp mov call pusha sub aas inc fbld xchg cmp mov test ja rcrb (bad) mov cs mov (bad) xor inc loopne add (bad) sbb icebp fisubl adc fnsave mov push inc xchg or sub fiaddl fcomps fstps in dec pop xchg imul jo lock sbb inc je dec imul fs fldt gs pop call push ficoml loopne notl arpl sbb mov movsl dec roll popa (bad) mov push dec xchg rorl add aas les or and addr16 add inc sub data16 mov je adc cmovl (bad) in pop push inc cwtl mov movsb fist in jns daa cmc sub push fwait fs popf (bad) mov pop rorl out dec mov lods sbb test mov out ss mov cltd ficomp insb sbbb ret push push sbb add jb rorl cmp pop xchg xor fmulp xchg xchg insb xor pop loope loop push and js cmp sar sti cwtl jge sub repz jbe inc mov popa add rorb jge mov jge dec aad mov jns xchg adc jns jo mul inc sub mov mov adc xor aas enter into sbb das and fmull push scas icebp test imul mov sbb inc cmp ljmp mov and movsb pop inc jae mov adc int3 (bad) mov inc cld (bad) xchg dec jns test daa dec rolb sub mov pop outsl clc mov outsb ss and mov sbb mov pop push arpl mov cmpsb sbb lea pop fidivr mov cltd lds and enter jecxz xor inc bswap xchg out mov sbb jns not (bad) mov lea sbb push aas push mov jbe adc mov jmp pop (bad) push sbb mov mov mov cli mull cmp cmp rolb ja cmc mov bound mov out xor sbb lea (bad) stos add pop sub (bad) divl movsl imul movsl push out adcb jecxz aaa rorb popa mov lcall add jno test lods mov in hlt push mov fmuls inc push cmp iret cmpsl push pop push jns dec mov push lods cltd xchg repnz xchg jae mov or das inc jp pusha lods xlat xchg mov cmp mov or lds xchg pop add mov std xchg test sub pop jo addb sahf mov add push jecxz jge adc insl jns mov jg jl das push inc push jmp outsl xor cmp aad ljmp push xchg mov xor out adc fs adc add xor push icebp pop push lea inc js mov enter or dec dec into sub sahf pop jnp jbe (bad) inc adc pop fnstsw cmp jg xor sbb pop mov dec add ja in (bad) mov push xchg fld jne jp lret jbe sub mov push aaa ja adc lret and inc popa fwait add icebp loope push xor fistp das je roll andl call cmpsl jo fstpt sub out lcall mov or jnp,pt jb jb mov repz push fdivs sub inc cmpsl and add stos dec pop fwait repz stos cmc cmpsl popf xchg mov leave adc mov sub xor sub push scas and rolb or clc lock pop mov sbb mov jae pop out stc jl sahf pop in pop push idiv sub xchg out xor fucomip cltd fwait loope in jp out xor xchg std daa inc add dec add adc notl int3 push mov data16 dec and mov in insb in fs fldlg2 sbb andl addr16 test mov (bad) outsl inc dec mov mov mov test push mov push addb hlt (bad) in rorb dec bound insb inc add out inc dec lahf inc inc push cwtl add imul jp push aas and jp data16 mov mov xchg and push shlb movsb hlt xchg sahf add roll and sub arpl lds div iret mov sub nop push sub jecxz and outsl in push call out frstor inc fs ljmp insb push pop push adc jp jo lret dec and sbb pop lea jge cmpsl mov dec cmp loopne cmc aad jle lret xchg mov int mov add jg imul sub mov cltd push mov leave sbb int mov push ret push mov or sbb das add dec cmp test xchg mov scas adc in in data16 imul mov mov cmp cwtl push or push sub lea es (bad) sub ds sub rol out jo jns xchg mov les mov enter fild xchg push out pusha inc aaa gs adc push cwtl pop and divl cmp push in leave mov ret call popf stos andl fisttpll push jb push mov pop icebp or imul arpl jbe pop xchg fidivl inc out and cmp call negl mov cmp je fdivl add lock push clc les test arpl or loopne dec repnz lea jno,pn lock add enter cmc test (bad) sbb adc push xchg mov mov sbb clc xor jb loopne sbb les pop cwtl inc cwtl fs arpl jno stos (bad) inc je out lods in sub dec adc fnstcw fwait stos mov xlat lret mov setns call pop and jb cmp lods ret pop iret (bad) aam cld enter bound ds daa mov gs testl or sub jecxz pop rcll mull adc rcr xchg mov sbb aas (bad) faddp lahf shlb dec dec fmulp push lock fistpll mov loope mov xor rol mov xor cmpl test and cmpsb cwtl xchg outsl insl cld push lret sub and test (bad) sbb inc (bad) mov into push mov (bad) ret dec mov ficomp push jge pushf or adc hlt or adc xor push ret daa mov aad inc add or mov and fwait aam jne insl add aad ss jg repz sub mov sbb std xor outsb pop jmp add rcrb sahf or jl sbb lock pop pop pushaw and aas jb mov (bad) in adc push enter add (bad) cli insl push movsb rcll and rcr mov xchg cmpsb push out adc scas push xchg xchg mov decb cmp jg ja push (bad) xchg mov int nop arpl lods adc test or vmovntdq jno cmp aad cmp leave inc and jg push pop pop inc push add add faddl imul jge cld dec and and pop fldenv xchg jns mov mov leave jae mov sbb jg inc lahf jle xor add stos dec fs sub pop xchg mov push bound or and push je cmp mov fsub mov ret ret xchg jl fstpt sahf sti cli and inc shll mov iret cmp and lret push adc clc cmp idivb out nop icebp xchg and insb push mov mov pop jge dec (bad) cs insb pushf inc add xchg aad ror (bad) jo inc push jg push adc cmpl xchg and (bad) popa movl test inc jae jle jno outsl xchg mov enter pop or sbb adc inc and pop dec mov loopne fistl mov and and repnz rcrl mov les dec cmp gs sub inc cmpsb adc mov adc xchg in shrb adc gs lret ret xor mov rcrb or cmp fwait lods xor dec (bad) insb cltd fiaddl jae push jne jmp sub aaa sub dec cmp xchg dec ds test dec mov pop imul int3 jne push sar jmp push jne shl sbb les mov icebp std jl cmpsl lods gs movsb or out mov (bad) repnz mov cs ljmp out rorb xor leave jg sbb in mov pop out arpl stos (bad) (bad) lock jbe sub cmp xor cwtl test ret loopne xchg add iret in mov mov lcall sahf out add ret fwait xchg out pop mov sbb clc and and xchg mov repz add orb fisttpll mov sbb cmp sarb (bad) push jns frstor push add lret cmp repz mov out jo add clc sub scas xor mov or jmp and int3 adc das push in mov loop in dec bound out sbb mov or jnp push loope fmull add in mov repnz cmp mov (bad) js inc inc mov outsb jno pop adc jmp add add pop xchg sbb ret xchg mov call je push push sti sub add and cmp adc mov mov mov insl jnp cmp (bad) repz cltd mov jmp cmp mov mov jo mov js push loope fcmovb loop xor add jmp aam adc push lds js push lock and (bad) pop (bad) dec cmp popa mov xor mov es movsl jg push aaa mov mov lods xchg jo dec fsubp popf jo sub xor jmp test inc xor add xchg insb mov mov stc inc push sbbb xchg pop frstor xorb mov xchg jle mov out xor or (bad) fildl repnz outsb rorb add fadds test cmp (bad) loope dec xchg lock xor or loop (bad) lea test in cmc mov mov cmp jge mov xchg movsl adc sbb scas xchg adc pushl inc push mov stos ret adc sbbb rolb push fild mov fnop dec inc mov lds lods enter xor std jns in push mov push fst cltd inc movb cltd fdivl add jo js mov (bad) aaa cmp cmp in or imul jns jo rolb clc jge bound cld mov jnp imul xor xor sub pop nop iret fwait add jecxz mov xchg ljmp xchg cmpl cmpsl imul mov (bad) (bad) test mov fidivr pop out or call mov or clc cmpsl inc inc and mov mov jmp xchg or sahf pop (bad) sbb push dec lock imul or sti (bad) lcall leave in test mov mov push sbb mov sub and mov mov bswap or sbb mov aas push es jbe subl push outsl mov pop sbb sti dec loopne scas enter xor push push push jge mov mov adcl pop jns aam (bad) push fdiv or inc fs xchg dec cmp push int3 into pop in push mov je mov pop ret mov hlt mov movsl daa out jp (bad) mov jg xchg es jae xor mov cmp mov sub int3 loopne inc sbb in inc adc xor mov sbb xor jle or clc push mov adc inc jo lea and sbb or pop arpl mov push sahf into xor mov out dec mov into imul jle and bound add (bad) cmp scas roll sbb scas maskmovq notl cmp mov xor arpl (bad) rorl cmp add test repz aaa fisttp xor jo lret pop dec or adc xor mov movsb adc lods mov inc inc fs nop adc dec adc add xor xor or push into aaa cmp cmpsl into js mov in pop push lcall imul add lea repnz xchg mov nop push stc xchg xchg aam sub xor aad lds sarb int ret (bad) xlat mov jg inc (bad) pop lods rorl cmp int3 dec fidivrl xor das popa daa add sbbl pop cli pop or sbb sbb fiadd push jns cmp int scas xor xchg xchg cmp pop mov addr16 les pop mov dec push or aad in lds sub imul mov and or fcoms ljmp pop and fwait push sbb (bad) xor cld lds mov ds je inc fwait ds rorb fmuls and inc ficoml out sahf out xchg mov dec popa mov mov pop daa je mov jge hlt mov mov gs mov rcl xor fcmovnbe fbld (bad) push rclb js adc add decb jp mov push fldl push push add jb,pn sarb scas call mov inc gs icebp dec xchg push sbb mov cwtl dec ret ja cmpsl (bad) jp mov mov dec or cmp and ret mov lds mov sahf and lret pop repnz repz mov cmp jae test testb push pop xor in out lcall push (bad) or call in sbb add fisttpl into mov jg adc lods mov jg rolb mov int hlt in loopne pushf imul iret mov xchg cmp mov or adc mov mov jnp mov fistpll mov push xlat inc adc dec mov imul (bad) in cwtl mov lock ret push aas bound sub or enter inc dec sbb ret lcall add loop (bad) dec pop mov pop or lret sbb xchg dec fs and lcall sub dec pop and into (bad) stos je inc xchg pop fnstcw into je sbb push xchg mov xlat dec repz (bad) mov fidivl lock ret cltd lods add and data16 cmpsl out jmp cli push bound arpl shlb rolb lret inc fldcw mov insl movsb inc jno mov xchg arpl repnz push sbb (bad) idivb pop pop cld outsl lods popf mov jb xchg dec or scas mov push jle js pop sbb les shrl sbb (bad) (bad) loope hlt pop jg in push mov (bad) or (bad) je out dec mov jb aaa inc ds sbb rcll cmp mov lret insb cmp pop mov cld js push mov shll repnz popf lret cmpsl mov jmp pop (bad) out daa nop sub xchg cmp rcl jmp push lods (bad) stos mov in cmp mov mov xor adc ss loope or and xchg insl push pop cmp divb std or mov lahf mov call out xor xchg int push ss jo and shrl sbb call mov xchg mov out icebp jne xchg jecxz pop bswap cmc fcmovnbe lret fistpll dec (bad) ss cli sub test push leave inc leave int3 mov test sub cltd (bad) pop enter sub push fcompl fidiv and inc push (bad) pop je xchg sub cmp and dec loop mov jnp js or jns,pt cmc mov or movsl data16 arpl popa mov jmp and outsl ja pop adc stos dec adc in mov adc adc (bad) pop xorl sub xchg cmp sbb out mov test popa lds mov (bad) rcl pop mov test bound mov push jo (bad) dec xlat sbb sub pop adc cmp push cmp stos pop jo jg push mov cmp cs int repnz into in pop fldt scas or rorb fidiv inc std mov call and nop jns arpl popa cltd fcompl jae adc pop cmp aas add push jmp mov lahf push ss iret or mov out in (bad) mov push jns fildll mov dec dec push sti sti push mov pop iret xlat lods jb out jmp shll cmp popf mov mov mov inc sahf es cli jbe jmp jecxz push dec lret (bad) hlt loop js xorl ljmp cmp shll lret mov pusha idiv mov mov jnp pop xor sub test ds gs mov push or inc mov std icebp das repnz mov out mov subl rcr fwait and (bad) jne jns sub inc push xor add es cmp jbe mov in xchg es xchg adc xor cltd cs mov cwtl push loope mov inc out popa insl imul (bad) jge js pop sub push inc loopne or lcall test inc add mov popl add rcl adc (bad) nop pop aam jmp push imul cmc jle mov or shr shrb or adc sti jbe xchg enter lcall xlat cwtl push dec dec lds out xchg sub mov out das (bad) out sbb jns fdivl jbe frstor mov lcall bound inc (bad) divb pop lcall jae loope lahf xor pop jne lret mov push insb mov cmp lea rolb in jge pop (bad) js push push (bad) lds cmp inc (bad) or jle mov mov sbb lods jmp dec mov jae in testl std cmp ror jle inc fwait add ret incl sahf add push mov pop (bad) or push mov jns loopne sub push sbb loopne cmp sbb repnz andl cwtl inc test enter loopne,pt xor inc movsb push mov leave mov out jb mov ret test adc cmp call or or mov lahf adc xor (bad) nop mov (bad) (bad) (bad) (bad) xor push data16 fistpll or xchg fsub insl test mull rclb sarb lret inc push lahf add repz lods and inc jge int sbb std pop fs scas cmp sub aam add je daa lock jno movl (bad) or mov scas fiaddl and sti int3 pop repz js adc popa mov xchg lock leave pushf jmp add aas xor fprem lret test movsl or pop cmc mov push test mov jnp pop insb jmp cmpsb xorl hlt jbe test xchg nop push pop lea mov jge mov call mov cmp incb (bad) jns js movsb inc mov andb jge movl pop cwtl dec test aas fiadd push push arpl fnstcw mov push mov data16 out iret mov into mov xchg lret scas setge int pop or xchg xor push or cwtl cltd jmp sbb ds ja rclb push testb out loope inc movsb ja add rcrb jecxz xor imul lods rcrb pop or pusha ljmp je sub add outsb and jo in test jg pop jns push hlt add iret dec ds ficompl ljmp gs and adc aad jecxz repnz cmp iret loope xor cmpsb test mov adc addb icebp push ss arpl test fxam xorl mov mov xchg mov fiadd je sbbl sahf cmp cmc mov (bad) out jnp sbbl pop (bad) ss (bad) dec lods rorl notl push lods clc inc add and cmp add sub inc in enter mov call push adc sbb aam popa mov sub outsl add hlt fist sub push xchg and inc and lods fisttpll sbb adc push or and (bad) sbb xor add je adc pop frstpm(287 and out pop jmp xchg jns std cwtl mov jne jne jne mov inc mov pop out ja loope cmp mov (bad) cs sbb fiadd xchg lock testb outsb mov iret add test push fiadd fdivrl jg lea icebp pop push xor xchg mov mov mov icebp mov ja jnp fldenv ret cmpl jo lock je mov inc xor mov leave add jl mov pop mov xlat add dec pop sbb push shlb (bad) mov ret rorl pop adc movsb imul jecxz pop sub ret fxch cs fimull in in mov pushf dec inc (bad) insl adc daa test sbb insb adc popf in outsb mov inc adc pop clc dec loopne xor gs fadds or clc pop lret push fdiv fdivr pop inc mov stos sarl push push and aaa add jg xor pop repz mov and (bad) mov or mov aas xor and dec hlt inc bound daa addl lcall (bad) sub adc mov pusha sub outsl addr16 cmc xchg incl jmpw inc repnz and bound and outsl push nop sub stc sbb xchg pop enter push fadd addr16 cld cmpsw loopne loopne repz stc push aad add inc add (bad) inc mov popf ss out hlt incb mov out in add pop sbb pushf pop cmp or ret loop insl cmp cwtl std in pushf outsl loop in (bad) cwtl jl cmp lcall jp dec into je (bad) ljmp and test xor cltd je mov scas int mov adc and jl cld dec pop decl lds mov or sbb mov pminub loope subl out and inc jecxz mov jno into mov cmpsl dec test iret lcall add outsb sub popa loop cmpsl orl stos mov mov (bad) push mov dec cmpsb ljmp stos int aaa stos cld cmp pop cld movsl or jge xor (bad) push fdiv xor and adc and dec push xor xchg mov shrl dec mov and rcrl or jbe and mov subps push mov pop push ret sbb lret in push sbb pop pusha jb pop lret nop shrb pop fistp lret js jge popa repnz sub xchg and inc adcb lcall pop pop cwtl inc sub out fs lahf loope addb (bad) loopne cmp xchg mov xchg mov negb pop pop mov movsl nop (bad) mov icebp sub cmp cmpsb xchg xchg clc loop (bad) and jp fs or push jl xchg popf jo cli inc sbb push mov lock mov and cmc sub fisttp (bad) (bad) cltd lahf mov imul xchg repz xchg mov or sbb out (bad) or push mov fisubl data16 cmp cltd push fbld icebp daa pop push clc ljmp call leave pop dec or xor fistl nop popf mov add cwtl in or push jno fidiv ss cmp cltd mov cmp js or mov scas (bad) and sbb push leave cmp lods lcall inc scas incb push cmp cmp outsb je int sub outsl rclb dec mov fs (bad) mov mov cs cli inc and ss loop and sbb jmp lea cmpsl lcall xor inc sub adc mov es inc pop cmp sbbl jne into jl push jnp jns cmpsb fsubs inc fwait add add loopne int mov push dec pop mov out sar xor mov repnz jns dec or fwait add add and (bad) and lret mov jbe add push loope daa mov or loope xchg fmuls dec insb cli sbb (bad) push sahf sbb sbb dec jno (bad) stc and shrl lret pop pop push jecxz sub sbb mov mov pop sub fs lods pop mov fs in inc mov into xchg aad pushf out xchg out nop jmp in movsb loope inc rcr sti pop movsb xchg popf and jae pusha push inc adc adc shll inc lea sarl cmpsb in add push daa mov addb sahf mov pop cltd movsl pop push incl mov cmp sbb out dec jp and xor mov xchg lret loope push cmp inc push dec inc std fs inc icebp in or jl je mov dec loopne (bad) pop lea cmovo repnz jbe shrb mov loopne cmp testl adc push cmpsw mov popl mov sub (bad) adc lcall fistp push (bad) xchg lods xchg nop and out xchg jno pop sbb das daa mov cmp mov mov jmp jo add scas dec mov movsl xchg adc push adc sbb into stos fnstsw xor mov arpl std sub mov dec and ficompl cs aad dec gs mov xor jns daa out movsb loop sub test sti mov stc arpl sub stos pop cmp jp cmp dec sbb mov sbb and imul js add mov add cli mov in dec gs jns test ja mov mov jp fiaddl dec adc xchg pop or rorl repz push (bad) and mov loop jp imul loopne adc mov dec movsb stc dec imul (bad) sbb mov xchg mov sbb in out repz test out pop sar ret clc imul xchg das rorl jno adc cmp mov mov idivb popf aad xorl push mov pop cmpb loopne pushf or shll xor cmp movsl pop rcll xorb pop push dec add cmp mov inc fmul inc inc leave int3 cmp ret jge out call jg imul mov adc fwait test pop mov xchg jmp xor scas and add mov pop stos mov hlt imul repnz lret push imul cmp ds sarl cmp mov daa mov mov adc sub cmp xorl jnp imul popa imulb sub and fnstenv mov xor jp sbb fild adc mov icebp inc enter outsb les push mov and (bad) js mov or into add xlat add popf or jg xchg adc lcall stc xchg test push sti rcll or in out clc imul pop scas mov outsl cltd ds jae jmp sarl mov xor fldcw pop jbe inc lods div aas test cmpsb mov ror sbb frstor stos lcall lahf mov stos stc cwtl push fidiv mov notl mov dec push jbe shlb pop int3 sub cmp enter mov sub adc call add mov pop jecxz pop cs rcrl lret push push movsl cltd jb scas in add cmc popa jmp pop mov in mov (bad) jg,pn dec dec out mov cli ret dec in cmp es jns adc add fsts push call push clc mov inc sub push mov aam fwait sub inc adc push add mov sub adcl pushf mov and outsb mov loop pop and cmp mov xor cli mov sub inc add mov outsl cmpb adc fwait mov xor out xor rep (bad) daa and push adc push pop lcall adc push insl icebp fnstenv lret shl iret mov add in cltd movl (bad) mov lea int3 lret jns mov push fstpl das popf les inc push mov mov dec push dec (bad) sub xor jge pop (bad) call jno push mov mov orb inc cmp mov adc pop sbb and mov push arpl inc dec pop push cmp mov cmp add (bad) mov fsts (bad) jne mov lods push out and or call inc xor push stos icebp cltd aaa jle fyl2xp1 in gs stc outsb sbb mov cltd push bound jns sahf out jge xchg inc scas inc add out je dec pop jl jmp insl mov int3 sahf sub xor dec add mov (bad) xchg addl pop sar movsb adc or (bad) push (bad) lock repnz xor dec push push lock fild sub and movsb shlb icebp std inc lock cli pop and pop push stc leave push mov pop arpl cmovp out sbb cltd lcall jb loope or jo adc (bad) adc cmp repz or fdivs es add mov gs xchg push add shlb rorl nop pop in jle lret sbb rcrl rcrl sbb pop addr16 cmp rcrl cltd or xor aas out or fdivrs pop push jp push push sbb jg scas ror (bad) adc lahf and add mov cmp test dec sbb ss lea xchg loop (bad) cs lods ficom mov pop push push xchg jne cmp cmc test xchg cmp fcoml sub cmpsl arpl sub add test and or sbb call mov xchg and xor js out clc loopne cltd cld popa movsl lods pop inc lods fcmovnb fistpll and out ja mov pop mov cmpb add xchg dec pop pushf (bad) adc sub shrl push jecxz repnz xchg in sbb in lods cs cmp or popa enter xchg icebp and push dec sbb ljmp in lods push jg aad mov mov pop cmp sbb pop jmp add sub subl inc ljmp adc sbb jb and loope fwait cs out fdivl xchg sbb clc test xchg mov cmpsl mov addb js cmp jl cmpsl test iret cmp mov inc loop or outsb gs and popa (bad) cmc xchg popf popa sbb add and jno pusha jb lret push sub mov in clc fisttpll dec cltd and mov mov outsl arpl cmpsb lahf loopne lret ret mov mov mov pop xchg xor adc (bad) mov (bad) mov shr popf jbe inc insb ret out (bad) cld sub or aam fs mov mov test mov xchg mov (bad) xchg lods jno addl movsl pop pop sub adc leave repnz jmp icebp and push lcall push (bad) into adc popa sbb pop adc add push addb test (bad) into cltd cld mov ret (bad) out mov cli cmp inc sub fcomi adc sarb leave shrl arpl sahf popa fcmovne push pop and push mov sbb mov dec out jmp dec stos mov sbb mov jae icebp pusha out cmp test dec out scas xor xor jecxz push (bad) mov cmp mov jne decl xchg cltd fimul push pop pushf cmp cld pop jle mov sahf test aad mov incb sbb movsb int enter and scas and push cmp mov fistp adc sub pop int adc dec jnp insl sub test clc mov mov jbe or pop clc xor jne mov xchg aam test cltd lods shrb ss pop add es (bad) inc xor dec std pusha mov jecxz scas fnstcw pop mov into ljmp push gs and gs test dec inc dec jo add pop jne xchg jno inc mov fsubrl jle push mov sub cmp jl sbb sti std out sbb repnz push mov inc add dec enter hlt pop cmpsb popf (bad) mul and imul dec mov sbb pop outsl pop adc cmpsb dec dec inc pop jecxz cs mov imul lock jg cmc ficompl cmp imul push lret pop xor sub scas mov std mov mov fbstp push and (bad) sbb push jnp (bad) cmp lea sarb jp les xchg sbbl lret xchg shl addr16 hlt aas pop or cs inc test adc lret push adc out (bad) dec aad xor ficomp mov mov (bad) sbb mov dec outsl add fstpl sahf movsl lahf sbb lcall clc xchg mov sub mov rcl mov and jg jno xchg fmuls inc jnp push xor pop test sahf lea cmpsb mov aas (bad) cmp mov movsb sbb fistpl cmp aam in ds inc rcrl mov mov adcl xor mov jle mov fildl xor and insb stos out and nop cmc xchg and fnsave or aas mov jle (bad) dec sub mov jle jne mov cmpsb mov mov gs pop cmp cwtl cmp fldt xlat jno or adc pop outsl int3 (bad) repz fs pop dec popf out fwait into sub stc cltd adc add insb xchg pop lcall sbb mov data16 jne inc jo hlt es movsl mov xchg mov mov fwait lea push sbb mov pop push push fnstenv std inc loopne inc xchg ja mov out (bad) push insb push lret pop insb mov xchg rcrl (bad) dec adc outsl (bad) sub lret pop push jns xor sub push out cmp and cmpsl mov mov lret (bad) adc and pop sbb mov xlat mov push hlt fs sub sub xor push sub jmp xchg in lds push pop lods lds cli lock dec addr16 push ret xor lret call push loop push adc mov jmp mov push movsl inc ds dec jmp mov sahf scas pop test mov insb cmc pop rclb lret mov mov jge das mov jl sub fidiv cmpsl adc or nop (bad) iret test pop (bad) and xlat stos test jecxz notl clc adc ljmp ljmp hlt jg push lock scas in cmp jp dec mov cwtl mov mov jmp add das mov pop pop fwait ret push popa addb jne and xor cwtl xchg jns pop lret pop jge xor add in jp dec insb sub (bad) lcall js mov fnstenv pop sub add fwait sahf lds (bad) jnp adc leave cld pop pop sub (bad) sbb mov mov fimull dec test mov pop inc fildl adc jb in inc pop out push fstps or stos dec mov inc (bad) mov int call add (bad) xlat add xchg icebp pop mov add xlat arpl ds or pop clc mov xorl xor test add mov pusha pushf mov inc pop int3 mov scas bound ffree push pop shl cmp xchg xchg imul or std sahf lea mov dec mov xor mov adc pop repz cld add imul (bad) scas and pop jle pop xchg sub xchg push fildll xchg pop iret xlat mov dec in test enter sub aaa mov lods mov ret mov mov jle sbb call aaa insb pop test shrb add rep or mov xor lods fisubl xchg fisubrl push int3 jo (bad) mov sub jb (bad) daa add jecxz (bad) out jae and xchg pusha std call je cli sub push or loop cltd shl mov (bad) lock pop or cs je mov push or test sarb add cmp cmc push les rcrl (bad) pop out sub jno fs outsl js add add add scas xchg mov inc (bad) (bad) je pusha mov jbe mov dec (bad) jbe mov adc mov mov xchg push cwtl daa mov imul xchg iret adc imul mov pusha lcall (bad) sub mov jge fsubrp mov aaa xchg push aad jmp fnstsw xchg icebp imul lods cmp inc push cli sbb cs scas out out and pop push std shl test or xorl test adc das cmpsb dec jne inc roll mov js push dec or sbb in dec add pop leave jp mov inc rsqrtps lahf test ds and mov loop cmp mov dec loopne or cld and cmpsl lods mov sahf in fdivp jg repnz lret inc gs inc or pop add bound imull sarb and xchg imul rorl adc aas es movb popf leave dec sub push shrb xchg dec xor cs in inc ljmp pop push jno movsb mov icebp add imul push jl xchg jo (bad) dec bswap push sub (bad) xchg cs (bad) cmp test xchg movsb fdivl test mov insb out inc ss in dec add push scas and std test arpl or scas jae das add fwait aas lret (bad) (bad) xor sub jl bound (bad) cmc test inc cmpsl cmp lock cmp pop add pushf and (bad) (bad) pop in loopne sbb std stc push pop mov jae sub imul test fsubr push leave mov addr16 out loopne sahf sub mov movsl cmp sbb inc mov insb pushf xor sarl xchg pop jae jnp pop and mov mov dec push cmp xor mov adc outsl imull push add into ret sbb (bad) mov add push mov cmp test mov lods lds ds (bad) pop add mov cltd mov or mov scas inc xchg aam xor outsl stc repz dec add ja mov pop notb push daa insb repnz push push mov pop lcall daa out add imul (bad) jge fidivrl cmp out (bad) imul dec mov or cmp popa sbb and adc cmp dec aas xor push fcoms loop sub shll pushf rclb xchg out or adc jb adc out mov pop fisttpl daa lods ljmp mov shlb mov adc or xchg fwait push in pop add js adc and (bad) neg lods add sbb and add shr (bad) add mov shrb push push push jbe leave movsb add dec adc push (bad) sbb cmpb js cmp sarl dec cltd scas lret sbb mov push pop imul stc jns mov jl ret enter jge icebp (bad) ja sub push adc dec in stos pop mov jne mov jo (bad) bound xchg or repnz repz push add mov jl (bad) mov cmpsb mov mov les cwtl test negb out inc or xor dec sub bound repnz push stos into push lock cmp pop dec dec lock xchg pop inc scas mov or inc dec shrb repz mov mov ss iret lods ljmp cltd lock xor xor inc dec out inc int ljmp jo call inc repz addr16 push push gs push mov add pop push sbb jnp mov xor aad test popf ret pop xchg xor lcall push inc lea hlt fmul ljmp les roll and xchg sbb mulb negb btr int3 jp inc movsl lea fs stos aam xor iret dec ja arpl call and mov adc add lods dec addr16 and addb xchg adc (bad) xchg mov popa xor sub push cmpsb fnstcw inc inc mov lcall adc stc arpl dec jecxz fiaddl insb push ret mov inc and jl xchg (bad) push cmpl inc clc jge (bad) xor test (bad) ljmp ss test jbe sub popf add clc jp (bad) sahf jecxz outsb push fidiv sub jbe adc fild test mov xor aad jb adcb pushf in inc (bad) xor in cmp mov (bad) xchg mov out inc mov or lods mov push mov out sub sbb push xchg pop out and pusha mov scas push lods mov xchg in inc das gs dec fstpl jno lea sbb fildl mov jnp call jae sbb (bad) rclb and lock mov mov inc push mov mov gs loope sub std and daa add ficompl and cmp ss enter xor aam xchg dec in pop pop fs sub cmc imul mov (bad) aaa inc sbb xchg jnp push test cli retw nop test rclb mov daa sub mov jnp inc ret aas xchg lds cmpsb mov mov rcrl sbb icebp (bad) cmp das sub inc inc pop mov mov mov inc mov xchg jl repnz jmp sub hlt ja sub inc adc sub movzbl shrl scas fdivrs movsl in out and aas (bad) cmp mov (bad) lock fwait adc out (bad) mov sub mov jle jge or movsl pushf in dec jle add (bad) icebp dec xchg inc xor adc pop sbb std push aad ja hlt lds sbb push sbb jb mov (bad) sbb pop pop xchg icebp subl sbb jno mov inc pop out dec jl pop ds lea pop fwait inc sub das sub outsb (bad) sub cmpsl lcall sub sub fldl pop (bad) js mov fwait push mov std loopne mov decb dec mov notl or (bad) pop add xchg cmp fwait xor sub push pusha sub xlat push pop pop cs sub lcall jmp xchg out jbe jb repnz xor out xchg dec mov xchg rorb push rolw jb and aas cmpsl lahf xchg ret repnz jbe lods jno push aad loope push sub aas ret mov rcl (bad) leave sub xchg dec mov leave and (bad) aam movsl scas mov dec mov rcl adc aad shll ss pop aad ret enter arpl int push cmp cli add and cmp jg or push loope add addr16 mov or cmc add push in test push adc (bad) xor fldl fmulp pop xchg pop xchg jge pop movsl std inc nop jecxz clc inc mov xchg sbb idivb inc sbb push in jmp adc clc mov dec pop xchg jge fwait leave and insl mov cli cmp jbe add (bad) jno or or lret cmp push inc repz sarl jge je sarb movsl push sub and icebp cltd xchg cmp mov lcall pop push pop cltd enter in es fcomps jo jg push fsubrl out push jl ret xor in mov cmp shrl cmpsl fnstenv test and inc fisub push call jle nop adc or xchg mov jnp fwait into or cmp seta jne idiv pop sbb lds mov (bad) lock sub pushf jg jbe rclb cmp pop cmp fs add cwtl (bad) adc jae out sub stos cmp xor add popw lea inc jmp sub mov into aad negb jl sub mov xlat pop fwait pusha outsl xchg push push sarb neg lods jns push and stc stos jecxz cmp mov (bad) dec aad push insb iret gs jns jne movsl jbe cmpsl push mov sbb cmp pop jbe push (bad) movsb out loopne mov mov add sub cmpsb mov or push outsb clc adc xchg or xor pop lcall jns jae pop (bad) shrb fnclex repz rclb xor cwtd je pop cmpsl stos pop mov jle mov mov stos iret ss lds out cmp repz dec add lods popa push mov das mov cli fistp cmp fsubrl xchg pop ss sub fisttpl jge andl add je inc test push lods (bad) outsb hlt jg scas dec sti fiadd ret cmp cli add push jno cld sub pushf sti cmc or test fisttpl add lea icebp mov leave add imul imul pop stos in xchg fadds in mov data16 push or les pop adc popf out loopne cmp ret pop lods imul std cmpsl or jp adc jmp lret inc xchg je xor push mov mov sbb (bad) aad call cmpsb daa lea test pushf call out cmp xor and (bad) negl lods (bad) mov xlat stos push icebp jno cltd fnstsw out pop push sahf popf cmp xchg mov bound push sahf js mov xchg xor enter mov out loope cmpsl jnp leave int xchg mov pop cwtl enter ficompl mov gs fbld clc cmp or xchg incl push mov ljmp jl jbe add repz int or or sbb mov xor dec cwtl (bad) mov cmp cmpsb std aas dec xlat dec mov dec jmp lcall mov xor jmp or mov push sub lcall jne dec repnz (bad) lret cs lock test fsubs ja cld ljmp add call bound sti addl daa mov lock cmp inc push test push add mov imul jg outsl push lret loope cmp fsubl xchg add add mov fsubr jg xchg adc jle daa xchg inc mov dec mov sahf jne push xchg ret insb xlat subl dec and call mov rcrb lret push jge (bad) dec sub mov cmpsl sbb arpl mov adc out pop in arpl mov das cmp clc mov in insb push jl jbe mov repnz in hlt sbb jno push inc push jb leave mov cli call test icebp pop iret ljmp aaa pop int3 and fs and loopne fistpl sar cmpsb push dec inc push aad push mov shll sbb divb gs mov push movsb test hlt testl cmp xor mov pop gs lret fcmovne insl push stos icebp cmp or outsb stos and cmpsb sbb (bad) out aaa sarb pop and push lea out xchg and xchg pop cmpsl rcrl rorl pop (bad) mov dec adcl stos adc mov and xchg clc inc mov cli mov and outsb cmc mov ja out xor sub int3 loop js hlt mov jg adc stc mov xor stc sbb adc jle inc rcrb enter shl mov cmpsl inc lcall sbbl pop jmp fwait cwtl test mov insb into cmpsl ret sti mov ljmp push lahf xchg push jb xor push cmp xchg fdivs popa xor aaa repnz xchg xchg test aad inc fwait cld fisubrl dec jbe and stos xchg jle fs pop lret pop pop sbb xchg in cmc sub mov sbb lods push stos dec (bad) mov mov into subb pop cmp bound pop jg xchg add cld test iret mov sbb in sbb sbb enter xchg out adc call arpl or scas dec mov mov dec clc jne lods leave mov gs loop test mov js ds outsl lret (bad) push jl jg sub dec inc je in sbb pop pushf cmp sub mov xlat out ds das aad mov inc out sub cmp pop pusha ss dec or mov cmpsl cmp (bad) stc mov pusha lods stos xor insl fs hlt xor and fisubl (bad) pop inc inc dec cli adc (bad) mov inc mov pop sbb (bad) xchg xchg push inc idiv xchg cmc jae jb push xchg dec mov sbbb xorl imul faddl push lret jge push das ud1 outsl xor call imul adc inc xchg int3 or adc sub test lret xchg sub mov mov jg cmp sub pop fiadd cmp rol mov fs lea mov or out xchg leave cmpsl ljmp fcmovnb xchg (bad) xchg dec insb mov (bad) int stos and jecxz cmp pop adc sub daa inc xchg xchg fwait imul sbb mov jl ss jecxz,pn mov dec xor xchg data16 dec and sbb mov sahf jno adc jmp pop (bad) xor push pop mov and xchg repnz dec mov xlat pop es inc xchg cltd jg dec fwait arpl jbe je roll adcl dec jecxz push pop dec push in adc push mov ljmp dec fwait mov ja add aad jae lea jl dec andl stos (bad) andl cmpsb xor (bad) pop xor aad jp inc mov adc sub subl ss xchg dec jbe push andl xchg data16 imul pusha adc mov sbb mov add faddp in enter (bad) or popf adc idivb xchg adc in inc adc jb ficom cmp rol ja push cld test pop lds insb in add lahf push mov pop (bad) pop mov out push (bad) and lret movsl dec ja enter mov gs push (bad) or push sbb pop jno int add dec fmuls mov in scas ljmp bnd jl mov out cli jns in cltd das push aas or in rorb neg movsb inc mov aam jb cli test jb insb push adc loop fidiv jecxz in push push stos mov test out dec cmp loop push xchg mov nop scas fisttpl cwtl mov lcall dec orl rcrb fistpll (bad) and add jno jno mov mov int3 hlt cmc mov pop out ljmp jnp mov jmp mov pop loopne mov sbb arpl inc cwtl xor inc icebp iret adc les movsl cld sub popf add fsubl fimull jecxz imul js jmp add xchg inc push xchg xchg jb push pop and gs mov adc fstps (bad) sbb or pop push jg push pop inc add popa xor (bad) int jg adcl int3 mov movsl jmp aas xchg fistpl ds dec cli (bad) ds out pop gs test push adc or sbb mov and jb sbb mov lcall xchg into lods sbb lock xorb (bad) mov pushf rolb and add lea xchg stos in push notb pop push insl inc (bad) pop sbb xchg stos pop sbb jo daa adc or xchg das iret cwtl (bad) rorb pop cmpsl push mov push stos mov insb call loopne push popf lret mov dec dec add stc mov sub lcall and dec test pop (bad) push sub rcrl push pop dec test pop movsl xlat aaa fwait movsb out xchg testl (bad) and push mov adc sub lcall pop loop jns pop shrl and or or fcompl loope inc loopne add arpl xchg jge hlt mov sub sbb (bad) negb movb adc inc xor xchg jno mov xchg cmp cmc aad nop pop xor jnp sub mov andl push cmp scas pop pop insb repz or inc jne rcrb jp sahf and jmp pop add nop cmpsb inc xchg adc sub inc jle imul insl inc adc add outsl mov lock ret in push cld add push inc fbld dec imul loope sub cmp ss stos orb mov sbb sbb sub cmp lea sbb add rcr cmp outsl hlt mov add add out mov jne jne (bad) leave dec dec jne push movsl push stos ja test sbbb push add adc xchg push add xor jge movsb jmp les (bad) lods scas fwait jns mov cmp sub cmp mov cmpsb pop das sbb adc out sub jmp xchg dec inc sbb mov rol mov mov lods pop pop xchg aaa sbb xor in orb push in push jns int3 sub adc jecxz xchg aam aas lods dec jo mov repz imul mov and jo cmpsl mov pop push push rorl push repz push icebp inc into xchg sbb test mov lock cmc xchg rorb push ja sub jmp jp xchg imul cmpsl in cmpl mov add lsl jl fisub push jno dec inc add mov pop aad popf mov jbe (bad) fcomip (bad) dec xchg dec xchg stos pop ljmp cmc pusha out adcb xchg pop jo mov out pop xchg shll stc sub cmc push xchg lea fs mov dec fistl jbe xchg push (bad) cli or mov cs jge imul xor cmp sub sbb loopne mov pop mov ss fmulp hlt jp mov cmp pop sarb inc lock das push mov je jge (bad) sub cmc mov xor push add inc inc xchg rcrb popf aaa out add gs js inc mov lea cltd mov les mov xchg call pusha xchg mov pusha mov mov mov mov repz xor cltd (bad) jle cmp mov lock adc or mov mov adc fisubr int xor or nop std and add out cmpsl inc pop sub add sub pop lock xchg in mov and push cmpl add pop xor or inc and es and xlat mov jle testb popa test popf popa mov push or sub insl jns add sub (bad) or out ja in arpl movsl mov push fstpl and test inc (bad) daa inc (bad) jae test clc test repnz add push (bad) mov outsb insb cs xchg adc sub idivb jne jnp or and and mov jb adc xchg jbe jne in les pop push mov rcrb jl inc js pusha lcall fisttpl xchg dec mov nop shr mov aad mov lea push pop or push xor loope jne in pop loop int3 arpl and push inc aaa and icebp jno xchg jmp aam sbb in mov cmp (bad) jmp jge popf pop mov mov (bad) in jbe hlt sub rcll xchg sbb mov divb xor ret vpshuflw push (bad) int ljmp popf je outsl pop mov add (bad) jo enter call jns push es inc adc add cli pslld imul (bad) xor xor and outsb (bad) shll paddusb scas or lcall nop (bad) (bad) or sbb popa insb push cli push pop bound cmp lret mov jns mov fistpll loop ret sub (bad) pop sub clc jae movsl shrb (bad) adc dec mov not (bad) push pop xchg mov add jne flds lahf out stos push push imul out push xchg add stos cs jmp cmc fadd popf add mov out mov or pop clc cltd cmc ret add test push mov addr16 lods xchg mov (bad) cmpsb sbb addl cmpsl add jns inc nop push xchg insb cld mov ja jne jae pop test repnz arpl xchg add scas fsubrl mov dec jge xchg pop adc sub roll movsl movsl jl imul stos cld fs pop clc cmp das addr16 sub addr16 xchg test clc push xchg push in mov xor out add pop inc sti inc aam enter xor add pop inc pop aad pushf lcall test iret sti lds dec movb les xor sbb cmpsl mov addl (bad) enter inc cs or das insb pop out outsb xchg sub pop ds addr16 popf rclb cmp aas push or cs adc adc imul fstl lods pop cmp test (bad) xor enter or cs sahf mov dec lods or adcl mov push jae js push mov xrelease adcl mov mov dec push icebp cli cwtl jnp pop add sbb sbb or stos jge xchg mov xchg aaa cli sti hlt adc xor xchg cltd pop mov data16 xor shlb movsl push outsb jg mov pop xor push enter jge push loop popw lahf push je cli xchg mov mov add lret sub mov sbbl mov jle fsubr sub mov mov mov dec dec adc (bad) jne les fs sub add sti sbb rorb mov (bad) adc sub test and fiadd fucomip and xchg sbb mov push clc xor or cmp add push out jg jg mov out fs mov push mov pop test movsb jo in inc js fisttpll mov xor ret jecxz popf mov shrl fldcw (bad) jl sub in sub lret adc iret daa insb cmp les lahf bound (bad) mov ret xor scas fadd sbb mov mov out (bad) xchg iret icebp pusha mov aad in mov and movsb mov lret mul in mov pinsrw xor jmp dec adc lret dec pop lret fnsave daa push cltd adc inc mov adc mov stos pop test or fiadd jno stc in int3 inc xchg movsb arpl in dec sbb frstor mov gs pop push add js inc data16 pop aad xchg cld insb loop sbb (bad) divl lea adc xchg push xlat pusha xchg mov mov jecxz mov pop cs cmp xchg (bad) fwait leave pusha adc add out popl pop out stos inc push imul je adc dec sbb xchg in pop fcoml or cmpsb stos xchg outsb push or inc call and and mov arpl mov sahf jo mov jo cmp imul mull fucom loope xchg inc out hlt mov pop and inc in jecxz loope pop mov out test push push xor fwait outsl cmp call dec test jnp mov xchg jg sti add jg sub cmpsl iret inc es cmp push mov cmp icebp cli fcoml add pop jle gs ds dec stc in jl xchg and pop dec add pop push jbe jb push mov sbb mov or push ja mov cmc push ret pop xchg jno xchg push es mov mov dec nop cmc lahf adc lock mov enter add jmp xchg (bad) ds ljmp fwait add inc jp rorl dec imul adc xor (bad) fstps mov pop sbb (bad) fwait push add out daa jb jp push cmp xor hlt stos dec jmp out loop mov xor xchg inc icebp or sbb pop shrb jbe lds pop mov hlt or push or inc xor lds sbbb gs sub xchg dec mov xchg jge in ja cmp mov test ja stos cmp sbb or sbb jmp jo sbb shrl mov mov insb ret cltd and mov add adc sbb (bad) js push lock jo lahf test loope sarb adc or cltd and or cmpsl xor jmp xor cmpsl or or lret or mov sbb cmp lret outsb bound mov hlt jp hlt or iret xor in imul leave into push pop cmpsl mov in (bad) hlt add add in mulb cmp fcomi push stos dec out ss and xor fs test adc addr16 pop sub lret xor pop repz mov pushf mov dec out (bad) clc test arpl or fstpt aad pop push push mov mov push push sbb das push (bad) subl sub lahf mov dec mov aaa clc or xchg pop leave popa pop dec pop outsl adc push or mov aam daa jnp sahf xor cmp cmpb adc cmpsl xor xor in fcomps lret scas cld inc out dec mov pop sub cmp push ds dec and add pop pop in das stc lock cmp inc mul into adc dec pop sub mov iret popa inc out xchg mov fwait and adc jae ljmp es mov and movsl xchg xor rcl mov mov add stos mov xchg dec pop (bad) inc sti push xor push sub mov movsb jecxz sbb dec mov test mov dec or ret cmc xlat scas mov lods ss pusha sbb dec dec clc std sahf clc xchg sbb push mov cmp lret add jmp jp xchg pop pop jne outsl into aad mov jl adc ret jecxz test jmp or cmc jno cmpsb and jl sub cld jmp inc jmp out ljmp push dec pop fnstenv das jnp mov jl addr16 dec ja aas ret in sbb es and mov das jne aad sbb into movsl lret das popf xor mov xchg adc fnstsw fwait xlat scas adc sub ficompl pcmpgtd mov ja cltd mov bnd sub lret (bad) pusha fiaddl pop test aas sbb adc push pop (bad) stos ds xlat data16 lahf enter sar mov test pop pop push cld or cld pop xchg test out ret cmpsl inc mov pop push jns cmp push pop js mov push seta (bad) cmp mov mov fisub fwait and adc cld mov mov jg (bad) or cmp inc pusha andl add jmp outsl mov (bad) hlt sbb out xchg jge stc dec (bad) mov fs outsb lret push pusha arpl ret dec popf jl roll add mov fistl xor xor (bad) fdivrs out test adc xor jmp aam in mov push dec add lahf nop mov jmp mov sub out sub and mov mov xchg jb inc jge xchg dec lock jnp fild ror das adc ljmp loope mov call fdivs mov fadds lea (bad) cmc loopne imul loopne mov pop sub jmp jne aaa notb mov fisubr push (bad) xchg xor enter mov lods push lahf iret in pop add bndldx fdiv cmp lret imul dec aaa clc push std sub mov add adc cmp test adc pop mov jae xchg lcall jo scas and xchg fimull inc mov cmp mov bound aaa dec sbb pop int cli out scas insb mov push fidivrl xchg cmp or mov rolb or fisttpll fwait (bad) sub rorb js push add xchg jae sti cwtl popf sbb mov xor int mov mov mov add push test int mov adc insl sub dec xchg sub and cmp cli xchg ds data16 ja cmpsl lea fsubs frstor in lods clc nop rclb stc cwtl jmp jb mov out push adc rol sbb jne int (bad) xor push or cmp jmp stos pop push pusha loop fisubr adc mov orb mov sarl cmp mov (bad) lahf je mov in out cmp sbb aam stc (bad) sub push gs lock sbbl ss and cli movsb jne sbb and jnp inc stos adc test cld mov jnp and adc jno sub inc daa push sti jmp pop popa mov cld dec xchg mov movsl outsb outsl pushf cmpsb sahf repnz enter xchg testl push mov lahf or cmp dec xlat decb mov push daa sbb aad sub scas lcall xchg pop enter popl enter jg in mov call dec jns xor pop roll subl adc cmp or imul dec add addr16 ret inc xor sbb test push or sub xlat addr16 imul sub add in mov pop and sbb arpl por mov mov mov pop orps iret adc (bad) mov ja xchg dec (bad) cli adc push cmp pop add rcrl call fmul in adc lcall lret add or std jge mov xchg mov iret fldl movsb insl or push dec mov cmpsb repz stc and push mov loop in cmp inc xchg rdtsc mov nop (bad) pusha iret jecxz scas adc xor fmull xor dec pop scas jno pop mov sti js mov loope enter mov lods mov je rcrl cmpsb and or sub lds ljmp xchg xor add mov sub bswap leave mov lods pop pop mov push test pop clc test or les mov jp fsubrl inc insb mov sbb dec jno or mov outsb ret std jnp sbb imul lods cwtl ret pushf ja fisttpl (bad) pop das aam imul out jno fdivrs imul mov mov add test jo out inc notb addr16 aad dec or fidivrl shrb dec mov inc pop loope pop out imul (bad) mov in mov outsl dec add nop pop daa mov fsubp mov cmp mov daa inc inc (bad) push test pop dec push sub pushf push (bad) jge adc jecxz fistl test sub lahf (bad) jb faddl add pop inc fmull mov xchg hlt cmc push ficoml addr16 in inc push push out pop mov ss lds insl lcall sarl mov pop cmpsb cltd (bad) popf jae rorl or and sahf insb (bad) repnz xor sub lds xor inc test iret (bad) aam and inc pop mov int3 dec mov leave xchg mov lret inc sub sub ljmp mov aam (bad) rcrb jno xchg ret add rclb shr adc ret and adc pusha imul sbb xlat sahf xchg scas pop out dec (bad) ss sub clc sti out aas mov lea push sub ficom add movl fadds adc cld movsl mov inc cmpsb in cmp (bad) in sub rorl movb f2xm1 jo hlt pop xor mov jp stc das and inc fisttpl hlt outsl pop (bad) out mov jae ret xchg mov lods mov test ss in jle pop enter xchg imul sub sbb imul push cs inc loopne loope scas dec ja push loop and test ss in pop nop incl xsha1 cmpsb or out sbb pop or xchg jge daa cli stc lret cmp pop jge add inc icebp es and (bad) mov mov push dec addr16 aaa stos jge pop scas push cmp mov pop pop subl cmp addr16 scas outsl in fidivr pop repnz stc push stos sub dec push mov mov sbb cmc js or jno and je,pn xor adc sbb orl mov or jnp cmp inc cmpsl sbb adc and mov add push mov cmc inc insl ret out aad into out sub aas es data16 loope outsb adc push mov frstor movsl dec jg pop mov or mov sub bound mov mov pop add mov cwtl inc cwtl xor mov inc lret loop mov imul pusha pop mov mov out lahf (bad) mov jnp mov loopne fwait aam es rcrb sub sub addr16 ljmp add scas cmp mov mov jno jecxz movsb mov mov out outsb sbb inc push outsb push push mov dec fwait enter mov sub mov (bad) call adc add ret mov jno insl sub jno leave and in lods push xchg movsl mov sub test stos xor or ret (bad) je adc test mov sbb pusha cmpsl ja mov mov (bad) jmp outsb push ret fisttpl push pop test enter cmp and jl leave fist fisubr xchg loop pusha xchg jb outsl xchg decl cli add sbb lds outsl xor cmc pop inc test mov clc xchg cmp xchg xor aaa mov mov out xlat arpl scas data16 jmp imul ss in aaa add dec push push add ds ljmp (bad) mov movsl enter cs sub ss jp in pushf mov mov (bad) add movsb je mov or stos pop jg dec mov jns mov dec lds mov ss or lret mov or int mov pop in xor sbb nop fs cmpsl dec mov push mov dec inc call leave roll decl jl xor cwtl sub xchg ret (bad) fistl aas fisubrl pusha mov mov xchg push daa add inc lret sub mov push cmc jmp (bad) mov aam xchg cld orl push cmp sbb or pop mov add les mov imul rol add xchg pop mov cmpsl adc xchg arpl imul loopne push ja push in jno stc ljmp jns sbb mov loope inc inc xchg jae clc jae or xlat fucomip loopne mov mov lcall xchg dec int3 pop test mov cmp sub out andl xchg xor inc sub lds cmpsb fcmovb mov lret pop pop lret (bad) adc cli jb mov cmp push adc inc or mov enter adc mov mov ret jne add test push jb out jae lock or or pop mov ret xchg inc inc (bad) cmp pop out add mov jbe mov jo iret mov lahf push push aam repnz cli je lods xor (bad) fmull sahf pushf xchg inc push inc jl inc or adc repnz pop push in sbb xchg adc les jle push ret mov movsl imul (bad) mov repz cwtl push (bad) (bad) mov sbbb xor pushf fistpll popa cs sub inc mov test adc lret mov jecxz jns mov or aam shrl sar (bad) icebp test (bad) stos xor or cltd int es in mov ljmp in xor outsl pop enter add adc mov mov jecxz hlt mov (bad) jg movsl or cmp jg adc xor (bad) fistp mov add mov xchg cmpsb rclb inc cmpl inc ret data16 xchg sbb mov push mov test aam data16 repz sbb and dec not inc lcall jmp sbb int push out lahf gs stc pop lss sbbb add xchg std adc lcall jp mov xorl loopne sub ss xor inc js out in or cmpsb dec iret loopne mov movsb dec adc push iret into fcompl int mov dec test adc subl mov movsl enter loopne std mov dec inc int outsl loope fldl (bad) int test mov push loope lcall loope dec or mov mov xor int push jl stos xor pop test fildl jg and je rol jl cwtl cmpsb pop sub jne stos (bad) cld fist push std test (bad) repz and aas push and push mov push mov push sbb fimul andl pop clc movsb mov lret (bad) out mov fwait jl inc fs ret les (bad) clc (bad) mov lret popa or adc fwait clc imul mov ror cmp mov adc ss fbstp push jmp pop fwait push xchg pop cmp mov inc jp push jmp and insb mov pop adc cmp shrl mov push mov pop fwait push int lret ss imul dec mov jbe pop repnz cmp mov (bad) arpl idivb sbb adc xchg ffree pop dec push or call (bad) fisubrl (bad) sbb cmp push mov sub mov stc fsts rcll (bad) cmp sbb imul arpl push fisttp add xor icebp jmp adc inc popa adc jecxz xor lea mov pop repnz out pop cmp push xchg jl lods xorl out sbb sub add iret repz xorb call outsl int3 into lock inc test scas jb push les stos add into repnz push in mov aam out jp xor pop mov je fadds pushl out adc pop jge addr16 mov xor shl ficompl popw clc push in and dec clc scas mov push dec add add pop cld push sub adc jns int lods jecxz sub or aam orl popa iret iret push adc std lea add pushf jmp ds adc push push jnp sarl jnp jmp inc iret inc pop lock pop add cmp addr16 fwait jbe call mov mov inc fwait push push cwtl vminps fcomps jg aad negl cli xlat jne insl sub rcrl and push pop nop mov jg xor das sahf xor enter das add (bad) adc xchg lock pop push mov pop lds xor out push pop mov ljmp cwtl (bad) std adc cmp (bad) mov jo jno jnp xchg cmp aas sbb mov popa hlt pushl inc js xchg mov xor fcompl mov inc cltd mov xchg mov decb pusha popa add mov fldt add aas sub mov xor mov cs std fnop mull dec data16 jbe movsl in out mov xor dec cs outsb mov stos out (bad) faddp mov mov mov push add push pop mov loope sbb mov ljmp jge jl mov testl pop dec shrb lcall aam cmp into into cmp rcll scas adc daa shrb jbe negb movsl or jle je dec mov pop test push rcll sbb aaa fwait and addl sub daa pop fisubrl jecxz dec fs push push xlat cltd jb sub xchg lret dec cmp mov pop dec lock jns and cmpsl jp add or jl inc jbe mov imul inc lods rcrb jmp mov lret mov pop sbb test por (bad) and iret (bad) (bad) lods mov sarb ret cltd stos xlat push imul xchg ss xchg pop and and int3 imul jb sub das pop loopne mov aam aas mov pop adc inc cmp test neg ret mov inc cmp (bad) jo mov push dec dec dec sub mov fistpl mov add loopne jae xor out cli lret out ds push scas add hlt in fwait xor hlt scas add (bad) lea aad nop xchg xor lea and xchg es fstpt adc sqrtps sbb inc out addr16 and pop cld dec mov cwtl leave (bad) repz aam mov push jo mov std sbb add adc mov jo push call push mov xor out xchg cmpsb adc or cwtl mov stos sarl mov mov or xchg (bad) and (bad) pop shrl outsb enter insl or data16 scas fwait cwtl mov push daa inc and mov and inc mov rclb js pop movsb sub fiadd inc xor imul fildll xchg daa insb dec insb mov test mov mov setno sub adc es push lret mov outsb clc adcb inc icebp inc inc jae mov ret push packssdw jg push (bad) scas mov pop xchg (bad) cltd (bad) outsl push cld test int3 loope mov mov enter and jp mov pop fdivrs xchg std les sub xchg insl jg scas stos popa and fcoms and (bad) xchg push or mov adc lret in incb add mov js fldl sbb ja call sub xchg sbb inc jno lods sbb fmul push xchg adc fidivrl mov add lods mov pop (bad) jecxz adc mov int3 push sub movsb cmp daa jb movsl push push std mov daa mov iret movsb pop daa jp inc jecxz sbbb mov pop jb jns mov ss push aaa mov xchg cmp cvtdq2ps ljmp popa cli int mov xor in stc adc inc pop jmp rcrl dec mov fisubl ret mov das shrl fsubr or push aad mov or adc add movsl insb jg scas les fldenv fdivrl xchg push or mov leave or sar lds in push jb rcrl addr16 push fimull mov lds add cmp xchg les cmp fucomp add enter cmpsl loop (bad) in lods or in stc inc dec mov or mov sub jl (bad) adc addl les inc rcll push jne mov out stc jecxz jb data16 (bad) insl mov fimull cmp lcall movsl pop xchg dec in jmp lods fildll sub inc out pop adc call adc sub sbb jne jecxz loop and test pop push dec pop mov (bad) or xchg push or cwtl jb xlat inc cmpsl lret cmp push pop movsl and in push mov xchg stos push pusha insl xchg mov pop cmp orl mov xlat mov vmwrite ret sub nop or lods mov and repz shrb or mov unpcklps mov vmulpd adc mov popa xchg mov mov push jbe pop push mov push adc pop (bad) mov cs (bad) mov adc jae bound cwtl lret mov test inc adc repz incb add aas jp enter not fwait sub lret test xor sbb fwait dec sbb (bad) (bad) dec xchg and fadd cs xchg add or inc or dec lods push in bound (bad) stos mov mov push inc pop (bad) shrb es dec (bad) lods sub pop sti mov cltd jmp movsl push dec push jne mov cmp data16 jnp je test push sub outsb shrl jl loop push jbe mov xor add pop push cli int3 inc jmp cld mov notb mov stos add push push xor movb fisubrl push aaa push arpl das incb fcomps rcrb xchg push push xchg test push comiss and xchg lea sbb test mulb sbb int3 xor test add or xor sti push ja mov ljmp and adc xchg (bad) repnz daa jle repz divb sbb inc xor xchg leave or xor or bound cli pop fstpl mov addr16 cli arpl dec lcall pop outsl dec daa jg aad jnp clc in cs es mov dec in lods jg jmp mov xor das fcmovbe sarl aas jns bound leave lret (bad) cmp jne push dec and inc xor insb mov shrb sub xchg bound js push mov mov lret sub mov push jae add cmp addl addr16 jo and xor or sbb in js xor adc icebp jmp hlt inc jo xchg push dec push enter xchg mov xlat push les add mov push outsb in lds into add imul movsl mov sbb icebp fnstcw pop sub jnp insb mov jns mov fisubrl add insl push and mov mov sub dec push fdivrs xlat add leave push inc inc mov icebp mov xlat jle movsl add (bad) fistpll movsb out cmp pushf cwtl lea and ja mov ret xor loop aas (bad) mov insl cmp int3 fld xchg xorb sub cmpl jo adc adc push fidivl hlt in and mov push lods inc aas xchg xor sub into push cwtl loopne or bnd stos test (bad) ss ljmp aad cmp outsl int ror lods je mov sbb pop pop push push cmp inc sub pop inc fsub mov dec ss movsb jne sbb decl arpl jmp adcl ds stos sbb or mov ret cmp pop icebp mov cltd jmp xor data16 adc pop pushf popa and mov lods cli cwtl mov scas mov popa mov ljmp push push jns imulb cwtl daa dec fwait xchg int cmp mov mov sub or cltd push in shll mov xor ret and (bad) cmpsb mov dec and xchg xor adc fnstcw repnz jecxz call aam and daa ljmp mov stos stc aad pop and (bad) and push outsl pusha out dec push scas repnz aaa out outsl jle imul inc jne cmp lret inc fimul and cmpsl mov jne mov push add pop or cmpb sahf adc lods sbb push adc pop iret add sub lret pop pop cld scas mov popa in add inc lret clc lds popf xchg movsl mov cmp xor daa pcmpgtd cld lret dec xor (bad) mov faddl repnz inc dec test cmpsb mov dec adc sbb cmp pop jmp aam adc and push fistpl cmc jl inc sti int3 pushf rolb mov jae push ds mov jp neg cmp imul jne fwait mov sub ret dec jbe orl push pop mov add inc pop (bad) in imul push sbb dec add inc adc mov dec sub cli aas push jge test push cmp (bad) or pop orl jle push clc scas aas lods hlt or (bad) or xchg add pop notb das or cmp pop lea mov ss cmp sahf insl sbb aam mov (bad) popf dec in es iret cs lods sti push insb mov push in imul dec mov xor adc adc in inc adc das mov push xchg adc scas mov fildl js sub lods add decl subl cmpsb stc mov or jge loopne adc push jl inc hlt jb stc jl pop cli push xchg cld cs add andl fxch sub cli adc jbe push js inc shl jbe popa (bad) gs stos dec icebp jae sub shrl mov jge inc cmp lods mov sbb enter mov cwtl sbb inc and xor roll (bad) std movl (bad) aas int in mov sub (bad) jnp daa jbe es cli push ret push push (bad) in inc mov test in inc pop sbb jno testb dec or leave stc pop movsl stos imul (bad) pop push pop lahf sub js jb pop frstor fimul rcrb pushf or mov popa mov lahf stos ds jge dec sarl push push fadd sub leave push and clc dec stos loop xchg mov es add scas xor mov mov xchg push test nop in or jns cwtl rclb mov sbb aam mov mov dec xlat ret (bad) outsb jno or mov sbb sahf and sbb adc cmp sahf enter lahf fstps daa mov (bad) xor jo ljmp cmp add push xchg pushf inc shlb loop mov mov and adc or fwait loopne jns jl icebp sub (bad) jle dec cmp dec push (bad) pop sub or aas and sahf or push repz lcall pop xlat fldenv fsubrl pop xlat mov xor push sahf sti adc ss mov je dec mov sub sbb push repz lds jg lret out xchg call inc out adc xchg mov sub jmp xchg int int outsb pop xor adc repnz bound mov jno inc (bad) repnz bound mov bound sbb adc inc or sahf (bad) pop pop or out inc pop js push fsub pop pop aad jne and cmp sbb out aam fsubp adc movsb insb scas in fnop push insb shlb push jg push push jg sbb inc int or push dec popf dec jno inc sub xor cmc xor das mov mov dec int repnz pop push dec sbb pop push pop js dec fistpl roll mov (bad) fimul imul adc mov xchg (bad) jle sub and sub push fwait and insb mov sub and cli and xchg call flds sbb xchg lea sbb jae aad dec int mov int insb stc jne mov mov jo mov es mov outsl inc stos cmp adc mov dec cli cmp or stos xor fcmovne ret xchg xchg out arpl and lock add xor stos aas xchg pop xor xchg je push mov inc and xchg in add mov xor out lahf mov jbe mov sti jecxz dec maxps cmp sbb pop pushf cmpsl mov fcoml in jne imul adc je mov (bad) in daa hlt push fwait jmp mov sahf in mov out xor sbb add repnz call or push hlt jge sbb xchg dec push or jnp fcomps push cltd push jg cmpsb xor sar pop lret push call lret int sahf aam jl movsb data16 mov mov ret xchg sbb sbb loopne mov test shl stos inc dec inc gs int3 std (bad) jmp int outsl lret xchg xchg jb sbb orl or cmpl xchg cmc sbb stos or inc insl xchg mov jl data16 jne imul sbb mov ljmp mov inc outsb loope dec (bad) loopne sbb add add ja and dec dec repnz push xchg xor fs out add jae movsb cmp (bad) imull xor pop (bad) les iret dec nop mov jns mov mov xlat cmc push sarl aaa hlt cltd test pop call mov cmp mov adc sub in int3 xchg mov (bad) scas insl shr aas sbb icebp inc pusha fmull dec mov pop sbbb aam stos in jno repz shrb cwtl nop adc outsb sbb subb jmp mov inc sub dec and jecxz add int int3 lock adc xchg ret iret xchg xor fwait jl sub jns shrb mov cmp push das arpl pusha (bad) stc clc jl push cmc enter mov clc add icebp repnz and lods loope outsb inc xor ret cmp dec mov inc mov icebp mov jp pop mov inc lcall sbb cmpsb leave enter jns int3 cmp cmp lea test sub push loopne lahf jge add pop xchg pop xorl cmp ss outsb mov ljmp inc stos loopne sub cmp inc push xchg push das loopne out push call aas pusha mov int3 outsl scas sbb out jge sbb test dec imul dec jnp cld ja push mov scas lock mov into cmp or xchg js movsb dec dec pop or jg enter out cmp fisubl inc fistpl jbe jbe ret in ja leave dec lahf mov mov outsl dec arpl add movsb rep cmp dec jg push int sbb test mov testl scas add lret push sti xorl ret scas iret ja inc fcmovu test lods push mov push sub jg mov and movsb inc dec xor addl inc pop jmp mov jo or jl jns xor or stc arpl jb add mov out xchg out xor sbb mov mov or aas or mov scas mov shl xor xchg mov and lret lcall shrl rcll call cld add ret hlt mov add xchg fwait jmp jp dec xlat lods jb lock pop lahf add mov sahf add inc mov stc cwtl lea data16 rorl xchg mov test mov in pop mov inc sbb cmc xchg insb out imul stos out ret dec (bad) movsb dec push dec (bad) fmul pop ret jmp sbb std adc lcall cld fild insb sbb loop adc mov outsb or push cwtl mov or mov jo addl ret pop hlt mov cmp jno or and (bad) fidivrl mov pop pop test pop jge,pt test or fsts and inc fs insb mov rcr (bad) dec push int3 lret jne xchg insl mov jmp and cmc or jb adc int sahf xchg inc clc fldl inc rolb insb sub sbb xchg idiv popf dec adc xor xchg iret jp cmp dec cmpb jbe into jnp jge push adc daa xor subl jne mov icebp push (bad) or jl xor xchg inc cmp cmpsl xor pop negl add arpl rcrl (bad) cli mov lds sub cli (bad) jle cmpsl and movsl sbb movsl pop out dec jge pop adc pop dec mov xchg xor jp cmpsb daa sti (bad) js ficom fbstp hlt xlat es sub push daa xor sahf lret push xchg pop sbb xchg mov sbb aas cltd mov inc or lahf mov sbb push shrb cmp push push and pushf loopne sub scas aam dec cmp xor dec ret mov dec insl push lea sub add push dec mov stos out jmp cmpl (bad) jne (bad) and sub lcall mov xchg leave xchg xchg fisub push nop sbb sbb popa or mov jp mov std mov sub (bad) in xor adc mov and lret loopne nop fldenv and cltd inc mov test sar mov add nop dec lods int add daa mov adc xor repz xor mov jne lock test (bad) mov (bad) dec inc (bad) xchg out aad fdivrl cld in mov lock mov jns js cwtl shlb (bad) bound add insl out stc jnp jne jbe mov push gs mov test mov jle push inc jo xor das sub out shl ljmp aad int3 or jno xor xchg push jns inc pop or out or pusha pop ret push xor loope mov repz ja pushf mov jne dec mov or jl rol jle and enter es out jns adc jg dec sbb leave js nop dec sub mov xchg adc int jle dec loop pusha pop push pusha mov enter mov lcall cmp clc idivl mov xor pushf movsb fistp push mov rcll dec mov sub faddp jle psubw in or pop push cmp adc mov rcrl setg ljmp rorl push mov mov mov (bad) (bad) fisttpl inc outsb lcall cltd in sbb into add dec and les js xchg fisubr cmc sarl int3 mov push (bad) mull jl scas pop jo ret test in ds int fstps mov xchg inc cmp out adc sbb fimull cmp xlat pop cmp or fidivrl out imul scas pop add mov (bad) ss dec xor cmp std xor jecxz mov sbb push (bad) xchg (bad) mov xorb mov dec mov rolb inc sbb out cmpsb sbb or jo loopne (bad) xor cmp mov dec test dec dec or lods imul cld xchg iret push xor inc xor test pop aam jp cltd stos push adc mov incl repz add nop pop and fisttpll xchg pushf mov xor jg iret aas pop dec mov sahf push dec ficomp iret leave clc inc lods rorb mov sub pop arpl inc jno aad jmp js jp out fldl outsb inc or loope int ret test pop pop aaa sub jnp jp jmp loop mov outsb dec jb shlb add xor xchg call dec push fnsave xchg jge cld repz leave xchg or lods cmpsb (bad) in jne lods add adc jnp push rorl adc jmp lods dec fcoms mov jl cld les mov sub inc sub pop inc sahf cltd mov ljmp sub push outsl int3 decb xchg aad or mov xor cmp rcrb movsb or mov pop xor fidiv call pop mov push data16 xchg mov mov cmc stc mov cwtl and orl inc or xchg pop ljmp xchg xor or (bad) pop fistl pop (bad) inc or jmp cmc sbb out out shrb sbb (bad) lea outsb mov jp (bad) repz icebp xchg lahf sub nop bound or and ret adc jnp mov adc mov jbe aas jbe out mov xor insl insl aaa popa movsl xchg outsb add xchg loopne (bad) popl sbb mov cwtl orl cmp rol add mov iret ds inc insl xchg mov lds dec pop jl cmp sub push in rcrl adc orl ficomp (bad) sbb jmp jno sahf dec insb fs mov popa push xchg push pushf clc pop or scas arpl es sarl pop add mov test std cmp pop lret inc ja jae add ffree stos cmp ret fdivrl inc push sbb (bad) jecxz lcall fadd int ss or sub (bad) in sub mov (bad) mov and pusha (bad) fs add pusha fistp stc sbb push pop lods test lahf sbb adc test test jl jae out jle sti (bad) or icebp fildll adc xor push pop mov mov ss push cmp dec lods iret (bad) fidivrl xchg adc mov call arpl and test imul sub (bad) fsubrl push push xor adc mov push imul mov icebp sbb imul sbb sub adc pop inc inc jnp test adc mov lcall (bad) outsb ljmp mov rclb xchg enter inc cmpsb adcl or add mov push cmp mov lods jns add cmp dec je add add push cmp pop std jo pop popa inc push mov mov test adc leave xchg cmpb aaa insl fistl mov js movsl adc jmp or sti mov icebp sub je fidivl adc push push mov adc ficoml jmp ja mov dec mov ficoml loop out stos xor pop stc and xchg cmc leave mov dec and push cmp pop or ss push mov insl out xor rcll dec mov add jb stc out es adc loopne sub jg imul jae jns insb push (bad) inc shrb orb leave sbb mov xor sar ret adc dec loope mov push pushf lea cs leave sub jnp callw pop aaa jp push loop stos enter mov and pop outsl jne mov mov cwtl xchg jmp pop pushf int3 int3 stc pop push pop inc bound push out xchg push in clc adc xchg lret hlt loope xor push pop loope xorb push and sbbl arpl (bad) jp mov sbb mov xchg and push int3 movsl adc push jo addr16 add pop inc aam mov std dec popa pop mov adc pop into lods pop aas lea mov (bad) xor in fnstcw outsb mov ljmp or inc lahf stos jbe jo test test test mov pop lods pop inc or fsubrs jl or xchg je add sub mov push (bad) pop stos xor call out dec xchg sub daa ss test ja (bad) scas xchg mov das xor sbb nop repz adc ss cmp inc fdivr xor iret and jl lds push mov mov insl add jne pop in sbb mov std (bad) lods mov out loope dec xor or pop rolb jne jge mov adc in fcomps jno push cld cmp push ret xchg cmp aaa loop mov cmpsb jecxz (bad) in clc enter sub jo mov scas and and add int aas cltd sbb adc sub dec mov adc pusha (bad) jae inc pop (bad) ficomp rcrb and sbb ss xchg aam loop (bad) lcall mov mov lods add ret int mov int3 ja in or js inc dec cmpsl pop in outsb xor mov sub inc out lea lock std gs mov in clc popa stos sub xor lock popa repz outsl dec mov adc movsl xchg push push xor adc dec jl mov (bad) and aam stos jmp pusha ja pop dec lds add lock je cmp cli into call sbb cmp aam sahf (bad) sub ss data16 push into xor fldt xor cmp mov adcl mov cmp pop (bad) (bad) adc fucomip xor fadd pop test dec fisttp sar pop dec (bad) repnz lods mov inc add pop lret fildl jo (bad) mov mov cmp mov repz lds test pop or add shll sbb nop shll aaa inc sub daa pop fimull mov add add fistp jnp adc add aas xchg test push jg (bad) out insb xchg arpl test and xchg push add out stos dec std and cmp icebp gs outsb sbb mov out mov add push add xor dec lea xchg fcomps (bad) lods das push jecxz loope mov orl out add movsb movsb stc in or jecxz jbe cli lahf pop in pop cmpl inc int3 sarb popa outsb sbb and shrl in jecxz inc adc sbbl xor inc pop cmp hlt je cmp ja cli pushf stos std cli jne xchg jp lds mov (bad) inc nop inc rcrb fcomps inc mov xchg dec push ficompl push or push pop mov jge adc mov enter mov mov les or cmpsb lods or xorl adc stc jb xor aam jmp loop mov imul mov pop and mov out push pushf loope loope fstl fldenv out clc inc mov xchg cmp mov add mov das lea mov (bad) lret and or lret lock dec scas rol aaa (bad) roll into test push fist pop pop xchg mov xchg cwtl mov xor xlat (bad) pop lods mov xor mov icebp mov ds shrl and xor push lret or sub shrl jns ret ss adcl xor cmpsl add mov out cli (bad) mov nop and adc cmc sbb in inc jnp pushf sbb mov pop out xchg fucomi test testl loopne or decl sub xlat lret ss jl das jg mov and rcl in aam jg (bad) jmp mov lods lods popf and xchg push inc outsb or mov pop sbb inc repnz push cmc aad ja insl dec sbbl sub jbe in jo sbb ret xor lods scas lret call in inc cmp xchg cmpsl xchg push or mov data16 ss mov imul mov jb in pop xor pop mov sti movsb in mov mov loope dec and fdivs and ret cmp jg dec cli notl xchg aaa repnz mov scas es cmp dec shrl repz cmpsb mov movsl dec mov push sub jne je cmpsb add xchg (bad) xchg pop fsubl push call mov push xchg lcall or inc mov decl mov push imul pop cmpsl shrb or scas sub andb pushf push call sub or dec insb out add pop mov mov out pop scas insl inc cmp mov pusha push mov (bad) sbb cmpsl stc add mov push into xchg and popa inc cmp push mov out mov push icebp (bad) mov xchg cmp xor inc popf xor cmp lcall ret lods and push push add mov cmp lock popf push xchg fist mov push lds mov ja mov out fadd loopne mov lret inc jl mov mov andb xor or push or xchg lods std mov fs sub lahf sahf insl aad push pop insb dec sbb push aaa imul jle add push test cmp js pop adc pop inc mov andb test loopne mov mov out xchg out xchg orl repz lret cltd daa pop int add xchg sbb hlt and mov repz lea int3 or inc xchg in lea jg jmp call cltd enter jl pop dec pushf loop jo out (bad) jp cmpsb xchg jl mov adc test inc aas int3 sub add arpl fbld ja fisubl incb fisubrl dec dec adc push aam pop xchg in sbb push cmp popa pop xchg pop push xchg jp xchg stc pop jmp jl pop pop push cmp movsb push jnp in push out mov push jno mov les les insl js pop add adc (bad) xor and (bad) jb mov cmpsl adc popf arpl arpl or loopne movsl mov dec jb popa popa dec icebp insb outsb push cmpsl cmp cmp and jmp push xchg push jns sbbb movsb aas mov jno xchg xchg cmpsl popfw aam mov add xchg mov aaa test int cmc addr16 repz adc add dec and pushf leave xlat pop cmp into mov xor testl or push sbb (bad) in add mov lds add outsb js das stos xchg xor jle pop cmp out mov in dec mov data16 cmpsl outsw lock cld ficom mov mov pop push cmc push inc inc add cmpsl push (bad) sarl add fldcw pusha push or push js test adc es js mov bswap jo sub pop cmpsb stos inc xchg clc inc cwtl imul dec mov scas int3 lret cmp push lods add (bad) push xor sub imul insl jp and sbb xor loop arpl push popa inc andb xor cltd and aaa jge sti and xor fdivrs add push jno ljmp jge mov mov fldl mov or and jge dec mov or sbb pop aaa xchg fcomps popf mov mov rorb jp cmpsl xchg push fsubrl xchg or mov pop mov outsb jo xchg (bad) scas popa fdivs sbb das mov popa mov (bad) and hlt xchg lods lret test out push out cs cmpsl or (bad) sub cltd ja cli scas dec pusha icebp pop outsl add out jecxz inc sub push mov in int imul sbb pushl push inc inc xchg push or es pop dec outsl jge rcr aad rcrl loopne fisttp pop test mov call cmpsl xor mov ljmp xor imul and push out dec movsb jp jecxz mov mov out insl mov (bad) (bad) (bad) cli mov aas sbb jp mov cmp jmp and stos mov jbe test mov pop cmp lock pusha test ret dec sarl jle mov xchg (bad) ss lcall fsts (bad) push rcrl and cwtl ret icebp cwtl xchg jl xchg jae inc rcrl lret mov inc orb and (bad) lea mov mov (bad) out add bound int3 push and (bad) out sbb pop data16 aam shlb jns (bad) fidivl bound add data16 into pop mov push in inc int3 mov and aad int3 (bad) adc mov and cmp dec das call xor lcall incb fwait clc xchg sbb test push outsl pop loope in iret sbb push xor stc inc and fcmovnu xchg fnstenv es fs mov jp push lcall push repz dec jb ljmp (bad) arpl push lea pop pop and jns aam sbb cmpsb mov inc or int and fldenv push gs jbe mov jecxz mov mov or fs popf mov lahf dec adc or pushf cmc movsb dec jmp popa stc int xor call cmp or xor dec inc jne aam pushw in inc jne mov sub inc int jp adc xchg and in in fistpll out cltd decl add xchg inc lods imul xchg sbb adc loopne aas (bad) xor and stc cmp inc nop cmp push xor sbb enter xchg jmp pop adc cmp push sub std test mov cmp add xchg pop ficompl jl sub aad mov and mov add pop lret ret xor (bad) mov rclb (bad) pop or jne adc mov and or mov xchg and stos or pop cmp xor (bad) lock sub mov add sahf pop cmp xor jne mov push mov and sarb addr16 int les popa push mov xor adc add sub mov mov leave idivl xor fnop aaa bound shr dec les add push lds inc cmp sub mov test (bad) (bad) sbb add jb jl inc sbb test mov jae imul add call add loop or out cmp lds (bad) popa rcrb xor mov dec cs xorl jl test xor xchg dec je push ficompl mov xchg adc cmpsb stos xchg pop or jnp (bad) pop cmp mov xchg int3 cmp push jl imul mov andl movsl lods out loop test mov jl bswap sbb mov jecxz aam and xchg adc mov mov iret out daa mov push cmp add out sub push sub pop adc es arpl inc mov in lods and loope sbb jb lcall hlt xor cli les adc jmp jl push ss dec ja in mov dec add fwait xor cld das pop rcr add loop mov cmpsb stos jle stos ret dec repnz lods lret inc test pop aad mov sbb repnz bound dec sahf pop je inc out (bad) cli stos mov loope xchg sub loope or lods lcall ret cmp stos jno fild adc test scas add inc inc subl jb lea push dec popa xor adc push and or jle fdivr insl push pop (bad) push fstl push std aaa mov sub lret and mov int3 or sbb and jns imul fisub fucom divb xchg mov orb test imul arpl xchg in nop imul inc dec (bad) jecxz jmp jg add sbb pop loopne cmpsl rcrb sbb out cmp sarb call enter inc (bad) sub into sbb inc stos leave cmp jne pop dec sbb or mov push pop cmp mov aad inc fidivr into (bad) cmc movsl push ret div push mov in lret aas push cmp push fdivrs sbb xchg mov nop out out faddl imul push or pop sub inc addr16 int and jne subb cmpsl (bad) jbe and inc xchg test mov (bad) jb in fnstsw adc in loopne sub pop pop jmp mov sub out pusha add iret mov in in fist sbb cs stc adc mov push mov push fadds mov enter xchg imul jno mov cwtl lds lods aad scas pop clc sahf je mov mov int repnz in lods xchg jnp das outsb mov mov pop leave sub dec gs pop inc fadd js ds mov in ss mov test sbb jno sub js lahf stc xor test loope and push in lret fsts and push shll dec sbb lret or scas in add addr16 sbb sbb mov nop sahf imul lea mov outsl cmpsb lcall and mov pop and and cmp cmp lods sub out sbb ret xchg pusha lret dec (bad) xor sbb loop mov ljmp es in addl jne push out jmp xchg popf xor sbb mov test jp lods sarl cmc or dec out xchg stos or mov xchg into das jns sarl or mov js popa and mov pop fisubl loopne or call mov mov xor out ficoml mov mov cmp mov lret ds test inc jae xchg pop mov mov bound outsl xchg (bad) push fnstcw and jl pop jmp inc aaa scas mov sub mov pop fsub push repz dec xchg sub nop sbb inc cmp sub int3 and mov push fisubl dec (bad) fadd int3 mov push and jle jmp dec ret sub sbb lods fidivl push pop jbe and ficoml add or mov lods pop mov mov push jnp mov jge push loopne out push jmp push adc scas scas (bad) call stos btc cmp and push xchg insl adc xor cltd jmp imul xor scas (bad) stos stc pushf stc jge pop push rcll in rcrl js or mov nop pop fiaddl pop aas add mov pop jge xchg mov mov jp,pn repz inc sbb jns mov jecxz inc ret in jns adc aam push sub pop fcomp cmp or sbb jns mov sbb jae (bad) cmp mov lds pop in pop mov rolb and add outsl push mov xchg jecxz cld dec adc enter cmp mov push fild push das in movsb mov mov inc or mov rcll lods bnd or xchg pop and and dec adc js push or out setnp (bad) rol fldlg2 sbb (bad) dec mov mov mov mov mulb in das cmc aas mov mov mov sti dec jb loope mov roll int3 jle addl stos push fidivl pushf pop and mov incl and sub dec xlat out mov cld mov push dec mov jp js push push mov xlat iret (bad) out and aas (bad) mov sbb sbb test sbb cmp int3 lahf cmp pop movsl lods les adc ljmp pop fist adc pop mov add jnp jb xchg in repz adc cmp sub bound incb mov mov mov add mov mov push mov cltd sub movsl xchg pop out fldt fdivrl push jle divl ficomp jmp lahf out cmp lcall add inc and dec push pop mov mov mov sbb xchg movsl mov (bad) jnp adc sbb test test or mov dec cmp test test cmpsl pusha stc test stos fiadd nop add mov xor push das in popw cmpl sbb pop inc adc push cmpsl cmp insl lcall inc mov lea (bad) (bad) xor xchg push outsb inc inc add push jg lods add push mov mov mov cwtl adc sub or (bad) mov mov pop pop test and jae arpl jg (bad) cmpl xor push ret ficompl add aad imul jns push and rcrl jge push mov imul sahf and jae jg ds icebp ja int mov fistp popa js repz pop mov (bad) pop mov bound dec xlat mov stos or dec rclb xchg mov mov lcall pop inc dec into loope mov daa sbb jb inc and push enter loopne adc xor or xchg loop pop and mov jge xchg (bad) push jo (bad) (bad) sbb rclb mov and inc stos sbb xor loope roll outsl in push std js sbb mov out and sbbl enter or add (bad) mov ret test cmp xchg mov sub jmp mov cmpsl inc xor cld xchg fidiv or stos push mov scas inc push add mov pop xchg fadds subl push call je pop xchg mov negb add xchg cld jb cmc sbb or loopne stos in mov mov mov jmp ja mov add mov mov jns mov pop ds (bad) pop test push jno test mov jge push xchg and pop (bad) jge add mov dec jge sub in jmp out fcmovb pushf or mov in outsb jno das insl cmp mov inc mov iret sbb xchg mov xor and nop pop pop mov (bad) hlt sahf lods xor andl aaa daa pop repnz sub sbb mov dec aaa pop pop ficom aas xor scas icebp jecxz fstpt repz mov inc aam daa mov pop xor jne test or fsubr ljmp sub insb xchg and inc push mov ja dec clc pop popf mov repnz pop and push mov inc adcl xchg mov sbb scas sahf lret mov sub xor rol push cltd in push push cli roll dec js xor (bad) jns dec mov insb daa hlt ljmp dec add int xchg xchg mov aam mov test inc cmpsl out fist out cs sub loope jecxz int cmpsl pop pop push push call ds mov mov adc enter or xor jmp (bad) sti enter add or jae xchg push out adc and sti or inc ds xor js inc push insb mov je aad dec cwtl loopne shll nop cmp pop jmp jecxz or aam xor add cld lcall inc jo fcmovbe cli ja dec iret push inc xor mov rcl imul addr16 jle lods shll lret les push mov fcomps adc jg inc nop cmpsl ja fidiv iret int pop add mov std inc cmp fidivl and mov inc test add bound or add stos stos add enter std adc fs out inc xchg push adc dec addr16 xlat scas aaa fist xor pusha inc aam mov mov rolb mov test jb arpl arpl xchg cmp and pop sbb sub or pop pop fildl pop pop pushf insb push sbb fsubrl inc fdivp sbb mov mov in push adc movsb pop mov (bad) in or gs fistl sbb ds ljmp mov fs and es jp xor std pop and out iret or aam xchg mov jecxz das sbb outsl gs lds fdivrs popa jg rcrl icebp mov aad ljmp ficompl (bad) mov jmp imul in (bad) repnz loopne inc testl dec dec push out inc xor (bad) dec nop xlat mov dec sub xchg inc daa add cmc sub cmpl ret pop mov outsl sahf push mov lahf incb das xchg popl cmp add sub add insb mov and insb dec pop xor test out pop (bad) sbb xchg lret mov or mov mov or (bad) adc arpl jne or je sbb inc pop jl and inc out mov hlt adc les aas xor into sbb in aad stc push rcrb stos inc mov das and inc mov jmp push (bad) out pop mov je inc fwait arpl add jp pop fidivl fstpt push insb mov pop test jnp xlat lcall addl jnp pop cmpsb into sbb and (bad) cmpsl (bad) out lcall in test adc repz add mov sub mov lcall jo inc jo sub in adc arpl sti jo and std xchg insb cmp insl xor and and aad and (bad) mov cmc lret sahf or das bound or jmp cmp dec (bad) adc mov fldt insb push call or iret das rclb mov (bad) es insl sti pop sti push inc xlat cli mov fwait mov clc mov mov push add insb cmp fcoml bound popa stc (bad) jbe mov orl dec sti mov or insl mov (bad) and push xchg inc out pusha add add (bad) dec std dec ret outsl (bad) mov aad mov adc fnstenv inc popf jb sub hlt push sbbl ret push and shrl repz or test mov lahf lods cmc add fistl (bad) repnz scas je arpl mov adc xor add adc jg push test dec mov cmp insb xor mov and in jg sti mov addr16 mov lods mov arpl shll dec cld inc out lods add sti push pop sub sbb insb mov leave popa out cmp stc cmp rcll das fildll (bad) mov ret mov outsb sbb sbb in into xor lods cli fs cmc (bad) mov mov and and xor mov js into jae cld out jbe popa loope xchg and add mov lods clc xor mov enter inc adc dec cmc mov pop aaa sub xchg add jae pop clc sub (bad) loopne add mov pop pop orl mov dec cmp and sbb je mov roll loopne les fsubp sbb or mov nop cwtl in lds test or test dec int3 test cli mov jns sar cmpsb pop leave shlb gs push test pop dec shlb mov js push in enter aaa xchg or mov loopne xchg jb adc and adc xorl jle push inc ss ds ret out mov add ret mov push movsl ds sbb and iret shrd push pop inc repnz nop popf xchg inc cmp sbb mov js pop icebp push mov mov pusha add insl sahf stos mov adc andb nop and cmpsl mov adc cmpl xor mov into mov in jno mov xor push leave mov xchg jb clc (bad) repnz xchg hlt cmpsl in std (bad) jne and sahf in lds xchg sub push mov rep rclb push sbb xchg ss (bad) cmc cwtl push lock sub add mov jb xor gs sub cmpsb mov push xor mov int3 cmp (bad) xor push aaa xlat push push xor dec jnp pop dec (bad) rcll aaa add fs lcall ret cmc cmp mov lea and push cmpsb adc cmp (bad) jmp outsl xchg in adc popf roll fwait cld cmp iret ljmp mov jo mov jo loop das inc lods mov fsub mov or or cmc push adc lahf out dec inc mov fdivl pop sbb addl dec into loope push and sbb mov orb xchg test clc add ja add fs movhps rcrl push and movsb jmp or movsb out xchg and or loope loope push pop sub andl mov add pop je stc es fs xor xchg repz inc pop in mov fldenv inc inc pop outsl adc popf cmp and popf in aad jno dec (bad) icebp sub aam shlb pop push outsb push aas in fwait mov in xor mov mov mov bound test pop lret push arpl imull js dec and mov mov loope (bad) in pusha loop push xchg std pop add sbb adc xor iretw loop inc repz icebp inc popa jbe push xor fucomp in scas push jne inc sahf inc test pop dec add lcall cmp addr16 sbb (bad) test sub int3 sub int shrb das mov jecxz lea sbb in jbe cmp inc in inc or sbb sbb ljmp pop enter jne mov mov jl les pushf jecxz nop inc jns jp push xchg jp outsl xchg adc (bad) mov push stos pop sahf insl ja add push xlat pop cs or sub cmp sub shlb mul adc jb out mov int3 cmp lock sbb mov sbb add std out adc rclb pop fldenv inc outsb push add xchg loop (bad) push andl fsubl sarb lahf in cmp jge ret gs fiadd push adc loopne jmp loope arpl imul int3 cmpsl cmp mov rcll adc xlat mov mov test popa and cmp das mov xchg xchg jmp jge cmpsl lods fdivrl arpl test xor jb (bad) xor xchg xor adc gs xchg and pop jno cmp addl ss jb (bad) sub xor stc in push sub xor cltd fsubrp cmc bound dec and dec clc lret adc neg das xchg fs mov pop insb push xchg xchg pop lods mov pop loopne fwait mov icebp in sbb sbb pop pop pop pop cwtl or push roll insl cmp inc fcompl adc pop sub xchg sahf jp push test sub push sub adc push lods out mov and pusha cltd xchg inc and js sbb test adc cli pop stos sbb mov lret inc pushf jl (bad) out mov aaa mov pop xchg pop add push sbb cmp lea dec cmp lret cld jns ja sbb and push insb pop lods mov inc jb sti cmp mov in loope frstpm(287 or pop popf imul and loop (bad) push mov mov test jl mov add lret fwait (bad) arpl ror sub and mov xchg mov (bad) cmpsl ja xlat xchg fstpl pop iret dec mov mov sub cmp into or test call lret and jb cmp xchg and mov popa and pop (bad) inc mov mov ja (bad) in add mov fs rorb enter sub add pop jmp or lret pop rcll jle sbb inc add cmpsl add sbb (bad) xlat repz loop (bad) mov mov scas sbb popa adc je xchg movsb lods mov adc sbb push bound dec and (bad) lds inc jg or in das stc pop xor ss jnp out popa sbb int test xchg int gs outsb or or mov dec out mov xor stos xchg and or aas cmpsl jl mov cmp je or mov out rep rcrb gs test addl (bad) hlt adc push gs loope lahf mov addr16 loop add sbb aad jl ret dec xchg into ret add jbe sbb mov mov aas cmp sbb inc sti cs push and jg shrl cmp dec stc fmul fidivl cmp push adc push inc hlt leave mov jmp push xchg call jle (bad) fisubr (bad) out ds pop mov outsb aas inc cmp mov fildll fbld jmp ret repnz mov aas js scas jl out bound xor rcrb std push imul fs xor icebp dec pop jl jmp aam enter insl andl adc pop test sti adc push sbb movsb rol imul mov loope add std popf loope lock cltd push push adc test sub mov xchg push inc push adc and stos (bad) hlt (bad) fldt adcb mov sti inc pop pop adc mov in (bad) neg inc push push cmc lds push mov insl and aam add pmaxub fwait adc mov mov fisttpl (bad) adc out xor mov pop dec cli inc movsb insb jge daa out ljmp rol divl rol inc xchg xchg mov imul data16 pop add sbb pusha mov es lret rep fisub pusha je adc (bad) xor pop push xchg xor adc or (bad) imul sbb xorl outsl mov movsb xchg cmpsb int3 gs jl addl mov mov nop push push jne (bad) int3 cmp or hlt add cs fisubrl and fistl jne pusha ret loop xchg inc leave sub clc or pop data16 adcl and xchg and jae cwtl imul pusha cmp pop pop xor pop mull xchg loopne ret push movsb cmp push fadds lret leave insl dec adc adc mull sbb sub mov scas loop in daa sti (bad) xchg and lcall push rol ret xchg and adc clc dec xor mov sbb add mov pop add push ss ljmp cld adc push in mov adc jle fstps adc lods and xlat cli mov call or and fistpll loopne xor aam outsb cmp jp push mov es push (bad) mov dec pop addr16 push stos xchg addr16 mov adc add mov jecxz sahf roll xchg popf jns jecxz cmpsl cmp (bad) inc and lods cmp fldcw fcos mov data16 mov add pop inc push or cli fst out (bad) mov lea push and jo push inc idiv imulb and xor aas jecxz call lret adc xchg jmp mov xchg or jecxz xchg cmp xor out mov push fwait insb mov int3 insl and mov sbb inc jnp xor rcll aaa lahf pop fistp pop cltd int mov fwait (bad) and or stos mov sti lods cmp aad fs mov dec popf pusha sub mov scas arpl mov inc iret mov sbb in (bad) xor (bad) hlt pop sbb fcmovnbe or and add mov jbe xchg movsl cmp cld adc push add (bad) sahf xchg dec test push mov loop stc mov push cs adc jbe pop popf insb cmpsl sub mov push sbb inc arpl mov dec rolb cmpsl mov aad je jno sub in sti lea pushf adcl push and popa mov cmp aaa stc scas dec jp std cmc pop cli pop scas in jnp das mov popf or test int mov adc rcll dec cmp leave adc xor and fnop hlt jb cmc jbe jae jmp and cmp or inc mov scas sub fiadd or cli jbe pop or sub sub push adc shll push cmc xchg mov push cltd push xor add out std loopne dec aad add adc cmc jge fnop xor adc xchg out sub call movsl fnsave mov bound fisttpll xchg ljmp cmp jns ret xor pop or inc test aam roll xchg dec inc leave and push jo mov adc adc lcall sub jno hlt xor das mov in jne xchg cmp dec aas out mov (bad) jmp adc mov cmp addr16 or fs add adc jns mov sbb stc dec dec cs and test add xchg or int sub sbb adc inc cmp dec mov sub xor and sbb test in test inc or ljmp push cmp loopne ss push adc enter clc jecxz push shlb lcall inc xor call push ds mov leave mov (bad) arpl push in ljmp jo mov or mov ss in and (bad) lret clc sahf mov push outsl xor lds adc cld mov mov loope jbe stos (bad) test repnz adc mov mov push adc mov pop adcl pop cmp das xchg test lods add xchg or and cmc or arpl sbb dec add je jne loopne repnz icebp xor mov sbbb add push test or in popfw call adc test inc icebp dec nop or and insl jns lods jbe ror inc xor sbb sub scas shll rolb stc xchg jne int (bad) inc cmpsb push push call enter in mov cmp pop sub clc jb int3 mov pop adc (bad) int3 lods push and js pop push pop xor mov and sbb lock ds mov rorb mov out in and hlt fwait lock mov mov addr16 lcall push aaa mull iret jo out xchg inc add js insb mov inc test nop (bad) enter add pop js mov xchg das shll cmp xor sbb nop mov mov and adc jg and dec (bad) insl mov pushf ret pushf int3 (bad) ja adc test mov out aas rcrl out add mov fdivrl fwait sbb dec or test cmp cltd mov push pop sub and mov call dec sbb sbb out and je iret add sub pop decl cmp shll cld mov mov in push ss and xchg jmp inc lods call xchg es scas (bad) jecxz sub mov lcall sarb jno incl int3 mov fsubl mov cmpsl mov cmp xchg push clc sbb adc jbe mov lods je addr16 sti adc pop pop xchg mov pushf mul cmpsb lods mov pop dec sti dec sub push (bad) cli inc mov stos mov cltd push aaa int ja (bad) dec (bad) xchg lcall sti sbb lods inc dec inc mov (bad) out or push movsb or nop push push outsl xor xor jb inc (bad) add iret jmp addr16 data16 pop jns and xchg sbb push xchg dec enter sbbl or cmp stos mov and out sbb mov xlat cwtl sahf cmp xor test (bad) pop push (bad) xor sub (bad) daa out or (bad) xor stos adc xlat pop stos jecxz cmp lock popa outsb arpl sbb jae arpl fdivp mov clc inc adc subl scas es outsl and push call mov pushf lds stos mov mov xchg mov or adc out push add inc pop jnp cmc and xchg arpl cmp push pushf test cli les jge or xor xor sub (bad) push sbb or ja sub mov jb cmc cmpsl std lret xor add ficom cmp outsb in stos sbb mov lret cmp inc pop pop or cld mov jecxz jp imul mov sub (bad) daa test lret fidivrl jae mov cmp jp outsb jno inc mov mov loope pop xchg insl push xchg xor repnz mov cmp push adc fsubs ret sbb xchg stos pop lea inc inc sub pop jb jo iret xor enter add xor (bad) and sub sub pop clc out cmc mov pop cmp leave sbb xacquire ss mov les (bad) mov or out adc jae ret sbb fmull sarl aad sbb out pop imul sub or iret jno mov push loop push dec je out fdivrl (bad) jmp jb mov sbb cmp add je aaa xchg jle,pn scas data16 xchg dec aaa dec mov xor mov sbb lahf inc dec jo (bad) xor mov add fnstsw jge sub adc stc fimull pushl test movl je pop push or jl outsb push insb dec xchg mov mov push pop push mov mov daa sbb sbb xlat sbb mov roll outsb jge pop inc cmpsl cmp das jnp push lods repz je xchg jl or xchg or sahf jns jmp mov sub mov mov add imull dec pop out fs das repnz test stos ss pop notl (bad) mov inc add test aas add les adc mov xchg test stc loopne scas lea xor xchg (bad) mov xchg cmp lret lret xor cli repnz pop fstpl fadds aaa leave fist fcompl loopne dec or (bad) insb cmp cmpsb xlat push jl sbb inc jae mov jae cld xor inc mov cmp clc xor xchg mov (bad) xor lods sahf mov pop stos adc rcll add (bad) jns inc dec rcrb pop cmp (bad) or data16 dec fisubl dec popa lcall or dec stos mov cmc sub repz (bad) icebp cmp xchg jb fwait jmp aam stc push out mov dec pop iret mov inc and sub sbb iret push jb fnstcw pop push call cli jp fucom push adc jbe jg push (bad) adc sbb cmp cwtl movl mov outsb mov aaa xor sbb mov inc push iret out xchg pop in and pop mov mov xor mov mov int jo ja js push mov jg je out cmpsl bound aaa lahf push pusha or and inc ss xchg xchg hlt sub mov mov xlat adc movsb rclb cli imul int3 pop dec jmp sbb add mov or repnz sub ficompl mov into push adc dec pushl add pop jnp bound xor lret inc sbb rclb test lret sub jo and ds pop mov pop divl dec mov dec fsub gs pop inc xchg xor fsubs sbbl adc mov aad stc pop shr dec idivl ret jecxz dec xchg pop stos pushf push sub sub popa lret and xchg fisttp xchg mov cmp (bad) int cs dec std sub imulb inc or int mov inc rcl shrb push enter dec das or jo mov dec inc (bad) add sbb pop ret mov ds xor pop scas jno add (bad) xchg xchg adc sub mov popl in cmp pusha shl push sbb mov adc sub mov or cmc xor mov inc pop loopne mov mov jg lock stc fstpl subps outsl (bad) mov std enter sbb imul inc stc stos lret xchg dec lds add aas mov xor test incl adc test or inc movsb (bad) decb push mov lods das cmpsb roll push mov rcll mov fsubp roll mov push aaa mov xor test test lahf dec and cmp push mov jb (bad) push imul add loopne add adc icebp aas test jae mov add mov jg mov lods pusha pushf dec xor push push and fisttpll sbb push xchg mov enter in jmp mov jo sbb out mov repz jno cmpsb test ja mov addl mov leave aad adc daa mov sub mov bound into mov int scas adc and dec mov xor and loopne mov stos and push in inc sbb das jp inc mov cmc add sbb enter ja mov fistpl dec ja scas mov push daa (bad) into int inc xor and sub push movsb add pop mov mov mov cmp sub sbb add sbb dec mov inc cmp loop (bad) scas ss leave fnstsw negl adc xrelease sahf xlat lock (bad) push je mov jp in inc (bad) cmp push xchg ja sub nop xchg outsl outsb popa adc xor imul jmp cwtl (bad) fcoms push divb lock mov (bad) out stc aas inc scas xlat and mov aam out ficoml jmp mov xorb cmp sbb sbb jbe adc jns fimul jns push aam loope add nop fimull sub fs int dec sub jg ljmp push aam pop push call movsb test sub lahf sbb repnz loopne repz push push imul int int3 inc aaa jns xor cmp test pop fdivs xor movsl and sti aas cmp lret stc mov sub cwtl jecxz stos adc imul fiadd jne add aas push pop les and pop add add stos sbb and push hlt adc ret xor sbb ja pop movsb sbb sbb cmp dec shr push ds inc arpl mov and lcall xchg push aas lret iret std jbe jp and ljmp pop aad popf jno jae xor or mov inc xchg in jne outsb test sub fs lods aaa jb xlat push in test cs sbb jb jb and xchg cltd lret ret mov push mov out cmp fcompl es dec (bad) outsb cmpsl sub enter out jo mov mov xchg test xchg sti in mov jns cmpsl jae nop cmpsb adc xor jbe iret (bad) sub jl and mov pop imull ret adc (bad) sub cltd jge aas lock enter push into setae dec das cmp fildll inc insl add imul out jl xchg dec xchg add sarl fsts loop cmp adc out sbb mov insb push xor inc mov dec push jne ror std cs in cmpsl push cmp xacquire outsl ret (bad) in (bad) mov movsb or outsl lahf mov addr16 add xchg lods (bad) into sbb (bad) adc fldenv (bad) pop jp xlat out push fsubrs iret xor mov jbe sub clc imul xchg mov hlt (bad) les inc stc push pop or int pop xchg movsb and rclb mov insl sub push pop lock addl cs fdivs (bad) rolb dec idivb mov loope ret cmpsb mov push stc arpl jmp (bad) or push jne sbb mov dec lock call dec call daa lcall pop jle addb jns pushf dec lret sbb fistpll sti in jns arpl inc and mov movsb or subb (bad) dec inc xlat sbb jns adc push or rcrb popa mov lods and push fs mov repnz cmp dec out imul mov sbb inc lods pusha dec out (bad) push pop insl movsb pop sbb insl dec push push dec cmp popa and xor cmp mov mov stos sub cmpsl stc mov cmp enter xor shll lcall clc adc loopne ss cwtl lahf out rorl sub sub xor jne jo add mov adc shll mov sbb clc hlt inc cmp mov les push pop sub xor cmp jnp jl fs xchg push inc xor inc repnz or cs adc mov inc into pop push mov pop lcall jmp int stc or jg bound inc push adc js xlat xor leave mov jae sbb fistl cmp jb cmp xchg lahf push rol cmc inc mov lods adc mov mov cmc xchg pop cwtl aaa sbb mov cld xor imul mov das mov jp orb mov jns jle lock test imull xchg push xchg or (bad) in pop pop add sbb adc dec (bad) fistp ret xlat dec xchg lcall sbb xor mov jl int3 xchg stos push cmp push arpl aas fcomi push mov bound jle (bad) lods rcr lret adc outsl fstpl lods push or pop jae inc mov ds decl out loop dec mov gs mov out lret icebp mov and ret mov cmpb xchg push mov jb mov xor push cmp ds mov pop psubsw or fcoms pop mov ficom pusha pop and ljmp out cmpsb or add sahf shr xchg mov (bad) ja push jae push jl add push ret aam sub pushf or pusha jb mov xchg popf dec mov mov push fs push fsubrs xchg fwait mov (bad) movsl sbbl dec stos push scas pop jecxz in dec xor std shrl pop (bad) dec mov inc lds pop push push add addr16 sub mov les pop daa es pop test in sub ret daa ds jns sbb and pop jmp push pop insl pop push jns xor jp pop push sbbl push cwtl mov sbb adcl lret cmp xchg pop mov int3 stos (bad) pusha sbb fdivl rorb fnstsw ljmp sub decl out push add sbb imul mov inc lahf sub push inc sub mov mov pop loopne pop scas data16 pop leave jmp mov or adc mov in or insb pop sbb cmpb sub mov bound cmp mov xchg sub mov jo or stos mov (bad) adc mov dec popa jmp inc ret in jge bnd rclb out jmp fistl stos and lods aam lods stos pop mov test add xchg or sub punpckhwd lods lcall repnz mov les jp adc iret pop loope mov sbb ja dec mov xor repnz jbe js mov mov cli popf sbb mulb js jmp cs mov call and xchg jg xchg jg sbb repz jnp jno jle lahf stc leave adc sub imul or call or rcll mov mov lock jle mov hlt fisttpl mov xor sbb sbb adc sub add mov ds sub cmpsb rclb push push xchg ficoml ja rorb pop hlt loopne sahf daa pop mov gs in push mov aaa inc inc ret sbb jo sub inc mov dec movsb push outsb push nop adc test xchg or cwtl push cmp popa repnz cmp dec in addr16 ror arpl pop mov mov movsb into arpl shrl ljmp cmp cld push (bad) xor je push dec mov inc mov add test popa test jb stos cmc je mov fs mov stos or jge daa mov stos or in inc (bad) (bad) jle btc xor mov adc add sbb insb orl inc bound dec xchg out imull movsb adc mov test out add mov inc or shlb in jmp sub lea mov fdivs fnstsw test mov jo adc add clc fldl or negl mov mov mov dec or fs push fcoml pop int mov popa std mov sub js ljmp push mov xchg mov shll lods and lahf or in xor in lret sbb mov orl cld (bad) mov ja das ret add (bad) cmc mov clc js cmp xchg xor inc xchg cld push dec inc cmpsl (bad) daa mov out jmp and jne je icebp aam mov pop xor push xor lea xor cmp movsl aaa push dec mov paddd imul push shrl (bad) push push mov jmp imulb mov or das imul push fisubrl imul stos xlat lcall or sarb mov add iret das mov fwait xor pop push and jecxz add lods iret or jno rol jp jge popa adc es int ret sub pop addl or dec or mov ja fs dec cld xchg push inc jg or add xlat in adc or mov movsl repz sub mov xchg jno test stos sbb (bad) aad cmpsl or inc arpl test xchg push or adc mov xor scas loope (bad) jbe cmpl push push out data16 cmp dec lcall inc cmc xor (bad) fcoml lcall iret sub scas loope iret adc pop adc aam and mov cli aaa test ljmp mov mov cmp pop inc fmul or adc in or cld pushf ja loopne mov lahf xor adc pushf test xchg into push dec push mov divb shr notl jo cmp lock (bad) ljmp push pop inc in mov fs add (bad) popf jmp (bad) jb fldt outsl movsb dec inc js add push sub aam xchg push xor (bad) repnz fsubs fnsave lahf cmp push (bad) mov mov icebp hlt lods aaa jno dec lret adc dec or insb fs mov ds push sub inc xor imul xchg nop mull pop (bad) or dec arpl stos addr16 xchg cmp jg jno arpl cld in leave xchg fcompl adc testb mov ror adc mov out call inc push or stos push jge ss mov ss sbb xor jo jo lret or pop inc or js pop das imul add dec insl lods roll jg aam or stos fdivrs jl mov std (bad) and push clc scas cmp or add mov inc std mov lods mov inc push adc (bad) push xor dec jno clc cmp mov outsl xchg and pushf lret outsl pusha push int3 push pusha ret jmp in pop mov xchg pushf int xor scas shrl test pushf and dec cli inc sbb push (bad) or xor ret mov push xor adc lods and enter fmuls xchg or xchg push xchg mov out cmpsl rorb shll lret and adc or subl fildll nop mov hlt into mov xchg push faddp jns je sbb dec cmp push mov test lds xchg repnz mov stc in nop jo push cld sub jb adc jp mull cmpsl mov mov into mov cltd jge test jae mov pushf addr16 push out add xchg mov std cld std sahf jmp push mov add aas mov push stos inc jne pop lret inc adcl out sbb fnstsw adc rcrl sarb xor push push lcall es mov in xchg cwtl push dec fs out and divb add outsb notl pop cs je jmp dec sbb cmp and stc (bad) negl adc dec mov lods push adc cmp xchg sbb addr16 sub jne pop lock and arpl mov rclb dec test movsl add jne xchg stos mov cwtl and rcll cli push mov jae (bad) xor lock loopne cmp push cmp stos adc int mov jge push rcr sbb fnstenv das mov sbb clc push scas mov out das mov push pop xchg jns add add repnz inc lcall dec repnz lret pop movsb and imul push cmp mov jb fbstp jne mov jmp out pop pop int xchg js push xchg mov arpl lahf sahf and add (bad) pop sub (bad) xchg sbb cmp sub push pop movsb sti pusha cmp in daa mov lock push add out bound out test repz mov pop dec daa iret dec stos test sti ja loop or pop or outsl or sbb sti xchg insl movsl (bad) cld bound pop das and push push pop leave adc dec dec xchg loop dec cmpsl cmpsl sti cmpsb mov xchg mov pop xchg jnp divl iret dec sub (bad) adc (bad) dec enter lods fildll pop sub popf and sbb int3 aad rclb jmp jl adc cmpsb jns mov ret lods push fistl inc mov and xchg adc or sub mov xor mov mov cmp dec lds popa xchg mov inc mov adc inc stc nop xor ficompl in roll enter pop bound mov add inc cmp rcll xor push xor in imul push (bad) sbb xchg fwait add int mov test jp out sub pusha stos sub outsl sub pop fisttp dec mov pop test sbb rcl (bad) jmp cmp and sbb add add aam mov cs (bad) (bad) mov out in stos lds pop lahf add insb cwtl scas inc aam dec in popa fisub stos adc lods stc subl cmp or ds cmp or add inc inc adc test fsincos inc jnp inc lahf and cmp mov mov mov in int in popf lret hlt dec mov roll jmp dec mulb ffreep int3 push adc stc or test dec sbb movsl (bad) xor popf adc sahf cmc fwait imul arpl xor inc mov lods or adc add jbe cltd gs lret out je jno js (bad) das xchg mov push lods fsts jbe fldenv test mov mov fsts loopne or mov jbe xchg pop out mov jne xor mov jp mov lods inc cmp jmp mov mov pop scas cmp lret dec xchg aas je pop pop jl movb (bad) mov icebp cmp xchg js cltd pop ret popf cmp (bad) mov clc xchg leave pop pushf lret pop sbb in scas sbb pop test pop test jbe mov sub pop mov enter sbb jns ja repz mov imul push call je mov (bad) adc jge fst cmp push lock xchg mov push clc in ja mov jl cmpsb cmp gs push and lcall mov in jno xor lock test mov shll inc mov jmp push into (bad) push and imul loope xor (bad) movsb mov std mov push mov xor int mov jb pop inc mov rorl out hlt xor or pop jo cs dec dec jbe lcall lds sub hlt je loopne jecxz or mov (bad) pop dec push push and scas mov push sbb and (bad) es stos adc mov pushf xlat out sbb jp imul dec movsl inc fsubrs mov (bad) mov sti and jne dec and inc outsb out dec enter in iret lret stos cli or out and test stos dec into ficompl fistpll loopne rorb repz repnz mov xor mov pop psubusb data16 cltd fldt add mov in stos loope xor (bad) aaa inc push xor (bad) lret mov (bad) adc push ficompl jmp popf add jge or pop push sub in mov and inc addr16 sbb push (bad) jbe push scas mov mov adc outsb dec push daa cwtl sbb mov sbb mov xor push dec xchg xor ret push push aam clc ds xchg adc cmp imul repnz aas mov aas mov nop add and jge (bad) xchg decl test jae mov ret fdivr xchg inc stos xor sbb call popa les sub call daa lret mov push adc andl push pushf in in cmpsb sub stc xchg lock xchg sub dec lret mov cmp (bad) (bad) aad dec add daa loope inc sub (bad) pop cwtl cmpsl mov or sub ds frstor mov data16 pop fsub movsb xlat pusha ret push test aaa sbb clc push cmp push mov lock (bad) pop (bad) punpcklwd xchg out out scas cmpsl push dec in inc cltd cmp cwtl mov pushf push jl ss mov inc mov das xchg jp (bad) cmp cmpsb push push mov lea arpl xchg cld jne pop push and pusha dec dec or cmp divps adc xchg mov fldcw or xchg pop call and xchg dec shl mov sub jo push popf mov cmpsb shrb cmpsb nop pop mov push aam rclb lcall test lods fcomps mov cmp fsubrl push dec neg in sub fisttpll movsb (bad) mov dec dec (bad) hlt pop testb mov pop mov jp lcall lock in loopne test mov out mov iret outsl sub mov lcall stos push sub inc neg push inc hlt fadd xor push or (bad) mov call adc lea cmp fs xchg sahf roll loopne arpl xor popf dec ss cmc push xor xor out divb xlat mov cltd jnp pop popa push cmp incb cld xor mov xchg add inc dec jl mov cmp pushf mov pop test mov out (bad) clc jp (bad) mov outsb in push and mov loope jb shld and sub cwtl xor inc iret cmc or sti imul jl,pt pop adc push lea lods sub data16 xchg outsl xlat sarb cmp addl pop mov and in inc cmp dec fsubs stc cmp andb ljmp into test jg or cli loope aad mov scas (bad) push or ds xor xor xchg loope xor rcrl ss adc pusha subl fnsave shrl jecxz insb xor xchg push xchg mov mov jge popf out ljmp ljmp dec aam xchg ljmp mov int3 mov das shlb popf dec (bad) push stos fs cmp adc add cmp insb insb das out sahf ja out xchg into xchg (bad) pop jo mov imul inc xchg es enterw inc xor out adc aam pusha sarb pop xchg data16 pop push mov xchg jl (bad) fimul mov mov fs data16 hlt or movsl sbb cmp cmpsb cld jnp int3 jl xor leave adc test fnclex pushf std jnp mov in ljmp and xlat xor fidivrl bound and out ret in std jo iret fidivrl test mov daa loope mov sbb add inc into dec jne mov call aam test movsl pop popa cmpl mov or outsb jo scas cmp out jg lods in in sub ret lock add pop pop cmpsl repz fmuls outsb or mov and rcrb cmp pop cld and push lcall dec mov stc (bad) dec movsb jg stos lcall sub (bad) cmc lret aad adc mov mov rcrb jbe push and fidivrl mov arpl xchg adc jge inc cld int3 adc popa sub and cmc das orl jge insl fmul imul imul movsl push lock aaa subb lods bound mov or rcl popa adc rcrb and jno nop mov out pop or imul test lahf or adc mov inc xchg mov jecxz push mov xchg push mov ret cli fwait rclb out xchg insl test adc std outsl sahf cmc dec sbb rcl (bad) int3 xor xchg lods inc mov into sub shll inc aas test push cmpsb in jno ret es shll outsb sbb insb push jp out cld das jle jnp jnp leave aaa xchg sti scas push out out loope xchg rcrb inc mov dec (bad) enter sbb jns mov xchg fs mov cmp imul (bad) pop mov mov xchg (bad) xchg loopne or or insb in add gs iret pop and jno add out lcall xor shr or mov dec mov shlb mov insb cmpsl jo cmp xchg xor int3 lea dec or (bad) ds enter pop push mov (bad) jbe inc insl in stc pop jp adc and mov sbb sbb xchg pop test inc imul pop daa mov in or add push leave push mov mov test incb sbb lea add sub mov movsl ds and cmp xchg dec imul push push out jb mov sarl iret je les mov cmpsl xor mov jo ss mov mov xchg ret jp jmp sub jl in push xchg inc sub (bad) and cld lcall pop or pop in insb jecxz aad cmp or icebp leave dec add test jno lret mov pop mov and sub rcrb les mov pop jne push mov fcoms mov ret mov ja jle scas xlat xchg push jmp mov sub or cld xor (bad) stc movsl push nop jmp loope cmp xor adc push mov pop je popf sbb sub (bad) cld inc adc inc decb mov dec ja pop sub loopne cmp gs mov scas cmp cltd push mov and jmp push xor xchg (bad) clc and jb mov shr les jb dec outsb xchg lods ss pop pop xchg xchg sub hlt icebp inc jl dec rolb cmp push pop xor cmp into push mov (bad) in lcall dec fnop stos mov mull xor nop cmpsb or sbb movsl out adcb xor ss adc cwtl icebp sbb das and popf and push cli inc into test xchg jae xor dec inc jb (bad) mov xor cmpsb and fidivl pop stos stc jle shrb inc adc cld loopne pop ror jns lea das pop and add pop add shrb loop fldl dec cld mov loope inc inc int3 out adc outsl enter push add push sub pop rorl std pop push jo jns addr16 lahf rorb (bad) jns and mov sbb mov jmp push push out cmp inc or push mov or jo aam mov or in jne sbbb pop lods push lock and in data16 sbb outsb pushw lret jmp gs (bad) and fs jbe out or xchg jle push adc dec rcrl cltd xorl adc insl xor jmp icebp ja inc mov cltd (bad) jb dec inc adc inc popf insb hlt fstl xchg sbbb icebp aam mov repnz sbb les stos movsl out cli xor ret lret fistpll mov popf shll test pop jbe data16 jns dec (bad) stos sahf aam inc loope mov bound in mov mov push or icebp hlt jns push and mov test enter mov xor fs ret dec mulb inc xchg test pushf inc (bad) fmuls xchg adc or mov bound les sbb sbb clc mov pop adc (bad) jns xor pop cli xchg (bad) mov cmp das dec jae repnz icebp ljmp loop lea in lret imul and lret cltd les cmp in (bad) in ja popf scas lahf rcr jne clc out (bad) mov pushf sbb lea ffreep mov in lahf dec cmp jg (bad) mov xchg xchg sub mov ficompl sub push pop jne inc or fldcw adc xchg xchg addr16 jge xchg push sti cmp mov (bad) (bad) cmp ja mov (bad) mov or push fmull inc fldl jg pop or mov cmc into in xchg xor mov push xor repnz mov mov dec and sub into mov mov outsb lcall shr push jl mov (bad) and mov mov pop mov repz cmpsb sbb or mov jno cltd lret or and rol xor adc out outsl xchg bound xor hlt push jae add out dec pop (bad) and dec ds add out shl mov lea (bad) aam dec ja mov jae inc insb push mov int3 arpl leave push push or mov lods mov dec pushf dec xchg and ss in pop stos pop ljmp mov inc and adc adc outsl and ss int cwtl enter or ss dec fdivl sub and aas push xlat lret bound or inc pop aaa fcmovnu adc pop mov notl xchg (bad) repz pop shrl movsl inc add xchg cmp mov jecxz add rol gs vpsrad add bound clc (bad) loopne adcl aam icebp xchg pop scas push and rol mov lock dec in cmp xor cld sbb out fldcw test (bad) push stc mov cmp adc (bad) ss je sbb sbb int3 xor xchg mov (bad) xor mov fist inc insl mov scas mov test xor fcompl mov cmp out sub pop insl dec pop mov scas dec pop and (bad) repz xchg dec cmp cmp jo push or cs ss jno inc jmp push add nop insl dec sbb pop xchg cwtl add scas xchg popf cmp and mov roll sbb inc xchg movsb cmpsl lds insl outsb negl mov repnz popf test xchg mov sbb push inc sbb jnp dec das cwtl ret push shl xor mov cmp adc jno mov dec mov cmp push xchg std sub lea das mov mov stc inc pushf ljmp jnp fisubrl cld rcrb add lret ja jg jp add cmpsl (bad) dec dec jns mov lcall fiaddl clc cltd mov insl test int3 xor iret xor xchg imul (bad) dec (bad) addr16 and (bad) ja and sbb mov adcl and lods pushf insl clc push sbb jb xor push dec mov rol nop xchg xchg or add mov push aas xchg jo jle ret enter call lods or stc add fidivr sbb fcoml mov or ja imul mov mov popf movsb iret cmpsb dec loopne sbb das jge and outsl sub adc icebp (bad) push rorl pop pop lods cli fistl sub dec xchg int3 rcll xchg cmp popf aad (bad) sub sbb push cmp insb dec out dec push jmp arpl mov jle divb push jl lahf mov decl lret loopne push imul push pop push push incl (bad) dec sub mov mov jno cltd cmp mov out inc cli xor mov test cld int3 mull xor les sahf aad test mov dec add jb jo fsubrl lahf mov or jp sub cmp pop adc or bound test push jnp arpl adc (bad) mov rolb lahf mov and aad mov mov jne pop jae add out jo das aad pop hlt mov ljmp jnp add push pop and or in gs out jo or sarb js xchg mov call (bad) or test insl jl (bad) push shlb ja or inc imul cmp cwtl cmp jne cli inc add (bad) rcr bound push mov les and fucomip xor or test jno mov adc xchg dec jnp xchg xchg loope push mov mov std mov xchg add ja je out jp push sbb pop adc outsl or jecxz in sbb jmp xchg inc sbb jl mov and daa rcr cmp out lret test (bad) out loop sbb push out inc in sbb cltd adc (bad) in mov push push xchg xchg and pop outsb xchg clc jno pop gs mov ret add pop pop ss add and dec or movsb repz push jp inc push in stc jno xor adc and pop in ss push cld je fdivl jecxz,pn inc clc (bad) (bad) je pop pop mov das je sub out ljmp jmp xchg jmp xchg push sbb push (bad) insb call daa call adc cmpsl push push xor sub and or xlat pop cmp or xchg lea and lods clc es outsl lahf aad movsb inc inc (bad) insb mov cmp mov (bad) sub inc add mov sub shl or fildl sahf loope xor xchg and stos mov (bad) out stos or mov jo push int scas mov push add lods xchg dec fwait push mov jno adc mov and bound xchg (bad) sti testb iret add and mov sbb xchg loopne hlt xchg cmp mov ret cli in sbb loopne arpl fdivs pavgb jmp mov aaa pusha pop xlat mov (bad) mov stos dec std cmp lcall gs in into jb xor jnp mov xor mov mov (bad) dec push fdivp movsl sti int3 inc or push test inc (bad) (bad) leave pop adc popf adc pop daa out dec sbb add ror xchg call fsubp dec sbb pushf mov sub in das in mov enter or popf mov incb dec repz dec or outsl xor dec mov push lret adc fimul out add or es in loopne (bad) lcall iret push lds cs (bad) stos gs ret fild inc jae int3 push push aad in pop cmp jg mov (bad) into rorl int3 jno and lds and cld cmp fnstsw add mov pop xor sub jmp jo mov mov call jl dec ljmp rcrb push cmc cmpsl out xlat jbe adc push in cld mov int3 fisttpll lret (bad) lods rcrb (bad) cld in (bad) push scas ljmp fcoml leave fwait push es gs cmpsb in inc aas jae xor or cmpsl movsb add add leave sti pop cmc test mov mov int cmp push (bad) push repz repz pushf fs xchg xor cmp xchg sbb jno (bad) into sub fsubs adc inc mov xchg test shlb or inc xchg in pop jle push or mov mov jb or inc or dec mov fwait mov pop insl push push (bad) xor pop mov adc rcrl jle mov push pusha pusha sbb repnz push mov dec pushf fild shlb in gs rcll jl fldl shrl pop cli cwtl or mov mov jl mov cwtl rol xor (bad) jg jnp lret stos jo push lds adc nop scas in xchg cli enter je and daa xlat data16 jnp push push jecxz int mov (bad) movsb xor push and cld pop push cmpsb ljmp ds stc fiaddl repnz stc (bad) orl cltd xchg sarb sbb jnp jae sub push pusha jne ja cmp pop mov pop shll fsqrt ds jecxz pop pop test jae popa jle xchg sarl cwtl sub movsl aad xchg and rorb mov es loop lock inc int3 xchg scas adc insb push inc bound les adc pop in out pop aam dec mov (bad) adc mov mov lods and mov ja test js fisubr xor adc std mov xchg cmpb stc enter cmp cltd mov xor shrb fsubp in inc jbe or pop popa outsb ss sbb incl scas (bad) int3 sbb xchg loop (bad) sub xor (bad) or in adc ret nop hlt daa ss sub jmp add xor jae xor xchg je pop shr aad lea dec dec cmc sub cwtl call sti movsb inc inc push mov jge cmc movsl cmc (bad) jl mov lock jbe adc dec or les iret inc sahf pop sbb mov mov pop and lock mov jl in and (bad) int xorb xchg or mov push and pop add adc ja adc gs pop inc cmp fmull xor pusha add mov fnstenv loopne sub xchg int inc mov in mov stos pop pop cmpsb (bad) or in test jle jl js push inc mov adcl cwtl sub (bad) cmp pusha aad and imul insb push idivb inc mov mov xchg push cli leave lahf je or and push pop daa pop shr adc std scas jle mov out in cmp jg shrb push mov into pop mov or inc sbb lods (bad) das xlat mov sbb ret dec icebp adc or dec push std push mov enter adc adc outsb cmp mov je pop xchg leave les jge jecxz mov jp loope repnz js and fisttpll jae xor (bad) mov sbb pop inc es add cmp and mov cmp mov ss hlt aad (bad) and pop test pop push faddl and mov fbld sarb call dec sub cwtl mov stos xchg xchg addr16 jecxz test push clc xor lret aad clc and jecxz repnz pop repz push push cmovne add sti and bound test outsl mov mov jbe push scas insl and mov or movb out icebp sub mov daa mov push jnp xor mov mov push push add adc pop add test insl cld push push fnstenv sti xor push adc aam sahf js insb jno push int3 ret adc aam pushf jae jge push cmp mov jb fisub lcall adc adc adc xchg sub psrlw and out and mov stos mov mov int les push dec iret lahf xchg popl push (bad) mov jmp cwtl int pop xchg cld (bad) xor pusha hlt aad cltd mov das mov push mov (bad) pushf jle mov push fcmovnbe loopne inc imul lcall mov sub aad sti pop sbb pop test adc jg ljmp enter imul jae sbbb cmc sahf adc sbb loopne sbb enter test jl push xchg popf je movsb mov sbb dec nop add dec (bad) lock out pop in fildl add jne jns mov scas ja push mov pushf pop jg xorl imul jb addr16 add mov and push jbe int xchg das in mov ss lcall mov xchg push test mov cmpsl repz fucomi in sbbl xor inc pop mov sub or jbe mov scas mov jo inc inc sbb xorb (bad) dec xchg clc sub xorb and adc sub mov sub xlat outsb sbb nop jnp sbb out scas dec ss mov out scas outsb lcall fist out jge jae clc sbbl pushl push sbb outsl pop shrl lods ds sbb jp dec fxam ret sahf int dec mov stos sbb lret les xchg (bad) repz add and ficom add push out push outsl push (bad) cmp outsl add sub xchg faddl mov push cmpsb jbe jnp scas or daa xor add or test test xchg ljmp pop jnp out test pop aaa and lret xchg cmp stc lcall das fnsave iret ret stos repz pop (bad) dec and stos jns push call pop hlt jmp pusha data16 loop and rcrl pop dec push xchg xchg mov out sbb xor (bad) fnstsw mov jl push mov xor leave add and add sub or jnp push aam jb push jmp addr16 out xor or jnp js mov adc and pushf scas jle addl cmpsl xchg cld ret rolb cwtl cmp push lea inc subl add lcall xchg xchg repnz ret pop ss mov cli jmp ljmp pushf jns push loopne orl sub cmp mov xor mov fiaddl (bad) (bad) jae and insb lods ljmp call stc xor rorl and mov rcll out xchg cmpsl jbe fist mov or shrb mov jno mov lea adc std xchg test sti cli dec sbb push sub mov push dec jge test loope rorl sub pop lods in xchg or sbb sub push nop sahf into or adc xchg mov iret shlb jg test dec pop xchg mov fcoml xchg ret ret insb push lock repnz iret sbb lahf jno lods test mov push jae call testb scas mov cmp in call jecxz mov xchg add mov dec icebp in lea rclb mov pop mov lahf push daa (bad) ss loopne inc cmpsl iret imul push (bad) pop repz repnz fnsave mov sub imul (bad) cmpsb adc cltd pop das fwait push out imul push mov imul mov fwait in lds cwtl loopne ret adc nop test mov or insl fnstenv daa add add and adc sbb and pop push mov das or xchg (bad) in or push or push cli daa inc daa sarb test stc mov into push ss popf xor add imul addr16 push sbb sbb sti add in adc test in cmpsl adc stc fnop into stc pop pop push push mov xchg fisubl sub xor lret stos ljmp mov cmpsl loope or repnz jmp dec and popf cltd pop dec (bad) cmpsl lahf inc outsl or adc fldcw (bad) mov js add mov popf mov aaa xchg mov lods jg or xor mov jge ja aad sub movsl pop aaa sbb push stos mov fidivrl fsubs loopne inc or sub push sub add leave inc (bad) dec sbb push add pop sti shl mov rol into pop inc pop lds sarl (bad) lock mov clc pop cwtl test addr16 lds int3 cld not loopne jbe fucomi ljmp (bad) mov in xor cs dec (bad) cmp rcl mov push jl sbb sbb mov xor cmp add stos xor pop fmul (bad) repnz stos mov imul fist clc pushf lcall loope mov adc jno movsl cltd pop ljmp jnp mov cmpsl in ret xchg (bad) push adc mov outsb dec sub mov jl cmp data16 (bad) pop jne ss stos xchg dec insb (bad) scas out sub gs pushf pop shlb and mov sbb (bad) lock lods lods into clc xchg std ret das jle (bad) jbe mov (bad) adc or jg xchg add hlt ss fwait call movsl adc insb (bad) add in aaa fdiv outsb jecxz inc bound lret or adc dec inc dec gs repz sub in mov inc inc lret aam or out in or repz jbe sub push jle add lods enter jb cmpsl mov push cwtl mov sahf xor mov add add call push lods xchg mov push cwtl inc jmp jle test mov jmp fisubl out repnz out std pusha jecxz lods imul pop popa in movsb dec push mov xrelease push jb lahf or call jns jae jne xor inc mov sti mov jl mov loopne push add sub cmp in xchg or push addr16 js js xchg cs stos push leave mov xchg adc and jnp pop pop divl and out int leave mov inc dec divb fisttp idivl icebp sub outsb fisubr push pop fstpl loopne pop gs cmpsl lahf int3 mov inc adc sbb jge push arpl enter sbb pop pop rcrl cli jnp pop repnz jb das mov arpl imul subl and loopne add arpl push push hlt data16 push sub repnz lahf js push mov and push mov out sub fist test daa or sbb jns xchg test sbb int (bad) jo and imul xor movsb (bad) mov scas add add in xlat xlat outsb sub (bad) aam jmp ljmp call in (bad) xchg (bad) insb push sub arpl mov or outsl lret cmpsl clc rcrl loope clc cmp out pop arpl je repnz add in test sub mov pop out (bad) or or icebp lret fistpll outsl jmp loope mov push loop stos stc cmpb repnz aad or data16 xorb ror fcmovne lods fistp add enter das mov enter insl jbe fstpl sbb adc das pop scas out jns in ret andb sbb in fsubrl dec fstpl ljmp lret sbb dec popf dec test call push pop lods (bad) (bad) mov mov ds sti adc xor jp dec icebp push fucomip (bad) lahf sbb push sbb and sub mov push pop push mov xchg inc fidivrl xchg notl add or (bad) mov xchg or dec and inc repz pop js sti fwait aam sbb xchg aad icebp or or rorw test and (bad) stc in popf sbb xor and movsb dec and cmp mov mov xor pusha fisubl mov in fisubl inc fs pop mov mov mov adc shrb ret outsl xor mov adc inc aas mov (bad) les cs rcrb (bad) mov lods insb mov (bad) mov pop cmpsl cltd add lret fimul push fdivrs and jmp mov dec mov out lea shrl push xchg test sbb xchg jnp sub into push (bad) xchg movsl adcl mov mov fimull and dec psrld xchg and push mov ds and inc sub mov jl loope xlat mov insl pop adc js addr16 mov lcall and aam ret ja popf cli add pop fcmovnb aam push rep loopne jns and mov fdivrl add pop bnd jnp dec repnz jg rcl icebp sbb mov push jb inc mov js (bad) pand and lods sbb cmp xor push push mov cmp fnstsw xchg inc outsb mov int dec es (bad) mov mov push lret jl xchg les pusha fcmovu dec aam (bad) aas leave dec pop (bad) rcrl pop movb loop mov inc push aad pushf jle lock mov push (bad) cmp aam sbb push imul pop add cmp or sub mov mov fnop incl std int3 jg icebp cmc lret lret les popa or in iret subl loope scas lahf pop insl shrb sbb xchg les imul jecxz aad js pop ret cmpsl xchg sbb sbb int3 cwtl jl jecxz lock cmp stos sahf ja mov cs mov loopne fildl jl aas mov pop sbb iret xchg sahf inc jb imul stos fldl outsl in jno xor mov stos lret push insb (bad) mov mov dec inc cld sahf sbb je in xchg push sub mov pop adc mov mov repz add sbb mov scas or popf xchg pop (bad) pop xor xchg mov lock mov repnz jle bnd cmp push call mov sbb xchg jg imul int3 mov test stos icebp gs jle mov das sbb pusha xor xchg inc loopne fidivr sbb adc popa outsl cs push fisub loop shlb cmp movsl adc clc mov movsb int sbb cltd js sbb outsb or psrad sub pop mov aam je inc cmp out int3 dec pushf mov mov addr16 cmpsl test or divl pop and xor cmpsb shll dec call jle icebp arpl inc gs rcll insw sbb sahf mov (bad) add leave push mov mov mov and lea arpl push or dec stos (bad) cmpsl dec mov push adc pop std jle dec xchg iret dec sbb inc sub cltd sub ror sub dec jp mov sbb out sarl push adc jns mov adc (bad) xlat jne dec (bad) add test icebp mov inc arpl lds cmp fmulp mov es int3 mov xchg mov xchg xor insl inc (bad) xor lock xor dec repnz jnp inc pop inc iret inc aam cwtl jmp and pusha push mov or outsb mov test push in (bad) pushf rol push jmp inc jae (bad) cmp cmp sub jne mov add push aas jae xchg sbb int3 nop xor outsb pcmpeqb roll sbb sahf mov sub jns outsb add fnsave ja bound sub sbb lret xchg sbb das mov or fwait in mov mov inc xlat or xchg icebp fdivrs adc in pop add test and ficomp js std dec imul orl inc (bad) frstor and jmp pop push xchg mov ret aas pop mov add out push cs xchg cwtl stos add jge mov fdivs ret stos jo ljmp test jp add jg add (bad) jmp push adc out ss dec jnp jbe (bad) divb in mov lret push adc pop mov xor cld jmp cld push mov xor les shrb xor (bad) jo push sub push test push lret into and in inc mov mov cmp mov push pushf das pop and test mov or cmp fisub movsb pusha in arpl cltd out (bad) mov and push mov push data16 test xor aam xor mov imul dec jne int3 ja addr16 popa jmp addb int fisub les mov pop ror mov add cmp dec sbb sub sub xchg (bad) faddl out aad or loopne sbb pop clc xor fildl inc jp enter fstp notb pop test mov mov mov loopne frstor gs xchg mov jge xchg xchg mov jb lock in mov jb cmp add inc or ret xchg mov inc push mov mov xor cltd mul mov pop ret rol lods push lock jno mov fisubl sti dec mov push adc inc int xchg enter fmuls das mov arpl test or outsb sub test or jb incl add add add inc push dec inc add add add add or add jbe xor xor add add add add add jle add add add push je imul add add add push push add or add add add inc push dec inc add add or add add add inc insb outsl bound add add add inc push add or add add add add add add add or add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add leave add add leave add add aas add add add add push add inc add add add (bad) add add add add add add add add add add xchg add add add add and add add add add xchg add add and add add add add and add add add add add add add inc add add xchg add add verr add add add add add add add add add add add add add pop add add add add add jg add add mov add add add add add add add add add add add add add add add sub add add cmpsb add add add add add add add add add add add add add add add add add add add add add sub mov add loop xor insl add add test in add add add add add add pop add add sub add add les and pop add and pop add add add adc inc add stc add add adc add add add add and add add or add or sub add add add add add aas add add add add in xchg in mov mov add outsb imul je je insl outsb je insl jae outsl jb imul outsl jae data16 push imul jae arpl push jns je insl cs imul inc outsl jb jae aaa xor js pop inc insb insl gs js dec jno xor dec gs dec push xor insl xor push jb,pn jae jne arpl add mov in lahf in cmpsl in fwait add mov in cmpsl in cmpsb in xchg add mov in test mov test mov in cmpsb in lcall je push jns je insl add add je jns add jb outsb add je inc imul dec imul je push imul jae arpl inc outsl insl jo insb gs gs imul je inc gs in mov mov in mov in mov mov in lahf in mov in xchg in mov mov add mov in lods in mov mov xchg in xchg in mov mov cltd in mov mov in fwait add mov in mov mov jb insl inc jb popa jns je jb bound add arpl add mov in mov mov add mov in movsl in mov in cltd in mov mov add mov in mov mov add mov in lods in mov in mov mov in sahf add mov in pushf in xchg in fwait add mov in movsl in mov mov mov mov in scas in cltd add arpl je outsl outsb add je xor inc gs jns gs jb insl dec popa outsb fs add outsb je insl gs jns gs popa outsb fs add je dec gs popa add jae popa addr16 outsl js push push imul jae insb je in mov mov in mov in lahf in lahf in xchg in mov mov and movsb in xchg mov add mov in lods in mov mov lods in mov mov add mov in popf in sahf in mov in mov mov in mov in test mov in lcall mov mov in mov inc outsl insl jo insb popa je outsl outsb push gs popa js je outsl outsb jae je jb bound add jae gs cs jne je insl gs outsl insl jo insb gs gs imul outsb je insl gs outsl insl jo je bound imul bound add jbe jb imul inc outsl fs je jb bound add jae gs cs arpl imul push add jae je add add bound push add je add inc add je dec add je push add cmova add add jo add or popa add add or add add add push add jae je add add add insb add arpl je imul add add add add outsb add outsl add or jbe outsl add add pop outsl add push add jb popa add add add jae add inc add je push add outsl add add je jns add push add jae je add add add insb add arpl je imul add jb outsl add add je dec add data16 add inc add je push add insb add add or outsb add add add push add je push add insb add add or popa add add add push add add add jae add je add add add add add add add pop add add add push add add add jb add popa add add add add outsb add add add insb add add add inc add add add push add add add jne add arpl add dec add add add add add add add cmp add pop add add add jno add inc add add add add add dec add add add push add add add add add dec add add add imul add add push add add add dec add add add dec add add add add add jbe add data16 add add xor add dec add xor jns jae je add add add je add je jb imul inc add imul add add push add jae je add add je jb imul pop add add jo add add adc add je jb imul add push add jae je add add arpl je imul je outsl add add add je add outsb add je popa add arpl add pop push add jae je add add add add pop push add jae je add add bound push add je pop add add push add jae je add add jb jb popa add add outsb add je push add and aam inc mov xchg dec and or xor mov mov pop jg aad cmp sbb sbb push sbb add adc push add add or adc push sbb add sbb pop or or sbb sbb push or add push sbb sbb add add add add sbb sbb pop add push sbb sbb pop cmp sbb or sbb sbb sbb sbb push sbb push sbb sbb push sbb sbb push sbb sbb push sbb sbb push sbb sbb push sbb push sbb sbb push sbb push sbb push sbb push sbb push sbb adc adc add add add push add push or add sbb sbb add push sbb adc sbb sbb adc sbb sbb push push add sbb sbb or and add or add add add add add add push add push jb jo outsl outsb inc js gs imul ja add test jae gs cs arpl imul imul cs arpl imul jae imul imul insl jae outsl jb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp push imul gs imul outsl outsb add add push jl add add add add add add outsl jb js dec popa imul jb gs insb add add add and 